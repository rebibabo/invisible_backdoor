<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6424.c" pos:tabs="8"><function pos:start="1:1" pos:end="173:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">write_picture</name><parameter_list pos:start="1:26" pos:end="3:52">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:55"><decl pos:start="1:47" pos:end="1:55"><type pos:start="1:47" pos:end="1:55"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:55">index</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:75"><decl pos:start="1:58" pos:end="1:75"><type pos:start="1:58" pos:end="1:75"><name pos:start="1:58" pos:end="1:66">AVPicture</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:75">picture</name></decl></parameter>, 

                          <parameter pos:start="3:27" pos:end="3:37"><decl pos:start="3:27" pos:end="3:37"><type pos:start="3:27" pos:end="3:37"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:37">pix_fmt</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:44"><decl pos:start="3:40" pos:end="3:44"><type pos:start="3:40" pos:end="3:44"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:44">w</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:51"><decl pos:start="3:47" pos:end="3:51"><type pos:start="3:47" pos:end="3:51"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:51">h</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="173:1">{<block_content pos:start="7:5" pos:end="171:14">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">UINT8</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:14">buf</name></decl>, <decl pos:start="7:17" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:11"><modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">src</name></decl>, <decl pos:start="7:23" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:11"><modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:27">dest</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">size</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">j</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:45"><expr pos:start="13:5" pos:end="13:44"><name pos:start="13:5" pos:end="13:8">size</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:44"><name pos:start="13:12" pos:end="13:29">avpicture_get_size</name><argument_list pos:start="13:30" pos:end="13:44">(<argument pos:start="13:31" pos:end="13:37"><expr pos:start="13:31" pos:end="13:37"><name pos:start="13:31" pos:end="13:37">pix_fmt</name></expr></argument>, <argument pos:start="13:40" pos:end="13:40"><expr pos:start="13:40" pos:end="13:40"><name pos:start="13:40" pos:end="13:40">w</name></expr></argument>, <argument pos:start="13:43" pos:end="13:43"><expr pos:start="13:43" pos:end="13:43"><name pos:start="13:43" pos:end="13:43">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:7">buf</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:22"><name pos:start="15:11" pos:end="15:16">malloc</name><argument_list pos:start="15:17" pos:end="15:22">(<argument pos:start="15:18" pos:end="15:21"><expr pos:start="15:18" pos:end="15:21"><name pos:start="15:18" pos:end="15:21">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:15"><if pos:start="17:5" pos:end="19:15">if <condition pos:start="17:8" pos:end="17:13">(<expr pos:start="17:9" pos:end="17:12"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:12">buf</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:15"><block_content pos:start="19:9" pos:end="19:15">

        <return pos:start="19:9" pos:end="19:15">return;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="25:32">/* XXX: not efficient, should add test if we can take

       directly the AVPicture */</comment>

    <switch pos:start="27:5" pos:end="167:5">switch<condition pos:start="27:11" pos:end="27:19">(<expr pos:start="27:12" pos:end="27:18"><name pos:start="27:12" pos:end="27:18">pix_fmt</name></expr>)</condition> <block pos:start="27:21" pos:end="167:5">{<block_content pos:start="29:5" pos:end="165:15">

    <case pos:start="29:5" pos:end="29:25">case <expr pos:start="29:10" pos:end="29:24"><name pos:start="29:10" pos:end="29:24">PIX_FMT_YUV420P</name></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:19"><expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:12">dest</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:18">buf</name></expr>;</expr_stmt>

        <for pos:start="33:9" pos:end="55:9">for<control pos:start="33:12" pos:end="33:24">(<init pos:start="33:13" pos:end="33:16"><expr pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:13">i</name><operator pos:start="33:14" pos:end="33:14">=</operator><literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>;</init><condition pos:start="33:17" pos:end="33:20"><expr pos:start="33:17" pos:end="33:19"><name pos:start="33:17" pos:end="33:17">i</name><operator pos:start="33:18" pos:end="33:18">&lt;</operator><literal type="number" pos:start="33:19" pos:end="33:19">3</literal></expr>;</condition><incr pos:start="33:21" pos:end="33:23"><expr pos:start="33:21" pos:end="33:23"><name pos:start="33:21" pos:end="33:21">i</name><operator pos:start="33:22" pos:end="33:23">++</operator></expr></incr>)</control> <block pos:start="33:26" pos:end="55:9">{<block_content pos:start="35:13" pos:end="53:13">

            <if_stmt pos:start="35:13" pos:end="41:13"><if pos:start="35:13" pos:end="41:13">if <condition pos:start="35:16" pos:end="35:23">(<expr pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:20">==</operator> <literal type="number" pos:start="35:22" pos:end="35:22">1</literal></expr>)</condition> <block pos:start="35:25" pos:end="41:13">{<block_content pos:start="37:17" pos:end="39:24">

                <expr_stmt pos:start="37:17" pos:end="37:24"><expr pos:start="37:17" pos:end="37:23"><name pos:start="37:17" pos:end="37:17">w</name> <operator pos:start="37:19" pos:end="37:21">&gt;&gt;=</operator> <literal type="number" pos:start="37:23" pos:end="37:23">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:24"><expr pos:start="39:17" pos:end="39:23"><name pos:start="39:17" pos:end="39:17">h</name> <operator pos:start="39:19" pos:end="39:21">&gt;&gt;=</operator> <literal type="number" pos:start="39:23" pos:end="39:23">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:15">src</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:34"><name pos:start="43:19" pos:end="43:25">picture</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:31">data</name><index pos:start="43:32" pos:end="43:34">[<expr pos:start="43:33" pos:end="43:33"><name pos:start="43:33" pos:end="43:33">i</name></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="45:13" pos:end="53:13">for<control pos:start="45:16" pos:end="45:28">(<init pos:start="45:17" pos:end="45:20"><expr pos:start="45:17" pos:end="45:19"><name pos:start="45:17" pos:end="45:17">j</name><operator pos:start="45:18" pos:end="45:18">=</operator><literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>;</init><condition pos:start="45:21" pos:end="45:24"><expr pos:start="45:21" pos:end="45:23"><name pos:start="45:21" pos:end="45:21">j</name><operator pos:start="45:22" pos:end="45:22">&lt;</operator><name pos:start="45:23" pos:end="45:23">h</name></expr>;</condition><incr pos:start="45:25" pos:end="45:27"><expr pos:start="45:25" pos:end="45:27"><name pos:start="45:25" pos:end="45:25">j</name><operator pos:start="45:26" pos:end="45:27">++</operator></expr></incr>)</control> <block pos:start="45:30" pos:end="53:13">{<block_content pos:start="47:17" pos:end="51:44">

                <expr_stmt pos:start="47:17" pos:end="47:37"><expr pos:start="47:17" pos:end="47:36"><call pos:start="47:17" pos:end="47:36"><name pos:start="47:17" pos:end="47:22">memcpy</name><argument_list pos:start="47:23" pos:end="47:36">(<argument pos:start="47:24" pos:end="47:27"><expr pos:start="47:24" pos:end="47:27"><name pos:start="47:24" pos:end="47:27">dest</name></expr></argument>, <argument pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><name pos:start="47:30" pos:end="47:32">src</name></expr></argument>, <argument pos:start="47:35" pos:end="47:35"><expr pos:start="47:35" pos:end="47:35"><name pos:start="47:35" pos:end="47:35">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:26"><expr pos:start="49:17" pos:end="49:25"><name pos:start="49:17" pos:end="49:20">dest</name> <operator pos:start="49:22" pos:end="49:23">+=</operator> <name pos:start="49:25" pos:end="49:25">w</name></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:44"><expr pos:start="51:17" pos:end="51:43"><name pos:start="51:17" pos:end="51:19">src</name> <operator pos:start="51:21" pos:end="51:22">+=</operator> <name pos:start="51:24" pos:end="51:43"><name pos:start="51:24" pos:end="51:30">picture</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:40">linesize</name><index pos:start="51:41" pos:end="51:43">[<expr pos:start="51:42" pos:end="51:42"><name pos:start="51:42" pos:end="51:42">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:25">case <expr pos:start="59:10" pos:end="59:24"><name pos:start="59:10" pos:end="59:24">PIX_FMT_YUV422P</name></expr>:</case>

        <expr_stmt pos:start="61:9" pos:end="61:27"><expr pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:12">size</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <operator pos:start="61:16" pos:end="61:16">(</operator><name pos:start="61:17" pos:end="61:17">w</name> <operator pos:start="61:19" pos:end="61:19">*</operator> <name pos:start="61:21" pos:end="61:21">h</name><operator pos:start="61:22" pos:end="61:22">)</operator> <operator pos:start="61:24" pos:end="61:24">*</operator> <literal type="number" pos:start="61:26" pos:end="61:26">2</literal></expr>;</expr_stmt> 

        <expr_stmt pos:start="63:9" pos:end="63:27"><expr pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:11">buf</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="63:26"><name pos:start="63:15" pos:end="63:20">malloc</name><argument_list pos:start="63:21" pos:end="63:26">(<argument pos:start="63:22" pos:end="63:25"><expr pos:start="63:22" pos:end="63:25"><name pos:start="63:22" pos:end="63:25">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:19"><expr pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:12">dest</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <name pos:start="65:16" pos:end="65:18">buf</name></expr>;</expr_stmt>

        <for pos:start="67:9" pos:end="87:9">for<control pos:start="67:12" pos:end="67:24">(<init pos:start="67:13" pos:end="67:16"><expr pos:start="67:13" pos:end="67:15"><name pos:start="67:13" pos:end="67:13">i</name><operator pos:start="67:14" pos:end="67:14">=</operator><literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr>;</init><condition pos:start="67:17" pos:end="67:20"><expr pos:start="67:17" pos:end="67:19"><name pos:start="67:17" pos:end="67:17">i</name><operator pos:start="67:18" pos:end="67:18">&lt;</operator><literal type="number" pos:start="67:19" pos:end="67:19">3</literal></expr>;</condition><incr pos:start="67:21" pos:end="67:23"><expr pos:start="67:21" pos:end="67:23"><name pos:start="67:21" pos:end="67:21">i</name><operator pos:start="67:22" pos:end="67:23">++</operator></expr></incr>)</control> <block pos:start="67:26" pos:end="87:9">{<block_content pos:start="69:13" pos:end="85:13">

            <if_stmt pos:start="69:13" pos:end="73:13"><if pos:start="69:13" pos:end="73:13">if <condition pos:start="69:16" pos:end="69:23">(<expr pos:start="69:17" pos:end="69:22"><name pos:start="69:17" pos:end="69:17">i</name> <operator pos:start="69:19" pos:end="69:20">==</operator> <literal type="number" pos:start="69:22" pos:end="69:22">1</literal></expr>)</condition> <block pos:start="69:25" pos:end="73:13">{<block_content pos:start="71:17" pos:end="71:24">

                <expr_stmt pos:start="71:17" pos:end="71:24"><expr pos:start="71:17" pos:end="71:23"><name pos:start="71:17" pos:end="71:17">w</name> <operator pos:start="71:19" pos:end="71:21">&gt;&gt;=</operator> <literal type="number" pos:start="71:23" pos:end="71:23">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:35"><expr pos:start="75:13" pos:end="75:34"><name pos:start="75:13" pos:end="75:15">src</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <name pos:start="75:19" pos:end="75:34"><name pos:start="75:19" pos:end="75:25">picture</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:31">data</name><index pos:start="75:32" pos:end="75:34">[<expr pos:start="75:33" pos:end="75:33"><name pos:start="75:33" pos:end="75:33">i</name></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="77:13" pos:end="85:13">for<control pos:start="77:16" pos:end="77:28">(<init pos:start="77:17" pos:end="77:20"><expr pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:17">j</name><operator pos:start="77:18" pos:end="77:18">=</operator><literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>;</init><condition pos:start="77:21" pos:end="77:24"><expr pos:start="77:21" pos:end="77:23"><name pos:start="77:21" pos:end="77:21">j</name><operator pos:start="77:22" pos:end="77:22">&lt;</operator><name pos:start="77:23" pos:end="77:23">h</name></expr>;</condition><incr pos:start="77:25" pos:end="77:27"><expr pos:start="77:25" pos:end="77:27"><name pos:start="77:25" pos:end="77:25">j</name><operator pos:start="77:26" pos:end="77:27">++</operator></expr></incr>)</control> <block pos:start="77:30" pos:end="85:13">{<block_content pos:start="79:17" pos:end="83:44">

                <expr_stmt pos:start="79:17" pos:end="79:37"><expr pos:start="79:17" pos:end="79:36"><call pos:start="79:17" pos:end="79:36"><name pos:start="79:17" pos:end="79:22">memcpy</name><argument_list pos:start="79:23" pos:end="79:36">(<argument pos:start="79:24" pos:end="79:27"><expr pos:start="79:24" pos:end="79:27"><name pos:start="79:24" pos:end="79:27">dest</name></expr></argument>, <argument pos:start="79:30" pos:end="79:32"><expr pos:start="79:30" pos:end="79:32"><name pos:start="79:30" pos:end="79:32">src</name></expr></argument>, <argument pos:start="79:35" pos:end="79:35"><expr pos:start="79:35" pos:end="79:35"><name pos:start="79:35" pos:end="79:35">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:26"><expr pos:start="81:17" pos:end="81:25"><name pos:start="81:17" pos:end="81:20">dest</name> <operator pos:start="81:22" pos:end="81:23">+=</operator> <name pos:start="81:25" pos:end="81:25">w</name></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:44"><expr pos:start="83:17" pos:end="83:43"><name pos:start="83:17" pos:end="83:19">src</name> <operator pos:start="83:21" pos:end="83:22">+=</operator> <name pos:start="83:24" pos:end="83:43"><name pos:start="83:24" pos:end="83:30">picture</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:40">linesize</name><index pos:start="83:41" pos:end="83:43">[<expr pos:start="83:42" pos:end="83:42"><name pos:start="83:42" pos:end="83:42">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:25">case <expr pos:start="91:10" pos:end="91:24"><name pos:start="91:10" pos:end="91:24">PIX_FMT_YUV444P</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:27"><expr pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:12">size</name> <operator pos:start="93:14" pos:end="93:14">=</operator> <operator pos:start="93:16" pos:end="93:16">(</operator><name pos:start="93:17" pos:end="93:17">w</name> <operator pos:start="93:19" pos:end="93:19">*</operator> <name pos:start="93:21" pos:end="93:21">h</name><operator pos:start="93:22" pos:end="93:22">)</operator> <operator pos:start="93:24" pos:end="93:24">*</operator> <literal type="number" pos:start="93:26" pos:end="93:26">3</literal></expr>;</expr_stmt> 

        <expr_stmt pos:start="95:9" pos:end="95:27"><expr pos:start="95:9" pos:end="95:26"><name pos:start="95:9" pos:end="95:11">buf</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <call pos:start="95:15" pos:end="95:26"><name pos:start="95:15" pos:end="95:20">malloc</name><argument_list pos:start="95:21" pos:end="95:26">(<argument pos:start="95:22" pos:end="95:25"><expr pos:start="95:22" pos:end="95:25"><name pos:start="95:22" pos:end="95:25">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:19"><expr pos:start="97:9" pos:end="97:18"><name pos:start="97:9" pos:end="97:12">dest</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <name pos:start="97:16" pos:end="97:18">buf</name></expr>;</expr_stmt>

        <for pos:start="99:9" pos:end="113:9">for<control pos:start="99:12" pos:end="99:24">(<init pos:start="99:13" pos:end="99:16"><expr pos:start="99:13" pos:end="99:15"><name pos:start="99:13" pos:end="99:13">i</name><operator pos:start="99:14" pos:end="99:14">=</operator><literal type="number" pos:start="99:15" pos:end="99:15">0</literal></expr>;</init><condition pos:start="99:17" pos:end="99:20"><expr pos:start="99:17" pos:end="99:19"><name pos:start="99:17" pos:end="99:17">i</name><operator pos:start="99:18" pos:end="99:18">&lt;</operator><literal type="number" pos:start="99:19" pos:end="99:19">3</literal></expr>;</condition><incr pos:start="99:21" pos:end="99:23"><expr pos:start="99:21" pos:end="99:23"><name pos:start="99:21" pos:end="99:21">i</name><operator pos:start="99:22" pos:end="99:23">++</operator></expr></incr>)</control> <block pos:start="99:26" pos:end="113:9">{<block_content pos:start="101:13" pos:end="111:13">

            <expr_stmt pos:start="101:13" pos:end="101:35"><expr pos:start="101:13" pos:end="101:34"><name pos:start="101:13" pos:end="101:15">src</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <name pos:start="101:19" pos:end="101:34"><name pos:start="101:19" pos:end="101:25">picture</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:31">data</name><index pos:start="101:32" pos:end="101:34">[<expr pos:start="101:33" pos:end="101:33"><name pos:start="101:33" pos:end="101:33">i</name></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="103:13" pos:end="111:13">for<control pos:start="103:16" pos:end="103:28">(<init pos:start="103:17" pos:end="103:20"><expr pos:start="103:17" pos:end="103:19"><name pos:start="103:17" pos:end="103:17">j</name><operator pos:start="103:18" pos:end="103:18">=</operator><literal type="number" pos:start="103:19" pos:end="103:19">0</literal></expr>;</init><condition pos:start="103:21" pos:end="103:24"><expr pos:start="103:21" pos:end="103:23"><name pos:start="103:21" pos:end="103:21">j</name><operator pos:start="103:22" pos:end="103:22">&lt;</operator><name pos:start="103:23" pos:end="103:23">h</name></expr>;</condition><incr pos:start="103:25" pos:end="103:27"><expr pos:start="103:25" pos:end="103:27"><name pos:start="103:25" pos:end="103:25">j</name><operator pos:start="103:26" pos:end="103:27">++</operator></expr></incr>)</control> <block pos:start="103:30" pos:end="111:13">{<block_content pos:start="105:17" pos:end="109:44">

                <expr_stmt pos:start="105:17" pos:end="105:37"><expr pos:start="105:17" pos:end="105:36"><call pos:start="105:17" pos:end="105:36"><name pos:start="105:17" pos:end="105:22">memcpy</name><argument_list pos:start="105:23" pos:end="105:36">(<argument pos:start="105:24" pos:end="105:27"><expr pos:start="105:24" pos:end="105:27"><name pos:start="105:24" pos:end="105:27">dest</name></expr></argument>, <argument pos:start="105:30" pos:end="105:32"><expr pos:start="105:30" pos:end="105:32"><name pos:start="105:30" pos:end="105:32">src</name></expr></argument>, <argument pos:start="105:35" pos:end="105:35"><expr pos:start="105:35" pos:end="105:35"><name pos:start="105:35" pos:end="105:35">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:26"><expr pos:start="107:17" pos:end="107:25"><name pos:start="107:17" pos:end="107:20">dest</name> <operator pos:start="107:22" pos:end="107:23">+=</operator> <name pos:start="107:25" pos:end="107:25">w</name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:44"><expr pos:start="109:17" pos:end="109:43"><name pos:start="109:17" pos:end="109:19">src</name> <operator pos:start="109:21" pos:end="109:22">+=</operator> <name pos:start="109:24" pos:end="109:43"><name pos:start="109:24" pos:end="109:30">picture</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:40">linesize</name><index pos:start="109:41" pos:end="109:43">[<expr pos:start="109:42" pos:end="109:42"><name pos:start="109:42" pos:end="109:42">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:24">case <expr pos:start="117:10" pos:end="117:23"><name pos:start="117:10" pos:end="117:23">PIX_FMT_YUV422</name></expr>:</case>

        <expr_stmt pos:start="119:9" pos:end="119:27"><expr pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:12">size</name> <operator pos:start="119:14" pos:end="119:14">=</operator> <operator pos:start="119:16" pos:end="119:16">(</operator><name pos:start="119:17" pos:end="119:17">w</name> <operator pos:start="119:19" pos:end="119:19">*</operator> <name pos:start="119:21" pos:end="119:21">h</name><operator pos:start="119:22" pos:end="119:22">)</operator> <operator pos:start="119:24" pos:end="119:24">*</operator> <literal type="number" pos:start="119:26" pos:end="119:26">2</literal></expr>;</expr_stmt> 

        <expr_stmt pos:start="121:9" pos:end="121:27"><expr pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:11">buf</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <call pos:start="121:15" pos:end="121:26"><name pos:start="121:15" pos:end="121:20">malloc</name><argument_list pos:start="121:21" pos:end="121:26">(<argument pos:start="121:22" pos:end="121:25"><expr pos:start="121:22" pos:end="121:25"><name pos:start="121:22" pos:end="121:25">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:19"><expr pos:start="123:9" pos:end="123:18"><name pos:start="123:9" pos:end="123:12">dest</name> <operator pos:start="123:14" pos:end="123:14">=</operator> <name pos:start="123:16" pos:end="123:18">buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:31"><expr pos:start="125:9" pos:end="125:30"><name pos:start="125:9" pos:end="125:11">src</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <name pos:start="125:15" pos:end="125:30"><name pos:start="125:15" pos:end="125:21">picture</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:27">data</name><index pos:start="125:28" pos:end="125:30">[<expr pos:start="125:29" pos:end="125:29"><literal type="number" pos:start="125:29" pos:end="125:29">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="127:9" pos:end="135:9">for<control pos:start="127:12" pos:end="127:24">(<init pos:start="127:13" pos:end="127:16"><expr pos:start="127:13" pos:end="127:15"><name pos:start="127:13" pos:end="127:13">j</name><operator pos:start="127:14" pos:end="127:14">=</operator><literal type="number" pos:start="127:15" pos:end="127:15">0</literal></expr>;</init><condition pos:start="127:17" pos:end="127:20"><expr pos:start="127:17" pos:end="127:19"><name pos:start="127:17" pos:end="127:17">j</name><operator pos:start="127:18" pos:end="127:18">&lt;</operator><name pos:start="127:19" pos:end="127:19">h</name></expr>;</condition><incr pos:start="127:21" pos:end="127:23"><expr pos:start="127:21" pos:end="127:23"><name pos:start="127:21" pos:end="127:21">j</name><operator pos:start="127:22" pos:end="127:23">++</operator></expr></incr>)</control> <block pos:start="127:26" pos:end="135:9">{<block_content pos:start="129:13" pos:end="133:40">

            <expr_stmt pos:start="129:13" pos:end="129:37"><expr pos:start="129:13" pos:end="129:36"><call pos:start="129:13" pos:end="129:36"><name pos:start="129:13" pos:end="129:18">memcpy</name><argument_list pos:start="129:19" pos:end="129:36">(<argument pos:start="129:20" pos:end="129:23"><expr pos:start="129:20" pos:end="129:23"><name pos:start="129:20" pos:end="129:23">dest</name></expr></argument>, <argument pos:start="129:26" pos:end="129:28"><expr pos:start="129:26" pos:end="129:28"><name pos:start="129:26" pos:end="129:28">src</name></expr></argument>, <argument pos:start="129:31" pos:end="129:35"><expr pos:start="129:31" pos:end="129:35"><name pos:start="129:31" pos:end="129:31">w</name> <operator pos:start="129:33" pos:end="129:33">*</operator> <literal type="number" pos:start="129:35" pos:end="129:35">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:26"><expr pos:start="131:13" pos:end="131:25"><name pos:start="131:13" pos:end="131:16">dest</name> <operator pos:start="131:18" pos:end="131:19">+=</operator> <name pos:start="131:21" pos:end="131:21">w</name> <operator pos:start="131:23" pos:end="131:23">*</operator> <literal type="number" pos:start="131:25" pos:end="131:25">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:40"><expr pos:start="133:13" pos:end="133:39"><name pos:start="133:13" pos:end="133:15">src</name> <operator pos:start="133:17" pos:end="133:18">+=</operator> <name pos:start="133:20" pos:end="133:39"><name pos:start="133:20" pos:end="133:26">picture</name><operator pos:start="133:27" pos:end="133:28">-&gt;</operator><name pos:start="133:29" pos:end="133:36">linesize</name><index pos:start="133:37" pos:end="133:39">[<expr pos:start="133:38" pos:end="133:38"><literal type="number" pos:start="133:38" pos:end="133:38">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    <case pos:start="139:5" pos:end="139:23">case <expr pos:start="139:10" pos:end="139:22"><name pos:start="139:10" pos:end="139:22">PIX_FMT_RGB24</name></expr>:</case>

    <case pos:start="141:5" pos:end="141:23">case <expr pos:start="141:10" pos:end="141:22"><name pos:start="141:10" pos:end="141:22">PIX_FMT_BGR24</name></expr>:</case>

        <expr_stmt pos:start="143:9" pos:end="143:27"><expr pos:start="143:9" pos:end="143:26"><name pos:start="143:9" pos:end="143:12">size</name> <operator pos:start="143:14" pos:end="143:14">=</operator> <operator pos:start="143:16" pos:end="143:16">(</operator><name pos:start="143:17" pos:end="143:17">w</name> <operator pos:start="143:19" pos:end="143:19">*</operator> <name pos:start="143:21" pos:end="143:21">h</name><operator pos:start="143:22" pos:end="143:22">)</operator> <operator pos:start="143:24" pos:end="143:24">*</operator> <literal type="number" pos:start="143:26" pos:end="143:26">3</literal></expr>;</expr_stmt> 

        <expr_stmt pos:start="145:9" pos:end="145:27"><expr pos:start="145:9" pos:end="145:26"><name pos:start="145:9" pos:end="145:11">buf</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <call pos:start="145:15" pos:end="145:26"><name pos:start="145:15" pos:end="145:20">malloc</name><argument_list pos:start="145:21" pos:end="145:26">(<argument pos:start="145:22" pos:end="145:25"><expr pos:start="145:22" pos:end="145:25"><name pos:start="145:22" pos:end="145:25">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:19"><expr pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:12">dest</name> <operator pos:start="147:14" pos:end="147:14">=</operator> <name pos:start="147:16" pos:end="147:18">buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:31"><expr pos:start="149:9" pos:end="149:30"><name pos:start="149:9" pos:end="149:11">src</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <name pos:start="149:15" pos:end="149:30"><name pos:start="149:15" pos:end="149:21">picture</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:27">data</name><index pos:start="149:28" pos:end="149:30">[<expr pos:start="149:29" pos:end="149:29"><literal type="number" pos:start="149:29" pos:end="149:29">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="151:9" pos:end="159:9">for<control pos:start="151:12" pos:end="151:24">(<init pos:start="151:13" pos:end="151:16"><expr pos:start="151:13" pos:end="151:15"><name pos:start="151:13" pos:end="151:13">j</name><operator pos:start="151:14" pos:end="151:14">=</operator><literal type="number" pos:start="151:15" pos:end="151:15">0</literal></expr>;</init><condition pos:start="151:17" pos:end="151:20"><expr pos:start="151:17" pos:end="151:19"><name pos:start="151:17" pos:end="151:17">j</name><operator pos:start="151:18" pos:end="151:18">&lt;</operator><name pos:start="151:19" pos:end="151:19">h</name></expr>;</condition><incr pos:start="151:21" pos:end="151:23"><expr pos:start="151:21" pos:end="151:23"><name pos:start="151:21" pos:end="151:21">j</name><operator pos:start="151:22" pos:end="151:23">++</operator></expr></incr>)</control> <block pos:start="151:26" pos:end="159:9">{<block_content pos:start="153:13" pos:end="157:40">

            <expr_stmt pos:start="153:13" pos:end="153:37"><expr pos:start="153:13" pos:end="153:36"><call pos:start="153:13" pos:end="153:36"><name pos:start="153:13" pos:end="153:18">memcpy</name><argument_list pos:start="153:19" pos:end="153:36">(<argument pos:start="153:20" pos:end="153:23"><expr pos:start="153:20" pos:end="153:23"><name pos:start="153:20" pos:end="153:23">dest</name></expr></argument>, <argument pos:start="153:26" pos:end="153:28"><expr pos:start="153:26" pos:end="153:28"><name pos:start="153:26" pos:end="153:28">src</name></expr></argument>, <argument pos:start="153:31" pos:end="153:35"><expr pos:start="153:31" pos:end="153:35"><name pos:start="153:31" pos:end="153:31">w</name> <operator pos:start="153:33" pos:end="153:33">*</operator> <literal type="number" pos:start="153:35" pos:end="153:35">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:26"><expr pos:start="155:13" pos:end="155:25"><name pos:start="155:13" pos:end="155:16">dest</name> <operator pos:start="155:18" pos:end="155:19">+=</operator> <name pos:start="155:21" pos:end="155:21">w</name> <operator pos:start="155:23" pos:end="155:23">*</operator> <literal type="number" pos:start="155:25" pos:end="155:25">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:40"><expr pos:start="157:13" pos:end="157:39"><name pos:start="157:13" pos:end="157:15">src</name> <operator pos:start="157:17" pos:end="157:18">+=</operator> <name pos:start="157:20" pos:end="157:39"><name pos:start="157:20" pos:end="157:26">picture</name><operator pos:start="157:27" pos:end="157:28">-&gt;</operator><name pos:start="157:29" pos:end="157:36">linesize</name><index pos:start="157:37" pos:end="157:39">[<expr pos:start="157:38" pos:end="157:38"><literal type="number" pos:start="157:38" pos:end="157:38">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    <default pos:start="163:5" pos:end="163:12">default:</default>

        <return pos:start="165:9" pos:end="165:15">return;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="169:5" pos:end="169:49"><expr pos:start="169:5" pos:end="169:48"><call pos:start="169:5" pos:end="169:48"><name pos:start="169:5" pos:end="169:27"><name pos:start="169:5" pos:end="169:5">s</name><operator pos:start="169:6" pos:end="169:7">-&gt;</operator><name pos:start="169:8" pos:end="169:13">format</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:27">write_packet</name></name><argument_list pos:start="169:28" pos:end="169:48">(<argument pos:start="169:29" pos:end="169:29"><expr pos:start="169:29" pos:end="169:29"><name pos:start="169:29" pos:end="169:29">s</name></expr></argument>, <argument pos:start="169:32" pos:end="169:36"><expr pos:start="169:32" pos:end="169:36"><name pos:start="169:32" pos:end="169:36">index</name></expr></argument>, <argument pos:start="169:39" pos:end="169:41"><expr pos:start="169:39" pos:end="169:41"><name pos:start="169:39" pos:end="169:41">buf</name></expr></argument>, <argument pos:start="169:44" pos:end="169:47"><expr pos:start="169:44" pos:end="169:47"><name pos:start="169:44" pos:end="169:47">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:14"><expr pos:start="171:5" pos:end="171:13"><call pos:start="171:5" pos:end="171:13"><name pos:start="171:5" pos:end="171:8">free</name><argument_list pos:start="171:9" pos:end="171:13">(<argument pos:start="171:10" pos:end="171:12"><expr pos:start="171:10" pos:end="171:12"><name pos:start="171:10" pos:end="171:12">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
