<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21937.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">check_output_constraints</name><parameter_list pos:start="1:36" pos:end="1:72">(<parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:47">InputStream</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">ist</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:71"><decl pos:start="1:55" pos:end="1:71"><type pos:start="1:55" pos:end="1:71"><name pos:start="1:55" pos:end="1:66">OutputStream</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">ost</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:50"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">OutputFile</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">of</name> <init pos:start="5:20" pos:end="5:50">= <expr pos:start="5:22" pos:end="5:50"><name pos:start="5:22" pos:end="5:50"><name pos:start="5:22" pos:end="5:33">output_files</name><index pos:start="5:34" pos:end="5:50">[<expr pos:start="5:35" pos:end="5:49"><name pos:start="5:35" pos:end="5:49"><name pos:start="5:35" pos:end="5:37">ost</name><operator pos:start="5:38" pos:end="5:39">-&gt;</operator><name pos:start="5:40" pos:end="5:49">file_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:78"><decl pos:start="7:5" pos:end="7:77"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">ist_index</name>  <init pos:start="7:20" pos:end="7:77">= <expr pos:start="7:22" pos:end="7:77"><name pos:start="7:22" pos:end="7:49"><name pos:start="7:22" pos:end="7:32">input_files</name><index pos:start="7:33" pos:end="7:49">[<expr pos:start="7:34" pos:end="7:48"><name pos:start="7:34" pos:end="7:48"><name pos:start="7:34" pos:end="7:36">ist</name><operator pos:start="7:37" pos:end="7:38">-&gt;</operator><name pos:start="7:39" pos:end="7:48">file_index</name></name></expr>]</index></name><operator pos:start="7:50" pos:end="7:51">-&gt;</operator><name pos:start="7:52" pos:end="7:60">ist_index</name> <operator pos:start="7:62" pos:end="7:62">+</operator> <name pos:start="7:64" pos:end="7:77"><name pos:start="7:64" pos:end="7:66">ist</name><operator pos:start="7:67" pos:end="7:68">-&gt;</operator><name pos:start="7:69" pos:end="7:70">st</name><operator pos:start="7:71" pos:end="7:72">-&gt;</operator><name pos:start="7:73" pos:end="7:77">index</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:39">(<expr pos:start="11:9" pos:end="11:38"><name pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:11">ost</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:25">source_index</name></name> <operator pos:start="11:27" pos:end="11:28">!=</operator> <name pos:start="11:30" pos:end="11:38">ist_index</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:52">(<expr pos:start="17:9" pos:end="17:51"><name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:10">of</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:22">start_time</name></name> <operator pos:start="17:24" pos:end="17:25">&amp;&amp;</operator> <name pos:start="17:27" pos:end="17:34"><name pos:start="17:27" pos:end="17:29">ist</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:34">pts</name></name> <operator pos:start="17:36" pos:end="17:36">&lt;</operator> <name pos:start="17:38" pos:end="17:51"><name pos:start="17:38" pos:end="17:39">of</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:51">start_time</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="27:55">(<expr pos:start="23:9" pos:end="27:54"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:10">of</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:26">recording_time</name></name> <operator pos:start="23:28" pos:end="23:29">!=</operator> <name pos:start="23:31" pos:end="23:39">INT64_MAX</name> <operator pos:start="23:41" pos:end="23:42">&amp;&amp;</operator>

        <macro pos:start="25:9" pos:end="27:49"><name pos:start="25:9" pos:end="25:21">av_compare_ts</name><argument_list pos:start="25:22" pos:end="27:49">(<argument pos:start="25:23" pos:end="25:30">ist-&gt;pts</argument>, <argument pos:start="25:33" pos:end="25:46">AV_TIME_BASE_Q</argument>, <argument pos:start="25:49" pos:end="25:83">of-&gt;recording_time + of-&gt;start_time</argument>,

                      <argument pos:start="27:23" pos:end="27:37">(AVRational){ <literal type="number" pos:start="27:37" pos:end="27:37">1</literal></argument>, <argument pos:start="27:40" pos:end="27:48"><literal type="number" pos:start="27:40" pos:end="27:46">1000000</literal> }</argument>)</argument_list></macro> <operator pos:start="27:51" pos:end="27:52">&gt;=</operator> <literal type="number" pos:start="27:54" pos:end="27:54">0</literal></expr>)</condition> <block pos:start="27:57" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:17">

        <expr_stmt pos:start="29:9" pos:end="29:40"><expr pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:11">ost</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:35">is_past_recording_time</name></name> <operator pos:start="29:37" pos:end="29:37">=</operator> <literal type="number" pos:start="29:39" pos:end="29:39">1</literal></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
