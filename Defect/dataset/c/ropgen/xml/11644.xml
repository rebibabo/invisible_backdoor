<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11644.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">roq_encode_video</name><parameter_list pos:start="1:28" pos:end="1:44">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:38">RoqContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">enc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">RoqTempdata</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:25">tempData</name> <init pos:start="5:27" pos:end="5:40">= <expr pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:31">enc</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:40">tmpData</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:43"><expr pos:start="11:5" pos:end="11:42"><call pos:start="11:5" pos:end="11:42"><name pos:start="11:5" pos:end="11:10">memset</name><argument_list pos:start="11:11" pos:end="11:42">(<argument pos:start="11:12" pos:end="11:19"><expr pos:start="11:12" pos:end="11:19"><name pos:start="11:12" pos:end="11:19">tempData</name></expr></argument>, <argument pos:start="11:22" pos:end="11:22"><expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">0</literal></expr></argument>, <argument pos:start="11:25" pos:end="11:41"><expr pos:start="11:25" pos:end="11:41"><sizeof pos:start="11:25" pos:end="11:41">sizeof<argument_list pos:start="11:31" pos:end="11:41">(<argument pos:start="11:32" pos:end="11:40"><expr pos:start="11:32" pos:end="11:40"><operator pos:start="11:32" pos:end="11:32">*</operator><name pos:start="11:33" pos:end="11:40">tempData</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:41"><name pos:start="15:11" pos:end="15:26">create_cel_evals</name><argument_list pos:start="15:27" pos:end="15:41">(<argument pos:start="15:28" pos:end="15:30"><expr pos:start="15:28" pos:end="15:30"><name pos:start="15:28" pos:end="15:30">enc</name></expr></argument>, <argument pos:start="15:33" pos:end="15:40"><expr pos:start="15:33" pos:end="15:40"><name pos:start="15:33" pos:end="15:40">tempData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:19"><if pos:start="17:5" pos:end="19:19">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">&lt;</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:19"><block_content pos:start="19:9" pos:end="19:19">

        <return pos:start="19:9" pos:end="19:19">return <expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:48"><expr pos:start="23:5" pos:end="23:47"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:47"><name pos:start="23:11" pos:end="23:32">generate_new_codebooks</name><argument_list pos:start="23:33" pos:end="23:47">(<argument pos:start="23:34" pos:end="23:36"><expr pos:start="23:34" pos:end="23:36"><name pos:start="23:34" pos:end="23:36">enc</name></expr></argument>, <argument pos:start="23:39" pos:end="23:46"><expr pos:start="23:39" pos:end="23:46"><name pos:start="23:39" pos:end="23:46">tempData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:19"><if pos:start="25:5" pos:end="27:19">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">&lt;</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:19"><block_content pos:start="27:9" pos:end="27:19">

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:38">(<expr pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:11">enc</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:32">framesSinceKeyframe</name></name> <operator pos:start="31:34" pos:end="31:35">&gt;=</operator> <literal type="number" pos:start="31:37" pos:end="31:37">1</literal></expr>)</condition> <block pos:start="31:40" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:30">

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><call pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:21">motion_search</name><argument_list pos:start="33:22" pos:end="33:29">(<argument pos:start="33:23" pos:end="33:25"><expr pos:start="33:23" pos:end="33:25"><name pos:start="33:23" pos:end="33:25">enc</name></expr></argument>, <argument pos:start="33:28" pos:end="33:28"><expr pos:start="33:28" pos:end="33:28"><literal type="number" pos:start="33:28" pos:end="33:28">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:30"><expr pos:start="35:9" pos:end="35:29"><call pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:21">motion_search</name><argument_list pos:start="35:22" pos:end="35:29">(<argument pos:start="35:23" pos:end="35:25"><expr pos:start="35:23" pos:end="35:25"><name pos:start="35:23" pos:end="35:25">enc</name></expr></argument>, <argument pos:start="35:28" pos:end="35:28"><expr pos:start="35:28" pos:end="35:28"><literal type="number" pos:start="35:28" pos:end="35:28">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



 <label pos:start="41:2" pos:end="41:14"><name pos:start="41:2" pos:end="41:13">retry_encode</name>:</label>

    <for pos:start="43:5" pos:end="45:68">for <control pos:start="43:9" pos:end="43:47">(<init pos:start="43:10" pos:end="43:13"><expr pos:start="43:10" pos:end="43:12"><name pos:start="43:10" pos:end="43:10">i</name><operator pos:start="43:11" pos:end="43:11">=</operator><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</init> <condition pos:start="43:15" pos:end="43:42"><expr pos:start="43:15" pos:end="43:41"><name pos:start="43:15" pos:end="43:15">i</name><operator pos:start="43:16" pos:end="43:16">&lt;</operator><name pos:start="43:17" pos:end="43:26"><name pos:start="43:17" pos:end="43:19">enc</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:26">width</name></name><operator pos:start="43:27" pos:end="43:27">*</operator><name pos:start="43:28" pos:end="43:38"><name pos:start="43:28" pos:end="43:30">enc</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:38">height</name></name><operator pos:start="43:39" pos:end="43:39">/</operator><literal type="number" pos:start="43:40" pos:end="43:41">64</literal></expr>;</condition> <incr pos:start="43:44" pos:end="43:46"><expr pos:start="43:44" pos:end="43:46"><name pos:start="43:44" pos:end="43:44">i</name><operator pos:start="43:45" pos:end="43:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:9" pos:end="45:68"><block_content pos:start="45:9" pos:end="45:68">

        <expr_stmt pos:start="45:9" pos:end="45:68"><expr pos:start="45:9" pos:end="45:67"><call pos:start="45:9" pos:end="45:67"><name pos:start="45:9" pos:end="45:27">gather_data_for_cel</name><argument_list pos:start="45:28" pos:end="45:67">(<argument pos:start="45:29" pos:end="45:51"><expr pos:start="45:29" pos:end="45:51"><name pos:start="45:29" pos:end="45:47"><name pos:start="45:29" pos:end="45:36">tempData</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:47">cel_evals</name></name> <operator pos:start="45:49" pos:end="45:49">+</operator> <name pos:start="45:51" pos:end="45:51">i</name></expr></argument>, <argument pos:start="45:54" pos:end="45:56"><expr pos:start="45:54" pos:end="45:56"><name pos:start="45:54" pos:end="45:56">enc</name></expr></argument>, <argument pos:start="45:59" pos:end="45:66"><expr pos:start="45:59" pos:end="45:66"><name pos:start="45:59" pos:end="45:66">tempData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="49:5" pos:end="49:61">/* Quake 3 can't handle chunks bigger than 65535 bytes */</comment>

    <if_stmt pos:start="51:5" pos:end="79:5"><if pos:start="51:5" pos:end="79:5">if <condition pos:start="51:8" pos:end="51:42">(<expr pos:start="51:9" pos:end="51:41"><name pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:16">tempData</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:31">mainChunkSize</name></name><operator pos:start="51:32" pos:end="51:32">/</operator><literal type="number" pos:start="51:33" pos:end="51:33">8</literal> <operator pos:start="51:35" pos:end="51:35">&gt;</operator> <literal type="number" pos:start="51:37" pos:end="51:41">65535</literal></expr>)</condition> <block pos:start="51:44" pos:end="79:5">{<block_content pos:start="53:9" pos:end="77:26">

        <expr_stmt pos:start="53:9" pos:end="59:42"><expr pos:start="53:9" pos:end="59:41"><call pos:start="53:9" pos:end="59:41"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="59:41">(<argument pos:start="53:16" pos:end="53:25"><expr pos:start="53:16" pos:end="53:25"><name pos:start="53:16" pos:end="53:25"><name pos:start="53:16" pos:end="53:18">enc</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:25">avctx</name></name></expr></argument>, <argument pos:start="53:28" pos:end="53:39"><expr pos:start="53:28" pos:end="53:39"><name pos:start="53:28" pos:end="53:39">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="55:16" pos:end="57:52"><expr pos:start="55:16" pos:end="57:52"><literal type="string" pos:start="55:16" pos:end="55:66">"Warning, generated a frame too big (%d &gt; 65535), "</literal>

               <literal type="string" pos:start="57:16" pos:end="57:52">"try using a smaller qscale value.\n"</literal></expr></argument>,

               <argument pos:start="59:16" pos:end="59:40"><expr pos:start="59:16" pos:end="59:40"><name pos:start="59:16" pos:end="59:38"><name pos:start="59:16" pos:end="59:23">tempData</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:38">mainChunkSize</name></name><operator pos:start="59:39" pos:end="59:39">/</operator><literal type="number" pos:start="59:40" pos:end="59:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:27"><expr pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:11">enc</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:19">lambda</name></name> <operator pos:start="61:21" pos:end="61:22">*=</operator> <literal type="number" pos:start="61:24" pos:end="61:26">1.5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:36"><expr pos:start="63:9" pos:end="63:35"><name pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:16">tempData</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:31">mainChunkSize</name></name> <operator pos:start="63:33" pos:end="63:33">=</operator> <literal type="number" pos:start="63:35" pos:end="63:35">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:72"><expr pos:start="65:9" pos:end="65:71"><call pos:start="65:9" pos:end="65:71"><name pos:start="65:9" pos:end="65:14">memset</name><argument_list pos:start="65:15" pos:end="65:71">(<argument pos:start="65:16" pos:end="65:36"><expr pos:start="65:16" pos:end="65:36"><name pos:start="65:16" pos:end="65:36"><name pos:start="65:16" pos:end="65:23">tempData</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:36">used_option</name></name></expr></argument>, <argument pos:start="65:39" pos:end="65:39"><expr pos:start="65:39" pos:end="65:39"><literal type="number" pos:start="65:39" pos:end="65:39">0</literal></expr></argument>, <argument pos:start="65:42" pos:end="65:70"><expr pos:start="65:42" pos:end="65:70"><sizeof pos:start="65:42" pos:end="65:70">sizeof<argument_list pos:start="65:48" pos:end="65:70">(<argument pos:start="65:49" pos:end="65:69"><expr pos:start="65:49" pos:end="65:69"><name pos:start="65:49" pos:end="65:69"><name pos:start="65:49" pos:end="65:56">tempData</name><operator pos:start="65:57" pos:end="65:58">-&gt;</operator><name pos:start="65:59" pos:end="65:69">used_option</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="69:52"><expr pos:start="67:9" pos:end="69:51"><call pos:start="67:9" pos:end="69:51"><name pos:start="67:9" pos:end="67:14">memset</name><argument_list pos:start="67:15" pos:end="69:51">(<argument pos:start="67:16" pos:end="67:42"><expr pos:start="67:16" pos:end="67:42"><name pos:start="67:16" pos:end="67:42"><name pos:start="67:16" pos:end="67:23">tempData</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:34">codebooks</name><operator pos:start="67:35" pos:end="67:35">.</operator><name pos:start="67:36" pos:end="67:42">usedCB4</name></name></expr></argument>, <argument pos:start="67:45" pos:end="67:45"><expr pos:start="67:45" pos:end="67:45"><literal type="number" pos:start="67:45" pos:end="67:45">0</literal></expr></argument>,

               <argument pos:start="69:16" pos:end="69:50"><expr pos:start="69:16" pos:end="69:50"><sizeof pos:start="69:16" pos:end="69:50">sizeof<argument_list pos:start="69:22" pos:end="69:50">(<argument pos:start="69:23" pos:end="69:49"><expr pos:start="69:23" pos:end="69:49"><name pos:start="69:23" pos:end="69:49"><name pos:start="69:23" pos:end="69:30">tempData</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:41">codebooks</name><operator pos:start="69:42" pos:end="69:42">.</operator><name pos:start="69:43" pos:end="69:49">usedCB4</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="73:52"><expr pos:start="71:9" pos:end="73:51"><call pos:start="71:9" pos:end="73:51"><name pos:start="71:9" pos:end="71:14">memset</name><argument_list pos:start="71:15" pos:end="73:51">(<argument pos:start="71:16" pos:end="71:42"><expr pos:start="71:16" pos:end="71:42"><name pos:start="71:16" pos:end="71:42"><name pos:start="71:16" pos:end="71:23">tempData</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:34">codebooks</name><operator pos:start="71:35" pos:end="71:35">.</operator><name pos:start="71:36" pos:end="71:42">usedCB2</name></name></expr></argument>, <argument pos:start="71:45" pos:end="71:45"><expr pos:start="71:45" pos:end="71:45"><literal type="number" pos:start="71:45" pos:end="71:45">0</literal></expr></argument>,

               <argument pos:start="73:16" pos:end="73:50"><expr pos:start="73:16" pos:end="73:50"><sizeof pos:start="73:16" pos:end="73:50">sizeof<argument_list pos:start="73:22" pos:end="73:50">(<argument pos:start="73:23" pos:end="73:49"><expr pos:start="73:23" pos:end="73:49"><name pos:start="73:23" pos:end="73:49"><name pos:start="73:23" pos:end="73:30">tempData</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:41">codebooks</name><operator pos:start="73:42" pos:end="73:42">.</operator><name pos:start="73:43" pos:end="73:49">usedCB2</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <goto pos:start="77:9" pos:end="77:26">goto <name pos:start="77:14" pos:end="77:25">retry_encode</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:35"><expr pos:start="83:5" pos:end="83:34"><call pos:start="83:5" pos:end="83:34"><name pos:start="83:5" pos:end="83:19">remap_codebooks</name><argument_list pos:start="83:20" pos:end="83:34">(<argument pos:start="83:21" pos:end="83:23"><expr pos:start="83:21" pos:end="83:23"><name pos:start="83:21" pos:end="83:23">enc</name></expr></argument>, <argument pos:start="83:26" pos:end="83:33"><expr pos:start="83:26" pos:end="83:33"><name pos:start="83:26" pos:end="83:33">tempData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:35"><expr pos:start="87:5" pos:end="87:34"><call pos:start="87:5" pos:end="87:34"><name pos:start="87:5" pos:end="87:19">write_codebooks</name><argument_list pos:start="87:20" pos:end="87:34">(<argument pos:start="87:21" pos:end="87:23"><expr pos:start="87:21" pos:end="87:23"><name pos:start="87:21" pos:end="87:23">enc</name></expr></argument>, <argument pos:start="87:26" pos:end="87:33"><expr pos:start="87:26" pos:end="87:33"><name pos:start="87:26" pos:end="87:33">tempData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="93:60"><expr pos:start="91:5" pos:end="93:59"><call pos:start="91:5" pos:end="93:59"><name pos:start="91:5" pos:end="91:32">reconstruct_and_encode_image</name><argument_list pos:start="91:33" pos:end="93:59">(<argument pos:start="91:34" pos:end="91:36"><expr pos:start="91:34" pos:end="91:36"><name pos:start="91:34" pos:end="91:36">enc</name></expr></argument>, <argument pos:start="91:39" pos:end="91:46"><expr pos:start="91:39" pos:end="91:46"><name pos:start="91:39" pos:end="91:46">tempData</name></expr></argument>, <argument pos:start="91:49" pos:end="91:58"><expr pos:start="91:49" pos:end="91:58"><name pos:start="91:49" pos:end="91:58"><name pos:start="91:49" pos:end="91:51">enc</name><operator pos:start="91:52" pos:end="91:53">-&gt;</operator><name pos:start="91:54" pos:end="91:58">width</name></name></expr></argument>, <argument pos:start="91:61" pos:end="91:71"><expr pos:start="91:61" pos:end="91:71"><name pos:start="91:61" pos:end="91:71"><name pos:start="91:61" pos:end="91:63">enc</name><operator pos:start="91:64" pos:end="91:65">-&gt;</operator><name pos:start="91:66" pos:end="91:71">height</name></name></expr></argument>,

                                 <argument pos:start="93:34" pos:end="93:58"><expr pos:start="93:34" pos:end="93:58"><name pos:start="93:34" pos:end="93:43"><name pos:start="93:34" pos:end="93:36">enc</name><operator pos:start="93:37" pos:end="93:38">-&gt;</operator><name pos:start="93:39" pos:end="93:43">width</name></name><operator pos:start="93:44" pos:end="93:44">*</operator><name pos:start="93:45" pos:end="93:55"><name pos:start="93:45" pos:end="93:47">enc</name><operator pos:start="93:48" pos:end="93:49">-&gt;</operator><name pos:start="93:50" pos:end="93:55">height</name></name><operator pos:start="93:56" pos:end="93:56">/</operator><literal type="number" pos:start="93:57" pos:end="93:58">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:49"><expr pos:start="97:5" pos:end="97:48"><name pos:start="97:5" pos:end="97:27"><name pos:start="97:5" pos:end="97:7">enc</name><operator pos:start="97:8" pos:end="97:9">-&gt;</operator><name pos:start="97:10" pos:end="97:14">avctx</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:27">coded_frame</name></name> <operator pos:start="97:29" pos:end="97:29">=</operator> <name pos:start="97:31" pos:end="97:48"><name pos:start="97:31" pos:end="97:33">enc</name><operator pos:start="97:34" pos:end="97:35">-&gt;</operator><name pos:start="97:36" pos:end="97:48">current_frame</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="101:5" pos:end="101:30">/* Rotate frame history */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:59"><expr pos:start="103:5" pos:end="103:58"><call pos:start="103:5" pos:end="103:58"><name pos:start="103:5" pos:end="103:10">FFSWAP</name><argument_list pos:start="103:11" pos:end="103:58">(<argument pos:start="103:12" pos:end="103:20"><expr pos:start="103:12" pos:end="103:20"><name pos:start="103:12" pos:end="103:18">AVFrame</name> <operator pos:start="103:20" pos:end="103:20">*</operator></expr></argument>, <argument pos:start="103:23" pos:end="103:40"><expr pos:start="103:23" pos:end="103:40"><name pos:start="103:23" pos:end="103:40"><name pos:start="103:23" pos:end="103:25">enc</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:40">current_frame</name></name></expr></argument>, <argument pos:start="103:43" pos:end="103:57"><expr pos:start="103:43" pos:end="103:57"><name pos:start="103:43" pos:end="103:57"><name pos:start="103:43" pos:end="103:45">enc</name><operator pos:start="103:46" pos:end="103:47">-&gt;</operator><name pos:start="103:48" pos:end="103:57">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:64"><expr pos:start="105:5" pos:end="105:63"><call pos:start="105:5" pos:end="105:63"><name pos:start="105:5" pos:end="105:10">FFSWAP</name><argument_list pos:start="105:11" pos:end="105:63">(<argument pos:start="105:12" pos:end="105:24"><expr pos:start="105:12" pos:end="105:24"><name pos:start="105:12" pos:end="105:22">motion_vect</name> <operator pos:start="105:24" pos:end="105:24">*</operator></expr></argument>, <argument pos:start="105:27" pos:end="105:43"><expr pos:start="105:27" pos:end="105:43"><name pos:start="105:27" pos:end="105:43"><name pos:start="105:27" pos:end="105:29">enc</name><operator pos:start="105:30" pos:end="105:31">-&gt;</operator><name pos:start="105:32" pos:end="105:43">last_motion4</name></name></expr></argument>, <argument pos:start="105:46" pos:end="105:62"><expr pos:start="105:46" pos:end="105:62"><name pos:start="105:46" pos:end="105:62"><name pos:start="105:46" pos:end="105:48">enc</name><operator pos:start="105:49" pos:end="105:50">-&gt;</operator><name pos:start="105:51" pos:end="105:62">this_motion4</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:64"><expr pos:start="107:5" pos:end="107:63"><call pos:start="107:5" pos:end="107:63"><name pos:start="107:5" pos:end="107:10">FFSWAP</name><argument_list pos:start="107:11" pos:end="107:63">(<argument pos:start="107:12" pos:end="107:24"><expr pos:start="107:12" pos:end="107:24"><name pos:start="107:12" pos:end="107:22">motion_vect</name> <operator pos:start="107:24" pos:end="107:24">*</operator></expr></argument>, <argument pos:start="107:27" pos:end="107:43"><expr pos:start="107:27" pos:end="107:43"><name pos:start="107:27" pos:end="107:43"><name pos:start="107:27" pos:end="107:29">enc</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:43">last_motion8</name></name></expr></argument>, <argument pos:start="107:46" pos:end="107:62"><expr pos:start="107:46" pos:end="107:62"><name pos:start="107:46" pos:end="107:62"><name pos:start="107:46" pos:end="107:48">enc</name><operator pos:start="107:49" pos:end="107:50">-&gt;</operator><name pos:start="107:51" pos:end="107:62">this_motion8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:33"><expr pos:start="111:5" pos:end="111:32"><call pos:start="111:5" pos:end="111:32"><name pos:start="111:5" pos:end="111:11">av_free</name><argument_list pos:start="111:12" pos:end="111:32">(<argument pos:start="111:13" pos:end="111:31"><expr pos:start="111:13" pos:end="111:31"><name pos:start="111:13" pos:end="111:31"><name pos:start="111:13" pos:end="111:20">tempData</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:31">cel_evals</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:35"><expr pos:start="113:5" pos:end="113:34"><call pos:start="113:5" pos:end="113:34"><name pos:start="113:5" pos:end="113:11">av_free</name><argument_list pos:start="113:12" pos:end="113:34">(<argument pos:start="113:13" pos:end="113:33"><expr pos:start="113:13" pos:end="113:33"><name pos:start="113:13" pos:end="113:33"><name pos:start="113:13" pos:end="113:20">tempData</name><operator pos:start="113:21" pos:end="113:22">-&gt;</operator><name pos:start="113:23" pos:end="113:33">closest_cb2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:31"><expr pos:start="117:5" pos:end="117:30"><name pos:start="117:5" pos:end="117:28"><name pos:start="117:5" pos:end="117:7">enc</name><operator pos:start="117:8" pos:end="117:9">-&gt;</operator><name pos:start="117:10" pos:end="117:28">framesSinceKeyframe</name></name><operator pos:start="117:29" pos:end="117:30">++</operator></expr>;</expr_stmt>



    <return pos:start="121:5" pos:end="121:13">return <expr pos:start="121:12" pos:end="121:12"><literal type="number" pos:start="121:12" pos:end="121:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
