<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26883.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">scsi_cancel_io</name><parameter_list pos:start="1:27" pos:end="1:44">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:38">SCSIRequest</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">req</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:24">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:53"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SCSIDiskReq</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">r</name> <init pos:start="5:20" pos:end="5:53">= <expr pos:start="5:22" pos:end="5:53"><call pos:start="5:22" pos:end="5:53"><name pos:start="5:22" pos:end="5:30">DO_UPCAST</name><argument_list pos:start="5:31" pos:end="5:53">(<argument pos:start="5:32" pos:end="5:42"><expr pos:start="5:32" pos:end="5:42"><name pos:start="5:32" pos:end="5:42">SCSIDiskReq</name></expr></argument>, <argument pos:start="5:45" pos:end="5:47"><expr pos:start="5:45" pos:end="5:47"><name pos:start="5:45" pos:end="5:47">req</name></expr></argument>, <argument pos:start="5:50" pos:end="5:52"><expr pos:start="5:50" pos:end="5:52"><name pos:start="5:50" pos:end="5:52">req</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:43"><expr pos:start="9:5" pos:end="9:42"><call pos:start="9:5" pos:end="9:42"><name pos:start="9:5" pos:end="9:11">DPRINTF</name><argument_list pos:start="9:12" pos:end="9:42">(<argument pos:start="9:13" pos:end="9:31"><expr pos:start="9:13" pos:end="9:31"><literal type="string" pos:start="9:13" pos:end="9:31">"Cancel tag=0x%x\n"</literal></expr></argument>, <argument pos:start="9:34" pos:end="9:41"><expr pos:start="9:34" pos:end="9:41"><name pos:start="9:34" pos:end="9:41"><name pos:start="9:34" pos:end="9:36">req</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:41">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="25:5"><if pos:start="11:5" pos:end="25:5">if <condition pos:start="11:8" pos:end="11:21">(<expr pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:9">r</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:14">req</name><operator pos:start="11:15" pos:end="11:15">.</operator><name pos:start="11:16" pos:end="11:20">aiocb</name></name></expr>)</condition> <block pos:start="11:23" pos:end="25:5">{<block_content pos:start="13:9" pos:end="23:32">

        <expr_stmt pos:start="13:9" pos:end="13:38"><expr pos:start="13:9" pos:end="13:37"><call pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:23">bdrv_aio_cancel</name><argument_list pos:start="13:24" pos:end="13:37">(<argument pos:start="13:25" pos:end="13:36"><expr pos:start="13:25" pos:end="13:36"><name pos:start="13:25" pos:end="13:36"><name pos:start="13:25" pos:end="13:25">r</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:30">req</name><operator pos:start="13:31" pos:end="13:31">.</operator><name pos:start="13:32" pos:end="13:36">aiocb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="17:9" pos:end="21:60">/* This reference was left in by scsi_*_data.  We take ownership of

         * it the moment scsi_req_cancel is called, independent of whether

         * bdrv_aio_cancel completes the request or not.  */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:32"><expr pos:start="23:9" pos:end="23:31"><call pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:22">scsi_req_unref</name><argument_list pos:start="23:23" pos:end="23:31">(<argument pos:start="23:24" pos:end="23:30"><expr pos:start="23:24" pos:end="23:30"><operator pos:start="23:24" pos:end="23:24">&amp;</operator><name pos:start="23:25" pos:end="23:30"><name pos:start="23:25" pos:end="23:25">r</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:30">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:5">r</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:10">req</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:16">aiocb</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:23">NULL</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
