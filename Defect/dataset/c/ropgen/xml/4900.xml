<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4900.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">test_hash_digest</name><parameter_list pos:start="1:29" pos:end="1:34">(<parameter pos:start="1:30" pos:end="1:33"><decl pos:start="1:30" pos:end="1:33"><type pos:start="1:30" pos:end="1:33"><name pos:start="1:30" pos:end="1:33">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">size_t</name></type> <name pos:start="5:12" pos:end="5:12">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:38"><expr pos:start="9:5" pos:end="9:37"><call pos:start="9:5" pos:end="9:37"><name pos:start="9:5" pos:end="9:12">g_assert</name><argument_list pos:start="9:13" pos:end="9:37">(<argument pos:start="9:14" pos:end="9:36"><expr pos:start="9:14" pos:end="9:36"><call pos:start="9:14" pos:end="9:31"><name pos:start="9:14" pos:end="9:25">qcrypto_init</name><argument_list pos:start="9:26" pos:end="9:31">(<argument pos:start="9:27" pos:end="9:30"><expr pos:start="9:27" pos:end="9:30"><name pos:start="9:27" pos:end="9:30">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="9:33" pos:end="9:34">==</operator> <literal type="number" pos:start="9:36" pos:end="9:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="13:5" pos:end="47:5">for <control pos:start="13:9" pos:end="13:57">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:52"><expr pos:start="13:17" pos:end="13:50"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <call pos:start="13:21" pos:end="13:50"><name pos:start="13:21" pos:end="13:32">G_N_ELEMENTS</name><argument_list pos:start="13:33" pos:end="13:50">(<argument pos:start="13:34" pos:end="13:49"><expr pos:start="13:34" pos:end="13:49"><name pos:start="13:34" pos:end="13:49">expected_outputs</name></expr></argument>)</argument_list></call></expr> ;</condition> <incr pos:start="13:54" pos:end="13:56"><expr pos:start="13:54" pos:end="13:56"><name pos:start="13:54" pos:end="13:54">i</name><operator pos:start="13:55" pos:end="13:56">++</operator></expr></incr>)</control> <block pos:start="13:59" pos:end="47:5">{<block_content pos:start="15:9" pos:end="45:23">

        <decl_stmt pos:start="15:9" pos:end="15:16"><decl pos:start="15:9" pos:end="15:15"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:15">ret</name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:21"><decl pos:start="17:9" pos:end="17:20"><type pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:12">char</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:20">digest</name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:26"><decl pos:start="19:9" pos:end="19:25"><type pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:14">size_t</name></type> <name pos:start="19:16" pos:end="19:25">digestsize</name></decl>;</decl_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:48"><expr pos:start="23:9" pos:end="23:47"><name pos:start="23:9" pos:end="23:18">digestsize</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <call pos:start="23:22" pos:end="23:47"><name pos:start="23:22" pos:end="23:44">qcrypto_hash_digest_len</name><argument_list pos:start="23:45" pos:end="23:47">(<argument pos:start="23:46" pos:end="23:46"><expr pos:start="23:46" pos:end="23:46"><name pos:start="23:46" pos:end="23:46">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:73"><expr pos:start="27:9" pos:end="27:72"><call pos:start="27:9" pos:end="27:72"><name pos:start="27:9" pos:end="27:23">g_assert_cmpint</name><argument_list pos:start="27:24" pos:end="27:72">(<argument pos:start="27:25" pos:end="27:38"><expr pos:start="27:25" pos:end="27:38"><name pos:start="27:25" pos:end="27:34">digestsize</name> <operator pos:start="27:36" pos:end="27:36">*</operator> <literal type="number" pos:start="27:38" pos:end="27:38">2</literal></expr></argument>, <argument pos:start="27:41" pos:end="27:42"><expr pos:start="27:41" pos:end="27:42"><operator pos:start="27:41" pos:end="27:42">==</operator></expr></argument>, <argument pos:start="27:45" pos:end="27:71"><expr pos:start="27:45" pos:end="27:71"><call pos:start="27:45" pos:end="27:71"><name pos:start="27:45" pos:end="27:50">strlen</name><argument_list pos:start="27:51" pos:end="27:71">(<argument pos:start="27:52" pos:end="27:70"><expr pos:start="27:52" pos:end="27:70"><name pos:start="27:52" pos:end="27:70"><name pos:start="27:52" pos:end="27:67">expected_outputs</name><index pos:start="27:68" pos:end="27:70">[<expr pos:start="27:69" pos:end="27:69"><name pos:start="27:69" pos:end="27:69">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="31:9" pos:end="39:40"><expr pos:start="31:9" pos:end="39:39"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="39:39"><name pos:start="31:15" pos:end="31:33">qcrypto_hash_digest</name><argument_list pos:start="31:34" pos:end="39:39">(<argument pos:start="31:35" pos:end="31:35"><expr pos:start="31:35" pos:end="31:35"><name pos:start="31:35" pos:end="31:35">i</name></expr></argument>,

                                  <argument pos:start="33:35" pos:end="33:44"><expr pos:start="33:35" pos:end="33:44"><name pos:start="33:35" pos:end="33:44">INPUT_TEXT</name></expr></argument>,

                                  <argument pos:start="35:35" pos:end="35:52"><expr pos:start="35:35" pos:end="35:52"><call pos:start="35:35" pos:end="35:52"><name pos:start="35:35" pos:end="35:40">strlen</name><argument_list pos:start="35:41" pos:end="35:52">(<argument pos:start="35:42" pos:end="35:51"><expr pos:start="35:42" pos:end="35:51"><name pos:start="35:42" pos:end="35:51">INPUT_TEXT</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="37:35" pos:end="37:41"><expr pos:start="37:35" pos:end="37:41"><operator pos:start="37:35" pos:end="37:35">&amp;</operator><name pos:start="37:36" pos:end="37:41">digest</name></expr></argument>,

                                  <argument pos:start="39:35" pos:end="39:38"><expr pos:start="39:35" pos:end="39:38"><name pos:start="39:35" pos:end="39:38">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:27"><expr pos:start="41:9" pos:end="41:26"><call pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:16">g_assert</name><argument_list pos:start="41:17" pos:end="41:26">(<argument pos:start="41:18" pos:end="41:25"><expr pos:start="41:18" pos:end="41:25"><name pos:start="41:18" pos:end="41:20">ret</name> <operator pos:start="41:22" pos:end="41:23">==</operator> <literal type="number" pos:start="41:25" pos:end="41:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:59"><expr pos:start="43:9" pos:end="43:58"><call pos:start="43:9" pos:end="43:58"><name pos:start="43:9" pos:end="43:16">g_assert</name><argument_list pos:start="43:17" pos:end="43:58">(<argument pos:start="43:18" pos:end="43:57"><expr pos:start="43:18" pos:end="43:57"><call pos:start="43:18" pos:end="43:57"><name pos:start="43:18" pos:end="43:28">g_str_equal</name><argument_list pos:start="43:29" pos:end="43:57">(<argument pos:start="43:30" pos:end="43:35"><expr pos:start="43:30" pos:end="43:35"><name pos:start="43:30" pos:end="43:35">digest</name></expr></argument>, <argument pos:start="43:38" pos:end="43:56"><expr pos:start="43:38" pos:end="43:56"><name pos:start="43:38" pos:end="43:56"><name pos:start="43:38" pos:end="43:53">expected_outputs</name><index pos:start="43:54" pos:end="43:56">[<expr pos:start="43:55" pos:end="43:55"><name pos:start="43:55" pos:end="43:55">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:23"><expr pos:start="45:9" pos:end="45:22"><call pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:14">g_free</name><argument_list pos:start="45:15" pos:end="45:22">(<argument pos:start="45:16" pos:end="45:21"><expr pos:start="45:16" pos:end="45:21"><name pos:start="45:16" pos:end="45:21">digest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
