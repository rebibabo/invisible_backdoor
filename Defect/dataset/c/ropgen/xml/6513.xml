<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6513.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">add_pc_test_cases</name><parameter_list pos:start="1:30" pos:end="1:35">(<parameter pos:start="1:31" pos:end="1:34"><decl pos:start="1:31" pos:end="1:34"><type pos:start="1:31" pos:end="1:34"><name pos:start="1:31" pos:end="1:34">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:16">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">QDict</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:19">response</name></decl>, <decl pos:start="5:22" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:11"><modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:27">minfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">QList</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:15">list</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:22"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:20">QListEntry</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:23">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">QObject</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:17">qobj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">QString</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">qstr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:21">mname</name></decl>, <decl pos:start="15:24" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:16"><modifier pos:start="15:24" pos:end="15:24">*</modifier></type><name pos:start="15:25" pos:end="15:28">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:14">PCTestData</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:20">data</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:15">qtest_start</name><argument_list pos:start="21:16" pos:end="21:32">(<argument pos:start="21:17" pos:end="21:31"><expr pos:start="21:17" pos:end="21:31"><literal type="string" pos:start="21:17" pos:end="21:31">"-machine none"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:12">response</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:53"><name pos:start="23:16" pos:end="23:18">qmp</name><argument_list pos:start="23:19" pos:end="23:53">(<argument pos:start="23:20" pos:end="23:52"><expr pos:start="23:20" pos:end="23:52"><literal type="string" pos:start="23:20" pos:end="23:52">"{ 'execute': 'query-machines' }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><call pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:12">g_assert</name><argument_list pos:start="25:13" pos:end="25:22">(<argument pos:start="25:14" pos:end="25:21"><expr pos:start="25:14" pos:end="25:21"><name pos:start="25:14" pos:end="25:21">response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:8">list</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:46"><name pos:start="27:12" pos:end="27:26">qdict_get_qlist</name><argument_list pos:start="27:27" pos:end="27:46">(<argument pos:start="27:28" pos:end="27:35"><expr pos:start="27:28" pos:end="27:35"><name pos:start="27:28" pos:end="27:35">response</name></expr></argument>, <argument pos:start="27:38" pos:end="27:45"><expr pos:start="27:38" pos:end="27:45"><literal type="string" pos:start="27:38" pos:end="27:45">"return"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><call pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:12">g_assert</name><argument_list pos:start="29:13" pos:end="29:18">(<argument pos:start="29:14" pos:end="29:17"><expr pos:start="29:14" pos:end="29:17"><name pos:start="29:14" pos:end="29:17">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="33:5" pos:end="111:5">for <control pos:start="33:9" pos:end="33:53">(<init pos:start="33:10" pos:end="33:31"><expr pos:start="33:10" pos:end="33:30"><name pos:start="33:10" pos:end="33:10">p</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:30"><name pos:start="33:14" pos:end="33:24">qlist_first</name><argument_list pos:start="33:25" pos:end="33:30">(<argument pos:start="33:26" pos:end="33:29"><expr pos:start="33:26" pos:end="33:29"><name pos:start="33:26" pos:end="33:29">list</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="33:33" pos:end="33:34"><expr pos:start="33:33" pos:end="33:33"><name pos:start="33:33" pos:end="33:33">p</name></expr>;</condition> <incr pos:start="33:36" pos:end="33:52"><expr pos:start="33:36" pos:end="33:52"><name pos:start="33:36" pos:end="33:36">p</name> <operator pos:start="33:38" pos:end="33:38">=</operator> <call pos:start="33:40" pos:end="33:52"><name pos:start="33:40" pos:end="33:49">qlist_next</name><argument_list pos:start="33:50" pos:end="33:52">(<argument pos:start="33:51" pos:end="33:51"><expr pos:start="33:51" pos:end="33:51"><name pos:start="33:51" pos:end="33:51">p</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="33:55" pos:end="111:5">{<block_content pos:start="35:9" pos:end="109:9">

        <expr_stmt pos:start="35:9" pos:end="35:53"><expr pos:start="35:9" pos:end="35:52"><name pos:start="35:9" pos:end="35:13">minfo</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:52"><name pos:start="35:17" pos:end="35:32">qobject_to_qdict</name><argument_list pos:start="35:33" pos:end="35:52">(<argument pos:start="35:34" pos:end="35:51"><expr pos:start="35:34" pos:end="35:51"><call pos:start="35:34" pos:end="35:51"><name pos:start="35:34" pos:end="35:48">qlist_entry_obj</name><argument_list pos:start="35:49" pos:end="35:51">(<argument pos:start="35:50" pos:end="35:50"><expr pos:start="35:50" pos:end="35:50"><name pos:start="35:50" pos:end="35:50">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><call pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:16">g_assert</name><argument_list pos:start="37:17" pos:end="37:23">(<argument pos:start="37:18" pos:end="37:22"><expr pos:start="37:18" pos:end="37:22"><name pos:start="37:18" pos:end="37:22">minfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:40"><expr pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:12">qobj</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:39"><name pos:start="39:16" pos:end="39:24">qdict_get</name><argument_list pos:start="39:25" pos:end="39:39">(<argument pos:start="39:26" pos:end="39:30"><expr pos:start="39:26" pos:end="39:30"><name pos:start="39:26" pos:end="39:30">minfo</name></expr></argument>, <argument pos:start="39:33" pos:end="39:38"><expr pos:start="39:33" pos:end="39:38"><literal type="string" pos:start="39:33" pos:end="39:38">"name"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:23"><expr pos:start="41:9" pos:end="41:22"><call pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:16">g_assert</name><argument_list pos:start="41:17" pos:end="41:22">(<argument pos:start="41:18" pos:end="41:21"><expr pos:start="41:18" pos:end="41:21"><name pos:start="41:18" pos:end="41:21">qobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:40"><expr pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:12">qstr</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:39"><name pos:start="43:16" pos:end="43:33">qobject_to_qstring</name><argument_list pos:start="43:34" pos:end="43:39">(<argument pos:start="43:35" pos:end="43:38"><expr pos:start="43:35" pos:end="43:38"><name pos:start="43:35" pos:end="43:38">qobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:23"><expr pos:start="45:9" pos:end="45:22"><call pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:16">g_assert</name><argument_list pos:start="45:17" pos:end="45:22">(<argument pos:start="45:18" pos:end="45:21"><expr pos:start="45:18" pos:end="45:21"><name pos:start="45:18" pos:end="45:21">qstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:38"><expr pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:13">mname</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:37"><name pos:start="47:17" pos:end="47:31">qstring_get_str</name><argument_list pos:start="47:32" pos:end="47:37">(<argument pos:start="47:33" pos:end="47:36"><expr pos:start="47:33" pos:end="47:36"><name pos:start="47:33" pos:end="47:36">qstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:44">(<expr pos:start="49:13" pos:end="49:43"><operator pos:start="49:13" pos:end="49:13">!</operator><call pos:start="49:14" pos:end="49:43"><name pos:start="49:14" pos:end="49:29">g_str_has_prefix</name><argument_list pos:start="49:30" pos:end="49:43">(<argument pos:start="49:31" pos:end="49:35"><expr pos:start="49:31" pos:end="49:35"><name pos:start="49:31" pos:end="49:35">mname</name></expr></argument>, <argument pos:start="49:38" pos:end="49:42"><expr pos:start="49:38" pos:end="49:42"><literal type="string" pos:start="49:38" pos:end="49:42">"pc-"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:46" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:21">

            <continue pos:start="51:13" pos:end="51:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:44"><expr pos:start="55:9" pos:end="55:43"><name pos:start="55:9" pos:end="55:12">data</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <call pos:start="55:16" pos:end="55:43"><name pos:start="55:16" pos:end="55:23">g_malloc</name><argument_list pos:start="55:24" pos:end="55:43">(<argument pos:start="55:25" pos:end="55:42"><expr pos:start="55:25" pos:end="55:42"><sizeof pos:start="55:25" pos:end="55:42">sizeof<argument_list pos:start="55:31" pos:end="55:42">(<argument pos:start="55:32" pos:end="55:41"><expr pos:start="55:32" pos:end="55:41"><name pos:start="55:32" pos:end="55:41">PCTestData</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:30"><expr pos:start="57:9" pos:end="57:29"><name pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:12">data</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:21">machine</name></name> <operator pos:start="57:23" pos:end="57:23">=</operator> <name pos:start="57:25" pos:end="57:29">mname</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:36"><expr pos:start="59:9" pos:end="59:35"><name pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:12">data</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:23">cpu_model</name></name> <operator pos:start="59:25" pos:end="59:25">=</operator> <literal type="string" pos:start="59:27" pos:end="59:35">"Haswell"</literal></expr>;</expr_stmt> <comment type="block" pos:start="59:38" pos:end="59:61">/* 1.3+ theoretically */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:26"><expr pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:12">data</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:21">sockets</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="number" pos:start="61:25" pos:end="61:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:24"><expr pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:12">data</name><operator pos:start="63:13" pos:end="63:14">-&gt;</operator><name pos:start="63:15" pos:end="63:19">cores</name></name> <operator pos:start="63:21" pos:end="63:21">=</operator> <literal type="number" pos:start="63:23" pos:end="63:23">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:26"><expr pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:12">data</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:21">threads</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <literal type="number" pos:start="65:25" pos:end="65:25">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:72"><expr pos:start="67:9" pos:end="67:71"><name pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:12">data</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:21">maxcpus</name></name> <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:37"><name pos:start="67:25" pos:end="67:28">data</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:37">sockets</name></name> <operator pos:start="67:39" pos:end="67:39">*</operator> <name pos:start="67:41" pos:end="67:51"><name pos:start="67:41" pos:end="67:44">data</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:51">cores</name></name> <operator pos:start="67:53" pos:end="67:53">*</operator> <name pos:start="67:55" pos:end="67:67"><name pos:start="67:55" pos:end="67:58">data</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:67">threads</name></name> <operator pos:start="67:69" pos:end="67:69">*</operator> <literal type="number" pos:start="67:71" pos:end="67:71">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="109:9"><if pos:start="69:9" pos:end="99:9">if <condition pos:start="69:12" pos:end="89:44">(<expr pos:start="69:13" pos:end="89:43"><call pos:start="69:13" pos:end="69:43"><name pos:start="69:13" pos:end="69:28">g_str_has_suffix</name><argument_list pos:start="69:29" pos:end="69:43">(<argument pos:start="69:30" pos:end="69:34"><expr pos:start="69:30" pos:end="69:34"><name pos:start="69:30" pos:end="69:34">mname</name></expr></argument>, <argument pos:start="69:37" pos:end="69:42"><expr pos:start="69:37" pos:end="69:42"><literal type="string" pos:start="69:37" pos:end="69:42">"-1.4"</literal></expr></argument>)</argument_list></call> <operator pos:start="69:45" pos:end="69:46">||</operator>

            <operator pos:start="71:13" pos:end="71:13">(</operator><call pos:start="71:14" pos:end="71:36"><name pos:start="71:14" pos:end="71:19">strcmp</name><argument_list pos:start="71:20" pos:end="71:36">(<argument pos:start="71:21" pos:end="71:25"><expr pos:start="71:21" pos:end="71:25"><name pos:start="71:21" pos:end="71:25">mname</name></expr></argument>, <argument pos:start="71:28" pos:end="71:35"><expr pos:start="71:28" pos:end="71:35"><literal type="string" pos:start="71:28" pos:end="71:35">"pc-1.3"</literal></expr></argument>)</argument_list></call> <operator pos:start="71:38" pos:end="71:39">==</operator> <literal type="number" pos:start="71:41" pos:end="71:41">0</literal><operator pos:start="71:42" pos:end="71:42">)</operator> <operator pos:start="71:44" pos:end="71:45">||</operator>

            <operator pos:start="73:13" pos:end="73:13">(</operator><call pos:start="73:14" pos:end="73:36"><name pos:start="73:14" pos:end="73:19">strcmp</name><argument_list pos:start="73:20" pos:end="73:36">(<argument pos:start="73:21" pos:end="73:25"><expr pos:start="73:21" pos:end="73:25"><name pos:start="73:21" pos:end="73:25">mname</name></expr></argument>, <argument pos:start="73:28" pos:end="73:35"><expr pos:start="73:28" pos:end="73:35"><literal type="string" pos:start="73:28" pos:end="73:35">"pc-1.2"</literal></expr></argument>)</argument_list></call> <operator pos:start="73:38" pos:end="73:39">==</operator> <literal type="number" pos:start="73:41" pos:end="73:41">0</literal><operator pos:start="73:42" pos:end="73:42">)</operator> <operator pos:start="73:44" pos:end="73:45">||</operator>

            <operator pos:start="75:13" pos:end="75:13">(</operator><call pos:start="75:14" pos:end="75:36"><name pos:start="75:14" pos:end="75:19">strcmp</name><argument_list pos:start="75:20" pos:end="75:36">(<argument pos:start="75:21" pos:end="75:25"><expr pos:start="75:21" pos:end="75:25"><name pos:start="75:21" pos:end="75:25">mname</name></expr></argument>, <argument pos:start="75:28" pos:end="75:35"><expr pos:start="75:28" pos:end="75:35"><literal type="string" pos:start="75:28" pos:end="75:35">"pc-1.1"</literal></expr></argument>)</argument_list></call> <operator pos:start="75:38" pos:end="75:39">==</operator> <literal type="number" pos:start="75:41" pos:end="75:41">0</literal><operator pos:start="75:42" pos:end="75:42">)</operator> <operator pos:start="75:44" pos:end="75:45">||</operator>

            <operator pos:start="77:13" pos:end="77:13">(</operator><call pos:start="77:14" pos:end="77:36"><name pos:start="77:14" pos:end="77:19">strcmp</name><argument_list pos:start="77:20" pos:end="77:36">(<argument pos:start="77:21" pos:end="77:25"><expr pos:start="77:21" pos:end="77:25"><name pos:start="77:21" pos:end="77:25">mname</name></expr></argument>, <argument pos:start="77:28" pos:end="77:35"><expr pos:start="77:28" pos:end="77:35"><literal type="string" pos:start="77:28" pos:end="77:35">"pc-1.0"</literal></expr></argument>)</argument_list></call> <operator pos:start="77:38" pos:end="77:39">==</operator> <literal type="number" pos:start="77:41" pos:end="77:41">0</literal><operator pos:start="77:42" pos:end="77:42">)</operator> <operator pos:start="77:44" pos:end="77:45">||</operator>

            <operator pos:start="79:13" pos:end="79:13">(</operator><call pos:start="79:14" pos:end="79:37"><name pos:start="79:14" pos:end="79:19">strcmp</name><argument_list pos:start="79:20" pos:end="79:37">(<argument pos:start="79:21" pos:end="79:25"><expr pos:start="79:21" pos:end="79:25"><name pos:start="79:21" pos:end="79:25">mname</name></expr></argument>, <argument pos:start="79:28" pos:end="79:36"><expr pos:start="79:28" pos:end="79:36"><literal type="string" pos:start="79:28" pos:end="79:36">"pc-0.15"</literal></expr></argument>)</argument_list></call> <operator pos:start="79:39" pos:end="79:40">==</operator> <literal type="number" pos:start="79:42" pos:end="79:42">0</literal><operator pos:start="79:43" pos:end="79:43">)</operator> <operator pos:start="79:45" pos:end="79:46">||</operator>

            <operator pos:start="81:13" pos:end="81:13">(</operator><call pos:start="81:14" pos:end="81:37"><name pos:start="81:14" pos:end="81:19">strcmp</name><argument_list pos:start="81:20" pos:end="81:37">(<argument pos:start="81:21" pos:end="81:25"><expr pos:start="81:21" pos:end="81:25"><name pos:start="81:21" pos:end="81:25">mname</name></expr></argument>, <argument pos:start="81:28" pos:end="81:36"><expr pos:start="81:28" pos:end="81:36"><literal type="string" pos:start="81:28" pos:end="81:36">"pc-0.14"</literal></expr></argument>)</argument_list></call> <operator pos:start="81:39" pos:end="81:40">==</operator> <literal type="number" pos:start="81:42" pos:end="81:42">0</literal><operator pos:start="81:43" pos:end="81:43">)</operator> <operator pos:start="81:45" pos:end="81:46">||</operator>

            <operator pos:start="83:13" pos:end="83:13">(</operator><call pos:start="83:14" pos:end="83:37"><name pos:start="83:14" pos:end="83:19">strcmp</name><argument_list pos:start="83:20" pos:end="83:37">(<argument pos:start="83:21" pos:end="83:25"><expr pos:start="83:21" pos:end="83:25"><name pos:start="83:21" pos:end="83:25">mname</name></expr></argument>, <argument pos:start="83:28" pos:end="83:36"><expr pos:start="83:28" pos:end="83:36"><literal type="string" pos:start="83:28" pos:end="83:36">"pc-0.13"</literal></expr></argument>)</argument_list></call> <operator pos:start="83:39" pos:end="83:40">==</operator> <literal type="number" pos:start="83:42" pos:end="83:42">0</literal><operator pos:start="83:43" pos:end="83:43">)</operator> <operator pos:start="83:45" pos:end="83:46">||</operator>

            <operator pos:start="85:13" pos:end="85:13">(</operator><call pos:start="85:14" pos:end="85:37"><name pos:start="85:14" pos:end="85:19">strcmp</name><argument_list pos:start="85:20" pos:end="85:37">(<argument pos:start="85:21" pos:end="85:25"><expr pos:start="85:21" pos:end="85:25"><name pos:start="85:21" pos:end="85:25">mname</name></expr></argument>, <argument pos:start="85:28" pos:end="85:36"><expr pos:start="85:28" pos:end="85:36"><literal type="string" pos:start="85:28" pos:end="85:36">"pc-0.12"</literal></expr></argument>)</argument_list></call> <operator pos:start="85:39" pos:end="85:40">==</operator> <literal type="number" pos:start="85:42" pos:end="85:42">0</literal><operator pos:start="85:43" pos:end="85:43">)</operator> <operator pos:start="85:45" pos:end="85:46">||</operator>

            <operator pos:start="87:13" pos:end="87:13">(</operator><call pos:start="87:14" pos:end="87:37"><name pos:start="87:14" pos:end="87:19">strcmp</name><argument_list pos:start="87:20" pos:end="87:37">(<argument pos:start="87:21" pos:end="87:25"><expr pos:start="87:21" pos:end="87:25"><name pos:start="87:21" pos:end="87:25">mname</name></expr></argument>, <argument pos:start="87:28" pos:end="87:36"><expr pos:start="87:28" pos:end="87:36"><literal type="string" pos:start="87:28" pos:end="87:36">"pc-0.11"</literal></expr></argument>)</argument_list></call> <operator pos:start="87:39" pos:end="87:40">==</operator> <literal type="number" pos:start="87:42" pos:end="87:42">0</literal><operator pos:start="87:43" pos:end="87:43">)</operator> <operator pos:start="87:45" pos:end="87:46">||</operator>

            <operator pos:start="89:13" pos:end="89:13">(</operator><call pos:start="89:14" pos:end="89:37"><name pos:start="89:14" pos:end="89:19">strcmp</name><argument_list pos:start="89:20" pos:end="89:37">(<argument pos:start="89:21" pos:end="89:25"><expr pos:start="89:21" pos:end="89:25"><name pos:start="89:21" pos:end="89:25">mname</name></expr></argument>, <argument pos:start="89:28" pos:end="89:36"><expr pos:start="89:28" pos:end="89:36"><literal type="string" pos:start="89:28" pos:end="89:36">"pc-0.10"</literal></expr></argument>)</argument_list></call> <operator pos:start="89:39" pos:end="89:40">==</operator> <literal type="number" pos:start="89:42" pos:end="89:42">0</literal><operator pos:start="89:43" pos:end="89:43">)</operator></expr>)</condition> <block pos:start="89:46" pos:end="99:9">{<block_content pos:start="91:13" pos:end="97:69">

            <expr_stmt pos:start="91:13" pos:end="95:65"><expr pos:start="91:13" pos:end="95:64"><name pos:start="91:13" pos:end="91:16">path</name> <operator pos:start="91:18" pos:end="91:18">=</operator> <call pos:start="91:20" pos:end="95:64"><name pos:start="91:20" pos:end="91:34">g_strdup_printf</name><argument_list pos:start="91:35" pos:end="95:64">(<argument pos:start="91:36" pos:end="91:68"><expr pos:start="91:36" pos:end="91:68"><literal type="string" pos:start="91:36" pos:end="91:68">"cpu/%s/init/%ux%ux%u&amp;maxcpus=%u"</literal></expr></argument>,

                                   <argument pos:start="93:36" pos:end="93:40"><expr pos:start="93:36" pos:end="93:40"><name pos:start="93:36" pos:end="93:40">mname</name></expr></argument>, <argument pos:start="93:43" pos:end="93:55"><expr pos:start="93:43" pos:end="93:55"><name pos:start="93:43" pos:end="93:55"><name pos:start="93:43" pos:end="93:46">data</name><operator pos:start="93:47" pos:end="93:48">-&gt;</operator><name pos:start="93:49" pos:end="93:55">sockets</name></name></expr></argument>, <argument pos:start="93:58" pos:end="93:68"><expr pos:start="93:58" pos:end="93:68"><name pos:start="93:58" pos:end="93:68"><name pos:start="93:58" pos:end="93:61">data</name><operator pos:start="93:62" pos:end="93:63">-&gt;</operator><name pos:start="93:64" pos:end="93:68">cores</name></name></expr></argument>,

                                   <argument pos:start="95:36" pos:end="95:48"><expr pos:start="95:36" pos:end="95:48"><name pos:start="95:36" pos:end="95:48"><name pos:start="95:36" pos:end="95:39">data</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:48">threads</name></name></expr></argument>, <argument pos:start="95:51" pos:end="95:63"><expr pos:start="95:51" pos:end="95:63"><name pos:start="95:51" pos:end="95:63"><name pos:start="95:51" pos:end="95:54">data</name><operator pos:start="95:55" pos:end="95:56">-&gt;</operator><name pos:start="95:57" pos:end="95:63">maxcpus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:69"><expr pos:start="97:13" pos:end="97:68"><call pos:start="97:13" pos:end="97:68"><name pos:start="97:13" pos:end="97:31">qtest_add_data_func</name><argument_list pos:start="97:32" pos:end="97:68">(<argument pos:start="97:33" pos:end="97:36"><expr pos:start="97:33" pos:end="97:36"><name pos:start="97:33" pos:end="97:36">path</name></expr></argument>, <argument pos:start="97:39" pos:end="97:42"><expr pos:start="97:39" pos:end="97:42"><name pos:start="97:39" pos:end="97:42">data</name></expr></argument>, <argument pos:start="97:45" pos:end="97:67"><expr pos:start="97:45" pos:end="97:67"><name pos:start="97:45" pos:end="97:67">test_pc_without_cpu_add</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="99:11" pos:end="109:9">else <block pos:start="99:16" pos:end="109:9">{<block_content pos:start="101:13" pos:end="107:66">

            <expr_stmt pos:start="101:13" pos:end="105:65"><expr pos:start="101:13" pos:end="105:64"><name pos:start="101:13" pos:end="101:16">path</name> <operator pos:start="101:18" pos:end="101:18">=</operator> <call pos:start="101:20" pos:end="105:64"><name pos:start="101:20" pos:end="101:34">g_strdup_printf</name><argument_list pos:start="101:35" pos:end="105:64">(<argument pos:start="101:36" pos:end="101:67"><expr pos:start="101:36" pos:end="101:67"><literal type="string" pos:start="101:36" pos:end="101:67">"cpu/%s/add/%ux%ux%u&amp;maxcpus=%u"</literal></expr></argument>,

                                   <argument pos:start="103:36" pos:end="103:40"><expr pos:start="103:36" pos:end="103:40"><name pos:start="103:36" pos:end="103:40">mname</name></expr></argument>, <argument pos:start="103:43" pos:end="103:55"><expr pos:start="103:43" pos:end="103:55"><name pos:start="103:43" pos:end="103:55"><name pos:start="103:43" pos:end="103:46">data</name><operator pos:start="103:47" pos:end="103:48">-&gt;</operator><name pos:start="103:49" pos:end="103:55">sockets</name></name></expr></argument>, <argument pos:start="103:58" pos:end="103:68"><expr pos:start="103:58" pos:end="103:68"><name pos:start="103:58" pos:end="103:68"><name pos:start="103:58" pos:end="103:61">data</name><operator pos:start="103:62" pos:end="103:63">-&gt;</operator><name pos:start="103:64" pos:end="103:68">cores</name></name></expr></argument>,

                                   <argument pos:start="105:36" pos:end="105:48"><expr pos:start="105:36" pos:end="105:48"><name pos:start="105:36" pos:end="105:48"><name pos:start="105:36" pos:end="105:39">data</name><operator pos:start="105:40" pos:end="105:41">-&gt;</operator><name pos:start="105:42" pos:end="105:48">threads</name></name></expr></argument>, <argument pos:start="105:51" pos:end="105:63"><expr pos:start="105:51" pos:end="105:63"><name pos:start="105:51" pos:end="105:63"><name pos:start="105:51" pos:end="105:54">data</name><operator pos:start="105:55" pos:end="105:56">-&gt;</operator><name pos:start="105:57" pos:end="105:63">maxcpus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:66"><expr pos:start="107:13" pos:end="107:65"><call pos:start="107:13" pos:end="107:65"><name pos:start="107:13" pos:end="107:31">qtest_add_data_func</name><argument_list pos:start="107:32" pos:end="107:65">(<argument pos:start="107:33" pos:end="107:36"><expr pos:start="107:33" pos:end="107:36"><name pos:start="107:33" pos:end="107:36">path</name></expr></argument>, <argument pos:start="107:39" pos:end="107:42"><expr pos:start="107:39" pos:end="107:42"><name pos:start="107:39" pos:end="107:42">data</name></expr></argument>, <argument pos:start="107:45" pos:end="107:64"><expr pos:start="107:45" pos:end="107:64"><name pos:start="107:45" pos:end="107:64">test_pc_with_cpu_add</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="113:5" pos:end="113:16"><expr pos:start="113:5" pos:end="113:15"><call pos:start="113:5" pos:end="113:15"><name pos:start="113:5" pos:end="113:13">qtest_end</name><argument_list pos:start="113:14" pos:end="113:15">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
