<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23152.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">iscsi_create</name><parameter_list pos:start="1:24" pos:end="3:37">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:44">filename</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:74"><decl pos:start="1:47" pos:end="1:74"><type pos:start="1:47" pos:end="1:74"><name pos:start="1:47" pos:end="1:65">QEMUOptionParameter</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:74">options</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:36"><decl pos:start="3:25" pos:end="3:36"><type pos:start="3:25" pos:end="3:36"><name pos:start="3:25" pos:end="3:29">Error</name> <modifier pos:start="3:31" pos:end="3:31">*</modifier><modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:36">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="105:1">{<block_content pos:start="7:5" pos:end="103:15">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:22">total_size</name> <init pos:start="9:24" pos:end="9:26">= <expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">BlockDriverState</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">IscsiLun</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:22">iscsilun</name> <init pos:start="13:24" pos:end="13:29">= <expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">QDict</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:21">bs_options</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:6">bs</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:21"><name pos:start="19:10" pos:end="19:17">bdrv_new</name><argument_list pos:start="19:18" pos:end="19:21">(<argument pos:start="19:19" pos:end="19:20"><expr pos:start="19:19" pos:end="19:20"><literal type="string" pos:start="19:19" pos:end="19:20">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:26">/* Read out options */</comment>

    <while pos:start="25:5" pos:end="35:5">while <condition pos:start="25:11" pos:end="25:36">(<expr pos:start="25:12" pos:end="25:35"><name pos:start="25:12" pos:end="25:18">options</name> <operator pos:start="25:20" pos:end="25:21">&amp;&amp;</operator> <name pos:start="25:23" pos:end="25:35"><name pos:start="25:23" pos:end="25:29">options</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:35">name</name></name></expr>)</condition> <block pos:start="25:38" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:18">

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:43">(<expr pos:start="27:13" pos:end="27:42"><operator pos:start="27:13" pos:end="27:13">!</operator><call pos:start="27:14" pos:end="27:42"><name pos:start="27:14" pos:end="27:19">strcmp</name><argument_list pos:start="27:20" pos:end="27:42">(<argument pos:start="27:21" pos:end="27:33"><expr pos:start="27:21" pos:end="27:33"><name pos:start="27:21" pos:end="27:33"><name pos:start="27:21" pos:end="27:27">options</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:33">name</name></name></expr></argument>, <argument pos:start="27:36" pos:end="27:41"><expr pos:start="27:36" pos:end="27:41"><literal type="string" pos:start="27:36" pos:end="27:41">"size"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:45" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:61">

            <expr_stmt pos:start="29:13" pos:end="29:61"><expr pos:start="29:13" pos:end="29:60"><name pos:start="29:13" pos:end="29:22">total_size</name> <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:41"><name pos:start="29:26" pos:end="29:32">options</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:39">value</name><operator pos:start="29:40" pos:end="29:40">.</operator><name pos:start="29:41" pos:end="29:41">n</name></name> <operator pos:start="29:43" pos:end="29:43">/</operator> <name pos:start="29:45" pos:end="29:60">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:18"><expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:15">options</name><operator pos:start="33:16" pos:end="33:17">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="39:5" pos:end="39:52"><expr pos:start="39:5" pos:end="39:51"><name pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:6">bs</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:14">opaque</name></name> <operator pos:start="39:16" pos:end="39:16">=</operator> <call pos:start="39:18" pos:end="39:51"><name pos:start="39:18" pos:end="39:26">g_malloc0</name><argument_list pos:start="39:27" pos:end="39:51">(<argument pos:start="39:28" pos:end="39:50"><expr pos:start="39:28" pos:end="39:50"><sizeof pos:start="39:28" pos:end="39:50">sizeof<argument_list pos:start="39:34" pos:end="39:50">(<argument pos:start="39:35" pos:end="39:49"><expr pos:start="39:35" pos:end="39:49">struct <name pos:start="39:42" pos:end="39:49">IscsiLun</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:26"><expr pos:start="41:5" pos:end="41:25"><name pos:start="41:5" pos:end="41:12">iscsilun</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <name pos:start="41:16" pos:end="41:25"><name pos:start="41:16" pos:end="41:17">bs</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:25">opaque</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:14">bs_options</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:28"><name pos:start="45:18" pos:end="45:26">qdict_new</name><argument_list pos:start="45:27" pos:end="45:28">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:66"><expr pos:start="47:5" pos:end="47:65"><call pos:start="47:5" pos:end="47:65"><name pos:start="47:5" pos:end="47:13">qdict_put</name><argument_list pos:start="47:14" pos:end="47:65">(<argument pos:start="47:15" pos:end="47:24"><expr pos:start="47:15" pos:end="47:24"><name pos:start="47:15" pos:end="47:24">bs_options</name></expr></argument>, <argument pos:start="47:27" pos:end="47:36"><expr pos:start="47:27" pos:end="47:36"><literal type="string" pos:start="47:27" pos:end="47:36">"filename"</literal></expr></argument>, <argument pos:start="47:39" pos:end="47:64"><expr pos:start="47:39" pos:end="47:64"><call pos:start="47:39" pos:end="47:64"><name pos:start="47:39" pos:end="47:54">qstring_from_str</name><argument_list pos:start="47:55" pos:end="47:64">(<argument pos:start="47:56" pos:end="47:63"><expr pos:start="47:56" pos:end="47:63"><name pos:start="47:56" pos:end="47:63">filename</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:46"><expr pos:start="49:5" pos:end="49:45"><name pos:start="49:5" pos:end="49:7">ret</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:45"><name pos:start="49:11" pos:end="49:20">iscsi_open</name><argument_list pos:start="49:21" pos:end="49:45">(<argument pos:start="49:22" pos:end="49:23"><expr pos:start="49:22" pos:end="49:23"><name pos:start="49:22" pos:end="49:23">bs</name></expr></argument>, <argument pos:start="49:26" pos:end="49:35"><expr pos:start="49:26" pos:end="49:35"><name pos:start="49:26" pos:end="49:35">bs_options</name></expr></argument>, <argument pos:start="49:38" pos:end="49:38"><expr pos:start="49:38" pos:end="49:38"><literal type="number" pos:start="49:38" pos:end="49:38">0</literal></expr></argument>, <argument pos:start="49:41" pos:end="49:44"><expr pos:start="49:41" pos:end="49:44"><name pos:start="49:41" pos:end="49:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:24"><expr pos:start="51:5" pos:end="51:23"><call pos:start="51:5" pos:end="51:23"><name pos:start="51:5" pos:end="51:11">QDECREF</name><argument_list pos:start="51:12" pos:end="51:23">(<argument pos:start="51:13" pos:end="51:22"><expr pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:22">bs_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:17">(<expr pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:14">!=</operator> <literal type="number" pos:start="55:16" pos:end="55:16">0</literal></expr>)</condition> <block pos:start="55:19" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:17">

        <goto pos:start="57:9" pos:end="57:17">goto <name pos:start="57:14" pos:end="57:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:28">(<expr pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:16">iscsilun</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:27">nop_timer</name></name></expr>)</condition> <block pos:start="61:30" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:40">

        <expr_stmt pos:start="63:9" pos:end="63:39"><expr pos:start="63:9" pos:end="63:38"><call pos:start="63:9" pos:end="63:38"><name pos:start="63:9" pos:end="63:17">timer_del</name><argument_list pos:start="63:18" pos:end="63:38">(<argument pos:start="63:19" pos:end="63:37"><expr pos:start="63:19" pos:end="63:37"><name pos:start="63:19" pos:end="63:37"><name pos:start="63:19" pos:end="63:26">iscsilun</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:37">nop_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:40"><expr pos:start="65:9" pos:end="65:39"><call pos:start="65:9" pos:end="65:39"><name pos:start="65:9" pos:end="65:18">timer_free</name><argument_list pos:start="65:19" pos:end="65:39">(<argument pos:start="65:20" pos:end="65:38"><expr pos:start="65:20" pos:end="65:38"><name pos:start="65:20" pos:end="65:38"><name pos:start="65:20" pos:end="65:27">iscsilun</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:38">nop_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:36">(<expr pos:start="69:9" pos:end="69:35"><name pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:16">iscsilun</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:22">type</name></name> <operator pos:start="69:24" pos:end="69:25">!=</operator> <name pos:start="69:27" pos:end="69:35">TYPE_DISK</name></expr>)</condition> <block pos:start="69:38" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:17">

        <expr_stmt pos:start="71:9" pos:end="71:22"><expr pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <operator pos:start="71:15" pos:end="71:15">-</operator><name pos:start="71:16" pos:end="71:21">ENODEV</name></expr>;</expr_stmt>

        <goto pos:start="73:9" pos:end="73:17">goto <name pos:start="73:14" pos:end="73:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:39">(<expr pos:start="77:9" pos:end="77:38"><name pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:10">bs</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:25">total_sectors</name></name> <operator pos:start="77:27" pos:end="77:27">&lt;</operator> <name pos:start="77:29" pos:end="77:38">total_size</name></expr>)</condition> <block pos:start="77:41" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:17">

        <expr_stmt pos:start="79:9" pos:end="79:22"><expr pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <operator pos:start="79:15" pos:end="79:15">-</operator><name pos:start="79:16" pos:end="79:21">ENOSPC</name></expr>;</expr_stmt>

        <goto pos:start="81:9" pos:end="81:17">goto <name pos:start="81:14" pos:end="81:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:12"><expr pos:start="87:5" pos:end="87:11"><name pos:start="87:5" pos:end="87:7">ret</name> <operator pos:start="87:9" pos:end="87:9">=</operator> <literal type="number" pos:start="87:11" pos:end="87:11">0</literal></expr>;</expr_stmt>

<label pos:start="89:1" pos:end="89:4"><name pos:start="89:1" pos:end="89:3">out</name>:</label>

    <if_stmt pos:start="91:5" pos:end="95:5"><if pos:start="91:5" pos:end="95:5">if <condition pos:start="91:8" pos:end="91:32">(<expr pos:start="91:9" pos:end="91:31"><name pos:start="91:9" pos:end="91:23"><name pos:start="91:9" pos:end="91:16">iscsilun</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:23">iscsi</name></name> <operator pos:start="91:25" pos:end="91:26">!=</operator> <name pos:start="91:28" pos:end="91:31">NULL</name></expr>)</condition> <block pos:start="91:34" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:47">

        <expr_stmt pos:start="93:9" pos:end="93:47"><expr pos:start="93:9" pos:end="93:46"><call pos:start="93:9" pos:end="93:46"><name pos:start="93:9" pos:end="93:29">iscsi_destroy_context</name><argument_list pos:start="93:30" pos:end="93:46">(<argument pos:start="93:31" pos:end="93:45"><expr pos:start="93:31" pos:end="93:45"><name pos:start="93:31" pos:end="93:45"><name pos:start="93:31" pos:end="93:38">iscsilun</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:45">iscsi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:23"><expr pos:start="97:5" pos:end="97:22"><call pos:start="97:5" pos:end="97:22"><name pos:start="97:5" pos:end="97:10">g_free</name><argument_list pos:start="97:11" pos:end="97:22">(<argument pos:start="97:12" pos:end="97:21"><expr pos:start="97:12" pos:end="97:21"><name pos:start="97:12" pos:end="97:21"><name pos:start="97:12" pos:end="97:13">bs</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:21">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:22"><expr pos:start="99:5" pos:end="99:21"><name pos:start="99:5" pos:end="99:14"><name pos:start="99:5" pos:end="99:6">bs</name><operator pos:start="99:7" pos:end="99:8">-&gt;</operator><name pos:start="99:9" pos:end="99:14">opaque</name></name> <operator pos:start="99:16" pos:end="99:16">=</operator> <name pos:start="99:18" pos:end="99:21">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:19"><expr pos:start="101:5" pos:end="101:18"><call pos:start="101:5" pos:end="101:18"><name pos:start="101:5" pos:end="101:14">bdrv_unref</name><argument_list pos:start="101:15" pos:end="101:18">(<argument pos:start="101:16" pos:end="101:17"><expr pos:start="101:16" pos:end="101:17"><name pos:start="101:16" pos:end="101:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="103:5" pos:end="103:15">return <expr pos:start="103:12" pos:end="103:14"><name pos:start="103:12" pos:end="103:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
