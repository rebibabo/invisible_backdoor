<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7744.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">tcg_out_qemu_ld</name> <parameter_list pos:start="1:29" pos:end="1:72">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:39">TCGContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:56">TCGArg</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">args</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:71"><decl pos:start="1:65" pos:end="1:71"><type pos:start="1:65" pos:end="1:71"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:71">opc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="223:1">{<block_content pos:start="5:5" pos:end="222:0">

    <decl_stmt pos:start="5:5" pos:end="8:0"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">addr_reg</name></decl>, <decl pos:start="5:19" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:26">data_reg</name></decl>, <decl pos:start="5:29" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:37">data_reg2</name></decl>, <decl pos:start="5:40" pos:end="5:41"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:40" pos:end="5:41">r0</name></decl>, <decl pos:start="5:44" pos:end="5:45"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:44" pos:end="5:45">r1</name></decl>, <decl pos:start="5:48" pos:end="5:52"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:48" pos:end="5:52">rbase</name></decl>, <decl pos:start="5:55" pos:end="5:59"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:55" pos:end="5:59">bswap</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="7:1" pos:end="7:21">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:21">CONFIG_SOFTMMU</name></cpp:ifdef>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">mem_index</name></decl>, <decl pos:start="9:20" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:25">s_bits</name></decl>, <decl pos:start="9:28" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:29">r2</name></decl>, <decl pos:start="9:32" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:32" pos:end="9:40">addr_reg2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="14:0"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:22">label_ptr</name></decl>;</decl_stmt>

<cpp:endif pos:start="13:1" pos:end="13:6">#<cpp:directive pos:start="13:2" pos:end="13:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:12">data_reg</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <operator pos:start="17:16" pos:end="17:16">*</operator><name pos:start="17:17" pos:end="17:20">args</name><operator pos:start="17:21" pos:end="17:22">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:22"><if pos:start="19:5" pos:end="21:28">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:11">opc</name> <operator pos:start="19:13" pos:end="19:14">==</operator> <literal type="number" pos:start="19:16" pos:end="19:16">3</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:28"><block_content pos:start="21:9" pos:end="21:28">

        <expr_stmt pos:start="21:9" pos:end="21:28"><expr pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:17">data_reg2</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <operator pos:start="21:21" pos:end="21:21">*</operator><name pos:start="21:22" pos:end="21:25">args</name><operator pos:start="21:26" pos:end="21:27">++</operator></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="23:5" pos:end="25:22">else<block type="pseudo" pos:start="25:9" pos:end="25:22"><block_content pos:start="25:9" pos:end="25:22">

        <expr_stmt pos:start="25:9" pos:end="25:22"><expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:17">data_reg2</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="34:0"><expr pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:12">addr_reg</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <operator pos:start="27:16" pos:end="27:16">*</operator><name pos:start="27:17" pos:end="27:20">args</name><operator pos:start="27:21" pos:end="27:22">++</operator></expr>;</expr_stmt>



<cpp:ifdef pos:start="31:1" pos:end="31:21">#<cpp:directive pos:start="31:2" pos:end="31:6">ifdef</cpp:directive> <name pos:start="31:8" pos:end="31:21">CONFIG_SOFTMMU</name></cpp:ifdef>

<cpp:if pos:start="33:1" pos:end="33:26">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:20">TARGET_LONG_BITS</name> <operator pos:start="33:22" pos:end="33:23">==</operator> <literal type="number" pos:start="33:25" pos:end="33:26">64</literal></expr></cpp:if>

    <expr_stmt pos:start="35:5" pos:end="38:0"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:13">addr_reg2</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <operator pos:start="35:17" pos:end="35:17">*</operator><name pos:start="35:18" pos:end="35:21">args</name><operator pos:start="35:22" pos:end="35:23">++</operator></expr>;</expr_stmt>

<cpp:else pos:start="37:1" pos:end="37:5">#<cpp:directive pos:start="37:2" pos:end="37:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="39:5" pos:end="42:0"><expr pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:13">addr_reg2</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <literal type="number" pos:start="39:17" pos:end="39:17">0</literal></expr>;</expr_stmt>

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="43:5" pos:end="43:22"><expr pos:start="43:5" pos:end="43:21"><name pos:start="43:5" pos:end="43:13">mem_index</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <operator pos:start="43:17" pos:end="43:17">*</operator><name pos:start="43:18" pos:end="43:21">args</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:21"><expr pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:10">s_bits</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:16">opc</name> <operator pos:start="45:18" pos:end="45:18">&amp;</operator> <literal type="number" pos:start="45:20" pos:end="45:20">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:11"><expr pos:start="47:5" pos:end="47:10"><name pos:start="47:5" pos:end="47:6">r0</name> <operator pos:start="47:8" pos:end="47:8">=</operator> <literal type="number" pos:start="47:10" pos:end="47:10">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:11"><expr pos:start="49:5" pos:end="49:10"><name pos:start="49:5" pos:end="49:6">r1</name> <operator pos:start="49:8" pos:end="49:8">=</operator> <literal type="number" pos:start="49:10" pos:end="49:10">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:11"><expr pos:start="51:5" pos:end="51:10"><name pos:start="51:5" pos:end="51:6">r2</name> <operator pos:start="51:8" pos:end="51:8">=</operator> <literal type="number" pos:start="51:10" pos:end="51:10">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:14"><expr pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:9">rbase</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <literal type="number" pos:start="53:13" pos:end="53:13">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="70:0"><expr pos:start="57:5" pos:end="67:9"><call pos:start="57:5" pos:end="67:9"><name pos:start="57:5" pos:end="57:21">tcg_out_tlb_check</name> <argument_list pos:start="57:23" pos:end="67:9">(

        <argument pos:start="59:9" pos:end="59:9"><expr pos:start="59:9" pos:end="59:9"><name pos:start="59:9" pos:end="59:9">s</name></expr></argument>, <argument pos:start="59:12" pos:end="59:13"><expr pos:start="59:12" pos:end="59:13"><name pos:start="59:12" pos:end="59:13">r0</name></expr></argument>, <argument pos:start="59:16" pos:end="59:17"><expr pos:start="59:16" pos:end="59:17"><name pos:start="59:16" pos:end="59:17">r1</name></expr></argument>, <argument pos:start="59:20" pos:end="59:21"><expr pos:start="59:20" pos:end="59:21"><name pos:start="59:20" pos:end="59:21">r2</name></expr></argument>, <argument pos:start="59:24" pos:end="59:31"><expr pos:start="59:24" pos:end="59:31"><name pos:start="59:24" pos:end="59:31">addr_reg</name></expr></argument>, <argument pos:start="59:34" pos:end="59:42"><expr pos:start="59:34" pos:end="59:42"><name pos:start="59:34" pos:end="59:42">addr_reg2</name></expr></argument>, <argument pos:start="59:45" pos:end="59:50"><expr pos:start="59:45" pos:end="59:50"><name pos:start="59:45" pos:end="59:50">s_bits</name></expr></argument>,

        <argument pos:start="61:9" pos:end="61:66"><expr pos:start="61:9" pos:end="61:66"><call pos:start="61:9" pos:end="61:66"><name pos:start="61:9" pos:end="61:16">offsetof</name> <argument_list pos:start="61:18" pos:end="61:66">(<argument pos:start="61:19" pos:end="61:30"><expr pos:start="61:19" pos:end="61:30"><name pos:start="61:19" pos:end="61:30">CPUArchState</name></expr></argument>, <argument pos:start="61:33" pos:end="61:65"><expr pos:start="61:33" pos:end="61:65"><name pos:start="61:33" pos:end="61:55"><name pos:start="61:33" pos:end="61:41">tlb_table</name><index pos:start="61:42" pos:end="61:52">[<expr pos:start="61:43" pos:end="61:51"><name pos:start="61:43" pos:end="61:51">mem_index</name></expr>]</index><index pos:start="61:53" pos:end="61:55">[<expr pos:start="61:54" pos:end="61:54"><literal type="number" pos:start="61:54" pos:end="61:54">0</literal></expr>]</index></name><operator pos:start="61:56" pos:end="61:56">.</operator><name pos:start="61:57" pos:end="61:65">addr_read</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="63:9" pos:end="63:74"><expr pos:start="63:9" pos:end="63:74"><call pos:start="63:9" pos:end="63:38"><name pos:start="63:9" pos:end="63:16">offsetof</name> <argument_list pos:start="63:18" pos:end="63:38">(<argument pos:start="63:19" pos:end="63:29"><expr pos:start="63:19" pos:end="63:29"><name pos:start="63:19" pos:end="63:29">CPUTLBEntry</name></expr></argument>, <argument pos:start="63:32" pos:end="63:37"><expr pos:start="63:32" pos:end="63:37"><name pos:start="63:32" pos:end="63:37">addend</name></expr></argument>)</argument_list></call> <operator pos:start="63:40" pos:end="63:40">-</operator> <call pos:start="63:42" pos:end="63:74"><name pos:start="63:42" pos:end="63:49">offsetof</name> <argument_list pos:start="63:51" pos:end="63:74">(<argument pos:start="63:52" pos:end="63:62"><expr pos:start="63:52" pos:end="63:62"><name pos:start="63:52" pos:end="63:62">CPUTLBEntry</name></expr></argument>, <argument pos:start="63:65" pos:end="63:73"><expr pos:start="63:65" pos:end="63:73"><name pos:start="63:65" pos:end="63:73">addr_read</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="65:9" pos:end="65:18"><expr pos:start="65:9" pos:end="65:18"><operator pos:start="65:9" pos:end="65:9">&amp;</operator><name pos:start="65:10" pos:end="65:18">label_ptr</name></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="69:1" pos:end="69:5">#<cpp:directive pos:start="69:2" pos:end="69:5">else</cpp:directive></cpp:else>  <comment type="block" pos:start="69:8" pos:end="69:28">/* !CONFIG_SOFTMMU */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:18"><expr pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:6">r0</name> <operator pos:start="71:8" pos:end="71:8">=</operator> <name pos:start="71:10" pos:end="71:17">addr_reg</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:11"><expr pos:start="73:5" pos:end="73:10"><name pos:start="73:5" pos:end="73:6">r1</name> <operator pos:start="73:8" pos:end="73:8">=</operator> <literal type="number" pos:start="73:10" pos:end="73:10">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="82:0"><expr pos:start="75:5" pos:end="75:47"><name pos:start="75:5" pos:end="75:9">rbase</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <ternary pos:start="75:13" pos:end="75:47"><condition pos:start="75:13" pos:end="75:24"><expr pos:start="75:13" pos:end="75:22"><name pos:start="75:13" pos:end="75:22">GUEST_BASE</name></expr> ?</condition><then pos:start="75:26" pos:end="75:43"> <expr pos:start="75:26" pos:end="75:43"><name pos:start="75:26" pos:end="75:43">TCG_GUEST_BASE_REG</name></expr> </then><else pos:start="75:45" pos:end="75:47">: <expr pos:start="75:47" pos:end="75:47"><literal type="number" pos:start="75:47" pos:end="75:47">0</literal></expr></else></ternary></expr>;</expr_stmt>

<cpp:endif pos:start="77:1" pos:end="77:6">#<cpp:directive pos:start="77:2" pos:end="77:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="81:1" pos:end="81:29">#<cpp:directive pos:start="81:2" pos:end="81:6">ifdef</cpp:directive> <name pos:start="81:8" pos:end="81:29">TARGET_WORDS_BIGENDIAN</name></cpp:ifdef>

    <expr_stmt pos:start="83:5" pos:end="86:0"><expr pos:start="83:5" pos:end="83:13"><name pos:start="83:5" pos:end="83:9">bswap</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <literal type="number" pos:start="83:13" pos:end="83:13">0</literal></expr>;</expr_stmt>

<cpp:else pos:start="85:1" pos:end="85:5">#<cpp:directive pos:start="85:2" pos:end="85:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="87:5" pos:end="90:0"><expr pos:start="87:5" pos:end="87:13"><name pos:start="87:5" pos:end="87:9">bswap</name> <operator pos:start="87:11" pos:end="87:11">=</operator> <literal type="number" pos:start="87:13" pos:end="87:13">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>



    <switch pos:start="93:5" pos:end="200:0">switch <condition pos:start="93:12" pos:end="93:16">(<expr pos:start="93:13" pos:end="93:15"><name pos:start="93:13" pos:end="93:15">opc</name></expr>)</condition> <block pos:start="93:18" pos:end="200:0">{<block_content pos:start="95:5" pos:end="195:14">

    <default pos:start="95:5" pos:end="95:12">default:</default>

    <case pos:start="97:5" pos:end="97:11">case <expr pos:start="97:10" pos:end="97:10"><literal type="number" pos:start="97:10" pos:end="97:10">0</literal></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:56"><expr pos:start="99:9" pos:end="99:55"><call pos:start="99:9" pos:end="99:55"><name pos:start="99:9" pos:end="99:17">tcg_out32</name> <argument_list pos:start="99:19" pos:end="99:55">(<argument pos:start="99:20" pos:end="99:20"><expr pos:start="99:20" pos:end="99:20"><name pos:start="99:20" pos:end="99:20">s</name></expr></argument>, <argument pos:start="99:23" pos:end="99:54"><expr pos:start="99:23" pos:end="99:54"><name pos:start="99:23" pos:end="99:26">LBZX</name> <operator pos:start="99:28" pos:end="99:28">|</operator> <call pos:start="99:30" pos:end="99:54"><name pos:start="99:30" pos:end="99:32">TAB</name> <argument_list pos:start="99:34" pos:end="99:54">(<argument pos:start="99:35" pos:end="99:42"><expr pos:start="99:35" pos:end="99:42"><name pos:start="99:35" pos:end="99:42">data_reg</name></expr></argument>, <argument pos:start="99:45" pos:end="99:49"><expr pos:start="99:45" pos:end="99:49"><name pos:start="99:45" pos:end="99:49">rbase</name></expr></argument>, <argument pos:start="99:52" pos:end="99:53"><expr pos:start="99:52" pos:end="99:53"><name pos:start="99:52" pos:end="99:53">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:13">case <expr pos:start="103:10" pos:end="103:12"><literal type="number" pos:start="103:10" pos:end="103:10">0</literal><operator pos:start="103:11" pos:end="103:11">|</operator><literal type="number" pos:start="103:12" pos:end="103:12">4</literal></expr>:</case>

        <expr_stmt pos:start="105:9" pos:end="105:56"><expr pos:start="105:9" pos:end="105:55"><call pos:start="105:9" pos:end="105:55"><name pos:start="105:9" pos:end="105:17">tcg_out32</name> <argument_list pos:start="105:19" pos:end="105:55">(<argument pos:start="105:20" pos:end="105:20"><expr pos:start="105:20" pos:end="105:20"><name pos:start="105:20" pos:end="105:20">s</name></expr></argument>, <argument pos:start="105:23" pos:end="105:54"><expr pos:start="105:23" pos:end="105:54"><name pos:start="105:23" pos:end="105:26">LBZX</name> <operator pos:start="105:28" pos:end="105:28">|</operator> <call pos:start="105:30" pos:end="105:54"><name pos:start="105:30" pos:end="105:32">TAB</name> <argument_list pos:start="105:34" pos:end="105:54">(<argument pos:start="105:35" pos:end="105:42"><expr pos:start="105:35" pos:end="105:42"><name pos:start="105:35" pos:end="105:42">data_reg</name></expr></argument>, <argument pos:start="105:45" pos:end="105:49"><expr pos:start="105:45" pos:end="105:49"><name pos:start="105:45" pos:end="105:49">rbase</name></expr></argument>, <argument pos:start="105:52" pos:end="105:53"><expr pos:start="105:52" pos:end="105:53"><name pos:start="105:52" pos:end="105:53">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:61"><expr pos:start="107:9" pos:end="107:60"><call pos:start="107:9" pos:end="107:60"><name pos:start="107:9" pos:end="107:17">tcg_out32</name> <argument_list pos:start="107:19" pos:end="107:60">(<argument pos:start="107:20" pos:end="107:20"><expr pos:start="107:20" pos:end="107:20"><name pos:start="107:20" pos:end="107:20">s</name></expr></argument>, <argument pos:start="107:23" pos:end="107:59"><expr pos:start="107:23" pos:end="107:59"><name pos:start="107:23" pos:end="107:27">EXTSB</name> <operator pos:start="107:29" pos:end="107:29">|</operator> <call pos:start="107:31" pos:end="107:43"><name pos:start="107:31" pos:end="107:32">RA</name> <argument_list pos:start="107:34" pos:end="107:43">(<argument pos:start="107:35" pos:end="107:42"><expr pos:start="107:35" pos:end="107:42"><name pos:start="107:35" pos:end="107:42">data_reg</name></expr></argument>)</argument_list></call> <operator pos:start="107:45" pos:end="107:45">|</operator> <call pos:start="107:47" pos:end="107:59"><name pos:start="107:47" pos:end="107:48">RS</name> <argument_list pos:start="107:50" pos:end="107:59">(<argument pos:start="107:51" pos:end="107:58"><expr pos:start="107:51" pos:end="107:58"><name pos:start="107:51" pos:end="107:58">data_reg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    <case pos:start="111:5" pos:end="111:11">case <expr pos:start="111:10" pos:end="111:10"><literal type="number" pos:start="111:10" pos:end="111:10">1</literal></expr>:</case>

        <if_stmt pos:start="113:9" pos:end="119:60"><if pos:start="113:9" pos:end="115:61">if <condition pos:start="113:12" pos:end="113:18">(<expr pos:start="113:13" pos:end="113:17"><name pos:start="113:13" pos:end="113:17">bswap</name></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:61"><block_content pos:start="115:13" pos:end="115:61">

            <expr_stmt pos:start="115:13" pos:end="115:61"><expr pos:start="115:13" pos:end="115:60"><call pos:start="115:13" pos:end="115:60"><name pos:start="115:13" pos:end="115:21">tcg_out32</name> <argument_list pos:start="115:23" pos:end="115:60">(<argument pos:start="115:24" pos:end="115:24"><expr pos:start="115:24" pos:end="115:24"><name pos:start="115:24" pos:end="115:24">s</name></expr></argument>, <argument pos:start="115:27" pos:end="115:59"><expr pos:start="115:27" pos:end="115:59"><name pos:start="115:27" pos:end="115:31">LHBRX</name> <operator pos:start="115:33" pos:end="115:33">|</operator> <call pos:start="115:35" pos:end="115:59"><name pos:start="115:35" pos:end="115:37">TAB</name> <argument_list pos:start="115:39" pos:end="115:59">(<argument pos:start="115:40" pos:end="115:47"><expr pos:start="115:40" pos:end="115:47"><name pos:start="115:40" pos:end="115:47">data_reg</name></expr></argument>, <argument pos:start="115:50" pos:end="115:54"><expr pos:start="115:50" pos:end="115:54"><name pos:start="115:50" pos:end="115:54">rbase</name></expr></argument>, <argument pos:start="115:57" pos:end="115:58"><expr pos:start="115:57" pos:end="115:58"><name pos:start="115:57" pos:end="115:58">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="117:9" pos:end="119:60">else<block type="pseudo" pos:start="119:13" pos:end="119:60"><block_content pos:start="119:13" pos:end="119:60">

            <expr_stmt pos:start="119:13" pos:end="119:60"><expr pos:start="119:13" pos:end="119:59"><call pos:start="119:13" pos:end="119:59"><name pos:start="119:13" pos:end="119:21">tcg_out32</name> <argument_list pos:start="119:23" pos:end="119:59">(<argument pos:start="119:24" pos:end="119:24"><expr pos:start="119:24" pos:end="119:24"><name pos:start="119:24" pos:end="119:24">s</name></expr></argument>, <argument pos:start="119:27" pos:end="119:58"><expr pos:start="119:27" pos:end="119:58"><name pos:start="119:27" pos:end="119:30">LHZX</name> <operator pos:start="119:32" pos:end="119:32">|</operator> <call pos:start="119:34" pos:end="119:58"><name pos:start="119:34" pos:end="119:36">TAB</name> <argument_list pos:start="119:38" pos:end="119:58">(<argument pos:start="119:39" pos:end="119:46"><expr pos:start="119:39" pos:end="119:46"><name pos:start="119:39" pos:end="119:46">data_reg</name></expr></argument>, <argument pos:start="119:49" pos:end="119:53"><expr pos:start="119:49" pos:end="119:53"><name pos:start="119:49" pos:end="119:53">rbase</name></expr></argument>, <argument pos:start="119:56" pos:end="119:57"><expr pos:start="119:56" pos:end="119:57"><name pos:start="119:56" pos:end="119:57">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:13">case <expr pos:start="123:10" pos:end="123:12"><literal type="number" pos:start="123:10" pos:end="123:10">1</literal><operator pos:start="123:11" pos:end="123:11">|</operator><literal type="number" pos:start="123:12" pos:end="123:12">4</literal></expr>:</case>

        <if_stmt pos:start="125:9" pos:end="133:61"><if pos:start="125:9" pos:end="131:9">if <condition pos:start="125:12" pos:end="125:18">(<expr pos:start="125:13" pos:end="125:17"><name pos:start="125:13" pos:end="125:17">bswap</name></expr>)</condition> <block pos:start="125:20" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:65">

            <expr_stmt pos:start="127:13" pos:end="127:61"><expr pos:start="127:13" pos:end="127:60"><call pos:start="127:13" pos:end="127:60"><name pos:start="127:13" pos:end="127:21">tcg_out32</name> <argument_list pos:start="127:23" pos:end="127:60">(<argument pos:start="127:24" pos:end="127:24"><expr pos:start="127:24" pos:end="127:24"><name pos:start="127:24" pos:end="127:24">s</name></expr></argument>, <argument pos:start="127:27" pos:end="127:59"><expr pos:start="127:27" pos:end="127:59"><name pos:start="127:27" pos:end="127:31">LHBRX</name> <operator pos:start="127:33" pos:end="127:33">|</operator> <call pos:start="127:35" pos:end="127:59"><name pos:start="127:35" pos:end="127:37">TAB</name> <argument_list pos:start="127:39" pos:end="127:59">(<argument pos:start="127:40" pos:end="127:47"><expr pos:start="127:40" pos:end="127:47"><name pos:start="127:40" pos:end="127:47">data_reg</name></expr></argument>, <argument pos:start="127:50" pos:end="127:54"><expr pos:start="127:50" pos:end="127:54"><name pos:start="127:50" pos:end="127:54">rbase</name></expr></argument>, <argument pos:start="127:57" pos:end="127:58"><expr pos:start="127:57" pos:end="127:58"><name pos:start="127:57" pos:end="127:58">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:65"><expr pos:start="129:13" pos:end="129:64"><call pos:start="129:13" pos:end="129:64"><name pos:start="129:13" pos:end="129:21">tcg_out32</name> <argument_list pos:start="129:23" pos:end="129:64">(<argument pos:start="129:24" pos:end="129:24"><expr pos:start="129:24" pos:end="129:24"><name pos:start="129:24" pos:end="129:24">s</name></expr></argument>, <argument pos:start="129:27" pos:end="129:63"><expr pos:start="129:27" pos:end="129:63"><name pos:start="129:27" pos:end="129:31">EXTSH</name> <operator pos:start="129:33" pos:end="129:33">|</operator> <call pos:start="129:35" pos:end="129:47"><name pos:start="129:35" pos:end="129:36">RA</name> <argument_list pos:start="129:38" pos:end="129:47">(<argument pos:start="129:39" pos:end="129:46"><expr pos:start="129:39" pos:end="129:46"><name pos:start="129:39" pos:end="129:46">data_reg</name></expr></argument>)</argument_list></call> <operator pos:start="129:49" pos:end="129:49">|</operator> <call pos:start="129:51" pos:end="129:63"><name pos:start="129:51" pos:end="129:52">RS</name> <argument_list pos:start="129:54" pos:end="129:63">(<argument pos:start="129:55" pos:end="129:62"><expr pos:start="129:55" pos:end="129:62"><name pos:start="129:55" pos:end="129:62">data_reg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="133:9" pos:end="133:61">else<block type="pseudo" pos:start="133:14" pos:end="133:61"><block_content pos:start="133:14" pos:end="133:61"> <expr_stmt pos:start="133:14" pos:end="133:61"><expr pos:start="133:14" pos:end="133:60"><call pos:start="133:14" pos:end="133:60"><name pos:start="133:14" pos:end="133:22">tcg_out32</name> <argument_list pos:start="133:24" pos:end="133:60">(<argument pos:start="133:25" pos:end="133:25"><expr pos:start="133:25" pos:end="133:25"><name pos:start="133:25" pos:end="133:25">s</name></expr></argument>, <argument pos:start="133:28" pos:end="133:59"><expr pos:start="133:28" pos:end="133:59"><name pos:start="133:28" pos:end="133:31">LHAX</name> <operator pos:start="133:33" pos:end="133:33">|</operator> <call pos:start="133:35" pos:end="133:59"><name pos:start="133:35" pos:end="133:37">TAB</name> <argument_list pos:start="133:39" pos:end="133:59">(<argument pos:start="133:40" pos:end="133:47"><expr pos:start="133:40" pos:end="133:47"><name pos:start="133:40" pos:end="133:47">data_reg</name></expr></argument>, <argument pos:start="133:50" pos:end="133:54"><expr pos:start="133:50" pos:end="133:54"><name pos:start="133:50" pos:end="133:54">rbase</name></expr></argument>, <argument pos:start="133:57" pos:end="133:58"><expr pos:start="133:57" pos:end="133:58"><name pos:start="133:57" pos:end="133:58">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="135:9" pos:end="135:14">break;</break>

    <case pos:start="137:5" pos:end="137:11">case <expr pos:start="137:10" pos:end="137:10"><literal type="number" pos:start="137:10" pos:end="137:10">2</literal></expr>:</case>

        <if_stmt pos:start="139:9" pos:end="145:60"><if pos:start="139:9" pos:end="141:61">if <condition pos:start="139:12" pos:end="139:18">(<expr pos:start="139:13" pos:end="139:17"><name pos:start="139:13" pos:end="139:17">bswap</name></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:61"><block_content pos:start="141:13" pos:end="141:61">

            <expr_stmt pos:start="141:13" pos:end="141:61"><expr pos:start="141:13" pos:end="141:60"><call pos:start="141:13" pos:end="141:60"><name pos:start="141:13" pos:end="141:21">tcg_out32</name> <argument_list pos:start="141:23" pos:end="141:60">(<argument pos:start="141:24" pos:end="141:24"><expr pos:start="141:24" pos:end="141:24"><name pos:start="141:24" pos:end="141:24">s</name></expr></argument>, <argument pos:start="141:27" pos:end="141:59"><expr pos:start="141:27" pos:end="141:59"><name pos:start="141:27" pos:end="141:31">LWBRX</name> <operator pos:start="141:33" pos:end="141:33">|</operator> <call pos:start="141:35" pos:end="141:59"><name pos:start="141:35" pos:end="141:37">TAB</name> <argument_list pos:start="141:39" pos:end="141:59">(<argument pos:start="141:40" pos:end="141:47"><expr pos:start="141:40" pos:end="141:47"><name pos:start="141:40" pos:end="141:47">data_reg</name></expr></argument>, <argument pos:start="141:50" pos:end="141:54"><expr pos:start="141:50" pos:end="141:54"><name pos:start="141:50" pos:end="141:54">rbase</name></expr></argument>, <argument pos:start="141:57" pos:end="141:58"><expr pos:start="141:57" pos:end="141:58"><name pos:start="141:57" pos:end="141:58">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="143:9" pos:end="145:60">else<block type="pseudo" pos:start="145:13" pos:end="145:60"><block_content pos:start="145:13" pos:end="145:60">

            <expr_stmt pos:start="145:13" pos:end="145:60"><expr pos:start="145:13" pos:end="145:59"><call pos:start="145:13" pos:end="145:59"><name pos:start="145:13" pos:end="145:21">tcg_out32</name> <argument_list pos:start="145:23" pos:end="145:59">(<argument pos:start="145:24" pos:end="145:24"><expr pos:start="145:24" pos:end="145:24"><name pos:start="145:24" pos:end="145:24">s</name></expr></argument>, <argument pos:start="145:27" pos:end="145:58"><expr pos:start="145:27" pos:end="145:58"><name pos:start="145:27" pos:end="145:30">LWZX</name> <operator pos:start="145:32" pos:end="145:32">|</operator> <call pos:start="145:34" pos:end="145:58"><name pos:start="145:34" pos:end="145:36">TAB</name> <argument_list pos:start="145:38" pos:end="145:58">(<argument pos:start="145:39" pos:end="145:46"><expr pos:start="145:39" pos:end="145:46"><name pos:start="145:39" pos:end="145:46">data_reg</name></expr></argument>, <argument pos:start="145:49" pos:end="145:53"><expr pos:start="145:49" pos:end="145:53"><name pos:start="145:49" pos:end="145:53">rbase</name></expr></argument>, <argument pos:start="145:56" pos:end="145:57"><expr pos:start="145:56" pos:end="145:57"><name pos:start="145:56" pos:end="145:57">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="147:9" pos:end="147:14">break;</break>

    <case pos:start="149:5" pos:end="149:11">case <expr pos:start="149:10" pos:end="149:10"><literal type="number" pos:start="149:10" pos:end="149:10">3</literal></expr>:</case>

        <if_stmt pos:start="151:9" pos:end="193:9"><if pos:start="151:9" pos:end="159:9">if <condition pos:start="151:12" pos:end="151:18">(<expr pos:start="151:13" pos:end="151:17"><name pos:start="151:13" pos:end="151:17">bswap</name></expr>)</condition> <block pos:start="151:20" pos:end="159:9">{<block_content pos:start="153:13" pos:end="157:62">

            <expr_stmt pos:start="153:13" pos:end="153:56"><expr pos:start="153:13" pos:end="153:55"><call pos:start="153:13" pos:end="153:55"><name pos:start="153:13" pos:end="153:21">tcg_out32</name> <argument_list pos:start="153:23" pos:end="153:55">(<argument pos:start="153:24" pos:end="153:24"><expr pos:start="153:24" pos:end="153:24"><name pos:start="153:24" pos:end="153:24">s</name></expr></argument>, <argument pos:start="153:27" pos:end="153:54"><expr pos:start="153:27" pos:end="153:54"><name pos:start="153:27" pos:end="153:30">ADDI</name> <operator pos:start="153:32" pos:end="153:32">|</operator> <call pos:start="153:34" pos:end="153:40"><name pos:start="153:34" pos:end="153:35">RT</name> <argument_list pos:start="153:37" pos:end="153:40">(<argument pos:start="153:38" pos:end="153:39"><expr pos:start="153:38" pos:end="153:39"><name pos:start="153:38" pos:end="153:39">r1</name></expr></argument>)</argument_list></call> <operator pos:start="153:42" pos:end="153:42">|</operator> <call pos:start="153:44" pos:end="153:50"><name pos:start="153:44" pos:end="153:45">RA</name> <argument_list pos:start="153:47" pos:end="153:50">(<argument pos:start="153:48" pos:end="153:49"><expr pos:start="153:48" pos:end="153:49"><name pos:start="153:48" pos:end="153:49">r0</name></expr></argument>)</argument_list></call> <operator pos:start="153:52" pos:end="153:52">|</operator> <literal type="number" pos:start="153:54" pos:end="153:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:61"><expr pos:start="155:13" pos:end="155:60"><call pos:start="155:13" pos:end="155:60"><name pos:start="155:13" pos:end="155:21">tcg_out32</name> <argument_list pos:start="155:23" pos:end="155:60">(<argument pos:start="155:24" pos:end="155:24"><expr pos:start="155:24" pos:end="155:24"><name pos:start="155:24" pos:end="155:24">s</name></expr></argument>, <argument pos:start="155:27" pos:end="155:59"><expr pos:start="155:27" pos:end="155:59"><name pos:start="155:27" pos:end="155:31">LWBRX</name> <operator pos:start="155:33" pos:end="155:33">|</operator> <call pos:start="155:35" pos:end="155:59"><name pos:start="155:35" pos:end="155:37">TAB</name> <argument_list pos:start="155:39" pos:end="155:59">(<argument pos:start="155:40" pos:end="155:47"><expr pos:start="155:40" pos:end="155:47"><name pos:start="155:40" pos:end="155:47">data_reg</name></expr></argument>, <argument pos:start="155:50" pos:end="155:54"><expr pos:start="155:50" pos:end="155:54"><name pos:start="155:50" pos:end="155:54">rbase</name></expr></argument>, <argument pos:start="155:57" pos:end="155:58"><expr pos:start="155:57" pos:end="155:58"><name pos:start="155:57" pos:end="155:58">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:62"><expr pos:start="157:13" pos:end="157:61"><call pos:start="157:13" pos:end="157:61"><name pos:start="157:13" pos:end="157:21">tcg_out32</name> <argument_list pos:start="157:23" pos:end="157:61">(<argument pos:start="157:24" pos:end="157:24"><expr pos:start="157:24" pos:end="157:24"><name pos:start="157:24" pos:end="157:24">s</name></expr></argument>, <argument pos:start="157:27" pos:end="157:60"><expr pos:start="157:27" pos:end="157:60"><name pos:start="157:27" pos:end="157:31">LWBRX</name> <operator pos:start="157:33" pos:end="157:33">|</operator> <call pos:start="157:35" pos:end="157:60"><name pos:start="157:35" pos:end="157:37">TAB</name> <argument_list pos:start="157:39" pos:end="157:60">(<argument pos:start="157:40" pos:end="157:48"><expr pos:start="157:40" pos:end="157:48"><name pos:start="157:40" pos:end="157:48">data_reg2</name></expr></argument>, <argument pos:start="157:51" pos:end="157:55"><expr pos:start="157:51" pos:end="157:55"><name pos:start="157:51" pos:end="157:55">rbase</name></expr></argument>, <argument pos:start="157:58" pos:end="157:59"><expr pos:start="157:58" pos:end="157:59"><name pos:start="157:58" pos:end="157:59">r1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="161:9" pos:end="193:9">else <block pos:start="161:14" pos:end="193:9">{<block_content pos:start="165:13" pos:end="192:0">

<cpp:ifdef pos:start="163:1" pos:end="163:28">#<cpp:directive pos:start="163:2" pos:end="163:6">ifdef</cpp:directive> <name pos:start="163:8" pos:end="163:28">CONFIG_USE_GUEST_BASE</name></cpp:ifdef>

            <expr_stmt pos:start="165:13" pos:end="165:56"><expr pos:start="165:13" pos:end="165:55"><call pos:start="165:13" pos:end="165:55"><name pos:start="165:13" pos:end="165:21">tcg_out32</name> <argument_list pos:start="165:23" pos:end="165:55">(<argument pos:start="165:24" pos:end="165:24"><expr pos:start="165:24" pos:end="165:24"><name pos:start="165:24" pos:end="165:24">s</name></expr></argument>, <argument pos:start="165:27" pos:end="165:54"><expr pos:start="165:27" pos:end="165:54"><name pos:start="165:27" pos:end="165:30">ADDI</name> <operator pos:start="165:32" pos:end="165:32">|</operator> <call pos:start="165:34" pos:end="165:40"><name pos:start="165:34" pos:end="165:35">RT</name> <argument_list pos:start="165:37" pos:end="165:40">(<argument pos:start="165:38" pos:end="165:39"><expr pos:start="165:38" pos:end="165:39"><name pos:start="165:38" pos:end="165:39">r1</name></expr></argument>)</argument_list></call> <operator pos:start="165:42" pos:end="165:42">|</operator> <call pos:start="165:44" pos:end="165:50"><name pos:start="165:44" pos:end="165:45">RA</name> <argument_list pos:start="165:47" pos:end="165:50">(<argument pos:start="165:48" pos:end="165:49"><expr pos:start="165:48" pos:end="165:49"><name pos:start="165:48" pos:end="165:49">r0</name></expr></argument>)</argument_list></call> <operator pos:start="165:52" pos:end="165:52">|</operator> <literal type="number" pos:start="165:54" pos:end="165:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:61"><expr pos:start="167:13" pos:end="167:60"><call pos:start="167:13" pos:end="167:60"><name pos:start="167:13" pos:end="167:21">tcg_out32</name> <argument_list pos:start="167:23" pos:end="167:60">(<argument pos:start="167:24" pos:end="167:24"><expr pos:start="167:24" pos:end="167:24"><name pos:start="167:24" pos:end="167:24">s</name></expr></argument>, <argument pos:start="167:27" pos:end="167:59"><expr pos:start="167:27" pos:end="167:59"><name pos:start="167:27" pos:end="167:30">LWZX</name> <operator pos:start="167:32" pos:end="167:32">|</operator> <call pos:start="167:34" pos:end="167:59"><name pos:start="167:34" pos:end="167:36">TAB</name> <argument_list pos:start="167:38" pos:end="167:59">(<argument pos:start="167:39" pos:end="167:47"><expr pos:start="167:39" pos:end="167:47"><name pos:start="167:39" pos:end="167:47">data_reg2</name></expr></argument>, <argument pos:start="167:50" pos:end="167:54"><expr pos:start="167:50" pos:end="167:54"><name pos:start="167:50" pos:end="167:54">rbase</name></expr></argument>, <argument pos:start="167:57" pos:end="167:58"><expr pos:start="167:57" pos:end="167:58"><name pos:start="167:57" pos:end="167:58">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="172:0"><expr pos:start="169:13" pos:end="169:59"><call pos:start="169:13" pos:end="169:59"><name pos:start="169:13" pos:end="169:21">tcg_out32</name> <argument_list pos:start="169:23" pos:end="169:59">(<argument pos:start="169:24" pos:end="169:24"><expr pos:start="169:24" pos:end="169:24"><name pos:start="169:24" pos:end="169:24">s</name></expr></argument>, <argument pos:start="169:27" pos:end="169:58"><expr pos:start="169:27" pos:end="169:58"><name pos:start="169:27" pos:end="169:30">LWZX</name> <operator pos:start="169:32" pos:end="169:32">|</operator> <call pos:start="169:34" pos:end="169:58"><name pos:start="169:34" pos:end="169:36">TAB</name> <argument_list pos:start="169:38" pos:end="169:58">(<argument pos:start="169:39" pos:end="169:46"><expr pos:start="169:39" pos:end="169:46"><name pos:start="169:39" pos:end="169:46">data_reg</name></expr></argument>, <argument pos:start="169:49" pos:end="169:53"><expr pos:start="169:49" pos:end="169:53"><name pos:start="169:49" pos:end="169:53">rbase</name></expr></argument>, <argument pos:start="169:56" pos:end="169:57"><expr pos:start="169:56" pos:end="169:57"><name pos:start="169:56" pos:end="169:57">r1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="171:1" pos:end="171:5">#<cpp:directive pos:start="171:2" pos:end="171:5">else</cpp:directive></cpp:else>

            <if_stmt pos:start="173:13" pos:end="192:0"><if pos:start="173:13" pos:end="181:13">if <condition pos:start="173:16" pos:end="173:32">(<expr pos:start="173:17" pos:end="173:31"><name pos:start="173:17" pos:end="173:18">r0</name> <operator pos:start="173:20" pos:end="173:21">==</operator> <name pos:start="173:23" pos:end="173:31">data_reg2</name></expr>)</condition> <block pos:start="173:34" pos:end="181:13">{<block_content pos:start="175:17" pos:end="179:60">

                <expr_stmt pos:start="175:17" pos:end="175:54"><expr pos:start="175:17" pos:end="175:53"><call pos:start="175:17" pos:end="175:53"><name pos:start="175:17" pos:end="175:25">tcg_out32</name> <argument_list pos:start="175:27" pos:end="175:53">(<argument pos:start="175:28" pos:end="175:28"><expr pos:start="175:28" pos:end="175:28"><name pos:start="175:28" pos:end="175:28">s</name></expr></argument>, <argument pos:start="175:31" pos:end="175:52"><expr pos:start="175:31" pos:end="175:52"><name pos:start="175:31" pos:end="175:33">LWZ</name> <operator pos:start="175:35" pos:end="175:35">|</operator> <call pos:start="175:37" pos:end="175:42"><name pos:start="175:37" pos:end="175:38">RT</name> <argument_list pos:start="175:40" pos:end="175:42">(<argument pos:start="175:41" pos:end="175:41"><expr pos:start="175:41" pos:end="175:41"><literal type="number" pos:start="175:41" pos:end="175:41">0</literal></expr></argument>)</argument_list></call> <operator pos:start="175:44" pos:end="175:44">|</operator> <call pos:start="175:46" pos:end="175:52"><name pos:start="175:46" pos:end="175:47">RA</name> <argument_list pos:start="175:49" pos:end="175:52">(<argument pos:start="175:50" pos:end="175:51"><expr pos:start="175:50" pos:end="175:51"><name pos:start="175:50" pos:end="175:51">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:65"><expr pos:start="177:17" pos:end="177:64"><call pos:start="177:17" pos:end="177:64"><name pos:start="177:17" pos:end="177:25">tcg_out32</name> <argument_list pos:start="177:27" pos:end="177:64">(<argument pos:start="177:28" pos:end="177:28"><expr pos:start="177:28" pos:end="177:28"><name pos:start="177:28" pos:end="177:28">s</name></expr></argument>, <argument pos:start="177:31" pos:end="177:63"><expr pos:start="177:31" pos:end="177:63"><name pos:start="177:31" pos:end="177:33">LWZ</name> <operator pos:start="177:35" pos:end="177:35">|</operator> <call pos:start="177:37" pos:end="177:49"><name pos:start="177:37" pos:end="177:38">RT</name> <argument_list pos:start="177:40" pos:end="177:49">(<argument pos:start="177:41" pos:end="177:48"><expr pos:start="177:41" pos:end="177:48"><name pos:start="177:41" pos:end="177:48">data_reg</name></expr></argument>)</argument_list></call> <operator pos:start="177:51" pos:end="177:51">|</operator> <call pos:start="177:53" pos:end="177:59"><name pos:start="177:53" pos:end="177:54">RA</name> <argument_list pos:start="177:56" pos:end="177:59">(<argument pos:start="177:57" pos:end="177:58"><expr pos:start="177:57" pos:end="177:58"><name pos:start="177:57" pos:end="177:58">r0</name></expr></argument>)</argument_list></call> <operator pos:start="177:61" pos:end="177:61">|</operator> <literal type="number" pos:start="177:63" pos:end="177:63">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:60"><expr pos:start="179:17" pos:end="179:59"><call pos:start="179:17" pos:end="179:59"><name pos:start="179:17" pos:end="179:27">tcg_out_mov</name> <argument_list pos:start="179:29" pos:end="179:59">(<argument pos:start="179:30" pos:end="179:30"><expr pos:start="179:30" pos:end="179:30"><name pos:start="179:30" pos:end="179:30">s</name></expr></argument>, <argument pos:start="179:33" pos:end="179:44"><expr pos:start="179:33" pos:end="179:44"><name pos:start="179:33" pos:end="179:44">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="179:47" pos:end="179:55"><expr pos:start="179:47" pos:end="179:55"><name pos:start="179:47" pos:end="179:55">data_reg2</name></expr></argument>, <argument pos:start="179:58" pos:end="179:58"><expr pos:start="179:58" pos:end="179:58"><literal type="number" pos:start="179:58" pos:end="179:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="183:13" pos:end="192:0">else <block pos:start="183:18" pos:end="192:0">{<block_content pos:start="185:17" pos:end="187:65">

                <expr_stmt pos:start="185:17" pos:end="185:62"><expr pos:start="185:17" pos:end="185:61"><call pos:start="185:17" pos:end="185:61"><name pos:start="185:17" pos:end="185:25">tcg_out32</name> <argument_list pos:start="185:27" pos:end="185:61">(<argument pos:start="185:28" pos:end="185:28"><expr pos:start="185:28" pos:end="185:28"><name pos:start="185:28" pos:end="185:28">s</name></expr></argument>, <argument pos:start="185:31" pos:end="185:60"><expr pos:start="185:31" pos:end="185:60"><name pos:start="185:31" pos:end="185:33">LWZ</name> <operator pos:start="185:35" pos:end="185:35">|</operator> <call pos:start="185:37" pos:end="185:50"><name pos:start="185:37" pos:end="185:38">RT</name> <argument_list pos:start="185:40" pos:end="185:50">(<argument pos:start="185:41" pos:end="185:49"><expr pos:start="185:41" pos:end="185:49"><name pos:start="185:41" pos:end="185:49">data_reg2</name></expr></argument>)</argument_list></call> <operator pos:start="185:52" pos:end="185:52">|</operator> <call pos:start="185:54" pos:end="185:60"><name pos:start="185:54" pos:end="185:55">RA</name> <argument_list pos:start="185:57" pos:end="185:60">(<argument pos:start="185:58" pos:end="185:59"><expr pos:start="185:58" pos:end="185:59"><name pos:start="185:58" pos:end="185:59">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:65"><expr pos:start="187:17" pos:end="187:64"><call pos:start="187:17" pos:end="187:64"><name pos:start="187:17" pos:end="187:25">tcg_out32</name> <argument_list pos:start="187:27" pos:end="187:64">(<argument pos:start="187:28" pos:end="187:28"><expr pos:start="187:28" pos:end="187:28"><name pos:start="187:28" pos:end="187:28">s</name></expr></argument>, <argument pos:start="187:31" pos:end="187:63"><expr pos:start="187:31" pos:end="187:63"><name pos:start="187:31" pos:end="187:33">LWZ</name> <operator pos:start="187:35" pos:end="187:35">|</operator> <call pos:start="187:37" pos:end="187:49"><name pos:start="187:37" pos:end="187:38">RT</name> <argument_list pos:start="187:40" pos:end="187:49">(<argument pos:start="187:41" pos:end="187:48"><expr pos:start="187:41" pos:end="187:48"><name pos:start="187:41" pos:end="187:48">data_reg</name></expr></argument>)</argument_list></call> <operator pos:start="187:51" pos:end="187:51">|</operator> <call pos:start="187:53" pos:end="187:59"><name pos:start="187:53" pos:end="187:54">RA</name> <argument_list pos:start="187:56" pos:end="187:59">(<argument pos:start="187:57" pos:end="187:58"><expr pos:start="187:57" pos:end="187:58"><name pos:start="187:57" pos:end="187:58">r0</name></expr></argument>)</argument_list></call> <operator pos:start="187:61" pos:end="187:61">|</operator> <literal type="number" pos:start="187:63" pos:end="187:63">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="191:1" pos:end="191:6">#<cpp:directive pos:start="191:2" pos:end="191:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></else></if_stmt>

        <break pos:start="195:9" pos:end="195:14">break;</break>

    </block_content>}</block></switch>

<cpp:ifdef pos:start="199:1" pos:end="199:21">#<cpp:directive pos:start="199:2" pos:end="199:6">ifdef</cpp:directive> <name pos:start="199:8" pos:end="199:21">CONFIG_SOFTMMU</name></cpp:ifdef>

    <expr_stmt pos:start="201:5" pos:end="222:0"><expr pos:start="201:5" pos:end="219:35"><call pos:start="201:5" pos:end="219:35"><name pos:start="201:5" pos:end="201:23">add_qemu_ldst_label</name> <argument_list pos:start="201:25" pos:end="219:35">(<argument pos:start="201:26" pos:end="201:26"><expr pos:start="201:26" pos:end="201:26"><name pos:start="201:26" pos:end="201:26">s</name></expr></argument>,

                         <argument pos:start="203:26" pos:end="203:26"><expr pos:start="203:26" pos:end="203:26"><literal type="number" pos:start="203:26" pos:end="203:26">1</literal></expr></argument>,

                         <argument pos:start="205:26" pos:end="205:28"><expr pos:start="205:26" pos:end="205:28"><name pos:start="205:26" pos:end="205:28">opc</name></expr></argument>,

                         <argument pos:start="207:26" pos:end="207:33"><expr pos:start="207:26" pos:end="207:33"><name pos:start="207:26" pos:end="207:33">data_reg</name></expr></argument>,

                         <argument pos:start="209:26" pos:end="209:34"><expr pos:start="209:26" pos:end="209:34"><name pos:start="209:26" pos:end="209:34">data_reg2</name></expr></argument>,

                         <argument pos:start="211:26" pos:end="211:33"><expr pos:start="211:26" pos:end="211:33"><name pos:start="211:26" pos:end="211:33">addr_reg</name></expr></argument>,

                         <argument pos:start="213:26" pos:end="213:34"><expr pos:start="213:26" pos:end="213:34"><name pos:start="213:26" pos:end="213:34">addr_reg2</name></expr></argument>,

                         <argument pos:start="215:26" pos:end="215:34"><expr pos:start="215:26" pos:end="215:34"><name pos:start="215:26" pos:end="215:34">mem_index</name></expr></argument>,

                         <argument pos:start="217:26" pos:end="217:36"><expr pos:start="217:26" pos:end="217:36"><name pos:start="217:26" pos:end="217:36"><name pos:start="217:26" pos:end="217:26">s</name><operator pos:start="217:27" pos:end="217:28">-&gt;</operator><name pos:start="217:29" pos:end="217:36">code_ptr</name></name></expr></argument>,

                         <argument pos:start="219:26" pos:end="219:34"><expr pos:start="219:26" pos:end="219:34"><name pos:start="219:26" pos:end="219:34">label_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="221:1" pos:end="221:6">#<cpp:directive pos:start="221:2" pos:end="221:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
