<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24127.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">TCGv</name></type> <name pos:start="1:20" pos:end="1:27">gen_load</name><parameter_list pos:start="1:28" pos:end="1:78">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:40">DisasContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type> <name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:56"><decl pos:start="1:47" pos:end="1:56"><type pos:start="1:47" pos:end="1:56"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:56">opsize</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:62">TCGv</name></type> <name pos:start="1:64" pos:end="1:67">addr</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:77"><decl pos:start="1:70" pos:end="1:77"><type pos:start="1:70" pos:end="1:77"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:77">sign</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:15">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:12">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">index</name> <init pos:start="7:15" pos:end="7:26">= <expr pos:start="7:17" pos:end="7:26"><call pos:start="7:17" pos:end="7:26"><name pos:start="7:17" pos:end="7:23">IS_USER</name><argument_list pos:start="7:24" pos:end="7:26">(<argument pos:start="7:25" pos:end="7:25"><expr pos:start="7:25" pos:end="7:25"><name pos:start="7:25" pos:end="7:25">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:18"><expr pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:13">is_mem</name></name> <operator pos:start="9:15" pos:end="9:15">=</operator> <literal type="number" pos:start="9:17" pos:end="9:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:29"><expr pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:7">tmp</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:28"><name pos:start="11:11" pos:end="11:26">tcg_temp_new_i32</name><argument_list pos:start="11:27" pos:end="11:28">()</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="13:5" pos:end="51:5">switch<condition pos:start="13:11" pos:end="13:18">(<expr pos:start="13:12" pos:end="13:17"><name pos:start="13:12" pos:end="13:17">opsize</name></expr>)</condition> <block pos:start="13:20" pos:end="51:5">{<block_content pos:start="15:5" pos:end="49:40">

    <case pos:start="15:5" pos:end="15:17">case <expr pos:start="15:10" pos:end="15:16"><name pos:start="15:10" pos:end="15:16">OS_BYTE</name></expr>:</case>

        <if_stmt pos:start="17:9" pos:end="23:48"><if pos:start="17:9" pos:end="19:48">if <condition pos:start="17:12" pos:end="17:17">(<expr pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:16">sign</name></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:48"><block_content pos:start="19:13" pos:end="19:48">

            <expr_stmt pos:start="19:13" pos:end="19:48"><expr pos:start="19:13" pos:end="19:47"><call pos:start="19:13" pos:end="19:47"><name pos:start="19:13" pos:end="19:29">tcg_gen_qemu_ld8s</name><argument_list pos:start="19:30" pos:end="19:47">(<argument pos:start="19:31" pos:end="19:33"><expr pos:start="19:31" pos:end="19:33"><name pos:start="19:31" pos:end="19:33">tmp</name></expr></argument>, <argument pos:start="19:36" pos:end="19:39"><expr pos:start="19:36" pos:end="19:39"><name pos:start="19:36" pos:end="19:39">addr</name></expr></argument>, <argument pos:start="19:42" pos:end="19:46"><expr pos:start="19:42" pos:end="19:46"><name pos:start="19:42" pos:end="19:46">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="21:9" pos:end="23:48">else<block type="pseudo" pos:start="23:13" pos:end="23:48"><block_content pos:start="23:13" pos:end="23:48">

            <expr_stmt pos:start="23:13" pos:end="23:48"><expr pos:start="23:13" pos:end="23:47"><call pos:start="23:13" pos:end="23:47"><name pos:start="23:13" pos:end="23:29">tcg_gen_qemu_ld8u</name><argument_list pos:start="23:30" pos:end="23:47">(<argument pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:33">tmp</name></expr></argument>, <argument pos:start="23:36" pos:end="23:39"><expr pos:start="23:36" pos:end="23:39"><name pos:start="23:36" pos:end="23:39">addr</name></expr></argument>, <argument pos:start="23:42" pos:end="23:46"><expr pos:start="23:42" pos:end="23:46"><name pos:start="23:42" pos:end="23:46">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:17">case <expr pos:start="27:10" pos:end="27:16"><name pos:start="27:10" pos:end="27:16">OS_WORD</name></expr>:</case>

        <if_stmt pos:start="29:9" pos:end="35:49"><if pos:start="29:9" pos:end="31:49">if <condition pos:start="29:12" pos:end="29:17">(<expr pos:start="29:13" pos:end="29:16"><name pos:start="29:13" pos:end="29:16">sign</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:49"><block_content pos:start="31:13" pos:end="31:49">

            <expr_stmt pos:start="31:13" pos:end="31:49"><expr pos:start="31:13" pos:end="31:48"><call pos:start="31:13" pos:end="31:48"><name pos:start="31:13" pos:end="31:30">tcg_gen_qemu_ld16s</name><argument_list pos:start="31:31" pos:end="31:48">(<argument pos:start="31:32" pos:end="31:34"><expr pos:start="31:32" pos:end="31:34"><name pos:start="31:32" pos:end="31:34">tmp</name></expr></argument>, <argument pos:start="31:37" pos:end="31:40"><expr pos:start="31:37" pos:end="31:40"><name pos:start="31:37" pos:end="31:40">addr</name></expr></argument>, <argument pos:start="31:43" pos:end="31:47"><expr pos:start="31:43" pos:end="31:47"><name pos:start="31:43" pos:end="31:47">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="33:9" pos:end="35:49">else<block type="pseudo" pos:start="35:13" pos:end="35:49"><block_content pos:start="35:13" pos:end="35:49">

            <expr_stmt pos:start="35:13" pos:end="35:49"><expr pos:start="35:13" pos:end="35:48"><call pos:start="35:13" pos:end="35:48"><name pos:start="35:13" pos:end="35:30">tcg_gen_qemu_ld16u</name><argument_list pos:start="35:31" pos:end="35:48">(<argument pos:start="35:32" pos:end="35:34"><expr pos:start="35:32" pos:end="35:34"><name pos:start="35:32" pos:end="35:34">tmp</name></expr></argument>, <argument pos:start="35:37" pos:end="35:40"><expr pos:start="35:37" pos:end="35:40"><name pos:start="35:37" pos:end="35:40">addr</name></expr></argument>, <argument pos:start="35:43" pos:end="35:47"><expr pos:start="35:43" pos:end="35:47"><name pos:start="35:43" pos:end="35:47">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:17">case <expr pos:start="39:10" pos:end="39:16"><name pos:start="39:10" pos:end="39:16">OS_LONG</name></expr>:</case>

    <case pos:start="41:5" pos:end="41:19">case <expr pos:start="41:10" pos:end="41:18"><name pos:start="41:10" pos:end="41:18">OS_SINGLE</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:45"><expr pos:start="43:9" pos:end="43:44"><call pos:start="43:9" pos:end="43:44"><name pos:start="43:9" pos:end="43:26">tcg_gen_qemu_ld32u</name><argument_list pos:start="43:27" pos:end="43:44">(<argument pos:start="43:28" pos:end="43:30"><expr pos:start="43:28" pos:end="43:30"><name pos:start="43:28" pos:end="43:30">tmp</name></expr></argument>, <argument pos:start="43:33" pos:end="43:36"><expr pos:start="43:33" pos:end="43:36"><name pos:start="43:33" pos:end="43:36">addr</name></expr></argument>, <argument pos:start="43:39" pos:end="43:43"><expr pos:start="43:39" pos:end="43:43"><name pos:start="43:39" pos:end="43:43">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <default pos:start="47:5" pos:end="47:12">default:</default>

        <expr_stmt pos:start="49:9" pos:end="49:40"><expr pos:start="49:9" pos:end="49:39"><call pos:start="49:9" pos:end="49:39"><name pos:start="49:9" pos:end="49:19">qemu_assert</name><argument_list pos:start="49:20" pos:end="49:39">(<argument pos:start="49:21" pos:end="49:21"><expr pos:start="49:21" pos:end="49:21"><literal type="number" pos:start="49:21" pos:end="49:21">0</literal></expr></argument>, <argument pos:start="49:24" pos:end="49:38"><expr pos:start="49:24" pos:end="49:38"><literal type="string" pos:start="49:24" pos:end="49:38">"bad load size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="53:5" pos:end="53:40"><expr pos:start="53:5" pos:end="53:39"><name pos:start="53:5" pos:end="53:24">gen_throws_exception</name> <operator pos:start="53:26" pos:end="53:26">=</operator> <name pos:start="53:28" pos:end="53:39">gen_last_qop</name></expr>;</expr_stmt>

    <return pos:start="55:5" pos:end="55:15">return <expr pos:start="55:12" pos:end="55:14"><name pos:start="55:12" pos:end="55:14">tmp</name></expr>;</return>

</block_content>}</block></function>
</unit>
