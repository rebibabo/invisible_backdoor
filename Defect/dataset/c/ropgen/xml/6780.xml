<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6780.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_video_out</name><parameter_list pos:start="1:25" pos:end="7:41">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:42"><decl pos:start="3:26" pos:end="3:42"><type pos:start="3:26" pos:end="3:42"><name pos:start="3:26" pos:end="3:37">OutputStream</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:42">ost</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:44"><decl pos:start="5:26" pos:end="5:44"><type pos:start="5:26" pos:end="5:44"><name pos:start="5:26" pos:end="5:32">AVFrame</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:44">in_picture</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:40"><decl pos:start="7:26" pos:end="7:40"><type pos:start="7:26" pos:end="7:40"><name pos:start="7:26" pos:end="7:28">int</name> <modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:40">frame_size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="193:1">{<block_content pos:start="11:5" pos:end="191:24">

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>, <decl pos:start="11:14" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:30">format_video_sync</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">AVPacket</name></type> <name pos:start="13:14" pos:end="13:16">pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:41"><decl pos:start="15:5" pos:end="15:40"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">AVCodecContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:23">enc</name> <init pos:start="15:25" pos:end="15:40">= <expr pos:start="15:27" pos:end="15:40"><name pos:start="15:27" pos:end="15:40"><name pos:start="15:27" pos:end="15:29">ost</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:33">st</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:40">codec</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:20"><expr pos:start="19:5" pos:end="19:19"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:15">frame_size</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:21">format_video_sync</name> <operator pos:start="23:23" pos:end="23:23">=</operator> <name pos:start="23:25" pos:end="23:41">video_sync_method</name></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:93"><if pos:start="25:5" pos:end="29:93">if <condition pos:start="25:8" pos:end="25:40">(<expr pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:25">format_video_sync</name> <operator pos:start="25:27" pos:end="25:28">==</operator> <name pos:start="25:30" pos:end="25:39">VSYNC_AUTO</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="29:93"><block_content pos:start="27:9" pos:end="29:93">

        <expr_stmt pos:start="27:9" pos:end="29:93"><expr pos:start="27:9" pos:end="29:92"><name pos:start="27:9" pos:end="27:25">format_video_sync</name> <operator pos:start="27:27" pos:end="27:27">=</operator> <ternary pos:start="27:29" pos:end="29:92"><condition pos:start="27:29" pos:end="27:70"><expr pos:start="27:29" pos:end="27:68"><operator pos:start="27:29" pos:end="27:29">(</operator><name pos:start="27:30" pos:end="27:46"><name pos:start="27:30" pos:end="27:30">s</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:39">oformat</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:46">flags</name></name> <operator pos:start="27:48" pos:end="27:48">&amp;</operator> <name pos:start="27:50" pos:end="27:67">AVFMT_NOTIMESTAMPS</name><operator pos:start="27:68" pos:end="27:68">)</operator></expr> ?</condition><then pos:start="27:72" pos:end="27:88"> <expr pos:start="27:72" pos:end="27:88"><name pos:start="27:72" pos:end="27:88">VSYNC_PASSTHROUGH</name></expr> </then><else pos:start="27:90" pos:end="29:92">:

                            <expr pos:start="29:29" pos:end="29:92"><ternary pos:start="29:29" pos:end="29:92"><condition pos:start="29:29" pos:end="29:70"><expr pos:start="29:29" pos:end="29:68"><operator pos:start="29:29" pos:end="29:29">(</operator><name pos:start="29:30" pos:end="29:46"><name pos:start="29:30" pos:end="29:30">s</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:39">oformat</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:46">flags</name></name> <operator pos:start="29:48" pos:end="29:48">&amp;</operator> <name pos:start="29:50" pos:end="29:67">AVFMT_VARIABLE_FPS</name><operator pos:start="29:68" pos:end="29:68">)</operator></expr> ?</condition><then pos:start="29:72" pos:end="29:80"> <expr pos:start="29:72" pos:end="29:80"><name pos:start="29:72" pos:end="29:80">VSYNC_VFR</name></expr> </then><else pos:start="29:82" pos:end="29:92">: <expr pos:start="29:84" pos:end="29:92"><name pos:start="29:84" pos:end="29:92">VSYNC_CFR</name></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="45:5"><if pos:start="31:5" pos:end="45:5">if <condition pos:start="31:8" pos:end="37:41">(<expr pos:start="31:9" pos:end="37:40"><name pos:start="31:9" pos:end="31:25">format_video_sync</name> <operator pos:start="31:27" pos:end="31:28">!=</operator> <name pos:start="31:30" pos:end="31:46">VSYNC_PASSTHROUGH</name> <operator pos:start="31:48" pos:end="31:49">&amp;&amp;</operator>

        <name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:11">ost</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:25">frame_number</name></name> <operator pos:start="33:27" pos:end="33:28">&amp;&amp;</operator>

        <name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:18">in_picture</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:23">pts</name></name> <operator pos:start="35:25" pos:end="35:26">!=</operator> <name pos:start="35:28" pos:end="35:41">AV_NOPTS_VALUE</name> <operator pos:start="35:43" pos:end="35:44">&amp;&amp;</operator>

        <name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:18">in_picture</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:23">pts</name></name> <operator pos:start="37:25" pos:end="37:25">&lt;</operator> <name pos:start="37:27" pos:end="37:40"><name pos:start="37:27" pos:end="37:29">ost</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:40">sync_opts</name></name></expr>)</condition> <block pos:start="37:43" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:15">

        <expr_stmt pos:start="39:9" pos:end="39:25"><expr pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:22">nb_frames_drop</name><operator pos:start="39:23" pos:end="39:24">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:52"><expr pos:start="41:9" pos:end="41:51"><call pos:start="41:9" pos:end="41:51"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:51">(<argument pos:start="41:16" pos:end="41:19"><expr pos:start="41:16" pos:end="41:19"><name pos:start="41:16" pos:end="41:19">NULL</name></expr></argument>, <argument pos:start="41:22" pos:end="41:35"><expr pos:start="41:22" pos:end="41:35"><name pos:start="41:22" pos:end="41:35">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="41:38" pos:end="41:50"><expr pos:start="41:38" pos:end="41:50"><literal type="string" pos:start="41:38" pos:end="41:50">"*** drop!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="51:41"><if pos:start="49:5" pos:end="51:41">if <condition pos:start="49:8" pos:end="49:42">(<expr pos:start="49:9" pos:end="49:41"><name pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:18">in_picture</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:23">pts</name></name> <operator pos:start="49:25" pos:end="49:26">==</operator> <name pos:start="49:28" pos:end="49:41">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:41"><block_content pos:start="51:9" pos:end="51:41">

        <expr_stmt pos:start="51:9" pos:end="51:41"><expr pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:18">in_picture</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:23">pts</name></name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:40"><name pos:start="51:27" pos:end="51:29">ost</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:40">sync_opts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:37"><expr pos:start="53:5" pos:end="53:36"><name pos:start="53:5" pos:end="53:18"><name pos:start="53:5" pos:end="53:7">ost</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:18">sync_opts</name></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:36"><name pos:start="53:22" pos:end="53:31">in_picture</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:36">pts</name></name></expr>;</expr_stmt>





    <if_stmt pos:start="59:5" pos:end="61:41"><if pos:start="59:5" pos:end="61:41">if <condition pos:start="59:8" pos:end="59:27">(<expr pos:start="59:9" pos:end="59:26"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:26"><name pos:start="59:10" pos:end="59:12">ost</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:26">frame_number</name></name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:41"><block_content pos:start="61:9" pos:end="61:41">

        <expr_stmt pos:start="61:9" pos:end="61:41"><expr pos:start="61:9" pos:end="61:40"><name pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:11">ost</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:22">first_pts</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <name pos:start="61:26" pos:end="61:40"><name pos:start="61:26" pos:end="61:35">in_picture</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:40">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:25"><expr pos:start="65:5" pos:end="65:24"><call pos:start="65:5" pos:end="65:24"><name pos:start="65:5" pos:end="65:18">av_init_packet</name><argument_list pos:start="65:19" pos:end="65:24">(<argument pos:start="65:20" pos:end="65:23"><expr pos:start="65:20" pos:end="65:23"><operator pos:start="65:20" pos:end="65:20">&amp;</operator><name pos:start="65:21" pos:end="65:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:20"><expr pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:12"><name pos:start="67:5" pos:end="67:7">pkt</name><operator pos:start="67:8" pos:end="67:8">.</operator><name pos:start="67:9" pos:end="67:12">data</name></name> <operator pos:start="67:14" pos:end="67:14">=</operator> <name pos:start="67:16" pos:end="67:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:17"><expr pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:12"><name pos:start="69:5" pos:end="69:7">pkt</name><operator pos:start="69:8" pos:end="69:8">.</operator><name pos:start="69:9" pos:end="69:12">size</name></name> <operator pos:start="69:14" pos:end="69:14">=</operator> <literal type="number" pos:start="69:16" pos:end="69:16">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="75:15"><if pos:start="73:5" pos:end="75:15">if <condition pos:start="73:8" pos:end="73:45">(<expr pos:start="73:9" pos:end="73:44"><name pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:11">ost</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:25">frame_number</name></name> <operator pos:start="73:27" pos:end="73:28">&gt;=</operator> <name pos:start="73:30" pos:end="73:44"><name pos:start="73:30" pos:end="73:32">ost</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:44">max_frames</name></name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:15"><block_content pos:start="75:9" pos:end="75:15">

        <return pos:start="75:9" pos:end="75:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="177:5"><if pos:start="79:5" pos:end="105:5">if <condition pos:start="79:8" pos:end="81:47">(<expr pos:start="79:9" pos:end="81:46"><name pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:18">oformat</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:25">flags</name></name> <operator pos:start="79:27" pos:end="79:27">&amp;</operator> <name pos:start="79:29" pos:end="79:44">AVFMT_RAWPICTURE</name> <operator pos:start="79:46" pos:end="79:47">&amp;&amp;</operator>

        <name pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:11">enc</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:18">codec</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:22">id</name></name> <operator pos:start="81:24" pos:end="81:25">==</operator> <name pos:start="81:27" pos:end="81:46">AV_CODEC_ID_RAWVIDEO</name></expr>)</condition> <block pos:start="81:49" pos:end="105:5">{<block_content pos:start="89:9" pos:end="103:34">

        <comment type="block" pos:start="83:9" pos:end="87:21">/* raw pictures are written as AVPicture structure to

           avoid any copies. We support temporarily the older

           method. */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:74"><expr pos:start="89:9" pos:end="89:73"><name pos:start="89:9" pos:end="89:42"><name pos:start="89:9" pos:end="89:11">enc</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:24">coded_frame</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:42">interlaced_frame</name></name> <operator pos:start="89:44" pos:end="89:44">=</operator> <name pos:start="89:46" pos:end="89:73"><name pos:start="89:46" pos:end="89:55">in_picture</name><operator pos:start="89:56" pos:end="89:57">-&gt;</operator><name pos:start="89:58" pos:end="89:73">interlaced_frame</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:73"><expr pos:start="91:9" pos:end="91:72"><name pos:start="91:9" pos:end="91:41"><name pos:start="91:9" pos:end="91:11">enc</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:24">coded_frame</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:41">top_field_first</name></name>  <operator pos:start="91:44" pos:end="91:44">=</operator> <name pos:start="91:46" pos:end="91:72"><name pos:start="91:46" pos:end="91:55">in_picture</name><operator pos:start="91:56" pos:end="91:57">-&gt;</operator><name pos:start="91:58" pos:end="91:72">top_field_first</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:43"><expr pos:start="93:9" pos:end="93:42"><name pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:11">pkt</name><operator pos:start="93:12" pos:end="93:12">.</operator><name pos:start="93:13" pos:end="93:16">data</name></name>   <operator pos:start="93:20" pos:end="93:20">=</operator> <operator pos:start="93:22" pos:end="93:22">(</operator><name pos:start="93:23" pos:end="93:29">uint8_t</name> <operator pos:start="93:31" pos:end="93:31">*</operator><operator pos:start="93:32" pos:end="93:32">)</operator><name pos:start="93:33" pos:end="93:42">in_picture</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:40"><expr pos:start="95:9" pos:end="95:39"><name pos:start="95:9" pos:end="95:16"><name pos:start="95:9" pos:end="95:11">pkt</name><operator pos:start="95:12" pos:end="95:12">.</operator><name pos:start="95:13" pos:end="95:16">size</name></name>   <operator pos:start="95:20" pos:end="95:20">=</operator>  <sizeof pos:start="95:23" pos:end="95:39">sizeof<argument_list pos:start="95:29" pos:end="95:39">(<argument pos:start="95:30" pos:end="95:38"><expr pos:start="95:30" pos:end="95:38"><name pos:start="95:30" pos:end="95:38">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:87"><expr pos:start="97:9" pos:end="97:86"><name pos:start="97:9" pos:end="97:15"><name pos:start="97:9" pos:end="97:11">pkt</name><operator pos:start="97:12" pos:end="97:12">.</operator><name pos:start="97:13" pos:end="97:15">pts</name></name>    <operator pos:start="97:20" pos:end="97:20">=</operator> <call pos:start="97:22" pos:end="97:86"><name pos:start="97:22" pos:end="97:33">av_rescale_q</name><argument_list pos:start="97:34" pos:end="97:86">(<argument pos:start="97:35" pos:end="97:49"><expr pos:start="97:35" pos:end="97:49"><name pos:start="97:35" pos:end="97:49"><name pos:start="97:35" pos:end="97:44">in_picture</name><operator pos:start="97:45" pos:end="97:46">-&gt;</operator><name pos:start="97:47" pos:end="97:49">pts</name></name></expr></argument>, <argument pos:start="97:52" pos:end="97:65"><expr pos:start="97:52" pos:end="97:65"><name pos:start="97:52" pos:end="97:65"><name pos:start="97:52" pos:end="97:54">enc</name><operator pos:start="97:55" pos:end="97:56">-&gt;</operator><name pos:start="97:57" pos:end="97:65">time_base</name></name></expr></argument>, <argument pos:start="97:68" pos:end="97:85"><expr pos:start="97:68" pos:end="97:85"><name pos:start="97:68" pos:end="97:85"><name pos:start="97:68" pos:end="97:70">ost</name><operator pos:start="97:71" pos:end="97:72">-&gt;</operator><name pos:start="97:73" pos:end="97:74">st</name><operator pos:start="97:75" pos:end="97:76">-&gt;</operator><name pos:start="97:77" pos:end="97:85">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:37"><expr pos:start="99:9" pos:end="99:36"><name pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:11">pkt</name><operator pos:start="99:12" pos:end="99:12">.</operator><name pos:start="99:13" pos:end="99:17">flags</name></name> <operator pos:start="99:19" pos:end="99:20">|=</operator> <name pos:start="99:22" pos:end="99:36">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:34"><expr pos:start="103:9" pos:end="103:33"><call pos:start="103:9" pos:end="103:33"><name pos:start="103:9" pos:end="103:19">write_frame</name><argument_list pos:start="103:20" pos:end="103:33">(<argument pos:start="103:21" pos:end="103:21"><expr pos:start="103:21" pos:end="103:21"><name pos:start="103:21" pos:end="103:21">s</name></expr></argument>, <argument pos:start="103:24" pos:end="103:27"><expr pos:start="103:24" pos:end="103:27"><operator pos:start="103:24" pos:end="103:24">&amp;</operator><name pos:start="103:25" pos:end="103:27">pkt</name></expr></argument>, <argument pos:start="103:30" pos:end="103:32"><expr pos:start="103:30" pos:end="103:32"><name pos:start="103:30" pos:end="103:32">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="105:7" pos:end="177:5">else <block pos:start="105:12" pos:end="177:5">{<block_content pos:start="107:9" pos:end="175:9">

        <decl_stmt pos:start="107:9" pos:end="107:23"><decl pos:start="107:9" pos:end="107:22"><type pos:start="107:9" pos:end="107:11"><name pos:start="107:9" pos:end="107:11">int</name></type> <name pos:start="107:13" pos:end="107:22">got_packet</name></decl>;</decl_stmt>



        <if_stmt pos:start="111:9" pos:end="115:65"><if pos:start="111:9" pos:end="115:65">if <condition pos:start="111:12" pos:end="113:38">(<expr pos:start="111:13" pos:end="113:37"><name pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:15">ost</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:19">st</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:26">codec</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:33">flags</name></name> <operator pos:start="111:35" pos:end="111:35">&amp;</operator> <operator pos:start="111:37" pos:end="111:37">(</operator><name pos:start="111:38" pos:end="111:62">CODEC_FLAG_INTERLACED_DCT</name><operator pos:start="111:63" pos:end="111:63">|</operator><name pos:start="111:64" pos:end="111:87">CODEC_FLAG_INTERLACED_ME</name><operator pos:start="111:88" pos:end="111:88">)</operator> <operator pos:start="111:90" pos:end="111:91">&amp;&amp;</operator>

            <name pos:start="113:13" pos:end="113:32"><name pos:start="113:13" pos:end="113:15">ost</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:32">top_field_first</name></name> <operator pos:start="113:34" pos:end="113:35">&gt;=</operator> <literal type="number" pos:start="113:37" pos:end="113:37">0</literal></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:65"><block_content pos:start="115:13" pos:end="115:65">

            <expr_stmt pos:start="115:13" pos:end="115:65"><expr pos:start="115:13" pos:end="115:64"><name pos:start="115:13" pos:end="115:39"><name pos:start="115:13" pos:end="115:22">in_picture</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:39">top_field_first</name></name> <operator pos:start="115:41" pos:end="115:41">=</operator> <operator pos:start="115:43" pos:end="115:43">!</operator><operator pos:start="115:44" pos:end="115:44">!</operator><name pos:start="115:45" pos:end="115:64"><name pos:start="115:45" pos:end="115:47">ost</name><operator pos:start="115:48" pos:end="115:49">-&gt;</operator><name pos:start="115:50" pos:end="115:64">top_field_first</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:61"><expr pos:start="119:9" pos:end="119:60"><name pos:start="119:9" pos:end="119:27"><name pos:start="119:9" pos:end="119:18">in_picture</name><operator pos:start="119:19" pos:end="119:20">-&gt;</operator><name pos:start="119:21" pos:end="119:27">quality</name></name> <operator pos:start="119:29" pos:end="119:29">=</operator> <name pos:start="119:31" pos:end="119:60"><name pos:start="119:31" pos:end="119:33">ost</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:37">st</name><operator pos:start="119:38" pos:end="119:39">-&gt;</operator><name pos:start="119:40" pos:end="119:44">codec</name><operator pos:start="119:45" pos:end="119:46">-&gt;</operator><name pos:start="119:47" pos:end="119:60">global_quality</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="123:38"><if pos:start="121:9" pos:end="123:38">if <condition pos:start="121:12" pos:end="121:31">(<expr pos:start="121:13" pos:end="121:30"><operator pos:start="121:13" pos:end="121:13">!</operator><name pos:start="121:14" pos:end="121:30"><name pos:start="121:14" pos:end="121:16">enc</name><operator pos:start="121:17" pos:end="121:18">-&gt;</operator><name pos:start="121:19" pos:end="121:30">me_threshold</name></name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:38"><block_content pos:start="123:13" pos:end="123:38">

            <expr_stmt pos:start="123:13" pos:end="123:38"><expr pos:start="123:13" pos:end="123:37"><name pos:start="123:13" pos:end="123:33"><name pos:start="123:13" pos:end="123:22">in_picture</name><operator pos:start="123:23" pos:end="123:24">-&gt;</operator><name pos:start="123:25" pos:end="123:33">pict_type</name></name> <operator pos:start="123:35" pos:end="123:35">=</operator> <literal type="number" pos:start="123:37" pos:end="123:37">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="125:9" pos:end="133:9"><if pos:start="125:9" pos:end="133:9">if <condition pos:start="125:12" pos:end="127:72">(<expr pos:start="125:13" pos:end="127:71"><name pos:start="125:13" pos:end="125:32"><name pos:start="125:13" pos:end="125:15">ost</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:32">forced_kf_index</name></name> <operator pos:start="125:34" pos:end="125:34">&lt;</operator> <name pos:start="125:36" pos:end="125:55"><name pos:start="125:36" pos:end="125:38">ost</name><operator pos:start="125:39" pos:end="125:40">-&gt;</operator><name pos:start="125:41" pos:end="125:55">forced_kf_count</name></name> <operator pos:start="125:57" pos:end="125:58">&amp;&amp;</operator>

            <name pos:start="127:13" pos:end="127:27"><name pos:start="127:13" pos:end="127:22">in_picture</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:27">pts</name></name> <operator pos:start="127:29" pos:end="127:30">&gt;=</operator> <name pos:start="127:32" pos:end="127:71"><name pos:start="127:32" pos:end="127:34">ost</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:49">forced_kf_pts</name><index pos:start="127:50" pos:end="127:71">[<expr pos:start="127:51" pos:end="127:70"><name pos:start="127:51" pos:end="127:70"><name pos:start="127:51" pos:end="127:53">ost</name><operator pos:start="127:54" pos:end="127:55">-&gt;</operator><name pos:start="127:56" pos:end="127:70">forced_kf_index</name></name></expr>]</index></name></expr>)</condition> <block pos:start="127:74" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:35">

            <expr_stmt pos:start="129:13" pos:end="129:54"><expr pos:start="129:13" pos:end="129:53"><name pos:start="129:13" pos:end="129:33"><name pos:start="129:13" pos:end="129:22">in_picture</name><operator pos:start="129:23" pos:end="129:24">-&gt;</operator><name pos:start="129:25" pos:end="129:33">pict_type</name></name> <operator pos:start="129:35" pos:end="129:35">=</operator> <name pos:start="129:37" pos:end="129:53">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:35"><expr pos:start="131:13" pos:end="131:34"><name pos:start="131:13" pos:end="131:32"><name pos:start="131:13" pos:end="131:15">ost</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:32">forced_kf_index</name></name><operator pos:start="131:33" pos:end="131:34">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:72"><expr pos:start="135:9" pos:end="135:71"><name pos:start="135:9" pos:end="135:11">ret</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <call pos:start="135:15" pos:end="135:71"><name pos:start="135:15" pos:end="135:35">avcodec_encode_video2</name><argument_list pos:start="135:36" pos:end="135:71">(<argument pos:start="135:37" pos:end="135:39"><expr pos:start="135:37" pos:end="135:39"><name pos:start="135:37" pos:end="135:39">enc</name></expr></argument>, <argument pos:start="135:42" pos:end="135:45"><expr pos:start="135:42" pos:end="135:45"><operator pos:start="135:42" pos:end="135:42">&amp;</operator><name pos:start="135:43" pos:end="135:45">pkt</name></expr></argument>, <argument pos:start="135:48" pos:end="135:57"><expr pos:start="135:48" pos:end="135:57"><name pos:start="135:48" pos:end="135:57">in_picture</name></expr></argument>, <argument pos:start="135:60" pos:end="135:70"><expr pos:start="135:60" pos:end="135:70"><operator pos:start="135:60" pos:end="135:60">&amp;</operator><name pos:start="135:61" pos:end="135:70">got_packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="143:9"><if pos:start="137:9" pos:end="143:9">if <condition pos:start="137:12" pos:end="137:20">(<expr pos:start="137:13" pos:end="137:19"><name pos:start="137:13" pos:end="137:15">ret</name> <operator pos:start="137:17" pos:end="137:17">&lt;</operator> <literal type="number" pos:start="137:19" pos:end="137:19">0</literal></expr>)</condition> <block pos:start="137:22" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:20">

            <expr_stmt pos:start="139:13" pos:end="139:66"><expr pos:start="139:13" pos:end="139:65"><call pos:start="139:13" pos:end="139:65"><name pos:start="139:13" pos:end="139:18">av_log</name><argument_list pos:start="139:19" pos:end="139:65">(<argument pos:start="139:20" pos:end="139:23"><expr pos:start="139:20" pos:end="139:23"><name pos:start="139:20" pos:end="139:23">NULL</name></expr></argument>, <argument pos:start="139:26" pos:end="139:37"><expr pos:start="139:26" pos:end="139:37"><name pos:start="139:26" pos:end="139:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="139:40" pos:end="139:64"><expr pos:start="139:40" pos:end="139:64"><literal type="string" pos:start="139:40" pos:end="139:64">"Video encoding failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:20"><expr pos:start="141:13" pos:end="141:19"><call pos:start="141:13" pos:end="141:19"><name pos:start="141:13" pos:end="141:16">exit</name><argument_list pos:start="141:17" pos:end="141:19">(<argument pos:start="141:18" pos:end="141:18"><expr pos:start="141:18" pos:end="141:18"><literal type="number" pos:start="141:18" pos:end="141:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="147:9" pos:end="175:9"><if pos:start="147:9" pos:end="175:9">if <condition pos:start="147:12" pos:end="147:23">(<expr pos:start="147:13" pos:end="147:22"><name pos:start="147:13" pos:end="147:22">got_packet</name></expr>)</condition> <block pos:start="147:25" pos:end="175:9">{<block_content pos:start="149:13" pos:end="173:13">

            <if_stmt pos:start="149:13" pos:end="151:84"><if pos:start="149:13" pos:end="151:84">if <condition pos:start="149:16" pos:end="149:42">(<expr pos:start="149:17" pos:end="149:41"><name pos:start="149:17" pos:end="149:23"><name pos:start="149:17" pos:end="149:19">pkt</name><operator pos:start="149:20" pos:end="149:20">.</operator><name pos:start="149:21" pos:end="149:23">pts</name></name> <operator pos:start="149:25" pos:end="149:26">!=</operator> <name pos:start="149:28" pos:end="149:41">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="151:17" pos:end="151:84"><block_content pos:start="151:17" pos:end="151:84">

                <expr_stmt pos:start="151:17" pos:end="151:84"><expr pos:start="151:17" pos:end="151:83"><name pos:start="151:17" pos:end="151:23"><name pos:start="151:17" pos:end="151:19">pkt</name><operator pos:start="151:20" pos:end="151:20">.</operator><name pos:start="151:21" pos:end="151:23">pts</name></name> <operator pos:start="151:25" pos:end="151:25">=</operator> <call pos:start="151:27" pos:end="151:83"><name pos:start="151:27" pos:end="151:38">av_rescale_q</name><argument_list pos:start="151:39" pos:end="151:83">(<argument pos:start="151:40" pos:end="151:46"><expr pos:start="151:40" pos:end="151:46"><name pos:start="151:40" pos:end="151:46"><name pos:start="151:40" pos:end="151:42">pkt</name><operator pos:start="151:43" pos:end="151:43">.</operator><name pos:start="151:44" pos:end="151:46">pts</name></name></expr></argument>, <argument pos:start="151:49" pos:end="151:62"><expr pos:start="151:49" pos:end="151:62"><name pos:start="151:49" pos:end="151:62"><name pos:start="151:49" pos:end="151:51">enc</name><operator pos:start="151:52" pos:end="151:53">-&gt;</operator><name pos:start="151:54" pos:end="151:62">time_base</name></name></expr></argument>, <argument pos:start="151:65" pos:end="151:82"><expr pos:start="151:65" pos:end="151:82"><name pos:start="151:65" pos:end="151:82"><name pos:start="151:65" pos:end="151:67">ost</name><operator pos:start="151:68" pos:end="151:69">-&gt;</operator><name pos:start="151:70" pos:end="151:71">st</name><operator pos:start="151:72" pos:end="151:73">-&gt;</operator><name pos:start="151:74" pos:end="151:82">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="153:13" pos:end="155:84"><if pos:start="153:13" pos:end="155:84">if <condition pos:start="153:16" pos:end="153:42">(<expr pos:start="153:17" pos:end="153:41"><name pos:start="153:17" pos:end="153:23"><name pos:start="153:17" pos:end="153:19">pkt</name><operator pos:start="153:20" pos:end="153:20">.</operator><name pos:start="153:21" pos:end="153:23">dts</name></name> <operator pos:start="153:25" pos:end="153:26">!=</operator> <name pos:start="153:28" pos:end="153:41">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="155:17" pos:end="155:84"><block_content pos:start="155:17" pos:end="155:84">

                <expr_stmt pos:start="155:17" pos:end="155:84"><expr pos:start="155:17" pos:end="155:83"><name pos:start="155:17" pos:end="155:23"><name pos:start="155:17" pos:end="155:19">pkt</name><operator pos:start="155:20" pos:end="155:20">.</operator><name pos:start="155:21" pos:end="155:23">dts</name></name> <operator pos:start="155:25" pos:end="155:25">=</operator> <call pos:start="155:27" pos:end="155:83"><name pos:start="155:27" pos:end="155:38">av_rescale_q</name><argument_list pos:start="155:39" pos:end="155:83">(<argument pos:start="155:40" pos:end="155:46"><expr pos:start="155:40" pos:end="155:46"><name pos:start="155:40" pos:end="155:46"><name pos:start="155:40" pos:end="155:42">pkt</name><operator pos:start="155:43" pos:end="155:43">.</operator><name pos:start="155:44" pos:end="155:46">dts</name></name></expr></argument>, <argument pos:start="155:49" pos:end="155:62"><expr pos:start="155:49" pos:end="155:62"><name pos:start="155:49" pos:end="155:62"><name pos:start="155:49" pos:end="155:51">enc</name><operator pos:start="155:52" pos:end="155:53">-&gt;</operator><name pos:start="155:54" pos:end="155:62">time_base</name></name></expr></argument>, <argument pos:start="155:65" pos:end="155:82"><expr pos:start="155:65" pos:end="155:82"><name pos:start="155:65" pos:end="155:82"><name pos:start="155:65" pos:end="155:67">ost</name><operator pos:start="155:68" pos:end="155:69">-&gt;</operator><name pos:start="155:70" pos:end="155:71">st</name><operator pos:start="155:72" pos:end="155:73">-&gt;</operator><name pos:start="155:74" pos:end="155:82">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="159:13" pos:end="159:38"><expr pos:start="159:13" pos:end="159:37"><call pos:start="159:13" pos:end="159:37"><name pos:start="159:13" pos:end="159:23">write_frame</name><argument_list pos:start="159:24" pos:end="159:37">(<argument pos:start="159:25" pos:end="159:25"><expr pos:start="159:25" pos:end="159:25"><name pos:start="159:25" pos:end="159:25">s</name></expr></argument>, <argument pos:start="159:28" pos:end="159:31"><expr pos:start="159:28" pos:end="159:31"><operator pos:start="159:28" pos:end="159:28">&amp;</operator><name pos:start="159:29" pos:end="159:31">pkt</name></expr></argument>, <argument pos:start="159:34" pos:end="159:36"><expr pos:start="159:34" pos:end="159:36"><name pos:start="159:34" pos:end="159:36">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:35"><expr pos:start="161:13" pos:end="161:34"><operator pos:start="161:13" pos:end="161:13">*</operator><name pos:start="161:14" pos:end="161:23">frame_size</name> <operator pos:start="161:25" pos:end="161:25">=</operator> <name pos:start="161:27" pos:end="161:34"><name pos:start="161:27" pos:end="161:29">pkt</name><operator pos:start="161:30" pos:end="161:30">.</operator><name pos:start="161:31" pos:end="161:34">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:35"><expr pos:start="163:13" pos:end="163:34"><name pos:start="163:13" pos:end="163:22">video_size</name> <operator pos:start="163:24" pos:end="163:25">+=</operator> <name pos:start="163:27" pos:end="163:34"><name pos:start="163:27" pos:end="163:29">pkt</name><operator pos:start="163:30" pos:end="163:30">.</operator><name pos:start="163:31" pos:end="163:34">size</name></name></expr>;</expr_stmt>



            <comment type="block" pos:start="167:13" pos:end="167:41">/* if two pass, output log */</comment>

            <if_stmt pos:start="169:13" pos:end="173:13"><if pos:start="169:13" pos:end="173:13">if <condition pos:start="169:16" pos:end="169:47">(<expr pos:start="169:17" pos:end="169:46"><name pos:start="169:17" pos:end="169:28"><name pos:start="169:17" pos:end="169:19">ost</name><operator pos:start="169:20" pos:end="169:21">-&gt;</operator><name pos:start="169:22" pos:end="169:28">logfile</name></name> <operator pos:start="169:30" pos:end="169:31">&amp;&amp;</operator> <name pos:start="169:33" pos:end="169:46"><name pos:start="169:33" pos:end="169:35">enc</name><operator pos:start="169:36" pos:end="169:37">-&gt;</operator><name pos:start="169:38" pos:end="169:46">stats_out</name></name></expr>)</condition> <block pos:start="169:49" pos:end="173:13">{<block_content pos:start="171:17" pos:end="171:60">

                <expr_stmt pos:start="171:17" pos:end="171:60"><expr pos:start="171:17" pos:end="171:59"><call pos:start="171:17" pos:end="171:59"><name pos:start="171:17" pos:end="171:23">fprintf</name><argument_list pos:start="171:24" pos:end="171:59">(<argument pos:start="171:25" pos:end="171:36"><expr pos:start="171:25" pos:end="171:36"><name pos:start="171:25" pos:end="171:36"><name pos:start="171:25" pos:end="171:27">ost</name><operator pos:start="171:28" pos:end="171:29">-&gt;</operator><name pos:start="171:30" pos:end="171:36">logfile</name></name></expr></argument>, <argument pos:start="171:39" pos:end="171:42"><expr pos:start="171:39" pos:end="171:42"><literal type="string" pos:start="171:39" pos:end="171:42">"%s"</literal></expr></argument>, <argument pos:start="171:45" pos:end="171:58"><expr pos:start="171:45" pos:end="171:58"><name pos:start="171:45" pos:end="171:58"><name pos:start="171:45" pos:end="171:47">enc</name><operator pos:start="171:48" pos:end="171:49">-&gt;</operator><name pos:start="171:50" pos:end="171:58">stats_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:21"><expr pos:start="179:5" pos:end="179:20"><name pos:start="179:5" pos:end="179:18"><name pos:start="179:5" pos:end="179:7">ost</name><operator pos:start="179:8" pos:end="179:9">-&gt;</operator><name pos:start="179:10" pos:end="179:18">sync_opts</name></name><operator pos:start="179:19" pos:end="179:20">++</operator></expr>;</expr_stmt>

    <comment type="block" pos:start="181:5" pos:end="189:7">/*

     * For video, number of frames in == number of packets out.

     * But there may be reordering, so we can't throw away frames on encoder

     * flush, we need to limit them here, before they go into encoder.

     */</comment>

    <expr_stmt pos:start="191:5" pos:end="191:24"><expr pos:start="191:5" pos:end="191:23"><name pos:start="191:5" pos:end="191:21"><name pos:start="191:5" pos:end="191:7">ost</name><operator pos:start="191:8" pos:end="191:9">-&gt;</operator><name pos:start="191:10" pos:end="191:21">frame_number</name></name><operator pos:start="191:22" pos:end="191:23">++</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
