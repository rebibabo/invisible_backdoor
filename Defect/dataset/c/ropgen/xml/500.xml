<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/500.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:31">pxa2xx_i2s_read</name><parameter_list pos:start="1:32" pos:end="3:46">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:57"><decl pos:start="1:47" pos:end="1:57"><type pos:start="1:47" pos:end="1:57"><name pos:start="1:47" pos:end="1:52">hwaddr</name></type> <name pos:start="1:54" pos:end="1:57">addr</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:45"><decl pos:start="3:33" pos:end="3:45"><type pos:start="3:33" pos:end="3:45"><name pos:start="3:33" pos:end="3:40">unsigned</name></type> <name pos:start="3:42" pos:end="3:45">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:13">

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">PXA2xxI2SState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:49">= <expr pos:start="7:25" pos:end="7:49"><operator pos:start="7:25" pos:end="7:25">(</operator><name pos:start="7:26" pos:end="7:39">PXA2xxI2SState</name> <operator pos:start="7:41" pos:end="7:41">*</operator><operator pos:start="7:42" pos:end="7:42">)</operator> <name pos:start="7:44" pos:end="7:49">opaque</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="57:5">switch <condition pos:start="11:12" pos:end="11:17">(<expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">addr</name></expr>)</condition> <block pos:start="11:19" pos:end="57:5">{<block_content pos:start="13:5" pos:end="55:14">

    <case pos:start="13:5" pos:end="13:15">case <expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:14">SACR0</name></expr>:</case>

        <return pos:start="15:9" pos:end="15:29">return <expr pos:start="15:16" pos:end="15:28"><name pos:start="15:16" pos:end="15:28"><name pos:start="15:16" pos:end="15:16">s</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:25">control</name><index pos:start="15:26" pos:end="15:28">[<expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">0</literal></expr>]</index></name></expr>;</return>

    <case pos:start="17:5" pos:end="17:15">case <expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:14">SACR1</name></expr>:</case>

        <return pos:start="19:9" pos:end="19:29">return <expr pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:25">control</name><index pos:start="19:26" pos:end="19:28">[<expr pos:start="19:27" pos:end="19:27"><literal type="number" pos:start="19:27" pos:end="19:27">1</literal></expr>]</index></name></expr>;</return>

    <case pos:start="21:5" pos:end="21:15">case <expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:14">SASR0</name></expr>:</case>

        <return pos:start="23:9" pos:end="23:25">return <expr pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:16">s</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:24">status</name></name></expr>;</return>

    <case pos:start="25:5" pos:end="25:15">case <expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:14">SAIMR</name></expr>:</case>

        <return pos:start="27:9" pos:end="27:23">return <expr pos:start="27:16" pos:end="27:22"><name pos:start="27:16" pos:end="27:22"><name pos:start="27:16" pos:end="27:16">s</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:22">mask</name></name></expr>;</return>

    <case pos:start="29:5" pos:end="29:15">case <expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:14">SAICR</name></expr>:</case>

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return>

    <case pos:start="33:5" pos:end="33:15">case <expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:14">SADIV</name></expr>:</case>

        <return pos:start="35:9" pos:end="35:22">return <expr pos:start="35:16" pos:end="35:21"><name pos:start="35:16" pos:end="35:21"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:21">clk</name></name></expr>;</return>

    <case pos:start="37:5" pos:end="37:14">case <expr pos:start="37:10" pos:end="37:13"><name pos:start="37:10" pos:end="37:13">SADR</name></expr>:</case>

        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="47:9">if <condition pos:start="39:12" pos:end="39:26">(<expr pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:21"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:21">rx_len</name></name> <operator pos:start="39:23" pos:end="39:23">&gt;</operator> <literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr>)</condition> <block pos:start="39:28" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:42">

            <expr_stmt pos:start="41:13" pos:end="41:25"><expr pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:21">rx_len</name></name> <operator pos:start="41:23" pos:end="41:24">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:33"><expr pos:start="43:13" pos:end="43:32"><call pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:29">pxa2xx_i2s_update</name><argument_list pos:start="43:30" pos:end="43:32">(<argument pos:start="43:31" pos:end="43:31"><expr pos:start="43:31" pos:end="43:31"><name pos:start="43:31" pos:end="43:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:42">return <expr pos:start="45:20" pos:end="45:41"><call pos:start="45:20" pos:end="45:41"><name pos:start="45:20" pos:end="45:30"><name pos:start="45:20" pos:end="45:20">s</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:30">codec_in</name></name><argument_list pos:start="45:31" pos:end="45:41">(<argument pos:start="45:32" pos:end="45:40"><expr pos:start="45:32" pos:end="45:40"><name pos:start="45:32" pos:end="45:40"><name pos:start="45:32" pos:end="45:32">s</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:40">opaque</name></name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return>

    <default pos:start="51:5" pos:end="51:12">default:</default>

        <expr_stmt pos:start="53:9" pos:end="53:69"><expr pos:start="53:9" pos:end="53:68"><call pos:start="53:9" pos:end="53:68"><name pos:start="53:9" pos:end="53:14">printf</name><argument_list pos:start="53:15" pos:end="53:68">(<argument pos:start="53:16" pos:end="53:47"><expr pos:start="53:16" pos:end="53:47"><literal type="string" pos:start="53:16" pos:end="53:34">"%s: Bad register "</literal> <name pos:start="53:36" pos:end="53:42">REG_FMT</name> <literal type="string" pos:start="53:44" pos:end="53:47">"\n"</literal></expr></argument>, <argument pos:start="53:50" pos:end="53:61"><expr pos:start="53:50" pos:end="53:61"><name pos:start="53:50" pos:end="53:61">__FUNCTION__</name></expr></argument>, <argument pos:start="53:64" pos:end="53:67"><expr pos:start="53:64" pos:end="53:67"><name pos:start="53:64" pos:end="53:67">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
