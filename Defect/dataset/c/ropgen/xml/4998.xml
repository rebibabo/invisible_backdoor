<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4998.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:17">ExitStatus</name></type> <name pos:start="1:19" pos:end="1:27">gen_bcond</name><parameter_list pos:start="1:28" pos:end="3:51">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:40">DisasContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:54">TCGCond</name></type> <name pos:start="1:56" pos:end="1:59">cond</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:67"><decl pos:start="1:62" pos:end="1:67"><type pos:start="1:62" pos:end="1:67"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:67">ra</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:35">int32_t</name></type> <name pos:start="3:37" pos:end="3:40">disp</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:50"><decl pos:start="3:43" pos:end="3:50"><type pos:start="3:43" pos:end="3:50"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:50">mask</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="27:1">{<block_content pos:start="7:5" pos:end="25:56">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">TCGv</name></type> <name pos:start="7:10" pos:end="7:16">cmp_tmp</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="21:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:12">mask</name></expr>)</condition> <block pos:start="11:15" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:56">

        <expr_stmt pos:start="13:9" pos:end="13:33"><expr pos:start="13:9" pos:end="13:32"><name pos:start="13:9" pos:end="13:15">cmp_tmp</name> <operator pos:start="13:17" pos:end="13:17">=</operator> <call pos:start="13:19" pos:end="13:32"><name pos:start="13:19" pos:end="13:30">tcg_temp_new</name><argument_list pos:start="13:31" pos:end="13:32">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:56"><expr pos:start="15:9" pos:end="15:55"><call pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:24">tcg_gen_andi_i64</name><argument_list pos:start="15:25" pos:end="15:55">(<argument pos:start="15:26" pos:end="15:32"><expr pos:start="15:26" pos:end="15:32"><name pos:start="15:26" pos:end="15:32">cmp_tmp</name></expr></argument>, <argument pos:start="15:35" pos:end="15:51"><expr pos:start="15:35" pos:end="15:51"><call pos:start="15:35" pos:end="15:51"><name pos:start="15:35" pos:end="15:42">load_gpr</name><argument_list pos:start="15:43" pos:end="15:51">(<argument pos:start="15:44" pos:end="15:46"><expr pos:start="15:44" pos:end="15:46"><name pos:start="15:44" pos:end="15:46">ctx</name></expr></argument>, <argument pos:start="15:49" pos:end="15:50"><expr pos:start="15:49" pos:end="15:50"><name pos:start="15:49" pos:end="15:50">ra</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:54" pos:end="15:54"><expr pos:start="15:54" pos:end="15:54"><literal type="number" pos:start="15:54" pos:end="15:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="21:5">else <block pos:start="17:12" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:36">

        <expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:15">cmp_tmp</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <call pos:start="19:19" pos:end="19:35"><name pos:start="19:19" pos:end="19:26">load_gpr</name><argument_list pos:start="19:27" pos:end="19:35">(<argument pos:start="19:28" pos:end="19:30"><expr pos:start="19:28" pos:end="19:30"><name pos:start="19:28" pos:end="19:30">ctx</name></expr></argument>, <argument pos:start="19:33" pos:end="19:34"><expr pos:start="19:33" pos:end="19:34"><name pos:start="19:33" pos:end="19:34">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="25:5" pos:end="25:56">return <expr pos:start="25:12" pos:end="25:55"><call pos:start="25:12" pos:end="25:55"><name pos:start="25:12" pos:end="25:29">gen_bcond_internal</name><argument_list pos:start="25:30" pos:end="25:55">(<argument pos:start="25:31" pos:end="25:33"><expr pos:start="25:31" pos:end="25:33"><name pos:start="25:31" pos:end="25:33">ctx</name></expr></argument>, <argument pos:start="25:36" pos:end="25:39"><expr pos:start="25:36" pos:end="25:39"><name pos:start="25:36" pos:end="25:39">cond</name></expr></argument>, <argument pos:start="25:42" pos:end="25:48"><expr pos:start="25:42" pos:end="25:48"><name pos:start="25:42" pos:end="25:48">cmp_tmp</name></expr></argument>, <argument pos:start="25:51" pos:end="25:54"><expr pos:start="25:51" pos:end="25:54"><name pos:start="25:51" pos:end="25:54">disp</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
