<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9206.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:49">qio_channel_websock_handshake_process</name><parameter_list pos:start="1:50" pos:end="5:63">(<parameter pos:start="1:51" pos:end="1:72"><decl pos:start="1:51" pos:end="1:72"><type pos:start="1:51" pos:end="1:72"><name pos:start="1:51" pos:end="1:67">QIOChannelWebsock</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">ioc</name></decl></parameter>,

                                                  <parameter pos:start="3:51" pos:end="3:62"><decl pos:start="3:51" pos:end="3:62"><type pos:start="3:51" pos:end="3:62"><name pos:start="3:51" pos:end="3:54">char</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:62">buffer</name></decl></parameter>,

                                                  <parameter pos:start="5:51" pos:end="5:62"><decl pos:start="5:51" pos:end="5:62"><type pos:start="5:51" pos:end="5:62"><name pos:start="5:51" pos:end="5:55">Error</name> <modifier pos:start="5:57" pos:end="5:57">*</modifier><modifier pos:start="5:58" pos:end="5:58">*</modifier></type><name pos:start="5:59" pos:end="5:62">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="181:1">{<block_content pos:start="9:5" pos:end="179:60">

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:31">QIOChannelWebsockHTTPHeader</name></type> <name pos:start="9:33" pos:end="9:40"><name pos:start="9:33" pos:end="9:36">hdrs</name><index pos:start="9:37" pos:end="9:40">[<expr pos:start="9:38" pos:end="9:39"><literal type="number" pos:start="9:38" pos:end="9:39">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:16">nhdrs</name> <init pos:start="11:18" pos:end="11:37">= <expr pos:start="11:20" pos:end="11:37"><call pos:start="11:20" pos:end="11:37"><name pos:start="11:20" pos:end="11:31">G_N_ELEMENTS</name><argument_list pos:start="11:32" pos:end="11:37">(<argument pos:start="11:33" pos:end="11:36"><expr pos:start="11:33" pos:end="11:36"><name pos:start="11:33" pos:end="11:36">hdrs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="15:58"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:25">protocols</name> <init pos:start="13:27" pos:end="13:32">= <expr pos:start="13:29" pos:end="13:32"><name pos:start="13:29" pos:end="13:32">NULL</name></expr></init></decl>, <decl pos:start="13:35" pos:end="13:49"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="13:35" pos:end="13:35">*</modifier></type><name pos:start="13:36" pos:end="13:42">version</name> <init pos:start="13:44" pos:end="13:49">= <expr pos:start="13:46" pos:end="13:49"><name pos:start="13:46" pos:end="13:49">NULL</name></expr></init></decl>, <decl pos:start="13:52" pos:end="13:62"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="13:52" pos:end="13:52">*</modifier></type><name pos:start="13:53" pos:end="13:55">key</name> <init pos:start="13:57" pos:end="13:62">= <expr pos:start="13:59" pos:end="13:62"><name pos:start="13:59" pos:end="13:62">NULL</name></expr></init></decl>,

        <decl pos:start="15:9" pos:end="15:20"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="15:9" pos:end="15:9">*</modifier></type><name pos:start="15:10" pos:end="15:13">host</name> <init pos:start="15:15" pos:end="15:20">= <expr pos:start="15:17" pos:end="15:20"><name pos:start="15:17" pos:end="15:20">NULL</name></expr></init></decl>, <decl pos:start="15:23" pos:end="15:40"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:33">connection</name> <init pos:start="15:35" pos:end="15:40">= <expr pos:start="15:37" pos:end="15:40"><name pos:start="15:37" pos:end="15:40">NULL</name></expr></init></decl>, <decl pos:start="15:43" pos:end="15:57"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="15:43" pos:end="15:43">*</modifier></type><name pos:start="15:44" pos:end="15:50">upgrade</name> <init pos:start="15:52" pos:end="15:57">= <expr pos:start="15:54" pos:end="15:57"><name pos:start="15:54" pos:end="15:57">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:80"><expr pos:start="19:5" pos:end="19:79"><name pos:start="19:5" pos:end="19:9">nhdrs</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:79"><name pos:start="19:13" pos:end="19:47">qio_channel_websock_extract_headers</name><argument_list pos:start="19:48" pos:end="19:79">(<argument pos:start="19:49" pos:end="19:51"><expr pos:start="19:49" pos:end="19:51"><name pos:start="19:49" pos:end="19:51">ioc</name></expr></argument>, <argument pos:start="19:54" pos:end="19:59"><expr pos:start="19:54" pos:end="19:59"><name pos:start="19:54" pos:end="19:59">buffer</name></expr></argument>, <argument pos:start="19:62" pos:end="19:65"><expr pos:start="19:62" pos:end="19:65"><name pos:start="19:62" pos:end="19:65">hdrs</name></expr></argument>, <argument pos:start="19:68" pos:end="19:72"><expr pos:start="19:68" pos:end="19:72"><name pos:start="19:68" pos:end="19:72">nhdrs</name></expr></argument>, <argument pos:start="19:75" pos:end="19:78"><expr pos:start="19:75" pos:end="19:78"><name pos:start="19:75" pos:end="19:78">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:15">(<expr pos:start="21:9" pos:end="21:14"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:14">nhdrs</name></expr>)</condition> <block pos:start="21:17" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:15">

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="31:58"><expr pos:start="29:5" pos:end="31:57"><name pos:start="29:5" pos:end="29:13">protocols</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="31:57"><name pos:start="29:17" pos:end="29:47">qio_channel_websock_find_header</name><argument_list pos:start="29:48" pos:end="31:57">(

        <argument pos:start="31:9" pos:end="31:12"><expr pos:start="31:9" pos:end="31:12"><name pos:start="31:9" pos:end="31:12">hdrs</name></expr></argument>, <argument pos:start="31:15" pos:end="31:19"><expr pos:start="31:15" pos:end="31:19"><name pos:start="31:15" pos:end="31:19">nhdrs</name></expr></argument>, <argument pos:start="31:22" pos:end="31:56"><expr pos:start="31:22" pos:end="31:56"><name pos:start="31:22" pos:end="31:56">QIO_CHANNEL_WEBSOCK_HEADER_PROTOCOL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:19">(<expr pos:start="33:9" pos:end="33:18"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:18">protocols</name></expr>)</condition> <block pos:start="33:21" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:25">

        <expr_stmt pos:start="35:9" pos:end="35:67"><expr pos:start="35:9" pos:end="35:66"><call pos:start="35:9" pos:end="35:66"><name pos:start="35:9" pos:end="35:18">error_setg</name><argument_list pos:start="35:19" pos:end="35:66">(<argument pos:start="35:20" pos:end="35:23"><expr pos:start="35:20" pos:end="35:23"><name pos:start="35:20" pos:end="35:23">errp</name></expr></argument>, <argument pos:start="35:26" pos:end="35:65"><expr pos:start="35:26" pos:end="35:65"><literal type="string" pos:start="35:26" pos:end="35:65">"Missing websocket protocol header data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:25">goto <name pos:start="37:14" pos:end="37:24">bad_request</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="45:57"><expr pos:start="43:5" pos:end="45:56"><name pos:start="43:5" pos:end="43:11">version</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="45:56"><name pos:start="43:15" pos:end="43:45">qio_channel_websock_find_header</name><argument_list pos:start="43:46" pos:end="45:56">(

        <argument pos:start="45:9" pos:end="45:12"><expr pos:start="45:9" pos:end="45:12"><name pos:start="45:9" pos:end="45:12">hdrs</name></expr></argument>, <argument pos:start="45:15" pos:end="45:19"><expr pos:start="45:15" pos:end="45:19"><name pos:start="45:15" pos:end="45:19">nhdrs</name></expr></argument>, <argument pos:start="45:22" pos:end="45:55"><expr pos:start="45:22" pos:end="45:55"><name pos:start="45:22" pos:end="45:55">QIO_CHANNEL_WEBSOCK_HEADER_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:17">(<expr pos:start="47:9" pos:end="47:16"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:16">version</name></expr>)</condition> <block pos:start="47:19" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:25">

        <expr_stmt pos:start="49:9" pos:end="49:66"><expr pos:start="49:9" pos:end="49:65"><call pos:start="49:9" pos:end="49:65"><name pos:start="49:9" pos:end="49:18">error_setg</name><argument_list pos:start="49:19" pos:end="49:65">(<argument pos:start="49:20" pos:end="49:23"><expr pos:start="49:20" pos:end="49:23"><name pos:start="49:20" pos:end="49:23">errp</name></expr></argument>, <argument pos:start="49:26" pos:end="49:64"><expr pos:start="49:26" pos:end="49:64"><literal type="string" pos:start="49:26" pos:end="49:64">"Missing websocket version header data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:25">goto <name pos:start="51:14" pos:end="51:24">bad_request</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="59:53"><expr pos:start="57:5" pos:end="59:52"><name pos:start="57:5" pos:end="57:7">key</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="59:52"><name pos:start="57:11" pos:end="57:41">qio_channel_websock_find_header</name><argument_list pos:start="57:42" pos:end="59:52">(

        <argument pos:start="59:9" pos:end="59:12"><expr pos:start="59:9" pos:end="59:12"><name pos:start="59:9" pos:end="59:12">hdrs</name></expr></argument>, <argument pos:start="59:15" pos:end="59:19"><expr pos:start="59:15" pos:end="59:19"><name pos:start="59:15" pos:end="59:19">nhdrs</name></expr></argument>, <argument pos:start="59:22" pos:end="59:51"><expr pos:start="59:22" pos:end="59:51"><name pos:start="59:22" pos:end="59:51">QIO_CHANNEL_WEBSOCK_HEADER_KEY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:13">(<expr pos:start="61:9" pos:end="61:12"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:12">key</name></expr>)</condition> <block pos:start="61:15" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:25">

        <expr_stmt pos:start="63:9" pos:end="63:62"><expr pos:start="63:9" pos:end="63:61"><call pos:start="63:9" pos:end="63:61"><name pos:start="63:9" pos:end="63:18">error_setg</name><argument_list pos:start="63:19" pos:end="63:61">(<argument pos:start="63:20" pos:end="63:23"><expr pos:start="63:20" pos:end="63:23"><name pos:start="63:20" pos:end="63:23">errp</name></expr></argument>, <argument pos:start="63:26" pos:end="63:60"><expr pos:start="63:26" pos:end="63:60"><literal type="string" pos:start="63:26" pos:end="63:60">"Missing websocket key header data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:25">goto <name pos:start="65:14" pos:end="65:24">bad_request</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="73:54"><expr pos:start="71:5" pos:end="73:53"><name pos:start="71:5" pos:end="71:8">host</name> <operator pos:start="71:10" pos:end="71:10">=</operator> <call pos:start="71:12" pos:end="73:53"><name pos:start="71:12" pos:end="71:42">qio_channel_websock_find_header</name><argument_list pos:start="71:43" pos:end="73:53">(

        <argument pos:start="73:9" pos:end="73:12"><expr pos:start="73:9" pos:end="73:12"><name pos:start="73:9" pos:end="73:12">hdrs</name></expr></argument>, <argument pos:start="73:15" pos:end="73:19"><expr pos:start="73:15" pos:end="73:19"><name pos:start="73:15" pos:end="73:19">nhdrs</name></expr></argument>, <argument pos:start="73:22" pos:end="73:52"><expr pos:start="73:22" pos:end="73:52"><name pos:start="73:22" pos:end="73:52">QIO_CHANNEL_WEBSOCK_HEADER_HOST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:14">(<expr pos:start="75:9" pos:end="75:13"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:13">host</name></expr>)</condition> <block pos:start="75:16" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:25">

        <expr_stmt pos:start="77:9" pos:end="77:63"><expr pos:start="77:9" pos:end="77:62"><call pos:start="77:9" pos:end="77:62"><name pos:start="77:9" pos:end="77:18">error_setg</name><argument_list pos:start="77:19" pos:end="77:62">(<argument pos:start="77:20" pos:end="77:23"><expr pos:start="77:20" pos:end="77:23"><name pos:start="77:20" pos:end="77:23">errp</name></expr></argument>, <argument pos:start="77:26" pos:end="77:61"><expr pos:start="77:26" pos:end="77:61"><literal type="string" pos:start="77:26" pos:end="77:61">"Missing websocket host header data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="79:9" pos:end="79:25">goto <name pos:start="79:14" pos:end="79:24">bad_request</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="87:60"><expr pos:start="85:5" pos:end="87:59"><name pos:start="85:5" pos:end="85:14">connection</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <call pos:start="85:18" pos:end="87:59"><name pos:start="85:18" pos:end="85:48">qio_channel_websock_find_header</name><argument_list pos:start="85:49" pos:end="87:59">(

        <argument pos:start="87:9" pos:end="87:12"><expr pos:start="87:9" pos:end="87:12"><name pos:start="87:9" pos:end="87:12">hdrs</name></expr></argument>, <argument pos:start="87:15" pos:end="87:19"><expr pos:start="87:15" pos:end="87:19"><name pos:start="87:15" pos:end="87:19">nhdrs</name></expr></argument>, <argument pos:start="87:22" pos:end="87:58"><expr pos:start="87:22" pos:end="87:58"><name pos:start="87:22" pos:end="87:58">QIO_CHANNEL_WEBSOCK_HEADER_CONNECTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:20">(<expr pos:start="89:9" pos:end="89:19"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:19">connection</name></expr>)</condition> <block pos:start="89:22" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:25">

        <expr_stmt pos:start="91:9" pos:end="91:69"><expr pos:start="91:9" pos:end="91:68"><call pos:start="91:9" pos:end="91:68"><name pos:start="91:9" pos:end="91:18">error_setg</name><argument_list pos:start="91:19" pos:end="91:68">(<argument pos:start="91:20" pos:end="91:23"><expr pos:start="91:20" pos:end="91:23"><name pos:start="91:20" pos:end="91:23">errp</name></expr></argument>, <argument pos:start="91:26" pos:end="91:67"><expr pos:start="91:26" pos:end="91:67"><literal type="string" pos:start="91:26" pos:end="91:67">"Missing websocket connection header data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="93:9" pos:end="93:25">goto <name pos:start="93:14" pos:end="93:24">bad_request</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="101:57"><expr pos:start="99:5" pos:end="101:56"><name pos:start="99:5" pos:end="99:11">upgrade</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <call pos:start="99:15" pos:end="101:56"><name pos:start="99:15" pos:end="99:45">qio_channel_websock_find_header</name><argument_list pos:start="99:46" pos:end="101:56">(

        <argument pos:start="101:9" pos:end="101:12"><expr pos:start="101:9" pos:end="101:12"><name pos:start="101:9" pos:end="101:12">hdrs</name></expr></argument>, <argument pos:start="101:15" pos:end="101:19"><expr pos:start="101:15" pos:end="101:19"><name pos:start="101:15" pos:end="101:19">nhdrs</name></expr></argument>, <argument pos:start="101:22" pos:end="101:55"><expr pos:start="101:22" pos:end="101:55"><name pos:start="101:22" pos:end="101:55">QIO_CHANNEL_WEBSOCK_HEADER_UPGRADE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="109:5"><if pos:start="103:5" pos:end="109:5">if <condition pos:start="103:8" pos:end="103:17">(<expr pos:start="103:9" pos:end="103:16"><operator pos:start="103:9" pos:end="103:9">!</operator><name pos:start="103:10" pos:end="103:16">upgrade</name></expr>)</condition> <block pos:start="103:19" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:25">

        <expr_stmt pos:start="105:9" pos:end="105:66"><expr pos:start="105:9" pos:end="105:65"><call pos:start="105:9" pos:end="105:65"><name pos:start="105:9" pos:end="105:18">error_setg</name><argument_list pos:start="105:19" pos:end="105:65">(<argument pos:start="105:20" pos:end="105:23"><expr pos:start="105:20" pos:end="105:23"><name pos:start="105:20" pos:end="105:23">errp</name></expr></argument>, <argument pos:start="105:26" pos:end="105:64"><expr pos:start="105:26" pos:end="105:64"><literal type="string" pos:start="105:26" pos:end="105:64">"Missing websocket upgrade header data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="107:9" pos:end="107:25">goto <name pos:start="107:14" pos:end="107:24">bad_request</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="121:5"><if pos:start="113:5" pos:end="121:5">if <condition pos:start="113:8" pos:end="113:67">(<expr pos:start="113:9" pos:end="113:66"><operator pos:start="113:9" pos:end="113:9">!</operator><call pos:start="113:10" pos:end="113:66"><name pos:start="113:10" pos:end="113:18">g_strrstr</name><argument_list pos:start="113:19" pos:end="113:66">(<argument pos:start="113:20" pos:end="113:28"><expr pos:start="113:20" pos:end="113:28"><name pos:start="113:20" pos:end="113:28">protocols</name></expr></argument>, <argument pos:start="113:31" pos:end="113:65"><expr pos:start="113:31" pos:end="113:65"><name pos:start="113:31" pos:end="113:65">QIO_CHANNEL_WEBSOCK_PROTOCOL_BINARY</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:69" pos:end="121:5">{<block_content pos:start="115:9" pos:end="119:25">

        <expr_stmt pos:start="115:9" pos:end="117:67"><expr pos:start="115:9" pos:end="117:66"><call pos:start="115:9" pos:end="117:66"><name pos:start="115:9" pos:end="115:18">error_setg</name><argument_list pos:start="115:19" pos:end="117:66">(<argument pos:start="115:20" pos:end="115:23"><expr pos:start="115:20" pos:end="115:23"><name pos:start="115:20" pos:end="115:23">errp</name></expr></argument>, <argument pos:start="115:26" pos:end="115:71"><expr pos:start="115:26" pos:end="115:71"><literal type="string" pos:start="115:26" pos:end="115:71">"No '%s' protocol is supported by client '%s'"</literal></expr></argument>,

                   <argument pos:start="117:20" pos:end="117:54"><expr pos:start="117:20" pos:end="117:54"><name pos:start="117:20" pos:end="117:54">QIO_CHANNEL_WEBSOCK_PROTOCOL_BINARY</name></expr></argument>, <argument pos:start="117:57" pos:end="117:65"><expr pos:start="117:57" pos:end="117:65"><name pos:start="117:57" pos:end="117:65">protocols</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="119:9" pos:end="119:25">goto <name pos:start="119:14" pos:end="119:24">bad_request</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="125:5" pos:end="133:5"><if pos:start="125:5" pos:end="133:5">if <condition pos:start="125:8" pos:end="125:69">(<expr pos:start="125:9" pos:end="125:68"><operator pos:start="125:9" pos:end="125:9">!</operator><call pos:start="125:10" pos:end="125:68"><name pos:start="125:10" pos:end="125:20">g_str_equal</name><argument_list pos:start="125:21" pos:end="125:68">(<argument pos:start="125:22" pos:end="125:28"><expr pos:start="125:22" pos:end="125:28"><name pos:start="125:22" pos:end="125:28">version</name></expr></argument>, <argument pos:start="125:31" pos:end="125:67"><expr pos:start="125:31" pos:end="125:67"><name pos:start="125:31" pos:end="125:67">QIO_CHANNEL_WEBSOCK_SUPPORTED_VERSION</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:71" pos:end="133:5">{<block_content pos:start="127:9" pos:end="131:25">

        <expr_stmt pos:start="127:9" pos:end="129:67"><expr pos:start="127:9" pos:end="129:66"><call pos:start="127:9" pos:end="129:66"><name pos:start="127:9" pos:end="127:18">error_setg</name><argument_list pos:start="127:19" pos:end="129:66">(<argument pos:start="127:20" pos:end="127:23"><expr pos:start="127:20" pos:end="127:23"><name pos:start="127:20" pos:end="127:23">errp</name></expr></argument>, <argument pos:start="127:26" pos:end="127:71"><expr pos:start="127:26" pos:end="127:71"><literal type="string" pos:start="127:26" pos:end="127:71">"Version '%s' is not supported by client '%s'"</literal></expr></argument>,

                   <argument pos:start="129:20" pos:end="129:56"><expr pos:start="129:20" pos:end="129:56"><name pos:start="129:20" pos:end="129:56">QIO_CHANNEL_WEBSOCK_SUPPORTED_VERSION</name></expr></argument>, <argument pos:start="129:59" pos:end="129:65"><expr pos:start="129:59" pos:end="129:65"><name pos:start="129:59" pos:end="129:65">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="131:9" pos:end="131:25">goto <name pos:start="131:14" pos:end="131:24">bad_request</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="137:5" pos:end="145:5"><if pos:start="137:5" pos:end="145:5">if <condition pos:start="137:8" pos:end="137:58">(<expr pos:start="137:9" pos:end="137:57"><call pos:start="137:9" pos:end="137:19"><name pos:start="137:9" pos:end="137:14">strlen</name><argument_list pos:start="137:15" pos:end="137:19">(<argument pos:start="137:16" pos:end="137:18"><expr pos:start="137:16" pos:end="137:18"><name pos:start="137:16" pos:end="137:18">key</name></expr></argument>)</argument_list></call> <operator pos:start="137:21" pos:end="137:22">!=</operator> <name pos:start="137:24" pos:end="137:57">QIO_CHANNEL_WEBSOCK_CLIENT_KEY_LEN</name></expr>)</condition> <block pos:start="137:60" pos:end="145:5">{<block_content pos:start="139:9" pos:end="143:25">

        <expr_stmt pos:start="139:9" pos:end="141:68"><expr pos:start="139:9" pos:end="141:67"><call pos:start="139:9" pos:end="141:67"><name pos:start="139:9" pos:end="139:18">error_setg</name><argument_list pos:start="139:19" pos:end="141:67">(<argument pos:start="139:20" pos:end="139:23"><expr pos:start="139:20" pos:end="139:23"><name pos:start="139:20" pos:end="139:23">errp</name></expr></argument>, <argument pos:start="139:26" pos:end="139:68"><expr pos:start="139:26" pos:end="139:68"><literal type="string" pos:start="139:26" pos:end="139:68">"Key length '%zu' was not as expected '%d'"</literal></expr></argument>,

                   <argument pos:start="141:20" pos:end="141:30"><expr pos:start="141:20" pos:end="141:30"><call pos:start="141:20" pos:end="141:30"><name pos:start="141:20" pos:end="141:25">strlen</name><argument_list pos:start="141:26" pos:end="141:30">(<argument pos:start="141:27" pos:end="141:29"><expr pos:start="141:27" pos:end="141:29"><name pos:start="141:27" pos:end="141:29">key</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="141:33" pos:end="141:66"><expr pos:start="141:33" pos:end="141:66"><name pos:start="141:33" pos:end="141:66">QIO_CHANNEL_WEBSOCK_CLIENT_KEY_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="143:9" pos:end="143:25">goto <name pos:start="143:14" pos:end="143:24">bad_request</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="149:5" pos:end="155:5"><if pos:start="149:5" pos:end="155:5">if <condition pos:start="149:8" pos:end="149:71">(<expr pos:start="149:9" pos:end="149:70"><operator pos:start="149:9" pos:end="149:9">!</operator><call pos:start="149:10" pos:end="149:70"><name pos:start="149:10" pos:end="149:18">g_strrstr</name><argument_list pos:start="149:19" pos:end="149:70">(<argument pos:start="149:20" pos:end="149:29"><expr pos:start="149:20" pos:end="149:29"><name pos:start="149:20" pos:end="149:29">connection</name></expr></argument>, <argument pos:start="149:32" pos:end="149:69"><expr pos:start="149:32" pos:end="149:69"><name pos:start="149:32" pos:end="149:69">QIO_CHANNEL_WEBSOCK_CONNECTION_UPGRADE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="149:73" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:25">

        <expr_stmt pos:start="151:9" pos:end="151:77"><expr pos:start="151:9" pos:end="151:76"><call pos:start="151:9" pos:end="151:76"><name pos:start="151:9" pos:end="151:18">error_setg</name><argument_list pos:start="151:19" pos:end="151:76">(<argument pos:start="151:20" pos:end="151:23"><expr pos:start="151:20" pos:end="151:23"><name pos:start="151:20" pos:end="151:23">errp</name></expr></argument>, <argument pos:start="151:26" pos:end="151:63"><expr pos:start="151:26" pos:end="151:63"><literal type="string" pos:start="151:26" pos:end="151:63">"No connection upgrade requested '%s'"</literal></expr></argument>, <argument pos:start="151:66" pos:end="151:75"><expr pos:start="151:66" pos:end="151:75"><name pos:start="151:66" pos:end="151:75">connection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="153:9" pos:end="153:25">goto <name pos:start="153:14" pos:end="153:24">bad_request</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="159:5" pos:end="165:5"><if pos:start="159:5" pos:end="165:5">if <condition pos:start="159:8" pos:end="159:69">(<expr pos:start="159:9" pos:end="159:68"><operator pos:start="159:9" pos:end="159:9">!</operator><call pos:start="159:10" pos:end="159:68"><name pos:start="159:10" pos:end="159:20">g_str_equal</name><argument_list pos:start="159:21" pos:end="159:68">(<argument pos:start="159:22" pos:end="159:28"><expr pos:start="159:22" pos:end="159:28"><name pos:start="159:22" pos:end="159:28">upgrade</name></expr></argument>, <argument pos:start="159:31" pos:end="159:67"><expr pos:start="159:31" pos:end="159:67"><name pos:start="159:31" pos:end="159:67">QIO_CHANNEL_WEBSOCK_UPGRADE_WEBSOCKET</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:71" pos:end="165:5">{<block_content pos:start="161:9" pos:end="163:25">

        <expr_stmt pos:start="161:9" pos:end="161:67"><expr pos:start="161:9" pos:end="161:66"><call pos:start="161:9" pos:end="161:66"><name pos:start="161:9" pos:end="161:18">error_setg</name><argument_list pos:start="161:19" pos:end="161:66">(<argument pos:start="161:20" pos:end="161:23"><expr pos:start="161:20" pos:end="161:23"><name pos:start="161:20" pos:end="161:23">errp</name></expr></argument>, <argument pos:start="161:26" pos:end="161:56"><expr pos:start="161:26" pos:end="161:56"><literal type="string" pos:start="161:26" pos:end="161:56">"Incorrect upgrade method '%s'"</literal></expr></argument>, <argument pos:start="161:59" pos:end="161:65"><expr pos:start="161:59" pos:end="161:65"><name pos:start="161:59" pos:end="161:65">upgrade</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="163:9" pos:end="163:25">goto <name pos:start="163:14" pos:end="163:24">bad_request</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="169:5" pos:end="169:62"><expr pos:start="169:5" pos:end="169:61"><call pos:start="169:5" pos:end="169:61"><name pos:start="169:5" pos:end="169:45">qio_channel_websock_handshake_send_res_ok</name><argument_list pos:start="169:46" pos:end="169:61">(<argument pos:start="169:47" pos:end="169:49"><expr pos:start="169:47" pos:end="169:49"><name pos:start="169:47" pos:end="169:49">ioc</name></expr></argument>, <argument pos:start="169:52" pos:end="169:54"><expr pos:start="169:52" pos:end="169:54"><name pos:start="169:52" pos:end="169:54">key</name></expr></argument>, <argument pos:start="169:57" pos:end="169:60"><expr pos:start="169:57" pos:end="169:60"><name pos:start="169:57" pos:end="169:60">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="171:5" pos:end="171:11">return;</return>



 <label pos:start="175:2" pos:end="175:13"><name pos:start="175:2" pos:end="175:12">bad_request</name>:</label>

    <expr_stmt pos:start="177:5" pos:end="179:60"><expr pos:start="177:5" pos:end="179:59"><call pos:start="177:5" pos:end="179:59"><name pos:start="177:5" pos:end="177:46">qio_channel_websock_handshake_send_res_err</name><argument_list pos:start="177:47" pos:end="179:59">(

        <argument pos:start="179:9" pos:end="179:11"><expr pos:start="179:9" pos:end="179:11"><name pos:start="179:9" pos:end="179:11">ioc</name></expr></argument>, <argument pos:start="179:14" pos:end="179:58"><expr pos:start="179:14" pos:end="179:58"><name pos:start="179:14" pos:end="179:58">QIO_CHANNEL_WEBSOCK_HANDSHAKE_RES_BAD_REQUEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
