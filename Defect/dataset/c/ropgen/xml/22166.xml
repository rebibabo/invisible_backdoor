<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22166.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">bt_hid_out</name><parameter_list pos:start="1:22" pos:end="1:48">(<parameter pos:start="1:23" pos:end="1:47"><decl pos:start="1:23" pos:end="1:47"><type pos:start="1:23" pos:end="1:47"><name pos:start="1:23" pos:end="1:44"><name pos:start="1:23" pos:end="1:28">struct</name> <name pos:start="1:30" pos:end="1:44">bt_hid_device_s</name></name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:14">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">USBPacket</name></type> <name pos:start="5:15" pos:end="5:15">p</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="25:5"><if pos:start="9:5" pos:end="25:5">if <condition pos:start="9:8" pos:end="9:39">(<expr pos:start="9:9" pos:end="9:38"><name pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:20">data_type</name></name> <operator pos:start="9:22" pos:end="9:23">==</operator> <name pos:start="9:25" pos:end="9:38">BT_DATA_OUTPUT</name></expr>)</condition> <block pos:start="9:41" pos:end="25:5">{<block_content pos:start="11:9" pos:end="23:30">

        <expr_stmt pos:start="11:9" pos:end="11:30"><expr pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:13"><name pos:start="11:9" pos:end="11:9">p</name><operator pos:start="11:10" pos:end="11:10">.</operator><name pos:start="11:11" pos:end="11:13">pid</name></name> <operator pos:start="11:15" pos:end="11:15">=</operator> <name pos:start="11:17" pos:end="11:29">USB_TOKEN_OUT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:20"><expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:9">p</name><operator pos:start="13:10" pos:end="13:10">.</operator><name pos:start="13:11" pos:end="13:15">devep</name></name> <operator pos:start="13:17" pos:end="13:17">=</operator> <literal type="number" pos:start="13:19" pos:end="13:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:35"><expr pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:9">p</name><operator pos:start="15:10" pos:end="15:10">.</operator><name pos:start="15:11" pos:end="15:14">data</name></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <name pos:start="15:18" pos:end="15:34"><name pos:start="15:18" pos:end="15:18">s</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:27">dataout</name><operator pos:start="15:28" pos:end="15:28">.</operator><name pos:start="15:29" pos:end="15:34">buffer</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:31"><expr pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:13"><name pos:start="17:9" pos:end="17:9">p</name><operator pos:start="17:10" pos:end="17:10">.</operator><name pos:start="17:11" pos:end="17:13">len</name></name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:30"><name pos:start="17:17" pos:end="17:17">s</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:26">dataout</name><operator pos:start="17:27" pos:end="17:27">.</operator><name pos:start="17:28" pos:end="17:30">len</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:69"><expr pos:start="19:9" pos:end="19:68"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:18">dataout</name><operator pos:start="19:19" pos:end="19:19">.</operator><name pos:start="19:20" pos:end="19:22">len</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <call pos:start="19:26" pos:end="19:68"><name pos:start="19:26" pos:end="19:53"><name pos:start="19:26" pos:end="19:26">s</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:34">usbdev</name><operator pos:start="19:35" pos:end="19:36">-&gt;</operator><name pos:start="19:37" pos:end="19:40">info</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:53">handle_data</name></name><argument_list pos:start="19:54" pos:end="19:68">(<argument pos:start="19:55" pos:end="19:63"><expr pos:start="19:55" pos:end="19:63"><name pos:start="19:55" pos:end="19:63"><name pos:start="19:55" pos:end="19:55">s</name><operator pos:start="19:56" pos:end="19:57">-&gt;</operator><name pos:start="19:58" pos:end="19:63">usbdev</name></name></expr></argument>, <argument pos:start="19:66" pos:end="19:67"><expr pos:start="19:66" pos:end="19:67"><operator pos:start="19:66" pos:end="19:66">&amp;</operator><name pos:start="19:67" pos:end="19:67">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="23:9" pos:end="23:30">return <expr pos:start="23:16" pos:end="23:29"><name pos:start="23:16" pos:end="23:29"><name pos:start="23:16" pos:end="23:16">s</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:25">dataout</name><operator pos:start="23:26" pos:end="23:26">.</operator><name pos:start="23:27" pos:end="23:29">len</name></name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="39:5"><if pos:start="29:5" pos:end="39:5">if <condition pos:start="29:8" pos:end="29:40">(<expr pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:20">data_type</name></name> <operator pos:start="29:22" pos:end="29:23">==</operator> <name pos:start="29:25" pos:end="29:39">BT_DATA_FEATURE</name></expr>)</condition> <block pos:start="29:42" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:20">

        <comment type="block" pos:start="31:9" pos:end="35:30">/* XXX:

         * does this send a USB_REQ_CLEAR_FEATURE/USB_REQ_SET_FEATURE

         * or a SET_REPORT? */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:20"><expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:9">p</name><operator pos:start="37:10" pos:end="37:10">.</operator><name pos:start="37:11" pos:end="37:15">devep</name></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="43:5" pos:end="43:14">return <expr pos:start="43:12" pos:end="43:13"><operator pos:start="43:12" pos:end="43:12">-</operator><literal type="number" pos:start="43:13" pos:end="43:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
