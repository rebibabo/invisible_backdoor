<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17745.c" pos:tabs="8"><function pos:start="1:1" pos:end="413:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">vc1_decode_intra_block</name><parameter_list pos:start="1:34" pos:end="3:71">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:44">VC1Context</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">v</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:56">int16_t</name></type> <name pos:start="1:58" pos:end="1:66"><name pos:start="1:58" pos:end="1:62">block</name><index pos:start="1:63" pos:end="1:66">[<expr pos:start="1:64" pos:end="1:65"><literal type="number" pos:start="1:64" pos:end="1:65">64</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:73"><decl pos:start="1:69" pos:end="1:73"><type pos:start="1:69" pos:end="1:73"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:73">n</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:43"><decl pos:start="3:35" pos:end="3:43"><type pos:start="3:35" pos:end="3:43"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:43">coded</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:55"><decl pos:start="3:46" pos:end="3:55"><type pos:start="3:46" pos:end="3:55"><name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:55">mquant</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:70"><decl pos:start="3:58" pos:end="3:70"><type pos:start="3:58" pos:end="3:70"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:70">codingset</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="413:1">{<block_content pos:start="7:5" pos:end="411:13">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:32">= <expr pos:start="7:25" pos:end="7:32"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:32"><name pos:start="7:26" pos:end="7:26">v</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:30">.</operator><name pos:start="7:31" pos:end="7:32">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">MpegEncContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:29">= <expr pos:start="9:25" pos:end="9:29"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:26">v</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">dc_pred_dir</name> <init pos:start="11:21" pos:end="11:23">= <expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="11:26" pos:end="11:66">/* Direction of the DC prediction used */</comment>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">int16_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:19">dc_val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">int16_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:19">ac_val</name></decl>, <decl pos:start="17:22" pos:end="17:29"><type ref="prev" pos:start="17:5" pos:end="17:13"><modifier pos:start="17:22" pos:end="17:22">*</modifier></type><name pos:start="17:23" pos:end="17:29">ac_val2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:15"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:14">dcdiff</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:50"><decl pos:start="21:5" pos:end="21:49"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:14">mb_pos</name> <init pos:start="21:16" pos:end="21:49">= <expr pos:start="21:18" pos:end="21:49"><name pos:start="21:18" pos:end="21:24"><name pos:start="21:18" pos:end="21:18">s</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:24">mb_x</name></name> <operator pos:start="21:26" pos:end="21:26">+</operator> <name pos:start="21:28" pos:end="21:34"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:34">mb_y</name></name> <operator pos:start="21:36" pos:end="21:36">*</operator> <name pos:start="21:38" pos:end="21:49"><name pos:start="21:38" pos:end="21:38">s</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:49">mb_stride</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:51"><decl pos:start="23:5" pos:end="23:28"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:15">a_avail</name> <init pos:start="23:17" pos:end="23:28">= <expr pos:start="23:19" pos:end="23:28"><name pos:start="23:19" pos:end="23:28"><name pos:start="23:19" pos:end="23:19">v</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:28">a_avail</name></name></expr></init></decl>, <decl pos:start="23:31" pos:end="23:50"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:31" pos:end="23:37">c_avail</name> <init pos:start="23:39" pos:end="23:50">= <expr pos:start="23:41" pos:end="23:50"><name pos:start="23:41" pos:end="23:50"><name pos:start="23:41" pos:end="23:41">v</name><operator pos:start="23:42" pos:end="23:43">-&gt;</operator><name pos:start="23:44" pos:end="23:50">c_avail</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:30"><decl pos:start="25:5" pos:end="25:29"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:16">use_pred</name> <init pos:start="25:18" pos:end="25:29">= <expr pos:start="25:20" pos:end="25:29"><name pos:start="25:20" pos:end="25:29"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:29">ac_pred</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:14"><decl pos:start="27:5" pos:end="27:13"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:13">scale</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:19"><decl pos:start="29:5" pos:end="29:10"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:10">q1</name></decl>, <decl pos:start="29:13" pos:end="29:18"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:13" pos:end="29:14">q2</name> <init pos:start="29:16" pos:end="29:18">= <expr pos:start="29:18" pos:end="29:18"><literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><call pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:10">dsp</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:22">clear_block</name></name><argument_list pos:start="33:23" pos:end="33:29">(<argument pos:start="33:24" pos:end="33:28"><expr pos:start="33:24" pos:end="33:28"><name pos:start="33:24" pos:end="33:28">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:50">/* XXX: Guard against dumb values of mquant */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:62"><expr pos:start="39:5" pos:end="39:61"><name pos:start="39:5" pos:end="39:10">mquant</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <ternary pos:start="39:14" pos:end="39:61"><condition pos:start="39:14" pos:end="39:27"><expr pos:start="39:14" pos:end="39:25"><operator pos:start="39:14" pos:end="39:14">(</operator><name pos:start="39:15" pos:end="39:20">mquant</name> <operator pos:start="39:22" pos:end="39:22">&lt;</operator> <literal type="number" pos:start="39:24" pos:end="39:24">1</literal><operator pos:start="39:25" pos:end="39:25">)</operator></expr> ?</condition><then pos:start="39:29" pos:end="39:29"> <expr pos:start="39:29" pos:end="39:29"><literal type="number" pos:start="39:29" pos:end="39:29">0</literal></expr> </then><else pos:start="39:31" pos:end="39:61">: <expr pos:start="39:33" pos:end="39:61"><operator pos:start="39:33" pos:end="39:33">(</operator><ternary pos:start="39:34" pos:end="39:60"><condition pos:start="39:34" pos:end="39:48"><expr pos:start="39:34" pos:end="39:46"><operator pos:start="39:34" pos:end="39:34">(</operator><name pos:start="39:35" pos:end="39:40">mquant</name> <operator pos:start="39:42" pos:end="39:42">&gt;</operator> <literal type="number" pos:start="39:44" pos:end="39:45">31</literal><operator pos:start="39:46" pos:end="39:46">)</operator></expr> ?</condition><then pos:start="39:50" pos:end="39:51"> <expr pos:start="39:50" pos:end="39:51"><literal type="number" pos:start="39:50" pos:end="39:51">31</literal></expr> </then><else pos:start="39:53" pos:end="39:60">: <expr pos:start="39:55" pos:end="39:60"><name pos:start="39:55" pos:end="39:60">mquant</name></expr></else></ternary><operator pos:start="39:61" pos:end="39:61">)</operator></expr></else></ternary></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:45">/* Set DC scale - y and c use the same */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:48"><expr pos:start="45:5" pos:end="45:47"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:17">y_dc_scale</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:47"><name pos:start="45:21" pos:end="45:21">s</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:39">y_dc_scale_table</name><index pos:start="45:40" pos:end="45:47">[<expr pos:start="45:41" pos:end="45:46"><name pos:start="45:41" pos:end="45:46">mquant</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:48"><expr pos:start="47:5" pos:end="47:47"><name pos:start="47:5" pos:end="47:17"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:17">c_dc_scale</name></name> <operator pos:start="47:19" pos:end="47:19">=</operator> <name pos:start="47:21" pos:end="47:47"><name pos:start="47:21" pos:end="47:21">s</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:39">c_dc_scale_table</name><index pos:start="47:40" pos:end="47:47">[<expr pos:start="47:41" pos:end="47:46"><name pos:start="47:41" pos:end="47:46">mquant</name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:29">/* Get DC differential */</comment>

    <if_stmt pos:start="53:5" pos:end="61:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:14">(<expr pos:start="53:9" pos:end="53:13"><name pos:start="53:9" pos:end="53:9">n</name> <operator pos:start="53:11" pos:end="53:11">&lt;</operator> <literal type="number" pos:start="53:13" pos:end="53:13">4</literal></expr>)</condition> <block pos:start="53:16" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:97">

        <expr_stmt pos:start="55:9" pos:end="55:97"><expr pos:start="55:9" pos:end="55:96"><name pos:start="55:9" pos:end="55:14">dcdiff</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <call pos:start="55:18" pos:end="55:96"><name pos:start="55:18" pos:end="55:25">get_vlc2</name><argument_list pos:start="55:26" pos:end="55:96">(<argument pos:start="55:27" pos:end="55:32"><expr pos:start="55:27" pos:end="55:32"><operator pos:start="55:27" pos:end="55:27">&amp;</operator><name pos:start="55:28" pos:end="55:32"><name pos:start="55:28" pos:end="55:28">s</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:32">gb</name></name></expr></argument>, <argument pos:start="55:35" pos:end="55:79"><expr pos:start="55:35" pos:end="55:79"><name pos:start="55:35" pos:end="55:73"><name pos:start="55:35" pos:end="55:54">ff_msmp4_dc_luma_vlc</name><index pos:start="55:55" pos:end="55:73">[<expr pos:start="55:56" pos:end="55:72"><name pos:start="55:56" pos:end="55:72"><name pos:start="55:56" pos:end="55:56">s</name><operator pos:start="55:57" pos:end="55:58">-&gt;</operator><name pos:start="55:59" pos:end="55:72">dc_table_index</name></name></expr>]</index></name><operator pos:start="55:74" pos:end="55:74">.</operator><name pos:start="55:75" pos:end="55:79">table</name></expr></argument>, <argument pos:start="55:82" pos:end="55:92"><expr pos:start="55:82" pos:end="55:92"><name pos:start="55:82" pos:end="55:92">DC_VLC_BITS</name></expr></argument>, <argument pos:start="55:95" pos:end="55:95"><expr pos:start="55:95" pos:end="55:95"><literal type="number" pos:start="55:95" pos:end="55:95">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="61:5">else <block pos:start="57:12" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:99">

        <expr_stmt pos:start="59:9" pos:end="59:99"><expr pos:start="59:9" pos:end="59:98"><name pos:start="59:9" pos:end="59:14">dcdiff</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <call pos:start="59:18" pos:end="59:98"><name pos:start="59:18" pos:end="59:25">get_vlc2</name><argument_list pos:start="59:26" pos:end="59:98">(<argument pos:start="59:27" pos:end="59:32"><expr pos:start="59:27" pos:end="59:32"><operator pos:start="59:27" pos:end="59:27">&amp;</operator><name pos:start="59:28" pos:end="59:32"><name pos:start="59:28" pos:end="59:28">s</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:32">gb</name></name></expr></argument>, <argument pos:start="59:35" pos:end="59:81"><expr pos:start="59:35" pos:end="59:81"><name pos:start="59:35" pos:end="59:75"><name pos:start="59:35" pos:end="59:56">ff_msmp4_dc_chroma_vlc</name><index pos:start="59:57" pos:end="59:75">[<expr pos:start="59:58" pos:end="59:74"><name pos:start="59:58" pos:end="59:74"><name pos:start="59:58" pos:end="59:58">s</name><operator pos:start="59:59" pos:end="59:60">-&gt;</operator><name pos:start="59:61" pos:end="59:74">dc_table_index</name></name></expr>]</index></name><operator pos:start="59:76" pos:end="59:76">.</operator><name pos:start="59:77" pos:end="59:81">table</name></expr></argument>, <argument pos:start="59:84" pos:end="59:94"><expr pos:start="59:84" pos:end="59:94"><name pos:start="59:84" pos:end="59:94">DC_VLC_BITS</name></expr></argument>, <argument pos:start="59:97" pos:end="59:97"><expr pos:start="59:97" pos:end="59:97"><literal type="number" pos:start="59:97" pos:end="59:97">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:19">(<expr pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:14">dcdiff</name> <operator pos:start="63:16" pos:end="63:16">&lt;</operator> <literal type="number" pos:start="63:18" pos:end="63:18">0</literal></expr>)</condition> <block pos:start="63:21" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:18">

        <expr_stmt pos:start="65:9" pos:end="65:59"><expr pos:start="65:9" pos:end="65:58"><call pos:start="65:9" pos:end="65:58"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="65:58">(<argument pos:start="65:16" pos:end="65:23"><expr pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:16">s</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:23">avctx</name></name></expr></argument>, <argument pos:start="65:26" pos:end="65:37"><expr pos:start="65:26" pos:end="65:37"><name pos:start="65:26" pos:end="65:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:40" pos:end="65:57"><expr pos:start="65:40" pos:end="65:57"><literal type="string" pos:start="65:40" pos:end="65:57">"Illegal DC VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:18">return <expr pos:start="67:16" pos:end="67:17"><operator pos:start="67:16" pos:end="67:16">-</operator><literal type="number" pos:start="67:17" pos:end="67:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="71:5" pos:end="99:5"><if pos:start="71:5" pos:end="99:5">if <condition pos:start="71:8" pos:end="71:15">(<expr pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:14">dcdiff</name></expr>)</condition> <block pos:start="71:17" pos:end="99:5">{<block_content pos:start="73:9" pos:end="97:29">

        <if_stmt pos:start="73:9" pos:end="93:9"><if pos:start="73:9" pos:end="83:9">if <condition pos:start="73:12" pos:end="73:48">(<expr pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:18">dcdiff</name> <operator pos:start="73:20" pos:end="73:21">==</operator> <literal type="number" pos:start="73:23" pos:end="73:25">119</literal></expr> <comment type="block" pos:start="73:27" pos:end="73:47">/* ESC index value */</comment>)</condition> <block pos:start="73:50" pos:end="83:9">{<block_content pos:start="77:13" pos:end="81:59">

            <comment type="block" pos:start="75:13" pos:end="75:32">/* TODO: Optimize */</comment>

            <if_stmt pos:start="77:13" pos:end="81:59"><if pos:start="77:13" pos:end="77:60">if <condition pos:start="77:16" pos:end="77:28">(<expr pos:start="77:17" pos:end="77:27"><name pos:start="77:17" pos:end="77:22">mquant</name> <operator pos:start="77:24" pos:end="77:25">==</operator> <literal type="number" pos:start="77:27" pos:end="77:27">1</literal></expr>)</condition><block type="pseudo" pos:start="77:35" pos:end="77:60"><block_content pos:start="77:35" pos:end="77:60">      <expr_stmt pos:start="77:35" pos:end="77:60"><expr pos:start="77:35" pos:end="77:59"><name pos:start="77:35" pos:end="77:40">dcdiff</name> <operator pos:start="77:42" pos:end="77:42">=</operator> <call pos:start="77:44" pos:end="77:59"><name pos:start="77:44" pos:end="77:51">get_bits</name><argument_list pos:start="77:52" pos:end="77:59">(<argument pos:start="77:53" pos:end="77:54"><expr pos:start="77:53" pos:end="77:54"><name pos:start="77:53" pos:end="77:54">gb</name></expr></argument>, <argument pos:start="77:57" pos:end="77:58"><expr pos:start="77:57" pos:end="77:58"><literal type="number" pos:start="77:57" pos:end="77:58">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="79:13" pos:end="79:59">else if <condition pos:start="79:21" pos:end="79:33">(<expr pos:start="79:22" pos:end="79:32"><name pos:start="79:22" pos:end="79:27">mquant</name> <operator pos:start="79:29" pos:end="79:30">==</operator> <literal type="number" pos:start="79:32" pos:end="79:32">2</literal></expr>)</condition><block type="pseudo" pos:start="79:35" pos:end="79:59"><block_content pos:start="79:35" pos:end="79:59"> <expr_stmt pos:start="79:35" pos:end="79:59"><expr pos:start="79:35" pos:end="79:58"><name pos:start="79:35" pos:end="79:40">dcdiff</name> <operator pos:start="79:42" pos:end="79:42">=</operator> <call pos:start="79:44" pos:end="79:58"><name pos:start="79:44" pos:end="79:51">get_bits</name><argument_list pos:start="79:52" pos:end="79:58">(<argument pos:start="79:53" pos:end="79:54"><expr pos:start="79:53" pos:end="79:54"><name pos:start="79:53" pos:end="79:54">gb</name></expr></argument>, <argument pos:start="79:57" pos:end="79:57"><expr pos:start="79:57" pos:end="79:57"><literal type="number" pos:start="79:57" pos:end="79:57">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="81:13" pos:end="81:59">else<block type="pseudo" pos:start="81:35" pos:end="81:59"><block_content pos:start="81:35" pos:end="81:59">                  <expr_stmt pos:start="81:35" pos:end="81:59"><expr pos:start="81:35" pos:end="81:58"><name pos:start="81:35" pos:end="81:40">dcdiff</name> <operator pos:start="81:42" pos:end="81:42">=</operator> <call pos:start="81:44" pos:end="81:58"><name pos:start="81:44" pos:end="81:51">get_bits</name><argument_list pos:start="81:52" pos:end="81:58">(<argument pos:start="81:53" pos:end="81:54"><expr pos:start="81:53" pos:end="81:54"><name pos:start="81:53" pos:end="81:54">gb</name></expr></argument>, <argument pos:start="81:57" pos:end="81:57"><expr pos:start="81:57" pos:end="81:57"><literal type="number" pos:start="81:57" pos:end="81:57">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="83:11" pos:end="93:9">else <block pos:start="83:16" pos:end="93:9">{<block_content pos:start="85:13" pos:end="91:61">

            <if_stmt pos:start="85:13" pos:end="91:61"><if pos:start="85:13" pos:end="87:61">if <condition pos:start="85:16" pos:end="85:28">(<expr pos:start="85:17" pos:end="85:27"><name pos:start="85:17" pos:end="85:22">mquant</name> <operator pos:start="85:24" pos:end="85:25">==</operator> <literal type="number" pos:start="85:27" pos:end="85:27">1</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:61"><block_content pos:start="87:17" pos:end="87:61">

                <expr_stmt pos:start="87:17" pos:end="87:61"><expr pos:start="87:17" pos:end="87:60"><name pos:start="87:17" pos:end="87:22">dcdiff</name> <operator pos:start="87:24" pos:end="87:24">=</operator> <operator pos:start="87:26" pos:end="87:26">(</operator><name pos:start="87:27" pos:end="87:32">dcdiff</name> <operator pos:start="87:34" pos:end="87:35">&lt;&lt;</operator> <literal type="number" pos:start="87:37" pos:end="87:37">2</literal><operator pos:start="87:38" pos:end="87:38">)</operator> <operator pos:start="87:40" pos:end="87:40">+</operator> <call pos:start="87:42" pos:end="87:56"><name pos:start="87:42" pos:end="87:49">get_bits</name><argument_list pos:start="87:50" pos:end="87:56">(<argument pos:start="87:51" pos:end="87:52"><expr pos:start="87:51" pos:end="87:52"><name pos:start="87:51" pos:end="87:52">gb</name></expr></argument>, <argument pos:start="87:55" pos:end="87:55"><expr pos:start="87:55" pos:end="87:55"><literal type="number" pos:start="87:55" pos:end="87:55">2</literal></expr></argument>)</argument_list></call> <operator pos:start="87:58" pos:end="87:58">-</operator> <literal type="number" pos:start="87:60" pos:end="87:60">3</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="89:13" pos:end="91:61">else if <condition pos:start="89:21" pos:end="89:33">(<expr pos:start="89:22" pos:end="89:32"><name pos:start="89:22" pos:end="89:27">mquant</name> <operator pos:start="89:29" pos:end="89:30">==</operator> <literal type="number" pos:start="89:32" pos:end="89:32">2</literal></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:61"><block_content pos:start="91:17" pos:end="91:61">

                <expr_stmt pos:start="91:17" pos:end="91:61"><expr pos:start="91:17" pos:end="91:60"><name pos:start="91:17" pos:end="91:22">dcdiff</name> <operator pos:start="91:24" pos:end="91:24">=</operator> <operator pos:start="91:26" pos:end="91:26">(</operator><name pos:start="91:27" pos:end="91:32">dcdiff</name> <operator pos:start="91:34" pos:end="91:35">&lt;&lt;</operator> <literal type="number" pos:start="91:37" pos:end="91:37">1</literal><operator pos:start="91:38" pos:end="91:38">)</operator> <operator pos:start="91:40" pos:end="91:40">+</operator> <call pos:start="91:42" pos:end="91:54"><name pos:start="91:42" pos:end="91:50">get_bits1</name><argument_list pos:start="91:51" pos:end="91:54">(<argument pos:start="91:52" pos:end="91:53"><expr pos:start="91:52" pos:end="91:53"><name pos:start="91:52" pos:end="91:53">gb</name></expr></argument>)</argument_list></call>   <operator pos:start="91:58" pos:end="91:58">-</operator> <literal type="number" pos:start="91:60" pos:end="91:60">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="95:9" pos:end="97:29"><if pos:start="95:9" pos:end="97:29">if <condition pos:start="95:12" pos:end="95:26">(<expr pos:start="95:13" pos:end="95:25"><call pos:start="95:13" pos:end="95:25"><name pos:start="95:13" pos:end="95:21">get_bits1</name><argument_list pos:start="95:22" pos:end="95:25">(<argument pos:start="95:23" pos:end="95:24"><expr pos:start="95:23" pos:end="95:24"><name pos:start="95:23" pos:end="95:24">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:29"><block_content pos:start="97:13" pos:end="97:29">

            <expr_stmt pos:start="97:13" pos:end="97:29"><expr pos:start="97:13" pos:end="97:28"><name pos:start="97:13" pos:end="97:18">dcdiff</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <operator pos:start="97:22" pos:end="97:22">-</operator><name pos:start="97:23" pos:end="97:28">dcdiff</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="103:5" pos:end="103:20">/* Prediction */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:97"><expr pos:start="105:5" pos:end="105:96"><name pos:start="105:5" pos:end="105:10">dcdiff</name> <operator pos:start="105:12" pos:end="105:13">+=</operator> <call pos:start="105:15" pos:end="105:96"><name pos:start="105:15" pos:end="105:25">vc1_pred_dc</name><argument_list pos:start="105:26" pos:end="105:96">(<argument pos:start="105:27" pos:end="105:31"><expr pos:start="105:27" pos:end="105:31"><operator pos:start="105:27" pos:end="105:27">&amp;</operator><name pos:start="105:28" pos:end="105:31"><name pos:start="105:28" pos:end="105:28">v</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:31">s</name></name></expr></argument>, <argument pos:start="105:34" pos:end="105:43"><expr pos:start="105:34" pos:end="105:43"><name pos:start="105:34" pos:end="105:43"><name pos:start="105:34" pos:end="105:34">v</name><operator pos:start="105:35" pos:end="105:36">-&gt;</operator><name pos:start="105:37" pos:end="105:43">overlap</name></name></expr></argument>, <argument pos:start="105:46" pos:end="105:51"><expr pos:start="105:46" pos:end="105:51"><name pos:start="105:46" pos:end="105:51">mquant</name></expr></argument>, <argument pos:start="105:54" pos:end="105:54"><expr pos:start="105:54" pos:end="105:54"><name pos:start="105:54" pos:end="105:54">n</name></expr></argument>, <argument pos:start="105:57" pos:end="105:63"><expr pos:start="105:57" pos:end="105:63"><name pos:start="105:57" pos:end="105:63">a_avail</name></expr></argument>, <argument pos:start="105:66" pos:end="105:72"><expr pos:start="105:66" pos:end="105:72"><name pos:start="105:66" pos:end="105:72">c_avail</name></expr></argument>, <argument pos:start="105:75" pos:end="105:81"><expr pos:start="105:75" pos:end="105:81"><operator pos:start="105:75" pos:end="105:75">&amp;</operator><name pos:start="105:76" pos:end="105:81">dc_val</name></expr></argument>, <argument pos:start="105:84" pos:end="105:95"><expr pos:start="105:84" pos:end="105:95"><operator pos:start="105:84" pos:end="105:84">&amp;</operator><name pos:start="105:85" pos:end="105:95">dc_pred_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:21"><expr pos:start="107:5" pos:end="107:20"><operator pos:start="107:5" pos:end="107:5">*</operator><name pos:start="107:6" pos:end="107:11">dc_val</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <name pos:start="107:15" pos:end="107:20">dcdiff</name></expr>;</expr_stmt>



    <comment type="block" pos:start="111:5" pos:end="111:59">/* Store the quantized DC coeff, used for prediction */</comment>



    <if_stmt pos:start="115:5" pos:end="123:5"><if pos:start="115:5" pos:end="119:5">if <condition pos:start="115:8" pos:end="115:14">(<expr pos:start="115:9" pos:end="115:13"><name pos:start="115:9" pos:end="115:9">n</name> <operator pos:start="115:11" pos:end="115:11">&lt;</operator> <literal type="number" pos:start="115:13" pos:end="115:13">4</literal></expr>)</condition> <block pos:start="115:16" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:42">

        <expr_stmt pos:start="117:9" pos:end="117:42"><expr pos:start="117:9" pos:end="117:41"><name pos:start="117:9" pos:end="117:16"><name pos:start="117:9" pos:end="117:13">block</name><index pos:start="117:14" pos:end="117:16">[<expr pos:start="117:15" pos:end="117:15"><literal type="number" pos:start="117:15" pos:end="117:15">0</literal></expr>]</index></name> <operator pos:start="117:18" pos:end="117:18">=</operator> <name pos:start="117:20" pos:end="117:25">dcdiff</name> <operator pos:start="117:27" pos:end="117:27">*</operator> <name pos:start="117:29" pos:end="117:41"><name pos:start="117:29" pos:end="117:29">s</name><operator pos:start="117:30" pos:end="117:31">-&gt;</operator><name pos:start="117:32" pos:end="117:41">y_dc_scale</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="119:7" pos:end="123:5">else <block pos:start="119:12" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:42">

        <expr_stmt pos:start="121:9" pos:end="121:42"><expr pos:start="121:9" pos:end="121:41"><name pos:start="121:9" pos:end="121:16"><name pos:start="121:9" pos:end="121:13">block</name><index pos:start="121:14" pos:end="121:16">[<expr pos:start="121:15" pos:end="121:15"><literal type="number" pos:start="121:15" pos:end="121:15">0</literal></expr>]</index></name> <operator pos:start="121:18" pos:end="121:18">=</operator> <name pos:start="121:20" pos:end="121:25">dcdiff</name> <operator pos:start="121:27" pos:end="121:27">*</operator> <name pos:start="121:29" pos:end="121:41"><name pos:start="121:29" pos:end="121:29">s</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:41">c_dc_scale</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="127:5" pos:end="127:17">//AC Decoding</comment>

    <expr_stmt pos:start="129:5" pos:end="129:10"><expr pos:start="129:5" pos:end="129:9"><name pos:start="129:5" pos:end="129:5">i</name> <operator pos:start="129:7" pos:end="129:7">=</operator> <literal type="number" pos:start="129:9" pos:end="129:9">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="133:5" pos:end="133:69">/* check if AC is needed at all and adjust direction if needed */</comment>

    <if_stmt pos:start="135:5" pos:end="135:34"><if pos:start="135:5" pos:end="135:34">if <condition pos:start="135:8" pos:end="135:17">(<expr pos:start="135:9" pos:end="135:16"><operator pos:start="135:9" pos:end="135:9">!</operator><name pos:start="135:10" pos:end="135:16">a_avail</name></expr>)</condition><block type="pseudo" pos:start="135:19" pos:end="135:34"><block_content pos:start="135:19" pos:end="135:34"> <expr_stmt pos:start="135:19" pos:end="135:34"><expr pos:start="135:19" pos:end="135:33"><name pos:start="135:19" pos:end="135:29">dc_pred_dir</name> <operator pos:start="135:31" pos:end="135:31">=</operator> <literal type="number" pos:start="135:33" pos:end="135:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="137:5" pos:end="137:34"><if pos:start="137:5" pos:end="137:34">if <condition pos:start="137:8" pos:end="137:17">(<expr pos:start="137:9" pos:end="137:16"><operator pos:start="137:9" pos:end="137:9">!</operator><name pos:start="137:10" pos:end="137:16">c_avail</name></expr>)</condition><block type="pseudo" pos:start="137:19" pos:end="137:34"><block_content pos:start="137:19" pos:end="137:34"> <expr_stmt pos:start="137:19" pos:end="137:34"><expr pos:start="137:19" pos:end="137:33"><name pos:start="137:19" pos:end="137:29">dc_pred_dir</name> <operator pos:start="137:31" pos:end="137:31">=</operator> <literal type="number" pos:start="137:33" pos:end="137:33">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="139:5" pos:end="139:43"><if pos:start="139:5" pos:end="139:43">if <condition pos:start="139:8" pos:end="139:29">(<expr pos:start="139:9" pos:end="139:28"><operator pos:start="139:9" pos:end="139:9">!</operator><name pos:start="139:10" pos:end="139:16">a_avail</name> <operator pos:start="139:18" pos:end="139:19">&amp;&amp;</operator> <operator pos:start="139:21" pos:end="139:21">!</operator><name pos:start="139:22" pos:end="139:28">c_avail</name></expr>)</condition><block type="pseudo" pos:start="139:31" pos:end="139:43"><block_content pos:start="139:31" pos:end="139:43"> <expr_stmt pos:start="139:31" pos:end="139:43"><expr pos:start="139:31" pos:end="139:42"><name pos:start="139:31" pos:end="139:38">use_pred</name> <operator pos:start="139:40" pos:end="139:40">=</operator> <literal type="number" pos:start="139:42" pos:end="139:42">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:54"><expr pos:start="141:5" pos:end="141:53"><name pos:start="141:5" pos:end="141:10">ac_val</name> <operator pos:start="141:12" pos:end="141:12">=</operator> <name pos:start="141:14" pos:end="141:28"><name pos:start="141:14" pos:end="141:14">s</name><operator pos:start="141:15" pos:end="141:16">-&gt;</operator><name pos:start="141:17" pos:end="141:22">ac_val</name><index pos:start="141:23" pos:end="141:25">[<expr pos:start="141:24" pos:end="141:24"><literal type="number" pos:start="141:24" pos:end="141:24">0</literal></expr>]</index><index pos:start="141:26" pos:end="141:28">[<expr pos:start="141:27" pos:end="141:27"><literal type="number" pos:start="141:27" pos:end="141:27">0</literal></expr>]</index></name> <operator pos:start="141:30" pos:end="141:30">+</operator> <name pos:start="141:32" pos:end="141:48"><name pos:start="141:32" pos:end="141:32">s</name><operator pos:start="141:33" pos:end="141:34">-&gt;</operator><name pos:start="141:35" pos:end="141:45">block_index</name><index pos:start="141:46" pos:end="141:48">[<expr pos:start="141:47" pos:end="141:47"><name pos:start="141:47" pos:end="141:47">n</name></expr>]</index></name> <operator pos:start="141:50" pos:end="141:50">*</operator> <literal type="number" pos:start="141:52" pos:end="141:53">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:21"><expr pos:start="143:5" pos:end="143:20"><name pos:start="143:5" pos:end="143:11">ac_val2</name> <operator pos:start="143:13" pos:end="143:13">=</operator> <name pos:start="143:15" pos:end="143:20">ac_val</name></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:35"><expr pos:start="147:5" pos:end="147:34"><name pos:start="147:5" pos:end="147:9">scale</name> <operator pos:start="147:11" pos:end="147:11">=</operator> <name pos:start="147:13" pos:end="147:18">mquant</name> <operator pos:start="147:20" pos:end="147:20">*</operator> <literal type="number" pos:start="147:22" pos:end="147:24">2</literal> <operator pos:start="147:24" pos:end="147:24">+</operator> <name pos:start="147:26" pos:end="147:34"><name pos:start="147:26" pos:end="147:26">v</name><operator pos:start="147:27" pos:end="147:28">-&gt;</operator><name pos:start="147:29" pos:end="147:34">halfpq</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="151:5" pos:end="157:40"><if pos:start="151:5" pos:end="153:21">if <condition pos:start="151:8" pos:end="151:20">(<expr pos:start="151:9" pos:end="151:19"><name pos:start="151:9" pos:end="151:19">dc_pred_dir</name></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:21"><block_content pos:start="153:9" pos:end="153:21"> <comment type="line" pos:start="151:22" pos:end="151:27">//left</comment>

        <expr_stmt pos:start="153:9" pos:end="153:21"><expr pos:start="153:9" pos:end="153:20"><name pos:start="153:9" pos:end="153:14">ac_val</name> <operator pos:start="153:16" pos:end="153:17">-=</operator> <literal type="number" pos:start="153:19" pos:end="153:20">16</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="155:5" pos:end="157:40">else<block type="pseudo" pos:start="157:9" pos:end="157:40"><block_content pos:start="157:9" pos:end="157:40"> <comment type="line" pos:start="155:10" pos:end="155:14">//top</comment>

        <expr_stmt pos:start="157:9" pos:end="157:40"><expr pos:start="157:9" pos:end="157:39"><name pos:start="157:9" pos:end="157:14">ac_val</name> <operator pos:start="157:16" pos:end="157:17">-=</operator> <literal type="number" pos:start="157:19" pos:end="157:20">16</literal> <operator pos:start="157:22" pos:end="157:22">*</operator> <name pos:start="157:24" pos:end="157:39"><name pos:start="157:24" pos:end="157:24">s</name><operator pos:start="157:25" pos:end="157:26">-&gt;</operator><name pos:start="157:27" pos:end="157:36">block_wrap</name><index pos:start="157:37" pos:end="157:39">[<expr pos:start="157:38" pos:end="157:38"><name pos:start="157:38" pos:end="157:38">n</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:51"><expr pos:start="161:5" pos:end="161:50"><name pos:start="161:5" pos:end="161:6">q1</name> <operator pos:start="161:8" pos:end="161:8">=</operator> <name pos:start="161:10" pos:end="161:50"><name pos:start="161:10" pos:end="161:10">s</name><operator pos:start="161:11" pos:end="161:12">-&gt;</operator><name pos:start="161:13" pos:end="161:27">current_picture</name><operator pos:start="161:28" pos:end="161:28">.</operator><name pos:start="161:29" pos:end="161:29">f</name><operator pos:start="161:30" pos:end="161:30">.</operator><name pos:start="161:31" pos:end="161:42">qscale_table</name><index pos:start="161:43" pos:end="161:50">[<expr pos:start="161:44" pos:end="161:49"><name pos:start="161:44" pos:end="161:49">mb_pos</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="163:5" pos:end="165:59"><if pos:start="163:5" pos:end="165:59">if <condition pos:start="163:8" pos:end="163:41">(<expr pos:start="163:9" pos:end="163:40"><name pos:start="163:9" pos:end="163:19">dc_pred_dir</name> <operator pos:start="163:21" pos:end="163:22">&amp;&amp;</operator> <name pos:start="163:24" pos:end="163:30">c_avail</name> <operator pos:start="163:32" pos:end="163:33">&amp;&amp;</operator> <name pos:start="163:35" pos:end="163:40">mb_pos</name></expr>)</condition><block type="pseudo" pos:start="165:9" pos:end="165:59"><block_content pos:start="165:9" pos:end="165:59">

        <expr_stmt pos:start="165:9" pos:end="165:59"><expr pos:start="165:9" pos:end="165:58"><name pos:start="165:9" pos:end="165:10">q2</name> <operator pos:start="165:12" pos:end="165:12">=</operator> <name pos:start="165:14" pos:end="165:58"><name pos:start="165:14" pos:end="165:14">s</name><operator pos:start="165:15" pos:end="165:16">-&gt;</operator><name pos:start="165:17" pos:end="165:31">current_picture</name><operator pos:start="165:32" pos:end="165:32">.</operator><name pos:start="165:33" pos:end="165:33">f</name><operator pos:start="165:34" pos:end="165:34">.</operator><name pos:start="165:35" pos:end="165:46">qscale_table</name><index pos:start="165:47" pos:end="165:58">[<expr pos:start="165:48" pos:end="165:57"><name pos:start="165:48" pos:end="165:53">mb_pos</name> <operator pos:start="165:55" pos:end="165:55">-</operator> <literal type="number" pos:start="165:57" pos:end="165:57">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="167:5" pos:end="169:70"><if pos:start="167:5" pos:end="169:70">if <condition pos:start="167:8" pos:end="167:58">(<expr pos:start="167:9" pos:end="167:57"><operator pos:start="167:9" pos:end="167:9">!</operator><name pos:start="167:10" pos:end="167:20">dc_pred_dir</name> <operator pos:start="167:22" pos:end="167:23">&amp;&amp;</operator> <name pos:start="167:25" pos:end="167:31">a_avail</name> <operator pos:start="167:33" pos:end="167:34">&amp;&amp;</operator> <name pos:start="167:36" pos:end="167:41">mb_pos</name> <operator pos:start="167:43" pos:end="167:44">&gt;=</operator> <name pos:start="167:46" pos:end="167:57"><name pos:start="167:46" pos:end="167:46">s</name><operator pos:start="167:47" pos:end="167:48">-&gt;</operator><name pos:start="167:49" pos:end="167:57">mb_stride</name></name></expr>)</condition><block type="pseudo" pos:start="169:9" pos:end="169:70"><block_content pos:start="169:9" pos:end="169:70">

        <expr_stmt pos:start="169:9" pos:end="169:70"><expr pos:start="169:9" pos:end="169:69"><name pos:start="169:9" pos:end="169:10">q2</name> <operator pos:start="169:12" pos:end="169:12">=</operator> <name pos:start="169:14" pos:end="169:69"><name pos:start="169:14" pos:end="169:14">s</name><operator pos:start="169:15" pos:end="169:16">-&gt;</operator><name pos:start="169:17" pos:end="169:31">current_picture</name><operator pos:start="169:32" pos:end="169:32">.</operator><name pos:start="169:33" pos:end="169:33">f</name><operator pos:start="169:34" pos:end="169:34">.</operator><name pos:start="169:35" pos:end="169:46">qscale_table</name><index pos:start="169:47" pos:end="169:69">[<expr pos:start="169:48" pos:end="169:68"><name pos:start="169:48" pos:end="169:53">mb_pos</name> <operator pos:start="169:55" pos:end="169:55">-</operator> <name pos:start="169:57" pos:end="169:68"><name pos:start="169:57" pos:end="169:57">s</name><operator pos:start="169:58" pos:end="169:59">-&gt;</operator><name pos:start="169:60" pos:end="169:68">mb_stride</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="171:5" pos:end="173:16"><if pos:start="171:5" pos:end="173:16">if <condition pos:start="171:8" pos:end="171:31">( <expr pos:start="171:10" pos:end="171:30"><name pos:start="171:10" pos:end="171:20">dc_pred_dir</name> <operator pos:start="171:22" pos:end="171:23">&amp;&amp;</operator> <name pos:start="171:25" pos:end="171:25">n</name> <operator pos:start="171:27" pos:end="171:28">==</operator> <literal type="number" pos:start="171:30" pos:end="171:30">1</literal></expr>)</condition><block type="pseudo" pos:start="173:9" pos:end="173:16"><block_content pos:start="173:9" pos:end="173:16">

        <expr_stmt pos:start="173:9" pos:end="173:16"><expr pos:start="173:9" pos:end="173:15"><name pos:start="173:9" pos:end="173:10">q2</name> <operator pos:start="173:12" pos:end="173:12">=</operator> <name pos:start="173:14" pos:end="173:15">q1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="175:5" pos:end="177:16"><if pos:start="175:5" pos:end="177:16">if <condition pos:start="175:8" pos:end="175:31">(<expr pos:start="175:9" pos:end="175:30"><operator pos:start="175:9" pos:end="175:9">!</operator><name pos:start="175:10" pos:end="175:20">dc_pred_dir</name> <operator pos:start="175:22" pos:end="175:23">&amp;&amp;</operator> <name pos:start="175:25" pos:end="175:25">n</name> <operator pos:start="175:27" pos:end="175:28">==</operator> <literal type="number" pos:start="175:30" pos:end="175:30">2</literal></expr>)</condition><block type="pseudo" pos:start="177:9" pos:end="177:16"><block_content pos:start="177:9" pos:end="177:16">

        <expr_stmt pos:start="177:9" pos:end="177:16"><expr pos:start="177:9" pos:end="177:15"><name pos:start="177:9" pos:end="177:10">q2</name> <operator pos:start="177:12" pos:end="177:12">=</operator> <name pos:start="177:14" pos:end="177:15">q1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="179:5" pos:end="179:24"><if pos:start="179:5" pos:end="179:24">if <condition pos:start="179:8" pos:end="179:15">(<expr pos:start="179:9" pos:end="179:14"><name pos:start="179:9" pos:end="179:9">n</name> <operator pos:start="179:11" pos:end="179:12">==</operator> <literal type="number" pos:start="179:14" pos:end="179:14">3</literal></expr>)</condition><block type="pseudo" pos:start="179:17" pos:end="179:24"><block_content pos:start="179:17" pos:end="179:24"> <expr_stmt pos:start="179:17" pos:end="179:24"><expr pos:start="179:17" pos:end="179:23"><name pos:start="179:17" pos:end="179:18">q2</name> <operator pos:start="179:20" pos:end="179:20">=</operator> <name pos:start="179:22" pos:end="179:23">q1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="183:5" pos:end="405:5"><if pos:start="183:5" pos:end="311:5">if <condition pos:start="183:8" pos:end="183:14">(<expr pos:start="183:9" pos:end="183:13"><name pos:start="183:9" pos:end="183:13">coded</name></expr>)</condition> <block pos:start="183:16" pos:end="311:5">{<block_content pos:start="185:9" pos:end="309:29">

        <decl_stmt pos:start="185:9" pos:end="185:34"><decl pos:start="185:9" pos:end="185:20"><type pos:start="185:9" pos:end="185:11"><name pos:start="185:9" pos:end="185:11">int</name></type> <name pos:start="185:13" pos:end="185:16">last</name> <init pos:start="185:18" pos:end="185:20">= <expr pos:start="185:20" pos:end="185:20"><literal type="number" pos:start="185:20" pos:end="185:20">0</literal></expr></init></decl>, <decl pos:start="185:23" pos:end="185:26"><type ref="prev" pos:start="185:9" pos:end="185:11"/><name pos:start="185:23" pos:end="185:26">skip</name></decl>, <decl pos:start="185:29" pos:end="185:33"><type ref="prev" pos:start="185:9" pos:end="185:11"/><name pos:start="185:29" pos:end="185:33">value</name></decl>;</decl_stmt>

        <decl_stmt pos:start="187:9" pos:end="187:14"><decl pos:start="187:9" pos:end="187:13"><type pos:start="187:9" pos:end="187:11"><name pos:start="187:9" pos:end="187:11">int</name></type> <name pos:start="187:13" pos:end="187:13">k</name></decl>;</decl_stmt>



        <while pos:start="191:9" pos:end="225:9">while <condition pos:start="191:15" pos:end="191:21">(<expr pos:start="191:16" pos:end="191:20"><operator pos:start="191:16" pos:end="191:16">!</operator><name pos:start="191:17" pos:end="191:20">last</name></expr>)</condition> <block pos:start="191:23" pos:end="225:9">{<block_content pos:start="193:13" pos:end="223:13">

            <expr_stmt pos:start="193:13" pos:end="193:68"><expr pos:start="193:13" pos:end="193:67"><call pos:start="193:13" pos:end="193:67"><name pos:start="193:13" pos:end="193:31">vc1_decode_ac_coeff</name><argument_list pos:start="193:32" pos:end="193:67">(<argument pos:start="193:33" pos:end="193:33"><expr pos:start="193:33" pos:end="193:33"><name pos:start="193:33" pos:end="193:33">v</name></expr></argument>, <argument pos:start="193:36" pos:end="193:40"><expr pos:start="193:36" pos:end="193:40"><operator pos:start="193:36" pos:end="193:36">&amp;</operator><name pos:start="193:37" pos:end="193:40">last</name></expr></argument>, <argument pos:start="193:43" pos:end="193:47"><expr pos:start="193:43" pos:end="193:47"><operator pos:start="193:43" pos:end="193:43">&amp;</operator><name pos:start="193:44" pos:end="193:47">skip</name></expr></argument>, <argument pos:start="193:50" pos:end="193:55"><expr pos:start="193:50" pos:end="193:55"><operator pos:start="193:50" pos:end="193:50">&amp;</operator><name pos:start="193:51" pos:end="193:55">value</name></expr></argument>, <argument pos:start="193:58" pos:end="193:66"><expr pos:start="193:58" pos:end="193:66"><name pos:start="193:58" pos:end="193:66">codingset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:22"><expr pos:start="195:13" pos:end="195:21"><name pos:start="195:13" pos:end="195:13">i</name> <operator pos:start="195:15" pos:end="195:16">+=</operator> <name pos:start="195:18" pos:end="195:21">skip</name></expr>;</expr_stmt>

            <if_stmt pos:start="197:13" pos:end="199:22"><if pos:start="197:13" pos:end="199:22">if <condition pos:start="197:16" pos:end="197:23">(<expr pos:start="197:17" pos:end="197:22"><name pos:start="197:17" pos:end="197:17">i</name> <operator pos:start="197:19" pos:end="197:19">&gt;</operator> <literal type="number" pos:start="197:21" pos:end="197:22">63</literal></expr>)</condition><block type="pseudo" pos:start="199:17" pos:end="199:22"><block_content pos:start="199:17" pos:end="199:22">

                <break pos:start="199:17" pos:end="199:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="201:13" pos:end="223:13"><if pos:start="201:13" pos:end="203:49">if <condition pos:start="201:16" pos:end="201:38">(<expr pos:start="201:17" pos:end="201:37"><name pos:start="201:17" pos:end="201:22"><name pos:start="201:17" pos:end="201:17">v</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:22">fcm</name></name> <operator pos:start="201:24" pos:end="201:25">==</operator> <name pos:start="201:27" pos:end="201:37">PROGRESSIVE</name></expr>)</condition><block type="pseudo" pos:start="203:17" pos:end="203:49"><block_content pos:start="203:17" pos:end="203:49">

                <expr_stmt pos:start="203:17" pos:end="203:49"><expr pos:start="203:17" pos:end="203:48"><name pos:start="203:17" pos:end="203:40"><name pos:start="203:17" pos:end="203:21">block</name><index pos:start="203:22" pos:end="203:40">[<expr pos:start="203:23" pos:end="203:39"><name pos:start="203:23" pos:end="203:39"><name pos:start="203:23" pos:end="203:23">v</name><operator pos:start="203:24" pos:end="203:25">-&gt;</operator><name pos:start="203:26" pos:end="203:31">zz_8x8</name><index pos:start="203:32" pos:end="203:34">[<expr pos:start="203:33" pos:end="203:33"><literal type="number" pos:start="203:33" pos:end="203:33">0</literal></expr>]</index><index pos:start="203:35" pos:end="203:39">[<expr pos:start="203:36" pos:end="203:38"><name pos:start="203:36" pos:end="203:36">i</name><operator pos:start="203:37" pos:end="203:38">++</operator></expr>]</index></name></expr>]</index></name> <operator pos:start="203:42" pos:end="203:42">=</operator> <name pos:start="203:44" pos:end="203:48">value</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="205:13" pos:end="223:13">else <block pos:start="205:18" pos:end="223:13">{<block_content pos:start="207:17" pos:end="221:17">

                <if_stmt pos:start="207:17" pos:end="221:17"><if pos:start="207:17" pos:end="217:17">if <condition pos:start="207:20" pos:end="207:56">(<expr pos:start="207:21" pos:end="207:55"><name pos:start="207:21" pos:end="207:28">use_pred</name> <operator pos:start="207:30" pos:end="207:31">&amp;&amp;</operator> <operator pos:start="207:33" pos:end="207:33">(</operator><name pos:start="207:34" pos:end="207:39"><name pos:start="207:34" pos:end="207:34">v</name><operator pos:start="207:35" pos:end="207:36">-&gt;</operator><name pos:start="207:37" pos:end="207:39">fcm</name></name> <operator pos:start="207:41" pos:end="207:42">==</operator> <name pos:start="207:44" pos:end="207:54">ILACE_FRAME</name><operator pos:start="207:55" pos:end="207:55">)</operator></expr>)</condition> <block pos:start="207:58" pos:end="217:17">{<block_content pos:start="209:21" pos:end="215:57">

                    <if_stmt pos:start="209:21" pos:end="215:57"><if pos:start="209:21" pos:end="211:57">if <condition pos:start="209:24" pos:end="209:37">(<expr pos:start="209:25" pos:end="209:36"><operator pos:start="209:25" pos:end="209:25">!</operator><name pos:start="209:26" pos:end="209:36">dc_pred_dir</name></expr>)</condition><block type="pseudo" pos:start="211:25" pos:end="211:57"><block_content pos:start="211:25" pos:end="211:57"> <comment type="line" pos:start="209:39" pos:end="209:44">// top</comment>

                        <expr_stmt pos:start="211:25" pos:end="211:57"><expr pos:start="211:25" pos:end="211:56"><name pos:start="211:25" pos:end="211:48"><name pos:start="211:25" pos:end="211:29">block</name><index pos:start="211:30" pos:end="211:48">[<expr pos:start="211:31" pos:end="211:47"><name pos:start="211:31" pos:end="211:47"><name pos:start="211:31" pos:end="211:31">v</name><operator pos:start="211:32" pos:end="211:33">-&gt;</operator><name pos:start="211:34" pos:end="211:39">zz_8x8</name><index pos:start="211:40" pos:end="211:42">[<expr pos:start="211:41" pos:end="211:41"><literal type="number" pos:start="211:41" pos:end="211:41">2</literal></expr>]</index><index pos:start="211:43" pos:end="211:47">[<expr pos:start="211:44" pos:end="211:46"><name pos:start="211:44" pos:end="211:44">i</name><operator pos:start="211:45" pos:end="211:46">++</operator></expr>]</index></name></expr>]</index></name> <operator pos:start="211:50" pos:end="211:50">=</operator> <name pos:start="211:52" pos:end="211:56">value</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="213:21" pos:end="215:57">else<block type="pseudo" pos:start="215:25" pos:end="215:57"><block_content pos:start="215:25" pos:end="215:57"> <comment type="line" pos:start="213:26" pos:end="213:32">// left</comment>

                        <expr_stmt pos:start="215:25" pos:end="215:57"><expr pos:start="215:25" pos:end="215:56"><name pos:start="215:25" pos:end="215:48"><name pos:start="215:25" pos:end="215:29">block</name><index pos:start="215:30" pos:end="215:48">[<expr pos:start="215:31" pos:end="215:47"><name pos:start="215:31" pos:end="215:47"><name pos:start="215:31" pos:end="215:31">v</name><operator pos:start="215:32" pos:end="215:33">-&gt;</operator><name pos:start="215:34" pos:end="215:39">zz_8x8</name><index pos:start="215:40" pos:end="215:42">[<expr pos:start="215:41" pos:end="215:41"><literal type="number" pos:start="215:41" pos:end="215:41">3</literal></expr>]</index><index pos:start="215:43" pos:end="215:47">[<expr pos:start="215:44" pos:end="215:46"><name pos:start="215:44" pos:end="215:44">i</name><operator pos:start="215:45" pos:end="215:46">++</operator></expr>]</index></name></expr>]</index></name> <operator pos:start="215:50" pos:end="215:50">=</operator> <name pos:start="215:52" pos:end="215:56">value</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="217:19" pos:end="221:17">else <block pos:start="217:24" pos:end="221:17">{<block_content pos:start="219:21" pos:end="219:51">

                    <expr_stmt pos:start="219:21" pos:end="219:51"><expr pos:start="219:21" pos:end="219:50"><name pos:start="219:21" pos:end="219:42"><name pos:start="219:21" pos:end="219:25">block</name><index pos:start="219:26" pos:end="219:42">[<expr pos:start="219:27" pos:end="219:41"><name pos:start="219:27" pos:end="219:41"><name pos:start="219:27" pos:end="219:27">v</name><operator pos:start="219:28" pos:end="219:29">-&gt;</operator><name pos:start="219:30" pos:end="219:36">zzi_8x8</name><index pos:start="219:37" pos:end="219:41">[<expr pos:start="219:38" pos:end="219:40"><name pos:start="219:38" pos:end="219:38">i</name><operator pos:start="219:39" pos:end="219:40">++</operator></expr>]</index></name></expr>]</index></name> <operator pos:start="219:44" pos:end="219:44">=</operator> <name pos:start="219:46" pos:end="219:50">value</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>



        <comment type="block" pos:start="229:9" pos:end="229:43">/* apply AC prediction if needed */</comment>

        <if_stmt pos:start="231:9" pos:end="279:9"><if pos:start="231:9" pos:end="279:9">if <condition pos:start="231:12" pos:end="231:21">(<expr pos:start="231:13" pos:end="231:20"><name pos:start="231:13" pos:end="231:20">use_pred</name></expr>)</condition> <block pos:start="231:23" pos:end="279:9">{<block_content pos:start="235:13" pos:end="277:13">

            <comment type="block" pos:start="233:13" pos:end="233:43">/* scale predictors if needed*/</comment>

            <if_stmt pos:start="235:13" pos:end="277:13"><if pos:start="235:13" pos:end="261:13">if <condition pos:start="235:16" pos:end="235:31">(<expr pos:start="235:17" pos:end="235:30"><name pos:start="235:17" pos:end="235:18">q2</name> <operator pos:start="235:20" pos:end="235:21">&amp;&amp;</operator> <name pos:start="235:23" pos:end="235:24">q1</name> <operator pos:start="235:26" pos:end="235:27">!=</operator> <name pos:start="235:29" pos:end="235:30">q2</name></expr>)</condition> <block pos:start="235:33" pos:end="261:13">{<block_content pos:start="237:17" pos:end="259:17">

                <expr_stmt pos:start="237:17" pos:end="237:66"><expr pos:start="237:17" pos:end="237:65"><name pos:start="237:17" pos:end="237:18">q1</name> <operator pos:start="237:20" pos:end="237:20">=</operator> <name pos:start="237:22" pos:end="237:23">q1</name> <operator pos:start="237:25" pos:end="237:25">*</operator> <literal type="number" pos:start="237:27" pos:end="237:29">2</literal> <operator pos:start="237:29" pos:end="237:29">+</operator> <operator pos:start="237:31" pos:end="237:31">(</operator><ternary pos:start="237:32" pos:end="237:60"><condition pos:start="237:32" pos:end="237:46"><expr pos:start="237:32" pos:end="237:44"><operator pos:start="237:32" pos:end="237:32">(</operator><name pos:start="237:33" pos:end="237:34">q1</name> <operator pos:start="237:36" pos:end="237:37">==</operator> <name pos:start="237:39" pos:end="237:43"><name pos:start="237:39" pos:end="237:39">v</name><operator pos:start="237:40" pos:end="237:41">-&gt;</operator><name pos:start="237:42" pos:end="237:43">pq</name></name><operator pos:start="237:44" pos:end="237:44">)</operator></expr> ?</condition><then pos:start="237:48" pos:end="237:56"> <expr pos:start="237:48" pos:end="237:56"><name pos:start="237:48" pos:end="237:56"><name pos:start="237:48" pos:end="237:48">v</name><operator pos:start="237:49" pos:end="237:50">-&gt;</operator><name pos:start="237:51" pos:end="237:56">halfpq</name></name></expr> </then><else pos:start="237:58" pos:end="237:60">: <expr pos:start="237:60" pos:end="237:60"><literal type="number" pos:start="237:60" pos:end="237:60">0</literal></expr></else></ternary><operator pos:start="237:61" pos:end="237:61">)</operator> <operator pos:start="237:63" pos:end="237:63">-</operator> <literal type="number" pos:start="237:65" pos:end="237:65">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="239:17" pos:end="239:66"><expr pos:start="239:17" pos:end="239:65"><name pos:start="239:17" pos:end="239:18">q2</name> <operator pos:start="239:20" pos:end="239:20">=</operator> <name pos:start="239:22" pos:end="239:23">q2</name> <operator pos:start="239:25" pos:end="239:25">*</operator> <literal type="number" pos:start="239:27" pos:end="239:29">2</literal> <operator pos:start="239:29" pos:end="239:29">+</operator> <operator pos:start="239:31" pos:end="239:31">(</operator><ternary pos:start="239:32" pos:end="239:60"><condition pos:start="239:32" pos:end="239:46"><expr pos:start="239:32" pos:end="239:44"><operator pos:start="239:32" pos:end="239:32">(</operator><name pos:start="239:33" pos:end="239:34">q2</name> <operator pos:start="239:36" pos:end="239:37">==</operator> <name pos:start="239:39" pos:end="239:43"><name pos:start="239:39" pos:end="239:39">v</name><operator pos:start="239:40" pos:end="239:41">-&gt;</operator><name pos:start="239:42" pos:end="239:43">pq</name></name><operator pos:start="239:44" pos:end="239:44">)</operator></expr> ?</condition><then pos:start="239:48" pos:end="239:56"> <expr pos:start="239:48" pos:end="239:56"><name pos:start="239:48" pos:end="239:56"><name pos:start="239:48" pos:end="239:48">v</name><operator pos:start="239:49" pos:end="239:50">-&gt;</operator><name pos:start="239:51" pos:end="239:56">halfpq</name></name></expr> </then><else pos:start="239:58" pos:end="239:60">: <expr pos:start="239:60" pos:end="239:60"><literal type="number" pos:start="239:60" pos:end="239:60">0</literal></expr></else></ternary><operator pos:start="239:61" pos:end="239:61">)</operator> <operator pos:start="239:63" pos:end="239:63">-</operator> <literal type="number" pos:start="239:65" pos:end="239:65">1</literal></expr>;</expr_stmt>



                <if_stmt pos:start="243:17" pos:end="245:47"><if pos:start="243:17" pos:end="245:47">if <condition pos:start="243:20" pos:end="243:27">(<expr pos:start="243:21" pos:end="243:26"><name pos:start="243:21" pos:end="243:22">q1</name> <operator pos:start="243:24" pos:end="243:24">&lt;</operator> <literal type="number" pos:start="243:26" pos:end="243:26">1</literal></expr>)</condition><block type="pseudo" pos:start="245:21" pos:end="245:47"><block_content pos:start="245:21" pos:end="245:47">

                    <return pos:start="245:21" pos:end="245:47">return <expr pos:start="245:28" pos:end="245:46"><name pos:start="245:28" pos:end="245:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                <if_stmt pos:start="247:17" pos:end="259:17"><if pos:start="247:17" pos:end="253:17">if <condition pos:start="247:20" pos:end="247:32">(<expr pos:start="247:21" pos:end="247:31"><name pos:start="247:21" pos:end="247:31">dc_pred_dir</name></expr>)</condition> <block pos:start="247:34" pos:end="253:17">{<block_content pos:start="249:21" pos:end="251:112"> <comment type="line" pos:start="247:36" pos:end="247:42">// left</comment>

                    <for pos:start="249:21" pos:end="251:112">for <control pos:start="249:25" pos:end="249:43">(<init pos:start="249:26" pos:end="249:31"><expr pos:start="249:26" pos:end="249:30"><name pos:start="249:26" pos:end="249:26">k</name> <operator pos:start="249:28" pos:end="249:28">=</operator> <literal type="number" pos:start="249:30" pos:end="249:30">1</literal></expr>;</init> <condition pos:start="249:33" pos:end="249:38"><expr pos:start="249:33" pos:end="249:37"><name pos:start="249:33" pos:end="249:33">k</name> <operator pos:start="249:35" pos:end="249:35">&lt;</operator> <literal type="number" pos:start="249:37" pos:end="249:37">8</literal></expr>;</condition> <incr pos:start="249:40" pos:end="249:42"><expr pos:start="249:40" pos:end="249:42"><name pos:start="249:40" pos:end="249:40">k</name><operator pos:start="249:41" pos:end="249:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="251:25" pos:end="251:112"><block_content pos:start="251:25" pos:end="251:112">

                        <expr_stmt pos:start="251:25" pos:end="251:112"><expr pos:start="251:25" pos:end="251:111"><name pos:start="251:25" pos:end="251:50"><name pos:start="251:25" pos:end="251:29">block</name><index pos:start="251:30" pos:end="251:50">[<expr pos:start="251:31" pos:end="251:49"><name pos:start="251:31" pos:end="251:31">k</name> <operator pos:start="251:33" pos:end="251:34">&lt;&lt;</operator> <name pos:start="251:36" pos:end="251:49"><name pos:start="251:36" pos:end="251:36">v</name><operator pos:start="251:37" pos:end="251:38">-&gt;</operator><name pos:start="251:39" pos:end="251:49">left_blk_sh</name></name></expr>]</index></name> <operator pos:start="251:52" pos:end="251:53">+=</operator> <operator pos:start="251:55" pos:end="251:55">(</operator><name pos:start="251:56" pos:end="251:64"><name pos:start="251:56" pos:end="251:61">ac_val</name><index pos:start="251:62" pos:end="251:64">[<expr pos:start="251:63" pos:end="251:63"><name pos:start="251:63" pos:end="251:63">k</name></expr>]</index></name> <operator pos:start="251:66" pos:end="251:66">*</operator> <name pos:start="251:68" pos:end="251:69">q2</name> <operator pos:start="251:71" pos:end="251:71">*</operator> <name pos:start="251:73" pos:end="251:94"><name pos:start="251:73" pos:end="251:86">ff_vc1_dqscale</name><index pos:start="251:87" pos:end="251:94">[<expr pos:start="251:88" pos:end="251:93"><name pos:start="251:88" pos:end="251:89">q1</name> <operator pos:start="251:91" pos:end="251:91">-</operator> <literal type="number" pos:start="251:93" pos:end="251:93">1</literal></expr>]</index></name> <operator pos:start="251:96" pos:end="251:96">+</operator> <literal type="number" pos:start="251:98" pos:end="251:104">0x20000</literal><operator pos:start="251:105" pos:end="251:105">)</operator> <operator pos:start="251:107" pos:end="251:108">&gt;&gt;</operator> <literal type="number" pos:start="251:110" pos:end="251:111">18</literal></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></if> <else pos:start="253:19" pos:end="259:17">else <block pos:start="253:24" pos:end="259:17">{<block_content pos:start="255:21" pos:end="257:115"> <comment type="line" pos:start="253:26" pos:end="253:30">//top</comment>

                    <for pos:start="255:21" pos:end="257:115">for <control pos:start="255:25" pos:end="255:43">(<init pos:start="255:26" pos:end="255:31"><expr pos:start="255:26" pos:end="255:30"><name pos:start="255:26" pos:end="255:26">k</name> <operator pos:start="255:28" pos:end="255:28">=</operator> <literal type="number" pos:start="255:30" pos:end="255:30">1</literal></expr>;</init> <condition pos:start="255:33" pos:end="255:38"><expr pos:start="255:33" pos:end="255:37"><name pos:start="255:33" pos:end="255:33">k</name> <operator pos:start="255:35" pos:end="255:35">&lt;</operator> <literal type="number" pos:start="255:37" pos:end="255:37">8</literal></expr>;</condition> <incr pos:start="255:40" pos:end="255:42"><expr pos:start="255:40" pos:end="255:42"><name pos:start="255:40" pos:end="255:40">k</name><operator pos:start="255:41" pos:end="255:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="257:25" pos:end="257:115"><block_content pos:start="257:25" pos:end="257:115">

                        <expr_stmt pos:start="257:25" pos:end="257:115"><expr pos:start="257:25" pos:end="257:114"><name pos:start="257:25" pos:end="257:49"><name pos:start="257:25" pos:end="257:29">block</name><index pos:start="257:30" pos:end="257:49">[<expr pos:start="257:31" pos:end="257:48"><name pos:start="257:31" pos:end="257:31">k</name> <operator pos:start="257:33" pos:end="257:34">&lt;&lt;</operator> <name pos:start="257:36" pos:end="257:48"><name pos:start="257:36" pos:end="257:36">v</name><operator pos:start="257:37" pos:end="257:38">-&gt;</operator><name pos:start="257:39" pos:end="257:48">top_blk_sh</name></name></expr>]</index></name> <operator pos:start="257:51" pos:end="257:52">+=</operator> <operator pos:start="257:54" pos:end="257:54">(</operator><name pos:start="257:55" pos:end="257:67"><name pos:start="257:55" pos:end="257:60">ac_val</name><index pos:start="257:61" pos:end="257:67">[<expr pos:start="257:62" pos:end="257:66"><name pos:start="257:62" pos:end="257:62">k</name> <operator pos:start="257:64" pos:end="257:64">+</operator> <literal type="number" pos:start="257:66" pos:end="257:66">8</literal></expr>]</index></name> <operator pos:start="257:69" pos:end="257:69">*</operator> <name pos:start="257:71" pos:end="257:72">q2</name> <operator pos:start="257:74" pos:end="257:74">*</operator> <name pos:start="257:76" pos:end="257:97"><name pos:start="257:76" pos:end="257:89">ff_vc1_dqscale</name><index pos:start="257:90" pos:end="257:97">[<expr pos:start="257:91" pos:end="257:96"><name pos:start="257:91" pos:end="257:92">q1</name> <operator pos:start="257:94" pos:end="257:94">-</operator> <literal type="number" pos:start="257:96" pos:end="257:96">1</literal></expr>]</index></name> <operator pos:start="257:99" pos:end="257:99">+</operator> <literal type="number" pos:start="257:101" pos:end="257:107">0x20000</literal><operator pos:start="257:108" pos:end="257:108">)</operator> <operator pos:start="257:110" pos:end="257:111">&gt;&gt;</operator> <literal type="number" pos:start="257:113" pos:end="257:114">18</literal></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="261:15" pos:end="277:13">else <block pos:start="261:20" pos:end="277:13">{<block_content pos:start="263:17" pos:end="275:17">

                <if_stmt pos:start="263:17" pos:end="275:17"><if pos:start="263:17" pos:end="269:17">if <condition pos:start="263:20" pos:end="263:32">(<expr pos:start="263:21" pos:end="263:31"><name pos:start="263:21" pos:end="263:31">dc_pred_dir</name></expr>)</condition> <block pos:start="263:34" pos:end="269:17">{<block_content pos:start="265:21" pos:end="267:64"> <comment type="line" pos:start="263:36" pos:end="263:42">// left</comment>

                    <for pos:start="265:21" pos:end="267:64">for <control pos:start="265:25" pos:end="265:43">(<init pos:start="265:26" pos:end="265:31"><expr pos:start="265:26" pos:end="265:30"><name pos:start="265:26" pos:end="265:26">k</name> <operator pos:start="265:28" pos:end="265:28">=</operator> <literal type="number" pos:start="265:30" pos:end="265:30">1</literal></expr>;</init> <condition pos:start="265:33" pos:end="265:38"><expr pos:start="265:33" pos:end="265:37"><name pos:start="265:33" pos:end="265:33">k</name> <operator pos:start="265:35" pos:end="265:35">&lt;</operator> <literal type="number" pos:start="265:37" pos:end="265:37">8</literal></expr>;</condition> <incr pos:start="265:40" pos:end="265:42"><expr pos:start="265:40" pos:end="265:42"><name pos:start="265:40" pos:end="265:40">k</name><operator pos:start="265:41" pos:end="265:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="267:25" pos:end="267:64"><block_content pos:start="267:25" pos:end="267:64">

                        <expr_stmt pos:start="267:25" pos:end="267:64"><expr pos:start="267:25" pos:end="267:63"><name pos:start="267:25" pos:end="267:50"><name pos:start="267:25" pos:end="267:29">block</name><index pos:start="267:30" pos:end="267:50">[<expr pos:start="267:31" pos:end="267:49"><name pos:start="267:31" pos:end="267:31">k</name> <operator pos:start="267:33" pos:end="267:34">&lt;&lt;</operator> <name pos:start="267:36" pos:end="267:49"><name pos:start="267:36" pos:end="267:36">v</name><operator pos:start="267:37" pos:end="267:38">-&gt;</operator><name pos:start="267:39" pos:end="267:49">left_blk_sh</name></name></expr>]</index></name> <operator pos:start="267:52" pos:end="267:53">+=</operator> <name pos:start="267:55" pos:end="267:63"><name pos:start="267:55" pos:end="267:60">ac_val</name><index pos:start="267:61" pos:end="267:63">[<expr pos:start="267:62" pos:end="267:62"><name pos:start="267:62" pos:end="267:62">k</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></if> <else pos:start="269:19" pos:end="275:17">else <block pos:start="269:24" pos:end="275:17">{<block_content pos:start="271:21" pos:end="273:67"> <comment type="line" pos:start="269:26" pos:end="269:31">// top</comment>

                    <for pos:start="271:21" pos:end="273:67">for <control pos:start="271:25" pos:end="271:43">(<init pos:start="271:26" pos:end="271:31"><expr pos:start="271:26" pos:end="271:30"><name pos:start="271:26" pos:end="271:26">k</name> <operator pos:start="271:28" pos:end="271:28">=</operator> <literal type="number" pos:start="271:30" pos:end="271:30">1</literal></expr>;</init> <condition pos:start="271:33" pos:end="271:38"><expr pos:start="271:33" pos:end="271:37"><name pos:start="271:33" pos:end="271:33">k</name> <operator pos:start="271:35" pos:end="271:35">&lt;</operator> <literal type="number" pos:start="271:37" pos:end="271:37">8</literal></expr>;</condition> <incr pos:start="271:40" pos:end="271:42"><expr pos:start="271:40" pos:end="271:42"><name pos:start="271:40" pos:end="271:40">k</name><operator pos:start="271:41" pos:end="271:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="273:25" pos:end="273:67"><block_content pos:start="273:25" pos:end="273:67">

                        <expr_stmt pos:start="273:25" pos:end="273:67"><expr pos:start="273:25" pos:end="273:66"><name pos:start="273:25" pos:end="273:49"><name pos:start="273:25" pos:end="273:29">block</name><index pos:start="273:30" pos:end="273:49">[<expr pos:start="273:31" pos:end="273:48"><name pos:start="273:31" pos:end="273:31">k</name> <operator pos:start="273:33" pos:end="273:34">&lt;&lt;</operator> <name pos:start="273:36" pos:end="273:48"><name pos:start="273:36" pos:end="273:36">v</name><operator pos:start="273:37" pos:end="273:38">-&gt;</operator><name pos:start="273:39" pos:end="273:48">top_blk_sh</name></name></expr>]</index></name> <operator pos:start="273:51" pos:end="273:52">+=</operator> <name pos:start="273:54" pos:end="273:66"><name pos:start="273:54" pos:end="273:59">ac_val</name><index pos:start="273:60" pos:end="273:66">[<expr pos:start="273:61" pos:end="273:65"><name pos:start="273:61" pos:end="273:61">k</name> <operator pos:start="273:63" pos:end="273:63">+</operator> <literal type="number" pos:start="273:65" pos:end="273:65">8</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="281:9" pos:end="281:51">/* save AC coeffs for further prediction */</comment>

        <for pos:start="283:9" pos:end="289:9">for <control pos:start="283:13" pos:end="283:31">(<init pos:start="283:14" pos:end="283:19"><expr pos:start="283:14" pos:end="283:18"><name pos:start="283:14" pos:end="283:14">k</name> <operator pos:start="283:16" pos:end="283:16">=</operator> <literal type="number" pos:start="283:18" pos:end="283:18">1</literal></expr>;</init> <condition pos:start="283:21" pos:end="283:26"><expr pos:start="283:21" pos:end="283:25"><name pos:start="283:21" pos:end="283:21">k</name> <operator pos:start="283:23" pos:end="283:23">&lt;</operator> <literal type="number" pos:start="283:25" pos:end="283:25">8</literal></expr>;</condition> <incr pos:start="283:28" pos:end="283:30"><expr pos:start="283:28" pos:end="283:30"><name pos:start="283:28" pos:end="283:28">k</name><operator pos:start="283:29" pos:end="283:30">++</operator></expr></incr>)</control> <block pos:start="283:33" pos:end="289:9">{<block_content pos:start="285:13" pos:end="287:55">

            <expr_stmt pos:start="285:13" pos:end="285:56"><expr pos:start="285:13" pos:end="285:55"><name pos:start="285:13" pos:end="285:26"><name pos:start="285:13" pos:end="285:19">ac_val2</name><index pos:start="285:20" pos:end="285:26">[<expr pos:start="285:21" pos:end="285:21"><name pos:start="285:21" pos:end="285:21">k</name></expr>    ]</index></name> <operator pos:start="285:28" pos:end="285:28">=</operator> <name pos:start="285:30" pos:end="285:55"><name pos:start="285:30" pos:end="285:34">block</name><index pos:start="285:35" pos:end="285:55">[<expr pos:start="285:36" pos:end="285:54"><name pos:start="285:36" pos:end="285:36">k</name> <operator pos:start="285:38" pos:end="285:39">&lt;&lt;</operator> <name pos:start="285:41" pos:end="285:54"><name pos:start="285:41" pos:end="285:41">v</name><operator pos:start="285:42" pos:end="285:43">-&gt;</operator><name pos:start="285:44" pos:end="285:54">left_blk_sh</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:55"><expr pos:start="287:13" pos:end="287:54"><name pos:start="287:13" pos:end="287:26"><name pos:start="287:13" pos:end="287:19">ac_val2</name><index pos:start="287:20" pos:end="287:26">[<expr pos:start="287:21" pos:end="287:25"><name pos:start="287:21" pos:end="287:21">k</name> <operator pos:start="287:23" pos:end="287:23">+</operator> <literal type="number" pos:start="287:25" pos:end="287:25">8</literal></expr>]</index></name> <operator pos:start="287:28" pos:end="287:28">=</operator> <name pos:start="287:30" pos:end="287:54"><name pos:start="287:30" pos:end="287:34">block</name><index pos:start="287:35" pos:end="287:54">[<expr pos:start="287:36" pos:end="287:53"><name pos:start="287:36" pos:end="287:36">k</name> <operator pos:start="287:38" pos:end="287:39">&lt;&lt;</operator> <name pos:start="287:41" pos:end="287:53"><name pos:start="287:41" pos:end="287:41">v</name><operator pos:start="287:42" pos:end="287:43">-&gt;</operator><name pos:start="287:44" pos:end="287:53">top_blk_sh</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="293:9" pos:end="293:29">/* scale AC coeffs */</comment>

        <for pos:start="295:9" pos:end="305:13">for <control pos:start="295:13" pos:end="295:32">(<init pos:start="295:14" pos:end="295:19"><expr pos:start="295:14" pos:end="295:18"><name pos:start="295:14" pos:end="295:14">k</name> <operator pos:start="295:16" pos:end="295:16">=</operator> <literal type="number" pos:start="295:18" pos:end="295:18">1</literal></expr>;</init> <condition pos:start="295:21" pos:end="295:27"><expr pos:start="295:21" pos:end="295:26"><name pos:start="295:21" pos:end="295:21">k</name> <operator pos:start="295:23" pos:end="295:23">&lt;</operator> <literal type="number" pos:start="295:25" pos:end="295:26">64</literal></expr>;</condition> <incr pos:start="295:29" pos:end="295:31"><expr pos:start="295:29" pos:end="295:31"><name pos:start="295:29" pos:end="295:29">k</name><operator pos:start="295:30" pos:end="295:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="297:13" pos:end="305:13"><block_content pos:start="297:13" pos:end="305:13">

            <if_stmt pos:start="297:13" pos:end="305:13"><if pos:start="297:13" pos:end="305:13">if <condition pos:start="297:16" pos:end="297:25">(<expr pos:start="297:17" pos:end="297:24"><name pos:start="297:17" pos:end="297:24"><name pos:start="297:17" pos:end="297:21">block</name><index pos:start="297:22" pos:end="297:24">[<expr pos:start="297:23" pos:end="297:23"><name pos:start="297:23" pos:end="297:23">k</name></expr>]</index></name></expr>)</condition> <block pos:start="297:27" pos:end="305:13">{<block_content pos:start="299:17" pos:end="303:66">

                <expr_stmt pos:start="299:17" pos:end="299:34"><expr pos:start="299:17" pos:end="299:33"><name pos:start="299:17" pos:end="299:24"><name pos:start="299:17" pos:end="299:21">block</name><index pos:start="299:22" pos:end="299:24">[<expr pos:start="299:23" pos:end="299:23"><name pos:start="299:23" pos:end="299:23">k</name></expr>]</index></name> <operator pos:start="299:26" pos:end="299:27">*=</operator> <name pos:start="299:29" pos:end="299:33">scale</name></expr>;</expr_stmt>

                <if_stmt pos:start="301:17" pos:end="303:66"><if pos:start="301:17" pos:end="303:66">if <condition pos:start="301:20" pos:end="301:35">(<expr pos:start="301:21" pos:end="301:34"><operator pos:start="301:21" pos:end="301:21">!</operator><name pos:start="301:22" pos:end="301:34"><name pos:start="301:22" pos:end="301:22">v</name><operator pos:start="301:23" pos:end="301:24">-&gt;</operator><name pos:start="301:25" pos:end="301:34">pquantizer</name></name></expr>)</condition><block type="pseudo" pos:start="303:21" pos:end="303:66"><block_content pos:start="303:21" pos:end="303:66">

                    <expr_stmt pos:start="303:21" pos:end="303:66"><expr pos:start="303:21" pos:end="303:65"><name pos:start="303:21" pos:end="303:28"><name pos:start="303:21" pos:end="303:25">block</name><index pos:start="303:26" pos:end="303:28">[<expr pos:start="303:27" pos:end="303:27"><name pos:start="303:27" pos:end="303:27">k</name></expr>]</index></name> <operator pos:start="303:30" pos:end="303:31">+=</operator> <ternary pos:start="303:33" pos:end="303:65"><condition pos:start="303:33" pos:end="303:48"><expr pos:start="303:33" pos:end="303:46"><operator pos:start="303:33" pos:end="303:33">(</operator><name pos:start="303:34" pos:end="303:41"><name pos:start="303:34" pos:end="303:38">block</name><index pos:start="303:39" pos:end="303:41">[<expr pos:start="303:40" pos:end="303:40"><name pos:start="303:40" pos:end="303:40">k</name></expr>]</index></name> <operator pos:start="303:43" pos:end="303:43">&lt;</operator> <literal type="number" pos:start="303:45" pos:end="303:45">0</literal><operator pos:start="303:46" pos:end="303:46">)</operator></expr> ?</condition><then pos:start="303:50" pos:end="303:56"> <expr pos:start="303:50" pos:end="303:56"><operator pos:start="303:50" pos:end="303:50">-</operator><name pos:start="303:51" pos:end="303:56">mquant</name></expr> </then><else pos:start="303:58" pos:end="303:65">: <expr pos:start="303:60" pos:end="303:65"><name pos:start="303:60" pos:end="303:65">mquant</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt></block_content></block></for>



        <if_stmt pos:start="309:9" pos:end="309:29"><if pos:start="309:9" pos:end="309:29">if <condition pos:start="309:12" pos:end="309:21">(<expr pos:start="309:13" pos:end="309:20"><name pos:start="309:13" pos:end="309:20">use_pred</name></expr>)</condition><block type="pseudo" pos:start="309:23" pos:end="309:29"><block_content pos:start="309:23" pos:end="309:29"> <expr_stmt pos:start="309:23" pos:end="309:29"><expr pos:start="309:23" pos:end="309:28"><name pos:start="309:23" pos:end="309:23">i</name> <operator pos:start="309:25" pos:end="309:25">=</operator> <literal type="number" pos:start="309:27" pos:end="309:28">63</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="311:7" pos:end="405:5">else <block pos:start="311:12" pos:end="405:5">{<block_content pos:start="313:9" pos:end="403:9"> <comment type="line" pos:start="311:14" pos:end="311:28">// no AC coeffs</comment>

        <decl_stmt pos:start="313:9" pos:end="313:14"><decl pos:start="313:9" pos:end="313:13"><type pos:start="313:9" pos:end="313:11"><name pos:start="313:9" pos:end="313:11">int</name></type> <name pos:start="313:13" pos:end="313:13">k</name></decl>;</decl_stmt>



        <expr_stmt pos:start="317:9" pos:end="317:35"><expr pos:start="317:9" pos:end="317:34"><call pos:start="317:9" pos:end="317:34"><name pos:start="317:9" pos:end="317:14">memset</name><argument_list pos:start="317:15" pos:end="317:34">(<argument pos:start="317:16" pos:end="317:22"><expr pos:start="317:16" pos:end="317:22"><name pos:start="317:16" pos:end="317:22">ac_val2</name></expr></argument>, <argument pos:start="317:25" pos:end="317:25"><expr pos:start="317:25" pos:end="317:25"><literal type="number" pos:start="317:25" pos:end="317:25">0</literal></expr></argument>, <argument pos:start="317:28" pos:end="317:33"><expr pos:start="317:28" pos:end="317:33"><literal type="number" pos:start="317:28" pos:end="317:29">16</literal> <operator pos:start="317:31" pos:end="317:31">*</operator> <literal type="number" pos:start="317:33" pos:end="317:33">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="319:9" pos:end="367:9"><if pos:start="319:9" pos:end="343:9">if <condition pos:start="319:12" pos:end="319:24">(<expr pos:start="319:13" pos:end="319:23"><name pos:start="319:13" pos:end="319:23">dc_pred_dir</name></expr>)</condition> <block pos:start="319:26" pos:end="343:9">{<block_content pos:start="321:13" pos:end="341:13"> <comment type="line" pos:start="319:28" pos:end="319:34">// left</comment>

            <if_stmt pos:start="321:13" pos:end="341:13"><if pos:start="321:13" pos:end="341:13">if <condition pos:start="321:16" pos:end="321:25">(<expr pos:start="321:17" pos:end="321:24"><name pos:start="321:17" pos:end="321:24">use_pred</name></expr>)</condition> <block pos:start="321:27" pos:end="341:13">{<block_content pos:start="323:17" pos:end="339:17">

                <expr_stmt pos:start="323:17" pos:end="323:47"><expr pos:start="323:17" pos:end="323:46"><call pos:start="323:17" pos:end="323:46"><name pos:start="323:17" pos:end="323:22">memcpy</name><argument_list pos:start="323:23" pos:end="323:46">(<argument pos:start="323:24" pos:end="323:30"><expr pos:start="323:24" pos:end="323:30"><name pos:start="323:24" pos:end="323:30">ac_val2</name></expr></argument>, <argument pos:start="323:33" pos:end="323:38"><expr pos:start="323:33" pos:end="323:38"><name pos:start="323:33" pos:end="323:38">ac_val</name></expr></argument>, <argument pos:start="323:41" pos:end="323:45"><expr pos:start="323:41" pos:end="323:45"><literal type="number" pos:start="323:41" pos:end="323:41">8</literal> <operator pos:start="323:43" pos:end="323:43">*</operator> <literal type="number" pos:start="323:45" pos:end="323:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="325:17" pos:end="339:17"><if pos:start="325:17" pos:end="339:17">if <condition pos:start="325:20" pos:end="325:35">(<expr pos:start="325:21" pos:end="325:34"><name pos:start="325:21" pos:end="325:22">q2</name> <operator pos:start="325:24" pos:end="325:25">&amp;&amp;</operator> <name pos:start="325:27" pos:end="325:28">q1</name> <operator pos:start="325:30" pos:end="325:31">!=</operator> <name pos:start="325:33" pos:end="325:34">q2</name></expr>)</condition> <block pos:start="325:37" pos:end="339:17">{<block_content pos:start="327:21" pos:end="337:96">

                    <expr_stmt pos:start="327:21" pos:end="327:70"><expr pos:start="327:21" pos:end="327:69"><name pos:start="327:21" pos:end="327:22">q1</name> <operator pos:start="327:24" pos:end="327:24">=</operator> <name pos:start="327:26" pos:end="327:27">q1</name> <operator pos:start="327:29" pos:end="327:29">*</operator> <literal type="number" pos:start="327:31" pos:end="327:33">2</literal> <operator pos:start="327:33" pos:end="327:33">+</operator> <operator pos:start="327:35" pos:end="327:35">(</operator><ternary pos:start="327:36" pos:end="327:64"><condition pos:start="327:36" pos:end="327:50"><expr pos:start="327:36" pos:end="327:48"><operator pos:start="327:36" pos:end="327:36">(</operator><name pos:start="327:37" pos:end="327:38">q1</name> <operator pos:start="327:40" pos:end="327:41">==</operator> <name pos:start="327:43" pos:end="327:47"><name pos:start="327:43" pos:end="327:43">v</name><operator pos:start="327:44" pos:end="327:45">-&gt;</operator><name pos:start="327:46" pos:end="327:47">pq</name></name><operator pos:start="327:48" pos:end="327:48">)</operator></expr> ?</condition><then pos:start="327:52" pos:end="327:60"> <expr pos:start="327:52" pos:end="327:60"><name pos:start="327:52" pos:end="327:60"><name pos:start="327:52" pos:end="327:52">v</name><operator pos:start="327:53" pos:end="327:54">-&gt;</operator><name pos:start="327:55" pos:end="327:60">halfpq</name></name></expr> </then><else pos:start="327:62" pos:end="327:64">: <expr pos:start="327:64" pos:end="327:64"><literal type="number" pos:start="327:64" pos:end="327:64">0</literal></expr></else></ternary><operator pos:start="327:65" pos:end="327:65">)</operator> <operator pos:start="327:67" pos:end="327:67">-</operator> <literal type="number" pos:start="327:69" pos:end="327:69">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="329:21" pos:end="329:70"><expr pos:start="329:21" pos:end="329:69"><name pos:start="329:21" pos:end="329:22">q2</name> <operator pos:start="329:24" pos:end="329:24">=</operator> <name pos:start="329:26" pos:end="329:27">q2</name> <operator pos:start="329:29" pos:end="329:29">*</operator> <literal type="number" pos:start="329:31" pos:end="329:33">2</literal> <operator pos:start="329:33" pos:end="329:33">+</operator> <operator pos:start="329:35" pos:end="329:35">(</operator><ternary pos:start="329:36" pos:end="329:64"><condition pos:start="329:36" pos:end="329:50"><expr pos:start="329:36" pos:end="329:48"><operator pos:start="329:36" pos:end="329:36">(</operator><name pos:start="329:37" pos:end="329:38">q2</name> <operator pos:start="329:40" pos:end="329:41">==</operator> <name pos:start="329:43" pos:end="329:47"><name pos:start="329:43" pos:end="329:43">v</name><operator pos:start="329:44" pos:end="329:45">-&gt;</operator><name pos:start="329:46" pos:end="329:47">pq</name></name><operator pos:start="329:48" pos:end="329:48">)</operator></expr> ?</condition><then pos:start="329:52" pos:end="329:60"> <expr pos:start="329:52" pos:end="329:60"><name pos:start="329:52" pos:end="329:60"><name pos:start="329:52" pos:end="329:52">v</name><operator pos:start="329:53" pos:end="329:54">-&gt;</operator><name pos:start="329:55" pos:end="329:60">halfpq</name></name></expr> </then><else pos:start="329:62" pos:end="329:64">: <expr pos:start="329:64" pos:end="329:64"><literal type="number" pos:start="329:64" pos:end="329:64">0</literal></expr></else></ternary><operator pos:start="329:65" pos:end="329:65">)</operator> <operator pos:start="329:67" pos:end="329:67">-</operator> <literal type="number" pos:start="329:69" pos:end="329:69">1</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="331:21" pos:end="333:51"><if pos:start="331:21" pos:end="333:51">if <condition pos:start="331:24" pos:end="331:31">(<expr pos:start="331:25" pos:end="331:30"><name pos:start="331:25" pos:end="331:26">q1</name> <operator pos:start="331:28" pos:end="331:28">&lt;</operator> <literal type="number" pos:start="331:30" pos:end="331:30">1</literal></expr>)</condition><block type="pseudo" pos:start="333:25" pos:end="333:51"><block_content pos:start="333:25" pos:end="333:51">

                        <return pos:start="333:25" pos:end="333:51">return <expr pos:start="333:32" pos:end="333:50"><name pos:start="333:32" pos:end="333:50">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                    <for pos:start="335:21" pos:end="337:96">for <control pos:start="335:25" pos:end="335:43">(<init pos:start="335:26" pos:end="335:31"><expr pos:start="335:26" pos:end="335:30"><name pos:start="335:26" pos:end="335:26">k</name> <operator pos:start="335:28" pos:end="335:28">=</operator> <literal type="number" pos:start="335:30" pos:end="335:30">1</literal></expr>;</init> <condition pos:start="335:33" pos:end="335:38"><expr pos:start="335:33" pos:end="335:37"><name pos:start="335:33" pos:end="335:33">k</name> <operator pos:start="335:35" pos:end="335:35">&lt;</operator> <literal type="number" pos:start="335:37" pos:end="335:37">8</literal></expr>;</condition> <incr pos:start="335:40" pos:end="335:42"><expr pos:start="335:40" pos:end="335:42"><name pos:start="335:40" pos:end="335:40">k</name><operator pos:start="335:41" pos:end="335:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="337:25" pos:end="337:96"><block_content pos:start="337:25" pos:end="337:96">

                        <expr_stmt pos:start="337:25" pos:end="337:96"><expr pos:start="337:25" pos:end="337:95"><name pos:start="337:25" pos:end="337:34"><name pos:start="337:25" pos:end="337:31">ac_val2</name><index pos:start="337:32" pos:end="337:34">[<expr pos:start="337:33" pos:end="337:33"><name pos:start="337:33" pos:end="337:33">k</name></expr>]</index></name> <operator pos:start="337:36" pos:end="337:36">=</operator> <operator pos:start="337:38" pos:end="337:38">(</operator><name pos:start="337:39" pos:end="337:48"><name pos:start="337:39" pos:end="337:45">ac_val2</name><index pos:start="337:46" pos:end="337:48">[<expr pos:start="337:47" pos:end="337:47"><name pos:start="337:47" pos:end="337:47">k</name></expr>]</index></name> <operator pos:start="337:50" pos:end="337:50">*</operator> <name pos:start="337:52" pos:end="337:53">q2</name> <operator pos:start="337:55" pos:end="337:55">*</operator> <name pos:start="337:57" pos:end="337:78"><name pos:start="337:57" pos:end="337:70">ff_vc1_dqscale</name><index pos:start="337:71" pos:end="337:78">[<expr pos:start="337:72" pos:end="337:77"><name pos:start="337:72" pos:end="337:73">q1</name> <operator pos:start="337:75" pos:end="337:75">-</operator> <literal type="number" pos:start="337:77" pos:end="337:77">1</literal></expr>]</index></name> <operator pos:start="337:80" pos:end="337:80">+</operator> <literal type="number" pos:start="337:82" pos:end="337:88">0x20000</literal><operator pos:start="337:89" pos:end="337:89">)</operator> <operator pos:start="337:91" pos:end="337:92">&gt;&gt;</operator> <literal type="number" pos:start="337:94" pos:end="337:95">18</literal></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="343:11" pos:end="367:9">else <block pos:start="343:16" pos:end="367:9">{<block_content pos:start="345:13" pos:end="365:13"> <comment type="line" pos:start="343:18" pos:end="343:23">// top</comment>

            <if_stmt pos:start="345:13" pos:end="365:13"><if pos:start="345:13" pos:end="365:13">if <condition pos:start="345:16" pos:end="345:25">(<expr pos:start="345:17" pos:end="345:24"><name pos:start="345:17" pos:end="345:24">use_pred</name></expr>)</condition> <block pos:start="345:27" pos:end="365:13">{<block_content pos:start="347:17" pos:end="363:17">

                <expr_stmt pos:start="347:17" pos:end="347:55"><expr pos:start="347:17" pos:end="347:54"><call pos:start="347:17" pos:end="347:54"><name pos:start="347:17" pos:end="347:22">memcpy</name><argument_list pos:start="347:23" pos:end="347:54">(<argument pos:start="347:24" pos:end="347:34"><expr pos:start="347:24" pos:end="347:34"><name pos:start="347:24" pos:end="347:30">ac_val2</name> <operator pos:start="347:32" pos:end="347:32">+</operator> <literal type="number" pos:start="347:34" pos:end="347:34">8</literal></expr></argument>, <argument pos:start="347:37" pos:end="347:46"><expr pos:start="347:37" pos:end="347:46"><name pos:start="347:37" pos:end="347:42">ac_val</name> <operator pos:start="347:44" pos:end="347:44">+</operator> <literal type="number" pos:start="347:46" pos:end="347:46">8</literal></expr></argument>, <argument pos:start="347:49" pos:end="347:53"><expr pos:start="347:49" pos:end="347:53"><literal type="number" pos:start="347:49" pos:end="347:49">8</literal> <operator pos:start="347:51" pos:end="347:51">*</operator> <literal type="number" pos:start="347:53" pos:end="347:53">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="349:17" pos:end="363:17"><if pos:start="349:17" pos:end="363:17">if <condition pos:start="349:20" pos:end="349:35">(<expr pos:start="349:21" pos:end="349:34"><name pos:start="349:21" pos:end="349:22">q2</name> <operator pos:start="349:24" pos:end="349:25">&amp;&amp;</operator> <name pos:start="349:27" pos:end="349:28">q1</name> <operator pos:start="349:30" pos:end="349:31">!=</operator> <name pos:start="349:33" pos:end="349:34">q2</name></expr>)</condition> <block pos:start="349:37" pos:end="363:17">{<block_content pos:start="351:21" pos:end="361:104">

                    <expr_stmt pos:start="351:21" pos:end="351:70"><expr pos:start="351:21" pos:end="351:69"><name pos:start="351:21" pos:end="351:22">q1</name> <operator pos:start="351:24" pos:end="351:24">=</operator> <name pos:start="351:26" pos:end="351:27">q1</name> <operator pos:start="351:29" pos:end="351:29">*</operator> <literal type="number" pos:start="351:31" pos:end="351:33">2</literal> <operator pos:start="351:33" pos:end="351:33">+</operator> <operator pos:start="351:35" pos:end="351:35">(</operator><ternary pos:start="351:36" pos:end="351:64"><condition pos:start="351:36" pos:end="351:50"><expr pos:start="351:36" pos:end="351:48"><operator pos:start="351:36" pos:end="351:36">(</operator><name pos:start="351:37" pos:end="351:38">q1</name> <operator pos:start="351:40" pos:end="351:41">==</operator> <name pos:start="351:43" pos:end="351:47"><name pos:start="351:43" pos:end="351:43">v</name><operator pos:start="351:44" pos:end="351:45">-&gt;</operator><name pos:start="351:46" pos:end="351:47">pq</name></name><operator pos:start="351:48" pos:end="351:48">)</operator></expr> ?</condition><then pos:start="351:52" pos:end="351:60"> <expr pos:start="351:52" pos:end="351:60"><name pos:start="351:52" pos:end="351:60"><name pos:start="351:52" pos:end="351:52">v</name><operator pos:start="351:53" pos:end="351:54">-&gt;</operator><name pos:start="351:55" pos:end="351:60">halfpq</name></name></expr> </then><else pos:start="351:62" pos:end="351:64">: <expr pos:start="351:64" pos:end="351:64"><literal type="number" pos:start="351:64" pos:end="351:64">0</literal></expr></else></ternary><operator pos:start="351:65" pos:end="351:65">)</operator> <operator pos:start="351:67" pos:end="351:67">-</operator> <literal type="number" pos:start="351:69" pos:end="351:69">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="353:21" pos:end="353:70"><expr pos:start="353:21" pos:end="353:69"><name pos:start="353:21" pos:end="353:22">q2</name> <operator pos:start="353:24" pos:end="353:24">=</operator> <name pos:start="353:26" pos:end="353:27">q2</name> <operator pos:start="353:29" pos:end="353:29">*</operator> <literal type="number" pos:start="353:31" pos:end="353:33">2</literal> <operator pos:start="353:33" pos:end="353:33">+</operator> <operator pos:start="353:35" pos:end="353:35">(</operator><ternary pos:start="353:36" pos:end="353:64"><condition pos:start="353:36" pos:end="353:50"><expr pos:start="353:36" pos:end="353:48"><operator pos:start="353:36" pos:end="353:36">(</operator><name pos:start="353:37" pos:end="353:38">q2</name> <operator pos:start="353:40" pos:end="353:41">==</operator> <name pos:start="353:43" pos:end="353:47"><name pos:start="353:43" pos:end="353:43">v</name><operator pos:start="353:44" pos:end="353:45">-&gt;</operator><name pos:start="353:46" pos:end="353:47">pq</name></name><operator pos:start="353:48" pos:end="353:48">)</operator></expr> ?</condition><then pos:start="353:52" pos:end="353:60"> <expr pos:start="353:52" pos:end="353:60"><name pos:start="353:52" pos:end="353:60"><name pos:start="353:52" pos:end="353:52">v</name><operator pos:start="353:53" pos:end="353:54">-&gt;</operator><name pos:start="353:55" pos:end="353:60">halfpq</name></name></expr> </then><else pos:start="353:62" pos:end="353:64">: <expr pos:start="353:64" pos:end="353:64"><literal type="number" pos:start="353:64" pos:end="353:64">0</literal></expr></else></ternary><operator pos:start="353:65" pos:end="353:65">)</operator> <operator pos:start="353:67" pos:end="353:67">-</operator> <literal type="number" pos:start="353:69" pos:end="353:69">1</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="355:21" pos:end="357:51"><if pos:start="355:21" pos:end="357:51">if <condition pos:start="355:24" pos:end="355:31">(<expr pos:start="355:25" pos:end="355:30"><name pos:start="355:25" pos:end="355:26">q1</name> <operator pos:start="355:28" pos:end="355:28">&lt;</operator> <literal type="number" pos:start="355:30" pos:end="355:30">1</literal></expr>)</condition><block type="pseudo" pos:start="357:25" pos:end="357:51"><block_content pos:start="357:25" pos:end="357:51">

                        <return pos:start="357:25" pos:end="357:51">return <expr pos:start="357:32" pos:end="357:50"><name pos:start="357:32" pos:end="357:50">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                    <for pos:start="359:21" pos:end="361:104">for <control pos:start="359:25" pos:end="359:43">(<init pos:start="359:26" pos:end="359:31"><expr pos:start="359:26" pos:end="359:30"><name pos:start="359:26" pos:end="359:26">k</name> <operator pos:start="359:28" pos:end="359:28">=</operator> <literal type="number" pos:start="359:30" pos:end="359:30">1</literal></expr>;</init> <condition pos:start="359:33" pos:end="359:38"><expr pos:start="359:33" pos:end="359:37"><name pos:start="359:33" pos:end="359:33">k</name> <operator pos:start="359:35" pos:end="359:35">&lt;</operator> <literal type="number" pos:start="359:37" pos:end="359:37">8</literal></expr>;</condition> <incr pos:start="359:40" pos:end="359:42"><expr pos:start="359:40" pos:end="359:42"><name pos:start="359:40" pos:end="359:40">k</name><operator pos:start="359:41" pos:end="359:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="361:25" pos:end="361:104"><block_content pos:start="361:25" pos:end="361:104">

                        <expr_stmt pos:start="361:25" pos:end="361:104"><expr pos:start="361:25" pos:end="361:103"><name pos:start="361:25" pos:end="361:38"><name pos:start="361:25" pos:end="361:31">ac_val2</name><index pos:start="361:32" pos:end="361:38">[<expr pos:start="361:33" pos:end="361:37"><name pos:start="361:33" pos:end="361:33">k</name> <operator pos:start="361:35" pos:end="361:35">+</operator> <literal type="number" pos:start="361:37" pos:end="361:37">8</literal></expr>]</index></name> <operator pos:start="361:40" pos:end="361:40">=</operator> <operator pos:start="361:42" pos:end="361:42">(</operator><name pos:start="361:43" pos:end="361:56"><name pos:start="361:43" pos:end="361:49">ac_val2</name><index pos:start="361:50" pos:end="361:56">[<expr pos:start="361:51" pos:end="361:55"><name pos:start="361:51" pos:end="361:51">k</name> <operator pos:start="361:53" pos:end="361:53">+</operator> <literal type="number" pos:start="361:55" pos:end="361:55">8</literal></expr>]</index></name> <operator pos:start="361:58" pos:end="361:58">*</operator> <name pos:start="361:60" pos:end="361:61">q2</name> <operator pos:start="361:63" pos:end="361:63">*</operator> <name pos:start="361:65" pos:end="361:86"><name pos:start="361:65" pos:end="361:78">ff_vc1_dqscale</name><index pos:start="361:79" pos:end="361:86">[<expr pos:start="361:80" pos:end="361:85"><name pos:start="361:80" pos:end="361:81">q1</name> <operator pos:start="361:83" pos:end="361:83">-</operator> <literal type="number" pos:start="361:85" pos:end="361:85">1</literal></expr>]</index></name> <operator pos:start="361:88" pos:end="361:88">+</operator> <literal type="number" pos:start="361:90" pos:end="361:96">0x20000</literal><operator pos:start="361:97" pos:end="361:97">)</operator> <operator pos:start="361:99" pos:end="361:100">&gt;&gt;</operator> <literal type="number" pos:start="361:102" pos:end="361:103">18</literal></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="371:9" pos:end="371:43">/* apply AC prediction if needed */</comment>

        <if_stmt pos:start="373:9" pos:end="403:9"><if pos:start="373:9" pos:end="403:9">if <condition pos:start="373:12" pos:end="373:21">(<expr pos:start="373:13" pos:end="373:20"><name pos:start="373:13" pos:end="373:20">use_pred</name></expr>)</condition> <block pos:start="373:23" pos:end="403:9">{<block_content pos:start="375:13" pos:end="401:19">

            <if_stmt pos:start="375:13" pos:end="399:13"><if pos:start="375:13" pos:end="387:13">if <condition pos:start="375:16" pos:end="375:28">(<expr pos:start="375:17" pos:end="375:27"><name pos:start="375:17" pos:end="375:27">dc_pred_dir</name></expr>)</condition> <block pos:start="375:30" pos:end="387:13">{<block_content pos:start="377:17" pos:end="385:17"> <comment type="line" pos:start="375:32" pos:end="375:38">// left</comment>

                <for pos:start="377:17" pos:end="385:17">for <control pos:start="377:21" pos:end="377:39">(<init pos:start="377:22" pos:end="377:27"><expr pos:start="377:22" pos:end="377:26"><name pos:start="377:22" pos:end="377:22">k</name> <operator pos:start="377:24" pos:end="377:24">=</operator> <literal type="number" pos:start="377:26" pos:end="377:26">1</literal></expr>;</init> <condition pos:start="377:29" pos:end="377:34"><expr pos:start="377:29" pos:end="377:33"><name pos:start="377:29" pos:end="377:29">k</name> <operator pos:start="377:31" pos:end="377:31">&lt;</operator> <literal type="number" pos:start="377:33" pos:end="377:33">8</literal></expr>;</condition> <incr pos:start="377:36" pos:end="377:38"><expr pos:start="377:36" pos:end="377:38"><name pos:start="377:36" pos:end="377:36">k</name><operator pos:start="377:37" pos:end="377:38">++</operator></expr></incr>)</control> <block pos:start="377:41" pos:end="385:17">{<block_content pos:start="379:21" pos:end="383:106">

                    <expr_stmt pos:start="379:21" pos:end="379:68"><expr pos:start="379:21" pos:end="379:67"><name pos:start="379:21" pos:end="379:46"><name pos:start="379:21" pos:end="379:25">block</name><index pos:start="379:26" pos:end="379:46">[<expr pos:start="379:27" pos:end="379:45"><name pos:start="379:27" pos:end="379:27">k</name> <operator pos:start="379:29" pos:end="379:30">&lt;&lt;</operator> <name pos:start="379:32" pos:end="379:45"><name pos:start="379:32" pos:end="379:32">v</name><operator pos:start="379:33" pos:end="379:34">-&gt;</operator><name pos:start="379:35" pos:end="379:45">left_blk_sh</name></name></expr>]</index></name> <operator pos:start="379:48" pos:end="379:48">=</operator> <name pos:start="379:50" pos:end="379:59"><name pos:start="379:50" pos:end="379:56">ac_val2</name><index pos:start="379:57" pos:end="379:59">[<expr pos:start="379:58" pos:end="379:58"><name pos:start="379:58" pos:end="379:58">k</name></expr>]</index></name> <operator pos:start="379:61" pos:end="379:61">*</operator> <name pos:start="379:63" pos:end="379:67">scale</name></expr>;</expr_stmt>

                    <if_stmt pos:start="381:21" pos:end="383:106"><if pos:start="381:21" pos:end="383:106">if <condition pos:start="381:24" pos:end="381:69">(<expr pos:start="381:25" pos:end="381:68"><operator pos:start="381:25" pos:end="381:25">!</operator><name pos:start="381:26" pos:end="381:38"><name pos:start="381:26" pos:end="381:26">v</name><operator pos:start="381:27" pos:end="381:28">-&gt;</operator><name pos:start="381:29" pos:end="381:38">pquantizer</name></name> <operator pos:start="381:40" pos:end="381:41">&amp;&amp;</operator> <name pos:start="381:43" pos:end="381:68"><name pos:start="381:43" pos:end="381:47">block</name><index pos:start="381:48" pos:end="381:68">[<expr pos:start="381:49" pos:end="381:67"><name pos:start="381:49" pos:end="381:49">k</name> <operator pos:start="381:51" pos:end="381:52">&lt;&lt;</operator> <name pos:start="381:54" pos:end="381:67"><name pos:start="381:54" pos:end="381:54">v</name><operator pos:start="381:55" pos:end="381:56">-&gt;</operator><name pos:start="381:57" pos:end="381:67">left_blk_sh</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="383:25" pos:end="383:106"><block_content pos:start="383:25" pos:end="383:106">

                        <expr_stmt pos:start="383:25" pos:end="383:106"><expr pos:start="383:25" pos:end="383:105"><name pos:start="383:25" pos:end="383:50"><name pos:start="383:25" pos:end="383:29">block</name><index pos:start="383:30" pos:end="383:50">[<expr pos:start="383:31" pos:end="383:49"><name pos:start="383:31" pos:end="383:31">k</name> <operator pos:start="383:33" pos:end="383:34">&lt;&lt;</operator> <name pos:start="383:36" pos:end="383:49"><name pos:start="383:36" pos:end="383:36">v</name><operator pos:start="383:37" pos:end="383:38">-&gt;</operator><name pos:start="383:39" pos:end="383:49">left_blk_sh</name></name></expr>]</index></name> <operator pos:start="383:52" pos:end="383:53">+=</operator> <ternary pos:start="383:55" pos:end="383:105"><condition pos:start="383:55" pos:end="383:88"><expr pos:start="383:55" pos:end="383:86"><operator pos:start="383:55" pos:end="383:55">(</operator><name pos:start="383:56" pos:end="383:81"><name pos:start="383:56" pos:end="383:60">block</name><index pos:start="383:61" pos:end="383:81">[<expr pos:start="383:62" pos:end="383:80"><name pos:start="383:62" pos:end="383:62">k</name> <operator pos:start="383:64" pos:end="383:65">&lt;&lt;</operator> <name pos:start="383:67" pos:end="383:80"><name pos:start="383:67" pos:end="383:67">v</name><operator pos:start="383:68" pos:end="383:69">-&gt;</operator><name pos:start="383:70" pos:end="383:80">left_blk_sh</name></name></expr>]</index></name> <operator pos:start="383:83" pos:end="383:83">&lt;</operator> <literal type="number" pos:start="383:85" pos:end="383:85">0</literal><operator pos:start="383:86" pos:end="383:86">)</operator></expr> ?</condition><then pos:start="383:90" pos:end="383:96"> <expr pos:start="383:90" pos:end="383:96"><operator pos:start="383:90" pos:end="383:90">-</operator><name pos:start="383:91" pos:end="383:96">mquant</name></expr> </then><else pos:start="383:98" pos:end="383:105">: <expr pos:start="383:100" pos:end="383:105"><name pos:start="383:100" pos:end="383:105">mquant</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="387:15" pos:end="399:13">else <block pos:start="387:20" pos:end="399:13">{<block_content pos:start="389:17" pos:end="397:17"> <comment type="line" pos:start="387:22" pos:end="387:27">// top</comment>

                <for pos:start="389:17" pos:end="397:17">for <control pos:start="389:21" pos:end="389:39">(<init pos:start="389:22" pos:end="389:27"><expr pos:start="389:22" pos:end="389:26"><name pos:start="389:22" pos:end="389:22">k</name> <operator pos:start="389:24" pos:end="389:24">=</operator> <literal type="number" pos:start="389:26" pos:end="389:26">1</literal></expr>;</init> <condition pos:start="389:29" pos:end="389:34"><expr pos:start="389:29" pos:end="389:33"><name pos:start="389:29" pos:end="389:29">k</name> <operator pos:start="389:31" pos:end="389:31">&lt;</operator> <literal type="number" pos:start="389:33" pos:end="389:33">8</literal></expr>;</condition> <incr pos:start="389:36" pos:end="389:38"><expr pos:start="389:36" pos:end="389:38"><name pos:start="389:36" pos:end="389:36">k</name><operator pos:start="389:37" pos:end="389:38">++</operator></expr></incr>)</control> <block pos:start="389:41" pos:end="397:17">{<block_content pos:start="391:21" pos:end="395:104">

                    <expr_stmt pos:start="391:21" pos:end="391:71"><expr pos:start="391:21" pos:end="391:70"><name pos:start="391:21" pos:end="391:45"><name pos:start="391:21" pos:end="391:25">block</name><index pos:start="391:26" pos:end="391:45">[<expr pos:start="391:27" pos:end="391:44"><name pos:start="391:27" pos:end="391:27">k</name> <operator pos:start="391:29" pos:end="391:30">&lt;&lt;</operator> <name pos:start="391:32" pos:end="391:44"><name pos:start="391:32" pos:end="391:32">v</name><operator pos:start="391:33" pos:end="391:34">-&gt;</operator><name pos:start="391:35" pos:end="391:44">top_blk_sh</name></name></expr>]</index></name> <operator pos:start="391:47" pos:end="391:47">=</operator> <name pos:start="391:49" pos:end="391:62"><name pos:start="391:49" pos:end="391:55">ac_val2</name><index pos:start="391:56" pos:end="391:62">[<expr pos:start="391:57" pos:end="391:61"><name pos:start="391:57" pos:end="391:57">k</name> <operator pos:start="391:59" pos:end="391:59">+</operator> <literal type="number" pos:start="391:61" pos:end="391:61">8</literal></expr>]</index></name> <operator pos:start="391:64" pos:end="391:64">*</operator> <name pos:start="391:66" pos:end="391:70">scale</name></expr>;</expr_stmt>

                    <if_stmt pos:start="393:21" pos:end="395:104"><if pos:start="393:21" pos:end="395:104">if <condition pos:start="393:24" pos:end="393:68">(<expr pos:start="393:25" pos:end="393:67"><operator pos:start="393:25" pos:end="393:25">!</operator><name pos:start="393:26" pos:end="393:38"><name pos:start="393:26" pos:end="393:26">v</name><operator pos:start="393:27" pos:end="393:28">-&gt;</operator><name pos:start="393:29" pos:end="393:38">pquantizer</name></name> <operator pos:start="393:40" pos:end="393:41">&amp;&amp;</operator> <name pos:start="393:43" pos:end="393:67"><name pos:start="393:43" pos:end="393:47">block</name><index pos:start="393:48" pos:end="393:67">[<expr pos:start="393:49" pos:end="393:66"><name pos:start="393:49" pos:end="393:49">k</name> <operator pos:start="393:51" pos:end="393:52">&lt;&lt;</operator> <name pos:start="393:54" pos:end="393:66"><name pos:start="393:54" pos:end="393:54">v</name><operator pos:start="393:55" pos:end="393:56">-&gt;</operator><name pos:start="393:57" pos:end="393:66">top_blk_sh</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="395:25" pos:end="395:104"><block_content pos:start="395:25" pos:end="395:104">

                        <expr_stmt pos:start="395:25" pos:end="395:104"><expr pos:start="395:25" pos:end="395:103"><name pos:start="395:25" pos:end="395:49"><name pos:start="395:25" pos:end="395:29">block</name><index pos:start="395:30" pos:end="395:49">[<expr pos:start="395:31" pos:end="395:48"><name pos:start="395:31" pos:end="395:31">k</name> <operator pos:start="395:33" pos:end="395:34">&lt;&lt;</operator> <name pos:start="395:36" pos:end="395:48"><name pos:start="395:36" pos:end="395:36">v</name><operator pos:start="395:37" pos:end="395:38">-&gt;</operator><name pos:start="395:39" pos:end="395:48">top_blk_sh</name></name></expr>]</index></name> <operator pos:start="395:51" pos:end="395:52">+=</operator> <ternary pos:start="395:54" pos:end="395:103"><condition pos:start="395:54" pos:end="395:86"><expr pos:start="395:54" pos:end="395:84"><operator pos:start="395:54" pos:end="395:54">(</operator><name pos:start="395:55" pos:end="395:79"><name pos:start="395:55" pos:end="395:59">block</name><index pos:start="395:60" pos:end="395:79">[<expr pos:start="395:61" pos:end="395:78"><name pos:start="395:61" pos:end="395:61">k</name> <operator pos:start="395:63" pos:end="395:64">&lt;&lt;</operator> <name pos:start="395:66" pos:end="395:78"><name pos:start="395:66" pos:end="395:66">v</name><operator pos:start="395:67" pos:end="395:68">-&gt;</operator><name pos:start="395:69" pos:end="395:78">top_blk_sh</name></name></expr>]</index></name> <operator pos:start="395:81" pos:end="395:81">&lt;</operator> <literal type="number" pos:start="395:83" pos:end="395:83">0</literal><operator pos:start="395:84" pos:end="395:84">)</operator></expr> ?</condition><then pos:start="395:88" pos:end="395:94"> <expr pos:start="395:88" pos:end="395:94"><operator pos:start="395:88" pos:end="395:88">-</operator><name pos:start="395:89" pos:end="395:94">mquant</name></expr> </then><else pos:start="395:96" pos:end="395:103">: <expr pos:start="395:98" pos:end="395:103"><name pos:start="395:98" pos:end="395:103">mquant</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="401:13" pos:end="401:19"><expr pos:start="401:13" pos:end="401:18"><name pos:start="401:13" pos:end="401:13">i</name> <operator pos:start="401:15" pos:end="401:15">=</operator> <literal type="number" pos:start="401:17" pos:end="401:18">63</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="407:5" pos:end="407:31"><expr pos:start="407:5" pos:end="407:30"><name pos:start="407:5" pos:end="407:26"><name pos:start="407:5" pos:end="407:5">s</name><operator pos:start="407:6" pos:end="407:7">-&gt;</operator><name pos:start="407:8" pos:end="407:23">block_last_index</name><index pos:start="407:24" pos:end="407:26">[<expr pos:start="407:25" pos:end="407:25"><name pos:start="407:25" pos:end="407:25">n</name></expr>]</index></name> <operator pos:start="407:28" pos:end="407:28">=</operator> <name pos:start="407:30" pos:end="407:30">i</name></expr>;</expr_stmt>



    <return pos:start="411:5" pos:end="411:13">return <expr pos:start="411:12" pos:end="411:12"><literal type="number" pos:start="411:12" pos:end="411:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
