<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12164.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:19">dec_mul</name><parameter_list pos:start="1:20" pos:end="1:37">(<parameter pos:start="1:21" pos:end="1:36"><decl pos:start="1:21" pos:end="1:36"><type pos:start="1:21" pos:end="1:34"><name pos:start="1:21" pos:end="1:32">DisasContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:36">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:5">

    <if_stmt pos:start="5:5" pos:end="15:5"><if pos:start="5:5" pos:end="11:5">if <condition pos:start="5:8" pos:end="5:32">(<expr pos:start="5:9" pos:end="5:31"><name pos:start="5:9" pos:end="5:18"><name pos:start="5:9" pos:end="5:10">dc</name><operator pos:start="5:11" pos:end="5:12">-&gt;</operator><name pos:start="5:13" pos:end="5:18">format</name></name> <operator pos:start="5:20" pos:end="5:21">==</operator> <name pos:start="5:23" pos:end="5:31">OP_FMT_RI</name></expr>)</condition> <block pos:start="5:34" pos:end="11:5">{<block_content pos:start="7:9" pos:end="9:44">

        <expr_stmt pos:start="7:9" pos:end="9:44"><expr pos:start="7:9" pos:end="9:43"><call pos:start="7:9" pos:end="9:43"><name pos:start="7:9" pos:end="7:15">LOG_DIS</name><argument_list pos:start="7:16" pos:end="9:43">(<argument pos:start="7:17" pos:end="7:37"><expr pos:start="7:17" pos:end="7:37"><literal type="string" pos:start="7:17" pos:end="7:37">"muli r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="7:40" pos:end="7:45"><expr pos:start="7:40" pos:end="7:45"><name pos:start="7:40" pos:end="7:45"><name pos:start="7:40" pos:end="7:41">dc</name><operator pos:start="7:42" pos:end="7:43">-&gt;</operator><name pos:start="7:44" pos:end="7:45">r0</name></name></expr></argument>, <argument pos:start="7:48" pos:end="7:53"><expr pos:start="7:48" pos:end="7:53"><name pos:start="7:48" pos:end="7:53"><name pos:start="7:48" pos:end="7:49">dc</name><operator pos:start="7:50" pos:end="7:51">-&gt;</operator><name pos:start="7:52" pos:end="7:53">r1</name></name></expr></argument>,

                <argument pos:start="9:17" pos:end="9:42"><expr pos:start="9:17" pos:end="9:42"><call pos:start="9:17" pos:end="9:42"><name pos:start="9:17" pos:end="9:27">sign_extend</name><argument_list pos:start="9:28" pos:end="9:42">(<argument pos:start="9:29" pos:end="9:37"><expr pos:start="9:29" pos:end="9:37"><name pos:start="9:29" pos:end="9:37"><name pos:start="9:29" pos:end="9:30">dc</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:37">imm16</name></name></expr></argument>, <argument pos:start="9:40" pos:end="9:41"><expr pos:start="9:40" pos:end="9:41"><literal type="number" pos:start="9:40" pos:end="9:41">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="11:7" pos:end="15:5">else <block pos:start="11:12" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:63">

        <expr_stmt pos:start="13:9" pos:end="13:63"><expr pos:start="13:9" pos:end="13:62"><call pos:start="13:9" pos:end="13:62"><name pos:start="13:9" pos:end="13:15">LOG_DIS</name><argument_list pos:start="13:16" pos:end="13:62">(<argument pos:start="13:17" pos:end="13:37"><expr pos:start="13:17" pos:end="13:37"><literal type="string" pos:start="13:17" pos:end="13:37">"mul r%d, r%d, r%d\n"</literal></expr></argument>, <argument pos:start="13:40" pos:end="13:45"><expr pos:start="13:40" pos:end="13:45"><name pos:start="13:40" pos:end="13:45"><name pos:start="13:40" pos:end="13:41">dc</name><operator pos:start="13:42" pos:end="13:43">-&gt;</operator><name pos:start="13:44" pos:end="13:45">r2</name></name></expr></argument>, <argument pos:start="13:48" pos:end="13:53"><expr pos:start="13:48" pos:end="13:53"><name pos:start="13:48" pos:end="13:53"><name pos:start="13:48" pos:end="13:49">dc</name><operator pos:start="13:50" pos:end="13:51">-&gt;</operator><name pos:start="13:52" pos:end="13:53">r0</name></name></expr></argument>, <argument pos:start="13:56" pos:end="13:61"><expr pos:start="13:56" pos:end="13:61"><name pos:start="13:56" pos:end="13:61"><name pos:start="13:56" pos:end="13:57">dc</name><operator pos:start="13:58" pos:end="13:59">-&gt;</operator><name pos:start="13:60" pos:end="13:61">r1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:53">(<expr pos:start="19:9" pos:end="19:52"><operator pos:start="19:9" pos:end="19:9">!</operator><operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:27"><name pos:start="19:11" pos:end="19:12">dc</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:17">env</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:27">features</name></name> <operator pos:start="19:29" pos:end="19:29">&amp;</operator> <name pos:start="19:31" pos:end="19:51">LM32_FEATURE_MULTIPLY</name><operator pos:start="19:52" pos:end="19:52">)</operator></expr>)</condition> <block pos:start="19:55" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:69">

        <expr_stmt pos:start="21:9" pos:end="21:69"><expr pos:start="21:9" pos:end="21:68"><call pos:start="21:9" pos:end="21:68"><name pos:start="21:9" pos:end="21:17">cpu_abort</name><argument_list pos:start="21:18" pos:end="21:68">(<argument pos:start="21:19" pos:end="21:25"><expr pos:start="21:19" pos:end="21:25"><name pos:start="21:19" pos:end="21:25"><name pos:start="21:19" pos:end="21:20">dc</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:25">env</name></name></expr></argument>, <argument pos:start="21:28" pos:end="21:67"><expr pos:start="21:28" pos:end="21:67"><literal type="string" pos:start="21:28" pos:end="21:67">"hardware multiplier is not available\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:32">(<expr pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:10">dc</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:18">format</name></name> <operator pos:start="27:20" pos:end="27:21">==</operator> <name pos:start="27:23" pos:end="27:31">OP_FMT_RI</name></expr>)</condition> <block pos:start="27:34" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:44">

        <expr_stmt pos:start="29:9" pos:end="31:44"><expr pos:start="29:9" pos:end="31:43"><call pos:start="29:9" pos:end="31:43"><name pos:start="29:9" pos:end="29:23">tcg_gen_muli_tl</name><argument_list pos:start="29:24" pos:end="31:43">(<argument pos:start="29:25" pos:end="29:37"><expr pos:start="29:25" pos:end="29:37"><name pos:start="29:25" pos:end="29:37"><name pos:start="29:25" pos:end="29:29">cpu_R</name><index pos:start="29:30" pos:end="29:37">[<expr pos:start="29:31" pos:end="29:36"><name pos:start="29:31" pos:end="29:36"><name pos:start="29:31" pos:end="29:32">dc</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:36">r1</name></name></expr>]</index></name></expr></argument>, <argument pos:start="29:40" pos:end="29:52"><expr pos:start="29:40" pos:end="29:52"><name pos:start="29:40" pos:end="29:52"><name pos:start="29:40" pos:end="29:44">cpu_R</name><index pos:start="29:45" pos:end="29:52">[<expr pos:start="29:46" pos:end="29:51"><name pos:start="29:46" pos:end="29:51"><name pos:start="29:46" pos:end="29:47">dc</name><operator pos:start="29:48" pos:end="29:49">-&gt;</operator><name pos:start="29:50" pos:end="29:51">r0</name></name></expr>]</index></name></expr></argument>,

                <argument pos:start="31:17" pos:end="31:42"><expr pos:start="31:17" pos:end="31:42"><call pos:start="31:17" pos:end="31:42"><name pos:start="31:17" pos:end="31:27">sign_extend</name><argument_list pos:start="31:28" pos:end="31:42">(<argument pos:start="31:29" pos:end="31:37"><expr pos:start="31:29" pos:end="31:37"><name pos:start="31:29" pos:end="31:37"><name pos:start="31:29" pos:end="31:30">dc</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:37">imm16</name></name></expr></argument>, <argument pos:start="31:40" pos:end="31:41"><expr pos:start="31:40" pos:end="31:41"><literal type="number" pos:start="31:40" pos:end="31:41">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="37:5">else <block pos:start="33:12" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:68">

        <expr_stmt pos:start="35:9" pos:end="35:68"><expr pos:start="35:9" pos:end="35:67"><call pos:start="35:9" pos:end="35:67"><name pos:start="35:9" pos:end="35:22">tcg_gen_mul_tl</name><argument_list pos:start="35:23" pos:end="35:67">(<argument pos:start="35:24" pos:end="35:36"><expr pos:start="35:24" pos:end="35:36"><name pos:start="35:24" pos:end="35:36"><name pos:start="35:24" pos:end="35:28">cpu_R</name><index pos:start="35:29" pos:end="35:36">[<expr pos:start="35:30" pos:end="35:35"><name pos:start="35:30" pos:end="35:35"><name pos:start="35:30" pos:end="35:31">dc</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:35">r2</name></name></expr>]</index></name></expr></argument>, <argument pos:start="35:39" pos:end="35:51"><expr pos:start="35:39" pos:end="35:51"><name pos:start="35:39" pos:end="35:51"><name pos:start="35:39" pos:end="35:43">cpu_R</name><index pos:start="35:44" pos:end="35:51">[<expr pos:start="35:45" pos:end="35:50"><name pos:start="35:45" pos:end="35:50"><name pos:start="35:45" pos:end="35:46">dc</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:50">r0</name></name></expr>]</index></name></expr></argument>, <argument pos:start="35:54" pos:end="35:66"><expr pos:start="35:54" pos:end="35:66"><name pos:start="35:54" pos:end="35:66"><name pos:start="35:54" pos:end="35:58">cpu_R</name><index pos:start="35:59" pos:end="35:66">[<expr pos:start="35:60" pos:end="35:65"><name pos:start="35:60" pos:end="35:65"><name pos:start="35:60" pos:end="35:61">dc</name><operator pos:start="35:62" pos:end="35:63">-&gt;</operator><name pos:start="35:64" pos:end="35:65">r1</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
