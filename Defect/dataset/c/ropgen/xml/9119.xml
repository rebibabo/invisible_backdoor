<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9119.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">draw_curves</name><parameter_list pos:start="1:24" pos:end="1:81">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:39">AVFilterContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">ctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:66"><decl pos:start="1:47" pos:end="1:66"><type pos:start="1:47" pos:end="1:66"><name pos:start="1:47" pos:end="1:58">AVFilterLink</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:66">inlink</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:80"><decl pos:start="1:69" pos:end="1:80"><type pos:start="1:69" pos:end="1:80"><name pos:start="1:69" pos:end="1:75">AVFrame</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:80">out</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:20">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:26">AudioNEqualizerContext</name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:29">s</name> <init pos:start="5:31" pos:end="5:41">= <expr pos:start="5:33" pos:end="5:41"><name pos:start="5:33" pos:end="5:41"><name pos:start="5:33" pos:end="5:35">ctx</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:41">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:16">colors</name></decl>, <decl pos:start="7:19" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:24">color</name></decl>, <decl pos:start="7:27" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:34">saveptr</name> <init pos:start="7:36" pos:end="7:41">= <expr pos:start="7:38" pos:end="7:41"><name pos:start="7:38" pos:end="7:41">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">ch</name></decl>, <decl pos:start="9:13" pos:end="9:13"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:13">i</name></decl>, <decl pos:start="9:16" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:16">n</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:10">colors</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:33"><name pos:start="13:14" pos:end="13:22">av_strdup</name><argument_list pos:start="13:23" pos:end="13:33">(<argument pos:start="13:24" pos:end="13:32"><expr pos:start="13:24" pos:end="13:32"><name pos:start="13:24" pos:end="13:32"><name pos:start="13:24" pos:end="13:24">s</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:32">colors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:15"><if pos:start="15:5" pos:end="17:15">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:15">colors</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:15"><block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:53"><expr pos:start="21:5" pos:end="21:52"><call pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:10">memset</name><argument_list pos:start="21:11" pos:end="21:52">(<argument pos:start="21:12" pos:end="21:23"><expr pos:start="21:12" pos:end="21:23"><name pos:start="21:12" pos:end="21:23"><name pos:start="21:12" pos:end="21:14">out</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:20">data</name><index pos:start="21:21" pos:end="21:23">[<expr pos:start="21:22" pos:end="21:22"><literal type="number" pos:start="21:22" pos:end="21:22">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr></argument>, <argument pos:start="21:29" pos:end="21:51"><expr pos:start="21:29" pos:end="21:51"><name pos:start="21:29" pos:end="21:32"><name pos:start="21:29" pos:end="21:29">s</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:32">h</name></name> <operator pos:start="21:34" pos:end="21:34">*</operator> <name pos:start="21:36" pos:end="21:51"><name pos:start="21:36" pos:end="21:38">out</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:48">linesize</name><index pos:start="21:49" pos:end="21:51">[<expr pos:start="21:50" pos:end="21:50"><literal type="number" pos:start="21:50" pos:end="21:50">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="115:5">for <control pos:start="25:9" pos:end="25:45">(<init pos:start="25:10" pos:end="25:16"><expr pos:start="25:10" pos:end="25:15"><name pos:start="25:10" pos:end="25:11">ch</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>;</init> <condition pos:start="25:18" pos:end="25:39"><expr pos:start="25:18" pos:end="25:38"><name pos:start="25:18" pos:end="25:19">ch</name> <operator pos:start="25:21" pos:end="25:21">&lt;</operator> <name pos:start="25:23" pos:end="25:38"><name pos:start="25:23" pos:end="25:28">inlink</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:38">channels</name></name></expr>;</condition> <incr pos:start="25:41" pos:end="25:44"><expr pos:start="25:41" pos:end="25:44"><name pos:start="25:41" pos:end="25:42">ch</name><operator pos:start="25:43" pos:end="25:44">++</operator></expr></incr>)</control> <block pos:start="25:47" pos:end="115:5">{<block_content pos:start="27:9" pos:end="113:9">

        <decl_stmt pos:start="27:9" pos:end="27:51"><decl pos:start="27:9" pos:end="27:50"><type pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:15">uint8_t</name></type> <name pos:start="27:17" pos:end="27:21"><name pos:start="27:17" pos:end="27:18">fg</name><index pos:start="27:19" pos:end="27:21">[<expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">4</literal></expr>]</index></name> <init pos:start="27:23" pos:end="27:50">= <expr pos:start="27:25" pos:end="27:50"><block pos:start="27:25" pos:end="27:50">{ <expr pos:start="27:27" pos:end="27:30"><literal type="number" pos:start="27:27" pos:end="27:30">0xff</literal></expr>, <expr pos:start="27:33" pos:end="27:36"><literal type="number" pos:start="27:33" pos:end="27:36">0xff</literal></expr>, <expr pos:start="27:39" pos:end="27:42"><literal type="number" pos:start="27:39" pos:end="27:42">0xff</literal></expr>, <expr pos:start="27:45" pos:end="27:48"><literal type="number" pos:start="27:45" pos:end="27:48">0xff</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:24"><decl pos:start="29:9" pos:end="29:23"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:18">prev_v</name> <init pos:start="29:20" pos:end="29:23">= <expr pos:start="29:22" pos:end="29:23"><operator pos:start="29:22" pos:end="29:22">-</operator><literal type="number" pos:start="29:23" pos:end="29:23">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:17"><decl pos:start="31:9" pos:end="31:16"><type pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:14">double</name></type> <name pos:start="31:16" pos:end="31:16">f</name></decl>;</decl_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:67"><expr pos:start="35:9" pos:end="35:66"><name pos:start="35:9" pos:end="35:13">color</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:66"><name pos:start="35:17" pos:end="35:25">av_strtok</name><argument_list pos:start="35:26" pos:end="35:66">(<argument pos:start="35:27" pos:end="35:49"><expr pos:start="35:27" pos:end="35:49"><ternary pos:start="35:27" pos:end="35:49"><condition pos:start="35:27" pos:end="35:35"><expr pos:start="35:27" pos:end="35:33"><name pos:start="35:27" pos:end="35:28">ch</name> <operator pos:start="35:30" pos:end="35:31">==</operator> <literal type="number" pos:start="35:33" pos:end="35:33">0</literal></expr> ?</condition><then pos:start="35:37" pos:end="35:42"> <expr pos:start="35:37" pos:end="35:42"><name pos:start="35:37" pos:end="35:42">colors</name></expr> </then><else pos:start="35:44" pos:end="35:49">: <expr pos:start="35:46" pos:end="35:49"><name pos:start="35:46" pos:end="35:49">NULL</name></expr></else></ternary></expr></argument>, <argument pos:start="35:52" pos:end="35:55"><expr pos:start="35:52" pos:end="35:55"><literal type="string" pos:start="35:52" pos:end="35:55">" |"</literal></expr></argument>, <argument pos:start="35:58" pos:end="35:65"><expr pos:start="35:58" pos:end="35:65"><operator pos:start="35:58" pos:end="35:58">&amp;</operator><name pos:start="35:59" pos:end="35:65">saveptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="39:47"><if pos:start="37:9" pos:end="39:47">if <condition pos:start="37:12" pos:end="37:18">(<expr pos:start="37:13" pos:end="37:17"><name pos:start="37:13" pos:end="37:17">color</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:47"><block_content pos:start="39:13" pos:end="39:47">

            <expr_stmt pos:start="39:13" pos:end="39:47"><expr pos:start="39:13" pos:end="39:46"><call pos:start="39:13" pos:end="39:46"><name pos:start="39:13" pos:end="39:26">av_parse_color</name><argument_list pos:start="39:27" pos:end="39:46">(<argument pos:start="39:28" pos:end="39:29"><expr pos:start="39:28" pos:end="39:29"><name pos:start="39:28" pos:end="39:29">fg</name></expr></argument>, <argument pos:start="39:32" pos:end="39:36"><expr pos:start="39:32" pos:end="39:36"><name pos:start="39:32" pos:end="39:36">color</name></expr></argument>, <argument pos:start="39:39" pos:end="39:40"><expr pos:start="39:39" pos:end="39:40"><operator pos:start="39:39" pos:end="39:39">-</operator><literal type="number" pos:start="39:40" pos:end="39:40">1</literal></expr></argument>, <argument pos:start="39:43" pos:end="39:45"><expr pos:start="39:43" pos:end="39:45"><name pos:start="39:43" pos:end="39:45">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="43:9" pos:end="113:9">for <control pos:start="43:13" pos:end="43:34">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">f</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:29"><expr pos:start="43:21" pos:end="43:28"><name pos:start="43:21" pos:end="43:21">f</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <name pos:start="43:25" pos:end="43:28"><name pos:start="43:25" pos:end="43:25">s</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:28">w</name></name></expr>;</condition> <incr pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:31">f</name><operator pos:start="43:32" pos:end="43:33">++</operator></expr></incr>)</control> <block pos:start="43:36" pos:end="113:9">{<block_content pos:start="45:13" pos:end="111:23">

            <decl_stmt pos:start="45:13" pos:end="45:29"><decl pos:start="45:13" pos:end="45:28"><type pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:18">double</name> <name pos:start="45:20" pos:end="45:26">complex</name></type> <name pos:start="45:28" pos:end="45:28">z</name></decl>;</decl_stmt>

            <decl_stmt pos:start="47:13" pos:end="47:33"><decl pos:start="47:13" pos:end="47:32"><type pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:18">double</name> <name pos:start="47:20" pos:end="47:26">complex</name></type> <name pos:start="47:28" pos:end="47:28">H</name> <init pos:start="47:30" pos:end="47:32">= <expr pos:start="47:32" pos:end="47:32"><literal type="number" pos:start="47:32" pos:end="47:32">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:21"><decl pos:start="49:13" pos:end="49:20"><type pos:start="49:13" pos:end="49:18"><name pos:start="49:13" pos:end="49:18">double</name></type> <name pos:start="49:20" pos:end="49:20">w</name></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:24"><decl pos:start="51:13" pos:end="51:17"><type pos:start="51:13" pos:end="51:15"><name pos:start="51:13" pos:end="51:15">int</name></type> <name pos:start="51:17" pos:end="51:17">v</name></decl>, <decl pos:start="51:20" pos:end="51:20"><type ref="prev" pos:start="51:13" pos:end="51:15"/><name pos:start="51:20" pos:end="51:20">y</name></decl>, <decl pos:start="51:23" pos:end="51:23"><type ref="prev" pos:start="51:13" pos:end="51:15"/><name pos:start="51:23" pos:end="51:23">x</name></decl>;</decl_stmt>



            <expr_stmt pos:start="55:13" pos:end="55:78"><expr pos:start="55:13" pos:end="55:77"><name pos:start="55:13" pos:end="55:13">w</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:20">M_PI</name> <operator pos:start="55:22" pos:end="55:22">*</operator> <operator pos:start="55:24" pos:end="55:24">(</operator><ternary pos:start="55:25" pos:end="55:63"><condition pos:start="55:25" pos:end="55:35"><expr pos:start="55:25" pos:end="55:33"><name pos:start="55:25" pos:end="55:33"><name pos:start="55:25" pos:end="55:25">s</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:33">fscale</name></name></expr> ?</condition><then pos:start="55:37" pos:end="55:59"> <expr pos:start="55:37" pos:end="55:59"><call pos:start="55:37" pos:end="55:59"><name pos:start="55:37" pos:end="55:39">pow</name><argument_list pos:start="55:40" pos:end="55:59">(<argument pos:start="55:41" pos:end="55:48"><expr pos:start="55:41" pos:end="55:48"><name pos:start="55:41" pos:end="55:44"><name pos:start="55:41" pos:end="55:41">s</name><operator pos:start="55:42" pos:end="55:43">-&gt;</operator><name pos:start="55:44" pos:end="55:44">w</name></name> <operator pos:start="55:46" pos:end="55:46">-</operator> <literal type="number" pos:start="55:48" pos:end="55:48">1</literal></expr></argument>, <argument pos:start="55:51" pos:end="55:58"><expr pos:start="55:51" pos:end="55:58"><name pos:start="55:51" pos:end="55:51">f</name> <operator pos:start="55:53" pos:end="55:53">/</operator> <name pos:start="55:55" pos:end="55:58"><name pos:start="55:55" pos:end="55:55">s</name><operator pos:start="55:56" pos:end="55:57">-&gt;</operator><name pos:start="55:58" pos:end="55:58">w</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="55:61" pos:end="55:63">: <expr pos:start="55:63" pos:end="55:63"><name pos:start="55:63" pos:end="55:63">f</name></expr></else></ternary><operator pos:start="55:64" pos:end="55:64">)</operator> <operator pos:start="55:66" pos:end="55:66">/</operator> <operator pos:start="55:68" pos:end="55:68">(</operator><name pos:start="55:69" pos:end="55:72"><name pos:start="55:69" pos:end="55:69">s</name><operator pos:start="55:70" pos:end="55:71">-&gt;</operator><name pos:start="55:72" pos:end="55:72">w</name></name> <operator pos:start="55:74" pos:end="55:74">-</operator> <literal type="number" pos:start="55:76" pos:end="55:76">1</literal><operator pos:start="55:77" pos:end="55:77">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:33"><expr pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:13">z</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <literal type="number" pos:start="57:17" pos:end="57:18">1.</literal> <operator pos:start="57:20" pos:end="57:20">/</operator> <call pos:start="57:22" pos:end="57:32"><name pos:start="57:22" pos:end="57:25">cexp</name><argument_list pos:start="57:26" pos:end="57:32">(<argument pos:start="57:27" pos:end="57:31"><expr pos:start="57:27" pos:end="57:31"><name pos:start="57:27" pos:end="57:27">I</name> <operator pos:start="57:29" pos:end="57:29">*</operator> <name pos:start="57:31" pos:end="57:31">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="61:13" pos:end="83:13">for <control pos:start="61:17" pos:end="61:47">(<init pos:start="61:18" pos:end="61:23"><expr pos:start="61:18" pos:end="61:22"><name pos:start="61:18" pos:end="61:18">n</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr>;</init> <condition pos:start="61:25" pos:end="61:42"><expr pos:start="61:25" pos:end="61:41"><name pos:start="61:25" pos:end="61:25">n</name> <operator pos:start="61:27" pos:end="61:27">&lt;</operator> <name pos:start="61:29" pos:end="61:41"><name pos:start="61:29" pos:end="61:29">s</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:41">nb_filters</name></name></expr>;</condition> <incr pos:start="61:44" pos:end="61:46"><expr pos:start="61:44" pos:end="61:46"><name pos:start="61:44" pos:end="61:44">n</name><operator pos:start="61:45" pos:end="61:46">++</operator></expr></incr>)</control> <block pos:start="61:49" pos:end="83:13">{<block_content pos:start="63:17" pos:end="81:17">

                <if_stmt pos:start="63:17" pos:end="67:29"><if pos:start="63:17" pos:end="67:29">if <condition pos:start="63:20" pos:end="65:41">(<expr pos:start="63:21" pos:end="65:40"><name pos:start="63:21" pos:end="63:33"><name pos:start="63:21" pos:end="63:21">s</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:30">filters</name><index pos:start="63:31" pos:end="63:33">[<expr pos:start="63:32" pos:end="63:32"><name pos:start="63:32" pos:end="63:32">n</name></expr>]</index></name><operator pos:start="63:34" pos:end="63:34">.</operator><name pos:start="63:35" pos:end="63:41">channel</name> <operator pos:start="63:43" pos:end="63:44">!=</operator> <name pos:start="63:46" pos:end="63:47">ch</name> <operator pos:start="63:49" pos:end="63:50">||</operator>

                    <name pos:start="65:21" pos:end="65:33"><name pos:start="65:21" pos:end="65:21">s</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:30">filters</name><index pos:start="65:31" pos:end="65:33">[<expr pos:start="65:32" pos:end="65:32"><name pos:start="65:32" pos:end="65:32">n</name></expr>]</index></name><operator pos:start="65:34" pos:end="65:34">.</operator><name pos:start="65:35" pos:end="65:40">ignore</name></expr>)</condition><block type="pseudo" pos:start="67:21" pos:end="67:29"><block_content pos:start="67:21" pos:end="67:29">

                    <continue pos:start="67:21" pos:end="67:29">continue;</continue></block_content></block></if></if_stmt>



                <for pos:start="71:17" pos:end="81:17">for <control pos:start="71:21" pos:end="71:54">(<init pos:start="71:22" pos:end="71:27"><expr pos:start="71:22" pos:end="71:26"><name pos:start="71:22" pos:end="71:22">i</name> <operator pos:start="71:24" pos:end="71:24">=</operator> <literal type="number" pos:start="71:26" pos:end="71:26">0</literal></expr>;</init> <condition pos:start="71:29" pos:end="71:49"><expr pos:start="71:29" pos:end="71:48"><name pos:start="71:29" pos:end="71:29">i</name> <operator pos:start="71:31" pos:end="71:31">&lt;</operator> <name pos:start="71:33" pos:end="71:44">FILTER_ORDER</name> <operator pos:start="71:46" pos:end="71:46">/</operator> <literal type="number" pos:start="71:48" pos:end="71:48">2</literal></expr>;</condition> <incr pos:start="71:51" pos:end="71:53"><expr pos:start="71:51" pos:end="71:53"><name pos:start="71:51" pos:end="71:51">i</name><operator pos:start="71:52" pos:end="71:53">++</operator></expr></incr>)</control> <block pos:start="71:56" pos:end="81:17">{<block_content pos:start="73:21" pos:end="79:89">

                    <decl_stmt pos:start="73:21" pos:end="73:61"><decl pos:start="73:21" pos:end="73:60"><type pos:start="73:21" pos:end="73:31"><name pos:start="73:21" pos:end="73:29">FoSection</name> <modifier pos:start="73:31" pos:end="73:31">*</modifier></type><name pos:start="73:32" pos:end="73:32">S</name> <init pos:start="73:34" pos:end="73:60">= <expr pos:start="73:36" pos:end="73:60"><operator pos:start="73:36" pos:end="73:36">&amp;</operator><name pos:start="73:37" pos:end="73:49"><name pos:start="73:37" pos:end="73:37">s</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:46">filters</name><index pos:start="73:47" pos:end="73:49">[<expr pos:start="73:48" pos:end="73:48"><name pos:start="73:48" pos:end="73:48">n</name></expr>]</index></name><operator pos:start="73:50" pos:end="73:50">.</operator><name pos:start="73:51" pos:end="73:60"><name pos:start="73:51" pos:end="73:57">section</name><index pos:start="73:58" pos:end="73:60">[<expr pos:start="73:59" pos:end="73:59"><name pos:start="73:59" pos:end="73:59">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="77:21" pos:end="79:89"><expr pos:start="77:21" pos:end="79:88"><name pos:start="77:21" pos:end="77:21">H</name> <operator pos:start="77:23" pos:end="77:24">*=</operator> <operator pos:start="77:26" pos:end="77:26">(</operator><operator pos:start="77:27" pos:end="77:27">(</operator><operator pos:start="77:28" pos:end="77:28">(</operator><operator pos:start="77:29" pos:end="77:29">(</operator><operator pos:start="77:30" pos:end="77:30">(</operator><name pos:start="77:31" pos:end="77:35"><name pos:start="77:31" pos:end="77:31">S</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:35">b4</name></name> <operator pos:start="77:37" pos:end="77:37">*</operator> <name pos:start="77:39" pos:end="77:39">z</name> <operator pos:start="77:41" pos:end="77:41">+</operator> <name pos:start="77:43" pos:end="77:47"><name pos:start="77:43" pos:end="77:43">S</name><operator pos:start="77:44" pos:end="77:45">-&gt;</operator><name pos:start="77:46" pos:end="77:47">b3</name></name><operator pos:start="77:48" pos:end="77:48">)</operator> <operator pos:start="77:50" pos:end="77:50">*</operator> <name pos:start="77:52" pos:end="77:52">z</name> <operator pos:start="77:54" pos:end="77:54">+</operator> <name pos:start="77:56" pos:end="77:60"><name pos:start="77:56" pos:end="77:56">S</name><operator pos:start="77:57" pos:end="77:58">-&gt;</operator><name pos:start="77:59" pos:end="77:60">b2</name></name><operator pos:start="77:61" pos:end="77:61">)</operator> <operator pos:start="77:63" pos:end="77:63">*</operator> <name pos:start="77:65" pos:end="77:65">z</name> <operator pos:start="77:67" pos:end="77:67">+</operator> <name pos:start="77:69" pos:end="77:73"><name pos:start="77:69" pos:end="77:69">S</name><operator pos:start="77:70" pos:end="77:71">-&gt;</operator><name pos:start="77:72" pos:end="77:73">b1</name></name><operator pos:start="77:74" pos:end="77:74">)</operator> <operator pos:start="77:76" pos:end="77:76">*</operator> <name pos:start="77:78" pos:end="77:78">z</name> <operator pos:start="77:80" pos:end="77:80">+</operator> <name pos:start="77:82" pos:end="77:86"><name pos:start="77:82" pos:end="77:82">S</name><operator pos:start="77:83" pos:end="77:84">-&gt;</operator><name pos:start="77:85" pos:end="77:86">b0</name></name><operator pos:start="77:87" pos:end="77:87">)</operator> <operator pos:start="77:89" pos:end="77:89">/</operator>

                          <operator pos:start="79:27" pos:end="79:27">(</operator><operator pos:start="79:28" pos:end="79:28">(</operator><operator pos:start="79:29" pos:end="79:29">(</operator><operator pos:start="79:30" pos:end="79:30">(</operator><name pos:start="79:31" pos:end="79:35"><name pos:start="79:31" pos:end="79:31">S</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:35">a4</name></name> <operator pos:start="79:37" pos:end="79:37">*</operator> <name pos:start="79:39" pos:end="79:39">z</name> <operator pos:start="79:41" pos:end="79:41">+</operator> <name pos:start="79:43" pos:end="79:47"><name pos:start="79:43" pos:end="79:43">S</name><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:47">a3</name></name><operator pos:start="79:48" pos:end="79:48">)</operator> <operator pos:start="79:50" pos:end="79:50">*</operator> <name pos:start="79:52" pos:end="79:52">z</name> <operator pos:start="79:54" pos:end="79:54">+</operator> <name pos:start="79:56" pos:end="79:60"><name pos:start="79:56" pos:end="79:56">S</name><operator pos:start="79:57" pos:end="79:58">-&gt;</operator><name pos:start="79:59" pos:end="79:60">a2</name></name><operator pos:start="79:61" pos:end="79:61">)</operator> <operator pos:start="79:63" pos:end="79:63">*</operator> <name pos:start="79:65" pos:end="79:65">z</name> <operator pos:start="79:67" pos:end="79:67">+</operator> <name pos:start="79:69" pos:end="79:73"><name pos:start="79:69" pos:end="79:69">S</name><operator pos:start="79:70" pos:end="79:71">-&gt;</operator><name pos:start="79:72" pos:end="79:73">a1</name></name><operator pos:start="79:74" pos:end="79:74">)</operator> <operator pos:start="79:76" pos:end="79:76">*</operator> <name pos:start="79:78" pos:end="79:78">z</name> <operator pos:start="79:80" pos:end="79:80">+</operator> <name pos:start="79:82" pos:end="79:86"><name pos:start="79:82" pos:end="79:82">S</name><operator pos:start="79:83" pos:end="79:84">-&gt;</operator><name pos:start="79:85" pos:end="79:86">a0</name></name><operator pos:start="79:87" pos:end="79:87">)</operator><operator pos:start="79:88" pos:end="79:88">)</operator></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>



            <expr_stmt pos:start="87:13" pos:end="87:86"><expr pos:start="87:13" pos:end="87:85"><name pos:start="87:13" pos:end="87:13">v</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <call pos:start="87:17" pos:end="87:85"><name pos:start="87:17" pos:end="87:23">av_clip</name><argument_list pos:start="87:24" pos:end="87:85">(<argument pos:start="87:25" pos:end="87:71"><expr pos:start="87:25" pos:end="87:71"><operator pos:start="87:25" pos:end="87:25">(</operator><literal type="number" pos:start="87:26" pos:end="87:29">1.</literal> <operator pos:start="87:29" pos:end="87:29">+</operator> <operator pos:start="87:31" pos:end="87:31">-</operator><literal type="number" pos:start="87:32" pos:end="87:33">20</literal> <operator pos:start="87:35" pos:end="87:35">*</operator> <call pos:start="87:37" pos:end="87:50"><name pos:start="87:37" pos:end="87:41">log10</name><argument_list pos:start="87:42" pos:end="87:50">(<argument pos:start="87:43" pos:end="87:49"><expr pos:start="87:43" pos:end="87:49"><call pos:start="87:43" pos:end="87:49"><name pos:start="87:43" pos:end="87:46">cabs</name><argument_list pos:start="87:47" pos:end="87:49">(<argument pos:start="87:48" pos:end="87:48"><expr pos:start="87:48" pos:end="87:48"><name pos:start="87:48" pos:end="87:48">H</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="87:52" pos:end="87:52">/</operator> <name pos:start="87:54" pos:end="87:59"><name pos:start="87:54" pos:end="87:54">s</name><operator pos:start="87:55" pos:end="87:56">-&gt;</operator><name pos:start="87:57" pos:end="87:59">mag</name></name><operator pos:start="87:60" pos:end="87:60">)</operator> <operator pos:start="87:62" pos:end="87:62">*</operator> <name pos:start="87:64" pos:end="87:67"><name pos:start="87:64" pos:end="87:64">s</name><operator pos:start="87:65" pos:end="87:66">-&gt;</operator><name pos:start="87:67" pos:end="87:67">h</name></name> <operator pos:start="87:69" pos:end="87:69">/</operator> <literal type="number" pos:start="87:71" pos:end="87:71">2</literal></expr></argument>, <argument pos:start="87:74" pos:end="87:74"><expr pos:start="87:74" pos:end="87:74"><literal type="number" pos:start="87:74" pos:end="87:74">0</literal></expr></argument>, <argument pos:start="87:77" pos:end="87:84"><expr pos:start="87:77" pos:end="87:84"><name pos:start="87:77" pos:end="87:80"><name pos:start="87:77" pos:end="87:77">s</name><operator pos:start="87:78" pos:end="87:79">-&gt;</operator><name pos:start="87:80" pos:end="87:80">h</name></name> <operator pos:start="87:82" pos:end="87:82">-</operator> <literal type="number" pos:start="87:84" pos:end="87:84">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:25"><expr pos:start="89:13" pos:end="89:24"><name pos:start="89:13" pos:end="89:13">x</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <call pos:start="89:17" pos:end="89:24"><name pos:start="89:17" pos:end="89:21">lrint</name><argument_list pos:start="89:22" pos:end="89:24">(<argument pos:start="89:23" pos:end="89:23"><expr pos:start="89:23" pos:end="89:23"><name pos:start="89:23" pos:end="89:23">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="93:27"><if pos:start="91:13" pos:end="93:27">if <condition pos:start="91:16" pos:end="91:29">(<expr pos:start="91:17" pos:end="91:28"><name pos:start="91:17" pos:end="91:22">prev_v</name> <operator pos:start="91:24" pos:end="91:25">==</operator> <operator pos:start="91:27" pos:end="91:27">-</operator><literal type="number" pos:start="91:28" pos:end="91:28">1</literal></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:27"><block_content pos:start="93:17" pos:end="93:27">

                <expr_stmt pos:start="93:17" pos:end="93:27"><expr pos:start="93:17" pos:end="93:26"><name pos:start="93:17" pos:end="93:22">prev_v</name> <operator pos:start="93:24" pos:end="93:24">=</operator> <name pos:start="93:26" pos:end="93:26">v</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="95:13" pos:end="107:13"><if pos:start="95:13" pos:end="101:13">if <condition pos:start="95:16" pos:end="95:28">(<expr pos:start="95:17" pos:end="95:27"><name pos:start="95:17" pos:end="95:17">v</name> <operator pos:start="95:19" pos:end="95:20">&lt;=</operator> <name pos:start="95:22" pos:end="95:27">prev_v</name></expr>)</condition> <block pos:start="95:30" pos:end="101:13">{<block_content pos:start="97:17" pos:end="99:86">

                <for pos:start="97:17" pos:end="99:86">for <control pos:start="97:21" pos:end="97:45">(<init pos:start="97:22" pos:end="97:27"><expr pos:start="97:22" pos:end="97:26"><name pos:start="97:22" pos:end="97:22">y</name> <operator pos:start="97:24" pos:end="97:24">=</operator> <name pos:start="97:26" pos:end="97:26">v</name></expr>;</init> <condition pos:start="97:29" pos:end="97:40"><expr pos:start="97:29" pos:end="97:39"><name pos:start="97:29" pos:end="97:29">y</name> <operator pos:start="97:31" pos:end="97:32">&lt;=</operator> <name pos:start="97:34" pos:end="97:39">prev_v</name></expr>;</condition> <incr pos:start="97:42" pos:end="97:44"><expr pos:start="97:42" pos:end="97:44"><name pos:start="97:42" pos:end="97:42">y</name><operator pos:start="97:43" pos:end="97:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="99:21" pos:end="99:86"><block_content pos:start="99:21" pos:end="99:86">

                    <expr_stmt pos:start="99:21" pos:end="99:86"><expr pos:start="99:21" pos:end="99:85"><call pos:start="99:21" pos:end="99:85"><name pos:start="99:21" pos:end="99:27">AV_WL32</name><argument_list pos:start="99:28" pos:end="99:85">(<argument pos:start="99:29" pos:end="99:71"><expr pos:start="99:29" pos:end="99:71"><name pos:start="99:29" pos:end="99:40"><name pos:start="99:29" pos:end="99:31">out</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:37">data</name><index pos:start="99:38" pos:end="99:40">[<expr pos:start="99:39" pos:end="99:39"><literal type="number" pos:start="99:39" pos:end="99:39">0</literal></expr>]</index></name> <operator pos:start="99:42" pos:end="99:42">+</operator> <name pos:start="99:44" pos:end="99:44">y</name> <operator pos:start="99:46" pos:end="99:46">*</operator> <name pos:start="99:48" pos:end="99:63"><name pos:start="99:48" pos:end="99:50">out</name><operator pos:start="99:51" pos:end="99:52">-&gt;</operator><name pos:start="99:53" pos:end="99:60">linesize</name><index pos:start="99:61" pos:end="99:63">[<expr pos:start="99:62" pos:end="99:62"><literal type="number" pos:start="99:62" pos:end="99:62">0</literal></expr>]</index></name> <operator pos:start="99:65" pos:end="99:65">+</operator> <name pos:start="99:67" pos:end="99:67">x</name> <operator pos:start="99:69" pos:end="99:69">*</operator> <literal type="number" pos:start="99:71" pos:end="99:71">4</literal></expr></argument>, <argument pos:start="99:74" pos:end="99:84"><expr pos:start="99:74" pos:end="99:84"><call pos:start="99:74" pos:end="99:84"><name pos:start="99:74" pos:end="99:80">AV_RL32</name><argument_list pos:start="99:81" pos:end="99:84">(<argument pos:start="99:82" pos:end="99:83"><expr pos:start="99:82" pos:end="99:83"><name pos:start="99:82" pos:end="99:83">fg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if> <else pos:start="101:15" pos:end="107:13">else <block pos:start="101:20" pos:end="107:13">{<block_content pos:start="103:17" pos:end="105:86">

                <for pos:start="103:17" pos:end="105:86">for <control pos:start="103:21" pos:end="103:45">(<init pos:start="103:22" pos:end="103:32"><expr pos:start="103:22" pos:end="103:31"><name pos:start="103:22" pos:end="103:22">y</name> <operator pos:start="103:24" pos:end="103:24">=</operator> <name pos:start="103:26" pos:end="103:31">prev_v</name></expr>;</init> <condition pos:start="103:34" pos:end="103:40"><expr pos:start="103:34" pos:end="103:39"><name pos:start="103:34" pos:end="103:34">y</name> <operator pos:start="103:36" pos:end="103:37">&lt;=</operator> <name pos:start="103:39" pos:end="103:39">v</name></expr>;</condition> <incr pos:start="103:42" pos:end="103:44"><expr pos:start="103:42" pos:end="103:44"><name pos:start="103:42" pos:end="103:42">y</name><operator pos:start="103:43" pos:end="103:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="105:21" pos:end="105:86"><block_content pos:start="105:21" pos:end="105:86">

                    <expr_stmt pos:start="105:21" pos:end="105:86"><expr pos:start="105:21" pos:end="105:85"><call pos:start="105:21" pos:end="105:85"><name pos:start="105:21" pos:end="105:27">AV_WL32</name><argument_list pos:start="105:28" pos:end="105:85">(<argument pos:start="105:29" pos:end="105:71"><expr pos:start="105:29" pos:end="105:71"><name pos:start="105:29" pos:end="105:40"><name pos:start="105:29" pos:end="105:31">out</name><operator pos:start="105:32" pos:end="105:33">-&gt;</operator><name pos:start="105:34" pos:end="105:37">data</name><index pos:start="105:38" pos:end="105:40">[<expr pos:start="105:39" pos:end="105:39"><literal type="number" pos:start="105:39" pos:end="105:39">0</literal></expr>]</index></name> <operator pos:start="105:42" pos:end="105:42">+</operator> <name pos:start="105:44" pos:end="105:44">y</name> <operator pos:start="105:46" pos:end="105:46">*</operator> <name pos:start="105:48" pos:end="105:63"><name pos:start="105:48" pos:end="105:50">out</name><operator pos:start="105:51" pos:end="105:52">-&gt;</operator><name pos:start="105:53" pos:end="105:60">linesize</name><index pos:start="105:61" pos:end="105:63">[<expr pos:start="105:62" pos:end="105:62"><literal type="number" pos:start="105:62" pos:end="105:62">0</literal></expr>]</index></name> <operator pos:start="105:65" pos:end="105:65">+</operator> <name pos:start="105:67" pos:end="105:67">x</name> <operator pos:start="105:69" pos:end="105:69">*</operator> <literal type="number" pos:start="105:71" pos:end="105:71">4</literal></expr></argument>, <argument pos:start="105:74" pos:end="105:84"><expr pos:start="105:74" pos:end="105:84"><call pos:start="105:74" pos:end="105:84"><name pos:start="105:74" pos:end="105:80">AV_RL32</name><argument_list pos:start="105:81" pos:end="105:84">(<argument pos:start="105:82" pos:end="105:83"><expr pos:start="105:82" pos:end="105:83"><name pos:start="105:82" pos:end="105:83">fg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="111:13" pos:end="111:23"><expr pos:start="111:13" pos:end="111:22"><name pos:start="111:13" pos:end="111:18">prev_v</name> <operator pos:start="111:20" pos:end="111:20">=</operator> <name pos:start="111:22" pos:end="111:22">v</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="119:5" pos:end="119:20"><expr pos:start="119:5" pos:end="119:19"><call pos:start="119:5" pos:end="119:19"><name pos:start="119:5" pos:end="119:11">av_free</name><argument_list pos:start="119:12" pos:end="119:19">(<argument pos:start="119:13" pos:end="119:18"><expr pos:start="119:13" pos:end="119:18"><name pos:start="119:13" pos:end="119:18">colors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
