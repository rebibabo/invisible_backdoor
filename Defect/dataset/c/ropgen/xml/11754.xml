<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11754.c" pos:tabs="8"><function pos:start="1:1" pos:end="347:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">virtio_load</name><parameter_list pos:start="1:16" pos:end="1:64">(<parameter pos:start="1:17" pos:end="1:34"><decl pos:start="1:17" pos:end="1:34"><type pos:start="1:17" pos:end="1:34"><name pos:start="1:17" pos:end="1:28">VirtIODevice</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:34">vdev</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:47"><decl pos:start="1:37" pos:end="1:47"><type pos:start="1:37" pos:end="1:47"><name pos:start="1:37" pos:end="1:44">QEMUFile</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">f</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:63">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="347:1">{<block_content pos:start="5:5" pos:end="345:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:22">config_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">num</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:21">features</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:55"><decl pos:start="13:5" pos:end="13:54"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">BusState</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:18">qbus</name> <init pos:start="13:20" pos:end="13:54">= <expr pos:start="13:22" pos:end="13:54"><call pos:start="13:22" pos:end="13:54"><name pos:start="13:22" pos:end="13:40">qdev_get_parent_bus</name><argument_list pos:start="13:41" pos:end="13:54">(<argument pos:start="13:42" pos:end="13:53"><expr pos:start="13:42" pos:end="13:53"><call pos:start="13:42" pos:end="13:53"><name pos:start="13:42" pos:end="13:47">DEVICE</name><argument_list pos:start="13:48" pos:end="13:53">(<argument pos:start="13:49" pos:end="13:52"><expr pos:start="13:49" pos:end="13:52"><name pos:start="13:49" pos:end="13:52">vdev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:51"><decl pos:start="15:5" pos:end="15:50"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">VirtioBusClass</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:21">k</name> <init pos:start="15:23" pos:end="15:50">= <expr pos:start="15:25" pos:end="15:50"><call pos:start="15:25" pos:end="15:50"><name pos:start="15:25" pos:end="15:44">VIRTIO_BUS_GET_CLASS</name><argument_list pos:start="15:45" pos:end="15:50">(<argument pos:start="15:46" pos:end="15:49"><expr pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:49">qbus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:59"><decl pos:start="17:5" pos:end="17:58"><type pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:21">VirtioDeviceClass</name> <modifier pos:start="17:23" pos:end="17:23">*</modifier></type><name pos:start="17:24" pos:end="17:26">vdc</name> <init pos:start="17:28" pos:end="17:58">= <expr pos:start="17:30" pos:end="17:58"><call pos:start="17:30" pos:end="17:58"><name pos:start="17:30" pos:end="17:52">VIRTIO_DEVICE_GET_CLASS</name><argument_list pos:start="17:53" pos:end="17:58">(<argument pos:start="17:54" pos:end="17:57"><expr pos:start="17:54" pos:end="17:57"><name pos:start="17:54" pos:end="17:57">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="27:7">/*

     * We poison the endianness to ensure it does not get used before

     * subsections have been loaded.

     */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:55"><expr pos:start="29:5" pos:end="29:54"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:8">vdev</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:23">device_endian</name></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <name pos:start="29:27" pos:end="29:54">VIRTIO_DEVICE_ENDIAN_UNKNOWN</name></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:23">(<expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:9">k</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:22">load_config</name></name></expr>)</condition> <block pos:start="33:25" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:23">

        <expr_stmt pos:start="35:9" pos:end="35:46"><expr pos:start="35:9" pos:end="35:45"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:45"><name pos:start="35:15" pos:end="35:28"><name pos:start="35:15" pos:end="35:15">k</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:28">load_config</name></name><argument_list pos:start="35:29" pos:end="35:45">(<argument pos:start="35:30" pos:end="35:41"><expr pos:start="35:30" pos:end="35:41"><name pos:start="35:30" pos:end="35:41"><name pos:start="35:30" pos:end="35:33">qbus</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:41">parent</name></name></expr></argument>, <argument pos:start="35:44" pos:end="35:44"><expr pos:start="35:44" pos:end="35:44"><name pos:start="35:44" pos:end="35:44">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="39:23"><if pos:start="37:9" pos:end="39:23">if <condition pos:start="37:12" pos:end="37:16">(<expr pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">ret</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:23"><block_content pos:start="39:13" pos:end="39:23">

            <return pos:start="39:13" pos:end="39:23">return <expr pos:start="39:20" pos:end="39:22"><name pos:start="39:20" pos:end="39:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:34"><expr pos:start="45:5" pos:end="45:33"><call pos:start="45:5" pos:end="45:33"><name pos:start="45:5" pos:end="45:15">qemu_get_8s</name><argument_list pos:start="45:16" pos:end="45:33">(<argument pos:start="45:17" pos:end="45:17"><expr pos:start="45:17" pos:end="45:17"><name pos:start="45:17" pos:end="45:17">f</name></expr></argument>, <argument pos:start="45:20" pos:end="45:32"><expr pos:start="45:20" pos:end="45:32"><operator pos:start="45:20" pos:end="45:20">&amp;</operator><name pos:start="45:21" pos:end="45:32"><name pos:start="45:21" pos:end="45:24">vdev</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:32">status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:31"><expr pos:start="47:5" pos:end="47:30"><call pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:15">qemu_get_8s</name><argument_list pos:start="47:16" pos:end="47:30">(<argument pos:start="47:17" pos:end="47:17"><expr pos:start="47:17" pos:end="47:17"><name pos:start="47:17" pos:end="47:17">f</name></expr></argument>, <argument pos:start="47:20" pos:end="47:29"><expr pos:start="47:20" pos:end="47:29"><operator pos:start="47:20" pos:end="47:20">&amp;</operator><name pos:start="47:21" pos:end="47:29"><name pos:start="47:21" pos:end="47:24">vdev</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:29">isr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:40"><expr pos:start="49:5" pos:end="49:39"><call pos:start="49:5" pos:end="49:39"><name pos:start="49:5" pos:end="49:18">qemu_get_be16s</name><argument_list pos:start="49:19" pos:end="49:39">(<argument pos:start="49:20" pos:end="49:20"><expr pos:start="49:20" pos:end="49:20"><name pos:start="49:20" pos:end="49:20">f</name></expr></argument>, <argument pos:start="49:23" pos:end="49:38"><expr pos:start="49:23" pos:end="49:38"><operator pos:start="49:23" pos:end="49:23">&amp;</operator><name pos:start="49:24" pos:end="49:38"><name pos:start="49:24" pos:end="49:27">vdev</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:38">queue_sel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:44">(<expr pos:start="51:9" pos:end="51:43"><name pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:12">vdev</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:23">queue_sel</name></name> <operator pos:start="51:25" pos:end="51:26">&gt;=</operator> <name pos:start="51:28" pos:end="51:43">VIRTIO_QUEUE_MAX</name></expr>)</condition> <block pos:start="51:46" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:18">

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:33"><expr pos:start="57:5" pos:end="57:32"><call pos:start="57:5" pos:end="57:32"><name pos:start="57:5" pos:end="57:18">qemu_get_be32s</name><argument_list pos:start="57:19" pos:end="57:32">(<argument pos:start="57:20" pos:end="57:20"><expr pos:start="57:20" pos:end="57:20"><name pos:start="57:20" pos:end="57:20">f</name></expr></argument>, <argument pos:start="57:23" pos:end="57:31"><expr pos:start="57:23" pos:end="57:31"><operator pos:start="57:23" pos:end="57:23">&amp;</operator><name pos:start="57:24" pos:end="57:31">features</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="75:7">/*

     * Temporarily set guest_features low bits - needed by

     * virtio net load code testing for VIRTIO_NET_F_CTRL_GUEST_OFFLOADS

     * VIRTIO_NET_F_GUEST_ANNOUNCE and VIRTIO_NET_F_CTRL_VQ.

     *

     * Note: devices should always test host features in future - don't create

     * new dependencies like this.

     */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:36"><expr pos:start="77:5" pos:end="77:35"><name pos:start="77:5" pos:end="77:24"><name pos:start="77:5" pos:end="77:8">vdev</name><operator pos:start="77:9" pos:end="77:10">-&gt;</operator><name pos:start="77:11" pos:end="77:24">guest_features</name></name> <operator pos:start="77:26" pos:end="77:26">=</operator> <name pos:start="77:28" pos:end="77:35">features</name></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:34"><expr pos:start="81:5" pos:end="81:33"><name pos:start="81:5" pos:end="81:14">config_len</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <call pos:start="81:18" pos:end="81:33"><name pos:start="81:18" pos:end="81:30">qemu_get_be32</name><argument_list pos:start="81:31" pos:end="81:33">(<argument pos:start="81:32" pos:end="81:32"><expr pos:start="81:32" pos:end="81:32"><name pos:start="81:32" pos:end="81:32">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="85:5" pos:end="93:7">/*

     * There are cases where the incoming config can be bigger or smaller

     * than what we have; so load what we have space for, and skip

     * any excess that's in the stream.

     */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:72"><expr pos:start="95:5" pos:end="95:71"><call pos:start="95:5" pos:end="95:71"><name pos:start="95:5" pos:end="95:19">qemu_get_buffer</name><argument_list pos:start="95:20" pos:end="95:71">(<argument pos:start="95:21" pos:end="95:21"><expr pos:start="95:21" pos:end="95:21"><name pos:start="95:21" pos:end="95:21">f</name></expr></argument>, <argument pos:start="95:24" pos:end="95:35"><expr pos:start="95:24" pos:end="95:35"><name pos:start="95:24" pos:end="95:35"><name pos:start="95:24" pos:end="95:27">vdev</name><operator pos:start="95:28" pos:end="95:29">-&gt;</operator><name pos:start="95:30" pos:end="95:35">config</name></name></expr></argument>, <argument pos:start="95:38" pos:end="95:70"><expr pos:start="95:38" pos:end="95:70"><call pos:start="95:38" pos:end="95:70"><name pos:start="95:38" pos:end="95:40">MIN</name><argument_list pos:start="95:41" pos:end="95:70">(<argument pos:start="95:42" pos:end="95:51"><expr pos:start="95:42" pos:end="95:51"><name pos:start="95:42" pos:end="95:51">config_len</name></expr></argument>, <argument pos:start="95:54" pos:end="95:69"><expr pos:start="95:54" pos:end="95:69"><name pos:start="95:54" pos:end="95:69"><name pos:start="95:54" pos:end="95:57">vdev</name><operator pos:start="95:58" pos:end="95:59">-&gt;</operator><name pos:start="95:60" pos:end="95:69">config_len</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="99:5" pos:end="105:5">while <condition pos:start="99:11" pos:end="99:41">(<expr pos:start="99:12" pos:end="99:40"><name pos:start="99:12" pos:end="99:21">config_len</name> <operator pos:start="99:23" pos:end="99:23">&gt;</operator> <name pos:start="99:25" pos:end="99:40"><name pos:start="99:25" pos:end="99:28">vdev</name><operator pos:start="99:29" pos:end="99:30">-&gt;</operator><name pos:start="99:31" pos:end="99:40">config_len</name></name></expr>)</condition> <block pos:start="99:43" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:21">

        <expr_stmt pos:start="101:9" pos:end="101:25"><expr pos:start="101:9" pos:end="101:24"><call pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:21">qemu_get_byte</name><argument_list pos:start="101:22" pos:end="101:24">(<argument pos:start="101:23" pos:end="101:23"><expr pos:start="101:23" pos:end="101:23"><name pos:start="101:23" pos:end="101:23">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:21"><expr pos:start="103:9" pos:end="103:20"><name pos:start="103:9" pos:end="103:18">config_len</name><operator pos:start="103:19" pos:end="103:20">--</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="109:5" pos:end="109:27"><expr pos:start="109:5" pos:end="109:26"><name pos:start="109:5" pos:end="109:7">num</name> <operator pos:start="109:9" pos:end="109:9">=</operator> <call pos:start="109:11" pos:end="109:26"><name pos:start="109:11" pos:end="109:23">qemu_get_be32</name><argument_list pos:start="109:24" pos:end="109:26">(<argument pos:start="109:25" pos:end="109:25"><expr pos:start="109:25" pos:end="109:25"><name pos:start="109:25" pos:end="109:25">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="113:5" pos:end="119:5"><if pos:start="113:5" pos:end="119:5">if <condition pos:start="113:8" pos:end="113:31">(<expr pos:start="113:9" pos:end="113:30"><name pos:start="113:9" pos:end="113:11">num</name> <operator pos:start="113:13" pos:end="113:13">&gt;</operator> <name pos:start="113:15" pos:end="113:30">VIRTIO_QUEUE_MAX</name></expr>)</condition> <block pos:start="113:33" pos:end="119:5">{<block_content pos:start="115:9" pos:end="117:18">

        <expr_stmt pos:start="115:9" pos:end="115:64"><expr pos:start="115:9" pos:end="115:63"><call pos:start="115:9" pos:end="115:63"><name pos:start="115:9" pos:end="115:20">error_report</name><argument_list pos:start="115:21" pos:end="115:63">(<argument pos:start="115:22" pos:end="115:57"><expr pos:start="115:22" pos:end="115:57"><literal type="string" pos:start="115:22" pos:end="115:57">"Invalid number of virtqueues: 0x%x"</literal></expr></argument>, <argument pos:start="115:60" pos:end="115:62"><expr pos:start="115:60" pos:end="115:62"><name pos:start="115:60" pos:end="115:62">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="117:9" pos:end="117:18">return <expr pos:start="117:16" pos:end="117:17"><operator pos:start="117:16" pos:end="117:16">-</operator><literal type="number" pos:start="117:17" pos:end="117:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="123:5" pos:end="171:5">for <control pos:start="123:9" pos:end="123:29">(<init pos:start="123:10" pos:end="123:15"><expr pos:start="123:10" pos:end="123:14"><name pos:start="123:10" pos:end="123:10">i</name> <operator pos:start="123:12" pos:end="123:12">=</operator> <literal type="number" pos:start="123:14" pos:end="123:14">0</literal></expr>;</init> <condition pos:start="123:17" pos:end="123:24"><expr pos:start="123:17" pos:end="123:23"><name pos:start="123:17" pos:end="123:17">i</name> <operator pos:start="123:19" pos:end="123:19">&lt;</operator> <name pos:start="123:21" pos:end="123:23">num</name></expr>;</condition> <incr pos:start="123:26" pos:end="123:28"><expr pos:start="123:26" pos:end="123:28"><name pos:start="123:26" pos:end="123:26">i</name><operator pos:start="123:27" pos:end="123:28">++</operator></expr></incr>)</control> <block pos:start="123:31" pos:end="171:5">{<block_content pos:start="125:9" pos:end="169:9">

        <expr_stmt pos:start="125:9" pos:end="125:49"><expr pos:start="125:9" pos:end="125:48"><name pos:start="125:9" pos:end="125:19"><name pos:start="125:9" pos:end="125:12">vdev</name><operator pos:start="125:13" pos:end="125:14">-&gt;</operator><name pos:start="125:15" pos:end="125:16">vq</name><index pos:start="125:17" pos:end="125:19">[<expr pos:start="125:18" pos:end="125:18"><name pos:start="125:18" pos:end="125:18">i</name></expr>]</index></name><operator pos:start="125:20" pos:end="125:20">.</operator><name pos:start="125:21" pos:end="125:29"><name pos:start="125:21" pos:end="125:25">vring</name><operator pos:start="125:26" pos:end="125:26">.</operator><name pos:start="125:27" pos:end="125:29">num</name></name> <operator pos:start="125:31" pos:end="125:31">=</operator> <call pos:start="125:33" pos:end="125:48"><name pos:start="125:33" pos:end="125:45">qemu_get_be32</name><argument_list pos:start="125:46" pos:end="125:48">(<argument pos:start="125:47" pos:end="125:47"><expr pos:start="125:47" pos:end="125:47"><name pos:start="125:47" pos:end="125:47">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="131:9"><if pos:start="127:9" pos:end="131:9">if <condition pos:start="127:12" pos:end="127:44">(<expr pos:start="127:13" pos:end="127:43"><name pos:start="127:13" pos:end="127:43"><name pos:start="127:13" pos:end="127:13">k</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:43">has_variable_vring_alignment</name></name></expr>)</condition> <block pos:start="127:46" pos:end="131:9">{<block_content pos:start="129:13" pos:end="129:55">

            <expr_stmt pos:start="129:13" pos:end="129:55"><expr pos:start="129:13" pos:end="129:54"><name pos:start="129:13" pos:end="129:23"><name pos:start="129:13" pos:end="129:16">vdev</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:20">vq</name><index pos:start="129:21" pos:end="129:23">[<expr pos:start="129:22" pos:end="129:22"><name pos:start="129:22" pos:end="129:22">i</name></expr>]</index></name><operator pos:start="129:24" pos:end="129:24">.</operator><name pos:start="129:25" pos:end="129:35"><name pos:start="129:25" pos:end="129:29">vring</name><operator pos:start="129:30" pos:end="129:30">.</operator><name pos:start="129:31" pos:end="129:35">align</name></name> <operator pos:start="129:37" pos:end="129:37">=</operator> <call pos:start="129:39" pos:end="129:54"><name pos:start="129:39" pos:end="129:51">qemu_get_be32</name><argument_list pos:start="129:52" pos:end="129:54">(<argument pos:start="129:53" pos:end="129:53"><expr pos:start="129:53" pos:end="129:53"><name pos:start="129:53" pos:end="129:53">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:50"><expr pos:start="133:9" pos:end="133:49"><name pos:start="133:9" pos:end="133:19"><name pos:start="133:9" pos:end="133:12">vdev</name><operator pos:start="133:13" pos:end="133:14">-&gt;</operator><name pos:start="133:15" pos:end="133:16">vq</name><index pos:start="133:17" pos:end="133:19">[<expr pos:start="133:18" pos:end="133:18"><name pos:start="133:18" pos:end="133:18">i</name></expr>]</index></name><operator pos:start="133:20" pos:end="133:20">.</operator><name pos:start="133:21" pos:end="133:30"><name pos:start="133:21" pos:end="133:25">vring</name><operator pos:start="133:26" pos:end="133:26">.</operator><name pos:start="133:27" pos:end="133:30">desc</name></name> <operator pos:start="133:32" pos:end="133:32">=</operator> <call pos:start="133:34" pos:end="133:49"><name pos:start="133:34" pos:end="133:46">qemu_get_be64</name><argument_list pos:start="133:47" pos:end="133:49">(<argument pos:start="133:48" pos:end="133:48"><expr pos:start="133:48" pos:end="133:48"><name pos:start="133:48" pos:end="133:48">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:55"><expr pos:start="135:9" pos:end="135:54"><call pos:start="135:9" pos:end="135:54"><name pos:start="135:9" pos:end="135:22">qemu_get_be16s</name><argument_list pos:start="135:23" pos:end="135:54">(<argument pos:start="135:24" pos:end="135:24"><expr pos:start="135:24" pos:end="135:24"><name pos:start="135:24" pos:end="135:24">f</name></expr></argument>, <argument pos:start="135:27" pos:end="135:53"><expr pos:start="135:27" pos:end="135:53"><operator pos:start="135:27" pos:end="135:27">&amp;</operator><name pos:start="135:28" pos:end="135:38"><name pos:start="135:28" pos:end="135:31">vdev</name><operator pos:start="135:32" pos:end="135:33">-&gt;</operator><name pos:start="135:34" pos:end="135:35">vq</name><index pos:start="135:36" pos:end="135:38">[<expr pos:start="135:37" pos:end="135:37"><name pos:start="135:37" pos:end="135:37">i</name></expr>]</index></name><operator pos:start="135:39" pos:end="135:39">.</operator><name pos:start="135:40" pos:end="135:53">last_avail_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:49"><expr pos:start="137:9" pos:end="137:48"><name pos:start="137:9" pos:end="137:19"><name pos:start="137:9" pos:end="137:12">vdev</name><operator pos:start="137:13" pos:end="137:14">-&gt;</operator><name pos:start="137:15" pos:end="137:16">vq</name><index pos:start="137:17" pos:end="137:19">[<expr pos:start="137:18" pos:end="137:18"><name pos:start="137:18" pos:end="137:18">i</name></expr>]</index></name><operator pos:start="137:20" pos:end="137:20">.</operator><name pos:start="137:21" pos:end="137:40">signalled_used_valid</name> <operator pos:start="137:42" pos:end="137:42">=</operator> <name pos:start="137:44" pos:end="137:48">false</name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:40"><expr pos:start="139:9" pos:end="139:39"><name pos:start="139:9" pos:end="139:19"><name pos:start="139:9" pos:end="139:12">vdev</name><operator pos:start="139:13" pos:end="139:14">-&gt;</operator><name pos:start="139:15" pos:end="139:16">vq</name><index pos:start="139:17" pos:end="139:19">[<expr pos:start="139:18" pos:end="139:18"><name pos:start="139:18" pos:end="139:18">i</name></expr>]</index></name><operator pos:start="139:20" pos:end="139:20">.</operator><name pos:start="139:21" pos:end="139:32">notification</name> <operator pos:start="139:34" pos:end="139:34">=</operator> <name pos:start="139:36" pos:end="139:39">true</name></expr>;</expr_stmt>



        <if_stmt pos:start="143:9" pos:end="159:9"><if pos:start="143:9" pos:end="149:9">if <condition pos:start="143:12" pos:end="143:35">(<expr pos:start="143:13" pos:end="143:34"><name pos:start="143:13" pos:end="143:23"><name pos:start="143:13" pos:end="143:16">vdev</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:20">vq</name><index pos:start="143:21" pos:end="143:23">[<expr pos:start="143:22" pos:end="143:22"><name pos:start="143:22" pos:end="143:22">i</name></expr>]</index></name><operator pos:start="143:24" pos:end="143:24">.</operator><name pos:start="143:25" pos:end="143:34"><name pos:start="143:25" pos:end="143:29">vring</name><operator pos:start="143:30" pos:end="143:30">.</operator><name pos:start="143:31" pos:end="143:34">desc</name></name></expr>)</condition> <block pos:start="143:37" pos:end="149:9">{<block_content pos:start="147:13" pos:end="147:47">

            <comment type="block" pos:start="145:13" pos:end="145:38">/* XXX virtio-1 devices */</comment>

            <expr_stmt pos:start="147:13" pos:end="147:47"><expr pos:start="147:13" pos:end="147:46"><call pos:start="147:13" pos:end="147:46"><name pos:start="147:13" pos:end="147:37">virtio_queue_update_rings</name><argument_list pos:start="147:38" pos:end="147:46">(<argument pos:start="147:39" pos:end="147:42"><expr pos:start="147:39" pos:end="147:42"><name pos:start="147:39" pos:end="147:42">vdev</name></expr></argument>, <argument pos:start="147:45" pos:end="147:45"><expr pos:start="147:45" pos:end="147:45"><name pos:start="147:45" pos:end="147:45">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="149:11" pos:end="159:9">else if <condition pos:start="149:19" pos:end="149:46">(<expr pos:start="149:20" pos:end="149:45"><name pos:start="149:20" pos:end="149:30"><name pos:start="149:20" pos:end="149:23">vdev</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:27">vq</name><index pos:start="149:28" pos:end="149:30">[<expr pos:start="149:29" pos:end="149:29"><name pos:start="149:29" pos:end="149:29">i</name></expr>]</index></name><operator pos:start="149:31" pos:end="149:31">.</operator><name pos:start="149:32" pos:end="149:45">last_avail_idx</name></expr>)</condition> <block pos:start="149:48" pos:end="159:9">{<block_content pos:start="151:13" pos:end="157:26">

            <expr_stmt pos:start="151:13" pos:end="155:56"><expr pos:start="151:13" pos:end="155:55"><call pos:start="151:13" pos:end="155:55"><name pos:start="151:13" pos:end="151:24">error_report</name><argument_list pos:start="151:25" pos:end="155:55">(<argument pos:start="151:26" pos:end="153:60"><expr pos:start="151:26" pos:end="153:60"><literal type="string" pos:start="151:26" pos:end="151:45">"VQ %d address 0x0 "</literal>

                         <literal type="string" pos:start="153:26" pos:end="153:60">"inconsistent with Host index 0x%x"</literal></expr></argument>,

                         <argument pos:start="155:26" pos:end="155:26"><expr pos:start="155:26" pos:end="155:26"><name pos:start="155:26" pos:end="155:26">i</name></expr></argument>, <argument pos:start="155:29" pos:end="155:54"><expr pos:start="155:29" pos:end="155:54"><name pos:start="155:29" pos:end="155:39"><name pos:start="155:29" pos:end="155:32">vdev</name><operator pos:start="155:33" pos:end="155:34">-&gt;</operator><name pos:start="155:35" pos:end="155:36">vq</name><index pos:start="155:37" pos:end="155:39">[<expr pos:start="155:38" pos:end="155:38"><name pos:start="155:38" pos:end="155:38">i</name></expr>]</index></name><operator pos:start="155:40" pos:end="155:40">.</operator><name pos:start="155:41" pos:end="155:54">last_avail_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="157:17" pos:end="157:26">return <expr pos:start="157:24" pos:end="157:25"><operator pos:start="157:24" pos:end="157:24">-</operator><literal type="number" pos:start="157:25" pos:end="157:25">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="161:9" pos:end="169:9"><if pos:start="161:9" pos:end="169:9">if <condition pos:start="161:12" pos:end="161:26">(<expr pos:start="161:13" pos:end="161:25"><name pos:start="161:13" pos:end="161:25"><name pos:start="161:13" pos:end="161:13">k</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:25">load_queue</name></name></expr>)</condition> <block pos:start="161:28" pos:end="169:9">{<block_content pos:start="163:13" pos:end="167:27">

            <expr_stmt pos:start="163:13" pos:end="163:52"><expr pos:start="163:13" pos:end="163:51"><name pos:start="163:13" pos:end="163:15">ret</name> <operator pos:start="163:17" pos:end="163:17">=</operator> <call pos:start="163:19" pos:end="163:51"><name pos:start="163:19" pos:end="163:31"><name pos:start="163:19" pos:end="163:19">k</name><operator pos:start="163:20" pos:end="163:21">-&gt;</operator><name pos:start="163:22" pos:end="163:31">load_queue</name></name><argument_list pos:start="163:32" pos:end="163:51">(<argument pos:start="163:33" pos:end="163:44"><expr pos:start="163:33" pos:end="163:44"><name pos:start="163:33" pos:end="163:44"><name pos:start="163:33" pos:end="163:36">qbus</name><operator pos:start="163:37" pos:end="163:38">-&gt;</operator><name pos:start="163:39" pos:end="163:44">parent</name></name></expr></argument>, <argument pos:start="163:47" pos:end="163:47"><expr pos:start="163:47" pos:end="163:47"><name pos:start="163:47" pos:end="163:47">i</name></expr></argument>, <argument pos:start="163:50" pos:end="163:50"><expr pos:start="163:50" pos:end="163:50"><name pos:start="163:50" pos:end="163:50">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="165:13" pos:end="167:27"><if pos:start="165:13" pos:end="167:27">if <condition pos:start="165:16" pos:end="165:20">(<expr pos:start="165:17" pos:end="165:19"><name pos:start="165:17" pos:end="165:19">ret</name></expr>)</condition><block type="pseudo" pos:start="167:17" pos:end="167:27"><block_content pos:start="167:17" pos:end="167:27">

                <return pos:start="167:17" pos:end="167:27">return <expr pos:start="167:24" pos:end="167:26"><name pos:start="167:24" pos:end="167:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="175:5" pos:end="175:49"><expr pos:start="175:5" pos:end="175:48"><call pos:start="175:5" pos:end="175:48"><name pos:start="175:5" pos:end="175:24">virtio_notify_vector</name><argument_list pos:start="175:25" pos:end="175:48">(<argument pos:start="175:26" pos:end="175:29"><expr pos:start="175:26" pos:end="175:29"><name pos:start="175:26" pos:end="175:29">vdev</name></expr></argument>, <argument pos:start="175:32" pos:end="175:47"><expr pos:start="175:32" pos:end="175:47"><name pos:start="175:32" pos:end="175:47">VIRTIO_NO_VECTOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="179:5" pos:end="189:5"><if pos:start="179:5" pos:end="189:5">if <condition pos:start="179:8" pos:end="179:26">(<expr pos:start="179:9" pos:end="179:25"><name pos:start="179:9" pos:end="179:17"><name pos:start="179:9" pos:end="179:11">vdc</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:17">load</name></name> <operator pos:start="179:19" pos:end="179:20">!=</operator> <name pos:start="179:22" pos:end="179:25">NULL</name></expr>)</condition> <block pos:start="179:28" pos:end="189:5">{<block_content pos:start="181:9" pos:end="187:9">

        <expr_stmt pos:start="181:9" pos:end="181:45"><expr pos:start="181:9" pos:end="181:44"><name pos:start="181:9" pos:end="181:11">ret</name> <operator pos:start="181:13" pos:end="181:13">=</operator> <call pos:start="181:15" pos:end="181:44"><name pos:start="181:15" pos:end="181:23"><name pos:start="181:15" pos:end="181:17">vdc</name><operator pos:start="181:18" pos:end="181:19">-&gt;</operator><name pos:start="181:20" pos:end="181:23">load</name></name><argument_list pos:start="181:24" pos:end="181:44">(<argument pos:start="181:25" pos:end="181:28"><expr pos:start="181:25" pos:end="181:28"><name pos:start="181:25" pos:end="181:28">vdev</name></expr></argument>, <argument pos:start="181:31" pos:end="181:31"><expr pos:start="181:31" pos:end="181:31"><name pos:start="181:31" pos:end="181:31">f</name></expr></argument>, <argument pos:start="181:34" pos:end="181:43"><expr pos:start="181:34" pos:end="181:43"><name pos:start="181:34" pos:end="181:43">version_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="183:9" pos:end="187:9"><if pos:start="183:9" pos:end="187:9">if <condition pos:start="183:12" pos:end="183:16">(<expr pos:start="183:13" pos:end="183:15"><name pos:start="183:13" pos:end="183:15">ret</name></expr>)</condition> <block pos:start="183:18" pos:end="187:9">{<block_content pos:start="185:13" pos:end="185:23">

            <return pos:start="185:13" pos:end="185:23">return <expr pos:start="185:20" pos:end="185:22"><name pos:start="185:20" pos:end="185:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="193:5" pos:end="203:5"><if pos:start="193:5" pos:end="203:5">if <condition pos:start="193:8" pos:end="193:18">(<expr pos:start="193:9" pos:end="193:17"><name pos:start="193:9" pos:end="193:17"><name pos:start="193:9" pos:end="193:11">vdc</name><operator pos:start="193:12" pos:end="193:13">-&gt;</operator><name pos:start="193:14" pos:end="193:17">vmsd</name></name></expr>)</condition> <block pos:start="193:20" pos:end="203:5">{<block_content pos:start="195:9" pos:end="201:9">

        <expr_stmt pos:start="195:9" pos:end="195:65"><expr pos:start="195:9" pos:end="195:64"><name pos:start="195:9" pos:end="195:11">ret</name> <operator pos:start="195:13" pos:end="195:13">=</operator> <call pos:start="195:15" pos:end="195:64"><name pos:start="195:15" pos:end="195:32">vmstate_load_state</name><argument_list pos:start="195:33" pos:end="195:64">(<argument pos:start="195:34" pos:end="195:34"><expr pos:start="195:34" pos:end="195:34"><name pos:start="195:34" pos:end="195:34">f</name></expr></argument>, <argument pos:start="195:37" pos:end="195:45"><expr pos:start="195:37" pos:end="195:45"><name pos:start="195:37" pos:end="195:45"><name pos:start="195:37" pos:end="195:39">vdc</name><operator pos:start="195:40" pos:end="195:41">-&gt;</operator><name pos:start="195:42" pos:end="195:45">vmsd</name></name></expr></argument>, <argument pos:start="195:48" pos:end="195:51"><expr pos:start="195:48" pos:end="195:51"><name pos:start="195:48" pos:end="195:51">vdev</name></expr></argument>, <argument pos:start="195:54" pos:end="195:63"><expr pos:start="195:54" pos:end="195:63"><name pos:start="195:54" pos:end="195:63">version_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="197:9" pos:end="201:9"><if pos:start="197:9" pos:end="201:9">if <condition pos:start="197:12" pos:end="197:16">(<expr pos:start="197:13" pos:end="197:15"><name pos:start="197:13" pos:end="197:15">ret</name></expr>)</condition> <block pos:start="197:18" pos:end="201:9">{<block_content pos:start="199:13" pos:end="199:23">

            <return pos:start="199:13" pos:end="199:23">return <expr pos:start="199:20" pos:end="199:22"><name pos:start="199:20" pos:end="199:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="207:5" pos:end="207:21">/* Subsections */</comment>

    <expr_stmt pos:start="209:5" pos:end="209:58"><expr pos:start="209:5" pos:end="209:57"><name pos:start="209:5" pos:end="209:7">ret</name> <operator pos:start="209:9" pos:end="209:9">=</operator> <call pos:start="209:11" pos:end="209:57"><name pos:start="209:11" pos:end="209:28">vmstate_load_state</name><argument_list pos:start="209:29" pos:end="209:57">(<argument pos:start="209:30" pos:end="209:30"><expr pos:start="209:30" pos:end="209:30"><name pos:start="209:30" pos:end="209:30">f</name></expr></argument>, <argument pos:start="209:33" pos:end="209:47"><expr pos:start="209:33" pos:end="209:47"><operator pos:start="209:33" pos:end="209:33">&amp;</operator><name pos:start="209:34" pos:end="209:47">vmstate_virtio</name></expr></argument>, <argument pos:start="209:50" pos:end="209:53"><expr pos:start="209:50" pos:end="209:53"><name pos:start="209:50" pos:end="209:53">vdev</name></expr></argument>, <argument pos:start="209:56" pos:end="209:56"><expr pos:start="209:56" pos:end="209:56"><literal type="number" pos:start="209:56" pos:end="209:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="211:5" pos:end="215:5"><if pos:start="211:5" pos:end="215:5">if <condition pos:start="211:8" pos:end="211:12">(<expr pos:start="211:9" pos:end="211:11"><name pos:start="211:9" pos:end="211:11">ret</name></expr>)</condition> <block pos:start="211:14" pos:end="215:5">{<block_content pos:start="213:9" pos:end="213:19">

        <return pos:start="213:9" pos:end="213:19">return <expr pos:start="213:16" pos:end="213:18"><name pos:start="213:16" pos:end="213:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="219:5" pos:end="223:5"><if pos:start="219:5" pos:end="223:5">if <condition pos:start="219:8" pos:end="219:60">(<expr pos:start="219:9" pos:end="219:59"><name pos:start="219:9" pos:end="219:27"><name pos:start="219:9" pos:end="219:12">vdev</name><operator pos:start="219:13" pos:end="219:14">-&gt;</operator><name pos:start="219:15" pos:end="219:27">device_endian</name></name> <operator pos:start="219:29" pos:end="219:30">==</operator> <name pos:start="219:32" pos:end="219:59">VIRTIO_DEVICE_ENDIAN_UNKNOWN</name></expr>)</condition> <block pos:start="219:62" pos:end="223:5">{<block_content pos:start="221:9" pos:end="221:54">

        <expr_stmt pos:start="221:9" pos:end="221:54"><expr pos:start="221:9" pos:end="221:53"><name pos:start="221:9" pos:end="221:27"><name pos:start="221:9" pos:end="221:12">vdev</name><operator pos:start="221:13" pos:end="221:14">-&gt;</operator><name pos:start="221:15" pos:end="221:27">device_endian</name></name> <operator pos:start="221:29" pos:end="221:29">=</operator> <call pos:start="221:31" pos:end="221:53"><name pos:start="221:31" pos:end="221:51">virtio_default_endian</name><argument_list pos:start="221:52" pos:end="221:53">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="227:5" pos:end="267:5"><if pos:start="227:5" pos:end="253:5">if <condition pos:start="227:8" pos:end="227:43">(<expr pos:start="227:9" pos:end="227:42"><call pos:start="227:9" pos:end="227:42"><name pos:start="227:9" pos:end="227:36">virtio_64bit_features_needed</name><argument_list pos:start="227:37" pos:end="227:42">(<argument pos:start="227:38" pos:end="227:41"><expr pos:start="227:38" pos:end="227:41"><name pos:start="227:38" pos:end="227:41">vdev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="227:45" pos:end="253:5">{<block_content pos:start="239:9" pos:end="251:9">

        <comment type="block" pos:start="229:9" pos:end="237:11">/*

         * Subsection load filled vdev-&gt;guest_features.  Run them

         * through virtio_set_features to sanity-check them against

         * host_features.

         */</comment>

        <decl_stmt pos:start="239:9" pos:end="239:51"><decl pos:start="239:9" pos:end="239:50"><type pos:start="239:9" pos:end="239:16"><name pos:start="239:9" pos:end="239:16">uint64_t</name></type> <name pos:start="239:18" pos:end="239:27">features64</name> <init pos:start="239:29" pos:end="239:50">= <expr pos:start="239:31" pos:end="239:50"><name pos:start="239:31" pos:end="239:50"><name pos:start="239:31" pos:end="239:34">vdev</name><operator pos:start="239:35" pos:end="239:36">-&gt;</operator><name pos:start="239:37" pos:end="239:50">guest_features</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="241:9" pos:end="251:9"><if pos:start="241:9" pos:end="251:9">if <condition pos:start="241:12" pos:end="241:62">(<expr pos:start="241:13" pos:end="241:61"><call pos:start="241:13" pos:end="241:57"><name pos:start="241:13" pos:end="241:39">virtio_set_features_nocheck</name><argument_list pos:start="241:40" pos:end="241:57">(<argument pos:start="241:41" pos:end="241:44"><expr pos:start="241:41" pos:end="241:44"><name pos:start="241:41" pos:end="241:44">vdev</name></expr></argument>, <argument pos:start="241:47" pos:end="241:56"><expr pos:start="241:47" pos:end="241:56"><name pos:start="241:47" pos:end="241:56">features64</name></expr></argument>)</argument_list></call> <operator pos:start="241:59" pos:end="241:59">&lt;</operator> <literal type="number" pos:start="241:61" pos:end="241:61">0</literal></expr>)</condition> <block pos:start="241:64" pos:end="251:9">{<block_content pos:start="243:13" pos:end="249:22">

            <expr_stmt pos:start="243:13" pos:end="247:58"><expr pos:start="243:13" pos:end="247:57"><call pos:start="243:13" pos:end="247:57"><name pos:start="243:13" pos:end="243:24">error_report</name><argument_list pos:start="243:25" pos:end="247:57">(<argument pos:start="243:26" pos:end="245:55"><expr pos:start="243:26" pos:end="245:55"><literal type="string" pos:start="243:26" pos:end="243:39">"Features 0x%"</literal> <name pos:start="243:41" pos:end="243:46">PRIx64</name> <literal type="string" pos:start="243:48" pos:end="243:63">" unsupported. "</literal>

                         <literal type="string" pos:start="245:26" pos:end="245:48">"Allowed features: 0x%"</literal> <name pos:start="245:50" pos:end="245:55">PRIx64</name></expr></argument>,

                         <argument pos:start="247:26" pos:end="247:35"><expr pos:start="247:26" pos:end="247:35"><name pos:start="247:26" pos:end="247:35">features64</name></expr></argument>, <argument pos:start="247:38" pos:end="247:56"><expr pos:start="247:38" pos:end="247:56"><name pos:start="247:38" pos:end="247:56"><name pos:start="247:38" pos:end="247:41">vdev</name><operator pos:start="247:42" pos:end="247:43">-&gt;</operator><name pos:start="247:44" pos:end="247:56">host_features</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="249:13" pos:end="249:22">return <expr pos:start="249:20" pos:end="249:21"><operator pos:start="249:20" pos:end="249:20">-</operator><literal type="number" pos:start="249:21" pos:end="249:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="253:7" pos:end="267:5">else <block pos:start="253:12" pos:end="267:5">{<block_content pos:start="255:9" pos:end="265:9">

        <if_stmt pos:start="255:9" pos:end="265:9"><if pos:start="255:9" pos:end="265:9">if <condition pos:start="255:12" pos:end="255:60">(<expr pos:start="255:13" pos:end="255:59"><call pos:start="255:13" pos:end="255:55"><name pos:start="255:13" pos:end="255:39">virtio_set_features_nocheck</name><argument_list pos:start="255:40" pos:end="255:55">(<argument pos:start="255:41" pos:end="255:44"><expr pos:start="255:41" pos:end="255:44"><name pos:start="255:41" pos:end="255:44">vdev</name></expr></argument>, <argument pos:start="255:47" pos:end="255:54"><expr pos:start="255:47" pos:end="255:54"><name pos:start="255:47" pos:end="255:54">features</name></expr></argument>)</argument_list></call> <operator pos:start="255:57" pos:end="255:57">&lt;</operator> <literal type="number" pos:start="255:59" pos:end="255:59">0</literal></expr>)</condition> <block pos:start="255:62" pos:end="265:9">{<block_content pos:start="257:13" pos:end="263:22">

            <expr_stmt pos:start="257:13" pos:end="261:56"><expr pos:start="257:13" pos:end="261:55"><call pos:start="257:13" pos:end="261:55"><name pos:start="257:13" pos:end="257:24">error_report</name><argument_list pos:start="257:25" pos:end="261:55">(<argument pos:start="257:26" pos:end="259:55"><expr pos:start="257:26" pos:end="259:55"><literal type="string" pos:start="257:26" pos:end="257:54">"Features 0x%x unsupported. "</literal>

                         <literal type="string" pos:start="259:26" pos:end="259:48">"Allowed features: 0x%"</literal> <name pos:start="259:50" pos:end="259:55">PRIx64</name></expr></argument>,

                         <argument pos:start="261:26" pos:end="261:33"><expr pos:start="261:26" pos:end="261:33"><name pos:start="261:26" pos:end="261:33">features</name></expr></argument>, <argument pos:start="261:36" pos:end="261:54"><expr pos:start="261:36" pos:end="261:54"><name pos:start="261:36" pos:end="261:54"><name pos:start="261:36" pos:end="261:39">vdev</name><operator pos:start="261:40" pos:end="261:41">-&gt;</operator><name pos:start="261:42" pos:end="261:54">host_features</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="263:13" pos:end="263:22">return <expr pos:start="263:20" pos:end="263:21"><operator pos:start="263:20" pos:end="263:20">-</operator><literal type="number" pos:start="263:21" pos:end="263:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="271:5" pos:end="271:20"><expr pos:start="271:5" pos:end="271:19"><call pos:start="271:5" pos:end="271:19"><name pos:start="271:5" pos:end="271:17">rcu_read_lock</name><argument_list pos:start="271:18" pos:end="271:19">()</argument_list></call></expr>;</expr_stmt>

    <for pos:start="273:5" pos:end="339:5">for <control pos:start="273:9" pos:end="273:29">(<init pos:start="273:10" pos:end="273:15"><expr pos:start="273:10" pos:end="273:14"><name pos:start="273:10" pos:end="273:10">i</name> <operator pos:start="273:12" pos:end="273:12">=</operator> <literal type="number" pos:start="273:14" pos:end="273:14">0</literal></expr>;</init> <condition pos:start="273:17" pos:end="273:24"><expr pos:start="273:17" pos:end="273:23"><name pos:start="273:17" pos:end="273:17">i</name> <operator pos:start="273:19" pos:end="273:19">&lt;</operator> <name pos:start="273:21" pos:end="273:23">num</name></expr>;</condition> <incr pos:start="273:26" pos:end="273:28"><expr pos:start="273:26" pos:end="273:28"><name pos:start="273:26" pos:end="273:26">i</name><operator pos:start="273:27" pos:end="273:28">++</operator></expr></incr>)</control> <block pos:start="273:31" pos:end="339:5">{<block_content pos:start="275:9" pos:end="337:9">

        <if_stmt pos:start="275:9" pos:end="337:9"><if pos:start="275:9" pos:end="337:9">if <condition pos:start="275:12" pos:end="275:35">(<expr pos:start="275:13" pos:end="275:34"><name pos:start="275:13" pos:end="275:23"><name pos:start="275:13" pos:end="275:16">vdev</name><operator pos:start="275:17" pos:end="275:18">-&gt;</operator><name pos:start="275:19" pos:end="275:20">vq</name><index pos:start="275:21" pos:end="275:23">[<expr pos:start="275:22" pos:end="275:22"><name pos:start="275:22" pos:end="275:22">i</name></expr>]</index></name><operator pos:start="275:24" pos:end="275:24">.</operator><name pos:start="275:25" pos:end="275:34"><name pos:start="275:25" pos:end="275:29">vring</name><operator pos:start="275:30" pos:end="275:30">.</operator><name pos:start="275:31" pos:end="275:34">desc</name></name></expr>)</condition> <block pos:start="275:37" pos:end="337:9">{<block_content pos:start="277:13" pos:end="335:13">

            <decl_stmt pos:start="277:13" pos:end="277:28"><decl pos:start="277:13" pos:end="277:27"><type pos:start="277:13" pos:end="277:20"><name pos:start="277:13" pos:end="277:20">uint16_t</name></type> <name pos:start="277:22" pos:end="277:27">nheads</name></decl>;</decl_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:80"><expr pos:start="279:13" pos:end="279:79"><name pos:start="279:13" pos:end="279:18">nheads</name> <operator pos:start="279:20" pos:end="279:20">=</operator> <call pos:start="279:22" pos:end="279:50"><name pos:start="279:22" pos:end="279:36">vring_avail_idx</name><argument_list pos:start="279:37" pos:end="279:50">(<argument pos:start="279:38" pos:end="279:49"><expr pos:start="279:38" pos:end="279:49"><operator pos:start="279:38" pos:end="279:38">&amp;</operator><name pos:start="279:39" pos:end="279:49"><name pos:start="279:39" pos:end="279:42">vdev</name><operator pos:start="279:43" pos:end="279:44">-&gt;</operator><name pos:start="279:45" pos:end="279:46">vq</name><index pos:start="279:47" pos:end="279:49">[<expr pos:start="279:48" pos:end="279:48"><name pos:start="279:48" pos:end="279:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="279:52" pos:end="279:52">-</operator> <name pos:start="279:54" pos:end="279:64"><name pos:start="279:54" pos:end="279:57">vdev</name><operator pos:start="279:58" pos:end="279:59">-&gt;</operator><name pos:start="279:60" pos:end="279:61">vq</name><index pos:start="279:62" pos:end="279:64">[<expr pos:start="279:63" pos:end="279:63"><name pos:start="279:63" pos:end="279:63">i</name></expr>]</index></name><operator pos:start="279:65" pos:end="279:65">.</operator><name pos:start="279:66" pos:end="279:79">last_avail_idx</name></expr>;</expr_stmt>

            <comment type="block" pos:start="281:13" pos:end="281:78">/* Check it isn't doing strange things with descriptor numbers. */</comment>

            <if_stmt pos:start="283:13" pos:end="297:13"><if pos:start="283:13" pos:end="297:13">if <condition pos:start="283:16" pos:end="283:47">(<expr pos:start="283:17" pos:end="283:46"><name pos:start="283:17" pos:end="283:22">nheads</name> <operator pos:start="283:24" pos:end="283:24">&gt;</operator> <name pos:start="283:26" pos:end="283:36"><name pos:start="283:26" pos:end="283:29">vdev</name><operator pos:start="283:30" pos:end="283:31">-&gt;</operator><name pos:start="283:32" pos:end="283:33">vq</name><index pos:start="283:34" pos:end="283:36">[<expr pos:start="283:35" pos:end="283:35"><name pos:start="283:35" pos:end="283:35">i</name></expr>]</index></name><operator pos:start="283:37" pos:end="283:37">.</operator><name pos:start="283:38" pos:end="283:46"><name pos:start="283:38" pos:end="283:42">vring</name><operator pos:start="283:43" pos:end="283:43">.</operator><name pos:start="283:44" pos:end="283:46">num</name></name></expr>)</condition> <block pos:start="283:49" pos:end="297:13">{<block_content pos:start="285:17" pos:end="295:26">

                <expr_stmt pos:start="285:17" pos:end="293:65"><expr pos:start="285:17" pos:end="293:64"><call pos:start="285:17" pos:end="293:64"><name pos:start="285:17" pos:end="285:28">error_report</name><argument_list pos:start="285:29" pos:end="293:64">(<argument pos:start="285:30" pos:end="287:76"><expr pos:start="285:30" pos:end="287:76"><literal type="string" pos:start="285:30" pos:end="285:64">"VQ %d size 0x%x Guest index 0x%x "</literal>

                             <literal type="string" pos:start="287:30" pos:end="287:76">"inconsistent with Host index 0x%x: delta 0x%x"</literal></expr></argument>,

                             <argument pos:start="289:30" pos:end="289:30"><expr pos:start="289:30" pos:end="289:30"><name pos:start="289:30" pos:end="289:30">i</name></expr></argument>, <argument pos:start="289:33" pos:end="289:53"><expr pos:start="289:33" pos:end="289:53"><name pos:start="289:33" pos:end="289:43"><name pos:start="289:33" pos:end="289:36">vdev</name><operator pos:start="289:37" pos:end="289:38">-&gt;</operator><name pos:start="289:39" pos:end="289:40">vq</name><index pos:start="289:41" pos:end="289:43">[<expr pos:start="289:42" pos:end="289:42"><name pos:start="289:42" pos:end="289:42">i</name></expr>]</index></name><operator pos:start="289:44" pos:end="289:44">.</operator><name pos:start="289:45" pos:end="289:53"><name pos:start="289:45" pos:end="289:49">vring</name><operator pos:start="289:50" pos:end="289:50">.</operator><name pos:start="289:51" pos:end="289:53">num</name></name></expr></argument>,

                             <argument pos:start="291:30" pos:end="291:58"><expr pos:start="291:30" pos:end="291:58"><call pos:start="291:30" pos:end="291:58"><name pos:start="291:30" pos:end="291:44">vring_avail_idx</name><argument_list pos:start="291:45" pos:end="291:58">(<argument pos:start="291:46" pos:end="291:57"><expr pos:start="291:46" pos:end="291:57"><operator pos:start="291:46" pos:end="291:46">&amp;</operator><name pos:start="291:47" pos:end="291:57"><name pos:start="291:47" pos:end="291:50">vdev</name><operator pos:start="291:51" pos:end="291:52">-&gt;</operator><name pos:start="291:53" pos:end="291:54">vq</name><index pos:start="291:55" pos:end="291:57">[<expr pos:start="291:56" pos:end="291:56"><name pos:start="291:56" pos:end="291:56">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="293:30" pos:end="293:55"><expr pos:start="293:30" pos:end="293:55"><name pos:start="293:30" pos:end="293:40"><name pos:start="293:30" pos:end="293:33">vdev</name><operator pos:start="293:34" pos:end="293:35">-&gt;</operator><name pos:start="293:36" pos:end="293:37">vq</name><index pos:start="293:38" pos:end="293:40">[<expr pos:start="293:39" pos:end="293:39"><name pos:start="293:39" pos:end="293:39">i</name></expr>]</index></name><operator pos:start="293:41" pos:end="293:41">.</operator><name pos:start="293:42" pos:end="293:55">last_avail_idx</name></expr></argument>, <argument pos:start="293:58" pos:end="293:63"><expr pos:start="293:58" pos:end="293:63"><name pos:start="293:58" pos:end="293:63">nheads</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="295:17" pos:end="295:26">return <expr pos:start="295:24" pos:end="295:25"><operator pos:start="295:24" pos:end="295:24">-</operator><literal type="number" pos:start="295:25" pos:end="295:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:64"><expr pos:start="299:13" pos:end="299:63"><name pos:start="299:13" pos:end="299:23"><name pos:start="299:13" pos:end="299:16">vdev</name><operator pos:start="299:17" pos:end="299:18">-&gt;</operator><name pos:start="299:19" pos:end="299:20">vq</name><index pos:start="299:21" pos:end="299:23">[<expr pos:start="299:22" pos:end="299:22"><name pos:start="299:22" pos:end="299:22">i</name></expr>]</index></name><operator pos:start="299:24" pos:end="299:24">.</operator><name pos:start="299:25" pos:end="299:32">used_idx</name> <operator pos:start="299:34" pos:end="299:34">=</operator> <call pos:start="299:36" pos:end="299:63"><name pos:start="299:36" pos:end="299:49">vring_used_idx</name><argument_list pos:start="299:50" pos:end="299:63">(<argument pos:start="299:51" pos:end="299:62"><expr pos:start="299:51" pos:end="299:62"><operator pos:start="299:51" pos:end="299:51">&amp;</operator><name pos:start="299:52" pos:end="299:62"><name pos:start="299:52" pos:end="299:55">vdev</name><operator pos:start="299:56" pos:end="299:57">-&gt;</operator><name pos:start="299:58" pos:end="299:59">vq</name><index pos:start="299:60" pos:end="299:62">[<expr pos:start="299:61" pos:end="299:61"><name pos:start="299:61" pos:end="299:61">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:73"><expr pos:start="301:13" pos:end="301:72"><name pos:start="301:13" pos:end="301:23"><name pos:start="301:13" pos:end="301:16">vdev</name><operator pos:start="301:17" pos:end="301:18">-&gt;</operator><name pos:start="301:19" pos:end="301:20">vq</name><index pos:start="301:21" pos:end="301:23">[<expr pos:start="301:22" pos:end="301:22"><name pos:start="301:22" pos:end="301:22">i</name></expr>]</index></name><operator pos:start="301:24" pos:end="301:24">.</operator><name pos:start="301:25" pos:end="301:40">shadow_avail_idx</name> <operator pos:start="301:42" pos:end="301:42">=</operator> <call pos:start="301:44" pos:end="301:72"><name pos:start="301:44" pos:end="301:58">vring_avail_idx</name><argument_list pos:start="301:59" pos:end="301:72">(<argument pos:start="301:60" pos:end="301:71"><expr pos:start="301:60" pos:end="301:71"><operator pos:start="301:60" pos:end="301:60">&amp;</operator><name pos:start="301:61" pos:end="301:71"><name pos:start="301:61" pos:end="301:64">vdev</name><operator pos:start="301:65" pos:end="301:66">-&gt;</operator><name pos:start="301:67" pos:end="301:68">vq</name><index pos:start="301:69" pos:end="301:71">[<expr pos:start="301:70" pos:end="301:70"><name pos:start="301:70" pos:end="301:70">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="305:13" pos:end="315:15">/*

             * Some devices migrate VirtQueueElements that have been popped

             * from the avail ring but not yet returned to the used ring.

             * Since max ring size &lt; UINT16_MAX it's safe to use modulo

             * UINT16_MAX + 1 subtraction.

             */</comment>

            <expr_stmt pos:start="317:13" pos:end="319:54"><expr pos:start="317:13" pos:end="319:53"><name pos:start="317:13" pos:end="317:23"><name pos:start="317:13" pos:end="317:16">vdev</name><operator pos:start="317:17" pos:end="317:18">-&gt;</operator><name pos:start="317:19" pos:end="317:20">vq</name><index pos:start="317:21" pos:end="317:23">[<expr pos:start="317:22" pos:end="317:22"><name pos:start="317:22" pos:end="317:22">i</name></expr>]</index></name><operator pos:start="317:24" pos:end="317:24">.</operator><name pos:start="317:25" pos:end="317:29">inuse</name> <operator pos:start="317:31" pos:end="317:31">=</operator> <operator pos:start="317:33" pos:end="317:33">(</operator><name pos:start="317:34" pos:end="317:41">uint16_t</name><operator pos:start="317:42" pos:end="317:42">)</operator><operator pos:start="317:43" pos:end="317:43">(</operator><name pos:start="317:44" pos:end="317:54"><name pos:start="317:44" pos:end="317:47">vdev</name><operator pos:start="317:48" pos:end="317:49">-&gt;</operator><name pos:start="317:50" pos:end="317:51">vq</name><index pos:start="317:52" pos:end="317:54">[<expr pos:start="317:53" pos:end="317:53"><name pos:start="317:53" pos:end="317:53">i</name></expr>]</index></name><operator pos:start="317:55" pos:end="317:55">.</operator><name pos:start="317:56" pos:end="317:69">last_avail_idx</name> <operator pos:start="317:71" pos:end="317:71">-</operator>

                                <name pos:start="319:33" pos:end="319:43"><name pos:start="319:33" pos:end="319:36">vdev</name><operator pos:start="319:37" pos:end="319:38">-&gt;</operator><name pos:start="319:39" pos:end="319:40">vq</name><index pos:start="319:41" pos:end="319:43">[<expr pos:start="319:42" pos:end="319:42"><name pos:start="319:42" pos:end="319:42">i</name></expr>]</index></name><operator pos:start="319:44" pos:end="319:44">.</operator><name pos:start="319:45" pos:end="319:52">used_idx</name><operator pos:start="319:53" pos:end="319:53">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="321:13" pos:end="335:13"><if pos:start="321:13" pos:end="335:13">if <condition pos:start="321:16" pos:end="321:58">(<expr pos:start="321:17" pos:end="321:57"><name pos:start="321:17" pos:end="321:27"><name pos:start="321:17" pos:end="321:20">vdev</name><operator pos:start="321:21" pos:end="321:22">-&gt;</operator><name pos:start="321:23" pos:end="321:24">vq</name><index pos:start="321:25" pos:end="321:27">[<expr pos:start="321:26" pos:end="321:26"><name pos:start="321:26" pos:end="321:26">i</name></expr>]</index></name><operator pos:start="321:28" pos:end="321:28">.</operator><name pos:start="321:29" pos:end="321:33">inuse</name> <operator pos:start="321:35" pos:end="321:35">&gt;</operator> <name pos:start="321:37" pos:end="321:47"><name pos:start="321:37" pos:end="321:40">vdev</name><operator pos:start="321:41" pos:end="321:42">-&gt;</operator><name pos:start="321:43" pos:end="321:44">vq</name><index pos:start="321:45" pos:end="321:47">[<expr pos:start="321:46" pos:end="321:46"><name pos:start="321:46" pos:end="321:46">i</name></expr>]</index></name><operator pos:start="321:48" pos:end="321:48">.</operator><name pos:start="321:49" pos:end="321:57"><name pos:start="321:49" pos:end="321:53">vring</name><operator pos:start="321:54" pos:end="321:54">.</operator><name pos:start="321:55" pos:end="321:57">num</name></name></expr>)</condition> <block pos:start="321:60" pos:end="335:13">{<block_content pos:start="323:17" pos:end="333:26">

                <expr_stmt pos:start="323:17" pos:end="331:51"><expr pos:start="323:17" pos:end="331:50"><call pos:start="323:17" pos:end="331:50"><name pos:start="323:17" pos:end="323:28">error_report</name><argument_list pos:start="323:29" pos:end="331:50">(<argument pos:start="323:30" pos:end="325:44"><expr pos:start="323:30" pos:end="325:44"><literal type="string" pos:start="323:30" pos:end="323:71">"VQ %d size 0x%x &lt; last_avail_idx 0x%x - "</literal>

                             <literal type="string" pos:start="325:30" pos:end="325:44">"used_idx 0x%x"</literal></expr></argument>,

                             <argument pos:start="327:30" pos:end="327:30"><expr pos:start="327:30" pos:end="327:30"><name pos:start="327:30" pos:end="327:30">i</name></expr></argument>, <argument pos:start="327:33" pos:end="327:53"><expr pos:start="327:33" pos:end="327:53"><name pos:start="327:33" pos:end="327:43"><name pos:start="327:33" pos:end="327:36">vdev</name><operator pos:start="327:37" pos:end="327:38">-&gt;</operator><name pos:start="327:39" pos:end="327:40">vq</name><index pos:start="327:41" pos:end="327:43">[<expr pos:start="327:42" pos:end="327:42"><name pos:start="327:42" pos:end="327:42">i</name></expr>]</index></name><operator pos:start="327:44" pos:end="327:44">.</operator><name pos:start="327:45" pos:end="327:53"><name pos:start="327:45" pos:end="327:49">vring</name><operator pos:start="327:50" pos:end="327:50">.</operator><name pos:start="327:51" pos:end="327:53">num</name></name></expr></argument>,

                             <argument pos:start="329:30" pos:end="329:55"><expr pos:start="329:30" pos:end="329:55"><name pos:start="329:30" pos:end="329:40"><name pos:start="329:30" pos:end="329:33">vdev</name><operator pos:start="329:34" pos:end="329:35">-&gt;</operator><name pos:start="329:36" pos:end="329:37">vq</name><index pos:start="329:38" pos:end="329:40">[<expr pos:start="329:39" pos:end="329:39"><name pos:start="329:39" pos:end="329:39">i</name></expr>]</index></name><operator pos:start="329:41" pos:end="329:41">.</operator><name pos:start="329:42" pos:end="329:55">last_avail_idx</name></expr></argument>,

                             <argument pos:start="331:30" pos:end="331:49"><expr pos:start="331:30" pos:end="331:49"><name pos:start="331:30" pos:end="331:40"><name pos:start="331:30" pos:end="331:33">vdev</name><operator pos:start="331:34" pos:end="331:35">-&gt;</operator><name pos:start="331:36" pos:end="331:37">vq</name><index pos:start="331:38" pos:end="331:40">[<expr pos:start="331:39" pos:end="331:39"><name pos:start="331:39" pos:end="331:39">i</name></expr>]</index></name><operator pos:start="331:41" pos:end="331:41">.</operator><name pos:start="331:42" pos:end="331:49">used_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="333:17" pos:end="333:26">return <expr pos:start="333:24" pos:end="333:25"><operator pos:start="333:24" pos:end="333:24">-</operator><literal type="number" pos:start="333:25" pos:end="333:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="341:5" pos:end="341:22"><expr pos:start="341:5" pos:end="341:21"><call pos:start="341:5" pos:end="341:21"><name pos:start="341:5" pos:end="341:19">rcu_read_unlock</name><argument_list pos:start="341:20" pos:end="341:21">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="345:5" pos:end="345:13">return <expr pos:start="345:12" pos:end="345:12"><literal type="number" pos:start="345:12" pos:end="345:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
