<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26542.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:46"><name pos:start="1:1" pos:end="1:30">gen_intermediate_code_internal</name><argument_list pos:start="1:31" pos:end="3:46">(<argument pos:start="1:32" pos:end="1:49">MicroBlazeCPU *cpu</argument>, <argument pos:start="1:52" pos:end="1:71">TranslationBlock *tb</argument>,

                               <argument pos:start="3:32" pos:end="3:45">bool search_pc</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="399:1">{<block_content pos:start="7:5" pos:end="397:36">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:27">= <expr pos:start="7:20" pos:end="7:27"><call pos:start="7:20" pos:end="7:27"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:27">(<argument pos:start="7:24" pos:end="7:26"><expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">CPUMBState</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">env</name> <init pos:start="9:21" pos:end="9:31">= <expr pos:start="9:23" pos:end="9:31"><operator pos:start="9:23" pos:end="9:23">&amp;</operator><name pos:start="9:24" pos:end="9:31"><name pos:start="9:24" pos:end="9:26">cpu</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:31">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:21">pc_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">j</name></decl>, <decl pos:start="13:12" pos:end="13:13"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:13">lj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:23">DisasContext</name></name></type> <name pos:start="15:25" pos:end="15:27">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:23">DisasContext</name></name> <modifier pos:start="17:25" pos:end="17:25">*</modifier></type><name pos:start="17:26" pos:end="17:27">dc</name> <init pos:start="17:29" pos:end="17:34">= <expr pos:start="17:31" pos:end="17:34"><operator pos:start="17:31" pos:end="17:31">&amp;</operator><name pos:start="17:32" pos:end="17:34">ctx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:40"><decl pos:start="19:5" pos:end="19:28"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:28">next_page_start</name></decl>, <decl pos:start="19:31" pos:end="19:39"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:31" pos:end="19:39">org_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:16">target_ulong</name></type> <name pos:start="21:18" pos:end="21:20">npc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:17">num_insns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:18"><decl pos:start="25:5" pos:end="25:17"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:17">max_insns</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:12">pc_start</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:21"><name pos:start="29:16" pos:end="29:17">tb</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:21">pc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:18"><expr pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:6">dc</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:11">cpu</name></name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:17">cpu</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:16"><expr pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:6">dc</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:10">tb</name></name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:15">tb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:60"><expr pos:start="35:5" pos:end="35:59"><name pos:start="35:5" pos:end="35:13">org_flags</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:32"><name pos:start="35:17" pos:end="35:18">dc</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:32">synced_flags</name></name> <operator pos:start="35:34" pos:end="35:34">=</operator> <name pos:start="35:36" pos:end="35:47"><name pos:start="35:36" pos:end="35:37">dc</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:47">tb_flags</name></name> <operator pos:start="35:49" pos:end="35:49">=</operator> <name pos:start="35:51" pos:end="35:59"><name pos:start="35:51" pos:end="35:52">tb</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:59">flags</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:6">dc</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:14">is_jmp</name></name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:27">DISAS_NEXT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:16"><expr pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:11"><name pos:start="41:5" pos:end="41:6">dc</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:11">jmp</name></name> <operator pos:start="41:13" pos:end="41:13">=</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:51"><expr pos:start="43:5" pos:end="43:50"><name pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:6">dc</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:22">delayed_branch</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <operator pos:start="43:26" pos:end="43:26">!</operator><operator pos:start="43:27" pos:end="43:27">!</operator><operator pos:start="43:28" pos:end="43:28">(</operator><name pos:start="43:29" pos:end="43:40"><name pos:start="43:29" pos:end="43:30">dc</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:40">tb_flags</name></name> <operator pos:start="43:42" pos:end="43:42">&amp;</operator> <name pos:start="43:44" pos:end="43:49">D_FLAG</name><operator pos:start="43:50" pos:end="43:50">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:27">(<expr pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:10">dc</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:26">delayed_branch</name></name></expr>)</condition> <block pos:start="45:29" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:31">

        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:10">dc</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:15">jmp</name></name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:30">JMP_INDIRECT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:22"><expr pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:10"><name pos:start="51:5" pos:end="51:6">dc</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:10">pc</name></name> <operator pos:start="51:12" pos:end="51:12">=</operator> <name pos:start="51:14" pos:end="51:21">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:52"><expr pos:start="53:5" pos:end="53:51"><name pos:start="53:5" pos:end="53:26"><name pos:start="53:5" pos:end="53:6">dc</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:26">singlestep_enabled</name></name> <operator pos:start="53:28" pos:end="53:28">=</operator> <name pos:start="53:30" pos:end="53:51"><name pos:start="53:30" pos:end="53:31">cs</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:51">singlestep_enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:29"><expr pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:6">dc</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:24">cpustate_changed</name></name> <operator pos:start="55:26" pos:end="55:26">=</operator> <literal type="number" pos:start="55:28" pos:end="55:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:31"><expr pos:start="57:5" pos:end="57:30"><name pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:6">dc</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:26">abort_at_next_insn</name></name> <operator pos:start="57:28" pos:end="57:28">=</operator> <literal type="number" pos:start="57:30" pos:end="57:30">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:20"><expr pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:15"><name pos:start="59:5" pos:end="59:6">dc</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:15">nr_nops</name></name> <operator pos:start="59:17" pos:end="59:17">=</operator> <literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:21">(<expr pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:16">pc_start</name> <operator pos:start="63:18" pos:end="63:18">&amp;</operator> <literal type="number" pos:start="63:20" pos:end="63:20">3</literal></expr>)</condition> <block pos:start="63:23" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:65">

        <expr_stmt pos:start="65:9" pos:end="65:65"><expr pos:start="65:9" pos:end="65:64"><call pos:start="65:9" pos:end="65:64"><name pos:start="65:9" pos:end="65:17">cpu_abort</name><argument_list pos:start="65:18" pos:end="65:64">(<argument pos:start="65:19" pos:end="65:20"><expr pos:start="65:19" pos:end="65:20"><name pos:start="65:19" pos:end="65:20">cs</name></expr></argument>, <argument pos:start="65:23" pos:end="65:53"><expr pos:start="65:23" pos:end="65:53"><literal type="string" pos:start="65:23" pos:end="65:53">"Microblaze: unaligned PC=%x\n"</literal></expr></argument>, <argument pos:start="65:56" pos:end="65:63"><expr pos:start="65:56" pos:end="65:63"><name pos:start="65:56" pos:end="65:63">pc_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="81:5"><if pos:start="71:5" pos:end="81:5">if <condition pos:start="71:8" pos:end="71:46">(<expr pos:start="71:9" pos:end="71:45"><call pos:start="71:9" pos:end="71:45"><name pos:start="71:9" pos:end="71:26">qemu_loglevel_mask</name><argument_list pos:start="71:27" pos:end="71:45">(<argument pos:start="71:28" pos:end="71:44"><expr pos:start="71:28" pos:end="71:44"><name pos:start="71:28" pos:end="71:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:48" pos:end="81:5">{<block_content pos:start="75:9" pos:end="80:0">

<cpp:if pos:start="73:1" pos:end="73:15">#<cpp:directive pos:start="73:2" pos:end="73:3">if</cpp:directive> <expr pos:start="73:5" pos:end="73:15"><operator pos:start="73:5" pos:end="73:5">!</operator><name pos:start="73:6" pos:end="73:15">SIM_COMPAT</name></expr></cpp:if>

        <expr_stmt pos:start="75:9" pos:end="75:37"><expr pos:start="75:9" pos:end="75:36"><call pos:start="75:9" pos:end="75:36"><name pos:start="75:9" pos:end="75:16">qemu_log</name><argument_list pos:start="75:17" pos:end="75:36">(<argument pos:start="75:18" pos:end="75:35"><expr pos:start="75:18" pos:end="75:35"><literal type="string" pos:start="75:18" pos:end="75:35">"--------------\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="80:0"><expr pos:start="77:9" pos:end="77:34"><call pos:start="77:9" pos:end="77:34"><name pos:start="77:9" pos:end="77:21">log_cpu_state</name><argument_list pos:start="77:22" pos:end="77:34">(<argument pos:start="77:23" pos:end="77:30"><expr pos:start="77:23" pos:end="77:30"><call pos:start="77:23" pos:end="77:30"><name pos:start="77:23" pos:end="77:25">CPU</name><argument_list pos:start="77:26" pos:end="77:30">(<argument pos:start="77:27" pos:end="77:29"><expr pos:start="77:27" pos:end="77:29"><name pos:start="77:27" pos:end="77:29">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:33" pos:end="77:33"><expr pos:start="77:33" pos:end="77:33"><literal type="number" pos:start="77:33" pos:end="77:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="79:1" pos:end="79:6">#<cpp:directive pos:start="79:2" pos:end="79:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:71"><expr pos:start="85:5" pos:end="85:70"><name pos:start="85:5" pos:end="85:19">next_page_start</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <operator pos:start="85:23" pos:end="85:23">(</operator><name pos:start="85:24" pos:end="85:31">pc_start</name> <operator pos:start="85:33" pos:end="85:33">&amp;</operator> <name pos:start="85:35" pos:end="85:50">TARGET_PAGE_MASK</name><operator pos:start="85:51" pos:end="85:51">)</operator> <operator pos:start="85:53" pos:end="85:53">+</operator> <name pos:start="85:55" pos:end="85:70">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:12"><expr pos:start="87:5" pos:end="87:11"><name pos:start="87:5" pos:end="87:6">lj</name> <operator pos:start="87:8" pos:end="87:8">=</operator> <operator pos:start="87:10" pos:end="87:10">-</operator><literal type="number" pos:start="87:11" pos:end="87:11">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:18"><expr pos:start="89:5" pos:end="89:17"><name pos:start="89:5" pos:end="89:13">num_insns</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <literal type="number" pos:start="89:17" pos:end="89:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:43"><expr pos:start="91:5" pos:end="91:42"><name pos:start="91:5" pos:end="91:13">max_insns</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <name pos:start="91:17" pos:end="91:26"><name pos:start="91:17" pos:end="91:18">tb</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:26">cflags</name></name> <operator pos:start="91:28" pos:end="91:28">&amp;</operator> <name pos:start="91:30" pos:end="91:42">CF_COUNT_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="95:34"><if pos:start="93:5" pos:end="95:34">if <condition pos:start="93:8" pos:end="93:23">(<expr pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:17">max_insns</name> <operator pos:start="93:19" pos:end="93:20">==</operator> <literal type="number" pos:start="93:22" pos:end="93:22">0</literal></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:34"><block_content pos:start="95:9" pos:end="95:34">

        <expr_stmt pos:start="95:9" pos:end="95:34"><expr pos:start="95:9" pos:end="95:33"><name pos:start="95:9" pos:end="95:17">max_insns</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:33">CF_COUNT_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:21"><expr pos:start="99:5" pos:end="99:20"><call pos:start="99:5" pos:end="99:20"><name pos:start="99:5" pos:end="99:16">gen_tb_start</name><argument_list pos:start="99:17" pos:end="99:20">(<argument pos:start="99:18" pos:end="99:19"><expr pos:start="99:18" pos:end="99:19"><name pos:start="99:18" pos:end="99:19">tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <do pos:start="101:5" pos:end="255:39">do

    <block pos:start="103:5" pos:end="247:5">{<block_content pos:start="107:9" pos:end="245:9">

<cpp:if pos:start="105:1" pos:end="105:14">#<cpp:directive pos:start="105:2" pos:end="105:3">if</cpp:directive> <expr pos:start="105:5" pos:end="105:14"><name pos:start="105:5" pos:end="105:14">SIM_COMPAT</name></expr></cpp:if>

        <if_stmt pos:start="107:9" pos:end="116:0"><if pos:start="107:9" pos:end="116:0">if <condition pos:start="107:12" pos:end="107:50">(<expr pos:start="107:13" pos:end="107:49"><call pos:start="107:13" pos:end="107:49"><name pos:start="107:13" pos:end="107:30">qemu_loglevel_mask</name><argument_list pos:start="107:31" pos:end="107:49">(<argument pos:start="107:32" pos:end="107:48"><expr pos:start="107:32" pos:end="107:48"><name pos:start="107:32" pos:end="107:48">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:52" pos:end="116:0">{<block_content pos:start="109:13" pos:end="111:31">

            <expr_stmt pos:start="109:13" pos:end="109:51"><expr pos:start="109:13" pos:end="109:50"><call pos:start="109:13" pos:end="109:50"><name pos:start="109:13" pos:end="109:27">tcg_gen_movi_tl</name><argument_list pos:start="109:28" pos:end="109:50">(<argument pos:start="109:29" pos:end="109:41"><expr pos:start="109:29" pos:end="109:41"><name pos:start="109:29" pos:end="109:41"><name pos:start="109:29" pos:end="109:34">cpu_SR</name><index pos:start="109:35" pos:end="109:41">[<expr pos:start="109:36" pos:end="109:40"><name pos:start="109:36" pos:end="109:40">SR_PC</name></expr>]</index></name></expr></argument>, <argument pos:start="109:44" pos:end="109:49"><expr pos:start="109:44" pos:end="109:49"><name pos:start="109:44" pos:end="109:49"><name pos:start="109:44" pos:end="109:45">dc</name><operator pos:start="109:46" pos:end="109:47">-&gt;</operator><name pos:start="109:48" pos:end="109:49">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:31"><expr pos:start="111:13" pos:end="111:30"><call pos:start="111:13" pos:end="111:30"><name pos:start="111:13" pos:end="111:28">gen_helper_debug</name><argument_list pos:start="111:29" pos:end="111:30">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="115:1" pos:end="115:6">#<cpp:directive pos:start="115:2" pos:end="115:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="117:9" pos:end="117:34"><expr pos:start="117:9" pos:end="117:33"><call pos:start="117:9" pos:end="117:33"><name pos:start="117:9" pos:end="117:24">check_breakpoint</name><argument_list pos:start="117:25" pos:end="117:33">(<argument pos:start="117:26" pos:end="117:28"><expr pos:start="117:26" pos:end="117:28"><name pos:start="117:26" pos:end="117:28">env</name></expr></argument>, <argument pos:start="117:31" pos:end="117:32"><expr pos:start="117:31" pos:end="117:32"><name pos:start="117:31" pos:end="117:32">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="121:9" pos:end="141:9"><if pos:start="121:9" pos:end="141:9">if <condition pos:start="121:12" pos:end="121:22">(<expr pos:start="121:13" pos:end="121:21"><name pos:start="121:13" pos:end="121:21">search_pc</name></expr>)</condition> <block pos:start="121:24" pos:end="141:9">{<block_content pos:start="123:13" pos:end="139:63">

            <expr_stmt pos:start="123:13" pos:end="123:35"><expr pos:start="123:13" pos:end="123:34"><name pos:start="123:13" pos:end="123:13">j</name> <operator pos:start="123:15" pos:end="123:15">=</operator> <call pos:start="123:17" pos:end="123:34"><name pos:start="123:17" pos:end="123:32">tcg_op_buf_count</name><argument_list pos:start="123:33" pos:end="123:34">()</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="125:13" pos:end="133:13"><if pos:start="125:13" pos:end="133:13">if <condition pos:start="125:16" pos:end="125:23">(<expr pos:start="125:17" pos:end="125:22"><name pos:start="125:17" pos:end="125:18">lj</name> <operator pos:start="125:20" pos:end="125:20">&lt;</operator> <name pos:start="125:22" pos:end="125:22">j</name></expr>)</condition> <block pos:start="125:25" pos:end="133:13">{<block_content pos:start="127:17" pos:end="131:58">

                <expr_stmt pos:start="127:17" pos:end="127:21"><expr pos:start="127:17" pos:end="127:20"><name pos:start="127:17" pos:end="127:18">lj</name><operator pos:start="127:19" pos:end="127:20">++</operator></expr>;</expr_stmt>

                <while pos:start="129:17" pos:end="131:58">while <condition pos:start="129:23" pos:end="129:30">(<expr pos:start="129:24" pos:end="129:29"><name pos:start="129:24" pos:end="129:25">lj</name> <operator pos:start="129:27" pos:end="129:27">&lt;</operator> <name pos:start="129:29" pos:end="129:29">j</name></expr>)</condition><block type="pseudo" pos:start="131:21" pos:end="131:58"><block_content pos:start="131:21" pos:end="131:58">

                    <expr_stmt pos:start="131:21" pos:end="131:58"><expr pos:start="131:21" pos:end="131:57"><name pos:start="131:21" pos:end="131:53"><name pos:start="131:21" pos:end="131:27">tcg_ctx</name><operator pos:start="131:28" pos:end="131:28">.</operator><name pos:start="131:29" pos:end="131:47">gen_opc_instr_start</name><index pos:start="131:48" pos:end="131:53">[<expr pos:start="131:49" pos:end="131:52"><name pos:start="131:49" pos:end="131:50">lj</name><operator pos:start="131:51" pos:end="131:52">++</operator></expr>]</index></name> <operator pos:start="131:55" pos:end="131:55">=</operator> <literal type="number" pos:start="131:57" pos:end="131:57">0</literal></expr>;</expr_stmt></block_content></block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:44"><expr pos:start="135:13" pos:end="135:43"><name pos:start="135:13" pos:end="135:34"><name pos:start="135:13" pos:end="135:19">tcg_ctx</name><operator pos:start="135:20" pos:end="135:20">.</operator><name pos:start="135:21" pos:end="135:30">gen_opc_pc</name><index pos:start="135:31" pos:end="135:34">[<expr pos:start="135:32" pos:end="135:33"><name pos:start="135:32" pos:end="135:33">lj</name></expr>]</index></name> <operator pos:start="135:36" pos:end="135:36">=</operator> <name pos:start="135:38" pos:end="135:43"><name pos:start="135:38" pos:end="135:39">dc</name><operator pos:start="135:40" pos:end="135:41">-&gt;</operator><name pos:start="135:42" pos:end="135:43">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:48"><expr pos:start="137:13" pos:end="137:47"><name pos:start="137:13" pos:end="137:43"><name pos:start="137:13" pos:end="137:19">tcg_ctx</name><operator pos:start="137:20" pos:end="137:20">.</operator><name pos:start="137:21" pos:end="137:39">gen_opc_instr_start</name><index pos:start="137:40" pos:end="137:43">[<expr pos:start="137:41" pos:end="137:42"><name pos:start="137:41" pos:end="137:42">lj</name></expr>]</index></name> <operator pos:start="137:45" pos:end="137:45">=</operator> <literal type="number" pos:start="137:47" pos:end="137:47">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="139:25" pos:end="139:63"><expr pos:start="139:25" pos:end="139:62"><name pos:start="139:25" pos:end="139:50"><name pos:start="139:25" pos:end="139:31">tcg_ctx</name><operator pos:start="139:32" pos:end="139:32">.</operator><name pos:start="139:33" pos:end="139:46">gen_opc_icount</name><index pos:start="139:47" pos:end="139:50">[<expr pos:start="139:48" pos:end="139:49"><name pos:start="139:48" pos:end="139:49">lj</name></expr>]</index></name> <operator pos:start="139:52" pos:end="139:52">=</operator> <name pos:start="139:54" pos:end="139:62">num_insns</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="145:9" pos:end="145:28">/* Pretty disas.  */</comment>

        <expr_stmt pos:start="147:9" pos:end="147:36"><expr pos:start="147:9" pos:end="147:35"><call pos:start="147:9" pos:end="147:35"><name pos:start="147:9" pos:end="147:15">LOG_DIS</name><argument_list pos:start="147:16" pos:end="147:35">(<argument pos:start="147:17" pos:end="147:26"><expr pos:start="147:17" pos:end="147:26"><literal type="string" pos:start="147:17" pos:end="147:26">"%8.8x:\t"</literal></expr></argument>, <argument pos:start="147:29" pos:end="147:34"><expr pos:start="147:29" pos:end="147:34"><name pos:start="147:29" pos:end="147:34"><name pos:start="147:29" pos:end="147:30">dc</name><operator pos:start="147:31" pos:end="147:32">-&gt;</operator><name pos:start="147:33" pos:end="147:34">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="151:9" pos:end="153:27"><if pos:start="151:9" pos:end="153:27">if <condition pos:start="151:12" pos:end="151:68">(<expr pos:start="151:13" pos:end="151:67"><name pos:start="151:13" pos:end="151:21">num_insns</name> <operator pos:start="151:23" pos:end="151:23">+</operator> <literal type="number" pos:start="151:25" pos:end="151:25">1</literal> <operator pos:start="151:27" pos:end="151:28">==</operator> <name pos:start="151:30" pos:end="151:38">max_insns</name> <operator pos:start="151:40" pos:end="151:41">&amp;&amp;</operator> <operator pos:start="151:43" pos:end="151:43">(</operator><name pos:start="151:44" pos:end="151:53"><name pos:start="151:44" pos:end="151:45">tb</name><operator pos:start="151:46" pos:end="151:47">-&gt;</operator><name pos:start="151:48" pos:end="151:53">cflags</name></name> <operator pos:start="151:55" pos:end="151:55">&amp;</operator> <name pos:start="151:57" pos:end="151:66">CF_LAST_IO</name><operator pos:start="151:67" pos:end="151:67">)</operator></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:27"><block_content pos:start="153:13" pos:end="153:27">

            <expr_stmt pos:start="153:13" pos:end="153:27"><expr pos:start="153:13" pos:end="153:26"><call pos:start="153:13" pos:end="153:26"><name pos:start="153:13" pos:end="153:24">gen_io_start</name><argument_list pos:start="153:25" pos:end="153:26">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:26"><expr pos:start="157:9" pos:end="157:25"><name pos:start="157:9" pos:end="157:21"><name pos:start="157:9" pos:end="157:10">dc</name><operator pos:start="157:11" pos:end="157:12">-&gt;</operator><name pos:start="157:13" pos:end="157:21">clear_imm</name></name> <operator pos:start="157:23" pos:end="157:23">=</operator> <literal type="number" pos:start="157:25" pos:end="157:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:46"><expr pos:start="159:9" pos:end="159:45"><call pos:start="159:9" pos:end="159:45"><name pos:start="159:9" pos:end="159:14">decode</name><argument_list pos:start="159:15" pos:end="159:45">(<argument pos:start="159:16" pos:end="159:17"><expr pos:start="159:16" pos:end="159:17"><name pos:start="159:16" pos:end="159:17">dc</name></expr></argument>, <argument pos:start="159:20" pos:end="159:44"><expr pos:start="159:20" pos:end="159:44"><call pos:start="159:20" pos:end="159:44"><name pos:start="159:20" pos:end="159:31">cpu_ldl_code</name><argument_list pos:start="159:32" pos:end="159:44">(<argument pos:start="159:33" pos:end="159:35"><expr pos:start="159:33" pos:end="159:35"><name pos:start="159:33" pos:end="159:35">env</name></expr></argument>, <argument pos:start="159:38" pos:end="159:43"><expr pos:start="159:38" pos:end="159:43"><name pos:start="159:38" pos:end="159:43"><name pos:start="159:38" pos:end="159:39">dc</name><operator pos:start="159:40" pos:end="159:41">-&gt;</operator><name pos:start="159:42" pos:end="159:43">pc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="161:9" pos:end="163:38"><if pos:start="161:9" pos:end="163:38">if <condition pos:start="161:12" pos:end="161:26">(<expr pos:start="161:13" pos:end="161:25"><name pos:start="161:13" pos:end="161:25"><name pos:start="161:13" pos:end="161:14">dc</name><operator pos:start="161:15" pos:end="161:16">-&gt;</operator><name pos:start="161:17" pos:end="161:25">clear_imm</name></name></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:38"><block_content pos:start="163:13" pos:end="163:38">

            <expr_stmt pos:start="163:13" pos:end="163:38"><expr pos:start="163:13" pos:end="163:37"><name pos:start="163:13" pos:end="163:24"><name pos:start="163:13" pos:end="163:14">dc</name><operator pos:start="163:15" pos:end="163:16">-&gt;</operator><name pos:start="163:17" pos:end="163:24">tb_flags</name></name> <operator pos:start="163:26" pos:end="163:27">&amp;=</operator> <operator pos:start="163:29" pos:end="163:29">~</operator><name pos:start="163:30" pos:end="163:37">IMM_FLAG</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:20"><expr pos:start="165:9" pos:end="165:19"><name pos:start="165:9" pos:end="165:14"><name pos:start="165:9" pos:end="165:10">dc</name><operator pos:start="165:11" pos:end="165:12">-&gt;</operator><name pos:start="165:13" pos:end="165:14">pc</name></name> <operator pos:start="165:16" pos:end="165:17">+=</operator> <literal type="number" pos:start="165:19" pos:end="165:19">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:20"><expr pos:start="167:9" pos:end="167:19"><name pos:start="167:9" pos:end="167:17">num_insns</name><operator pos:start="167:18" pos:end="167:19">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="171:9" pos:end="239:9"><if pos:start="171:9" pos:end="239:9">if <condition pos:start="171:12" pos:end="171:31">(<expr pos:start="171:13" pos:end="171:30"><name pos:start="171:13" pos:end="171:30"><name pos:start="171:13" pos:end="171:14">dc</name><operator pos:start="171:15" pos:end="171:16">-&gt;</operator><name pos:start="171:17" pos:end="171:30">delayed_branch</name></name></expr>)</condition> <block pos:start="171:33" pos:end="239:9">{<block_content pos:start="173:13" pos:end="237:13">

            <expr_stmt pos:start="173:13" pos:end="173:33"><expr pos:start="173:13" pos:end="173:32"><name pos:start="173:13" pos:end="173:30"><name pos:start="173:13" pos:end="173:14">dc</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:30">delayed_branch</name></name><operator pos:start="173:31" pos:end="173:32">--</operator></expr>;</expr_stmt>

            <if_stmt pos:start="175:13" pos:end="237:13"><if pos:start="175:13" pos:end="237:13">if <condition pos:start="175:16" pos:end="175:36">(<expr pos:start="175:17" pos:end="175:35"><operator pos:start="175:17" pos:end="175:17">!</operator><name pos:start="175:18" pos:end="175:35"><name pos:start="175:18" pos:end="175:19">dc</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:35">delayed_branch</name></name></expr>)</condition> <block pos:start="175:38" pos:end="237:13">{<block_content pos:start="177:17" pos:end="235:22">

                <if_stmt pos:start="177:17" pos:end="179:31"><if pos:start="177:17" pos:end="179:31">if <condition pos:start="177:20" pos:end="177:45">(<expr pos:start="177:21" pos:end="177:44"><name pos:start="177:21" pos:end="177:32"><name pos:start="177:21" pos:end="177:22">dc</name><operator pos:start="177:23" pos:end="177:24">-&gt;</operator><name pos:start="177:25" pos:end="177:32">tb_flags</name></name> <operator pos:start="177:34" pos:end="177:34">&amp;</operator> <name pos:start="177:36" pos:end="177:44">DRTI_FLAG</name></expr>)</condition><block type="pseudo" pos:start="179:21" pos:end="179:31"><block_content pos:start="179:21" pos:end="179:31">

                    <expr_stmt pos:start="179:21" pos:end="179:31"><expr pos:start="179:21" pos:end="179:30"><call pos:start="179:21" pos:end="179:30"><name pos:start="179:21" pos:end="179:26">do_rti</name><argument_list pos:start="179:27" pos:end="179:30">(<argument pos:start="179:28" pos:end="179:29"><expr pos:start="179:28" pos:end="179:29"><name pos:start="179:28" pos:end="179:29">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                 <if_stmt pos:start="181:18" pos:end="183:31"><if pos:start="181:18" pos:end="183:31">if <condition pos:start="181:21" pos:end="181:46">(<expr pos:start="181:22" pos:end="181:45"><name pos:start="181:22" pos:end="181:33"><name pos:start="181:22" pos:end="181:23">dc</name><operator pos:start="181:24" pos:end="181:25">-&gt;</operator><name pos:start="181:26" pos:end="181:33">tb_flags</name></name> <operator pos:start="181:35" pos:end="181:35">&amp;</operator> <name pos:start="181:37" pos:end="181:45">DRTB_FLAG</name></expr>)</condition><block type="pseudo" pos:start="183:21" pos:end="183:31"><block_content pos:start="183:21" pos:end="183:31">

                    <expr_stmt pos:start="183:21" pos:end="183:31"><expr pos:start="183:21" pos:end="183:30"><call pos:start="183:21" pos:end="183:30"><name pos:start="183:21" pos:end="183:26">do_rtb</name><argument_list pos:start="183:27" pos:end="183:30">(<argument pos:start="183:28" pos:end="183:29"><expr pos:start="183:28" pos:end="183:29"><name pos:start="183:28" pos:end="183:29">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="185:17" pos:end="187:31"><if pos:start="185:17" pos:end="187:31">if <condition pos:start="185:20" pos:end="185:45">(<expr pos:start="185:21" pos:end="185:44"><name pos:start="185:21" pos:end="185:32"><name pos:start="185:21" pos:end="185:22">dc</name><operator pos:start="185:23" pos:end="185:24">-&gt;</operator><name pos:start="185:25" pos:end="185:32">tb_flags</name></name> <operator pos:start="185:34" pos:end="185:34">&amp;</operator> <name pos:start="185:36" pos:end="185:44">DRTE_FLAG</name></expr>)</condition><block type="pseudo" pos:start="187:21" pos:end="187:31"><block_content pos:start="187:21" pos:end="187:31">

                    <expr_stmt pos:start="187:21" pos:end="187:31"><expr pos:start="187:21" pos:end="187:30"><call pos:start="187:21" pos:end="187:30"><name pos:start="187:21" pos:end="187:26">do_rte</name><argument_list pos:start="187:27" pos:end="187:30">(<argument pos:start="187:28" pos:end="187:29"><expr pos:start="187:28" pos:end="187:29"><name pos:start="187:28" pos:end="187:29">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <comment type="block" pos:start="189:17" pos:end="189:49">/* Clear the delay slot flag.  */</comment>

                <expr_stmt pos:start="191:17" pos:end="191:40"><expr pos:start="191:17" pos:end="191:39"><name pos:start="191:17" pos:end="191:28"><name pos:start="191:17" pos:end="191:18">dc</name><operator pos:start="191:19" pos:end="191:20">-&gt;</operator><name pos:start="191:21" pos:end="191:28">tb_flags</name></name> <operator pos:start="191:30" pos:end="191:31">&amp;=</operator> <operator pos:start="191:33" pos:end="191:33">~</operator><name pos:start="191:34" pos:end="191:39">D_FLAG</name></expr>;</expr_stmt>

                <comment type="block" pos:start="193:17" pos:end="193:67">/* If it is a direct jump, try direct chaining.  */</comment>

                <if_stmt pos:start="195:17" pos:end="233:17"><if pos:start="195:17" pos:end="201:17">if <condition pos:start="195:20" pos:end="195:44">(<expr pos:start="195:21" pos:end="195:43"><name pos:start="195:21" pos:end="195:27"><name pos:start="195:21" pos:end="195:22">dc</name><operator pos:start="195:23" pos:end="195:24">-&gt;</operator><name pos:start="195:25" pos:end="195:27">jmp</name></name> <operator pos:start="195:29" pos:end="195:30">==</operator> <name pos:start="195:32" pos:end="195:43">JMP_INDIRECT</name></expr>)</condition> <block pos:start="195:46" pos:end="201:17">{<block_content pos:start="197:21" pos:end="199:44">

                    <expr_stmt pos:start="197:21" pos:end="197:73"><expr pos:start="197:21" pos:end="197:72"><call pos:start="197:21" pos:end="197:72"><name pos:start="197:21" pos:end="197:33">eval_cond_jmp</name><argument_list pos:start="197:34" pos:end="197:72">(<argument pos:start="197:35" pos:end="197:36"><expr pos:start="197:35" pos:end="197:36"><name pos:start="197:35" pos:end="197:36">dc</name></expr></argument>, <argument pos:start="197:39" pos:end="197:49"><expr pos:start="197:39" pos:end="197:49"><name pos:start="197:39" pos:end="197:49">env_btarget</name></expr></argument>, <argument pos:start="197:52" pos:end="197:71"><expr pos:start="197:52" pos:end="197:71"><call pos:start="197:52" pos:end="197:71"><name pos:start="197:52" pos:end="197:63">tcg_const_tl</name><argument_list pos:start="197:64" pos:end="197:71">(<argument pos:start="197:65" pos:end="197:70"><expr pos:start="197:65" pos:end="197:70"><name pos:start="197:65" pos:end="197:70"><name pos:start="197:65" pos:end="197:66">dc</name><operator pos:start="197:67" pos:end="197:68">-&gt;</operator><name pos:start="197:69" pos:end="197:70">pc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="199:21" pos:end="199:44"><expr pos:start="199:21" pos:end="199:43"><name pos:start="199:21" pos:end="199:30"><name pos:start="199:21" pos:end="199:22">dc</name><operator pos:start="199:23" pos:end="199:24">-&gt;</operator><name pos:start="199:25" pos:end="199:30">is_jmp</name></name> <operator pos:start="199:32" pos:end="199:32">=</operator> <name pos:start="199:34" pos:end="199:43">DISAS_JUMP</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="201:19" pos:end="209:17">else if <condition pos:start="201:27" pos:end="201:49">(<expr pos:start="201:28" pos:end="201:48"><name pos:start="201:28" pos:end="201:34"><name pos:start="201:28" pos:end="201:29">dc</name><operator pos:start="201:30" pos:end="201:31">-&gt;</operator><name pos:start="201:32" pos:end="201:34">jmp</name></name> <operator pos:start="201:36" pos:end="201:37">==</operator> <name pos:start="201:39" pos:end="201:48">JMP_DIRECT</name></expr>)</condition> <block pos:start="201:51" pos:end="209:17">{<block_content pos:start="203:21" pos:end="207:47">

                    <expr_stmt pos:start="203:21" pos:end="203:37"><expr pos:start="203:21" pos:end="203:36"><call pos:start="203:21" pos:end="203:36"><name pos:start="203:21" pos:end="203:32">t_sync_flags</name><argument_list pos:start="203:33" pos:end="203:36">(<argument pos:start="203:34" pos:end="203:35"><expr pos:start="203:34" pos:end="203:35"><name pos:start="203:34" pos:end="203:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="205:21" pos:end="205:51"><expr pos:start="205:21" pos:end="205:50"><call pos:start="205:21" pos:end="205:50"><name pos:start="205:21" pos:end="205:31">gen_goto_tb</name><argument_list pos:start="205:32" pos:end="205:50">(<argument pos:start="205:33" pos:end="205:34"><expr pos:start="205:33" pos:end="205:34"><name pos:start="205:33" pos:end="205:34">dc</name></expr></argument>, <argument pos:start="205:37" pos:end="205:37"><expr pos:start="205:37" pos:end="205:37"><literal type="number" pos:start="205:37" pos:end="205:37">0</literal></expr></argument>, <argument pos:start="205:40" pos:end="205:49"><expr pos:start="205:40" pos:end="205:49"><name pos:start="205:40" pos:end="205:49"><name pos:start="205:40" pos:end="205:41">dc</name><operator pos:start="205:42" pos:end="205:43">-&gt;</operator><name pos:start="205:44" pos:end="205:49">jmp_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="207:21" pos:end="207:47"><expr pos:start="207:21" pos:end="207:46"><name pos:start="207:21" pos:end="207:30"><name pos:start="207:21" pos:end="207:22">dc</name><operator pos:start="207:23" pos:end="207:24">-&gt;</operator><name pos:start="207:25" pos:end="207:30">is_jmp</name></name> <operator pos:start="207:32" pos:end="207:32">=</operator> <name pos:start="207:34" pos:end="207:46">DISAS_TB_JUMP</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="209:19" pos:end="233:17">else if <condition pos:start="209:27" pos:end="209:52">(<expr pos:start="209:28" pos:end="209:51"><name pos:start="209:28" pos:end="209:34"><name pos:start="209:28" pos:end="209:29">dc</name><operator pos:start="209:30" pos:end="209:31">-&gt;</operator><name pos:start="209:32" pos:end="209:34">jmp</name></name> <operator pos:start="209:36" pos:end="209:37">==</operator> <name pos:start="209:39" pos:end="209:51">JMP_DIRECT_CC</name></expr>)</condition> <block pos:start="209:54" pos:end="233:17">{<block_content pos:start="211:21" pos:end="231:47">

                    <decl_stmt pos:start="211:21" pos:end="211:27"><decl pos:start="211:21" pos:end="211:26"><type pos:start="211:21" pos:end="211:23"><name pos:start="211:21" pos:end="211:23">int</name></type> <name pos:start="211:25" pos:end="211:26">l1</name></decl>;</decl_stmt>



                    <expr_stmt pos:start="215:21" pos:end="215:37"><expr pos:start="215:21" pos:end="215:36"><call pos:start="215:21" pos:end="215:36"><name pos:start="215:21" pos:end="215:32">t_sync_flags</name><argument_list pos:start="215:33" pos:end="215:36">(<argument pos:start="215:34" pos:end="215:35"><expr pos:start="215:34" pos:end="215:35"><name pos:start="215:34" pos:end="215:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="217:21" pos:end="217:41"><expr pos:start="217:21" pos:end="217:40"><name pos:start="217:21" pos:end="217:22">l1</name> <operator pos:start="217:24" pos:end="217:24">=</operator> <call pos:start="217:26" pos:end="217:40"><name pos:start="217:26" pos:end="217:38">gen_new_label</name><argument_list pos:start="217:39" pos:end="217:40">()</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="219:21" pos:end="219:43">/* Conditional jmp.  */</comment>

                    <expr_stmt pos:start="221:21" pos:end="221:71"><expr pos:start="221:21" pos:end="221:70"><call pos:start="221:21" pos:end="221:70"><name pos:start="221:21" pos:end="221:38">tcg_gen_brcondi_tl</name><argument_list pos:start="221:39" pos:end="221:70">(<argument pos:start="221:40" pos:end="221:50"><expr pos:start="221:40" pos:end="221:50"><name pos:start="221:40" pos:end="221:50">TCG_COND_NE</name></expr></argument>, <argument pos:start="221:53" pos:end="221:62"><expr pos:start="221:53" pos:end="221:62"><name pos:start="221:53" pos:end="221:62">env_btaken</name></expr></argument>, <argument pos:start="221:65" pos:end="221:65"><expr pos:start="221:65" pos:end="221:65"><literal type="number" pos:start="221:65" pos:end="221:65">0</literal></expr></argument>, <argument pos:start="221:68" pos:end="221:69"><expr pos:start="221:68" pos:end="221:69"><name pos:start="221:68" pos:end="221:69">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="223:21" pos:end="223:47"><expr pos:start="223:21" pos:end="223:46"><call pos:start="223:21" pos:end="223:46"><name pos:start="223:21" pos:end="223:31">gen_goto_tb</name><argument_list pos:start="223:32" pos:end="223:46">(<argument pos:start="223:33" pos:end="223:34"><expr pos:start="223:33" pos:end="223:34"><name pos:start="223:33" pos:end="223:34">dc</name></expr></argument>, <argument pos:start="223:37" pos:end="223:37"><expr pos:start="223:37" pos:end="223:37"><literal type="number" pos:start="223:37" pos:end="223:37">1</literal></expr></argument>, <argument pos:start="223:40" pos:end="223:45"><expr pos:start="223:40" pos:end="223:45"><name pos:start="223:40" pos:end="223:45"><name pos:start="223:40" pos:end="223:41">dc</name><operator pos:start="223:42" pos:end="223:43">-&gt;</operator><name pos:start="223:44" pos:end="223:45">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="225:21" pos:end="225:38"><expr pos:start="225:21" pos:end="225:37"><call pos:start="225:21" pos:end="225:37"><name pos:start="225:21" pos:end="225:33">gen_set_label</name><argument_list pos:start="225:34" pos:end="225:37">(<argument pos:start="225:35" pos:end="225:36"><expr pos:start="225:35" pos:end="225:36"><name pos:start="225:35" pos:end="225:36">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="227:21" pos:end="227:51"><expr pos:start="227:21" pos:end="227:50"><call pos:start="227:21" pos:end="227:50"><name pos:start="227:21" pos:end="227:31">gen_goto_tb</name><argument_list pos:start="227:32" pos:end="227:50">(<argument pos:start="227:33" pos:end="227:34"><expr pos:start="227:33" pos:end="227:34"><name pos:start="227:33" pos:end="227:34">dc</name></expr></argument>, <argument pos:start="227:37" pos:end="227:37"><expr pos:start="227:37" pos:end="227:37"><literal type="number" pos:start="227:37" pos:end="227:37">0</literal></expr></argument>, <argument pos:start="227:40" pos:end="227:49"><expr pos:start="227:40" pos:end="227:49"><name pos:start="227:40" pos:end="227:49"><name pos:start="227:40" pos:end="227:41">dc</name><operator pos:start="227:42" pos:end="227:43">-&gt;</operator><name pos:start="227:44" pos:end="227:49">jmp_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="231:21" pos:end="231:47"><expr pos:start="231:21" pos:end="231:46"><name pos:start="231:21" pos:end="231:30"><name pos:start="231:21" pos:end="231:22">dc</name><operator pos:start="231:23" pos:end="231:24">-&gt;</operator><name pos:start="231:25" pos:end="231:30">is_jmp</name></name> <operator pos:start="231:32" pos:end="231:32">=</operator> <name pos:start="231:34" pos:end="231:46">DISAS_TB_JUMP</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="235:17" pos:end="235:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="241:9" pos:end="245:9"><if pos:start="241:9" pos:end="245:9">if <condition pos:start="241:12" pos:end="241:35">(<expr pos:start="241:13" pos:end="241:34"><name pos:start="241:13" pos:end="241:34"><name pos:start="241:13" pos:end="241:14">cs</name><operator pos:start="241:15" pos:end="241:16">-&gt;</operator><name pos:start="241:17" pos:end="241:34">singlestep_enabled</name></name></expr>)</condition> <block pos:start="241:37" pos:end="245:9">{<block_content pos:start="243:13" pos:end="243:18">

            <break pos:start="243:13" pos:end="243:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="247:13" pos:end="255:38">(<expr pos:start="247:14" pos:end="255:37"><operator pos:start="247:14" pos:end="247:14">!</operator><name pos:start="247:15" pos:end="247:24"><name pos:start="247:15" pos:end="247:16">dc</name><operator pos:start="247:17" pos:end="247:18">-&gt;</operator><name pos:start="247:19" pos:end="247:24">is_jmp</name></name> <operator pos:start="247:26" pos:end="247:27">&amp;&amp;</operator> <operator pos:start="247:29" pos:end="247:29">!</operator><name pos:start="247:30" pos:end="247:49"><name pos:start="247:30" pos:end="247:31">dc</name><operator pos:start="247:32" pos:end="247:33">-&gt;</operator><name pos:start="247:34" pos:end="247:49">cpustate_changed</name></name>

             <operator pos:start="249:14" pos:end="249:15">&amp;&amp;</operator> <operator pos:start="249:17" pos:end="249:17">!</operator><call pos:start="249:18" pos:end="249:34"><name pos:start="249:18" pos:end="249:32">tcg_op_buf_full</name><argument_list pos:start="249:33" pos:end="249:34">()</argument_list></call>

             <operator pos:start="251:14" pos:end="251:15">&amp;&amp;</operator> <operator pos:start="251:17" pos:end="251:17">!</operator><name pos:start="251:18" pos:end="251:27">singlestep</name>

             <operator pos:start="253:14" pos:end="253:15">&amp;&amp;</operator> <operator pos:start="253:17" pos:end="253:17">(</operator><name pos:start="253:18" pos:end="253:23"><name pos:start="253:18" pos:end="253:19">dc</name><operator pos:start="253:20" pos:end="253:21">-&gt;</operator><name pos:start="253:22" pos:end="253:23">pc</name></name> <operator pos:start="253:25" pos:end="253:25">&lt;</operator> <name pos:start="253:27" pos:end="253:41">next_page_start</name><operator pos:start="253:42" pos:end="253:42">)</operator>

             <operator pos:start="255:14" pos:end="255:15">&amp;&amp;</operator> <name pos:start="255:17" pos:end="255:25">num_insns</name> <operator pos:start="255:27" pos:end="255:27">&lt;</operator> <name pos:start="255:29" pos:end="255:37">max_insns</name></expr>)</condition>;</do>



    <expr_stmt pos:start="259:5" pos:end="259:17"><expr pos:start="259:5" pos:end="259:16"><name pos:start="259:5" pos:end="259:7">npc</name> <operator pos:start="259:9" pos:end="259:9">=</operator> <name pos:start="259:11" pos:end="259:16"><name pos:start="259:11" pos:end="259:12">dc</name><operator pos:start="259:13" pos:end="259:14">-&gt;</operator><name pos:start="259:15" pos:end="259:16">pc</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="261:5" pos:end="275:5"><if pos:start="261:5" pos:end="275:5">if <condition pos:start="261:8" pos:end="261:58">(<expr pos:start="261:9" pos:end="261:57"><name pos:start="261:9" pos:end="261:15"><name pos:start="261:9" pos:end="261:10">dc</name><operator pos:start="261:11" pos:end="261:12">-&gt;</operator><name pos:start="261:13" pos:end="261:15">jmp</name></name> <operator pos:start="261:17" pos:end="261:18">==</operator> <name pos:start="261:20" pos:end="261:29">JMP_DIRECT</name> <operator pos:start="261:31" pos:end="261:32">||</operator> <name pos:start="261:34" pos:end="261:40"><name pos:start="261:34" pos:end="261:35">dc</name><operator pos:start="261:36" pos:end="261:37">-&gt;</operator><name pos:start="261:38" pos:end="261:40">jmp</name></name> <operator pos:start="261:42" pos:end="261:43">==</operator> <name pos:start="261:45" pos:end="261:57">JMP_DIRECT_CC</name></expr>)</condition> <block pos:start="261:60" pos:end="275:5">{<block_content pos:start="263:9" pos:end="273:29">

        <if_stmt pos:start="263:9" pos:end="273:29"><if pos:start="263:9" pos:end="271:9">if <condition pos:start="263:12" pos:end="263:34">(<expr pos:start="263:13" pos:end="263:33"><name pos:start="263:13" pos:end="263:24"><name pos:start="263:13" pos:end="263:14">dc</name><operator pos:start="263:15" pos:end="263:16">-&gt;</operator><name pos:start="263:17" pos:end="263:24">tb_flags</name></name> <operator pos:start="263:26" pos:end="263:26">&amp;</operator> <name pos:start="263:28" pos:end="263:33">D_FLAG</name></expr>)</condition> <block pos:start="263:36" pos:end="271:9">{<block_content pos:start="265:13" pos:end="269:30">

            <expr_stmt pos:start="265:13" pos:end="265:38"><expr pos:start="265:13" pos:end="265:37"><name pos:start="265:13" pos:end="265:22"><name pos:start="265:13" pos:end="265:14">dc</name><operator pos:start="265:15" pos:end="265:16">-&gt;</operator><name pos:start="265:17" pos:end="265:22">is_jmp</name></name> <operator pos:start="265:24" pos:end="265:24">=</operator> <name pos:start="265:26" pos:end="265:37">DISAS_UPDATE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:48"><expr pos:start="267:13" pos:end="267:47"><call pos:start="267:13" pos:end="267:47"><name pos:start="267:13" pos:end="267:27">tcg_gen_movi_tl</name><argument_list pos:start="267:28" pos:end="267:47">(<argument pos:start="267:29" pos:end="267:41"><expr pos:start="267:29" pos:end="267:41"><name pos:start="267:29" pos:end="267:41"><name pos:start="267:29" pos:end="267:34">cpu_SR</name><index pos:start="267:35" pos:end="267:41">[<expr pos:start="267:36" pos:end="267:40"><name pos:start="267:36" pos:end="267:40">SR_PC</name></expr>]</index></name></expr></argument>, <argument pos:start="267:44" pos:end="267:46"><expr pos:start="267:44" pos:end="267:46"><name pos:start="267:44" pos:end="267:46">npc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:30"><expr pos:start="269:13" pos:end="269:29"><call pos:start="269:13" pos:end="269:29"><name pos:start="269:13" pos:end="269:25">sync_jmpstate</name><argument_list pos:start="269:26" pos:end="269:29">(<argument pos:start="269:27" pos:end="269:28"><expr pos:start="269:27" pos:end="269:28"><name pos:start="269:27" pos:end="269:28">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="271:11" pos:end="273:29">else<block type="pseudo" pos:start="273:13" pos:end="273:29"><block_content pos:start="273:13" pos:end="273:29">

            <expr_stmt pos:start="273:13" pos:end="273:29"><expr pos:start="273:13" pos:end="273:28"><name pos:start="273:13" pos:end="273:15">npc</name> <operator pos:start="273:17" pos:end="273:17">=</operator> <name pos:start="273:19" pos:end="273:28"><name pos:start="273:19" pos:end="273:20">dc</name><operator pos:start="273:21" pos:end="273:22">-&gt;</operator><name pos:start="273:23" pos:end="273:28">jmp_pc</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="279:5" pos:end="281:21"><if pos:start="279:5" pos:end="281:21">if <condition pos:start="279:8" pos:end="279:32">(<expr pos:start="279:9" pos:end="279:31"><name pos:start="279:9" pos:end="279:18"><name pos:start="279:9" pos:end="279:10">tb</name><operator pos:start="279:11" pos:end="279:12">-&gt;</operator><name pos:start="279:13" pos:end="279:18">cflags</name></name> <operator pos:start="279:20" pos:end="279:20">&amp;</operator> <name pos:start="279:22" pos:end="279:31">CF_LAST_IO</name></expr>)</condition><block type="pseudo" pos:start="281:9" pos:end="281:21"><block_content pos:start="281:9" pos:end="281:21">

        <expr_stmt pos:start="281:9" pos:end="281:21"><expr pos:start="281:9" pos:end="281:20"><call pos:start="281:9" pos:end="281:20"><name pos:start="281:9" pos:end="281:18">gen_io_end</name><argument_list pos:start="281:19" pos:end="281:20">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="block" pos:start="283:5" pos:end="283:63">/* Force an update if the per-tb cpu state has changed.  */</comment>

    <if_stmt pos:start="285:5" pos:end="293:5"><if pos:start="285:5" pos:end="293:5">if <condition pos:start="285:8" pos:end="287:63">(<expr pos:start="285:9" pos:end="287:62"><name pos:start="285:9" pos:end="285:18"><name pos:start="285:9" pos:end="285:10">dc</name><operator pos:start="285:11" pos:end="285:12">-&gt;</operator><name pos:start="285:13" pos:end="285:18">is_jmp</name></name> <operator pos:start="285:20" pos:end="285:21">==</operator> <name pos:start="285:23" pos:end="285:32">DISAS_NEXT</name>

        <operator pos:start="287:9" pos:end="287:10">&amp;&amp;</operator> <operator pos:start="287:12" pos:end="287:12">(</operator><name pos:start="287:13" pos:end="287:32"><name pos:start="287:13" pos:end="287:14">dc</name><operator pos:start="287:15" pos:end="287:16">-&gt;</operator><name pos:start="287:17" pos:end="287:32">cpustate_changed</name></name> <operator pos:start="287:34" pos:end="287:35">||</operator> <name pos:start="287:37" pos:end="287:45">org_flags</name> <operator pos:start="287:47" pos:end="287:48">!=</operator> <name pos:start="287:50" pos:end="287:61"><name pos:start="287:50" pos:end="287:51">dc</name><operator pos:start="287:52" pos:end="287:53">-&gt;</operator><name pos:start="287:54" pos:end="287:61">tb_flags</name></name><operator pos:start="287:62" pos:end="287:62">)</operator></expr>)</condition> <block pos:start="287:65" pos:end="293:5">{<block_content pos:start="289:9" pos:end="291:44">

        <expr_stmt pos:start="289:9" pos:end="289:34"><expr pos:start="289:9" pos:end="289:33"><name pos:start="289:9" pos:end="289:18"><name pos:start="289:9" pos:end="289:10">dc</name><operator pos:start="289:11" pos:end="289:12">-&gt;</operator><name pos:start="289:13" pos:end="289:18">is_jmp</name></name> <operator pos:start="289:20" pos:end="289:20">=</operator> <name pos:start="289:22" pos:end="289:33">DISAS_UPDATE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:44"><expr pos:start="291:9" pos:end="291:43"><call pos:start="291:9" pos:end="291:43"><name pos:start="291:9" pos:end="291:23">tcg_gen_movi_tl</name><argument_list pos:start="291:24" pos:end="291:43">(<argument pos:start="291:25" pos:end="291:37"><expr pos:start="291:25" pos:end="291:37"><name pos:start="291:25" pos:end="291:37"><name pos:start="291:25" pos:end="291:30">cpu_SR</name><index pos:start="291:31" pos:end="291:37">[<expr pos:start="291:32" pos:end="291:36"><name pos:start="291:32" pos:end="291:36">SR_PC</name></expr>]</index></name></expr></argument>, <argument pos:start="291:40" pos:end="291:42"><expr pos:start="291:40" pos:end="291:42"><name pos:start="291:40" pos:end="291:42">npc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="295:5" pos:end="295:21"><expr pos:start="295:5" pos:end="295:20"><call pos:start="295:5" pos:end="295:20"><name pos:start="295:5" pos:end="295:16">t_sync_flags</name><argument_list pos:start="295:17" pos:end="295:20">(<argument pos:start="295:18" pos:end="295:19"><expr pos:start="295:18" pos:end="295:19"><name pos:start="295:18" pos:end="295:19">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="299:5" pos:end="347:5"><if pos:start="299:5" pos:end="315:5">if <condition pos:start="299:8" pos:end="299:41">(<expr pos:start="299:9" pos:end="299:40"><call pos:start="299:9" pos:end="299:40"><name pos:start="299:9" pos:end="299:16">unlikely</name><argument_list pos:start="299:17" pos:end="299:40">(<argument pos:start="299:18" pos:end="299:39"><expr pos:start="299:18" pos:end="299:39"><name pos:start="299:18" pos:end="299:39"><name pos:start="299:18" pos:end="299:19">cs</name><operator pos:start="299:20" pos:end="299:21">-&gt;</operator><name pos:start="299:22" pos:end="299:39">singlestep_enabled</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="299:43" pos:end="315:5">{<block_content pos:start="301:9" pos:end="313:31">

        <decl_stmt pos:start="301:9" pos:end="301:49"><decl pos:start="301:9" pos:end="301:48"><type pos:start="301:9" pos:end="301:16"><name pos:start="301:9" pos:end="301:16">TCGv_i32</name></type> <name pos:start="301:18" pos:end="301:20">tmp</name> <init pos:start="301:22" pos:end="301:48">= <expr pos:start="301:24" pos:end="301:48"><call pos:start="301:24" pos:end="301:48"><name pos:start="301:24" pos:end="301:36">tcg_const_i32</name><argument_list pos:start="301:37" pos:end="301:48">(<argument pos:start="301:38" pos:end="301:47"><expr pos:start="301:38" pos:end="301:47"><name pos:start="301:38" pos:end="301:47">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="305:9" pos:end="309:9"><if pos:start="305:9" pos:end="309:9">if <condition pos:start="305:12" pos:end="305:37">(<expr pos:start="305:13" pos:end="305:36"><name pos:start="305:13" pos:end="305:22"><name pos:start="305:13" pos:end="305:14">dc</name><operator pos:start="305:15" pos:end="305:16">-&gt;</operator><name pos:start="305:17" pos:end="305:22">is_jmp</name></name> <operator pos:start="305:24" pos:end="305:25">!=</operator> <name pos:start="305:27" pos:end="305:36">DISAS_JUMP</name></expr>)</condition> <block pos:start="305:39" pos:end="309:9">{<block_content pos:start="307:13" pos:end="307:48">

            <expr_stmt pos:start="307:13" pos:end="307:48"><expr pos:start="307:13" pos:end="307:47"><call pos:start="307:13" pos:end="307:47"><name pos:start="307:13" pos:end="307:27">tcg_gen_movi_tl</name><argument_list pos:start="307:28" pos:end="307:47">(<argument pos:start="307:29" pos:end="307:41"><expr pos:start="307:29" pos:end="307:41"><name pos:start="307:29" pos:end="307:41"><name pos:start="307:29" pos:end="307:34">cpu_SR</name><index pos:start="307:35" pos:end="307:41">[<expr pos:start="307:36" pos:end="307:40"><name pos:start="307:36" pos:end="307:40">SR_PC</name></expr>]</index></name></expr></argument>, <argument pos:start="307:44" pos:end="307:46"><expr pos:start="307:44" pos:end="307:46"><name pos:start="307:44" pos:end="307:46">npc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:49"><expr pos:start="311:9" pos:end="311:48"><call pos:start="311:9" pos:end="311:48"><name pos:start="311:9" pos:end="311:34">gen_helper_raise_exception</name><argument_list pos:start="311:35" pos:end="311:48">(<argument pos:start="311:36" pos:end="311:42"><expr pos:start="311:36" pos:end="311:42"><name pos:start="311:36" pos:end="311:42">cpu_env</name></expr></argument>, <argument pos:start="311:45" pos:end="311:47"><expr pos:start="311:45" pos:end="311:47"><name pos:start="311:45" pos:end="311:47">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:31"><expr pos:start="313:9" pos:end="313:30"><call pos:start="313:9" pos:end="313:30"><name pos:start="313:9" pos:end="313:25">tcg_temp_free_i32</name><argument_list pos:start="313:26" pos:end="313:30">(<argument pos:start="313:27" pos:end="313:29"><expr pos:start="313:27" pos:end="313:29"><name pos:start="313:27" pos:end="313:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="315:7" pos:end="347:5">else <block pos:start="315:12" pos:end="347:5">{<block_content pos:start="317:9" pos:end="345:9">

        <switch pos:start="317:9" pos:end="345:9">switch<condition pos:start="317:15" pos:end="317:26">(<expr pos:start="317:16" pos:end="317:25"><name pos:start="317:16" pos:end="317:25"><name pos:start="317:16" pos:end="317:17">dc</name><operator pos:start="317:18" pos:end="317:19">-&gt;</operator><name pos:start="317:20" pos:end="317:25">is_jmp</name></name></expr>)</condition> <block pos:start="317:28" pos:end="345:9">{<block_content pos:start="319:13" pos:end="343:22">

            <case pos:start="319:13" pos:end="319:28">case <expr pos:start="319:18" pos:end="319:27"><name pos:start="319:18" pos:end="319:27">DISAS_NEXT</name></expr>:</case>

                <expr_stmt pos:start="321:17" pos:end="321:40"><expr pos:start="321:17" pos:end="321:39"><call pos:start="321:17" pos:end="321:39"><name pos:start="321:17" pos:end="321:27">gen_goto_tb</name><argument_list pos:start="321:28" pos:end="321:39">(<argument pos:start="321:29" pos:end="321:30"><expr pos:start="321:29" pos:end="321:30"><name pos:start="321:29" pos:end="321:30">dc</name></expr></argument>, <argument pos:start="321:33" pos:end="321:33"><expr pos:start="321:33" pos:end="321:33"><literal type="number" pos:start="321:33" pos:end="321:33">1</literal></expr></argument>, <argument pos:start="321:36" pos:end="321:38"><expr pos:start="321:36" pos:end="321:38"><name pos:start="321:36" pos:end="321:38">npc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="323:17" pos:end="323:22">break;</break>

            <default pos:start="325:13" pos:end="325:20">default:</default>

            <case pos:start="327:13" pos:end="327:28">case <expr pos:start="327:18" pos:end="327:27"><name pos:start="327:18" pos:end="327:27">DISAS_JUMP</name></expr>:</case>

            <case pos:start="329:13" pos:end="329:30">case <expr pos:start="329:18" pos:end="329:29"><name pos:start="329:18" pos:end="329:29">DISAS_UPDATE</name></expr>:</case>

                <comment type="block" pos:start="331:17" pos:end="333:41">/* indicate that the hash table must be used

                   to find the next TB */</comment>

                <expr_stmt pos:start="335:17" pos:end="335:35"><expr pos:start="335:17" pos:end="335:34"><call pos:start="335:17" pos:end="335:34"><name pos:start="335:17" pos:end="335:31">tcg_gen_exit_tb</name><argument_list pos:start="335:32" pos:end="335:34">(<argument pos:start="335:33" pos:end="335:33"><expr pos:start="335:33" pos:end="335:33"><literal type="number" pos:start="335:33" pos:end="335:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="337:17" pos:end="337:22">break;</break>

            <case pos:start="339:13" pos:end="339:31">case <expr pos:start="339:18" pos:end="339:30"><name pos:start="339:18" pos:end="339:30">DISAS_TB_JUMP</name></expr>:</case>

                <comment type="block" pos:start="341:17" pos:end="341:46">/* nothing more to generate */</comment>

                <break pos:start="343:17" pos:end="343:22">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="349:5" pos:end="349:30"><expr pos:start="349:5" pos:end="349:29"><call pos:start="349:5" pos:end="349:29"><name pos:start="349:5" pos:end="349:14">gen_tb_end</name><argument_list pos:start="349:15" pos:end="349:29">(<argument pos:start="349:16" pos:end="349:17"><expr pos:start="349:16" pos:end="349:17"><name pos:start="349:16" pos:end="349:17">tb</name></expr></argument>, <argument pos:start="349:20" pos:end="349:28"><expr pos:start="349:20" pos:end="349:28"><name pos:start="349:20" pos:end="349:28">num_insns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="353:5" pos:end="376:0"><if pos:start="353:5" pos:end="363:5">if <condition pos:start="353:8" pos:end="353:18">(<expr pos:start="353:9" pos:end="353:17"><name pos:start="353:9" pos:end="353:17">search_pc</name></expr>)</condition> <block pos:start="353:20" pos:end="363:5">{<block_content pos:start="355:9" pos:end="361:50">

        <expr_stmt pos:start="355:9" pos:end="355:31"><expr pos:start="355:9" pos:end="355:30"><name pos:start="355:9" pos:end="355:9">j</name> <operator pos:start="355:11" pos:end="355:11">=</operator> <call pos:start="355:13" pos:end="355:30"><name pos:start="355:13" pos:end="355:28">tcg_op_buf_count</name><argument_list pos:start="355:29" pos:end="355:30">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="357:9" pos:end="357:13"><expr pos:start="357:9" pos:end="357:12"><name pos:start="357:9" pos:end="357:10">lj</name><operator pos:start="357:11" pos:end="357:12">++</operator></expr>;</expr_stmt>

        <while pos:start="359:9" pos:end="361:50">while <condition pos:start="359:15" pos:end="359:23">(<expr pos:start="359:16" pos:end="359:22"><name pos:start="359:16" pos:end="359:17">lj</name> <operator pos:start="359:19" pos:end="359:20">&lt;=</operator> <name pos:start="359:22" pos:end="359:22">j</name></expr>)</condition><block type="pseudo" pos:start="361:13" pos:end="361:50"><block_content pos:start="361:13" pos:end="361:50">

            <expr_stmt pos:start="361:13" pos:end="361:50"><expr pos:start="361:13" pos:end="361:49"><name pos:start="361:13" pos:end="361:45"><name pos:start="361:13" pos:end="361:19">tcg_ctx</name><operator pos:start="361:20" pos:end="361:20">.</operator><name pos:start="361:21" pos:end="361:39">gen_opc_instr_start</name><index pos:start="361:40" pos:end="361:45">[<expr pos:start="361:41" pos:end="361:44"><name pos:start="361:41" pos:end="361:42">lj</name><operator pos:start="361:43" pos:end="361:44">++</operator></expr>]</index></name> <operator pos:start="361:47" pos:end="361:47">=</operator> <literal type="number" pos:start="361:49" pos:end="361:49">0</literal></expr>;</expr_stmt></block_content></block></while>

    </block_content>}</block></if> <else pos:start="363:7" pos:end="376:0">else <block pos:start="363:12" pos:end="376:0">{<block_content pos:start="365:9" pos:end="367:39">

        <expr_stmt pos:start="365:9" pos:end="365:37"><expr pos:start="365:9" pos:end="365:36"><name pos:start="365:9" pos:end="365:16"><name pos:start="365:9" pos:end="365:10">tb</name><operator pos:start="365:11" pos:end="365:12">-&gt;</operator><name pos:start="365:13" pos:end="365:16">size</name></name> <operator pos:start="365:18" pos:end="365:18">=</operator> <name pos:start="365:20" pos:end="365:25"><name pos:start="365:20" pos:end="365:21">dc</name><operator pos:start="365:22" pos:end="365:23">-&gt;</operator><name pos:start="365:24" pos:end="365:25">pc</name></name> <operator pos:start="365:27" pos:end="365:27">-</operator> <name pos:start="365:29" pos:end="365:36">pc_start</name></expr>;</expr_stmt>

                <expr_stmt pos:start="367:17" pos:end="367:39"><expr pos:start="367:17" pos:end="367:38"><name pos:start="367:17" pos:end="367:26"><name pos:start="367:17" pos:end="367:18">tb</name><operator pos:start="367:19" pos:end="367:20">-&gt;</operator><name pos:start="367:21" pos:end="367:26">icount</name></name> <operator pos:start="367:28" pos:end="367:28">=</operator> <name pos:start="367:30" pos:end="367:38">num_insns</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:ifdef pos:start="373:1" pos:end="373:18">#<cpp:directive pos:start="373:2" pos:end="373:6">ifdef</cpp:directive> <name pos:start="373:8" pos:end="373:18">DEBUG_DISAS</name></cpp:ifdef>

<cpp:if pos:start="375:1" pos:end="375:15">#<cpp:directive pos:start="375:2" pos:end="375:3">if</cpp:directive> <expr pos:start="375:5" pos:end="375:15"><operator pos:start="375:5" pos:end="375:5">!</operator><name pos:start="375:6" pos:end="375:15">SIM_COMPAT</name></expr></cpp:if>

    <if_stmt pos:start="377:5" pos:end="396:0"><if pos:start="377:5" pos:end="396:0">if <condition pos:start="377:8" pos:end="377:46">(<expr pos:start="377:9" pos:end="377:45"><call pos:start="377:9" pos:end="377:45"><name pos:start="377:9" pos:end="377:26">qemu_loglevel_mask</name><argument_list pos:start="377:27" pos:end="377:45">(<argument pos:start="377:28" pos:end="377:44"><expr pos:start="377:28" pos:end="377:44"><name pos:start="377:28" pos:end="377:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="377:48" pos:end="396:0">{<block_content pos:start="379:9" pos:end="389:56">

        <expr_stmt pos:start="379:9" pos:end="382:0"><expr pos:start="379:9" pos:end="379:22"><call pos:start="379:9" pos:end="379:22"><name pos:start="379:9" pos:end="379:16">qemu_log</name><argument_list pos:start="379:17" pos:end="379:22">(<argument pos:start="379:18" pos:end="379:21"><expr pos:start="379:18" pos:end="379:21"><literal type="string" pos:start="379:18" pos:end="379:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="381:1" pos:end="381:13">#<cpp:directive pos:start="381:2" pos:end="381:3">if</cpp:directive> <expr pos:start="381:5" pos:end="381:13"><name pos:start="381:5" pos:end="381:13">DISAS_GNU</name></expr></cpp:if>

        <expr_stmt pos:start="383:9" pos:end="386:0"><expr pos:start="383:9" pos:end="383:61"><call pos:start="383:9" pos:end="383:61"><name pos:start="383:9" pos:end="383:24">log_target_disas</name><argument_list pos:start="383:25" pos:end="383:61">(<argument pos:start="383:26" pos:end="383:28"><expr pos:start="383:26" pos:end="383:28"><name pos:start="383:26" pos:end="383:28">env</name></expr></argument>, <argument pos:start="383:31" pos:end="383:38"><expr pos:start="383:31" pos:end="383:38"><name pos:start="383:31" pos:end="383:38">pc_start</name></expr></argument>, <argument pos:start="383:41" pos:end="383:57"><expr pos:start="383:41" pos:end="383:57"><name pos:start="383:41" pos:end="383:46"><name pos:start="383:41" pos:end="383:42">dc</name><operator pos:start="383:43" pos:end="383:44">-&gt;</operator><name pos:start="383:45" pos:end="383:46">pc</name></name> <operator pos:start="383:48" pos:end="383:48">-</operator> <name pos:start="383:50" pos:end="383:57">pc_start</name></expr></argument>, <argument pos:start="383:60" pos:end="383:60"><expr pos:start="383:60" pos:end="383:60"><literal type="number" pos:start="383:60" pos:end="383:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="385:1" pos:end="385:6">#<cpp:directive pos:start="385:2" pos:end="385:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="387:9" pos:end="389:56"><expr pos:start="387:9" pos:end="389:55"><call pos:start="387:9" pos:end="389:55"><name pos:start="387:9" pos:end="387:16">qemu_log</name><argument_list pos:start="387:17" pos:end="389:55">(<argument pos:start="387:18" pos:end="387:40"><expr pos:start="387:18" pos:end="387:40"><literal type="string" pos:start="387:18" pos:end="387:40">"\nisize=%d osize=%d\n"</literal></expr></argument>,

                 <argument pos:start="389:18" pos:end="389:34"><expr pos:start="389:18" pos:end="389:34"><name pos:start="389:18" pos:end="389:23"><name pos:start="389:18" pos:end="389:19">dc</name><operator pos:start="389:20" pos:end="389:21">-&gt;</operator><name pos:start="389:22" pos:end="389:23">pc</name></name> <operator pos:start="389:25" pos:end="389:25">-</operator> <name pos:start="389:27" pos:end="389:34">pc_start</name></expr></argument>, <argument pos:start="389:37" pos:end="389:54"><expr pos:start="389:37" pos:end="389:54"><call pos:start="389:37" pos:end="389:54"><name pos:start="389:37" pos:end="389:52">tcg_op_buf_count</name><argument_list pos:start="389:53" pos:end="389:54">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="393:1" pos:end="393:6">#<cpp:directive pos:start="393:2" pos:end="393:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="395:1" pos:end="395:6">#<cpp:directive pos:start="395:2" pos:end="395:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="397:5" pos:end="397:36"><expr pos:start="397:5" pos:end="397:35"><call pos:start="397:5" pos:end="397:35"><name pos:start="397:5" pos:end="397:10">assert</name><argument_list pos:start="397:11" pos:end="397:35">(<argument pos:start="397:12" pos:end="397:34"><expr pos:start="397:12" pos:end="397:34"><operator pos:start="397:12" pos:end="397:12">!</operator><name pos:start="397:13" pos:end="397:34"><name pos:start="397:13" pos:end="397:14">dc</name><operator pos:start="397:15" pos:end="397:16">-&gt;</operator><name pos:start="397:17" pos:end="397:34">abort_at_next_insn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
