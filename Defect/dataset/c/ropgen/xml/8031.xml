<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8031.c" pos:tabs="8"><function pos:start="1:1" pos:end="20:28"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">arm_gic_common_realize</name><parameter_list pos:start="1:35" pos:end="1:66">(<parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:46">DeviceState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">dev</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:58">Error</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">errp</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="20:28">{<block_content pos:start="3:5" pos:end="20:28">
    <decl_stmt pos:start="3:5" pos:end="3:38"><decl pos:start="3:5" pos:end="3:37"><type pos:start="3:5" pos:end="3:14"><name pos:start="3:5" pos:end="3:12">GICState</name> <modifier pos:start="3:14" pos:end="3:14">*</modifier></type><name pos:start="3:15" pos:end="3:15">s</name> <init pos:start="3:17" pos:end="3:37">= <expr pos:start="3:19" pos:end="3:37"><call pos:start="3:19" pos:end="3:37"><name pos:start="3:19" pos:end="3:32">ARM_GIC_COMMON</name><argument_list pos:start="3:33" pos:end="3:37">(<argument pos:start="3:34" pos:end="3:36"><expr pos:start="3:34" pos:end="3:36"><name pos:start="3:34" pos:end="3:36">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:29"><decl pos:start="4:5" pos:end="4:28"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:15">num_irq</name> <init pos:start="4:17" pos:end="4:28">= <expr pos:start="4:19" pos:end="4:28"><name pos:start="4:19" pos:end="4:28"><name pos:start="4:19" pos:end="4:19">s</name><operator pos:start="4:20" pos:end="4:21">-&gt;</operator><name pos:start="4:22" pos:end="4:28">num_irq</name></name></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="5:5" pos:end="20:28"><if pos:start="5:5" pos:end="20:28">if <condition pos:start="5:8" pos:end="5:30">(<expr pos:start="5:9" pos:end="5:29"><name pos:start="5:9" pos:end="5:18"><name pos:start="5:9" pos:end="5:9">s</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:18">num_cpu</name></name> <operator pos:start="5:20" pos:end="5:20">&gt;</operator> <name pos:start="5:22" pos:end="5:29">GIC_NCPU</name></expr>)</condition> <block pos:start="5:32" pos:end="20:28">{<block_content pos:start="6:9" pos:end="20:28">
        <expr_stmt pos:start="6:9" pos:end="7:41"><expr pos:start="6:9" pos:end="7:40"><call pos:start="6:9" pos:end="7:40"><name pos:start="6:9" pos:end="6:18">error_setg</name><argument_list pos:start="6:19" pos:end="7:40">(<argument pos:start="6:20" pos:end="6:23"><expr pos:start="6:20" pos:end="6:23"><name pos:start="6:20" pos:end="6:23">errp</name></expr></argument>, <argument pos:start="6:26" pos:end="6:67"><expr pos:start="6:26" pos:end="6:67"><literal type="string" pos:start="6:26" pos:end="6:67">"requested %u CPUs exceeds GIC maximum %d"</literal></expr></argument>,
                   <argument pos:start="7:20" pos:end="7:29"><expr pos:start="7:20" pos:end="7:29"><name pos:start="7:20" pos:end="7:29"><name pos:start="7:20" pos:end="7:20">s</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:29">num_cpu</name></name></expr></argument>, <argument pos:start="7:32" pos:end="7:39"><expr pos:start="7:32" pos:end="7:39"><name pos:start="7:32" pos:end="7:39">GIC_NCPU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:31"><expr pos:start="8:5" pos:end="8:30"><name pos:start="8:5" pos:end="8:14"><name pos:start="8:5" pos:end="8:5">s</name><operator pos:start="8:6" pos:end="8:7">-&gt;</operator><name pos:start="8:8" pos:end="8:14">num_irq</name></name> <operator pos:start="8:16" pos:end="8:17">+=</operator> <name pos:start="8:19" pos:end="8:30">GIC_BASE_IRQ</name></expr>;</expr_stmt>
    <if_stmt pos:start="9:5" pos:end="20:28"><if pos:start="9:5" pos:end="20:28">if <condition pos:start="9:8" pos:end="9:32">(<expr pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:18"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:18">num_irq</name></name> <operator pos:start="9:20" pos:end="9:20">&gt;</operator> <name pos:start="9:22" pos:end="9:31">GIC_MAXIRQ</name></expr>)</condition> <block pos:start="9:34" pos:end="20:28">{<block_content pos:start="10:9" pos:end="20:28">
        <expr_stmt pos:start="10:9" pos:end="12:40"><expr pos:start="10:9" pos:end="12:39"><call pos:start="10:9" pos:end="12:39"><name pos:start="10:9" pos:end="10:18">error_setg</name><argument_list pos:start="10:19" pos:end="12:39">(<argument pos:start="10:20" pos:end="10:23"><expr pos:start="10:20" pos:end="10:23"><name pos:start="10:20" pos:end="10:23">errp</name></expr></argument>,
                   <argument pos:start="11:20" pos:end="11:72"><expr pos:start="11:20" pos:end="11:72"><literal type="string" pos:start="11:20" pos:end="11:72">"requested %u interrupt lines exceeds GIC maximum %d"</literal></expr></argument>,
                   <argument pos:start="12:20" pos:end="12:26"><expr pos:start="12:20" pos:end="12:26"><name pos:start="12:20" pos:end="12:26">num_irq</name></expr></argument>, <argument pos:start="12:29" pos:end="12:38"><expr pos:start="12:29" pos:end="12:38"><name pos:start="12:29" pos:end="12:38">GIC_MAXIRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="13:5" pos:end="16:7">/* ITLinesNumber is represented as (N / 32) - 1 (see
     * gic_dist_readb) so this is an implementation imposed
     * restriction, not an architectural one:
     */</comment>
    <if_stmt pos:start="17:5" pos:end="20:28"><if pos:start="17:5" pos:end="20:28">if <condition pos:start="17:8" pos:end="17:45">(<expr pos:start="17:9" pos:end="17:44"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:18">num_irq</name></name> <operator pos:start="17:20" pos:end="17:20">&lt;</operator> <literal type="number" pos:start="17:22" pos:end="17:23">32</literal> <operator pos:start="17:25" pos:end="17:26">||</operator> <operator pos:start="17:28" pos:end="17:28">(</operator><name pos:start="17:29" pos:end="17:38"><name pos:start="17:29" pos:end="17:29">s</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:38">num_irq</name></name> <operator pos:start="17:40" pos:end="17:40">%</operator> <literal type="number" pos:start="17:42" pos:end="17:43">32</literal><operator pos:start="17:44" pos:end="17:44">)</operator></expr>)</condition> <block pos:start="17:47" pos:end="20:28">{<block_content pos:start="18:9" pos:end="20:28">
        <expr_stmt pos:start="18:9" pos:end="20:28"><expr pos:start="18:9" pos:end="20:27"><call pos:start="18:9" pos:end="20:27"><name pos:start="18:9" pos:end="18:18">error_setg</name><argument_list pos:start="18:19" pos:end="20:27">(<argument pos:start="18:20" pos:end="18:23"><expr pos:start="18:20" pos:end="18:23"><name pos:start="18:20" pos:end="18:23">errp</name></expr></argument>,
                   <argument pos:start="19:20" pos:end="19:72"><expr pos:start="19:20" pos:end="19:72"><literal type="string" pos:start="19:20" pos:end="19:72">"%d interrupt lines unsupported: not divisible by 32"</literal></expr></argument>,
                   <argument pos:start="20:20" pos:end="20:26"><expr pos:start="20:20" pos:end="20:26"><name pos:start="20:20" pos:end="20:26">num_irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
