<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10540.c" pos:tabs="8"><function pos:start="1:1" pos:end="637:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">gen_arith</name> <parameter_list pos:start="1:23" pos:end="3:46">(<parameter pos:start="1:24" pos:end="1:36"><decl pos:start="1:24" pos:end="1:36"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:31">CPUState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">env</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:55"><decl pos:start="1:39" pos:end="1:55"><type pos:start="1:39" pos:end="1:55"><name pos:start="1:39" pos:end="1:50">DisasContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">ctx</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:65">uint32_t</name></type> <name pos:start="1:67" pos:end="1:69">opc</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:29"><decl pos:start="3:24" pos:end="3:29"><type pos:start="3:24" pos:end="3:29"><name pos:start="3:24" pos:end="3:26">int</name></type> <name pos:start="3:28" pos:end="3:29">rd</name></decl></parameter>, <parameter pos:start="3:32" pos:end="3:37"><decl pos:start="3:32" pos:end="3:37"><type pos:start="3:32" pos:end="3:37"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:37">rs</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:45"><decl pos:start="3:40" pos:end="3:45"><type pos:start="3:40" pos:end="3:45"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:45">rt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="637:1">{<block_content pos:start="7:5" pos:end="635:22">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">opn</name> <init pos:start="7:21" pos:end="7:29">= <expr pos:start="7:23" pos:end="7:29"><literal type="string" pos:start="7:23" pos:end="7:29">"arith"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:11">t0</name> <init pos:start="9:13" pos:end="9:45">= <expr pos:start="9:15" pos:end="9:45"><call pos:start="9:15" pos:end="9:45"><name pos:start="9:15" pos:end="9:32">tcg_temp_local_new</name><argument_list pos:start="9:33" pos:end="9:45">(<argument pos:start="9:34" pos:end="9:44"><expr pos:start="9:34" pos:end="9:44"><name pos:start="9:34" pos:end="9:44">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">TCGv</name></type> <name pos:start="11:10" pos:end="11:11">t1</name> <init pos:start="11:13" pos:end="11:45">= <expr pos:start="11:15" pos:end="11:45"><call pos:start="11:15" pos:end="11:45"><name pos:start="11:15" pos:end="11:32">tcg_temp_local_new</name><argument_list pos:start="11:33" pos:end="11:45">(<argument pos:start="11:34" pos:end="11:44"><expr pos:start="11:34" pos:end="11:44"><name pos:start="11:34" pos:end="11:44">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="27:5"><if pos:start="15:5" pos:end="27:5">if <condition pos:start="15:8" pos:end="17:45">(<expr pos:start="15:9" pos:end="17:44"><name pos:start="15:9" pos:end="15:10">rd</name> <operator pos:start="15:12" pos:end="15:13">==</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal> <operator pos:start="15:17" pos:end="15:18">&amp;&amp;</operator> <name pos:start="15:20" pos:end="15:22">opc</name> <operator pos:start="15:24" pos:end="15:25">!=</operator> <name pos:start="15:27" pos:end="15:33">OPC_ADD</name> <operator pos:start="15:35" pos:end="15:36">&amp;&amp;</operator> <name pos:start="15:38" pos:end="15:40">opc</name> <operator pos:start="15:42" pos:end="15:43">!=</operator> <name pos:start="15:45" pos:end="15:51">OPC_SUB</name>

       <operator pos:start="17:8" pos:end="17:9">&amp;&amp;</operator> <name pos:start="17:11" pos:end="17:13">opc</name> <operator pos:start="17:15" pos:end="17:16">!=</operator> <name pos:start="17:18" pos:end="17:25">OPC_DADD</name> <operator pos:start="17:27" pos:end="17:28">&amp;&amp;</operator> <name pos:start="17:30" pos:end="17:32">opc</name> <operator pos:start="17:34" pos:end="17:35">!=</operator> <name pos:start="17:37" pos:end="17:44">OPC_DSUB</name></expr>)</condition> <block pos:start="17:47" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:17">

        <comment type="block" pos:start="19:9" pos:end="21:81">/* If no destination, treat it as a NOP.

           For add &amp; sub, we must generate the overflow exception when needed. */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><call pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:18">MIPS_DEBUG</name><argument_list pos:start="23:19" pos:end="23:25">(<argument pos:start="23:20" pos:end="23:24"><expr pos:start="23:20" pos:end="23:24"><literal type="string" pos:start="23:20" pos:end="23:24">"NOP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="25:9" pos:end="25:17">goto <name pos:start="25:14" pos:end="25:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:25"><expr pos:start="29:5" pos:end="29:24"><call pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:16">gen_load_gpr</name><argument_list pos:start="29:17" pos:end="29:24">(<argument pos:start="29:18" pos:end="29:19"><expr pos:start="29:18" pos:end="29:19"><name pos:start="29:18" pos:end="29:19">t0</name></expr></argument>, <argument pos:start="29:22" pos:end="29:23"><expr pos:start="29:22" pos:end="29:23"><name pos:start="29:22" pos:end="29:23">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="31:5" pos:end="31:54">/* Specialcase the conventional move operation. */</comment>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="35:60">(<expr pos:start="33:9" pos:end="35:59"><name pos:start="33:9" pos:end="33:10">rt</name> <operator pos:start="33:12" pos:end="33:13">==</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal> <operator pos:start="33:17" pos:end="33:18">&amp;&amp;</operator> <operator pos:start="33:20" pos:end="33:20">(</operator><name pos:start="33:21" pos:end="33:23">opc</name> <operator pos:start="33:25" pos:end="33:26">==</operator> <name pos:start="33:28" pos:end="33:35">OPC_ADDU</name> <operator pos:start="33:37" pos:end="33:38">||</operator> <name pos:start="33:40" pos:end="33:42">opc</name> <operator pos:start="33:44" pos:end="33:45">==</operator> <name pos:start="33:47" pos:end="33:55">OPC_DADDU</name>

                    <operator pos:start="35:21" pos:end="35:22">||</operator> <name pos:start="35:24" pos:end="35:26">opc</name> <operator pos:start="35:28" pos:end="35:29">==</operator> <name pos:start="35:31" pos:end="35:38">OPC_SUBU</name> <operator pos:start="35:40" pos:end="35:41">||</operator> <name pos:start="35:43" pos:end="35:45">opc</name> <operator pos:start="35:47" pos:end="35:48">==</operator> <name pos:start="35:50" pos:end="35:58">OPC_DSUBU</name><operator pos:start="35:59" pos:end="35:59">)</operator></expr>)</condition> <block pos:start="35:62" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:17">

        <expr_stmt pos:start="37:9" pos:end="37:30"><expr pos:start="37:9" pos:end="37:29"><call pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:21">gen_store_gpr</name><argument_list pos:start="37:22" pos:end="37:29">(<argument pos:start="37:23" pos:end="37:24"><expr pos:start="37:23" pos:end="37:24"><name pos:start="37:23" pos:end="37:24">t0</name></expr></argument>, <argument pos:start="37:27" pos:end="37:28"><expr pos:start="37:27" pos:end="37:28"><name pos:start="37:27" pos:end="37:28">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:17">goto <name pos:start="39:14" pos:end="39:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:25"><expr pos:start="43:5" pos:end="43:24"><call pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:16">gen_load_gpr</name><argument_list pos:start="43:17" pos:end="43:24">(<argument pos:start="43:18" pos:end="43:19"><expr pos:start="43:18" pos:end="43:19"><name pos:start="43:18" pos:end="43:19">t1</name></expr></argument>, <argument pos:start="43:22" pos:end="43:23"><expr pos:start="43:22" pos:end="43:23"><name pos:start="43:22" pos:end="43:23">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="45:5" pos:end="623:5">switch <condition pos:start="45:12" pos:end="45:16">(<expr pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">opc</name></expr>)</condition> <block pos:start="45:18" pos:end="623:5">{<block_content pos:start="47:5" pos:end="621:17">

    <case pos:start="47:5" pos:end="47:17">case <expr pos:start="47:10" pos:end="47:16"><name pos:start="47:10" pos:end="47:16">OPC_ADD</name></expr>:</case>

        <block pos:start="49:9" pos:end="95:9">{<block_content pos:start="51:13" pos:end="93:38">

            <decl_stmt pos:start="51:13" pos:end="51:58"><decl pos:start="51:13" pos:end="51:57"><type pos:start="51:13" pos:end="51:16"><name pos:start="51:13" pos:end="51:16">TCGv</name></type> <name pos:start="51:18" pos:end="51:23">r_tmp1</name> <init pos:start="51:25" pos:end="51:57">= <expr pos:start="51:27" pos:end="51:57"><call pos:start="51:27" pos:end="51:57"><name pos:start="51:27" pos:end="51:44">tcg_temp_local_new</name><argument_list pos:start="51:45" pos:end="51:57">(<argument pos:start="51:46" pos:end="51:56"><expr pos:start="51:46" pos:end="51:56"><name pos:start="51:46" pos:end="51:56">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="53:52"><decl pos:start="53:13" pos:end="53:51"><type pos:start="53:13" pos:end="53:16"><name pos:start="53:13" pos:end="53:16">TCGv</name></type> <name pos:start="53:18" pos:end="53:23">r_tmp2</name> <init pos:start="53:25" pos:end="53:51">= <expr pos:start="53:27" pos:end="53:51"><call pos:start="53:27" pos:end="53:51"><name pos:start="53:27" pos:end="53:38">tcg_temp_new</name><argument_list pos:start="53:39" pos:end="53:51">(<argument pos:start="53:40" pos:end="53:50"><expr pos:start="53:40" pos:end="53:50"><name pos:start="53:40" pos:end="53:50">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="55:13" pos:end="55:37"><decl pos:start="55:13" pos:end="55:36"><type pos:start="55:13" pos:end="55:15"><name pos:start="55:13" pos:end="55:15">int</name></type> <name pos:start="55:17" pos:end="55:18">l1</name> <init pos:start="55:20" pos:end="55:36">= <expr pos:start="55:22" pos:end="55:36"><call pos:start="55:22" pos:end="55:36"><name pos:start="55:22" pos:end="55:34">gen_new_label</name><argument_list pos:start="55:35" pos:end="55:36">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="59:13" pos:end="59:35"><expr pos:start="59:13" pos:end="59:34"><call pos:start="59:13" pos:end="59:34"><name pos:start="59:13" pos:end="59:26">save_cpu_state</name><argument_list pos:start="59:27" pos:end="59:34">(<argument pos:start="59:28" pos:end="59:30"><expr pos:start="59:28" pos:end="59:30"><name pos:start="59:28" pos:end="59:30">ctx</name></expr></argument>, <argument pos:start="59:33" pos:end="59:33"><expr pos:start="59:33" pos:end="59:33"><literal type="number" pos:start="59:33" pos:end="59:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:42"><expr pos:start="61:13" pos:end="61:41"><call pos:start="61:13" pos:end="61:41"><name pos:start="61:13" pos:end="61:29">tcg_gen_ext32s_tl</name><argument_list pos:start="61:30" pos:end="61:41">(<argument pos:start="61:31" pos:end="61:36"><expr pos:start="61:31" pos:end="61:36"><name pos:start="61:31" pos:end="61:36">r_tmp1</name></expr></argument>, <argument pos:start="61:39" pos:end="61:40"><expr pos:start="61:39" pos:end="61:40"><name pos:start="61:39" pos:end="61:40">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:42"><expr pos:start="63:13" pos:end="63:41"><call pos:start="63:13" pos:end="63:41"><name pos:start="63:13" pos:end="63:29">tcg_gen_ext32s_tl</name><argument_list pos:start="63:30" pos:end="63:41">(<argument pos:start="63:31" pos:end="63:36"><expr pos:start="63:31" pos:end="63:36"><name pos:start="63:31" pos:end="63:36">r_tmp2</name></expr></argument>, <argument pos:start="63:39" pos:end="63:40"><expr pos:start="63:39" pos:end="63:40"><name pos:start="63:39" pos:end="63:40">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:47"><expr pos:start="65:13" pos:end="65:46"><call pos:start="65:13" pos:end="65:46"><name pos:start="65:13" pos:end="65:26">tcg_gen_add_tl</name><argument_list pos:start="65:27" pos:end="65:46">(<argument pos:start="65:28" pos:end="65:29"><expr pos:start="65:28" pos:end="65:29"><name pos:start="65:28" pos:end="65:29">t0</name></expr></argument>, <argument pos:start="65:32" pos:end="65:37"><expr pos:start="65:32" pos:end="65:37"><name pos:start="65:32" pos:end="65:37">r_tmp1</name></expr></argument>, <argument pos:start="65:40" pos:end="65:45"><expr pos:start="65:40" pos:end="65:45"><name pos:start="65:40" pos:end="65:45">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="69:13" pos:end="69:47"><expr pos:start="69:13" pos:end="69:46"><call pos:start="69:13" pos:end="69:46"><name pos:start="69:13" pos:end="69:26">tcg_gen_xor_tl</name><argument_list pos:start="69:27" pos:end="69:46">(<argument pos:start="69:28" pos:end="69:33"><expr pos:start="69:28" pos:end="69:33"><name pos:start="69:28" pos:end="69:33">r_tmp1</name></expr></argument>, <argument pos:start="69:36" pos:end="69:41"><expr pos:start="69:36" pos:end="69:41"><name pos:start="69:36" pos:end="69:41">r_tmp1</name></expr></argument>, <argument pos:start="69:44" pos:end="69:45"><expr pos:start="69:44" pos:end="69:45"><name pos:start="69:44" pos:end="69:45">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:48"><expr pos:start="71:13" pos:end="71:47"><call pos:start="71:13" pos:end="71:47"><name pos:start="71:13" pos:end="71:27">tcg_gen_xori_tl</name><argument_list pos:start="71:28" pos:end="71:47">(<argument pos:start="71:29" pos:end="71:34"><expr pos:start="71:29" pos:end="71:34"><name pos:start="71:29" pos:end="71:34">r_tmp1</name></expr></argument>, <argument pos:start="71:37" pos:end="71:42"><expr pos:start="71:37" pos:end="71:42"><name pos:start="71:37" pos:end="71:42">r_tmp1</name></expr></argument>, <argument pos:start="71:45" pos:end="71:46"><expr pos:start="71:45" pos:end="71:46"><operator pos:start="71:45" pos:end="71:45">-</operator><literal type="number" pos:start="71:46" pos:end="71:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:43"><expr pos:start="73:13" pos:end="73:42"><call pos:start="73:13" pos:end="73:42"><name pos:start="73:13" pos:end="73:26">tcg_gen_xor_tl</name><argument_list pos:start="73:27" pos:end="73:42">(<argument pos:start="73:28" pos:end="73:33"><expr pos:start="73:28" pos:end="73:33"><name pos:start="73:28" pos:end="73:33">r_tmp2</name></expr></argument>, <argument pos:start="73:36" pos:end="73:37"><expr pos:start="73:36" pos:end="73:37"><name pos:start="73:36" pos:end="73:37">t0</name></expr></argument>, <argument pos:start="73:40" pos:end="73:41"><expr pos:start="73:40" pos:end="73:41"><name pos:start="73:40" pos:end="73:41">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:51"><expr pos:start="75:13" pos:end="75:50"><call pos:start="75:13" pos:end="75:50"><name pos:start="75:13" pos:end="75:26">tcg_gen_and_tl</name><argument_list pos:start="75:27" pos:end="75:50">(<argument pos:start="75:28" pos:end="75:33"><expr pos:start="75:28" pos:end="75:33"><name pos:start="75:28" pos:end="75:33">r_tmp1</name></expr></argument>, <argument pos:start="75:36" pos:end="75:41"><expr pos:start="75:36" pos:end="75:41"><name pos:start="75:36" pos:end="75:41">r_tmp1</name></expr></argument>, <argument pos:start="75:44" pos:end="75:49"><expr pos:start="75:44" pos:end="75:49"><name pos:start="75:44" pos:end="75:49">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:34"><expr pos:start="77:13" pos:end="77:33"><call pos:start="77:13" pos:end="77:33"><name pos:start="77:13" pos:end="77:25">tcg_temp_free</name><argument_list pos:start="77:26" pos:end="77:33">(<argument pos:start="77:27" pos:end="77:32"><expr pos:start="77:27" pos:end="77:32"><name pos:start="77:27" pos:end="77:32">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:48"><expr pos:start="79:13" pos:end="79:47"><call pos:start="79:13" pos:end="79:47"><name pos:start="79:13" pos:end="79:27">tcg_gen_shri_tl</name><argument_list pos:start="79:28" pos:end="79:47">(<argument pos:start="79:29" pos:end="79:34"><expr pos:start="79:29" pos:end="79:34"><name pos:start="79:29" pos:end="79:34">r_tmp1</name></expr></argument>, <argument pos:start="79:37" pos:end="79:42"><expr pos:start="79:37" pos:end="79:42"><name pos:start="79:37" pos:end="79:42">r_tmp1</name></expr></argument>, <argument pos:start="79:45" pos:end="79:46"><expr pos:start="79:45" pos:end="79:46"><literal type="number" pos:start="79:45" pos:end="79:46">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:59"><expr pos:start="81:13" pos:end="81:58"><call pos:start="81:13" pos:end="81:58"><name pos:start="81:13" pos:end="81:30">tcg_gen_brcondi_tl</name><argument_list pos:start="81:31" pos:end="81:58">(<argument pos:start="81:32" pos:end="81:42"><expr pos:start="81:32" pos:end="81:42"><name pos:start="81:32" pos:end="81:42">TCG_COND_EQ</name></expr></argument>, <argument pos:start="81:45" pos:end="81:50"><expr pos:start="81:45" pos:end="81:50"><name pos:start="81:45" pos:end="81:50">r_tmp1</name></expr></argument>, <argument pos:start="81:53" pos:end="81:53"><expr pos:start="81:53" pos:end="81:53"><literal type="number" pos:start="81:53" pos:end="81:53">0</literal></expr></argument>, <argument pos:start="81:56" pos:end="81:57"><expr pos:start="81:56" pos:end="81:57"><name pos:start="81:56" pos:end="81:57">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:34"><expr pos:start="83:13" pos:end="83:33"><call pos:start="83:13" pos:end="83:33"><name pos:start="83:13" pos:end="83:25">tcg_temp_free</name><argument_list pos:start="83:26" pos:end="83:33">(<argument pos:start="83:27" pos:end="83:32"><expr pos:start="83:27" pos:end="83:32"><name pos:start="83:27" pos:end="83:32">r_tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="85:13" pos:end="85:62">/* operands of same sign, result different sign */</comment>

            <expr_stmt pos:start="87:13" pos:end="87:51"><expr pos:start="87:13" pos:end="87:50"><call pos:start="87:13" pos:end="87:50"><name pos:start="87:13" pos:end="87:30">generate_exception</name><argument_list pos:start="87:31" pos:end="87:50">(<argument pos:start="87:32" pos:end="87:34"><expr pos:start="87:32" pos:end="87:34"><name pos:start="87:32" pos:end="87:34">ctx</name></expr></argument>, <argument pos:start="87:37" pos:end="87:49"><expr pos:start="87:37" pos:end="87:49"><name pos:start="87:37" pos:end="87:49">EXCP_OVERFLOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:30"><expr pos:start="89:13" pos:end="89:29"><call pos:start="89:13" pos:end="89:29"><name pos:start="89:13" pos:end="89:25">gen_set_label</name><argument_list pos:start="89:26" pos:end="89:29">(<argument pos:start="89:27" pos:end="89:28"><expr pos:start="89:27" pos:end="89:28"><name pos:start="89:27" pos:end="89:28">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="93:13" pos:end="93:38"><expr pos:start="93:13" pos:end="93:37"><call pos:start="93:13" pos:end="93:37"><name pos:start="93:13" pos:end="93:29">tcg_gen_ext32s_tl</name><argument_list pos:start="93:30" pos:end="93:37">(<argument pos:start="93:31" pos:end="93:32"><expr pos:start="93:31" pos:end="93:32"><name pos:start="93:31" pos:end="93:32">t0</name></expr></argument>, <argument pos:start="93:35" pos:end="93:36"><expr pos:start="93:35" pos:end="93:36"><name pos:start="93:35" pos:end="93:36">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="97:9" pos:end="97:20"><expr pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:11">opn</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <literal type="string" pos:start="97:15" pos:end="97:19">"add"</literal></expr>;</expr_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:18">case <expr pos:start="101:10" pos:end="101:17"><name pos:start="101:10" pos:end="101:17">OPC_ADDU</name></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:34"><expr pos:start="103:9" pos:end="103:33"><call pos:start="103:9" pos:end="103:33"><name pos:start="103:9" pos:end="103:25">tcg_gen_ext32s_tl</name><argument_list pos:start="103:26" pos:end="103:33">(<argument pos:start="103:27" pos:end="103:28"><expr pos:start="103:27" pos:end="103:28"><name pos:start="103:27" pos:end="103:28">t0</name></expr></argument>, <argument pos:start="103:31" pos:end="103:32"><expr pos:start="103:31" pos:end="103:32"><name pos:start="103:31" pos:end="103:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:34"><expr pos:start="105:9" pos:end="105:33"><call pos:start="105:9" pos:end="105:33"><name pos:start="105:9" pos:end="105:25">tcg_gen_ext32s_tl</name><argument_list pos:start="105:26" pos:end="105:33">(<argument pos:start="105:27" pos:end="105:28"><expr pos:start="105:27" pos:end="105:28"><name pos:start="105:27" pos:end="105:28">t1</name></expr></argument>, <argument pos:start="105:31" pos:end="105:32"><expr pos:start="105:31" pos:end="105:32"><name pos:start="105:31" pos:end="105:32">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:35"><expr pos:start="107:9" pos:end="107:34"><call pos:start="107:9" pos:end="107:34"><name pos:start="107:9" pos:end="107:22">tcg_gen_add_tl</name><argument_list pos:start="107:23" pos:end="107:34">(<argument pos:start="107:24" pos:end="107:25"><expr pos:start="107:24" pos:end="107:25"><name pos:start="107:24" pos:end="107:25">t0</name></expr></argument>, <argument pos:start="107:28" pos:end="107:29"><expr pos:start="107:28" pos:end="107:29"><name pos:start="107:28" pos:end="107:29">t0</name></expr></argument>, <argument pos:start="107:32" pos:end="107:33"><expr pos:start="107:32" pos:end="107:33"><name pos:start="107:32" pos:end="107:33">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:34"><expr pos:start="109:9" pos:end="109:33"><call pos:start="109:9" pos:end="109:33"><name pos:start="109:9" pos:end="109:25">tcg_gen_ext32s_tl</name><argument_list pos:start="109:26" pos:end="109:33">(<argument pos:start="109:27" pos:end="109:28"><expr pos:start="109:27" pos:end="109:28"><name pos:start="109:27" pos:end="109:28">t0</name></expr></argument>, <argument pos:start="109:31" pos:end="109:32"><expr pos:start="109:31" pos:end="109:32"><name pos:start="109:31" pos:end="109:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:21"><expr pos:start="111:9" pos:end="111:20"><name pos:start="111:9" pos:end="111:11">opn</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <literal type="string" pos:start="111:15" pos:end="111:20">"addu"</literal></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:17">case <expr pos:start="115:10" pos:end="115:16"><name pos:start="115:10" pos:end="115:16">OPC_SUB</name></expr>:</case>

        <block pos:start="117:9" pos:end="161:9">{<block_content pos:start="119:13" pos:end="159:38">

            <decl_stmt pos:start="119:13" pos:end="119:58"><decl pos:start="119:13" pos:end="119:57"><type pos:start="119:13" pos:end="119:16"><name pos:start="119:13" pos:end="119:16">TCGv</name></type> <name pos:start="119:18" pos:end="119:23">r_tmp1</name> <init pos:start="119:25" pos:end="119:57">= <expr pos:start="119:27" pos:end="119:57"><call pos:start="119:27" pos:end="119:57"><name pos:start="119:27" pos:end="119:44">tcg_temp_local_new</name><argument_list pos:start="119:45" pos:end="119:57">(<argument pos:start="119:46" pos:end="119:56"><expr pos:start="119:46" pos:end="119:56"><name pos:start="119:46" pos:end="119:56">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="121:13" pos:end="121:52"><decl pos:start="121:13" pos:end="121:51"><type pos:start="121:13" pos:end="121:16"><name pos:start="121:13" pos:end="121:16">TCGv</name></type> <name pos:start="121:18" pos:end="121:23">r_tmp2</name> <init pos:start="121:25" pos:end="121:51">= <expr pos:start="121:27" pos:end="121:51"><call pos:start="121:27" pos:end="121:51"><name pos:start="121:27" pos:end="121:38">tcg_temp_new</name><argument_list pos:start="121:39" pos:end="121:51">(<argument pos:start="121:40" pos:end="121:50"><expr pos:start="121:40" pos:end="121:50"><name pos:start="121:40" pos:end="121:50">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="123:13" pos:end="123:37"><decl pos:start="123:13" pos:end="123:36"><type pos:start="123:13" pos:end="123:15"><name pos:start="123:13" pos:end="123:15">int</name></type> <name pos:start="123:17" pos:end="123:18">l1</name> <init pos:start="123:20" pos:end="123:36">= <expr pos:start="123:22" pos:end="123:36"><call pos:start="123:22" pos:end="123:36"><name pos:start="123:22" pos:end="123:34">gen_new_label</name><argument_list pos:start="123:35" pos:end="123:36">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="127:13" pos:end="127:35"><expr pos:start="127:13" pos:end="127:34"><call pos:start="127:13" pos:end="127:34"><name pos:start="127:13" pos:end="127:26">save_cpu_state</name><argument_list pos:start="127:27" pos:end="127:34">(<argument pos:start="127:28" pos:end="127:30"><expr pos:start="127:28" pos:end="127:30"><name pos:start="127:28" pos:end="127:30">ctx</name></expr></argument>, <argument pos:start="127:33" pos:end="127:33"><expr pos:start="127:33" pos:end="127:33"><literal type="number" pos:start="127:33" pos:end="127:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:42"><expr pos:start="129:13" pos:end="129:41"><call pos:start="129:13" pos:end="129:41"><name pos:start="129:13" pos:end="129:29">tcg_gen_ext32s_tl</name><argument_list pos:start="129:30" pos:end="129:41">(<argument pos:start="129:31" pos:end="129:36"><expr pos:start="129:31" pos:end="129:36"><name pos:start="129:31" pos:end="129:36">r_tmp1</name></expr></argument>, <argument pos:start="129:39" pos:end="129:40"><expr pos:start="129:39" pos:end="129:40"><name pos:start="129:39" pos:end="129:40">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:42"><expr pos:start="131:13" pos:end="131:41"><call pos:start="131:13" pos:end="131:41"><name pos:start="131:13" pos:end="131:29">tcg_gen_ext32s_tl</name><argument_list pos:start="131:30" pos:end="131:41">(<argument pos:start="131:31" pos:end="131:36"><expr pos:start="131:31" pos:end="131:36"><name pos:start="131:31" pos:end="131:36">r_tmp2</name></expr></argument>, <argument pos:start="131:39" pos:end="131:40"><expr pos:start="131:39" pos:end="131:40"><name pos:start="131:39" pos:end="131:40">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:47"><expr pos:start="133:13" pos:end="133:46"><call pos:start="133:13" pos:end="133:46"><name pos:start="133:13" pos:end="133:26">tcg_gen_sub_tl</name><argument_list pos:start="133:27" pos:end="133:46">(<argument pos:start="133:28" pos:end="133:29"><expr pos:start="133:28" pos:end="133:29"><name pos:start="133:28" pos:end="133:29">t0</name></expr></argument>, <argument pos:start="133:32" pos:end="133:37"><expr pos:start="133:32" pos:end="133:37"><name pos:start="133:32" pos:end="133:37">r_tmp1</name></expr></argument>, <argument pos:start="133:40" pos:end="133:45"><expr pos:start="133:40" pos:end="133:45"><name pos:start="133:40" pos:end="133:45">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="137:13" pos:end="137:47"><expr pos:start="137:13" pos:end="137:46"><call pos:start="137:13" pos:end="137:46"><name pos:start="137:13" pos:end="137:26">tcg_gen_xor_tl</name><argument_list pos:start="137:27" pos:end="137:46">(<argument pos:start="137:28" pos:end="137:33"><expr pos:start="137:28" pos:end="137:33"><name pos:start="137:28" pos:end="137:33">r_tmp2</name></expr></argument>, <argument pos:start="137:36" pos:end="137:41"><expr pos:start="137:36" pos:end="137:41"><name pos:start="137:36" pos:end="137:41">r_tmp1</name></expr></argument>, <argument pos:start="137:44" pos:end="137:45"><expr pos:start="137:44" pos:end="137:45"><name pos:start="137:44" pos:end="137:45">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:47"><expr pos:start="139:13" pos:end="139:46"><call pos:start="139:13" pos:end="139:46"><name pos:start="139:13" pos:end="139:26">tcg_gen_xor_tl</name><argument_list pos:start="139:27" pos:end="139:46">(<argument pos:start="139:28" pos:end="139:33"><expr pos:start="139:28" pos:end="139:33"><name pos:start="139:28" pos:end="139:33">r_tmp1</name></expr></argument>, <argument pos:start="139:36" pos:end="139:41"><expr pos:start="139:36" pos:end="139:41"><name pos:start="139:36" pos:end="139:41">r_tmp1</name></expr></argument>, <argument pos:start="139:44" pos:end="139:45"><expr pos:start="139:44" pos:end="139:45"><name pos:start="139:44" pos:end="139:45">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:51"><expr pos:start="141:13" pos:end="141:50"><call pos:start="141:13" pos:end="141:50"><name pos:start="141:13" pos:end="141:26">tcg_gen_and_tl</name><argument_list pos:start="141:27" pos:end="141:50">(<argument pos:start="141:28" pos:end="141:33"><expr pos:start="141:28" pos:end="141:33"><name pos:start="141:28" pos:end="141:33">r_tmp1</name></expr></argument>, <argument pos:start="141:36" pos:end="141:41"><expr pos:start="141:36" pos:end="141:41"><name pos:start="141:36" pos:end="141:41">r_tmp1</name></expr></argument>, <argument pos:start="141:44" pos:end="141:49"><expr pos:start="141:44" pos:end="141:49"><name pos:start="141:44" pos:end="141:49">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:34"><expr pos:start="143:13" pos:end="143:33"><call pos:start="143:13" pos:end="143:33"><name pos:start="143:13" pos:end="143:25">tcg_temp_free</name><argument_list pos:start="143:26" pos:end="143:33">(<argument pos:start="143:27" pos:end="143:32"><expr pos:start="143:27" pos:end="143:32"><name pos:start="143:27" pos:end="143:32">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:48"><expr pos:start="145:13" pos:end="145:47"><call pos:start="145:13" pos:end="145:47"><name pos:start="145:13" pos:end="145:27">tcg_gen_shri_tl</name><argument_list pos:start="145:28" pos:end="145:47">(<argument pos:start="145:29" pos:end="145:34"><expr pos:start="145:29" pos:end="145:34"><name pos:start="145:29" pos:end="145:34">r_tmp1</name></expr></argument>, <argument pos:start="145:37" pos:end="145:42"><expr pos:start="145:37" pos:end="145:42"><name pos:start="145:37" pos:end="145:42">r_tmp1</name></expr></argument>, <argument pos:start="145:45" pos:end="145:46"><expr pos:start="145:45" pos:end="145:46"><literal type="number" pos:start="145:45" pos:end="145:46">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:59"><expr pos:start="147:13" pos:end="147:58"><call pos:start="147:13" pos:end="147:58"><name pos:start="147:13" pos:end="147:30">tcg_gen_brcondi_tl</name><argument_list pos:start="147:31" pos:end="147:58">(<argument pos:start="147:32" pos:end="147:42"><expr pos:start="147:32" pos:end="147:42"><name pos:start="147:32" pos:end="147:42">TCG_COND_EQ</name></expr></argument>, <argument pos:start="147:45" pos:end="147:50"><expr pos:start="147:45" pos:end="147:50"><name pos:start="147:45" pos:end="147:50">r_tmp1</name></expr></argument>, <argument pos:start="147:53" pos:end="147:53"><expr pos:start="147:53" pos:end="147:53"><literal type="number" pos:start="147:53" pos:end="147:53">0</literal></expr></argument>, <argument pos:start="147:56" pos:end="147:57"><expr pos:start="147:56" pos:end="147:57"><name pos:start="147:56" pos:end="147:57">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:34"><expr pos:start="149:13" pos:end="149:33"><call pos:start="149:13" pos:end="149:33"><name pos:start="149:13" pos:end="149:25">tcg_temp_free</name><argument_list pos:start="149:26" pos:end="149:33">(<argument pos:start="149:27" pos:end="149:32"><expr pos:start="149:27" pos:end="149:32"><name pos:start="149:27" pos:end="149:32">r_tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="151:13" pos:end="151:85">/* operands of different sign, first operand and result different sign */</comment>

            <expr_stmt pos:start="153:13" pos:end="153:51"><expr pos:start="153:13" pos:end="153:50"><call pos:start="153:13" pos:end="153:50"><name pos:start="153:13" pos:end="153:30">generate_exception</name><argument_list pos:start="153:31" pos:end="153:50">(<argument pos:start="153:32" pos:end="153:34"><expr pos:start="153:32" pos:end="153:34"><name pos:start="153:32" pos:end="153:34">ctx</name></expr></argument>, <argument pos:start="153:37" pos:end="153:49"><expr pos:start="153:37" pos:end="153:49"><name pos:start="153:37" pos:end="153:49">EXCP_OVERFLOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:30"><expr pos:start="155:13" pos:end="155:29"><call pos:start="155:13" pos:end="155:29"><name pos:start="155:13" pos:end="155:25">gen_set_label</name><argument_list pos:start="155:26" pos:end="155:29">(<argument pos:start="155:27" pos:end="155:28"><expr pos:start="155:27" pos:end="155:28"><name pos:start="155:27" pos:end="155:28">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="159:13" pos:end="159:38"><expr pos:start="159:13" pos:end="159:37"><call pos:start="159:13" pos:end="159:37"><name pos:start="159:13" pos:end="159:29">tcg_gen_ext32s_tl</name><argument_list pos:start="159:30" pos:end="159:37">(<argument pos:start="159:31" pos:end="159:32"><expr pos:start="159:31" pos:end="159:32"><name pos:start="159:31" pos:end="159:32">t0</name></expr></argument>, <argument pos:start="159:35" pos:end="159:36"><expr pos:start="159:35" pos:end="159:36"><name pos:start="159:35" pos:end="159:36">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="163:9" pos:end="163:20"><expr pos:start="163:9" pos:end="163:19"><name pos:start="163:9" pos:end="163:11">opn</name> <operator pos:start="163:13" pos:end="163:13">=</operator> <literal type="string" pos:start="163:15" pos:end="163:19">"sub"</literal></expr>;</expr_stmt>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    <case pos:start="167:5" pos:end="167:18">case <expr pos:start="167:10" pos:end="167:17"><name pos:start="167:10" pos:end="167:17">OPC_SUBU</name></expr>:</case>

        <expr_stmt pos:start="169:9" pos:end="169:34"><expr pos:start="169:9" pos:end="169:33"><call pos:start="169:9" pos:end="169:33"><name pos:start="169:9" pos:end="169:25">tcg_gen_ext32s_tl</name><argument_list pos:start="169:26" pos:end="169:33">(<argument pos:start="169:27" pos:end="169:28"><expr pos:start="169:27" pos:end="169:28"><name pos:start="169:27" pos:end="169:28">t0</name></expr></argument>, <argument pos:start="169:31" pos:end="169:32"><expr pos:start="169:31" pos:end="169:32"><name pos:start="169:31" pos:end="169:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:34"><expr pos:start="171:9" pos:end="171:33"><call pos:start="171:9" pos:end="171:33"><name pos:start="171:9" pos:end="171:25">tcg_gen_ext32s_tl</name><argument_list pos:start="171:26" pos:end="171:33">(<argument pos:start="171:27" pos:end="171:28"><expr pos:start="171:27" pos:end="171:28"><name pos:start="171:27" pos:end="171:28">t1</name></expr></argument>, <argument pos:start="171:31" pos:end="171:32"><expr pos:start="171:31" pos:end="171:32"><name pos:start="171:31" pos:end="171:32">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:35"><expr pos:start="173:9" pos:end="173:34"><call pos:start="173:9" pos:end="173:34"><name pos:start="173:9" pos:end="173:22">tcg_gen_sub_tl</name><argument_list pos:start="173:23" pos:end="173:34">(<argument pos:start="173:24" pos:end="173:25"><expr pos:start="173:24" pos:end="173:25"><name pos:start="173:24" pos:end="173:25">t0</name></expr></argument>, <argument pos:start="173:28" pos:end="173:29"><expr pos:start="173:28" pos:end="173:29"><name pos:start="173:28" pos:end="173:29">t0</name></expr></argument>, <argument pos:start="173:32" pos:end="173:33"><expr pos:start="173:32" pos:end="173:33"><name pos:start="173:32" pos:end="173:33">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:34"><expr pos:start="175:9" pos:end="175:33"><call pos:start="175:9" pos:end="175:33"><name pos:start="175:9" pos:end="175:25">tcg_gen_ext32s_tl</name><argument_list pos:start="175:26" pos:end="175:33">(<argument pos:start="175:27" pos:end="175:28"><expr pos:start="175:27" pos:end="175:28"><name pos:start="175:27" pos:end="175:28">t0</name></expr></argument>, <argument pos:start="175:31" pos:end="175:32"><expr pos:start="175:31" pos:end="175:32"><name pos:start="175:31" pos:end="175:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:21"><expr pos:start="177:9" pos:end="177:20"><name pos:start="177:9" pos:end="177:11">opn</name> <operator pos:start="177:13" pos:end="177:13">=</operator> <literal type="string" pos:start="177:15" pos:end="177:20">"subu"</literal></expr>;</expr_stmt>

        <break pos:start="179:9" pos:end="182:0">break;</break>

<cpp:if pos:start="181:1" pos:end="181:26">#<cpp:directive pos:start="181:2" pos:end="181:3">if</cpp:directive> <expr pos:start="181:5" pos:end="181:26"><call pos:start="181:5" pos:end="181:26"><name pos:start="181:5" pos:end="181:11">defined</name><argument_list pos:start="181:12" pos:end="181:26">(<argument pos:start="181:13" pos:end="181:25"><expr pos:start="181:13" pos:end="181:25"><name pos:start="181:13" pos:end="181:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="183:5" pos:end="183:18">case <expr pos:start="183:10" pos:end="183:17"><name pos:start="183:10" pos:end="183:17">OPC_DADD</name></expr>:</case>

        <block pos:start="185:9" pos:end="225:9">{<block_content pos:start="187:13" pos:end="223:30">

            <decl_stmt pos:start="187:13" pos:end="187:58"><decl pos:start="187:13" pos:end="187:57"><type pos:start="187:13" pos:end="187:16"><name pos:start="187:13" pos:end="187:16">TCGv</name></type> <name pos:start="187:18" pos:end="187:23">r_tmp1</name> <init pos:start="187:25" pos:end="187:57">= <expr pos:start="187:27" pos:end="187:57"><call pos:start="187:27" pos:end="187:57"><name pos:start="187:27" pos:end="187:44">tcg_temp_local_new</name><argument_list pos:start="187:45" pos:end="187:57">(<argument pos:start="187:46" pos:end="187:56"><expr pos:start="187:46" pos:end="187:56"><name pos:start="187:46" pos:end="187:56">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="189:13" pos:end="189:52"><decl pos:start="189:13" pos:end="189:51"><type pos:start="189:13" pos:end="189:16"><name pos:start="189:13" pos:end="189:16">TCGv</name></type> <name pos:start="189:18" pos:end="189:23">r_tmp2</name> <init pos:start="189:25" pos:end="189:51">= <expr pos:start="189:27" pos:end="189:51"><call pos:start="189:27" pos:end="189:51"><name pos:start="189:27" pos:end="189:38">tcg_temp_new</name><argument_list pos:start="189:39" pos:end="189:51">(<argument pos:start="189:40" pos:end="189:50"><expr pos:start="189:40" pos:end="189:50"><name pos:start="189:40" pos:end="189:50">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="191:13" pos:end="191:37"><decl pos:start="191:13" pos:end="191:36"><type pos:start="191:13" pos:end="191:15"><name pos:start="191:13" pos:end="191:15">int</name></type> <name pos:start="191:17" pos:end="191:18">l1</name> <init pos:start="191:20" pos:end="191:36">= <expr pos:start="191:22" pos:end="191:36"><call pos:start="191:22" pos:end="191:36"><name pos:start="191:22" pos:end="191:34">gen_new_label</name><argument_list pos:start="191:35" pos:end="191:36">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="195:13" pos:end="195:35"><expr pos:start="195:13" pos:end="195:34"><call pos:start="195:13" pos:end="195:34"><name pos:start="195:13" pos:end="195:26">save_cpu_state</name><argument_list pos:start="195:27" pos:end="195:34">(<argument pos:start="195:28" pos:end="195:30"><expr pos:start="195:28" pos:end="195:30"><name pos:start="195:28" pos:end="195:30">ctx</name></expr></argument>, <argument pos:start="195:33" pos:end="195:33"><expr pos:start="195:33" pos:end="195:33"><literal type="number" pos:start="195:33" pos:end="195:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:39"><expr pos:start="197:13" pos:end="197:38"><call pos:start="197:13" pos:end="197:38"><name pos:start="197:13" pos:end="197:26">tcg_gen_mov_tl</name><argument_list pos:start="197:27" pos:end="197:38">(<argument pos:start="197:28" pos:end="197:33"><expr pos:start="197:28" pos:end="197:33"><name pos:start="197:28" pos:end="197:33">r_tmp1</name></expr></argument>, <argument pos:start="197:36" pos:end="197:37"><expr pos:start="197:36" pos:end="197:37"><name pos:start="197:36" pos:end="197:37">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:39"><expr pos:start="199:13" pos:end="199:38"><call pos:start="199:13" pos:end="199:38"><name pos:start="199:13" pos:end="199:26">tcg_gen_add_tl</name><argument_list pos:start="199:27" pos:end="199:38">(<argument pos:start="199:28" pos:end="199:29"><expr pos:start="199:28" pos:end="199:29"><name pos:start="199:28" pos:end="199:29">t0</name></expr></argument>, <argument pos:start="199:32" pos:end="199:33"><expr pos:start="199:32" pos:end="199:33"><name pos:start="199:32" pos:end="199:33">t0</name></expr></argument>, <argument pos:start="199:36" pos:end="199:37"><expr pos:start="199:36" pos:end="199:37"><name pos:start="199:36" pos:end="199:37">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="203:13" pos:end="203:47"><expr pos:start="203:13" pos:end="203:46"><call pos:start="203:13" pos:end="203:46"><name pos:start="203:13" pos:end="203:26">tcg_gen_xor_tl</name><argument_list pos:start="203:27" pos:end="203:46">(<argument pos:start="203:28" pos:end="203:33"><expr pos:start="203:28" pos:end="203:33"><name pos:start="203:28" pos:end="203:33">r_tmp1</name></expr></argument>, <argument pos:start="203:36" pos:end="203:41"><expr pos:start="203:36" pos:end="203:41"><name pos:start="203:36" pos:end="203:41">r_tmp1</name></expr></argument>, <argument pos:start="203:44" pos:end="203:45"><expr pos:start="203:44" pos:end="203:45"><name pos:start="203:44" pos:end="203:45">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:48"><expr pos:start="205:13" pos:end="205:47"><call pos:start="205:13" pos:end="205:47"><name pos:start="205:13" pos:end="205:27">tcg_gen_xori_tl</name><argument_list pos:start="205:28" pos:end="205:47">(<argument pos:start="205:29" pos:end="205:34"><expr pos:start="205:29" pos:end="205:34"><name pos:start="205:29" pos:end="205:34">r_tmp1</name></expr></argument>, <argument pos:start="205:37" pos:end="205:42"><expr pos:start="205:37" pos:end="205:42"><name pos:start="205:37" pos:end="205:42">r_tmp1</name></expr></argument>, <argument pos:start="205:45" pos:end="205:46"><expr pos:start="205:45" pos:end="205:46"><operator pos:start="205:45" pos:end="205:45">-</operator><literal type="number" pos:start="205:46" pos:end="205:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:43"><expr pos:start="207:13" pos:end="207:42"><call pos:start="207:13" pos:end="207:42"><name pos:start="207:13" pos:end="207:26">tcg_gen_xor_tl</name><argument_list pos:start="207:27" pos:end="207:42">(<argument pos:start="207:28" pos:end="207:33"><expr pos:start="207:28" pos:end="207:33"><name pos:start="207:28" pos:end="207:33">r_tmp2</name></expr></argument>, <argument pos:start="207:36" pos:end="207:37"><expr pos:start="207:36" pos:end="207:37"><name pos:start="207:36" pos:end="207:37">t0</name></expr></argument>, <argument pos:start="207:40" pos:end="207:41"><expr pos:start="207:40" pos:end="207:41"><name pos:start="207:40" pos:end="207:41">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:51"><expr pos:start="209:13" pos:end="209:50"><call pos:start="209:13" pos:end="209:50"><name pos:start="209:13" pos:end="209:26">tcg_gen_and_tl</name><argument_list pos:start="209:27" pos:end="209:50">(<argument pos:start="209:28" pos:end="209:33"><expr pos:start="209:28" pos:end="209:33"><name pos:start="209:28" pos:end="209:33">r_tmp1</name></expr></argument>, <argument pos:start="209:36" pos:end="209:41"><expr pos:start="209:36" pos:end="209:41"><name pos:start="209:36" pos:end="209:41">r_tmp1</name></expr></argument>, <argument pos:start="209:44" pos:end="209:49"><expr pos:start="209:44" pos:end="209:49"><name pos:start="209:44" pos:end="209:49">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:34"><expr pos:start="211:13" pos:end="211:33"><call pos:start="211:13" pos:end="211:33"><name pos:start="211:13" pos:end="211:25">tcg_temp_free</name><argument_list pos:start="211:26" pos:end="211:33">(<argument pos:start="211:27" pos:end="211:32"><expr pos:start="211:27" pos:end="211:32"><name pos:start="211:27" pos:end="211:32">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:48"><expr pos:start="213:13" pos:end="213:47"><call pos:start="213:13" pos:end="213:47"><name pos:start="213:13" pos:end="213:27">tcg_gen_shri_tl</name><argument_list pos:start="213:28" pos:end="213:47">(<argument pos:start="213:29" pos:end="213:34"><expr pos:start="213:29" pos:end="213:34"><name pos:start="213:29" pos:end="213:34">r_tmp1</name></expr></argument>, <argument pos:start="213:37" pos:end="213:42"><expr pos:start="213:37" pos:end="213:42"><name pos:start="213:37" pos:end="213:42">r_tmp1</name></expr></argument>, <argument pos:start="213:45" pos:end="213:46"><expr pos:start="213:45" pos:end="213:46"><literal type="number" pos:start="213:45" pos:end="213:46">63</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:59"><expr pos:start="215:13" pos:end="215:58"><call pos:start="215:13" pos:end="215:58"><name pos:start="215:13" pos:end="215:30">tcg_gen_brcondi_tl</name><argument_list pos:start="215:31" pos:end="215:58">(<argument pos:start="215:32" pos:end="215:42"><expr pos:start="215:32" pos:end="215:42"><name pos:start="215:32" pos:end="215:42">TCG_COND_EQ</name></expr></argument>, <argument pos:start="215:45" pos:end="215:50"><expr pos:start="215:45" pos:end="215:50"><name pos:start="215:45" pos:end="215:50">r_tmp1</name></expr></argument>, <argument pos:start="215:53" pos:end="215:53"><expr pos:start="215:53" pos:end="215:53"><literal type="number" pos:start="215:53" pos:end="215:53">0</literal></expr></argument>, <argument pos:start="215:56" pos:end="215:57"><expr pos:start="215:56" pos:end="215:57"><name pos:start="215:56" pos:end="215:57">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:34"><expr pos:start="217:13" pos:end="217:33"><call pos:start="217:13" pos:end="217:33"><name pos:start="217:13" pos:end="217:25">tcg_temp_free</name><argument_list pos:start="217:26" pos:end="217:33">(<argument pos:start="217:27" pos:end="217:32"><expr pos:start="217:27" pos:end="217:32"><name pos:start="217:27" pos:end="217:32">r_tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="219:13" pos:end="219:62">/* operands of same sign, result different sign */</comment>

            <expr_stmt pos:start="221:13" pos:end="221:51"><expr pos:start="221:13" pos:end="221:50"><call pos:start="221:13" pos:end="221:50"><name pos:start="221:13" pos:end="221:30">generate_exception</name><argument_list pos:start="221:31" pos:end="221:50">(<argument pos:start="221:32" pos:end="221:34"><expr pos:start="221:32" pos:end="221:34"><name pos:start="221:32" pos:end="221:34">ctx</name></expr></argument>, <argument pos:start="221:37" pos:end="221:49"><expr pos:start="221:37" pos:end="221:49"><name pos:start="221:37" pos:end="221:49">EXCP_OVERFLOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:30"><expr pos:start="223:13" pos:end="223:29"><call pos:start="223:13" pos:end="223:29"><name pos:start="223:13" pos:end="223:25">gen_set_label</name><argument_list pos:start="223:26" pos:end="223:29">(<argument pos:start="223:27" pos:end="223:28"><expr pos:start="223:27" pos:end="223:28"><name pos:start="223:27" pos:end="223:28">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="227:9" pos:end="227:21"><expr pos:start="227:9" pos:end="227:20"><name pos:start="227:9" pos:end="227:11">opn</name> <operator pos:start="227:13" pos:end="227:13">=</operator> <literal type="string" pos:start="227:15" pos:end="227:20">"dadd"</literal></expr>;</expr_stmt>

        <break pos:start="229:9" pos:end="229:14">break;</break>

    <case pos:start="231:5" pos:end="231:19">case <expr pos:start="231:10" pos:end="231:18"><name pos:start="231:10" pos:end="231:18">OPC_DADDU</name></expr>:</case>

        <expr_stmt pos:start="233:9" pos:end="233:35"><expr pos:start="233:9" pos:end="233:34"><call pos:start="233:9" pos:end="233:34"><name pos:start="233:9" pos:end="233:22">tcg_gen_add_tl</name><argument_list pos:start="233:23" pos:end="233:34">(<argument pos:start="233:24" pos:end="233:25"><expr pos:start="233:24" pos:end="233:25"><name pos:start="233:24" pos:end="233:25">t0</name></expr></argument>, <argument pos:start="233:28" pos:end="233:29"><expr pos:start="233:28" pos:end="233:29"><name pos:start="233:28" pos:end="233:29">t0</name></expr></argument>, <argument pos:start="233:32" pos:end="233:33"><expr pos:start="233:32" pos:end="233:33"><name pos:start="233:32" pos:end="233:33">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:22"><expr pos:start="235:9" pos:end="235:21"><name pos:start="235:9" pos:end="235:11">opn</name> <operator pos:start="235:13" pos:end="235:13">=</operator> <literal type="string" pos:start="235:15" pos:end="235:21">"daddu"</literal></expr>;</expr_stmt>

        <break pos:start="237:9" pos:end="237:14">break;</break>

    <case pos:start="239:5" pos:end="239:18">case <expr pos:start="239:10" pos:end="239:17"><name pos:start="239:10" pos:end="239:17">OPC_DSUB</name></expr>:</case>

        <block pos:start="241:9" pos:end="279:9">{<block_content pos:start="243:13" pos:end="277:30">

            <decl_stmt pos:start="243:13" pos:end="243:58"><decl pos:start="243:13" pos:end="243:57"><type pos:start="243:13" pos:end="243:16"><name pos:start="243:13" pos:end="243:16">TCGv</name></type> <name pos:start="243:18" pos:end="243:23">r_tmp1</name> <init pos:start="243:25" pos:end="243:57">= <expr pos:start="243:27" pos:end="243:57"><call pos:start="243:27" pos:end="243:57"><name pos:start="243:27" pos:end="243:44">tcg_temp_local_new</name><argument_list pos:start="243:45" pos:end="243:57">(<argument pos:start="243:46" pos:end="243:56"><expr pos:start="243:46" pos:end="243:56"><name pos:start="243:46" pos:end="243:56">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="245:13" pos:end="245:52"><decl pos:start="245:13" pos:end="245:51"><type pos:start="245:13" pos:end="245:16"><name pos:start="245:13" pos:end="245:16">TCGv</name></type> <name pos:start="245:18" pos:end="245:23">r_tmp2</name> <init pos:start="245:25" pos:end="245:51">= <expr pos:start="245:27" pos:end="245:51"><call pos:start="245:27" pos:end="245:51"><name pos:start="245:27" pos:end="245:38">tcg_temp_new</name><argument_list pos:start="245:39" pos:end="245:51">(<argument pos:start="245:40" pos:end="245:50"><expr pos:start="245:40" pos:end="245:50"><name pos:start="245:40" pos:end="245:50">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="247:13" pos:end="247:37"><decl pos:start="247:13" pos:end="247:36"><type pos:start="247:13" pos:end="247:15"><name pos:start="247:13" pos:end="247:15">int</name></type> <name pos:start="247:17" pos:end="247:18">l1</name> <init pos:start="247:20" pos:end="247:36">= <expr pos:start="247:22" pos:end="247:36"><call pos:start="247:22" pos:end="247:36"><name pos:start="247:22" pos:end="247:34">gen_new_label</name><argument_list pos:start="247:35" pos:end="247:36">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="251:13" pos:end="251:35"><expr pos:start="251:13" pos:end="251:34"><call pos:start="251:13" pos:end="251:34"><name pos:start="251:13" pos:end="251:26">save_cpu_state</name><argument_list pos:start="251:27" pos:end="251:34">(<argument pos:start="251:28" pos:end="251:30"><expr pos:start="251:28" pos:end="251:30"><name pos:start="251:28" pos:end="251:30">ctx</name></expr></argument>, <argument pos:start="251:33" pos:end="251:33"><expr pos:start="251:33" pos:end="251:33"><literal type="number" pos:start="251:33" pos:end="251:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:39"><expr pos:start="253:13" pos:end="253:38"><call pos:start="253:13" pos:end="253:38"><name pos:start="253:13" pos:end="253:26">tcg_gen_mov_tl</name><argument_list pos:start="253:27" pos:end="253:38">(<argument pos:start="253:28" pos:end="253:33"><expr pos:start="253:28" pos:end="253:33"><name pos:start="253:28" pos:end="253:33">r_tmp1</name></expr></argument>, <argument pos:start="253:36" pos:end="253:37"><expr pos:start="253:36" pos:end="253:37"><name pos:start="253:36" pos:end="253:37">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:39"><expr pos:start="255:13" pos:end="255:38"><call pos:start="255:13" pos:end="255:38"><name pos:start="255:13" pos:end="255:26">tcg_gen_sub_tl</name><argument_list pos:start="255:27" pos:end="255:38">(<argument pos:start="255:28" pos:end="255:29"><expr pos:start="255:28" pos:end="255:29"><name pos:start="255:28" pos:end="255:29">t0</name></expr></argument>, <argument pos:start="255:32" pos:end="255:33"><expr pos:start="255:32" pos:end="255:33"><name pos:start="255:32" pos:end="255:33">t0</name></expr></argument>, <argument pos:start="255:36" pos:end="255:37"><expr pos:start="255:36" pos:end="255:37"><name pos:start="255:36" pos:end="255:37">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="259:13" pos:end="259:47"><expr pos:start="259:13" pos:end="259:46"><call pos:start="259:13" pos:end="259:46"><name pos:start="259:13" pos:end="259:26">tcg_gen_xor_tl</name><argument_list pos:start="259:27" pos:end="259:46">(<argument pos:start="259:28" pos:end="259:33"><expr pos:start="259:28" pos:end="259:33"><name pos:start="259:28" pos:end="259:33">r_tmp2</name></expr></argument>, <argument pos:start="259:36" pos:end="259:41"><expr pos:start="259:36" pos:end="259:41"><name pos:start="259:36" pos:end="259:41">r_tmp1</name></expr></argument>, <argument pos:start="259:44" pos:end="259:45"><expr pos:start="259:44" pos:end="259:45"><name pos:start="259:44" pos:end="259:45">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:47"><expr pos:start="261:13" pos:end="261:46"><call pos:start="261:13" pos:end="261:46"><name pos:start="261:13" pos:end="261:26">tcg_gen_xor_tl</name><argument_list pos:start="261:27" pos:end="261:46">(<argument pos:start="261:28" pos:end="261:33"><expr pos:start="261:28" pos:end="261:33"><name pos:start="261:28" pos:end="261:33">r_tmp1</name></expr></argument>, <argument pos:start="261:36" pos:end="261:41"><expr pos:start="261:36" pos:end="261:41"><name pos:start="261:36" pos:end="261:41">r_tmp1</name></expr></argument>, <argument pos:start="261:44" pos:end="261:45"><expr pos:start="261:44" pos:end="261:45"><name pos:start="261:44" pos:end="261:45">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:51"><expr pos:start="263:13" pos:end="263:50"><call pos:start="263:13" pos:end="263:50"><name pos:start="263:13" pos:end="263:26">tcg_gen_and_tl</name><argument_list pos:start="263:27" pos:end="263:50">(<argument pos:start="263:28" pos:end="263:33"><expr pos:start="263:28" pos:end="263:33"><name pos:start="263:28" pos:end="263:33">r_tmp1</name></expr></argument>, <argument pos:start="263:36" pos:end="263:41"><expr pos:start="263:36" pos:end="263:41"><name pos:start="263:36" pos:end="263:41">r_tmp1</name></expr></argument>, <argument pos:start="263:44" pos:end="263:49"><expr pos:start="263:44" pos:end="263:49"><name pos:start="263:44" pos:end="263:49">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:34"><expr pos:start="265:13" pos:end="265:33"><call pos:start="265:13" pos:end="265:33"><name pos:start="265:13" pos:end="265:25">tcg_temp_free</name><argument_list pos:start="265:26" pos:end="265:33">(<argument pos:start="265:27" pos:end="265:32"><expr pos:start="265:27" pos:end="265:32"><name pos:start="265:27" pos:end="265:32">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:48"><expr pos:start="267:13" pos:end="267:47"><call pos:start="267:13" pos:end="267:47"><name pos:start="267:13" pos:end="267:27">tcg_gen_shri_tl</name><argument_list pos:start="267:28" pos:end="267:47">(<argument pos:start="267:29" pos:end="267:34"><expr pos:start="267:29" pos:end="267:34"><name pos:start="267:29" pos:end="267:34">r_tmp1</name></expr></argument>, <argument pos:start="267:37" pos:end="267:42"><expr pos:start="267:37" pos:end="267:42"><name pos:start="267:37" pos:end="267:42">r_tmp1</name></expr></argument>, <argument pos:start="267:45" pos:end="267:46"><expr pos:start="267:45" pos:end="267:46"><literal type="number" pos:start="267:45" pos:end="267:46">63</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:59"><expr pos:start="269:13" pos:end="269:58"><call pos:start="269:13" pos:end="269:58"><name pos:start="269:13" pos:end="269:30">tcg_gen_brcondi_tl</name><argument_list pos:start="269:31" pos:end="269:58">(<argument pos:start="269:32" pos:end="269:42"><expr pos:start="269:32" pos:end="269:42"><name pos:start="269:32" pos:end="269:42">TCG_COND_EQ</name></expr></argument>, <argument pos:start="269:45" pos:end="269:50"><expr pos:start="269:45" pos:end="269:50"><name pos:start="269:45" pos:end="269:50">r_tmp1</name></expr></argument>, <argument pos:start="269:53" pos:end="269:53"><expr pos:start="269:53" pos:end="269:53"><literal type="number" pos:start="269:53" pos:end="269:53">0</literal></expr></argument>, <argument pos:start="269:56" pos:end="269:57"><expr pos:start="269:56" pos:end="269:57"><name pos:start="269:56" pos:end="269:57">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:34"><expr pos:start="271:13" pos:end="271:33"><call pos:start="271:13" pos:end="271:33"><name pos:start="271:13" pos:end="271:25">tcg_temp_free</name><argument_list pos:start="271:26" pos:end="271:33">(<argument pos:start="271:27" pos:end="271:32"><expr pos:start="271:27" pos:end="271:32"><name pos:start="271:27" pos:end="271:32">r_tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="273:13" pos:end="273:85">/* operands of different sign, first operand and result different sign */</comment>

            <expr_stmt pos:start="275:13" pos:end="275:51"><expr pos:start="275:13" pos:end="275:50"><call pos:start="275:13" pos:end="275:50"><name pos:start="275:13" pos:end="275:30">generate_exception</name><argument_list pos:start="275:31" pos:end="275:50">(<argument pos:start="275:32" pos:end="275:34"><expr pos:start="275:32" pos:end="275:34"><name pos:start="275:32" pos:end="275:34">ctx</name></expr></argument>, <argument pos:start="275:37" pos:end="275:49"><expr pos:start="275:37" pos:end="275:49"><name pos:start="275:37" pos:end="275:49">EXCP_OVERFLOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:30"><expr pos:start="277:13" pos:end="277:29"><call pos:start="277:13" pos:end="277:29"><name pos:start="277:13" pos:end="277:25">gen_set_label</name><argument_list pos:start="277:26" pos:end="277:29">(<argument pos:start="277:27" pos:end="277:28"><expr pos:start="277:27" pos:end="277:28"><name pos:start="277:27" pos:end="277:28">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="281:9" pos:end="281:21"><expr pos:start="281:9" pos:end="281:20"><name pos:start="281:9" pos:end="281:11">opn</name> <operator pos:start="281:13" pos:end="281:13">=</operator> <literal type="string" pos:start="281:15" pos:end="281:20">"dsub"</literal></expr>;</expr_stmt>

        <break pos:start="283:9" pos:end="283:14">break;</break>

    <case pos:start="285:5" pos:end="285:19">case <expr pos:start="285:10" pos:end="285:18"><name pos:start="285:10" pos:end="285:18">OPC_DSUBU</name></expr>:</case>

        <expr_stmt pos:start="287:9" pos:end="287:35"><expr pos:start="287:9" pos:end="287:34"><call pos:start="287:9" pos:end="287:34"><name pos:start="287:9" pos:end="287:22">tcg_gen_sub_tl</name><argument_list pos:start="287:23" pos:end="287:34">(<argument pos:start="287:24" pos:end="287:25"><expr pos:start="287:24" pos:end="287:25"><name pos:start="287:24" pos:end="287:25">t0</name></expr></argument>, <argument pos:start="287:28" pos:end="287:29"><expr pos:start="287:28" pos:end="287:29"><name pos:start="287:28" pos:end="287:29">t0</name></expr></argument>, <argument pos:start="287:32" pos:end="287:33"><expr pos:start="287:32" pos:end="287:33"><name pos:start="287:32" pos:end="287:33">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:22"><expr pos:start="289:9" pos:end="289:21"><name pos:start="289:9" pos:end="289:11">opn</name> <operator pos:start="289:13" pos:end="289:13">=</operator> <literal type="string" pos:start="289:15" pos:end="289:21">"dsubu"</literal></expr>;</expr_stmt>

        <break pos:start="291:9" pos:end="294:0">break;</break>

<cpp:endif pos:start="293:1" pos:end="293:6">#<cpp:directive pos:start="293:2" pos:end="293:6">endif</cpp:directive></cpp:endif>

    <case pos:start="295:5" pos:end="295:17">case <expr pos:start="295:10" pos:end="295:16"><name pos:start="295:10" pos:end="295:16">OPC_SLT</name></expr>:</case>

        <expr_stmt pos:start="297:9" pos:end="297:26"><expr pos:start="297:9" pos:end="297:25"><call pos:start="297:9" pos:end="297:25"><name pos:start="297:9" pos:end="297:17">gen_op_lt</name><argument_list pos:start="297:18" pos:end="297:25">(<argument pos:start="297:19" pos:end="297:20"><expr pos:start="297:19" pos:end="297:20"><name pos:start="297:19" pos:end="297:20">t0</name></expr></argument>, <argument pos:start="297:23" pos:end="297:24"><expr pos:start="297:23" pos:end="297:24"><name pos:start="297:23" pos:end="297:24">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:20"><expr pos:start="299:9" pos:end="299:19"><name pos:start="299:9" pos:end="299:11">opn</name> <operator pos:start="299:13" pos:end="299:13">=</operator> <literal type="string" pos:start="299:15" pos:end="299:19">"slt"</literal></expr>;</expr_stmt>

        <break pos:start="301:9" pos:end="301:14">break;</break>

    <case pos:start="303:5" pos:end="303:18">case <expr pos:start="303:10" pos:end="303:17"><name pos:start="303:10" pos:end="303:17">OPC_SLTU</name></expr>:</case>

        <expr_stmt pos:start="305:9" pos:end="305:27"><expr pos:start="305:9" pos:end="305:26"><call pos:start="305:9" pos:end="305:26"><name pos:start="305:9" pos:end="305:18">gen_op_ltu</name><argument_list pos:start="305:19" pos:end="305:26">(<argument pos:start="305:20" pos:end="305:21"><expr pos:start="305:20" pos:end="305:21"><name pos:start="305:20" pos:end="305:21">t0</name></expr></argument>, <argument pos:start="305:24" pos:end="305:25"><expr pos:start="305:24" pos:end="305:25"><name pos:start="305:24" pos:end="305:25">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:21"><expr pos:start="307:9" pos:end="307:20"><name pos:start="307:9" pos:end="307:11">opn</name> <operator pos:start="307:13" pos:end="307:13">=</operator> <literal type="string" pos:start="307:15" pos:end="307:20">"sltu"</literal></expr>;</expr_stmt>

        <break pos:start="309:9" pos:end="309:14">break;</break>

    <case pos:start="311:5" pos:end="311:17">case <expr pos:start="311:10" pos:end="311:16"><name pos:start="311:10" pos:end="311:16">OPC_AND</name></expr>:</case>

        <expr_stmt pos:start="313:9" pos:end="313:35"><expr pos:start="313:9" pos:end="313:34"><call pos:start="313:9" pos:end="313:34"><name pos:start="313:9" pos:end="313:22">tcg_gen_and_tl</name><argument_list pos:start="313:23" pos:end="313:34">(<argument pos:start="313:24" pos:end="313:25"><expr pos:start="313:24" pos:end="313:25"><name pos:start="313:24" pos:end="313:25">t0</name></expr></argument>, <argument pos:start="313:28" pos:end="313:29"><expr pos:start="313:28" pos:end="313:29"><name pos:start="313:28" pos:end="313:29">t0</name></expr></argument>, <argument pos:start="313:32" pos:end="313:33"><expr pos:start="313:32" pos:end="313:33"><name pos:start="313:32" pos:end="313:33">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:20"><expr pos:start="315:9" pos:end="315:19"><name pos:start="315:9" pos:end="315:11">opn</name> <operator pos:start="315:13" pos:end="315:13">=</operator> <literal type="string" pos:start="315:15" pos:end="315:19">"and"</literal></expr>;</expr_stmt>

        <break pos:start="317:9" pos:end="317:14">break;</break>

    <case pos:start="319:5" pos:end="319:17">case <expr pos:start="319:10" pos:end="319:16"><name pos:start="319:10" pos:end="319:16">OPC_NOR</name></expr>:</case>

        <expr_stmt pos:start="321:9" pos:end="321:34"><expr pos:start="321:9" pos:end="321:33"><call pos:start="321:9" pos:end="321:33"><name pos:start="321:9" pos:end="321:21">tcg_gen_or_tl</name><argument_list pos:start="321:22" pos:end="321:33">(<argument pos:start="321:23" pos:end="321:24"><expr pos:start="321:23" pos:end="321:24"><name pos:start="321:23" pos:end="321:24">t0</name></expr></argument>, <argument pos:start="321:27" pos:end="321:28"><expr pos:start="321:27" pos:end="321:28"><name pos:start="321:27" pos:end="321:28">t0</name></expr></argument>, <argument pos:start="321:31" pos:end="321:32"><expr pos:start="321:31" pos:end="321:32"><name pos:start="321:31" pos:end="321:32">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:31"><expr pos:start="323:9" pos:end="323:30"><call pos:start="323:9" pos:end="323:30"><name pos:start="323:9" pos:end="323:22">tcg_gen_not_tl</name><argument_list pos:start="323:23" pos:end="323:30">(<argument pos:start="323:24" pos:end="323:25"><expr pos:start="323:24" pos:end="323:25"><name pos:start="323:24" pos:end="323:25">t0</name></expr></argument>, <argument pos:start="323:28" pos:end="323:29"><expr pos:start="323:28" pos:end="323:29"><name pos:start="323:28" pos:end="323:29">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="325:9" pos:end="325:20"><expr pos:start="325:9" pos:end="325:19"><name pos:start="325:9" pos:end="325:11">opn</name> <operator pos:start="325:13" pos:end="325:13">=</operator> <literal type="string" pos:start="325:15" pos:end="325:19">"nor"</literal></expr>;</expr_stmt>

        <break pos:start="327:9" pos:end="327:14">break;</break>

    <case pos:start="329:5" pos:end="329:16">case <expr pos:start="329:10" pos:end="329:15"><name pos:start="329:10" pos:end="329:15">OPC_OR</name></expr>:</case>

        <expr_stmt pos:start="331:9" pos:end="331:34"><expr pos:start="331:9" pos:end="331:33"><call pos:start="331:9" pos:end="331:33"><name pos:start="331:9" pos:end="331:21">tcg_gen_or_tl</name><argument_list pos:start="331:22" pos:end="331:33">(<argument pos:start="331:23" pos:end="331:24"><expr pos:start="331:23" pos:end="331:24"><name pos:start="331:23" pos:end="331:24">t0</name></expr></argument>, <argument pos:start="331:27" pos:end="331:28"><expr pos:start="331:27" pos:end="331:28"><name pos:start="331:27" pos:end="331:28">t0</name></expr></argument>, <argument pos:start="331:31" pos:end="331:32"><expr pos:start="331:31" pos:end="331:32"><name pos:start="331:31" pos:end="331:32">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:19"><expr pos:start="333:9" pos:end="333:18"><name pos:start="333:9" pos:end="333:11">opn</name> <operator pos:start="333:13" pos:end="333:13">=</operator> <literal type="string" pos:start="333:15" pos:end="333:18">"or"</literal></expr>;</expr_stmt>

        <break pos:start="335:9" pos:end="335:14">break;</break>

    <case pos:start="337:5" pos:end="337:17">case <expr pos:start="337:10" pos:end="337:16"><name pos:start="337:10" pos:end="337:16">OPC_XOR</name></expr>:</case>

        <expr_stmt pos:start="339:9" pos:end="339:35"><expr pos:start="339:9" pos:end="339:34"><call pos:start="339:9" pos:end="339:34"><name pos:start="339:9" pos:end="339:22">tcg_gen_xor_tl</name><argument_list pos:start="339:23" pos:end="339:34">(<argument pos:start="339:24" pos:end="339:25"><expr pos:start="339:24" pos:end="339:25"><name pos:start="339:24" pos:end="339:25">t0</name></expr></argument>, <argument pos:start="339:28" pos:end="339:29"><expr pos:start="339:28" pos:end="339:29"><name pos:start="339:28" pos:end="339:29">t0</name></expr></argument>, <argument pos:start="339:32" pos:end="339:33"><expr pos:start="339:32" pos:end="339:33"><name pos:start="339:32" pos:end="339:33">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="341:9" pos:end="341:20"><expr pos:start="341:9" pos:end="341:19"><name pos:start="341:9" pos:end="341:11">opn</name> <operator pos:start="341:13" pos:end="341:13">=</operator> <literal type="string" pos:start="341:15" pos:end="341:19">"xor"</literal></expr>;</expr_stmt>

        <break pos:start="343:9" pos:end="343:14">break;</break>

    <case pos:start="345:5" pos:end="345:17">case <expr pos:start="345:10" pos:end="345:16"><name pos:start="345:10" pos:end="345:16">OPC_MUL</name></expr>:</case>

        <expr_stmt pos:start="347:9" pos:end="347:34"><expr pos:start="347:9" pos:end="347:33"><call pos:start="347:9" pos:end="347:33"><name pos:start="347:9" pos:end="347:25">tcg_gen_ext32s_tl</name><argument_list pos:start="347:26" pos:end="347:33">(<argument pos:start="347:27" pos:end="347:28"><expr pos:start="347:27" pos:end="347:28"><name pos:start="347:27" pos:end="347:28">t0</name></expr></argument>, <argument pos:start="347:31" pos:end="347:32"><expr pos:start="347:31" pos:end="347:32"><name pos:start="347:31" pos:end="347:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="349:9" pos:end="349:34"><expr pos:start="349:9" pos:end="349:33"><call pos:start="349:9" pos:end="349:33"><name pos:start="349:9" pos:end="349:25">tcg_gen_ext32s_tl</name><argument_list pos:start="349:26" pos:end="349:33">(<argument pos:start="349:27" pos:end="349:28"><expr pos:start="349:27" pos:end="349:28"><name pos:start="349:27" pos:end="349:28">t1</name></expr></argument>, <argument pos:start="349:31" pos:end="349:32"><expr pos:start="349:31" pos:end="349:32"><name pos:start="349:31" pos:end="349:32">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:35"><expr pos:start="351:9" pos:end="351:34"><call pos:start="351:9" pos:end="351:34"><name pos:start="351:9" pos:end="351:22">tcg_gen_mul_tl</name><argument_list pos:start="351:23" pos:end="351:34">(<argument pos:start="351:24" pos:end="351:25"><expr pos:start="351:24" pos:end="351:25"><name pos:start="351:24" pos:end="351:25">t0</name></expr></argument>, <argument pos:start="351:28" pos:end="351:29"><expr pos:start="351:28" pos:end="351:29"><name pos:start="351:28" pos:end="351:29">t0</name></expr></argument>, <argument pos:start="351:32" pos:end="351:33"><expr pos:start="351:32" pos:end="351:33"><name pos:start="351:32" pos:end="351:33">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="353:9" pos:end="353:34"><expr pos:start="353:9" pos:end="353:33"><call pos:start="353:9" pos:end="353:33"><name pos:start="353:9" pos:end="353:25">tcg_gen_ext32s_tl</name><argument_list pos:start="353:26" pos:end="353:33">(<argument pos:start="353:27" pos:end="353:28"><expr pos:start="353:27" pos:end="353:28"><name pos:start="353:27" pos:end="353:28">t0</name></expr></argument>, <argument pos:start="353:31" pos:end="353:32"><expr pos:start="353:31" pos:end="353:32"><name pos:start="353:31" pos:end="353:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="355:9" pos:end="355:20"><expr pos:start="355:9" pos:end="355:19"><name pos:start="355:9" pos:end="355:11">opn</name> <operator pos:start="355:13" pos:end="355:13">=</operator> <literal type="string" pos:start="355:15" pos:end="355:19">"mul"</literal></expr>;</expr_stmt>

        <break pos:start="357:9" pos:end="357:14">break;</break>

    <case pos:start="359:5" pos:end="359:18">case <expr pos:start="359:10" pos:end="359:17"><name pos:start="359:10" pos:end="359:17">OPC_MOVN</name></expr>:</case>

        <block pos:start="361:9" pos:end="373:9">{<block_content pos:start="363:13" pos:end="371:30">

            <decl_stmt pos:start="363:13" pos:end="363:37"><decl pos:start="363:13" pos:end="363:36"><type pos:start="363:13" pos:end="363:15"><name pos:start="363:13" pos:end="363:15">int</name></type> <name pos:start="363:17" pos:end="363:18">l1</name> <init pos:start="363:20" pos:end="363:36">= <expr pos:start="363:22" pos:end="363:36"><call pos:start="363:22" pos:end="363:36"><name pos:start="363:22" pos:end="363:34">gen_new_label</name><argument_list pos:start="363:35" pos:end="363:36">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="367:13" pos:end="367:55"><expr pos:start="367:13" pos:end="367:54"><call pos:start="367:13" pos:end="367:54"><name pos:start="367:13" pos:end="367:30">tcg_gen_brcondi_tl</name><argument_list pos:start="367:31" pos:end="367:54">(<argument pos:start="367:32" pos:end="367:42"><expr pos:start="367:32" pos:end="367:42"><name pos:start="367:32" pos:end="367:42">TCG_COND_EQ</name></expr></argument>, <argument pos:start="367:45" pos:end="367:46"><expr pos:start="367:45" pos:end="367:46"><name pos:start="367:45" pos:end="367:46">t1</name></expr></argument>, <argument pos:start="367:49" pos:end="367:49"><expr pos:start="367:49" pos:end="367:49"><literal type="number" pos:start="367:49" pos:end="367:49">0</literal></expr></argument>, <argument pos:start="367:52" pos:end="367:53"><expr pos:start="367:52" pos:end="367:53"><name pos:start="367:52" pos:end="367:53">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:34"><expr pos:start="369:13" pos:end="369:33"><call pos:start="369:13" pos:end="369:33"><name pos:start="369:13" pos:end="369:25">gen_store_gpr</name><argument_list pos:start="369:26" pos:end="369:33">(<argument pos:start="369:27" pos:end="369:28"><expr pos:start="369:27" pos:end="369:28"><name pos:start="369:27" pos:end="369:28">t0</name></expr></argument>, <argument pos:start="369:31" pos:end="369:32"><expr pos:start="369:31" pos:end="369:32"><name pos:start="369:31" pos:end="369:32">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:30"><expr pos:start="371:13" pos:end="371:29"><call pos:start="371:13" pos:end="371:29"><name pos:start="371:13" pos:end="371:25">gen_set_label</name><argument_list pos:start="371:26" pos:end="371:29">(<argument pos:start="371:27" pos:end="371:28"><expr pos:start="371:27" pos:end="371:28"><name pos:start="371:27" pos:end="371:28">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="375:9" pos:end="375:21"><expr pos:start="375:9" pos:end="375:20"><name pos:start="375:9" pos:end="375:11">opn</name> <operator pos:start="375:13" pos:end="375:13">=</operator> <literal type="string" pos:start="375:15" pos:end="375:20">"movn"</literal></expr>;</expr_stmt>

        <goto pos:start="377:9" pos:end="377:19">goto <name pos:start="377:14" pos:end="377:18">print</name>;</goto>

    <case pos:start="379:5" pos:end="379:18">case <expr pos:start="379:10" pos:end="379:17"><name pos:start="379:10" pos:end="379:17">OPC_MOVZ</name></expr>:</case>

        <block pos:start="381:9" pos:end="393:9">{<block_content pos:start="383:13" pos:end="391:30">

            <decl_stmt pos:start="383:13" pos:end="383:37"><decl pos:start="383:13" pos:end="383:36"><type pos:start="383:13" pos:end="383:15"><name pos:start="383:13" pos:end="383:15">int</name></type> <name pos:start="383:17" pos:end="383:18">l1</name> <init pos:start="383:20" pos:end="383:36">= <expr pos:start="383:22" pos:end="383:36"><call pos:start="383:22" pos:end="383:36"><name pos:start="383:22" pos:end="383:34">gen_new_label</name><argument_list pos:start="383:35" pos:end="383:36">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="387:13" pos:end="387:55"><expr pos:start="387:13" pos:end="387:54"><call pos:start="387:13" pos:end="387:54"><name pos:start="387:13" pos:end="387:30">tcg_gen_brcondi_tl</name><argument_list pos:start="387:31" pos:end="387:54">(<argument pos:start="387:32" pos:end="387:42"><expr pos:start="387:32" pos:end="387:42"><name pos:start="387:32" pos:end="387:42">TCG_COND_NE</name></expr></argument>, <argument pos:start="387:45" pos:end="387:46"><expr pos:start="387:45" pos:end="387:46"><name pos:start="387:45" pos:end="387:46">t1</name></expr></argument>, <argument pos:start="387:49" pos:end="387:49"><expr pos:start="387:49" pos:end="387:49"><literal type="number" pos:start="387:49" pos:end="387:49">0</literal></expr></argument>, <argument pos:start="387:52" pos:end="387:53"><expr pos:start="387:52" pos:end="387:53"><name pos:start="387:52" pos:end="387:53">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="389:13" pos:end="389:34"><expr pos:start="389:13" pos:end="389:33"><call pos:start="389:13" pos:end="389:33"><name pos:start="389:13" pos:end="389:25">gen_store_gpr</name><argument_list pos:start="389:26" pos:end="389:33">(<argument pos:start="389:27" pos:end="389:28"><expr pos:start="389:27" pos:end="389:28"><name pos:start="389:27" pos:end="389:28">t0</name></expr></argument>, <argument pos:start="389:31" pos:end="389:32"><expr pos:start="389:31" pos:end="389:32"><name pos:start="389:31" pos:end="389:32">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="391:13" pos:end="391:30"><expr pos:start="391:13" pos:end="391:29"><call pos:start="391:13" pos:end="391:29"><name pos:start="391:13" pos:end="391:25">gen_set_label</name><argument_list pos:start="391:26" pos:end="391:29">(<argument pos:start="391:27" pos:end="391:28"><expr pos:start="391:27" pos:end="391:28"><name pos:start="391:27" pos:end="391:28">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="395:9" pos:end="395:21"><expr pos:start="395:9" pos:end="395:20"><name pos:start="395:9" pos:end="395:11">opn</name> <operator pos:start="395:13" pos:end="395:13">=</operator> <literal type="string" pos:start="395:15" pos:end="395:20">"movz"</literal></expr>;</expr_stmt>

        <goto pos:start="397:9" pos:end="397:19">goto <name pos:start="397:14" pos:end="397:18">print</name>;</goto>

    <case pos:start="399:5" pos:end="399:18">case <expr pos:start="399:10" pos:end="399:17"><name pos:start="399:10" pos:end="399:17">OPC_SLLV</name></expr>:</case>

        <expr_stmt pos:start="401:9" pos:end="401:34"><expr pos:start="401:9" pos:end="401:33"><call pos:start="401:9" pos:end="401:33"><name pos:start="401:9" pos:end="401:25">tcg_gen_ext32u_tl</name><argument_list pos:start="401:26" pos:end="401:33">(<argument pos:start="401:27" pos:end="401:28"><expr pos:start="401:27" pos:end="401:28"><name pos:start="401:27" pos:end="401:28">t0</name></expr></argument>, <argument pos:start="401:31" pos:end="401:32"><expr pos:start="401:31" pos:end="401:32"><name pos:start="401:31" pos:end="401:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="403:9" pos:end="403:34"><expr pos:start="403:9" pos:end="403:33"><call pos:start="403:9" pos:end="403:33"><name pos:start="403:9" pos:end="403:25">tcg_gen_ext32u_tl</name><argument_list pos:start="403:26" pos:end="403:33">(<argument pos:start="403:27" pos:end="403:28"><expr pos:start="403:27" pos:end="403:28"><name pos:start="403:27" pos:end="403:28">t1</name></expr></argument>, <argument pos:start="403:31" pos:end="403:32"><expr pos:start="403:31" pos:end="403:32"><name pos:start="403:31" pos:end="403:32">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="405:9" pos:end="405:38"><expr pos:start="405:9" pos:end="405:37"><call pos:start="405:9" pos:end="405:37"><name pos:start="405:9" pos:end="405:23">tcg_gen_andi_tl</name><argument_list pos:start="405:24" pos:end="405:37">(<argument pos:start="405:25" pos:end="405:26"><expr pos:start="405:25" pos:end="405:26"><name pos:start="405:25" pos:end="405:26">t0</name></expr></argument>, <argument pos:start="405:29" pos:end="405:30"><expr pos:start="405:29" pos:end="405:30"><name pos:start="405:29" pos:end="405:30">t0</name></expr></argument>, <argument pos:start="405:33" pos:end="405:36"><expr pos:start="405:33" pos:end="405:36"><literal type="number" pos:start="405:33" pos:end="405:36">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="407:9" pos:end="407:35"><expr pos:start="407:9" pos:end="407:34"><call pos:start="407:9" pos:end="407:34"><name pos:start="407:9" pos:end="407:22">tcg_gen_shl_tl</name><argument_list pos:start="407:23" pos:end="407:34">(<argument pos:start="407:24" pos:end="407:25"><expr pos:start="407:24" pos:end="407:25"><name pos:start="407:24" pos:end="407:25">t0</name></expr></argument>, <argument pos:start="407:28" pos:end="407:29"><expr pos:start="407:28" pos:end="407:29"><name pos:start="407:28" pos:end="407:29">t1</name></expr></argument>, <argument pos:start="407:32" pos:end="407:33"><expr pos:start="407:32" pos:end="407:33"><name pos:start="407:32" pos:end="407:33">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="409:9" pos:end="409:34"><expr pos:start="409:9" pos:end="409:33"><call pos:start="409:9" pos:end="409:33"><name pos:start="409:9" pos:end="409:25">tcg_gen_ext32s_tl</name><argument_list pos:start="409:26" pos:end="409:33">(<argument pos:start="409:27" pos:end="409:28"><expr pos:start="409:27" pos:end="409:28"><name pos:start="409:27" pos:end="409:28">t0</name></expr></argument>, <argument pos:start="409:31" pos:end="409:32"><expr pos:start="409:31" pos:end="409:32"><name pos:start="409:31" pos:end="409:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="411:9" pos:end="411:21"><expr pos:start="411:9" pos:end="411:20"><name pos:start="411:9" pos:end="411:11">opn</name> <operator pos:start="411:13" pos:end="411:13">=</operator> <literal type="string" pos:start="411:15" pos:end="411:20">"sllv"</literal></expr>;</expr_stmt>

        <break pos:start="413:9" pos:end="413:14">break;</break>

    <case pos:start="415:5" pos:end="415:18">case <expr pos:start="415:10" pos:end="415:17"><name pos:start="415:10" pos:end="415:17">OPC_SRAV</name></expr>:</case>

        <expr_stmt pos:start="417:9" pos:end="417:34"><expr pos:start="417:9" pos:end="417:33"><call pos:start="417:9" pos:end="417:33"><name pos:start="417:9" pos:end="417:25">tcg_gen_ext32s_tl</name><argument_list pos:start="417:26" pos:end="417:33">(<argument pos:start="417:27" pos:end="417:28"><expr pos:start="417:27" pos:end="417:28"><name pos:start="417:27" pos:end="417:28">t1</name></expr></argument>, <argument pos:start="417:31" pos:end="417:32"><expr pos:start="417:31" pos:end="417:32"><name pos:start="417:31" pos:end="417:32">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="419:9" pos:end="419:38"><expr pos:start="419:9" pos:end="419:37"><call pos:start="419:9" pos:end="419:37"><name pos:start="419:9" pos:end="419:23">tcg_gen_andi_tl</name><argument_list pos:start="419:24" pos:end="419:37">(<argument pos:start="419:25" pos:end="419:26"><expr pos:start="419:25" pos:end="419:26"><name pos:start="419:25" pos:end="419:26">t0</name></expr></argument>, <argument pos:start="419:29" pos:end="419:30"><expr pos:start="419:29" pos:end="419:30"><name pos:start="419:29" pos:end="419:30">t0</name></expr></argument>, <argument pos:start="419:33" pos:end="419:36"><expr pos:start="419:33" pos:end="419:36"><literal type="number" pos:start="419:33" pos:end="419:36">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="421:9" pos:end="421:35"><expr pos:start="421:9" pos:end="421:34"><call pos:start="421:9" pos:end="421:34"><name pos:start="421:9" pos:end="421:22">tcg_gen_sar_tl</name><argument_list pos:start="421:23" pos:end="421:34">(<argument pos:start="421:24" pos:end="421:25"><expr pos:start="421:24" pos:end="421:25"><name pos:start="421:24" pos:end="421:25">t0</name></expr></argument>, <argument pos:start="421:28" pos:end="421:29"><expr pos:start="421:28" pos:end="421:29"><name pos:start="421:28" pos:end="421:29">t1</name></expr></argument>, <argument pos:start="421:32" pos:end="421:33"><expr pos:start="421:32" pos:end="421:33"><name pos:start="421:32" pos:end="421:33">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="423:9" pos:end="423:34"><expr pos:start="423:9" pos:end="423:33"><call pos:start="423:9" pos:end="423:33"><name pos:start="423:9" pos:end="423:25">tcg_gen_ext32s_tl</name><argument_list pos:start="423:26" pos:end="423:33">(<argument pos:start="423:27" pos:end="423:28"><expr pos:start="423:27" pos:end="423:28"><name pos:start="423:27" pos:end="423:28">t0</name></expr></argument>, <argument pos:start="423:31" pos:end="423:32"><expr pos:start="423:31" pos:end="423:32"><name pos:start="423:31" pos:end="423:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="425:9" pos:end="425:21"><expr pos:start="425:9" pos:end="425:20"><name pos:start="425:9" pos:end="425:11">opn</name> <operator pos:start="425:13" pos:end="425:13">=</operator> <literal type="string" pos:start="425:15" pos:end="425:20">"srav"</literal></expr>;</expr_stmt>

        <break pos:start="427:9" pos:end="427:14">break;</break>

    <case pos:start="429:5" pos:end="429:18">case <expr pos:start="429:10" pos:end="429:17"><name pos:start="429:10" pos:end="429:17">OPC_SRLV</name></expr>:</case>

        <switch pos:start="431:9" pos:end="517:9">switch <condition pos:start="431:16" pos:end="431:42">(<expr pos:start="431:17" pos:end="431:41"><operator pos:start="431:17" pos:end="431:17">(</operator><name pos:start="431:18" pos:end="431:28"><name pos:start="431:18" pos:end="431:20">ctx</name><operator pos:start="431:21" pos:end="431:22">-&gt;</operator><name pos:start="431:23" pos:end="431:28">opcode</name></name> <operator pos:start="431:30" pos:end="431:31">&gt;&gt;</operator> <literal type="number" pos:start="431:33" pos:end="431:33">6</literal><operator pos:start="431:34" pos:end="431:34">)</operator> <operator pos:start="431:36" pos:end="431:36">&amp;</operator> <literal type="number" pos:start="431:38" pos:end="431:41">0x1f</literal></expr>)</condition> <block pos:start="431:44" pos:end="517:9">{<block_content pos:start="433:9" pos:end="515:18">

        <case pos:start="433:9" pos:end="433:15">case <expr pos:start="433:14" pos:end="433:14"><literal type="number" pos:start="433:14" pos:end="433:14">0</literal></expr>:</case>

            <expr_stmt pos:start="435:13" pos:end="435:38"><expr pos:start="435:13" pos:end="435:37"><call pos:start="435:13" pos:end="435:37"><name pos:start="435:13" pos:end="435:29">tcg_gen_ext32u_tl</name><argument_list pos:start="435:30" pos:end="435:37">(<argument pos:start="435:31" pos:end="435:32"><expr pos:start="435:31" pos:end="435:32"><name pos:start="435:31" pos:end="435:32">t1</name></expr></argument>, <argument pos:start="435:35" pos:end="435:36"><expr pos:start="435:35" pos:end="435:36"><name pos:start="435:35" pos:end="435:36">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="437:13" pos:end="437:42"><expr pos:start="437:13" pos:end="437:41"><call pos:start="437:13" pos:end="437:41"><name pos:start="437:13" pos:end="437:27">tcg_gen_andi_tl</name><argument_list pos:start="437:28" pos:end="437:41">(<argument pos:start="437:29" pos:end="437:30"><expr pos:start="437:29" pos:end="437:30"><name pos:start="437:29" pos:end="437:30">t0</name></expr></argument>, <argument pos:start="437:33" pos:end="437:34"><expr pos:start="437:33" pos:end="437:34"><name pos:start="437:33" pos:end="437:34">t0</name></expr></argument>, <argument pos:start="437:37" pos:end="437:40"><expr pos:start="437:37" pos:end="437:40"><literal type="number" pos:start="437:37" pos:end="437:40">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="439:13" pos:end="439:39"><expr pos:start="439:13" pos:end="439:38"><call pos:start="439:13" pos:end="439:38"><name pos:start="439:13" pos:end="439:26">tcg_gen_shr_tl</name><argument_list pos:start="439:27" pos:end="439:38">(<argument pos:start="439:28" pos:end="439:29"><expr pos:start="439:28" pos:end="439:29"><name pos:start="439:28" pos:end="439:29">t0</name></expr></argument>, <argument pos:start="439:32" pos:end="439:33"><expr pos:start="439:32" pos:end="439:33"><name pos:start="439:32" pos:end="439:33">t1</name></expr></argument>, <argument pos:start="439:36" pos:end="439:37"><expr pos:start="439:36" pos:end="439:37"><name pos:start="439:36" pos:end="439:37">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:38"><expr pos:start="441:13" pos:end="441:37"><call pos:start="441:13" pos:end="441:37"><name pos:start="441:13" pos:end="441:29">tcg_gen_ext32s_tl</name><argument_list pos:start="441:30" pos:end="441:37">(<argument pos:start="441:31" pos:end="441:32"><expr pos:start="441:31" pos:end="441:32"><name pos:start="441:31" pos:end="441:32">t0</name></expr></argument>, <argument pos:start="441:35" pos:end="441:36"><expr pos:start="441:35" pos:end="441:36"><name pos:start="441:35" pos:end="441:36">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="443:13" pos:end="443:25"><expr pos:start="443:13" pos:end="443:24"><name pos:start="443:13" pos:end="443:15">opn</name> <operator pos:start="443:17" pos:end="443:17">=</operator> <literal type="string" pos:start="443:19" pos:end="443:24">"srlv"</literal></expr>;</expr_stmt>

            <break pos:start="445:13" pos:end="445:18">break;</break>

        <case pos:start="447:9" pos:end="447:15">case <expr pos:start="447:14" pos:end="447:14"><literal type="number" pos:start="447:14" pos:end="447:14">1</literal></expr>:</case>

            <comment type="block" pos:start="449:13" pos:end="449:57">/* rotrv is decoded as srlv on non-R2 CPUs */</comment>

            <if_stmt pos:start="451:13" pos:end="505:13"><if pos:start="451:13" pos:end="493:13">if <condition pos:start="451:16" pos:end="451:47">(<expr pos:start="451:17" pos:end="451:46"><name pos:start="451:17" pos:end="451:31"><name pos:start="451:17" pos:end="451:19">env</name><operator pos:start="451:20" pos:end="451:21">-&gt;</operator><name pos:start="451:22" pos:end="451:31">insn_flags</name></name> <operator pos:start="451:33" pos:end="451:33">&amp;</operator> <name pos:start="451:35" pos:end="451:46">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="451:49" pos:end="493:13">{<block_content pos:start="453:17" pos:end="491:30">

                <decl_stmt pos:start="453:17" pos:end="453:41"><decl pos:start="453:17" pos:end="453:40"><type pos:start="453:17" pos:end="453:19"><name pos:start="453:17" pos:end="453:19">int</name></type> <name pos:start="453:21" pos:end="453:22">l1</name> <init pos:start="453:24" pos:end="453:40">= <expr pos:start="453:26" pos:end="453:40"><call pos:start="453:26" pos:end="453:40"><name pos:start="453:26" pos:end="453:38">gen_new_label</name><argument_list pos:start="453:39" pos:end="453:40">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="455:17" pos:end="455:41"><decl pos:start="455:17" pos:end="455:40"><type pos:start="455:17" pos:end="455:19"><name pos:start="455:17" pos:end="455:19">int</name></type> <name pos:start="455:21" pos:end="455:22">l2</name> <init pos:start="455:24" pos:end="455:40">= <expr pos:start="455:26" pos:end="455:40"><call pos:start="455:26" pos:end="455:40"><name pos:start="455:26" pos:end="455:38">gen_new_label</name><argument_list pos:start="455:39" pos:end="455:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="459:17" pos:end="459:46"><expr pos:start="459:17" pos:end="459:45"><call pos:start="459:17" pos:end="459:45"><name pos:start="459:17" pos:end="459:31">tcg_gen_andi_tl</name><argument_list pos:start="459:32" pos:end="459:45">(<argument pos:start="459:33" pos:end="459:34"><expr pos:start="459:33" pos:end="459:34"><name pos:start="459:33" pos:end="459:34">t0</name></expr></argument>, <argument pos:start="459:37" pos:end="459:38"><expr pos:start="459:37" pos:end="459:38"><name pos:start="459:37" pos:end="459:38">t0</name></expr></argument>, <argument pos:start="459:41" pos:end="459:44"><expr pos:start="459:41" pos:end="459:44"><literal type="number" pos:start="459:41" pos:end="459:44">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="461:17" pos:end="461:59"><expr pos:start="461:17" pos:end="461:58"><call pos:start="461:17" pos:end="461:58"><name pos:start="461:17" pos:end="461:34">tcg_gen_brcondi_tl</name><argument_list pos:start="461:35" pos:end="461:58">(<argument pos:start="461:36" pos:end="461:46"><expr pos:start="461:36" pos:end="461:46"><name pos:start="461:36" pos:end="461:46">TCG_COND_EQ</name></expr></argument>, <argument pos:start="461:49" pos:end="461:50"><expr pos:start="461:49" pos:end="461:50"><name pos:start="461:49" pos:end="461:50">t0</name></expr></argument>, <argument pos:start="461:53" pos:end="461:53"><expr pos:start="461:53" pos:end="461:53"><literal type="number" pos:start="461:53" pos:end="461:53">0</literal></expr></argument>, <argument pos:start="461:56" pos:end="461:57"><expr pos:start="461:56" pos:end="461:57"><name pos:start="461:56" pos:end="461:57">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="463:17" pos:end="483:17">{<block_content pos:start="465:21" pos:end="481:35">

                    <decl_stmt pos:start="465:21" pos:end="465:61"><decl pos:start="465:21" pos:end="465:60"><type pos:start="465:21" pos:end="465:24"><name pos:start="465:21" pos:end="465:24">TCGv</name></type> <name pos:start="465:26" pos:end="465:31">r_tmp1</name> <init pos:start="465:33" pos:end="465:60">= <expr pos:start="465:35" pos:end="465:60"><call pos:start="465:35" pos:end="465:60"><name pos:start="465:35" pos:end="465:46">tcg_temp_new</name><argument_list pos:start="465:47" pos:end="465:60">(<argument pos:start="465:48" pos:end="465:59"><expr pos:start="465:48" pos:end="465:59"><name pos:start="465:48" pos:end="465:59">TCG_TYPE_I32</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="467:21" pos:end="467:61"><decl pos:start="467:21" pos:end="467:60"><type pos:start="467:21" pos:end="467:24"><name pos:start="467:21" pos:end="467:24">TCGv</name></type> <name pos:start="467:26" pos:end="467:31">r_tmp2</name> <init pos:start="467:33" pos:end="467:60">= <expr pos:start="467:35" pos:end="467:60"><call pos:start="467:35" pos:end="467:60"><name pos:start="467:35" pos:end="467:46">tcg_temp_new</name><argument_list pos:start="467:47" pos:end="467:60">(<argument pos:start="467:48" pos:end="467:59"><expr pos:start="467:48" pos:end="467:59"><name pos:start="467:48" pos:end="467:59">TCG_TYPE_I32</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="471:21" pos:end="471:53"><expr pos:start="471:21" pos:end="471:52"><call pos:start="471:21" pos:end="471:52"><name pos:start="471:21" pos:end="471:40">tcg_gen_trunc_tl_i32</name><argument_list pos:start="471:41" pos:end="471:52">(<argument pos:start="471:42" pos:end="471:47"><expr pos:start="471:42" pos:end="471:47"><name pos:start="471:42" pos:end="471:47">r_tmp1</name></expr></argument>, <argument pos:start="471:50" pos:end="471:51"><expr pos:start="471:50" pos:end="471:51"><name pos:start="471:50" pos:end="471:51">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="473:21" pos:end="473:53"><expr pos:start="473:21" pos:end="473:52"><call pos:start="473:21" pos:end="473:52"><name pos:start="473:21" pos:end="473:40">tcg_gen_trunc_tl_i32</name><argument_list pos:start="473:41" pos:end="473:52">(<argument pos:start="473:42" pos:end="473:47"><expr pos:start="473:42" pos:end="473:47"><name pos:start="473:42" pos:end="473:47">r_tmp2</name></expr></argument>, <argument pos:start="473:50" pos:end="473:51"><expr pos:start="473:50" pos:end="473:51"><name pos:start="473:50" pos:end="473:51">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="475:21" pos:end="475:61"><expr pos:start="475:21" pos:end="475:60"><call pos:start="475:21" pos:end="475:60"><name pos:start="475:21" pos:end="475:36">tcg_gen_rotr_i32</name><argument_list pos:start="475:37" pos:end="475:60">(<argument pos:start="475:38" pos:end="475:43"><expr pos:start="475:38" pos:end="475:43"><name pos:start="475:38" pos:end="475:43">r_tmp1</name></expr></argument>, <argument pos:start="475:46" pos:end="475:51"><expr pos:start="475:46" pos:end="475:51"><name pos:start="475:46" pos:end="475:51">r_tmp1</name></expr></argument>, <argument pos:start="475:54" pos:end="475:59"><expr pos:start="475:54" pos:end="475:59"><name pos:start="475:54" pos:end="475:59">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="477:21" pos:end="477:42"><expr pos:start="477:21" pos:end="477:41"><call pos:start="477:21" pos:end="477:41"><name pos:start="477:21" pos:end="477:33">tcg_temp_free</name><argument_list pos:start="477:34" pos:end="477:41">(<argument pos:start="477:35" pos:end="477:40"><expr pos:start="477:35" pos:end="477:40"><name pos:start="477:35" pos:end="477:40">r_tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="479:21" pos:end="479:42"><expr pos:start="479:21" pos:end="479:41"><call pos:start="479:21" pos:end="479:41"><name pos:start="479:21" pos:end="479:33">tcg_temp_free</name><argument_list pos:start="479:34" pos:end="479:41">(<argument pos:start="479:35" pos:end="479:40"><expr pos:start="479:35" pos:end="479:40"><name pos:start="479:35" pos:end="479:40">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="481:21" pos:end="481:35"><expr pos:start="481:21" pos:end="481:34"><call pos:start="481:21" pos:end="481:34"><name pos:start="481:21" pos:end="481:30">tcg_gen_br</name><argument_list pos:start="481:31" pos:end="481:34">(<argument pos:start="481:32" pos:end="481:33"><expr pos:start="481:32" pos:end="481:33"><name pos:start="481:32" pos:end="481:33">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <expr_stmt pos:start="485:17" pos:end="485:34"><expr pos:start="485:17" pos:end="485:33"><call pos:start="485:17" pos:end="485:33"><name pos:start="485:17" pos:end="485:29">gen_set_label</name><argument_list pos:start="485:30" pos:end="485:33">(<argument pos:start="485:31" pos:end="485:32"><expr pos:start="485:31" pos:end="485:32"><name pos:start="485:31" pos:end="485:32">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="487:17" pos:end="487:39"><expr pos:start="487:17" pos:end="487:38"><call pos:start="487:17" pos:end="487:38"><name pos:start="487:17" pos:end="487:30">tcg_gen_mov_tl</name><argument_list pos:start="487:31" pos:end="487:38">(<argument pos:start="487:32" pos:end="487:33"><expr pos:start="487:32" pos:end="487:33"><name pos:start="487:32" pos:end="487:33">t0</name></expr></argument>, <argument pos:start="487:36" pos:end="487:37"><expr pos:start="487:36" pos:end="487:37"><name pos:start="487:36" pos:end="487:37">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="489:17" pos:end="489:34"><expr pos:start="489:17" pos:end="489:33"><call pos:start="489:17" pos:end="489:33"><name pos:start="489:17" pos:end="489:29">gen_set_label</name><argument_list pos:start="489:30" pos:end="489:33">(<argument pos:start="489:31" pos:end="489:32"><expr pos:start="489:31" pos:end="489:32"><name pos:start="489:31" pos:end="489:32">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="491:17" pos:end="491:30"><expr pos:start="491:17" pos:end="491:29"><name pos:start="491:17" pos:end="491:19">opn</name> <operator pos:start="491:21" pos:end="491:21">=</operator> <literal type="string" pos:start="491:23" pos:end="491:29">"rotrv"</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="493:15" pos:end="505:13">else <block pos:start="493:20" pos:end="505:13">{<block_content pos:start="495:17" pos:end="503:29">

                <expr_stmt pos:start="495:17" pos:end="495:42"><expr pos:start="495:17" pos:end="495:41"><call pos:start="495:17" pos:end="495:41"><name pos:start="495:17" pos:end="495:33">tcg_gen_ext32u_tl</name><argument_list pos:start="495:34" pos:end="495:41">(<argument pos:start="495:35" pos:end="495:36"><expr pos:start="495:35" pos:end="495:36"><name pos:start="495:35" pos:end="495:36">t1</name></expr></argument>, <argument pos:start="495:39" pos:end="495:40"><expr pos:start="495:39" pos:end="495:40"><name pos:start="495:39" pos:end="495:40">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="497:17" pos:end="497:46"><expr pos:start="497:17" pos:end="497:45"><call pos:start="497:17" pos:end="497:45"><name pos:start="497:17" pos:end="497:31">tcg_gen_andi_tl</name><argument_list pos:start="497:32" pos:end="497:45">(<argument pos:start="497:33" pos:end="497:34"><expr pos:start="497:33" pos:end="497:34"><name pos:start="497:33" pos:end="497:34">t0</name></expr></argument>, <argument pos:start="497:37" pos:end="497:38"><expr pos:start="497:37" pos:end="497:38"><name pos:start="497:37" pos:end="497:38">t0</name></expr></argument>, <argument pos:start="497:41" pos:end="497:44"><expr pos:start="497:41" pos:end="497:44"><literal type="number" pos:start="497:41" pos:end="497:44">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="499:17" pos:end="499:43"><expr pos:start="499:17" pos:end="499:42"><call pos:start="499:17" pos:end="499:42"><name pos:start="499:17" pos:end="499:30">tcg_gen_shr_tl</name><argument_list pos:start="499:31" pos:end="499:42">(<argument pos:start="499:32" pos:end="499:33"><expr pos:start="499:32" pos:end="499:33"><name pos:start="499:32" pos:end="499:33">t0</name></expr></argument>, <argument pos:start="499:36" pos:end="499:37"><expr pos:start="499:36" pos:end="499:37"><name pos:start="499:36" pos:end="499:37">t1</name></expr></argument>, <argument pos:start="499:40" pos:end="499:41"><expr pos:start="499:40" pos:end="499:41"><name pos:start="499:40" pos:end="499:41">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="501:17" pos:end="501:42"><expr pos:start="501:17" pos:end="501:41"><call pos:start="501:17" pos:end="501:41"><name pos:start="501:17" pos:end="501:33">tcg_gen_ext32s_tl</name><argument_list pos:start="501:34" pos:end="501:41">(<argument pos:start="501:35" pos:end="501:36"><expr pos:start="501:35" pos:end="501:36"><name pos:start="501:35" pos:end="501:36">t0</name></expr></argument>, <argument pos:start="501:39" pos:end="501:40"><expr pos:start="501:39" pos:end="501:40"><name pos:start="501:39" pos:end="501:40">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="503:17" pos:end="503:29"><expr pos:start="503:17" pos:end="503:28"><name pos:start="503:17" pos:end="503:19">opn</name> <operator pos:start="503:21" pos:end="503:21">=</operator> <literal type="string" pos:start="503:23" pos:end="503:28">"srlv"</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="507:13" pos:end="507:18">break;</break>

        <default pos:start="509:9" pos:end="509:16">default:</default>

            <expr_stmt pos:start="511:13" pos:end="511:44"><expr pos:start="511:13" pos:end="511:43"><call pos:start="511:13" pos:end="511:43"><name pos:start="511:13" pos:end="511:22">MIPS_INVAL</name><argument_list pos:start="511:23" pos:end="511:43">(<argument pos:start="511:24" pos:end="511:42"><expr pos:start="511:24" pos:end="511:42"><literal type="string" pos:start="511:24" pos:end="511:42">"invalid srlv flag"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="513:13" pos:end="513:45"><expr pos:start="513:13" pos:end="513:44"><call pos:start="513:13" pos:end="513:44"><name pos:start="513:13" pos:end="513:30">generate_exception</name><argument_list pos:start="513:31" pos:end="513:44">(<argument pos:start="513:32" pos:end="513:34"><expr pos:start="513:32" pos:end="513:34"><name pos:start="513:32" pos:end="513:34">ctx</name></expr></argument>, <argument pos:start="513:37" pos:end="513:43"><expr pos:start="513:37" pos:end="513:43"><name pos:start="513:37" pos:end="513:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="515:13" pos:end="515:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="519:9" pos:end="522:0">break;</break>

<cpp:if pos:start="521:1" pos:end="521:26">#<cpp:directive pos:start="521:2" pos:end="521:3">if</cpp:directive> <expr pos:start="521:5" pos:end="521:26"><call pos:start="521:5" pos:end="521:26"><name pos:start="521:5" pos:end="521:11">defined</name><argument_list pos:start="521:12" pos:end="521:26">(<argument pos:start="521:13" pos:end="521:25"><expr pos:start="521:13" pos:end="521:25"><name pos:start="521:13" pos:end="521:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="523:5" pos:end="523:19">case <expr pos:start="523:10" pos:end="523:18"><name pos:start="523:10" pos:end="523:18">OPC_DSLLV</name></expr>:</case>

        <expr_stmt pos:start="525:9" pos:end="525:38"><expr pos:start="525:9" pos:end="525:37"><call pos:start="525:9" pos:end="525:37"><name pos:start="525:9" pos:end="525:23">tcg_gen_andi_tl</name><argument_list pos:start="525:24" pos:end="525:37">(<argument pos:start="525:25" pos:end="525:26"><expr pos:start="525:25" pos:end="525:26"><name pos:start="525:25" pos:end="525:26">t0</name></expr></argument>, <argument pos:start="525:29" pos:end="525:30"><expr pos:start="525:29" pos:end="525:30"><name pos:start="525:29" pos:end="525:30">t0</name></expr></argument>, <argument pos:start="525:33" pos:end="525:36"><expr pos:start="525:33" pos:end="525:36"><literal type="number" pos:start="525:33" pos:end="525:36">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="527:9" pos:end="527:35"><expr pos:start="527:9" pos:end="527:34"><call pos:start="527:9" pos:end="527:34"><name pos:start="527:9" pos:end="527:22">tcg_gen_shl_tl</name><argument_list pos:start="527:23" pos:end="527:34">(<argument pos:start="527:24" pos:end="527:25"><expr pos:start="527:24" pos:end="527:25"><name pos:start="527:24" pos:end="527:25">t0</name></expr></argument>, <argument pos:start="527:28" pos:end="527:29"><expr pos:start="527:28" pos:end="527:29"><name pos:start="527:28" pos:end="527:29">t1</name></expr></argument>, <argument pos:start="527:32" pos:end="527:33"><expr pos:start="527:32" pos:end="527:33"><name pos:start="527:32" pos:end="527:33">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="529:9" pos:end="529:22"><expr pos:start="529:9" pos:end="529:21"><name pos:start="529:9" pos:end="529:11">opn</name> <operator pos:start="529:13" pos:end="529:13">=</operator> <literal type="string" pos:start="529:15" pos:end="529:21">"dsllv"</literal></expr>;</expr_stmt>

        <break pos:start="531:9" pos:end="531:14">break;</break>

    <case pos:start="533:5" pos:end="533:19">case <expr pos:start="533:10" pos:end="533:18"><name pos:start="533:10" pos:end="533:18">OPC_DSRAV</name></expr>:</case>

        <expr_stmt pos:start="535:9" pos:end="535:38"><expr pos:start="535:9" pos:end="535:37"><call pos:start="535:9" pos:end="535:37"><name pos:start="535:9" pos:end="535:23">tcg_gen_andi_tl</name><argument_list pos:start="535:24" pos:end="535:37">(<argument pos:start="535:25" pos:end="535:26"><expr pos:start="535:25" pos:end="535:26"><name pos:start="535:25" pos:end="535:26">t0</name></expr></argument>, <argument pos:start="535:29" pos:end="535:30"><expr pos:start="535:29" pos:end="535:30"><name pos:start="535:29" pos:end="535:30">t0</name></expr></argument>, <argument pos:start="535:33" pos:end="535:36"><expr pos:start="535:33" pos:end="535:36"><literal type="number" pos:start="535:33" pos:end="535:36">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="537:9" pos:end="537:35"><expr pos:start="537:9" pos:end="537:34"><call pos:start="537:9" pos:end="537:34"><name pos:start="537:9" pos:end="537:22">tcg_gen_sar_tl</name><argument_list pos:start="537:23" pos:end="537:34">(<argument pos:start="537:24" pos:end="537:25"><expr pos:start="537:24" pos:end="537:25"><name pos:start="537:24" pos:end="537:25">t0</name></expr></argument>, <argument pos:start="537:28" pos:end="537:29"><expr pos:start="537:28" pos:end="537:29"><name pos:start="537:28" pos:end="537:29">t1</name></expr></argument>, <argument pos:start="537:32" pos:end="537:33"><expr pos:start="537:32" pos:end="537:33"><name pos:start="537:32" pos:end="537:33">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="539:9" pos:end="539:22"><expr pos:start="539:9" pos:end="539:21"><name pos:start="539:9" pos:end="539:11">opn</name> <operator pos:start="539:13" pos:end="539:13">=</operator> <literal type="string" pos:start="539:15" pos:end="539:21">"dsrav"</literal></expr>;</expr_stmt>

        <break pos:start="541:9" pos:end="541:14">break;</break>

    <case pos:start="543:5" pos:end="543:19">case <expr pos:start="543:10" pos:end="543:18"><name pos:start="543:10" pos:end="543:18">OPC_DSRLV</name></expr>:</case>

        <switch pos:start="545:9" pos:end="609:9">switch <condition pos:start="545:16" pos:end="545:42">(<expr pos:start="545:17" pos:end="545:41"><operator pos:start="545:17" pos:end="545:17">(</operator><name pos:start="545:18" pos:end="545:28"><name pos:start="545:18" pos:end="545:20">ctx</name><operator pos:start="545:21" pos:end="545:22">-&gt;</operator><name pos:start="545:23" pos:end="545:28">opcode</name></name> <operator pos:start="545:30" pos:end="545:31">&gt;&gt;</operator> <literal type="number" pos:start="545:33" pos:end="545:33">6</literal><operator pos:start="545:34" pos:end="545:34">)</operator> <operator pos:start="545:36" pos:end="545:36">&amp;</operator> <literal type="number" pos:start="545:38" pos:end="545:41">0x1f</literal></expr>)</condition> <block pos:start="545:44" pos:end="609:9">{<block_content pos:start="547:9" pos:end="607:18">

        <case pos:start="547:9" pos:end="547:15">case <expr pos:start="547:14" pos:end="547:14"><literal type="number" pos:start="547:14" pos:end="547:14">0</literal></expr>:</case>

            <expr_stmt pos:start="549:13" pos:end="549:42"><expr pos:start="549:13" pos:end="549:41"><call pos:start="549:13" pos:end="549:41"><name pos:start="549:13" pos:end="549:27">tcg_gen_andi_tl</name><argument_list pos:start="549:28" pos:end="549:41">(<argument pos:start="549:29" pos:end="549:30"><expr pos:start="549:29" pos:end="549:30"><name pos:start="549:29" pos:end="549:30">t0</name></expr></argument>, <argument pos:start="549:33" pos:end="549:34"><expr pos:start="549:33" pos:end="549:34"><name pos:start="549:33" pos:end="549:34">t0</name></expr></argument>, <argument pos:start="549:37" pos:end="549:40"><expr pos:start="549:37" pos:end="549:40"><literal type="number" pos:start="549:37" pos:end="549:40">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="551:13" pos:end="551:39"><expr pos:start="551:13" pos:end="551:38"><call pos:start="551:13" pos:end="551:38"><name pos:start="551:13" pos:end="551:26">tcg_gen_shr_tl</name><argument_list pos:start="551:27" pos:end="551:38">(<argument pos:start="551:28" pos:end="551:29"><expr pos:start="551:28" pos:end="551:29"><name pos:start="551:28" pos:end="551:29">t0</name></expr></argument>, <argument pos:start="551:32" pos:end="551:33"><expr pos:start="551:32" pos:end="551:33"><name pos:start="551:32" pos:end="551:33">t1</name></expr></argument>, <argument pos:start="551:36" pos:end="551:37"><expr pos:start="551:36" pos:end="551:37"><name pos:start="551:36" pos:end="551:37">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="553:13" pos:end="553:26"><expr pos:start="553:13" pos:end="553:25"><name pos:start="553:13" pos:end="553:15">opn</name> <operator pos:start="553:17" pos:end="553:17">=</operator> <literal type="string" pos:start="553:19" pos:end="553:25">"dsrlv"</literal></expr>;</expr_stmt>

            <break pos:start="555:13" pos:end="555:18">break;</break>

        <case pos:start="557:9" pos:end="557:15">case <expr pos:start="557:14" pos:end="557:14"><literal type="number" pos:start="557:14" pos:end="557:14">1</literal></expr>:</case>

            <comment type="block" pos:start="559:13" pos:end="559:59">/* drotrv is decoded as dsrlv on non-R2 CPUs */</comment>

            <if_stmt pos:start="561:13" pos:end="597:13"><if pos:start="561:13" pos:end="589:13">if <condition pos:start="561:16" pos:end="561:47">(<expr pos:start="561:17" pos:end="561:46"><name pos:start="561:17" pos:end="561:31"><name pos:start="561:17" pos:end="561:19">env</name><operator pos:start="561:20" pos:end="561:21">-&gt;</operator><name pos:start="561:22" pos:end="561:31">insn_flags</name></name> <operator pos:start="561:33" pos:end="561:33">&amp;</operator> <name pos:start="561:35" pos:end="561:46">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="561:49" pos:end="589:13">{<block_content pos:start="563:17" pos:end="587:31">

                <decl_stmt pos:start="563:17" pos:end="563:41"><decl pos:start="563:17" pos:end="563:40"><type pos:start="563:17" pos:end="563:19"><name pos:start="563:17" pos:end="563:19">int</name></type> <name pos:start="563:21" pos:end="563:22">l1</name> <init pos:start="563:24" pos:end="563:40">= <expr pos:start="563:26" pos:end="563:40"><call pos:start="563:26" pos:end="563:40"><name pos:start="563:26" pos:end="563:38">gen_new_label</name><argument_list pos:start="563:39" pos:end="563:40">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="565:17" pos:end="565:41"><decl pos:start="565:17" pos:end="565:40"><type pos:start="565:17" pos:end="565:19"><name pos:start="565:17" pos:end="565:19">int</name></type> <name pos:start="565:21" pos:end="565:22">l2</name> <init pos:start="565:24" pos:end="565:40">= <expr pos:start="565:26" pos:end="565:40"><call pos:start="565:26" pos:end="565:40"><name pos:start="565:26" pos:end="565:38">gen_new_label</name><argument_list pos:start="565:39" pos:end="565:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="569:17" pos:end="569:46"><expr pos:start="569:17" pos:end="569:45"><call pos:start="569:17" pos:end="569:45"><name pos:start="569:17" pos:end="569:31">tcg_gen_andi_tl</name><argument_list pos:start="569:32" pos:end="569:45">(<argument pos:start="569:33" pos:end="569:34"><expr pos:start="569:33" pos:end="569:34"><name pos:start="569:33" pos:end="569:34">t0</name></expr></argument>, <argument pos:start="569:37" pos:end="569:38"><expr pos:start="569:37" pos:end="569:38"><name pos:start="569:37" pos:end="569:38">t0</name></expr></argument>, <argument pos:start="569:41" pos:end="569:44"><expr pos:start="569:41" pos:end="569:44"><literal type="number" pos:start="569:41" pos:end="569:44">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="571:17" pos:end="571:59"><expr pos:start="571:17" pos:end="571:58"><call pos:start="571:17" pos:end="571:58"><name pos:start="571:17" pos:end="571:34">tcg_gen_brcondi_tl</name><argument_list pos:start="571:35" pos:end="571:58">(<argument pos:start="571:36" pos:end="571:46"><expr pos:start="571:36" pos:end="571:46"><name pos:start="571:36" pos:end="571:46">TCG_COND_EQ</name></expr></argument>, <argument pos:start="571:49" pos:end="571:50"><expr pos:start="571:49" pos:end="571:50"><name pos:start="571:49" pos:end="571:50">t0</name></expr></argument>, <argument pos:start="571:53" pos:end="571:53"><expr pos:start="571:53" pos:end="571:53"><literal type="number" pos:start="571:53" pos:end="571:53">0</literal></expr></argument>, <argument pos:start="571:56" pos:end="571:57"><expr pos:start="571:56" pos:end="571:57"><name pos:start="571:56" pos:end="571:57">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="573:17" pos:end="579:17">{<block_content pos:start="575:21" pos:end="577:35">

                    <expr_stmt pos:start="575:21" pos:end="575:48"><expr pos:start="575:21" pos:end="575:47"><call pos:start="575:21" pos:end="575:47"><name pos:start="575:21" pos:end="575:35">tcg_gen_rotr_tl</name><argument_list pos:start="575:36" pos:end="575:47">(<argument pos:start="575:37" pos:end="575:38"><expr pos:start="575:37" pos:end="575:38"><name pos:start="575:37" pos:end="575:38">t0</name></expr></argument>, <argument pos:start="575:41" pos:end="575:42"><expr pos:start="575:41" pos:end="575:42"><name pos:start="575:41" pos:end="575:42">t1</name></expr></argument>, <argument pos:start="575:45" pos:end="575:46"><expr pos:start="575:45" pos:end="575:46"><name pos:start="575:45" pos:end="575:46">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="577:21" pos:end="577:35"><expr pos:start="577:21" pos:end="577:34"><call pos:start="577:21" pos:end="577:34"><name pos:start="577:21" pos:end="577:30">tcg_gen_br</name><argument_list pos:start="577:31" pos:end="577:34">(<argument pos:start="577:32" pos:end="577:33"><expr pos:start="577:32" pos:end="577:33"><name pos:start="577:32" pos:end="577:33">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <expr_stmt pos:start="581:17" pos:end="581:34"><expr pos:start="581:17" pos:end="581:33"><call pos:start="581:17" pos:end="581:33"><name pos:start="581:17" pos:end="581:29">gen_set_label</name><argument_list pos:start="581:30" pos:end="581:33">(<argument pos:start="581:31" pos:end="581:32"><expr pos:start="581:31" pos:end="581:32"><name pos:start="581:31" pos:end="581:32">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="583:17" pos:end="583:39"><expr pos:start="583:17" pos:end="583:38"><call pos:start="583:17" pos:end="583:38"><name pos:start="583:17" pos:end="583:30">tcg_gen_mov_tl</name><argument_list pos:start="583:31" pos:end="583:38">(<argument pos:start="583:32" pos:end="583:33"><expr pos:start="583:32" pos:end="583:33"><name pos:start="583:32" pos:end="583:33">t0</name></expr></argument>, <argument pos:start="583:36" pos:end="583:37"><expr pos:start="583:36" pos:end="583:37"><name pos:start="583:36" pos:end="583:37">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="585:17" pos:end="585:34"><expr pos:start="585:17" pos:end="585:33"><call pos:start="585:17" pos:end="585:33"><name pos:start="585:17" pos:end="585:29">gen_set_label</name><argument_list pos:start="585:30" pos:end="585:33">(<argument pos:start="585:31" pos:end="585:32"><expr pos:start="585:31" pos:end="585:32"><name pos:start="585:31" pos:end="585:32">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="587:17" pos:end="587:31"><expr pos:start="587:17" pos:end="587:30"><name pos:start="587:17" pos:end="587:19">opn</name> <operator pos:start="587:21" pos:end="587:21">=</operator> <literal type="string" pos:start="587:23" pos:end="587:30">"drotrv"</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="589:15" pos:end="597:13">else <block pos:start="589:20" pos:end="597:13">{<block_content pos:start="591:17" pos:end="595:30">

                <expr_stmt pos:start="591:17" pos:end="591:46"><expr pos:start="591:17" pos:end="591:45"><call pos:start="591:17" pos:end="591:45"><name pos:start="591:17" pos:end="591:31">tcg_gen_andi_tl</name><argument_list pos:start="591:32" pos:end="591:45">(<argument pos:start="591:33" pos:end="591:34"><expr pos:start="591:33" pos:end="591:34"><name pos:start="591:33" pos:end="591:34">t0</name></expr></argument>, <argument pos:start="591:37" pos:end="591:38"><expr pos:start="591:37" pos:end="591:38"><name pos:start="591:37" pos:end="591:38">t0</name></expr></argument>, <argument pos:start="591:41" pos:end="591:44"><expr pos:start="591:41" pos:end="591:44"><literal type="number" pos:start="591:41" pos:end="591:44">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="593:17" pos:end="593:43"><expr pos:start="593:17" pos:end="593:42"><call pos:start="593:17" pos:end="593:42"><name pos:start="593:17" pos:end="593:30">tcg_gen_shr_tl</name><argument_list pos:start="593:31" pos:end="593:42">(<argument pos:start="593:32" pos:end="593:33"><expr pos:start="593:32" pos:end="593:33"><name pos:start="593:32" pos:end="593:33">t0</name></expr></argument>, <argument pos:start="593:36" pos:end="593:37"><expr pos:start="593:36" pos:end="593:37"><name pos:start="593:36" pos:end="593:37">t1</name></expr></argument>, <argument pos:start="593:40" pos:end="593:41"><expr pos:start="593:40" pos:end="593:41"><name pos:start="593:40" pos:end="593:41">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="595:17" pos:end="595:30"><expr pos:start="595:17" pos:end="595:29"><name pos:start="595:17" pos:end="595:19">opn</name> <operator pos:start="595:21" pos:end="595:21">=</operator> <literal type="string" pos:start="595:23" pos:end="595:29">"dsrlv"</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="599:13" pos:end="599:18">break;</break>

        <default pos:start="601:9" pos:end="601:16">default:</default>

            <expr_stmt pos:start="603:13" pos:end="603:45"><expr pos:start="603:13" pos:end="603:44"><call pos:start="603:13" pos:end="603:44"><name pos:start="603:13" pos:end="603:22">MIPS_INVAL</name><argument_list pos:start="603:23" pos:end="603:44">(<argument pos:start="603:24" pos:end="603:43"><expr pos:start="603:24" pos:end="603:43"><literal type="string" pos:start="603:24" pos:end="603:43">"invalid dsrlv flag"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="605:13" pos:end="605:45"><expr pos:start="605:13" pos:end="605:44"><call pos:start="605:13" pos:end="605:44"><name pos:start="605:13" pos:end="605:30">generate_exception</name><argument_list pos:start="605:31" pos:end="605:44">(<argument pos:start="605:32" pos:end="605:34"><expr pos:start="605:32" pos:end="605:34"><name pos:start="605:32" pos:end="605:34">ctx</name></expr></argument>, <argument pos:start="605:37" pos:end="605:43"><expr pos:start="605:37" pos:end="605:43"><name pos:start="605:37" pos:end="605:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="607:13" pos:end="607:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="611:9" pos:end="614:0">break;</break>

<cpp:endif pos:start="613:1" pos:end="613:6">#<cpp:directive pos:start="613:2" pos:end="613:6">endif</cpp:directive></cpp:endif>

    <default pos:start="615:5" pos:end="615:12">default:</default>

        <expr_stmt pos:start="617:9" pos:end="617:24"><expr pos:start="617:9" pos:end="617:23"><call pos:start="617:9" pos:end="617:23"><name pos:start="617:9" pos:end="617:18">MIPS_INVAL</name><argument_list pos:start="617:19" pos:end="617:23">(<argument pos:start="617:20" pos:end="617:22"><expr pos:start="617:20" pos:end="617:22"><name pos:start="617:20" pos:end="617:22">opn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="619:9" pos:end="619:41"><expr pos:start="619:9" pos:end="619:40"><call pos:start="619:9" pos:end="619:40"><name pos:start="619:9" pos:end="619:26">generate_exception</name><argument_list pos:start="619:27" pos:end="619:40">(<argument pos:start="619:28" pos:end="619:30"><expr pos:start="619:28" pos:end="619:30"><name pos:start="619:28" pos:end="619:30">ctx</name></expr></argument>, <argument pos:start="619:33" pos:end="619:39"><expr pos:start="619:33" pos:end="619:39"><name pos:start="619:33" pos:end="619:39">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="621:9" pos:end="621:17">goto <name pos:start="621:14" pos:end="621:16">out</name>;</goto>

    </block_content>}</block></switch>

    <expr_stmt pos:start="625:5" pos:end="625:26"><expr pos:start="625:5" pos:end="625:25"><call pos:start="625:5" pos:end="625:25"><name pos:start="625:5" pos:end="625:17">gen_store_gpr</name><argument_list pos:start="625:18" pos:end="625:25">(<argument pos:start="625:19" pos:end="625:20"><expr pos:start="625:19" pos:end="625:20"><name pos:start="625:19" pos:end="625:20">t0</name></expr></argument>, <argument pos:start="625:23" pos:end="625:24"><expr pos:start="625:23" pos:end="625:24"><name pos:start="625:23" pos:end="625:24">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

 <label pos:start="627:2" pos:end="627:7"><name pos:start="627:2" pos:end="627:6">print</name>:</label>

    <expr_stmt pos:start="629:5" pos:end="629:79"><expr pos:start="629:5" pos:end="629:78"><call pos:start="629:5" pos:end="629:78"><name pos:start="629:5" pos:end="629:14">MIPS_DEBUG</name><argument_list pos:start="629:15" pos:end="629:78">(<argument pos:start="629:16" pos:end="629:30"><expr pos:start="629:16" pos:end="629:30"><literal type="string" pos:start="629:16" pos:end="629:30">"%s %s, %s, %s"</literal></expr></argument>, <argument pos:start="629:33" pos:end="629:35"><expr pos:start="629:33" pos:end="629:35"><name pos:start="629:33" pos:end="629:35">opn</name></expr></argument>, <argument pos:start="629:38" pos:end="629:49"><expr pos:start="629:38" pos:end="629:49"><name pos:start="629:38" pos:end="629:49"><name pos:start="629:38" pos:end="629:45">regnames</name><index pos:start="629:46" pos:end="629:49">[<expr pos:start="629:47" pos:end="629:48"><name pos:start="629:47" pos:end="629:48">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="629:52" pos:end="629:63"><expr pos:start="629:52" pos:end="629:63"><name pos:start="629:52" pos:end="629:63"><name pos:start="629:52" pos:end="629:59">regnames</name><index pos:start="629:60" pos:end="629:63">[<expr pos:start="629:61" pos:end="629:62"><name pos:start="629:61" pos:end="629:62">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="629:66" pos:end="629:77"><expr pos:start="629:66" pos:end="629:77"><name pos:start="629:66" pos:end="629:77"><name pos:start="629:66" pos:end="629:73">regnames</name><index pos:start="629:74" pos:end="629:77">[<expr pos:start="629:75" pos:end="629:76"><name pos:start="629:75" pos:end="629:76">rt</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

 <label pos:start="631:2" pos:end="631:5"><name pos:start="631:2" pos:end="631:4">out</name>:</label>

    <expr_stmt pos:start="633:5" pos:end="633:22"><expr pos:start="633:5" pos:end="633:21"><call pos:start="633:5" pos:end="633:21"><name pos:start="633:5" pos:end="633:17">tcg_temp_free</name><argument_list pos:start="633:18" pos:end="633:21">(<argument pos:start="633:19" pos:end="633:20"><expr pos:start="633:19" pos:end="633:20"><name pos:start="633:19" pos:end="633:20">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="635:5" pos:end="635:22"><expr pos:start="635:5" pos:end="635:21"><call pos:start="635:5" pos:end="635:21"><name pos:start="635:5" pos:end="635:17">tcg_temp_free</name><argument_list pos:start="635:18" pos:end="635:21">(<argument pos:start="635:19" pos:end="635:20"><expr pos:start="635:19" pos:end="635:20"><name pos:start="635:19" pos:end="635:20">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
