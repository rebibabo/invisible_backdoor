<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21978.c" pos:tabs="8"><function pos:start="1:1" pos:end="148:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">v9fs_read</name><parameter_list pos:start="1:22" pos:end="1:35">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:28"><name pos:start="1:23" pos:end="1:26">void</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:34">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="148:1">{<block_content pos:start="5:5" pos:end="146:30">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:15">fid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">ssize_t</name></type> <name pos:start="9:13" pos:end="9:15">err</name> <init pos:start="9:17" pos:end="9:19">= <expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int32_t</name></type> <name pos:start="11:13" pos:end="11:17">count</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">size_t</name></type> <name pos:start="13:12" pos:end="13:17">offset</name> <init pos:start="13:19" pos:end="13:21">= <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int32_t</name></type> <name pos:start="15:13" pos:end="15:21">max_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:16">V9fsFidState</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">V9fsPDU</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:16">pdu</name> <init pos:start="19:18" pos:end="19:25">= <expr pos:start="19:20" pos:end="19:25"><name pos:start="19:20" pos:end="19:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:13">V9fsState</name> <modifier pos:start="21:15" pos:end="21:15">*</modifier></type><name pos:start="21:16" pos:end="21:16">s</name> <init pos:start="21:18" pos:end="21:25">= <expr pos:start="21:20" pos:end="21:25"><name pos:start="21:20" pos:end="21:25"><name pos:start="21:20" pos:end="21:22">pdu</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:25">s</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:62"><expr pos:start="25:5" pos:end="25:61"><call pos:start="25:5" pos:end="25:61"><name pos:start="25:5" pos:end="25:17">pdu_unmarshal</name><argument_list pos:start="25:18" pos:end="25:61">(<argument pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:21">pdu</name></expr></argument>, <argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">offset</name></expr></argument>, <argument pos:start="25:32" pos:end="25:36"><expr pos:start="25:32" pos:end="25:36"><literal type="string" pos:start="25:32" pos:end="25:36">"dqd"</literal></expr></argument>, <argument pos:start="25:39" pos:end="25:42"><expr pos:start="25:39" pos:end="25:42"><operator pos:start="25:39" pos:end="25:39">&amp;</operator><name pos:start="25:40" pos:end="25:42">fid</name></expr></argument>, <argument pos:start="25:45" pos:end="25:48"><expr pos:start="25:45" pos:end="25:48"><operator pos:start="25:45" pos:end="25:45">&amp;</operator><name pos:start="25:46" pos:end="25:48">off</name></expr></argument>, <argument pos:start="25:51" pos:end="25:60"><expr pos:start="25:51" pos:end="25:60"><operator pos:start="25:51" pos:end="25:51">&amp;</operator><name pos:start="25:52" pos:end="25:60">max_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="30:5" pos:end="30:29"><expr pos:start="30:5" pos:end="30:28"><name pos:start="30:5" pos:end="30:8">fidp</name> <operator pos:start="30:10" pos:end="30:10">=</operator> <call pos:start="30:12" pos:end="30:28"><name pos:start="30:12" pos:end="30:18">get_fid</name><argument_list pos:start="30:19" pos:end="30:28">(<argument pos:start="30:20" pos:end="30:22"><expr pos:start="30:20" pos:end="30:22"><name pos:start="30:20" pos:end="30:22">pdu</name></expr></argument>, <argument pos:start="30:25" pos:end="30:27"><expr pos:start="30:25" pos:end="30:27"><name pos:start="30:25" pos:end="30:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="32:5" pos:end="38:5"><if pos:start="32:5" pos:end="38:5">if <condition pos:start="32:8" pos:end="32:21">(<expr pos:start="32:9" pos:end="32:20"><name pos:start="32:9" pos:end="32:12">fidp</name> <operator pos:start="32:14" pos:end="32:15">==</operator> <name pos:start="32:17" pos:end="32:20">NULL</name></expr>)</condition> <block pos:start="32:23" pos:end="38:5">{<block_content pos:start="34:9" pos:end="36:23">

        <expr_stmt pos:start="34:9" pos:end="34:22"><expr pos:start="34:9" pos:end="34:21"><name pos:start="34:9" pos:end="34:11">err</name> <operator pos:start="34:13" pos:end="34:13">=</operator> <operator pos:start="34:15" pos:end="34:15">-</operator><name pos:start="34:16" pos:end="34:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="36:9" pos:end="36:23">goto <name pos:start="36:14" pos:end="36:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="40:5" pos:end="136:5"><if pos:start="40:5" pos:end="66:5">if <condition pos:start="40:8" pos:end="40:37">(<expr pos:start="40:9" pos:end="40:36"><name pos:start="40:9" pos:end="40:22"><name pos:start="40:9" pos:end="40:12">fidp</name><operator pos:start="40:13" pos:end="40:14">-&gt;</operator><name pos:start="40:15" pos:end="40:22">fid_type</name></name> <operator pos:start="40:24" pos:end="40:25">==</operator> <name pos:start="40:27" pos:end="40:36">P9_FID_DIR</name></expr>)</condition> <block pos:start="40:39" pos:end="66:5">{<block_content pos:start="44:9" pos:end="64:21">



        <if_stmt pos:start="44:9" pos:end="48:9"><if pos:start="44:9" pos:end="48:9">if <condition pos:start="44:12" pos:end="44:21">(<expr pos:start="44:13" pos:end="44:20"><name pos:start="44:13" pos:end="44:15">off</name> <operator pos:start="44:17" pos:end="44:18">==</operator> <literal type="number" pos:start="44:20" pos:end="44:20">0</literal></expr>)</condition> <block pos:start="44:23" pos:end="48:9">{<block_content pos:start="46:13" pos:end="46:41">

            <expr_stmt pos:start="46:13" pos:end="46:41"><expr pos:start="46:13" pos:end="46:40"><call pos:start="46:13" pos:end="46:40"><name pos:start="46:13" pos:end="46:29">v9fs_co_rewinddir</name><argument_list pos:start="46:30" pos:end="46:40">(<argument pos:start="46:31" pos:end="46:33"><expr pos:start="46:31" pos:end="46:33"><name pos:start="46:31" pos:end="46:33">pdu</name></expr></argument>, <argument pos:start="46:36" pos:end="46:39"><expr pos:start="46:36" pos:end="46:39"><name pos:start="46:36" pos:end="46:39">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="50:9" pos:end="50:64"><expr pos:start="50:9" pos:end="50:63"><name pos:start="50:9" pos:end="50:13">count</name> <operator pos:start="50:15" pos:end="50:15">=</operator> <call pos:start="50:17" pos:end="50:63"><name pos:start="50:17" pos:end="50:41">v9fs_do_readdir_with_stat</name><argument_list pos:start="50:42" pos:end="50:63">(<argument pos:start="50:43" pos:end="50:45"><expr pos:start="50:43" pos:end="50:45"><name pos:start="50:43" pos:end="50:45">pdu</name></expr></argument>, <argument pos:start="50:48" pos:end="50:51"><expr pos:start="50:48" pos:end="50:51"><name pos:start="50:48" pos:end="50:51">fidp</name></expr></argument>, <argument pos:start="50:54" pos:end="50:62"><expr pos:start="50:54" pos:end="50:62"><name pos:start="50:54" pos:end="50:62">max_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="52:9" pos:end="58:9"><if pos:start="52:9" pos:end="58:9">if <condition pos:start="52:12" pos:end="52:22">(<expr pos:start="52:13" pos:end="52:21"><name pos:start="52:13" pos:end="52:17">count</name> <operator pos:start="52:19" pos:end="52:19">&lt;</operator> <literal type="number" pos:start="52:21" pos:end="52:21">0</literal></expr>)</condition> <block pos:start="52:24" pos:end="58:9">{<block_content pos:start="54:13" pos:end="56:21">

            <expr_stmt pos:start="54:13" pos:end="54:24"><expr pos:start="54:13" pos:end="54:23"><name pos:start="54:13" pos:end="54:15">err</name> <operator pos:start="54:17" pos:end="54:17">=</operator> <name pos:start="54:19" pos:end="54:23">count</name></expr>;</expr_stmt>

            <goto pos:start="56:13" pos:end="56:21">goto <name pos:start="56:18" pos:end="56:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="60:9" pos:end="60:21"><expr pos:start="60:9" pos:end="60:20"><name pos:start="60:9" pos:end="60:11">err</name> <operator pos:start="60:13" pos:end="60:13">=</operator> <name pos:start="60:15" pos:end="60:20">offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="62:9" pos:end="62:52"><expr pos:start="62:9" pos:end="62:51"><name pos:start="62:9" pos:end="62:11">err</name> <operator pos:start="62:13" pos:end="62:14">+=</operator> <call pos:start="62:16" pos:end="62:51"><name pos:start="62:16" pos:end="62:26">pdu_marshal</name><argument_list pos:start="62:27" pos:end="62:51">(<argument pos:start="62:28" pos:end="62:30"><expr pos:start="62:28" pos:end="62:30"><name pos:start="62:28" pos:end="62:30">pdu</name></expr></argument>, <argument pos:start="62:33" pos:end="62:38"><expr pos:start="62:33" pos:end="62:38"><name pos:start="62:33" pos:end="62:38">offset</name></expr></argument>, <argument pos:start="62:41" pos:end="62:43"><expr pos:start="62:41" pos:end="62:43"><literal type="string" pos:start="62:41" pos:end="62:43">"d"</literal></expr></argument>, <argument pos:start="62:46" pos:end="62:50"><expr pos:start="62:46" pos:end="62:50"><name pos:start="62:46" pos:end="62:50">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="64:9" pos:end="64:21"><expr pos:start="64:9" pos:end="64:20"><name pos:start="64:9" pos:end="64:11">err</name> <operator pos:start="64:13" pos:end="64:14">+=</operator> <name pos:start="64:16" pos:end="64:20">count</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="66:7" pos:end="128:5">else if <condition pos:start="66:15" pos:end="66:45">(<expr pos:start="66:16" pos:end="66:44"><name pos:start="66:16" pos:end="66:29"><name pos:start="66:16" pos:end="66:19">fidp</name><operator pos:start="66:20" pos:end="66:21">-&gt;</operator><name pos:start="66:22" pos:end="66:29">fid_type</name></name> <operator pos:start="66:31" pos:end="66:32">==</operator> <name pos:start="66:34" pos:end="66:44">P9_FID_FILE</name></expr>)</condition> <block pos:start="66:47" pos:end="128:5">{<block_content pos:start="68:9" pos:end="126:21">

        <decl_stmt pos:start="68:9" pos:end="68:20"><decl pos:start="68:9" pos:end="68:19"><type pos:start="68:9" pos:end="68:15"><name pos:start="68:9" pos:end="68:15">int32_t</name></type> <name pos:start="68:17" pos:end="68:19">cnt</name></decl>;</decl_stmt>

        <decl_stmt pos:start="70:9" pos:end="70:20"><decl pos:start="70:9" pos:end="70:19"><type pos:start="70:9" pos:end="70:15"><name pos:start="70:9" pos:end="70:15">int32_t</name></type> <name pos:start="70:17" pos:end="70:19">len</name></decl>;</decl_stmt>

        <decl_stmt pos:start="72:9" pos:end="72:25"><decl pos:start="72:9" pos:end="72:24"><type pos:start="72:9" pos:end="72:22"><name pos:start="72:9" pos:end="72:20"><name pos:start="72:9" pos:end="72:14">struct</name> <name pos:start="72:16" pos:end="72:20">iovec</name></name> <modifier pos:start="72:22" pos:end="72:22">*</modifier></type><name pos:start="72:23" pos:end="72:24">sg</name></decl>;</decl_stmt>

        <decl_stmt pos:start="74:9" pos:end="74:30"><decl pos:start="74:9" pos:end="74:29"><type pos:start="74:9" pos:end="74:20"><name pos:start="74:9" pos:end="74:20"><name pos:start="74:9" pos:end="74:14">struct</name> <name pos:start="74:16" pos:end="74:20">iovec</name></name></type> <name pos:start="74:22" pos:end="74:29"><name pos:start="74:22" pos:end="74:24">iov</name><index pos:start="74:25" pos:end="74:29">[<expr pos:start="74:26" pos:end="74:28"><literal type="number" pos:start="74:26" pos:end="74:28">128</literal></expr>]</index></name></decl>;</decl_stmt> <comment type="block" pos:start="74:32" pos:end="74:57">/* FIXME: bad, bad, bad */</comment>



        <expr_stmt pos:start="78:9" pos:end="78:17"><expr pos:start="78:9" pos:end="78:16"><name pos:start="78:9" pos:end="78:10">sg</name> <operator pos:start="78:12" pos:end="78:12">=</operator> <name pos:start="78:14" pos:end="78:16">iov</name></expr>;</expr_stmt>

        <expr_stmt pos:start="80:9" pos:end="80:52"><expr pos:start="80:9" pos:end="80:51"><call pos:start="80:9" pos:end="80:51"><name pos:start="80:9" pos:end="80:19">pdu_marshal</name><argument_list pos:start="80:20" pos:end="80:51">(<argument pos:start="80:21" pos:end="80:23"><expr pos:start="80:21" pos:end="80:23"><name pos:start="80:21" pos:end="80:23">pdu</name></expr></argument>, <argument pos:start="80:26" pos:end="80:35"><expr pos:start="80:26" pos:end="80:35"><name pos:start="80:26" pos:end="80:31">offset</name> <operator pos:start="80:33" pos:end="80:33">+</operator> <literal type="number" pos:start="80:35" pos:end="80:35">4</literal></expr></argument>, <argument pos:start="80:38" pos:end="80:40"><expr pos:start="80:38" pos:end="80:40"><literal type="string" pos:start="80:38" pos:end="80:40">"v"</literal></expr></argument>, <argument pos:start="80:43" pos:end="80:44"><expr pos:start="80:43" pos:end="80:44"><name pos:start="80:43" pos:end="80:44">sg</name></expr></argument>, <argument pos:start="80:47" pos:end="80:50"><expr pos:start="80:47" pos:end="80:50"><operator pos:start="80:47" pos:end="80:47">&amp;</operator><name pos:start="80:48" pos:end="80:50">cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="82:9" pos:end="82:41"><expr pos:start="82:9" pos:end="82:40"><name pos:start="82:9" pos:end="82:10">sg</name> <operator pos:start="82:12" pos:end="82:12">=</operator> <call pos:start="82:14" pos:end="82:40"><name pos:start="82:14" pos:end="82:19">cap_sg</name><argument_list pos:start="82:20" pos:end="82:40">(<argument pos:start="82:21" pos:end="82:22"><expr pos:start="82:21" pos:end="82:22"><name pos:start="82:21" pos:end="82:22">sg</name></expr></argument>, <argument pos:start="82:25" pos:end="82:33"><expr pos:start="82:25" pos:end="82:33"><name pos:start="82:25" pos:end="82:33">max_count</name></expr></argument>, <argument pos:start="82:36" pos:end="82:39"><expr pos:start="82:36" pos:end="82:39"><operator pos:start="82:36" pos:end="82:36">&amp;</operator><name pos:start="82:37" pos:end="82:39">cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <do pos:start="84:9" pos:end="120:47">do <block pos:start="84:12" pos:end="120:9">{<block_content pos:start="86:13" pos:end="118:42">

            <if_stmt pos:start="86:13" pos:end="90:13"><if pos:start="86:13" pos:end="90:13">if <condition pos:start="86:16" pos:end="86:18">(<expr pos:start="86:17" pos:end="86:17"><literal type="number" pos:start="86:17" pos:end="86:17">0</literal></expr>)</condition> <block pos:start="86:20" pos:end="90:13">{<block_content pos:start="88:17" pos:end="88:34">

                <expr_stmt pos:start="88:17" pos:end="88:34"><expr pos:start="88:17" pos:end="88:33"><call pos:start="88:17" pos:end="88:33"><name pos:start="88:17" pos:end="88:24">print_sg</name><argument_list pos:start="88:25" pos:end="88:33">(<argument pos:start="88:26" pos:end="88:27"><expr pos:start="88:26" pos:end="88:27"><name pos:start="88:26" pos:end="88:27">sg</name></expr></argument>, <argument pos:start="88:30" pos:end="88:32"><expr pos:start="88:30" pos:end="88:32"><name pos:start="88:30" pos:end="88:32">cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="92:13" pos:end="92:39">/* Loop in case of EINTR */</comment>

            <do pos:start="94:13" pos:end="106:55">do <block pos:start="94:16" pos:end="106:13">{<block_content pos:start="96:17" pos:end="104:17">

                <expr_stmt pos:start="96:17" pos:end="96:62"><expr pos:start="96:17" pos:end="96:61"><name pos:start="96:17" pos:end="96:19">len</name> <operator pos:start="96:21" pos:end="96:21">=</operator> <call pos:start="96:23" pos:end="96:61"><name pos:start="96:23" pos:end="96:36">v9fs_co_preadv</name><argument_list pos:start="96:37" pos:end="96:61">(<argument pos:start="96:38" pos:end="96:40"><expr pos:start="96:38" pos:end="96:40"><name pos:start="96:38" pos:end="96:40">pdu</name></expr></argument>, <argument pos:start="96:43" pos:end="96:46"><expr pos:start="96:43" pos:end="96:46"><name pos:start="96:43" pos:end="96:46">fidp</name></expr></argument>, <argument pos:start="96:49" pos:end="96:50"><expr pos:start="96:49" pos:end="96:50"><name pos:start="96:49" pos:end="96:50">sg</name></expr></argument>, <argument pos:start="96:53" pos:end="96:55"><expr pos:start="96:53" pos:end="96:55"><name pos:start="96:53" pos:end="96:55">cnt</name></expr></argument>, <argument pos:start="96:58" pos:end="96:60"><expr pos:start="96:58" pos:end="96:60"><name pos:start="96:58" pos:end="96:60">off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="98:17" pos:end="104:17"><if pos:start="98:17" pos:end="104:17">if <condition pos:start="98:20" pos:end="98:29">(<expr pos:start="98:21" pos:end="98:28"><name pos:start="98:21" pos:end="98:23">len</name> <operator pos:start="98:25" pos:end="98:26">&gt;=</operator> <literal type="number" pos:start="98:28" pos:end="98:28">0</literal></expr>)</condition> <block pos:start="98:31" pos:end="104:17">{<block_content pos:start="100:21" pos:end="102:33">

                    <expr_stmt pos:start="100:21" pos:end="100:33"><expr pos:start="100:21" pos:end="100:32"><name pos:start="100:21" pos:end="100:23">off</name>   <operator pos:start="100:27" pos:end="100:28">+=</operator> <name pos:start="100:30" pos:end="100:32">len</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="102:21" pos:end="102:33"><expr pos:start="102:21" pos:end="102:32"><name pos:start="102:21" pos:end="102:25">count</name> <operator pos:start="102:27" pos:end="102:28">+=</operator> <name pos:start="102:30" pos:end="102:32">len</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block> while <condition pos:start="106:21" pos:end="106:54">(<expr pos:start="106:22" pos:end="106:53"><name pos:start="106:22" pos:end="106:24">len</name> <operator pos:start="106:26" pos:end="106:27">==</operator> <operator pos:start="106:29" pos:end="106:29">-</operator><name pos:start="106:30" pos:end="106:34">EINTR</name> <operator pos:start="106:36" pos:end="106:37">&amp;&amp;</operator> <operator pos:start="106:39" pos:end="106:39">!</operator><name pos:start="106:40" pos:end="106:53"><name pos:start="106:40" pos:end="106:42">pdu</name><operator pos:start="106:43" pos:end="106:44">-&gt;</operator><name pos:start="106:45" pos:end="106:53">cancelled</name></name></expr>)</condition>;</do>

            <if_stmt pos:start="108:13" pos:end="116:13"><if pos:start="108:13" pos:end="116:13">if <condition pos:start="108:16" pos:end="108:24">(<expr pos:start="108:17" pos:end="108:23"><name pos:start="108:17" pos:end="108:19">len</name> <operator pos:start="108:21" pos:end="108:21">&lt;</operator> <literal type="number" pos:start="108:23" pos:end="108:23">0</literal></expr>)</condition> <block pos:start="108:26" pos:end="116:13">{<block_content pos:start="112:17" pos:end="114:25">

                <comment type="block" pos:start="110:17" pos:end="110:47">/* IO error return the error */</comment>

                <expr_stmt pos:start="112:17" pos:end="112:26"><expr pos:start="112:17" pos:end="112:25"><name pos:start="112:17" pos:end="112:19">err</name> <operator pos:start="112:21" pos:end="112:21">=</operator> <name pos:start="112:23" pos:end="112:25">len</name></expr>;</expr_stmt>

                <goto pos:start="114:17" pos:end="114:25">goto <name pos:start="114:22" pos:end="114:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="118:13" pos:end="118:42"><expr pos:start="118:13" pos:end="118:41"><name pos:start="118:13" pos:end="118:14">sg</name> <operator pos:start="118:16" pos:end="118:16">=</operator> <call pos:start="118:18" pos:end="118:41"><name pos:start="118:18" pos:end="118:26">adjust_sg</name><argument_list pos:start="118:27" pos:end="118:41">(<argument pos:start="118:28" pos:end="118:29"><expr pos:start="118:28" pos:end="118:29"><name pos:start="118:28" pos:end="118:29">sg</name></expr></argument>, <argument pos:start="118:32" pos:end="118:34"><expr pos:start="118:32" pos:end="118:34"><name pos:start="118:32" pos:end="118:34">len</name></expr></argument>, <argument pos:start="118:37" pos:end="118:40"><expr pos:start="118:37" pos:end="118:40"><operator pos:start="118:37" pos:end="118:37">&amp;</operator><name pos:start="118:38" pos:end="118:40">cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="120:17" pos:end="120:46">(<expr pos:start="120:18" pos:end="120:45"><name pos:start="120:18" pos:end="120:43"><name pos:start="120:18" pos:end="120:22">count</name> <argument_list type="generic" pos:start="120:24" pos:end="120:43">&lt; <argument pos:start="120:26" pos:end="120:41"><expr pos:start="120:26" pos:end="120:41"><name pos:start="120:26" pos:end="120:34">max_count</name> <operator pos:start="120:36" pos:end="120:37">&amp;&amp;</operator> <name pos:start="120:39" pos:end="120:41">len</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="120:45" pos:end="120:45">0</literal></expr>)</condition>;</do>

        <expr_stmt pos:start="122:9" pos:end="122:21"><expr pos:start="122:9" pos:end="122:20"><name pos:start="122:9" pos:end="122:11">err</name> <operator pos:start="122:13" pos:end="122:13">=</operator> <name pos:start="122:15" pos:end="122:20">offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="124:9" pos:end="124:52"><expr pos:start="124:9" pos:end="124:51"><name pos:start="124:9" pos:end="124:11">err</name> <operator pos:start="124:13" pos:end="124:14">+=</operator> <call pos:start="124:16" pos:end="124:51"><name pos:start="124:16" pos:end="124:26">pdu_marshal</name><argument_list pos:start="124:27" pos:end="124:51">(<argument pos:start="124:28" pos:end="124:30"><expr pos:start="124:28" pos:end="124:30"><name pos:start="124:28" pos:end="124:30">pdu</name></expr></argument>, <argument pos:start="124:33" pos:end="124:38"><expr pos:start="124:33" pos:end="124:38"><name pos:start="124:33" pos:end="124:38">offset</name></expr></argument>, <argument pos:start="124:41" pos:end="124:43"><expr pos:start="124:41" pos:end="124:43"><literal type="string" pos:start="124:41" pos:end="124:43">"d"</literal></expr></argument>, <argument pos:start="124:46" pos:end="124:50"><expr pos:start="124:46" pos:end="124:50"><name pos:start="124:46" pos:end="124:50">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="126:9" pos:end="126:21"><expr pos:start="126:9" pos:end="126:20"><name pos:start="126:9" pos:end="126:11">err</name> <operator pos:start="126:13" pos:end="126:14">+=</operator> <name pos:start="126:16" pos:end="126:20">count</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="128:7" pos:end="132:5">else if <condition pos:start="128:15" pos:end="128:46">(<expr pos:start="128:16" pos:end="128:45"><name pos:start="128:16" pos:end="128:29"><name pos:start="128:16" pos:end="128:19">fidp</name><operator pos:start="128:20" pos:end="128:21">-&gt;</operator><name pos:start="128:22" pos:end="128:29">fid_type</name></name> <operator pos:start="128:31" pos:end="128:32">==</operator> <name pos:start="128:34" pos:end="128:45">P9_FID_XATTR</name></expr>)</condition> <block pos:start="128:48" pos:end="132:5">{<block_content pos:start="130:9" pos:end="130:60">

        <expr_stmt pos:start="130:9" pos:end="130:60"><expr pos:start="130:9" pos:end="130:59"><name pos:start="130:9" pos:end="130:11">err</name> <operator pos:start="130:13" pos:end="130:13">=</operator> <call pos:start="130:15" pos:end="130:59"><name pos:start="130:15" pos:end="130:29">v9fs_xattr_read</name><argument_list pos:start="130:30" pos:end="130:59">(<argument pos:start="130:31" pos:end="130:31"><expr pos:start="130:31" pos:end="130:31"><name pos:start="130:31" pos:end="130:31">s</name></expr></argument>, <argument pos:start="130:34" pos:end="130:36"><expr pos:start="130:34" pos:end="130:36"><name pos:start="130:34" pos:end="130:36">pdu</name></expr></argument>, <argument pos:start="130:39" pos:end="130:42"><expr pos:start="130:39" pos:end="130:42"><name pos:start="130:39" pos:end="130:42">fidp</name></expr></argument>, <argument pos:start="130:45" pos:end="130:47"><expr pos:start="130:45" pos:end="130:47"><name pos:start="130:45" pos:end="130:47">off</name></expr></argument>, <argument pos:start="130:50" pos:end="130:58"><expr pos:start="130:50" pos:end="130:58"><name pos:start="130:50" pos:end="130:58">max_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="132:7" pos:end="136:5">else <block pos:start="132:12" pos:end="136:5">{<block_content pos:start="134:9" pos:end="134:22">

        <expr_stmt pos:start="134:9" pos:end="134:22"><expr pos:start="134:9" pos:end="134:21"><name pos:start="134:9" pos:end="134:11">err</name> <operator pos:start="134:13" pos:end="134:13">=</operator> <operator pos:start="134:15" pos:end="134:15">-</operator><name pos:start="134:16" pos:end="134:21">EINVAL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<label pos:start="138:1" pos:end="138:4"><name pos:start="138:1" pos:end="138:3">out</name>:</label>

    <expr_stmt pos:start="140:5" pos:end="140:23"><expr pos:start="140:5" pos:end="140:22"><call pos:start="140:5" pos:end="140:22"><name pos:start="140:5" pos:end="140:11">put_fid</name><argument_list pos:start="140:12" pos:end="140:22">(<argument pos:start="140:13" pos:end="140:15"><expr pos:start="140:13" pos:end="140:15"><name pos:start="140:13" pos:end="140:15">pdu</name></expr></argument>, <argument pos:start="140:18" pos:end="140:21"><expr pos:start="140:18" pos:end="140:21"><name pos:start="140:18" pos:end="140:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="142:1" pos:end="142:10"><name pos:start="142:1" pos:end="142:9">out_nofid</name>:</label>

    <expr_stmt pos:start="144:5" pos:end="144:58"><expr pos:start="144:5" pos:end="144:57"><call pos:start="144:5" pos:end="144:57"><name pos:start="144:5" pos:end="144:26">trace_v9fs_read_return</name><argument_list pos:start="144:27" pos:end="144:57">(<argument pos:start="144:28" pos:end="144:35"><expr pos:start="144:28" pos:end="144:35"><name pos:start="144:28" pos:end="144:35"><name pos:start="144:28" pos:end="144:30">pdu</name><operator pos:start="144:31" pos:end="144:32">-&gt;</operator><name pos:start="144:33" pos:end="144:35">tag</name></name></expr></argument>, <argument pos:start="144:38" pos:end="144:44"><expr pos:start="144:38" pos:end="144:44"><name pos:start="144:38" pos:end="144:44"><name pos:start="144:38" pos:end="144:40">pdu</name><operator pos:start="144:41" pos:end="144:42">-&gt;</operator><name pos:start="144:43" pos:end="144:44">id</name></name></expr></argument>, <argument pos:start="144:47" pos:end="144:51"><expr pos:start="144:47" pos:end="144:51"><name pos:start="144:47" pos:end="144:51">count</name></expr></argument>, <argument pos:start="144:54" pos:end="144:56"><expr pos:start="144:54" pos:end="144:56"><name pos:start="144:54" pos:end="144:56">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="146:5" pos:end="146:30"><expr pos:start="146:5" pos:end="146:29"><call pos:start="146:5" pos:end="146:29"><name pos:start="146:5" pos:end="146:16">complete_pdu</name><argument_list pos:start="146:17" pos:end="146:29">(<argument pos:start="146:18" pos:end="146:18"><expr pos:start="146:18" pos:end="146:18"><name pos:start="146:18" pos:end="146:18">s</name></expr></argument>, <argument pos:start="146:21" pos:end="146:23"><expr pos:start="146:21" pos:end="146:23"><name pos:start="146:21" pos:end="146:23">pdu</name></expr></argument>, <argument pos:start="146:26" pos:end="146:28"><expr pos:start="146:26" pos:end="146:28"><name pos:start="146:26" pos:end="146:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
