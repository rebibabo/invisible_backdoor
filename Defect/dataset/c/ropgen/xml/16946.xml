<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16946.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">test_submit_co</name><parameter_list pos:start="1:27" pos:end="1:32">(<parameter pos:start="1:28" pos:end="1:31"><decl pos:start="1:28" pos:end="1:31"><type pos:start="1:28" pos:end="1:31"><name pos:start="1:28" pos:end="1:31">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:37">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:18">WorkerTestData</name></type> <name pos:start="5:20" pos:end="5:23">data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:54"><decl pos:start="7:5" pos:end="7:53"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">Coroutine</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">co</name> <init pos:start="7:19" pos:end="7:53">= <expr pos:start="7:21" pos:end="7:53"><call pos:start="7:21" pos:end="7:53"><name pos:start="7:21" pos:end="7:41">qemu_coroutine_create</name><argument_list pos:start="7:42" pos:end="7:53">(<argument pos:start="7:43" pos:end="7:52"><expr pos:start="7:43" pos:end="7:52"><name pos:start="7:43" pos:end="7:52">co_test_cb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><call pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:24">qemu_coroutine_enter</name><argument_list pos:start="11:25" pos:end="11:35">(<argument pos:start="11:26" pos:end="11:27"><expr pos:start="11:26" pos:end="11:27"><name pos:start="11:26" pos:end="11:27">co</name></expr></argument>, <argument pos:start="11:30" pos:end="11:34"><expr pos:start="11:30" pos:end="11:34"><operator pos:start="11:30" pos:end="11:30">&amp;</operator><name pos:start="11:31" pos:end="11:34">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:49">/* Back here once the worker has started.  */</comment>



    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><call pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:19">g_assert_cmpint</name><argument_list pos:start="19:20" pos:end="19:34">(<argument pos:start="19:21" pos:end="19:26"><expr pos:start="19:21" pos:end="19:26"><name pos:start="19:21" pos:end="19:26">active</name></expr></argument>, <argument pos:start="19:29" pos:end="19:30"><expr pos:start="19:29" pos:end="19:30"><operator pos:start="19:29" pos:end="19:30">==</operator></expr></argument>, <argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><literal type="number" pos:start="19:33" pos:end="19:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:48"><expr pos:start="21:5" pos:end="21:47"><call pos:start="21:5" pos:end="21:47"><name pos:start="21:5" pos:end="21:19">g_assert_cmpint</name><argument_list pos:start="21:20" pos:end="21:47">(<argument pos:start="21:21" pos:end="21:28"><expr pos:start="21:21" pos:end="21:28"><name pos:start="21:21" pos:end="21:28"><name pos:start="21:21" pos:end="21:24">data</name><operator pos:start="21:25" pos:end="21:25">.</operator><name pos:start="21:26" pos:end="21:28">ret</name></name></expr></argument>, <argument pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:32"><operator pos:start="21:31" pos:end="21:32">==</operator></expr></argument>, <argument pos:start="21:35" pos:end="21:46"><expr pos:start="21:35" pos:end="21:46"><operator pos:start="21:35" pos:end="21:35">-</operator><name pos:start="21:36" pos:end="21:46">EINPROGRESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:65">/* qemu_aio_flush will execute the rest of the coroutine.  */</comment>



    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><call pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:18">qemu_aio_flush</name><argument_list pos:start="29:19" pos:end="29:20">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:54">/* Back here after the coroutine has finished.  */</comment>



    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><call pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:19">g_assert_cmpint</name><argument_list pos:start="37:20" pos:end="37:34">(<argument pos:start="37:21" pos:end="37:26"><expr pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:26">active</name></expr></argument>, <argument pos:start="37:29" pos:end="37:30"><expr pos:start="37:29" pos:end="37:30"><operator pos:start="37:29" pos:end="37:30">==</operator></expr></argument>, <argument pos:start="37:33" pos:end="37:33"><expr pos:start="37:33" pos:end="37:33"><literal type="number" pos:start="37:33" pos:end="37:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:37"><expr pos:start="39:5" pos:end="39:36"><call pos:start="39:5" pos:end="39:36"><name pos:start="39:5" pos:end="39:19">g_assert_cmpint</name><argument_list pos:start="39:20" pos:end="39:36">(<argument pos:start="39:21" pos:end="39:28"><expr pos:start="39:21" pos:end="39:28"><name pos:start="39:21" pos:end="39:28"><name pos:start="39:21" pos:end="39:24">data</name><operator pos:start="39:25" pos:end="39:25">.</operator><name pos:start="39:26" pos:end="39:28">ret</name></name></expr></argument>, <argument pos:start="39:31" pos:end="39:32"><expr pos:start="39:31" pos:end="39:32"><operator pos:start="39:31" pos:end="39:32">==</operator></expr></argument>, <argument pos:start="39:35" pos:end="39:35"><expr pos:start="39:35" pos:end="39:35"><literal type="number" pos:start="39:35" pos:end="39:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
