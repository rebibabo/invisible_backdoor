<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2904.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">net_cleanup</name><parameter_list pos:start="1:17" pos:end="1:22">(<parameter pos:start="1:18" pos:end="1:21"><decl pos:start="1:18" pos:end="1:21"><type pos:start="1:18" pos:end="1:21"><name pos:start="1:18" pos:end="1:21">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="56:0">

    <decl_stmt pos:start="5:5" pos:end="10:0"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VLANState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:19">vlan</name></decl>;</decl_stmt>



<cpp:if pos:start="9:1" pos:end="9:20">#<cpp:directive pos:start="9:2" pos:end="9:3">if</cpp:directive> <expr pos:start="9:5" pos:end="9:20"><operator pos:start="9:5" pos:end="9:5">!</operator><call pos:start="9:6" pos:end="9:20"><name pos:start="9:6" pos:end="9:12">defined</name><argument_list pos:start="9:13" pos:end="9:20">(<argument pos:start="9:14" pos:end="9:19"><expr pos:start="9:14" pos:end="9:19"><name pos:start="9:14" pos:end="9:19">_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <comment type="block" pos:start="11:5" pos:end="11:31">/* close network clients */</comment>

    <for pos:start="13:5" pos:end="56:0">for<control pos:start="13:8" pos:end="13:59">(<init pos:start="13:9" pos:end="13:26"><expr pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:12">vlan</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:25">first_vlan</name></expr>;</init> <condition pos:start="13:28" pos:end="13:40"><expr pos:start="13:28" pos:end="13:39"><name pos:start="13:28" pos:end="13:31">vlan</name> <operator pos:start="13:33" pos:end="13:34">!=</operator> <name pos:start="13:36" pos:end="13:39">NULL</name></expr>;</condition> <incr pos:start="13:42" pos:end="13:58"><expr pos:start="13:42" pos:end="13:58"><name pos:start="13:42" pos:end="13:45">vlan</name> <operator pos:start="13:47" pos:end="13:47">=</operator> <name pos:start="13:49" pos:end="13:58"><name pos:start="13:49" pos:end="13:52">vlan</name><operator pos:start="13:53" pos:end="13:54">-&gt;</operator><name pos:start="13:55" pos:end="13:58">next</name></name></expr></incr>)</control> <block pos:start="13:61" pos:end="56:0">{<block_content pos:start="15:9" pos:end="51:9">

        <decl_stmt pos:start="15:9" pos:end="15:28"><decl pos:start="15:9" pos:end="15:27"><type pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:23">VLANClientState</name> <modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:27">vc</name></decl>;</decl_stmt>



        <for pos:start="19:9" pos:end="51:9">for<control pos:start="19:12" pos:end="19:63">(<init pos:start="19:13" pos:end="19:36"><expr pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:14">vc</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:35"><name pos:start="19:18" pos:end="19:21">vlan</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:35">first_client</name></name></expr>;</init> <condition pos:start="19:38" pos:end="19:48"><expr pos:start="19:38" pos:end="19:47"><name pos:start="19:38" pos:end="19:39">vc</name> <operator pos:start="19:41" pos:end="19:42">!=</operator> <name pos:start="19:44" pos:end="19:47">NULL</name></expr>;</condition> <incr pos:start="19:50" pos:end="19:62"><expr pos:start="19:50" pos:end="19:62"><name pos:start="19:50" pos:end="19:51">vc</name> <operator pos:start="19:53" pos:end="19:53">=</operator> <name pos:start="19:55" pos:end="19:62"><name pos:start="19:55" pos:end="19:56">vc</name><operator pos:start="19:57" pos:end="19:58">-&gt;</operator><name pos:start="19:59" pos:end="19:62">next</name></name></expr></incr>)</control> <block pos:start="19:65" pos:end="51:9">{<block_content pos:start="21:13" pos:end="50:0">

            <if_stmt pos:start="21:13" pos:end="40:0"><if pos:start="21:13" pos:end="40:0">if <condition pos:start="21:16" pos:end="21:43">(<expr pos:start="21:17" pos:end="21:42"><name pos:start="21:17" pos:end="21:27"><name pos:start="21:17" pos:end="21:18">vc</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:27">fd_read</name></name> <operator pos:start="21:29" pos:end="21:30">==</operator> <name pos:start="21:32" pos:end="21:42">tap_receive</name></expr>)</condition> <block pos:start="21:45" pos:end="40:0">{<block_content pos:start="23:17" pos:end="35:65">

                <decl_stmt pos:start="23:17" pos:end="23:32"><decl pos:start="23:17" pos:end="23:31"><type pos:start="23:17" pos:end="23:20"><name pos:start="23:17" pos:end="23:20">char</name></type> <name pos:start="23:22" pos:end="23:31"><name pos:start="23:22" pos:end="23:27">ifname</name><index pos:start="23:28" pos:end="23:31">[<expr pos:start="23:29" pos:end="23:30"><literal type="number" pos:start="23:29" pos:end="23:30">64</literal></expr>]</index></name></decl>;</decl_stmt>

                <decl_stmt pos:start="25:17" pos:end="25:41"><decl pos:start="25:17" pos:end="25:40"><type pos:start="25:17" pos:end="25:26"><name pos:start="25:17" pos:end="25:24">TAPState</name> <modifier pos:start="25:26" pos:end="25:26">*</modifier></type><name pos:start="25:27" pos:end="25:27">s</name> <init pos:start="25:29" pos:end="25:40">= <expr pos:start="25:31" pos:end="25:40"><name pos:start="25:31" pos:end="25:40"><name pos:start="25:31" pos:end="25:32">vc</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:40">opaque</name></name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="29:17" pos:end="35:65"><if pos:start="29:17" pos:end="35:65">if <condition pos:start="29:20" pos:end="33:38">(<expr pos:start="29:21" pos:end="33:37"><call pos:start="29:21" pos:end="29:44"><name pos:start="29:21" pos:end="29:26">strcmp</name><argument_list pos:start="29:27" pos:end="29:44">(<argument pos:start="29:28" pos:end="29:36"><expr pos:start="29:28" pos:end="29:36"><name pos:start="29:28" pos:end="29:36"><name pos:start="29:28" pos:end="29:29">vc</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:36">model</name></name></expr></argument>, <argument pos:start="29:39" pos:end="29:43"><expr pos:start="29:39" pos:end="29:43"><literal type="string" pos:start="29:39" pos:end="29:43">"tap"</literal></expr></argument>)</argument_list></call> <operator pos:start="29:46" pos:end="29:47">==</operator> <literal type="number" pos:start="29:49" pos:end="29:49">0</literal> <operator pos:start="29:51" pos:end="29:52">&amp;&amp;</operator>

                    <call pos:start="31:21" pos:end="31:64"><name pos:start="31:21" pos:end="31:26">sscanf</name><argument_list pos:start="31:27" pos:end="31:64">(<argument pos:start="31:28" pos:end="31:39"><expr pos:start="31:28" pos:end="31:39"><name pos:start="31:28" pos:end="31:39"><name pos:start="31:28" pos:end="31:29">vc</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:39">info_str</name></name></expr></argument>, <argument pos:start="31:42" pos:end="31:55"><expr pos:start="31:42" pos:end="31:55"><literal type="string" pos:start="31:42" pos:end="31:55">"ifname=%63s "</literal></expr></argument>, <argument pos:start="31:58" pos:end="31:63"><expr pos:start="31:58" pos:end="31:63"><name pos:start="31:58" pos:end="31:63">ifname</name></expr></argument>)</argument_list></call> <operator pos:start="31:66" pos:end="31:67">==</operator> <literal type="number" pos:start="31:69" pos:end="31:69">1</literal> <operator pos:start="31:71" pos:end="31:72">&amp;&amp;</operator>

                    <name pos:start="33:21" pos:end="33:37"><name pos:start="33:21" pos:end="33:21">s</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:34">down_script</name><index pos:start="33:35" pos:end="33:37">[<expr pos:start="33:36" pos:end="33:36"><literal type="number" pos:start="33:36" pos:end="33:36">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="35:21" pos:end="35:65"><block_content pos:start="35:21" pos:end="35:65">

                    <expr_stmt pos:start="35:21" pos:end="35:65"><expr pos:start="35:21" pos:end="35:64"><call pos:start="35:21" pos:end="35:64"><name pos:start="35:21" pos:end="35:33">launch_script</name><argument_list pos:start="35:34" pos:end="35:64">(<argument pos:start="35:35" pos:end="35:48"><expr pos:start="35:35" pos:end="35:48"><name pos:start="35:35" pos:end="35:48"><name pos:start="35:35" pos:end="35:35">s</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:48">down_script</name></name></expr></argument>, <argument pos:start="35:51" pos:end="35:56"><expr pos:start="35:51" pos:end="35:56"><name pos:start="35:51" pos:end="35:56">ifname</name></expr></argument>, <argument pos:start="35:59" pos:end="35:63"><expr pos:start="35:59" pos:end="35:63"><name pos:start="35:59" pos:end="35:63"><name pos:start="35:59" pos:end="35:59">s</name><operator pos:start="35:60" pos:end="35:61">-&gt;</operator><name pos:start="35:62" pos:end="35:63">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:if pos:start="39:1" pos:end="39:23">#<cpp:directive pos:start="39:2" pos:end="39:3">if</cpp:directive> <expr pos:start="39:5" pos:end="39:23"><call pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:11">defined</name><argument_list pos:start="39:12" pos:end="39:23">(<argument pos:start="39:13" pos:end="39:22"><expr pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:22">CONFIG_VDE</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="41:13" pos:end="50:0"><if pos:start="41:13" pos:end="50:0">if <condition pos:start="41:16" pos:end="41:45">(<expr pos:start="41:17" pos:end="41:44"><name pos:start="41:17" pos:end="41:27"><name pos:start="41:17" pos:end="41:18">vc</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:27">fd_read</name></name> <operator pos:start="41:29" pos:end="41:30">==</operator> <name pos:start="41:32" pos:end="41:44">vde_from_qemu</name></expr>)</condition> <block pos:start="41:47" pos:end="50:0">{<block_content pos:start="43:17" pos:end="45:34">

                <decl_stmt pos:start="43:17" pos:end="43:41"><decl pos:start="43:17" pos:end="43:40"><type pos:start="43:17" pos:end="43:26"><name pos:start="43:17" pos:end="43:24">VDEState</name> <modifier pos:start="43:26" pos:end="43:26">*</modifier></type><name pos:start="43:27" pos:end="43:27">s</name> <init pos:start="43:29" pos:end="43:40">= <expr pos:start="43:31" pos:end="43:40"><name pos:start="43:31" pos:end="43:40"><name pos:start="43:31" pos:end="43:32">vc</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:40">opaque</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:34"><expr pos:start="45:17" pos:end="45:33"><call pos:start="45:17" pos:end="45:33"><name pos:start="45:17" pos:end="45:25">vde_close</name><argument_list pos:start="45:26" pos:end="45:33">(<argument pos:start="45:27" pos:end="45:32"><expr pos:start="45:27" pos:end="45:32"><name pos:start="45:27" pos:end="45:32"><name pos:start="45:27" pos:end="45:27">s</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:32">vde</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></for>

    </block_content>}</block></for>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
