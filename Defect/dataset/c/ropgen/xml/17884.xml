<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17884.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">dca_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:44">(<parameter pos:start="1:29" pos:end="1:50"><decl pos:start="1:29" pos:end="1:50"><type pos:start="1:29" pos:end="1:50"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type> <name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,
                            <parameter pos:start="2:29" pos:end="2:38"><decl pos:start="2:29" pos:end="2:38"><type pos:start="2:29" pos:end="2:38"><name pos:start="2:29" pos:end="2:32">void</name> <modifier pos:start="2:34" pos:end="2:34">*</modifier></type><name pos:start="2:35" pos:end="2:38">data</name></decl></parameter>, <parameter pos:start="2:41" pos:end="2:54"><decl pos:start="2:41" pos:end="2:54"><type pos:start="2:41" pos:end="2:54"><name pos:start="2:41" pos:end="2:43">int</name> <modifier pos:start="2:45" pos:end="2:45">*</modifier></type><name pos:start="2:46" pos:end="2:54">data_size</name></decl></parameter>,
                            <parameter pos:start="3:29" pos:end="3:43"><decl pos:start="3:29" pos:end="3:43"><type pos:start="3:29" pos:end="3:43"><name pos:start="3:29" pos:end="3:36">AVPacket</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:43">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="54:20">
    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name> <init pos:start="5:24" pos:end="5:36">= <expr pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:30">avpkt</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:31"><decl pos:start="6:5" pos:end="6:30"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:16">buf_size</name> <init pos:start="6:18" pos:end="6:30">= <expr pos:start="6:20" pos:end="6:30"><name pos:start="6:20" pos:end="6:30"><name pos:start="6:20" pos:end="6:24">avpkt</name><operator pos:start="6:25" pos:end="6:26">-&gt;</operator><name pos:start="6:27" pos:end="6:30">size</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:28"><decl pos:start="8:5" pos:end="8:27"><type pos:start="8:5" pos:end="8:13"><name pos:start="8:5" pos:end="8:11">int16_t</name> <modifier pos:start="8:13" pos:end="8:13">*</modifier></type><name pos:start="8:14" pos:end="8:20">samples</name> <init pos:start="8:22" pos:end="8:27">= <expr pos:start="8:24" pos:end="8:27"><name pos:start="8:24" pos:end="8:27">data</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">DCAContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">s</name> <init pos:start="9:19" pos:end="9:36">= <expr pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:25">avctx</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:36">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:17"><decl pos:start="10:5" pos:end="10:16"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:16">channels</name></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:97"><expr pos:start="11:5" pos:end="11:96"><name pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:22">dca_buffer_size</name></name> <operator pos:start="11:24" pos:end="11:24">=</operator> <call pos:start="11:26" pos:end="11:96"><name pos:start="11:26" pos:end="11:46">dca_convert_bitstream</name><argument_list pos:start="11:47" pos:end="11:96">(<argument pos:start="11:48" pos:end="11:50"><expr pos:start="11:48" pos:end="11:50"><name pos:start="11:48" pos:end="11:50">buf</name></expr></argument>, <argument pos:start="11:53" pos:end="11:60"><expr pos:start="11:53" pos:end="11:60"><name pos:start="11:53" pos:end="11:60">buf_size</name></expr></argument>, <argument pos:start="11:63" pos:end="11:75"><expr pos:start="11:63" pos:end="11:75"><name pos:start="11:63" pos:end="11:75"><name pos:start="11:63" pos:end="11:63">s</name><operator pos:start="11:64" pos:end="11:65">-&gt;</operator><name pos:start="11:66" pos:end="11:75">dca_buffer</name></name></expr></argument>, <argument pos:start="11:78" pos:end="11:95"><expr pos:start="11:78" pos:end="11:95"><name pos:start="11:78" pos:end="11:95">DCA_MAX_FRAME_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="12:5" pos:end="14:5"><if pos:start="12:5" pos:end="14:5">if <condition pos:start="12:8" pos:end="12:33">(<expr pos:start="12:9" pos:end="12:32"><name pos:start="12:9" pos:end="12:26"><name pos:start="12:9" pos:end="12:9">s</name><operator pos:start="12:10" pos:end="12:11">-&gt;</operator><name pos:start="12:12" pos:end="12:26">dca_buffer_size</name></name> <operator pos:start="12:28" pos:end="12:29">==</operator> <operator pos:start="12:31" pos:end="12:31">-</operator><literal type="number" pos:start="12:32" pos:end="12:32">1</literal></expr>)</condition> <block pos:start="12:35" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:63">
        <expr_stmt pos:start="13:9" pos:end="13:63"><expr pos:start="13:9" pos:end="13:62"><call pos:start="13:9" pos:end="13:62"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="13:62">(<argument pos:start="13:16" pos:end="13:20"><expr pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:20">avctx</name></expr></argument>, <argument pos:start="13:23" pos:end="13:34"><expr pos:start="13:23" pos:end="13:34"><name pos:start="13:23" pos:end="13:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:37" pos:end="13:61"><expr pos:start="13:37" pos:end="13:61"><literal type="string" pos:start="13:37" pos:end="13:61">"Not a valid DCA frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:65"><expr pos:start="15:5" pos:end="15:64"><call pos:start="15:5" pos:end="15:64"><name pos:start="15:5" pos:end="15:17">init_get_bits</name><argument_list pos:start="15:18" pos:end="15:64">(<argument pos:start="15:19" pos:end="15:24"><expr pos:start="15:19" pos:end="15:24"><operator pos:start="15:19" pos:end="15:19">&amp;</operator><name pos:start="15:20" pos:end="15:24"><name pos:start="15:20" pos:end="15:20">s</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:24">gb</name></name></expr></argument>, <argument pos:start="15:27" pos:end="15:39"><expr pos:start="15:27" pos:end="15:39"><name pos:start="15:27" pos:end="15:39"><name pos:start="15:27" pos:end="15:27">s</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:39">dca_buffer</name></name></expr></argument>, <argument pos:start="15:42" pos:end="15:63"><expr pos:start="15:42" pos:end="15:63"><name pos:start="15:42" pos:end="15:59"><name pos:start="15:42" pos:end="15:42">s</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:59">dca_buffer_size</name></name> <operator pos:start="15:61" pos:end="15:61">*</operator> <literal type="number" pos:start="15:63" pos:end="15:63">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="16:5" pos:end="20:5"><if pos:start="16:5" pos:end="20:5">if <condition pos:start="16:8" pos:end="16:38">(<expr pos:start="16:9" pos:end="16:37"><call pos:start="16:9" pos:end="16:33"><name pos:start="16:9" pos:end="16:30">dca_parse_frame_header</name><argument_list pos:start="16:31" pos:end="16:33">(<argument pos:start="16:32" pos:end="16:32"><expr pos:start="16:32" pos:end="16:32"><name pos:start="16:32" pos:end="16:32">s</name></expr></argument>)</argument_list></call> <operator pos:start="16:35" pos:end="16:35">&lt;</operator> <literal type="number" pos:start="16:37" pos:end="16:37">0</literal></expr>)</condition> <block pos:start="16:40" pos:end="20:5">{<block_content pos:start="18:9" pos:end="19:24">
        <comment type="line" pos:start="17:9" pos:end="17:64">//seems like the frame is corrupt, try with the next one</comment>
        <expr_stmt pos:start="18:9" pos:end="18:21"><expr pos:start="18:9" pos:end="18:20"><operator pos:start="18:9" pos:end="18:9">*</operator><name pos:start="18:10" pos:end="18:18">data_size</name><operator pos:start="18:19" pos:end="18:19">=</operator><literal type="number" pos:start="18:20" pos:end="18:20">0</literal></expr>;</expr_stmt>
        <return pos:start="19:9" pos:end="19:24">return <expr pos:start="19:16" pos:end="19:23"><name pos:start="19:16" pos:end="19:23">buf_size</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <comment type="line" pos:start="21:5" pos:end="21:41">//set AVCodec values with parsed data</comment>
    <expr_stmt pos:start="22:5" pos:end="22:40"><expr pos:start="22:5" pos:end="22:39"><name pos:start="22:5" pos:end="22:22"><name pos:start="22:5" pos:end="22:9">avctx</name><operator pos:start="22:10" pos:end="22:11">-&gt;</operator><name pos:start="22:12" pos:end="22:22">sample_rate</name></name> <operator pos:start="22:24" pos:end="22:24">=</operator> <name pos:start="22:26" pos:end="22:39"><name pos:start="22:26" pos:end="22:26">s</name><operator pos:start="22:27" pos:end="22:28">-&gt;</operator><name pos:start="22:29" pos:end="22:39">sample_rate</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:9">avctx</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:19">bit_rate</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:33"><name pos:start="23:23" pos:end="23:23">s</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:33">bit_rate</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:43"><expr pos:start="24:5" pos:end="24:42"><name pos:start="24:5" pos:end="24:12">channels</name> <operator pos:start="24:14" pos:end="24:14">=</operator> <name pos:start="24:16" pos:end="24:31"><name pos:start="24:16" pos:end="24:16">s</name><operator pos:start="24:17" pos:end="24:18">-&gt;</operator><name pos:start="24:19" pos:end="24:31">prim_channels</name></name> <operator pos:start="24:33" pos:end="24:33">+</operator> <operator pos:start="24:35" pos:end="24:35">!</operator><operator pos:start="24:36" pos:end="24:36">!</operator><name pos:start="24:37" pos:end="24:42"><name pos:start="24:37" pos:end="24:37">s</name><operator pos:start="24:38" pos:end="24:39">-&gt;</operator><name pos:start="24:40" pos:end="24:42">lfe</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="25:5" pos:end="39:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:20">(<expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:16">amode</name></name><operator pos:start="25:17" pos:end="25:17">&lt;</operator><literal type="number" pos:start="25:18" pos:end="25:19">16</literal></expr>)</condition> <block pos:start="25:22" pos:end="37:5">{<block_content pos:start="26:9" pos:end="36:9">
        <expr_stmt pos:start="26:9" pos:end="26:66"><expr pos:start="26:9" pos:end="26:65"><name pos:start="26:9" pos:end="26:29"><name pos:start="26:9" pos:end="26:13">avctx</name><operator pos:start="26:14" pos:end="26:15">-&gt;</operator><name pos:start="26:16" pos:end="26:29">channel_layout</name></name> <operator pos:start="26:31" pos:end="26:31">=</operator> <name pos:start="26:33" pos:end="26:65"><name pos:start="26:33" pos:end="26:55">dca_core_channel_layout</name><index pos:start="26:56" pos:end="26:65">[<expr pos:start="26:57" pos:end="26:64"><name pos:start="26:57" pos:end="26:64"><name pos:start="26:57" pos:end="26:57">s</name><operator pos:start="26:58" pos:end="26:59">-&gt;</operator><name pos:start="26:60" pos:end="26:64">amode</name></name></expr>]</index></name></expr>;</expr_stmt>
        <if_stmt pos:start="27:9" pos:end="31:71"><if pos:start="27:9" pos:end="30:9">if <condition pos:start="27:12" pos:end="27:19">(<expr pos:start="27:13" pos:end="27:18"><name pos:start="27:13" pos:end="27:18"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:18">lfe</name></name></expr>)</condition> <block pos:start="27:21" pos:end="30:9">{<block_content pos:start="28:13" pos:end="29:69">
            <expr_stmt pos:start="28:13" pos:end="28:54"><expr pos:start="28:13" pos:end="28:53"><name pos:start="28:13" pos:end="28:33"><name pos:start="28:13" pos:end="28:17">avctx</name><operator pos:start="28:18" pos:end="28:19">-&gt;</operator><name pos:start="28:20" pos:end="28:33">channel_layout</name></name> <operator pos:start="28:35" pos:end="28:36">|=</operator> <name pos:start="28:38" pos:end="28:53">CH_LOW_FREQUENCY</name></expr>;</expr_stmt>
            <expr_stmt pos:start="29:13" pos:end="29:69"><expr pos:start="29:13" pos:end="29:68"><name pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:32">channel_order_tab</name></name> <operator pos:start="29:34" pos:end="29:34">=</operator> <name pos:start="29:36" pos:end="29:68"><name pos:start="29:36" pos:end="29:58">dca_channel_reorder_lfe</name><index pos:start="29:59" pos:end="29:68">[<expr pos:start="29:60" pos:end="29:67"><name pos:start="29:60" pos:end="29:67"><name pos:start="29:60" pos:end="29:60">s</name><operator pos:start="29:61" pos:end="29:62">-&gt;</operator><name pos:start="29:63" pos:end="29:67">amode</name></name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="30:11" pos:end="31:71">else<block type="pseudo" pos:start="31:13" pos:end="31:71"><block_content pos:start="31:13" pos:end="31:71">
            <expr_stmt pos:start="31:13" pos:end="31:71"><expr pos:start="31:13" pos:end="31:70"><name pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:32">channel_order_tab</name></name> <operator pos:start="31:34" pos:end="31:34">=</operator> <name pos:start="31:36" pos:end="31:70"><name pos:start="31:36" pos:end="31:60">dca_channel_reorder_nolfe</name><index pos:start="31:61" pos:end="31:70">[<expr pos:start="31:62" pos:end="31:69"><name pos:start="31:62" pos:end="31:69"><name pos:start="31:62" pos:end="31:62">s</name><operator pos:start="31:63" pos:end="31:64">-&gt;</operator><name pos:start="31:65" pos:end="31:69">amode</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <if_stmt pos:start="32:9" pos:end="36:9"><if pos:start="32:9" pos:end="36:9">if<condition pos:start="32:11" pos:end="32:64">(<expr pos:start="32:12" pos:end="32:63"><name pos:start="32:12" pos:end="32:34"><name pos:start="32:12" pos:end="32:16">avctx</name><operator pos:start="32:17" pos:end="32:18">-&gt;</operator><name pos:start="32:19" pos:end="32:34">request_channels</name></name> <operator pos:start="32:36" pos:end="32:37">==</operator> <literal type="number" pos:start="32:39" pos:end="32:39">2</literal> <operator pos:start="32:41" pos:end="32:42">&amp;&amp;</operator> <name pos:start="32:44" pos:end="32:59"><name pos:start="32:44" pos:end="32:44">s</name><operator pos:start="32:45" pos:end="32:46">-&gt;</operator><name pos:start="32:47" pos:end="32:59">prim_channels</name></name> <operator pos:start="32:61" pos:end="32:61">&gt;</operator> <literal type="number" pos:start="32:63" pos:end="32:63">2</literal></expr>)</condition> <block pos:start="32:66" pos:end="36:9">{<block_content pos:start="33:13" pos:end="35:53">
            <expr_stmt pos:start="33:13" pos:end="33:25"><expr pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:20">channels</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <literal type="number" pos:start="33:24" pos:end="33:24">2</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="34:13" pos:end="34:35"><expr pos:start="34:13" pos:end="34:34"><name pos:start="34:13" pos:end="34:21"><name pos:start="34:13" pos:end="34:13">s</name><operator pos:start="34:14" pos:end="34:15">-&gt;</operator><name pos:start="34:16" pos:end="34:21">output</name></name> <operator pos:start="34:23" pos:end="34:23">=</operator> <name pos:start="34:25" pos:end="34:34">DCA_STEREO</name></expr>;</expr_stmt>
            <expr_stmt pos:start="35:13" pos:end="35:53"><expr pos:start="35:13" pos:end="35:52"><name pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:17">avctx</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:33">channel_layout</name></name> <operator pos:start="35:35" pos:end="35:35">=</operator> <name pos:start="35:37" pos:end="35:52">CH_LAYOUT_STEREO</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if> <else pos:start="37:7" pos:end="39:5">else <block pos:start="37:12" pos:end="39:5">{<block_content pos:start="38:9" pos:end="38:82">
        <expr_stmt pos:start="38:9" pos:end="38:82"><expr pos:start="38:9" pos:end="38:81"><call pos:start="38:9" pos:end="38:81"><name pos:start="38:9" pos:end="38:14">av_log</name><argument_list pos:start="38:15" pos:end="38:81">(<argument pos:start="38:16" pos:end="38:20"><expr pos:start="38:16" pos:end="38:20"><name pos:start="38:16" pos:end="38:20">avctx</name></expr></argument>, <argument pos:start="38:23" pos:end="38:34"><expr pos:start="38:23" pos:end="38:34"><name pos:start="38:23" pos:end="38:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="38:37" pos:end="38:71"><expr pos:start="38:37" pos:end="38:71"><literal type="string" pos:start="38:37" pos:end="38:71">"Non standard configuration %d !\n"</literal></expr></argument>,<argument pos:start="38:73" pos:end="38:80"><expr pos:start="38:73" pos:end="38:80"><name pos:start="38:73" pos:end="38:80"><name pos:start="38:73" pos:end="38:73">s</name><operator pos:start="38:74" pos:end="38:75">-&gt;</operator><name pos:start="38:76" pos:end="38:80">amode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <comment type="block" pos:start="40:5" pos:end="44:56">/* There is nothing that prevents a dts frame to change channel configuration
       but FFmpeg doesn't support that so only set the channels if it is previously
       unset. Ideally during the first probe for channels the crc should be checked
       and only set avctx-&gt;channels when the crc is ok. Right now the decoder could
       set the channels based on a broken first frame.*/</comment>
    <if_stmt pos:start="45:5" pos:end="46:35"><if pos:start="45:5" pos:end="46:35">if <condition pos:start="45:8" pos:end="45:25">(<expr pos:start="45:9" pos:end="45:24"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:24"><name pos:start="45:10" pos:end="45:14">avctx</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:24">channels</name></name></expr>)</condition><block type="pseudo" pos:start="46:9" pos:end="46:35"><block_content pos:start="46:9" pos:end="46:35">
        <expr_stmt pos:start="46:9" pos:end="46:35"><expr pos:start="46:9" pos:end="46:34"><name pos:start="46:9" pos:end="46:23"><name pos:start="46:9" pos:end="46:13">avctx</name><operator pos:start="46:14" pos:end="46:15">-&gt;</operator><name pos:start="46:16" pos:end="46:23">channels</name></name> <operator pos:start="46:25" pos:end="46:25">=</operator> <name pos:start="46:27" pos:end="46:34">channels</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="47:5" pos:end="48:73"><if pos:start="47:5" pos:end="48:73">if<condition pos:start="47:7" pos:end="47:78">(<expr pos:start="47:8" pos:end="47:77"><operator pos:start="47:8" pos:end="47:8">*</operator><name pos:start="47:9" pos:end="47:17">data_size</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <operator pos:start="47:21" pos:end="47:21">(</operator><name pos:start="47:22" pos:end="47:37"><name pos:start="47:22" pos:end="47:22">s</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:37">sample_blocks</name></name> <operator pos:start="47:39" pos:end="47:39">/</operator> <literal type="number" pos:start="47:41" pos:end="47:41">8</literal><operator pos:start="47:42" pos:end="47:42">)</operator> <operator pos:start="47:44" pos:end="47:44">*</operator> <literal type="number" pos:start="47:46" pos:end="47:48">256</literal> <operator pos:start="47:50" pos:end="47:50">*</operator> <sizeof pos:start="47:52" pos:end="47:66">sizeof<argument_list pos:start="47:58" pos:end="47:66">(<argument pos:start="47:59" pos:end="47:65"><expr pos:start="47:59" pos:end="47:65"><name pos:start="47:59" pos:end="47:65">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="47:68" pos:end="47:68">*</operator> <name pos:start="47:70" pos:end="47:77">channels</name></expr>)</condition><block type="pseudo" pos:start="48:5" pos:end="48:73"><block_content pos:start="48:5" pos:end="48:73">
    <expr_stmt pos:start="48:5" pos:end="48:73"><expr pos:start="48:5" pos:end="48:72"><operator pos:start="48:5" pos:end="48:5">*</operator><name pos:start="48:6" pos:end="48:14">data_size</name> <operator pos:start="48:16" pos:end="48:16">=</operator> <literal type="number" pos:start="48:18" pos:end="48:20">256</literal> <operator pos:start="48:22" pos:end="48:22">/</operator> <literal type="number" pos:start="48:24" pos:end="48:24">8</literal> <operator pos:start="48:26" pos:end="48:26">*</operator> <name pos:start="48:28" pos:end="48:43"><name pos:start="48:28" pos:end="48:28">s</name><operator pos:start="48:29" pos:end="48:30">-&gt;</operator><name pos:start="48:31" pos:end="48:43">sample_blocks</name></name> <operator pos:start="48:45" pos:end="48:45">*</operator> <sizeof pos:start="48:47" pos:end="48:61">sizeof<argument_list pos:start="48:53" pos:end="48:61">(<argument pos:start="48:54" pos:end="48:60"><expr pos:start="48:54" pos:end="48:60"><name pos:start="48:54" pos:end="48:60">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="48:63" pos:end="48:63">*</operator> <name pos:start="48:65" pos:end="48:72">channels</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <for pos:start="49:5" pos:end="53:5">for <control pos:start="49:9" pos:end="49:48">(<init pos:start="49:10" pos:end="49:15"><expr pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:10">i</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr>;</init> <condition pos:start="49:17" pos:end="49:43"><expr pos:start="49:17" pos:end="49:42"><name pos:start="49:17" pos:end="49:17">i</name> <operator pos:start="49:19" pos:end="49:19">&lt;</operator> <operator pos:start="49:21" pos:end="49:21">(</operator><name pos:start="49:22" pos:end="49:37"><name pos:start="49:22" pos:end="49:22">s</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:37">sample_blocks</name></name> <operator pos:start="49:39" pos:end="49:39">/</operator> <literal type="number" pos:start="49:41" pos:end="49:41">8</literal><operator pos:start="49:42" pos:end="49:42">)</operator></expr>;</condition> <incr pos:start="49:45" pos:end="49:47"><expr pos:start="49:45" pos:end="49:47"><name pos:start="49:45" pos:end="49:45">i</name><operator pos:start="49:46" pos:end="49:47">++</operator></expr></incr>)</control> <block pos:start="49:50" pos:end="53:5">{<block_content pos:start="50:9" pos:end="52:34">
        <expr_stmt pos:start="50:9" pos:end="50:28"><expr pos:start="50:9" pos:end="50:27"><call pos:start="50:9" pos:end="50:27"><name pos:start="50:9" pos:end="50:24">dca_decode_block</name><argument_list pos:start="50:25" pos:end="50:27">(<argument pos:start="50:26" pos:end="50:26"><expr pos:start="50:26" pos:end="50:26"><name pos:start="50:26" pos:end="50:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="51:9" pos:end="51:85"><expr pos:start="51:9" pos:end="51:84"><call pos:start="51:9" pos:end="51:84"><name pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:14">dsp</name><operator pos:start="51:15" pos:end="51:15">.</operator><name pos:start="51:16" pos:end="51:40">float_to_int16_interleave</name></name><argument_list pos:start="51:41" pos:end="51:84">(<argument pos:start="51:42" pos:end="51:48"><expr pos:start="51:42" pos:end="51:48"><name pos:start="51:42" pos:end="51:48">samples</name></expr></argument>, <argument pos:start="51:51" pos:end="51:68"><expr pos:start="51:51" pos:end="51:68"><name pos:start="51:51" pos:end="51:68"><name pos:start="51:51" pos:end="51:51">s</name><operator pos:start="51:52" pos:end="51:53">-&gt;</operator><name pos:start="51:54" pos:end="51:68">samples_chanptr</name></name></expr></argument>, <argument pos:start="51:71" pos:end="51:73"><expr pos:start="51:71" pos:end="51:73"><literal type="number" pos:start="51:71" pos:end="51:73">256</literal></expr></argument>, <argument pos:start="51:76" pos:end="51:83"><expr pos:start="51:76" pos:end="51:83"><name pos:start="51:76" pos:end="51:83">channels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="52:9" pos:end="52:34"><expr pos:start="52:9" pos:end="52:33"><name pos:start="52:9" pos:end="52:15">samples</name> <operator pos:start="52:17" pos:end="52:18">+=</operator> <literal type="number" pos:start="52:20" pos:end="52:22">256</literal> <operator pos:start="52:24" pos:end="52:24">*</operator> <name pos:start="52:26" pos:end="52:33">channels</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="54:5" pos:end="54:20">return <expr pos:start="54:12" pos:end="54:19"><name pos:start="54:12" pos:end="54:19">buf_size</name></expr>;</return>
</block_content>}</block></function></unit>
