<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6639.c" pos:tabs="8"><function pos:start="1:1" pos:end="100:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">gboolean</name></type> <name pos:start="1:17" pos:end="1:39">guest_exec_output_watch</name><parameter_list pos:start="1:40" pos:end="3:39">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:50">GIOChannel</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">ch</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:25"><decl pos:start="3:9" pos:end="3:25"><type pos:start="3:9" pos:end="3:25"><name pos:start="3:9" pos:end="3:20">GIOCondition</name></type> <name pos:start="3:22" pos:end="3:25">cond</name></decl></parameter>, <parameter pos:start="3:28" pos:end="3:38"><decl pos:start="3:28" pos:end="3:38"><type pos:start="3:28" pos:end="3:38"><name pos:start="3:28" pos:end="3:35">gpointer</name></type> <name pos:start="3:37" pos:end="3:38">p_</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="100:1">{<block_content pos:start="7:5" pos:end="98:17">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">GuestExecIOData</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">p</name> <init pos:start="7:24" pos:end="7:46">= <expr pos:start="7:26" pos:end="7:46"><operator pos:start="7:26" pos:end="7:26">(</operator><name pos:start="7:27" pos:end="7:41">GuestExecIOData</name> <operator pos:start="7:43" pos:end="7:43">*</operator><operator pos:start="7:44" pos:end="7:44">)</operator><name pos:start="7:45" pos:end="7:46">p_</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">gsize</name></type> <name pos:start="9:11" pos:end="9:20">bytes_read</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">GIOStatus</name></type> <name pos:start="11:15" pos:end="11:21">gstatus</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:45">(<expr pos:start="15:9" pos:end="15:44"><name pos:start="15:9" pos:end="15:12">cond</name> <operator pos:start="15:14" pos:end="15:15">==</operator> <name pos:start="15:17" pos:end="15:24">G_IO_HUP</name> <operator pos:start="15:26" pos:end="15:27">||</operator> <name pos:start="15:29" pos:end="15:32">cond</name> <operator pos:start="15:34" pos:end="15:35">==</operator> <name pos:start="15:37" pos:end="15:44">G_IO_ERR</name></expr>)</condition> <block pos:start="15:47" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:19">

        <goto pos:start="17:9" pos:end="17:19">goto <name pos:start="17:14" pos:end="17:18">close</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="63:5"><if pos:start="23:5" pos:end="63:5">if <condition pos:start="23:8" pos:end="23:29">(<expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:9">p</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">size</name></name> <operator pos:start="23:17" pos:end="23:18">==</operator> <name pos:start="23:20" pos:end="23:28"><name pos:start="23:20" pos:end="23:20">p</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:28">length</name></name></expr>)</condition> <block pos:start="23:31" pos:end="63:5">{<block_content pos:start="25:9" pos:end="61:20">

        <decl_stmt pos:start="25:9" pos:end="25:26"><decl pos:start="25:9" pos:end="25:25"><type pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:16">gpointer</name></type> <name pos:start="25:18" pos:end="25:18">t</name> <init pos:start="25:20" pos:end="25:25">= <expr pos:start="25:22" pos:end="25:25"><name pos:start="25:22" pos:end="25:25">NULL</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:61">(<expr pos:start="27:13" pos:end="27:60"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:25"><name pos:start="27:14" pos:end="27:14">p</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:25">truncated</name></name> <operator pos:start="27:27" pos:end="27:28">&amp;&amp;</operator> <name pos:start="27:30" pos:end="27:36"><name pos:start="27:30" pos:end="27:30">p</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:36">size</name></name> <operator pos:start="27:38" pos:end="27:38">&lt;</operator> <name pos:start="27:40" pos:end="27:60">GUEST_EXEC_MAX_OUTPUT</name></expr>)</condition> <block pos:start="27:63" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:69">

            <expr_stmt pos:start="29:13" pos:end="29:69"><expr pos:start="29:13" pos:end="29:68"><name pos:start="29:13" pos:end="29:13">t</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:68"><name pos:start="29:17" pos:end="29:29">g_try_realloc</name><argument_list pos:start="29:30" pos:end="29:68">(<argument pos:start="29:31" pos:end="29:37"><expr pos:start="29:31" pos:end="29:37"><name pos:start="29:31" pos:end="29:37"><name pos:start="29:31" pos:end="29:31">p</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:37">data</name></name></expr></argument>, <argument pos:start="29:40" pos:end="29:67"><expr pos:start="29:40" pos:end="29:67"><name pos:start="29:40" pos:end="29:46"><name pos:start="29:40" pos:end="29:40">p</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:46">size</name></name> <operator pos:start="29:48" pos:end="29:48">+</operator> <name pos:start="29:50" pos:end="29:67">GUEST_EXEC_IO_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="57:9"><if pos:start="33:9" pos:end="57:9">if <condition pos:start="33:12" pos:end="33:22">(<expr pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:13">t</name> <operator pos:start="33:15" pos:end="33:16">==</operator> <name pos:start="33:18" pos:end="33:21">NULL</name></expr>)</condition> <block pos:start="33:24" pos:end="57:9">{<block_content pos:start="37:13" pos:end="55:24">

            <comment type="block" pos:start="35:13" pos:end="35:41">/* ignore truncated output */</comment>

            <decl_stmt pos:start="37:13" pos:end="37:42"><decl pos:start="37:13" pos:end="37:41"><type pos:start="37:13" pos:end="37:17"><name pos:start="37:13" pos:end="37:17">gchar</name></type> <name pos:start="37:19" pos:end="37:41"><name pos:start="37:19" pos:end="37:21">buf</name><index pos:start="37:22" pos:end="37:41">[<expr pos:start="37:23" pos:end="37:40"><name pos:start="37:23" pos:end="37:40">GUEST_EXEC_IO_SIZE</name></expr>]</index></name></decl>;</decl_stmt>



            <expr_stmt pos:start="41:13" pos:end="41:32"><expr pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:13">p</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:24">truncated</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <name pos:start="41:28" pos:end="41:31">true</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="45:65"><expr pos:start="43:13" pos:end="45:64"><name pos:start="43:13" pos:end="43:19">gstatus</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <call pos:start="43:23" pos:end="45:64"><name pos:start="43:23" pos:end="43:45">g_io_channel_read_chars</name><argument_list pos:start="43:46" pos:end="45:64">(<argument pos:start="43:47" pos:end="43:48"><expr pos:start="43:47" pos:end="43:48"><name pos:start="43:47" pos:end="43:48">ch</name></expr></argument>, <argument pos:start="43:51" pos:end="43:53"><expr pos:start="43:51" pos:end="43:53"><name pos:start="43:51" pos:end="43:53">buf</name></expr></argument>, <argument pos:start="43:56" pos:end="43:66"><expr pos:start="43:56" pos:end="43:66"><sizeof pos:start="43:56" pos:end="43:66">sizeof<argument_list pos:start="43:62" pos:end="43:66">(<argument pos:start="43:63" pos:end="43:65"><expr pos:start="43:63" pos:end="43:65"><name pos:start="43:63" pos:end="43:65">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                              <argument pos:start="45:47" pos:end="45:57"><expr pos:start="45:47" pos:end="45:57"><operator pos:start="45:47" pos:end="45:47">&amp;</operator><name pos:start="45:48" pos:end="45:57">bytes_read</name></expr></argument>, <argument pos:start="45:60" pos:end="45:63"><expr pos:start="45:60" pos:end="45:63"><name pos:start="45:60" pos:end="45:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="51:13"><if pos:start="47:13" pos:end="51:13">if <condition pos:start="47:16" pos:end="47:75">(<expr pos:start="47:17" pos:end="47:74"><name pos:start="47:17" pos:end="47:23">gstatus</name> <operator pos:start="47:25" pos:end="47:26">==</operator> <name pos:start="47:28" pos:end="47:42">G_IO_STATUS_EOF</name> <operator pos:start="47:44" pos:end="47:45">||</operator> <name pos:start="47:47" pos:end="47:53">gstatus</name> <operator pos:start="47:55" pos:end="47:56">==</operator> <name pos:start="47:58" pos:end="47:74">G_IO_STATUS_ERROR</name></expr>)</condition> <block pos:start="47:77" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:27">

                <goto pos:start="49:17" pos:end="49:27">goto <name pos:start="49:22" pos:end="49:26">close</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <return pos:start="55:13" pos:end="55:24">return <expr pos:start="55:20" pos:end="55:23"><name pos:start="55:20" pos:end="55:23">true</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:9">p</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:15">size</name></name> <operator pos:start="59:17" pos:end="59:18">+=</operator> <name pos:start="59:20" pos:end="59:37">GUEST_EXEC_IO_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:20"><expr pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:9">p</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:15">data</name></name> <operator pos:start="61:17" pos:end="61:17">=</operator> <name pos:start="61:19" pos:end="61:19">t</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="67:5" pos:end="69:66">/* Calling read API once.

     * On next available data our callback will be called again */</comment>

    <expr_stmt pos:start="71:5" pos:end="73:52"><expr pos:start="71:5" pos:end="73:51"><name pos:start="71:5" pos:end="71:11">gstatus</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="73:51"><name pos:start="71:15" pos:end="71:37">g_io_channel_read_chars</name><argument_list pos:start="71:38" pos:end="73:51">(<argument pos:start="71:39" pos:end="71:40"><expr pos:start="71:39" pos:end="71:40"><name pos:start="71:39" pos:end="71:40">ch</name></expr></argument>, <argument pos:start="71:43" pos:end="71:70"><expr pos:start="71:43" pos:end="71:70"><operator pos:start="71:43" pos:end="71:43">(</operator><name pos:start="71:44" pos:end="71:48">gchar</name> <operator pos:start="71:50" pos:end="71:50">*</operator><operator pos:start="71:51" pos:end="71:51">)</operator><name pos:start="71:52" pos:end="71:58"><name pos:start="71:52" pos:end="71:52">p</name><operator pos:start="71:53" pos:end="71:54">-&gt;</operator><name pos:start="71:55" pos:end="71:58">data</name></name> <operator pos:start="71:60" pos:end="71:60">+</operator> <name pos:start="71:62" pos:end="71:70"><name pos:start="71:62" pos:end="71:62">p</name><operator pos:start="71:63" pos:end="71:64">-&gt;</operator><name pos:start="71:65" pos:end="71:70">length</name></name></expr></argument>,

            <argument pos:start="73:13" pos:end="73:31"><expr pos:start="73:13" pos:end="73:31"><name pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:13">p</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:19">size</name></name> <operator pos:start="73:21" pos:end="73:21">-</operator> <name pos:start="73:23" pos:end="73:31"><name pos:start="73:23" pos:end="73:23">p</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:31">length</name></name></expr></argument>, <argument pos:start="73:34" pos:end="73:44"><expr pos:start="73:34" pos:end="73:44"><operator pos:start="73:34" pos:end="73:34">&amp;</operator><name pos:start="73:35" pos:end="73:44">bytes_read</name></expr></argument>, <argument pos:start="73:47" pos:end="73:50"><expr pos:start="73:47" pos:end="73:50"><name pos:start="73:47" pos:end="73:50">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:67">(<expr pos:start="75:9" pos:end="75:66"><name pos:start="75:9" pos:end="75:15">gstatus</name> <operator pos:start="75:17" pos:end="75:18">==</operator> <name pos:start="75:20" pos:end="75:34">G_IO_STATUS_EOF</name> <operator pos:start="75:36" pos:end="75:37">||</operator> <name pos:start="75:39" pos:end="75:45">gstatus</name> <operator pos:start="75:47" pos:end="75:48">==</operator> <name pos:start="75:50" pos:end="75:66">G_IO_STATUS_ERROR</name></expr>)</condition> <block pos:start="75:69" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:19">

        <goto pos:start="77:9" pos:end="77:19">goto <name pos:start="77:14" pos:end="77:18">close</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:28"><expr pos:start="83:5" pos:end="83:27"><name pos:start="83:5" pos:end="83:13"><name pos:start="83:5" pos:end="83:5">p</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:13">length</name></name> <operator pos:start="83:15" pos:end="83:16">+=</operator> <name pos:start="83:18" pos:end="83:27">bytes_read</name></expr>;</expr_stmt>



    <return pos:start="87:5" pos:end="87:16">return <expr pos:start="87:12" pos:end="87:15"><name pos:start="87:12" pos:end="87:15">true</name></expr>;</return>



<label pos:start="91:1" pos:end="91:6"><name pos:start="91:1" pos:end="91:5">close</name>:</label>


    <expr_stmt pos:start="94:5" pos:end="94:27"><expr pos:start="94:5" pos:end="94:26"><call pos:start="94:5" pos:end="94:26"><name pos:start="94:5" pos:end="94:22">g_io_channel_unref</name><argument_list pos:start="94:23" pos:end="94:26">(<argument pos:start="94:24" pos:end="94:25"><expr pos:start="94:24" pos:end="94:25"><name pos:start="94:24" pos:end="94:25">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="96:5" pos:end="96:36"><expr pos:start="96:5" pos:end="96:35"><call pos:start="96:5" pos:end="96:35"><name pos:start="96:5" pos:end="96:20">g_atomic_int_set</name><argument_list pos:start="96:21" pos:end="96:35">(<argument pos:start="96:22" pos:end="96:31"><expr pos:start="96:22" pos:end="96:31"><operator pos:start="96:22" pos:end="96:22">&amp;</operator><name pos:start="96:23" pos:end="96:31"><name pos:start="96:23" pos:end="96:23">p</name><operator pos:start="96:24" pos:end="96:25">-&gt;</operator><name pos:start="96:26" pos:end="96:31">closed</name></name></expr></argument>, <argument pos:start="96:34" pos:end="96:34"><expr pos:start="96:34" pos:end="96:34"><literal type="number" pos:start="96:34" pos:end="96:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="98:5" pos:end="98:17">return <expr pos:start="98:12" pos:end="98:16"><name pos:start="98:12" pos:end="98:16">false</name></expr>;</return>

</block_content>}</block></function></unit>
