<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8905.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:6">soread</name><argument_list pos:start="1:7" pos:end="1:10">(<argument pos:start="1:8" pos:end="1:9">so</argument>)</argument_list></macro>

	<decl_stmt pos:start="3:9" pos:end="3:26"><decl pos:start="3:9" pos:end="3:25"><type pos:start="3:9" pos:end="3:23"><name pos:start="3:9" pos:end="3:21"><name pos:start="3:9" pos:end="3:14">struct</name> <name pos:start="3:16" pos:end="3:21">socket</name></name> <modifier pos:start="3:23" pos:end="3:23">*</modifier></type><name pos:start="3:24" pos:end="3:25">so</name></decl>;</decl_stmt>

<block pos:start="5:1" pos:end="205:1">{<block_content pos:start="7:9" pos:end="203:18">

	<decl_stmt pos:start="7:9" pos:end="7:30"><decl pos:start="7:9" pos:end="7:13"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">n</name></decl>, <decl pos:start="7:16" pos:end="7:17"><type ref="prev" pos:start="7:9" pos:end="7:11"/><name pos:start="7:16" pos:end="7:17">nn</name></decl>, <decl pos:start="7:20" pos:end="7:22"><type ref="prev" pos:start="7:9" pos:end="7:11"/><name pos:start="7:20" pos:end="7:22">lss</name></decl>, <decl pos:start="7:25" pos:end="7:29"><type ref="prev" pos:start="7:9" pos:end="7:11"/><name pos:start="7:25" pos:end="7:29">total</name></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:38"><decl pos:start="9:9" pos:end="9:37"><type pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:14">struct</name> <name pos:start="9:16" pos:end="9:19">sbuf</name></name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:23">sb</name> <init pos:start="9:25" pos:end="9:37">= <expr pos:start="9:27" pos:end="9:37"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:37"><name pos:start="9:28" pos:end="9:29">so</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:37">so_snd</name></name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:45"><decl pos:start="11:9" pos:end="11:44"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:15">len</name> <init pos:start="11:17" pos:end="11:44">= <expr pos:start="11:19" pos:end="11:44"><name pos:start="11:19" pos:end="11:32"><name pos:start="11:19" pos:end="11:20">sb</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:32">sb_datalen</name></name> <operator pos:start="11:34" pos:end="11:34">-</operator> <name pos:start="11:36" pos:end="11:44"><name pos:start="11:36" pos:end="11:37">sb</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:44">sb_cc</name></name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="13:9" pos:end="13:28"><decl pos:start="13:9" pos:end="13:27"><type pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:14">struct</name> <name pos:start="13:16" pos:end="13:20">iovec</name></name></type> <name pos:start="13:22" pos:end="13:27"><name pos:start="13:22" pos:end="13:24">iov</name><index pos:start="13:25" pos:end="13:27">[<expr pos:start="13:26" pos:end="13:26"><literal type="number" pos:start="13:26" pos:end="13:26">2</literal></expr>]</index></name></decl>;</decl_stmt>

	<decl_stmt pos:start="15:9" pos:end="15:41"><decl pos:start="15:9" pos:end="15:40"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:15">mss</name> <init pos:start="15:17" pos:end="15:40">= <expr pos:start="15:19" pos:end="15:40"><name pos:start="15:19" pos:end="15:40"><name pos:start="15:19" pos:end="15:20">so</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:30">so_tcpcb</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:40">t_maxseg</name></name></expr></init></decl>;</decl_stmt>



	<expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><call pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:18">DEBUG_CALL</name><argument_list pos:start="19:19" pos:end="19:28">(<argument pos:start="19:20" pos:end="19:27"><expr pos:start="19:20" pos:end="19:27"><literal type="string" pos:start="19:20" pos:end="19:27">"soread"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="21:9" pos:end="21:41"><expr pos:start="21:9" pos:end="21:40"><call pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:17">DEBUG_ARG</name><argument_list pos:start="21:18" pos:end="21:40">(<argument pos:start="21:19" pos:end="21:28"><expr pos:start="21:19" pos:end="21:28"><literal type="string" pos:start="21:19" pos:end="21:28">"so = %lx"</literal></expr></argument>, <argument pos:start="21:31" pos:end="21:39"><expr pos:start="21:31" pos:end="21:39"><operator pos:start="21:31" pos:end="21:31">(</operator><name pos:start="21:32" pos:end="21:35">long</name> <operator pos:start="21:37" pos:end="21:37">)</operator><name pos:start="21:38" pos:end="21:39">so</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<comment type="block" pos:start="25:9" pos:end="31:11">/*

	 * No need to check if there's enough room to read.

	 * soread wouldn't have been called if there weren't

	 */</comment>



	<expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:11">len</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:28"><name pos:start="35:15" pos:end="35:16">sb</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:28">sb_datalen</name></name> <operator pos:start="35:30" pos:end="35:30">-</operator> <name pos:start="35:32" pos:end="35:40"><name pos:start="35:32" pos:end="35:33">sb</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:40">sb_cc</name></name></expr>;</expr_stmt>



	<expr_stmt pos:start="39:9" pos:end="39:38"><expr pos:start="39:9" pos:end="39:37"><name pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:11">iov</name><index pos:start="39:12" pos:end="39:14">[<expr pos:start="39:13" pos:end="39:13"><literal type="number" pos:start="39:13" pos:end="39:13">0</literal></expr>]</index></name><operator pos:start="39:15" pos:end="39:15">.</operator><name pos:start="39:16" pos:end="39:23">iov_base</name> <operator pos:start="39:25" pos:end="39:25">=</operator> <name pos:start="39:27" pos:end="39:37"><name pos:start="39:27" pos:end="39:28">sb</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:37">sb_wptr</name></name></expr>;</expr_stmt>



	<if_stmt pos:start="43:9" pos:end="120:0"><if pos:start="43:9" pos:end="59:9">if <condition pos:start="43:12" pos:end="43:38">(<expr pos:start="43:13" pos:end="43:37"><name pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:14">sb</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:23">sb_wptr</name></name> <operator pos:start="43:25" pos:end="43:25">&lt;</operator> <name pos:start="43:27" pos:end="43:37"><name pos:start="43:27" pos:end="43:28">sb</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:37">sb_rptr</name></name></expr>)</condition> <block pos:start="43:40" pos:end="59:9">{<block_content pos:start="45:17" pos:end="57:22">

		<expr_stmt pos:start="45:17" pos:end="45:59"><expr pos:start="45:17" pos:end="45:58"><name pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:19">iov</name><index pos:start="45:20" pos:end="45:22">[<expr pos:start="45:21" pos:end="45:21"><literal type="number" pos:start="45:21" pos:end="45:21">0</literal></expr>]</index></name><operator pos:start="45:23" pos:end="45:23">.</operator><name pos:start="45:24" pos:end="45:30">iov_len</name> <operator pos:start="45:32" pos:end="45:32">=</operator> <name pos:start="45:34" pos:end="45:44"><name pos:start="45:34" pos:end="45:35">sb</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:44">sb_rptr</name></name> <operator pos:start="45:46" pos:end="45:46">-</operator> <name pos:start="45:48" pos:end="45:58"><name pos:start="45:48" pos:end="45:49">sb</name><operator pos:start="45:50" pos:end="45:51">-&gt;</operator><name pos:start="45:52" pos:end="45:58">sb_wptr</name></name></expr>;</expr_stmt>

		<comment type="block" pos:start="47:17" pos:end="47:50">/* Should never succeed, but... */</comment>

		<if_stmt pos:start="49:17" pos:end="51:40"><if pos:start="49:17" pos:end="51:40">if <condition pos:start="49:20" pos:end="49:41">(<expr pos:start="49:21" pos:end="49:40"><name pos:start="49:21" pos:end="49:26"><name pos:start="49:21" pos:end="49:23">iov</name><index pos:start="49:24" pos:end="49:26">[<expr pos:start="49:25" pos:end="49:25"><literal type="number" pos:start="49:25" pos:end="49:25">0</literal></expr>]</index></name><operator pos:start="49:27" pos:end="49:27">.</operator><name pos:start="49:28" pos:end="49:34">iov_len</name> <operator pos:start="49:36" pos:end="49:36">&gt;</operator> <name pos:start="49:38" pos:end="49:40">len</name></expr>)</condition><block type="pseudo" pos:start="51:20" pos:end="51:40"><block_content pos:start="51:20" pos:end="51:40">

		   <expr_stmt pos:start="51:20" pos:end="51:40"><expr pos:start="51:20" pos:end="51:39"><name pos:start="51:20" pos:end="51:25"><name pos:start="51:20" pos:end="51:22">iov</name><index pos:start="51:23" pos:end="51:25">[<expr pos:start="51:24" pos:end="51:24"><literal type="number" pos:start="51:24" pos:end="51:24">0</literal></expr>]</index></name><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:33">iov_len</name> <operator pos:start="51:35" pos:end="51:35">=</operator> <name pos:start="51:37" pos:end="51:39">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<if_stmt pos:start="53:17" pos:end="55:56"><if pos:start="53:17" pos:end="55:56">if <condition pos:start="53:20" pos:end="53:41">(<expr pos:start="53:21" pos:end="53:40"><name pos:start="53:21" pos:end="53:26"><name pos:start="53:21" pos:end="53:23">iov</name><index pos:start="53:24" pos:end="53:26">[<expr pos:start="53:25" pos:end="53:25"><literal type="number" pos:start="53:25" pos:end="53:25">0</literal></expr>]</index></name><operator pos:start="53:27" pos:end="53:27">.</operator><name pos:start="53:28" pos:end="53:34">iov_len</name> <operator pos:start="53:36" pos:end="53:36">&gt;</operator> <name pos:start="53:38" pos:end="53:40">mss</name></expr>)</condition><block type="pseudo" pos:start="55:20" pos:end="55:56"><block_content pos:start="55:20" pos:end="55:56">

		   <expr_stmt pos:start="55:20" pos:end="55:56"><expr pos:start="55:20" pos:end="55:55"><name pos:start="55:20" pos:end="55:25"><name pos:start="55:20" pos:end="55:22">iov</name><index pos:start="55:23" pos:end="55:25">[<expr pos:start="55:24" pos:end="55:24"><literal type="number" pos:start="55:24" pos:end="55:24">0</literal></expr>]</index></name><operator pos:start="55:26" pos:end="55:26">.</operator><name pos:start="55:27" pos:end="55:33">iov_len</name> <operator pos:start="55:35" pos:end="55:36">-=</operator> <name pos:start="55:38" pos:end="55:43"><name pos:start="55:38" pos:end="55:40">iov</name><index pos:start="55:41" pos:end="55:43">[<expr pos:start="55:42" pos:end="55:42"><literal type="number" pos:start="55:42" pos:end="55:42">0</literal></expr>]</index></name><operator pos:start="55:44" pos:end="55:44">.</operator><name pos:start="55:45" pos:end="55:51">iov_len</name><operator pos:start="55:52" pos:end="55:52">%</operator><name pos:start="55:53" pos:end="55:55">mss</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<expr_stmt pos:start="57:17" pos:end="57:22"><expr pos:start="57:17" pos:end="57:21"><name pos:start="57:17" pos:end="57:17">n</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <literal type="number" pos:start="57:21" pos:end="57:21">1</literal></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="59:11" pos:end="120:0">else <block pos:start="59:16" pos:end="120:0">{<block_content pos:start="61:17" pos:end="113:17">

		<expr_stmt pos:start="61:17" pos:end="61:78"><expr pos:start="61:17" pos:end="61:77"><name pos:start="61:17" pos:end="61:22"><name pos:start="61:17" pos:end="61:19">iov</name><index pos:start="61:20" pos:end="61:22">[<expr pos:start="61:21" pos:end="61:21"><literal type="number" pos:start="61:21" pos:end="61:21">0</literal></expr>]</index></name><operator pos:start="61:23" pos:end="61:23">.</operator><name pos:start="61:24" pos:end="61:30">iov_len</name> <operator pos:start="61:32" pos:end="61:32">=</operator> <operator pos:start="61:34" pos:end="61:34">(</operator><name pos:start="61:35" pos:end="61:45"><name pos:start="61:35" pos:end="61:36">sb</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:45">sb_data</name></name> <operator pos:start="61:47" pos:end="61:47">+</operator> <name pos:start="61:49" pos:end="61:62"><name pos:start="61:49" pos:end="61:50">sb</name><operator pos:start="61:51" pos:end="61:52">-&gt;</operator><name pos:start="61:53" pos:end="61:62">sb_datalen</name></name><operator pos:start="61:63" pos:end="61:63">)</operator> <operator pos:start="61:65" pos:end="61:65">-</operator> <name pos:start="61:67" pos:end="61:77"><name pos:start="61:67" pos:end="61:68">sb</name><operator pos:start="61:69" pos:end="61:70">-&gt;</operator><name pos:start="61:71" pos:end="61:77">sb_wptr</name></name></expr>;</expr_stmt>

		<comment type="block" pos:start="63:17" pos:end="63:50">/* Should never succeed, but... */</comment>

		<if_stmt pos:start="65:17" pos:end="65:63"><if pos:start="65:17" pos:end="65:63">if <condition pos:start="65:20" pos:end="65:41">(<expr pos:start="65:21" pos:end="65:40"><name pos:start="65:21" pos:end="65:26"><name pos:start="65:21" pos:end="65:23">iov</name><index pos:start="65:24" pos:end="65:26">[<expr pos:start="65:25" pos:end="65:25"><literal type="number" pos:start="65:25" pos:end="65:25">0</literal></expr>]</index></name><operator pos:start="65:27" pos:end="65:27">.</operator><name pos:start="65:28" pos:end="65:34">iov_len</name> <operator pos:start="65:36" pos:end="65:36">&gt;</operator> <name pos:start="65:38" pos:end="65:40">len</name></expr>)</condition><block type="pseudo" pos:start="65:43" pos:end="65:63"><block_content pos:start="65:43" pos:end="65:63"> <expr_stmt pos:start="65:43" pos:end="65:63"><expr pos:start="65:43" pos:end="65:62"><name pos:start="65:43" pos:end="65:48"><name pos:start="65:43" pos:end="65:45">iov</name><index pos:start="65:46" pos:end="65:48">[<expr pos:start="65:47" pos:end="65:47"><literal type="number" pos:start="65:47" pos:end="65:47">0</literal></expr>]</index></name><operator pos:start="65:49" pos:end="65:49">.</operator><name pos:start="65:50" pos:end="65:56">iov_len</name> <operator pos:start="65:58" pos:end="65:58">=</operator> <name pos:start="65:60" pos:end="65:62">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<expr_stmt pos:start="67:17" pos:end="67:38"><expr pos:start="67:17" pos:end="67:37"><name pos:start="67:17" pos:end="67:19">len</name> <operator pos:start="67:21" pos:end="67:22">-=</operator> <name pos:start="67:24" pos:end="67:29"><name pos:start="67:24" pos:end="67:26">iov</name><index pos:start="67:27" pos:end="67:29">[<expr pos:start="67:28" pos:end="67:28"><literal type="number" pos:start="67:28" pos:end="67:28">0</literal></expr>]</index></name><operator pos:start="67:30" pos:end="67:30">.</operator><name pos:start="67:31" pos:end="67:37">iov_len</name></expr>;</expr_stmt>

		<if_stmt pos:start="69:17" pos:end="113:17"><if pos:start="69:17" pos:end="105:17">if <condition pos:start="69:20" pos:end="69:24">(<expr pos:start="69:21" pos:end="69:23"><name pos:start="69:21" pos:end="69:23">len</name></expr>)</condition> <block pos:start="69:26" pos:end="105:17">{<block_content pos:start="71:25" pos:end="103:38">

			<expr_stmt pos:start="71:25" pos:end="71:54"><expr pos:start="71:25" pos:end="71:53"><name pos:start="71:25" pos:end="71:30"><name pos:start="71:25" pos:end="71:27">iov</name><index pos:start="71:28" pos:end="71:30">[<expr pos:start="71:29" pos:end="71:29"><literal type="number" pos:start="71:29" pos:end="71:29">1</literal></expr>]</index></name><operator pos:start="71:31" pos:end="71:31">.</operator><name pos:start="71:32" pos:end="71:39">iov_base</name> <operator pos:start="71:41" pos:end="71:41">=</operator> <name pos:start="71:43" pos:end="71:53"><name pos:start="71:43" pos:end="71:44">sb</name><operator pos:start="71:45" pos:end="71:46">-&gt;</operator><name pos:start="71:47" pos:end="71:53">sb_data</name></name></expr>;</expr_stmt>

			<expr_stmt pos:start="73:25" pos:end="73:67"><expr pos:start="73:25" pos:end="73:66"><name pos:start="73:25" pos:end="73:30"><name pos:start="73:25" pos:end="73:27">iov</name><index pos:start="73:28" pos:end="73:30">[<expr pos:start="73:29" pos:end="73:29"><literal type="number" pos:start="73:29" pos:end="73:29">1</literal></expr>]</index></name><operator pos:start="73:31" pos:end="73:31">.</operator><name pos:start="73:32" pos:end="73:38">iov_len</name> <operator pos:start="73:40" pos:end="73:40">=</operator> <name pos:start="73:42" pos:end="73:52"><name pos:start="73:42" pos:end="73:43">sb</name><operator pos:start="73:44" pos:end="73:45">-&gt;</operator><name pos:start="73:46" pos:end="73:52">sb_rptr</name></name> <operator pos:start="73:54" pos:end="73:54">-</operator> <name pos:start="73:56" pos:end="73:66"><name pos:start="73:56" pos:end="73:57">sb</name><operator pos:start="73:58" pos:end="73:59">-&gt;</operator><name pos:start="73:60" pos:end="73:66">sb_data</name></name></expr>;</expr_stmt>

			<if_stmt pos:start="75:25" pos:end="77:48"><if pos:start="75:25" pos:end="77:48">if<condition pos:start="75:27" pos:end="75:48">(<expr pos:start="75:28" pos:end="75:47"><name pos:start="75:28" pos:end="75:33"><name pos:start="75:28" pos:end="75:30">iov</name><index pos:start="75:31" pos:end="75:33">[<expr pos:start="75:32" pos:end="75:32"><literal type="number" pos:start="75:32" pos:end="75:32">1</literal></expr>]</index></name><operator pos:start="75:34" pos:end="75:34">.</operator><name pos:start="75:35" pos:end="75:41">iov_len</name> <operator pos:start="75:43" pos:end="75:43">&gt;</operator> <name pos:start="75:45" pos:end="75:47">len</name></expr>)</condition><block type="pseudo" pos:start="77:28" pos:end="77:48"><block_content pos:start="77:28" pos:end="77:48">

			   <expr_stmt pos:start="77:28" pos:end="77:48"><expr pos:start="77:28" pos:end="77:47"><name pos:start="77:28" pos:end="77:33"><name pos:start="77:28" pos:end="77:30">iov</name><index pos:start="77:31" pos:end="77:33">[<expr pos:start="77:32" pos:end="77:32"><literal type="number" pos:start="77:32" pos:end="77:32">1</literal></expr>]</index></name><operator pos:start="77:34" pos:end="77:34">.</operator><name pos:start="77:35" pos:end="77:41">iov_len</name> <operator pos:start="77:43" pos:end="77:43">=</operator> <name pos:start="77:45" pos:end="77:47">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

			<expr_stmt pos:start="79:25" pos:end="79:64"><expr pos:start="79:25" pos:end="79:63"><name pos:start="79:25" pos:end="79:29">total</name> <operator pos:start="79:31" pos:end="79:31">=</operator> <name pos:start="79:33" pos:end="79:38"><name pos:start="79:33" pos:end="79:35">iov</name><index pos:start="79:36" pos:end="79:38">[<expr pos:start="79:37" pos:end="79:37"><literal type="number" pos:start="79:37" pos:end="79:37">0</literal></expr>]</index></name><operator pos:start="79:39" pos:end="79:39">.</operator><name pos:start="79:40" pos:end="79:46">iov_len</name> <operator pos:start="79:48" pos:end="79:48">+</operator> <name pos:start="79:50" pos:end="79:55"><name pos:start="79:50" pos:end="79:52">iov</name><index pos:start="79:53" pos:end="79:55">[<expr pos:start="79:54" pos:end="79:54"><literal type="number" pos:start="79:54" pos:end="79:54">1</literal></expr>]</index></name><operator pos:start="79:56" pos:end="79:56">.</operator><name pos:start="79:57" pos:end="79:63">iov_len</name></expr>;</expr_stmt>

			<if_stmt pos:start="81:25" pos:end="103:38"><if pos:start="81:25" pos:end="101:25">if <condition pos:start="81:28" pos:end="81:40">(<expr pos:start="81:29" pos:end="81:39"><name pos:start="81:29" pos:end="81:33">total</name> <operator pos:start="81:35" pos:end="81:35">&gt;</operator> <name pos:start="81:37" pos:end="81:39">mss</name></expr>)</condition> <block pos:start="81:42" pos:end="101:25">{<block_content pos:start="83:33" pos:end="99:33">

				<expr_stmt pos:start="83:33" pos:end="83:48"><expr pos:start="83:33" pos:end="83:47"><name pos:start="83:33" pos:end="83:35">lss</name> <operator pos:start="83:37" pos:end="83:37">=</operator> <name pos:start="83:39" pos:end="83:43">total</name><operator pos:start="83:44" pos:end="83:44">%</operator><name pos:start="83:45" pos:end="83:47">mss</name></expr>;</expr_stmt>

				<if_stmt pos:start="85:33" pos:end="99:33"><if pos:start="85:33" pos:end="91:33">if <condition pos:start="85:36" pos:end="85:57">(<expr pos:start="85:37" pos:end="85:56"><name pos:start="85:37" pos:end="85:42"><name pos:start="85:37" pos:end="85:39">iov</name><index pos:start="85:40" pos:end="85:42">[<expr pos:start="85:41" pos:end="85:41"><literal type="number" pos:start="85:41" pos:end="85:41">1</literal></expr>]</index></name><operator pos:start="85:43" pos:end="85:43">.</operator><name pos:start="85:44" pos:end="85:50">iov_len</name> <operator pos:start="85:52" pos:end="85:52">&gt;</operator> <name pos:start="85:54" pos:end="85:56">lss</name></expr>)</condition> <block pos:start="85:59" pos:end="91:33">{<block_content pos:start="87:41" pos:end="89:46">

					<expr_stmt pos:start="87:41" pos:end="87:62"><expr pos:start="87:41" pos:end="87:61"><name pos:start="87:41" pos:end="87:46"><name pos:start="87:41" pos:end="87:43">iov</name><index pos:start="87:44" pos:end="87:46">[<expr pos:start="87:45" pos:end="87:45"><literal type="number" pos:start="87:45" pos:end="87:45">1</literal></expr>]</index></name><operator pos:start="87:47" pos:end="87:47">.</operator><name pos:start="87:48" pos:end="87:54">iov_len</name> <operator pos:start="87:56" pos:end="87:57">-=</operator> <name pos:start="87:59" pos:end="87:61">lss</name></expr>;</expr_stmt>

					<expr_stmt pos:start="89:41" pos:end="89:46"><expr pos:start="89:41" pos:end="89:45"><name pos:start="89:41" pos:end="89:41">n</name> <operator pos:start="89:43" pos:end="89:43">=</operator> <literal type="number" pos:start="89:45" pos:end="89:45">2</literal></expr>;</expr_stmt>

				</block_content>}</block></if> <else pos:start="91:35" pos:end="99:33">else <block pos:start="91:40" pos:end="99:33">{<block_content pos:start="93:41" pos:end="97:46">

					<expr_stmt pos:start="93:41" pos:end="93:62"><expr pos:start="93:41" pos:end="93:61"><name pos:start="93:41" pos:end="93:43">lss</name> <operator pos:start="93:45" pos:end="93:46">-=</operator> <name pos:start="93:48" pos:end="93:53"><name pos:start="93:48" pos:end="93:50">iov</name><index pos:start="93:51" pos:end="93:53">[<expr pos:start="93:52" pos:end="93:52"><literal type="number" pos:start="93:52" pos:end="93:52">1</literal></expr>]</index></name><operator pos:start="93:54" pos:end="93:54">.</operator><name pos:start="93:55" pos:end="93:61">iov_len</name></expr>;</expr_stmt>

					<expr_stmt pos:start="95:41" pos:end="95:62"><expr pos:start="95:41" pos:end="95:61"><name pos:start="95:41" pos:end="95:46"><name pos:start="95:41" pos:end="95:43">iov</name><index pos:start="95:44" pos:end="95:46">[<expr pos:start="95:45" pos:end="95:45"><literal type="number" pos:start="95:45" pos:end="95:45">0</literal></expr>]</index></name><operator pos:start="95:47" pos:end="95:47">.</operator><name pos:start="95:48" pos:end="95:54">iov_len</name> <operator pos:start="95:56" pos:end="95:57">-=</operator> <name pos:start="95:59" pos:end="95:61">lss</name></expr>;</expr_stmt>

					<expr_stmt pos:start="97:41" pos:end="97:46"><expr pos:start="97:41" pos:end="97:45"><name pos:start="97:41" pos:end="97:41">n</name> <operator pos:start="97:43" pos:end="97:43">=</operator> <literal type="number" pos:start="97:45" pos:end="97:45">1</literal></expr>;</expr_stmt>

				</block_content>}</block></else></if_stmt>

			</block_content>}</block></if> <else pos:start="101:27" pos:end="103:38">else<block type="pseudo" pos:start="103:33" pos:end="103:38"><block_content pos:start="103:33" pos:end="103:38">

				<expr_stmt pos:start="103:33" pos:end="103:38"><expr pos:start="103:33" pos:end="103:37"><name pos:start="103:33" pos:end="103:33">n</name> <operator pos:start="103:35" pos:end="103:35">=</operator> <literal type="number" pos:start="103:37" pos:end="103:37">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

		</block_content>}</block></if> <else pos:start="105:19" pos:end="113:17">else <block pos:start="105:24" pos:end="113:17">{<block_content pos:start="107:25" pos:end="111:30">

			<if_stmt pos:start="107:25" pos:end="109:64"><if pos:start="107:25" pos:end="109:64">if <condition pos:start="107:28" pos:end="107:49">(<expr pos:start="107:29" pos:end="107:48"><name pos:start="107:29" pos:end="107:34"><name pos:start="107:29" pos:end="107:31">iov</name><index pos:start="107:32" pos:end="107:34">[<expr pos:start="107:33" pos:end="107:33"><literal type="number" pos:start="107:33" pos:end="107:33">0</literal></expr>]</index></name><operator pos:start="107:35" pos:end="107:35">.</operator><name pos:start="107:36" pos:end="107:42">iov_len</name> <operator pos:start="107:44" pos:end="107:44">&gt;</operator> <name pos:start="107:46" pos:end="107:48">mss</name></expr>)</condition><block type="pseudo" pos:start="109:28" pos:end="109:64"><block_content pos:start="109:28" pos:end="109:64">

			   <expr_stmt pos:start="109:28" pos:end="109:64"><expr pos:start="109:28" pos:end="109:63"><name pos:start="109:28" pos:end="109:33"><name pos:start="109:28" pos:end="109:30">iov</name><index pos:start="109:31" pos:end="109:33">[<expr pos:start="109:32" pos:end="109:32"><literal type="number" pos:start="109:32" pos:end="109:32">0</literal></expr>]</index></name><operator pos:start="109:34" pos:end="109:34">.</operator><name pos:start="109:35" pos:end="109:41">iov_len</name> <operator pos:start="109:43" pos:end="109:44">-=</operator> <name pos:start="109:46" pos:end="109:51"><name pos:start="109:46" pos:end="109:48">iov</name><index pos:start="109:49" pos:end="109:51">[<expr pos:start="109:50" pos:end="109:50"><literal type="number" pos:start="109:50" pos:end="109:50">0</literal></expr>]</index></name><operator pos:start="109:52" pos:end="109:52">.</operator><name pos:start="109:53" pos:end="109:59">iov_len</name><operator pos:start="109:60" pos:end="109:60">%</operator><name pos:start="109:61" pos:end="109:63">mss</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

			<expr_stmt pos:start="111:25" pos:end="111:30"><expr pos:start="111:25" pos:end="111:29"><name pos:start="111:25" pos:end="111:25">n</name> <operator pos:start="111:27" pos:end="111:27">=</operator> <literal type="number" pos:start="111:29" pos:end="111:29">1</literal></expr>;</expr_stmt>

		</block_content>}</block></else></if_stmt>

	</block_content>}</block></else></if_stmt>



<cpp:ifdef pos:start="119:1" pos:end="119:17">#<cpp:directive pos:start="119:2" pos:end="119:6">ifdef</cpp:directive> <name pos:start="119:8" pos:end="119:17">HAVE_READV</name></cpp:ifdef>

	<expr_stmt pos:start="121:9" pos:end="121:50"><expr pos:start="121:9" pos:end="121:49"><name pos:start="121:9" pos:end="121:10">nn</name> <operator pos:start="121:12" pos:end="121:12">=</operator> <call pos:start="121:14" pos:end="121:49"><name pos:start="121:14" pos:end="121:18">readv</name><argument_list pos:start="121:19" pos:end="121:49">(<argument pos:start="121:20" pos:end="121:24"><expr pos:start="121:20" pos:end="121:24"><name pos:start="121:20" pos:end="121:24"><name pos:start="121:20" pos:end="121:21">so</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:24">s</name></name></expr></argument>, <argument pos:start="121:27" pos:end="121:45"><expr pos:start="121:27" pos:end="121:45"><operator pos:start="121:27" pos:end="121:27">(</operator>struct <name pos:start="121:35" pos:end="121:39">iovec</name> <operator pos:start="121:41" pos:end="121:41">*</operator><operator pos:start="121:42" pos:end="121:42">)</operator><name pos:start="121:43" pos:end="121:45">iov</name></expr></argument>, <argument pos:start="121:48" pos:end="121:48"><expr pos:start="121:48" pos:end="121:48"><name pos:start="121:48" pos:end="121:48">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="123:9" pos:end="126:0"><expr pos:start="123:9" pos:end="123:58"><call pos:start="123:9" pos:end="123:58"><name pos:start="123:9" pos:end="123:18">DEBUG_MISC</name><argument_list pos:start="123:19" pos:end="123:58">(<argument pos:start="123:20" pos:end="123:57"><expr pos:start="123:20" pos:end="123:57"><operator pos:start="123:20" pos:end="123:20">(</operator><name pos:start="123:21" pos:end="123:23">dfd</name><operator pos:start="123:24" pos:end="123:24">,</operator> <literal type="string" pos:start="123:26" pos:end="123:52">" ... read nn = %d bytes\n"</literal><operator pos:start="123:53" pos:end="123:53">,</operator> <name pos:start="123:55" pos:end="123:56">nn</name><operator pos:start="123:57" pos:end="123:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="125:1" pos:end="125:5">#<cpp:directive pos:start="125:2" pos:end="125:5">else</cpp:directive></cpp:else>

	<expr_stmt pos:start="127:9" pos:end="130:0"><expr pos:start="127:9" pos:end="127:59"><name pos:start="127:9" pos:end="127:10">nn</name> <operator pos:start="127:12" pos:end="127:12">=</operator> <call pos:start="127:14" pos:end="127:59"><name pos:start="127:14" pos:end="127:17">recv</name><argument_list pos:start="127:18" pos:end="127:59">(<argument pos:start="127:19" pos:end="127:23"><expr pos:start="127:19" pos:end="127:23"><name pos:start="127:19" pos:end="127:23"><name pos:start="127:19" pos:end="127:20">so</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:23">s</name></name></expr></argument>, <argument pos:start="127:26" pos:end="127:40"><expr pos:start="127:26" pos:end="127:40"><name pos:start="127:26" pos:end="127:31"><name pos:start="127:26" pos:end="127:28">iov</name><index pos:start="127:29" pos:end="127:31">[<expr pos:start="127:30" pos:end="127:30"><literal type="number" pos:start="127:30" pos:end="127:30">0</literal></expr>]</index></name><operator pos:start="127:32" pos:end="127:32">.</operator><name pos:start="127:33" pos:end="127:40">iov_base</name></expr></argument>, <argument pos:start="127:43" pos:end="127:56"><expr pos:start="127:43" pos:end="127:56"><name pos:start="127:43" pos:end="127:48"><name pos:start="127:43" pos:end="127:45">iov</name><index pos:start="127:46" pos:end="127:48">[<expr pos:start="127:47" pos:end="127:47"><literal type="number" pos:start="127:47" pos:end="127:47">0</literal></expr>]</index></name><operator pos:start="127:49" pos:end="127:49">.</operator><name pos:start="127:50" pos:end="127:56">iov_len</name></expr></argument>,<argument pos:start="127:58" pos:end="127:58"><expr pos:start="127:58" pos:end="127:58"><literal type="number" pos:start="127:58" pos:end="127:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="129:1" pos:end="129:6">#<cpp:directive pos:start="129:2" pos:end="129:6">endif</cpp:directive></cpp:endif>

	<if_stmt pos:start="131:9" pos:end="154:0"><if pos:start="131:9" pos:end="154:0">if <condition pos:start="131:12" pos:end="131:20">(<expr pos:start="131:13" pos:end="131:19"><name pos:start="131:13" pos:end="131:14">nn</name> <operator pos:start="131:16" pos:end="131:17">&lt;=</operator> <literal type="number" pos:start="131:19" pos:end="131:19">0</literal></expr>)</condition> <block pos:start="131:22" pos:end="154:0">{<block_content pos:start="133:17" pos:end="147:17">

		<if_stmt pos:start="133:17" pos:end="147:17"><if pos:start="133:17" pos:end="135:33">if <condition pos:start="133:20" pos:end="133:66">(<expr pos:start="133:21" pos:end="133:65"><name pos:start="133:21" pos:end="133:22">nn</name> <operator pos:start="133:24" pos:end="133:24">&lt;</operator> <literal type="number" pos:start="133:26" pos:end="133:26">0</literal> <operator pos:start="133:28" pos:end="133:29">&amp;&amp;</operator> <operator pos:start="133:31" pos:end="133:31">(</operator><name pos:start="133:32" pos:end="133:36">errno</name> <operator pos:start="133:38" pos:end="133:39">==</operator> <name pos:start="133:41" pos:end="133:45">EINTR</name> <operator pos:start="133:47" pos:end="133:48">||</operator> <name pos:start="133:50" pos:end="133:54">errno</name> <operator pos:start="133:56" pos:end="133:57">==</operator> <name pos:start="133:59" pos:end="133:64">EAGAIN</name><operator pos:start="133:65" pos:end="133:65">)</operator></expr>)</condition><block type="pseudo" pos:start="135:25" pos:end="135:33"><block_content pos:start="135:25" pos:end="135:33">

			<return pos:start="135:25" pos:end="135:33">return <expr pos:start="135:32" pos:end="135:32"><literal type="number" pos:start="135:32" pos:end="135:32">0</literal></expr>;</return></block_content></block></if>

		<else pos:start="137:17" pos:end="147:17">else <block pos:start="137:22" pos:end="147:17">{<block_content pos:start="139:25" pos:end="145:34">

			<expr_stmt pos:start="139:25" pos:end="139:125"><expr pos:start="139:25" pos:end="139:124"><call pos:start="139:25" pos:end="139:124"><name pos:start="139:25" pos:end="139:34">DEBUG_MISC</name><argument_list pos:start="139:35" pos:end="139:124">(<argument pos:start="139:36" pos:end="139:123"><expr pos:start="139:36" pos:end="139:123"><operator pos:start="139:36" pos:end="139:36">(</operator><name pos:start="139:37" pos:end="139:39">dfd</name><operator pos:start="139:40" pos:end="139:40">,</operator> <literal type="string" pos:start="139:42" pos:end="139:95">" --- soread() disconnected, nn = %d, errno = %d-%s\n"</literal><operator pos:start="139:96" pos:end="139:96">,</operator> <name pos:start="139:98" pos:end="139:99">nn</name><operator pos:start="139:100" pos:end="139:100">,</operator> <name pos:start="139:102" pos:end="139:106">errno</name><operator pos:start="139:107" pos:end="139:107">,</operator><call pos:start="139:108" pos:end="139:122"><name pos:start="139:108" pos:end="139:115">strerror</name><argument_list pos:start="139:116" pos:end="139:122">(<argument pos:start="139:117" pos:end="139:121"><expr pos:start="139:117" pos:end="139:121"><name pos:start="139:117" pos:end="139:121">errno</name></expr></argument>)</argument_list></call><operator pos:start="139:123" pos:end="139:123">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="141:25" pos:end="141:43"><expr pos:start="141:25" pos:end="141:42"><call pos:start="141:25" pos:end="141:42"><name pos:start="141:25" pos:end="141:38">sofcantrcvmore</name><argument_list pos:start="141:39" pos:end="141:42">(<argument pos:start="141:40" pos:end="141:41"><expr pos:start="141:40" pos:end="141:41"><name pos:start="141:40" pos:end="141:41">so</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="143:25" pos:end="143:54"><expr pos:start="143:25" pos:end="143:53"><call pos:start="143:25" pos:end="143:53"><name pos:start="143:25" pos:end="143:38">tcp_sockclosed</name><argument_list pos:start="143:39" pos:end="143:53">(<argument pos:start="143:40" pos:end="143:52"><expr pos:start="143:40" pos:end="143:52"><call pos:start="143:40" pos:end="143:52"><name pos:start="143:40" pos:end="143:48">sototcpcb</name><argument_list pos:start="143:49" pos:end="143:52">(<argument pos:start="143:50" pos:end="143:51"><expr pos:start="143:50" pos:end="143:51"><name pos:start="143:50" pos:end="143:51">so</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<return pos:start="145:25" pos:end="145:34">return <expr pos:start="145:32" pos:end="145:33"><operator pos:start="145:32" pos:end="145:32">-</operator><literal type="number" pos:start="145:33" pos:end="145:33">1</literal></expr>;</return>

		</block_content>}</block></else></if_stmt>

	</block_content>}</block></if></if_stmt>



<cpp:ifndef pos:start="153:1" pos:end="153:18">#<cpp:directive pos:start="153:2" pos:end="153:7">ifndef</cpp:directive> <name pos:start="153:9" pos:end="153:18">HAVE_READV</name></cpp:ifndef>

	<comment type="block" pos:start="155:9" pos:end="171:11">/*

	 * If there was no error, try and read the second time round

	 * We read again if n = 2 (ie, there's another part of the buffer)

	 * and we read as much as we could in the first read

	 * We don't test for &lt;= 0 this time, because there legitimately

	 * might not be any more data (since the socket is non-blocking),

	 * a close will be detected on next iteration.

	 * A return of -1 wont (shouldn't) happen, since it didn't happen above

	 */</comment>

	<if_stmt pos:start="173:9" pos:end="183:9"><if pos:start="173:9" pos:end="183:9">if <condition pos:start="173:12" pos:end="173:43">(<expr pos:start="173:13" pos:end="173:42"><name pos:start="173:13" pos:end="173:13">n</name> <operator pos:start="173:15" pos:end="173:16">==</operator> <literal type="number" pos:start="173:18" pos:end="173:18">2</literal> <operator pos:start="173:20" pos:end="173:21">&amp;&amp;</operator> <name pos:start="173:23" pos:end="173:24">nn</name> <operator pos:start="173:26" pos:end="173:27">==</operator> <name pos:start="173:29" pos:end="173:34"><name pos:start="173:29" pos:end="173:31">iov</name><index pos:start="173:32" pos:end="173:34">[<expr pos:start="173:33" pos:end="173:33"><literal type="number" pos:start="173:33" pos:end="173:33">0</literal></expr>]</index></name><operator pos:start="173:35" pos:end="173:35">.</operator><name pos:start="173:36" pos:end="173:42">iov_len</name></expr>)</condition> <block pos:start="173:45" pos:end="183:9">{<block_content pos:start="175:13" pos:end="181:26">

            <decl_stmt pos:start="175:13" pos:end="175:20"><decl pos:start="175:13" pos:end="175:19"><type pos:start="175:13" pos:end="175:15"><name pos:start="175:13" pos:end="175:15">int</name></type> <name pos:start="175:17" pos:end="175:19">ret</name></decl>;</decl_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:65"><expr pos:start="177:13" pos:end="177:64"><name pos:start="177:13" pos:end="177:15">ret</name> <operator pos:start="177:17" pos:end="177:17">=</operator> <call pos:start="177:19" pos:end="177:64"><name pos:start="177:19" pos:end="177:22">recv</name><argument_list pos:start="177:23" pos:end="177:64">(<argument pos:start="177:24" pos:end="177:28"><expr pos:start="177:24" pos:end="177:28"><name pos:start="177:24" pos:end="177:28"><name pos:start="177:24" pos:end="177:25">so</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:28">s</name></name></expr></argument>, <argument pos:start="177:31" pos:end="177:45"><expr pos:start="177:31" pos:end="177:45"><name pos:start="177:31" pos:end="177:36"><name pos:start="177:31" pos:end="177:33">iov</name><index pos:start="177:34" pos:end="177:36">[<expr pos:start="177:35" pos:end="177:35"><literal type="number" pos:start="177:35" pos:end="177:35">1</literal></expr>]</index></name><operator pos:start="177:37" pos:end="177:37">.</operator><name pos:start="177:38" pos:end="177:45">iov_base</name></expr></argument>, <argument pos:start="177:48" pos:end="177:61"><expr pos:start="177:48" pos:end="177:61"><name pos:start="177:48" pos:end="177:53"><name pos:start="177:48" pos:end="177:50">iov</name><index pos:start="177:51" pos:end="177:53">[<expr pos:start="177:52" pos:end="177:52"><literal type="number" pos:start="177:52" pos:end="177:52">1</literal></expr>]</index></name><operator pos:start="177:54" pos:end="177:54">.</operator><name pos:start="177:55" pos:end="177:61">iov_len</name></expr></argument>,<argument pos:start="177:63" pos:end="177:63"><expr pos:start="177:63" pos:end="177:63"><literal type="number" pos:start="177:63" pos:end="177:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="179:13" pos:end="181:26"><if pos:start="179:13" pos:end="181:26">if <condition pos:start="179:16" pos:end="179:24">(<expr pos:start="179:17" pos:end="179:23"><name pos:start="179:17" pos:end="179:19">ret</name> <operator pos:start="179:21" pos:end="179:21">&gt;</operator> <literal type="number" pos:start="179:23" pos:end="179:23">0</literal></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:26"><block_content pos:start="181:17" pos:end="181:26">

                <expr_stmt pos:start="181:17" pos:end="181:26"><expr pos:start="181:17" pos:end="181:25"><name pos:start="181:17" pos:end="181:18">nn</name> <operator pos:start="181:20" pos:end="181:21">+=</operator> <name pos:start="181:23" pos:end="181:25">ret</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



	<expr_stmt pos:start="187:9" pos:end="190:0"><expr pos:start="187:9" pos:end="187:58"><call pos:start="187:9" pos:end="187:58"><name pos:start="187:9" pos:end="187:18">DEBUG_MISC</name><argument_list pos:start="187:19" pos:end="187:58">(<argument pos:start="187:20" pos:end="187:57"><expr pos:start="187:20" pos:end="187:57"><operator pos:start="187:20" pos:end="187:20">(</operator><name pos:start="187:21" pos:end="187:23">dfd</name><operator pos:start="187:24" pos:end="187:24">,</operator> <literal type="string" pos:start="187:26" pos:end="187:52">" ... read nn = %d bytes\n"</literal><operator pos:start="187:53" pos:end="187:53">,</operator> <name pos:start="187:55" pos:end="187:56">nn</name><operator pos:start="187:57" pos:end="187:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="189:1" pos:end="189:6">#<cpp:directive pos:start="189:2" pos:end="189:6">endif</cpp:directive></cpp:endif>



	<comment type="block" pos:start="193:9" pos:end="193:27">/* Update fields */</comment>

	<expr_stmt pos:start="195:9" pos:end="195:24"><expr pos:start="195:9" pos:end="195:23"><name pos:start="195:9" pos:end="195:17"><name pos:start="195:9" pos:end="195:10">sb</name><operator pos:start="195:11" pos:end="195:12">-&gt;</operator><name pos:start="195:13" pos:end="195:17">sb_cc</name></name> <operator pos:start="195:19" pos:end="195:20">+=</operator> <name pos:start="195:22" pos:end="195:23">nn</name></expr>;</expr_stmt>

	<expr_stmt pos:start="197:9" pos:end="197:26"><expr pos:start="197:9" pos:end="197:25"><name pos:start="197:9" pos:end="197:19"><name pos:start="197:9" pos:end="197:10">sb</name><operator pos:start="197:11" pos:end="197:12">-&gt;</operator><name pos:start="197:13" pos:end="197:19">sb_wptr</name></name> <operator pos:start="197:21" pos:end="197:22">+=</operator> <name pos:start="197:24" pos:end="197:25">nn</name></expr>;</expr_stmt>

	<if_stmt pos:start="199:9" pos:end="201:46"><if pos:start="199:9" pos:end="201:46">if <condition pos:start="199:12" pos:end="199:58">(<expr pos:start="199:13" pos:end="199:57"><name pos:start="199:13" pos:end="199:23"><name pos:start="199:13" pos:end="199:14">sb</name><operator pos:start="199:15" pos:end="199:16">-&gt;</operator><name pos:start="199:17" pos:end="199:23">sb_wptr</name></name> <operator pos:start="199:25" pos:end="199:26">&gt;=</operator> <operator pos:start="199:28" pos:end="199:28">(</operator><name pos:start="199:29" pos:end="199:39"><name pos:start="199:29" pos:end="199:30">sb</name><operator pos:start="199:31" pos:end="199:32">-&gt;</operator><name pos:start="199:33" pos:end="199:39">sb_data</name></name> <operator pos:start="199:41" pos:end="199:41">+</operator> <name pos:start="199:43" pos:end="199:56"><name pos:start="199:43" pos:end="199:44">sb</name><operator pos:start="199:45" pos:end="199:46">-&gt;</operator><name pos:start="199:47" pos:end="199:56">sb_datalen</name></name><operator pos:start="199:57" pos:end="199:57">)</operator></expr>)</condition><block type="pseudo" pos:start="201:17" pos:end="201:46"><block_content pos:start="201:17" pos:end="201:46">

		<expr_stmt pos:start="201:17" pos:end="201:46"><expr pos:start="201:17" pos:end="201:45"><name pos:start="201:17" pos:end="201:27"><name pos:start="201:17" pos:end="201:18">sb</name><operator pos:start="201:19" pos:end="201:20">-&gt;</operator><name pos:start="201:21" pos:end="201:27">sb_wptr</name></name> <operator pos:start="201:29" pos:end="201:30">-=</operator> <name pos:start="201:32" pos:end="201:45"><name pos:start="201:32" pos:end="201:33">sb</name><operator pos:start="201:34" pos:end="201:35">-&gt;</operator><name pos:start="201:36" pos:end="201:45">sb_datalen</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<return pos:start="203:9" pos:end="203:18">return <expr pos:start="203:16" pos:end="203:17"><name pos:start="203:16" pos:end="203:17">nn</name></expr>;</return>

</block_content>}</block></unit>
