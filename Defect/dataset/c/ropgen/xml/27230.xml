<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27230.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">mp3_write_audio_packet</name><parameter_list pos:start="1:34" pos:end="1:68">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:49">AVFormatContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:67"><decl pos:start="1:55" pos:end="1:67"><type pos:start="1:55" pos:end="1:67"><name pos:start="1:55" pos:end="1:62">AVPacket</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:39">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:14">MP3Context</name>  <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">mp3</name> <init pos:start="5:22" pos:end="5:35">= <expr pos:start="5:24" pos:end="5:35"><name pos:start="5:24" pos:end="5:35"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:35">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="71:5"><if pos:start="9:5" pos:end="71:5">if <condition pos:start="9:8" pos:end="9:43">(<expr pos:start="9:9" pos:end="9:42"><name pos:start="9:9" pos:end="9:11">pkt</name> <operator pos:start="9:13" pos:end="9:14">&amp;&amp;</operator> <name pos:start="9:16" pos:end="9:24"><name pos:start="9:16" pos:end="9:18">pkt</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:24">data</name></name> <operator pos:start="9:26" pos:end="9:27">&amp;&amp;</operator> <name pos:start="9:29" pos:end="9:37"><name pos:start="9:29" pos:end="9:31">pkt</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:37">size</name></name> <operator pos:start="9:39" pos:end="9:40">&gt;=</operator> <literal type="number" pos:start="9:42" pos:end="9:42">4</literal></expr>)</condition> <block pos:start="9:45" pos:end="71:5">{<block_content pos:start="11:9" pos:end="69:41">

        <decl_stmt pos:start="11:9" pos:end="11:26"><decl pos:start="11:9" pos:end="11:25"><type pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:23">MPADecodeHeader</name></type> <name pos:start="11:25" pos:end="11:25">c</name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:27"><decl pos:start="13:9" pos:end="13:26"><type pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:11">int</name> <name pos:start="13:13" pos:end="13:21">av_unused</name></type> <name pos:start="13:23" pos:end="13:26">base</name></decl>;</decl_stmt>



        <expr_stmt pos:start="17:9" pos:end="17:63"><expr pos:start="17:9" pos:end="17:62"><call pos:start="17:9" pos:end="17:62"><name pos:start="17:9" pos:end="17:38">avpriv_mpegaudio_decode_header</name><argument_list pos:start="17:39" pos:end="17:62">(<argument pos:start="17:40" pos:end="17:41"><expr pos:start="17:40" pos:end="17:41"><operator pos:start="17:40" pos:end="17:40">&amp;</operator><name pos:start="17:41" pos:end="17:41">c</name></expr></argument>, <argument pos:start="17:44" pos:end="17:61"><expr pos:start="17:44" pos:end="17:61"><call pos:start="17:44" pos:end="17:61"><name pos:start="17:44" pos:end="17:50">AV_RB32</name><argument_list pos:start="17:51" pos:end="17:61">(<argument pos:start="17:52" pos:end="17:60"><expr pos:start="17:52" pos:end="17:60"><name pos:start="17:52" pos:end="17:60"><name pos:start="17:52" pos:end="17:54">pkt</name><operator pos:start="17:55" pos:end="17:56">-&gt;</operator><name pos:start="17:57" pos:end="17:60">data</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="21:9" pos:end="23:46"><if pos:start="21:9" pos:end="23:46">if <condition pos:start="21:12" pos:end="21:34">(<expr pos:start="21:13" pos:end="21:33"><operator pos:start="21:13" pos:end="21:13">!</operator><name pos:start="21:14" pos:end="21:33"><name pos:start="21:14" pos:end="21:16">mp3</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:33">initial_bitrate</name></name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:46"><block_content pos:start="23:13" pos:end="23:46">

            <expr_stmt pos:start="23:13" pos:end="23:46"><expr pos:start="23:13" pos:end="23:45"><name pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:15">mp3</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:32">initial_bitrate</name></name> <operator pos:start="23:34" pos:end="23:34">=</operator> <name pos:start="23:36" pos:end="23:45"><name pos:start="23:36" pos:end="23:36">c</name><operator pos:start="23:37" pos:end="23:37">.</operator><name pos:start="23:38" pos:end="23:45">bit_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="32:0"><if pos:start="25:9" pos:end="32:0">if <condition pos:start="25:12" pos:end="25:70">(<expr pos:start="25:13" pos:end="25:69"><operator pos:start="25:13" pos:end="25:13">(</operator><name pos:start="25:14" pos:end="25:23"><name pos:start="25:14" pos:end="25:14">c</name><operator pos:start="25:15" pos:end="25:15">.</operator><name pos:start="25:16" pos:end="25:23">bit_rate</name></name> <operator pos:start="25:25" pos:end="25:26">==</operator> <literal type="number" pos:start="25:28" pos:end="25:28">0</literal><operator pos:start="25:29" pos:end="25:29">)</operator> <operator pos:start="25:31" pos:end="25:32">||</operator> <operator pos:start="25:34" pos:end="25:34">(</operator><name pos:start="25:35" pos:end="25:54"><name pos:start="25:35" pos:end="25:37">mp3</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:54">initial_bitrate</name></name> <operator pos:start="25:56" pos:end="25:57">!=</operator> <name pos:start="25:59" pos:end="25:68"><name pos:start="25:59" pos:end="25:59">c</name><operator pos:start="25:60" pos:end="25:60">.</operator><name pos:start="25:61" pos:end="25:68">bit_rate</name></name><operator pos:start="25:69" pos:end="25:69">)</operator></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="32:0"><block_content pos:start="27:13" pos:end="32:0">

            <expr_stmt pos:start="27:13" pos:end="32:0"><expr pos:start="27:13" pos:end="27:41"><name pos:start="27:13" pos:end="27:37"><name pos:start="27:13" pos:end="27:15">mp3</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:37">has_variable_bitrate</name></name> <operator pos:start="27:39" pos:end="27:39">=</operator> <literal type="number" pos:start="27:41" pos:end="27:41">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:ifdef pos:start="31:1" pos:end="31:25">#<cpp:directive pos:start="31:2" pos:end="31:6">ifdef</cpp:directive> <name pos:start="31:8" pos:end="31:25">FILTER_VBR_HEADERS</name></cpp:ifdef>

        <comment type="block" pos:start="33:9" pos:end="33:47">/* filter out XING and INFO headers. */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:63"><expr pos:start="35:9" pos:end="35:62"><name pos:start="35:9" pos:end="35:12">base</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <literal type="number" pos:start="35:16" pos:end="35:18">4</literal> <operator pos:start="35:18" pos:end="35:18">+</operator> <name pos:start="35:20" pos:end="35:62"><name pos:start="35:20" pos:end="35:30">xing_offtbl</name><index pos:start="35:31" pos:end="35:42">[<expr pos:start="35:32" pos:end="35:41"><name pos:start="35:32" pos:end="35:36"><name pos:start="35:32" pos:end="35:32">c</name><operator pos:start="35:33" pos:end="35:33">.</operator><name pos:start="35:34" pos:end="35:36">lsf</name></name> <operator pos:start="35:38" pos:end="35:39">==</operator> <literal type="number" pos:start="35:41" pos:end="35:41">1</literal></expr>]</index><index pos:start="35:43" pos:end="35:62">[<expr pos:start="35:44" pos:end="35:61"><name pos:start="35:44" pos:end="35:56"><name pos:start="35:44" pos:end="35:44">c</name><operator pos:start="35:45" pos:end="35:45">.</operator><name pos:start="35:46" pos:end="35:56">nb_channels</name></name> <operator pos:start="35:58" pos:end="35:59">==</operator> <literal type="number" pos:start="35:61" pos:end="35:61">1</literal></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="39:9" pos:end="49:9"><if pos:start="39:9" pos:end="49:9">if <condition pos:start="39:12" pos:end="39:34">(<expr pos:start="39:13" pos:end="39:33"><name pos:start="39:13" pos:end="39:16">base</name> <operator pos:start="39:18" pos:end="39:18">+</operator> <literal type="number" pos:start="39:20" pos:end="39:20">4</literal> <operator pos:start="39:22" pos:end="39:23">&lt;=</operator> <name pos:start="39:25" pos:end="39:33"><name pos:start="39:25" pos:end="39:27">pkt</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:33">size</name></name></expr>)</condition> <block pos:start="39:36" pos:end="49:9">{<block_content pos:start="41:13" pos:end="47:25">

            <decl_stmt pos:start="41:13" pos:end="41:51"><decl pos:start="41:13" pos:end="41:50"><type pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:20">uint32_t</name></type> <name pos:start="41:22" pos:end="41:22">v</name> <init pos:start="41:24" pos:end="41:50">= <expr pos:start="41:26" pos:end="41:50"><call pos:start="41:26" pos:end="41:50"><name pos:start="41:26" pos:end="41:32">AV_RB32</name><argument_list pos:start="41:33" pos:end="41:50">(<argument pos:start="41:34" pos:end="41:49"><expr pos:start="41:34" pos:end="41:49"><name pos:start="41:34" pos:end="41:42"><name pos:start="41:34" pos:end="41:36">pkt</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:42">data</name></name> <operator pos:start="41:44" pos:end="41:44">+</operator> <name pos:start="41:46" pos:end="41:49">base</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="45:13" pos:end="47:25"><if pos:start="45:13" pos:end="47:25">if <condition pos:start="45:16" pos:end="45:79">(<expr pos:start="45:17" pos:end="45:78"><call pos:start="45:17" pos:end="45:40"><name pos:start="45:17" pos:end="45:23">MKBETAG</name><argument_list pos:start="45:24" pos:end="45:40">(<argument pos:start="45:25" pos:end="45:27"><expr pos:start="45:25" pos:end="45:27"><literal type="char" pos:start="45:25" pos:end="45:27">'X'</literal></expr></argument>,<argument pos:start="45:29" pos:end="45:31"><expr pos:start="45:29" pos:end="45:31"><literal type="char" pos:start="45:29" pos:end="45:31">'i'</literal></expr></argument>,<argument pos:start="45:33" pos:end="45:35"><expr pos:start="45:33" pos:end="45:35"><literal type="char" pos:start="45:33" pos:end="45:35">'n'</literal></expr></argument>,<argument pos:start="45:37" pos:end="45:39"><expr pos:start="45:37" pos:end="45:39"><literal type="char" pos:start="45:37" pos:end="45:39">'g'</literal></expr></argument>)</argument_list></call> <operator pos:start="45:42" pos:end="45:43">==</operator> <name pos:start="45:45" pos:end="45:45">v</name> <operator pos:start="45:47" pos:end="45:48">||</operator> <call pos:start="45:50" pos:end="45:73"><name pos:start="45:50" pos:end="45:56">MKBETAG</name><argument_list pos:start="45:57" pos:end="45:73">(<argument pos:start="45:58" pos:end="45:60"><expr pos:start="45:58" pos:end="45:60"><literal type="char" pos:start="45:58" pos:end="45:60">'I'</literal></expr></argument>,<argument pos:start="45:62" pos:end="45:64"><expr pos:start="45:62" pos:end="45:64"><literal type="char" pos:start="45:62" pos:end="45:64">'n'</literal></expr></argument>,<argument pos:start="45:66" pos:end="45:68"><expr pos:start="45:66" pos:end="45:68"><literal type="char" pos:start="45:66" pos:end="45:68">'f'</literal></expr></argument>,<argument pos:start="45:70" pos:end="45:72"><expr pos:start="45:70" pos:end="45:72"><literal type="char" pos:start="45:70" pos:end="45:72">'o'</literal></expr></argument>)</argument_list></call> <operator pos:start="45:75" pos:end="45:76">==</operator> <name pos:start="45:78" pos:end="45:78">v</name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:25"><block_content pos:start="47:17" pos:end="47:25">

                <return pos:start="47:17" pos:end="47:25">return <expr pos:start="47:24" pos:end="47:24"><literal type="number" pos:start="47:24" pos:end="47:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="53:9" pos:end="53:38">/* filter out VBRI headers. */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:12">base</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <literal type="number" pos:start="55:16" pos:end="55:18">4</literal> <operator pos:start="55:18" pos:end="55:18">+</operator> <literal type="number" pos:start="55:20" pos:end="55:21">32</literal></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="64:0"><if pos:start="59:9" pos:end="64:0">if <condition pos:start="59:12" pos:end="59:91">(<expr pos:start="59:13" pos:end="59:90"><name pos:start="59:13" pos:end="59:16">base</name> <operator pos:start="59:18" pos:end="59:18">+</operator> <literal type="number" pos:start="59:20" pos:end="59:20">4</literal> <operator pos:start="59:22" pos:end="59:23">&lt;=</operator> <name pos:start="59:25" pos:end="59:33"><name pos:start="59:25" pos:end="59:27">pkt</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:33">size</name></name> <operator pos:start="59:35" pos:end="59:36">&amp;&amp;</operator> <call pos:start="59:38" pos:end="59:61"><name pos:start="59:38" pos:end="59:44">MKBETAG</name><argument_list pos:start="59:45" pos:end="59:61">(<argument pos:start="59:46" pos:end="59:48"><expr pos:start="59:46" pos:end="59:48"><literal type="char" pos:start="59:46" pos:end="59:48">'V'</literal></expr></argument>,<argument pos:start="59:50" pos:end="59:52"><expr pos:start="59:50" pos:end="59:52"><literal type="char" pos:start="59:50" pos:end="59:52">'B'</literal></expr></argument>,<argument pos:start="59:54" pos:end="59:56"><expr pos:start="59:54" pos:end="59:56"><literal type="char" pos:start="59:54" pos:end="59:56">'R'</literal></expr></argument>,<argument pos:start="59:58" pos:end="59:60"><expr pos:start="59:58" pos:end="59:60"><literal type="char" pos:start="59:58" pos:end="59:60">'I'</literal></expr></argument>)</argument_list></call> <operator pos:start="59:63" pos:end="59:64">==</operator> <call pos:start="59:66" pos:end="59:90"><name pos:start="59:66" pos:end="59:72">AV_RB32</name><argument_list pos:start="59:73" pos:end="59:90">(<argument pos:start="59:74" pos:end="59:89"><expr pos:start="59:74" pos:end="59:89"><name pos:start="59:74" pos:end="59:82"><name pos:start="59:74" pos:end="59:76">pkt</name><operator pos:start="59:77" pos:end="59:78">-&gt;</operator><name pos:start="59:79" pos:end="59:82">data</name></name> <operator pos:start="59:84" pos:end="59:84">+</operator> <name pos:start="59:86" pos:end="59:89">base</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="64:0"><block_content pos:start="61:13" pos:end="64:0">

            <return pos:start="61:13" pos:end="64:0">return <expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

<cpp:endif pos:start="63:1" pos:end="63:6">#<cpp:directive pos:start="63:2" pos:end="63:6">endif</cpp:directive></cpp:endif>



        <if_stmt pos:start="67:9" pos:end="69:41"><if pos:start="67:9" pos:end="69:41">if <condition pos:start="67:12" pos:end="67:29">(<expr pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:15">mp3</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:28">xing_offset</name></name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:41"><block_content pos:start="69:13" pos:end="69:41">

            <expr_stmt pos:start="69:13" pos:end="69:41"><expr pos:start="69:13" pos:end="69:40"><call pos:start="69:13" pos:end="69:40"><name pos:start="69:13" pos:end="69:30">mp3_xing_add_frame</name><argument_list pos:start="69:31" pos:end="69:40">(<argument pos:start="69:32" pos:end="69:34"><expr pos:start="69:32" pos:end="69:34"><name pos:start="69:32" pos:end="69:34">mp3</name></expr></argument>, <argument pos:start="69:37" pos:end="69:39"><expr pos:start="69:37" pos:end="69:39"><name pos:start="69:37" pos:end="69:39">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="75:5" pos:end="75:39">return <expr pos:start="75:12" pos:end="75:38"><call pos:start="75:12" pos:end="75:38"><name pos:start="75:12" pos:end="75:30">ff_raw_write_packet</name><argument_list pos:start="75:31" pos:end="75:38">(<argument pos:start="75:32" pos:end="75:32"><expr pos:start="75:32" pos:end="75:32"><name pos:start="75:32" pos:end="75:32">s</name></expr></argument>, <argument pos:start="75:35" pos:end="75:37"><expr pos:start="75:35" pos:end="75:37"><name pos:start="75:35" pos:end="75:37">pkt</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
