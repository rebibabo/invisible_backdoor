<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10140.c" pos:tabs="8"><function pos:start="1:1" pos:end="407:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">ff_MPV_encode_picture</name><parameter_list pos:start="1:26" pos:end="3:66">(<parameter pos:start="1:27" pos:end="1:47"><decl pos:start="1:27" pos:end="1:47"><type pos:start="1:27" pos:end="1:47"><name pos:start="1:27" pos:end="1:40">AVCodecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">avctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:62"><decl pos:start="1:50" pos:end="1:62"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:57">AVPacket</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">pkt</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:48"><decl pos:start="3:27" pos:end="3:48"><type pos:start="3:27" pos:end="3:48"><specifier pos:start="3:27" pos:end="3:31">const</specifier> <name pos:start="3:33" pos:end="3:39">AVFrame</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:48">pic_arg</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:65"><decl pos:start="3:51" pos:end="3:65"><type pos:start="3:51" pos:end="3:65"><name pos:start="3:51" pos:end="3:53">int</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:65">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="407:1">{<block_content pos:start="7:5" pos:end="405:13">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:40">= <expr pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:29">avctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:25">stuffing_count</name></decl>, <decl pos:start="9:28" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:30">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:21">context_count</name> <init pos:start="11:23" pos:end="11:46">= <expr pos:start="11:25" pos:end="11:46"><name pos:start="11:25" pos:end="11:46"><name pos:start="11:25" pos:end="11:25">s</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:46">slice_context_count</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:28">picture_in_gop_number</name></name><operator pos:start="15:29" pos:end="15:30">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="21:18"><if pos:start="19:5" pos:end="21:18">if <condition pos:start="19:8" pos:end="19:43">(<expr pos:start="19:9" pos:end="19:42"><call pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:26">load_input_picture</name><argument_list pos:start="19:27" pos:end="19:38">(<argument pos:start="19:28" pos:end="19:28"><expr pos:start="19:28" pos:end="19:28"><name pos:start="19:28" pos:end="19:28">s</name></expr></argument>, <argument pos:start="19:31" pos:end="19:37"><expr pos:start="19:31" pos:end="19:37"><name pos:start="19:31" pos:end="19:37">pic_arg</name></expr></argument>)</argument_list></call> <operator pos:start="19:40" pos:end="19:40">&lt;</operator> <literal type="number" pos:start="19:42" pos:end="19:42">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:36">(<expr pos:start="25:9" pos:end="25:35"><call pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:28">select_input_picture</name><argument_list pos:start="25:29" pos:end="25:31">(<argument pos:start="25:30" pos:end="25:30"><expr pos:start="25:30" pos:end="25:30"><name pos:start="25:30" pos:end="25:30">s</name></expr></argument>)</argument_list></call> <operator pos:start="25:33" pos:end="25:33">&lt;</operator> <literal type="number" pos:start="25:35" pos:end="25:35">0</literal></expr>)</condition> <block pos:start="25:38" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:17">/* output? */</comment>

    <if_stmt pos:start="35:5" pos:end="395:5"><if pos:start="35:5" pos:end="391:5">if <condition pos:start="35:8" pos:end="35:34">(<expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:22">new_picture</name><operator pos:start="35:23" pos:end="35:23">.</operator><name pos:start="35:24" pos:end="35:24">f</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:30">data</name><index pos:start="35:31" pos:end="35:33">[<expr pos:start="35:32" pos:end="35:32"><literal type="number" pos:start="35:32" pos:end="35:32">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="35:36" pos:end="391:5">{<block_content pos:start="37:9" pos:end="389:87">

        <if_stmt pos:start="37:9" pos:end="41:23"><if pos:start="37:9" pos:end="41:23">if <condition pos:start="37:12" pos:end="39:84">(<expr pos:start="37:13" pos:end="39:83"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:22"><name pos:start="37:14" pos:end="37:16">pkt</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:22">data</name></name> <operator pos:start="37:24" pos:end="37:25">&amp;&amp;</operator>

            <operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:16">ret</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:78"><name pos:start="39:20" pos:end="39:34">ff_alloc_packet</name><argument_list pos:start="39:35" pos:end="39:78">(<argument pos:start="39:36" pos:end="39:38"><expr pos:start="39:36" pos:end="39:38"><name pos:start="39:36" pos:end="39:38">pkt</name></expr></argument>, <argument pos:start="39:41" pos:end="39:77"><expr pos:start="39:41" pos:end="39:77"><name pos:start="39:41" pos:end="39:51"><name pos:start="39:41" pos:end="39:41">s</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:51">mb_width</name></name><operator pos:start="39:52" pos:end="39:52">*</operator><name pos:start="39:53" pos:end="39:64"><name pos:start="39:53" pos:end="39:53">s</name><operator pos:start="39:54" pos:end="39:55">-&gt;</operator><name pos:start="39:56" pos:end="39:64">mb_height</name></name><operator pos:start="39:65" pos:end="39:65">*</operator><name pos:start="39:66" pos:end="39:77">MAX_MB_BYTES</name></expr></argument>)</argument_list></call><operator pos:start="39:79" pos:end="39:79">)</operator> <operator pos:start="39:81" pos:end="39:81">&lt;</operator> <literal type="number" pos:start="39:83" pos:end="39:83">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:23"><block_content pos:start="41:13" pos:end="41:23">

            <return pos:start="41:13" pos:end="41:23">return <expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="43:9" pos:end="53:9"><if pos:start="43:9" pos:end="53:9">if <condition pos:start="43:12" pos:end="43:23">(<expr pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:22">mb_info</name></name></expr>)</condition> <block pos:start="43:25" pos:end="53:9">{<block_content pos:start="45:13" pos:end="51:68">

            <expr_stmt pos:start="45:13" pos:end="49:62"><expr pos:start="45:13" pos:end="49:61"><name pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:26">mb_info_ptr</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <call pos:start="45:30" pos:end="49:61"><name pos:start="45:30" pos:end="45:52">av_packet_new_side_data</name><argument_list pos:start="45:53" pos:end="49:61">(<argument pos:start="45:54" pos:end="45:56"><expr pos:start="45:54" pos:end="45:56"><name pos:start="45:54" pos:end="45:56">pkt</name></expr></argument>,

                                 <argument pos:start="47:34" pos:end="47:57"><expr pos:start="47:34" pos:end="47:57"><name pos:start="47:34" pos:end="47:57">AV_PKT_DATA_H263_MB_INFO</name></expr></argument>,

                                 <argument pos:start="49:34" pos:end="49:60"><expr pos:start="49:34" pos:end="49:60"><name pos:start="49:34" pos:end="49:44"><name pos:start="49:34" pos:end="49:34">s</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:44">mb_width</name></name><operator pos:start="49:45" pos:end="49:45">*</operator><name pos:start="49:46" pos:end="49:57"><name pos:start="49:46" pos:end="49:46">s</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:57">mb_height</name></name><operator pos:start="49:58" pos:end="49:58">*</operator><literal type="number" pos:start="49:59" pos:end="49:60">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:68"><expr pos:start="51:13" pos:end="51:67"><name pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:27">prev_mb_info</name></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <name pos:start="51:31" pos:end="51:45"><name pos:start="51:31" pos:end="51:31">s</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:45">last_mb_info</name></name> <operator pos:start="51:47" pos:end="51:47">=</operator> <name pos:start="51:49" pos:end="51:63"><name pos:start="51:49" pos:end="51:49">s</name><operator pos:start="51:50" pos:end="51:51">-&gt;</operator><name pos:start="51:52" pos:end="51:63">mb_info_size</name></name> <operator pos:start="51:65" pos:end="51:65">=</operator> <literal type="number" pos:start="51:67" pos:end="51:67">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="57:9" pos:end="73:9">for <control pos:start="57:13" pos:end="57:43">(<init pos:start="57:14" pos:end="57:19"><expr pos:start="57:14" pos:end="57:18"><name pos:start="57:14" pos:end="57:14">i</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>;</init> <condition pos:start="57:21" pos:end="57:38"><expr pos:start="57:21" pos:end="57:37"><name pos:start="57:21" pos:end="57:21">i</name> <operator pos:start="57:23" pos:end="57:23">&lt;</operator> <name pos:start="57:25" pos:end="57:37">context_count</name></expr>;</condition> <incr pos:start="57:40" pos:end="57:42"><expr pos:start="57:40" pos:end="57:42"><name pos:start="57:40" pos:end="57:40">i</name><operator pos:start="57:41" pos:end="57:42">++</operator></expr></incr>)</control> <block pos:start="57:45" pos:end="73:9">{<block_content pos:start="59:13" pos:end="71:73">

            <decl_stmt pos:start="59:13" pos:end="59:59"><decl pos:start="59:13" pos:end="59:58"><type pos:start="59:13" pos:end="59:15"><name pos:start="59:13" pos:end="59:15">int</name></type> <name pos:start="59:17" pos:end="59:23">start_y</name> <init pos:start="59:25" pos:end="59:58">= <expr pos:start="59:27" pos:end="59:58"><name pos:start="59:27" pos:end="59:46"><name pos:start="59:27" pos:end="59:27">s</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:43">thread_context</name><index pos:start="59:44" pos:end="59:46">[<expr pos:start="59:45" pos:end="59:45"><name pos:start="59:45" pos:end="59:45">i</name></expr>]</index></name><operator pos:start="59:47" pos:end="59:48">-&gt;</operator><name pos:start="59:49" pos:end="59:58">start_mb_y</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="61:13" pos:end="61:59"><decl pos:start="61:13" pos:end="61:58"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type>   <name pos:start="61:19" pos:end="61:23">end_y</name> <init pos:start="61:25" pos:end="61:58">= <expr pos:start="61:27" pos:end="61:58"><name pos:start="61:27" pos:end="61:46"><name pos:start="61:27" pos:end="61:27">s</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:43">thread_context</name><index pos:start="61:44" pos:end="61:46">[<expr pos:start="61:45" pos:end="61:45"><name pos:start="61:45" pos:end="61:45">i</name></expr>]</index></name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator>  <name pos:start="61:51" pos:end="61:58">end_mb_y</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="63:13" pos:end="63:39"><decl pos:start="63:13" pos:end="63:38"><type pos:start="63:13" pos:end="63:15"><name pos:start="63:13" pos:end="63:15">int</name></type> <name pos:start="63:17" pos:end="63:17">h</name>       <init pos:start="63:25" pos:end="63:38">= <expr pos:start="63:27" pos:end="63:38"><name pos:start="63:27" pos:end="63:38"><name pos:start="63:27" pos:end="63:27">s</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:38">mb_height</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="65:13" pos:end="65:87"><decl pos:start="65:13" pos:end="65:86"><type pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:19">uint8_t</name> <modifier pos:start="65:21" pos:end="65:21">*</modifier></type><name pos:start="65:22" pos:end="65:26">start</name> <init pos:start="65:28" pos:end="65:86">= <expr pos:start="65:30" pos:end="65:86"><name pos:start="65:30" pos:end="65:38"><name pos:start="65:30" pos:end="65:32">pkt</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:38">data</name></name> <operator pos:start="65:40" pos:end="65:40">+</operator> <operator pos:start="65:42" pos:end="65:42">(</operator><name pos:start="65:43" pos:end="65:48">size_t</name><operator pos:start="65:49" pos:end="65:49">)</operator><operator pos:start="65:50" pos:end="65:50">(</operator><operator pos:start="65:51" pos:end="65:51">(</operator><operator pos:start="65:52" pos:end="65:52">(</operator><name pos:start="65:53" pos:end="65:59">int64_t</name><operator pos:start="65:60" pos:end="65:60">)</operator> <name pos:start="65:62" pos:end="65:70"><name pos:start="65:62" pos:end="65:64">pkt</name><operator pos:start="65:65" pos:end="65:66">-&gt;</operator><name pos:start="65:67" pos:end="65:70">size</name></name><operator pos:start="65:71" pos:end="65:71">)</operator> <operator pos:start="65:73" pos:end="65:73">*</operator> <name pos:start="65:75" pos:end="65:81">start_y</name> <operator pos:start="65:83" pos:end="65:83">/</operator> <name pos:start="65:85" pos:end="65:85">h</name><operator pos:start="65:86" pos:end="65:86">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="67:13" pos:end="67:87"><decl pos:start="67:13" pos:end="67:86"><type pos:start="67:13" pos:end="67:21"><name pos:start="67:13" pos:end="67:19">uint8_t</name> <modifier pos:start="67:21" pos:end="67:21">*</modifier></type><name pos:start="67:22" pos:end="67:24">end</name>   <init pos:start="67:28" pos:end="67:86">= <expr pos:start="67:30" pos:end="67:86"><name pos:start="67:30" pos:end="67:38"><name pos:start="67:30" pos:end="67:32">pkt</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:38">data</name></name> <operator pos:start="67:40" pos:end="67:40">+</operator> <operator pos:start="67:42" pos:end="67:42">(</operator><name pos:start="67:43" pos:end="67:48">size_t</name><operator pos:start="67:49" pos:end="67:49">)</operator><operator pos:start="67:50" pos:end="67:50">(</operator><operator pos:start="67:51" pos:end="67:51">(</operator><operator pos:start="67:52" pos:end="67:52">(</operator><name pos:start="67:53" pos:end="67:59">int64_t</name><operator pos:start="67:60" pos:end="67:60">)</operator> <name pos:start="67:62" pos:end="67:70"><name pos:start="67:62" pos:end="67:64">pkt</name><operator pos:start="67:65" pos:end="67:66">-&gt;</operator><name pos:start="67:67" pos:end="67:70">size</name></name><operator pos:start="67:71" pos:end="67:71">)</operator> <operator pos:start="67:73" pos:end="67:73">*</operator>   <name pos:start="67:77" pos:end="67:81">end_y</name> <operator pos:start="67:83" pos:end="67:83">/</operator> <name pos:start="67:85" pos:end="67:85">h</name><operator pos:start="67:86" pos:end="67:86">)</operator></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="71:13" pos:end="71:73"><expr pos:start="71:13" pos:end="71:72"><call pos:start="71:13" pos:end="71:72"><name pos:start="71:13" pos:end="71:25">init_put_bits</name><argument_list pos:start="71:26" pos:end="71:72">(<argument pos:start="71:27" pos:end="71:51"><expr pos:start="71:27" pos:end="71:51"><operator pos:start="71:27" pos:end="71:27">&amp;</operator><name pos:start="71:28" pos:end="71:47"><name pos:start="71:28" pos:end="71:28">s</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:44">thread_context</name><index pos:start="71:45" pos:end="71:47">[<expr pos:start="71:46" pos:end="71:46"><name pos:start="71:46" pos:end="71:46">i</name></expr>]</index></name><operator pos:start="71:48" pos:end="71:49">-&gt;</operator><name pos:start="71:50" pos:end="71:51">pb</name></expr></argument>, <argument pos:start="71:54" pos:end="71:58"><expr pos:start="71:54" pos:end="71:58"><name pos:start="71:54" pos:end="71:58">start</name></expr></argument>, <argument pos:start="71:61" pos:end="71:71"><expr pos:start="71:61" pos:end="71:71"><name pos:start="71:61" pos:end="71:63">end</name> <operator pos:start="71:65" pos:end="71:65">-</operator> <name pos:start="71:67" pos:end="71:71">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="77:9" pos:end="77:51"><expr pos:start="77:9" pos:end="77:50"><name pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:20">pict_type</name></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <name pos:start="77:24" pos:end="77:50"><name pos:start="77:24" pos:end="77:24">s</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:37">new_picture</name><operator pos:start="77:38" pos:end="77:38">.</operator><name pos:start="77:39" pos:end="77:39">f</name><operator pos:start="77:40" pos:end="77:41">-&gt;</operator><name pos:start="77:42" pos:end="77:50">pict_type</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="79:9" pos:end="79:19">//emms_c();</comment>

        <expr_stmt pos:start="81:9" pos:end="81:29"><expr pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:11">ret</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="81:28"><name pos:start="81:15" pos:end="81:25">frame_start</name><argument_list pos:start="81:26" pos:end="81:28">(<argument pos:start="81:27" pos:end="81:27"><expr pos:start="81:27" pos:end="81:27"><name pos:start="81:27" pos:end="81:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:23"><if pos:start="83:9" pos:end="85:23">if <condition pos:start="83:12" pos:end="83:20">(<expr pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:15">ret</name> <operator pos:start="83:17" pos:end="83:17">&lt;</operator> <literal type="number" pos:start="83:19" pos:end="83:19">0</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:23"><block_content pos:start="85:13" pos:end="85:23">

            <return pos:start="85:13" pos:end="85:23">return <expr pos:start="85:20" pos:end="85:22"><name pos:start="85:20" pos:end="85:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

<label pos:start="87:1" pos:end="87:10"><name pos:start="87:1" pos:end="87:9">vbv_retry</name>:</label>

        <if_stmt pos:start="89:9" pos:end="91:22"><if pos:start="89:9" pos:end="91:22">if <condition pos:start="89:12" pos:end="89:53">(<expr pos:start="89:13" pos:end="89:52"><call pos:start="89:13" pos:end="89:48"><name pos:start="89:13" pos:end="89:26">encode_picture</name><argument_list pos:start="89:27" pos:end="89:48">(<argument pos:start="89:28" pos:end="89:28"><expr pos:start="89:28" pos:end="89:28"><name pos:start="89:28" pos:end="89:28">s</name></expr></argument>, <argument pos:start="89:31" pos:end="89:47"><expr pos:start="89:31" pos:end="89:47"><name pos:start="89:31" pos:end="89:47"><name pos:start="89:31" pos:end="89:31">s</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:47">picture_number</name></name></expr></argument>)</argument_list></call> <operator pos:start="89:50" pos:end="89:50">&lt;</operator> <literal type="number" pos:start="89:52" pos:end="89:52">0</literal></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:22"><block_content pos:start="91:13" pos:end="91:22">

            <return pos:start="91:13" pos:end="91:22">return <expr pos:start="91:20" pos:end="91:21"><operator pos:start="91:20" pos:end="91:20">-</operator><literal type="number" pos:start="91:21" pos:end="91:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:44"><expr pos:start="95:9" pos:end="95:43"><name pos:start="95:9" pos:end="95:26"><name pos:start="95:9" pos:end="95:13">avctx</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:26">header_bits</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <name pos:start="95:30" pos:end="95:43"><name pos:start="95:30" pos:end="95:30">s</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:43">header_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:40"><expr pos:start="97:9" pos:end="97:39"><name pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:13">avctx</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:22">mv_bits</name></name>     <operator pos:start="97:28" pos:end="97:28">=</operator> <name pos:start="97:30" pos:end="97:39"><name pos:start="97:30" pos:end="97:30">s</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:39">mv_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:42"><expr pos:start="99:9" pos:end="99:41"><name pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:13">avctx</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:24">misc_bits</name></name>   <operator pos:start="99:28" pos:end="99:28">=</operator> <name pos:start="99:30" pos:end="99:41"><name pos:start="99:30" pos:end="99:30">s</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:41">misc_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:43"><expr pos:start="101:9" pos:end="101:42"><name pos:start="101:9" pos:end="101:25"><name pos:start="101:9" pos:end="101:13">avctx</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:25">i_tex_bits</name></name>  <operator pos:start="101:28" pos:end="101:28">=</operator> <name pos:start="101:30" pos:end="101:42"><name pos:start="101:30" pos:end="101:30">s</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:42">i_tex_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:43"><expr pos:start="103:9" pos:end="103:42"><name pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:13">avctx</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:25">p_tex_bits</name></name>  <operator pos:start="103:28" pos:end="103:28">=</operator> <name pos:start="103:30" pos:end="103:42"><name pos:start="103:30" pos:end="103:30">s</name><operator pos:start="103:31" pos:end="103:32">-&gt;</operator><name pos:start="103:33" pos:end="103:42">p_tex_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:40"><expr pos:start="105:9" pos:end="105:39"><name pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:13">avctx</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:22">i_count</name></name>     <operator pos:start="105:28" pos:end="105:28">=</operator> <name pos:start="105:30" pos:end="105:39"><name pos:start="105:30" pos:end="105:30">s</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:39">i_count</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="107:9" pos:end="107:35">// FIXME f/b_count in avctx</comment>

        <expr_stmt pos:start="109:9" pos:end="109:68"><expr pos:start="109:9" pos:end="109:67"><name pos:start="109:9" pos:end="109:22"><name pos:start="109:9" pos:end="109:13">avctx</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:22">p_count</name></name>     <operator pos:start="109:28" pos:end="109:28">=</operator> <name pos:start="109:30" pos:end="109:38"><name pos:start="109:30" pos:end="109:30">s</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:38">mb_num</name></name> <operator pos:start="109:40" pos:end="109:40">-</operator> <name pos:start="109:42" pos:end="109:51"><name pos:start="109:42" pos:end="109:42">s</name><operator pos:start="109:43" pos:end="109:44">-&gt;</operator><name pos:start="109:45" pos:end="109:51">i_count</name></name> <operator pos:start="109:53" pos:end="109:53">-</operator> <name pos:start="109:55" pos:end="109:67"><name pos:start="109:55" pos:end="109:55">s</name><operator pos:start="109:56" pos:end="109:57">-&gt;</operator><name pos:start="109:58" pos:end="109:67">skip_count</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:43"><expr pos:start="111:9" pos:end="111:42"><name pos:start="111:9" pos:end="111:25"><name pos:start="111:9" pos:end="111:13">avctx</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:25">skip_count</name></name>  <operator pos:start="111:28" pos:end="111:28">=</operator> <name pos:start="111:30" pos:end="111:42"><name pos:start="111:30" pos:end="111:30">s</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:42">skip_count</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:21"><expr pos:start="115:9" pos:end="115:20"><call pos:start="115:9" pos:end="115:20"><name pos:start="115:9" pos:end="115:17">frame_end</name><argument_list pos:start="115:18" pos:end="115:20">(<argument pos:start="115:19" pos:end="115:19"><expr pos:start="115:19" pos:end="115:19"><name pos:start="115:19" pos:end="115:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="119:9" pos:end="121:68"><if pos:start="119:9" pos:end="121:68">if <condition pos:start="119:12" pos:end="119:63">(<expr pos:start="119:13" pos:end="119:62"><name pos:start="119:13" pos:end="119:32">CONFIG_MJPEG_ENCODER</name> <operator pos:start="119:34" pos:end="119:35">&amp;&amp;</operator> <name pos:start="119:37" pos:end="119:49"><name pos:start="119:37" pos:end="119:37">s</name><operator pos:start="119:38" pos:end="119:39">-&gt;</operator><name pos:start="119:40" pos:end="119:49">out_format</name></name> <operator pos:start="119:51" pos:end="119:52">==</operator> <name pos:start="119:54" pos:end="119:62">FMT_MJPEG</name></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:68"><block_content pos:start="121:13" pos:end="121:68">

            <expr_stmt pos:start="121:13" pos:end="121:68"><expr pos:start="121:13" pos:end="121:67"><call pos:start="121:13" pos:end="121:67"><name pos:start="121:13" pos:end="121:43">ff_mjpeg_encode_picture_trailer</name><argument_list pos:start="121:44" pos:end="121:67">(<argument pos:start="121:45" pos:end="121:50"><expr pos:start="121:45" pos:end="121:50"><operator pos:start="121:45" pos:end="121:45">&amp;</operator><name pos:start="121:46" pos:end="121:50"><name pos:start="121:46" pos:end="121:46">s</name><operator pos:start="121:47" pos:end="121:48">-&gt;</operator><name pos:start="121:49" pos:end="121:50">pb</name></name></expr></argument>, <argument pos:start="121:53" pos:end="121:66"><expr pos:start="121:53" pos:end="121:66"><name pos:start="121:53" pos:end="121:66"><name pos:start="121:53" pos:end="121:53">s</name><operator pos:start="121:54" pos:end="121:55">-&gt;</operator><name pos:start="121:56" pos:end="121:66">header_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="125:9" pos:end="197:9"><if pos:start="125:9" pos:end="197:9">if <condition pos:start="125:12" pos:end="125:34">(<expr pos:start="125:13" pos:end="125:33"><name pos:start="125:13" pos:end="125:33"><name pos:start="125:13" pos:end="125:17">avctx</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:33">rc_buffer_size</name></name></expr>)</condition> <block pos:start="125:36" pos:end="197:9">{<block_content pos:start="127:13" pos:end="195:42">

            <decl_stmt pos:start="127:13" pos:end="127:53"><decl pos:start="127:13" pos:end="127:52"><type pos:start="127:13" pos:end="127:32"><name pos:start="127:13" pos:end="127:30">RateControlContext</name> <modifier pos:start="127:32" pos:end="127:32">*</modifier></type><name pos:start="127:33" pos:end="127:35">rcc</name> <init pos:start="127:37" pos:end="127:52">= <expr pos:start="127:39" pos:end="127:52"><operator pos:start="127:39" pos:end="127:39">&amp;</operator><name pos:start="127:40" pos:end="127:52"><name pos:start="127:40" pos:end="127:40">s</name><operator pos:start="127:41" pos:end="127:42">-&gt;</operator><name pos:start="127:43" pos:end="127:52">rc_context</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="129:13" pos:end="129:79"><decl pos:start="129:13" pos:end="129:78"><type pos:start="129:13" pos:end="129:15"><name pos:start="129:13" pos:end="129:15">int</name></type> <name pos:start="129:17" pos:end="129:24">max_size</name> <init pos:start="129:26" pos:end="129:78">= <expr pos:start="129:28" pos:end="129:78"><name pos:start="129:28" pos:end="129:44"><name pos:start="129:28" pos:end="129:30">rcc</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:44">buffer_index</name></name> <operator pos:start="129:46" pos:end="129:46">*</operator> <name pos:start="129:48" pos:end="129:78"><name pos:start="129:48" pos:end="129:52">avctx</name><operator pos:start="129:53" pos:end="129:54">-&gt;</operator><name pos:start="129:55" pos:end="129:78">rc_max_available_vbv_use</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="133:13" pos:end="191:13"><if pos:start="133:13" pos:end="191:13">if <condition pos:start="133:16" pos:end="135:43">(<expr pos:start="133:17" pos:end="135:42"><call pos:start="133:17" pos:end="133:38"><name pos:start="133:17" pos:end="133:30">put_bits_count</name><argument_list pos:start="133:31" pos:end="133:38">(<argument pos:start="133:32" pos:end="133:37"><expr pos:start="133:32" pos:end="133:37"><operator pos:start="133:32" pos:end="133:32">&amp;</operator><name pos:start="133:33" pos:end="133:37"><name pos:start="133:33" pos:end="133:33">s</name><operator pos:start="133:34" pos:end="133:35">-&gt;</operator><name pos:start="133:36" pos:end="133:37">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="133:40" pos:end="133:40">&gt;</operator> <name pos:start="133:42" pos:end="133:49">max_size</name> <operator pos:start="133:51" pos:end="133:52">&amp;&amp;</operator>

                <name pos:start="135:17" pos:end="135:25"><name pos:start="135:17" pos:end="135:17">s</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:25">lambda</name></name> <operator pos:start="135:27" pos:end="135:27">&lt;</operator> <name pos:start="135:29" pos:end="135:42"><name pos:start="135:29" pos:end="135:29">s</name><operator pos:start="135:30" pos:end="135:31">-&gt;</operator><name pos:start="135:32" pos:end="135:36">avctx</name><operator pos:start="135:37" pos:end="135:38">-&gt;</operator><name pos:start="135:39" pos:end="135:42">lmax</name></name></expr>)</condition> <block pos:start="135:45" pos:end="191:13">{<block_content pos:start="137:17" pos:end="189:31">

                <expr_stmt pos:start="137:17" pos:end="139:68"><expr pos:start="137:17" pos:end="139:67"><name pos:start="137:17" pos:end="137:30"><name pos:start="137:17" pos:end="137:17">s</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:30">next_lambda</name></name> <operator pos:start="137:32" pos:end="137:32">=</operator> <call pos:start="137:34" pos:end="139:67"><name pos:start="137:34" pos:end="137:38">FFMAX</name><argument_list pos:start="137:39" pos:end="139:67">(<argument pos:start="137:40" pos:end="137:52"><expr pos:start="137:40" pos:end="137:52"><name pos:start="137:40" pos:end="137:48"><name pos:start="137:40" pos:end="137:40">s</name><operator pos:start="137:41" pos:end="137:42">-&gt;</operator><name pos:start="137:43" pos:end="137:48">lambda</name></name> <operator pos:start="137:50" pos:end="137:50">+</operator> <literal type="number" pos:start="137:52" pos:end="137:52">1</literal></expr></argument>, <argument pos:start="137:55" pos:end="139:66"><expr pos:start="137:55" pos:end="139:66"><name pos:start="137:55" pos:end="137:63"><name pos:start="137:55" pos:end="137:55">s</name><operator pos:start="137:56" pos:end="137:57">-&gt;</operator><name pos:start="137:58" pos:end="137:63">lambda</name></name> <operator pos:start="137:65" pos:end="137:65">*</operator>

                                       <operator pos:start="139:40" pos:end="139:40">(</operator><name pos:start="139:41" pos:end="139:49"><name pos:start="139:41" pos:end="139:41">s</name><operator pos:start="139:42" pos:end="139:43">-&gt;</operator><name pos:start="139:44" pos:end="139:49">qscale</name></name> <operator pos:start="139:51" pos:end="139:51">+</operator> <literal type="number" pos:start="139:53" pos:end="139:53">1</literal><operator pos:start="139:54" pos:end="139:54">)</operator> <operator pos:start="139:56" pos:end="139:56">/</operator> <name pos:start="139:58" pos:end="139:66"><name pos:start="139:58" pos:end="139:58">s</name><operator pos:start="139:59" pos:end="139:60">-&gt;</operator><name pos:start="139:61" pos:end="139:66">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="141:17" pos:end="155:17"><if pos:start="141:17" pos:end="155:17">if <condition pos:start="141:20" pos:end="141:38">(<expr pos:start="141:21" pos:end="141:37"><name pos:start="141:21" pos:end="141:37"><name pos:start="141:21" pos:end="141:21">s</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:37">adaptive_quant</name></name></expr>)</condition> <block pos:start="141:40" pos:end="155:17">{<block_content pos:start="143:21" pos:end="153:45">

                    <decl_stmt pos:start="143:21" pos:end="143:26"><decl pos:start="143:21" pos:end="143:25"><type pos:start="143:21" pos:end="143:23"><name pos:start="143:21" pos:end="143:23">int</name></type> <name pos:start="143:25" pos:end="143:25">i</name></decl>;</decl_stmt>

                    <for pos:start="145:21" pos:end="153:45">for <control pos:start="145:25" pos:end="145:69">(<init pos:start="145:26" pos:end="145:31"><expr pos:start="145:26" pos:end="145:30"><name pos:start="145:26" pos:end="145:26">i</name> <operator pos:start="145:28" pos:end="145:28">=</operator> <literal type="number" pos:start="145:30" pos:end="145:30">0</literal></expr>;</init> <condition pos:start="145:33" pos:end="145:64"><expr pos:start="145:33" pos:end="145:63"><name pos:start="145:33" pos:end="145:33">i</name> <operator pos:start="145:35" pos:end="145:35">&lt;</operator> <name pos:start="145:37" pos:end="145:48"><name pos:start="145:37" pos:end="145:37">s</name><operator pos:start="145:38" pos:end="145:39">-&gt;</operator><name pos:start="145:40" pos:end="145:48">mb_height</name></name> <operator pos:start="145:50" pos:end="145:50">*</operator> <name pos:start="145:52" pos:end="145:63"><name pos:start="145:52" pos:end="145:52">s</name><operator pos:start="145:53" pos:end="145:54">-&gt;</operator><name pos:start="145:55" pos:end="145:63">mb_stride</name></name></expr>;</condition> <incr pos:start="145:66" pos:end="145:68"><expr pos:start="145:66" pos:end="145:68"><name pos:start="145:66" pos:end="145:66">i</name><operator pos:start="145:67" pos:end="145:68">++</operator></expr></incr>)</control><block type="pseudo" pos:start="147:25" pos:end="153:45"><block_content pos:start="147:25" pos:end="153:45">

                        <expr_stmt pos:start="147:25" pos:end="153:45"><expr pos:start="147:25" pos:end="153:44"><name pos:start="147:25" pos:end="147:42"><name pos:start="147:25" pos:end="147:25">s</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:39">lambda_table</name><index pos:start="147:40" pos:end="147:42">[<expr pos:start="147:41" pos:end="147:41"><name pos:start="147:41" pos:end="147:41">i</name></expr>]</index></name> <operator pos:start="147:44" pos:end="147:44">=</operator>

                            <call pos:start="149:29" pos:end="153:44"><name pos:start="149:29" pos:end="149:33">FFMAX</name><argument_list pos:start="149:34" pos:end="153:44">(<argument pos:start="149:35" pos:end="149:56"><expr pos:start="149:35" pos:end="149:56"><name pos:start="149:35" pos:end="149:52"><name pos:start="149:35" pos:end="149:35">s</name><operator pos:start="149:36" pos:end="149:37">-&gt;</operator><name pos:start="149:38" pos:end="149:49">lambda_table</name><index pos:start="149:50" pos:end="149:52">[<expr pos:start="149:51" pos:end="149:51"><name pos:start="149:51" pos:end="149:51">i</name></expr>]</index></name> <operator pos:start="149:54" pos:end="149:54">+</operator> <literal type="number" pos:start="149:56" pos:end="149:56">1</literal></expr></argument>,

                                  <argument pos:start="151:35" pos:end="153:43"><expr pos:start="151:35" pos:end="153:43"><name pos:start="151:35" pos:end="151:52"><name pos:start="151:35" pos:end="151:35">s</name><operator pos:start="151:36" pos:end="151:37">-&gt;</operator><name pos:start="151:38" pos:end="151:49">lambda_table</name><index pos:start="151:50" pos:end="151:52">[<expr pos:start="151:51" pos:end="151:51"><name pos:start="151:51" pos:end="151:51">i</name></expr>]</index></name> <operator pos:start="151:54" pos:end="151:54">*</operator> <operator pos:start="151:56" pos:end="151:56">(</operator><name pos:start="151:57" pos:end="151:65"><name pos:start="151:57" pos:end="151:57">s</name><operator pos:start="151:58" pos:end="151:59">-&gt;</operator><name pos:start="151:60" pos:end="151:65">qscale</name></name> <operator pos:start="151:67" pos:end="151:67">+</operator> <literal type="number" pos:start="151:69" pos:end="151:69">1</literal><operator pos:start="151:70" pos:end="151:70">)</operator> <operator pos:start="151:72" pos:end="151:72">/</operator>

                                  <name pos:start="153:35" pos:end="153:43"><name pos:start="153:35" pos:end="153:35">s</name><operator pos:start="153:36" pos:end="153:37">-&gt;</operator><name pos:start="153:38" pos:end="153:43">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:34"><expr pos:start="157:17" pos:end="157:33"><name pos:start="157:17" pos:end="157:29"><name pos:start="157:17" pos:end="157:17">s</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:29">mb_skipped</name></name> <operator pos:start="157:31" pos:end="157:31">=</operator> <literal type="number" pos:start="157:33" pos:end="157:33">0</literal></expr>;</expr_stmt>        <comment type="line" pos:start="157:43" pos:end="157:66">// done in frame_start()</comment>

                <comment type="line" pos:start="159:17" pos:end="159:62">// done in encode_picture() so we must undo it</comment>

                <if_stmt pos:start="161:17" pos:end="171:17"><if pos:start="161:17" pos:end="171:17">if <condition pos:start="161:20" pos:end="161:54">(<expr pos:start="161:21" pos:end="161:53"><name pos:start="161:21" pos:end="161:32"><name pos:start="161:21" pos:end="161:21">s</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:32">pict_type</name></name> <operator pos:start="161:34" pos:end="161:35">==</operator> <name pos:start="161:37" pos:end="161:53">AV_PICTURE_TYPE_P</name></expr>)</condition> <block pos:start="161:56" pos:end="171:17">{<block_content pos:start="163:21" pos:end="169:44">

                    <if_stmt pos:start="163:21" pos:end="169:44"><if pos:start="163:21" pos:end="169:44">if <condition pos:start="163:24" pos:end="167:57">(<expr pos:start="163:25" pos:end="167:56"><name pos:start="163:25" pos:end="163:44"><name pos:start="163:25" pos:end="163:25">s</name><operator pos:start="163:26" pos:end="163:27">-&gt;</operator><name pos:start="163:28" pos:end="163:44">flipflop_rounding</name></name>          <operator pos:start="163:55" pos:end="163:56">||</operator>

                        <name pos:start="165:25" pos:end="165:35"><name pos:start="165:25" pos:end="165:25">s</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:35">codec_id</name></name> <operator pos:start="165:37" pos:end="165:38">==</operator> <name pos:start="165:40" pos:end="165:56">AV_CODEC_ID_H263P</name> <operator pos:start="165:58" pos:end="165:59">||</operator>

                        <name pos:start="167:25" pos:end="167:35"><name pos:start="167:25" pos:end="167:25">s</name><operator pos:start="167:26" pos:end="167:27">-&gt;</operator><name pos:start="167:28" pos:end="167:35">codec_id</name></name> <operator pos:start="167:37" pos:end="167:38">==</operator> <name pos:start="167:40" pos:end="167:56">AV_CODEC_ID_MPEG4</name></expr>)</condition><block type="pseudo" pos:start="169:25" pos:end="169:44"><block_content pos:start="169:25" pos:end="169:44">

                        <expr_stmt pos:start="169:25" pos:end="169:44"><expr pos:start="169:25" pos:end="169:43"><name pos:start="169:25" pos:end="169:38"><name pos:start="169:25" pos:end="169:25">s</name><operator pos:start="169:26" pos:end="169:27">-&gt;</operator><name pos:start="169:28" pos:end="169:38">no_rounding</name></name> <operator pos:start="169:40" pos:end="169:41">^=</operator> <literal type="number" pos:start="169:43" pos:end="169:43">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="173:17" pos:end="179:17"><if pos:start="173:17" pos:end="179:17">if <condition pos:start="173:20" pos:end="173:54">(<expr pos:start="173:21" pos:end="173:53"><name pos:start="173:21" pos:end="173:32"><name pos:start="173:21" pos:end="173:21">s</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:32">pict_type</name></name> <operator pos:start="173:34" pos:end="173:35">!=</operator> <name pos:start="173:37" pos:end="173:53">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="173:56" pos:end="179:17">{<block_content pos:start="175:21" pos:end="177:62">

                    <expr_stmt pos:start="175:21" pos:end="175:59"><expr pos:start="175:21" pos:end="175:58"><name pos:start="175:21" pos:end="175:32"><name pos:start="175:21" pos:end="175:21">s</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:32">time_base</name></name>       <operator pos:start="175:40" pos:end="175:40">=</operator> <name pos:start="175:42" pos:end="175:58"><name pos:start="175:42" pos:end="175:42">s</name><operator pos:start="175:43" pos:end="175:44">-&gt;</operator><name pos:start="175:45" pos:end="175:58">last_time_base</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="177:21" pos:end="177:62"><expr pos:start="177:21" pos:end="177:61"><name pos:start="177:21" pos:end="177:38"><name pos:start="177:21" pos:end="177:21">s</name><operator pos:start="177:22" pos:end="177:23">-&gt;</operator><name pos:start="177:24" pos:end="177:38">last_non_b_time</name></name> <operator pos:start="177:40" pos:end="177:40">=</operator> <name pos:start="177:42" pos:end="177:48"><name pos:start="177:42" pos:end="177:42">s</name><operator pos:start="177:43" pos:end="177:44">-&gt;</operator><name pos:start="177:45" pos:end="177:48">time</name></name> <operator pos:start="177:50" pos:end="177:50">-</operator> <name pos:start="177:52" pos:end="177:61"><name pos:start="177:52" pos:end="177:52">s</name><operator pos:start="177:53" pos:end="177:54">-&gt;</operator><name pos:start="177:55" pos:end="177:61">pp_time</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <for pos:start="181:17" pos:end="187:17">for <control pos:start="181:21" pos:end="181:51">(<init pos:start="181:22" pos:end="181:27"><expr pos:start="181:22" pos:end="181:26"><name pos:start="181:22" pos:end="181:22">i</name> <operator pos:start="181:24" pos:end="181:24">=</operator> <literal type="number" pos:start="181:26" pos:end="181:26">0</literal></expr>;</init> <condition pos:start="181:29" pos:end="181:46"><expr pos:start="181:29" pos:end="181:45"><name pos:start="181:29" pos:end="181:29">i</name> <operator pos:start="181:31" pos:end="181:31">&lt;</operator> <name pos:start="181:33" pos:end="181:45">context_count</name></expr>;</condition> <incr pos:start="181:48" pos:end="181:50"><expr pos:start="181:48" pos:end="181:50"><name pos:start="181:48" pos:end="181:48">i</name><operator pos:start="181:49" pos:end="181:50">++</operator></expr></incr>)</control> <block pos:start="181:53" pos:end="187:17">{<block_content pos:start="183:21" pos:end="185:70">

                    <decl_stmt pos:start="183:21" pos:end="183:66"><decl pos:start="183:21" pos:end="183:65"><type pos:start="183:21" pos:end="183:35"><name pos:start="183:21" pos:end="183:33">PutBitContext</name> <modifier pos:start="183:35" pos:end="183:35">*</modifier></type><name pos:start="183:36" pos:end="183:37">pb</name> <init pos:start="183:39" pos:end="183:65">= <expr pos:start="183:41" pos:end="183:65"><operator pos:start="183:41" pos:end="183:41">&amp;</operator><name pos:start="183:42" pos:end="183:61"><name pos:start="183:42" pos:end="183:42">s</name><operator pos:start="183:43" pos:end="183:44">-&gt;</operator><name pos:start="183:45" pos:end="183:58">thread_context</name><index pos:start="183:59" pos:end="183:61">[<expr pos:start="183:60" pos:end="183:60"><name pos:start="183:60" pos:end="183:60">i</name></expr>]</index></name><operator pos:start="183:62" pos:end="183:63">-&gt;</operator><name pos:start="183:64" pos:end="183:65">pb</name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="185:21" pos:end="185:70"><expr pos:start="185:21" pos:end="185:69"><call pos:start="185:21" pos:end="185:69"><name pos:start="185:21" pos:end="185:33">init_put_bits</name><argument_list pos:start="185:34" pos:end="185:69">(<argument pos:start="185:35" pos:end="185:36"><expr pos:start="185:35" pos:end="185:36"><name pos:start="185:35" pos:end="185:36">pb</name></expr></argument>, <argument pos:start="185:39" pos:end="185:45"><expr pos:start="185:39" pos:end="185:45"><name pos:start="185:39" pos:end="185:45"><name pos:start="185:39" pos:end="185:40">pb</name><operator pos:start="185:41" pos:end="185:42">-&gt;</operator><name pos:start="185:43" pos:end="185:45">buf</name></name></expr></argument>, <argument pos:start="185:48" pos:end="185:68"><expr pos:start="185:48" pos:end="185:68"><name pos:start="185:48" pos:end="185:58"><name pos:start="185:48" pos:end="185:49">pb</name><operator pos:start="185:50" pos:end="185:51">-&gt;</operator><name pos:start="185:52" pos:end="185:58">buf_end</name></name> <operator pos:start="185:60" pos:end="185:60">-</operator> <name pos:start="185:62" pos:end="185:68"><name pos:start="185:62" pos:end="185:63">pb</name><operator pos:start="185:64" pos:end="185:65">-&gt;</operator><name pos:start="185:66" pos:end="185:68">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <goto pos:start="189:17" pos:end="189:31">goto <name pos:start="189:22" pos:end="189:30">vbv_retry</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="195:13" pos:end="195:42"><expr pos:start="195:13" pos:end="195:41"><call pos:start="195:13" pos:end="195:41"><name pos:start="195:13" pos:end="195:18">assert</name><argument_list pos:start="195:19" pos:end="195:41">(<argument pos:start="195:20" pos:end="195:40"><expr pos:start="195:20" pos:end="195:40"><name pos:start="195:20" pos:end="195:40"><name pos:start="195:20" pos:end="195:20">s</name><operator pos:start="195:21" pos:end="195:22">-&gt;</operator><name pos:start="195:23" pos:end="195:27">avctx</name><operator pos:start="195:28" pos:end="195:29">-&gt;</operator><name pos:start="195:30" pos:end="195:40">rc_max_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="201:9" pos:end="203:36"><if pos:start="201:9" pos:end="203:36">if <condition pos:start="201:12" pos:end="201:40">(<expr pos:start="201:13" pos:end="201:39"><name pos:start="201:13" pos:end="201:20"><name pos:start="201:13" pos:end="201:13">s</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:20">flags</name></name> <operator pos:start="201:22" pos:end="201:22">&amp;</operator> <name pos:start="201:24" pos:end="201:39">CODEC_FLAG_PASS1</name></expr>)</condition><block type="pseudo" pos:start="203:13" pos:end="203:36"><block_content pos:start="203:13" pos:end="203:36">

            <expr_stmt pos:start="203:13" pos:end="203:36"><expr pos:start="203:13" pos:end="203:35"><call pos:start="203:13" pos:end="203:35"><name pos:start="203:13" pos:end="203:32">ff_write_pass1_stats</name><argument_list pos:start="203:33" pos:end="203:35">(<argument pos:start="203:34" pos:end="203:34"><expr pos:start="203:34" pos:end="203:34"><name pos:start="203:34" pos:end="203:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="207:9" pos:end="213:9">for <control pos:start="207:13" pos:end="207:31">(<init pos:start="207:14" pos:end="207:19"><expr pos:start="207:14" pos:end="207:18"><name pos:start="207:14" pos:end="207:14">i</name> <operator pos:start="207:16" pos:end="207:16">=</operator> <literal type="number" pos:start="207:18" pos:end="207:18">0</literal></expr>;</init> <condition pos:start="207:21" pos:end="207:26"><expr pos:start="207:21" pos:end="207:25"><name pos:start="207:21" pos:end="207:21">i</name> <operator pos:start="207:23" pos:end="207:23">&lt;</operator> <literal type="number" pos:start="207:25" pos:end="207:25">4</literal></expr>;</condition> <incr pos:start="207:28" pos:end="207:30"><expr pos:start="207:28" pos:end="207:30"><name pos:start="207:28" pos:end="207:28">i</name><operator pos:start="207:29" pos:end="207:30">++</operator></expr></incr>)</control> <block pos:start="207:33" pos:end="213:9">{<block_content pos:start="209:13" pos:end="211:67">

            <expr_stmt pos:start="209:13" pos:end="209:81"><expr pos:start="209:13" pos:end="209:80"><name pos:start="209:13" pos:end="209:47"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:34">current_picture_ptr</name><operator pos:start="209:35" pos:end="209:36">-&gt;</operator><name pos:start="209:37" pos:end="209:37">f</name><operator pos:start="209:38" pos:end="209:39">-&gt;</operator><name pos:start="209:40" pos:end="209:44">error</name><index pos:start="209:45" pos:end="209:47">[<expr pos:start="209:46" pos:end="209:46"><name pos:start="209:46" pos:end="209:46">i</name></expr>]</index></name> <operator pos:start="209:49" pos:end="209:49">=</operator> <name pos:start="209:51" pos:end="209:80"><name pos:start="209:51" pos:end="209:51">s</name><operator pos:start="209:52" pos:end="209:53">-&gt;</operator><name pos:start="209:54" pos:end="209:68">current_picture</name><operator pos:start="209:69" pos:end="209:69">.</operator><name pos:start="209:70" pos:end="209:70">f</name><operator pos:start="209:71" pos:end="209:72">-&gt;</operator><name pos:start="209:73" pos:end="209:77">error</name><index pos:start="209:78" pos:end="209:80">[<expr pos:start="209:79" pos:end="209:79"><name pos:start="209:79" pos:end="209:79">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:67"><expr pos:start="211:13" pos:end="211:66"><name pos:start="211:13" pos:end="211:27"><name pos:start="211:13" pos:end="211:17">avctx</name><operator pos:start="211:18" pos:end="211:19">-&gt;</operator><name pos:start="211:20" pos:end="211:24">error</name><index pos:start="211:25" pos:end="211:27">[<expr pos:start="211:26" pos:end="211:26"><name pos:start="211:26" pos:end="211:26">i</name></expr>]</index></name> <operator pos:start="211:29" pos:end="211:30">+=</operator> <name pos:start="211:32" pos:end="211:66"><name pos:start="211:32" pos:end="211:32">s</name><operator pos:start="211:33" pos:end="211:34">-&gt;</operator><name pos:start="211:35" pos:end="211:53">current_picture_ptr</name><operator pos:start="211:54" pos:end="211:55">-&gt;</operator><name pos:start="211:56" pos:end="211:56">f</name><operator pos:start="211:57" pos:end="211:58">-&gt;</operator><name pos:start="211:59" pos:end="211:63">error</name><index pos:start="211:64" pos:end="211:66">[<expr pos:start="211:65" pos:end="211:65"><name pos:start="211:65" pos:end="211:65">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="217:9" pos:end="223:47"><if pos:start="217:9" pos:end="223:47">if <condition pos:start="217:12" pos:end="217:40">(<expr pos:start="217:13" pos:end="217:39"><name pos:start="217:13" pos:end="217:20"><name pos:start="217:13" pos:end="217:13">s</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:20">flags</name></name> <operator pos:start="217:22" pos:end="217:22">&amp;</operator> <name pos:start="217:24" pos:end="217:39">CODEC_FLAG_PASS1</name></expr>)</condition><block type="pseudo" pos:start="219:13" pos:end="223:47"><block_content pos:start="219:13" pos:end="223:47">

            <expr_stmt pos:start="219:13" pos:end="223:47"><expr pos:start="219:13" pos:end="223:46"><call pos:start="219:13" pos:end="223:46"><name pos:start="219:13" pos:end="219:18">assert</name><argument_list pos:start="219:19" pos:end="223:46">(<argument pos:start="219:20" pos:end="223:45"><expr pos:start="219:20" pos:end="223:45"><name pos:start="219:20" pos:end="219:37"><name pos:start="219:20" pos:end="219:24">avctx</name><operator pos:start="219:25" pos:end="219:26">-&gt;</operator><name pos:start="219:27" pos:end="219:37">header_bits</name></name> <operator pos:start="219:39" pos:end="219:39">+</operator> <name pos:start="219:41" pos:end="219:54"><name pos:start="219:41" pos:end="219:45">avctx</name><operator pos:start="219:46" pos:end="219:47">-&gt;</operator><name pos:start="219:48" pos:end="219:54">mv_bits</name></name> <operator pos:start="219:56" pos:end="219:56">+</operator> <name pos:start="219:58" pos:end="219:73"><name pos:start="219:58" pos:end="219:62">avctx</name><operator pos:start="219:63" pos:end="219:64">-&gt;</operator><name pos:start="219:65" pos:end="219:73">misc_bits</name></name> <operator pos:start="219:75" pos:end="219:75">+</operator>

                   <name pos:start="221:20" pos:end="221:36"><name pos:start="221:20" pos:end="221:24">avctx</name><operator pos:start="221:25" pos:end="221:26">-&gt;</operator><name pos:start="221:27" pos:end="221:36">i_tex_bits</name></name> <operator pos:start="221:38" pos:end="221:38">+</operator> <name pos:start="221:40" pos:end="221:56"><name pos:start="221:40" pos:end="221:44">avctx</name><operator pos:start="221:45" pos:end="221:46">-&gt;</operator><name pos:start="221:47" pos:end="221:56">p_tex_bits</name></name> <operator pos:start="221:58" pos:end="221:59">==</operator>

                       <call pos:start="223:24" pos:end="223:45"><name pos:start="223:24" pos:end="223:37">put_bits_count</name><argument_list pos:start="223:38" pos:end="223:45">(<argument pos:start="223:39" pos:end="223:44"><expr pos:start="223:39" pos:end="223:44"><operator pos:start="223:39" pos:end="223:39">&amp;</operator><name pos:start="223:40" pos:end="223:44"><name pos:start="223:40" pos:end="223:40">s</name><operator pos:start="223:41" pos:end="223:42">-&gt;</operator><name pos:start="223:43" pos:end="223:44">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:31"><expr pos:start="225:9" pos:end="225:30"><call pos:start="225:9" pos:end="225:30"><name pos:start="225:9" pos:end="225:22">flush_put_bits</name><argument_list pos:start="225:23" pos:end="225:30">(<argument pos:start="225:24" pos:end="225:29"><expr pos:start="225:24" pos:end="225:29"><operator pos:start="225:24" pos:end="225:24">&amp;</operator><name pos:start="225:25" pos:end="225:29"><name pos:start="225:25" pos:end="225:25">s</name><operator pos:start="225:26" pos:end="225:27">-&gt;</operator><name pos:start="225:28" pos:end="225:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:48"><expr pos:start="227:9" pos:end="227:47"><name pos:start="227:9" pos:end="227:21"><name pos:start="227:9" pos:end="227:9">s</name><operator pos:start="227:10" pos:end="227:11">-&gt;</operator><name pos:start="227:12" pos:end="227:21">frame_bits</name></name>  <operator pos:start="227:24" pos:end="227:24">=</operator> <call pos:start="227:26" pos:end="227:47"><name pos:start="227:26" pos:end="227:39">put_bits_count</name><argument_list pos:start="227:40" pos:end="227:47">(<argument pos:start="227:41" pos:end="227:46"><expr pos:start="227:41" pos:end="227:46"><operator pos:start="227:41" pos:end="227:41">&amp;</operator><name pos:start="227:42" pos:end="227:46"><name pos:start="227:42" pos:end="227:42">s</name><operator pos:start="227:43" pos:end="227:44">-&gt;</operator><name pos:start="227:45" pos:end="227:46">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="231:9" pos:end="231:57"><expr pos:start="231:9" pos:end="231:56"><name pos:start="231:9" pos:end="231:22">stuffing_count</name> <operator pos:start="231:24" pos:end="231:24">=</operator> <call pos:start="231:26" pos:end="231:56"><name pos:start="231:26" pos:end="231:38">ff_vbv_update</name><argument_list pos:start="231:39" pos:end="231:56">(<argument pos:start="231:40" pos:end="231:40"><expr pos:start="231:40" pos:end="231:40"><name pos:start="231:40" pos:end="231:40">s</name></expr></argument>, <argument pos:start="231:43" pos:end="231:55"><expr pos:start="231:43" pos:end="231:55"><name pos:start="231:43" pos:end="231:55"><name pos:start="231:43" pos:end="231:43">s</name><operator pos:start="231:44" pos:end="231:45">-&gt;</operator><name pos:start="231:46" pos:end="231:55">frame_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="233:9" pos:end="287:9"><if pos:start="233:9" pos:end="287:9">if <condition pos:start="233:12" pos:end="233:27">(<expr pos:start="233:13" pos:end="233:26"><name pos:start="233:13" pos:end="233:26">stuffing_count</name></expr>)</condition> <block pos:start="233:29" pos:end="287:9">{<block_content pos:start="235:13" pos:end="285:52">

            <if_stmt pos:start="235:13" pos:end="243:13"><if pos:start="235:13" pos:end="243:13">if <condition pos:start="235:16" pos:end="237:40">(<expr pos:start="235:17" pos:end="237:39"><name pos:start="235:17" pos:end="235:29"><name pos:start="235:17" pos:end="235:17">s</name><operator pos:start="235:18" pos:end="235:19">-&gt;</operator><name pos:start="235:20" pos:end="235:21">pb</name><operator pos:start="235:22" pos:end="235:22">.</operator><name pos:start="235:23" pos:end="235:29">buf_end</name></name> <operator pos:start="235:31" pos:end="235:31">-</operator> <name pos:start="235:33" pos:end="235:41"><name pos:start="235:33" pos:end="235:33">s</name><operator pos:start="235:34" pos:end="235:35">-&gt;</operator><name pos:start="235:36" pos:end="235:37">pb</name><operator pos:start="235:38" pos:end="235:38">.</operator><name pos:start="235:39" pos:end="235:41">buf</name></name> <operator pos:start="235:43" pos:end="235:43">-</operator> <operator pos:start="235:45" pos:end="235:45">(</operator><call pos:start="235:46" pos:end="235:67"><name pos:start="235:46" pos:end="235:59">put_bits_count</name><argument_list pos:start="235:60" pos:end="235:67">(<argument pos:start="235:61" pos:end="235:66"><expr pos:start="235:61" pos:end="235:66"><operator pos:start="235:61" pos:end="235:61">&amp;</operator><name pos:start="235:62" pos:end="235:66"><name pos:start="235:62" pos:end="235:62">s</name><operator pos:start="235:63" pos:end="235:64">-&gt;</operator><name pos:start="235:65" pos:end="235:66">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="235:69" pos:end="235:70">&gt;&gt;</operator> <literal type="number" pos:start="235:72" pos:end="235:72">3</literal><operator pos:start="235:73" pos:end="235:73">)</operator> <operator pos:start="235:75" pos:end="235:75">&lt;</operator>

                    <name pos:start="237:21" pos:end="237:34">stuffing_count</name> <operator pos:start="237:36" pos:end="237:36">+</operator> <literal type="number" pos:start="237:38" pos:end="237:39">50</literal></expr>)</condition> <block pos:start="237:42" pos:end="243:13">{<block_content pos:start="239:17" pos:end="241:26">

                <expr_stmt pos:start="239:17" pos:end="239:71"><expr pos:start="239:17" pos:end="239:70"><call pos:start="239:17" pos:end="239:70"><name pos:start="239:17" pos:end="239:22">av_log</name><argument_list pos:start="239:23" pos:end="239:70">(<argument pos:start="239:24" pos:end="239:31"><expr pos:start="239:24" pos:end="239:31"><name pos:start="239:24" pos:end="239:31"><name pos:start="239:24" pos:end="239:24">s</name><operator pos:start="239:25" pos:end="239:26">-&gt;</operator><name pos:start="239:27" pos:end="239:31">avctx</name></name></expr></argument>, <argument pos:start="239:34" pos:end="239:45"><expr pos:start="239:34" pos:end="239:45"><name pos:start="239:34" pos:end="239:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="239:48" pos:end="239:69"><expr pos:start="239:48" pos:end="239:69"><literal type="string" pos:start="239:48" pos:end="239:69">"stuffing too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="241:17" pos:end="241:26">return <expr pos:start="241:24" pos:end="241:25"><operator pos:start="241:24" pos:end="241:24">-</operator><literal type="number" pos:start="241:25" pos:end="241:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <switch pos:start="247:13" pos:end="281:13">switch <condition pos:start="247:20" pos:end="247:32">(<expr pos:start="247:21" pos:end="247:31"><name pos:start="247:21" pos:end="247:31"><name pos:start="247:21" pos:end="247:21">s</name><operator pos:start="247:22" pos:end="247:23">-&gt;</operator><name pos:start="247:24" pos:end="247:31">codec_id</name></name></expr>)</condition> <block pos:start="247:34" pos:end="281:13">{<block_content pos:start="249:13" pos:end="279:72">

            <case pos:start="249:13" pos:end="249:40">case <expr pos:start="249:18" pos:end="249:39"><name pos:start="249:18" pos:end="249:39">AV_CODEC_ID_MPEG1VIDEO</name></expr>:</case>

            <case pos:start="251:13" pos:end="251:40">case <expr pos:start="251:18" pos:end="251:39"><name pos:start="251:18" pos:end="251:39">AV_CODEC_ID_MPEG2VIDEO</name></expr>:</case>

                <while pos:start="253:17" pos:end="257:17">while <condition pos:start="253:23" pos:end="253:40">(<expr pos:start="253:24" pos:end="253:39"><name pos:start="253:24" pos:end="253:37">stuffing_count</name><operator pos:start="253:38" pos:end="253:39">--</operator></expr>)</condition> <block pos:start="253:42" pos:end="257:17">{<block_content pos:start="255:21" pos:end="255:43">

                    <expr_stmt pos:start="255:21" pos:end="255:43"><expr pos:start="255:21" pos:end="255:42"><call pos:start="255:21" pos:end="255:42"><name pos:start="255:21" pos:end="255:28">put_bits</name><argument_list pos:start="255:29" pos:end="255:42">(<argument pos:start="255:30" pos:end="255:35"><expr pos:start="255:30" pos:end="255:35"><operator pos:start="255:30" pos:end="255:30">&amp;</operator><name pos:start="255:31" pos:end="255:35"><name pos:start="255:31" pos:end="255:31">s</name><operator pos:start="255:32" pos:end="255:33">-&gt;</operator><name pos:start="255:34" pos:end="255:35">pb</name></name></expr></argument>, <argument pos:start="255:38" pos:end="255:38"><expr pos:start="255:38" pos:end="255:38"><literal type="number" pos:start="255:38" pos:end="255:38">8</literal></expr></argument>, <argument pos:start="255:41" pos:end="255:41"><expr pos:start="255:41" pos:end="255:41"><literal type="number" pos:start="255:41" pos:end="255:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></while>

            <break pos:start="259:13" pos:end="259:18">break;</break>

            <case pos:start="261:13" pos:end="261:35">case <expr pos:start="261:18" pos:end="261:34"><name pos:start="261:18" pos:end="261:34">AV_CODEC_ID_MPEG4</name></expr>:</case>

                <expr_stmt pos:start="263:17" pos:end="263:40"><expr pos:start="263:17" pos:end="263:39"><call pos:start="263:17" pos:end="263:39"><name pos:start="263:17" pos:end="263:24">put_bits</name><argument_list pos:start="263:25" pos:end="263:39">(<argument pos:start="263:26" pos:end="263:31"><expr pos:start="263:26" pos:end="263:31"><operator pos:start="263:26" pos:end="263:26">&amp;</operator><name pos:start="263:27" pos:end="263:31"><name pos:start="263:27" pos:end="263:27">s</name><operator pos:start="263:28" pos:end="263:29">-&gt;</operator><name pos:start="263:30" pos:end="263:31">pb</name></name></expr></argument>, <argument pos:start="263:34" pos:end="263:35"><expr pos:start="263:34" pos:end="263:35"><literal type="number" pos:start="263:34" pos:end="263:35">16</literal></expr></argument>, <argument pos:start="263:38" pos:end="263:38"><expr pos:start="263:38" pos:end="263:38"><literal type="number" pos:start="263:38" pos:end="263:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="265:17" pos:end="265:44"><expr pos:start="265:17" pos:end="265:43"><call pos:start="265:17" pos:end="265:43"><name pos:start="265:17" pos:end="265:24">put_bits</name><argument_list pos:start="265:25" pos:end="265:43">(<argument pos:start="265:26" pos:end="265:31"><expr pos:start="265:26" pos:end="265:31"><operator pos:start="265:26" pos:end="265:26">&amp;</operator><name pos:start="265:27" pos:end="265:31"><name pos:start="265:27" pos:end="265:27">s</name><operator pos:start="265:28" pos:end="265:29">-&gt;</operator><name pos:start="265:30" pos:end="265:31">pb</name></name></expr></argument>, <argument pos:start="265:34" pos:end="265:35"><expr pos:start="265:34" pos:end="265:35"><literal type="number" pos:start="265:34" pos:end="265:35">16</literal></expr></argument>, <argument pos:start="265:38" pos:end="265:42"><expr pos:start="265:38" pos:end="265:42"><literal type="number" pos:start="265:38" pos:end="265:42">0x1C3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="267:17" pos:end="267:36"><expr pos:start="267:17" pos:end="267:35"><name pos:start="267:17" pos:end="267:30">stuffing_count</name> <operator pos:start="267:32" pos:end="267:33">-=</operator> <literal type="number" pos:start="267:35" pos:end="267:35">4</literal></expr>;</expr_stmt>

                <while pos:start="269:17" pos:end="273:17">while <condition pos:start="269:23" pos:end="269:40">(<expr pos:start="269:24" pos:end="269:39"><name pos:start="269:24" pos:end="269:37">stuffing_count</name><operator pos:start="269:38" pos:end="269:39">--</operator></expr>)</condition> <block pos:start="269:42" pos:end="273:17">{<block_content pos:start="271:21" pos:end="271:46">

                    <expr_stmt pos:start="271:21" pos:end="271:46"><expr pos:start="271:21" pos:end="271:45"><call pos:start="271:21" pos:end="271:45"><name pos:start="271:21" pos:end="271:28">put_bits</name><argument_list pos:start="271:29" pos:end="271:45">(<argument pos:start="271:30" pos:end="271:35"><expr pos:start="271:30" pos:end="271:35"><operator pos:start="271:30" pos:end="271:30">&amp;</operator><name pos:start="271:31" pos:end="271:35"><name pos:start="271:31" pos:end="271:31">s</name><operator pos:start="271:32" pos:end="271:33">-&gt;</operator><name pos:start="271:34" pos:end="271:35">pb</name></name></expr></argument>, <argument pos:start="271:38" pos:end="271:38"><expr pos:start="271:38" pos:end="271:38"><literal type="number" pos:start="271:38" pos:end="271:38">8</literal></expr></argument>, <argument pos:start="271:41" pos:end="271:44"><expr pos:start="271:41" pos:end="271:44"><literal type="number" pos:start="271:41" pos:end="271:44">0xFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></while>

            <break pos:start="275:13" pos:end="275:18">break;</break>

            <default pos:start="277:13" pos:end="277:20">default:</default>

                <expr_stmt pos:start="279:17" pos:end="279:72"><expr pos:start="279:17" pos:end="279:71"><call pos:start="279:17" pos:end="279:71"><name pos:start="279:17" pos:end="279:22">av_log</name><argument_list pos:start="279:23" pos:end="279:71">(<argument pos:start="279:24" pos:end="279:31"><expr pos:start="279:24" pos:end="279:31"><name pos:start="279:24" pos:end="279:31"><name pos:start="279:24" pos:end="279:24">s</name><operator pos:start="279:25" pos:end="279:26">-&gt;</operator><name pos:start="279:27" pos:end="279:31">avctx</name></name></expr></argument>, <argument pos:start="279:34" pos:end="279:45"><expr pos:start="279:34" pos:end="279:45"><name pos:start="279:34" pos:end="279:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="279:48" pos:end="279:70"><expr pos:start="279:48" pos:end="279:70"><literal type="string" pos:start="279:48" pos:end="279:70">"vbv buffer overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

            <expr_stmt pos:start="283:13" pos:end="283:35"><expr pos:start="283:13" pos:end="283:34"><call pos:start="283:13" pos:end="283:34"><name pos:start="283:13" pos:end="283:26">flush_put_bits</name><argument_list pos:start="283:27" pos:end="283:34">(<argument pos:start="283:28" pos:end="283:33"><expr pos:start="283:28" pos:end="283:33"><operator pos:start="283:28" pos:end="283:28">&amp;</operator><name pos:start="283:29" pos:end="283:33"><name pos:start="283:29" pos:end="283:29">s</name><operator pos:start="283:30" pos:end="283:31">-&gt;</operator><name pos:start="283:32" pos:end="283:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:52"><expr pos:start="285:13" pos:end="285:51"><name pos:start="285:13" pos:end="285:25"><name pos:start="285:13" pos:end="285:13">s</name><operator pos:start="285:14" pos:end="285:15">-&gt;</operator><name pos:start="285:16" pos:end="285:25">frame_bits</name></name>  <operator pos:start="285:28" pos:end="285:28">=</operator> <call pos:start="285:30" pos:end="285:51"><name pos:start="285:30" pos:end="285:43">put_bits_count</name><argument_list pos:start="285:44" pos:end="285:51">(<argument pos:start="285:45" pos:end="285:50"><expr pos:start="285:45" pos:end="285:50"><operator pos:start="285:45" pos:end="285:45">&amp;</operator><name pos:start="285:46" pos:end="285:50"><name pos:start="285:46" pos:end="285:46">s</name><operator pos:start="285:47" pos:end="285:48">-&gt;</operator><name pos:start="285:49" pos:end="285:50">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="291:9" pos:end="291:46">/* update mpeg1/2 vbv_delay for CBR */</comment>

        <if_stmt pos:start="293:9" pos:end="357:9"><if pos:start="293:9" pos:end="357:9">if <condition pos:start="293:12" pos:end="301:49">(<expr pos:start="293:13" pos:end="301:48"><name pos:start="293:13" pos:end="293:33"><name pos:start="293:13" pos:end="293:13">s</name><operator pos:start="293:14" pos:end="293:15">-&gt;</operator><name pos:start="293:16" pos:end="293:20">avctx</name><operator pos:start="293:21" pos:end="293:22">-&gt;</operator><name pos:start="293:23" pos:end="293:33">rc_max_rate</name></name>                          <operator pos:start="293:60" pos:end="293:61">&amp;&amp;</operator>

            <name pos:start="295:13" pos:end="295:33"><name pos:start="295:13" pos:end="295:13">s</name><operator pos:start="295:14" pos:end="295:15">-&gt;</operator><name pos:start="295:16" pos:end="295:20">avctx</name><operator pos:start="295:21" pos:end="295:22">-&gt;</operator><name pos:start="295:23" pos:end="295:33">rc_min_rate</name></name> <operator pos:start="295:35" pos:end="295:36">==</operator> <name pos:start="295:38" pos:end="295:58"><name pos:start="295:38" pos:end="295:38">s</name><operator pos:start="295:39" pos:end="295:40">-&gt;</operator><name pos:start="295:41" pos:end="295:45">avctx</name><operator pos:start="295:46" pos:end="295:47">-&gt;</operator><name pos:start="295:48" pos:end="295:58">rc_max_rate</name></name> <operator pos:start="295:60" pos:end="295:61">&amp;&amp;</operator>

            <name pos:start="297:13" pos:end="297:25"><name pos:start="297:13" pos:end="297:13">s</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:25">out_format</name></name> <operator pos:start="297:27" pos:end="297:28">==</operator> <name pos:start="297:30" pos:end="297:38">FMT_MPEG1</name>                     <operator pos:start="297:60" pos:end="297:61">&amp;&amp;</operator>

            <literal type="number" pos:start="299:13" pos:end="299:19">90000LL</literal> <operator pos:start="299:21" pos:end="299:21">*</operator> <operator pos:start="299:23" pos:end="299:23">(</operator><name pos:start="299:24" pos:end="299:44"><name pos:start="299:24" pos:end="299:28">avctx</name><operator pos:start="299:29" pos:end="299:30">-&gt;</operator><name pos:start="299:31" pos:end="299:44">rc_buffer_size</name></name> <operator pos:start="299:46" pos:end="299:46">-</operator> <literal type="number" pos:start="299:48" pos:end="299:48">1</literal><operator pos:start="299:49" pos:end="299:49">)</operator> <operator pos:start="299:51" pos:end="299:52">&lt;=</operator>

                <name pos:start="301:17" pos:end="301:37"><name pos:start="301:17" pos:end="301:17">s</name><operator pos:start="301:18" pos:end="301:19">-&gt;</operator><name pos:start="301:20" pos:end="301:24">avctx</name><operator pos:start="301:25" pos:end="301:26">-&gt;</operator><name pos:start="301:27" pos:end="301:37">rc_max_rate</name></name> <operator pos:start="301:39" pos:end="301:39">*</operator> <literal type="number" pos:start="301:41" pos:end="301:48">0xFFFFLL</literal></expr>)</condition> <block pos:start="301:51" pos:end="357:9">{<block_content pos:start="303:13" pos:end="355:51">

            <decl_stmt pos:start="303:13" pos:end="303:37"><decl pos:start="303:13" pos:end="303:25"><type pos:start="303:13" pos:end="303:15"><name pos:start="303:13" pos:end="303:15">int</name></type> <name pos:start="303:17" pos:end="303:25">vbv_delay</name></decl>, <decl pos:start="303:28" pos:end="303:36"><type ref="prev" pos:start="303:13" pos:end="303:15"/><name pos:start="303:28" pos:end="303:36">min_delay</name></decl>;</decl_stmt>

            <decl_stmt pos:start="305:13" pos:end="307:57"><decl pos:start="305:13" pos:end="307:56"><type pos:start="305:13" pos:end="305:18"><name pos:start="305:13" pos:end="305:18">double</name></type> <name pos:start="305:20" pos:end="305:25">inbits</name>  <init pos:start="305:28" pos:end="307:56">= <expr pos:start="305:30" pos:end="307:56"><name pos:start="305:30" pos:end="305:50"><name pos:start="305:30" pos:end="305:30">s</name><operator pos:start="305:31" pos:end="305:32">-&gt;</operator><name pos:start="305:33" pos:end="305:37">avctx</name><operator pos:start="305:38" pos:end="305:39">-&gt;</operator><name pos:start="305:40" pos:end="305:50">rc_max_rate</name></name> <operator pos:start="305:52" pos:end="305:52">*</operator>

                             <call pos:start="307:30" pos:end="307:56"><name pos:start="307:30" pos:end="307:35">av_q2d</name><argument_list pos:start="307:36" pos:end="307:56">(<argument pos:start="307:37" pos:end="307:55"><expr pos:start="307:37" pos:end="307:55"><name pos:start="307:37" pos:end="307:55"><name pos:start="307:37" pos:end="307:37">s</name><operator pos:start="307:38" pos:end="307:39">-&gt;</operator><name pos:start="307:40" pos:end="307:44">avctx</name><operator pos:start="307:45" pos:end="307:46">-&gt;</operator><name pos:start="307:47" pos:end="307:55">time_base</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="309:13" pos:end="311:64"><decl pos:start="309:13" pos:end="311:63"><type pos:start="309:13" pos:end="309:15"><name pos:start="309:13" pos:end="309:15">int</name></type>    <name pos:start="309:20" pos:end="309:26">minbits</name> <init pos:start="309:28" pos:end="311:63">= <expr pos:start="309:30" pos:end="311:63"><name pos:start="309:30" pos:end="309:42"><name pos:start="309:30" pos:end="309:30">s</name><operator pos:start="309:31" pos:end="309:32">-&gt;</operator><name pos:start="309:33" pos:end="309:42">frame_bits</name></name> <operator pos:start="309:44" pos:end="309:44">-</operator> <literal type="number" pos:start="309:46" pos:end="309:46">8</literal> <operator pos:start="309:48" pos:end="309:48">*</operator>

                             <operator pos:start="311:30" pos:end="311:30">(</operator><name pos:start="311:31" pos:end="311:46"><name pos:start="311:31" pos:end="311:31">s</name><operator pos:start="311:32" pos:end="311:33">-&gt;</operator><name pos:start="311:34" pos:end="311:46">vbv_delay_ptr</name></name> <operator pos:start="311:48" pos:end="311:48">-</operator> <name pos:start="311:50" pos:end="311:58"><name pos:start="311:50" pos:end="311:50">s</name><operator pos:start="311:51" pos:end="311:52">-&gt;</operator><name pos:start="311:53" pos:end="311:54">pb</name><operator pos:start="311:55" pos:end="311:55">.</operator><name pos:start="311:56" pos:end="311:58">buf</name></name> <operator pos:start="311:60" pos:end="311:60">-</operator> <literal type="number" pos:start="311:62" pos:end="311:62">1</literal><operator pos:start="311:63" pos:end="311:63">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="313:13" pos:end="313:75"><decl pos:start="313:13" pos:end="313:74"><type pos:start="313:13" pos:end="313:18"><name pos:start="313:13" pos:end="313:18">double</name></type> <name pos:start="313:20" pos:end="313:23">bits</name>    <init pos:start="313:28" pos:end="313:74">= <expr pos:start="313:30" pos:end="313:74"><name pos:start="313:30" pos:end="313:55"><name pos:start="313:30" pos:end="313:30">s</name><operator pos:start="313:31" pos:end="313:32">-&gt;</operator><name pos:start="313:33" pos:end="313:42">rc_context</name><operator pos:start="313:43" pos:end="313:43">.</operator><name pos:start="313:44" pos:end="313:55">buffer_index</name></name> <operator pos:start="313:57" pos:end="313:57">+</operator> <name pos:start="313:59" pos:end="313:65">minbits</name> <operator pos:start="313:67" pos:end="313:67">-</operator> <name pos:start="313:69" pos:end="313:74">inbits</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="317:13" pos:end="321:58"><if pos:start="317:13" pos:end="321:58">if <condition pos:start="317:16" pos:end="317:25">(<expr pos:start="317:17" pos:end="317:24"><name pos:start="317:17" pos:end="317:20">bits</name> <operator pos:start="317:22" pos:end="317:22">&lt;</operator> <literal type="number" pos:start="317:24" pos:end="317:24">0</literal></expr>)</condition><block type="pseudo" pos:start="319:17" pos:end="321:58"><block_content pos:start="319:17" pos:end="321:58">

                <expr_stmt pos:start="319:17" pos:end="321:58"><expr pos:start="319:17" pos:end="321:57"><call pos:start="319:17" pos:end="321:57"><name pos:start="319:17" pos:end="319:22">av_log</name><argument_list pos:start="319:23" pos:end="321:57">(<argument pos:start="319:24" pos:end="319:31"><expr pos:start="319:24" pos:end="319:31"><name pos:start="319:24" pos:end="319:31"><name pos:start="319:24" pos:end="319:24">s</name><operator pos:start="319:25" pos:end="319:26">-&gt;</operator><name pos:start="319:27" pos:end="319:31">avctx</name></name></expr></argument>, <argument pos:start="319:34" pos:end="319:45"><expr pos:start="319:34" pos:end="319:45"><name pos:start="319:34" pos:end="319:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="321:24" pos:end="321:56"><expr pos:start="321:24" pos:end="321:56"><literal type="string" pos:start="321:24" pos:end="321:56">"Internal error, negative bits\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="325:13" pos:end="325:47"><expr pos:start="325:13" pos:end="325:46"><call pos:start="325:13" pos:end="325:46"><name pos:start="325:13" pos:end="325:18">assert</name><argument_list pos:start="325:19" pos:end="325:46">(<argument pos:start="325:20" pos:end="325:45"><expr pos:start="325:20" pos:end="325:45"><name pos:start="325:20" pos:end="325:40"><name pos:start="325:20" pos:end="325:20">s</name><operator pos:start="325:21" pos:end="325:22">-&gt;</operator><name pos:start="325:23" pos:end="325:40">repeat_first_field</name></name> <operator pos:start="325:42" pos:end="325:43">==</operator> <literal type="number" pos:start="325:45" pos:end="325:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="329:13" pos:end="329:61"><expr pos:start="329:13" pos:end="329:60"><name pos:start="329:13" pos:end="329:21">vbv_delay</name> <operator pos:start="329:23" pos:end="329:23">=</operator> <name pos:start="329:25" pos:end="329:28">bits</name> <operator pos:start="329:30" pos:end="329:30">*</operator> <literal type="number" pos:start="329:32" pos:end="329:36">90000</literal> <operator pos:start="329:38" pos:end="329:38">/</operator> <name pos:start="329:40" pos:end="329:60"><name pos:start="329:40" pos:end="329:40">s</name><operator pos:start="329:41" pos:end="329:42">-&gt;</operator><name pos:start="329:43" pos:end="329:47">avctx</name><operator pos:start="329:48" pos:end="329:49">-&gt;</operator><name pos:start="329:50" pos:end="329:60">rc_max_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="331:13" pos:end="333:46"><expr pos:start="331:13" pos:end="333:45"><name pos:start="331:13" pos:end="331:21">min_delay</name> <operator pos:start="331:23" pos:end="331:23">=</operator> <operator pos:start="331:25" pos:end="331:25">(</operator><name pos:start="331:26" pos:end="331:32">minbits</name> <operator pos:start="331:34" pos:end="331:34">*</operator> <literal type="number" pos:start="331:36" pos:end="331:44">90000LL</literal> <operator pos:start="331:44" pos:end="331:44">+</operator> <name pos:start="331:46" pos:end="331:66"><name pos:start="331:46" pos:end="331:46">s</name><operator pos:start="331:47" pos:end="331:48">-&gt;</operator><name pos:start="331:49" pos:end="331:53">avctx</name><operator pos:start="331:54" pos:end="331:55">-&gt;</operator><name pos:start="331:56" pos:end="331:66">rc_max_rate</name></name> <operator pos:start="331:68" pos:end="331:68">-</operator> <literal type="number" pos:start="331:70" pos:end="331:70">1</literal><operator pos:start="331:71" pos:end="331:71">)</operator> <operator pos:start="331:73" pos:end="331:73">/</operator>

                        <name pos:start="333:25" pos:end="333:45"><name pos:start="333:25" pos:end="333:25">s</name><operator pos:start="333:26" pos:end="333:27">-&gt;</operator><name pos:start="333:28" pos:end="333:32">avctx</name><operator pos:start="333:33" pos:end="333:34">-&gt;</operator><name pos:start="333:35" pos:end="333:45">rc_max_rate</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="337:13" pos:end="337:52"><expr pos:start="337:13" pos:end="337:51"><name pos:start="337:13" pos:end="337:21">vbv_delay</name> <operator pos:start="337:23" pos:end="337:23">=</operator> <call pos:start="337:25" pos:end="337:51"><name pos:start="337:25" pos:end="337:29">FFMAX</name><argument_list pos:start="337:30" pos:end="337:51">(<argument pos:start="337:31" pos:end="337:39"><expr pos:start="337:31" pos:end="337:39"><name pos:start="337:31" pos:end="337:39">vbv_delay</name></expr></argument>, <argument pos:start="337:42" pos:end="337:50"><expr pos:start="337:42" pos:end="337:50"><name pos:start="337:42" pos:end="337:50">min_delay</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="341:13" pos:end="341:39"><expr pos:start="341:13" pos:end="341:38"><call pos:start="341:13" pos:end="341:38"><name pos:start="341:13" pos:end="341:18">assert</name><argument_list pos:start="341:19" pos:end="341:38">(<argument pos:start="341:20" pos:end="341:37"><expr pos:start="341:20" pos:end="341:37"><name pos:start="341:20" pos:end="341:28">vbv_delay</name> <operator pos:start="341:30" pos:end="341:30">&lt;</operator> <literal type="number" pos:start="341:32" pos:end="341:37">0xFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="345:13" pos:end="345:40"><expr pos:start="345:13" pos:end="345:39"><name pos:start="345:13" pos:end="345:31"><name pos:start="345:13" pos:end="345:13">s</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:28">vbv_delay_ptr</name><index pos:start="345:29" pos:end="345:31">[<expr pos:start="345:30" pos:end="345:30"><literal type="number" pos:start="345:30" pos:end="345:30">0</literal></expr>]</index></name> <operator pos:start="345:33" pos:end="345:34">&amp;=</operator> <literal type="number" pos:start="345:36" pos:end="345:39">0xF8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="347:13" pos:end="347:51"><expr pos:start="347:13" pos:end="347:50"><name pos:start="347:13" pos:end="347:31"><name pos:start="347:13" pos:end="347:13">s</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:28">vbv_delay_ptr</name><index pos:start="347:29" pos:end="347:31">[<expr pos:start="347:30" pos:end="347:30"><literal type="number" pos:start="347:30" pos:end="347:30">0</literal></expr>]</index></name> <operator pos:start="347:33" pos:end="347:34">|=</operator> <name pos:start="347:36" pos:end="347:44">vbv_delay</name> <operator pos:start="347:46" pos:end="347:47">&gt;&gt;</operator> <literal type="number" pos:start="347:49" pos:end="347:50">13</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:50"><expr pos:start="349:13" pos:end="349:49"><name pos:start="349:13" pos:end="349:31"><name pos:start="349:13" pos:end="349:13">s</name><operator pos:start="349:14" pos:end="349:15">-&gt;</operator><name pos:start="349:16" pos:end="349:28">vbv_delay_ptr</name><index pos:start="349:29" pos:end="349:31">[<expr pos:start="349:30" pos:end="349:30"><literal type="number" pos:start="349:30" pos:end="349:30">1</literal></expr>]</index></name>  <operator pos:start="349:34" pos:end="349:34">=</operator> <name pos:start="349:36" pos:end="349:44">vbv_delay</name> <operator pos:start="349:46" pos:end="349:47">&gt;&gt;</operator> <literal type="number" pos:start="349:49" pos:end="349:49">5</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:40"><expr pos:start="351:13" pos:end="351:39"><name pos:start="351:13" pos:end="351:31"><name pos:start="351:13" pos:end="351:13">s</name><operator pos:start="351:14" pos:end="351:15">-&gt;</operator><name pos:start="351:16" pos:end="351:28">vbv_delay_ptr</name><index pos:start="351:29" pos:end="351:31">[<expr pos:start="351:30" pos:end="351:30"><literal type="number" pos:start="351:30" pos:end="351:30">2</literal></expr>]</index></name> <operator pos:start="351:33" pos:end="351:34">&amp;=</operator> <literal type="number" pos:start="351:36" pos:end="351:39">0x07</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:50"><expr pos:start="353:13" pos:end="353:49"><name pos:start="353:13" pos:end="353:31"><name pos:start="353:13" pos:end="353:13">s</name><operator pos:start="353:14" pos:end="353:15">-&gt;</operator><name pos:start="353:16" pos:end="353:28">vbv_delay_ptr</name><index pos:start="353:29" pos:end="353:31">[<expr pos:start="353:30" pos:end="353:30"><literal type="number" pos:start="353:30" pos:end="353:30">2</literal></expr>]</index></name> <operator pos:start="353:33" pos:end="353:34">|=</operator> <name pos:start="353:36" pos:end="353:44">vbv_delay</name> <operator pos:start="353:46" pos:end="353:47">&lt;&lt;</operator> <literal type="number" pos:start="353:49" pos:end="353:49">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="355:13" pos:end="355:51"><expr pos:start="355:13" pos:end="355:50"><name pos:start="355:13" pos:end="355:28"><name pos:start="355:13" pos:end="355:17">avctx</name><operator pos:start="355:18" pos:end="355:19">-&gt;</operator><name pos:start="355:20" pos:end="355:28">vbv_delay</name></name>     <operator pos:start="355:34" pos:end="355:34">=</operator> <name pos:start="355:36" pos:end="355:44">vbv_delay</name> <operator pos:start="355:46" pos:end="355:46">*</operator> <literal type="number" pos:start="355:48" pos:end="355:50">300</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:43"><expr pos:start="359:9" pos:end="359:42"><name pos:start="359:9" pos:end="359:21"><name pos:start="359:9" pos:end="359:9">s</name><operator pos:start="359:10" pos:end="359:11">-&gt;</operator><name pos:start="359:12" pos:end="359:21">total_bits</name></name>     <operator pos:start="359:27" pos:end="359:28">+=</operator> <name pos:start="359:30" pos:end="359:42"><name pos:start="359:30" pos:end="359:30">s</name><operator pos:start="359:31" pos:end="359:32">-&gt;</operator><name pos:start="359:33" pos:end="359:42">frame_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="361:9" pos:end="361:43"><expr pos:start="361:9" pos:end="361:42"><name pos:start="361:9" pos:end="361:25"><name pos:start="361:9" pos:end="361:13">avctx</name><operator pos:start="361:14" pos:end="361:15">-&gt;</operator><name pos:start="361:16" pos:end="361:25">frame_bits</name></name>  <operator pos:start="361:28" pos:end="361:28">=</operator> <name pos:start="361:30" pos:end="361:42"><name pos:start="361:30" pos:end="361:30">s</name><operator pos:start="361:31" pos:end="361:32">-&gt;</operator><name pos:start="361:33" pos:end="361:42">frame_bits</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="365:9" pos:end="365:45"><expr pos:start="365:9" pos:end="365:44"><name pos:start="365:9" pos:end="365:16"><name pos:start="365:9" pos:end="365:11">pkt</name><operator pos:start="365:12" pos:end="365:13">-&gt;</operator><name pos:start="365:14" pos:end="365:16">pts</name></name> <operator pos:start="365:18" pos:end="365:18">=</operator> <name pos:start="365:20" pos:end="365:44"><name pos:start="365:20" pos:end="365:20">s</name><operator pos:start="365:21" pos:end="365:22">-&gt;</operator><name pos:start="365:23" pos:end="365:37">current_picture</name><operator pos:start="365:38" pos:end="365:38">.</operator><name pos:start="365:39" pos:end="365:39">f</name><operator pos:start="365:40" pos:end="365:41">-&gt;</operator><name pos:start="365:42" pos:end="365:44">pts</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="367:9" pos:end="381:32"><if pos:start="367:9" pos:end="379:9">if <condition pos:start="367:12" pos:end="367:26">(<expr pos:start="367:13" pos:end="367:25"><operator pos:start="367:13" pos:end="367:13">!</operator><name pos:start="367:14" pos:end="367:25"><name pos:start="367:14" pos:end="367:14">s</name><operator pos:start="367:15" pos:end="367:16">-&gt;</operator><name pos:start="367:17" pos:end="367:25">low_delay</name></name></expr>)</condition> <block pos:start="367:28" pos:end="379:9">{<block_content pos:start="369:13" pos:end="377:59">

            <if_stmt pos:start="369:13" pos:end="375:44"><if pos:start="369:13" pos:end="371:51">if <condition pos:start="369:16" pos:end="369:60">(<expr pos:start="369:17" pos:end="369:59"><operator pos:start="369:17" pos:end="369:17">!</operator><name pos:start="369:18" pos:end="369:59"><name pos:start="369:18" pos:end="369:18">s</name><operator pos:start="369:19" pos:end="369:20">-&gt;</operator><name pos:start="369:21" pos:end="369:35">current_picture</name><operator pos:start="369:36" pos:end="369:36">.</operator><name pos:start="369:37" pos:end="369:37">f</name><operator pos:start="369:38" pos:end="369:39">-&gt;</operator><name pos:start="369:40" pos:end="369:59">coded_picture_number</name></name></expr>)</condition><block type="pseudo" pos:start="371:17" pos:end="371:51"><block_content pos:start="371:17" pos:end="371:51">

                <expr_stmt pos:start="371:17" pos:end="371:51"><expr pos:start="371:17" pos:end="371:50"><name pos:start="371:17" pos:end="371:24"><name pos:start="371:17" pos:end="371:19">pkt</name><operator pos:start="371:20" pos:end="371:21">-&gt;</operator><name pos:start="371:22" pos:end="371:24">dts</name></name> <operator pos:start="371:26" pos:end="371:26">=</operator> <name pos:start="371:28" pos:end="371:35"><name pos:start="371:28" pos:end="371:30">pkt</name><operator pos:start="371:31" pos:end="371:32">-&gt;</operator><name pos:start="371:33" pos:end="371:35">pts</name></name> <operator pos:start="371:37" pos:end="371:37">-</operator> <name pos:start="371:39" pos:end="371:50"><name pos:start="371:39" pos:end="371:39">s</name><operator pos:start="371:40" pos:end="371:41">-&gt;</operator><name pos:start="371:42" pos:end="371:50">dts_delta</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="373:13" pos:end="375:44">else<block type="pseudo" pos:start="375:17" pos:end="375:44"><block_content pos:start="375:17" pos:end="375:44">

                <expr_stmt pos:start="375:17" pos:end="375:44"><expr pos:start="375:17" pos:end="375:43"><name pos:start="375:17" pos:end="375:24"><name pos:start="375:17" pos:end="375:19">pkt</name><operator pos:start="375:20" pos:end="375:21">-&gt;</operator><name pos:start="375:22" pos:end="375:24">dts</name></name> <operator pos:start="375:26" pos:end="375:26">=</operator> <name pos:start="375:28" pos:end="375:43"><name pos:start="375:28" pos:end="375:28">s</name><operator pos:start="375:29" pos:end="375:30">-&gt;</operator><name pos:start="375:31" pos:end="375:43">reordered_pts</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="377:13" pos:end="377:59"><expr pos:start="377:13" pos:end="377:58"><name pos:start="377:13" pos:end="377:28"><name pos:start="377:13" pos:end="377:13">s</name><operator pos:start="377:14" pos:end="377:15">-&gt;</operator><name pos:start="377:16" pos:end="377:28">reordered_pts</name></name> <operator pos:start="377:30" pos:end="377:30">=</operator> <name pos:start="377:32" pos:end="377:50"><name pos:start="377:32" pos:end="377:32">s</name><operator pos:start="377:33" pos:end="377:34">-&gt;</operator><name pos:start="377:35" pos:end="377:47">input_picture</name><index pos:start="377:48" pos:end="377:50">[<expr pos:start="377:49" pos:end="377:49"><literal type="number" pos:start="377:49" pos:end="377:49">0</literal></expr>]</index></name><operator pos:start="377:51" pos:end="377:52">-&gt;</operator><name pos:start="377:53" pos:end="377:58"><name pos:start="377:53" pos:end="377:53">f</name><operator pos:start="377:54" pos:end="377:55">-&gt;</operator><name pos:start="377:56" pos:end="377:58">pts</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="379:11" pos:end="381:32">else<block type="pseudo" pos:start="381:13" pos:end="381:32"><block_content pos:start="381:13" pos:end="381:32">

            <expr_stmt pos:start="381:13" pos:end="381:32"><expr pos:start="381:13" pos:end="381:31"><name pos:start="381:13" pos:end="381:20"><name pos:start="381:13" pos:end="381:15">pkt</name><operator pos:start="381:16" pos:end="381:17">-&gt;</operator><name pos:start="381:18" pos:end="381:20">dts</name></name> <operator pos:start="381:22" pos:end="381:22">=</operator> <name pos:start="381:24" pos:end="381:31"><name pos:start="381:24" pos:end="381:26">pkt</name><operator pos:start="381:27" pos:end="381:28">-&gt;</operator><name pos:start="381:29" pos:end="381:31">pts</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="383:9" pos:end="385:42"><if pos:start="383:9" pos:end="385:42">if <condition pos:start="383:12" pos:end="383:44">(<expr pos:start="383:13" pos:end="383:43"><name pos:start="383:13" pos:end="383:43"><name pos:start="383:13" pos:end="383:13">s</name><operator pos:start="383:14" pos:end="383:15">-&gt;</operator><name pos:start="383:16" pos:end="383:30">current_picture</name><operator pos:start="383:31" pos:end="383:31">.</operator><name pos:start="383:32" pos:end="383:32">f</name><operator pos:start="383:33" pos:end="383:34">-&gt;</operator><name pos:start="383:35" pos:end="383:43">key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="385:13" pos:end="385:42"><block_content pos:start="385:13" pos:end="385:42">

            <expr_stmt pos:start="385:13" pos:end="385:42"><expr pos:start="385:13" pos:end="385:41"><name pos:start="385:13" pos:end="385:22"><name pos:start="385:13" pos:end="385:15">pkt</name><operator pos:start="385:16" pos:end="385:17">-&gt;</operator><name pos:start="385:18" pos:end="385:22">flags</name></name> <operator pos:start="385:24" pos:end="385:25">|=</operator> <name pos:start="385:27" pos:end="385:41">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="387:9" pos:end="389:87"><if pos:start="387:9" pos:end="389:87">if <condition pos:start="387:12" pos:end="387:23">(<expr pos:start="387:13" pos:end="387:22"><name pos:start="387:13" pos:end="387:22"><name pos:start="387:13" pos:end="387:13">s</name><operator pos:start="387:14" pos:end="387:15">-&gt;</operator><name pos:start="387:16" pos:end="387:22">mb_info</name></name></expr>)</condition><block type="pseudo" pos:start="389:13" pos:end="389:87"><block_content pos:start="389:13" pos:end="389:87">

            <expr_stmt pos:start="389:13" pos:end="389:87"><expr pos:start="389:13" pos:end="389:86"><call pos:start="389:13" pos:end="389:86"><name pos:start="389:13" pos:end="389:38">av_packet_shrink_side_data</name><argument_list pos:start="389:39" pos:end="389:86">(<argument pos:start="389:40" pos:end="389:42"><expr pos:start="389:40" pos:end="389:42"><name pos:start="389:40" pos:end="389:42">pkt</name></expr></argument>, <argument pos:start="389:45" pos:end="389:68"><expr pos:start="389:45" pos:end="389:68"><name pos:start="389:45" pos:end="389:68">AV_PKT_DATA_H263_MB_INFO</name></expr></argument>, <argument pos:start="389:71" pos:end="389:85"><expr pos:start="389:71" pos:end="389:85"><name pos:start="389:71" pos:end="389:85"><name pos:start="389:71" pos:end="389:71">s</name><operator pos:start="389:72" pos:end="389:73">-&gt;</operator><name pos:start="389:74" pos:end="389:85">mb_info_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="391:7" pos:end="395:5">else <block pos:start="391:12" pos:end="395:5">{<block_content pos:start="393:9" pos:end="393:26">

        <expr_stmt pos:start="393:9" pos:end="393:26"><expr pos:start="393:9" pos:end="393:25"><name pos:start="393:9" pos:end="393:21"><name pos:start="393:9" pos:end="393:9">s</name><operator pos:start="393:10" pos:end="393:11">-&gt;</operator><name pos:start="393:12" pos:end="393:21">frame_bits</name></name> <operator pos:start="393:23" pos:end="393:23">=</operator> <literal type="number" pos:start="393:25" pos:end="393:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="397:5" pos:end="397:37"><expr pos:start="397:5" pos:end="397:36"><call pos:start="397:5" pos:end="397:36"><name pos:start="397:5" pos:end="397:10">assert</name><argument_list pos:start="397:11" pos:end="397:36">(<argument pos:start="397:12" pos:end="397:35"><expr pos:start="397:12" pos:end="397:35"><operator pos:start="397:12" pos:end="397:12">(</operator><name pos:start="397:13" pos:end="397:25"><name pos:start="397:13" pos:end="397:13">s</name><operator pos:start="397:14" pos:end="397:15">-&gt;</operator><name pos:start="397:16" pos:end="397:25">frame_bits</name></name> <operator pos:start="397:27" pos:end="397:27">&amp;</operator> <literal type="number" pos:start="397:29" pos:end="397:29">7</literal><operator pos:start="397:30" pos:end="397:30">)</operator> <operator pos:start="397:32" pos:end="397:33">==</operator> <literal type="number" pos:start="397:35" pos:end="397:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="401:5" pos:end="401:34"><expr pos:start="401:5" pos:end="401:33"><name pos:start="401:5" pos:end="401:13"><name pos:start="401:5" pos:end="401:7">pkt</name><operator pos:start="401:8" pos:end="401:9">-&gt;</operator><name pos:start="401:10" pos:end="401:13">size</name></name> <operator pos:start="401:15" pos:end="401:15">=</operator> <name pos:start="401:17" pos:end="401:29"><name pos:start="401:17" pos:end="401:17">s</name><operator pos:start="401:18" pos:end="401:19">-&gt;</operator><name pos:start="401:20" pos:end="401:29">frame_bits</name></name> <operator pos:start="401:31" pos:end="401:31">/</operator> <literal type="number" pos:start="401:33" pos:end="401:33">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="403:5" pos:end="403:30"><expr pos:start="403:5" pos:end="403:29"><operator pos:start="403:5" pos:end="403:5">*</operator><name pos:start="403:6" pos:end="403:15">got_packet</name> <operator pos:start="403:17" pos:end="403:17">=</operator> <operator pos:start="403:19" pos:end="403:19">!</operator><operator pos:start="403:20" pos:end="403:20">!</operator><name pos:start="403:21" pos:end="403:29"><name pos:start="403:21" pos:end="403:23">pkt</name><operator pos:start="403:24" pos:end="403:25">-&gt;</operator><name pos:start="403:26" pos:end="403:29">size</name></name></expr>;</expr_stmt>

    <return pos:start="405:5" pos:end="405:13">return <expr pos:start="405:12" pos:end="405:12"><literal type="number" pos:start="405:12" pos:end="405:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
