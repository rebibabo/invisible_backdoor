<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14670.c" pos:tabs="8"><function pos:start="1:1" pos:end="96:15"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">USBDevice</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:33">usb_serial_init</name><parameter_list pos:start="1:34" pos:end="1:55">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:46"><specifier pos:start="1:35" pos:end="1:39">const</specifier> <name pos:start="1:41" pos:end="1:44">char</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:54">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="96:15">{<block_content pos:start="5:5" pos:end="96:15">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">USBDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">CharDriverState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:25">cdrv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:21">vendorid</name> <init pos:start="9:23" pos:end="9:25">= <expr pos:start="9:25" pos:end="9:25"><literal type="number" pos:start="9:25" pos:end="9:25">0</literal></expr></init></decl>, <decl pos:start="9:28" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:28" pos:end="9:36">productid</name> <init pos:start="9:38" pos:end="9:40">= <expr pos:start="9:40" pos:end="9:40"><literal type="number" pos:start="9:40" pos:end="9:40">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:18"><name pos:start="11:10" pos:end="11:14">label</name><index pos:start="11:15" pos:end="11:18">[<expr pos:start="11:16" pos:end="11:17"><literal type="number" pos:start="11:16" pos:end="11:17">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:14"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <name pos:start="13:12" pos:end="13:14">int</name></type> <name pos:start="13:16" pos:end="13:20">index</name></decl>;</decl_stmt>



    <while pos:start="17:5" pos:end="96:15">while <condition pos:start="17:11" pos:end="17:41">(<expr pos:start="17:12" pos:end="17:40"><operator pos:start="17:12" pos:end="17:12">*</operator><name pos:start="17:13" pos:end="17:20">filename</name> <operator pos:start="17:22" pos:end="17:23">&amp;&amp;</operator> <operator pos:start="17:25" pos:end="17:25">*</operator><name pos:start="17:26" pos:end="17:33">filename</name> <operator pos:start="17:35" pos:end="17:36">!=</operator> <literal type="char" pos:start="17:38" pos:end="17:40">':'</literal></expr>)</condition> <block pos:start="17:43" pos:end="96:15">{<block_content pos:start="19:9" pos:end="96:15">

        <decl_stmt pos:start="19:9" pos:end="19:22"><decl pos:start="19:9" pos:end="19:21"><type pos:start="19:9" pos:end="19:20"><specifier pos:start="19:9" pos:end="19:13">const</specifier> <name pos:start="19:15" pos:end="19:18">char</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:21">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:16"><decl pos:start="21:9" pos:end="21:15"><type pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:12">char</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:15">e</name></decl>;</decl_stmt>

        <if_stmt pos:start="23:9" pos:end="96:15"><if pos:start="23:9" pos:end="96:15">if <condition pos:start="23:12" pos:end="23:48">(<expr pos:start="23:13" pos:end="23:47"><call pos:start="23:13" pos:end="23:47"><name pos:start="23:13" pos:end="23:20">strstart</name><argument_list pos:start="23:21" pos:end="23:47">(<argument pos:start="23:22" pos:end="23:29"><expr pos:start="23:22" pos:end="23:29"><name pos:start="23:22" pos:end="23:29">filename</name></expr></argument>, <argument pos:start="23:32" pos:end="23:42"><expr pos:start="23:32" pos:end="23:42"><literal type="string" pos:start="23:32" pos:end="23:42">"vendorid="</literal></expr></argument>, <argument pos:start="23:45" pos:end="23:46"><expr pos:start="23:45" pos:end="23:46"><operator pos:start="23:45" pos:end="23:45">&amp;</operator><name pos:start="23:46" pos:end="23:46">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:50" pos:end="96:15">{<block_content pos:start="25:13" pos:end="96:15">

            <expr_stmt pos:start="25:13" pos:end="25:41"><expr pos:start="25:13" pos:end="25:40"><name pos:start="25:13" pos:end="25:20">vendorid</name> <operator pos:start="25:22" pos:end="25:22">=</operator> <call pos:start="25:24" pos:end="25:40"><name pos:start="25:24" pos:end="25:29">strtol</name><argument_list pos:start="25:30" pos:end="25:40">(<argument pos:start="25:31" pos:end="25:31"><expr pos:start="25:31" pos:end="25:31"><name pos:start="25:31" pos:end="25:31">p</name></expr></argument>, <argument pos:start="25:34" pos:end="25:35"><expr pos:start="25:34" pos:end="25:35"><operator pos:start="25:34" pos:end="25:34">&amp;</operator><name pos:start="25:35" pos:end="25:35">e</name></expr></argument>, <argument pos:start="25:38" pos:end="25:39"><expr pos:start="25:38" pos:end="25:39"><literal type="number" pos:start="25:38" pos:end="25:39">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="27:13" pos:end="96:15"><if pos:start="27:13" pos:end="35:9">if <condition pos:start="27:16" pos:end="27:57">(<expr pos:start="27:17" pos:end="27:56"><name pos:start="27:17" pos:end="27:17">e</name> <operator pos:start="27:19" pos:end="27:20">==</operator> <name pos:start="27:22" pos:end="27:22">p</name> <operator pos:start="27:24" pos:end="27:25">||</operator> <operator pos:start="27:27" pos:end="27:27">(</operator><operator pos:start="27:28" pos:end="27:28">*</operator><name pos:start="27:29" pos:end="27:29">e</name> <operator pos:start="27:31" pos:end="27:32">&amp;&amp;</operator> <operator pos:start="27:34" pos:end="27:34">*</operator><name pos:start="27:35" pos:end="27:35">e</name> <operator pos:start="27:37" pos:end="27:38">!=</operator> <literal type="char" pos:start="27:40" pos:end="27:42">','</literal> <operator pos:start="27:44" pos:end="27:45">&amp;&amp;</operator> <operator pos:start="27:47" pos:end="27:47">*</operator><name pos:start="27:48" pos:end="27:48">e</name> <operator pos:start="27:50" pos:end="27:51">!=</operator> <literal type="char" pos:start="27:53" pos:end="27:55">':'</literal><operator pos:start="27:56" pos:end="27:56">)</operator></expr>)</condition> <block pos:start="27:59" pos:end="35:9">{<block_content pos:start="29:17" pos:end="33:25">

                <expr_stmt pos:start="29:17" pos:end="29:54"><expr pos:start="29:17" pos:end="29:53"><call pos:start="29:17" pos:end="29:53"><name pos:start="29:17" pos:end="29:26">qemu_error</name><argument_list pos:start="29:27" pos:end="29:53">(<argument pos:start="29:28" pos:end="29:49"><expr pos:start="29:28" pos:end="29:49"><literal type="string" pos:start="29:28" pos:end="29:49">"bogus vendor ID %s\n"</literal></expr></argument>, <argument pos:start="29:52" pos:end="29:52"><expr pos:start="29:52" pos:end="29:52"><name pos:start="29:52" pos:end="29:52">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="33:13" pos:end="33:25"><expr pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:20">filename</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <name pos:start="33:24" pos:end="33:24">e</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="35:11" pos:end="96:15">else if <condition pos:start="35:19" pos:end="35:56">(<expr pos:start="35:20" pos:end="35:55"><call pos:start="35:20" pos:end="35:55"><name pos:start="35:20" pos:end="35:27">strstart</name><argument_list pos:start="35:28" pos:end="35:55">(<argument pos:start="35:29" pos:end="35:36"><expr pos:start="35:29" pos:end="35:36"><name pos:start="35:29" pos:end="35:36">filename</name></expr></argument>, <argument pos:start="35:39" pos:end="35:50"><expr pos:start="35:39" pos:end="35:50"><literal type="string" pos:start="35:39" pos:end="35:50">"productid="</literal></expr></argument>, <argument pos:start="35:53" pos:end="35:54"><expr pos:start="35:53" pos:end="35:54"><operator pos:start="35:53" pos:end="35:53">&amp;</operator><name pos:start="35:54" pos:end="35:54">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:58" pos:end="96:15">{<block_content pos:start="37:13" pos:end="96:15">

            <expr_stmt pos:start="37:13" pos:end="37:42"><expr pos:start="37:13" pos:end="37:41"><name pos:start="37:13" pos:end="37:21">productid</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <call pos:start="37:25" pos:end="37:41"><name pos:start="37:25" pos:end="37:30">strtol</name><argument_list pos:start="37:31" pos:end="37:41">(<argument pos:start="37:32" pos:end="37:32"><expr pos:start="37:32" pos:end="37:32"><name pos:start="37:32" pos:end="37:32">p</name></expr></argument>, <argument pos:start="37:35" pos:end="37:36"><expr pos:start="37:35" pos:end="37:36"><operator pos:start="37:35" pos:end="37:35">&amp;</operator><name pos:start="37:36" pos:end="37:36">e</name></expr></argument>, <argument pos:start="37:39" pos:end="37:40"><expr pos:start="37:39" pos:end="37:40"><literal type="number" pos:start="37:39" pos:end="37:40">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="96:15"><if pos:start="39:13" pos:end="47:9">if <condition pos:start="39:16" pos:end="39:57">(<expr pos:start="39:17" pos:end="39:56"><name pos:start="39:17" pos:end="39:17">e</name> <operator pos:start="39:19" pos:end="39:20">==</operator> <name pos:start="39:22" pos:end="39:22">p</name> <operator pos:start="39:24" pos:end="39:25">||</operator> <operator pos:start="39:27" pos:end="39:27">(</operator><operator pos:start="39:28" pos:end="39:28">*</operator><name pos:start="39:29" pos:end="39:29">e</name> <operator pos:start="39:31" pos:end="39:32">&amp;&amp;</operator> <operator pos:start="39:34" pos:end="39:34">*</operator><name pos:start="39:35" pos:end="39:35">e</name> <operator pos:start="39:37" pos:end="39:38">!=</operator> <literal type="char" pos:start="39:40" pos:end="39:42">','</literal> <operator pos:start="39:44" pos:end="39:45">&amp;&amp;</operator> <operator pos:start="39:47" pos:end="39:47">*</operator><name pos:start="39:48" pos:end="39:48">e</name> <operator pos:start="39:50" pos:end="39:51">!=</operator> <literal type="char" pos:start="39:53" pos:end="39:55">':'</literal><operator pos:start="39:56" pos:end="39:56">)</operator></expr>)</condition> <block pos:start="39:59" pos:end="47:9">{<block_content pos:start="41:17" pos:end="45:25">

                <expr_stmt pos:start="41:17" pos:end="41:55"><expr pos:start="41:17" pos:end="41:54"><call pos:start="41:17" pos:end="41:54"><name pos:start="41:17" pos:end="41:26">qemu_error</name><argument_list pos:start="41:27" pos:end="41:54">(<argument pos:start="41:28" pos:end="41:50"><expr pos:start="41:28" pos:end="41:50"><literal type="string" pos:start="41:28" pos:end="41:50">"bogus product ID %s\n"</literal></expr></argument>, <argument pos:start="41:53" pos:end="41:53"><expr pos:start="41:53" pos:end="41:53"><name pos:start="41:53" pos:end="41:53">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="45:13" pos:end="45:25"><expr pos:start="45:13" pos:end="45:24"><name pos:start="45:13" pos:end="45:20">filename</name> <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:24">e</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="96:15">else <block pos:start="47:16" pos:end="96:15">{<block_content pos:start="49:13" pos:end="96:15">

            <expr_stmt pos:start="49:13" pos:end="49:72"><expr pos:start="49:13" pos:end="49:71"><call pos:start="49:13" pos:end="49:71"><name pos:start="49:13" pos:end="49:22">qemu_error</name><argument_list pos:start="49:23" pos:end="49:71">(<argument pos:start="49:24" pos:end="49:60"><expr pos:start="49:24" pos:end="49:60"><literal type="string" pos:start="49:24" pos:end="49:60">"unrecognized serial USB option %s\n"</literal></expr></argument>, <argument pos:start="49:63" pos:end="49:70"><expr pos:start="49:63" pos:end="49:70"><name pos:start="49:63" pos:end="49:70">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <while pos:start="53:9" pos:end="55:23">while<condition pos:start="53:14" pos:end="53:31">(<expr pos:start="53:15" pos:end="53:30"><operator pos:start="53:15" pos:end="53:15">*</operator><name pos:start="53:16" pos:end="53:23">filename</name> <operator pos:start="53:25" pos:end="53:26">==</operator> <literal type="char" pos:start="53:28" pos:end="53:30">','</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:23"><block_content pos:start="55:13" pos:end="55:23">

            <expr_stmt pos:start="55:13" pos:end="55:23"><expr pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:20">filename</name><operator pos:start="55:21" pos:end="55:22">++</operator></expr>;</expr_stmt></block_content></block></while>


    <if_stmt pos:start="58:5" pos:end="96:15"><if pos:start="58:5" pos:end="96:15">if <condition pos:start="58:8" pos:end="58:19">(<expr pos:start="58:9" pos:end="58:18"><operator pos:start="58:9" pos:end="58:9">!</operator><operator pos:start="58:10" pos:end="58:10">*</operator><name pos:start="58:11" pos:end="58:18">filename</name></expr>)</condition> <block pos:start="58:21" pos:end="96:15">{<block_content pos:start="60:9" pos:end="96:15">

        <expr_stmt pos:start="60:9" pos:end="60:62"><expr pos:start="60:9" pos:end="60:61"><call pos:start="60:9" pos:end="60:61"><name pos:start="60:9" pos:end="60:18">qemu_error</name><argument_list pos:start="60:19" pos:end="60:61">(<argument pos:start="60:20" pos:end="60:60"><expr pos:start="60:20" pos:end="60:60"><literal type="string" pos:start="60:20" pos:end="60:60">"character device specification needed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="64:5" pos:end="64:15"><expr pos:start="64:5" pos:end="64:14"><name pos:start="64:5" pos:end="64:12">filename</name><operator pos:start="64:13" pos:end="64:14">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="68:5" pos:end="68:59"><expr pos:start="68:5" pos:end="68:58"><call pos:start="68:5" pos:end="68:58"><name pos:start="68:5" pos:end="68:12">snprintf</name><argument_list pos:start="68:13" pos:end="68:58">(<argument pos:start="68:14" pos:end="68:18"><expr pos:start="68:14" pos:end="68:18"><name pos:start="68:14" pos:end="68:18">label</name></expr></argument>, <argument pos:start="68:21" pos:end="68:33"><expr pos:start="68:21" pos:end="68:33"><sizeof pos:start="68:21" pos:end="68:33">sizeof<argument_list pos:start="68:27" pos:end="68:33">(<argument pos:start="68:28" pos:end="68:32"><expr pos:start="68:28" pos:end="68:32"><name pos:start="68:28" pos:end="68:32">label</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="68:36" pos:end="68:48"><expr pos:start="68:36" pos:end="68:48"><literal type="string" pos:start="68:36" pos:end="68:48">"usbserial%d"</literal></expr></argument>, <argument pos:start="68:51" pos:end="68:57"><expr pos:start="68:51" pos:end="68:57"><name pos:start="68:51" pos:end="68:55">index</name><operator pos:start="68:56" pos:end="68:57">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="70:5" pos:end="70:48"><expr pos:start="70:5" pos:end="70:47"><name pos:start="70:5" pos:end="70:8">cdrv</name> <operator pos:start="70:10" pos:end="70:10">=</operator> <call pos:start="70:12" pos:end="70:47"><name pos:start="70:12" pos:end="70:24">qemu_chr_open</name><argument_list pos:start="70:25" pos:end="70:47">(<argument pos:start="70:26" pos:end="70:30"><expr pos:start="70:26" pos:end="70:30"><name pos:start="70:26" pos:end="70:30">label</name></expr></argument>, <argument pos:start="70:33" pos:end="70:40"><expr pos:start="70:33" pos:end="70:40"><name pos:start="70:33" pos:end="70:40">filename</name></expr></argument>, <argument pos:start="70:43" pos:end="70:46"><expr pos:start="70:43" pos:end="70:46"><name pos:start="70:43" pos:end="70:46">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="72:5" pos:end="77:53"><if pos:start="72:5" pos:end="77:53">if <condition pos:start="72:8" pos:end="72:14">(<expr pos:start="72:9" pos:end="72:13"><operator pos:start="72:9" pos:end="72:9">!</operator><name pos:start="72:10" pos:end="72:13">cdrv</name></expr>)</condition><block type="pseudo" pos:start="77:5" pos:end="77:53"><block_content pos:start="77:5" pos:end="77:53">




    <expr_stmt pos:start="77:5" pos:end="77:53"><expr pos:start="77:5" pos:end="77:52"><name pos:start="77:5" pos:end="77:7">dev</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="77:52"><name pos:start="77:11" pos:end="77:20">usb_create</name><argument_list pos:start="77:21" pos:end="77:52">(<argument pos:start="77:22" pos:end="77:25"><expr pos:start="77:22" pos:end="77:25"><name pos:start="77:22" pos:end="77:25">NULL</name></expr></argument> <comment type="block" pos:start="77:27" pos:end="77:37">/* FIXME */</comment>, <argument pos:start="77:40" pos:end="77:51"><expr pos:start="77:40" pos:end="77:51"><literal type="string" pos:start="77:40" pos:end="77:51">"usb-serial"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>




    <expr_stmt pos:start="82:5" pos:end="82:51"><expr pos:start="82:5" pos:end="82:50"><call pos:start="82:5" pos:end="82:50"><name pos:start="82:5" pos:end="82:21">qdev_prop_set_chr</name><argument_list pos:start="82:22" pos:end="82:50">(<argument pos:start="82:23" pos:end="82:32"><expr pos:start="82:23" pos:end="82:32"><operator pos:start="82:23" pos:end="82:23">&amp;</operator><name pos:start="82:24" pos:end="82:32"><name pos:start="82:24" pos:end="82:26">dev</name><operator pos:start="82:27" pos:end="82:28">-&gt;</operator><name pos:start="82:29" pos:end="82:32">qdev</name></name></expr></argument>, <argument pos:start="82:35" pos:end="82:43"><expr pos:start="82:35" pos:end="82:43"><literal type="string" pos:start="82:35" pos:end="82:43">"chardev"</literal></expr></argument>, <argument pos:start="82:46" pos:end="82:49"><expr pos:start="82:46" pos:end="82:49"><name pos:start="82:46" pos:end="82:49">cdrv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="84:5" pos:end="86:63"><if pos:start="84:5" pos:end="86:63">if <condition pos:start="84:8" pos:end="84:17">(<expr pos:start="84:9" pos:end="84:16"><name pos:start="84:9" pos:end="84:16">vendorid</name></expr>)</condition><block type="pseudo" pos:start="86:9" pos:end="86:63"><block_content pos:start="86:9" pos:end="86:63">

        <expr_stmt pos:start="86:9" pos:end="86:63"><expr pos:start="86:9" pos:end="86:62"><call pos:start="86:9" pos:end="86:62"><name pos:start="86:9" pos:end="86:28">qdev_prop_set_uint16</name><argument_list pos:start="86:29" pos:end="86:62">(<argument pos:start="86:30" pos:end="86:39"><expr pos:start="86:30" pos:end="86:39"><operator pos:start="86:30" pos:end="86:30">&amp;</operator><name pos:start="86:31" pos:end="86:39"><name pos:start="86:31" pos:end="86:33">dev</name><operator pos:start="86:34" pos:end="86:35">-&gt;</operator><name pos:start="86:36" pos:end="86:39">qdev</name></name></expr></argument>, <argument pos:start="86:42" pos:end="86:51"><expr pos:start="86:42" pos:end="86:51"><literal type="string" pos:start="86:42" pos:end="86:51">"vendorid"</literal></expr></argument>, <argument pos:start="86:54" pos:end="86:61"><expr pos:start="86:54" pos:end="86:61"><name pos:start="86:54" pos:end="86:61">vendorid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="88:5" pos:end="90:65"><if pos:start="88:5" pos:end="90:65">if <condition pos:start="88:8" pos:end="88:18">(<expr pos:start="88:9" pos:end="88:17"><name pos:start="88:9" pos:end="88:17">productid</name></expr>)</condition><block type="pseudo" pos:start="90:9" pos:end="90:65"><block_content pos:start="90:9" pos:end="90:65">

        <expr_stmt pos:start="90:9" pos:end="90:65"><expr pos:start="90:9" pos:end="90:64"><call pos:start="90:9" pos:end="90:64"><name pos:start="90:9" pos:end="90:28">qdev_prop_set_uint16</name><argument_list pos:start="90:29" pos:end="90:64">(<argument pos:start="90:30" pos:end="90:39"><expr pos:start="90:30" pos:end="90:39"><operator pos:start="90:30" pos:end="90:30">&amp;</operator><name pos:start="90:31" pos:end="90:39"><name pos:start="90:31" pos:end="90:33">dev</name><operator pos:start="90:34" pos:end="90:35">-&gt;</operator><name pos:start="90:36" pos:end="90:39">qdev</name></name></expr></argument>, <argument pos:start="90:42" pos:end="90:52"><expr pos:start="90:42" pos:end="90:52"><literal type="string" pos:start="90:42" pos:end="90:52">"productid"</literal></expr></argument>, <argument pos:start="90:55" pos:end="90:63"><expr pos:start="90:55" pos:end="90:63"><name pos:start="90:55" pos:end="90:63">productid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="92:5" pos:end="92:33"><expr pos:start="92:5" pos:end="92:32"><call pos:start="92:5" pos:end="92:32"><name pos:start="92:5" pos:end="92:20">qdev_init_nofail</name><argument_list pos:start="92:21" pos:end="92:32">(<argument pos:start="92:22" pos:end="92:31"><expr pos:start="92:22" pos:end="92:31"><operator pos:start="92:22" pos:end="92:22">&amp;</operator><name pos:start="92:23" pos:end="92:31"><name pos:start="92:23" pos:end="92:25">dev</name><operator pos:start="92:26" pos:end="92:27">-&gt;</operator><name pos:start="92:28" pos:end="92:31">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="96:5" pos:end="96:15">return <expr pos:start="96:12" pos:end="96:14"><name pos:start="96:12" pos:end="96:14">dev</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></while></block_content></block></function>
</unit>
