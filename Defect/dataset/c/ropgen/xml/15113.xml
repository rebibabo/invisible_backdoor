<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15113.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">config_error</name><parameter_list pos:start="1:25" pos:end="1:60">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:32">Monitor</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">mon</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:54"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">fmt</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:59"><decl pos:start="1:57" pos:end="1:59"><type pos:start="1:57" pos:end="1:59"><modifier pos:start="1:57" pos:end="1:59">...</modifier></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:15">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">va_list</name></type> <name pos:start="5:13" pos:end="5:14">ap</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><call pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:12">va_start</name><argument_list pos:start="9:13" pos:end="9:21">(<argument pos:start="9:14" pos:end="9:15"><expr pos:start="9:14" pos:end="9:15"><name pos:start="9:14" pos:end="9:15">ap</name></expr></argument>, <argument pos:start="9:18" pos:end="9:20"><expr pos:start="9:18" pos:end="9:20"><name pos:start="9:18" pos:end="9:20">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:12">(<expr pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">mon</name></expr>)</condition> <block pos:start="11:14" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:38">

        <expr_stmt pos:start="13:9" pos:end="13:38"><expr pos:start="13:9" pos:end="13:37"><call pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:23">monitor_vprintf</name><argument_list pos:start="13:24" pos:end="13:37">(<argument pos:start="13:25" pos:end="13:27"><expr pos:start="13:25" pos:end="13:27"><name pos:start="13:25" pos:end="13:27">mon</name></expr></argument>, <argument pos:start="13:30" pos:end="13:32"><expr pos:start="13:30" pos:end="13:32"><name pos:start="13:30" pos:end="13:32">fmt</name></expr></argument>, <argument pos:start="13:35" pos:end="13:36"><expr pos:start="13:35" pos:end="13:36"><name pos:start="13:35" pos:end="13:36">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="23:5">else <block pos:start="15:12" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:16">

        <expr_stmt pos:start="17:9" pos:end="17:34"><expr pos:start="17:9" pos:end="17:33"><call pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:15">fprintf</name><argument_list pos:start="17:16" pos:end="17:33">(<argument pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">stderr</name></expr></argument>, <argument pos:start="17:25" pos:end="17:32"><expr pos:start="17:25" pos:end="17:32"><literal type="string" pos:start="17:25" pos:end="17:32">"qemu: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:34"><expr pos:start="19:9" pos:end="19:33"><call pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:16">vfprintf</name><argument_list pos:start="19:17" pos:end="19:33">(<argument pos:start="19:18" pos:end="19:23"><expr pos:start="19:18" pos:end="19:23"><name pos:start="19:18" pos:end="19:23">stderr</name></expr></argument>, <argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">fmt</name></expr></argument>, <argument pos:start="19:31" pos:end="19:32"><expr pos:start="19:31" pos:end="19:32"><name pos:start="19:31" pos:end="19:32">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><call pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:12">exit</name><argument_list pos:start="21:13" pos:end="21:15">(<argument pos:start="21:14" pos:end="21:14"><expr pos:start="21:14" pos:end="21:14"><literal type="number" pos:start="21:14" pos:end="21:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:15"><expr pos:start="25:5" pos:end="25:14"><call pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:10">va_end</name><argument_list pos:start="25:11" pos:end="25:14">(<argument pos:start="25:12" pos:end="25:13"><expr pos:start="25:12" pos:end="25:13"><name pos:start="25:12" pos:end="25:13">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
