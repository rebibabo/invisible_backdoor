<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8026.c" pos:tabs="8"><function pos:start="1:1" pos:end="173:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">rdma_delete_block</name><parameter_list pos:start="1:29" pos:end="1:70">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:40">RDMAContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">rdma</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:69"><decl pos:start="1:49" pos:end="1:69"><type pos:start="1:49" pos:end="1:69"><name pos:start="1:49" pos:end="1:62">RDMALocalBlock</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">block</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="173:1">{<block_content pos:start="5:5" pos:end="171:13">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:52"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">RDMALocalBlocks</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:26">local</name> <init pos:start="5:28" pos:end="5:52">= <expr pos:start="5:30" pos:end="5:52"><operator pos:start="5:30" pos:end="5:30">&amp;</operator><name pos:start="5:31" pos:end="5:52"><name pos:start="5:31" pos:end="5:34">rdma</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:52">local_ram_blocks</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">RDMALocalBlock</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">old</name> <init pos:start="7:25" pos:end="7:38">= <expr pos:start="7:27" pos:end="7:38"><name pos:start="7:27" pos:end="7:38"><name pos:start="7:27" pos:end="7:31">local</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:38">block</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">x</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:23">(<expr pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:12">rdma</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:22">blockmap</name></name></expr>)</condition> <block pos:start="13:25" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:78">

        <expr_stmt pos:start="15:9" pos:end="15:78"><expr pos:start="15:9" pos:end="15:77"><call pos:start="15:9" pos:end="15:77"><name pos:start="15:9" pos:end="15:27">g_hash_table_remove</name><argument_list pos:start="15:28" pos:end="15:77">(<argument pos:start="15:29" pos:end="15:42"><expr pos:start="15:29" pos:end="15:42"><name pos:start="15:29" pos:end="15:42"><name pos:start="15:29" pos:end="15:32">rdma</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:42">blockmap</name></name></expr></argument>, <argument pos:start="15:45" pos:end="15:76"><expr pos:start="15:45" pos:end="15:76"><operator pos:start="15:45" pos:end="15:45">(</operator><name pos:start="15:46" pos:end="15:49">void</name> <operator pos:start="15:51" pos:end="15:51">*</operator><operator pos:start="15:52" pos:end="15:52">)</operator><operator pos:start="15:53" pos:end="15:53">(</operator><name pos:start="15:54" pos:end="15:62">uintptr_t</name><operator pos:start="15:63" pos:end="15:63">)</operator><name pos:start="15:64" pos:end="15:76"><name pos:start="15:64" pos:end="15:68">block</name><operator pos:start="15:69" pos:end="15:70">-&gt;</operator><name pos:start="15:71" pos:end="15:76">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="43:5"><if pos:start="19:5" pos:end="43:5">if <condition pos:start="19:8" pos:end="19:19">(<expr pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:13">block</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:18">pmr</name></name></expr>)</condition> <block pos:start="19:21" pos:end="43:5">{<block_content pos:start="21:9" pos:end="41:26">

        <decl_stmt pos:start="21:9" pos:end="21:14"><decl pos:start="21:9" pos:end="21:13"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">j</name></decl>;</decl_stmt>



        <for pos:start="25:9" pos:end="37:9">for <control pos:start="25:13" pos:end="25:46">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">j</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:41"><expr pos:start="25:21" pos:end="25:40"><name pos:start="25:21" pos:end="25:21">j</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <name pos:start="25:25" pos:end="25:40"><name pos:start="25:25" pos:end="25:29">block</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:40">nb_chunks</name></name></expr>;</condition> <incr pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><name pos:start="25:43" pos:end="25:43">j</name><operator pos:start="25:44" pos:end="25:45">++</operator></expr></incr>)</control> <block pos:start="25:48" pos:end="37:9">{<block_content pos:start="27:13" pos:end="35:40">

            <if_stmt pos:start="27:13" pos:end="31:13"><if pos:start="27:13" pos:end="31:13">if <condition pos:start="27:16" pos:end="27:31">(<expr pos:start="27:17" pos:end="27:30"><operator pos:start="27:17" pos:end="27:17">!</operator><name pos:start="27:18" pos:end="27:30"><name pos:start="27:18" pos:end="27:22">block</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:27">pmr</name><index pos:start="27:28" pos:end="27:30">[<expr pos:start="27:29" pos:end="27:29"><name pos:start="27:29" pos:end="27:29">j</name></expr>]</index></name></expr>)</condition> <block pos:start="27:33" pos:end="31:13">{<block_content pos:start="29:17" pos:end="29:25">

                <continue pos:start="29:17" pos:end="29:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:40"><expr pos:start="33:13" pos:end="33:39"><call pos:start="33:13" pos:end="33:39"><name pos:start="33:13" pos:end="33:24">ibv_dereg_mr</name><argument_list pos:start="33:25" pos:end="33:39">(<argument pos:start="33:26" pos:end="33:38"><expr pos:start="33:26" pos:end="33:38"><name pos:start="33:26" pos:end="33:38"><name pos:start="33:26" pos:end="33:30">block</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:35">pmr</name><index pos:start="33:36" pos:end="33:38">[<expr pos:start="33:37" pos:end="33:37"><name pos:start="33:37" pos:end="33:37">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:40"><expr pos:start="35:13" pos:end="35:39"><name pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:16">rdma</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:37">total_registrations</name></name><operator pos:start="35:38" pos:end="35:39">--</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="39:9" pos:end="39:27"><expr pos:start="39:9" pos:end="39:26"><call pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:14">g_free</name><argument_list pos:start="39:15" pos:end="39:26">(<argument pos:start="39:16" pos:end="39:25"><expr pos:start="39:16" pos:end="39:25"><name pos:start="39:16" pos:end="39:25"><name pos:start="39:16" pos:end="39:20">block</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:25">pmr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:26"><expr pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:13">block</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:18">pmr</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:25">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:18">(<expr pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:13">block</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:17">mr</name></name></expr>)</condition> <block pos:start="47:20" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:25">

        <expr_stmt pos:start="49:9" pos:end="49:32"><expr pos:start="49:9" pos:end="49:31"><call pos:start="49:9" pos:end="49:31"><name pos:start="49:9" pos:end="49:20">ibv_dereg_mr</name><argument_list pos:start="49:21" pos:end="49:31">(<argument pos:start="49:22" pos:end="49:30"><expr pos:start="49:22" pos:end="49:30"><name pos:start="49:22" pos:end="49:30"><name pos:start="49:22" pos:end="49:26">block</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:30">mr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:36"><expr pos:start="51:9" pos:end="51:35"><name pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:12">rdma</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:33">total_registrations</name></name><operator pos:start="51:34" pos:end="51:35">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:25"><expr pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:13">block</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:17">mr</name></name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:24">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:34"><expr pos:start="59:5" pos:end="59:33"><call pos:start="59:5" pos:end="59:33"><name pos:start="59:5" pos:end="59:10">g_free</name><argument_list pos:start="59:11" pos:end="59:33">(<argument pos:start="59:12" pos:end="59:32"><expr pos:start="59:12" pos:end="59:32"><name pos:start="59:12" pos:end="59:32"><name pos:start="59:12" pos:end="59:16">block</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:32">transit_bitmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:33"><expr pos:start="61:5" pos:end="61:32"><name pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:9">block</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:25">transit_bitmap</name></name> <operator pos:start="61:27" pos:end="61:27">=</operator> <name pos:start="61:29" pos:end="61:32">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:37"><expr pos:start="65:5" pos:end="65:36"><call pos:start="65:5" pos:end="65:36"><name pos:start="65:5" pos:end="65:10">g_free</name><argument_list pos:start="65:11" pos:end="65:36">(<argument pos:start="65:12" pos:end="65:35"><expr pos:start="65:12" pos:end="65:35"><name pos:start="65:12" pos:end="65:35"><name pos:start="65:12" pos:end="65:16">block</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:35">unregister_bitmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:36"><expr pos:start="67:5" pos:end="67:35"><name pos:start="67:5" pos:end="67:28"><name pos:start="67:5" pos:end="67:9">block</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:28">unregister_bitmap</name></name> <operator pos:start="67:30" pos:end="67:30">=</operator> <name pos:start="67:32" pos:end="67:35">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:31"><expr pos:start="71:5" pos:end="71:30"><call pos:start="71:5" pos:end="71:30"><name pos:start="71:5" pos:end="71:10">g_free</name><argument_list pos:start="71:11" pos:end="71:30">(<argument pos:start="71:12" pos:end="71:29"><expr pos:start="71:12" pos:end="71:29"><name pos:start="71:12" pos:end="71:29"><name pos:start="71:12" pos:end="71:16">block</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:29">remote_keys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:30"><expr pos:start="73:5" pos:end="73:29"><name pos:start="73:5" pos:end="73:22"><name pos:start="73:5" pos:end="73:9">block</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:22">remote_keys</name></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <name pos:start="73:26" pos:end="73:29">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:30"><expr pos:start="77:5" pos:end="77:29"><call pos:start="77:5" pos:end="77:29"><name pos:start="77:5" pos:end="77:10">g_free</name><argument_list pos:start="77:11" pos:end="77:29">(<argument pos:start="77:12" pos:end="77:28"><expr pos:start="77:12" pos:end="77:28"><name pos:start="77:12" pos:end="77:28"><name pos:start="77:12" pos:end="77:16">block</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:28">block_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:29"><expr pos:start="79:5" pos:end="79:28"><name pos:start="79:5" pos:end="79:21"><name pos:start="79:5" pos:end="79:9">block</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:21">block_name</name></name> <operator pos:start="79:23" pos:end="79:23">=</operator> <name pos:start="79:25" pos:end="79:28">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="83:5" pos:end="93:5"><if pos:start="83:5" pos:end="93:5">if <condition pos:start="83:8" pos:end="83:23">(<expr pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:12">rdma</name><operator pos:start="83:13" pos:end="83:14">-&gt;</operator><name pos:start="83:15" pos:end="83:22">blockmap</name></name></expr>)</condition> <block pos:start="83:25" pos:end="93:5">{<block_content pos:start="85:9" pos:end="91:9">

        <for pos:start="85:9" pos:end="91:9">for <control pos:start="85:13" pos:end="85:46">(<init pos:start="85:14" pos:end="85:19"><expr pos:start="85:14" pos:end="85:18"><name pos:start="85:14" pos:end="85:14">x</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <literal type="number" pos:start="85:18" pos:end="85:18">0</literal></expr>;</init> <condition pos:start="85:21" pos:end="85:41"><expr pos:start="85:21" pos:end="85:40"><name pos:start="85:21" pos:end="85:21">x</name> <operator pos:start="85:23" pos:end="85:23">&lt;</operator> <name pos:start="85:25" pos:end="85:40"><name pos:start="85:25" pos:end="85:29">local</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:40">nb_blocks</name></name></expr>;</condition> <incr pos:start="85:43" pos:end="85:45"><expr pos:start="85:43" pos:end="85:45"><name pos:start="85:43" pos:end="85:43">x</name><operator pos:start="85:44" pos:end="85:45">++</operator></expr></incr>)</control> <block pos:start="85:48" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:66">

            <expr_stmt pos:start="87:13" pos:end="89:66"><expr pos:start="87:13" pos:end="89:65"><call pos:start="87:13" pos:end="89:65"><name pos:start="87:13" pos:end="87:31">g_hash_table_remove</name><argument_list pos:start="87:32" pos:end="89:65">(<argument pos:start="87:33" pos:end="87:46"><expr pos:start="87:33" pos:end="87:46"><name pos:start="87:33" pos:end="87:46"><name pos:start="87:33" pos:end="87:36">rdma</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:46">blockmap</name></name></expr></argument>,

                                <argument pos:start="89:33" pos:end="89:64"><expr pos:start="89:33" pos:end="89:64"><operator pos:start="89:33" pos:end="89:33">(</operator><name pos:start="89:34" pos:end="89:37">void</name> <operator pos:start="89:39" pos:end="89:39">*</operator><operator pos:start="89:40" pos:end="89:40">)</operator><operator pos:start="89:41" pos:end="89:41">(</operator><name pos:start="89:42" pos:end="89:50">uintptr_t</name><operator pos:start="89:51" pos:end="89:51">)</operator><name pos:start="89:52" pos:end="89:57"><name pos:start="89:52" pos:end="89:54">old</name><index pos:start="89:55" pos:end="89:57">[<expr pos:start="89:56" pos:end="89:56"><name pos:start="89:56" pos:end="89:56">x</name></expr>]</index></name><operator pos:start="89:58" pos:end="89:58">.</operator><name pos:start="89:59" pos:end="89:64">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="131:5"><if pos:start="97:5" pos:end="125:5">if <condition pos:start="97:8" pos:end="97:29">(<expr pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:13">local</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:24">nb_blocks</name></name> <operator pos:start="97:26" pos:end="97:26">&gt;</operator> <literal type="number" pos:start="97:28" pos:end="97:28">1</literal></expr>)</condition> <block pos:start="97:31" pos:end="125:5">{<block_content pos:start="101:9" pos:end="123:9">



        <expr_stmt pos:start="101:9" pos:end="103:60"><expr pos:start="101:9" pos:end="103:59"><name pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:13">local</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:20">block</name></name> <operator pos:start="101:22" pos:end="101:22">=</operator> <call pos:start="101:24" pos:end="103:59"><name pos:start="101:24" pos:end="101:32">g_malloc0</name><argument_list pos:start="101:33" pos:end="103:59">(<argument pos:start="101:34" pos:end="103:58"><expr pos:start="101:34" pos:end="103:58"><sizeof pos:start="101:34" pos:end="101:55">sizeof<argument_list pos:start="101:40" pos:end="101:55">(<argument pos:start="101:41" pos:end="101:54"><expr pos:start="101:41" pos:end="101:54"><name pos:start="101:41" pos:end="101:54">RDMALocalBlock</name></expr></argument>)</argument_list></sizeof> <operator pos:start="101:57" pos:end="101:57">*</operator>

                                    <operator pos:start="103:37" pos:end="103:37">(</operator><name pos:start="103:38" pos:end="103:53"><name pos:start="103:38" pos:end="103:42">local</name><operator pos:start="103:43" pos:end="103:44">-&gt;</operator><name pos:start="103:45" pos:end="103:53">nb_blocks</name></name> <operator pos:start="103:55" pos:end="103:55">-</operator> <literal type="number" pos:start="103:57" pos:end="103:57">1</literal><operator pos:start="103:58" pos:end="103:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="107:9" pos:end="111:9"><if pos:start="107:9" pos:end="111:9">if <condition pos:start="107:12" pos:end="107:25">(<expr pos:start="107:13" pos:end="107:24"><name pos:start="107:13" pos:end="107:24"><name pos:start="107:13" pos:end="107:17">block</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:24">index</name></name></expr>)</condition> <block pos:start="107:27" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:77">

            <expr_stmt pos:start="109:13" pos:end="109:77"><expr pos:start="109:13" pos:end="109:76"><call pos:start="109:13" pos:end="109:76"><name pos:start="109:13" pos:end="109:18">memcpy</name><argument_list pos:start="109:19" pos:end="109:76">(<argument pos:start="109:20" pos:end="109:31"><expr pos:start="109:20" pos:end="109:31"><name pos:start="109:20" pos:end="109:31"><name pos:start="109:20" pos:end="109:24">local</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:31">block</name></name></expr></argument>, <argument pos:start="109:34" pos:end="109:36"><expr pos:start="109:34" pos:end="109:36"><name pos:start="109:34" pos:end="109:36">old</name></expr></argument>, <argument pos:start="109:39" pos:end="109:75"><expr pos:start="109:39" pos:end="109:75"><sizeof pos:start="109:39" pos:end="109:60">sizeof<argument_list pos:start="109:45" pos:end="109:60">(<argument pos:start="109:46" pos:end="109:59"><expr pos:start="109:46" pos:end="109:59"><name pos:start="109:46" pos:end="109:59">RDMALocalBlock</name></expr></argument>)</argument_list></sizeof> <operator pos:start="109:62" pos:end="109:62">*</operator> <name pos:start="109:64" pos:end="109:75"><name pos:start="109:64" pos:end="109:68">block</name><operator pos:start="109:69" pos:end="109:70">-&gt;</operator><name pos:start="109:71" pos:end="109:75">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="115:9" pos:end="123:9"><if pos:start="115:9" pos:end="123:9">if <condition pos:start="115:12" pos:end="115:50">(<expr pos:start="115:13" pos:end="115:49"><name pos:start="115:13" pos:end="115:24"><name pos:start="115:13" pos:end="115:17">block</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:24">index</name></name> <operator pos:start="115:26" pos:end="115:26">&lt;</operator> <operator pos:start="115:28" pos:end="115:28">(</operator><name pos:start="115:29" pos:end="115:44"><name pos:start="115:29" pos:end="115:33">local</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:44">nb_blocks</name></name> <operator pos:start="115:46" pos:end="115:46">-</operator> <literal type="number" pos:start="115:48" pos:end="115:48">1</literal><operator pos:start="115:49" pos:end="115:49">)</operator></expr>)</condition> <block pos:start="115:52" pos:end="123:9">{<block_content pos:start="117:13" pos:end="121:61">

            <expr_stmt pos:start="117:13" pos:end="121:61"><expr pos:start="117:13" pos:end="121:60"><call pos:start="117:13" pos:end="121:60"><name pos:start="117:13" pos:end="117:18">memcpy</name><argument_list pos:start="117:19" pos:end="121:60">(<argument pos:start="117:20" pos:end="117:46"><expr pos:start="117:20" pos:end="117:46"><name pos:start="117:20" pos:end="117:31"><name pos:start="117:20" pos:end="117:24">local</name><operator pos:start="117:25" pos:end="117:26">-&gt;</operator><name pos:start="117:27" pos:end="117:31">block</name></name> <operator pos:start="117:33" pos:end="117:33">+</operator> <name pos:start="117:35" pos:end="117:46"><name pos:start="117:35" pos:end="117:39">block</name><operator pos:start="117:40" pos:end="117:41">-&gt;</operator><name pos:start="117:42" pos:end="117:46">index</name></name></expr></argument>, <argument pos:start="117:49" pos:end="117:72"><expr pos:start="117:49" pos:end="117:72"><name pos:start="117:49" pos:end="117:51">old</name> <operator pos:start="117:53" pos:end="117:53">+</operator> <operator pos:start="117:55" pos:end="117:55">(</operator><name pos:start="117:56" pos:end="117:67"><name pos:start="117:56" pos:end="117:60">block</name><operator pos:start="117:61" pos:end="117:62">-&gt;</operator><name pos:start="117:63" pos:end="117:67">index</name></name> <operator pos:start="117:69" pos:end="117:69">+</operator> <literal type="number" pos:start="117:71" pos:end="117:71">1</literal><operator pos:start="117:72" pos:end="117:72">)</operator></expr></argument>,

                <argument pos:start="119:17" pos:end="121:59"><expr pos:start="119:17" pos:end="121:59"><sizeof pos:start="119:17" pos:end="119:38">sizeof<argument_list pos:start="119:23" pos:end="119:38">(<argument pos:start="119:24" pos:end="119:37"><expr pos:start="119:24" pos:end="119:37"><name pos:start="119:24" pos:end="119:37">RDMALocalBlock</name></expr></argument>)</argument_list></sizeof> <operator pos:start="119:40" pos:end="119:40">*</operator>

                    <operator pos:start="121:21" pos:end="121:21">(</operator><name pos:start="121:22" pos:end="121:37"><name pos:start="121:22" pos:end="121:26">local</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:37">nb_blocks</name></name> <operator pos:start="121:39" pos:end="121:39">-</operator> <operator pos:start="121:41" pos:end="121:41">(</operator><name pos:start="121:42" pos:end="121:53"><name pos:start="121:42" pos:end="121:46">block</name><operator pos:start="121:47" pos:end="121:48">-&gt;</operator><name pos:start="121:49" pos:end="121:53">index</name></name> <operator pos:start="121:55" pos:end="121:55">+</operator> <literal type="number" pos:start="121:57" pos:end="121:57">1</literal><operator pos:start="121:58" pos:end="121:58">)</operator><operator pos:start="121:59" pos:end="121:59">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="125:7" pos:end="131:5">else <block pos:start="125:12" pos:end="131:5">{<block_content pos:start="127:9" pos:end="129:28">

        <expr_stmt pos:start="127:9" pos:end="127:38"><expr pos:start="127:9" pos:end="127:37"><call pos:start="127:9" pos:end="127:37"><name pos:start="127:9" pos:end="127:14">assert</name><argument_list pos:start="127:15" pos:end="127:37">(<argument pos:start="127:16" pos:end="127:36"><expr pos:start="127:16" pos:end="127:36"><name pos:start="127:16" pos:end="127:20">block</name> <operator pos:start="127:22" pos:end="127:23">==</operator> <name pos:start="127:25" pos:end="127:36"><name pos:start="127:25" pos:end="127:29">local</name><operator pos:start="127:30" pos:end="127:31">-&gt;</operator><name pos:start="127:32" pos:end="127:36">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:28"><expr pos:start="129:9" pos:end="129:27"><name pos:start="129:9" pos:end="129:20"><name pos:start="129:9" pos:end="129:13">local</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:20">block</name></name> <operator pos:start="129:22" pos:end="129:22">=</operator> <name pos:start="129:24" pos:end="129:27">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="143:76"><expr pos:start="135:5" pos:end="143:75"><call pos:start="135:5" pos:end="143:75"><name pos:start="135:5" pos:end="135:27">trace_rdma_delete_block</name><argument_list pos:start="135:28" pos:end="143:75">(<argument pos:start="135:29" pos:end="135:33"><expr pos:start="135:29" pos:end="135:33"><name pos:start="135:29" pos:end="135:33">block</name></expr></argument>, <argument pos:start="135:36" pos:end="135:68"><expr pos:start="135:36" pos:end="135:68"><operator pos:start="135:36" pos:end="135:36">(</operator><name pos:start="135:37" pos:end="135:45">uintptr_t</name><operator pos:start="135:46" pos:end="135:46">)</operator><name pos:start="135:47" pos:end="135:68"><name pos:start="135:47" pos:end="135:51">block</name><operator pos:start="135:52" pos:end="135:53">-&gt;</operator><name pos:start="135:54" pos:end="135:68">local_host_addr</name></name></expr></argument>,

                           <argument pos:start="137:28" pos:end="137:40"><expr pos:start="137:28" pos:end="137:40"><name pos:start="137:28" pos:end="137:40"><name pos:start="137:28" pos:end="137:32">block</name><operator pos:start="137:33" pos:end="137:34">-&gt;</operator><name pos:start="137:35" pos:end="137:40">offset</name></name></expr></argument>, <argument pos:start="137:43" pos:end="137:55"><expr pos:start="137:43" pos:end="137:55"><name pos:start="137:43" pos:end="137:55"><name pos:start="137:43" pos:end="137:47">block</name><operator pos:start="137:48" pos:end="137:49">-&gt;</operator><name pos:start="137:50" pos:end="137:55">length</name></name></expr></argument>,

                            <argument pos:start="139:29" pos:end="139:79"><expr pos:start="139:29" pos:end="139:79"><operator pos:start="139:29" pos:end="139:29">(</operator><name pos:start="139:30" pos:end="139:38">uintptr_t</name><operator pos:start="139:39" pos:end="139:39">)</operator><operator pos:start="139:40" pos:end="139:40">(</operator><name pos:start="139:41" pos:end="139:62"><name pos:start="139:41" pos:end="139:45">block</name><operator pos:start="139:46" pos:end="139:47">-&gt;</operator><name pos:start="139:48" pos:end="139:62">local_host_addr</name></name> <operator pos:start="139:64" pos:end="139:64">+</operator> <name pos:start="139:66" pos:end="139:78"><name pos:start="139:66" pos:end="139:70">block</name><operator pos:start="139:71" pos:end="139:72">-&gt;</operator><name pos:start="139:73" pos:end="139:78">length</name></name><operator pos:start="139:79" pos:end="139:79">)</operator></expr></argument>,

                           <argument pos:start="141:28" pos:end="143:56"><expr pos:start="141:28" pos:end="143:56"><call pos:start="141:28" pos:end="141:58"><name pos:start="141:28" pos:end="141:40">BITS_TO_LONGS</name><argument_list pos:start="141:41" pos:end="141:58">(<argument pos:start="141:42" pos:end="141:57"><expr pos:start="141:42" pos:end="141:57"><name pos:start="141:42" pos:end="141:57"><name pos:start="141:42" pos:end="141:46">block</name><operator pos:start="141:47" pos:end="141:48">-&gt;</operator><name pos:start="141:49" pos:end="141:57">nb_chunks</name></name></expr></argument>)</argument_list></call> <operator pos:start="141:60" pos:end="141:60">*</operator>

                               sizeof<operator pos:start="143:38" pos:end="143:38">(</operator><name pos:start="143:39" pos:end="143:46">unsigned</name> <name pos:start="143:48" pos:end="143:51">long</name><operator pos:start="143:52" pos:end="143:52">)</operator> <operator pos:start="143:54" pos:end="143:54">*</operator> <literal type="number" pos:start="143:56" pos:end="143:56">8</literal></expr></argument>, <argument pos:start="143:59" pos:end="143:74"><expr pos:start="143:59" pos:end="143:74"><name pos:start="143:59" pos:end="143:74"><name pos:start="143:59" pos:end="143:63">block</name><operator pos:start="143:64" pos:end="143:65">-&gt;</operator><name pos:start="143:66" pos:end="143:74">nb_chunks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:16"><expr pos:start="147:5" pos:end="147:15"><call pos:start="147:5" pos:end="147:15"><name pos:start="147:5" pos:end="147:10">g_free</name><argument_list pos:start="147:11" pos:end="147:15">(<argument pos:start="147:12" pos:end="147:14"><expr pos:start="147:12" pos:end="147:14"><name pos:start="147:12" pos:end="147:14">old</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:23"><expr pos:start="151:5" pos:end="151:22"><name pos:start="151:5" pos:end="151:20"><name pos:start="151:5" pos:end="151:9">local</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:20">nb_blocks</name></name><operator pos:start="151:21" pos:end="151:22">--</operator></expr>;</expr_stmt>



    <if_stmt pos:start="155:5" pos:end="167:5"><if pos:start="155:5" pos:end="167:5">if <condition pos:start="155:8" pos:end="155:43">(<expr pos:start="155:9" pos:end="155:42"><name pos:start="155:9" pos:end="155:24"><name pos:start="155:9" pos:end="155:13">local</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:24">nb_blocks</name></name> <operator pos:start="155:26" pos:end="155:27">&amp;&amp;</operator> <name pos:start="155:29" pos:end="155:42"><name pos:start="155:29" pos:end="155:32">rdma</name><operator pos:start="155:33" pos:end="155:34">-&gt;</operator><name pos:start="155:35" pos:end="155:42">blockmap</name></name></expr>)</condition> <block pos:start="155:45" pos:end="167:5">{<block_content pos:start="157:9" pos:end="165:9">

        <for pos:start="157:9" pos:end="165:9">for <control pos:start="157:13" pos:end="157:46">(<init pos:start="157:14" pos:end="157:19"><expr pos:start="157:14" pos:end="157:18"><name pos:start="157:14" pos:end="157:14">x</name> <operator pos:start="157:16" pos:end="157:16">=</operator> <literal type="number" pos:start="157:18" pos:end="157:18">0</literal></expr>;</init> <condition pos:start="157:21" pos:end="157:41"><expr pos:start="157:21" pos:end="157:40"><name pos:start="157:21" pos:end="157:21">x</name> <operator pos:start="157:23" pos:end="157:23">&lt;</operator> <name pos:start="157:25" pos:end="157:40"><name pos:start="157:25" pos:end="157:29">local</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:40">nb_blocks</name></name></expr>;</condition> <incr pos:start="157:43" pos:end="157:45"><expr pos:start="157:43" pos:end="157:45"><name pos:start="157:43" pos:end="157:43">x</name><operator pos:start="157:44" pos:end="157:45">++</operator></expr></incr>)</control> <block pos:start="157:48" pos:end="165:9">{<block_content pos:start="159:13" pos:end="163:50">

            <expr_stmt pos:start="159:13" pos:end="163:50"><expr pos:start="159:13" pos:end="163:49"><call pos:start="159:13" pos:end="163:49"><name pos:start="159:13" pos:end="159:31">g_hash_table_insert</name><argument_list pos:start="159:32" pos:end="163:49">(<argument pos:start="159:33" pos:end="159:46"><expr pos:start="159:33" pos:end="159:46"><name pos:start="159:33" pos:end="159:46"><name pos:start="159:33" pos:end="159:36">rdma</name><operator pos:start="159:37" pos:end="159:38">-&gt;</operator><name pos:start="159:39" pos:end="159:46">blockmap</name></name></expr></argument>,

                                <argument pos:start="161:33" pos:end="161:73"><expr pos:start="161:33" pos:end="161:73"><operator pos:start="161:33" pos:end="161:33">(</operator><name pos:start="161:34" pos:end="161:37">void</name> <operator pos:start="161:39" pos:end="161:39">*</operator><operator pos:start="161:40" pos:end="161:40">)</operator><operator pos:start="161:41" pos:end="161:41">(</operator><name pos:start="161:42" pos:end="161:50">uintptr_t</name><operator pos:start="161:51" pos:end="161:51">)</operator><name pos:start="161:52" pos:end="161:66"><name pos:start="161:52" pos:end="161:56">local</name><operator pos:start="161:57" pos:end="161:58">-&gt;</operator><name pos:start="161:59" pos:end="161:63">block</name><index pos:start="161:64" pos:end="161:66">[<expr pos:start="161:65" pos:end="161:65"><name pos:start="161:65" pos:end="161:65">x</name></expr>]</index></name><operator pos:start="161:67" pos:end="161:67">.</operator><name pos:start="161:68" pos:end="161:73">offset</name></expr></argument>,

                                <argument pos:start="163:33" pos:end="163:48"><expr pos:start="163:33" pos:end="163:48"><operator pos:start="163:33" pos:end="163:33">&amp;</operator><name pos:start="163:34" pos:end="163:48"><name pos:start="163:34" pos:end="163:38">local</name><operator pos:start="163:39" pos:end="163:40">-&gt;</operator><name pos:start="163:41" pos:end="163:45">block</name><index pos:start="163:46" pos:end="163:48">[<expr pos:start="163:47" pos:end="163:47"><name pos:start="163:47" pos:end="163:47">x</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <return pos:start="171:5" pos:end="171:13">return <expr pos:start="171:12" pos:end="171:12"><literal type="number" pos:start="171:12" pos:end="171:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
