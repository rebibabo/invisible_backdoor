<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25338.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">openpic_tmr_write</name><parameter_list pos:start="1:30" pos:end="3:45">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:50">hwaddr</name></type> <name pos:start="1:52" pos:end="1:55">addr</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:65">uint64_t</name></type> <name pos:start="1:67" pos:end="1:69">val</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:44"><decl pos:start="3:33" pos:end="3:44"><type pos:start="3:33" pos:end="3:44"><name pos:start="3:33" pos:end="3:40">unsigned</name></type> <name pos:start="3:42" pos:end="3:44">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:5">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">OpenPICState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">opp</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">idx</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:60"><expr pos:start="13:5" pos:end="13:59"><call pos:start="13:5" pos:end="13:59"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="13:59">(<argument pos:start="13:13" pos:end="13:37"><expr pos:start="13:13" pos:end="13:37"><literal type="string" pos:start="13:13" pos:end="13:37">"%s: addr %08x &lt;= %08x\n"</literal></expr></argument>, <argument pos:start="13:40" pos:end="13:47"><expr pos:start="13:40" pos:end="13:47"><name pos:start="13:40" pos:end="13:47">__func__</name></expr></argument>, <argument pos:start="13:50" pos:end="13:53"><expr pos:start="13:50" pos:end="13:53"><name pos:start="13:50" pos:end="13:53">addr</name></expr></argument>, <argument pos:start="13:56" pos:end="13:58"><expr pos:start="13:56" pos:end="13:58"><name pos:start="13:56" pos:end="13:58">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:15"><if pos:start="15:5" pos:end="17:15">if <condition pos:start="15:8" pos:end="15:19">(<expr pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:12">addr</name> <operator pos:start="15:14" pos:end="15:14">&amp;</operator> <literal type="number" pos:start="15:16" pos:end="15:18">0xF</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:15"><block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:7">idx</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <operator pos:start="19:11" pos:end="19:11">(</operator><name pos:start="19:12" pos:end="19:15">addr</name> <operator pos:start="19:17" pos:end="19:18">&gt;&gt;</operator> <literal type="number" pos:start="19:20" pos:end="19:20">6</literal><operator pos:start="19:21" pos:end="19:21">)</operator> <operator pos:start="19:23" pos:end="19:23">&amp;</operator> <literal type="number" pos:start="19:25" pos:end="19:27">0x3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:8">addr</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <name pos:start="21:12" pos:end="21:15">addr</name> <operator pos:start="21:17" pos:end="21:17">&amp;</operator> <literal type="number" pos:start="21:19" pos:end="21:22">0x30</literal></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:20">(<expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:12">addr</name> <operator pos:start="25:14" pos:end="25:15">==</operator> <literal type="number" pos:start="25:17" pos:end="25:19">0x0</literal></expr>)</condition> <block pos:start="25:22" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:15">

        <comment type="block" pos:start="27:9" pos:end="27:25">/* TIFR (TFRR) */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:24"><expr pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:11">opp</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:17">tifr</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:23">val</name></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="35:5" pos:end="69:5">switch <condition pos:start="35:12" pos:end="35:24">(<expr pos:start="35:13" pos:end="35:23"><name pos:start="35:13" pos:end="35:16">addr</name> <operator pos:start="35:18" pos:end="35:18">&amp;</operator> <literal type="number" pos:start="35:20" pos:end="35:23">0x30</literal></expr>)</condition> <block pos:start="35:26" pos:end="69:5">{<block_content pos:start="37:5" pos:end="67:14">

    <case pos:start="37:5" pos:end="37:14">case <expr pos:start="37:10" pos:end="37:13"><literal type="number" pos:start="37:10" pos:end="37:13">0x00</literal></expr>:</case> <comment type="block" pos:start="37:16" pos:end="37:33">/* TICC (GTCCR) */</comment>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:14">case <expr pos:start="41:10" pos:end="41:13"><literal type="number" pos:start="41:10" pos:end="41:13">0x10</literal></expr>:</case> <comment type="block" pos:start="41:16" pos:end="41:33">/* TIBC (GTBCR) */</comment>

        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="47:51">(<expr pos:start="43:13" pos:end="47:50"><operator pos:start="43:13" pos:end="43:13">(</operator><name pos:start="43:14" pos:end="43:29"><name pos:start="43:14" pos:end="43:16">opp</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:24">timers</name><index pos:start="43:25" pos:end="43:29">[<expr pos:start="43:26" pos:end="43:28"><name pos:start="43:26" pos:end="43:28">idx</name></expr>]</index></name><operator pos:start="43:30" pos:end="43:30">.</operator><name pos:start="43:31" pos:end="43:34">ticc</name> <operator pos:start="43:36" pos:end="43:36">&amp;</operator> <name pos:start="43:38" pos:end="43:45">TICC_TOG</name><operator pos:start="43:46" pos:end="43:46">)</operator> <operator pos:start="43:48" pos:end="43:49">!=</operator> <literal type="number" pos:start="43:51" pos:end="43:51">0</literal> <operator pos:start="43:53" pos:end="43:54">&amp;&amp;</operator>

            <operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:16">val</name> <operator pos:start="45:18" pos:end="45:18">&amp;</operator> <name pos:start="45:20" pos:end="45:26">TIBC_CI</name><operator pos:start="45:27" pos:end="45:27">)</operator> <operator pos:start="45:29" pos:end="45:30">==</operator> <literal type="number" pos:start="45:32" pos:end="45:32">0</literal> <operator pos:start="45:34" pos:end="45:35">&amp;&amp;</operator>

            <operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:29"><name pos:start="47:14" pos:end="47:16">opp</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:24">timers</name><index pos:start="47:25" pos:end="47:29">[<expr pos:start="47:26" pos:end="47:28"><name pos:start="47:26" pos:end="47:28">idx</name></expr>]</index></name><operator pos:start="47:30" pos:end="47:30">.</operator><name pos:start="47:31" pos:end="47:34">tibc</name> <operator pos:start="47:36" pos:end="47:36">&amp;</operator> <name pos:start="47:38" pos:end="47:44">TIBC_CI</name><operator pos:start="47:45" pos:end="47:45">)</operator> <operator pos:start="47:47" pos:end="47:48">!=</operator> <literal type="number" pos:start="47:50" pos:end="47:50">0</literal></expr>)</condition> <block pos:start="47:53" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:47">

            <expr_stmt pos:start="49:13" pos:end="49:47"><expr pos:start="49:13" pos:end="49:46"><name pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:15">opp</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:23">timers</name><index pos:start="49:24" pos:end="49:28">[<expr pos:start="49:25" pos:end="49:27"><name pos:start="49:25" pos:end="49:27">idx</name></expr>]</index></name><operator pos:start="49:29" pos:end="49:29">.</operator><name pos:start="49:30" pos:end="49:33">ticc</name> <operator pos:start="49:35" pos:end="49:36">&amp;=</operator> <operator pos:start="49:38" pos:end="49:38">~</operator><name pos:start="49:39" pos:end="49:46">TICC_TOG</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:36"><expr pos:start="53:9" pos:end="53:35"><name pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:11">opp</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:19">timers</name><index pos:start="53:20" pos:end="53:24">[<expr pos:start="53:21" pos:end="53:23"><name pos:start="53:21" pos:end="53:23">idx</name></expr>]</index></name><operator pos:start="53:25" pos:end="53:25">.</operator><name pos:start="53:26" pos:end="53:29">tibc</name> <operator pos:start="53:31" pos:end="53:31">=</operator> <name pos:start="53:33" pos:end="53:35">val</name></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:14">case <expr pos:start="57:10" pos:end="57:13"><literal type="number" pos:start="57:10" pos:end="57:13">0x20</literal></expr>:</case> <comment type="block" pos:start="57:16" pos:end="57:34">/* TIVP (GTIVPR) */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:57"><expr pos:start="59:9" pos:end="59:56"><call pos:start="59:9" pos:end="59:56"><name pos:start="59:9" pos:end="59:25">write_IRQreg_ipvp</name><argument_list pos:start="59:26" pos:end="59:56">(<argument pos:start="59:27" pos:end="59:29"><expr pos:start="59:27" pos:end="59:29"><name pos:start="59:27" pos:end="59:29">opp</name></expr></argument>, <argument pos:start="59:32" pos:end="59:50"><expr pos:start="59:32" pos:end="59:50"><name pos:start="59:32" pos:end="59:44"><name pos:start="59:32" pos:end="59:34">opp</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:44">irq_tim0</name></name> <operator pos:start="59:46" pos:end="59:46">+</operator> <name pos:start="59:48" pos:end="59:50">idx</name></expr></argument>, <argument pos:start="59:53" pos:end="59:55"><expr pos:start="59:53" pos:end="59:55"><name pos:start="59:53" pos:end="59:55">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:14">case <expr pos:start="63:10" pos:end="63:13"><literal type="number" pos:start="63:10" pos:end="63:13">0x30</literal></expr>:</case> <comment type="block" pos:start="63:16" pos:end="63:33">/* TIDE (GTIDR) */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:56"><expr pos:start="65:9" pos:end="65:55"><call pos:start="65:9" pos:end="65:55"><name pos:start="65:9" pos:end="65:24">write_IRQreg_ide</name><argument_list pos:start="65:25" pos:end="65:55">(<argument pos:start="65:26" pos:end="65:28"><expr pos:start="65:26" pos:end="65:28"><name pos:start="65:26" pos:end="65:28">opp</name></expr></argument>, <argument pos:start="65:31" pos:end="65:49"><expr pos:start="65:31" pos:end="65:49"><name pos:start="65:31" pos:end="65:43"><name pos:start="65:31" pos:end="65:33">opp</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:43">irq_tim0</name></name> <operator pos:start="65:45" pos:end="65:45">+</operator> <name pos:start="65:47" pos:end="65:49">idx</name></expr></argument>, <argument pos:start="65:52" pos:end="65:54"><expr pos:start="65:52" pos:end="65:54"><name pos:start="65:52" pos:end="65:54">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
