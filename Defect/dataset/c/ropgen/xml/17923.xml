<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17923.c" pos:tabs="8"><function pos:start="1:1" pos:end="525:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">gen_pool32axf</name> <parameter_list pos:start="1:27" pos:end="3:42">(<parameter pos:start="1:28" pos:end="1:44"><decl pos:start="1:28" pos:end="1:44"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:39">CPUMIPSState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">env</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:63"><decl pos:start="1:47" pos:end="1:63"><type pos:start="1:47" pos:end="1:63"><name pos:start="1:47" pos:end="1:58">DisasContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">ctx</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:71"><decl pos:start="1:66" pos:end="1:71"><type pos:start="1:66" pos:end="1:71"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:71">rt</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:79"><decl pos:start="1:74" pos:end="1:79"><type pos:start="1:74" pos:end="1:79"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:79">rs</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:41"><decl pos:start="3:28" pos:end="3:41"><type pos:start="3:28" pos:end="3:41"><name pos:start="3:28" pos:end="3:30">int</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:41">is_branch</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="525:1">{<block_content pos:start="7:5" pos:end="523:5">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">extension</name> <init pos:start="7:19" pos:end="7:45">= <expr pos:start="7:21" pos:end="7:45"><operator pos:start="7:21" pos:end="7:21">(</operator><name pos:start="7:22" pos:end="7:32"><name pos:start="7:22" pos:end="7:24">ctx</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:32">opcode</name></name> <operator pos:start="7:34" pos:end="7:35">&gt;&gt;</operator> <literal type="number" pos:start="7:37" pos:end="7:37">6</literal><operator pos:start="7:38" pos:end="7:38">)</operator> <operator pos:start="7:40" pos:end="7:40">&amp;</operator> <literal type="number" pos:start="7:42" pos:end="7:45">0x3f</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">minor</name> <init pos:start="9:15" pos:end="9:41">= <expr pos:start="9:17" pos:end="9:41"><operator pos:start="9:17" pos:end="9:17">(</operator><name pos:start="9:18" pos:end="9:28"><name pos:start="9:18" pos:end="9:20">ctx</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:28">opcode</name></name> <operator pos:start="9:30" pos:end="9:31">&gt;&gt;</operator> <literal type="number" pos:start="9:33" pos:end="9:34">12</literal><operator pos:start="9:35" pos:end="9:35">)</operator> <operator pos:start="9:37" pos:end="9:37">&amp;</operator> <literal type="number" pos:start="9:39" pos:end="9:41">0xf</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:22">mips32_op</name></decl>;</decl_stmt>



    <switch pos:start="15:5" pos:end="523:5">switch <condition pos:start="15:12" pos:end="15:22">(<expr pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:21">extension</name></expr>)</condition> <block pos:start="15:24" pos:end="523:5">{<block_content pos:start="17:5" pos:end="521:14">

    <case pos:start="17:5" pos:end="17:13">case <expr pos:start="17:10" pos:end="17:12"><name pos:start="17:10" pos:end="17:12">TEQ</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:28"><expr pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:17">mips32_op</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:27">OPC_TEQ</name></expr>;</expr_stmt>

        <goto pos:start="21:9" pos:end="21:21">goto <name pos:start="21:14" pos:end="21:20">do_trap</name>;</goto>

    <case pos:start="23:5" pos:end="23:13">case <expr pos:start="23:10" pos:end="23:12"><name pos:start="23:10" pos:end="23:12">TGE</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:17">mips32_op</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:27">OPC_TGE</name></expr>;</expr_stmt>

        <goto pos:start="27:9" pos:end="27:21">goto <name pos:start="27:14" pos:end="27:20">do_trap</name>;</goto>

    <case pos:start="29:5" pos:end="29:14">case <expr pos:start="29:10" pos:end="29:13"><name pos:start="29:10" pos:end="29:13">TGEU</name></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:17">mips32_op</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:28">OPC_TGEU</name></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:21">goto <name pos:start="33:14" pos:end="33:20">do_trap</name>;</goto>

    <case pos:start="35:5" pos:end="35:13">case <expr pos:start="35:10" pos:end="35:12"><name pos:start="35:10" pos:end="35:12">TLT</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:28"><expr pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:17">mips32_op</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <name pos:start="37:21" pos:end="37:27">OPC_TLT</name></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:21">goto <name pos:start="39:14" pos:end="39:20">do_trap</name>;</goto>

    <case pos:start="41:5" pos:end="41:14">case <expr pos:start="41:10" pos:end="41:13"><name pos:start="41:10" pos:end="41:13">TLTU</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:29"><expr pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:17">mips32_op</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:28">OPC_TLTU</name></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:21">goto <name pos:start="45:14" pos:end="45:20">do_trap</name>;</goto>

    <case pos:start="47:5" pos:end="47:13">case <expr pos:start="47:10" pos:end="47:12"><name pos:start="47:10" pos:end="47:12">TNE</name></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:28"><expr pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:17">mips32_op</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:27">OPC_TNE</name></expr>;</expr_stmt>

    <label pos:start="51:5" pos:end="51:12"><name pos:start="51:5" pos:end="51:11">do_trap</name>:</label>

        <expr_stmt pos:start="53:9" pos:end="53:45"><expr pos:start="53:9" pos:end="53:44"><call pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:16">gen_trap</name><argument_list pos:start="53:17" pos:end="53:44">(<argument pos:start="53:18" pos:end="53:20"><expr pos:start="53:18" pos:end="53:20"><name pos:start="53:18" pos:end="53:20">ctx</name></expr></argument>, <argument pos:start="53:23" pos:end="53:31"><expr pos:start="53:23" pos:end="53:31"><name pos:start="53:23" pos:end="53:31">mips32_op</name></expr></argument>, <argument pos:start="53:34" pos:end="53:35"><expr pos:start="53:34" pos:end="53:35"><name pos:start="53:34" pos:end="53:35">rs</name></expr></argument>, <argument pos:start="53:38" pos:end="53:39"><expr pos:start="53:38" pos:end="53:39"><name pos:start="53:38" pos:end="53:39">rt</name></expr></argument>, <argument pos:start="53:42" pos:end="53:43"><expr pos:start="53:42" pos:end="53:43"><operator pos:start="53:42" pos:end="53:42">-</operator><literal type="number" pos:start="53:43" pos:end="53:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="58:0">break;</break>

<cpp:ifndef pos:start="57:1" pos:end="57:24">#<cpp:directive pos:start="57:2" pos:end="57:7">ifndef</cpp:directive> <name pos:start="57:9" pos:end="57:24">CONFIG_USER_ONLY</name></cpp:ifndef>

    <case pos:start="59:5" pos:end="59:14">case <expr pos:start="59:10" pos:end="59:13"><name pos:start="59:10" pos:end="59:13">MFC0</name></expr>:</case>

    <case pos:start="61:5" pos:end="61:19">case <expr pos:start="61:10" pos:end="61:18"><name pos:start="61:10" pos:end="61:13">MFC0</name> <operator pos:start="61:15" pos:end="61:15">+</operator> <literal type="number" pos:start="61:17" pos:end="61:18">32</literal></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:31"><expr pos:start="63:9" pos:end="63:30"><call pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:25">check_cp0_enabled</name><argument_list pos:start="63:26" pos:end="63:30">(<argument pos:start="63:27" pos:end="63:29"><expr pos:start="63:27" pos:end="63:29"><name pos:start="63:27" pos:end="63:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:20">(<expr pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:14">rt</name> <operator pos:start="65:16" pos:end="65:17">==</operator> <literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr>)</condition> <block pos:start="65:22" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:18">

            <comment type="block" pos:start="67:13" pos:end="67:31">/* Treat as NOP. */</comment>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:66"><expr pos:start="73:9" pos:end="73:65"><call pos:start="73:9" pos:end="73:65"><name pos:start="73:9" pos:end="73:16">gen_mfc0</name><argument_list pos:start="73:17" pos:end="73:65">(<argument pos:start="73:18" pos:end="73:20"><expr pos:start="73:18" pos:end="73:20"><name pos:start="73:18" pos:end="73:20">ctx</name></expr></argument>, <argument pos:start="73:23" pos:end="73:33"><expr pos:start="73:23" pos:end="73:33"><name pos:start="73:23" pos:end="73:33"><name pos:start="73:23" pos:end="73:29">cpu_gpr</name><index pos:start="73:30" pos:end="73:33">[<expr pos:start="73:31" pos:end="73:32"><name pos:start="73:31" pos:end="73:32">rt</name></expr>]</index></name></expr></argument>, <argument pos:start="73:36" pos:end="73:37"><expr pos:start="73:36" pos:end="73:37"><name pos:start="73:36" pos:end="73:37">rs</name></expr></argument>, <argument pos:start="73:40" pos:end="73:64"><expr pos:start="73:40" pos:end="73:64"><operator pos:start="73:40" pos:end="73:40">(</operator><name pos:start="73:41" pos:end="73:51"><name pos:start="73:41" pos:end="73:43">ctx</name><operator pos:start="73:44" pos:end="73:45">-&gt;</operator><name pos:start="73:46" pos:end="73:51">opcode</name></name> <operator pos:start="73:53" pos:end="73:54">&gt;&gt;</operator> <literal type="number" pos:start="73:56" pos:end="73:57">11</literal><operator pos:start="73:58" pos:end="73:58">)</operator> <operator pos:start="73:60" pos:end="73:60">&amp;</operator> <literal type="number" pos:start="73:62" pos:end="73:64">0x7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:14">case <expr pos:start="77:10" pos:end="77:13"><name pos:start="77:10" pos:end="77:13">MTC0</name></expr>:</case>

    <case pos:start="79:5" pos:end="79:19">case <expr pos:start="79:10" pos:end="79:18"><name pos:start="79:10" pos:end="79:13">MTC0</name> <operator pos:start="79:15" pos:end="79:15">+</operator> <literal type="number" pos:start="79:17" pos:end="79:18">32</literal></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:31"><expr pos:start="81:9" pos:end="81:30"><call pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:25">check_cp0_enabled</name><argument_list pos:start="81:26" pos:end="81:30">(<argument pos:start="81:27" pos:end="81:29"><expr pos:start="81:27" pos:end="81:29"><name pos:start="81:27" pos:end="81:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="83:9" pos:end="95:9">{<block_content pos:start="85:13" pos:end="93:30">

            <decl_stmt pos:start="85:13" pos:end="85:37"><decl pos:start="85:13" pos:end="85:36"><type pos:start="85:13" pos:end="85:16"><name pos:start="85:13" pos:end="85:16">TCGv</name></type> <name pos:start="85:18" pos:end="85:19">t0</name> <init pos:start="85:21" pos:end="85:36">= <expr pos:start="85:23" pos:end="85:36"><call pos:start="85:23" pos:end="85:36"><name pos:start="85:23" pos:end="85:34">tcg_temp_new</name><argument_list pos:start="85:35" pos:end="85:36">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="89:13" pos:end="89:33"><expr pos:start="89:13" pos:end="89:32"><call pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:24">gen_load_gpr</name><argument_list pos:start="89:25" pos:end="89:32">(<argument pos:start="89:26" pos:end="89:27"><expr pos:start="89:26" pos:end="89:27"><name pos:start="89:26" pos:end="89:27">t0</name></expr></argument>, <argument pos:start="89:30" pos:end="89:31"><expr pos:start="89:30" pos:end="89:31"><name pos:start="89:30" pos:end="89:31">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:61"><expr pos:start="91:13" pos:end="91:60"><call pos:start="91:13" pos:end="91:60"><name pos:start="91:13" pos:end="91:20">gen_mtc0</name><argument_list pos:start="91:21" pos:end="91:60">(<argument pos:start="91:22" pos:end="91:24"><expr pos:start="91:22" pos:end="91:24"><name pos:start="91:22" pos:end="91:24">ctx</name></expr></argument>, <argument pos:start="91:27" pos:end="91:28"><expr pos:start="91:27" pos:end="91:28"><name pos:start="91:27" pos:end="91:28">t0</name></expr></argument>, <argument pos:start="91:31" pos:end="91:32"><expr pos:start="91:31" pos:end="91:32"><name pos:start="91:31" pos:end="91:32">rs</name></expr></argument>, <argument pos:start="91:35" pos:end="91:59"><expr pos:start="91:35" pos:end="91:59"><operator pos:start="91:35" pos:end="91:35">(</operator><name pos:start="91:36" pos:end="91:46"><name pos:start="91:36" pos:end="91:38">ctx</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:46">opcode</name></name> <operator pos:start="91:48" pos:end="91:49">&gt;&gt;</operator> <literal type="number" pos:start="91:51" pos:end="91:52">11</literal><operator pos:start="91:53" pos:end="91:53">)</operator> <operator pos:start="91:55" pos:end="91:55">&amp;</operator> <literal type="number" pos:start="91:57" pos:end="91:59">0x7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:30"><expr pos:start="93:13" pos:end="93:29"><call pos:start="93:13" pos:end="93:29"><name pos:start="93:13" pos:end="93:25">tcg_temp_free</name><argument_list pos:start="93:26" pos:end="93:29">(<argument pos:start="93:27" pos:end="93:28"><expr pos:start="93:27" pos:end="93:28"><name pos:start="93:27" pos:end="93:28">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="97:9" pos:end="100:0">break;</break>

<cpp:endif pos:start="99:1" pos:end="99:6">#<cpp:directive pos:start="99:2" pos:end="99:6">endif</cpp:directive></cpp:endif>

    <case pos:start="101:5" pos:end="101:14">case <expr pos:start="101:10" pos:end="101:13"><literal type="number" pos:start="101:10" pos:end="101:13">0x2c</literal></expr>:</case>

        <switch pos:start="103:9" pos:end="213:9">switch <condition pos:start="103:16" pos:end="103:22">(<expr pos:start="103:17" pos:end="103:21"><name pos:start="103:17" pos:end="103:21">minor</name></expr>)</condition> <block pos:start="103:24" pos:end="213:9">{<block_content pos:start="105:9" pos:end="211:35">

        <case pos:start="105:9" pos:end="105:17">case <expr pos:start="105:14" pos:end="105:16"><name pos:start="105:14" pos:end="105:16">SEB</name></expr>:</case>

            <expr_stmt pos:start="107:13" pos:end="107:44"><expr pos:start="107:13" pos:end="107:43"><call pos:start="107:13" pos:end="107:43"><name pos:start="107:13" pos:end="107:21">gen_bshfl</name><argument_list pos:start="107:22" pos:end="107:43">(<argument pos:start="107:23" pos:end="107:25"><expr pos:start="107:23" pos:end="107:25"><name pos:start="107:23" pos:end="107:25">ctx</name></expr></argument>, <argument pos:start="107:28" pos:end="107:34"><expr pos:start="107:28" pos:end="107:34"><name pos:start="107:28" pos:end="107:34">OPC_SEB</name></expr></argument>, <argument pos:start="107:37" pos:end="107:38"><expr pos:start="107:37" pos:end="107:38"><name pos:start="107:37" pos:end="107:38">rs</name></expr></argument>, <argument pos:start="107:41" pos:end="107:42"><expr pos:start="107:41" pos:end="107:42"><name pos:start="107:41" pos:end="107:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        <case pos:start="111:9" pos:end="111:17">case <expr pos:start="111:14" pos:end="111:16"><name pos:start="111:14" pos:end="111:16">SEH</name></expr>:</case>

            <expr_stmt pos:start="113:13" pos:end="113:44"><expr pos:start="113:13" pos:end="113:43"><call pos:start="113:13" pos:end="113:43"><name pos:start="113:13" pos:end="113:21">gen_bshfl</name><argument_list pos:start="113:22" pos:end="113:43">(<argument pos:start="113:23" pos:end="113:25"><expr pos:start="113:23" pos:end="113:25"><name pos:start="113:23" pos:end="113:25">ctx</name></expr></argument>, <argument pos:start="113:28" pos:end="113:34"><expr pos:start="113:28" pos:end="113:34"><name pos:start="113:28" pos:end="113:34">OPC_SEH</name></expr></argument>, <argument pos:start="113:37" pos:end="113:38"><expr pos:start="113:37" pos:end="113:38"><name pos:start="113:37" pos:end="113:38">rs</name></expr></argument>, <argument pos:start="113:41" pos:end="113:42"><expr pos:start="113:41" pos:end="113:42"><name pos:start="113:41" pos:end="113:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        <case pos:start="117:9" pos:end="117:17">case <expr pos:start="117:14" pos:end="117:16"><name pos:start="117:14" pos:end="117:16">CLO</name></expr>:</case>

            <expr_stmt pos:start="119:13" pos:end="119:32"><expr pos:start="119:13" pos:end="119:31"><name pos:start="119:13" pos:end="119:21">mips32_op</name> <operator pos:start="119:23" pos:end="119:23">=</operator> <name pos:start="119:25" pos:end="119:31">OPC_CLO</name></expr>;</expr_stmt>

            <goto pos:start="121:13" pos:end="121:23">goto <name pos:start="121:18" pos:end="121:22">do_cl</name>;</goto>

        <case pos:start="123:9" pos:end="123:17">case <expr pos:start="123:14" pos:end="123:16"><name pos:start="123:14" pos:end="123:16">CLZ</name></expr>:</case>

            <expr_stmt pos:start="125:13" pos:end="125:32"><expr pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:21">mips32_op</name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:31">OPC_CLZ</name></expr>;</expr_stmt>

        <label pos:start="127:9" pos:end="127:14"><name pos:start="127:9" pos:end="127:13">do_cl</name>:</label>

            <expr_stmt pos:start="129:13" pos:end="129:40"><expr pos:start="129:13" pos:end="129:39"><call pos:start="129:13" pos:end="129:39"><name pos:start="129:13" pos:end="129:22">check_insn</name><argument_list pos:start="129:23" pos:end="129:39">(<argument pos:start="129:24" pos:end="129:26"><expr pos:start="129:24" pos:end="129:26"><name pos:start="129:24" pos:end="129:26">ctx</name></expr></argument>, <argument pos:start="129:29" pos:end="129:38"><expr pos:start="129:29" pos:end="129:38"><name pos:start="129:29" pos:end="129:38">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:43"><expr pos:start="131:13" pos:end="131:42"><call pos:start="131:13" pos:end="131:42"><name pos:start="131:13" pos:end="131:18">gen_cl</name><argument_list pos:start="131:19" pos:end="131:42">(<argument pos:start="131:20" pos:end="131:22"><expr pos:start="131:20" pos:end="131:22"><name pos:start="131:20" pos:end="131:22">ctx</name></expr></argument>, <argument pos:start="131:25" pos:end="131:33"><expr pos:start="131:25" pos:end="131:33"><name pos:start="131:25" pos:end="131:33">mips32_op</name></expr></argument>, <argument pos:start="131:36" pos:end="131:37"><expr pos:start="131:36" pos:end="131:37"><name pos:start="131:36" pos:end="131:37">rt</name></expr></argument>, <argument pos:start="131:40" pos:end="131:41"><expr pos:start="131:40" pos:end="131:41"><name pos:start="131:40" pos:end="131:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        <case pos:start="135:9" pos:end="135:19">case <expr pos:start="135:14" pos:end="135:18"><name pos:start="135:14" pos:end="135:18">RDHWR</name></expr>:</case>

            <expr_stmt pos:start="137:13" pos:end="137:35"><expr pos:start="137:13" pos:end="137:34"><call pos:start="137:13" pos:end="137:34"><name pos:start="137:13" pos:end="137:21">gen_rdhwr</name><argument_list pos:start="137:22" pos:end="137:34">(<argument pos:start="137:23" pos:end="137:25"><expr pos:start="137:23" pos:end="137:25"><name pos:start="137:23" pos:end="137:25">ctx</name></expr></argument>, <argument pos:start="137:28" pos:end="137:29"><expr pos:start="137:28" pos:end="137:29"><name pos:start="137:28" pos:end="137:29">rt</name></expr></argument>, <argument pos:start="137:32" pos:end="137:33"><expr pos:start="137:32" pos:end="137:33"><name pos:start="137:32" pos:end="137:33">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:18">case <expr pos:start="141:14" pos:end="141:17"><name pos:start="141:14" pos:end="141:17">WSBH</name></expr>:</case>

            <expr_stmt pos:start="143:13" pos:end="143:45"><expr pos:start="143:13" pos:end="143:44"><call pos:start="143:13" pos:end="143:44"><name pos:start="143:13" pos:end="143:21">gen_bshfl</name><argument_list pos:start="143:22" pos:end="143:44">(<argument pos:start="143:23" pos:end="143:25"><expr pos:start="143:23" pos:end="143:25"><name pos:start="143:23" pos:end="143:25">ctx</name></expr></argument>, <argument pos:start="143:28" pos:end="143:35"><expr pos:start="143:28" pos:end="143:35"><name pos:start="143:28" pos:end="143:35">OPC_WSBH</name></expr></argument>, <argument pos:start="143:38" pos:end="143:39"><expr pos:start="143:38" pos:end="143:39"><name pos:start="143:38" pos:end="143:39">rs</name></expr></argument>, <argument pos:start="143:42" pos:end="143:43"><expr pos:start="143:42" pos:end="143:43"><name pos:start="143:42" pos:end="143:43">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="145:13" pos:end="145:18">break;</break>

        <case pos:start="147:9" pos:end="147:18">case <expr pos:start="147:14" pos:end="147:17"><name pos:start="147:14" pos:end="147:17">MULT</name></expr>:</case>

            <expr_stmt pos:start="149:13" pos:end="149:33"><expr pos:start="149:13" pos:end="149:32"><name pos:start="149:13" pos:end="149:21">mips32_op</name> <operator pos:start="149:23" pos:end="149:23">=</operator> <name pos:start="149:25" pos:end="149:32">OPC_MULT</name></expr>;</expr_stmt>

            <goto pos:start="151:13" pos:end="151:24">goto <name pos:start="151:18" pos:end="151:23">do_mul</name>;</goto>

        <case pos:start="153:9" pos:end="153:19">case <expr pos:start="153:14" pos:end="153:18"><name pos:start="153:14" pos:end="153:18">MULTU</name></expr>:</case>

            <expr_stmt pos:start="155:13" pos:end="155:34"><expr pos:start="155:13" pos:end="155:33"><name pos:start="155:13" pos:end="155:21">mips32_op</name> <operator pos:start="155:23" pos:end="155:23">=</operator> <name pos:start="155:25" pos:end="155:33">OPC_MULTU</name></expr>;</expr_stmt>

            <goto pos:start="157:13" pos:end="157:24">goto <name pos:start="157:18" pos:end="157:23">do_mul</name>;</goto>

        <case pos:start="159:9" pos:end="159:17">case <expr pos:start="159:14" pos:end="159:16"><name pos:start="159:14" pos:end="159:16">DIV</name></expr>:</case>

            <expr_stmt pos:start="161:13" pos:end="161:32"><expr pos:start="161:13" pos:end="161:31"><name pos:start="161:13" pos:end="161:21">mips32_op</name> <operator pos:start="161:23" pos:end="161:23">=</operator> <name pos:start="161:25" pos:end="161:31">OPC_DIV</name></expr>;</expr_stmt>

            <goto pos:start="163:13" pos:end="163:24">goto <name pos:start="163:18" pos:end="163:23">do_div</name>;</goto>

        <case pos:start="165:9" pos:end="165:18">case <expr pos:start="165:14" pos:end="165:17"><name pos:start="165:14" pos:end="165:17">DIVU</name></expr>:</case>

            <expr_stmt pos:start="167:13" pos:end="167:33"><expr pos:start="167:13" pos:end="167:32"><name pos:start="167:13" pos:end="167:21">mips32_op</name> <operator pos:start="167:23" pos:end="167:23">=</operator> <name pos:start="167:25" pos:end="167:32">OPC_DIVU</name></expr>;</expr_stmt>

            <goto pos:start="169:13" pos:end="169:24">goto <name pos:start="169:18" pos:end="169:23">do_div</name>;</goto>

        <label pos:start="171:9" pos:end="171:15"><name pos:start="171:9" pos:end="171:14">do_div</name>:</label>

            <expr_stmt pos:start="173:13" pos:end="173:40"><expr pos:start="173:13" pos:end="173:39"><call pos:start="173:13" pos:end="173:39"><name pos:start="173:13" pos:end="173:22">check_insn</name><argument_list pos:start="173:23" pos:end="173:39">(<argument pos:start="173:24" pos:end="173:26"><expr pos:start="173:24" pos:end="173:26"><name pos:start="173:24" pos:end="173:26">ctx</name></expr></argument>, <argument pos:start="173:29" pos:end="173:38"><expr pos:start="173:29" pos:end="173:38"><name pos:start="173:29" pos:end="173:38">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:50"><expr pos:start="175:13" pos:end="175:49"><call pos:start="175:13" pos:end="175:49"><name pos:start="175:13" pos:end="175:22">gen_muldiv</name><argument_list pos:start="175:23" pos:end="175:49">(<argument pos:start="175:24" pos:end="175:26"><expr pos:start="175:24" pos:end="175:26"><name pos:start="175:24" pos:end="175:26">ctx</name></expr></argument>, <argument pos:start="175:29" pos:end="175:37"><expr pos:start="175:29" pos:end="175:37"><name pos:start="175:29" pos:end="175:37">mips32_op</name></expr></argument>, <argument pos:start="175:40" pos:end="175:40"><expr pos:start="175:40" pos:end="175:40"><literal type="number" pos:start="175:40" pos:end="175:40">0</literal></expr></argument>, <argument pos:start="175:43" pos:end="175:44"><expr pos:start="175:43" pos:end="175:44"><name pos:start="175:43" pos:end="175:44">rs</name></expr></argument>, <argument pos:start="175:47" pos:end="175:48"><expr pos:start="175:47" pos:end="175:48"><name pos:start="175:47" pos:end="175:48">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="177:13" pos:end="177:18">break;</break>

        <case pos:start="179:9" pos:end="179:18">case <expr pos:start="179:14" pos:end="179:17"><name pos:start="179:14" pos:end="179:17">MADD</name></expr>:</case>

            <expr_stmt pos:start="181:13" pos:end="181:33"><expr pos:start="181:13" pos:end="181:32"><name pos:start="181:13" pos:end="181:21">mips32_op</name> <operator pos:start="181:23" pos:end="181:23">=</operator> <name pos:start="181:25" pos:end="181:32">OPC_MADD</name></expr>;</expr_stmt>

            <goto pos:start="183:13" pos:end="183:24">goto <name pos:start="183:18" pos:end="183:23">do_mul</name>;</goto>

        <case pos:start="185:9" pos:end="185:19">case <expr pos:start="185:14" pos:end="185:18"><name pos:start="185:14" pos:end="185:18">MADDU</name></expr>:</case>

            <expr_stmt pos:start="187:13" pos:end="187:34"><expr pos:start="187:13" pos:end="187:33"><name pos:start="187:13" pos:end="187:21">mips32_op</name> <operator pos:start="187:23" pos:end="187:23">=</operator> <name pos:start="187:25" pos:end="187:33">OPC_MADDU</name></expr>;</expr_stmt>

            <goto pos:start="189:13" pos:end="189:24">goto <name pos:start="189:18" pos:end="189:23">do_mul</name>;</goto>

        <case pos:start="191:9" pos:end="191:18">case <expr pos:start="191:14" pos:end="191:17"><name pos:start="191:14" pos:end="191:17">MSUB</name></expr>:</case>

            <expr_stmt pos:start="193:13" pos:end="193:33"><expr pos:start="193:13" pos:end="193:32"><name pos:start="193:13" pos:end="193:21">mips32_op</name> <operator pos:start="193:23" pos:end="193:23">=</operator> <name pos:start="193:25" pos:end="193:32">OPC_MSUB</name></expr>;</expr_stmt>

            <goto pos:start="195:13" pos:end="195:24">goto <name pos:start="195:18" pos:end="195:23">do_mul</name>;</goto>

        <case pos:start="197:9" pos:end="197:19">case <expr pos:start="197:14" pos:end="197:18"><name pos:start="197:14" pos:end="197:18">MSUBU</name></expr>:</case>

            <expr_stmt pos:start="199:13" pos:end="199:34"><expr pos:start="199:13" pos:end="199:33"><name pos:start="199:13" pos:end="199:21">mips32_op</name> <operator pos:start="199:23" pos:end="199:23">=</operator> <name pos:start="199:25" pos:end="199:33">OPC_MSUBU</name></expr>;</expr_stmt>

        <label pos:start="201:9" pos:end="201:15"><name pos:start="201:9" pos:end="201:14">do_mul</name>:</label>

            <expr_stmt pos:start="203:13" pos:end="203:40"><expr pos:start="203:13" pos:end="203:39"><call pos:start="203:13" pos:end="203:39"><name pos:start="203:13" pos:end="203:22">check_insn</name><argument_list pos:start="203:23" pos:end="203:39">(<argument pos:start="203:24" pos:end="203:26"><expr pos:start="203:24" pos:end="203:26"><name pos:start="203:24" pos:end="203:26">ctx</name></expr></argument>, <argument pos:start="203:29" pos:end="203:38"><expr pos:start="203:29" pos:end="203:38"><name pos:start="203:29" pos:end="203:38">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:72"><expr pos:start="205:13" pos:end="205:71"><call pos:start="205:13" pos:end="205:71"><name pos:start="205:13" pos:end="205:22">gen_muldiv</name><argument_list pos:start="205:23" pos:end="205:71">(<argument pos:start="205:24" pos:end="205:26"><expr pos:start="205:24" pos:end="205:26"><name pos:start="205:24" pos:end="205:26">ctx</name></expr></argument>, <argument pos:start="205:29" pos:end="205:37"><expr pos:start="205:29" pos:end="205:37"><name pos:start="205:29" pos:end="205:37">mips32_op</name></expr></argument>, <argument pos:start="205:40" pos:end="205:62"><expr pos:start="205:40" pos:end="205:62"><operator pos:start="205:40" pos:end="205:40">(</operator><name pos:start="205:41" pos:end="205:51"><name pos:start="205:41" pos:end="205:43">ctx</name><operator pos:start="205:44" pos:end="205:45">-&gt;</operator><name pos:start="205:46" pos:end="205:51">opcode</name></name> <operator pos:start="205:53" pos:end="205:54">&gt;&gt;</operator> <literal type="number" pos:start="205:56" pos:end="205:57">14</literal><operator pos:start="205:58" pos:end="205:58">)</operator> <operator pos:start="205:60" pos:end="205:60">&amp;</operator> <literal type="number" pos:start="205:62" pos:end="205:62">3</literal></expr></argument>, <argument pos:start="205:65" pos:end="205:66"><expr pos:start="205:65" pos:end="205:66"><name pos:start="205:65" pos:end="205:66">rs</name></expr></argument>, <argument pos:start="205:69" pos:end="205:70"><expr pos:start="205:69" pos:end="205:70"><name pos:start="205:69" pos:end="205:70">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="207:13" pos:end="207:18">break;</break>

        <default pos:start="209:9" pos:end="209:16">default:</default>

            <goto pos:start="211:13" pos:end="211:35">goto <name pos:start="211:18" pos:end="211:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="215:9" pos:end="215:14">break;</break>

    <case pos:start="217:5" pos:end="217:14">case <expr pos:start="217:10" pos:end="217:13"><literal type="number" pos:start="217:10" pos:end="217:13">0x34</literal></expr>:</case>

        <switch pos:start="219:9" pos:end="241:9">switch <condition pos:start="219:16" pos:end="219:22">(<expr pos:start="219:17" pos:end="219:21"><name pos:start="219:17" pos:end="219:21">minor</name></expr>)</condition> <block pos:start="219:24" pos:end="241:9">{<block_content pos:start="221:9" pos:end="239:35">

        <case pos:start="221:9" pos:end="221:18">case <expr pos:start="221:14" pos:end="221:17"><name pos:start="221:14" pos:end="221:17">MFC2</name></expr>:</case>

        <case pos:start="223:9" pos:end="223:18">case <expr pos:start="223:14" pos:end="223:17"><name pos:start="223:14" pos:end="223:17">MTC2</name></expr>:</case>

        <case pos:start="225:9" pos:end="225:19">case <expr pos:start="225:14" pos:end="225:18"><name pos:start="225:14" pos:end="225:18">MFHC2</name></expr>:</case>

        <case pos:start="227:9" pos:end="227:19">case <expr pos:start="227:14" pos:end="227:18"><name pos:start="227:14" pos:end="227:18">MTHC2</name></expr>:</case>

        <case pos:start="229:9" pos:end="229:18">case <expr pos:start="229:14" pos:end="229:17"><name pos:start="229:14" pos:end="229:17">CFC2</name></expr>:</case>

        <case pos:start="231:9" pos:end="231:18">case <expr pos:start="231:14" pos:end="231:17"><name pos:start="231:14" pos:end="231:17">CTC2</name></expr>:</case>

            <expr_stmt pos:start="233:13" pos:end="233:53"><expr pos:start="233:13" pos:end="233:52"><call pos:start="233:13" pos:end="233:52"><name pos:start="233:13" pos:end="233:34">generate_exception_err</name><argument_list pos:start="233:35" pos:end="233:52">(<argument pos:start="233:36" pos:end="233:38"><expr pos:start="233:36" pos:end="233:38"><name pos:start="233:36" pos:end="233:38">ctx</name></expr></argument>, <argument pos:start="233:41" pos:end="233:48"><expr pos:start="233:41" pos:end="233:48"><name pos:start="233:41" pos:end="233:48">EXCP_CpU</name></expr></argument>, <argument pos:start="233:51" pos:end="233:51"><expr pos:start="233:51" pos:end="233:51"><literal type="number" pos:start="233:51" pos:end="233:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="235:13" pos:end="235:18">break;</break>

        <default pos:start="237:9" pos:end="237:16">default:</default>

            <goto pos:start="239:13" pos:end="239:35">goto <name pos:start="239:18" pos:end="239:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="243:9" pos:end="243:14">break;</break>

    <case pos:start="245:5" pos:end="245:14">case <expr pos:start="245:10" pos:end="245:13"><literal type="number" pos:start="245:10" pos:end="245:13">0x3c</literal></expr>:</case>

        <switch pos:start="247:9" pos:end="273:9">switch <condition pos:start="247:16" pos:end="247:22">(<expr pos:start="247:17" pos:end="247:21"><name pos:start="247:17" pos:end="247:21">minor</name></expr>)</condition> <block pos:start="247:24" pos:end="273:9">{<block_content pos:start="249:9" pos:end="271:35">

        <case pos:start="249:9" pos:end="249:18">case <expr pos:start="249:14" pos:end="249:17"><name pos:start="249:14" pos:end="249:17">JALR</name></expr>:</case>

        <case pos:start="251:9" pos:end="251:21">case <expr pos:start="251:14" pos:end="251:20"><name pos:start="251:14" pos:end="251:20">JALR_HB</name></expr>:</case>

            <expr_stmt pos:start="253:13" pos:end="253:61"><expr pos:start="253:13" pos:end="253:60"><call pos:start="253:13" pos:end="253:60"><name pos:start="253:13" pos:end="253:30">gen_compute_branch</name> <argument_list pos:start="253:32" pos:end="253:60">(<argument pos:start="253:33" pos:end="253:35"><expr pos:start="253:33" pos:end="253:35"><name pos:start="253:33" pos:end="253:35">ctx</name></expr></argument>, <argument pos:start="253:38" pos:end="253:45"><expr pos:start="253:38" pos:end="253:45"><name pos:start="253:38" pos:end="253:45">OPC_JALR</name></expr></argument>, <argument pos:start="253:48" pos:end="253:48"><expr pos:start="253:48" pos:end="253:48"><literal type="number" pos:start="253:48" pos:end="253:48">4</literal></expr></argument>, <argument pos:start="253:51" pos:end="253:52"><expr pos:start="253:51" pos:end="253:52"><name pos:start="253:51" pos:end="253:52">rs</name></expr></argument>, <argument pos:start="253:55" pos:end="253:56"><expr pos:start="253:55" pos:end="253:56"><name pos:start="253:55" pos:end="253:56">rt</name></expr></argument>, <argument pos:start="253:59" pos:end="253:59"><expr pos:start="253:59" pos:end="253:59"><literal type="number" pos:start="253:59" pos:end="253:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:27"><expr pos:start="255:13" pos:end="255:26"><operator pos:start="255:13" pos:end="255:13">*</operator><name pos:start="255:14" pos:end="255:22">is_branch</name> <operator pos:start="255:24" pos:end="255:24">=</operator> <literal type="number" pos:start="255:26" pos:end="255:26">1</literal></expr>;</expr_stmt>

            <break pos:start="257:13" pos:end="257:18">break;</break>

        <case pos:start="259:9" pos:end="259:19">case <expr pos:start="259:14" pos:end="259:18"><name pos:start="259:14" pos:end="259:18">JALRS</name></expr>:</case>

        <case pos:start="261:9" pos:end="261:22">case <expr pos:start="261:14" pos:end="261:21"><name pos:start="261:14" pos:end="261:21">JALRS_HB</name></expr>:</case>

            <expr_stmt pos:start="263:13" pos:end="263:62"><expr pos:start="263:13" pos:end="263:61"><call pos:start="263:13" pos:end="263:61"><name pos:start="263:13" pos:end="263:30">gen_compute_branch</name> <argument_list pos:start="263:32" pos:end="263:61">(<argument pos:start="263:33" pos:end="263:35"><expr pos:start="263:33" pos:end="263:35"><name pos:start="263:33" pos:end="263:35">ctx</name></expr></argument>, <argument pos:start="263:38" pos:end="263:46"><expr pos:start="263:38" pos:end="263:46"><name pos:start="263:38" pos:end="263:46">OPC_JALRS</name></expr></argument>, <argument pos:start="263:49" pos:end="263:49"><expr pos:start="263:49" pos:end="263:49"><literal type="number" pos:start="263:49" pos:end="263:49">4</literal></expr></argument>, <argument pos:start="263:52" pos:end="263:53"><expr pos:start="263:52" pos:end="263:53"><name pos:start="263:52" pos:end="263:53">rs</name></expr></argument>, <argument pos:start="263:56" pos:end="263:57"><expr pos:start="263:56" pos:end="263:57"><name pos:start="263:56" pos:end="263:57">rt</name></expr></argument>, <argument pos:start="263:60" pos:end="263:60"><expr pos:start="263:60" pos:end="263:60"><literal type="number" pos:start="263:60" pos:end="263:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:27"><expr pos:start="265:13" pos:end="265:26"><operator pos:start="265:13" pos:end="265:13">*</operator><name pos:start="265:14" pos:end="265:22">is_branch</name> <operator pos:start="265:24" pos:end="265:24">=</operator> <literal type="number" pos:start="265:26" pos:end="265:26">1</literal></expr>;</expr_stmt>

            <break pos:start="267:13" pos:end="267:18">break;</break>

        <default pos:start="269:9" pos:end="269:16">default:</default>

            <goto pos:start="271:13" pos:end="271:35">goto <name pos:start="271:18" pos:end="271:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="275:9" pos:end="275:14">break;</break>

    <case pos:start="277:5" pos:end="277:14">case <expr pos:start="277:10" pos:end="277:13"><literal type="number" pos:start="277:10" pos:end="277:13">0x05</literal></expr>:</case>

        <switch pos:start="279:9" pos:end="305:9">switch <condition pos:start="279:16" pos:end="279:22">(<expr pos:start="279:17" pos:end="279:21"><name pos:start="279:17" pos:end="279:21">minor</name></expr>)</condition> <block pos:start="279:24" pos:end="305:9">{<block_content pos:start="281:9" pos:end="303:35">

        <case pos:start="281:9" pos:end="281:20">case <expr pos:start="281:14" pos:end="281:19"><name pos:start="281:14" pos:end="281:19">RDPGPR</name></expr>:</case>

            <expr_stmt pos:start="283:13" pos:end="283:35"><expr pos:start="283:13" pos:end="283:34"><call pos:start="283:13" pos:end="283:34"><name pos:start="283:13" pos:end="283:29">check_cp0_enabled</name><argument_list pos:start="283:30" pos:end="283:34">(<argument pos:start="283:31" pos:end="283:33"><expr pos:start="283:31" pos:end="283:33"><name pos:start="283:31" pos:end="283:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:42"><expr pos:start="285:13" pos:end="285:41"><call pos:start="285:13" pos:end="285:41"><name pos:start="285:13" pos:end="285:22">check_insn</name><argument_list pos:start="285:23" pos:end="285:41">(<argument pos:start="285:24" pos:end="285:26"><expr pos:start="285:24" pos:end="285:26"><name pos:start="285:24" pos:end="285:26">ctx</name></expr></argument>, <argument pos:start="285:29" pos:end="285:40"><expr pos:start="285:29" pos:end="285:40"><name pos:start="285:29" pos:end="285:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:36"><expr pos:start="287:13" pos:end="287:35"><call pos:start="287:13" pos:end="287:35"><name pos:start="287:13" pos:end="287:27">gen_load_srsgpr</name><argument_list pos:start="287:28" pos:end="287:35">(<argument pos:start="287:29" pos:end="287:30"><expr pos:start="287:29" pos:end="287:30"><name pos:start="287:29" pos:end="287:30">rt</name></expr></argument>, <argument pos:start="287:33" pos:end="287:34"><expr pos:start="287:33" pos:end="287:34"><name pos:start="287:33" pos:end="287:34">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="289:13" pos:end="289:18">break;</break>

        <case pos:start="291:9" pos:end="291:20">case <expr pos:start="291:14" pos:end="291:19"><name pos:start="291:14" pos:end="291:19">WRPGPR</name></expr>:</case>

            <expr_stmt pos:start="293:13" pos:end="293:35"><expr pos:start="293:13" pos:end="293:34"><call pos:start="293:13" pos:end="293:34"><name pos:start="293:13" pos:end="293:29">check_cp0_enabled</name><argument_list pos:start="293:30" pos:end="293:34">(<argument pos:start="293:31" pos:end="293:33"><expr pos:start="293:31" pos:end="293:33"><name pos:start="293:31" pos:end="293:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:42"><expr pos:start="295:13" pos:end="295:41"><call pos:start="295:13" pos:end="295:41"><name pos:start="295:13" pos:end="295:22">check_insn</name><argument_list pos:start="295:23" pos:end="295:41">(<argument pos:start="295:24" pos:end="295:26"><expr pos:start="295:24" pos:end="295:26"><name pos:start="295:24" pos:end="295:26">ctx</name></expr></argument>, <argument pos:start="295:29" pos:end="295:40"><expr pos:start="295:29" pos:end="295:40"><name pos:start="295:29" pos:end="295:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:37"><expr pos:start="297:13" pos:end="297:36"><call pos:start="297:13" pos:end="297:36"><name pos:start="297:13" pos:end="297:28">gen_store_srsgpr</name><argument_list pos:start="297:29" pos:end="297:36">(<argument pos:start="297:30" pos:end="297:31"><expr pos:start="297:30" pos:end="297:31"><name pos:start="297:30" pos:end="297:31">rt</name></expr></argument>, <argument pos:start="297:34" pos:end="297:35"><expr pos:start="297:34" pos:end="297:35"><name pos:start="297:34" pos:end="297:35">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="299:13" pos:end="299:18">break;</break>

        <default pos:start="301:9" pos:end="301:16">default:</default>

            <goto pos:start="303:13" pos:end="303:35">goto <name pos:start="303:18" pos:end="303:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="307:9" pos:end="310:0">break;</break>

<cpp:ifndef pos:start="309:1" pos:end="309:24">#<cpp:directive pos:start="309:2" pos:end="309:7">ifndef</cpp:directive> <name pos:start="309:9" pos:end="309:24">CONFIG_USER_ONLY</name></cpp:ifndef>

    <case pos:start="311:5" pos:end="311:14">case <expr pos:start="311:10" pos:end="311:13"><literal type="number" pos:start="311:10" pos:end="311:13">0x0d</literal></expr>:</case>

        <switch pos:start="313:9" pos:end="365:9">switch <condition pos:start="313:16" pos:end="313:22">(<expr pos:start="313:17" pos:end="313:21"><name pos:start="313:17" pos:end="313:21">minor</name></expr>)</condition> <block pos:start="313:24" pos:end="365:9">{<block_content pos:start="315:9" pos:end="363:35">

        <case pos:start="315:9" pos:end="315:18">case <expr pos:start="315:14" pos:end="315:17"><name pos:start="315:14" pos:end="315:17">TLBP</name></expr>:</case>

            <expr_stmt pos:start="317:13" pos:end="317:33"><expr pos:start="317:13" pos:end="317:32"><name pos:start="317:13" pos:end="317:21">mips32_op</name> <operator pos:start="317:23" pos:end="317:23">=</operator> <name pos:start="317:25" pos:end="317:32">OPC_TLBP</name></expr>;</expr_stmt>

            <goto pos:start="319:13" pos:end="319:24">goto <name pos:start="319:18" pos:end="319:23">do_cp0</name>;</goto>

        <case pos:start="321:9" pos:end="321:18">case <expr pos:start="321:14" pos:end="321:17"><name pos:start="321:14" pos:end="321:17">TLBR</name></expr>:</case>

            <expr_stmt pos:start="323:13" pos:end="323:33"><expr pos:start="323:13" pos:end="323:32"><name pos:start="323:13" pos:end="323:21">mips32_op</name> <operator pos:start="323:23" pos:end="323:23">=</operator> <name pos:start="323:25" pos:end="323:32">OPC_TLBR</name></expr>;</expr_stmt>

            <goto pos:start="325:13" pos:end="325:24">goto <name pos:start="325:18" pos:end="325:23">do_cp0</name>;</goto>

        <case pos:start="327:9" pos:end="327:19">case <expr pos:start="327:14" pos:end="327:18"><name pos:start="327:14" pos:end="327:18">TLBWI</name></expr>:</case>

            <expr_stmt pos:start="329:13" pos:end="329:34"><expr pos:start="329:13" pos:end="329:33"><name pos:start="329:13" pos:end="329:21">mips32_op</name> <operator pos:start="329:23" pos:end="329:23">=</operator> <name pos:start="329:25" pos:end="329:33">OPC_TLBWI</name></expr>;</expr_stmt>

            <goto pos:start="331:13" pos:end="331:24">goto <name pos:start="331:18" pos:end="331:23">do_cp0</name>;</goto>

        <case pos:start="333:9" pos:end="333:19">case <expr pos:start="333:14" pos:end="333:18"><name pos:start="333:14" pos:end="333:18">TLBWR</name></expr>:</case>

            <expr_stmt pos:start="335:13" pos:end="335:34"><expr pos:start="335:13" pos:end="335:33"><name pos:start="335:13" pos:end="335:21">mips32_op</name> <operator pos:start="335:23" pos:end="335:23">=</operator> <name pos:start="335:25" pos:end="335:33">OPC_TLBWR</name></expr>;</expr_stmt>

            <goto pos:start="337:13" pos:end="337:24">goto <name pos:start="337:18" pos:end="337:23">do_cp0</name>;</goto>

        <case pos:start="339:9" pos:end="339:18">case <expr pos:start="339:14" pos:end="339:17"><name pos:start="339:14" pos:end="339:17">WAIT</name></expr>:</case>

            <expr_stmt pos:start="341:13" pos:end="341:33"><expr pos:start="341:13" pos:end="341:32"><name pos:start="341:13" pos:end="341:21">mips32_op</name> <operator pos:start="341:23" pos:end="341:23">=</operator> <name pos:start="341:25" pos:end="341:32">OPC_WAIT</name></expr>;</expr_stmt>

            <goto pos:start="343:13" pos:end="343:24">goto <name pos:start="343:18" pos:end="343:23">do_cp0</name>;</goto>

        <case pos:start="345:9" pos:end="345:19">case <expr pos:start="345:14" pos:end="345:18"><name pos:start="345:14" pos:end="345:18">DERET</name></expr>:</case>

            <expr_stmt pos:start="347:13" pos:end="347:34"><expr pos:start="347:13" pos:end="347:33"><name pos:start="347:13" pos:end="347:21">mips32_op</name> <operator pos:start="347:23" pos:end="347:23">=</operator> <name pos:start="347:25" pos:end="347:33">OPC_DERET</name></expr>;</expr_stmt>

            <goto pos:start="349:13" pos:end="349:24">goto <name pos:start="349:18" pos:end="349:23">do_cp0</name>;</goto>

        <case pos:start="351:9" pos:end="351:18">case <expr pos:start="351:14" pos:end="351:17"><name pos:start="351:14" pos:end="351:17">ERET</name></expr>:</case>

            <expr_stmt pos:start="353:13" pos:end="353:33"><expr pos:start="353:13" pos:end="353:32"><name pos:start="353:13" pos:end="353:21">mips32_op</name> <operator pos:start="353:23" pos:end="353:23">=</operator> <name pos:start="353:25" pos:end="353:32">OPC_ERET</name></expr>;</expr_stmt>

        <label pos:start="355:9" pos:end="355:15"><name pos:start="355:9" pos:end="355:14">do_cp0</name>:</label>

            <expr_stmt pos:start="357:13" pos:end="357:49"><expr pos:start="357:13" pos:end="357:48"><call pos:start="357:13" pos:end="357:48"><name pos:start="357:13" pos:end="357:19">gen_cp0</name><argument_list pos:start="357:20" pos:end="357:48">(<argument pos:start="357:21" pos:end="357:23"><expr pos:start="357:21" pos:end="357:23"><name pos:start="357:21" pos:end="357:23">env</name></expr></argument>, <argument pos:start="357:26" pos:end="357:28"><expr pos:start="357:26" pos:end="357:28"><name pos:start="357:26" pos:end="357:28">ctx</name></expr></argument>, <argument pos:start="357:31" pos:end="357:39"><expr pos:start="357:31" pos:end="357:39"><name pos:start="357:31" pos:end="357:39">mips32_op</name></expr></argument>, <argument pos:start="357:42" pos:end="357:43"><expr pos:start="357:42" pos:end="357:43"><name pos:start="357:42" pos:end="357:43">rt</name></expr></argument>, <argument pos:start="357:46" pos:end="357:47"><expr pos:start="357:46" pos:end="357:47"><name pos:start="357:46" pos:end="357:47">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="359:13" pos:end="359:18">break;</break>

        <default pos:start="361:9" pos:end="361:16">default:</default>

            <goto pos:start="363:13" pos:end="363:35">goto <name pos:start="363:18" pos:end="363:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="367:9" pos:end="367:14">break;</break>

    <case pos:start="369:5" pos:end="369:14">case <expr pos:start="369:10" pos:end="369:13"><literal type="number" pos:start="369:10" pos:end="369:13">0x1d</literal></expr>:</case>

        <switch pos:start="371:9" pos:end="429:9">switch <condition pos:start="371:16" pos:end="371:22">(<expr pos:start="371:17" pos:end="371:21"><name pos:start="371:17" pos:end="371:21">minor</name></expr>)</condition> <block pos:start="371:24" pos:end="429:9">{<block_content pos:start="373:9" pos:end="427:35">

        <case pos:start="373:9" pos:end="373:16">case <expr pos:start="373:14" pos:end="373:15"><name pos:start="373:14" pos:end="373:15">DI</name></expr>:</case>

            <expr_stmt pos:start="375:13" pos:end="375:35"><expr pos:start="375:13" pos:end="375:34"><call pos:start="375:13" pos:end="375:34"><name pos:start="375:13" pos:end="375:29">check_cp0_enabled</name><argument_list pos:start="375:30" pos:end="375:34">(<argument pos:start="375:31" pos:end="375:33"><expr pos:start="375:31" pos:end="375:33"><name pos:start="375:31" pos:end="375:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="377:13" pos:end="395:13">{<block_content pos:start="379:17" pos:end="393:34">

                <decl_stmt pos:start="379:17" pos:end="379:41"><decl pos:start="379:17" pos:end="379:40"><type pos:start="379:17" pos:end="379:20"><name pos:start="379:17" pos:end="379:20">TCGv</name></type> <name pos:start="379:22" pos:end="379:23">t0</name> <init pos:start="379:25" pos:end="379:40">= <expr pos:start="379:27" pos:end="379:40"><call pos:start="379:27" pos:end="379:40"><name pos:start="379:27" pos:end="379:38">tcg_temp_new</name><argument_list pos:start="379:39" pos:end="379:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="383:17" pos:end="383:39"><expr pos:start="383:17" pos:end="383:38"><call pos:start="383:17" pos:end="383:38"><name pos:start="383:17" pos:end="383:30">save_cpu_state</name><argument_list pos:start="383:31" pos:end="383:38">(<argument pos:start="383:32" pos:end="383:34"><expr pos:start="383:32" pos:end="383:34"><name pos:start="383:32" pos:end="383:34">ctx</name></expr></argument>, <argument pos:start="383:37" pos:end="383:37"><expr pos:start="383:37" pos:end="383:37"><literal type="number" pos:start="383:37" pos:end="383:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="385:17" pos:end="385:43"><expr pos:start="385:17" pos:end="385:42"><call pos:start="385:17" pos:end="385:42"><name pos:start="385:17" pos:end="385:29">gen_helper_di</name><argument_list pos:start="385:30" pos:end="385:42">(<argument pos:start="385:31" pos:end="385:32"><expr pos:start="385:31" pos:end="385:32"><name pos:start="385:31" pos:end="385:32">t0</name></expr></argument>, <argument pos:start="385:35" pos:end="385:41"><expr pos:start="385:35" pos:end="385:41"><name pos:start="385:35" pos:end="385:41">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="387:17" pos:end="387:38"><expr pos:start="387:17" pos:end="387:37"><call pos:start="387:17" pos:end="387:37"><name pos:start="387:17" pos:end="387:29">gen_store_gpr</name><argument_list pos:start="387:30" pos:end="387:37">(<argument pos:start="387:31" pos:end="387:32"><expr pos:start="387:31" pos:end="387:32"><name pos:start="387:31" pos:end="387:32">t0</name></expr></argument>, <argument pos:start="387:35" pos:end="387:36"><expr pos:start="387:35" pos:end="387:36"><name pos:start="387:35" pos:end="387:36">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="389:17" pos:end="389:81">/* Stop translation as we may have switched the execution mode */</comment>

                <expr_stmt pos:start="391:17" pos:end="391:38"><expr pos:start="391:17" pos:end="391:37"><name pos:start="391:17" pos:end="391:27"><name pos:start="391:17" pos:end="391:19">ctx</name><operator pos:start="391:20" pos:end="391:21">-&gt;</operator><name pos:start="391:22" pos:end="391:27">bstate</name></name> <operator pos:start="391:29" pos:end="391:29">=</operator> <name pos:start="391:31" pos:end="391:37">BS_STOP</name></expr>;</expr_stmt>

                <expr_stmt pos:start="393:17" pos:end="393:34"><expr pos:start="393:17" pos:end="393:33"><call pos:start="393:17" pos:end="393:33"><name pos:start="393:17" pos:end="393:29">tcg_temp_free</name><argument_list pos:start="393:30" pos:end="393:33">(<argument pos:start="393:31" pos:end="393:32"><expr pos:start="393:31" pos:end="393:32"><name pos:start="393:31" pos:end="393:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="397:13" pos:end="397:18">break;</break>

        <case pos:start="399:9" pos:end="399:16">case <expr pos:start="399:14" pos:end="399:15"><name pos:start="399:14" pos:end="399:15">EI</name></expr>:</case>

            <expr_stmt pos:start="401:13" pos:end="401:35"><expr pos:start="401:13" pos:end="401:34"><call pos:start="401:13" pos:end="401:34"><name pos:start="401:13" pos:end="401:29">check_cp0_enabled</name><argument_list pos:start="401:30" pos:end="401:34">(<argument pos:start="401:31" pos:end="401:33"><expr pos:start="401:31" pos:end="401:33"><name pos:start="401:31" pos:end="401:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="403:13" pos:end="421:13">{<block_content pos:start="405:17" pos:end="419:34">

                <decl_stmt pos:start="405:17" pos:end="405:41"><decl pos:start="405:17" pos:end="405:40"><type pos:start="405:17" pos:end="405:20"><name pos:start="405:17" pos:end="405:20">TCGv</name></type> <name pos:start="405:22" pos:end="405:23">t0</name> <init pos:start="405:25" pos:end="405:40">= <expr pos:start="405:27" pos:end="405:40"><call pos:start="405:27" pos:end="405:40"><name pos:start="405:27" pos:end="405:38">tcg_temp_new</name><argument_list pos:start="405:39" pos:end="405:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="409:17" pos:end="409:39"><expr pos:start="409:17" pos:end="409:38"><call pos:start="409:17" pos:end="409:38"><name pos:start="409:17" pos:end="409:30">save_cpu_state</name><argument_list pos:start="409:31" pos:end="409:38">(<argument pos:start="409:32" pos:end="409:34"><expr pos:start="409:32" pos:end="409:34"><name pos:start="409:32" pos:end="409:34">ctx</name></expr></argument>, <argument pos:start="409:37" pos:end="409:37"><expr pos:start="409:37" pos:end="409:37"><literal type="number" pos:start="409:37" pos:end="409:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="411:17" pos:end="411:43"><expr pos:start="411:17" pos:end="411:42"><call pos:start="411:17" pos:end="411:42"><name pos:start="411:17" pos:end="411:29">gen_helper_ei</name><argument_list pos:start="411:30" pos:end="411:42">(<argument pos:start="411:31" pos:end="411:32"><expr pos:start="411:31" pos:end="411:32"><name pos:start="411:31" pos:end="411:32">t0</name></expr></argument>, <argument pos:start="411:35" pos:end="411:41"><expr pos:start="411:35" pos:end="411:41"><name pos:start="411:35" pos:end="411:41">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="413:17" pos:end="413:38"><expr pos:start="413:17" pos:end="413:37"><call pos:start="413:17" pos:end="413:37"><name pos:start="413:17" pos:end="413:29">gen_store_gpr</name><argument_list pos:start="413:30" pos:end="413:37">(<argument pos:start="413:31" pos:end="413:32"><expr pos:start="413:31" pos:end="413:32"><name pos:start="413:31" pos:end="413:32">t0</name></expr></argument>, <argument pos:start="413:35" pos:end="413:36"><expr pos:start="413:35" pos:end="413:36"><name pos:start="413:35" pos:end="413:36">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="415:17" pos:end="415:81">/* Stop translation as we may have switched the execution mode */</comment>

                <expr_stmt pos:start="417:17" pos:end="417:38"><expr pos:start="417:17" pos:end="417:37"><name pos:start="417:17" pos:end="417:27"><name pos:start="417:17" pos:end="417:19">ctx</name><operator pos:start="417:20" pos:end="417:21">-&gt;</operator><name pos:start="417:22" pos:end="417:27">bstate</name></name> <operator pos:start="417:29" pos:end="417:29">=</operator> <name pos:start="417:31" pos:end="417:37">BS_STOP</name></expr>;</expr_stmt>

                <expr_stmt pos:start="419:17" pos:end="419:34"><expr pos:start="419:17" pos:end="419:33"><call pos:start="419:17" pos:end="419:33"><name pos:start="419:17" pos:end="419:29">tcg_temp_free</name><argument_list pos:start="419:30" pos:end="419:33">(<argument pos:start="419:31" pos:end="419:32"><expr pos:start="419:31" pos:end="419:32"><name pos:start="419:31" pos:end="419:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="423:13" pos:end="423:18">break;</break>

        <default pos:start="425:9" pos:end="425:16">default:</default>

            <goto pos:start="427:13" pos:end="427:35">goto <name pos:start="427:18" pos:end="427:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="431:9" pos:end="434:0">break;</break>

<cpp:endif pos:start="433:1" pos:end="433:6">#<cpp:directive pos:start="433:2" pos:end="433:6">endif</cpp:directive></cpp:endif>

    <case pos:start="435:5" pos:end="435:14">case <expr pos:start="435:10" pos:end="435:13"><literal type="number" pos:start="435:10" pos:end="435:13">0x2d</literal></expr>:</case>

        <switch pos:start="437:9" pos:end="473:9">switch <condition pos:start="437:16" pos:end="437:22">(<expr pos:start="437:17" pos:end="437:21"><name pos:start="437:17" pos:end="437:21">minor</name></expr>)</condition> <block pos:start="437:24" pos:end="473:9">{<block_content pos:start="439:9" pos:end="471:35">

        <case pos:start="439:9" pos:end="439:18">case <expr pos:start="439:14" pos:end="439:17"><name pos:start="439:14" pos:end="439:17">SYNC</name></expr>:</case>

            <comment type="block" pos:start="441:13" pos:end="441:21">/* NOP */</comment>

            <break pos:start="443:13" pos:end="443:18">break;</break>

        <case pos:start="445:9" pos:end="445:21">case <expr pos:start="445:14" pos:end="445:20"><name pos:start="445:14" pos:end="445:20">SYSCALL</name></expr>:</case>

            <expr_stmt pos:start="447:13" pos:end="447:50"><expr pos:start="447:13" pos:end="447:49"><call pos:start="447:13" pos:end="447:49"><name pos:start="447:13" pos:end="447:30">generate_exception</name><argument_list pos:start="447:31" pos:end="447:49">(<argument pos:start="447:32" pos:end="447:34"><expr pos:start="447:32" pos:end="447:34"><name pos:start="447:32" pos:end="447:34">ctx</name></expr></argument>, <argument pos:start="447:37" pos:end="447:48"><expr pos:start="447:37" pos:end="447:48"><name pos:start="447:37" pos:end="447:48">EXCP_SYSCALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="449:13" pos:end="449:34"><expr pos:start="449:13" pos:end="449:33"><name pos:start="449:13" pos:end="449:23"><name pos:start="449:13" pos:end="449:15">ctx</name><operator pos:start="449:16" pos:end="449:17">-&gt;</operator><name pos:start="449:18" pos:end="449:23">bstate</name></name> <operator pos:start="449:25" pos:end="449:25">=</operator> <name pos:start="449:27" pos:end="449:33">BS_STOP</name></expr>;</expr_stmt>

            <break pos:start="451:13" pos:end="451:18">break;</break>

        <case pos:start="453:9" pos:end="453:19">case <expr pos:start="453:14" pos:end="453:18"><name pos:start="453:14" pos:end="453:18">SDBBP</name></expr>:</case>

            <expr_stmt pos:start="455:13" pos:end="455:40"><expr pos:start="455:13" pos:end="455:39"><call pos:start="455:13" pos:end="455:39"><name pos:start="455:13" pos:end="455:22">check_insn</name><argument_list pos:start="455:23" pos:end="455:39">(<argument pos:start="455:24" pos:end="455:26"><expr pos:start="455:24" pos:end="455:26"><name pos:start="455:24" pos:end="455:26">ctx</name></expr></argument>, <argument pos:start="455:29" pos:end="455:38"><expr pos:start="455:29" pos:end="455:38"><name pos:start="455:29" pos:end="455:38">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="457:13" pos:end="465:13"><if pos:start="457:13" pos:end="461:13">if <condition pos:start="457:16" pos:end="457:47">(<expr pos:start="457:17" pos:end="457:46"><operator pos:start="457:17" pos:end="457:17">!</operator><operator pos:start="457:18" pos:end="457:18">(</operator><name pos:start="457:19" pos:end="457:29"><name pos:start="457:19" pos:end="457:21">ctx</name><operator pos:start="457:22" pos:end="457:23">-&gt;</operator><name pos:start="457:24" pos:end="457:29">hflags</name></name> <operator pos:start="457:31" pos:end="457:31">&amp;</operator> <name pos:start="457:33" pos:end="457:45">MIPS_HFLAG_DM</name><operator pos:start="457:46" pos:end="457:46">)</operator></expr>)</condition> <block pos:start="457:49" pos:end="461:13">{<block_content pos:start="459:17" pos:end="459:50">

                <expr_stmt pos:start="459:17" pos:end="459:50"><expr pos:start="459:17" pos:end="459:49"><call pos:start="459:17" pos:end="459:49"><name pos:start="459:17" pos:end="459:34">generate_exception</name><argument_list pos:start="459:35" pos:end="459:49">(<argument pos:start="459:36" pos:end="459:38"><expr pos:start="459:36" pos:end="459:38"><name pos:start="459:36" pos:end="459:38">ctx</name></expr></argument>, <argument pos:start="459:41" pos:end="459:48"><expr pos:start="459:41" pos:end="459:48"><name pos:start="459:41" pos:end="459:48">EXCP_DBp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="461:15" pos:end="465:13">else <block pos:start="461:20" pos:end="465:13">{<block_content pos:start="463:17" pos:end="463:50">

                <expr_stmt pos:start="463:17" pos:end="463:50"><expr pos:start="463:17" pos:end="463:49"><call pos:start="463:17" pos:end="463:49"><name pos:start="463:17" pos:end="463:34">generate_exception</name><argument_list pos:start="463:35" pos:end="463:49">(<argument pos:start="463:36" pos:end="463:38"><expr pos:start="463:36" pos:end="463:38"><name pos:start="463:36" pos:end="463:38">ctx</name></expr></argument>, <argument pos:start="463:41" pos:end="463:48"><expr pos:start="463:41" pos:end="463:48"><name pos:start="463:41" pos:end="463:48">EXCP_DBp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="467:13" pos:end="467:18">break;</break>

        <default pos:start="469:9" pos:end="469:16">default:</default>

            <goto pos:start="471:13" pos:end="471:35">goto <name pos:start="471:18" pos:end="471:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="475:9" pos:end="475:14">break;</break>

    <case pos:start="477:5" pos:end="477:14">case <expr pos:start="477:10" pos:end="477:13"><literal type="number" pos:start="477:10" pos:end="477:13">0x35</literal></expr>:</case>

        <switch pos:start="479:9" pos:end="509:9">switch <condition pos:start="479:16" pos:end="479:26">(<expr pos:start="479:17" pos:end="479:25"><name pos:start="479:17" pos:end="479:21">minor</name> <operator pos:start="479:23" pos:end="479:23">&amp;</operator> <literal type="number" pos:start="479:25" pos:end="479:25">3</literal></expr>)</condition> <block pos:start="479:28" pos:end="509:9">{<block_content pos:start="481:9" pos:end="507:35">

        <case pos:start="481:9" pos:end="481:20">case <expr pos:start="481:14" pos:end="481:19"><name pos:start="481:14" pos:end="481:19">MFHI32</name></expr>:</case>

            <expr_stmt pos:start="483:13" pos:end="483:52"><expr pos:start="483:13" pos:end="483:51"><call pos:start="483:13" pos:end="483:51"><name pos:start="483:13" pos:end="483:20">gen_HILO</name><argument_list pos:start="483:21" pos:end="483:51">(<argument pos:start="483:22" pos:end="483:24"><expr pos:start="483:22" pos:end="483:24"><name pos:start="483:22" pos:end="483:24">ctx</name></expr></argument>, <argument pos:start="483:27" pos:end="483:34"><expr pos:start="483:27" pos:end="483:34"><name pos:start="483:27" pos:end="483:34">OPC_MFHI</name></expr></argument>, <argument pos:start="483:37" pos:end="483:46"><expr pos:start="483:37" pos:end="483:46"><name pos:start="483:37" pos:end="483:41">minor</name> <operator pos:start="483:43" pos:end="483:44">&gt;&gt;</operator> <literal type="number" pos:start="483:46" pos:end="483:46">2</literal></expr></argument>, <argument pos:start="483:49" pos:end="483:50"><expr pos:start="483:49" pos:end="483:50"><name pos:start="483:49" pos:end="483:50">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="485:13" pos:end="485:18">break;</break>

        <case pos:start="487:9" pos:end="487:20">case <expr pos:start="487:14" pos:end="487:19"><name pos:start="487:14" pos:end="487:19">MFLO32</name></expr>:</case>

            <expr_stmt pos:start="489:13" pos:end="489:52"><expr pos:start="489:13" pos:end="489:51"><call pos:start="489:13" pos:end="489:51"><name pos:start="489:13" pos:end="489:20">gen_HILO</name><argument_list pos:start="489:21" pos:end="489:51">(<argument pos:start="489:22" pos:end="489:24"><expr pos:start="489:22" pos:end="489:24"><name pos:start="489:22" pos:end="489:24">ctx</name></expr></argument>, <argument pos:start="489:27" pos:end="489:34"><expr pos:start="489:27" pos:end="489:34"><name pos:start="489:27" pos:end="489:34">OPC_MFLO</name></expr></argument>, <argument pos:start="489:37" pos:end="489:46"><expr pos:start="489:37" pos:end="489:46"><name pos:start="489:37" pos:end="489:41">minor</name> <operator pos:start="489:43" pos:end="489:44">&gt;&gt;</operator> <literal type="number" pos:start="489:46" pos:end="489:46">2</literal></expr></argument>, <argument pos:start="489:49" pos:end="489:50"><expr pos:start="489:49" pos:end="489:50"><name pos:start="489:49" pos:end="489:50">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="491:13" pos:end="491:18">break;</break>

        <case pos:start="493:9" pos:end="493:20">case <expr pos:start="493:14" pos:end="493:19"><name pos:start="493:14" pos:end="493:19">MTHI32</name></expr>:</case>

            <expr_stmt pos:start="495:13" pos:end="495:52"><expr pos:start="495:13" pos:end="495:51"><call pos:start="495:13" pos:end="495:51"><name pos:start="495:13" pos:end="495:20">gen_HILO</name><argument_list pos:start="495:21" pos:end="495:51">(<argument pos:start="495:22" pos:end="495:24"><expr pos:start="495:22" pos:end="495:24"><name pos:start="495:22" pos:end="495:24">ctx</name></expr></argument>, <argument pos:start="495:27" pos:end="495:34"><expr pos:start="495:27" pos:end="495:34"><name pos:start="495:27" pos:end="495:34">OPC_MTHI</name></expr></argument>, <argument pos:start="495:37" pos:end="495:46"><expr pos:start="495:37" pos:end="495:46"><name pos:start="495:37" pos:end="495:41">minor</name> <operator pos:start="495:43" pos:end="495:44">&gt;&gt;</operator> <literal type="number" pos:start="495:46" pos:end="495:46">2</literal></expr></argument>, <argument pos:start="495:49" pos:end="495:50"><expr pos:start="495:49" pos:end="495:50"><name pos:start="495:49" pos:end="495:50">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="497:13" pos:end="497:18">break;</break>

        <case pos:start="499:9" pos:end="499:20">case <expr pos:start="499:14" pos:end="499:19"><name pos:start="499:14" pos:end="499:19">MTLO32</name></expr>:</case>

            <expr_stmt pos:start="501:13" pos:end="501:52"><expr pos:start="501:13" pos:end="501:51"><call pos:start="501:13" pos:end="501:51"><name pos:start="501:13" pos:end="501:20">gen_HILO</name><argument_list pos:start="501:21" pos:end="501:51">(<argument pos:start="501:22" pos:end="501:24"><expr pos:start="501:22" pos:end="501:24"><name pos:start="501:22" pos:end="501:24">ctx</name></expr></argument>, <argument pos:start="501:27" pos:end="501:34"><expr pos:start="501:27" pos:end="501:34"><name pos:start="501:27" pos:end="501:34">OPC_MTLO</name></expr></argument>, <argument pos:start="501:37" pos:end="501:46"><expr pos:start="501:37" pos:end="501:46"><name pos:start="501:37" pos:end="501:41">minor</name> <operator pos:start="501:43" pos:end="501:44">&gt;&gt;</operator> <literal type="number" pos:start="501:46" pos:end="501:46">2</literal></expr></argument>, <argument pos:start="501:49" pos:end="501:50"><expr pos:start="501:49" pos:end="501:50"><name pos:start="501:49" pos:end="501:50">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="503:13" pos:end="503:18">break;</break>

        <default pos:start="505:9" pos:end="505:16">default:</default>

            <goto pos:start="507:13" pos:end="507:35">goto <name pos:start="507:18" pos:end="507:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="511:9" pos:end="511:14">break;</break>

    <default pos:start="513:5" pos:end="513:12">default:</default>

    <label pos:start="515:5" pos:end="515:22"><name pos:start="515:5" pos:end="515:21">pool32axf_invalid</name>:</label>

        <expr_stmt pos:start="517:9" pos:end="517:32"><expr pos:start="517:9" pos:end="517:31"><call pos:start="517:9" pos:end="517:31"><name pos:start="517:9" pos:end="517:18">MIPS_INVAL</name><argument_list pos:start="517:19" pos:end="517:31">(<argument pos:start="517:20" pos:end="517:30"><expr pos:start="517:20" pos:end="517:30"><literal type="string" pos:start="517:20" pos:end="517:30">"pool32axf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="519:9" pos:end="519:41"><expr pos:start="519:9" pos:end="519:40"><call pos:start="519:9" pos:end="519:40"><name pos:start="519:9" pos:end="519:26">generate_exception</name><argument_list pos:start="519:27" pos:end="519:40">(<argument pos:start="519:28" pos:end="519:30"><expr pos:start="519:28" pos:end="519:30"><name pos:start="519:28" pos:end="519:30">ctx</name></expr></argument>, <argument pos:start="519:33" pos:end="519:39"><expr pos:start="519:33" pos:end="519:39"><name pos:start="519:33" pos:end="519:39">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="521:9" pos:end="521:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
