<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24004.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">dca_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:62">(<parameter pos:start="1:29" pos:end="1:50"><decl pos:start="1:29" pos:end="1:50"><type pos:start="1:29" pos:end="1:50"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type> <name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:47"><decl pos:start="5:29" pos:end="5:47"><type pos:start="5:29" pos:end="5:47"><specifier pos:start="5:29" pos:end="5:33">const</specifier> <name pos:start="5:35" pos:end="5:41">uint8_t</name> <modifier pos:start="5:43" pos:end="5:43">*</modifier></type> <name pos:start="5:45" pos:end="5:47">buf</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:61"><decl pos:start="5:50" pos:end="5:61"><type pos:start="5:50" pos:end="5:61"><name pos:start="5:50" pos:end="5:52">int</name></type> <name pos:start="5:54" pos:end="5:61">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="101:1">{<block_content pos:start="11:5" pos:end="99:20">



    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>, <decl pos:start="11:15" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:15">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">int16_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:20">samples</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:14">DCAContext</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:17">s</name> <init pos:start="15:19" pos:end="15:36">= <expr pos:start="15:21" pos:end="15:36"><name pos:start="15:21" pos:end="15:36"><name pos:start="15:21" pos:end="15:25">avctx</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">channels</name></decl>;</decl_stmt>





    <expr_stmt pos:start="23:5" pos:end="23:97"><expr pos:start="23:5" pos:end="23:96"><name pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:22">dca_buffer_size</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <call pos:start="23:26" pos:end="23:96"><name pos:start="23:26" pos:end="23:46">dca_convert_bitstream</name><argument_list pos:start="23:47" pos:end="23:96">(<argument pos:start="23:48" pos:end="23:50"><expr pos:start="23:48" pos:end="23:50"><name pos:start="23:48" pos:end="23:50">buf</name></expr></argument>, <argument pos:start="23:53" pos:end="23:60"><expr pos:start="23:53" pos:end="23:60"><name pos:start="23:53" pos:end="23:60">buf_size</name></expr></argument>, <argument pos:start="23:63" pos:end="23:75"><expr pos:start="23:63" pos:end="23:75"><name pos:start="23:63" pos:end="23:75"><name pos:start="23:63" pos:end="23:63">s</name><operator pos:start="23:64" pos:end="23:65">-&gt;</operator><name pos:start="23:66" pos:end="23:75">dca_buffer</name></name></expr></argument>, <argument pos:start="23:78" pos:end="23:95"><expr pos:start="23:78" pos:end="23:95"><name pos:start="23:78" pos:end="23:95">DCA_MAX_FRAME_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:33">(<expr pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:26">dca_buffer_size</name></name> <operator pos:start="25:28" pos:end="25:29">==</operator> <operator pos:start="25:31" pos:end="25:31">-</operator><literal type="number" pos:start="25:32" pos:end="25:32">1</literal></expr>)</condition> <block pos:start="25:35" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:63"><expr pos:start="27:9" pos:end="27:62"><call pos:start="27:9" pos:end="27:62"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:62">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20">avctx</name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:37" pos:end="27:61"><expr pos:start="27:37" pos:end="27:61"><literal type="string" pos:start="27:37" pos:end="27:61">"Not a valid DCA frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:65"><expr pos:start="35:5" pos:end="35:64"><call pos:start="35:5" pos:end="35:64"><name pos:start="35:5" pos:end="35:17">init_get_bits</name><argument_list pos:start="35:18" pos:end="35:64">(<argument pos:start="35:19" pos:end="35:24"><expr pos:start="35:19" pos:end="35:24"><operator pos:start="35:19" pos:end="35:19">&amp;</operator><name pos:start="35:20" pos:end="35:24"><name pos:start="35:20" pos:end="35:20">s</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:24">gb</name></name></expr></argument>, <argument pos:start="35:27" pos:end="35:39"><expr pos:start="35:27" pos:end="35:39"><name pos:start="35:27" pos:end="35:39"><name pos:start="35:27" pos:end="35:27">s</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:39">dca_buffer</name></name></expr></argument>, <argument pos:start="35:42" pos:end="35:63"><expr pos:start="35:42" pos:end="35:63"><name pos:start="35:42" pos:end="35:59"><name pos:start="35:42" pos:end="35:42">s</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:59">dca_buffer_size</name></name> <operator pos:start="35:61" pos:end="35:61">*</operator> <literal type="number" pos:start="35:63" pos:end="35:63">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:38">(<expr pos:start="37:9" pos:end="37:37"><call pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:30">dca_parse_frame_header</name><argument_list pos:start="37:31" pos:end="37:33">(<argument pos:start="37:32" pos:end="37:32"><expr pos:start="37:32" pos:end="37:32"><name pos:start="37:32" pos:end="37:32">s</name></expr></argument>)</argument_list></call> <operator pos:start="37:35" pos:end="37:35">&lt;</operator> <literal type="number" pos:start="37:37" pos:end="37:37">0</literal></expr>)</condition> <block pos:start="37:40" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:24">

        <comment type="line" pos:start="39:9" pos:end="39:64">//seems like the frame is corrupt, try with the next one</comment>

        <expr_stmt pos:start="41:9" pos:end="41:21"><expr pos:start="41:9" pos:end="41:20"><operator pos:start="41:9" pos:end="41:9">*</operator><name pos:start="41:10" pos:end="41:18">data_size</name><operator pos:start="41:19" pos:end="41:19">=</operator><literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:24">return <expr pos:start="43:16" pos:end="43:23"><name pos:start="43:16" pos:end="43:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="47:5" pos:end="47:41">//set AVCodec values with parsed data</comment>

    <expr_stmt pos:start="49:5" pos:end="49:40"><expr pos:start="49:5" pos:end="49:39"><name pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:9">avctx</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:22">sample_rate</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <name pos:start="49:26" pos:end="49:39"><name pos:start="49:26" pos:end="49:26">s</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:39">sample_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:34"><expr pos:start="51:5" pos:end="51:33"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:9">avctx</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:19">bit_rate</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:33"><name pos:start="51:23" pos:end="51:23">s</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:33">bit_rate</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:43"><expr pos:start="55:5" pos:end="55:42"><name pos:start="55:5" pos:end="55:12">channels</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <name pos:start="55:16" pos:end="55:31"><name pos:start="55:16" pos:end="55:16">s</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:31">prim_channels</name></name> <operator pos:start="55:33" pos:end="55:33">+</operator> <operator pos:start="55:35" pos:end="55:35">!</operator><operator pos:start="55:36" pos:end="55:36">!</operator><name pos:start="55:37" pos:end="55:42"><name pos:start="55:37" pos:end="55:37">s</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:42">lfe</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if<condition pos:start="57:7" pos:end="57:60">(<expr pos:start="57:8" pos:end="57:59"><name pos:start="57:8" pos:end="57:30"><name pos:start="57:8" pos:end="57:12">avctx</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:30">request_channels</name></name> <operator pos:start="57:32" pos:end="57:33">==</operator> <literal type="number" pos:start="57:35" pos:end="57:35">2</literal> <operator pos:start="57:37" pos:end="57:38">&amp;&amp;</operator> <name pos:start="57:40" pos:end="57:55"><name pos:start="57:40" pos:end="57:40">s</name><operator pos:start="57:41" pos:end="57:42">-&gt;</operator><name pos:start="57:43" pos:end="57:55">prim_channels</name></name> <operator pos:start="57:57" pos:end="57:57">&gt;</operator> <literal type="number" pos:start="57:59" pos:end="57:59">2</literal></expr>)</condition> <block pos:start="57:62" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:31">

        <expr_stmt pos:start="59:9" pos:end="59:21"><expr pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:16">channels</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <literal type="number" pos:start="59:20" pos:end="59:20">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:17"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:17">output</name></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <name pos:start="61:21" pos:end="61:30">DCA_STEREO</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:31"><expr pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:9">avctx</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:19">channels</name></name> <operator pos:start="67:21" pos:end="67:21">=</operator> <name pos:start="67:23" pos:end="67:30">channels</name></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="71:18"><if pos:start="69:5" pos:end="71:18">if<condition pos:start="69:7" pos:end="69:78">(<expr pos:start="69:8" pos:end="69:77"><operator pos:start="69:8" pos:end="69:8">*</operator><name pos:start="69:9" pos:end="69:17">data_size</name> <operator pos:start="69:19" pos:end="69:19">&lt;</operator> <operator pos:start="69:21" pos:end="69:21">(</operator><name pos:start="69:22" pos:end="69:37"><name pos:start="69:22" pos:end="69:22">s</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:37">sample_blocks</name></name> <operator pos:start="69:39" pos:end="69:39">/</operator> <literal type="number" pos:start="69:41" pos:end="69:41">8</literal><operator pos:start="69:42" pos:end="69:42">)</operator> <operator pos:start="69:44" pos:end="69:44">*</operator> <literal type="number" pos:start="69:46" pos:end="69:48">256</literal> <operator pos:start="69:50" pos:end="69:50">*</operator> <sizeof pos:start="69:52" pos:end="69:66">sizeof<argument_list pos:start="69:58" pos:end="69:66">(<argument pos:start="69:59" pos:end="69:65"><expr pos:start="69:59" pos:end="69:65"><name pos:start="69:59" pos:end="69:65">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="69:68" pos:end="69:68">*</operator> <name pos:start="69:70" pos:end="69:77">channels</name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:18"><block_content pos:start="71:9" pos:end="71:18">

        <return pos:start="71:9" pos:end="71:18">return <expr pos:start="71:16" pos:end="71:17"><operator pos:start="71:16" pos:end="71:16">-</operator><literal type="number" pos:start="71:17" pos:end="71:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:19"><expr pos:start="73:5" pos:end="73:18"><operator pos:start="73:5" pos:end="73:5">*</operator><name pos:start="73:6" pos:end="73:14">data_size</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">0</literal></expr>;</expr_stmt>

    <for pos:start="75:5" pos:end="95:5">for <control pos:start="75:9" pos:end="75:48">(<init pos:start="75:10" pos:end="75:15"><expr pos:start="75:10" pos:end="75:14"><name pos:start="75:10" pos:end="75:10">i</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>;</init> <condition pos:start="75:17" pos:end="75:43"><expr pos:start="75:17" pos:end="75:42"><name pos:start="75:17" pos:end="75:17">i</name> <operator pos:start="75:19" pos:end="75:19">&lt;</operator> <operator pos:start="75:21" pos:end="75:21">(</operator><name pos:start="75:22" pos:end="75:37"><name pos:start="75:22" pos:end="75:22">s</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:37">sample_blocks</name></name> <operator pos:start="75:39" pos:end="75:39">/</operator> <literal type="number" pos:start="75:41" pos:end="75:41">8</literal><operator pos:start="75:42" pos:end="75:42">)</operator></expr>;</condition> <incr pos:start="75:45" pos:end="75:47"><expr pos:start="75:45" pos:end="75:47"><name pos:start="75:45" pos:end="75:45">i</name><operator pos:start="75:46" pos:end="75:47">++</operator></expr></incr>)</control> <block pos:start="75:50" pos:end="95:5">{<block_content pos:start="77:9" pos:end="93:55">

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><call pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:24">dca_decode_block</name><argument_list pos:start="77:25" pos:end="77:27">(<argument pos:start="77:26" pos:end="77:26"><expr pos:start="77:26" pos:end="77:26"><name pos:start="77:26" pos:end="77:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:71"><expr pos:start="79:9" pos:end="79:70"><call pos:start="79:9" pos:end="79:70"><name pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:14">dsp</name><operator pos:start="79:15" pos:end="79:15">.</operator><name pos:start="79:16" pos:end="79:29">float_to_int16</name></name><argument_list pos:start="79:30" pos:end="79:70">(<argument pos:start="79:31" pos:end="79:41"><expr pos:start="79:31" pos:end="79:41"><name pos:start="79:31" pos:end="79:41"><name pos:start="79:31" pos:end="79:31">s</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:41">tsamples</name></name></expr></argument>, <argument pos:start="79:44" pos:end="79:53"><expr pos:start="79:44" pos:end="79:53"><name pos:start="79:44" pos:end="79:53"><name pos:start="79:44" pos:end="79:44">s</name><operator pos:start="79:45" pos:end="79:46">-&gt;</operator><name pos:start="79:47" pos:end="79:53">samples</name></name></expr></argument>, <argument pos:start="79:56" pos:end="79:69"><expr pos:start="79:56" pos:end="79:69"><literal type="number" pos:start="79:56" pos:end="79:58">256</literal> <operator pos:start="79:60" pos:end="79:60">*</operator> <name pos:start="79:62" pos:end="79:69">channels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="81:9" pos:end="81:32">/* interleave samples */</comment>

        <for pos:start="83:9" pos:end="91:9">for <control pos:start="83:13" pos:end="83:33">(<init pos:start="83:14" pos:end="83:19"><expr pos:start="83:14" pos:end="83:18"><name pos:start="83:14" pos:end="83:14">j</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>;</init> <condition pos:start="83:21" pos:end="83:28"><expr pos:start="83:21" pos:end="83:27"><name pos:start="83:21" pos:end="83:21">j</name> <operator pos:start="83:23" pos:end="83:23">&lt;</operator> <literal type="number" pos:start="83:25" pos:end="83:27">256</literal></expr>;</condition> <incr pos:start="83:30" pos:end="83:32"><expr pos:start="83:30" pos:end="83:32"><name pos:start="83:30" pos:end="83:30">j</name><operator pos:start="83:31" pos:end="83:32">++</operator></expr></incr>)</control> <block pos:start="83:35" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:32">

            <for pos:start="85:13" pos:end="87:54">for <control pos:start="85:17" pos:end="85:42">(<init pos:start="85:18" pos:end="85:23"><expr pos:start="85:18" pos:end="85:22"><name pos:start="85:18" pos:end="85:18">k</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <literal type="number" pos:start="85:22" pos:end="85:22">0</literal></expr>;</init> <condition pos:start="85:25" pos:end="85:37"><expr pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:25">k</name> <operator pos:start="85:27" pos:end="85:27">&lt;</operator> <name pos:start="85:29" pos:end="85:36">channels</name></expr>;</condition> <incr pos:start="85:39" pos:end="85:41"><expr pos:start="85:39" pos:end="85:41"><name pos:start="85:39" pos:end="85:39">k</name><operator pos:start="85:40" pos:end="85:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="87:17" pos:end="87:54"><block_content pos:start="87:17" pos:end="87:54">

                <expr_stmt pos:start="87:17" pos:end="87:54"><expr pos:start="87:17" pos:end="87:53"><name pos:start="87:17" pos:end="87:26"><name pos:start="87:17" pos:end="87:23">samples</name><index pos:start="87:24" pos:end="87:26">[<expr pos:start="87:25" pos:end="87:25"><name pos:start="87:25" pos:end="87:25">k</name></expr>]</index></name> <operator pos:start="87:28" pos:end="87:28">=</operator> <name pos:start="87:30" pos:end="87:53"><name pos:start="87:30" pos:end="87:30">s</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:40">tsamples</name><index pos:start="87:41" pos:end="87:53">[<expr pos:start="87:42" pos:end="87:52"><name pos:start="87:42" pos:end="87:42">j</name> <operator pos:start="87:44" pos:end="87:44">+</operator> <name pos:start="87:46" pos:end="87:46">k</name> <operator pos:start="87:48" pos:end="87:48">*</operator> <literal type="number" pos:start="87:50" pos:end="87:52">256</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="89:13" pos:end="89:32"><expr pos:start="89:13" pos:end="89:31"><name pos:start="89:13" pos:end="89:19">samples</name> <operator pos:start="89:21" pos:end="89:22">+=</operator> <name pos:start="89:24" pos:end="89:31">channels</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="93:9" pos:end="93:55"><expr pos:start="93:9" pos:end="93:54"><operator pos:start="93:9" pos:end="93:9">*</operator><name pos:start="93:10" pos:end="93:18">data_size</name> <operator pos:start="93:20" pos:end="93:21">+=</operator> <literal type="number" pos:start="93:23" pos:end="93:25">256</literal> <operator pos:start="93:27" pos:end="93:27">*</operator> <sizeof pos:start="93:29" pos:end="93:43">sizeof<argument_list pos:start="93:35" pos:end="93:43">(<argument pos:start="93:36" pos:end="93:42"><expr pos:start="93:36" pos:end="93:42"><name pos:start="93:36" pos:end="93:42">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="93:45" pos:end="93:45">*</operator> <name pos:start="93:47" pos:end="93:54">channels</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="99:5" pos:end="99:20">return <expr pos:start="99:12" pos:end="99:19"><name pos:start="99:12" pos:end="99:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
