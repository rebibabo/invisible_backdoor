<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12633.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">gint</name></type> <name pos:start="1:13" pos:end="1:42">ppc_cpu_compare_class_pvr_mask</name><parameter_list pos:start="1:43" pos:end="1:76">(<parameter pos:start="1:44" pos:end="1:58"><decl pos:start="1:44" pos:end="1:58"><type pos:start="1:44" pos:end="1:58"><name pos:start="1:44" pos:end="1:56">gconstpointer</name></type> <name pos:start="1:58" pos:end="1:58">a</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:75"><decl pos:start="1:61" pos:end="1:75"><type pos:start="1:61" pos:end="1:75"><name pos:start="1:61" pos:end="1:73">gconstpointer</name></type> <name pos:start="1:75" pos:end="1:75">b</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:15">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">ObjectClass</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">oc</name> <init pos:start="5:21" pos:end="5:38">= <expr pos:start="5:23" pos:end="5:38"><operator pos:start="5:23" pos:end="5:23">(</operator><name pos:start="5:24" pos:end="5:34">ObjectClass</name> <operator pos:start="5:36" pos:end="5:36">*</operator><operator pos:start="5:37" pos:end="5:37">)</operator><name pos:start="5:38" pos:end="5:38">a</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">pvr</name> <init pos:start="7:18" pos:end="7:33">= <expr pos:start="7:20" pos:end="7:33"><operator pos:start="7:20" pos:end="7:20">*</operator><operator pos:start="7:21" pos:end="7:21">(</operator><name pos:start="7:22" pos:end="7:29">uint32_t</name> <operator pos:start="7:31" pos:end="7:31">*</operator><operator pos:start="7:32" pos:end="7:32">)</operator><name pos:start="7:33" pos:end="7:33">b</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:47"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">PowerPCCPUClass</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">pcc</name> <init pos:start="9:26" pos:end="9:47">= <expr pos:start="9:28" pos:end="9:47"><operator pos:start="9:28" pos:end="9:28">(</operator><name pos:start="9:29" pos:end="9:43">PowerPCCPUClass</name> <operator pos:start="9:45" pos:end="9:45">*</operator><operator pos:start="9:46" pos:end="9:46">)</operator><name pos:start="9:47" pos:end="9:47">a</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">gint</name></type> <name pos:start="11:10" pos:end="11:12">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:57">/* -cpu host does a PVR lookup during construction */</comment>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="19:53">(<expr pos:start="17:9" pos:end="19:52"><call pos:start="17:9" pos:end="19:52"><name pos:start="17:9" pos:end="17:16">unlikely</name><argument_list pos:start="17:17" pos:end="19:52">(<argument pos:start="17:18" pos:end="19:51"><expr pos:start="17:18" pos:end="19:51"><call pos:start="17:18" pos:end="19:46"><name pos:start="17:18" pos:end="17:23">strcmp</name><argument_list pos:start="17:24" pos:end="19:46">(<argument pos:start="17:25" pos:end="17:49"><expr pos:start="17:25" pos:end="17:49"><call pos:start="17:25" pos:end="17:49"><name pos:start="17:25" pos:end="17:45">object_class_get_name</name><argument_list pos:start="17:46" pos:end="17:49">(<argument pos:start="17:47" pos:end="17:48"><expr pos:start="17:47" pos:end="17:48"><name pos:start="17:47" pos:end="17:48">oc</name></expr></argument>)</argument_list></call></expr></argument>,

                        <argument pos:start="19:25" pos:end="19:45"><expr pos:start="19:25" pos:end="19:45"><name pos:start="19:25" pos:end="19:45">TYPE_HOST_POWERPC_CPU</name></expr></argument>)</argument_list></call> <operator pos:start="19:48" pos:end="19:49">==</operator> <literal type="number" pos:start="19:51" pos:end="19:51">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:55" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:31">(<expr pos:start="27:9" pos:end="27:30"><operator pos:start="27:9" pos:end="27:9">!</operator><call pos:start="27:10" pos:end="27:30"><name pos:start="27:10" pos:end="27:25">ppc_cpu_is_valid</name><argument_list pos:start="27:26" pos:end="27:30">(<argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:29">pcc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:33" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:75"><expr pos:start="35:5" pos:end="35:74"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <operator pos:start="35:11" pos:end="35:11">(</operator><ternary pos:start="35:12" pos:end="35:73"><condition pos:start="35:12" pos:end="35:66"><expr pos:start="35:12" pos:end="35:64"><operator pos:start="35:12" pos:end="35:12">(</operator><operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:21"><name pos:start="35:14" pos:end="35:16">pcc</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:21">pvr</name></name> <operator pos:start="35:23" pos:end="35:23">&amp;</operator> <name pos:start="35:25" pos:end="35:37"><name pos:start="35:25" pos:end="35:27">pcc</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:37">pvr_mask</name></name><operator pos:start="35:38" pos:end="35:38">)</operator> <operator pos:start="35:40" pos:end="35:41">==</operator> <operator pos:start="35:43" pos:end="35:43">(</operator><name pos:start="35:44" pos:end="35:46">pvr</name> <operator pos:start="35:48" pos:end="35:48">&amp;</operator> <name pos:start="35:50" pos:end="35:62"><name pos:start="35:50" pos:end="35:52">pcc</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:62">pvr_mask</name></name><operator pos:start="35:63" pos:end="35:63">)</operator><operator pos:start="35:64" pos:end="35:64">)</operator></expr> ?</condition><then pos:start="35:68" pos:end="35:68"> <expr pos:start="35:68" pos:end="35:68"><literal type="number" pos:start="35:68" pos:end="35:68">0</literal></expr> </then><else pos:start="35:70" pos:end="35:73">: <expr pos:start="35:72" pos:end="35:73"><operator pos:start="35:72" pos:end="35:72">-</operator><literal type="number" pos:start="35:73" pos:end="35:73">1</literal></expr></else></ternary><operator pos:start="35:74" pos:end="35:74">)</operator></expr>;</expr_stmt>



    <return pos:start="39:5" pos:end="39:15">return <expr pos:start="39:12" pos:end="39:14"><name pos:start="39:12" pos:end="39:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
