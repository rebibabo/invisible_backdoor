<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8427.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:8">main</name> <parameter_list pos:start="1:10" pos:end="1:33">(<parameter pos:start="1:11" pos:end="1:18"><decl pos:start="1:11" pos:end="1:18"><type pos:start="1:11" pos:end="1:18"><name pos:start="1:11" pos:end="1:13">int</name></type> <name pos:start="1:15" pos:end="1:18">argc</name></decl></parameter>, <parameter pos:start="1:21" pos:end="1:32"><decl pos:start="1:21" pos:end="1:32"><type pos:start="1:21" pos:end="1:30"><name pos:start="1:21" pos:end="1:24">char</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:32"><name pos:start="1:27" pos:end="1:30">argv</name><index pos:start="1:31" pos:end="1:32">[]</index></name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:3" pos:end="47:11">

  <decl_stmt pos:start="5:3" pos:end="5:23"><decl pos:start="5:3" pos:end="5:22"><type pos:start="5:3" pos:end="5:8"><name pos:start="5:3" pos:end="5:6">char</name> <modifier pos:start="5:8" pos:end="5:8">*</modifier></type><name pos:start="5:9" pos:end="5:12">fnam</name> <init pos:start="5:14" pos:end="5:22">= <expr pos:start="5:16" pos:end="5:22"><name pos:start="5:16" pos:end="5:22"><name pos:start="5:16" pos:end="5:19">argv</name><index pos:start="5:20" pos:end="5:22">[<expr pos:start="5:21" pos:end="5:21"><literal type="number" pos:start="5:21" pos:end="5:21">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="7:3" pos:end="7:10"><decl pos:start="7:3" pos:end="7:9"><type pos:start="7:3" pos:end="7:8"><name pos:start="7:3" pos:end="7:6">FILE</name> <modifier pos:start="7:8" pos:end="7:8">*</modifier></type><name pos:start="7:9" pos:end="7:9">f</name></decl>;</decl_stmt>

  <if_stmt pos:start="9:3" pos:end="23:5"><if pos:start="9:3" pos:end="23:5">if <condition pos:start="9:6" pos:end="9:24">(<expr pos:start="9:7" pos:end="9:23"><name pos:start="9:7" pos:end="9:16"><name pos:start="9:7" pos:end="9:10">argv</name><index pos:start="9:11" pos:end="9:13">[<expr pos:start="9:12" pos:end="9:12"><literal type="number" pos:start="9:12" pos:end="9:12">0</literal></expr>]</index><index pos:start="9:14" pos:end="9:16">[<expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr>]</index></name> <operator pos:start="9:18" pos:end="9:19">!=</operator> <literal type="char" pos:start="9:21" pos:end="9:23">'/'</literal></expr>)</condition>

    <block pos:start="11:5" pos:end="23:5">{<block_content pos:start="13:7" pos:end="21:29">

      <expr_stmt pos:start="13:7" pos:end="13:43"><expr pos:start="13:7" pos:end="13:42"><name pos:start="13:7" pos:end="13:10">fnam</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:42"><name pos:start="13:14" pos:end="13:19">malloc</name> <argument_list pos:start="13:21" pos:end="13:42">(<argument pos:start="13:22" pos:end="13:41"><expr pos:start="13:22" pos:end="13:41"><call pos:start="13:22" pos:end="13:37"><name pos:start="13:22" pos:end="13:27">strlen</name> <argument_list pos:start="13:29" pos:end="13:37">(<argument pos:start="13:30" pos:end="13:36"><expr pos:start="13:30" pos:end="13:36"><name pos:start="13:30" pos:end="13:36"><name pos:start="13:30" pos:end="13:33">argv</name><index pos:start="13:34" pos:end="13:36">[<expr pos:start="13:35" pos:end="13:35"><literal type="number" pos:start="13:35" pos:end="13:35">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="13:39" pos:end="13:39">+</operator> <literal type="number" pos:start="13:41" pos:end="13:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <if_stmt pos:start="15:7" pos:end="17:17"><if pos:start="15:7" pos:end="17:17">if <condition pos:start="15:10" pos:end="15:23">(<expr pos:start="15:11" pos:end="15:22"><name pos:start="15:11" pos:end="15:14">fnam</name> <operator pos:start="15:16" pos:end="15:17">==</operator> <name pos:start="15:19" pos:end="15:22">NULL</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

	<expr_stmt pos:start="17:9" pos:end="17:17"><expr pos:start="17:9" pos:end="17:16"><call pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:13">abort</name> <argument_list pos:start="17:15" pos:end="17:16">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

      <expr_stmt pos:start="19:7" pos:end="19:25"><expr pos:start="19:7" pos:end="19:24"><call pos:start="19:7" pos:end="19:24"><name pos:start="19:7" pos:end="19:12">strcpy</name> <argument_list pos:start="19:14" pos:end="19:24">(<argument pos:start="19:15" pos:end="19:18"><expr pos:start="19:15" pos:end="19:18"><name pos:start="19:15" pos:end="19:18">fnam</name></expr></argument>, <argument pos:start="19:21" pos:end="19:23"><expr pos:start="19:21" pos:end="19:23"><literal type="string" pos:start="19:21" pos:end="19:23">"/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="21:7" pos:end="21:29"><expr pos:start="21:7" pos:end="21:28"><call pos:start="21:7" pos:end="21:28"><name pos:start="21:7" pos:end="21:12">strcat</name> <argument_list pos:start="21:14" pos:end="21:28">(<argument pos:start="21:15" pos:end="21:18"><expr pos:start="21:15" pos:end="21:18"><name pos:start="21:15" pos:end="21:18">fnam</name></expr></argument>, <argument pos:start="21:21" pos:end="21:27"><expr pos:start="21:21" pos:end="21:27"><name pos:start="21:21" pos:end="21:27"><name pos:start="21:21" pos:end="21:24">argv</name><index pos:start="21:25" pos:end="21:27">[<expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



  <expr_stmt pos:start="27:3" pos:end="27:25"><expr pos:start="27:3" pos:end="27:24"><name pos:start="27:3" pos:end="27:3">f</name> <operator pos:start="27:5" pos:end="27:5">=</operator> <call pos:start="27:7" pos:end="27:24"><name pos:start="27:7" pos:end="27:11">fopen</name> <argument_list pos:start="27:13" pos:end="27:24">(<argument pos:start="27:14" pos:end="27:17"><expr pos:start="27:14" pos:end="27:17"><name pos:start="27:14" pos:end="27:17">fnam</name></expr></argument>, <argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><literal type="string" pos:start="27:20" pos:end="27:23">"rb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <if_stmt pos:start="29:3" pos:end="31:13"><if pos:start="29:3" pos:end="31:13">if <condition pos:start="29:6" pos:end="29:16">(<expr pos:start="29:7" pos:end="29:15"><name pos:start="29:7" pos:end="29:7">f</name> <operator pos:start="29:9" pos:end="29:10">==</operator> <name pos:start="29:12" pos:end="29:15">NULL</name></expr>)</condition><block type="pseudo" pos:start="31:5" pos:end="31:13"><block_content pos:start="31:5" pos:end="31:13">

    <expr_stmt pos:start="31:5" pos:end="31:13"><expr pos:start="31:5" pos:end="31:12"><call pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:9">abort</name> <argument_list pos:start="31:11" pos:end="31:12">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

  <expr_stmt pos:start="33:3" pos:end="33:12"><expr pos:start="33:3" pos:end="33:11"><call pos:start="33:3" pos:end="33:11"><name pos:start="33:3" pos:end="33:7">close</name> <argument_list pos:start="33:9" pos:end="33:11">(<argument pos:start="33:10" pos:end="33:10"><expr pos:start="33:10" pos:end="33:10"><name pos:start="33:10" pos:end="33:10">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <comment type="block" pos:start="37:3" pos:end="37:38">/* Cover another execution path.  */</comment>

  <if_stmt pos:start="39:3" pos:end="43:13"><if pos:start="39:3" pos:end="43:13">if <condition pos:start="39:6" pos:end="41:25">(<expr pos:start="39:7" pos:end="41:24"><call pos:start="39:7" pos:end="39:34"><name pos:start="39:7" pos:end="39:11">fopen</name> <argument_list pos:start="39:13" pos:end="39:34">(<argument pos:start="39:14" pos:end="39:27"><expr pos:start="39:14" pos:end="39:27"><literal type="string" pos:start="39:14" pos:end="39:27">"/nonexistent"</literal></expr></argument>, <argument pos:start="39:30" pos:end="39:33"><expr pos:start="39:30" pos:end="39:33"><literal type="string" pos:start="39:30" pos:end="39:33">"rb"</literal></expr></argument>)</argument_list></call> <operator pos:start="39:36" pos:end="39:37">!=</operator> <name pos:start="39:39" pos:end="39:42">NULL</name>

      <operator pos:start="41:7" pos:end="41:8">||</operator> <name pos:start="41:10" pos:end="41:14">errno</name> <operator pos:start="41:16" pos:end="41:17">!=</operator> <name pos:start="41:19" pos:end="41:24">ENOENT</name></expr>)</condition><block type="pseudo" pos:start="43:5" pos:end="43:13"><block_content pos:start="43:5" pos:end="43:13">

    <expr_stmt pos:start="43:5" pos:end="43:13"><expr pos:start="43:5" pos:end="43:12"><call pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:9">abort</name> <argument_list pos:start="43:11" pos:end="43:12">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

  <expr_stmt pos:start="45:3" pos:end="45:20"><expr pos:start="45:3" pos:end="45:19"><call pos:start="45:3" pos:end="45:19"><name pos:start="45:3" pos:end="45:8">printf</name> <argument_list pos:start="45:10" pos:end="45:19">(<argument pos:start="45:11" pos:end="45:18"><expr pos:start="45:11" pos:end="45:18"><literal type="string" pos:start="45:11" pos:end="45:18">"pass\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return pos:start="47:3" pos:end="47:11">return <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
