<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10866.c" pos:tabs="8"><function pos:start="1:1" pos:end="347:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">init_opencl_env</name><parameter_list pos:start="1:27" pos:end="1:80">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:33">GPUEnv</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:42">gpu_env</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:79"><decl pos:start="1:45" pos:end="1:79"><type pos:start="1:45" pos:end="1:79"><name pos:start="1:45" pos:end="1:63">AVOpenCLExternalEnv</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:79">ext_opencl_env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="347:1">{<block_content pos:start="5:5" pos:end="345:15">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">size_t</name></type> <name pos:start="5:12" pos:end="5:24">device_length</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">cl_int</name></type> <name pos:start="7:12" pos:end="7:17">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">cl_uint</name></type> <name pos:start="9:13" pos:end="9:25">num_platforms</name></decl>, <decl pos:start="9:28" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:28" pos:end="9:38">num_devices</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">cl_platform_id</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:32">platform_ids</name> <init pos:start="11:34" pos:end="11:39">= <expr pos:start="11:36" pos:end="11:39"><name pos:start="11:36" pos:end="11:39">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:25">cl_context_properties</name></type> <name pos:start="13:27" pos:end="13:32"><name pos:start="13:27" pos:end="13:29">cps</name><index pos:start="13:30" pos:end="13:32">[<expr pos:start="13:31" pos:end="13:31"><literal type="number" pos:start="13:31" pos:end="13:31">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:27"><name pos:start="15:10" pos:end="15:22">platform_name</name><index pos:start="15:23" pos:end="15:27">[<expr pos:start="15:24" pos:end="15:26"><literal type="number" pos:start="15:24" pos:end="15:26">100</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:18"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:14">ret</name> <init pos:start="17:16" pos:end="17:18">= <expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:100"><decl pos:start="19:5" pos:end="19:99"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:18">cl_device_type</name></type> <name pos:start="19:20" pos:end="19:32"><name pos:start="19:20" pos:end="19:30">device_type</name><index pos:start="19:31" pos:end="19:32">[]</index></name> <init pos:start="19:34" pos:end="19:99">= <expr pos:start="19:36" pos:end="19:99"><block pos:start="19:36" pos:end="19:99">{<expr pos:start="19:37" pos:end="19:54"><name pos:start="19:37" pos:end="19:54">CL_DEVICE_TYPE_GPU</name></expr>, <expr pos:start="19:57" pos:end="19:74"><name pos:start="19:57" pos:end="19:74">CL_DEVICE_TYPE_CPU</name></expr>, <expr pos:start="19:77" pos:end="19:98"><name pos:start="19:77" pos:end="19:98">CL_DEVICE_TYPE_DEFAULT</name></expr>}</block></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="21:5" pos:end="339:5"><if pos:start="21:5" pos:end="41:5">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:22">ext_opencl_env</name></expr>)</condition> <block pos:start="21:25" pos:end="41:5">{<block_content pos:start="23:9" pos:end="39:63">

        <if_stmt pos:start="23:9" pos:end="25:21"><if pos:start="23:9" pos:end="25:21">if <condition pos:start="23:12" pos:end="23:37">(<expr pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:19">gpu_env</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:36">is_user_created</name></name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:21"><block_content pos:start="25:13" pos:end="25:21">

            <return pos:start="25:13" pos:end="25:21">return <expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:63"><expr pos:start="27:9" pos:end="27:62"><name pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:15">gpu_env</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:28">platform_id</name></name>     <operator pos:start="27:34" pos:end="27:34">=</operator> <name pos:start="27:36" pos:end="27:62"><name pos:start="27:36" pos:end="27:49">ext_opencl_env</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:62">platform_id</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:37"><expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:15">gpu_env</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:32">is_user_created</name></name> <operator pos:start="29:34" pos:end="29:34">=</operator> <literal type="number" pos:start="29:36" pos:end="29:36">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:65"><expr pos:start="31:9" pos:end="31:64"><name pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:15">gpu_env</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:30">command_queue</name></name>   <operator pos:start="31:34" pos:end="31:34">=</operator> <name pos:start="31:36" pos:end="31:64"><name pos:start="31:36" pos:end="31:49">ext_opencl_env</name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:64">command_queue</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:59"><expr pos:start="33:9" pos:end="33:58"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:15">gpu_env</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:24">context</name></name>         <operator pos:start="33:34" pos:end="33:34">=</operator> <name pos:start="33:36" pos:end="33:58"><name pos:start="33:36" pos:end="33:49">ext_opencl_env</name><operator pos:start="33:50" pos:end="33:51">-&gt;</operator><name pos:start="33:52" pos:end="33:58">context</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:62"><expr pos:start="35:9" pos:end="35:61"><name pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:15">gpu_env</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:27">device_ids</name></name>      <operator pos:start="35:34" pos:end="35:34">=</operator> <name pos:start="35:36" pos:end="35:61"><name pos:start="35:36" pos:end="35:49">ext_opencl_env</name><operator pos:start="35:50" pos:end="35:51">-&gt;</operator><name pos:start="35:52" pos:end="35:61">device_ids</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:61"><expr pos:start="37:9" pos:end="37:60"><name pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:15">gpu_env</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:26">device_id</name></name>       <operator pos:start="37:34" pos:end="37:34">=</operator> <name pos:start="37:36" pos:end="37:60"><name pos:start="37:36" pos:end="37:49">ext_opencl_env</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:60">device_id</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:63"><expr pos:start="39:9" pos:end="39:62"><name pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:15">gpu_env</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:28">device_type</name></name>     <operator pos:start="39:34" pos:end="39:34">=</operator> <name pos:start="39:36" pos:end="39:62"><name pos:start="39:36" pos:end="39:49">ext_opencl_env</name><operator pos:start="39:50" pos:end="39:51">-&gt;</operator><name pos:start="39:52" pos:end="39:62">device_type</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="339:5">else <block pos:start="41:12" pos:end="339:5">{<block_content pos:start="43:9" pos:end="337:9">

        <if_stmt pos:start="43:9" pos:end="337:9"><if pos:start="43:9" pos:end="337:9">if <condition pos:start="43:12" pos:end="43:38">(<expr pos:start="43:13" pos:end="43:37"><operator pos:start="43:13" pos:end="43:13">!</operator><name pos:start="43:14" pos:end="43:37"><name pos:start="43:14" pos:end="43:20">gpu_env</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:37">is_user_created</name></name></expr>)</condition> <block pos:start="43:40" pos:end="337:9">{<block_content pos:start="45:13" pos:end="335:13">

            <expr_stmt pos:start="45:13" pos:end="45:63"><expr pos:start="45:13" pos:end="45:62"><name pos:start="45:13" pos:end="45:18">status</name> <operator pos:start="45:20" pos:end="45:20">=</operator> <call pos:start="45:22" pos:end="45:62"><name pos:start="45:22" pos:end="45:37">clGetPlatformIDs</name><argument_list pos:start="45:38" pos:end="45:62">(<argument pos:start="45:39" pos:end="45:39"><expr pos:start="45:39" pos:end="45:39"><literal type="number" pos:start="45:39" pos:end="45:39">0</literal></expr></argument>, <argument pos:start="45:42" pos:end="45:45"><expr pos:start="45:42" pos:end="45:45"><name pos:start="45:42" pos:end="45:45">NULL</name></expr></argument>, <argument pos:start="45:48" pos:end="45:61"><expr pos:start="45:48" pos:end="45:61"><operator pos:start="45:48" pos:end="45:48">&amp;</operator><name pos:start="45:49" pos:end="45:61">num_platforms</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="53:13"><if pos:start="47:13" pos:end="53:13">if <condition pos:start="47:16" pos:end="47:37">(<expr pos:start="47:17" pos:end="47:36"><name pos:start="47:17" pos:end="47:22">status</name> <operator pos:start="47:24" pos:end="47:25">!=</operator> <name pos:start="47:27" pos:end="47:36">CL_SUCCESS</name></expr>)</condition> <block pos:start="47:39" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:40">

                <expr_stmt pos:start="49:17" pos:end="49:117"><expr pos:start="49:17" pos:end="49:116"><call pos:start="49:17" pos:end="49:116"><name pos:start="49:17" pos:end="49:22">av_log</name><argument_list pos:start="49:23" pos:end="49:116">(<argument pos:start="49:24" pos:end="49:35"><expr pos:start="49:24" pos:end="49:35"><operator pos:start="49:24" pos:end="49:24">&amp;</operator><name pos:start="49:25" pos:end="49:35">openclutils</name></expr></argument>, <argument pos:start="49:38" pos:end="49:49"><expr pos:start="49:38" pos:end="49:49"><name pos:start="49:38" pos:end="49:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:52" pos:end="49:92"><expr pos:start="49:52" pos:end="49:92"><literal type="string" pos:start="49:52" pos:end="49:92">"Could not get OpenCL platform ids: %s\n"</literal></expr></argument>, <argument pos:start="49:95" pos:end="49:115"><expr pos:start="49:95" pos:end="49:115"><call pos:start="49:95" pos:end="49:115"><name pos:start="49:95" pos:end="49:107">opencl_errstr</name><argument_list pos:start="49:108" pos:end="49:115">(<argument pos:start="49:109" pos:end="49:114"><expr pos:start="49:109" pos:end="49:114"><name pos:start="49:109" pos:end="49:114">status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="51:17" pos:end="51:40">return <expr pos:start="51:24" pos:end="51:39"><name pos:start="51:24" pos:end="51:39">AVERROR_EXTERNAL</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="55:13" pos:end="65:13"><if pos:start="55:13" pos:end="65:13">if <condition pos:start="55:16" pos:end="55:61">(<expr pos:start="55:17" pos:end="55:60"><name pos:start="55:17" pos:end="55:55"><name pos:start="55:17" pos:end="55:23">gpu_env</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:42">usr_spec_dev_info</name><operator pos:start="55:43" pos:end="55:43">.</operator><name pos:start="55:44" pos:end="55:55">platform_idx</name></name> <operator pos:start="55:57" pos:end="55:58">&gt;=</operator> <literal type="number" pos:start="55:60" pos:end="55:60">0</literal></expr>)</condition> <block pos:start="55:63" pos:end="65:13">{<block_content pos:start="57:17" pos:end="63:17">

                <if_stmt pos:start="57:17" pos:end="63:17"><if pos:start="57:17" pos:end="63:17">if <condition pos:start="57:20" pos:end="57:80">(<expr pos:start="57:21" pos:end="57:79"><name pos:start="57:21" pos:end="57:33">num_platforms</name> <operator pos:start="57:35" pos:end="57:35">&lt;</operator> <name pos:start="57:37" pos:end="57:75"><name pos:start="57:37" pos:end="57:43">gpu_env</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:62">usr_spec_dev_info</name><operator pos:start="57:63" pos:end="57:63">.</operator><name pos:start="57:64" pos:end="57:75">platform_idx</name></name> <operator pos:start="57:77" pos:end="57:77">+</operator> <literal type="number" pos:start="57:79" pos:end="57:79">1</literal></expr>)</condition> <block pos:start="57:82" pos:end="63:17">{<block_content pos:start="59:21" pos:end="61:43">

                    <expr_stmt pos:start="59:21" pos:end="59:94"><expr pos:start="59:21" pos:end="59:93"><call pos:start="59:21" pos:end="59:93"><name pos:start="59:21" pos:end="59:26">av_log</name><argument_list pos:start="59:27" pos:end="59:93">(<argument pos:start="59:28" pos:end="59:39"><expr pos:start="59:28" pos:end="59:39"><operator pos:start="59:28" pos:end="59:28">&amp;</operator><name pos:start="59:29" pos:end="59:39">openclutils</name></expr></argument>, <argument pos:start="59:42" pos:end="59:53"><expr pos:start="59:42" pos:end="59:53"><name pos:start="59:42" pos:end="59:53">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:56" pos:end="59:92"><expr pos:start="59:56" pos:end="59:92"><literal type="string" pos:start="59:56" pos:end="59:92">"User set platform index not exist\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="61:21" pos:end="61:43">return <expr pos:start="61:28" pos:end="61:42"><call pos:start="61:28" pos:end="61:42"><name pos:start="61:28" pos:end="61:34">AVERROR</name><argument_list pos:start="61:35" pos:end="61:42">(<argument pos:start="61:36" pos:end="61:41"><expr pos:start="61:36" pos:end="61:41"><name pos:start="61:36" pos:end="61:41">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="67:13" pos:end="175:13"><if pos:start="67:13" pos:end="175:13">if <condition pos:start="67:16" pos:end="67:34">(<expr pos:start="67:17" pos:end="67:33"><name pos:start="67:17" pos:end="67:29">num_platforms</name> <operator pos:start="67:31" pos:end="67:31">&gt;</operator> <literal type="number" pos:start="67:33" pos:end="67:33">0</literal></expr>)</condition> <block pos:start="67:36" pos:end="175:13">{<block_content pos:start="69:17" pos:end="173:17">

                <expr_stmt pos:start="69:17" pos:end="69:82"><expr pos:start="69:17" pos:end="69:81"><name pos:start="69:17" pos:end="69:28">platform_ids</name> <operator pos:start="69:30" pos:end="69:30">=</operator> <call pos:start="69:32" pos:end="69:81"><name pos:start="69:32" pos:end="69:41">av_mallocz</name><argument_list pos:start="69:42" pos:end="69:81">(<argument pos:start="69:43" pos:end="69:80"><expr pos:start="69:43" pos:end="69:80"><name pos:start="69:43" pos:end="69:55">num_platforms</name> <operator pos:start="69:57" pos:end="69:57">*</operator> <sizeof pos:start="69:59" pos:end="69:80">sizeof<argument_list pos:start="69:65" pos:end="69:80">(<argument pos:start="69:66" pos:end="69:79"><expr pos:start="69:66" pos:end="69:79"><name pos:start="69:66" pos:end="69:79">cl_platform_id</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="71:17" pos:end="77:17"><if pos:start="71:17" pos:end="77:17">if <condition pos:start="71:20" pos:end="71:34">(<expr pos:start="71:21" pos:end="71:33"><operator pos:start="71:21" pos:end="71:21">!</operator><name pos:start="71:22" pos:end="71:33">platform_ids</name></expr>)</condition> <block pos:start="71:36" pos:end="77:17">{<block_content pos:start="73:21" pos:end="75:29">

                    <expr_stmt pos:start="73:21" pos:end="73:42"><expr pos:start="73:21" pos:end="73:41"><name pos:start="73:21" pos:end="73:23">ret</name> <operator pos:start="73:25" pos:end="73:25">=</operator> <call pos:start="73:27" pos:end="73:41"><name pos:start="73:27" pos:end="73:33">AVERROR</name><argument_list pos:start="73:34" pos:end="73:41">(<argument pos:start="73:35" pos:end="73:40"><expr pos:start="73:35" pos:end="73:40"><name pos:start="73:35" pos:end="73:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="75:21" pos:end="75:29">goto <name pos:start="75:26" pos:end="75:28">end</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:77"><expr pos:start="79:17" pos:end="79:76"><name pos:start="79:17" pos:end="79:22">status</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <call pos:start="79:26" pos:end="79:76"><name pos:start="79:26" pos:end="79:41">clGetPlatformIDs</name><argument_list pos:start="79:42" pos:end="79:76">(<argument pos:start="79:43" pos:end="79:55"><expr pos:start="79:43" pos:end="79:55"><name pos:start="79:43" pos:end="79:55">num_platforms</name></expr></argument>, <argument pos:start="79:58" pos:end="79:69"><expr pos:start="79:58" pos:end="79:69"><name pos:start="79:58" pos:end="79:69">platform_ids</name></expr></argument>, <argument pos:start="79:72" pos:end="79:75"><expr pos:start="79:72" pos:end="79:75"><name pos:start="79:72" pos:end="79:75">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="81:17" pos:end="89:17"><if pos:start="81:17" pos:end="89:17">if <condition pos:start="81:20" pos:end="81:41">(<expr pos:start="81:21" pos:end="81:40"><name pos:start="81:21" pos:end="81:26">status</name> <operator pos:start="81:28" pos:end="81:29">!=</operator> <name pos:start="81:31" pos:end="81:40">CL_SUCCESS</name></expr>)</condition> <block pos:start="81:43" pos:end="89:17">{<block_content pos:start="83:21" pos:end="87:29">

                    <expr_stmt pos:start="83:21" pos:end="83:121"><expr pos:start="83:21" pos:end="83:120"><call pos:start="83:21" pos:end="83:120"><name pos:start="83:21" pos:end="83:26">av_log</name><argument_list pos:start="83:27" pos:end="83:120">(<argument pos:start="83:28" pos:end="83:39"><expr pos:start="83:28" pos:end="83:39"><operator pos:start="83:28" pos:end="83:28">&amp;</operator><name pos:start="83:29" pos:end="83:39">openclutils</name></expr></argument>, <argument pos:start="83:42" pos:end="83:53"><expr pos:start="83:42" pos:end="83:53"><name pos:start="83:42" pos:end="83:53">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:56" pos:end="83:96"><expr pos:start="83:56" pos:end="83:96"><literal type="string" pos:start="83:56" pos:end="83:96">"Could not get OpenCL platform ids: %s\n"</literal></expr></argument>, <argument pos:start="83:99" pos:end="83:119"><expr pos:start="83:99" pos:end="83:119"><call pos:start="83:99" pos:end="83:119"><name pos:start="83:99" pos:end="83:111">opencl_errstr</name><argument_list pos:start="83:112" pos:end="83:119">(<argument pos:start="83:113" pos:end="83:118"><expr pos:start="83:113" pos:end="83:118"><name pos:start="83:113" pos:end="83:118">status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:43"><expr pos:start="85:21" pos:end="85:42"><name pos:start="85:21" pos:end="85:23">ret</name> <operator pos:start="85:25" pos:end="85:25">=</operator> <name pos:start="85:27" pos:end="85:42">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

                    <goto pos:start="87:21" pos:end="87:29">goto <name pos:start="87:26" pos:end="87:28">end</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:22"><expr pos:start="91:17" pos:end="91:21"><name pos:start="91:17" pos:end="91:17">i</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <literal type="number" pos:start="91:21" pos:end="91:21">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="93:17" pos:end="97:17"><if pos:start="93:17" pos:end="97:17">if <condition pos:start="93:20" pos:end="93:65">(<expr pos:start="93:21" pos:end="93:64"><name pos:start="93:21" pos:end="93:59"><name pos:start="93:21" pos:end="93:27">gpu_env</name><operator pos:start="93:28" pos:end="93:29">-&gt;</operator><name pos:start="93:30" pos:end="93:46">usr_spec_dev_info</name><operator pos:start="93:47" pos:end="93:47">.</operator><name pos:start="93:48" pos:end="93:59">platform_idx</name></name> <operator pos:start="93:61" pos:end="93:62">&gt;=</operator> <literal type="number" pos:start="93:64" pos:end="93:64">0</literal></expr>)</condition> <block pos:start="93:67" pos:end="97:17">{<block_content pos:start="95:21" pos:end="95:64">

                    <expr_stmt pos:start="95:21" pos:end="95:64"><expr pos:start="95:21" pos:end="95:63"><name pos:start="95:21" pos:end="95:21">i</name> <operator pos:start="95:23" pos:end="95:23">=</operator> <name pos:start="95:25" pos:end="95:63"><name pos:start="95:25" pos:end="95:31">gpu_env</name><operator pos:start="95:32" pos:end="95:33">-&gt;</operator><name pos:start="95:34" pos:end="95:50">usr_spec_dev_info</name><operator pos:start="95:51" pos:end="95:51">.</operator><name pos:start="95:52" pos:end="95:63">platform_idx</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <while pos:start="99:17" pos:end="173:17">while <condition pos:start="99:23" pos:end="99:41">(<expr pos:start="99:24" pos:end="99:40"><name pos:start="99:24" pos:end="99:24">i</name> <operator pos:start="99:26" pos:end="99:26">&lt;</operator> <name pos:start="99:28" pos:end="99:40">num_platforms</name></expr>)</condition> <block pos:start="99:43" pos:end="173:17">{<block_content pos:start="101:21" pos:end="169:24">

                    <expr_stmt pos:start="101:21" pos:end="105:53"><expr pos:start="101:21" pos:end="105:52"><name pos:start="101:21" pos:end="101:26">status</name> <operator pos:start="101:28" pos:end="101:28">=</operator> <call pos:start="101:30" pos:end="105:52"><name pos:start="101:30" pos:end="101:46">clGetPlatformInfo</name><argument_list pos:start="101:47" pos:end="105:52">(<argument pos:start="101:48" pos:end="101:62"><expr pos:start="101:48" pos:end="101:62"><name pos:start="101:48" pos:end="101:62"><name pos:start="101:48" pos:end="101:59">platform_ids</name><index pos:start="101:60" pos:end="101:62">[<expr pos:start="101:61" pos:end="101:61"><name pos:start="101:61" pos:end="101:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="101:65" pos:end="101:82"><expr pos:start="101:65" pos:end="101:82"><name pos:start="101:65" pos:end="101:82">CL_PLATFORM_VENDOR</name></expr></argument>,

                                               <argument pos:start="103:48" pos:end="103:68"><expr pos:start="103:48" pos:end="103:68"><sizeof pos:start="103:48" pos:end="103:68">sizeof<argument_list pos:start="103:54" pos:end="103:68">(<argument pos:start="103:55" pos:end="103:67"><expr pos:start="103:55" pos:end="103:67"><name pos:start="103:55" pos:end="103:67">platform_name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="103:71" pos:end="103:83"><expr pos:start="103:71" pos:end="103:83"><name pos:start="103:71" pos:end="103:83">platform_name</name></expr></argument>,

                                               <argument pos:start="105:48" pos:end="105:51"><expr pos:start="105:48" pos:end="105:51"><name pos:start="105:48" pos:end="105:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="109:21" pos:end="117:21"><if pos:start="109:21" pos:end="117:21">if <condition pos:start="109:24" pos:end="109:45">(<expr pos:start="109:25" pos:end="109:44"><name pos:start="109:25" pos:end="109:30">status</name> <operator pos:start="109:32" pos:end="109:33">!=</operator> <name pos:start="109:35" pos:end="109:44">CL_SUCCESS</name></expr>)</condition> <block pos:start="109:47" pos:end="117:21">{<block_content pos:start="111:25" pos:end="115:33">

                        <expr_stmt pos:start="111:25" pos:end="111:126"><expr pos:start="111:25" pos:end="111:125"><call pos:start="111:25" pos:end="111:125"><name pos:start="111:25" pos:end="111:30">av_log</name><argument_list pos:start="111:31" pos:end="111:125">(<argument pos:start="111:32" pos:end="111:43"><expr pos:start="111:32" pos:end="111:43"><operator pos:start="111:32" pos:end="111:32">&amp;</operator><name pos:start="111:33" pos:end="111:43">openclutils</name></expr></argument>, <argument pos:start="111:46" pos:end="111:57"><expr pos:start="111:46" pos:end="111:57"><name pos:start="111:46" pos:end="111:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="111:60" pos:end="111:101"><expr pos:start="111:60" pos:end="111:101"><literal type="string" pos:start="111:60" pos:end="111:101">"Could not get OpenCL platform info: %s\n"</literal></expr></argument>, <argument pos:start="111:104" pos:end="111:124"><expr pos:start="111:104" pos:end="111:124"><call pos:start="111:104" pos:end="111:124"><name pos:start="111:104" pos:end="111:116">opencl_errstr</name><argument_list pos:start="111:117" pos:end="111:124">(<argument pos:start="111:118" pos:end="111:123"><expr pos:start="111:118" pos:end="111:123"><name pos:start="111:118" pos:end="111:123">status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="113:25" pos:end="113:47"><expr pos:start="113:25" pos:end="113:46"><name pos:start="113:25" pos:end="113:27">ret</name> <operator pos:start="113:29" pos:end="113:29">=</operator> <name pos:start="113:31" pos:end="113:46">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

                        <goto pos:start="115:25" pos:end="115:33">goto <name pos:start="115:30" pos:end="115:32">end</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="119:21" pos:end="119:59"><expr pos:start="119:21" pos:end="119:58"><name pos:start="119:21" pos:end="119:40"><name pos:start="119:21" pos:end="119:27">gpu_env</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:40">platform_id</name></name> <operator pos:start="119:42" pos:end="119:42">=</operator> <name pos:start="119:44" pos:end="119:58"><name pos:start="119:44" pos:end="119:55">platform_ids</name><index pos:start="119:56" pos:end="119:58">[<expr pos:start="119:57" pos:end="119:57"><name pos:start="119:57" pos:end="119:57">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="121:21" pos:end="123:67"><expr pos:start="121:21" pos:end="123:66"><name pos:start="121:21" pos:end="121:26">status</name> <operator pos:start="121:28" pos:end="121:28">=</operator> <call pos:start="121:30" pos:end="123:66"><name pos:start="121:30" pos:end="121:43">clGetDeviceIDs</name><argument_list pos:start="121:44" pos:end="123:66">(<argument pos:start="121:45" pos:end="121:64"><expr pos:start="121:45" pos:end="121:64"><name pos:start="121:45" pos:end="121:64"><name pos:start="121:45" pos:end="121:51">gpu_env</name><operator pos:start="121:52" pos:end="121:53">-&gt;</operator><name pos:start="121:54" pos:end="121:64">platform_id</name></name></expr></argument>, <argument pos:start="121:67" pos:end="121:84"><expr pos:start="121:67" pos:end="121:84"><name pos:start="121:67" pos:end="121:84">CL_DEVICE_TYPE_GPU</name></expr></argument>,

                                            <argument pos:start="123:45" pos:end="123:45"><expr pos:start="123:45" pos:end="123:45"><literal type="number" pos:start="123:45" pos:end="123:45">0</literal></expr></argument>, <argument pos:start="123:48" pos:end="123:51"><expr pos:start="123:48" pos:end="123:51"><name pos:start="123:48" pos:end="123:51">NULL</name></expr></argument>, <argument pos:start="123:54" pos:end="123:65"><expr pos:start="123:54" pos:end="123:65"><operator pos:start="123:54" pos:end="123:54">&amp;</operator><name pos:start="123:55" pos:end="123:65">num_devices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="125:21" pos:end="133:21"><if pos:start="125:21" pos:end="133:21">if <condition pos:start="125:24" pos:end="125:45">(<expr pos:start="125:25" pos:end="125:44"><name pos:start="125:25" pos:end="125:30">status</name> <operator pos:start="125:32" pos:end="125:33">!=</operator> <name pos:start="125:35" pos:end="125:44">CL_SUCCESS</name></expr>)</condition> <block pos:start="125:47" pos:end="133:21">{<block_content pos:start="127:25" pos:end="131:33">

                        <expr_stmt pos:start="127:25" pos:end="127:125"><expr pos:start="127:25" pos:end="127:124"><call pos:start="127:25" pos:end="127:124"><name pos:start="127:25" pos:end="127:30">av_log</name><argument_list pos:start="127:31" pos:end="127:124">(<argument pos:start="127:32" pos:end="127:43"><expr pos:start="127:32" pos:end="127:43"><operator pos:start="127:32" pos:end="127:32">&amp;</operator><name pos:start="127:33" pos:end="127:43">openclutils</name></expr></argument>, <argument pos:start="127:46" pos:end="127:57"><expr pos:start="127:46" pos:end="127:57"><name pos:start="127:46" pos:end="127:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="127:60" pos:end="127:100"><expr pos:start="127:60" pos:end="127:100"><literal type="string" pos:start="127:60" pos:end="127:100">"Could not get OpenCL device number:%s\n"</literal></expr></argument>, <argument pos:start="127:103" pos:end="127:123"><expr pos:start="127:103" pos:end="127:123"><call pos:start="127:103" pos:end="127:123"><name pos:start="127:103" pos:end="127:115">opencl_errstr</name><argument_list pos:start="127:116" pos:end="127:123">(<argument pos:start="127:117" pos:end="127:122"><expr pos:start="127:117" pos:end="127:122"><name pos:start="127:117" pos:end="127:122">status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="129:25" pos:end="129:47"><expr pos:start="129:25" pos:end="129:46"><name pos:start="129:25" pos:end="129:27">ret</name> <operator pos:start="129:29" pos:end="129:29">=</operator> <name pos:start="129:31" pos:end="129:46">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

                        <goto pos:start="131:25" pos:end="131:33">goto <name pos:start="131:30" pos:end="131:32">end</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="135:21" pos:end="143:21"><if pos:start="135:21" pos:end="143:21">if <condition pos:start="135:24" pos:end="135:41">(<expr pos:start="135:25" pos:end="135:40"><name pos:start="135:25" pos:end="135:35">num_devices</name> <operator pos:start="135:37" pos:end="135:38">==</operator> <literal type="number" pos:start="135:40" pos:end="135:40">0</literal></expr>)</condition> <block pos:start="135:43" pos:end="143:21">{<block_content pos:start="139:25" pos:end="141:68">

                        <comment type="line" pos:start="137:25" pos:end="137:41">//find CPU device</comment>

                        <expr_stmt pos:start="139:25" pos:end="141:68"><expr pos:start="139:25" pos:end="141:67"><name pos:start="139:25" pos:end="139:30">status</name> <operator pos:start="139:32" pos:end="139:32">=</operator> <call pos:start="139:34" pos:end="141:67"><name pos:start="139:34" pos:end="139:47">clGetDeviceIDs</name><argument_list pos:start="139:48" pos:end="141:67">(<argument pos:start="139:49" pos:end="139:68"><expr pos:start="139:49" pos:end="139:68"><name pos:start="139:49" pos:end="139:68"><name pos:start="139:49" pos:end="139:55">gpu_env</name><operator pos:start="139:56" pos:end="139:57">-&gt;</operator><name pos:start="139:58" pos:end="139:68">platform_id</name></name></expr></argument>, <argument pos:start="139:71" pos:end="139:88"><expr pos:start="139:71" pos:end="139:88"><name pos:start="139:71" pos:end="139:88">CL_DEVICE_TYPE_CPU</name></expr></argument>,

                                             <argument pos:start="141:46" pos:end="141:46"><expr pos:start="141:46" pos:end="141:46"><literal type="number" pos:start="141:46" pos:end="141:46">0</literal></expr></argument>, <argument pos:start="141:49" pos:end="141:52"><expr pos:start="141:49" pos:end="141:52"><name pos:start="141:49" pos:end="141:52">NULL</name></expr></argument>, <argument pos:start="141:55" pos:end="141:66"><expr pos:start="141:55" pos:end="141:66"><operator pos:start="141:55" pos:end="141:55">&amp;</operator><name pos:start="141:56" pos:end="141:66">num_devices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="145:21" pos:end="153:21"><if pos:start="145:21" pos:end="153:21">if <condition pos:start="145:24" pos:end="145:45">(<expr pos:start="145:25" pos:end="145:44"><name pos:start="145:25" pos:end="145:30">status</name> <operator pos:start="145:32" pos:end="145:33">!=</operator> <name pos:start="145:35" pos:end="145:44">CL_SUCCESS</name></expr>)</condition> <block pos:start="145:47" pos:end="153:21">{<block_content pos:start="147:25" pos:end="151:33">

                        <expr_stmt pos:start="147:25" pos:end="147:123"><expr pos:start="147:25" pos:end="147:122"><call pos:start="147:25" pos:end="147:122"><name pos:start="147:25" pos:end="147:30">av_log</name><argument_list pos:start="147:31" pos:end="147:122">(<argument pos:start="147:32" pos:end="147:43"><expr pos:start="147:32" pos:end="147:43"><operator pos:start="147:32" pos:end="147:32">&amp;</operator><name pos:start="147:33" pos:end="147:43">openclutils</name></expr></argument>, <argument pos:start="147:46" pos:end="147:57"><expr pos:start="147:46" pos:end="147:57"><name pos:start="147:46" pos:end="147:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="147:60" pos:end="147:98"><expr pos:start="147:60" pos:end="147:98"><literal type="string" pos:start="147:60" pos:end="147:98">"Could not get OpenCL device ids: %s\n"</literal></expr></argument>, <argument pos:start="147:101" pos:end="147:121"><expr pos:start="147:101" pos:end="147:121"><call pos:start="147:101" pos:end="147:121"><name pos:start="147:101" pos:end="147:113">opencl_errstr</name><argument_list pos:start="147:114" pos:end="147:121">(<argument pos:start="147:115" pos:end="147:120"><expr pos:start="147:115" pos:end="147:120"><name pos:start="147:115" pos:end="147:120">status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="149:25" pos:end="149:46"><expr pos:start="149:25" pos:end="149:45"><name pos:start="149:25" pos:end="149:27">ret</name> <operator pos:start="149:29" pos:end="149:29">=</operator> <call pos:start="149:31" pos:end="149:45"><name pos:start="149:31" pos:end="149:37">AVERROR</name><argument_list pos:start="149:38" pos:end="149:45">(<argument pos:start="149:39" pos:end="149:44"><expr pos:start="149:39" pos:end="149:44"><name pos:start="149:39" pos:end="149:44">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="151:25" pos:end="151:33">goto <name pos:start="151:30" pos:end="151:32">end</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="155:21" pos:end="157:29"><if pos:start="155:21" pos:end="157:29">if <condition pos:start="155:24" pos:end="155:36">(<expr pos:start="155:25" pos:end="155:35"><name pos:start="155:25" pos:end="155:35">num_devices</name></expr>)</condition><block type="pseudo" pos:start="157:24" pos:end="157:29"><block_content pos:start="157:24" pos:end="157:29">

                       <break pos:start="157:24" pos:end="157:29">break;</break></block_content></block></if></if_stmt>

                    <if_stmt pos:start="159:21" pos:end="167:21"><if pos:start="159:21" pos:end="167:21">if <condition pos:start="159:24" pos:end="159:69">(<expr pos:start="159:25" pos:end="159:68"><name pos:start="159:25" pos:end="159:63"><name pos:start="159:25" pos:end="159:31">gpu_env</name><operator pos:start="159:32" pos:end="159:33">-&gt;</operator><name pos:start="159:34" pos:end="159:50">usr_spec_dev_info</name><operator pos:start="159:51" pos:end="159:51">.</operator><name pos:start="159:52" pos:end="159:63">platform_idx</name></name> <operator pos:start="159:65" pos:end="159:66">&gt;=</operator> <literal type="number" pos:start="159:68" pos:end="159:68">0</literal></expr>)</condition> <block pos:start="159:71" pos:end="167:21">{<block_content pos:start="161:25" pos:end="165:33">

                        <expr_stmt pos:start="161:25" pos:end="161:104"><expr pos:start="161:25" pos:end="161:103"><call pos:start="161:25" pos:end="161:103"><name pos:start="161:25" pos:end="161:30">av_log</name><argument_list pos:start="161:31" pos:end="161:103">(<argument pos:start="161:32" pos:end="161:43"><expr pos:start="161:32" pos:end="161:43"><operator pos:start="161:32" pos:end="161:32">&amp;</operator><name pos:start="161:33" pos:end="161:43">openclutils</name></expr></argument>, <argument pos:start="161:46" pos:end="161:57"><expr pos:start="161:46" pos:end="161:57"><name pos:start="161:46" pos:end="161:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="161:60" pos:end="161:102"><expr pos:start="161:60" pos:end="161:102"><literal type="string" pos:start="161:60" pos:end="161:102">"Device number of user set platform is 0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="163:25" pos:end="163:47"><expr pos:start="163:25" pos:end="163:46"><name pos:start="163:25" pos:end="163:27">ret</name> <operator pos:start="163:29" pos:end="163:29">=</operator> <name pos:start="163:31" pos:end="163:46">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

                        <goto pos:start="165:25" pos:end="165:33">goto <name pos:start="165:30" pos:end="165:32">end</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="169:21" pos:end="169:24"><expr pos:start="169:21" pos:end="169:23"><name pos:start="169:21" pos:end="169:21">i</name><operator pos:start="169:22" pos:end="169:23">++</operator></expr>;</expr_stmt>



                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="177:13" pos:end="185:13"><if pos:start="177:13" pos:end="185:13">if <condition pos:start="177:16" pos:end="177:38">(<expr pos:start="177:17" pos:end="177:37"><operator pos:start="177:17" pos:end="177:17">!</operator><name pos:start="177:18" pos:end="177:37"><name pos:start="177:18" pos:end="177:24">gpu_env</name><operator pos:start="177:25" pos:end="177:26">-&gt;</operator><name pos:start="177:27" pos:end="177:37">platform_id</name></name></expr>)</condition> <block pos:start="177:40" pos:end="185:13">{<block_content pos:start="179:17" pos:end="183:25">

                <expr_stmt pos:start="179:17" pos:end="179:87"><expr pos:start="179:17" pos:end="179:86"><call pos:start="179:17" pos:end="179:86"><name pos:start="179:17" pos:end="179:22">av_log</name><argument_list pos:start="179:23" pos:end="179:86">(<argument pos:start="179:24" pos:end="179:35"><expr pos:start="179:24" pos:end="179:35"><operator pos:start="179:24" pos:end="179:24">&amp;</operator><name pos:start="179:25" pos:end="179:35">openclutils</name></expr></argument>, <argument pos:start="179:38" pos:end="179:49"><expr pos:start="179:38" pos:end="179:49"><name pos:start="179:38" pos:end="179:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="179:52" pos:end="179:85"><expr pos:start="179:52" pos:end="179:85"><literal type="string" pos:start="179:52" pos:end="179:85">"Could not get OpenCL platforms\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:39"><expr pos:start="181:17" pos:end="181:38"><name pos:start="181:17" pos:end="181:19">ret</name> <operator pos:start="181:21" pos:end="181:21">=</operator> <name pos:start="181:23" pos:end="181:38">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

                <goto pos:start="183:17" pos:end="183:25">goto <name pos:start="183:22" pos:end="183:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="187:13" pos:end="199:13"><if pos:start="187:13" pos:end="199:13">if <condition pos:start="187:16" pos:end="187:56">(<expr pos:start="187:17" pos:end="187:55"><name pos:start="187:17" pos:end="187:50"><name pos:start="187:17" pos:end="187:23">gpu_env</name><operator pos:start="187:24" pos:end="187:25">-&gt;</operator><name pos:start="187:26" pos:end="187:42">usr_spec_dev_info</name><operator pos:start="187:43" pos:end="187:43">.</operator><name pos:start="187:44" pos:end="187:50">dev_idx</name></name> <operator pos:start="187:52" pos:end="187:53">&gt;=</operator> <literal type="number" pos:start="187:55" pos:end="187:55">0</literal></expr>)</condition> <block pos:start="187:58" pos:end="199:13">{<block_content pos:start="189:17" pos:end="197:17">

                <if_stmt pos:start="189:17" pos:end="197:17"><if pos:start="189:17" pos:end="197:17">if <condition pos:start="189:20" pos:end="189:73">(<expr pos:start="189:21" pos:end="189:72"><name pos:start="189:21" pos:end="189:31">num_devices</name> <operator pos:start="189:33" pos:end="189:33">&lt;</operator> <name pos:start="189:35" pos:end="189:68"><name pos:start="189:35" pos:end="189:41">gpu_env</name><operator pos:start="189:42" pos:end="189:43">-&gt;</operator><name pos:start="189:44" pos:end="189:60">usr_spec_dev_info</name><operator pos:start="189:61" pos:end="189:61">.</operator><name pos:start="189:62" pos:end="189:68">dev_idx</name></name> <operator pos:start="189:70" pos:end="189:70">+</operator> <literal type="number" pos:start="189:72" pos:end="189:72">1</literal></expr>)</condition> <block pos:start="189:75" pos:end="197:17">{<block_content pos:start="191:21" pos:end="195:29">

                    <expr_stmt pos:start="191:21" pos:end="191:117"><expr pos:start="191:21" pos:end="191:116"><call pos:start="191:21" pos:end="191:116"><name pos:start="191:21" pos:end="191:26">av_log</name><argument_list pos:start="191:27" pos:end="191:116">(<argument pos:start="191:28" pos:end="191:39"><expr pos:start="191:28" pos:end="191:39"><operator pos:start="191:28" pos:end="191:28">&amp;</operator><name pos:start="191:29" pos:end="191:39">openclutils</name></expr></argument>, <argument pos:start="191:42" pos:end="191:53"><expr pos:start="191:42" pos:end="191:53"><name pos:start="191:42" pos:end="191:53">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="191:56" pos:end="191:115"><expr pos:start="191:56" pos:end="191:115"><literal type="string" pos:start="191:56" pos:end="191:115">"Could not get OpenCL device idx in the user set platform\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:42"><expr pos:start="193:21" pos:end="193:41"><name pos:start="193:21" pos:end="193:23">ret</name> <operator pos:start="193:25" pos:end="193:25">=</operator> <call pos:start="193:27" pos:end="193:41"><name pos:start="193:27" pos:end="193:33">AVERROR</name><argument_list pos:start="193:34" pos:end="193:41">(<argument pos:start="193:35" pos:end="193:40"><expr pos:start="193:35" pos:end="193:40"><name pos:start="193:35" pos:end="193:40">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="195:21" pos:end="195:29">goto <name pos:start="195:26" pos:end="195:28">end</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



           <comment type="block" pos:start="203:12" pos:end="207:22">/*

                    * Use available platform.

                    */</comment>



            <expr_stmt pos:start="211:13" pos:end="211:87"><expr pos:start="211:13" pos:end="211:86"><call pos:start="211:13" pos:end="211:86"><name pos:start="211:13" pos:end="211:18">av_log</name><argument_list pos:start="211:19" pos:end="211:86">(<argument pos:start="211:20" pos:end="211:31"><expr pos:start="211:20" pos:end="211:31"><operator pos:start="211:20" pos:end="211:20">&amp;</operator><name pos:start="211:21" pos:end="211:31">openclutils</name></expr></argument>, <argument pos:start="211:34" pos:end="211:47"><expr pos:start="211:34" pos:end="211:47"><name pos:start="211:34" pos:end="211:47">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="211:50" pos:end="211:70"><expr pos:start="211:50" pos:end="211:70"><literal type="string" pos:start="211:50" pos:end="211:70">"Platform Name: %s\n"</literal></expr></argument>, <argument pos:start="211:73" pos:end="211:85"><expr pos:start="211:73" pos:end="211:85"><name pos:start="211:73" pos:end="211:85">platform_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:41"><expr pos:start="213:13" pos:end="213:40"><name pos:start="213:13" pos:end="213:18"><name pos:start="213:13" pos:end="213:15">cps</name><index pos:start="213:16" pos:end="213:18">[<expr pos:start="213:17" pos:end="213:17"><literal type="number" pos:start="213:17" pos:end="213:17">0</literal></expr>]</index></name> <operator pos:start="213:20" pos:end="213:20">=</operator> <name pos:start="213:22" pos:end="213:40">CL_CONTEXT_PLATFORM</name></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:65"><expr pos:start="215:13" pos:end="215:64"><name pos:start="215:13" pos:end="215:18"><name pos:start="215:13" pos:end="215:15">cps</name><index pos:start="215:16" pos:end="215:18">[<expr pos:start="215:17" pos:end="215:17"><literal type="number" pos:start="215:17" pos:end="215:17">1</literal></expr>]</index></name> <operator pos:start="215:20" pos:end="215:20">=</operator> <operator pos:start="215:22" pos:end="215:22">(</operator><name pos:start="215:23" pos:end="215:43">cl_context_properties</name><operator pos:start="215:44" pos:end="215:44">)</operator><name pos:start="215:45" pos:end="215:64"><name pos:start="215:45" pos:end="215:51">gpu_env</name><operator pos:start="215:52" pos:end="215:53">-&gt;</operator><name pos:start="215:54" pos:end="215:64">platform_id</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:23"><expr pos:start="217:13" pos:end="217:22"><name pos:start="217:13" pos:end="217:18"><name pos:start="217:13" pos:end="217:15">cps</name><index pos:start="217:16" pos:end="217:18">[<expr pos:start="217:17" pos:end="217:17"><literal type="number" pos:start="217:17" pos:end="217:17">2</literal></expr>]</index></name> <operator pos:start="217:20" pos:end="217:20">=</operator> <literal type="number" pos:start="217:22" pos:end="217:22">0</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="219:13" pos:end="219:32">/* Check for GPU. */</comment>



            <for pos:start="223:13" pos:end="245:13">for <control pos:start="223:17" pos:end="223:53">(<init pos:start="223:18" pos:end="223:23"><expr pos:start="223:18" pos:end="223:22"><name pos:start="223:18" pos:end="223:18">i</name> <operator pos:start="223:20" pos:end="223:20">=</operator> <literal type="number" pos:start="223:22" pos:end="223:22">0</literal></expr>;</init> <condition pos:start="223:25" pos:end="223:48"><expr pos:start="223:25" pos:end="223:47"><name pos:start="223:25" pos:end="223:25">i</name> <operator pos:start="223:27" pos:end="223:27">&lt;</operator> <sizeof pos:start="223:29" pos:end="223:47">sizeof<argument_list pos:start="223:35" pos:end="223:47">(<argument pos:start="223:36" pos:end="223:46"><expr pos:start="223:36" pos:end="223:46"><name pos:start="223:36" pos:end="223:46">device_type</name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr pos:start="223:50" pos:end="223:52"><expr pos:start="223:50" pos:end="223:52"><name pos:start="223:50" pos:end="223:50">i</name><operator pos:start="223:51" pos:end="223:52">++</operator></expr></incr>)</control> <block pos:start="223:55" pos:end="245:13">{<block_content pos:start="225:17" pos:end="243:26">

                <expr_stmt pos:start="225:17" pos:end="225:54"><expr pos:start="225:17" pos:end="225:53"><name pos:start="225:17" pos:end="225:36"><name pos:start="225:17" pos:end="225:23">gpu_env</name><operator pos:start="225:24" pos:end="225:25">-&gt;</operator><name pos:start="225:26" pos:end="225:36">device_type</name></name> <operator pos:start="225:38" pos:end="225:38">=</operator> <name pos:start="225:40" pos:end="225:53"><name pos:start="225:40" pos:end="225:50">device_type</name><index pos:start="225:51" pos:end="225:53">[<expr pos:start="225:52" pos:end="225:52"><name pos:start="225:52" pos:end="225:52">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="229:84"><expr pos:start="227:17" pos:end="229:83"><name pos:start="227:17" pos:end="227:32"><name pos:start="227:17" pos:end="227:23">gpu_env</name><operator pos:start="227:24" pos:end="227:25">-&gt;</operator><name pos:start="227:26" pos:end="227:32">context</name></name>     <operator pos:start="227:38" pos:end="227:38">=</operator> <call pos:start="227:40" pos:end="229:83"><name pos:start="227:40" pos:end="227:62">clCreateContextFromType</name><argument_list pos:start="227:63" pos:end="229:83">(<argument pos:start="227:64" pos:end="227:66"><expr pos:start="227:64" pos:end="227:66"><name pos:start="227:64" pos:end="227:66">cps</name></expr></argument>, <argument pos:start="227:69" pos:end="227:88"><expr pos:start="227:69" pos:end="227:88"><name pos:start="227:69" pos:end="227:88"><name pos:start="227:69" pos:end="227:75">gpu_env</name><operator pos:start="227:76" pos:end="227:77">-&gt;</operator><name pos:start="227:78" pos:end="227:88">device_type</name></name></expr></argument>,

                                                               <argument pos:start="229:64" pos:end="229:67"><expr pos:start="229:64" pos:end="229:67"><name pos:start="229:64" pos:end="229:67">NULL</name></expr></argument>, <argument pos:start="229:70" pos:end="229:73"><expr pos:start="229:70" pos:end="229:73"><name pos:start="229:70" pos:end="229:73">NULL</name></expr></argument>, <argument pos:start="229:76" pos:end="229:82"><expr pos:start="229:76" pos:end="229:82"><operator pos:start="229:76" pos:end="229:76">&amp;</operator><name pos:start="229:77" pos:end="229:82">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="231:17" pos:end="239:17"><if pos:start="231:17" pos:end="239:17">if <condition pos:start="231:20" pos:end="231:41">(<expr pos:start="231:21" pos:end="231:40"><name pos:start="231:21" pos:end="231:26">status</name> <operator pos:start="231:28" pos:end="231:29">!=</operator> <name pos:start="231:31" pos:end="231:40">CL_SUCCESS</name></expr>)</condition> <block pos:start="231:43" pos:end="239:17">{<block_content pos:start="233:21" pos:end="237:29">

                    <expr_stmt pos:start="233:21" pos:end="233:133"><expr pos:start="233:21" pos:end="233:132"><call pos:start="233:21" pos:end="233:132"><name pos:start="233:21" pos:end="233:26">av_log</name><argument_list pos:start="233:27" pos:end="233:132">(<argument pos:start="233:28" pos:end="233:39"><expr pos:start="233:28" pos:end="233:39"><operator pos:start="233:28" pos:end="233:28">&amp;</operator><name pos:start="233:29" pos:end="233:39">openclutils</name></expr></argument>, <argument pos:start="233:42" pos:end="233:53"><expr pos:start="233:42" pos:end="233:53"><name pos:start="233:42" pos:end="233:53">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="233:56" pos:end="233:108"><expr pos:start="233:56" pos:end="233:108"><literal type="string" pos:start="233:56" pos:end="233:108">"Could not get OpenCL context from device type: %s\n"</literal></expr></argument>, <argument pos:start="233:111" pos:end="233:131"><expr pos:start="233:111" pos:end="233:131"><call pos:start="233:111" pos:end="233:131"><name pos:start="233:111" pos:end="233:123">opencl_errstr</name><argument_list pos:start="233:124" pos:end="233:131">(<argument pos:start="233:125" pos:end="233:130"><expr pos:start="233:125" pos:end="233:130"><name pos:start="233:125" pos:end="233:130">status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="235:21" pos:end="235:43"><expr pos:start="235:21" pos:end="235:42"><name pos:start="235:21" pos:end="235:23">ret</name> <operator pos:start="235:25" pos:end="235:25">=</operator> <name pos:start="235:27" pos:end="235:42">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

                    <goto pos:start="237:21" pos:end="237:29">goto <name pos:start="237:26" pos:end="237:28">end</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="241:17" pos:end="243:26"><if pos:start="241:17" pos:end="243:26">if <condition pos:start="241:20" pos:end="241:37">(<expr pos:start="241:21" pos:end="241:36"><name pos:start="241:21" pos:end="241:36"><name pos:start="241:21" pos:end="241:27">gpu_env</name><operator pos:start="241:28" pos:end="241:29">-&gt;</operator><name pos:start="241:30" pos:end="241:36">context</name></name></expr>)</condition><block type="pseudo" pos:start="243:21" pos:end="243:26"><block_content pos:start="243:21" pos:end="243:26">

                    <break pos:start="243:21" pos:end="243:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="247:13" pos:end="255:13"><if pos:start="247:13" pos:end="255:13">if <condition pos:start="247:16" pos:end="247:34">(<expr pos:start="247:17" pos:end="247:33"><operator pos:start="247:17" pos:end="247:17">!</operator><name pos:start="247:18" pos:end="247:33"><name pos:start="247:18" pos:end="247:24">gpu_env</name><operator pos:start="247:25" pos:end="247:26">-&gt;</operator><name pos:start="247:27" pos:end="247:33">context</name></name></expr>)</condition> <block pos:start="247:36" pos:end="255:13">{<block_content pos:start="249:17" pos:end="253:25">

                <expr_stmt pos:start="249:17" pos:end="249:102"><expr pos:start="249:17" pos:end="249:101"><call pos:start="249:17" pos:end="249:101"><name pos:start="249:17" pos:end="249:22">av_log</name><argument_list pos:start="249:23" pos:end="249:101">(<argument pos:start="249:24" pos:end="249:35"><expr pos:start="249:24" pos:end="249:35"><operator pos:start="249:24" pos:end="249:24">&amp;</operator><name pos:start="249:25" pos:end="249:35">openclutils</name></expr></argument>, <argument pos:start="249:38" pos:end="249:49"><expr pos:start="249:38" pos:end="249:49"><name pos:start="249:38" pos:end="249:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="249:52" pos:end="249:100"><expr pos:start="249:52" pos:end="249:100"><literal type="string" pos:start="249:52" pos:end="249:100">"Could not get OpenCL context from device type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:39"><expr pos:start="251:17" pos:end="251:38"><name pos:start="251:17" pos:end="251:19">ret</name> <operator pos:start="251:21" pos:end="251:21">=</operator> <name pos:start="251:23" pos:end="251:38">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

                <goto pos:start="253:17" pos:end="253:25">goto <name pos:start="253:22" pos:end="253:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="257:13" pos:end="257:40">/* Detect OpenCL devices. */</comment>

            <comment type="block" pos:start="259:13" pos:end="259:57">/* First, get the size of device list data */</comment>

            <expr_stmt pos:start="261:13" pos:end="263:63"><expr pos:start="261:13" pos:end="263:62"><name pos:start="261:13" pos:end="261:18">status</name> <operator pos:start="261:20" pos:end="261:20">=</operator> <call pos:start="261:22" pos:end="263:62"><name pos:start="261:22" pos:end="261:37">clGetContextInfo</name><argument_list pos:start="261:38" pos:end="263:62">(<argument pos:start="261:39" pos:end="261:54"><expr pos:start="261:39" pos:end="261:54"><name pos:start="261:39" pos:end="261:54"><name pos:start="261:39" pos:end="261:45">gpu_env</name><operator pos:start="261:46" pos:end="261:47">-&gt;</operator><name pos:start="261:48" pos:end="261:54">context</name></name></expr></argument>, <argument pos:start="261:57" pos:end="261:74"><expr pos:start="261:57" pos:end="261:74"><name pos:start="261:57" pos:end="261:74">CL_CONTEXT_DEVICES</name></expr></argument>,

                                      <argument pos:start="263:39" pos:end="263:39"><expr pos:start="263:39" pos:end="263:39"><literal type="number" pos:start="263:39" pos:end="263:39">0</literal></expr></argument>, <argument pos:start="263:42" pos:end="263:45"><expr pos:start="263:42" pos:end="263:45"><name pos:start="263:42" pos:end="263:45">NULL</name></expr></argument>, <argument pos:start="263:48" pos:end="263:61"><expr pos:start="263:48" pos:end="263:61"><operator pos:start="263:48" pos:end="263:48">&amp;</operator><name pos:start="263:49" pos:end="263:61">device_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="265:13" pos:end="273:13"><if pos:start="265:13" pos:end="273:13">if <condition pos:start="265:16" pos:end="265:37">(<expr pos:start="265:17" pos:end="265:36"><name pos:start="265:17" pos:end="265:22">status</name> <operator pos:start="265:24" pos:end="265:25">!=</operator> <name pos:start="265:27" pos:end="265:36">CL_SUCCESS</name></expr>)</condition> <block pos:start="265:39" pos:end="273:13">{<block_content pos:start="267:17" pos:end="271:25">

                <expr_stmt pos:start="267:17" pos:end="267:118"><expr pos:start="267:17" pos:end="267:117"><call pos:start="267:17" pos:end="267:117"><name pos:start="267:17" pos:end="267:22">av_log</name><argument_list pos:start="267:23" pos:end="267:117">(<argument pos:start="267:24" pos:end="267:35"><expr pos:start="267:24" pos:end="267:35"><operator pos:start="267:24" pos:end="267:24">&amp;</operator><name pos:start="267:25" pos:end="267:35">openclutils</name></expr></argument>, <argument pos:start="267:38" pos:end="267:49"><expr pos:start="267:38" pos:end="267:49"><name pos:start="267:38" pos:end="267:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="267:52" pos:end="267:93"><expr pos:start="267:52" pos:end="267:93"><literal type="string" pos:start="267:52" pos:end="267:93">"Could not get OpenCL device length: %s\n"</literal></expr></argument>, <argument pos:start="267:96" pos:end="267:116"><expr pos:start="267:96" pos:end="267:116"><call pos:start="267:96" pos:end="267:116"><name pos:start="267:96" pos:end="267:108">opencl_errstr</name><argument_list pos:start="267:109" pos:end="267:116">(<argument pos:start="267:110" pos:end="267:115"><expr pos:start="267:110" pos:end="267:115"><name pos:start="267:110" pos:end="267:115">status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="269:17" pos:end="269:39"><expr pos:start="269:17" pos:end="269:38"><name pos:start="269:17" pos:end="269:19">ret</name> <operator pos:start="269:21" pos:end="269:21">=</operator> <name pos:start="269:23" pos:end="269:38">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

                <goto pos:start="271:17" pos:end="271:25">goto <name pos:start="271:22" pos:end="271:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="275:13" pos:end="283:13"><if pos:start="275:13" pos:end="283:13">if <condition pos:start="275:16" pos:end="275:35">(<expr pos:start="275:17" pos:end="275:34"><name pos:start="275:17" pos:end="275:29">device_length</name> <operator pos:start="275:31" pos:end="275:32">==</operator> <literal type="number" pos:start="275:34" pos:end="275:34">0</literal></expr>)</condition> <block pos:start="275:37" pos:end="283:13">{<block_content pos:start="277:17" pos:end="281:25">

                <expr_stmt pos:start="277:17" pos:end="277:91"><expr pos:start="277:17" pos:end="277:90"><call pos:start="277:17" pos:end="277:90"><name pos:start="277:17" pos:end="277:22">av_log</name><argument_list pos:start="277:23" pos:end="277:90">(<argument pos:start="277:24" pos:end="277:35"><expr pos:start="277:24" pos:end="277:35"><operator pos:start="277:24" pos:end="277:24">&amp;</operator><name pos:start="277:25" pos:end="277:35">openclutils</name></expr></argument>, <argument pos:start="277:38" pos:end="277:49"><expr pos:start="277:38" pos:end="277:49"><name pos:start="277:38" pos:end="277:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="277:52" pos:end="277:89"><expr pos:start="277:52" pos:end="277:89"><literal type="string" pos:start="277:52" pos:end="277:89">"Could not get OpenCL device length\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="279:17" pos:end="279:39"><expr pos:start="279:17" pos:end="279:38"><name pos:start="279:17" pos:end="279:19">ret</name> <operator pos:start="279:21" pos:end="279:21">=</operator> <name pos:start="279:23" pos:end="279:38">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

                <goto pos:start="281:17" pos:end="281:25">goto <name pos:start="281:22" pos:end="281:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="285:13" pos:end="285:86">/* Now allocate memory for device list based on the size we got earlier */</comment>

            <expr_stmt pos:start="287:13" pos:end="287:60"><expr pos:start="287:13" pos:end="287:59"><name pos:start="287:13" pos:end="287:31"><name pos:start="287:13" pos:end="287:19">gpu_env</name><operator pos:start="287:20" pos:end="287:21">-&gt;</operator><name pos:start="287:22" pos:end="287:31">device_ids</name></name> <operator pos:start="287:33" pos:end="287:33">=</operator> <call pos:start="287:35" pos:end="287:59"><name pos:start="287:35" pos:end="287:44">av_mallocz</name><argument_list pos:start="287:45" pos:end="287:59">(<argument pos:start="287:46" pos:end="287:58"><expr pos:start="287:46" pos:end="287:58"><name pos:start="287:46" pos:end="287:58">device_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="289:13" pos:end="295:13"><if pos:start="289:13" pos:end="295:13">if <condition pos:start="289:16" pos:end="289:37">(<expr pos:start="289:17" pos:end="289:36"><operator pos:start="289:17" pos:end="289:17">!</operator><name pos:start="289:18" pos:end="289:36"><name pos:start="289:18" pos:end="289:24">gpu_env</name><operator pos:start="289:25" pos:end="289:26">-&gt;</operator><name pos:start="289:27" pos:end="289:36">device_ids</name></name></expr>)</condition> <block pos:start="289:39" pos:end="295:13">{<block_content pos:start="291:17" pos:end="293:25">

                <expr_stmt pos:start="291:17" pos:end="291:38"><expr pos:start="291:17" pos:end="291:37"><name pos:start="291:17" pos:end="291:19">ret</name> <operator pos:start="291:21" pos:end="291:21">=</operator> <call pos:start="291:23" pos:end="291:37"><name pos:start="291:23" pos:end="291:29">AVERROR</name><argument_list pos:start="291:30" pos:end="291:37">(<argument pos:start="291:31" pos:end="291:36"><expr pos:start="291:31" pos:end="291:36"><name pos:start="291:31" pos:end="291:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="293:17" pos:end="293:25">goto <name pos:start="293:22" pos:end="293:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="297:13" pos:end="297:47">/* Now, get the device list data */</comment>

            <expr_stmt pos:start="299:13" pos:end="301:65"><expr pos:start="299:13" pos:end="301:64"><name pos:start="299:13" pos:end="299:18">status</name> <operator pos:start="299:20" pos:end="299:20">=</operator> <call pos:start="299:22" pos:end="301:64"><name pos:start="299:22" pos:end="299:37">clGetContextInfo</name><argument_list pos:start="299:38" pos:end="301:64">(<argument pos:start="299:39" pos:end="299:54"><expr pos:start="299:39" pos:end="299:54"><name pos:start="299:39" pos:end="299:54"><name pos:start="299:39" pos:end="299:45">gpu_env</name><operator pos:start="299:46" pos:end="299:47">-&gt;</operator><name pos:start="299:48" pos:end="299:54">context</name></name></expr></argument>, <argument pos:start="299:57" pos:end="299:74"><expr pos:start="299:57" pos:end="299:74"><name pos:start="299:57" pos:end="299:74">CL_CONTEXT_DEVICES</name></expr></argument>, <argument pos:start="299:77" pos:end="299:89"><expr pos:start="299:77" pos:end="299:89"><name pos:start="299:77" pos:end="299:89">device_length</name></expr></argument>,

                                      <argument pos:start="301:39" pos:end="301:57"><expr pos:start="301:39" pos:end="301:57"><name pos:start="301:39" pos:end="301:57"><name pos:start="301:39" pos:end="301:45">gpu_env</name><operator pos:start="301:46" pos:end="301:47">-&gt;</operator><name pos:start="301:48" pos:end="301:57">device_ids</name></name></expr></argument>, <argument pos:start="301:60" pos:end="301:63"><expr pos:start="301:60" pos:end="301:63"><name pos:start="301:60" pos:end="301:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="303:13" pos:end="311:13"><if pos:start="303:13" pos:end="311:13">if <condition pos:start="303:16" pos:end="303:37">(<expr pos:start="303:17" pos:end="303:36"><name pos:start="303:17" pos:end="303:22">status</name> <operator pos:start="303:24" pos:end="303:25">!=</operator> <name pos:start="303:27" pos:end="303:36">CL_SUCCESS</name></expr>)</condition> <block pos:start="303:39" pos:end="311:13">{<block_content pos:start="305:17" pos:end="309:25">

                <expr_stmt pos:start="305:17" pos:end="305:117"><expr pos:start="305:17" pos:end="305:116"><call pos:start="305:17" pos:end="305:116"><name pos:start="305:17" pos:end="305:22">av_log</name><argument_list pos:start="305:23" pos:end="305:116">(<argument pos:start="305:24" pos:end="305:35"><expr pos:start="305:24" pos:end="305:35"><operator pos:start="305:24" pos:end="305:24">&amp;</operator><name pos:start="305:25" pos:end="305:35">openclutils</name></expr></argument>, <argument pos:start="305:38" pos:end="305:49"><expr pos:start="305:38" pos:end="305:49"><name pos:start="305:38" pos:end="305:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="305:52" pos:end="305:92"><expr pos:start="305:52" pos:end="305:92"><literal type="string" pos:start="305:52" pos:end="305:92">"Could not get OpenCL context info: %s\n"</literal></expr></argument>, <argument pos:start="305:95" pos:end="305:115"><expr pos:start="305:95" pos:end="305:115"><call pos:start="305:95" pos:end="305:115"><name pos:start="305:95" pos:end="305:107">opencl_errstr</name><argument_list pos:start="305:108" pos:end="305:115">(<argument pos:start="305:109" pos:end="305:114"><expr pos:start="305:109" pos:end="305:114"><name pos:start="305:109" pos:end="305:114">status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="307:17" pos:end="307:39"><expr pos:start="307:17" pos:end="307:38"><name pos:start="307:17" pos:end="307:19">ret</name> <operator pos:start="307:21" pos:end="307:21">=</operator> <name pos:start="307:23" pos:end="307:38">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

                <goto pos:start="309:17" pos:end="309:25">goto <name pos:start="309:22" pos:end="309:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="313:13" pos:end="313:46">/* Create OpenCL command queue. */</comment>

            <expr_stmt pos:start="315:13" pos:end="315:18"><expr pos:start="315:13" pos:end="315:17"><name pos:start="315:13" pos:end="315:13">i</name> <operator pos:start="315:15" pos:end="315:15">=</operator> <literal type="number" pos:start="315:17" pos:end="315:17">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="317:13" pos:end="321:13"><if pos:start="317:13" pos:end="321:13">if <condition pos:start="317:16" pos:end="317:56">(<expr pos:start="317:17" pos:end="317:55"><name pos:start="317:17" pos:end="317:50"><name pos:start="317:17" pos:end="317:23">gpu_env</name><operator pos:start="317:24" pos:end="317:25">-&gt;</operator><name pos:start="317:26" pos:end="317:42">usr_spec_dev_info</name><operator pos:start="317:43" pos:end="317:43">.</operator><name pos:start="317:44" pos:end="317:50">dev_idx</name></name> <operator pos:start="317:52" pos:end="317:53">&gt;=</operator> <literal type="number" pos:start="317:55" pos:end="317:55">0</literal></expr>)</condition> <block pos:start="317:58" pos:end="321:13">{<block_content pos:start="319:17" pos:end="319:55">

                <expr_stmt pos:start="319:17" pos:end="319:55"><expr pos:start="319:17" pos:end="319:54"><name pos:start="319:17" pos:end="319:17">i</name> <operator pos:start="319:19" pos:end="319:19">=</operator> <name pos:start="319:21" pos:end="319:54"><name pos:start="319:21" pos:end="319:27">gpu_env</name><operator pos:start="319:28" pos:end="319:29">-&gt;</operator><name pos:start="319:30" pos:end="319:46">usr_spec_dev_info</name><operator pos:start="319:47" pos:end="319:47">.</operator><name pos:start="319:48" pos:end="319:54">dev_idx</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="323:13" pos:end="325:70"><expr pos:start="323:13" pos:end="325:69"><name pos:start="323:13" pos:end="323:34"><name pos:start="323:13" pos:end="323:19">gpu_env</name><operator pos:start="323:20" pos:end="323:21">-&gt;</operator><name pos:start="323:22" pos:end="323:34">command_queue</name></name> <operator pos:start="323:36" pos:end="323:36">=</operator> <call pos:start="323:38" pos:end="325:69"><name pos:start="323:38" pos:end="323:57">clCreateCommandQueue</name><argument_list pos:start="323:58" pos:end="325:69">(<argument pos:start="323:59" pos:end="323:74"><expr pos:start="323:59" pos:end="323:74"><name pos:start="323:59" pos:end="323:74"><name pos:start="323:59" pos:end="323:65">gpu_env</name><operator pos:start="323:66" pos:end="323:67">-&gt;</operator><name pos:start="323:68" pos:end="323:74">context</name></name></expr></argument>, <argument pos:start="323:77" pos:end="323:98"><expr pos:start="323:77" pos:end="323:98"><name pos:start="323:77" pos:end="323:98"><name pos:start="323:77" pos:end="323:83">gpu_env</name><operator pos:start="323:84" pos:end="323:85">-&gt;</operator><name pos:start="323:86" pos:end="323:95">device_ids</name><index pos:start="323:96" pos:end="323:98">[<expr pos:start="323:97" pos:end="323:97"><name pos:start="323:97" pos:end="323:97">i</name></expr>]</index></name></expr></argument>,

                                                          <argument pos:start="325:59" pos:end="325:59"><expr pos:start="325:59" pos:end="325:59"><literal type="number" pos:start="325:59" pos:end="325:59">0</literal></expr></argument>, <argument pos:start="325:62" pos:end="325:68"><expr pos:start="325:62" pos:end="325:68"><operator pos:start="325:62" pos:end="325:62">&amp;</operator><name pos:start="325:63" pos:end="325:68">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="327:13" pos:end="335:13"><if pos:start="327:13" pos:end="335:13">if <condition pos:start="327:16" pos:end="327:37">(<expr pos:start="327:17" pos:end="327:36"><name pos:start="327:17" pos:end="327:22">status</name> <operator pos:start="327:24" pos:end="327:25">!=</operator> <name pos:start="327:27" pos:end="327:36">CL_SUCCESS</name></expr>)</condition> <block pos:start="327:39" pos:end="335:13">{<block_content pos:start="329:17" pos:end="333:25">

                <expr_stmt pos:start="329:17" pos:end="329:121"><expr pos:start="329:17" pos:end="329:120"><call pos:start="329:17" pos:end="329:120"><name pos:start="329:17" pos:end="329:22">av_log</name><argument_list pos:start="329:23" pos:end="329:120">(<argument pos:start="329:24" pos:end="329:35"><expr pos:start="329:24" pos:end="329:35"><operator pos:start="329:24" pos:end="329:24">&amp;</operator><name pos:start="329:25" pos:end="329:35">openclutils</name></expr></argument>, <argument pos:start="329:38" pos:end="329:49"><expr pos:start="329:38" pos:end="329:49"><name pos:start="329:38" pos:end="329:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="329:52" pos:end="329:96"><expr pos:start="329:52" pos:end="329:96"><literal type="string" pos:start="329:52" pos:end="329:96">"Could not create OpenCL command queue: %s\n"</literal></expr></argument>, <argument pos:start="329:99" pos:end="329:119"><expr pos:start="329:99" pos:end="329:119"><call pos:start="329:99" pos:end="329:119"><name pos:start="329:99" pos:end="329:111">opencl_errstr</name><argument_list pos:start="329:112" pos:end="329:119">(<argument pos:start="329:113" pos:end="329:118"><expr pos:start="329:113" pos:end="329:118"><name pos:start="329:113" pos:end="329:118">status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="331:17" pos:end="331:39"><expr pos:start="331:17" pos:end="331:38"><name pos:start="331:17" pos:end="331:19">ret</name> <operator pos:start="331:21" pos:end="331:21">=</operator> <name pos:start="331:23" pos:end="331:38">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

                <goto pos:start="333:17" pos:end="333:25">goto <name pos:start="333:22" pos:end="333:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

<label pos:start="341:1" pos:end="341:4"><name pos:start="341:1" pos:end="341:3">end</name>:</label>

    <expr_stmt pos:start="343:5" pos:end="343:26"><expr pos:start="343:5" pos:end="343:25"><call pos:start="343:5" pos:end="343:25"><name pos:start="343:5" pos:end="343:11">av_free</name><argument_list pos:start="343:12" pos:end="343:25">(<argument pos:start="343:13" pos:end="343:24"><expr pos:start="343:13" pos:end="343:24"><name pos:start="343:13" pos:end="343:24">platform_ids</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="345:5" pos:end="345:15">return <expr pos:start="345:12" pos:end="345:14"><name pos:start="345:12" pos:end="345:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
