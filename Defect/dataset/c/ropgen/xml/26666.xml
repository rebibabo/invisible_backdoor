<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26666.c" pos:tabs="8"><function pos:start="1:1" pos:end="319:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">dca_subsubframe</name><parameter_list pos:start="1:27" pos:end="1:76">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:37">DCAContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:58">base_channel</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:75"><decl pos:start="1:61" pos:end="1:75"><type pos:start="1:61" pos:end="1:75"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:75">block_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="319:1">{<block_content pos:start="5:5" pos:end="317:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">k</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">subsubframe</name> <init pos:start="7:21" pos:end="7:44">= <expr pos:start="7:23" pos:end="7:44"><name pos:start="7:23" pos:end="7:44"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:44">current_subsubframe</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:17"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:15">float</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:33">quant_step_table</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:15">/* FIXME */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:80"><expr pos:start="17:5" pos:end="17:79"><call pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:9">float</name> <argument_list pos:start="17:11" pos:end="17:28">(<argument pos:start="17:12" pos:end="17:27"><expr pos:start="17:12" pos:end="17:27"><operator pos:start="17:12" pos:end="17:12">*</operator><name pos:start="17:13" pos:end="17:27">subband_samples</name></expr></argument>)</argument_list></call><index pos:start="17:29" pos:end="17:42">[<expr pos:start="17:30" pos:end="17:41"><name pos:start="17:30" pos:end="17:41">DCA_SUBBANDS</name></expr>]</index><index pos:start="17:43" pos:end="17:45">[<expr pos:start="17:44" pos:end="17:44"><literal type="number" pos:start="17:44" pos:end="17:44">8</literal></expr>]</index> <operator pos:start="17:47" pos:end="17:47">=</operator> <name pos:start="17:49" pos:end="17:79"><name pos:start="17:49" pos:end="17:49">s</name><operator pos:start="17:50" pos:end="17:51">-&gt;</operator><name pos:start="17:52" pos:end="17:66">subband_samples</name><index pos:start="17:67" pos:end="17:79">[<expr pos:start="17:68" pos:end="17:78"><name pos:start="17:68" pos:end="17:78">block_index</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:57"><expr pos:start="19:5" pos:end="19:56"><call pos:start="19:5" pos:end="19:56"><name pos:start="19:5" pos:end="19:20">LOCAL_ALIGNED_16</name><argument_list pos:start="19:21" pos:end="19:56">(<argument pos:start="19:22" pos:end="19:28"><expr pos:start="19:22" pos:end="19:28"><name pos:start="19:22" pos:end="19:28">int32_t</name></expr></argument>, <argument pos:start="19:31" pos:end="19:35"><expr pos:start="19:31" pos:end="19:35"><name pos:start="19:31" pos:end="19:35">block</name></expr></argument>, <argument pos:start="19:38" pos:end="19:55"><expr pos:start="19:38" pos:end="19:55"><index pos:start="19:38" pos:end="19:55">[<expr pos:start="19:39" pos:end="19:54"><literal type="number" pos:start="19:39" pos:end="19:39">8</literal> <operator pos:start="19:41" pos:end="19:41">*</operator> <name pos:start="19:43" pos:end="19:54">DCA_SUBBANDS</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="27:7">/*

     * Audio data

     */</comment>



    <comment type="block" pos:start="31:5" pos:end="31:45">/* Select quantization step size table */</comment>

    <if_stmt pos:start="33:5" pos:end="39:41"><if pos:start="33:5" pos:end="35:44">if <condition pos:start="33:8" pos:end="33:34">(<expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:25">bit_rate_index</name></name> <operator pos:start="33:27" pos:end="33:28">==</operator> <literal type="number" pos:start="33:30" pos:end="33:33">0x1f</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:44"><block_content pos:start="35:9" pos:end="35:44">

        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:24">quant_step_table</name> <operator pos:start="35:26" pos:end="35:26">=</operator> <name pos:start="35:28" pos:end="35:43">lossless_quant_d</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="37:5" pos:end="39:41">else<block type="pseudo" pos:start="39:9" pos:end="39:41"><block_content pos:start="39:9" pos:end="39:41">

        <expr_stmt pos:start="39:9" pos:end="39:41"><expr pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:24">quant_step_table</name> <operator pos:start="39:26" pos:end="39:26">=</operator> <name pos:start="39:28" pos:end="39:40">lossy_quant_d</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <for pos:start="43:5" pos:end="279:5">for <control pos:start="43:9" pos:end="43:53">(<init pos:start="43:10" pos:end="43:26"><expr pos:start="43:10" pos:end="43:25"><name pos:start="43:10" pos:end="43:10">k</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <name pos:start="43:14" pos:end="43:25">base_channel</name></expr>;</init> <condition pos:start="43:28" pos:end="43:48"><expr pos:start="43:28" pos:end="43:47"><name pos:start="43:28" pos:end="43:28">k</name> <operator pos:start="43:30" pos:end="43:30">&lt;</operator> <name pos:start="43:32" pos:end="43:47"><name pos:start="43:32" pos:end="43:32">s</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:47">prim_channels</name></name></expr>;</condition> <incr pos:start="43:50" pos:end="43:52"><expr pos:start="43:50" pos:end="43:52"><name pos:start="43:50" pos:end="43:50">k</name><operator pos:start="43:51" pos:end="43:52">++</operator></expr></incr>)</control> <block pos:start="43:55" pos:end="279:5">{<block_content pos:start="45:9" pos:end="277:9">

        <decl_stmt pos:start="45:9" pos:end="45:35"><decl pos:start="45:9" pos:end="45:34"><type pos:start="45:9" pos:end="45:13"><name pos:start="45:9" pos:end="45:13">float</name></type> <name pos:start="45:15" pos:end="45:34"><name pos:start="45:15" pos:end="45:20">rscale</name><index pos:start="45:21" pos:end="45:34">[<expr pos:start="45:22" pos:end="45:33"><name pos:start="45:22" pos:end="45:33">DCA_SUBBANDS</name></expr>]</index></name></decl>;</decl_stmt>



        <if_stmt pos:start="49:9" pos:end="51:39"><if pos:start="49:9" pos:end="51:39">if <condition pos:start="49:12" pos:end="49:38">(<expr pos:start="49:13" pos:end="49:37"><call pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:25">get_bits_left</name><argument_list pos:start="49:26" pos:end="49:33">(<argument pos:start="49:27" pos:end="49:32"><expr pos:start="49:27" pos:end="49:32"><operator pos:start="49:27" pos:end="49:27">&amp;</operator><name pos:start="49:28" pos:end="49:32"><name pos:start="49:28" pos:end="49:28">s</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:32">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="49:35" pos:end="49:35">&lt;</operator> <literal type="number" pos:start="49:37" pos:end="49:37">0</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:39"><block_content pos:start="51:13" pos:end="51:39">

            <return pos:start="51:13" pos:end="51:39">return <expr pos:start="51:20" pos:end="51:38"><name pos:start="51:20" pos:end="51:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <for pos:start="55:9" pos:end="169:9">for <control pos:start="55:13" pos:end="55:52">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">l</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:47"><expr pos:start="55:21" pos:end="55:46"><name pos:start="55:21" pos:end="55:21">l</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <name pos:start="55:25" pos:end="55:46"><name pos:start="55:25" pos:end="55:25">s</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:43">vq_start_subband</name><index pos:start="55:44" pos:end="55:46">[<expr pos:start="55:45" pos:end="55:45"><name pos:start="55:45" pos:end="55:45">k</name></expr>]</index></name></expr>;</condition> <incr pos:start="55:49" pos:end="55:51"><expr pos:start="55:49" pos:end="55:51"><name pos:start="55:49" pos:end="55:49">l</name><operator pos:start="55:50" pos:end="55:51">++</operator></expr></incr>)</control> <block pos:start="55:54" pos:end="169:9">{<block_content pos:start="57:13" pos:end="167:13">

            <decl_stmt pos:start="57:13" pos:end="57:18"><decl pos:start="57:13" pos:end="57:17"><type pos:start="57:13" pos:end="57:15"><name pos:start="57:13" pos:end="57:15">int</name></type> <name pos:start="57:17" pos:end="57:17">m</name></decl>;</decl_stmt>



            <comment type="block" pos:start="61:13" pos:end="61:55">/* Select the mid-tread linear quantizer */</comment>

            <decl_stmt pos:start="63:13" pos:end="63:42"><decl pos:start="63:13" pos:end="63:41"><type pos:start="63:13" pos:end="63:15"><name pos:start="63:13" pos:end="63:15">int</name></type> <name pos:start="63:17" pos:end="63:21">abits</name> <init pos:start="63:23" pos:end="63:41">= <expr pos:start="63:25" pos:end="63:41"><name pos:start="63:25" pos:end="63:41"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:35">bitalloc</name><index pos:start="63:36" pos:end="63:38">[<expr pos:start="63:37" pos:end="63:37"><name pos:start="63:37" pos:end="63:37">k</name></expr>]</index><index pos:start="63:39" pos:end="63:41">[<expr pos:start="63:40" pos:end="63:40"><name pos:start="63:40" pos:end="63:40">l</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <decl_stmt pos:start="67:13" pos:end="67:60"><decl pos:start="67:13" pos:end="67:59"><type pos:start="67:13" pos:end="67:17"><name pos:start="67:13" pos:end="67:17">float</name></type> <name pos:start="67:19" pos:end="67:33">quant_step_size</name> <init pos:start="67:35" pos:end="67:59">= <expr pos:start="67:37" pos:end="67:59"><name pos:start="67:37" pos:end="67:59"><name pos:start="67:37" pos:end="67:52">quant_step_table</name><index pos:start="67:53" pos:end="67:59">[<expr pos:start="67:54" pos:end="67:58"><name pos:start="67:54" pos:end="67:58">abits</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <comment type="block" pos:start="71:13" pos:end="75:15">/*

             * Determine quantization index code book and its type

             */</comment>



            <comment type="block" pos:start="79:13" pos:end="79:53">/* Select quantization index code book */</comment>

            <decl_stmt pos:start="81:13" pos:end="81:55"><decl pos:start="81:13" pos:end="81:54"><type pos:start="81:13" pos:end="81:15"><name pos:start="81:13" pos:end="81:15">int</name></type> <name pos:start="81:17" pos:end="81:19">sel</name> <init pos:start="81:21" pos:end="81:54">= <expr pos:start="81:23" pos:end="81:54"><name pos:start="81:23" pos:end="81:54"><name pos:start="81:23" pos:end="81:23">s</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:44">quant_index_huffman</name><index pos:start="81:45" pos:end="81:47">[<expr pos:start="81:46" pos:end="81:46"><name pos:start="81:46" pos:end="81:46">k</name></expr>]</index><index pos:start="81:48" pos:end="81:54">[<expr pos:start="81:49" pos:end="81:53"><name pos:start="81:49" pos:end="81:53">abits</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <comment type="block" pos:start="85:13" pos:end="89:15">/*

             * Extract bits from the bit stream

             */</comment>

            <if_stmt pos:start="91:13" pos:end="167:13"><if pos:start="91:13" pos:end="97:13">if <condition pos:start="91:16" pos:end="91:23">(<expr pos:start="91:17" pos:end="91:22"><operator pos:start="91:17" pos:end="91:17">!</operator><name pos:start="91:18" pos:end="91:22">abits</name></expr>)</condition> <block pos:start="91:25" pos:end="97:13">{<block_content pos:start="93:17" pos:end="95:63">

                <expr_stmt pos:start="93:17" pos:end="93:30"><expr pos:start="93:17" pos:end="93:29"><name pos:start="93:17" pos:end="93:25"><name pos:start="93:17" pos:end="93:22">rscale</name><index pos:start="93:23" pos:end="93:25">[<expr pos:start="93:24" pos:end="93:24"><name pos:start="93:24" pos:end="93:24">l</name></expr>]</index></name> <operator pos:start="93:27" pos:end="93:27">=</operator> <literal type="number" pos:start="93:29" pos:end="93:29">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:63"><expr pos:start="95:17" pos:end="95:62"><call pos:start="95:17" pos:end="95:62"><name pos:start="95:17" pos:end="95:22">memset</name><argument_list pos:start="95:23" pos:end="95:62">(<argument pos:start="95:24" pos:end="95:36"><expr pos:start="95:24" pos:end="95:36"><name pos:start="95:24" pos:end="95:28">block</name> <operator pos:start="95:30" pos:end="95:30">+</operator> <literal type="number" pos:start="95:32" pos:end="95:32">8</literal> <operator pos:start="95:34" pos:end="95:34">*</operator> <name pos:start="95:36" pos:end="95:36">l</name></expr></argument>, <argument pos:start="95:39" pos:end="95:39"><expr pos:start="95:39" pos:end="95:39"><literal type="number" pos:start="95:39" pos:end="95:39">0</literal></expr></argument>, <argument pos:start="95:42" pos:end="95:61"><expr pos:start="95:42" pos:end="95:61"><literal type="number" pos:start="95:42" pos:end="95:42">8</literal> <operator pos:start="95:44" pos:end="95:44">*</operator> <sizeof pos:start="95:46" pos:end="95:61">sizeof<argument_list pos:start="95:52" pos:end="95:61">(<argument pos:start="95:53" pos:end="95:60"><expr pos:start="95:53" pos:end="95:60"><name pos:start="95:53" pos:end="95:60"><name pos:start="95:53" pos:end="95:57">block</name><index pos:start="95:58" pos:end="95:60">[<expr pos:start="95:59" pos:end="95:59"><literal type="number" pos:start="95:59" pos:end="95:59">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="97:15" pos:end="167:13">else <block pos:start="97:20" pos:end="167:13">{<block_content pos:start="101:17" pos:end="163:17">

                <comment type="block" pos:start="99:17" pos:end="99:42">/* Deal with transients */</comment>

                <decl_stmt pos:start="101:17" pos:end="101:94"><decl pos:start="101:17" pos:end="101:93"><type pos:start="101:17" pos:end="101:19"><name pos:start="101:17" pos:end="101:19">int</name></type> <name pos:start="101:21" pos:end="101:23">sfi</name> <init pos:start="101:25" pos:end="101:93">= <expr pos:start="101:27" pos:end="101:93"><name pos:start="101:27" pos:end="101:50"><name pos:start="101:27" pos:end="101:27">s</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:44">transition_mode</name><index pos:start="101:45" pos:end="101:47">[<expr pos:start="101:46" pos:end="101:46"><name pos:start="101:46" pos:end="101:46">k</name></expr>]</index><index pos:start="101:48" pos:end="101:50">[<expr pos:start="101:49" pos:end="101:49"><name pos:start="101:49" pos:end="101:49">l</name></expr>]</index></name> <operator pos:start="101:52" pos:end="101:53">&amp;&amp;</operator> <name pos:start="101:55" pos:end="101:65">subsubframe</name> <operator pos:start="101:67" pos:end="101:68">&gt;=</operator> <name pos:start="101:70" pos:end="101:93"><name pos:start="101:70" pos:end="101:70">s</name><operator pos:start="101:71" pos:end="101:72">-&gt;</operator><name pos:start="101:73" pos:end="101:87">transition_mode</name><index pos:start="101:88" pos:end="101:90">[<expr pos:start="101:89" pos:end="101:89"><name pos:start="101:89" pos:end="101:89">k</name></expr>]</index><index pos:start="101:91" pos:end="101:93">[<expr pos:start="101:92" pos:end="101:92"><name pos:start="101:92" pos:end="101:92">l</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="103:17" pos:end="105:58"><expr pos:start="103:17" pos:end="105:57"><name pos:start="103:17" pos:end="103:25"><name pos:start="103:17" pos:end="103:22">rscale</name><index pos:start="103:23" pos:end="103:25">[<expr pos:start="103:24" pos:end="103:24"><name pos:start="103:24" pos:end="103:24">l</name></expr>]</index></name> <operator pos:start="103:27" pos:end="103:27">=</operator> <name pos:start="103:29" pos:end="103:43">quant_step_size</name> <operator pos:start="103:45" pos:end="103:45">*</operator> <name pos:start="103:47" pos:end="103:72"><name pos:start="103:47" pos:end="103:47">s</name><operator pos:start="103:48" pos:end="103:49">-&gt;</operator><name pos:start="103:50" pos:end="103:61">scale_factor</name><index pos:start="103:62" pos:end="103:64">[<expr pos:start="103:63" pos:end="103:63"><name pos:start="103:63" pos:end="103:63">k</name></expr>]</index><index pos:start="103:65" pos:end="103:67">[<expr pos:start="103:66" pos:end="103:66"><name pos:start="103:66" pos:end="103:66">l</name></expr>]</index><index pos:start="103:68" pos:end="103:72">[<expr pos:start="103:69" pos:end="103:71"><name pos:start="103:69" pos:end="103:71">sfi</name></expr>]</index></name> <operator pos:start="103:74" pos:end="103:74">*</operator>

                               <name pos:start="105:32" pos:end="105:57"><name pos:start="105:32" pos:end="105:32">s</name><operator pos:start="105:33" pos:end="105:34">-&gt;</operator><name pos:start="105:35" pos:end="105:49">scalefactor_adj</name><index pos:start="105:50" pos:end="105:52">[<expr pos:start="105:51" pos:end="105:51"><name pos:start="105:51" pos:end="105:51">k</name></expr>]</index><index pos:start="105:53" pos:end="105:57">[<expr pos:start="105:54" pos:end="105:56"><name pos:start="105:54" pos:end="105:56">sel</name></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="109:17" pos:end="163:17"><if pos:start="109:17" pos:end="153:17">if <condition pos:start="109:20" pos:end="109:76">(<expr pos:start="109:21" pos:end="109:75"><name pos:start="109:21" pos:end="109:25">abits</name> <operator pos:start="109:27" pos:end="109:28">&gt;=</operator> <literal type="number" pos:start="109:30" pos:end="109:31">11</literal> <operator pos:start="109:33" pos:end="109:34">||</operator> <operator pos:start="109:36" pos:end="109:36">!</operator><name pos:start="109:37" pos:end="109:60"><name pos:start="109:37" pos:end="109:53">dca_smpl_bitalloc</name><index pos:start="109:54" pos:end="109:60">[<expr pos:start="109:55" pos:end="109:59"><name pos:start="109:55" pos:end="109:59">abits</name></expr>]</index></name><operator pos:start="109:61" pos:end="109:61">.</operator><name pos:start="109:62" pos:end="109:69"><name pos:start="109:62" pos:end="109:64">vlc</name><index pos:start="109:65" pos:end="109:69">[<expr pos:start="109:66" pos:end="109:68"><name pos:start="109:66" pos:end="109:68">sel</name></expr>]</index></name><operator pos:start="109:70" pos:end="109:70">.</operator><name pos:start="109:71" pos:end="109:75">table</name></expr>)</condition> <block pos:start="109:78" pos:end="153:17">{<block_content pos:start="111:21" pos:end="151:21">

                    <if_stmt pos:start="111:21" pos:end="151:21"><if pos:start="111:21" pos:end="143:21">if <condition pos:start="111:24" pos:end="111:35">(<expr pos:start="111:25" pos:end="111:34"><name pos:start="111:25" pos:end="111:29">abits</name> <operator pos:start="111:31" pos:end="111:32">&lt;=</operator> <literal type="number" pos:start="111:34" pos:end="111:34">7</literal></expr>)</condition> <block pos:start="111:37" pos:end="143:21">{<block_content pos:start="115:25" pos:end="141:25">

                        <comment type="block" pos:start="113:25" pos:end="113:40">/* Block code */</comment>

                        <decl_stmt pos:start="115:25" pos:end="115:72"><decl pos:start="115:25" pos:end="115:39"><type pos:start="115:25" pos:end="115:27"><name pos:start="115:25" pos:end="115:27">int</name></type> <name pos:start="115:29" pos:end="115:39">block_code1</name></decl>, <decl pos:start="115:42" pos:end="115:52"><type ref="prev" pos:start="115:25" pos:end="115:27"/><name pos:start="115:42" pos:end="115:52">block_code2</name></decl>, <decl pos:start="115:55" pos:end="115:58"><type ref="prev" pos:start="115:25" pos:end="115:27"/><name pos:start="115:55" pos:end="115:58">size</name></decl>, <decl pos:start="115:61" pos:end="115:66"><type ref="prev" pos:start="115:25" pos:end="115:27"/><name pos:start="115:61" pos:end="115:66">levels</name></decl>, <decl pos:start="115:69" pos:end="115:71"><type ref="prev" pos:start="115:25" pos:end="115:27"/><name pos:start="115:69" pos:end="115:71">err</name></decl>;</decl_stmt>



                        <expr_stmt pos:start="119:25" pos:end="119:56"><expr pos:start="119:25" pos:end="119:55"><name pos:start="119:25" pos:end="119:28">size</name>   <operator pos:start="119:32" pos:end="119:32">=</operator> <name pos:start="119:34" pos:end="119:55"><name pos:start="119:34" pos:end="119:44">abits_sizes</name><index pos:start="119:45" pos:end="119:55">[<expr pos:start="119:46" pos:end="119:54"><name pos:start="119:46" pos:end="119:50">abits</name> <operator pos:start="119:52" pos:end="119:52">-</operator> <literal type="number" pos:start="119:54" pos:end="119:54">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="121:25" pos:end="121:57"><expr pos:start="121:25" pos:end="121:56"><name pos:start="121:25" pos:end="121:30">levels</name> <operator pos:start="121:32" pos:end="121:32">=</operator> <name pos:start="121:34" pos:end="121:56"><name pos:start="121:34" pos:end="121:45">abits_levels</name><index pos:start="121:46" pos:end="121:56">[<expr pos:start="121:47" pos:end="121:55"><name pos:start="121:47" pos:end="121:51">abits</name> <operator pos:start="121:53" pos:end="121:53">-</operator> <literal type="number" pos:start="121:55" pos:end="121:55">1</literal></expr>]</index></name></expr>;</expr_stmt>



                        <expr_stmt pos:start="125:25" pos:end="125:61"><expr pos:start="125:25" pos:end="125:60"><name pos:start="125:25" pos:end="125:35">block_code1</name> <operator pos:start="125:37" pos:end="125:37">=</operator> <call pos:start="125:39" pos:end="125:60"><name pos:start="125:39" pos:end="125:46">get_bits</name><argument_list pos:start="125:47" pos:end="125:60">(<argument pos:start="125:48" pos:end="125:53"><expr pos:start="125:48" pos:end="125:53"><operator pos:start="125:48" pos:end="125:48">&amp;</operator><name pos:start="125:49" pos:end="125:53"><name pos:start="125:49" pos:end="125:49">s</name><operator pos:start="125:50" pos:end="125:51">-&gt;</operator><name pos:start="125:52" pos:end="125:53">gb</name></name></expr></argument>, <argument pos:start="125:56" pos:end="125:59"><expr pos:start="125:56" pos:end="125:59"><name pos:start="125:56" pos:end="125:59">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="127:25" pos:end="127:61"><expr pos:start="127:25" pos:end="127:60"><name pos:start="127:25" pos:end="127:35">block_code2</name> <operator pos:start="127:37" pos:end="127:37">=</operator> <call pos:start="127:39" pos:end="127:60"><name pos:start="127:39" pos:end="127:46">get_bits</name><argument_list pos:start="127:47" pos:end="127:60">(<argument pos:start="127:48" pos:end="127:53"><expr pos:start="127:48" pos:end="127:53"><operator pos:start="127:48" pos:end="127:48">&amp;</operator><name pos:start="127:49" pos:end="127:53"><name pos:start="127:49" pos:end="127:49">s</name><operator pos:start="127:50" pos:end="127:51">-&gt;</operator><name pos:start="127:52" pos:end="127:53">gb</name></name></expr></argument>, <argument pos:start="127:56" pos:end="127:59"><expr pos:start="127:56" pos:end="127:59"><name pos:start="127:56" pos:end="127:59">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="129:25" pos:end="131:71"><expr pos:start="129:25" pos:end="131:70"><name pos:start="129:25" pos:end="129:27">err</name> <operator pos:start="129:29" pos:end="129:29">=</operator> <call pos:start="129:31" pos:end="131:70"><name pos:start="129:31" pos:end="129:47">decode_blockcodes</name><argument_list pos:start="129:48" pos:end="131:70">(<argument pos:start="129:49" pos:end="129:59"><expr pos:start="129:49" pos:end="129:59"><name pos:start="129:49" pos:end="129:59">block_code1</name></expr></argument>, <argument pos:start="129:62" pos:end="129:72"><expr pos:start="129:62" pos:end="129:72"><name pos:start="129:62" pos:end="129:72">block_code2</name></expr></argument>,

                                                <argument pos:start="131:49" pos:end="131:54"><expr pos:start="131:49" pos:end="131:54"><name pos:start="131:49" pos:end="131:54">levels</name></expr></argument>, <argument pos:start="131:57" pos:end="131:69"><expr pos:start="131:57" pos:end="131:69"><name pos:start="131:57" pos:end="131:61">block</name> <operator pos:start="131:63" pos:end="131:63">+</operator> <literal type="number" pos:start="131:65" pos:end="131:65">8</literal> <operator pos:start="131:67" pos:end="131:67">*</operator> <name pos:start="131:69" pos:end="131:69">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="133:25" pos:end="141:25"><if pos:start="133:25" pos:end="141:25">if <condition pos:start="133:28" pos:end="133:32">(<expr pos:start="133:29" pos:end="133:31"><name pos:start="133:29" pos:end="133:31">err</name></expr>)</condition> <block pos:start="133:34" pos:end="141:25">{<block_content pos:start="135:29" pos:end="139:55">

                            <expr_stmt pos:start="135:29" pos:end="137:73"><expr pos:start="135:29" pos:end="137:72"><call pos:start="135:29" pos:end="137:72"><name pos:start="135:29" pos:end="135:34">av_log</name><argument_list pos:start="135:35" pos:end="137:72">(<argument pos:start="135:36" pos:end="135:43"><expr pos:start="135:36" pos:end="135:43"><name pos:start="135:36" pos:end="135:43"><name pos:start="135:36" pos:end="135:36">s</name><operator pos:start="135:37" pos:end="135:38">-&gt;</operator><name pos:start="135:39" pos:end="135:43">avctx</name></name></expr></argument>, <argument pos:start="135:46" pos:end="135:57"><expr pos:start="135:46" pos:end="135:57"><name pos:start="135:46" pos:end="135:57">AV_LOG_ERROR</name></expr></argument>,

                                   <argument pos:start="137:36" pos:end="137:71"><expr pos:start="137:36" pos:end="137:71"><literal type="string" pos:start="137:36" pos:end="137:71">"ERROR: block code look-up failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="139:29" pos:end="139:55">return <expr pos:start="139:36" pos:end="139:54"><name pos:start="139:36" pos:end="139:54">AVERROR_INVALIDDATA</name></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if> <else pos:start="143:23" pos:end="151:21">else <block pos:start="143:28" pos:end="151:21">{<block_content pos:start="147:25" pos:end="149:76">

                        <comment type="block" pos:start="145:25" pos:end="145:39">/* no coding */</comment>

                        <for pos:start="147:25" pos:end="149:76">for <control pos:start="147:29" pos:end="147:47">(<init pos:start="147:30" pos:end="147:35"><expr pos:start="147:30" pos:end="147:34"><name pos:start="147:30" pos:end="147:30">m</name> <operator pos:start="147:32" pos:end="147:32">=</operator> <literal type="number" pos:start="147:34" pos:end="147:34">0</literal></expr>;</init> <condition pos:start="147:37" pos:end="147:42"><expr pos:start="147:37" pos:end="147:41"><name pos:start="147:37" pos:end="147:37">m</name> <operator pos:start="147:39" pos:end="147:39">&lt;</operator> <literal type="number" pos:start="147:41" pos:end="147:41">8</literal></expr>;</condition> <incr pos:start="147:44" pos:end="147:46"><expr pos:start="147:44" pos:end="147:46"><name pos:start="147:44" pos:end="147:44">m</name><operator pos:start="147:45" pos:end="147:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="149:29" pos:end="149:76"><block_content pos:start="149:29" pos:end="149:76">

                            <expr_stmt pos:start="149:29" pos:end="149:76"><expr pos:start="149:29" pos:end="149:75"><name pos:start="149:29" pos:end="149:44"><name pos:start="149:29" pos:end="149:33">block</name><index pos:start="149:34" pos:end="149:44">[<expr pos:start="149:35" pos:end="149:43"><literal type="number" pos:start="149:35" pos:end="149:35">8</literal> <operator pos:start="149:37" pos:end="149:37">*</operator> <name pos:start="149:39" pos:end="149:39">l</name> <operator pos:start="149:41" pos:end="149:41">+</operator> <name pos:start="149:43" pos:end="149:43">m</name></expr>]</index></name> <operator pos:start="149:46" pos:end="149:46">=</operator> <call pos:start="149:48" pos:end="149:75"><name pos:start="149:48" pos:end="149:56">get_sbits</name><argument_list pos:start="149:57" pos:end="149:75">(<argument pos:start="149:58" pos:end="149:63"><expr pos:start="149:58" pos:end="149:63"><operator pos:start="149:58" pos:end="149:58">&amp;</operator><name pos:start="149:59" pos:end="149:63"><name pos:start="149:59" pos:end="149:59">s</name><operator pos:start="149:60" pos:end="149:61">-&gt;</operator><name pos:start="149:62" pos:end="149:63">gb</name></name></expr></argument>, <argument pos:start="149:66" pos:end="149:74"><expr pos:start="149:66" pos:end="149:74"><name pos:start="149:66" pos:end="149:70">abits</name> <operator pos:start="149:72" pos:end="149:72">-</operator> <literal type="number" pos:start="149:74" pos:end="149:74">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="153:19" pos:end="163:17">else <block pos:start="153:24" pos:end="163:17">{<block_content pos:start="157:21" pos:end="161:80">

                    <comment type="block" pos:start="155:21" pos:end="155:39">/* Huffman coded */</comment>

                    <for pos:start="157:21" pos:end="161:80">for <control pos:start="157:25" pos:end="157:43">(<init pos:start="157:26" pos:end="157:31"><expr pos:start="157:26" pos:end="157:30"><name pos:start="157:26" pos:end="157:26">m</name> <operator pos:start="157:28" pos:end="157:28">=</operator> <literal type="number" pos:start="157:30" pos:end="157:30">0</literal></expr>;</init> <condition pos:start="157:33" pos:end="157:38"><expr pos:start="157:33" pos:end="157:37"><name pos:start="157:33" pos:end="157:33">m</name> <operator pos:start="157:35" pos:end="157:35">&lt;</operator> <literal type="number" pos:start="157:37" pos:end="157:37">8</literal></expr>;</condition> <incr pos:start="157:40" pos:end="157:42"><expr pos:start="157:40" pos:end="157:42"><name pos:start="157:40" pos:end="157:40">m</name><operator pos:start="157:41" pos:end="157:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="159:25" pos:end="161:80"><block_content pos:start="159:25" pos:end="161:80">

                        <expr_stmt pos:start="159:25" pos:end="161:80"><expr pos:start="159:25" pos:end="161:79"><name pos:start="159:25" pos:end="159:40"><name pos:start="159:25" pos:end="159:29">block</name><index pos:start="159:30" pos:end="159:40">[<expr pos:start="159:31" pos:end="159:39"><literal type="number" pos:start="159:31" pos:end="159:31">8</literal> <operator pos:start="159:33" pos:end="159:33">*</operator> <name pos:start="159:35" pos:end="159:35">l</name> <operator pos:start="159:37" pos:end="159:37">+</operator> <name pos:start="159:39" pos:end="159:39">m</name></expr>]</index></name> <operator pos:start="159:42" pos:end="159:42">=</operator> <call pos:start="159:44" pos:end="161:79"><name pos:start="159:44" pos:end="159:55">get_bitalloc</name><argument_list pos:start="159:56" pos:end="161:79">(<argument pos:start="159:57" pos:end="159:62"><expr pos:start="159:57" pos:end="159:62"><operator pos:start="159:57" pos:end="159:57">&amp;</operator><name pos:start="159:58" pos:end="159:62"><name pos:start="159:58" pos:end="159:58">s</name><operator pos:start="159:59" pos:end="159:60">-&gt;</operator><name pos:start="159:61" pos:end="159:62">gb</name></name></expr></argument>,

                                                <argument pos:start="161:49" pos:end="161:73"><expr pos:start="161:49" pos:end="161:73"><operator pos:start="161:49" pos:end="161:49">&amp;</operator><name pos:start="161:50" pos:end="161:73"><name pos:start="161:50" pos:end="161:66">dca_smpl_bitalloc</name><index pos:start="161:67" pos:end="161:73">[<expr pos:start="161:68" pos:end="161:72"><name pos:start="161:68" pos:end="161:72">abits</name></expr>]</index></name></expr></argument>, <argument pos:start="161:76" pos:end="161:78"><expr pos:start="161:76" pos:end="161:78"><name pos:start="161:76" pos:end="161:78">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></else></if_stmt>



            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="173:9" pos:end="175:90"><expr pos:start="173:9" pos:end="175:89"><call pos:start="173:9" pos:end="175:89"><name pos:start="173:9" pos:end="173:46"><name pos:start="173:9" pos:end="173:9">s</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:19">fmt_conv</name><operator pos:start="173:20" pos:end="173:20">.</operator><name pos:start="173:21" pos:end="173:46">int32_to_float_fmul_array8</name></name><argument_list pos:start="173:47" pos:end="175:89">(<argument pos:start="173:48" pos:end="173:59"><expr pos:start="173:48" pos:end="173:59"><operator pos:start="173:48" pos:end="173:48">&amp;</operator><name pos:start="173:49" pos:end="173:59"><name pos:start="173:49" pos:end="173:49">s</name><operator pos:start="173:50" pos:end="173:51">-&gt;</operator><name pos:start="173:52" pos:end="173:59">fmt_conv</name></name></expr></argument>, <argument pos:start="173:62" pos:end="173:82"><expr pos:start="173:62" pos:end="173:82"><name pos:start="173:62" pos:end="173:82"><name pos:start="173:62" pos:end="173:76">subband_samples</name><index pos:start="173:77" pos:end="173:79">[<expr pos:start="173:78" pos:end="173:78"><name pos:start="173:78" pos:end="173:78">k</name></expr>]</index><index pos:start="173:80" pos:end="173:82">[<expr pos:start="173:81" pos:end="173:81"><literal type="number" pos:start="173:81" pos:end="173:81">0</literal></expr>]</index></name></expr></argument>,

                                               <argument pos:start="175:48" pos:end="175:52"><expr pos:start="175:48" pos:end="175:52"><name pos:start="175:48" pos:end="175:52">block</name></expr></argument>, <argument pos:start="175:55" pos:end="175:60"><expr pos:start="175:55" pos:end="175:60"><name pos:start="175:55" pos:end="175:60">rscale</name></expr></argument>, <argument pos:start="175:63" pos:end="175:88"><expr pos:start="175:63" pos:end="175:88"><literal type="number" pos:start="175:63" pos:end="175:63">8</literal> <operator pos:start="175:65" pos:end="175:65">*</operator> <name pos:start="175:67" pos:end="175:88"><name pos:start="175:67" pos:end="175:67">s</name><operator pos:start="175:68" pos:end="175:69">-&gt;</operator><name pos:start="175:70" pos:end="175:85">vq_start_subband</name><index pos:start="175:86" pos:end="175:88">[<expr pos:start="175:87" pos:end="175:87"><name pos:start="175:87" pos:end="175:87">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="179:9" pos:end="239:9">for <control pos:start="179:13" pos:end="179:52">(<init pos:start="179:14" pos:end="179:19"><expr pos:start="179:14" pos:end="179:18"><name pos:start="179:14" pos:end="179:14">l</name> <operator pos:start="179:16" pos:end="179:16">=</operator> <literal type="number" pos:start="179:18" pos:end="179:18">0</literal></expr>;</init> <condition pos:start="179:21" pos:end="179:47"><expr pos:start="179:21" pos:end="179:46"><name pos:start="179:21" pos:end="179:21">l</name> <operator pos:start="179:23" pos:end="179:23">&lt;</operator> <name pos:start="179:25" pos:end="179:46"><name pos:start="179:25" pos:end="179:25">s</name><operator pos:start="179:26" pos:end="179:27">-&gt;</operator><name pos:start="179:28" pos:end="179:43">vq_start_subband</name><index pos:start="179:44" pos:end="179:46">[<expr pos:start="179:45" pos:end="179:45"><name pos:start="179:45" pos:end="179:45">k</name></expr>]</index></name></expr>;</condition> <incr pos:start="179:49" pos:end="179:51"><expr pos:start="179:49" pos:end="179:51"><name pos:start="179:49" pos:end="179:49">l</name><operator pos:start="179:50" pos:end="179:51">++</operator></expr></incr>)</control> <block pos:start="179:54" pos:end="239:9">{<block_content pos:start="181:13" pos:end="237:13">

            <decl_stmt pos:start="181:13" pos:end="181:18"><decl pos:start="181:13" pos:end="181:17"><type pos:start="181:13" pos:end="181:15"><name pos:start="181:13" pos:end="181:15">int</name></type> <name pos:start="181:17" pos:end="181:17">m</name></decl>;</decl_stmt>

            <comment type="block" pos:start="183:13" pos:end="187:15">/*

             * Inverse ADPCM if in prediction mode

             */</comment>

            <if_stmt pos:start="189:13" pos:end="237:13"><if pos:start="189:13" pos:end="237:13">if <condition pos:start="189:16" pos:end="189:41">(<expr pos:start="189:17" pos:end="189:40"><name pos:start="189:17" pos:end="189:40"><name pos:start="189:17" pos:end="189:17">s</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:34">prediction_mode</name><index pos:start="189:35" pos:end="189:37">[<expr pos:start="189:36" pos:end="189:36"><name pos:start="189:36" pos:end="189:36">k</name></expr>]</index><index pos:start="189:38" pos:end="189:40">[<expr pos:start="189:39" pos:end="189:39"><name pos:start="189:39" pos:end="189:39">l</name></expr>]</index></name></expr>)</condition> <block pos:start="189:43" pos:end="237:13">{<block_content pos:start="191:17" pos:end="235:17">

                <decl_stmt pos:start="191:17" pos:end="191:22"><decl pos:start="191:17" pos:end="191:21"><type pos:start="191:17" pos:end="191:19"><name pos:start="191:17" pos:end="191:19">int</name></type> <name pos:start="191:21" pos:end="191:21">n</name></decl>;</decl_stmt>

                <if_stmt pos:start="193:17" pos:end="211:62"><if pos:start="193:17" pos:end="211:62">if <condition pos:start="193:20" pos:end="193:41">(<expr pos:start="193:21" pos:end="193:40"><name pos:start="193:21" pos:end="193:40"><name pos:start="193:21" pos:end="193:21">s</name><operator pos:start="193:22" pos:end="193:23">-&gt;</operator><name pos:start="193:24" pos:end="193:40">predictor_history</name></name></expr>)</condition><block type="pseudo" pos:start="195:21" pos:end="211:62"><block_content pos:start="195:21" pos:end="211:62">

                    <expr_stmt pos:start="195:21" pos:end="211:62"><expr pos:start="195:21" pos:end="211:61"><name pos:start="195:21" pos:end="195:44"><name pos:start="195:21" pos:end="195:35">subband_samples</name><index pos:start="195:36" pos:end="195:38">[<expr pos:start="195:37" pos:end="195:37"><name pos:start="195:37" pos:end="195:37">k</name></expr>]</index><index pos:start="195:39" pos:end="195:41">[<expr pos:start="195:40" pos:end="195:40"><name pos:start="195:40" pos:end="195:40">l</name></expr>]</index><index pos:start="195:42" pos:end="195:44">[<expr pos:start="195:43" pos:end="195:43"><literal type="number" pos:start="195:43" pos:end="195:43">0</literal></expr>]</index></name> <operator pos:start="195:46" pos:end="195:47">+=</operator> <operator pos:start="195:49" pos:end="195:49">(</operator><name pos:start="195:50" pos:end="195:84"><name pos:start="195:50" pos:end="195:57">adpcm_vb</name><index pos:start="195:58" pos:end="195:81">[<expr pos:start="195:59" pos:end="195:80"><name pos:start="195:59" pos:end="195:80"><name pos:start="195:59" pos:end="195:59">s</name><operator pos:start="195:60" pos:end="195:61">-&gt;</operator><name pos:start="195:62" pos:end="195:74">prediction_vq</name><index pos:start="195:75" pos:end="195:77">[<expr pos:start="195:76" pos:end="195:76"><name pos:start="195:76" pos:end="195:76">k</name></expr>]</index><index pos:start="195:78" pos:end="195:80">[<expr pos:start="195:79" pos:end="195:79"><name pos:start="195:79" pos:end="195:79">l</name></expr>]</index></name></expr>]</index><index pos:start="195:82" pos:end="195:84">[<expr pos:start="195:83" pos:end="195:83"><literal type="number" pos:start="195:83" pos:end="195:83">0</literal></expr>]</index></name> <operator pos:start="195:86" pos:end="195:86">*</operator>

                                                 <name pos:start="197:50" pos:end="197:81"><name pos:start="197:50" pos:end="197:50">s</name><operator pos:start="197:51" pos:end="197:52">-&gt;</operator><name pos:start="197:53" pos:end="197:72">subband_samples_hist</name><index pos:start="197:73" pos:end="197:75">[<expr pos:start="197:74" pos:end="197:74"><name pos:start="197:74" pos:end="197:74">k</name></expr>]</index><index pos:start="197:76" pos:end="197:78">[<expr pos:start="197:77" pos:end="197:77"><name pos:start="197:77" pos:end="197:77">l</name></expr>]</index><index pos:start="197:79" pos:end="197:81">[<expr pos:start="197:80" pos:end="197:80"><literal type="number" pos:start="197:80" pos:end="197:80">3</literal></expr>]</index></name> <operator pos:start="197:83" pos:end="197:83">+</operator>

                                                 <name pos:start="199:50" pos:end="199:84"><name pos:start="199:50" pos:end="199:57">adpcm_vb</name><index pos:start="199:58" pos:end="199:81">[<expr pos:start="199:59" pos:end="199:80"><name pos:start="199:59" pos:end="199:80"><name pos:start="199:59" pos:end="199:59">s</name><operator pos:start="199:60" pos:end="199:61">-&gt;</operator><name pos:start="199:62" pos:end="199:74">prediction_vq</name><index pos:start="199:75" pos:end="199:77">[<expr pos:start="199:76" pos:end="199:76"><name pos:start="199:76" pos:end="199:76">k</name></expr>]</index><index pos:start="199:78" pos:end="199:80">[<expr pos:start="199:79" pos:end="199:79"><name pos:start="199:79" pos:end="199:79">l</name></expr>]</index></name></expr>]</index><index pos:start="199:82" pos:end="199:84">[<expr pos:start="199:83" pos:end="199:83"><literal type="number" pos:start="199:83" pos:end="199:83">1</literal></expr>]</index></name> <operator pos:start="199:86" pos:end="199:86">*</operator>

                                                 <name pos:start="201:50" pos:end="201:81"><name pos:start="201:50" pos:end="201:50">s</name><operator pos:start="201:51" pos:end="201:52">-&gt;</operator><name pos:start="201:53" pos:end="201:72">subband_samples_hist</name><index pos:start="201:73" pos:end="201:75">[<expr pos:start="201:74" pos:end="201:74"><name pos:start="201:74" pos:end="201:74">k</name></expr>]</index><index pos:start="201:76" pos:end="201:78">[<expr pos:start="201:77" pos:end="201:77"><name pos:start="201:77" pos:end="201:77">l</name></expr>]</index><index pos:start="201:79" pos:end="201:81">[<expr pos:start="201:80" pos:end="201:80"><literal type="number" pos:start="201:80" pos:end="201:80">2</literal></expr>]</index></name> <operator pos:start="201:83" pos:end="201:83">+</operator>

                                                 <name pos:start="203:50" pos:end="203:84"><name pos:start="203:50" pos:end="203:57">adpcm_vb</name><index pos:start="203:58" pos:end="203:81">[<expr pos:start="203:59" pos:end="203:80"><name pos:start="203:59" pos:end="203:80"><name pos:start="203:59" pos:end="203:59">s</name><operator pos:start="203:60" pos:end="203:61">-&gt;</operator><name pos:start="203:62" pos:end="203:74">prediction_vq</name><index pos:start="203:75" pos:end="203:77">[<expr pos:start="203:76" pos:end="203:76"><name pos:start="203:76" pos:end="203:76">k</name></expr>]</index><index pos:start="203:78" pos:end="203:80">[<expr pos:start="203:79" pos:end="203:79"><name pos:start="203:79" pos:end="203:79">l</name></expr>]</index></name></expr>]</index><index pos:start="203:82" pos:end="203:84">[<expr pos:start="203:83" pos:end="203:83"><literal type="number" pos:start="203:83" pos:end="203:83">2</literal></expr>]</index></name> <operator pos:start="203:86" pos:end="203:86">*</operator>

                                                 <name pos:start="205:50" pos:end="205:81"><name pos:start="205:50" pos:end="205:50">s</name><operator pos:start="205:51" pos:end="205:52">-&gt;</operator><name pos:start="205:53" pos:end="205:72">subband_samples_hist</name><index pos:start="205:73" pos:end="205:75">[<expr pos:start="205:74" pos:end="205:74"><name pos:start="205:74" pos:end="205:74">k</name></expr>]</index><index pos:start="205:76" pos:end="205:78">[<expr pos:start="205:77" pos:end="205:77"><name pos:start="205:77" pos:end="205:77">l</name></expr>]</index><index pos:start="205:79" pos:end="205:81">[<expr pos:start="205:80" pos:end="205:80"><literal type="number" pos:start="205:80" pos:end="205:80">1</literal></expr>]</index></name> <operator pos:start="205:83" pos:end="205:83">+</operator>

                                                 <name pos:start="207:50" pos:end="207:84"><name pos:start="207:50" pos:end="207:57">adpcm_vb</name><index pos:start="207:58" pos:end="207:81">[<expr pos:start="207:59" pos:end="207:80"><name pos:start="207:59" pos:end="207:80"><name pos:start="207:59" pos:end="207:59">s</name><operator pos:start="207:60" pos:end="207:61">-&gt;</operator><name pos:start="207:62" pos:end="207:74">prediction_vq</name><index pos:start="207:75" pos:end="207:77">[<expr pos:start="207:76" pos:end="207:76"><name pos:start="207:76" pos:end="207:76">k</name></expr>]</index><index pos:start="207:78" pos:end="207:80">[<expr pos:start="207:79" pos:end="207:79"><name pos:start="207:79" pos:end="207:79">l</name></expr>]</index></name></expr>]</index><index pos:start="207:82" pos:end="207:84">[<expr pos:start="207:83" pos:end="207:83"><literal type="number" pos:start="207:83" pos:end="207:83">3</literal></expr>]</index></name> <operator pos:start="207:86" pos:end="207:86">*</operator>

                                                 <name pos:start="209:50" pos:end="209:81"><name pos:start="209:50" pos:end="209:50">s</name><operator pos:start="209:51" pos:end="209:52">-&gt;</operator><name pos:start="209:53" pos:end="209:72">subband_samples_hist</name><index pos:start="209:73" pos:end="209:75">[<expr pos:start="209:74" pos:end="209:74"><name pos:start="209:74" pos:end="209:74">k</name></expr>]</index><index pos:start="209:76" pos:end="209:78">[<expr pos:start="209:77" pos:end="209:77"><name pos:start="209:77" pos:end="209:77">l</name></expr>]</index><index pos:start="209:79" pos:end="209:81">[<expr pos:start="209:80" pos:end="209:80"><literal type="number" pos:start="209:80" pos:end="209:80">0</literal></expr>]</index></name><operator pos:start="209:82" pos:end="209:82">)</operator> <operator pos:start="209:84" pos:end="209:84">*</operator>

                                                <operator pos:start="211:49" pos:end="211:49">(</operator><literal type="number" pos:start="211:50" pos:end="211:53">1.0f</literal> <operator pos:start="211:55" pos:end="211:55">/</operator> <literal type="number" pos:start="211:57" pos:end="211:60">8192</literal><operator pos:start="211:61" pos:end="211:61">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <for pos:start="213:17" pos:end="235:17">for <control pos:start="213:21" pos:end="213:39">(<init pos:start="213:22" pos:end="213:27"><expr pos:start="213:22" pos:end="213:26"><name pos:start="213:22" pos:end="213:22">m</name> <operator pos:start="213:24" pos:end="213:24">=</operator> <literal type="number" pos:start="213:26" pos:end="213:26">1</literal></expr>;</init> <condition pos:start="213:29" pos:end="213:34"><expr pos:start="213:29" pos:end="213:33"><name pos:start="213:29" pos:end="213:29">m</name> <operator pos:start="213:31" pos:end="213:31">&lt;</operator> <literal type="number" pos:start="213:33" pos:end="213:33">8</literal></expr>;</condition> <incr pos:start="213:36" pos:end="213:38"><expr pos:start="213:36" pos:end="213:38"><name pos:start="213:36" pos:end="213:36">m</name><operator pos:start="213:37" pos:end="213:38">++</operator></expr></incr>)</control> <block pos:start="213:41" pos:end="235:17">{<block_content pos:start="215:21" pos:end="233:66">

                    <decl_stmt pos:start="215:21" pos:end="217:61"><decl pos:start="215:21" pos:end="217:60"><type pos:start="215:21" pos:end="215:25"><name pos:start="215:21" pos:end="215:25">float</name></type> <name pos:start="215:27" pos:end="215:29">sum</name> <init pos:start="215:31" pos:end="217:60">= <expr pos:start="215:33" pos:end="217:60"><name pos:start="215:33" pos:end="215:67"><name pos:start="215:33" pos:end="215:40">adpcm_vb</name><index pos:start="215:41" pos:end="215:64">[<expr pos:start="215:42" pos:end="215:63"><name pos:start="215:42" pos:end="215:63"><name pos:start="215:42" pos:end="215:42">s</name><operator pos:start="215:43" pos:end="215:44">-&gt;</operator><name pos:start="215:45" pos:end="215:57">prediction_vq</name><index pos:start="215:58" pos:end="215:60">[<expr pos:start="215:59" pos:end="215:59"><name pos:start="215:59" pos:end="215:59">k</name></expr>]</index><index pos:start="215:61" pos:end="215:63">[<expr pos:start="215:62" pos:end="215:62"><name pos:start="215:62" pos:end="215:62">l</name></expr>]</index></name></expr>]</index><index pos:start="215:65" pos:end="215:67">[<expr pos:start="215:66" pos:end="215:66"><literal type="number" pos:start="215:66" pos:end="215:66">0</literal></expr>]</index></name> <operator pos:start="215:69" pos:end="215:69">*</operator>

                                <name pos:start="217:33" pos:end="217:60"><name pos:start="217:33" pos:end="217:47">subband_samples</name><index pos:start="217:48" pos:end="217:50">[<expr pos:start="217:49" pos:end="217:49"><name pos:start="217:49" pos:end="217:49">k</name></expr>]</index><index pos:start="217:51" pos:end="217:53">[<expr pos:start="217:52" pos:end="217:52"><name pos:start="217:52" pos:end="217:52">l</name></expr>]</index><index pos:start="217:54" pos:end="217:60">[<expr pos:start="217:55" pos:end="217:59"><name pos:start="217:55" pos:end="217:55">m</name> <operator pos:start="217:57" pos:end="217:57">-</operator> <literal type="number" pos:start="217:59" pos:end="217:59">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <for pos:start="219:21" pos:end="231:76">for <control pos:start="219:25" pos:end="219:44">(<init pos:start="219:26" pos:end="219:31"><expr pos:start="219:26" pos:end="219:30"><name pos:start="219:26" pos:end="219:26">n</name> <operator pos:start="219:28" pos:end="219:28">=</operator> <literal type="number" pos:start="219:30" pos:end="219:30">2</literal></expr>;</init> <condition pos:start="219:33" pos:end="219:39"><expr pos:start="219:33" pos:end="219:38"><name pos:start="219:33" pos:end="219:33">n</name> <operator pos:start="219:35" pos:end="219:36">&lt;=</operator> <literal type="number" pos:start="219:38" pos:end="219:38">4</literal></expr>;</condition> <incr pos:start="219:41" pos:end="219:43"><expr pos:start="219:41" pos:end="219:43"><name pos:start="219:41" pos:end="219:41">n</name><operator pos:start="219:42" pos:end="219:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="221:25" pos:end="231:76"><block_content pos:start="221:25" pos:end="231:76">

                        <if_stmt pos:start="221:25" pos:end="231:76"><if pos:start="221:25" pos:end="225:64">if <condition pos:start="221:28" pos:end="221:35">(<expr pos:start="221:29" pos:end="221:34"><name pos:start="221:29" pos:end="221:29">m</name> <operator pos:start="221:31" pos:end="221:32">&gt;=</operator> <name pos:start="221:34" pos:end="221:34">n</name></expr>)</condition><block type="pseudo" pos:start="223:29" pos:end="225:64"><block_content pos:start="223:29" pos:end="225:64">

                            <expr_stmt pos:start="223:29" pos:end="225:64"><expr pos:start="223:29" pos:end="225:63"><name pos:start="223:29" pos:end="223:31">sum</name> <operator pos:start="223:33" pos:end="223:34">+=</operator> <name pos:start="223:36" pos:end="223:74"><name pos:start="223:36" pos:end="223:43">adpcm_vb</name><index pos:start="223:44" pos:end="223:67">[<expr pos:start="223:45" pos:end="223:66"><name pos:start="223:45" pos:end="223:66"><name pos:start="223:45" pos:end="223:45">s</name><operator pos:start="223:46" pos:end="223:47">-&gt;</operator><name pos:start="223:48" pos:end="223:60">prediction_vq</name><index pos:start="223:61" pos:end="223:63">[<expr pos:start="223:62" pos:end="223:62"><name pos:start="223:62" pos:end="223:62">k</name></expr>]</index><index pos:start="223:64" pos:end="223:66">[<expr pos:start="223:65" pos:end="223:65"><name pos:start="223:65" pos:end="223:65">l</name></expr>]</index></name></expr>]</index><index pos:start="223:68" pos:end="223:74">[<expr pos:start="223:69" pos:end="223:73"><name pos:start="223:69" pos:end="223:69">n</name> <operator pos:start="223:71" pos:end="223:71">-</operator> <literal type="number" pos:start="223:73" pos:end="223:73">1</literal></expr>]</index></name> <operator pos:start="223:76" pos:end="223:76">*</operator>

                                   <name pos:start="225:36" pos:end="225:63"><name pos:start="225:36" pos:end="225:50">subband_samples</name><index pos:start="225:51" pos:end="225:53">[<expr pos:start="225:52" pos:end="225:52"><name pos:start="225:52" pos:end="225:52">k</name></expr>]</index><index pos:start="225:54" pos:end="225:56">[<expr pos:start="225:55" pos:end="225:55"><name pos:start="225:55" pos:end="225:55">l</name></expr>]</index><index pos:start="225:57" pos:end="225:63">[<expr pos:start="225:58" pos:end="225:62"><name pos:start="225:58" pos:end="225:58">m</name> <operator pos:start="225:60" pos:end="225:60">-</operator> <name pos:start="225:62" pos:end="225:62">n</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                        <if type="elseif" pos:start="227:25" pos:end="231:76">else if <condition pos:start="227:33" pos:end="227:54">(<expr pos:start="227:34" pos:end="227:53"><name pos:start="227:34" pos:end="227:53"><name pos:start="227:34" pos:end="227:34">s</name><operator pos:start="227:35" pos:end="227:36">-&gt;</operator><name pos:start="227:37" pos:end="227:53">predictor_history</name></name></expr>)</condition><block type="pseudo" pos:start="229:29" pos:end="231:76"><block_content pos:start="229:29" pos:end="231:76">

                            <expr_stmt pos:start="229:29" pos:end="231:76"><expr pos:start="229:29" pos:end="231:75"><name pos:start="229:29" pos:end="229:31">sum</name> <operator pos:start="229:33" pos:end="229:34">+=</operator> <name pos:start="229:36" pos:end="229:74"><name pos:start="229:36" pos:end="229:43">adpcm_vb</name><index pos:start="229:44" pos:end="229:67">[<expr pos:start="229:45" pos:end="229:66"><name pos:start="229:45" pos:end="229:66"><name pos:start="229:45" pos:end="229:45">s</name><operator pos:start="229:46" pos:end="229:47">-&gt;</operator><name pos:start="229:48" pos:end="229:60">prediction_vq</name><index pos:start="229:61" pos:end="229:63">[<expr pos:start="229:62" pos:end="229:62"><name pos:start="229:62" pos:end="229:62">k</name></expr>]</index><index pos:start="229:64" pos:end="229:66">[<expr pos:start="229:65" pos:end="229:65"><name pos:start="229:65" pos:end="229:65">l</name></expr>]</index></name></expr>]</index><index pos:start="229:68" pos:end="229:74">[<expr pos:start="229:69" pos:end="229:73"><name pos:start="229:69" pos:end="229:69">n</name> <operator pos:start="229:71" pos:end="229:71">-</operator> <literal type="number" pos:start="229:73" pos:end="229:73">1</literal></expr>]</index></name> <operator pos:start="229:76" pos:end="229:76">*</operator>

                                   <name pos:start="231:36" pos:end="231:75"><name pos:start="231:36" pos:end="231:36">s</name><operator pos:start="231:37" pos:end="231:38">-&gt;</operator><name pos:start="231:39" pos:end="231:58">subband_samples_hist</name><index pos:start="231:59" pos:end="231:61">[<expr pos:start="231:60" pos:end="231:60"><name pos:start="231:60" pos:end="231:60">k</name></expr>]</index><index pos:start="231:62" pos:end="231:64">[<expr pos:start="231:63" pos:end="231:63"><name pos:start="231:63" pos:end="231:63">l</name></expr>]</index><index pos:start="231:65" pos:end="231:75">[<expr pos:start="231:66" pos:end="231:74"><name pos:start="231:66" pos:end="231:66">m</name> <operator pos:start="231:68" pos:end="231:68">-</operator> <name pos:start="231:70" pos:end="231:70">n</name> <operator pos:start="231:72" pos:end="231:72">+</operator> <literal type="number" pos:start="231:74" pos:end="231:74">4</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                    <expr_stmt pos:start="233:21" pos:end="233:66"><expr pos:start="233:21" pos:end="233:65"><name pos:start="233:21" pos:end="233:44"><name pos:start="233:21" pos:end="233:35">subband_samples</name><index pos:start="233:36" pos:end="233:38">[<expr pos:start="233:37" pos:end="233:37"><name pos:start="233:37" pos:end="233:37">k</name></expr>]</index><index pos:start="233:39" pos:end="233:41">[<expr pos:start="233:40" pos:end="233:40"><name pos:start="233:40" pos:end="233:40">l</name></expr>]</index><index pos:start="233:42" pos:end="233:44">[<expr pos:start="233:43" pos:end="233:43"><name pos:start="233:43" pos:end="233:43">m</name></expr>]</index></name> <operator pos:start="233:46" pos:end="233:47">+=</operator> <name pos:start="233:49" pos:end="233:51">sum</name> <operator pos:start="233:53" pos:end="233:53">*</operator> <literal type="number" pos:start="233:55" pos:end="233:58">1.0f</literal> <operator pos:start="233:60" pos:end="233:60">/</operator> <literal type="number" pos:start="233:62" pos:end="233:65">8192</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="243:9" pos:end="247:11">/*

         * Decode VQ encoded high frequencies

         */</comment>

        <for pos:start="249:9" pos:end="277:9">for <control pos:start="249:13" pos:end="249:73">(<init pos:start="249:14" pos:end="249:40"><expr pos:start="249:14" pos:end="249:39"><name pos:start="249:14" pos:end="249:14">l</name> <operator pos:start="249:16" pos:end="249:16">=</operator> <name pos:start="249:18" pos:end="249:39"><name pos:start="249:18" pos:end="249:18">s</name><operator pos:start="249:19" pos:end="249:20">-&gt;</operator><name pos:start="249:21" pos:end="249:36">vq_start_subband</name><index pos:start="249:37" pos:end="249:39">[<expr pos:start="249:38" pos:end="249:38"><name pos:start="249:38" pos:end="249:38">k</name></expr>]</index></name></expr>;</init> <condition pos:start="249:42" pos:end="249:68"><expr pos:start="249:42" pos:end="249:67"><name pos:start="249:42" pos:end="249:42">l</name> <operator pos:start="249:44" pos:end="249:44">&lt;</operator> <name pos:start="249:46" pos:end="249:67"><name pos:start="249:46" pos:end="249:46">s</name><operator pos:start="249:47" pos:end="249:48">-&gt;</operator><name pos:start="249:49" pos:end="249:64">subband_activity</name><index pos:start="249:65" pos:end="249:67">[<expr pos:start="249:66" pos:end="249:66"><name pos:start="249:66" pos:end="249:66">k</name></expr>]</index></name></expr>;</condition> <incr pos:start="249:70" pos:end="249:72"><expr pos:start="249:70" pos:end="249:72"><name pos:start="249:70" pos:end="249:70">l</name><operator pos:start="249:71" pos:end="249:72">++</operator></expr></incr>)</control> <block pos:start="249:75" pos:end="277:9">{<block_content pos:start="255:13" pos:end="275:56">

            <comment type="block" pos:start="251:13" pos:end="253:39">/* 1 vector -&gt; 32 samples but we only need the 8 samples

             * for this subsubframe. */</comment>

            <decl_stmt pos:start="255:13" pos:end="255:45"><decl pos:start="255:13" pos:end="255:44"><type pos:start="255:13" pos:end="255:15"><name pos:start="255:13" pos:end="255:15">int</name></type> <name pos:start="255:17" pos:end="255:20">hfvq</name> <init pos:start="255:22" pos:end="255:44">= <expr pos:start="255:24" pos:end="255:44"><name pos:start="255:24" pos:end="255:44"><name pos:start="255:24" pos:end="255:24">s</name><operator pos:start="255:25" pos:end="255:26">-&gt;</operator><name pos:start="255:27" pos:end="255:38">high_freq_vq</name><index pos:start="255:39" pos:end="255:41">[<expr pos:start="255:40" pos:end="255:40"><name pos:start="255:40" pos:end="255:40">k</name></expr>]</index><index pos:start="255:42" pos:end="255:44">[<expr pos:start="255:43" pos:end="255:43"><name pos:start="255:43" pos:end="255:43">l</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="259:13" pos:end="267:13"><if pos:start="259:13" pos:end="267:13">if <condition pos:start="259:16" pos:end="259:38">(<expr pos:start="259:17" pos:end="259:37"><operator pos:start="259:17" pos:end="259:17">!</operator><name pos:start="259:18" pos:end="259:30"><name pos:start="259:18" pos:end="259:18">s</name><operator pos:start="259:19" pos:end="259:20">-&gt;</operator><name pos:start="259:21" pos:end="259:30">debug_flag</name></name> <operator pos:start="259:32" pos:end="259:32">&amp;</operator> <literal type="number" pos:start="259:34" pos:end="259:37">0x01</literal></expr>)</condition> <block pos:start="259:40" pos:end="267:13">{<block_content pos:start="261:17" pos:end="265:38">

                <expr_stmt pos:start="261:17" pos:end="263:67"><expr pos:start="261:17" pos:end="263:66"><call pos:start="261:17" pos:end="263:66"><name pos:start="261:17" pos:end="261:22">av_log</name><argument_list pos:start="261:23" pos:end="263:66">(<argument pos:start="261:24" pos:end="261:31"><expr pos:start="261:24" pos:end="261:31"><name pos:start="261:24" pos:end="261:31"><name pos:start="261:24" pos:end="261:24">s</name><operator pos:start="261:25" pos:end="261:26">-&gt;</operator><name pos:start="261:27" pos:end="261:31">avctx</name></name></expr></argument>, <argument pos:start="261:34" pos:end="261:45"><expr pos:start="261:34" pos:end="261:45"><name pos:start="261:34" pos:end="261:45">AV_LOG_DEBUG</name></expr></argument>,

                       <argument pos:start="263:24" pos:end="263:65"><expr pos:start="263:24" pos:end="263:65"><literal type="string" pos:start="263:24" pos:end="263:65">"Stream with high frequencies VQ coding\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="265:17" pos:end="265:38"><expr pos:start="265:17" pos:end="265:37"><name pos:start="265:17" pos:end="265:29"><name pos:start="265:17" pos:end="265:17">s</name><operator pos:start="265:18" pos:end="265:19">-&gt;</operator><name pos:start="265:20" pos:end="265:29">debug_flag</name></name> <operator pos:start="265:31" pos:end="265:32">|=</operator> <literal type="number" pos:start="265:34" pos:end="265:37">0x01</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="271:13" pos:end="275:56"><expr pos:start="271:13" pos:end="275:55"><call pos:start="271:13" pos:end="275:55"><name pos:start="271:13" pos:end="271:29">int8x8_fmul_int32</name><argument_list pos:start="271:30" pos:end="275:55">(<argument pos:start="271:31" pos:end="271:40"><expr pos:start="271:31" pos:end="271:40"><operator pos:start="271:31" pos:end="271:31">&amp;</operator><name pos:start="271:32" pos:end="271:40"><name pos:start="271:32" pos:end="271:32">s</name><operator pos:start="271:33" pos:end="271:34">-&gt;</operator><name pos:start="271:35" pos:end="271:40">dcadsp</name></name></expr></argument>, <argument pos:start="271:43" pos:end="271:63"><expr pos:start="271:43" pos:end="271:63"><name pos:start="271:43" pos:end="271:63"><name pos:start="271:43" pos:end="271:57">subband_samples</name><index pos:start="271:58" pos:end="271:60">[<expr pos:start="271:59" pos:end="271:59"><name pos:start="271:59" pos:end="271:59">k</name></expr>]</index><index pos:start="271:61" pos:end="271:63">[<expr pos:start="271:62" pos:end="271:62"><name pos:start="271:62" pos:end="271:62">l</name></expr>]</index></name></expr></argument>,

                              <argument pos:start="273:31" pos:end="273:66"><expr pos:start="273:31" pos:end="273:66"><operator pos:start="273:31" pos:end="273:31">&amp;</operator><name pos:start="273:32" pos:end="273:66"><name pos:start="273:32" pos:end="273:43">high_freq_vq</name><index pos:start="273:44" pos:end="273:49">[<expr pos:start="273:45" pos:end="273:48"><name pos:start="273:45" pos:end="273:48">hfvq</name></expr>]</index><index pos:start="273:50" pos:end="273:66">[<expr pos:start="273:51" pos:end="273:65"><name pos:start="273:51" pos:end="273:61">subsubframe</name> <operator pos:start="273:63" pos:end="273:63">*</operator> <literal type="number" pos:start="273:65" pos:end="273:65">8</literal></expr>]</index></name></expr></argument>,

                              <argument pos:start="275:31" pos:end="275:54"><expr pos:start="275:31" pos:end="275:54"><name pos:start="275:31" pos:end="275:54"><name pos:start="275:31" pos:end="275:31">s</name><operator pos:start="275:32" pos:end="275:33">-&gt;</operator><name pos:start="275:34" pos:end="275:45">scale_factor</name><index pos:start="275:46" pos:end="275:48">[<expr pos:start="275:47" pos:end="275:47"><name pos:start="275:47" pos:end="275:47">k</name></expr>]</index><index pos:start="275:49" pos:end="275:51">[<expr pos:start="275:50" pos:end="275:50"><name pos:start="275:50" pos:end="275:50">l</name></expr>]</index><index pos:start="275:52" pos:end="275:54">[<expr pos:start="275:53" pos:end="275:53"><literal type="number" pos:start="275:53" pos:end="275:53">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="283:5" pos:end="283:43">/* Check for DSYNC after subsubframe */</comment>

    <if_stmt pos:start="285:5" pos:end="303:5"><if pos:start="285:5" pos:end="303:5">if <condition pos:start="285:8" pos:end="285:75">(<expr pos:start="285:9" pos:end="285:74"><name pos:start="285:9" pos:end="285:15"><name pos:start="285:9" pos:end="285:9">s</name><operator pos:start="285:10" pos:end="285:11">-&gt;</operator><name pos:start="285:12" pos:end="285:15">aspf</name></name> <operator pos:start="285:17" pos:end="285:18">||</operator> <name pos:start="285:20" pos:end="285:30">subsubframe</name> <operator pos:start="285:32" pos:end="285:33">==</operator> <name pos:start="285:35" pos:end="285:70"><name pos:start="285:35" pos:end="285:35">s</name><operator pos:start="285:36" pos:end="285:37">-&gt;</operator><name pos:start="285:38" pos:end="285:49">subsubframes</name><index pos:start="285:50" pos:end="285:70">[<expr pos:start="285:51" pos:end="285:69"><name pos:start="285:51" pos:end="285:69"><name pos:start="285:51" pos:end="285:51">s</name><operator pos:start="285:52" pos:end="285:53">-&gt;</operator><name pos:start="285:54" pos:end="285:69">current_subframe</name></name></expr>]</index></name> <operator pos:start="285:72" pos:end="285:72">-</operator> <literal type="number" pos:start="285:74" pos:end="285:74">1</literal></expr>)</condition> <block pos:start="285:77" pos:end="303:5">{<block_content pos:start="287:9" pos:end="301:9">

        <if_stmt pos:start="287:9" pos:end="301:9"><if pos:start="287:9" pos:end="295:9">if <condition pos:start="287:12" pos:end="287:43">(<expr pos:start="287:13" pos:end="287:42"><literal type="number" pos:start="287:13" pos:end="287:18">0xFFFF</literal> <operator pos:start="287:20" pos:end="287:21">==</operator> <call pos:start="287:23" pos:end="287:42"><name pos:start="287:23" pos:end="287:30">get_bits</name><argument_list pos:start="287:31" pos:end="287:42">(<argument pos:start="287:32" pos:end="287:37"><expr pos:start="287:32" pos:end="287:37"><operator pos:start="287:32" pos:end="287:32">&amp;</operator><name pos:start="287:33" pos:end="287:37"><name pos:start="287:33" pos:end="287:33">s</name><operator pos:start="287:34" pos:end="287:35">-&gt;</operator><name pos:start="287:36" pos:end="287:37">gb</name></name></expr></argument>, <argument pos:start="287:40" pos:end="287:41"><expr pos:start="287:40" pos:end="287:41"><literal type="number" pos:start="287:40" pos:end="287:41">16</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="287:45" pos:end="295:9">{<block_content pos:start="291:13" pos:end="294:0">   <comment type="block" pos:start="287:49" pos:end="287:60">/* 0xFFFF */</comment>

<cpp:ifdef pos:start="289:1" pos:end="289:12">#<cpp:directive pos:start="289:2" pos:end="289:6">ifdef</cpp:directive> <name pos:start="289:8" pos:end="289:12">TRACE</name></cpp:ifdef>

            <expr_stmt pos:start="291:13" pos:end="294:0"><expr pos:start="291:13" pos:end="291:66"><call pos:start="291:13" pos:end="291:66"><name pos:start="291:13" pos:end="291:18">av_log</name><argument_list pos:start="291:19" pos:end="291:66">(<argument pos:start="291:20" pos:end="291:27"><expr pos:start="291:20" pos:end="291:27"><name pos:start="291:20" pos:end="291:27"><name pos:start="291:20" pos:end="291:20">s</name><operator pos:start="291:21" pos:end="291:22">-&gt;</operator><name pos:start="291:23" pos:end="291:27">avctx</name></name></expr></argument>, <argument pos:start="291:30" pos:end="291:41"><expr pos:start="291:30" pos:end="291:41"><name pos:start="291:30" pos:end="291:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="291:44" pos:end="291:65"><expr pos:start="291:44" pos:end="291:65"><literal type="string" pos:start="291:44" pos:end="291:65">"Got subframe DSYNC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="293:1" pos:end="293:6">#<cpp:directive pos:start="293:2" pos:end="293:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="295:11" pos:end="301:9">else <block pos:start="295:16" pos:end="301:9">{<block_content pos:start="297:13" pos:end="299:39">

            <expr_stmt pos:start="297:13" pos:end="297:74"><expr pos:start="297:13" pos:end="297:73"><call pos:start="297:13" pos:end="297:73"><name pos:start="297:13" pos:end="297:18">av_log</name><argument_list pos:start="297:19" pos:end="297:73">(<argument pos:start="297:20" pos:end="297:27"><expr pos:start="297:20" pos:end="297:27"><name pos:start="297:20" pos:end="297:27"><name pos:start="297:20" pos:end="297:20">s</name><operator pos:start="297:21" pos:end="297:22">-&gt;</operator><name pos:start="297:23" pos:end="297:27">avctx</name></name></expr></argument>, <argument pos:start="297:30" pos:end="297:41"><expr pos:start="297:30" pos:end="297:41"><name pos:start="297:30" pos:end="297:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="297:44" pos:end="297:72"><expr pos:start="297:44" pos:end="297:72"><literal type="string" pos:start="297:44" pos:end="297:72">"Didn't get subframe DSYNC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="299:13" pos:end="299:39">return <expr pos:start="299:20" pos:end="299:38"><name pos:start="299:20" pos:end="299:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="307:5" pos:end="307:44">/* Backup predictor history for adpcm */</comment>

    <for pos:start="309:5" pos:end="313:81">for <control pos:start="309:9" pos:end="309:53">(<init pos:start="309:10" pos:end="309:26"><expr pos:start="309:10" pos:end="309:25"><name pos:start="309:10" pos:end="309:10">k</name> <operator pos:start="309:12" pos:end="309:12">=</operator> <name pos:start="309:14" pos:end="309:25">base_channel</name></expr>;</init> <condition pos:start="309:28" pos:end="309:48"><expr pos:start="309:28" pos:end="309:47"><name pos:start="309:28" pos:end="309:28">k</name> <operator pos:start="309:30" pos:end="309:30">&lt;</operator> <name pos:start="309:32" pos:end="309:47"><name pos:start="309:32" pos:end="309:32">s</name><operator pos:start="309:33" pos:end="309:34">-&gt;</operator><name pos:start="309:35" pos:end="309:47">prim_channels</name></name></expr>;</condition> <incr pos:start="309:50" pos:end="309:52"><expr pos:start="309:50" pos:end="309:52"><name pos:start="309:50" pos:end="309:50">k</name><operator pos:start="309:51" pos:end="309:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="311:9" pos:end="313:81"><block_content pos:start="311:9" pos:end="313:81">

        <for pos:start="311:9" pos:end="313:81">for <control pos:start="311:13" pos:end="311:52">(<init pos:start="311:14" pos:end="311:19"><expr pos:start="311:14" pos:end="311:18"><name pos:start="311:14" pos:end="311:14">l</name> <operator pos:start="311:16" pos:end="311:16">=</operator> <literal type="number" pos:start="311:18" pos:end="311:18">0</literal></expr>;</init> <condition pos:start="311:21" pos:end="311:47"><expr pos:start="311:21" pos:end="311:46"><name pos:start="311:21" pos:end="311:21">l</name> <operator pos:start="311:23" pos:end="311:23">&lt;</operator> <name pos:start="311:25" pos:end="311:46"><name pos:start="311:25" pos:end="311:25">s</name><operator pos:start="311:26" pos:end="311:27">-&gt;</operator><name pos:start="311:28" pos:end="311:43">vq_start_subband</name><index pos:start="311:44" pos:end="311:46">[<expr pos:start="311:45" pos:end="311:45"><name pos:start="311:45" pos:end="311:45">k</name></expr>]</index></name></expr>;</condition> <incr pos:start="311:49" pos:end="311:51"><expr pos:start="311:49" pos:end="311:51"><name pos:start="311:49" pos:end="311:49">l</name><operator pos:start="311:50" pos:end="311:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="313:13" pos:end="313:81"><block_content pos:start="313:13" pos:end="313:81">

            <expr_stmt pos:start="313:13" pos:end="313:81"><expr pos:start="313:13" pos:end="313:80"><call pos:start="313:13" pos:end="313:80"><name pos:start="313:13" pos:end="313:22">AV_COPY128</name><argument_list pos:start="313:23" pos:end="313:80">(<argument pos:start="313:24" pos:end="313:52"><expr pos:start="313:24" pos:end="313:52"><name pos:start="313:24" pos:end="313:52"><name pos:start="313:24" pos:end="313:24">s</name><operator pos:start="313:25" pos:end="313:26">-&gt;</operator><name pos:start="313:27" pos:end="313:46">subband_samples_hist</name><index pos:start="313:47" pos:end="313:49">[<expr pos:start="313:48" pos:end="313:48"><name pos:start="313:48" pos:end="313:48">k</name></expr>]</index><index pos:start="313:50" pos:end="313:52">[<expr pos:start="313:51" pos:end="313:51"><name pos:start="313:51" pos:end="313:51">l</name></expr>]</index></name></expr></argument>, <argument pos:start="313:55" pos:end="313:79"><expr pos:start="313:55" pos:end="313:79"><operator pos:start="313:55" pos:end="313:55">&amp;</operator><name pos:start="313:56" pos:end="313:79"><name pos:start="313:56" pos:end="313:70">subband_samples</name><index pos:start="313:71" pos:end="313:73">[<expr pos:start="313:72" pos:end="313:72"><name pos:start="313:72" pos:end="313:72">k</name></expr>]</index><index pos:start="313:74" pos:end="313:76">[<expr pos:start="313:75" pos:end="313:75"><name pos:start="313:75" pos:end="313:75">l</name></expr>]</index><index pos:start="313:77" pos:end="313:79">[<expr pos:start="313:78" pos:end="313:78"><literal type="number" pos:start="313:78" pos:end="313:78">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>



    <return pos:start="317:5" pos:end="317:13">return <expr pos:start="317:12" pos:end="317:12"><literal type="number" pos:start="317:12" pos:end="317:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
