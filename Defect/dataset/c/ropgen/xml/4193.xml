<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4193.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">ioinst_handle_schm</name><parameter_list pos:start="1:23" pos:end="3:36">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:36">CPUS390XState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">env</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:51">uint64_t</name></type> <name pos:start="1:53" pos:end="1:56">reg1</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:66">uint64_t</name></type> <name pos:start="1:68" pos:end="1:71">reg2</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:35"><decl pos:start="3:24" pos:end="3:35"><type pos:start="3:24" pos:end="3:35"><name pos:start="3:24" pos:end="3:31">uint32_t</name></type> <name pos:start="3:33" pos:end="3:35">ipb</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:13">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:15">mbk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">update</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">dct</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><call pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:16">trace_ioinst</name><argument_list pos:start="15:17" pos:end="15:24">(<argument pos:start="15:18" pos:end="15:23"><expr pos:start="15:18" pos:end="15:23"><literal type="string" pos:start="15:18" pos:end="15:23">"schm"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:28">(<expr pos:start="19:9" pos:end="19:27"><call pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:21">SCHM_REG1_RES</name><argument_list pos:start="19:22" pos:end="19:27">(<argument pos:start="19:23" pos:end="19:26"><expr pos:start="19:23" pos:end="19:26"><name pos:start="19:23" pos:end="19:26">reg1</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:30" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:20">

        <expr_stmt pos:start="21:9" pos:end="21:47"><expr pos:start="21:9" pos:end="21:46"><call pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:25">program_interrupt</name><argument_list pos:start="21:26" pos:end="21:46">(<argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">env</name></expr></argument>, <argument pos:start="21:32" pos:end="21:42"><expr pos:start="21:32" pos:end="21:42"><name pos:start="21:32" pos:end="21:42">PGM_OPERAND</name></expr></argument>, <argument pos:start="21:45" pos:end="21:45"><expr pos:start="21:45" pos:end="21:45"><literal type="number" pos:start="21:45" pos:end="21:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:20">return <expr pos:start="23:16" pos:end="23:19"><operator pos:start="23:16" pos:end="23:16">-</operator><name pos:start="23:17" pos:end="23:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:7">mbk</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:29"><name pos:start="29:11" pos:end="29:23">SCHM_REG1_MBK</name><argument_list pos:start="29:24" pos:end="29:29">(<argument pos:start="29:25" pos:end="29:28"><expr pos:start="29:25" pos:end="29:28"><name pos:start="29:25" pos:end="29:28">reg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:10">update</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:32"><name pos:start="31:14" pos:end="31:26">SCHM_REG1_UPD</name><argument_list pos:start="31:27" pos:end="31:32">(<argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><name pos:start="31:28" pos:end="31:31">reg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:7">dct</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:29"><name pos:start="33:11" pos:end="33:23">SCHM_REG1_DCT</name><argument_list pos:start="33:24" pos:end="33:29">(<argument pos:start="33:25" pos:end="33:28"><expr pos:start="33:25" pos:end="33:28"><name pos:start="33:25" pos:end="33:28">reg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:46">(<expr pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:14">update</name> <operator pos:start="37:16" pos:end="37:17">&amp;&amp;</operator> <operator pos:start="37:19" pos:end="37:19">(</operator><name pos:start="37:20" pos:end="37:23">reg2</name> <operator pos:start="37:25" pos:end="37:25">&amp;</operator> <literal type="number" pos:start="37:27" pos:end="37:44">0x0000000000000fff</literal><operator pos:start="37:45" pos:end="37:45">)</operator></expr>)</condition> <block pos:start="37:48" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:20">

        <expr_stmt pos:start="39:9" pos:end="39:47"><expr pos:start="39:9" pos:end="39:46"><call pos:start="39:9" pos:end="39:46"><name pos:start="39:9" pos:end="39:25">program_interrupt</name><argument_list pos:start="39:26" pos:end="39:46">(<argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><name pos:start="39:27" pos:end="39:29">env</name></expr></argument>, <argument pos:start="39:32" pos:end="39:42"><expr pos:start="39:32" pos:end="39:42"><name pos:start="39:32" pos:end="39:42">PGM_OPERAND</name></expr></argument>, <argument pos:start="39:45" pos:end="39:45"><expr pos:start="39:45" pos:end="39:45"><literal type="number" pos:start="39:45" pos:end="39:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:20">return <expr pos:start="41:16" pos:end="41:19"><operator pos:start="41:16" pos:end="41:16">-</operator><name pos:start="41:17" pos:end="41:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:53"><expr pos:start="47:5" pos:end="47:52"><call pos:start="47:5" pos:end="47:52"><name pos:start="47:5" pos:end="47:15">css_do_schm</name><argument_list pos:start="47:16" pos:end="47:52">(<argument pos:start="47:17" pos:end="47:19"><expr pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:19">mbk</name></expr></argument>, <argument pos:start="47:22" pos:end="47:27"><expr pos:start="47:22" pos:end="47:27"><name pos:start="47:22" pos:end="47:27">update</name></expr></argument>, <argument pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><name pos:start="47:30" pos:end="47:32">dct</name></expr></argument>, <argument pos:start="47:35" pos:end="47:51"><expr pos:start="47:35" pos:end="47:51"><ternary pos:start="47:35" pos:end="47:51"><condition pos:start="47:35" pos:end="47:42"><expr pos:start="47:35" pos:end="47:40"><name pos:start="47:35" pos:end="47:40">update</name></expr> ?</condition><then pos:start="47:44" pos:end="47:47"> <expr pos:start="47:44" pos:end="47:47"><name pos:start="47:44" pos:end="47:47">reg2</name></expr> </then><else pos:start="47:49" pos:end="47:51">: <expr pos:start="47:51" pos:end="47:51"><literal type="number" pos:start="47:51" pos:end="47:51">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="51:5" pos:end="51:13">return <expr pos:start="51:12" pos:end="51:12"><literal type="number" pos:start="51:12" pos:end="51:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
