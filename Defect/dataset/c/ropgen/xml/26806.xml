<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26806.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">qtest_init</name><parameter_list pos:start="1:16" pos:end="1:78">(<parameter pos:start="1:17" pos:end="1:40"><decl pos:start="1:17" pos:end="1:40"><type pos:start="1:17" pos:end="1:40"><specifier pos:start="1:17" pos:end="1:21">const</specifier> <name pos:start="1:23" pos:end="1:26">char</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:40">qtest_chrdev</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:63"><decl pos:start="1:43" pos:end="1:63"><type pos:start="1:43" pos:end="1:63"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:63">qtest_log</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:70">Error</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier><modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:20">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">CharDriverState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">chr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:52"><expr pos:start="9:5" pos:end="9:51"><name pos:start="9:5" pos:end="9:7">chr</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:51"><name pos:start="9:11" pos:end="9:22">qemu_chr_new</name><argument_list pos:start="9:23" pos:end="9:51">(<argument pos:start="9:24" pos:end="9:30"><expr pos:start="9:24" pos:end="9:30"><literal type="string" pos:start="9:24" pos:end="9:30">"qtest"</literal></expr></argument>, <argument pos:start="9:33" pos:end="9:44"><expr pos:start="9:33" pos:end="9:44"><name pos:start="9:33" pos:end="9:44">qtest_chrdev</name></expr></argument>, <argument pos:start="9:47" pos:end="9:50"><expr pos:start="9:47" pos:end="9:50"><name pos:start="9:47" pos:end="9:50">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:11">chr</name> <operator pos:start="13:13" pos:end="13:14">==</operator> <name pos:start="13:16" pos:end="13:19">NULL</name></expr>)</condition> <block pos:start="13:22" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:15">

        <expr_stmt pos:start="15:9" pos:end="17:33"><expr pos:start="15:9" pos:end="17:32"><call pos:start="15:9" pos:end="17:32"><name pos:start="15:9" pos:end="15:18">error_setg</name><argument_list pos:start="15:19" pos:end="17:32">(<argument pos:start="15:20" pos:end="15:23"><expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">errp</name></expr></argument>, <argument pos:start="15:26" pos:end="15:72"><expr pos:start="15:26" pos:end="15:72"><literal type="string" pos:start="15:26" pos:end="15:72">"Failed to initialize device for qtest: \"%s\""</literal></expr></argument>,

                   <argument pos:start="17:20" pos:end="17:31"><expr pos:start="17:20" pos:end="17:31"><name pos:start="17:20" pos:end="17:31">qtest_chrdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:77"><expr pos:start="25:5" pos:end="25:76"><call pos:start="25:5" pos:end="25:76"><name pos:start="25:5" pos:end="25:25">qemu_chr_add_handlers</name><argument_list pos:start="25:26" pos:end="25:76">(<argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><name pos:start="25:27" pos:end="25:29">chr</name></expr></argument>, <argument pos:start="25:32" pos:end="25:45"><expr pos:start="25:32" pos:end="25:45"><name pos:start="25:32" pos:end="25:45">qtest_can_read</name></expr></argument>, <argument pos:start="25:48" pos:end="25:57"><expr pos:start="25:48" pos:end="25:57"><name pos:start="25:48" pos:end="25:57">qtest_read</name></expr></argument>, <argument pos:start="25:60" pos:end="25:70"><expr pos:start="25:60" pos:end="25:70"><name pos:start="25:60" pos:end="25:70">qtest_event</name></expr></argument>, <argument pos:start="25:73" pos:end="25:75"><expr pos:start="25:73" pos:end="25:75"><name pos:start="25:73" pos:end="25:75">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><call pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:24">qemu_chr_fe_set_echo</name><argument_list pos:start="27:25" pos:end="27:35">(<argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">chr</name></expr></argument>, <argument pos:start="27:31" pos:end="27:34"><expr pos:start="27:31" pos:end="27:34"><name pos:start="27:31" pos:end="27:34">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:9">inbuf</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <call pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:24">g_string_new</name><argument_list pos:start="31:25" pos:end="31:28">(<argument pos:start="31:26" pos:end="31:27"><expr pos:start="31:26" pos:end="31:27"><literal type="string" pos:start="31:26" pos:end="31:27">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:18">(<expr pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:17">qtest_log</name></expr>)</condition> <block pos:start="35:20" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:9">

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:43">(<expr pos:start="37:13" pos:end="37:42"><call pos:start="37:13" pos:end="37:37"><name pos:start="37:13" pos:end="37:18">strcmp</name><argument_list pos:start="37:19" pos:end="37:37">(<argument pos:start="37:20" pos:end="37:28"><expr pos:start="37:20" pos:end="37:28"><name pos:start="37:20" pos:end="37:28">qtest_log</name></expr></argument>, <argument pos:start="37:31" pos:end="37:36"><expr pos:start="37:31" pos:end="37:36"><literal type="string" pos:start="37:31" pos:end="37:36">"none"</literal></expr></argument>)</argument_list></call> <operator pos:start="37:39" pos:end="37:40">!=</operator> <literal type="number" pos:start="37:42" pos:end="37:42">0</literal></expr>)</condition> <block pos:start="37:45" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:50">

            <expr_stmt pos:start="39:13" pos:end="39:50"><expr pos:start="39:13" pos:end="39:49"><name pos:start="39:13" pos:end="39:24">qtest_log_fp</name> <operator pos:start="39:26" pos:end="39:26">=</operator> <call pos:start="39:28" pos:end="39:49"><name pos:start="39:28" pos:end="39:32">fopen</name><argument_list pos:start="39:33" pos:end="39:49">(<argument pos:start="39:34" pos:end="39:42"><expr pos:start="39:34" pos:end="39:42"><name pos:start="39:34" pos:end="39:42">qtest_log</name></expr></argument>, <argument pos:start="39:45" pos:end="39:48"><expr pos:start="39:45" pos:end="39:48"><literal type="string" pos:start="39:45" pos:end="39:48">"w+"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="47:5">else <block pos:start="43:12" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:30">

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:20">qtest_log_fp</name> <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:29">stderr</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:20"><expr pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:13">qtest_chr</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <name pos:start="51:17" pos:end="51:19">chr</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
