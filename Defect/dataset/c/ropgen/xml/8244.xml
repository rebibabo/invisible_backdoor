<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8244.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">nbd_handle_reply_err</name><parameter_list pos:start="1:32" pos:end="3:45">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:42">QIOChannel</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">ioc</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:69"><decl pos:start="1:50" pos:end="1:69"><type pos:start="1:50" pos:end="1:69"><name pos:start="1:50" pos:end="1:62">nbd_opt_reply</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">reply</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:44"><decl pos:start="3:33" pos:end="3:44"><type pos:start="3:33" pos:end="3:44"><name pos:start="3:33" pos:end="3:37">Error</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier><modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:44">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="143:1">{<block_content pos:start="7:5" pos:end="141:18">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">msg</name> <init pos:start="7:15" pos:end="7:20">= <expr pos:start="7:17" pos:end="7:20"><name pos:start="7:17" pos:end="7:20">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">result</name> <init pos:start="9:16" pos:end="9:19">= <expr pos:start="9:18" pos:end="9:19"><operator pos:start="9:18" pos:end="9:18">-</operator><literal type="number" pos:start="9:19" pos:end="9:19">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:35">(<expr pos:start="13:9" pos:end="13:34"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:21"><name pos:start="13:11" pos:end="13:15">reply</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:21">type</name></name> <operator pos:start="13:23" pos:end="13:23">&amp;</operator> <operator pos:start="13:25" pos:end="13:25">(</operator><literal type="number" pos:start="13:26" pos:end="13:26">1</literal> <operator pos:start="13:28" pos:end="13:29">&lt;&lt;</operator> <literal type="number" pos:start="13:31" pos:end="13:32">31</literal><operator pos:start="13:33" pos:end="13:33">)</operator><operator pos:start="13:34" pos:end="13:34">)</operator></expr>)</condition> <block pos:start="13:37" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="43:5"><if pos:start="21:5" pos:end="43:5">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:13">reply</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:21">length</name></name></expr>)</condition> <block pos:start="21:24" pos:end="43:5">{<block_content pos:start="23:9" pos:end="41:34">

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:48">(<expr pos:start="23:13" pos:end="23:47"><name pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:17">reply</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:25">length</name></name> <operator pos:start="23:27" pos:end="23:27">&gt;</operator> <name pos:start="23:29" pos:end="23:47">NBD_MAX_BUFFER_SIZE</name></expr>)</condition> <block pos:start="23:50" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:25">

            <expr_stmt pos:start="25:13" pos:end="25:67"><expr pos:start="25:13" pos:end="25:66"><call pos:start="25:13" pos:end="25:66"><name pos:start="25:13" pos:end="25:22">error_setg</name><argument_list pos:start="25:23" pos:end="25:66">(<argument pos:start="25:24" pos:end="25:27"><expr pos:start="25:24" pos:end="25:27"><name pos:start="25:24" pos:end="25:27">errp</name></expr></argument>, <argument pos:start="25:30" pos:end="25:65"><expr pos:start="25:30" pos:end="25:65"><literal type="string" pos:start="25:30" pos:end="25:65">"server's error message is too long"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="27:13" pos:end="27:25">goto <name pos:start="27:18" pos:end="27:24">cleanup</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:42"><expr pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:11">msg</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:41"><name pos:start="31:15" pos:end="31:22">g_malloc</name><argument_list pos:start="31:23" pos:end="31:41">(<argument pos:start="31:24" pos:end="31:40"><expr pos:start="31:24" pos:end="31:40"><name pos:start="31:24" pos:end="31:36"><name pos:start="31:24" pos:end="31:28">reply</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:36">length</name></name> <operator pos:start="31:38" pos:end="31:38">+</operator> <literal type="number" pos:start="31:40" pos:end="31:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:57">(<expr pos:start="33:13" pos:end="33:56"><call pos:start="33:13" pos:end="33:52"><name pos:start="33:13" pos:end="33:21">read_sync</name><argument_list pos:start="33:22" pos:end="33:52">(<argument pos:start="33:23" pos:end="33:25"><expr pos:start="33:23" pos:end="33:25"><name pos:start="33:23" pos:end="33:25">ioc</name></expr></argument>, <argument pos:start="33:28" pos:end="33:30"><expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:30">msg</name></expr></argument>, <argument pos:start="33:33" pos:end="33:45"><expr pos:start="33:33" pos:end="33:45"><name pos:start="33:33" pos:end="33:45"><name pos:start="33:33" pos:end="33:37">reply</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:45">length</name></name></expr></argument>, <argument pos:start="33:48" pos:end="33:51"><expr pos:start="33:48" pos:end="33:51"><name pos:start="33:48" pos:end="33:51">errp</name></expr></argument>)</argument_list></call> <operator pos:start="33:54" pos:end="33:54">&lt;</operator> <literal type="number" pos:start="33:56" pos:end="33:56">0</literal></expr>)</condition> <block pos:start="33:59" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:25">

            <expr_stmt pos:start="35:13" pos:end="35:71"><expr pos:start="35:13" pos:end="35:70"><call pos:start="35:13" pos:end="35:70"><name pos:start="35:13" pos:end="35:25">error_prepend</name><argument_list pos:start="35:26" pos:end="35:70">(<argument pos:start="35:27" pos:end="35:30"><expr pos:start="35:27" pos:end="35:30"><name pos:start="35:27" pos:end="35:30">errp</name></expr></argument>, <argument pos:start="35:33" pos:end="35:69"><expr pos:start="35:33" pos:end="35:69"><literal type="string" pos:start="35:33" pos:end="35:69">"failed to read option error message"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="37:13" pos:end="37:25">goto <name pos:start="37:18" pos:end="37:24">cleanup</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:11">msg</name><index pos:start="41:12" pos:end="41:26">[<expr pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:17">reply</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:25">length</name></name></expr>]</index></name> <operator pos:start="41:28" pos:end="41:28">=</operator> <literal type="char" pos:start="41:30" pos:end="41:33">'\0'</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="47:5" pos:end="119:5">switch <condition pos:start="47:12" pos:end="47:24">(<expr pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:17">reply</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:23">type</name></name></expr>)</condition> <block pos:start="47:26" pos:end="119:5">{<block_content pos:start="49:5" pos:end="117:14">

    <case pos:start="49:5" pos:end="49:27">case <expr pos:start="49:10" pos:end="49:26"><name pos:start="49:10" pos:end="49:26">NBD_REP_ERR_UNSUP</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="53:54"><expr pos:start="51:9" pos:end="53:53"><call pos:start="51:9" pos:end="53:53"><name pos:start="51:9" pos:end="51:13">TRACE</name><argument_list pos:start="51:14" pos:end="53:53">(<argument pos:start="51:15" pos:end="53:37"><expr pos:start="51:15" pos:end="53:37"><literal type="string" pos:start="51:15" pos:end="51:51">"server doesn't understand request %"</literal> <name pos:start="51:53" pos:end="51:58">PRIx32</name>

              <literal type="string" pos:start="53:15" pos:end="53:37">", attempting fallback"</literal></expr></argument>, <argument pos:start="53:40" pos:end="53:52"><expr pos:start="53:40" pos:end="53:52"><name pos:start="53:40" pos:end="53:52"><name pos:start="53:40" pos:end="53:44">reply</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:52">option</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:19"><expr pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:14">result</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:21">goto <name pos:start="57:14" pos:end="57:20">cleanup</name>;</goto>



    <case pos:start="61:5" pos:end="61:28">case <expr pos:start="61:10" pos:end="61:27"><name pos:start="61:10" pos:end="61:27">NBD_REP_ERR_POLICY</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="65:34"><expr pos:start="63:9" pos:end="65:33"><call pos:start="63:9" pos:end="65:33"><name pos:start="63:9" pos:end="63:18">error_setg</name><argument_list pos:start="63:19" pos:end="65:33">(<argument pos:start="63:20" pos:end="63:23"><expr pos:start="63:20" pos:end="63:23"><name pos:start="63:20" pos:end="63:23">errp</name></expr></argument>, <argument pos:start="63:26" pos:end="63:63"><expr pos:start="63:26" pos:end="63:63"><literal type="string" pos:start="63:26" pos:end="63:56">"Denied by server for option %"</literal> <name pos:start="63:58" pos:end="63:63">PRIx32</name></expr></argument>,

                   <argument pos:start="65:20" pos:end="65:32"><expr pos:start="65:20" pos:end="65:32"><name pos:start="65:20" pos:end="65:32"><name pos:start="65:20" pos:end="65:24">reply</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:32">option</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>



    <case pos:start="71:5" pos:end="71:29">case <expr pos:start="71:10" pos:end="71:28"><name pos:start="71:10" pos:end="71:28">NBD_REP_ERR_INVALID</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="75:34"><expr pos:start="73:9" pos:end="75:33"><call pos:start="73:9" pos:end="75:33"><name pos:start="73:9" pos:end="73:18">error_setg</name><argument_list pos:start="73:19" pos:end="75:33">(<argument pos:start="73:20" pos:end="73:23"><expr pos:start="73:20" pos:end="73:23"><name pos:start="73:20" pos:end="73:23">errp</name></expr></argument>, <argument pos:start="73:26" pos:end="73:66"><expr pos:start="73:26" pos:end="73:66"><literal type="string" pos:start="73:26" pos:end="73:59">"Invalid data length for option %"</literal> <name pos:start="73:61" pos:end="73:66">PRIx32</name></expr></argument>,

                   <argument pos:start="75:20" pos:end="75:32"><expr pos:start="75:20" pos:end="75:32"><name pos:start="75:20" pos:end="75:32"><name pos:start="75:20" pos:end="75:24">reply</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:32">option</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>



    <case pos:start="81:5" pos:end="81:30">case <expr pos:start="81:10" pos:end="81:29"><name pos:start="81:10" pos:end="81:29">NBD_REP_ERR_PLATFORM</name></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="85:34"><expr pos:start="83:9" pos:end="85:33"><call pos:start="83:9" pos:end="85:33"><name pos:start="83:9" pos:end="83:18">error_setg</name><argument_list pos:start="83:19" pos:end="85:33">(<argument pos:start="83:20" pos:end="83:23"><expr pos:start="83:20" pos:end="83:23"><name pos:start="83:20" pos:end="83:23">errp</name></expr></argument>, <argument pos:start="83:26" pos:end="83:67"><expr pos:start="83:26" pos:end="83:67"><literal type="string" pos:start="83:26" pos:end="83:60">"Server lacks support for option %"</literal> <name pos:start="83:62" pos:end="83:67">PRIx32</name></expr></argument>,

                   <argument pos:start="85:20" pos:end="85:32"><expr pos:start="85:20" pos:end="85:32"><name pos:start="85:20" pos:end="85:32"><name pos:start="85:20" pos:end="85:24">reply</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:32">option</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>



    <case pos:start="91:5" pos:end="91:30">case <expr pos:start="91:10" pos:end="91:29"><name pos:start="91:10" pos:end="91:29">NBD_REP_ERR_TLS_REQD</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="95:34"><expr pos:start="93:9" pos:end="95:33"><call pos:start="93:9" pos:end="95:33"><name pos:start="93:9" pos:end="93:18">error_setg</name><argument_list pos:start="93:19" pos:end="95:33">(<argument pos:start="93:20" pos:end="93:23"><expr pos:start="93:20" pos:end="93:23"><name pos:start="93:20" pos:end="93:23">errp</name></expr></argument>, <argument pos:start="93:26" pos:end="93:74"><expr pos:start="93:26" pos:end="93:74"><literal type="string" pos:start="93:26" pos:end="93:67">"TLS negotiation required before option %"</literal> <name pos:start="93:69" pos:end="93:74">PRIx32</name></expr></argument>,

                   <argument pos:start="95:20" pos:end="95:32"><expr pos:start="95:20" pos:end="95:32"><name pos:start="95:20" pos:end="95:32"><name pos:start="95:20" pos:end="95:24">reply</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:32">option</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>



    <case pos:start="101:5" pos:end="101:30">case <expr pos:start="101:10" pos:end="101:29"><name pos:start="101:10" pos:end="101:29">NBD_REP_ERR_SHUTDOWN</name></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="105:34"><expr pos:start="103:9" pos:end="105:33"><call pos:start="103:9" pos:end="105:33"><name pos:start="103:9" pos:end="103:18">error_setg</name><argument_list pos:start="103:19" pos:end="105:33">(<argument pos:start="103:20" pos:end="103:23"><expr pos:start="103:20" pos:end="103:23"><name pos:start="103:20" pos:end="103:23">errp</name></expr></argument>, <argument pos:start="103:26" pos:end="103:70"><expr pos:start="103:26" pos:end="103:70"><literal type="string" pos:start="103:26" pos:end="103:63">"Server shutting down before option %"</literal> <name pos:start="103:65" pos:end="103:70">PRIx32</name></expr></argument>,

                   <argument pos:start="105:20" pos:end="105:32"><expr pos:start="105:20" pos:end="105:32"><name pos:start="105:20" pos:end="105:32"><name pos:start="105:20" pos:end="105:24">reply</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:32">option</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>



    <default pos:start="111:5" pos:end="111:12">default:</default>

        <expr_stmt pos:start="113:9" pos:end="115:34"><expr pos:start="113:9" pos:end="115:33"><call pos:start="113:9" pos:end="115:33"><name pos:start="113:9" pos:end="113:18">error_setg</name><argument_list pos:start="113:19" pos:end="115:33">(<argument pos:start="113:20" pos:end="113:23"><expr pos:start="113:20" pos:end="113:23"><name pos:start="113:20" pos:end="113:23">errp</name></expr></argument>, <argument pos:start="113:26" pos:end="113:77"><expr pos:start="113:26" pos:end="113:77"><literal type="string" pos:start="113:26" pos:end="113:70">"Unknown error code when asking for option %"</literal> <name pos:start="113:72" pos:end="113:77">PRIx32</name></expr></argument>,

                   <argument pos:start="115:20" pos:end="115:32"><expr pos:start="115:20" pos:end="115:32"><name pos:start="115:20" pos:end="115:32"><name pos:start="115:20" pos:end="115:24">reply</name><operator pos:start="115:25" pos:end="115:26">-&gt;</operator><name pos:start="115:27" pos:end="115:32">option</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="123:5" pos:end="127:5"><if pos:start="123:5" pos:end="127:5">if <condition pos:start="123:8" pos:end="123:12">(<expr pos:start="123:9" pos:end="123:11"><name pos:start="123:9" pos:end="123:11">msg</name></expr>)</condition> <block pos:start="123:14" pos:end="127:5">{<block_content pos:start="125:9" pos:end="125:45">

        <expr_stmt pos:start="125:9" pos:end="125:45"><expr pos:start="125:9" pos:end="125:44"><call pos:start="125:9" pos:end="125:44"><name pos:start="125:9" pos:end="125:25">error_append_hint</name><argument_list pos:start="125:26" pos:end="125:44">(<argument pos:start="125:27" pos:end="125:30"><expr pos:start="125:27" pos:end="125:30"><name pos:start="125:27" pos:end="125:30">errp</name></expr></argument>, <argument pos:start="125:33" pos:end="125:38"><expr pos:start="125:33" pos:end="125:38"><literal type="string" pos:start="125:33" pos:end="125:38">"%s\n"</literal></expr></argument>, <argument pos:start="125:41" pos:end="125:43"><expr pos:start="125:41" pos:end="125:43"><name pos:start="125:41" pos:end="125:43">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



 <label pos:start="131:2" pos:end="131:9"><name pos:start="131:2" pos:end="131:8">cleanup</name>:</label>

    <expr_stmt pos:start="133:5" pos:end="133:16"><expr pos:start="133:5" pos:end="133:15"><call pos:start="133:5" pos:end="133:15"><name pos:start="133:5" pos:end="133:10">g_free</name><argument_list pos:start="133:11" pos:end="133:15">(<argument pos:start="133:12" pos:end="133:14"><expr pos:start="133:12" pos:end="133:14"><name pos:start="133:12" pos:end="133:14">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="139:5"><if pos:start="135:5" pos:end="139:5">if <condition pos:start="135:8" pos:end="135:19">(<expr pos:start="135:9" pos:end="135:18"><name pos:start="135:9" pos:end="135:14">result</name> <operator pos:start="135:16" pos:end="135:16">&lt;</operator> <literal type="number" pos:start="135:18" pos:end="135:18">0</literal></expr>)</condition> <block pos:start="135:21" pos:end="139:5">{<block_content pos:start="137:9" pos:end="137:32">

        <expr_stmt pos:start="137:9" pos:end="137:32"><expr pos:start="137:9" pos:end="137:31"><call pos:start="137:9" pos:end="137:31"><name pos:start="137:9" pos:end="137:26">nbd_send_opt_abort</name><argument_list pos:start="137:27" pos:end="137:31">(<argument pos:start="137:28" pos:end="137:30"><expr pos:start="137:28" pos:end="137:30"><name pos:start="137:28" pos:end="137:30">ioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="141:5" pos:end="141:18">return <expr pos:start="141:12" pos:end="141:17"><name pos:start="141:12" pos:end="141:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
