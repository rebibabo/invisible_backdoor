<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12118.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">tcg_cpu_exec</name><parameter_list pos:start="1:25" pos:end="1:30">(<parameter pos:start="1:26" pos:end="1:29"><decl pos:start="1:26" pos:end="1:29"><type pos:start="1:26" pos:end="1:29"><name pos:start="1:26" pos:end="1:29">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:5">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:29"><if pos:start="9:5" pos:end="11:29">if <condition pos:start="9:8" pos:end="9:25">(<expr pos:start="9:9" pos:end="9:24"><name pos:start="9:9" pos:end="9:16">next_cpu</name> <operator pos:start="9:18" pos:end="9:19">==</operator> <name pos:start="9:21" pos:end="9:24">NULL</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:29"><block_content pos:start="11:9" pos:end="11:29">

        <expr_stmt pos:start="11:9" pos:end="11:29"><expr pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:16">next_cpu</name> <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:28">first_cpu</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="13:5" pos:end="47:5">for <control pos:start="13:9" pos:end="13:59">(<init pos:start="13:10" pos:end="13:10">;</init> <condition pos:start="13:12" pos:end="13:28"><expr pos:start="13:12" pos:end="13:27"><name pos:start="13:12" pos:end="13:19">next_cpu</name> <operator pos:start="13:21" pos:end="13:22">!=</operator> <name pos:start="13:24" pos:end="13:27">NULL</name></expr>;</condition> <incr pos:start="13:30" pos:end="13:58"><expr pos:start="13:30" pos:end="13:58"><name pos:start="13:30" pos:end="13:37">next_cpu</name> <operator pos:start="13:39" pos:end="13:39">=</operator> <name pos:start="13:41" pos:end="13:58"><name pos:start="13:41" pos:end="13:48">next_cpu</name><operator pos:start="13:49" pos:end="13:50">-&gt;</operator><name pos:start="13:51" pos:end="13:58">next_cpu</name></name></expr></incr>)</control> <block pos:start="13:61" pos:end="47:5">{<block_content pos:start="15:9" pos:end="45:9">

        <decl_stmt pos:start="15:9" pos:end="15:43"><decl pos:start="15:9" pos:end="15:42"><type pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:16">CPUState</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:21">env</name> <init pos:start="15:23" pos:end="15:42">= <expr pos:start="15:25" pos:end="15:42"><name pos:start="15:25" pos:end="15:31">cur_cpu</name> <operator pos:start="15:33" pos:end="15:33">=</operator> <name pos:start="15:35" pos:end="15:42">next_cpu</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:32">(<expr pos:start="19:13" pos:end="19:31"><name pos:start="19:13" pos:end="19:31">timer_alarm_pending</name></expr>)</condition> <block pos:start="19:34" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:18">

            <expr_stmt pos:start="21:13" pos:end="21:36"><expr pos:start="21:13" pos:end="21:35"><name pos:start="21:13" pos:end="21:31">timer_alarm_pending</name> <operator pos:start="21:33" pos:end="21:33">=</operator> <literal type="number" pos:start="21:35" pos:end="21:35">0</literal></expr>;</expr_stmt>

            <break pos:start="23:13" pos:end="23:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="33:18"><if pos:start="27:9" pos:end="29:37">if <condition pos:start="27:12" pos:end="27:29">(<expr pos:start="27:13" pos:end="27:28"><call pos:start="27:13" pos:end="27:28"><name pos:start="27:13" pos:end="27:23">cpu_can_run</name><argument_list pos:start="27:24" pos:end="27:28">(<argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">env</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:37"><block_content pos:start="29:13" pos:end="29:37">

            <expr_stmt pos:start="29:13" pos:end="29:37"><expr pos:start="29:13" pos:end="29:36"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:36"><name pos:start="29:19" pos:end="29:31">qemu_cpu_exec</name><argument_list pos:start="29:32" pos:end="29:36">(<argument pos:start="29:33" pos:end="29:35"><expr pos:start="29:33" pos:end="29:35"><name pos:start="29:33" pos:end="29:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="31:9" pos:end="33:18">else if <condition pos:start="31:17" pos:end="31:27">(<expr pos:start="31:18" pos:end="31:26"><name pos:start="31:18" pos:end="31:26"><name pos:start="31:18" pos:end="31:20">env</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:26">stop</name></name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:18"><block_content pos:start="33:13" pos:end="33:18">

            <break pos:start="33:13" pos:end="33:18">break;</break></block_content></block></if></if_stmt>



        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="45:9">if <condition pos:start="37:12" pos:end="37:30">(<expr pos:start="37:13" pos:end="37:29"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:18">==</operator> <name pos:start="37:20" pos:end="37:29">EXCP_DEBUG</name></expr>)</condition> <block pos:start="37:32" pos:end="45:9">{<block_content pos:start="39:13" pos:end="43:18">

            <expr_stmt pos:start="39:13" pos:end="39:34"><expr pos:start="39:13" pos:end="39:33"><call pos:start="39:13" pos:end="39:33"><name pos:start="39:13" pos:end="39:28">gdb_set_stop_cpu</name><argument_list pos:start="39:29" pos:end="39:33">(<argument pos:start="39:30" pos:end="39:32"><expr pos:start="39:30" pos:end="39:32"><name pos:start="39:30" pos:end="39:32">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:32"><expr pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:27">debug_requested</name> <operator pos:start="41:29" pos:end="41:29">=</operator> <literal type="number" pos:start="41:31" pos:end="41:31">1</literal></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
