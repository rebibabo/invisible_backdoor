<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21422.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">cpu_loop</name><parameter_list pos:start="1:14" pos:end="1:32">(<parameter pos:start="1:15" pos:end="1:31"><decl pos:start="1:15" pos:end="1:31"><type pos:start="1:15" pos:end="1:28"><name pos:start="1:15" pos:end="1:26">CPUM68KState</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="183:1">{<block_content pos:start="5:5" pos:end="181:5">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:45">= <expr pos:start="5:20" pos:end="5:45"><call pos:start="5:20" pos:end="5:45"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:45">(<argument pos:start="5:24" pos:end="5:44"><expr pos:start="5:24" pos:end="5:44"><call pos:start="5:24" pos:end="5:44"><name pos:start="5:24" pos:end="5:39">m68k_env_get_cpu</name><argument_list pos:start="5:40" pos:end="5:44">(<argument pos:start="5:41" pos:end="5:43"><expr pos:start="5:41" pos:end="5:43"><name pos:start="5:41" pos:end="5:43">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">trapnr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:20">target_siginfo_t</name></type> <name pos:start="11:22" pos:end="11:25">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">TaskState</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:17">ts</name> <init pos:start="13:19" pos:end="13:30">= <expr pos:start="13:21" pos:end="13:30"><name pos:start="13:21" pos:end="13:30"><name pos:start="13:21" pos:end="13:22">cs</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:30">opaque</name></name></expr></init></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="181:5">for<control pos:start="17:8" pos:end="17:11">(<init pos:start="17:9" pos:end="17:9">;</init><condition pos:start="17:10" pos:end="17:10">;</condition><incr/>)</control> <block pos:start="17:13" pos:end="181:5">{<block_content pos:start="19:9" pos:end="179:37">

        <expr_stmt pos:start="19:9" pos:end="19:27"><expr pos:start="19:9" pos:end="19:26"><call pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:22">cpu_exec_start</name><argument_list pos:start="19:23" pos:end="19:26">(<argument pos:start="19:24" pos:end="19:25"><expr pos:start="19:24" pos:end="19:25"><name pos:start="19:24" pos:end="19:25">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:35"><expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:14">trapnr</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:34"><name pos:start="21:18" pos:end="21:30">cpu_m68k_exec</name><argument_list pos:start="21:31" pos:end="21:34">(<argument pos:start="21:32" pos:end="21:33"><expr pos:start="21:32" pos:end="21:33"><name pos:start="21:32" pos:end="21:33">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><call pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:20">cpu_exec_end</name><argument_list pos:start="23:21" pos:end="23:24">(<argument pos:start="23:22" pos:end="23:23"><expr pos:start="23:22" pos:end="23:23"><name pos:start="23:22" pos:end="23:23">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="25:9" pos:end="177:9">switch<condition pos:start="25:15" pos:end="25:22">(<expr pos:start="25:16" pos:end="25:21"><name pos:start="25:16" pos:end="25:21">trapnr</name></expr>)</condition> <block pos:start="25:24" pos:end="177:9">{<block_content pos:start="27:9" pos:end="175:20">

        <case pos:start="27:9" pos:end="27:26">case <expr pos:start="27:14" pos:end="27:25"><name pos:start="27:14" pos:end="27:25">EXCP_ILLEGAL</name></expr>:</case>

            <block pos:start="29:13" pos:end="47:13">{<block_content pos:start="31:17" pos:end="45:17">

                <if_stmt pos:start="31:17" pos:end="45:17"><if pos:start="31:17" pos:end="41:17">if <condition pos:start="31:20" pos:end="31:37">(<expr pos:start="31:21" pos:end="31:36"><name pos:start="31:21" pos:end="31:36"><name pos:start="31:21" pos:end="31:22">ts</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:36">sim_syscalls</name></name></expr>)</condition> <block pos:start="31:39" pos:end="41:17">{<block_content pos:start="33:21" pos:end="39:45">

                    <decl_stmt pos:start="33:21" pos:end="33:32"><decl pos:start="33:21" pos:end="33:31"><type pos:start="33:21" pos:end="33:28"><name pos:start="33:21" pos:end="33:28">uint16_t</name></type> <name pos:start="33:30" pos:end="33:31">nr</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="35:21" pos:end="35:50"><expr pos:start="35:21" pos:end="35:49"><call pos:start="35:21" pos:end="35:49"><name pos:start="35:21" pos:end="35:32">get_user_u16</name><argument_list pos:start="35:33" pos:end="35:49">(<argument pos:start="35:34" pos:end="35:35"><expr pos:start="35:34" pos:end="35:35"><name pos:start="35:34" pos:end="35:35">nr</name></expr></argument>, <argument pos:start="35:38" pos:end="35:48"><expr pos:start="35:38" pos:end="35:48"><name pos:start="35:38" pos:end="35:44"><name pos:start="35:38" pos:end="35:40">env</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:44">pc</name></name> <operator pos:start="35:46" pos:end="35:46">+</operator> <literal type="number" pos:start="35:48" pos:end="35:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="37:21" pos:end="37:33"><expr pos:start="37:21" pos:end="37:32"><name pos:start="37:21" pos:end="37:27"><name pos:start="37:21" pos:end="37:23">env</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:27">pc</name></name> <operator pos:start="37:29" pos:end="37:30">+=</operator> <literal type="number" pos:start="37:32" pos:end="37:32">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="39:21" pos:end="39:45"><expr pos:start="39:21" pos:end="39:44"><call pos:start="39:21" pos:end="39:44"><name pos:start="39:21" pos:end="39:35">do_m68k_simcall</name><argument_list pos:start="39:36" pos:end="39:44">(<argument pos:start="39:37" pos:end="39:39"><expr pos:start="39:37" pos:end="39:39"><name pos:start="39:37" pos:end="39:39">env</name></expr></argument>, <argument pos:start="39:42" pos:end="39:43"><expr pos:start="39:42" pos:end="39:43"><name pos:start="39:42" pos:end="39:43">nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="41:19" pos:end="45:17">else <block pos:start="41:24" pos:end="45:17">{<block_content pos:start="43:21" pos:end="43:35">

                    <goto pos:start="43:21" pos:end="43:35">goto <name pos:start="43:26" pos:end="43:34">do_sigill</name>;</goto>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        <case pos:start="51:9" pos:end="51:28">case <expr pos:start="51:14" pos:end="51:27"><name pos:start="51:14" pos:end="51:27">EXCP_HALT_INSN</name></expr>:</case>

            <comment type="block" pos:start="53:13" pos:end="53:38">/* Semihosing syscall.  */</comment>

            <expr_stmt pos:start="55:13" pos:end="55:25"><expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:15">env</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:19">pc</name></name> <operator pos:start="55:21" pos:end="55:22">+=</operator> <literal type="number" pos:start="55:24" pos:end="55:24">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:52"><expr pos:start="57:13" pos:end="57:51"><call pos:start="57:13" pos:end="57:51"><name pos:start="57:13" pos:end="57:31">do_m68k_semihosting</name><argument_list pos:start="57:32" pos:end="57:51">(<argument pos:start="57:33" pos:end="57:35"><expr pos:start="57:33" pos:end="57:35"><name pos:start="57:33" pos:end="57:35">env</name></expr></argument>, <argument pos:start="57:38" pos:end="57:50"><expr pos:start="57:38" pos:end="57:50"><name pos:start="57:38" pos:end="57:50"><name pos:start="57:38" pos:end="57:40">env</name><operator pos:start="57:41" pos:end="57:42">-&gt;</operator><name pos:start="57:43" pos:end="57:47">dregs</name><index pos:start="57:48" pos:end="57:50">[<expr pos:start="57:49" pos:end="57:49"><literal type="number" pos:start="57:49" pos:end="57:49">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="59:13" pos:end="59:18">break;</break>

        <case pos:start="61:9" pos:end="61:24">case <expr pos:start="61:14" pos:end="61:23"><name pos:start="61:14" pos:end="61:23">EXCP_LINEA</name></expr>:</case>

        <case pos:start="63:9" pos:end="63:24">case <expr pos:start="63:14" pos:end="63:23"><name pos:start="63:14" pos:end="63:23">EXCP_LINEF</name></expr>:</case>

        <case pos:start="65:9" pos:end="65:30">case <expr pos:start="65:14" pos:end="65:29"><name pos:start="65:14" pos:end="65:29">EXCP_UNSUPPORTED</name></expr>:</case>

        <label pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:17">do_sigill</name>:</label>

            <expr_stmt pos:start="69:13" pos:end="69:42"><expr pos:start="69:13" pos:end="69:41"><name pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:16">info</name><operator pos:start="69:17" pos:end="69:17">.</operator><name pos:start="69:18" pos:end="69:25">si_signo</name></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:41">TARGET_SIGILL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:30"><expr pos:start="71:13" pos:end="71:29"><name pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:16">info</name><operator pos:start="71:17" pos:end="71:17">.</operator><name pos:start="71:18" pos:end="71:25">si_errno</name></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <literal type="number" pos:start="71:29" pos:end="71:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:45"><expr pos:start="73:13" pos:end="73:44"><name pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:16">info</name><operator pos:start="73:17" pos:end="73:17">.</operator><name pos:start="73:18" pos:end="73:24">si_code</name></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <name pos:start="73:28" pos:end="73:44">TARGET_ILL_ILLOPN</name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:53"><expr pos:start="75:13" pos:end="75:52"><name pos:start="75:13" pos:end="75:42"><name pos:start="75:13" pos:end="75:16">info</name><operator pos:start="75:17" pos:end="75:17">.</operator><name pos:start="75:18" pos:end="75:26">_sifields</name><operator pos:start="75:27" pos:end="75:27">.</operator><name pos:start="75:28" pos:end="75:36">_sigfault</name><operator pos:start="75:37" pos:end="75:37">.</operator><name pos:start="75:38" pos:end="75:42">_addr</name></name> <operator pos:start="75:44" pos:end="75:44">=</operator> <name pos:start="75:46" pos:end="75:52"><name pos:start="75:46" pos:end="75:48">env</name><operator pos:start="75:49" pos:end="75:50">-&gt;</operator><name pos:start="75:51" pos:end="75:52">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:52"><expr pos:start="77:13" pos:end="77:51"><call pos:start="77:13" pos:end="77:51"><name pos:start="77:13" pos:end="77:24">queue_signal</name><argument_list pos:start="77:25" pos:end="77:51">(<argument pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:28">env</name></expr></argument>, <argument pos:start="77:31" pos:end="77:43"><expr pos:start="77:31" pos:end="77:43"><name pos:start="77:31" pos:end="77:43"><name pos:start="77:31" pos:end="77:34">info</name><operator pos:start="77:35" pos:end="77:35">.</operator><name pos:start="77:36" pos:end="77:43">si_signo</name></name></expr></argument>, <argument pos:start="77:46" pos:end="77:50"><expr pos:start="77:46" pos:end="77:50"><operator pos:start="77:46" pos:end="77:46">&amp;</operator><name pos:start="77:47" pos:end="77:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        <case pos:start="81:9" pos:end="81:24">case <expr pos:start="81:14" pos:end="81:23"><name pos:start="81:14" pos:end="81:23">EXCP_TRAP0</name></expr>:</case>

            <block pos:start="83:13" pos:end="109:13">{<block_content pos:start="85:17" pos:end="107:48">

                <expr_stmt pos:start="85:17" pos:end="85:37"><expr pos:start="85:17" pos:end="85:36"><name pos:start="85:17" pos:end="85:32"><name pos:start="85:17" pos:end="85:18">ts</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:32">sim_syscalls</name></name> <operator pos:start="85:34" pos:end="85:34">=</operator> <literal type="number" pos:start="85:36" pos:end="85:36">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:34"><expr pos:start="87:17" pos:end="87:33"><name pos:start="87:17" pos:end="87:17">n</name> <operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:33"><name pos:start="87:21" pos:end="87:23">env</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:30">dregs</name><index pos:start="87:31" pos:end="87:33">[<expr pos:start="87:32" pos:end="87:32"><literal type="number" pos:start="87:32" pos:end="87:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:29"><expr pos:start="89:17" pos:end="89:28"><name pos:start="89:17" pos:end="89:23"><name pos:start="89:17" pos:end="89:19">env</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:23">pc</name></name> <operator pos:start="89:25" pos:end="89:26">+=</operator> <literal type="number" pos:start="89:28" pos:end="89:28">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="107:48"><expr pos:start="91:17" pos:end="107:47"><name pos:start="91:17" pos:end="91:29"><name pos:start="91:17" pos:end="91:19">env</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:26">dregs</name><index pos:start="91:27" pos:end="91:29">[<expr pos:start="91:28" pos:end="91:28"><literal type="number" pos:start="91:28" pos:end="91:28">0</literal></expr>]</index></name> <operator pos:start="91:31" pos:end="91:31">=</operator> <call pos:start="91:33" pos:end="107:47"><name pos:start="91:33" pos:end="91:42">do_syscall</name><argument_list pos:start="91:43" pos:end="107:47">(<argument pos:start="91:44" pos:end="91:46"><expr pos:start="91:44" pos:end="91:46"><name pos:start="91:44" pos:end="91:46">env</name></expr></argument>,

                                          <argument pos:start="93:43" pos:end="93:43"><expr pos:start="93:43" pos:end="93:43"><name pos:start="93:43" pos:end="93:43">n</name></expr></argument>,

                                          <argument pos:start="95:43" pos:end="95:55"><expr pos:start="95:43" pos:end="95:55"><name pos:start="95:43" pos:end="95:55"><name pos:start="95:43" pos:end="95:45">env</name><operator pos:start="95:46" pos:end="95:47">-&gt;</operator><name pos:start="95:48" pos:end="95:52">dregs</name><index pos:start="95:53" pos:end="95:55">[<expr pos:start="95:54" pos:end="95:54"><literal type="number" pos:start="95:54" pos:end="95:54">1</literal></expr>]</index></name></expr></argument>,

                                          <argument pos:start="97:43" pos:end="97:55"><expr pos:start="97:43" pos:end="97:55"><name pos:start="97:43" pos:end="97:55"><name pos:start="97:43" pos:end="97:45">env</name><operator pos:start="97:46" pos:end="97:47">-&gt;</operator><name pos:start="97:48" pos:end="97:52">dregs</name><index pos:start="97:53" pos:end="97:55">[<expr pos:start="97:54" pos:end="97:54"><literal type="number" pos:start="97:54" pos:end="97:54">2</literal></expr>]</index></name></expr></argument>,

                                          <argument pos:start="99:43" pos:end="99:55"><expr pos:start="99:43" pos:end="99:55"><name pos:start="99:43" pos:end="99:55"><name pos:start="99:43" pos:end="99:45">env</name><operator pos:start="99:46" pos:end="99:47">-&gt;</operator><name pos:start="99:48" pos:end="99:52">dregs</name><index pos:start="99:53" pos:end="99:55">[<expr pos:start="99:54" pos:end="99:54"><literal type="number" pos:start="99:54" pos:end="99:54">3</literal></expr>]</index></name></expr></argument>,

                                          <argument pos:start="101:43" pos:end="101:55"><expr pos:start="101:43" pos:end="101:55"><name pos:start="101:43" pos:end="101:55"><name pos:start="101:43" pos:end="101:45">env</name><operator pos:start="101:46" pos:end="101:47">-&gt;</operator><name pos:start="101:48" pos:end="101:52">dregs</name><index pos:start="101:53" pos:end="101:55">[<expr pos:start="101:54" pos:end="101:54"><literal type="number" pos:start="101:54" pos:end="101:54">4</literal></expr>]</index></name></expr></argument>,

                                          <argument pos:start="103:43" pos:end="103:55"><expr pos:start="103:43" pos:end="103:55"><name pos:start="103:43" pos:end="103:55"><name pos:start="103:43" pos:end="103:45">env</name><operator pos:start="103:46" pos:end="103:47">-&gt;</operator><name pos:start="103:48" pos:end="103:52">dregs</name><index pos:start="103:53" pos:end="103:55">[<expr pos:start="103:54" pos:end="103:54"><literal type="number" pos:start="103:54" pos:end="103:54">5</literal></expr>]</index></name></expr></argument>,

                                          <argument pos:start="105:43" pos:end="105:55"><expr pos:start="105:43" pos:end="105:55"><name pos:start="105:43" pos:end="105:55"><name pos:start="105:43" pos:end="105:45">env</name><operator pos:start="105:46" pos:end="105:47">-&gt;</operator><name pos:start="105:48" pos:end="105:52">aregs</name><index pos:start="105:53" pos:end="105:55">[<expr pos:start="105:54" pos:end="105:54"><literal type="number" pos:start="105:54" pos:end="105:54">0</literal></expr>]</index></name></expr></argument>,

                                          <argument pos:start="107:43" pos:end="107:43"><expr pos:start="107:43" pos:end="107:43"><literal type="number" pos:start="107:43" pos:end="107:43">0</literal></expr></argument>, <argument pos:start="107:46" pos:end="107:46"><expr pos:start="107:46" pos:end="107:46"><literal type="number" pos:start="107:46" pos:end="107:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="111:13" pos:end="111:18">break;</break>

        <case pos:start="113:9" pos:end="113:28">case <expr pos:start="113:14" pos:end="113:27"><name pos:start="113:14" pos:end="113:27">EXCP_INTERRUPT</name></expr>:</case>

            <comment type="block" pos:start="115:13" pos:end="115:67">/* just indicate that signals should be handled asap */</comment>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:25">case <expr pos:start="119:14" pos:end="119:24"><name pos:start="119:14" pos:end="119:24">EXCP_ACCESS</name></expr>:</case>

            <block pos:start="121:13" pos:end="135:13">{<block_content pos:start="123:17" pos:end="133:56">

                <expr_stmt pos:start="123:17" pos:end="123:47"><expr pos:start="123:17" pos:end="123:46"><name pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:20">info</name><operator pos:start="123:21" pos:end="123:21">.</operator><name pos:start="123:22" pos:end="123:29">si_signo</name></name> <operator pos:start="123:31" pos:end="123:31">=</operator> <name pos:start="123:33" pos:end="123:46">TARGET_SIGSEGV</name></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:34"><expr pos:start="125:17" pos:end="125:33"><name pos:start="125:17" pos:end="125:29"><name pos:start="125:17" pos:end="125:20">info</name><operator pos:start="125:21" pos:end="125:21">.</operator><name pos:start="125:22" pos:end="125:29">si_errno</name></name> <operator pos:start="125:31" pos:end="125:31">=</operator> <literal type="number" pos:start="125:33" pos:end="125:33">0</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="127:17" pos:end="127:48">/* XXX: check env-&gt;error_code */</comment>

                <expr_stmt pos:start="129:17" pos:end="129:50"><expr pos:start="129:17" pos:end="129:49"><name pos:start="129:17" pos:end="129:28"><name pos:start="129:17" pos:end="129:20">info</name><operator pos:start="129:21" pos:end="129:21">.</operator><name pos:start="129:22" pos:end="129:28">si_code</name></name> <operator pos:start="129:30" pos:end="129:30">=</operator> <name pos:start="129:32" pos:end="129:49">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:61"><expr pos:start="131:17" pos:end="131:60"><name pos:start="131:17" pos:end="131:46"><name pos:start="131:17" pos:end="131:20">info</name><operator pos:start="131:21" pos:end="131:21">.</operator><name pos:start="131:22" pos:end="131:30">_sifields</name><operator pos:start="131:31" pos:end="131:31">.</operator><name pos:start="131:32" pos:end="131:40">_sigfault</name><operator pos:start="131:41" pos:end="131:41">.</operator><name pos:start="131:42" pos:end="131:46">_addr</name></name> <operator pos:start="131:48" pos:end="131:48">=</operator> <name pos:start="131:50" pos:end="131:60"><name pos:start="131:50" pos:end="131:52">env</name><operator pos:start="131:53" pos:end="131:54">-&gt;</operator><name pos:start="131:55" pos:end="131:57">mmu</name><operator pos:start="131:58" pos:end="131:58">.</operator><name pos:start="131:59" pos:end="131:60">ar</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:56"><expr pos:start="133:17" pos:end="133:55"><call pos:start="133:17" pos:end="133:55"><name pos:start="133:17" pos:end="133:28">queue_signal</name><argument_list pos:start="133:29" pos:end="133:55">(<argument pos:start="133:30" pos:end="133:32"><expr pos:start="133:30" pos:end="133:32"><name pos:start="133:30" pos:end="133:32">env</name></expr></argument>, <argument pos:start="133:35" pos:end="133:47"><expr pos:start="133:35" pos:end="133:47"><name pos:start="133:35" pos:end="133:47"><name pos:start="133:35" pos:end="133:38">info</name><operator pos:start="133:39" pos:end="133:39">.</operator><name pos:start="133:40" pos:end="133:47">si_signo</name></name></expr></argument>, <argument pos:start="133:50" pos:end="133:54"><expr pos:start="133:50" pos:end="133:54"><operator pos:start="133:50" pos:end="133:50">&amp;</operator><name pos:start="133:51" pos:end="133:54">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="137:13" pos:end="137:18">break;</break>

        <case pos:start="139:9" pos:end="139:24">case <expr pos:start="139:14" pos:end="139:23"><name pos:start="139:14" pos:end="139:23">EXCP_DEBUG</name></expr>:</case>

            <block pos:start="141:13" pos:end="163:13">{<block_content pos:start="143:17" pos:end="161:19">

                <decl_stmt pos:start="143:17" pos:end="143:24"><decl pos:start="143:17" pos:end="143:23"><type pos:start="143:17" pos:end="143:19"><name pos:start="143:17" pos:end="143:19">int</name></type> <name pos:start="143:21" pos:end="143:23">sig</name></decl>;</decl_stmt>



                <expr_stmt pos:start="147:17" pos:end="147:56"><expr pos:start="147:17" pos:end="147:55"><name pos:start="147:17" pos:end="147:19">sig</name> <operator pos:start="147:21" pos:end="147:21">=</operator> <call pos:start="147:23" pos:end="147:55"><name pos:start="147:23" pos:end="147:35">gdb_handlesig</name><argument_list pos:start="147:36" pos:end="147:55">(<argument pos:start="147:37" pos:end="147:38"><expr pos:start="147:37" pos:end="147:38"><name pos:start="147:37" pos:end="147:38">cs</name></expr></argument>, <argument pos:start="147:41" pos:end="147:54"><expr pos:start="147:41" pos:end="147:54"><name pos:start="147:41" pos:end="147:54">TARGET_SIGTRAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="149:17" pos:end="161:19"><if pos:start="149:17" pos:end="161:19">if <condition pos:start="149:20" pos:end="149:24">(<expr pos:start="149:21" pos:end="149:23"><name pos:start="149:21" pos:end="149:23">sig</name></expr>)</condition>

                  <block pos:start="151:19" pos:end="161:19">{<block_content pos:start="153:21" pos:end="159:60">

                    <expr_stmt pos:start="153:21" pos:end="153:40"><expr pos:start="153:21" pos:end="153:39"><name pos:start="153:21" pos:end="153:33"><name pos:start="153:21" pos:end="153:24">info</name><operator pos:start="153:25" pos:end="153:25">.</operator><name pos:start="153:26" pos:end="153:33">si_signo</name></name> <operator pos:start="153:35" pos:end="153:35">=</operator> <name pos:start="153:37" pos:end="153:39">sig</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="155:21" pos:end="155:38"><expr pos:start="155:21" pos:end="155:37"><name pos:start="155:21" pos:end="155:33"><name pos:start="155:21" pos:end="155:24">info</name><operator pos:start="155:25" pos:end="155:25">.</operator><name pos:start="155:26" pos:end="155:33">si_errno</name></name> <operator pos:start="155:35" pos:end="155:35">=</operator> <literal type="number" pos:start="155:37" pos:end="155:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="157:21" pos:end="157:53"><expr pos:start="157:21" pos:end="157:52"><name pos:start="157:21" pos:end="157:32"><name pos:start="157:21" pos:end="157:24">info</name><operator pos:start="157:25" pos:end="157:25">.</operator><name pos:start="157:26" pos:end="157:32">si_code</name></name> <operator pos:start="157:34" pos:end="157:34">=</operator> <name pos:start="157:36" pos:end="157:52">TARGET_TRAP_BRKPT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="159:21" pos:end="159:60"><expr pos:start="159:21" pos:end="159:59"><call pos:start="159:21" pos:end="159:59"><name pos:start="159:21" pos:end="159:32">queue_signal</name><argument_list pos:start="159:33" pos:end="159:59">(<argument pos:start="159:34" pos:end="159:36"><expr pos:start="159:34" pos:end="159:36"><name pos:start="159:34" pos:end="159:36">env</name></expr></argument>, <argument pos:start="159:39" pos:end="159:51"><expr pos:start="159:39" pos:end="159:51"><name pos:start="159:39" pos:end="159:51"><name pos:start="159:39" pos:end="159:42">info</name><operator pos:start="159:43" pos:end="159:43">.</operator><name pos:start="159:44" pos:end="159:51">si_signo</name></name></expr></argument>, <argument pos:start="159:54" pos:end="159:58"><expr pos:start="159:54" pos:end="159:58"><operator pos:start="159:54" pos:end="159:54">&amp;</operator><name pos:start="159:55" pos:end="159:58">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="165:13" pos:end="165:18">break;</break>

        <default pos:start="167:9" pos:end="167:16">default:</default>

            <expr_stmt pos:start="169:13" pos:end="171:28"><expr pos:start="169:13" pos:end="171:27"><call pos:start="169:13" pos:end="171:27"><name pos:start="169:13" pos:end="169:19">fprintf</name><argument_list pos:start="169:20" pos:end="171:27">(<argument pos:start="169:21" pos:end="169:26"><expr pos:start="169:21" pos:end="169:26"><name pos:start="169:21" pos:end="169:26">stderr</name></expr></argument>, <argument pos:start="169:29" pos:end="169:77"><expr pos:start="169:29" pos:end="169:77"><literal type="string" pos:start="169:29" pos:end="169:77">"qemu: unhandled CPU exception 0x%x - aborting\n"</literal></expr></argument>,

                    <argument pos:start="171:21" pos:end="171:26"><expr pos:start="171:21" pos:end="171:26"><name pos:start="171:21" pos:end="171:26">trapnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:51"><expr pos:start="173:13" pos:end="173:50"><call pos:start="173:13" pos:end="173:50"><name pos:start="173:13" pos:end="173:26">cpu_dump_state</name><argument_list pos:start="173:27" pos:end="173:50">(<argument pos:start="173:28" pos:end="173:29"><expr pos:start="173:28" pos:end="173:29"><name pos:start="173:28" pos:end="173:29">cs</name></expr></argument>, <argument pos:start="173:32" pos:end="173:37"><expr pos:start="173:32" pos:end="173:37"><name pos:start="173:32" pos:end="173:37">stderr</name></expr></argument>, <argument pos:start="173:40" pos:end="173:46"><expr pos:start="173:40" pos:end="173:46"><name pos:start="173:40" pos:end="173:46">fprintf</name></expr></argument>, <argument pos:start="173:49" pos:end="173:49"><expr pos:start="173:49" pos:end="173:49"><literal type="number" pos:start="173:49" pos:end="173:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:20"><expr pos:start="175:13" pos:end="175:19"><call pos:start="175:13" pos:end="175:19"><name pos:start="175:13" pos:end="175:17">abort</name><argument_list pos:start="175:18" pos:end="175:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="179:9" pos:end="179:37"><expr pos:start="179:9" pos:end="179:36"><call pos:start="179:9" pos:end="179:36"><name pos:start="179:9" pos:end="179:31">process_pending_signals</name><argument_list pos:start="179:32" pos:end="179:36">(<argument pos:start="179:33" pos:end="179:35"><expr pos:start="179:33" pos:end="179:35"><name pos:start="179:33" pos:end="179:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
