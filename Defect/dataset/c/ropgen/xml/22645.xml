<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22645.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">mov_text_decode_frame</name><parameter_list pos:start="1:33" pos:end="3:74">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:56"><decl pos:start="3:41" pos:end="3:56"><type pos:start="3:41" pos:end="3:56"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:56">got_sub_ptr</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:73"><decl pos:start="3:59" pos:end="3:73"><type pos:start="3:59" pos:end="3:73"><name pos:start="3:59" pos:end="3:66">AVPacket</name> <modifier pos:start="3:68" pos:end="3:68">*</modifier></type><name pos:start="3:69" pos:end="3:73">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="199:1">{<block_content pos:start="7:5" pos:end="197:23">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">AVSubtitle</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">sub</name> <init pos:start="7:21" pos:end="7:26">= <expr pos:start="7:23" pos:end="7:26"><name pos:start="7:23" pos:end="7:26">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:21">ts_start</name></decl>, <decl pos:start="9:24" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:24" pos:end="9:29">ts_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">AVBPrint</name></type> <name pos:start="11:14" pos:end="11:16">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:13">ptr</name> <init pos:start="13:15" pos:end="13:27">= <expr pos:start="13:17" pos:end="13:27"><name pos:start="13:17" pos:end="13:27"><name pos:start="13:17" pos:end="13:21">avpkt</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:27">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:13">end</name></decl>;</decl_stmt>

    <comment type="line" pos:start="17:5" pos:end="17:21">//char *ptr_temp;</comment>

    <decl_stmt pos:start="19:5" pos:end="19:57"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:19">text_length</name></decl>, <decl pos:start="19:22" pos:end="19:30"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:22" pos:end="19:30">tsmb_type</name></decl>, <decl pos:start="19:33" pos:end="19:45"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:33" pos:end="19:45">style_entries</name></decl>, <decl pos:start="19:48" pos:end="19:56"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:48" pos:end="19:56">tsmb_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:29"><decl pos:start="21:5" pos:end="21:28"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:7">int</name> <modifier pos:start="21:9" pos:end="21:9">*</modifier><modifier pos:start="21:10" pos:end="21:10">*</modifier></type><name pos:start="21:11" pos:end="21:21">style_start</name> <init pos:start="21:23" pos:end="21:28">= <expr pos:start="21:25" pos:end="21:28"><block pos:start="21:25" pos:end="21:28">{<expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr>,}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:27"><decl pos:start="23:5" pos:end="23:26"><type pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:7">int</name> <modifier pos:start="23:9" pos:end="23:9">*</modifier><modifier pos:start="23:10" pos:end="23:10">*</modifier></type><name pos:start="23:11" pos:end="23:19">style_end</name> <init pos:start="23:21" pos:end="23:26">= <expr pos:start="23:23" pos:end="23:26"><block pos:start="23:23" pos:end="23:26">{<expr pos:start="23:24" pos:end="23:24"><literal type="number" pos:start="23:24" pos:end="23:24">0</literal></expr>,}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:29"><decl pos:start="25:5" pos:end="25:28"><type pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:7">int</name> <modifier pos:start="25:9" pos:end="25:9">*</modifier><modifier pos:start="25:10" pos:end="25:10">*</modifier></type><name pos:start="25:11" pos:end="25:21">style_flags</name> <init pos:start="25:23" pos:end="25:28">= <expr pos:start="25:25" pos:end="25:28"><block pos:start="25:25" pos:end="25:28">{<expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">0</literal></expr>,}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:24"><decl pos:start="27:5" pos:end="27:23"><type pos:start="27:5" pos:end="27:19"><specifier pos:start="27:5" pos:end="27:9">const</specifier> <name pos:start="27:11" pos:end="27:17">uint8_t</name> <modifier pos:start="27:19" pos:end="27:19">*</modifier></type><name pos:start="27:20" pos:end="27:23">tsmb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:17"><decl pos:start="29:5" pos:end="29:13"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:13">index</name></decl>, <decl pos:start="29:16" pos:end="29:16"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:16" pos:end="29:16">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:14"><decl pos:start="31:5" pos:end="31:13"><type pos:start="31:5" pos:end="31:9"><name pos:start="31:5" pos:end="31:7">int</name> <modifier pos:start="31:9" pos:end="31:9">*</modifier></type><name pos:start="31:10" pos:end="31:13">flag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:19"><decl pos:start="33:5" pos:end="33:18"><type pos:start="33:5" pos:end="33:9"><name pos:start="33:5" pos:end="33:7">int</name> <modifier pos:start="33:9" pos:end="33:9">*</modifier></type><name pos:start="33:10" pos:end="33:18">style_pos</name></decl>;</decl_stmt>



    <if_stmt pos:start="37:5" pos:end="39:35"><if pos:start="37:5" pos:end="39:35">if <condition pos:start="37:8" pos:end="37:32">(<expr pos:start="37:9" pos:end="37:31"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:12">ptr</name> <operator pos:start="37:14" pos:end="37:15">||</operator> <name pos:start="37:17" pos:end="37:27"><name pos:start="37:17" pos:end="37:21">avpkt</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:27">size</name></name> <operator pos:start="37:29" pos:end="37:29">&lt;</operator> <literal type="number" pos:start="37:31" pos:end="37:31">2</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:35"><block_content pos:start="39:9" pos:end="39:35">

        <return pos:start="39:9" pos:end="39:35">return <expr pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="55:7">/*

     * A packet of size two with value zero is an empty subtitle

     * used to mark the end of the previous non-empty subtitle.

     * We can just drop them here as we have duration information

     * already. If the value is non-zero, then it's technically a

     * bad packet.

     */</comment>

    <if_stmt pos:start="57:5" pos:end="59:59"><if pos:start="57:5" pos:end="59:59">if <condition pos:start="57:8" pos:end="57:25">(<expr pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:13">avpkt</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:19">size</name></name> <operator pos:start="57:21" pos:end="57:22">==</operator> <literal type="number" pos:start="57:24" pos:end="57:24">2</literal></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:59"><block_content pos:start="59:9" pos:end="59:59">

        <return pos:start="59:9" pos:end="59:59">return <expr pos:start="59:16" pos:end="59:58"><ternary pos:start="59:16" pos:end="59:58"><condition pos:start="59:16" pos:end="59:34"><expr pos:start="59:16" pos:end="59:32"><call pos:start="59:16" pos:end="59:27"><name pos:start="59:16" pos:end="59:22">AV_RB16</name><argument_list pos:start="59:23" pos:end="59:27">(<argument pos:start="59:24" pos:end="59:26"><expr pos:start="59:24" pos:end="59:26"><name pos:start="59:24" pos:end="59:26">ptr</name></expr></argument>)</argument_list></call> <operator pos:start="59:29" pos:end="59:30">==</operator> <literal type="number" pos:start="59:32" pos:end="59:32">0</literal></expr> ?</condition><then pos:start="59:36" pos:end="59:36"> <expr pos:start="59:36" pos:end="59:36"><literal type="number" pos:start="59:36" pos:end="59:36">0</literal></expr> </then><else pos:start="59:38" pos:end="59:58">: <expr pos:start="59:40" pos:end="59:58"><name pos:start="59:40" pos:end="59:58">AVERROR_INVALIDDATA</name></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="71:7">/*

     * The first two bytes of the packet are the length of the text string

     * In complex cases, there are style descriptors appended to the string

     * so we can't just assume the packet size is the string size.

     */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:31"><expr pos:start="73:5" pos:end="73:30"><name pos:start="73:5" pos:end="73:15">text_length</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="73:30"><name pos:start="73:19" pos:end="73:25">AV_RB16</name><argument_list pos:start="73:26" pos:end="73:30">(<argument pos:start="73:27" pos:end="73:29"><expr pos:start="73:27" pos:end="73:29"><name pos:start="73:27" pos:end="73:29">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:52"><expr pos:start="75:5" pos:end="75:51"><name pos:start="75:5" pos:end="75:7">end</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <name pos:start="75:11" pos:end="75:13">ptr</name> <operator pos:start="75:15" pos:end="75:15">+</operator> <call pos:start="75:17" pos:end="75:51"><name pos:start="75:17" pos:end="75:21">FFMIN</name><argument_list pos:start="75:22" pos:end="75:51">(<argument pos:start="75:23" pos:end="75:37"><expr pos:start="75:23" pos:end="75:37"><literal type="number" pos:start="75:23" pos:end="75:25">2</literal> <operator pos:start="75:25" pos:end="75:25">+</operator> <name pos:start="75:27" pos:end="75:37">text_length</name></expr></argument>, <argument pos:start="75:40" pos:end="75:50"><expr pos:start="75:40" pos:end="75:50"><name pos:start="75:40" pos:end="75:50"><name pos:start="75:40" pos:end="75:44">avpkt</name><operator pos:start="75:45" pos:end="75:46">-&gt;</operator><name pos:start="75:47" pos:end="75:50">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:13"><expr pos:start="77:5" pos:end="77:12"><name pos:start="77:5" pos:end="77:7">ptr</name> <operator pos:start="77:9" pos:end="77:10">+=</operator> <literal type="number" pos:start="77:12" pos:end="77:12">2</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="85:49"><expr pos:start="81:5" pos:end="85:48"><name pos:start="81:5" pos:end="81:12">ts_start</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <macro pos:start="81:16" pos:end="85:48"><name pos:start="81:16" pos:end="81:27">av_rescale_q</name><argument_list pos:start="81:28" pos:end="85:48">(<argument pos:start="81:29" pos:end="81:38">avpkt-&gt;pts</argument>,

                            <argument pos:start="83:29" pos:end="83:44">avctx-&gt;time_base</argument>,

                            <argument pos:start="85:29" pos:end="85:42">(AVRational){<literal type="number" pos:start="85:42" pos:end="85:42">1</literal></argument>,<argument pos:start="85:44" pos:end="85:47"><literal type="number" pos:start="85:44" pos:end="85:46">100</literal>}</argument>)</argument_list></macro></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="91:49"><expr pos:start="87:5" pos:end="91:48"><name pos:start="87:5" pos:end="87:10">ts_end</name>   <operator pos:start="87:14" pos:end="87:14">=</operator> <macro pos:start="87:16" pos:end="91:48"><name pos:start="87:16" pos:end="87:27">av_rescale_q</name><argument_list pos:start="87:28" pos:end="91:48">(<argument pos:start="87:29" pos:end="87:56">avpkt-&gt;pts + avpkt-&gt;duration</argument>,

                            <argument pos:start="89:29" pos:end="89:44">avctx-&gt;time_base</argument>,

                            <argument pos:start="91:29" pos:end="91:42">(AVRational){<literal type="number" pos:start="91:42" pos:end="91:42">1</literal></argument>,<argument pos:start="91:44" pos:end="91:47"><literal type="number" pos:start="91:44" pos:end="91:46">100</literal>}</argument>)</argument_list></macro></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:18"><expr pos:start="95:5" pos:end="95:17"><name pos:start="95:5" pos:end="95:13">tsmb_size</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <literal type="number" pos:start="95:17" pos:end="95:17">0</literal></expr>;</expr_stmt>

    <comment type="line" pos:start="97:5" pos:end="97:77">// Note that the spec recommends lines be no longer than 2048 characters.</comment>

    <expr_stmt pos:start="99:5" pos:end="99:54"><expr pos:start="99:5" pos:end="99:53"><call pos:start="99:5" pos:end="99:53"><name pos:start="99:5" pos:end="99:18">av_bprint_init</name><argument_list pos:start="99:19" pos:end="99:53">(<argument pos:start="99:20" pos:end="99:23"><expr pos:start="99:20" pos:end="99:23"><operator pos:start="99:20" pos:end="99:20">&amp;</operator><name pos:start="99:21" pos:end="99:23">buf</name></expr></argument>, <argument pos:start="99:26" pos:end="99:26"><expr pos:start="99:26" pos:end="99:26"><literal type="number" pos:start="99:26" pos:end="99:26">0</literal></expr></argument>, <argument pos:start="99:29" pos:end="99:52"><expr pos:start="99:29" pos:end="99:52"><name pos:start="99:29" pos:end="99:52">AV_BPRINT_SIZE_UNLIMITED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="183:54"><if pos:start="101:5" pos:end="181:5">if <condition pos:start="101:8" pos:end="101:39">(<expr pos:start="101:9" pos:end="101:38"><name pos:start="101:9" pos:end="101:19">text_length</name> <operator pos:start="101:21" pos:end="101:21">+</operator> <literal type="number" pos:start="101:23" pos:end="101:23">2</literal> <operator pos:start="101:25" pos:end="101:26">!=</operator> <name pos:start="101:28" pos:end="101:38"><name pos:start="101:28" pos:end="101:32">avpkt</name><operator pos:start="101:33" pos:end="101:34">-&gt;</operator><name pos:start="101:35" pos:end="101:38">size</name></name></expr>)</condition> <block pos:start="101:41" pos:end="181:5">{<block_content pos:start="103:9" pos:end="179:9">

        <while pos:start="103:9" pos:end="179:9">while <condition pos:start="103:15" pos:end="103:57">(<expr pos:start="103:16" pos:end="103:56"><name pos:start="103:16" pos:end="103:26">text_length</name> <operator pos:start="103:28" pos:end="103:28">+</operator> <literal type="number" pos:start="103:30" pos:end="103:32">2</literal> <operator pos:start="103:32" pos:end="103:32">+</operator> <name pos:start="103:34" pos:end="103:42">tsmb_size</name> <operator pos:start="103:44" pos:end="103:44">&lt;</operator> <name pos:start="103:46" pos:end="103:56"><name pos:start="103:46" pos:end="103:50">avpkt</name><operator pos:start="103:51" pos:end="103:52">-&gt;</operator><name pos:start="103:53" pos:end="103:56">size</name></name></expr>)</condition>  <block pos:start="103:60" pos:end="179:9">{<block_content pos:start="105:13" pos:end="177:13">

            <expr_stmt pos:start="105:13" pos:end="105:49"><expr pos:start="105:13" pos:end="105:48"><name pos:start="105:13" pos:end="105:16">tsmb</name> <operator pos:start="105:18" pos:end="105:18">=</operator> <name pos:start="105:20" pos:end="105:22">ptr</name> <operator pos:start="105:24" pos:end="105:24">+</operator> <name pos:start="105:26" pos:end="105:36">text_length</name> <operator pos:start="105:38" pos:end="105:38">+</operator> <name pos:start="105:40" pos:end="105:48">tsmb_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:38"><expr pos:start="107:13" pos:end="107:37"><name pos:start="107:13" pos:end="107:21">tsmb_size</name> <operator pos:start="107:23" pos:end="107:23">=</operator> <call pos:start="107:25" pos:end="107:37"><name pos:start="107:25" pos:end="107:31">AV_RB32</name><argument_list pos:start="107:32" pos:end="107:37">(<argument pos:start="107:33" pos:end="107:36"><expr pos:start="107:33" pos:end="107:36"><name pos:start="107:33" pos:end="107:36">tsmb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:22"><expr pos:start="109:13" pos:end="109:21"><name pos:start="109:13" pos:end="109:16">tsmb</name> <operator pos:start="109:18" pos:end="109:19">+=</operator> <literal type="number" pos:start="109:21" pos:end="109:21">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:38"><expr pos:start="111:13" pos:end="111:37"><name pos:start="111:13" pos:end="111:21">tsmb_type</name> <operator pos:start="111:23" pos:end="111:23">=</operator> <call pos:start="111:25" pos:end="111:37"><name pos:start="111:25" pos:end="111:31">AV_RB32</name><argument_list pos:start="111:32" pos:end="111:37">(<argument pos:start="111:33" pos:end="111:36"><expr pos:start="111:33" pos:end="111:36"><name pos:start="111:33" pos:end="111:36">tsmb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:22"><expr pos:start="113:13" pos:end="113:21"><name pos:start="113:13" pos:end="113:16">tsmb</name> <operator pos:start="113:18" pos:end="113:19">+=</operator> <literal type="number" pos:start="113:21" pos:end="113:21">4</literal></expr>;</expr_stmt>



            <if_stmt pos:start="117:13" pos:end="177:13"><if pos:start="117:13" pos:end="177:13">if <condition pos:start="117:16" pos:end="117:54">(<expr pos:start="117:17" pos:end="117:53"><name pos:start="117:17" pos:end="117:25">tsmb_type</name> <operator pos:start="117:27" pos:end="117:28">==</operator> <call pos:start="117:30" pos:end="117:53"><name pos:start="117:30" pos:end="117:36">MKBETAG</name><argument_list pos:start="117:37" pos:end="117:53">(<argument pos:start="117:38" pos:end="117:40"><expr pos:start="117:38" pos:end="117:40"><literal type="char" pos:start="117:38" pos:end="117:40">'s'</literal></expr></argument>,<argument pos:start="117:42" pos:end="117:44"><expr pos:start="117:42" pos:end="117:44"><literal type="char" pos:start="117:42" pos:end="117:44">'t'</literal></expr></argument>,<argument pos:start="117:46" pos:end="117:48"><expr pos:start="117:46" pos:end="117:48"><literal type="char" pos:start="117:46" pos:end="117:48">'y'</literal></expr></argument>,<argument pos:start="117:50" pos:end="117:52"><expr pos:start="117:50" pos:end="117:52"><literal type="char" pos:start="117:50" pos:end="117:52">'l'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:56" pos:end="177:13">{<block_content pos:start="119:17" pos:end="175:39">

                <expr_stmt pos:start="119:17" pos:end="119:46"><expr pos:start="119:17" pos:end="119:45"><name pos:start="119:17" pos:end="119:29">style_entries</name> <operator pos:start="119:31" pos:end="119:31">=</operator> <call pos:start="119:33" pos:end="119:45"><name pos:start="119:33" pos:end="119:39">AV_RB16</name><argument_list pos:start="119:40" pos:end="119:45">(<argument pos:start="119:41" pos:end="119:44"><expr pos:start="119:41" pos:end="119:44"><name pos:start="119:41" pos:end="119:44">tsmb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:26"><expr pos:start="121:17" pos:end="121:25"><name pos:start="121:17" pos:end="121:20">tsmb</name> <operator pos:start="121:22" pos:end="121:23">+=</operator> <literal type="number" pos:start="121:25" pos:end="121:25">2</literal></expr>;</expr_stmt>



                <for pos:start="125:17" pos:end="167:17">for<control pos:start="125:20" pos:end="125:50">(<init pos:start="125:21" pos:end="125:26"><expr pos:start="125:21" pos:end="125:25"><name pos:start="125:21" pos:end="125:21">i</name> <operator pos:start="125:23" pos:end="125:23">=</operator> <literal type="number" pos:start="125:25" pos:end="125:25">0</literal></expr>;</init> <condition pos:start="125:28" pos:end="125:45"><expr pos:start="125:28" pos:end="125:44"><name pos:start="125:28" pos:end="125:28">i</name> <operator pos:start="125:30" pos:end="125:30">&lt;</operator> <name pos:start="125:32" pos:end="125:44">style_entries</name></expr>;</condition> <incr pos:start="125:47" pos:end="125:49"><expr pos:start="125:47" pos:end="125:49"><name pos:start="125:47" pos:end="125:47">i</name><operator pos:start="125:48" pos:end="125:49">++</operator></expr></incr>)</control> <block pos:start="125:52" pos:end="167:17">{<block_content pos:start="127:21" pos:end="165:30">

                    <expr_stmt pos:start="127:21" pos:end="127:45"><expr pos:start="127:21" pos:end="127:44"><name pos:start="127:21" pos:end="127:29">style_pos</name> <operator pos:start="127:31" pos:end="127:31">=</operator> <call pos:start="127:33" pos:end="127:44"><name pos:start="127:33" pos:end="127:41">av_malloc</name><argument_list pos:start="127:42" pos:end="127:44">(<argument pos:start="127:43" pos:end="127:43"><expr pos:start="127:43" pos:end="127:43"><literal type="number" pos:start="127:43" pos:end="127:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="129:21" pos:end="129:47"><expr pos:start="129:21" pos:end="129:46"><operator pos:start="129:21" pos:end="129:21">*</operator><name pos:start="129:22" pos:end="129:30">style_pos</name> <operator pos:start="129:32" pos:end="129:32">=</operator> <call pos:start="129:34" pos:end="129:46"><name pos:start="129:34" pos:end="129:40">AV_RB16</name><argument_list pos:start="129:41" pos:end="129:46">(<argument pos:start="129:42" pos:end="129:45"><expr pos:start="129:42" pos:end="129:45"><name pos:start="129:42" pos:end="129:45">tsmb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="131:21" pos:end="131:30"><expr pos:start="131:21" pos:end="131:29"><name pos:start="131:21" pos:end="131:25">index</name> <operator pos:start="131:27" pos:end="131:27">=</operator> <name pos:start="131:29" pos:end="131:29">i</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="133:21" pos:end="133:69"><expr pos:start="133:21" pos:end="133:68"><call pos:start="133:21" pos:end="133:68"><name pos:start="133:21" pos:end="133:35">av_dynarray_add</name><argument_list pos:start="133:36" pos:end="133:68">(<argument pos:start="133:37" pos:end="133:48"><expr pos:start="133:37" pos:end="133:48"><operator pos:start="133:37" pos:end="133:37">&amp;</operator><name pos:start="133:38" pos:end="133:48">style_start</name></expr></argument>, <argument pos:start="133:51" pos:end="133:56"><expr pos:start="133:51" pos:end="133:56"><operator pos:start="133:51" pos:end="133:51">&amp;</operator><name pos:start="133:52" pos:end="133:56">index</name></expr></argument>, <argument pos:start="133:59" pos:end="133:67"><expr pos:start="133:59" pos:end="133:67"><name pos:start="133:59" pos:end="133:67">style_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="135:21" pos:end="135:30"><expr pos:start="135:21" pos:end="135:29"><name pos:start="135:21" pos:end="135:24">tsmb</name> <operator pos:start="135:26" pos:end="135:27">+=</operator> <literal type="number" pos:start="135:29" pos:end="135:29">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="137:21" pos:end="137:45"><expr pos:start="137:21" pos:end="137:44"><name pos:start="137:21" pos:end="137:29">style_pos</name> <operator pos:start="137:31" pos:end="137:31">=</operator> <call pos:start="137:33" pos:end="137:44"><name pos:start="137:33" pos:end="137:41">av_malloc</name><argument_list pos:start="137:42" pos:end="137:44">(<argument pos:start="137:43" pos:end="137:43"><expr pos:start="137:43" pos:end="137:43"><literal type="number" pos:start="137:43" pos:end="137:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="139:21" pos:end="139:47"><expr pos:start="139:21" pos:end="139:46"><operator pos:start="139:21" pos:end="139:21">*</operator><name pos:start="139:22" pos:end="139:30">style_pos</name> <operator pos:start="139:32" pos:end="139:32">=</operator> <call pos:start="139:34" pos:end="139:46"><name pos:start="139:34" pos:end="139:40">AV_RB16</name><argument_list pos:start="139:41" pos:end="139:46">(<argument pos:start="139:42" pos:end="139:45"><expr pos:start="139:42" pos:end="139:45"><name pos:start="139:42" pos:end="139:45">tsmb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="141:21" pos:end="141:30"><expr pos:start="141:21" pos:end="141:29"><name pos:start="141:21" pos:end="141:25">index</name> <operator pos:start="141:27" pos:end="141:27">=</operator> <name pos:start="141:29" pos:end="141:29">i</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:67"><expr pos:start="143:21" pos:end="143:66"><call pos:start="143:21" pos:end="143:66"><name pos:start="143:21" pos:end="143:35">av_dynarray_add</name><argument_list pos:start="143:36" pos:end="143:66">(<argument pos:start="143:37" pos:end="143:46"><expr pos:start="143:37" pos:end="143:46"><operator pos:start="143:37" pos:end="143:37">&amp;</operator><name pos:start="143:38" pos:end="143:46">style_end</name></expr></argument>, <argument pos:start="143:49" pos:end="143:54"><expr pos:start="143:49" pos:end="143:54"><operator pos:start="143:49" pos:end="143:49">&amp;</operator><name pos:start="143:50" pos:end="143:54">index</name></expr></argument>, <argument pos:start="143:57" pos:end="143:65"><expr pos:start="143:57" pos:end="143:65"><name pos:start="143:57" pos:end="143:65">style_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="145:21" pos:end="145:30"><expr pos:start="145:21" pos:end="145:29"><name pos:start="145:21" pos:end="145:24">tsmb</name> <operator pos:start="145:26" pos:end="145:27">+=</operator> <literal type="number" pos:start="145:29" pos:end="145:29">2</literal></expr>;</expr_stmt>

                    <comment type="line" pos:start="147:21" pos:end="147:46">// fontID = AV_RB16(tsmb);</comment>

                    <expr_stmt pos:start="149:21" pos:end="149:30"><expr pos:start="149:21" pos:end="149:29"><name pos:start="149:21" pos:end="149:24">tsmb</name> <operator pos:start="149:26" pos:end="149:27">+=</operator> <literal type="number" pos:start="149:29" pos:end="149:29">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="151:21" pos:end="151:40"><expr pos:start="151:21" pos:end="151:39"><name pos:start="151:21" pos:end="151:24">flag</name> <operator pos:start="151:26" pos:end="151:26">=</operator> <call pos:start="151:28" pos:end="151:39"><name pos:start="151:28" pos:end="151:36">av_malloc</name><argument_list pos:start="151:37" pos:end="151:39">(<argument pos:start="151:38" pos:end="151:38"><expr pos:start="151:38" pos:end="151:38"><literal type="number" pos:start="151:38" pos:end="151:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="153:21" pos:end="153:41"><expr pos:start="153:21" pos:end="153:40"><operator pos:start="153:21" pos:end="153:21">*</operator><name pos:start="153:22" pos:end="153:25">flag</name> <operator pos:start="153:27" pos:end="153:27">=</operator> <call pos:start="153:29" pos:end="153:40"><name pos:start="153:29" pos:end="153:34">AV_RB8</name><argument_list pos:start="153:35" pos:end="153:40">(<argument pos:start="153:36" pos:end="153:39"><expr pos:start="153:36" pos:end="153:39"><name pos:start="153:36" pos:end="153:39">tsmb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="155:21" pos:end="155:30"><expr pos:start="155:21" pos:end="155:29"><name pos:start="155:21" pos:end="155:25">index</name> <operator pos:start="155:27" pos:end="155:27">=</operator> <name pos:start="155:29" pos:end="155:29">i</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="157:21" pos:end="157:64"><expr pos:start="157:21" pos:end="157:63"><call pos:start="157:21" pos:end="157:63"><name pos:start="157:21" pos:end="157:35">av_dynarray_add</name><argument_list pos:start="157:36" pos:end="157:63">(<argument pos:start="157:37" pos:end="157:48"><expr pos:start="157:37" pos:end="157:48"><operator pos:start="157:37" pos:end="157:37">&amp;</operator><name pos:start="157:38" pos:end="157:48">style_flags</name></expr></argument>, <argument pos:start="157:51" pos:end="157:56"><expr pos:start="157:51" pos:end="157:56"><operator pos:start="157:51" pos:end="157:51">&amp;</operator><name pos:start="157:52" pos:end="157:56">index</name></expr></argument>, <argument pos:start="157:59" pos:end="157:62"><expr pos:start="157:59" pos:end="157:62"><name pos:start="157:59" pos:end="157:62">flag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="line" pos:start="159:21" pos:end="159:44">//fontsize=AV_RB8(tsmb);</comment>

                    <expr_stmt pos:start="161:21" pos:end="161:30"><expr pos:start="161:21" pos:end="161:29"><name pos:start="161:21" pos:end="161:24">tsmb</name> <operator pos:start="161:26" pos:end="161:27">+=</operator> <literal type="number" pos:start="161:29" pos:end="161:29">2</literal></expr>;</expr_stmt>

                    <comment type="line" pos:start="163:21" pos:end="163:38">// text-color-rgba</comment>

                    <expr_stmt pos:start="165:21" pos:end="165:30"><expr pos:start="165:21" pos:end="165:29"><name pos:start="165:21" pos:end="165:24">tsmb</name> <operator pos:start="165:26" pos:end="165:27">+=</operator> <literal type="number" pos:start="165:29" pos:end="165:29">4</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="169:17" pos:end="169:96"><expr pos:start="169:17" pos:end="169:95"><call pos:start="169:17" pos:end="169:95"><name pos:start="169:17" pos:end="169:27">text_to_ass</name><argument_list pos:start="169:28" pos:end="169:95">(<argument pos:start="169:29" pos:end="169:32"><expr pos:start="169:29" pos:end="169:32"><operator pos:start="169:29" pos:end="169:29">&amp;</operator><name pos:start="169:30" pos:end="169:32">buf</name></expr></argument>, <argument pos:start="169:35" pos:end="169:37"><expr pos:start="169:35" pos:end="169:37"><name pos:start="169:35" pos:end="169:37">ptr</name></expr></argument>, <argument pos:start="169:40" pos:end="169:42"><expr pos:start="169:40" pos:end="169:42"><name pos:start="169:40" pos:end="169:42">end</name></expr></argument>, <argument pos:start="169:45" pos:end="169:55"><expr pos:start="169:45" pos:end="169:55"><name pos:start="169:45" pos:end="169:55">style_start</name></expr></argument>, <argument pos:start="169:58" pos:end="169:66"><expr pos:start="169:58" pos:end="169:66"><name pos:start="169:58" pos:end="169:66">style_end</name></expr></argument>, <argument pos:start="169:69" pos:end="169:79"><expr pos:start="169:69" pos:end="169:79"><name pos:start="169:69" pos:end="169:79">style_flags</name></expr></argument>, <argument pos:start="169:82" pos:end="169:94"><expr pos:start="169:82" pos:end="169:94"><name pos:start="169:82" pos:end="169:94">style_entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:39"><expr pos:start="171:17" pos:end="171:38"><call pos:start="171:17" pos:end="171:38"><name pos:start="171:17" pos:end="171:24">av_freep</name><argument_list pos:start="171:25" pos:end="171:38">(<argument pos:start="171:26" pos:end="171:37"><expr pos:start="171:26" pos:end="171:37"><operator pos:start="171:26" pos:end="171:26">&amp;</operator><name pos:start="171:27" pos:end="171:37">style_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:37"><expr pos:start="173:17" pos:end="173:36"><call pos:start="173:17" pos:end="173:36"><name pos:start="173:17" pos:end="173:24">av_freep</name><argument_list pos:start="173:25" pos:end="173:36">(<argument pos:start="173:26" pos:end="173:35"><expr pos:start="173:26" pos:end="173:35"><operator pos:start="173:26" pos:end="173:26">&amp;</operator><name pos:start="173:27" pos:end="173:35">style_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:39"><expr pos:start="175:17" pos:end="175:38"><call pos:start="175:17" pos:end="175:38"><name pos:start="175:17" pos:end="175:24">av_freep</name><argument_list pos:start="175:25" pos:end="175:38">(<argument pos:start="175:26" pos:end="175:37"><expr pos:start="175:26" pos:end="175:37"><operator pos:start="175:26" pos:end="175:26">&amp;</operator><name pos:start="175:27" pos:end="175:37">style_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if> <else pos:start="181:7" pos:end="183:54">else<block type="pseudo" pos:start="183:9" pos:end="183:54"><block_content pos:start="183:9" pos:end="183:54">

        <expr_stmt pos:start="183:9" pos:end="183:54"><expr pos:start="183:9" pos:end="183:53"><call pos:start="183:9" pos:end="183:53"><name pos:start="183:9" pos:end="183:19">text_to_ass</name><argument_list pos:start="183:20" pos:end="183:53">(<argument pos:start="183:21" pos:end="183:24"><expr pos:start="183:21" pos:end="183:24"><operator pos:start="183:21" pos:end="183:21">&amp;</operator><name pos:start="183:22" pos:end="183:24">buf</name></expr></argument>, <argument pos:start="183:27" pos:end="183:29"><expr pos:start="183:27" pos:end="183:29"><name pos:start="183:27" pos:end="183:29">ptr</name></expr></argument>, <argument pos:start="183:32" pos:end="183:34"><expr pos:start="183:32" pos:end="183:34"><name pos:start="183:32" pos:end="183:34">end</name></expr></argument>, <argument pos:start="183:37" pos:end="183:40"><expr pos:start="183:37" pos:end="183:40"><name pos:start="183:37" pos:end="183:40">NULL</name></expr></argument>, <argument pos:start="183:43" pos:end="183:46"><expr pos:start="183:43" pos:end="183:46"><name pos:start="183:43" pos:end="183:46">NULL</name></expr></argument>, <argument pos:start="183:49" pos:end="183:49"><expr pos:start="183:49" pos:end="183:49"><literal type="number" pos:start="183:49" pos:end="183:49">0</literal></expr></argument>, <argument pos:start="183:52" pos:end="183:52"><expr pos:start="183:52" pos:end="183:52"><literal type="number" pos:start="183:52" pos:end="183:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:73"><expr pos:start="187:5" pos:end="187:72"><name pos:start="187:5" pos:end="187:7">ret</name> <operator pos:start="187:9" pos:end="187:9">=</operator> <call pos:start="187:11" pos:end="187:72"><name pos:start="187:11" pos:end="187:32">ff_ass_add_rect_bprint</name><argument_list pos:start="187:33" pos:end="187:72">(<argument pos:start="187:34" pos:end="187:36"><expr pos:start="187:34" pos:end="187:36"><name pos:start="187:34" pos:end="187:36">sub</name></expr></argument>, <argument pos:start="187:39" pos:end="187:42"><expr pos:start="187:39" pos:end="187:42"><operator pos:start="187:39" pos:end="187:39">&amp;</operator><name pos:start="187:40" pos:end="187:42">buf</name></expr></argument>, <argument pos:start="187:45" pos:end="187:52"><expr pos:start="187:45" pos:end="187:52"><name pos:start="187:45" pos:end="187:52">ts_start</name></expr></argument>, <argument pos:start="187:55" pos:end="187:71"><expr pos:start="187:55" pos:end="187:71"><name pos:start="187:55" pos:end="187:60">ts_end</name> <operator pos:start="187:62" pos:end="187:62">-</operator> <name pos:start="187:64" pos:end="187:71">ts_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:35"><expr pos:start="189:5" pos:end="189:34"><call pos:start="189:5" pos:end="189:34"><name pos:start="189:5" pos:end="189:22">av_bprint_finalize</name><argument_list pos:start="189:23" pos:end="189:34">(<argument pos:start="189:24" pos:end="189:27"><expr pos:start="189:24" pos:end="189:27"><operator pos:start="189:24" pos:end="189:24">&amp;</operator><name pos:start="189:25" pos:end="189:27">buf</name></expr></argument>, <argument pos:start="189:30" pos:end="189:33"><expr pos:start="189:30" pos:end="189:33"><name pos:start="189:30" pos:end="189:33">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="191:5" pos:end="193:19"><if pos:start="191:5" pos:end="193:19">if <condition pos:start="191:8" pos:end="191:16">(<expr pos:start="191:9" pos:end="191:15"><name pos:start="191:9" pos:end="191:11">ret</name> <operator pos:start="191:13" pos:end="191:13">&lt;</operator> <literal type="number" pos:start="191:15" pos:end="191:15">0</literal></expr>)</condition><block type="pseudo" pos:start="193:9" pos:end="193:19"><block_content pos:start="193:9" pos:end="193:19">

        <return pos:start="193:9" pos:end="193:19">return <expr pos:start="193:16" pos:end="193:18"><name pos:start="193:16" pos:end="193:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:38"><expr pos:start="195:5" pos:end="195:37"><operator pos:start="195:5" pos:end="195:5">*</operator><name pos:start="195:6" pos:end="195:16">got_sub_ptr</name> <operator pos:start="195:18" pos:end="195:18">=</operator> <name pos:start="195:20" pos:end="195:33"><name pos:start="195:20" pos:end="195:22">sub</name><operator pos:start="195:23" pos:end="195:24">-&gt;</operator><name pos:start="195:25" pos:end="195:33">num_rects</name></name> <operator pos:start="195:35" pos:end="195:35">&gt;</operator> <literal type="number" pos:start="195:37" pos:end="195:37">0</literal></expr>;</expr_stmt>

    <return pos:start="197:5" pos:end="197:23">return <expr pos:start="197:12" pos:end="197:22"><name pos:start="197:12" pos:end="197:22"><name pos:start="197:12" pos:end="197:16">avpkt</name><operator pos:start="197:17" pos:end="197:18">-&gt;</operator><name pos:start="197:19" pos:end="197:22">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
