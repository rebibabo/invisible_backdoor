<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15342.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">local_mapped_file_attr</name><parameter_list pos:start="1:35" pos:end="3:54">(<parameter pos:start="1:36" pos:end="1:44"><decl pos:start="1:36" pos:end="1:44"><type pos:start="1:36" pos:end="1:44"><name pos:start="1:36" pos:end="1:38">int</name></type> <name pos:start="1:40" pos:end="1:44">dirfd</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">name</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:53"><decl pos:start="3:36" pos:end="3:53"><type pos:start="3:36" pos:end="3:53"><name pos:start="3:36" pos:end="3:46"><name pos:start="3:36" pos:end="3:41">struct</name> <name pos:start="3:43" pos:end="3:46">stat</name></name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:53">stbuf</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:15">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">FILE</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:12">fp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:22"><name pos:start="9:10" pos:end="9:12">buf</name><index pos:start="9:13" pos:end="9:22">[<expr pos:start="9:14" pos:end="9:21"><name pos:start="9:14" pos:end="9:21">ATTR_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">map_dirfd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:51"><expr pos:start="15:5" pos:end="15:50"><name pos:start="15:5" pos:end="15:13">map_dirfd</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <call pos:start="15:17" pos:end="15:50"><name pos:start="15:17" pos:end="15:26">openat_dir</name><argument_list pos:start="15:27" pos:end="15:50">(<argument pos:start="15:28" pos:end="15:32"><expr pos:start="15:28" pos:end="15:32"><name pos:start="15:28" pos:end="15:32">dirfd</name></expr></argument>, <argument pos:start="15:35" pos:end="15:49"><expr pos:start="15:35" pos:end="15:49"><name pos:start="15:35" pos:end="15:49">VIRTFS_META_DIR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:24">(<expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:17">map_dirfd</name> <operator pos:start="17:19" pos:end="17:20">==</operator> <operator pos:start="17:22" pos:end="17:22">-</operator><literal type="number" pos:start="17:23" pos:end="17:23">1</literal></expr>)</condition> <block pos:start="17:26" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:15">

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:6">fp</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:44"><name pos:start="25:10" pos:end="25:22">local_fopenat</name><argument_list pos:start="25:23" pos:end="25:44">(<argument pos:start="25:24" pos:end="25:32"><expr pos:start="25:24" pos:end="25:32"><name pos:start="25:24" pos:end="25:32">map_dirfd</name></expr></argument>, <argument pos:start="25:35" pos:end="25:38"><expr pos:start="25:35" pos:end="25:38"><name pos:start="25:35" pos:end="25:38">name</name></expr></argument>, <argument pos:start="25:41" pos:end="25:43"><expr pos:start="25:41" pos:end="25:43"><literal type="string" pos:start="25:41" pos:end="25:43">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><call pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:24">close_preserve_errno</name><argument_list pos:start="27:25" pos:end="27:35">(<argument pos:start="27:26" pos:end="27:34"><expr pos:start="27:26" pos:end="27:34"><name pos:start="27:26" pos:end="27:34">map_dirfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:12">(<expr pos:start="29:9" pos:end="29:11"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:11">fp</name></expr>)</condition> <block pos:start="29:14" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:15">

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:29"><expr pos:start="35:5" pos:end="35:28"><call pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:10">memset</name><argument_list pos:start="35:11" pos:end="35:28">(<argument pos:start="35:12" pos:end="35:14"><expr pos:start="35:12" pos:end="35:14"><name pos:start="35:12" pos:end="35:14">buf</name></expr></argument>, <argument pos:start="35:17" pos:end="35:17"><expr pos:start="35:17" pos:end="35:17"><literal type="number" pos:start="35:17" pos:end="35:17">0</literal></expr></argument>, <argument pos:start="35:20" pos:end="35:27"><expr pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:27">ATTR_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="37:5" pos:end="59:5">while <condition pos:start="37:11" pos:end="37:36">(<expr pos:start="37:12" pos:end="37:35"><call pos:start="37:12" pos:end="37:35"><name pos:start="37:12" pos:end="37:16">fgets</name><argument_list pos:start="37:17" pos:end="37:35">(<argument pos:start="37:18" pos:end="37:20"><expr pos:start="37:18" pos:end="37:20"><name pos:start="37:18" pos:end="37:20">buf</name></expr></argument>, <argument pos:start="37:23" pos:end="37:30"><expr pos:start="37:23" pos:end="37:30"><name pos:start="37:23" pos:end="37:30">ATTR_MAX</name></expr></argument>, <argument pos:start="37:33" pos:end="37:34"><expr pos:start="37:33" pos:end="37:34"><name pos:start="37:33" pos:end="37:34">fp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:38" pos:end="59:5">{<block_content pos:start="39:9" pos:end="57:33">

        <if_stmt pos:start="39:9" pos:end="55:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:44">(<expr pos:start="39:13" pos:end="39:43"><operator pos:start="39:13" pos:end="39:13">!</operator><call pos:start="39:14" pos:end="39:43"><name pos:start="39:14" pos:end="39:20">strncmp</name><argument_list pos:start="39:21" pos:end="39:43">(<argument pos:start="39:22" pos:end="39:24"><expr pos:start="39:22" pos:end="39:24"><name pos:start="39:22" pos:end="39:24">buf</name></expr></argument>, <argument pos:start="39:27" pos:end="39:38"><expr pos:start="39:27" pos:end="39:38"><literal type="string" pos:start="39:27" pos:end="39:38">"virtfs.uid"</literal></expr></argument>, <argument pos:start="39:41" pos:end="39:42"><expr pos:start="39:41" pos:end="39:42"><literal type="number" pos:start="39:41" pos:end="39:42">10</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:46" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:41">

            <expr_stmt pos:start="41:13" pos:end="41:41"><expr pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:17">stbuf</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:25">st_uid</name></name> <operator pos:start="41:27" pos:end="41:27">=</operator> <call pos:start="41:29" pos:end="41:40"><name pos:start="41:29" pos:end="41:32">atoi</name><argument_list pos:start="41:33" pos:end="41:40">(<argument pos:start="41:34" pos:end="41:39"><expr pos:start="41:34" pos:end="41:39"><name pos:start="41:34" pos:end="41:36">buf</name><operator pos:start="41:37" pos:end="41:37">+</operator><literal type="number" pos:start="41:38" pos:end="41:39">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="43:11" pos:end="47:9">else if <condition pos:start="43:19" pos:end="43:51">(<expr pos:start="43:20" pos:end="43:50"><operator pos:start="43:20" pos:end="43:20">!</operator><call pos:start="43:21" pos:end="43:50"><name pos:start="43:21" pos:end="43:27">strncmp</name><argument_list pos:start="43:28" pos:end="43:50">(<argument pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><name pos:start="43:29" pos:end="43:31">buf</name></expr></argument>, <argument pos:start="43:34" pos:end="43:45"><expr pos:start="43:34" pos:end="43:45"><literal type="string" pos:start="43:34" pos:end="43:45">"virtfs.gid"</literal></expr></argument>, <argument pos:start="43:48" pos:end="43:49"><expr pos:start="43:48" pos:end="43:49"><literal type="number" pos:start="43:48" pos:end="43:49">10</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:53" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:41">

            <expr_stmt pos:start="45:13" pos:end="45:41"><expr pos:start="45:13" pos:end="45:40"><name pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:17">stbuf</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:25">st_gid</name></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <call pos:start="45:29" pos:end="45:40"><name pos:start="45:29" pos:end="45:32">atoi</name><argument_list pos:start="45:33" pos:end="45:40">(<argument pos:start="45:34" pos:end="45:39"><expr pos:start="45:34" pos:end="45:39"><name pos:start="45:34" pos:end="45:36">buf</name><operator pos:start="45:37" pos:end="45:37">+</operator><literal type="number" pos:start="45:38" pos:end="45:39">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="47:11" pos:end="51:9">else if <condition pos:start="47:19" pos:end="47:52">(<expr pos:start="47:20" pos:end="47:51"><operator pos:start="47:20" pos:end="47:20">!</operator><call pos:start="47:21" pos:end="47:51"><name pos:start="47:21" pos:end="47:27">strncmp</name><argument_list pos:start="47:28" pos:end="47:51">(<argument pos:start="47:29" pos:end="47:31"><expr pos:start="47:29" pos:end="47:31"><name pos:start="47:29" pos:end="47:31">buf</name></expr></argument>, <argument pos:start="47:34" pos:end="47:46"><expr pos:start="47:34" pos:end="47:46"><literal type="string" pos:start="47:34" pos:end="47:46">"virtfs.mode"</literal></expr></argument>, <argument pos:start="47:49" pos:end="47:50"><expr pos:start="47:49" pos:end="47:50"><literal type="number" pos:start="47:49" pos:end="47:50">11</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:54" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:42">

            <expr_stmt pos:start="49:13" pos:end="49:42"><expr pos:start="49:13" pos:end="49:41"><name pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:17">stbuf</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:26">st_mode</name></name> <operator pos:start="49:28" pos:end="49:28">=</operator> <call pos:start="49:30" pos:end="49:41"><name pos:start="49:30" pos:end="49:33">atoi</name><argument_list pos:start="49:34" pos:end="49:41">(<argument pos:start="49:35" pos:end="49:40"><expr pos:start="49:35" pos:end="49:40"><name pos:start="49:35" pos:end="49:37">buf</name><operator pos:start="49:38" pos:end="49:38">+</operator><literal type="number" pos:start="49:39" pos:end="49:40">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="51:11" pos:end="55:9">else if <condition pos:start="51:19" pos:end="51:52">(<expr pos:start="51:20" pos:end="51:51"><operator pos:start="51:20" pos:end="51:20">!</operator><call pos:start="51:21" pos:end="51:51"><name pos:start="51:21" pos:end="51:27">strncmp</name><argument_list pos:start="51:28" pos:end="51:51">(<argument pos:start="51:29" pos:end="51:31"><expr pos:start="51:29" pos:end="51:31"><name pos:start="51:29" pos:end="51:31">buf</name></expr></argument>, <argument pos:start="51:34" pos:end="51:46"><expr pos:start="51:34" pos:end="51:46"><literal type="string" pos:start="51:34" pos:end="51:46">"virtfs.rdev"</literal></expr></argument>, <argument pos:start="51:49" pos:end="51:50"><expr pos:start="51:49" pos:end="51:50"><literal type="number" pos:start="51:49" pos:end="51:50">11</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:54" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:42">

            <expr_stmt pos:start="53:13" pos:end="53:42"><expr pos:start="53:13" pos:end="53:41"><name pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:17">stbuf</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:26">st_rdev</name></name> <operator pos:start="53:28" pos:end="53:28">=</operator> <call pos:start="53:30" pos:end="53:41"><name pos:start="53:30" pos:end="53:33">atoi</name><argument_list pos:start="53:34" pos:end="53:41">(<argument pos:start="53:35" pos:end="53:40"><expr pos:start="53:35" pos:end="53:40"><name pos:start="53:35" pos:end="53:37">buf</name><operator pos:start="53:38" pos:end="53:38">+</operator><literal type="number" pos:start="53:39" pos:end="53:40">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><call pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:14">memset</name><argument_list pos:start="57:15" pos:end="57:32">(<argument pos:start="57:16" pos:end="57:18"><expr pos:start="57:16" pos:end="57:18"><name pos:start="57:16" pos:end="57:18">buf</name></expr></argument>, <argument pos:start="57:21" pos:end="57:21"><expr pos:start="57:21" pos:end="57:21"><literal type="number" pos:start="57:21" pos:end="57:21">0</literal></expr></argument>, <argument pos:start="57:24" pos:end="57:31"><expr pos:start="57:24" pos:end="57:31"><name pos:start="57:24" pos:end="57:31">ATTR_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="61:5" pos:end="61:15"><expr pos:start="61:5" pos:end="61:14"><call pos:start="61:5" pos:end="61:14"><name pos:start="61:5" pos:end="61:10">fclose</name><argument_list pos:start="61:11" pos:end="61:14">(<argument pos:start="61:12" pos:end="61:13"><expr pos:start="61:12" pos:end="61:13"><name pos:start="61:12" pos:end="61:13">fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
