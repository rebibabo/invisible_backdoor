<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7672.c" pos:tabs="8"><function pos:start="1:1" pos:end="386:20"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">flashsv_decode_frame</name><parameter_list pos:start="1:32" pos:end="3:64">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:65"><decl pos:start="1:56" pos:end="1:65"><type pos:start="1:56" pos:end="1:65"><name pos:start="1:56" pos:end="1:59">void</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">data</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:46"><decl pos:start="3:33" pos:end="3:46"><type pos:start="3:33" pos:end="3:46"><name pos:start="3:33" pos:end="3:35">int</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:46">data_size</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:63"><decl pos:start="3:49" pos:end="3:63"><type pos:start="3:49" pos:end="3:63"><name pos:start="3:49" pos:end="3:56">AVPacket</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:63">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="386:20">{<block_content pos:start="7:5" pos:end="386:20">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">buf_size</name>       <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">FlashSVContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name>  <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:30">avctx</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">h_blocks</name></decl>, <decl pos:start="11:19" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:26">v_blocks</name></decl>, <decl pos:start="11:29" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:29" pos:end="11:34">h_part</name></decl>, <decl pos:start="11:37" pos:end="11:42"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:37" pos:end="11:42">v_part</name></decl>, <decl pos:start="11:45" pos:end="11:45"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:45" pos:end="11:45">i</name></decl>, <decl pos:start="11:48" pos:end="11:48"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:48" pos:end="11:48">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">GetBitContext</name></type> <name pos:start="13:19" pos:end="13:20">gb</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="19:5" pos:end="21:17"><if pos:start="19:5" pos:end="21:17">if <condition pos:start="19:8" pos:end="19:22">(<expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:16">buf_size</name> <operator pos:start="19:18" pos:end="19:19">==</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:17"><block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:16">buf_size</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <literal type="number" pos:start="23:20" pos:end="23:20">4</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:50"><expr pos:start="29:5" pos:end="29:49"><call pos:start="29:5" pos:end="29:49"><name pos:start="29:5" pos:end="29:17">init_get_bits</name><argument_list pos:start="29:18" pos:end="29:49">(<argument pos:start="29:19" pos:end="29:21"><expr pos:start="29:19" pos:end="29:21"><operator pos:start="29:19" pos:end="29:19">&amp;</operator><name pos:start="29:20" pos:end="29:21">gb</name></expr></argument>, <argument pos:start="29:24" pos:end="29:34"><expr pos:start="29:24" pos:end="29:34"><name pos:start="29:24" pos:end="29:34"><name pos:start="29:24" pos:end="29:28">avpkt</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:34">data</name></name></expr></argument>, <argument pos:start="29:37" pos:end="29:48"><expr pos:start="29:37" pos:end="29:48"><name pos:start="29:37" pos:end="29:44">buf_size</name> <operator pos:start="29:46" pos:end="29:46">*</operator> <literal type="number" pos:start="29:48" pos:end="29:48">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:38">/* start to parse the bitstream */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:51"><expr pos:start="35:5" pos:end="35:50"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:18">block_width</name></name>  <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:24">16</literal> <operator pos:start="35:26" pos:end="35:26">*</operator> <operator pos:start="35:28" pos:end="35:28">(</operator><call pos:start="35:29" pos:end="35:45"><name pos:start="35:29" pos:end="35:36">get_bits</name><argument_list pos:start="35:37" pos:end="35:45">(<argument pos:start="35:38" pos:end="35:40"><expr pos:start="35:38" pos:end="35:40"><operator pos:start="35:38" pos:end="35:38">&amp;</operator><name pos:start="35:39" pos:end="35:40">gb</name></expr></argument>,  <argument pos:start="35:44" pos:end="35:44"><expr pos:start="35:44" pos:end="35:44"><literal type="number" pos:start="35:44" pos:end="35:44">4</literal></expr></argument>)</argument_list></call> <operator pos:start="35:47" pos:end="35:47">+</operator> <literal type="number" pos:start="35:49" pos:end="35:49">1</literal><operator pos:start="35:50" pos:end="35:50">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:46"><expr pos:start="37:5" pos:end="37:45"><name pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:18">image_width</name></name>  <operator pos:start="37:21" pos:end="37:21">=</operator>       <call pos:start="37:29" pos:end="37:45"><name pos:start="37:29" pos:end="37:36">get_bits</name><argument_list pos:start="37:37" pos:end="37:45">(<argument pos:start="37:38" pos:end="37:40"><expr pos:start="37:38" pos:end="37:40"><operator pos:start="37:38" pos:end="37:38">&amp;</operator><name pos:start="37:39" pos:end="37:40">gb</name></expr></argument>, <argument pos:start="37:43" pos:end="37:44"><expr pos:start="37:43" pos:end="37:44"><literal type="number" pos:start="37:43" pos:end="37:44">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:51"><expr pos:start="39:5" pos:end="39:50"><name pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:19">block_height</name></name> <operator pos:start="39:21" pos:end="39:21">=</operator> <literal type="number" pos:start="39:23" pos:end="39:24">16</literal> <operator pos:start="39:26" pos:end="39:26">*</operator> <operator pos:start="39:28" pos:end="39:28">(</operator><call pos:start="39:29" pos:end="39:45"><name pos:start="39:29" pos:end="39:36">get_bits</name><argument_list pos:start="39:37" pos:end="39:45">(<argument pos:start="39:38" pos:end="39:40"><expr pos:start="39:38" pos:end="39:40"><operator pos:start="39:38" pos:end="39:38">&amp;</operator><name pos:start="39:39" pos:end="39:40">gb</name></expr></argument>,  <argument pos:start="39:44" pos:end="39:44"><expr pos:start="39:44" pos:end="39:44"><literal type="number" pos:start="39:44" pos:end="39:44">4</literal></expr></argument>)</argument_list></call> <operator pos:start="39:47" pos:end="39:47">+</operator> <literal type="number" pos:start="39:49" pos:end="39:49">1</literal><operator pos:start="39:50" pos:end="39:50">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:46"><expr pos:start="41:5" pos:end="41:45"><name pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:19">image_height</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator>       <call pos:start="41:29" pos:end="41:45"><name pos:start="41:29" pos:end="41:36">get_bits</name><argument_list pos:start="41:37" pos:end="41:45">(<argument pos:start="41:38" pos:end="41:40"><expr pos:start="41:38" pos:end="41:40"><operator pos:start="41:38" pos:end="41:38">&amp;</operator><name pos:start="41:39" pos:end="41:40">gb</name></expr></argument>, <argument pos:start="41:43" pos:end="41:44"><expr pos:start="41:43" pos:end="41:44"><literal type="number" pos:start="41:43" pos:end="41:44">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="386:20"><if pos:start="45:5" pos:end="386:20">if <condition pos:start="45:8" pos:end="45:20">(<expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:14">ver</name></name> <operator pos:start="45:16" pos:end="45:17">==</operator> <literal type="number" pos:start="45:19" pos:end="45:19">2</literal></expr>)</condition> <block pos:start="45:22" pos:end="386:20">{<block_content pos:start="47:9" pos:end="386:20">

        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><call pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:17">skip_bits</name><argument_list pos:start="47:18" pos:end="47:25">(<argument pos:start="47:19" pos:end="47:21"><expr pos:start="47:19" pos:end="47:21"><operator pos:start="47:19" pos:end="47:19">&amp;</operator><name pos:start="47:20" pos:end="47:21">gb</name></expr></argument>, <argument pos:start="47:24" pos:end="47:24"><expr pos:start="47:24" pos:end="47:24"><literal type="number" pos:start="47:24" pos:end="47:24">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="386:20"><if pos:start="49:9" pos:end="386:20">if <condition pos:start="49:12" pos:end="49:27">(<expr pos:start="49:13" pos:end="49:26"><call pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:21">get_bits1</name><argument_list pos:start="49:22" pos:end="49:26">(<argument pos:start="49:23" pos:end="49:25"><expr pos:start="49:23" pos:end="49:25"><operator pos:start="49:23" pos:end="49:23">&amp;</operator><name pos:start="49:24" pos:end="49:25">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:29" pos:end="386:20">{<block_content pos:start="51:13" pos:end="386:20">

            <expr_stmt pos:start="51:13" pos:end="51:55"><expr pos:start="51:13" pos:end="51:54"><call pos:start="51:13" pos:end="51:54"><name pos:start="51:13" pos:end="51:34">av_log_missing_feature</name><argument_list pos:start="51:35" pos:end="51:54">(<argument pos:start="51:36" pos:end="51:40"><expr pos:start="51:36" pos:end="51:40"><name pos:start="51:36" pos:end="51:40">avctx</name></expr></argument>, <argument pos:start="51:43" pos:end="51:50"><expr pos:start="51:43" pos:end="51:50"><literal type="string" pos:start="51:43" pos:end="51:50">"iframe"</literal></expr></argument>, <argument pos:start="51:53" pos:end="51:53"><expr pos:start="51:53" pos:end="51:53"><literal type="number" pos:start="51:53" pos:end="51:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:40">return <expr pos:start="53:20" pos:end="53:39"><name pos:start="53:20" pos:end="53:39">AVERROR_PATCHWELCOME</name></expr>;</return>


        <if_stmt pos:start="56:9" pos:end="386:20"><if pos:start="56:9" pos:end="386:20">if <condition pos:start="56:12" pos:end="56:27">(<expr pos:start="56:13" pos:end="56:26"><call pos:start="56:13" pos:end="56:26"><name pos:start="56:13" pos:end="56:21">get_bits1</name><argument_list pos:start="56:22" pos:end="56:26">(<argument pos:start="56:23" pos:end="56:25"><expr pos:start="56:23" pos:end="56:25"><operator pos:start="56:23" pos:end="56:23">&amp;</operator><name pos:start="56:24" pos:end="56:25">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="56:29" pos:end="386:20">{<block_content pos:start="58:13" pos:end="386:20">

            <expr_stmt pos:start="58:13" pos:end="58:63"><expr pos:start="58:13" pos:end="58:62"><call pos:start="58:13" pos:end="58:62"><name pos:start="58:13" pos:end="58:34">av_log_missing_feature</name><argument_list pos:start="58:35" pos:end="58:62">(<argument pos:start="58:36" pos:end="58:40"><expr pos:start="58:36" pos:end="58:40"><name pos:start="58:36" pos:end="58:40">avctx</name></expr></argument>, <argument pos:start="58:43" pos:end="58:58"><expr pos:start="58:43" pos:end="58:58"><literal type="string" pos:start="58:43" pos:end="58:58">"Custom palette"</literal></expr></argument>, <argument pos:start="58:61" pos:end="58:61"><expr pos:start="58:61" pos:end="58:61"><literal type="number" pos:start="58:61" pos:end="58:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="60:13" pos:end="60:40">return <expr pos:start="60:20" pos:end="60:39"><name pos:start="60:20" pos:end="60:39">AVERROR_PATCHWELCOME</name></expr>;</return>





    <comment type="block" pos:start="66:5" pos:end="66:72">/* calculate number of blocks and size of border (partial) blocks */</comment>

    <expr_stmt pos:start="68:5" pos:end="68:48"><expr pos:start="68:5" pos:end="68:47"><name pos:start="68:5" pos:end="68:12">h_blocks</name> <operator pos:start="68:14" pos:end="68:14">=</operator> <name pos:start="68:16" pos:end="68:29"><name pos:start="68:16" pos:end="68:16">s</name><operator pos:start="68:17" pos:end="68:18">-&gt;</operator><name pos:start="68:19" pos:end="68:29">image_width</name></name>  <operator pos:start="68:32" pos:end="68:32">/</operator> <name pos:start="68:34" pos:end="68:47"><name pos:start="68:34" pos:end="68:34">s</name><operator pos:start="68:35" pos:end="68:36">-&gt;</operator><name pos:start="68:37" pos:end="68:47">block_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="70:5" pos:end="70:48"><expr pos:start="70:5" pos:end="70:47"><name pos:start="70:5" pos:end="70:10">h_part</name>   <operator pos:start="70:14" pos:end="70:14">=</operator> <name pos:start="70:16" pos:end="70:29"><name pos:start="70:16" pos:end="70:16">s</name><operator pos:start="70:17" pos:end="70:18">-&gt;</operator><name pos:start="70:19" pos:end="70:29">image_width</name></name>  <operator pos:start="70:32" pos:end="70:32">%</operator> <name pos:start="70:34" pos:end="70:47"><name pos:start="70:34" pos:end="70:34">s</name><operator pos:start="70:35" pos:end="70:36">-&gt;</operator><name pos:start="70:37" pos:end="70:47">block_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="72:5" pos:end="72:49"><expr pos:start="72:5" pos:end="72:48"><name pos:start="72:5" pos:end="72:12">v_blocks</name> <operator pos:start="72:14" pos:end="72:14">=</operator> <name pos:start="72:16" pos:end="72:30"><name pos:start="72:16" pos:end="72:16">s</name><operator pos:start="72:17" pos:end="72:18">-&gt;</operator><name pos:start="72:19" pos:end="72:30">image_height</name></name> <operator pos:start="72:32" pos:end="72:32">/</operator> <name pos:start="72:34" pos:end="72:48"><name pos:start="72:34" pos:end="72:34">s</name><operator pos:start="72:35" pos:end="72:36">-&gt;</operator><name pos:start="72:37" pos:end="72:48">block_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="74:5" pos:end="74:49"><expr pos:start="74:5" pos:end="74:48"><name pos:start="74:5" pos:end="74:10">v_part</name>   <operator pos:start="74:14" pos:end="74:14">=</operator> <name pos:start="74:16" pos:end="74:30"><name pos:start="74:16" pos:end="74:16">s</name><operator pos:start="74:17" pos:end="74:18">-&gt;</operator><name pos:start="74:19" pos:end="74:30">image_height</name></name> <operator pos:start="74:32" pos:end="74:32">%</operator> <name pos:start="74:34" pos:end="74:48"><name pos:start="74:34" pos:end="74:34">s</name><operator pos:start="74:35" pos:end="74:36">-&gt;</operator><name pos:start="74:37" pos:end="74:48">block_height</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="78:5" pos:end="80:51">/* the block size could change between frames, make sure the buffer

     * is large enough, if not, get a larger one */</comment>

    <if_stmt pos:start="82:5" pos:end="386:20"><if pos:start="82:5" pos:end="386:20">if <condition pos:start="82:8" pos:end="82:57">(<expr pos:start="82:9" pos:end="82:56"><name pos:start="82:9" pos:end="82:21"><name pos:start="82:9" pos:end="82:9">s</name><operator pos:start="82:10" pos:end="82:11">-&gt;</operator><name pos:start="82:12" pos:end="82:21">block_size</name></name> <operator pos:start="82:23" pos:end="82:23">&lt;</operator> <name pos:start="82:25" pos:end="82:38"><name pos:start="82:25" pos:end="82:25">s</name><operator pos:start="82:26" pos:end="82:27">-&gt;</operator><name pos:start="82:28" pos:end="82:38">block_width</name></name> <operator pos:start="82:40" pos:end="82:40">*</operator> <name pos:start="82:42" pos:end="82:56"><name pos:start="82:42" pos:end="82:42">s</name><operator pos:start="82:43" pos:end="82:44">-&gt;</operator><name pos:start="82:45" pos:end="82:56">block_height</name></name></expr>)</condition> <block pos:start="82:59" pos:end="386:20">{<block_content pos:start="84:9" pos:end="386:20">

        <decl_stmt pos:start="84:9" pos:end="84:65"><decl pos:start="84:9" pos:end="84:64"><type pos:start="84:9" pos:end="84:11"><name pos:start="84:9" pos:end="84:11">int</name></type> <name pos:start="84:13" pos:end="84:25">tmpblock_size</name> <init pos:start="84:27" pos:end="84:64">= <expr pos:start="84:29" pos:end="84:64"><literal type="number" pos:start="84:29" pos:end="84:29">3</literal> <operator pos:start="84:31" pos:end="84:31">*</operator> <name pos:start="84:33" pos:end="84:46"><name pos:start="84:33" pos:end="84:33">s</name><operator pos:start="84:34" pos:end="84:35">-&gt;</operator><name pos:start="84:36" pos:end="84:46">block_width</name></name> <operator pos:start="84:48" pos:end="84:48">*</operator> <name pos:start="84:50" pos:end="84:64"><name pos:start="84:50" pos:end="84:50">s</name><operator pos:start="84:51" pos:end="84:52">-&gt;</operator><name pos:start="84:53" pos:end="84:64">block_height</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="88:9" pos:end="88:61"><expr pos:start="88:9" pos:end="88:60"><name pos:start="88:9" pos:end="88:19"><name pos:start="88:9" pos:end="88:9">s</name><operator pos:start="88:10" pos:end="88:11">-&gt;</operator><name pos:start="88:12" pos:end="88:19">tmpblock</name></name> <operator pos:start="88:21" pos:end="88:21">=</operator> <call pos:start="88:23" pos:end="88:60"><name pos:start="88:23" pos:end="88:32">av_realloc</name><argument_list pos:start="88:33" pos:end="88:60">(<argument pos:start="88:34" pos:end="88:44"><expr pos:start="88:34" pos:end="88:44"><name pos:start="88:34" pos:end="88:44"><name pos:start="88:34" pos:end="88:34">s</name><operator pos:start="88:35" pos:end="88:36">-&gt;</operator><name pos:start="88:37" pos:end="88:44">tmpblock</name></name></expr></argument>, <argument pos:start="88:47" pos:end="88:59"><expr pos:start="88:47" pos:end="88:59"><name pos:start="88:47" pos:end="88:59">tmpblock_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="90:9" pos:end="386:20"><if pos:start="90:9" pos:end="386:20">if <condition pos:start="90:12" pos:end="90:25">(<expr pos:start="90:13" pos:end="90:24"><operator pos:start="90:13" pos:end="90:13">!</operator><name pos:start="90:14" pos:end="90:24"><name pos:start="90:14" pos:end="90:14">s</name><operator pos:start="90:15" pos:end="90:16">-&gt;</operator><name pos:start="90:17" pos:end="90:24">tmpblock</name></name></expr>)</condition> <block pos:start="90:27" pos:end="386:20">{<block_content pos:start="92:13" pos:end="386:20">

            <expr_stmt pos:start="92:13" pos:end="92:82"><expr pos:start="92:13" pos:end="92:81"><call pos:start="92:13" pos:end="92:81"><name pos:start="92:13" pos:end="92:18">av_log</name><argument_list pos:start="92:19" pos:end="92:81">(<argument pos:start="92:20" pos:end="92:24"><expr pos:start="92:20" pos:end="92:24"><name pos:start="92:20" pos:end="92:24">avctx</name></expr></argument>, <argument pos:start="92:27" pos:end="92:38"><expr pos:start="92:27" pos:end="92:38"><name pos:start="92:27" pos:end="92:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="92:41" pos:end="92:80"><expr pos:start="92:41" pos:end="92:80"><literal type="string" pos:start="92:41" pos:end="92:80">"Can't allocate decompression buffer.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="94:13" pos:end="94:35">return <expr pos:start="94:20" pos:end="94:34"><call pos:start="94:20" pos:end="94:34"><name pos:start="94:20" pos:end="94:26">AVERROR</name><argument_list pos:start="94:27" pos:end="94:34">(<argument pos:start="94:28" pos:end="94:33"><expr pos:start="94:28" pos:end="94:33"><name pos:start="94:28" pos:end="94:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>


        <if_stmt pos:start="97:9" pos:end="386:20"><if pos:start="97:9" pos:end="386:20">if <condition pos:start="97:12" pos:end="97:24">(<expr pos:start="97:13" pos:end="97:23"><name pos:start="97:13" pos:end="97:18"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:18">ver</name></name> <operator pos:start="97:20" pos:end="97:21">==</operator> <literal type="number" pos:start="97:23" pos:end="97:23">2</literal></expr>)</condition> <block pos:start="97:26" pos:end="386:20">{<block_content pos:start="99:13" pos:end="386:20">

            <expr_stmt pos:start="99:13" pos:end="99:75"><expr pos:start="99:13" pos:end="99:74"><name pos:start="99:13" pos:end="99:33"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:33">deflate_block_size</name></name> <operator pos:start="99:35" pos:end="99:35">=</operator> <call pos:start="99:37" pos:end="99:74"><name pos:start="99:37" pos:end="99:59">calc_deflate_block_size</name><argument_list pos:start="99:60" pos:end="99:74">(<argument pos:start="99:61" pos:end="99:73"><expr pos:start="99:61" pos:end="99:73"><name pos:start="99:61" pos:end="99:73">tmpblock_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="386:20"><if pos:start="101:13" pos:end="386:20">if <condition pos:start="101:16" pos:end="101:43">(<expr pos:start="101:17" pos:end="101:42"><name pos:start="101:17" pos:end="101:37"><name pos:start="101:17" pos:end="101:17">s</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:37">deflate_block_size</name></name> <operator pos:start="101:39" pos:end="101:40">&lt;=</operator> <literal type="number" pos:start="101:42" pos:end="101:42">0</literal></expr>)</condition> <block pos:start="101:45" pos:end="386:20">{<block_content pos:start="103:17" pos:end="386:20">

                <expr_stmt pos:start="103:17" pos:end="103:86"><expr pos:start="103:17" pos:end="103:85"><call pos:start="103:17" pos:end="103:85"><name pos:start="103:17" pos:end="103:22">av_log</name><argument_list pos:start="103:23" pos:end="103:85">(<argument pos:start="103:24" pos:end="103:28"><expr pos:start="103:24" pos:end="103:28"><name pos:start="103:24" pos:end="103:28">avctx</name></expr></argument>, <argument pos:start="103:31" pos:end="103:42"><expr pos:start="103:31" pos:end="103:42"><name pos:start="103:31" pos:end="103:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="103:45" pos:end="103:84"><expr pos:start="103:45" pos:end="103:84"><literal type="string" pos:start="103:45" pos:end="103:84">"Can't determine deflate buffer size.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="105:17" pos:end="105:26">return <expr pos:start="105:24" pos:end="105:25"><operator pos:start="105:24" pos:end="105:24">-</operator><literal type="number" pos:start="105:25" pos:end="105:25">1</literal></expr>;</return>


            <expr_stmt pos:start="108:13" pos:end="108:83"><expr pos:start="108:13" pos:end="108:82"><name pos:start="108:13" pos:end="108:28"><name pos:start="108:13" pos:end="108:13">s</name><operator pos:start="108:14" pos:end="108:15">-&gt;</operator><name pos:start="108:16" pos:end="108:28">deflate_block</name></name> <operator pos:start="108:30" pos:end="108:30">=</operator> <call pos:start="108:32" pos:end="108:82"><name pos:start="108:32" pos:end="108:41">av_realloc</name><argument_list pos:start="108:42" pos:end="108:82">(<argument pos:start="108:43" pos:end="108:58"><expr pos:start="108:43" pos:end="108:58"><name pos:start="108:43" pos:end="108:58"><name pos:start="108:43" pos:end="108:43">s</name><operator pos:start="108:44" pos:end="108:45">-&gt;</operator><name pos:start="108:46" pos:end="108:58">deflate_block</name></name></expr></argument>, <argument pos:start="108:61" pos:end="108:81"><expr pos:start="108:61" pos:end="108:81"><name pos:start="108:61" pos:end="108:81"><name pos:start="108:61" pos:end="108:61">s</name><operator pos:start="108:62" pos:end="108:63">-&gt;</operator><name pos:start="108:64" pos:end="108:81">deflate_block_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="110:13" pos:end="386:20"><if pos:start="110:13" pos:end="386:20">if <condition pos:start="110:16" pos:end="110:34">(<expr pos:start="110:17" pos:end="110:33"><operator pos:start="110:17" pos:end="110:17">!</operator><name pos:start="110:18" pos:end="110:33"><name pos:start="110:18" pos:end="110:18">s</name><operator pos:start="110:19" pos:end="110:20">-&gt;</operator><name pos:start="110:21" pos:end="110:33">deflate_block</name></name></expr>)</condition> <block pos:start="110:36" pos:end="386:20">{<block_content pos:start="112:17" pos:end="386:20">

                <expr_stmt pos:start="112:17" pos:end="112:80"><expr pos:start="112:17" pos:end="112:79"><call pos:start="112:17" pos:end="112:79"><name pos:start="112:17" pos:end="112:22">av_log</name><argument_list pos:start="112:23" pos:end="112:79">(<argument pos:start="112:24" pos:end="112:28"><expr pos:start="112:24" pos:end="112:28"><name pos:start="112:24" pos:end="112:28">avctx</name></expr></argument>, <argument pos:start="112:31" pos:end="112:42"><expr pos:start="112:31" pos:end="112:42"><name pos:start="112:31" pos:end="112:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="112:45" pos:end="112:78"><expr pos:start="112:45" pos:end="112:78"><literal type="string" pos:start="112:45" pos:end="112:78">"Can't allocate deflate buffer.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="114:17" pos:end="114:39">return <expr pos:start="114:24" pos:end="114:38"><call pos:start="114:24" pos:end="114:38"><name pos:start="114:24" pos:end="114:30">AVERROR</name><argument_list pos:start="114:31" pos:end="114:38">(<argument pos:start="114:32" pos:end="114:37"><expr pos:start="114:32" pos:end="114:37"><name pos:start="114:32" pos:end="114:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>




    <expr_stmt pos:start="119:5" pos:end="119:53"><expr pos:start="119:5" pos:end="119:52"><name pos:start="119:5" pos:end="119:17"><name pos:start="119:5" pos:end="119:5">s</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:17">block_size</name></name> <operator pos:start="119:19" pos:end="119:19">=</operator> <name pos:start="119:21" pos:end="119:34"><name pos:start="119:21" pos:end="119:21">s</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:34">block_width</name></name> <operator pos:start="119:36" pos:end="119:36">*</operator> <name pos:start="119:38" pos:end="119:52"><name pos:start="119:38" pos:end="119:38">s</name><operator pos:start="119:39" pos:end="119:40">-&gt;</operator><name pos:start="119:41" pos:end="119:52">block_height</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:40">/* initialize the image size once */</comment>

    <if_stmt pos:start="125:5" pos:end="386:20"><if pos:start="125:5" pos:end="386:20">if <condition pos:start="125:8" pos:end="125:48">(<expr pos:start="125:9" pos:end="125:47"><name pos:start="125:9" pos:end="125:20"><name pos:start="125:9" pos:end="125:13">avctx</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:20">width</name></name> <operator pos:start="125:22" pos:end="125:23">==</operator> <literal type="number" pos:start="125:25" pos:end="125:25">0</literal> <operator pos:start="125:27" pos:end="125:28">&amp;&amp;</operator> <name pos:start="125:30" pos:end="125:42"><name pos:start="125:30" pos:end="125:34">avctx</name><operator pos:start="125:35" pos:end="125:36">-&gt;</operator><name pos:start="125:37" pos:end="125:42">height</name></name> <operator pos:start="125:44" pos:end="125:45">==</operator> <literal type="number" pos:start="125:47" pos:end="125:47">0</literal></expr>)</condition> <block pos:start="125:50" pos:end="386:20">{<block_content pos:start="127:9" pos:end="386:20">

        <expr_stmt pos:start="127:9" pos:end="127:39"><expr pos:start="127:9" pos:end="127:38"><name pos:start="127:9" pos:end="127:20"><name pos:start="127:9" pos:end="127:13">avctx</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:20">width</name></name>  <operator pos:start="127:23" pos:end="127:23">=</operator> <name pos:start="127:25" pos:end="127:38"><name pos:start="127:25" pos:end="127:25">s</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:38">image_width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:40"><expr pos:start="129:9" pos:end="129:39"><name pos:start="129:9" pos:end="129:21"><name pos:start="129:9" pos:end="129:13">avctx</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:21">height</name></name> <operator pos:start="129:23" pos:end="129:23">=</operator> <name pos:start="129:25" pos:end="129:39"><name pos:start="129:25" pos:end="129:25">s</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:39">image_height</name></name></expr>;</expr_stmt>




    <comment type="block" pos:start="134:5" pos:end="134:59">/* check for changes of image width and image height */</comment>

    <if_stmt pos:start="136:5" pos:end="139:68"><if pos:start="136:5" pos:end="139:68">if <condition pos:start="136:8" pos:end="136:75">(<expr pos:start="136:9" pos:end="136:74"><name pos:start="136:9" pos:end="136:20"><name pos:start="136:9" pos:end="136:13">avctx</name><operator pos:start="136:14" pos:end="136:15">-&gt;</operator><name pos:start="136:16" pos:end="136:20">width</name></name> <operator pos:start="136:22" pos:end="136:23">!=</operator> <name pos:start="136:25" pos:end="136:38"><name pos:start="136:25" pos:end="136:25">s</name><operator pos:start="136:26" pos:end="136:27">-&gt;</operator><name pos:start="136:28" pos:end="136:38">image_width</name></name> <operator pos:start="136:40" pos:end="136:41">||</operator> <name pos:start="136:43" pos:end="136:55"><name pos:start="136:43" pos:end="136:47">avctx</name><operator pos:start="136:48" pos:end="136:49">-&gt;</operator><name pos:start="136:50" pos:end="136:55">height</name></name> <operator pos:start="136:57" pos:end="136:58">!=</operator> <name pos:start="136:60" pos:end="136:74"><name pos:start="136:60" pos:end="136:60">s</name><operator pos:start="136:61" pos:end="136:62">-&gt;</operator><name pos:start="136:63" pos:end="136:74">image_height</name></name></expr>)</condition> <block pos:start="136:77" pos:end="139:67">{<block_content pos:start="139:16" pos:end="139:67">


               <expr_stmt pos:start="139:16" pos:end="139:66"><expr pos:start="139:16" pos:end="139:66"><literal type="string" pos:start="139:16" pos:end="139:66">"Frame width or height differs from first frame!\n"</literal></expr></expr_stmt>)</block_content></block><empty_stmt pos:start="139:68" pos:end="139:68">;</empty_stmt></if></if_stmt>

        <expr_stmt pos:start="141:9" pos:end="143:77"><expr pos:start="141:9" pos:end="143:76"><call pos:start="141:9" pos:end="143:76"><name pos:start="141:9" pos:end="141:14">av_log</name><argument_list pos:start="141:15" pos:end="143:76">(<argument pos:start="141:16" pos:end="141:20"><expr pos:start="141:16" pos:end="141:20"><name pos:start="141:16" pos:end="141:20">avctx</name></expr></argument>, <argument pos:start="141:23" pos:end="141:34"><expr pos:start="141:23" pos:end="141:34"><name pos:start="141:23" pos:end="141:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="141:37" pos:end="141:76"><expr pos:start="141:37" pos:end="141:76"><literal type="string" pos:start="141:37" pos:end="141:76">"fh = %d, fv %d  vs  ch = %d, cv = %d\n"</literal></expr></argument>,

               <argument pos:start="143:16" pos:end="143:28"><expr pos:start="143:16" pos:end="143:28"><name pos:start="143:16" pos:end="143:28"><name pos:start="143:16" pos:end="143:20">avctx</name><operator pos:start="143:21" pos:end="143:22">-&gt;</operator><name pos:start="143:23" pos:end="143:28">height</name></name></expr></argument>, <argument pos:start="143:31" pos:end="143:42"><expr pos:start="143:31" pos:end="143:42"><name pos:start="143:31" pos:end="143:42"><name pos:start="143:31" pos:end="143:35">avctx</name><operator pos:start="143:36" pos:end="143:37">-&gt;</operator><name pos:start="143:38" pos:end="143:42">width</name></name></expr></argument>, <argument pos:start="143:45" pos:end="143:59"><expr pos:start="143:45" pos:end="143:59"><name pos:start="143:45" pos:end="143:59"><name pos:start="143:45" pos:end="143:45">s</name><operator pos:start="143:46" pos:end="143:47">-&gt;</operator><name pos:start="143:48" pos:end="143:59">image_height</name></name></expr></argument>, <argument pos:start="143:62" pos:end="143:75"><expr pos:start="143:62" pos:end="143:75"><name pos:start="143:62" pos:end="143:75"><name pos:start="143:62" pos:end="143:62">s</name><operator pos:start="143:63" pos:end="143:64">-&gt;</operator><name pos:start="143:65" pos:end="143:75">image_width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <comment type="block" pos:start="149:5" pos:end="149:55">/* we care for keyframes only in Screen Video v2 */</comment>

    <expr_stmt pos:start="151:5" pos:end="151:71"><expr pos:start="151:5" pos:end="151:70"><name pos:start="151:5" pos:end="151:18"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:18">is_keyframe</name></name> <operator pos:start="151:20" pos:end="151:20">=</operator> <operator pos:start="151:22" pos:end="151:22">(</operator><name pos:start="151:23" pos:end="151:34"><name pos:start="151:23" pos:end="151:27">avpkt</name><operator pos:start="151:28" pos:end="151:29">-&gt;</operator><name pos:start="151:30" pos:end="151:34">flags</name></name> <operator pos:start="151:36" pos:end="151:36">&amp;</operator> <name pos:start="151:38" pos:end="151:52">AV_PKT_FLAG_KEY</name><operator pos:start="151:53" pos:end="151:53">)</operator> <operator pos:start="151:55" pos:end="151:56">&amp;&amp;</operator> <operator pos:start="151:58" pos:end="151:58">(</operator><name pos:start="151:59" pos:end="151:64"><name pos:start="151:59" pos:end="151:59">s</name><operator pos:start="151:60" pos:end="151:61">-&gt;</operator><name pos:start="151:62" pos:end="151:64">ver</name></name> <operator pos:start="151:66" pos:end="151:67">==</operator> <literal type="number" pos:start="151:69" pos:end="151:69">2</literal><operator pos:start="151:70" pos:end="151:70">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="386:20"><if pos:start="153:5" pos:end="386:20">if <condition pos:start="153:8" pos:end="153:23">(<expr pos:start="153:9" pos:end="153:22"><name pos:start="153:9" pos:end="153:22"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:22">is_keyframe</name></name></expr>)</condition> <block pos:start="153:25" pos:end="386:20">{<block_content pos:start="155:9" pos:end="386:20">

        <expr_stmt pos:start="155:9" pos:end="155:67"><expr pos:start="155:9" pos:end="155:66"><name pos:start="155:9" pos:end="155:23"><name pos:start="155:9" pos:end="155:9">s</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:23">keyframedata</name></name> <operator pos:start="155:25" pos:end="155:25">=</operator> <call pos:start="155:27" pos:end="155:66"><name pos:start="155:27" pos:end="155:36">av_realloc</name><argument_list pos:start="155:37" pos:end="155:66">(<argument pos:start="155:38" pos:end="155:52"><expr pos:start="155:38" pos:end="155:52"><name pos:start="155:38" pos:end="155:52"><name pos:start="155:38" pos:end="155:38">s</name><operator pos:start="155:39" pos:end="155:40">-&gt;</operator><name pos:start="155:41" pos:end="155:52">keyframedata</name></name></expr></argument>, <argument pos:start="155:55" pos:end="155:65"><expr pos:start="155:55" pos:end="155:65"><name pos:start="155:55" pos:end="155:65"><name pos:start="155:55" pos:end="155:59">avpkt</name><operator pos:start="155:60" pos:end="155:61">-&gt;</operator><name pos:start="155:62" pos:end="155:65">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:58"><expr pos:start="157:9" pos:end="157:57"><call pos:start="157:9" pos:end="157:57"><name pos:start="157:9" pos:end="157:14">memcpy</name><argument_list pos:start="157:15" pos:end="157:57">(<argument pos:start="157:16" pos:end="157:30"><expr pos:start="157:16" pos:end="157:30"><name pos:start="157:16" pos:end="157:30"><name pos:start="157:16" pos:end="157:16">s</name><operator pos:start="157:17" pos:end="157:18">-&gt;</operator><name pos:start="157:19" pos:end="157:30">keyframedata</name></name></expr></argument>, <argument pos:start="157:33" pos:end="157:43"><expr pos:start="157:33" pos:end="157:43"><name pos:start="157:33" pos:end="157:43"><name pos:start="157:33" pos:end="157:37">avpkt</name><operator pos:start="157:38" pos:end="157:39">-&gt;</operator><name pos:start="157:40" pos:end="157:43">data</name></name></expr></argument>, <argument pos:start="157:46" pos:end="157:56"><expr pos:start="157:46" pos:end="157:56"><name pos:start="157:46" pos:end="157:56"><name pos:start="157:46" pos:end="157:50">avpkt</name><operator pos:start="157:51" pos:end="157:52">-&gt;</operator><name pos:start="157:53" pos:end="157:56">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="163:55"><expr pos:start="159:9" pos:end="163:54"><name pos:start="159:9" pos:end="159:17"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:17">blocks</name></name> <operator pos:start="159:19" pos:end="159:19">=</operator> <call pos:start="159:21" pos:end="163:54"><name pos:start="159:21" pos:end="159:30">av_realloc</name><argument_list pos:start="159:31" pos:end="163:54">(<argument pos:start="159:32" pos:end="159:40"><expr pos:start="159:32" pos:end="159:40"><name pos:start="159:32" pos:end="159:40"><name pos:start="159:32" pos:end="159:32">s</name><operator pos:start="159:33" pos:end="159:34">-&gt;</operator><name pos:start="159:35" pos:end="159:40">blocks</name></name></expr></argument>,

                               <argument pos:start="161:32" pos:end="163:53"><expr pos:start="161:32" pos:end="163:53"><operator pos:start="161:32" pos:end="161:32">(</operator><name pos:start="161:33" pos:end="161:40">v_blocks</name> <operator pos:start="161:42" pos:end="161:42">+</operator> <operator pos:start="161:44" pos:end="161:44">!</operator><operator pos:start="161:45" pos:end="161:45">!</operator><name pos:start="161:46" pos:end="161:51">v_part</name><operator pos:start="161:52" pos:end="161:52">)</operator> <operator pos:start="161:54" pos:end="161:54">*</operator> <operator pos:start="161:56" pos:end="161:56">(</operator><name pos:start="161:57" pos:end="161:64">h_blocks</name> <operator pos:start="161:66" pos:end="161:66">+</operator> <operator pos:start="161:68" pos:end="161:68">!</operator><operator pos:start="161:69" pos:end="161:69">!</operator><name pos:start="161:70" pos:end="161:75">h_part</name><operator pos:start="161:76" pos:end="161:76">)</operator>

                               <operator pos:start="163:32" pos:end="163:32">*</operator> <sizeof pos:start="163:34" pos:end="163:53">sizeof<argument_list pos:start="163:40" pos:end="163:53">(<argument pos:start="163:41" pos:end="163:52"><expr pos:start="163:41" pos:end="163:52"><name pos:start="163:41" pos:end="163:52"><name pos:start="163:41" pos:end="163:41">s</name><operator pos:start="163:42" pos:end="163:43">-&gt;</operator><name pos:start="163:44" pos:end="163:49">blocks</name><index pos:start="163:50" pos:end="163:52">[<expr pos:start="163:51" pos:end="163:51"><literal type="number" pos:start="163:51" pos:end="163:51">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="168:5" pos:end="172:48"><expr pos:start="168:5" pos:end="172:47"><call pos:start="168:5" pos:end="172:47"><name pos:start="168:5" pos:end="168:11">av_dlog</name><argument_list pos:start="168:12" pos:end="172:47">(<argument pos:start="168:13" pos:end="168:17"><expr pos:start="168:13" pos:end="168:17"><name pos:start="168:13" pos:end="168:17">avctx</name></expr></argument>, <argument pos:start="168:20" pos:end="168:71"><expr pos:start="168:20" pos:end="168:71"><literal type="string" pos:start="168:20" pos:end="168:71">"image: %dx%d block: %dx%d num: %dx%d part: %dx%d\n"</literal></expr></argument>,

            <argument pos:start="170:13" pos:end="170:26"><expr pos:start="170:13" pos:end="170:26"><name pos:start="170:13" pos:end="170:26"><name pos:start="170:13" pos:end="170:13">s</name><operator pos:start="170:14" pos:end="170:15">-&gt;</operator><name pos:start="170:16" pos:end="170:26">image_width</name></name></expr></argument>, <argument pos:start="170:29" pos:end="170:43"><expr pos:start="170:29" pos:end="170:43"><name pos:start="170:29" pos:end="170:43"><name pos:start="170:29" pos:end="170:29">s</name><operator pos:start="170:30" pos:end="170:31">-&gt;</operator><name pos:start="170:32" pos:end="170:43">image_height</name></name></expr></argument>, <argument pos:start="170:46" pos:end="170:59"><expr pos:start="170:46" pos:end="170:59"><name pos:start="170:46" pos:end="170:59"><name pos:start="170:46" pos:end="170:46">s</name><operator pos:start="170:47" pos:end="170:48">-&gt;</operator><name pos:start="170:49" pos:end="170:59">block_width</name></name></expr></argument>, <argument pos:start="170:62" pos:end="170:76"><expr pos:start="170:62" pos:end="170:76"><name pos:start="170:62" pos:end="170:76"><name pos:start="170:62" pos:end="170:62">s</name><operator pos:start="170:63" pos:end="170:64">-&gt;</operator><name pos:start="170:65" pos:end="170:76">block_height</name></name></expr></argument>,

            <argument pos:start="172:13" pos:end="172:20"><expr pos:start="172:13" pos:end="172:20"><name pos:start="172:13" pos:end="172:20">h_blocks</name></expr></argument>, <argument pos:start="172:23" pos:end="172:30"><expr pos:start="172:23" pos:end="172:30"><name pos:start="172:23" pos:end="172:30">v_blocks</name></expr></argument>, <argument pos:start="172:33" pos:end="172:38"><expr pos:start="172:33" pos:end="172:38"><name pos:start="172:33" pos:end="172:38">h_part</name></expr></argument>, <argument pos:start="172:41" pos:end="172:46"><expr pos:start="172:41" pos:end="172:46"><name pos:start="172:41" pos:end="172:46">v_part</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="176:5" pos:end="176:30"><expr pos:start="176:5" pos:end="176:29"><name pos:start="176:5" pos:end="176:22"><name pos:start="176:5" pos:end="176:5">s</name><operator pos:start="176:6" pos:end="176:7">-&gt;</operator><name pos:start="176:8" pos:end="176:12">frame</name><operator pos:start="176:13" pos:end="176:13">.</operator><name pos:start="176:14" pos:end="176:22">reference</name></name>    <operator pos:start="176:27" pos:end="176:27">=</operator> <literal type="number" pos:start="176:29" pos:end="176:29">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="178:5" pos:end="182:53"><expr pos:start="178:5" pos:end="182:52"><name pos:start="178:5" pos:end="178:25"><name pos:start="178:5" pos:end="178:5">s</name><operator pos:start="178:6" pos:end="178:7">-&gt;</operator><name pos:start="178:8" pos:end="178:12">frame</name><operator pos:start="178:13" pos:end="178:13">.</operator><name pos:start="178:14" pos:end="178:25">buffer_hints</name></name> <operator pos:start="178:27" pos:end="178:27">=</operator> <name pos:start="178:29" pos:end="178:49">FF_BUFFER_HINTS_VALID</name>    <operator pos:start="178:54" pos:end="178:54">|</operator>

                            <name pos:start="180:29" pos:end="180:52">FF_BUFFER_HINTS_PRESERVE</name> <operator pos:start="180:54" pos:end="180:54">|</operator>

                            <name pos:start="182:29" pos:end="182:52">FF_BUFFER_HINTS_REUSABLE</name></expr>;</expr_stmt>

    <if_stmt pos:start="184:5" pos:end="386:20"><if pos:start="184:5" pos:end="386:20">if <condition pos:start="184:8" pos:end="184:50">(<expr pos:start="184:9" pos:end="184:49"><call pos:start="184:9" pos:end="184:45"><name pos:start="184:9" pos:end="184:27"><name pos:start="184:9" pos:end="184:13">avctx</name><operator pos:start="184:14" pos:end="184:15">-&gt;</operator><name pos:start="184:16" pos:end="184:27">reget_buffer</name></name><argument_list pos:start="184:28" pos:end="184:45">(<argument pos:start="184:29" pos:end="184:33"><expr pos:start="184:29" pos:end="184:33"><name pos:start="184:29" pos:end="184:33">avctx</name></expr></argument>, <argument pos:start="184:36" pos:end="184:44"><expr pos:start="184:36" pos:end="184:44"><operator pos:start="184:36" pos:end="184:36">&amp;</operator><name pos:start="184:37" pos:end="184:44"><name pos:start="184:37" pos:end="184:37">s</name><operator pos:start="184:38" pos:end="184:39">-&gt;</operator><name pos:start="184:40" pos:end="184:44">frame</name></name></expr></argument>)</argument_list></call> <operator pos:start="184:47" pos:end="184:47">&lt;</operator> <literal type="number" pos:start="184:49" pos:end="184:49">0</literal></expr>)</condition> <block pos:start="184:52" pos:end="386:20">{<block_content pos:start="186:9" pos:end="386:20">

        <expr_stmt pos:start="186:9" pos:end="186:63"><expr pos:start="186:9" pos:end="186:62"><call pos:start="186:9" pos:end="186:62"><name pos:start="186:9" pos:end="186:14">av_log</name><argument_list pos:start="186:15" pos:end="186:62">(<argument pos:start="186:16" pos:end="186:20"><expr pos:start="186:16" pos:end="186:20"><name pos:start="186:16" pos:end="186:20">avctx</name></expr></argument>, <argument pos:start="186:23" pos:end="186:34"><expr pos:start="186:23" pos:end="186:34"><name pos:start="186:23" pos:end="186:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="186:37" pos:end="186:61"><expr pos:start="186:37" pos:end="186:61"><literal type="string" pos:start="186:37" pos:end="186:61">"reget_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="188:9" pos:end="188:18">return <expr pos:start="188:16" pos:end="188:17"><operator pos:start="188:16" pos:end="188:16">-</operator><literal type="number" pos:start="188:17" pos:end="188:17">1</literal></expr>;</return>




    <comment type="block" pos:start="193:5" pos:end="193:37">/* loop over all block columns */</comment>

    <for pos:start="195:5" pos:end="386:20">for <control pos:start="195:9" pos:end="195:53">(<init pos:start="195:10" pos:end="195:15"><expr pos:start="195:10" pos:end="195:14"><name pos:start="195:10" pos:end="195:10">j</name> <operator pos:start="195:12" pos:end="195:12">=</operator> <literal type="number" pos:start="195:14" pos:end="195:14">0</literal></expr>;</init> <condition pos:start="195:17" pos:end="195:48"><expr pos:start="195:17" pos:end="195:47"><name pos:start="195:17" pos:end="195:17">j</name> <operator pos:start="195:19" pos:end="195:19">&lt;</operator> <name pos:start="195:21" pos:end="195:28">v_blocks</name> <operator pos:start="195:30" pos:end="195:30">+</operator> <operator pos:start="195:32" pos:end="195:32">(</operator><ternary pos:start="195:33" pos:end="195:46"><condition pos:start="195:33" pos:end="195:40"><expr pos:start="195:33" pos:end="195:38"><name pos:start="195:33" pos:end="195:38">v_part</name></expr> ?</condition><then pos:start="195:42" pos:end="195:42"> <expr pos:start="195:42" pos:end="195:42"><literal type="number" pos:start="195:42" pos:end="195:42">1</literal></expr> </then><else pos:start="195:44" pos:end="195:46">: <expr pos:start="195:46" pos:end="195:46"><literal type="number" pos:start="195:46" pos:end="195:46">0</literal></expr></else></ternary><operator pos:start="195:47" pos:end="195:47">)</operator></expr>;</condition> <incr pos:start="195:50" pos:end="195:52"><expr pos:start="195:50" pos:end="195:52"><name pos:start="195:50" pos:end="195:50">j</name><operator pos:start="195:51" pos:end="195:52">++</operator></expr></incr>)</control> <block pos:start="195:55" pos:end="386:20">{<block_content pos:start="199:9" pos:end="386:20">



        <decl_stmt pos:start="199:9" pos:end="199:41"><decl pos:start="199:9" pos:end="199:40"><type pos:start="199:9" pos:end="199:11"><name pos:start="199:9" pos:end="199:11">int</name></type> <name pos:start="199:13" pos:end="199:17">y_pos</name>  <init pos:start="199:20" pos:end="199:40">= <expr pos:start="199:22" pos:end="199:40"><name pos:start="199:22" pos:end="199:22">j</name> <operator pos:start="199:24" pos:end="199:24">*</operator> <name pos:start="199:26" pos:end="199:40"><name pos:start="199:26" pos:end="199:26">s</name><operator pos:start="199:27" pos:end="199:28">-&gt;</operator><name pos:start="199:29" pos:end="199:40">block_height</name></name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="199:43" pos:end="199:71">// vertical position in frame</comment>

        <decl_stmt pos:start="201:9" pos:end="201:71"><decl pos:start="201:9" pos:end="201:70"><type pos:start="201:9" pos:end="201:11"><name pos:start="201:9" pos:end="201:11">int</name></type> <name pos:start="201:13" pos:end="201:26">cur_blk_height</name> <init pos:start="201:28" pos:end="201:70">= <expr pos:start="201:30" pos:end="201:70"><ternary pos:start="201:30" pos:end="201:70"><condition pos:start="201:30" pos:end="201:45"><expr pos:start="201:30" pos:end="201:43"><operator pos:start="201:30" pos:end="201:30">(</operator><name pos:start="201:31" pos:end="201:31">j</name> <operator pos:start="201:33" pos:end="201:33">&lt;</operator> <name pos:start="201:35" pos:end="201:42">v_blocks</name><operator pos:start="201:43" pos:end="201:43">)</operator></expr> ?</condition><then pos:start="201:47" pos:end="201:61"> <expr pos:start="201:47" pos:end="201:61"><name pos:start="201:47" pos:end="201:61"><name pos:start="201:47" pos:end="201:47">s</name><operator pos:start="201:48" pos:end="201:49">-&gt;</operator><name pos:start="201:50" pos:end="201:61">block_height</name></name></expr> </then><else pos:start="201:63" pos:end="201:70">: <expr pos:start="201:65" pos:end="201:70"><name pos:start="201:65" pos:end="201:70">v_part</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="205:9" pos:end="205:38">/* loop over all block rows */</comment>

        <for pos:start="207:9" pos:end="386:20">for <control pos:start="207:13" pos:end="207:57">(<init pos:start="207:14" pos:end="207:19"><expr pos:start="207:14" pos:end="207:18"><name pos:start="207:14" pos:end="207:14">i</name> <operator pos:start="207:16" pos:end="207:16">=</operator> <literal type="number" pos:start="207:18" pos:end="207:18">0</literal></expr>;</init> <condition pos:start="207:21" pos:end="207:52"><expr pos:start="207:21" pos:end="207:51"><name pos:start="207:21" pos:end="207:21">i</name> <operator pos:start="207:23" pos:end="207:23">&lt;</operator> <name pos:start="207:25" pos:end="207:32">h_blocks</name> <operator pos:start="207:34" pos:end="207:34">+</operator> <operator pos:start="207:36" pos:end="207:36">(</operator><ternary pos:start="207:37" pos:end="207:50"><condition pos:start="207:37" pos:end="207:44"><expr pos:start="207:37" pos:end="207:42"><name pos:start="207:37" pos:end="207:42">h_part</name></expr> ?</condition><then pos:start="207:46" pos:end="207:46"> <expr pos:start="207:46" pos:end="207:46"><literal type="number" pos:start="207:46" pos:end="207:46">1</literal></expr> </then><else pos:start="207:48" pos:end="207:50">: <expr pos:start="207:50" pos:end="207:50"><literal type="number" pos:start="207:50" pos:end="207:50">0</literal></expr></else></ternary><operator pos:start="207:51" pos:end="207:51">)</operator></expr>;</condition> <incr pos:start="207:54" pos:end="207:56"><expr pos:start="207:54" pos:end="207:56"><name pos:start="207:54" pos:end="207:54">i</name><operator pos:start="207:55" pos:end="207:56">++</operator></expr></incr>)</control> <block pos:start="207:59" pos:end="386:20">{<block_content pos:start="209:13" pos:end="386:20">

            <decl_stmt pos:start="209:13" pos:end="209:43"><decl pos:start="209:13" pos:end="209:42"><type pos:start="209:13" pos:end="209:15"><name pos:start="209:13" pos:end="209:15">int</name></type> <name pos:start="209:17" pos:end="209:21">x_pos</name> <init pos:start="209:23" pos:end="209:42">= <expr pos:start="209:25" pos:end="209:42"><name pos:start="209:25" pos:end="209:25">i</name> <operator pos:start="209:27" pos:end="209:27">*</operator> <name pos:start="209:29" pos:end="209:42"><name pos:start="209:29" pos:end="209:29">s</name><operator pos:start="209:30" pos:end="209:31">-&gt;</operator><name pos:start="209:32" pos:end="209:42">block_width</name></name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="209:45" pos:end="209:75">// horizontal position in frame</comment>

            <decl_stmt pos:start="211:13" pos:end="211:73"><decl pos:start="211:13" pos:end="211:72"><type pos:start="211:13" pos:end="211:15"><name pos:start="211:13" pos:end="211:15">int</name></type> <name pos:start="211:17" pos:end="211:29">cur_blk_width</name> <init pos:start="211:31" pos:end="211:72">= <expr pos:start="211:33" pos:end="211:72"><ternary pos:start="211:33" pos:end="211:72"><condition pos:start="211:33" pos:end="211:48"><expr pos:start="211:33" pos:end="211:46"><operator pos:start="211:33" pos:end="211:33">(</operator><name pos:start="211:34" pos:end="211:34">i</name> <operator pos:start="211:36" pos:end="211:36">&lt;</operator> <name pos:start="211:38" pos:end="211:45">h_blocks</name><operator pos:start="211:46" pos:end="211:46">)</operator></expr> ?</condition><then pos:start="211:50" pos:end="211:63"> <expr pos:start="211:50" pos:end="211:63"><name pos:start="211:50" pos:end="211:63"><name pos:start="211:50" pos:end="211:50">s</name><operator pos:start="211:51" pos:end="211:52">-&gt;</operator><name pos:start="211:53" pos:end="211:63">block_width</name></name></expr> </then><else pos:start="211:65" pos:end="211:72">: <expr pos:start="211:67" pos:end="211:72"><name pos:start="211:67" pos:end="211:72">h_part</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="213:13" pos:end="213:29"><decl pos:start="213:13" pos:end="213:28"><type pos:start="213:13" pos:end="213:15"><name pos:start="213:13" pos:end="213:15">int</name></type> <name pos:start="213:17" pos:end="213:24">has_diff</name> <init pos:start="213:26" pos:end="213:28">= <expr pos:start="213:28" pos:end="213:28"><literal type="number" pos:start="213:28" pos:end="213:28">0</literal></expr></init></decl>;</decl_stmt>



            <comment type="block" pos:start="217:13" pos:end="217:59">/* get the size of the compressed zlib chunk */</comment>

            <decl_stmt pos:start="219:13" pos:end="219:41"><decl pos:start="219:13" pos:end="219:40"><type pos:start="219:13" pos:end="219:15"><name pos:start="219:13" pos:end="219:15">int</name></type> <name pos:start="219:17" pos:end="219:20">size</name> <init pos:start="219:22" pos:end="219:40">= <expr pos:start="219:24" pos:end="219:40"><call pos:start="219:24" pos:end="219:40"><name pos:start="219:24" pos:end="219:31">get_bits</name><argument_list pos:start="219:32" pos:end="219:40">(<argument pos:start="219:33" pos:end="219:35"><expr pos:start="219:33" pos:end="219:35"><operator pos:start="219:33" pos:end="219:33">&amp;</operator><name pos:start="219:34" pos:end="219:35">gb</name></expr></argument>, <argument pos:start="219:38" pos:end="219:39"><expr pos:start="219:38" pos:end="219:39"><literal type="number" pos:start="219:38" pos:end="219:39">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="223:13" pos:end="223:34"><expr pos:start="223:13" pos:end="223:33"><name pos:start="223:13" pos:end="223:26"><name pos:start="223:13" pos:end="223:13">s</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:26">color_depth</name></name>    <operator pos:start="223:31" pos:end="223:31">=</operator> <literal type="number" pos:start="223:33" pos:end="223:33">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:34"><expr pos:start="225:13" pos:end="225:33"><name pos:start="225:13" pos:end="225:29"><name pos:start="225:13" pos:end="225:13">s</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:29">zlibprime_curr</name></name> <operator pos:start="225:31" pos:end="225:31">=</operator> <literal type="number" pos:start="225:33" pos:end="225:33">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:34"><expr pos:start="227:13" pos:end="227:33"><name pos:start="227:13" pos:end="227:29"><name pos:start="227:13" pos:end="227:13">s</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:29">zlibprime_prev</name></name> <operator pos:start="227:31" pos:end="227:31">=</operator> <literal type="number" pos:start="227:33" pos:end="227:33">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:34"><expr pos:start="229:13" pos:end="229:33"><name pos:start="229:13" pos:end="229:25"><name pos:start="229:13" pos:end="229:13">s</name><operator pos:start="229:14" pos:end="229:15">-&gt;</operator><name pos:start="229:16" pos:end="229:25">diff_start</name></name>     <operator pos:start="229:31" pos:end="229:31">=</operator> <literal type="number" pos:start="229:33" pos:end="229:33">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:47"><expr pos:start="231:13" pos:end="231:46"><name pos:start="231:13" pos:end="231:26"><name pos:start="231:13" pos:end="231:13">s</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:26">diff_height</name></name>    <operator pos:start="231:31" pos:end="231:31">=</operator> <name pos:start="231:33" pos:end="231:46">cur_blk_height</name></expr>;</expr_stmt>



            <if_stmt pos:start="235:13" pos:end="386:20"><if pos:start="235:13" pos:end="386:20">if <condition pos:start="235:16" pos:end="235:46">(<expr pos:start="235:17" pos:end="235:45"><literal type="number" pos:start="235:17" pos:end="235:17">8</literal> <operator pos:start="235:19" pos:end="235:19">*</operator> <name pos:start="235:21" pos:end="235:24">size</name> <operator pos:start="235:26" pos:end="235:26">&gt;</operator> <call pos:start="235:28" pos:end="235:45"><name pos:start="235:28" pos:end="235:40">get_bits_left</name><argument_list pos:start="235:41" pos:end="235:45">(<argument pos:start="235:42" pos:end="235:44"><expr pos:start="235:42" pos:end="235:44"><operator pos:start="235:42" pos:end="235:42">&amp;</operator><name pos:start="235:43" pos:end="235:44">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="235:48" pos:end="386:20">{<block_content pos:start="237:17" pos:end="386:20">

                <expr_stmt pos:start="237:17" pos:end="237:56"><expr pos:start="237:17" pos:end="237:55"><call pos:start="237:17" pos:end="237:55"><name pos:start="237:17" pos:end="237:37"><name pos:start="237:17" pos:end="237:21">avctx</name><operator pos:start="237:22" pos:end="237:23">-&gt;</operator><name pos:start="237:24" pos:end="237:37">release_buffer</name></name><argument_list pos:start="237:38" pos:end="237:55">(<argument pos:start="237:39" pos:end="237:43"><expr pos:start="237:39" pos:end="237:43"><name pos:start="237:39" pos:end="237:43">avctx</name></expr></argument>, <argument pos:start="237:46" pos:end="237:54"><expr pos:start="237:46" pos:end="237:54"><operator pos:start="237:46" pos:end="237:46">&amp;</operator><name pos:start="237:47" pos:end="237:54"><name pos:start="237:47" pos:end="237:47">s</name><operator pos:start="237:48" pos:end="237:49">-&gt;</operator><name pos:start="237:50" pos:end="237:54">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="239:17" pos:end="239:40"><expr pos:start="239:17" pos:end="239:39"><name pos:start="239:17" pos:end="239:32"><name pos:start="239:17" pos:end="239:17">s</name><operator pos:start="239:18" pos:end="239:19">-&gt;</operator><name pos:start="239:20" pos:end="239:24">frame</name><operator pos:start="239:25" pos:end="239:25">.</operator><name pos:start="239:26" pos:end="239:29">data</name><index pos:start="239:30" pos:end="239:32">[<expr pos:start="239:31" pos:end="239:31"><literal type="number" pos:start="239:31" pos:end="239:31">0</literal></expr>]</index></name> <operator pos:start="239:34" pos:end="239:34">=</operator> <name pos:start="239:36" pos:end="239:39">NULL</name></expr>;</expr_stmt>





            <if_stmt pos:start="245:13" pos:end="386:20"><if pos:start="245:13" pos:end="386:20">if <condition pos:start="245:16" pos:end="245:36">(<expr pos:start="245:17" pos:end="245:35"><name pos:start="245:17" pos:end="245:22"><name pos:start="245:17" pos:end="245:17">s</name><operator pos:start="245:18" pos:end="245:19">-&gt;</operator><name pos:start="245:20" pos:end="245:22">ver</name></name> <operator pos:start="245:24" pos:end="245:25">==</operator> <literal type="number" pos:start="245:27" pos:end="245:27">2</literal> <operator pos:start="245:29" pos:end="245:30">&amp;&amp;</operator> <name pos:start="245:32" pos:end="245:35">size</name></expr>)</condition> <block pos:start="245:38" pos:end="386:20">{<block_content pos:start="247:17" pos:end="386:20">

                <expr_stmt pos:start="247:17" pos:end="247:34"><expr pos:start="247:17" pos:end="247:33"><call pos:start="247:17" pos:end="247:33"><name pos:start="247:17" pos:end="247:25">skip_bits</name><argument_list pos:start="247:26" pos:end="247:33">(<argument pos:start="247:27" pos:end="247:29"><expr pos:start="247:27" pos:end="247:29"><operator pos:start="247:27" pos:end="247:27">&amp;</operator><name pos:start="247:28" pos:end="247:29">gb</name></expr></argument>, <argument pos:start="247:32" pos:end="247:32"><expr pos:start="247:32" pos:end="247:32"><literal type="number" pos:start="247:32" pos:end="247:32">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="249:17" pos:end="249:53"><expr pos:start="249:17" pos:end="249:52"><name pos:start="249:17" pos:end="249:30"><name pos:start="249:17" pos:end="249:17">s</name><operator pos:start="249:18" pos:end="249:19">-&gt;</operator><name pos:start="249:20" pos:end="249:30">color_depth</name></name>    <operator pos:start="249:35" pos:end="249:35">=</operator> <call pos:start="249:37" pos:end="249:52"><name pos:start="249:37" pos:end="249:44">get_bits</name><argument_list pos:start="249:45" pos:end="249:52">(<argument pos:start="249:46" pos:end="249:48"><expr pos:start="249:46" pos:end="249:48"><operator pos:start="249:46" pos:end="249:46">&amp;</operator><name pos:start="249:47" pos:end="249:48">gb</name></expr></argument>, <argument pos:start="249:51" pos:end="249:51"><expr pos:start="249:51" pos:end="249:51"><literal type="number" pos:start="249:51" pos:end="249:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:51"><expr pos:start="251:17" pos:end="251:50"><name pos:start="251:17" pos:end="251:24">has_diff</name>          <operator pos:start="251:35" pos:end="251:35">=</operator> <call pos:start="251:37" pos:end="251:50"><name pos:start="251:37" pos:end="251:45">get_bits1</name><argument_list pos:start="251:46" pos:end="251:50">(<argument pos:start="251:47" pos:end="251:49"><expr pos:start="251:47" pos:end="251:49"><operator pos:start="251:47" pos:end="251:47">&amp;</operator><name pos:start="251:48" pos:end="251:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:51"><expr pos:start="253:17" pos:end="253:50"><name pos:start="253:17" pos:end="253:33"><name pos:start="253:17" pos:end="253:17">s</name><operator pos:start="253:18" pos:end="253:19">-&gt;</operator><name pos:start="253:20" pos:end="253:33">zlibprime_curr</name></name> <operator pos:start="253:35" pos:end="253:35">=</operator> <call pos:start="253:37" pos:end="253:50"><name pos:start="253:37" pos:end="253:45">get_bits1</name><argument_list pos:start="253:46" pos:end="253:50">(<argument pos:start="253:47" pos:end="253:49"><expr pos:start="253:47" pos:end="253:49"><operator pos:start="253:47" pos:end="253:47">&amp;</operator><name pos:start="253:48" pos:end="253:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:51"><expr pos:start="255:17" pos:end="255:50"><name pos:start="255:17" pos:end="255:33"><name pos:start="255:17" pos:end="255:17">s</name><operator pos:start="255:18" pos:end="255:19">-&gt;</operator><name pos:start="255:20" pos:end="255:33">zlibprime_prev</name></name> <operator pos:start="255:35" pos:end="255:35">=</operator> <call pos:start="255:37" pos:end="255:50"><name pos:start="255:37" pos:end="255:45">get_bits1</name><argument_list pos:start="255:46" pos:end="255:50">(<argument pos:start="255:47" pos:end="255:49"><expr pos:start="255:47" pos:end="255:49"><operator pos:start="255:47" pos:end="255:47">&amp;</operator><name pos:start="255:48" pos:end="255:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="259:17" pos:end="262:83"><if pos:start="259:17" pos:end="262:83">if <condition pos:start="259:20" pos:end="259:63">(<expr pos:start="259:21" pos:end="259:62"><name pos:start="259:21" pos:end="259:34"><name pos:start="259:21" pos:end="259:21">s</name><operator pos:start="259:22" pos:end="259:23">-&gt;</operator><name pos:start="259:24" pos:end="259:34">color_depth</name></name> <operator pos:start="259:36" pos:end="259:37">!=</operator> <literal type="number" pos:start="259:39" pos:end="259:39">0</literal> <operator pos:start="259:41" pos:end="259:42">&amp;&amp;</operator> <name pos:start="259:44" pos:end="259:57"><name pos:start="259:44" pos:end="259:44">s</name><operator pos:start="259:45" pos:end="259:46">-&gt;</operator><name pos:start="259:47" pos:end="259:57">color_depth</name></name> <operator pos:start="259:59" pos:end="259:60">!=</operator> <literal type="number" pos:start="259:62" pos:end="259:62">2</literal></expr>)</condition> <block pos:start="259:65" pos:end="262:82">{<block_content pos:start="262:28" pos:end="262:82">


                           <expr_stmt pos:start="262:28" pos:end="262:81"><expr pos:start="262:28" pos:end="262:59"><literal type="string" pos:start="262:28" pos:end="262:59">"%dx%d invalid color depth %d\n"</literal></expr><operator pos:start="262:60" pos:end="262:60">,</operator> <expr pos:start="262:62" pos:end="262:62"><name pos:start="262:62" pos:end="262:62">i</name></expr><operator pos:start="262:63" pos:end="262:63">,</operator> <expr pos:start="262:65" pos:end="262:65"><name pos:start="262:65" pos:end="262:65">j</name></expr><operator pos:start="262:66" pos:end="262:66">,</operator> <expr pos:start="262:68" pos:end="262:81"><name pos:start="262:68" pos:end="262:81"><name pos:start="262:68" pos:end="262:68">s</name><operator pos:start="262:69" pos:end="262:70">-&gt;</operator><name pos:start="262:71" pos:end="262:81">color_depth</name></name></expr></expr_stmt>)</block_content></block><empty_stmt pos:start="262:83" pos:end="262:83">;</empty_stmt></if></if_stmt>





                <if_stmt pos:start="268:17" pos:end="386:20"><if pos:start="268:17" pos:end="386:20">if <condition pos:start="268:20" pos:end="268:29">(<expr pos:start="268:21" pos:end="268:28"><name pos:start="268:21" pos:end="268:28">has_diff</name></expr>)</condition> <block pos:start="268:31" pos:end="386:20">{<block_content pos:start="275:21" pos:end="386:20">






                    <expr_stmt pos:start="275:21" pos:end="275:54"><expr pos:start="275:21" pos:end="275:53"><name pos:start="275:21" pos:end="275:33"><name pos:start="275:21" pos:end="275:21">s</name><operator pos:start="275:22" pos:end="275:23">-&gt;</operator><name pos:start="275:24" pos:end="275:33">diff_start</name></name>  <operator pos:start="275:36" pos:end="275:36">=</operator> <call pos:start="275:38" pos:end="275:53"><name pos:start="275:38" pos:end="275:45">get_bits</name><argument_list pos:start="275:46" pos:end="275:53">(<argument pos:start="275:47" pos:end="275:49"><expr pos:start="275:47" pos:end="275:49"><operator pos:start="275:47" pos:end="275:47">&amp;</operator><name pos:start="275:48" pos:end="275:49">gb</name></expr></argument>, <argument pos:start="275:52" pos:end="275:52"><expr pos:start="275:52" pos:end="275:52"><literal type="number" pos:start="275:52" pos:end="275:52">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="277:21" pos:end="277:54"><expr pos:start="277:21" pos:end="277:53"><name pos:start="277:21" pos:end="277:34"><name pos:start="277:21" pos:end="277:21">s</name><operator pos:start="277:22" pos:end="277:23">-&gt;</operator><name pos:start="277:24" pos:end="277:34">diff_height</name></name> <operator pos:start="277:36" pos:end="277:36">=</operator> <call pos:start="277:38" pos:end="277:53"><name pos:start="277:38" pos:end="277:45">get_bits</name><argument_list pos:start="277:46" pos:end="277:53">(<argument pos:start="277:47" pos:end="277:49"><expr pos:start="277:47" pos:end="277:49"><operator pos:start="277:47" pos:end="277:47">&amp;</operator><name pos:start="277:48" pos:end="277:49">gb</name></expr></argument>, <argument pos:start="277:52" pos:end="277:52"><expr pos:start="277:52" pos:end="277:52"><literal type="number" pos:start="277:52" pos:end="277:52">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="279:21" pos:end="283:64"><expr pos:start="279:21" pos:end="283:63"><call pos:start="279:21" pos:end="283:63"><name pos:start="279:21" pos:end="279:26">av_log</name><argument_list pos:start="279:27" pos:end="283:63">(<argument pos:start="279:28" pos:end="279:32"><expr pos:start="279:28" pos:end="279:32"><name pos:start="279:28" pos:end="279:32">avctx</name></expr></argument>, <argument pos:start="279:35" pos:end="279:46"><expr pos:start="279:35" pos:end="279:46"><name pos:start="279:35" pos:end="279:46">AV_LOG_DEBUG</name></expr></argument>,

                           <argument pos:start="281:28" pos:end="281:60"><expr pos:start="281:28" pos:end="281:60"><literal type="string" pos:start="281:28" pos:end="281:60">"%dx%d diff start %d height %d\n"</literal></expr></argument>,

                           <argument pos:start="283:28" pos:end="283:28"><expr pos:start="283:28" pos:end="283:28"><name pos:start="283:28" pos:end="283:28">i</name></expr></argument>, <argument pos:start="283:31" pos:end="283:31"><expr pos:start="283:31" pos:end="283:31"><name pos:start="283:31" pos:end="283:31">j</name></expr></argument>, <argument pos:start="283:34" pos:end="283:46"><expr pos:start="283:34" pos:end="283:46"><name pos:start="283:34" pos:end="283:46"><name pos:start="283:34" pos:end="283:34">s</name><operator pos:start="283:35" pos:end="283:36">-&gt;</operator><name pos:start="283:37" pos:end="283:46">diff_start</name></name></expr></argument>, <argument pos:start="283:49" pos:end="283:62"><expr pos:start="283:49" pos:end="283:62"><name pos:start="283:49" pos:end="283:62"><name pos:start="283:49" pos:end="283:49">s</name><operator pos:start="283:50" pos:end="283:51">-&gt;</operator><name pos:start="283:52" pos:end="283:62">diff_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="285:21" pos:end="285:30"><expr pos:start="285:21" pos:end="285:29"><name pos:start="285:21" pos:end="285:24">size</name> <operator pos:start="285:26" pos:end="285:27">-=</operator> <literal type="number" pos:start="285:29" pos:end="285:29">2</literal></expr>;</expr_stmt>




                <if_stmt pos:start="290:17" pos:end="292:80"><if pos:start="290:17" pos:end="292:80">if <condition pos:start="290:20" pos:end="290:38">(<expr pos:start="290:21" pos:end="290:37"><name pos:start="290:21" pos:end="290:37"><name pos:start="290:21" pos:end="290:21">s</name><operator pos:start="290:22" pos:end="290:23">-&gt;</operator><name pos:start="290:24" pos:end="290:37">zlibprime_prev</name></name></expr>)</condition><block type="pseudo" pos:start="292:21" pos:end="292:80"><block_content pos:start="292:21" pos:end="292:80">

                    <expr_stmt pos:start="292:21" pos:end="292:80"><expr pos:start="292:21" pos:end="292:79"><call pos:start="292:21" pos:end="292:79"><name pos:start="292:21" pos:end="292:26">av_log</name><argument_list pos:start="292:27" pos:end="292:79">(<argument pos:start="292:28" pos:end="292:32"><expr pos:start="292:28" pos:end="292:32"><name pos:start="292:28" pos:end="292:32">avctx</name></expr></argument>, <argument pos:start="292:35" pos:end="292:46"><expr pos:start="292:35" pos:end="292:46"><name pos:start="292:35" pos:end="292:46">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="292:49" pos:end="292:72"><expr pos:start="292:49" pos:end="292:72"><literal type="string" pos:start="292:49" pos:end="292:72">"%dx%d zlibprime_prev\n"</literal></expr></argument>, <argument pos:start="292:75" pos:end="292:75"><expr pos:start="292:75" pos:end="292:75"><name pos:start="292:75" pos:end="292:75">i</name></expr></argument>, <argument pos:start="292:78" pos:end="292:78"><expr pos:start="292:78" pos:end="292:78"><name pos:start="292:78" pos:end="292:78">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="296:17" pos:end="386:20"><if pos:start="296:17" pos:end="386:20">if <condition pos:start="296:20" pos:end="296:38">(<expr pos:start="296:21" pos:end="296:37"><name pos:start="296:21" pos:end="296:37"><name pos:start="296:21" pos:end="296:21">s</name><operator pos:start="296:22" pos:end="296:23">-&gt;</operator><name pos:start="296:24" pos:end="296:37">zlibprime_curr</name></name></expr>)</condition> <block pos:start="296:40" pos:end="386:20">{<block_content pos:start="298:21" pos:end="386:20">

                    <decl_stmt pos:start="298:21" pos:end="298:47"><decl pos:start="298:21" pos:end="298:46"><type pos:start="298:21" pos:end="298:23"><name pos:start="298:21" pos:end="298:23">int</name></type> <name pos:start="298:25" pos:end="298:27">col</name> <init pos:start="298:29" pos:end="298:46">= <expr pos:start="298:31" pos:end="298:46"><call pos:start="298:31" pos:end="298:46"><name pos:start="298:31" pos:end="298:38">get_bits</name><argument_list pos:start="298:39" pos:end="298:46">(<argument pos:start="298:40" pos:end="298:42"><expr pos:start="298:40" pos:end="298:42"><operator pos:start="298:40" pos:end="298:40">&amp;</operator><name pos:start="298:41" pos:end="298:42">gb</name></expr></argument>, <argument pos:start="298:45" pos:end="298:45"><expr pos:start="298:45" pos:end="298:45"><literal type="number" pos:start="298:45" pos:end="298:45">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="300:21" pos:end="300:47"><decl pos:start="300:21" pos:end="300:46"><type pos:start="300:21" pos:end="300:23"><name pos:start="300:21" pos:end="300:23">int</name></type> <name pos:start="300:25" pos:end="300:27">row</name> <init pos:start="300:29" pos:end="300:46">= <expr pos:start="300:31" pos:end="300:46"><call pos:start="300:31" pos:end="300:46"><name pos:start="300:31" pos:end="300:38">get_bits</name><argument_list pos:start="300:39" pos:end="300:46">(<argument pos:start="300:40" pos:end="300:42"><expr pos:start="300:40" pos:end="300:42"><operator pos:start="300:40" pos:end="300:40">&amp;</operator><name pos:start="300:41" pos:end="300:42">gb</name></expr></argument>, <argument pos:start="300:45" pos:end="300:45"><expr pos:start="300:45" pos:end="300:45"><literal type="number" pos:start="300:45" pos:end="300:45">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="302:21" pos:end="302:96"><expr pos:start="302:21" pos:end="302:95"><call pos:start="302:21" pos:end="302:95"><name pos:start="302:21" pos:end="302:26">av_log</name><argument_list pos:start="302:27" pos:end="302:95">(<argument pos:start="302:28" pos:end="302:32"><expr pos:start="302:28" pos:end="302:32"><name pos:start="302:28" pos:end="302:32">avctx</name></expr></argument>, <argument pos:start="302:35" pos:end="302:46"><expr pos:start="302:35" pos:end="302:46"><name pos:start="302:35" pos:end="302:46">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="302:49" pos:end="302:78"><expr pos:start="302:49" pos:end="302:78"><literal type="string" pos:start="302:49" pos:end="302:78">"%dx%d zlibprime_curr %dx%d\n"</literal></expr></argument>, <argument pos:start="302:81" pos:end="302:81"><expr pos:start="302:81" pos:end="302:81"><name pos:start="302:81" pos:end="302:81">i</name></expr></argument>, <argument pos:start="302:84" pos:end="302:84"><expr pos:start="302:84" pos:end="302:84"><name pos:start="302:84" pos:end="302:84">j</name></expr></argument>, <argument pos:start="302:87" pos:end="302:89"><expr pos:start="302:87" pos:end="302:89"><name pos:start="302:87" pos:end="302:89">col</name></expr></argument>, <argument pos:start="302:92" pos:end="302:94"><expr pos:start="302:92" pos:end="302:94"><name pos:start="302:92" pos:end="302:94">row</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="304:21" pos:end="304:30"><expr pos:start="304:21" pos:end="304:29"><name pos:start="304:21" pos:end="304:24">size</name> <operator pos:start="304:26" pos:end="304:27">-=</operator> <literal type="number" pos:start="304:29" pos:end="304:29">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="306:21" pos:end="306:71"><expr pos:start="306:21" pos:end="306:70"><call pos:start="306:21" pos:end="306:70"><name pos:start="306:21" pos:end="306:42">av_log_missing_feature</name><argument_list pos:start="306:43" pos:end="306:70">(<argument pos:start="306:44" pos:end="306:48"><expr pos:start="306:44" pos:end="306:48"><name pos:start="306:44" pos:end="306:48">avctx</name></expr></argument>, <argument pos:start="306:51" pos:end="306:66"><expr pos:start="306:51" pos:end="306:66"><literal type="string" pos:start="306:51" pos:end="306:66">"zlibprime_curr"</literal></expr></argument>, <argument pos:start="306:69" pos:end="306:69"><expr pos:start="306:69" pos:end="306:69"><literal type="number" pos:start="306:69" pos:end="306:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="308:21" pos:end="308:48">return <expr pos:start="308:28" pos:end="308:47"><name pos:start="308:28" pos:end="308:47">AVERROR_PATCHWELCOME</name></expr>;</return>


                <expr_stmt pos:start="311:17" pos:end="311:23"><expr pos:start="311:17" pos:end="311:22"><name pos:start="311:17" pos:end="311:20">size</name><operator pos:start="311:21" pos:end="311:22">--</operator></expr>;</expr_stmt> <comment type="line" pos:start="311:25" pos:end="311:49">// account for flags byte</comment>




            <if_stmt pos:start="316:13" pos:end="386:20"><if pos:start="316:13" pos:end="386:20">if <condition pos:start="316:16" pos:end="316:25">(<expr pos:start="316:17" pos:end="316:24"><name pos:start="316:17" pos:end="316:24">has_diff</name></expr>)</condition> <block pos:start="316:27" pos:end="386:20">{<block_content pos:start="318:17" pos:end="386:20">

                <decl_stmt pos:start="318:17" pos:end="318:22"><decl pos:start="318:17" pos:end="318:21"><type pos:start="318:17" pos:end="318:19"><name pos:start="318:17" pos:end="318:19">int</name></type> <name pos:start="318:21" pos:end="318:21">k</name></decl>;</decl_stmt>

                <decl_stmt pos:start="320:17" pos:end="320:79"><decl pos:start="320:17" pos:end="320:78"><type pos:start="320:17" pos:end="320:19"><name pos:start="320:17" pos:end="320:19">int</name></type> <name pos:start="320:21" pos:end="320:23">off</name> <init pos:start="320:25" pos:end="320:78">= <expr pos:start="320:27" pos:end="320:78"><operator pos:start="320:27" pos:end="320:27">(</operator><name pos:start="320:28" pos:end="320:42"><name pos:start="320:28" pos:end="320:28">s</name><operator pos:start="320:29" pos:end="320:30">-&gt;</operator><name pos:start="320:31" pos:end="320:42">image_height</name></name> <operator pos:start="320:44" pos:end="320:44">-</operator> <name pos:start="320:46" pos:end="320:50">y_pos</name> <operator pos:start="320:52" pos:end="320:52">-</operator> <literal type="number" pos:start="320:54" pos:end="320:54">1</literal><operator pos:start="320:55" pos:end="320:55">)</operator> <operator pos:start="320:57" pos:end="320:57">*</operator> <name pos:start="320:59" pos:end="320:78"><name pos:start="320:59" pos:end="320:59">s</name><operator pos:start="320:60" pos:end="320:61">-&gt;</operator><name pos:start="320:62" pos:end="320:66">frame</name><operator pos:start="320:67" pos:end="320:67">.</operator><name pos:start="320:68" pos:end="320:75">linesize</name><index pos:start="320:76" pos:end="320:78">[<expr pos:start="320:77" pos:end="320:77"><literal type="number" pos:start="320:77" pos:end="320:77">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <for pos:start="324:17" pos:end="330:46">for <control pos:start="324:21" pos:end="324:52">(<init pos:start="324:22" pos:end="324:27"><expr pos:start="324:22" pos:end="324:26"><name pos:start="324:22" pos:end="324:22">k</name> <operator pos:start="324:24" pos:end="324:24">=</operator> <literal type="number" pos:start="324:26" pos:end="324:26">0</literal></expr>;</init> <condition pos:start="324:29" pos:end="324:47"><expr pos:start="324:29" pos:end="324:46"><name pos:start="324:29" pos:end="324:29">k</name> <operator pos:start="324:31" pos:end="324:31">&lt;</operator> <name pos:start="324:33" pos:end="324:46">cur_blk_height</name></expr>;</condition> <incr pos:start="324:49" pos:end="324:51"><expr pos:start="324:49" pos:end="324:51"><name pos:start="324:49" pos:end="324:49">k</name><operator pos:start="324:50" pos:end="324:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="326:21" pos:end="330:46"><block_content pos:start="326:21" pos:end="330:46">

                    <expr_stmt pos:start="326:21" pos:end="330:46"><expr pos:start="326:21" pos:end="330:45"><call pos:start="326:21" pos:end="330:45"><name pos:start="326:21" pos:end="326:26">memcpy</name><argument_list pos:start="326:27" pos:end="330:45">(<argument pos:start="326:28" pos:end="326:84"><expr pos:start="326:28" pos:end="326:84"><name pos:start="326:28" pos:end="326:43"><name pos:start="326:28" pos:end="326:28">s</name><operator pos:start="326:29" pos:end="326:30">-&gt;</operator><name pos:start="326:31" pos:end="326:35">frame</name><operator pos:start="326:36" pos:end="326:36">.</operator><name pos:start="326:37" pos:end="326:40">data</name><index pos:start="326:41" pos:end="326:43">[<expr pos:start="326:42" pos:end="326:42"><literal type="number" pos:start="326:42" pos:end="326:42">0</literal></expr>]</index></name> <operator pos:start="326:45" pos:end="326:45">+</operator> <name pos:start="326:47" pos:end="326:49">off</name> <operator pos:start="326:51" pos:end="326:51">-</operator> <name pos:start="326:53" pos:end="326:53">k</name><operator pos:start="326:54" pos:end="326:54">*</operator><name pos:start="326:55" pos:end="326:74"><name pos:start="326:55" pos:end="326:55">s</name><operator pos:start="326:56" pos:end="326:57">-&gt;</operator><name pos:start="326:58" pos:end="326:62">frame</name><operator pos:start="326:63" pos:end="326:63">.</operator><name pos:start="326:64" pos:end="326:71">linesize</name><index pos:start="326:72" pos:end="326:74">[<expr pos:start="326:73" pos:end="326:73"><literal type="number" pos:start="326:73" pos:end="326:73">0</literal></expr>]</index></name> <operator pos:start="326:76" pos:end="326:76">+</operator> <name pos:start="326:78" pos:end="326:82">x_pos</name><operator pos:start="326:83" pos:end="326:83">*</operator><literal type="number" pos:start="326:84" pos:end="326:84">3</literal></expr></argument>,

                           <argument pos:start="328:28" pos:end="328:79"><expr pos:start="328:28" pos:end="328:79"><name pos:start="328:28" pos:end="328:38"><name pos:start="328:28" pos:end="328:28">s</name><operator pos:start="328:29" pos:end="328:30">-&gt;</operator><name pos:start="328:31" pos:end="328:38">keyframe</name></name> <operator pos:start="328:40" pos:end="328:40">+</operator> <name pos:start="328:42" pos:end="328:44">off</name> <operator pos:start="328:46" pos:end="328:46">-</operator> <name pos:start="328:48" pos:end="328:48">k</name><operator pos:start="328:49" pos:end="328:49">*</operator><name pos:start="328:50" pos:end="328:69"><name pos:start="328:50" pos:end="328:50">s</name><operator pos:start="328:51" pos:end="328:52">-&gt;</operator><name pos:start="328:53" pos:end="328:57">frame</name><operator pos:start="328:58" pos:end="328:58">.</operator><name pos:start="328:59" pos:end="328:66">linesize</name><index pos:start="328:67" pos:end="328:69">[<expr pos:start="328:68" pos:end="328:68"><literal type="number" pos:start="328:68" pos:end="328:68">0</literal></expr>]</index></name> <operator pos:start="328:71" pos:end="328:71">+</operator> <name pos:start="328:73" pos:end="328:77">x_pos</name><operator pos:start="328:78" pos:end="328:78">*</operator><literal type="number" pos:start="328:79" pos:end="328:79">3</literal></expr></argument>,

                           <argument pos:start="330:28" pos:end="330:44"><expr pos:start="330:28" pos:end="330:44"><name pos:start="330:28" pos:end="330:40">cur_blk_width</name> <operator pos:start="330:42" pos:end="330:42">*</operator> <literal type="number" pos:start="330:44" pos:end="330:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>




            <comment type="block" pos:start="335:13" pos:end="335:58">/* skip unchanged blocks, which have size 0 */</comment>

            <if_stmt pos:start="337:13" pos:end="348:76"><if pos:start="337:13" pos:end="348:76">if <condition pos:start="337:16" pos:end="337:21">(<expr pos:start="337:17" pos:end="337:20"><name pos:start="337:17" pos:end="337:20">size</name></expr>)</condition> <block pos:start="337:23" pos:end="348:75">{<block_content pos:start="339:17" pos:end="348:75">

                <if_stmt pos:start="339:17" pos:end="348:74"><if pos:start="339:17" pos:end="348:74">if <condition pos:start="339:20" pos:end="345:72">(<expr pos:start="339:21" pos:end="345:71"><call pos:start="339:21" pos:end="345:71"><name pos:start="339:21" pos:end="339:40">flashsv_decode_block</name><argument_list pos:start="339:41" pos:end="345:71">(<argument pos:start="339:42" pos:end="339:46"><expr pos:start="339:42" pos:end="339:46"><name pos:start="339:42" pos:end="339:46">avctx</name></expr></argument>, <argument pos:start="339:49" pos:end="339:53"><expr pos:start="339:49" pos:end="339:53"><name pos:start="339:49" pos:end="339:53">avpkt</name></expr></argument>, <argument pos:start="339:56" pos:end="339:58"><expr pos:start="339:56" pos:end="339:58"><operator pos:start="339:56" pos:end="339:56">&amp;</operator><name pos:start="339:57" pos:end="339:58">gb</name></expr></argument>, <argument pos:start="339:61" pos:end="339:64"><expr pos:start="339:61" pos:end="339:64"><name pos:start="339:61" pos:end="339:64">size</name></expr></argument>,

                                         <argument pos:start="341:42" pos:end="341:54"><expr pos:start="341:42" pos:end="341:54"><name pos:start="341:42" pos:end="341:54">cur_blk_width</name></expr></argument>, <argument pos:start="341:57" pos:end="341:70"><expr pos:start="341:57" pos:end="341:70"><name pos:start="341:57" pos:end="341:70">cur_blk_height</name></expr></argument>,

                                         <argument pos:start="343:42" pos:end="343:46"><expr pos:start="343:42" pos:end="343:46"><name pos:start="343:42" pos:end="343:46">x_pos</name></expr></argument>, <argument pos:start="343:49" pos:end="343:53"><expr pos:start="343:49" pos:end="343:53"><name pos:start="343:49" pos:end="343:53">y_pos</name></expr></argument>,

                                         <argument pos:start="345:42" pos:end="345:70"><expr pos:start="345:42" pos:end="345:70"><name pos:start="345:42" pos:end="345:42">i</name> <operator pos:start="345:44" pos:end="345:44">+</operator> <name pos:start="345:46" pos:end="345:46">j</name> <operator pos:start="345:48" pos:end="345:48">*</operator> <operator pos:start="345:50" pos:end="345:50">(</operator><name pos:start="345:51" pos:end="345:58">h_blocks</name> <operator pos:start="345:60" pos:end="345:60">+</operator> <operator pos:start="345:62" pos:end="345:62">!</operator><operator pos:start="345:63" pos:end="345:63">!</operator><name pos:start="345:64" pos:end="345:69">h_part</name><operator pos:start="345:70" pos:end="345:70">)</operator></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="348:28" pos:end="348:74"><block_content pos:start="348:28" pos:end="348:74">


                           <expr_stmt pos:start="348:28" pos:end="348:74"><expr pos:start="348:28" pos:end="348:68"><literal type="string" pos:start="348:28" pos:end="348:68">"error in decompression of block %dx%d\n"</literal></expr><operator pos:start="348:69" pos:end="348:69">,</operator> <expr pos:start="348:71" pos:end="348:71"><name pos:start="348:71" pos:end="348:71">i</name></expr><operator pos:start="348:72" pos:end="348:72">,</operator> <expr pos:start="348:74" pos:end="348:74"><name pos:start="348:74" pos:end="348:74">j</name></expr></expr_stmt></block_content></block></if></if_stmt>)</block_content></block><empty_stmt pos:start="348:76" pos:end="348:76">;</empty_stmt></if></if_stmt>




    <if_stmt pos:start="353:5" pos:end="386:20"><if pos:start="353:5" pos:end="386:20">if <condition pos:start="353:8" pos:end="353:38">(<expr pos:start="353:9" pos:end="353:37"><name pos:start="353:9" pos:end="353:22"><name pos:start="353:9" pos:end="353:9">s</name><operator pos:start="353:10" pos:end="353:11">-&gt;</operator><name pos:start="353:12" pos:end="353:22">is_keyframe</name></name> <operator pos:start="353:24" pos:end="353:25">&amp;&amp;</operator> <name pos:start="353:27" pos:end="353:32"><name pos:start="353:27" pos:end="353:27">s</name><operator pos:start="353:28" pos:end="353:29">-&gt;</operator><name pos:start="353:30" pos:end="353:32">ver</name></name> <operator pos:start="353:34" pos:end="353:35">==</operator> <literal type="number" pos:start="353:37" pos:end="353:37">2</literal></expr>)</condition> <block pos:start="353:40" pos:end="386:20">{<block_content pos:start="356:13" pos:end="386:20">


            <expr_stmt pos:start="356:13" pos:end="356:74"><expr pos:start="356:13" pos:end="356:73"><name pos:start="356:13" pos:end="356:23"><name pos:start="356:13" pos:end="356:13">s</name><operator pos:start="356:14" pos:end="356:15">-&gt;</operator><name pos:start="356:16" pos:end="356:23">keyframe</name></name> <operator pos:start="356:25" pos:end="356:25">=</operator> <call pos:start="356:27" pos:end="356:73"><name pos:start="356:27" pos:end="356:35">av_malloc</name><argument_list pos:start="356:36" pos:end="356:73">(<argument pos:start="356:37" pos:end="356:72"><expr pos:start="356:37" pos:end="356:72"><name pos:start="356:37" pos:end="356:56"><name pos:start="356:37" pos:end="356:37">s</name><operator pos:start="356:38" pos:end="356:39">-&gt;</operator><name pos:start="356:40" pos:end="356:44">frame</name><operator pos:start="356:45" pos:end="356:45">.</operator><name pos:start="356:46" pos:end="356:53">linesize</name><index pos:start="356:54" pos:end="356:56">[<expr pos:start="356:55" pos:end="356:55"><literal type="number" pos:start="356:55" pos:end="356:55">0</literal></expr>]</index></name> <operator pos:start="356:58" pos:end="356:58">*</operator> <name pos:start="356:60" pos:end="356:72"><name pos:start="356:60" pos:end="356:64">avctx</name><operator pos:start="356:65" pos:end="356:66">-&gt;</operator><name pos:start="356:67" pos:end="356:72">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


                <expr_stmt pos:start="359:17" pos:end="359:76"><expr pos:start="359:17" pos:end="359:75"><call pos:start="359:17" pos:end="359:75"><name pos:start="359:17" pos:end="359:22">av_log</name><argument_list pos:start="359:23" pos:end="359:75">(<argument pos:start="359:24" pos:end="359:28"><expr pos:start="359:24" pos:end="359:28"><name pos:start="359:24" pos:end="359:28">avctx</name></expr></argument>, <argument pos:start="359:31" pos:end="359:42"><expr pos:start="359:31" pos:end="359:42"><name pos:start="359:31" pos:end="359:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="359:45" pos:end="359:74"><expr pos:start="359:45" pos:end="359:74"><literal type="string" pos:start="359:45" pos:end="359:74">"Cannot allocate image data\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="361:17" pos:end="361:39">return <expr pos:start="361:24" pos:end="361:38"><call pos:start="361:24" pos:end="361:38"><name pos:start="361:24" pos:end="361:30">AVERROR</name><argument_list pos:start="361:31" pos:end="361:38">(<argument pos:start="361:32" pos:end="361:37"><expr pos:start="361:32" pos:end="361:37"><name pos:start="361:32" pos:end="361:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>



        <expr_stmt pos:start="365:9" pos:end="365:84"><expr pos:start="365:9" pos:end="365:83"><call pos:start="365:9" pos:end="365:83"><name pos:start="365:9" pos:end="365:14">memcpy</name><argument_list pos:start="365:15" pos:end="365:83">(<argument pos:start="365:16" pos:end="365:26"><expr pos:start="365:16" pos:end="365:26"><name pos:start="365:16" pos:end="365:26"><name pos:start="365:16" pos:end="365:16">s</name><operator pos:start="365:17" pos:end="365:18">-&gt;</operator><name pos:start="365:19" pos:end="365:26">keyframe</name></name></expr></argument>, <argument pos:start="365:29" pos:end="365:44"><expr pos:start="365:29" pos:end="365:44"><name pos:start="365:29" pos:end="365:44"><name pos:start="365:29" pos:end="365:29">s</name><operator pos:start="365:30" pos:end="365:31">-&gt;</operator><name pos:start="365:32" pos:end="365:36">frame</name><operator pos:start="365:37" pos:end="365:37">.</operator><name pos:start="365:38" pos:end="365:41">data</name><index pos:start="365:42" pos:end="365:44">[<expr pos:start="365:43" pos:end="365:43"><literal type="number" pos:start="365:43" pos:end="365:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="365:47" pos:end="365:82"><expr pos:start="365:47" pos:end="365:82"><name pos:start="365:47" pos:end="365:66"><name pos:start="365:47" pos:end="365:47">s</name><operator pos:start="365:48" pos:end="365:49">-&gt;</operator><name pos:start="365:50" pos:end="365:54">frame</name><operator pos:start="365:55" pos:end="365:55">.</operator><name pos:start="365:56" pos:end="365:63">linesize</name><index pos:start="365:64" pos:end="365:66">[<expr pos:start="365:65" pos:end="365:65"><literal type="number" pos:start="365:65" pos:end="365:65">0</literal></expr>]</index></name> <operator pos:start="365:68" pos:end="365:68">*</operator> <name pos:start="365:70" pos:end="365:82"><name pos:start="365:70" pos:end="365:74">avctx</name><operator pos:start="365:75" pos:end="365:76">-&gt;</operator><name pos:start="365:77" pos:end="365:82">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="370:5" pos:end="370:33"><expr pos:start="370:5" pos:end="370:32"><operator pos:start="370:5" pos:end="370:5">*</operator><name pos:start="370:6" pos:end="370:14">data_size</name> <operator pos:start="370:16" pos:end="370:16">=</operator> <sizeof pos:start="370:18" pos:end="370:32">sizeof<argument_list pos:start="370:24" pos:end="370:32">(<argument pos:start="370:25" pos:end="370:31"><expr pos:start="370:25" pos:end="370:31"><name pos:start="370:25" pos:end="370:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="372:5" pos:end="372:31"><expr pos:start="372:5" pos:end="372:30"><operator pos:start="372:5" pos:end="372:5">*</operator><operator pos:start="372:6" pos:end="372:6">(</operator><name pos:start="372:7" pos:end="372:13">AVFrame</name><operator pos:start="372:14" pos:end="372:14">*</operator><operator pos:start="372:15" pos:end="372:15">)</operator><name pos:start="372:16" pos:end="372:19">data</name> <operator pos:start="372:21" pos:end="372:21">=</operator> <name pos:start="372:23" pos:end="372:30"><name pos:start="372:23" pos:end="372:23">s</name><operator pos:start="372:24" pos:end="372:25">-&gt;</operator><name pos:start="372:26" pos:end="372:30">frame</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="376:5" pos:end="380:52"><if pos:start="376:5" pos:end="380:52">if <condition pos:start="376:8" pos:end="376:46">(<expr pos:start="376:9" pos:end="376:45"><operator pos:start="376:9" pos:end="376:9">(</operator><call pos:start="376:10" pos:end="376:28"><name pos:start="376:10" pos:end="376:23">get_bits_count</name><argument_list pos:start="376:24" pos:end="376:28">(<argument pos:start="376:25" pos:end="376:27"><expr pos:start="376:25" pos:end="376:27"><operator pos:start="376:25" pos:end="376:25">&amp;</operator><name pos:start="376:26" pos:end="376:27">gb</name></expr></argument>)</argument_list></call> <operator pos:start="376:30" pos:end="376:30">/</operator> <literal type="number" pos:start="376:32" pos:end="376:32">8</literal><operator pos:start="376:33" pos:end="376:33">)</operator> <operator pos:start="376:35" pos:end="376:36">!=</operator> <name pos:start="376:38" pos:end="376:45">buf_size</name></expr>)</condition><block type="pseudo" pos:start="378:9" pos:end="380:52"><block_content pos:start="378:9" pos:end="380:52">

        <expr_stmt pos:start="378:9" pos:end="380:52"><expr pos:start="378:9" pos:end="380:51"><call pos:start="378:9" pos:end="380:51"><name pos:start="378:9" pos:end="378:14">av_log</name><argument_list pos:start="378:15" pos:end="380:51">(<argument pos:start="378:16" pos:end="378:20"><expr pos:start="378:16" pos:end="378:20"><name pos:start="378:16" pos:end="378:20">avctx</name></expr></argument>, <argument pos:start="378:23" pos:end="378:34"><expr pos:start="378:23" pos:end="378:34"><name pos:start="378:23" pos:end="378:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="378:37" pos:end="378:76"><expr pos:start="378:37" pos:end="378:76"><literal type="string" pos:start="378:37" pos:end="378:76">"buffer not fully consumed (%d != %d)\n"</literal></expr></argument>,

               <argument pos:start="380:16" pos:end="380:23"><expr pos:start="380:16" pos:end="380:23"><name pos:start="380:16" pos:end="380:23">buf_size</name></expr></argument>, <argument pos:start="380:26" pos:end="380:50"><expr pos:start="380:26" pos:end="380:50"><operator pos:start="380:26" pos:end="380:26">(</operator><call pos:start="380:27" pos:end="380:45"><name pos:start="380:27" pos:end="380:40">get_bits_count</name><argument_list pos:start="380:41" pos:end="380:45">(<argument pos:start="380:42" pos:end="380:44"><expr pos:start="380:42" pos:end="380:44"><operator pos:start="380:42" pos:end="380:42">&amp;</operator><name pos:start="380:43" pos:end="380:44">gb</name></expr></argument>)</argument_list></call> <operator pos:start="380:47" pos:end="380:47">/</operator> <literal type="number" pos:start="380:49" pos:end="380:49">8</literal><operator pos:start="380:50" pos:end="380:50">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="384:5" pos:end="384:56">/* report that the buffer was completely consumed */</comment>

    <return pos:start="386:5" pos:end="386:20">return <expr pos:start="386:12" pos:end="386:19"><name pos:start="386:12" pos:end="386:19">buf_size</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
