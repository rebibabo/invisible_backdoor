<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12296.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:23">mp3_sync</name><parameter_list pos:start="1:24" pos:end="1:74">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><name pos:start="1:45" pos:end="1:51">int64_t</name></type> <name pos:start="1:53" pos:end="1:62">target_pos</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:73"><decl pos:start="1:65" pos:end="1:73"><type pos:start="1:65" pos:end="1:73"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:73">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:48">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">dir</name> <init pos:start="5:13" pos:end="5:51">= <expr pos:start="5:15" pos:end="5:51"><ternary pos:start="5:15" pos:end="5:51"><condition pos:start="5:15" pos:end="5:44"><expr pos:start="5:15" pos:end="5:42"><operator pos:start="5:15" pos:end="5:15">(</operator><name pos:start="5:16" pos:end="5:20">flags</name><operator pos:start="5:21" pos:end="5:21">&amp;</operator><name pos:start="5:22" pos:end="5:41">AVSEEK_FLAG_BACKWARD</name><operator pos:start="5:42" pos:end="5:42">)</operator></expr> ?</condition><then pos:start="5:46" pos:end="5:47"> <expr pos:start="5:46" pos:end="5:47"><operator pos:start="5:46" pos:end="5:46">-</operator><literal type="number" pos:start="5:47" pos:end="5:47">1</literal></expr> </then><else pos:start="5:49" pos:end="5:51">: <expr pos:start="5:51" pos:end="5:51"><literal type="number" pos:start="5:51" pos:end="5:51">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:20">best_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">best_score</name></decl>, <decl pos:start="9:21" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:21">i</name></decl>, <decl pos:start="9:24" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:24" pos:end="9:24">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:67"><expr pos:start="15:5" pos:end="15:66"><call pos:start="15:5" pos:end="15:66"><name pos:start="15:5" pos:end="15:13">avio_seek</name><argument_list pos:start="15:14" pos:end="15:66">(<argument pos:start="15:15" pos:end="15:19"><expr pos:start="15:15" pos:end="15:19"><name pos:start="15:15" pos:end="15:19"><name pos:start="15:15" pos:end="15:15">s</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:19">pb</name></name></expr></argument>, <argument pos:start="15:22" pos:end="15:55"><expr pos:start="15:22" pos:end="15:55"><call pos:start="15:22" pos:end="15:55"><name pos:start="15:22" pos:end="15:26">FFMAX</name><argument_list pos:start="15:27" pos:end="15:55">(<argument pos:start="15:28" pos:end="15:51"><expr pos:start="15:28" pos:end="15:51"><name pos:start="15:28" pos:end="15:37">target_pos</name> <operator pos:start="15:39" pos:end="15:39">-</operator> <name pos:start="15:41" pos:end="15:51">SEEK_WINDOW</name></expr></argument>, <argument pos:start="15:54" pos:end="15:54"><expr pos:start="15:54" pos:end="15:54"><literal type="number" pos:start="15:54" pos:end="15:54">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:58" pos:end="15:65"><expr pos:start="15:58" pos:end="15:65"><name pos:start="15:58" pos:end="15:65">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:49"><expr pos:start="17:5" pos:end="17:48"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:48"><name pos:start="17:11" pos:end="17:19">avio_seek</name><argument_list pos:start="17:20" pos:end="17:48">(<argument pos:start="17:21" pos:end="17:25"><expr pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:25">pb</name></name></expr></argument>, <argument pos:start="17:28" pos:end="17:37"><expr pos:start="17:28" pos:end="17:37"><name pos:start="17:28" pos:end="17:37">target_pos</name></expr></argument>, <argument pos:start="17:40" pos:end="17:47"><expr pos:start="17:40" pos:end="17:47"><name pos:start="17:40" pos:end="17:47">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="26:0"><if pos:start="19:5" pos:end="26:0">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="26:0"><block_content pos:start="21:9" pos:end="26:0">

        <return pos:start="21:9" pos:end="26:0">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



<cpp:define pos:start="25:1" pos:end="25:19">#<cpp:directive pos:start="25:2" pos:end="25:7">define</cpp:directive> <cpp:macro pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:17">MIN_VALID</name></cpp:macro> <cpp:value pos:start="25:19" pos:end="25:19">3</cpp:value></cpp:define>

    <expr_stmt pos:start="27:5" pos:end="27:26"><expr pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:12">best_pos</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:25">target_pos</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:14">best_score</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:20">999</literal></expr>;</expr_stmt>

    <for pos:start="31:5" pos:end="79:5">for<control pos:start="31:8" pos:end="31:32">(<init pos:start="31:9" pos:end="31:12"><expr pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:9">i</name><operator pos:start="31:10" pos:end="31:10">=</operator><literal type="number" pos:start="31:11" pos:end="31:11">0</literal></expr>;</init> <condition pos:start="31:14" pos:end="31:27"><expr pos:start="31:14" pos:end="31:26"><name pos:start="31:14" pos:end="31:14">i</name><operator pos:start="31:15" pos:end="31:15">&lt;</operator><name pos:start="31:16" pos:end="31:26">SEEK_WINDOW</name></expr>;</condition> <incr pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:29">i</name><operator pos:start="31:30" pos:end="31:31">++</operator></expr></incr>)</control> <block pos:start="31:34" pos:end="79:5">{<block_content pos:start="33:9" pos:end="77:9">

        <decl_stmt pos:start="33:9" pos:end="33:70"><decl pos:start="33:9" pos:end="33:69"><type pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:15">int64_t</name></type> <name pos:start="33:17" pos:end="33:19">pos</name> <init pos:start="33:21" pos:end="33:69">= <expr pos:start="33:23" pos:end="33:69"><name pos:start="33:23" pos:end="33:32">target_pos</name> <operator pos:start="33:34" pos:end="33:34">+</operator> <operator pos:start="33:36" pos:end="33:36">(</operator><ternary pos:start="33:37" pos:end="33:68"><condition pos:start="33:37" pos:end="33:45"><expr pos:start="33:37" pos:end="33:43"><name pos:start="33:37" pos:end="33:39">dir</name> <operator pos:start="33:41" pos:end="33:41">&gt;</operator> <literal type="number" pos:start="33:43" pos:end="33:43">0</literal></expr> ?</condition><then pos:start="33:47" pos:end="33:63"> <expr pos:start="33:47" pos:end="33:63"><name pos:start="33:47" pos:end="33:47">i</name> <operator pos:start="33:49" pos:end="33:49">-</operator> <name pos:start="33:51" pos:end="33:61">SEEK_WINDOW</name><operator pos:start="33:62" pos:end="33:62">/</operator><literal type="number" pos:start="33:63" pos:end="33:63">4</literal></expr> </then><else pos:start="33:65" pos:end="33:68">: <expr pos:start="33:67" pos:end="33:68"><operator pos:start="33:67" pos:end="33:67">-</operator><name pos:start="33:68" pos:end="33:68">i</name></expr></else></ternary><operator pos:start="33:69" pos:end="33:69">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:31"><decl pos:start="35:9" pos:end="35:30"><type pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:15">int64_t</name></type> <name pos:start="35:17" pos:end="35:25">candidate</name> <init pos:start="35:27" pos:end="35:30">= <expr pos:start="35:29" pos:end="35:30"><operator pos:start="35:29" pos:end="35:29">-</operator><literal type="number" pos:start="35:30" pos:end="35:30">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:24"><decl pos:start="37:9" pos:end="37:23"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:17">score</name> <init pos:start="37:19" pos:end="37:23">= <expr pos:start="37:21" pos:end="37:23"><literal type="number" pos:start="37:21" pos:end="37:23">999</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="41:9" pos:end="43:21"><if pos:start="41:9" pos:end="43:21">if <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:15">pos</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:21"><block_content pos:start="43:13" pos:end="43:21">

            <continue pos:start="43:13" pos:end="43:21">continue;</continue></block_content></block></if></if_stmt>



        <for pos:start="47:9" pos:end="65:9">for<control pos:start="47:12" pos:end="47:34">(<init pos:start="47:13" pos:end="47:16"><expr pos:start="47:13" pos:end="47:15"><name pos:start="47:13" pos:end="47:13">j</name><operator pos:start="47:14" pos:end="47:14">=</operator><literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>;</init> <condition pos:start="47:18" pos:end="47:29"><expr pos:start="47:18" pos:end="47:28"><name pos:start="47:18" pos:end="47:18">j</name><operator pos:start="47:19" pos:end="47:19">&lt;</operator><name pos:start="47:20" pos:end="47:28">MIN_VALID</name></expr>;</condition> <incr pos:start="47:31" pos:end="47:33"><expr pos:start="47:31" pos:end="47:33"><name pos:start="47:31" pos:end="47:31">j</name><operator pos:start="47:32" pos:end="47:33">++</operator></expr></incr>)</control> <block pos:start="47:36" pos:end="65:9">{<block_content pos:start="49:13" pos:end="63:23">

            <expr_stmt pos:start="49:13" pos:end="49:36"><expr pos:start="49:13" pos:end="49:35"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:35"><name pos:start="49:19" pos:end="49:23">check</name><argument_list pos:start="49:24" pos:end="49:35">(<argument pos:start="49:25" pos:end="49:29"><expr pos:start="49:25" pos:end="49:29"><name pos:start="49:25" pos:end="49:29"><name pos:start="49:25" pos:end="49:25">s</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:29">pb</name></name></expr></argument>, <argument pos:start="49:32" pos:end="49:34"><expr pos:start="49:32" pos:end="49:34"><name pos:start="49:32" pos:end="49:34">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="53:22"><if pos:start="51:13" pos:end="53:22">if<condition pos:start="51:15" pos:end="51:23">(<expr pos:start="51:16" pos:end="51:22"><name pos:start="51:16" pos:end="51:18">ret</name> <operator pos:start="51:20" pos:end="51:20">&lt;</operator> <literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:22"><block_content pos:start="53:17" pos:end="53:22">

                <break pos:start="53:17" pos:end="53:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="55:13" pos:end="61:13"><if pos:start="55:13" pos:end="61:13">if <condition pos:start="55:16" pos:end="55:74">(<expr pos:start="55:17" pos:end="55:73"><operator pos:start="55:17" pos:end="55:17">(</operator><name pos:start="55:18" pos:end="55:27">target_pos</name> <operator pos:start="55:29" pos:end="55:29">-</operator> <name pos:start="55:31" pos:end="55:33">pos</name><operator pos:start="55:34" pos:end="55:34">)</operator><operator pos:start="55:35" pos:end="55:35">*</operator><name pos:start="55:36" pos:end="55:38">dir</name> <operator pos:start="55:40" pos:end="55:41">&lt;=</operator> <literal type="number" pos:start="55:43" pos:end="55:43">0</literal> <operator pos:start="55:45" pos:end="55:46">&amp;&amp;</operator> <call pos:start="55:48" pos:end="55:65"><name pos:start="55:48" pos:end="55:50">abs</name><argument_list pos:start="55:51" pos:end="55:65">(<argument pos:start="55:52" pos:end="55:64"><expr pos:start="55:52" pos:end="55:64"><name pos:start="55:52" pos:end="55:60">MIN_VALID</name><operator pos:start="55:61" pos:end="55:61">/</operator><literal type="number" pos:start="55:62" pos:end="55:63">2</literal><operator pos:start="55:63" pos:end="55:63">-</operator><name pos:start="55:64" pos:end="55:64">j</name></expr></argument>)</argument_list></call> <operator pos:start="55:67" pos:end="55:67">&lt;</operator> <name pos:start="55:69" pos:end="55:73">score</name></expr>)</condition> <block pos:start="55:76" pos:end="61:13">{<block_content pos:start="57:17" pos:end="59:43">

                <expr_stmt pos:start="57:17" pos:end="57:32"><expr pos:start="57:17" pos:end="57:31"><name pos:start="57:17" pos:end="57:25">candidate</name> <operator pos:start="57:27" pos:end="57:27">=</operator> <name pos:start="57:29" pos:end="57:31">pos</name></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:43"><expr pos:start="59:17" pos:end="59:42"><name pos:start="59:17" pos:end="59:21">score</name> <operator pos:start="59:23" pos:end="59:23">=</operator> <call pos:start="59:25" pos:end="59:42"><name pos:start="59:25" pos:end="59:27">abs</name><argument_list pos:start="59:28" pos:end="59:42">(<argument pos:start="59:29" pos:end="59:41"><expr pos:start="59:29" pos:end="59:41"><name pos:start="59:29" pos:end="59:37">MIN_VALID</name><operator pos:start="59:38" pos:end="59:38">/</operator><literal type="number" pos:start="59:39" pos:end="59:40">2</literal><operator pos:start="59:40" pos:end="59:40">-</operator><name pos:start="59:41" pos:end="59:41">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:23"><expr pos:start="63:13" pos:end="63:22"><name pos:start="63:13" pos:end="63:15">pos</name> <operator pos:start="63:17" pos:end="63:18">+=</operator> <name pos:start="63:20" pos:end="63:22">ret</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="67:9" pos:end="77:9"><if pos:start="67:9" pos:end="77:9">if <condition pos:start="67:12" pos:end="67:49">(<expr pos:start="67:13" pos:end="67:48"><name pos:start="67:13" pos:end="67:22">best_score</name> <operator pos:start="67:24" pos:end="67:24">&gt;</operator> <name pos:start="67:26" pos:end="67:30">score</name> <operator pos:start="67:32" pos:end="67:33">&amp;&amp;</operator> <name pos:start="67:35" pos:end="67:35">j</name> <operator pos:start="67:37" pos:end="67:38">==</operator> <name pos:start="67:40" pos:end="67:48">MIN_VALID</name></expr>)</condition> <block pos:start="67:51" pos:end="77:9">{<block_content pos:start="69:13" pos:end="75:22">

            <expr_stmt pos:start="69:13" pos:end="69:33"><expr pos:start="69:13" pos:end="69:32"><name pos:start="69:13" pos:end="69:20">best_pos</name> <operator pos:start="69:22" pos:end="69:22">=</operator> <name pos:start="69:24" pos:end="69:32">candidate</name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:31"><expr pos:start="71:13" pos:end="71:30"><name pos:start="71:13" pos:end="71:22">best_score</name> <operator pos:start="71:24" pos:end="71:24">=</operator> <name pos:start="71:26" pos:end="71:30">score</name></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="75:22"><if pos:start="73:13" pos:end="75:22">if<condition pos:start="73:15" pos:end="73:26">(<expr pos:start="73:16" pos:end="73:25"><name pos:start="73:16" pos:end="73:20">score</name> <operator pos:start="73:22" pos:end="73:23">==</operator> <literal type="number" pos:start="73:25" pos:end="73:25">0</literal></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:22"><block_content pos:start="75:17" pos:end="75:22">

                <break pos:start="75:17" pos:end="75:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="83:5" pos:end="83:48">return <expr pos:start="83:12" pos:end="83:47"><call pos:start="83:12" pos:end="83:47"><name pos:start="83:12" pos:end="83:20">avio_seek</name><argument_list pos:start="83:21" pos:end="83:47">(<argument pos:start="83:22" pos:end="83:26"><expr pos:start="83:22" pos:end="83:26"><name pos:start="83:22" pos:end="83:26"><name pos:start="83:22" pos:end="83:22">s</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:26">pb</name></name></expr></argument>, <argument pos:start="83:29" pos:end="83:36"><expr pos:start="83:29" pos:end="83:36"><name pos:start="83:29" pos:end="83:36">best_pos</name></expr></argument>, <argument pos:start="83:39" pos:end="83:46"><expr pos:start="83:39" pos:end="83:46"><name pos:start="83:39" pos:end="83:46">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
