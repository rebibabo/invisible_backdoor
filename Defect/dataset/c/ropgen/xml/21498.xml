<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21498.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">dvbsub_parse_page_segment</name><parameter_list pos:start="1:38" pos:end="3:73">(<parameter pos:start="1:39" pos:end="1:59"><decl pos:start="1:39" pos:end="1:59"><type pos:start="1:39" pos:end="1:59"><name pos:start="1:39" pos:end="1:52">AVCodecContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">avctx</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:58"><decl pos:start="3:41" pos:end="3:58"><type pos:start="3:41" pos:end="3:58"><specifier pos:start="3:41" pos:end="3:45">const</specifier> <name pos:start="3:47" pos:end="3:53">uint8_t</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:58">buf</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:72"><decl pos:start="3:61" pos:end="3:72"><type pos:start="3:61" pos:end="3:72"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:72">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="133:1">{<block_content pos:start="7:5" pos:end="129:5">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">DVBSubContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">ctx</name> <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23">DVBSubRegionDisplay</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:32">display</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:23">DVBSubRegionDisplay</name> <modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:41">tmp_display_list</name></decl>, <decl pos:start="11:44" pos:end="11:52"><type ref="prev" pos:start="11:5" pos:end="11:25"><modifier pos:start="11:44" pos:end="11:44">*</modifier><modifier pos:start="11:45" pos:end="11:45">*</modifier></type><name pos:start="11:46" pos:end="11:52">tmp_ptr</name></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:43"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:26">buf_end</name> <init pos:start="15:28" pos:end="15:43">= <expr pos:start="15:30" pos:end="15:43"><name pos:start="15:30" pos:end="15:32">buf</name> <operator pos:start="15:34" pos:end="15:34">+</operator> <name pos:start="15:36" pos:end="15:43">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">region_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:18">page_state</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:15"><if pos:start="23:5" pos:end="25:15">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:16">buf_size</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <literal type="number" pos:start="23:20" pos:end="23:20">1</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:15"><block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:7">ctx</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:17">time_out</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <operator pos:start="29:21" pos:end="29:21">*</operator><name pos:start="29:22" pos:end="29:24">buf</name><operator pos:start="29:25" pos:end="29:26">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:14">page_state</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <operator pos:start="31:18" pos:end="31:18">(</operator><operator pos:start="31:19" pos:end="31:19">(</operator><operator pos:start="31:20" pos:end="31:20">*</operator><name pos:start="31:21" pos:end="31:23">buf</name><operator pos:start="31:24" pos:end="31:25">++</operator><operator pos:start="31:26" pos:end="31:26">)</operator> <operator pos:start="31:28" pos:end="31:29">&gt;&gt;</operator> <literal type="number" pos:start="31:31" pos:end="31:31">2</literal><operator pos:start="31:32" pos:end="31:32">)</operator> <operator pos:start="31:34" pos:end="31:34">&amp;</operator> <literal type="number" pos:start="31:36" pos:end="31:36">3</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:79"><expr pos:start="35:5" pos:end="35:78"><call pos:start="35:5" pos:end="35:78"><name pos:start="35:5" pos:end="35:11">av_dlog</name><argument_list pos:start="35:12" pos:end="35:78">(<argument pos:start="35:13" pos:end="35:17"><expr pos:start="35:13" pos:end="35:17"><name pos:start="35:13" pos:end="35:17">avctx</name></expr></argument>, <argument pos:start="35:20" pos:end="35:50"><expr pos:start="35:20" pos:end="35:50"><literal type="string" pos:start="35:20" pos:end="35:50">"Page time out %ds, state %d\n"</literal></expr></argument>, <argument pos:start="35:53" pos:end="35:65"><expr pos:start="35:53" pos:end="35:65"><name pos:start="35:53" pos:end="35:65"><name pos:start="35:53" pos:end="35:55">ctx</name><operator pos:start="35:56" pos:end="35:57">-&gt;</operator><name pos:start="35:58" pos:end="35:65">time_out</name></name></expr></argument>, <argument pos:start="35:68" pos:end="35:77"><expr pos:start="35:68" pos:end="35:77"><name pos:start="35:68" pos:end="35:77">page_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:24">(<expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:18">page_state</name> <operator pos:start="39:20" pos:end="39:21">==</operator> <literal type="number" pos:start="39:23" pos:end="39:23">2</literal></expr>)</condition> <block pos:start="39:26" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:26">

        <expr_stmt pos:start="41:9" pos:end="41:26"><expr pos:start="41:9" pos:end="41:25"><call pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:20">delete_state</name><argument_list pos:start="41:21" pos:end="41:25">(<argument pos:start="41:22" pos:end="41:24"><expr pos:start="41:22" pos:end="41:24"><name pos:start="41:22" pos:end="41:24">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:41"><expr pos:start="47:5" pos:end="47:40"><name pos:start="47:5" pos:end="47:20">tmp_display_list</name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:40"><name pos:start="47:24" pos:end="47:26">ctx</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:40">display_list</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:7">ctx</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:21">display_list</name></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <name pos:start="49:25" pos:end="49:28">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:31"><expr pos:start="51:5" pos:end="51:30"><name pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:7">ctx</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:26">display_list_size</name></name> <operator pos:start="51:28" pos:end="51:28">=</operator> <literal type="number" pos:start="51:30" pos:end="51:30">0</literal></expr>;</expr_stmt>



    <while pos:start="55:5" pos:end="113:5">while <condition pos:start="55:11" pos:end="55:29">(<expr pos:start="55:12" pos:end="55:28"><name pos:start="55:12" pos:end="55:14">buf</name> <operator pos:start="55:16" pos:end="55:16">+</operator> <literal type="number" pos:start="55:18" pos:end="55:18">5</literal> <operator pos:start="55:20" pos:end="55:20">&lt;</operator> <name pos:start="55:22" pos:end="55:28">buf_end</name></expr>)</condition> <block pos:start="55:31" pos:end="113:5">{<block_content pos:start="57:9" pos:end="111:90">

        <expr_stmt pos:start="57:9" pos:end="57:27"><expr pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:17">region_id</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <operator pos:start="57:21" pos:end="57:21">*</operator><name pos:start="57:22" pos:end="57:24">buf</name><operator pos:start="57:25" pos:end="57:26">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:17"><expr pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:11">buf</name> <operator pos:start="59:13" pos:end="59:14">+=</operator> <literal type="number" pos:start="59:16" pos:end="59:16">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:15">display</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:34">tmp_display_list</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:36"><expr pos:start="65:9" pos:end="65:35"><name pos:start="65:9" pos:end="65:15">tmp_ptr</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <operator pos:start="65:19" pos:end="65:19">&amp;</operator><name pos:start="65:20" pos:end="65:35">tmp_display_list</name></expr>;</expr_stmt>



        <while pos:start="69:9" pos:end="75:9">while <condition pos:start="69:15" pos:end="69:58">(<expr pos:start="69:16" pos:end="69:57"><name pos:start="69:16" pos:end="69:22">display</name> <operator pos:start="69:24" pos:end="69:25">&amp;&amp;</operator> <name pos:start="69:27" pos:end="69:44"><name pos:start="69:27" pos:end="69:33">display</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:44">region_id</name></name> <operator pos:start="69:46" pos:end="69:47">!=</operator> <name pos:start="69:49" pos:end="69:57">region_id</name></expr>)</condition> <block pos:start="69:60" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:36">

            <expr_stmt pos:start="71:13" pos:end="71:37"><expr pos:start="71:13" pos:end="71:36"><name pos:start="71:13" pos:end="71:19">tmp_ptr</name> <operator pos:start="71:21" pos:end="71:21">=</operator> <operator pos:start="71:23" pos:end="71:23">&amp;</operator><name pos:start="71:24" pos:end="71:36"><name pos:start="71:24" pos:end="71:30">display</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:36">next</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:36"><expr pos:start="73:13" pos:end="73:35"><name pos:start="73:13" pos:end="73:19">display</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <name pos:start="73:23" pos:end="73:35"><name pos:start="73:23" pos:end="73:29">display</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:35">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></while>



        <if_stmt pos:start="79:9" pos:end="81:62"><if pos:start="79:9" pos:end="81:62">if <condition pos:start="79:12" pos:end="79:21">(<expr pos:start="79:13" pos:end="79:20"><operator pos:start="79:13" pos:end="79:13">!</operator><name pos:start="79:14" pos:end="79:20">display</name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:62"><block_content pos:start="81:13" pos:end="81:62">

            <expr_stmt pos:start="81:13" pos:end="81:62"><expr pos:start="81:13" pos:end="81:61"><name pos:start="81:13" pos:end="81:19">display</name> <operator pos:start="81:21" pos:end="81:21">=</operator> <call pos:start="81:23" pos:end="81:61"><name pos:start="81:23" pos:end="81:32">av_mallocz</name><argument_list pos:start="81:33" pos:end="81:61">(<argument pos:start="81:34" pos:end="81:60"><expr pos:start="81:34" pos:end="81:60"><sizeof pos:start="81:34" pos:end="81:60">sizeof<argument_list pos:start="81:40" pos:end="81:60">(<argument pos:start="81:41" pos:end="81:59"><expr pos:start="81:41" pos:end="81:59"><name pos:start="81:41" pos:end="81:59">DVBSubRegionDisplay</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:39"><expr pos:start="85:9" pos:end="85:38"><name pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:15">display</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:26">region_id</name></name> <operator pos:start="85:28" pos:end="85:28">=</operator> <name pos:start="85:30" pos:end="85:38">region_id</name></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:38"><expr pos:start="89:9" pos:end="89:37"><name pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:15">display</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:22">x_pos</name></name> <operator pos:start="89:24" pos:end="89:24">=</operator> <call pos:start="89:26" pos:end="89:37"><name pos:start="89:26" pos:end="89:32">AV_RB16</name><argument_list pos:start="89:33" pos:end="89:37">(<argument pos:start="89:34" pos:end="89:36"><expr pos:start="89:34" pos:end="89:36"><name pos:start="89:34" pos:end="89:36">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:17"><expr pos:start="91:9" pos:end="91:16"><name pos:start="91:9" pos:end="91:11">buf</name> <operator pos:start="91:13" pos:end="91:14">+=</operator> <literal type="number" pos:start="91:16" pos:end="91:16">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:38"><expr pos:start="93:9" pos:end="93:37"><name pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:15">display</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:22">y_pos</name></name> <operator pos:start="93:24" pos:end="93:24">=</operator> <call pos:start="93:26" pos:end="93:37"><name pos:start="93:26" pos:end="93:32">AV_RB16</name><argument_list pos:start="93:33" pos:end="93:37">(<argument pos:start="93:34" pos:end="93:36"><expr pos:start="93:34" pos:end="93:36"><name pos:start="93:34" pos:end="93:36">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:17"><expr pos:start="95:9" pos:end="95:16"><name pos:start="95:9" pos:end="95:11">buf</name> <operator pos:start="95:13" pos:end="95:14">+=</operator> <literal type="number" pos:start="95:16" pos:end="95:16">2</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:33"><expr pos:start="99:9" pos:end="99:32"><operator pos:start="99:9" pos:end="99:9">*</operator><name pos:start="99:10" pos:end="99:16">tmp_ptr</name> <operator pos:start="99:18" pos:end="99:18">=</operator> <name pos:start="99:20" pos:end="99:32"><name pos:start="99:20" pos:end="99:26">display</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:32">next</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:42"><expr pos:start="103:9" pos:end="103:41"><name pos:start="103:9" pos:end="103:21"><name pos:start="103:9" pos:end="103:15">display</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:21">next</name></name> <operator pos:start="103:23" pos:end="103:23">=</operator> <name pos:start="103:25" pos:end="103:41"><name pos:start="103:25" pos:end="103:27">ctx</name><operator pos:start="103:28" pos:end="103:29">-&gt;</operator><name pos:start="103:30" pos:end="103:41">display_list</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:36"><expr pos:start="105:9" pos:end="105:35"><name pos:start="105:9" pos:end="105:25"><name pos:start="105:9" pos:end="105:11">ctx</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:25">display_list</name></name> <operator pos:start="105:27" pos:end="105:27">=</operator> <name pos:start="105:29" pos:end="105:35">display</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:33"><expr pos:start="107:9" pos:end="107:32"><name pos:start="107:9" pos:end="107:30"><name pos:start="107:9" pos:end="107:11">ctx</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:30">display_list_size</name></name><operator pos:start="107:31" pos:end="107:32">++</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:90"><expr pos:start="111:9" pos:end="111:89"><call pos:start="111:9" pos:end="111:89"><name pos:start="111:9" pos:end="111:15">av_dlog</name><argument_list pos:start="111:16" pos:end="111:89">(<argument pos:start="111:17" pos:end="111:21"><expr pos:start="111:17" pos:end="111:21"><name pos:start="111:17" pos:end="111:21">avctx</name></expr></argument>, <argument pos:start="111:24" pos:end="111:45"><expr pos:start="111:24" pos:end="111:45"><literal type="string" pos:start="111:24" pos:end="111:45">"Region %d, (%d,%d)\n"</literal></expr></argument>, <argument pos:start="111:48" pos:end="111:56"><expr pos:start="111:48" pos:end="111:56"><name pos:start="111:48" pos:end="111:56">region_id</name></expr></argument>, <argument pos:start="111:59" pos:end="111:72"><expr pos:start="111:59" pos:end="111:72"><name pos:start="111:59" pos:end="111:72"><name pos:start="111:59" pos:end="111:65">display</name><operator pos:start="111:66" pos:end="111:67">-&gt;</operator><name pos:start="111:68" pos:end="111:72">x_pos</name></name></expr></argument>, <argument pos:start="111:75" pos:end="111:88"><expr pos:start="111:75" pos:end="111:88"><name pos:start="111:75" pos:end="111:88"><name pos:start="111:75" pos:end="111:81">display</name><operator pos:start="111:82" pos:end="111:83">-&gt;</operator><name pos:start="111:84" pos:end="111:88">y_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <while pos:start="117:5" pos:end="129:5">while <condition pos:start="117:11" pos:end="117:28">(<expr pos:start="117:12" pos:end="117:27"><name pos:start="117:12" pos:end="117:27">tmp_display_list</name></expr>)</condition> <block pos:start="117:30" pos:end="129:5">{<block_content pos:start="119:9" pos:end="127:25">

        <expr_stmt pos:start="119:9" pos:end="119:35"><expr pos:start="119:9" pos:end="119:34"><name pos:start="119:9" pos:end="119:15">display</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <name pos:start="119:19" pos:end="119:34">tmp_display_list</name></expr>;</expr_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:41"><expr pos:start="123:9" pos:end="123:40"><name pos:start="123:9" pos:end="123:24">tmp_display_list</name> <operator pos:start="123:26" pos:end="123:26">=</operator> <name pos:start="123:28" pos:end="123:40"><name pos:start="123:28" pos:end="123:34">display</name><operator pos:start="123:35" pos:end="123:36">-&gt;</operator><name pos:start="123:37" pos:end="123:40">next</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:25"><expr pos:start="127:9" pos:end="127:24"><call pos:start="127:9" pos:end="127:24"><name pos:start="127:9" pos:end="127:15">av_free</name><argument_list pos:start="127:16" pos:end="127:24">(<argument pos:start="127:17" pos:end="127:23"><expr pos:start="127:17" pos:end="127:23"><name pos:start="127:17" pos:end="127:23">display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



</block_content>}</block></function>
</unit>
