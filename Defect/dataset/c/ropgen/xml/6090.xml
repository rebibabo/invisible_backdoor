<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6090.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">virtio_serial_save_device</name><parameter_list pos:start="1:38" pos:end="1:70">(<parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><name pos:start="1:39" pos:end="1:50">VirtIODevice</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">vdev</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:69"><decl pos:start="1:59" pos:end="1:69"><type pos:start="1:59" pos:end="1:69"><name pos:start="1:59" pos:end="1:66">QEMUFile</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:69">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:5">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">VirtIOSerial</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:41">= <expr pos:start="5:23" pos:end="5:41"><call pos:start="5:23" pos:end="5:41"><name pos:start="5:23" pos:end="5:35">VIRTIO_SERIAL</name><argument_list pos:start="5:36" pos:end="5:41">(<argument pos:start="5:37" pos:end="5:40"><expr pos:start="5:37" pos:end="5:40"><name pos:start="5:37" pos:end="5:40">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">VirtIOSerialPort</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:26">port</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:28">nr_active_ports</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:18">i</name></decl>, <decl pos:start="11:21" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:21" pos:end="11:32">max_nr_ports</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:39"><type pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:32">virtio_console_config</name></name></type> <name pos:start="13:34" pos:end="13:39">config</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:71">/* The config space (ignored on the far end in current versions) */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><call pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:14">get_config</name><argument_list pos:start="19:15" pos:end="19:40">(<argument pos:start="19:16" pos:end="19:19"><expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:19">vdev</name></expr></argument>, <argument pos:start="19:22" pos:end="19:39"><expr pos:start="19:22" pos:end="19:39"><operator pos:start="19:22" pos:end="19:22">(</operator><name pos:start="19:23" pos:end="19:29">uint8_t</name> <operator pos:start="19:31" pos:end="19:31">*</operator><operator pos:start="19:32" pos:end="19:32">)</operator><operator pos:start="19:33" pos:end="19:33">&amp;</operator><name pos:start="19:34" pos:end="19:39">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><call pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:18">qemu_put_be16s</name><argument_list pos:start="21:19" pos:end="21:35">(<argument pos:start="21:20" pos:end="21:20"><expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">f</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:34"><name pos:start="21:24" pos:end="21:29">config</name><operator pos:start="21:30" pos:end="21:30">.</operator><name pos:start="21:31" pos:end="21:34">cols</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:18">qemu_put_be16s</name><argument_list pos:start="23:19" pos:end="23:35">(<argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">f</name></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><operator pos:start="23:23" pos:end="23:23">&amp;</operator><name pos:start="23:24" pos:end="23:34"><name pos:start="23:24" pos:end="23:29">config</name><operator pos:start="23:30" pos:end="23:30">.</operator><name pos:start="23:31" pos:end="23:34">rows</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:44"><expr pos:start="25:5" pos:end="25:43"><call pos:start="25:5" pos:end="25:43"><name pos:start="25:5" pos:end="25:18">qemu_put_be32s</name><argument_list pos:start="25:19" pos:end="25:43">(<argument pos:start="25:20" pos:end="25:20"><expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">f</name></expr></argument>, <argument pos:start="25:23" pos:end="25:42"><expr pos:start="25:23" pos:end="25:42"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:42"><name pos:start="25:24" pos:end="25:29">config</name><operator pos:start="25:30" pos:end="25:30">.</operator><name pos:start="25:31" pos:end="25:42">max_nr_ports</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:23">/* The ports map */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:50"><expr pos:start="31:5" pos:end="31:49"><name pos:start="31:5" pos:end="31:16">max_nr_ports</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:49"><name pos:start="31:20" pos:end="31:20">s</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:28">serial</name><operator pos:start="31:29" pos:end="31:29">.</operator><name pos:start="31:30" pos:end="31:49">max_virtserial_ports</name></name></expr>;</expr_stmt>

    <for pos:start="33:5" pos:end="37:5">for <control pos:start="33:9" pos:end="33:50">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:45"><expr pos:start="33:17" pos:end="33:44"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <operator pos:start="33:21" pos:end="33:21">(</operator><name pos:start="33:22" pos:end="33:33">max_nr_ports</name> <operator pos:start="33:35" pos:end="33:35">+</operator> <literal type="number" pos:start="33:37" pos:end="33:38">31</literal><operator pos:start="33:39" pos:end="33:39">)</operator> <operator pos:start="33:41" pos:end="33:41">/</operator> <literal type="number" pos:start="33:43" pos:end="33:44">32</literal></expr>;</condition> <incr pos:start="33:47" pos:end="33:49"><expr pos:start="33:47" pos:end="33:49"><name pos:start="33:47" pos:end="33:47">i</name><operator pos:start="33:48" pos:end="33:49">++</operator></expr></incr>)</control> <block pos:start="33:52" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:44">

        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><call pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:22">qemu_put_be32s</name><argument_list pos:start="35:23" pos:end="35:43">(<argument pos:start="35:24" pos:end="35:24"><expr pos:start="35:24" pos:end="35:24"><name pos:start="35:24" pos:end="35:24">f</name></expr></argument>, <argument pos:start="35:27" pos:end="35:42"><expr pos:start="35:27" pos:end="35:42"><operator pos:start="35:27" pos:end="35:27">&amp;</operator><name pos:start="35:28" pos:end="35:42"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:39">ports_map</name><index pos:start="35:40" pos:end="35:42">[<expr pos:start="35:41" pos:end="35:41"><name pos:start="35:41" pos:end="35:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="41:5" pos:end="41:15">/* Ports */</comment>



    <expr_stmt pos:start="45:5" pos:end="45:24"><expr pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:19">nr_active_ports</name> <operator pos:start="45:21" pos:end="45:21">=</operator> <literal type="number" pos:start="45:23" pos:end="45:23">0</literal></expr>;</expr_stmt>

    <macro pos:start="47:5" pos:end="47:41"><name pos:start="47:5" pos:end="47:18">QTAILQ_FOREACH</name><argument_list pos:start="47:19" pos:end="47:41">(<argument pos:start="47:20" pos:end="47:23">port</argument>, <argument pos:start="47:26" pos:end="47:34">&amp;s-&gt;ports</argument>, <argument pos:start="47:37" pos:end="47:40">next</argument>)</argument_list></macro> <block pos:start="47:43" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:26">

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:23">nr_active_ports</name><operator pos:start="49:24" pos:end="49:25">++</operator></expr>;</expr_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="55:5" pos:end="55:40"><expr pos:start="55:5" pos:end="55:39"><call pos:start="55:5" pos:end="55:39"><name pos:start="55:5" pos:end="55:18">qemu_put_be32s</name><argument_list pos:start="55:19" pos:end="55:39">(<argument pos:start="55:20" pos:end="55:20"><expr pos:start="55:20" pos:end="55:20"><name pos:start="55:20" pos:end="55:20">f</name></expr></argument>, <argument pos:start="55:23" pos:end="55:38"><expr pos:start="55:23" pos:end="55:38"><operator pos:start="55:23" pos:end="55:23">&amp;</operator><name pos:start="55:24" pos:end="55:38">nr_active_ports</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="63:7">/*

     * Items in struct VirtIOSerialPort.

     */</comment>

    <macro pos:start="65:5" pos:end="65:41"><name pos:start="65:5" pos:end="65:18">QTAILQ_FOREACH</name><argument_list pos:start="65:19" pos:end="65:41">(<argument pos:start="65:20" pos:end="65:23">port</argument>, <argument pos:start="65:26" pos:end="65:34">&amp;s-&gt;ports</argument>, <argument pos:start="65:37" pos:end="65:40">next</argument>)</argument_list></macro> <block pos:start="65:43" pos:end="103:5">{<block_content pos:start="67:9" pos:end="101:9">

        <decl_stmt pos:start="67:9" pos:end="67:29"><decl pos:start="67:9" pos:end="67:28"><type pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:16">uint32_t</name></type> <name pos:start="67:18" pos:end="67:28">elem_popped</name></decl>;</decl_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:37"><expr pos:start="71:9" pos:end="71:36"><call pos:start="71:9" pos:end="71:36"><name pos:start="71:9" pos:end="71:22">qemu_put_be32s</name><argument_list pos:start="71:23" pos:end="71:36">(<argument pos:start="71:24" pos:end="71:24"><expr pos:start="71:24" pos:end="71:24"><name pos:start="71:24" pos:end="71:24">f</name></expr></argument>, <argument pos:start="71:27" pos:end="71:35"><expr pos:start="71:27" pos:end="71:35"><operator pos:start="71:27" pos:end="71:27">&amp;</operator><name pos:start="71:28" pos:end="71:35"><name pos:start="71:28" pos:end="71:31">port</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:35">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:48"><expr pos:start="73:9" pos:end="73:47"><call pos:start="73:9" pos:end="73:47"><name pos:start="73:9" pos:end="73:21">qemu_put_byte</name><argument_list pos:start="73:22" pos:end="73:47">(<argument pos:start="73:23" pos:end="73:23"><expr pos:start="73:23" pos:end="73:23"><name pos:start="73:23" pos:end="73:23">f</name></expr></argument>, <argument pos:start="73:26" pos:end="73:46"><expr pos:start="73:26" pos:end="73:46"><name pos:start="73:26" pos:end="73:46"><name pos:start="73:26" pos:end="73:29">port</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:46">guest_connected</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:47"><expr pos:start="75:9" pos:end="75:46"><call pos:start="75:9" pos:end="75:46"><name pos:start="75:9" pos:end="75:21">qemu_put_byte</name><argument_list pos:start="75:22" pos:end="75:46">(<argument pos:start="75:23" pos:end="75:23"><expr pos:start="75:23" pos:end="75:23"><name pos:start="75:23" pos:end="75:23">f</name></expr></argument>, <argument pos:start="75:26" pos:end="75:45"><expr pos:start="75:26" pos:end="75:45"><name pos:start="75:26" pos:end="75:45"><name pos:start="75:26" pos:end="75:29">port</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:45">host_connected</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="79:9" pos:end="79:24"><expr pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:19">elem_popped</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <literal type="number" pos:start="79:23" pos:end="79:23">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="85:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:31">(<expr pos:start="81:13" pos:end="81:30"><name pos:start="81:13" pos:end="81:30"><name pos:start="81:13" pos:end="81:16">port</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:22">elem</name><operator pos:start="81:23" pos:end="81:23">.</operator><name pos:start="81:24" pos:end="81:30">out_num</name></name></expr>)</condition> <block pos:start="81:33" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:28">

            <expr_stmt pos:start="83:13" pos:end="83:28"><expr pos:start="83:13" pos:end="83:27"><name pos:start="83:13" pos:end="83:23">elem_popped</name> <operator pos:start="83:25" pos:end="83:25">=</operator> <literal type="number" pos:start="83:27" pos:end="83:27">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:40"><expr pos:start="87:9" pos:end="87:39"><call pos:start="87:9" pos:end="87:39"><name pos:start="87:9" pos:end="87:22">qemu_put_be32s</name><argument_list pos:start="87:23" pos:end="87:39">(<argument pos:start="87:24" pos:end="87:24"><expr pos:start="87:24" pos:end="87:24"><name pos:start="87:24" pos:end="87:24">f</name></expr></argument>, <argument pos:start="87:27" pos:end="87:38"><expr pos:start="87:27" pos:end="87:38"><operator pos:start="87:27" pos:end="87:27">&amp;</operator><name pos:start="87:28" pos:end="87:38">elem_popped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="101:9"><if pos:start="89:9" pos:end="101:9">if <condition pos:start="89:12" pos:end="89:24">(<expr pos:start="89:13" pos:end="89:23"><name pos:start="89:13" pos:end="89:23">elem_popped</name></expr>)</condition> <block pos:start="89:26" pos:end="101:9">{<block_content pos:start="91:13" pos:end="99:48">

            <expr_stmt pos:start="91:13" pos:end="91:46"><expr pos:start="91:13" pos:end="91:45"><call pos:start="91:13" pos:end="91:45"><name pos:start="91:13" pos:end="91:26">qemu_put_be32s</name><argument_list pos:start="91:27" pos:end="91:45">(<argument pos:start="91:28" pos:end="91:28"><expr pos:start="91:28" pos:end="91:28"><name pos:start="91:28" pos:end="91:28">f</name></expr></argument>, <argument pos:start="91:31" pos:end="91:44"><expr pos:start="91:31" pos:end="91:44"><operator pos:start="91:31" pos:end="91:31">&amp;</operator><name pos:start="91:32" pos:end="91:44"><name pos:start="91:32" pos:end="91:35">port</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:44">iov_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:49"><expr pos:start="93:13" pos:end="93:48"><call pos:start="93:13" pos:end="93:48"><name pos:start="93:13" pos:end="93:26">qemu_put_be64s</name><argument_list pos:start="93:27" pos:end="93:48">(<argument pos:start="93:28" pos:end="93:28"><expr pos:start="93:28" pos:end="93:28"><name pos:start="93:28" pos:end="93:28">f</name></expr></argument>, <argument pos:start="93:31" pos:end="93:47"><expr pos:start="93:31" pos:end="93:47"><operator pos:start="93:31" pos:end="93:31">&amp;</operator><name pos:start="93:32" pos:end="93:47"><name pos:start="93:32" pos:end="93:35">port</name><operator pos:start="93:36" pos:end="93:37">-&gt;</operator><name pos:start="93:38" pos:end="93:47">iov_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="97:13" pos:end="99:48"><expr pos:start="97:13" pos:end="99:47"><call pos:start="97:13" pos:end="99:47"><name pos:start="97:13" pos:end="97:27">qemu_put_buffer</name><argument_list pos:start="97:28" pos:end="99:47">(<argument pos:start="97:29" pos:end="97:29"><expr pos:start="97:29" pos:end="97:29"><name pos:start="97:29" pos:end="97:29">f</name></expr></argument>, <argument pos:start="97:32" pos:end="97:59"><expr pos:start="97:32" pos:end="97:59"><operator pos:start="97:32" pos:end="97:32">(</operator><name pos:start="97:33" pos:end="97:40">unsigned</name> <name pos:start="97:42" pos:end="97:45">char</name> <operator pos:start="97:47" pos:end="97:47">*</operator><operator pos:start="97:48" pos:end="97:48">)</operator><operator pos:start="97:49" pos:end="97:49">&amp;</operator><name pos:start="97:50" pos:end="97:59"><name pos:start="97:50" pos:end="97:53">port</name><operator pos:start="97:54" pos:end="97:55">-&gt;</operator><name pos:start="97:56" pos:end="97:59">elem</name></name></expr></argument>,

                            <argument pos:start="99:29" pos:end="99:46"><expr pos:start="99:29" pos:end="99:46"><sizeof pos:start="99:29" pos:end="99:46">sizeof<argument_list pos:start="99:35" pos:end="99:46">(<argument pos:start="99:36" pos:end="99:45"><expr pos:start="99:36" pos:end="99:45"><name pos:start="99:36" pos:end="99:45"><name pos:start="99:36" pos:end="99:39">port</name><operator pos:start="99:40" pos:end="99:41">-&gt;</operator><name pos:start="99:42" pos:end="99:45">elem</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
