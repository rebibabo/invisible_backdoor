<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25267.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">genh_read_packet</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:15">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">AVCodecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">codec</name> <init pos:start="5:27" pos:end="5:48">= <expr pos:start="5:29" pos:end="5:48"><name pos:start="5:29" pos:end="5:41"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:38">streams</name><index pos:start="5:39" pos:end="5:41">[<expr pos:start="5:40" pos:end="5:40"><literal type="number" pos:start="5:40" pos:end="5:40">0</literal></expr>]</index></name><operator pos:start="5:42" pos:end="5:43">-&gt;</operator><name pos:start="5:44" pos:end="5:48">codec</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">GENHDemuxContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">c</name> <init pos:start="7:25" pos:end="7:38">= <expr pos:start="7:27" pos:end="7:38"><name pos:start="7:27" pos:end="7:38"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="45:5"><if pos:start="13:5" pos:end="41:5">if <condition pos:start="13:8" pos:end="15:28">(<expr pos:start="13:9" pos:end="15:27"><name pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:9">c</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:23">dsp_int_type</name></name> <operator pos:start="13:25" pos:end="13:26">==</operator> <literal type="number" pos:start="13:28" pos:end="13:28">1</literal> <operator pos:start="13:30" pos:end="13:31">&amp;&amp;</operator> <name pos:start="13:33" pos:end="13:47"><name pos:start="13:33" pos:end="13:37">codec</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:47">codec_id</name></name> <operator pos:start="13:49" pos:end="13:50">==</operator> <name pos:start="13:52" pos:end="13:72">AV_CODEC_ID_ADPCM_THP</name> <operator pos:start="13:74" pos:end="13:75">&amp;&amp;</operator>

        <name pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:13">codec</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:23">channels</name></name> <operator pos:start="15:25" pos:end="15:25">&gt;</operator> <literal type="number" pos:start="15:27" pos:end="15:27">1</literal></expr>)</condition> <block pos:start="15:30" pos:end="41:5">{<block_content pos:start="17:9" pos:end="39:16">

        <decl_stmt pos:start="17:9" pos:end="17:18"><decl pos:start="17:9" pos:end="17:13"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">i</name></decl>, <decl pos:start="17:16" pos:end="17:17"><type ref="prev" pos:start="17:9" pos:end="17:11"/><name pos:start="17:16" pos:end="17:17">ch</name></decl>;</decl_stmt>



        <if_stmt pos:start="21:9" pos:end="23:31"><if pos:start="21:9" pos:end="23:31">if <condition pos:start="21:12" pos:end="21:29">(<expr pos:start="21:13" pos:end="21:28"><call pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:21">avio_feof</name><argument_list pos:start="21:22" pos:end="21:28">(<argument pos:start="21:23" pos:end="21:27"><expr pos:start="21:23" pos:end="21:27"><name pos:start="21:23" pos:end="21:27"><name pos:start="21:23" pos:end="21:23">s</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:27">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:31"><block_content pos:start="23:13" pos:end="23:31">

            <return pos:start="23:13" pos:end="23:31">return <expr pos:start="23:20" pos:end="23:30"><name pos:start="23:20" pos:end="23:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><call pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:21">av_new_packet</name><argument_list pos:start="25:22" pos:end="25:47">(<argument pos:start="25:23" pos:end="25:25"><expr pos:start="25:23" pos:end="25:25"><name pos:start="25:23" pos:end="25:25">pkt</name></expr></argument>, <argument pos:start="25:28" pos:end="25:46"><expr pos:start="25:28" pos:end="25:46"><literal type="number" pos:start="25:28" pos:end="25:28">8</literal> <operator pos:start="25:30" pos:end="25:30">*</operator> <name pos:start="25:32" pos:end="25:46"><name pos:start="25:32" pos:end="25:36">codec</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:46">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="27:9" pos:end="37:9">for <control pos:start="27:13" pos:end="27:52">(<init pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:14">i</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</init> <condition pos:start="27:21" pos:end="27:47"><expr pos:start="27:21" pos:end="27:46"><name pos:start="27:21" pos:end="27:21">i</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <literal type="number" pos:start="27:25" pos:end="27:25">8</literal> <operator pos:start="27:27" pos:end="27:27">/</operator> <name pos:start="27:29" pos:end="27:46"><name pos:start="27:29" pos:end="27:29">c</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:46">interleave_size</name></name></expr>;</condition> <incr pos:start="27:49" pos:end="27:51"><expr pos:start="27:49" pos:end="27:51"><name pos:start="27:49" pos:end="27:49">i</name><operator pos:start="27:50" pos:end="27:51">++</operator></expr></incr>)</control> <block pos:start="27:54" pos:end="37:9">{<block_content pos:start="29:13" pos:end="35:13">

            <for pos:start="29:13" pos:end="35:13">for <control pos:start="29:17" pos:end="29:52">(<init pos:start="29:18" pos:end="29:24"><expr pos:start="29:18" pos:end="29:23"><name pos:start="29:18" pos:end="29:19">ch</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <literal type="number" pos:start="29:23" pos:end="29:23">0</literal></expr>;</init> <condition pos:start="29:26" pos:end="29:46"><expr pos:start="29:26" pos:end="29:45"><name pos:start="29:26" pos:end="29:27">ch</name> <operator pos:start="29:29" pos:end="29:29">&lt;</operator> <name pos:start="29:31" pos:end="29:45"><name pos:start="29:31" pos:end="29:35">codec</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:45">channels</name></name></expr>;</condition> <incr pos:start="29:48" pos:end="29:51"><expr pos:start="29:48" pos:end="29:51"><name pos:start="29:48" pos:end="29:49">ch</name><operator pos:start="29:50" pos:end="29:51">++</operator></expr></incr>)</control> <block pos:start="29:54" pos:end="35:13">{<block_content pos:start="31:17" pos:end="33:76">

                <expr_stmt pos:start="31:17" pos:end="31:76"><expr pos:start="31:17" pos:end="31:75"><name pos:start="31:17" pos:end="31:58"><name pos:start="31:17" pos:end="31:19">pkt</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:25">data</name><index pos:start="31:26" pos:end="31:58">[<expr pos:start="31:27" pos:end="31:57"><name pos:start="31:27" pos:end="31:28">ch</name> <operator pos:start="31:30" pos:end="31:30">*</operator> <literal type="number" pos:start="31:32" pos:end="31:32">8</literal> <operator pos:start="31:34" pos:end="31:34">+</operator> <name pos:start="31:36" pos:end="31:36">i</name><operator pos:start="31:37" pos:end="31:37">*</operator><name pos:start="31:38" pos:end="31:55"><name pos:start="31:38" pos:end="31:38">c</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:55">interleave_size</name></name><operator pos:start="31:56" pos:end="31:56">+</operator><literal type="number" pos:start="31:57" pos:end="31:57">0</literal></expr>]</index></name> <operator pos:start="31:60" pos:end="31:60">=</operator> <call pos:start="31:62" pos:end="31:75"><name pos:start="31:62" pos:end="31:68">avio_r8</name><argument_list pos:start="31:69" pos:end="31:75">(<argument pos:start="31:70" pos:end="31:74"><expr pos:start="31:70" pos:end="31:74"><name pos:start="31:70" pos:end="31:74"><name pos:start="31:70" pos:end="31:70">s</name><operator pos:start="31:71" pos:end="31:72">-&gt;</operator><name pos:start="31:73" pos:end="31:74">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:76"><expr pos:start="33:17" pos:end="33:75"><name pos:start="33:17" pos:end="33:58"><name pos:start="33:17" pos:end="33:19">pkt</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:25">data</name><index pos:start="33:26" pos:end="33:58">[<expr pos:start="33:27" pos:end="33:57"><name pos:start="33:27" pos:end="33:28">ch</name> <operator pos:start="33:30" pos:end="33:30">*</operator> <literal type="number" pos:start="33:32" pos:end="33:32">8</literal> <operator pos:start="33:34" pos:end="33:34">+</operator> <name pos:start="33:36" pos:end="33:36">i</name><operator pos:start="33:37" pos:end="33:37">*</operator><name pos:start="33:38" pos:end="33:55"><name pos:start="33:38" pos:end="33:38">c</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:55">interleave_size</name></name><operator pos:start="33:56" pos:end="33:56">+</operator><literal type="number" pos:start="33:57" pos:end="33:57">1</literal></expr>]</index></name> <operator pos:start="33:60" pos:end="33:60">=</operator> <call pos:start="33:62" pos:end="33:75"><name pos:start="33:62" pos:end="33:68">avio_r8</name><argument_list pos:start="33:69" pos:end="33:75">(<argument pos:start="33:70" pos:end="33:74"><expr pos:start="33:70" pos:end="33:74"><name pos:start="33:70" pos:end="33:74"><name pos:start="33:70" pos:end="33:70">s</name><operator pos:start="33:71" pos:end="33:72">-&gt;</operator><name pos:start="33:73" pos:end="33:74">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="39:9" pos:end="39:16"><expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="45:5">else <block pos:start="41:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:106">

        <expr_stmt pos:start="43:9" pos:end="43:106"><expr pos:start="43:9" pos:end="43:105"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:105"><name pos:start="43:15" pos:end="43:27">av_get_packet</name><argument_list pos:start="43:28" pos:end="43:105">(<argument pos:start="43:29" pos:end="43:33"><expr pos:start="43:29" pos:end="43:33"><name pos:start="43:29" pos:end="43:33"><name pos:start="43:29" pos:end="43:29">s</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:33">pb</name></name></expr></argument>, <argument pos:start="43:36" pos:end="43:38"><expr pos:start="43:36" pos:end="43:38"><name pos:start="43:36" pos:end="43:38">pkt</name></expr></argument>, <argument pos:start="43:41" pos:end="43:104"><expr pos:start="43:41" pos:end="43:104"><ternary pos:start="43:41" pos:end="43:104"><condition pos:start="43:41" pos:end="43:60"><expr pos:start="43:41" pos:end="43:58"><name pos:start="43:41" pos:end="43:58"><name pos:start="43:41" pos:end="43:45">codec</name><operator pos:start="43:46" pos:end="43:47">-&gt;</operator><name pos:start="43:48" pos:end="43:58">block_align</name></name></expr> ?</condition><then pos:start="43:62" pos:end="43:79"> <expr pos:start="43:62" pos:end="43:79"><name pos:start="43:62" pos:end="43:79"><name pos:start="43:62" pos:end="43:66">codec</name><operator pos:start="43:67" pos:end="43:68">-&gt;</operator><name pos:start="43:69" pos:end="43:79">block_align</name></name></expr> </then><else pos:start="43:81" pos:end="43:104">: <expr pos:start="43:83" pos:end="43:104"><literal type="number" pos:start="43:83" pos:end="43:86">1024</literal> <operator pos:start="43:88" pos:end="43:88">*</operator> <name pos:start="43:90" pos:end="43:104"><name pos:start="43:90" pos:end="43:94">codec</name><operator pos:start="43:95" pos:end="43:96">-&gt;</operator><name pos:start="43:97" pos:end="43:104">channels</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:26"><expr pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:7">pkt</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:21">stream_index</name></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="number" pos:start="49:25" pos:end="49:25">0</literal></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:15">return <expr pos:start="51:12" pos:end="51:14"><name pos:start="51:12" pos:end="51:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
