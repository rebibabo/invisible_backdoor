<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5311.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:23">mcdc</name><parameter_list pos:start="1:24" pos:end="1:102">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:32">uint16_t</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">dst</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:47">uint16_t</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">src</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:63"><decl pos:start="1:55" pos:end="1:63"><type pos:start="1:55" pos:end="1:63"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:63">log2w</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:70"><decl pos:start="1:66" pos:end="1:70"><type pos:start="1:66" pos:end="1:70"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:70">h</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:82"><decl pos:start="1:73" pos:end="1:82"><type pos:start="1:73" pos:end="1:82"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:82">stride</name></decl></parameter>, <parameter pos:start="1:85" pos:end="1:93"><decl pos:start="1:85" pos:end="1:93"><type pos:start="1:85" pos:end="1:93"><name pos:start="1:85" pos:end="1:87">int</name></type> <name pos:start="1:89" pos:end="1:93">scale</name></decl></parameter>, <parameter pos:start="1:96" pos:end="1:101"><decl pos:start="1:96" pos:end="1:101"><type pos:start="1:96" pos:end="1:101"><name pos:start="1:96" pos:end="1:98">int</name></type> <name pos:start="1:100" pos:end="1:101">dc</name></decl></parameter>)</parameter_list><block pos:start="1:103" pos:end="79:1">{<block_content pos:start="3:4" pos:end="77:5">

   <decl_stmt pos:start="3:4" pos:end="3:9"><decl pos:start="3:4" pos:end="3:8"><type pos:start="3:4" pos:end="3:6"><name pos:start="3:4" pos:end="3:6">int</name></type> <name pos:start="3:8" pos:end="3:8">i</name></decl>;</decl_stmt>

   <expr_stmt pos:start="5:4" pos:end="5:16"><expr pos:start="5:4" pos:end="5:15"><name pos:start="5:4" pos:end="5:5">dc</name><operator pos:start="5:6" pos:end="5:7">*=</operator> <literal type="number" pos:start="5:9" pos:end="5:15">0x10001</literal></expr>;</expr_stmt>



   <switch pos:start="9:4" pos:end="77:5">switch<condition pos:start="9:10" pos:end="9:16">(<expr pos:start="9:11" pos:end="9:15"><name pos:start="9:11" pos:end="9:15">log2w</name></expr>)</condition><block pos:start="9:17" pos:end="77:5">{<block_content pos:start="11:4" pos:end="75:23">

   <case pos:start="11:4" pos:end="11:10">case <expr pos:start="11:9" pos:end="11:9"><literal type="number" pos:start="11:9" pos:end="11:9">0</literal></expr>:</case>

        <for pos:start="13:9" pos:end="21:9">for<control pos:start="13:12" pos:end="13:26">(<init pos:start="13:13" pos:end="13:16"><expr pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:13">i</name><operator pos:start="13:14" pos:end="13:14">=</operator><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>;</init> <condition pos:start="13:18" pos:end="13:21"><expr pos:start="13:18" pos:end="13:20"><name pos:start="13:18" pos:end="13:18">i</name><operator pos:start="13:19" pos:end="13:19">&lt;</operator><name pos:start="13:20" pos:end="13:20">h</name></expr>;</condition> <incr pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><name pos:start="13:23" pos:end="13:23">i</name><operator pos:start="13:24" pos:end="13:25">++</operator></expr></incr>)</control><block pos:start="13:27" pos:end="21:9">{<block_content pos:start="15:13" pos:end="19:26">

            <expr_stmt pos:start="15:13" pos:end="15:39"><expr pos:start="15:13" pos:end="15:38"><name pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:15">dst</name><index pos:start="15:16" pos:end="15:18">[<expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr>]</index></name> <operator pos:start="15:20" pos:end="15:20">=</operator> <name pos:start="15:22" pos:end="15:26">scale</name><operator pos:start="15:27" pos:end="15:27">*</operator><name pos:start="15:28" pos:end="15:33"><name pos:start="15:28" pos:end="15:30">src</name><index pos:start="15:31" pos:end="15:33">[<expr pos:start="15:32" pos:end="15:32"><literal type="number" pos:start="15:32" pos:end="15:32">0</literal></expr>]</index></name> <operator pos:start="15:35" pos:end="15:35">+</operator> <name pos:start="15:37" pos:end="15:38">dc</name></expr>;</expr_stmt>

            <if_stmt pos:start="17:13" pos:end="17:36"><if pos:start="17:13" pos:end="17:36">if<condition pos:start="17:15" pos:end="17:21">(<expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:20">scale</name></expr>)</condition><block type="pseudo" pos:start="17:23" pos:end="17:36"><block_content pos:start="17:23" pos:end="17:36"> <expr_stmt pos:start="17:23" pos:end="17:36"><expr pos:start="17:23" pos:end="17:35"><name pos:start="17:23" pos:end="17:25">src</name> <operator pos:start="17:27" pos:end="17:28">+=</operator> <name pos:start="17:30" pos:end="17:35">stride</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:26"><expr pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:15">dst</name> <operator pos:start="19:17" pos:end="19:18">+=</operator> <name pos:start="19:20" pos:end="19:25">stride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">1</literal></expr>:</case>

        <for pos:start="27:9" pos:end="35:9">for<control pos:start="27:12" pos:end="27:26">(<init pos:start="27:13" pos:end="27:16"><expr pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:13">i</name><operator pos:start="27:14" pos:end="27:14">=</operator><literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>;</init> <condition pos:start="27:18" pos:end="27:21"><expr pos:start="27:18" pos:end="27:20"><name pos:start="27:18" pos:end="27:18">i</name><operator pos:start="27:19" pos:end="27:19">&lt;</operator><name pos:start="27:20" pos:end="27:20">h</name></expr>;</condition> <incr pos:start="27:23" pos:end="27:25"><expr pos:start="27:23" pos:end="27:25"><name pos:start="27:23" pos:end="27:23">i</name><operator pos:start="27:24" pos:end="27:25">++</operator></expr></incr>)</control><block pos:start="27:27" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:26">

            <expr_stmt pos:start="29:13" pos:end="29:48"><expr pos:start="29:13" pos:end="29:47"><call pos:start="29:13" pos:end="29:47"><name pos:start="29:13" pos:end="29:26">LE_CENTRIC_MUL</name><argument_list pos:start="29:27" pos:end="29:47">(<argument pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:30">dst</name></expr></argument>, <argument pos:start="29:33" pos:end="29:35"><expr pos:start="29:33" pos:end="29:35"><name pos:start="29:33" pos:end="29:35">src</name></expr></argument>, <argument pos:start="29:38" pos:end="29:42"><expr pos:start="29:38" pos:end="29:42"><name pos:start="29:38" pos:end="29:42">scale</name></expr></argument>, <argument pos:start="29:45" pos:end="29:46"><expr pos:start="29:45" pos:end="29:46"><name pos:start="29:45" pos:end="29:46">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="31:13" pos:end="31:36"><if pos:start="31:13" pos:end="31:36">if<condition pos:start="31:15" pos:end="31:21">(<expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20">scale</name></expr>)</condition><block type="pseudo" pos:start="31:23" pos:end="31:36"><block_content pos:start="31:23" pos:end="31:36"> <expr_stmt pos:start="31:23" pos:end="31:36"><expr pos:start="31:23" pos:end="31:35"><name pos:start="31:23" pos:end="31:25">src</name> <operator pos:start="31:27" pos:end="31:28">+=</operator> <name pos:start="31:30" pos:end="31:35">stride</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:26"><expr pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:15">dst</name> <operator pos:start="33:17" pos:end="33:18">+=</operator> <name pos:start="33:20" pos:end="33:25">stride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:11">case <expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">2</literal></expr>:</case>

        <for pos:start="41:9" pos:end="51:9">for<control pos:start="41:12" pos:end="41:26">(<init pos:start="41:13" pos:end="41:16"><expr pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:13">i</name><operator pos:start="41:14" pos:end="41:14">=</operator><literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>;</init> <condition pos:start="41:18" pos:end="41:21"><expr pos:start="41:18" pos:end="41:20"><name pos:start="41:18" pos:end="41:18">i</name><operator pos:start="41:19" pos:end="41:19">&lt;</operator><name pos:start="41:20" pos:end="41:20">h</name></expr>;</condition> <incr pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:23">i</name><operator pos:start="41:24" pos:end="41:25">++</operator></expr></incr>)</control><block pos:start="41:27" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:26">

            <expr_stmt pos:start="43:13" pos:end="43:56"><expr pos:start="43:13" pos:end="43:55"><call pos:start="43:13" pos:end="43:55"><name pos:start="43:13" pos:end="43:26">LE_CENTRIC_MUL</name><argument_list pos:start="43:27" pos:end="43:55">(<argument pos:start="43:28" pos:end="43:30"><expr pos:start="43:28" pos:end="43:30"><name pos:start="43:28" pos:end="43:30">dst</name></expr></argument>,     <argument pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:39">src</name></expr></argument>,     <argument pos:start="43:46" pos:end="43:50"><expr pos:start="43:46" pos:end="43:50"><name pos:start="43:46" pos:end="43:50">scale</name></expr></argument>, <argument pos:start="43:53" pos:end="43:54"><expr pos:start="43:53" pos:end="43:54"><name pos:start="43:53" pos:end="43:54">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:56"><expr pos:start="45:13" pos:end="45:55"><call pos:start="45:13" pos:end="45:55"><name pos:start="45:13" pos:end="45:26">LE_CENTRIC_MUL</name><argument_list pos:start="45:27" pos:end="45:55">(<argument pos:start="45:28" pos:end="45:34"><expr pos:start="45:28" pos:end="45:34"><name pos:start="45:28" pos:end="45:30">dst</name> <operator pos:start="45:32" pos:end="45:32">+</operator> <literal type="number" pos:start="45:34" pos:end="45:34">2</literal></expr></argument>, <argument pos:start="45:37" pos:end="45:43"><expr pos:start="45:37" pos:end="45:43"><name pos:start="45:37" pos:end="45:39">src</name> <operator pos:start="45:41" pos:end="45:41">+</operator> <literal type="number" pos:start="45:43" pos:end="45:43">2</literal></expr></argument>, <argument pos:start="45:46" pos:end="45:50"><expr pos:start="45:46" pos:end="45:50"><name pos:start="45:46" pos:end="45:50">scale</name></expr></argument>, <argument pos:start="45:53" pos:end="45:54"><expr pos:start="45:53" pos:end="45:54"><name pos:start="45:53" pos:end="45:54">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="47:36"><if pos:start="47:13" pos:end="47:36">if<condition pos:start="47:15" pos:end="47:21">(<expr pos:start="47:16" pos:end="47:20"><name pos:start="47:16" pos:end="47:20">scale</name></expr>)</condition><block type="pseudo" pos:start="47:23" pos:end="47:36"><block_content pos:start="47:23" pos:end="47:36"> <expr_stmt pos:start="47:23" pos:end="47:36"><expr pos:start="47:23" pos:end="47:35"><name pos:start="47:23" pos:end="47:25">src</name> <operator pos:start="47:27" pos:end="47:28">+=</operator> <name pos:start="47:30" pos:end="47:35">stride</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:26"><expr pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:15">dst</name> <operator pos:start="49:17" pos:end="49:18">+=</operator> <name pos:start="49:20" pos:end="49:25">stride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">3</literal></expr>:</case>

        <for pos:start="57:9" pos:end="71:9">for<control pos:start="57:12" pos:end="57:26">(<init pos:start="57:13" pos:end="57:16"><expr pos:start="57:13" pos:end="57:15"><name pos:start="57:13" pos:end="57:13">i</name><operator pos:start="57:14" pos:end="57:14">=</operator><literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>;</init> <condition pos:start="57:18" pos:end="57:21"><expr pos:start="57:18" pos:end="57:20"><name pos:start="57:18" pos:end="57:18">i</name><operator pos:start="57:19" pos:end="57:19">&lt;</operator><name pos:start="57:20" pos:end="57:20">h</name></expr>;</condition> <incr pos:start="57:23" pos:end="57:25"><expr pos:start="57:23" pos:end="57:25"><name pos:start="57:23" pos:end="57:23">i</name><operator pos:start="57:24" pos:end="57:25">++</operator></expr></incr>)</control><block pos:start="57:27" pos:end="71:9">{<block_content pos:start="59:13" pos:end="69:26">

            <expr_stmt pos:start="59:13" pos:end="59:56"><expr pos:start="59:13" pos:end="59:55"><call pos:start="59:13" pos:end="59:55"><name pos:start="59:13" pos:end="59:26">LE_CENTRIC_MUL</name><argument_list pos:start="59:27" pos:end="59:55">(<argument pos:start="59:28" pos:end="59:30"><expr pos:start="59:28" pos:end="59:30"><name pos:start="59:28" pos:end="59:30">dst</name></expr></argument>,     <argument pos:start="59:37" pos:end="59:39"><expr pos:start="59:37" pos:end="59:39"><name pos:start="59:37" pos:end="59:39">src</name></expr></argument>,     <argument pos:start="59:46" pos:end="59:50"><expr pos:start="59:46" pos:end="59:50"><name pos:start="59:46" pos:end="59:50">scale</name></expr></argument>, <argument pos:start="59:53" pos:end="59:54"><expr pos:start="59:53" pos:end="59:54"><name pos:start="59:53" pos:end="59:54">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:56"><expr pos:start="61:13" pos:end="61:55"><call pos:start="61:13" pos:end="61:55"><name pos:start="61:13" pos:end="61:26">LE_CENTRIC_MUL</name><argument_list pos:start="61:27" pos:end="61:55">(<argument pos:start="61:28" pos:end="61:34"><expr pos:start="61:28" pos:end="61:34"><name pos:start="61:28" pos:end="61:30">dst</name> <operator pos:start="61:32" pos:end="61:32">+</operator> <literal type="number" pos:start="61:34" pos:end="61:34">2</literal></expr></argument>, <argument pos:start="61:37" pos:end="61:43"><expr pos:start="61:37" pos:end="61:43"><name pos:start="61:37" pos:end="61:39">src</name> <operator pos:start="61:41" pos:end="61:41">+</operator> <literal type="number" pos:start="61:43" pos:end="61:43">2</literal></expr></argument>, <argument pos:start="61:46" pos:end="61:50"><expr pos:start="61:46" pos:end="61:50"><name pos:start="61:46" pos:end="61:50">scale</name></expr></argument>, <argument pos:start="61:53" pos:end="61:54"><expr pos:start="61:53" pos:end="61:54"><name pos:start="61:53" pos:end="61:54">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:56"><expr pos:start="63:13" pos:end="63:55"><call pos:start="63:13" pos:end="63:55"><name pos:start="63:13" pos:end="63:26">LE_CENTRIC_MUL</name><argument_list pos:start="63:27" pos:end="63:55">(<argument pos:start="63:28" pos:end="63:34"><expr pos:start="63:28" pos:end="63:34"><name pos:start="63:28" pos:end="63:30">dst</name> <operator pos:start="63:32" pos:end="63:32">+</operator> <literal type="number" pos:start="63:34" pos:end="63:34">4</literal></expr></argument>, <argument pos:start="63:37" pos:end="63:43"><expr pos:start="63:37" pos:end="63:43"><name pos:start="63:37" pos:end="63:39">src</name> <operator pos:start="63:41" pos:end="63:41">+</operator> <literal type="number" pos:start="63:43" pos:end="63:43">4</literal></expr></argument>, <argument pos:start="63:46" pos:end="63:50"><expr pos:start="63:46" pos:end="63:50"><name pos:start="63:46" pos:end="63:50">scale</name></expr></argument>, <argument pos:start="63:53" pos:end="63:54"><expr pos:start="63:53" pos:end="63:54"><name pos:start="63:53" pos:end="63:54">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:56"><expr pos:start="65:13" pos:end="65:55"><call pos:start="65:13" pos:end="65:55"><name pos:start="65:13" pos:end="65:26">LE_CENTRIC_MUL</name><argument_list pos:start="65:27" pos:end="65:55">(<argument pos:start="65:28" pos:end="65:34"><expr pos:start="65:28" pos:end="65:34"><name pos:start="65:28" pos:end="65:30">dst</name> <operator pos:start="65:32" pos:end="65:32">+</operator> <literal type="number" pos:start="65:34" pos:end="65:34">6</literal></expr></argument>, <argument pos:start="65:37" pos:end="65:43"><expr pos:start="65:37" pos:end="65:43"><name pos:start="65:37" pos:end="65:39">src</name> <operator pos:start="65:41" pos:end="65:41">+</operator> <literal type="number" pos:start="65:43" pos:end="65:43">6</literal></expr></argument>, <argument pos:start="65:46" pos:end="65:50"><expr pos:start="65:46" pos:end="65:50"><name pos:start="65:46" pos:end="65:50">scale</name></expr></argument>, <argument pos:start="65:53" pos:end="65:54"><expr pos:start="65:53" pos:end="65:54"><name pos:start="65:53" pos:end="65:54">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="67:13" pos:end="67:36"><if pos:start="67:13" pos:end="67:36">if<condition pos:start="67:15" pos:end="67:21">(<expr pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:20">scale</name></expr>)</condition><block type="pseudo" pos:start="67:23" pos:end="67:36"><block_content pos:start="67:23" pos:end="67:36"> <expr_stmt pos:start="67:23" pos:end="67:36"><expr pos:start="67:23" pos:end="67:35"><name pos:start="67:23" pos:end="67:25">src</name> <operator pos:start="67:27" pos:end="67:28">+=</operator> <name pos:start="67:30" pos:end="67:35">stride</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:26"><expr pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:15">dst</name> <operator pos:start="69:17" pos:end="69:18">+=</operator> <name pos:start="69:20" pos:end="69:25">stride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <default pos:start="75:5" pos:end="75:12">default:</default> <expr_stmt pos:start="75:14" pos:end="75:23"><expr pos:start="75:14" pos:end="75:22"><call pos:start="75:14" pos:end="75:22"><name pos:start="75:14" pos:end="75:19">assert</name><argument_list pos:start="75:20" pos:end="75:22">(<argument pos:start="75:21" pos:end="75:21"><expr pos:start="75:21" pos:end="75:21"><literal type="number" pos:start="75:21" pos:end="75:21">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
