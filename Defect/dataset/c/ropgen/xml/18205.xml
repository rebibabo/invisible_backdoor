<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18205.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">do_sigprocmask</name><parameter_list pos:start="1:19" pos:end="1:66">(<parameter pos:start="1:20" pos:end="1:26"><decl pos:start="1:20" pos:end="1:26"><type pos:start="1:20" pos:end="1:26"><name pos:start="1:20" pos:end="1:22">int</name></type> <name pos:start="1:24" pos:end="1:26">how</name></decl></parameter>, <parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:47"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:42">sigset_t</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">set</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:65"><decl pos:start="1:50" pos:end="1:65"><type pos:start="1:50" pos:end="1:65"><name pos:start="1:50" pos:end="1:57">sigset_t</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:65">oldset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">sigset_t</name></type> <name pos:start="7:14" pos:end="7:16">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">sigset_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">temp</name> <init pos:start="9:20" pos:end="9:25">= <expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">CPUState</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">cpu</name> <init pos:start="11:19" pos:end="11:30">= <expr pos:start="11:21" pos:end="11:30"><name pos:start="11:21" pos:end="11:30">thread_cpu</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:45"><decl pos:start="13:5" pos:end="13:44"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">TaskState</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:17">ts</name> <init pos:start="13:19" pos:end="13:44">= <expr pos:start="13:21" pos:end="13:44"><operator pos:start="13:21" pos:end="13:21">(</operator><name pos:start="13:22" pos:end="13:30">TaskState</name> <operator pos:start="13:32" pos:end="13:32">*</operator><operator pos:start="13:33" pos:end="13:33">)</operator><name pos:start="13:34" pos:end="13:44"><name pos:start="13:34" pos:end="13:36">cpu</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:44">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:48"><decl pos:start="15:5" pos:end="15:47"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:25">segv_was_blocked</name> <init pos:start="15:27" pos:end="15:47">= <expr pos:start="15:29" pos:end="15:47"><name pos:start="15:29" pos:end="15:47"><name pos:start="15:29" pos:end="15:30">ts</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:47">sigsegv_blocked</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="67:5"><if pos:start="19:5" pos:end="67:5">if <condition pos:start="19:8" pos:end="19:12">(<expr pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">set</name></expr>)</condition> <block pos:start="19:14" pos:end="67:5">{<block_content pos:start="21:9" pos:end="65:9">

        <decl_stmt pos:start="21:9" pos:end="21:53"><decl pos:start="21:9" pos:end="21:52"><type pos:start="21:9" pos:end="21:12"><name pos:start="21:9" pos:end="21:12">bool</name></type> <name pos:start="21:14" pos:end="21:24">has_sigsegv</name> <init pos:start="21:26" pos:end="21:52">= <expr pos:start="21:28" pos:end="21:52"><call pos:start="21:28" pos:end="21:52"><name pos:start="21:28" pos:end="21:38">sigismember</name><argument_list pos:start="21:39" pos:end="21:52">(<argument pos:start="21:40" pos:end="21:42"><expr pos:start="21:40" pos:end="21:42"><name pos:start="21:40" pos:end="21:42">set</name></expr></argument>, <argument pos:start="21:45" pos:end="21:51"><expr pos:start="21:45" pos:end="21:51"><name pos:start="21:45" pos:end="21:51">SIGSEGV</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:19"><expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:11">val</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <operator pos:start="23:15" pos:end="23:15">*</operator><name pos:start="23:16" pos:end="23:18">set</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:20"><expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:12">temp</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <operator pos:start="25:16" pos:end="25:16">&amp;</operator><name pos:start="25:17" pos:end="25:19">val</name></expr>;</expr_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:33"><expr pos:start="29:9" pos:end="29:32"><call pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:17">sigdelset</name><argument_list pos:start="29:18" pos:end="29:32">(<argument pos:start="29:19" pos:end="29:22"><expr pos:start="29:19" pos:end="29:22"><name pos:start="29:19" pos:end="29:22">temp</name></expr></argument>, <argument pos:start="29:25" pos:end="29:31"><expr pos:start="29:25" pos:end="29:31"><name pos:start="29:25" pos:end="29:31">SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="33:9" pos:end="65:9">switch <condition pos:start="33:16" pos:end="33:20">(<expr pos:start="33:17" pos:end="33:19"><name pos:start="33:17" pos:end="33:19">how</name></expr>)</condition> <block pos:start="33:22" pos:end="65:9">{<block_content pos:start="35:9" pos:end="63:35">

        <case pos:start="35:9" pos:end="35:23">case <expr pos:start="35:14" pos:end="35:22"><name pos:start="35:14" pos:end="35:22">SIG_BLOCK</name></expr>:</case>

            <if_stmt pos:start="37:13" pos:end="41:13"><if pos:start="37:13" pos:end="41:13">if <condition pos:start="37:16" pos:end="37:28">(<expr pos:start="37:17" pos:end="37:27"><name pos:start="37:17" pos:end="37:27">has_sigsegv</name></expr>)</condition> <block pos:start="37:30" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:43">

                <expr_stmt pos:start="39:17" pos:end="39:43"><expr pos:start="39:17" pos:end="39:42"><name pos:start="39:17" pos:end="39:35"><name pos:start="39:17" pos:end="39:18">ts</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:35">sigsegv_blocked</name></name> <operator pos:start="39:37" pos:end="39:37">=</operator> <name pos:start="39:39" pos:end="39:42">true</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:25">case <expr pos:start="45:14" pos:end="45:24"><name pos:start="45:14" pos:end="45:24">SIG_UNBLOCK</name></expr>:</case>

            <if_stmt pos:start="47:13" pos:end="51:13"><if pos:start="47:13" pos:end="51:13">if <condition pos:start="47:16" pos:end="47:28">(<expr pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:27">has_sigsegv</name></expr>)</condition> <block pos:start="47:30" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:44">

                <expr_stmt pos:start="49:17" pos:end="49:44"><expr pos:start="49:17" pos:end="49:43"><name pos:start="49:17" pos:end="49:35"><name pos:start="49:17" pos:end="49:18">ts</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:35">sigsegv_blocked</name></name> <operator pos:start="49:37" pos:end="49:37">=</operator> <name pos:start="49:39" pos:end="49:43">false</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        <case pos:start="55:9" pos:end="55:25">case <expr pos:start="55:14" pos:end="55:24"><name pos:start="55:14" pos:end="55:24">SIG_SETMASK</name></expr>:</case>

            <expr_stmt pos:start="57:13" pos:end="57:46"><expr pos:start="57:13" pos:end="57:45"><name pos:start="57:13" pos:end="57:31"><name pos:start="57:13" pos:end="57:14">ts</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:31">sigsegv_blocked</name></name> <operator pos:start="57:33" pos:end="57:33">=</operator> <name pos:start="57:35" pos:end="57:45">has_sigsegv</name></expr>;</expr_stmt>

            <break pos:start="59:13" pos:end="59:18">break;</break>

        <default pos:start="61:9" pos:end="61:16">default:</default>

            <expr_stmt pos:start="63:13" pos:end="63:35"><expr pos:start="63:13" pos:end="63:34"><call pos:start="63:13" pos:end="63:34"><name pos:start="63:13" pos:end="63:32">g_assert_not_reached</name><argument_list pos:start="63:33" pos:end="63:34">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:41"><expr pos:start="71:5" pos:end="71:40"><name pos:start="71:5" pos:end="71:7">ret</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <call pos:start="71:11" pos:end="71:40"><name pos:start="71:11" pos:end="71:21">sigprocmask</name><argument_list pos:start="71:22" pos:end="71:40">(<argument pos:start="71:23" pos:end="71:25"><expr pos:start="71:23" pos:end="71:25"><name pos:start="71:23" pos:end="71:25">how</name></expr></argument>, <argument pos:start="71:28" pos:end="71:31"><expr pos:start="71:28" pos:end="71:31"><name pos:start="71:28" pos:end="71:31">temp</name></expr></argument>, <argument pos:start="71:34" pos:end="71:39"><expr pos:start="71:34" pos:end="71:39"><name pos:start="71:34" pos:end="71:39">oldset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:35">(<expr pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:14">oldset</name> <operator pos:start="75:16" pos:end="75:17">&amp;&amp;</operator> <name pos:start="75:19" pos:end="75:34">segv_was_blocked</name></expr>)</condition> <block pos:start="75:37" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:35">

        <expr_stmt pos:start="77:9" pos:end="77:35"><expr pos:start="77:9" pos:end="77:34"><call pos:start="77:9" pos:end="77:34"><name pos:start="77:9" pos:end="77:17">sigaddset</name><argument_list pos:start="77:18" pos:end="77:34">(<argument pos:start="77:19" pos:end="77:24"><expr pos:start="77:19" pos:end="77:24"><name pos:start="77:19" pos:end="77:24">oldset</name></expr></argument>, <argument pos:start="77:27" pos:end="77:33"><expr pos:start="77:27" pos:end="77:33"><name pos:start="77:27" pos:end="77:33">SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="83:5" pos:end="83:15">return <expr pos:start="83:12" pos:end="83:14"><name pos:start="83:12" pos:end="83:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
