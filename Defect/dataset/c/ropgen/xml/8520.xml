<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8520.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:34">yuv2yuv1</name>)<parameter_list pos:start="1:36" pos:end="3:121">(<parameter pos:start="1:37" pos:end="1:49"><decl pos:start="1:37" pos:end="1:49"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:46">SwsContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">c</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:72"><decl pos:start="1:52" pos:end="1:72"><type pos:start="1:52" pos:end="1:72"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:64">int16_t</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:72">lumSrc</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:95"><decl pos:start="1:75" pos:end="1:95"><type pos:start="1:75" pos:end="1:95"><specifier pos:start="1:75" pos:end="1:79">const</specifier> <name pos:start="1:81" pos:end="1:87">int16_t</name> <modifier pos:start="1:89" pos:end="1:89">*</modifier></type><name pos:start="1:90" pos:end="1:95">chrSrc</name></decl></parameter>, <parameter pos:start="1:98" pos:end="1:118"><decl pos:start="1:98" pos:end="1:118"><type pos:start="1:98" pos:end="1:118"><specifier pos:start="1:98" pos:end="1:102">const</specifier> <name pos:start="1:104" pos:end="1:110">int16_t</name> <modifier pos:start="1:112" pos:end="1:112">*</modifier></type><name pos:start="1:113" pos:end="1:118">alpSrc</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:49"><decl pos:start="3:37" pos:end="3:49"><type pos:start="3:37" pos:end="3:49"><name pos:start="3:37" pos:end="3:43">uint8_t</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">dest</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:65"><decl pos:start="3:52" pos:end="3:65"><type pos:start="3:52" pos:end="3:65"><name pos:start="3:52" pos:end="3:58">uint8_t</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:65">uDest</name></decl></parameter>, <parameter pos:start="3:68" pos:end="3:81"><decl pos:start="3:68" pos:end="3:81"><type pos:start="3:68" pos:end="3:81"><name pos:start="3:68" pos:end="3:74">uint8_t</name> <modifier pos:start="3:76" pos:end="3:76">*</modifier></type><name pos:start="3:77" pos:end="3:81">vDest</name></decl></parameter>, <parameter pos:start="3:84" pos:end="3:97"><decl pos:start="3:84" pos:end="3:97"><type pos:start="3:84" pos:end="3:97"><name pos:start="3:84" pos:end="3:90">uint8_t</name> <modifier pos:start="3:92" pos:end="3:92">*</modifier></type><name pos:start="3:93" pos:end="3:97">aDest</name></decl></parameter>, <parameter pos:start="3:100" pos:end="3:107"><decl pos:start="3:100" pos:end="3:107"><type pos:start="3:100" pos:end="3:107"><name pos:start="3:100" pos:end="3:102">int</name></type> <name pos:start="3:104" pos:end="3:107">dstW</name></decl></parameter>, <parameter pos:start="3:110" pos:end="3:120"><decl pos:start="3:110" pos:end="3:120"><type pos:start="3:110" pos:end="3:120"><name pos:start="3:110" pos:end="3:112">int</name></type> <name pos:start="3:114" pos:end="3:120">chrDstW</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="139:1">{<block_content pos:start="7:5" pos:end="137:9">

    <decl_stmt pos:start="7:5" pos:end="10:0"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

<cpp:if pos:start="9:1" pos:end="9:24">#<cpp:directive pos:start="9:2" pos:end="9:3">if</cpp:directive> <expr pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

    <if_stmt pos:start="11:5" pos:end="74:0"><if pos:start="11:5" pos:end="74:0">if<condition pos:start="11:7" pos:end="11:34">(<expr pos:start="11:8" pos:end="11:33"><operator pos:start="11:8" pos:end="11:8">!</operator><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:17"><name pos:start="11:10" pos:end="11:10">c</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:17">flags</name></name> <operator pos:start="11:19" pos:end="11:19">&amp;</operator> <name pos:start="11:21" pos:end="11:32">SWS_BITEXACT</name><operator pos:start="11:33" pos:end="11:33">)</operator></expr>)</condition> <block pos:start="11:36" pos:end="74:0">{<block_content pos:start="13:9" pos:end="69:15">

        <decl_stmt pos:start="13:9" pos:end="13:18"><decl pos:start="13:9" pos:end="13:17"><type pos:start="13:9" pos:end="13:12"><name pos:start="13:9" pos:end="13:12">long</name></type> <name pos:start="13:14" pos:end="13:14">p</name><init pos:start="13:15" pos:end="13:17">= <expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">4</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:105"><decl pos:start="15:9" pos:end="15:104"><type pos:start="15:9" pos:end="15:23"><specifier pos:start="15:9" pos:end="15:13">const</specifier> <name pos:start="15:15" pos:end="15:21">uint8_t</name> <modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:29"><name pos:start="15:24" pos:end="15:26">src</name><index pos:start="15:27" pos:end="15:29">[<expr pos:start="15:28" pos:end="15:28"><literal type="number" pos:start="15:28" pos:end="15:28">4</literal></expr>]</index></name><init pos:start="15:30" pos:end="15:104">= <expr pos:start="15:32" pos:end="15:104"><block pos:start="15:32" pos:end="15:104">{<expr pos:start="15:33" pos:end="15:45"><name pos:start="15:33" pos:end="15:38">alpSrc</name> <operator pos:start="15:40" pos:end="15:40">+</operator> <name pos:start="15:42" pos:end="15:45">dstW</name></expr>, <expr pos:start="15:48" pos:end="15:60"><name pos:start="15:48" pos:end="15:53">lumSrc</name> <operator pos:start="15:55" pos:end="15:55">+</operator> <name pos:start="15:57" pos:end="15:60">dstW</name></expr>, <expr pos:start="15:63" pos:end="15:78"><name pos:start="15:63" pos:end="15:68">chrSrc</name> <operator pos:start="15:70" pos:end="15:70">+</operator> <name pos:start="15:72" pos:end="15:78">chrDstW</name></expr>, <expr pos:start="15:81" pos:end="15:103"><name pos:start="15:81" pos:end="15:86">chrSrc</name> <operator pos:start="15:88" pos:end="15:88">+</operator> <name pos:start="15:90" pos:end="15:93">VOFW</name> <operator pos:start="15:95" pos:end="15:95">+</operator> <name pos:start="15:97" pos:end="15:103">chrDstW</name></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:53"><decl pos:start="17:9" pos:end="17:52"><type pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:15">uint8_t</name> <modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:23"><name pos:start="17:18" pos:end="17:20">dst</name><index pos:start="17:21" pos:end="17:23">[<expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">4</literal></expr>]</index></name><init pos:start="17:24" pos:end="17:52">= <expr pos:start="17:26" pos:end="17:52"><block pos:start="17:26" pos:end="17:52">{<expr pos:start="17:27" pos:end="17:31"><name pos:start="17:27" pos:end="17:31">aDest</name></expr>, <expr pos:start="17:34" pos:end="17:37"><name pos:start="17:34" pos:end="17:37">dest</name></expr>, <expr pos:start="17:40" pos:end="17:44"><name pos:start="17:40" pos:end="17:44">uDest</name></expr>, <expr pos:start="17:47" pos:end="17:51"><name pos:start="17:47" pos:end="17:51">vDest</name></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:59"><decl pos:start="19:9" pos:end="19:58"><type pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:15">x86_reg</name></type> <name pos:start="19:17" pos:end="19:26"><name pos:start="19:17" pos:end="19:23">counter</name><index pos:start="19:24" pos:end="19:26">[<expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">4</literal></expr>]</index></name><init pos:start="19:27" pos:end="19:58">= <expr pos:start="19:29" pos:end="19:58"><block pos:start="19:29" pos:end="19:58">{<expr pos:start="19:30" pos:end="19:33"><name pos:start="19:30" pos:end="19:33">dstW</name></expr>, <expr pos:start="19:36" pos:end="19:39"><name pos:start="19:36" pos:end="19:39">dstW</name></expr>, <expr pos:start="19:42" pos:end="19:48"><name pos:start="19:42" pos:end="19:48">chrDstW</name></expr>, <expr pos:start="19:51" pos:end="19:57"><name pos:start="19:51" pos:end="19:57">chrDstW</name></expr>}</block></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="23:9" pos:end="67:9"><if pos:start="23:9" pos:end="45:9">if <condition pos:start="23:12" pos:end="23:40">(<expr pos:start="23:13" pos:end="23:39"><name pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:13">c</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:20">flags</name></name> <operator pos:start="23:22" pos:end="23:22">&amp;</operator> <name pos:start="23:24" pos:end="23:39">SWS_ACCURATE_RND</name></expr>)</condition> <block pos:start="23:42" pos:end="45:9">{<block_content pos:start="25:13" pos:end="43:13">

            <while pos:start="25:13" pos:end="43:13">while<condition pos:start="25:18" pos:end="25:22">(<expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:19">p</name><operator pos:start="25:20" pos:end="25:21">--</operator></expr>)</condition> <block pos:start="25:24" pos:end="43:13">{<block_content pos:start="27:17" pos:end="41:17">

                <if_stmt pos:start="27:17" pos:end="41:17"><if pos:start="27:17" pos:end="41:17">if <condition pos:start="27:20" pos:end="27:27">(<expr pos:start="27:21" pos:end="27:26"><name pos:start="27:21" pos:end="27:26"><name pos:start="27:21" pos:end="27:23">dst</name><index pos:start="27:24" pos:end="27:26">[<expr pos:start="27:25" pos:end="27:25"><name pos:start="27:25" pos:end="27:25">p</name></expr>]</index></name></expr>)</condition> <block pos:start="27:29" pos:end="41:17">{<block_content pos:start="29:21" pos:end="39:22">

                    <asm pos:start="29:21" pos:end="39:22">__asm__ <specifier pos:start="29:29" pos:end="29:36">volatile</specifier>(

                        YSCALEYUV2YV121_ACCURATE

                        :: "r" (src[p]), "r" (dst[p] + counter[p]),

                        "g" (-counter[p])

                        : "%"REG_a

                    );</asm>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="67:9">else <block pos:start="45:16" pos:end="67:9">{<block_content pos:start="47:13" pos:end="65:13">

            <while pos:start="47:13" pos:end="65:13">while<condition pos:start="47:18" pos:end="47:22">(<expr pos:start="47:19" pos:end="47:21"><name pos:start="47:19" pos:end="47:19">p</name><operator pos:start="47:20" pos:end="47:21">--</operator></expr>)</condition> <block pos:start="47:24" pos:end="65:13">{<block_content pos:start="49:17" pos:end="63:17">

                <if_stmt pos:start="49:17" pos:end="63:17"><if pos:start="49:17" pos:end="63:17">if <condition pos:start="49:20" pos:end="49:27">(<expr pos:start="49:21" pos:end="49:26"><name pos:start="49:21" pos:end="49:26"><name pos:start="49:21" pos:end="49:23">dst</name><index pos:start="49:24" pos:end="49:26">[<expr pos:start="49:25" pos:end="49:25"><name pos:start="49:25" pos:end="49:25">p</name></expr>]</index></name></expr>)</condition> <block pos:start="49:29" pos:end="63:17">{<block_content pos:start="51:21" pos:end="61:22">

                    <asm pos:start="51:21" pos:end="61:22">__asm__ <specifier pos:start="51:29" pos:end="51:36">volatile</specifier>(

                        YSCALEYUV2YV121

                        :: "r" (src[p]), "r" (dst[p] + counter[p]),

                        "g" (-counter[p])

                        : "%"REG_a

                    );</asm>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>

        </block_content>}</block></else></if_stmt>

        <return pos:start="69:9" pos:end="69:15">return;</return>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="73:1" pos:end="73:6">#<cpp:directive pos:start="73:2" pos:end="73:6">endif</cpp:directive></cpp:endif>

    <for pos:start="75:5" pos:end="93:5">for <control pos:start="75:9" pos:end="75:26">(<init pos:start="75:10" pos:end="75:13"><expr pos:start="75:10" pos:end="75:12"><name pos:start="75:10" pos:end="75:10">i</name><operator pos:start="75:11" pos:end="75:11">=</operator><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>;</init> <condition pos:start="75:15" pos:end="75:21"><expr pos:start="75:15" pos:end="75:20"><name pos:start="75:15" pos:end="75:15">i</name><operator pos:start="75:16" pos:end="75:16">&lt;</operator><name pos:start="75:17" pos:end="75:20">dstW</name></expr>;</condition> <incr pos:start="75:23" pos:end="75:25"><expr pos:start="75:23" pos:end="75:25"><name pos:start="75:23" pos:end="75:23">i</name><operator pos:start="75:24" pos:end="75:25">++</operator></expr></incr>)</control> <block pos:start="75:28" pos:end="93:5">{<block_content pos:start="77:9" pos:end="91:21">

        <decl_stmt pos:start="77:9" pos:end="77:35"><decl pos:start="77:9" pos:end="77:34"><type pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">int</name></type> <name pos:start="77:13" pos:end="77:15">val</name><init pos:start="77:16" pos:end="77:34">= <expr pos:start="77:18" pos:end="77:34"><operator pos:start="77:18" pos:end="77:18">(</operator><name pos:start="77:19" pos:end="77:27"><name pos:start="77:19" pos:end="77:24">lumSrc</name><index pos:start="77:25" pos:end="77:27">[<expr pos:start="77:26" pos:end="77:26"><name pos:start="77:26" pos:end="77:26">i</name></expr>]</index></name><operator pos:start="77:28" pos:end="77:28">+</operator><literal type="number" pos:start="77:29" pos:end="77:30">64</literal><operator pos:start="77:31" pos:end="77:31">)</operator><operator pos:start="77:32" pos:end="77:33">&gt;&gt;</operator><literal type="number" pos:start="77:34" pos:end="77:34">7</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:20">(<expr pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:15">val</name><operator pos:start="81:16" pos:end="81:16">&amp;</operator><literal type="number" pos:start="81:17" pos:end="81:19">256</literal></expr>)</condition> <block pos:start="81:22" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:31">

            <if_stmt pos:start="83:13" pos:end="85:31"><if pos:start="83:13" pos:end="83:29">if <condition pos:start="83:16" pos:end="83:22">(<expr pos:start="83:17" pos:end="83:21"><name pos:start="83:17" pos:end="83:19">val</name><operator pos:start="83:20" pos:end="83:20">&lt;</operator><literal type="number" pos:start="83:21" pos:end="83:21">0</literal></expr>)</condition><block type="pseudo" pos:start="83:24" pos:end="83:29"><block_content pos:start="83:24" pos:end="83:29"> <expr_stmt pos:start="83:24" pos:end="83:29"><expr pos:start="83:24" pos:end="83:28"><name pos:start="83:24" pos:end="83:26">val</name><operator pos:start="83:27" pos:end="83:27">=</operator><literal type="number" pos:start="83:28" pos:end="83:28">0</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="85:13" pos:end="85:31">else<block type="pseudo" pos:start="85:24" pos:end="85:31"><block_content pos:start="85:24" pos:end="85:31">       <expr_stmt pos:start="85:24" pos:end="85:31"><expr pos:start="85:24" pos:end="85:30"><name pos:start="85:24" pos:end="85:26">val</name><operator pos:start="85:27" pos:end="85:27">=</operator><literal type="number" pos:start="85:28" pos:end="85:30">255</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:21"><expr pos:start="91:9" pos:end="91:20"><name pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:12">dest</name><index pos:start="91:13" pos:end="91:15">[<expr pos:start="91:14" pos:end="91:14"><name pos:start="91:14" pos:end="91:14">i</name></expr>]</index></name><operator pos:start="91:16" pos:end="91:16">=</operator> <name pos:start="91:18" pos:end="91:20">val</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="97:5" pos:end="125:9"><if pos:start="97:5" pos:end="125:9">if <condition pos:start="97:8" pos:end="97:14">(<expr pos:start="97:9" pos:end="97:13"><name pos:start="97:9" pos:end="97:13">uDest</name></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="125:9"><block_content pos:start="99:9" pos:end="125:9">

        <for pos:start="99:9" pos:end="125:9">for <control pos:start="99:13" pos:end="99:33">(<init pos:start="99:14" pos:end="99:17"><expr pos:start="99:14" pos:end="99:16"><name pos:start="99:14" pos:end="99:14">i</name><operator pos:start="99:15" pos:end="99:15">=</operator><literal type="number" pos:start="99:16" pos:end="99:16">0</literal></expr>;</init> <condition pos:start="99:19" pos:end="99:28"><expr pos:start="99:19" pos:end="99:27"><name pos:start="99:19" pos:end="99:19">i</name><operator pos:start="99:20" pos:end="99:20">&lt;</operator><name pos:start="99:21" pos:end="99:27">chrDstW</name></expr>;</condition> <incr pos:start="99:30" pos:end="99:32"><expr pos:start="99:30" pos:end="99:32"><name pos:start="99:30" pos:end="99:30">i</name><operator pos:start="99:31" pos:end="99:32">++</operator></expr></incr>)</control> <block pos:start="99:35" pos:end="125:9">{<block_content pos:start="101:13" pos:end="123:24">

            <decl_stmt pos:start="101:13" pos:end="101:43"><decl pos:start="101:13" pos:end="101:42"><type pos:start="101:13" pos:end="101:15"><name pos:start="101:13" pos:end="101:15">int</name></type> <name pos:start="101:17" pos:end="101:17">u</name><init pos:start="101:18" pos:end="101:42">=<expr pos:start="101:19" pos:end="101:42"><operator pos:start="101:19" pos:end="101:19">(</operator><name pos:start="101:20" pos:end="101:35"><name pos:start="101:20" pos:end="101:25">chrSrc</name><index pos:start="101:26" pos:end="101:35">[<expr pos:start="101:27" pos:end="101:27"><name pos:start="101:27" pos:end="101:27">i</name></expr>       ]</index></name><operator pos:start="101:36" pos:end="101:36">+</operator><literal type="number" pos:start="101:37" pos:end="101:38">64</literal><operator pos:start="101:39" pos:end="101:39">)</operator><operator pos:start="101:40" pos:end="101:41">&gt;&gt;</operator><literal type="number" pos:start="101:42" pos:end="101:42">7</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="103:13" pos:end="103:43"><decl pos:start="103:13" pos:end="103:42"><type pos:start="103:13" pos:end="103:15"><name pos:start="103:13" pos:end="103:15">int</name></type> <name pos:start="103:17" pos:end="103:17">v</name><init pos:start="103:18" pos:end="103:42">=<expr pos:start="103:19" pos:end="103:42"><operator pos:start="103:19" pos:end="103:19">(</operator><name pos:start="103:20" pos:end="103:35"><name pos:start="103:20" pos:end="103:25">chrSrc</name><index pos:start="103:26" pos:end="103:35">[<expr pos:start="103:27" pos:end="103:34"><name pos:start="103:27" pos:end="103:27">i</name> <operator pos:start="103:29" pos:end="103:29">+</operator> <name pos:start="103:31" pos:end="103:34">VOFW</name></expr>]</index></name><operator pos:start="103:36" pos:end="103:36">+</operator><literal type="number" pos:start="103:37" pos:end="103:38">64</literal><operator pos:start="103:39" pos:end="103:39">)</operator><operator pos:start="103:40" pos:end="103:41">&gt;&gt;</operator><literal type="number" pos:start="103:42" pos:end="103:42">7</literal></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="107:13" pos:end="117:13"><if pos:start="107:13" pos:end="117:13">if <condition pos:start="107:16" pos:end="107:26">(<expr pos:start="107:17" pos:end="107:25"><operator pos:start="107:17" pos:end="107:17">(</operator><name pos:start="107:18" pos:end="107:18">u</name><operator pos:start="107:19" pos:end="107:19">|</operator><name pos:start="107:20" pos:end="107:20">v</name><operator pos:start="107:21" pos:end="107:21">)</operator><operator pos:start="107:22" pos:end="107:22">&amp;</operator><literal type="number" pos:start="107:23" pos:end="107:25">256</literal></expr>)</condition> <block pos:start="107:28" pos:end="117:13">{<block_content pos:start="109:17" pos:end="115:38">

                <if_stmt pos:start="109:17" pos:end="111:38"><if pos:start="109:17" pos:end="109:36">if <condition pos:start="109:20" pos:end="109:24">(<expr pos:start="109:21" pos:end="109:23"><name pos:start="109:21" pos:end="109:21">u</name><operator pos:start="109:22" pos:end="109:22">&lt;</operator><literal type="number" pos:start="109:23" pos:end="109:23">0</literal></expr>)</condition><block type="pseudo" pos:start="109:33" pos:end="109:36"><block_content pos:start="109:33" pos:end="109:36">        <expr_stmt pos:start="109:33" pos:end="109:36"><expr pos:start="109:33" pos:end="109:35"><name pos:start="109:33" pos:end="109:33">u</name><operator pos:start="109:34" pos:end="109:34">=</operator><literal type="number" pos:start="109:35" pos:end="109:35">0</literal></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="111:17" pos:end="111:38">else if <condition pos:start="111:25" pos:end="111:31">(<expr pos:start="111:26" pos:end="111:30"><name pos:start="111:26" pos:end="111:26">u</name><operator pos:start="111:27" pos:end="111:27">&gt;</operator><literal type="number" pos:start="111:28" pos:end="111:30">255</literal></expr>)</condition><block type="pseudo" pos:start="111:33" pos:end="111:38"><block_content pos:start="111:33" pos:end="111:38"> <expr_stmt pos:start="111:33" pos:end="111:38"><expr pos:start="111:33" pos:end="111:37"><name pos:start="111:33" pos:end="111:33">u</name><operator pos:start="111:34" pos:end="111:34">=</operator><literal type="number" pos:start="111:35" pos:end="111:37">255</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="113:17" pos:end="115:38"><if pos:start="113:17" pos:end="113:36">if <condition pos:start="113:20" pos:end="113:24">(<expr pos:start="113:21" pos:end="113:23"><name pos:start="113:21" pos:end="113:21">v</name><operator pos:start="113:22" pos:end="113:22">&lt;</operator><literal type="number" pos:start="113:23" pos:end="113:23">0</literal></expr>)</condition><block type="pseudo" pos:start="113:33" pos:end="113:36"><block_content pos:start="113:33" pos:end="113:36">        <expr_stmt pos:start="113:33" pos:end="113:36"><expr pos:start="113:33" pos:end="113:35"><name pos:start="113:33" pos:end="113:33">v</name><operator pos:start="113:34" pos:end="113:34">=</operator><literal type="number" pos:start="113:35" pos:end="113:35">0</literal></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="115:17" pos:end="115:38">else if <condition pos:start="115:25" pos:end="115:31">(<expr pos:start="115:26" pos:end="115:30"><name pos:start="115:26" pos:end="115:26">v</name><operator pos:start="115:27" pos:end="115:27">&gt;</operator><literal type="number" pos:start="115:28" pos:end="115:30">255</literal></expr>)</condition><block type="pseudo" pos:start="115:33" pos:end="115:38"><block_content pos:start="115:33" pos:end="115:38"> <expr_stmt pos:start="115:33" pos:end="115:38"><expr pos:start="115:33" pos:end="115:37"><name pos:start="115:33" pos:end="115:33">v</name><operator pos:start="115:34" pos:end="115:34">=</operator><literal type="number" pos:start="115:35" pos:end="115:37">255</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="121:13" pos:end="121:24"><expr pos:start="121:13" pos:end="121:23"><name pos:start="121:13" pos:end="121:20"><name pos:start="121:13" pos:end="121:17">uDest</name><index pos:start="121:18" pos:end="121:20">[<expr pos:start="121:19" pos:end="121:19"><name pos:start="121:19" pos:end="121:19">i</name></expr>]</index></name><operator pos:start="121:21" pos:end="121:21">=</operator> <name pos:start="121:23" pos:end="121:23">u</name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:24"><expr pos:start="123:13" pos:end="123:23"><name pos:start="123:13" pos:end="123:20"><name pos:start="123:13" pos:end="123:17">vDest</name><index pos:start="123:18" pos:end="123:20">[<expr pos:start="123:19" pos:end="123:19"><name pos:start="123:19" pos:end="123:19">i</name></expr>]</index></name><operator pos:start="123:21" pos:end="123:21">=</operator> <name pos:start="123:23" pos:end="123:23">v</name></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <if_stmt pos:start="129:5" pos:end="137:9"><if pos:start="129:5" pos:end="137:9">if <condition pos:start="129:8" pos:end="129:38">(<expr pos:start="129:9" pos:end="129:37"><name pos:start="129:9" pos:end="129:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="129:30" pos:end="129:31">&amp;&amp;</operator> <name pos:start="129:33" pos:end="129:37">aDest</name></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="137:9"><block_content pos:start="131:9" pos:end="137:9">

        <for pos:start="131:9" pos:end="137:9">for <control pos:start="131:13" pos:end="131:30">(<init pos:start="131:14" pos:end="131:17"><expr pos:start="131:14" pos:end="131:16"><name pos:start="131:14" pos:end="131:14">i</name><operator pos:start="131:15" pos:end="131:15">=</operator><literal type="number" pos:start="131:16" pos:end="131:16">0</literal></expr>;</init> <condition pos:start="131:19" pos:end="131:25"><expr pos:start="131:19" pos:end="131:24"><name pos:start="131:19" pos:end="131:19">i</name><operator pos:start="131:20" pos:end="131:20">&lt;</operator><name pos:start="131:21" pos:end="131:24">dstW</name></expr>;</condition> <incr pos:start="131:27" pos:end="131:29"><expr pos:start="131:27" pos:end="131:29"><name pos:start="131:27" pos:end="131:27">i</name><operator pos:start="131:28" pos:end="131:29">++</operator></expr></incr>)</control> <block pos:start="131:32" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:41">

            <decl_stmt pos:start="133:13" pos:end="133:39"><decl pos:start="133:13" pos:end="133:38"><type pos:start="133:13" pos:end="133:15"><name pos:start="133:13" pos:end="133:15">int</name></type> <name pos:start="133:17" pos:end="133:19">val</name><init pos:start="133:20" pos:end="133:38">= <expr pos:start="133:22" pos:end="133:38"><operator pos:start="133:22" pos:end="133:22">(</operator><name pos:start="133:23" pos:end="133:31"><name pos:start="133:23" pos:end="133:28">alpSrc</name><index pos:start="133:29" pos:end="133:31">[<expr pos:start="133:30" pos:end="133:30"><name pos:start="133:30" pos:end="133:30">i</name></expr>]</index></name><operator pos:start="133:32" pos:end="133:32">+</operator><literal type="number" pos:start="133:33" pos:end="133:34">64</literal><operator pos:start="133:35" pos:end="133:35">)</operator><operator pos:start="133:36" pos:end="133:37">&gt;&gt;</operator><literal type="number" pos:start="133:38" pos:end="133:38">7</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:41"><expr pos:start="135:13" pos:end="135:40"><name pos:start="135:13" pos:end="135:20"><name pos:start="135:13" pos:end="135:17">aDest</name><index pos:start="135:18" pos:end="135:20">[<expr pos:start="135:19" pos:end="135:19"><name pos:start="135:19" pos:end="135:19">i</name></expr>]</index></name><operator pos:start="135:21" pos:end="135:21">=</operator> <call pos:start="135:23" pos:end="135:40"><name pos:start="135:23" pos:end="135:35">av_clip_uint8</name><argument_list pos:start="135:36" pos:end="135:40">(<argument pos:start="135:37" pos:end="135:39"><expr pos:start="135:37" pos:end="135:39"><name pos:start="135:37" pos:end="135:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
