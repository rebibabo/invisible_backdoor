<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10612.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:26">nbd_client_co_pdiscard</name><parameter_list pos:start="1:27" pos:end="1:75">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:43">BlockDriverState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">bs</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:56">int64_t</name></type> <name pos:start="1:58" pos:end="1:63">offset</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:74"><decl pos:start="1:66" pos:end="1:74"><type pos:start="1:66" pos:end="1:74"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:74">count</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="47:24">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">NBDClientSession</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">client</name> <init pos:start="5:30" pos:end="5:57">= <expr pos:start="5:32" pos:end="5:57"><call pos:start="5:32" pos:end="5:57"><name pos:start="5:32" pos:end="5:53">nbd_get_client_session</name><argument_list pos:start="5:54" pos:end="5:57">(<argument pos:start="5:55" pos:end="5:56"><expr pos:start="5:55" pos:end="5:56"><name pos:start="5:55" pos:end="5:56">bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="15:6"><decl pos:start="7:5" pos:end="15:5"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">NBDRequest</name></type> <name pos:start="7:16" pos:end="7:22">request</name> <init pos:start="7:24" pos:end="15:5">= <expr pos:start="7:26" pos:end="15:5"><block pos:start="7:26" pos:end="15:5">{

        <expr pos:start="9:9" pos:end="9:28"><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:13">type</name> <operator pos:start="9:15" pos:end="9:15">=</operator> <name pos:start="9:17" pos:end="9:28">NBD_CMD_TRIM</name></expr>,

        <expr pos:start="11:9" pos:end="11:22"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:13">from</name> <operator pos:start="11:15" pos:end="11:15">=</operator> <name pos:start="11:17" pos:end="11:22">offset</name></expr>,

        <expr pos:start="13:9" pos:end="13:20"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:12">len</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:20">count</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">NBDReply</name></type> <name pos:start="17:14" pos:end="17:18">reply</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">ssize_t</name></type> <name pos:start="19:13" pos:end="19:15">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:49">(<expr pos:start="23:9" pos:end="23:48"><operator pos:start="23:9" pos:end="23:9">!</operator><operator pos:start="23:10" pos:end="23:10">(</operator><name pos:start="23:11" pos:end="23:26"><name pos:start="23:11" pos:end="23:16">client</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:26">nbdflags</name></name> <operator pos:start="23:28" pos:end="23:28">&amp;</operator> <name pos:start="23:30" pos:end="23:47">NBD_FLAG_SEND_TRIM</name><operator pos:start="23:48" pos:end="23:48">)</operator></expr>)</condition> <block pos:start="23:51" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:17">

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><call pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:23">nbd_coroutine_start</name><argument_list pos:start="31:24" pos:end="31:41">(<argument pos:start="31:25" pos:end="31:30"><expr pos:start="31:25" pos:end="31:30"><name pos:start="31:25" pos:end="31:30">client</name></expr></argument>, <argument pos:start="31:33" pos:end="31:40"><expr pos:start="31:33" pos:end="31:40"><operator pos:start="31:33" pos:end="31:33">&amp;</operator><name pos:start="31:34" pos:end="31:40">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:50"><expr pos:start="33:5" pos:end="33:49"><name pos:start="33:5" pos:end="33:7">ret</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:49"><name pos:start="33:11" pos:end="33:29">nbd_co_send_request</name><argument_list pos:start="33:30" pos:end="33:49">(<argument pos:start="33:31" pos:end="33:32"><expr pos:start="33:31" pos:end="33:32"><name pos:start="33:31" pos:end="33:32">bs</name></expr></argument>, <argument pos:start="33:35" pos:end="33:42"><expr pos:start="33:35" pos:end="33:42"><operator pos:start="33:35" pos:end="33:35">&amp;</operator><name pos:start="33:36" pos:end="33:42">request</name></expr></argument>, <argument pos:start="33:45" pos:end="33:48"><expr pos:start="33:45" pos:end="33:48"><name pos:start="33:45" pos:end="33:48">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:16">(<expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">&lt;</operator> <literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr>)</condition> <block pos:start="35:18" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:27">

        <expr_stmt pos:start="37:9" pos:end="37:27"><expr pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:13">reply</name><operator pos:start="37:14" pos:end="37:14">.</operator><name pos:start="37:15" pos:end="37:19">error</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <operator pos:start="37:23" pos:end="37:23">-</operator><name pos:start="37:24" pos:end="37:26">ret</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="43:5">else <block pos:start="39:12" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:61">

        <expr_stmt pos:start="41:9" pos:end="41:61"><expr pos:start="41:9" pos:end="41:60"><call pos:start="41:9" pos:end="41:60"><name pos:start="41:9" pos:end="41:28">nbd_co_receive_reply</name><argument_list pos:start="41:29" pos:end="41:60">(<argument pos:start="41:30" pos:end="41:35"><expr pos:start="41:30" pos:end="41:35"><name pos:start="41:30" pos:end="41:35">client</name></expr></argument>, <argument pos:start="41:38" pos:end="41:45"><expr pos:start="41:38" pos:end="41:45"><operator pos:start="41:38" pos:end="41:38">&amp;</operator><name pos:start="41:39" pos:end="41:45">request</name></expr></argument>, <argument pos:start="41:48" pos:end="41:53"><expr pos:start="41:48" pos:end="41:53"><operator pos:start="41:48" pos:end="41:48">&amp;</operator><name pos:start="41:49" pos:end="41:53">reply</name></expr></argument>, <argument pos:start="41:56" pos:end="41:59"><expr pos:start="41:56" pos:end="41:59"><name pos:start="41:56" pos:end="41:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><call pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:21">nbd_coroutine_end</name><argument_list pos:start="45:22" pos:end="45:35">(<argument pos:start="45:23" pos:end="45:24"><expr pos:start="45:23" pos:end="45:24"><name pos:start="45:23" pos:end="45:24">bs</name></expr></argument>, <argument pos:start="45:27" pos:end="45:34"><expr pos:start="45:27" pos:end="45:34"><operator pos:start="45:27" pos:end="45:27">&amp;</operator><name pos:start="45:28" pos:end="45:34">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="47:5" pos:end="47:24">return <expr pos:start="47:12" pos:end="47:23"><operator pos:start="47:12" pos:end="47:12">-</operator><name pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:17">reply</name><operator pos:start="47:18" pos:end="47:18">.</operator><name pos:start="47:19" pos:end="47:23">error</name></name></expr>;</return>



</block_content>}</block></function>
</unit>
