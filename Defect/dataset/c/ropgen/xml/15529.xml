<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15529.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">rom_reset</name><parameter_list pos:start="1:22" pos:end="1:35">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:28"><name pos:start="1:23" pos:end="1:26">void</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:34">unused</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:7">Rom</name> <modifier pos:start="5:9" pos:end="5:9">*</modifier></type><name pos:start="5:10" pos:end="5:12">rom</name></decl>;</decl_stmt>



    <macro pos:start="9:5" pos:end="9:36"><name pos:start="9:5" pos:end="9:18">QTAILQ_FOREACH</name><argument_list pos:start="9:19" pos:end="9:36">(<argument pos:start="9:20" pos:end="9:22">rom</argument>, <argument pos:start="9:25" pos:end="9:29">&amp;roms</argument>, <argument pos:start="9:32" pos:end="9:35">next</argument>)</argument_list></macro> <block pos:start="9:38" pos:end="33:5">{<block_content pos:start="11:9" pos:end="31:9">

        <if_stmt pos:start="11:9" pos:end="15:9"><if pos:start="11:9" pos:end="15:9">if <condition pos:start="11:12" pos:end="11:25">(<expr pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:15">rom</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:24">fw_file</name></name></expr>)</condition> <block pos:start="11:27" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:21">

            <continue pos:start="13:13" pos:end="13:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="17:9" pos:end="19:21"><if pos:start="17:9" pos:end="19:21">if <condition pos:start="17:12" pos:end="17:30">(<expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:15">rom</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:21">data</name></name> <operator pos:start="17:23" pos:end="17:24">==</operator> <name pos:start="17:26" pos:end="17:29">NULL</name></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:21"><block_content pos:start="19:13" pos:end="19:21">

            <continue pos:start="19:13" pos:end="19:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:74"><expr pos:start="21:9" pos:end="21:73"><call pos:start="21:9" pos:end="21:73"><name pos:start="21:9" pos:end="21:37">cpu_physical_memory_write_rom</name><argument_list pos:start="21:38" pos:end="21:73">(<argument pos:start="21:39" pos:end="21:47"><expr pos:start="21:39" pos:end="21:47"><name pos:start="21:39" pos:end="21:47"><name pos:start="21:39" pos:end="21:41">rom</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:47">addr</name></name></expr></argument>, <argument pos:start="21:50" pos:end="21:58"><expr pos:start="21:50" pos:end="21:58"><name pos:start="21:50" pos:end="21:58"><name pos:start="21:50" pos:end="21:52">rom</name><operator pos:start="21:53" pos:end="21:54">-&gt;</operator><name pos:start="21:55" pos:end="21:58">data</name></name></expr></argument>, <argument pos:start="21:61" pos:end="21:72"><expr pos:start="21:61" pos:end="21:72"><name pos:start="21:61" pos:end="21:72"><name pos:start="21:61" pos:end="21:63">rom</name><operator pos:start="21:64" pos:end="21:65">-&gt;</operator><name pos:start="21:66" pos:end="21:72">romsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="31:9">if <condition pos:start="23:12" pos:end="23:23">(<expr pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:15">rom</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:22">isrom</name></name></expr>)</condition> <block pos:start="23:25" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:29">

            <comment type="block" pos:start="25:13" pos:end="25:51">/* rom needs to be written only once */</comment>

            <expr_stmt pos:start="27:13" pos:end="27:33"><expr pos:start="27:13" pos:end="27:32"><call pos:start="27:13" pos:end="27:32"><name pos:start="27:13" pos:end="27:21">qemu_free</name><argument_list pos:start="27:22" pos:end="27:32">(<argument pos:start="27:23" pos:end="27:31"><expr pos:start="27:23" pos:end="27:31"><name pos:start="27:23" pos:end="27:31"><name pos:start="27:23" pos:end="27:25">rom</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:31">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:29"><expr pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:15">rom</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:21">data</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:28">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
