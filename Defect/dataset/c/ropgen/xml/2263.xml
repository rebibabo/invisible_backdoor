<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2263.c" pos:tabs="8"><function pos:start="1:1" pos:end="255:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">virtio_net_load_device</name><parameter_list pos:start="1:34" pos:end="3:49">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:46">VirtIODevice</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">vdev</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:65"><decl pos:start="1:55" pos:end="1:65"><type pos:start="1:55" pos:end="1:65"><name pos:start="1:55" pos:end="1:62">QEMUFile</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:65">f</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:48"><decl pos:start="3:35" pos:end="3:48"><type pos:start="3:35" pos:end="3:48"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:48">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="255:1">{<block_content pos:start="7:5" pos:end="253:13">

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">VirtIONet</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">n</name> <init pos:start="7:18" pos:end="7:35">= <expr pos:start="7:20" pos:end="7:35"><call pos:start="7:20" pos:end="7:35"><name pos:start="7:20" pos:end="7:29">VIRTIO_NET</name><argument_list pos:start="7:30" pos:end="7:35">(<argument pos:start="7:31" pos:end="7:34"><expr pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:34">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:20">link_down</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:41"><expr pos:start="13:5" pos:end="13:40"><call pos:start="13:5" pos:end="13:40"><name pos:start="13:5" pos:end="13:19">qemu_get_buffer</name><argument_list pos:start="13:20" pos:end="13:40">(<argument pos:start="13:21" pos:end="13:21"><expr pos:start="13:21" pos:end="13:21"><name pos:start="13:21" pos:end="13:21">f</name></expr></argument>, <argument pos:start="13:24" pos:end="13:29"><expr pos:start="13:24" pos:end="13:29"><name pos:start="13:24" pos:end="13:29"><name pos:start="13:24" pos:end="13:24">n</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:29">mac</name></name></expr></argument>, <argument pos:start="13:32" pos:end="13:39"><expr pos:start="13:32" pos:end="13:39"><name pos:start="13:32" pos:end="13:39">ETH_ALEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:44"><expr pos:start="15:5" pos:end="15:43"><name pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:5">n</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:10">vqs</name><index pos:start="15:11" pos:end="15:13">[<expr pos:start="15:12" pos:end="15:12"><literal type="number" pos:start="15:12" pos:end="15:12">0</literal></expr>]</index></name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:24">tx_waiting</name> <operator pos:start="15:26" pos:end="15:26">=</operator> <call pos:start="15:28" pos:end="15:43"><name pos:start="15:28" pos:end="15:40">qemu_get_be32</name><argument_list pos:start="15:41" pos:end="15:43">(<argument pos:start="15:42" pos:end="15:42"><expr pos:start="15:42" pos:end="15:42"><name pos:start="15:42" pos:end="15:42">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="21:77"><expr pos:start="19:5" pos:end="21:76"><call pos:start="19:5" pos:end="21:76"><name pos:start="19:5" pos:end="19:30">virtio_net_set_mrg_rx_bufs</name><argument_list pos:start="19:31" pos:end="21:76">(<argument pos:start="19:32" pos:end="19:32"><expr pos:start="19:32" pos:end="19:32"><name pos:start="19:32" pos:end="19:32">n</name></expr></argument>, <argument pos:start="19:35" pos:end="19:50"><expr pos:start="19:35" pos:end="19:50"><call pos:start="19:35" pos:end="19:50"><name pos:start="19:35" pos:end="19:47">qemu_get_be32</name><argument_list pos:start="19:48" pos:end="19:50">(<argument pos:start="19:49" pos:end="19:49"><expr pos:start="19:49" pos:end="19:49"><name pos:start="19:49" pos:end="19:49">f</name></expr></argument>)</argument_list></call></expr></argument>,

                               <argument pos:start="21:32" pos:end="21:75"><expr pos:start="21:32" pos:end="21:75"><call pos:start="21:32" pos:end="21:75"><name pos:start="21:32" pos:end="21:49">virtio_has_feature</name><argument_list pos:start="21:50" pos:end="21:75">(<argument pos:start="21:51" pos:end="21:54"><expr pos:start="21:51" pos:end="21:54"><name pos:start="21:51" pos:end="21:54">vdev</name></expr></argument>, <argument pos:start="21:57" pos:end="21:74"><expr pos:start="21:57" pos:end="21:74"><name pos:start="21:57" pos:end="21:74">VIRTIO_F_VERSION_1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="27:37"><if pos:start="25:5" pos:end="27:37">if <condition pos:start="25:8" pos:end="25:24">(<expr pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:18">version_id</name> <operator pos:start="25:20" pos:end="25:21">&gt;=</operator> <literal type="number" pos:start="25:23" pos:end="25:23">3</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:37"><block_content pos:start="27:9" pos:end="27:37">

        <expr_stmt pos:start="27:9" pos:end="27:37"><expr pos:start="27:9" pos:end="27:36"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:9">n</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:17">status</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <call pos:start="27:21" pos:end="27:36"><name pos:start="27:21" pos:end="27:33">qemu_get_be16</name><argument_list pos:start="27:34" pos:end="27:36">(<argument pos:start="27:35" pos:end="27:35"><expr pos:start="27:35" pos:end="27:35"><name pos:start="27:35" pos:end="27:35">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="47:5"><if pos:start="31:5" pos:end="47:5">if <condition pos:start="31:8" pos:end="31:24">(<expr pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:18">version_id</name> <operator pos:start="31:20" pos:end="31:21">&gt;=</operator> <literal type="number" pos:start="31:23" pos:end="31:23">4</literal></expr>)</condition> <block pos:start="31:26" pos:end="47:5">{<block_content pos:start="33:9" pos:end="45:9">

        <if_stmt pos:start="33:9" pos:end="45:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:27">(<expr pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:22">version_id</name> <operator pos:start="33:24" pos:end="33:24">&lt;</operator> <literal type="number" pos:start="33:26" pos:end="33:26">8</literal></expr>)</condition> <block pos:start="33:29" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:43">

            <expr_stmt pos:start="35:13" pos:end="35:42"><expr pos:start="35:13" pos:end="35:41"><name pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:13">n</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:22">promisc</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <call pos:start="35:26" pos:end="35:41"><name pos:start="35:26" pos:end="35:38">qemu_get_be32</name><argument_list pos:start="35:39" pos:end="35:41">(<argument pos:start="35:40" pos:end="35:40"><expr pos:start="35:40" pos:end="35:40"><name pos:start="35:40" pos:end="35:40">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:43"><expr pos:start="37:13" pos:end="37:42"><name pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:13">n</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:23">allmulti</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="37:42"><name pos:start="37:27" pos:end="37:39">qemu_get_be32</name><argument_list pos:start="37:40" pos:end="37:42">(<argument pos:start="37:41" pos:end="37:41"><expr pos:start="37:41" pos:end="37:41"><name pos:start="37:41" pos:end="37:41">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="45:9">else <block pos:start="39:16" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:43">

            <expr_stmt pos:start="41:13" pos:end="41:42"><expr pos:start="41:13" pos:end="41:41"><name pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:13">n</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:22">promisc</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <call pos:start="41:26" pos:end="41:41"><name pos:start="41:26" pos:end="41:38">qemu_get_byte</name><argument_list pos:start="41:39" pos:end="41:41">(<argument pos:start="41:40" pos:end="41:40"><expr pos:start="41:40" pos:end="41:40"><name pos:start="41:40" pos:end="41:40">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:43"><expr pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:13">n</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:23">allmulti</name></name> <operator pos:start="43:25" pos:end="43:25">=</operator> <call pos:start="43:27" pos:end="43:42"><name pos:start="43:27" pos:end="43:39">qemu_get_byte</name><argument_list pos:start="43:40" pos:end="43:42">(<argument pos:start="43:41" pos:end="43:41"><expr pos:start="43:41" pos:end="43:41"><name pos:start="43:41" pos:end="43:41">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="91:5"><if pos:start="51:5" pos:end="91:5">if <condition pos:start="51:8" pos:end="51:24">(<expr pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:18">version_id</name> <operator pos:start="51:20" pos:end="51:21">&gt;=</operator> <literal type="number" pos:start="51:23" pos:end="51:23">5</literal></expr>)</condition> <block pos:start="51:26" pos:end="91:5">{<block_content pos:start="53:9" pos:end="89:9">

        <expr_stmt pos:start="53:9" pos:end="53:47"><expr pos:start="53:9" pos:end="53:46"><name pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:9">n</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:20">mac_table</name><operator pos:start="53:21" pos:end="53:21">.</operator><name pos:start="53:22" pos:end="53:27">in_use</name></name> <operator pos:start="53:29" pos:end="53:29">=</operator> <call pos:start="53:31" pos:end="53:46"><name pos:start="53:31" pos:end="53:43">qemu_get_be32</name><argument_list pos:start="53:44" pos:end="53:46">(<argument pos:start="53:45" pos:end="53:45"><expr pos:start="53:45" pos:end="53:45"><name pos:start="53:45" pos:end="53:45">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="55:9" pos:end="55:69">/* MAC_TABLE_ENTRIES may be different from the saved image */</comment>

        <if_stmt pos:start="57:9" pos:end="89:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:53">(<expr pos:start="57:13" pos:end="57:52"><name pos:start="57:13" pos:end="57:31"><name pos:start="57:13" pos:end="57:13">n</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:24">mac_table</name><operator pos:start="57:25" pos:end="57:25">.</operator><name pos:start="57:26" pos:end="57:31">in_use</name></name> <operator pos:start="57:33" pos:end="57:34">&lt;=</operator> <name pos:start="57:36" pos:end="57:52">MAC_TABLE_ENTRIES</name></expr>)</condition> <block pos:start="57:55" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:60">

            <expr_stmt pos:start="59:13" pos:end="61:60"><expr pos:start="59:13" pos:end="61:59"><call pos:start="59:13" pos:end="61:59"><name pos:start="59:13" pos:end="59:27">qemu_get_buffer</name><argument_list pos:start="59:28" pos:end="61:59">(<argument pos:start="59:29" pos:end="59:29"><expr pos:start="59:29" pos:end="59:29"><name pos:start="59:29" pos:end="59:29">f</name></expr></argument>, <argument pos:start="59:32" pos:end="59:48"><expr pos:start="59:32" pos:end="59:48"><name pos:start="59:32" pos:end="59:48"><name pos:start="59:32" pos:end="59:32">n</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:43">mac_table</name><operator pos:start="59:44" pos:end="59:44">.</operator><name pos:start="59:45" pos:end="59:48">macs</name></name></expr></argument>,

                            <argument pos:start="61:29" pos:end="61:58"><expr pos:start="61:29" pos:end="61:58"><name pos:start="61:29" pos:end="61:47"><name pos:start="61:29" pos:end="61:29">n</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:40">mac_table</name><operator pos:start="61:41" pos:end="61:41">.</operator><name pos:start="61:42" pos:end="61:47">in_use</name></name> <operator pos:start="61:49" pos:end="61:49">*</operator> <name pos:start="61:51" pos:end="61:58">ETH_ALEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="89:9">else <block pos:start="63:16" pos:end="89:9">{<block_content pos:start="65:13" pos:end="87:36">

            <decl_stmt pos:start="65:13" pos:end="65:22"><decl pos:start="65:13" pos:end="65:21"><type pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:19">int64_t</name></type> <name pos:start="65:21" pos:end="65:21">i</name></decl>;</decl_stmt>



            <comment type="block" pos:start="69:13" pos:end="77:15">/* Overflow detected - can happen if source has a larger MAC table.

             * We simply set overflow flag so there's no need to maintain the

             * table of addresses, discard them all.

             * Note: 64 bit math to avoid integer overflow.

             */</comment>

            <for pos:start="79:13" pos:end="83:13">for <control pos:start="79:17" pos:end="79:73">(<init pos:start="79:18" pos:end="79:23"><expr pos:start="79:18" pos:end="79:22"><name pos:start="79:18" pos:end="79:18">i</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>;</init> <condition pos:start="79:25" pos:end="79:68"><expr pos:start="79:25" pos:end="79:67"><name pos:start="79:25" pos:end="79:25">i</name> <operator pos:start="79:27" pos:end="79:27">&lt;</operator> <operator pos:start="79:29" pos:end="79:29">(</operator><name pos:start="79:30" pos:end="79:36">int64_t</name><operator pos:start="79:37" pos:end="79:37">)</operator><name pos:start="79:38" pos:end="79:56"><name pos:start="79:38" pos:end="79:38">n</name><operator pos:start="79:39" pos:end="79:40">-&gt;</operator><name pos:start="79:41" pos:end="79:49">mac_table</name><operator pos:start="79:50" pos:end="79:50">.</operator><name pos:start="79:51" pos:end="79:56">in_use</name></name> <operator pos:start="79:58" pos:end="79:58">*</operator> <name pos:start="79:60" pos:end="79:67">ETH_ALEN</name></expr>;</condition> <incr pos:start="79:70" pos:end="79:72"><expr pos:start="79:70" pos:end="79:72"><operator pos:start="79:70" pos:end="79:71">++</operator><name pos:start="79:72" pos:end="79:72">i</name></expr></incr>)</control> <block pos:start="79:75" pos:end="83:13">{<block_content pos:start="81:17" pos:end="81:33">

                <expr_stmt pos:start="81:17" pos:end="81:33"><expr pos:start="81:17" pos:end="81:32"><call pos:start="81:17" pos:end="81:32"><name pos:start="81:17" pos:end="81:29">qemu_get_byte</name><argument_list pos:start="81:30" pos:end="81:32">(<argument pos:start="81:31" pos:end="81:31"><expr pos:start="81:31" pos:end="81:31"><name pos:start="81:31" pos:end="81:31">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="85:13" pos:end="85:72"><expr pos:start="85:13" pos:end="85:71"><name pos:start="85:13" pos:end="85:39"><name pos:start="85:13" pos:end="85:13">n</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:24">mac_table</name><operator pos:start="85:25" pos:end="85:25">.</operator><name pos:start="85:26" pos:end="85:39">multi_overflow</name></name> <operator pos:start="85:41" pos:end="85:41">=</operator> <name pos:start="85:43" pos:end="85:67"><name pos:start="85:43" pos:end="85:43">n</name><operator pos:start="85:44" pos:end="85:45">-&gt;</operator><name pos:start="85:46" pos:end="85:54">mac_table</name><operator pos:start="85:55" pos:end="85:55">.</operator><name pos:start="85:56" pos:end="85:67">uni_overflow</name></name> <operator pos:start="85:69" pos:end="85:69">=</operator> <literal type="number" pos:start="85:71" pos:end="85:71">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:36"><expr pos:start="87:13" pos:end="87:35"><name pos:start="87:13" pos:end="87:31"><name pos:start="87:13" pos:end="87:13">n</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:24">mac_table</name><operator pos:start="87:25" pos:end="87:25">.</operator><name pos:start="87:26" pos:end="87:31">in_use</name></name> <operator pos:start="87:33" pos:end="87:33">=</operator> <literal type="number" pos:start="87:35" pos:end="87:35">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

 

    <if_stmt pos:start="95:5" pos:end="97:63"><if pos:start="95:5" pos:end="97:63">if <condition pos:start="95:8" pos:end="95:24">(<expr pos:start="95:9" pos:end="95:23"><name pos:start="95:9" pos:end="95:18">version_id</name> <operator pos:start="95:20" pos:end="95:21">&gt;=</operator> <literal type="number" pos:start="95:23" pos:end="95:23">6</literal></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:63"><block_content pos:start="97:9" pos:end="97:63">

        <expr_stmt pos:start="97:9" pos:end="97:63"><expr pos:start="97:9" pos:end="97:62"><call pos:start="97:9" pos:end="97:62"><name pos:start="97:9" pos:end="97:23">qemu_get_buffer</name><argument_list pos:start="97:24" pos:end="97:62">(<argument pos:start="97:25" pos:end="97:25"><expr pos:start="97:25" pos:end="97:25"><name pos:start="97:25" pos:end="97:25">f</name></expr></argument>, <argument pos:start="97:28" pos:end="97:46"><expr pos:start="97:28" pos:end="97:46"><operator pos:start="97:28" pos:end="97:28">(</operator><name pos:start="97:29" pos:end="97:35">uint8_t</name> <operator pos:start="97:37" pos:end="97:37">*</operator><operator pos:start="97:38" pos:end="97:38">)</operator><name pos:start="97:39" pos:end="97:46"><name pos:start="97:39" pos:end="97:39">n</name><operator pos:start="97:40" pos:end="97:41">-&gt;</operator><name pos:start="97:42" pos:end="97:46">vlans</name></name></expr></argument>, <argument pos:start="97:49" pos:end="97:61"><expr pos:start="97:49" pos:end="97:61"><name pos:start="97:49" pos:end="97:56">MAX_VLAN</name> <operator pos:start="97:58" pos:end="97:59">&gt;&gt;</operator> <literal type="number" pos:start="97:61" pos:end="97:61">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="111:5"><if pos:start="101:5" pos:end="111:5">if <condition pos:start="101:8" pos:end="101:24">(<expr pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:18">version_id</name> <operator pos:start="101:20" pos:end="101:21">&gt;=</operator> <literal type="number" pos:start="101:23" pos:end="101:23">7</literal></expr>)</condition> <block pos:start="101:26" pos:end="111:5">{<block_content pos:start="103:9" pos:end="109:9">

        <if_stmt pos:start="103:9" pos:end="109:9"><if pos:start="103:9" pos:end="109:9">if <condition pos:start="103:12" pos:end="103:54">(<expr pos:start="103:13" pos:end="103:53"><call pos:start="103:13" pos:end="103:28"><name pos:start="103:13" pos:end="103:25">qemu_get_be32</name><argument_list pos:start="103:26" pos:end="103:28">(<argument pos:start="103:27" pos:end="103:27"><expr pos:start="103:27" pos:end="103:27"><name pos:start="103:27" pos:end="103:27">f</name></expr></argument>)</argument_list></call> <operator pos:start="103:30" pos:end="103:31">&amp;&amp;</operator> <operator pos:start="103:33" pos:end="103:33">!</operator><call pos:start="103:34" pos:end="103:53"><name pos:start="103:34" pos:end="103:50">peer_has_vnet_hdr</name><argument_list pos:start="103:51" pos:end="103:53">(<argument pos:start="103:52" pos:end="103:52"><expr pos:start="103:52" pos:end="103:52"><name pos:start="103:52" pos:end="103:52">n</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:56" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:22">

            <expr_stmt pos:start="105:13" pos:end="105:73"><expr pos:start="105:13" pos:end="105:72"><call pos:start="105:13" pos:end="105:72"><name pos:start="105:13" pos:end="105:24">error_report</name><argument_list pos:start="105:25" pos:end="105:72">(<argument pos:start="105:26" pos:end="105:71"><expr pos:start="105:26" pos:end="105:71"><literal type="string" pos:start="105:26" pos:end="105:71">"virtio-net: saved image requires vnet_hdr=on"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="107:13" pos:end="107:22">return <expr pos:start="107:20" pos:end="107:21"><operator pos:start="107:20" pos:end="107:20">-</operator><literal type="number" pos:start="107:21" pos:end="107:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:24">(<expr pos:start="115:9" pos:end="115:23"><name pos:start="115:9" pos:end="115:18">version_id</name> <operator pos:start="115:20" pos:end="115:21">&gt;=</operator> <literal type="number" pos:start="115:23" pos:end="115:23">9</literal></expr>)</condition> <block pos:start="115:26" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:53">

        <expr_stmt pos:start="117:9" pos:end="117:55"><expr pos:start="117:9" pos:end="117:54"><name pos:start="117:9" pos:end="117:35"><name pos:start="117:9" pos:end="117:9">n</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:20">mac_table</name><operator pos:start="117:21" pos:end="117:21">.</operator><name pos:start="117:22" pos:end="117:35">multi_overflow</name></name> <operator pos:start="117:37" pos:end="117:37">=</operator> <call pos:start="117:39" pos:end="117:54"><name pos:start="117:39" pos:end="117:51">qemu_get_byte</name><argument_list pos:start="117:52" pos:end="117:54">(<argument pos:start="117:53" pos:end="117:53"><expr pos:start="117:53" pos:end="117:53"><name pos:start="117:53" pos:end="117:53">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:53"><expr pos:start="119:9" pos:end="119:52"><name pos:start="119:9" pos:end="119:33"><name pos:start="119:9" pos:end="119:9">n</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:20">mac_table</name><operator pos:start="119:21" pos:end="119:21">.</operator><name pos:start="119:22" pos:end="119:33">uni_overflow</name></name> <operator pos:start="119:35" pos:end="119:35">=</operator> <call pos:start="119:37" pos:end="119:52"><name pos:start="119:37" pos:end="119:49">qemu_get_byte</name><argument_list pos:start="119:50" pos:end="119:52">(<argument pos:start="119:51" pos:end="119:51"><expr pos:start="119:51" pos:end="119:51"><name pos:start="119:51" pos:end="119:51">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="125:5" pos:end="135:5"><if pos:start="125:5" pos:end="135:5">if <condition pos:start="125:8" pos:end="125:25">(<expr pos:start="125:9" pos:end="125:24"><name pos:start="125:9" pos:end="125:18">version_id</name> <operator pos:start="125:20" pos:end="125:21">&gt;=</operator> <literal type="number" pos:start="125:23" pos:end="125:24">10</literal></expr>)</condition> <block pos:start="125:27" pos:end="135:5">{<block_content pos:start="127:9" pos:end="133:38">

        <expr_stmt pos:start="127:9" pos:end="127:37"><expr pos:start="127:9" pos:end="127:36"><name pos:start="127:9" pos:end="127:17"><name pos:start="127:9" pos:end="127:9">n</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:17">alluni</name></name> <operator pos:start="127:19" pos:end="127:19">=</operator> <call pos:start="127:21" pos:end="127:36"><name pos:start="127:21" pos:end="127:33">qemu_get_byte</name><argument_list pos:start="127:34" pos:end="127:36">(<argument pos:start="127:35" pos:end="127:35"><expr pos:start="127:35" pos:end="127:35"><name pos:start="127:35" pos:end="127:35">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:38"><expr pos:start="129:9" pos:end="129:37"><name pos:start="129:9" pos:end="129:18"><name pos:start="129:9" pos:end="129:9">n</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:18">nomulti</name></name> <operator pos:start="129:20" pos:end="129:20">=</operator> <call pos:start="129:22" pos:end="129:37"><name pos:start="129:22" pos:end="129:34">qemu_get_byte</name><argument_list pos:start="129:35" pos:end="129:37">(<argument pos:start="129:36" pos:end="129:36"><expr pos:start="129:36" pos:end="129:36"><name pos:start="129:36" pos:end="129:36">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:36"><expr pos:start="131:9" pos:end="131:35"><name pos:start="131:9" pos:end="131:16"><name pos:start="131:9" pos:end="131:9">n</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:16">nouni</name></name> <operator pos:start="131:18" pos:end="131:18">=</operator> <call pos:start="131:20" pos:end="131:35"><name pos:start="131:20" pos:end="131:32">qemu_get_byte</name><argument_list pos:start="131:33" pos:end="131:35">(<argument pos:start="131:34" pos:end="131:34"><expr pos:start="131:34" pos:end="131:34"><name pos:start="131:34" pos:end="131:34">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:38"><expr pos:start="133:9" pos:end="133:37"><name pos:start="133:9" pos:end="133:18"><name pos:start="133:9" pos:end="133:9">n</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:18">nobcast</name></name> <operator pos:start="133:20" pos:end="133:20">=</operator> <call pos:start="133:22" pos:end="133:37"><name pos:start="133:22" pos:end="133:34">qemu_get_byte</name><argument_list pos:start="133:35" pos:end="133:37">(<argument pos:start="133:36" pos:end="133:36"><expr pos:start="133:36" pos:end="133:36"><name pos:start="133:36" pos:end="133:36">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="139:5" pos:end="149:5"><if pos:start="139:5" pos:end="149:5">if <condition pos:start="139:8" pos:end="139:25">(<expr pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:18">version_id</name> <operator pos:start="139:20" pos:end="139:21">&gt;=</operator> <literal type="number" pos:start="139:23" pos:end="139:24">11</literal></expr>)</condition> <block pos:start="139:27" pos:end="149:5">{<block_content pos:start="141:9" pos:end="147:9">

        <if_stmt pos:start="141:9" pos:end="147:9"><if pos:start="141:9" pos:end="147:9">if <condition pos:start="141:12" pos:end="141:49">(<expr pos:start="141:13" pos:end="141:48"><call pos:start="141:13" pos:end="141:28"><name pos:start="141:13" pos:end="141:25">qemu_get_byte</name><argument_list pos:start="141:26" pos:end="141:28">(<argument pos:start="141:27" pos:end="141:27"><expr pos:start="141:27" pos:end="141:27"><name pos:start="141:27" pos:end="141:27">f</name></expr></argument>)</argument_list></call> <operator pos:start="141:30" pos:end="141:31">&amp;&amp;</operator> <operator pos:start="141:33" pos:end="141:33">!</operator><call pos:start="141:34" pos:end="141:48"><name pos:start="141:34" pos:end="141:45">peer_has_ufo</name><argument_list pos:start="141:46" pos:end="141:48">(<argument pos:start="141:47" pos:end="141:47"><expr pos:start="141:47" pos:end="141:47"><name pos:start="141:47" pos:end="141:47">n</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="141:51" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:22">

            <expr_stmt pos:start="143:13" pos:end="143:79"><expr pos:start="143:13" pos:end="143:78"><call pos:start="143:13" pos:end="143:78"><name pos:start="143:13" pos:end="143:24">error_report</name><argument_list pos:start="143:25" pos:end="143:78">(<argument pos:start="143:26" pos:end="143:77"><expr pos:start="143:26" pos:end="143:77"><literal type="string" pos:start="143:26" pos:end="143:77">"virtio-net: saved image requires TUN_F_UFO support"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="145:13" pos:end="145:22">return <expr pos:start="145:20" pos:end="145:21"><operator pos:start="145:20" pos:end="145:20">-</operator><literal type="number" pos:start="145:21" pos:end="145:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="153:5" pos:end="183:5"><if pos:start="153:5" pos:end="183:5">if <condition pos:start="153:8" pos:end="153:26">(<expr pos:start="153:9" pos:end="153:25"><name pos:start="153:9" pos:end="153:21"><name pos:start="153:9" pos:end="153:9">n</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:21">max_queues</name></name> <operator pos:start="153:23" pos:end="153:23">&gt;</operator> <literal type="number" pos:start="153:25" pos:end="153:25">1</literal></expr>)</condition> <block pos:start="153:28" pos:end="183:5">{<block_content pos:start="155:9" pos:end="181:9">

        <if_stmt pos:start="155:9" pos:end="161:9"><if pos:start="155:9" pos:end="161:9">if <condition pos:start="155:12" pos:end="155:46">(<expr pos:start="155:13" pos:end="155:45"><name pos:start="155:13" pos:end="155:25"><name pos:start="155:13" pos:end="155:13">n</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:25">max_queues</name></name> <operator pos:start="155:27" pos:end="155:28">!=</operator> <call pos:start="155:30" pos:end="155:45"><name pos:start="155:30" pos:end="155:42">qemu_get_be16</name><argument_list pos:start="155:43" pos:end="155:45">(<argument pos:start="155:44" pos:end="155:44"><expr pos:start="155:44" pos:end="155:44"><name pos:start="155:44" pos:end="155:44">f</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="155:48" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:22">

            <expr_stmt pos:start="157:13" pos:end="157:62"><expr pos:start="157:13" pos:end="157:61"><call pos:start="157:13" pos:end="157:61"><name pos:start="157:13" pos:end="157:24">error_report</name><argument_list pos:start="157:25" pos:end="157:61">(<argument pos:start="157:26" pos:end="157:60"><expr pos:start="157:26" pos:end="157:60"><literal type="string" pos:start="157:26" pos:end="157:60">"virtio-net: different max_queues "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="159:13" pos:end="159:22">return <expr pos:start="159:20" pos:end="159:21"><operator pos:start="159:20" pos:end="159:20">-</operator><literal type="number" pos:start="159:21" pos:end="159:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="165:9" pos:end="165:42"><expr pos:start="165:9" pos:end="165:41"><name pos:start="165:9" pos:end="165:22"><name pos:start="165:9" pos:end="165:9">n</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:22">curr_queues</name></name> <operator pos:start="165:24" pos:end="165:24">=</operator> <call pos:start="165:26" pos:end="165:41"><name pos:start="165:26" pos:end="165:38">qemu_get_be16</name><argument_list pos:start="165:39" pos:end="165:41">(<argument pos:start="165:40" pos:end="165:40"><expr pos:start="165:40" pos:end="165:40"><name pos:start="165:40" pos:end="165:40">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="167:9" pos:end="175:9"><if pos:start="167:9" pos:end="175:9">if <condition pos:start="167:12" pos:end="167:43">(<expr pos:start="167:13" pos:end="167:42"><name pos:start="167:13" pos:end="167:26"><name pos:start="167:13" pos:end="167:13">n</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:26">curr_queues</name></name> <operator pos:start="167:28" pos:end="167:28">&gt;</operator> <name pos:start="167:30" pos:end="167:42"><name pos:start="167:30" pos:end="167:30">n</name><operator pos:start="167:31" pos:end="167:32">-&gt;</operator><name pos:start="167:33" pos:end="167:42">max_queues</name></name></expr>)</condition> <block pos:start="167:45" pos:end="175:9">{<block_content pos:start="169:13" pos:end="173:22">

            <expr_stmt pos:start="169:13" pos:end="171:56"><expr pos:start="169:13" pos:end="171:55"><call pos:start="169:13" pos:end="171:55"><name pos:start="169:13" pos:end="169:24">error_report</name><argument_list pos:start="169:25" pos:end="171:55">(<argument pos:start="169:26" pos:end="169:69"><expr pos:start="169:26" pos:end="169:69"><literal type="string" pos:start="169:26" pos:end="169:69">"virtio-net: curr_queues %x &gt; max_queues %x"</literal></expr></argument>,

                         <argument pos:start="171:26" pos:end="171:39"><expr pos:start="171:26" pos:end="171:39"><name pos:start="171:26" pos:end="171:39"><name pos:start="171:26" pos:end="171:26">n</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:39">curr_queues</name></name></expr></argument>, <argument pos:start="171:42" pos:end="171:54"><expr pos:start="171:42" pos:end="171:54"><name pos:start="171:42" pos:end="171:54"><name pos:start="171:42" pos:end="171:42">n</name><operator pos:start="171:43" pos:end="171:44">-&gt;</operator><name pos:start="171:45" pos:end="171:54">max_queues</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="173:13" pos:end="173:22">return <expr pos:start="173:20" pos:end="173:21"><operator pos:start="173:20" pos:end="173:20">-</operator><literal type="number" pos:start="173:21" pos:end="173:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <for pos:start="177:9" pos:end="181:9">for <control pos:start="177:13" pos:end="177:44">(<init pos:start="177:14" pos:end="177:19"><expr pos:start="177:14" pos:end="177:18"><name pos:start="177:14" pos:end="177:14">i</name> <operator pos:start="177:16" pos:end="177:16">=</operator> <literal type="number" pos:start="177:18" pos:end="177:18">1</literal></expr>;</init> <condition pos:start="177:21" pos:end="177:39"><expr pos:start="177:21" pos:end="177:38"><name pos:start="177:21" pos:end="177:21">i</name> <operator pos:start="177:23" pos:end="177:23">&lt;</operator> <name pos:start="177:25" pos:end="177:38"><name pos:start="177:25" pos:end="177:25">n</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:38">curr_queues</name></name></expr>;</condition> <incr pos:start="177:41" pos:end="177:43"><expr pos:start="177:41" pos:end="177:43"><name pos:start="177:41" pos:end="177:41">i</name><operator pos:start="177:42" pos:end="177:43">++</operator></expr></incr>)</control> <block pos:start="177:46" pos:end="181:9">{<block_content pos:start="179:13" pos:end="179:52">

            <expr_stmt pos:start="179:13" pos:end="179:52"><expr pos:start="179:13" pos:end="179:51"><name pos:start="179:13" pos:end="179:21"><name pos:start="179:13" pos:end="179:13">n</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:18">vqs</name><index pos:start="179:19" pos:end="179:21">[<expr pos:start="179:20" pos:end="179:20"><name pos:start="179:20" pos:end="179:20">i</name></expr>]</index></name><operator pos:start="179:22" pos:end="179:22">.</operator><name pos:start="179:23" pos:end="179:32">tx_waiting</name> <operator pos:start="179:34" pos:end="179:34">=</operator> <call pos:start="179:36" pos:end="179:51"><name pos:start="179:36" pos:end="179:48">qemu_get_be32</name><argument_list pos:start="179:49" pos:end="179:51">(<argument pos:start="179:50" pos:end="179:50"><expr pos:start="179:50" pos:end="179:50"><name pos:start="179:50" pos:end="179:50">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="187:5" pos:end="195:5"><if pos:start="187:5" pos:end="191:5">if <condition pos:start="187:8" pos:end="187:67">(<expr pos:start="187:9" pos:end="187:66"><call pos:start="187:9" pos:end="187:66"><name pos:start="187:9" pos:end="187:26">virtio_has_feature</name><argument_list pos:start="187:27" pos:end="187:66">(<argument pos:start="187:28" pos:end="187:31"><expr pos:start="187:28" pos:end="187:31"><name pos:start="187:28" pos:end="187:31">vdev</name></expr></argument>, <argument pos:start="187:34" pos:end="187:65"><expr pos:start="187:34" pos:end="187:65"><name pos:start="187:34" pos:end="187:65">VIRTIO_NET_F_CTRL_GUEST_OFFLOADS</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="187:69" pos:end="191:5">{<block_content pos:start="189:9" pos:end="189:50">

        <expr_stmt pos:start="189:9" pos:end="189:50"><expr pos:start="189:9" pos:end="189:49"><name pos:start="189:9" pos:end="189:30"><name pos:start="189:9" pos:end="189:9">n</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:30">curr_guest_offloads</name></name> <operator pos:start="189:32" pos:end="189:32">=</operator> <call pos:start="189:34" pos:end="189:49"><name pos:start="189:34" pos:end="189:46">qemu_get_be64</name><argument_list pos:start="189:47" pos:end="189:49">(<argument pos:start="189:48" pos:end="189:48"><expr pos:start="189:48" pos:end="189:48"><name pos:start="189:48" pos:end="189:48">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="191:7" pos:end="195:5">else <block pos:start="191:12" pos:end="195:5">{<block_content pos:start="193:9" pos:end="193:72">

        <expr_stmt pos:start="193:9" pos:end="193:72"><expr pos:start="193:9" pos:end="193:71"><name pos:start="193:9" pos:end="193:30"><name pos:start="193:9" pos:end="193:9">n</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:30">curr_guest_offloads</name></name> <operator pos:start="193:32" pos:end="193:32">=</operator> <call pos:start="193:34" pos:end="193:71"><name pos:start="193:34" pos:end="193:68">virtio_net_supported_guest_offloads</name><argument_list pos:start="193:69" pos:end="193:71">(<argument pos:start="193:70" pos:end="193:70"><expr pos:start="193:70" pos:end="193:70"><name pos:start="193:70" pos:end="193:70">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="199:5" pos:end="203:5"><if pos:start="199:5" pos:end="203:5">if <condition pos:start="199:8" pos:end="199:29">(<expr pos:start="199:9" pos:end="199:28"><call pos:start="199:9" pos:end="199:28"><name pos:start="199:9" pos:end="199:25">peer_has_vnet_hdr</name><argument_list pos:start="199:26" pos:end="199:28">(<argument pos:start="199:27" pos:end="199:27"><expr pos:start="199:27" pos:end="199:27"><name pos:start="199:27" pos:end="199:27">n</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="199:31" pos:end="203:5">{<block_content pos:start="201:9" pos:end="201:43">

        <expr_stmt pos:start="201:9" pos:end="201:43"><expr pos:start="201:9" pos:end="201:42"><call pos:start="201:9" pos:end="201:42"><name pos:start="201:9" pos:end="201:39">virtio_net_apply_guest_offloads</name><argument_list pos:start="201:40" pos:end="201:42">(<argument pos:start="201:41" pos:end="201:41"><expr pos:start="201:41" pos:end="201:41"><name pos:start="201:41" pos:end="201:41">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="207:5" pos:end="207:29"><expr pos:start="207:5" pos:end="207:28"><call pos:start="207:5" pos:end="207:28"><name pos:start="207:5" pos:end="207:25">virtio_net_set_queues</name><argument_list pos:start="207:26" pos:end="207:28">(<argument pos:start="207:27" pos:end="207:27"><expr pos:start="207:27" pos:end="207:27"><name pos:start="207:27" pos:end="207:27">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="211:5" pos:end="211:64">/* Find the first multicast entry in the saved MAC filter */</comment>

    <for pos:start="213:5" pos:end="221:5">for <control pos:start="213:9" pos:end="213:45">(<init pos:start="213:10" pos:end="213:15"><expr pos:start="213:10" pos:end="213:14"><name pos:start="213:10" pos:end="213:10">i</name> <operator pos:start="213:12" pos:end="213:12">=</operator> <literal type="number" pos:start="213:14" pos:end="213:14">0</literal></expr>;</init> <condition pos:start="213:17" pos:end="213:40"><expr pos:start="213:17" pos:end="213:39"><name pos:start="213:17" pos:end="213:17">i</name> <operator pos:start="213:19" pos:end="213:19">&lt;</operator> <name pos:start="213:21" pos:end="213:39"><name pos:start="213:21" pos:end="213:21">n</name><operator pos:start="213:22" pos:end="213:23">-&gt;</operator><name pos:start="213:24" pos:end="213:32">mac_table</name><operator pos:start="213:33" pos:end="213:33">.</operator><name pos:start="213:34" pos:end="213:39">in_use</name></name></expr>;</condition> <incr pos:start="213:42" pos:end="213:44"><expr pos:start="213:42" pos:end="213:44"><name pos:start="213:42" pos:end="213:42">i</name><operator pos:start="213:43" pos:end="213:44">++</operator></expr></incr>)</control> <block pos:start="213:47" pos:end="221:5">{<block_content pos:start="215:9" pos:end="219:9">

        <if_stmt pos:start="215:9" pos:end="219:9"><if pos:start="215:9" pos:end="219:9">if <condition pos:start="215:12" pos:end="215:48">(<expr pos:start="215:13" pos:end="215:47"><name pos:start="215:13" pos:end="215:43"><name pos:start="215:13" pos:end="215:13">n</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:24">mac_table</name><operator pos:start="215:25" pos:end="215:25">.</operator><name pos:start="215:26" pos:end="215:29">macs</name><index pos:start="215:30" pos:end="215:43">[<expr pos:start="215:31" pos:end="215:42"><name pos:start="215:31" pos:end="215:31">i</name> <operator pos:start="215:33" pos:end="215:33">*</operator> <name pos:start="215:35" pos:end="215:42">ETH_ALEN</name></expr>]</index></name> <operator pos:start="215:45" pos:end="215:45">&amp;</operator> <literal type="number" pos:start="215:47" pos:end="215:47">1</literal></expr>)</condition> <block pos:start="215:50" pos:end="219:9">{<block_content pos:start="217:13" pos:end="217:18">

            <break pos:start="217:13" pos:end="217:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="223:5" pos:end="223:33"><expr pos:start="223:5" pos:end="223:32"><name pos:start="223:5" pos:end="223:28"><name pos:start="223:5" pos:end="223:5">n</name><operator pos:start="223:6" pos:end="223:7">-&gt;</operator><name pos:start="223:8" pos:end="223:16">mac_table</name><operator pos:start="223:17" pos:end="223:17">.</operator><name pos:start="223:18" pos:end="223:28">first_multi</name></name> <operator pos:start="223:30" pos:end="223:30">=</operator> <name pos:start="223:32" pos:end="223:32">i</name></expr>;</expr_stmt>



    <comment type="block" pos:start="227:5" pos:end="229:41">/* nc.link_down can't be migrated, so infer link_down according

     * to link status bit in n-&gt;status */</comment>

    <expr_stmt pos:start="231:5" pos:end="231:56"><expr pos:start="231:5" pos:end="231:55"><name pos:start="231:5" pos:end="231:13">link_down</name> <operator pos:start="231:15" pos:end="231:15">=</operator> <operator pos:start="231:17" pos:end="231:17">(</operator><name pos:start="231:18" pos:end="231:26"><name pos:start="231:18" pos:end="231:18">n</name><operator pos:start="231:19" pos:end="231:20">-&gt;</operator><name pos:start="231:21" pos:end="231:26">status</name></name> <operator pos:start="231:28" pos:end="231:28">&amp;</operator> <name pos:start="231:30" pos:end="231:49">VIRTIO_NET_S_LINK_UP</name><operator pos:start="231:50" pos:end="231:50">)</operator> <operator pos:start="231:52" pos:end="231:53">==</operator> <literal type="number" pos:start="231:55" pos:end="231:55">0</literal></expr>;</expr_stmt>

    <for pos:start="233:5" pos:end="237:5">for <control pos:start="233:9" pos:end="233:39">(<init pos:start="233:10" pos:end="233:15"><expr pos:start="233:10" pos:end="233:14"><name pos:start="233:10" pos:end="233:10">i</name> <operator pos:start="233:12" pos:end="233:12">=</operator> <literal type="number" pos:start="233:14" pos:end="233:14">0</literal></expr>;</init> <condition pos:start="233:17" pos:end="233:34"><expr pos:start="233:17" pos:end="233:33"><name pos:start="233:17" pos:end="233:17">i</name> <operator pos:start="233:19" pos:end="233:19">&lt;</operator> <name pos:start="233:21" pos:end="233:33"><name pos:start="233:21" pos:end="233:21">n</name><operator pos:start="233:22" pos:end="233:23">-&gt;</operator><name pos:start="233:24" pos:end="233:33">max_queues</name></name></expr>;</condition> <incr pos:start="233:36" pos:end="233:38"><expr pos:start="233:36" pos:end="233:38"><name pos:start="233:36" pos:end="233:36">i</name><operator pos:start="233:37" pos:end="233:38">++</operator></expr></incr>)</control> <block pos:start="233:41" pos:end="237:5">{<block_content pos:start="235:9" pos:end="235:60">

        <expr_stmt pos:start="235:9" pos:end="235:60"><expr pos:start="235:9" pos:end="235:59"><call pos:start="235:9" pos:end="235:36"><name pos:start="235:9" pos:end="235:25">qemu_get_subqueue</name><argument_list pos:start="235:26" pos:end="235:36">(<argument pos:start="235:27" pos:end="235:32"><expr pos:start="235:27" pos:end="235:32"><name pos:start="235:27" pos:end="235:32"><name pos:start="235:27" pos:end="235:27">n</name><operator pos:start="235:28" pos:end="235:29">-&gt;</operator><name pos:start="235:30" pos:end="235:32">nic</name></name></expr></argument>, <argument pos:start="235:35" pos:end="235:35"><expr pos:start="235:35" pos:end="235:35"><name pos:start="235:35" pos:end="235:35">i</name></expr></argument>)</argument_list></call><operator pos:start="235:37" pos:end="235:38">-&gt;</operator><name pos:start="235:39" pos:end="235:47">link_down</name> <operator pos:start="235:49" pos:end="235:49">=</operator> <name pos:start="235:51" pos:end="235:59">link_down</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="241:5" pos:end="249:5"><if pos:start="241:5" pos:end="249:5">if <condition pos:start="241:8" pos:end="243:55">(<expr pos:start="241:9" pos:end="243:54"><call pos:start="241:9" pos:end="241:61"><name pos:start="241:9" pos:end="241:26">virtio_has_feature</name><argument_list pos:start="241:27" pos:end="241:61">(<argument pos:start="241:28" pos:end="241:31"><expr pos:start="241:28" pos:end="241:31"><name pos:start="241:28" pos:end="241:31">vdev</name></expr></argument>, <argument pos:start="241:34" pos:end="241:60"><expr pos:start="241:34" pos:end="241:60"><name pos:start="241:34" pos:end="241:60">VIRTIO_NET_F_GUEST_ANNOUNCE</name></expr></argument>)</argument_list></call> <operator pos:start="241:63" pos:end="241:64">&amp;&amp;</operator>

        <call pos:start="243:9" pos:end="243:54"><name pos:start="243:9" pos:end="243:26">virtio_has_feature</name><argument_list pos:start="243:27" pos:end="243:54">(<argument pos:start="243:28" pos:end="243:31"><expr pos:start="243:28" pos:end="243:31"><name pos:start="243:28" pos:end="243:31">vdev</name></expr></argument>, <argument pos:start="243:34" pos:end="243:53"><expr pos:start="243:34" pos:end="243:53"><name pos:start="243:34" pos:end="243:53">VIRTIO_NET_F_CTRL_VQ</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="243:57" pos:end="249:5">{<block_content pos:start="245:9" pos:end="247:76">

        <expr_stmt pos:start="245:9" pos:end="245:51"><expr pos:start="245:9" pos:end="245:50"><name pos:start="245:9" pos:end="245:27"><name pos:start="245:9" pos:end="245:9">n</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:27">announce_counter</name></name> <operator pos:start="245:29" pos:end="245:29">=</operator> <name pos:start="245:31" pos:end="245:50">SELF_ANNOUNCE_ROUNDS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:76"><expr pos:start="247:9" pos:end="247:75"><call pos:start="247:9" pos:end="247:75"><name pos:start="247:9" pos:end="247:17">timer_mod</name><argument_list pos:start="247:18" pos:end="247:75">(<argument pos:start="247:19" pos:end="247:35"><expr pos:start="247:19" pos:end="247:35"><name pos:start="247:19" pos:end="247:35"><name pos:start="247:19" pos:end="247:19">n</name><operator pos:start="247:20" pos:end="247:21">-&gt;</operator><name pos:start="247:22" pos:end="247:35">announce_timer</name></name></expr></argument>, <argument pos:start="247:38" pos:end="247:74"><expr pos:start="247:38" pos:end="247:74"><call pos:start="247:38" pos:end="247:74"><name pos:start="247:38" pos:end="247:54">qemu_clock_get_ms</name><argument_list pos:start="247:55" pos:end="247:74">(<argument pos:start="247:56" pos:end="247:73"><expr pos:start="247:56" pos:end="247:73"><name pos:start="247:56" pos:end="247:73">QEMU_CLOCK_VIRTUAL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="253:5" pos:end="253:13">return <expr pos:start="253:12" pos:end="253:12"><literal type="number" pos:start="253:12" pos:end="253:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
