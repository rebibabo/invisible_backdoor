<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1015.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">fill_slice_long</name><parameter_list pos:start="1:28" pos:end="3:61">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:78"><decl pos:start="1:52" pos:end="1:78"><type pos:start="1:52" pos:end="1:78"><name pos:start="1:52" pos:end="1:71">DXVA_Slice_H264_Long</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:78">slice</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:45"><decl pos:start="3:29" pos:end="3:45"><type pos:start="3:29" pos:end="3:45"><name pos:start="3:29" pos:end="3:36">unsigned</name></type> <name pos:start="3:38" pos:end="3:45">position</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:60"><decl pos:start="3:48" pos:end="3:60"><type pos:start="3:48" pos:end="3:60"><name pos:start="3:48" pos:end="3:55">unsigned</name></type> <name pos:start="3:57" pos:end="3:60">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="149:1">{<block_content pos:start="7:5" pos:end="147:43">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:23"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:21">H264Context</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">h</name> <init pos:start="7:26" pos:end="7:43">= <expr pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:32">avctx</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:23">dxva_context</name></name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:28">ctx</name> <init pos:start="9:30" pos:end="9:53">= <expr pos:start="9:32" pos:end="9:53"><name pos:start="9:32" pos:end="9:53"><name pos:start="9:32" pos:end="9:36">avctx</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:53">hwaccel_context</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:17">list</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:37"><expr pos:start="15:5" pos:end="15:36"><call pos:start="15:5" pos:end="15:36"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:36">(<argument pos:start="15:12" pos:end="15:16"><expr pos:start="15:12" pos:end="15:16"><name pos:start="15:12" pos:end="15:16">slice</name></expr></argument>, <argument pos:start="15:19" pos:end="15:19"><expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr></argument>, <argument pos:start="15:22" pos:end="15:35"><expr pos:start="15:22" pos:end="15:35"><sizeof pos:start="15:22" pos:end="15:35">sizeof<argument_list pos:start="15:28" pos:end="15:35">(<argument pos:start="15:29" pos:end="15:34"><expr pos:start="15:29" pos:end="15:34"><operator pos:start="15:29" pos:end="15:29">*</operator><name pos:start="15:30" pos:end="15:34">slice</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:44"><expr pos:start="17:5" pos:end="17:43"><name pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:9">slice</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:32">BSNALunitDataLocation</name></name> <operator pos:start="17:34" pos:end="17:34">=</operator> <name pos:start="17:36" pos:end="17:43">position</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:40"><expr pos:start="19:5" pos:end="19:39"><name pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:9">slice</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:29">SliceBytesInBuffer</name></name>    <operator pos:start="19:34" pos:end="19:34">=</operator> <name pos:start="19:36" pos:end="19:39">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:9">slice</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:28">wBadSliceChopping</name></name>     <operator pos:start="21:34" pos:end="21:34">=</operator> <literal type="number" pos:start="21:36" pos:end="21:36">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:98"><expr pos:start="25:5" pos:end="25:97"><name pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:9">slice</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:28">first_mb_in_slice</name></name>     <operator pos:start="25:34" pos:end="25:34">=</operator> <operator pos:start="25:36" pos:end="25:36">(</operator><name pos:start="25:37" pos:end="25:43"><name pos:start="25:37" pos:end="25:37">h</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:43">mb_y</name></name> <operator pos:start="25:45" pos:end="25:46">&gt;&gt;</operator> <call pos:start="25:48" pos:end="25:72"><name pos:start="25:48" pos:end="25:69">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="25:70" pos:end="25:72">(<argument pos:start="25:71" pos:end="25:71"><expr pos:start="25:71" pos:end="25:71"><name pos:start="25:71" pos:end="25:71">h</name></expr></argument>)</argument_list></call><operator pos:start="25:73" pos:end="25:73">)</operator> <operator pos:start="25:75" pos:end="25:75">*</operator> <name pos:start="25:77" pos:end="25:87"><name pos:start="25:77" pos:end="25:77">h</name><operator pos:start="25:78" pos:end="25:79">-&gt;</operator><name pos:start="25:80" pos:end="25:87">mb_width</name></name> <operator pos:start="25:89" pos:end="25:89">+</operator> <name pos:start="25:91" pos:end="25:97"><name pos:start="25:91" pos:end="25:91">h</name><operator pos:start="25:92" pos:end="25:93">-&gt;</operator><name pos:start="25:94" pos:end="25:97">mb_x</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:9">slice</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:25">NumMbsForSlice</name></name>        <operator pos:start="27:34" pos:end="27:34">=</operator> <literal type="number" pos:start="27:36" pos:end="27:36">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="27:39" pos:end="27:81">/* XXX it is set once we have all slices */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:58"><expr pos:start="29:5" pos:end="29:57"><name pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:9">slice</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:31">BitOffsetToSliceData</name></name>  <operator pos:start="29:34" pos:end="29:34">=</operator> <call pos:start="29:36" pos:end="29:57"><name pos:start="29:36" pos:end="29:49">get_bits_count</name><argument_list pos:start="29:50" pos:end="29:57">(<argument pos:start="29:51" pos:end="29:56"><expr pos:start="29:51" pos:end="29:56"><operator pos:start="29:51" pos:end="29:51">&amp;</operator><name pos:start="29:52" pos:end="29:56"><name pos:start="29:52" pos:end="29:52">h</name><operator pos:start="29:53" pos:end="29:54">-&gt;</operator><name pos:start="29:55" pos:end="29:56">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:61"><expr pos:start="31:5" pos:end="31:60"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:9">slice</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:21">slice_type</name></name>            <operator pos:start="31:34" pos:end="31:34">=</operator> <call pos:start="31:36" pos:end="31:60"><name pos:start="31:36" pos:end="31:57">ff_h264_get_slice_type</name><argument_list pos:start="31:58" pos:end="31:60">(<argument pos:start="31:59" pos:end="31:59"><expr pos:start="31:59" pos:end="31:59"><name pos:start="31:59" pos:end="31:59">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:31"><if pos:start="33:5" pos:end="35:31">if <condition pos:start="33:8" pos:end="33:28">(<expr pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:9">h</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:27">slice_type_fixed</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:31"><block_content pos:start="35:9" pos:end="35:31">

        <expr_stmt pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:13">slice</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:25">slice_type</name></name> <operator pos:start="35:27" pos:end="35:28">+=</operator> <literal type="number" pos:start="35:30" pos:end="35:30">5</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:68"><expr pos:start="37:5" pos:end="37:67"><name pos:start="37:5" pos:end="37:33"><name pos:start="37:5" pos:end="37:9">slice</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:33">luma_log2_weight_denom</name></name>       <operator pos:start="37:41" pos:end="37:41">=</operator> <name pos:start="37:43" pos:end="37:67"><name pos:start="37:43" pos:end="37:43">h</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:67">luma_log2_weight_denom</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:70"><expr pos:start="39:5" pos:end="39:69"><name pos:start="39:5" pos:end="39:35"><name pos:start="39:5" pos:end="39:9">slice</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:35">chroma_log2_weight_denom</name></name>     <operator pos:start="39:41" pos:end="39:41">=</operator> <name pos:start="39:43" pos:end="39:69"><name pos:start="39:43" pos:end="39:43">h</name><operator pos:start="39:44" pos:end="39:45">-&gt;</operator><name pos:start="39:46" pos:end="39:69">chroma_log2_weight_denom</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:66"><if pos:start="41:5" pos:end="43:66">if <condition pos:start="41:8" pos:end="41:26">(<expr pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:9">h</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:21">list_count</name></name> <operator pos:start="41:23" pos:end="41:23">&gt;</operator> <literal type="number" pos:start="41:25" pos:end="41:25">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:66"><block_content pos:start="43:9" pos:end="43:66">

        <expr_stmt pos:start="43:9" pos:end="43:66"><expr pos:start="43:9" pos:end="43:65"><name pos:start="43:9" pos:end="43:43"><name pos:start="43:9" pos:end="43:13">slice</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:43">num_ref_idx_l0_active_minus1</name></name> <operator pos:start="43:45" pos:end="43:45">=</operator> <name pos:start="43:47" pos:end="43:61"><name pos:start="43:47" pos:end="43:47">h</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:58">ref_count</name><index pos:start="43:59" pos:end="43:61">[<expr pos:start="43:60" pos:end="43:60"><literal type="number" pos:start="43:60" pos:end="43:60">0</literal></expr>]</index></name> <operator pos:start="43:63" pos:end="43:63">-</operator> <literal type="number" pos:start="43:65" pos:end="43:65">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="47:66"><if pos:start="45:5" pos:end="47:66">if <condition pos:start="45:8" pos:end="45:26">(<expr pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:9">h</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:21">list_count</name></name> <operator pos:start="45:23" pos:end="45:23">&gt;</operator> <literal type="number" pos:start="45:25" pos:end="45:25">1</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:66"><block_content pos:start="47:9" pos:end="47:66">

        <expr_stmt pos:start="47:9" pos:end="47:66"><expr pos:start="47:9" pos:end="47:65"><name pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:13">slice</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:43">num_ref_idx_l1_active_minus1</name></name> <operator pos:start="47:45" pos:end="47:45">=</operator> <name pos:start="47:47" pos:end="47:61"><name pos:start="47:47" pos:end="47:47">h</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:58">ref_count</name><index pos:start="47:59" pos:end="47:61">[<expr pos:start="47:60" pos:end="47:60"><literal type="number" pos:start="47:60" pos:end="47:60">1</literal></expr>]</index></name> <operator pos:start="47:63" pos:end="47:63">-</operator> <literal type="number" pos:start="47:65" pos:end="47:65">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:71"><expr pos:start="49:5" pos:end="49:70"><name pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:9">slice</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:37">slice_alpha_c0_offset_div2</name></name>   <operator pos:start="49:41" pos:end="49:41">=</operator> <name pos:start="49:43" pos:end="49:66"><name pos:start="49:43" pos:end="49:43">h</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:66">slice_alpha_c0_offset</name></name> <operator pos:start="49:68" pos:end="49:68">/</operator> <literal type="number" pos:start="49:70" pos:end="49:70">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:71"><expr pos:start="51:5" pos:end="51:70"><name pos:start="51:5" pos:end="51:33"><name pos:start="51:5" pos:end="51:9">slice</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:33">slice_beta_offset_div2</name></name>       <operator pos:start="51:41" pos:end="51:41">=</operator> <name pos:start="51:43" pos:end="51:62"><name pos:start="51:43" pos:end="51:43">h</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:62">slice_beta_offset</name></name>     <operator pos:start="51:68" pos:end="51:68">/</operator> <literal type="number" pos:start="51:70" pos:end="51:70">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:44"><expr pos:start="53:5" pos:end="53:43"><name pos:start="53:5" pos:end="53:24"><name pos:start="53:5" pos:end="53:9">slice</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:24">Reserved8Bits</name></name>                <operator pos:start="53:41" pos:end="53:41">=</operator> <literal type="number" pos:start="53:43" pos:end="53:43">0</literal></expr>;</expr_stmt>



    <for pos:start="57:5" pos:end="125:5">for <control pos:start="57:9" pos:end="57:36">(<init pos:start="57:10" pos:end="57:18"><expr pos:start="57:10" pos:end="57:17"><name pos:start="57:10" pos:end="57:13">list</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <literal type="number" pos:start="57:17" pos:end="57:17">0</literal></expr>;</init> <condition pos:start="57:20" pos:end="57:28"><expr pos:start="57:20" pos:end="57:27"><name pos:start="57:20" pos:end="57:23">list</name> <operator pos:start="57:25" pos:end="57:25">&lt;</operator> <literal type="number" pos:start="57:27" pos:end="57:27">2</literal></expr>;</condition> <incr pos:start="57:30" pos:end="57:35"><expr pos:start="57:30" pos:end="57:35"><name pos:start="57:30" pos:end="57:33">list</name><operator pos:start="57:34" pos:end="57:35">++</operator></expr></incr>)</control> <block pos:start="57:38" pos:end="125:5">{<block_content pos:start="59:9" pos:end="123:9">

        <decl_stmt pos:start="59:9" pos:end="59:19"><decl pos:start="59:9" pos:end="59:18"><type pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:16">unsigned</name></type> <name pos:start="59:18" pos:end="59:18">i</name></decl>;</decl_stmt>

        <for pos:start="61:9" pos:end="123:9">for <control pos:start="61:13" pos:end="61:69">(<init pos:start="61:14" pos:end="61:19"><expr pos:start="61:14" pos:end="61:18"><name pos:start="61:14" pos:end="61:14">i</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>;</init> <condition pos:start="61:21" pos:end="61:64"><expr pos:start="61:21" pos:end="61:63"><name pos:start="61:21" pos:end="61:21">i</name> <operator pos:start="61:23" pos:end="61:23">&lt;</operator> <call pos:start="61:25" pos:end="61:63"><name pos:start="61:25" pos:end="61:38">FF_ARRAY_ELEMS</name><argument_list pos:start="61:39" pos:end="61:63">(<argument pos:start="61:40" pos:end="61:62"><expr pos:start="61:40" pos:end="61:62"><name pos:start="61:40" pos:end="61:62"><name pos:start="61:40" pos:end="61:44">slice</name><operator pos:start="61:45" pos:end="61:46">-&gt;</operator><name pos:start="61:47" pos:end="61:56">RefPicList</name><index pos:start="61:57" pos:end="61:62">[<expr pos:start="61:58" pos:end="61:61"><name pos:start="61:58" pos:end="61:61">list</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="61:66" pos:end="61:68"><expr pos:start="61:66" pos:end="61:68"><name pos:start="61:66" pos:end="61:66">i</name><operator pos:start="61:67" pos:end="61:68">++</operator></expr></incr>)</control> <block pos:start="61:71" pos:end="123:9">{<block_content pos:start="63:13" pos:end="121:13">

            <if_stmt pos:start="63:13" pos:end="121:13"><if pos:start="63:13" pos:end="107:13">if <condition pos:start="63:16" pos:end="63:63">(<expr pos:start="63:17" pos:end="63:62"><name pos:start="63:17" pos:end="63:20">list</name> <operator pos:start="63:22" pos:end="63:22">&lt;</operator> <name pos:start="63:24" pos:end="63:36"><name pos:start="63:24" pos:end="63:24">h</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:36">list_count</name></name> <operator pos:start="63:38" pos:end="63:39">&amp;&amp;</operator> <name pos:start="63:41" pos:end="63:41">i</name> <operator pos:start="63:43" pos:end="63:43">&lt;</operator> <name pos:start="63:45" pos:end="63:62"><name pos:start="63:45" pos:end="63:45">h</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:56">ref_count</name><index pos:start="63:57" pos:end="63:62">[<expr pos:start="63:58" pos:end="63:61"><name pos:start="63:58" pos:end="63:61">list</name></expr>]</index></name></expr>)</condition> <block pos:start="63:65" pos:end="107:13">{<block_content pos:start="65:17" pos:end="105:17">

                <decl_stmt pos:start="65:17" pos:end="65:57"><decl pos:start="65:17" pos:end="65:56"><type pos:start="65:17" pos:end="65:31"><specifier pos:start="65:17" pos:end="65:21">const</specifier> <name pos:start="65:23" pos:end="65:29">Picture</name> <modifier pos:start="65:31" pos:end="65:31">*</modifier></type><name pos:start="65:32" pos:end="65:32">r</name> <init pos:start="65:34" pos:end="65:56">= <expr pos:start="65:36" pos:end="65:56"><operator pos:start="65:36" pos:end="65:36">&amp;</operator><name pos:start="65:37" pos:end="65:56"><name pos:start="65:37" pos:end="65:37">h</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:47">ref_list</name><index pos:start="65:48" pos:end="65:53">[<expr pos:start="65:49" pos:end="65:52"><name pos:start="65:49" pos:end="65:52">list</name></expr>]</index><index pos:start="65:54" pos:end="65:56">[<expr pos:start="65:55" pos:end="65:55"><name pos:start="65:55" pos:end="65:55">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="67:17" pos:end="67:31"><decl pos:start="67:17" pos:end="67:30"><type pos:start="67:17" pos:end="67:24"><name pos:start="67:17" pos:end="67:24">unsigned</name></type> <name pos:start="67:26" pos:end="67:30">plane</name></decl>;</decl_stmt>

                <expr_stmt pos:start="69:17" pos:end="73:70"><expr pos:start="69:17" pos:end="73:69"><call pos:start="69:17" pos:end="73:69"><name pos:start="69:17" pos:end="69:34">fill_picture_entry</name><argument_list pos:start="69:35" pos:end="73:69">(<argument pos:start="69:36" pos:end="69:62"><expr pos:start="69:36" pos:end="69:62"><operator pos:start="69:36" pos:end="69:36">&amp;</operator><name pos:start="69:37" pos:end="69:62"><name pos:start="69:37" pos:end="69:41">slice</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:53">RefPicList</name><index pos:start="69:54" pos:end="69:59">[<expr pos:start="69:55" pos:end="69:58"><name pos:start="69:55" pos:end="69:58">list</name></expr>]</index><index pos:start="69:60" pos:end="69:62">[<expr pos:start="69:61" pos:end="69:61"><name pos:start="69:61" pos:end="69:61">i</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="71:36" pos:end="71:69"><expr pos:start="71:36" pos:end="71:69"><call pos:start="71:36" pos:end="71:69"><name pos:start="71:36" pos:end="71:61">ff_dxva2_get_surface_index</name><argument_list pos:start="71:62" pos:end="71:69">(<argument pos:start="71:63" pos:end="71:65"><expr pos:start="71:63" pos:end="71:65"><name pos:start="71:63" pos:end="71:65">ctx</name></expr></argument>, <argument pos:start="71:68" pos:end="71:68"><expr pos:start="71:68" pos:end="71:68"><name pos:start="71:68" pos:end="71:68">r</name></expr></argument>)</argument_list></call></expr></argument>,

                                   <argument pos:start="73:36" pos:end="73:68"><expr pos:start="73:36" pos:end="73:68"><name pos:start="73:36" pos:end="73:47"><name pos:start="73:36" pos:end="73:36">r</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:47">reference</name></name> <operator pos:start="73:49" pos:end="73:50">==</operator> <name pos:start="73:52" pos:end="73:68">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="75:17" pos:end="105:17">for <control pos:start="75:21" pos:end="75:51">(<init pos:start="75:22" pos:end="75:31"><expr pos:start="75:22" pos:end="75:30"><name pos:start="75:22" pos:end="75:26">plane</name> <operator pos:start="75:28" pos:end="75:28">=</operator> <literal type="number" pos:start="75:30" pos:end="75:30">0</literal></expr>;</init> <condition pos:start="75:33" pos:end="75:42"><expr pos:start="75:33" pos:end="75:41"><name pos:start="75:33" pos:end="75:37">plane</name> <operator pos:start="75:39" pos:end="75:39">&lt;</operator> <literal type="number" pos:start="75:41" pos:end="75:41">3</literal></expr>;</condition> <incr pos:start="75:44" pos:end="75:50"><expr pos:start="75:44" pos:end="75:50"><name pos:start="75:44" pos:end="75:48">plane</name><operator pos:start="75:49" pos:end="75:50">++</operator></expr></incr>)</control> <block pos:start="75:53" pos:end="105:17">{<block_content pos:start="77:21" pos:end="103:58">

                    <decl_stmt pos:start="77:21" pos:end="77:29"><decl pos:start="77:21" pos:end="77:25"><type pos:start="77:21" pos:end="77:23"><name pos:start="77:21" pos:end="77:23">int</name></type> <name pos:start="77:25" pos:end="77:25">w</name></decl>, <decl pos:start="77:28" pos:end="77:28"><type ref="prev" pos:start="77:21" pos:end="77:23"/><name pos:start="77:28" pos:end="77:28">o</name></decl>;</decl_stmt>

                    <if_stmt pos:start="79:21" pos:end="99:21"><if pos:start="79:21" pos:end="85:21">if <condition pos:start="79:24" pos:end="79:64">(<expr pos:start="79:25" pos:end="79:63"><name pos:start="79:25" pos:end="79:29">plane</name> <operator pos:start="79:31" pos:end="79:32">==</operator> <literal type="number" pos:start="79:34" pos:end="79:34">0</literal> <operator pos:start="79:36" pos:end="79:37">&amp;&amp;</operator> <name pos:start="79:39" pos:end="79:63"><name pos:start="79:39" pos:end="79:39">h</name><operator pos:start="79:40" pos:end="79:41">-&gt;</operator><name pos:start="79:42" pos:end="79:57">luma_weight_flag</name><index pos:start="79:58" pos:end="79:63">[<expr pos:start="79:59" pos:end="79:62"><name pos:start="79:59" pos:end="79:62">list</name></expr>]</index></name></expr>)</condition> <block pos:start="79:66" pos:end="85:21">{<block_content pos:start="81:25" pos:end="83:55">

                        <expr_stmt pos:start="81:25" pos:end="81:55"><expr pos:start="81:25" pos:end="81:54"><name pos:start="81:25" pos:end="81:25">w</name> <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:54"><name pos:start="81:29" pos:end="81:29">h</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:42">luma_weight</name><index pos:start="81:43" pos:end="81:45">[<expr pos:start="81:44" pos:end="81:44"><name pos:start="81:44" pos:end="81:44">i</name></expr>]</index><index pos:start="81:46" pos:end="81:51">[<expr pos:start="81:47" pos:end="81:50"><name pos:start="81:47" pos:end="81:50">list</name></expr>]</index><index pos:start="81:52" pos:end="81:54">[<expr pos:start="81:53" pos:end="81:53"><literal type="number" pos:start="81:53" pos:end="81:53">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="83:25" pos:end="83:55"><expr pos:start="83:25" pos:end="83:54"><name pos:start="83:25" pos:end="83:25">o</name> <operator pos:start="83:27" pos:end="83:27">=</operator> <name pos:start="83:29" pos:end="83:54"><name pos:start="83:29" pos:end="83:29">h</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:42">luma_weight</name><index pos:start="83:43" pos:end="83:45">[<expr pos:start="83:44" pos:end="83:44"><name pos:start="83:44" pos:end="83:44">i</name></expr>]</index><index pos:start="83:46" pos:end="83:51">[<expr pos:start="83:47" pos:end="83:50"><name pos:start="83:47" pos:end="83:50">list</name></expr>]</index><index pos:start="83:52" pos:end="83:54">[<expr pos:start="83:53" pos:end="83:53"><literal type="number" pos:start="83:53" pos:end="83:53">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="85:23" pos:end="91:21">else if <condition pos:start="85:31" pos:end="85:73">(<expr pos:start="85:32" pos:end="85:72"><name pos:start="85:32" pos:end="85:36">plane</name> <operator pos:start="85:38" pos:end="85:39">&gt;=</operator> <literal type="number" pos:start="85:41" pos:end="85:41">1</literal> <operator pos:start="85:43" pos:end="85:44">&amp;&amp;</operator> <name pos:start="85:46" pos:end="85:72"><name pos:start="85:46" pos:end="85:46">h</name><operator pos:start="85:47" pos:end="85:48">-&gt;</operator><name pos:start="85:49" pos:end="85:66">chroma_weight_flag</name><index pos:start="85:67" pos:end="85:72">[<expr pos:start="85:68" pos:end="85:71"><name pos:start="85:68" pos:end="85:71">list</name></expr>]</index></name></expr>)</condition> <block pos:start="85:75" pos:end="91:21">{<block_content pos:start="87:25" pos:end="89:66">

                        <expr_stmt pos:start="87:25" pos:end="87:66"><expr pos:start="87:25" pos:end="87:65"><name pos:start="87:25" pos:end="87:25">w</name> <operator pos:start="87:27" pos:end="87:27">=</operator> <name pos:start="87:29" pos:end="87:65"><name pos:start="87:29" pos:end="87:29">h</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:44">chroma_weight</name><index pos:start="87:45" pos:end="87:47">[<expr pos:start="87:46" pos:end="87:46"><name pos:start="87:46" pos:end="87:46">i</name></expr>]</index><index pos:start="87:48" pos:end="87:53">[<expr pos:start="87:49" pos:end="87:52"><name pos:start="87:49" pos:end="87:52">list</name></expr>]</index><index pos:start="87:54" pos:end="87:62">[<expr pos:start="87:55" pos:end="87:61"><name pos:start="87:55" pos:end="87:59">plane</name><operator pos:start="87:60" pos:end="87:60">-</operator><literal type="number" pos:start="87:61" pos:end="87:61">1</literal></expr>]</index><index pos:start="87:63" pos:end="87:65">[<expr pos:start="87:64" pos:end="87:64"><literal type="number" pos:start="87:64" pos:end="87:64">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="89:25" pos:end="89:66"><expr pos:start="89:25" pos:end="89:65"><name pos:start="89:25" pos:end="89:25">o</name> <operator pos:start="89:27" pos:end="89:27">=</operator> <name pos:start="89:29" pos:end="89:65"><name pos:start="89:29" pos:end="89:29">h</name><operator pos:start="89:30" pos:end="89:31">-&gt;</operator><name pos:start="89:32" pos:end="89:44">chroma_weight</name><index pos:start="89:45" pos:end="89:47">[<expr pos:start="89:46" pos:end="89:46"><name pos:start="89:46" pos:end="89:46">i</name></expr>]</index><index pos:start="89:48" pos:end="89:53">[<expr pos:start="89:49" pos:end="89:52"><name pos:start="89:49" pos:end="89:52">list</name></expr>]</index><index pos:start="89:54" pos:end="89:62">[<expr pos:start="89:55" pos:end="89:61"><name pos:start="89:55" pos:end="89:59">plane</name><operator pos:start="89:60" pos:end="89:60">-</operator><literal type="number" pos:start="89:61" pos:end="89:61">1</literal></expr>]</index><index pos:start="89:63" pos:end="89:65">[<expr pos:start="89:64" pos:end="89:64"><literal type="number" pos:start="89:64" pos:end="89:64">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="91:23" pos:end="99:21">else <block pos:start="91:28" pos:end="99:21">{<block_content pos:start="93:25" pos:end="97:30">

                        <expr_stmt pos:start="93:25" pos:end="95:76"><expr pos:start="93:25" pos:end="95:75"><name pos:start="93:25" pos:end="93:25">w</name> <operator pos:start="93:27" pos:end="93:27">=</operator> <literal type="number" pos:start="93:29" pos:end="93:29">1</literal> <operator pos:start="93:31" pos:end="93:32">&lt;&lt;</operator> <operator pos:start="93:34" pos:end="93:34">(</operator><ternary pos:start="93:35" pos:end="95:74"><condition pos:start="93:35" pos:end="93:46"><expr pos:start="93:35" pos:end="93:44"><name pos:start="93:35" pos:end="93:39">plane</name> <operator pos:start="93:41" pos:end="93:42">==</operator> <literal type="number" pos:start="93:44" pos:end="93:44">0</literal></expr> ?</condition><then pos:start="93:48" pos:end="93:72"> <expr pos:start="93:48" pos:end="93:72"><name pos:start="93:48" pos:end="93:72"><name pos:start="93:48" pos:end="93:48">h</name><operator pos:start="93:49" pos:end="93:50">-&gt;</operator><name pos:start="93:51" pos:end="93:72">luma_log2_weight_denom</name></name></expr> </then><else pos:start="93:74" pos:end="95:74">:

                                               <expr pos:start="95:48" pos:end="95:74"><name pos:start="95:48" pos:end="95:74"><name pos:start="95:48" pos:end="95:48">h</name><operator pos:start="95:49" pos:end="95:50">-&gt;</operator><name pos:start="95:51" pos:end="95:74">chroma_log2_weight_denom</name></name></expr></else></ternary><operator pos:start="95:75" pos:end="95:75">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="97:25" pos:end="97:30"><expr pos:start="97:25" pos:end="97:29"><name pos:start="97:25" pos:end="97:25">o</name> <operator pos:start="97:27" pos:end="97:27">=</operator> <literal type="number" pos:start="97:29" pos:end="97:29">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="101:21" pos:end="101:58"><expr pos:start="101:21" pos:end="101:57"><name pos:start="101:21" pos:end="101:53"><name pos:start="101:21" pos:end="101:25">slice</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:34">Weights</name><index pos:start="101:35" pos:end="101:40">[<expr pos:start="101:36" pos:end="101:39"><name pos:start="101:36" pos:end="101:39">list</name></expr>]</index><index pos:start="101:41" pos:end="101:43">[<expr pos:start="101:42" pos:end="101:42"><name pos:start="101:42" pos:end="101:42">i</name></expr>]</index><index pos:start="101:44" pos:end="101:50">[<expr pos:start="101:45" pos:end="101:49"><name pos:start="101:45" pos:end="101:49">plane</name></expr>]</index><index pos:start="101:51" pos:end="101:53">[<expr pos:start="101:52" pos:end="101:52"><literal type="number" pos:start="101:52" pos:end="101:52">0</literal></expr>]</index></name> <operator pos:start="101:55" pos:end="101:55">=</operator> <name pos:start="101:57" pos:end="101:57">w</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="103:21" pos:end="103:58"><expr pos:start="103:21" pos:end="103:57"><name pos:start="103:21" pos:end="103:53"><name pos:start="103:21" pos:end="103:25">slice</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:34">Weights</name><index pos:start="103:35" pos:end="103:40">[<expr pos:start="103:36" pos:end="103:39"><name pos:start="103:36" pos:end="103:39">list</name></expr>]</index><index pos:start="103:41" pos:end="103:43">[<expr pos:start="103:42" pos:end="103:42"><name pos:start="103:42" pos:end="103:42">i</name></expr>]</index><index pos:start="103:44" pos:end="103:50">[<expr pos:start="103:45" pos:end="103:49"><name pos:start="103:45" pos:end="103:49">plane</name></expr>]</index><index pos:start="103:51" pos:end="103:53">[<expr pos:start="103:52" pos:end="103:52"><literal type="number" pos:start="103:52" pos:end="103:52">1</literal></expr>]</index></name> <operator pos:start="103:55" pos:end="103:55">=</operator> <name pos:start="103:57" pos:end="103:57">o</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="107:15" pos:end="121:13">else <block pos:start="107:20" pos:end="121:13">{<block_content pos:start="109:17" pos:end="119:17">

                <decl_stmt pos:start="109:17" pos:end="109:31"><decl pos:start="109:17" pos:end="109:30"><type pos:start="109:17" pos:end="109:24"><name pos:start="109:17" pos:end="109:24">unsigned</name></type> <name pos:start="109:26" pos:end="109:30">plane</name></decl>;</decl_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:60"><expr pos:start="111:17" pos:end="111:59"><name pos:start="111:17" pos:end="111:42"><name pos:start="111:17" pos:end="111:21">slice</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:33">RefPicList</name><index pos:start="111:34" pos:end="111:39">[<expr pos:start="111:35" pos:end="111:38"><name pos:start="111:35" pos:end="111:38">list</name></expr>]</index><index pos:start="111:40" pos:end="111:42">[<expr pos:start="111:41" pos:end="111:41"><name pos:start="111:41" pos:end="111:41">i</name></expr>]</index></name><operator pos:start="111:43" pos:end="111:43">.</operator><name pos:start="111:44" pos:end="111:52">bPicEntry</name> <operator pos:start="111:54" pos:end="111:54">=</operator> <literal type="number" pos:start="111:56" pos:end="111:59">0xff</literal></expr>;</expr_stmt>

                <for pos:start="113:17" pos:end="119:17">for <control pos:start="113:21" pos:end="113:51">(<init pos:start="113:22" pos:end="113:31"><expr pos:start="113:22" pos:end="113:30"><name pos:start="113:22" pos:end="113:26">plane</name> <operator pos:start="113:28" pos:end="113:28">=</operator> <literal type="number" pos:start="113:30" pos:end="113:30">0</literal></expr>;</init> <condition pos:start="113:33" pos:end="113:42"><expr pos:start="113:33" pos:end="113:41"><name pos:start="113:33" pos:end="113:37">plane</name> <operator pos:start="113:39" pos:end="113:39">&lt;</operator> <literal type="number" pos:start="113:41" pos:end="113:41">3</literal></expr>;</condition> <incr pos:start="113:44" pos:end="113:50"><expr pos:start="113:44" pos:end="113:50"><name pos:start="113:44" pos:end="113:48">plane</name><operator pos:start="113:49" pos:end="113:50">++</operator></expr></incr>)</control> <block pos:start="113:53" pos:end="119:17">{<block_content pos:start="115:21" pos:end="117:58">

                    <expr_stmt pos:start="115:21" pos:end="115:58"><expr pos:start="115:21" pos:end="115:57"><name pos:start="115:21" pos:end="115:53"><name pos:start="115:21" pos:end="115:25">slice</name><operator pos:start="115:26" pos:end="115:27">-&gt;</operator><name pos:start="115:28" pos:end="115:34">Weights</name><index pos:start="115:35" pos:end="115:40">[<expr pos:start="115:36" pos:end="115:39"><name pos:start="115:36" pos:end="115:39">list</name></expr>]</index><index pos:start="115:41" pos:end="115:43">[<expr pos:start="115:42" pos:end="115:42"><name pos:start="115:42" pos:end="115:42">i</name></expr>]</index><index pos:start="115:44" pos:end="115:50">[<expr pos:start="115:45" pos:end="115:49"><name pos:start="115:45" pos:end="115:49">plane</name></expr>]</index><index pos:start="115:51" pos:end="115:53">[<expr pos:start="115:52" pos:end="115:52"><literal type="number" pos:start="115:52" pos:end="115:52">0</literal></expr>]</index></name> <operator pos:start="115:55" pos:end="115:55">=</operator> <literal type="number" pos:start="115:57" pos:end="115:57">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="117:21" pos:end="117:58"><expr pos:start="117:21" pos:end="117:57"><name pos:start="117:21" pos:end="117:53"><name pos:start="117:21" pos:end="117:25">slice</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:34">Weights</name><index pos:start="117:35" pos:end="117:40">[<expr pos:start="117:36" pos:end="117:39"><name pos:start="117:36" pos:end="117:39">list</name></expr>]</index><index pos:start="117:41" pos:end="117:43">[<expr pos:start="117:42" pos:end="117:42"><name pos:start="117:42" pos:end="117:42">i</name></expr>]</index><index pos:start="117:44" pos:end="117:50">[<expr pos:start="117:45" pos:end="117:49"><name pos:start="117:45" pos:end="117:49">plane</name></expr>]</index><index pos:start="117:51" pos:end="117:53">[<expr pos:start="117:52" pos:end="117:52"><literal type="number" pos:start="117:52" pos:end="117:52">1</literal></expr>]</index></name> <operator pos:start="117:55" pos:end="117:55">=</operator> <literal type="number" pos:start="117:57" pos:end="117:57">0</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="127:5" pos:end="127:33"><expr pos:start="127:5" pos:end="127:32"><name pos:start="127:5" pos:end="127:25"><name pos:start="127:5" pos:end="127:9">slice</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:25">slice_qs_delta</name></name>    <operator pos:start="127:30" pos:end="127:30">=</operator> <literal type="number" pos:start="127:32" pos:end="127:32">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="127:35" pos:end="127:69">/* XXX not implemented by FFmpeg */</comment>

    <expr_stmt pos:start="129:5" pos:end="129:58"><expr pos:start="129:5" pos:end="129:57"><name pos:start="129:5" pos:end="129:25"><name pos:start="129:5" pos:end="129:9">slice</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:25">slice_qp_delta</name></name>    <operator pos:start="129:30" pos:end="129:30">=</operator> <name pos:start="129:32" pos:end="129:40"><name pos:start="129:32" pos:end="129:32">h</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:40">qscale</name></name> <operator pos:start="129:42" pos:end="129:42">-</operator> <name pos:start="129:44" pos:end="129:57"><name pos:start="129:44" pos:end="129:44">h</name><operator pos:start="129:45" pos:end="129:46">-&gt;</operator><name pos:start="129:47" pos:end="129:49">pps</name><operator pos:start="129:50" pos:end="129:50">.</operator><name pos:start="129:51" pos:end="129:57">init_qp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:54"><expr pos:start="131:5" pos:end="131:53"><name pos:start="131:5" pos:end="131:28"><name pos:start="131:5" pos:end="131:9">slice</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:28">redundant_pic_cnt</name></name> <operator pos:start="131:30" pos:end="131:30">=</operator> <name pos:start="131:32" pos:end="131:53"><name pos:start="131:32" pos:end="131:32">h</name><operator pos:start="131:33" pos:end="131:34">-&gt;</operator><name pos:start="131:35" pos:end="131:53">redundant_pic_count</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="133:5" pos:end="135:71"><if pos:start="133:5" pos:end="135:71">if <condition pos:start="133:8" pos:end="133:43">(<expr pos:start="133:9" pos:end="133:42"><name pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:9">h</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:21">slice_type</name></name> <operator pos:start="133:23" pos:end="133:24">==</operator> <name pos:start="133:26" pos:end="133:42">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="135:9" pos:end="135:71"><block_content pos:start="135:9" pos:end="135:71">

        <expr_stmt pos:start="135:9" pos:end="135:71"><expr pos:start="135:9" pos:end="135:70"><name pos:start="135:9" pos:end="135:42"><name pos:start="135:9" pos:end="135:13">slice</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:42">direct_spatial_mv_pred_flag</name></name> <operator pos:start="135:44" pos:end="135:44">=</operator> <name pos:start="135:46" pos:end="135:70"><name pos:start="135:46" pos:end="135:46">h</name><operator pos:start="135:47" pos:end="135:48">-&gt;</operator><name pos:start="135:49" pos:end="135:70">direct_spatial_mv_pred</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:65"><expr pos:start="137:5" pos:end="137:64"><name pos:start="137:5" pos:end="137:25"><name pos:start="137:5" pos:end="137:9">slice</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:25">cabac_init_idc</name></name> <operator pos:start="137:27" pos:end="137:27">=</operator> <ternary pos:start="137:29" pos:end="137:64"><condition pos:start="137:29" pos:end="137:42"><expr pos:start="137:29" pos:end="137:40"><name pos:start="137:29" pos:end="137:40"><name pos:start="137:29" pos:end="137:29">h</name><operator pos:start="137:30" pos:end="137:31">-&gt;</operator><name pos:start="137:32" pos:end="137:34">pps</name><operator pos:start="137:35" pos:end="137:35">.</operator><name pos:start="137:36" pos:end="137:40">cabac</name></name></expr> ?</condition><then pos:start="137:44" pos:end="137:60"> <expr pos:start="137:44" pos:end="137:60"><name pos:start="137:44" pos:end="137:60"><name pos:start="137:44" pos:end="137:44">h</name><operator pos:start="137:45" pos:end="137:46">-&gt;</operator><name pos:start="137:47" pos:end="137:60">cabac_init_idc</name></name></expr> </then><else pos:start="137:62" pos:end="137:64">: <expr pos:start="137:64" pos:end="137:64"><literal type="number" pos:start="137:64" pos:end="137:64">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="139:5" pos:end="145:68"><if pos:start="139:5" pos:end="141:72">if <condition pos:start="139:8" pos:end="139:33">(<expr pos:start="139:9" pos:end="139:32"><name pos:start="139:9" pos:end="139:28"><name pos:start="139:9" pos:end="139:9">h</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:28">deblocking_filter</name></name> <operator pos:start="139:30" pos:end="139:30">&lt;</operator> <literal type="number" pos:start="139:32" pos:end="139:32">2</literal></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:72"><block_content pos:start="141:9" pos:end="141:72">

        <expr_stmt pos:start="141:9" pos:end="141:72"><expr pos:start="141:9" pos:end="141:71"><name pos:start="141:9" pos:end="141:44"><name pos:start="141:9" pos:end="141:13">slice</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:44">disable_deblocking_filter_idc</name></name> <operator pos:start="141:46" pos:end="141:46">=</operator> <literal type="number" pos:start="141:48" pos:end="141:50">1</literal> <operator pos:start="141:50" pos:end="141:50">-</operator> <name pos:start="141:52" pos:end="141:71"><name pos:start="141:52" pos:end="141:52">h</name><operator pos:start="141:53" pos:end="141:54">-&gt;</operator><name pos:start="141:55" pos:end="141:71">deblocking_filter</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="143:5" pos:end="145:68">else<block type="pseudo" pos:start="145:9" pos:end="145:68"><block_content pos:start="145:9" pos:end="145:68">

        <expr_stmt pos:start="145:9" pos:end="145:68"><expr pos:start="145:9" pos:end="145:67"><name pos:start="145:9" pos:end="145:44"><name pos:start="145:9" pos:end="145:13">slice</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:44">disable_deblocking_filter_idc</name></name> <operator pos:start="145:46" pos:end="145:46">=</operator> <name pos:start="145:48" pos:end="145:67"><name pos:start="145:48" pos:end="145:48">h</name><operator pos:start="145:49" pos:end="145:50">-&gt;</operator><name pos:start="145:51" pos:end="145:67">deblocking_filter</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:43"><expr pos:start="147:5" pos:end="147:42"><name pos:start="147:5" pos:end="147:19"><name pos:start="147:5" pos:end="147:9">slice</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:19">slice_id</name></name> <operator pos:start="147:21" pos:end="147:21">=</operator> <name pos:start="147:23" pos:end="147:38"><name pos:start="147:23" pos:end="147:23">h</name><operator pos:start="147:24" pos:end="147:25">-&gt;</operator><name pos:start="147:26" pos:end="147:38">current_slice</name></name> <operator pos:start="147:40" pos:end="147:40">-</operator> <literal type="number" pos:start="147:42" pos:end="147:42">1</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
