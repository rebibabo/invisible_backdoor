<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13597.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:30">virtqueue_map_desc</name><parameter_list pos:start="1:31" pos:end="7:52">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:43">VirtIODevice</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">vdev</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:73"><decl pos:start="1:52" pos:end="1:73"><type pos:start="1:52" pos:end="1:73"><name pos:start="1:52" pos:end="1:59">unsigned</name> <name pos:start="1:61" pos:end="1:63">int</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:73">p_num_sg</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:43"><decl pos:start="3:32" pos:end="3:43"><type pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:37">hwaddr</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:43">addr</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:62"><decl pos:start="3:46" pos:end="3:62"><type pos:start="3:46" pos:end="3:62"><name pos:start="3:46" pos:end="3:57"><name pos:start="3:46" pos:end="3:51">struct</name> <name pos:start="3:53" pos:end="3:57">iovec</name></name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:62">iov</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:54"><decl pos:start="5:32" pos:end="5:54"><type pos:start="5:32" pos:end="5:54"><name pos:start="5:32" pos:end="5:39">unsigned</name> <name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:54">max_num_sg</name></decl></parameter>, <parameter pos:start="5:57" pos:end="5:69"><decl pos:start="5:57" pos:end="5:69"><type pos:start="5:57" pos:end="5:69"><name pos:start="5:57" pos:end="5:60">bool</name></type> <name pos:start="5:62" pos:end="5:69">is_write</name></decl></parameter>,

                               <parameter pos:start="7:32" pos:end="7:40"><decl pos:start="7:32" pos:end="7:40"><type pos:start="7:32" pos:end="7:40"><name pos:start="7:32" pos:end="7:37">hwaddr</name></type> <name pos:start="7:39" pos:end="7:40">pa</name></decl></parameter>, <parameter pos:start="7:43" pos:end="7:51"><decl pos:start="7:43" pos:end="7:51"><type pos:start="7:43" pos:end="7:51"><name pos:start="7:43" pos:end="7:48">size_t</name></type> <name pos:start="7:50" pos:end="7:51">sz</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="83:1">{<block_content pos:start="11:5" pos:end="81:14">

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:11">ok</name> <init pos:start="11:13" pos:end="11:19">= <expr pos:start="11:15" pos:end="11:19"><name pos:start="11:15" pos:end="11:19">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:19">num_sg</name> <init pos:start="13:21" pos:end="13:31">= <expr pos:start="13:23" pos:end="13:31"><operator pos:start="13:23" pos:end="13:23">*</operator><name pos:start="13:24" pos:end="13:31">p_num_sg</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><call pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:32">(<argument pos:start="15:12" pos:end="15:31"><expr pos:start="15:12" pos:end="15:31"><name pos:start="15:12" pos:end="15:17">num_sg</name> <operator pos:start="15:19" pos:end="15:20">&lt;=</operator> <name pos:start="15:22" pos:end="15:31">max_num_sg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:12">(<expr pos:start="19:9" pos:end="19:11"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:11">sz</name></expr>)</condition> <block pos:start="19:14" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:17">

        <expr_stmt pos:start="21:9" pos:end="21:73"><expr pos:start="21:9" pos:end="21:72"><call pos:start="21:9" pos:end="21:72"><name pos:start="21:9" pos:end="21:20">virtio_error</name><argument_list pos:start="21:21" pos:end="21:72">(<argument pos:start="21:22" pos:end="21:25"><expr pos:start="21:22" pos:end="21:25"><name pos:start="21:22" pos:end="21:25">vdev</name></expr></argument>, <argument pos:start="21:28" pos:end="21:71"><expr pos:start="21:28" pos:end="21:71"><literal type="string" pos:start="21:28" pos:end="21:71">"virtio: zero sized buffers are not allowed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="23:9" pos:end="23:17">goto <name pos:start="23:14" pos:end="23:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <while pos:start="29:5" pos:end="71:5">while <condition pos:start="29:11" pos:end="29:14">(<expr pos:start="29:12" pos:end="29:13"><name pos:start="29:12" pos:end="29:13">sz</name></expr>)</condition> <block pos:start="29:16" pos:end="71:5">{<block_content pos:start="31:9" pos:end="69:17">

        <decl_stmt pos:start="31:9" pos:end="31:24"><decl pos:start="31:9" pos:end="31:23"><type pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:14">hwaddr</name></type> <name pos:start="31:16" pos:end="31:18">len</name> <init pos:start="31:20" pos:end="31:23">= <expr pos:start="31:22" pos:end="31:23"><name pos:start="31:22" pos:end="31:23">sz</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="43:9">if <condition pos:start="35:12" pos:end="35:33">(<expr pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:18">num_sg</name> <operator pos:start="35:20" pos:end="35:21">==</operator> <name pos:start="35:23" pos:end="35:32">max_num_sg</name></expr>)</condition> <block pos:start="35:35" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:21">

            <expr_stmt pos:start="37:13" pos:end="39:49"><expr pos:start="37:13" pos:end="39:48"><call pos:start="37:13" pos:end="39:48"><name pos:start="37:13" pos:end="37:24">virtio_error</name><argument_list pos:start="37:25" pos:end="39:48">(<argument pos:start="37:26" pos:end="37:29"><expr pos:start="37:26" pos:end="37:29"><name pos:start="37:26" pos:end="37:29">vdev</name></expr></argument>, <argument pos:start="37:32" pos:end="39:47"><expr pos:start="37:32" pos:end="39:47"><literal type="string" pos:start="37:32" pos:end="37:71">"virtio: too many write descriptors in "</literal>

                               <literal type="string" pos:start="39:32" pos:end="39:47">"indirect table"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="41:13" pos:end="41:21">goto <name pos:start="41:18" pos:end="41:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:75"><expr pos:start="47:9" pos:end="47:74"><name pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:11">iov</name><index pos:start="47:12" pos:end="47:19">[<expr pos:start="47:13" pos:end="47:18"><name pos:start="47:13" pos:end="47:18">num_sg</name></expr>]</index></name><operator pos:start="47:20" pos:end="47:20">.</operator><name pos:start="47:21" pos:end="47:28">iov_base</name> <operator pos:start="47:30" pos:end="47:30">=</operator> <call pos:start="47:32" pos:end="47:74"><name pos:start="47:32" pos:end="47:54">cpu_physical_memory_map</name><argument_list pos:start="47:55" pos:end="47:74">(<argument pos:start="47:56" pos:end="47:57"><expr pos:start="47:56" pos:end="47:57"><name pos:start="47:56" pos:end="47:57">pa</name></expr></argument>, <argument pos:start="47:60" pos:end="47:63"><expr pos:start="47:60" pos:end="47:63"><operator pos:start="47:60" pos:end="47:60">&amp;</operator><name pos:start="47:61" pos:end="47:63">len</name></expr></argument>, <argument pos:start="47:66" pos:end="47:73"><expr pos:start="47:66" pos:end="47:73"><name pos:start="47:66" pos:end="47:73">is_write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:34">(<expr pos:start="49:13" pos:end="49:33"><operator pos:start="49:13" pos:end="49:13">!</operator><name pos:start="49:14" pos:end="49:24"><name pos:start="49:14" pos:end="49:16">iov</name><index pos:start="49:17" pos:end="49:24">[<expr pos:start="49:18" pos:end="49:23"><name pos:start="49:18" pos:end="49:23">num_sg</name></expr>]</index></name><operator pos:start="49:25" pos:end="49:25">.</operator><name pos:start="49:26" pos:end="49:33">iov_base</name></expr>)</condition> <block pos:start="49:36" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:21">

            <expr_stmt pos:start="51:13" pos:end="51:79"><expr pos:start="51:13" pos:end="51:78"><call pos:start="51:13" pos:end="51:78"><name pos:start="51:13" pos:end="51:24">virtio_error</name><argument_list pos:start="51:25" pos:end="51:78">(<argument pos:start="51:26" pos:end="51:29"><expr pos:start="51:26" pos:end="51:29"><name pos:start="51:26" pos:end="51:29">vdev</name></expr></argument>, <argument pos:start="51:32" pos:end="51:77"><expr pos:start="51:32" pos:end="51:77"><literal type="string" pos:start="51:32" pos:end="51:77">"virtio: bogus descriptor or out of resources"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="53:13" pos:end="53:21">goto <name pos:start="53:18" pos:end="53:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:34"><expr pos:start="59:9" pos:end="59:33"><name pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:11">iov</name><index pos:start="59:12" pos:end="59:19">[<expr pos:start="59:13" pos:end="59:18"><name pos:start="59:13" pos:end="59:18">num_sg</name></expr>]</index></name><operator pos:start="59:20" pos:end="59:20">.</operator><name pos:start="59:21" pos:end="59:27">iov_len</name> <operator pos:start="59:29" pos:end="59:29">=</operator> <name pos:start="59:31" pos:end="59:33">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:26"><expr pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:12">addr</name><index pos:start="61:13" pos:end="61:20">[<expr pos:start="61:14" pos:end="61:19"><name pos:start="61:14" pos:end="61:19">num_sg</name></expr>]</index></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:25">pa</name></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:18"><expr pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:10">sz</name> <operator pos:start="65:12" pos:end="65:13">-=</operator> <name pos:start="65:15" pos:end="65:17">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:18"><expr pos:start="67:9" pos:end="67:17"><name pos:start="67:9" pos:end="67:10">pa</name> <operator pos:start="67:12" pos:end="67:13">+=</operator> <name pos:start="67:15" pos:end="67:17">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:17"><expr pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:14">num_sg</name><operator pos:start="69:15" pos:end="69:16">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="73:5" pos:end="73:14"><expr pos:start="73:5" pos:end="73:13"><name pos:start="73:5" pos:end="73:6">ok</name> <operator pos:start="73:8" pos:end="73:8">=</operator> <name pos:start="73:10" pos:end="73:13">true</name></expr>;</expr_stmt>



<label pos:start="77:1" pos:end="77:4"><name pos:start="77:1" pos:end="77:3">out</name>:</label>

    <expr_stmt pos:start="79:5" pos:end="79:23"><expr pos:start="79:5" pos:end="79:22"><operator pos:start="79:5" pos:end="79:5">*</operator><name pos:start="79:6" pos:end="79:13">p_num_sg</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <name pos:start="79:17" pos:end="79:22">num_sg</name></expr>;</expr_stmt>

    <return pos:start="81:5" pos:end="81:14">return <expr pos:start="81:12" pos:end="81:13"><name pos:start="81:12" pos:end="81:13">ok</name></expr>;</return>

</block_content>}</block></function>
</unit>
