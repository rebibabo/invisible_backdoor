<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14123.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">tight_init_stream</name><parameter_list pos:start="1:29" pos:end="3:53">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:37">VncState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">vs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:56">stream_id</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:38"><decl pos:start="3:30" pos:end="3:38"><type pos:start="3:30" pos:end="3:38"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:38">level</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:52"><decl pos:start="3:41" pos:end="3:52"><type pos:start="3:41" pos:end="3:52"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:52">strategy</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="63:13">

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">z_streamp</name></type> <name pos:start="7:15" pos:end="7:21">zstream</name> <init pos:start="7:23" pos:end="7:52">= <expr pos:start="7:25" pos:end="7:52"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:52"><name pos:start="7:26" pos:end="7:27">vs</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:41">tight_stream</name><index pos:start="7:42" pos:end="7:52">[<expr pos:start="7:43" pos:end="7:51"><name pos:start="7:43" pos:end="7:51">stream_id</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="47:5"><if pos:start="11:5" pos:end="47:5">if <condition pos:start="11:8" pos:end="11:32">(<expr pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:15">zstream</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:23">opaque</name></name> <operator pos:start="11:25" pos:end="11:26">==</operator> <name pos:start="11:28" pos:end="11:31">NULL</name></expr>)</condition> <block pos:start="11:34" pos:end="47:5">{<block_content pos:start="13:9" pos:end="45:29">

        <decl_stmt pos:start="13:9" pos:end="13:16"><decl pos:start="13:9" pos:end="13:15"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:15">err</name></decl>;</decl_stmt>



        <expr_stmt pos:start="17:9" pos:end="17:74"><expr pos:start="17:9" pos:end="17:73"><call pos:start="17:9" pos:end="17:73"><name pos:start="17:9" pos:end="17:17">VNC_DEBUG</name><argument_list pos:start="17:18" pos:end="17:73">(<argument pos:start="17:19" pos:end="17:61"><expr pos:start="17:19" pos:end="17:61"><literal type="string" pos:start="17:19" pos:end="17:61">"VNC: TIGHT: initializing zlib stream %d\n"</literal></expr></argument>, <argument pos:start="17:64" pos:end="17:72"><expr pos:start="17:64" pos:end="17:72"><name pos:start="17:64" pos:end="17:72">stream_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:78"><expr pos:start="19:9" pos:end="19:77"><call pos:start="19:9" pos:end="19:77"><name pos:start="19:9" pos:end="19:17">VNC_DEBUG</name><argument_list pos:start="19:18" pos:end="19:77">(<argument pos:start="19:19" pos:end="19:55"><expr pos:start="19:19" pos:end="19:55"><literal type="string" pos:start="19:19" pos:end="19:55">"VNC: TIGHT: opaque = %p | vs = %p\n"</literal></expr></argument>, <argument pos:start="19:58" pos:end="19:72"><expr pos:start="19:58" pos:end="19:72"><name pos:start="19:58" pos:end="19:72"><name pos:start="19:58" pos:end="19:64">zstream</name><operator pos:start="19:65" pos:end="19:66">-&gt;</operator><name pos:start="19:67" pos:end="19:72">opaque</name></name></expr></argument>, <argument pos:start="19:75" pos:end="19:76"><expr pos:start="19:75" pos:end="19:76"><name pos:start="19:75" pos:end="19:76">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:42"><expr pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:15">zstream</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:23">zalloc</name></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:41">vnc_zlib_zalloc</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:15">zstream</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:22">zfree</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <name pos:start="23:26" pos:end="23:39">vnc_zlib_zfree</name></expr>;</expr_stmt>



        <expr_stmt pos:start="27:9" pos:end="29:52"><expr pos:start="27:9" pos:end="29:51"><name pos:start="27:9" pos:end="27:11">err</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="29:51"><name pos:start="27:15" pos:end="27:26">deflateInit2</name><argument_list pos:start="27:27" pos:end="29:51">(<argument pos:start="27:28" pos:end="27:34"><expr pos:start="27:28" pos:end="27:34"><name pos:start="27:28" pos:end="27:34">zstream</name></expr></argument>, <argument pos:start="27:37" pos:end="27:41"><expr pos:start="27:37" pos:end="27:41"><name pos:start="27:37" pos:end="27:41">level</name></expr></argument>, <argument pos:start="27:44" pos:end="27:53"><expr pos:start="27:44" pos:end="27:53"><name pos:start="27:44" pos:end="27:53">Z_DEFLATED</name></expr></argument>, <argument pos:start="27:56" pos:end="27:64"><expr pos:start="27:56" pos:end="27:64"><name pos:start="27:56" pos:end="27:64">MAX_WBITS</name></expr></argument>,

                           <argument pos:start="29:28" pos:end="29:40"><expr pos:start="29:28" pos:end="29:40"><name pos:start="29:28" pos:end="29:40">MAX_MEM_LEVEL</name></expr></argument>, <argument pos:start="29:43" pos:end="29:50"><expr pos:start="29:43" pos:end="29:50"><name pos:start="29:43" pos:end="29:50">strategy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:24">(<expr pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:15">err</name> <operator pos:start="33:17" pos:end="33:18">!=</operator> <name pos:start="33:20" pos:end="33:23">Z_OK</name></expr>)</condition> <block pos:start="33:26" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:22">

            <expr_stmt pos:start="35:13" pos:end="35:62"><expr pos:start="35:13" pos:end="35:61"><call pos:start="35:13" pos:end="35:61"><name pos:start="35:13" pos:end="35:19">fprintf</name><argument_list pos:start="35:20" pos:end="35:61">(<argument pos:start="35:21" pos:end="35:26"><expr pos:start="35:21" pos:end="35:26"><name pos:start="35:21" pos:end="35:26">stderr</name></expr></argument>, <argument pos:start="35:29" pos:end="35:60"><expr pos:start="35:29" pos:end="35:60"><literal type="string" pos:start="35:29" pos:end="35:60">"VNC: error initializing zlib\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="37:13" pos:end="37:22">return <expr pos:start="37:20" pos:end="37:21"><operator pos:start="37:20" pos:end="37:20">-</operator><literal type="number" pos:start="37:21" pos:end="37:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:44"><expr pos:start="43:9" pos:end="43:43"><name pos:start="43:9" pos:end="43:35"><name pos:start="43:9" pos:end="43:10">vs</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:24">tight_levels</name><index pos:start="43:25" pos:end="43:35">[<expr pos:start="43:26" pos:end="43:34"><name pos:start="43:26" pos:end="43:34">stream_id</name></expr>]</index></name> <operator pos:start="43:37" pos:end="43:37">=</operator> <name pos:start="43:39" pos:end="43:43">level</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:29"><expr pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:15">zstream</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:23">opaque</name></name> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:28">vs</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="61:5"><if pos:start="51:5" pos:end="61:5">if <condition pos:start="51:8" pos:end="51:45">(<expr pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:35"><name pos:start="51:9" pos:end="51:10">vs</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:24">tight_levels</name><index pos:start="51:25" pos:end="51:35">[<expr pos:start="51:26" pos:end="51:34"><name pos:start="51:26" pos:end="51:34">stream_id</name></expr>]</index></name> <operator pos:start="51:37" pos:end="51:38">!=</operator> <name pos:start="51:40" pos:end="51:44">level</name></expr>)</condition> <block pos:start="51:47" pos:end="61:5">{<block_content pos:start="53:9" pos:end="59:44">

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:60">(<expr pos:start="53:13" pos:end="53:59"><call pos:start="53:13" pos:end="53:51"><name pos:start="53:13" pos:end="53:25">deflateParams</name><argument_list pos:start="53:26" pos:end="53:51">(<argument pos:start="53:27" pos:end="53:33"><expr pos:start="53:27" pos:end="53:33"><name pos:start="53:27" pos:end="53:33">zstream</name></expr></argument>, <argument pos:start="53:36" pos:end="53:40"><expr pos:start="53:36" pos:end="53:40"><name pos:start="53:36" pos:end="53:40">level</name></expr></argument>, <argument pos:start="53:43" pos:end="53:50"><expr pos:start="53:43" pos:end="53:50"><name pos:start="53:43" pos:end="53:50">strategy</name></expr></argument>)</argument_list></call> <operator pos:start="53:53" pos:end="53:54">!=</operator> <name pos:start="53:56" pos:end="53:59">Z_OK</name></expr>)</condition> <block pos:start="53:62" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:22">

            <return pos:start="55:13" pos:end="55:22">return <expr pos:start="55:20" pos:end="55:21"><operator pos:start="55:20" pos:end="55:20">-</operator><literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:44"><expr pos:start="59:9" pos:end="59:43"><name pos:start="59:9" pos:end="59:35"><name pos:start="59:9" pos:end="59:10">vs</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:24">tight_levels</name><index pos:start="59:25" pos:end="59:35">[<expr pos:start="59:26" pos:end="59:34"><name pos:start="59:26" pos:end="59:34">stream_id</name></expr>]</index></name> <operator pos:start="59:37" pos:end="59:37">=</operator> <name pos:start="59:39" pos:end="59:43">level</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
