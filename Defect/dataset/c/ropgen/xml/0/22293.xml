<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22293.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">kvm_s390_store_adtl_status</name><parameter_list pos:start="1:38" pos:end="1:64">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:45">S390CPU</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">cpu</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:63"><decl pos:start="1:53" pos:end="1:63"><type pos:start="1:53" pos:end="1:63"><name pos:start="1:53" pos:end="1:58">hwaddr</name></type> <name pos:start="1:60" pos:end="1:63">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">void</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:13">mem</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">hwaddr</name></type> <name pos:start="7:12" pos:end="7:14">len</name> <init pos:start="7:16" pos:end="7:36">= <expr pos:start="7:18" pos:end="7:36"><name pos:start="7:18" pos:end="7:36">ADTL_SAVE_AREA_SIZE</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:49"><expr pos:start="11:5" pos:end="11:48"><name pos:start="11:5" pos:end="11:7">mem</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:48"><name pos:start="11:11" pos:end="11:33">cpu_physical_memory_map</name><argument_list pos:start="11:34" pos:end="11:48">(<argument pos:start="11:35" pos:end="11:38"><expr pos:start="11:35" pos:end="11:38"><name pos:start="11:35" pos:end="11:38">addr</name></expr></argument>, <argument pos:start="11:41" pos:end="11:44"><expr pos:start="11:41" pos:end="11:44"><operator pos:start="11:41" pos:end="11:41">&amp;</operator><name pos:start="11:42" pos:end="11:44">len</name></expr></argument>, <argument pos:start="11:47" pos:end="11:47"><expr pos:start="11:47" pos:end="11:47"><literal type="number" pos:start="11:47" pos:end="11:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:13">(<expr pos:start="13:9" pos:end="13:12"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:12">mem</name></expr>)</condition> <block pos:start="13:15" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:23">

        <return pos:start="15:9" pos:end="15:23">return <expr pos:start="15:16" pos:end="15:22"><operator pos:start="15:16" pos:end="15:16">-</operator><name pos:start="15:17" pos:end="15:22">EFAULT</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:35">(<expr pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:11">len</name> <operator pos:start="19:13" pos:end="19:14">!=</operator> <name pos:start="19:16" pos:end="19:34">ADTL_SAVE_AREA_SIZE</name></expr>)</condition> <block pos:start="19:37" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:23">

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><call pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:33">cpu_physical_memory_unmap</name><argument_list pos:start="21:34" pos:end="21:49">(<argument pos:start="21:35" pos:end="21:37"><expr pos:start="21:35" pos:end="21:37"><name pos:start="21:35" pos:end="21:37">mem</name></expr></argument>, <argument pos:start="21:40" pos:end="21:42"><expr pos:start="21:40" pos:end="21:42"><name pos:start="21:40" pos:end="21:42">len</name></expr></argument>, <argument pos:start="21:45" pos:end="21:45"><expr pos:start="21:45" pos:end="21:45"><literal type="number" pos:start="21:45" pos:end="21:45">1</literal></expr></argument>, <argument pos:start="21:48" pos:end="21:48"><expr pos:start="21:48" pos:end="21:48"><literal type="number" pos:start="21:48" pos:end="21:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:23">return <expr pos:start="23:16" pos:end="23:22"><operator pos:start="23:16" pos:end="23:16">-</operator><name pos:start="23:17" pos:end="23:22">EFAULT</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:38"><expr pos:start="29:5" pos:end="29:37"><call pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:10">memcpy</name><argument_list pos:start="29:11" pos:end="29:37">(<argument pos:start="29:12" pos:end="29:14"><expr pos:start="29:12" pos:end="29:14"><name pos:start="29:12" pos:end="29:14">mem</name></expr></argument>, <argument pos:start="29:17" pos:end="29:31"><expr pos:start="29:17" pos:end="29:31"><operator pos:start="29:17" pos:end="29:17">&amp;</operator><name pos:start="29:18" pos:end="29:31"><name pos:start="29:18" pos:end="29:20">cpu</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:25">env</name><operator pos:start="29:26" pos:end="29:26">.</operator><name pos:start="29:27" pos:end="29:31">vregs</name></name></expr></argument>, <argument pos:start="29:34" pos:end="29:36"><expr pos:start="29:34" pos:end="29:36"><literal type="number" pos:start="29:34" pos:end="29:36">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:48"><expr pos:start="33:5" pos:end="33:47"><call pos:start="33:5" pos:end="33:47"><name pos:start="33:5" pos:end="33:29">cpu_physical_memory_unmap</name><argument_list pos:start="33:30" pos:end="33:47">(<argument pos:start="33:31" pos:end="33:33"><expr pos:start="33:31" pos:end="33:33"><name pos:start="33:31" pos:end="33:33">mem</name></expr></argument>, <argument pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><name pos:start="33:36" pos:end="33:38">len</name></expr></argument>, <argument pos:start="33:41" pos:end="33:41"><expr pos:start="33:41" pos:end="33:41"><literal type="number" pos:start="33:41" pos:end="33:41">1</literal></expr></argument>, <argument pos:start="33:44" pos:end="33:46"><expr pos:start="33:44" pos:end="33:46"><name pos:start="33:44" pos:end="33:46">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
