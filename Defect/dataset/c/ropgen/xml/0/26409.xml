<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26409.c" pos:tabs="8"><function pos:start="1:1" pos:end="289:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">blk_connect</name><parameter_list pos:start="1:23" pos:end="1:48">(<parameter pos:start="1:24" pos:end="1:47"><decl pos:start="1:24" pos:end="1:47"><type pos:start="1:24" pos:end="1:47"><name pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:29">struct</name> <name pos:start="1:31" pos:end="1:39">XenDevice</name></name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">xendev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="289:1">{<block_content pos:start="5:5" pos:end="287:13">

    <decl_stmt pos:start="5:5" pos:end="5:78"><decl pos:start="5:5" pos:end="5:77"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">XenBlkDev</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">blkdev</name> <init pos:start="5:30" pos:end="5:77">= <expr pos:start="5:32" pos:end="5:77"><call pos:start="5:32" pos:end="5:77"><name pos:start="5:32" pos:end="5:43">container_of</name><argument_list pos:start="5:44" pos:end="5:77">(<argument pos:start="5:45" pos:end="5:50"><expr pos:start="5:45" pos:end="5:50"><name pos:start="5:45" pos:end="5:50">xendev</name></expr></argument>, <argument pos:start="5:53" pos:end="5:68"><expr pos:start="5:53" pos:end="5:68">struct <name pos:start="5:60" pos:end="5:68">XenBlkDev</name></expr></argument>, <argument pos:start="5:71" pos:end="5:76"><expr pos:start="5:71" pos:end="5:76"><name pos:start="5:71" pos:end="5:76">xendev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">pers</name></decl>, <decl pos:start="7:15" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:19">index</name></decl>, <decl pos:start="7:22" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:27">qflags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:17">readonly</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">true</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:21">/* read-only ? */</comment>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:29">(<expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:14">blkdev</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:28">directiosafe</name></name></expr>)</condition> <block pos:start="15:31" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:52">

        <expr_stmt pos:start="17:9" pos:end="17:52"><expr pos:start="17:9" pos:end="17:51"><name pos:start="17:9" pos:end="17:14">qflags</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:31">BDRV_O_NOCACHE</name> <operator pos:start="17:33" pos:end="17:33">|</operator> <name pos:start="17:35" pos:end="17:51">BDRV_O_NATIVE_AIO</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="23:5">else <block pos:start="19:12" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:33">

        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:14">qflags</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:32">BDRV_O_CACHE_WB</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:39">(<expr pos:start="25:9" pos:end="25:38"><call pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:14">strcmp</name><argument_list pos:start="25:15" pos:end="25:33">(<argument pos:start="25:16" pos:end="25:27"><expr pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:21">blkdev</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:27">mode</name></name></expr></argument>, <argument pos:start="25:30" pos:end="25:32"><expr pos:start="25:30" pos:end="25:32"><literal type="string" pos:start="25:30" pos:end="25:32">"w"</literal></expr></argument>)</argument_list></call> <operator pos:start="25:35" pos:end="25:36">==</operator> <literal type="number" pos:start="25:38" pos:end="25:38">0</literal></expr>)</condition> <block pos:start="25:41" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:25">

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:14">qflags</name> <operator pos:start="27:16" pos:end="27:17">|=</operator> <name pos:start="27:19" pos:end="27:29">BDRV_O_RDWR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:16">readonly</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:24">false</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:32">/* init qemu block driver */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:50"><expr pos:start="37:5" pos:end="37:49"><name pos:start="37:5" pos:end="37:9">index</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <operator pos:start="37:13" pos:end="37:13">(</operator><name pos:start="37:14" pos:end="37:31"><name pos:start="37:14" pos:end="37:19">blkdev</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:27">xendev</name><operator pos:start="37:28" pos:end="37:28">.</operator><name pos:start="37:29" pos:end="37:31">dev</name></name> <operator pos:start="37:33" pos:end="37:33">-</operator> <literal type="number" pos:start="37:35" pos:end="37:37">202</literal> <operator pos:start="37:39" pos:end="37:39">*</operator> <literal type="number" pos:start="37:41" pos:end="37:43">256</literal><operator pos:start="37:44" pos:end="37:44">)</operator> <operator pos:start="37:46" pos:end="37:46">/</operator> <literal type="number" pos:start="37:48" pos:end="37:49">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:48"><expr pos:start="39:5" pos:end="39:47"><name pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:10">blkdev</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:17">dinfo</name></name> <operator pos:start="39:19" pos:end="39:19">=</operator> <call pos:start="39:21" pos:end="39:47"><name pos:start="39:21" pos:end="39:29">drive_get</name><argument_list pos:start="39:30" pos:end="39:47">(<argument pos:start="39:31" pos:end="39:36"><expr pos:start="39:31" pos:end="39:36"><name pos:start="39:31" pos:end="39:36">IF_XEN</name></expr></argument>, <argument pos:start="39:39" pos:end="39:39"><expr pos:start="39:39" pos:end="39:39"><literal type="number" pos:start="39:39" pos:end="39:39">0</literal></expr></argument>, <argument pos:start="39:42" pos:end="39:46"><expr pos:start="39:42" pos:end="39:46"><name pos:start="39:42" pos:end="39:46">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="107:5"><if pos:start="41:5" pos:end="83:5">if <condition pos:start="41:8" pos:end="41:23">(<expr pos:start="41:9" pos:end="41:22"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:22"><name pos:start="41:10" pos:end="41:15">blkdev</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:22">dinfo</name></name></expr>)</condition> <block pos:start="41:25" pos:end="83:5">{<block_content pos:start="45:9" pos:end="81:9">

        <comment type="block" pos:start="43:9" pos:end="43:66">/* setup via xenbus -&gt; create new block driver instance */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:78"><expr pos:start="45:9" pos:end="45:77"><call pos:start="45:9" pos:end="45:77"><name pos:start="45:9" pos:end="45:21">xen_be_printf</name><argument_list pos:start="45:22" pos:end="45:77">(<argument pos:start="45:23" pos:end="45:37"><expr pos:start="45:23" pos:end="45:37"><operator pos:start="45:23" pos:end="45:23">&amp;</operator><name pos:start="45:24" pos:end="45:37"><name pos:start="45:24" pos:end="45:29">blkdev</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:37">xendev</name></name></expr></argument>, <argument pos:start="45:40" pos:end="45:40"><expr pos:start="45:40" pos:end="45:40"><literal type="number" pos:start="45:40" pos:end="45:40">2</literal></expr></argument>, <argument pos:start="45:43" pos:end="45:76"><expr pos:start="45:43" pos:end="45:76"><literal type="string" pos:start="45:43" pos:end="45:76">"create new bdrv (xenbus setup)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:43"><expr pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:14">blkdev</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:18">bs</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <call pos:start="47:22" pos:end="47:42"><name pos:start="47:22" pos:end="47:29">bdrv_new</name><argument_list pos:start="47:30" pos:end="47:42">(<argument pos:start="47:31" pos:end="47:41"><expr pos:start="47:31" pos:end="47:41"><name pos:start="47:31" pos:end="47:41"><name pos:start="47:31" pos:end="47:36">blkdev</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:41">dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="75:9"><if pos:start="49:9" pos:end="75:9">if <condition pos:start="49:12" pos:end="49:23">(<expr pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:18">blkdev</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:22">bs</name></name></expr>)</condition> <block pos:start="49:25" pos:end="75:9">{<block_content pos:start="51:13" pos:end="73:13">

            <decl_stmt pos:start="51:13" pos:end="51:36"><decl pos:start="51:13" pos:end="51:35"><type pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:17">Error</name> <modifier pos:start="51:19" pos:end="51:19">*</modifier></type><name pos:start="51:20" pos:end="51:28">local_err</name> <init pos:start="51:30" pos:end="51:35">= <expr pos:start="51:32" pos:end="51:35"><name pos:start="51:32" pos:end="51:35">NULL</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="55:69"><decl pos:start="53:13" pos:end="55:68"><type pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:23">BlockDriver</name> <modifier pos:start="53:25" pos:end="53:25">*</modifier></type><name pos:start="53:26" pos:end="53:28">drv</name> <init pos:start="53:30" pos:end="55:68">= <expr pos:start="53:32" pos:end="55:68"><call pos:start="53:32" pos:end="55:68"><name pos:start="53:32" pos:end="53:59">bdrv_find_whitelisted_format</name><argument_list pos:start="53:60" pos:end="55:68">(<argument pos:start="53:61" pos:end="53:77"><expr pos:start="53:61" pos:end="53:77"><name pos:start="53:61" pos:end="53:77"><name pos:start="53:61" pos:end="53:66">blkdev</name><operator pos:start="53:67" pos:end="53:68">-&gt;</operator><name pos:start="53:69" pos:end="53:77">fileproto</name></name></expr></argument>,

                                                           <argument pos:start="55:60" pos:end="55:67"><expr pos:start="55:60" pos:end="55:67"><name pos:start="55:60" pos:end="55:67">readonly</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="57:13" pos:end="73:13"><if pos:start="57:13" pos:end="73:13">if <condition pos:start="57:16" pos:end="59:48">(<expr pos:start="57:17" pos:end="59:47"><call pos:start="57:17" pos:end="59:42"><name pos:start="57:17" pos:end="57:25">bdrv_open</name><argument_list pos:start="57:26" pos:end="59:42">(<argument pos:start="57:27" pos:end="57:37"><expr pos:start="57:27" pos:end="57:37"><operator pos:start="57:27" pos:end="57:27">&amp;</operator><name pos:start="57:28" pos:end="57:37"><name pos:start="57:28" pos:end="57:33">blkdev</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:37">bs</name></name></expr></argument>, <argument pos:start="57:40" pos:end="57:55"><expr pos:start="57:40" pos:end="57:55"><name pos:start="57:40" pos:end="57:55"><name pos:start="57:40" pos:end="57:45">blkdev</name><operator pos:start="57:46" pos:end="57:47">-&gt;</operator><name pos:start="57:48" pos:end="57:55">filename</name></name></expr></argument>, <argument pos:start="57:58" pos:end="57:61"><expr pos:start="57:58" pos:end="57:61"><name pos:start="57:58" pos:end="57:61">NULL</name></expr></argument>, <argument pos:start="57:64" pos:end="57:67"><expr pos:start="57:64" pos:end="57:67"><name pos:start="57:64" pos:end="57:67">NULL</name></expr></argument>, <argument pos:start="57:70" pos:end="57:75"><expr pos:start="57:70" pos:end="57:75"><name pos:start="57:70" pos:end="57:75">qflags</name></expr></argument>,

                          <argument pos:start="59:27" pos:end="59:29"><expr pos:start="59:27" pos:end="59:29"><name pos:start="59:27" pos:end="59:29">drv</name></expr></argument>, <argument pos:start="59:32" pos:end="59:41"><expr pos:start="59:32" pos:end="59:41"><operator pos:start="59:32" pos:end="59:32">&amp;</operator><name pos:start="59:33" pos:end="59:41">local_err</name></expr></argument>)</argument_list></call> <operator pos:start="59:44" pos:end="59:45">!=</operator> <literal type="number" pos:start="59:47" pos:end="59:47">0</literal></expr>)</condition>

            <block pos:start="61:13" pos:end="73:13">{<block_content pos:start="63:17" pos:end="71:34">

                <expr_stmt pos:start="63:17" pos:end="65:59"><expr pos:start="63:17" pos:end="65:58"><call pos:start="63:17" pos:end="65:58"><name pos:start="63:17" pos:end="63:29">xen_be_printf</name><argument_list pos:start="63:30" pos:end="65:58">(<argument pos:start="63:31" pos:end="63:45"><expr pos:start="63:31" pos:end="63:45"><operator pos:start="63:31" pos:end="63:31">&amp;</operator><name pos:start="63:32" pos:end="63:45"><name pos:start="63:32" pos:end="63:37">blkdev</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:45">xendev</name></name></expr></argument>, <argument pos:start="63:48" pos:end="63:48"><expr pos:start="63:48" pos:end="63:48"><literal type="number" pos:start="63:48" pos:end="63:48">0</literal></expr></argument>, <argument pos:start="63:51" pos:end="63:63"><expr pos:start="63:51" pos:end="63:63"><literal type="string" pos:start="63:51" pos:end="63:63">"error: %s\n"</literal></expr></argument>,

                              <argument pos:start="65:31" pos:end="65:57"><expr pos:start="65:31" pos:end="65:57"><call pos:start="65:31" pos:end="65:57"><name pos:start="65:31" pos:end="65:46">error_get_pretty</name><argument_list pos:start="65:47" pos:end="65:57">(<argument pos:start="65:48" pos:end="65:56"><expr pos:start="65:48" pos:end="65:56"><name pos:start="65:48" pos:end="65:56">local_err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:38"><expr pos:start="67:17" pos:end="67:37"><call pos:start="67:17" pos:end="67:37"><name pos:start="67:17" pos:end="67:26">error_free</name><argument_list pos:start="67:27" pos:end="67:37">(<argument pos:start="67:28" pos:end="67:36"><expr pos:start="67:28" pos:end="67:36"><name pos:start="67:28" pos:end="67:36">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:39"><expr pos:start="69:17" pos:end="69:38"><call pos:start="69:17" pos:end="69:38"><name pos:start="69:17" pos:end="69:26">bdrv_unref</name><argument_list pos:start="69:27" pos:end="69:38">(<argument pos:start="69:28" pos:end="69:37"><expr pos:start="69:28" pos:end="69:37"><name pos:start="69:28" pos:end="69:37"><name pos:start="69:28" pos:end="69:33">blkdev</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:37">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:34"><expr pos:start="71:17" pos:end="71:33"><name pos:start="71:17" pos:end="71:26"><name pos:start="71:17" pos:end="71:22">blkdev</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:26">bs</name></name> <operator pos:start="71:28" pos:end="71:28">=</operator> <name pos:start="71:30" pos:end="71:33">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:24">(<expr pos:start="77:13" pos:end="77:23"><operator pos:start="77:13" pos:end="77:13">!</operator><name pos:start="77:14" pos:end="77:23"><name pos:start="77:14" pos:end="77:19">blkdev</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:23">bs</name></name></expr>)</condition> <block pos:start="77:26" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:22">

            <return pos:start="79:13" pos:end="79:22">return <expr pos:start="79:20" pos:end="79:21"><operator pos:start="79:20" pos:end="79:20">-</operator><literal type="number" pos:start="79:21" pos:end="79:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="107:5">else <block pos:start="83:12" pos:end="107:5">{<block_content pos:start="87:9" pos:end="105:29">

        <comment type="block" pos:start="85:9" pos:end="85:60">/* setup via qemu cmdline -&gt; already setup for us */</comment>

        <expr_stmt pos:start="87:9" pos:end="87:83"><expr pos:start="87:9" pos:end="87:82"><call pos:start="87:9" pos:end="87:82"><name pos:start="87:9" pos:end="87:21">xen_be_printf</name><argument_list pos:start="87:22" pos:end="87:82">(<argument pos:start="87:23" pos:end="87:37"><expr pos:start="87:23" pos:end="87:37"><operator pos:start="87:23" pos:end="87:23">&amp;</operator><name pos:start="87:24" pos:end="87:37"><name pos:start="87:24" pos:end="87:29">blkdev</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:37">xendev</name></name></expr></argument>, <argument pos:start="87:40" pos:end="87:40"><expr pos:start="87:40" pos:end="87:40"><literal type="number" pos:start="87:40" pos:end="87:40">2</literal></expr></argument>, <argument pos:start="87:43" pos:end="87:81"><expr pos:start="87:43" pos:end="87:81"><literal type="string" pos:start="87:43" pos:end="87:81">"get configured bdrv (cmdline setup)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:41"><expr pos:start="89:9" pos:end="89:40"><name pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:14">blkdev</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:18">bs</name></name> <operator pos:start="89:20" pos:end="89:20">=</operator> <name pos:start="89:22" pos:end="89:40"><name pos:start="89:22" pos:end="89:27">blkdev</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:34">dinfo</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:40">bdrv</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="99:9"><if pos:start="91:9" pos:end="99:9">if <condition pos:start="91:12" pos:end="91:55">(<expr pos:start="91:13" pos:end="91:54"><call pos:start="91:13" pos:end="91:41"><name pos:start="91:13" pos:end="91:29">bdrv_is_read_only</name><argument_list pos:start="91:30" pos:end="91:41">(<argument pos:start="91:31" pos:end="91:40"><expr pos:start="91:31" pos:end="91:40"><name pos:start="91:31" pos:end="91:40"><name pos:start="91:31" pos:end="91:36">blkdev</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:40">bs</name></name></expr></argument>)</argument_list></call> <operator pos:start="91:43" pos:end="91:44">&amp;&amp;</operator> <operator pos:start="91:46" pos:end="91:46">!</operator><name pos:start="91:47" pos:end="91:54">readonly</name></expr>)</condition> <block pos:start="91:57" pos:end="99:9">{<block_content pos:start="93:13" pos:end="97:22">

            <expr_stmt pos:start="93:13" pos:end="93:76"><expr pos:start="93:13" pos:end="93:75"><call pos:start="93:13" pos:end="93:75"><name pos:start="93:13" pos:end="93:25">xen_be_printf</name><argument_list pos:start="93:26" pos:end="93:75">(<argument pos:start="93:27" pos:end="93:41"><expr pos:start="93:27" pos:end="93:41"><operator pos:start="93:27" pos:end="93:27">&amp;</operator><name pos:start="93:28" pos:end="93:41"><name pos:start="93:28" pos:end="93:33">blkdev</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:41">xendev</name></name></expr></argument>, <argument pos:start="93:44" pos:end="93:44"><expr pos:start="93:44" pos:end="93:44"><literal type="number" pos:start="93:44" pos:end="93:44">0</literal></expr></argument>, <argument pos:start="93:47" pos:end="93:74"><expr pos:start="93:47" pos:end="93:74"><literal type="string" pos:start="93:47" pos:end="93:74">"Unexpected read-only drive"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:30"><expr pos:start="95:13" pos:end="95:29"><name pos:start="95:13" pos:end="95:22"><name pos:start="95:13" pos:end="95:18">blkdev</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:22">bs</name></name> <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:29">NULL</name></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:22">return <expr pos:start="97:20" pos:end="97:21"><operator pos:start="97:20" pos:end="97:20">-</operator><literal type="number" pos:start="97:21" pos:end="97:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="101:9" pos:end="103:52">/* blkdev-&gt;bs is not create by us, we get a reference

         * so we can bdrv_unref() unconditionally */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:29"><expr pos:start="105:9" pos:end="105:28"><call pos:start="105:9" pos:end="105:28"><name pos:start="105:9" pos:end="105:16">bdrv_ref</name><argument_list pos:start="105:17" pos:end="105:28">(<argument pos:start="105:18" pos:end="105:27"><expr pos:start="105:18" pos:end="105:27"><name pos:start="105:18" pos:end="105:27"><name pos:start="105:18" pos:end="105:23">blkdev</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:27">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:47"><expr pos:start="109:5" pos:end="109:46"><call pos:start="109:5" pos:end="109:46"><name pos:start="109:5" pos:end="109:26">bdrv_attach_dev_nofail</name><argument_list pos:start="109:27" pos:end="109:46">(<argument pos:start="109:28" pos:end="109:37"><expr pos:start="109:28" pos:end="109:37"><name pos:start="109:28" pos:end="109:37"><name pos:start="109:28" pos:end="109:33">blkdev</name><operator pos:start="109:34" pos:end="109:35">-&gt;</operator><name pos:start="109:36" pos:end="109:37">bs</name></name></expr></argument>, <argument pos:start="109:40" pos:end="109:45"><expr pos:start="109:40" pos:end="109:45"><name pos:start="109:40" pos:end="109:45">blkdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:51"><expr pos:start="111:5" pos:end="111:50"><name pos:start="111:5" pos:end="111:21"><name pos:start="111:5" pos:end="111:10">blkdev</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:21">file_size</name></name> <operator pos:start="111:23" pos:end="111:23">=</operator> <call pos:start="111:25" pos:end="111:50"><name pos:start="111:25" pos:end="111:38">bdrv_getlength</name><argument_list pos:start="111:39" pos:end="111:50">(<argument pos:start="111:40" pos:end="111:49"><expr pos:start="111:40" pos:end="111:49"><name pos:start="111:40" pos:end="111:49"><name pos:start="111:40" pos:end="111:45">blkdev</name><operator pos:start="111:46" pos:end="111:47">-&gt;</operator><name pos:start="111:48" pos:end="111:49">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="123:5"><if pos:start="113:5" pos:end="123:5">if <condition pos:start="113:8" pos:end="113:30">(<expr pos:start="113:9" pos:end="113:29"><name pos:start="113:9" pos:end="113:25"><name pos:start="113:9" pos:end="113:14">blkdev</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:25">file_size</name></name> <operator pos:start="113:27" pos:end="113:27">&lt;</operator> <literal type="number" pos:start="113:29" pos:end="113:29">0</literal></expr>)</condition> <block pos:start="113:32" pos:end="123:5">{<block_content pos:start="115:9" pos:end="121:30">

        <expr_stmt pos:start="115:9" pos:end="119:63"><expr pos:start="115:9" pos:end="119:62"><call pos:start="115:9" pos:end="119:62"><name pos:start="115:9" pos:end="115:21">xen_be_printf</name><argument_list pos:start="115:22" pos:end="119:62">(<argument pos:start="115:23" pos:end="115:37"><expr pos:start="115:23" pos:end="115:37"><operator pos:start="115:23" pos:end="115:23">&amp;</operator><name pos:start="115:24" pos:end="115:37"><name pos:start="115:24" pos:end="115:29">blkdev</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:37">xendev</name></name></expr></argument>, <argument pos:start="115:40" pos:end="115:40"><expr pos:start="115:40" pos:end="115:40"><literal type="number" pos:start="115:40" pos:end="115:40">1</literal></expr></argument>, <argument pos:start="115:43" pos:end="115:78"><expr pos:start="115:43" pos:end="115:78"><literal type="string" pos:start="115:43" pos:end="115:78">"bdrv_getlength: %d (%s) | drv %s\n"</literal></expr></argument>,

                      <argument pos:start="117:23" pos:end="117:44"><expr pos:start="117:23" pos:end="117:44"><operator pos:start="117:23" pos:end="117:23">(</operator><name pos:start="117:24" pos:end="117:26">int</name><operator pos:start="117:27" pos:end="117:27">)</operator><name pos:start="117:28" pos:end="117:44"><name pos:start="117:28" pos:end="117:33">blkdev</name><operator pos:start="117:34" pos:end="117:35">-&gt;</operator><name pos:start="117:36" pos:end="117:44">file_size</name></name></expr></argument>, <argument pos:start="117:47" pos:end="117:74"><expr pos:start="117:47" pos:end="117:74"><call pos:start="117:47" pos:end="117:74"><name pos:start="117:47" pos:end="117:54">strerror</name><argument_list pos:start="117:55" pos:end="117:74">(<argument pos:start="117:56" pos:end="117:73"><expr pos:start="117:56" pos:end="117:73"><operator pos:start="117:56" pos:end="117:56">-</operator><name pos:start="117:57" pos:end="117:73"><name pos:start="117:57" pos:end="117:62">blkdev</name><operator pos:start="117:63" pos:end="117:64">-&gt;</operator><name pos:start="117:65" pos:end="117:73">file_size</name></name></expr></argument>)</argument_list></call></expr></argument>,

                      <argument pos:start="119:23" pos:end="119:61"><expr pos:start="119:23" pos:end="119:61"><ternary pos:start="119:23" pos:end="119:61"><condition pos:start="119:23" pos:end="119:56"><expr pos:start="119:23" pos:end="119:54"><call pos:start="119:23" pos:end="119:54"><name pos:start="119:23" pos:end="119:42">bdrv_get_format_name</name><argument_list pos:start="119:43" pos:end="119:54">(<argument pos:start="119:44" pos:end="119:53"><expr pos:start="119:44" pos:end="119:53"><name pos:start="119:44" pos:end="119:53"><name pos:start="119:44" pos:end="119:49">blkdev</name><operator pos:start="119:50" pos:end="119:51">-&gt;</operator><name pos:start="119:52" pos:end="119:53">bs</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then/><else pos:start="119:57" pos:end="119:61">: <expr pos:start="119:59" pos:end="119:61"><literal type="string" pos:start="119:59" pos:end="119:61">"-"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:30"><expr pos:start="121:9" pos:end="121:29"><name pos:start="121:9" pos:end="121:25"><name pos:start="121:9" pos:end="121:14">blkdev</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:25">file_size</name></name> <operator pos:start="121:27" pos:end="121:27">=</operator> <literal type="number" pos:start="121:29" pos:end="121:29">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="133:62"><expr pos:start="127:5" pos:end="133:61"><call pos:start="127:5" pos:end="133:61"><name pos:start="127:5" pos:end="127:17">xen_be_printf</name><argument_list pos:start="127:18" pos:end="133:61">(<argument pos:start="127:19" pos:end="127:24"><expr pos:start="127:19" pos:end="127:24"><name pos:start="127:19" pos:end="127:24">xendev</name></expr></argument>, <argument pos:start="127:27" pos:end="127:27"><expr pos:start="127:27" pos:end="127:27"><literal type="number" pos:start="127:27" pos:end="127:27">1</literal></expr></argument>, <argument pos:start="127:30" pos:end="129:56"><expr pos:start="127:30" pos:end="129:56"><literal type="string" pos:start="127:30" pos:end="127:78">"type \"%s\", fileproto \"%s\", filename \"%s\","</literal>

                  <literal type="string" pos:start="129:19" pos:end="129:27">" size %"</literal> <name pos:start="129:29" pos:end="129:34">PRId64</name> <literal type="string" pos:start="129:36" pos:end="129:40">" (%"</literal> <name pos:start="129:42" pos:end="129:47">PRId64</name> <literal type="string" pos:start="129:49" pos:end="129:56">" MB)\n"</literal></expr></argument>,

                  <argument pos:start="131:19" pos:end="131:30"><expr pos:start="131:19" pos:end="131:30"><name pos:start="131:19" pos:end="131:30"><name pos:start="131:19" pos:end="131:24">blkdev</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:30">type</name></name></expr></argument>, <argument pos:start="131:33" pos:end="131:49"><expr pos:start="131:33" pos:end="131:49"><name pos:start="131:33" pos:end="131:49"><name pos:start="131:33" pos:end="131:38">blkdev</name><operator pos:start="131:39" pos:end="131:40">-&gt;</operator><name pos:start="131:41" pos:end="131:49">fileproto</name></name></expr></argument>, <argument pos:start="131:52" pos:end="131:67"><expr pos:start="131:52" pos:end="131:67"><name pos:start="131:52" pos:end="131:67"><name pos:start="131:52" pos:end="131:57">blkdev</name><operator pos:start="131:58" pos:end="131:59">-&gt;</operator><name pos:start="131:60" pos:end="131:67">filename</name></name></expr></argument>,

                  <argument pos:start="133:19" pos:end="133:35"><expr pos:start="133:19" pos:end="133:35"><name pos:start="133:19" pos:end="133:35"><name pos:start="133:19" pos:end="133:24">blkdev</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:35">file_size</name></name></expr></argument>, <argument pos:start="133:38" pos:end="133:60"><expr pos:start="133:38" pos:end="133:60"><name pos:start="133:38" pos:end="133:54"><name pos:start="133:38" pos:end="133:43">blkdev</name><operator pos:start="133:44" pos:end="133:45">-&gt;</operator><name pos:start="133:46" pos:end="133:54">file_size</name></name> <operator pos:start="133:56" pos:end="133:57">&gt;&gt;</operator> <literal type="number" pos:start="133:59" pos:end="133:60">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="137:5" pos:end="137:61">/* Fill in number of sector size and number of sectors */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:76"><expr pos:start="139:5" pos:end="139:75"><call pos:start="139:5" pos:end="139:75"><name pos:start="139:5" pos:end="139:25">xenstore_write_be_int</name><argument_list pos:start="139:26" pos:end="139:75">(<argument pos:start="139:27" pos:end="139:41"><expr pos:start="139:27" pos:end="139:41"><operator pos:start="139:27" pos:end="139:27">&amp;</operator><name pos:start="139:28" pos:end="139:41"><name pos:start="139:28" pos:end="139:33">blkdev</name><operator pos:start="139:34" pos:end="139:35">-&gt;</operator><name pos:start="139:36" pos:end="139:41">xendev</name></name></expr></argument>, <argument pos:start="139:44" pos:end="139:56"><expr pos:start="139:44" pos:end="139:56"><literal type="string" pos:start="139:44" pos:end="139:56">"sector-size"</literal></expr></argument>, <argument pos:start="139:59" pos:end="139:74"><expr pos:start="139:59" pos:end="139:74"><name pos:start="139:59" pos:end="139:74"><name pos:start="139:59" pos:end="139:64">blkdev</name><operator pos:start="139:65" pos:end="139:66">-&gt;</operator><name pos:start="139:67" pos:end="139:74">file_blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="143:66"><expr pos:start="141:5" pos:end="143:65"><call pos:start="141:5" pos:end="143:65"><name pos:start="141:5" pos:end="141:27">xenstore_write_be_int64</name><argument_list pos:start="141:28" pos:end="143:65">(<argument pos:start="141:29" pos:end="141:43"><expr pos:start="141:29" pos:end="141:43"><operator pos:start="141:29" pos:end="141:29">&amp;</operator><name pos:start="141:30" pos:end="141:43"><name pos:start="141:30" pos:end="141:35">blkdev</name><operator pos:start="141:36" pos:end="141:37">-&gt;</operator><name pos:start="141:38" pos:end="141:43">xendev</name></name></expr></argument>, <argument pos:start="141:46" pos:end="141:54"><expr pos:start="141:46" pos:end="141:54"><literal type="string" pos:start="141:46" pos:end="141:54">"sectors"</literal></expr></argument>,

                            <argument pos:start="143:29" pos:end="143:64"><expr pos:start="143:29" pos:end="143:64"><name pos:start="143:29" pos:end="143:45"><name pos:start="143:29" pos:end="143:34">blkdev</name><operator pos:start="143:35" pos:end="143:36">-&gt;</operator><name pos:start="143:37" pos:end="143:45">file_size</name></name> <operator pos:start="143:47" pos:end="143:47">/</operator> <name pos:start="143:49" pos:end="143:64"><name pos:start="143:49" pos:end="143:54">blkdev</name><operator pos:start="143:55" pos:end="143:56">-&gt;</operator><name pos:start="143:57" pos:end="143:64">file_blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="147:5" pos:end="151:5"><if pos:start="147:5" pos:end="151:5">if <condition pos:start="147:8" pos:end="147:83">(<expr pos:start="147:9" pos:end="147:82"><call pos:start="147:9" pos:end="147:76"><name pos:start="147:9" pos:end="147:28">xenstore_read_fe_int</name><argument_list pos:start="147:29" pos:end="147:76">(<argument pos:start="147:30" pos:end="147:44"><expr pos:start="147:30" pos:end="147:44"><operator pos:start="147:30" pos:end="147:30">&amp;</operator><name pos:start="147:31" pos:end="147:44"><name pos:start="147:31" pos:end="147:36">blkdev</name><operator pos:start="147:37" pos:end="147:38">-&gt;</operator><name pos:start="147:39" pos:end="147:44">xendev</name></name></expr></argument>, <argument pos:start="147:47" pos:end="147:56"><expr pos:start="147:47" pos:end="147:56"><literal type="string" pos:start="147:47" pos:end="147:56">"ring-ref"</literal></expr></argument>, <argument pos:start="147:59" pos:end="147:75"><expr pos:start="147:59" pos:end="147:75"><operator pos:start="147:59" pos:end="147:59">&amp;</operator><name pos:start="147:60" pos:end="147:75"><name pos:start="147:60" pos:end="147:65">blkdev</name><operator pos:start="147:66" pos:end="147:67">-&gt;</operator><name pos:start="147:68" pos:end="147:75">ring_ref</name></name></expr></argument>)</argument_list></call> <operator pos:start="147:78" pos:end="147:79">==</operator> <operator pos:start="147:81" pos:end="147:81">-</operator><literal type="number" pos:start="147:82" pos:end="147:82">1</literal></expr>)</condition> <block pos:start="147:85" pos:end="151:5">{<block_content pos:start="149:9" pos:end="149:18">

        <return pos:start="149:9" pos:end="149:18">return <expr pos:start="149:16" pos:end="149:17"><operator pos:start="149:16" pos:end="149:16">-</operator><literal type="number" pos:start="149:17" pos:end="149:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="153:5" pos:end="159:5"><if pos:start="153:5" pos:end="159:5">if <condition pos:start="153:8" pos:end="155:64">(<expr pos:start="153:9" pos:end="155:63"><call pos:start="153:9" pos:end="155:57"><name pos:start="153:9" pos:end="153:28">xenstore_read_fe_int</name><argument_list pos:start="153:29" pos:end="155:57">(<argument pos:start="153:30" pos:end="153:44"><expr pos:start="153:30" pos:end="153:44"><operator pos:start="153:30" pos:end="153:30">&amp;</operator><name pos:start="153:31" pos:end="153:44"><name pos:start="153:31" pos:end="153:36">blkdev</name><operator pos:start="153:37" pos:end="153:38">-&gt;</operator><name pos:start="153:39" pos:end="153:44">xendev</name></name></expr></argument>, <argument pos:start="153:47" pos:end="153:61"><expr pos:start="153:47" pos:end="153:61"><literal type="string" pos:start="153:47" pos:end="153:61">"event-channel"</literal></expr></argument>,

                             <argument pos:start="155:30" pos:end="155:56"><expr pos:start="155:30" pos:end="155:56"><operator pos:start="155:30" pos:end="155:30">&amp;</operator><name pos:start="155:31" pos:end="155:56"><name pos:start="155:31" pos:end="155:36">blkdev</name><operator pos:start="155:37" pos:end="155:38">-&gt;</operator><name pos:start="155:39" pos:end="155:44">xendev</name><operator pos:start="155:45" pos:end="155:45">.</operator><name pos:start="155:46" pos:end="155:56">remote_port</name></name></expr></argument>)</argument_list></call> <operator pos:start="155:59" pos:end="155:60">==</operator> <operator pos:start="155:62" pos:end="155:62">-</operator><literal type="number" pos:start="155:63" pos:end="155:63">1</literal></expr>)</condition> <block pos:start="155:66" pos:end="159:5">{<block_content pos:start="157:9" pos:end="157:18">

        <return pos:start="157:9" pos:end="157:18">return <expr pos:start="157:16" pos:end="157:17"><operator pos:start="157:16" pos:end="157:16">-</operator><literal type="number" pos:start="157:17" pos:end="157:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="161:5" pos:end="169:5"><if pos:start="161:5" pos:end="165:5">if <condition pos:start="161:8" pos:end="161:75">(<expr pos:start="161:9" pos:end="161:74"><call pos:start="161:9" pos:end="161:74"><name pos:start="161:9" pos:end="161:28">xenstore_read_fe_int</name><argument_list pos:start="161:29" pos:end="161:74">(<argument pos:start="161:30" pos:end="161:44"><expr pos:start="161:30" pos:end="161:44"><operator pos:start="161:30" pos:end="161:30">&amp;</operator><name pos:start="161:31" pos:end="161:44"><name pos:start="161:31" pos:end="161:36">blkdev</name><operator pos:start="161:37" pos:end="161:38">-&gt;</operator><name pos:start="161:39" pos:end="161:44">xendev</name></name></expr></argument>, <argument pos:start="161:47" pos:end="161:66"><expr pos:start="161:47" pos:end="161:66"><literal type="string" pos:start="161:47" pos:end="161:66">"feature-persistent"</literal></expr></argument>, <argument pos:start="161:69" pos:end="161:73"><expr pos:start="161:69" pos:end="161:73"><operator pos:start="161:69" pos:end="161:69">&amp;</operator><name pos:start="161:70" pos:end="161:73">pers</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="161:77" pos:end="165:5">{<block_content pos:start="163:9" pos:end="163:43">

        <expr_stmt pos:start="163:9" pos:end="163:43"><expr pos:start="163:9" pos:end="163:42"><name pos:start="163:9" pos:end="163:34"><name pos:start="163:9" pos:end="163:14">blkdev</name><operator pos:start="163:15" pos:end="163:16">-&gt;</operator><name pos:start="163:17" pos:end="163:34">feature_persistent</name></name> <operator pos:start="163:36" pos:end="163:36">=</operator> <name pos:start="163:38" pos:end="163:42">FALSE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="165:7" pos:end="169:5">else <block pos:start="165:12" pos:end="169:5">{<block_content pos:start="167:9" pos:end="167:44">

        <expr_stmt pos:start="167:9" pos:end="167:44"><expr pos:start="167:9" pos:end="167:43"><name pos:start="167:9" pos:end="167:34"><name pos:start="167:9" pos:end="167:14">blkdev</name><operator pos:start="167:15" pos:end="167:16">-&gt;</operator><name pos:start="167:17" pos:end="167:34">feature_persistent</name></name> <operator pos:start="167:36" pos:end="167:36">=</operator> <operator pos:start="167:38" pos:end="167:38">!</operator><operator pos:start="167:39" pos:end="167:39">!</operator><name pos:start="167:40" pos:end="167:43">pers</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="173:5" pos:end="173:45"><expr pos:start="173:5" pos:end="173:44"><name pos:start="173:5" pos:end="173:20"><name pos:start="173:5" pos:end="173:10">blkdev</name><operator pos:start="173:11" pos:end="173:12">-&gt;</operator><name pos:start="173:13" pos:end="173:20">protocol</name></name> <operator pos:start="173:22" pos:end="173:22">=</operator> <name pos:start="173:24" pos:end="173:44">BLKIF_PROTOCOL_NATIVE</name></expr>;</expr_stmt>

    <if_stmt pos:start="175:5" pos:end="189:5"><if pos:start="175:5" pos:end="189:5">if <condition pos:start="175:8" pos:end="175:32">(<expr pos:start="175:9" pos:end="175:31"><name pos:start="175:9" pos:end="175:31"><name pos:start="175:9" pos:end="175:14">blkdev</name><operator pos:start="175:15" pos:end="175:16">-&gt;</operator><name pos:start="175:17" pos:end="175:22">xendev</name><operator pos:start="175:23" pos:end="175:23">.</operator><name pos:start="175:24" pos:end="175:31">protocol</name></name></expr>)</condition> <block pos:start="175:34" pos:end="189:5">{<block_content pos:start="177:9" pos:end="187:9">

        <if_stmt pos:start="177:9" pos:end="181:9"><if pos:start="177:9" pos:end="181:9">if <condition pos:start="177:12" pos:end="177:74">(<expr pos:start="177:13" pos:end="177:73"><call pos:start="177:13" pos:end="177:68"><name pos:start="177:13" pos:end="177:18">strcmp</name><argument_list pos:start="177:19" pos:end="177:68">(<argument pos:start="177:20" pos:end="177:42"><expr pos:start="177:20" pos:end="177:42"><name pos:start="177:20" pos:end="177:42"><name pos:start="177:20" pos:end="177:25">blkdev</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:33">xendev</name><operator pos:start="177:34" pos:end="177:34">.</operator><name pos:start="177:35" pos:end="177:42">protocol</name></name></expr></argument>, <argument pos:start="177:45" pos:end="177:67"><expr pos:start="177:45" pos:end="177:67"><name pos:start="177:45" pos:end="177:67">XEN_IO_PROTO_ABI_X86_32</name></expr></argument>)</argument_list></call> <operator pos:start="177:70" pos:end="177:71">==</operator> <literal type="number" pos:start="177:73" pos:end="177:73">0</literal></expr>)</condition> <block pos:start="177:76" pos:end="181:9">{<block_content pos:start="179:13" pos:end="179:53">

            <expr_stmt pos:start="179:13" pos:end="179:53"><expr pos:start="179:13" pos:end="179:52"><name pos:start="179:13" pos:end="179:28"><name pos:start="179:13" pos:end="179:18">blkdev</name><operator pos:start="179:19" pos:end="179:20">-&gt;</operator><name pos:start="179:21" pos:end="179:28">protocol</name></name> <operator pos:start="179:30" pos:end="179:30">=</operator> <name pos:start="179:32" pos:end="179:52">BLKIF_PROTOCOL_X86_32</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="183:9" pos:end="187:9"><if pos:start="183:9" pos:end="187:9">if <condition pos:start="183:12" pos:end="183:74">(<expr pos:start="183:13" pos:end="183:73"><call pos:start="183:13" pos:end="183:68"><name pos:start="183:13" pos:end="183:18">strcmp</name><argument_list pos:start="183:19" pos:end="183:68">(<argument pos:start="183:20" pos:end="183:42"><expr pos:start="183:20" pos:end="183:42"><name pos:start="183:20" pos:end="183:42"><name pos:start="183:20" pos:end="183:25">blkdev</name><operator pos:start="183:26" pos:end="183:27">-&gt;</operator><name pos:start="183:28" pos:end="183:33">xendev</name><operator pos:start="183:34" pos:end="183:34">.</operator><name pos:start="183:35" pos:end="183:42">protocol</name></name></expr></argument>, <argument pos:start="183:45" pos:end="183:67"><expr pos:start="183:45" pos:end="183:67"><name pos:start="183:45" pos:end="183:67">XEN_IO_PROTO_ABI_X86_64</name></expr></argument>)</argument_list></call> <operator pos:start="183:70" pos:end="183:71">==</operator> <literal type="number" pos:start="183:73" pos:end="183:73">0</literal></expr>)</condition> <block pos:start="183:76" pos:end="187:9">{<block_content pos:start="185:13" pos:end="185:53">

            <expr_stmt pos:start="185:13" pos:end="185:53"><expr pos:start="185:13" pos:end="185:52"><name pos:start="185:13" pos:end="185:28"><name pos:start="185:13" pos:end="185:18">blkdev</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:28">protocol</name></name> <operator pos:start="185:30" pos:end="185:30">=</operator> <name pos:start="185:32" pos:end="185:52">BLKIF_PROTOCOL_X86_64</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="193:5" pos:end="199:68"><expr pos:start="193:5" pos:end="199:67"><name pos:start="193:5" pos:end="193:17"><name pos:start="193:5" pos:end="193:10">blkdev</name><operator pos:start="193:11" pos:end="193:12">-&gt;</operator><name pos:start="193:13" pos:end="193:17">sring</name></name> <operator pos:start="193:19" pos:end="193:19">=</operator> <call pos:start="193:21" pos:end="199:67"><name pos:start="193:21" pos:end="193:43">xc_gnttab_map_grant_ref</name><argument_list pos:start="193:44" pos:end="199:67">(<argument pos:start="193:45" pos:end="193:68"><expr pos:start="193:45" pos:end="193:68"><name pos:start="193:45" pos:end="193:68"><name pos:start="193:45" pos:end="193:50">blkdev</name><operator pos:start="193:51" pos:end="193:52">-&gt;</operator><name pos:start="193:53" pos:end="193:58">xendev</name><operator pos:start="193:59" pos:end="193:59">.</operator><name pos:start="193:60" pos:end="193:68">gnttabdev</name></name></expr></argument>,

                                            <argument pos:start="195:45" pos:end="195:62"><expr pos:start="195:45" pos:end="195:62"><name pos:start="195:45" pos:end="195:62"><name pos:start="195:45" pos:end="195:50">blkdev</name><operator pos:start="195:51" pos:end="195:52">-&gt;</operator><name pos:start="195:53" pos:end="195:58">xendev</name><operator pos:start="195:59" pos:end="195:59">.</operator><name pos:start="195:60" pos:end="195:62">dom</name></name></expr></argument>,

                                            <argument pos:start="197:45" pos:end="197:60"><expr pos:start="197:45" pos:end="197:60"><name pos:start="197:45" pos:end="197:60"><name pos:start="197:45" pos:end="197:50">blkdev</name><operator pos:start="197:51" pos:end="197:52">-&gt;</operator><name pos:start="197:53" pos:end="197:60">ring_ref</name></name></expr></argument>,

                                            <argument pos:start="199:45" pos:end="199:66"><expr pos:start="199:45" pos:end="199:66"><name pos:start="199:45" pos:end="199:53">PROT_READ</name> <operator pos:start="199:55" pos:end="199:55">|</operator> <name pos:start="199:57" pos:end="199:66">PROT_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="201:5" pos:end="205:5"><if pos:start="201:5" pos:end="205:5">if <condition pos:start="201:8" pos:end="201:23">(<expr pos:start="201:9" pos:end="201:22"><operator pos:start="201:9" pos:end="201:9">!</operator><name pos:start="201:10" pos:end="201:22"><name pos:start="201:10" pos:end="201:15">blkdev</name><operator pos:start="201:16" pos:end="201:17">-&gt;</operator><name pos:start="201:18" pos:end="201:22">sring</name></name></expr>)</condition> <block pos:start="201:25" pos:end="205:5">{<block_content pos:start="203:9" pos:end="203:18">

        <return pos:start="203:9" pos:end="203:18">return <expr pos:start="203:16" pos:end="203:17"><operator pos:start="203:16" pos:end="203:16">-</operator><literal type="number" pos:start="203:17" pos:end="203:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:22"><expr pos:start="207:5" pos:end="207:21"><name pos:start="207:5" pos:end="207:19"><name pos:start="207:5" pos:end="207:10">blkdev</name><operator pos:start="207:11" pos:end="207:12">-&gt;</operator><name pos:start="207:13" pos:end="207:19">cnt_map</name></name><operator pos:start="207:20" pos:end="207:21">++</operator></expr>;</expr_stmt>



    <switch pos:start="211:5" pos:end="253:5">switch <condition pos:start="211:12" pos:end="211:29">(<expr pos:start="211:13" pos:end="211:28"><name pos:start="211:13" pos:end="211:28"><name pos:start="211:13" pos:end="211:18">blkdev</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:28">protocol</name></name></expr>)</condition> <block pos:start="211:31" pos:end="253:5">{<block_content pos:start="213:5" pos:end="251:5">

    <case pos:start="213:5" pos:end="213:31">case <expr pos:start="213:10" pos:end="213:30"><name pos:start="213:10" pos:end="213:30">BLKIF_PROTOCOL_NATIVE</name></expr>:</case>

    <block pos:start="215:5" pos:end="223:5">{<block_content pos:start="217:9" pos:end="221:14">

        <decl_stmt pos:start="217:9" pos:end="217:52"><decl pos:start="217:9" pos:end="217:51"><type pos:start="217:9" pos:end="217:23"><name pos:start="217:9" pos:end="217:21">blkif_sring_t</name> <modifier pos:start="217:23" pos:end="217:23">*</modifier></type><name pos:start="217:24" pos:end="217:35">sring_native</name> <init pos:start="217:37" pos:end="217:51">= <expr pos:start="217:39" pos:end="217:51"><name pos:start="217:39" pos:end="217:51"><name pos:start="217:39" pos:end="217:44">blkdev</name><operator pos:start="217:45" pos:end="217:46">-&gt;</operator><name pos:start="217:47" pos:end="217:51">sring</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:74"><expr pos:start="219:9" pos:end="219:73"><call pos:start="219:9" pos:end="219:73"><name pos:start="219:9" pos:end="219:22">BACK_RING_INIT</name><argument_list pos:start="219:23" pos:end="219:73">(<argument pos:start="219:24" pos:end="219:44"><expr pos:start="219:24" pos:end="219:44"><operator pos:start="219:24" pos:end="219:24">&amp;</operator><name pos:start="219:25" pos:end="219:44"><name pos:start="219:25" pos:end="219:30">blkdev</name><operator pos:start="219:31" pos:end="219:32">-&gt;</operator><name pos:start="219:33" pos:end="219:37">rings</name><operator pos:start="219:38" pos:end="219:38">.</operator><name pos:start="219:39" pos:end="219:44">native</name></name></expr></argument>, <argument pos:start="219:47" pos:end="219:58"><expr pos:start="219:47" pos:end="219:58"><name pos:start="219:47" pos:end="219:58">sring_native</name></expr></argument>, <argument pos:start="219:61" pos:end="219:72"><expr pos:start="219:61" pos:end="219:72"><name pos:start="219:61" pos:end="219:72">XC_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="221:9" pos:end="221:14">break;</break>

    </block_content>}</block>

    <case pos:start="225:5" pos:end="225:31">case <expr pos:start="225:10" pos:end="225:30"><name pos:start="225:10" pos:end="225:30">BLKIF_PROTOCOL_X86_32</name></expr>:</case>

    <block pos:start="227:5" pos:end="237:5">{<block_content pos:start="229:9" pos:end="235:14">

        <decl_stmt pos:start="229:9" pos:end="229:59"><decl pos:start="229:9" pos:end="229:58"><type pos:start="229:9" pos:end="229:30"><name pos:start="229:9" pos:end="229:28">blkif_x86_32_sring_t</name> <modifier pos:start="229:30" pos:end="229:30">*</modifier></type><name pos:start="229:31" pos:end="229:42">sring_x86_32</name> <init pos:start="229:44" pos:end="229:58">= <expr pos:start="229:46" pos:end="229:58"><name pos:start="229:46" pos:end="229:58"><name pos:start="229:46" pos:end="229:51">blkdev</name><operator pos:start="229:52" pos:end="229:53">-&gt;</operator><name pos:start="229:54" pos:end="229:58">sring</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="233:9" pos:end="233:79"><expr pos:start="233:9" pos:end="233:78"><call pos:start="233:9" pos:end="233:78"><name pos:start="233:9" pos:end="233:22">BACK_RING_INIT</name><argument_list pos:start="233:23" pos:end="233:78">(<argument pos:start="233:24" pos:end="233:49"><expr pos:start="233:24" pos:end="233:49"><operator pos:start="233:24" pos:end="233:24">&amp;</operator><name pos:start="233:25" pos:end="233:49"><name pos:start="233:25" pos:end="233:30">blkdev</name><operator pos:start="233:31" pos:end="233:32">-&gt;</operator><name pos:start="233:33" pos:end="233:37">rings</name><operator pos:start="233:38" pos:end="233:38">.</operator><name pos:start="233:39" pos:end="233:49">x86_32_part</name></name></expr></argument>, <argument pos:start="233:52" pos:end="233:63"><expr pos:start="233:52" pos:end="233:63"><name pos:start="233:52" pos:end="233:63">sring_x86_32</name></expr></argument>, <argument pos:start="233:66" pos:end="233:77"><expr pos:start="233:66" pos:end="233:77"><name pos:start="233:66" pos:end="233:77">XC_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="235:9" pos:end="235:14">break;</break>

    </block_content>}</block>

    <case pos:start="239:5" pos:end="239:31">case <expr pos:start="239:10" pos:end="239:30"><name pos:start="239:10" pos:end="239:30">BLKIF_PROTOCOL_X86_64</name></expr>:</case>

    <block pos:start="241:5" pos:end="251:5">{<block_content pos:start="243:9" pos:end="249:14">

        <decl_stmt pos:start="243:9" pos:end="243:59"><decl pos:start="243:9" pos:end="243:58"><type pos:start="243:9" pos:end="243:30"><name pos:start="243:9" pos:end="243:28">blkif_x86_64_sring_t</name> <modifier pos:start="243:30" pos:end="243:30">*</modifier></type><name pos:start="243:31" pos:end="243:42">sring_x86_64</name> <init pos:start="243:44" pos:end="243:58">= <expr pos:start="243:46" pos:end="243:58"><name pos:start="243:46" pos:end="243:58"><name pos:start="243:46" pos:end="243:51">blkdev</name><operator pos:start="243:52" pos:end="243:53">-&gt;</operator><name pos:start="243:54" pos:end="243:58">sring</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="247:9" pos:end="247:79"><expr pos:start="247:9" pos:end="247:78"><call pos:start="247:9" pos:end="247:78"><name pos:start="247:9" pos:end="247:22">BACK_RING_INIT</name><argument_list pos:start="247:23" pos:end="247:78">(<argument pos:start="247:24" pos:end="247:49"><expr pos:start="247:24" pos:end="247:49"><operator pos:start="247:24" pos:end="247:24">&amp;</operator><name pos:start="247:25" pos:end="247:49"><name pos:start="247:25" pos:end="247:30">blkdev</name><operator pos:start="247:31" pos:end="247:32">-&gt;</operator><name pos:start="247:33" pos:end="247:37">rings</name><operator pos:start="247:38" pos:end="247:38">.</operator><name pos:start="247:39" pos:end="247:49">x86_64_part</name></name></expr></argument>, <argument pos:start="247:52" pos:end="247:63"><expr pos:start="247:52" pos:end="247:63"><name pos:start="247:52" pos:end="247:63">sring_x86_64</name></expr></argument>, <argument pos:start="247:66" pos:end="247:77"><expr pos:start="247:66" pos:end="247:77"><name pos:start="247:66" pos:end="247:77">XC_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="249:9" pos:end="249:14">break;</break>

    </block_content>}</block>

    </block_content>}</block></switch>



    <if_stmt pos:start="257:5" pos:end="271:5"><if pos:start="257:5" pos:end="271:5">if <condition pos:start="257:8" pos:end="257:35">(<expr pos:start="257:9" pos:end="257:34"><name pos:start="257:9" pos:end="257:34"><name pos:start="257:9" pos:end="257:14">blkdev</name><operator pos:start="257:15" pos:end="257:16">-&gt;</operator><name pos:start="257:17" pos:end="257:34">feature_persistent</name></name></expr>)</condition> <block pos:start="257:37" pos:end="271:5">{<block_content pos:start="261:9" pos:end="269:41">

        <comment type="block" pos:start="259:9" pos:end="259:36">/* Init persistent grants */</comment>

        <expr_stmt pos:start="261:9" pos:end="261:75"><expr pos:start="261:9" pos:end="261:74"><name pos:start="261:9" pos:end="261:26"><name pos:start="261:9" pos:end="261:14">blkdev</name><operator pos:start="261:15" pos:end="261:16">-&gt;</operator><name pos:start="261:17" pos:end="261:26">max_grants</name></name> <operator pos:start="261:28" pos:end="261:28">=</operator> <name pos:start="261:30" pos:end="261:41">max_requests</name> <operator pos:start="261:43" pos:end="261:43">*</operator> <name pos:start="261:45" pos:end="261:74">BLKIF_MAX_SEGMENTS_PER_REQUEST</name></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="267:76"><expr pos:start="263:9" pos:end="267:75"><name pos:start="263:9" pos:end="263:31"><name pos:start="263:9" pos:end="263:14">blkdev</name><operator pos:start="263:15" pos:end="263:16">-&gt;</operator><name pos:start="263:17" pos:end="263:31">persistent_gnts</name></name> <operator pos:start="263:33" pos:end="263:33">=</operator> <call pos:start="263:35" pos:end="267:75"><name pos:start="263:35" pos:end="263:49">g_tree_new_full</name><argument_list pos:start="263:50" pos:end="267:75">(<argument pos:start="263:51" pos:end="263:75"><expr pos:start="263:51" pos:end="263:75"><operator pos:start="263:51" pos:end="263:51">(</operator><name pos:start="263:52" pos:end="263:67">GCompareDataFunc</name><operator pos:start="263:68" pos:end="263:68">)</operator><name pos:start="263:69" pos:end="263:75">int_cmp</name></expr></argument>,

                                             <argument pos:start="265:46" pos:end="265:49"><expr pos:start="265:46" pos:end="265:49"><name pos:start="265:46" pos:end="265:49">NULL</name></expr></argument>, <argument pos:start="265:52" pos:end="265:55"><expr pos:start="265:52" pos:end="265:55"><name pos:start="265:52" pos:end="265:55">NULL</name></expr></argument>,

                                             <argument pos:start="267:46" pos:end="267:74"><expr pos:start="267:46" pos:end="267:74"><operator pos:start="267:46" pos:end="267:46">(</operator><name pos:start="267:47" pos:end="267:60">GDestroyNotify</name><operator pos:start="267:61" pos:end="267:61">)</operator><name pos:start="267:62" pos:end="267:74">destroy_grant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:41"><expr pos:start="269:9" pos:end="269:40"><name pos:start="269:9" pos:end="269:36"><name pos:start="269:9" pos:end="269:14">blkdev</name><operator pos:start="269:15" pos:end="269:16">-&gt;</operator><name pos:start="269:17" pos:end="269:36">persistent_gnt_count</name></name> <operator pos:start="269:38" pos:end="269:38">=</operator> <literal type="number" pos:start="269:40" pos:end="269:40">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="275:5" pos:end="275:40"><expr pos:start="275:5" pos:end="275:39"><call pos:start="275:5" pos:end="275:39"><name pos:start="275:5" pos:end="275:22">xen_be_bind_evtchn</name><argument_list pos:start="275:23" pos:end="275:39">(<argument pos:start="275:24" pos:end="275:38"><expr pos:start="275:24" pos:end="275:38"><operator pos:start="275:24" pos:end="275:24">&amp;</operator><name pos:start="275:25" pos:end="275:38"><name pos:start="275:25" pos:end="275:30">blkdev</name><operator pos:start="275:31" pos:end="275:32">-&gt;</operator><name pos:start="275:33" pos:end="275:38">xendev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="279:5" pos:end="285:73"><expr pos:start="279:5" pos:end="285:72"><call pos:start="279:5" pos:end="285:72"><name pos:start="279:5" pos:end="279:17">xen_be_printf</name><argument_list pos:start="279:18" pos:end="285:72">(<argument pos:start="279:19" pos:end="279:33"><expr pos:start="279:19" pos:end="279:33"><operator pos:start="279:19" pos:end="279:19">&amp;</operator><name pos:start="279:20" pos:end="279:33"><name pos:start="279:20" pos:end="279:25">blkdev</name><operator pos:start="279:26" pos:end="279:27">-&gt;</operator><name pos:start="279:28" pos:end="279:33">xendev</name></name></expr></argument>, <argument pos:start="279:36" pos:end="279:36"><expr pos:start="279:36" pos:end="279:36"><literal type="number" pos:start="279:36" pos:end="279:36">1</literal></expr></argument>, <argument pos:start="279:39" pos:end="281:51"><expr pos:start="279:39" pos:end="281:51"><literal type="string" pos:start="279:39" pos:end="279:67">"ok: proto %s, ring-ref %d, "</literal>

                  <literal type="string" pos:start="281:19" pos:end="281:51">"remote port %d, local port %d\n"</literal></expr></argument>,

                  <argument pos:start="283:19" pos:end="283:41"><expr pos:start="283:19" pos:end="283:41"><name pos:start="283:19" pos:end="283:41"><name pos:start="283:19" pos:end="283:24">blkdev</name><operator pos:start="283:25" pos:end="283:26">-&gt;</operator><name pos:start="283:27" pos:end="283:32">xendev</name><operator pos:start="283:33" pos:end="283:33">.</operator><name pos:start="283:34" pos:end="283:41">protocol</name></name></expr></argument>, <argument pos:start="283:44" pos:end="283:59"><expr pos:start="283:44" pos:end="283:59"><name pos:start="283:44" pos:end="283:59"><name pos:start="283:44" pos:end="283:49">blkdev</name><operator pos:start="283:50" pos:end="283:51">-&gt;</operator><name pos:start="283:52" pos:end="283:59">ring_ref</name></name></expr></argument>,

                  <argument pos:start="285:19" pos:end="285:44"><expr pos:start="285:19" pos:end="285:44"><name pos:start="285:19" pos:end="285:44"><name pos:start="285:19" pos:end="285:24">blkdev</name><operator pos:start="285:25" pos:end="285:26">-&gt;</operator><name pos:start="285:27" pos:end="285:32">xendev</name><operator pos:start="285:33" pos:end="285:33">.</operator><name pos:start="285:34" pos:end="285:44">remote_port</name></name></expr></argument>, <argument pos:start="285:47" pos:end="285:71"><expr pos:start="285:47" pos:end="285:71"><name pos:start="285:47" pos:end="285:71"><name pos:start="285:47" pos:end="285:52">blkdev</name><operator pos:start="285:53" pos:end="285:54">-&gt;</operator><name pos:start="285:55" pos:end="285:60">xendev</name><operator pos:start="285:61" pos:end="285:61">.</operator><name pos:start="285:62" pos:end="285:71">local_port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="287:5" pos:end="287:13">return <expr pos:start="287:12" pos:end="287:12"><literal type="number" pos:start="287:12" pos:end="287:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
