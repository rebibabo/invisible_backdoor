<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23605.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:42">rtas_ibm_get_config_addr_info2</name><parameter_list pos:start="1:43" pos:end="9:61">(<parameter pos:start="1:44" pos:end="1:58"><decl pos:start="1:44" pos:end="1:58"><type pos:start="1:44" pos:end="1:58"><name pos:start="1:44" pos:end="1:53">PowerPCCPU</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">cpu</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:66"><decl pos:start="3:44" pos:end="3:66"><type pos:start="3:44" pos:end="3:66"><name pos:start="3:44" pos:end="3:59">sPAPREnvironment</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:66">spapr</name></decl></parameter>,

                                           <parameter pos:start="5:44" pos:end="5:57"><decl pos:start="5:44" pos:end="5:57"><type pos:start="5:44" pos:end="5:57"><name pos:start="5:44" pos:end="5:51">uint32_t</name></type> <name pos:start="5:53" pos:end="5:57">token</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:73"><decl pos:start="5:60" pos:end="5:73"><type pos:start="5:60" pos:end="5:73"><name pos:start="5:60" pos:end="5:67">uint32_t</name></type> <name pos:start="5:69" pos:end="5:73">nargs</name></decl></parameter>,

                                           <parameter pos:start="7:44" pos:end="7:60"><decl pos:start="7:44" pos:end="7:60"><type pos:start="7:44" pos:end="7:60"><name pos:start="7:44" pos:end="7:55">target_ulong</name></type> <name pos:start="7:57" pos:end="7:60">args</name></decl></parameter>, <parameter pos:start="7:63" pos:end="7:75"><decl pos:start="7:63" pos:end="7:75"><type pos:start="7:63" pos:end="7:75"><name pos:start="7:63" pos:end="7:70">uint32_t</name></type> <name pos:start="7:72" pos:end="7:75">nret</name></decl></parameter>,

                                           <parameter pos:start="9:44" pos:end="9:60"><decl pos:start="9:44" pos:end="9:60"><type pos:start="9:44" pos:end="9:60"><name pos:start="9:44" pos:end="9:55">target_ulong</name></type> <name pos:start="9:57" pos:end="9:60">rets</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="109:1">{<block_content pos:start="13:5" pos:end="107:43">

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">sPAPRPHBState</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:23">sphb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">sPAPRPHBClass</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:22">spc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">PCIDevice</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:19">pdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:17">addr</name></decl>, <decl pos:start="19:20" pos:end="19:25"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:20" pos:end="19:25">option</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint64_t</name></type> <name pos:start="21:14" pos:end="21:17">buid</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:36">(<expr pos:start="25:9" pos:end="25:35"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:14">nargs</name> <operator pos:start="25:16" pos:end="25:17">!=</operator> <literal type="number" pos:start="25:19" pos:end="25:19">4</literal><operator pos:start="25:20" pos:end="25:20">)</operator> <operator pos:start="25:22" pos:end="25:23">||</operator> <operator pos:start="25:25" pos:end="25:25">(</operator><name pos:start="25:26" pos:end="25:29">nret</name> <operator pos:start="25:31" pos:end="25:32">!=</operator> <literal type="number" pos:start="25:34" pos:end="25:34">2</literal><operator pos:start="25:35" pos:end="25:35">)</operator></expr>)</condition> <block pos:start="25:38" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:30">

        <goto pos:start="27:9" pos:end="27:30">goto <name pos:start="27:14" pos:end="27:29">param_error_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:65"><expr pos:start="33:5" pos:end="33:64"><name pos:start="33:5" pos:end="33:8">buid</name> <operator pos:start="33:10" pos:end="33:10">=</operator> <operator pos:start="33:12" pos:end="33:12">(</operator><operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:21">uint64_t</name><operator pos:start="33:22" pos:end="33:22">)</operator><call pos:start="33:23" pos:end="33:38"><name pos:start="33:23" pos:end="33:29">rtas_ld</name><argument_list pos:start="33:30" pos:end="33:38">(<argument pos:start="33:31" pos:end="33:34"><expr pos:start="33:31" pos:end="33:34"><name pos:start="33:31" pos:end="33:34">args</name></expr></argument>, <argument pos:start="33:37" pos:end="33:37"><expr pos:start="33:37" pos:end="33:37"><literal type="number" pos:start="33:37" pos:end="33:37">1</literal></expr></argument>)</argument_list></call> <operator pos:start="33:40" pos:end="33:41">&lt;&lt;</operator> <literal type="number" pos:start="33:43" pos:end="33:44">32</literal><operator pos:start="33:45" pos:end="33:45">)</operator> <operator pos:start="33:47" pos:end="33:47">|</operator> <call pos:start="33:49" pos:end="33:64"><name pos:start="33:49" pos:end="33:55">rtas_ld</name><argument_list pos:start="33:56" pos:end="33:64">(<argument pos:start="33:57" pos:end="33:60"><expr pos:start="33:57" pos:end="33:60"><name pos:start="33:57" pos:end="33:60">args</name></expr></argument>, <argument pos:start="33:63" pos:end="33:63"><expr pos:start="33:63" pos:end="33:63"><literal type="number" pos:start="33:63" pos:end="33:63">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:8">sphb</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:32"><name pos:start="35:12" pos:end="35:19">find_phb</name><argument_list pos:start="35:20" pos:end="35:32">(<argument pos:start="35:21" pos:end="35:25"><expr pos:start="35:21" pos:end="35:25"><name pos:start="35:21" pos:end="35:25">spapr</name></expr></argument>, <argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><name pos:start="35:28" pos:end="35:31">buid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:14">(<expr pos:start="37:9" pos:end="37:13"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:13">sphb</name></expr>)</condition> <block pos:start="37:16" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:30">

        <goto pos:start="39:9" pos:end="39:30">goto <name pos:start="39:14" pos:end="39:29">param_error_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:48"><expr pos:start="45:5" pos:end="45:47"><name pos:start="45:5" pos:end="45:7">spc</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:47"><name pos:start="45:11" pos:end="45:41">SPAPR_PCI_HOST_BRIDGE_GET_CLASS</name><argument_list pos:start="45:42" pos:end="45:47">(<argument pos:start="45:43" pos:end="45:46"><expr pos:start="45:43" pos:end="45:46"><name pos:start="45:43" pos:end="45:46">sphb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:29">(<expr pos:start="47:9" pos:end="47:28"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:28"><name pos:start="47:10" pos:end="47:12">spc</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:28">eeh_set_option</name></name></expr>)</condition> <block pos:start="47:31" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:30">

        <goto pos:start="49:9" pos:end="49:30">goto <name pos:start="49:14" pos:end="49:29">param_error_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="61:7">/*

     * We always have PE address of form "00BB0001". "BB"

     * represents the bus number of PE's primary bus.

     */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:30"><expr pos:start="63:5" pos:end="63:29"><name pos:start="63:5" pos:end="63:10">option</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <call pos:start="63:14" pos:end="63:29"><name pos:start="63:14" pos:end="63:20">rtas_ld</name><argument_list pos:start="63:21" pos:end="63:29">(<argument pos:start="63:22" pos:end="63:25"><expr pos:start="63:22" pos:end="63:25"><name pos:start="63:22" pos:end="63:25">args</name></expr></argument>, <argument pos:start="63:28" pos:end="63:28"><expr pos:start="63:28" pos:end="63:28"><literal type="number" pos:start="63:28" pos:end="63:28">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="65:5" pos:end="95:5">switch <condition pos:start="65:12" pos:end="65:19">(<expr pos:start="65:13" pos:end="65:18"><name pos:start="65:13" pos:end="65:18">option</name></expr>)</condition> <block pos:start="65:21" pos:end="95:5">{<block_content pos:start="67:5" pos:end="93:30">

    <case pos:start="67:5" pos:end="67:26">case <expr pos:start="67:10" pos:end="67:25"><name pos:start="67:10" pos:end="67:25">RTAS_GET_PE_ADDR</name></expr>:</case>

        <expr_stmt pos:start="69:9" pos:end="69:32"><expr pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:12">addr</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <call pos:start="69:16" pos:end="69:31"><name pos:start="69:16" pos:end="69:22">rtas_ld</name><argument_list pos:start="69:23" pos:end="69:31">(<argument pos:start="69:24" pos:end="69:27"><expr pos:start="69:24" pos:end="69:27"><name pos:start="69:24" pos:end="69:27">args</name></expr></argument>, <argument pos:start="69:30" pos:end="69:30"><expr pos:start="69:30" pos:end="69:30"><literal type="number" pos:start="69:30" pos:end="69:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:43"><expr pos:start="71:9" pos:end="71:42"><name pos:start="71:9" pos:end="71:12">pdev</name> <operator pos:start="71:14" pos:end="71:14">=</operator> <call pos:start="71:16" pos:end="71:42"><name pos:start="71:16" pos:end="71:23">find_dev</name><argument_list pos:start="71:24" pos:end="71:42">(<argument pos:start="71:25" pos:end="71:29"><expr pos:start="71:25" pos:end="71:29"><name pos:start="71:25" pos:end="71:29">spapr</name></expr></argument>, <argument pos:start="71:32" pos:end="71:35"><expr pos:start="71:32" pos:end="71:35"><name pos:start="71:32" pos:end="71:35">buid</name></expr></argument>, <argument pos:start="71:38" pos:end="71:41"><expr pos:start="71:38" pos:end="71:41"><name pos:start="71:38" pos:end="71:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="77:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:18">(<expr pos:start="73:13" pos:end="73:17"><operator pos:start="73:13" pos:end="73:13">!</operator><name pos:start="73:14" pos:end="73:17">pdev</name></expr>)</condition> <block pos:start="73:20" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:34">

            <goto pos:start="75:13" pos:end="75:34">goto <name pos:start="75:18" pos:end="75:33">param_error_exit</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:61"><expr pos:start="81:9" pos:end="81:60"><call pos:start="81:9" pos:end="81:60"><name pos:start="81:9" pos:end="81:15">rtas_st</name><argument_list pos:start="81:16" pos:end="81:60">(<argument pos:start="81:17" pos:end="81:20"><expr pos:start="81:17" pos:end="81:20"><name pos:start="81:17" pos:end="81:20">rets</name></expr></argument>, <argument pos:start="81:23" pos:end="81:23"><expr pos:start="81:23" pos:end="81:23"><literal type="number" pos:start="81:23" pos:end="81:23">1</literal></expr></argument>, <argument pos:start="81:26" pos:end="81:59"><expr pos:start="81:26" pos:end="81:59"><operator pos:start="81:26" pos:end="81:26">(</operator><call pos:start="81:27" pos:end="81:48"><name pos:start="81:27" pos:end="81:37">pci_bus_num</name><argument_list pos:start="81:38" pos:end="81:48">(<argument pos:start="81:39" pos:end="81:47"><expr pos:start="81:39" pos:end="81:47"><name pos:start="81:39" pos:end="81:47"><name pos:start="81:39" pos:end="81:42">pdev</name><operator pos:start="81:43" pos:end="81:44">-&gt;</operator><name pos:start="81:45" pos:end="81:47">bus</name></name></expr></argument>)</argument_list></call> <operator pos:start="81:50" pos:end="81:51">&lt;&lt;</operator> <literal type="number" pos:start="81:53" pos:end="81:54">16</literal><operator pos:start="81:55" pos:end="81:55">)</operator> <operator pos:start="81:57" pos:end="81:57">+</operator> <literal type="number" pos:start="81:59" pos:end="81:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:26">case <expr pos:start="85:10" pos:end="85:25"><name pos:start="85:10" pos:end="85:25">RTAS_GET_PE_MODE</name></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:46"><expr pos:start="87:9" pos:end="87:45"><call pos:start="87:9" pos:end="87:45"><name pos:start="87:9" pos:end="87:15">rtas_st</name><argument_list pos:start="87:16" pos:end="87:45">(<argument pos:start="87:17" pos:end="87:20"><expr pos:start="87:17" pos:end="87:20"><name pos:start="87:17" pos:end="87:20">rets</name></expr></argument>, <argument pos:start="87:23" pos:end="87:23"><expr pos:start="87:23" pos:end="87:23"><literal type="number" pos:start="87:23" pos:end="87:23">1</literal></expr></argument>, <argument pos:start="87:26" pos:end="87:44"><expr pos:start="87:26" pos:end="87:44"><name pos:start="87:26" pos:end="87:44">RTAS_PE_MODE_SHARED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <default pos:start="91:5" pos:end="91:12">default:</default>

        <goto pos:start="93:9" pos:end="93:30">goto <name pos:start="93:14" pos:end="93:29">param_error_exit</name>;</goto>

    </block_content>}</block></switch>



    <expr_stmt pos:start="99:5" pos:end="99:39"><expr pos:start="99:5" pos:end="99:38"><call pos:start="99:5" pos:end="99:38"><name pos:start="99:5" pos:end="99:11">rtas_st</name><argument_list pos:start="99:12" pos:end="99:38">(<argument pos:start="99:13" pos:end="99:16"><expr pos:start="99:13" pos:end="99:16"><name pos:start="99:13" pos:end="99:16">rets</name></expr></argument>, <argument pos:start="99:19" pos:end="99:19"><expr pos:start="99:19" pos:end="99:19"><literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr></argument>, <argument pos:start="99:22" pos:end="99:37"><expr pos:start="99:22" pos:end="99:37"><name pos:start="99:22" pos:end="99:37">RTAS_OUT_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="101:5" pos:end="101:11">return;</return>



<label pos:start="105:1" pos:end="105:17"><name pos:start="105:1" pos:end="105:16">param_error_exit</name>:</label>

    <expr_stmt pos:start="107:5" pos:end="107:43"><expr pos:start="107:5" pos:end="107:42"><call pos:start="107:5" pos:end="107:42"><name pos:start="107:5" pos:end="107:11">rtas_st</name><argument_list pos:start="107:12" pos:end="107:42">(<argument pos:start="107:13" pos:end="107:16"><expr pos:start="107:13" pos:end="107:16"><name pos:start="107:13" pos:end="107:16">rets</name></expr></argument>, <argument pos:start="107:19" pos:end="107:19"><expr pos:start="107:19" pos:end="107:19"><literal type="number" pos:start="107:19" pos:end="107:19">0</literal></expr></argument>, <argument pos:start="107:22" pos:end="107:41"><expr pos:start="107:22" pos:end="107:41"><name pos:start="107:22" pos:end="107:41">RTAS_OUT_PARAM_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
