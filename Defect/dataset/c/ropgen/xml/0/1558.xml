<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1558.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">usb_host_handle_iso_data</name><parameter_list pos:start="1:36" pos:end="1:75">(<parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:49">USBHostDevice</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:63">USBPacket</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:66">p</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:74"><decl pos:start="1:69" pos:end="1:74"><type pos:start="1:69" pos:end="1:74"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:74">in</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="201:1">{<block_content pos:start="5:5" pos:end="199:15">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AsyncURB</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">aurb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:17">ret</name></decl>, <decl pos:start="7:20" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:34">max_packet_size</name></decl>, <decl pos:start="7:37" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:37" pos:end="7:42">offset</name></decl>, <decl pos:start="7:45" pos:end="7:51"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:45" pos:end="7:47">len</name> <init pos:start="7:49" pos:end="7:51">= <expr pos:start="7:51" pos:end="7:51"><literal type="number" pos:start="7:51" pos:end="7:51">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">buf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:76"><expr pos:start="13:5" pos:end="13:75"><name pos:start="13:5" pos:end="13:19">max_packet_size</name> <operator pos:start="13:21" pos:end="13:21">=</operator> <call pos:start="13:23" pos:end="13:75"><name pos:start="13:23" pos:end="13:48">usb_ep_get_max_packet_size</name><argument_list pos:start="13:49" pos:end="13:75">(<argument pos:start="13:50" pos:end="13:56"><expr pos:start="13:50" pos:end="13:56"><operator pos:start="13:50" pos:end="13:50">&amp;</operator><name pos:start="13:51" pos:end="13:56"><name pos:start="13:51" pos:end="13:51">s</name><operator pos:start="13:52" pos:end="13:53">-&gt;</operator><name pos:start="13:54" pos:end="13:56">dev</name></name></expr></argument>, <argument pos:start="13:59" pos:end="13:64"><expr pos:start="13:59" pos:end="13:64"><name pos:start="13:59" pos:end="13:64"><name pos:start="13:59" pos:end="13:59">p</name><operator pos:start="13:60" pos:end="13:61">-&gt;</operator><name pos:start="13:62" pos:end="13:64">pid</name></name></expr></argument>, <argument pos:start="13:67" pos:end="13:74"><expr pos:start="13:67" pos:end="13:74"><name pos:start="13:67" pos:end="13:74"><name pos:start="13:67" pos:end="13:67">p</name><operator pos:start="13:68" pos:end="13:69">-&gt;</operator><name pos:start="13:70" pos:end="13:74">devep</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:27"><if pos:start="15:5" pos:end="17:27">if <condition pos:start="15:8" pos:end="15:29">(<expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:23">max_packet_size</name> <operator pos:start="15:25" pos:end="15:26">==</operator> <literal type="number" pos:start="15:28" pos:end="15:28">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:27"><block_content pos:start="17:9" pos:end="17:27">

        <return pos:start="17:9" pos:end="17:27">return <expr pos:start="17:16" pos:end="17:26"><name pos:start="17:16" pos:end="17:26">USB_RET_NAK</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:8">aurb</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:43"><name pos:start="21:12" pos:end="21:22">get_iso_urb</name><argument_list pos:start="21:23" pos:end="21:43">(<argument pos:start="21:24" pos:end="21:24"><expr pos:start="21:24" pos:end="21:24"><name pos:start="21:24" pos:end="21:24">s</name></expr></argument>, <argument pos:start="21:27" pos:end="21:32"><expr pos:start="21:27" pos:end="21:32"><name pos:start="21:27" pos:end="21:32"><name pos:start="21:27" pos:end="21:27">p</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:32">pid</name></name></expr></argument>, <argument pos:start="21:35" pos:end="21:42"><expr pos:start="21:35" pos:end="21:42"><name pos:start="21:35" pos:end="21:42"><name pos:start="21:35" pos:end="21:35">p</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:42">devep</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:13">aurb</name></expr>)</condition> <block pos:start="23:16" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:55">

        <expr_stmt pos:start="25:9" pos:end="25:55"><expr pos:start="25:9" pos:end="25:54"><name pos:start="25:9" pos:end="25:12">aurb</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:54"><name pos:start="25:16" pos:end="25:33">usb_host_alloc_iso</name><argument_list pos:start="25:34" pos:end="25:54">(<argument pos:start="25:35" pos:end="25:35"><expr pos:start="25:35" pos:end="25:35"><name pos:start="25:35" pos:end="25:35">s</name></expr></argument>, <argument pos:start="25:38" pos:end="25:43"><expr pos:start="25:38" pos:end="25:43"><name pos:start="25:38" pos:end="25:43"><name pos:start="25:38" pos:end="25:38">p</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:43">pid</name></name></expr></argument>, <argument pos:start="25:46" pos:end="25:53"><expr pos:start="25:46" pos:end="25:53"><name pos:start="25:46" pos:end="25:53"><name pos:start="25:46" pos:end="25:46">p</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:53">devep</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:45"><expr pos:start="31:5" pos:end="31:44"><name pos:start="31:5" pos:end="31:5">i</name> <operator pos:start="31:7" pos:end="31:7">=</operator> <call pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:23">get_iso_urb_idx</name><argument_list pos:start="31:24" pos:end="31:44">(<argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">s</name></expr></argument>, <argument pos:start="31:28" pos:end="31:33"><expr pos:start="31:28" pos:end="31:33"><name pos:start="31:28" pos:end="31:33"><name pos:start="31:28" pos:end="31:28">p</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:33">pid</name></name></expr></argument>, <argument pos:start="31:36" pos:end="31:43"><expr pos:start="31:36" pos:end="31:43"><name pos:start="31:36" pos:end="31:43"><name pos:start="31:36" pos:end="31:36">p</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:43">devep</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:5">j</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <name pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:12">aurb</name><index pos:start="33:13" pos:end="33:15">[<expr pos:start="33:14" pos:end="33:14"><name pos:start="33:14" pos:end="33:14">i</name></expr>]</index></name><operator pos:start="33:16" pos:end="33:16">.</operator><name pos:start="33:17" pos:end="33:29">iso_frame_idx</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="145:5"><if pos:start="35:5" pos:end="133:5">if <condition pos:start="35:8" pos:end="35:45">(<expr pos:start="35:9" pos:end="35:44"><name pos:start="35:9" pos:end="35:9">j</name> <operator pos:start="35:11" pos:end="35:12">&gt;=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal> <operator pos:start="35:16" pos:end="35:17">&amp;&amp;</operator> <name pos:start="35:19" pos:end="35:19">j</name> <operator pos:start="35:21" pos:end="35:21">&lt;</operator> <name pos:start="35:23" pos:end="35:44">ISO_FRAME_DESC_PER_URB</name></expr>)</condition> <block pos:start="35:47" pos:end="133:5">{<block_content pos:start="37:9" pos:end="131:9">

        <if_stmt pos:start="37:9" pos:end="121:9"><if pos:start="37:9" pos:end="81:9">if <condition pos:start="37:12" pos:end="37:15">(<expr pos:start="37:13" pos:end="37:14"><name pos:start="37:13" pos:end="37:14">in</name></expr>)</condition> <block pos:start="37:17" pos:end="81:9">{<block_content pos:start="41:13" pos:end="79:13">

            <comment type="block" pos:start="39:13" pos:end="39:35">/* Check urb status  */</comment>

            <if_stmt pos:start="41:13" pos:end="79:13"><if pos:start="41:13" pos:end="51:13">if <condition pos:start="41:16" pos:end="41:35">(<expr pos:start="41:17" pos:end="41:34"><name pos:start="41:17" pos:end="41:23"><name pos:start="41:17" pos:end="41:20">aurb</name><index pos:start="41:21" pos:end="41:23">[<expr pos:start="41:22" pos:end="41:22"><name pos:start="41:22" pos:end="41:22">i</name></expr>]</index></name><operator pos:start="41:24" pos:end="41:24">.</operator><name pos:start="41:25" pos:end="41:34"><name pos:start="41:25" pos:end="41:27">urb</name><operator pos:start="41:28" pos:end="41:28">.</operator><name pos:start="41:29" pos:end="41:34">status</name></name></expr>)</condition> <block pos:start="41:37" pos:end="51:13">{<block_content pos:start="43:17" pos:end="47:67">

                <expr_stmt pos:start="43:17" pos:end="43:64"><expr pos:start="43:17" pos:end="43:63"><name pos:start="43:17" pos:end="43:19">len</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <call pos:start="43:23" pos:end="43:63"><name pos:start="43:23" pos:end="43:43">urb_status_to_usb_ret</name><argument_list pos:start="43:44" pos:end="43:63">(<argument pos:start="43:45" pos:end="43:62"><expr pos:start="43:45" pos:end="43:62"><name pos:start="43:45" pos:end="43:51"><name pos:start="43:45" pos:end="43:48">aurb</name><index pos:start="43:49" pos:end="43:51">[<expr pos:start="43:50" pos:end="43:50"><name pos:start="43:50" pos:end="43:50">i</name></expr>]</index></name><operator pos:start="43:52" pos:end="43:52">.</operator><name pos:start="43:53" pos:end="43:62"><name pos:start="43:53" pos:end="43:55">urb</name><operator pos:start="43:56" pos:end="43:56">.</operator><name pos:start="43:57" pos:end="43:62">status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="45:17" pos:end="45:42">/* Move to the next urb */</comment>

                <expr_stmt pos:start="47:17" pos:end="47:67"><expr pos:start="47:17" pos:end="47:66"><name pos:start="47:17" pos:end="47:23"><name pos:start="47:17" pos:end="47:20">aurb</name><index pos:start="47:21" pos:end="47:23">[<expr pos:start="47:22" pos:end="47:22"><name pos:start="47:22" pos:end="47:22">i</name></expr>]</index></name><operator pos:start="47:24" pos:end="47:24">.</operator><name pos:start="47:25" pos:end="47:37">iso_frame_idx</name> <operator pos:start="47:39" pos:end="47:39">=</operator> <name pos:start="47:41" pos:end="47:62">ISO_FRAME_DESC_PER_URB</name> <operator pos:start="47:64" pos:end="47:64">-</operator> <literal type="number" pos:start="47:66" pos:end="47:66">1</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="49:13" pos:end="49:36">/* Check frame status */</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="51:15" pos:end="59:13">else if <condition pos:start="51:23" pos:end="51:60">(<expr pos:start="51:24" pos:end="51:59"><name pos:start="51:24" pos:end="51:30"><name pos:start="51:24" pos:end="51:27">aurb</name><index pos:start="51:28" pos:end="51:30">[<expr pos:start="51:29" pos:end="51:29"><name pos:start="51:29" pos:end="51:29">i</name></expr>]</index></name><operator pos:start="51:31" pos:end="51:31">.</operator><name pos:start="51:32" pos:end="51:52"><name pos:start="51:32" pos:end="51:34">urb</name><operator pos:start="51:35" pos:end="51:35">.</operator><name pos:start="51:36" pos:end="51:49">iso_frame_desc</name><index pos:start="51:50" pos:end="51:52">[<expr pos:start="51:51" pos:end="51:51"><name pos:start="51:51" pos:end="51:51">j</name></expr>]</index></name><operator pos:start="51:53" pos:end="51:53">.</operator><name pos:start="51:54" pos:end="51:59">status</name></expr>)</condition> <block pos:start="51:62" pos:end="59:13">{<block_content pos:start="53:17" pos:end="55:78">

                <expr_stmt pos:start="53:17" pos:end="55:78"><expr pos:start="53:17" pos:end="55:77"><name pos:start="53:17" pos:end="53:19">len</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="55:77"><name pos:start="53:23" pos:end="53:43">urb_status_to_usb_ret</name><argument_list pos:start="53:44" pos:end="55:77">(

                                        <argument pos:start="55:41" pos:end="55:76"><expr pos:start="55:41" pos:end="55:76"><name pos:start="55:41" pos:end="55:47"><name pos:start="55:41" pos:end="55:44">aurb</name><index pos:start="55:45" pos:end="55:47">[<expr pos:start="55:46" pos:end="55:46"><name pos:start="55:46" pos:end="55:46">i</name></expr>]</index></name><operator pos:start="55:48" pos:end="55:48">.</operator><name pos:start="55:49" pos:end="55:69"><name pos:start="55:49" pos:end="55:51">urb</name><operator pos:start="55:52" pos:end="55:52">.</operator><name pos:start="55:53" pos:end="55:66">iso_frame_desc</name><index pos:start="55:67" pos:end="55:69">[<expr pos:start="55:68" pos:end="55:68"><name pos:start="55:68" pos:end="55:68">j</name></expr>]</index></name><operator pos:start="55:70" pos:end="55:70">.</operator><name pos:start="55:71" pos:end="55:76">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="57:13" pos:end="57:38">/* Check the frame fits */</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="59:15" pos:end="69:13">else if <condition pos:start="59:23" pos:end="61:37">(<expr pos:start="59:24" pos:end="61:36"><name pos:start="59:24" pos:end="59:30"><name pos:start="59:24" pos:end="59:27">aurb</name><index pos:start="59:28" pos:end="59:30">[<expr pos:start="59:29" pos:end="59:29"><name pos:start="59:29" pos:end="59:29">i</name></expr>]</index></name><operator pos:start="59:31" pos:end="59:31">.</operator><name pos:start="59:32" pos:end="59:52"><name pos:start="59:32" pos:end="59:34">urb</name><operator pos:start="59:35" pos:end="59:35">.</operator><name pos:start="59:36" pos:end="59:49">iso_frame_desc</name><index pos:start="59:50" pos:end="59:52">[<expr pos:start="59:51" pos:end="59:51"><name pos:start="59:51" pos:end="59:51">j</name></expr>]</index></name><operator pos:start="59:53" pos:end="59:53">.</operator><name pos:start="59:54" pos:end="59:66">actual_length</name>

                       <operator pos:start="61:24" pos:end="61:24">&gt;</operator> <name pos:start="61:26" pos:end="61:36"><name pos:start="61:26" pos:end="61:26">p</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:31">iov</name><operator pos:start="61:32" pos:end="61:32">.</operator><name pos:start="61:33" pos:end="61:36">size</name></name></expr>)</condition> <block pos:start="61:39" pos:end="69:13">{<block_content pos:start="63:17" pos:end="65:34">

                <expr_stmt pos:start="63:17" pos:end="63:74"><expr pos:start="63:17" pos:end="63:73"><call pos:start="63:17" pos:end="63:73"><name pos:start="63:17" pos:end="63:22">printf</name><argument_list pos:start="63:23" pos:end="63:73">(<argument pos:start="63:24" pos:end="63:72"><expr pos:start="63:24" pos:end="63:72"><literal type="string" pos:start="63:24" pos:end="63:72">"husb: received iso data is larger then packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:34"><expr pos:start="65:17" pos:end="65:33"><name pos:start="65:17" pos:end="65:19">len</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:33">USB_RET_NAK</name></expr>;</expr_stmt>

            <comment type="block" pos:start="67:13" pos:end="67:41">/* All good copy data over */</comment>

            </block_content>}</block></if> <else pos:start="69:15" pos:end="79:13">else <block pos:start="69:20" pos:end="79:13">{<block_content pos:start="71:17" pos:end="77:45">

                <expr_stmt pos:start="71:17" pos:end="71:66"><expr pos:start="71:17" pos:end="71:65"><name pos:start="71:17" pos:end="71:19">len</name> <operator pos:start="71:21" pos:end="71:21">=</operator> <name pos:start="71:23" pos:end="71:29"><name pos:start="71:23" pos:end="71:26">aurb</name><index pos:start="71:27" pos:end="71:29">[<expr pos:start="71:28" pos:end="71:28"><name pos:start="71:28" pos:end="71:28">i</name></expr>]</index></name><operator pos:start="71:30" pos:end="71:30">.</operator><name pos:start="71:31" pos:end="71:51"><name pos:start="71:31" pos:end="71:33">urb</name><operator pos:start="71:34" pos:end="71:34">.</operator><name pos:start="71:35" pos:end="71:48">iso_frame_desc</name><index pos:start="71:49" pos:end="71:51">[<expr pos:start="71:50" pos:end="71:50"><name pos:start="71:50" pos:end="71:50">j</name></expr>]</index></name><operator pos:start="71:52" pos:end="71:52">.</operator><name pos:start="71:53" pos:end="71:65">actual_length</name></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="75:61"><expr pos:start="73:17" pos:end="75:60"><name pos:start="73:17" pos:end="73:19">buf</name>  <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:30"><name pos:start="73:24" pos:end="73:27">aurb</name><index pos:start="73:28" pos:end="73:30">[<expr pos:start="73:29" pos:end="73:29"><name pos:start="73:29" pos:end="73:29">i</name></expr>]</index></name><operator pos:start="73:31" pos:end="73:31">.</operator><name pos:start="73:32" pos:end="73:41"><name pos:start="73:32" pos:end="73:34">urb</name><operator pos:start="73:35" pos:end="73:35">.</operator><name pos:start="73:36" pos:end="73:41">buffer</name></name> <operator pos:start="73:43" pos:end="73:43">+</operator>

                    <name pos:start="75:21" pos:end="75:21">j</name> <operator pos:start="75:23" pos:end="75:23">*</operator> <name pos:start="75:25" pos:end="75:31"><name pos:start="75:25" pos:end="75:28">aurb</name><index pos:start="75:29" pos:end="75:31">[<expr pos:start="75:30" pos:end="75:30"><name pos:start="75:30" pos:end="75:30">i</name></expr>]</index></name><operator pos:start="75:32" pos:end="75:32">.</operator><name pos:start="75:33" pos:end="75:53"><name pos:start="75:33" pos:end="75:35">urb</name><operator pos:start="75:36" pos:end="75:36">.</operator><name pos:start="75:37" pos:end="75:50">iso_frame_desc</name><index pos:start="75:51" pos:end="75:53">[<expr pos:start="75:52" pos:end="75:52"><literal type="number" pos:start="75:52" pos:end="75:52">0</literal></expr>]</index></name><operator pos:start="75:54" pos:end="75:54">.</operator><name pos:start="75:55" pos:end="75:60">length</name></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:45"><expr pos:start="77:17" pos:end="77:44"><call pos:start="77:17" pos:end="77:44"><name pos:start="77:17" pos:end="77:31">usb_packet_copy</name><argument_list pos:start="77:32" pos:end="77:44">(<argument pos:start="77:33" pos:end="77:33"><expr pos:start="77:33" pos:end="77:33"><name pos:start="77:33" pos:end="77:33">p</name></expr></argument>, <argument pos:start="77:36" pos:end="77:38"><expr pos:start="77:36" pos:end="77:38"><name pos:start="77:36" pos:end="77:38">buf</name></expr></argument>, <argument pos:start="77:41" pos:end="77:43"><expr pos:start="77:41" pos:end="77:43"><name pos:start="77:41" pos:end="77:43">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="121:9">else <block pos:start="81:16" pos:end="121:9">{<block_content pos:start="83:13" pos:end="119:13">

            <expr_stmt pos:start="83:13" pos:end="83:30"><expr pos:start="83:13" pos:end="83:29"><name pos:start="83:13" pos:end="83:15">len</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <name pos:start="83:19" pos:end="83:29"><name pos:start="83:19" pos:end="83:19">p</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:24">iov</name><operator pos:start="83:25" pos:end="83:25">.</operator><name pos:start="83:26" pos:end="83:29">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:77"><expr pos:start="85:13" pos:end="85:76"><name pos:start="85:13" pos:end="85:18">offset</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <ternary pos:start="85:22" pos:end="85:76"><condition pos:start="85:22" pos:end="85:31"><expr pos:start="85:22" pos:end="85:29"><operator pos:start="85:22" pos:end="85:22">(</operator><name pos:start="85:23" pos:end="85:23">j</name> <operator pos:start="85:25" pos:end="85:26">==</operator> <literal type="number" pos:start="85:28" pos:end="85:28">0</literal><operator pos:start="85:29" pos:end="85:29">)</operator></expr> ?</condition><then pos:start="85:33" pos:end="85:33"> <expr pos:start="85:33" pos:end="85:33"><literal type="number" pos:start="85:33" pos:end="85:33">0</literal></expr> </then><else pos:start="85:35" pos:end="85:76">: <expr pos:start="85:37" pos:end="85:76"><call pos:start="85:37" pos:end="85:76"><name pos:start="85:37" pos:end="85:55">get_iso_buffer_used</name><argument_list pos:start="85:56" pos:end="85:76">(<argument pos:start="85:57" pos:end="85:57"><expr pos:start="85:57" pos:end="85:57"><name pos:start="85:57" pos:end="85:57">s</name></expr></argument>, <argument pos:start="85:60" pos:end="85:65"><expr pos:start="85:60" pos:end="85:65"><name pos:start="85:60" pos:end="85:65"><name pos:start="85:60" pos:end="85:60">p</name><operator pos:start="85:61" pos:end="85:62">-&gt;</operator><name pos:start="85:63" pos:end="85:65">pid</name></name></expr></argument>, <argument pos:start="85:68" pos:end="85:75"><expr pos:start="85:68" pos:end="85:75"><name pos:start="85:68" pos:end="85:75"><name pos:start="85:68" pos:end="85:68">p</name><operator pos:start="85:69" pos:end="85:70">-&gt;</operator><name pos:start="85:71" pos:end="85:75">devep</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>



            <comment type="block" pos:start="89:13" pos:end="89:38">/* Check the frame fits */</comment>

            <if_stmt pos:start="91:13" pos:end="97:13"><if pos:start="91:13" pos:end="97:13">if <condition pos:start="91:16" pos:end="91:38">(<expr pos:start="91:17" pos:end="91:37"><name pos:start="91:17" pos:end="91:19">len</name> <operator pos:start="91:21" pos:end="91:21">&gt;</operator> <name pos:start="91:23" pos:end="91:37">max_packet_size</name></expr>)</condition> <block pos:start="91:40" pos:end="97:13">{<block_content pos:start="93:17" pos:end="95:35">

                <expr_stmt pos:start="93:17" pos:end="93:79"><expr pos:start="93:17" pos:end="93:78"><call pos:start="93:17" pos:end="93:78"><name pos:start="93:17" pos:end="93:22">printf</name><argument_list pos:start="93:23" pos:end="93:78">(<argument pos:start="93:24" pos:end="93:77"><expr pos:start="93:24" pos:end="93:77"><literal type="string" pos:start="93:24" pos:end="93:77">"husb: send iso data is larger then max packet size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="95:17" pos:end="95:35">return <expr pos:start="95:24" pos:end="95:34"><name pos:start="95:24" pos:end="95:34">USB_RET_NAK</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="101:13" pos:end="101:41">/* All good copy data over */</comment>

            <expr_stmt pos:start="103:13" pos:end="103:65"><expr pos:start="103:13" pos:end="103:64"><call pos:start="103:13" pos:end="103:64"><name pos:start="103:13" pos:end="103:27">usb_packet_copy</name><argument_list pos:start="103:28" pos:end="103:64">(<argument pos:start="103:29" pos:end="103:29"><expr pos:start="103:29" pos:end="103:29"><name pos:start="103:29" pos:end="103:29">p</name></expr></argument>, <argument pos:start="103:32" pos:end="103:58"><expr pos:start="103:32" pos:end="103:58"><name pos:start="103:32" pos:end="103:38"><name pos:start="103:32" pos:end="103:35">aurb</name><index pos:start="103:36" pos:end="103:38">[<expr pos:start="103:37" pos:end="103:37"><name pos:start="103:37" pos:end="103:37">i</name></expr>]</index></name><operator pos:start="103:39" pos:end="103:39">.</operator><name pos:start="103:40" pos:end="103:49"><name pos:start="103:40" pos:end="103:42">urb</name><operator pos:start="103:43" pos:end="103:43">.</operator><name pos:start="103:44" pos:end="103:49">buffer</name></name> <operator pos:start="103:51" pos:end="103:51">+</operator> <name pos:start="103:53" pos:end="103:58">offset</name></expr></argument>, <argument pos:start="103:61" pos:end="103:63"><expr pos:start="103:61" pos:end="103:63"><name pos:start="103:61" pos:end="103:63">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:55"><expr pos:start="105:13" pos:end="105:54"><name pos:start="105:13" pos:end="105:19"><name pos:start="105:13" pos:end="105:16">aurb</name><index pos:start="105:17" pos:end="105:19">[<expr pos:start="105:18" pos:end="105:18"><name pos:start="105:18" pos:end="105:18">i</name></expr>]</index></name><operator pos:start="105:20" pos:end="105:20">.</operator><name pos:start="105:21" pos:end="105:41"><name pos:start="105:21" pos:end="105:23">urb</name><operator pos:start="105:24" pos:end="105:24">.</operator><name pos:start="105:25" pos:end="105:38">iso_frame_desc</name><index pos:start="105:39" pos:end="105:41">[<expr pos:start="105:40" pos:end="105:40"><name pos:start="105:40" pos:end="105:40">j</name></expr>]</index></name><operator pos:start="105:42" pos:end="105:42">.</operator><name pos:start="105:43" pos:end="105:48">length</name> <operator pos:start="105:50" pos:end="105:50">=</operator> <name pos:start="105:52" pos:end="105:54">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:26"><expr pos:start="107:13" pos:end="107:25"><name pos:start="107:13" pos:end="107:18">offset</name> <operator pos:start="107:20" pos:end="107:21">+=</operator> <name pos:start="107:23" pos:end="107:25">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:61"><expr pos:start="109:13" pos:end="109:60"><call pos:start="109:13" pos:end="109:60"><name pos:start="109:13" pos:end="109:31">set_iso_buffer_used</name><argument_list pos:start="109:32" pos:end="109:60">(<argument pos:start="109:33" pos:end="109:33"><expr pos:start="109:33" pos:end="109:33"><name pos:start="109:33" pos:end="109:33">s</name></expr></argument>, <argument pos:start="109:36" pos:end="109:41"><expr pos:start="109:36" pos:end="109:41"><name pos:start="109:36" pos:end="109:41"><name pos:start="109:36" pos:end="109:36">p</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:41">pid</name></name></expr></argument>, <argument pos:start="109:44" pos:end="109:51"><expr pos:start="109:44" pos:end="109:51"><name pos:start="109:44" pos:end="109:51"><name pos:start="109:44" pos:end="109:44">p</name><operator pos:start="109:45" pos:end="109:46">-&gt;</operator><name pos:start="109:47" pos:end="109:51">devep</name></name></expr></argument>, <argument pos:start="109:54" pos:end="109:59"><expr pos:start="109:54" pos:end="109:59"><name pos:start="109:54" pos:end="109:59">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="113:13" pos:end="113:68">/* Start the stream once we have buffered enough data */</comment>

            <if_stmt pos:start="115:13" pos:end="119:13"><if pos:start="115:13" pos:end="119:13">if <condition pos:start="115:16" pos:end="115:73">(<expr pos:start="115:17" pos:end="115:72"><operator pos:start="115:17" pos:end="115:17">!</operator><call pos:start="115:18" pos:end="115:52"><name pos:start="115:18" pos:end="115:31">is_iso_started</name><argument_list pos:start="115:32" pos:end="115:52">(<argument pos:start="115:33" pos:end="115:33"><expr pos:start="115:33" pos:end="115:33"><name pos:start="115:33" pos:end="115:33">s</name></expr></argument>, <argument pos:start="115:36" pos:end="115:41"><expr pos:start="115:36" pos:end="115:41"><name pos:start="115:36" pos:end="115:41"><name pos:start="115:36" pos:end="115:36">p</name><operator pos:start="115:37" pos:end="115:38">-&gt;</operator><name pos:start="115:39" pos:end="115:41">pid</name></name></expr></argument>, <argument pos:start="115:44" pos:end="115:51"><expr pos:start="115:44" pos:end="115:51"><name pos:start="115:44" pos:end="115:51"><name pos:start="115:44" pos:end="115:44">p</name><operator pos:start="115:45" pos:end="115:46">-&gt;</operator><name pos:start="115:47" pos:end="115:51">devep</name></name></expr></argument>)</argument_list></call> <operator pos:start="115:54" pos:end="115:55">&amp;&amp;</operator> <name pos:start="115:57" pos:end="115:57">i</name> <operator pos:start="115:59" pos:end="115:60">==</operator> <literal type="number" pos:start="115:62" pos:end="115:62">1</literal> <operator pos:start="115:64" pos:end="115:65">&amp;&amp;</operator> <name pos:start="115:67" pos:end="115:67">j</name> <operator pos:start="115:69" pos:end="115:70">==</operator> <literal type="number" pos:start="115:72" pos:end="115:72">8</literal></expr>)</condition> <block pos:start="115:75" pos:end="119:13">{<block_content pos:start="117:17" pos:end="117:53">

                <expr_stmt pos:start="117:17" pos:end="117:53"><expr pos:start="117:17" pos:end="117:52"><call pos:start="117:17" pos:end="117:52"><name pos:start="117:17" pos:end="117:31">set_iso_started</name><argument_list pos:start="117:32" pos:end="117:52">(<argument pos:start="117:33" pos:end="117:33"><expr pos:start="117:33" pos:end="117:33"><name pos:start="117:33" pos:end="117:33">s</name></expr></argument>, <argument pos:start="117:36" pos:end="117:41"><expr pos:start="117:36" pos:end="117:41"><name pos:start="117:36" pos:end="117:41"><name pos:start="117:36" pos:end="117:36">p</name><operator pos:start="117:37" pos:end="117:38">-&gt;</operator><name pos:start="117:39" pos:end="117:41">pid</name></name></expr></argument>, <argument pos:start="117:44" pos:end="117:51"><expr pos:start="117:44" pos:end="117:51"><name pos:start="117:44" pos:end="117:51"><name pos:start="117:44" pos:end="117:44">p</name><operator pos:start="117:45" pos:end="117:46">-&gt;</operator><name pos:start="117:47" pos:end="117:51">devep</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:32"><expr pos:start="123:9" pos:end="123:31"><name pos:start="123:9" pos:end="123:15"><name pos:start="123:9" pos:end="123:12">aurb</name><index pos:start="123:13" pos:end="123:15">[<expr pos:start="123:14" pos:end="123:14"><name pos:start="123:14" pos:end="123:14">i</name></expr>]</index></name><operator pos:start="123:16" pos:end="123:16">.</operator><name pos:start="123:17" pos:end="123:29">iso_frame_idx</name><operator pos:start="123:30" pos:end="123:31">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="131:9"><if pos:start="125:9" pos:end="131:9">if <condition pos:start="125:12" pos:end="125:60">(<expr pos:start="125:13" pos:end="125:59"><name pos:start="125:13" pos:end="125:19"><name pos:start="125:13" pos:end="125:16">aurb</name><index pos:start="125:17" pos:end="125:19">[<expr pos:start="125:18" pos:end="125:18"><name pos:start="125:18" pos:end="125:18">i</name></expr>]</index></name><operator pos:start="125:20" pos:end="125:20">.</operator><name pos:start="125:21" pos:end="125:33">iso_frame_idx</name> <operator pos:start="125:35" pos:end="125:36">==</operator> <name pos:start="125:38" pos:end="125:59">ISO_FRAME_DESC_PER_URB</name></expr>)</condition> <block pos:start="125:62" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:52">

            <expr_stmt pos:start="127:13" pos:end="127:43"><expr pos:start="127:13" pos:end="127:42"><name pos:start="127:13" pos:end="127:13">i</name> <operator pos:start="127:15" pos:end="127:15">=</operator> <operator pos:start="127:17" pos:end="127:17">(</operator><name pos:start="127:18" pos:end="127:18">i</name> <operator pos:start="127:20" pos:end="127:20">+</operator> <literal type="number" pos:start="127:22" pos:end="127:22">1</literal><operator pos:start="127:23" pos:end="127:23">)</operator> <operator pos:start="127:25" pos:end="127:25">%</operator> <name pos:start="127:27" pos:end="127:42"><name pos:start="127:27" pos:end="127:27">s</name><operator pos:start="127:28" pos:end="127:29">-&gt;</operator><name pos:start="127:30" pos:end="127:42">iso_urb_count</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:52"><expr pos:start="129:13" pos:end="129:51"><call pos:start="129:13" pos:end="129:51"><name pos:start="129:13" pos:end="129:27">set_iso_urb_idx</name><argument_list pos:start="129:28" pos:end="129:51">(<argument pos:start="129:29" pos:end="129:29"><expr pos:start="129:29" pos:end="129:29"><name pos:start="129:29" pos:end="129:29">s</name></expr></argument>, <argument pos:start="129:32" pos:end="129:37"><expr pos:start="129:32" pos:end="129:37"><name pos:start="129:32" pos:end="129:37"><name pos:start="129:32" pos:end="129:32">p</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:37">pid</name></name></expr></argument>, <argument pos:start="129:40" pos:end="129:47"><expr pos:start="129:40" pos:end="129:47"><name pos:start="129:40" pos:end="129:47"><name pos:start="129:40" pos:end="129:40">p</name><operator pos:start="129:41" pos:end="129:42">-&gt;</operator><name pos:start="129:43" pos:end="129:47">devep</name></name></expr></argument>, <argument pos:start="129:50" pos:end="129:50"><expr pos:start="129:50" pos:end="129:50"><name pos:start="129:50" pos:end="129:50">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="133:7" pos:end="145:5">else <block pos:start="133:12" pos:end="145:5">{<block_content pos:start="135:9" pos:end="143:9">

        <if_stmt pos:start="135:9" pos:end="143:9"><if pos:start="135:9" pos:end="139:9">if <condition pos:start="135:12" pos:end="135:15">(<expr pos:start="135:13" pos:end="135:14"><name pos:start="135:13" pos:end="135:14">in</name></expr>)</condition> <block pos:start="135:17" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:49">

            <expr_stmt pos:start="137:13" pos:end="137:49"><expr pos:start="137:13" pos:end="137:48"><call pos:start="137:13" pos:end="137:48"><name pos:start="137:13" pos:end="137:27">set_iso_started</name><argument_list pos:start="137:28" pos:end="137:48">(<argument pos:start="137:29" pos:end="137:29"><expr pos:start="137:29" pos:end="137:29"><name pos:start="137:29" pos:end="137:29">s</name></expr></argument>, <argument pos:start="137:32" pos:end="137:37"><expr pos:start="137:32" pos:end="137:37"><name pos:start="137:32" pos:end="137:37"><name pos:start="137:32" pos:end="137:32">p</name><operator pos:start="137:33" pos:end="137:34">-&gt;</operator><name pos:start="137:35" pos:end="137:37">pid</name></name></expr></argument>, <argument pos:start="137:40" pos:end="137:47"><expr pos:start="137:40" pos:end="137:47"><name pos:start="137:40" pos:end="137:47"><name pos:start="137:40" pos:end="137:40">p</name><operator pos:start="137:41" pos:end="137:42">-&gt;</operator><name pos:start="137:43" pos:end="137:47">devep</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="139:11" pos:end="143:9">else <block pos:start="139:16" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:77">

            <expr_stmt pos:start="141:13" pos:end="141:77"><expr pos:start="141:13" pos:end="141:76"><call pos:start="141:13" pos:end="141:76"><name pos:start="141:13" pos:end="141:19">DPRINTF</name><argument_list pos:start="141:20" pos:end="141:76">(<argument pos:start="141:21" pos:end="141:75"><expr pos:start="141:21" pos:end="141:75"><literal type="string" pos:start="141:21" pos:end="141:75">"hubs: iso out error no free buffer, dropping packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="149:5" pos:end="195:5"><if pos:start="149:5" pos:end="195:5">if <condition pos:start="149:8" pos:end="149:44">(<expr pos:start="149:9" pos:end="149:43"><call pos:start="149:9" pos:end="149:43"><name pos:start="149:9" pos:end="149:22">is_iso_started</name><argument_list pos:start="149:23" pos:end="149:43">(<argument pos:start="149:24" pos:end="149:24"><expr pos:start="149:24" pos:end="149:24"><name pos:start="149:24" pos:end="149:24">s</name></expr></argument>, <argument pos:start="149:27" pos:end="149:32"><expr pos:start="149:27" pos:end="149:32"><name pos:start="149:27" pos:end="149:32"><name pos:start="149:27" pos:end="149:27">p</name><operator pos:start="149:28" pos:end="149:29">-&gt;</operator><name pos:start="149:30" pos:end="149:32">pid</name></name></expr></argument>, <argument pos:start="149:35" pos:end="149:42"><expr pos:start="149:35" pos:end="149:42"><name pos:start="149:35" pos:end="149:42"><name pos:start="149:35" pos:end="149:35">p</name><operator pos:start="149:36" pos:end="149:37">-&gt;</operator><name pos:start="149:38" pos:end="149:42">devep</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="149:46" pos:end="195:5">{<block_content pos:start="153:9" pos:end="193:9">

        <comment type="block" pos:start="151:9" pos:end="151:58">/* (Re)-submit all fully consumed / filled urbs */</comment>

        <for pos:start="153:9" pos:end="193:9">for <control pos:start="153:13" pos:end="153:46">(<init pos:start="153:14" pos:end="153:19"><expr pos:start="153:14" pos:end="153:18"><name pos:start="153:14" pos:end="153:14">i</name> <operator pos:start="153:16" pos:end="153:16">=</operator> <literal type="number" pos:start="153:18" pos:end="153:18">0</literal></expr>;</init> <condition pos:start="153:21" pos:end="153:41"><expr pos:start="153:21" pos:end="153:40"><name pos:start="153:21" pos:end="153:21">i</name> <operator pos:start="153:23" pos:end="153:23">&lt;</operator> <name pos:start="153:25" pos:end="153:40"><name pos:start="153:25" pos:end="153:25">s</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:40">iso_urb_count</name></name></expr>;</condition> <incr pos:start="153:43" pos:end="153:45"><expr pos:start="153:43" pos:end="153:45"><name pos:start="153:43" pos:end="153:43">i</name><operator pos:start="153:44" pos:end="153:45">++</operator></expr></incr>)</control> <block pos:start="153:48" pos:end="193:9">{<block_content pos:start="155:13" pos:end="191:13">

            <if_stmt pos:start="155:13" pos:end="191:13"><if pos:start="155:13" pos:end="191:13">if <condition pos:start="155:16" pos:end="155:64">(<expr pos:start="155:17" pos:end="155:63"><name pos:start="155:17" pos:end="155:23"><name pos:start="155:17" pos:end="155:20">aurb</name><index pos:start="155:21" pos:end="155:23">[<expr pos:start="155:22" pos:end="155:22"><name pos:start="155:22" pos:end="155:22">i</name></expr>]</index></name><operator pos:start="155:24" pos:end="155:24">.</operator><name pos:start="155:25" pos:end="155:37">iso_frame_idx</name> <operator pos:start="155:39" pos:end="155:40">==</operator> <name pos:start="155:42" pos:end="155:63">ISO_FRAME_DESC_PER_URB</name></expr>)</condition> <block pos:start="155:66" pos:end="191:13">{<block_content pos:start="157:17" pos:end="189:60">

                <expr_stmt pos:start="157:17" pos:end="157:65"><expr pos:start="157:17" pos:end="157:64"><name pos:start="157:17" pos:end="157:19">ret</name> <operator pos:start="157:21" pos:end="157:21">=</operator> <call pos:start="157:23" pos:end="157:64"><name pos:start="157:23" pos:end="157:27">ioctl</name><argument_list pos:start="157:28" pos:end="157:64">(<argument pos:start="157:29" pos:end="157:33"><expr pos:start="157:29" pos:end="157:33"><name pos:start="157:29" pos:end="157:33"><name pos:start="157:29" pos:end="157:29">s</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:33">fd</name></name></expr></argument>, <argument pos:start="157:36" pos:end="157:53"><expr pos:start="157:36" pos:end="157:53"><name pos:start="157:36" pos:end="157:53">USBDEVFS_SUBMITURB</name></expr></argument>, <argument pos:start="157:56" pos:end="157:63"><expr pos:start="157:56" pos:end="157:63"><operator pos:start="157:56" pos:end="157:56">&amp;</operator><name pos:start="157:57" pos:end="157:63"><name pos:start="157:57" pos:end="157:60">aurb</name><index pos:start="157:61" pos:end="157:63">[<expr pos:start="157:62" pos:end="157:62"><name pos:start="157:62" pos:end="157:62">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="159:17" pos:end="185:17"><if pos:start="159:17" pos:end="185:17">if <condition pos:start="159:20" pos:end="159:28">(<expr pos:start="159:21" pos:end="159:27"><name pos:start="159:21" pos:end="159:23">ret</name> <operator pos:start="159:25" pos:end="159:25">&lt;</operator> <literal type="number" pos:start="159:27" pos:end="159:27">0</literal></expr>)</condition> <block pos:start="159:30" pos:end="185:17">{<block_content pos:start="161:21" pos:end="183:26">

                    <expr_stmt pos:start="161:21" pos:end="161:49"><expr pos:start="161:21" pos:end="161:48"><call pos:start="161:21" pos:end="161:48"><name pos:start="161:21" pos:end="161:26">perror</name><argument_list pos:start="161:27" pos:end="161:48">(<argument pos:start="161:28" pos:end="161:47"><expr pos:start="161:28" pos:end="161:47"><literal type="string" pos:start="161:28" pos:end="161:47">"USBDEVFS_SUBMITURB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="163:21" pos:end="181:21"><if pos:start="163:21" pos:end="181:21">if <condition pos:start="163:24" pos:end="163:40">(<expr pos:start="163:25" pos:end="163:39"><operator pos:start="163:25" pos:end="163:25">!</operator><name pos:start="163:26" pos:end="163:27">in</name> <operator pos:start="163:29" pos:end="163:30">||</operator> <name pos:start="163:32" pos:end="163:34">len</name> <operator pos:start="163:36" pos:end="163:37">==</operator> <literal type="number" pos:start="163:39" pos:end="163:39">0</literal></expr>)</condition> <block pos:start="163:42" pos:end="181:21">{<block_content pos:start="165:25" pos:end="179:25">

                        <switch pos:start="165:25" pos:end="179:25">switch<condition pos:start="165:31" pos:end="165:37">(<expr pos:start="165:32" pos:end="165:36"><name pos:start="165:32" pos:end="165:36">errno</name></expr>)</condition> <block pos:start="165:39" pos:end="179:25">{<block_content pos:start="167:25" pos:end="177:48">

                        <case pos:start="167:25" pos:end="167:39">case <expr pos:start="167:30" pos:end="167:38"><name pos:start="167:30" pos:end="167:38">ETIMEDOUT</name></expr>:</case>

                            <expr_stmt pos:start="169:29" pos:end="169:46"><expr pos:start="169:29" pos:end="169:45"><name pos:start="169:29" pos:end="169:31">len</name> <operator pos:start="169:33" pos:end="169:33">=</operator> <name pos:start="169:35" pos:end="169:45">USB_RET_NAK</name></expr>;</expr_stmt>

                            <break pos:start="171:29" pos:end="171:34">break;</break>

                        <case pos:start="173:25" pos:end="173:35">case <expr pos:start="173:30" pos:end="173:34"><name pos:start="173:30" pos:end="173:34">EPIPE</name></expr>:</case>

                        <default pos:start="175:25" pos:end="175:32">default:</default>

                            <expr_stmt pos:start="177:29" pos:end="177:48"><expr pos:start="177:29" pos:end="177:47"><name pos:start="177:29" pos:end="177:31">len</name> <operator pos:start="177:33" pos:end="177:33">=</operator> <name pos:start="177:35" pos:end="177:47">USB_RET_STALL</name></expr>;</expr_stmt>

                        </block_content>}</block></switch>

                    </block_content>}</block></if></if_stmt>

                    <break pos:start="183:21" pos:end="183:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:43"><expr pos:start="187:17" pos:end="187:42"><name pos:start="187:17" pos:end="187:23"><name pos:start="187:17" pos:end="187:20">aurb</name><index pos:start="187:21" pos:end="187:23">[<expr pos:start="187:22" pos:end="187:22"><name pos:start="187:22" pos:end="187:22">i</name></expr>]</index></name><operator pos:start="187:24" pos:end="187:24">.</operator><name pos:start="187:25" pos:end="187:37">iso_frame_idx</name> <operator pos:start="187:39" pos:end="187:39">=</operator> <operator pos:start="187:41" pos:end="187:41">-</operator><literal type="number" pos:start="187:42" pos:end="187:42">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:60"><expr pos:start="189:17" pos:end="189:59"><call pos:start="189:17" pos:end="189:59"><name pos:start="189:17" pos:end="189:35">change_iso_inflight</name><argument_list pos:start="189:36" pos:end="189:59">(<argument pos:start="189:37" pos:end="189:37"><expr pos:start="189:37" pos:end="189:37"><name pos:start="189:37" pos:end="189:37">s</name></expr></argument>, <argument pos:start="189:40" pos:end="189:45"><expr pos:start="189:40" pos:end="189:45"><name pos:start="189:40" pos:end="189:45"><name pos:start="189:40" pos:end="189:40">p</name><operator pos:start="189:41" pos:end="189:42">-&gt;</operator><name pos:start="189:43" pos:end="189:45">pid</name></name></expr></argument>, <argument pos:start="189:48" pos:end="189:55"><expr pos:start="189:48" pos:end="189:55"><name pos:start="189:48" pos:end="189:55"><name pos:start="189:48" pos:end="189:48">p</name><operator pos:start="189:49" pos:end="189:50">-&gt;</operator><name pos:start="189:51" pos:end="189:55">devep</name></name></expr></argument>, <argument pos:start="189:58" pos:end="189:58"><expr pos:start="189:58" pos:end="189:58"><literal type="number" pos:start="189:58" pos:end="189:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <return pos:start="199:5" pos:end="199:15">return <expr pos:start="199:12" pos:end="199:14"><name pos:start="199:12" pos:end="199:14">len</name></expr>;</return>

</block_content>}</block></function>
</unit>
