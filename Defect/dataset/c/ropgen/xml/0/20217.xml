<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20217.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">kvm_put_msrs</name><parameter_list pos:start="1:24" pos:end="1:49">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:32">CPUState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">env</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:48"><decl pos:start="1:40" pos:end="1:48"><type pos:start="1:40" pos:end="1:48"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:48">level</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="115:56">

    <struct pos:start="5:5" pos:end="11:15">struct <block pos:start="5:12" pos:end="11:5">{

        <decl_stmt pos:start="7:9" pos:end="7:29"><decl pos:start="7:9" pos:end="7:28"><type pos:start="7:9" pos:end="7:23"><name pos:start="7:9" pos:end="7:23"><name pos:start="7:9" pos:end="7:14">struct</name> <name pos:start="7:16" pos:end="7:23">kvm_msrs</name></name></type> <name pos:start="7:25" pos:end="7:28">info</name></decl>;</decl_stmt>

        <decl_stmt pos:start="9:9" pos:end="9:42"><decl pos:start="9:9" pos:end="9:41"><type pos:start="9:9" pos:end="9:28"><name pos:start="9:9" pos:end="9:28"><name pos:start="9:9" pos:end="9:14">struct</name> <name pos:start="9:16" pos:end="9:28">kvm_msr_entry</name></name></type> <name pos:start="9:30" pos:end="9:41"><name pos:start="9:30" pos:end="9:36">entries</name><index pos:start="9:37" pos:end="9:41">[<expr pos:start="9:38" pos:end="9:40"><literal type="number" pos:start="9:38" pos:end="9:40">100</literal></expr>]</index></name></decl>;</decl_stmt>

    }</block> <decl pos:start="11:7" pos:end="11:14"><name pos:start="11:7" pos:end="11:14">msr_data</name></decl>;</struct>

    <decl_stmt pos:start="13:5" pos:end="13:50"><decl pos:start="13:5" pos:end="13:49"><type pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:24">kvm_msr_entry</name></name> <modifier pos:start="13:26" pos:end="13:26">*</modifier></type><name pos:start="13:27" pos:end="13:30">msrs</name> <init pos:start="13:32" pos:end="13:49">= <expr pos:start="13:34" pos:end="13:49"><name pos:start="13:34" pos:end="13:49"><name pos:start="13:34" pos:end="13:41">msr_data</name><operator pos:start="13:42" pos:end="13:42">.</operator><name pos:start="13:43" pos:end="13:49">entries</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">n</name> <init pos:start="15:11" pos:end="15:13">= <expr pos:start="15:13" pos:end="15:13"><literal type="number" pos:start="15:13" pos:end="15:13">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:74"><expr pos:start="19:5" pos:end="19:73"><call pos:start="19:5" pos:end="19:73"><name pos:start="19:5" pos:end="19:21">kvm_msr_entry_set</name><argument_list pos:start="19:22" pos:end="19:73">(<argument pos:start="19:23" pos:end="19:32"><expr pos:start="19:23" pos:end="19:32"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:32"><name pos:start="19:24" pos:end="19:27">msrs</name><index pos:start="19:28" pos:end="19:32">[<expr pos:start="19:29" pos:end="19:31"><name pos:start="19:29" pos:end="19:29">n</name><operator pos:start="19:30" pos:end="19:31">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="19:35" pos:end="19:54"><expr pos:start="19:35" pos:end="19:54"><name pos:start="19:35" pos:end="19:54">MSR_IA32_SYSENTER_CS</name></expr></argument>, <argument pos:start="19:57" pos:end="19:72"><expr pos:start="19:57" pos:end="19:72"><name pos:start="19:57" pos:end="19:72"><name pos:start="19:57" pos:end="19:59">env</name><operator pos:start="19:60" pos:end="19:61">-&gt;</operator><name pos:start="19:62" pos:end="19:72">sysenter_cs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:76"><expr pos:start="21:5" pos:end="21:75"><call pos:start="21:5" pos:end="21:75"><name pos:start="21:5" pos:end="21:21">kvm_msr_entry_set</name><argument_list pos:start="21:22" pos:end="21:75">(<argument pos:start="21:23" pos:end="21:32"><expr pos:start="21:23" pos:end="21:32"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:32"><name pos:start="21:24" pos:end="21:27">msrs</name><index pos:start="21:28" pos:end="21:32">[<expr pos:start="21:29" pos:end="21:31"><name pos:start="21:29" pos:end="21:29">n</name><operator pos:start="21:30" pos:end="21:31">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="21:35" pos:end="21:55"><expr pos:start="21:35" pos:end="21:55"><name pos:start="21:35" pos:end="21:55">MSR_IA32_SYSENTER_ESP</name></expr></argument>, <argument pos:start="21:58" pos:end="21:74"><expr pos:start="21:58" pos:end="21:74"><name pos:start="21:58" pos:end="21:74"><name pos:start="21:58" pos:end="21:60">env</name><operator pos:start="21:61" pos:end="21:62">-&gt;</operator><name pos:start="21:63" pos:end="21:74">sysenter_esp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:76"><expr pos:start="23:5" pos:end="23:75"><call pos:start="23:5" pos:end="23:75"><name pos:start="23:5" pos:end="23:21">kvm_msr_entry_set</name><argument_list pos:start="23:22" pos:end="23:75">(<argument pos:start="23:23" pos:end="23:32"><expr pos:start="23:23" pos:end="23:32"><operator pos:start="23:23" pos:end="23:23">&amp;</operator><name pos:start="23:24" pos:end="23:32"><name pos:start="23:24" pos:end="23:27">msrs</name><index pos:start="23:28" pos:end="23:32">[<expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:29">n</name><operator pos:start="23:30" pos:end="23:31">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="23:35" pos:end="23:55"><expr pos:start="23:35" pos:end="23:55"><name pos:start="23:35" pos:end="23:55">MSR_IA32_SYSENTER_EIP</name></expr></argument>, <argument pos:start="23:58" pos:end="23:74"><expr pos:start="23:58" pos:end="23:74"><name pos:start="23:58" pos:end="23:74"><name pos:start="23:58" pos:end="23:60">env</name><operator pos:start="23:61" pos:end="23:62">-&gt;</operator><name pos:start="23:63" pos:end="23:74">sysenter_eip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:59"><if pos:start="25:5" pos:end="27:59">if <condition pos:start="25:8" pos:end="25:30">(<expr pos:start="25:9" pos:end="25:29"><call pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:24">kvm_has_msr_star</name><argument_list pos:start="25:25" pos:end="25:29">(<argument pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:28">env</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:59"><block_content pos:start="27:9" pos:end="27:59">

	<expr_stmt pos:start="27:9" pos:end="27:59"><expr pos:start="27:9" pos:end="27:58"><call pos:start="27:9" pos:end="27:58"><name pos:start="27:9" pos:end="27:25">kvm_msr_entry_set</name><argument_list pos:start="27:26" pos:end="27:58">(<argument pos:start="27:27" pos:end="27:36"><expr pos:start="27:27" pos:end="27:36"><operator pos:start="27:27" pos:end="27:27">&amp;</operator><name pos:start="27:28" pos:end="27:36"><name pos:start="27:28" pos:end="27:31">msrs</name><index pos:start="27:32" pos:end="27:36">[<expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:33">n</name><operator pos:start="27:34" pos:end="27:35">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="27:39" pos:end="27:46"><expr pos:start="27:39" pos:end="27:46"><name pos:start="27:39" pos:end="27:46">MSR_STAR</name></expr></argument>, <argument pos:start="27:49" pos:end="27:57"><expr pos:start="27:49" pos:end="27:57"><name pos:start="27:49" pos:end="27:57"><name pos:start="27:49" pos:end="27:51">env</name><operator pos:start="27:52" pos:end="27:53">-&gt;</operator><name pos:start="27:54" pos:end="27:57">star</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="34:0"><if pos:start="29:5" pos:end="34:0">if <condition pos:start="29:8" pos:end="29:34">(<expr pos:start="29:9" pos:end="29:33"><call pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:28">kvm_has_msr_hsave_pa</name><argument_list pos:start="29:29" pos:end="29:33">(<argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">env</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="34:0"><block_content pos:start="31:9" pos:end="34:0">

        <expr_stmt pos:start="31:9" pos:end="34:0"><expr pos:start="31:9" pos:end="31:69"><call pos:start="31:9" pos:end="31:69"><name pos:start="31:9" pos:end="31:25">kvm_msr_entry_set</name><argument_list pos:start="31:26" pos:end="31:69">(<argument pos:start="31:27" pos:end="31:36"><expr pos:start="31:27" pos:end="31:36"><operator pos:start="31:27" pos:end="31:27">&amp;</operator><name pos:start="31:28" pos:end="31:36"><name pos:start="31:28" pos:end="31:31">msrs</name><index pos:start="31:32" pos:end="31:36">[<expr pos:start="31:33" pos:end="31:35"><name pos:start="31:33" pos:end="31:33">n</name><operator pos:start="31:34" pos:end="31:35">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="31:39" pos:end="31:53"><expr pos:start="31:39" pos:end="31:53"><name pos:start="31:39" pos:end="31:53">MSR_VM_HSAVE_PA</name></expr></argument>, <argument pos:start="31:56" pos:end="31:68"><expr pos:start="31:56" pos:end="31:68"><name pos:start="31:56" pos:end="31:68"><name pos:start="31:56" pos:end="31:58">env</name><operator pos:start="31:59" pos:end="31:60">-&gt;</operator><name pos:start="31:61" pos:end="31:68">vm_hsave</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="33:1" pos:end="33:20">#<cpp:directive pos:start="33:2" pos:end="33:6">ifdef</cpp:directive> <name pos:start="33:8" pos:end="33:20">TARGET_X86_64</name></cpp:ifdef>

    <if_stmt pos:start="35:5" pos:end="48:0"><if pos:start="35:5" pos:end="48:0">if <condition pos:start="35:8" pos:end="35:26">(<expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:25">lm_capable_kernel</name></expr>)</condition> <block pos:start="35:28" pos:end="48:0">{<block_content pos:start="37:9" pos:end="43:61">

        <expr_stmt pos:start="37:9" pos:end="37:61"><expr pos:start="37:9" pos:end="37:60"><call pos:start="37:9" pos:end="37:60"><name pos:start="37:9" pos:end="37:25">kvm_msr_entry_set</name><argument_list pos:start="37:26" pos:end="37:60">(<argument pos:start="37:27" pos:end="37:36"><expr pos:start="37:27" pos:end="37:36"><operator pos:start="37:27" pos:end="37:27">&amp;</operator><name pos:start="37:28" pos:end="37:36"><name pos:start="37:28" pos:end="37:31">msrs</name><index pos:start="37:32" pos:end="37:36">[<expr pos:start="37:33" pos:end="37:35"><name pos:start="37:33" pos:end="37:33">n</name><operator pos:start="37:34" pos:end="37:35">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="37:39" pos:end="37:47"><expr pos:start="37:39" pos:end="37:47"><name pos:start="37:39" pos:end="37:47">MSR_CSTAR</name></expr></argument>, <argument pos:start="37:50" pos:end="37:59"><expr pos:start="37:50" pos:end="37:59"><name pos:start="37:50" pos:end="37:59"><name pos:start="37:50" pos:end="37:52">env</name><operator pos:start="37:53" pos:end="37:54">-&gt;</operator><name pos:start="37:55" pos:end="37:59">cstar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:75"><expr pos:start="39:9" pos:end="39:74"><call pos:start="39:9" pos:end="39:74"><name pos:start="39:9" pos:end="39:25">kvm_msr_entry_set</name><argument_list pos:start="39:26" pos:end="39:74">(<argument pos:start="39:27" pos:end="39:36"><expr pos:start="39:27" pos:end="39:36"><operator pos:start="39:27" pos:end="39:27">&amp;</operator><name pos:start="39:28" pos:end="39:36"><name pos:start="39:28" pos:end="39:31">msrs</name><index pos:start="39:32" pos:end="39:36">[<expr pos:start="39:33" pos:end="39:35"><name pos:start="39:33" pos:end="39:33">n</name><operator pos:start="39:34" pos:end="39:35">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="39:39" pos:end="39:54"><expr pos:start="39:39" pos:end="39:54"><name pos:start="39:39" pos:end="39:54">MSR_KERNELGSBASE</name></expr></argument>, <argument pos:start="39:57" pos:end="39:73"><expr pos:start="39:57" pos:end="39:73"><name pos:start="39:57" pos:end="39:73"><name pos:start="39:57" pos:end="39:59">env</name><operator pos:start="39:60" pos:end="39:61">-&gt;</operator><name pos:start="39:62" pos:end="39:73">kernelgsbase</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:61"><expr pos:start="41:9" pos:end="41:60"><call pos:start="41:9" pos:end="41:60"><name pos:start="41:9" pos:end="41:25">kvm_msr_entry_set</name><argument_list pos:start="41:26" pos:end="41:60">(<argument pos:start="41:27" pos:end="41:36"><expr pos:start="41:27" pos:end="41:36"><operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:36"><name pos:start="41:28" pos:end="41:31">msrs</name><index pos:start="41:32" pos:end="41:36">[<expr pos:start="41:33" pos:end="41:35"><name pos:start="41:33" pos:end="41:33">n</name><operator pos:start="41:34" pos:end="41:35">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="41:39" pos:end="41:47"><expr pos:start="41:39" pos:end="41:47"><name pos:start="41:39" pos:end="41:47">MSR_FMASK</name></expr></argument>, <argument pos:start="41:50" pos:end="41:59"><expr pos:start="41:50" pos:end="41:59"><name pos:start="41:50" pos:end="41:59"><name pos:start="41:50" pos:end="41:52">env</name><operator pos:start="41:53" pos:end="41:54">-&gt;</operator><name pos:start="41:55" pos:end="41:59">fmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:61"><expr pos:start="43:9" pos:end="43:60"><call pos:start="43:9" pos:end="43:60"><name pos:start="43:9" pos:end="43:25">kvm_msr_entry_set</name><argument_list pos:start="43:26" pos:end="43:60">(<argument pos:start="43:27" pos:end="43:36"><expr pos:start="43:27" pos:end="43:36"><operator pos:start="43:27" pos:end="43:27">&amp;</operator><name pos:start="43:28" pos:end="43:36"><name pos:start="43:28" pos:end="43:31">msrs</name><index pos:start="43:32" pos:end="43:36">[<expr pos:start="43:33" pos:end="43:35"><name pos:start="43:33" pos:end="43:33">n</name><operator pos:start="43:34" pos:end="43:35">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="43:39" pos:end="43:47"><expr pos:start="43:39" pos:end="43:47"><name pos:start="43:39" pos:end="43:47">MSR_LSTAR</name></expr></argument>, <argument pos:start="43:50" pos:end="43:59"><expr pos:start="43:50" pos:end="43:59"><name pos:start="43:50" pos:end="43:59"><name pos:start="43:50" pos:end="43:52">env</name><operator pos:start="43:53" pos:end="43:54">-&gt;</operator><name pos:start="43:55" pos:end="43:59">lstar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="49:5" pos:end="84:0"><if pos:start="49:5" pos:end="84:0">if <condition pos:start="49:8" pos:end="49:36">(<expr pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:13">level</name> <operator pos:start="49:15" pos:end="49:16">==</operator> <name pos:start="49:18" pos:end="49:35">KVM_PUT_FULL_STATE</name></expr>)</condition> <block pos:start="49:38" pos:end="84:0">{<block_content pos:start="63:9" pos:end="80:0">

        <comment type="block" pos:start="51:9" pos:end="61:11">/*

         * KVM is yet unable to synchronize TSC values of multiple VCPUs on

         * writeback. Until this is fixed, we only write the offset to SMP

         * guests after migration, desynchronizing the VCPUs, but avoiding

         * huge jump-backs that would occur without any writeback at all.

         */</comment>

        <if_stmt pos:start="63:9" pos:end="67:9"><if pos:start="63:9" pos:end="67:9">if <condition pos:start="63:12" pos:end="63:43">(<expr pos:start="63:13" pos:end="63:42"><name pos:start="63:13" pos:end="63:20">smp_cpus</name> <operator pos:start="63:22" pos:end="63:23">==</operator> <literal type="number" pos:start="63:25" pos:end="63:25">1</literal> <operator pos:start="63:27" pos:end="63:28">||</operator> <name pos:start="63:30" pos:end="63:37"><name pos:start="63:30" pos:end="63:32">env</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:37">tsc</name></name> <operator pos:start="63:39" pos:end="63:40">!=</operator> <literal type="number" pos:start="63:42" pos:end="63:42">0</literal></expr>)</condition> <block pos:start="63:45" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:66">

            <expr_stmt pos:start="65:13" pos:end="65:66"><expr pos:start="65:13" pos:end="65:65"><call pos:start="65:13" pos:end="65:65"><name pos:start="65:13" pos:end="65:29">kvm_msr_entry_set</name><argument_list pos:start="65:30" pos:end="65:65">(<argument pos:start="65:31" pos:end="65:40"><expr pos:start="65:31" pos:end="65:40"><operator pos:start="65:31" pos:end="65:31">&amp;</operator><name pos:start="65:32" pos:end="65:40"><name pos:start="65:32" pos:end="65:35">msrs</name><index pos:start="65:36" pos:end="65:40">[<expr pos:start="65:37" pos:end="65:39"><name pos:start="65:37" pos:end="65:37">n</name><operator pos:start="65:38" pos:end="65:39">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="65:43" pos:end="65:54"><expr pos:start="65:43" pos:end="65:54"><name pos:start="65:43" pos:end="65:54">MSR_IA32_TSC</name></expr></argument>, <argument pos:start="65:57" pos:end="65:64"><expr pos:start="65:57" pos:end="65:64"><name pos:start="65:57" pos:end="65:64"><name pos:start="65:57" pos:end="65:59">env</name><operator pos:start="65:60" pos:end="65:61">-&gt;</operator><name pos:start="65:62" pos:end="65:64">tsc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="71:48"><expr pos:start="69:9" pos:end="71:47"><call pos:start="69:9" pos:end="71:47"><name pos:start="69:9" pos:end="69:25">kvm_msr_entry_set</name><argument_list pos:start="69:26" pos:end="71:47">(<argument pos:start="69:27" pos:end="69:36"><expr pos:start="69:27" pos:end="69:36"><operator pos:start="69:27" pos:end="69:27">&amp;</operator><name pos:start="69:28" pos:end="69:36"><name pos:start="69:28" pos:end="69:31">msrs</name><index pos:start="69:32" pos:end="69:36">[<expr pos:start="69:33" pos:end="69:35"><name pos:start="69:33" pos:end="69:33">n</name><operator pos:start="69:34" pos:end="69:35">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="69:39" pos:end="69:57"><expr pos:start="69:39" pos:end="69:57"><name pos:start="69:39" pos:end="69:57">MSR_KVM_SYSTEM_TIME</name></expr></argument>,

                          <argument pos:start="71:27" pos:end="71:46"><expr pos:start="71:27" pos:end="71:46"><name pos:start="71:27" pos:end="71:46"><name pos:start="71:27" pos:end="71:29">env</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:46">system_time_msr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="76:0"><expr pos:start="73:9" pos:end="73:78"><call pos:start="73:9" pos:end="73:78"><name pos:start="73:9" pos:end="73:25">kvm_msr_entry_set</name><argument_list pos:start="73:26" pos:end="73:78">(<argument pos:start="73:27" pos:end="73:36"><expr pos:start="73:27" pos:end="73:36"><operator pos:start="73:27" pos:end="73:27">&amp;</operator><name pos:start="73:28" pos:end="73:36"><name pos:start="73:28" pos:end="73:31">msrs</name><index pos:start="73:32" pos:end="73:36">[<expr pos:start="73:33" pos:end="73:35"><name pos:start="73:33" pos:end="73:33">n</name><operator pos:start="73:34" pos:end="73:35">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="73:39" pos:end="73:56"><expr pos:start="73:39" pos:end="73:56"><name pos:start="73:39" pos:end="73:56">MSR_KVM_WALL_CLOCK</name></expr></argument>, <argument pos:start="73:59" pos:end="73:77"><expr pos:start="73:59" pos:end="73:77"><name pos:start="73:59" pos:end="73:77"><name pos:start="73:59" pos:end="73:61">env</name><operator pos:start="73:62" pos:end="73:63">-&gt;</operator><name pos:start="73:64" pos:end="73:77">wall_clock_msr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="75:1" pos:end="75:23">#<cpp:directive pos:start="75:2" pos:end="75:6">ifdef</cpp:directive> <name pos:start="75:8" pos:end="75:23">KVM_CAP_ASYNC_PF</name></cpp:ifdef>

        <expr_stmt pos:start="77:9" pos:end="80:0"><expr pos:start="77:9" pos:end="77:80"><call pos:start="77:9" pos:end="77:80"><name pos:start="77:9" pos:end="77:25">kvm_msr_entry_set</name><argument_list pos:start="77:26" pos:end="77:80">(<argument pos:start="77:27" pos:end="77:36"><expr pos:start="77:27" pos:end="77:36"><operator pos:start="77:27" pos:end="77:27">&amp;</operator><name pos:start="77:28" pos:end="77:36"><name pos:start="77:28" pos:end="77:31">msrs</name><index pos:start="77:32" pos:end="77:36">[<expr pos:start="77:33" pos:end="77:35"><name pos:start="77:33" pos:end="77:33">n</name><operator pos:start="77:34" pos:end="77:35">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="77:39" pos:end="77:57"><expr pos:start="77:39" pos:end="77:57"><name pos:start="77:39" pos:end="77:57">MSR_KVM_ASYNC_PF_EN</name></expr></argument>, <argument pos:start="77:60" pos:end="77:79"><expr pos:start="77:60" pos:end="77:79"><name pos:start="77:60" pos:end="77:79"><name pos:start="77:60" pos:end="77:62">env</name><operator pos:start="77:63" pos:end="77:64">-&gt;</operator><name pos:start="77:65" pos:end="77:79">async_pf_en_msr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="79:1" pos:end="79:6">#<cpp:directive pos:start="79:2" pos:end="79:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>

<cpp:ifdef pos:start="83:1" pos:end="83:18">#<cpp:directive pos:start="83:2" pos:end="83:6">ifdef</cpp:directive> <name pos:start="83:8" pos:end="83:18">KVM_CAP_MCE</name></cpp:ifdef>

    <if_stmt pos:start="85:5" pos:end="108:0"><if pos:start="85:5" pos:end="108:0">if <condition pos:start="85:8" pos:end="85:21">(<expr pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:11">env</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:20">mcg_cap</name></name></expr>)</condition> <block pos:start="85:23" pos:end="108:0">{<block_content pos:start="87:9" pos:end="103:9">

        <decl_stmt pos:start="87:9" pos:end="87:14"><decl pos:start="87:9" pos:end="87:13"><type pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:11">int</name></type> <name pos:start="87:13" pos:end="87:13">i</name></decl>;</decl_stmt>

        <if_stmt pos:start="89:9" pos:end="103:9"><if pos:start="89:9" pos:end="91:75">if <condition pos:start="89:12" pos:end="89:41">(<expr pos:start="89:13" pos:end="89:40"><name pos:start="89:13" pos:end="89:17">level</name> <operator pos:start="89:19" pos:end="89:20">==</operator> <name pos:start="89:22" pos:end="89:40">KVM_PUT_RESET_STATE</name></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:75"><block_content pos:start="91:13" pos:end="91:75">

            <expr_stmt pos:start="91:13" pos:end="91:75"><expr pos:start="91:13" pos:end="91:74"><call pos:start="91:13" pos:end="91:74"><name pos:start="91:13" pos:end="91:29">kvm_msr_entry_set</name><argument_list pos:start="91:30" pos:end="91:74">(<argument pos:start="91:31" pos:end="91:40"><expr pos:start="91:31" pos:end="91:40"><operator pos:start="91:31" pos:end="91:31">&amp;</operator><name pos:start="91:32" pos:end="91:40"><name pos:start="91:32" pos:end="91:35">msrs</name><index pos:start="91:36" pos:end="91:40">[<expr pos:start="91:37" pos:end="91:39"><name pos:start="91:37" pos:end="91:37">n</name><operator pos:start="91:38" pos:end="91:39">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="91:43" pos:end="91:56"><expr pos:start="91:43" pos:end="91:56"><name pos:start="91:43" pos:end="91:56">MSR_MCG_STATUS</name></expr></argument>, <argument pos:start="91:59" pos:end="91:73"><expr pos:start="91:59" pos:end="91:73"><name pos:start="91:59" pos:end="91:73"><name pos:start="91:59" pos:end="91:61">env</name><operator pos:start="91:62" pos:end="91:63">-&gt;</operator><name pos:start="91:64" pos:end="91:73">mcg_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="93:9" pos:end="103:9">else if <condition pos:start="93:17" pos:end="93:45">(<expr pos:start="93:18" pos:end="93:44"><name pos:start="93:18" pos:end="93:22">level</name> <operator pos:start="93:24" pos:end="93:25">==</operator> <name pos:start="93:27" pos:end="93:44">KVM_PUT_FULL_STATE</name></expr>)</condition> <block pos:start="93:47" pos:end="103:9">{<block_content pos:start="95:13" pos:end="101:82">

            <expr_stmt pos:start="95:13" pos:end="95:75"><expr pos:start="95:13" pos:end="95:74"><call pos:start="95:13" pos:end="95:74"><name pos:start="95:13" pos:end="95:29">kvm_msr_entry_set</name><argument_list pos:start="95:30" pos:end="95:74">(<argument pos:start="95:31" pos:end="95:40"><expr pos:start="95:31" pos:end="95:40"><operator pos:start="95:31" pos:end="95:31">&amp;</operator><name pos:start="95:32" pos:end="95:40"><name pos:start="95:32" pos:end="95:35">msrs</name><index pos:start="95:36" pos:end="95:40">[<expr pos:start="95:37" pos:end="95:39"><name pos:start="95:37" pos:end="95:37">n</name><operator pos:start="95:38" pos:end="95:39">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="95:43" pos:end="95:56"><expr pos:start="95:43" pos:end="95:56"><name pos:start="95:43" pos:end="95:56">MSR_MCG_STATUS</name></expr></argument>, <argument pos:start="95:59" pos:end="95:73"><expr pos:start="95:59" pos:end="95:73"><name pos:start="95:59" pos:end="95:73"><name pos:start="95:59" pos:end="95:61">env</name><operator pos:start="95:62" pos:end="95:63">-&gt;</operator><name pos:start="95:64" pos:end="95:73">mcg_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:69"><expr pos:start="97:13" pos:end="97:68"><call pos:start="97:13" pos:end="97:68"><name pos:start="97:13" pos:end="97:29">kvm_msr_entry_set</name><argument_list pos:start="97:30" pos:end="97:68">(<argument pos:start="97:31" pos:end="97:40"><expr pos:start="97:31" pos:end="97:40"><operator pos:start="97:31" pos:end="97:31">&amp;</operator><name pos:start="97:32" pos:end="97:40"><name pos:start="97:32" pos:end="97:35">msrs</name><index pos:start="97:36" pos:end="97:40">[<expr pos:start="97:37" pos:end="97:39"><name pos:start="97:37" pos:end="97:37">n</name><operator pos:start="97:38" pos:end="97:39">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="97:43" pos:end="97:53"><expr pos:start="97:43" pos:end="97:53"><name pos:start="97:43" pos:end="97:53">MSR_MCG_CTL</name></expr></argument>, <argument pos:start="97:56" pos:end="97:67"><expr pos:start="97:56" pos:end="97:67"><name pos:start="97:56" pos:end="97:67"><name pos:start="97:56" pos:end="97:58">env</name><operator pos:start="97:59" pos:end="97:60">-&gt;</operator><name pos:start="97:61" pos:end="97:67">mcg_ctl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="99:13" pos:end="101:82">for <control pos:start="99:17" pos:end="99:59">(<init pos:start="99:18" pos:end="99:23"><expr pos:start="99:18" pos:end="99:22"><name pos:start="99:18" pos:end="99:18">i</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">0</literal></expr>;</init> <condition pos:start="99:25" pos:end="99:54"><expr pos:start="99:25" pos:end="99:53"><name pos:start="99:25" pos:end="99:25">i</name> <operator pos:start="99:27" pos:end="99:27">&lt;</operator> <operator pos:start="99:29" pos:end="99:29">(</operator><name pos:start="99:30" pos:end="99:41"><name pos:start="99:30" pos:end="99:32">env</name><operator pos:start="99:33" pos:end="99:34">-&gt;</operator><name pos:start="99:35" pos:end="99:41">mcg_cap</name></name> <operator pos:start="99:43" pos:end="99:43">&amp;</operator> <literal type="number" pos:start="99:45" pos:end="99:48">0xff</literal><operator pos:start="99:49" pos:end="99:49">)</operator> <operator pos:start="99:51" pos:end="99:51">*</operator> <literal type="number" pos:start="99:53" pos:end="99:53">4</literal></expr>;</condition> <incr pos:start="99:56" pos:end="99:58"><expr pos:start="99:56" pos:end="99:58"><name pos:start="99:56" pos:end="99:56">i</name><operator pos:start="99:57" pos:end="99:58">++</operator></expr></incr>)</control><block type="pseudo" pos:start="101:17" pos:end="101:82"><block_content pos:start="101:17" pos:end="101:82">

                <expr_stmt pos:start="101:17" pos:end="101:82"><expr pos:start="101:17" pos:end="101:81"><call pos:start="101:17" pos:end="101:81"><name pos:start="101:17" pos:end="101:33">kvm_msr_entry_set</name><argument_list pos:start="101:34" pos:end="101:81">(<argument pos:start="101:35" pos:end="101:44"><expr pos:start="101:35" pos:end="101:44"><operator pos:start="101:35" pos:end="101:35">&amp;</operator><name pos:start="101:36" pos:end="101:44"><name pos:start="101:36" pos:end="101:39">msrs</name><index pos:start="101:40" pos:end="101:44">[<expr pos:start="101:41" pos:end="101:43"><name pos:start="101:41" pos:end="101:41">n</name><operator pos:start="101:42" pos:end="101:43">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="101:47" pos:end="101:61"><expr pos:start="101:47" pos:end="101:61"><name pos:start="101:47" pos:end="101:57">MSR_MC0_CTL</name> <operator pos:start="101:59" pos:end="101:59">+</operator> <name pos:start="101:61" pos:end="101:61">i</name></expr></argument>, <argument pos:start="101:64" pos:end="101:80"><expr pos:start="101:64" pos:end="101:80"><name pos:start="101:64" pos:end="101:80"><name pos:start="101:64" pos:end="101:66">env</name><operator pos:start="101:67" pos:end="101:68">-&gt;</operator><name pos:start="101:69" pos:end="101:77">mce_banks</name><index pos:start="101:78" pos:end="101:80">[<expr pos:start="101:79" pos:end="101:79"><name pos:start="101:79" pos:end="101:79">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="107:1" pos:end="107:6">#<cpp:directive pos:start="107:2" pos:end="107:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="111:5" pos:end="111:28"><expr pos:start="111:5" pos:end="111:27"><name pos:start="111:5" pos:end="111:23"><name pos:start="111:5" pos:end="111:12">msr_data</name><operator pos:start="111:13" pos:end="111:13">.</operator><name pos:start="111:14" pos:end="111:17">info</name><operator pos:start="111:18" pos:end="111:18">.</operator><name pos:start="111:19" pos:end="111:23">nmsrs</name></name> <operator pos:start="111:25" pos:end="111:25">=</operator> <name pos:start="111:27" pos:end="111:27">n</name></expr>;</expr_stmt>



    <return pos:start="115:5" pos:end="115:56">return <expr pos:start="115:12" pos:end="115:55"><call pos:start="115:12" pos:end="115:55"><name pos:start="115:12" pos:end="115:25">kvm_vcpu_ioctl</name><argument_list pos:start="115:26" pos:end="115:55">(<argument pos:start="115:27" pos:end="115:29"><expr pos:start="115:27" pos:end="115:29"><name pos:start="115:27" pos:end="115:29">env</name></expr></argument>, <argument pos:start="115:32" pos:end="115:43"><expr pos:start="115:32" pos:end="115:43"><name pos:start="115:32" pos:end="115:43">KVM_SET_MSRS</name></expr></argument>, <argument pos:start="115:46" pos:end="115:54"><expr pos:start="115:46" pos:end="115:54"><operator pos:start="115:46" pos:end="115:46">&amp;</operator><name pos:start="115:47" pos:end="115:54">msr_data</name></expr></argument>)</argument_list></call></expr>;</return>



</block_content>}</block></function>
</unit>
