<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18233.c" pos:tabs="8"><function pos:start="1:1" pos:end="4555:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">disas_sparc_insn</name><parameter_list pos:start="1:29" pos:end="1:47">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:41">DisasContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type> <name pos:start="1:45" pos:end="1:46">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="4555:1">{<block_content pos:start="5:5" pos:end="4554:0">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:21">insn</name></decl>, <decl pos:start="5:24" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:24" pos:end="5:26">opc</name></decl>, <decl pos:start="5:29" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:29" pos:end="5:31">rs1</name></decl>, <decl pos:start="5:34" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:34" pos:end="5:36">rs2</name></decl>, <decl pos:start="5:39" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:39" pos:end="5:40">rd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:28"><expr pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:8">insn</name> <operator pos:start="9:10" pos:end="9:10">=</operator> <call pos:start="9:12" pos:end="9:27"><name pos:start="9:12" pos:end="9:19">ldl_code</name><argument_list pos:start="9:20" pos:end="9:27">(<argument pos:start="9:21" pos:end="9:26"><expr pos:start="9:21" pos:end="9:26"><name pos:start="9:21" pos:end="9:26"><name pos:start="9:21" pos:end="9:22">dc</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:26">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:32"><expr pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:7">opc</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:31"><name pos:start="11:11" pos:end="11:19">GET_FIELD</name><argument_list pos:start="11:20" pos:end="11:31">(<argument pos:start="11:21" pos:end="11:24"><expr pos:start="11:21" pos:end="11:24"><name pos:start="11:21" pos:end="11:24">insn</name></expr></argument>, <argument pos:start="11:27" pos:end="11:27"><expr pos:start="11:27" pos:end="11:27"><literal type="number" pos:start="11:27" pos:end="11:27">0</literal></expr></argument>, <argument pos:start="11:30" pos:end="11:30"><expr pos:start="11:30" pos:end="11:30"><literal type="number" pos:start="11:30" pos:end="11:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:6">rd</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <call pos:start="15:10" pos:end="15:30"><name pos:start="15:10" pos:end="15:18">GET_FIELD</name><argument_list pos:start="15:19" pos:end="15:30">(<argument pos:start="15:20" pos:end="15:23"><expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">insn</name></expr></argument>, <argument pos:start="15:26" pos:end="15:26"><expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">2</literal></expr></argument>, <argument pos:start="15:29" pos:end="15:29"><expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="17:5" pos:end="4463:5">switch <condition pos:start="17:12" pos:end="17:16">(<expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">opc</name></expr>)</condition> <block pos:start="17:18" pos:end="4463:5">{<block_content pos:start="19:5" pos:end="4461:14">

    <case pos:start="19:5" pos:end="19:11">case <expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">0</literal></expr>:</case>                     <comment type="block" pos:start="19:33" pos:end="19:52">/* branches/sethi */</comment>

        <block pos:start="21:9" pos:end="189:9">{<block_content pos:start="23:13" pos:end="187:18">

            <decl_stmt pos:start="23:13" pos:end="23:53"><decl pos:start="23:13" pos:end="23:52"><type pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:20">unsigned</name> <name pos:start="23:22" pos:end="23:24">int</name></type> <name pos:start="23:26" pos:end="23:28">xop</name> <init pos:start="23:30" pos:end="23:52">= <expr pos:start="23:32" pos:end="23:52"><call pos:start="23:32" pos:end="23:52"><name pos:start="23:32" pos:end="23:40">GET_FIELD</name><argument_list pos:start="23:41" pos:end="23:52">(<argument pos:start="23:42" pos:end="23:45"><expr pos:start="23:42" pos:end="23:45"><name pos:start="23:42" pos:end="23:45">insn</name></expr></argument>, <argument pos:start="23:48" pos:end="23:48"><expr pos:start="23:48" pos:end="23:48"><literal type="number" pos:start="23:48" pos:end="23:48">7</literal></expr></argument>, <argument pos:start="23:51" pos:end="23:51"><expr pos:start="23:51" pos:end="23:51"><literal type="number" pos:start="23:51" pos:end="23:51">9</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="25:13" pos:end="25:27"><decl pos:start="25:13" pos:end="25:26"><type pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:19">int32_t</name></type> <name pos:start="25:21" pos:end="25:26">target</name></decl>;</decl_stmt>

            <switch pos:start="27:13" pos:end="185:13">switch <condition pos:start="27:20" pos:end="27:24">(<expr pos:start="27:21" pos:end="27:23"><name pos:start="27:21" pos:end="27:23">xop</name></expr>)</condition> <block pos:start="27:26" pos:end="185:13">{<block_content pos:start="31:13" pos:end="183:34">

<cpp:ifdef pos:start="29:1" pos:end="29:21">#<cpp:directive pos:start="29:2" pos:end="29:6">ifdef</cpp:directive> <name pos:start="29:8" pos:end="29:21">TARGET_SPARC64</name></cpp:ifdef>

            <case pos:start="31:13" pos:end="31:21">case <expr pos:start="31:18" pos:end="31:20"><literal type="number" pos:start="31:18" pos:end="31:20">0x1</literal></expr>:</case>           <comment type="block" pos:start="31:33" pos:end="31:45">/* V9 BPcc */</comment>

                <block pos:start="33:17" pos:end="61:17">{<block_content pos:start="35:21" pos:end="59:34">

                    <decl_stmt pos:start="35:21" pos:end="35:27"><decl pos:start="35:21" pos:end="35:26"><type pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:23">int</name></type> <name pos:start="35:25" pos:end="35:26">cc</name></decl>;</decl_stmt>



                    <expr_stmt pos:start="39:21" pos:end="39:55"><expr pos:start="39:21" pos:end="39:54"><name pos:start="39:21" pos:end="39:26">target</name> <operator pos:start="39:28" pos:end="39:28">=</operator> <call pos:start="39:30" pos:end="39:54"><name pos:start="39:30" pos:end="39:41">GET_FIELD_SP</name><argument_list pos:start="39:42" pos:end="39:54">(<argument pos:start="39:43" pos:end="39:46"><expr pos:start="39:43" pos:end="39:46"><name pos:start="39:43" pos:end="39:46">insn</name></expr></argument>, <argument pos:start="39:49" pos:end="39:49"><expr pos:start="39:49" pos:end="39:49"><literal type="number" pos:start="39:49" pos:end="39:49">0</literal></expr></argument>, <argument pos:start="39:52" pos:end="39:53"><expr pos:start="39:52" pos:end="39:53"><literal type="number" pos:start="39:52" pos:end="39:53">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="41:21" pos:end="41:53"><expr pos:start="41:21" pos:end="41:52"><name pos:start="41:21" pos:end="41:26">target</name> <operator pos:start="41:28" pos:end="41:28">=</operator> <call pos:start="41:30" pos:end="41:52"><name pos:start="41:30" pos:end="41:40">sign_extend</name><argument_list pos:start="41:41" pos:end="41:52">(<argument pos:start="41:42" pos:end="41:47"><expr pos:start="41:42" pos:end="41:47"><name pos:start="41:42" pos:end="41:47">target</name></expr></argument>, <argument pos:start="41:50" pos:end="41:51"><expr pos:start="41:50" pos:end="41:51"><literal type="number" pos:start="41:50" pos:end="41:51">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="43:21" pos:end="43:33"><expr pos:start="43:21" pos:end="43:32"><name pos:start="43:21" pos:end="43:26">target</name> <operator pos:start="43:28" pos:end="43:30">&lt;&lt;=</operator> <literal type="number" pos:start="43:32" pos:end="43:32">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="45:21" pos:end="45:52"><expr pos:start="45:21" pos:end="45:51"><name pos:start="45:21" pos:end="45:22">cc</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <call pos:start="45:26" pos:end="45:51"><name pos:start="45:26" pos:end="45:37">GET_FIELD_SP</name><argument_list pos:start="45:38" pos:end="45:51">(<argument pos:start="45:39" pos:end="45:42"><expr pos:start="45:39" pos:end="45:42"><name pos:start="45:39" pos:end="45:42">insn</name></expr></argument>, <argument pos:start="45:45" pos:end="45:46"><expr pos:start="45:45" pos:end="45:46"><literal type="number" pos:start="45:45" pos:end="45:46">20</literal></expr></argument>, <argument pos:start="45:49" pos:end="45:50"><expr pos:start="45:49" pos:end="45:50"><literal type="number" pos:start="45:49" pos:end="45:50">21</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="47:21" pos:end="57:42"><if pos:start="47:21" pos:end="49:55">if <condition pos:start="47:24" pos:end="47:32">(<expr pos:start="47:25" pos:end="47:31"><name pos:start="47:25" pos:end="47:26">cc</name> <operator pos:start="47:28" pos:end="47:29">==</operator> <literal type="number" pos:start="47:31" pos:end="47:31">0</literal></expr>)</condition><block type="pseudo" pos:start="49:25" pos:end="49:55"><block_content pos:start="49:25" pos:end="49:55">

                        <expr_stmt pos:start="49:25" pos:end="49:55"><expr pos:start="49:25" pos:end="49:54"><call pos:start="49:25" pos:end="49:54"><name pos:start="49:25" pos:end="49:33">do_branch</name><argument_list pos:start="49:34" pos:end="49:54">(<argument pos:start="49:35" pos:end="49:36"><expr pos:start="49:35" pos:end="49:36"><name pos:start="49:35" pos:end="49:36">dc</name></expr></argument>, <argument pos:start="49:39" pos:end="49:44"><expr pos:start="49:39" pos:end="49:44"><name pos:start="49:39" pos:end="49:44">target</name></expr></argument>, <argument pos:start="49:47" pos:end="49:50"><expr pos:start="49:47" pos:end="49:50"><name pos:start="49:47" pos:end="49:50">insn</name></expr></argument>, <argument pos:start="49:53" pos:end="49:53"><expr pos:start="49:53" pos:end="49:53"><literal type="number" pos:start="49:53" pos:end="49:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="51:21" pos:end="53:55">else if <condition pos:start="51:29" pos:end="51:37">(<expr pos:start="51:30" pos:end="51:36"><name pos:start="51:30" pos:end="51:31">cc</name> <operator pos:start="51:33" pos:end="51:34">==</operator> <literal type="number" pos:start="51:36" pos:end="51:36">2</literal></expr>)</condition><block type="pseudo" pos:start="53:25" pos:end="53:55"><block_content pos:start="53:25" pos:end="53:55">

                        <expr_stmt pos:start="53:25" pos:end="53:55"><expr pos:start="53:25" pos:end="53:54"><call pos:start="53:25" pos:end="53:54"><name pos:start="53:25" pos:end="53:33">do_branch</name><argument_list pos:start="53:34" pos:end="53:54">(<argument pos:start="53:35" pos:end="53:36"><expr pos:start="53:35" pos:end="53:36"><name pos:start="53:35" pos:end="53:36">dc</name></expr></argument>, <argument pos:start="53:39" pos:end="53:44"><expr pos:start="53:39" pos:end="53:44"><name pos:start="53:39" pos:end="53:44">target</name></expr></argument>, <argument pos:start="53:47" pos:end="53:50"><expr pos:start="53:47" pos:end="53:50"><name pos:start="53:47" pos:end="53:50">insn</name></expr></argument>, <argument pos:start="53:53" pos:end="53:53"><expr pos:start="53:53" pos:end="53:53"><literal type="number" pos:start="53:53" pos:end="53:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="55:21" pos:end="57:42">else<block type="pseudo" pos:start="57:25" pos:end="57:42"><block_content pos:start="57:25" pos:end="57:42">

                        <goto pos:start="57:25" pos:end="57:42">goto <name pos:start="57:30" pos:end="57:41">illegal_insn</name>;</goto></block_content></block></else></if_stmt>

                    <goto pos:start="59:21" pos:end="59:34">goto <name pos:start="59:26" pos:end="59:33">jmp_insn</name>;</goto>

                </block_content>}</block>

            <case pos:start="63:13" pos:end="63:21">case <expr pos:start="63:18" pos:end="63:20"><literal type="number" pos:start="63:18" pos:end="63:20">0x3</literal></expr>:</case>           <comment type="block" pos:start="63:33" pos:end="63:44">/* V9 BPr */</comment>

                <block pos:start="65:17" pos:end="83:17">{<block_content pos:start="67:21" pos:end="81:34">

                    <expr_stmt pos:start="67:21" pos:end="69:59"><expr pos:start="67:21" pos:end="69:58"><name pos:start="67:21" pos:end="67:26">target</name> <operator pos:start="67:28" pos:end="67:28">=</operator> <call pos:start="67:30" pos:end="67:54"><name pos:start="67:30" pos:end="67:41">GET_FIELD_SP</name><argument_list pos:start="67:42" pos:end="67:54">(<argument pos:start="67:43" pos:end="67:46"><expr pos:start="67:43" pos:end="67:46"><name pos:start="67:43" pos:end="67:46">insn</name></expr></argument>, <argument pos:start="67:49" pos:end="67:49"><expr pos:start="67:49" pos:end="67:49"><literal type="number" pos:start="67:49" pos:end="67:49">0</literal></expr></argument>, <argument pos:start="67:52" pos:end="67:53"><expr pos:start="67:52" pos:end="67:53"><literal type="number" pos:start="67:52" pos:end="67:53">13</literal></expr></argument>)</argument_list></call> <operator pos:start="67:56" pos:end="67:56">|</operator>

                        <operator pos:start="69:25" pos:end="69:25">(</operator><call pos:start="69:26" pos:end="69:51"><name pos:start="69:26" pos:end="69:37">GET_FIELD_SP</name><argument_list pos:start="69:38" pos:end="69:51">(<argument pos:start="69:39" pos:end="69:42"><expr pos:start="69:39" pos:end="69:42"><name pos:start="69:39" pos:end="69:42">insn</name></expr></argument>, <argument pos:start="69:45" pos:end="69:46"><expr pos:start="69:45" pos:end="69:46"><literal type="number" pos:start="69:45" pos:end="69:46">20</literal></expr></argument>, <argument pos:start="69:49" pos:end="69:50"><expr pos:start="69:49" pos:end="69:50"><literal type="number" pos:start="69:49" pos:end="69:50">21</literal></expr></argument>)</argument_list></call> <operator pos:start="69:53" pos:end="69:54">&lt;&lt;</operator> <literal type="number" pos:start="69:56" pos:end="69:57">14</literal><operator pos:start="69:58" pos:end="69:58">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:53"><expr pos:start="71:21" pos:end="71:52"><name pos:start="71:21" pos:end="71:26">target</name> <operator pos:start="71:28" pos:end="71:28">=</operator> <call pos:start="71:30" pos:end="71:52"><name pos:start="71:30" pos:end="71:40">sign_extend</name><argument_list pos:start="71:41" pos:end="71:52">(<argument pos:start="71:42" pos:end="71:47"><expr pos:start="71:42" pos:end="71:47"><name pos:start="71:42" pos:end="71:47">target</name></expr></argument>, <argument pos:start="71:50" pos:end="71:51"><expr pos:start="71:50" pos:end="71:51"><literal type="number" pos:start="71:50" pos:end="71:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:33"><expr pos:start="73:21" pos:end="73:32"><name pos:start="73:21" pos:end="73:26">target</name> <operator pos:start="73:28" pos:end="73:30">&lt;&lt;=</operator> <literal type="number" pos:start="73:32" pos:end="73:32">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="75:21" pos:end="75:50"><expr pos:start="75:21" pos:end="75:49"><name pos:start="75:21" pos:end="75:23">rs1</name> <operator pos:start="75:25" pos:end="75:25">=</operator> <call pos:start="75:27" pos:end="75:49"><name pos:start="75:27" pos:end="75:35">GET_FIELD</name><argument_list pos:start="75:36" pos:end="75:49">(<argument pos:start="75:37" pos:end="75:40"><expr pos:start="75:37" pos:end="75:40"><name pos:start="75:37" pos:end="75:40">insn</name></expr></argument>, <argument pos:start="75:43" pos:end="75:44"><expr pos:start="75:43" pos:end="75:44"><literal type="number" pos:start="75:43" pos:end="75:44">13</literal></expr></argument>, <argument pos:start="75:47" pos:end="75:48"><expr pos:start="75:47" pos:end="75:48"><literal type="number" pos:start="75:47" pos:end="75:48">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="77:21" pos:end="77:41"><expr pos:start="77:21" pos:end="77:40"><call pos:start="77:21" pos:end="77:40"><name pos:start="77:21" pos:end="77:35">gen_movl_reg_T0</name><argument_list pos:start="77:36" pos:end="77:40">(<argument pos:start="77:37" pos:end="77:39"><expr pos:start="77:37" pos:end="77:39"><name pos:start="77:37" pos:end="77:39">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="79:21" pos:end="79:52"><expr pos:start="79:21" pos:end="79:51"><call pos:start="79:21" pos:end="79:51"><name pos:start="79:21" pos:end="79:33">do_branch_reg</name><argument_list pos:start="79:34" pos:end="79:51">(<argument pos:start="79:35" pos:end="79:36"><expr pos:start="79:35" pos:end="79:36"><name pos:start="79:35" pos:end="79:36">dc</name></expr></argument>, <argument pos:start="79:39" pos:end="79:44"><expr pos:start="79:39" pos:end="79:44"><name pos:start="79:39" pos:end="79:44">target</name></expr></argument>, <argument pos:start="79:47" pos:end="79:50"><expr pos:start="79:47" pos:end="79:50"><name pos:start="79:47" pos:end="79:50">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="81:21" pos:end="81:34">goto <name pos:start="81:26" pos:end="81:33">jmp_insn</name>;</goto>

                </block_content>}</block>

            <case pos:start="85:13" pos:end="85:21">case <expr pos:start="85:18" pos:end="85:20"><literal type="number" pos:start="85:18" pos:end="85:20">0x5</literal></expr>:</case>           <comment type="block" pos:start="85:33" pos:end="85:46">/* V9 FBPcc */</comment>

                <block pos:start="87:17" pos:end="108:0">{<block_content pos:start="89:21" pos:end="103:34">

                    <decl_stmt pos:start="89:21" pos:end="89:56"><decl pos:start="89:21" pos:end="89:55"><type pos:start="89:21" pos:end="89:23"><name pos:start="89:21" pos:end="89:23">int</name></type> <name pos:start="89:25" pos:end="89:26">cc</name> <init pos:start="89:28" pos:end="89:55">= <expr pos:start="89:30" pos:end="89:55"><call pos:start="89:30" pos:end="89:55"><name pos:start="89:30" pos:end="89:41">GET_FIELD_SP</name><argument_list pos:start="89:42" pos:end="89:55">(<argument pos:start="89:43" pos:end="89:46"><expr pos:start="89:43" pos:end="89:46"><name pos:start="89:43" pos:end="89:46">insn</name></expr></argument>, <argument pos:start="89:49" pos:end="89:50"><expr pos:start="89:49" pos:end="89:50"><literal type="number" pos:start="89:49" pos:end="89:50">20</literal></expr></argument>, <argument pos:start="89:53" pos:end="89:54"><expr pos:start="89:53" pos:end="89:54"><literal type="number" pos:start="89:53" pos:end="89:54">21</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="91:21" pos:end="93:38"><if pos:start="91:21" pos:end="93:38">if <condition pos:start="91:24" pos:end="91:45">(<expr pos:start="91:25" pos:end="91:44"><call pos:start="91:25" pos:end="91:44"><name pos:start="91:25" pos:end="91:40">gen_trap_ifnofpu</name><argument_list pos:start="91:41" pos:end="91:44">(<argument pos:start="91:42" pos:end="91:43"><expr pos:start="91:42" pos:end="91:43"><name pos:start="91:42" pos:end="91:43">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="93:25" pos:end="93:38"><block_content pos:start="93:25" pos:end="93:38">

                        <goto pos:start="93:25" pos:end="93:38">goto <name pos:start="93:30" pos:end="93:37">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:55"><expr pos:start="95:21" pos:end="95:54"><name pos:start="95:21" pos:end="95:26">target</name> <operator pos:start="95:28" pos:end="95:28">=</operator> <call pos:start="95:30" pos:end="95:54"><name pos:start="95:30" pos:end="95:41">GET_FIELD_SP</name><argument_list pos:start="95:42" pos:end="95:54">(<argument pos:start="95:43" pos:end="95:46"><expr pos:start="95:43" pos:end="95:46"><name pos:start="95:43" pos:end="95:46">insn</name></expr></argument>, <argument pos:start="95:49" pos:end="95:49"><expr pos:start="95:49" pos:end="95:49"><literal type="number" pos:start="95:49" pos:end="95:49">0</literal></expr></argument>, <argument pos:start="95:52" pos:end="95:53"><expr pos:start="95:52" pos:end="95:53"><literal type="number" pos:start="95:52" pos:end="95:53">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="97:21" pos:end="97:53"><expr pos:start="97:21" pos:end="97:52"><name pos:start="97:21" pos:end="97:26">target</name> <operator pos:start="97:28" pos:end="97:28">=</operator> <call pos:start="97:30" pos:end="97:52"><name pos:start="97:30" pos:end="97:40">sign_extend</name><argument_list pos:start="97:41" pos:end="97:52">(<argument pos:start="97:42" pos:end="97:47"><expr pos:start="97:42" pos:end="97:47"><name pos:start="97:42" pos:end="97:47">target</name></expr></argument>, <argument pos:start="97:50" pos:end="97:51"><expr pos:start="97:50" pos:end="97:51"><literal type="number" pos:start="97:50" pos:end="97:51">19</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="99:21" pos:end="99:33"><expr pos:start="99:21" pos:end="99:32"><name pos:start="99:21" pos:end="99:26">target</name> <operator pos:start="99:28" pos:end="99:30">&lt;&lt;=</operator> <literal type="number" pos:start="99:32" pos:end="99:32">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="101:21" pos:end="101:53"><expr pos:start="101:21" pos:end="101:52"><call pos:start="101:21" pos:end="101:52"><name pos:start="101:21" pos:end="101:30">do_fbranch</name><argument_list pos:start="101:31" pos:end="101:52">(<argument pos:start="101:32" pos:end="101:33"><expr pos:start="101:32" pos:end="101:33"><name pos:start="101:32" pos:end="101:33">dc</name></expr></argument>, <argument pos:start="101:36" pos:end="101:41"><expr pos:start="101:36" pos:end="101:41"><name pos:start="101:36" pos:end="101:41">target</name></expr></argument>, <argument pos:start="101:44" pos:end="101:47"><expr pos:start="101:44" pos:end="101:47"><name pos:start="101:44" pos:end="101:47">insn</name></expr></argument>, <argument pos:start="101:50" pos:end="101:51"><expr pos:start="101:50" pos:end="101:51"><name pos:start="101:50" pos:end="101:51">cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="103:21" pos:end="103:34">goto <name pos:start="103:26" pos:end="103:33">jmp_insn</name>;</goto>

                </block_content>}</block>

<cpp:else pos:start="107:1" pos:end="107:5">#<cpp:directive pos:start="107:2" pos:end="107:5">else</cpp:directive></cpp:else>

            <case pos:start="109:13" pos:end="109:21">case <expr pos:start="109:18" pos:end="109:20"><literal type="number" pos:start="109:18" pos:end="109:20">0x7</literal></expr>:</case>           <comment type="block" pos:start="109:33" pos:end="109:43">/* CBN+x */</comment>

                <block pos:start="111:17" pos:end="118:0">{<block_content pos:start="113:21" pos:end="113:34">

                    <goto pos:start="113:21" pos:end="113:34">goto <name pos:start="113:26" pos:end="113:33">ncp_insn</name>;</goto>

                </block_content>}</block>

<cpp:endif pos:start="117:1" pos:end="117:6">#<cpp:directive pos:start="117:2" pos:end="117:6">endif</cpp:directive></cpp:endif>

            <case pos:start="119:13" pos:end="119:21">case <expr pos:start="119:18" pos:end="119:20"><literal type="number" pos:start="119:18" pos:end="119:20">0x2</literal></expr>:</case>           <comment type="block" pos:start="119:33" pos:end="119:42">/* BN+x */</comment>

                <block pos:start="121:17" pos:end="133:17">{<block_content pos:start="123:21" pos:end="131:34">

                    <expr_stmt pos:start="123:21" pos:end="123:53"><expr pos:start="123:21" pos:end="123:52"><name pos:start="123:21" pos:end="123:26">target</name> <operator pos:start="123:28" pos:end="123:28">=</operator> <call pos:start="123:30" pos:end="123:52"><name pos:start="123:30" pos:end="123:38">GET_FIELD</name><argument_list pos:start="123:39" pos:end="123:52">(<argument pos:start="123:40" pos:end="123:43"><expr pos:start="123:40" pos:end="123:43"><name pos:start="123:40" pos:end="123:43">insn</name></expr></argument>, <argument pos:start="123:46" pos:end="123:47"><expr pos:start="123:46" pos:end="123:47"><literal type="number" pos:start="123:46" pos:end="123:47">10</literal></expr></argument>, <argument pos:start="123:50" pos:end="123:51"><expr pos:start="123:50" pos:end="123:51"><literal type="number" pos:start="123:50" pos:end="123:51">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="125:21" pos:end="125:53"><expr pos:start="125:21" pos:end="125:52"><name pos:start="125:21" pos:end="125:26">target</name> <operator pos:start="125:28" pos:end="125:28">=</operator> <call pos:start="125:30" pos:end="125:52"><name pos:start="125:30" pos:end="125:40">sign_extend</name><argument_list pos:start="125:41" pos:end="125:52">(<argument pos:start="125:42" pos:end="125:47"><expr pos:start="125:42" pos:end="125:47"><name pos:start="125:42" pos:end="125:47">target</name></expr></argument>, <argument pos:start="125:50" pos:end="125:51"><expr pos:start="125:50" pos:end="125:51"><literal type="number" pos:start="125:50" pos:end="125:51">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="127:21" pos:end="127:33"><expr pos:start="127:21" pos:end="127:32"><name pos:start="127:21" pos:end="127:26">target</name> <operator pos:start="127:28" pos:end="127:30">&lt;&lt;=</operator> <literal type="number" pos:start="127:32" pos:end="127:32">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="129:21" pos:end="129:51"><expr pos:start="129:21" pos:end="129:50"><call pos:start="129:21" pos:end="129:50"><name pos:start="129:21" pos:end="129:29">do_branch</name><argument_list pos:start="129:30" pos:end="129:50">(<argument pos:start="129:31" pos:end="129:32"><expr pos:start="129:31" pos:end="129:32"><name pos:start="129:31" pos:end="129:32">dc</name></expr></argument>, <argument pos:start="129:35" pos:end="129:40"><expr pos:start="129:35" pos:end="129:40"><name pos:start="129:35" pos:end="129:40">target</name></expr></argument>, <argument pos:start="129:43" pos:end="129:46"><expr pos:start="129:43" pos:end="129:46"><name pos:start="129:43" pos:end="129:46">insn</name></expr></argument>, <argument pos:start="129:49" pos:end="129:49"><expr pos:start="129:49" pos:end="129:49"><literal type="number" pos:start="129:49" pos:end="129:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="131:21" pos:end="131:34">goto <name pos:start="131:26" pos:end="131:33">jmp_insn</name>;</goto>

                </block_content>}</block>

            <case pos:start="135:13" pos:end="135:21">case <expr pos:start="135:18" pos:end="135:20"><literal type="number" pos:start="135:18" pos:end="135:20">0x6</literal></expr>:</case>           <comment type="block" pos:start="135:33" pos:end="135:43">/* FBN+x */</comment>

                <block pos:start="137:17" pos:end="153:17">{<block_content pos:start="139:21" pos:end="151:34">

                    <if_stmt pos:start="139:21" pos:end="141:38"><if pos:start="139:21" pos:end="141:38">if <condition pos:start="139:24" pos:end="139:45">(<expr pos:start="139:25" pos:end="139:44"><call pos:start="139:25" pos:end="139:44"><name pos:start="139:25" pos:end="139:40">gen_trap_ifnofpu</name><argument_list pos:start="139:41" pos:end="139:44">(<argument pos:start="139:42" pos:end="139:43"><expr pos:start="139:42" pos:end="139:43"><name pos:start="139:42" pos:end="139:43">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="141:25" pos:end="141:38"><block_content pos:start="141:25" pos:end="141:38">

                        <goto pos:start="141:25" pos:end="141:38">goto <name pos:start="141:30" pos:end="141:37">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:53"><expr pos:start="143:21" pos:end="143:52"><name pos:start="143:21" pos:end="143:26">target</name> <operator pos:start="143:28" pos:end="143:28">=</operator> <call pos:start="143:30" pos:end="143:52"><name pos:start="143:30" pos:end="143:38">GET_FIELD</name><argument_list pos:start="143:39" pos:end="143:52">(<argument pos:start="143:40" pos:end="143:43"><expr pos:start="143:40" pos:end="143:43"><name pos:start="143:40" pos:end="143:43">insn</name></expr></argument>, <argument pos:start="143:46" pos:end="143:47"><expr pos:start="143:46" pos:end="143:47"><literal type="number" pos:start="143:46" pos:end="143:47">10</literal></expr></argument>, <argument pos:start="143:50" pos:end="143:51"><expr pos:start="143:50" pos:end="143:51"><literal type="number" pos:start="143:50" pos:end="143:51">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="145:21" pos:end="145:53"><expr pos:start="145:21" pos:end="145:52"><name pos:start="145:21" pos:end="145:26">target</name> <operator pos:start="145:28" pos:end="145:28">=</operator> <call pos:start="145:30" pos:end="145:52"><name pos:start="145:30" pos:end="145:40">sign_extend</name><argument_list pos:start="145:41" pos:end="145:52">(<argument pos:start="145:42" pos:end="145:47"><expr pos:start="145:42" pos:end="145:47"><name pos:start="145:42" pos:end="145:47">target</name></expr></argument>, <argument pos:start="145:50" pos:end="145:51"><expr pos:start="145:50" pos:end="145:51"><literal type="number" pos:start="145:50" pos:end="145:51">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:33"><expr pos:start="147:21" pos:end="147:32"><name pos:start="147:21" pos:end="147:26">target</name> <operator pos:start="147:28" pos:end="147:30">&lt;&lt;=</operator> <literal type="number" pos:start="147:32" pos:end="147:32">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="149:21" pos:end="149:52"><expr pos:start="149:21" pos:end="149:51"><call pos:start="149:21" pos:end="149:51"><name pos:start="149:21" pos:end="149:30">do_fbranch</name><argument_list pos:start="149:31" pos:end="149:51">(<argument pos:start="149:32" pos:end="149:33"><expr pos:start="149:32" pos:end="149:33"><name pos:start="149:32" pos:end="149:33">dc</name></expr></argument>, <argument pos:start="149:36" pos:end="149:41"><expr pos:start="149:36" pos:end="149:41"><name pos:start="149:36" pos:end="149:41">target</name></expr></argument>, <argument pos:start="149:44" pos:end="149:47"><expr pos:start="149:44" pos:end="149:47"><name pos:start="149:44" pos:end="149:47">insn</name></expr></argument>, <argument pos:start="149:50" pos:end="149:50"><expr pos:start="149:50" pos:end="149:50"><literal type="number" pos:start="149:50" pos:end="149:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="151:21" pos:end="151:34">goto <name pos:start="151:26" pos:end="151:33">jmp_insn</name>;</goto>

                </block_content>}</block>

            <case pos:start="155:13" pos:end="160:0">case <expr pos:start="155:18" pos:end="155:20"><literal type="number" pos:start="155:18" pos:end="155:20">0x4</literal></expr>:</case>           <comment type="block" pos:start="155:33" pos:end="155:43">/* SETHI */</comment>

<cpp:define pos:start="157:1" pos:end="157:13">#<cpp:directive pos:start="157:2" pos:end="157:7">define</cpp:directive> <cpp:macro pos:start="157:9" pos:end="157:13"><name pos:start="157:9" pos:end="157:13">OPTIM</name></cpp:macro></cpp:define>

<cpp:if pos:start="159:1" pos:end="159:18">#<cpp:directive pos:start="159:2" pos:end="159:3">if</cpp:directive> <expr pos:start="159:5" pos:end="159:18"><call pos:start="159:5" pos:end="159:18"><name pos:start="159:5" pos:end="159:11">defined</name><argument_list pos:start="159:12" pos:end="159:18">(<argument pos:start="159:13" pos:end="159:17"><expr pos:start="159:13" pos:end="159:17"><name pos:start="159:13" pos:end="159:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <if_stmt pos:start="161:17" pos:end="176:0"><if pos:start="161:17" pos:end="176:0">if <condition pos:start="161:20" pos:end="161:23">(<expr pos:start="161:21" pos:end="161:22"><name pos:start="161:21" pos:end="161:22">rd</name></expr>)</condition> <block pos:start="161:25" pos:end="176:0">{<block_content pos:start="165:21" pos:end="172:0"> <comment type="line" pos:start="161:27" pos:end="161:32">// nop</comment>

<cpp:endif pos:start="163:1" pos:end="163:6">#<cpp:directive pos:start="163:2" pos:end="163:6">endif</cpp:directive></cpp:endif>

                    <decl_stmt pos:start="165:21" pos:end="165:61"><decl pos:start="165:21" pos:end="165:60"><type pos:start="165:21" pos:end="165:28"><name pos:start="165:21" pos:end="165:28">uint32_t</name></type> <name pos:start="165:30" pos:end="165:34">value</name> <init pos:start="165:36" pos:end="165:60">= <expr pos:start="165:38" pos:end="165:60"><call pos:start="165:38" pos:end="165:60"><name pos:start="165:38" pos:end="165:46">GET_FIELD</name><argument_list pos:start="165:47" pos:end="165:60">(<argument pos:start="165:48" pos:end="165:51"><expr pos:start="165:48" pos:end="165:51"><name pos:start="165:48" pos:end="165:51">insn</name></expr></argument>, <argument pos:start="165:54" pos:end="165:55"><expr pos:start="165:54" pos:end="165:55"><literal type="number" pos:start="165:54" pos:end="165:55">10</literal></expr></argument>, <argument pos:start="165:58" pos:end="165:59"><expr pos:start="165:58" pos:end="165:59"><literal type="number" pos:start="165:58" pos:end="165:59">31</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="167:21" pos:end="167:49"><expr pos:start="167:21" pos:end="167:48"><call pos:start="167:21" pos:end="167:48"><name pos:start="167:21" pos:end="167:35">gen_movl_imm_T0</name><argument_list pos:start="167:36" pos:end="167:48">(<argument pos:start="167:37" pos:end="167:47"><expr pos:start="167:37" pos:end="167:47"><name pos:start="167:37" pos:end="167:41">value</name> <operator pos:start="167:43" pos:end="167:44">&lt;&lt;</operator> <literal type="number" pos:start="167:46" pos:end="167:47">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="169:21" pos:end="172:0"><expr pos:start="169:21" pos:end="169:39"><call pos:start="169:21" pos:end="169:39"><name pos:start="169:21" pos:end="169:35">gen_movl_T0_reg</name><argument_list pos:start="169:36" pos:end="169:39">(<argument pos:start="169:37" pos:end="169:38"><expr pos:start="169:37" pos:end="169:38"><name pos:start="169:37" pos:end="169:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="171:1" pos:end="171:18">#<cpp:directive pos:start="171:2" pos:end="171:3">if</cpp:directive> <expr pos:start="171:5" pos:end="171:18"><call pos:start="171:5" pos:end="171:18"><name pos:start="171:5" pos:end="171:11">defined</name><argument_list pos:start="171:12" pos:end="171:18">(<argument pos:start="171:13" pos:end="171:17"><expr pos:start="171:13" pos:end="171:17"><name pos:start="171:13" pos:end="171:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="175:1" pos:end="175:6">#<cpp:directive pos:start="175:2" pos:end="175:6">endif</cpp:directive></cpp:endif>

                <break pos:start="177:17" pos:end="177:22">break;</break>

            <case pos:start="179:13" pos:end="179:21">case <expr pos:start="179:18" pos:end="179:20"><literal type="number" pos:start="179:18" pos:end="179:20">0x0</literal></expr>:</case>           <comment type="block" pos:start="179:33" pos:end="179:44">/* UNIMPL */</comment>

            <default pos:start="181:13" pos:end="181:20">default:</default>

                <goto pos:start="183:17" pos:end="183:34">goto <name pos:start="183:22" pos:end="183:33">illegal_insn</name>;</goto>

            </block_content>}</block></switch>

            <break pos:start="187:13" pos:end="187:18">break;</break>

        </block_content>}</block>

        <break pos:start="191:9" pos:end="191:14">break;</break>

    <case pos:start="193:5" pos:end="193:11">case <expr pos:start="193:10" pos:end="193:10"><literal type="number" pos:start="193:10" pos:end="193:10">1</literal></expr>:</case>

        <comment type="block" pos:start="195:9" pos:end="195:16">/*CALL*/</comment> <block pos:start="195:18" pos:end="227:9">{<block_content pos:start="197:13" pos:end="225:29">

            <decl_stmt pos:start="197:13" pos:end="202:0"><decl pos:start="197:13" pos:end="197:61"><type pos:start="197:13" pos:end="197:23"><name pos:start="197:13" pos:end="197:23">target_long</name></type> <name pos:start="197:25" pos:end="197:30">target</name> <init pos:start="197:32" pos:end="197:61">= <expr pos:start="197:34" pos:end="197:61"><call pos:start="197:34" pos:end="197:56"><name pos:start="197:34" pos:end="197:43">GET_FIELDs</name><argument_list pos:start="197:44" pos:end="197:56">(<argument pos:start="197:45" pos:end="197:48"><expr pos:start="197:45" pos:end="197:48"><name pos:start="197:45" pos:end="197:48">insn</name></expr></argument>, <argument pos:start="197:51" pos:end="197:51"><expr pos:start="197:51" pos:end="197:51"><literal type="number" pos:start="197:51" pos:end="197:51">2</literal></expr></argument>, <argument pos:start="197:54" pos:end="197:55"><expr pos:start="197:54" pos:end="197:55"><literal type="number" pos:start="197:54" pos:end="197:55">31</literal></expr></argument>)</argument_list></call> <operator pos:start="197:58" pos:end="197:59">&lt;&lt;</operator> <literal type="number" pos:start="197:61" pos:end="197:61">2</literal></expr></init></decl>;</decl_stmt>



<cpp:ifdef pos:start="201:1" pos:end="201:21">#<cpp:directive pos:start="201:2" pos:end="201:6">ifdef</cpp:directive> <name pos:start="201:8" pos:end="201:21">TARGET_SPARC64</name></cpp:ifdef>

            <if_stmt pos:start="203:13" pos:end="214:0"><if pos:start="203:13" pos:end="207:13">if <condition pos:start="203:16" pos:end="203:43">(<expr pos:start="203:17" pos:end="203:42"><name pos:start="203:17" pos:end="203:22"><name pos:start="203:17" pos:end="203:18">dc</name><operator pos:start="203:19" pos:end="203:20">-&gt;</operator><name pos:start="203:21" pos:end="203:22">pc</name></name> <operator pos:start="203:24" pos:end="203:25">==</operator> <operator pos:start="203:27" pos:end="203:27">(</operator><name pos:start="203:28" pos:end="203:35">uint32_t</name><operator pos:start="203:36" pos:end="203:36">)</operator><name pos:start="203:37" pos:end="203:42"><name pos:start="203:37" pos:end="203:38">dc</name><operator pos:start="203:39" pos:end="203:40">-&gt;</operator><name pos:start="203:41" pos:end="203:42">pc</name></name></expr>)</condition> <block pos:start="203:45" pos:end="207:13">{<block_content pos:start="205:17" pos:end="205:42">

                <expr_stmt pos:start="205:17" pos:end="205:42"><expr pos:start="205:17" pos:end="205:41"><call pos:start="205:17" pos:end="205:41"><name pos:start="205:17" pos:end="205:33">gen_op_movl_T0_im</name><argument_list pos:start="205:34" pos:end="205:41">(<argument pos:start="205:35" pos:end="205:40"><expr pos:start="205:35" pos:end="205:40"><name pos:start="205:35" pos:end="205:40"><name pos:start="205:35" pos:end="205:36">dc</name><operator pos:start="205:37" pos:end="205:38">-&gt;</operator><name pos:start="205:39" pos:end="205:40">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="207:15" pos:end="214:0">else <block pos:start="207:20" pos:end="214:0">{<block_content pos:start="209:17" pos:end="209:58">

                <expr_stmt pos:start="209:17" pos:end="209:58"><expr pos:start="209:17" pos:end="209:57"><call pos:start="209:17" pos:end="209:57"><name pos:start="209:17" pos:end="209:35">gen_op_movq_T0_im64</name><argument_list pos:start="209:36" pos:end="209:57">(<argument pos:start="209:37" pos:end="209:48"><expr pos:start="209:37" pos:end="209:48"><name pos:start="209:37" pos:end="209:42"><name pos:start="209:37" pos:end="209:38">dc</name><operator pos:start="209:39" pos:end="209:40">-&gt;</operator><name pos:start="209:41" pos:end="209:42">pc</name></name> <operator pos:start="209:44" pos:end="209:45">&gt;&gt;</operator> <literal type="number" pos:start="209:47" pos:end="209:48">32</literal></expr></argument>, <argument pos:start="209:51" pos:end="209:56"><expr pos:start="209:51" pos:end="209:56"><name pos:start="209:51" pos:end="209:56"><name pos:start="209:51" pos:end="209:52">dc</name><operator pos:start="209:53" pos:end="209:54">-&gt;</operator><name pos:start="209:55" pos:end="209:56">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

<cpp:else pos:start="213:1" pos:end="213:5">#<cpp:directive pos:start="213:2" pos:end="213:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="215:13" pos:end="218:0"><expr pos:start="215:13" pos:end="215:37"><call pos:start="215:13" pos:end="215:37"><name pos:start="215:13" pos:end="215:29">gen_op_movl_T0_im</name><argument_list pos:start="215:30" pos:end="215:37">(<argument pos:start="215:31" pos:end="215:36"><expr pos:start="215:31" pos:end="215:36"><name pos:start="215:31" pos:end="215:36"><name pos:start="215:31" pos:end="215:32">dc</name><operator pos:start="215:33" pos:end="215:34">-&gt;</operator><name pos:start="215:35" pos:end="215:36">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="217:1" pos:end="217:6">#<cpp:directive pos:start="217:2" pos:end="217:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="219:13" pos:end="219:32"><expr pos:start="219:13" pos:end="219:31"><call pos:start="219:13" pos:end="219:31"><name pos:start="219:13" pos:end="219:27">gen_movl_T0_reg</name><argument_list pos:start="219:28" pos:end="219:31">(<argument pos:start="219:29" pos:end="219:30"><expr pos:start="219:29" pos:end="219:30"><literal type="number" pos:start="219:29" pos:end="219:30">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:29"><expr pos:start="221:13" pos:end="221:28"><name pos:start="221:13" pos:end="221:18">target</name> <operator pos:start="221:20" pos:end="221:21">+=</operator> <name pos:start="221:23" pos:end="221:28"><name pos:start="221:23" pos:end="221:24">dc</name><operator pos:start="221:25" pos:end="221:26">-&gt;</operator><name pos:start="221:27" pos:end="221:28">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:31"><expr pos:start="223:13" pos:end="223:30"><call pos:start="223:13" pos:end="223:30"><name pos:start="223:13" pos:end="223:26">gen_mov_pc_npc</name><argument_list pos:start="223:27" pos:end="223:30">(<argument pos:start="223:28" pos:end="223:29"><expr pos:start="223:28" pos:end="223:29"><name pos:start="223:28" pos:end="223:29">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:29"><expr pos:start="225:13" pos:end="225:28"><name pos:start="225:13" pos:end="225:19"><name pos:start="225:13" pos:end="225:14">dc</name><operator pos:start="225:15" pos:end="225:16">-&gt;</operator><name pos:start="225:17" pos:end="225:19">npc</name></name> <operator pos:start="225:21" pos:end="225:21">=</operator> <name pos:start="225:23" pos:end="225:28">target</name></expr>;</expr_stmt>

        </block_content>}</block>

        <goto pos:start="229:9" pos:end="229:22">goto <name pos:start="229:14" pos:end="229:21">jmp_insn</name>;</goto>

    <case pos:start="231:5" pos:end="231:11">case <expr pos:start="231:10" pos:end="231:10"><literal type="number" pos:start="231:10" pos:end="231:10">2</literal></expr>:</case>                     <comment type="block" pos:start="231:33" pos:end="231:62">/* FPU &amp; Logical Operations */</comment>

        <block pos:start="233:9" pos:end="3621:9">{<block_content pos:start="235:13" pos:end="3619:18">

            <decl_stmt pos:start="235:13" pos:end="235:54"><decl pos:start="235:13" pos:end="235:53"><type pos:start="235:13" pos:end="235:24"><name pos:start="235:13" pos:end="235:20">unsigned</name> <name pos:start="235:22" pos:end="235:24">int</name></type> <name pos:start="235:26" pos:end="235:28">xop</name> <init pos:start="235:30" pos:end="235:53">= <expr pos:start="235:32" pos:end="235:53"><call pos:start="235:32" pos:end="235:53"><name pos:start="235:32" pos:end="235:40">GET_FIELD</name><argument_list pos:start="235:41" pos:end="235:53">(<argument pos:start="235:42" pos:end="235:45"><expr pos:start="235:42" pos:end="235:45"><name pos:start="235:42" pos:end="235:45">insn</name></expr></argument>, <argument pos:start="235:48" pos:end="235:48"><expr pos:start="235:48" pos:end="235:48"><literal type="number" pos:start="235:48" pos:end="235:48">7</literal></expr></argument>, <argument pos:start="235:51" pos:end="235:52"><expr pos:start="235:51" pos:end="235:52"><literal type="number" pos:start="235:51" pos:end="235:52">12</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="237:13" pos:end="3617:13"><if pos:start="237:13" pos:end="345:13">if <condition pos:start="237:16" pos:end="237:28">(<expr pos:start="237:17" pos:end="237:27"><name pos:start="237:17" pos:end="237:19">xop</name> <operator pos:start="237:21" pos:end="237:22">==</operator> <literal type="number" pos:start="237:24" pos:end="237:27">0x3a</literal></expr>)</condition> <block pos:start="237:30" pos:end="345:13">{<block_content pos:start="239:17" pos:end="343:30">  <comment type="block" pos:start="237:33" pos:end="237:51">/* generate trap */</comment>

                <decl_stmt pos:start="239:17" pos:end="239:25"><decl pos:start="239:17" pos:end="239:24"><type pos:start="239:17" pos:end="239:19"><name pos:start="239:17" pos:end="239:19">int</name></type> <name pos:start="239:21" pos:end="239:24">cond</name></decl>;</decl_stmt>



                <expr_stmt pos:start="243:17" pos:end="243:46"><expr pos:start="243:17" pos:end="243:45"><name pos:start="243:17" pos:end="243:19">rs1</name> <operator pos:start="243:21" pos:end="243:21">=</operator> <call pos:start="243:23" pos:end="243:45"><name pos:start="243:23" pos:end="243:31">GET_FIELD</name><argument_list pos:start="243:32" pos:end="243:45">(<argument pos:start="243:33" pos:end="243:36"><expr pos:start="243:33" pos:end="243:36"><name pos:start="243:33" pos:end="243:36">insn</name></expr></argument>, <argument pos:start="243:39" pos:end="243:40"><expr pos:start="243:39" pos:end="243:40"><literal type="number" pos:start="243:39" pos:end="243:40">13</literal></expr></argument>, <argument pos:start="243:43" pos:end="243:44"><expr pos:start="243:43" pos:end="243:44"><literal type="number" pos:start="243:43" pos:end="243:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="245:17" pos:end="245:37"><expr pos:start="245:17" pos:end="245:36"><call pos:start="245:17" pos:end="245:36"><name pos:start="245:17" pos:end="245:31">gen_movl_reg_T0</name><argument_list pos:start="245:32" pos:end="245:36">(<argument pos:start="245:33" pos:end="245:35"><expr pos:start="245:33" pos:end="245:35"><name pos:start="245:33" pos:end="245:35">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="247:17" pos:end="287:17"><if pos:start="247:17" pos:end="267:17">if <condition pos:start="247:20" pos:end="247:27">(<expr pos:start="247:21" pos:end="247:26"><name pos:start="247:21" pos:end="247:26">IS_IMM</name></expr>)</condition> <block pos:start="247:29" pos:end="267:17">{<block_content pos:start="249:21" pos:end="266:0">

                    <expr_stmt pos:start="249:21" pos:end="252:0"><expr pos:start="249:21" pos:end="249:49"><name pos:start="249:21" pos:end="249:23">rs2</name> <operator pos:start="249:25" pos:end="249:25">=</operator> <call pos:start="249:27" pos:end="249:49"><name pos:start="249:27" pos:end="249:35">GET_FIELD</name><argument_list pos:start="249:36" pos:end="249:49">(<argument pos:start="249:37" pos:end="249:40"><expr pos:start="249:37" pos:end="249:40"><name pos:start="249:37" pos:end="249:40">insn</name></expr></argument>, <argument pos:start="249:43" pos:end="249:44"><expr pos:start="249:43" pos:end="249:44"><literal type="number" pos:start="249:43" pos:end="249:44">25</literal></expr></argument>, <argument pos:start="249:47" pos:end="249:48"><expr pos:start="249:47" pos:end="249:48"><literal type="number" pos:start="249:47" pos:end="249:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="251:1" pos:end="251:18">#<cpp:directive pos:start="251:2" pos:end="251:3">if</cpp:directive> <expr pos:start="251:5" pos:end="251:18"><call pos:start="251:5" pos:end="251:18"><name pos:start="251:5" pos:end="251:11">defined</name><argument_list pos:start="251:12" pos:end="251:18">(<argument pos:start="251:13" pos:end="251:17"><expr pos:start="251:13" pos:end="251:17"><name pos:start="251:13" pos:end="251:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                    <if_stmt pos:start="253:21" pos:end="266:0"><if pos:start="253:21" pos:end="266:0">if <condition pos:start="253:24" pos:end="253:33">(<expr pos:start="253:25" pos:end="253:32"><name pos:start="253:25" pos:end="253:27">rs2</name> <operator pos:start="253:29" pos:end="253:30">!=</operator> <literal type="number" pos:start="253:32" pos:end="253:32">0</literal></expr>)</condition> <block pos:start="253:35" pos:end="266:0">{<block_content pos:start="257:25" pos:end="262:0">

<cpp:endif pos:start="255:1" pos:end="255:6">#<cpp:directive pos:start="255:2" pos:end="255:6">endif</cpp:directive></cpp:endif>

                        <expr_stmt pos:start="257:25" pos:end="257:46"><expr pos:start="257:25" pos:end="257:45"><call pos:start="257:25" pos:end="257:45"><name pos:start="257:25" pos:end="257:40">gen_movl_simm_T1</name><argument_list pos:start="257:41" pos:end="257:45">(<argument pos:start="257:42" pos:end="257:44"><expr pos:start="257:42" pos:end="257:44"><name pos:start="257:42" pos:end="257:44">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="259:25" pos:end="262:0"><expr pos:start="259:25" pos:end="259:42"><call pos:start="259:25" pos:end="259:42"><name pos:start="259:25" pos:end="259:40">gen_op_add_T1_T0</name><argument_list pos:start="259:41" pos:end="259:42">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="261:1" pos:end="261:18">#<cpp:directive pos:start="261:2" pos:end="261:3">if</cpp:directive> <expr pos:start="261:5" pos:end="261:18"><call pos:start="261:5" pos:end="261:18"><name pos:start="261:5" pos:end="261:11">defined</name><argument_list pos:start="261:12" pos:end="261:18">(<argument pos:start="261:13" pos:end="261:17"><expr pos:start="261:13" pos:end="261:17"><name pos:start="261:13" pos:end="261:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="265:1" pos:end="265:6">#<cpp:directive pos:start="265:2" pos:end="265:6">endif</cpp:directive></cpp:endif>

                </block_content>}</block></if> <else pos:start="267:19" pos:end="287:17">else <block pos:start="267:24" pos:end="287:17">{<block_content pos:start="269:21" pos:end="286:0">

                    <expr_stmt pos:start="269:21" pos:end="272:0"><expr pos:start="269:21" pos:end="269:49"><name pos:start="269:21" pos:end="269:23">rs2</name> <operator pos:start="269:25" pos:end="269:25">=</operator> <call pos:start="269:27" pos:end="269:49"><name pos:start="269:27" pos:end="269:35">GET_FIELD</name><argument_list pos:start="269:36" pos:end="269:49">(<argument pos:start="269:37" pos:end="269:40"><expr pos:start="269:37" pos:end="269:40"><name pos:start="269:37" pos:end="269:40">insn</name></expr></argument>, <argument pos:start="269:43" pos:end="269:44"><expr pos:start="269:43" pos:end="269:44"><literal type="number" pos:start="269:43" pos:end="269:44">27</literal></expr></argument>, <argument pos:start="269:47" pos:end="269:48"><expr pos:start="269:47" pos:end="269:48"><literal type="number" pos:start="269:47" pos:end="269:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="271:1" pos:end="271:18">#<cpp:directive pos:start="271:2" pos:end="271:3">if</cpp:directive> <expr pos:start="271:5" pos:end="271:18"><call pos:start="271:5" pos:end="271:18"><name pos:start="271:5" pos:end="271:11">defined</name><argument_list pos:start="271:12" pos:end="271:18">(<argument pos:start="271:13" pos:end="271:17"><expr pos:start="271:13" pos:end="271:17"><name pos:start="271:13" pos:end="271:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                    <if_stmt pos:start="273:21" pos:end="286:0"><if pos:start="273:21" pos:end="286:0">if <condition pos:start="273:24" pos:end="273:33">(<expr pos:start="273:25" pos:end="273:32"><name pos:start="273:25" pos:end="273:27">rs2</name> <operator pos:start="273:29" pos:end="273:30">!=</operator> <literal type="number" pos:start="273:32" pos:end="273:32">0</literal></expr>)</condition> <block pos:start="273:35" pos:end="286:0">{<block_content pos:start="277:25" pos:end="282:0">

<cpp:endif pos:start="275:1" pos:end="275:6">#<cpp:directive pos:start="275:2" pos:end="275:6">endif</cpp:directive></cpp:endif>

                        <expr_stmt pos:start="277:25" pos:end="277:45"><expr pos:start="277:25" pos:end="277:44"><call pos:start="277:25" pos:end="277:44"><name pos:start="277:25" pos:end="277:39">gen_movl_reg_T1</name><argument_list pos:start="277:40" pos:end="277:44">(<argument pos:start="277:41" pos:end="277:43"><expr pos:start="277:41" pos:end="277:43"><name pos:start="277:41" pos:end="277:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="279:25" pos:end="282:0"><expr pos:start="279:25" pos:end="279:42"><call pos:start="279:25" pos:end="279:42"><name pos:start="279:25" pos:end="279:40">gen_op_add_T1_T0</name><argument_list pos:start="279:41" pos:end="279:42">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="281:1" pos:end="281:18">#<cpp:directive pos:start="281:2" pos:end="281:3">if</cpp:directive> <expr pos:start="281:5" pos:end="281:18"><call pos:start="281:5" pos:end="281:18"><name pos:start="281:5" pos:end="281:11">defined</name><argument_list pos:start="281:12" pos:end="281:18">(<argument pos:start="281:13" pos:end="281:17"><expr pos:start="281:13" pos:end="281:17"><name pos:start="281:13" pos:end="281:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="285:1" pos:end="285:6">#<cpp:directive pos:start="285:2" pos:end="285:6">endif</cpp:directive></cpp:endif>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:45"><expr pos:start="289:17" pos:end="289:44"><name pos:start="289:17" pos:end="289:20">cond</name> <operator pos:start="289:22" pos:end="289:22">=</operator> <call pos:start="289:24" pos:end="289:44"><name pos:start="289:24" pos:end="289:32">GET_FIELD</name><argument_list pos:start="289:33" pos:end="289:44">(<argument pos:start="289:34" pos:end="289:37"><expr pos:start="289:34" pos:end="289:37"><name pos:start="289:34" pos:end="289:37">insn</name></expr></argument>, <argument pos:start="289:40" pos:end="289:40"><expr pos:start="289:40" pos:end="289:40"><literal type="number" pos:start="289:40" pos:end="289:40">3</literal></expr></argument>, <argument pos:start="289:43" pos:end="289:43"><expr pos:start="289:43" pos:end="289:43"><literal type="number" pos:start="289:43" pos:end="289:43">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="291:17" pos:end="333:17"><if pos:start="291:17" pos:end="297:17">if <condition pos:start="291:20" pos:end="291:32">(<expr pos:start="291:21" pos:end="291:31"><name pos:start="291:21" pos:end="291:24">cond</name> <operator pos:start="291:26" pos:end="291:27">==</operator> <literal type="number" pos:start="291:29" pos:end="291:31">0x8</literal></expr>)</condition> <block pos:start="291:34" pos:end="297:17">{<block_content pos:start="293:21" pos:end="295:37">

                    <expr_stmt pos:start="293:21" pos:end="293:35"><expr pos:start="293:21" pos:end="293:34"><call pos:start="293:21" pos:end="293:34"><name pos:start="293:21" pos:end="293:30">save_state</name><argument_list pos:start="293:31" pos:end="293:34">(<argument pos:start="293:32" pos:end="293:33"><expr pos:start="293:32" pos:end="293:33"><name pos:start="293:32" pos:end="293:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="295:21" pos:end="295:37"><expr pos:start="295:21" pos:end="295:36"><call pos:start="295:21" pos:end="295:36"><name pos:start="295:21" pos:end="295:34">gen_op_trap_T0</name><argument_list pos:start="295:35" pos:end="295:36">()</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="297:19" pos:end="333:17">else if <condition pos:start="297:27" pos:end="297:37">(<expr pos:start="297:28" pos:end="297:36"><name pos:start="297:28" pos:end="297:31">cond</name> <operator pos:start="297:33" pos:end="297:34">!=</operator> <literal type="number" pos:start="297:36" pos:end="297:36">0</literal></expr>)</condition> <block pos:start="297:39" pos:end="333:17">{<block_content pos:start="303:21" pos:end="331:39">

<cpp:ifdef pos:start="299:1" pos:end="299:21">#<cpp:directive pos:start="299:2" pos:end="299:6">ifdef</cpp:directive> <name pos:start="299:8" pos:end="299:21">TARGET_SPARC64</name></cpp:ifdef>

                    <comment type="block" pos:start="301:21" pos:end="301:36">/* V9 icc/xcc */</comment>

                    <decl_stmt pos:start="303:21" pos:end="303:56"><decl pos:start="303:21" pos:end="303:55"><type pos:start="303:21" pos:end="303:23"><name pos:start="303:21" pos:end="303:23">int</name></type> <name pos:start="303:25" pos:end="303:26">cc</name> <init pos:start="303:28" pos:end="303:55">= <expr pos:start="303:30" pos:end="303:55"><call pos:start="303:30" pos:end="303:55"><name pos:start="303:30" pos:end="303:41">GET_FIELD_SP</name><argument_list pos:start="303:42" pos:end="303:55">(<argument pos:start="303:43" pos:end="303:46"><expr pos:start="303:43" pos:end="303:46"><name pos:start="303:43" pos:end="303:46">insn</name></expr></argument>, <argument pos:start="303:49" pos:end="303:50"><expr pos:start="303:49" pos:end="303:50"><literal type="number" pos:start="303:49" pos:end="303:50">11</literal></expr></argument>, <argument pos:start="303:53" pos:end="303:54"><expr pos:start="303:53" pos:end="303:54"><literal type="number" pos:start="303:53" pos:end="303:54">12</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="305:21" pos:end="305:33"><expr pos:start="305:21" pos:end="305:32"><call pos:start="305:21" pos:end="305:32"><name pos:start="305:21" pos:end="305:28">flush_T2</name><argument_list pos:start="305:29" pos:end="305:32">(<argument pos:start="305:30" pos:end="305:31"><expr pos:start="305:30" pos:end="305:31"><name pos:start="305:30" pos:end="305:31">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="307:21" pos:end="307:35"><expr pos:start="307:21" pos:end="307:34"><call pos:start="307:21" pos:end="307:34"><name pos:start="307:21" pos:end="307:30">save_state</name><argument_list pos:start="307:31" pos:end="307:34">(<argument pos:start="307:32" pos:end="307:33"><expr pos:start="307:32" pos:end="307:33"><name pos:start="307:32" pos:end="307:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="309:21" pos:end="322:0"><if pos:start="309:21" pos:end="311:44">if <condition pos:start="309:24" pos:end="309:32">(<expr pos:start="309:25" pos:end="309:31"><name pos:start="309:25" pos:end="309:26">cc</name> <operator pos:start="309:28" pos:end="309:29">==</operator> <literal type="number" pos:start="309:31" pos:end="309:31">0</literal></expr>)</condition><block type="pseudo" pos:start="311:25" pos:end="311:44"><block_content pos:start="311:25" pos:end="311:44">

                        <expr_stmt pos:start="311:25" pos:end="311:44"><expr pos:start="311:25" pos:end="311:43"><name pos:start="311:25" pos:end="311:41"><name pos:start="311:25" pos:end="311:32">gen_cond</name><index pos:start="311:33" pos:end="311:35">[<expr pos:start="311:34" pos:end="311:34"><literal type="number" pos:start="311:34" pos:end="311:34">0</literal></expr>]</index><index pos:start="311:36" pos:end="311:41">[<expr pos:start="311:37" pos:end="311:40"><name pos:start="311:37" pos:end="311:40">cond</name></expr>]</index></name><operator pos:start="311:42" pos:end="311:42">(</operator><operator pos:start="311:43" pos:end="311:43">)</operator></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="313:21" pos:end="315:44">else if <condition pos:start="313:29" pos:end="313:37">(<expr pos:start="313:30" pos:end="313:36"><name pos:start="313:30" pos:end="313:31">cc</name> <operator pos:start="313:33" pos:end="313:34">==</operator> <literal type="number" pos:start="313:36" pos:end="313:36">2</literal></expr>)</condition><block type="pseudo" pos:start="315:25" pos:end="315:44"><block_content pos:start="315:25" pos:end="315:44">

                        <expr_stmt pos:start="315:25" pos:end="315:44"><expr pos:start="315:25" pos:end="315:43"><name pos:start="315:25" pos:end="315:41"><name pos:start="315:25" pos:end="315:32">gen_cond</name><index pos:start="315:33" pos:end="315:35">[<expr pos:start="315:34" pos:end="315:34"><literal type="number" pos:start="315:34" pos:end="315:34">1</literal></expr>]</index><index pos:start="315:36" pos:end="315:41">[<expr pos:start="315:37" pos:end="315:40"><name pos:start="315:37" pos:end="315:40">cond</name></expr>]</index></name><operator pos:start="315:42" pos:end="315:42">(</operator><operator pos:start="315:43" pos:end="315:43">)</operator></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="317:21" pos:end="322:0">else<block type="pseudo" pos:start="319:25" pos:end="322:0"><block_content pos:start="319:25" pos:end="322:0">

                        <goto pos:start="319:25" pos:end="322:0">goto <name pos:start="319:30" pos:end="319:41">illegal_insn</name>;</goto></block_content></block></else></if_stmt>

<cpp:else pos:start="321:1" pos:end="321:5">#<cpp:directive pos:start="321:2" pos:end="321:5">else</cpp:directive></cpp:else>

                    <expr_stmt pos:start="323:21" pos:end="323:33"><expr pos:start="323:21" pos:end="323:32"><call pos:start="323:21" pos:end="323:32"><name pos:start="323:21" pos:end="323:28">flush_T2</name><argument_list pos:start="323:29" pos:end="323:32">(<argument pos:start="323:30" pos:end="323:31"><expr pos:start="323:30" pos:end="323:31"><name pos:start="323:30" pos:end="323:31">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="325:21" pos:end="325:35"><expr pos:start="325:21" pos:end="325:34"><call pos:start="325:21" pos:end="325:34"><name pos:start="325:21" pos:end="325:30">save_state</name><argument_list pos:start="325:31" pos:end="325:34">(<argument pos:start="325:32" pos:end="325:33"><expr pos:start="325:32" pos:end="325:33"><name pos:start="325:32" pos:end="325:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="327:21" pos:end="330:0"><expr pos:start="327:21" pos:end="327:39"><name pos:start="327:21" pos:end="327:37"><name pos:start="327:21" pos:end="327:28">gen_cond</name><index pos:start="327:29" pos:end="327:31">[<expr pos:start="327:30" pos:end="327:30"><literal type="number" pos:start="327:30" pos:end="327:30">0</literal></expr>]</index><index pos:start="327:32" pos:end="327:37">[<expr pos:start="327:33" pos:end="327:36"><name pos:start="327:33" pos:end="327:36">cond</name></expr>]</index></name><operator pos:start="327:38" pos:end="327:38">(</operator><operator pos:start="327:39" pos:end="327:39">)</operator></expr>;</expr_stmt>

<cpp:endif pos:start="329:1" pos:end="329:6">#<cpp:directive pos:start="329:2" pos:end="329:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="331:21" pos:end="331:39"><expr pos:start="331:21" pos:end="331:38"><call pos:start="331:21" pos:end="331:38"><name pos:start="331:21" pos:end="331:36">gen_op_trapcc_T0</name><argument_list pos:start="331:37" pos:end="331:38">()</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="335:17" pos:end="335:35"><expr pos:start="335:17" pos:end="335:34"><call pos:start="335:17" pos:end="335:34"><name pos:start="335:17" pos:end="335:32">gen_op_next_insn</name><argument_list pos:start="335:33" pos:end="335:34">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="337:17" pos:end="337:35"><expr pos:start="337:17" pos:end="337:34"><call pos:start="337:17" pos:end="337:34"><name pos:start="337:17" pos:end="337:32">gen_op_movl_T0_0</name><argument_list pos:start="337:33" pos:end="337:34">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="339:17" pos:end="339:33"><expr pos:start="339:17" pos:end="339:32"><call pos:start="339:17" pos:end="339:32"><name pos:start="339:17" pos:end="339:30">gen_op_exit_tb</name><argument_list pos:start="339:31" pos:end="339:32">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="341:17" pos:end="341:30"><expr pos:start="341:17" pos:end="341:29"><name pos:start="341:17" pos:end="341:25"><name pos:start="341:17" pos:end="341:18">dc</name><operator pos:start="341:19" pos:end="341:20">-&gt;</operator><name pos:start="341:21" pos:end="341:25">is_br</name></name> <operator pos:start="341:27" pos:end="341:27">=</operator> <literal type="number" pos:start="341:29" pos:end="341:29">1</literal></expr>;</expr_stmt>

                <goto pos:start="343:17" pos:end="343:30">goto <name pos:start="343:22" pos:end="343:29">jmp_insn</name>;</goto>

            </block_content>}</block></if> <if type="elseif" pos:start="345:15" pos:end="491:13">else if <condition pos:start="345:23" pos:end="345:35">(<expr pos:start="345:24" pos:end="345:34"><name pos:start="345:24" pos:end="345:26">xop</name> <operator pos:start="345:28" pos:end="345:29">==</operator> <literal type="number" pos:start="345:31" pos:end="345:34">0x28</literal></expr>)</condition> <block pos:start="345:37" pos:end="491:13">{<block_content pos:start="347:17" pos:end="490:0">

                <expr_stmt pos:start="347:17" pos:end="347:46"><expr pos:start="347:17" pos:end="347:45"><name pos:start="347:17" pos:end="347:19">rs1</name> <operator pos:start="347:21" pos:end="347:21">=</operator> <call pos:start="347:23" pos:end="347:45"><name pos:start="347:23" pos:end="347:31">GET_FIELD</name><argument_list pos:start="347:32" pos:end="347:45">(<argument pos:start="347:33" pos:end="347:36"><expr pos:start="347:33" pos:end="347:36"><name pos:start="347:33" pos:end="347:36">insn</name></expr></argument>, <argument pos:start="347:39" pos:end="347:40"><expr pos:start="347:39" pos:end="347:40"><literal type="number" pos:start="347:39" pos:end="347:40">13</literal></expr></argument>, <argument pos:start="347:43" pos:end="347:44"><expr pos:start="347:43" pos:end="347:44"><literal type="number" pos:start="347:43" pos:end="347:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="349:17" pos:end="490:0">switch<condition pos:start="349:23" pos:end="349:27">(<expr pos:start="349:24" pos:end="349:26"><name pos:start="349:24" pos:end="349:26">rs1</name></expr>)</condition> <block pos:start="349:29" pos:end="490:0">{<block_content pos:start="351:17" pos:end="485:38">

                <case pos:start="351:17" pos:end="354:0">case <expr pos:start="351:22" pos:end="351:22"><literal type="number" pos:start="351:22" pos:end="351:22">0</literal></expr>:</case> <comment type="block" pos:start="351:25" pos:end="351:33">/* rdy */</comment>

<cpp:ifndef pos:start="353:1" pos:end="353:22">#<cpp:directive pos:start="353:2" pos:end="353:7">ifndef</cpp:directive> <name pos:start="353:9" pos:end="353:22">TARGET_SPARC64</name></cpp:ifndef>

                <case pos:start="355:17" pos:end="355:35">case <expr pos:start="355:22" pos:end="355:34"><literal type="number" pos:start="355:22" pos:end="355:25">0x01</literal> <operator pos:start="355:27" pos:end="355:29">...</operator> <literal type="number" pos:start="355:31" pos:end="355:34">0x0e</literal></expr>:</case> <comment type="block" pos:start="355:37" pos:end="359:44">/* undefined in the SPARCv8

                                       manual, rdy on the microSPARC

                                       II */</comment>

                <case pos:start="361:17" pos:end="361:26">case <expr pos:start="361:22" pos:end="361:25"><literal type="number" pos:start="361:22" pos:end="361:25">0x0f</literal></expr>:</case>          <comment type="block" pos:start="361:37" pos:end="363:66">/* stbar in the SPARCv8 manual,

                                       rdy on the microSPARC II */</comment>

                <case pos:start="365:17" pos:end="372:0">case <expr pos:start="365:22" pos:end="365:34"><literal type="number" pos:start="365:22" pos:end="365:25">0x10</literal> <operator pos:start="365:27" pos:end="365:29">...</operator> <literal type="number" pos:start="365:31" pos:end="365:34">0x1f</literal></expr>:</case> <comment type="block" pos:start="365:37" pos:end="369:55">/* implementation-dependent in the

                                       SPARCv8 manual, rdy on the

                                       microSPARC II */</comment>

<cpp:endif pos:start="371:1" pos:end="371:6">#<cpp:directive pos:start="371:2" pos:end="371:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="373:21" pos:end="373:68"><expr pos:start="373:21" pos:end="373:67"><call pos:start="373:21" pos:end="373:67"><name pos:start="373:21" pos:end="373:39">gen_op_movtl_T0_env</name><argument_list pos:start="373:40" pos:end="373:67">(<argument pos:start="373:41" pos:end="373:66"><expr pos:start="373:41" pos:end="373:66"><call pos:start="373:41" pos:end="373:66"><name pos:start="373:41" pos:end="373:48">offsetof</name><argument_list pos:start="373:49" pos:end="373:66">(<argument pos:start="373:50" pos:end="373:62"><expr pos:start="373:50" pos:end="373:62"><name pos:start="373:50" pos:end="373:62">CPUSPARCState</name></expr></argument>, <argument pos:start="373:65" pos:end="373:65"><expr pos:start="373:65" pos:end="373:65"><name pos:start="373:65" pos:end="373:65">y</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="375:21" pos:end="375:40"><expr pos:start="375:21" pos:end="375:39"><call pos:start="375:21" pos:end="375:39"><name pos:start="375:21" pos:end="375:35">gen_movl_T0_reg</name><argument_list pos:start="375:36" pos:end="375:39">(<argument pos:start="375:37" pos:end="375:38"><expr pos:start="375:37" pos:end="375:38"><name pos:start="375:37" pos:end="375:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="377:21" pos:end="380:0">break;</break>

<cpp:ifdef pos:start="379:1" pos:end="379:21">#<cpp:directive pos:start="379:2" pos:end="379:6">ifdef</cpp:directive> <name pos:start="379:8" pos:end="379:21">TARGET_SPARC64</name></cpp:ifdef>

                <case pos:start="381:17" pos:end="381:25">case <expr pos:start="381:22" pos:end="381:24"><literal type="number" pos:start="381:22" pos:end="381:24">0x2</literal></expr>:</case> <comment type="block" pos:start="381:27" pos:end="381:40">/* V9 rdccr */</comment>

                    <expr_stmt pos:start="383:21" pos:end="383:35"><expr pos:start="383:21" pos:end="383:34"><call pos:start="383:21" pos:end="383:34"><name pos:start="383:21" pos:end="383:32">gen_op_rdccr</name><argument_list pos:start="383:33" pos:end="383:34">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="385:21" pos:end="385:40"><expr pos:start="385:21" pos:end="385:39"><call pos:start="385:21" pos:end="385:39"><name pos:start="385:21" pos:end="385:35">gen_movl_T0_reg</name><argument_list pos:start="385:36" pos:end="385:39">(<argument pos:start="385:37" pos:end="385:38"><expr pos:start="385:37" pos:end="385:38"><name pos:start="385:37" pos:end="385:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="387:21" pos:end="387:26">break;</break>

                <case pos:start="389:17" pos:end="389:25">case <expr pos:start="389:22" pos:end="389:24"><literal type="number" pos:start="389:22" pos:end="389:24">0x3</literal></expr>:</case> <comment type="block" pos:start="389:27" pos:end="389:40">/* V9 rdasi */</comment>

                    <expr_stmt pos:start="391:21" pos:end="391:69"><expr pos:start="391:21" pos:end="391:68"><call pos:start="391:21" pos:end="391:68"><name pos:start="391:21" pos:end="391:38">gen_op_movl_T0_env</name><argument_list pos:start="391:39" pos:end="391:68">(<argument pos:start="391:40" pos:end="391:67"><expr pos:start="391:40" pos:end="391:67"><call pos:start="391:40" pos:end="391:67"><name pos:start="391:40" pos:end="391:47">offsetof</name><argument_list pos:start="391:48" pos:end="391:67">(<argument pos:start="391:49" pos:end="391:61"><expr pos:start="391:49" pos:end="391:61"><name pos:start="391:49" pos:end="391:61">CPUSPARCState</name></expr></argument>, <argument pos:start="391:64" pos:end="391:66"><expr pos:start="391:64" pos:end="391:66"><name pos:start="391:64" pos:end="391:66">asi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="393:21" pos:end="393:40"><expr pos:start="393:21" pos:end="393:39"><call pos:start="393:21" pos:end="393:39"><name pos:start="393:21" pos:end="393:35">gen_movl_T0_reg</name><argument_list pos:start="393:36" pos:end="393:39">(<argument pos:start="393:37" pos:end="393:38"><expr pos:start="393:37" pos:end="393:38"><name pos:start="393:37" pos:end="393:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="395:21" pos:end="395:26">break;</break>

                <case pos:start="397:17" pos:end="397:25">case <expr pos:start="397:22" pos:end="397:24"><literal type="number" pos:start="397:22" pos:end="397:24">0x4</literal></expr>:</case> <comment type="block" pos:start="397:27" pos:end="397:41">/* V9 rdtick */</comment>

                    <expr_stmt pos:start="399:21" pos:end="399:36"><expr pos:start="399:21" pos:end="399:35"><call pos:start="399:21" pos:end="399:35"><name pos:start="399:21" pos:end="399:33">gen_op_rdtick</name><argument_list pos:start="399:34" pos:end="399:35">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="401:21" pos:end="401:40"><expr pos:start="401:21" pos:end="401:39"><call pos:start="401:21" pos:end="401:39"><name pos:start="401:21" pos:end="401:35">gen_movl_T0_reg</name><argument_list pos:start="401:36" pos:end="401:39">(<argument pos:start="401:37" pos:end="401:38"><expr pos:start="401:37" pos:end="401:38"><name pos:start="401:37" pos:end="401:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="403:21" pos:end="403:26">break;</break>

                <case pos:start="405:17" pos:end="405:25">case <expr pos:start="405:22" pos:end="405:24"><literal type="number" pos:start="405:22" pos:end="405:24">0x5</literal></expr>:</case> <comment type="block" pos:start="405:27" pos:end="405:39">/* V9 rdpc */</comment>

                    <if_stmt pos:start="407:21" pos:end="415:21"><if pos:start="407:21" pos:end="411:21">if <condition pos:start="407:24" pos:end="407:51">(<expr pos:start="407:25" pos:end="407:50"><name pos:start="407:25" pos:end="407:30"><name pos:start="407:25" pos:end="407:26">dc</name><operator pos:start="407:27" pos:end="407:28">-&gt;</operator><name pos:start="407:29" pos:end="407:30">pc</name></name> <operator pos:start="407:32" pos:end="407:33">==</operator> <operator pos:start="407:35" pos:end="407:35">(</operator><name pos:start="407:36" pos:end="407:43">uint32_t</name><operator pos:start="407:44" pos:end="407:44">)</operator><name pos:start="407:45" pos:end="407:50"><name pos:start="407:45" pos:end="407:46">dc</name><operator pos:start="407:47" pos:end="407:48">-&gt;</operator><name pos:start="407:49" pos:end="407:50">pc</name></name></expr>)</condition> <block pos:start="407:53" pos:end="411:21">{<block_content pos:start="409:25" pos:end="409:50">

                        <expr_stmt pos:start="409:25" pos:end="409:50"><expr pos:start="409:25" pos:end="409:49"><call pos:start="409:25" pos:end="409:49"><name pos:start="409:25" pos:end="409:41">gen_op_movl_T0_im</name><argument_list pos:start="409:42" pos:end="409:49">(<argument pos:start="409:43" pos:end="409:48"><expr pos:start="409:43" pos:end="409:48"><name pos:start="409:43" pos:end="409:48"><name pos:start="409:43" pos:end="409:44">dc</name><operator pos:start="409:45" pos:end="409:46">-&gt;</operator><name pos:start="409:47" pos:end="409:48">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="411:23" pos:end="415:21">else <block pos:start="411:28" pos:end="415:21">{<block_content pos:start="413:25" pos:end="413:66">

                        <expr_stmt pos:start="413:25" pos:end="413:66"><expr pos:start="413:25" pos:end="413:65"><call pos:start="413:25" pos:end="413:65"><name pos:start="413:25" pos:end="413:43">gen_op_movq_T0_im64</name><argument_list pos:start="413:44" pos:end="413:65">(<argument pos:start="413:45" pos:end="413:56"><expr pos:start="413:45" pos:end="413:56"><name pos:start="413:45" pos:end="413:50"><name pos:start="413:45" pos:end="413:46">dc</name><operator pos:start="413:47" pos:end="413:48">-&gt;</operator><name pos:start="413:49" pos:end="413:50">pc</name></name> <operator pos:start="413:52" pos:end="413:53">&gt;&gt;</operator> <literal type="number" pos:start="413:55" pos:end="413:56">32</literal></expr></argument>, <argument pos:start="413:59" pos:end="413:64"><expr pos:start="413:59" pos:end="413:64"><name pos:start="413:59" pos:end="413:64"><name pos:start="413:59" pos:end="413:60">dc</name><operator pos:start="413:61" pos:end="413:62">-&gt;</operator><name pos:start="413:63" pos:end="413:64">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="417:21" pos:end="417:40"><expr pos:start="417:21" pos:end="417:39"><call pos:start="417:21" pos:end="417:39"><name pos:start="417:21" pos:end="417:35">gen_movl_T0_reg</name><argument_list pos:start="417:36" pos:end="417:39">(<argument pos:start="417:37" pos:end="417:38"><expr pos:start="417:37" pos:end="417:38"><name pos:start="417:37" pos:end="417:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="419:21" pos:end="419:26">break;</break>

                <case pos:start="421:17" pos:end="421:25">case <expr pos:start="421:22" pos:end="421:24"><literal type="number" pos:start="421:22" pos:end="421:24">0x6</literal></expr>:</case> <comment type="block" pos:start="421:27" pos:end="421:41">/* V9 rdfprs */</comment>

                    <expr_stmt pos:start="423:21" pos:end="423:70"><expr pos:start="423:21" pos:end="423:69"><call pos:start="423:21" pos:end="423:69"><name pos:start="423:21" pos:end="423:38">gen_op_movl_T0_env</name><argument_list pos:start="423:39" pos:end="423:69">(<argument pos:start="423:40" pos:end="423:68"><expr pos:start="423:40" pos:end="423:68"><call pos:start="423:40" pos:end="423:68"><name pos:start="423:40" pos:end="423:47">offsetof</name><argument_list pos:start="423:48" pos:end="423:68">(<argument pos:start="423:49" pos:end="423:61"><expr pos:start="423:49" pos:end="423:61"><name pos:start="423:49" pos:end="423:61">CPUSPARCState</name></expr></argument>, <argument pos:start="423:64" pos:end="423:67"><expr pos:start="423:64" pos:end="423:67"><name pos:start="423:64" pos:end="423:67">fprs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="425:21" pos:end="425:40"><expr pos:start="425:21" pos:end="425:39"><call pos:start="425:21" pos:end="425:39"><name pos:start="425:21" pos:end="425:35">gen_movl_T0_reg</name><argument_list pos:start="425:36" pos:end="425:39">(<argument pos:start="425:37" pos:end="425:38"><expr pos:start="425:37" pos:end="425:38"><name pos:start="425:37" pos:end="425:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="427:21" pos:end="427:26">break;</break>

                <case pos:start="429:17" pos:end="429:25">case <expr pos:start="429:22" pos:end="429:24"><literal type="number" pos:start="429:22" pos:end="429:24">0xf</literal></expr>:</case> <comment type="block" pos:start="429:27" pos:end="429:41">/* V9 membar */</comment>

                    <break pos:start="431:21" pos:end="431:26">break;</break> <comment type="block" pos:start="431:28" pos:end="431:42">/* no effect */</comment>

                <case pos:start="433:17" pos:end="433:26">case <expr pos:start="433:22" pos:end="433:25"><literal type="number" pos:start="433:22" pos:end="433:25">0x13</literal></expr>:</case> <comment type="block" pos:start="433:28" pos:end="433:48">/* Graphics Status */</comment>

                    <if_stmt pos:start="435:21" pos:end="437:38"><if pos:start="435:21" pos:end="437:38">if <condition pos:start="435:24" pos:end="435:45">(<expr pos:start="435:25" pos:end="435:44"><call pos:start="435:25" pos:end="435:44"><name pos:start="435:25" pos:end="435:40">gen_trap_ifnofpu</name><argument_list pos:start="435:41" pos:end="435:44">(<argument pos:start="435:42" pos:end="435:43"><expr pos:start="435:42" pos:end="435:43"><name pos:start="435:42" pos:end="435:43">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="437:25" pos:end="437:38"><block_content pos:start="437:25" pos:end="437:38">

                        <goto pos:start="437:25" pos:end="437:38">goto <name pos:start="437:30" pos:end="437:37">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="439:21" pos:end="439:70"><expr pos:start="439:21" pos:end="439:69"><call pos:start="439:21" pos:end="439:69"><name pos:start="439:21" pos:end="439:39">gen_op_movtl_T0_env</name><argument_list pos:start="439:40" pos:end="439:69">(<argument pos:start="439:41" pos:end="439:68"><expr pos:start="439:41" pos:end="439:68"><call pos:start="439:41" pos:end="439:68"><name pos:start="439:41" pos:end="439:48">offsetof</name><argument_list pos:start="439:49" pos:end="439:68">(<argument pos:start="439:50" pos:end="439:62"><expr pos:start="439:50" pos:end="439:62"><name pos:start="439:50" pos:end="439:62">CPUSPARCState</name></expr></argument>, <argument pos:start="439:65" pos:end="439:67"><expr pos:start="439:65" pos:end="439:67"><name pos:start="439:65" pos:end="439:67">gsr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="441:21" pos:end="441:40"><expr pos:start="441:21" pos:end="441:39"><call pos:start="441:21" pos:end="441:39"><name pos:start="441:21" pos:end="441:35">gen_movl_T0_reg</name><argument_list pos:start="441:36" pos:end="441:39">(<argument pos:start="441:37" pos:end="441:38"><expr pos:start="441:37" pos:end="441:38"><name pos:start="441:37" pos:end="441:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="443:21" pos:end="443:26">break;</break>

                <case pos:start="445:17" pos:end="445:26">case <expr pos:start="445:22" pos:end="445:25"><literal type="number" pos:start="445:22" pos:end="445:25">0x17</literal></expr>:</case> <comment type="block" pos:start="445:28" pos:end="445:45">/* Tick compare */</comment>

                    <expr_stmt pos:start="447:21" pos:end="447:76"><expr pos:start="447:21" pos:end="447:75"><call pos:start="447:21" pos:end="447:75"><name pos:start="447:21" pos:end="447:39">gen_op_movtl_T0_env</name><argument_list pos:start="447:40" pos:end="447:75">(<argument pos:start="447:41" pos:end="447:74"><expr pos:start="447:41" pos:end="447:74"><call pos:start="447:41" pos:end="447:74"><name pos:start="447:41" pos:end="447:48">offsetof</name><argument_list pos:start="447:49" pos:end="447:74">(<argument pos:start="447:50" pos:end="447:62"><expr pos:start="447:50" pos:end="447:62"><name pos:start="447:50" pos:end="447:62">CPUSPARCState</name></expr></argument>, <argument pos:start="447:65" pos:end="447:73"><expr pos:start="447:65" pos:end="447:73"><name pos:start="447:65" pos:end="447:73">tick_cmpr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="449:21" pos:end="449:40"><expr pos:start="449:21" pos:end="449:39"><call pos:start="449:21" pos:end="449:39"><name pos:start="449:21" pos:end="449:35">gen_movl_T0_reg</name><argument_list pos:start="449:36" pos:end="449:39">(<argument pos:start="449:37" pos:end="449:38"><expr pos:start="449:37" pos:end="449:38"><name pos:start="449:37" pos:end="449:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="451:21" pos:end="451:26">break;</break>

                <case pos:start="453:17" pos:end="453:26">case <expr pos:start="453:22" pos:end="453:25"><literal type="number" pos:start="453:22" pos:end="453:25">0x18</literal></expr>:</case> <comment type="block" pos:start="453:28" pos:end="453:44">/* System tick */</comment>

                    <expr_stmt pos:start="455:21" pos:end="455:37"><expr pos:start="455:21" pos:end="455:36"><call pos:start="455:21" pos:end="455:36"><name pos:start="455:21" pos:end="455:34">gen_op_rdstick</name><argument_list pos:start="455:35" pos:end="455:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="457:21" pos:end="457:40"><expr pos:start="457:21" pos:end="457:39"><call pos:start="457:21" pos:end="457:39"><name pos:start="457:21" pos:end="457:35">gen_movl_T0_reg</name><argument_list pos:start="457:36" pos:end="457:39">(<argument pos:start="457:37" pos:end="457:38"><expr pos:start="457:37" pos:end="457:38"><name pos:start="457:37" pos:end="457:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="459:21" pos:end="459:26">break;</break>

                <case pos:start="461:17" pos:end="461:26">case <expr pos:start="461:22" pos:end="461:25"><literal type="number" pos:start="461:22" pos:end="461:25">0x19</literal></expr>:</case> <comment type="block" pos:start="461:28" pos:end="461:52">/* System tick compare */</comment>

                    <expr_stmt pos:start="463:21" pos:end="463:77"><expr pos:start="463:21" pos:end="463:76"><call pos:start="463:21" pos:end="463:76"><name pos:start="463:21" pos:end="463:39">gen_op_movtl_T0_env</name><argument_list pos:start="463:40" pos:end="463:76">(<argument pos:start="463:41" pos:end="463:75"><expr pos:start="463:41" pos:end="463:75"><call pos:start="463:41" pos:end="463:75"><name pos:start="463:41" pos:end="463:48">offsetof</name><argument_list pos:start="463:49" pos:end="463:75">(<argument pos:start="463:50" pos:end="463:62"><expr pos:start="463:50" pos:end="463:62"><name pos:start="463:50" pos:end="463:62">CPUSPARCState</name></expr></argument>, <argument pos:start="463:65" pos:end="463:74"><expr pos:start="463:65" pos:end="463:74"><name pos:start="463:65" pos:end="463:74">stick_cmpr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="465:21" pos:end="465:40"><expr pos:start="465:21" pos:end="465:39"><call pos:start="465:21" pos:end="465:39"><name pos:start="465:21" pos:end="465:35">gen_movl_T0_reg</name><argument_list pos:start="465:36" pos:end="465:39">(<argument pos:start="465:37" pos:end="465:38"><expr pos:start="465:37" pos:end="465:38"><name pos:start="465:37" pos:end="465:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="467:21" pos:end="467:26">break;</break>

                <case pos:start="469:17" pos:end="469:26">case <expr pos:start="469:22" pos:end="469:25"><literal type="number" pos:start="469:22" pos:end="469:25">0x10</literal></expr>:</case> <comment type="block" pos:start="469:28" pos:end="469:52">/* Performance Control */</comment>

                <case pos:start="471:17" pos:end="471:26">case <expr pos:start="471:22" pos:end="471:25"><literal type="number" pos:start="471:22" pos:end="471:25">0x11</literal></expr>:</case> <comment type="block" pos:start="471:28" pos:end="471:68">/* Performance Instrumentation Counter */</comment>

                <case pos:start="473:17" pos:end="473:26">case <expr pos:start="473:22" pos:end="473:25"><literal type="number" pos:start="473:22" pos:end="473:25">0x12</literal></expr>:</case> <comment type="block" pos:start="473:28" pos:end="473:49">/* Dispatch Control */</comment>

                <case pos:start="475:17" pos:end="475:26">case <expr pos:start="475:22" pos:end="475:25"><literal type="number" pos:start="475:22" pos:end="475:25">0x14</literal></expr>:</case> <comment type="block" pos:start="475:28" pos:end="475:48">/* Softint set, WO */</comment>

                <case pos:start="477:17" pos:end="477:26">case <expr pos:start="477:22" pos:end="477:25"><literal type="number" pos:start="477:22" pos:end="477:25">0x15</literal></expr>:</case> <comment type="block" pos:start="477:28" pos:end="477:50">/* Softint clear, WO */</comment>

                <case pos:start="479:17" pos:end="482:0">case <expr pos:start="479:22" pos:end="479:25"><literal type="number" pos:start="479:22" pos:end="479:25">0x16</literal></expr>:</case> <comment type="block" pos:start="479:28" pos:end="479:46">/* Softint write */</comment>

<cpp:endif pos:start="481:1" pos:end="481:6">#<cpp:directive pos:start="481:2" pos:end="481:6">endif</cpp:directive></cpp:endif>

                <default pos:start="483:17" pos:end="483:24">default:</default>

                    <goto pos:start="485:21" pos:end="485:38">goto <name pos:start="485:26" pos:end="485:37">illegal_insn</name>;</goto>

                </block_content>}</block></switch>

<cpp:if pos:start="489:1" pos:end="489:30">#<cpp:directive pos:start="489:2" pos:end="489:3">if</cpp:directive> <expr pos:start="489:5" pos:end="489:30"><operator pos:start="489:5" pos:end="489:5">!</operator><call pos:start="489:6" pos:end="489:30"><name pos:start="489:6" pos:end="489:12">defined</name><argument_list pos:start="489:13" pos:end="489:30">(<argument pos:start="489:14" pos:end="489:29"><expr pos:start="489:14" pos:end="489:29"><name pos:start="489:14" pos:end="489:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

            </block_content>}</block></if> <if type="elseif" pos:start="491:15" pos:end="559:13">else if <condition pos:start="491:23" pos:end="491:35">(<expr pos:start="491:24" pos:end="491:34"><name pos:start="491:24" pos:end="491:26">xop</name> <operator pos:start="491:28" pos:end="491:29">==</operator> <literal type="number" pos:start="491:31" pos:end="491:34">0x29</literal></expr>)</condition> <block pos:start="491:37" pos:end="559:13">{<block_content pos:start="495:17" pos:end="557:22"> <comment type="block" pos:start="491:39" pos:end="491:64">/* rdpsr / UA2005 rdhpr */</comment>

<cpp:ifndef pos:start="493:1" pos:end="493:22">#<cpp:directive pos:start="493:2" pos:end="493:7">ifndef</cpp:directive> <name pos:start="493:9" pos:end="493:22">TARGET_SPARC64</name></cpp:ifndef>

                <if_stmt pos:start="495:17" pos:end="497:35"><if pos:start="495:17" pos:end="497:35">if <condition pos:start="495:20" pos:end="495:36">(<expr pos:start="495:21" pos:end="495:35"><operator pos:start="495:21" pos:end="495:21">!</operator><call pos:start="495:22" pos:end="495:35"><name pos:start="495:22" pos:end="495:31">supervisor</name><argument_list pos:start="495:32" pos:end="495:35">(<argument pos:start="495:33" pos:end="495:34"><expr pos:start="495:33" pos:end="495:34"><name pos:start="495:33" pos:end="495:34">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="497:21" pos:end="497:35"><block_content pos:start="497:21" pos:end="497:35">

                    <goto pos:start="497:21" pos:end="497:35">goto <name pos:start="497:26" pos:end="497:34">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="499:17" pos:end="502:0"><expr pos:start="499:17" pos:end="499:30"><call pos:start="499:17" pos:end="499:30"><name pos:start="499:17" pos:end="499:28">gen_op_rdpsr</name><argument_list pos:start="499:29" pos:end="499:30">()</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="501:1" pos:end="501:5">#<cpp:directive pos:start="501:2" pos:end="501:5">else</cpp:directive></cpp:else>

                <if_stmt pos:start="503:17" pos:end="505:35"><if pos:start="503:17" pos:end="505:35">if <condition pos:start="503:20" pos:end="503:36">(<expr pos:start="503:21" pos:end="503:35"><operator pos:start="503:21" pos:end="503:21">!</operator><call pos:start="503:22" pos:end="503:35"><name pos:start="503:22" pos:end="503:31">hypervisor</name><argument_list pos:start="503:32" pos:end="503:35">(<argument pos:start="503:33" pos:end="503:34"><expr pos:start="503:33" pos:end="503:34"><name pos:start="503:33" pos:end="503:34">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="505:21" pos:end="505:35"><block_content pos:start="505:21" pos:end="505:35">

                    <goto pos:start="505:21" pos:end="505:35">goto <name pos:start="505:26" pos:end="505:34">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="507:17" pos:end="507:46"><expr pos:start="507:17" pos:end="507:45"><name pos:start="507:17" pos:end="507:19">rs1</name> <operator pos:start="507:21" pos:end="507:21">=</operator> <call pos:start="507:23" pos:end="507:45"><name pos:start="507:23" pos:end="507:31">GET_FIELD</name><argument_list pos:start="507:32" pos:end="507:45">(<argument pos:start="507:33" pos:end="507:36"><expr pos:start="507:33" pos:end="507:36"><name pos:start="507:33" pos:end="507:36">insn</name></expr></argument>, <argument pos:start="507:39" pos:end="507:40"><expr pos:start="507:39" pos:end="507:40"><literal type="number" pos:start="507:39" pos:end="507:40">13</literal></expr></argument>, <argument pos:start="507:43" pos:end="507:44"><expr pos:start="507:43" pos:end="507:44"><literal type="number" pos:start="507:43" pos:end="507:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="509:17" pos:end="554:0">switch <condition pos:start="509:24" pos:end="509:28">(<expr pos:start="509:25" pos:end="509:27"><name pos:start="509:25" pos:end="509:27">rs1</name></expr>)</condition> <block pos:start="509:30" pos:end="554:0">{<block_content pos:start="511:17" pos:end="549:38">

                <case pos:start="511:17" pos:end="511:23">case <expr pos:start="511:22" pos:end="511:22"><literal type="number" pos:start="511:22" pos:end="511:22">0</literal></expr>:</case> <comment type="line" pos:start="511:25" pos:end="511:34">// hpstate</comment>

                    <comment type="line" pos:start="513:21" pos:end="513:42">// gen_op_rdhpstate();</comment>

                    <break pos:start="515:21" pos:end="515:26">break;</break>

                <case pos:start="517:17" pos:end="517:23">case <expr pos:start="517:22" pos:end="517:22"><literal type="number" pos:start="517:22" pos:end="517:22">1</literal></expr>:</case> <comment type="line" pos:start="517:25" pos:end="517:34">// htstate</comment>

                    <comment type="line" pos:start="519:21" pos:end="519:42">// gen_op_rdhtstate();</comment>

                    <break pos:start="521:21" pos:end="521:26">break;</break>

                <case pos:start="523:17" pos:end="523:23">case <expr pos:start="523:22" pos:end="523:22"><literal type="number" pos:start="523:22" pos:end="523:22">3</literal></expr>:</case> <comment type="line" pos:start="523:25" pos:end="523:32">// hintp</comment>

                    <expr_stmt pos:start="525:21" pos:end="525:71"><expr pos:start="525:21" pos:end="525:70"><call pos:start="525:21" pos:end="525:70"><name pos:start="525:21" pos:end="525:38">gen_op_movl_T0_env</name><argument_list pos:start="525:39" pos:end="525:70">(<argument pos:start="525:40" pos:end="525:69"><expr pos:start="525:40" pos:end="525:69"><call pos:start="525:40" pos:end="525:69"><name pos:start="525:40" pos:end="525:47">offsetof</name><argument_list pos:start="525:48" pos:end="525:69">(<argument pos:start="525:49" pos:end="525:61"><expr pos:start="525:49" pos:end="525:61"><name pos:start="525:49" pos:end="525:61">CPUSPARCState</name></expr></argument>, <argument pos:start="525:64" pos:end="525:68"><expr pos:start="525:64" pos:end="525:68"><name pos:start="525:64" pos:end="525:68">hintp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="527:21" pos:end="527:26">break;</break>

                <case pos:start="529:17" pos:end="529:23">case <expr pos:start="529:22" pos:end="529:22"><literal type="number" pos:start="529:22" pos:end="529:22">5</literal></expr>:</case> <comment type="line" pos:start="529:25" pos:end="529:31">// htba</comment>

                    <expr_stmt pos:start="531:21" pos:end="531:70"><expr pos:start="531:21" pos:end="531:69"><call pos:start="531:21" pos:end="531:69"><name pos:start="531:21" pos:end="531:38">gen_op_movl_T0_env</name><argument_list pos:start="531:39" pos:end="531:69">(<argument pos:start="531:40" pos:end="531:68"><expr pos:start="531:40" pos:end="531:68"><call pos:start="531:40" pos:end="531:68"><name pos:start="531:40" pos:end="531:47">offsetof</name><argument_list pos:start="531:48" pos:end="531:68">(<argument pos:start="531:49" pos:end="531:61"><expr pos:start="531:49" pos:end="531:61"><name pos:start="531:49" pos:end="531:61">CPUSPARCState</name></expr></argument>, <argument pos:start="531:64" pos:end="531:67"><expr pos:start="531:64" pos:end="531:67"><name pos:start="531:64" pos:end="531:67">htba</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="533:21" pos:end="533:26">break;</break>

                <case pos:start="535:17" pos:end="535:23">case <expr pos:start="535:22" pos:end="535:22"><literal type="number" pos:start="535:22" pos:end="535:22">6</literal></expr>:</case> <comment type="line" pos:start="535:25" pos:end="535:31">// hver</comment>

                    <expr_stmt pos:start="537:21" pos:end="537:70"><expr pos:start="537:21" pos:end="537:69"><call pos:start="537:21" pos:end="537:69"><name pos:start="537:21" pos:end="537:38">gen_op_movl_T0_env</name><argument_list pos:start="537:39" pos:end="537:69">(<argument pos:start="537:40" pos:end="537:68"><expr pos:start="537:40" pos:end="537:68"><call pos:start="537:40" pos:end="537:68"><name pos:start="537:40" pos:end="537:47">offsetof</name><argument_list pos:start="537:48" pos:end="537:68">(<argument pos:start="537:49" pos:end="537:61"><expr pos:start="537:49" pos:end="537:61"><name pos:start="537:49" pos:end="537:61">CPUSPARCState</name></expr></argument>, <argument pos:start="537:64" pos:end="537:67"><expr pos:start="537:64" pos:end="537:67"><name pos:start="537:64" pos:end="537:67">hver</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="539:21" pos:end="539:26">break;</break>

                <case pos:start="541:17" pos:end="541:24">case <expr pos:start="541:22" pos:end="541:23"><literal type="number" pos:start="541:22" pos:end="541:23">31</literal></expr>:</case> <comment type="line" pos:start="541:26" pos:end="541:39">// hstick_cmpr</comment>

                    <expr_stmt pos:start="543:21" pos:end="543:77"><expr pos:start="543:21" pos:end="543:76"><call pos:start="543:21" pos:end="543:76"><name pos:start="543:21" pos:end="543:38">gen_op_movl_env_T0</name><argument_list pos:start="543:39" pos:end="543:76">(<argument pos:start="543:40" pos:end="543:75"><expr pos:start="543:40" pos:end="543:75"><call pos:start="543:40" pos:end="543:75"><name pos:start="543:40" pos:end="543:47">offsetof</name><argument_list pos:start="543:48" pos:end="543:75">(<argument pos:start="543:49" pos:end="543:61"><expr pos:start="543:49" pos:end="543:61"><name pos:start="543:49" pos:end="543:61">CPUSPARCState</name></expr></argument>, <argument pos:start="543:64" pos:end="543:74"><expr pos:start="543:64" pos:end="543:74"><name pos:start="543:64" pos:end="543:74">hstick_cmpr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="545:21" pos:end="545:26">break;</break>

                <default pos:start="547:17" pos:end="547:24">default:</default>

                    <goto pos:start="549:21" pos:end="549:38">goto <name pos:start="549:26" pos:end="549:37">illegal_insn</name>;</goto>

                </block_content>}</block></switch>

<cpp:endif pos:start="553:1" pos:end="553:6">#<cpp:directive pos:start="553:2" pos:end="553:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="555:17" pos:end="555:36"><expr pos:start="555:17" pos:end="555:35"><call pos:start="555:17" pos:end="555:35"><name pos:start="555:17" pos:end="555:31">gen_movl_T0_reg</name><argument_list pos:start="555:32" pos:end="555:35">(<argument pos:start="555:33" pos:end="555:34"><expr pos:start="555:33" pos:end="555:34"><name pos:start="555:33" pos:end="555:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="557:17" pos:end="557:22">break;</break>

            </block_content>}</block></if> <if type="elseif" pos:start="559:15" pos:end="701:13">else if <condition pos:start="559:23" pos:end="559:35">(<expr pos:start="559:24" pos:end="559:34"><name pos:start="559:24" pos:end="559:26">xop</name> <operator pos:start="559:28" pos:end="559:29">==</operator> <literal type="number" pos:start="559:31" pos:end="559:34">0x2a</literal></expr>)</condition> <block pos:start="559:37" pos:end="701:13">{<block_content pos:start="561:17" pos:end="699:22"> <comment type="block" pos:start="559:39" pos:end="559:59">/* rdwim / V9 rdpr */</comment>

                <if_stmt pos:start="561:17" pos:end="566:0"><if pos:start="561:17" pos:end="566:0">if <condition pos:start="561:20" pos:end="561:36">(<expr pos:start="561:21" pos:end="561:35"><operator pos:start="561:21" pos:end="561:21">!</operator><call pos:start="561:22" pos:end="561:35"><name pos:start="561:22" pos:end="561:31">supervisor</name><argument_list pos:start="561:32" pos:end="561:35">(<argument pos:start="561:33" pos:end="561:34"><expr pos:start="561:33" pos:end="561:34"><name pos:start="561:33" pos:end="561:34">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="563:21" pos:end="566:0"><block_content pos:start="563:21" pos:end="566:0">

                    <goto pos:start="563:21" pos:end="566:0">goto <name pos:start="563:26" pos:end="563:34">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="565:1" pos:end="565:21">#<cpp:directive pos:start="565:2" pos:end="565:6">ifdef</cpp:directive> <name pos:start="565:8" pos:end="565:21">TARGET_SPARC64</name></cpp:ifdef>

                <expr_stmt pos:start="567:17" pos:end="567:46"><expr pos:start="567:17" pos:end="567:45"><name pos:start="567:17" pos:end="567:19">rs1</name> <operator pos:start="567:21" pos:end="567:21">=</operator> <call pos:start="567:23" pos:end="567:45"><name pos:start="567:23" pos:end="567:31">GET_FIELD</name><argument_list pos:start="567:32" pos:end="567:45">(<argument pos:start="567:33" pos:end="567:36"><expr pos:start="567:33" pos:end="567:36"><name pos:start="567:33" pos:end="567:36">insn</name></expr></argument>, <argument pos:start="567:39" pos:end="567:40"><expr pos:start="567:39" pos:end="567:40"><literal type="number" pos:start="567:39" pos:end="567:40">13</literal></expr></argument>, <argument pos:start="567:43" pos:end="567:44"><expr pos:start="567:43" pos:end="567:44"><literal type="number" pos:start="567:43" pos:end="567:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="569:17" pos:end="692:0">switch <condition pos:start="569:24" pos:end="569:28">(<expr pos:start="569:25" pos:end="569:27"><name pos:start="569:25" pos:end="569:27">rs1</name></expr>)</condition> <block pos:start="569:30" pos:end="692:0">{<block_content pos:start="571:17" pos:end="687:38">

                <case pos:start="571:17" pos:end="571:23">case <expr pos:start="571:22" pos:end="571:22"><literal type="number" pos:start="571:22" pos:end="571:22">0</literal></expr>:</case> <comment type="line" pos:start="571:25" pos:end="571:30">// tpc</comment>

                    <expr_stmt pos:start="573:21" pos:end="573:35"><expr pos:start="573:21" pos:end="573:34"><call pos:start="573:21" pos:end="573:34"><name pos:start="573:21" pos:end="573:32">gen_op_rdtpc</name><argument_list pos:start="573:33" pos:end="573:34">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="575:21" pos:end="575:26">break;</break>

                <case pos:start="577:17" pos:end="577:23">case <expr pos:start="577:22" pos:end="577:22"><literal type="number" pos:start="577:22" pos:end="577:22">1</literal></expr>:</case> <comment type="line" pos:start="577:25" pos:end="577:31">// tnpc</comment>

                    <expr_stmt pos:start="579:21" pos:end="579:36"><expr pos:start="579:21" pos:end="579:35"><call pos:start="579:21" pos:end="579:35"><name pos:start="579:21" pos:end="579:33">gen_op_rdtnpc</name><argument_list pos:start="579:34" pos:end="579:35">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="581:21" pos:end="581:26">break;</break>

                <case pos:start="583:17" pos:end="583:23">case <expr pos:start="583:22" pos:end="583:22"><literal type="number" pos:start="583:22" pos:end="583:22">2</literal></expr>:</case> <comment type="line" pos:start="583:25" pos:end="583:33">// tstate</comment>

                    <expr_stmt pos:start="585:21" pos:end="585:38"><expr pos:start="585:21" pos:end="585:37"><call pos:start="585:21" pos:end="585:37"><name pos:start="585:21" pos:end="585:35">gen_op_rdtstate</name><argument_list pos:start="585:36" pos:end="585:37">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="587:21" pos:end="587:26">break;</break>

                <case pos:start="589:17" pos:end="589:23">case <expr pos:start="589:22" pos:end="589:22"><literal type="number" pos:start="589:22" pos:end="589:22">3</literal></expr>:</case> <comment type="line" pos:start="589:25" pos:end="589:29">// tt</comment>

                    <expr_stmt pos:start="591:21" pos:end="591:34"><expr pos:start="591:21" pos:end="591:33"><call pos:start="591:21" pos:end="591:33"><name pos:start="591:21" pos:end="591:31">gen_op_rdtt</name><argument_list pos:start="591:32" pos:end="591:33">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="593:21" pos:end="593:26">break;</break>

                <case pos:start="595:17" pos:end="595:23">case <expr pos:start="595:22" pos:end="595:22"><literal type="number" pos:start="595:22" pos:end="595:22">4</literal></expr>:</case> <comment type="line" pos:start="595:25" pos:end="595:31">// tick</comment>

                    <expr_stmt pos:start="597:21" pos:end="597:36"><expr pos:start="597:21" pos:end="597:35"><call pos:start="597:21" pos:end="597:35"><name pos:start="597:21" pos:end="597:33">gen_op_rdtick</name><argument_list pos:start="597:34" pos:end="597:35">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="599:21" pos:end="599:26">break;</break>

                <case pos:start="601:17" pos:end="601:23">case <expr pos:start="601:22" pos:end="601:22"><literal type="number" pos:start="601:22" pos:end="601:22">5</literal></expr>:</case> <comment type="line" pos:start="601:25" pos:end="601:30">// tba</comment>

                    <expr_stmt pos:start="603:21" pos:end="603:70"><expr pos:start="603:21" pos:end="603:69"><call pos:start="603:21" pos:end="603:69"><name pos:start="603:21" pos:end="603:39">gen_op_movtl_T0_env</name><argument_list pos:start="603:40" pos:end="603:69">(<argument pos:start="603:41" pos:end="603:68"><expr pos:start="603:41" pos:end="603:68"><call pos:start="603:41" pos:end="603:68"><name pos:start="603:41" pos:end="603:48">offsetof</name><argument_list pos:start="603:49" pos:end="603:68">(<argument pos:start="603:50" pos:end="603:62"><expr pos:start="603:50" pos:end="603:62"><name pos:start="603:50" pos:end="603:62">CPUSPARCState</name></expr></argument>, <argument pos:start="603:65" pos:end="603:67"><expr pos:start="603:65" pos:end="603:67"><name pos:start="603:65" pos:end="603:67">tbr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="605:21" pos:end="605:26">break;</break>

                <case pos:start="607:17" pos:end="607:23">case <expr pos:start="607:22" pos:end="607:22"><literal type="number" pos:start="607:22" pos:end="607:22">6</literal></expr>:</case> <comment type="line" pos:start="607:25" pos:end="607:33">// pstate</comment>

                    <expr_stmt pos:start="609:21" pos:end="609:38"><expr pos:start="609:21" pos:end="609:37"><call pos:start="609:21" pos:end="609:37"><name pos:start="609:21" pos:end="609:35">gen_op_rdpstate</name><argument_list pos:start="609:36" pos:end="609:37">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="611:21" pos:end="611:26">break;</break>

                <case pos:start="613:17" pos:end="613:23">case <expr pos:start="613:22" pos:end="613:22"><literal type="number" pos:start="613:22" pos:end="613:22">7</literal></expr>:</case> <comment type="line" pos:start="613:25" pos:end="613:29">// tl</comment>

                    <expr_stmt pos:start="615:21" pos:end="615:68"><expr pos:start="615:21" pos:end="615:67"><call pos:start="615:21" pos:end="615:67"><name pos:start="615:21" pos:end="615:38">gen_op_movl_T0_env</name><argument_list pos:start="615:39" pos:end="615:67">(<argument pos:start="615:40" pos:end="615:66"><expr pos:start="615:40" pos:end="615:66"><call pos:start="615:40" pos:end="615:66"><name pos:start="615:40" pos:end="615:47">offsetof</name><argument_list pos:start="615:48" pos:end="615:66">(<argument pos:start="615:49" pos:end="615:61"><expr pos:start="615:49" pos:end="615:61"><name pos:start="615:49" pos:end="615:61">CPUSPARCState</name></expr></argument>, <argument pos:start="615:64" pos:end="615:65"><expr pos:start="615:64" pos:end="615:65"><name pos:start="615:64" pos:end="615:65">tl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="617:21" pos:end="617:26">break;</break>

                <case pos:start="619:17" pos:end="619:23">case <expr pos:start="619:22" pos:end="619:22"><literal type="number" pos:start="619:22" pos:end="619:22">8</literal></expr>:</case> <comment type="line" pos:start="619:25" pos:end="619:30">// pil</comment>

                    <expr_stmt pos:start="621:21" pos:end="621:72"><expr pos:start="621:21" pos:end="621:71"><call pos:start="621:21" pos:end="621:71"><name pos:start="621:21" pos:end="621:38">gen_op_movl_T0_env</name><argument_list pos:start="621:39" pos:end="621:71">(<argument pos:start="621:40" pos:end="621:70"><expr pos:start="621:40" pos:end="621:70"><call pos:start="621:40" pos:end="621:70"><name pos:start="621:40" pos:end="621:47">offsetof</name><argument_list pos:start="621:48" pos:end="621:70">(<argument pos:start="621:49" pos:end="621:61"><expr pos:start="621:49" pos:end="621:61"><name pos:start="621:49" pos:end="621:61">CPUSPARCState</name></expr></argument>, <argument pos:start="621:64" pos:end="621:69"><expr pos:start="621:64" pos:end="621:69"><name pos:start="621:64" pos:end="621:69">psrpil</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="623:21" pos:end="623:26">break;</break>

                <case pos:start="625:17" pos:end="625:23">case <expr pos:start="625:22" pos:end="625:22"><literal type="number" pos:start="625:22" pos:end="625:22">9</literal></expr>:</case> <comment type="line" pos:start="625:25" pos:end="625:30">// cwp</comment>

                    <expr_stmt pos:start="627:21" pos:end="627:35"><expr pos:start="627:21" pos:end="627:34"><call pos:start="627:21" pos:end="627:34"><name pos:start="627:21" pos:end="627:32">gen_op_rdcwp</name><argument_list pos:start="627:33" pos:end="627:34">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="629:21" pos:end="629:26">break;</break>

                <case pos:start="631:17" pos:end="631:24">case <expr pos:start="631:22" pos:end="631:23"><literal type="number" pos:start="631:22" pos:end="631:23">10</literal></expr>:</case> <comment type="line" pos:start="631:26" pos:end="631:35">// cansave</comment>

                    <expr_stmt pos:start="633:21" pos:end="633:73"><expr pos:start="633:21" pos:end="633:72"><call pos:start="633:21" pos:end="633:72"><name pos:start="633:21" pos:end="633:38">gen_op_movl_T0_env</name><argument_list pos:start="633:39" pos:end="633:72">(<argument pos:start="633:40" pos:end="633:71"><expr pos:start="633:40" pos:end="633:71"><call pos:start="633:40" pos:end="633:71"><name pos:start="633:40" pos:end="633:47">offsetof</name><argument_list pos:start="633:48" pos:end="633:71">(<argument pos:start="633:49" pos:end="633:61"><expr pos:start="633:49" pos:end="633:61"><name pos:start="633:49" pos:end="633:61">CPUSPARCState</name></expr></argument>, <argument pos:start="633:64" pos:end="633:70"><expr pos:start="633:64" pos:end="633:70"><name pos:start="633:64" pos:end="633:70">cansave</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="635:21" pos:end="635:26">break;</break>

                <case pos:start="637:17" pos:end="637:24">case <expr pos:start="637:22" pos:end="637:23"><literal type="number" pos:start="637:22" pos:end="637:23">11</literal></expr>:</case> <comment type="line" pos:start="637:26" pos:end="637:38">// canrestore</comment>

                    <expr_stmt pos:start="639:21" pos:end="639:76"><expr pos:start="639:21" pos:end="639:75"><call pos:start="639:21" pos:end="639:75"><name pos:start="639:21" pos:end="639:38">gen_op_movl_T0_env</name><argument_list pos:start="639:39" pos:end="639:75">(<argument pos:start="639:40" pos:end="639:74"><expr pos:start="639:40" pos:end="639:74"><call pos:start="639:40" pos:end="639:74"><name pos:start="639:40" pos:end="639:47">offsetof</name><argument_list pos:start="639:48" pos:end="639:74">(<argument pos:start="639:49" pos:end="639:61"><expr pos:start="639:49" pos:end="639:61"><name pos:start="639:49" pos:end="639:61">CPUSPARCState</name></expr></argument>, <argument pos:start="639:64" pos:end="639:73"><expr pos:start="639:64" pos:end="639:73"><name pos:start="639:64" pos:end="639:73">canrestore</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="641:21" pos:end="641:26">break;</break>

                <case pos:start="643:17" pos:end="643:24">case <expr pos:start="643:22" pos:end="643:23"><literal type="number" pos:start="643:22" pos:end="643:23">12</literal></expr>:</case> <comment type="line" pos:start="643:26" pos:end="643:36">// cleanwin</comment>

                    <expr_stmt pos:start="645:21" pos:end="645:74"><expr pos:start="645:21" pos:end="645:73"><call pos:start="645:21" pos:end="645:73"><name pos:start="645:21" pos:end="645:38">gen_op_movl_T0_env</name><argument_list pos:start="645:39" pos:end="645:73">(<argument pos:start="645:40" pos:end="645:72"><expr pos:start="645:40" pos:end="645:72"><call pos:start="645:40" pos:end="645:72"><name pos:start="645:40" pos:end="645:47">offsetof</name><argument_list pos:start="645:48" pos:end="645:72">(<argument pos:start="645:49" pos:end="645:61"><expr pos:start="645:49" pos:end="645:61"><name pos:start="645:49" pos:end="645:61">CPUSPARCState</name></expr></argument>, <argument pos:start="645:64" pos:end="645:71"><expr pos:start="645:64" pos:end="645:71"><name pos:start="645:64" pos:end="645:71">cleanwin</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="647:21" pos:end="647:26">break;</break>

                <case pos:start="649:17" pos:end="649:24">case <expr pos:start="649:22" pos:end="649:23"><literal type="number" pos:start="649:22" pos:end="649:23">13</literal></expr>:</case> <comment type="line" pos:start="649:26" pos:end="649:36">// otherwin</comment>

                    <expr_stmt pos:start="651:21" pos:end="651:74"><expr pos:start="651:21" pos:end="651:73"><call pos:start="651:21" pos:end="651:73"><name pos:start="651:21" pos:end="651:38">gen_op_movl_T0_env</name><argument_list pos:start="651:39" pos:end="651:73">(<argument pos:start="651:40" pos:end="651:72"><expr pos:start="651:40" pos:end="651:72"><call pos:start="651:40" pos:end="651:72"><name pos:start="651:40" pos:end="651:47">offsetof</name><argument_list pos:start="651:48" pos:end="651:72">(<argument pos:start="651:49" pos:end="651:61"><expr pos:start="651:49" pos:end="651:61"><name pos:start="651:49" pos:end="651:61">CPUSPARCState</name></expr></argument>, <argument pos:start="651:64" pos:end="651:71"><expr pos:start="651:64" pos:end="651:71"><name pos:start="651:64" pos:end="651:71">otherwin</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="653:21" pos:end="653:26">break;</break>

                <case pos:start="655:17" pos:end="655:24">case <expr pos:start="655:22" pos:end="655:23"><literal type="number" pos:start="655:22" pos:end="655:23">14</literal></expr>:</case> <comment type="line" pos:start="655:26" pos:end="655:34">// wstate</comment>

                    <expr_stmt pos:start="657:21" pos:end="657:72"><expr pos:start="657:21" pos:end="657:71"><call pos:start="657:21" pos:end="657:71"><name pos:start="657:21" pos:end="657:38">gen_op_movl_T0_env</name><argument_list pos:start="657:39" pos:end="657:71">(<argument pos:start="657:40" pos:end="657:70"><expr pos:start="657:40" pos:end="657:70"><call pos:start="657:40" pos:end="657:70"><name pos:start="657:40" pos:end="657:47">offsetof</name><argument_list pos:start="657:48" pos:end="657:70">(<argument pos:start="657:49" pos:end="657:61"><expr pos:start="657:49" pos:end="657:61"><name pos:start="657:49" pos:end="657:61">CPUSPARCState</name></expr></argument>, <argument pos:start="657:64" pos:end="657:69"><expr pos:start="657:64" pos:end="657:69"><name pos:start="657:64" pos:end="657:69">wstate</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="659:21" pos:end="659:26">break;</break>

                <case pos:start="661:17" pos:end="661:24">case <expr pos:start="661:22" pos:end="661:23"><literal type="number" pos:start="661:22" pos:end="661:23">16</literal></expr>:</case> <comment type="line" pos:start="661:26" pos:end="661:37">// UA2005 gl</comment>

                    <expr_stmt pos:start="663:21" pos:end="663:68"><expr pos:start="663:21" pos:end="663:67"><call pos:start="663:21" pos:end="663:67"><name pos:start="663:21" pos:end="663:38">gen_op_movl_T0_env</name><argument_list pos:start="663:39" pos:end="663:67">(<argument pos:start="663:40" pos:end="663:66"><expr pos:start="663:40" pos:end="663:66"><call pos:start="663:40" pos:end="663:66"><name pos:start="663:40" pos:end="663:47">offsetof</name><argument_list pos:start="663:48" pos:end="663:66">(<argument pos:start="663:49" pos:end="663:61"><expr pos:start="663:49" pos:end="663:61"><name pos:start="663:49" pos:end="663:61">CPUSPARCState</name></expr></argument>, <argument pos:start="663:64" pos:end="663:65"><expr pos:start="663:64" pos:end="663:65"><name pos:start="663:64" pos:end="663:65">gl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="665:21" pos:end="665:26">break;</break>

                <case pos:start="667:17" pos:end="667:24">case <expr pos:start="667:22" pos:end="667:23"><literal type="number" pos:start="667:22" pos:end="667:23">26</literal></expr>:</case> <comment type="line" pos:start="667:26" pos:end="667:48">// UA2005 strand status</comment>

                    <if_stmt pos:start="669:21" pos:end="671:39"><if pos:start="669:21" pos:end="671:39">if <condition pos:start="669:24" pos:end="669:40">(<expr pos:start="669:25" pos:end="669:39"><operator pos:start="669:25" pos:end="669:25">!</operator><call pos:start="669:26" pos:end="669:39"><name pos:start="669:26" pos:end="669:35">hypervisor</name><argument_list pos:start="669:36" pos:end="669:39">(<argument pos:start="669:37" pos:end="669:38"><expr pos:start="669:37" pos:end="669:38"><name pos:start="669:37" pos:end="669:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="671:25" pos:end="671:39"><block_content pos:start="671:25" pos:end="671:39">

                        <goto pos:start="671:25" pos:end="671:39">goto <name pos:start="671:30" pos:end="671:38">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="673:21" pos:end="673:69"><expr pos:start="673:21" pos:end="673:68"><call pos:start="673:21" pos:end="673:68"><name pos:start="673:21" pos:end="673:38">gen_op_movl_T0_env</name><argument_list pos:start="673:39" pos:end="673:68">(<argument pos:start="673:40" pos:end="673:67"><expr pos:start="673:40" pos:end="673:67"><call pos:start="673:40" pos:end="673:67"><name pos:start="673:40" pos:end="673:47">offsetof</name><argument_list pos:start="673:48" pos:end="673:67">(<argument pos:start="673:49" pos:end="673:61"><expr pos:start="673:49" pos:end="673:61"><name pos:start="673:49" pos:end="673:61">CPUSPARCState</name></expr></argument>, <argument pos:start="673:64" pos:end="673:66"><expr pos:start="673:64" pos:end="673:66"><name pos:start="673:64" pos:end="673:66">ssr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="675:21" pos:end="675:26">break;</break>

                <case pos:start="677:17" pos:end="677:24">case <expr pos:start="677:22" pos:end="677:23"><literal type="number" pos:start="677:22" pos:end="677:23">31</literal></expr>:</case> <comment type="line" pos:start="677:26" pos:end="677:31">// ver</comment>

                    <expr_stmt pos:start="679:21" pos:end="679:74"><expr pos:start="679:21" pos:end="679:73"><call pos:start="679:21" pos:end="679:73"><name pos:start="679:21" pos:end="679:39">gen_op_movtl_T0_env</name><argument_list pos:start="679:40" pos:end="679:73">(<argument pos:start="679:41" pos:end="679:72"><expr pos:start="679:41" pos:end="679:72"><call pos:start="679:41" pos:end="679:72"><name pos:start="679:41" pos:end="679:48">offsetof</name><argument_list pos:start="679:49" pos:end="679:72">(<argument pos:start="679:50" pos:end="679:62"><expr pos:start="679:50" pos:end="679:62"><name pos:start="679:50" pos:end="679:62">CPUSPARCState</name></expr></argument>, <argument pos:start="679:65" pos:end="679:71"><expr pos:start="679:65" pos:end="679:71"><name pos:start="679:65" pos:end="679:71">version</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="681:21" pos:end="681:26">break;</break>

                <case pos:start="683:17" pos:end="683:24">case <expr pos:start="683:22" pos:end="683:23"><literal type="number" pos:start="683:22" pos:end="683:23">15</literal></expr>:</case> <comment type="line" pos:start="683:26" pos:end="683:30">// fq</comment>

                <default pos:start="685:17" pos:end="685:24">default:</default>

                    <goto pos:start="687:21" pos:end="687:38">goto <name pos:start="687:26" pos:end="687:37">illegal_insn</name>;</goto>

                </block_content>}</block></switch>

<cpp:else pos:start="691:1" pos:end="691:5">#<cpp:directive pos:start="691:2" pos:end="691:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="693:17" pos:end="696:0"><expr pos:start="693:17" pos:end="693:64"><call pos:start="693:17" pos:end="693:64"><name pos:start="693:17" pos:end="693:34">gen_op_movl_T0_env</name><argument_list pos:start="693:35" pos:end="693:64">(<argument pos:start="693:36" pos:end="693:63"><expr pos:start="693:36" pos:end="693:63"><call pos:start="693:36" pos:end="693:63"><name pos:start="693:36" pos:end="693:43">offsetof</name><argument_list pos:start="693:44" pos:end="693:63">(<argument pos:start="693:45" pos:end="693:57"><expr pos:start="693:45" pos:end="693:57"><name pos:start="693:45" pos:end="693:57">CPUSPARCState</name></expr></argument>, <argument pos:start="693:60" pos:end="693:62"><expr pos:start="693:60" pos:end="693:62"><name pos:start="693:60" pos:end="693:62">wim</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="695:1" pos:end="695:6">#<cpp:directive pos:start="695:2" pos:end="695:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="697:17" pos:end="697:36"><expr pos:start="697:17" pos:end="697:35"><call pos:start="697:17" pos:end="697:35"><name pos:start="697:17" pos:end="697:31">gen_movl_T0_reg</name><argument_list pos:start="697:32" pos:end="697:35">(<argument pos:start="697:33" pos:end="697:34"><expr pos:start="697:33" pos:end="697:34"><name pos:start="697:33" pos:end="697:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="699:17" pos:end="699:22">break;</break>

            </block_content>}</block></if> <if type="elseif" pos:start="701:15" pos:end="723:13">else if <condition pos:start="701:23" pos:end="701:35">(<expr pos:start="701:24" pos:end="701:34"><name pos:start="701:24" pos:end="701:26">xop</name> <operator pos:start="701:28" pos:end="701:29">==</operator> <literal type="number" pos:start="701:31" pos:end="701:34">0x2b</literal></expr>)</condition> <block pos:start="701:37" pos:end="723:13">{<block_content pos:start="705:17" pos:end="722:0"> <comment type="block" pos:start="701:39" pos:end="701:61">/* rdtbr / V9 flushw */</comment>

<cpp:ifdef pos:start="703:1" pos:end="703:21">#<cpp:directive pos:start="703:2" pos:end="703:6">ifdef</cpp:directive> <name pos:start="703:8" pos:end="703:21">TARGET_SPARC64</name></cpp:ifdef>

                <expr_stmt pos:start="705:17" pos:end="708:0"><expr pos:start="705:17" pos:end="705:31"><call pos:start="705:17" pos:end="705:31"><name pos:start="705:17" pos:end="705:29">gen_op_flushw</name><argument_list pos:start="705:30" pos:end="705:31">()</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="707:1" pos:end="707:5">#<cpp:directive pos:start="707:2" pos:end="707:5">else</cpp:directive></cpp:else>

                <if_stmt pos:start="709:17" pos:end="711:35"><if pos:start="709:17" pos:end="711:35">if <condition pos:start="709:20" pos:end="709:36">(<expr pos:start="709:21" pos:end="709:35"><operator pos:start="709:21" pos:end="709:21">!</operator><call pos:start="709:22" pos:end="709:35"><name pos:start="709:22" pos:end="709:31">supervisor</name><argument_list pos:start="709:32" pos:end="709:35">(<argument pos:start="709:33" pos:end="709:34"><expr pos:start="709:33" pos:end="709:34"><name pos:start="709:33" pos:end="709:34">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="711:21" pos:end="711:35"><block_content pos:start="711:21" pos:end="711:35">

                    <goto pos:start="711:21" pos:end="711:35">goto <name pos:start="711:26" pos:end="711:34">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="713:17" pos:end="713:66"><expr pos:start="713:17" pos:end="713:65"><call pos:start="713:17" pos:end="713:65"><name pos:start="713:17" pos:end="713:35">gen_op_movtl_T0_env</name><argument_list pos:start="713:36" pos:end="713:65">(<argument pos:start="713:37" pos:end="713:64"><expr pos:start="713:37" pos:end="713:64"><call pos:start="713:37" pos:end="713:64"><name pos:start="713:37" pos:end="713:44">offsetof</name><argument_list pos:start="713:45" pos:end="713:64">(<argument pos:start="713:46" pos:end="713:58"><expr pos:start="713:46" pos:end="713:58"><name pos:start="713:46" pos:end="713:58">CPUSPARCState</name></expr></argument>, <argument pos:start="713:61" pos:end="713:63"><expr pos:start="713:61" pos:end="713:63"><name pos:start="713:61" pos:end="713:63">tbr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="715:17" pos:end="718:0"><expr pos:start="715:17" pos:end="715:35"><call pos:start="715:17" pos:end="715:35"><name pos:start="715:17" pos:end="715:31">gen_movl_T0_reg</name><argument_list pos:start="715:32" pos:end="715:35">(<argument pos:start="715:33" pos:end="715:34"><expr pos:start="715:33" pos:end="715:34"><name pos:start="715:33" pos:end="715:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="717:1" pos:end="717:6">#<cpp:directive pos:start="717:2" pos:end="717:6">endif</cpp:directive></cpp:endif>

                <break pos:start="719:17" pos:end="722:0">break;</break>

<cpp:endif pos:start="721:1" pos:end="721:6">#<cpp:directive pos:start="721:2" pos:end="721:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></if> <if type="elseif" pos:start="723:15" pos:end="1093:13">else if <condition pos:start="723:23" pos:end="723:35">(<expr pos:start="723:24" pos:end="723:34"><name pos:start="723:24" pos:end="723:26">xop</name> <operator pos:start="723:28" pos:end="723:29">==</operator> <literal type="number" pos:start="723:31" pos:end="723:34">0x34</literal></expr>)</condition> <block pos:start="723:37" pos:end="1093:13">{<block_content pos:start="725:17" pos:end="1091:17">   <comment type="block" pos:start="723:41" pos:end="723:60">/* FPU Operations */</comment>

                <if_stmt pos:start="725:17" pos:end="727:34"><if pos:start="725:17" pos:end="727:34">if <condition pos:start="725:20" pos:end="725:41">(<expr pos:start="725:21" pos:end="725:40"><call pos:start="725:21" pos:end="725:40"><name pos:start="725:21" pos:end="725:36">gen_trap_ifnofpu</name><argument_list pos:start="725:37" pos:end="725:40">(<argument pos:start="725:38" pos:end="725:39"><expr pos:start="725:38" pos:end="725:39"><name pos:start="725:38" pos:end="725:39">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="727:21" pos:end="727:34"><block_content pos:start="727:21" pos:end="727:34">

                    <goto pos:start="727:21" pos:end="727:34">goto <name pos:start="727:26" pos:end="727:33">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="729:17" pos:end="729:49"><expr pos:start="729:17" pos:end="729:48"><call pos:start="729:17" pos:end="729:48"><name pos:start="729:17" pos:end="729:46">gen_op_clear_ieee_excp_and_FTT</name><argument_list pos:start="729:47" pos:end="729:48">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="731:17" pos:end="731:46"><expr pos:start="731:17" pos:end="731:45"><name pos:start="731:17" pos:end="731:19">rs1</name> <operator pos:start="731:21" pos:end="731:21">=</operator> <call pos:start="731:23" pos:end="731:45"><name pos:start="731:23" pos:end="731:31">GET_FIELD</name><argument_list pos:start="731:32" pos:end="731:45">(<argument pos:start="731:33" pos:end="731:36"><expr pos:start="731:33" pos:end="731:36"><name pos:start="731:33" pos:end="731:36">insn</name></expr></argument>, <argument pos:start="731:39" pos:end="731:40"><expr pos:start="731:39" pos:end="731:40"><literal type="number" pos:start="731:39" pos:end="731:40">13</literal></expr></argument>, <argument pos:start="731:43" pos:end="731:44"><expr pos:start="731:43" pos:end="731:44"><literal type="number" pos:start="731:43" pos:end="731:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="733:17" pos:end="733:46"><expr pos:start="733:17" pos:end="733:45"><name pos:start="733:17" pos:end="733:19">rs2</name> <operator pos:start="733:21" pos:end="733:21">=</operator> <call pos:start="733:23" pos:end="733:45"><name pos:start="733:23" pos:end="733:31">GET_FIELD</name><argument_list pos:start="733:32" pos:end="733:45">(<argument pos:start="733:33" pos:end="733:36"><expr pos:start="733:33" pos:end="733:36"><name pos:start="733:33" pos:end="733:36">insn</name></expr></argument>, <argument pos:start="733:39" pos:end="733:40"><expr pos:start="733:39" pos:end="733:40"><literal type="number" pos:start="733:39" pos:end="733:40">27</literal></expr></argument>, <argument pos:start="733:43" pos:end="733:44"><expr pos:start="733:43" pos:end="733:44"><literal type="number" pos:start="733:43" pos:end="733:44">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="735:17" pos:end="735:46"><expr pos:start="735:17" pos:end="735:45"><name pos:start="735:17" pos:end="735:19">xop</name> <operator pos:start="735:21" pos:end="735:21">=</operator> <call pos:start="735:23" pos:end="735:45"><name pos:start="735:23" pos:end="735:31">GET_FIELD</name><argument_list pos:start="735:32" pos:end="735:45">(<argument pos:start="735:33" pos:end="735:36"><expr pos:start="735:33" pos:end="735:36"><name pos:start="735:33" pos:end="735:36">insn</name></expr></argument>, <argument pos:start="735:39" pos:end="735:40"><expr pos:start="735:39" pos:end="735:40"><literal type="number" pos:start="735:39" pos:end="735:40">18</literal></expr></argument>, <argument pos:start="735:43" pos:end="735:44"><expr pos:start="735:43" pos:end="735:44"><literal type="number" pos:start="735:43" pos:end="735:44">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="737:17" pos:end="1091:17">switch <condition pos:start="737:24" pos:end="737:28">(<expr pos:start="737:25" pos:end="737:27"><name pos:start="737:25" pos:end="737:27">xop</name></expr>)</condition> <block pos:start="737:30" pos:end="1091:17">{<block_content pos:start="739:21" pos:end="1089:42">

                    <case pos:start="739:21" pos:end="739:29">case <expr pos:start="739:26" pos:end="739:28"><literal type="number" pos:start="739:26" pos:end="739:28">0x1</literal></expr>:</case> <comment type="block" pos:start="739:31" pos:end="739:41">/* fmovs */</comment>

                        <expr_stmt pos:start="741:25" pos:end="741:49"><expr pos:start="741:25" pos:end="741:48"><call pos:start="741:25" pos:end="741:48"><name pos:start="741:25" pos:end="741:43">gen_op_load_fpr_FT0</name><argument_list pos:start="741:44" pos:end="741:48">(<argument pos:start="741:45" pos:end="741:47"><expr pos:start="741:45" pos:end="741:47"><name pos:start="741:45" pos:end="741:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="743:25" pos:end="743:49"><expr pos:start="743:25" pos:end="743:48"><call pos:start="743:25" pos:end="743:48"><name pos:start="743:25" pos:end="743:44">gen_op_store_FT0_fpr</name><argument_list pos:start="743:45" pos:end="743:48">(<argument pos:start="743:46" pos:end="743:47"><expr pos:start="743:46" pos:end="743:47"><name pos:start="743:46" pos:end="743:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="745:25" pos:end="745:30">break;</break>

                    <case pos:start="747:21" pos:end="747:29">case <expr pos:start="747:26" pos:end="747:28"><literal type="number" pos:start="747:26" pos:end="747:28">0x5</literal></expr>:</case> <comment type="block" pos:start="747:31" pos:end="747:41">/* fnegs */</comment>

                        <expr_stmt pos:start="749:25" pos:end="749:49"><expr pos:start="749:25" pos:end="749:48"><call pos:start="749:25" pos:end="749:48"><name pos:start="749:25" pos:end="749:43">gen_op_load_fpr_FT1</name><argument_list pos:start="749:44" pos:end="749:48">(<argument pos:start="749:45" pos:end="749:47"><expr pos:start="749:45" pos:end="749:47"><name pos:start="749:45" pos:end="749:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="751:25" pos:end="751:39"><expr pos:start="751:25" pos:end="751:38"><call pos:start="751:25" pos:end="751:38"><name pos:start="751:25" pos:end="751:36">gen_op_fnegs</name><argument_list pos:start="751:37" pos:end="751:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="753:25" pos:end="753:49"><expr pos:start="753:25" pos:end="753:48"><call pos:start="753:25" pos:end="753:48"><name pos:start="753:25" pos:end="753:44">gen_op_store_FT0_fpr</name><argument_list pos:start="753:45" pos:end="753:48">(<argument pos:start="753:46" pos:end="753:47"><expr pos:start="753:46" pos:end="753:47"><name pos:start="753:46" pos:end="753:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="755:25" pos:end="755:30">break;</break>

                    <case pos:start="757:21" pos:end="757:29">case <expr pos:start="757:26" pos:end="757:28"><literal type="number" pos:start="757:26" pos:end="757:28">0x9</literal></expr>:</case> <comment type="block" pos:start="757:31" pos:end="757:41">/* fabss */</comment>

                        <expr_stmt pos:start="759:25" pos:end="759:49"><expr pos:start="759:25" pos:end="759:48"><call pos:start="759:25" pos:end="759:48"><name pos:start="759:25" pos:end="759:43">gen_op_load_fpr_FT1</name><argument_list pos:start="759:44" pos:end="759:48">(<argument pos:start="759:45" pos:end="759:47"><expr pos:start="759:45" pos:end="759:47"><name pos:start="759:45" pos:end="759:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="761:25" pos:end="761:39"><expr pos:start="761:25" pos:end="761:38"><call pos:start="761:25" pos:end="761:38"><name pos:start="761:25" pos:end="761:36">gen_op_fabss</name><argument_list pos:start="761:37" pos:end="761:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="763:25" pos:end="763:49"><expr pos:start="763:25" pos:end="763:48"><call pos:start="763:25" pos:end="763:48"><name pos:start="763:25" pos:end="763:44">gen_op_store_FT0_fpr</name><argument_list pos:start="763:45" pos:end="763:48">(<argument pos:start="763:46" pos:end="763:47"><expr pos:start="763:46" pos:end="763:47"><name pos:start="763:46" pos:end="763:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="765:25" pos:end="765:30">break;</break>

                    <case pos:start="767:21" pos:end="767:30">case <expr pos:start="767:26" pos:end="767:29"><literal type="number" pos:start="767:26" pos:end="767:29">0x29</literal></expr>:</case> <comment type="block" pos:start="767:32" pos:end="767:43">/* fsqrts */</comment>

                        <expr_stmt pos:start="769:25" pos:end="769:49"><expr pos:start="769:25" pos:end="769:48"><call pos:start="769:25" pos:end="769:48"><name pos:start="769:25" pos:end="769:43">gen_op_load_fpr_FT1</name><argument_list pos:start="769:44" pos:end="769:48">(<argument pos:start="769:45" pos:end="769:47"><expr pos:start="769:45" pos:end="769:47"><name pos:start="769:45" pos:end="769:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="771:25" pos:end="771:40"><expr pos:start="771:25" pos:end="771:39"><call pos:start="771:25" pos:end="771:39"><name pos:start="771:25" pos:end="771:37">gen_op_fsqrts</name><argument_list pos:start="771:38" pos:end="771:39">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="773:25" pos:end="773:49"><expr pos:start="773:25" pos:end="773:48"><call pos:start="773:25" pos:end="773:48"><name pos:start="773:25" pos:end="773:44">gen_op_store_FT0_fpr</name><argument_list pos:start="773:45" pos:end="773:48">(<argument pos:start="773:46" pos:end="773:47"><expr pos:start="773:46" pos:end="773:47"><name pos:start="773:46" pos:end="773:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="775:25" pos:end="775:30">break;</break>

                    <case pos:start="777:21" pos:end="777:30">case <expr pos:start="777:26" pos:end="777:29"><literal type="number" pos:start="777:26" pos:end="777:29">0x2a</literal></expr>:</case> <comment type="block" pos:start="777:32" pos:end="777:43">/* fsqrtd */</comment>

                        <expr_stmt pos:start="779:25" pos:end="779:57"><expr pos:start="779:25" pos:end="779:56"><call pos:start="779:25" pos:end="779:56"><name pos:start="779:25" pos:end="779:43">gen_op_load_fpr_DT1</name><argument_list pos:start="779:44" pos:end="779:56">(<argument pos:start="779:45" pos:end="779:55"><expr pos:start="779:45" pos:end="779:55"><call pos:start="779:45" pos:end="779:55"><name pos:start="779:45" pos:end="779:50">DFPREG</name><argument_list pos:start="779:51" pos:end="779:55">(<argument pos:start="779:52" pos:end="779:54"><expr pos:start="779:52" pos:end="779:54"><name pos:start="779:52" pos:end="779:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="781:25" pos:end="781:40"><expr pos:start="781:25" pos:end="781:39"><call pos:start="781:25" pos:end="781:39"><name pos:start="781:25" pos:end="781:37">gen_op_fsqrtd</name><argument_list pos:start="781:38" pos:end="781:39">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="783:25" pos:end="783:57"><expr pos:start="783:25" pos:end="783:56"><call pos:start="783:25" pos:end="783:56"><name pos:start="783:25" pos:end="783:44">gen_op_store_DT0_fpr</name><argument_list pos:start="783:45" pos:end="783:56">(<argument pos:start="783:46" pos:end="783:55"><expr pos:start="783:46" pos:end="783:55"><call pos:start="783:46" pos:end="783:55"><name pos:start="783:46" pos:end="783:51">DFPREG</name><argument_list pos:start="783:52" pos:end="783:55">(<argument pos:start="783:53" pos:end="783:54"><expr pos:start="783:53" pos:end="783:54"><name pos:start="783:53" pos:end="783:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="785:25" pos:end="785:30">break;</break>

                    <case pos:start="787:21" pos:end="787:30">case <expr pos:start="787:26" pos:end="787:29"><literal type="number" pos:start="787:26" pos:end="787:29">0x2b</literal></expr>:</case> <comment type="block" pos:start="787:32" pos:end="787:43">/* fsqrtq */</comment>

                        <goto pos:start="789:25" pos:end="789:39">goto <name pos:start="789:30" pos:end="789:38">nfpu_insn</name>;</goto>

                    <case pos:start="791:21" pos:end="791:30">case <expr pos:start="791:26" pos:end="791:29"><literal type="number" pos:start="791:26" pos:end="791:29">0x41</literal></expr>:</case>

                        <expr_stmt pos:start="793:25" pos:end="793:49"><expr pos:start="793:25" pos:end="793:48"><call pos:start="793:25" pos:end="793:48"><name pos:start="793:25" pos:end="793:43">gen_op_load_fpr_FT0</name><argument_list pos:start="793:44" pos:end="793:48">(<argument pos:start="793:45" pos:end="793:47"><expr pos:start="793:45" pos:end="793:47"><name pos:start="793:45" pos:end="793:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="795:25" pos:end="795:49"><expr pos:start="795:25" pos:end="795:48"><call pos:start="795:25" pos:end="795:48"><name pos:start="795:25" pos:end="795:43">gen_op_load_fpr_FT1</name><argument_list pos:start="795:44" pos:end="795:48">(<argument pos:start="795:45" pos:end="795:47"><expr pos:start="795:45" pos:end="795:47"><name pos:start="795:45" pos:end="795:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="797:25" pos:end="797:39"><expr pos:start="797:25" pos:end="797:38"><call pos:start="797:25" pos:end="797:38"><name pos:start="797:25" pos:end="797:36">gen_op_fadds</name><argument_list pos:start="797:37" pos:end="797:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="799:25" pos:end="799:49"><expr pos:start="799:25" pos:end="799:48"><call pos:start="799:25" pos:end="799:48"><name pos:start="799:25" pos:end="799:44">gen_op_store_FT0_fpr</name><argument_list pos:start="799:45" pos:end="799:48">(<argument pos:start="799:46" pos:end="799:47"><expr pos:start="799:46" pos:end="799:47"><name pos:start="799:46" pos:end="799:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="801:25" pos:end="801:30">break;</break>

                    <case pos:start="803:21" pos:end="803:30">case <expr pos:start="803:26" pos:end="803:29"><literal type="number" pos:start="803:26" pos:end="803:29">0x42</literal></expr>:</case>

                        <expr_stmt pos:start="805:25" pos:end="805:57"><expr pos:start="805:25" pos:end="805:56"><call pos:start="805:25" pos:end="805:56"><name pos:start="805:25" pos:end="805:43">gen_op_load_fpr_DT0</name><argument_list pos:start="805:44" pos:end="805:56">(<argument pos:start="805:45" pos:end="805:55"><expr pos:start="805:45" pos:end="805:55"><call pos:start="805:45" pos:end="805:55"><name pos:start="805:45" pos:end="805:50">DFPREG</name><argument_list pos:start="805:51" pos:end="805:55">(<argument pos:start="805:52" pos:end="805:54"><expr pos:start="805:52" pos:end="805:54"><name pos:start="805:52" pos:end="805:54">rs1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="807:25" pos:end="807:57"><expr pos:start="807:25" pos:end="807:56"><call pos:start="807:25" pos:end="807:56"><name pos:start="807:25" pos:end="807:43">gen_op_load_fpr_DT1</name><argument_list pos:start="807:44" pos:end="807:56">(<argument pos:start="807:45" pos:end="807:55"><expr pos:start="807:45" pos:end="807:55"><call pos:start="807:45" pos:end="807:55"><name pos:start="807:45" pos:end="807:50">DFPREG</name><argument_list pos:start="807:51" pos:end="807:55">(<argument pos:start="807:52" pos:end="807:54"><expr pos:start="807:52" pos:end="807:54"><name pos:start="807:52" pos:end="807:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="809:25" pos:end="809:39"><expr pos:start="809:25" pos:end="809:38"><call pos:start="809:25" pos:end="809:38"><name pos:start="809:25" pos:end="809:36">gen_op_faddd</name><argument_list pos:start="809:37" pos:end="809:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="811:25" pos:end="811:57"><expr pos:start="811:25" pos:end="811:56"><call pos:start="811:25" pos:end="811:56"><name pos:start="811:25" pos:end="811:44">gen_op_store_DT0_fpr</name><argument_list pos:start="811:45" pos:end="811:56">(<argument pos:start="811:46" pos:end="811:55"><expr pos:start="811:46" pos:end="811:55"><call pos:start="811:46" pos:end="811:55"><name pos:start="811:46" pos:end="811:51">DFPREG</name><argument_list pos:start="811:52" pos:end="811:55">(<argument pos:start="811:53" pos:end="811:54"><expr pos:start="811:53" pos:end="811:54"><name pos:start="811:53" pos:end="811:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="813:25" pos:end="813:30">break;</break>

                    <case pos:start="815:21" pos:end="815:30">case <expr pos:start="815:26" pos:end="815:29"><literal type="number" pos:start="815:26" pos:end="815:29">0x43</literal></expr>:</case> <comment type="block" pos:start="815:32" pos:end="815:42">/* faddq */</comment>

                        <goto pos:start="817:25" pos:end="817:39">goto <name pos:start="817:30" pos:end="817:38">nfpu_insn</name>;</goto>

                    <case pos:start="819:21" pos:end="819:30">case <expr pos:start="819:26" pos:end="819:29"><literal type="number" pos:start="819:26" pos:end="819:29">0x45</literal></expr>:</case>

                        <expr_stmt pos:start="821:25" pos:end="821:49"><expr pos:start="821:25" pos:end="821:48"><call pos:start="821:25" pos:end="821:48"><name pos:start="821:25" pos:end="821:43">gen_op_load_fpr_FT0</name><argument_list pos:start="821:44" pos:end="821:48">(<argument pos:start="821:45" pos:end="821:47"><expr pos:start="821:45" pos:end="821:47"><name pos:start="821:45" pos:end="821:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="823:25" pos:end="823:49"><expr pos:start="823:25" pos:end="823:48"><call pos:start="823:25" pos:end="823:48"><name pos:start="823:25" pos:end="823:43">gen_op_load_fpr_FT1</name><argument_list pos:start="823:44" pos:end="823:48">(<argument pos:start="823:45" pos:end="823:47"><expr pos:start="823:45" pos:end="823:47"><name pos:start="823:45" pos:end="823:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="825:25" pos:end="825:39"><expr pos:start="825:25" pos:end="825:38"><call pos:start="825:25" pos:end="825:38"><name pos:start="825:25" pos:end="825:36">gen_op_fsubs</name><argument_list pos:start="825:37" pos:end="825:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="827:25" pos:end="827:49"><expr pos:start="827:25" pos:end="827:48"><call pos:start="827:25" pos:end="827:48"><name pos:start="827:25" pos:end="827:44">gen_op_store_FT0_fpr</name><argument_list pos:start="827:45" pos:end="827:48">(<argument pos:start="827:46" pos:end="827:47"><expr pos:start="827:46" pos:end="827:47"><name pos:start="827:46" pos:end="827:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="829:25" pos:end="829:30">break;</break>

                    <case pos:start="831:21" pos:end="831:30">case <expr pos:start="831:26" pos:end="831:29"><literal type="number" pos:start="831:26" pos:end="831:29">0x46</literal></expr>:</case>

                        <expr_stmt pos:start="833:25" pos:end="833:57"><expr pos:start="833:25" pos:end="833:56"><call pos:start="833:25" pos:end="833:56"><name pos:start="833:25" pos:end="833:43">gen_op_load_fpr_DT0</name><argument_list pos:start="833:44" pos:end="833:56">(<argument pos:start="833:45" pos:end="833:55"><expr pos:start="833:45" pos:end="833:55"><call pos:start="833:45" pos:end="833:55"><name pos:start="833:45" pos:end="833:50">DFPREG</name><argument_list pos:start="833:51" pos:end="833:55">(<argument pos:start="833:52" pos:end="833:54"><expr pos:start="833:52" pos:end="833:54"><name pos:start="833:52" pos:end="833:54">rs1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="835:25" pos:end="835:57"><expr pos:start="835:25" pos:end="835:56"><call pos:start="835:25" pos:end="835:56"><name pos:start="835:25" pos:end="835:43">gen_op_load_fpr_DT1</name><argument_list pos:start="835:44" pos:end="835:56">(<argument pos:start="835:45" pos:end="835:55"><expr pos:start="835:45" pos:end="835:55"><call pos:start="835:45" pos:end="835:55"><name pos:start="835:45" pos:end="835:50">DFPREG</name><argument_list pos:start="835:51" pos:end="835:55">(<argument pos:start="835:52" pos:end="835:54"><expr pos:start="835:52" pos:end="835:54"><name pos:start="835:52" pos:end="835:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="837:25" pos:end="837:39"><expr pos:start="837:25" pos:end="837:38"><call pos:start="837:25" pos:end="837:38"><name pos:start="837:25" pos:end="837:36">gen_op_fsubd</name><argument_list pos:start="837:37" pos:end="837:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="839:25" pos:end="839:57"><expr pos:start="839:25" pos:end="839:56"><call pos:start="839:25" pos:end="839:56"><name pos:start="839:25" pos:end="839:44">gen_op_store_DT0_fpr</name><argument_list pos:start="839:45" pos:end="839:56">(<argument pos:start="839:46" pos:end="839:55"><expr pos:start="839:46" pos:end="839:55"><call pos:start="839:46" pos:end="839:55"><name pos:start="839:46" pos:end="839:51">DFPREG</name><argument_list pos:start="839:52" pos:end="839:55">(<argument pos:start="839:53" pos:end="839:54"><expr pos:start="839:53" pos:end="839:54"><name pos:start="839:53" pos:end="839:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="841:25" pos:end="841:30">break;</break>

                    <case pos:start="843:21" pos:end="843:30">case <expr pos:start="843:26" pos:end="843:29"><literal type="number" pos:start="843:26" pos:end="843:29">0x47</literal></expr>:</case> <comment type="block" pos:start="843:32" pos:end="843:42">/* fsubq */</comment>

                        <goto pos:start="845:25" pos:end="845:39">goto <name pos:start="845:30" pos:end="845:38">nfpu_insn</name>;</goto>

                    <case pos:start="847:21" pos:end="847:30">case <expr pos:start="847:26" pos:end="847:29"><literal type="number" pos:start="847:26" pos:end="847:29">0x49</literal></expr>:</case>

                        <expr_stmt pos:start="849:25" pos:end="849:49"><expr pos:start="849:25" pos:end="849:48"><call pos:start="849:25" pos:end="849:48"><name pos:start="849:25" pos:end="849:43">gen_op_load_fpr_FT0</name><argument_list pos:start="849:44" pos:end="849:48">(<argument pos:start="849:45" pos:end="849:47"><expr pos:start="849:45" pos:end="849:47"><name pos:start="849:45" pos:end="849:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="851:25" pos:end="851:49"><expr pos:start="851:25" pos:end="851:48"><call pos:start="851:25" pos:end="851:48"><name pos:start="851:25" pos:end="851:43">gen_op_load_fpr_FT1</name><argument_list pos:start="851:44" pos:end="851:48">(<argument pos:start="851:45" pos:end="851:47"><expr pos:start="851:45" pos:end="851:47"><name pos:start="851:45" pos:end="851:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="853:25" pos:end="853:39"><expr pos:start="853:25" pos:end="853:38"><call pos:start="853:25" pos:end="853:38"><name pos:start="853:25" pos:end="853:36">gen_op_fmuls</name><argument_list pos:start="853:37" pos:end="853:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="855:25" pos:end="855:49"><expr pos:start="855:25" pos:end="855:48"><call pos:start="855:25" pos:end="855:48"><name pos:start="855:25" pos:end="855:44">gen_op_store_FT0_fpr</name><argument_list pos:start="855:45" pos:end="855:48">(<argument pos:start="855:46" pos:end="855:47"><expr pos:start="855:46" pos:end="855:47"><name pos:start="855:46" pos:end="855:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="857:25" pos:end="857:30">break;</break>

                    <case pos:start="859:21" pos:end="859:30">case <expr pos:start="859:26" pos:end="859:29"><literal type="number" pos:start="859:26" pos:end="859:29">0x4a</literal></expr>:</case>

                        <expr_stmt pos:start="861:25" pos:end="861:57"><expr pos:start="861:25" pos:end="861:56"><call pos:start="861:25" pos:end="861:56"><name pos:start="861:25" pos:end="861:43">gen_op_load_fpr_DT0</name><argument_list pos:start="861:44" pos:end="861:56">(<argument pos:start="861:45" pos:end="861:55"><expr pos:start="861:45" pos:end="861:55"><call pos:start="861:45" pos:end="861:55"><name pos:start="861:45" pos:end="861:50">DFPREG</name><argument_list pos:start="861:51" pos:end="861:55">(<argument pos:start="861:52" pos:end="861:54"><expr pos:start="861:52" pos:end="861:54"><name pos:start="861:52" pos:end="861:54">rs1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="863:25" pos:end="863:57"><expr pos:start="863:25" pos:end="863:56"><call pos:start="863:25" pos:end="863:56"><name pos:start="863:25" pos:end="863:43">gen_op_load_fpr_DT1</name><argument_list pos:start="863:44" pos:end="863:56">(<argument pos:start="863:45" pos:end="863:55"><expr pos:start="863:45" pos:end="863:55"><call pos:start="863:45" pos:end="863:55"><name pos:start="863:45" pos:end="863:50">DFPREG</name><argument_list pos:start="863:51" pos:end="863:55">(<argument pos:start="863:52" pos:end="863:54"><expr pos:start="863:52" pos:end="863:54"><name pos:start="863:52" pos:end="863:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="865:25" pos:end="865:39"><expr pos:start="865:25" pos:end="865:38"><call pos:start="865:25" pos:end="865:38"><name pos:start="865:25" pos:end="865:36">gen_op_fmuld</name><argument_list pos:start="865:37" pos:end="865:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="867:25" pos:end="867:49"><expr pos:start="867:25" pos:end="867:48"><call pos:start="867:25" pos:end="867:48"><name pos:start="867:25" pos:end="867:44">gen_op_store_DT0_fpr</name><argument_list pos:start="867:45" pos:end="867:48">(<argument pos:start="867:46" pos:end="867:47"><expr pos:start="867:46" pos:end="867:47"><name pos:start="867:46" pos:end="867:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="869:25" pos:end="869:30">break;</break>

                    <case pos:start="871:21" pos:end="871:30">case <expr pos:start="871:26" pos:end="871:29"><literal type="number" pos:start="871:26" pos:end="871:29">0x4b</literal></expr>:</case> <comment type="block" pos:start="871:32" pos:end="871:42">/* fmulq */</comment>

                        <goto pos:start="873:25" pos:end="873:39">goto <name pos:start="873:30" pos:end="873:38">nfpu_insn</name>;</goto>

                    <case pos:start="875:21" pos:end="875:30">case <expr pos:start="875:26" pos:end="875:29"><literal type="number" pos:start="875:26" pos:end="875:29">0x4d</literal></expr>:</case>

                        <expr_stmt pos:start="877:25" pos:end="877:49"><expr pos:start="877:25" pos:end="877:48"><call pos:start="877:25" pos:end="877:48"><name pos:start="877:25" pos:end="877:43">gen_op_load_fpr_FT0</name><argument_list pos:start="877:44" pos:end="877:48">(<argument pos:start="877:45" pos:end="877:47"><expr pos:start="877:45" pos:end="877:47"><name pos:start="877:45" pos:end="877:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="879:25" pos:end="879:49"><expr pos:start="879:25" pos:end="879:48"><call pos:start="879:25" pos:end="879:48"><name pos:start="879:25" pos:end="879:43">gen_op_load_fpr_FT1</name><argument_list pos:start="879:44" pos:end="879:48">(<argument pos:start="879:45" pos:end="879:47"><expr pos:start="879:45" pos:end="879:47"><name pos:start="879:45" pos:end="879:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="881:25" pos:end="881:39"><expr pos:start="881:25" pos:end="881:38"><call pos:start="881:25" pos:end="881:38"><name pos:start="881:25" pos:end="881:36">gen_op_fdivs</name><argument_list pos:start="881:37" pos:end="881:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="883:25" pos:end="883:49"><expr pos:start="883:25" pos:end="883:48"><call pos:start="883:25" pos:end="883:48"><name pos:start="883:25" pos:end="883:44">gen_op_store_FT0_fpr</name><argument_list pos:start="883:45" pos:end="883:48">(<argument pos:start="883:46" pos:end="883:47"><expr pos:start="883:46" pos:end="883:47"><name pos:start="883:46" pos:end="883:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="885:25" pos:end="885:30">break;</break>

                    <case pos:start="887:21" pos:end="887:30">case <expr pos:start="887:26" pos:end="887:29"><literal type="number" pos:start="887:26" pos:end="887:29">0x4e</literal></expr>:</case>

                        <expr_stmt pos:start="889:25" pos:end="889:57"><expr pos:start="889:25" pos:end="889:56"><call pos:start="889:25" pos:end="889:56"><name pos:start="889:25" pos:end="889:43">gen_op_load_fpr_DT0</name><argument_list pos:start="889:44" pos:end="889:56">(<argument pos:start="889:45" pos:end="889:55"><expr pos:start="889:45" pos:end="889:55"><call pos:start="889:45" pos:end="889:55"><name pos:start="889:45" pos:end="889:50">DFPREG</name><argument_list pos:start="889:51" pos:end="889:55">(<argument pos:start="889:52" pos:end="889:54"><expr pos:start="889:52" pos:end="889:54"><name pos:start="889:52" pos:end="889:54">rs1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="891:25" pos:end="891:57"><expr pos:start="891:25" pos:end="891:56"><call pos:start="891:25" pos:end="891:56"><name pos:start="891:25" pos:end="891:43">gen_op_load_fpr_DT1</name><argument_list pos:start="891:44" pos:end="891:56">(<argument pos:start="891:45" pos:end="891:55"><expr pos:start="891:45" pos:end="891:55"><call pos:start="891:45" pos:end="891:55"><name pos:start="891:45" pos:end="891:50">DFPREG</name><argument_list pos:start="891:51" pos:end="891:55">(<argument pos:start="891:52" pos:end="891:54"><expr pos:start="891:52" pos:end="891:54"><name pos:start="891:52" pos:end="891:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="893:25" pos:end="893:39"><expr pos:start="893:25" pos:end="893:38"><call pos:start="893:25" pos:end="893:38"><name pos:start="893:25" pos:end="893:36">gen_op_fdivd</name><argument_list pos:start="893:37" pos:end="893:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="895:25" pos:end="895:57"><expr pos:start="895:25" pos:end="895:56"><call pos:start="895:25" pos:end="895:56"><name pos:start="895:25" pos:end="895:44">gen_op_store_DT0_fpr</name><argument_list pos:start="895:45" pos:end="895:56">(<argument pos:start="895:46" pos:end="895:55"><expr pos:start="895:46" pos:end="895:55"><call pos:start="895:46" pos:end="895:55"><name pos:start="895:46" pos:end="895:51">DFPREG</name><argument_list pos:start="895:52" pos:end="895:55">(<argument pos:start="895:53" pos:end="895:54"><expr pos:start="895:53" pos:end="895:54"><name pos:start="895:53" pos:end="895:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="897:25" pos:end="897:30">break;</break>

                    <case pos:start="899:21" pos:end="899:30">case <expr pos:start="899:26" pos:end="899:29"><literal type="number" pos:start="899:26" pos:end="899:29">0x4f</literal></expr>:</case> <comment type="block" pos:start="899:32" pos:end="899:42">/* fdivq */</comment>

                        <goto pos:start="901:25" pos:end="901:39">goto <name pos:start="901:30" pos:end="901:38">nfpu_insn</name>;</goto>

                    <case pos:start="903:21" pos:end="903:30">case <expr pos:start="903:26" pos:end="903:29"><literal type="number" pos:start="903:26" pos:end="903:29">0x69</literal></expr>:</case>

                        <expr_stmt pos:start="905:25" pos:end="905:49"><expr pos:start="905:25" pos:end="905:48"><call pos:start="905:25" pos:end="905:48"><name pos:start="905:25" pos:end="905:43">gen_op_load_fpr_FT0</name><argument_list pos:start="905:44" pos:end="905:48">(<argument pos:start="905:45" pos:end="905:47"><expr pos:start="905:45" pos:end="905:47"><name pos:start="905:45" pos:end="905:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="907:25" pos:end="907:49"><expr pos:start="907:25" pos:end="907:48"><call pos:start="907:25" pos:end="907:48"><name pos:start="907:25" pos:end="907:43">gen_op_load_fpr_FT1</name><argument_list pos:start="907:44" pos:end="907:48">(<argument pos:start="907:45" pos:end="907:47"><expr pos:start="907:45" pos:end="907:47"><name pos:start="907:45" pos:end="907:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="909:25" pos:end="909:40"><expr pos:start="909:25" pos:end="909:39"><call pos:start="909:25" pos:end="909:39"><name pos:start="909:25" pos:end="909:37">gen_op_fsmuld</name><argument_list pos:start="909:38" pos:end="909:39">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="911:25" pos:end="911:57"><expr pos:start="911:25" pos:end="911:56"><call pos:start="911:25" pos:end="911:56"><name pos:start="911:25" pos:end="911:44">gen_op_store_DT0_fpr</name><argument_list pos:start="911:45" pos:end="911:56">(<argument pos:start="911:46" pos:end="911:55"><expr pos:start="911:46" pos:end="911:55"><call pos:start="911:46" pos:end="911:55"><name pos:start="911:46" pos:end="911:51">DFPREG</name><argument_list pos:start="911:52" pos:end="911:55">(<argument pos:start="911:53" pos:end="911:54"><expr pos:start="911:53" pos:end="911:54"><name pos:start="911:53" pos:end="911:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="913:25" pos:end="913:30">break;</break>

                    <case pos:start="915:21" pos:end="915:30">case <expr pos:start="915:26" pos:end="915:29"><literal type="number" pos:start="915:26" pos:end="915:29">0x6e</literal></expr>:</case> <comment type="block" pos:start="915:32" pos:end="915:43">/* fdmulq */</comment>

                        <goto pos:start="917:25" pos:end="917:39">goto <name pos:start="917:30" pos:end="917:38">nfpu_insn</name>;</goto>

                    <case pos:start="919:21" pos:end="919:30">case <expr pos:start="919:26" pos:end="919:29"><literal type="number" pos:start="919:26" pos:end="919:29">0xc4</literal></expr>:</case>

                        <expr_stmt pos:start="921:25" pos:end="921:49"><expr pos:start="921:25" pos:end="921:48"><call pos:start="921:25" pos:end="921:48"><name pos:start="921:25" pos:end="921:43">gen_op_load_fpr_FT1</name><argument_list pos:start="921:44" pos:end="921:48">(<argument pos:start="921:45" pos:end="921:47"><expr pos:start="921:45" pos:end="921:47"><name pos:start="921:45" pos:end="921:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="923:25" pos:end="923:39"><expr pos:start="923:25" pos:end="923:38"><call pos:start="923:25" pos:end="923:38"><name pos:start="923:25" pos:end="923:36">gen_op_fitos</name><argument_list pos:start="923:37" pos:end="923:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="925:25" pos:end="925:49"><expr pos:start="925:25" pos:end="925:48"><call pos:start="925:25" pos:end="925:48"><name pos:start="925:25" pos:end="925:44">gen_op_store_FT0_fpr</name><argument_list pos:start="925:45" pos:end="925:48">(<argument pos:start="925:46" pos:end="925:47"><expr pos:start="925:46" pos:end="925:47"><name pos:start="925:46" pos:end="925:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="927:25" pos:end="927:30">break;</break>

                    <case pos:start="929:21" pos:end="929:30">case <expr pos:start="929:26" pos:end="929:29"><literal type="number" pos:start="929:26" pos:end="929:29">0xc6</literal></expr>:</case>

                        <expr_stmt pos:start="931:25" pos:end="931:57"><expr pos:start="931:25" pos:end="931:56"><call pos:start="931:25" pos:end="931:56"><name pos:start="931:25" pos:end="931:43">gen_op_load_fpr_DT1</name><argument_list pos:start="931:44" pos:end="931:56">(<argument pos:start="931:45" pos:end="931:55"><expr pos:start="931:45" pos:end="931:55"><call pos:start="931:45" pos:end="931:55"><name pos:start="931:45" pos:end="931:50">DFPREG</name><argument_list pos:start="931:51" pos:end="931:55">(<argument pos:start="931:52" pos:end="931:54"><expr pos:start="931:52" pos:end="931:54"><name pos:start="931:52" pos:end="931:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="933:25" pos:end="933:39"><expr pos:start="933:25" pos:end="933:38"><call pos:start="933:25" pos:end="933:38"><name pos:start="933:25" pos:end="933:36">gen_op_fdtos</name><argument_list pos:start="933:37" pos:end="933:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="935:25" pos:end="935:49"><expr pos:start="935:25" pos:end="935:48"><call pos:start="935:25" pos:end="935:48"><name pos:start="935:25" pos:end="935:44">gen_op_store_FT0_fpr</name><argument_list pos:start="935:45" pos:end="935:48">(<argument pos:start="935:46" pos:end="935:47"><expr pos:start="935:46" pos:end="935:47"><name pos:start="935:46" pos:end="935:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="937:25" pos:end="937:30">break;</break>

                    <case pos:start="939:21" pos:end="939:30">case <expr pos:start="939:26" pos:end="939:29"><literal type="number" pos:start="939:26" pos:end="939:29">0xc7</literal></expr>:</case> <comment type="block" pos:start="939:32" pos:end="939:42">/* fqtos */</comment>

                        <goto pos:start="941:25" pos:end="941:39">goto <name pos:start="941:30" pos:end="941:38">nfpu_insn</name>;</goto>

                    <case pos:start="943:21" pos:end="943:30">case <expr pos:start="943:26" pos:end="943:29"><literal type="number" pos:start="943:26" pos:end="943:29">0xc8</literal></expr>:</case>

                        <expr_stmt pos:start="945:25" pos:end="945:49"><expr pos:start="945:25" pos:end="945:48"><call pos:start="945:25" pos:end="945:48"><name pos:start="945:25" pos:end="945:43">gen_op_load_fpr_FT1</name><argument_list pos:start="945:44" pos:end="945:48">(<argument pos:start="945:45" pos:end="945:47"><expr pos:start="945:45" pos:end="945:47"><name pos:start="945:45" pos:end="945:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="947:25" pos:end="947:39"><expr pos:start="947:25" pos:end="947:38"><call pos:start="947:25" pos:end="947:38"><name pos:start="947:25" pos:end="947:36">gen_op_fitod</name><argument_list pos:start="947:37" pos:end="947:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="949:25" pos:end="949:57"><expr pos:start="949:25" pos:end="949:56"><call pos:start="949:25" pos:end="949:56"><name pos:start="949:25" pos:end="949:44">gen_op_store_DT0_fpr</name><argument_list pos:start="949:45" pos:end="949:56">(<argument pos:start="949:46" pos:end="949:55"><expr pos:start="949:46" pos:end="949:55"><call pos:start="949:46" pos:end="949:55"><name pos:start="949:46" pos:end="949:51">DFPREG</name><argument_list pos:start="949:52" pos:end="949:55">(<argument pos:start="949:53" pos:end="949:54"><expr pos:start="949:53" pos:end="949:54"><name pos:start="949:53" pos:end="949:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="951:25" pos:end="951:30">break;</break>

                    <case pos:start="953:21" pos:end="953:30">case <expr pos:start="953:26" pos:end="953:29"><literal type="number" pos:start="953:26" pos:end="953:29">0xc9</literal></expr>:</case>

                        <expr_stmt pos:start="955:25" pos:end="955:49"><expr pos:start="955:25" pos:end="955:48"><call pos:start="955:25" pos:end="955:48"><name pos:start="955:25" pos:end="955:43">gen_op_load_fpr_FT1</name><argument_list pos:start="955:44" pos:end="955:48">(<argument pos:start="955:45" pos:end="955:47"><expr pos:start="955:45" pos:end="955:47"><name pos:start="955:45" pos:end="955:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="957:25" pos:end="957:39"><expr pos:start="957:25" pos:end="957:38"><call pos:start="957:25" pos:end="957:38"><name pos:start="957:25" pos:end="957:36">gen_op_fstod</name><argument_list pos:start="957:37" pos:end="957:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="959:25" pos:end="959:57"><expr pos:start="959:25" pos:end="959:56"><call pos:start="959:25" pos:end="959:56"><name pos:start="959:25" pos:end="959:44">gen_op_store_DT0_fpr</name><argument_list pos:start="959:45" pos:end="959:56">(<argument pos:start="959:46" pos:end="959:55"><expr pos:start="959:46" pos:end="959:55"><call pos:start="959:46" pos:end="959:55"><name pos:start="959:46" pos:end="959:51">DFPREG</name><argument_list pos:start="959:52" pos:end="959:55">(<argument pos:start="959:53" pos:end="959:54"><expr pos:start="959:53" pos:end="959:54"><name pos:start="959:53" pos:end="959:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="961:25" pos:end="961:30">break;</break>

                    <case pos:start="963:21" pos:end="963:30">case <expr pos:start="963:26" pos:end="963:29"><literal type="number" pos:start="963:26" pos:end="963:29">0xcb</literal></expr>:</case> <comment type="block" pos:start="963:32" pos:end="963:42">/* fqtod */</comment>

                        <goto pos:start="965:25" pos:end="965:39">goto <name pos:start="965:30" pos:end="965:38">nfpu_insn</name>;</goto>

                    <case pos:start="967:21" pos:end="967:30">case <expr pos:start="967:26" pos:end="967:29"><literal type="number" pos:start="967:26" pos:end="967:29">0xcc</literal></expr>:</case> <comment type="block" pos:start="967:32" pos:end="967:42">/* fitoq */</comment>

                        <goto pos:start="969:25" pos:end="969:39">goto <name pos:start="969:30" pos:end="969:38">nfpu_insn</name>;</goto>

                    <case pos:start="971:21" pos:end="971:30">case <expr pos:start="971:26" pos:end="971:29"><literal type="number" pos:start="971:26" pos:end="971:29">0xcd</literal></expr>:</case> <comment type="block" pos:start="971:32" pos:end="971:42">/* fstoq */</comment>

                        <goto pos:start="973:25" pos:end="973:39">goto <name pos:start="973:30" pos:end="973:38">nfpu_insn</name>;</goto>

                    <case pos:start="975:21" pos:end="975:30">case <expr pos:start="975:26" pos:end="975:29"><literal type="number" pos:start="975:26" pos:end="975:29">0xce</literal></expr>:</case> <comment type="block" pos:start="975:32" pos:end="975:42">/* fdtoq */</comment>

                        <goto pos:start="977:25" pos:end="977:39">goto <name pos:start="977:30" pos:end="977:38">nfpu_insn</name>;</goto>

                    <case pos:start="979:21" pos:end="979:30">case <expr pos:start="979:26" pos:end="979:29"><literal type="number" pos:start="979:26" pos:end="979:29">0xd1</literal></expr>:</case>

                        <expr_stmt pos:start="981:25" pos:end="981:49"><expr pos:start="981:25" pos:end="981:48"><call pos:start="981:25" pos:end="981:48"><name pos:start="981:25" pos:end="981:43">gen_op_load_fpr_FT1</name><argument_list pos:start="981:44" pos:end="981:48">(<argument pos:start="981:45" pos:end="981:47"><expr pos:start="981:45" pos:end="981:47"><name pos:start="981:45" pos:end="981:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="983:25" pos:end="983:39"><expr pos:start="983:25" pos:end="983:38"><call pos:start="983:25" pos:end="983:38"><name pos:start="983:25" pos:end="983:36">gen_op_fstoi</name><argument_list pos:start="983:37" pos:end="983:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="985:25" pos:end="985:49"><expr pos:start="985:25" pos:end="985:48"><call pos:start="985:25" pos:end="985:48"><name pos:start="985:25" pos:end="985:44">gen_op_store_FT0_fpr</name><argument_list pos:start="985:45" pos:end="985:48">(<argument pos:start="985:46" pos:end="985:47"><expr pos:start="985:46" pos:end="985:47"><name pos:start="985:46" pos:end="985:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="987:25" pos:end="987:30">break;</break>

                    <case pos:start="989:21" pos:end="989:30">case <expr pos:start="989:26" pos:end="989:29"><literal type="number" pos:start="989:26" pos:end="989:29">0xd2</literal></expr>:</case>

                        <expr_stmt pos:start="991:25" pos:end="991:49"><expr pos:start="991:25" pos:end="991:48"><call pos:start="991:25" pos:end="991:48"><name pos:start="991:25" pos:end="991:43">gen_op_load_fpr_DT1</name><argument_list pos:start="991:44" pos:end="991:48">(<argument pos:start="991:45" pos:end="991:47"><expr pos:start="991:45" pos:end="991:47"><name pos:start="991:45" pos:end="991:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="993:25" pos:end="993:39"><expr pos:start="993:25" pos:end="993:38"><call pos:start="993:25" pos:end="993:38"><name pos:start="993:25" pos:end="993:36">gen_op_fdtoi</name><argument_list pos:start="993:37" pos:end="993:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="995:25" pos:end="995:49"><expr pos:start="995:25" pos:end="995:48"><call pos:start="995:25" pos:end="995:48"><name pos:start="995:25" pos:end="995:44">gen_op_store_FT0_fpr</name><argument_list pos:start="995:45" pos:end="995:48">(<argument pos:start="995:46" pos:end="995:47"><expr pos:start="995:46" pos:end="995:47"><name pos:start="995:46" pos:end="995:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="997:25" pos:end="997:30">break;</break>

                    <case pos:start="999:21" pos:end="999:30">case <expr pos:start="999:26" pos:end="999:29"><literal type="number" pos:start="999:26" pos:end="999:29">0xd3</literal></expr>:</case> <comment type="block" pos:start="999:32" pos:end="999:42">/* fqtoi */</comment>

                        <goto pos:start="1001:25" pos:end="1004:0">goto <name pos:start="1001:30" pos:end="1001:38">nfpu_insn</name>;</goto>

<cpp:ifdef pos:start="1003:1" pos:end="1003:21">#<cpp:directive pos:start="1003:2" pos:end="1003:6">ifdef</cpp:directive> <name pos:start="1003:8" pos:end="1003:21">TARGET_SPARC64</name></cpp:ifdef>

                    <case pos:start="1005:21" pos:end="1005:29">case <expr pos:start="1005:26" pos:end="1005:28"><literal type="number" pos:start="1005:26" pos:end="1005:28">0x2</literal></expr>:</case> <comment type="block" pos:start="1005:31" pos:end="1005:44">/* V9 fmovd */</comment>

                        <expr_stmt pos:start="1007:25" pos:end="1007:57"><expr pos:start="1007:25" pos:end="1007:56"><call pos:start="1007:25" pos:end="1007:56"><name pos:start="1007:25" pos:end="1007:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1007:44" pos:end="1007:56">(<argument pos:start="1007:45" pos:end="1007:55"><expr pos:start="1007:45" pos:end="1007:55"><call pos:start="1007:45" pos:end="1007:55"><name pos:start="1007:45" pos:end="1007:50">DFPREG</name><argument_list pos:start="1007:51" pos:end="1007:55">(<argument pos:start="1007:52" pos:end="1007:54"><expr pos:start="1007:52" pos:end="1007:54"><name pos:start="1007:52" pos:end="1007:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1009:25" pos:end="1009:57"><expr pos:start="1009:25" pos:end="1009:56"><call pos:start="1009:25" pos:end="1009:56"><name pos:start="1009:25" pos:end="1009:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1009:45" pos:end="1009:56">(<argument pos:start="1009:46" pos:end="1009:55"><expr pos:start="1009:46" pos:end="1009:55"><call pos:start="1009:46" pos:end="1009:55"><name pos:start="1009:46" pos:end="1009:51">DFPREG</name><argument_list pos:start="1009:52" pos:end="1009:55">(<argument pos:start="1009:53" pos:end="1009:54"><expr pos:start="1009:53" pos:end="1009:54"><name pos:start="1009:53" pos:end="1009:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1011:25" pos:end="1011:30">break;</break>

                    <case pos:start="1013:21" pos:end="1013:29">case <expr pos:start="1013:26" pos:end="1013:28"><literal type="number" pos:start="1013:26" pos:end="1013:28">0x6</literal></expr>:</case> <comment type="block" pos:start="1013:31" pos:end="1013:44">/* V9 fnegd */</comment>

                        <expr_stmt pos:start="1015:25" pos:end="1015:57"><expr pos:start="1015:25" pos:end="1015:56"><call pos:start="1015:25" pos:end="1015:56"><name pos:start="1015:25" pos:end="1015:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1015:44" pos:end="1015:56">(<argument pos:start="1015:45" pos:end="1015:55"><expr pos:start="1015:45" pos:end="1015:55"><call pos:start="1015:45" pos:end="1015:55"><name pos:start="1015:45" pos:end="1015:50">DFPREG</name><argument_list pos:start="1015:51" pos:end="1015:55">(<argument pos:start="1015:52" pos:end="1015:54"><expr pos:start="1015:52" pos:end="1015:54"><name pos:start="1015:52" pos:end="1015:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1017:25" pos:end="1017:39"><expr pos:start="1017:25" pos:end="1017:38"><call pos:start="1017:25" pos:end="1017:38"><name pos:start="1017:25" pos:end="1017:36">gen_op_fnegd</name><argument_list pos:start="1017:37" pos:end="1017:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1019:25" pos:end="1019:57"><expr pos:start="1019:25" pos:end="1019:56"><call pos:start="1019:25" pos:end="1019:56"><name pos:start="1019:25" pos:end="1019:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1019:45" pos:end="1019:56">(<argument pos:start="1019:46" pos:end="1019:55"><expr pos:start="1019:46" pos:end="1019:55"><call pos:start="1019:46" pos:end="1019:55"><name pos:start="1019:46" pos:end="1019:51">DFPREG</name><argument_list pos:start="1019:52" pos:end="1019:55">(<argument pos:start="1019:53" pos:end="1019:54"><expr pos:start="1019:53" pos:end="1019:54"><name pos:start="1019:53" pos:end="1019:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1021:25" pos:end="1021:30">break;</break>

                    <case pos:start="1023:21" pos:end="1023:29">case <expr pos:start="1023:26" pos:end="1023:28"><literal type="number" pos:start="1023:26" pos:end="1023:28">0xa</literal></expr>:</case> <comment type="block" pos:start="1023:31" pos:end="1023:44">/* V9 fabsd */</comment>

                        <expr_stmt pos:start="1025:25" pos:end="1025:57"><expr pos:start="1025:25" pos:end="1025:56"><call pos:start="1025:25" pos:end="1025:56"><name pos:start="1025:25" pos:end="1025:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1025:44" pos:end="1025:56">(<argument pos:start="1025:45" pos:end="1025:55"><expr pos:start="1025:45" pos:end="1025:55"><call pos:start="1025:45" pos:end="1025:55"><name pos:start="1025:45" pos:end="1025:50">DFPREG</name><argument_list pos:start="1025:51" pos:end="1025:55">(<argument pos:start="1025:52" pos:end="1025:54"><expr pos:start="1025:52" pos:end="1025:54"><name pos:start="1025:52" pos:end="1025:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1027:25" pos:end="1027:39"><expr pos:start="1027:25" pos:end="1027:38"><call pos:start="1027:25" pos:end="1027:38"><name pos:start="1027:25" pos:end="1027:36">gen_op_fabsd</name><argument_list pos:start="1027:37" pos:end="1027:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1029:25" pos:end="1029:57"><expr pos:start="1029:25" pos:end="1029:56"><call pos:start="1029:25" pos:end="1029:56"><name pos:start="1029:25" pos:end="1029:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1029:45" pos:end="1029:56">(<argument pos:start="1029:46" pos:end="1029:55"><expr pos:start="1029:46" pos:end="1029:55"><call pos:start="1029:46" pos:end="1029:55"><name pos:start="1029:46" pos:end="1029:51">DFPREG</name><argument_list pos:start="1029:52" pos:end="1029:55">(<argument pos:start="1029:53" pos:end="1029:54"><expr pos:start="1029:53" pos:end="1029:54"><name pos:start="1029:53" pos:end="1029:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1031:25" pos:end="1031:30">break;</break>

                    <case pos:start="1033:21" pos:end="1033:30">case <expr pos:start="1033:26" pos:end="1033:29"><literal type="number" pos:start="1033:26" pos:end="1033:29">0x81</literal></expr>:</case> <comment type="block" pos:start="1033:32" pos:end="1033:45">/* V9 fstox */</comment>

                        <expr_stmt pos:start="1035:25" pos:end="1035:49"><expr pos:start="1035:25" pos:end="1035:48"><call pos:start="1035:25" pos:end="1035:48"><name pos:start="1035:25" pos:end="1035:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1035:44" pos:end="1035:48">(<argument pos:start="1035:45" pos:end="1035:47"><expr pos:start="1035:45" pos:end="1035:47"><name pos:start="1035:45" pos:end="1035:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1037:25" pos:end="1037:39"><expr pos:start="1037:25" pos:end="1037:38"><call pos:start="1037:25" pos:end="1037:38"><name pos:start="1037:25" pos:end="1037:36">gen_op_fstox</name><argument_list pos:start="1037:37" pos:end="1037:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1039:25" pos:end="1039:57"><expr pos:start="1039:25" pos:end="1039:56"><call pos:start="1039:25" pos:end="1039:56"><name pos:start="1039:25" pos:end="1039:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1039:45" pos:end="1039:56">(<argument pos:start="1039:46" pos:end="1039:55"><expr pos:start="1039:46" pos:end="1039:55"><call pos:start="1039:46" pos:end="1039:55"><name pos:start="1039:46" pos:end="1039:51">DFPREG</name><argument_list pos:start="1039:52" pos:end="1039:55">(<argument pos:start="1039:53" pos:end="1039:54"><expr pos:start="1039:53" pos:end="1039:54"><name pos:start="1039:53" pos:end="1039:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1041:25" pos:end="1041:30">break;</break>

                    <case pos:start="1043:21" pos:end="1043:30">case <expr pos:start="1043:26" pos:end="1043:29"><literal type="number" pos:start="1043:26" pos:end="1043:29">0x82</literal></expr>:</case> <comment type="block" pos:start="1043:32" pos:end="1043:45">/* V9 fdtox */</comment>

                        <expr_stmt pos:start="1045:25" pos:end="1045:57"><expr pos:start="1045:25" pos:end="1045:56"><call pos:start="1045:25" pos:end="1045:56"><name pos:start="1045:25" pos:end="1045:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1045:44" pos:end="1045:56">(<argument pos:start="1045:45" pos:end="1045:55"><expr pos:start="1045:45" pos:end="1045:55"><call pos:start="1045:45" pos:end="1045:55"><name pos:start="1045:45" pos:end="1045:50">DFPREG</name><argument_list pos:start="1045:51" pos:end="1045:55">(<argument pos:start="1045:52" pos:end="1045:54"><expr pos:start="1045:52" pos:end="1045:54"><name pos:start="1045:52" pos:end="1045:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1047:25" pos:end="1047:39"><expr pos:start="1047:25" pos:end="1047:38"><call pos:start="1047:25" pos:end="1047:38"><name pos:start="1047:25" pos:end="1047:36">gen_op_fdtox</name><argument_list pos:start="1047:37" pos:end="1047:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1049:25" pos:end="1049:57"><expr pos:start="1049:25" pos:end="1049:56"><call pos:start="1049:25" pos:end="1049:56"><name pos:start="1049:25" pos:end="1049:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1049:45" pos:end="1049:56">(<argument pos:start="1049:46" pos:end="1049:55"><expr pos:start="1049:46" pos:end="1049:55"><call pos:start="1049:46" pos:end="1049:55"><name pos:start="1049:46" pos:end="1049:51">DFPREG</name><argument_list pos:start="1049:52" pos:end="1049:55">(<argument pos:start="1049:53" pos:end="1049:54"><expr pos:start="1049:53" pos:end="1049:54"><name pos:start="1049:53" pos:end="1049:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1051:25" pos:end="1051:30">break;</break>

                    <case pos:start="1053:21" pos:end="1053:30">case <expr pos:start="1053:26" pos:end="1053:29"><literal type="number" pos:start="1053:26" pos:end="1053:29">0x84</literal></expr>:</case> <comment type="block" pos:start="1053:32" pos:end="1053:45">/* V9 fxtos */</comment>

                        <expr_stmt pos:start="1055:25" pos:end="1055:57"><expr pos:start="1055:25" pos:end="1055:56"><call pos:start="1055:25" pos:end="1055:56"><name pos:start="1055:25" pos:end="1055:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1055:44" pos:end="1055:56">(<argument pos:start="1055:45" pos:end="1055:55"><expr pos:start="1055:45" pos:end="1055:55"><call pos:start="1055:45" pos:end="1055:55"><name pos:start="1055:45" pos:end="1055:50">DFPREG</name><argument_list pos:start="1055:51" pos:end="1055:55">(<argument pos:start="1055:52" pos:end="1055:54"><expr pos:start="1055:52" pos:end="1055:54"><name pos:start="1055:52" pos:end="1055:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1057:25" pos:end="1057:39"><expr pos:start="1057:25" pos:end="1057:38"><call pos:start="1057:25" pos:end="1057:38"><name pos:start="1057:25" pos:end="1057:36">gen_op_fxtos</name><argument_list pos:start="1057:37" pos:end="1057:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1059:25" pos:end="1059:49"><expr pos:start="1059:25" pos:end="1059:48"><call pos:start="1059:25" pos:end="1059:48"><name pos:start="1059:25" pos:end="1059:44">gen_op_store_FT0_fpr</name><argument_list pos:start="1059:45" pos:end="1059:48">(<argument pos:start="1059:46" pos:end="1059:47"><expr pos:start="1059:46" pos:end="1059:47"><name pos:start="1059:46" pos:end="1059:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1061:25" pos:end="1061:30">break;</break>

                    <case pos:start="1063:21" pos:end="1063:30">case <expr pos:start="1063:26" pos:end="1063:29"><literal type="number" pos:start="1063:26" pos:end="1063:29">0x88</literal></expr>:</case> <comment type="block" pos:start="1063:32" pos:end="1063:45">/* V9 fxtod */</comment>

                        <expr_stmt pos:start="1065:25" pos:end="1065:57"><expr pos:start="1065:25" pos:end="1065:56"><call pos:start="1065:25" pos:end="1065:56"><name pos:start="1065:25" pos:end="1065:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1065:44" pos:end="1065:56">(<argument pos:start="1065:45" pos:end="1065:55"><expr pos:start="1065:45" pos:end="1065:55"><call pos:start="1065:45" pos:end="1065:55"><name pos:start="1065:45" pos:end="1065:50">DFPREG</name><argument_list pos:start="1065:51" pos:end="1065:55">(<argument pos:start="1065:52" pos:end="1065:54"><expr pos:start="1065:52" pos:end="1065:54"><name pos:start="1065:52" pos:end="1065:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1067:25" pos:end="1067:39"><expr pos:start="1067:25" pos:end="1067:38"><call pos:start="1067:25" pos:end="1067:38"><name pos:start="1067:25" pos:end="1067:36">gen_op_fxtod</name><argument_list pos:start="1067:37" pos:end="1067:38">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1069:25" pos:end="1069:57"><expr pos:start="1069:25" pos:end="1069:56"><call pos:start="1069:25" pos:end="1069:56"><name pos:start="1069:25" pos:end="1069:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1069:45" pos:end="1069:56">(<argument pos:start="1069:46" pos:end="1069:55"><expr pos:start="1069:46" pos:end="1069:55"><call pos:start="1069:46" pos:end="1069:55"><name pos:start="1069:46" pos:end="1069:51">DFPREG</name><argument_list pos:start="1069:52" pos:end="1069:55">(<argument pos:start="1069:53" pos:end="1069:54"><expr pos:start="1069:53" pos:end="1069:54"><name pos:start="1069:53" pos:end="1069:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1071:25" pos:end="1071:30">break;</break>

                    <case pos:start="1073:21" pos:end="1073:29">case <expr pos:start="1073:26" pos:end="1073:28"><literal type="number" pos:start="1073:26" pos:end="1073:28">0x3</literal></expr>:</case> <comment type="block" pos:start="1073:31" pos:end="1073:44">/* V9 fmovq */</comment>

                    <case pos:start="1075:21" pos:end="1075:29">case <expr pos:start="1075:26" pos:end="1075:28"><literal type="number" pos:start="1075:26" pos:end="1075:28">0x7</literal></expr>:</case> <comment type="block" pos:start="1075:31" pos:end="1075:44">/* V9 fnegq */</comment>

                    <case pos:start="1077:21" pos:end="1077:29">case <expr pos:start="1077:26" pos:end="1077:28"><literal type="number" pos:start="1077:26" pos:end="1077:28">0xb</literal></expr>:</case> <comment type="block" pos:start="1077:31" pos:end="1077:44">/* V9 fabsq */</comment>

                    <case pos:start="1079:21" pos:end="1079:30">case <expr pos:start="1079:26" pos:end="1079:29"><literal type="number" pos:start="1079:26" pos:end="1079:29">0x83</literal></expr>:</case> <comment type="block" pos:start="1079:32" pos:end="1079:45">/* V9 fqtox */</comment>

                    <case pos:start="1081:21" pos:end="1081:30">case <expr pos:start="1081:26" pos:end="1081:29"><literal type="number" pos:start="1081:26" pos:end="1081:29">0x8c</literal></expr>:</case> <comment type="block" pos:start="1081:32" pos:end="1081:45">/* V9 fxtoq */</comment>

                        <goto pos:start="1083:25" pos:end="1086:0">goto <name pos:start="1083:30" pos:end="1083:38">nfpu_insn</name>;</goto>

<cpp:endif pos:start="1085:1" pos:end="1085:6">#<cpp:directive pos:start="1085:2" pos:end="1085:6">endif</cpp:directive></cpp:endif>

                    <default pos:start="1087:21" pos:end="1087:28">default:</default>

                        <goto pos:start="1089:25" pos:end="1089:42">goto <name pos:start="1089:30" pos:end="1089:41">illegal_insn</name>;</goto>

                </block_content>}</block></switch>

            </block_content>}</block></if> <if type="elseif" pos:start="1093:15" pos:end="1501:13">else if <condition pos:start="1093:23" pos:end="1093:35">(<expr pos:start="1093:24" pos:end="1093:34"><name pos:start="1093:24" pos:end="1093:26">xop</name> <operator pos:start="1093:28" pos:end="1093:29">==</operator> <literal type="number" pos:start="1093:31" pos:end="1093:34">0x35</literal></expr>)</condition> <block pos:start="1093:37" pos:end="1501:13">{<block_content pos:start="1097:17" pos:end="1500:0">   <comment type="block" pos:start="1093:41" pos:end="1093:60">/* FPU Operations */</comment>

<cpp:ifdef pos:start="1095:1" pos:end="1095:21">#<cpp:directive pos:start="1095:2" pos:end="1095:6">ifdef</cpp:directive> <name pos:start="1095:8" pos:end="1095:21">TARGET_SPARC64</name></cpp:ifdef>

                <decl_stmt pos:start="1097:17" pos:end="1100:0"><decl pos:start="1097:17" pos:end="1097:24"><type pos:start="1097:17" pos:end="1097:19"><name pos:start="1097:17" pos:end="1097:19">int</name></type> <name pos:start="1097:21" pos:end="1097:24">cond</name></decl>;</decl_stmt>

<cpp:endif pos:start="1099:1" pos:end="1099:6">#<cpp:directive pos:start="1099:2" pos:end="1099:6">endif</cpp:directive></cpp:endif>

                <if_stmt pos:start="1101:17" pos:end="1103:34"><if pos:start="1101:17" pos:end="1103:34">if <condition pos:start="1101:20" pos:end="1101:41">(<expr pos:start="1101:21" pos:end="1101:40"><call pos:start="1101:21" pos:end="1101:40"><name pos:start="1101:21" pos:end="1101:36">gen_trap_ifnofpu</name><argument_list pos:start="1101:37" pos:end="1101:40">(<argument pos:start="1101:38" pos:end="1101:39"><expr pos:start="1101:38" pos:end="1101:39"><name pos:start="1101:38" pos:end="1101:39">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1103:21" pos:end="1103:34"><block_content pos:start="1103:21" pos:end="1103:34">

                    <goto pos:start="1103:21" pos:end="1103:34">goto <name pos:start="1103:26" pos:end="1103:33">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1105:17" pos:end="1105:49"><expr pos:start="1105:17" pos:end="1105:48"><call pos:start="1105:17" pos:end="1105:48"><name pos:start="1105:17" pos:end="1105:46">gen_op_clear_ieee_excp_and_FTT</name><argument_list pos:start="1105:47" pos:end="1105:48">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1107:17" pos:end="1107:46"><expr pos:start="1107:17" pos:end="1107:45"><name pos:start="1107:17" pos:end="1107:19">rs1</name> <operator pos:start="1107:21" pos:end="1107:21">=</operator> <call pos:start="1107:23" pos:end="1107:45"><name pos:start="1107:23" pos:end="1107:31">GET_FIELD</name><argument_list pos:start="1107:32" pos:end="1107:45">(<argument pos:start="1107:33" pos:end="1107:36"><expr pos:start="1107:33" pos:end="1107:36"><name pos:start="1107:33" pos:end="1107:36">insn</name></expr></argument>, <argument pos:start="1107:39" pos:end="1107:40"><expr pos:start="1107:39" pos:end="1107:40"><literal type="number" pos:start="1107:39" pos:end="1107:40">13</literal></expr></argument>, <argument pos:start="1107:43" pos:end="1107:44"><expr pos:start="1107:43" pos:end="1107:44"><literal type="number" pos:start="1107:43" pos:end="1107:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1109:17" pos:end="1109:46"><expr pos:start="1109:17" pos:end="1109:45"><name pos:start="1109:17" pos:end="1109:19">rs2</name> <operator pos:start="1109:21" pos:end="1109:21">=</operator> <call pos:start="1109:23" pos:end="1109:45"><name pos:start="1109:23" pos:end="1109:31">GET_FIELD</name><argument_list pos:start="1109:32" pos:end="1109:45">(<argument pos:start="1109:33" pos:end="1109:36"><expr pos:start="1109:33" pos:end="1109:36"><name pos:start="1109:33" pos:end="1109:36">insn</name></expr></argument>, <argument pos:start="1109:39" pos:end="1109:40"><expr pos:start="1109:39" pos:end="1109:40"><literal type="number" pos:start="1109:39" pos:end="1109:40">27</literal></expr></argument>, <argument pos:start="1109:43" pos:end="1109:44"><expr pos:start="1109:43" pos:end="1109:44"><literal type="number" pos:start="1109:43" pos:end="1109:44">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1111:17" pos:end="1114:0"><expr pos:start="1111:17" pos:end="1111:45"><name pos:start="1111:17" pos:end="1111:19">xop</name> <operator pos:start="1111:21" pos:end="1111:21">=</operator> <call pos:start="1111:23" pos:end="1111:45"><name pos:start="1111:23" pos:end="1111:31">GET_FIELD</name><argument_list pos:start="1111:32" pos:end="1111:45">(<argument pos:start="1111:33" pos:end="1111:36"><expr pos:start="1111:33" pos:end="1111:36"><name pos:start="1111:33" pos:end="1111:36">insn</name></expr></argument>, <argument pos:start="1111:39" pos:end="1111:40"><expr pos:start="1111:39" pos:end="1111:40"><literal type="number" pos:start="1111:39" pos:end="1111:40">18</literal></expr></argument>, <argument pos:start="1111:43" pos:end="1111:44"><expr pos:start="1111:43" pos:end="1111:44"><literal type="number" pos:start="1111:43" pos:end="1111:44">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="1113:1" pos:end="1113:21">#<cpp:directive pos:start="1113:2" pos:end="1113:6">ifdef</cpp:directive> <name pos:start="1113:8" pos:end="1113:21">TARGET_SPARC64</name></cpp:ifdef>

                <if_stmt pos:start="1115:17" pos:end="1166:0"><if pos:start="1115:17" pos:end="1137:17">if <condition pos:start="1115:20" pos:end="1115:43">(<expr pos:start="1115:21" pos:end="1115:42"><operator pos:start="1115:21" pos:end="1115:21">(</operator><name pos:start="1115:22" pos:end="1115:24">xop</name> <operator pos:start="1115:26" pos:end="1115:26">&amp;</operator> <literal type="number" pos:start="1115:28" pos:end="1115:32">0x11f</literal><operator pos:start="1115:33" pos:end="1115:33">)</operator> <operator pos:start="1115:35" pos:end="1115:36">==</operator> <literal type="number" pos:start="1115:38" pos:end="1115:42">0x005</literal></expr>)</condition> <block pos:start="1115:45" pos:end="1137:17">{<block_content pos:start="1117:21" pos:end="1135:26"> <comment type="line" pos:start="1115:47" pos:end="1115:58">// V9 fmovsr</comment>

                    <expr_stmt pos:start="1117:21" pos:end="1117:54"><expr pos:start="1117:21" pos:end="1117:53"><name pos:start="1117:21" pos:end="1117:24">cond</name> <operator pos:start="1117:26" pos:end="1117:26">=</operator> <call pos:start="1117:28" pos:end="1117:53"><name pos:start="1117:28" pos:end="1117:39">GET_FIELD_SP</name><argument_list pos:start="1117:40" pos:end="1117:53">(<argument pos:start="1117:41" pos:end="1117:44"><expr pos:start="1117:41" pos:end="1117:44"><name pos:start="1117:41" pos:end="1117:44">insn</name></expr></argument>, <argument pos:start="1117:47" pos:end="1117:48"><expr pos:start="1117:47" pos:end="1117:48"><literal type="number" pos:start="1117:47" pos:end="1117:48">14</literal></expr></argument>, <argument pos:start="1117:51" pos:end="1117:52"><expr pos:start="1117:51" pos:end="1117:52"><literal type="number" pos:start="1117:51" pos:end="1117:52">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1119:21" pos:end="1119:44"><expr pos:start="1119:21" pos:end="1119:43"><call pos:start="1119:21" pos:end="1119:43"><name pos:start="1119:21" pos:end="1119:39">gen_op_load_fpr_FT0</name><argument_list pos:start="1119:40" pos:end="1119:43">(<argument pos:start="1119:41" pos:end="1119:42"><expr pos:start="1119:41" pos:end="1119:42"><name pos:start="1119:41" pos:end="1119:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1121:21" pos:end="1121:45"><expr pos:start="1121:21" pos:end="1121:44"><call pos:start="1121:21" pos:end="1121:44"><name pos:start="1121:21" pos:end="1121:39">gen_op_load_fpr_FT1</name><argument_list pos:start="1121:40" pos:end="1121:44">(<argument pos:start="1121:41" pos:end="1121:43"><expr pos:start="1121:41" pos:end="1121:43"><name pos:start="1121:41" pos:end="1121:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1123:21" pos:end="1123:50"><expr pos:start="1123:21" pos:end="1123:49"><name pos:start="1123:21" pos:end="1123:23">rs1</name> <operator pos:start="1123:25" pos:end="1123:25">=</operator> <call pos:start="1123:27" pos:end="1123:49"><name pos:start="1123:27" pos:end="1123:35">GET_FIELD</name><argument_list pos:start="1123:36" pos:end="1123:49">(<argument pos:start="1123:37" pos:end="1123:40"><expr pos:start="1123:37" pos:end="1123:40"><name pos:start="1123:37" pos:end="1123:40">insn</name></expr></argument>, <argument pos:start="1123:43" pos:end="1123:44"><expr pos:start="1123:43" pos:end="1123:44"><literal type="number" pos:start="1123:43" pos:end="1123:44">13</literal></expr></argument>, <argument pos:start="1123:47" pos:end="1123:48"><expr pos:start="1123:47" pos:end="1123:48"><literal type="number" pos:start="1123:47" pos:end="1123:48">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1125:21" pos:end="1125:41"><expr pos:start="1125:21" pos:end="1125:40"><call pos:start="1125:21" pos:end="1125:40"><name pos:start="1125:21" pos:end="1125:35">gen_movl_reg_T0</name><argument_list pos:start="1125:36" pos:end="1125:40">(<argument pos:start="1125:37" pos:end="1125:39"><expr pos:start="1125:37" pos:end="1125:39"><name pos:start="1125:37" pos:end="1125:39">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1127:21" pos:end="1127:33"><expr pos:start="1127:21" pos:end="1127:32"><call pos:start="1127:21" pos:end="1127:32"><name pos:start="1127:21" pos:end="1127:28">flush_T2</name><argument_list pos:start="1127:29" pos:end="1127:32">(<argument pos:start="1127:30" pos:end="1127:31"><expr pos:start="1127:30" pos:end="1127:31"><name pos:start="1127:30" pos:end="1127:31">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1129:21" pos:end="1129:39"><expr pos:start="1129:21" pos:end="1129:38"><call pos:start="1129:21" pos:end="1129:38"><name pos:start="1129:21" pos:end="1129:32">gen_cond_reg</name><argument_list pos:start="1129:33" pos:end="1129:38">(<argument pos:start="1129:34" pos:end="1129:37"><expr pos:start="1129:34" pos:end="1129:37"><name pos:start="1129:34" pos:end="1129:37">cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1131:21" pos:end="1131:38"><expr pos:start="1131:21" pos:end="1131:37"><call pos:start="1131:21" pos:end="1131:37"><name pos:start="1131:21" pos:end="1131:35">gen_op_fmovs_cc</name><argument_list pos:start="1131:36" pos:end="1131:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1133:21" pos:end="1133:45"><expr pos:start="1133:21" pos:end="1133:44"><call pos:start="1133:21" pos:end="1133:44"><name pos:start="1133:21" pos:end="1133:40">gen_op_store_FT0_fpr</name><argument_list pos:start="1133:41" pos:end="1133:44">(<argument pos:start="1133:42" pos:end="1133:43"><expr pos:start="1133:42" pos:end="1133:43"><name pos:start="1133:42" pos:end="1133:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1135:21" pos:end="1135:26">break;</break>

                </block_content>}</block></if> <if type="elseif" pos:start="1137:19" pos:end="1159:17">else if <condition pos:start="1137:27" pos:end="1137:50">(<expr pos:start="1137:28" pos:end="1137:49"><operator pos:start="1137:28" pos:end="1137:28">(</operator><name pos:start="1137:29" pos:end="1137:31">xop</name> <operator pos:start="1137:33" pos:end="1137:33">&amp;</operator> <literal type="number" pos:start="1137:35" pos:end="1137:39">0x11f</literal><operator pos:start="1137:40" pos:end="1137:40">)</operator> <operator pos:start="1137:42" pos:end="1137:43">==</operator> <literal type="number" pos:start="1137:45" pos:end="1137:49">0x006</literal></expr>)</condition> <block pos:start="1137:52" pos:end="1159:17">{<block_content pos:start="1139:21" pos:end="1157:26"> <comment type="line" pos:start="1137:54" pos:end="1137:65">// V9 fmovdr</comment>

                    <expr_stmt pos:start="1139:21" pos:end="1139:54"><expr pos:start="1139:21" pos:end="1139:53"><name pos:start="1139:21" pos:end="1139:24">cond</name> <operator pos:start="1139:26" pos:end="1139:26">=</operator> <call pos:start="1139:28" pos:end="1139:53"><name pos:start="1139:28" pos:end="1139:39">GET_FIELD_SP</name><argument_list pos:start="1139:40" pos:end="1139:53">(<argument pos:start="1139:41" pos:end="1139:44"><expr pos:start="1139:41" pos:end="1139:44"><name pos:start="1139:41" pos:end="1139:44">insn</name></expr></argument>, <argument pos:start="1139:47" pos:end="1139:48"><expr pos:start="1139:47" pos:end="1139:48"><literal type="number" pos:start="1139:47" pos:end="1139:48">14</literal></expr></argument>, <argument pos:start="1139:51" pos:end="1139:52"><expr pos:start="1139:51" pos:end="1139:52"><literal type="number" pos:start="1139:51" pos:end="1139:52">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1141:21" pos:end="1141:44"><expr pos:start="1141:21" pos:end="1141:43"><call pos:start="1141:21" pos:end="1141:43"><name pos:start="1141:21" pos:end="1141:39">gen_op_load_fpr_DT0</name><argument_list pos:start="1141:40" pos:end="1141:43">(<argument pos:start="1141:41" pos:end="1141:42"><expr pos:start="1141:41" pos:end="1141:42"><name pos:start="1141:41" pos:end="1141:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1143:21" pos:end="1143:45"><expr pos:start="1143:21" pos:end="1143:44"><call pos:start="1143:21" pos:end="1143:44"><name pos:start="1143:21" pos:end="1143:39">gen_op_load_fpr_DT1</name><argument_list pos:start="1143:40" pos:end="1143:44">(<argument pos:start="1143:41" pos:end="1143:43"><expr pos:start="1143:41" pos:end="1143:43"><name pos:start="1143:41" pos:end="1143:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1145:21" pos:end="1145:33"><expr pos:start="1145:21" pos:end="1145:32"><call pos:start="1145:21" pos:end="1145:32"><name pos:start="1145:21" pos:end="1145:28">flush_T2</name><argument_list pos:start="1145:29" pos:end="1145:32">(<argument pos:start="1145:30" pos:end="1145:31"><expr pos:start="1145:30" pos:end="1145:31"><name pos:start="1145:30" pos:end="1145:31">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1147:21" pos:end="1147:50"><expr pos:start="1147:21" pos:end="1147:49"><name pos:start="1147:21" pos:end="1147:23">rs1</name> <operator pos:start="1147:25" pos:end="1147:25">=</operator> <call pos:start="1147:27" pos:end="1147:49"><name pos:start="1147:27" pos:end="1147:35">GET_FIELD</name><argument_list pos:start="1147:36" pos:end="1147:49">(<argument pos:start="1147:37" pos:end="1147:40"><expr pos:start="1147:37" pos:end="1147:40"><name pos:start="1147:37" pos:end="1147:40">insn</name></expr></argument>, <argument pos:start="1147:43" pos:end="1147:44"><expr pos:start="1147:43" pos:end="1147:44"><literal type="number" pos:start="1147:43" pos:end="1147:44">13</literal></expr></argument>, <argument pos:start="1147:47" pos:end="1147:48"><expr pos:start="1147:47" pos:end="1147:48"><literal type="number" pos:start="1147:47" pos:end="1147:48">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1149:21" pos:end="1149:41"><expr pos:start="1149:21" pos:end="1149:40"><call pos:start="1149:21" pos:end="1149:40"><name pos:start="1149:21" pos:end="1149:35">gen_movl_reg_T0</name><argument_list pos:start="1149:36" pos:end="1149:40">(<argument pos:start="1149:37" pos:end="1149:39"><expr pos:start="1149:37" pos:end="1149:39"><name pos:start="1149:37" pos:end="1149:39">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1151:21" pos:end="1151:39"><expr pos:start="1151:21" pos:end="1151:38"><call pos:start="1151:21" pos:end="1151:38"><name pos:start="1151:21" pos:end="1151:32">gen_cond_reg</name><argument_list pos:start="1151:33" pos:end="1151:38">(<argument pos:start="1151:34" pos:end="1151:37"><expr pos:start="1151:34" pos:end="1151:37"><name pos:start="1151:34" pos:end="1151:37">cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1153:21" pos:end="1153:38"><expr pos:start="1153:21" pos:end="1153:37"><call pos:start="1153:21" pos:end="1153:37"><name pos:start="1153:21" pos:end="1153:35">gen_op_fmovs_cc</name><argument_list pos:start="1153:36" pos:end="1153:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1155:21" pos:end="1155:45"><expr pos:start="1155:21" pos:end="1155:44"><call pos:start="1155:21" pos:end="1155:44"><name pos:start="1155:21" pos:end="1155:40">gen_op_store_DT0_fpr</name><argument_list pos:start="1155:41" pos:end="1155:44">(<argument pos:start="1155:42" pos:end="1155:43"><expr pos:start="1155:42" pos:end="1155:43"><name pos:start="1155:42" pos:end="1155:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1157:21" pos:end="1157:26">break;</break>

                </block_content>}</block></if> <if type="elseif" pos:start="1159:19" pos:end="1166:0">else if <condition pos:start="1159:27" pos:end="1159:50">(<expr pos:start="1159:28" pos:end="1159:49"><operator pos:start="1159:28" pos:end="1159:28">(</operator><name pos:start="1159:29" pos:end="1159:31">xop</name> <operator pos:start="1159:33" pos:end="1159:33">&amp;</operator> <literal type="number" pos:start="1159:35" pos:end="1159:39">0x11f</literal><operator pos:start="1159:40" pos:end="1159:40">)</operator> <operator pos:start="1159:42" pos:end="1159:43">==</operator> <literal type="number" pos:start="1159:45" pos:end="1159:49">0x007</literal></expr>)</condition> <block pos:start="1159:52" pos:end="1166:0">{<block_content pos:start="1161:21" pos:end="1161:35"> <comment type="line" pos:start="1159:54" pos:end="1159:65">// V9 fmovqr</comment>

                    <goto pos:start="1161:21" pos:end="1161:35">goto <name pos:start="1161:26" pos:end="1161:34">nfpu_insn</name>;</goto>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="1165:1" pos:end="1165:6">#<cpp:directive pos:start="1165:2" pos:end="1165:6">endif</cpp:directive></cpp:endif>

                <switch pos:start="1167:17" pos:end="1500:0">switch <condition pos:start="1167:24" pos:end="1167:28">(<expr pos:start="1167:25" pos:end="1167:27"><name pos:start="1167:25" pos:end="1167:27">xop</name></expr>)</condition> <block pos:start="1167:30" pos:end="1500:0">{<block_content pos:start="1171:21" pos:end="1495:42">

<cpp:ifdef pos:start="1169:1" pos:end="1169:21">#<cpp:directive pos:start="1169:2" pos:end="1169:6">ifdef</cpp:directive> <name pos:start="1169:8" pos:end="1169:21">TARGET_SPARC64</name></cpp:ifdef>

                    <case pos:start="1171:21" pos:end="1171:31">case <expr pos:start="1171:26" pos:end="1171:30"><literal type="number" pos:start="1171:26" pos:end="1171:30">0x001</literal></expr>:</case> <comment type="block" pos:start="1171:33" pos:end="1171:54">/* V9 fmovscc %fcc0 */</comment>

                        <expr_stmt pos:start="1173:25" pos:end="1173:58"><expr pos:start="1173:25" pos:end="1173:57"><name pos:start="1173:25" pos:end="1173:28">cond</name> <operator pos:start="1173:30" pos:end="1173:30">=</operator> <call pos:start="1173:32" pos:end="1173:57"><name pos:start="1173:32" pos:end="1173:43">GET_FIELD_SP</name><argument_list pos:start="1173:44" pos:end="1173:57">(<argument pos:start="1173:45" pos:end="1173:48"><expr pos:start="1173:45" pos:end="1173:48"><name pos:start="1173:45" pos:end="1173:48">insn</name></expr></argument>, <argument pos:start="1173:51" pos:end="1173:52"><expr pos:start="1173:51" pos:end="1173:52"><literal type="number" pos:start="1173:51" pos:end="1173:52">14</literal></expr></argument>, <argument pos:start="1173:55" pos:end="1173:56"><expr pos:start="1173:55" pos:end="1173:56"><literal type="number" pos:start="1173:55" pos:end="1173:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1175:25" pos:end="1175:48"><expr pos:start="1175:25" pos:end="1175:47"><call pos:start="1175:25" pos:end="1175:47"><name pos:start="1175:25" pos:end="1175:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1175:44" pos:end="1175:47">(<argument pos:start="1175:45" pos:end="1175:46"><expr pos:start="1175:45" pos:end="1175:46"><name pos:start="1175:45" pos:end="1175:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1177:25" pos:end="1177:49"><expr pos:start="1177:25" pos:end="1177:48"><call pos:start="1177:25" pos:end="1177:48"><name pos:start="1177:25" pos:end="1177:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1177:44" pos:end="1177:48">(<argument pos:start="1177:45" pos:end="1177:47"><expr pos:start="1177:45" pos:end="1177:47"><name pos:start="1177:45" pos:end="1177:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1179:25" pos:end="1179:37"><expr pos:start="1179:25" pos:end="1179:36"><call pos:start="1179:25" pos:end="1179:36"><name pos:start="1179:25" pos:end="1179:32">flush_T2</name><argument_list pos:start="1179:33" pos:end="1179:36">(<argument pos:start="1179:34" pos:end="1179:35"><expr pos:start="1179:34" pos:end="1179:35"><name pos:start="1179:34" pos:end="1179:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1181:25" pos:end="1181:45"><expr pos:start="1181:25" pos:end="1181:44"><name pos:start="1181:25" pos:end="1181:42"><name pos:start="1181:25" pos:end="1181:33">gen_fcond</name><index pos:start="1181:34" pos:end="1181:36">[<expr pos:start="1181:35" pos:end="1181:35"><literal type="number" pos:start="1181:35" pos:end="1181:35">0</literal></expr>]</index><index pos:start="1181:37" pos:end="1181:42">[<expr pos:start="1181:38" pos:end="1181:41"><name pos:start="1181:38" pos:end="1181:41">cond</name></expr>]</index></name><operator pos:start="1181:43" pos:end="1181:43">(</operator><operator pos:start="1181:44" pos:end="1181:44">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1183:25" pos:end="1183:42"><expr pos:start="1183:25" pos:end="1183:41"><call pos:start="1183:25" pos:end="1183:41"><name pos:start="1183:25" pos:end="1183:39">gen_op_fmovs_cc</name><argument_list pos:start="1183:40" pos:end="1183:41">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1185:25" pos:end="1185:49"><expr pos:start="1185:25" pos:end="1185:48"><call pos:start="1185:25" pos:end="1185:48"><name pos:start="1185:25" pos:end="1185:44">gen_op_store_FT0_fpr</name><argument_list pos:start="1185:45" pos:end="1185:48">(<argument pos:start="1185:46" pos:end="1185:47"><expr pos:start="1185:46" pos:end="1185:47"><name pos:start="1185:46" pos:end="1185:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1187:25" pos:end="1187:30">break;</break>

                    <case pos:start="1189:21" pos:end="1189:31">case <expr pos:start="1189:26" pos:end="1189:30"><literal type="number" pos:start="1189:26" pos:end="1189:30">0x002</literal></expr>:</case> <comment type="block" pos:start="1189:33" pos:end="1189:54">/* V9 fmovdcc %fcc0 */</comment>

                        <expr_stmt pos:start="1191:25" pos:end="1191:58"><expr pos:start="1191:25" pos:end="1191:57"><name pos:start="1191:25" pos:end="1191:28">cond</name> <operator pos:start="1191:30" pos:end="1191:30">=</operator> <call pos:start="1191:32" pos:end="1191:57"><name pos:start="1191:32" pos:end="1191:43">GET_FIELD_SP</name><argument_list pos:start="1191:44" pos:end="1191:57">(<argument pos:start="1191:45" pos:end="1191:48"><expr pos:start="1191:45" pos:end="1191:48"><name pos:start="1191:45" pos:end="1191:48">insn</name></expr></argument>, <argument pos:start="1191:51" pos:end="1191:52"><expr pos:start="1191:51" pos:end="1191:52"><literal type="number" pos:start="1191:51" pos:end="1191:52">14</literal></expr></argument>, <argument pos:start="1191:55" pos:end="1191:56"><expr pos:start="1191:55" pos:end="1191:56"><literal type="number" pos:start="1191:55" pos:end="1191:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1193:25" pos:end="1193:48"><expr pos:start="1193:25" pos:end="1193:47"><call pos:start="1193:25" pos:end="1193:47"><name pos:start="1193:25" pos:end="1193:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1193:44" pos:end="1193:47">(<argument pos:start="1193:45" pos:end="1193:46"><expr pos:start="1193:45" pos:end="1193:46"><name pos:start="1193:45" pos:end="1193:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1195:25" pos:end="1195:49"><expr pos:start="1195:25" pos:end="1195:48"><call pos:start="1195:25" pos:end="1195:48"><name pos:start="1195:25" pos:end="1195:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1195:44" pos:end="1195:48">(<argument pos:start="1195:45" pos:end="1195:47"><expr pos:start="1195:45" pos:end="1195:47"><name pos:start="1195:45" pos:end="1195:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1197:25" pos:end="1197:37"><expr pos:start="1197:25" pos:end="1197:36"><call pos:start="1197:25" pos:end="1197:36"><name pos:start="1197:25" pos:end="1197:32">flush_T2</name><argument_list pos:start="1197:33" pos:end="1197:36">(<argument pos:start="1197:34" pos:end="1197:35"><expr pos:start="1197:34" pos:end="1197:35"><name pos:start="1197:34" pos:end="1197:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1199:25" pos:end="1199:45"><expr pos:start="1199:25" pos:end="1199:44"><name pos:start="1199:25" pos:end="1199:42"><name pos:start="1199:25" pos:end="1199:33">gen_fcond</name><index pos:start="1199:34" pos:end="1199:36">[<expr pos:start="1199:35" pos:end="1199:35"><literal type="number" pos:start="1199:35" pos:end="1199:35">0</literal></expr>]</index><index pos:start="1199:37" pos:end="1199:42">[<expr pos:start="1199:38" pos:end="1199:41"><name pos:start="1199:38" pos:end="1199:41">cond</name></expr>]</index></name><operator pos:start="1199:43" pos:end="1199:43">(</operator><operator pos:start="1199:44" pos:end="1199:44">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1201:25" pos:end="1201:42"><expr pos:start="1201:25" pos:end="1201:41"><call pos:start="1201:25" pos:end="1201:41"><name pos:start="1201:25" pos:end="1201:39">gen_op_fmovd_cc</name><argument_list pos:start="1201:40" pos:end="1201:41">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1203:25" pos:end="1203:49"><expr pos:start="1203:25" pos:end="1203:48"><call pos:start="1203:25" pos:end="1203:48"><name pos:start="1203:25" pos:end="1203:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1203:45" pos:end="1203:48">(<argument pos:start="1203:46" pos:end="1203:47"><expr pos:start="1203:46" pos:end="1203:47"><name pos:start="1203:46" pos:end="1203:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1205:25" pos:end="1205:30">break;</break>

                    <case pos:start="1207:21" pos:end="1207:31">case <expr pos:start="1207:26" pos:end="1207:30"><literal type="number" pos:start="1207:26" pos:end="1207:30">0x003</literal></expr>:</case> <comment type="block" pos:start="1207:33" pos:end="1207:54">/* V9 fmovqcc %fcc0 */</comment>

                        <goto pos:start="1209:25" pos:end="1209:39">goto <name pos:start="1209:30" pos:end="1209:38">nfpu_insn</name>;</goto>

                    <case pos:start="1211:21" pos:end="1211:31">case <expr pos:start="1211:26" pos:end="1211:30"><literal type="number" pos:start="1211:26" pos:end="1211:30">0x041</literal></expr>:</case> <comment type="block" pos:start="1211:33" pos:end="1211:54">/* V9 fmovscc %fcc1 */</comment>

                        <expr_stmt pos:start="1213:25" pos:end="1213:58"><expr pos:start="1213:25" pos:end="1213:57"><name pos:start="1213:25" pos:end="1213:28">cond</name> <operator pos:start="1213:30" pos:end="1213:30">=</operator> <call pos:start="1213:32" pos:end="1213:57"><name pos:start="1213:32" pos:end="1213:43">GET_FIELD_SP</name><argument_list pos:start="1213:44" pos:end="1213:57">(<argument pos:start="1213:45" pos:end="1213:48"><expr pos:start="1213:45" pos:end="1213:48"><name pos:start="1213:45" pos:end="1213:48">insn</name></expr></argument>, <argument pos:start="1213:51" pos:end="1213:52"><expr pos:start="1213:51" pos:end="1213:52"><literal type="number" pos:start="1213:51" pos:end="1213:52">14</literal></expr></argument>, <argument pos:start="1213:55" pos:end="1213:56"><expr pos:start="1213:55" pos:end="1213:56"><literal type="number" pos:start="1213:55" pos:end="1213:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1215:25" pos:end="1215:48"><expr pos:start="1215:25" pos:end="1215:47"><call pos:start="1215:25" pos:end="1215:47"><name pos:start="1215:25" pos:end="1215:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1215:44" pos:end="1215:47">(<argument pos:start="1215:45" pos:end="1215:46"><expr pos:start="1215:45" pos:end="1215:46"><name pos:start="1215:45" pos:end="1215:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1217:25" pos:end="1217:49"><expr pos:start="1217:25" pos:end="1217:48"><call pos:start="1217:25" pos:end="1217:48"><name pos:start="1217:25" pos:end="1217:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1217:44" pos:end="1217:48">(<argument pos:start="1217:45" pos:end="1217:47"><expr pos:start="1217:45" pos:end="1217:47"><name pos:start="1217:45" pos:end="1217:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1219:25" pos:end="1219:37"><expr pos:start="1219:25" pos:end="1219:36"><call pos:start="1219:25" pos:end="1219:36"><name pos:start="1219:25" pos:end="1219:32">flush_T2</name><argument_list pos:start="1219:33" pos:end="1219:36">(<argument pos:start="1219:34" pos:end="1219:35"><expr pos:start="1219:34" pos:end="1219:35"><name pos:start="1219:34" pos:end="1219:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1221:25" pos:end="1221:45"><expr pos:start="1221:25" pos:end="1221:44"><name pos:start="1221:25" pos:end="1221:42"><name pos:start="1221:25" pos:end="1221:33">gen_fcond</name><index pos:start="1221:34" pos:end="1221:36">[<expr pos:start="1221:35" pos:end="1221:35"><literal type="number" pos:start="1221:35" pos:end="1221:35">1</literal></expr>]</index><index pos:start="1221:37" pos:end="1221:42">[<expr pos:start="1221:38" pos:end="1221:41"><name pos:start="1221:38" pos:end="1221:41">cond</name></expr>]</index></name><operator pos:start="1221:43" pos:end="1221:43">(</operator><operator pos:start="1221:44" pos:end="1221:44">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1223:25" pos:end="1223:42"><expr pos:start="1223:25" pos:end="1223:41"><call pos:start="1223:25" pos:end="1223:41"><name pos:start="1223:25" pos:end="1223:39">gen_op_fmovs_cc</name><argument_list pos:start="1223:40" pos:end="1223:41">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1225:25" pos:end="1225:49"><expr pos:start="1225:25" pos:end="1225:48"><call pos:start="1225:25" pos:end="1225:48"><name pos:start="1225:25" pos:end="1225:44">gen_op_store_FT0_fpr</name><argument_list pos:start="1225:45" pos:end="1225:48">(<argument pos:start="1225:46" pos:end="1225:47"><expr pos:start="1225:46" pos:end="1225:47"><name pos:start="1225:46" pos:end="1225:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1227:25" pos:end="1227:30">break;</break>

                    <case pos:start="1229:21" pos:end="1229:31">case <expr pos:start="1229:26" pos:end="1229:30"><literal type="number" pos:start="1229:26" pos:end="1229:30">0x042</literal></expr>:</case> <comment type="block" pos:start="1229:33" pos:end="1229:54">/* V9 fmovdcc %fcc1 */</comment>

                        <expr_stmt pos:start="1231:25" pos:end="1231:58"><expr pos:start="1231:25" pos:end="1231:57"><name pos:start="1231:25" pos:end="1231:28">cond</name> <operator pos:start="1231:30" pos:end="1231:30">=</operator> <call pos:start="1231:32" pos:end="1231:57"><name pos:start="1231:32" pos:end="1231:43">GET_FIELD_SP</name><argument_list pos:start="1231:44" pos:end="1231:57">(<argument pos:start="1231:45" pos:end="1231:48"><expr pos:start="1231:45" pos:end="1231:48"><name pos:start="1231:45" pos:end="1231:48">insn</name></expr></argument>, <argument pos:start="1231:51" pos:end="1231:52"><expr pos:start="1231:51" pos:end="1231:52"><literal type="number" pos:start="1231:51" pos:end="1231:52">14</literal></expr></argument>, <argument pos:start="1231:55" pos:end="1231:56"><expr pos:start="1231:55" pos:end="1231:56"><literal type="number" pos:start="1231:55" pos:end="1231:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1233:25" pos:end="1233:48"><expr pos:start="1233:25" pos:end="1233:47"><call pos:start="1233:25" pos:end="1233:47"><name pos:start="1233:25" pos:end="1233:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1233:44" pos:end="1233:47">(<argument pos:start="1233:45" pos:end="1233:46"><expr pos:start="1233:45" pos:end="1233:46"><name pos:start="1233:45" pos:end="1233:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1235:25" pos:end="1235:49"><expr pos:start="1235:25" pos:end="1235:48"><call pos:start="1235:25" pos:end="1235:48"><name pos:start="1235:25" pos:end="1235:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1235:44" pos:end="1235:48">(<argument pos:start="1235:45" pos:end="1235:47"><expr pos:start="1235:45" pos:end="1235:47"><name pos:start="1235:45" pos:end="1235:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1237:25" pos:end="1237:37"><expr pos:start="1237:25" pos:end="1237:36"><call pos:start="1237:25" pos:end="1237:36"><name pos:start="1237:25" pos:end="1237:32">flush_T2</name><argument_list pos:start="1237:33" pos:end="1237:36">(<argument pos:start="1237:34" pos:end="1237:35"><expr pos:start="1237:34" pos:end="1237:35"><name pos:start="1237:34" pos:end="1237:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1239:25" pos:end="1239:45"><expr pos:start="1239:25" pos:end="1239:44"><name pos:start="1239:25" pos:end="1239:42"><name pos:start="1239:25" pos:end="1239:33">gen_fcond</name><index pos:start="1239:34" pos:end="1239:36">[<expr pos:start="1239:35" pos:end="1239:35"><literal type="number" pos:start="1239:35" pos:end="1239:35">1</literal></expr>]</index><index pos:start="1239:37" pos:end="1239:42">[<expr pos:start="1239:38" pos:end="1239:41"><name pos:start="1239:38" pos:end="1239:41">cond</name></expr>]</index></name><operator pos:start="1239:43" pos:end="1239:43">(</operator><operator pos:start="1239:44" pos:end="1239:44">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1241:25" pos:end="1241:42"><expr pos:start="1241:25" pos:end="1241:41"><call pos:start="1241:25" pos:end="1241:41"><name pos:start="1241:25" pos:end="1241:39">gen_op_fmovd_cc</name><argument_list pos:start="1241:40" pos:end="1241:41">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1243:25" pos:end="1243:49"><expr pos:start="1243:25" pos:end="1243:48"><call pos:start="1243:25" pos:end="1243:48"><name pos:start="1243:25" pos:end="1243:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1243:45" pos:end="1243:48">(<argument pos:start="1243:46" pos:end="1243:47"><expr pos:start="1243:46" pos:end="1243:47"><name pos:start="1243:46" pos:end="1243:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1245:25" pos:end="1245:30">break;</break>

                    <case pos:start="1247:21" pos:end="1247:31">case <expr pos:start="1247:26" pos:end="1247:30"><literal type="number" pos:start="1247:26" pos:end="1247:30">0x043</literal></expr>:</case> <comment type="block" pos:start="1247:33" pos:end="1247:54">/* V9 fmovqcc %fcc1 */</comment>

                        <goto pos:start="1249:25" pos:end="1249:39">goto <name pos:start="1249:30" pos:end="1249:38">nfpu_insn</name>;</goto>

                    <case pos:start="1251:21" pos:end="1251:31">case <expr pos:start="1251:26" pos:end="1251:30"><literal type="number" pos:start="1251:26" pos:end="1251:30">0x081</literal></expr>:</case> <comment type="block" pos:start="1251:33" pos:end="1251:54">/* V9 fmovscc %fcc2 */</comment>

                        <expr_stmt pos:start="1253:25" pos:end="1253:58"><expr pos:start="1253:25" pos:end="1253:57"><name pos:start="1253:25" pos:end="1253:28">cond</name> <operator pos:start="1253:30" pos:end="1253:30">=</operator> <call pos:start="1253:32" pos:end="1253:57"><name pos:start="1253:32" pos:end="1253:43">GET_FIELD_SP</name><argument_list pos:start="1253:44" pos:end="1253:57">(<argument pos:start="1253:45" pos:end="1253:48"><expr pos:start="1253:45" pos:end="1253:48"><name pos:start="1253:45" pos:end="1253:48">insn</name></expr></argument>, <argument pos:start="1253:51" pos:end="1253:52"><expr pos:start="1253:51" pos:end="1253:52"><literal type="number" pos:start="1253:51" pos:end="1253:52">14</literal></expr></argument>, <argument pos:start="1253:55" pos:end="1253:56"><expr pos:start="1253:55" pos:end="1253:56"><literal type="number" pos:start="1253:55" pos:end="1253:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1255:25" pos:end="1255:48"><expr pos:start="1255:25" pos:end="1255:47"><call pos:start="1255:25" pos:end="1255:47"><name pos:start="1255:25" pos:end="1255:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1255:44" pos:end="1255:47">(<argument pos:start="1255:45" pos:end="1255:46"><expr pos:start="1255:45" pos:end="1255:46"><name pos:start="1255:45" pos:end="1255:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1257:25" pos:end="1257:49"><expr pos:start="1257:25" pos:end="1257:48"><call pos:start="1257:25" pos:end="1257:48"><name pos:start="1257:25" pos:end="1257:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1257:44" pos:end="1257:48">(<argument pos:start="1257:45" pos:end="1257:47"><expr pos:start="1257:45" pos:end="1257:47"><name pos:start="1257:45" pos:end="1257:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1259:25" pos:end="1259:37"><expr pos:start="1259:25" pos:end="1259:36"><call pos:start="1259:25" pos:end="1259:36"><name pos:start="1259:25" pos:end="1259:32">flush_T2</name><argument_list pos:start="1259:33" pos:end="1259:36">(<argument pos:start="1259:34" pos:end="1259:35"><expr pos:start="1259:34" pos:end="1259:35"><name pos:start="1259:34" pos:end="1259:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1261:25" pos:end="1261:45"><expr pos:start="1261:25" pos:end="1261:44"><name pos:start="1261:25" pos:end="1261:42"><name pos:start="1261:25" pos:end="1261:33">gen_fcond</name><index pos:start="1261:34" pos:end="1261:36">[<expr pos:start="1261:35" pos:end="1261:35"><literal type="number" pos:start="1261:35" pos:end="1261:35">2</literal></expr>]</index><index pos:start="1261:37" pos:end="1261:42">[<expr pos:start="1261:38" pos:end="1261:41"><name pos:start="1261:38" pos:end="1261:41">cond</name></expr>]</index></name><operator pos:start="1261:43" pos:end="1261:43">(</operator><operator pos:start="1261:44" pos:end="1261:44">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1263:25" pos:end="1263:42"><expr pos:start="1263:25" pos:end="1263:41"><call pos:start="1263:25" pos:end="1263:41"><name pos:start="1263:25" pos:end="1263:39">gen_op_fmovs_cc</name><argument_list pos:start="1263:40" pos:end="1263:41">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1265:25" pos:end="1265:49"><expr pos:start="1265:25" pos:end="1265:48"><call pos:start="1265:25" pos:end="1265:48"><name pos:start="1265:25" pos:end="1265:44">gen_op_store_FT0_fpr</name><argument_list pos:start="1265:45" pos:end="1265:48">(<argument pos:start="1265:46" pos:end="1265:47"><expr pos:start="1265:46" pos:end="1265:47"><name pos:start="1265:46" pos:end="1265:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1267:25" pos:end="1267:30">break;</break>

                    <case pos:start="1269:21" pos:end="1269:31">case <expr pos:start="1269:26" pos:end="1269:30"><literal type="number" pos:start="1269:26" pos:end="1269:30">0x082</literal></expr>:</case> <comment type="block" pos:start="1269:33" pos:end="1269:54">/* V9 fmovdcc %fcc2 */</comment>

                        <expr_stmt pos:start="1271:25" pos:end="1271:58"><expr pos:start="1271:25" pos:end="1271:57"><name pos:start="1271:25" pos:end="1271:28">cond</name> <operator pos:start="1271:30" pos:end="1271:30">=</operator> <call pos:start="1271:32" pos:end="1271:57"><name pos:start="1271:32" pos:end="1271:43">GET_FIELD_SP</name><argument_list pos:start="1271:44" pos:end="1271:57">(<argument pos:start="1271:45" pos:end="1271:48"><expr pos:start="1271:45" pos:end="1271:48"><name pos:start="1271:45" pos:end="1271:48">insn</name></expr></argument>, <argument pos:start="1271:51" pos:end="1271:52"><expr pos:start="1271:51" pos:end="1271:52"><literal type="number" pos:start="1271:51" pos:end="1271:52">14</literal></expr></argument>, <argument pos:start="1271:55" pos:end="1271:56"><expr pos:start="1271:55" pos:end="1271:56"><literal type="number" pos:start="1271:55" pos:end="1271:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1273:25" pos:end="1273:48"><expr pos:start="1273:25" pos:end="1273:47"><call pos:start="1273:25" pos:end="1273:47"><name pos:start="1273:25" pos:end="1273:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1273:44" pos:end="1273:47">(<argument pos:start="1273:45" pos:end="1273:46"><expr pos:start="1273:45" pos:end="1273:46"><name pos:start="1273:45" pos:end="1273:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1275:25" pos:end="1275:49"><expr pos:start="1275:25" pos:end="1275:48"><call pos:start="1275:25" pos:end="1275:48"><name pos:start="1275:25" pos:end="1275:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1275:44" pos:end="1275:48">(<argument pos:start="1275:45" pos:end="1275:47"><expr pos:start="1275:45" pos:end="1275:47"><name pos:start="1275:45" pos:end="1275:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1277:25" pos:end="1277:37"><expr pos:start="1277:25" pos:end="1277:36"><call pos:start="1277:25" pos:end="1277:36"><name pos:start="1277:25" pos:end="1277:32">flush_T2</name><argument_list pos:start="1277:33" pos:end="1277:36">(<argument pos:start="1277:34" pos:end="1277:35"><expr pos:start="1277:34" pos:end="1277:35"><name pos:start="1277:34" pos:end="1277:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1279:25" pos:end="1279:45"><expr pos:start="1279:25" pos:end="1279:44"><name pos:start="1279:25" pos:end="1279:42"><name pos:start="1279:25" pos:end="1279:33">gen_fcond</name><index pos:start="1279:34" pos:end="1279:36">[<expr pos:start="1279:35" pos:end="1279:35"><literal type="number" pos:start="1279:35" pos:end="1279:35">2</literal></expr>]</index><index pos:start="1279:37" pos:end="1279:42">[<expr pos:start="1279:38" pos:end="1279:41"><name pos:start="1279:38" pos:end="1279:41">cond</name></expr>]</index></name><operator pos:start="1279:43" pos:end="1279:43">(</operator><operator pos:start="1279:44" pos:end="1279:44">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1281:25" pos:end="1281:42"><expr pos:start="1281:25" pos:end="1281:41"><call pos:start="1281:25" pos:end="1281:41"><name pos:start="1281:25" pos:end="1281:39">gen_op_fmovd_cc</name><argument_list pos:start="1281:40" pos:end="1281:41">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1283:25" pos:end="1283:49"><expr pos:start="1283:25" pos:end="1283:48"><call pos:start="1283:25" pos:end="1283:48"><name pos:start="1283:25" pos:end="1283:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1283:45" pos:end="1283:48">(<argument pos:start="1283:46" pos:end="1283:47"><expr pos:start="1283:46" pos:end="1283:47"><name pos:start="1283:46" pos:end="1283:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1285:25" pos:end="1285:30">break;</break>

                    <case pos:start="1287:21" pos:end="1287:31">case <expr pos:start="1287:26" pos:end="1287:30"><literal type="number" pos:start="1287:26" pos:end="1287:30">0x083</literal></expr>:</case> <comment type="block" pos:start="1287:33" pos:end="1287:54">/* V9 fmovqcc %fcc2 */</comment>

                        <goto pos:start="1289:25" pos:end="1289:39">goto <name pos:start="1289:30" pos:end="1289:38">nfpu_insn</name>;</goto>

                    <case pos:start="1291:21" pos:end="1291:31">case <expr pos:start="1291:26" pos:end="1291:30"><literal type="number" pos:start="1291:26" pos:end="1291:30">0x0c1</literal></expr>:</case> <comment type="block" pos:start="1291:33" pos:end="1291:54">/* V9 fmovscc %fcc3 */</comment>

                        <expr_stmt pos:start="1293:25" pos:end="1293:58"><expr pos:start="1293:25" pos:end="1293:57"><name pos:start="1293:25" pos:end="1293:28">cond</name> <operator pos:start="1293:30" pos:end="1293:30">=</operator> <call pos:start="1293:32" pos:end="1293:57"><name pos:start="1293:32" pos:end="1293:43">GET_FIELD_SP</name><argument_list pos:start="1293:44" pos:end="1293:57">(<argument pos:start="1293:45" pos:end="1293:48"><expr pos:start="1293:45" pos:end="1293:48"><name pos:start="1293:45" pos:end="1293:48">insn</name></expr></argument>, <argument pos:start="1293:51" pos:end="1293:52"><expr pos:start="1293:51" pos:end="1293:52"><literal type="number" pos:start="1293:51" pos:end="1293:52">14</literal></expr></argument>, <argument pos:start="1293:55" pos:end="1293:56"><expr pos:start="1293:55" pos:end="1293:56"><literal type="number" pos:start="1293:55" pos:end="1293:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1295:25" pos:end="1295:48"><expr pos:start="1295:25" pos:end="1295:47"><call pos:start="1295:25" pos:end="1295:47"><name pos:start="1295:25" pos:end="1295:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1295:44" pos:end="1295:47">(<argument pos:start="1295:45" pos:end="1295:46"><expr pos:start="1295:45" pos:end="1295:46"><name pos:start="1295:45" pos:end="1295:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1297:25" pos:end="1297:49"><expr pos:start="1297:25" pos:end="1297:48"><call pos:start="1297:25" pos:end="1297:48"><name pos:start="1297:25" pos:end="1297:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1297:44" pos:end="1297:48">(<argument pos:start="1297:45" pos:end="1297:47"><expr pos:start="1297:45" pos:end="1297:47"><name pos:start="1297:45" pos:end="1297:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1299:25" pos:end="1299:37"><expr pos:start="1299:25" pos:end="1299:36"><call pos:start="1299:25" pos:end="1299:36"><name pos:start="1299:25" pos:end="1299:32">flush_T2</name><argument_list pos:start="1299:33" pos:end="1299:36">(<argument pos:start="1299:34" pos:end="1299:35"><expr pos:start="1299:34" pos:end="1299:35"><name pos:start="1299:34" pos:end="1299:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1301:25" pos:end="1301:45"><expr pos:start="1301:25" pos:end="1301:44"><name pos:start="1301:25" pos:end="1301:42"><name pos:start="1301:25" pos:end="1301:33">gen_fcond</name><index pos:start="1301:34" pos:end="1301:36">[<expr pos:start="1301:35" pos:end="1301:35"><literal type="number" pos:start="1301:35" pos:end="1301:35">3</literal></expr>]</index><index pos:start="1301:37" pos:end="1301:42">[<expr pos:start="1301:38" pos:end="1301:41"><name pos:start="1301:38" pos:end="1301:41">cond</name></expr>]</index></name><operator pos:start="1301:43" pos:end="1301:43">(</operator><operator pos:start="1301:44" pos:end="1301:44">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1303:25" pos:end="1303:42"><expr pos:start="1303:25" pos:end="1303:41"><call pos:start="1303:25" pos:end="1303:41"><name pos:start="1303:25" pos:end="1303:39">gen_op_fmovs_cc</name><argument_list pos:start="1303:40" pos:end="1303:41">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1305:25" pos:end="1305:49"><expr pos:start="1305:25" pos:end="1305:48"><call pos:start="1305:25" pos:end="1305:48"><name pos:start="1305:25" pos:end="1305:44">gen_op_store_FT0_fpr</name><argument_list pos:start="1305:45" pos:end="1305:48">(<argument pos:start="1305:46" pos:end="1305:47"><expr pos:start="1305:46" pos:end="1305:47"><name pos:start="1305:46" pos:end="1305:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1307:25" pos:end="1307:30">break;</break>

                    <case pos:start="1309:21" pos:end="1309:31">case <expr pos:start="1309:26" pos:end="1309:30"><literal type="number" pos:start="1309:26" pos:end="1309:30">0x0c2</literal></expr>:</case> <comment type="block" pos:start="1309:33" pos:end="1309:54">/* V9 fmovdcc %fcc3 */</comment>

                        <expr_stmt pos:start="1311:25" pos:end="1311:58"><expr pos:start="1311:25" pos:end="1311:57"><name pos:start="1311:25" pos:end="1311:28">cond</name> <operator pos:start="1311:30" pos:end="1311:30">=</operator> <call pos:start="1311:32" pos:end="1311:57"><name pos:start="1311:32" pos:end="1311:43">GET_FIELD_SP</name><argument_list pos:start="1311:44" pos:end="1311:57">(<argument pos:start="1311:45" pos:end="1311:48"><expr pos:start="1311:45" pos:end="1311:48"><name pos:start="1311:45" pos:end="1311:48">insn</name></expr></argument>, <argument pos:start="1311:51" pos:end="1311:52"><expr pos:start="1311:51" pos:end="1311:52"><literal type="number" pos:start="1311:51" pos:end="1311:52">14</literal></expr></argument>, <argument pos:start="1311:55" pos:end="1311:56"><expr pos:start="1311:55" pos:end="1311:56"><literal type="number" pos:start="1311:55" pos:end="1311:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1313:25" pos:end="1313:48"><expr pos:start="1313:25" pos:end="1313:47"><call pos:start="1313:25" pos:end="1313:47"><name pos:start="1313:25" pos:end="1313:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1313:44" pos:end="1313:47">(<argument pos:start="1313:45" pos:end="1313:46"><expr pos:start="1313:45" pos:end="1313:46"><name pos:start="1313:45" pos:end="1313:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1315:25" pos:end="1315:49"><expr pos:start="1315:25" pos:end="1315:48"><call pos:start="1315:25" pos:end="1315:48"><name pos:start="1315:25" pos:end="1315:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1315:44" pos:end="1315:48">(<argument pos:start="1315:45" pos:end="1315:47"><expr pos:start="1315:45" pos:end="1315:47"><name pos:start="1315:45" pos:end="1315:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1317:25" pos:end="1317:37"><expr pos:start="1317:25" pos:end="1317:36"><call pos:start="1317:25" pos:end="1317:36"><name pos:start="1317:25" pos:end="1317:32">flush_T2</name><argument_list pos:start="1317:33" pos:end="1317:36">(<argument pos:start="1317:34" pos:end="1317:35"><expr pos:start="1317:34" pos:end="1317:35"><name pos:start="1317:34" pos:end="1317:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1319:25" pos:end="1319:45"><expr pos:start="1319:25" pos:end="1319:44"><name pos:start="1319:25" pos:end="1319:42"><name pos:start="1319:25" pos:end="1319:33">gen_fcond</name><index pos:start="1319:34" pos:end="1319:36">[<expr pos:start="1319:35" pos:end="1319:35"><literal type="number" pos:start="1319:35" pos:end="1319:35">3</literal></expr>]</index><index pos:start="1319:37" pos:end="1319:42">[<expr pos:start="1319:38" pos:end="1319:41"><name pos:start="1319:38" pos:end="1319:41">cond</name></expr>]</index></name><operator pos:start="1319:43" pos:end="1319:43">(</operator><operator pos:start="1319:44" pos:end="1319:44">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1321:25" pos:end="1321:42"><expr pos:start="1321:25" pos:end="1321:41"><call pos:start="1321:25" pos:end="1321:41"><name pos:start="1321:25" pos:end="1321:39">gen_op_fmovd_cc</name><argument_list pos:start="1321:40" pos:end="1321:41">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1323:25" pos:end="1323:49"><expr pos:start="1323:25" pos:end="1323:48"><call pos:start="1323:25" pos:end="1323:48"><name pos:start="1323:25" pos:end="1323:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1323:45" pos:end="1323:48">(<argument pos:start="1323:46" pos:end="1323:47"><expr pos:start="1323:46" pos:end="1323:47"><name pos:start="1323:46" pos:end="1323:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1325:25" pos:end="1325:30">break;</break>

                    <case pos:start="1327:21" pos:end="1327:31">case <expr pos:start="1327:26" pos:end="1327:30"><literal type="number" pos:start="1327:26" pos:end="1327:30">0x0c3</literal></expr>:</case> <comment type="block" pos:start="1327:33" pos:end="1327:54">/* V9 fmovqcc %fcc3 */</comment>

                        <goto pos:start="1329:25" pos:end="1329:39">goto <name pos:start="1329:30" pos:end="1329:38">nfpu_insn</name>;</goto>

                    <case pos:start="1331:21" pos:end="1331:31">case <expr pos:start="1331:26" pos:end="1331:30"><literal type="number" pos:start="1331:26" pos:end="1331:30">0x101</literal></expr>:</case> <comment type="block" pos:start="1331:33" pos:end="1331:53">/* V9 fmovscc %icc */</comment>

                        <expr_stmt pos:start="1333:25" pos:end="1333:58"><expr pos:start="1333:25" pos:end="1333:57"><name pos:start="1333:25" pos:end="1333:28">cond</name> <operator pos:start="1333:30" pos:end="1333:30">=</operator> <call pos:start="1333:32" pos:end="1333:57"><name pos:start="1333:32" pos:end="1333:43">GET_FIELD_SP</name><argument_list pos:start="1333:44" pos:end="1333:57">(<argument pos:start="1333:45" pos:end="1333:48"><expr pos:start="1333:45" pos:end="1333:48"><name pos:start="1333:45" pos:end="1333:48">insn</name></expr></argument>, <argument pos:start="1333:51" pos:end="1333:52"><expr pos:start="1333:51" pos:end="1333:52"><literal type="number" pos:start="1333:51" pos:end="1333:52">14</literal></expr></argument>, <argument pos:start="1333:55" pos:end="1333:56"><expr pos:start="1333:55" pos:end="1333:56"><literal type="number" pos:start="1333:55" pos:end="1333:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1335:25" pos:end="1335:48"><expr pos:start="1335:25" pos:end="1335:47"><call pos:start="1335:25" pos:end="1335:47"><name pos:start="1335:25" pos:end="1335:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1335:44" pos:end="1335:47">(<argument pos:start="1335:45" pos:end="1335:46"><expr pos:start="1335:45" pos:end="1335:46"><name pos:start="1335:45" pos:end="1335:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1337:25" pos:end="1337:49"><expr pos:start="1337:25" pos:end="1337:48"><call pos:start="1337:25" pos:end="1337:48"><name pos:start="1337:25" pos:end="1337:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1337:44" pos:end="1337:48">(<argument pos:start="1337:45" pos:end="1337:47"><expr pos:start="1337:45" pos:end="1337:47"><name pos:start="1337:45" pos:end="1337:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1339:25" pos:end="1339:37"><expr pos:start="1339:25" pos:end="1339:36"><call pos:start="1339:25" pos:end="1339:36"><name pos:start="1339:25" pos:end="1339:32">flush_T2</name><argument_list pos:start="1339:33" pos:end="1339:36">(<argument pos:start="1339:34" pos:end="1339:35"><expr pos:start="1339:34" pos:end="1339:35"><name pos:start="1339:34" pos:end="1339:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1341:25" pos:end="1341:44"><expr pos:start="1341:25" pos:end="1341:43"><name pos:start="1341:25" pos:end="1341:41"><name pos:start="1341:25" pos:end="1341:32">gen_cond</name><index pos:start="1341:33" pos:end="1341:35">[<expr pos:start="1341:34" pos:end="1341:34"><literal type="number" pos:start="1341:34" pos:end="1341:34">0</literal></expr>]</index><index pos:start="1341:36" pos:end="1341:41">[<expr pos:start="1341:37" pos:end="1341:40"><name pos:start="1341:37" pos:end="1341:40">cond</name></expr>]</index></name><operator pos:start="1341:42" pos:end="1341:42">(</operator><operator pos:start="1341:43" pos:end="1341:43">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1343:25" pos:end="1343:42"><expr pos:start="1343:25" pos:end="1343:41"><call pos:start="1343:25" pos:end="1343:41"><name pos:start="1343:25" pos:end="1343:39">gen_op_fmovs_cc</name><argument_list pos:start="1343:40" pos:end="1343:41">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1345:25" pos:end="1345:49"><expr pos:start="1345:25" pos:end="1345:48"><call pos:start="1345:25" pos:end="1345:48"><name pos:start="1345:25" pos:end="1345:44">gen_op_store_FT0_fpr</name><argument_list pos:start="1345:45" pos:end="1345:48">(<argument pos:start="1345:46" pos:end="1345:47"><expr pos:start="1345:46" pos:end="1345:47"><name pos:start="1345:46" pos:end="1345:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1347:25" pos:end="1347:30">break;</break>

                    <case pos:start="1349:21" pos:end="1349:31">case <expr pos:start="1349:26" pos:end="1349:30"><literal type="number" pos:start="1349:26" pos:end="1349:30">0x102</literal></expr>:</case> <comment type="block" pos:start="1349:33" pos:end="1349:53">/* V9 fmovdcc %icc */</comment>

                        <expr_stmt pos:start="1351:25" pos:end="1351:58"><expr pos:start="1351:25" pos:end="1351:57"><name pos:start="1351:25" pos:end="1351:28">cond</name> <operator pos:start="1351:30" pos:end="1351:30">=</operator> <call pos:start="1351:32" pos:end="1351:57"><name pos:start="1351:32" pos:end="1351:43">GET_FIELD_SP</name><argument_list pos:start="1351:44" pos:end="1351:57">(<argument pos:start="1351:45" pos:end="1351:48"><expr pos:start="1351:45" pos:end="1351:48"><name pos:start="1351:45" pos:end="1351:48">insn</name></expr></argument>, <argument pos:start="1351:51" pos:end="1351:52"><expr pos:start="1351:51" pos:end="1351:52"><literal type="number" pos:start="1351:51" pos:end="1351:52">14</literal></expr></argument>, <argument pos:start="1351:55" pos:end="1351:56"><expr pos:start="1351:55" pos:end="1351:56"><literal type="number" pos:start="1351:55" pos:end="1351:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1353:25" pos:end="1353:48"><expr pos:start="1353:25" pos:end="1353:47"><call pos:start="1353:25" pos:end="1353:47"><name pos:start="1353:25" pos:end="1353:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1353:44" pos:end="1353:47">(<argument pos:start="1353:45" pos:end="1353:46"><expr pos:start="1353:45" pos:end="1353:46"><name pos:start="1353:45" pos:end="1353:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1355:25" pos:end="1355:49"><expr pos:start="1355:25" pos:end="1355:48"><call pos:start="1355:25" pos:end="1355:48"><name pos:start="1355:25" pos:end="1355:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1355:44" pos:end="1355:48">(<argument pos:start="1355:45" pos:end="1355:47"><expr pos:start="1355:45" pos:end="1355:47"><name pos:start="1355:45" pos:end="1355:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1357:25" pos:end="1357:37"><expr pos:start="1357:25" pos:end="1357:36"><call pos:start="1357:25" pos:end="1357:36"><name pos:start="1357:25" pos:end="1357:32">flush_T2</name><argument_list pos:start="1357:33" pos:end="1357:36">(<argument pos:start="1357:34" pos:end="1357:35"><expr pos:start="1357:34" pos:end="1357:35"><name pos:start="1357:34" pos:end="1357:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1359:25" pos:end="1359:44"><expr pos:start="1359:25" pos:end="1359:43"><name pos:start="1359:25" pos:end="1359:41"><name pos:start="1359:25" pos:end="1359:32">gen_cond</name><index pos:start="1359:33" pos:end="1359:35">[<expr pos:start="1359:34" pos:end="1359:34"><literal type="number" pos:start="1359:34" pos:end="1359:34">0</literal></expr>]</index><index pos:start="1359:36" pos:end="1359:41">[<expr pos:start="1359:37" pos:end="1359:40"><name pos:start="1359:37" pos:end="1359:40">cond</name></expr>]</index></name><operator pos:start="1359:42" pos:end="1359:42">(</operator><operator pos:start="1359:43" pos:end="1359:43">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1361:25" pos:end="1361:42"><expr pos:start="1361:25" pos:end="1361:41"><call pos:start="1361:25" pos:end="1361:41"><name pos:start="1361:25" pos:end="1361:39">gen_op_fmovd_cc</name><argument_list pos:start="1361:40" pos:end="1361:41">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1363:25" pos:end="1363:49"><expr pos:start="1363:25" pos:end="1363:48"><call pos:start="1363:25" pos:end="1363:48"><name pos:start="1363:25" pos:end="1363:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1363:45" pos:end="1363:48">(<argument pos:start="1363:46" pos:end="1363:47"><expr pos:start="1363:46" pos:end="1363:47"><name pos:start="1363:46" pos:end="1363:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1365:25" pos:end="1365:30">break;</break>

                    <case pos:start="1367:21" pos:end="1367:31">case <expr pos:start="1367:26" pos:end="1367:30"><literal type="number" pos:start="1367:26" pos:end="1367:30">0x103</literal></expr>:</case> <comment type="block" pos:start="1367:33" pos:end="1367:53">/* V9 fmovqcc %icc */</comment>

                        <goto pos:start="1369:25" pos:end="1369:39">goto <name pos:start="1369:30" pos:end="1369:38">nfpu_insn</name>;</goto>

                    <case pos:start="1371:21" pos:end="1371:31">case <expr pos:start="1371:26" pos:end="1371:30"><literal type="number" pos:start="1371:26" pos:end="1371:30">0x181</literal></expr>:</case> <comment type="block" pos:start="1371:33" pos:end="1371:53">/* V9 fmovscc %xcc */</comment>

                        <expr_stmt pos:start="1373:25" pos:end="1373:58"><expr pos:start="1373:25" pos:end="1373:57"><name pos:start="1373:25" pos:end="1373:28">cond</name> <operator pos:start="1373:30" pos:end="1373:30">=</operator> <call pos:start="1373:32" pos:end="1373:57"><name pos:start="1373:32" pos:end="1373:43">GET_FIELD_SP</name><argument_list pos:start="1373:44" pos:end="1373:57">(<argument pos:start="1373:45" pos:end="1373:48"><expr pos:start="1373:45" pos:end="1373:48"><name pos:start="1373:45" pos:end="1373:48">insn</name></expr></argument>, <argument pos:start="1373:51" pos:end="1373:52"><expr pos:start="1373:51" pos:end="1373:52"><literal type="number" pos:start="1373:51" pos:end="1373:52">14</literal></expr></argument>, <argument pos:start="1373:55" pos:end="1373:56"><expr pos:start="1373:55" pos:end="1373:56"><literal type="number" pos:start="1373:55" pos:end="1373:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1375:25" pos:end="1375:48"><expr pos:start="1375:25" pos:end="1375:47"><call pos:start="1375:25" pos:end="1375:47"><name pos:start="1375:25" pos:end="1375:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1375:44" pos:end="1375:47">(<argument pos:start="1375:45" pos:end="1375:46"><expr pos:start="1375:45" pos:end="1375:46"><name pos:start="1375:45" pos:end="1375:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1377:25" pos:end="1377:49"><expr pos:start="1377:25" pos:end="1377:48"><call pos:start="1377:25" pos:end="1377:48"><name pos:start="1377:25" pos:end="1377:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1377:44" pos:end="1377:48">(<argument pos:start="1377:45" pos:end="1377:47"><expr pos:start="1377:45" pos:end="1377:47"><name pos:start="1377:45" pos:end="1377:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1379:25" pos:end="1379:37"><expr pos:start="1379:25" pos:end="1379:36"><call pos:start="1379:25" pos:end="1379:36"><name pos:start="1379:25" pos:end="1379:32">flush_T2</name><argument_list pos:start="1379:33" pos:end="1379:36">(<argument pos:start="1379:34" pos:end="1379:35"><expr pos:start="1379:34" pos:end="1379:35"><name pos:start="1379:34" pos:end="1379:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1381:25" pos:end="1381:44"><expr pos:start="1381:25" pos:end="1381:43"><name pos:start="1381:25" pos:end="1381:41"><name pos:start="1381:25" pos:end="1381:32">gen_cond</name><index pos:start="1381:33" pos:end="1381:35">[<expr pos:start="1381:34" pos:end="1381:34"><literal type="number" pos:start="1381:34" pos:end="1381:34">1</literal></expr>]</index><index pos:start="1381:36" pos:end="1381:41">[<expr pos:start="1381:37" pos:end="1381:40"><name pos:start="1381:37" pos:end="1381:40">cond</name></expr>]</index></name><operator pos:start="1381:42" pos:end="1381:42">(</operator><operator pos:start="1381:43" pos:end="1381:43">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1383:25" pos:end="1383:42"><expr pos:start="1383:25" pos:end="1383:41"><call pos:start="1383:25" pos:end="1383:41"><name pos:start="1383:25" pos:end="1383:39">gen_op_fmovs_cc</name><argument_list pos:start="1383:40" pos:end="1383:41">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1385:25" pos:end="1385:49"><expr pos:start="1385:25" pos:end="1385:48"><call pos:start="1385:25" pos:end="1385:48"><name pos:start="1385:25" pos:end="1385:44">gen_op_store_FT0_fpr</name><argument_list pos:start="1385:45" pos:end="1385:48">(<argument pos:start="1385:46" pos:end="1385:47"><expr pos:start="1385:46" pos:end="1385:47"><name pos:start="1385:46" pos:end="1385:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1387:25" pos:end="1387:30">break;</break>

                    <case pos:start="1389:21" pos:end="1389:31">case <expr pos:start="1389:26" pos:end="1389:30"><literal type="number" pos:start="1389:26" pos:end="1389:30">0x182</literal></expr>:</case> <comment type="block" pos:start="1389:33" pos:end="1389:53">/* V9 fmovdcc %xcc */</comment>

                        <expr_stmt pos:start="1391:25" pos:end="1391:58"><expr pos:start="1391:25" pos:end="1391:57"><name pos:start="1391:25" pos:end="1391:28">cond</name> <operator pos:start="1391:30" pos:end="1391:30">=</operator> <call pos:start="1391:32" pos:end="1391:57"><name pos:start="1391:32" pos:end="1391:43">GET_FIELD_SP</name><argument_list pos:start="1391:44" pos:end="1391:57">(<argument pos:start="1391:45" pos:end="1391:48"><expr pos:start="1391:45" pos:end="1391:48"><name pos:start="1391:45" pos:end="1391:48">insn</name></expr></argument>, <argument pos:start="1391:51" pos:end="1391:52"><expr pos:start="1391:51" pos:end="1391:52"><literal type="number" pos:start="1391:51" pos:end="1391:52">14</literal></expr></argument>, <argument pos:start="1391:55" pos:end="1391:56"><expr pos:start="1391:55" pos:end="1391:56"><literal type="number" pos:start="1391:55" pos:end="1391:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1393:25" pos:end="1393:48"><expr pos:start="1393:25" pos:end="1393:47"><call pos:start="1393:25" pos:end="1393:47"><name pos:start="1393:25" pos:end="1393:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1393:44" pos:end="1393:47">(<argument pos:start="1393:45" pos:end="1393:46"><expr pos:start="1393:45" pos:end="1393:46"><name pos:start="1393:45" pos:end="1393:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1395:25" pos:end="1395:49"><expr pos:start="1395:25" pos:end="1395:48"><call pos:start="1395:25" pos:end="1395:48"><name pos:start="1395:25" pos:end="1395:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1395:44" pos:end="1395:48">(<argument pos:start="1395:45" pos:end="1395:47"><expr pos:start="1395:45" pos:end="1395:47"><name pos:start="1395:45" pos:end="1395:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1397:25" pos:end="1397:37"><expr pos:start="1397:25" pos:end="1397:36"><call pos:start="1397:25" pos:end="1397:36"><name pos:start="1397:25" pos:end="1397:32">flush_T2</name><argument_list pos:start="1397:33" pos:end="1397:36">(<argument pos:start="1397:34" pos:end="1397:35"><expr pos:start="1397:34" pos:end="1397:35"><name pos:start="1397:34" pos:end="1397:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1399:25" pos:end="1399:44"><expr pos:start="1399:25" pos:end="1399:43"><name pos:start="1399:25" pos:end="1399:41"><name pos:start="1399:25" pos:end="1399:32">gen_cond</name><index pos:start="1399:33" pos:end="1399:35">[<expr pos:start="1399:34" pos:end="1399:34"><literal type="number" pos:start="1399:34" pos:end="1399:34">1</literal></expr>]</index><index pos:start="1399:36" pos:end="1399:41">[<expr pos:start="1399:37" pos:end="1399:40"><name pos:start="1399:37" pos:end="1399:40">cond</name></expr>]</index></name><operator pos:start="1399:42" pos:end="1399:42">(</operator><operator pos:start="1399:43" pos:end="1399:43">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1401:25" pos:end="1401:42"><expr pos:start="1401:25" pos:end="1401:41"><call pos:start="1401:25" pos:end="1401:41"><name pos:start="1401:25" pos:end="1401:39">gen_op_fmovd_cc</name><argument_list pos:start="1401:40" pos:end="1401:41">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1403:25" pos:end="1403:49"><expr pos:start="1403:25" pos:end="1403:48"><call pos:start="1403:25" pos:end="1403:48"><name pos:start="1403:25" pos:end="1403:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1403:45" pos:end="1403:48">(<argument pos:start="1403:46" pos:end="1403:47"><expr pos:start="1403:46" pos:end="1403:47"><name pos:start="1403:46" pos:end="1403:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1405:25" pos:end="1405:30">break;</break>

                    <case pos:start="1407:21" pos:end="1407:31">case <expr pos:start="1407:26" pos:end="1407:30"><literal type="number" pos:start="1407:26" pos:end="1407:30">0x183</literal></expr>:</case> <comment type="block" pos:start="1407:33" pos:end="1407:53">/* V9 fmovqcc %xcc */</comment>

                        <goto pos:start="1409:25" pos:end="1412:0">goto <name pos:start="1409:30" pos:end="1409:38">nfpu_insn</name>;</goto>

<cpp:endif pos:start="1411:1" pos:end="1411:6">#<cpp:directive pos:start="1411:2" pos:end="1411:6">endif</cpp:directive></cpp:endif>

                    <case pos:start="1413:21" pos:end="1413:30">case <expr pos:start="1413:26" pos:end="1413:29"><literal type="number" pos:start="1413:26" pos:end="1413:29">0x51</literal></expr>:</case> <comment type="block" pos:start="1413:32" pos:end="1413:44">/* V9 %fcc */</comment>

                        <expr_stmt pos:start="1415:25" pos:end="1415:49"><expr pos:start="1415:25" pos:end="1415:48"><call pos:start="1415:25" pos:end="1415:48"><name pos:start="1415:25" pos:end="1415:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1415:44" pos:end="1415:48">(<argument pos:start="1415:45" pos:end="1415:47"><expr pos:start="1415:45" pos:end="1415:47"><name pos:start="1415:45" pos:end="1415:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1417:25" pos:end="1420:0"><expr pos:start="1417:25" pos:end="1417:48"><call pos:start="1417:25" pos:end="1417:48"><name pos:start="1417:25" pos:end="1417:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1417:44" pos:end="1417:48">(<argument pos:start="1417:45" pos:end="1417:47"><expr pos:start="1417:45" pos:end="1417:47"><name pos:start="1417:45" pos:end="1417:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="1419:1" pos:end="1419:21">#<cpp:directive pos:start="1419:2" pos:end="1419:6">ifdef</cpp:directive> <name pos:start="1419:8" pos:end="1419:21">TARGET_SPARC64</name></cpp:ifdef>

                        <expr_stmt pos:start="1421:25" pos:end="1424:0"><expr pos:start="1421:25" pos:end="1421:43"><name pos:start="1421:25" pos:end="1421:41"><name pos:start="1421:25" pos:end="1421:33">gen_fcmps</name><index pos:start="1421:34" pos:end="1421:41">[<expr pos:start="1421:35" pos:end="1421:40"><name pos:start="1421:35" pos:end="1421:36">rd</name> <operator pos:start="1421:38" pos:end="1421:38">&amp;</operator> <literal type="number" pos:start="1421:40" pos:end="1421:40">3</literal></expr>]</index></name><operator pos:start="1421:42" pos:end="1421:42">(</operator><operator pos:start="1421:43" pos:end="1421:43">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="1423:1" pos:end="1423:5">#<cpp:directive pos:start="1423:2" pos:end="1423:5">else</cpp:directive></cpp:else>

                        <expr_stmt pos:start="1425:25" pos:end="1428:0"><expr pos:start="1425:25" pos:end="1425:38"><call pos:start="1425:25" pos:end="1425:38"><name pos:start="1425:25" pos:end="1425:36">gen_op_fcmps</name><argument_list pos:start="1425:37" pos:end="1425:38">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1427:1" pos:end="1427:6">#<cpp:directive pos:start="1427:2" pos:end="1427:6">endif</cpp:directive></cpp:endif>

                        <break pos:start="1429:25" pos:end="1429:30">break;</break>

                    <case pos:start="1431:21" pos:end="1431:30">case <expr pos:start="1431:26" pos:end="1431:29"><literal type="number" pos:start="1431:26" pos:end="1431:29">0x52</literal></expr>:</case> <comment type="block" pos:start="1431:32" pos:end="1431:44">/* V9 %fcc */</comment>

                        <expr_stmt pos:start="1433:25" pos:end="1433:57"><expr pos:start="1433:25" pos:end="1433:56"><call pos:start="1433:25" pos:end="1433:56"><name pos:start="1433:25" pos:end="1433:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1433:44" pos:end="1433:56">(<argument pos:start="1433:45" pos:end="1433:55"><expr pos:start="1433:45" pos:end="1433:55"><call pos:start="1433:45" pos:end="1433:55"><name pos:start="1433:45" pos:end="1433:50">DFPREG</name><argument_list pos:start="1433:51" pos:end="1433:55">(<argument pos:start="1433:52" pos:end="1433:54"><expr pos:start="1433:52" pos:end="1433:54"><name pos:start="1433:52" pos:end="1433:54">rs1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1435:25" pos:end="1438:0"><expr pos:start="1435:25" pos:end="1435:56"><call pos:start="1435:25" pos:end="1435:56"><name pos:start="1435:25" pos:end="1435:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1435:44" pos:end="1435:56">(<argument pos:start="1435:45" pos:end="1435:55"><expr pos:start="1435:45" pos:end="1435:55"><call pos:start="1435:45" pos:end="1435:55"><name pos:start="1435:45" pos:end="1435:50">DFPREG</name><argument_list pos:start="1435:51" pos:end="1435:55">(<argument pos:start="1435:52" pos:end="1435:54"><expr pos:start="1435:52" pos:end="1435:54"><name pos:start="1435:52" pos:end="1435:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="1437:1" pos:end="1437:21">#<cpp:directive pos:start="1437:2" pos:end="1437:6">ifdef</cpp:directive> <name pos:start="1437:8" pos:end="1437:21">TARGET_SPARC64</name></cpp:ifdef>

                        <expr_stmt pos:start="1439:25" pos:end="1442:0"><expr pos:start="1439:25" pos:end="1439:43"><name pos:start="1439:25" pos:end="1439:41"><name pos:start="1439:25" pos:end="1439:33">gen_fcmpd</name><index pos:start="1439:34" pos:end="1439:41">[<expr pos:start="1439:35" pos:end="1439:40"><name pos:start="1439:35" pos:end="1439:36">rd</name> <operator pos:start="1439:38" pos:end="1439:38">&amp;</operator> <literal type="number" pos:start="1439:40" pos:end="1439:40">3</literal></expr>]</index></name><operator pos:start="1439:42" pos:end="1439:42">(</operator><operator pos:start="1439:43" pos:end="1439:43">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="1441:1" pos:end="1441:5">#<cpp:directive pos:start="1441:2" pos:end="1441:5">else</cpp:directive></cpp:else>

                        <expr_stmt pos:start="1443:25" pos:end="1446:0"><expr pos:start="1443:25" pos:end="1443:38"><call pos:start="1443:25" pos:end="1443:38"><name pos:start="1443:25" pos:end="1443:36">gen_op_fcmpd</name><argument_list pos:start="1443:37" pos:end="1443:38">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1445:1" pos:end="1445:6">#<cpp:directive pos:start="1445:2" pos:end="1445:6">endif</cpp:directive></cpp:endif>

                        <break pos:start="1447:25" pos:end="1447:30">break;</break>

                    <case pos:start="1449:21" pos:end="1449:30">case <expr pos:start="1449:26" pos:end="1449:29"><literal type="number" pos:start="1449:26" pos:end="1449:29">0x53</literal></expr>:</case> <comment type="block" pos:start="1449:32" pos:end="1449:42">/* fcmpq */</comment>

                        <goto pos:start="1451:25" pos:end="1451:39">goto <name pos:start="1451:30" pos:end="1451:38">nfpu_insn</name>;</goto>

                    <case pos:start="1453:21" pos:end="1453:30">case <expr pos:start="1453:26" pos:end="1453:29"><literal type="number" pos:start="1453:26" pos:end="1453:29">0x55</literal></expr>:</case> <comment type="block" pos:start="1453:32" pos:end="1453:52">/* fcmpes, V9 %fcc */</comment>

                        <expr_stmt pos:start="1455:25" pos:end="1455:49"><expr pos:start="1455:25" pos:end="1455:48"><call pos:start="1455:25" pos:end="1455:48"><name pos:start="1455:25" pos:end="1455:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1455:44" pos:end="1455:48">(<argument pos:start="1455:45" pos:end="1455:47"><expr pos:start="1455:45" pos:end="1455:47"><name pos:start="1455:45" pos:end="1455:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1457:25" pos:end="1460:0"><expr pos:start="1457:25" pos:end="1457:48"><call pos:start="1457:25" pos:end="1457:48"><name pos:start="1457:25" pos:end="1457:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1457:44" pos:end="1457:48">(<argument pos:start="1457:45" pos:end="1457:47"><expr pos:start="1457:45" pos:end="1457:47"><name pos:start="1457:45" pos:end="1457:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="1459:1" pos:end="1459:21">#<cpp:directive pos:start="1459:2" pos:end="1459:6">ifdef</cpp:directive> <name pos:start="1459:8" pos:end="1459:21">TARGET_SPARC64</name></cpp:ifdef>

                        <expr_stmt pos:start="1461:25" pos:end="1464:0"><expr pos:start="1461:25" pos:end="1461:44"><name pos:start="1461:25" pos:end="1461:42"><name pos:start="1461:25" pos:end="1461:34">gen_fcmpes</name><index pos:start="1461:35" pos:end="1461:42">[<expr pos:start="1461:36" pos:end="1461:41"><name pos:start="1461:36" pos:end="1461:37">rd</name> <operator pos:start="1461:39" pos:end="1461:39">&amp;</operator> <literal type="number" pos:start="1461:41" pos:end="1461:41">3</literal></expr>]</index></name><operator pos:start="1461:43" pos:end="1461:43">(</operator><operator pos:start="1461:44" pos:end="1461:44">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="1463:1" pos:end="1463:5">#<cpp:directive pos:start="1463:2" pos:end="1463:5">else</cpp:directive></cpp:else>

                        <expr_stmt pos:start="1465:25" pos:end="1468:0"><expr pos:start="1465:25" pos:end="1465:39"><call pos:start="1465:25" pos:end="1465:39"><name pos:start="1465:25" pos:end="1465:37">gen_op_fcmpes</name><argument_list pos:start="1465:38" pos:end="1465:39">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1467:1" pos:end="1467:6">#<cpp:directive pos:start="1467:2" pos:end="1467:6">endif</cpp:directive></cpp:endif>

                        <break pos:start="1469:25" pos:end="1469:30">break;</break>

                    <case pos:start="1471:21" pos:end="1471:30">case <expr pos:start="1471:26" pos:end="1471:29"><literal type="number" pos:start="1471:26" pos:end="1471:29">0x56</literal></expr>:</case> <comment type="block" pos:start="1471:32" pos:end="1471:52">/* fcmped, V9 %fcc */</comment>

                        <expr_stmt pos:start="1473:25" pos:end="1473:57"><expr pos:start="1473:25" pos:end="1473:56"><call pos:start="1473:25" pos:end="1473:56"><name pos:start="1473:25" pos:end="1473:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1473:44" pos:end="1473:56">(<argument pos:start="1473:45" pos:end="1473:55"><expr pos:start="1473:45" pos:end="1473:55"><call pos:start="1473:45" pos:end="1473:55"><name pos:start="1473:45" pos:end="1473:50">DFPREG</name><argument_list pos:start="1473:51" pos:end="1473:55">(<argument pos:start="1473:52" pos:end="1473:54"><expr pos:start="1473:52" pos:end="1473:54"><name pos:start="1473:52" pos:end="1473:54">rs1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1475:25" pos:end="1478:0"><expr pos:start="1475:25" pos:end="1475:56"><call pos:start="1475:25" pos:end="1475:56"><name pos:start="1475:25" pos:end="1475:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1475:44" pos:end="1475:56">(<argument pos:start="1475:45" pos:end="1475:55"><expr pos:start="1475:45" pos:end="1475:55"><call pos:start="1475:45" pos:end="1475:55"><name pos:start="1475:45" pos:end="1475:50">DFPREG</name><argument_list pos:start="1475:51" pos:end="1475:55">(<argument pos:start="1475:52" pos:end="1475:54"><expr pos:start="1475:52" pos:end="1475:54"><name pos:start="1475:52" pos:end="1475:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="1477:1" pos:end="1477:21">#<cpp:directive pos:start="1477:2" pos:end="1477:6">ifdef</cpp:directive> <name pos:start="1477:8" pos:end="1477:21">TARGET_SPARC64</name></cpp:ifdef>

                        <expr_stmt pos:start="1479:25" pos:end="1482:0"><expr pos:start="1479:25" pos:end="1479:44"><name pos:start="1479:25" pos:end="1479:42"><name pos:start="1479:25" pos:end="1479:34">gen_fcmped</name><index pos:start="1479:35" pos:end="1479:42">[<expr pos:start="1479:36" pos:end="1479:41"><name pos:start="1479:36" pos:end="1479:37">rd</name> <operator pos:start="1479:39" pos:end="1479:39">&amp;</operator> <literal type="number" pos:start="1479:41" pos:end="1479:41">3</literal></expr>]</index></name><operator pos:start="1479:43" pos:end="1479:43">(</operator><operator pos:start="1479:44" pos:end="1479:44">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="1481:1" pos:end="1481:5">#<cpp:directive pos:start="1481:2" pos:end="1481:5">else</cpp:directive></cpp:else>

                        <expr_stmt pos:start="1483:25" pos:end="1486:0"><expr pos:start="1483:25" pos:end="1483:39"><call pos:start="1483:25" pos:end="1483:39"><name pos:start="1483:25" pos:end="1483:37">gen_op_fcmped</name><argument_list pos:start="1483:38" pos:end="1483:39">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1485:1" pos:end="1485:6">#<cpp:directive pos:start="1485:2" pos:end="1485:6">endif</cpp:directive></cpp:endif>

                        <break pos:start="1487:25" pos:end="1487:30">break;</break>

                    <case pos:start="1489:21" pos:end="1489:30">case <expr pos:start="1489:26" pos:end="1489:29"><literal type="number" pos:start="1489:26" pos:end="1489:29">0x57</literal></expr>:</case> <comment type="block" pos:start="1489:32" pos:end="1489:43">/* fcmpeq */</comment>

                        <goto pos:start="1491:25" pos:end="1491:39">goto <name pos:start="1491:30" pos:end="1491:38">nfpu_insn</name>;</goto>

                    <default pos:start="1493:21" pos:end="1493:28">default:</default>

                        <goto pos:start="1495:25" pos:end="1495:42">goto <name pos:start="1495:30" pos:end="1495:41">illegal_insn</name>;</goto>

                </block_content>}</block></switch>

<cpp:if pos:start="1499:1" pos:end="1499:18">#<cpp:directive pos:start="1499:2" pos:end="1499:3">if</cpp:directive> <expr pos:start="1499:5" pos:end="1499:18"><call pos:start="1499:5" pos:end="1499:18"><name pos:start="1499:5" pos:end="1499:11">defined</name><argument_list pos:start="1499:12" pos:end="1499:18">(<argument pos:start="1499:13" pos:end="1499:17"><expr pos:start="1499:13" pos:end="1499:17"><name pos:start="1499:13" pos:end="1499:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

            </block_content>}</block></if> <if type="elseif" pos:start="1501:15" pos:end="1571:13">else if <condition pos:start="1501:23" pos:end="1501:34">(<expr pos:start="1501:24" pos:end="1501:33"><name pos:start="1501:24" pos:end="1501:26">xop</name> <operator pos:start="1501:28" pos:end="1501:29">==</operator> <literal type="number" pos:start="1501:31" pos:end="1501:33">0x2</literal></expr>)</condition> <block pos:start="1501:36" pos:end="1571:13">{<block_content pos:start="1507:17" pos:end="1570:0">

                <comment type="line" pos:start="1503:17" pos:end="1503:35">// clr/mov shortcut</comment>



                <expr_stmt pos:start="1507:17" pos:end="1507:46"><expr pos:start="1507:17" pos:end="1507:45"><name pos:start="1507:17" pos:end="1507:19">rs1</name> <operator pos:start="1507:21" pos:end="1507:21">=</operator> <call pos:start="1507:23" pos:end="1507:45"><name pos:start="1507:23" pos:end="1507:31">GET_FIELD</name><argument_list pos:start="1507:32" pos:end="1507:45">(<argument pos:start="1507:33" pos:end="1507:36"><expr pos:start="1507:33" pos:end="1507:36"><name pos:start="1507:33" pos:end="1507:36">insn</name></expr></argument>, <argument pos:start="1507:39" pos:end="1507:40"><expr pos:start="1507:39" pos:end="1507:40"><literal type="number" pos:start="1507:39" pos:end="1507:40">13</literal></expr></argument>, <argument pos:start="1507:43" pos:end="1507:44"><expr pos:start="1507:43" pos:end="1507:44"><literal type="number" pos:start="1507:43" pos:end="1507:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1509:17" pos:end="1570:0"><if pos:start="1509:17" pos:end="1529:17">if <condition pos:start="1509:20" pos:end="1509:29">(<expr pos:start="1509:21" pos:end="1509:28"><name pos:start="1509:21" pos:end="1509:23">rs1</name> <operator pos:start="1509:25" pos:end="1509:26">==</operator> <literal type="number" pos:start="1509:28" pos:end="1509:28">0</literal></expr>)</condition> <block pos:start="1509:31" pos:end="1529:17">{<block_content pos:start="1513:21" pos:end="1527:40">

                    <comment type="line" pos:start="1511:21" pos:end="1511:59">// or %g0, x, y -&gt; mov T1, x; mov y, T1</comment>

                    <if_stmt pos:start="1513:21" pos:end="1525:21"><if pos:start="1513:21" pos:end="1519:21">if <condition pos:start="1513:24" pos:end="1513:31">(<expr pos:start="1513:25" pos:end="1513:30"><name pos:start="1513:25" pos:end="1513:30">IS_IMM</name></expr>)</condition> <block pos:start="1513:33" pos:end="1519:21">{<block_content pos:start="1515:25" pos:end="1517:46">       <comment type="block" pos:start="1513:41" pos:end="1513:55">/* immediate */</comment>

                        <expr_stmt pos:start="1515:25" pos:end="1515:55"><expr pos:start="1515:25" pos:end="1515:54"><name pos:start="1515:25" pos:end="1515:27">rs2</name> <operator pos:start="1515:29" pos:end="1515:29">=</operator> <call pos:start="1515:31" pos:end="1515:54"><name pos:start="1515:31" pos:end="1515:40">GET_FIELDs</name><argument_list pos:start="1515:41" pos:end="1515:54">(<argument pos:start="1515:42" pos:end="1515:45"><expr pos:start="1515:42" pos:end="1515:45"><name pos:start="1515:42" pos:end="1515:45">insn</name></expr></argument>, <argument pos:start="1515:48" pos:end="1515:49"><expr pos:start="1515:48" pos:end="1515:49"><literal type="number" pos:start="1515:48" pos:end="1515:49">19</literal></expr></argument>, <argument pos:start="1515:52" pos:end="1515:53"><expr pos:start="1515:52" pos:end="1515:53"><literal type="number" pos:start="1515:52" pos:end="1515:53">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1517:25" pos:end="1517:46"><expr pos:start="1517:25" pos:end="1517:45"><call pos:start="1517:25" pos:end="1517:45"><name pos:start="1517:25" pos:end="1517:40">gen_movl_simm_T1</name><argument_list pos:start="1517:41" pos:end="1517:45">(<argument pos:start="1517:42" pos:end="1517:44"><expr pos:start="1517:42" pos:end="1517:44"><name pos:start="1517:42" pos:end="1517:44">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1519:23" pos:end="1525:21">else <block pos:start="1519:28" pos:end="1525:21">{<block_content pos:start="1521:25" pos:end="1523:45">            <comment type="block" pos:start="1519:41" pos:end="1519:54">/* register */</comment>

                        <expr_stmt pos:start="1521:25" pos:end="1521:54"><expr pos:start="1521:25" pos:end="1521:53"><name pos:start="1521:25" pos:end="1521:27">rs2</name> <operator pos:start="1521:29" pos:end="1521:29">=</operator> <call pos:start="1521:31" pos:end="1521:53"><name pos:start="1521:31" pos:end="1521:39">GET_FIELD</name><argument_list pos:start="1521:40" pos:end="1521:53">(<argument pos:start="1521:41" pos:end="1521:44"><expr pos:start="1521:41" pos:end="1521:44"><name pos:start="1521:41" pos:end="1521:44">insn</name></expr></argument>, <argument pos:start="1521:47" pos:end="1521:48"><expr pos:start="1521:47" pos:end="1521:48"><literal type="number" pos:start="1521:47" pos:end="1521:48">27</literal></expr></argument>, <argument pos:start="1521:51" pos:end="1521:52"><expr pos:start="1521:51" pos:end="1521:52"><literal type="number" pos:start="1521:51" pos:end="1521:52">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1523:25" pos:end="1523:45"><expr pos:start="1523:25" pos:end="1523:44"><call pos:start="1523:25" pos:end="1523:44"><name pos:start="1523:25" pos:end="1523:39">gen_movl_reg_T1</name><argument_list pos:start="1523:40" pos:end="1523:44">(<argument pos:start="1523:41" pos:end="1523:43"><expr pos:start="1523:41" pos:end="1523:43"><name pos:start="1523:41" pos:end="1523:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="1527:21" pos:end="1527:40"><expr pos:start="1527:21" pos:end="1527:39"><call pos:start="1527:21" pos:end="1527:39"><name pos:start="1527:21" pos:end="1527:35">gen_movl_T1_reg</name><argument_list pos:start="1527:36" pos:end="1527:39">(<argument pos:start="1527:37" pos:end="1527:38"><expr pos:start="1527:37" pos:end="1527:38"><name pos:start="1527:37" pos:end="1527:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1529:19" pos:end="1570:0">else <block pos:start="1529:24" pos:end="1570:0">{<block_content pos:start="1531:21" pos:end="1563:40">

                    <expr_stmt pos:start="1531:21" pos:end="1531:41"><expr pos:start="1531:21" pos:end="1531:40"><call pos:start="1531:21" pos:end="1531:40"><name pos:start="1531:21" pos:end="1531:35">gen_movl_reg_T0</name><argument_list pos:start="1531:36" pos:end="1531:40">(<argument pos:start="1531:37" pos:end="1531:39"><expr pos:start="1531:37" pos:end="1531:39"><name pos:start="1531:37" pos:end="1531:39">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="1533:21" pos:end="1561:21"><if pos:start="1533:21" pos:end="1547:21">if <condition pos:start="1533:24" pos:end="1533:31">(<expr pos:start="1533:25" pos:end="1533:30"><name pos:start="1533:25" pos:end="1533:30">IS_IMM</name></expr>)</condition> <block pos:start="1533:33" pos:end="1547:21">{<block_content pos:start="1537:25" pos:end="1545:25">       <comment type="block" pos:start="1533:41" pos:end="1533:55">/* immediate */</comment>

                        <comment type="line" pos:start="1535:25" pos:end="1535:62">// or x, #0, y -&gt; mov T1, x; mov y, T1</comment>

                        <expr_stmt pos:start="1537:25" pos:end="1537:55"><expr pos:start="1537:25" pos:end="1537:54"><name pos:start="1537:25" pos:end="1537:27">rs2</name> <operator pos:start="1537:29" pos:end="1537:29">=</operator> <call pos:start="1537:31" pos:end="1537:54"><name pos:start="1537:31" pos:end="1537:40">GET_FIELDs</name><argument_list pos:start="1537:41" pos:end="1537:54">(<argument pos:start="1537:42" pos:end="1537:45"><expr pos:start="1537:42" pos:end="1537:45"><name pos:start="1537:42" pos:end="1537:45">insn</name></expr></argument>, <argument pos:start="1537:48" pos:end="1537:49"><expr pos:start="1537:48" pos:end="1537:49"><literal type="number" pos:start="1537:48" pos:end="1537:49">19</literal></expr></argument>, <argument pos:start="1537:52" pos:end="1537:53"><expr pos:start="1537:52" pos:end="1537:53"><literal type="number" pos:start="1537:52" pos:end="1537:53">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1539:25" pos:end="1545:25"><if pos:start="1539:25" pos:end="1545:25">if <condition pos:start="1539:28" pos:end="1539:37">(<expr pos:start="1539:29" pos:end="1539:36"><name pos:start="1539:29" pos:end="1539:31">rs2</name> <operator pos:start="1539:33" pos:end="1539:34">!=</operator> <literal type="number" pos:start="1539:36" pos:end="1539:36">0</literal></expr>)</condition> <block pos:start="1539:39" pos:end="1545:25">{<block_content pos:start="1541:29" pos:end="1543:46">

                            <expr_stmt pos:start="1541:29" pos:end="1541:50"><expr pos:start="1541:29" pos:end="1541:49"><call pos:start="1541:29" pos:end="1541:49"><name pos:start="1541:29" pos:end="1541:44">gen_movl_simm_T1</name><argument_list pos:start="1541:45" pos:end="1541:49">(<argument pos:start="1541:46" pos:end="1541:48"><expr pos:start="1541:46" pos:end="1541:48"><name pos:start="1541:46" pos:end="1541:48">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1543:29" pos:end="1543:46"><expr pos:start="1543:29" pos:end="1543:45"><call pos:start="1543:29" pos:end="1543:45"><name pos:start="1543:29" pos:end="1543:43">gen_op_or_T1_T0</name><argument_list pos:start="1543:44" pos:end="1543:45">()</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if> <else pos:start="1547:23" pos:end="1561:21">else <block pos:start="1547:28" pos:end="1561:21">{<block_content pos:start="1551:25" pos:end="1559:25">            <comment type="block" pos:start="1547:41" pos:end="1547:54">/* register */</comment>

                        <comment type="line" pos:start="1549:25" pos:end="1549:63">// or x, %g0, y -&gt; mov T1, x; mov y, T1</comment>

                        <expr_stmt pos:start="1551:25" pos:end="1551:54"><expr pos:start="1551:25" pos:end="1551:53"><name pos:start="1551:25" pos:end="1551:27">rs2</name> <operator pos:start="1551:29" pos:end="1551:29">=</operator> <call pos:start="1551:31" pos:end="1551:53"><name pos:start="1551:31" pos:end="1551:39">GET_FIELD</name><argument_list pos:start="1551:40" pos:end="1551:53">(<argument pos:start="1551:41" pos:end="1551:44"><expr pos:start="1551:41" pos:end="1551:44"><name pos:start="1551:41" pos:end="1551:44">insn</name></expr></argument>, <argument pos:start="1551:47" pos:end="1551:48"><expr pos:start="1551:47" pos:end="1551:48"><literal type="number" pos:start="1551:47" pos:end="1551:48">27</literal></expr></argument>, <argument pos:start="1551:51" pos:end="1551:52"><expr pos:start="1551:51" pos:end="1551:52"><literal type="number" pos:start="1551:51" pos:end="1551:52">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1553:25" pos:end="1559:25"><if pos:start="1553:25" pos:end="1559:25">if <condition pos:start="1553:28" pos:end="1553:37">(<expr pos:start="1553:29" pos:end="1553:36"><name pos:start="1553:29" pos:end="1553:31">rs2</name> <operator pos:start="1553:33" pos:end="1553:34">!=</operator> <literal type="number" pos:start="1553:36" pos:end="1553:36">0</literal></expr>)</condition> <block pos:start="1553:39" pos:end="1559:25">{<block_content pos:start="1555:29" pos:end="1557:46">

                            <expr_stmt pos:start="1555:29" pos:end="1555:49"><expr pos:start="1555:29" pos:end="1555:48"><call pos:start="1555:29" pos:end="1555:48"><name pos:start="1555:29" pos:end="1555:43">gen_movl_reg_T1</name><argument_list pos:start="1555:44" pos:end="1555:48">(<argument pos:start="1555:45" pos:end="1555:47"><expr pos:start="1555:45" pos:end="1555:47"><name pos:start="1555:45" pos:end="1555:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1557:29" pos:end="1557:46"><expr pos:start="1557:29" pos:end="1557:45"><call pos:start="1557:29" pos:end="1557:45"><name pos:start="1557:29" pos:end="1557:43">gen_op_or_T1_T0</name><argument_list pos:start="1557:44" pos:end="1557:45">()</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="1563:21" pos:end="1563:40"><expr pos:start="1563:21" pos:end="1563:39"><call pos:start="1563:21" pos:end="1563:39"><name pos:start="1563:21" pos:end="1563:35">gen_movl_T0_reg</name><argument_list pos:start="1563:36" pos:end="1563:39">(<argument pos:start="1563:37" pos:end="1563:38"><expr pos:start="1563:37" pos:end="1563:38"><name pos:start="1563:37" pos:end="1563:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="1567:1" pos:end="1567:6">#<cpp:directive pos:start="1567:2" pos:end="1567:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1569:1" pos:end="1569:21">#<cpp:directive pos:start="1569:2" pos:end="1569:6">ifdef</cpp:directive> <name pos:start="1569:8" pos:end="1569:21">TARGET_SPARC64</name></cpp:ifdef>

            </block_content>}</block></if> <if type="elseif" pos:start="1571:15" pos:end="1601:13">else if <condition pos:start="1571:23" pos:end="1571:35">(<expr pos:start="1571:24" pos:end="1571:34"><name pos:start="1571:24" pos:end="1571:26">xop</name> <operator pos:start="1571:28" pos:end="1571:29">==</operator> <literal type="number" pos:start="1571:31" pos:end="1571:34">0x25</literal></expr>)</condition> <block pos:start="1571:37" pos:end="1601:13">{<block_content pos:start="1573:17" pos:end="1599:36"> <comment type="block" pos:start="1571:39" pos:end="1571:56">/* sll, V9 sllx */</comment>

                <expr_stmt pos:start="1573:17" pos:end="1573:46"><expr pos:start="1573:17" pos:end="1573:45"><name pos:start="1573:17" pos:end="1573:19">rs1</name> <operator pos:start="1573:21" pos:end="1573:21">=</operator> <call pos:start="1573:23" pos:end="1573:45"><name pos:start="1573:23" pos:end="1573:31">GET_FIELD</name><argument_list pos:start="1573:32" pos:end="1573:45">(<argument pos:start="1573:33" pos:end="1573:36"><expr pos:start="1573:33" pos:end="1573:36"><name pos:start="1573:33" pos:end="1573:36">insn</name></expr></argument>, <argument pos:start="1573:39" pos:end="1573:40"><expr pos:start="1573:39" pos:end="1573:40"><literal type="number" pos:start="1573:39" pos:end="1573:40">13</literal></expr></argument>, <argument pos:start="1573:43" pos:end="1573:44"><expr pos:start="1573:43" pos:end="1573:44"><literal type="number" pos:start="1573:43" pos:end="1573:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1575:17" pos:end="1575:37"><expr pos:start="1575:17" pos:end="1575:36"><call pos:start="1575:17" pos:end="1575:36"><name pos:start="1575:17" pos:end="1575:31">gen_movl_reg_T0</name><argument_list pos:start="1575:32" pos:end="1575:36">(<argument pos:start="1575:33" pos:end="1575:35"><expr pos:start="1575:33" pos:end="1575:35"><name pos:start="1575:33" pos:end="1575:35">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1577:17" pos:end="1589:17"><if pos:start="1577:17" pos:end="1583:17">if <condition pos:start="1577:20" pos:end="1577:27">(<expr pos:start="1577:21" pos:end="1577:26"><name pos:start="1577:21" pos:end="1577:26">IS_IMM</name></expr>)</condition> <block pos:start="1577:29" pos:end="1583:17">{<block_content pos:start="1579:21" pos:end="1581:42">   <comment type="block" pos:start="1577:33" pos:end="1577:47">/* immediate */</comment>

                    <expr_stmt pos:start="1579:21" pos:end="1579:51"><expr pos:start="1579:21" pos:end="1579:50"><name pos:start="1579:21" pos:end="1579:23">rs2</name> <operator pos:start="1579:25" pos:end="1579:25">=</operator> <call pos:start="1579:27" pos:end="1579:50"><name pos:start="1579:27" pos:end="1579:36">GET_FIELDs</name><argument_list pos:start="1579:37" pos:end="1579:50">(<argument pos:start="1579:38" pos:end="1579:41"><expr pos:start="1579:38" pos:end="1579:41"><name pos:start="1579:38" pos:end="1579:41">insn</name></expr></argument>, <argument pos:start="1579:44" pos:end="1579:45"><expr pos:start="1579:44" pos:end="1579:45"><literal type="number" pos:start="1579:44" pos:end="1579:45">20</literal></expr></argument>, <argument pos:start="1579:48" pos:end="1579:49"><expr pos:start="1579:48" pos:end="1579:49"><literal type="number" pos:start="1579:48" pos:end="1579:49">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1581:21" pos:end="1581:42"><expr pos:start="1581:21" pos:end="1581:41"><call pos:start="1581:21" pos:end="1581:41"><name pos:start="1581:21" pos:end="1581:36">gen_movl_simm_T1</name><argument_list pos:start="1581:37" pos:end="1581:41">(<argument pos:start="1581:38" pos:end="1581:40"><expr pos:start="1581:38" pos:end="1581:40"><name pos:start="1581:38" pos:end="1581:40">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1583:19" pos:end="1589:17">else <block pos:start="1583:24" pos:end="1589:17">{<block_content pos:start="1585:21" pos:end="1587:41">                <comment type="block" pos:start="1583:41" pos:end="1583:54">/* register */</comment>

                    <expr_stmt pos:start="1585:21" pos:end="1585:50"><expr pos:start="1585:21" pos:end="1585:49"><name pos:start="1585:21" pos:end="1585:23">rs2</name> <operator pos:start="1585:25" pos:end="1585:25">=</operator> <call pos:start="1585:27" pos:end="1585:49"><name pos:start="1585:27" pos:end="1585:35">GET_FIELD</name><argument_list pos:start="1585:36" pos:end="1585:49">(<argument pos:start="1585:37" pos:end="1585:40"><expr pos:start="1585:37" pos:end="1585:40"><name pos:start="1585:37" pos:end="1585:40">insn</name></expr></argument>, <argument pos:start="1585:43" pos:end="1585:44"><expr pos:start="1585:43" pos:end="1585:44"><literal type="number" pos:start="1585:43" pos:end="1585:44">27</literal></expr></argument>, <argument pos:start="1585:47" pos:end="1585:48"><expr pos:start="1585:47" pos:end="1585:48"><literal type="number" pos:start="1585:47" pos:end="1585:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1587:21" pos:end="1587:41"><expr pos:start="1587:21" pos:end="1587:40"><call pos:start="1587:21" pos:end="1587:40"><name pos:start="1587:21" pos:end="1587:35">gen_movl_reg_T1</name><argument_list pos:start="1587:36" pos:end="1587:40">(<argument pos:start="1587:37" pos:end="1587:39"><expr pos:start="1587:37" pos:end="1587:39"><name pos:start="1587:37" pos:end="1587:39">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="1591:17" pos:end="1597:33"><if pos:start="1591:17" pos:end="1593:34">if <condition pos:start="1591:20" pos:end="1591:37">(<expr pos:start="1591:21" pos:end="1591:36"><name pos:start="1591:21" pos:end="1591:24">insn</name> <operator pos:start="1591:26" pos:end="1591:26">&amp;</operator> <operator pos:start="1591:28" pos:end="1591:28">(</operator><literal type="number" pos:start="1591:29" pos:end="1591:29">1</literal> <operator pos:start="1591:31" pos:end="1591:32">&lt;&lt;</operator> <literal type="number" pos:start="1591:34" pos:end="1591:35">12</literal><operator pos:start="1591:36" pos:end="1591:36">)</operator></expr>)</condition><block type="pseudo" pos:start="1593:21" pos:end="1593:34"><block_content pos:start="1593:21" pos:end="1593:34">

                    <expr_stmt pos:start="1593:21" pos:end="1593:34"><expr pos:start="1593:21" pos:end="1593:33"><call pos:start="1593:21" pos:end="1593:33"><name pos:start="1593:21" pos:end="1593:31">gen_op_sllx</name><argument_list pos:start="1593:32" pos:end="1593:33">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1595:17" pos:end="1597:33">else<block type="pseudo" pos:start="1597:21" pos:end="1597:33"><block_content pos:start="1597:21" pos:end="1597:33">

                    <expr_stmt pos:start="1597:21" pos:end="1597:33"><expr pos:start="1597:21" pos:end="1597:32"><call pos:start="1597:21" pos:end="1597:32"><name pos:start="1597:21" pos:end="1597:30">gen_op_sll</name><argument_list pos:start="1597:31" pos:end="1597:32">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="1599:17" pos:end="1599:36"><expr pos:start="1599:17" pos:end="1599:35"><call pos:start="1599:17" pos:end="1599:35"><name pos:start="1599:17" pos:end="1599:31">gen_movl_T0_reg</name><argument_list pos:start="1599:32" pos:end="1599:35">(<argument pos:start="1599:33" pos:end="1599:34"><expr pos:start="1599:33" pos:end="1599:34"><name pos:start="1599:33" pos:end="1599:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="1601:15" pos:end="1631:13">else if <condition pos:start="1601:23" pos:end="1601:35">(<expr pos:start="1601:24" pos:end="1601:34"><name pos:start="1601:24" pos:end="1601:26">xop</name> <operator pos:start="1601:28" pos:end="1601:29">==</operator> <literal type="number" pos:start="1601:31" pos:end="1601:34">0x26</literal></expr>)</condition> <block pos:start="1601:37" pos:end="1631:13">{<block_content pos:start="1603:17" pos:end="1629:36"> <comment type="block" pos:start="1601:39" pos:end="1601:56">/* srl, V9 srlx */</comment>

                <expr_stmt pos:start="1603:17" pos:end="1603:46"><expr pos:start="1603:17" pos:end="1603:45"><name pos:start="1603:17" pos:end="1603:19">rs1</name> <operator pos:start="1603:21" pos:end="1603:21">=</operator> <call pos:start="1603:23" pos:end="1603:45"><name pos:start="1603:23" pos:end="1603:31">GET_FIELD</name><argument_list pos:start="1603:32" pos:end="1603:45">(<argument pos:start="1603:33" pos:end="1603:36"><expr pos:start="1603:33" pos:end="1603:36"><name pos:start="1603:33" pos:end="1603:36">insn</name></expr></argument>, <argument pos:start="1603:39" pos:end="1603:40"><expr pos:start="1603:39" pos:end="1603:40"><literal type="number" pos:start="1603:39" pos:end="1603:40">13</literal></expr></argument>, <argument pos:start="1603:43" pos:end="1603:44"><expr pos:start="1603:43" pos:end="1603:44"><literal type="number" pos:start="1603:43" pos:end="1603:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1605:17" pos:end="1605:37"><expr pos:start="1605:17" pos:end="1605:36"><call pos:start="1605:17" pos:end="1605:36"><name pos:start="1605:17" pos:end="1605:31">gen_movl_reg_T0</name><argument_list pos:start="1605:32" pos:end="1605:36">(<argument pos:start="1605:33" pos:end="1605:35"><expr pos:start="1605:33" pos:end="1605:35"><name pos:start="1605:33" pos:end="1605:35">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1607:17" pos:end="1619:17"><if pos:start="1607:17" pos:end="1613:17">if <condition pos:start="1607:20" pos:end="1607:27">(<expr pos:start="1607:21" pos:end="1607:26"><name pos:start="1607:21" pos:end="1607:26">IS_IMM</name></expr>)</condition> <block pos:start="1607:29" pos:end="1613:17">{<block_content pos:start="1609:21" pos:end="1611:42">   <comment type="block" pos:start="1607:33" pos:end="1607:47">/* immediate */</comment>

                    <expr_stmt pos:start="1609:21" pos:end="1609:51"><expr pos:start="1609:21" pos:end="1609:50"><name pos:start="1609:21" pos:end="1609:23">rs2</name> <operator pos:start="1609:25" pos:end="1609:25">=</operator> <call pos:start="1609:27" pos:end="1609:50"><name pos:start="1609:27" pos:end="1609:36">GET_FIELDs</name><argument_list pos:start="1609:37" pos:end="1609:50">(<argument pos:start="1609:38" pos:end="1609:41"><expr pos:start="1609:38" pos:end="1609:41"><name pos:start="1609:38" pos:end="1609:41">insn</name></expr></argument>, <argument pos:start="1609:44" pos:end="1609:45"><expr pos:start="1609:44" pos:end="1609:45"><literal type="number" pos:start="1609:44" pos:end="1609:45">20</literal></expr></argument>, <argument pos:start="1609:48" pos:end="1609:49"><expr pos:start="1609:48" pos:end="1609:49"><literal type="number" pos:start="1609:48" pos:end="1609:49">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1611:21" pos:end="1611:42"><expr pos:start="1611:21" pos:end="1611:41"><call pos:start="1611:21" pos:end="1611:41"><name pos:start="1611:21" pos:end="1611:36">gen_movl_simm_T1</name><argument_list pos:start="1611:37" pos:end="1611:41">(<argument pos:start="1611:38" pos:end="1611:40"><expr pos:start="1611:38" pos:end="1611:40"><name pos:start="1611:38" pos:end="1611:40">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1613:19" pos:end="1619:17">else <block pos:start="1613:24" pos:end="1619:17">{<block_content pos:start="1615:21" pos:end="1617:41">                <comment type="block" pos:start="1613:41" pos:end="1613:54">/* register */</comment>

                    <expr_stmt pos:start="1615:21" pos:end="1615:50"><expr pos:start="1615:21" pos:end="1615:49"><name pos:start="1615:21" pos:end="1615:23">rs2</name> <operator pos:start="1615:25" pos:end="1615:25">=</operator> <call pos:start="1615:27" pos:end="1615:49"><name pos:start="1615:27" pos:end="1615:35">GET_FIELD</name><argument_list pos:start="1615:36" pos:end="1615:49">(<argument pos:start="1615:37" pos:end="1615:40"><expr pos:start="1615:37" pos:end="1615:40"><name pos:start="1615:37" pos:end="1615:40">insn</name></expr></argument>, <argument pos:start="1615:43" pos:end="1615:44"><expr pos:start="1615:43" pos:end="1615:44"><literal type="number" pos:start="1615:43" pos:end="1615:44">27</literal></expr></argument>, <argument pos:start="1615:47" pos:end="1615:48"><expr pos:start="1615:47" pos:end="1615:48"><literal type="number" pos:start="1615:47" pos:end="1615:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1617:21" pos:end="1617:41"><expr pos:start="1617:21" pos:end="1617:40"><call pos:start="1617:21" pos:end="1617:40"><name pos:start="1617:21" pos:end="1617:35">gen_movl_reg_T1</name><argument_list pos:start="1617:36" pos:end="1617:40">(<argument pos:start="1617:37" pos:end="1617:39"><expr pos:start="1617:37" pos:end="1617:39"><name pos:start="1617:37" pos:end="1617:39">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="1621:17" pos:end="1627:33"><if pos:start="1621:17" pos:end="1623:34">if <condition pos:start="1621:20" pos:end="1621:37">(<expr pos:start="1621:21" pos:end="1621:36"><name pos:start="1621:21" pos:end="1621:24">insn</name> <operator pos:start="1621:26" pos:end="1621:26">&amp;</operator> <operator pos:start="1621:28" pos:end="1621:28">(</operator><literal type="number" pos:start="1621:29" pos:end="1621:29">1</literal> <operator pos:start="1621:31" pos:end="1621:32">&lt;&lt;</operator> <literal type="number" pos:start="1621:34" pos:end="1621:35">12</literal><operator pos:start="1621:36" pos:end="1621:36">)</operator></expr>)</condition><block type="pseudo" pos:start="1623:21" pos:end="1623:34"><block_content pos:start="1623:21" pos:end="1623:34">

                    <expr_stmt pos:start="1623:21" pos:end="1623:34"><expr pos:start="1623:21" pos:end="1623:33"><call pos:start="1623:21" pos:end="1623:33"><name pos:start="1623:21" pos:end="1623:31">gen_op_srlx</name><argument_list pos:start="1623:32" pos:end="1623:33">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1625:17" pos:end="1627:33">else<block type="pseudo" pos:start="1627:21" pos:end="1627:33"><block_content pos:start="1627:21" pos:end="1627:33">

                    <expr_stmt pos:start="1627:21" pos:end="1627:33"><expr pos:start="1627:21" pos:end="1627:32"><call pos:start="1627:21" pos:end="1627:32"><name pos:start="1627:21" pos:end="1627:30">gen_op_srl</name><argument_list pos:start="1627:31" pos:end="1627:32">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="1629:17" pos:end="1629:36"><expr pos:start="1629:17" pos:end="1629:35"><call pos:start="1629:17" pos:end="1629:35"><name pos:start="1629:17" pos:end="1629:31">gen_movl_T0_reg</name><argument_list pos:start="1629:32" pos:end="1629:35">(<argument pos:start="1629:33" pos:end="1629:34"><expr pos:start="1629:33" pos:end="1629:34"><name pos:start="1629:33" pos:end="1629:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="1631:15" pos:end="1663:13">else if <condition pos:start="1631:23" pos:end="1631:35">(<expr pos:start="1631:24" pos:end="1631:34"><name pos:start="1631:24" pos:end="1631:26">xop</name> <operator pos:start="1631:28" pos:end="1631:29">==</operator> <literal type="number" pos:start="1631:31" pos:end="1631:34">0x27</literal></expr>)</condition> <block pos:start="1631:37" pos:end="1663:13">{<block_content pos:start="1633:17" pos:end="1662:0"> <comment type="block" pos:start="1631:39" pos:end="1631:56">/* sra, V9 srax */</comment>

                <expr_stmt pos:start="1633:17" pos:end="1633:46"><expr pos:start="1633:17" pos:end="1633:45"><name pos:start="1633:17" pos:end="1633:19">rs1</name> <operator pos:start="1633:21" pos:end="1633:21">=</operator> <call pos:start="1633:23" pos:end="1633:45"><name pos:start="1633:23" pos:end="1633:31">GET_FIELD</name><argument_list pos:start="1633:32" pos:end="1633:45">(<argument pos:start="1633:33" pos:end="1633:36"><expr pos:start="1633:33" pos:end="1633:36"><name pos:start="1633:33" pos:end="1633:36">insn</name></expr></argument>, <argument pos:start="1633:39" pos:end="1633:40"><expr pos:start="1633:39" pos:end="1633:40"><literal type="number" pos:start="1633:39" pos:end="1633:40">13</literal></expr></argument>, <argument pos:start="1633:43" pos:end="1633:44"><expr pos:start="1633:43" pos:end="1633:44"><literal type="number" pos:start="1633:43" pos:end="1633:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1635:17" pos:end="1635:37"><expr pos:start="1635:17" pos:end="1635:36"><call pos:start="1635:17" pos:end="1635:36"><name pos:start="1635:17" pos:end="1635:31">gen_movl_reg_T0</name><argument_list pos:start="1635:32" pos:end="1635:36">(<argument pos:start="1635:33" pos:end="1635:35"><expr pos:start="1635:33" pos:end="1635:35"><name pos:start="1635:33" pos:end="1635:35">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1637:17" pos:end="1649:17"><if pos:start="1637:17" pos:end="1643:17">if <condition pos:start="1637:20" pos:end="1637:27">(<expr pos:start="1637:21" pos:end="1637:26"><name pos:start="1637:21" pos:end="1637:26">IS_IMM</name></expr>)</condition> <block pos:start="1637:29" pos:end="1643:17">{<block_content pos:start="1639:21" pos:end="1641:42">   <comment type="block" pos:start="1637:33" pos:end="1637:47">/* immediate */</comment>

                    <expr_stmt pos:start="1639:21" pos:end="1639:51"><expr pos:start="1639:21" pos:end="1639:50"><name pos:start="1639:21" pos:end="1639:23">rs2</name> <operator pos:start="1639:25" pos:end="1639:25">=</operator> <call pos:start="1639:27" pos:end="1639:50"><name pos:start="1639:27" pos:end="1639:36">GET_FIELDs</name><argument_list pos:start="1639:37" pos:end="1639:50">(<argument pos:start="1639:38" pos:end="1639:41"><expr pos:start="1639:38" pos:end="1639:41"><name pos:start="1639:38" pos:end="1639:41">insn</name></expr></argument>, <argument pos:start="1639:44" pos:end="1639:45"><expr pos:start="1639:44" pos:end="1639:45"><literal type="number" pos:start="1639:44" pos:end="1639:45">20</literal></expr></argument>, <argument pos:start="1639:48" pos:end="1639:49"><expr pos:start="1639:48" pos:end="1639:49"><literal type="number" pos:start="1639:48" pos:end="1639:49">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1641:21" pos:end="1641:42"><expr pos:start="1641:21" pos:end="1641:41"><call pos:start="1641:21" pos:end="1641:41"><name pos:start="1641:21" pos:end="1641:36">gen_movl_simm_T1</name><argument_list pos:start="1641:37" pos:end="1641:41">(<argument pos:start="1641:38" pos:end="1641:40"><expr pos:start="1641:38" pos:end="1641:40"><name pos:start="1641:38" pos:end="1641:40">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1643:19" pos:end="1649:17">else <block pos:start="1643:24" pos:end="1649:17">{<block_content pos:start="1645:21" pos:end="1647:41">                <comment type="block" pos:start="1643:41" pos:end="1643:54">/* register */</comment>

                    <expr_stmt pos:start="1645:21" pos:end="1645:50"><expr pos:start="1645:21" pos:end="1645:49"><name pos:start="1645:21" pos:end="1645:23">rs2</name> <operator pos:start="1645:25" pos:end="1645:25">=</operator> <call pos:start="1645:27" pos:end="1645:49"><name pos:start="1645:27" pos:end="1645:35">GET_FIELD</name><argument_list pos:start="1645:36" pos:end="1645:49">(<argument pos:start="1645:37" pos:end="1645:40"><expr pos:start="1645:37" pos:end="1645:40"><name pos:start="1645:37" pos:end="1645:40">insn</name></expr></argument>, <argument pos:start="1645:43" pos:end="1645:44"><expr pos:start="1645:43" pos:end="1645:44"><literal type="number" pos:start="1645:43" pos:end="1645:44">27</literal></expr></argument>, <argument pos:start="1645:47" pos:end="1645:48"><expr pos:start="1645:47" pos:end="1645:48"><literal type="number" pos:start="1645:47" pos:end="1645:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1647:21" pos:end="1647:41"><expr pos:start="1647:21" pos:end="1647:40"><call pos:start="1647:21" pos:end="1647:40"><name pos:start="1647:21" pos:end="1647:35">gen_movl_reg_T1</name><argument_list pos:start="1647:36" pos:end="1647:40">(<argument pos:start="1647:37" pos:end="1647:39"><expr pos:start="1647:37" pos:end="1647:39"><name pos:start="1647:37" pos:end="1647:39">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="1651:17" pos:end="1657:33"><if pos:start="1651:17" pos:end="1653:34">if <condition pos:start="1651:20" pos:end="1651:37">(<expr pos:start="1651:21" pos:end="1651:36"><name pos:start="1651:21" pos:end="1651:24">insn</name> <operator pos:start="1651:26" pos:end="1651:26">&amp;</operator> <operator pos:start="1651:28" pos:end="1651:28">(</operator><literal type="number" pos:start="1651:29" pos:end="1651:29">1</literal> <operator pos:start="1651:31" pos:end="1651:32">&lt;&lt;</operator> <literal type="number" pos:start="1651:34" pos:end="1651:35">12</literal><operator pos:start="1651:36" pos:end="1651:36">)</operator></expr>)</condition><block type="pseudo" pos:start="1653:21" pos:end="1653:34"><block_content pos:start="1653:21" pos:end="1653:34">

                    <expr_stmt pos:start="1653:21" pos:end="1653:34"><expr pos:start="1653:21" pos:end="1653:33"><call pos:start="1653:21" pos:end="1653:33"><name pos:start="1653:21" pos:end="1653:31">gen_op_srax</name><argument_list pos:start="1653:32" pos:end="1653:33">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1655:17" pos:end="1657:33">else<block type="pseudo" pos:start="1657:21" pos:end="1657:33"><block_content pos:start="1657:21" pos:end="1657:33">

                    <expr_stmt pos:start="1657:21" pos:end="1657:33"><expr pos:start="1657:21" pos:end="1657:32"><call pos:start="1657:21" pos:end="1657:32"><name pos:start="1657:21" pos:end="1657:30">gen_op_sra</name><argument_list pos:start="1657:31" pos:end="1657:32">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="1659:17" pos:end="1662:0"><expr pos:start="1659:17" pos:end="1659:35"><call pos:start="1659:17" pos:end="1659:35"><name pos:start="1659:17" pos:end="1659:31">gen_movl_T0_reg</name><argument_list pos:start="1659:32" pos:end="1659:35">(<argument pos:start="1659:33" pos:end="1659:34"><expr pos:start="1659:33" pos:end="1659:34"><name pos:start="1659:33" pos:end="1659:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1661:1" pos:end="1661:6">#<cpp:directive pos:start="1661:2" pos:end="1661:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></if> <if type="elseif" pos:start="1663:15" pos:end="2547:13">else if <condition pos:start="1663:23" pos:end="1663:34">(<expr pos:start="1663:24" pos:end="1663:33"><name pos:start="1663:24" pos:end="1663:26">xop</name> <operator pos:start="1663:28" pos:end="1663:28">&lt;</operator> <literal type="number" pos:start="1663:30" pos:end="1663:33">0x36</literal></expr>)</condition> <block pos:start="1663:36" pos:end="2547:13">{<block_content pos:start="1665:17" pos:end="2545:17">

                <expr_stmt pos:start="1665:17" pos:end="1665:46"><expr pos:start="1665:17" pos:end="1665:45"><name pos:start="1665:17" pos:end="1665:19">rs1</name> <operator pos:start="1665:21" pos:end="1665:21">=</operator> <call pos:start="1665:23" pos:end="1665:45"><name pos:start="1665:23" pos:end="1665:31">GET_FIELD</name><argument_list pos:start="1665:32" pos:end="1665:45">(<argument pos:start="1665:33" pos:end="1665:36"><expr pos:start="1665:33" pos:end="1665:36"><name pos:start="1665:33" pos:end="1665:36">insn</name></expr></argument>, <argument pos:start="1665:39" pos:end="1665:40"><expr pos:start="1665:39" pos:end="1665:40"><literal type="number" pos:start="1665:39" pos:end="1665:40">13</literal></expr></argument>, <argument pos:start="1665:43" pos:end="1665:44"><expr pos:start="1665:43" pos:end="1665:44"><literal type="number" pos:start="1665:43" pos:end="1665:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1667:17" pos:end="1667:37"><expr pos:start="1667:17" pos:end="1667:36"><call pos:start="1667:17" pos:end="1667:36"><name pos:start="1667:17" pos:end="1667:31">gen_movl_reg_T0</name><argument_list pos:start="1667:32" pos:end="1667:36">(<argument pos:start="1667:33" pos:end="1667:35"><expr pos:start="1667:33" pos:end="1667:35"><name pos:start="1667:33" pos:end="1667:35">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1669:17" pos:end="1681:17"><if pos:start="1669:17" pos:end="1675:17">if <condition pos:start="1669:20" pos:end="1669:27">(<expr pos:start="1669:21" pos:end="1669:26"><name pos:start="1669:21" pos:end="1669:26">IS_IMM</name></expr>)</condition> <block pos:start="1669:29" pos:end="1675:17">{<block_content pos:start="1671:21" pos:end="1673:42">   <comment type="block" pos:start="1669:33" pos:end="1669:47">/* immediate */</comment>

                    <expr_stmt pos:start="1671:21" pos:end="1671:51"><expr pos:start="1671:21" pos:end="1671:50"><name pos:start="1671:21" pos:end="1671:23">rs2</name> <operator pos:start="1671:25" pos:end="1671:25">=</operator> <call pos:start="1671:27" pos:end="1671:50"><name pos:start="1671:27" pos:end="1671:36">GET_FIELDs</name><argument_list pos:start="1671:37" pos:end="1671:50">(<argument pos:start="1671:38" pos:end="1671:41"><expr pos:start="1671:38" pos:end="1671:41"><name pos:start="1671:38" pos:end="1671:41">insn</name></expr></argument>, <argument pos:start="1671:44" pos:end="1671:45"><expr pos:start="1671:44" pos:end="1671:45"><literal type="number" pos:start="1671:44" pos:end="1671:45">19</literal></expr></argument>, <argument pos:start="1671:48" pos:end="1671:49"><expr pos:start="1671:48" pos:end="1671:49"><literal type="number" pos:start="1671:48" pos:end="1671:49">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1673:21" pos:end="1673:42"><expr pos:start="1673:21" pos:end="1673:41"><call pos:start="1673:21" pos:end="1673:41"><name pos:start="1673:21" pos:end="1673:36">gen_movl_simm_T1</name><argument_list pos:start="1673:37" pos:end="1673:41">(<argument pos:start="1673:38" pos:end="1673:40"><expr pos:start="1673:38" pos:end="1673:40"><name pos:start="1673:38" pos:end="1673:40">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1675:19" pos:end="1681:17">else <block pos:start="1675:24" pos:end="1681:17">{<block_content pos:start="1677:21" pos:end="1679:41">                <comment type="block" pos:start="1675:41" pos:end="1675:54">/* register */</comment>

                    <expr_stmt pos:start="1677:21" pos:end="1677:50"><expr pos:start="1677:21" pos:end="1677:49"><name pos:start="1677:21" pos:end="1677:23">rs2</name> <operator pos:start="1677:25" pos:end="1677:25">=</operator> <call pos:start="1677:27" pos:end="1677:49"><name pos:start="1677:27" pos:end="1677:35">GET_FIELD</name><argument_list pos:start="1677:36" pos:end="1677:49">(<argument pos:start="1677:37" pos:end="1677:40"><expr pos:start="1677:37" pos:end="1677:40"><name pos:start="1677:37" pos:end="1677:40">insn</name></expr></argument>, <argument pos:start="1677:43" pos:end="1677:44"><expr pos:start="1677:43" pos:end="1677:44"><literal type="number" pos:start="1677:43" pos:end="1677:44">27</literal></expr></argument>, <argument pos:start="1677:47" pos:end="1677:48"><expr pos:start="1677:47" pos:end="1677:48"><literal type="number" pos:start="1677:47" pos:end="1677:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1679:21" pos:end="1679:41"><expr pos:start="1679:21" pos:end="1679:40"><call pos:start="1679:21" pos:end="1679:40"><name pos:start="1679:21" pos:end="1679:35">gen_movl_reg_T1</name><argument_list pos:start="1679:36" pos:end="1679:40">(<argument pos:start="1679:37" pos:end="1679:39"><expr pos:start="1679:37" pos:end="1679:39"><name pos:start="1679:37" pos:end="1679:39">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="1683:17" pos:end="2545:17"><if pos:start="1683:17" pos:end="1863:17">if <condition pos:start="1683:20" pos:end="1683:31">(<expr pos:start="1683:21" pos:end="1683:30"><name pos:start="1683:21" pos:end="1683:23">xop</name> <operator pos:start="1683:25" pos:end="1683:25">&lt;</operator> <literal type="number" pos:start="1683:27" pos:end="1683:30">0x20</literal></expr>)</condition> <block pos:start="1683:33" pos:end="1863:17">{<block_content pos:start="1685:21" pos:end="1861:40">

                    <switch pos:start="1685:21" pos:end="1859:21">switch <condition pos:start="1685:28" pos:end="1685:40">(<expr pos:start="1685:29" pos:end="1685:39"><name pos:start="1685:29" pos:end="1685:31">xop</name> <operator pos:start="1685:33" pos:end="1685:33">&amp;</operator> <operator pos:start="1685:35" pos:end="1685:35">~</operator><literal type="number" pos:start="1685:36" pos:end="1685:39">0x10</literal></expr>)</condition> <block pos:start="1685:42" pos:end="1859:21">{<block_content pos:start="1687:21" pos:end="1857:42">

                    <case pos:start="1687:21" pos:end="1687:29">case <expr pos:start="1687:26" pos:end="1687:28"><literal type="number" pos:start="1687:26" pos:end="1687:28">0x0</literal></expr>:</case>

                        <if_stmt pos:start="1689:25" pos:end="1695:47"><if pos:start="1689:25" pos:end="1691:50">if <condition pos:start="1689:28" pos:end="1689:39">(<expr pos:start="1689:29" pos:end="1689:38"><name pos:start="1689:29" pos:end="1689:31">xop</name> <operator pos:start="1689:33" pos:end="1689:33">&amp;</operator> <literal type="number" pos:start="1689:35" pos:end="1689:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1691:29" pos:end="1691:50"><block_content pos:start="1691:29" pos:end="1691:50">

                            <expr_stmt pos:start="1691:29" pos:end="1691:50"><expr pos:start="1691:29" pos:end="1691:49"><call pos:start="1691:29" pos:end="1691:49"><name pos:start="1691:29" pos:end="1691:47">gen_op_add_T1_T0_cc</name><argument_list pos:start="1691:48" pos:end="1691:49">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1693:25" pos:end="1695:47">else<block type="pseudo" pos:start="1695:29" pos:end="1695:47"><block_content pos:start="1695:29" pos:end="1695:47">

                            <expr_stmt pos:start="1695:29" pos:end="1695:47"><expr pos:start="1695:29" pos:end="1695:46"><call pos:start="1695:29" pos:end="1695:46"><name pos:start="1695:29" pos:end="1695:44">gen_op_add_T1_T0</name><argument_list pos:start="1695:45" pos:end="1695:46">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <break pos:start="1697:25" pos:end="1697:30">break;</break>

                    <case pos:start="1699:21" pos:end="1699:29">case <expr pos:start="1699:26" pos:end="1699:28"><literal type="number" pos:start="1699:26" pos:end="1699:28">0x1</literal></expr>:</case>

                        <expr_stmt pos:start="1701:25" pos:end="1701:43"><expr pos:start="1701:25" pos:end="1701:42"><call pos:start="1701:25" pos:end="1701:42"><name pos:start="1701:25" pos:end="1701:40">gen_op_and_T1_T0</name><argument_list pos:start="1701:41" pos:end="1701:42">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1703:25" pos:end="1705:49"><if pos:start="1703:25" pos:end="1705:49">if <condition pos:start="1703:28" pos:end="1703:39">(<expr pos:start="1703:29" pos:end="1703:38"><name pos:start="1703:29" pos:end="1703:31">xop</name> <operator pos:start="1703:33" pos:end="1703:33">&amp;</operator> <literal type="number" pos:start="1703:35" pos:end="1703:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1705:29" pos:end="1705:49"><block_content pos:start="1705:29" pos:end="1705:49">

                            <expr_stmt pos:start="1705:29" pos:end="1705:49"><expr pos:start="1705:29" pos:end="1705:48"><call pos:start="1705:29" pos:end="1705:48"><name pos:start="1705:29" pos:end="1705:46">gen_op_logic_T0_cc</name><argument_list pos:start="1705:47" pos:end="1705:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1707:25" pos:end="1707:30">break;</break>

                    <case pos:start="1709:21" pos:end="1709:29">case <expr pos:start="1709:26" pos:end="1709:28"><literal type="number" pos:start="1709:26" pos:end="1709:28">0x2</literal></expr>:</case>

                        <expr_stmt pos:start="1711:25" pos:end="1711:42"><expr pos:start="1711:25" pos:end="1711:41"><call pos:start="1711:25" pos:end="1711:41"><name pos:start="1711:25" pos:end="1711:39">gen_op_or_T1_T0</name><argument_list pos:start="1711:40" pos:end="1711:41">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1713:25" pos:end="1715:49"><if pos:start="1713:25" pos:end="1715:49">if <condition pos:start="1713:28" pos:end="1713:39">(<expr pos:start="1713:29" pos:end="1713:38"><name pos:start="1713:29" pos:end="1713:31">xop</name> <operator pos:start="1713:33" pos:end="1713:33">&amp;</operator> <literal type="number" pos:start="1713:35" pos:end="1713:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1715:29" pos:end="1715:49"><block_content pos:start="1715:29" pos:end="1715:49">

                            <expr_stmt pos:start="1715:29" pos:end="1715:49"><expr pos:start="1715:29" pos:end="1715:48"><call pos:start="1715:29" pos:end="1715:48"><name pos:start="1715:29" pos:end="1715:46">gen_op_logic_T0_cc</name><argument_list pos:start="1715:47" pos:end="1715:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1717:25" pos:end="1717:30">break;</break>

                    <case pos:start="1719:21" pos:end="1719:29">case <expr pos:start="1719:26" pos:end="1719:28"><literal type="number" pos:start="1719:26" pos:end="1719:28">0x3</literal></expr>:</case>

                        <expr_stmt pos:start="1721:25" pos:end="1721:43"><expr pos:start="1721:25" pos:end="1721:42"><call pos:start="1721:25" pos:end="1721:42"><name pos:start="1721:25" pos:end="1721:40">gen_op_xor_T1_T0</name><argument_list pos:start="1721:41" pos:end="1721:42">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1723:25" pos:end="1725:49"><if pos:start="1723:25" pos:end="1725:49">if <condition pos:start="1723:28" pos:end="1723:39">(<expr pos:start="1723:29" pos:end="1723:38"><name pos:start="1723:29" pos:end="1723:31">xop</name> <operator pos:start="1723:33" pos:end="1723:33">&amp;</operator> <literal type="number" pos:start="1723:35" pos:end="1723:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1725:29" pos:end="1725:49"><block_content pos:start="1725:29" pos:end="1725:49">

                            <expr_stmt pos:start="1725:29" pos:end="1725:49"><expr pos:start="1725:29" pos:end="1725:48"><call pos:start="1725:29" pos:end="1725:48"><name pos:start="1725:29" pos:end="1725:46">gen_op_logic_T0_cc</name><argument_list pos:start="1725:47" pos:end="1725:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1727:25" pos:end="1727:30">break;</break>

                    <case pos:start="1729:21" pos:end="1729:29">case <expr pos:start="1729:26" pos:end="1729:28"><literal type="number" pos:start="1729:26" pos:end="1729:28">0x4</literal></expr>:</case>

                        <if_stmt pos:start="1731:25" pos:end="1737:47"><if pos:start="1731:25" pos:end="1733:50">if <condition pos:start="1731:28" pos:end="1731:39">(<expr pos:start="1731:29" pos:end="1731:38"><name pos:start="1731:29" pos:end="1731:31">xop</name> <operator pos:start="1731:33" pos:end="1731:33">&amp;</operator> <literal type="number" pos:start="1731:35" pos:end="1731:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1733:29" pos:end="1733:50"><block_content pos:start="1733:29" pos:end="1733:50">

                            <expr_stmt pos:start="1733:29" pos:end="1733:50"><expr pos:start="1733:29" pos:end="1733:49"><call pos:start="1733:29" pos:end="1733:49"><name pos:start="1733:29" pos:end="1733:47">gen_op_sub_T1_T0_cc</name><argument_list pos:start="1733:48" pos:end="1733:49">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1735:25" pos:end="1737:47">else<block type="pseudo" pos:start="1737:29" pos:end="1737:47"><block_content pos:start="1737:29" pos:end="1737:47">

                            <expr_stmt pos:start="1737:29" pos:end="1737:47"><expr pos:start="1737:29" pos:end="1737:46"><call pos:start="1737:29" pos:end="1737:46"><name pos:start="1737:29" pos:end="1737:44">gen_op_sub_T1_T0</name><argument_list pos:start="1737:45" pos:end="1737:46">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <break pos:start="1739:25" pos:end="1739:30">break;</break>

                    <case pos:start="1741:21" pos:end="1741:29">case <expr pos:start="1741:26" pos:end="1741:28"><literal type="number" pos:start="1741:26" pos:end="1741:28">0x5</literal></expr>:</case>

                        <expr_stmt pos:start="1743:25" pos:end="1743:44"><expr pos:start="1743:25" pos:end="1743:43"><call pos:start="1743:25" pos:end="1743:43"><name pos:start="1743:25" pos:end="1743:41">gen_op_andn_T1_T0</name><argument_list pos:start="1743:42" pos:end="1743:43">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1745:25" pos:end="1747:49"><if pos:start="1745:25" pos:end="1747:49">if <condition pos:start="1745:28" pos:end="1745:39">(<expr pos:start="1745:29" pos:end="1745:38"><name pos:start="1745:29" pos:end="1745:31">xop</name> <operator pos:start="1745:33" pos:end="1745:33">&amp;</operator> <literal type="number" pos:start="1745:35" pos:end="1745:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1747:29" pos:end="1747:49"><block_content pos:start="1747:29" pos:end="1747:49">

                            <expr_stmt pos:start="1747:29" pos:end="1747:49"><expr pos:start="1747:29" pos:end="1747:48"><call pos:start="1747:29" pos:end="1747:48"><name pos:start="1747:29" pos:end="1747:46">gen_op_logic_T0_cc</name><argument_list pos:start="1747:47" pos:end="1747:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1749:25" pos:end="1749:30">break;</break>

                    <case pos:start="1751:21" pos:end="1751:29">case <expr pos:start="1751:26" pos:end="1751:28"><literal type="number" pos:start="1751:26" pos:end="1751:28">0x6</literal></expr>:</case>

                        <expr_stmt pos:start="1753:25" pos:end="1753:43"><expr pos:start="1753:25" pos:end="1753:42"><call pos:start="1753:25" pos:end="1753:42"><name pos:start="1753:25" pos:end="1753:40">gen_op_orn_T1_T0</name><argument_list pos:start="1753:41" pos:end="1753:42">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1755:25" pos:end="1757:49"><if pos:start="1755:25" pos:end="1757:49">if <condition pos:start="1755:28" pos:end="1755:39">(<expr pos:start="1755:29" pos:end="1755:38"><name pos:start="1755:29" pos:end="1755:31">xop</name> <operator pos:start="1755:33" pos:end="1755:33">&amp;</operator> <literal type="number" pos:start="1755:35" pos:end="1755:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1757:29" pos:end="1757:49"><block_content pos:start="1757:29" pos:end="1757:49">

                            <expr_stmt pos:start="1757:29" pos:end="1757:49"><expr pos:start="1757:29" pos:end="1757:48"><call pos:start="1757:29" pos:end="1757:48"><name pos:start="1757:29" pos:end="1757:46">gen_op_logic_T0_cc</name><argument_list pos:start="1757:47" pos:end="1757:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1759:25" pos:end="1759:30">break;</break>

                    <case pos:start="1761:21" pos:end="1761:29">case <expr pos:start="1761:26" pos:end="1761:28"><literal type="number" pos:start="1761:26" pos:end="1761:28">0x7</literal></expr>:</case>

                        <expr_stmt pos:start="1763:25" pos:end="1763:44"><expr pos:start="1763:25" pos:end="1763:43"><call pos:start="1763:25" pos:end="1763:43"><name pos:start="1763:25" pos:end="1763:41">gen_op_xnor_T1_T0</name><argument_list pos:start="1763:42" pos:end="1763:43">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1765:25" pos:end="1767:49"><if pos:start="1765:25" pos:end="1767:49">if <condition pos:start="1765:28" pos:end="1765:39">(<expr pos:start="1765:29" pos:end="1765:38"><name pos:start="1765:29" pos:end="1765:31">xop</name> <operator pos:start="1765:33" pos:end="1765:33">&amp;</operator> <literal type="number" pos:start="1765:35" pos:end="1765:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1767:29" pos:end="1767:49"><block_content pos:start="1767:29" pos:end="1767:49">

                            <expr_stmt pos:start="1767:29" pos:end="1767:49"><expr pos:start="1767:29" pos:end="1767:48"><call pos:start="1767:29" pos:end="1767:48"><name pos:start="1767:29" pos:end="1767:46">gen_op_logic_T0_cc</name><argument_list pos:start="1767:47" pos:end="1767:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1769:25" pos:end="1769:30">break;</break>

                    <case pos:start="1771:21" pos:end="1771:29">case <expr pos:start="1771:26" pos:end="1771:28"><literal type="number" pos:start="1771:26" pos:end="1771:28">0x8</literal></expr>:</case>

                        <if_stmt pos:start="1773:25" pos:end="1779:48"><if pos:start="1773:25" pos:end="1775:51">if <condition pos:start="1773:28" pos:end="1773:39">(<expr pos:start="1773:29" pos:end="1773:38"><name pos:start="1773:29" pos:end="1773:31">xop</name> <operator pos:start="1773:33" pos:end="1773:33">&amp;</operator> <literal type="number" pos:start="1773:35" pos:end="1773:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1775:29" pos:end="1775:51"><block_content pos:start="1775:29" pos:end="1775:51">

                            <expr_stmt pos:start="1775:29" pos:end="1775:51"><expr pos:start="1775:29" pos:end="1775:50"><call pos:start="1775:29" pos:end="1775:50"><name pos:start="1775:29" pos:end="1775:48">gen_op_addx_T1_T0_cc</name><argument_list pos:start="1775:49" pos:end="1775:50">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1777:25" pos:end="1779:48">else<block type="pseudo" pos:start="1779:29" pos:end="1779:48"><block_content pos:start="1779:29" pos:end="1779:48">

                            <expr_stmt pos:start="1779:29" pos:end="1779:48"><expr pos:start="1779:29" pos:end="1779:47"><call pos:start="1779:29" pos:end="1779:47"><name pos:start="1779:29" pos:end="1779:45">gen_op_addx_T1_T0</name><argument_list pos:start="1779:46" pos:end="1779:47">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <break pos:start="1781:25" pos:end="1784:0">break;</break>

<cpp:ifdef pos:start="1783:1" pos:end="1783:21">#<cpp:directive pos:start="1783:2" pos:end="1783:6">ifdef</cpp:directive> <name pos:start="1783:8" pos:end="1783:21">TARGET_SPARC64</name></cpp:ifdef>

                    <case pos:start="1785:21" pos:end="1785:29">case <expr pos:start="1785:26" pos:end="1785:28"><literal type="number" pos:start="1785:26" pos:end="1785:28">0x9</literal></expr>:</case> <comment type="block" pos:start="1785:31" pos:end="1785:43">/* V9 mulx */</comment>

                        <expr_stmt pos:start="1787:25" pos:end="1787:44"><expr pos:start="1787:25" pos:end="1787:43"><call pos:start="1787:25" pos:end="1787:43"><name pos:start="1787:25" pos:end="1787:41">gen_op_mulx_T1_T0</name><argument_list pos:start="1787:42" pos:end="1787:43">()</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1789:25" pos:end="1792:0">break;</break>

<cpp:endif pos:start="1791:1" pos:end="1791:6">#<cpp:directive pos:start="1791:2" pos:end="1791:6">endif</cpp:directive></cpp:endif>

                    <case pos:start="1793:21" pos:end="1793:29">case <expr pos:start="1793:26" pos:end="1793:28"><literal type="number" pos:start="1793:26" pos:end="1793:28">0xa</literal></expr>:</case>

                        <expr_stmt pos:start="1795:25" pos:end="1795:44"><expr pos:start="1795:25" pos:end="1795:43"><call pos:start="1795:25" pos:end="1795:43"><name pos:start="1795:25" pos:end="1795:41">gen_op_umul_T1_T0</name><argument_list pos:start="1795:42" pos:end="1795:43">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1797:25" pos:end="1799:49"><if pos:start="1797:25" pos:end="1799:49">if <condition pos:start="1797:28" pos:end="1797:39">(<expr pos:start="1797:29" pos:end="1797:38"><name pos:start="1797:29" pos:end="1797:31">xop</name> <operator pos:start="1797:33" pos:end="1797:33">&amp;</operator> <literal type="number" pos:start="1797:35" pos:end="1797:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1799:29" pos:end="1799:49"><block_content pos:start="1799:29" pos:end="1799:49">

                            <expr_stmt pos:start="1799:29" pos:end="1799:49"><expr pos:start="1799:29" pos:end="1799:48"><call pos:start="1799:29" pos:end="1799:48"><name pos:start="1799:29" pos:end="1799:46">gen_op_logic_T0_cc</name><argument_list pos:start="1799:47" pos:end="1799:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1801:25" pos:end="1801:30">break;</break>

                    <case pos:start="1803:21" pos:end="1803:29">case <expr pos:start="1803:26" pos:end="1803:28"><literal type="number" pos:start="1803:26" pos:end="1803:28">0xb</literal></expr>:</case>

                        <expr_stmt pos:start="1805:25" pos:end="1805:44"><expr pos:start="1805:25" pos:end="1805:43"><call pos:start="1805:25" pos:end="1805:43"><name pos:start="1805:25" pos:end="1805:41">gen_op_smul_T1_T0</name><argument_list pos:start="1805:42" pos:end="1805:43">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1807:25" pos:end="1809:49"><if pos:start="1807:25" pos:end="1809:49">if <condition pos:start="1807:28" pos:end="1807:39">(<expr pos:start="1807:29" pos:end="1807:38"><name pos:start="1807:29" pos:end="1807:31">xop</name> <operator pos:start="1807:33" pos:end="1807:33">&amp;</operator> <literal type="number" pos:start="1807:35" pos:end="1807:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1809:29" pos:end="1809:49"><block_content pos:start="1809:29" pos:end="1809:49">

                            <expr_stmt pos:start="1809:29" pos:end="1809:49"><expr pos:start="1809:29" pos:end="1809:48"><call pos:start="1809:29" pos:end="1809:48"><name pos:start="1809:29" pos:end="1809:46">gen_op_logic_T0_cc</name><argument_list pos:start="1809:47" pos:end="1809:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1811:25" pos:end="1811:30">break;</break>

                    <case pos:start="1813:21" pos:end="1813:29">case <expr pos:start="1813:26" pos:end="1813:28"><literal type="number" pos:start="1813:26" pos:end="1813:28">0xc</literal></expr>:</case>

                        <if_stmt pos:start="1815:25" pos:end="1821:48"><if pos:start="1815:25" pos:end="1817:51">if <condition pos:start="1815:28" pos:end="1815:39">(<expr pos:start="1815:29" pos:end="1815:38"><name pos:start="1815:29" pos:end="1815:31">xop</name> <operator pos:start="1815:33" pos:end="1815:33">&amp;</operator> <literal type="number" pos:start="1815:35" pos:end="1815:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1817:29" pos:end="1817:51"><block_content pos:start="1817:29" pos:end="1817:51">

                            <expr_stmt pos:start="1817:29" pos:end="1817:51"><expr pos:start="1817:29" pos:end="1817:50"><call pos:start="1817:29" pos:end="1817:50"><name pos:start="1817:29" pos:end="1817:48">gen_op_subx_T1_T0_cc</name><argument_list pos:start="1817:49" pos:end="1817:50">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1819:25" pos:end="1821:48">else<block type="pseudo" pos:start="1821:29" pos:end="1821:48"><block_content pos:start="1821:29" pos:end="1821:48">

                            <expr_stmt pos:start="1821:29" pos:end="1821:48"><expr pos:start="1821:29" pos:end="1821:47"><call pos:start="1821:29" pos:end="1821:47"><name pos:start="1821:29" pos:end="1821:45">gen_op_subx_T1_T0</name><argument_list pos:start="1821:46" pos:end="1821:47">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <break pos:start="1823:25" pos:end="1826:0">break;</break>

<cpp:ifdef pos:start="1825:1" pos:end="1825:21">#<cpp:directive pos:start="1825:2" pos:end="1825:6">ifdef</cpp:directive> <name pos:start="1825:8" pos:end="1825:21">TARGET_SPARC64</name></cpp:ifdef>

                    <case pos:start="1827:21" pos:end="1827:29">case <expr pos:start="1827:26" pos:end="1827:28"><literal type="number" pos:start="1827:26" pos:end="1827:28">0xd</literal></expr>:</case> <comment type="block" pos:start="1827:31" pos:end="1827:44">/* V9 udivx */</comment>

                        <expr_stmt pos:start="1829:25" pos:end="1829:45"><expr pos:start="1829:25" pos:end="1829:44"><call pos:start="1829:25" pos:end="1829:44"><name pos:start="1829:25" pos:end="1829:42">gen_op_udivx_T1_T0</name><argument_list pos:start="1829:43" pos:end="1829:44">()</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1831:25" pos:end="1834:0">break;</break>

<cpp:endif pos:start="1833:1" pos:end="1833:6">#<cpp:directive pos:start="1833:2" pos:end="1833:6">endif</cpp:directive></cpp:endif>

                    <case pos:start="1835:21" pos:end="1835:29">case <expr pos:start="1835:26" pos:end="1835:28"><literal type="number" pos:start="1835:26" pos:end="1835:28">0xe</literal></expr>:</case>

                        <expr_stmt pos:start="1837:25" pos:end="1837:44"><expr pos:start="1837:25" pos:end="1837:43"><call pos:start="1837:25" pos:end="1837:43"><name pos:start="1837:25" pos:end="1837:41">gen_op_udiv_T1_T0</name><argument_list pos:start="1837:42" pos:end="1837:43">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1839:25" pos:end="1841:44"><if pos:start="1839:25" pos:end="1841:44">if <condition pos:start="1839:28" pos:end="1839:39">(<expr pos:start="1839:29" pos:end="1839:38"><name pos:start="1839:29" pos:end="1839:31">xop</name> <operator pos:start="1839:33" pos:end="1839:33">&amp;</operator> <literal type="number" pos:start="1839:35" pos:end="1839:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1841:29" pos:end="1841:44"><block_content pos:start="1841:29" pos:end="1841:44">

                            <expr_stmt pos:start="1841:29" pos:end="1841:44"><expr pos:start="1841:29" pos:end="1841:43"><call pos:start="1841:29" pos:end="1841:43"><name pos:start="1841:29" pos:end="1841:41">gen_op_div_cc</name><argument_list pos:start="1841:42" pos:end="1841:43">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1843:25" pos:end="1843:30">break;</break>

                    <case pos:start="1845:21" pos:end="1845:29">case <expr pos:start="1845:26" pos:end="1845:28"><literal type="number" pos:start="1845:26" pos:end="1845:28">0xf</literal></expr>:</case>

                        <expr_stmt pos:start="1847:25" pos:end="1847:44"><expr pos:start="1847:25" pos:end="1847:43"><call pos:start="1847:25" pos:end="1847:43"><name pos:start="1847:25" pos:end="1847:41">gen_op_sdiv_T1_T0</name><argument_list pos:start="1847:42" pos:end="1847:43">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1849:25" pos:end="1851:44"><if pos:start="1849:25" pos:end="1851:44">if <condition pos:start="1849:28" pos:end="1849:39">(<expr pos:start="1849:29" pos:end="1849:38"><name pos:start="1849:29" pos:end="1849:31">xop</name> <operator pos:start="1849:33" pos:end="1849:33">&amp;</operator> <literal type="number" pos:start="1849:35" pos:end="1849:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1851:29" pos:end="1851:44"><block_content pos:start="1851:29" pos:end="1851:44">

                            <expr_stmt pos:start="1851:29" pos:end="1851:44"><expr pos:start="1851:29" pos:end="1851:43"><call pos:start="1851:29" pos:end="1851:43"><name pos:start="1851:29" pos:end="1851:41">gen_op_div_cc</name><argument_list pos:start="1851:42" pos:end="1851:43">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1853:25" pos:end="1853:30">break;</break>

                    <default pos:start="1855:21" pos:end="1855:28">default:</default>

                        <goto pos:start="1857:25" pos:end="1857:42">goto <name pos:start="1857:30" pos:end="1857:41">illegal_insn</name>;</goto>

                    </block_content>}</block></switch>

                    <expr_stmt pos:start="1861:21" pos:end="1861:40"><expr pos:start="1861:21" pos:end="1861:39"><call pos:start="1861:21" pos:end="1861:39"><name pos:start="1861:21" pos:end="1861:35">gen_movl_T0_reg</name><argument_list pos:start="1861:36" pos:end="1861:39">(<argument pos:start="1861:37" pos:end="1861:38"><expr pos:start="1861:37" pos:end="1861:38"><name pos:start="1861:37" pos:end="1861:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1863:19" pos:end="2545:17">else <block pos:start="1863:24" pos:end="2545:17">{<block_content pos:start="1865:21" pos:end="2543:21">

                    <switch pos:start="1865:21" pos:end="2543:21">switch <condition pos:start="1865:28" pos:end="1865:32">(<expr pos:start="1865:29" pos:end="1865:31"><name pos:start="1865:29" pos:end="1865:31">xop</name></expr>)</condition> <block pos:start="1865:34" pos:end="2543:21">{<block_content pos:start="1867:21" pos:end="2541:42">

                    <case pos:start="1867:21" pos:end="1867:30">case <expr pos:start="1867:26" pos:end="1867:29"><literal type="number" pos:start="1867:26" pos:end="1867:29">0x20</literal></expr>:</case> <comment type="block" pos:start="1867:32" pos:end="1867:43">/* taddcc */</comment>

                        <expr_stmt pos:start="1869:25" pos:end="1869:47"><expr pos:start="1869:25" pos:end="1869:46"><call pos:start="1869:25" pos:end="1869:46"><name pos:start="1869:25" pos:end="1869:44">gen_op_tadd_T1_T0_cc</name><argument_list pos:start="1869:45" pos:end="1869:46">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1871:25" pos:end="1871:44"><expr pos:start="1871:25" pos:end="1871:43"><call pos:start="1871:25" pos:end="1871:43"><name pos:start="1871:25" pos:end="1871:39">gen_movl_T0_reg</name><argument_list pos:start="1871:40" pos:end="1871:43">(<argument pos:start="1871:41" pos:end="1871:42"><expr pos:start="1871:41" pos:end="1871:42"><name pos:start="1871:41" pos:end="1871:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1873:25" pos:end="1873:30">break;</break>

                    <case pos:start="1875:21" pos:end="1875:30">case <expr pos:start="1875:26" pos:end="1875:29"><literal type="number" pos:start="1875:26" pos:end="1875:29">0x21</literal></expr>:</case> <comment type="block" pos:start="1875:32" pos:end="1875:43">/* tsubcc */</comment>

                        <expr_stmt pos:start="1877:25" pos:end="1877:47"><expr pos:start="1877:25" pos:end="1877:46"><call pos:start="1877:25" pos:end="1877:46"><name pos:start="1877:25" pos:end="1877:44">gen_op_tsub_T1_T0_cc</name><argument_list pos:start="1877:45" pos:end="1877:46">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1879:25" pos:end="1879:44"><expr pos:start="1879:25" pos:end="1879:43"><call pos:start="1879:25" pos:end="1879:43"><name pos:start="1879:25" pos:end="1879:39">gen_movl_T0_reg</name><argument_list pos:start="1879:40" pos:end="1879:43">(<argument pos:start="1879:41" pos:end="1879:42"><expr pos:start="1879:41" pos:end="1879:42"><name pos:start="1879:41" pos:end="1879:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1881:25" pos:end="1881:30">break;</break>

                    <case pos:start="1883:21" pos:end="1883:30">case <expr pos:start="1883:26" pos:end="1883:29"><literal type="number" pos:start="1883:26" pos:end="1883:29">0x22</literal></expr>:</case> <comment type="block" pos:start="1883:32" pos:end="1883:45">/* taddcctv */</comment>

                        <expr_stmt pos:start="1885:25" pos:end="1885:39"><expr pos:start="1885:25" pos:end="1885:38"><call pos:start="1885:25" pos:end="1885:38"><name pos:start="1885:25" pos:end="1885:34">save_state</name><argument_list pos:start="1885:35" pos:end="1885:38">(<argument pos:start="1885:36" pos:end="1885:37"><expr pos:start="1885:36" pos:end="1885:37"><name pos:start="1885:36" pos:end="1885:37">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1887:25" pos:end="1887:49"><expr pos:start="1887:25" pos:end="1887:48"><call pos:start="1887:25" pos:end="1887:48"><name pos:start="1887:25" pos:end="1887:46">gen_op_tadd_T1_T0_ccTV</name><argument_list pos:start="1887:47" pos:end="1887:48">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1889:25" pos:end="1889:44"><expr pos:start="1889:25" pos:end="1889:43"><call pos:start="1889:25" pos:end="1889:43"><name pos:start="1889:25" pos:end="1889:39">gen_movl_T0_reg</name><argument_list pos:start="1889:40" pos:end="1889:43">(<argument pos:start="1889:41" pos:end="1889:42"><expr pos:start="1889:41" pos:end="1889:42"><name pos:start="1889:41" pos:end="1889:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1891:25" pos:end="1891:30">break;</break>

                    <case pos:start="1893:21" pos:end="1893:30">case <expr pos:start="1893:26" pos:end="1893:29"><literal type="number" pos:start="1893:26" pos:end="1893:29">0x23</literal></expr>:</case> <comment type="block" pos:start="1893:32" pos:end="1893:45">/* tsubcctv */</comment>

                        <expr_stmt pos:start="1895:25" pos:end="1895:39"><expr pos:start="1895:25" pos:end="1895:38"><call pos:start="1895:25" pos:end="1895:38"><name pos:start="1895:25" pos:end="1895:34">save_state</name><argument_list pos:start="1895:35" pos:end="1895:38">(<argument pos:start="1895:36" pos:end="1895:37"><expr pos:start="1895:36" pos:end="1895:37"><name pos:start="1895:36" pos:end="1895:37">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1897:25" pos:end="1897:49"><expr pos:start="1897:25" pos:end="1897:48"><call pos:start="1897:25" pos:end="1897:48"><name pos:start="1897:25" pos:end="1897:46">gen_op_tsub_T1_T0_ccTV</name><argument_list pos:start="1897:47" pos:end="1897:48">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1899:25" pos:end="1899:44"><expr pos:start="1899:25" pos:end="1899:43"><call pos:start="1899:25" pos:end="1899:43"><name pos:start="1899:25" pos:end="1899:39">gen_movl_T0_reg</name><argument_list pos:start="1899:40" pos:end="1899:43">(<argument pos:start="1899:41" pos:end="1899:42"><expr pos:start="1899:41" pos:end="1899:42"><name pos:start="1899:41" pos:end="1899:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1901:25" pos:end="1901:30">break;</break>

                    <case pos:start="1903:21" pos:end="1903:30">case <expr pos:start="1903:26" pos:end="1903:29"><literal type="number" pos:start="1903:26" pos:end="1903:29">0x24</literal></expr>:</case> <comment type="block" pos:start="1903:32" pos:end="1903:43">/* mulscc */</comment>

                        <expr_stmt pos:start="1905:25" pos:end="1905:46"><expr pos:start="1905:25" pos:end="1905:45"><call pos:start="1905:25" pos:end="1905:45"><name pos:start="1905:25" pos:end="1905:43">gen_op_mulscc_T1_T0</name><argument_list pos:start="1905:44" pos:end="1905:45">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1907:25" pos:end="1907:44"><expr pos:start="1907:25" pos:end="1907:43"><call pos:start="1907:25" pos:end="1907:43"><name pos:start="1907:25" pos:end="1907:39">gen_movl_T0_reg</name><argument_list pos:start="1907:40" pos:end="1907:43">(<argument pos:start="1907:41" pos:end="1907:42"><expr pos:start="1907:41" pos:end="1907:42"><name pos:start="1907:41" pos:end="1907:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1909:25" pos:end="1912:0">break;</break>

<cpp:ifndef pos:start="1911:1" pos:end="1911:22">#<cpp:directive pos:start="1911:2" pos:end="1911:7">ifndef</cpp:directive> <name pos:start="1911:9" pos:end="1911:22">TARGET_SPARC64</name></cpp:ifndef>

                    <case pos:start="1913:21" pos:end="1913:30">case <expr pos:start="1913:26" pos:end="1913:29"><literal type="number" pos:start="1913:26" pos:end="1913:29">0x25</literal></expr>:</case>  <comment type="block" pos:start="1913:33" pos:end="1913:41">/* sll */</comment>

                        <expr_stmt pos:start="1915:25" pos:end="1915:37"><expr pos:start="1915:25" pos:end="1915:36"><call pos:start="1915:25" pos:end="1915:36"><name pos:start="1915:25" pos:end="1915:34">gen_op_sll</name><argument_list pos:start="1915:35" pos:end="1915:36">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1917:25" pos:end="1917:44"><expr pos:start="1917:25" pos:end="1917:43"><call pos:start="1917:25" pos:end="1917:43"><name pos:start="1917:25" pos:end="1917:39">gen_movl_T0_reg</name><argument_list pos:start="1917:40" pos:end="1917:43">(<argument pos:start="1917:41" pos:end="1917:42"><expr pos:start="1917:41" pos:end="1917:42"><name pos:start="1917:41" pos:end="1917:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1919:25" pos:end="1919:30">break;</break>

                    <case pos:start="1921:21" pos:end="1921:30">case <expr pos:start="1921:26" pos:end="1921:29"><literal type="number" pos:start="1921:26" pos:end="1921:29">0x26</literal></expr>:</case>  <comment type="block" pos:start="1921:33" pos:end="1921:41">/* srl */</comment>

                        <expr_stmt pos:start="1923:25" pos:end="1923:37"><expr pos:start="1923:25" pos:end="1923:36"><call pos:start="1923:25" pos:end="1923:36"><name pos:start="1923:25" pos:end="1923:34">gen_op_srl</name><argument_list pos:start="1923:35" pos:end="1923:36">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1925:25" pos:end="1925:44"><expr pos:start="1925:25" pos:end="1925:43"><call pos:start="1925:25" pos:end="1925:43"><name pos:start="1925:25" pos:end="1925:39">gen_movl_T0_reg</name><argument_list pos:start="1925:40" pos:end="1925:43">(<argument pos:start="1925:41" pos:end="1925:42"><expr pos:start="1925:41" pos:end="1925:42"><name pos:start="1925:41" pos:end="1925:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1927:25" pos:end="1927:30">break;</break>

                    <case pos:start="1929:21" pos:end="1929:30">case <expr pos:start="1929:26" pos:end="1929:29"><literal type="number" pos:start="1929:26" pos:end="1929:29">0x27</literal></expr>:</case>  <comment type="block" pos:start="1929:33" pos:end="1929:41">/* sra */</comment>

                        <expr_stmt pos:start="1931:25" pos:end="1931:37"><expr pos:start="1931:25" pos:end="1931:36"><call pos:start="1931:25" pos:end="1931:36"><name pos:start="1931:25" pos:end="1931:34">gen_op_sra</name><argument_list pos:start="1931:35" pos:end="1931:36">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1933:25" pos:end="1933:44"><expr pos:start="1933:25" pos:end="1933:43"><call pos:start="1933:25" pos:end="1933:43"><name pos:start="1933:25" pos:end="1933:39">gen_movl_T0_reg</name><argument_list pos:start="1933:40" pos:end="1933:43">(<argument pos:start="1933:41" pos:end="1933:42"><expr pos:start="1933:41" pos:end="1933:42"><name pos:start="1933:41" pos:end="1933:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1935:25" pos:end="1938:0">break;</break>

<cpp:endif pos:start="1937:1" pos:end="1937:6">#<cpp:directive pos:start="1937:2" pos:end="1937:6">endif</cpp:directive></cpp:endif>

                    <case pos:start="1939:21" pos:end="1939:30">case <expr pos:start="1939:26" pos:end="1939:29"><literal type="number" pos:start="1939:26" pos:end="1939:29">0x30</literal></expr>:</case>

                        <block pos:start="1941:25" pos:end="2107:25">{<block_content pos:start="1943:29" pos:end="2105:29">

                            <switch pos:start="1943:29" pos:end="2105:29">switch<condition pos:start="1943:35" pos:end="1943:38">(<expr pos:start="1943:36" pos:end="1943:37"><name pos:start="1943:36" pos:end="1943:37">rd</name></expr>)</condition> <block pos:start="1943:40" pos:end="2105:29">{<block_content pos:start="1945:29" pos:end="2103:50">

                            <case pos:start="1945:29" pos:end="1945:35">case <expr pos:start="1945:34" pos:end="1945:34"><literal type="number" pos:start="1945:34" pos:end="1945:34">0</literal></expr>:</case> <comment type="block" pos:start="1945:37" pos:end="1945:45">/* wry */</comment>

                                <expr_stmt pos:start="1947:33" pos:end="1947:51"><expr pos:start="1947:33" pos:end="1947:50"><call pos:start="1947:33" pos:end="1947:50"><name pos:start="1947:33" pos:end="1947:48">gen_op_xor_T1_T0</name><argument_list pos:start="1947:49" pos:end="1947:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="1949:33" pos:end="1949:80"><expr pos:start="1949:33" pos:end="1949:79"><call pos:start="1949:33" pos:end="1949:79"><name pos:start="1949:33" pos:end="1949:51">gen_op_movtl_env_T0</name><argument_list pos:start="1949:52" pos:end="1949:79">(<argument pos:start="1949:53" pos:end="1949:78"><expr pos:start="1949:53" pos:end="1949:78"><call pos:start="1949:53" pos:end="1949:78"><name pos:start="1949:53" pos:end="1949:60">offsetof</name><argument_list pos:start="1949:61" pos:end="1949:78">(<argument pos:start="1949:62" pos:end="1949:74"><expr pos:start="1949:62" pos:end="1949:74"><name pos:start="1949:62" pos:end="1949:74">CPUSPARCState</name></expr></argument>, <argument pos:start="1949:77" pos:end="1949:77"><expr pos:start="1949:77" pos:end="1949:77"><name pos:start="1949:77" pos:end="1949:77">y</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1951:33" pos:end="1954:0">break;</break>

<cpp:ifndef pos:start="1953:1" pos:end="1953:22">#<cpp:directive pos:start="1953:2" pos:end="1953:7">ifndef</cpp:directive> <name pos:start="1953:9" pos:end="1953:22">TARGET_SPARC64</name></cpp:ifndef>

                            <case pos:start="1955:29" pos:end="1955:47">case <expr pos:start="1955:34" pos:end="1955:46"><literal type="number" pos:start="1955:34" pos:end="1955:37">0x01</literal> <operator pos:start="1955:39" pos:end="1955:41">...</operator> <literal type="number" pos:start="1955:43" pos:end="1955:46">0x0f</literal></expr>:</case> <comment type="block" pos:start="1955:49" pos:end="1961:56">/* undefined in the

                                                   SPARCv8 manual, nop

                                                   on the microSPARC

                                                   II */</comment>

                            <case pos:start="1963:29" pos:end="1963:47">case <expr pos:start="1963:34" pos:end="1963:46"><literal type="number" pos:start="1963:34" pos:end="1963:37">0x10</literal> <operator pos:start="1963:39" pos:end="1963:41">...</operator> <literal type="number" pos:start="1963:43" pos:end="1963:46">0x1f</literal></expr>:</case> <comment type="block" pos:start="1963:49" pos:end="1969:67">/* implementation-dependent

                                                   in the SPARCv8

                                                   manual, nop on the

                                                   microSPARC II */</comment>

                                <break pos:start="1971:33" pos:end="1974:0">break;</break>

<cpp:else pos:start="1973:1" pos:end="1973:5">#<cpp:directive pos:start="1973:2" pos:end="1973:5">else</cpp:directive></cpp:else>

                            <case pos:start="1975:29" pos:end="1975:37">case <expr pos:start="1975:34" pos:end="1975:36"><literal type="number" pos:start="1975:34" pos:end="1975:36">0x2</literal></expr>:</case> <comment type="block" pos:start="1975:39" pos:end="1975:52">/* V9 wrccr */</comment>

                                <expr_stmt pos:start="1977:33" pos:end="1977:51"><expr pos:start="1977:33" pos:end="1977:50"><call pos:start="1977:33" pos:end="1977:50"><name pos:start="1977:33" pos:end="1977:48">gen_op_xor_T1_T0</name><argument_list pos:start="1977:49" pos:end="1977:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="1979:33" pos:end="1979:47"><expr pos:start="1979:33" pos:end="1979:46"><call pos:start="1979:33" pos:end="1979:46"><name pos:start="1979:33" pos:end="1979:44">gen_op_wrccr</name><argument_list pos:start="1979:45" pos:end="1979:46">()</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1981:33" pos:end="1981:38">break;</break>

                            <case pos:start="1983:29" pos:end="1983:37">case <expr pos:start="1983:34" pos:end="1983:36"><literal type="number" pos:start="1983:34" pos:end="1983:36">0x3</literal></expr>:</case> <comment type="block" pos:start="1983:39" pos:end="1983:52">/* V9 wrasi */</comment>

                                <expr_stmt pos:start="1985:33" pos:end="1985:51"><expr pos:start="1985:33" pos:end="1985:50"><call pos:start="1985:33" pos:end="1985:50"><name pos:start="1985:33" pos:end="1985:48">gen_op_xor_T1_T0</name><argument_list pos:start="1985:49" pos:end="1985:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="1987:33" pos:end="1987:81"><expr pos:start="1987:33" pos:end="1987:80"><call pos:start="1987:33" pos:end="1987:80"><name pos:start="1987:33" pos:end="1987:50">gen_op_movl_env_T0</name><argument_list pos:start="1987:51" pos:end="1987:80">(<argument pos:start="1987:52" pos:end="1987:79"><expr pos:start="1987:52" pos:end="1987:79"><call pos:start="1987:52" pos:end="1987:79"><name pos:start="1987:52" pos:end="1987:59">offsetof</name><argument_list pos:start="1987:60" pos:end="1987:79">(<argument pos:start="1987:61" pos:end="1987:73"><expr pos:start="1987:61" pos:end="1987:73"><name pos:start="1987:61" pos:end="1987:73">CPUSPARCState</name></expr></argument>, <argument pos:start="1987:76" pos:end="1987:78"><expr pos:start="1987:76" pos:end="1987:78"><name pos:start="1987:76" pos:end="1987:78">asi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1989:33" pos:end="1989:38">break;</break>

                            <case pos:start="1991:29" pos:end="1991:37">case <expr pos:start="1991:34" pos:end="1991:36"><literal type="number" pos:start="1991:34" pos:end="1991:36">0x6</literal></expr>:</case> <comment type="block" pos:start="1991:39" pos:end="1991:53">/* V9 wrfprs */</comment>

                                <expr_stmt pos:start="1993:33" pos:end="1993:51"><expr pos:start="1993:33" pos:end="1993:50"><call pos:start="1993:33" pos:end="1993:50"><name pos:start="1993:33" pos:end="1993:48">gen_op_xor_T1_T0</name><argument_list pos:start="1993:49" pos:end="1993:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="1995:33" pos:end="1995:82"><expr pos:start="1995:33" pos:end="1995:81"><call pos:start="1995:33" pos:end="1995:81"><name pos:start="1995:33" pos:end="1995:50">gen_op_movl_env_T0</name><argument_list pos:start="1995:51" pos:end="1995:81">(<argument pos:start="1995:52" pos:end="1995:80"><expr pos:start="1995:52" pos:end="1995:80"><call pos:start="1995:52" pos:end="1995:80"><name pos:start="1995:52" pos:end="1995:59">offsetof</name><argument_list pos:start="1995:60" pos:end="1995:80">(<argument pos:start="1995:61" pos:end="1995:73"><expr pos:start="1995:61" pos:end="1995:73"><name pos:start="1995:61" pos:end="1995:73">CPUSPARCState</name></expr></argument>, <argument pos:start="1995:76" pos:end="1995:79"><expr pos:start="1995:76" pos:end="1995:79"><name pos:start="1995:76" pos:end="1995:79">fprs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="1997:33" pos:end="1997:47"><expr pos:start="1997:33" pos:end="1997:46"><call pos:start="1997:33" pos:end="1997:46"><name pos:start="1997:33" pos:end="1997:42">save_state</name><argument_list pos:start="1997:43" pos:end="1997:46">(<argument pos:start="1997:44" pos:end="1997:45"><expr pos:start="1997:44" pos:end="1997:45"><name pos:start="1997:44" pos:end="1997:45">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="1999:33" pos:end="1999:51"><expr pos:start="1999:33" pos:end="1999:50"><call pos:start="1999:33" pos:end="1999:50"><name pos:start="1999:33" pos:end="1999:48">gen_op_next_insn</name><argument_list pos:start="1999:49" pos:end="1999:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2001:33" pos:end="2001:51"><expr pos:start="2001:33" pos:end="2001:50"><call pos:start="2001:33" pos:end="2001:50"><name pos:start="2001:33" pos:end="2001:48">gen_op_movl_T0_0</name><argument_list pos:start="2001:49" pos:end="2001:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2003:33" pos:end="2003:49"><expr pos:start="2003:33" pos:end="2003:48"><call pos:start="2003:33" pos:end="2003:48"><name pos:start="2003:33" pos:end="2003:46">gen_op_exit_tb</name><argument_list pos:start="2003:47" pos:end="2003:48">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2005:33" pos:end="2005:46"><expr pos:start="2005:33" pos:end="2005:45"><name pos:start="2005:33" pos:end="2005:41"><name pos:start="2005:33" pos:end="2005:34">dc</name><operator pos:start="2005:35" pos:end="2005:36">-&gt;</operator><name pos:start="2005:37" pos:end="2005:41">is_br</name></name> <operator pos:start="2005:43" pos:end="2005:43">=</operator> <literal type="number" pos:start="2005:45" pos:end="2005:45">1</literal></expr>;</expr_stmt>

                                <break pos:start="2007:33" pos:end="2007:38">break;</break>

                            <case pos:start="2009:29" pos:end="2012:0">case <expr pos:start="2009:34" pos:end="2009:36"><literal type="number" pos:start="2009:34" pos:end="2009:36">0xf</literal></expr>:</case> <comment type="block" pos:start="2009:39" pos:end="2009:63">/* V9 sir, nop if user */</comment>

<cpp:if pos:start="2011:1" pos:end="2011:30">#<cpp:directive pos:start="2011:2" pos:end="2011:3">if</cpp:directive> <expr pos:start="2011:5" pos:end="2011:30"><operator pos:start="2011:5" pos:end="2011:5">!</operator><call pos:start="2011:6" pos:end="2011:30"><name pos:start="2011:6" pos:end="2011:12">defined</name><argument_list pos:start="2011:13" pos:end="2011:30">(<argument pos:start="2011:14" pos:end="2011:29"><expr pos:start="2011:14" pos:end="2011:29"><name pos:start="2011:14" pos:end="2011:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

                                <if_stmt pos:start="2013:33" pos:end="2018:0"><if pos:start="2013:33" pos:end="2018:0">if <condition pos:start="2013:36" pos:end="2013:51">(<expr pos:start="2013:37" pos:end="2013:50"><call pos:start="2013:37" pos:end="2013:50"><name pos:start="2013:37" pos:end="2013:46">supervisor</name><argument_list pos:start="2013:47" pos:end="2013:50">(<argument pos:start="2013:48" pos:end="2013:49"><expr pos:start="2013:48" pos:end="2013:49"><name pos:start="2013:48" pos:end="2013:49">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2015:37" pos:end="2018:0"><block_content pos:start="2015:37" pos:end="2018:0">

                                    <expr_stmt pos:start="2015:37" pos:end="2018:0"><expr pos:start="2015:37" pos:end="2015:48"><call pos:start="2015:37" pos:end="2015:48"><name pos:start="2015:37" pos:end="2015:46">gen_op_sir</name><argument_list pos:start="2015:47" pos:end="2015:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="2017:1" pos:end="2017:6">#<cpp:directive pos:start="2017:2" pos:end="2017:6">endif</cpp:directive></cpp:endif>

                                <break pos:start="2019:33" pos:end="2019:38">break;</break>

                            <case pos:start="2021:29" pos:end="2021:38">case <expr pos:start="2021:34" pos:end="2021:37"><literal type="number" pos:start="2021:34" pos:end="2021:37">0x13</literal></expr>:</case> <comment type="block" pos:start="2021:40" pos:end="2021:60">/* Graphics Status */</comment>

                                <if_stmt pos:start="2023:33" pos:end="2025:50"><if pos:start="2023:33" pos:end="2025:50">if <condition pos:start="2023:36" pos:end="2023:57">(<expr pos:start="2023:37" pos:end="2023:56"><call pos:start="2023:37" pos:end="2023:56"><name pos:start="2023:37" pos:end="2023:52">gen_trap_ifnofpu</name><argument_list pos:start="2023:53" pos:end="2023:56">(<argument pos:start="2023:54" pos:end="2023:55"><expr pos:start="2023:54" pos:end="2023:55"><name pos:start="2023:54" pos:end="2023:55">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2025:37" pos:end="2025:50"><block_content pos:start="2025:37" pos:end="2025:50">

                                    <goto pos:start="2025:37" pos:end="2025:50">goto <name pos:start="2025:42" pos:end="2025:49">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

                                <expr_stmt pos:start="2027:33" pos:end="2027:51"><expr pos:start="2027:33" pos:end="2027:50"><call pos:start="2027:33" pos:end="2027:50"><name pos:start="2027:33" pos:end="2027:48">gen_op_xor_T1_T0</name><argument_list pos:start="2027:49" pos:end="2027:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2029:33" pos:end="2029:82"><expr pos:start="2029:33" pos:end="2029:81"><call pos:start="2029:33" pos:end="2029:81"><name pos:start="2029:33" pos:end="2029:51">gen_op_movtl_env_T0</name><argument_list pos:start="2029:52" pos:end="2029:81">(<argument pos:start="2029:53" pos:end="2029:80"><expr pos:start="2029:53" pos:end="2029:80"><call pos:start="2029:53" pos:end="2029:80"><name pos:start="2029:53" pos:end="2029:60">offsetof</name><argument_list pos:start="2029:61" pos:end="2029:80">(<argument pos:start="2029:62" pos:end="2029:74"><expr pos:start="2029:62" pos:end="2029:74"><name pos:start="2029:62" pos:end="2029:74">CPUSPARCState</name></expr></argument>, <argument pos:start="2029:77" pos:end="2029:79"><expr pos:start="2029:77" pos:end="2029:79"><name pos:start="2029:77" pos:end="2029:79">gsr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2031:33" pos:end="2031:38">break;</break>

                            <case pos:start="2033:29" pos:end="2036:0">case <expr pos:start="2033:34" pos:end="2033:37"><literal type="number" pos:start="2033:34" pos:end="2033:37">0x17</literal></expr>:</case> <comment type="block" pos:start="2033:40" pos:end="2033:57">/* Tick compare */</comment>

<cpp:if pos:start="2035:1" pos:end="2035:30">#<cpp:directive pos:start="2035:2" pos:end="2035:3">if</cpp:directive> <expr pos:start="2035:5" pos:end="2035:30"><operator pos:start="2035:5" pos:end="2035:5">!</operator><call pos:start="2035:6" pos:end="2035:30"><name pos:start="2035:6" pos:end="2035:12">defined</name><argument_list pos:start="2035:13" pos:end="2035:30">(<argument pos:start="2035:14" pos:end="2035:29"><expr pos:start="2035:14" pos:end="2035:29"><name pos:start="2035:14" pos:end="2035:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

                                <if_stmt pos:start="2037:33" pos:end="2042:0"><if pos:start="2037:33" pos:end="2042:0">if <condition pos:start="2037:36" pos:end="2037:52">(<expr pos:start="2037:37" pos:end="2037:51"><operator pos:start="2037:37" pos:end="2037:37">!</operator><call pos:start="2037:38" pos:end="2037:51"><name pos:start="2037:38" pos:end="2037:47">supervisor</name><argument_list pos:start="2037:48" pos:end="2037:51">(<argument pos:start="2037:49" pos:end="2037:50"><expr pos:start="2037:49" pos:end="2037:50"><name pos:start="2037:49" pos:end="2037:50">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2039:37" pos:end="2042:0"><block_content pos:start="2039:37" pos:end="2042:0">

                                    <goto pos:start="2039:37" pos:end="2042:0">goto <name pos:start="2039:42" pos:end="2039:53">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:endif pos:start="2041:1" pos:end="2041:6">#<cpp:directive pos:start="2041:2" pos:end="2041:6">endif</cpp:directive></cpp:endif>

                                <expr_stmt pos:start="2043:33" pos:end="2043:51"><expr pos:start="2043:33" pos:end="2043:50"><call pos:start="2043:33" pos:end="2043:50"><name pos:start="2043:33" pos:end="2043:48">gen_op_xor_T1_T0</name><argument_list pos:start="2043:49" pos:end="2043:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2045:33" pos:end="2045:88"><expr pos:start="2045:33" pos:end="2045:87"><call pos:start="2045:33" pos:end="2045:87"><name pos:start="2045:33" pos:end="2045:51">gen_op_movtl_env_T0</name><argument_list pos:start="2045:52" pos:end="2045:87">(<argument pos:start="2045:53" pos:end="2045:86"><expr pos:start="2045:53" pos:end="2045:86"><call pos:start="2045:53" pos:end="2045:86"><name pos:start="2045:53" pos:end="2045:60">offsetof</name><argument_list pos:start="2045:61" pos:end="2045:86">(<argument pos:start="2045:62" pos:end="2045:74"><expr pos:start="2045:62" pos:end="2045:74"><name pos:start="2045:62" pos:end="2045:74">CPUSPARCState</name></expr></argument>, <argument pos:start="2045:77" pos:end="2045:85"><expr pos:start="2045:77" pos:end="2045:85"><name pos:start="2045:77" pos:end="2045:85">tick_cmpr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2047:33" pos:end="2047:53"><expr pos:start="2047:33" pos:end="2047:52"><call pos:start="2047:33" pos:end="2047:52"><name pos:start="2047:33" pos:end="2047:50">gen_op_wrtick_cmpr</name><argument_list pos:start="2047:51" pos:end="2047:52">()</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2049:33" pos:end="2049:38">break;</break>

                            <case pos:start="2051:29" pos:end="2054:0">case <expr pos:start="2051:34" pos:end="2051:37"><literal type="number" pos:start="2051:34" pos:end="2051:37">0x18</literal></expr>:</case> <comment type="block" pos:start="2051:40" pos:end="2051:56">/* System tick */</comment>

<cpp:if pos:start="2053:1" pos:end="2053:30">#<cpp:directive pos:start="2053:2" pos:end="2053:3">if</cpp:directive> <expr pos:start="2053:5" pos:end="2053:30"><operator pos:start="2053:5" pos:end="2053:5">!</operator><call pos:start="2053:6" pos:end="2053:30"><name pos:start="2053:6" pos:end="2053:12">defined</name><argument_list pos:start="2053:13" pos:end="2053:30">(<argument pos:start="2053:14" pos:end="2053:29"><expr pos:start="2053:14" pos:end="2053:29"><name pos:start="2053:14" pos:end="2053:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

                                <if_stmt pos:start="2055:33" pos:end="2060:0"><if pos:start="2055:33" pos:end="2060:0">if <condition pos:start="2055:36" pos:end="2055:52">(<expr pos:start="2055:37" pos:end="2055:51"><operator pos:start="2055:37" pos:end="2055:37">!</operator><call pos:start="2055:38" pos:end="2055:51"><name pos:start="2055:38" pos:end="2055:47">supervisor</name><argument_list pos:start="2055:48" pos:end="2055:51">(<argument pos:start="2055:49" pos:end="2055:50"><expr pos:start="2055:49" pos:end="2055:50"><name pos:start="2055:49" pos:end="2055:50">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2057:37" pos:end="2060:0"><block_content pos:start="2057:37" pos:end="2060:0">

                                    <goto pos:start="2057:37" pos:end="2060:0">goto <name pos:start="2057:42" pos:end="2057:53">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:endif pos:start="2059:1" pos:end="2059:6">#<cpp:directive pos:start="2059:2" pos:end="2059:6">endif</cpp:directive></cpp:endif>

                                <expr_stmt pos:start="2061:33" pos:end="2061:51"><expr pos:start="2061:33" pos:end="2061:50"><call pos:start="2061:33" pos:end="2061:50"><name pos:start="2061:33" pos:end="2061:48">gen_op_xor_T1_T0</name><argument_list pos:start="2061:49" pos:end="2061:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2063:33" pos:end="2063:49"><expr pos:start="2063:33" pos:end="2063:48"><call pos:start="2063:33" pos:end="2063:48"><name pos:start="2063:33" pos:end="2063:46">gen_op_wrstick</name><argument_list pos:start="2063:47" pos:end="2063:48">()</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2065:33" pos:end="2065:38">break;</break>

                            <case pos:start="2067:29" pos:end="2070:0">case <expr pos:start="2067:34" pos:end="2067:37"><literal type="number" pos:start="2067:34" pos:end="2067:37">0x19</literal></expr>:</case> <comment type="block" pos:start="2067:40" pos:end="2067:64">/* System tick compare */</comment>

<cpp:if pos:start="2069:1" pos:end="2069:30">#<cpp:directive pos:start="2069:2" pos:end="2069:3">if</cpp:directive> <expr pos:start="2069:5" pos:end="2069:30"><operator pos:start="2069:5" pos:end="2069:5">!</operator><call pos:start="2069:6" pos:end="2069:30"><name pos:start="2069:6" pos:end="2069:12">defined</name><argument_list pos:start="2069:13" pos:end="2069:30">(<argument pos:start="2069:14" pos:end="2069:29"><expr pos:start="2069:14" pos:end="2069:29"><name pos:start="2069:14" pos:end="2069:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

                                <if_stmt pos:start="2071:33" pos:end="2076:0"><if pos:start="2071:33" pos:end="2076:0">if <condition pos:start="2071:36" pos:end="2071:52">(<expr pos:start="2071:37" pos:end="2071:51"><operator pos:start="2071:37" pos:end="2071:37">!</operator><call pos:start="2071:38" pos:end="2071:51"><name pos:start="2071:38" pos:end="2071:47">supervisor</name><argument_list pos:start="2071:48" pos:end="2071:51">(<argument pos:start="2071:49" pos:end="2071:50"><expr pos:start="2071:49" pos:end="2071:50"><name pos:start="2071:49" pos:end="2071:50">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2073:37" pos:end="2076:0"><block_content pos:start="2073:37" pos:end="2076:0">

                                    <goto pos:start="2073:37" pos:end="2076:0">goto <name pos:start="2073:42" pos:end="2073:53">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:endif pos:start="2075:1" pos:end="2075:6">#<cpp:directive pos:start="2075:2" pos:end="2075:6">endif</cpp:directive></cpp:endif>

                                <expr_stmt pos:start="2077:33" pos:end="2077:51"><expr pos:start="2077:33" pos:end="2077:50"><call pos:start="2077:33" pos:end="2077:50"><name pos:start="2077:33" pos:end="2077:48">gen_op_xor_T1_T0</name><argument_list pos:start="2077:49" pos:end="2077:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2079:33" pos:end="2079:89"><expr pos:start="2079:33" pos:end="2079:88"><call pos:start="2079:33" pos:end="2079:88"><name pos:start="2079:33" pos:end="2079:51">gen_op_movtl_env_T0</name><argument_list pos:start="2079:52" pos:end="2079:88">(<argument pos:start="2079:53" pos:end="2079:87"><expr pos:start="2079:53" pos:end="2079:87"><call pos:start="2079:53" pos:end="2079:87"><name pos:start="2079:53" pos:end="2079:60">offsetof</name><argument_list pos:start="2079:61" pos:end="2079:87">(<argument pos:start="2079:62" pos:end="2079:74"><expr pos:start="2079:62" pos:end="2079:74"><name pos:start="2079:62" pos:end="2079:74">CPUSPARCState</name></expr></argument>, <argument pos:start="2079:77" pos:end="2079:86"><expr pos:start="2079:77" pos:end="2079:86"><name pos:start="2079:77" pos:end="2079:86">stick_cmpr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2081:33" pos:end="2081:54"><expr pos:start="2081:33" pos:end="2081:53"><call pos:start="2081:33" pos:end="2081:53"><name pos:start="2081:33" pos:end="2081:51">gen_op_wrstick_cmpr</name><argument_list pos:start="2081:52" pos:end="2081:53">()</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2083:33" pos:end="2083:38">break;</break>



                            <case pos:start="2087:29" pos:end="2087:38">case <expr pos:start="2087:34" pos:end="2087:37"><literal type="number" pos:start="2087:34" pos:end="2087:37">0x10</literal></expr>:</case> <comment type="block" pos:start="2087:40" pos:end="2087:64">/* Performance Control */</comment>

                            <case pos:start="2089:29" pos:end="2089:38">case <expr pos:start="2089:34" pos:end="2089:37"><literal type="number" pos:start="2089:34" pos:end="2089:37">0x11</literal></expr>:</case> <comment type="block" pos:start="2089:40" pos:end="2089:80">/* Performance Instrumentation Counter */</comment>

                            <case pos:start="2091:29" pos:end="2091:38">case <expr pos:start="2091:34" pos:end="2091:37"><literal type="number" pos:start="2091:34" pos:end="2091:37">0x12</literal></expr>:</case> <comment type="block" pos:start="2091:40" pos:end="2091:61">/* Dispatch Control */</comment>

                            <case pos:start="2093:29" pos:end="2093:38">case <expr pos:start="2093:34" pos:end="2093:37"><literal type="number" pos:start="2093:34" pos:end="2093:37">0x14</literal></expr>:</case> <comment type="block" pos:start="2093:40" pos:end="2093:56">/* Softint set */</comment>

                            <case pos:start="2095:29" pos:end="2095:38">case <expr pos:start="2095:34" pos:end="2095:37"><literal type="number" pos:start="2095:34" pos:end="2095:37">0x15</literal></expr>:</case> <comment type="block" pos:start="2095:40" pos:end="2095:58">/* Softint clear */</comment>

                            <case pos:start="2097:29" pos:end="2100:0">case <expr pos:start="2097:34" pos:end="2097:37"><literal type="number" pos:start="2097:34" pos:end="2097:37">0x16</literal></expr>:</case> <comment type="block" pos:start="2097:40" pos:end="2097:58">/* Softint write */</comment>

<cpp:endif pos:start="2099:1" pos:end="2099:6">#<cpp:directive pos:start="2099:2" pos:end="2099:6">endif</cpp:directive></cpp:endif>

                            <default pos:start="2101:29" pos:end="2101:36">default:</default>

                                <goto pos:start="2103:33" pos:end="2103:50">goto <name pos:start="2103:38" pos:end="2103:49">illegal_insn</name>;</goto>

                            </block_content>}</block></switch>

                        </block_content>}</block>

                        <break pos:start="2109:25" pos:end="2112:0">break;</break>

<cpp:if pos:start="2111:1" pos:end="2111:30">#<cpp:directive pos:start="2111:2" pos:end="2111:3">if</cpp:directive> <expr pos:start="2111:5" pos:end="2111:30"><operator pos:start="2111:5" pos:end="2111:5">!</operator><call pos:start="2111:6" pos:end="2111:30"><name pos:start="2111:6" pos:end="2111:12">defined</name><argument_list pos:start="2111:13" pos:end="2111:30">(<argument pos:start="2111:14" pos:end="2111:29"><expr pos:start="2111:14" pos:end="2111:29"><name pos:start="2111:14" pos:end="2111:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

                    <case pos:start="2113:21" pos:end="2113:30">case <expr pos:start="2113:26" pos:end="2113:29"><literal type="number" pos:start="2113:26" pos:end="2113:29">0x31</literal></expr>:</case> <comment type="block" pos:start="2113:32" pos:end="2113:62">/* wrpsr, V9 saved, restored */</comment>

                        <block pos:start="2115:25" pos:end="2171:25">{<block_content pos:start="2117:29" pos:end="2170:0">

                            <if_stmt pos:start="2117:29" pos:end="2122:0"><if pos:start="2117:29" pos:end="2122:0">if <condition pos:start="2117:32" pos:end="2117:48">(<expr pos:start="2117:33" pos:end="2117:47"><operator pos:start="2117:33" pos:end="2117:33">!</operator><call pos:start="2117:34" pos:end="2117:47"><name pos:start="2117:34" pos:end="2117:43">supervisor</name><argument_list pos:start="2117:44" pos:end="2117:47">(<argument pos:start="2117:45" pos:end="2117:46"><expr pos:start="2117:45" pos:end="2117:46"><name pos:start="2117:45" pos:end="2117:46">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2119:33" pos:end="2122:0"><block_content pos:start="2119:33" pos:end="2122:0">

                                <goto pos:start="2119:33" pos:end="2122:0">goto <name pos:start="2119:38" pos:end="2119:46">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="2121:1" pos:end="2121:21">#<cpp:directive pos:start="2121:2" pos:end="2121:6">ifdef</cpp:directive> <name pos:start="2121:8" pos:end="2121:21">TARGET_SPARC64</name></cpp:ifdef>

                            <switch pos:start="2123:29" pos:end="2154:0">switch <condition pos:start="2123:36" pos:end="2123:39">(<expr pos:start="2123:37" pos:end="2123:38"><name pos:start="2123:37" pos:end="2123:38">rd</name></expr>)</condition> <block pos:start="2123:41" pos:end="2154:0">{<block_content pos:start="2125:29" pos:end="2149:50">

                            <case pos:start="2125:29" pos:end="2125:35">case <expr pos:start="2125:34" pos:end="2125:34"><literal type="number" pos:start="2125:34" pos:end="2125:34">0</literal></expr>:</case>

                                <expr_stmt pos:start="2127:33" pos:end="2127:47"><expr pos:start="2127:33" pos:end="2127:46"><call pos:start="2127:33" pos:end="2127:46"><name pos:start="2127:33" pos:end="2127:44">gen_op_saved</name><argument_list pos:start="2127:45" pos:end="2127:46">()</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2129:33" pos:end="2129:38">break;</break>

                            <case pos:start="2131:29" pos:end="2131:35">case <expr pos:start="2131:34" pos:end="2131:34"><literal type="number" pos:start="2131:34" pos:end="2131:34">1</literal></expr>:</case>

                                <expr_stmt pos:start="2133:33" pos:end="2133:50"><expr pos:start="2133:33" pos:end="2133:49"><call pos:start="2133:33" pos:end="2133:49"><name pos:start="2133:33" pos:end="2133:47">gen_op_restored</name><argument_list pos:start="2133:48" pos:end="2133:49">()</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2135:33" pos:end="2135:38">break;</break>

                            <case pos:start="2137:29" pos:end="2137:35">case <expr pos:start="2137:34" pos:end="2137:34"><literal type="number" pos:start="2137:34" pos:end="2137:34">2</literal></expr>:</case> <comment type="block" pos:start="2137:37" pos:end="2137:57">/* UA2005 allclean */</comment>

                            <case pos:start="2139:29" pos:end="2139:35">case <expr pos:start="2139:34" pos:end="2139:34"><literal type="number" pos:start="2139:34" pos:end="2139:34">3</literal></expr>:</case> <comment type="block" pos:start="2139:37" pos:end="2139:55">/* UA2005 otherw */</comment>

                            <case pos:start="2141:29" pos:end="2141:35">case <expr pos:start="2141:34" pos:end="2141:34"><literal type="number" pos:start="2141:34" pos:end="2141:34">4</literal></expr>:</case> <comment type="block" pos:start="2141:37" pos:end="2141:56">/* UA2005 normalw */</comment>

                            <case pos:start="2143:29" pos:end="2143:35">case <expr pos:start="2143:34" pos:end="2143:34"><literal type="number" pos:start="2143:34" pos:end="2143:34">5</literal></expr>:</case> <comment type="block" pos:start="2143:37" pos:end="2143:55">/* UA2005 invalw */</comment>

                                <comment type="line" pos:start="2145:33" pos:end="2145:38">// XXX</comment>

                            <default pos:start="2147:29" pos:end="2147:36">default:</default>

                                <goto pos:start="2149:33" pos:end="2149:50">goto <name pos:start="2149:38" pos:end="2149:49">illegal_insn</name>;</goto>

                            </block_content>}</block></switch>

<cpp:else pos:start="2153:1" pos:end="2153:5">#<cpp:directive pos:start="2153:2" pos:end="2153:5">else</cpp:directive></cpp:else>

                            <expr_stmt pos:start="2155:29" pos:end="2155:47"><expr pos:start="2155:29" pos:end="2155:46"><call pos:start="2155:29" pos:end="2155:46"><name pos:start="2155:29" pos:end="2155:44">gen_op_xor_T1_T0</name><argument_list pos:start="2155:45" pos:end="2155:46">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2157:29" pos:end="2157:43"><expr pos:start="2157:29" pos:end="2157:42"><call pos:start="2157:29" pos:end="2157:42"><name pos:start="2157:29" pos:end="2157:40">gen_op_wrpsr</name><argument_list pos:start="2157:41" pos:end="2157:42">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2159:29" pos:end="2159:43"><expr pos:start="2159:29" pos:end="2159:42"><call pos:start="2159:29" pos:end="2159:42"><name pos:start="2159:29" pos:end="2159:38">save_state</name><argument_list pos:start="2159:39" pos:end="2159:42">(<argument pos:start="2159:40" pos:end="2159:41"><expr pos:start="2159:40" pos:end="2159:41"><name pos:start="2159:40" pos:end="2159:41">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2161:29" pos:end="2161:47"><expr pos:start="2161:29" pos:end="2161:46"><call pos:start="2161:29" pos:end="2161:46"><name pos:start="2161:29" pos:end="2161:44">gen_op_next_insn</name><argument_list pos:start="2161:45" pos:end="2161:46">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2163:29" pos:end="2163:47"><expr pos:start="2163:29" pos:end="2163:46"><call pos:start="2163:29" pos:end="2163:46"><name pos:start="2163:29" pos:end="2163:44">gen_op_movl_T0_0</name><argument_list pos:start="2163:45" pos:end="2163:46">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2165:29" pos:end="2165:45"><expr pos:start="2165:29" pos:end="2165:44"><call pos:start="2165:29" pos:end="2165:44"><name pos:start="2165:29" pos:end="2165:42">gen_op_exit_tb</name><argument_list pos:start="2165:43" pos:end="2165:44">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2167:29" pos:end="2170:0"><expr pos:start="2167:29" pos:end="2167:41"><name pos:start="2167:29" pos:end="2167:37"><name pos:start="2167:29" pos:end="2167:30">dc</name><operator pos:start="2167:31" pos:end="2167:32">-&gt;</operator><name pos:start="2167:33" pos:end="2167:37">is_br</name></name> <operator pos:start="2167:39" pos:end="2167:39">=</operator> <literal type="number" pos:start="2167:41" pos:end="2167:41">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="2169:1" pos:end="2169:6">#<cpp:directive pos:start="2169:2" pos:end="2169:6">endif</cpp:directive></cpp:endif>

                        </block_content>}</block>

                        <break pos:start="2173:25" pos:end="2173:30">break;</break>

                    <case pos:start="2175:21" pos:end="2175:30">case <expr pos:start="2175:26" pos:end="2175:29"><literal type="number" pos:start="2175:26" pos:end="2175:29">0x32</literal></expr>:</case> <comment type="block" pos:start="2175:32" pos:end="2175:51">/* wrwim, V9 wrpr */</comment>

                        <block pos:start="2177:25" pos:end="2317:25">{<block_content pos:start="2179:29" pos:end="2316:0">

                            <if_stmt pos:start="2179:29" pos:end="2181:47"><if pos:start="2179:29" pos:end="2181:47">if <condition pos:start="2179:32" pos:end="2179:48">(<expr pos:start="2179:33" pos:end="2179:47"><operator pos:start="2179:33" pos:end="2179:33">!</operator><call pos:start="2179:34" pos:end="2179:47"><name pos:start="2179:34" pos:end="2179:43">supervisor</name><argument_list pos:start="2179:44" pos:end="2179:47">(<argument pos:start="2179:45" pos:end="2179:46"><expr pos:start="2179:45" pos:end="2179:46"><name pos:start="2179:45" pos:end="2179:46">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2181:33" pos:end="2181:47"><block_content pos:start="2181:33" pos:end="2181:47">

                                <goto pos:start="2181:33" pos:end="2181:47">goto <name pos:start="2181:38" pos:end="2181:46">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="2183:29" pos:end="2186:0"><expr pos:start="2183:29" pos:end="2183:46"><call pos:start="2183:29" pos:end="2183:46"><name pos:start="2183:29" pos:end="2183:44">gen_op_xor_T1_T0</name><argument_list pos:start="2183:45" pos:end="2183:46">()</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="2185:1" pos:end="2185:21">#<cpp:directive pos:start="2185:2" pos:end="2185:6">ifdef</cpp:directive> <name pos:start="2185:8" pos:end="2185:21">TARGET_SPARC64</name></cpp:ifdef>

                            <switch pos:start="2187:29" pos:end="2312:0">switch <condition pos:start="2187:36" pos:end="2187:39">(<expr pos:start="2187:37" pos:end="2187:38"><name pos:start="2187:37" pos:end="2187:38">rd</name></expr>)</condition> <block pos:start="2187:41" pos:end="2312:0">{<block_content pos:start="2189:29" pos:end="2307:50">

                            <case pos:start="2189:29" pos:end="2189:35">case <expr pos:start="2189:34" pos:end="2189:34"><literal type="number" pos:start="2189:34" pos:end="2189:34">0</literal></expr>:</case> <comment type="line" pos:start="2189:37" pos:end="2189:42">// tpc</comment>

                                <expr_stmt pos:start="2191:33" pos:end="2191:47"><expr pos:start="2191:33" pos:end="2191:46"><call pos:start="2191:33" pos:end="2191:46"><name pos:start="2191:33" pos:end="2191:44">gen_op_wrtpc</name><argument_list pos:start="2191:45" pos:end="2191:46">()</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2193:33" pos:end="2193:38">break;</break>

                            <case pos:start="2195:29" pos:end="2195:35">case <expr pos:start="2195:34" pos:end="2195:34"><literal type="number" pos:start="2195:34" pos:end="2195:34">1</literal></expr>:</case> <comment type="line" pos:start="2195:37" pos:end="2195:43">// tnpc</comment>

                                <expr_stmt pos:start="2197:33" pos:end="2197:48"><expr pos:start="2197:33" pos:end="2197:47"><call pos:start="2197:33" pos:end="2197:47"><name pos:start="2197:33" pos:end="2197:45">gen_op_wrtnpc</name><argument_list pos:start="2197:46" pos:end="2197:47">()</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2199:33" pos:end="2199:38">break;</break>

                            <case pos:start="2201:29" pos:end="2201:35">case <expr pos:start="2201:34" pos:end="2201:34"><literal type="number" pos:start="2201:34" pos:end="2201:34">2</literal></expr>:</case> <comment type="line" pos:start="2201:37" pos:end="2201:45">// tstate</comment>

                                <expr_stmt pos:start="2203:33" pos:end="2203:50"><expr pos:start="2203:33" pos:end="2203:49"><call pos:start="2203:33" pos:end="2203:49"><name pos:start="2203:33" pos:end="2203:47">gen_op_wrtstate</name><argument_list pos:start="2203:48" pos:end="2203:49">()</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2205:33" pos:end="2205:38">break;</break>

                            <case pos:start="2207:29" pos:end="2207:35">case <expr pos:start="2207:34" pos:end="2207:34"><literal type="number" pos:start="2207:34" pos:end="2207:34">3</literal></expr>:</case> <comment type="line" pos:start="2207:37" pos:end="2207:41">// tt</comment>

                                <expr_stmt pos:start="2209:33" pos:end="2209:46"><expr pos:start="2209:33" pos:end="2209:45"><call pos:start="2209:33" pos:end="2209:45"><name pos:start="2209:33" pos:end="2209:43">gen_op_wrtt</name><argument_list pos:start="2209:44" pos:end="2209:45">()</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2211:33" pos:end="2211:38">break;</break>

                            <case pos:start="2213:29" pos:end="2213:35">case <expr pos:start="2213:34" pos:end="2213:34"><literal type="number" pos:start="2213:34" pos:end="2213:34">4</literal></expr>:</case> <comment type="line" pos:start="2213:37" pos:end="2213:43">// tick</comment>

                                <expr_stmt pos:start="2215:33" pos:end="2215:48"><expr pos:start="2215:33" pos:end="2215:47"><call pos:start="2215:33" pos:end="2215:47"><name pos:start="2215:33" pos:end="2215:45">gen_op_wrtick</name><argument_list pos:start="2215:46" pos:end="2215:47">()</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2217:33" pos:end="2217:38">break;</break>

                            <case pos:start="2219:29" pos:end="2219:35">case <expr pos:start="2219:34" pos:end="2219:34"><literal type="number" pos:start="2219:34" pos:end="2219:34">5</literal></expr>:</case> <comment type="line" pos:start="2219:37" pos:end="2219:42">// tba</comment>

                                <expr_stmt pos:start="2221:33" pos:end="2221:82"><expr pos:start="2221:33" pos:end="2221:81"><call pos:start="2221:33" pos:end="2221:81"><name pos:start="2221:33" pos:end="2221:51">gen_op_movtl_env_T0</name><argument_list pos:start="2221:52" pos:end="2221:81">(<argument pos:start="2221:53" pos:end="2221:80"><expr pos:start="2221:53" pos:end="2221:80"><call pos:start="2221:53" pos:end="2221:80"><name pos:start="2221:53" pos:end="2221:60">offsetof</name><argument_list pos:start="2221:61" pos:end="2221:80">(<argument pos:start="2221:62" pos:end="2221:74"><expr pos:start="2221:62" pos:end="2221:74"><name pos:start="2221:62" pos:end="2221:74">CPUSPARCState</name></expr></argument>, <argument pos:start="2221:77" pos:end="2221:79"><expr pos:start="2221:77" pos:end="2221:79"><name pos:start="2221:77" pos:end="2221:79">tbr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2223:33" pos:end="2223:38">break;</break>

                            <case pos:start="2225:29" pos:end="2225:35">case <expr pos:start="2225:34" pos:end="2225:34"><literal type="number" pos:start="2225:34" pos:end="2225:34">6</literal></expr>:</case> <comment type="line" pos:start="2225:37" pos:end="2225:45">// pstate</comment>

                                <expr_stmt pos:start="2227:33" pos:end="2227:50"><expr pos:start="2227:33" pos:end="2227:49"><call pos:start="2227:33" pos:end="2227:49"><name pos:start="2227:33" pos:end="2227:47">gen_op_wrpstate</name><argument_list pos:start="2227:48" pos:end="2227:49">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2229:33" pos:end="2229:47"><expr pos:start="2229:33" pos:end="2229:46"><call pos:start="2229:33" pos:end="2229:46"><name pos:start="2229:33" pos:end="2229:42">save_state</name><argument_list pos:start="2229:43" pos:end="2229:46">(<argument pos:start="2229:44" pos:end="2229:45"><expr pos:start="2229:44" pos:end="2229:45"><name pos:start="2229:44" pos:end="2229:45">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2231:33" pos:end="2231:51"><expr pos:start="2231:33" pos:end="2231:50"><call pos:start="2231:33" pos:end="2231:50"><name pos:start="2231:33" pos:end="2231:48">gen_op_next_insn</name><argument_list pos:start="2231:49" pos:end="2231:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2233:33" pos:end="2233:51"><expr pos:start="2233:33" pos:end="2233:50"><call pos:start="2233:33" pos:end="2233:50"><name pos:start="2233:33" pos:end="2233:48">gen_op_movl_T0_0</name><argument_list pos:start="2233:49" pos:end="2233:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2235:33" pos:end="2235:49"><expr pos:start="2235:33" pos:end="2235:48"><call pos:start="2235:33" pos:end="2235:48"><name pos:start="2235:33" pos:end="2235:46">gen_op_exit_tb</name><argument_list pos:start="2235:47" pos:end="2235:48">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2237:33" pos:end="2237:46"><expr pos:start="2237:33" pos:end="2237:45"><name pos:start="2237:33" pos:end="2237:41"><name pos:start="2237:33" pos:end="2237:34">dc</name><operator pos:start="2237:35" pos:end="2237:36">-&gt;</operator><name pos:start="2237:37" pos:end="2237:41">is_br</name></name> <operator pos:start="2237:43" pos:end="2237:43">=</operator> <literal type="number" pos:start="2237:45" pos:end="2237:45">1</literal></expr>;</expr_stmt>

                                <break pos:start="2239:33" pos:end="2239:38">break;</break>

                            <case pos:start="2241:29" pos:end="2241:35">case <expr pos:start="2241:34" pos:end="2241:34"><literal type="number" pos:start="2241:34" pos:end="2241:34">7</literal></expr>:</case> <comment type="line" pos:start="2241:37" pos:end="2241:41">// tl</comment>

                                <expr_stmt pos:start="2243:33" pos:end="2243:80"><expr pos:start="2243:33" pos:end="2243:79"><call pos:start="2243:33" pos:end="2243:79"><name pos:start="2243:33" pos:end="2243:50">gen_op_movl_env_T0</name><argument_list pos:start="2243:51" pos:end="2243:79">(<argument pos:start="2243:52" pos:end="2243:78"><expr pos:start="2243:52" pos:end="2243:78"><call pos:start="2243:52" pos:end="2243:78"><name pos:start="2243:52" pos:end="2243:59">offsetof</name><argument_list pos:start="2243:60" pos:end="2243:78">(<argument pos:start="2243:61" pos:end="2243:73"><expr pos:start="2243:61" pos:end="2243:73"><name pos:start="2243:61" pos:end="2243:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2243:76" pos:end="2243:77"><expr pos:start="2243:76" pos:end="2243:77"><name pos:start="2243:76" pos:end="2243:77">tl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2245:33" pos:end="2245:38">break;</break>

                            <case pos:start="2247:29" pos:end="2247:35">case <expr pos:start="2247:34" pos:end="2247:34"><literal type="number" pos:start="2247:34" pos:end="2247:34">8</literal></expr>:</case> <comment type="line" pos:start="2247:37" pos:end="2247:42">// pil</comment>

                                <expr_stmt pos:start="2249:33" pos:end="2249:84"><expr pos:start="2249:33" pos:end="2249:83"><call pos:start="2249:33" pos:end="2249:83"><name pos:start="2249:33" pos:end="2249:50">gen_op_movl_env_T0</name><argument_list pos:start="2249:51" pos:end="2249:83">(<argument pos:start="2249:52" pos:end="2249:82"><expr pos:start="2249:52" pos:end="2249:82"><call pos:start="2249:52" pos:end="2249:82"><name pos:start="2249:52" pos:end="2249:59">offsetof</name><argument_list pos:start="2249:60" pos:end="2249:82">(<argument pos:start="2249:61" pos:end="2249:73"><expr pos:start="2249:61" pos:end="2249:73"><name pos:start="2249:61" pos:end="2249:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2249:76" pos:end="2249:81"><expr pos:start="2249:76" pos:end="2249:81"><name pos:start="2249:76" pos:end="2249:81">psrpil</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2251:33" pos:end="2251:38">break;</break>

                            <case pos:start="2253:29" pos:end="2253:35">case <expr pos:start="2253:34" pos:end="2253:34"><literal type="number" pos:start="2253:34" pos:end="2253:34">9</literal></expr>:</case> <comment type="line" pos:start="2253:37" pos:end="2253:42">// cwp</comment>

                                <expr_stmt pos:start="2255:33" pos:end="2255:47"><expr pos:start="2255:33" pos:end="2255:46"><call pos:start="2255:33" pos:end="2255:46"><name pos:start="2255:33" pos:end="2255:44">gen_op_wrcwp</name><argument_list pos:start="2255:45" pos:end="2255:46">()</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2257:33" pos:end="2257:38">break;</break>

                            <case pos:start="2259:29" pos:end="2259:36">case <expr pos:start="2259:34" pos:end="2259:35"><literal type="number" pos:start="2259:34" pos:end="2259:35">10</literal></expr>:</case> <comment type="line" pos:start="2259:38" pos:end="2259:47">// cansave</comment>

                                <expr_stmt pos:start="2261:33" pos:end="2261:85"><expr pos:start="2261:33" pos:end="2261:84"><call pos:start="2261:33" pos:end="2261:84"><name pos:start="2261:33" pos:end="2261:50">gen_op_movl_env_T0</name><argument_list pos:start="2261:51" pos:end="2261:84">(<argument pos:start="2261:52" pos:end="2261:83"><expr pos:start="2261:52" pos:end="2261:83"><call pos:start="2261:52" pos:end="2261:83"><name pos:start="2261:52" pos:end="2261:59">offsetof</name><argument_list pos:start="2261:60" pos:end="2261:83">(<argument pos:start="2261:61" pos:end="2261:73"><expr pos:start="2261:61" pos:end="2261:73"><name pos:start="2261:61" pos:end="2261:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2261:76" pos:end="2261:82"><expr pos:start="2261:76" pos:end="2261:82"><name pos:start="2261:76" pos:end="2261:82">cansave</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2263:33" pos:end="2263:38">break;</break>

                            <case pos:start="2265:29" pos:end="2265:36">case <expr pos:start="2265:34" pos:end="2265:35"><literal type="number" pos:start="2265:34" pos:end="2265:35">11</literal></expr>:</case> <comment type="line" pos:start="2265:38" pos:end="2265:50">// canrestore</comment>

                                <expr_stmt pos:start="2267:33" pos:end="2267:88"><expr pos:start="2267:33" pos:end="2267:87"><call pos:start="2267:33" pos:end="2267:87"><name pos:start="2267:33" pos:end="2267:50">gen_op_movl_env_T0</name><argument_list pos:start="2267:51" pos:end="2267:87">(<argument pos:start="2267:52" pos:end="2267:86"><expr pos:start="2267:52" pos:end="2267:86"><call pos:start="2267:52" pos:end="2267:86"><name pos:start="2267:52" pos:end="2267:59">offsetof</name><argument_list pos:start="2267:60" pos:end="2267:86">(<argument pos:start="2267:61" pos:end="2267:73"><expr pos:start="2267:61" pos:end="2267:73"><name pos:start="2267:61" pos:end="2267:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2267:76" pos:end="2267:85"><expr pos:start="2267:76" pos:end="2267:85"><name pos:start="2267:76" pos:end="2267:85">canrestore</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2269:33" pos:end="2269:38">break;</break>

                            <case pos:start="2271:29" pos:end="2271:36">case <expr pos:start="2271:34" pos:end="2271:35"><literal type="number" pos:start="2271:34" pos:end="2271:35">12</literal></expr>:</case> <comment type="line" pos:start="2271:38" pos:end="2271:48">// cleanwin</comment>

                                <expr_stmt pos:start="2273:33" pos:end="2273:86"><expr pos:start="2273:33" pos:end="2273:85"><call pos:start="2273:33" pos:end="2273:85"><name pos:start="2273:33" pos:end="2273:50">gen_op_movl_env_T0</name><argument_list pos:start="2273:51" pos:end="2273:85">(<argument pos:start="2273:52" pos:end="2273:84"><expr pos:start="2273:52" pos:end="2273:84"><call pos:start="2273:52" pos:end="2273:84"><name pos:start="2273:52" pos:end="2273:59">offsetof</name><argument_list pos:start="2273:60" pos:end="2273:84">(<argument pos:start="2273:61" pos:end="2273:73"><expr pos:start="2273:61" pos:end="2273:73"><name pos:start="2273:61" pos:end="2273:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2273:76" pos:end="2273:83"><expr pos:start="2273:76" pos:end="2273:83"><name pos:start="2273:76" pos:end="2273:83">cleanwin</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2275:33" pos:end="2275:38">break;</break>

                            <case pos:start="2277:29" pos:end="2277:36">case <expr pos:start="2277:34" pos:end="2277:35"><literal type="number" pos:start="2277:34" pos:end="2277:35">13</literal></expr>:</case> <comment type="line" pos:start="2277:38" pos:end="2277:48">// otherwin</comment>

                                <expr_stmt pos:start="2279:33" pos:end="2279:86"><expr pos:start="2279:33" pos:end="2279:85"><call pos:start="2279:33" pos:end="2279:85"><name pos:start="2279:33" pos:end="2279:50">gen_op_movl_env_T0</name><argument_list pos:start="2279:51" pos:end="2279:85">(<argument pos:start="2279:52" pos:end="2279:84"><expr pos:start="2279:52" pos:end="2279:84"><call pos:start="2279:52" pos:end="2279:84"><name pos:start="2279:52" pos:end="2279:59">offsetof</name><argument_list pos:start="2279:60" pos:end="2279:84">(<argument pos:start="2279:61" pos:end="2279:73"><expr pos:start="2279:61" pos:end="2279:73"><name pos:start="2279:61" pos:end="2279:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2279:76" pos:end="2279:83"><expr pos:start="2279:76" pos:end="2279:83"><name pos:start="2279:76" pos:end="2279:83">otherwin</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2281:33" pos:end="2281:38">break;</break>

                            <case pos:start="2283:29" pos:end="2283:36">case <expr pos:start="2283:34" pos:end="2283:35"><literal type="number" pos:start="2283:34" pos:end="2283:35">14</literal></expr>:</case> <comment type="line" pos:start="2283:38" pos:end="2283:46">// wstate</comment>

                                <expr_stmt pos:start="2285:33" pos:end="2285:84"><expr pos:start="2285:33" pos:end="2285:83"><call pos:start="2285:33" pos:end="2285:83"><name pos:start="2285:33" pos:end="2285:50">gen_op_movl_env_T0</name><argument_list pos:start="2285:51" pos:end="2285:83">(<argument pos:start="2285:52" pos:end="2285:82"><expr pos:start="2285:52" pos:end="2285:82"><call pos:start="2285:52" pos:end="2285:82"><name pos:start="2285:52" pos:end="2285:59">offsetof</name><argument_list pos:start="2285:60" pos:end="2285:82">(<argument pos:start="2285:61" pos:end="2285:73"><expr pos:start="2285:61" pos:end="2285:73"><name pos:start="2285:61" pos:end="2285:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2285:76" pos:end="2285:81"><expr pos:start="2285:76" pos:end="2285:81"><name pos:start="2285:76" pos:end="2285:81">wstate</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2287:33" pos:end="2287:38">break;</break>

                            <case pos:start="2289:29" pos:end="2289:36">case <expr pos:start="2289:34" pos:end="2289:35"><literal type="number" pos:start="2289:34" pos:end="2289:35">16</literal></expr>:</case> <comment type="line" pos:start="2289:38" pos:end="2289:49">// UA2005 gl</comment>

                                <expr_stmt pos:start="2291:33" pos:end="2291:80"><expr pos:start="2291:33" pos:end="2291:79"><call pos:start="2291:33" pos:end="2291:79"><name pos:start="2291:33" pos:end="2291:50">gen_op_movl_env_T0</name><argument_list pos:start="2291:51" pos:end="2291:79">(<argument pos:start="2291:52" pos:end="2291:78"><expr pos:start="2291:52" pos:end="2291:78"><call pos:start="2291:52" pos:end="2291:78"><name pos:start="2291:52" pos:end="2291:59">offsetof</name><argument_list pos:start="2291:60" pos:end="2291:78">(<argument pos:start="2291:61" pos:end="2291:73"><expr pos:start="2291:61" pos:end="2291:73"><name pos:start="2291:61" pos:end="2291:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2291:76" pos:end="2291:77"><expr pos:start="2291:76" pos:end="2291:77"><name pos:start="2291:76" pos:end="2291:77">gl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2293:33" pos:end="2293:38">break;</break>

                            <case pos:start="2295:29" pos:end="2295:36">case <expr pos:start="2295:34" pos:end="2295:35"><literal type="number" pos:start="2295:34" pos:end="2295:35">26</literal></expr>:</case> <comment type="line" pos:start="2295:38" pos:end="2295:60">// UA2005 strand status</comment>

                                <if_stmt pos:start="2297:33" pos:end="2299:51"><if pos:start="2297:33" pos:end="2299:51">if <condition pos:start="2297:36" pos:end="2297:52">(<expr pos:start="2297:37" pos:end="2297:51"><operator pos:start="2297:37" pos:end="2297:37">!</operator><call pos:start="2297:38" pos:end="2297:51"><name pos:start="2297:38" pos:end="2297:47">hypervisor</name><argument_list pos:start="2297:48" pos:end="2297:51">(<argument pos:start="2297:49" pos:end="2297:50"><expr pos:start="2297:49" pos:end="2297:50"><name pos:start="2297:49" pos:end="2297:50">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2299:37" pos:end="2299:51"><block_content pos:start="2299:37" pos:end="2299:51">

                                    <goto pos:start="2299:37" pos:end="2299:51">goto <name pos:start="2299:42" pos:end="2299:50">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                                <expr_stmt pos:start="2301:33" pos:end="2301:81"><expr pos:start="2301:33" pos:end="2301:80"><call pos:start="2301:33" pos:end="2301:80"><name pos:start="2301:33" pos:end="2301:50">gen_op_movl_env_T0</name><argument_list pos:start="2301:51" pos:end="2301:80">(<argument pos:start="2301:52" pos:end="2301:79"><expr pos:start="2301:52" pos:end="2301:79"><call pos:start="2301:52" pos:end="2301:79"><name pos:start="2301:52" pos:end="2301:59">offsetof</name><argument_list pos:start="2301:60" pos:end="2301:79">(<argument pos:start="2301:61" pos:end="2301:73"><expr pos:start="2301:61" pos:end="2301:73"><name pos:start="2301:61" pos:end="2301:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2301:76" pos:end="2301:78"><expr pos:start="2301:76" pos:end="2301:78"><name pos:start="2301:76" pos:end="2301:78">ssr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2303:33" pos:end="2303:38">break;</break>

                            <default pos:start="2305:29" pos:end="2305:36">default:</default>

                                <goto pos:start="2307:33" pos:end="2307:50">goto <name pos:start="2307:38" pos:end="2307:49">illegal_insn</name>;</goto>

                            </block_content>}</block></switch>

<cpp:else pos:start="2311:1" pos:end="2311:5">#<cpp:directive pos:start="2311:2" pos:end="2311:5">else</cpp:directive></cpp:else>

                            <expr_stmt pos:start="2313:29" pos:end="2316:0"><expr pos:start="2313:29" pos:end="2313:42"><call pos:start="2313:29" pos:end="2313:42"><name pos:start="2313:29" pos:end="2313:40">gen_op_wrwim</name><argument_list pos:start="2313:41" pos:end="2313:42">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="2315:1" pos:end="2315:6">#<cpp:directive pos:start="2315:2" pos:end="2315:6">endif</cpp:directive></cpp:endif>

                        </block_content>}</block>

                        <break pos:start="2319:25" pos:end="2319:30">break;</break>

                    <case pos:start="2321:21" pos:end="2321:30">case <expr pos:start="2321:26" pos:end="2321:29"><literal type="number" pos:start="2321:26" pos:end="2321:29">0x33</literal></expr>:</case> <comment type="block" pos:start="2321:32" pos:end="2321:56">/* wrtbr, UA2005 wrhpr */</comment>

                        <block pos:start="2323:25" pos:end="2397:25">{<block_content pos:start="2327:29" pos:end="2396:0">

<cpp:ifndef pos:start="2325:1" pos:end="2325:22">#<cpp:directive pos:start="2325:2" pos:end="2325:7">ifndef</cpp:directive> <name pos:start="2325:9" pos:end="2325:22">TARGET_SPARC64</name></cpp:ifndef>

                            <if_stmt pos:start="2327:29" pos:end="2329:47"><if pos:start="2327:29" pos:end="2329:47">if <condition pos:start="2327:32" pos:end="2327:48">(<expr pos:start="2327:33" pos:end="2327:47"><operator pos:start="2327:33" pos:end="2327:33">!</operator><call pos:start="2327:34" pos:end="2327:47"><name pos:start="2327:34" pos:end="2327:43">supervisor</name><argument_list pos:start="2327:44" pos:end="2327:47">(<argument pos:start="2327:45" pos:end="2327:46"><expr pos:start="2327:45" pos:end="2327:46"><name pos:start="2327:45" pos:end="2327:46">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2329:33" pos:end="2329:47"><block_content pos:start="2329:33" pos:end="2329:47">

                                <goto pos:start="2329:33" pos:end="2329:47">goto <name pos:start="2329:38" pos:end="2329:46">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="2331:29" pos:end="2331:47"><expr pos:start="2331:29" pos:end="2331:46"><call pos:start="2331:29" pos:end="2331:46"><name pos:start="2331:29" pos:end="2331:44">gen_op_xor_T1_T0</name><argument_list pos:start="2331:45" pos:end="2331:46">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2333:29" pos:end="2336:0"><expr pos:start="2333:29" pos:end="2333:77"><call pos:start="2333:29" pos:end="2333:77"><name pos:start="2333:29" pos:end="2333:47">gen_op_movtl_env_T0</name><argument_list pos:start="2333:48" pos:end="2333:77">(<argument pos:start="2333:49" pos:end="2333:76"><expr pos:start="2333:49" pos:end="2333:76"><call pos:start="2333:49" pos:end="2333:76"><name pos:start="2333:49" pos:end="2333:56">offsetof</name><argument_list pos:start="2333:57" pos:end="2333:76">(<argument pos:start="2333:58" pos:end="2333:70"><expr pos:start="2333:58" pos:end="2333:70"><name pos:start="2333:58" pos:end="2333:70">CPUSPARCState</name></expr></argument>, <argument pos:start="2333:73" pos:end="2333:75"><expr pos:start="2333:73" pos:end="2333:75"><name pos:start="2333:73" pos:end="2333:75">tbr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="2335:1" pos:end="2335:5">#<cpp:directive pos:start="2335:2" pos:end="2335:5">else</cpp:directive></cpp:else>

                            <if_stmt pos:start="2337:29" pos:end="2339:47"><if pos:start="2337:29" pos:end="2339:47">if <condition pos:start="2337:32" pos:end="2337:48">(<expr pos:start="2337:33" pos:end="2337:47"><operator pos:start="2337:33" pos:end="2337:33">!</operator><call pos:start="2337:34" pos:end="2337:47"><name pos:start="2337:34" pos:end="2337:43">hypervisor</name><argument_list pos:start="2337:44" pos:end="2337:47">(<argument pos:start="2337:45" pos:end="2337:46"><expr pos:start="2337:45" pos:end="2337:46"><name pos:start="2337:45" pos:end="2337:46">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2339:33" pos:end="2339:47"><block_content pos:start="2339:33" pos:end="2339:47">

                                <goto pos:start="2339:33" pos:end="2339:47">goto <name pos:start="2339:38" pos:end="2339:46">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="2341:29" pos:end="2341:47"><expr pos:start="2341:29" pos:end="2341:46"><call pos:start="2341:29" pos:end="2341:46"><name pos:start="2341:29" pos:end="2341:44">gen_op_xor_T1_T0</name><argument_list pos:start="2341:45" pos:end="2341:46">()</argument_list></call></expr>;</expr_stmt>

                            <switch pos:start="2343:29" pos:end="2396:0">switch <condition pos:start="2343:36" pos:end="2343:39">(<expr pos:start="2343:37" pos:end="2343:38"><name pos:start="2343:37" pos:end="2343:38">rd</name></expr>)</condition> <block pos:start="2343:41" pos:end="2396:0">{<block_content pos:start="2345:29" pos:end="2391:50">

                            <case pos:start="2345:29" pos:end="2345:35">case <expr pos:start="2345:34" pos:end="2345:34"><literal type="number" pos:start="2345:34" pos:end="2345:34">0</literal></expr>:</case> <comment type="line" pos:start="2345:37" pos:end="2345:46">// hpstate</comment>

                                <comment type="line" pos:start="2347:33" pos:end="2347:58">// XXX gen_op_wrhpstate();</comment>

                                <expr_stmt pos:start="2349:33" pos:end="2349:47"><expr pos:start="2349:33" pos:end="2349:46"><call pos:start="2349:33" pos:end="2349:46"><name pos:start="2349:33" pos:end="2349:42">save_state</name><argument_list pos:start="2349:43" pos:end="2349:46">(<argument pos:start="2349:44" pos:end="2349:45"><expr pos:start="2349:44" pos:end="2349:45"><name pos:start="2349:44" pos:end="2349:45">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2351:33" pos:end="2351:51"><expr pos:start="2351:33" pos:end="2351:50"><call pos:start="2351:33" pos:end="2351:50"><name pos:start="2351:33" pos:end="2351:48">gen_op_next_insn</name><argument_list pos:start="2351:49" pos:end="2351:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2353:33" pos:end="2353:51"><expr pos:start="2353:33" pos:end="2353:50"><call pos:start="2353:33" pos:end="2353:50"><name pos:start="2353:33" pos:end="2353:48">gen_op_movl_T0_0</name><argument_list pos:start="2353:49" pos:end="2353:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2355:33" pos:end="2355:49"><expr pos:start="2355:33" pos:end="2355:48"><call pos:start="2355:33" pos:end="2355:48"><name pos:start="2355:33" pos:end="2355:46">gen_op_exit_tb</name><argument_list pos:start="2355:47" pos:end="2355:48">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2357:33" pos:end="2357:46"><expr pos:start="2357:33" pos:end="2357:45"><name pos:start="2357:33" pos:end="2357:41"><name pos:start="2357:33" pos:end="2357:34">dc</name><operator pos:start="2357:35" pos:end="2357:36">-&gt;</operator><name pos:start="2357:37" pos:end="2357:41">is_br</name></name> <operator pos:start="2357:43" pos:end="2357:43">=</operator> <literal type="number" pos:start="2357:45" pos:end="2357:45">1</literal></expr>;</expr_stmt>

                                <break pos:start="2359:33" pos:end="2359:38">break;</break>

                            <case pos:start="2361:29" pos:end="2361:35">case <expr pos:start="2361:34" pos:end="2361:34"><literal type="number" pos:start="2361:34" pos:end="2361:34">1</literal></expr>:</case> <comment type="line" pos:start="2361:37" pos:end="2361:46">// htstate</comment>

                                <comment type="line" pos:start="2363:33" pos:end="2363:58">// XXX gen_op_wrhtstate();</comment>

                                <break pos:start="2365:33" pos:end="2365:38">break;</break>

                            <case pos:start="2367:29" pos:end="2367:35">case <expr pos:start="2367:34" pos:end="2367:34"><literal type="number" pos:start="2367:34" pos:end="2367:34">3</literal></expr>:</case> <comment type="line" pos:start="2367:37" pos:end="2367:44">// hintp</comment>

                                <expr_stmt pos:start="2369:33" pos:end="2369:83"><expr pos:start="2369:33" pos:end="2369:82"><call pos:start="2369:33" pos:end="2369:82"><name pos:start="2369:33" pos:end="2369:50">gen_op_movl_env_T0</name><argument_list pos:start="2369:51" pos:end="2369:82">(<argument pos:start="2369:52" pos:end="2369:81"><expr pos:start="2369:52" pos:end="2369:81"><call pos:start="2369:52" pos:end="2369:81"><name pos:start="2369:52" pos:end="2369:59">offsetof</name><argument_list pos:start="2369:60" pos:end="2369:81">(<argument pos:start="2369:61" pos:end="2369:73"><expr pos:start="2369:61" pos:end="2369:73"><name pos:start="2369:61" pos:end="2369:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2369:76" pos:end="2369:80"><expr pos:start="2369:76" pos:end="2369:80"><name pos:start="2369:76" pos:end="2369:80">hintp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2371:33" pos:end="2371:38">break;</break>

                            <case pos:start="2373:29" pos:end="2373:35">case <expr pos:start="2373:34" pos:end="2373:34"><literal type="number" pos:start="2373:34" pos:end="2373:34">5</literal></expr>:</case> <comment type="line" pos:start="2373:37" pos:end="2373:43">// htba</comment>

                                <expr_stmt pos:start="2375:33" pos:end="2375:82"><expr pos:start="2375:33" pos:end="2375:81"><call pos:start="2375:33" pos:end="2375:81"><name pos:start="2375:33" pos:end="2375:50">gen_op_movl_env_T0</name><argument_list pos:start="2375:51" pos:end="2375:81">(<argument pos:start="2375:52" pos:end="2375:80"><expr pos:start="2375:52" pos:end="2375:80"><call pos:start="2375:52" pos:end="2375:80"><name pos:start="2375:52" pos:end="2375:59">offsetof</name><argument_list pos:start="2375:60" pos:end="2375:80">(<argument pos:start="2375:61" pos:end="2375:73"><expr pos:start="2375:61" pos:end="2375:73"><name pos:start="2375:61" pos:end="2375:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2375:76" pos:end="2375:79"><expr pos:start="2375:76" pos:end="2375:79"><name pos:start="2375:76" pos:end="2375:79">htba</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2377:33" pos:end="2377:38">break;</break>

                            <case pos:start="2379:29" pos:end="2379:36">case <expr pos:start="2379:34" pos:end="2379:35"><literal type="number" pos:start="2379:34" pos:end="2379:35">31</literal></expr>:</case> <comment type="line" pos:start="2379:38" pos:end="2379:51">// hstick_cmpr</comment>

                                <expr_stmt pos:start="2381:33" pos:end="2381:90"><expr pos:start="2381:33" pos:end="2381:89"><call pos:start="2381:33" pos:end="2381:89"><name pos:start="2381:33" pos:end="2381:51">gen_op_movtl_env_T0</name><argument_list pos:start="2381:52" pos:end="2381:89">(<argument pos:start="2381:53" pos:end="2381:88"><expr pos:start="2381:53" pos:end="2381:88"><call pos:start="2381:53" pos:end="2381:88"><name pos:start="2381:53" pos:end="2381:60">offsetof</name><argument_list pos:start="2381:61" pos:end="2381:88">(<argument pos:start="2381:62" pos:end="2381:74"><expr pos:start="2381:62" pos:end="2381:74"><name pos:start="2381:62" pos:end="2381:74">CPUSPARCState</name></expr></argument>, <argument pos:start="2381:77" pos:end="2381:87"><expr pos:start="2381:77" pos:end="2381:87"><name pos:start="2381:77" pos:end="2381:87">hstick_cmpr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2383:33" pos:end="2383:55"><expr pos:start="2383:33" pos:end="2383:54"><call pos:start="2383:33" pos:end="2383:54"><name pos:start="2383:33" pos:end="2383:52">gen_op_wrhstick_cmpr</name><argument_list pos:start="2383:53" pos:end="2383:54">()</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2385:33" pos:end="2385:38">break;</break>

                            <case pos:start="2387:29" pos:end="2387:35">case <expr pos:start="2387:34" pos:end="2387:34"><literal type="number" pos:start="2387:34" pos:end="2387:34">6</literal></expr>:</case> <comment type="line" pos:start="2387:37" pos:end="2387:52">// hver readonly</comment>

                            <default pos:start="2389:29" pos:end="2389:36">default:</default>

                                <goto pos:start="2391:33" pos:end="2391:50">goto <name pos:start="2391:38" pos:end="2391:49">illegal_insn</name>;</goto>

                            </block_content>}</block></switch>

<cpp:endif pos:start="2395:1" pos:end="2395:6">#<cpp:directive pos:start="2395:2" pos:end="2395:6">endif</cpp:directive></cpp:endif>

                        </block_content>}</block>

                        <break pos:start="2399:25" pos:end="2404:0">break;</break>

<cpp:endif pos:start="2401:1" pos:end="2401:6">#<cpp:directive pos:start="2401:2" pos:end="2401:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2403:1" pos:end="2403:21">#<cpp:directive pos:start="2403:2" pos:end="2403:6">ifdef</cpp:directive> <name pos:start="2403:8" pos:end="2403:21">TARGET_SPARC64</name></cpp:ifdef>

                    <case pos:start="2405:21" pos:end="2405:30">case <expr pos:start="2405:26" pos:end="2405:29"><literal type="number" pos:start="2405:26" pos:end="2405:29">0x2c</literal></expr>:</case> <comment type="block" pos:start="2405:32" pos:end="2405:45">/* V9 movcc */</comment>

                        <block pos:start="2407:25" pos:end="2459:25">{<block_content pos:start="2409:29" pos:end="2457:34">

                            <decl_stmt pos:start="2409:29" pos:end="2409:64"><decl pos:start="2409:29" pos:end="2409:63"><type pos:start="2409:29" pos:end="2409:31"><name pos:start="2409:29" pos:end="2409:31">int</name></type> <name pos:start="2409:33" pos:end="2409:34">cc</name> <init pos:start="2409:36" pos:end="2409:63">= <expr pos:start="2409:38" pos:end="2409:63"><call pos:start="2409:38" pos:end="2409:63"><name pos:start="2409:38" pos:end="2409:49">GET_FIELD_SP</name><argument_list pos:start="2409:50" pos:end="2409:63">(<argument pos:start="2409:51" pos:end="2409:54"><expr pos:start="2409:51" pos:end="2409:54"><name pos:start="2409:51" pos:end="2409:54">insn</name></expr></argument>, <argument pos:start="2409:57" pos:end="2409:58"><expr pos:start="2409:57" pos:end="2409:58"><literal type="number" pos:start="2409:57" pos:end="2409:58">11</literal></expr></argument>, <argument pos:start="2409:61" pos:end="2409:62"><expr pos:start="2409:61" pos:end="2409:62"><literal type="number" pos:start="2409:61" pos:end="2409:62">12</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="2411:29" pos:end="2411:66"><decl pos:start="2411:29" pos:end="2411:65"><type pos:start="2411:29" pos:end="2411:31"><name pos:start="2411:29" pos:end="2411:31">int</name></type> <name pos:start="2411:33" pos:end="2411:36">cond</name> <init pos:start="2411:38" pos:end="2411:65">= <expr pos:start="2411:40" pos:end="2411:65"><call pos:start="2411:40" pos:end="2411:65"><name pos:start="2411:40" pos:end="2411:51">GET_FIELD_SP</name><argument_list pos:start="2411:52" pos:end="2411:65">(<argument pos:start="2411:53" pos:end="2411:56"><expr pos:start="2411:53" pos:end="2411:56"><name pos:start="2411:53" pos:end="2411:56">insn</name></expr></argument>, <argument pos:start="2411:59" pos:end="2411:60"><expr pos:start="2411:59" pos:end="2411:60"><literal type="number" pos:start="2411:59" pos:end="2411:60">14</literal></expr></argument>, <argument pos:start="2411:63" pos:end="2411:64"><expr pos:start="2411:63" pos:end="2411:64"><literal type="number" pos:start="2411:63" pos:end="2411:64">17</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <if_stmt pos:start="2413:29" pos:end="2427:29"><if pos:start="2413:29" pos:end="2419:29">if <condition pos:start="2413:32" pos:end="2413:39">(<expr pos:start="2413:33" pos:end="2413:38"><name pos:start="2413:33" pos:end="2413:38">IS_IMM</name></expr>)</condition> <block pos:start="2413:41" pos:end="2419:29">{<block_content pos:start="2415:33" pos:end="2417:54">       <comment type="block" pos:start="2413:49" pos:end="2413:63">/* immediate */</comment>

                                <expr_stmt pos:start="2415:33" pos:end="2415:65"><expr pos:start="2415:33" pos:end="2415:64"><name pos:start="2415:33" pos:end="2415:35">rs2</name> <operator pos:start="2415:37" pos:end="2415:37">=</operator> <call pos:start="2415:39" pos:end="2415:64"><name pos:start="2415:39" pos:end="2415:51">GET_FIELD_SPs</name><argument_list pos:start="2415:52" pos:end="2415:64">(<argument pos:start="2415:53" pos:end="2415:56"><expr pos:start="2415:53" pos:end="2415:56"><name pos:start="2415:53" pos:end="2415:56">insn</name></expr></argument>, <argument pos:start="2415:59" pos:end="2415:59"><expr pos:start="2415:59" pos:end="2415:59"><literal type="number" pos:start="2415:59" pos:end="2415:59">0</literal></expr></argument>, <argument pos:start="2415:62" pos:end="2415:63"><expr pos:start="2415:62" pos:end="2415:63"><literal type="number" pos:start="2415:62" pos:end="2415:63">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2417:33" pos:end="2417:54"><expr pos:start="2417:33" pos:end="2417:53"><call pos:start="2417:33" pos:end="2417:53"><name pos:start="2417:33" pos:end="2417:48">gen_movl_simm_T1</name><argument_list pos:start="2417:49" pos:end="2417:53">(<argument pos:start="2417:50" pos:end="2417:52"><expr pos:start="2417:50" pos:end="2417:52"><name pos:start="2417:50" pos:end="2417:52">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if>

                            <else pos:start="2421:29" pos:end="2427:29">else <block pos:start="2421:34" pos:end="2427:29">{<block_content pos:start="2423:33" pos:end="2425:53">

                                <expr_stmt pos:start="2423:33" pos:end="2423:63"><expr pos:start="2423:33" pos:end="2423:62"><name pos:start="2423:33" pos:end="2423:35">rs2</name> <operator pos:start="2423:37" pos:end="2423:37">=</operator> <call pos:start="2423:39" pos:end="2423:62"><name pos:start="2423:39" pos:end="2423:50">GET_FIELD_SP</name><argument_list pos:start="2423:51" pos:end="2423:62">(<argument pos:start="2423:52" pos:end="2423:55"><expr pos:start="2423:52" pos:end="2423:55"><name pos:start="2423:52" pos:end="2423:55">insn</name></expr></argument>, <argument pos:start="2423:58" pos:end="2423:58"><expr pos:start="2423:58" pos:end="2423:58"><literal type="number" pos:start="2423:58" pos:end="2423:58">0</literal></expr></argument>, <argument pos:start="2423:61" pos:end="2423:61"><expr pos:start="2423:61" pos:end="2423:61"><literal type="number" pos:start="2423:61" pos:end="2423:61">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2425:33" pos:end="2425:53"><expr pos:start="2425:33" pos:end="2425:52"><call pos:start="2425:33" pos:end="2425:52"><name pos:start="2425:33" pos:end="2425:47">gen_movl_reg_T1</name><argument_list pos:start="2425:48" pos:end="2425:52">(<argument pos:start="2425:49" pos:end="2425:51"><expr pos:start="2425:49" pos:end="2425:51"><name pos:start="2425:49" pos:end="2425:51">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <expr_stmt pos:start="2429:29" pos:end="2429:48"><expr pos:start="2429:29" pos:end="2429:47"><call pos:start="2429:29" pos:end="2429:47"><name pos:start="2429:29" pos:end="2429:43">gen_movl_reg_T0</name><argument_list pos:start="2429:44" pos:end="2429:47">(<argument pos:start="2429:45" pos:end="2429:46"><expr pos:start="2429:45" pos:end="2429:46"><name pos:start="2429:45" pos:end="2429:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2431:29" pos:end="2431:41"><expr pos:start="2431:29" pos:end="2431:40"><call pos:start="2431:29" pos:end="2431:40"><name pos:start="2431:29" pos:end="2431:36">flush_T2</name><argument_list pos:start="2431:37" pos:end="2431:40">(<argument pos:start="2431:38" pos:end="2431:39"><expr pos:start="2431:38" pos:end="2431:39"><name pos:start="2431:38" pos:end="2431:39">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="2433:29" pos:end="2451:29"><if pos:start="2433:29" pos:end="2447:29">if <condition pos:start="2433:32" pos:end="2433:49">(<expr pos:start="2433:33" pos:end="2433:48"><name pos:start="2433:33" pos:end="2433:36">insn</name> <operator pos:start="2433:38" pos:end="2433:38">&amp;</operator> <operator pos:start="2433:40" pos:end="2433:40">(</operator><literal type="number" pos:start="2433:41" pos:end="2433:41">1</literal> <operator pos:start="2433:43" pos:end="2433:44">&lt;&lt;</operator> <literal type="number" pos:start="2433:46" pos:end="2433:47">18</literal><operator pos:start="2433:48" pos:end="2433:48">)</operator></expr>)</condition> <block pos:start="2433:51" pos:end="2447:29">{<block_content pos:start="2435:33" pos:end="2445:54">

                                <if_stmt pos:start="2435:33" pos:end="2445:54"><if pos:start="2435:33" pos:end="2437:56">if <condition pos:start="2435:36" pos:end="2435:44">(<expr pos:start="2435:37" pos:end="2435:43"><name pos:start="2435:37" pos:end="2435:38">cc</name> <operator pos:start="2435:40" pos:end="2435:41">==</operator> <literal type="number" pos:start="2435:43" pos:end="2435:43">0</literal></expr>)</condition><block type="pseudo" pos:start="2437:37" pos:end="2437:56"><block_content pos:start="2437:37" pos:end="2437:56">

                                    <expr_stmt pos:start="2437:37" pos:end="2437:56"><expr pos:start="2437:37" pos:end="2437:55"><name pos:start="2437:37" pos:end="2437:53"><name pos:start="2437:37" pos:end="2437:44">gen_cond</name><index pos:start="2437:45" pos:end="2437:47">[<expr pos:start="2437:46" pos:end="2437:46"><literal type="number" pos:start="2437:46" pos:end="2437:46">0</literal></expr>]</index><index pos:start="2437:48" pos:end="2437:53">[<expr pos:start="2437:49" pos:end="2437:52"><name pos:start="2437:49" pos:end="2437:52">cond</name></expr>]</index></name><operator pos:start="2437:54" pos:end="2437:54">(</operator><operator pos:start="2437:55" pos:end="2437:55">)</operator></expr>;</expr_stmt></block_content></block></if>

                                <if type="elseif" pos:start="2439:33" pos:end="2441:56">else if <condition pos:start="2439:41" pos:end="2439:49">(<expr pos:start="2439:42" pos:end="2439:48"><name pos:start="2439:42" pos:end="2439:43">cc</name> <operator pos:start="2439:45" pos:end="2439:46">==</operator> <literal type="number" pos:start="2439:48" pos:end="2439:48">2</literal></expr>)</condition><block type="pseudo" pos:start="2441:37" pos:end="2441:56"><block_content pos:start="2441:37" pos:end="2441:56">

                                    <expr_stmt pos:start="2441:37" pos:end="2441:56"><expr pos:start="2441:37" pos:end="2441:55"><name pos:start="2441:37" pos:end="2441:53"><name pos:start="2441:37" pos:end="2441:44">gen_cond</name><index pos:start="2441:45" pos:end="2441:47">[<expr pos:start="2441:46" pos:end="2441:46"><literal type="number" pos:start="2441:46" pos:end="2441:46">1</literal></expr>]</index><index pos:start="2441:48" pos:end="2441:53">[<expr pos:start="2441:49" pos:end="2441:52"><name pos:start="2441:49" pos:end="2441:52">cond</name></expr>]</index></name><operator pos:start="2441:54" pos:end="2441:54">(</operator><operator pos:start="2441:55" pos:end="2441:55">)</operator></expr>;</expr_stmt></block_content></block></if>

                                <else pos:start="2443:33" pos:end="2445:54">else<block type="pseudo" pos:start="2445:37" pos:end="2445:54"><block_content pos:start="2445:37" pos:end="2445:54">

                                    <goto pos:start="2445:37" pos:end="2445:54">goto <name pos:start="2445:42" pos:end="2445:53">illegal_insn</name>;</goto></block_content></block></else></if_stmt>

                            </block_content>}</block></if> <else pos:start="2447:31" pos:end="2451:29">else <block pos:start="2447:36" pos:end="2451:29">{<block_content pos:start="2449:33" pos:end="2449:54">

                                <expr_stmt pos:start="2449:33" pos:end="2449:54"><expr pos:start="2449:33" pos:end="2449:53"><name pos:start="2449:33" pos:end="2449:51"><name pos:start="2449:33" pos:end="2449:41">gen_fcond</name><index pos:start="2449:42" pos:end="2449:45">[<expr pos:start="2449:43" pos:end="2449:44"><name pos:start="2449:43" pos:end="2449:44">cc</name></expr>]</index><index pos:start="2449:46" pos:end="2449:51">[<expr pos:start="2449:47" pos:end="2449:50"><name pos:start="2449:47" pos:end="2449:50">cond</name></expr>]</index></name><operator pos:start="2449:52" pos:end="2449:52">(</operator><operator pos:start="2449:53" pos:end="2449:53">)</operator></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <expr_stmt pos:start="2453:29" pos:end="2453:44"><expr pos:start="2453:29" pos:end="2453:43"><call pos:start="2453:29" pos:end="2453:43"><name pos:start="2453:29" pos:end="2453:41">gen_op_mov_cc</name><argument_list pos:start="2453:42" pos:end="2453:43">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2455:29" pos:end="2455:48"><expr pos:start="2455:29" pos:end="2455:47"><call pos:start="2455:29" pos:end="2455:47"><name pos:start="2455:29" pos:end="2455:43">gen_movl_T0_reg</name><argument_list pos:start="2455:44" pos:end="2455:47">(<argument pos:start="2455:45" pos:end="2455:46"><expr pos:start="2455:45" pos:end="2455:46"><name pos:start="2455:45" pos:end="2455:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="2457:29" pos:end="2457:34">break;</break>

                        </block_content>}</block>

                    <case pos:start="2461:21" pos:end="2461:30">case <expr pos:start="2461:26" pos:end="2461:29"><literal type="number" pos:start="2461:26" pos:end="2461:29">0x2d</literal></expr>:</case> <comment type="block" pos:start="2461:32" pos:end="2461:45">/* V9 sdivx */</comment>

                        <expr_stmt pos:start="2463:25" pos:end="2463:45"><expr pos:start="2463:25" pos:end="2463:44"><call pos:start="2463:25" pos:end="2463:44"><name pos:start="2463:25" pos:end="2463:42">gen_op_sdivx_T1_T0</name><argument_list pos:start="2463:43" pos:end="2463:44">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2465:25" pos:end="2465:44"><expr pos:start="2465:25" pos:end="2465:43"><call pos:start="2465:25" pos:end="2465:43"><name pos:start="2465:25" pos:end="2465:39">gen_movl_T0_reg</name><argument_list pos:start="2465:40" pos:end="2465:43">(<argument pos:start="2465:41" pos:end="2465:42"><expr pos:start="2465:41" pos:end="2465:42"><name pos:start="2465:41" pos:end="2465:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2467:25" pos:end="2467:30">break;</break>

                    <case pos:start="2469:21" pos:end="2469:30">case <expr pos:start="2469:26" pos:end="2469:29"><literal type="number" pos:start="2469:26" pos:end="2469:29">0x2e</literal></expr>:</case> <comment type="block" pos:start="2469:32" pos:end="2469:44">/* V9 popc */</comment>

                        <block pos:start="2471:25" pos:end="2495:25">{<block_content pos:start="2473:29" pos:end="2493:48">

                            <if_stmt pos:start="2473:29" pos:end="2489:29"><if pos:start="2473:29" pos:end="2481:29">if <condition pos:start="2473:32" pos:end="2473:39">(<expr pos:start="2473:33" pos:end="2473:38"><name pos:start="2473:33" pos:end="2473:38">IS_IMM</name></expr>)</condition> <block pos:start="2473:41" pos:end="2481:29">{<block_content pos:start="2475:33" pos:end="2477:54">       <comment type="block" pos:start="2473:49" pos:end="2473:63">/* immediate */</comment>

                                <expr_stmt pos:start="2475:33" pos:end="2475:65"><expr pos:start="2475:33" pos:end="2475:64"><name pos:start="2475:33" pos:end="2475:35">rs2</name> <operator pos:start="2475:37" pos:end="2475:37">=</operator> <call pos:start="2475:39" pos:end="2475:64"><name pos:start="2475:39" pos:end="2475:51">GET_FIELD_SPs</name><argument_list pos:start="2475:52" pos:end="2475:64">(<argument pos:start="2475:53" pos:end="2475:56"><expr pos:start="2475:53" pos:end="2475:56"><name pos:start="2475:53" pos:end="2475:56">insn</name></expr></argument>, <argument pos:start="2475:59" pos:end="2475:59"><expr pos:start="2475:59" pos:end="2475:59"><literal type="number" pos:start="2475:59" pos:end="2475:59">0</literal></expr></argument>, <argument pos:start="2475:62" pos:end="2475:63"><expr pos:start="2475:62" pos:end="2475:63"><literal type="number" pos:start="2475:62" pos:end="2475:63">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2477:33" pos:end="2477:54"><expr pos:start="2477:33" pos:end="2477:53"><call pos:start="2477:33" pos:end="2477:53"><name pos:start="2477:33" pos:end="2477:48">gen_movl_simm_T1</name><argument_list pos:start="2477:49" pos:end="2477:53">(<argument pos:start="2477:50" pos:end="2477:52"><expr pos:start="2477:50" pos:end="2477:52"><name pos:start="2477:50" pos:end="2477:52">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <comment type="line" pos:start="2479:33" pos:end="2479:63">// XXX optimize: popc(constant)</comment>

                            </block_content>}</block></if>

                            <else pos:start="2483:29" pos:end="2489:29">else <block pos:start="2483:34" pos:end="2489:29">{<block_content pos:start="2485:33" pos:end="2487:53">

                                <expr_stmt pos:start="2485:33" pos:end="2485:63"><expr pos:start="2485:33" pos:end="2485:62"><name pos:start="2485:33" pos:end="2485:35">rs2</name> <operator pos:start="2485:37" pos:end="2485:37">=</operator> <call pos:start="2485:39" pos:end="2485:62"><name pos:start="2485:39" pos:end="2485:50">GET_FIELD_SP</name><argument_list pos:start="2485:51" pos:end="2485:62">(<argument pos:start="2485:52" pos:end="2485:55"><expr pos:start="2485:52" pos:end="2485:55"><name pos:start="2485:52" pos:end="2485:55">insn</name></expr></argument>, <argument pos:start="2485:58" pos:end="2485:58"><expr pos:start="2485:58" pos:end="2485:58"><literal type="number" pos:start="2485:58" pos:end="2485:58">0</literal></expr></argument>, <argument pos:start="2485:61" pos:end="2485:61"><expr pos:start="2485:61" pos:end="2485:61"><literal type="number" pos:start="2485:61" pos:end="2485:61">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2487:33" pos:end="2487:53"><expr pos:start="2487:33" pos:end="2487:52"><call pos:start="2487:33" pos:end="2487:52"><name pos:start="2487:33" pos:end="2487:47">gen_movl_reg_T1</name><argument_list pos:start="2487:48" pos:end="2487:52">(<argument pos:start="2487:49" pos:end="2487:51"><expr pos:start="2487:49" pos:end="2487:51"><name pos:start="2487:49" pos:end="2487:51">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <expr_stmt pos:start="2491:29" pos:end="2491:42"><expr pos:start="2491:29" pos:end="2491:41"><call pos:start="2491:29" pos:end="2491:41"><name pos:start="2491:29" pos:end="2491:39">gen_op_popc</name><argument_list pos:start="2491:40" pos:end="2491:41">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2493:29" pos:end="2493:48"><expr pos:start="2493:29" pos:end="2493:47"><call pos:start="2493:29" pos:end="2493:47"><name pos:start="2493:29" pos:end="2493:43">gen_movl_T0_reg</name><argument_list pos:start="2493:44" pos:end="2493:47">(<argument pos:start="2493:45" pos:end="2493:46"><expr pos:start="2493:45" pos:end="2493:46"><name pos:start="2493:45" pos:end="2493:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block>

                    <case pos:start="2497:21" pos:end="2497:30">case <expr pos:start="2497:26" pos:end="2497:29"><literal type="number" pos:start="2497:26" pos:end="2497:29">0x2f</literal></expr>:</case> <comment type="block" pos:start="2497:32" pos:end="2497:44">/* V9 movr */</comment>

                        <block pos:start="2499:25" pos:end="2538:0">{<block_content pos:start="2501:29" pos:end="2533:34">

                            <decl_stmt pos:start="2501:29" pos:end="2501:66"><decl pos:start="2501:29" pos:end="2501:65"><type pos:start="2501:29" pos:end="2501:31"><name pos:start="2501:29" pos:end="2501:31">int</name></type> <name pos:start="2501:33" pos:end="2501:36">cond</name> <init pos:start="2501:38" pos:end="2501:65">= <expr pos:start="2501:40" pos:end="2501:65"><call pos:start="2501:40" pos:end="2501:65"><name pos:start="2501:40" pos:end="2501:51">GET_FIELD_SP</name><argument_list pos:start="2501:52" pos:end="2501:65">(<argument pos:start="2501:53" pos:end="2501:56"><expr pos:start="2501:53" pos:end="2501:56"><name pos:start="2501:53" pos:end="2501:56">insn</name></expr></argument>, <argument pos:start="2501:59" pos:end="2501:60"><expr pos:start="2501:59" pos:end="2501:60"><literal type="number" pos:start="2501:59" pos:end="2501:60">10</literal></expr></argument>, <argument pos:start="2501:63" pos:end="2501:64"><expr pos:start="2501:63" pos:end="2501:64"><literal type="number" pos:start="2501:63" pos:end="2501:64">12</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="2503:29" pos:end="2503:58"><expr pos:start="2503:29" pos:end="2503:57"><name pos:start="2503:29" pos:end="2503:31">rs1</name> <operator pos:start="2503:33" pos:end="2503:33">=</operator> <call pos:start="2503:35" pos:end="2503:57"><name pos:start="2503:35" pos:end="2503:43">GET_FIELD</name><argument_list pos:start="2503:44" pos:end="2503:57">(<argument pos:start="2503:45" pos:end="2503:48"><expr pos:start="2503:45" pos:end="2503:48"><name pos:start="2503:45" pos:end="2503:48">insn</name></expr></argument>, <argument pos:start="2503:51" pos:end="2503:52"><expr pos:start="2503:51" pos:end="2503:52"><literal type="number" pos:start="2503:51" pos:end="2503:52">13</literal></expr></argument>, <argument pos:start="2503:55" pos:end="2503:56"><expr pos:start="2503:55" pos:end="2503:56"><literal type="number" pos:start="2503:55" pos:end="2503:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2505:29" pos:end="2505:41"><expr pos:start="2505:29" pos:end="2505:40"><call pos:start="2505:29" pos:end="2505:40"><name pos:start="2505:29" pos:end="2505:36">flush_T2</name><argument_list pos:start="2505:37" pos:end="2505:40">(<argument pos:start="2505:38" pos:end="2505:39"><expr pos:start="2505:38" pos:end="2505:39"><name pos:start="2505:38" pos:end="2505:39">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2507:29" pos:end="2507:49"><expr pos:start="2507:29" pos:end="2507:48"><call pos:start="2507:29" pos:end="2507:48"><name pos:start="2507:29" pos:end="2507:43">gen_movl_reg_T0</name><argument_list pos:start="2507:44" pos:end="2507:48">(<argument pos:start="2507:45" pos:end="2507:47"><expr pos:start="2507:45" pos:end="2507:47"><name pos:start="2507:45" pos:end="2507:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2509:29" pos:end="2509:47"><expr pos:start="2509:29" pos:end="2509:46"><call pos:start="2509:29" pos:end="2509:46"><name pos:start="2509:29" pos:end="2509:40">gen_cond_reg</name><argument_list pos:start="2509:41" pos:end="2509:46">(<argument pos:start="2509:42" pos:end="2509:45"><expr pos:start="2509:42" pos:end="2509:45"><name pos:start="2509:42" pos:end="2509:45">cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="2511:29" pos:end="2525:29"><if pos:start="2511:29" pos:end="2517:29">if <condition pos:start="2511:32" pos:end="2511:39">(<expr pos:start="2511:33" pos:end="2511:38"><name pos:start="2511:33" pos:end="2511:38">IS_IMM</name></expr>)</condition> <block pos:start="2511:41" pos:end="2517:29">{<block_content pos:start="2513:33" pos:end="2515:54">       <comment type="block" pos:start="2511:49" pos:end="2511:63">/* immediate */</comment>

                                <expr_stmt pos:start="2513:33" pos:end="2513:64"><expr pos:start="2513:33" pos:end="2513:63"><name pos:start="2513:33" pos:end="2513:35">rs2</name> <operator pos:start="2513:37" pos:end="2513:37">=</operator> <call pos:start="2513:39" pos:end="2513:63"><name pos:start="2513:39" pos:end="2513:51">GET_FIELD_SPs</name><argument_list pos:start="2513:52" pos:end="2513:63">(<argument pos:start="2513:53" pos:end="2513:56"><expr pos:start="2513:53" pos:end="2513:56"><name pos:start="2513:53" pos:end="2513:56">insn</name></expr></argument>, <argument pos:start="2513:59" pos:end="2513:59"><expr pos:start="2513:59" pos:end="2513:59"><literal type="number" pos:start="2513:59" pos:end="2513:59">0</literal></expr></argument>, <argument pos:start="2513:62" pos:end="2513:62"><expr pos:start="2513:62" pos:end="2513:62"><literal type="number" pos:start="2513:62" pos:end="2513:62">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2515:33" pos:end="2515:54"><expr pos:start="2515:33" pos:end="2515:53"><call pos:start="2515:33" pos:end="2515:53"><name pos:start="2515:33" pos:end="2515:48">gen_movl_simm_T1</name><argument_list pos:start="2515:49" pos:end="2515:53">(<argument pos:start="2515:50" pos:end="2515:52"><expr pos:start="2515:50" pos:end="2515:52"><name pos:start="2515:50" pos:end="2515:52">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if>

                            <else pos:start="2519:29" pos:end="2525:29">else <block pos:start="2519:34" pos:end="2525:29">{<block_content pos:start="2521:33" pos:end="2523:53">

                                <expr_stmt pos:start="2521:33" pos:end="2521:63"><expr pos:start="2521:33" pos:end="2521:62"><name pos:start="2521:33" pos:end="2521:35">rs2</name> <operator pos:start="2521:37" pos:end="2521:37">=</operator> <call pos:start="2521:39" pos:end="2521:62"><name pos:start="2521:39" pos:end="2521:50">GET_FIELD_SP</name><argument_list pos:start="2521:51" pos:end="2521:62">(<argument pos:start="2521:52" pos:end="2521:55"><expr pos:start="2521:52" pos:end="2521:55"><name pos:start="2521:52" pos:end="2521:55">insn</name></expr></argument>, <argument pos:start="2521:58" pos:end="2521:58"><expr pos:start="2521:58" pos:end="2521:58"><literal type="number" pos:start="2521:58" pos:end="2521:58">0</literal></expr></argument>, <argument pos:start="2521:61" pos:end="2521:61"><expr pos:start="2521:61" pos:end="2521:61"><literal type="number" pos:start="2521:61" pos:end="2521:61">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2523:33" pos:end="2523:53"><expr pos:start="2523:33" pos:end="2523:52"><call pos:start="2523:33" pos:end="2523:52"><name pos:start="2523:33" pos:end="2523:47">gen_movl_reg_T1</name><argument_list pos:start="2523:48" pos:end="2523:52">(<argument pos:start="2523:49" pos:end="2523:51"><expr pos:start="2523:49" pos:end="2523:51"><name pos:start="2523:49" pos:end="2523:51">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <expr_stmt pos:start="2527:29" pos:end="2527:48"><expr pos:start="2527:29" pos:end="2527:47"><call pos:start="2527:29" pos:end="2527:47"><name pos:start="2527:29" pos:end="2527:43">gen_movl_reg_T0</name><argument_list pos:start="2527:44" pos:end="2527:47">(<argument pos:start="2527:45" pos:end="2527:46"><expr pos:start="2527:45" pos:end="2527:46"><name pos:start="2527:45" pos:end="2527:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2529:29" pos:end="2529:44"><expr pos:start="2529:29" pos:end="2529:43"><call pos:start="2529:29" pos:end="2529:43"><name pos:start="2529:29" pos:end="2529:41">gen_op_mov_cc</name><argument_list pos:start="2529:42" pos:end="2529:43">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2531:29" pos:end="2531:48"><expr pos:start="2531:29" pos:end="2531:47"><call pos:start="2531:29" pos:end="2531:47"><name pos:start="2531:29" pos:end="2531:43">gen_movl_T0_reg</name><argument_list pos:start="2531:44" pos:end="2531:47">(<argument pos:start="2531:45" pos:end="2531:46"><expr pos:start="2531:45" pos:end="2531:46"><name pos:start="2531:45" pos:end="2531:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="2533:29" pos:end="2533:34">break;</break>

                        </block_content>}</block>

<cpp:endif pos:start="2537:1" pos:end="2537:6">#<cpp:directive pos:start="2537:2" pos:end="2537:6">endif</cpp:directive></cpp:endif>

                    <default pos:start="2539:21" pos:end="2539:28">default:</default>

                        <goto pos:start="2541:25" pos:end="2541:42">goto <name pos:start="2541:30" pos:end="2541:41">illegal_insn</name>;</goto>

                    </block_content>}</block></switch>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="2547:15" pos:end="3343:13">else if <condition pos:start="2547:23" pos:end="2547:35">(<expr pos:start="2547:24" pos:end="2547:34"><name pos:start="2547:24" pos:end="2547:26">xop</name> <operator pos:start="2547:28" pos:end="2547:29">==</operator> <literal type="number" pos:start="2547:31" pos:end="2547:34">0x36</literal></expr>)</condition> <block pos:start="2547:37" pos:end="3343:13">{<block_content pos:start="2551:17" pos:end="3342:0"> <comment type="block" pos:start="2547:39" pos:end="2547:78">/* UltraSparc shutdown, VIS, V8 CPop1 */</comment>

<cpp:ifdef pos:start="2549:1" pos:end="2549:21">#<cpp:directive pos:start="2549:2" pos:end="2549:6">ifdef</cpp:directive> <name pos:start="2549:8" pos:end="2549:21">TARGET_SPARC64</name></cpp:ifdef>

                <decl_stmt pos:start="2551:17" pos:end="2551:52"><decl pos:start="2551:17" pos:end="2551:51"><type pos:start="2551:17" pos:end="2551:19"><name pos:start="2551:17" pos:end="2551:19">int</name></type> <name pos:start="2551:21" pos:end="2551:23">opf</name> <init pos:start="2551:25" pos:end="2551:51">= <expr pos:start="2551:27" pos:end="2551:51"><call pos:start="2551:27" pos:end="2551:51"><name pos:start="2551:27" pos:end="2551:38">GET_FIELD_SP</name><argument_list pos:start="2551:39" pos:end="2551:51">(<argument pos:start="2551:40" pos:end="2551:43"><expr pos:start="2551:40" pos:end="2551:43"><name pos:start="2551:40" pos:end="2551:43">insn</name></expr></argument>, <argument pos:start="2551:46" pos:end="2551:46"><expr pos:start="2551:46" pos:end="2551:46"><literal type="number" pos:start="2551:46" pos:end="2551:46">5</literal></expr></argument>, <argument pos:start="2551:49" pos:end="2551:50"><expr pos:start="2551:49" pos:end="2551:50"><literal type="number" pos:start="2551:49" pos:end="2551:50">13</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="2553:17" pos:end="2553:46"><expr pos:start="2553:17" pos:end="2553:45"><name pos:start="2553:17" pos:end="2553:19">rs1</name> <operator pos:start="2553:21" pos:end="2553:21">=</operator> <call pos:start="2553:23" pos:end="2553:45"><name pos:start="2553:23" pos:end="2553:31">GET_FIELD</name><argument_list pos:start="2553:32" pos:end="2553:45">(<argument pos:start="2553:33" pos:end="2553:36"><expr pos:start="2553:33" pos:end="2553:36"><name pos:start="2553:33" pos:end="2553:36">insn</name></expr></argument>, <argument pos:start="2553:39" pos:end="2553:40"><expr pos:start="2553:39" pos:end="2553:40"><literal type="number" pos:start="2553:39" pos:end="2553:40">13</literal></expr></argument>, <argument pos:start="2553:43" pos:end="2553:44"><expr pos:start="2553:43" pos:end="2553:44"><literal type="number" pos:start="2553:43" pos:end="2553:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2555:17" pos:end="2555:46"><expr pos:start="2555:17" pos:end="2555:45"><name pos:start="2555:17" pos:end="2555:19">rs2</name> <operator pos:start="2555:21" pos:end="2555:21">=</operator> <call pos:start="2555:23" pos:end="2555:45"><name pos:start="2555:23" pos:end="2555:31">GET_FIELD</name><argument_list pos:start="2555:32" pos:end="2555:45">(<argument pos:start="2555:33" pos:end="2555:36"><expr pos:start="2555:33" pos:end="2555:36"><name pos:start="2555:33" pos:end="2555:36">insn</name></expr></argument>, <argument pos:start="2555:39" pos:end="2555:40"><expr pos:start="2555:39" pos:end="2555:40"><literal type="number" pos:start="2555:39" pos:end="2555:40">27</literal></expr></argument>, <argument pos:start="2555:43" pos:end="2555:44"><expr pos:start="2555:43" pos:end="2555:44"><literal type="number" pos:start="2555:43" pos:end="2555:44">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="2557:17" pos:end="2559:34"><if pos:start="2557:17" pos:end="2559:34">if <condition pos:start="2557:20" pos:end="2557:41">(<expr pos:start="2557:21" pos:end="2557:40"><call pos:start="2557:21" pos:end="2557:40"><name pos:start="2557:21" pos:end="2557:36">gen_trap_ifnofpu</name><argument_list pos:start="2557:37" pos:end="2557:40">(<argument pos:start="2557:38" pos:end="2557:39"><expr pos:start="2557:38" pos:end="2557:39"><name pos:start="2557:38" pos:end="2557:39">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2559:21" pos:end="2559:34"><block_content pos:start="2559:21" pos:end="2559:34">

                    <goto pos:start="2559:21" pos:end="2559:34">goto <name pos:start="2559:26" pos:end="2559:33">jmp_insn</name>;</goto></block_content></block></if></if_stmt>



                <switch pos:start="2563:17" pos:end="3338:0">switch <condition pos:start="2563:24" pos:end="2563:28">(<expr pos:start="2563:25" pos:end="2563:27"><name pos:start="2563:25" pos:end="2563:27">opf</name></expr>)</condition> <block pos:start="2563:30" pos:end="3338:0">{<block_content pos:start="2565:17" pos:end="3333:38">

                <case pos:start="2565:17" pos:end="2565:27">case <expr pos:start="2565:22" pos:end="2565:26"><literal type="number" pos:start="2565:22" pos:end="2565:26">0x000</literal></expr>:</case> <comment type="block" pos:start="2565:29" pos:end="2565:47">/* VIS I edge8cc */</comment>

                <case pos:start="2567:17" pos:end="2567:27">case <expr pos:start="2567:22" pos:end="2567:26"><literal type="number" pos:start="2567:22" pos:end="2567:26">0x001</literal></expr>:</case> <comment type="block" pos:start="2567:29" pos:end="2567:47">/* VIS II edge8n */</comment>

                <case pos:start="2569:17" pos:end="2569:27">case <expr pos:start="2569:22" pos:end="2569:26"><literal type="number" pos:start="2569:22" pos:end="2569:26">0x002</literal></expr>:</case> <comment type="block" pos:start="2569:29" pos:end="2569:48">/* VIS I edge8lcc */</comment>

                <case pos:start="2571:17" pos:end="2571:27">case <expr pos:start="2571:22" pos:end="2571:26"><literal type="number" pos:start="2571:22" pos:end="2571:26">0x003</literal></expr>:</case> <comment type="block" pos:start="2571:29" pos:end="2571:48">/* VIS II edge8ln */</comment>

                <case pos:start="2573:17" pos:end="2573:27">case <expr pos:start="2573:22" pos:end="2573:26"><literal type="number" pos:start="2573:22" pos:end="2573:26">0x004</literal></expr>:</case> <comment type="block" pos:start="2573:29" pos:end="2573:48">/* VIS I edge16cc */</comment>

                <case pos:start="2575:17" pos:end="2575:27">case <expr pos:start="2575:22" pos:end="2575:26"><literal type="number" pos:start="2575:22" pos:end="2575:26">0x005</literal></expr>:</case> <comment type="block" pos:start="2575:29" pos:end="2575:48">/* VIS II edge16n */</comment>

                <case pos:start="2577:17" pos:end="2577:27">case <expr pos:start="2577:22" pos:end="2577:26"><literal type="number" pos:start="2577:22" pos:end="2577:26">0x006</literal></expr>:</case> <comment type="block" pos:start="2577:29" pos:end="2577:49">/* VIS I edge16lcc */</comment>

                <case pos:start="2579:17" pos:end="2579:27">case <expr pos:start="2579:22" pos:end="2579:26"><literal type="number" pos:start="2579:22" pos:end="2579:26">0x007</literal></expr>:</case> <comment type="block" pos:start="2579:29" pos:end="2579:49">/* VIS II edge16ln */</comment>

                <case pos:start="2581:17" pos:end="2581:27">case <expr pos:start="2581:22" pos:end="2581:26"><literal type="number" pos:start="2581:22" pos:end="2581:26">0x008</literal></expr>:</case> <comment type="block" pos:start="2581:29" pos:end="2581:48">/* VIS I edge32cc */</comment>

                <case pos:start="2583:17" pos:end="2583:27">case <expr pos:start="2583:22" pos:end="2583:26"><literal type="number" pos:start="2583:22" pos:end="2583:26">0x009</literal></expr>:</case> <comment type="block" pos:start="2583:29" pos:end="2583:48">/* VIS II edge32n */</comment>

                <case pos:start="2585:17" pos:end="2585:27">case <expr pos:start="2585:22" pos:end="2585:26"><literal type="number" pos:start="2585:22" pos:end="2585:26">0x00a</literal></expr>:</case> <comment type="block" pos:start="2585:29" pos:end="2585:49">/* VIS I edge32lcc */</comment>

                <case pos:start="2587:17" pos:end="2587:27">case <expr pos:start="2587:22" pos:end="2587:26"><literal type="number" pos:start="2587:22" pos:end="2587:26">0x00b</literal></expr>:</case> <comment type="block" pos:start="2587:29" pos:end="2587:49">/* VIS II edge32ln */</comment>

                    <comment type="line" pos:start="2589:21" pos:end="2589:26">// XXX</comment>

                    <goto pos:start="2591:21" pos:end="2591:38">goto <name pos:start="2591:26" pos:end="2591:37">illegal_insn</name>;</goto>

                <case pos:start="2593:17" pos:end="2593:27">case <expr pos:start="2593:22" pos:end="2593:26"><literal type="number" pos:start="2593:22" pos:end="2593:26">0x010</literal></expr>:</case> <comment type="block" pos:start="2593:29" pos:end="2593:46">/* VIS I array8 */</comment>

                    <expr_stmt pos:start="2595:21" pos:end="2595:41"><expr pos:start="2595:21" pos:end="2595:40"><call pos:start="2595:21" pos:end="2595:40"><name pos:start="2595:21" pos:end="2595:35">gen_movl_reg_T0</name><argument_list pos:start="2595:36" pos:end="2595:40">(<argument pos:start="2595:37" pos:end="2595:39"><expr pos:start="2595:37" pos:end="2595:39"><name pos:start="2595:37" pos:end="2595:39">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2597:21" pos:end="2597:41"><expr pos:start="2597:21" pos:end="2597:40"><call pos:start="2597:21" pos:end="2597:40"><name pos:start="2597:21" pos:end="2597:35">gen_movl_reg_T1</name><argument_list pos:start="2597:36" pos:end="2597:40">(<argument pos:start="2597:37" pos:end="2597:39"><expr pos:start="2597:37" pos:end="2597:39"><name pos:start="2597:37" pos:end="2597:39">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2599:21" pos:end="2599:36"><expr pos:start="2599:21" pos:end="2599:35"><call pos:start="2599:21" pos:end="2599:35"><name pos:start="2599:21" pos:end="2599:33">gen_op_array8</name><argument_list pos:start="2599:34" pos:end="2599:35">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2601:21" pos:end="2601:40"><expr pos:start="2601:21" pos:end="2601:39"><call pos:start="2601:21" pos:end="2601:39"><name pos:start="2601:21" pos:end="2601:35">gen_movl_T0_reg</name><argument_list pos:start="2601:36" pos:end="2601:39">(<argument pos:start="2601:37" pos:end="2601:38"><expr pos:start="2601:37" pos:end="2601:38"><name pos:start="2601:37" pos:end="2601:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2603:21" pos:end="2603:26">break;</break>

                <case pos:start="2605:17" pos:end="2605:27">case <expr pos:start="2605:22" pos:end="2605:26"><literal type="number" pos:start="2605:22" pos:end="2605:26">0x012</literal></expr>:</case> <comment type="block" pos:start="2605:29" pos:end="2605:47">/* VIS I array16 */</comment>

                    <expr_stmt pos:start="2607:21" pos:end="2607:41"><expr pos:start="2607:21" pos:end="2607:40"><call pos:start="2607:21" pos:end="2607:40"><name pos:start="2607:21" pos:end="2607:35">gen_movl_reg_T0</name><argument_list pos:start="2607:36" pos:end="2607:40">(<argument pos:start="2607:37" pos:end="2607:39"><expr pos:start="2607:37" pos:end="2607:39"><name pos:start="2607:37" pos:end="2607:39">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2609:21" pos:end="2609:41"><expr pos:start="2609:21" pos:end="2609:40"><call pos:start="2609:21" pos:end="2609:40"><name pos:start="2609:21" pos:end="2609:35">gen_movl_reg_T1</name><argument_list pos:start="2609:36" pos:end="2609:40">(<argument pos:start="2609:37" pos:end="2609:39"><expr pos:start="2609:37" pos:end="2609:39"><name pos:start="2609:37" pos:end="2609:39">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2611:21" pos:end="2611:37"><expr pos:start="2611:21" pos:end="2611:36"><call pos:start="2611:21" pos:end="2611:36"><name pos:start="2611:21" pos:end="2611:34">gen_op_array16</name><argument_list pos:start="2611:35" pos:end="2611:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2613:21" pos:end="2613:40"><expr pos:start="2613:21" pos:end="2613:39"><call pos:start="2613:21" pos:end="2613:39"><name pos:start="2613:21" pos:end="2613:35">gen_movl_T0_reg</name><argument_list pos:start="2613:36" pos:end="2613:39">(<argument pos:start="2613:37" pos:end="2613:38"><expr pos:start="2613:37" pos:end="2613:38"><name pos:start="2613:37" pos:end="2613:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2615:21" pos:end="2615:26">break;</break>

                <case pos:start="2617:17" pos:end="2617:27">case <expr pos:start="2617:22" pos:end="2617:26"><literal type="number" pos:start="2617:22" pos:end="2617:26">0x014</literal></expr>:</case> <comment type="block" pos:start="2617:29" pos:end="2617:47">/* VIS I array32 */</comment>

                    <expr_stmt pos:start="2619:21" pos:end="2619:41"><expr pos:start="2619:21" pos:end="2619:40"><call pos:start="2619:21" pos:end="2619:40"><name pos:start="2619:21" pos:end="2619:35">gen_movl_reg_T0</name><argument_list pos:start="2619:36" pos:end="2619:40">(<argument pos:start="2619:37" pos:end="2619:39"><expr pos:start="2619:37" pos:end="2619:39"><name pos:start="2619:37" pos:end="2619:39">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2621:21" pos:end="2621:41"><expr pos:start="2621:21" pos:end="2621:40"><call pos:start="2621:21" pos:end="2621:40"><name pos:start="2621:21" pos:end="2621:35">gen_movl_reg_T1</name><argument_list pos:start="2621:36" pos:end="2621:40">(<argument pos:start="2621:37" pos:end="2621:39"><expr pos:start="2621:37" pos:end="2621:39"><name pos:start="2621:37" pos:end="2621:39">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2623:21" pos:end="2623:37"><expr pos:start="2623:21" pos:end="2623:36"><call pos:start="2623:21" pos:end="2623:36"><name pos:start="2623:21" pos:end="2623:34">gen_op_array32</name><argument_list pos:start="2623:35" pos:end="2623:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2625:21" pos:end="2625:40"><expr pos:start="2625:21" pos:end="2625:39"><call pos:start="2625:21" pos:end="2625:39"><name pos:start="2625:21" pos:end="2625:35">gen_movl_T0_reg</name><argument_list pos:start="2625:36" pos:end="2625:39">(<argument pos:start="2625:37" pos:end="2625:38"><expr pos:start="2625:37" pos:end="2625:38"><name pos:start="2625:37" pos:end="2625:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2627:21" pos:end="2627:26">break;</break>

                <case pos:start="2629:17" pos:end="2629:27">case <expr pos:start="2629:22" pos:end="2629:26"><literal type="number" pos:start="2629:22" pos:end="2629:26">0x018</literal></expr>:</case> <comment type="block" pos:start="2629:29" pos:end="2629:49">/* VIS I alignaddr */</comment>

                    <expr_stmt pos:start="2631:21" pos:end="2631:41"><expr pos:start="2631:21" pos:end="2631:40"><call pos:start="2631:21" pos:end="2631:40"><name pos:start="2631:21" pos:end="2631:35">gen_movl_reg_T0</name><argument_list pos:start="2631:36" pos:end="2631:40">(<argument pos:start="2631:37" pos:end="2631:39"><expr pos:start="2631:37" pos:end="2631:39"><name pos:start="2631:37" pos:end="2631:39">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2633:21" pos:end="2633:41"><expr pos:start="2633:21" pos:end="2633:40"><call pos:start="2633:21" pos:end="2633:40"><name pos:start="2633:21" pos:end="2633:35">gen_movl_reg_T1</name><argument_list pos:start="2633:36" pos:end="2633:40">(<argument pos:start="2633:37" pos:end="2633:39"><expr pos:start="2633:37" pos:end="2633:39"><name pos:start="2633:37" pos:end="2633:39">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2635:21" pos:end="2635:39"><expr pos:start="2635:21" pos:end="2635:38"><call pos:start="2635:21" pos:end="2635:38"><name pos:start="2635:21" pos:end="2635:36">gen_op_alignaddr</name><argument_list pos:start="2635:37" pos:end="2635:38">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2637:21" pos:end="2637:40"><expr pos:start="2637:21" pos:end="2637:39"><call pos:start="2637:21" pos:end="2637:39"><name pos:start="2637:21" pos:end="2637:35">gen_movl_T0_reg</name><argument_list pos:start="2637:36" pos:end="2637:39">(<argument pos:start="2637:37" pos:end="2637:38"><expr pos:start="2637:37" pos:end="2637:38"><name pos:start="2637:37" pos:end="2637:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2639:21" pos:end="2639:26">break;</break>

                <case pos:start="2641:17" pos:end="2641:27">case <expr pos:start="2641:22" pos:end="2641:26"><literal type="number" pos:start="2641:22" pos:end="2641:26">0x019</literal></expr>:</case> <comment type="block" pos:start="2641:29" pos:end="2641:46">/* VIS II bmask */</comment>

                <case pos:start="2643:17" pos:end="2643:27">case <expr pos:start="2643:22" pos:end="2643:26"><literal type="number" pos:start="2643:22" pos:end="2643:26">0x01a</literal></expr>:</case> <comment type="block" pos:start="2643:29" pos:end="2643:50">/* VIS I alignaddrl */</comment>

                    <comment type="line" pos:start="2645:21" pos:end="2645:26">// XXX</comment>

                    <goto pos:start="2647:21" pos:end="2647:38">goto <name pos:start="2647:26" pos:end="2647:37">illegal_insn</name>;</goto>

                <case pos:start="2649:17" pos:end="2649:27">case <expr pos:start="2649:22" pos:end="2649:26"><literal type="number" pos:start="2649:22" pos:end="2649:26">0x020</literal></expr>:</case> <comment type="block" pos:start="2649:29" pos:end="2649:48">/* VIS I fcmple16 */</comment>

                    <expr_stmt pos:start="2651:21" pos:end="2651:45"><expr pos:start="2651:21" pos:end="2651:44"><call pos:start="2651:21" pos:end="2651:44"><name pos:start="2651:21" pos:end="2651:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2651:40" pos:end="2651:44">(<argument pos:start="2651:41" pos:end="2651:43"><expr pos:start="2651:41" pos:end="2651:43"><name pos:start="2651:41" pos:end="2651:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2653:21" pos:end="2653:45"><expr pos:start="2653:21" pos:end="2653:44"><call pos:start="2653:21" pos:end="2653:44"><name pos:start="2653:21" pos:end="2653:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2653:40" pos:end="2653:44">(<argument pos:start="2653:41" pos:end="2653:43"><expr pos:start="2653:41" pos:end="2653:43"><name pos:start="2653:41" pos:end="2653:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2655:21" pos:end="2655:38"><expr pos:start="2655:21" pos:end="2655:37"><call pos:start="2655:21" pos:end="2655:37"><name pos:start="2655:21" pos:end="2655:35">gen_op_fcmple16</name><argument_list pos:start="2655:36" pos:end="2655:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2657:21" pos:end="2657:45"><expr pos:start="2657:21" pos:end="2657:44"><call pos:start="2657:21" pos:end="2657:44"><name pos:start="2657:21" pos:end="2657:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2657:41" pos:end="2657:44">(<argument pos:start="2657:42" pos:end="2657:43"><expr pos:start="2657:42" pos:end="2657:43"><name pos:start="2657:42" pos:end="2657:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2659:21" pos:end="2659:26">break;</break>

                <case pos:start="2661:17" pos:end="2661:27">case <expr pos:start="2661:22" pos:end="2661:26"><literal type="number" pos:start="2661:22" pos:end="2661:26">0x022</literal></expr>:</case> <comment type="block" pos:start="2661:29" pos:end="2661:48">/* VIS I fcmpne16 */</comment>

                    <expr_stmt pos:start="2663:21" pos:end="2663:45"><expr pos:start="2663:21" pos:end="2663:44"><call pos:start="2663:21" pos:end="2663:44"><name pos:start="2663:21" pos:end="2663:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2663:40" pos:end="2663:44">(<argument pos:start="2663:41" pos:end="2663:43"><expr pos:start="2663:41" pos:end="2663:43"><name pos:start="2663:41" pos:end="2663:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2665:21" pos:end="2665:45"><expr pos:start="2665:21" pos:end="2665:44"><call pos:start="2665:21" pos:end="2665:44"><name pos:start="2665:21" pos:end="2665:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2665:40" pos:end="2665:44">(<argument pos:start="2665:41" pos:end="2665:43"><expr pos:start="2665:41" pos:end="2665:43"><name pos:start="2665:41" pos:end="2665:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2667:21" pos:end="2667:38"><expr pos:start="2667:21" pos:end="2667:37"><call pos:start="2667:21" pos:end="2667:37"><name pos:start="2667:21" pos:end="2667:35">gen_op_fcmpne16</name><argument_list pos:start="2667:36" pos:end="2667:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2669:21" pos:end="2669:45"><expr pos:start="2669:21" pos:end="2669:44"><call pos:start="2669:21" pos:end="2669:44"><name pos:start="2669:21" pos:end="2669:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2669:41" pos:end="2669:44">(<argument pos:start="2669:42" pos:end="2669:43"><expr pos:start="2669:42" pos:end="2669:43"><name pos:start="2669:42" pos:end="2669:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2671:21" pos:end="2671:26">break;</break>

                <case pos:start="2673:17" pos:end="2673:27">case <expr pos:start="2673:22" pos:end="2673:26"><literal type="number" pos:start="2673:22" pos:end="2673:26">0x024</literal></expr>:</case> <comment type="block" pos:start="2673:29" pos:end="2673:48">/* VIS I fcmple32 */</comment>

                    <expr_stmt pos:start="2675:21" pos:end="2675:45"><expr pos:start="2675:21" pos:end="2675:44"><call pos:start="2675:21" pos:end="2675:44"><name pos:start="2675:21" pos:end="2675:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2675:40" pos:end="2675:44">(<argument pos:start="2675:41" pos:end="2675:43"><expr pos:start="2675:41" pos:end="2675:43"><name pos:start="2675:41" pos:end="2675:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2677:21" pos:end="2677:45"><expr pos:start="2677:21" pos:end="2677:44"><call pos:start="2677:21" pos:end="2677:44"><name pos:start="2677:21" pos:end="2677:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2677:40" pos:end="2677:44">(<argument pos:start="2677:41" pos:end="2677:43"><expr pos:start="2677:41" pos:end="2677:43"><name pos:start="2677:41" pos:end="2677:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2679:21" pos:end="2679:38"><expr pos:start="2679:21" pos:end="2679:37"><call pos:start="2679:21" pos:end="2679:37"><name pos:start="2679:21" pos:end="2679:35">gen_op_fcmple32</name><argument_list pos:start="2679:36" pos:end="2679:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2681:21" pos:end="2681:45"><expr pos:start="2681:21" pos:end="2681:44"><call pos:start="2681:21" pos:end="2681:44"><name pos:start="2681:21" pos:end="2681:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2681:41" pos:end="2681:44">(<argument pos:start="2681:42" pos:end="2681:43"><expr pos:start="2681:42" pos:end="2681:43"><name pos:start="2681:42" pos:end="2681:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2683:21" pos:end="2683:26">break;</break>

                <case pos:start="2685:17" pos:end="2685:27">case <expr pos:start="2685:22" pos:end="2685:26"><literal type="number" pos:start="2685:22" pos:end="2685:26">0x026</literal></expr>:</case> <comment type="block" pos:start="2685:29" pos:end="2685:48">/* VIS I fcmpne32 */</comment>

                    <expr_stmt pos:start="2687:21" pos:end="2687:45"><expr pos:start="2687:21" pos:end="2687:44"><call pos:start="2687:21" pos:end="2687:44"><name pos:start="2687:21" pos:end="2687:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2687:40" pos:end="2687:44">(<argument pos:start="2687:41" pos:end="2687:43"><expr pos:start="2687:41" pos:end="2687:43"><name pos:start="2687:41" pos:end="2687:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2689:21" pos:end="2689:45"><expr pos:start="2689:21" pos:end="2689:44"><call pos:start="2689:21" pos:end="2689:44"><name pos:start="2689:21" pos:end="2689:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2689:40" pos:end="2689:44">(<argument pos:start="2689:41" pos:end="2689:43"><expr pos:start="2689:41" pos:end="2689:43"><name pos:start="2689:41" pos:end="2689:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2691:21" pos:end="2691:38"><expr pos:start="2691:21" pos:end="2691:37"><call pos:start="2691:21" pos:end="2691:37"><name pos:start="2691:21" pos:end="2691:35">gen_op_fcmpne32</name><argument_list pos:start="2691:36" pos:end="2691:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2693:21" pos:end="2693:45"><expr pos:start="2693:21" pos:end="2693:44"><call pos:start="2693:21" pos:end="2693:44"><name pos:start="2693:21" pos:end="2693:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2693:41" pos:end="2693:44">(<argument pos:start="2693:42" pos:end="2693:43"><expr pos:start="2693:42" pos:end="2693:43"><name pos:start="2693:42" pos:end="2693:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2695:21" pos:end="2695:26">break;</break>

                <case pos:start="2697:17" pos:end="2697:27">case <expr pos:start="2697:22" pos:end="2697:26"><literal type="number" pos:start="2697:22" pos:end="2697:26">0x028</literal></expr>:</case> <comment type="block" pos:start="2697:29" pos:end="2697:48">/* VIS I fcmpgt16 */</comment>

                    <expr_stmt pos:start="2699:21" pos:end="2699:45"><expr pos:start="2699:21" pos:end="2699:44"><call pos:start="2699:21" pos:end="2699:44"><name pos:start="2699:21" pos:end="2699:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2699:40" pos:end="2699:44">(<argument pos:start="2699:41" pos:end="2699:43"><expr pos:start="2699:41" pos:end="2699:43"><name pos:start="2699:41" pos:end="2699:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2701:21" pos:end="2701:45"><expr pos:start="2701:21" pos:end="2701:44"><call pos:start="2701:21" pos:end="2701:44"><name pos:start="2701:21" pos:end="2701:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2701:40" pos:end="2701:44">(<argument pos:start="2701:41" pos:end="2701:43"><expr pos:start="2701:41" pos:end="2701:43"><name pos:start="2701:41" pos:end="2701:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2703:21" pos:end="2703:38"><expr pos:start="2703:21" pos:end="2703:37"><call pos:start="2703:21" pos:end="2703:37"><name pos:start="2703:21" pos:end="2703:35">gen_op_fcmpgt16</name><argument_list pos:start="2703:36" pos:end="2703:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2705:21" pos:end="2705:45"><expr pos:start="2705:21" pos:end="2705:44"><call pos:start="2705:21" pos:end="2705:44"><name pos:start="2705:21" pos:end="2705:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2705:41" pos:end="2705:44">(<argument pos:start="2705:42" pos:end="2705:43"><expr pos:start="2705:42" pos:end="2705:43"><name pos:start="2705:42" pos:end="2705:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2707:21" pos:end="2707:26">break;</break>

                <case pos:start="2709:17" pos:end="2709:27">case <expr pos:start="2709:22" pos:end="2709:26"><literal type="number" pos:start="2709:22" pos:end="2709:26">0x02a</literal></expr>:</case> <comment type="block" pos:start="2709:29" pos:end="2709:48">/* VIS I fcmpeq16 */</comment>

                    <expr_stmt pos:start="2711:21" pos:end="2711:45"><expr pos:start="2711:21" pos:end="2711:44"><call pos:start="2711:21" pos:end="2711:44"><name pos:start="2711:21" pos:end="2711:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2711:40" pos:end="2711:44">(<argument pos:start="2711:41" pos:end="2711:43"><expr pos:start="2711:41" pos:end="2711:43"><name pos:start="2711:41" pos:end="2711:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2713:21" pos:end="2713:45"><expr pos:start="2713:21" pos:end="2713:44"><call pos:start="2713:21" pos:end="2713:44"><name pos:start="2713:21" pos:end="2713:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2713:40" pos:end="2713:44">(<argument pos:start="2713:41" pos:end="2713:43"><expr pos:start="2713:41" pos:end="2713:43"><name pos:start="2713:41" pos:end="2713:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2715:21" pos:end="2715:38"><expr pos:start="2715:21" pos:end="2715:37"><call pos:start="2715:21" pos:end="2715:37"><name pos:start="2715:21" pos:end="2715:35">gen_op_fcmpeq16</name><argument_list pos:start="2715:36" pos:end="2715:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2717:21" pos:end="2717:45"><expr pos:start="2717:21" pos:end="2717:44"><call pos:start="2717:21" pos:end="2717:44"><name pos:start="2717:21" pos:end="2717:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2717:41" pos:end="2717:44">(<argument pos:start="2717:42" pos:end="2717:43"><expr pos:start="2717:42" pos:end="2717:43"><name pos:start="2717:42" pos:end="2717:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2719:21" pos:end="2719:26">break;</break>

                <case pos:start="2721:17" pos:end="2721:27">case <expr pos:start="2721:22" pos:end="2721:26"><literal type="number" pos:start="2721:22" pos:end="2721:26">0x02c</literal></expr>:</case> <comment type="block" pos:start="2721:29" pos:end="2721:48">/* VIS I fcmpgt32 */</comment>

                    <expr_stmt pos:start="2723:21" pos:end="2723:45"><expr pos:start="2723:21" pos:end="2723:44"><call pos:start="2723:21" pos:end="2723:44"><name pos:start="2723:21" pos:end="2723:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2723:40" pos:end="2723:44">(<argument pos:start="2723:41" pos:end="2723:43"><expr pos:start="2723:41" pos:end="2723:43"><name pos:start="2723:41" pos:end="2723:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2725:21" pos:end="2725:45"><expr pos:start="2725:21" pos:end="2725:44"><call pos:start="2725:21" pos:end="2725:44"><name pos:start="2725:21" pos:end="2725:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2725:40" pos:end="2725:44">(<argument pos:start="2725:41" pos:end="2725:43"><expr pos:start="2725:41" pos:end="2725:43"><name pos:start="2725:41" pos:end="2725:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2727:21" pos:end="2727:38"><expr pos:start="2727:21" pos:end="2727:37"><call pos:start="2727:21" pos:end="2727:37"><name pos:start="2727:21" pos:end="2727:35">gen_op_fcmpgt32</name><argument_list pos:start="2727:36" pos:end="2727:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2729:21" pos:end="2729:45"><expr pos:start="2729:21" pos:end="2729:44"><call pos:start="2729:21" pos:end="2729:44"><name pos:start="2729:21" pos:end="2729:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2729:41" pos:end="2729:44">(<argument pos:start="2729:42" pos:end="2729:43"><expr pos:start="2729:42" pos:end="2729:43"><name pos:start="2729:42" pos:end="2729:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2731:21" pos:end="2731:26">break;</break>

                <case pos:start="2733:17" pos:end="2733:27">case <expr pos:start="2733:22" pos:end="2733:26"><literal type="number" pos:start="2733:22" pos:end="2733:26">0x02e</literal></expr>:</case> <comment type="block" pos:start="2733:29" pos:end="2733:48">/* VIS I fcmpeq32 */</comment>

                    <expr_stmt pos:start="2735:21" pos:end="2735:45"><expr pos:start="2735:21" pos:end="2735:44"><call pos:start="2735:21" pos:end="2735:44"><name pos:start="2735:21" pos:end="2735:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2735:40" pos:end="2735:44">(<argument pos:start="2735:41" pos:end="2735:43"><expr pos:start="2735:41" pos:end="2735:43"><name pos:start="2735:41" pos:end="2735:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2737:21" pos:end="2737:45"><expr pos:start="2737:21" pos:end="2737:44"><call pos:start="2737:21" pos:end="2737:44"><name pos:start="2737:21" pos:end="2737:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2737:40" pos:end="2737:44">(<argument pos:start="2737:41" pos:end="2737:43"><expr pos:start="2737:41" pos:end="2737:43"><name pos:start="2737:41" pos:end="2737:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2739:21" pos:end="2739:38"><expr pos:start="2739:21" pos:end="2739:37"><call pos:start="2739:21" pos:end="2739:37"><name pos:start="2739:21" pos:end="2739:35">gen_op_fcmpeq32</name><argument_list pos:start="2739:36" pos:end="2739:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2741:21" pos:end="2741:45"><expr pos:start="2741:21" pos:end="2741:44"><call pos:start="2741:21" pos:end="2741:44"><name pos:start="2741:21" pos:end="2741:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2741:41" pos:end="2741:44">(<argument pos:start="2741:42" pos:end="2741:43"><expr pos:start="2741:42" pos:end="2741:43"><name pos:start="2741:42" pos:end="2741:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2743:21" pos:end="2743:26">break;</break>

                <case pos:start="2745:17" pos:end="2745:27">case <expr pos:start="2745:22" pos:end="2745:26"><literal type="number" pos:start="2745:22" pos:end="2745:26">0x031</literal></expr>:</case> <comment type="block" pos:start="2745:29" pos:end="2745:48">/* VIS I fmul8x16 */</comment>

                    <expr_stmt pos:start="2747:21" pos:end="2747:45"><expr pos:start="2747:21" pos:end="2747:44"><call pos:start="2747:21" pos:end="2747:44"><name pos:start="2747:21" pos:end="2747:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2747:40" pos:end="2747:44">(<argument pos:start="2747:41" pos:end="2747:43"><expr pos:start="2747:41" pos:end="2747:43"><name pos:start="2747:41" pos:end="2747:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2749:21" pos:end="2749:45"><expr pos:start="2749:21" pos:end="2749:44"><call pos:start="2749:21" pos:end="2749:44"><name pos:start="2749:21" pos:end="2749:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2749:40" pos:end="2749:44">(<argument pos:start="2749:41" pos:end="2749:43"><expr pos:start="2749:41" pos:end="2749:43"><name pos:start="2749:41" pos:end="2749:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2751:21" pos:end="2751:38"><expr pos:start="2751:21" pos:end="2751:37"><call pos:start="2751:21" pos:end="2751:37"><name pos:start="2751:21" pos:end="2751:35">gen_op_fmul8x16</name><argument_list pos:start="2751:36" pos:end="2751:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2753:21" pos:end="2753:45"><expr pos:start="2753:21" pos:end="2753:44"><call pos:start="2753:21" pos:end="2753:44"><name pos:start="2753:21" pos:end="2753:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2753:41" pos:end="2753:44">(<argument pos:start="2753:42" pos:end="2753:43"><expr pos:start="2753:42" pos:end="2753:43"><name pos:start="2753:42" pos:end="2753:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2755:21" pos:end="2755:26">break;</break>

                <case pos:start="2757:17" pos:end="2757:27">case <expr pos:start="2757:22" pos:end="2757:26"><literal type="number" pos:start="2757:22" pos:end="2757:26">0x033</literal></expr>:</case> <comment type="block" pos:start="2757:29" pos:end="2757:50">/* VIS I fmul8x16au */</comment>

                    <expr_stmt pos:start="2759:21" pos:end="2759:45"><expr pos:start="2759:21" pos:end="2759:44"><call pos:start="2759:21" pos:end="2759:44"><name pos:start="2759:21" pos:end="2759:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2759:40" pos:end="2759:44">(<argument pos:start="2759:41" pos:end="2759:43"><expr pos:start="2759:41" pos:end="2759:43"><name pos:start="2759:41" pos:end="2759:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2761:21" pos:end="2761:45"><expr pos:start="2761:21" pos:end="2761:44"><call pos:start="2761:21" pos:end="2761:44"><name pos:start="2761:21" pos:end="2761:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2761:40" pos:end="2761:44">(<argument pos:start="2761:41" pos:end="2761:43"><expr pos:start="2761:41" pos:end="2761:43"><name pos:start="2761:41" pos:end="2761:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2763:21" pos:end="2763:40"><expr pos:start="2763:21" pos:end="2763:39"><call pos:start="2763:21" pos:end="2763:39"><name pos:start="2763:21" pos:end="2763:37">gen_op_fmul8x16au</name><argument_list pos:start="2763:38" pos:end="2763:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2765:21" pos:end="2765:45"><expr pos:start="2765:21" pos:end="2765:44"><call pos:start="2765:21" pos:end="2765:44"><name pos:start="2765:21" pos:end="2765:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2765:41" pos:end="2765:44">(<argument pos:start="2765:42" pos:end="2765:43"><expr pos:start="2765:42" pos:end="2765:43"><name pos:start="2765:42" pos:end="2765:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2767:21" pos:end="2767:26">break;</break>

                <case pos:start="2769:17" pos:end="2769:27">case <expr pos:start="2769:22" pos:end="2769:26"><literal type="number" pos:start="2769:22" pos:end="2769:26">0x035</literal></expr>:</case> <comment type="block" pos:start="2769:29" pos:end="2769:50">/* VIS I fmul8x16al */</comment>

                    <expr_stmt pos:start="2771:21" pos:end="2771:45"><expr pos:start="2771:21" pos:end="2771:44"><call pos:start="2771:21" pos:end="2771:44"><name pos:start="2771:21" pos:end="2771:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2771:40" pos:end="2771:44">(<argument pos:start="2771:41" pos:end="2771:43"><expr pos:start="2771:41" pos:end="2771:43"><name pos:start="2771:41" pos:end="2771:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2773:21" pos:end="2773:45"><expr pos:start="2773:21" pos:end="2773:44"><call pos:start="2773:21" pos:end="2773:44"><name pos:start="2773:21" pos:end="2773:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2773:40" pos:end="2773:44">(<argument pos:start="2773:41" pos:end="2773:43"><expr pos:start="2773:41" pos:end="2773:43"><name pos:start="2773:41" pos:end="2773:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2775:21" pos:end="2775:40"><expr pos:start="2775:21" pos:end="2775:39"><call pos:start="2775:21" pos:end="2775:39"><name pos:start="2775:21" pos:end="2775:37">gen_op_fmul8x16al</name><argument_list pos:start="2775:38" pos:end="2775:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2777:21" pos:end="2777:45"><expr pos:start="2777:21" pos:end="2777:44"><call pos:start="2777:21" pos:end="2777:44"><name pos:start="2777:21" pos:end="2777:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2777:41" pos:end="2777:44">(<argument pos:start="2777:42" pos:end="2777:43"><expr pos:start="2777:42" pos:end="2777:43"><name pos:start="2777:42" pos:end="2777:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2779:21" pos:end="2779:26">break;</break>

                <case pos:start="2781:17" pos:end="2781:27">case <expr pos:start="2781:22" pos:end="2781:26"><literal type="number" pos:start="2781:22" pos:end="2781:26">0x036</literal></expr>:</case> <comment type="block" pos:start="2781:29" pos:end="2781:50">/* VIS I fmul8sux16 */</comment>

                    <expr_stmt pos:start="2783:21" pos:end="2783:45"><expr pos:start="2783:21" pos:end="2783:44"><call pos:start="2783:21" pos:end="2783:44"><name pos:start="2783:21" pos:end="2783:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2783:40" pos:end="2783:44">(<argument pos:start="2783:41" pos:end="2783:43"><expr pos:start="2783:41" pos:end="2783:43"><name pos:start="2783:41" pos:end="2783:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2785:21" pos:end="2785:45"><expr pos:start="2785:21" pos:end="2785:44"><call pos:start="2785:21" pos:end="2785:44"><name pos:start="2785:21" pos:end="2785:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2785:40" pos:end="2785:44">(<argument pos:start="2785:41" pos:end="2785:43"><expr pos:start="2785:41" pos:end="2785:43"><name pos:start="2785:41" pos:end="2785:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2787:21" pos:end="2787:40"><expr pos:start="2787:21" pos:end="2787:39"><call pos:start="2787:21" pos:end="2787:39"><name pos:start="2787:21" pos:end="2787:37">gen_op_fmul8sux16</name><argument_list pos:start="2787:38" pos:end="2787:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2789:21" pos:end="2789:45"><expr pos:start="2789:21" pos:end="2789:44"><call pos:start="2789:21" pos:end="2789:44"><name pos:start="2789:21" pos:end="2789:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2789:41" pos:end="2789:44">(<argument pos:start="2789:42" pos:end="2789:43"><expr pos:start="2789:42" pos:end="2789:43"><name pos:start="2789:42" pos:end="2789:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2791:21" pos:end="2791:26">break;</break>

                <case pos:start="2793:17" pos:end="2793:27">case <expr pos:start="2793:22" pos:end="2793:26"><literal type="number" pos:start="2793:22" pos:end="2793:26">0x037</literal></expr>:</case> <comment type="block" pos:start="2793:29" pos:end="2793:50">/* VIS I fmul8ulx16 */</comment>

                    <expr_stmt pos:start="2795:21" pos:end="2795:45"><expr pos:start="2795:21" pos:end="2795:44"><call pos:start="2795:21" pos:end="2795:44"><name pos:start="2795:21" pos:end="2795:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2795:40" pos:end="2795:44">(<argument pos:start="2795:41" pos:end="2795:43"><expr pos:start="2795:41" pos:end="2795:43"><name pos:start="2795:41" pos:end="2795:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2797:21" pos:end="2797:45"><expr pos:start="2797:21" pos:end="2797:44"><call pos:start="2797:21" pos:end="2797:44"><name pos:start="2797:21" pos:end="2797:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2797:40" pos:end="2797:44">(<argument pos:start="2797:41" pos:end="2797:43"><expr pos:start="2797:41" pos:end="2797:43"><name pos:start="2797:41" pos:end="2797:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2799:21" pos:end="2799:40"><expr pos:start="2799:21" pos:end="2799:39"><call pos:start="2799:21" pos:end="2799:39"><name pos:start="2799:21" pos:end="2799:37">gen_op_fmul8ulx16</name><argument_list pos:start="2799:38" pos:end="2799:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2801:21" pos:end="2801:45"><expr pos:start="2801:21" pos:end="2801:44"><call pos:start="2801:21" pos:end="2801:44"><name pos:start="2801:21" pos:end="2801:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2801:41" pos:end="2801:44">(<argument pos:start="2801:42" pos:end="2801:43"><expr pos:start="2801:42" pos:end="2801:43"><name pos:start="2801:42" pos:end="2801:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2803:21" pos:end="2803:26">break;</break>

                <case pos:start="2805:17" pos:end="2805:27">case <expr pos:start="2805:22" pos:end="2805:26"><literal type="number" pos:start="2805:22" pos:end="2805:26">0x038</literal></expr>:</case> <comment type="block" pos:start="2805:29" pos:end="2805:51">/* VIS I fmuld8sux16 */</comment>

                    <expr_stmt pos:start="2807:21" pos:end="2807:45"><expr pos:start="2807:21" pos:end="2807:44"><call pos:start="2807:21" pos:end="2807:44"><name pos:start="2807:21" pos:end="2807:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2807:40" pos:end="2807:44">(<argument pos:start="2807:41" pos:end="2807:43"><expr pos:start="2807:41" pos:end="2807:43"><name pos:start="2807:41" pos:end="2807:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2809:21" pos:end="2809:45"><expr pos:start="2809:21" pos:end="2809:44"><call pos:start="2809:21" pos:end="2809:44"><name pos:start="2809:21" pos:end="2809:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2809:40" pos:end="2809:44">(<argument pos:start="2809:41" pos:end="2809:43"><expr pos:start="2809:41" pos:end="2809:43"><name pos:start="2809:41" pos:end="2809:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2811:21" pos:end="2811:41"><expr pos:start="2811:21" pos:end="2811:40"><call pos:start="2811:21" pos:end="2811:40"><name pos:start="2811:21" pos:end="2811:38">gen_op_fmuld8sux16</name><argument_list pos:start="2811:39" pos:end="2811:40">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2813:21" pos:end="2813:45"><expr pos:start="2813:21" pos:end="2813:44"><call pos:start="2813:21" pos:end="2813:44"><name pos:start="2813:21" pos:end="2813:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2813:41" pos:end="2813:44">(<argument pos:start="2813:42" pos:end="2813:43"><expr pos:start="2813:42" pos:end="2813:43"><name pos:start="2813:42" pos:end="2813:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2815:21" pos:end="2815:26">break;</break>

                <case pos:start="2817:17" pos:end="2817:27">case <expr pos:start="2817:22" pos:end="2817:26"><literal type="number" pos:start="2817:22" pos:end="2817:26">0x039</literal></expr>:</case> <comment type="block" pos:start="2817:29" pos:end="2817:51">/* VIS I fmuld8ulx16 */</comment>

                    <expr_stmt pos:start="2819:21" pos:end="2819:45"><expr pos:start="2819:21" pos:end="2819:44"><call pos:start="2819:21" pos:end="2819:44"><name pos:start="2819:21" pos:end="2819:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2819:40" pos:end="2819:44">(<argument pos:start="2819:41" pos:end="2819:43"><expr pos:start="2819:41" pos:end="2819:43"><name pos:start="2819:41" pos:end="2819:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2821:21" pos:end="2821:45"><expr pos:start="2821:21" pos:end="2821:44"><call pos:start="2821:21" pos:end="2821:44"><name pos:start="2821:21" pos:end="2821:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2821:40" pos:end="2821:44">(<argument pos:start="2821:41" pos:end="2821:43"><expr pos:start="2821:41" pos:end="2821:43"><name pos:start="2821:41" pos:end="2821:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2823:21" pos:end="2823:41"><expr pos:start="2823:21" pos:end="2823:40"><call pos:start="2823:21" pos:end="2823:40"><name pos:start="2823:21" pos:end="2823:38">gen_op_fmuld8ulx16</name><argument_list pos:start="2823:39" pos:end="2823:40">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2825:21" pos:end="2825:45"><expr pos:start="2825:21" pos:end="2825:44"><call pos:start="2825:21" pos:end="2825:44"><name pos:start="2825:21" pos:end="2825:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2825:41" pos:end="2825:44">(<argument pos:start="2825:42" pos:end="2825:43"><expr pos:start="2825:42" pos:end="2825:43"><name pos:start="2825:42" pos:end="2825:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2827:21" pos:end="2827:26">break;</break>

                <case pos:start="2829:17" pos:end="2829:27">case <expr pos:start="2829:22" pos:end="2829:26"><literal type="number" pos:start="2829:22" pos:end="2829:26">0x03a</literal></expr>:</case> <comment type="block" pos:start="2829:29" pos:end="2829:47">/* VIS I fpack32 */</comment>

                <case pos:start="2831:17" pos:end="2831:27">case <expr pos:start="2831:22" pos:end="2831:26"><literal type="number" pos:start="2831:22" pos:end="2831:26">0x03b</literal></expr>:</case> <comment type="block" pos:start="2831:29" pos:end="2831:47">/* VIS I fpack16 */</comment>

                <case pos:start="2833:17" pos:end="2833:27">case <expr pos:start="2833:22" pos:end="2833:26"><literal type="number" pos:start="2833:22" pos:end="2833:26">0x03d</literal></expr>:</case> <comment type="block" pos:start="2833:29" pos:end="2833:48">/* VIS I fpackfix */</comment>

                <case pos:start="2835:17" pos:end="2835:27">case <expr pos:start="2835:22" pos:end="2835:26"><literal type="number" pos:start="2835:22" pos:end="2835:26">0x03e</literal></expr>:</case> <comment type="block" pos:start="2835:29" pos:end="2835:45">/* VIS I pdist */</comment>

                    <comment type="line" pos:start="2837:21" pos:end="2837:26">// XXX</comment>

                    <goto pos:start="2839:21" pos:end="2839:38">goto <name pos:start="2839:26" pos:end="2839:37">illegal_insn</name>;</goto>

                <case pos:start="2841:17" pos:end="2841:27">case <expr pos:start="2841:22" pos:end="2841:26"><literal type="number" pos:start="2841:22" pos:end="2841:26">0x048</literal></expr>:</case> <comment type="block" pos:start="2841:29" pos:end="2841:50">/* VIS I faligndata */</comment>

                    <expr_stmt pos:start="2843:21" pos:end="2843:45"><expr pos:start="2843:21" pos:end="2843:44"><call pos:start="2843:21" pos:end="2843:44"><name pos:start="2843:21" pos:end="2843:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2843:40" pos:end="2843:44">(<argument pos:start="2843:41" pos:end="2843:43"><expr pos:start="2843:41" pos:end="2843:43"><name pos:start="2843:41" pos:end="2843:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2845:21" pos:end="2845:45"><expr pos:start="2845:21" pos:end="2845:44"><call pos:start="2845:21" pos:end="2845:44"><name pos:start="2845:21" pos:end="2845:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2845:40" pos:end="2845:44">(<argument pos:start="2845:41" pos:end="2845:43"><expr pos:start="2845:41" pos:end="2845:43"><name pos:start="2845:41" pos:end="2845:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2847:21" pos:end="2847:40"><expr pos:start="2847:21" pos:end="2847:39"><call pos:start="2847:21" pos:end="2847:39"><name pos:start="2847:21" pos:end="2847:37">gen_op_faligndata</name><argument_list pos:start="2847:38" pos:end="2847:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2849:21" pos:end="2849:45"><expr pos:start="2849:21" pos:end="2849:44"><call pos:start="2849:21" pos:end="2849:44"><name pos:start="2849:21" pos:end="2849:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2849:41" pos:end="2849:44">(<argument pos:start="2849:42" pos:end="2849:43"><expr pos:start="2849:42" pos:end="2849:43"><name pos:start="2849:42" pos:end="2849:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2851:21" pos:end="2851:26">break;</break>

                <case pos:start="2853:17" pos:end="2853:27">case <expr pos:start="2853:22" pos:end="2853:26"><literal type="number" pos:start="2853:22" pos:end="2853:26">0x04b</literal></expr>:</case> <comment type="block" pos:start="2853:29" pos:end="2853:47">/* VIS I fpmerge */</comment>

                    <expr_stmt pos:start="2855:21" pos:end="2855:45"><expr pos:start="2855:21" pos:end="2855:44"><call pos:start="2855:21" pos:end="2855:44"><name pos:start="2855:21" pos:end="2855:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2855:40" pos:end="2855:44">(<argument pos:start="2855:41" pos:end="2855:43"><expr pos:start="2855:41" pos:end="2855:43"><name pos:start="2855:41" pos:end="2855:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2857:21" pos:end="2857:45"><expr pos:start="2857:21" pos:end="2857:44"><call pos:start="2857:21" pos:end="2857:44"><name pos:start="2857:21" pos:end="2857:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2857:40" pos:end="2857:44">(<argument pos:start="2857:41" pos:end="2857:43"><expr pos:start="2857:41" pos:end="2857:43"><name pos:start="2857:41" pos:end="2857:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2859:21" pos:end="2859:37"><expr pos:start="2859:21" pos:end="2859:36"><call pos:start="2859:21" pos:end="2859:36"><name pos:start="2859:21" pos:end="2859:34">gen_op_fpmerge</name><argument_list pos:start="2859:35" pos:end="2859:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2861:21" pos:end="2861:45"><expr pos:start="2861:21" pos:end="2861:44"><call pos:start="2861:21" pos:end="2861:44"><name pos:start="2861:21" pos:end="2861:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2861:41" pos:end="2861:44">(<argument pos:start="2861:42" pos:end="2861:43"><expr pos:start="2861:42" pos:end="2861:43"><name pos:start="2861:42" pos:end="2861:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2863:21" pos:end="2863:26">break;</break>

                <case pos:start="2865:17" pos:end="2865:27">case <expr pos:start="2865:22" pos:end="2865:26"><literal type="number" pos:start="2865:22" pos:end="2865:26">0x04c</literal></expr>:</case> <comment type="block" pos:start="2865:29" pos:end="2865:49">/* VIS II bshuffle */</comment>

                    <comment type="line" pos:start="2867:21" pos:end="2867:26">// XXX</comment>

                    <goto pos:start="2869:21" pos:end="2869:38">goto <name pos:start="2869:26" pos:end="2869:37">illegal_insn</name>;</goto>

                <case pos:start="2871:17" pos:end="2871:27">case <expr pos:start="2871:22" pos:end="2871:26"><literal type="number" pos:start="2871:22" pos:end="2871:26">0x04d</literal></expr>:</case> <comment type="block" pos:start="2871:29" pos:end="2871:47">/* VIS I fexpand */</comment>

                    <expr_stmt pos:start="2873:21" pos:end="2873:45"><expr pos:start="2873:21" pos:end="2873:44"><call pos:start="2873:21" pos:end="2873:44"><name pos:start="2873:21" pos:end="2873:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2873:40" pos:end="2873:44">(<argument pos:start="2873:41" pos:end="2873:43"><expr pos:start="2873:41" pos:end="2873:43"><name pos:start="2873:41" pos:end="2873:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2875:21" pos:end="2875:45"><expr pos:start="2875:21" pos:end="2875:44"><call pos:start="2875:21" pos:end="2875:44"><name pos:start="2875:21" pos:end="2875:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2875:40" pos:end="2875:44">(<argument pos:start="2875:41" pos:end="2875:43"><expr pos:start="2875:41" pos:end="2875:43"><name pos:start="2875:41" pos:end="2875:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2877:21" pos:end="2877:37"><expr pos:start="2877:21" pos:end="2877:36"><call pos:start="2877:21" pos:end="2877:36"><name pos:start="2877:21" pos:end="2877:34">gen_op_fexpand</name><argument_list pos:start="2877:35" pos:end="2877:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2879:21" pos:end="2879:45"><expr pos:start="2879:21" pos:end="2879:44"><call pos:start="2879:21" pos:end="2879:44"><name pos:start="2879:21" pos:end="2879:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2879:41" pos:end="2879:44">(<argument pos:start="2879:42" pos:end="2879:43"><expr pos:start="2879:42" pos:end="2879:43"><name pos:start="2879:42" pos:end="2879:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2881:21" pos:end="2881:26">break;</break>

                <case pos:start="2883:17" pos:end="2883:27">case <expr pos:start="2883:22" pos:end="2883:26"><literal type="number" pos:start="2883:22" pos:end="2883:26">0x050</literal></expr>:</case> <comment type="block" pos:start="2883:29" pos:end="2883:47">/* VIS I fpadd16 */</comment>

                    <expr_stmt pos:start="2885:21" pos:end="2885:45"><expr pos:start="2885:21" pos:end="2885:44"><call pos:start="2885:21" pos:end="2885:44"><name pos:start="2885:21" pos:end="2885:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2885:40" pos:end="2885:44">(<argument pos:start="2885:41" pos:end="2885:43"><expr pos:start="2885:41" pos:end="2885:43"><name pos:start="2885:41" pos:end="2885:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2887:21" pos:end="2887:45"><expr pos:start="2887:21" pos:end="2887:44"><call pos:start="2887:21" pos:end="2887:44"><name pos:start="2887:21" pos:end="2887:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2887:40" pos:end="2887:44">(<argument pos:start="2887:41" pos:end="2887:43"><expr pos:start="2887:41" pos:end="2887:43"><name pos:start="2887:41" pos:end="2887:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2889:21" pos:end="2889:37"><expr pos:start="2889:21" pos:end="2889:36"><call pos:start="2889:21" pos:end="2889:36"><name pos:start="2889:21" pos:end="2889:34">gen_op_fpadd16</name><argument_list pos:start="2889:35" pos:end="2889:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2891:21" pos:end="2891:45"><expr pos:start="2891:21" pos:end="2891:44"><call pos:start="2891:21" pos:end="2891:44"><name pos:start="2891:21" pos:end="2891:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2891:41" pos:end="2891:44">(<argument pos:start="2891:42" pos:end="2891:43"><expr pos:start="2891:42" pos:end="2891:43"><name pos:start="2891:42" pos:end="2891:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2893:21" pos:end="2893:26">break;</break>

                <case pos:start="2895:17" pos:end="2895:27">case <expr pos:start="2895:22" pos:end="2895:26"><literal type="number" pos:start="2895:22" pos:end="2895:26">0x051</literal></expr>:</case> <comment type="block" pos:start="2895:29" pos:end="2895:48">/* VIS I fpadd16s */</comment>

                    <expr_stmt pos:start="2897:21" pos:end="2897:45"><expr pos:start="2897:21" pos:end="2897:44"><call pos:start="2897:21" pos:end="2897:44"><name pos:start="2897:21" pos:end="2897:39">gen_op_load_fpr_FT0</name><argument_list pos:start="2897:40" pos:end="2897:44">(<argument pos:start="2897:41" pos:end="2897:43"><expr pos:start="2897:41" pos:end="2897:43"><name pos:start="2897:41" pos:end="2897:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2899:21" pos:end="2899:45"><expr pos:start="2899:21" pos:end="2899:44"><call pos:start="2899:21" pos:end="2899:44"><name pos:start="2899:21" pos:end="2899:39">gen_op_load_fpr_FT1</name><argument_list pos:start="2899:40" pos:end="2899:44">(<argument pos:start="2899:41" pos:end="2899:43"><expr pos:start="2899:41" pos:end="2899:43"><name pos:start="2899:41" pos:end="2899:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2901:21" pos:end="2901:38"><expr pos:start="2901:21" pos:end="2901:37"><call pos:start="2901:21" pos:end="2901:37"><name pos:start="2901:21" pos:end="2901:35">gen_op_fpadd16s</name><argument_list pos:start="2901:36" pos:end="2901:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2903:21" pos:end="2903:45"><expr pos:start="2903:21" pos:end="2903:44"><call pos:start="2903:21" pos:end="2903:44"><name pos:start="2903:21" pos:end="2903:40">gen_op_store_FT0_fpr</name><argument_list pos:start="2903:41" pos:end="2903:44">(<argument pos:start="2903:42" pos:end="2903:43"><expr pos:start="2903:42" pos:end="2903:43"><name pos:start="2903:42" pos:end="2903:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2905:21" pos:end="2905:26">break;</break>

                <case pos:start="2907:17" pos:end="2907:27">case <expr pos:start="2907:22" pos:end="2907:26"><literal type="number" pos:start="2907:22" pos:end="2907:26">0x052</literal></expr>:</case> <comment type="block" pos:start="2907:29" pos:end="2907:47">/* VIS I fpadd32 */</comment>

                    <expr_stmt pos:start="2909:21" pos:end="2909:45"><expr pos:start="2909:21" pos:end="2909:44"><call pos:start="2909:21" pos:end="2909:44"><name pos:start="2909:21" pos:end="2909:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2909:40" pos:end="2909:44">(<argument pos:start="2909:41" pos:end="2909:43"><expr pos:start="2909:41" pos:end="2909:43"><name pos:start="2909:41" pos:end="2909:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2911:21" pos:end="2911:45"><expr pos:start="2911:21" pos:end="2911:44"><call pos:start="2911:21" pos:end="2911:44"><name pos:start="2911:21" pos:end="2911:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2911:40" pos:end="2911:44">(<argument pos:start="2911:41" pos:end="2911:43"><expr pos:start="2911:41" pos:end="2911:43"><name pos:start="2911:41" pos:end="2911:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2913:21" pos:end="2913:37"><expr pos:start="2913:21" pos:end="2913:36"><call pos:start="2913:21" pos:end="2913:36"><name pos:start="2913:21" pos:end="2913:34">gen_op_fpadd32</name><argument_list pos:start="2913:35" pos:end="2913:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2915:21" pos:end="2915:45"><expr pos:start="2915:21" pos:end="2915:44"><call pos:start="2915:21" pos:end="2915:44"><name pos:start="2915:21" pos:end="2915:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2915:41" pos:end="2915:44">(<argument pos:start="2915:42" pos:end="2915:43"><expr pos:start="2915:42" pos:end="2915:43"><name pos:start="2915:42" pos:end="2915:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2917:21" pos:end="2917:26">break;</break>

                <case pos:start="2919:17" pos:end="2919:27">case <expr pos:start="2919:22" pos:end="2919:26"><literal type="number" pos:start="2919:22" pos:end="2919:26">0x053</literal></expr>:</case> <comment type="block" pos:start="2919:29" pos:end="2919:48">/* VIS I fpadd32s */</comment>

                    <expr_stmt pos:start="2921:21" pos:end="2921:45"><expr pos:start="2921:21" pos:end="2921:44"><call pos:start="2921:21" pos:end="2921:44"><name pos:start="2921:21" pos:end="2921:39">gen_op_load_fpr_FT0</name><argument_list pos:start="2921:40" pos:end="2921:44">(<argument pos:start="2921:41" pos:end="2921:43"><expr pos:start="2921:41" pos:end="2921:43"><name pos:start="2921:41" pos:end="2921:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2923:21" pos:end="2923:45"><expr pos:start="2923:21" pos:end="2923:44"><call pos:start="2923:21" pos:end="2923:44"><name pos:start="2923:21" pos:end="2923:39">gen_op_load_fpr_FT1</name><argument_list pos:start="2923:40" pos:end="2923:44">(<argument pos:start="2923:41" pos:end="2923:43"><expr pos:start="2923:41" pos:end="2923:43"><name pos:start="2923:41" pos:end="2923:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2925:21" pos:end="2925:38"><expr pos:start="2925:21" pos:end="2925:37"><call pos:start="2925:21" pos:end="2925:37"><name pos:start="2925:21" pos:end="2925:35">gen_op_fpadd32s</name><argument_list pos:start="2925:36" pos:end="2925:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2927:21" pos:end="2927:45"><expr pos:start="2927:21" pos:end="2927:44"><call pos:start="2927:21" pos:end="2927:44"><name pos:start="2927:21" pos:end="2927:40">gen_op_store_FT0_fpr</name><argument_list pos:start="2927:41" pos:end="2927:44">(<argument pos:start="2927:42" pos:end="2927:43"><expr pos:start="2927:42" pos:end="2927:43"><name pos:start="2927:42" pos:end="2927:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2929:21" pos:end="2929:26">break;</break>

                <case pos:start="2931:17" pos:end="2931:27">case <expr pos:start="2931:22" pos:end="2931:26"><literal type="number" pos:start="2931:22" pos:end="2931:26">0x054</literal></expr>:</case> <comment type="block" pos:start="2931:29" pos:end="2931:47">/* VIS I fpsub16 */</comment>

                    <expr_stmt pos:start="2933:21" pos:end="2933:45"><expr pos:start="2933:21" pos:end="2933:44"><call pos:start="2933:21" pos:end="2933:44"><name pos:start="2933:21" pos:end="2933:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2933:40" pos:end="2933:44">(<argument pos:start="2933:41" pos:end="2933:43"><expr pos:start="2933:41" pos:end="2933:43"><name pos:start="2933:41" pos:end="2933:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2935:21" pos:end="2935:45"><expr pos:start="2935:21" pos:end="2935:44"><call pos:start="2935:21" pos:end="2935:44"><name pos:start="2935:21" pos:end="2935:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2935:40" pos:end="2935:44">(<argument pos:start="2935:41" pos:end="2935:43"><expr pos:start="2935:41" pos:end="2935:43"><name pos:start="2935:41" pos:end="2935:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2937:21" pos:end="2937:37"><expr pos:start="2937:21" pos:end="2937:36"><call pos:start="2937:21" pos:end="2937:36"><name pos:start="2937:21" pos:end="2937:34">gen_op_fpsub16</name><argument_list pos:start="2937:35" pos:end="2937:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2939:21" pos:end="2939:45"><expr pos:start="2939:21" pos:end="2939:44"><call pos:start="2939:21" pos:end="2939:44"><name pos:start="2939:21" pos:end="2939:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2939:41" pos:end="2939:44">(<argument pos:start="2939:42" pos:end="2939:43"><expr pos:start="2939:42" pos:end="2939:43"><name pos:start="2939:42" pos:end="2939:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2941:21" pos:end="2941:26">break;</break>

                <case pos:start="2943:17" pos:end="2943:27">case <expr pos:start="2943:22" pos:end="2943:26"><literal type="number" pos:start="2943:22" pos:end="2943:26">0x055</literal></expr>:</case> <comment type="block" pos:start="2943:29" pos:end="2943:48">/* VIS I fpsub16s */</comment>

                    <expr_stmt pos:start="2945:21" pos:end="2945:45"><expr pos:start="2945:21" pos:end="2945:44"><call pos:start="2945:21" pos:end="2945:44"><name pos:start="2945:21" pos:end="2945:39">gen_op_load_fpr_FT0</name><argument_list pos:start="2945:40" pos:end="2945:44">(<argument pos:start="2945:41" pos:end="2945:43"><expr pos:start="2945:41" pos:end="2945:43"><name pos:start="2945:41" pos:end="2945:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2947:21" pos:end="2947:45"><expr pos:start="2947:21" pos:end="2947:44"><call pos:start="2947:21" pos:end="2947:44"><name pos:start="2947:21" pos:end="2947:39">gen_op_load_fpr_FT1</name><argument_list pos:start="2947:40" pos:end="2947:44">(<argument pos:start="2947:41" pos:end="2947:43"><expr pos:start="2947:41" pos:end="2947:43"><name pos:start="2947:41" pos:end="2947:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2949:21" pos:end="2949:38"><expr pos:start="2949:21" pos:end="2949:37"><call pos:start="2949:21" pos:end="2949:37"><name pos:start="2949:21" pos:end="2949:35">gen_op_fpsub16s</name><argument_list pos:start="2949:36" pos:end="2949:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2951:21" pos:end="2951:45"><expr pos:start="2951:21" pos:end="2951:44"><call pos:start="2951:21" pos:end="2951:44"><name pos:start="2951:21" pos:end="2951:40">gen_op_store_FT0_fpr</name><argument_list pos:start="2951:41" pos:end="2951:44">(<argument pos:start="2951:42" pos:end="2951:43"><expr pos:start="2951:42" pos:end="2951:43"><name pos:start="2951:42" pos:end="2951:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2953:21" pos:end="2953:26">break;</break>

                <case pos:start="2955:17" pos:end="2955:27">case <expr pos:start="2955:22" pos:end="2955:26"><literal type="number" pos:start="2955:22" pos:end="2955:26">0x056</literal></expr>:</case> <comment type="block" pos:start="2955:29" pos:end="2955:47">/* VIS I fpsub32 */</comment>

                    <expr_stmt pos:start="2957:21" pos:end="2957:45"><expr pos:start="2957:21" pos:end="2957:44"><call pos:start="2957:21" pos:end="2957:44"><name pos:start="2957:21" pos:end="2957:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2957:40" pos:end="2957:44">(<argument pos:start="2957:41" pos:end="2957:43"><expr pos:start="2957:41" pos:end="2957:43"><name pos:start="2957:41" pos:end="2957:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2959:21" pos:end="2959:45"><expr pos:start="2959:21" pos:end="2959:44"><call pos:start="2959:21" pos:end="2959:44"><name pos:start="2959:21" pos:end="2959:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2959:40" pos:end="2959:44">(<argument pos:start="2959:41" pos:end="2959:43"><expr pos:start="2959:41" pos:end="2959:43"><name pos:start="2959:41" pos:end="2959:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2961:21" pos:end="2961:37"><expr pos:start="2961:21" pos:end="2961:36"><call pos:start="2961:21" pos:end="2961:36"><name pos:start="2961:21" pos:end="2961:34">gen_op_fpadd32</name><argument_list pos:start="2961:35" pos:end="2961:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2963:21" pos:end="2963:45"><expr pos:start="2963:21" pos:end="2963:44"><call pos:start="2963:21" pos:end="2963:44"><name pos:start="2963:21" pos:end="2963:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2963:41" pos:end="2963:44">(<argument pos:start="2963:42" pos:end="2963:43"><expr pos:start="2963:42" pos:end="2963:43"><name pos:start="2963:42" pos:end="2963:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2965:21" pos:end="2965:26">break;</break>

                <case pos:start="2967:17" pos:end="2967:27">case <expr pos:start="2967:22" pos:end="2967:26"><literal type="number" pos:start="2967:22" pos:end="2967:26">0x057</literal></expr>:</case> <comment type="block" pos:start="2967:29" pos:end="2967:48">/* VIS I fpsub32s */</comment>

                    <expr_stmt pos:start="2969:21" pos:end="2969:45"><expr pos:start="2969:21" pos:end="2969:44"><call pos:start="2969:21" pos:end="2969:44"><name pos:start="2969:21" pos:end="2969:39">gen_op_load_fpr_FT0</name><argument_list pos:start="2969:40" pos:end="2969:44">(<argument pos:start="2969:41" pos:end="2969:43"><expr pos:start="2969:41" pos:end="2969:43"><name pos:start="2969:41" pos:end="2969:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2971:21" pos:end="2971:45"><expr pos:start="2971:21" pos:end="2971:44"><call pos:start="2971:21" pos:end="2971:44"><name pos:start="2971:21" pos:end="2971:39">gen_op_load_fpr_FT1</name><argument_list pos:start="2971:40" pos:end="2971:44">(<argument pos:start="2971:41" pos:end="2971:43"><expr pos:start="2971:41" pos:end="2971:43"><name pos:start="2971:41" pos:end="2971:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2973:21" pos:end="2973:38"><expr pos:start="2973:21" pos:end="2973:37"><call pos:start="2973:21" pos:end="2973:37"><name pos:start="2973:21" pos:end="2973:35">gen_op_fpsub32s</name><argument_list pos:start="2973:36" pos:end="2973:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2975:21" pos:end="2975:45"><expr pos:start="2975:21" pos:end="2975:44"><call pos:start="2975:21" pos:end="2975:44"><name pos:start="2975:21" pos:end="2975:40">gen_op_store_FT0_fpr</name><argument_list pos:start="2975:41" pos:end="2975:44">(<argument pos:start="2975:42" pos:end="2975:43"><expr pos:start="2975:42" pos:end="2975:43"><name pos:start="2975:42" pos:end="2975:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2977:21" pos:end="2977:26">break;</break>

                <case pos:start="2979:17" pos:end="2979:27">case <expr pos:start="2979:22" pos:end="2979:26"><literal type="number" pos:start="2979:22" pos:end="2979:26">0x060</literal></expr>:</case> <comment type="block" pos:start="2979:29" pos:end="2979:45">/* VIS I fzero */</comment>

                    <expr_stmt pos:start="2981:21" pos:end="2981:40"><expr pos:start="2981:21" pos:end="2981:39"><call pos:start="2981:21" pos:end="2981:39"><name pos:start="2981:21" pos:end="2981:37">gen_op_movl_DT0_0</name><argument_list pos:start="2981:38" pos:end="2981:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2983:21" pos:end="2983:45"><expr pos:start="2983:21" pos:end="2983:44"><call pos:start="2983:21" pos:end="2983:44"><name pos:start="2983:21" pos:end="2983:40">gen_op_store_DT0_fpr</name><argument_list pos:start="2983:41" pos:end="2983:44">(<argument pos:start="2983:42" pos:end="2983:43"><expr pos:start="2983:42" pos:end="2983:43"><name pos:start="2983:42" pos:end="2983:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2985:21" pos:end="2985:26">break;</break>

                <case pos:start="2987:17" pos:end="2987:27">case <expr pos:start="2987:22" pos:end="2987:26"><literal type="number" pos:start="2987:22" pos:end="2987:26">0x061</literal></expr>:</case> <comment type="block" pos:start="2987:29" pos:end="2987:46">/* VIS I fzeros */</comment>

                    <expr_stmt pos:start="2989:21" pos:end="2989:40"><expr pos:start="2989:21" pos:end="2989:39"><call pos:start="2989:21" pos:end="2989:39"><name pos:start="2989:21" pos:end="2989:37">gen_op_movl_FT0_0</name><argument_list pos:start="2989:38" pos:end="2989:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2991:21" pos:end="2991:45"><expr pos:start="2991:21" pos:end="2991:44"><call pos:start="2991:21" pos:end="2991:44"><name pos:start="2991:21" pos:end="2991:40">gen_op_store_FT0_fpr</name><argument_list pos:start="2991:41" pos:end="2991:44">(<argument pos:start="2991:42" pos:end="2991:43"><expr pos:start="2991:42" pos:end="2991:43"><name pos:start="2991:42" pos:end="2991:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2993:21" pos:end="2993:26">break;</break>

                <case pos:start="2995:17" pos:end="2995:27">case <expr pos:start="2995:22" pos:end="2995:26"><literal type="number" pos:start="2995:22" pos:end="2995:26">0x062</literal></expr>:</case> <comment type="block" pos:start="2995:29" pos:end="2995:44">/* VIS I fnor */</comment>

                    <expr_stmt pos:start="2997:21" pos:end="2997:45"><expr pos:start="2997:21" pos:end="2997:44"><call pos:start="2997:21" pos:end="2997:44"><name pos:start="2997:21" pos:end="2997:39">gen_op_load_fpr_DT0</name><argument_list pos:start="2997:40" pos:end="2997:44">(<argument pos:start="2997:41" pos:end="2997:43"><expr pos:start="2997:41" pos:end="2997:43"><name pos:start="2997:41" pos:end="2997:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2999:21" pos:end="2999:45"><expr pos:start="2999:21" pos:end="2999:44"><call pos:start="2999:21" pos:end="2999:44"><name pos:start="2999:21" pos:end="2999:39">gen_op_load_fpr_DT1</name><argument_list pos:start="2999:40" pos:end="2999:44">(<argument pos:start="2999:41" pos:end="2999:43"><expr pos:start="2999:41" pos:end="2999:43"><name pos:start="2999:41" pos:end="2999:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3001:21" pos:end="3001:34"><expr pos:start="3001:21" pos:end="3001:33"><call pos:start="3001:21" pos:end="3001:33"><name pos:start="3001:21" pos:end="3001:31">gen_op_fnor</name><argument_list pos:start="3001:32" pos:end="3001:33">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3003:21" pos:end="3003:45"><expr pos:start="3003:21" pos:end="3003:44"><call pos:start="3003:21" pos:end="3003:44"><name pos:start="3003:21" pos:end="3003:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3003:41" pos:end="3003:44">(<argument pos:start="3003:42" pos:end="3003:43"><expr pos:start="3003:42" pos:end="3003:43"><name pos:start="3003:42" pos:end="3003:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3005:21" pos:end="3005:26">break;</break>

                <case pos:start="3007:17" pos:end="3007:27">case <expr pos:start="3007:22" pos:end="3007:26"><literal type="number" pos:start="3007:22" pos:end="3007:26">0x063</literal></expr>:</case> <comment type="block" pos:start="3007:29" pos:end="3007:45">/* VIS I fnors */</comment>

                    <expr_stmt pos:start="3009:21" pos:end="3009:45"><expr pos:start="3009:21" pos:end="3009:44"><call pos:start="3009:21" pos:end="3009:44"><name pos:start="3009:21" pos:end="3009:39">gen_op_load_fpr_FT0</name><argument_list pos:start="3009:40" pos:end="3009:44">(<argument pos:start="3009:41" pos:end="3009:43"><expr pos:start="3009:41" pos:end="3009:43"><name pos:start="3009:41" pos:end="3009:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3011:21" pos:end="3011:45"><expr pos:start="3011:21" pos:end="3011:44"><call pos:start="3011:21" pos:end="3011:44"><name pos:start="3011:21" pos:end="3011:39">gen_op_load_fpr_FT1</name><argument_list pos:start="3011:40" pos:end="3011:44">(<argument pos:start="3011:41" pos:end="3011:43"><expr pos:start="3011:41" pos:end="3011:43"><name pos:start="3011:41" pos:end="3011:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3013:21" pos:end="3013:35"><expr pos:start="3013:21" pos:end="3013:34"><call pos:start="3013:21" pos:end="3013:34"><name pos:start="3013:21" pos:end="3013:32">gen_op_fnors</name><argument_list pos:start="3013:33" pos:end="3013:34">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3015:21" pos:end="3015:45"><expr pos:start="3015:21" pos:end="3015:44"><call pos:start="3015:21" pos:end="3015:44"><name pos:start="3015:21" pos:end="3015:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3015:41" pos:end="3015:44">(<argument pos:start="3015:42" pos:end="3015:43"><expr pos:start="3015:42" pos:end="3015:43"><name pos:start="3015:42" pos:end="3015:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3017:21" pos:end="3017:26">break;</break>

                <case pos:start="3019:17" pos:end="3019:27">case <expr pos:start="3019:22" pos:end="3019:26"><literal type="number" pos:start="3019:22" pos:end="3019:26">0x064</literal></expr>:</case> <comment type="block" pos:start="3019:29" pos:end="3019:48">/* VIS I fandnot2 */</comment>

                    <expr_stmt pos:start="3021:21" pos:end="3021:45"><expr pos:start="3021:21" pos:end="3021:44"><call pos:start="3021:21" pos:end="3021:44"><name pos:start="3021:21" pos:end="3021:39">gen_op_load_fpr_DT1</name><argument_list pos:start="3021:40" pos:end="3021:44">(<argument pos:start="3021:41" pos:end="3021:43"><expr pos:start="3021:41" pos:end="3021:43"><name pos:start="3021:41" pos:end="3021:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3023:21" pos:end="3023:45"><expr pos:start="3023:21" pos:end="3023:44"><call pos:start="3023:21" pos:end="3023:44"><name pos:start="3023:21" pos:end="3023:39">gen_op_load_fpr_DT0</name><argument_list pos:start="3023:40" pos:end="3023:44">(<argument pos:start="3023:41" pos:end="3023:43"><expr pos:start="3023:41" pos:end="3023:43"><name pos:start="3023:41" pos:end="3023:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3025:21" pos:end="3025:37"><expr pos:start="3025:21" pos:end="3025:36"><call pos:start="3025:21" pos:end="3025:36"><name pos:start="3025:21" pos:end="3025:34">gen_op_fandnot</name><argument_list pos:start="3025:35" pos:end="3025:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3027:21" pos:end="3027:45"><expr pos:start="3027:21" pos:end="3027:44"><call pos:start="3027:21" pos:end="3027:44"><name pos:start="3027:21" pos:end="3027:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3027:41" pos:end="3027:44">(<argument pos:start="3027:42" pos:end="3027:43"><expr pos:start="3027:42" pos:end="3027:43"><name pos:start="3027:42" pos:end="3027:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3029:21" pos:end="3029:26">break;</break>

                <case pos:start="3031:17" pos:end="3031:27">case <expr pos:start="3031:22" pos:end="3031:26"><literal type="number" pos:start="3031:22" pos:end="3031:26">0x065</literal></expr>:</case> <comment type="block" pos:start="3031:29" pos:end="3031:49">/* VIS I fandnot2s */</comment>

                    <expr_stmt pos:start="3033:21" pos:end="3033:45"><expr pos:start="3033:21" pos:end="3033:44"><call pos:start="3033:21" pos:end="3033:44"><name pos:start="3033:21" pos:end="3033:39">gen_op_load_fpr_FT1</name><argument_list pos:start="3033:40" pos:end="3033:44">(<argument pos:start="3033:41" pos:end="3033:43"><expr pos:start="3033:41" pos:end="3033:43"><name pos:start="3033:41" pos:end="3033:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3035:21" pos:end="3035:45"><expr pos:start="3035:21" pos:end="3035:44"><call pos:start="3035:21" pos:end="3035:44"><name pos:start="3035:21" pos:end="3035:39">gen_op_load_fpr_FT0</name><argument_list pos:start="3035:40" pos:end="3035:44">(<argument pos:start="3035:41" pos:end="3035:43"><expr pos:start="3035:41" pos:end="3035:43"><name pos:start="3035:41" pos:end="3035:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3037:21" pos:end="3037:38"><expr pos:start="3037:21" pos:end="3037:37"><call pos:start="3037:21" pos:end="3037:37"><name pos:start="3037:21" pos:end="3037:35">gen_op_fandnots</name><argument_list pos:start="3037:36" pos:end="3037:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3039:21" pos:end="3039:45"><expr pos:start="3039:21" pos:end="3039:44"><call pos:start="3039:21" pos:end="3039:44"><name pos:start="3039:21" pos:end="3039:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3039:41" pos:end="3039:44">(<argument pos:start="3039:42" pos:end="3039:43"><expr pos:start="3039:42" pos:end="3039:43"><name pos:start="3039:42" pos:end="3039:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3041:21" pos:end="3041:26">break;</break>

                <case pos:start="3043:17" pos:end="3043:27">case <expr pos:start="3043:22" pos:end="3043:26"><literal type="number" pos:start="3043:22" pos:end="3043:26">0x066</literal></expr>:</case> <comment type="block" pos:start="3043:29" pos:end="3043:45">/* VIS I fnot2 */</comment>

                    <expr_stmt pos:start="3045:21" pos:end="3045:45"><expr pos:start="3045:21" pos:end="3045:44"><call pos:start="3045:21" pos:end="3045:44"><name pos:start="3045:21" pos:end="3045:39">gen_op_load_fpr_DT1</name><argument_list pos:start="3045:40" pos:end="3045:44">(<argument pos:start="3045:41" pos:end="3045:43"><expr pos:start="3045:41" pos:end="3045:43"><name pos:start="3045:41" pos:end="3045:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3047:21" pos:end="3047:34"><expr pos:start="3047:21" pos:end="3047:33"><call pos:start="3047:21" pos:end="3047:33"><name pos:start="3047:21" pos:end="3047:31">gen_op_fnot</name><argument_list pos:start="3047:32" pos:end="3047:33">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3049:21" pos:end="3049:45"><expr pos:start="3049:21" pos:end="3049:44"><call pos:start="3049:21" pos:end="3049:44"><name pos:start="3049:21" pos:end="3049:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3049:41" pos:end="3049:44">(<argument pos:start="3049:42" pos:end="3049:43"><expr pos:start="3049:42" pos:end="3049:43"><name pos:start="3049:42" pos:end="3049:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3051:21" pos:end="3051:26">break;</break>

                <case pos:start="3053:17" pos:end="3053:27">case <expr pos:start="3053:22" pos:end="3053:26"><literal type="number" pos:start="3053:22" pos:end="3053:26">0x067</literal></expr>:</case> <comment type="block" pos:start="3053:29" pos:end="3053:46">/* VIS I fnot2s */</comment>

                    <expr_stmt pos:start="3055:21" pos:end="3055:45"><expr pos:start="3055:21" pos:end="3055:44"><call pos:start="3055:21" pos:end="3055:44"><name pos:start="3055:21" pos:end="3055:39">gen_op_load_fpr_FT1</name><argument_list pos:start="3055:40" pos:end="3055:44">(<argument pos:start="3055:41" pos:end="3055:43"><expr pos:start="3055:41" pos:end="3055:43"><name pos:start="3055:41" pos:end="3055:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3057:21" pos:end="3057:34"><expr pos:start="3057:21" pos:end="3057:33"><call pos:start="3057:21" pos:end="3057:33"><name pos:start="3057:21" pos:end="3057:31">gen_op_fnot</name><argument_list pos:start="3057:32" pos:end="3057:33">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3059:21" pos:end="3059:45"><expr pos:start="3059:21" pos:end="3059:44"><call pos:start="3059:21" pos:end="3059:44"><name pos:start="3059:21" pos:end="3059:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3059:41" pos:end="3059:44">(<argument pos:start="3059:42" pos:end="3059:43"><expr pos:start="3059:42" pos:end="3059:43"><name pos:start="3059:42" pos:end="3059:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3061:21" pos:end="3061:26">break;</break>

                <case pos:start="3063:17" pos:end="3063:27">case <expr pos:start="3063:22" pos:end="3063:26"><literal type="number" pos:start="3063:22" pos:end="3063:26">0x068</literal></expr>:</case> <comment type="block" pos:start="3063:29" pos:end="3063:48">/* VIS I fandnot1 */</comment>

                    <expr_stmt pos:start="3065:21" pos:end="3065:45"><expr pos:start="3065:21" pos:end="3065:44"><call pos:start="3065:21" pos:end="3065:44"><name pos:start="3065:21" pos:end="3065:39">gen_op_load_fpr_DT0</name><argument_list pos:start="3065:40" pos:end="3065:44">(<argument pos:start="3065:41" pos:end="3065:43"><expr pos:start="3065:41" pos:end="3065:43"><name pos:start="3065:41" pos:end="3065:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3067:21" pos:end="3067:45"><expr pos:start="3067:21" pos:end="3067:44"><call pos:start="3067:21" pos:end="3067:44"><name pos:start="3067:21" pos:end="3067:39">gen_op_load_fpr_DT1</name><argument_list pos:start="3067:40" pos:end="3067:44">(<argument pos:start="3067:41" pos:end="3067:43"><expr pos:start="3067:41" pos:end="3067:43"><name pos:start="3067:41" pos:end="3067:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3069:21" pos:end="3069:37"><expr pos:start="3069:21" pos:end="3069:36"><call pos:start="3069:21" pos:end="3069:36"><name pos:start="3069:21" pos:end="3069:34">gen_op_fandnot</name><argument_list pos:start="3069:35" pos:end="3069:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3071:21" pos:end="3071:45"><expr pos:start="3071:21" pos:end="3071:44"><call pos:start="3071:21" pos:end="3071:44"><name pos:start="3071:21" pos:end="3071:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3071:41" pos:end="3071:44">(<argument pos:start="3071:42" pos:end="3071:43"><expr pos:start="3071:42" pos:end="3071:43"><name pos:start="3071:42" pos:end="3071:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3073:21" pos:end="3073:26">break;</break>

                <case pos:start="3075:17" pos:end="3075:27">case <expr pos:start="3075:22" pos:end="3075:26"><literal type="number" pos:start="3075:22" pos:end="3075:26">0x069</literal></expr>:</case> <comment type="block" pos:start="3075:29" pos:end="3075:49">/* VIS I fandnot1s */</comment>

                    <expr_stmt pos:start="3077:21" pos:end="3077:45"><expr pos:start="3077:21" pos:end="3077:44"><call pos:start="3077:21" pos:end="3077:44"><name pos:start="3077:21" pos:end="3077:39">gen_op_load_fpr_FT0</name><argument_list pos:start="3077:40" pos:end="3077:44">(<argument pos:start="3077:41" pos:end="3077:43"><expr pos:start="3077:41" pos:end="3077:43"><name pos:start="3077:41" pos:end="3077:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3079:21" pos:end="3079:45"><expr pos:start="3079:21" pos:end="3079:44"><call pos:start="3079:21" pos:end="3079:44"><name pos:start="3079:21" pos:end="3079:39">gen_op_load_fpr_FT1</name><argument_list pos:start="3079:40" pos:end="3079:44">(<argument pos:start="3079:41" pos:end="3079:43"><expr pos:start="3079:41" pos:end="3079:43"><name pos:start="3079:41" pos:end="3079:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3081:21" pos:end="3081:38"><expr pos:start="3081:21" pos:end="3081:37"><call pos:start="3081:21" pos:end="3081:37"><name pos:start="3081:21" pos:end="3081:35">gen_op_fandnots</name><argument_list pos:start="3081:36" pos:end="3081:37">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3083:21" pos:end="3083:45"><expr pos:start="3083:21" pos:end="3083:44"><call pos:start="3083:21" pos:end="3083:44"><name pos:start="3083:21" pos:end="3083:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3083:41" pos:end="3083:44">(<argument pos:start="3083:42" pos:end="3083:43"><expr pos:start="3083:42" pos:end="3083:43"><name pos:start="3083:42" pos:end="3083:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3085:21" pos:end="3085:26">break;</break>

                <case pos:start="3087:17" pos:end="3087:27">case <expr pos:start="3087:22" pos:end="3087:26"><literal type="number" pos:start="3087:22" pos:end="3087:26">0x06a</literal></expr>:</case> <comment type="block" pos:start="3087:29" pos:end="3087:45">/* VIS I fnot1 */</comment>

                    <expr_stmt pos:start="3089:21" pos:end="3089:45"><expr pos:start="3089:21" pos:end="3089:44"><call pos:start="3089:21" pos:end="3089:44"><name pos:start="3089:21" pos:end="3089:39">gen_op_load_fpr_DT1</name><argument_list pos:start="3089:40" pos:end="3089:44">(<argument pos:start="3089:41" pos:end="3089:43"><expr pos:start="3089:41" pos:end="3089:43"><name pos:start="3089:41" pos:end="3089:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3091:21" pos:end="3091:34"><expr pos:start="3091:21" pos:end="3091:33"><call pos:start="3091:21" pos:end="3091:33"><name pos:start="3091:21" pos:end="3091:31">gen_op_fnot</name><argument_list pos:start="3091:32" pos:end="3091:33">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3093:21" pos:end="3093:45"><expr pos:start="3093:21" pos:end="3093:44"><call pos:start="3093:21" pos:end="3093:44"><name pos:start="3093:21" pos:end="3093:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3093:41" pos:end="3093:44">(<argument pos:start="3093:42" pos:end="3093:43"><expr pos:start="3093:42" pos:end="3093:43"><name pos:start="3093:42" pos:end="3093:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3095:21" pos:end="3095:26">break;</break>

                <case pos:start="3097:17" pos:end="3097:27">case <expr pos:start="3097:22" pos:end="3097:26"><literal type="number" pos:start="3097:22" pos:end="3097:26">0x06b</literal></expr>:</case> <comment type="block" pos:start="3097:29" pos:end="3097:46">/* VIS I fnot1s */</comment>

                    <expr_stmt pos:start="3099:21" pos:end="3099:45"><expr pos:start="3099:21" pos:end="3099:44"><call pos:start="3099:21" pos:end="3099:44"><name pos:start="3099:21" pos:end="3099:39">gen_op_load_fpr_FT1</name><argument_list pos:start="3099:40" pos:end="3099:44">(<argument pos:start="3099:41" pos:end="3099:43"><expr pos:start="3099:41" pos:end="3099:43"><name pos:start="3099:41" pos:end="3099:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3101:21" pos:end="3101:34"><expr pos:start="3101:21" pos:end="3101:33"><call pos:start="3101:21" pos:end="3101:33"><name pos:start="3101:21" pos:end="3101:31">gen_op_fnot</name><argument_list pos:start="3101:32" pos:end="3101:33">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3103:21" pos:end="3103:45"><expr pos:start="3103:21" pos:end="3103:44"><call pos:start="3103:21" pos:end="3103:44"><name pos:start="3103:21" pos:end="3103:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3103:41" pos:end="3103:44">(<argument pos:start="3103:42" pos:end="3103:43"><expr pos:start="3103:42" pos:end="3103:43"><name pos:start="3103:42" pos:end="3103:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3105:21" pos:end="3105:26">break;</break>

                <case pos:start="3107:17" pos:end="3107:27">case <expr pos:start="3107:22" pos:end="3107:26"><literal type="number" pos:start="3107:22" pos:end="3107:26">0x06c</literal></expr>:</case> <comment type="block" pos:start="3107:29" pos:end="3107:44">/* VIS I fxor */</comment>

                    <expr_stmt pos:start="3109:21" pos:end="3109:45"><expr pos:start="3109:21" pos:end="3109:44"><call pos:start="3109:21" pos:end="3109:44"><name pos:start="3109:21" pos:end="3109:39">gen_op_load_fpr_DT0</name><argument_list pos:start="3109:40" pos:end="3109:44">(<argument pos:start="3109:41" pos:end="3109:43"><expr pos:start="3109:41" pos:end="3109:43"><name pos:start="3109:41" pos:end="3109:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3111:21" pos:end="3111:45"><expr pos:start="3111:21" pos:end="3111:44"><call pos:start="3111:21" pos:end="3111:44"><name pos:start="3111:21" pos:end="3111:39">gen_op_load_fpr_DT1</name><argument_list pos:start="3111:40" pos:end="3111:44">(<argument pos:start="3111:41" pos:end="3111:43"><expr pos:start="3111:41" pos:end="3111:43"><name pos:start="3111:41" pos:end="3111:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3113:21" pos:end="3113:34"><expr pos:start="3113:21" pos:end="3113:33"><call pos:start="3113:21" pos:end="3113:33"><name pos:start="3113:21" pos:end="3113:31">gen_op_fxor</name><argument_list pos:start="3113:32" pos:end="3113:33">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3115:21" pos:end="3115:45"><expr pos:start="3115:21" pos:end="3115:44"><call pos:start="3115:21" pos:end="3115:44"><name pos:start="3115:21" pos:end="3115:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3115:41" pos:end="3115:44">(<argument pos:start="3115:42" pos:end="3115:43"><expr pos:start="3115:42" pos:end="3115:43"><name pos:start="3115:42" pos:end="3115:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3117:21" pos:end="3117:26">break;</break>

                <case pos:start="3119:17" pos:end="3119:27">case <expr pos:start="3119:22" pos:end="3119:26"><literal type="number" pos:start="3119:22" pos:end="3119:26">0x06d</literal></expr>:</case> <comment type="block" pos:start="3119:29" pos:end="3119:45">/* VIS I fxors */</comment>

                    <expr_stmt pos:start="3121:21" pos:end="3121:45"><expr pos:start="3121:21" pos:end="3121:44"><call pos:start="3121:21" pos:end="3121:44"><name pos:start="3121:21" pos:end="3121:39">gen_op_load_fpr_FT0</name><argument_list pos:start="3121:40" pos:end="3121:44">(<argument pos:start="3121:41" pos:end="3121:43"><expr pos:start="3121:41" pos:end="3121:43"><name pos:start="3121:41" pos:end="3121:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3123:21" pos:end="3123:45"><expr pos:start="3123:21" pos:end="3123:44"><call pos:start="3123:21" pos:end="3123:44"><name pos:start="3123:21" pos:end="3123:39">gen_op_load_fpr_FT1</name><argument_list pos:start="3123:40" pos:end="3123:44">(<argument pos:start="3123:41" pos:end="3123:43"><expr pos:start="3123:41" pos:end="3123:43"><name pos:start="3123:41" pos:end="3123:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3125:21" pos:end="3125:35"><expr pos:start="3125:21" pos:end="3125:34"><call pos:start="3125:21" pos:end="3125:34"><name pos:start="3125:21" pos:end="3125:32">gen_op_fxors</name><argument_list pos:start="3125:33" pos:end="3125:34">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3127:21" pos:end="3127:45"><expr pos:start="3127:21" pos:end="3127:44"><call pos:start="3127:21" pos:end="3127:44"><name pos:start="3127:21" pos:end="3127:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3127:41" pos:end="3127:44">(<argument pos:start="3127:42" pos:end="3127:43"><expr pos:start="3127:42" pos:end="3127:43"><name pos:start="3127:42" pos:end="3127:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3129:21" pos:end="3129:26">break;</break>

                <case pos:start="3131:17" pos:end="3131:27">case <expr pos:start="3131:22" pos:end="3131:26"><literal type="number" pos:start="3131:22" pos:end="3131:26">0x06e</literal></expr>:</case> <comment type="block" pos:start="3131:29" pos:end="3131:45">/* VIS I fnand */</comment>

                    <expr_stmt pos:start="3133:21" pos:end="3133:45"><expr pos:start="3133:21" pos:end="3133:44"><call pos:start="3133:21" pos:end="3133:44"><name pos:start="3133:21" pos:end="3133:39">gen_op_load_fpr_DT0</name><argument_list pos:start="3133:40" pos:end="3133:44">(<argument pos:start="3133:41" pos:end="3133:43"><expr pos:start="3133:41" pos:end="3133:43"><name pos:start="3133:41" pos:end="3133:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3135:21" pos:end="3135:45"><expr pos:start="3135:21" pos:end="3135:44"><call pos:start="3135:21" pos:end="3135:44"><name pos:start="3135:21" pos:end="3135:39">gen_op_load_fpr_DT1</name><argument_list pos:start="3135:40" pos:end="3135:44">(<argument pos:start="3135:41" pos:end="3135:43"><expr pos:start="3135:41" pos:end="3135:43"><name pos:start="3135:41" pos:end="3135:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3137:21" pos:end="3137:35"><expr pos:start="3137:21" pos:end="3137:34"><call pos:start="3137:21" pos:end="3137:34"><name pos:start="3137:21" pos:end="3137:32">gen_op_fnand</name><argument_list pos:start="3137:33" pos:end="3137:34">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3139:21" pos:end="3139:45"><expr pos:start="3139:21" pos:end="3139:44"><call pos:start="3139:21" pos:end="3139:44"><name pos:start="3139:21" pos:end="3139:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3139:41" pos:end="3139:44">(<argument pos:start="3139:42" pos:end="3139:43"><expr pos:start="3139:42" pos:end="3139:43"><name pos:start="3139:42" pos:end="3139:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3141:21" pos:end="3141:26">break;</break>

                <case pos:start="3143:17" pos:end="3143:27">case <expr pos:start="3143:22" pos:end="3143:26"><literal type="number" pos:start="3143:22" pos:end="3143:26">0x06f</literal></expr>:</case> <comment type="block" pos:start="3143:29" pos:end="3143:46">/* VIS I fnands */</comment>

                    <expr_stmt pos:start="3145:21" pos:end="3145:45"><expr pos:start="3145:21" pos:end="3145:44"><call pos:start="3145:21" pos:end="3145:44"><name pos:start="3145:21" pos:end="3145:39">gen_op_load_fpr_FT0</name><argument_list pos:start="3145:40" pos:end="3145:44">(<argument pos:start="3145:41" pos:end="3145:43"><expr pos:start="3145:41" pos:end="3145:43"><name pos:start="3145:41" pos:end="3145:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3147:21" pos:end="3147:45"><expr pos:start="3147:21" pos:end="3147:44"><call pos:start="3147:21" pos:end="3147:44"><name pos:start="3147:21" pos:end="3147:39">gen_op_load_fpr_FT1</name><argument_list pos:start="3147:40" pos:end="3147:44">(<argument pos:start="3147:41" pos:end="3147:43"><expr pos:start="3147:41" pos:end="3147:43"><name pos:start="3147:41" pos:end="3147:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3149:21" pos:end="3149:36"><expr pos:start="3149:21" pos:end="3149:35"><call pos:start="3149:21" pos:end="3149:35"><name pos:start="3149:21" pos:end="3149:33">gen_op_fnands</name><argument_list pos:start="3149:34" pos:end="3149:35">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3151:21" pos:end="3151:45"><expr pos:start="3151:21" pos:end="3151:44"><call pos:start="3151:21" pos:end="3151:44"><name pos:start="3151:21" pos:end="3151:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3151:41" pos:end="3151:44">(<argument pos:start="3151:42" pos:end="3151:43"><expr pos:start="3151:42" pos:end="3151:43"><name pos:start="3151:42" pos:end="3151:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3153:21" pos:end="3153:26">break;</break>

                <case pos:start="3155:17" pos:end="3155:27">case <expr pos:start="3155:22" pos:end="3155:26"><literal type="number" pos:start="3155:22" pos:end="3155:26">0x070</literal></expr>:</case> <comment type="block" pos:start="3155:29" pos:end="3155:44">/* VIS I fand */</comment>

                    <expr_stmt pos:start="3157:21" pos:end="3157:45"><expr pos:start="3157:21" pos:end="3157:44"><call pos:start="3157:21" pos:end="3157:44"><name pos:start="3157:21" pos:end="3157:39">gen_op_load_fpr_DT0</name><argument_list pos:start="3157:40" pos:end="3157:44">(<argument pos:start="3157:41" pos:end="3157:43"><expr pos:start="3157:41" pos:end="3157:43"><name pos:start="3157:41" pos:end="3157:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3159:21" pos:end="3159:45"><expr pos:start="3159:21" pos:end="3159:44"><call pos:start="3159:21" pos:end="3159:44"><name pos:start="3159:21" pos:end="3159:39">gen_op_load_fpr_DT1</name><argument_list pos:start="3159:40" pos:end="3159:44">(<argument pos:start="3159:41" pos:end="3159:43"><expr pos:start="3159:41" pos:end="3159:43"><name pos:start="3159:41" pos:end="3159:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3161:21" pos:end="3161:34"><expr pos:start="3161:21" pos:end="3161:33"><call pos:start="3161:21" pos:end="3161:33"><name pos:start="3161:21" pos:end="3161:31">gen_op_fand</name><argument_list pos:start="3161:32" pos:end="3161:33">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3163:21" pos:end="3163:45"><expr pos:start="3163:21" pos:end="3163:44"><call pos:start="3163:21" pos:end="3163:44"><name pos:start="3163:21" pos:end="3163:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3163:41" pos:end="3163:44">(<argument pos:start="3163:42" pos:end="3163:43"><expr pos:start="3163:42" pos:end="3163:43"><name pos:start="3163:42" pos:end="3163:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3165:21" pos:end="3165:26">break;</break>

                <case pos:start="3167:17" pos:end="3167:27">case <expr pos:start="3167:22" pos:end="3167:26"><literal type="number" pos:start="3167:22" pos:end="3167:26">0x071</literal></expr>:</case> <comment type="block" pos:start="3167:29" pos:end="3167:45">/* VIS I fands */</comment>

                    <expr_stmt pos:start="3169:21" pos:end="3169:45"><expr pos:start="3169:21" pos:end="3169:44"><call pos:start="3169:21" pos:end="3169:44"><name pos:start="3169:21" pos:end="3169:39">gen_op_load_fpr_FT0</name><argument_list pos:start="3169:40" pos:end="3169:44">(<argument pos:start="3169:41" pos:end="3169:43"><expr pos:start="3169:41" pos:end="3169:43"><name pos:start="3169:41" pos:end="3169:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3171:21" pos:end="3171:45"><expr pos:start="3171:21" pos:end="3171:44"><call pos:start="3171:21" pos:end="3171:44"><name pos:start="3171:21" pos:end="3171:39">gen_op_load_fpr_FT1</name><argument_list pos:start="3171:40" pos:end="3171:44">(<argument pos:start="3171:41" pos:end="3171:43"><expr pos:start="3171:41" pos:end="3171:43"><name pos:start="3171:41" pos:end="3171:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3173:21" pos:end="3173:35"><expr pos:start="3173:21" pos:end="3173:34"><call pos:start="3173:21" pos:end="3173:34"><name pos:start="3173:21" pos:end="3173:32">gen_op_fands</name><argument_list pos:start="3173:33" pos:end="3173:34">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3175:21" pos:end="3175:45"><expr pos:start="3175:21" pos:end="3175:44"><call pos:start="3175:21" pos:end="3175:44"><name pos:start="3175:21" pos:end="3175:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3175:41" pos:end="3175:44">(<argument pos:start="3175:42" pos:end="3175:43"><expr pos:start="3175:42" pos:end="3175:43"><name pos:start="3175:42" pos:end="3175:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3177:21" pos:end="3177:26">break;</break>

                <case pos:start="3179:17" pos:end="3179:27">case <expr pos:start="3179:22" pos:end="3179:26"><literal type="number" pos:start="3179:22" pos:end="3179:26">0x072</literal></expr>:</case> <comment type="block" pos:start="3179:29" pos:end="3179:45">/* VIS I fxnor */</comment>

                    <expr_stmt pos:start="3181:21" pos:end="3181:45"><expr pos:start="3181:21" pos:end="3181:44"><call pos:start="3181:21" pos:end="3181:44"><name pos:start="3181:21" pos:end="3181:39">gen_op_load_fpr_DT0</name><argument_list pos:start="3181:40" pos:end="3181:44">(<argument pos:start="3181:41" pos:end="3181:43"><expr pos:start="3181:41" pos:end="3181:43"><name pos:start="3181:41" pos:end="3181:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3183:21" pos:end="3183:45"><expr pos:start="3183:21" pos:end="3183:44"><call pos:start="3183:21" pos:end="3183:44"><name pos:start="3183:21" pos:end="3183:39">gen_op_load_fpr_DT1</name><argument_list pos:start="3183:40" pos:end="3183:44">(<argument pos:start="3183:41" pos:end="3183:43"><expr pos:start="3183:41" pos:end="3183:43"><name pos:start="3183:41" pos:end="3183:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3185:21" pos:end="3185:35"><expr pos:start="3185:21" pos:end="3185:34"><call pos:start="3185:21" pos:end="3185:34"><name pos:start="3185:21" pos:end="3185:32">gen_op_fxnor</name><argument_list pos:start="3185:33" pos:end="3185:34">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3187:21" pos:end="3187:45"><expr pos:start="3187:21" pos:end="3187:44"><call pos:start="3187:21" pos:end="3187:44"><name pos:start="3187:21" pos:end="3187:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3187:41" pos:end="3187:44">(<argument pos:start="3187:42" pos:end="3187:43"><expr pos:start="3187:42" pos:end="3187:43"><name pos:start="3187:42" pos:end="3187:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3189:21" pos:end="3189:26">break;</break>

                <case pos:start="3191:17" pos:end="3191:27">case <expr pos:start="3191:22" pos:end="3191:26"><literal type="number" pos:start="3191:22" pos:end="3191:26">0x073</literal></expr>:</case> <comment type="block" pos:start="3191:29" pos:end="3191:46">/* VIS I fxnors */</comment>

                    <expr_stmt pos:start="3193:21" pos:end="3193:45"><expr pos:start="3193:21" pos:end="3193:44"><call pos:start="3193:21" pos:end="3193:44"><name pos:start="3193:21" pos:end="3193:39">gen_op_load_fpr_FT0</name><argument_list pos:start="3193:40" pos:end="3193:44">(<argument pos:start="3193:41" pos:end="3193:43"><expr pos:start="3193:41" pos:end="3193:43"><name pos:start="3193:41" pos:end="3193:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3195:21" pos:end="3195:45"><expr pos:start="3195:21" pos:end="3195:44"><call pos:start="3195:21" pos:end="3195:44"><name pos:start="3195:21" pos:end="3195:39">gen_op_load_fpr_FT1</name><argument_list pos:start="3195:40" pos:end="3195:44">(<argument pos:start="3195:41" pos:end="3195:43"><expr pos:start="3195:41" pos:end="3195:43"><name pos:start="3195:41" pos:end="3195:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3197:21" pos:end="3197:36"><expr pos:start="3197:21" pos:end="3197:35"><call pos:start="3197:21" pos:end="3197:35"><name pos:start="3197:21" pos:end="3197:33">gen_op_fxnors</name><argument_list pos:start="3197:34" pos:end="3197:35">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3199:21" pos:end="3199:45"><expr pos:start="3199:21" pos:end="3199:44"><call pos:start="3199:21" pos:end="3199:44"><name pos:start="3199:21" pos:end="3199:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3199:41" pos:end="3199:44">(<argument pos:start="3199:42" pos:end="3199:43"><expr pos:start="3199:42" pos:end="3199:43"><name pos:start="3199:42" pos:end="3199:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3201:21" pos:end="3201:26">break;</break>

                <case pos:start="3203:17" pos:end="3203:27">case <expr pos:start="3203:22" pos:end="3203:26"><literal type="number" pos:start="3203:22" pos:end="3203:26">0x074</literal></expr>:</case> <comment type="block" pos:start="3203:29" pos:end="3203:45">/* VIS I fsrc1 */</comment>

                    <expr_stmt pos:start="3205:21" pos:end="3205:45"><expr pos:start="3205:21" pos:end="3205:44"><call pos:start="3205:21" pos:end="3205:44"><name pos:start="3205:21" pos:end="3205:39">gen_op_load_fpr_DT0</name><argument_list pos:start="3205:40" pos:end="3205:44">(<argument pos:start="3205:41" pos:end="3205:43"><expr pos:start="3205:41" pos:end="3205:43"><name pos:start="3205:41" pos:end="3205:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3207:21" pos:end="3207:45"><expr pos:start="3207:21" pos:end="3207:44"><call pos:start="3207:21" pos:end="3207:44"><name pos:start="3207:21" pos:end="3207:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3207:41" pos:end="3207:44">(<argument pos:start="3207:42" pos:end="3207:43"><expr pos:start="3207:42" pos:end="3207:43"><name pos:start="3207:42" pos:end="3207:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3209:21" pos:end="3209:26">break;</break>

                <case pos:start="3211:17" pos:end="3211:27">case <expr pos:start="3211:22" pos:end="3211:26"><literal type="number" pos:start="3211:22" pos:end="3211:26">0x075</literal></expr>:</case> <comment type="block" pos:start="3211:29" pos:end="3211:46">/* VIS I fsrc1s */</comment>

                    <expr_stmt pos:start="3213:21" pos:end="3213:45"><expr pos:start="3213:21" pos:end="3213:44"><call pos:start="3213:21" pos:end="3213:44"><name pos:start="3213:21" pos:end="3213:39">gen_op_load_fpr_FT0</name><argument_list pos:start="3213:40" pos:end="3213:44">(<argument pos:start="3213:41" pos:end="3213:43"><expr pos:start="3213:41" pos:end="3213:43"><name pos:start="3213:41" pos:end="3213:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3215:21" pos:end="3215:45"><expr pos:start="3215:21" pos:end="3215:44"><call pos:start="3215:21" pos:end="3215:44"><name pos:start="3215:21" pos:end="3215:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3215:41" pos:end="3215:44">(<argument pos:start="3215:42" pos:end="3215:43"><expr pos:start="3215:42" pos:end="3215:43"><name pos:start="3215:42" pos:end="3215:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3217:21" pos:end="3217:26">break;</break>

                <case pos:start="3219:17" pos:end="3219:27">case <expr pos:start="3219:22" pos:end="3219:26"><literal type="number" pos:start="3219:22" pos:end="3219:26">0x076</literal></expr>:</case> <comment type="block" pos:start="3219:29" pos:end="3219:47">/* VIS I fornot2 */</comment>

                    <expr_stmt pos:start="3221:21" pos:end="3221:45"><expr pos:start="3221:21" pos:end="3221:44"><call pos:start="3221:21" pos:end="3221:44"><name pos:start="3221:21" pos:end="3221:39">gen_op_load_fpr_DT1</name><argument_list pos:start="3221:40" pos:end="3221:44">(<argument pos:start="3221:41" pos:end="3221:43"><expr pos:start="3221:41" pos:end="3221:43"><name pos:start="3221:41" pos:end="3221:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3223:21" pos:end="3223:45"><expr pos:start="3223:21" pos:end="3223:44"><call pos:start="3223:21" pos:end="3223:44"><name pos:start="3223:21" pos:end="3223:39">gen_op_load_fpr_DT0</name><argument_list pos:start="3223:40" pos:end="3223:44">(<argument pos:start="3223:41" pos:end="3223:43"><expr pos:start="3223:41" pos:end="3223:43"><name pos:start="3223:41" pos:end="3223:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3225:21" pos:end="3225:36"><expr pos:start="3225:21" pos:end="3225:35"><call pos:start="3225:21" pos:end="3225:35"><name pos:start="3225:21" pos:end="3225:33">gen_op_fornot</name><argument_list pos:start="3225:34" pos:end="3225:35">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3227:21" pos:end="3227:45"><expr pos:start="3227:21" pos:end="3227:44"><call pos:start="3227:21" pos:end="3227:44"><name pos:start="3227:21" pos:end="3227:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3227:41" pos:end="3227:44">(<argument pos:start="3227:42" pos:end="3227:43"><expr pos:start="3227:42" pos:end="3227:43"><name pos:start="3227:42" pos:end="3227:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3229:21" pos:end="3229:26">break;</break>

                <case pos:start="3231:17" pos:end="3231:27">case <expr pos:start="3231:22" pos:end="3231:26"><literal type="number" pos:start="3231:22" pos:end="3231:26">0x077</literal></expr>:</case> <comment type="block" pos:start="3231:29" pos:end="3231:48">/* VIS I fornot2s */</comment>

                    <expr_stmt pos:start="3233:21" pos:end="3233:45"><expr pos:start="3233:21" pos:end="3233:44"><call pos:start="3233:21" pos:end="3233:44"><name pos:start="3233:21" pos:end="3233:39">gen_op_load_fpr_FT1</name><argument_list pos:start="3233:40" pos:end="3233:44">(<argument pos:start="3233:41" pos:end="3233:43"><expr pos:start="3233:41" pos:end="3233:43"><name pos:start="3233:41" pos:end="3233:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3235:21" pos:end="3235:45"><expr pos:start="3235:21" pos:end="3235:44"><call pos:start="3235:21" pos:end="3235:44"><name pos:start="3235:21" pos:end="3235:39">gen_op_load_fpr_FT0</name><argument_list pos:start="3235:40" pos:end="3235:44">(<argument pos:start="3235:41" pos:end="3235:43"><expr pos:start="3235:41" pos:end="3235:43"><name pos:start="3235:41" pos:end="3235:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3237:21" pos:end="3237:37"><expr pos:start="3237:21" pos:end="3237:36"><call pos:start="3237:21" pos:end="3237:36"><name pos:start="3237:21" pos:end="3237:34">gen_op_fornots</name><argument_list pos:start="3237:35" pos:end="3237:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3239:21" pos:end="3239:45"><expr pos:start="3239:21" pos:end="3239:44"><call pos:start="3239:21" pos:end="3239:44"><name pos:start="3239:21" pos:end="3239:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3239:41" pos:end="3239:44">(<argument pos:start="3239:42" pos:end="3239:43"><expr pos:start="3239:42" pos:end="3239:43"><name pos:start="3239:42" pos:end="3239:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3241:21" pos:end="3241:26">break;</break>

                <case pos:start="3243:17" pos:end="3243:27">case <expr pos:start="3243:22" pos:end="3243:26"><literal type="number" pos:start="3243:22" pos:end="3243:26">0x078</literal></expr>:</case> <comment type="block" pos:start="3243:29" pos:end="3243:45">/* VIS I fsrc2 */</comment>

                    <expr_stmt pos:start="3245:21" pos:end="3245:45"><expr pos:start="3245:21" pos:end="3245:44"><call pos:start="3245:21" pos:end="3245:44"><name pos:start="3245:21" pos:end="3245:39">gen_op_load_fpr_DT0</name><argument_list pos:start="3245:40" pos:end="3245:44">(<argument pos:start="3245:41" pos:end="3245:43"><expr pos:start="3245:41" pos:end="3245:43"><name pos:start="3245:41" pos:end="3245:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3247:21" pos:end="3247:45"><expr pos:start="3247:21" pos:end="3247:44"><call pos:start="3247:21" pos:end="3247:44"><name pos:start="3247:21" pos:end="3247:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3247:41" pos:end="3247:44">(<argument pos:start="3247:42" pos:end="3247:43"><expr pos:start="3247:42" pos:end="3247:43"><name pos:start="3247:42" pos:end="3247:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3249:21" pos:end="3249:26">break;</break>

                <case pos:start="3251:17" pos:end="3251:27">case <expr pos:start="3251:22" pos:end="3251:26"><literal type="number" pos:start="3251:22" pos:end="3251:26">0x079</literal></expr>:</case> <comment type="block" pos:start="3251:29" pos:end="3251:46">/* VIS I fsrc2s */</comment>

                    <expr_stmt pos:start="3253:21" pos:end="3253:45"><expr pos:start="3253:21" pos:end="3253:44"><call pos:start="3253:21" pos:end="3253:44"><name pos:start="3253:21" pos:end="3253:39">gen_op_load_fpr_FT0</name><argument_list pos:start="3253:40" pos:end="3253:44">(<argument pos:start="3253:41" pos:end="3253:43"><expr pos:start="3253:41" pos:end="3253:43"><name pos:start="3253:41" pos:end="3253:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3255:21" pos:end="3255:45"><expr pos:start="3255:21" pos:end="3255:44"><call pos:start="3255:21" pos:end="3255:44"><name pos:start="3255:21" pos:end="3255:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3255:41" pos:end="3255:44">(<argument pos:start="3255:42" pos:end="3255:43"><expr pos:start="3255:42" pos:end="3255:43"><name pos:start="3255:42" pos:end="3255:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3257:21" pos:end="3257:26">break;</break>

                <case pos:start="3259:17" pos:end="3259:27">case <expr pos:start="3259:22" pos:end="3259:26"><literal type="number" pos:start="3259:22" pos:end="3259:26">0x07a</literal></expr>:</case> <comment type="block" pos:start="3259:29" pos:end="3259:47">/* VIS I fornot1 */</comment>

                    <expr_stmt pos:start="3261:21" pos:end="3261:45"><expr pos:start="3261:21" pos:end="3261:44"><call pos:start="3261:21" pos:end="3261:44"><name pos:start="3261:21" pos:end="3261:39">gen_op_load_fpr_DT0</name><argument_list pos:start="3261:40" pos:end="3261:44">(<argument pos:start="3261:41" pos:end="3261:43"><expr pos:start="3261:41" pos:end="3261:43"><name pos:start="3261:41" pos:end="3261:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3263:21" pos:end="3263:45"><expr pos:start="3263:21" pos:end="3263:44"><call pos:start="3263:21" pos:end="3263:44"><name pos:start="3263:21" pos:end="3263:39">gen_op_load_fpr_DT1</name><argument_list pos:start="3263:40" pos:end="3263:44">(<argument pos:start="3263:41" pos:end="3263:43"><expr pos:start="3263:41" pos:end="3263:43"><name pos:start="3263:41" pos:end="3263:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3265:21" pos:end="3265:36"><expr pos:start="3265:21" pos:end="3265:35"><call pos:start="3265:21" pos:end="3265:35"><name pos:start="3265:21" pos:end="3265:33">gen_op_fornot</name><argument_list pos:start="3265:34" pos:end="3265:35">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3267:21" pos:end="3267:45"><expr pos:start="3267:21" pos:end="3267:44"><call pos:start="3267:21" pos:end="3267:44"><name pos:start="3267:21" pos:end="3267:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3267:41" pos:end="3267:44">(<argument pos:start="3267:42" pos:end="3267:43"><expr pos:start="3267:42" pos:end="3267:43"><name pos:start="3267:42" pos:end="3267:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3269:21" pos:end="3269:26">break;</break>

                <case pos:start="3271:17" pos:end="3271:27">case <expr pos:start="3271:22" pos:end="3271:26"><literal type="number" pos:start="3271:22" pos:end="3271:26">0x07b</literal></expr>:</case> <comment type="block" pos:start="3271:29" pos:end="3271:48">/* VIS I fornot1s */</comment>

                    <expr_stmt pos:start="3273:21" pos:end="3273:45"><expr pos:start="3273:21" pos:end="3273:44"><call pos:start="3273:21" pos:end="3273:44"><name pos:start="3273:21" pos:end="3273:39">gen_op_load_fpr_FT0</name><argument_list pos:start="3273:40" pos:end="3273:44">(<argument pos:start="3273:41" pos:end="3273:43"><expr pos:start="3273:41" pos:end="3273:43"><name pos:start="3273:41" pos:end="3273:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3275:21" pos:end="3275:45"><expr pos:start="3275:21" pos:end="3275:44"><call pos:start="3275:21" pos:end="3275:44"><name pos:start="3275:21" pos:end="3275:39">gen_op_load_fpr_FT1</name><argument_list pos:start="3275:40" pos:end="3275:44">(<argument pos:start="3275:41" pos:end="3275:43"><expr pos:start="3275:41" pos:end="3275:43"><name pos:start="3275:41" pos:end="3275:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3277:21" pos:end="3277:37"><expr pos:start="3277:21" pos:end="3277:36"><call pos:start="3277:21" pos:end="3277:36"><name pos:start="3277:21" pos:end="3277:34">gen_op_fornots</name><argument_list pos:start="3277:35" pos:end="3277:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3279:21" pos:end="3279:45"><expr pos:start="3279:21" pos:end="3279:44"><call pos:start="3279:21" pos:end="3279:44"><name pos:start="3279:21" pos:end="3279:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3279:41" pos:end="3279:44">(<argument pos:start="3279:42" pos:end="3279:43"><expr pos:start="3279:42" pos:end="3279:43"><name pos:start="3279:42" pos:end="3279:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3281:21" pos:end="3281:26">break;</break>

                <case pos:start="3283:17" pos:end="3283:27">case <expr pos:start="3283:22" pos:end="3283:26"><literal type="number" pos:start="3283:22" pos:end="3283:26">0x07c</literal></expr>:</case> <comment type="block" pos:start="3283:29" pos:end="3283:43">/* VIS I for */</comment>

                    <expr_stmt pos:start="3285:21" pos:end="3285:45"><expr pos:start="3285:21" pos:end="3285:44"><call pos:start="3285:21" pos:end="3285:44"><name pos:start="3285:21" pos:end="3285:39">gen_op_load_fpr_DT0</name><argument_list pos:start="3285:40" pos:end="3285:44">(<argument pos:start="3285:41" pos:end="3285:43"><expr pos:start="3285:41" pos:end="3285:43"><name pos:start="3285:41" pos:end="3285:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3287:21" pos:end="3287:45"><expr pos:start="3287:21" pos:end="3287:44"><call pos:start="3287:21" pos:end="3287:44"><name pos:start="3287:21" pos:end="3287:39">gen_op_load_fpr_DT1</name><argument_list pos:start="3287:40" pos:end="3287:44">(<argument pos:start="3287:41" pos:end="3287:43"><expr pos:start="3287:41" pos:end="3287:43"><name pos:start="3287:41" pos:end="3287:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3289:21" pos:end="3289:33"><expr pos:start="3289:21" pos:end="3289:32"><call pos:start="3289:21" pos:end="3289:32"><name pos:start="3289:21" pos:end="3289:30">gen_op_for</name><argument_list pos:start="3289:31" pos:end="3289:32">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3291:21" pos:end="3291:45"><expr pos:start="3291:21" pos:end="3291:44"><call pos:start="3291:21" pos:end="3291:44"><name pos:start="3291:21" pos:end="3291:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3291:41" pos:end="3291:44">(<argument pos:start="3291:42" pos:end="3291:43"><expr pos:start="3291:42" pos:end="3291:43"><name pos:start="3291:42" pos:end="3291:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3293:21" pos:end="3293:26">break;</break>

                <case pos:start="3295:17" pos:end="3295:27">case <expr pos:start="3295:22" pos:end="3295:26"><literal type="number" pos:start="3295:22" pos:end="3295:26">0x07d</literal></expr>:</case> <comment type="block" pos:start="3295:29" pos:end="3295:44">/* VIS I fors */</comment>

                    <expr_stmt pos:start="3297:21" pos:end="3297:45"><expr pos:start="3297:21" pos:end="3297:44"><call pos:start="3297:21" pos:end="3297:44"><name pos:start="3297:21" pos:end="3297:39">gen_op_load_fpr_FT0</name><argument_list pos:start="3297:40" pos:end="3297:44">(<argument pos:start="3297:41" pos:end="3297:43"><expr pos:start="3297:41" pos:end="3297:43"><name pos:start="3297:41" pos:end="3297:43">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3299:21" pos:end="3299:45"><expr pos:start="3299:21" pos:end="3299:44"><call pos:start="3299:21" pos:end="3299:44"><name pos:start="3299:21" pos:end="3299:39">gen_op_load_fpr_FT1</name><argument_list pos:start="3299:40" pos:end="3299:44">(<argument pos:start="3299:41" pos:end="3299:43"><expr pos:start="3299:41" pos:end="3299:43"><name pos:start="3299:41" pos:end="3299:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3301:21" pos:end="3301:34"><expr pos:start="3301:21" pos:end="3301:33"><call pos:start="3301:21" pos:end="3301:33"><name pos:start="3301:21" pos:end="3301:31">gen_op_fors</name><argument_list pos:start="3301:32" pos:end="3301:33">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3303:21" pos:end="3303:45"><expr pos:start="3303:21" pos:end="3303:44"><call pos:start="3303:21" pos:end="3303:44"><name pos:start="3303:21" pos:end="3303:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3303:41" pos:end="3303:44">(<argument pos:start="3303:42" pos:end="3303:43"><expr pos:start="3303:42" pos:end="3303:43"><name pos:start="3303:42" pos:end="3303:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3305:21" pos:end="3305:26">break;</break>

                <case pos:start="3307:17" pos:end="3307:27">case <expr pos:start="3307:22" pos:end="3307:26"><literal type="number" pos:start="3307:22" pos:end="3307:26">0x07e</literal></expr>:</case> <comment type="block" pos:start="3307:29" pos:end="3307:44">/* VIS I fone */</comment>

                    <expr_stmt pos:start="3309:21" pos:end="3309:40"><expr pos:start="3309:21" pos:end="3309:39"><call pos:start="3309:21" pos:end="3309:39"><name pos:start="3309:21" pos:end="3309:37">gen_op_movl_DT0_1</name><argument_list pos:start="3309:38" pos:end="3309:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3311:21" pos:end="3311:45"><expr pos:start="3311:21" pos:end="3311:44"><call pos:start="3311:21" pos:end="3311:44"><name pos:start="3311:21" pos:end="3311:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3311:41" pos:end="3311:44">(<argument pos:start="3311:42" pos:end="3311:43"><expr pos:start="3311:42" pos:end="3311:43"><name pos:start="3311:42" pos:end="3311:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3313:21" pos:end="3313:26">break;</break>

                <case pos:start="3315:17" pos:end="3315:27">case <expr pos:start="3315:22" pos:end="3315:26"><literal type="number" pos:start="3315:22" pos:end="3315:26">0x07f</literal></expr>:</case> <comment type="block" pos:start="3315:29" pos:end="3315:45">/* VIS I fones */</comment>

                    <expr_stmt pos:start="3317:21" pos:end="3317:40"><expr pos:start="3317:21" pos:end="3317:39"><call pos:start="3317:21" pos:end="3317:39"><name pos:start="3317:21" pos:end="3317:37">gen_op_movl_FT0_1</name><argument_list pos:start="3317:38" pos:end="3317:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3319:21" pos:end="3319:45"><expr pos:start="3319:21" pos:end="3319:44"><call pos:start="3319:21" pos:end="3319:44"><name pos:start="3319:21" pos:end="3319:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3319:41" pos:end="3319:44">(<argument pos:start="3319:42" pos:end="3319:43"><expr pos:start="3319:42" pos:end="3319:43"><name pos:start="3319:42" pos:end="3319:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3321:21" pos:end="3321:26">break;</break>

                <case pos:start="3323:17" pos:end="3323:27">case <expr pos:start="3323:22" pos:end="3323:26"><literal type="number" pos:start="3323:22" pos:end="3323:26">0x080</literal></expr>:</case> <comment type="block" pos:start="3323:29" pos:end="3323:48">/* VIS I shutdown */</comment>

                <case pos:start="3325:17" pos:end="3325:27">case <expr pos:start="3325:22" pos:end="3325:26"><literal type="number" pos:start="3325:22" pos:end="3325:26">0x081</literal></expr>:</case> <comment type="block" pos:start="3325:29" pos:end="3325:45">/* VIS II siam */</comment>

                    <comment type="line" pos:start="3327:21" pos:end="3327:26">// XXX</comment>

                    <goto pos:start="3329:21" pos:end="3329:38">goto <name pos:start="3329:26" pos:end="3329:37">illegal_insn</name>;</goto>

                <default pos:start="3331:17" pos:end="3331:24">default:</default>

                    <goto pos:start="3333:21" pos:end="3333:38">goto <name pos:start="3333:26" pos:end="3333:37">illegal_insn</name>;</goto>

                </block_content>}</block></switch>

<cpp:else pos:start="3337:1" pos:end="3337:5">#<cpp:directive pos:start="3337:2" pos:end="3337:5">else</cpp:directive></cpp:else>

                <goto pos:start="3339:17" pos:end="3342:0">goto <name pos:start="3339:22" pos:end="3339:29">ncp_insn</name>;</goto>

<cpp:endif pos:start="3341:1" pos:end="3341:6">#<cpp:directive pos:start="3341:2" pos:end="3341:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></if> <if type="elseif" pos:start="3343:15" pos:end="3357:13">else if <condition pos:start="3343:23" pos:end="3343:35">(<expr pos:start="3343:24" pos:end="3343:34"><name pos:start="3343:24" pos:end="3343:26">xop</name> <operator pos:start="3343:28" pos:end="3343:29">==</operator> <literal type="number" pos:start="3343:31" pos:end="3343:34">0x37</literal></expr>)</condition> <block pos:start="3343:37" pos:end="3357:13">{<block_content pos:start="3347:17" pos:end="3356:0"> <comment type="block" pos:start="3343:39" pos:end="3343:64">/* V8 CPop2, V9 impdep2 */</comment>

<cpp:ifdef pos:start="3345:1" pos:end="3345:21">#<cpp:directive pos:start="3345:2" pos:end="3345:6">ifdef</cpp:directive> <name pos:start="3345:8" pos:end="3345:21">TARGET_SPARC64</name></cpp:ifdef>

                <goto pos:start="3347:17" pos:end="3350:0">goto <name pos:start="3347:22" pos:end="3347:33">illegal_insn</name>;</goto>

<cpp:else pos:start="3349:1" pos:end="3349:5">#<cpp:directive pos:start="3349:2" pos:end="3349:5">else</cpp:directive></cpp:else>

                <goto pos:start="3351:17" pos:end="3356:0">goto <name pos:start="3351:22" pos:end="3351:29">ncp_insn</name>;</goto>

<cpp:endif pos:start="3353:1" pos:end="3353:6">#<cpp:directive pos:start="3353:2" pos:end="3353:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3355:1" pos:end="3355:21">#<cpp:directive pos:start="3355:2" pos:end="3355:6">ifdef</cpp:directive> <name pos:start="3355:8" pos:end="3355:21">TARGET_SPARC64</name></cpp:ifdef>

            </block_content>}</block></if> <if type="elseif" pos:start="3357:15" pos:end="3421:13">else if <condition pos:start="3357:23" pos:end="3357:35">(<expr pos:start="3357:24" pos:end="3357:34"><name pos:start="3357:24" pos:end="3357:26">xop</name> <operator pos:start="3357:28" pos:end="3357:29">==</operator> <literal type="number" pos:start="3357:31" pos:end="3357:34">0x39</literal></expr>)</condition> <block pos:start="3357:37" pos:end="3421:13">{<block_content pos:start="3359:17" pos:end="3420:0"> <comment type="block" pos:start="3357:39" pos:end="3357:53">/* V9 return */</comment>

                <expr_stmt pos:start="3359:17" pos:end="3359:46"><expr pos:start="3359:17" pos:end="3359:45"><name pos:start="3359:17" pos:end="3359:19">rs1</name> <operator pos:start="3359:21" pos:end="3359:21">=</operator> <call pos:start="3359:23" pos:end="3359:45"><name pos:start="3359:23" pos:end="3359:31">GET_FIELD</name><argument_list pos:start="3359:32" pos:end="3359:45">(<argument pos:start="3359:33" pos:end="3359:36"><expr pos:start="3359:33" pos:end="3359:36"><name pos:start="3359:33" pos:end="3359:36">insn</name></expr></argument>, <argument pos:start="3359:39" pos:end="3359:40"><expr pos:start="3359:39" pos:end="3359:40"><literal type="number" pos:start="3359:39" pos:end="3359:40">13</literal></expr></argument>, <argument pos:start="3359:43" pos:end="3359:44"><expr pos:start="3359:43" pos:end="3359:44"><literal type="number" pos:start="3359:43" pos:end="3359:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3361:17" pos:end="3361:31"><expr pos:start="3361:17" pos:end="3361:30"><call pos:start="3361:17" pos:end="3361:30"><name pos:start="3361:17" pos:end="3361:26">save_state</name><argument_list pos:start="3361:27" pos:end="3361:30">(<argument pos:start="3361:28" pos:end="3361:29"><expr pos:start="3361:28" pos:end="3361:29"><name pos:start="3361:28" pos:end="3361:29">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3363:17" pos:end="3363:37"><expr pos:start="3363:17" pos:end="3363:36"><call pos:start="3363:17" pos:end="3363:36"><name pos:start="3363:17" pos:end="3363:31">gen_movl_reg_T0</name><argument_list pos:start="3363:32" pos:end="3363:36">(<argument pos:start="3363:33" pos:end="3363:35"><expr pos:start="3363:33" pos:end="3363:35"><name pos:start="3363:33" pos:end="3363:35">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="3365:17" pos:end="3405:17"><if pos:start="3365:17" pos:end="3385:17">if <condition pos:start="3365:20" pos:end="3365:27">(<expr pos:start="3365:21" pos:end="3365:26"><name pos:start="3365:21" pos:end="3365:26">IS_IMM</name></expr>)</condition> <block pos:start="3365:29" pos:end="3385:17">{<block_content pos:start="3367:21" pos:end="3384:0">   <comment type="block" pos:start="3365:33" pos:end="3365:47">/* immediate */</comment>

                    <expr_stmt pos:start="3367:21" pos:end="3370:0"><expr pos:start="3367:21" pos:end="3367:50"><name pos:start="3367:21" pos:end="3367:23">rs2</name> <operator pos:start="3367:25" pos:end="3367:25">=</operator> <call pos:start="3367:27" pos:end="3367:50"><name pos:start="3367:27" pos:end="3367:36">GET_FIELDs</name><argument_list pos:start="3367:37" pos:end="3367:50">(<argument pos:start="3367:38" pos:end="3367:41"><expr pos:start="3367:38" pos:end="3367:41"><name pos:start="3367:38" pos:end="3367:41">insn</name></expr></argument>, <argument pos:start="3367:44" pos:end="3367:45"><expr pos:start="3367:44" pos:end="3367:45"><literal type="number" pos:start="3367:44" pos:end="3367:45">19</literal></expr></argument>, <argument pos:start="3367:48" pos:end="3367:49"><expr pos:start="3367:48" pos:end="3367:49"><literal type="number" pos:start="3367:48" pos:end="3367:49">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="3369:1" pos:end="3369:18">#<cpp:directive pos:start="3369:2" pos:end="3369:3">if</cpp:directive> <expr pos:start="3369:5" pos:end="3369:18"><call pos:start="3369:5" pos:end="3369:18"><name pos:start="3369:5" pos:end="3369:11">defined</name><argument_list pos:start="3369:12" pos:end="3369:18">(<argument pos:start="3369:13" pos:end="3369:17"><expr pos:start="3369:13" pos:end="3369:17"><name pos:start="3369:13" pos:end="3369:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                    <if_stmt pos:start="3371:21" pos:end="3384:0"><if pos:start="3371:21" pos:end="3384:0">if <condition pos:start="3371:24" pos:end="3371:28">(<expr pos:start="3371:25" pos:end="3371:27"><name pos:start="3371:25" pos:end="3371:27">rs2</name></expr>)</condition> <block pos:start="3371:30" pos:end="3384:0">{<block_content pos:start="3375:25" pos:end="3380:0">

<cpp:endif pos:start="3373:1" pos:end="3373:6">#<cpp:directive pos:start="3373:2" pos:end="3373:6">endif</cpp:directive></cpp:endif>

                        <expr_stmt pos:start="3375:25" pos:end="3375:46"><expr pos:start="3375:25" pos:end="3375:45"><call pos:start="3375:25" pos:end="3375:45"><name pos:start="3375:25" pos:end="3375:40">gen_movl_simm_T1</name><argument_list pos:start="3375:41" pos:end="3375:45">(<argument pos:start="3375:42" pos:end="3375:44"><expr pos:start="3375:42" pos:end="3375:44"><name pos:start="3375:42" pos:end="3375:44">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3377:25" pos:end="3380:0"><expr pos:start="3377:25" pos:end="3377:42"><call pos:start="3377:25" pos:end="3377:42"><name pos:start="3377:25" pos:end="3377:40">gen_op_add_T1_T0</name><argument_list pos:start="3377:41" pos:end="3377:42">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="3379:1" pos:end="3379:18">#<cpp:directive pos:start="3379:2" pos:end="3379:3">if</cpp:directive> <expr pos:start="3379:5" pos:end="3379:18"><call pos:start="3379:5" pos:end="3379:18"><name pos:start="3379:5" pos:end="3379:11">defined</name><argument_list pos:start="3379:12" pos:end="3379:18">(<argument pos:start="3379:13" pos:end="3379:17"><expr pos:start="3379:13" pos:end="3379:17"><name pos:start="3379:13" pos:end="3379:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="3383:1" pos:end="3383:6">#<cpp:directive pos:start="3383:2" pos:end="3383:6">endif</cpp:directive></cpp:endif>

                </block_content>}</block></if> <else pos:start="3385:19" pos:end="3405:17">else <block pos:start="3385:24" pos:end="3405:17">{<block_content pos:start="3387:21" pos:end="3404:0">                <comment type="block" pos:start="3385:41" pos:end="3385:54">/* register */</comment>

                    <expr_stmt pos:start="3387:21" pos:end="3390:0"><expr pos:start="3387:21" pos:end="3387:49"><name pos:start="3387:21" pos:end="3387:23">rs2</name> <operator pos:start="3387:25" pos:end="3387:25">=</operator> <call pos:start="3387:27" pos:end="3387:49"><name pos:start="3387:27" pos:end="3387:35">GET_FIELD</name><argument_list pos:start="3387:36" pos:end="3387:49">(<argument pos:start="3387:37" pos:end="3387:40"><expr pos:start="3387:37" pos:end="3387:40"><name pos:start="3387:37" pos:end="3387:40">insn</name></expr></argument>, <argument pos:start="3387:43" pos:end="3387:44"><expr pos:start="3387:43" pos:end="3387:44"><literal type="number" pos:start="3387:43" pos:end="3387:44">27</literal></expr></argument>, <argument pos:start="3387:47" pos:end="3387:48"><expr pos:start="3387:47" pos:end="3387:48"><literal type="number" pos:start="3387:47" pos:end="3387:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="3389:1" pos:end="3389:18">#<cpp:directive pos:start="3389:2" pos:end="3389:3">if</cpp:directive> <expr pos:start="3389:5" pos:end="3389:18"><call pos:start="3389:5" pos:end="3389:18"><name pos:start="3389:5" pos:end="3389:11">defined</name><argument_list pos:start="3389:12" pos:end="3389:18">(<argument pos:start="3389:13" pos:end="3389:17"><expr pos:start="3389:13" pos:end="3389:17"><name pos:start="3389:13" pos:end="3389:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                    <if_stmt pos:start="3391:21" pos:end="3404:0"><if pos:start="3391:21" pos:end="3404:0">if <condition pos:start="3391:24" pos:end="3391:28">(<expr pos:start="3391:25" pos:end="3391:27"><name pos:start="3391:25" pos:end="3391:27">rs2</name></expr>)</condition> <block pos:start="3391:30" pos:end="3404:0">{<block_content pos:start="3395:25" pos:end="3400:0">

<cpp:endif pos:start="3393:1" pos:end="3393:6">#<cpp:directive pos:start="3393:2" pos:end="3393:6">endif</cpp:directive></cpp:endif>

                        <expr_stmt pos:start="3395:25" pos:end="3395:45"><expr pos:start="3395:25" pos:end="3395:44"><call pos:start="3395:25" pos:end="3395:44"><name pos:start="3395:25" pos:end="3395:39">gen_movl_reg_T1</name><argument_list pos:start="3395:40" pos:end="3395:44">(<argument pos:start="3395:41" pos:end="3395:43"><expr pos:start="3395:41" pos:end="3395:43"><name pos:start="3395:41" pos:end="3395:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3397:25" pos:end="3400:0"><expr pos:start="3397:25" pos:end="3397:42"><call pos:start="3397:25" pos:end="3397:42"><name pos:start="3397:25" pos:end="3397:40">gen_op_add_T1_T0</name><argument_list pos:start="3397:41" pos:end="3397:42">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="3399:1" pos:end="3399:18">#<cpp:directive pos:start="3399:2" pos:end="3399:3">if</cpp:directive> <expr pos:start="3399:5" pos:end="3399:18"><call pos:start="3399:5" pos:end="3399:18"><name pos:start="3399:5" pos:end="3399:11">defined</name><argument_list pos:start="3399:12" pos:end="3399:18">(<argument pos:start="3399:13" pos:end="3399:17"><expr pos:start="3399:13" pos:end="3399:17"><name pos:start="3399:13" pos:end="3399:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="3403:1" pos:end="3403:6">#<cpp:directive pos:start="3403:2" pos:end="3403:6">endif</cpp:directive></cpp:endif>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="3407:17" pos:end="3407:33"><expr pos:start="3407:17" pos:end="3407:32"><call pos:start="3407:17" pos:end="3407:32"><name pos:start="3407:17" pos:end="3407:30">gen_op_restore</name><argument_list pos:start="3407:31" pos:end="3407:32">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3409:17" pos:end="3409:35"><expr pos:start="3409:17" pos:end="3409:34"><call pos:start="3409:17" pos:end="3409:34"><name pos:start="3409:17" pos:end="3409:30">gen_mov_pc_npc</name><argument_list pos:start="3409:31" pos:end="3409:34">(<argument pos:start="3409:32" pos:end="3409:33"><expr pos:start="3409:32" pos:end="3409:33"><name pos:start="3409:32" pos:end="3409:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3411:17" pos:end="3411:42"><expr pos:start="3411:17" pos:end="3411:41"><call pos:start="3411:17" pos:end="3411:41"><name pos:start="3411:17" pos:end="3411:39">gen_op_check_align_T0_3</name><argument_list pos:start="3411:40" pos:end="3411:41">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3413:17" pos:end="3413:37"><expr pos:start="3413:17" pos:end="3413:36"><call pos:start="3413:17" pos:end="3413:36"><name pos:start="3413:17" pos:end="3413:34">gen_op_movl_npc_T0</name><argument_list pos:start="3413:35" pos:end="3413:36">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3415:17" pos:end="3415:37"><expr pos:start="3415:17" pos:end="3415:36"><name pos:start="3415:17" pos:end="3415:23"><name pos:start="3415:17" pos:end="3415:18">dc</name><operator pos:start="3415:19" pos:end="3415:20">-&gt;</operator><name pos:start="3415:21" pos:end="3415:23">npc</name></name> <operator pos:start="3415:25" pos:end="3415:25">=</operator> <name pos:start="3415:27" pos:end="3415:36">DYNAMIC_PC</name></expr>;</expr_stmt>

                <goto pos:start="3417:17" pos:end="3420:0">goto <name pos:start="3417:22" pos:end="3417:29">jmp_insn</name>;</goto>

<cpp:endif pos:start="3419:1" pos:end="3419:6">#<cpp:directive pos:start="3419:2" pos:end="3419:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></if> <else pos:start="3421:15" pos:end="3617:13">else <block pos:start="3421:20" pos:end="3617:13">{<block_content pos:start="3423:17" pos:end="3615:17">

                <expr_stmt pos:start="3423:17" pos:end="3423:46"><expr pos:start="3423:17" pos:end="3423:45"><name pos:start="3423:17" pos:end="3423:19">rs1</name> <operator pos:start="3423:21" pos:end="3423:21">=</operator> <call pos:start="3423:23" pos:end="3423:45"><name pos:start="3423:23" pos:end="3423:31">GET_FIELD</name><argument_list pos:start="3423:32" pos:end="3423:45">(<argument pos:start="3423:33" pos:end="3423:36"><expr pos:start="3423:33" pos:end="3423:36"><name pos:start="3423:33" pos:end="3423:36">insn</name></expr></argument>, <argument pos:start="3423:39" pos:end="3423:40"><expr pos:start="3423:39" pos:end="3423:40"><literal type="number" pos:start="3423:39" pos:end="3423:40">13</literal></expr></argument>, <argument pos:start="3423:43" pos:end="3423:44"><expr pos:start="3423:43" pos:end="3423:44"><literal type="number" pos:start="3423:43" pos:end="3423:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3425:17" pos:end="3425:37"><expr pos:start="3425:17" pos:end="3425:36"><call pos:start="3425:17" pos:end="3425:36"><name pos:start="3425:17" pos:end="3425:31">gen_movl_reg_T0</name><argument_list pos:start="3425:32" pos:end="3425:36">(<argument pos:start="3425:33" pos:end="3425:35"><expr pos:start="3425:33" pos:end="3425:35"><name pos:start="3425:33" pos:end="3425:35">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="3427:17" pos:end="3467:17"><if pos:start="3427:17" pos:end="3447:17">if <condition pos:start="3427:20" pos:end="3427:27">(<expr pos:start="3427:21" pos:end="3427:26"><name pos:start="3427:21" pos:end="3427:26">IS_IMM</name></expr>)</condition> <block pos:start="3427:29" pos:end="3447:17">{<block_content pos:start="3429:21" pos:end="3446:0">   <comment type="block" pos:start="3427:33" pos:end="3427:47">/* immediate */</comment>

                    <expr_stmt pos:start="3429:21" pos:end="3432:0"><expr pos:start="3429:21" pos:end="3429:50"><name pos:start="3429:21" pos:end="3429:23">rs2</name> <operator pos:start="3429:25" pos:end="3429:25">=</operator> <call pos:start="3429:27" pos:end="3429:50"><name pos:start="3429:27" pos:end="3429:36">GET_FIELDs</name><argument_list pos:start="3429:37" pos:end="3429:50">(<argument pos:start="3429:38" pos:end="3429:41"><expr pos:start="3429:38" pos:end="3429:41"><name pos:start="3429:38" pos:end="3429:41">insn</name></expr></argument>, <argument pos:start="3429:44" pos:end="3429:45"><expr pos:start="3429:44" pos:end="3429:45"><literal type="number" pos:start="3429:44" pos:end="3429:45">19</literal></expr></argument>, <argument pos:start="3429:48" pos:end="3429:49"><expr pos:start="3429:48" pos:end="3429:49"><literal type="number" pos:start="3429:48" pos:end="3429:49">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="3431:1" pos:end="3431:18">#<cpp:directive pos:start="3431:2" pos:end="3431:3">if</cpp:directive> <expr pos:start="3431:5" pos:end="3431:18"><call pos:start="3431:5" pos:end="3431:18"><name pos:start="3431:5" pos:end="3431:11">defined</name><argument_list pos:start="3431:12" pos:end="3431:18">(<argument pos:start="3431:13" pos:end="3431:17"><expr pos:start="3431:13" pos:end="3431:17"><name pos:start="3431:13" pos:end="3431:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                    <if_stmt pos:start="3433:21" pos:end="3446:0"><if pos:start="3433:21" pos:end="3446:0">if <condition pos:start="3433:24" pos:end="3433:28">(<expr pos:start="3433:25" pos:end="3433:27"><name pos:start="3433:25" pos:end="3433:27">rs2</name></expr>)</condition> <block pos:start="3433:30" pos:end="3446:0">{<block_content pos:start="3437:25" pos:end="3442:0">

<cpp:endif pos:start="3435:1" pos:end="3435:6">#<cpp:directive pos:start="3435:2" pos:end="3435:6">endif</cpp:directive></cpp:endif>

                        <expr_stmt pos:start="3437:25" pos:end="3437:46"><expr pos:start="3437:25" pos:end="3437:45"><call pos:start="3437:25" pos:end="3437:45"><name pos:start="3437:25" pos:end="3437:40">gen_movl_simm_T1</name><argument_list pos:start="3437:41" pos:end="3437:45">(<argument pos:start="3437:42" pos:end="3437:44"><expr pos:start="3437:42" pos:end="3437:44"><name pos:start="3437:42" pos:end="3437:44">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3439:25" pos:end="3442:0"><expr pos:start="3439:25" pos:end="3439:42"><call pos:start="3439:25" pos:end="3439:42"><name pos:start="3439:25" pos:end="3439:40">gen_op_add_T1_T0</name><argument_list pos:start="3439:41" pos:end="3439:42">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="3441:1" pos:end="3441:18">#<cpp:directive pos:start="3441:2" pos:end="3441:3">if</cpp:directive> <expr pos:start="3441:5" pos:end="3441:18"><call pos:start="3441:5" pos:end="3441:18"><name pos:start="3441:5" pos:end="3441:11">defined</name><argument_list pos:start="3441:12" pos:end="3441:18">(<argument pos:start="3441:13" pos:end="3441:17"><expr pos:start="3441:13" pos:end="3441:17"><name pos:start="3441:13" pos:end="3441:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="3445:1" pos:end="3445:6">#<cpp:directive pos:start="3445:2" pos:end="3445:6">endif</cpp:directive></cpp:endif>

                </block_content>}</block></if> <else pos:start="3447:19" pos:end="3467:17">else <block pos:start="3447:24" pos:end="3467:17">{<block_content pos:start="3449:21" pos:end="3466:0">                <comment type="block" pos:start="3447:41" pos:end="3447:54">/* register */</comment>

                    <expr_stmt pos:start="3449:21" pos:end="3452:0"><expr pos:start="3449:21" pos:end="3449:49"><name pos:start="3449:21" pos:end="3449:23">rs2</name> <operator pos:start="3449:25" pos:end="3449:25">=</operator> <call pos:start="3449:27" pos:end="3449:49"><name pos:start="3449:27" pos:end="3449:35">GET_FIELD</name><argument_list pos:start="3449:36" pos:end="3449:49">(<argument pos:start="3449:37" pos:end="3449:40"><expr pos:start="3449:37" pos:end="3449:40"><name pos:start="3449:37" pos:end="3449:40">insn</name></expr></argument>, <argument pos:start="3449:43" pos:end="3449:44"><expr pos:start="3449:43" pos:end="3449:44"><literal type="number" pos:start="3449:43" pos:end="3449:44">27</literal></expr></argument>, <argument pos:start="3449:47" pos:end="3449:48"><expr pos:start="3449:47" pos:end="3449:48"><literal type="number" pos:start="3449:47" pos:end="3449:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="3451:1" pos:end="3451:18">#<cpp:directive pos:start="3451:2" pos:end="3451:3">if</cpp:directive> <expr pos:start="3451:5" pos:end="3451:18"><call pos:start="3451:5" pos:end="3451:18"><name pos:start="3451:5" pos:end="3451:11">defined</name><argument_list pos:start="3451:12" pos:end="3451:18">(<argument pos:start="3451:13" pos:end="3451:17"><expr pos:start="3451:13" pos:end="3451:17"><name pos:start="3451:13" pos:end="3451:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                    <if_stmt pos:start="3453:21" pos:end="3466:0"><if pos:start="3453:21" pos:end="3466:0">if <condition pos:start="3453:24" pos:end="3453:28">(<expr pos:start="3453:25" pos:end="3453:27"><name pos:start="3453:25" pos:end="3453:27">rs2</name></expr>)</condition> <block pos:start="3453:30" pos:end="3466:0">{<block_content pos:start="3457:25" pos:end="3462:0">

<cpp:endif pos:start="3455:1" pos:end="3455:6">#<cpp:directive pos:start="3455:2" pos:end="3455:6">endif</cpp:directive></cpp:endif>

                        <expr_stmt pos:start="3457:25" pos:end="3457:45"><expr pos:start="3457:25" pos:end="3457:44"><call pos:start="3457:25" pos:end="3457:44"><name pos:start="3457:25" pos:end="3457:39">gen_movl_reg_T1</name><argument_list pos:start="3457:40" pos:end="3457:44">(<argument pos:start="3457:41" pos:end="3457:43"><expr pos:start="3457:41" pos:end="3457:43"><name pos:start="3457:41" pos:end="3457:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3459:25" pos:end="3462:0"><expr pos:start="3459:25" pos:end="3459:42"><call pos:start="3459:25" pos:end="3459:42"><name pos:start="3459:25" pos:end="3459:40">gen_op_add_T1_T0</name><argument_list pos:start="3459:41" pos:end="3459:42">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="3461:1" pos:end="3461:18">#<cpp:directive pos:start="3461:2" pos:end="3461:3">if</cpp:directive> <expr pos:start="3461:5" pos:end="3461:18"><call pos:start="3461:5" pos:end="3461:18"><name pos:start="3461:5" pos:end="3461:11">defined</name><argument_list pos:start="3461:12" pos:end="3461:18">(<argument pos:start="3461:13" pos:end="3461:17"><expr pos:start="3461:13" pos:end="3461:17"><name pos:start="3461:13" pos:end="3461:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="3465:1" pos:end="3465:6">#<cpp:directive pos:start="3465:2" pos:end="3465:6">endif</cpp:directive></cpp:endif>

                </block_content>}</block></else></if_stmt>

                <switch pos:start="3469:17" pos:end="3615:17">switch <condition pos:start="3469:24" pos:end="3469:28">(<expr pos:start="3469:25" pos:end="3469:27"><name pos:start="3469:25" pos:end="3469:27">xop</name></expr>)</condition> <block pos:start="3469:30" pos:end="3615:17">{<block_content pos:start="3471:17" pos:end="3613:38">

                <case pos:start="3471:17" pos:end="3471:26">case <expr pos:start="3471:22" pos:end="3471:25"><literal type="number" pos:start="3471:22" pos:end="3471:25">0x38</literal></expr>:</case>      <comment type="block" pos:start="3471:33" pos:end="3471:42">/* jmpl */</comment>

                    <block pos:start="3473:21" pos:end="3507:21">{<block_content pos:start="3475:25" pos:end="3505:45">

                        <if_stmt pos:start="3475:25" pos:end="3497:25"><if pos:start="3475:25" pos:end="3497:25">if <condition pos:start="3475:28" pos:end="3475:36">(<expr pos:start="3475:29" pos:end="3475:35"><name pos:start="3475:29" pos:end="3475:30">rd</name> <operator pos:start="3475:32" pos:end="3475:33">!=</operator> <literal type="number" pos:start="3475:35" pos:end="3475:35">0</literal></expr>)</condition> <block pos:start="3475:38" pos:end="3497:25">{<block_content pos:start="3479:29" pos:end="3495:48">

<cpp:ifdef pos:start="3477:1" pos:end="3477:21">#<cpp:directive pos:start="3477:2" pos:end="3477:6">ifdef</cpp:directive> <name pos:start="3477:8" pos:end="3477:21">TARGET_SPARC64</name></cpp:ifdef>

                            <if_stmt pos:start="3479:29" pos:end="3490:0"><if pos:start="3479:29" pos:end="3483:29">if <condition pos:start="3479:32" pos:end="3479:59">(<expr pos:start="3479:33" pos:end="3479:58"><name pos:start="3479:33" pos:end="3479:38"><name pos:start="3479:33" pos:end="3479:34">dc</name><operator pos:start="3479:35" pos:end="3479:36">-&gt;</operator><name pos:start="3479:37" pos:end="3479:38">pc</name></name> <operator pos:start="3479:40" pos:end="3479:41">==</operator> <operator pos:start="3479:43" pos:end="3479:43">(</operator><name pos:start="3479:44" pos:end="3479:51">uint32_t</name><operator pos:start="3479:52" pos:end="3479:52">)</operator><name pos:start="3479:53" pos:end="3479:58"><name pos:start="3479:53" pos:end="3479:54">dc</name><operator pos:start="3479:55" pos:end="3479:56">-&gt;</operator><name pos:start="3479:57" pos:end="3479:58">pc</name></name></expr>)</condition> <block pos:start="3479:61" pos:end="3483:29">{<block_content pos:start="3481:33" pos:end="3481:58">

                                <expr_stmt pos:start="3481:33" pos:end="3481:58"><expr pos:start="3481:33" pos:end="3481:57"><call pos:start="3481:33" pos:end="3481:57"><name pos:start="3481:33" pos:end="3481:49">gen_op_movl_T1_im</name><argument_list pos:start="3481:50" pos:end="3481:57">(<argument pos:start="3481:51" pos:end="3481:56"><expr pos:start="3481:51" pos:end="3481:56"><name pos:start="3481:51" pos:end="3481:56"><name pos:start="3481:51" pos:end="3481:52">dc</name><operator pos:start="3481:53" pos:end="3481:54">-&gt;</operator><name pos:start="3481:55" pos:end="3481:56">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="3483:31" pos:end="3490:0">else <block pos:start="3483:36" pos:end="3490:0">{<block_content pos:start="3485:33" pos:end="3485:74">

                                <expr_stmt pos:start="3485:33" pos:end="3485:74"><expr pos:start="3485:33" pos:end="3485:73"><call pos:start="3485:33" pos:end="3485:73"><name pos:start="3485:33" pos:end="3485:51">gen_op_movq_T1_im64</name><argument_list pos:start="3485:52" pos:end="3485:73">(<argument pos:start="3485:53" pos:end="3485:64"><expr pos:start="3485:53" pos:end="3485:64"><name pos:start="3485:53" pos:end="3485:58"><name pos:start="3485:53" pos:end="3485:54">dc</name><operator pos:start="3485:55" pos:end="3485:56">-&gt;</operator><name pos:start="3485:57" pos:end="3485:58">pc</name></name> <operator pos:start="3485:60" pos:end="3485:61">&gt;&gt;</operator> <literal type="number" pos:start="3485:63" pos:end="3485:64">32</literal></expr></argument>, <argument pos:start="3485:67" pos:end="3485:72"><expr pos:start="3485:67" pos:end="3485:72"><name pos:start="3485:67" pos:end="3485:72"><name pos:start="3485:67" pos:end="3485:68">dc</name><operator pos:start="3485:69" pos:end="3485:70">-&gt;</operator><name pos:start="3485:71" pos:end="3485:72">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

<cpp:else pos:start="3489:1" pos:end="3489:5">#<cpp:directive pos:start="3489:2" pos:end="3489:5">else</cpp:directive></cpp:else>

                            <expr_stmt pos:start="3491:29" pos:end="3494:0"><expr pos:start="3491:29" pos:end="3491:53"><call pos:start="3491:29" pos:end="3491:53"><name pos:start="3491:29" pos:end="3491:45">gen_op_movl_T1_im</name><argument_list pos:start="3491:46" pos:end="3491:53">(<argument pos:start="3491:47" pos:end="3491:52"><expr pos:start="3491:47" pos:end="3491:52"><name pos:start="3491:47" pos:end="3491:52"><name pos:start="3491:47" pos:end="3491:48">dc</name><operator pos:start="3491:49" pos:end="3491:50">-&gt;</operator><name pos:start="3491:51" pos:end="3491:52">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3493:1" pos:end="3493:6">#<cpp:directive pos:start="3493:2" pos:end="3493:6">endif</cpp:directive></cpp:endif>

                            <expr_stmt pos:start="3495:29" pos:end="3495:48"><expr pos:start="3495:29" pos:end="3495:47"><call pos:start="3495:29" pos:end="3495:47"><name pos:start="3495:29" pos:end="3495:43">gen_movl_T1_reg</name><argument_list pos:start="3495:44" pos:end="3495:47">(<argument pos:start="3495:45" pos:end="3495:46"><expr pos:start="3495:45" pos:end="3495:46"><name pos:start="3495:45" pos:end="3495:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="3499:25" pos:end="3499:43"><expr pos:start="3499:25" pos:end="3499:42"><call pos:start="3499:25" pos:end="3499:42"><name pos:start="3499:25" pos:end="3499:38">gen_mov_pc_npc</name><argument_list pos:start="3499:39" pos:end="3499:42">(<argument pos:start="3499:40" pos:end="3499:41"><expr pos:start="3499:40" pos:end="3499:41"><name pos:start="3499:40" pos:end="3499:41">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3501:25" pos:end="3501:50"><expr pos:start="3501:25" pos:end="3501:49"><call pos:start="3501:25" pos:end="3501:49"><name pos:start="3501:25" pos:end="3501:47">gen_op_check_align_T0_3</name><argument_list pos:start="3501:48" pos:end="3501:49">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3503:25" pos:end="3503:45"><expr pos:start="3503:25" pos:end="3503:44"><call pos:start="3503:25" pos:end="3503:44"><name pos:start="3503:25" pos:end="3503:42">gen_op_movl_npc_T0</name><argument_list pos:start="3503:43" pos:end="3503:44">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3505:25" pos:end="3505:45"><expr pos:start="3505:25" pos:end="3505:44"><name pos:start="3505:25" pos:end="3505:31"><name pos:start="3505:25" pos:end="3505:26">dc</name><operator pos:start="3505:27" pos:end="3505:28">-&gt;</operator><name pos:start="3505:29" pos:end="3505:31">npc</name></name> <operator pos:start="3505:33" pos:end="3505:33">=</operator> <name pos:start="3505:35" pos:end="3505:44">DYNAMIC_PC</name></expr>;</expr_stmt>

                    </block_content>}</block>

                    <goto pos:start="3509:21" pos:end="3512:0">goto <name pos:start="3509:26" pos:end="3509:33">jmp_insn</name>;</goto>

<cpp:if pos:start="3511:1" pos:end="3511:58">#<cpp:directive pos:start="3511:2" pos:end="3511:3">if</cpp:directive> <expr pos:start="3511:5" pos:end="3511:58"><operator pos:start="3511:5" pos:end="3511:5">!</operator><call pos:start="3511:6" pos:end="3511:30"><name pos:start="3511:6" pos:end="3511:12">defined</name><argument_list pos:start="3511:13" pos:end="3511:30">(<argument pos:start="3511:14" pos:end="3511:29"><expr pos:start="3511:14" pos:end="3511:29"><name pos:start="3511:14" pos:end="3511:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call> <operator pos:start="3511:32" pos:end="3511:33">&amp;&amp;</operator> <operator pos:start="3511:35" pos:end="3511:35">!</operator><call pos:start="3511:36" pos:end="3511:58"><name pos:start="3511:36" pos:end="3511:42">defined</name><argument_list pos:start="3511:43" pos:end="3511:58">(<argument pos:start="3511:44" pos:end="3511:57"><expr pos:start="3511:44" pos:end="3511:57"><name pos:start="3511:44" pos:end="3511:57">TARGET_SPARC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <case pos:start="3513:17" pos:end="3513:26">case <expr pos:start="3513:22" pos:end="3513:25"><literal type="number" pos:start="3513:22" pos:end="3513:25">0x39</literal></expr>:</case>      <comment type="block" pos:start="3513:33" pos:end="3513:53">/* rett, V9 return */</comment>

                    <block pos:start="3515:21" pos:end="3531:21">{<block_content pos:start="3517:25" pos:end="3529:38">

                        <if_stmt pos:start="3517:25" pos:end="3519:43"><if pos:start="3517:25" pos:end="3519:43">if <condition pos:start="3517:28" pos:end="3517:44">(<expr pos:start="3517:29" pos:end="3517:43"><operator pos:start="3517:29" pos:end="3517:29">!</operator><call pos:start="3517:30" pos:end="3517:43"><name pos:start="3517:30" pos:end="3517:39">supervisor</name><argument_list pos:start="3517:40" pos:end="3517:43">(<argument pos:start="3517:41" pos:end="3517:42"><expr pos:start="3517:41" pos:end="3517:42"><name pos:start="3517:41" pos:end="3517:42">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3519:29" pos:end="3519:43"><block_content pos:start="3519:29" pos:end="3519:43">

                            <goto pos:start="3519:29" pos:end="3519:43">goto <name pos:start="3519:34" pos:end="3519:42">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="3521:25" pos:end="3521:43"><expr pos:start="3521:25" pos:end="3521:42"><call pos:start="3521:25" pos:end="3521:42"><name pos:start="3521:25" pos:end="3521:38">gen_mov_pc_npc</name><argument_list pos:start="3521:39" pos:end="3521:42">(<argument pos:start="3521:40" pos:end="3521:41"><expr pos:start="3521:40" pos:end="3521:41"><name pos:start="3521:40" pos:end="3521:41">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3523:25" pos:end="3523:50"><expr pos:start="3523:25" pos:end="3523:49"><call pos:start="3523:25" pos:end="3523:49"><name pos:start="3523:25" pos:end="3523:47">gen_op_check_align_T0_3</name><argument_list pos:start="3523:48" pos:end="3523:49">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3525:25" pos:end="3525:45"><expr pos:start="3525:25" pos:end="3525:44"><call pos:start="3525:25" pos:end="3525:44"><name pos:start="3525:25" pos:end="3525:42">gen_op_movl_npc_T0</name><argument_list pos:start="3525:43" pos:end="3525:44">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="3527:25" pos:end="3527:45"><expr pos:start="3527:25" pos:end="3527:44"><name pos:start="3527:25" pos:end="3527:31"><name pos:start="3527:25" pos:end="3527:26">dc</name><operator pos:start="3527:27" pos:end="3527:28">-&gt;</operator><name pos:start="3527:29" pos:end="3527:31">npc</name></name> <operator pos:start="3527:33" pos:end="3527:33">=</operator> <name pos:start="3527:35" pos:end="3527:44">DYNAMIC_PC</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="3529:25" pos:end="3529:38"><expr pos:start="3529:25" pos:end="3529:37"><call pos:start="3529:25" pos:end="3529:37"><name pos:start="3529:25" pos:end="3529:35">gen_op_rett</name><argument_list pos:start="3529:36" pos:end="3529:37">()</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block>

                    <goto pos:start="3533:21" pos:end="3536:0">goto <name pos:start="3533:26" pos:end="3533:33">jmp_insn</name>;</goto>

<cpp:endif pos:start="3535:1" pos:end="3535:6">#<cpp:directive pos:start="3535:2" pos:end="3535:6">endif</cpp:directive></cpp:endif>

                <case pos:start="3537:17" pos:end="3537:26">case <expr pos:start="3537:22" pos:end="3537:25"><literal type="number" pos:start="3537:22" pos:end="3537:25">0x3b</literal></expr>:</case> <comment type="block" pos:start="3537:28" pos:end="3537:38">/* flush */</comment>

                    <expr_stmt pos:start="3539:21" pos:end="3539:38"><expr pos:start="3539:21" pos:end="3539:37"><call pos:start="3539:21" pos:end="3539:37"><name pos:start="3539:21" pos:end="3539:35">gen_op_flush_T0</name><argument_list pos:start="3539:36" pos:end="3539:37">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3541:21" pos:end="3541:26">break;</break>

                <case pos:start="3543:17" pos:end="3543:26">case <expr pos:start="3543:22" pos:end="3543:25"><literal type="number" pos:start="3543:22" pos:end="3543:25">0x3c</literal></expr>:</case>      <comment type="block" pos:start="3543:33" pos:end="3543:42">/* save */</comment>

                    <expr_stmt pos:start="3545:21" pos:end="3545:35"><expr pos:start="3545:21" pos:end="3545:34"><call pos:start="3545:21" pos:end="3545:34"><name pos:start="3545:21" pos:end="3545:30">save_state</name><argument_list pos:start="3545:31" pos:end="3545:34">(<argument pos:start="3545:32" pos:end="3545:33"><expr pos:start="3545:32" pos:end="3545:33"><name pos:start="3545:32" pos:end="3545:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3547:21" pos:end="3547:34"><expr pos:start="3547:21" pos:end="3547:33"><call pos:start="3547:21" pos:end="3547:33"><name pos:start="3547:21" pos:end="3547:31">gen_op_save</name><argument_list pos:start="3547:32" pos:end="3547:33">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3549:21" pos:end="3549:40"><expr pos:start="3549:21" pos:end="3549:39"><call pos:start="3549:21" pos:end="3549:39"><name pos:start="3549:21" pos:end="3549:35">gen_movl_T0_reg</name><argument_list pos:start="3549:36" pos:end="3549:39">(<argument pos:start="3549:37" pos:end="3549:38"><expr pos:start="3549:37" pos:end="3549:38"><name pos:start="3549:37" pos:end="3549:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3551:21" pos:end="3551:26">break;</break>

                <case pos:start="3553:17" pos:end="3553:26">case <expr pos:start="3553:22" pos:end="3553:25"><literal type="number" pos:start="3553:22" pos:end="3553:25">0x3d</literal></expr>:</case>      <comment type="block" pos:start="3553:33" pos:end="3553:45">/* restore */</comment>

                    <expr_stmt pos:start="3555:21" pos:end="3555:35"><expr pos:start="3555:21" pos:end="3555:34"><call pos:start="3555:21" pos:end="3555:34"><name pos:start="3555:21" pos:end="3555:30">save_state</name><argument_list pos:start="3555:31" pos:end="3555:34">(<argument pos:start="3555:32" pos:end="3555:33"><expr pos:start="3555:32" pos:end="3555:33"><name pos:start="3555:32" pos:end="3555:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3557:21" pos:end="3557:37"><expr pos:start="3557:21" pos:end="3557:36"><call pos:start="3557:21" pos:end="3557:36"><name pos:start="3557:21" pos:end="3557:34">gen_op_restore</name><argument_list pos:start="3557:35" pos:end="3557:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3559:21" pos:end="3559:40"><expr pos:start="3559:21" pos:end="3559:39"><call pos:start="3559:21" pos:end="3559:39"><name pos:start="3559:21" pos:end="3559:35">gen_movl_T0_reg</name><argument_list pos:start="3559:36" pos:end="3559:39">(<argument pos:start="3559:37" pos:end="3559:38"><expr pos:start="3559:37" pos:end="3559:38"><name pos:start="3559:37" pos:end="3559:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3561:21" pos:end="3564:0">break;</break>

<cpp:if pos:start="3563:1" pos:end="3563:57">#<cpp:directive pos:start="3563:2" pos:end="3563:3">if</cpp:directive> <expr pos:start="3563:5" pos:end="3563:57"><operator pos:start="3563:5" pos:end="3563:5">!</operator><call pos:start="3563:6" pos:end="3563:30"><name pos:start="3563:6" pos:end="3563:12">defined</name><argument_list pos:start="3563:13" pos:end="3563:30">(<argument pos:start="3563:14" pos:end="3563:29"><expr pos:start="3563:14" pos:end="3563:29"><name pos:start="3563:14" pos:end="3563:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call> <operator pos:start="3563:32" pos:end="3563:33">&amp;&amp;</operator> <call pos:start="3563:35" pos:end="3563:57"><name pos:start="3563:35" pos:end="3563:41">defined</name><argument_list pos:start="3563:42" pos:end="3563:57">(<argument pos:start="3563:43" pos:end="3563:56"><expr pos:start="3563:43" pos:end="3563:56"><name pos:start="3563:43" pos:end="3563:56">TARGET_SPARC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <case pos:start="3565:17" pos:end="3565:26">case <expr pos:start="3565:22" pos:end="3565:25"><literal type="number" pos:start="3565:22" pos:end="3565:25">0x3e</literal></expr>:</case>      <comment type="block" pos:start="3565:33" pos:end="3565:51">/* V9 done/retry */</comment>

                    <block pos:start="3567:21" pos:end="3605:21">{<block_content pos:start="3569:25" pos:end="3603:25">

                        <switch pos:start="3569:25" pos:end="3603:25">switch <condition pos:start="3569:32" pos:end="3569:35">(<expr pos:start="3569:33" pos:end="3569:34"><name pos:start="3569:33" pos:end="3569:34">rd</name></expr>)</condition> <block pos:start="3569:37" pos:end="3603:25">{<block_content pos:start="3571:25" pos:end="3601:46">

                        <case pos:start="3571:25" pos:end="3571:31">case <expr pos:start="3571:30" pos:end="3571:30"><literal type="number" pos:start="3571:30" pos:end="3571:30">0</literal></expr>:</case>

                            <if_stmt pos:start="3573:29" pos:end="3575:47"><if pos:start="3573:29" pos:end="3575:47">if <condition pos:start="3573:32" pos:end="3573:48">(<expr pos:start="3573:33" pos:end="3573:47"><operator pos:start="3573:33" pos:end="3573:33">!</operator><call pos:start="3573:34" pos:end="3573:47"><name pos:start="3573:34" pos:end="3573:43">supervisor</name><argument_list pos:start="3573:44" pos:end="3573:47">(<argument pos:start="3573:45" pos:end="3573:46"><expr pos:start="3573:45" pos:end="3573:46"><name pos:start="3573:45" pos:end="3573:46">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3575:33" pos:end="3575:47"><block_content pos:start="3575:33" pos:end="3575:47">

                                <goto pos:start="3575:33" pos:end="3575:47">goto <name pos:start="3575:38" pos:end="3575:46">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="3577:29" pos:end="3577:49"><expr pos:start="3577:29" pos:end="3577:48"><name pos:start="3577:29" pos:end="3577:35"><name pos:start="3577:29" pos:end="3577:30">dc</name><operator pos:start="3577:31" pos:end="3577:32">-&gt;</operator><name pos:start="3577:33" pos:end="3577:35">npc</name></name> <operator pos:start="3577:37" pos:end="3577:37">=</operator> <name pos:start="3577:39" pos:end="3577:48">DYNAMIC_PC</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="3579:29" pos:end="3579:48"><expr pos:start="3579:29" pos:end="3579:47"><name pos:start="3579:29" pos:end="3579:34"><name pos:start="3579:29" pos:end="3579:30">dc</name><operator pos:start="3579:31" pos:end="3579:32">-&gt;</operator><name pos:start="3579:33" pos:end="3579:34">pc</name></name> <operator pos:start="3579:36" pos:end="3579:36">=</operator> <name pos:start="3579:38" pos:end="3579:47">DYNAMIC_PC</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="3581:29" pos:end="3581:42"><expr pos:start="3581:29" pos:end="3581:41"><call pos:start="3581:29" pos:end="3581:41"><name pos:start="3581:29" pos:end="3581:39">gen_op_done</name><argument_list pos:start="3581:40" pos:end="3581:41">()</argument_list></call></expr>;</expr_stmt>

                            <goto pos:start="3583:29" pos:end="3583:42">goto <name pos:start="3583:34" pos:end="3583:41">jmp_insn</name>;</goto>

                        <case pos:start="3585:25" pos:end="3585:31">case <expr pos:start="3585:30" pos:end="3585:30"><literal type="number" pos:start="3585:30" pos:end="3585:30">1</literal></expr>:</case>

                            <if_stmt pos:start="3587:29" pos:end="3589:47"><if pos:start="3587:29" pos:end="3589:47">if <condition pos:start="3587:32" pos:end="3587:48">(<expr pos:start="3587:33" pos:end="3587:47"><operator pos:start="3587:33" pos:end="3587:33">!</operator><call pos:start="3587:34" pos:end="3587:47"><name pos:start="3587:34" pos:end="3587:43">supervisor</name><argument_list pos:start="3587:44" pos:end="3587:47">(<argument pos:start="3587:45" pos:end="3587:46"><expr pos:start="3587:45" pos:end="3587:46"><name pos:start="3587:45" pos:end="3587:46">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3589:33" pos:end="3589:47"><block_content pos:start="3589:33" pos:end="3589:47">

                                <goto pos:start="3589:33" pos:end="3589:47">goto <name pos:start="3589:38" pos:end="3589:46">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="3591:29" pos:end="3591:49"><expr pos:start="3591:29" pos:end="3591:48"><name pos:start="3591:29" pos:end="3591:35"><name pos:start="3591:29" pos:end="3591:30">dc</name><operator pos:start="3591:31" pos:end="3591:32">-&gt;</operator><name pos:start="3591:33" pos:end="3591:35">npc</name></name> <operator pos:start="3591:37" pos:end="3591:37">=</operator> <name pos:start="3591:39" pos:end="3591:48">DYNAMIC_PC</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="3593:29" pos:end="3593:48"><expr pos:start="3593:29" pos:end="3593:47"><name pos:start="3593:29" pos:end="3593:34"><name pos:start="3593:29" pos:end="3593:30">dc</name><operator pos:start="3593:31" pos:end="3593:32">-&gt;</operator><name pos:start="3593:33" pos:end="3593:34">pc</name></name> <operator pos:start="3593:36" pos:end="3593:36">=</operator> <name pos:start="3593:38" pos:end="3593:47">DYNAMIC_PC</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="3595:29" pos:end="3595:43"><expr pos:start="3595:29" pos:end="3595:42"><call pos:start="3595:29" pos:end="3595:42"><name pos:start="3595:29" pos:end="3595:40">gen_op_retry</name><argument_list pos:start="3595:41" pos:end="3595:42">()</argument_list></call></expr>;</expr_stmt>

                            <goto pos:start="3597:29" pos:end="3597:42">goto <name pos:start="3597:34" pos:end="3597:41">jmp_insn</name>;</goto>

                        <default pos:start="3599:25" pos:end="3599:32">default:</default>

                            <goto pos:start="3601:29" pos:end="3601:46">goto <name pos:start="3601:34" pos:end="3601:45">illegal_insn</name>;</goto>

                        </block_content>}</block></switch>

                    </block_content>}</block>

                    <break pos:start="3607:21" pos:end="3610:0">break;</break>

<cpp:endif pos:start="3609:1" pos:end="3609:6">#<cpp:directive pos:start="3609:2" pos:end="3609:6">endif</cpp:directive></cpp:endif>

                <default pos:start="3611:17" pos:end="3611:24">default:</default>

                    <goto pos:start="3613:21" pos:end="3613:38">goto <name pos:start="3613:26" pos:end="3613:37">illegal_insn</name>;</goto>

                </block_content>}</block></switch>

            </block_content>}</block></else></if_stmt>

            <break pos:start="3619:13" pos:end="3619:18">break;</break>

        </block_content>}</block>

        <break pos:start="3623:9" pos:end="3623:14">break;</break>

    <case pos:start="3625:5" pos:end="3625:11">case <expr pos:start="3625:10" pos:end="3625:10"><literal type="number" pos:start="3625:10" pos:end="3625:10">3</literal></expr>:</case>                     <comment type="block" pos:start="3625:33" pos:end="3625:61">/* load/store instructions */</comment>

        <block pos:start="3627:9" pos:end="4459:9">{<block_content pos:start="3629:13" pos:end="4457:34">

            <decl_stmt pos:start="3629:13" pos:end="3629:54"><decl pos:start="3629:13" pos:end="3629:53"><type pos:start="3629:13" pos:end="3629:24"><name pos:start="3629:13" pos:end="3629:20">unsigned</name> <name pos:start="3629:22" pos:end="3629:24">int</name></type> <name pos:start="3629:26" pos:end="3629:28">xop</name> <init pos:start="3629:30" pos:end="3629:53">= <expr pos:start="3629:32" pos:end="3629:53"><call pos:start="3629:32" pos:end="3629:53"><name pos:start="3629:32" pos:end="3629:40">GET_FIELD</name><argument_list pos:start="3629:41" pos:end="3629:53">(<argument pos:start="3629:42" pos:end="3629:45"><expr pos:start="3629:42" pos:end="3629:45"><name pos:start="3629:42" pos:end="3629:45">insn</name></expr></argument>, <argument pos:start="3629:48" pos:end="3629:48"><expr pos:start="3629:48" pos:end="3629:48"><literal type="number" pos:start="3629:48" pos:end="3629:48">7</literal></expr></argument>, <argument pos:start="3629:51" pos:end="3629:52"><expr pos:start="3629:51" pos:end="3629:52"><literal type="number" pos:start="3629:51" pos:end="3629:52">12</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="3631:13" pos:end="3631:42"><expr pos:start="3631:13" pos:end="3631:41"><name pos:start="3631:13" pos:end="3631:15">rs1</name> <operator pos:start="3631:17" pos:end="3631:17">=</operator> <call pos:start="3631:19" pos:end="3631:41"><name pos:start="3631:19" pos:end="3631:27">GET_FIELD</name><argument_list pos:start="3631:28" pos:end="3631:41">(<argument pos:start="3631:29" pos:end="3631:32"><expr pos:start="3631:29" pos:end="3631:32"><name pos:start="3631:29" pos:end="3631:32">insn</name></expr></argument>, <argument pos:start="3631:35" pos:end="3631:36"><expr pos:start="3631:35" pos:end="3631:36"><literal type="number" pos:start="3631:35" pos:end="3631:36">13</literal></expr></argument>, <argument pos:start="3631:39" pos:end="3631:40"><expr pos:start="3631:39" pos:end="3631:40"><literal type="number" pos:start="3631:39" pos:end="3631:40">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3633:13" pos:end="3633:27"><expr pos:start="3633:13" pos:end="3633:26"><call pos:start="3633:13" pos:end="3633:26"><name pos:start="3633:13" pos:end="3633:22">save_state</name><argument_list pos:start="3633:23" pos:end="3633:26">(<argument pos:start="3633:24" pos:end="3633:25"><expr pos:start="3633:24" pos:end="3633:25"><name pos:start="3633:24" pos:end="3633:25">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3635:13" pos:end="3635:33"><expr pos:start="3635:13" pos:end="3635:32"><call pos:start="3635:13" pos:end="3635:32"><name pos:start="3635:13" pos:end="3635:27">gen_movl_reg_T0</name><argument_list pos:start="3635:28" pos:end="3635:32">(<argument pos:start="3635:29" pos:end="3635:31"><expr pos:start="3635:29" pos:end="3635:31"><name pos:start="3635:29" pos:end="3635:31">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3637:13" pos:end="3687:13"><if pos:start="3637:13" pos:end="3645:13">if <condition pos:start="3637:16" pos:end="3637:43">(<expr pos:start="3637:17" pos:end="3637:42"><name pos:start="3637:17" pos:end="3637:19">xop</name> <operator pos:start="3637:21" pos:end="3637:22">==</operator> <literal type="number" pos:start="3637:24" pos:end="3637:27">0x3c</literal> <operator pos:start="3637:29" pos:end="3637:30">||</operator> <name pos:start="3637:32" pos:end="3637:34">xop</name> <operator pos:start="3637:36" pos:end="3637:37">==</operator> <literal type="number" pos:start="3637:39" pos:end="3637:42">0x3e</literal></expr>)</condition>

            <block pos:start="3639:13" pos:end="3645:13">{<block_content pos:start="3641:17" pos:end="3643:37">

                <expr_stmt pos:start="3641:17" pos:end="3641:46"><expr pos:start="3641:17" pos:end="3641:45"><name pos:start="3641:17" pos:end="3641:19">rs2</name> <operator pos:start="3641:21" pos:end="3641:21">=</operator> <call pos:start="3641:23" pos:end="3641:45"><name pos:start="3641:23" pos:end="3641:31">GET_FIELD</name><argument_list pos:start="3641:32" pos:end="3641:45">(<argument pos:start="3641:33" pos:end="3641:36"><expr pos:start="3641:33" pos:end="3641:36"><name pos:start="3641:33" pos:end="3641:36">insn</name></expr></argument>, <argument pos:start="3641:39" pos:end="3641:40"><expr pos:start="3641:39" pos:end="3641:40"><literal type="number" pos:start="3641:39" pos:end="3641:40">27</literal></expr></argument>, <argument pos:start="3641:43" pos:end="3641:44"><expr pos:start="3641:43" pos:end="3641:44"><literal type="number" pos:start="3641:43" pos:end="3641:44">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3643:17" pos:end="3643:37"><expr pos:start="3643:17" pos:end="3643:36"><call pos:start="3643:17" pos:end="3643:36"><name pos:start="3643:17" pos:end="3643:31">gen_movl_reg_T1</name><argument_list pos:start="3643:32" pos:end="3643:36">(<argument pos:start="3643:33" pos:end="3643:35"><expr pos:start="3643:33" pos:end="3643:35"><name pos:start="3643:33" pos:end="3643:35">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if>

            <if type="elseif" pos:start="3647:13" pos:end="3667:13">else if <condition pos:start="3647:21" pos:end="3647:28">(<expr pos:start="3647:22" pos:end="3647:27"><name pos:start="3647:22" pos:end="3647:27">IS_IMM</name></expr>)</condition> <block pos:start="3647:30" pos:end="3667:13">{<block_content pos:start="3649:17" pos:end="3666:0">       <comment type="block" pos:start="3647:38" pos:end="3647:52">/* immediate */</comment>

                <expr_stmt pos:start="3649:17" pos:end="3652:0"><expr pos:start="3649:17" pos:end="3649:46"><name pos:start="3649:17" pos:end="3649:19">rs2</name> <operator pos:start="3649:21" pos:end="3649:21">=</operator> <call pos:start="3649:23" pos:end="3649:46"><name pos:start="3649:23" pos:end="3649:32">GET_FIELDs</name><argument_list pos:start="3649:33" pos:end="3649:46">(<argument pos:start="3649:34" pos:end="3649:37"><expr pos:start="3649:34" pos:end="3649:37"><name pos:start="3649:34" pos:end="3649:37">insn</name></expr></argument>, <argument pos:start="3649:40" pos:end="3649:41"><expr pos:start="3649:40" pos:end="3649:41"><literal type="number" pos:start="3649:40" pos:end="3649:41">19</literal></expr></argument>, <argument pos:start="3649:44" pos:end="3649:45"><expr pos:start="3649:44" pos:end="3649:45"><literal type="number" pos:start="3649:44" pos:end="3649:45">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="3651:1" pos:end="3651:18">#<cpp:directive pos:start="3651:2" pos:end="3651:3">if</cpp:directive> <expr pos:start="3651:5" pos:end="3651:18"><call pos:start="3651:5" pos:end="3651:18"><name pos:start="3651:5" pos:end="3651:11">defined</name><argument_list pos:start="3651:12" pos:end="3651:18">(<argument pos:start="3651:13" pos:end="3651:17"><expr pos:start="3651:13" pos:end="3651:17"><name pos:start="3651:13" pos:end="3651:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <if_stmt pos:start="3653:17" pos:end="3666:0"><if pos:start="3653:17" pos:end="3666:0">if <condition pos:start="3653:20" pos:end="3653:29">(<expr pos:start="3653:21" pos:end="3653:28"><name pos:start="3653:21" pos:end="3653:23">rs2</name> <operator pos:start="3653:25" pos:end="3653:26">!=</operator> <literal type="number" pos:start="3653:28" pos:end="3653:28">0</literal></expr>)</condition> <block pos:start="3653:31" pos:end="3666:0">{<block_content pos:start="3657:21" pos:end="3662:0">

<cpp:endif pos:start="3655:1" pos:end="3655:6">#<cpp:directive pos:start="3655:2" pos:end="3655:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3657:21" pos:end="3657:42"><expr pos:start="3657:21" pos:end="3657:41"><call pos:start="3657:21" pos:end="3657:41"><name pos:start="3657:21" pos:end="3657:36">gen_movl_simm_T1</name><argument_list pos:start="3657:37" pos:end="3657:41">(<argument pos:start="3657:38" pos:end="3657:40"><expr pos:start="3657:38" pos:end="3657:40"><name pos:start="3657:38" pos:end="3657:40">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3659:21" pos:end="3662:0"><expr pos:start="3659:21" pos:end="3659:38"><call pos:start="3659:21" pos:end="3659:38"><name pos:start="3659:21" pos:end="3659:36">gen_op_add_T1_T0</name><argument_list pos:start="3659:37" pos:end="3659:38">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="3661:1" pos:end="3661:18">#<cpp:directive pos:start="3661:2" pos:end="3661:3">if</cpp:directive> <expr pos:start="3661:5" pos:end="3661:18"><call pos:start="3661:5" pos:end="3661:18"><name pos:start="3661:5" pos:end="3661:11">defined</name><argument_list pos:start="3661:12" pos:end="3661:18">(<argument pos:start="3661:13" pos:end="3661:17"><expr pos:start="3661:13" pos:end="3661:17"><name pos:start="3661:13" pos:end="3661:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="3665:1" pos:end="3665:6">#<cpp:directive pos:start="3665:2" pos:end="3665:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></if> <else pos:start="3667:15" pos:end="3687:13">else <block pos:start="3667:20" pos:end="3687:13">{<block_content pos:start="3669:17" pos:end="3686:0">            <comment type="block" pos:start="3667:33" pos:end="3667:46">/* register */</comment>

                <expr_stmt pos:start="3669:17" pos:end="3672:0"><expr pos:start="3669:17" pos:end="3669:45"><name pos:start="3669:17" pos:end="3669:19">rs2</name> <operator pos:start="3669:21" pos:end="3669:21">=</operator> <call pos:start="3669:23" pos:end="3669:45"><name pos:start="3669:23" pos:end="3669:31">GET_FIELD</name><argument_list pos:start="3669:32" pos:end="3669:45">(<argument pos:start="3669:33" pos:end="3669:36"><expr pos:start="3669:33" pos:end="3669:36"><name pos:start="3669:33" pos:end="3669:36">insn</name></expr></argument>, <argument pos:start="3669:39" pos:end="3669:40"><expr pos:start="3669:39" pos:end="3669:40"><literal type="number" pos:start="3669:39" pos:end="3669:40">27</literal></expr></argument>, <argument pos:start="3669:43" pos:end="3669:44"><expr pos:start="3669:43" pos:end="3669:44"><literal type="number" pos:start="3669:43" pos:end="3669:44">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="3671:1" pos:end="3671:18">#<cpp:directive pos:start="3671:2" pos:end="3671:3">if</cpp:directive> <expr pos:start="3671:5" pos:end="3671:18"><call pos:start="3671:5" pos:end="3671:18"><name pos:start="3671:5" pos:end="3671:11">defined</name><argument_list pos:start="3671:12" pos:end="3671:18">(<argument pos:start="3671:13" pos:end="3671:17"><expr pos:start="3671:13" pos:end="3671:17"><name pos:start="3671:13" pos:end="3671:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <if_stmt pos:start="3673:17" pos:end="3686:0"><if pos:start="3673:17" pos:end="3686:0">if <condition pos:start="3673:20" pos:end="3673:29">(<expr pos:start="3673:21" pos:end="3673:28"><name pos:start="3673:21" pos:end="3673:23">rs2</name> <operator pos:start="3673:25" pos:end="3673:26">!=</operator> <literal type="number" pos:start="3673:28" pos:end="3673:28">0</literal></expr>)</condition> <block pos:start="3673:31" pos:end="3686:0">{<block_content pos:start="3677:21" pos:end="3682:0">

<cpp:endif pos:start="3675:1" pos:end="3675:6">#<cpp:directive pos:start="3675:2" pos:end="3675:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3677:21" pos:end="3677:41"><expr pos:start="3677:21" pos:end="3677:40"><call pos:start="3677:21" pos:end="3677:40"><name pos:start="3677:21" pos:end="3677:35">gen_movl_reg_T1</name><argument_list pos:start="3677:36" pos:end="3677:40">(<argument pos:start="3677:37" pos:end="3677:39"><expr pos:start="3677:37" pos:end="3677:39"><name pos:start="3677:37" pos:end="3677:39">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3679:21" pos:end="3682:0"><expr pos:start="3679:21" pos:end="3679:38"><call pos:start="3679:21" pos:end="3679:38"><name pos:start="3679:21" pos:end="3679:36">gen_op_add_T1_T0</name><argument_list pos:start="3679:37" pos:end="3679:38">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="3681:1" pos:end="3681:18">#<cpp:directive pos:start="3681:2" pos:end="3681:3">if</cpp:directive> <expr pos:start="3681:5" pos:end="3681:18"><call pos:start="3681:5" pos:end="3681:18"><name pos:start="3681:5" pos:end="3681:11">defined</name><argument_list pos:start="3681:12" pos:end="3681:18">(<argument pos:start="3681:13" pos:end="3681:17"><expr pos:start="3681:13" pos:end="3681:17"><name pos:start="3681:13" pos:end="3681:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="3685:1" pos:end="3685:6">#<cpp:directive pos:start="3685:2" pos:end="3685:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="3689:13" pos:end="4457:34"><if pos:start="3689:13" pos:end="4065:13">if <condition pos:start="3689:16" pos:end="3693:74">(<expr pos:start="3689:17" pos:end="3693:73"><name pos:start="3689:17" pos:end="3689:19">xop</name> <operator pos:start="3689:21" pos:end="3689:21">&lt;</operator> <literal type="number" pos:start="3689:23" pos:end="3689:23">4</literal> <operator pos:start="3689:25" pos:end="3689:26">||</operator> <operator pos:start="3689:28" pos:end="3689:28">(</operator><name pos:start="3689:29" pos:end="3689:31">xop</name> <operator pos:start="3689:33" pos:end="3689:33">&gt;</operator> <literal type="number" pos:start="3689:35" pos:end="3689:35">7</literal> <operator pos:start="3689:37" pos:end="3689:38">&amp;&amp;</operator> <name pos:start="3689:40" pos:end="3689:42">xop</name> <operator pos:start="3689:44" pos:end="3689:44">&lt;</operator> <literal type="number" pos:start="3689:46" pos:end="3689:49">0x14</literal> <operator pos:start="3689:51" pos:end="3689:52">&amp;&amp;</operator> <name pos:start="3689:54" pos:end="3689:56">xop</name> <operator pos:start="3689:58" pos:end="3689:59">!=</operator> <literal type="number" pos:start="3689:61" pos:end="3689:64">0x0e</literal><operator pos:start="3689:65" pos:end="3689:65">)</operator> <operator pos:start="3689:67" pos:end="3689:68">||</operator>

                <operator pos:start="3691:17" pos:end="3691:17">(</operator><name pos:start="3691:18" pos:end="3691:20">xop</name> <operator pos:start="3691:22" pos:end="3691:22">&gt;</operator> <literal type="number" pos:start="3691:24" pos:end="3691:27">0x17</literal> <operator pos:start="3691:29" pos:end="3691:30">&amp;&amp;</operator> <name pos:start="3691:32" pos:end="3691:34">xop</name> <operator pos:start="3691:36" pos:end="3691:37">&lt;=</operator> <literal type="number" pos:start="3691:39" pos:end="3691:42">0x1d</literal> <operator pos:start="3691:44" pos:end="3691:44">)</operator> <operator pos:start="3691:46" pos:end="3691:47">||</operator>

                <operator pos:start="3693:17" pos:end="3693:17">(</operator><name pos:start="3693:18" pos:end="3693:20">xop</name> <operator pos:start="3693:22" pos:end="3693:22">&gt;</operator> <literal type="number" pos:start="3693:24" pos:end="3693:27">0x2c</literal> <operator pos:start="3693:29" pos:end="3693:30">&amp;&amp;</operator> <name pos:start="3693:32" pos:end="3693:34">xop</name> <operator pos:start="3693:36" pos:end="3693:37">&lt;=</operator> <literal type="number" pos:start="3693:39" pos:end="3693:42">0x33</literal><operator pos:start="3693:43" pos:end="3693:43">)</operator> <operator pos:start="3693:45" pos:end="3693:46">||</operator> <name pos:start="3693:48" pos:end="3693:50">xop</name> <operator pos:start="3693:52" pos:end="3693:53">==</operator> <literal type="number" pos:start="3693:55" pos:end="3693:58">0x1f</literal> <operator pos:start="3693:60" pos:end="3693:61">||</operator> <name pos:start="3693:63" pos:end="3693:65">xop</name> <operator pos:start="3693:67" pos:end="3693:68">==</operator> <literal type="number" pos:start="3693:70" pos:end="3693:73">0x3d</literal></expr>)</condition> <block pos:start="3693:76" pos:end="4065:13">{<block_content pos:start="3695:17" pos:end="4064:0">

                <switch pos:start="3695:17" pos:end="4055:17">switch <condition pos:start="3695:24" pos:end="3695:28">(<expr pos:start="3695:25" pos:end="3695:27"><name pos:start="3695:25" pos:end="3695:27">xop</name></expr>)</condition> <block pos:start="3695:30" pos:end="4055:17">{<block_content pos:start="3697:17" pos:end="4053:38">

                <case pos:start="3697:17" pos:end="3700:0">case <expr pos:start="3697:22" pos:end="3697:24"><literal type="number" pos:start="3697:22" pos:end="3697:24">0x0</literal></expr>:</case>       <comment type="block" pos:start="3697:33" pos:end="3697:47">/* load word */</comment>

<cpp:ifdef pos:start="3699:1" pos:end="3699:23">#<cpp:directive pos:start="3699:2" pos:end="3699:6">ifdef</cpp:directive> <name pos:start="3699:8" pos:end="3699:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="3701:21" pos:end="3706:0"><expr pos:start="3701:21" pos:end="3701:45"><call pos:start="3701:21" pos:end="3701:45"><name pos:start="3701:21" pos:end="3701:43">gen_op_check_align_T0_3</name><argument_list pos:start="3701:44" pos:end="3701:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3703:1" pos:end="3703:6">#<cpp:directive pos:start="3703:2" pos:end="3703:6">endif</cpp:directive></cpp:endif>

<cpp:ifndef pos:start="3705:1" pos:end="3705:22">#<cpp:directive pos:start="3705:2" pos:end="3705:7">ifndef</cpp:directive> <name pos:start="3705:9" pos:end="3705:22">TARGET_SPARC64</name></cpp:ifndef>

                    <expr_stmt pos:start="3707:21" pos:end="3710:0"><expr pos:start="3707:21" pos:end="3707:35"><call pos:start="3707:21" pos:end="3707:35"><name pos:start="3707:21" pos:end="3707:31">gen_op_ldst</name><argument_list pos:start="3707:32" pos:end="3707:35">(<argument pos:start="3707:33" pos:end="3707:34"><expr pos:start="3707:33" pos:end="3707:34"><name pos:start="3707:33" pos:end="3707:34">ld</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="3709:1" pos:end="3709:5">#<cpp:directive pos:start="3709:2" pos:end="3709:5">else</cpp:directive></cpp:else>

                    <expr_stmt pos:start="3711:21" pos:end="3714:0"><expr pos:start="3711:21" pos:end="3711:37"><call pos:start="3711:21" pos:end="3711:37"><name pos:start="3711:21" pos:end="3711:31">gen_op_ldst</name><argument_list pos:start="3711:32" pos:end="3711:37">(<argument pos:start="3711:33" pos:end="3711:36"><expr pos:start="3711:33" pos:end="3711:36"><name pos:start="3711:33" pos:end="3711:36">lduw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3713:1" pos:end="3713:6">#<cpp:directive pos:start="3713:2" pos:end="3713:6">endif</cpp:directive></cpp:endif>

                    <break pos:start="3715:21" pos:end="3715:26">break;</break>

                <case pos:start="3717:17" pos:end="3717:25">case <expr pos:start="3717:22" pos:end="3717:24"><literal type="number" pos:start="3717:22" pos:end="3717:24">0x1</literal></expr>:</case>       <comment type="block" pos:start="3717:33" pos:end="3717:56">/* load unsigned byte */</comment>

                    <expr_stmt pos:start="3719:21" pos:end="3719:38"><expr pos:start="3719:21" pos:end="3719:37"><call pos:start="3719:21" pos:end="3719:37"><name pos:start="3719:21" pos:end="3719:31">gen_op_ldst</name><argument_list pos:start="3719:32" pos:end="3719:37">(<argument pos:start="3719:33" pos:end="3719:36"><expr pos:start="3719:33" pos:end="3719:36"><name pos:start="3719:33" pos:end="3719:36">ldub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3721:21" pos:end="3721:26">break;</break>

                <case pos:start="3723:17" pos:end="3726:0">case <expr pos:start="3723:22" pos:end="3723:24"><literal type="number" pos:start="3723:22" pos:end="3723:24">0x2</literal></expr>:</case>       <comment type="block" pos:start="3723:33" pos:end="3723:60">/* load unsigned halfword */</comment>

<cpp:ifdef pos:start="3725:1" pos:end="3725:23">#<cpp:directive pos:start="3725:2" pos:end="3725:6">ifdef</cpp:directive> <name pos:start="3725:8" pos:end="3725:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="3727:21" pos:end="3730:0"><expr pos:start="3727:21" pos:end="3727:45"><call pos:start="3727:21" pos:end="3727:45"><name pos:start="3727:21" pos:end="3727:43">gen_op_check_align_T0_1</name><argument_list pos:start="3727:44" pos:end="3727:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3729:1" pos:end="3729:6">#<cpp:directive pos:start="3729:2" pos:end="3729:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3731:21" pos:end="3731:38"><expr pos:start="3731:21" pos:end="3731:37"><call pos:start="3731:21" pos:end="3731:37"><name pos:start="3731:21" pos:end="3731:31">gen_op_ldst</name><argument_list pos:start="3731:32" pos:end="3731:37">(<argument pos:start="3731:33" pos:end="3731:36"><expr pos:start="3731:33" pos:end="3731:36"><name pos:start="3731:33" pos:end="3731:36">lduh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3733:21" pos:end="3733:26">break;</break>

                <case pos:start="3735:17" pos:end="3735:25">case <expr pos:start="3735:22" pos:end="3735:24"><literal type="number" pos:start="3735:22" pos:end="3735:24">0x3</literal></expr>:</case>       <comment type="block" pos:start="3735:33" pos:end="3735:54">/* load double word */</comment>

                    <expr_stmt pos:start="3737:21" pos:end="3737:46"><expr pos:start="3737:21" pos:end="3737:45"><call pos:start="3737:21" pos:end="3737:45"><name pos:start="3737:21" pos:end="3737:43">gen_op_check_align_T0_7</name><argument_list pos:start="3737:44" pos:end="3737:45">()</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="3739:21" pos:end="3741:42"><if pos:start="3739:21" pos:end="3741:42">if <condition pos:start="3739:24" pos:end="3739:31">(<expr pos:start="3739:25" pos:end="3739:30"><name pos:start="3739:25" pos:end="3739:26">rd</name> <operator pos:start="3739:28" pos:end="3739:28">&amp;</operator> <literal type="number" pos:start="3739:30" pos:end="3739:30">1</literal></expr>)</condition><block type="pseudo" pos:start="3741:25" pos:end="3741:42"><block_content pos:start="3741:25" pos:end="3741:42">

                        <goto pos:start="3741:25" pos:end="3741:42">goto <name pos:start="3741:30" pos:end="3741:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="3743:21" pos:end="3743:37"><expr pos:start="3743:21" pos:end="3743:36"><call pos:start="3743:21" pos:end="3743:36"><name pos:start="3743:21" pos:end="3743:31">gen_op_ldst</name><argument_list pos:start="3743:32" pos:end="3743:36">(<argument pos:start="3743:33" pos:end="3743:35"><expr pos:start="3743:33" pos:end="3743:35"><name pos:start="3743:33" pos:end="3743:35">ldd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3745:21" pos:end="3745:44"><expr pos:start="3745:21" pos:end="3745:43"><call pos:start="3745:21" pos:end="3745:43"><name pos:start="3745:21" pos:end="3745:35">gen_movl_T0_reg</name><argument_list pos:start="3745:36" pos:end="3745:43">(<argument pos:start="3745:37" pos:end="3745:42"><expr pos:start="3745:37" pos:end="3745:42"><name pos:start="3745:37" pos:end="3745:38">rd</name> <operator pos:start="3745:40" pos:end="3745:40">+</operator> <literal type="number" pos:start="3745:42" pos:end="3745:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3747:21" pos:end="3747:26">break;</break>

                <case pos:start="3749:17" pos:end="3749:25">case <expr pos:start="3749:22" pos:end="3749:24"><literal type="number" pos:start="3749:22" pos:end="3749:24">0x9</literal></expr>:</case>       <comment type="block" pos:start="3749:33" pos:end="3749:54">/* load signed byte */</comment>

                    <expr_stmt pos:start="3751:21" pos:end="3751:38"><expr pos:start="3751:21" pos:end="3751:37"><call pos:start="3751:21" pos:end="3751:37"><name pos:start="3751:21" pos:end="3751:31">gen_op_ldst</name><argument_list pos:start="3751:32" pos:end="3751:37">(<argument pos:start="3751:33" pos:end="3751:36"><expr pos:start="3751:33" pos:end="3751:36"><name pos:start="3751:33" pos:end="3751:36">ldsb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3753:21" pos:end="3753:26">break;</break>

                <case pos:start="3755:17" pos:end="3758:0">case <expr pos:start="3755:22" pos:end="3755:24"><literal type="number" pos:start="3755:22" pos:end="3755:24">0xa</literal></expr>:</case>       <comment type="block" pos:start="3755:33" pos:end="3755:58">/* load signed halfword */</comment>

<cpp:ifdef pos:start="3757:1" pos:end="3757:23">#<cpp:directive pos:start="3757:2" pos:end="3757:6">ifdef</cpp:directive> <name pos:start="3757:8" pos:end="3757:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="3759:21" pos:end="3762:0"><expr pos:start="3759:21" pos:end="3759:45"><call pos:start="3759:21" pos:end="3759:45"><name pos:start="3759:21" pos:end="3759:43">gen_op_check_align_T0_1</name><argument_list pos:start="3759:44" pos:end="3759:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3761:1" pos:end="3761:6">#<cpp:directive pos:start="3761:2" pos:end="3761:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3763:21" pos:end="3763:38"><expr pos:start="3763:21" pos:end="3763:37"><call pos:start="3763:21" pos:end="3763:37"><name pos:start="3763:21" pos:end="3763:31">gen_op_ldst</name><argument_list pos:start="3763:32" pos:end="3763:37">(<argument pos:start="3763:33" pos:end="3763:36"><expr pos:start="3763:33" pos:end="3763:36"><name pos:start="3763:33" pos:end="3763:36">ldsh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3765:21" pos:end="3765:26">break;</break>

                <case pos:start="3767:17" pos:end="3767:25">case <expr pos:start="3767:22" pos:end="3767:24"><literal type="number" pos:start="3767:22" pos:end="3767:24">0xd</literal></expr>:</case>       <comment type="block" pos:start="3767:33" pos:end="3767:73">/* ldstub -- XXX: should be atomically */</comment>

                    <expr_stmt pos:start="3769:21" pos:end="3769:40"><expr pos:start="3769:21" pos:end="3769:39"><call pos:start="3769:21" pos:end="3769:39"><name pos:start="3769:21" pos:end="3769:31">gen_op_ldst</name><argument_list pos:start="3769:32" pos:end="3769:39">(<argument pos:start="3769:33" pos:end="3769:38"><expr pos:start="3769:33" pos:end="3769:38"><name pos:start="3769:33" pos:end="3769:38">ldstub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3771:21" pos:end="3771:26">break;</break>

                <case pos:start="3773:17" pos:end="3776:0">case <expr pos:start="3773:22" pos:end="3773:25"><literal type="number" pos:start="3773:22" pos:end="3773:25">0x0f</literal></expr>:</case>      <comment type="block" pos:start="3773:33" pos:end="3773:80">/* swap register with memory. Also atomically */</comment>

<cpp:ifdef pos:start="3775:1" pos:end="3775:23">#<cpp:directive pos:start="3775:2" pos:end="3775:6">ifdef</cpp:directive> <name pos:start="3775:8" pos:end="3775:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="3777:21" pos:end="3780:0"><expr pos:start="3777:21" pos:end="3777:45"><call pos:start="3777:21" pos:end="3777:45"><name pos:start="3777:21" pos:end="3777:43">gen_op_check_align_T0_3</name><argument_list pos:start="3777:44" pos:end="3777:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3779:1" pos:end="3779:6">#<cpp:directive pos:start="3779:2" pos:end="3779:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3781:21" pos:end="3781:40"><expr pos:start="3781:21" pos:end="3781:39"><call pos:start="3781:21" pos:end="3781:39"><name pos:start="3781:21" pos:end="3781:35">gen_movl_reg_T1</name><argument_list pos:start="3781:36" pos:end="3781:39">(<argument pos:start="3781:37" pos:end="3781:38"><expr pos:start="3781:37" pos:end="3781:38"><name pos:start="3781:37" pos:end="3781:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3783:21" pos:end="3783:38"><expr pos:start="3783:21" pos:end="3783:37"><call pos:start="3783:21" pos:end="3783:37"><name pos:start="3783:21" pos:end="3783:31">gen_op_ldst</name><argument_list pos:start="3783:32" pos:end="3783:37">(<argument pos:start="3783:33" pos:end="3783:36"><expr pos:start="3783:33" pos:end="3783:36"><name pos:start="3783:33" pos:end="3783:36">swap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3785:21" pos:end="3788:0">break;</break>

<cpp:if pos:start="3787:1" pos:end="3787:57">#<cpp:directive pos:start="3787:2" pos:end="3787:3">if</cpp:directive> <expr pos:start="3787:5" pos:end="3787:57"><operator pos:start="3787:5" pos:end="3787:5">!</operator><call pos:start="3787:6" pos:end="3787:30"><name pos:start="3787:6" pos:end="3787:12">defined</name><argument_list pos:start="3787:13" pos:end="3787:30">(<argument pos:start="3787:14" pos:end="3787:29"><expr pos:start="3787:14" pos:end="3787:29"><name pos:start="3787:14" pos:end="3787:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call> <operator pos:start="3787:32" pos:end="3787:33">||</operator> <call pos:start="3787:35" pos:end="3787:57"><name pos:start="3787:35" pos:end="3787:41">defined</name><argument_list pos:start="3787:42" pos:end="3787:57">(<argument pos:start="3787:43" pos:end="3787:56"><expr pos:start="3787:43" pos:end="3787:56"><name pos:start="3787:43" pos:end="3787:56">TARGET_SPARC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <case pos:start="3789:17" pos:end="3792:0">case <expr pos:start="3789:22" pos:end="3789:25"><literal type="number" pos:start="3789:22" pos:end="3789:25">0x10</literal></expr>:</case>      <comment type="block" pos:start="3789:33" pos:end="3789:57">/* load word alternate */</comment>

<cpp:ifndef pos:start="3791:1" pos:end="3791:22">#<cpp:directive pos:start="3791:2" pos:end="3791:7">ifndef</cpp:directive> <name pos:start="3791:9" pos:end="3791:22">TARGET_SPARC64</name></cpp:ifndef>

                    <if_stmt pos:start="3793:21" pos:end="3795:42"><if pos:start="3793:21" pos:end="3795:42">if <condition pos:start="3793:24" pos:end="3793:31">(<expr pos:start="3793:25" pos:end="3793:30"><name pos:start="3793:25" pos:end="3793:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="3795:25" pos:end="3795:42"><block_content pos:start="3795:25" pos:end="3795:42">

                        <goto pos:start="3795:25" pos:end="3795:42">goto <name pos:start="3795:30" pos:end="3795:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="3797:21" pos:end="3802:0"><if pos:start="3797:21" pos:end="3802:0">if <condition pos:start="3797:24" pos:end="3797:40">(<expr pos:start="3797:25" pos:end="3797:39"><operator pos:start="3797:25" pos:end="3797:25">!</operator><call pos:start="3797:26" pos:end="3797:39"><name pos:start="3797:26" pos:end="3797:35">supervisor</name><argument_list pos:start="3797:36" pos:end="3797:39">(<argument pos:start="3797:37" pos:end="3797:38"><expr pos:start="3797:37" pos:end="3797:38"><name pos:start="3797:37" pos:end="3797:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3799:25" pos:end="3802:0"><block_content pos:start="3799:25" pos:end="3802:0">

                        <goto pos:start="3799:25" pos:end="3802:0">goto <name pos:start="3799:30" pos:end="3799:38">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:elif pos:start="3801:1" pos:end="3801:22">#<cpp:directive pos:start="3801:2" pos:end="3801:5">elif</cpp:directive> <expr pos:start="3801:7" pos:end="3801:22"><name pos:start="3801:7" pos:end="3801:22">CONFIG_USER_ONLY</name></expr></cpp:elif>

                    <expr_stmt pos:start="3803:21" pos:end="3806:0"><expr pos:start="3803:21" pos:end="3803:45"><call pos:start="3803:21" pos:end="3803:45"><name pos:start="3803:21" pos:end="3803:43">gen_op_check_align_T0_3</name><argument_list pos:start="3803:44" pos:end="3803:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3805:1" pos:end="3805:6">#<cpp:directive pos:start="3805:2" pos:end="3805:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3807:21" pos:end="3807:43"><expr pos:start="3807:21" pos:end="3807:42"><call pos:start="3807:21" pos:end="3807:42"><name pos:start="3807:21" pos:end="3807:30">gen_ld_asi</name><argument_list pos:start="3807:31" pos:end="3807:42">(<argument pos:start="3807:32" pos:end="3807:35"><expr pos:start="3807:32" pos:end="3807:35"><name pos:start="3807:32" pos:end="3807:35">insn</name></expr></argument>, <argument pos:start="3807:38" pos:end="3807:38"><expr pos:start="3807:38" pos:end="3807:38"><literal type="number" pos:start="3807:38" pos:end="3807:38">4</literal></expr></argument>, <argument pos:start="3807:41" pos:end="3807:41"><expr pos:start="3807:41" pos:end="3807:41"><literal type="number" pos:start="3807:41" pos:end="3807:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3809:21" pos:end="3809:26">break;</break>

                <case pos:start="3811:17" pos:end="3814:0">case <expr pos:start="3811:22" pos:end="3811:25"><literal type="number" pos:start="3811:22" pos:end="3811:25">0x11</literal></expr>:</case>      <comment type="block" pos:start="3811:33" pos:end="3811:66">/* load unsigned byte alternate */</comment>

<cpp:ifndef pos:start="3813:1" pos:end="3813:22">#<cpp:directive pos:start="3813:2" pos:end="3813:7">ifndef</cpp:directive> <name pos:start="3813:9" pos:end="3813:22">TARGET_SPARC64</name></cpp:ifndef>

                    <if_stmt pos:start="3815:21" pos:end="3817:42"><if pos:start="3815:21" pos:end="3817:42">if <condition pos:start="3815:24" pos:end="3815:31">(<expr pos:start="3815:25" pos:end="3815:30"><name pos:start="3815:25" pos:end="3815:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="3817:25" pos:end="3817:42"><block_content pos:start="3817:25" pos:end="3817:42">

                        <goto pos:start="3817:25" pos:end="3817:42">goto <name pos:start="3817:30" pos:end="3817:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="3819:21" pos:end="3824:0"><if pos:start="3819:21" pos:end="3824:0">if <condition pos:start="3819:24" pos:end="3819:40">(<expr pos:start="3819:25" pos:end="3819:39"><operator pos:start="3819:25" pos:end="3819:25">!</operator><call pos:start="3819:26" pos:end="3819:39"><name pos:start="3819:26" pos:end="3819:35">supervisor</name><argument_list pos:start="3819:36" pos:end="3819:39">(<argument pos:start="3819:37" pos:end="3819:38"><expr pos:start="3819:37" pos:end="3819:38"><name pos:start="3819:37" pos:end="3819:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3821:25" pos:end="3824:0"><block_content pos:start="3821:25" pos:end="3824:0">

                        <goto pos:start="3821:25" pos:end="3824:0">goto <name pos:start="3821:30" pos:end="3821:38">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:endif pos:start="3823:1" pos:end="3823:6">#<cpp:directive pos:start="3823:2" pos:end="3823:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3825:21" pos:end="3825:43"><expr pos:start="3825:21" pos:end="3825:42"><call pos:start="3825:21" pos:end="3825:42"><name pos:start="3825:21" pos:end="3825:30">gen_ld_asi</name><argument_list pos:start="3825:31" pos:end="3825:42">(<argument pos:start="3825:32" pos:end="3825:35"><expr pos:start="3825:32" pos:end="3825:35"><name pos:start="3825:32" pos:end="3825:35">insn</name></expr></argument>, <argument pos:start="3825:38" pos:end="3825:38"><expr pos:start="3825:38" pos:end="3825:38"><literal type="number" pos:start="3825:38" pos:end="3825:38">1</literal></expr></argument>, <argument pos:start="3825:41" pos:end="3825:41"><expr pos:start="3825:41" pos:end="3825:41"><literal type="number" pos:start="3825:41" pos:end="3825:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3827:21" pos:end="3827:26">break;</break>

                <case pos:start="3829:17" pos:end="3832:0">case <expr pos:start="3829:22" pos:end="3829:25"><literal type="number" pos:start="3829:22" pos:end="3829:25">0x12</literal></expr>:</case>      <comment type="block" pos:start="3829:33" pos:end="3829:70">/* load unsigned halfword alternate */</comment>

<cpp:ifndef pos:start="3831:1" pos:end="3831:22">#<cpp:directive pos:start="3831:2" pos:end="3831:7">ifndef</cpp:directive> <name pos:start="3831:9" pos:end="3831:22">TARGET_SPARC64</name></cpp:ifndef>

                    <if_stmt pos:start="3833:21" pos:end="3835:42"><if pos:start="3833:21" pos:end="3835:42">if <condition pos:start="3833:24" pos:end="3833:31">(<expr pos:start="3833:25" pos:end="3833:30"><name pos:start="3833:25" pos:end="3833:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="3835:25" pos:end="3835:42"><block_content pos:start="3835:25" pos:end="3835:42">

                        <goto pos:start="3835:25" pos:end="3835:42">goto <name pos:start="3835:30" pos:end="3835:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="3837:21" pos:end="3842:0"><if pos:start="3837:21" pos:end="3842:0">if <condition pos:start="3837:24" pos:end="3837:40">(<expr pos:start="3837:25" pos:end="3837:39"><operator pos:start="3837:25" pos:end="3837:25">!</operator><call pos:start="3837:26" pos:end="3837:39"><name pos:start="3837:26" pos:end="3837:35">supervisor</name><argument_list pos:start="3837:36" pos:end="3837:39">(<argument pos:start="3837:37" pos:end="3837:38"><expr pos:start="3837:37" pos:end="3837:38"><name pos:start="3837:37" pos:end="3837:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3839:25" pos:end="3842:0"><block_content pos:start="3839:25" pos:end="3842:0">

                        <goto pos:start="3839:25" pos:end="3842:0">goto <name pos:start="3839:30" pos:end="3839:38">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:elif pos:start="3841:1" pos:end="3841:22">#<cpp:directive pos:start="3841:2" pos:end="3841:5">elif</cpp:directive> <expr pos:start="3841:7" pos:end="3841:22"><name pos:start="3841:7" pos:end="3841:22">CONFIG_USER_ONLY</name></expr></cpp:elif>

                    <expr_stmt pos:start="3843:21" pos:end="3846:0"><expr pos:start="3843:21" pos:end="3843:45"><call pos:start="3843:21" pos:end="3843:45"><name pos:start="3843:21" pos:end="3843:43">gen_op_check_align_T0_1</name><argument_list pos:start="3843:44" pos:end="3843:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3845:1" pos:end="3845:6">#<cpp:directive pos:start="3845:2" pos:end="3845:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3847:21" pos:end="3847:43"><expr pos:start="3847:21" pos:end="3847:42"><call pos:start="3847:21" pos:end="3847:42"><name pos:start="3847:21" pos:end="3847:30">gen_ld_asi</name><argument_list pos:start="3847:31" pos:end="3847:42">(<argument pos:start="3847:32" pos:end="3847:35"><expr pos:start="3847:32" pos:end="3847:35"><name pos:start="3847:32" pos:end="3847:35">insn</name></expr></argument>, <argument pos:start="3847:38" pos:end="3847:38"><expr pos:start="3847:38" pos:end="3847:38"><literal type="number" pos:start="3847:38" pos:end="3847:38">2</literal></expr></argument>, <argument pos:start="3847:41" pos:end="3847:41"><expr pos:start="3847:41" pos:end="3847:41"><literal type="number" pos:start="3847:41" pos:end="3847:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3849:21" pos:end="3849:26">break;</break>

                <case pos:start="3851:17" pos:end="3854:0">case <expr pos:start="3851:22" pos:end="3851:25"><literal type="number" pos:start="3851:22" pos:end="3851:25">0x13</literal></expr>:</case>      <comment type="block" pos:start="3851:33" pos:end="3851:64">/* load double word alternate */</comment>

<cpp:ifndef pos:start="3853:1" pos:end="3853:22">#<cpp:directive pos:start="3853:2" pos:end="3853:7">ifndef</cpp:directive> <name pos:start="3853:9" pos:end="3853:22">TARGET_SPARC64</name></cpp:ifndef>

                    <if_stmt pos:start="3855:21" pos:end="3857:42"><if pos:start="3855:21" pos:end="3857:42">if <condition pos:start="3855:24" pos:end="3855:31">(<expr pos:start="3855:25" pos:end="3855:30"><name pos:start="3855:25" pos:end="3855:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="3857:25" pos:end="3857:42"><block_content pos:start="3857:25" pos:end="3857:42">

                        <goto pos:start="3857:25" pos:end="3857:42">goto <name pos:start="3857:30" pos:end="3857:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="3859:21" pos:end="3864:0"><if pos:start="3859:21" pos:end="3864:0">if <condition pos:start="3859:24" pos:end="3859:40">(<expr pos:start="3859:25" pos:end="3859:39"><operator pos:start="3859:25" pos:end="3859:25">!</operator><call pos:start="3859:26" pos:end="3859:39"><name pos:start="3859:26" pos:end="3859:35">supervisor</name><argument_list pos:start="3859:36" pos:end="3859:39">(<argument pos:start="3859:37" pos:end="3859:38"><expr pos:start="3859:37" pos:end="3859:38"><name pos:start="3859:37" pos:end="3859:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3861:25" pos:end="3864:0"><block_content pos:start="3861:25" pos:end="3864:0">

                        <goto pos:start="3861:25" pos:end="3864:0">goto <name pos:start="3861:30" pos:end="3861:38">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:endif pos:start="3863:1" pos:end="3863:6">#<cpp:directive pos:start="3863:2" pos:end="3863:6">endif</cpp:directive></cpp:endif>

                    <if_stmt pos:start="3865:21" pos:end="3867:42"><if pos:start="3865:21" pos:end="3867:42">if <condition pos:start="3865:24" pos:end="3865:31">(<expr pos:start="3865:25" pos:end="3865:30"><name pos:start="3865:25" pos:end="3865:26">rd</name> <operator pos:start="3865:28" pos:end="3865:28">&amp;</operator> <literal type="number" pos:start="3865:30" pos:end="3865:30">1</literal></expr>)</condition><block type="pseudo" pos:start="3867:25" pos:end="3867:42"><block_content pos:start="3867:25" pos:end="3867:42">

                        <goto pos:start="3867:25" pos:end="3867:42">goto <name pos:start="3867:30" pos:end="3867:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="3869:21" pos:end="3869:46"><expr pos:start="3869:21" pos:end="3869:45"><call pos:start="3869:21" pos:end="3869:45"><name pos:start="3869:21" pos:end="3869:43">gen_op_check_align_T0_7</name><argument_list pos:start="3869:44" pos:end="3869:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3871:21" pos:end="3871:39"><expr pos:start="3871:21" pos:end="3871:38"><call pos:start="3871:21" pos:end="3871:38"><name pos:start="3871:21" pos:end="3871:32">gen_ldda_asi</name><argument_list pos:start="3871:33" pos:end="3871:38">(<argument pos:start="3871:34" pos:end="3871:37"><expr pos:start="3871:34" pos:end="3871:37"><name pos:start="3871:34" pos:end="3871:37">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3873:21" pos:end="3873:44"><expr pos:start="3873:21" pos:end="3873:43"><call pos:start="3873:21" pos:end="3873:43"><name pos:start="3873:21" pos:end="3873:35">gen_movl_T0_reg</name><argument_list pos:start="3873:36" pos:end="3873:43">(<argument pos:start="3873:37" pos:end="3873:42"><expr pos:start="3873:37" pos:end="3873:42"><name pos:start="3873:37" pos:end="3873:38">rd</name> <operator pos:start="3873:40" pos:end="3873:40">+</operator> <literal type="number" pos:start="3873:42" pos:end="3873:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3875:21" pos:end="3875:26">break;</break>

                <case pos:start="3877:17" pos:end="3880:0">case <expr pos:start="3877:22" pos:end="3877:25"><literal type="number" pos:start="3877:22" pos:end="3877:25">0x19</literal></expr>:</case>      <comment type="block" pos:start="3877:33" pos:end="3877:64">/* load signed byte alternate */</comment>

<cpp:ifndef pos:start="3879:1" pos:end="3879:22">#<cpp:directive pos:start="3879:2" pos:end="3879:7">ifndef</cpp:directive> <name pos:start="3879:9" pos:end="3879:22">TARGET_SPARC64</name></cpp:ifndef>

                    <if_stmt pos:start="3881:21" pos:end="3883:42"><if pos:start="3881:21" pos:end="3883:42">if <condition pos:start="3881:24" pos:end="3881:31">(<expr pos:start="3881:25" pos:end="3881:30"><name pos:start="3881:25" pos:end="3881:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="3883:25" pos:end="3883:42"><block_content pos:start="3883:25" pos:end="3883:42">

                        <goto pos:start="3883:25" pos:end="3883:42">goto <name pos:start="3883:30" pos:end="3883:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="3885:21" pos:end="3890:0"><if pos:start="3885:21" pos:end="3890:0">if <condition pos:start="3885:24" pos:end="3885:40">(<expr pos:start="3885:25" pos:end="3885:39"><operator pos:start="3885:25" pos:end="3885:25">!</operator><call pos:start="3885:26" pos:end="3885:39"><name pos:start="3885:26" pos:end="3885:35">supervisor</name><argument_list pos:start="3885:36" pos:end="3885:39">(<argument pos:start="3885:37" pos:end="3885:38"><expr pos:start="3885:37" pos:end="3885:38"><name pos:start="3885:37" pos:end="3885:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3887:25" pos:end="3890:0"><block_content pos:start="3887:25" pos:end="3890:0">

                        <goto pos:start="3887:25" pos:end="3890:0">goto <name pos:start="3887:30" pos:end="3887:38">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:endif pos:start="3889:1" pos:end="3889:6">#<cpp:directive pos:start="3889:2" pos:end="3889:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3891:21" pos:end="3891:43"><expr pos:start="3891:21" pos:end="3891:42"><call pos:start="3891:21" pos:end="3891:42"><name pos:start="3891:21" pos:end="3891:30">gen_ld_asi</name><argument_list pos:start="3891:31" pos:end="3891:42">(<argument pos:start="3891:32" pos:end="3891:35"><expr pos:start="3891:32" pos:end="3891:35"><name pos:start="3891:32" pos:end="3891:35">insn</name></expr></argument>, <argument pos:start="3891:38" pos:end="3891:38"><expr pos:start="3891:38" pos:end="3891:38"><literal type="number" pos:start="3891:38" pos:end="3891:38">1</literal></expr></argument>, <argument pos:start="3891:41" pos:end="3891:41"><expr pos:start="3891:41" pos:end="3891:41"><literal type="number" pos:start="3891:41" pos:end="3891:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3893:21" pos:end="3893:26">break;</break>

                <case pos:start="3895:17" pos:end="3898:0">case <expr pos:start="3895:22" pos:end="3895:25"><literal type="number" pos:start="3895:22" pos:end="3895:25">0x1a</literal></expr>:</case>      <comment type="block" pos:start="3895:33" pos:end="3895:68">/* load signed halfword alternate */</comment>

<cpp:ifndef pos:start="3897:1" pos:end="3897:22">#<cpp:directive pos:start="3897:2" pos:end="3897:7">ifndef</cpp:directive> <name pos:start="3897:9" pos:end="3897:22">TARGET_SPARC64</name></cpp:ifndef>

                    <if_stmt pos:start="3899:21" pos:end="3901:42"><if pos:start="3899:21" pos:end="3901:42">if <condition pos:start="3899:24" pos:end="3899:31">(<expr pos:start="3899:25" pos:end="3899:30"><name pos:start="3899:25" pos:end="3899:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="3901:25" pos:end="3901:42"><block_content pos:start="3901:25" pos:end="3901:42">

                        <goto pos:start="3901:25" pos:end="3901:42">goto <name pos:start="3901:30" pos:end="3901:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="3903:21" pos:end="3908:0"><if pos:start="3903:21" pos:end="3908:0">if <condition pos:start="3903:24" pos:end="3903:40">(<expr pos:start="3903:25" pos:end="3903:39"><operator pos:start="3903:25" pos:end="3903:25">!</operator><call pos:start="3903:26" pos:end="3903:39"><name pos:start="3903:26" pos:end="3903:35">supervisor</name><argument_list pos:start="3903:36" pos:end="3903:39">(<argument pos:start="3903:37" pos:end="3903:38"><expr pos:start="3903:37" pos:end="3903:38"><name pos:start="3903:37" pos:end="3903:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3905:25" pos:end="3908:0"><block_content pos:start="3905:25" pos:end="3908:0">

                        <goto pos:start="3905:25" pos:end="3908:0">goto <name pos:start="3905:30" pos:end="3905:38">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:elif pos:start="3907:1" pos:end="3907:22">#<cpp:directive pos:start="3907:2" pos:end="3907:5">elif</cpp:directive> <expr pos:start="3907:7" pos:end="3907:22"><name pos:start="3907:7" pos:end="3907:22">CONFIG_USER_ONLY</name></expr></cpp:elif>

                    <expr_stmt pos:start="3909:21" pos:end="3912:0"><expr pos:start="3909:21" pos:end="3909:45"><call pos:start="3909:21" pos:end="3909:45"><name pos:start="3909:21" pos:end="3909:43">gen_op_check_align_T0_1</name><argument_list pos:start="3909:44" pos:end="3909:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3911:1" pos:end="3911:6">#<cpp:directive pos:start="3911:2" pos:end="3911:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3913:21" pos:end="3913:43"><expr pos:start="3913:21" pos:end="3913:42"><call pos:start="3913:21" pos:end="3913:42"><name pos:start="3913:21" pos:end="3913:30">gen_ld_asi</name><argument_list pos:start="3913:31" pos:end="3913:42">(<argument pos:start="3913:32" pos:end="3913:35"><expr pos:start="3913:32" pos:end="3913:35"><name pos:start="3913:32" pos:end="3913:35">insn</name></expr></argument>, <argument pos:start="3913:38" pos:end="3913:38"><expr pos:start="3913:38" pos:end="3913:38"><literal type="number" pos:start="3913:38" pos:end="3913:38">2</literal></expr></argument>, <argument pos:start="3913:41" pos:end="3913:41"><expr pos:start="3913:41" pos:end="3913:41"><literal type="number" pos:start="3913:41" pos:end="3913:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3915:21" pos:end="3915:26">break;</break>

                <case pos:start="3917:17" pos:end="3920:0">case <expr pos:start="3917:22" pos:end="3917:25"><literal type="number" pos:start="3917:22" pos:end="3917:25">0x1d</literal></expr>:</case>      <comment type="block" pos:start="3917:33" pos:end="3917:74">/* ldstuba -- XXX: should be atomically */</comment>

<cpp:ifndef pos:start="3919:1" pos:end="3919:22">#<cpp:directive pos:start="3919:2" pos:end="3919:7">ifndef</cpp:directive> <name pos:start="3919:9" pos:end="3919:22">TARGET_SPARC64</name></cpp:ifndef>

                    <if_stmt pos:start="3921:21" pos:end="3923:42"><if pos:start="3921:21" pos:end="3923:42">if <condition pos:start="3921:24" pos:end="3921:31">(<expr pos:start="3921:25" pos:end="3921:30"><name pos:start="3921:25" pos:end="3921:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="3923:25" pos:end="3923:42"><block_content pos:start="3923:25" pos:end="3923:42">

                        <goto pos:start="3923:25" pos:end="3923:42">goto <name pos:start="3923:30" pos:end="3923:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="3925:21" pos:end="3930:0"><if pos:start="3925:21" pos:end="3930:0">if <condition pos:start="3925:24" pos:end="3925:40">(<expr pos:start="3925:25" pos:end="3925:39"><operator pos:start="3925:25" pos:end="3925:25">!</operator><call pos:start="3925:26" pos:end="3925:39"><name pos:start="3925:26" pos:end="3925:35">supervisor</name><argument_list pos:start="3925:36" pos:end="3925:39">(<argument pos:start="3925:37" pos:end="3925:38"><expr pos:start="3925:37" pos:end="3925:38"><name pos:start="3925:37" pos:end="3925:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3927:25" pos:end="3930:0"><block_content pos:start="3927:25" pos:end="3930:0">

                        <goto pos:start="3927:25" pos:end="3930:0">goto <name pos:start="3927:30" pos:end="3927:38">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:endif pos:start="3929:1" pos:end="3929:6">#<cpp:directive pos:start="3929:2" pos:end="3929:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3931:21" pos:end="3931:41"><expr pos:start="3931:21" pos:end="3931:40"><call pos:start="3931:21" pos:end="3931:40"><name pos:start="3931:21" pos:end="3931:34">gen_ldstub_asi</name><argument_list pos:start="3931:35" pos:end="3931:40">(<argument pos:start="3931:36" pos:end="3931:39"><expr pos:start="3931:36" pos:end="3931:39"><name pos:start="3931:36" pos:end="3931:39">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3933:21" pos:end="3933:26">break;</break>

                <case pos:start="3935:17" pos:end="3938:0">case <expr pos:start="3935:22" pos:end="3935:25"><literal type="number" pos:start="3935:22" pos:end="3935:25">0x1f</literal></expr>:</case>      <comment type="block" pos:start="3935:33" pos:end="3935:80">/* swap reg with alt. memory. Also atomically */</comment>

<cpp:ifndef pos:start="3937:1" pos:end="3937:22">#<cpp:directive pos:start="3937:2" pos:end="3937:7">ifndef</cpp:directive> <name pos:start="3937:9" pos:end="3937:22">TARGET_SPARC64</name></cpp:ifndef>

                    <if_stmt pos:start="3939:21" pos:end="3941:42"><if pos:start="3939:21" pos:end="3941:42">if <condition pos:start="3939:24" pos:end="3939:31">(<expr pos:start="3939:25" pos:end="3939:30"><name pos:start="3939:25" pos:end="3939:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="3941:25" pos:end="3941:42"><block_content pos:start="3941:25" pos:end="3941:42">

                        <goto pos:start="3941:25" pos:end="3941:42">goto <name pos:start="3941:30" pos:end="3941:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="3943:21" pos:end="3948:0"><if pos:start="3943:21" pos:end="3948:0">if <condition pos:start="3943:24" pos:end="3943:40">(<expr pos:start="3943:25" pos:end="3943:39"><operator pos:start="3943:25" pos:end="3943:25">!</operator><call pos:start="3943:26" pos:end="3943:39"><name pos:start="3943:26" pos:end="3943:35">supervisor</name><argument_list pos:start="3943:36" pos:end="3943:39">(<argument pos:start="3943:37" pos:end="3943:38"><expr pos:start="3943:37" pos:end="3943:38"><name pos:start="3943:37" pos:end="3943:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3945:25" pos:end="3948:0"><block_content pos:start="3945:25" pos:end="3948:0">

                        <goto pos:start="3945:25" pos:end="3948:0">goto <name pos:start="3945:30" pos:end="3945:38">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:elif pos:start="3947:1" pos:end="3947:22">#<cpp:directive pos:start="3947:2" pos:end="3947:5">elif</cpp:directive> <expr pos:start="3947:7" pos:end="3947:22"><name pos:start="3947:7" pos:end="3947:22">CONFIG_USER_ONLY</name></expr></cpp:elif>

                    <expr_stmt pos:start="3949:21" pos:end="3952:0"><expr pos:start="3949:21" pos:end="3949:45"><call pos:start="3949:21" pos:end="3949:45"><name pos:start="3949:21" pos:end="3949:43">gen_op_check_align_T0_3</name><argument_list pos:start="3949:44" pos:end="3949:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3951:1" pos:end="3951:6">#<cpp:directive pos:start="3951:2" pos:end="3951:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3953:21" pos:end="3953:40"><expr pos:start="3953:21" pos:end="3953:39"><call pos:start="3953:21" pos:end="3953:39"><name pos:start="3953:21" pos:end="3953:35">gen_movl_reg_T1</name><argument_list pos:start="3953:36" pos:end="3953:39">(<argument pos:start="3953:37" pos:end="3953:38"><expr pos:start="3953:37" pos:end="3953:38"><name pos:start="3953:37" pos:end="3953:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3955:21" pos:end="3955:39"><expr pos:start="3955:21" pos:end="3955:38"><call pos:start="3955:21" pos:end="3955:38"><name pos:start="3955:21" pos:end="3955:32">gen_swap_asi</name><argument_list pos:start="3955:33" pos:end="3955:38">(<argument pos:start="3955:34" pos:end="3955:37"><expr pos:start="3955:34" pos:end="3955:37"><name pos:start="3955:34" pos:end="3955:37">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3957:21" pos:end="3962:0">break;</break>



<cpp:ifndef pos:start="3961:1" pos:end="3961:22">#<cpp:directive pos:start="3961:2" pos:end="3961:7">ifndef</cpp:directive> <name pos:start="3961:9" pos:end="3961:22">TARGET_SPARC64</name></cpp:ifndef>

                <case pos:start="3963:17" pos:end="3963:26">case <expr pos:start="3963:22" pos:end="3963:25"><literal type="number" pos:start="3963:22" pos:end="3963:25">0x30</literal></expr>:</case> <comment type="block" pos:start="3963:28" pos:end="3963:36">/* ldc */</comment>

                <case pos:start="3965:17" pos:end="3965:26">case <expr pos:start="3965:22" pos:end="3965:25"><literal type="number" pos:start="3965:22" pos:end="3965:25">0x31</literal></expr>:</case> <comment type="block" pos:start="3965:28" pos:end="3965:38">/* ldcsr */</comment>

                <case pos:start="3967:17" pos:end="3967:26">case <expr pos:start="3967:22" pos:end="3967:25"><literal type="number" pos:start="3967:22" pos:end="3967:25">0x33</literal></expr>:</case> <comment type="block" pos:start="3967:28" pos:end="3967:37">/* lddc */</comment>

                    <goto pos:start="3969:21" pos:end="3976:0">goto <name pos:start="3969:26" pos:end="3969:33">ncp_insn</name>;</goto>

<cpp:endif pos:start="3971:1" pos:end="3971:6">#<cpp:directive pos:start="3971:2" pos:end="3971:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="3973:1" pos:end="3973:6">#<cpp:directive pos:start="3973:2" pos:end="3973:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3975:1" pos:end="3975:21">#<cpp:directive pos:start="3975:2" pos:end="3975:6">ifdef</cpp:directive> <name pos:start="3975:8" pos:end="3975:21">TARGET_SPARC64</name></cpp:ifdef>

                <case pos:start="3977:17" pos:end="3980:0">case <expr pos:start="3977:22" pos:end="3977:25"><literal type="number" pos:start="3977:22" pos:end="3977:25">0x08</literal></expr>:</case> <comment type="block" pos:start="3977:28" pos:end="3977:40">/* V9 ldsw */</comment>

<cpp:ifdef pos:start="3979:1" pos:end="3979:23">#<cpp:directive pos:start="3979:2" pos:end="3979:6">ifdef</cpp:directive> <name pos:start="3979:8" pos:end="3979:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="3981:21" pos:end="3984:0"><expr pos:start="3981:21" pos:end="3981:45"><call pos:start="3981:21" pos:end="3981:45"><name pos:start="3981:21" pos:end="3981:43">gen_op_check_align_T0_3</name><argument_list pos:start="3981:44" pos:end="3981:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3983:1" pos:end="3983:6">#<cpp:directive pos:start="3983:2" pos:end="3983:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3985:21" pos:end="3985:38"><expr pos:start="3985:21" pos:end="3985:37"><call pos:start="3985:21" pos:end="3985:37"><name pos:start="3985:21" pos:end="3985:31">gen_op_ldst</name><argument_list pos:start="3985:32" pos:end="3985:37">(<argument pos:start="3985:33" pos:end="3985:36"><expr pos:start="3985:33" pos:end="3985:36"><name pos:start="3985:33" pos:end="3985:36">ldsw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3987:21" pos:end="3987:26">break;</break>

                <case pos:start="3989:17" pos:end="3989:26">case <expr pos:start="3989:22" pos:end="3989:25"><literal type="number" pos:start="3989:22" pos:end="3989:25">0x0b</literal></expr>:</case> <comment type="block" pos:start="3989:28" pos:end="3989:39">/* V9 ldx */</comment>

                    <expr_stmt pos:start="3991:21" pos:end="3991:46"><expr pos:start="3991:21" pos:end="3991:45"><call pos:start="3991:21" pos:end="3991:45"><name pos:start="3991:21" pos:end="3991:43">gen_op_check_align_T0_7</name><argument_list pos:start="3991:44" pos:end="3991:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3993:21" pos:end="3993:37"><expr pos:start="3993:21" pos:end="3993:36"><call pos:start="3993:21" pos:end="3993:36"><name pos:start="3993:21" pos:end="3993:31">gen_op_ldst</name><argument_list pos:start="3993:32" pos:end="3993:36">(<argument pos:start="3993:33" pos:end="3993:35"><expr pos:start="3993:33" pos:end="3993:35"><name pos:start="3993:33" pos:end="3993:35">ldx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3995:21" pos:end="3995:26">break;</break>

                <case pos:start="3997:17" pos:end="4000:0">case <expr pos:start="3997:22" pos:end="3997:25"><literal type="number" pos:start="3997:22" pos:end="3997:25">0x18</literal></expr>:</case> <comment type="block" pos:start="3997:28" pos:end="3997:41">/* V9 ldswa */</comment>

<cpp:ifdef pos:start="3999:1" pos:end="3999:23">#<cpp:directive pos:start="3999:2" pos:end="3999:6">ifdef</cpp:directive> <name pos:start="3999:8" pos:end="3999:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="4001:21" pos:end="4004:0"><expr pos:start="4001:21" pos:end="4001:45"><call pos:start="4001:21" pos:end="4001:45"><name pos:start="4001:21" pos:end="4001:43">gen_op_check_align_T0_3</name><argument_list pos:start="4001:44" pos:end="4001:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="4003:1" pos:end="4003:6">#<cpp:directive pos:start="4003:2" pos:end="4003:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="4005:21" pos:end="4005:43"><expr pos:start="4005:21" pos:end="4005:42"><call pos:start="4005:21" pos:end="4005:42"><name pos:start="4005:21" pos:end="4005:30">gen_ld_asi</name><argument_list pos:start="4005:31" pos:end="4005:42">(<argument pos:start="4005:32" pos:end="4005:35"><expr pos:start="4005:32" pos:end="4005:35"><name pos:start="4005:32" pos:end="4005:35">insn</name></expr></argument>, <argument pos:start="4005:38" pos:end="4005:38"><expr pos:start="4005:38" pos:end="4005:38"><literal type="number" pos:start="4005:38" pos:end="4005:38">4</literal></expr></argument>, <argument pos:start="4005:41" pos:end="4005:41"><expr pos:start="4005:41" pos:end="4005:41"><literal type="number" pos:start="4005:41" pos:end="4005:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4007:21" pos:end="4007:26">break;</break>

                <case pos:start="4009:17" pos:end="4009:26">case <expr pos:start="4009:22" pos:end="4009:25"><literal type="number" pos:start="4009:22" pos:end="4009:25">0x1b</literal></expr>:</case> <comment type="block" pos:start="4009:28" pos:end="4009:40">/* V9 ldxa */</comment>

                    <expr_stmt pos:start="4011:21" pos:end="4011:46"><expr pos:start="4011:21" pos:end="4011:45"><call pos:start="4011:21" pos:end="4011:45"><name pos:start="4011:21" pos:end="4011:43">gen_op_check_align_T0_7</name><argument_list pos:start="4011:44" pos:end="4011:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4013:21" pos:end="4013:43"><expr pos:start="4013:21" pos:end="4013:42"><call pos:start="4013:21" pos:end="4013:42"><name pos:start="4013:21" pos:end="4013:30">gen_ld_asi</name><argument_list pos:start="4013:31" pos:end="4013:42">(<argument pos:start="4013:32" pos:end="4013:35"><expr pos:start="4013:32" pos:end="4013:35"><name pos:start="4013:32" pos:end="4013:35">insn</name></expr></argument>, <argument pos:start="4013:38" pos:end="4013:38"><expr pos:start="4013:38" pos:end="4013:38"><literal type="number" pos:start="4013:38" pos:end="4013:38">8</literal></expr></argument>, <argument pos:start="4013:41" pos:end="4013:41"><expr pos:start="4013:41" pos:end="4013:41"><literal type="number" pos:start="4013:41" pos:end="4013:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4015:21" pos:end="4015:26">break;</break>

                <case pos:start="4017:17" pos:end="4017:26">case <expr pos:start="4017:22" pos:end="4017:25"><literal type="number" pos:start="4017:22" pos:end="4017:25">0x2d</literal></expr>:</case> <comment type="block" pos:start="4017:28" pos:end="4017:55">/* V9 prefetch, no effect */</comment>

                    <goto pos:start="4019:21" pos:end="4019:35">goto <name pos:start="4019:26" pos:end="4019:34">skip_move</name>;</goto>

                <case pos:start="4021:17" pos:end="4024:0">case <expr pos:start="4021:22" pos:end="4021:25"><literal type="number" pos:start="4021:22" pos:end="4021:25">0x30</literal></expr>:</case> <comment type="block" pos:start="4021:28" pos:end="4021:40">/* V9 ldfa */</comment>

<cpp:ifdef pos:start="4023:1" pos:end="4023:23">#<cpp:directive pos:start="4023:2" pos:end="4023:6">ifdef</cpp:directive> <name pos:start="4023:8" pos:end="4023:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="4025:21" pos:end="4028:0"><expr pos:start="4025:21" pos:end="4025:45"><call pos:start="4025:21" pos:end="4025:45"><name pos:start="4025:21" pos:end="4025:43">gen_op_check_align_T0_3</name><argument_list pos:start="4025:44" pos:end="4025:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="4027:1" pos:end="4027:6">#<cpp:directive pos:start="4027:2" pos:end="4027:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="4029:21" pos:end="4029:41"><expr pos:start="4029:21" pos:end="4029:40"><call pos:start="4029:21" pos:end="4029:40"><name pos:start="4029:21" pos:end="4029:31">gen_ldf_asi</name><argument_list pos:start="4029:32" pos:end="4029:40">(<argument pos:start="4029:33" pos:end="4029:36"><expr pos:start="4029:33" pos:end="4029:36"><name pos:start="4029:33" pos:end="4029:36">insn</name></expr></argument>, <argument pos:start="4029:39" pos:end="4029:39"><expr pos:start="4029:39" pos:end="4029:39"><literal type="number" pos:start="4029:39" pos:end="4029:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="4031:21" pos:end="4031:35">goto <name pos:start="4031:26" pos:end="4031:34">skip_move</name>;</goto>

                <case pos:start="4033:17" pos:end="4033:26">case <expr pos:start="4033:22" pos:end="4033:25"><literal type="number" pos:start="4033:22" pos:end="4033:25">0x33</literal></expr>:</case> <comment type="block" pos:start="4033:28" pos:end="4033:41">/* V9 lddfa */</comment>

                    <expr_stmt pos:start="4035:21" pos:end="4035:46"><expr pos:start="4035:21" pos:end="4035:45"><call pos:start="4035:21" pos:end="4035:45"><name pos:start="4035:21" pos:end="4035:43">gen_op_check_align_T0_3</name><argument_list pos:start="4035:44" pos:end="4035:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4037:21" pos:end="4037:41"><expr pos:start="4037:21" pos:end="4037:40"><call pos:start="4037:21" pos:end="4037:40"><name pos:start="4037:21" pos:end="4037:31">gen_ldf_asi</name><argument_list pos:start="4037:32" pos:end="4037:40">(<argument pos:start="4037:33" pos:end="4037:36"><expr pos:start="4037:33" pos:end="4037:36"><name pos:start="4037:33" pos:end="4037:36">insn</name></expr></argument>, <argument pos:start="4037:39" pos:end="4037:39"><expr pos:start="4037:39" pos:end="4037:39"><literal type="number" pos:start="4037:39" pos:end="4037:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="4039:21" pos:end="4039:35">goto <name pos:start="4039:26" pos:end="4039:34">skip_move</name>;</goto>

                <case pos:start="4041:17" pos:end="4041:26">case <expr pos:start="4041:22" pos:end="4041:25"><literal type="number" pos:start="4041:22" pos:end="4041:25">0x3d</literal></expr>:</case> <comment type="block" pos:start="4041:28" pos:end="4041:56">/* V9 prefetcha, no effect */</comment>

                    <goto pos:start="4043:21" pos:end="4043:35">goto <name pos:start="4043:26" pos:end="4043:34">skip_move</name>;</goto>

                <case pos:start="4045:17" pos:end="4045:26">case <expr pos:start="4045:22" pos:end="4045:25"><literal type="number" pos:start="4045:22" pos:end="4045:25">0x32</literal></expr>:</case> <comment type="block" pos:start="4045:28" pos:end="4045:41">/* V9 ldqfa */</comment>

                    <goto pos:start="4047:21" pos:end="4050:0">goto <name pos:start="4047:26" pos:end="4047:34">nfpu_insn</name>;</goto>

<cpp:endif pos:start="4049:1" pos:end="4049:6">#<cpp:directive pos:start="4049:2" pos:end="4049:6">endif</cpp:directive></cpp:endif>

                <default pos:start="4051:17" pos:end="4051:24">default:</default>

                    <goto pos:start="4053:21" pos:end="4053:38">goto <name pos:start="4053:26" pos:end="4053:37">illegal_insn</name>;</goto>

                </block_content>}</block></switch>

                <expr_stmt pos:start="4057:17" pos:end="4060:0"><expr pos:start="4057:17" pos:end="4057:35"><call pos:start="4057:17" pos:end="4057:35"><name pos:start="4057:17" pos:end="4057:31">gen_movl_T1_reg</name><argument_list pos:start="4057:32" pos:end="4057:35">(<argument pos:start="4057:33" pos:end="4057:34"><expr pos:start="4057:33" pos:end="4057:34"><name pos:start="4057:33" pos:end="4057:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="4059:1" pos:end="4059:21">#<cpp:directive pos:start="4059:2" pos:end="4059:6">ifdef</cpp:directive> <name pos:start="4059:8" pos:end="4059:21">TARGET_SPARC64</name></cpp:ifdef>

            <label pos:start="4061:13" pos:end="4061:22"><name pos:start="4061:13" pos:end="4061:21">skip_move</name>:</label> <empty_stmt pos:start="4061:24" pos:end="4064:0">;</empty_stmt>

<cpp:endif pos:start="4063:1" pos:end="4063:6">#<cpp:directive pos:start="4063:2" pos:end="4063:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></if> <if type="elseif" pos:start="4065:15" pos:end="4121:13">else if <condition pos:start="4065:23" pos:end="4065:49">(<expr pos:start="4065:24" pos:end="4065:48"><name pos:start="4065:24" pos:end="4065:26">xop</name> <operator pos:start="4065:28" pos:end="4065:29">&gt;=</operator> <literal type="number" pos:start="4065:31" pos:end="4065:34">0x20</literal> <operator pos:start="4065:36" pos:end="4065:37">&amp;&amp;</operator> <name pos:start="4065:39" pos:end="4065:41">xop</name> <operator pos:start="4065:43" pos:end="4065:43">&lt;</operator> <literal type="number" pos:start="4065:45" pos:end="4065:48">0x24</literal></expr>)</condition> <block pos:start="4065:51" pos:end="4121:13">{<block_content pos:start="4067:17" pos:end="4119:17">

                <if_stmt pos:start="4067:17" pos:end="4069:34"><if pos:start="4067:17" pos:end="4069:34">if <condition pos:start="4067:20" pos:end="4067:41">(<expr pos:start="4067:21" pos:end="4067:40"><call pos:start="4067:21" pos:end="4067:40"><name pos:start="4067:21" pos:end="4067:36">gen_trap_ifnofpu</name><argument_list pos:start="4067:37" pos:end="4067:40">(<argument pos:start="4067:38" pos:end="4067:39"><expr pos:start="4067:38" pos:end="4067:39"><name pos:start="4067:38" pos:end="4067:39">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4069:21" pos:end="4069:34"><block_content pos:start="4069:21" pos:end="4069:34">

                    <goto pos:start="4069:21" pos:end="4069:34">goto <name pos:start="4069:26" pos:end="4069:33">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

                <switch pos:start="4071:17" pos:end="4119:17">switch <condition pos:start="4071:24" pos:end="4071:28">(<expr pos:start="4071:25" pos:end="4071:27"><name pos:start="4071:25" pos:end="4071:27">xop</name></expr>)</condition> <block pos:start="4071:30" pos:end="4119:17">{<block_content pos:start="4073:17" pos:end="4117:38">

                <case pos:start="4073:17" pos:end="4076:0">case <expr pos:start="4073:22" pos:end="4073:25"><literal type="number" pos:start="4073:22" pos:end="4073:25">0x20</literal></expr>:</case>      <comment type="block" pos:start="4073:33" pos:end="4073:48">/* load fpreg */</comment>

<cpp:ifdef pos:start="4075:1" pos:end="4075:23">#<cpp:directive pos:start="4075:2" pos:end="4075:6">ifdef</cpp:directive> <name pos:start="4075:8" pos:end="4075:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="4077:21" pos:end="4080:0"><expr pos:start="4077:21" pos:end="4077:45"><call pos:start="4077:21" pos:end="4077:45"><name pos:start="4077:21" pos:end="4077:43">gen_op_check_align_T0_3</name><argument_list pos:start="4077:44" pos:end="4077:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="4079:1" pos:end="4079:6">#<cpp:directive pos:start="4079:2" pos:end="4079:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="4081:21" pos:end="4081:37"><expr pos:start="4081:21" pos:end="4081:36"><call pos:start="4081:21" pos:end="4081:36"><name pos:start="4081:21" pos:end="4081:31">gen_op_ldst</name><argument_list pos:start="4081:32" pos:end="4081:36">(<argument pos:start="4081:33" pos:end="4081:35"><expr pos:start="4081:33" pos:end="4081:35"><name pos:start="4081:33" pos:end="4081:35">ldf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4083:21" pos:end="4083:45"><expr pos:start="4083:21" pos:end="4083:44"><call pos:start="4083:21" pos:end="4083:44"><name pos:start="4083:21" pos:end="4083:40">gen_op_store_FT0_fpr</name><argument_list pos:start="4083:41" pos:end="4083:44">(<argument pos:start="4083:42" pos:end="4083:43"><expr pos:start="4083:42" pos:end="4083:43"><name pos:start="4083:42" pos:end="4083:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4085:21" pos:end="4085:26">break;</break>

                <case pos:start="4087:17" pos:end="4090:0">case <expr pos:start="4087:22" pos:end="4087:25"><literal type="number" pos:start="4087:22" pos:end="4087:25">0x21</literal></expr>:</case>      <comment type="block" pos:start="4087:33" pos:end="4087:46">/* load fsr */</comment>

<cpp:ifdef pos:start="4089:1" pos:end="4089:23">#<cpp:directive pos:start="4089:2" pos:end="4089:6">ifdef</cpp:directive> <name pos:start="4089:8" pos:end="4089:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="4091:21" pos:end="4094:0"><expr pos:start="4091:21" pos:end="4091:45"><call pos:start="4091:21" pos:end="4091:45"><name pos:start="4091:21" pos:end="4091:43">gen_op_check_align_T0_3</name><argument_list pos:start="4091:44" pos:end="4091:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="4093:1" pos:end="4093:6">#<cpp:directive pos:start="4093:2" pos:end="4093:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="4095:21" pos:end="4095:37"><expr pos:start="4095:21" pos:end="4095:36"><call pos:start="4095:21" pos:end="4095:36"><name pos:start="4095:21" pos:end="4095:31">gen_op_ldst</name><argument_list pos:start="4095:32" pos:end="4095:36">(<argument pos:start="4095:33" pos:end="4095:35"><expr pos:start="4095:33" pos:end="4095:35"><name pos:start="4095:33" pos:end="4095:35">ldf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4097:21" pos:end="4097:35"><expr pos:start="4097:21" pos:end="4097:34"><call pos:start="4097:21" pos:end="4097:34"><name pos:start="4097:21" pos:end="4097:32">gen_op_ldfsr</name><argument_list pos:start="4097:33" pos:end="4097:34">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4099:21" pos:end="4099:26">break;</break>

                <case pos:start="4101:17" pos:end="4101:26">case <expr pos:start="4101:22" pos:end="4101:25"><literal type="number" pos:start="4101:22" pos:end="4101:25">0x22</literal></expr>:</case>      <comment type="block" pos:start="4101:33" pos:end="4101:53">/* load quad fpreg */</comment>

                    <goto pos:start="4103:21" pos:end="4103:35">goto <name pos:start="4103:26" pos:end="4103:34">nfpu_insn</name>;</goto>

                <case pos:start="4105:17" pos:end="4105:26">case <expr pos:start="4105:22" pos:end="4105:25"><literal type="number" pos:start="4105:22" pos:end="4105:25">0x23</literal></expr>:</case>      <comment type="block" pos:start="4105:33" pos:end="4105:55">/* load double fpreg */</comment>

                    <expr_stmt pos:start="4107:21" pos:end="4107:46"><expr pos:start="4107:21" pos:end="4107:45"><call pos:start="4107:21" pos:end="4107:45"><name pos:start="4107:21" pos:end="4107:43">gen_op_check_align_T0_7</name><argument_list pos:start="4107:44" pos:end="4107:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4109:21" pos:end="4109:38"><expr pos:start="4109:21" pos:end="4109:37"><call pos:start="4109:21" pos:end="4109:37"><name pos:start="4109:21" pos:end="4109:31">gen_op_ldst</name><argument_list pos:start="4109:32" pos:end="4109:37">(<argument pos:start="4109:33" pos:end="4109:36"><expr pos:start="4109:33" pos:end="4109:36"><name pos:start="4109:33" pos:end="4109:36">lddf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4111:21" pos:end="4111:53"><expr pos:start="4111:21" pos:end="4111:52"><call pos:start="4111:21" pos:end="4111:52"><name pos:start="4111:21" pos:end="4111:40">gen_op_store_DT0_fpr</name><argument_list pos:start="4111:41" pos:end="4111:52">(<argument pos:start="4111:42" pos:end="4111:51"><expr pos:start="4111:42" pos:end="4111:51"><call pos:start="4111:42" pos:end="4111:51"><name pos:start="4111:42" pos:end="4111:47">DFPREG</name><argument_list pos:start="4111:48" pos:end="4111:51">(<argument pos:start="4111:49" pos:end="4111:50"><expr pos:start="4111:49" pos:end="4111:50"><name pos:start="4111:49" pos:end="4111:50">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4113:21" pos:end="4113:26">break;</break>

                <default pos:start="4115:17" pos:end="4115:24">default:</default>

                    <goto pos:start="4117:21" pos:end="4117:38">goto <name pos:start="4117:26" pos:end="4117:37">illegal_insn</name>;</goto>

                </block_content>}</block></switch>

            </block_content>}</block></if> <if type="elseif" pos:start="4121:15" pos:end="4299:13">else if <condition pos:start="4121:23" pos:end="4123:49">(<expr pos:start="4121:24" pos:end="4123:48"><name pos:start="4121:24" pos:end="4121:26">xop</name> <operator pos:start="4121:28" pos:end="4121:28">&lt;</operator> <literal type="number" pos:start="4121:30" pos:end="4121:30">8</literal> <operator pos:start="4121:32" pos:end="4121:33">||</operator> <operator pos:start="4121:35" pos:end="4121:35">(</operator><name pos:start="4121:36" pos:end="4121:38">xop</name> <operator pos:start="4121:40" pos:end="4121:41">&gt;=</operator> <literal type="number" pos:start="4121:43" pos:end="4121:46">0x14</literal> <operator pos:start="4121:48" pos:end="4121:49">&amp;&amp;</operator> <name pos:start="4121:51" pos:end="4121:53">xop</name> <operator pos:start="4121:55" pos:end="4121:55">&lt;</operator> <literal type="number" pos:start="4121:57" pos:end="4121:60">0x18</literal><operator pos:start="4121:61" pos:end="4121:61">)</operator> <operator pos:start="4121:63" pos:end="4121:64">||</operator> \

                       <name pos:start="4123:24" pos:end="4123:26">xop</name> <operator pos:start="4123:28" pos:end="4123:29">==</operator> <literal type="number" pos:start="4123:31" pos:end="4123:33">0xe</literal> <operator pos:start="4123:35" pos:end="4123:36">||</operator> <name pos:start="4123:38" pos:end="4123:40">xop</name> <operator pos:start="4123:42" pos:end="4123:43">==</operator> <literal type="number" pos:start="4123:45" pos:end="4123:48">0x1e</literal></expr>)</condition> <block pos:start="4123:51" pos:end="4299:13">{<block_content pos:start="4125:17" pos:end="4297:17">

                <expr_stmt pos:start="4125:17" pos:end="4125:36"><expr pos:start="4125:17" pos:end="4125:35"><call pos:start="4125:17" pos:end="4125:35"><name pos:start="4125:17" pos:end="4125:31">gen_movl_reg_T1</name><argument_list pos:start="4125:32" pos:end="4125:35">(<argument pos:start="4125:33" pos:end="4125:34"><expr pos:start="4125:33" pos:end="4125:34"><name pos:start="4125:33" pos:end="4125:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="4127:17" pos:end="4297:17">switch <condition pos:start="4127:24" pos:end="4127:28">(<expr pos:start="4127:25" pos:end="4127:27"><name pos:start="4127:25" pos:end="4127:27">xop</name></expr>)</condition> <block pos:start="4127:30" pos:end="4297:17">{<block_content pos:start="4129:17" pos:end="4295:38">

                <case pos:start="4129:17" pos:end="4132:0">case <expr pos:start="4129:22" pos:end="4129:24"><literal type="number" pos:start="4129:22" pos:end="4129:24">0x4</literal></expr>:</case>

<cpp:ifdef pos:start="4131:1" pos:end="4131:23">#<cpp:directive pos:start="4131:2" pos:end="4131:6">ifdef</cpp:directive> <name pos:start="4131:8" pos:end="4131:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="4133:21" pos:end="4136:0"><expr pos:start="4133:21" pos:end="4133:45"><call pos:start="4133:21" pos:end="4133:45"><name pos:start="4133:21" pos:end="4133:43">gen_op_check_align_T0_3</name><argument_list pos:start="4133:44" pos:end="4133:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="4135:1" pos:end="4135:6">#<cpp:directive pos:start="4135:2" pos:end="4135:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="4137:21" pos:end="4137:36"><expr pos:start="4137:21" pos:end="4137:35"><call pos:start="4137:21" pos:end="4137:35"><name pos:start="4137:21" pos:end="4137:31">gen_op_ldst</name><argument_list pos:start="4137:32" pos:end="4137:35">(<argument pos:start="4137:33" pos:end="4137:34"><expr pos:start="4137:33" pos:end="4137:34"><name pos:start="4137:33" pos:end="4137:34">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4139:21" pos:end="4139:26">break;</break>

                <case pos:start="4141:17" pos:end="4141:25">case <expr pos:start="4141:22" pos:end="4141:24"><literal type="number" pos:start="4141:22" pos:end="4141:24">0x5</literal></expr>:</case>

                    <expr_stmt pos:start="4143:21" pos:end="4143:37"><expr pos:start="4143:21" pos:end="4143:36"><call pos:start="4143:21" pos:end="4143:36"><name pos:start="4143:21" pos:end="4143:31">gen_op_ldst</name><argument_list pos:start="4143:32" pos:end="4143:36">(<argument pos:start="4143:33" pos:end="4143:35"><expr pos:start="4143:33" pos:end="4143:35"><name pos:start="4143:33" pos:end="4143:35">stb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4145:21" pos:end="4145:26">break;</break>

                <case pos:start="4147:17" pos:end="4150:0">case <expr pos:start="4147:22" pos:end="4147:24"><literal type="number" pos:start="4147:22" pos:end="4147:24">0x6</literal></expr>:</case>

<cpp:ifdef pos:start="4149:1" pos:end="4149:23">#<cpp:directive pos:start="4149:2" pos:end="4149:6">ifdef</cpp:directive> <name pos:start="4149:8" pos:end="4149:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="4151:21" pos:end="4154:0"><expr pos:start="4151:21" pos:end="4151:45"><call pos:start="4151:21" pos:end="4151:45"><name pos:start="4151:21" pos:end="4151:43">gen_op_check_align_T0_1</name><argument_list pos:start="4151:44" pos:end="4151:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="4153:1" pos:end="4153:6">#<cpp:directive pos:start="4153:2" pos:end="4153:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="4155:21" pos:end="4155:37"><expr pos:start="4155:21" pos:end="4155:36"><call pos:start="4155:21" pos:end="4155:36"><name pos:start="4155:21" pos:end="4155:31">gen_op_ldst</name><argument_list pos:start="4155:32" pos:end="4155:36">(<argument pos:start="4155:33" pos:end="4155:35"><expr pos:start="4155:33" pos:end="4155:35"><name pos:start="4155:33" pos:end="4155:35">sth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4157:21" pos:end="4157:26">break;</break>

                <case pos:start="4159:17" pos:end="4159:25">case <expr pos:start="4159:22" pos:end="4159:24"><literal type="number" pos:start="4159:22" pos:end="4159:24">0x7</literal></expr>:</case>

                    <if_stmt pos:start="4161:21" pos:end="4163:42"><if pos:start="4161:21" pos:end="4163:42">if <condition pos:start="4161:24" pos:end="4161:31">(<expr pos:start="4161:25" pos:end="4161:30"><name pos:start="4161:25" pos:end="4161:26">rd</name> <operator pos:start="4161:28" pos:end="4161:28">&amp;</operator> <literal type="number" pos:start="4161:30" pos:end="4161:30">1</literal></expr>)</condition><block type="pseudo" pos:start="4163:25" pos:end="4163:42"><block_content pos:start="4163:25" pos:end="4163:42">

                        <goto pos:start="4163:25" pos:end="4163:42">goto <name pos:start="4163:30" pos:end="4163:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="4165:21" pos:end="4165:46"><expr pos:start="4165:21" pos:end="4165:45"><call pos:start="4165:21" pos:end="4165:45"><name pos:start="4165:21" pos:end="4165:43">gen_op_check_align_T0_7</name><argument_list pos:start="4165:44" pos:end="4165:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4167:21" pos:end="4167:33"><expr pos:start="4167:21" pos:end="4167:32"><call pos:start="4167:21" pos:end="4167:32"><name pos:start="4167:21" pos:end="4167:28">flush_T2</name><argument_list pos:start="4167:29" pos:end="4167:32">(<argument pos:start="4167:30" pos:end="4167:31"><expr pos:start="4167:30" pos:end="4167:31"><name pos:start="4167:30" pos:end="4167:31">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4169:21" pos:end="4169:44"><expr pos:start="4169:21" pos:end="4169:43"><call pos:start="4169:21" pos:end="4169:43"><name pos:start="4169:21" pos:end="4169:35">gen_movl_reg_T2</name><argument_list pos:start="4169:36" pos:end="4169:43">(<argument pos:start="4169:37" pos:end="4169:42"><expr pos:start="4169:37" pos:end="4169:42"><name pos:start="4169:37" pos:end="4169:38">rd</name> <operator pos:start="4169:40" pos:end="4169:40">+</operator> <literal type="number" pos:start="4169:42" pos:end="4169:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4171:21" pos:end="4171:37"><expr pos:start="4171:21" pos:end="4171:36"><call pos:start="4171:21" pos:end="4171:36"><name pos:start="4171:21" pos:end="4171:31">gen_op_ldst</name><argument_list pos:start="4171:32" pos:end="4171:36">(<argument pos:start="4171:33" pos:end="4171:35"><expr pos:start="4171:33" pos:end="4171:35"><name pos:start="4171:33" pos:end="4171:35">std</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4173:21" pos:end="4176:0">break;</break>

<cpp:if pos:start="4175:1" pos:end="4175:57">#<cpp:directive pos:start="4175:2" pos:end="4175:3">if</cpp:directive> <expr pos:start="4175:5" pos:end="4175:57"><operator pos:start="4175:5" pos:end="4175:5">!</operator><call pos:start="4175:6" pos:end="4175:30"><name pos:start="4175:6" pos:end="4175:12">defined</name><argument_list pos:start="4175:13" pos:end="4175:30">(<argument pos:start="4175:14" pos:end="4175:29"><expr pos:start="4175:14" pos:end="4175:29"><name pos:start="4175:14" pos:end="4175:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call> <operator pos:start="4175:32" pos:end="4175:33">||</operator> <call pos:start="4175:35" pos:end="4175:57"><name pos:start="4175:35" pos:end="4175:41">defined</name><argument_list pos:start="4175:42" pos:end="4175:57">(<argument pos:start="4175:43" pos:end="4175:56"><expr pos:start="4175:43" pos:end="4175:56"><name pos:start="4175:43" pos:end="4175:56">TARGET_SPARC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <case pos:start="4177:17" pos:end="4180:0">case <expr pos:start="4177:22" pos:end="4177:25"><literal type="number" pos:start="4177:22" pos:end="4177:25">0x14</literal></expr>:</case>

<cpp:ifndef pos:start="4179:1" pos:end="4179:22">#<cpp:directive pos:start="4179:2" pos:end="4179:7">ifndef</cpp:directive> <name pos:start="4179:9" pos:end="4179:22">TARGET_SPARC64</name></cpp:ifndef>

                    <if_stmt pos:start="4181:21" pos:end="4183:42"><if pos:start="4181:21" pos:end="4183:42">if <condition pos:start="4181:24" pos:end="4181:31">(<expr pos:start="4181:25" pos:end="4181:30"><name pos:start="4181:25" pos:end="4181:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="4183:25" pos:end="4183:42"><block_content pos:start="4183:25" pos:end="4183:42">

                        <goto pos:start="4183:25" pos:end="4183:42">goto <name pos:start="4183:30" pos:end="4183:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="4185:21" pos:end="4192:0"><if pos:start="4185:21" pos:end="4192:0">if <condition pos:start="4185:24" pos:end="4185:40">(<expr pos:start="4185:25" pos:end="4185:39"><operator pos:start="4185:25" pos:end="4185:25">!</operator><call pos:start="4185:26" pos:end="4185:39"><name pos:start="4185:26" pos:end="4185:35">supervisor</name><argument_list pos:start="4185:36" pos:end="4185:39">(<argument pos:start="4185:37" pos:end="4185:38"><expr pos:start="4185:37" pos:end="4185:38"><name pos:start="4185:37" pos:end="4185:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4187:25" pos:end="4192:0"><block_content pos:start="4187:25" pos:end="4192:0">

                        <goto pos:start="4187:25" pos:end="4192:0">goto <name pos:start="4187:30" pos:end="4187:38">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:endif pos:start="4189:1" pos:end="4189:6">#<cpp:directive pos:start="4189:2" pos:end="4189:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4191:1" pos:end="4191:23">#<cpp:directive pos:start="4191:2" pos:end="4191:6">ifdef</cpp:directive> <name pos:start="4191:8" pos:end="4191:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="4193:21" pos:end="4196:0"><expr pos:start="4193:21" pos:end="4193:45"><call pos:start="4193:21" pos:end="4193:45"><name pos:start="4193:21" pos:end="4193:43">gen_op_check_align_T0_3</name><argument_list pos:start="4193:44" pos:end="4193:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="4195:1" pos:end="4195:6">#<cpp:directive pos:start="4195:2" pos:end="4195:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="4197:21" pos:end="4197:40"><expr pos:start="4197:21" pos:end="4197:39"><call pos:start="4197:21" pos:end="4197:39"><name pos:start="4197:21" pos:end="4197:30">gen_st_asi</name><argument_list pos:start="4197:31" pos:end="4197:39">(<argument pos:start="4197:32" pos:end="4197:35"><expr pos:start="4197:32" pos:end="4197:35"><name pos:start="4197:32" pos:end="4197:35">insn</name></expr></argument>, <argument pos:start="4197:38" pos:end="4197:38"><expr pos:start="4197:38" pos:end="4197:38"><literal type="number" pos:start="4197:38" pos:end="4197:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4199:21" pos:end="4199:26">break;</break>

                <case pos:start="4201:17" pos:end="4204:0">case <expr pos:start="4201:22" pos:end="4201:25"><literal type="number" pos:start="4201:22" pos:end="4201:25">0x15</literal></expr>:</case>

<cpp:ifndef pos:start="4203:1" pos:end="4203:22">#<cpp:directive pos:start="4203:2" pos:end="4203:7">ifndef</cpp:directive> <name pos:start="4203:9" pos:end="4203:22">TARGET_SPARC64</name></cpp:ifndef>

                    <if_stmt pos:start="4205:21" pos:end="4207:42"><if pos:start="4205:21" pos:end="4207:42">if <condition pos:start="4205:24" pos:end="4205:31">(<expr pos:start="4205:25" pos:end="4205:30"><name pos:start="4205:25" pos:end="4205:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="4207:25" pos:end="4207:42"><block_content pos:start="4207:25" pos:end="4207:42">

                        <goto pos:start="4207:25" pos:end="4207:42">goto <name pos:start="4207:30" pos:end="4207:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="4209:21" pos:end="4214:0"><if pos:start="4209:21" pos:end="4214:0">if <condition pos:start="4209:24" pos:end="4209:40">(<expr pos:start="4209:25" pos:end="4209:39"><operator pos:start="4209:25" pos:end="4209:25">!</operator><call pos:start="4209:26" pos:end="4209:39"><name pos:start="4209:26" pos:end="4209:35">supervisor</name><argument_list pos:start="4209:36" pos:end="4209:39">(<argument pos:start="4209:37" pos:end="4209:38"><expr pos:start="4209:37" pos:end="4209:38"><name pos:start="4209:37" pos:end="4209:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4211:25" pos:end="4214:0"><block_content pos:start="4211:25" pos:end="4214:0">

                        <goto pos:start="4211:25" pos:end="4214:0">goto <name pos:start="4211:30" pos:end="4211:38">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:endif pos:start="4213:1" pos:end="4213:6">#<cpp:directive pos:start="4213:2" pos:end="4213:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="4215:21" pos:end="4215:40"><expr pos:start="4215:21" pos:end="4215:39"><call pos:start="4215:21" pos:end="4215:39"><name pos:start="4215:21" pos:end="4215:30">gen_st_asi</name><argument_list pos:start="4215:31" pos:end="4215:39">(<argument pos:start="4215:32" pos:end="4215:35"><expr pos:start="4215:32" pos:end="4215:35"><name pos:start="4215:32" pos:end="4215:35">insn</name></expr></argument>, <argument pos:start="4215:38" pos:end="4215:38"><expr pos:start="4215:38" pos:end="4215:38"><literal type="number" pos:start="4215:38" pos:end="4215:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4217:21" pos:end="4217:26">break;</break>

                <case pos:start="4219:17" pos:end="4222:0">case <expr pos:start="4219:22" pos:end="4219:25"><literal type="number" pos:start="4219:22" pos:end="4219:25">0x16</literal></expr>:</case>

<cpp:ifndef pos:start="4221:1" pos:end="4221:22">#<cpp:directive pos:start="4221:2" pos:end="4221:7">ifndef</cpp:directive> <name pos:start="4221:9" pos:end="4221:22">TARGET_SPARC64</name></cpp:ifndef>

                    <if_stmt pos:start="4223:21" pos:end="4225:42"><if pos:start="4223:21" pos:end="4225:42">if <condition pos:start="4223:24" pos:end="4223:31">(<expr pos:start="4223:25" pos:end="4223:30"><name pos:start="4223:25" pos:end="4223:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="4225:25" pos:end="4225:42"><block_content pos:start="4225:25" pos:end="4225:42">

                        <goto pos:start="4225:25" pos:end="4225:42">goto <name pos:start="4225:30" pos:end="4225:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="4227:21" pos:end="4234:0"><if pos:start="4227:21" pos:end="4234:0">if <condition pos:start="4227:24" pos:end="4227:40">(<expr pos:start="4227:25" pos:end="4227:39"><operator pos:start="4227:25" pos:end="4227:25">!</operator><call pos:start="4227:26" pos:end="4227:39"><name pos:start="4227:26" pos:end="4227:35">supervisor</name><argument_list pos:start="4227:36" pos:end="4227:39">(<argument pos:start="4227:37" pos:end="4227:38"><expr pos:start="4227:37" pos:end="4227:38"><name pos:start="4227:37" pos:end="4227:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4229:25" pos:end="4234:0"><block_content pos:start="4229:25" pos:end="4234:0">

                        <goto pos:start="4229:25" pos:end="4234:0">goto <name pos:start="4229:30" pos:end="4229:38">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:endif pos:start="4231:1" pos:end="4231:6">#<cpp:directive pos:start="4231:2" pos:end="4231:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4233:1" pos:end="4233:23">#<cpp:directive pos:start="4233:2" pos:end="4233:6">ifdef</cpp:directive> <name pos:start="4233:8" pos:end="4233:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="4235:21" pos:end="4238:0"><expr pos:start="4235:21" pos:end="4235:45"><call pos:start="4235:21" pos:end="4235:45"><name pos:start="4235:21" pos:end="4235:43">gen_op_check_align_T0_1</name><argument_list pos:start="4235:44" pos:end="4235:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="4237:1" pos:end="4237:6">#<cpp:directive pos:start="4237:2" pos:end="4237:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="4239:21" pos:end="4239:40"><expr pos:start="4239:21" pos:end="4239:39"><call pos:start="4239:21" pos:end="4239:39"><name pos:start="4239:21" pos:end="4239:30">gen_st_asi</name><argument_list pos:start="4239:31" pos:end="4239:39">(<argument pos:start="4239:32" pos:end="4239:35"><expr pos:start="4239:32" pos:end="4239:35"><name pos:start="4239:32" pos:end="4239:35">insn</name></expr></argument>, <argument pos:start="4239:38" pos:end="4239:38"><expr pos:start="4239:38" pos:end="4239:38"><literal type="number" pos:start="4239:38" pos:end="4239:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4241:21" pos:end="4241:26">break;</break>

                <case pos:start="4243:17" pos:end="4246:0">case <expr pos:start="4243:22" pos:end="4243:25"><literal type="number" pos:start="4243:22" pos:end="4243:25">0x17</literal></expr>:</case>

<cpp:ifndef pos:start="4245:1" pos:end="4245:22">#<cpp:directive pos:start="4245:2" pos:end="4245:7">ifndef</cpp:directive> <name pos:start="4245:9" pos:end="4245:22">TARGET_SPARC64</name></cpp:ifndef>

                    <if_stmt pos:start="4247:21" pos:end="4249:42"><if pos:start="4247:21" pos:end="4249:42">if <condition pos:start="4247:24" pos:end="4247:31">(<expr pos:start="4247:25" pos:end="4247:30"><name pos:start="4247:25" pos:end="4247:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="4249:25" pos:end="4249:42"><block_content pos:start="4249:25" pos:end="4249:42">

                        <goto pos:start="4249:25" pos:end="4249:42">goto <name pos:start="4249:30" pos:end="4249:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="4251:21" pos:end="4256:0"><if pos:start="4251:21" pos:end="4256:0">if <condition pos:start="4251:24" pos:end="4251:40">(<expr pos:start="4251:25" pos:end="4251:39"><operator pos:start="4251:25" pos:end="4251:25">!</operator><call pos:start="4251:26" pos:end="4251:39"><name pos:start="4251:26" pos:end="4251:35">supervisor</name><argument_list pos:start="4251:36" pos:end="4251:39">(<argument pos:start="4251:37" pos:end="4251:38"><expr pos:start="4251:37" pos:end="4251:38"><name pos:start="4251:37" pos:end="4251:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4253:25" pos:end="4256:0"><block_content pos:start="4253:25" pos:end="4256:0">

                        <goto pos:start="4253:25" pos:end="4256:0">goto <name pos:start="4253:30" pos:end="4253:38">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:endif pos:start="4255:1" pos:end="4255:6">#<cpp:directive pos:start="4255:2" pos:end="4255:6">endif</cpp:directive></cpp:endif>

                    <if_stmt pos:start="4257:21" pos:end="4259:42"><if pos:start="4257:21" pos:end="4259:42">if <condition pos:start="4257:24" pos:end="4257:31">(<expr pos:start="4257:25" pos:end="4257:30"><name pos:start="4257:25" pos:end="4257:26">rd</name> <operator pos:start="4257:28" pos:end="4257:28">&amp;</operator> <literal type="number" pos:start="4257:30" pos:end="4257:30">1</literal></expr>)</condition><block type="pseudo" pos:start="4259:25" pos:end="4259:42"><block_content pos:start="4259:25" pos:end="4259:42">

                        <goto pos:start="4259:25" pos:end="4259:42">goto <name pos:start="4259:30" pos:end="4259:41">illegal_insn</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="4261:21" pos:end="4261:46"><expr pos:start="4261:21" pos:end="4261:45"><call pos:start="4261:21" pos:end="4261:45"><name pos:start="4261:21" pos:end="4261:43">gen_op_check_align_T0_7</name><argument_list pos:start="4261:44" pos:end="4261:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4263:21" pos:end="4263:33"><expr pos:start="4263:21" pos:end="4263:32"><call pos:start="4263:21" pos:end="4263:32"><name pos:start="4263:21" pos:end="4263:28">flush_T2</name><argument_list pos:start="4263:29" pos:end="4263:32">(<argument pos:start="4263:30" pos:end="4263:31"><expr pos:start="4263:30" pos:end="4263:31"><name pos:start="4263:30" pos:end="4263:31">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4265:21" pos:end="4265:44"><expr pos:start="4265:21" pos:end="4265:43"><call pos:start="4265:21" pos:end="4265:43"><name pos:start="4265:21" pos:end="4265:35">gen_movl_reg_T2</name><argument_list pos:start="4265:36" pos:end="4265:43">(<argument pos:start="4265:37" pos:end="4265:42"><expr pos:start="4265:37" pos:end="4265:42"><name pos:start="4265:37" pos:end="4265:38">rd</name> <operator pos:start="4265:40" pos:end="4265:40">+</operator> <literal type="number" pos:start="4265:42" pos:end="4265:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4267:21" pos:end="4267:39"><expr pos:start="4267:21" pos:end="4267:38"><call pos:start="4267:21" pos:end="4267:38"><name pos:start="4267:21" pos:end="4267:32">gen_stda_asi</name><argument_list pos:start="4267:33" pos:end="4267:38">(<argument pos:start="4267:34" pos:end="4267:37"><expr pos:start="4267:34" pos:end="4267:37"><name pos:start="4267:34" pos:end="4267:37">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4269:21" pos:end="4274:0">break;</break>

<cpp:endif pos:start="4271:1" pos:end="4271:6">#<cpp:directive pos:start="4271:2" pos:end="4271:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4273:1" pos:end="4273:21">#<cpp:directive pos:start="4273:2" pos:end="4273:6">ifdef</cpp:directive> <name pos:start="4273:8" pos:end="4273:21">TARGET_SPARC64</name></cpp:ifdef>

                <case pos:start="4275:17" pos:end="4275:26">case <expr pos:start="4275:22" pos:end="4275:25"><literal type="number" pos:start="4275:22" pos:end="4275:25">0x0e</literal></expr>:</case> <comment type="block" pos:start="4275:28" pos:end="4275:39">/* V9 stx */</comment>

                    <expr_stmt pos:start="4277:21" pos:end="4277:46"><expr pos:start="4277:21" pos:end="4277:45"><call pos:start="4277:21" pos:end="4277:45"><name pos:start="4277:21" pos:end="4277:43">gen_op_check_align_T0_7</name><argument_list pos:start="4277:44" pos:end="4277:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4279:21" pos:end="4279:37"><expr pos:start="4279:21" pos:end="4279:36"><call pos:start="4279:21" pos:end="4279:36"><name pos:start="4279:21" pos:end="4279:31">gen_op_ldst</name><argument_list pos:start="4279:32" pos:end="4279:36">(<argument pos:start="4279:33" pos:end="4279:35"><expr pos:start="4279:33" pos:end="4279:35"><name pos:start="4279:33" pos:end="4279:35">stx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4281:21" pos:end="4281:26">break;</break>

                <case pos:start="4283:17" pos:end="4283:26">case <expr pos:start="4283:22" pos:end="4283:25"><literal type="number" pos:start="4283:22" pos:end="4283:25">0x1e</literal></expr>:</case> <comment type="block" pos:start="4283:28" pos:end="4283:40">/* V9 stxa */</comment>

                    <expr_stmt pos:start="4285:21" pos:end="4285:46"><expr pos:start="4285:21" pos:end="4285:45"><call pos:start="4285:21" pos:end="4285:45"><name pos:start="4285:21" pos:end="4285:43">gen_op_check_align_T0_7</name><argument_list pos:start="4285:44" pos:end="4285:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4287:21" pos:end="4287:40"><expr pos:start="4287:21" pos:end="4287:39"><call pos:start="4287:21" pos:end="4287:39"><name pos:start="4287:21" pos:end="4287:30">gen_st_asi</name><argument_list pos:start="4287:31" pos:end="4287:39">(<argument pos:start="4287:32" pos:end="4287:35"><expr pos:start="4287:32" pos:end="4287:35"><name pos:start="4287:32" pos:end="4287:35">insn</name></expr></argument>, <argument pos:start="4287:38" pos:end="4287:38"><expr pos:start="4287:38" pos:end="4287:38"><literal type="number" pos:start="4287:38" pos:end="4287:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4289:21" pos:end="4292:0">break;</break>

<cpp:endif pos:start="4291:1" pos:end="4291:6">#<cpp:directive pos:start="4291:2" pos:end="4291:6">endif</cpp:directive></cpp:endif>

                <default pos:start="4293:17" pos:end="4293:24">default:</default>

                    <goto pos:start="4295:21" pos:end="4295:38">goto <name pos:start="4295:26" pos:end="4295:37">illegal_insn</name>;</goto>

                </block_content>}</block></switch>

            </block_content>}</block></if> <if type="elseif" pos:start="4299:15" pos:end="4367:13">else if <condition pos:start="4299:23" pos:end="4299:48">(<expr pos:start="4299:24" pos:end="4299:47"><name pos:start="4299:24" pos:end="4299:26">xop</name> <operator pos:start="4299:28" pos:end="4299:28">&gt;</operator> <literal type="number" pos:start="4299:30" pos:end="4299:33">0x23</literal> <operator pos:start="4299:35" pos:end="4299:36">&amp;&amp;</operator> <name pos:start="4299:38" pos:end="4299:40">xop</name> <operator pos:start="4299:42" pos:end="4299:42">&lt;</operator> <literal type="number" pos:start="4299:44" pos:end="4299:47">0x28</literal></expr>)</condition> <block pos:start="4299:50" pos:end="4367:13">{<block_content pos:start="4301:17" pos:end="4365:17">

                <if_stmt pos:start="4301:17" pos:end="4303:34"><if pos:start="4301:17" pos:end="4303:34">if <condition pos:start="4301:20" pos:end="4301:41">(<expr pos:start="4301:21" pos:end="4301:40"><call pos:start="4301:21" pos:end="4301:40"><name pos:start="4301:21" pos:end="4301:36">gen_trap_ifnofpu</name><argument_list pos:start="4301:37" pos:end="4301:40">(<argument pos:start="4301:38" pos:end="4301:39"><expr pos:start="4301:38" pos:end="4301:39"><name pos:start="4301:38" pos:end="4301:39">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4303:21" pos:end="4303:34"><block_content pos:start="4303:21" pos:end="4303:34">

                    <goto pos:start="4303:21" pos:end="4303:34">goto <name pos:start="4303:26" pos:end="4303:33">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

                <switch pos:start="4305:17" pos:end="4365:17">switch <condition pos:start="4305:24" pos:end="4305:28">(<expr pos:start="4305:25" pos:end="4305:27"><name pos:start="4305:25" pos:end="4305:27">xop</name></expr>)</condition> <block pos:start="4305:30" pos:end="4365:17">{<block_content pos:start="4307:17" pos:end="4363:38">

                <case pos:start="4307:17" pos:end="4310:0">case <expr pos:start="4307:22" pos:end="4307:25"><literal type="number" pos:start="4307:22" pos:end="4307:25">0x24</literal></expr>:</case>

<cpp:ifdef pos:start="4309:1" pos:end="4309:23">#<cpp:directive pos:start="4309:2" pos:end="4309:6">ifdef</cpp:directive> <name pos:start="4309:8" pos:end="4309:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="4311:21" pos:end="4314:0"><expr pos:start="4311:21" pos:end="4311:45"><call pos:start="4311:21" pos:end="4311:45"><name pos:start="4311:21" pos:end="4311:43">gen_op_check_align_T0_3</name><argument_list pos:start="4311:44" pos:end="4311:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="4313:1" pos:end="4313:6">#<cpp:directive pos:start="4313:2" pos:end="4313:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="4315:21" pos:end="4315:44"><expr pos:start="4315:21" pos:end="4315:43"><call pos:start="4315:21" pos:end="4315:43"><name pos:start="4315:21" pos:end="4315:39">gen_op_load_fpr_FT0</name><argument_list pos:start="4315:40" pos:end="4315:43">(<argument pos:start="4315:41" pos:end="4315:42"><expr pos:start="4315:41" pos:end="4315:42"><name pos:start="4315:41" pos:end="4315:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4317:21" pos:end="4317:37"><expr pos:start="4317:21" pos:end="4317:36"><call pos:start="4317:21" pos:end="4317:36"><name pos:start="4317:21" pos:end="4317:31">gen_op_ldst</name><argument_list pos:start="4317:32" pos:end="4317:36">(<argument pos:start="4317:33" pos:end="4317:35"><expr pos:start="4317:33" pos:end="4317:35"><name pos:start="4317:33" pos:end="4317:35">stf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4319:21" pos:end="4319:26">break;</break>

                <case pos:start="4321:17" pos:end="4324:0">case <expr pos:start="4321:22" pos:end="4321:25"><literal type="number" pos:start="4321:22" pos:end="4321:25">0x25</literal></expr>:</case> <comment type="block" pos:start="4321:28" pos:end="4321:49">/* stfsr, V9 stxfsr */</comment>

<cpp:ifdef pos:start="4323:1" pos:end="4323:23">#<cpp:directive pos:start="4323:2" pos:end="4323:6">ifdef</cpp:directive> <name pos:start="4323:8" pos:end="4323:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="4325:21" pos:end="4328:0"><expr pos:start="4325:21" pos:end="4325:45"><call pos:start="4325:21" pos:end="4325:45"><name pos:start="4325:21" pos:end="4325:43">gen_op_check_align_T0_3</name><argument_list pos:start="4325:44" pos:end="4325:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="4327:1" pos:end="4327:6">#<cpp:directive pos:start="4327:2" pos:end="4327:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="4329:21" pos:end="4329:35"><expr pos:start="4329:21" pos:end="4329:34"><call pos:start="4329:21" pos:end="4329:34"><name pos:start="4329:21" pos:end="4329:32">gen_op_stfsr</name><argument_list pos:start="4329:33" pos:end="4329:34">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4331:21" pos:end="4331:37"><expr pos:start="4331:21" pos:end="4331:36"><call pos:start="4331:21" pos:end="4331:36"><name pos:start="4331:21" pos:end="4331:31">gen_op_ldst</name><argument_list pos:start="4331:32" pos:end="4331:36">(<argument pos:start="4331:33" pos:end="4331:35"><expr pos:start="4331:33" pos:end="4331:35"><name pos:start="4331:33" pos:end="4331:35">stf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4333:21" pos:end="4336:0">break;</break>

<cpp:if pos:start="4335:1" pos:end="4335:30">#<cpp:directive pos:start="4335:2" pos:end="4335:3">if</cpp:directive> <expr pos:start="4335:5" pos:end="4335:30"><operator pos:start="4335:5" pos:end="4335:5">!</operator><call pos:start="4335:6" pos:end="4335:30"><name pos:start="4335:6" pos:end="4335:12">defined</name><argument_list pos:start="4335:13" pos:end="4335:30">(<argument pos:start="4335:14" pos:end="4335:29"><expr pos:start="4335:14" pos:end="4335:29"><name pos:start="4335:14" pos:end="4335:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <case pos:start="4337:17" pos:end="4337:26">case <expr pos:start="4337:22" pos:end="4337:25"><literal type="number" pos:start="4337:22" pos:end="4337:25">0x26</literal></expr>:</case> <comment type="block" pos:start="4337:28" pos:end="4337:38">/* stdfq */</comment>

                    <if_stmt pos:start="4339:21" pos:end="4341:39"><if pos:start="4339:21" pos:end="4341:39">if <condition pos:start="4339:24" pos:end="4339:40">(<expr pos:start="4339:25" pos:end="4339:39"><operator pos:start="4339:25" pos:end="4339:25">!</operator><call pos:start="4339:26" pos:end="4339:39"><name pos:start="4339:26" pos:end="4339:35">supervisor</name><argument_list pos:start="4339:36" pos:end="4339:39">(<argument pos:start="4339:37" pos:end="4339:38"><expr pos:start="4339:37" pos:end="4339:38"><name pos:start="4339:37" pos:end="4339:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4341:25" pos:end="4341:39"><block_content pos:start="4341:25" pos:end="4341:39">

                        <goto pos:start="4341:25" pos:end="4341:39">goto <name pos:start="4341:30" pos:end="4341:38">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="4343:21" pos:end="4345:38"><if pos:start="4343:21" pos:end="4345:38">if <condition pos:start="4343:24" pos:end="4343:45">(<expr pos:start="4343:25" pos:end="4343:44"><call pos:start="4343:25" pos:end="4343:44"><name pos:start="4343:25" pos:end="4343:40">gen_trap_ifnofpu</name><argument_list pos:start="4343:41" pos:end="4343:44">(<argument pos:start="4343:42" pos:end="4343:43"><expr pos:start="4343:42" pos:end="4343:43"><name pos:start="4343:42" pos:end="4343:43">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4345:25" pos:end="4345:38"><block_content pos:start="4345:25" pos:end="4345:38">

                        <goto pos:start="4345:25" pos:end="4345:38">goto <name pos:start="4345:30" pos:end="4345:37">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

                    <goto pos:start="4347:21" pos:end="4350:0">goto <name pos:start="4347:26" pos:end="4347:33">nfq_insn</name>;</goto>

<cpp:endif pos:start="4349:1" pos:end="4349:6">#<cpp:directive pos:start="4349:2" pos:end="4349:6">endif</cpp:directive></cpp:endif>

                <case pos:start="4351:17" pos:end="4351:26">case <expr pos:start="4351:22" pos:end="4351:25"><literal type="number" pos:start="4351:22" pos:end="4351:25">0x27</literal></expr>:</case>

                    <expr_stmt pos:start="4353:21" pos:end="4353:46"><expr pos:start="4353:21" pos:end="4353:45"><call pos:start="4353:21" pos:end="4353:45"><name pos:start="4353:21" pos:end="4353:43">gen_op_check_align_T0_7</name><argument_list pos:start="4353:44" pos:end="4353:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4355:21" pos:end="4355:52"><expr pos:start="4355:21" pos:end="4355:51"><call pos:start="4355:21" pos:end="4355:51"><name pos:start="4355:21" pos:end="4355:39">gen_op_load_fpr_DT0</name><argument_list pos:start="4355:40" pos:end="4355:51">(<argument pos:start="4355:41" pos:end="4355:50"><expr pos:start="4355:41" pos:end="4355:50"><call pos:start="4355:41" pos:end="4355:50"><name pos:start="4355:41" pos:end="4355:46">DFPREG</name><argument_list pos:start="4355:47" pos:end="4355:50">(<argument pos:start="4355:48" pos:end="4355:49"><expr pos:start="4355:48" pos:end="4355:49"><name pos:start="4355:48" pos:end="4355:49">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4357:21" pos:end="4357:38"><expr pos:start="4357:21" pos:end="4357:37"><call pos:start="4357:21" pos:end="4357:37"><name pos:start="4357:21" pos:end="4357:31">gen_op_ldst</name><argument_list pos:start="4357:32" pos:end="4357:37">(<argument pos:start="4357:33" pos:end="4357:36"><expr pos:start="4357:33" pos:end="4357:36"><name pos:start="4357:33" pos:end="4357:36">stdf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4359:21" pos:end="4359:26">break;</break>

                <default pos:start="4361:17" pos:end="4361:24">default:</default>

                    <goto pos:start="4363:21" pos:end="4363:38">goto <name pos:start="4363:26" pos:end="4363:37">illegal_insn</name>;</goto>

                </block_content>}</block></switch>

            </block_content>}</block></if> <if type="elseif" pos:start="4367:15" pos:end="4453:13">else if <condition pos:start="4367:23" pos:end="4367:48">(<expr pos:start="4367:24" pos:end="4367:47"><name pos:start="4367:24" pos:end="4367:26">xop</name> <operator pos:start="4367:28" pos:end="4367:28">&gt;</operator> <literal type="number" pos:start="4367:30" pos:end="4367:33">0x33</literal> <operator pos:start="4367:35" pos:end="4367:36">&amp;&amp;</operator> <name pos:start="4367:38" pos:end="4367:40">xop</name> <operator pos:start="4367:42" pos:end="4367:42">&lt;</operator> <literal type="number" pos:start="4367:44" pos:end="4367:47">0x3f</literal></expr>)</condition> <block pos:start="4367:50" pos:end="4453:13">{<block_content pos:start="4369:17" pos:end="4451:17">

                <switch pos:start="4369:17" pos:end="4451:17">switch <condition pos:start="4369:24" pos:end="4369:28">(<expr pos:start="4369:25" pos:end="4369:27"><name pos:start="4369:25" pos:end="4369:27">xop</name></expr>)</condition> <block pos:start="4369:30" pos:end="4451:17">{<block_content pos:start="4373:17" pos:end="4449:38">

<cpp:ifdef pos:start="4371:1" pos:end="4371:21">#<cpp:directive pos:start="4371:2" pos:end="4371:6">ifdef</cpp:directive> <name pos:start="4371:8" pos:end="4371:21">TARGET_SPARC64</name></cpp:ifdef>

                <case pos:start="4373:17" pos:end="4376:0">case <expr pos:start="4373:22" pos:end="4373:25"><literal type="number" pos:start="4373:22" pos:end="4373:25">0x34</literal></expr>:</case> <comment type="block" pos:start="4373:28" pos:end="4373:40">/* V9 stfa */</comment>

<cpp:ifdef pos:start="4375:1" pos:end="4375:23">#<cpp:directive pos:start="4375:2" pos:end="4375:6">ifdef</cpp:directive> <name pos:start="4375:8" pos:end="4375:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="4377:21" pos:end="4380:0"><expr pos:start="4377:21" pos:end="4377:45"><call pos:start="4377:21" pos:end="4377:45"><name pos:start="4377:21" pos:end="4377:43">gen_op_check_align_T0_3</name><argument_list pos:start="4377:44" pos:end="4377:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="4379:1" pos:end="4379:6">#<cpp:directive pos:start="4379:2" pos:end="4379:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="4381:21" pos:end="4381:44"><expr pos:start="4381:21" pos:end="4381:43"><call pos:start="4381:21" pos:end="4381:43"><name pos:start="4381:21" pos:end="4381:39">gen_op_load_fpr_FT0</name><argument_list pos:start="4381:40" pos:end="4381:43">(<argument pos:start="4381:41" pos:end="4381:42"><expr pos:start="4381:41" pos:end="4381:42"><name pos:start="4381:41" pos:end="4381:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4383:21" pos:end="4383:41"><expr pos:start="4383:21" pos:end="4383:40"><call pos:start="4383:21" pos:end="4383:40"><name pos:start="4383:21" pos:end="4383:31">gen_stf_asi</name><argument_list pos:start="4383:32" pos:end="4383:40">(<argument pos:start="4383:33" pos:end="4383:36"><expr pos:start="4383:33" pos:end="4383:36"><name pos:start="4383:33" pos:end="4383:36">insn</name></expr></argument>, <argument pos:start="4383:39" pos:end="4383:39"><expr pos:start="4383:39" pos:end="4383:39"><literal type="number" pos:start="4383:39" pos:end="4383:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4385:21" pos:end="4385:26">break;</break>

                <case pos:start="4387:17" pos:end="4387:26">case <expr pos:start="4387:22" pos:end="4387:25"><literal type="number" pos:start="4387:22" pos:end="4387:25">0x37</literal></expr>:</case> <comment type="block" pos:start="4387:28" pos:end="4387:41">/* V9 stdfa */</comment>

                    <expr_stmt pos:start="4389:21" pos:end="4389:46"><expr pos:start="4389:21" pos:end="4389:45"><call pos:start="4389:21" pos:end="4389:45"><name pos:start="4389:21" pos:end="4389:43">gen_op_check_align_T0_3</name><argument_list pos:start="4389:44" pos:end="4389:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4391:21" pos:end="4391:52"><expr pos:start="4391:21" pos:end="4391:51"><call pos:start="4391:21" pos:end="4391:51"><name pos:start="4391:21" pos:end="4391:39">gen_op_load_fpr_DT0</name><argument_list pos:start="4391:40" pos:end="4391:51">(<argument pos:start="4391:41" pos:end="4391:50"><expr pos:start="4391:41" pos:end="4391:50"><call pos:start="4391:41" pos:end="4391:50"><name pos:start="4391:41" pos:end="4391:46">DFPREG</name><argument_list pos:start="4391:47" pos:end="4391:50">(<argument pos:start="4391:48" pos:end="4391:49"><expr pos:start="4391:48" pos:end="4391:49"><name pos:start="4391:48" pos:end="4391:49">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4393:21" pos:end="4393:41"><expr pos:start="4393:21" pos:end="4393:40"><call pos:start="4393:21" pos:end="4393:40"><name pos:start="4393:21" pos:end="4393:31">gen_stf_asi</name><argument_list pos:start="4393:32" pos:end="4393:40">(<argument pos:start="4393:33" pos:end="4393:36"><expr pos:start="4393:33" pos:end="4393:36"><name pos:start="4393:33" pos:end="4393:36">insn</name></expr></argument>, <argument pos:start="4393:39" pos:end="4393:39"><expr pos:start="4393:39" pos:end="4393:39"><literal type="number" pos:start="4393:39" pos:end="4393:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4395:21" pos:end="4395:26">break;</break>

                <case pos:start="4397:17" pos:end="4400:0">case <expr pos:start="4397:22" pos:end="4397:25"><literal type="number" pos:start="4397:22" pos:end="4397:25">0x3c</literal></expr>:</case> <comment type="block" pos:start="4397:28" pos:end="4397:40">/* V9 casa */</comment>

<cpp:ifdef pos:start="4399:1" pos:end="4399:23">#<cpp:directive pos:start="4399:2" pos:end="4399:6">ifdef</cpp:directive> <name pos:start="4399:8" pos:end="4399:23">CONFIG_USER_ONLY</name></cpp:ifdef>

                    <expr_stmt pos:start="4401:21" pos:end="4404:0"><expr pos:start="4401:21" pos:end="4401:45"><call pos:start="4401:21" pos:end="4401:45"><name pos:start="4401:21" pos:end="4401:43">gen_op_check_align_T0_3</name><argument_list pos:start="4401:44" pos:end="4401:45">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="4403:1" pos:end="4403:6">#<cpp:directive pos:start="4403:2" pos:end="4403:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="4405:21" pos:end="4405:33"><expr pos:start="4405:21" pos:end="4405:32"><call pos:start="4405:21" pos:end="4405:32"><name pos:start="4405:21" pos:end="4405:28">flush_T2</name><argument_list pos:start="4405:29" pos:end="4405:32">(<argument pos:start="4405:30" pos:end="4405:31"><expr pos:start="4405:30" pos:end="4405:31"><name pos:start="4405:30" pos:end="4405:31">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4407:21" pos:end="4407:40"><expr pos:start="4407:21" pos:end="4407:39"><call pos:start="4407:21" pos:end="4407:39"><name pos:start="4407:21" pos:end="4407:35">gen_movl_reg_T2</name><argument_list pos:start="4407:36" pos:end="4407:39">(<argument pos:start="4407:37" pos:end="4407:38"><expr pos:start="4407:37" pos:end="4407:38"><name pos:start="4407:37" pos:end="4407:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4409:21" pos:end="4409:38"><expr pos:start="4409:21" pos:end="4409:37"><call pos:start="4409:21" pos:end="4409:37"><name pos:start="4409:21" pos:end="4409:31">gen_cas_asi</name><argument_list pos:start="4409:32" pos:end="4409:37">(<argument pos:start="4409:33" pos:end="4409:36"><expr pos:start="4409:33" pos:end="4409:36"><name pos:start="4409:33" pos:end="4409:36">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4411:21" pos:end="4411:40"><expr pos:start="4411:21" pos:end="4411:39"><call pos:start="4411:21" pos:end="4411:39"><name pos:start="4411:21" pos:end="4411:35">gen_movl_T1_reg</name><argument_list pos:start="4411:36" pos:end="4411:39">(<argument pos:start="4411:37" pos:end="4411:38"><expr pos:start="4411:37" pos:end="4411:38"><name pos:start="4411:37" pos:end="4411:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4413:21" pos:end="4413:26">break;</break>

                <case pos:start="4415:17" pos:end="4415:26">case <expr pos:start="4415:22" pos:end="4415:25"><literal type="number" pos:start="4415:22" pos:end="4415:25">0x3e</literal></expr>:</case> <comment type="block" pos:start="4415:28" pos:end="4415:41">/* V9 casxa */</comment>

                    <expr_stmt pos:start="4417:21" pos:end="4417:46"><expr pos:start="4417:21" pos:end="4417:45"><call pos:start="4417:21" pos:end="4417:45"><name pos:start="4417:21" pos:end="4417:43">gen_op_check_align_T0_7</name><argument_list pos:start="4417:44" pos:end="4417:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4419:21" pos:end="4419:33"><expr pos:start="4419:21" pos:end="4419:32"><call pos:start="4419:21" pos:end="4419:32"><name pos:start="4419:21" pos:end="4419:28">flush_T2</name><argument_list pos:start="4419:29" pos:end="4419:32">(<argument pos:start="4419:30" pos:end="4419:31"><expr pos:start="4419:30" pos:end="4419:31"><name pos:start="4419:30" pos:end="4419:31">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4421:21" pos:end="4421:40"><expr pos:start="4421:21" pos:end="4421:39"><call pos:start="4421:21" pos:end="4421:39"><name pos:start="4421:21" pos:end="4421:35">gen_movl_reg_T2</name><argument_list pos:start="4421:36" pos:end="4421:39">(<argument pos:start="4421:37" pos:end="4421:38"><expr pos:start="4421:37" pos:end="4421:38"><name pos:start="4421:37" pos:end="4421:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4423:21" pos:end="4423:39"><expr pos:start="4423:21" pos:end="4423:38"><call pos:start="4423:21" pos:end="4423:38"><name pos:start="4423:21" pos:end="4423:32">gen_casx_asi</name><argument_list pos:start="4423:33" pos:end="4423:38">(<argument pos:start="4423:34" pos:end="4423:37"><expr pos:start="4423:34" pos:end="4423:37"><name pos:start="4423:34" pos:end="4423:37">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4425:21" pos:end="4425:40"><expr pos:start="4425:21" pos:end="4425:39"><call pos:start="4425:21" pos:end="4425:39"><name pos:start="4425:21" pos:end="4425:35">gen_movl_T1_reg</name><argument_list pos:start="4425:36" pos:end="4425:39">(<argument pos:start="4425:37" pos:end="4425:38"><expr pos:start="4425:37" pos:end="4425:38"><name pos:start="4425:37" pos:end="4425:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="4427:21" pos:end="4427:26">break;</break>

                <case pos:start="4429:17" pos:end="4429:26">case <expr pos:start="4429:22" pos:end="4429:25"><literal type="number" pos:start="4429:22" pos:end="4429:25">0x36</literal></expr>:</case> <comment type="block" pos:start="4429:28" pos:end="4429:41">/* V9 stqfa */</comment>

                    <goto pos:start="4431:21" pos:end="4434:0">goto <name pos:start="4431:26" pos:end="4431:34">nfpu_insn</name>;</goto>

<cpp:else pos:start="4433:1" pos:end="4433:5">#<cpp:directive pos:start="4433:2" pos:end="4433:5">else</cpp:directive></cpp:else>

                <case pos:start="4435:17" pos:end="4435:26">case <expr pos:start="4435:22" pos:end="4435:25"><literal type="number" pos:start="4435:22" pos:end="4435:25">0x34</literal></expr>:</case> <comment type="block" pos:start="4435:28" pos:end="4435:36">/* stc */</comment>

                <case pos:start="4437:17" pos:end="4437:26">case <expr pos:start="4437:22" pos:end="4437:25"><literal type="number" pos:start="4437:22" pos:end="4437:25">0x35</literal></expr>:</case> <comment type="block" pos:start="4437:28" pos:end="4437:38">/* stcsr */</comment>

                <case pos:start="4439:17" pos:end="4439:26">case <expr pos:start="4439:22" pos:end="4439:25"><literal type="number" pos:start="4439:22" pos:end="4439:25">0x36</literal></expr>:</case> <comment type="block" pos:start="4439:28" pos:end="4439:38">/* stdcq */</comment>

                <case pos:start="4441:17" pos:end="4441:26">case <expr pos:start="4441:22" pos:end="4441:25"><literal type="number" pos:start="4441:22" pos:end="4441:25">0x37</literal></expr>:</case> <comment type="block" pos:start="4441:28" pos:end="4441:37">/* stdc */</comment>

                    <goto pos:start="4443:21" pos:end="4446:0">goto <name pos:start="4443:26" pos:end="4443:33">ncp_insn</name>;</goto>

<cpp:endif pos:start="4445:1" pos:end="4445:6">#<cpp:directive pos:start="4445:2" pos:end="4445:6">endif</cpp:directive></cpp:endif>

                <default pos:start="4447:17" pos:end="4447:24">default:</default>

                    <goto pos:start="4449:21" pos:end="4449:38">goto <name pos:start="4449:26" pos:end="4449:37">illegal_insn</name>;</goto>

                </block_content>}</block></switch>

            </block_content>}</block></if>

            <else pos:start="4455:13" pos:end="4457:34">else<block type="pseudo" pos:start="4457:17" pos:end="4457:34"><block_content pos:start="4457:17" pos:end="4457:34">

                <goto pos:start="4457:17" pos:end="4457:34">goto <name pos:start="4457:22" pos:end="4457:33">illegal_insn</name>;</goto></block_content></block></else></if_stmt>

        </block_content>}</block>

        <break pos:start="4461:9" pos:end="4461:14">break;</break>

    </block_content>}</block></switch>

    <comment type="block" pos:start="4465:5" pos:end="4465:48">/* default case for non jump instructions */</comment>

    <if_stmt pos:start="4467:5" pos:end="4487:5"><if pos:start="4467:5" pos:end="4473:5">if <condition pos:start="4467:8" pos:end="4467:30">(<expr pos:start="4467:9" pos:end="4467:29"><name pos:start="4467:9" pos:end="4467:15"><name pos:start="4467:9" pos:end="4467:10">dc</name><operator pos:start="4467:11" pos:end="4467:12">-&gt;</operator><name pos:start="4467:13" pos:end="4467:15">npc</name></name> <operator pos:start="4467:17" pos:end="4467:18">==</operator> <name pos:start="4467:20" pos:end="4467:29">DYNAMIC_PC</name></expr>)</condition> <block pos:start="4467:32" pos:end="4473:5">{<block_content pos:start="4469:9" pos:end="4471:27">

        <expr_stmt pos:start="4469:9" pos:end="4469:28"><expr pos:start="4469:9" pos:end="4469:27"><name pos:start="4469:9" pos:end="4469:14"><name pos:start="4469:9" pos:end="4469:10">dc</name><operator pos:start="4469:11" pos:end="4469:12">-&gt;</operator><name pos:start="4469:13" pos:end="4469:14">pc</name></name> <operator pos:start="4469:16" pos:end="4469:16">=</operator> <name pos:start="4469:18" pos:end="4469:27">DYNAMIC_PC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="4471:9" pos:end="4471:27"><expr pos:start="4471:9" pos:end="4471:26"><call pos:start="4471:9" pos:end="4471:26"><name pos:start="4471:9" pos:end="4471:24">gen_op_next_insn</name><argument_list pos:start="4471:25" pos:end="4471:26">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="4473:7" pos:end="4481:5">else if <condition pos:start="4473:15" pos:end="4473:34">(<expr pos:start="4473:16" pos:end="4473:33"><name pos:start="4473:16" pos:end="4473:22"><name pos:start="4473:16" pos:end="4473:17">dc</name><operator pos:start="4473:18" pos:end="4473:19">-&gt;</operator><name pos:start="4473:20" pos:end="4473:22">npc</name></name> <operator pos:start="4473:24" pos:end="4473:25">==</operator> <name pos:start="4473:27" pos:end="4473:33">JUMP_PC</name></expr>)</condition> <block pos:start="4473:36" pos:end="4481:5">{<block_content pos:start="4477:9" pos:end="4479:22">

        <comment type="block" pos:start="4475:9" pos:end="4475:37">/* we can do a static jump */</comment>

        <expr_stmt pos:start="4477:9" pos:end="4477:56"><expr pos:start="4477:9" pos:end="4477:55"><call pos:start="4477:9" pos:end="4477:55"><name pos:start="4477:9" pos:end="4477:19">gen_branch2</name><argument_list pos:start="4477:20" pos:end="4477:55">(<argument pos:start="4477:21" pos:end="4477:22"><expr pos:start="4477:21" pos:end="4477:22"><name pos:start="4477:21" pos:end="4477:22">dc</name></expr></argument>, <argument pos:start="4477:25" pos:end="4477:38"><expr pos:start="4477:25" pos:end="4477:38"><name pos:start="4477:25" pos:end="4477:38"><name pos:start="4477:25" pos:end="4477:26">dc</name><operator pos:start="4477:27" pos:end="4477:28">-&gt;</operator><name pos:start="4477:29" pos:end="4477:35">jump_pc</name><index pos:start="4477:36" pos:end="4477:38">[<expr pos:start="4477:37" pos:end="4477:37"><literal type="number" pos:start="4477:37" pos:end="4477:37">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="4477:41" pos:end="4477:54"><expr pos:start="4477:41" pos:end="4477:54"><name pos:start="4477:41" pos:end="4477:54"><name pos:start="4477:41" pos:end="4477:42">dc</name><operator pos:start="4477:43" pos:end="4477:44">-&gt;</operator><name pos:start="4477:45" pos:end="4477:51">jump_pc</name><index pos:start="4477:52" pos:end="4477:54">[<expr pos:start="4477:53" pos:end="4477:53"><literal type="number" pos:start="4477:53" pos:end="4477:53">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="4479:9" pos:end="4479:22"><expr pos:start="4479:9" pos:end="4479:21"><name pos:start="4479:9" pos:end="4479:17"><name pos:start="4479:9" pos:end="4479:10">dc</name><operator pos:start="4479:11" pos:end="4479:12">-&gt;</operator><name pos:start="4479:13" pos:end="4479:17">is_br</name></name> <operator pos:start="4479:19" pos:end="4479:19">=</operator> <literal type="number" pos:start="4479:21" pos:end="4479:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="4481:7" pos:end="4487:5">else <block pos:start="4481:12" pos:end="4487:5">{<block_content pos:start="4483:9" pos:end="4485:30">

        <expr_stmt pos:start="4483:9" pos:end="4483:25"><expr pos:start="4483:9" pos:end="4483:24"><name pos:start="4483:9" pos:end="4483:14"><name pos:start="4483:9" pos:end="4483:10">dc</name><operator pos:start="4483:11" pos:end="4483:12">-&gt;</operator><name pos:start="4483:13" pos:end="4483:14">pc</name></name> <operator pos:start="4483:16" pos:end="4483:16">=</operator> <name pos:start="4483:18" pos:end="4483:24"><name pos:start="4483:18" pos:end="4483:19">dc</name><operator pos:start="4483:20" pos:end="4483:21">-&gt;</operator><name pos:start="4483:22" pos:end="4483:24">npc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="4485:9" pos:end="4485:30"><expr pos:start="4485:9" pos:end="4485:29"><name pos:start="4485:9" pos:end="4485:15"><name pos:start="4485:9" pos:end="4485:10">dc</name><operator pos:start="4485:11" pos:end="4485:12">-&gt;</operator><name pos:start="4485:13" pos:end="4485:15">npc</name></name> <operator pos:start="4485:17" pos:end="4485:17">=</operator> <name pos:start="4485:19" pos:end="4485:25"><name pos:start="4485:19" pos:end="4485:20">dc</name><operator pos:start="4485:21" pos:end="4485:22">-&gt;</operator><name pos:start="4485:23" pos:end="4485:25">npc</name></name> <operator pos:start="4485:27" pos:end="4485:27">+</operator> <literal type="number" pos:start="4485:29" pos:end="4485:29">4</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

 <label pos:start="4489:2" pos:end="4489:10"><name pos:start="4489:2" pos:end="4489:9">jmp_insn</name>:</label>

    <return pos:start="4491:5" pos:end="4491:11">return;</return>

 <label pos:start="4493:2" pos:end="4493:14"><name pos:start="4493:2" pos:end="4493:13">illegal_insn</name>:</label>

    <expr_stmt pos:start="4495:5" pos:end="4495:19"><expr pos:start="4495:5" pos:end="4495:18"><call pos:start="4495:5" pos:end="4495:18"><name pos:start="4495:5" pos:end="4495:14">save_state</name><argument_list pos:start="4495:15" pos:end="4495:18">(<argument pos:start="4495:16" pos:end="4495:17"><expr pos:start="4495:16" pos:end="4495:17"><name pos:start="4495:16" pos:end="4495:17">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="4497:5" pos:end="4497:34"><expr pos:start="4497:5" pos:end="4497:33"><call pos:start="4497:5" pos:end="4497:33"><name pos:start="4497:5" pos:end="4497:20">gen_op_exception</name><argument_list pos:start="4497:21" pos:end="4497:33">(<argument pos:start="4497:22" pos:end="4497:32"><expr pos:start="4497:22" pos:end="4497:32"><name pos:start="4497:22" pos:end="4497:32">TT_ILL_INSN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="4499:5" pos:end="4499:18"><expr pos:start="4499:5" pos:end="4499:17"><name pos:start="4499:5" pos:end="4499:13"><name pos:start="4499:5" pos:end="4499:6">dc</name><operator pos:start="4499:7" pos:end="4499:8">-&gt;</operator><name pos:start="4499:9" pos:end="4499:13">is_br</name></name> <operator pos:start="4499:15" pos:end="4499:15">=</operator> <literal type="number" pos:start="4499:17" pos:end="4499:17">1</literal></expr>;</expr_stmt>

    <return pos:start="4501:5" pos:end="4504:0">return;</return>

<cpp:if pos:start="4503:1" pos:end="4503:30">#<cpp:directive pos:start="4503:2" pos:end="4503:3">if</cpp:directive> <expr pos:start="4503:5" pos:end="4503:30"><operator pos:start="4503:5" pos:end="4503:5">!</operator><call pos:start="4503:6" pos:end="4503:30"><name pos:start="4503:6" pos:end="4503:12">defined</name><argument_list pos:start="4503:13" pos:end="4503:30">(<argument pos:start="4503:14" pos:end="4503:29"><expr pos:start="4503:14" pos:end="4503:29"><name pos:start="4503:14" pos:end="4503:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

 <label pos:start="4505:2" pos:end="4505:11"><name pos:start="4505:2" pos:end="4505:10">priv_insn</name>:</label>

    <expr_stmt pos:start="4507:5" pos:end="4507:19"><expr pos:start="4507:5" pos:end="4507:18"><call pos:start="4507:5" pos:end="4507:18"><name pos:start="4507:5" pos:end="4507:14">save_state</name><argument_list pos:start="4507:15" pos:end="4507:18">(<argument pos:start="4507:16" pos:end="4507:17"><expr pos:start="4507:16" pos:end="4507:17"><name pos:start="4507:16" pos:end="4507:17">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="4509:5" pos:end="4509:35"><expr pos:start="4509:5" pos:end="4509:34"><call pos:start="4509:5" pos:end="4509:34"><name pos:start="4509:5" pos:end="4509:20">gen_op_exception</name><argument_list pos:start="4509:21" pos:end="4509:34">(<argument pos:start="4509:22" pos:end="4509:33"><expr pos:start="4509:22" pos:end="4509:33"><name pos:start="4509:22" pos:end="4509:33">TT_PRIV_INSN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="4511:5" pos:end="4511:18"><expr pos:start="4511:5" pos:end="4511:17"><name pos:start="4511:5" pos:end="4511:13"><name pos:start="4511:5" pos:end="4511:6">dc</name><operator pos:start="4511:7" pos:end="4511:8">-&gt;</operator><name pos:start="4511:9" pos:end="4511:13">is_br</name></name> <operator pos:start="4511:15" pos:end="4511:15">=</operator> <literal type="number" pos:start="4511:17" pos:end="4511:17">1</literal></expr>;</expr_stmt>

    <return pos:start="4513:5" pos:end="4516:0">return;</return>

<cpp:endif pos:start="4515:1" pos:end="4515:6">#<cpp:directive pos:start="4515:2" pos:end="4515:6">endif</cpp:directive></cpp:endif>

 <label pos:start="4517:2" pos:end="4517:11"><name pos:start="4517:2" pos:end="4517:10">nfpu_insn</name>:</label>

    <expr_stmt pos:start="4519:5" pos:end="4519:19"><expr pos:start="4519:5" pos:end="4519:18"><call pos:start="4519:5" pos:end="4519:18"><name pos:start="4519:5" pos:end="4519:14">save_state</name><argument_list pos:start="4519:15" pos:end="4519:18">(<argument pos:start="4519:16" pos:end="4519:17"><expr pos:start="4519:16" pos:end="4519:17"><name pos:start="4519:16" pos:end="4519:17">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="4521:5" pos:end="4521:45"><expr pos:start="4521:5" pos:end="4521:44"><call pos:start="4521:5" pos:end="4521:44"><name pos:start="4521:5" pos:end="4521:25">gen_op_fpexception_im</name><argument_list pos:start="4521:26" pos:end="4521:44">(<argument pos:start="4521:27" pos:end="4521:43"><expr pos:start="4521:27" pos:end="4521:43"><name pos:start="4521:27" pos:end="4521:43">FSR_FTT_UNIMPFPOP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="4523:5" pos:end="4523:18"><expr pos:start="4523:5" pos:end="4523:17"><name pos:start="4523:5" pos:end="4523:13"><name pos:start="4523:5" pos:end="4523:6">dc</name><operator pos:start="4523:7" pos:end="4523:8">-&gt;</operator><name pos:start="4523:9" pos:end="4523:13">is_br</name></name> <operator pos:start="4523:15" pos:end="4523:15">=</operator> <literal type="number" pos:start="4523:17" pos:end="4523:17">1</literal></expr>;</expr_stmt>

    <return pos:start="4525:5" pos:end="4528:0">return;</return>

<cpp:if pos:start="4527:1" pos:end="4527:30">#<cpp:directive pos:start="4527:2" pos:end="4527:3">if</cpp:directive> <expr pos:start="4527:5" pos:end="4527:30"><operator pos:start="4527:5" pos:end="4527:5">!</operator><call pos:start="4527:6" pos:end="4527:30"><name pos:start="4527:6" pos:end="4527:12">defined</name><argument_list pos:start="4527:13" pos:end="4527:30">(<argument pos:start="4527:14" pos:end="4527:29"><expr pos:start="4527:14" pos:end="4527:29"><name pos:start="4527:14" pos:end="4527:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

 <label pos:start="4529:2" pos:end="4529:10"><name pos:start="4529:2" pos:end="4529:9">nfq_insn</name>:</label>

    <expr_stmt pos:start="4531:5" pos:end="4531:19"><expr pos:start="4531:5" pos:end="4531:18"><call pos:start="4531:5" pos:end="4531:18"><name pos:start="4531:5" pos:end="4531:14">save_state</name><argument_list pos:start="4531:15" pos:end="4531:18">(<argument pos:start="4531:16" pos:end="4531:17"><expr pos:start="4531:16" pos:end="4531:17"><name pos:start="4531:16" pos:end="4531:17">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="4533:5" pos:end="4533:45"><expr pos:start="4533:5" pos:end="4533:44"><call pos:start="4533:5" pos:end="4533:44"><name pos:start="4533:5" pos:end="4533:25">gen_op_fpexception_im</name><argument_list pos:start="4533:26" pos:end="4533:44">(<argument pos:start="4533:27" pos:end="4533:43"><expr pos:start="4533:27" pos:end="4533:43"><name pos:start="4533:27" pos:end="4533:43">FSR_FTT_SEQ_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="4535:5" pos:end="4535:18"><expr pos:start="4535:5" pos:end="4535:17"><name pos:start="4535:5" pos:end="4535:13"><name pos:start="4535:5" pos:end="4535:6">dc</name><operator pos:start="4535:7" pos:end="4535:8">-&gt;</operator><name pos:start="4535:9" pos:end="4535:13">is_br</name></name> <operator pos:start="4535:15" pos:end="4535:15">=</operator> <literal type="number" pos:start="4535:17" pos:end="4535:17">1</literal></expr>;</expr_stmt>

    <return pos:start="4537:5" pos:end="4542:0">return;</return>

<cpp:endif pos:start="4539:1" pos:end="4539:6">#<cpp:directive pos:start="4539:2" pos:end="4539:6">endif</cpp:directive></cpp:endif>

<cpp:ifndef pos:start="4541:1" pos:end="4541:22">#<cpp:directive pos:start="4541:2" pos:end="4541:7">ifndef</cpp:directive> <name pos:start="4541:9" pos:end="4541:22">TARGET_SPARC64</name></cpp:ifndef>

 <label pos:start="4543:2" pos:end="4543:10"><name pos:start="4543:2" pos:end="4543:9">ncp_insn</name>:</label>

    <expr_stmt pos:start="4545:5" pos:end="4545:19"><expr pos:start="4545:5" pos:end="4545:18"><call pos:start="4545:5" pos:end="4545:18"><name pos:start="4545:5" pos:end="4545:14">save_state</name><argument_list pos:start="4545:15" pos:end="4545:18">(<argument pos:start="4545:16" pos:end="4545:17"><expr pos:start="4545:16" pos:end="4545:17"><name pos:start="4545:16" pos:end="4545:17">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="4547:5" pos:end="4547:34"><expr pos:start="4547:5" pos:end="4547:33"><call pos:start="4547:5" pos:end="4547:33"><name pos:start="4547:5" pos:end="4547:20">gen_op_exception</name><argument_list pos:start="4547:21" pos:end="4547:33">(<argument pos:start="4547:22" pos:end="4547:32"><expr pos:start="4547:22" pos:end="4547:32"><name pos:start="4547:22" pos:end="4547:32">TT_NCP_INSN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="4549:5" pos:end="4549:18"><expr pos:start="4549:5" pos:end="4549:17"><name pos:start="4549:5" pos:end="4549:13"><name pos:start="4549:5" pos:end="4549:6">dc</name><operator pos:start="4549:7" pos:end="4549:8">-&gt;</operator><name pos:start="4549:9" pos:end="4549:13">is_br</name></name> <operator pos:start="4549:15" pos:end="4549:15">=</operator> <literal type="number" pos:start="4549:17" pos:end="4549:17">1</literal></expr>;</expr_stmt>

    <return pos:start="4551:5" pos:end="4554:0">return;</return>

<cpp:endif pos:start="4553:1" pos:end="4553:6">#<cpp:directive pos:start="4553:2" pos:end="4553:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
