<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13821.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:31">decoder_init</name><parameter_list pos:start="1:32" pos:end="1:55">(<parameter pos:start="1:33" pos:end="1:54"><decl pos:start="1:33" pos:end="1:54"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type> <name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:15">G729Context</name><modifier pos:start="5:16" pos:end="5:16">*</modifier></type> <name pos:start="5:18" pos:end="5:20">ctx</name> <init pos:start="5:22" pos:end="5:39">= <expr pos:start="5:24" pos:end="5:39"><name pos:start="5:24" pos:end="5:39"><name pos:start="5:24" pos:end="5:28">avctx</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>,<decl pos:start="7:11" pos:end="7:11"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:11">k</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:29">(<expr pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:13">avctx</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:23">channels</name></name> <operator pos:start="11:25" pos:end="11:26">!=</operator> <literal type="number" pos:start="11:28" pos:end="11:28">1</literal></expr>)</condition> <block pos:start="11:31" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:31">

        <expr_stmt pos:start="13:9" pos:end="13:113"><expr pos:start="13:9" pos:end="13:112"><call pos:start="13:9" pos:end="13:112"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="13:112">(<argument pos:start="13:16" pos:end="13:20"><expr pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:20">avctx</name></expr></argument>, <argument pos:start="13:23" pos:end="13:34"><expr pos:start="13:23" pos:end="13:34"><name pos:start="13:23" pos:end="13:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:37" pos:end="13:94"><expr pos:start="13:37" pos:end="13:94"><literal type="string" pos:start="13:37" pos:end="13:94">"Only mono sound is supported (requested channels: %d).\n"</literal></expr></argument>, <argument pos:start="13:97" pos:end="13:111"><expr pos:start="13:97" pos:end="13:111"><name pos:start="13:97" pos:end="13:111"><name pos:start="13:97" pos:end="13:101">avctx</name><operator pos:start="13:102" pos:end="13:103">-&gt;</operator><name pos:start="13:104" pos:end="13:111">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:31">return <expr pos:start="15:16" pos:end="15:30"><call pos:start="15:16" pos:end="15:30"><name pos:start="15:16" pos:end="15:22">AVERROR</name><argument_list pos:start="15:23" pos:end="15:30">(<argument pos:start="15:24" pos:end="15:29"><expr pos:start="15:24" pos:end="15:29"><name pos:start="15:24" pos:end="15:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:9">avctx</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:21">sample_fmt</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <name pos:start="19:25" pos:end="19:41">AV_SAMPLE_FMT_S16</name></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:72">/* Both 8kbit/s and 6.4kbit/s modes uses two subframes per frame. */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:9">avctx</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:21">frame_size</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:37">SUBFRAME_SIZE</name> <operator pos:start="25:39" pos:end="25:40">&lt;&lt;</operator> <literal type="number" pos:start="25:42" pos:end="25:42">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:7">ctx</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:19">gain_coeff</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <literal type="number" pos:start="29:23" pos:end="29:27">16384</literal></expr>;</expr_stmt> <comment type="line" pos:start="29:30" pos:end="29:45">// 1.0 in (1.14)</comment>



    <for pos:start="33:5" pos:end="41:5">for <control pos:start="33:9" pos:end="33:35">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">k</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:30"><expr pos:start="33:17" pos:end="33:29"><name pos:start="33:17" pos:end="33:17">k</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:25">MA_NP</name> <operator pos:start="33:27" pos:end="33:27">+</operator> <literal type="number" pos:start="33:29" pos:end="33:29">1</literal></expr>;</condition> <incr pos:start="33:32" pos:end="33:34"><expr pos:start="33:32" pos:end="33:34"><name pos:start="33:32" pos:end="33:32">k</name><operator pos:start="33:33" pos:end="33:34">++</operator></expr></incr>)</control> <block pos:start="33:37" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:69">

        <expr_stmt pos:start="35:9" pos:end="35:75"><expr pos:start="35:9" pos:end="35:74"><name pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:11">ctx</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:35">past_quantizer_outputs</name><index pos:start="35:36" pos:end="35:38">[<expr pos:start="35:37" pos:end="35:37"><name pos:start="35:37" pos:end="35:37">k</name></expr>]</index></name> <operator pos:start="35:40" pos:end="35:40">=</operator> <name pos:start="35:42" pos:end="35:74"><name pos:start="35:42" pos:end="35:44">ctx</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:71">past_quantizer_output_buf</name><index pos:start="35:72" pos:end="35:74">[<expr pos:start="35:73" pos:end="35:73"><name pos:start="35:73" pos:end="35:73">k</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="37:9" pos:end="39:69">for <control pos:start="37:13" pos:end="37:32">(<init pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:18"><name pos:start="37:14" pos:end="37:14">i</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">1</literal></expr>;</init> <condition pos:start="37:21" pos:end="37:27"><expr pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:21">i</name> <operator pos:start="37:23" pos:end="37:23">&lt;</operator> <literal type="number" pos:start="37:25" pos:end="37:26">11</literal></expr>;</condition> <incr pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:29">i</name><operator pos:start="37:30" pos:end="37:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:13" pos:end="39:69"><block_content pos:start="39:13" pos:end="39:69">

            <expr_stmt pos:start="39:13" pos:end="39:69"><expr pos:start="39:13" pos:end="39:68"><name pos:start="39:13" pos:end="39:49"><name pos:start="39:13" pos:end="39:15">ctx</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:39">past_quantizer_outputs</name><index pos:start="39:40" pos:end="39:42">[<expr pos:start="39:41" pos:end="39:41"><name pos:start="39:41" pos:end="39:41">k</name></expr>]</index><index pos:start="39:43" pos:end="39:49">[<expr pos:start="39:44" pos:end="39:48"><name pos:start="39:44" pos:end="39:44">i</name> <operator pos:start="39:46" pos:end="39:46">-</operator> <literal type="number" pos:start="39:48" pos:end="39:48">1</literal></expr>]</index></name> <operator pos:start="39:51" pos:end="39:51">=</operator> <operator pos:start="39:53" pos:end="39:53">(</operator><literal type="number" pos:start="39:54" pos:end="39:58">18717</literal> <operator pos:start="39:60" pos:end="39:60">*</operator> <name pos:start="39:62" pos:end="39:62">i</name><operator pos:start="39:63" pos:end="39:63">)</operator> <operator pos:start="39:65" pos:end="39:66">&gt;&gt;</operator> <literal type="number" pos:start="39:68" pos:end="39:68">3</literal></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="45:5" pos:end="45:34"><expr pos:start="45:5" pos:end="45:33"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:7">ctx</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:12">lsp</name><index pos:start="45:13" pos:end="45:15">[<expr pos:start="45:14" pos:end="45:14"><literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>]</index></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:33"><name pos:start="45:19" pos:end="45:21">ctx</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:30">lsp_buf</name><index pos:start="45:31" pos:end="45:33">[<expr pos:start="45:32" pos:end="45:32"><literal type="number" pos:start="45:32" pos:end="45:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:34"><expr pos:start="47:5" pos:end="47:33"><name pos:start="47:5" pos:end="47:15"><name pos:start="47:5" pos:end="47:7">ctx</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:12">lsp</name><index pos:start="47:13" pos:end="47:15">[<expr pos:start="47:14" pos:end="47:14"><literal type="number" pos:start="47:14" pos:end="47:14">1</literal></expr>]</index></name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:33"><name pos:start="47:19" pos:end="47:21">ctx</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:30">lsp_buf</name><index pos:start="47:31" pos:end="47:33">[<expr pos:start="47:32" pos:end="47:32"><literal type="number" pos:start="47:32" pos:end="47:32">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:56"><expr pos:start="49:5" pos:end="49:55"><call pos:start="49:5" pos:end="49:55"><name pos:start="49:5" pos:end="49:10">memcpy</name><argument_list pos:start="49:11" pos:end="49:55">(<argument pos:start="49:12" pos:end="49:22"><expr pos:start="49:12" pos:end="49:22"><name pos:start="49:12" pos:end="49:22"><name pos:start="49:12" pos:end="49:14">ctx</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:19">lsp</name><index pos:start="49:20" pos:end="49:22">[<expr pos:start="49:21" pos:end="49:21"><literal type="number" pos:start="49:21" pos:end="49:21">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="49:25" pos:end="49:32"><expr pos:start="49:25" pos:end="49:32"><name pos:start="49:25" pos:end="49:32">lsp_init</name></expr></argument>, <argument pos:start="49:35" pos:end="49:54"><expr pos:start="49:35" pos:end="49:54"><literal type="number" pos:start="49:35" pos:end="49:36">10</literal> <operator pos:start="49:38" pos:end="49:38">*</operator> <sizeof pos:start="49:40" pos:end="49:54">sizeof<argument_list pos:start="49:46" pos:end="49:54">(<argument pos:start="49:47" pos:end="49:53"><expr pos:start="49:47" pos:end="49:53"><name pos:start="49:47" pos:end="49:53">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:60"><expr pos:start="53:5" pos:end="53:59"><name pos:start="53:5" pos:end="53:12"><name pos:start="53:5" pos:end="53:7">ctx</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:12">exc</name></name> <operator pos:start="53:14" pos:end="53:14">=</operator> <operator pos:start="53:16" pos:end="53:16">&amp;</operator><name pos:start="53:17" pos:end="53:59"><name pos:start="53:17" pos:end="53:19">ctx</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:29">exc_base</name><index pos:start="53:30" pos:end="53:59">[<expr pos:start="53:31" pos:end="53:58"><name pos:start="53:31" pos:end="53:45">PITCH_DELAY_MAX</name><operator pos:start="53:46" pos:end="53:46">+</operator><name pos:start="53:47" pos:end="53:58">INTERPOL_LEN</name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:36">/* random seed initialization */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:28"><expr pos:start="59:5" pos:end="59:27"><name pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:7">ctx</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:19">rand_value</name></name> <operator pos:start="59:21" pos:end="59:21">=</operator> <literal type="number" pos:start="59:23" pos:end="59:27">21845</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:36">/* quantized prediction error */</comment>

    <for pos:start="65:5" pos:end="67:38">for<control pos:start="65:8" pos:end="65:22">(<init pos:start="65:9" pos:end="65:12"><expr pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:9">i</name><operator pos:start="65:10" pos:end="65:10">=</operator><literal type="number" pos:start="65:11" pos:end="65:11">0</literal></expr>;</init> <condition pos:start="65:14" pos:end="65:17"><expr pos:start="65:14" pos:end="65:16"><name pos:start="65:14" pos:end="65:14">i</name><operator pos:start="65:15" pos:end="65:15">&lt;</operator><literal type="number" pos:start="65:16" pos:end="65:16">4</literal></expr>;</condition> <incr pos:start="65:19" pos:end="65:21"><expr pos:start="65:19" pos:end="65:21"><name pos:start="65:19" pos:end="65:19">i</name><operator pos:start="65:20" pos:end="65:21">++</operator></expr></incr>)</control><block type="pseudo" pos:start="67:9" pos:end="67:38"><block_content pos:start="67:9" pos:end="67:38">

        <expr_stmt pos:start="67:9" pos:end="67:38"><expr pos:start="67:9" pos:end="67:37"><name pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:11">ctx</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:25">quant_energy</name><index pos:start="67:26" pos:end="67:28">[<expr pos:start="67:27" pos:end="67:27"><name pos:start="67:27" pos:end="67:27">i</name></expr>]</index></name> <operator pos:start="67:30" pos:end="67:30">=</operator> <operator pos:start="67:32" pos:end="67:32">-</operator><literal type="number" pos:start="67:33" pos:end="67:37">14336</literal></expr>;</expr_stmt></block_content></block></for> <comment type="line" pos:start="67:40" pos:end="67:55">// -14 in (5.10)</comment>



    <expr_stmt pos:start="71:5" pos:end="71:40"><expr pos:start="71:5" pos:end="71:39"><name pos:start="71:5" pos:end="71:19"><name pos:start="71:5" pos:end="71:9">avctx</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:19">dsp_mask</name></name><operator pos:start="71:20" pos:end="71:20">=</operator> <operator pos:start="71:22" pos:end="71:22">~</operator><name pos:start="71:23" pos:end="71:39">AV_CPU_FLAG_FORCE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:35"><expr pos:start="73:5" pos:end="73:34"><call pos:start="73:5" pos:end="73:34"><name pos:start="73:5" pos:end="73:16">dsputil_init</name><argument_list pos:start="73:17" pos:end="73:34">(<argument pos:start="73:18" pos:end="73:26"><expr pos:start="73:18" pos:end="73:26"><operator pos:start="73:18" pos:end="73:18">&amp;</operator><name pos:start="73:19" pos:end="73:26"><name pos:start="73:19" pos:end="73:21">ctx</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:26">dsp</name></name></expr></argument>, <argument pos:start="73:29" pos:end="73:33"><expr pos:start="73:29" pos:end="73:33"><name pos:start="73:29" pos:end="73:33">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
