<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20509.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">pc_init_isa</name><parameter_list pos:start="1:24" pos:end="1:46">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:36">MachineState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:45">machine</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:75">

    <expr_stmt pos:start="5:5" pos:end="5:24"><expr pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:15">pci_enabled</name> <operator pos:start="5:17" pos:end="5:17">=</operator> <name pos:start="5:19" pos:end="5:23">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:27"><expr pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:18">has_acpi_build</name> <operator pos:start="7:20" pos:end="7:20">=</operator> <name pos:start="7:22" pos:end="7:26">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:28"><expr pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:19">smbios_defaults</name> <operator pos:start="9:21" pos:end="9:21">=</operator> <name pos:start="9:23" pos:end="9:27">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:18">gigabyte_align</name> <operator pos:start="11:20" pos:end="11:20">=</operator> <name pos:start="11:22" pos:end="11:26">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:30"><expr pos:start="13:5" pos:end="13:29"><name pos:start="13:5" pos:end="13:22">smbios_legacy_mode</name> <operator pos:start="13:24" pos:end="13:24">=</operator> <name pos:start="13:26" pos:end="13:29">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:23">has_reserved_memory</name> <operator pos:start="15:25" pos:end="15:25">=</operator> <name pos:start="15:27" pos:end="15:31">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:21">option_rom_has_mr</name> <operator pos:start="17:23" pos:end="17:23">=</operator> <name pos:start="17:25" pos:end="17:28">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:19">rom_file_has_mr</name> <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:27">false</name></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:28">(<expr pos:start="21:9" pos:end="21:27"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:27"><name pos:start="21:10" pos:end="21:16">machine</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:27">cpu_model</name></name></expr>)</condition> <block pos:start="21:30" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:35">

        <expr_stmt pos:start="23:9" pos:end="23:35"><expr pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:15">machine</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:26">cpu_model</name></name> <operator pos:start="23:28" pos:end="23:28">=</operator> <literal type="string" pos:start="23:30" pos:end="23:34">"486"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:51"><expr pos:start="27:5" pos:end="27:50"><call pos:start="27:5" pos:end="27:50"><name pos:start="27:5" pos:end="27:30">x86_cpu_change_kvm_default</name><argument_list pos:start="27:31" pos:end="27:50">(<argument pos:start="27:32" pos:end="27:43"><expr pos:start="27:32" pos:end="27:43"><literal type="string" pos:start="27:32" pos:end="27:43">"kvm-pv-eoi"</literal></expr></argument>, <argument pos:start="27:46" pos:end="27:49"><expr pos:start="27:46" pos:end="27:49"><name pos:start="27:46" pos:end="27:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><call pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:30">enable_compat_apic_id_mode</name><argument_list pos:start="29:31" pos:end="29:32">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:75"><expr pos:start="31:5" pos:end="31:74"><call pos:start="31:5" pos:end="31:74"><name pos:start="31:5" pos:end="31:12">pc_init1</name><argument_list pos:start="31:13" pos:end="31:74">(<argument pos:start="31:14" pos:end="31:20"><expr pos:start="31:14" pos:end="31:20"><name pos:start="31:14" pos:end="31:20">machine</name></expr></argument>, <argument pos:start="31:23" pos:end="31:49"><expr pos:start="31:23" pos:end="31:49"><name pos:start="31:23" pos:end="31:49">TYPE_I440FX_PCI_HOST_BRIDGE</name></expr></argument>, <argument pos:start="31:52" pos:end="31:73"><expr pos:start="31:52" pos:end="31:73"><name pos:start="31:52" pos:end="31:73">TYPE_I440FX_PCI_DEVICE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
