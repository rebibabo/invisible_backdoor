<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11150.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">qcrypto_hash_bytesv</name><parameter_list pos:start="1:24" pos:end="11:37">(<parameter pos:start="1:25" pos:end="1:48"><decl pos:start="1:25" pos:end="1:48"><type pos:start="1:25" pos:end="1:48"><name pos:start="1:25" pos:end="1:44">QCryptoHashAlgorithm</name></type> <name pos:start="1:46" pos:end="1:48">alg</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:47"><decl pos:start="3:25" pos:end="3:47"><type pos:start="3:25" pos:end="3:47"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:42"><name pos:start="3:31" pos:end="3:36">struct</name> <name pos:start="3:38" pos:end="3:42">iovec</name></name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">iov</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:35"><decl pos:start="5:25" pos:end="5:35"><type pos:start="5:25" pos:end="5:35"><name pos:start="5:25" pos:end="5:30">size_t</name></type> <name pos:start="5:32" pos:end="5:35">niov</name></decl></parameter>,

                        <parameter pos:start="7:25" pos:end="7:40"><decl pos:start="7:25" pos:end="7:40"><type pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:31">uint8_t</name> <modifier pos:start="7:33" pos:end="7:33">*</modifier><modifier pos:start="7:34" pos:end="7:34">*</modifier></type><name pos:start="7:35" pos:end="7:40">result</name></decl></parameter>,

                        <parameter pos:start="9:25" pos:end="9:41"><decl pos:start="9:25" pos:end="9:41"><type pos:start="9:25" pos:end="9:41"><name pos:start="9:25" pos:end="9:30">size_t</name> <modifier pos:start="9:32" pos:end="9:32">*</modifier></type><name pos:start="9:33" pos:end="9:41">resultlen</name></decl></parameter>,

                        <parameter pos:start="11:25" pos:end="11:36"><decl pos:start="11:25" pos:end="11:36"><type pos:start="11:25" pos:end="11:36"><name pos:start="11:25" pos:end="11:29">Error</name> <modifier pos:start="11:31" pos:end="11:31">*</modifier><modifier pos:start="11:32" pos:end="11:32">*</modifier></type><name pos:start="11:33" pos:end="11:36">errp</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="119:1">{<block_content pos:start="15:5" pos:end="117:14">

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:20">gnutls_hash_hd_t</name></type> <name pos:start="17:22" pos:end="17:24">dig</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:50">(<expr pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:11">alg</name> <operator pos:start="21:13" pos:end="21:14">&gt;=</operator> <call pos:start="21:16" pos:end="21:49"><name pos:start="21:16" pos:end="21:27">G_N_ELEMENTS</name><argument_list pos:start="21:28" pos:end="21:49">(<argument pos:start="21:29" pos:end="21:48"><expr pos:start="21:29" pos:end="21:48"><name pos:start="21:29" pos:end="21:48">qcrypto_hash_alg_map</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:52" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:18">

        <expr_stmt pos:start="23:9" pos:end="27:24"><expr pos:start="23:9" pos:end="27:23"><call pos:start="23:9" pos:end="27:23"><name pos:start="23:9" pos:end="23:18">error_setg</name><argument_list pos:start="23:19" pos:end="27:23">(<argument pos:start="23:20" pos:end="23:23"><expr pos:start="23:20" pos:end="23:23"><name pos:start="23:20" pos:end="23:23">errp</name></expr></argument>,

                   <argument pos:start="25:20" pos:end="25:46"><expr pos:start="25:20" pos:end="25:46"><literal type="string" pos:start="25:20" pos:end="25:46">"Unknown hash algorithm %d"</literal></expr></argument>,

                   <argument pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">alg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:60"><expr pos:start="35:5" pos:end="35:59"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:59"><name pos:start="35:11" pos:end="35:26">gnutls_hash_init</name><argument_list pos:start="35:27" pos:end="35:59">(<argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><operator pos:start="35:28" pos:end="35:28">&amp;</operator><name pos:start="35:29" pos:end="35:31">dig</name></expr></argument>, <argument pos:start="35:34" pos:end="35:58"><expr pos:start="35:34" pos:end="35:58"><name pos:start="35:34" pos:end="35:58"><name pos:start="35:34" pos:end="35:53">qcrypto_hash_alg_map</name><index pos:start="35:54" pos:end="35:58">[<expr pos:start="35:55" pos:end="35:57"><name pos:start="35:55" pos:end="35:57">alg</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="49:5"><if pos:start="39:5" pos:end="49:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">&lt;</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition> <block pos:start="39:18" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:18">

        <expr_stmt pos:start="41:9" pos:end="45:41"><expr pos:start="41:9" pos:end="45:40"><call pos:start="41:9" pos:end="45:40"><name pos:start="41:9" pos:end="41:18">error_setg</name><argument_list pos:start="41:19" pos:end="45:40">(<argument pos:start="41:20" pos:end="41:23"><expr pos:start="41:20" pos:end="41:23"><name pos:start="41:20" pos:end="41:23">errp</name></expr></argument>,

                   <argument pos:start="43:20" pos:end="43:60"><expr pos:start="43:20" pos:end="43:60"><literal type="string" pos:start="43:20" pos:end="43:60">"Unable to initialize hash algorithm: %s"</literal></expr></argument>,

                   <argument pos:start="45:20" pos:end="45:39"><expr pos:start="45:20" pos:end="45:39"><call pos:start="45:20" pos:end="45:39"><name pos:start="45:20" pos:end="45:34">gnutls_strerror</name><argument_list pos:start="45:35" pos:end="45:39">(<argument pos:start="45:36" pos:end="45:38"><expr pos:start="45:36" pos:end="45:38"><name pos:start="45:36" pos:end="45:38">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="53:5" pos:end="69:5">for <control pos:start="53:9" pos:end="53:30">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:25"><expr pos:start="53:17" pos:end="53:24"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:24">niov</name></expr>;</condition> <incr pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:27">i</name><operator pos:start="53:28" pos:end="53:29">++</operator></expr></incr>)</control> <block pos:start="53:32" pos:end="69:5">{<block_content pos:start="55:9" pos:end="67:9">

        <expr_stmt pos:start="55:9" pos:end="55:64"><expr pos:start="55:9" pos:end="55:63"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:63"><name pos:start="55:15" pos:end="55:25">gnutls_hash</name><argument_list pos:start="55:26" pos:end="55:63">(<argument pos:start="55:27" pos:end="55:29"><expr pos:start="55:27" pos:end="55:29"><name pos:start="55:27" pos:end="55:29">dig</name></expr></argument>, <argument pos:start="55:32" pos:end="55:46"><expr pos:start="55:32" pos:end="55:46"><name pos:start="55:32" pos:end="55:37"><name pos:start="55:32" pos:end="55:34">iov</name><index pos:start="55:35" pos:end="55:37">[<expr pos:start="55:36" pos:end="55:36"><name pos:start="55:36" pos:end="55:36">i</name></expr>]</index></name><operator pos:start="55:38" pos:end="55:38">.</operator><name pos:start="55:39" pos:end="55:46">iov_base</name></expr></argument>, <argument pos:start="55:49" pos:end="55:62"><expr pos:start="55:49" pos:end="55:62"><name pos:start="55:49" pos:end="55:54"><name pos:start="55:49" pos:end="55:51">iov</name><index pos:start="55:52" pos:end="55:54">[<expr pos:start="55:53" pos:end="55:53"><name pos:start="55:53" pos:end="55:53">i</name></expr>]</index></name><operator pos:start="55:55" pos:end="55:55">.</operator><name pos:start="55:56" pos:end="55:62">iov_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="67:9"><if pos:start="57:9" pos:end="67:9">if <condition pos:start="57:12" pos:end="57:20">(<expr pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">&lt;</operator> <literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>)</condition> <block pos:start="57:22" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:23">

            <expr_stmt pos:start="59:13" pos:end="63:45"><expr pos:start="59:13" pos:end="63:44"><call pos:start="59:13" pos:end="63:44"><name pos:start="59:13" pos:end="59:22">error_setg</name><argument_list pos:start="59:23" pos:end="63:44">(<argument pos:start="59:24" pos:end="59:27"><expr pos:start="59:24" pos:end="59:27"><name pos:start="59:24" pos:end="59:27">errp</name></expr></argument>,

                       <argument pos:start="61:24" pos:end="61:53"><expr pos:start="61:24" pos:end="61:53"><literal type="string" pos:start="61:24" pos:end="61:53">"Unable process hash data: %s"</literal></expr></argument>,

                       <argument pos:start="63:24" pos:end="63:43"><expr pos:start="63:24" pos:end="63:43"><call pos:start="63:24" pos:end="63:43"><name pos:start="63:24" pos:end="63:38">gnutls_strerror</name><argument_list pos:start="63:39" pos:end="63:43">(<argument pos:start="63:40" pos:end="63:42"><expr pos:start="63:40" pos:end="63:42"><name pos:start="63:40" pos:end="63:42">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="65:13" pos:end="65:23">goto <name pos:start="65:18" pos:end="65:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="73:5" pos:end="73:57"><expr pos:start="73:5" pos:end="73:56"><name pos:start="73:5" pos:end="73:7">ret</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <call pos:start="73:11" pos:end="73:56"><name pos:start="73:11" pos:end="73:29">gnutls_hash_get_len</name><argument_list pos:start="73:30" pos:end="73:56">(<argument pos:start="73:31" pos:end="73:55"><expr pos:start="73:31" pos:end="73:55"><name pos:start="73:31" pos:end="73:55"><name pos:start="73:31" pos:end="73:50">qcrypto_hash_alg_map</name><index pos:start="73:51" pos:end="73:55">[<expr pos:start="73:52" pos:end="73:54"><name pos:start="73:52" pos:end="73:54">alg</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="85:5"><if pos:start="75:5" pos:end="85:5">if <condition pos:start="75:8" pos:end="75:17">(<expr pos:start="75:9" pos:end="75:16"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:14">&lt;=</operator> <literal type="number" pos:start="75:16" pos:end="75:16">0</literal></expr>)</condition> <block pos:start="75:19" pos:end="85:5">{<block_content pos:start="77:9" pos:end="83:19">

        <expr_stmt pos:start="77:9" pos:end="81:41"><expr pos:start="77:9" pos:end="81:40"><call pos:start="77:9" pos:end="81:40"><name pos:start="77:9" pos:end="77:18">error_setg</name><argument_list pos:start="77:19" pos:end="81:40">(<argument pos:start="77:20" pos:end="77:23"><expr pos:start="77:20" pos:end="77:23"><name pos:start="77:20" pos:end="77:23">errp</name></expr></argument>,

                   <argument pos:start="79:20" pos:end="79:50"><expr pos:start="79:20" pos:end="79:50"><literal type="string" pos:start="79:20" pos:end="79:50">"Unable to get hash length: %s"</literal></expr></argument>,

                   <argument pos:start="81:20" pos:end="81:39"><expr pos:start="81:20" pos:end="81:39"><call pos:start="81:20" pos:end="81:39"><name pos:start="81:20" pos:end="81:34">gnutls_strerror</name><argument_list pos:start="81:35" pos:end="81:39">(<argument pos:start="81:36" pos:end="81:38"><expr pos:start="81:36" pos:end="81:38"><name pos:start="81:36" pos:end="81:38">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="83:9" pos:end="83:19">goto <name pos:start="83:14" pos:end="83:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="103:5"><if pos:start="87:5" pos:end="93:5">if <condition pos:start="87:8" pos:end="87:24">(<expr pos:start="87:9" pos:end="87:23"><operator pos:start="87:9" pos:end="87:9">*</operator><name pos:start="87:10" pos:end="87:18">resultlen</name> <operator pos:start="87:20" pos:end="87:21">==</operator> <literal type="number" pos:start="87:23" pos:end="87:23">0</literal></expr>)</condition> <block pos:start="87:26" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:46">

        <expr_stmt pos:start="89:9" pos:end="89:25"><expr pos:start="89:9" pos:end="89:24"><operator pos:start="89:9" pos:end="89:9">*</operator><name pos:start="89:10" pos:end="89:18">resultlen</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <name pos:start="89:22" pos:end="89:24">ret</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:46"><expr pos:start="91:9" pos:end="91:45"><operator pos:start="91:9" pos:end="91:9">*</operator><name pos:start="91:10" pos:end="91:15">result</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <call pos:start="91:19" pos:end="91:45"><name pos:start="91:19" pos:end="91:24">g_new0</name><argument_list pos:start="91:25" pos:end="91:45">(<argument pos:start="91:26" pos:end="91:32"><expr pos:start="91:26" pos:end="91:32"><name pos:start="91:26" pos:end="91:32">uint8_t</name></expr></argument>, <argument pos:start="91:35" pos:end="91:44"><expr pos:start="91:35" pos:end="91:44"><operator pos:start="91:35" pos:end="91:35">*</operator><name pos:start="91:36" pos:end="91:44">resultlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="93:7" pos:end="103:5">else if <condition pos:start="93:15" pos:end="93:33">(<expr pos:start="93:16" pos:end="93:32"><operator pos:start="93:16" pos:end="93:16">*</operator><name pos:start="93:17" pos:end="93:25">resultlen</name> <operator pos:start="93:27" pos:end="93:28">!=</operator> <name pos:start="93:30" pos:end="93:32">ret</name></expr>)</condition> <block pos:start="93:35" pos:end="103:5">{<block_content pos:start="95:9" pos:end="101:19">

        <expr_stmt pos:start="95:9" pos:end="99:36"><expr pos:start="95:9" pos:end="99:35"><call pos:start="95:9" pos:end="99:35"><name pos:start="95:9" pos:end="95:18">error_setg</name><argument_list pos:start="95:19" pos:end="99:35">(<argument pos:start="95:20" pos:end="95:23"><expr pos:start="95:20" pos:end="95:23"><name pos:start="95:20" pos:end="95:23">errp</name></expr></argument>,

                   <argument pos:start="97:20" pos:end="97:67"><expr pos:start="97:20" pos:end="97:67"><literal type="string" pos:start="97:20" pos:end="97:67">"Result buffer size %zu is smaller than hash %d"</literal></expr></argument>,

                   <argument pos:start="99:20" pos:end="99:29"><expr pos:start="99:20" pos:end="99:29"><operator pos:start="99:20" pos:end="99:20">*</operator><name pos:start="99:21" pos:end="99:29">resultlen</name></expr></argument>, <argument pos:start="99:32" pos:end="99:34"><expr pos:start="99:32" pos:end="99:34"><name pos:start="99:32" pos:end="99:34">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="101:9" pos:end="101:19">goto <name pos:start="101:14" pos:end="101:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:37"><expr pos:start="107:5" pos:end="107:36"><call pos:start="107:5" pos:end="107:36"><name pos:start="107:5" pos:end="107:22">gnutls_hash_deinit</name><argument_list pos:start="107:23" pos:end="107:36">(<argument pos:start="107:24" pos:end="107:26"><expr pos:start="107:24" pos:end="107:26"><name pos:start="107:24" pos:end="107:26">dig</name></expr></argument>, <argument pos:start="107:29" pos:end="107:35"><expr pos:start="107:29" pos:end="107:35"><operator pos:start="107:29" pos:end="107:29">*</operator><name pos:start="107:30" pos:end="107:35">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>



 <label pos:start="113:2" pos:end="113:7"><name pos:start="113:2" pos:end="113:6">error</name>:</label>

    <expr_stmt pos:start="115:5" pos:end="115:34"><expr pos:start="115:5" pos:end="115:33"><call pos:start="115:5" pos:end="115:33"><name pos:start="115:5" pos:end="115:22">gnutls_hash_deinit</name><argument_list pos:start="115:23" pos:end="115:33">(<argument pos:start="115:24" pos:end="115:26"><expr pos:start="115:24" pos:end="115:26"><name pos:start="115:24" pos:end="115:26">dig</name></expr></argument>, <argument pos:start="115:29" pos:end="115:32"><expr pos:start="115:29" pos:end="115:32"><name pos:start="115:29" pos:end="115:32">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="117:5" pos:end="117:14">return <expr pos:start="117:12" pos:end="117:13"><operator pos:start="117:12" pos:end="117:12">-</operator><literal type="number" pos:start="117:13" pos:end="117:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
