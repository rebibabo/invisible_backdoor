<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15466.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">ssi_slave_init</name><parameter_list pos:start="1:26" pos:end="1:66">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:37">DeviceState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">dev</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:65"><decl pos:start="1:45" pos:end="1:65"><type pos:start="1:45" pos:end="1:65"><name pos:start="1:45" pos:end="1:54">DeviceInfo</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:65">base_info</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:25">

    <decl_stmt pos:start="5:5" pos:end="5:69"><decl pos:start="5:5" pos:end="5:68"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">SSISlaveInfo</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">info</name> <init pos:start="5:24" pos:end="5:68">= <expr pos:start="5:26" pos:end="5:68"><call pos:start="5:26" pos:end="5:68"><name pos:start="5:26" pos:end="5:37">container_of</name><argument_list pos:start="5:38" pos:end="5:68">(<argument pos:start="5:39" pos:end="5:47"><expr pos:start="5:39" pos:end="5:47"><name pos:start="5:39" pos:end="5:47">base_info</name></expr></argument>, <argument pos:start="5:50" pos:end="5:61"><expr pos:start="5:50" pos:end="5:61"><name pos:start="5:50" pos:end="5:61">SSISlaveInfo</name></expr></argument>, <argument pos:start="5:64" pos:end="5:67"><expr pos:start="5:64" pos:end="5:67"><name pos:start="5:64" pos:end="5:67">qdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">SSISlave</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:42">= <expr pos:start="7:19" pos:end="7:42"><call pos:start="7:19" pos:end="7:42"><name pos:start="7:19" pos:end="7:37">SSI_SLAVE_FROM_QDEV</name><argument_list pos:start="7:38" pos:end="7:42">(<argument pos:start="7:39" pos:end="7:41"><expr pos:start="7:39" pos:end="7:41"><name pos:start="7:39" pos:end="7:41">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">SSIBus</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:15">bus</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:54"><expr pos:start="13:5" pos:end="13:53"><name pos:start="13:5" pos:end="13:7">bus</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:53"><name pos:start="13:11" pos:end="13:19">FROM_QBUS</name><argument_list pos:start="13:20" pos:end="13:53">(<argument pos:start="13:21" pos:end="13:26"><expr pos:start="13:21" pos:end="13:26"><name pos:start="13:21" pos:end="13:26">SSIBus</name></expr></argument>, <argument pos:start="13:29" pos:end="13:52"><expr pos:start="13:29" pos:end="13:52"><call pos:start="13:29" pos:end="13:52"><name pos:start="13:29" pos:end="13:47">qdev_get_parent_bus</name><argument_list pos:start="13:48" pos:end="13:52">(<argument pos:start="13:49" pos:end="13:51"><expr pos:start="13:49" pos:end="13:51"><name pos:start="13:49" pos:end="13:51">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="17:43">(<expr pos:start="15:9" pos:end="17:42"><call pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:18">LIST_FIRST</name><argument_list pos:start="15:19" pos:end="15:39">(<argument pos:start="15:20" pos:end="15:38"><expr pos:start="15:20" pos:end="15:38"><operator pos:start="15:20" pos:end="15:20">&amp;</operator><name pos:start="15:21" pos:end="15:38"><name pos:start="15:21" pos:end="15:23">bus</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:29">qbus</name><operator pos:start="15:30" pos:end="15:30">.</operator><name pos:start="15:31" pos:end="15:38">children</name></name></expr></argument>)</argument_list></call> <operator pos:start="15:41" pos:end="15:42">!=</operator> <name pos:start="15:44" pos:end="15:46">dev</name>

        <operator pos:start="17:9" pos:end="17:10">||</operator> <call pos:start="17:12" pos:end="17:34"><name pos:start="17:12" pos:end="17:20">LIST_NEXT</name><argument_list pos:start="17:21" pos:end="17:34">(<argument pos:start="17:22" pos:end="17:24"><expr pos:start="17:22" pos:end="17:24"><name pos:start="17:22" pos:end="17:24">dev</name></expr></argument>, <argument pos:start="17:27" pos:end="17:33"><expr pos:start="17:27" pos:end="17:33"><name pos:start="17:27" pos:end="17:33">sibling</name></expr></argument>)</argument_list></call> <operator pos:start="17:36" pos:end="17:37">!=</operator> <name pos:start="17:39" pos:end="17:42">NULL</name></expr>)</condition> <block pos:start="17:45" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:48">

        <expr_stmt pos:start="19:9" pos:end="19:48"><expr pos:start="19:9" pos:end="19:47"><call pos:start="19:9" pos:end="19:47"><name pos:start="19:9" pos:end="19:16">hw_error</name><argument_list pos:start="19:17" pos:end="19:47">(<argument pos:start="19:18" pos:end="19:46"><expr pos:start="19:18" pos:end="19:46"><literal type="string" pos:start="19:18" pos:end="19:46">"Too many devices on SSI bus"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:11">info</name></name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:18">info</name></expr>;</expr_stmt>

    <return pos:start="27:5" pos:end="27:25">return <expr pos:start="27:12" pos:end="27:24"><call pos:start="27:12" pos:end="27:24"><name pos:start="27:12" pos:end="27:21"><name pos:start="27:12" pos:end="27:15">info</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:21">init</name></name><argument_list pos:start="27:22" pos:end="27:24">(<argument pos:start="27:23" pos:end="27:23"><expr pos:start="27:23" pos:end="27:23"><name pos:start="27:23" pos:end="27:23">s</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
