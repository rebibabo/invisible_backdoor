<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26486.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">spapr_vio_busdev_init</name><parameter_list pos:start="1:33" pos:end="1:70">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:44">DeviceState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">qdev</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:69"><decl pos:start="1:53" pos:end="1:69"><type pos:start="1:53" pos:end="1:69"><name pos:start="1:53" pos:end="1:62">DeviceInfo</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">qinfo</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:27">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">VIOsPAPRDeviceInfo</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:28">info</name> <init pos:start="5:30" pos:end="5:58">= <expr pos:start="5:32" pos:end="5:58"><operator pos:start="5:32" pos:end="5:32">(</operator><name pos:start="5:33" pos:end="5:50">VIOsPAPRDeviceInfo</name> <operator pos:start="5:52" pos:end="5:52">*</operator><operator pos:start="5:53" pos:end="5:53">)</operator><name pos:start="5:54" pos:end="5:58">qinfo</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VIOsPAPRDevice</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">dev</name> <init pos:start="7:25" pos:end="7:48">= <expr pos:start="7:27" pos:end="7:48"><operator pos:start="7:27" pos:end="7:27">(</operator><name pos:start="7:28" pos:end="7:41">VIOsPAPRDevice</name> <operator pos:start="7:43" pos:end="7:43">*</operator><operator pos:start="7:44" pos:end="7:44">)</operator><name pos:start="7:45" pos:end="7:48">qdev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:12">id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:41"><expr pos:start="15:5" pos:end="15:40"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:40"><name pos:start="15:11" pos:end="15:29">spapr_vio_check_reg</name><argument_list pos:start="15:30" pos:end="15:40">(<argument pos:start="15:31" pos:end="15:33"><expr pos:start="15:31" pos:end="15:33"><name pos:start="15:31" pos:end="15:33">dev</name></expr></argument>, <argument pos:start="15:36" pos:end="15:39"><expr pos:start="15:36" pos:end="15:39"><name pos:start="15:36" pos:end="15:39">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:12">(<expr pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">ret</name></expr>)</condition> <block pos:start="17:14" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:19">

        <return pos:start="19:9" pos:end="19:19">return <expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:58">/* Don't overwrite ids assigned on the command line */</comment>

    <if_stmt pos:start="27:5" pos:end="39:5"><if pos:start="27:5" pos:end="39:5">if <condition pos:start="27:8" pos:end="27:22">(<expr pos:start="27:9" pos:end="27:21"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:21"><name pos:start="27:10" pos:end="27:12">dev</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:18">qdev</name><operator pos:start="27:19" pos:end="27:19">.</operator><name pos:start="27:20" pos:end="27:21">id</name></name></expr>)</condition> <block pos:start="27:24" pos:end="39:5">{<block_content pos:start="29:9" pos:end="37:26">

        <expr_stmt pos:start="29:9" pos:end="29:38"><expr pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:10">id</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:37"><name pos:start="29:14" pos:end="29:32">vio_format_dev_name</name><argument_list pos:start="29:33" pos:end="29:37">(<argument pos:start="29:34" pos:end="29:36"><expr pos:start="29:34" pos:end="29:36"><name pos:start="29:34" pos:end="29:36">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:16">(<expr pos:start="31:13" pos:end="31:15"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:15">id</name></expr>)</condition> <block pos:start="31:18" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:22">

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:26"><expr pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:11">dev</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:17">qdev</name><operator pos:start="37:18" pos:end="37:18">.</operator><name pos:start="37:19" pos:end="37:20">id</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:25">id</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:72"><expr pos:start="43:5" pos:end="43:71"><name pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:7">dev</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:13">qirq</name></name> <operator pos:start="43:15" pos:end="43:15">=</operator> <call pos:start="43:17" pos:end="43:71"><name pos:start="43:17" pos:end="43:34">spapr_allocate_irq</name><argument_list pos:start="43:35" pos:end="43:71">(<argument pos:start="43:36" pos:end="43:51"><expr pos:start="43:36" pos:end="43:51"><name pos:start="43:36" pos:end="43:51"><name pos:start="43:36" pos:end="43:38">dev</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:51">vio_irq_num</name></name></expr></argument>, <argument pos:start="43:54" pos:end="43:70"><expr pos:start="43:54" pos:end="43:70"><operator pos:start="43:54" pos:end="43:54">&amp;</operator><name pos:start="43:55" pos:end="43:70"><name pos:start="43:55" pos:end="43:57">dev</name><operator pos:start="43:58" pos:end="43:59">-&gt;</operator><name pos:start="43:60" pos:end="43:70">vio_irq_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:19">(<expr pos:start="45:9" pos:end="45:18"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:18"><name pos:start="45:10" pos:end="45:12">dev</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:18">qirq</name></name></expr>)</condition> <block pos:start="45:21" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:18">

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:19"><expr pos:start="53:5" pos:end="53:18"><call pos:start="53:5" pos:end="53:18"><name pos:start="53:5" pos:end="53:13">rtce_init</name><argument_list pos:start="53:14" pos:end="53:18">(<argument pos:start="53:15" pos:end="53:17"><expr pos:start="53:15" pos:end="53:17"><name pos:start="53:15" pos:end="53:17">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="57:5" pos:end="57:27">return <expr pos:start="57:12" pos:end="57:26"><call pos:start="57:12" pos:end="57:26"><name pos:start="57:12" pos:end="57:21"><name pos:start="57:12" pos:end="57:15">info</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:21">init</name></name><argument_list pos:start="57:22" pos:end="57:26">(<argument pos:start="57:23" pos:end="57:25"><expr pos:start="57:23" pos:end="57:25"><name pos:start="57:23" pos:end="57:25">dev</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
