<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14717.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">s390_cpu_initfn</name><parameter_list pos:start="1:28" pos:end="1:40">(<parameter pos:start="1:29" pos:end="1:39"><decl pos:start="1:29" pos:end="1:39"><type pos:start="1:29" pos:end="1:36"><name pos:start="1:29" pos:end="1:34">Object</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">obj</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:27">= <expr pos:start="5:20" pos:end="5:27"><call pos:start="5:20" pos:end="5:27"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:27">(<argument pos:start="5:24" pos:end="5:26"><expr pos:start="5:24" pos:end="5:26"><name pos:start="5:24" pos:end="5:26">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">S390CPU</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">cpu</name> <init pos:start="7:18" pos:end="7:32">= <expr pos:start="7:20" pos:end="7:32"><call pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:27">S390_CPU</name><argument_list pos:start="7:28" pos:end="7:32">(<argument pos:start="7:29" pos:end="7:31"><expr pos:start="7:29" pos:end="7:31"><name pos:start="7:29" pos:end="7:31">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">CPUS390XState</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">env</name> <init pos:start="9:24" pos:end="9:34">= <expr pos:start="9:26" pos:end="9:34"><operator pos:start="9:26" pos:end="9:26">&amp;</operator><name pos:start="9:27" pos:end="9:34"><name pos:start="9:27" pos:end="9:29">cpu</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:34">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:15"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <name pos:start="11:12" pos:end="11:15">bool</name></type> <name pos:start="11:17" pos:end="11:22">inited</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="16:0"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:14"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <name pos:start="13:12" pos:end="13:14">int</name></type> <name pos:start="13:16" pos:end="13:22">cpu_num</name> <init pos:start="13:24" pos:end="13:26">= <expr pos:start="13:26" pos:end="13:26"><literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="15:1" pos:end="15:30">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:30"><operator pos:start="15:5" pos:end="15:5">!</operator><call pos:start="15:6" pos:end="15:30"><name pos:start="15:6" pos:end="15:12">defined</name><argument_list pos:start="15:13" pos:end="15:30">(<argument pos:start="15:14" pos:end="15:29"><expr pos:start="15:14" pos:end="15:29"><name pos:start="15:14" pos:end="15:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <decl_stmt pos:start="17:5" pos:end="20:0"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:13">tm</name></name></type> <name pos:start="17:15" pos:end="17:16">tm</name></decl>;</decl_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:6">cs</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:15">env_ptr</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:21">env</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="28:0"><expr pos:start="25:5" pos:end="25:22"><call pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:17">cpu_exec_init</name><argument_list pos:start="25:18" pos:end="25:22">(<argument pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:21">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="27:1" pos:end="27:30">#<cpp:directive pos:start="27:2" pos:end="27:3">if</cpp:directive> <expr pos:start="27:5" pos:end="27:30"><operator pos:start="27:5" pos:end="27:5">!</operator><call pos:start="27:6" pos:end="27:30"><name pos:start="27:6" pos:end="27:12">defined</name><argument_list pos:start="27:13" pos:end="27:30">(<argument pos:start="27:14" pos:end="27:29"><expr pos:start="27:14" pos:end="27:29"><name pos:start="27:14" pos:end="27:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="29:5" pos:end="29:56"><expr pos:start="29:5" pos:end="29:55"><call pos:start="29:5" pos:end="29:55"><name pos:start="29:5" pos:end="29:23">qemu_register_reset</name><argument_list pos:start="29:24" pos:end="29:55">(<argument pos:start="29:25" pos:end="29:49"><expr pos:start="29:25" pos:end="29:49"><name pos:start="29:25" pos:end="29:49">s390_cpu_machine_reset_cb</name></expr></argument>, <argument pos:start="29:52" pos:end="29:54"><expr pos:start="29:52" pos:end="29:54"><name pos:start="29:52" pos:end="29:54">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><call pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:21">qemu_get_timedate</name><argument_list pos:start="31:22" pos:end="31:29">(<argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><operator pos:start="31:23" pos:end="31:23">&amp;</operator><name pos:start="31:24" pos:end="31:25">tm</name></expr></argument>, <argument pos:start="31:28" pos:end="31:28"><expr pos:start="31:28" pos:end="31:28"><literal type="number" pos:start="31:28" pos:end="31:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:64"><expr pos:start="33:5" pos:end="35:63"><name pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:7">env</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:19">tod_offset</name></name> <operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:36">TOD_UNIX_EPOCH</name> <operator pos:start="33:38" pos:end="33:38">+</operator>

                      <operator pos:start="35:23" pos:end="35:23">(</operator><call pos:start="35:24" pos:end="35:46"><name pos:start="35:24" pos:end="35:31">time2tod</name><argument_list pos:start="35:32" pos:end="35:46">(<argument pos:start="35:33" pos:end="35:45"><expr pos:start="35:33" pos:end="35:45"><call pos:start="35:33" pos:end="35:45"><name pos:start="35:33" pos:end="35:40">mktimegm</name><argument_list pos:start="35:41" pos:end="35:45">(<argument pos:start="35:42" pos:end="35:44"><expr pos:start="35:42" pos:end="35:44"><operator pos:start="35:42" pos:end="35:42">&amp;</operator><name pos:start="35:43" pos:end="35:44">tm</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="35:48" pos:end="35:48">*</operator> <literal type="number" pos:start="35:50" pos:end="35:62">1000000000ULL</literal><operator pos:start="35:63" pos:end="35:63">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:26"><expr pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:7">env</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:21">tod_basetime</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <literal type="number" pos:start="37:25" pos:end="37:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:76"><expr pos:start="39:5" pos:end="39:75"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:7">env</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:18">tod_timer</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <call pos:start="39:22" pos:end="39:75"><name pos:start="39:22" pos:end="39:33">timer_new_ns</name><argument_list pos:start="39:34" pos:end="39:75">(<argument pos:start="39:35" pos:end="39:52"><expr pos:start="39:35" pos:end="39:52"><name pos:start="39:35" pos:end="39:52">QEMU_CLOCK_VIRTUAL</name></expr></argument>, <argument pos:start="39:55" pos:end="39:69"><expr pos:start="39:55" pos:end="39:69"><name pos:start="39:55" pos:end="39:69">s390x_tod_timer</name></expr></argument>, <argument pos:start="39:72" pos:end="39:74"><expr pos:start="39:72" pos:end="39:74"><name pos:start="39:72" pos:end="39:74">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:76"><expr pos:start="41:5" pos:end="41:75"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:7">env</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:18">cpu_timer</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <call pos:start="41:22" pos:end="41:75"><name pos:start="41:22" pos:end="41:33">timer_new_ns</name><argument_list pos:start="41:34" pos:end="41:75">(<argument pos:start="41:35" pos:end="41:52"><expr pos:start="41:35" pos:end="41:52"><name pos:start="41:35" pos:end="41:52">QEMU_CLOCK_VIRTUAL</name></expr></argument>, <argument pos:start="41:55" pos:end="41:69"><expr pos:start="41:55" pos:end="41:69"><name pos:start="41:55" pos:end="41:69">s390x_cpu_timer</name></expr></argument>, <argument pos:start="41:72" pos:end="41:74"><expr pos:start="41:72" pos:end="41:74"><name pos:start="41:72" pos:end="41:74">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="46:0"><expr pos:start="43:5" pos:end="43:46"><call pos:start="43:5" pos:end="43:46"><name pos:start="43:5" pos:end="43:22">s390_cpu_set_state</name><argument_list pos:start="43:23" pos:end="43:46">(<argument pos:start="43:24" pos:end="43:40"><expr pos:start="43:24" pos:end="43:40"><name pos:start="43:24" pos:end="43:40">CPU_STATE_STOPPED</name></expr></argument>, <argument pos:start="43:43" pos:end="43:45"><expr pos:start="43:43" pos:end="43:45"><name pos:start="43:43" pos:end="43:45">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="47:5" pos:end="47:29"><expr pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:7">env</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:16">cpu_num</name></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:26">cpu_num</name><operator pos:start="47:27" pos:end="47:28">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:18"><name pos:start="49:5" pos:end="49:7">env</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:18">ext_index</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <operator pos:start="49:22" pos:end="49:22">-</operator><literal type="number" pos:start="49:23" pos:end="49:23">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:33">(<expr pos:start="53:9" pos:end="53:32"><call pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:19">tcg_enabled</name><argument_list pos:start="53:20" pos:end="53:21">()</argument_list></call> <operator pos:start="53:23" pos:end="53:24">&amp;&amp;</operator> <operator pos:start="53:26" pos:end="53:26">!</operator><name pos:start="53:27" pos:end="53:32">inited</name></expr>)</condition> <block pos:start="53:35" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:31">

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:14">inited</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:21">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><call pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:28">s390x_translate_init</name><argument_list pos:start="57:29" pos:end="57:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
