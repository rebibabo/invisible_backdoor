<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23021.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vid_read_packet</name><parameter_list pos:start="1:27" pos:end="3:41">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:40"><decl pos:start="3:28" pos:end="3:40"><type pos:start="3:28" pos:end="3:40"><name pos:start="3:28" pos:end="3:35">AVPacket</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:5">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">BVID_DemuxContext</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:26">vid</name> <init pos:start="7:28" pos:end="7:41">= <expr pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:30">s</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">char</name></type> <name pos:start="11:19" pos:end="11:28">block_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:20">audio_length</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">ret_value</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:28"><if pos:start="19:5" pos:end="21:28">if<condition pos:start="19:7" pos:end="19:43">(<expr pos:start="19:8" pos:end="19:42"><name pos:start="19:8" pos:end="19:23"><name pos:start="19:8" pos:end="19:10">vid</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:23">is_finished</name></name> <operator pos:start="19:25" pos:end="19:26">||</operator> <name pos:start="19:28" pos:end="19:42"><name pos:start="19:28" pos:end="19:29">pb</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:42">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:28"><block_content pos:start="21:9" pos:end="21:28">

        <return pos:start="21:9" pos:end="21:28">return <expr pos:start="21:16" pos:end="21:27"><call pos:start="21:16" pos:end="21:27"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:27">(<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:14">block_type</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="25:28"><name pos:start="25:18" pos:end="25:24">avio_r8</name><argument_list pos:start="25:25" pos:end="25:28">(<argument pos:start="25:26" pos:end="25:27"><expr pos:start="25:26" pos:end="25:27"><name pos:start="25:26" pos:end="25:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="27:5" pos:end="99:5">switch<condition pos:start="27:11" pos:end="27:22">(<expr pos:start="27:12" pos:end="27:21"><name pos:start="27:12" pos:end="27:21">block_type</name></expr>)</condition><block pos:start="27:23" pos:end="99:5">{<block_content pos:start="29:9" pos:end="97:66">

        <case pos:start="29:9" pos:end="29:27">case <expr pos:start="29:14" pos:end="29:26"><name pos:start="29:14" pos:end="29:26">PALETTE_BLOCK</name></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:40"><expr pos:start="31:13" pos:end="31:39"><call pos:start="31:13" pos:end="31:39"><name pos:start="31:13" pos:end="31:21">avio_seek</name><argument_list pos:start="31:22" pos:end="31:39">(<argument pos:start="31:23" pos:end="31:24"><expr pos:start="31:23" pos:end="31:24"><name pos:start="31:23" pos:end="31:24">pb</name></expr></argument>, <argument pos:start="31:27" pos:end="31:28"><expr pos:start="31:27" pos:end="31:28"><operator pos:start="31:27" pos:end="31:27">-</operator><literal type="number" pos:start="31:28" pos:end="31:28">1</literal></expr></argument>, <argument pos:start="31:31" pos:end="31:38"><expr pos:start="31:31" pos:end="31:38"><name pos:start="31:31" pos:end="31:38">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="line" pos:start="31:46" pos:end="31:66">// include block type</comment>

            <expr_stmt pos:start="33:13" pos:end="33:60"><expr pos:start="33:13" pos:end="33:59"><name pos:start="33:13" pos:end="33:21">ret_value</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <call pos:start="33:25" pos:end="33:59"><name pos:start="33:25" pos:end="33:37">av_get_packet</name><argument_list pos:start="33:38" pos:end="33:59">(<argument pos:start="33:39" pos:end="33:40"><expr pos:start="33:39" pos:end="33:40"><name pos:start="33:39" pos:end="33:40">pb</name></expr></argument>, <argument pos:start="33:43" pos:end="33:45"><expr pos:start="33:43" pos:end="33:45"><name pos:start="33:43" pos:end="33:45">pkt</name></expr></argument>, <argument pos:start="33:48" pos:end="33:58"><expr pos:start="33:48" pos:end="33:58"><literal type="number" pos:start="33:48" pos:end="33:48">3</literal> <operator pos:start="33:50" pos:end="33:50">*</operator> <literal type="number" pos:start="33:52" pos:end="33:56">256</literal> <operator pos:start="33:56" pos:end="33:56">+</operator> <literal type="number" pos:start="33:58" pos:end="33:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="41:13"><if pos:start="35:13" pos:end="41:13">if<condition pos:start="35:15" pos:end="35:40">(<expr pos:start="35:16" pos:end="35:39"><name pos:start="35:16" pos:end="35:24">ret_value</name> <operator pos:start="35:26" pos:end="35:27">!=</operator> <literal type="number" pos:start="35:29" pos:end="35:29">3</literal> <operator pos:start="35:31" pos:end="35:31">*</operator> <literal type="number" pos:start="35:33" pos:end="35:37">256</literal> <operator pos:start="35:37" pos:end="35:37">+</operator> <literal type="number" pos:start="35:39" pos:end="35:39">1</literal></expr>)</condition><block pos:start="35:41" pos:end="41:13">{<block_content pos:start="37:17" pos:end="39:36">

                <expr_stmt pos:start="37:17" pos:end="37:36"><expr pos:start="37:17" pos:end="37:35"><call pos:start="37:17" pos:end="37:35"><name pos:start="37:17" pos:end="37:30">av_free_packet</name><argument_list pos:start="37:31" pos:end="37:35">(<argument pos:start="37:32" pos:end="37:34"><expr pos:start="37:32" pos:end="37:34"><name pos:start="37:32" pos:end="37:34">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="39:17" pos:end="39:36">return <expr pos:start="39:24" pos:end="39:35"><call pos:start="39:24" pos:end="39:35"><name pos:start="39:24" pos:end="39:30">AVERROR</name><argument_list pos:start="39:31" pos:end="39:35">(<argument pos:start="39:32" pos:end="39:34"><expr pos:start="39:32" pos:end="39:34"><name pos:start="39:32" pos:end="39:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:34"><expr pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:29"><name pos:start="43:13" pos:end="43:15">pkt</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:29">stream_index</name></name> <operator pos:start="43:31" pos:end="43:31">=</operator> <literal type="number" pos:start="43:33" pos:end="43:33">0</literal></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:29">return <expr pos:start="45:20" pos:end="45:28"><name pos:start="45:20" pos:end="45:28">ret_value</name></expr>;</return>



        <case pos:start="49:9" pos:end="49:31">case <expr pos:start="49:14" pos:end="49:30"><name pos:start="49:14" pos:end="49:30">FIRST_AUDIO_BLOCK</name></expr>:</case>

            <expr_stmt pos:start="51:13" pos:end="51:26"><expr pos:start="51:13" pos:end="51:25"><call pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:21">avio_rl16</name><argument_list pos:start="51:22" pos:end="51:25">(<argument pos:start="51:23" pos:end="51:24"><expr pos:start="51:23" pos:end="51:24"><name pos:start="51:23" pos:end="51:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="53:13" pos:end="53:91">// soundblaster DAC used for sample rate, as on specification page (link above)</comment>

            <expr_stmt pos:start="55:13" pos:end="55:78"><expr pos:start="55:13" pos:end="55:77"><name pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:22">streams</name><index pos:start="55:23" pos:end="55:25">[<expr pos:start="55:24" pos:end="55:24"><literal type="number" pos:start="55:24" pos:end="55:24">1</literal></expr>]</index></name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:45"><name pos:start="55:28" pos:end="55:32">codec</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:45">sample_rate</name></name> <operator pos:start="55:47" pos:end="55:47">=</operator> <literal type="number" pos:start="55:49" pos:end="55:55">1000000</literal> <operator pos:start="55:57" pos:end="55:57">/</operator> <operator pos:start="55:59" pos:end="55:59">(</operator><literal type="number" pos:start="55:60" pos:end="55:64">256</literal> <operator pos:start="55:64" pos:end="55:64">-</operator> <call pos:start="55:66" pos:end="55:76"><name pos:start="55:66" pos:end="55:72">avio_r8</name><argument_list pos:start="55:73" pos:end="55:76">(<argument pos:start="55:74" pos:end="55:75"><expr pos:start="55:74" pos:end="55:75"><name pos:start="55:74" pos:end="55:75">pb</name></expr></argument>)</argument_list></call><operator pos:start="55:77" pos:end="55:77">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:158"><expr pos:start="57:13" pos:end="57:157"><name pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:22">streams</name><index pos:start="57:23" pos:end="57:25">[<expr pos:start="57:24" pos:end="57:24"><literal type="number" pos:start="57:24" pos:end="57:24">1</literal></expr>]</index></name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:42"><name pos:start="57:28" pos:end="57:32">codec</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:42">bit_rate</name></name> <operator pos:start="57:44" pos:end="57:44">=</operator> <name pos:start="57:46" pos:end="57:58"><name pos:start="57:46" pos:end="57:46">s</name><operator pos:start="57:47" pos:end="57:48">-&gt;</operator><name pos:start="57:49" pos:end="57:55">streams</name><index pos:start="57:56" pos:end="57:58">[<expr pos:start="57:57" pos:end="57:57"><literal type="number" pos:start="57:57" pos:end="57:57">1</literal></expr>]</index></name><operator pos:start="57:59" pos:end="57:60">-&gt;</operator><name pos:start="57:61" pos:end="57:75"><name pos:start="57:61" pos:end="57:65">codec</name><operator pos:start="57:66" pos:end="57:67">-&gt;</operator><name pos:start="57:68" pos:end="57:75">channels</name></name> <operator pos:start="57:77" pos:end="57:77">*</operator> <name pos:start="57:79" pos:end="57:91"><name pos:start="57:79" pos:end="57:79">s</name><operator pos:start="57:80" pos:end="57:81">-&gt;</operator><name pos:start="57:82" pos:end="57:88">streams</name><index pos:start="57:89" pos:end="57:91">[<expr pos:start="57:90" pos:end="57:90"><literal type="number" pos:start="57:90" pos:end="57:90">1</literal></expr>]</index></name><operator pos:start="57:92" pos:end="57:93">-&gt;</operator><name pos:start="57:94" pos:end="57:111"><name pos:start="57:94" pos:end="57:98">codec</name><operator pos:start="57:99" pos:end="57:100">-&gt;</operator><name pos:start="57:101" pos:end="57:111">sample_rate</name></name> <operator pos:start="57:113" pos:end="57:113">*</operator> <name pos:start="57:115" pos:end="57:127"><name pos:start="57:115" pos:end="57:115">s</name><operator pos:start="57:116" pos:end="57:117">-&gt;</operator><name pos:start="57:118" pos:end="57:124">streams</name><index pos:start="57:125" pos:end="57:127">[<expr pos:start="57:126" pos:end="57:126"><literal type="number" pos:start="57:126" pos:end="57:126">1</literal></expr>]</index></name><operator pos:start="57:128" pos:end="57:129">-&gt;</operator><name pos:start="57:130" pos:end="57:157"><name pos:start="57:130" pos:end="57:134">codec</name><operator pos:start="57:135" pos:end="57:136">-&gt;</operator><name pos:start="57:137" pos:end="57:157">bits_per_coded_sample</name></name></expr>;</expr_stmt>

        <case pos:start="59:9" pos:end="59:25">case <expr pos:start="59:14" pos:end="59:24"><name pos:start="59:14" pos:end="59:24">AUDIO_BLOCK</name></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:41"><expr pos:start="61:13" pos:end="61:40"><name pos:start="61:13" pos:end="61:24">audio_length</name> <operator pos:start="61:26" pos:end="61:26">=</operator> <call pos:start="61:28" pos:end="61:40"><name pos:start="61:28" pos:end="61:36">avio_rl16</name><argument_list pos:start="61:37" pos:end="61:40">(<argument pos:start="61:38" pos:end="61:39"><expr pos:start="61:38" pos:end="61:39"><name pos:start="61:38" pos:end="61:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:61"><expr pos:start="63:13" pos:end="63:60"><name pos:start="63:13" pos:end="63:21">ret_value</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <call pos:start="63:25" pos:end="63:60"><name pos:start="63:25" pos:end="63:37">av_get_packet</name><argument_list pos:start="63:38" pos:end="63:60">(<argument pos:start="63:39" pos:end="63:40"><expr pos:start="63:39" pos:end="63:40"><name pos:start="63:39" pos:end="63:40">pb</name></expr></argument>, <argument pos:start="63:43" pos:end="63:45"><expr pos:start="63:43" pos:end="63:45"><name pos:start="63:43" pos:end="63:45">pkt</name></expr></argument>, <argument pos:start="63:48" pos:end="63:59"><expr pos:start="63:48" pos:end="63:59"><name pos:start="63:48" pos:end="63:59">audio_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:34"><expr pos:start="65:13" pos:end="65:33"><name pos:start="65:13" pos:end="65:29"><name pos:start="65:13" pos:end="65:15">pkt</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:29">stream_index</name></name> <operator pos:start="65:31" pos:end="65:31">=</operator> <literal type="number" pos:start="65:33" pos:end="65:33">1</literal></expr>;</expr_stmt>

            <return pos:start="67:13" pos:end="67:72">return <expr pos:start="67:20" pos:end="67:71"><ternary pos:start="67:20" pos:end="67:71"><condition pos:start="67:20" pos:end="67:46"><expr pos:start="67:20" pos:end="67:44"><name pos:start="67:20" pos:end="67:28">ret_value</name> <operator pos:start="67:30" pos:end="67:31">!=</operator> <name pos:start="67:33" pos:end="67:44">audio_length</name></expr> ?</condition><then pos:start="67:48" pos:end="67:59"> <expr pos:start="67:48" pos:end="67:59"><call pos:start="67:48" pos:end="67:59"><name pos:start="67:48" pos:end="67:54">AVERROR</name><argument_list pos:start="67:55" pos:end="67:59">(<argument pos:start="67:56" pos:end="67:58"><expr pos:start="67:56" pos:end="67:58"><name pos:start="67:56" pos:end="67:58">EIO</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="67:61" pos:end="67:71">: <expr pos:start="67:63" pos:end="67:71"><name pos:start="67:63" pos:end="67:71">ret_value</name></expr></else></ternary></expr>;</return>



        <case pos:start="71:9" pos:end="71:27">case <expr pos:start="71:14" pos:end="71:26"><name pos:start="71:14" pos:end="71:26">VIDEO_P_FRAME</name></expr>:</case>

        <case pos:start="73:9" pos:end="73:32">case <expr pos:start="73:14" pos:end="73:31"><name pos:start="73:14" pos:end="73:31">VIDEO_YOFF_P_FRAME</name></expr>:</case>

        <case pos:start="75:9" pos:end="75:27">case <expr pos:start="75:14" pos:end="75:26"><name pos:start="75:14" pos:end="75:26">VIDEO_I_FRAME</name></expr>:</case>

            <return pos:start="77:13" pos:end="79:90">return <expr pos:start="77:20" pos:end="79:89"><call pos:start="77:20" pos:end="79:89"><name pos:start="77:20" pos:end="77:29">read_frame</name><argument_list pos:start="77:30" pos:end="79:89">(<argument pos:start="77:31" pos:end="77:33"><expr pos:start="77:31" pos:end="77:33"><name pos:start="77:31" pos:end="77:33">vid</name></expr></argument>, <argument pos:start="77:36" pos:end="77:37"><expr pos:start="77:36" pos:end="77:37"><name pos:start="77:36" pos:end="77:37">pb</name></expr></argument>, <argument pos:start="77:40" pos:end="77:42"><expr pos:start="77:40" pos:end="77:42"><name pos:start="77:40" pos:end="77:42">pkt</name></expr></argument>, <argument pos:start="77:45" pos:end="77:54"><expr pos:start="77:45" pos:end="77:54"><name pos:start="77:45" pos:end="77:54">block_type</name></expr></argument>, <argument pos:start="77:57" pos:end="77:57"><expr pos:start="77:57" pos:end="77:57"><name pos:start="77:57" pos:end="77:57">s</name></expr></argument>,

                              <argument pos:start="79:31" pos:end="79:88"><expr pos:start="79:31" pos:end="79:88"><name pos:start="79:31" pos:end="79:43"><name pos:start="79:31" pos:end="79:31">s</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:40">streams</name><index pos:start="79:41" pos:end="79:43">[<expr pos:start="79:42" pos:end="79:42"><literal type="number" pos:start="79:42" pos:end="79:42">0</literal></expr>]</index></name><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:57"><name pos:start="79:46" pos:end="79:50">codec</name><operator pos:start="79:51" pos:end="79:52">-&gt;</operator><name pos:start="79:53" pos:end="79:57">width</name></name> <operator pos:start="79:59" pos:end="79:59">*</operator> <name pos:start="79:61" pos:end="79:73"><name pos:start="79:61" pos:end="79:61">s</name><operator pos:start="79:62" pos:end="79:63">-&gt;</operator><name pos:start="79:64" pos:end="79:70">streams</name><index pos:start="79:71" pos:end="79:73">[<expr pos:start="79:72" pos:end="79:72"><literal type="number" pos:start="79:72" pos:end="79:72">0</literal></expr>]</index></name><operator pos:start="79:74" pos:end="79:75">-&gt;</operator><name pos:start="79:76" pos:end="79:88"><name pos:start="79:76" pos:end="79:80">codec</name><operator pos:start="79:81" pos:end="79:82">-&gt;</operator><name pos:start="79:83" pos:end="79:88">height</name></name></expr></argument>)</argument_list></call></expr>;</return>



        <case pos:start="83:9" pos:end="83:23">case <expr pos:start="83:14" pos:end="83:22"><name pos:start="83:14" pos:end="83:22">EOF_BLOCK</name></expr>:</case>

            <if_stmt pos:start="85:13" pos:end="87:102"><if pos:start="85:13" pos:end="87:102">if<condition pos:start="85:15" pos:end="85:33">(<expr pos:start="85:16" pos:end="85:32"><name pos:start="85:16" pos:end="85:27"><name pos:start="85:16" pos:end="85:18">vid</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:27">nframes</name></name> <operator pos:start="85:29" pos:end="85:30">!=</operator> <literal type="number" pos:start="85:32" pos:end="85:32">0</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:102"><block_content pos:start="87:17" pos:end="87:102">

                <expr_stmt pos:start="87:17" pos:end="87:102"><expr pos:start="87:17" pos:end="87:101"><call pos:start="87:17" pos:end="87:101"><name pos:start="87:17" pos:end="87:22">av_log</name><argument_list pos:start="87:23" pos:end="87:101">(<argument pos:start="87:24" pos:end="87:24"><expr pos:start="87:24" pos:end="87:24"><name pos:start="87:24" pos:end="87:24">s</name></expr></argument>, <argument pos:start="87:27" pos:end="87:40"><expr pos:start="87:27" pos:end="87:40"><name pos:start="87:27" pos:end="87:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="87:43" pos:end="87:100"><expr pos:start="87:43" pos:end="87:100"><literal type="string" pos:start="87:43" pos:end="87:100">"reached terminating character but not all frames read.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:33"><expr pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:28"><name pos:start="89:13" pos:end="89:15">vid</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:28">is_finished</name></name> <operator pos:start="89:30" pos:end="89:30">=</operator> <literal type="number" pos:start="89:32" pos:end="89:32">1</literal></expr>;</expr_stmt>

            <return pos:start="91:13" pos:end="91:32">return <expr pos:start="91:20" pos:end="91:31"><call pos:start="91:20" pos:end="91:31"><name pos:start="91:20" pos:end="91:26">AVERROR</name><argument_list pos:start="91:27" pos:end="91:31">(<argument pos:start="91:28" pos:end="91:30"><expr pos:start="91:28" pos:end="91:30"><name pos:start="91:28" pos:end="91:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

        <default pos:start="93:9" pos:end="93:16">default:</default>

            <expr_stmt pos:start="95:13" pos:end="97:55"><expr pos:start="95:13" pos:end="97:54"><call pos:start="95:13" pos:end="97:54"><name pos:start="95:13" pos:end="95:18">av_log</name><argument_list pos:start="95:19" pos:end="97:54">(<argument pos:start="95:20" pos:end="95:20"><expr pos:start="95:20" pos:end="95:20"><name pos:start="95:20" pos:end="95:20">s</name></expr></argument>, <argument pos:start="95:23" pos:end="95:34"><expr pos:start="95:23" pos:end="95:34"><name pos:start="95:23" pos:end="95:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:37" pos:end="95:97"><expr pos:start="95:37" pos:end="95:97"><literal type="string" pos:start="95:37" pos:end="95:97">"unknown block (character = %c, decimal = %d, hex = %x)!!!\n"</literal></expr></argument>,

                   <argument pos:start="97:20" pos:end="97:29"><expr pos:start="97:20" pos:end="97:29"><name pos:start="97:20" pos:end="97:29">block_type</name></expr></argument>, <argument pos:start="97:32" pos:end="97:41"><expr pos:start="97:32" pos:end="97:41"><name pos:start="97:32" pos:end="97:41">block_type</name></expr></argument>, <argument pos:start="97:44" pos:end="97:53"><expr pos:start="97:44" pos:end="97:53"><name pos:start="97:44" pos:end="97:53">block_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <return pos:start="97:57" pos:end="97:66">return <expr pos:start="97:64" pos:end="97:65"><operator pos:start="97:64" pos:end="97:64">-</operator><literal type="number" pos:start="97:65" pos:end="97:65">1</literal></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
