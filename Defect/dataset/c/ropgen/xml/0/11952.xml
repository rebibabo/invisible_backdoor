<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11952.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">virtqueue_map_sg</name><parameter_list pos:start="1:22" pos:end="3:32">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:34"><name pos:start="1:23" pos:end="1:28">struct</name> <name pos:start="1:30" pos:end="1:34">iovec</name></name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">sg</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:46">hwaddr</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">addr</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:17"><decl pos:start="3:5" pos:end="3:17"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:10">size_t</name></type> <name pos:start="3:12" pos:end="3:17">num_sg</name></decl></parameter>, <parameter pos:start="3:20" pos:end="3:31"><decl pos:start="3:20" pos:end="3:31"><type pos:start="3:20" pos:end="3:31"><name pos:start="3:20" pos:end="3:22">int</name></type> <name pos:start="3:24" pos:end="3:31">is_write</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:5">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">hwaddr</name></type> <name pos:start="9:12" pos:end="9:14">len</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:37">(<expr pos:start="13:9" pos:end="13:36"><name pos:start="13:9" pos:end="13:14">num_sg</name> <operator pos:start="13:16" pos:end="13:17">&gt;=</operator> <name pos:start="13:19" pos:end="13:36">VIRTQUEUE_MAX_SIZE</name></expr>)</condition> <block pos:start="13:39" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:16">

        <expr_stmt pos:start="15:9" pos:end="17:49"><expr pos:start="15:9" pos:end="17:48"><call pos:start="15:9" pos:end="17:48"><name pos:start="15:9" pos:end="15:20">error_report</name><argument_list pos:start="15:21" pos:end="17:48">(<argument pos:start="15:22" pos:end="15:66"><expr pos:start="15:22" pos:end="15:66"><literal type="string" pos:start="15:22" pos:end="15:66">"virtio: map attempt out of bounds: %zd &gt; %d"</literal></expr></argument>,

                     <argument pos:start="17:22" pos:end="17:27"><expr pos:start="17:22" pos:end="17:27"><name pos:start="17:22" pos:end="17:27">num_sg</name></expr></argument>, <argument pos:start="17:30" pos:end="17:47"><expr pos:start="17:30" pos:end="17:47"><name pos:start="17:30" pos:end="17:47">VIRTQUEUE_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:16"><expr pos:start="19:9" pos:end="19:15"><call pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:12">exit</name><argument_list pos:start="19:13" pos:end="19:15">(<argument pos:start="19:14" pos:end="19:14"><expr pos:start="19:14" pos:end="19:14"><literal type="number" pos:start="19:14" pos:end="19:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="25:5" pos:end="39:5">for <control pos:start="25:9" pos:end="25:32">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:27"><expr pos:start="25:17" pos:end="25:26"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:26">num_sg</name></expr>;</condition> <incr pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:29">i</name><operator pos:start="25:30" pos:end="25:31">++</operator></expr></incr>)</control> <block pos:start="25:34" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:9">

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:11">len</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:19"><name pos:start="27:15" pos:end="27:16">sg</name><index pos:start="27:17" pos:end="27:19">[<expr pos:start="27:18" pos:end="27:18"><name pos:start="27:18" pos:end="27:18">i</name></expr>]</index></name><operator pos:start="27:20" pos:end="27:20">.</operator><name pos:start="27:21" pos:end="27:27">iov_len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:74"><expr pos:start="29:9" pos:end="29:73"><name pos:start="29:9" pos:end="29:13"><name pos:start="29:9" pos:end="29:10">sg</name><index pos:start="29:11" pos:end="29:13">[<expr pos:start="29:12" pos:end="29:12"><name pos:start="29:12" pos:end="29:12">i</name></expr>]</index></name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:22">iov_base</name> <operator pos:start="29:24" pos:end="29:24">=</operator> <call pos:start="29:26" pos:end="29:73"><name pos:start="29:26" pos:end="29:48">cpu_physical_memory_map</name><argument_list pos:start="29:49" pos:end="29:73">(<argument pos:start="29:50" pos:end="29:56"><expr pos:start="29:50" pos:end="29:56"><name pos:start="29:50" pos:end="29:56"><name pos:start="29:50" pos:end="29:53">addr</name><index pos:start="29:54" pos:end="29:56">[<expr pos:start="29:55" pos:end="29:55"><name pos:start="29:55" pos:end="29:55">i</name></expr>]</index></name></expr></argument>, <argument pos:start="29:59" pos:end="29:62"><expr pos:start="29:59" pos:end="29:62"><operator pos:start="29:59" pos:end="29:59">&amp;</operator><name pos:start="29:60" pos:end="29:62">len</name></expr></argument>, <argument pos:start="29:65" pos:end="29:72"><expr pos:start="29:65" pos:end="29:72"><name pos:start="29:65" pos:end="29:72">is_write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:59">(<expr pos:start="31:13" pos:end="31:58"><name pos:start="31:13" pos:end="31:17"><name pos:start="31:13" pos:end="31:14">sg</name><index pos:start="31:15" pos:end="31:17">[<expr pos:start="31:16" pos:end="31:16"><name pos:start="31:16" pos:end="31:16">i</name></expr>]</index></name><operator pos:start="31:18" pos:end="31:18">.</operator><name pos:start="31:19" pos:end="31:26">iov_base</name> <operator pos:start="31:28" pos:end="31:29">==</operator> <name pos:start="31:31" pos:end="31:34">NULL</name> <operator pos:start="31:36" pos:end="31:37">||</operator> <name pos:start="31:39" pos:end="31:41">len</name> <operator pos:start="31:43" pos:end="31:44">!=</operator> <name pos:start="31:46" pos:end="31:50"><name pos:start="31:46" pos:end="31:47">sg</name><index pos:start="31:48" pos:end="31:50">[<expr pos:start="31:49" pos:end="31:49"><name pos:start="31:49" pos:end="31:49">i</name></expr>]</index></name><operator pos:start="31:51" pos:end="31:51">.</operator><name pos:start="31:52" pos:end="31:58">iov_len</name></expr>)</condition> <block pos:start="31:61" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:20">

            <expr_stmt pos:start="33:13" pos:end="33:62"><expr pos:start="33:13" pos:end="33:61"><call pos:start="33:13" pos:end="33:61"><name pos:start="33:13" pos:end="33:24">error_report</name><argument_list pos:start="33:25" pos:end="33:61">(<argument pos:start="33:26" pos:end="33:60"><expr pos:start="33:26" pos:end="33:60"><literal type="string" pos:start="33:26" pos:end="33:60">"virtio: trying to map MMIO memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:20"><expr pos:start="35:13" pos:end="35:19"><call pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:16">exit</name><argument_list pos:start="35:17" pos:end="35:19">(<argument pos:start="35:18" pos:end="35:18"><expr pos:start="35:18" pos:end="35:18"><literal type="number" pos:start="35:18" pos:end="35:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
