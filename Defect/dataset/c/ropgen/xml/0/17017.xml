<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17017.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:8">main</name><parameter_list pos:start="1:9" pos:end="1:32">(<parameter pos:start="1:10" pos:end="1:17"><decl pos:start="1:10" pos:end="1:17"><type pos:start="1:10" pos:end="1:17"><name pos:start="1:10" pos:end="1:12">int</name></type> <name pos:start="1:14" pos:end="1:17">argc</name></decl></parameter>, <parameter pos:start="1:20" pos:end="1:31"><decl pos:start="1:20" pos:end="1:31"><type pos:start="1:20" pos:end="1:29"><name pos:start="1:20" pos:end="1:23">char</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:31"><name pos:start="1:26" pos:end="1:29">argv</name><index pos:start="1:30" pos:end="1:31">[]</index></name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:24">

    <decl_stmt pos:start="5:5" pos:end="5:77"><decl pos:start="5:5" pos:end="5:76"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:32"><name pos:start="5:17" pos:end="5:30">sparc_machines</name><index pos:start="5:31" pos:end="5:32">[]</index></name> <init pos:start="5:34" pos:end="5:76">= <expr pos:start="5:36" pos:end="5:76"><block pos:start="5:36" pos:end="5:76">{ <expr pos:start="5:38" pos:end="5:48"><literal type="string" pos:start="5:38" pos:end="5:48">"SPARCbook"</literal></expr>, <expr pos:start="5:51" pos:end="5:59"><literal type="string" pos:start="5:51" pos:end="5:59">"Voyager"</literal></expr>, <expr pos:start="5:62" pos:end="5:68"><literal type="string" pos:start="5:62" pos:end="5:68">"SS-20"</literal></expr>, <expr pos:start="5:71" pos:end="5:74"><name pos:start="5:71" pos:end="5:74">NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:63"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:34"><name pos:start="7:17" pos:end="7:32">sparc64_machines</name><index pos:start="7:33" pos:end="7:34">[]</index></name> <init pos:start="7:36" pos:end="7:63">= <expr pos:start="7:38" pos:end="7:63"><block pos:start="7:38" pos:end="7:63">{ <expr pos:start="7:40" pos:end="7:46"><literal type="string" pos:start="7:40" pos:end="7:46">"sun4u"</literal></expr>, <expr pos:start="7:49" pos:end="7:55"><literal type="string" pos:start="7:49" pos:end="7:55">"sun4v"</literal></expr>, <expr pos:start="7:58" pos:end="7:61"><name pos:start="7:58" pos:end="7:61">NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:62"><decl pos:start="9:5" pos:end="9:61"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:30"><name pos:start="9:17" pos:end="9:28">mac_machines</name><index pos:start="9:29" pos:end="9:30">[]</index></name> <init pos:start="9:32" pos:end="9:61">= <expr pos:start="9:34" pos:end="9:61"><block pos:start="9:34" pos:end="9:61">{ <expr pos:start="9:36" pos:end="9:42"><literal type="string" pos:start="9:36" pos:end="9:42">"mac99"</literal></expr>, <expr pos:start="9:45" pos:end="9:53"><literal type="string" pos:start="9:45" pos:end="9:53">"g3beige"</literal></expr>, <expr pos:start="9:56" pos:end="9:59"><name pos:start="9:56" pos:end="9:59">NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:20">arch</name> <init pos:start="11:22" pos:end="11:39">= <expr pos:start="11:24" pos:end="11:39"><call pos:start="11:24" pos:end="11:39"><name pos:start="11:24" pos:end="11:37">qtest_get_arch</name><argument_list pos:start="11:38" pos:end="11:39">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><call pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:15">g_test_init</name><argument_list pos:start="15:16" pos:end="15:35">(<argument pos:start="15:17" pos:end="15:21"><expr pos:start="15:17" pos:end="15:21"><operator pos:start="15:17" pos:end="15:17">&amp;</operator><name pos:start="15:18" pos:end="15:21">argc</name></expr></argument>, <argument pos:start="15:24" pos:end="15:28"><expr pos:start="15:24" pos:end="15:28"><operator pos:start="15:24" pos:end="15:24">&amp;</operator><name pos:start="15:25" pos:end="15:28">argv</name></expr></argument>, <argument pos:start="15:31" pos:end="15:34"><expr pos:start="15:31" pos:end="15:34"><name pos:start="15:31" pos:end="15:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="35:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:55">(<expr pos:start="19:9" pos:end="19:54"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:28"><name pos:start="19:10" pos:end="19:15">strcmp</name><argument_list pos:start="19:16" pos:end="19:28">(<argument pos:start="19:17" pos:end="19:20"><expr pos:start="19:17" pos:end="19:20"><name pos:start="19:17" pos:end="19:20">arch</name></expr></argument>, <argument pos:start="19:23" pos:end="19:27"><expr pos:start="19:23" pos:end="19:27"><literal type="string" pos:start="19:23" pos:end="19:27">"ppc"</literal></expr></argument>)</argument_list></call> <operator pos:start="19:30" pos:end="19:31">||</operator> <operator pos:start="19:33" pos:end="19:33">!</operator><call pos:start="19:34" pos:end="19:54"><name pos:start="19:34" pos:end="19:39">strcmp</name><argument_list pos:start="19:40" pos:end="19:54">(<argument pos:start="19:41" pos:end="19:44"><expr pos:start="19:41" pos:end="19:44"><name pos:start="19:41" pos:end="19:44">arch</name></expr></argument>, <argument pos:start="19:47" pos:end="19:53"><expr pos:start="19:47" pos:end="19:53"><literal type="string" pos:start="19:47" pos:end="19:53">"ppc64"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:57" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:32">

        <expr_stmt pos:start="21:9" pos:end="21:32"><expr pos:start="21:9" pos:end="21:31"><call pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:17">add_tests</name><argument_list pos:start="21:18" pos:end="21:31">(<argument pos:start="21:19" pos:end="21:30"><expr pos:start="21:19" pos:end="21:30"><name pos:start="21:19" pos:end="21:30">mac_machines</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="27:5">else if <condition pos:start="23:15" pos:end="23:38">(<expr pos:start="23:16" pos:end="23:37"><operator pos:start="23:16" pos:end="23:16">!</operator><call pos:start="23:17" pos:end="23:37"><name pos:start="23:17" pos:end="23:22">strcmp</name><argument_list pos:start="23:23" pos:end="23:37">(<argument pos:start="23:24" pos:end="23:27"><expr pos:start="23:24" pos:end="23:27"><name pos:start="23:24" pos:end="23:27">arch</name></expr></argument>, <argument pos:start="23:30" pos:end="23:36"><expr pos:start="23:30" pos:end="23:36"><literal type="string" pos:start="23:30" pos:end="23:36">"sparc"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:40" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:34">

        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><call pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:17">add_tests</name><argument_list pos:start="25:18" pos:end="25:33">(<argument pos:start="25:19" pos:end="25:32"><expr pos:start="25:19" pos:end="25:32"><name pos:start="25:19" pos:end="25:32">sparc_machines</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="27:7" pos:end="31:5">else if <condition pos:start="27:15" pos:end="27:40">(<expr pos:start="27:16" pos:end="27:39"><operator pos:start="27:16" pos:end="27:16">!</operator><call pos:start="27:17" pos:end="27:39"><name pos:start="27:17" pos:end="27:22">strcmp</name><argument_list pos:start="27:23" pos:end="27:39">(<argument pos:start="27:24" pos:end="27:27"><expr pos:start="27:24" pos:end="27:27"><name pos:start="27:24" pos:end="27:27">arch</name></expr></argument>, <argument pos:start="27:30" pos:end="27:38"><expr pos:start="27:30" pos:end="27:38"><literal type="string" pos:start="27:30" pos:end="27:38">"sparc64"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:42" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:36">

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><call pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:17">add_tests</name><argument_list pos:start="29:18" pos:end="29:35">(<argument pos:start="29:19" pos:end="29:34"><expr pos:start="29:19" pos:end="29:34"><name pos:start="29:19" pos:end="29:34">sparc64_machines</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="35:5">else <block pos:start="31:12" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:31">

        <expr_stmt pos:start="33:9" pos:end="33:31"><expr pos:start="33:9" pos:end="33:30"><call pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:28">g_assert_not_reached</name><argument_list pos:start="33:29" pos:end="33:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="39:5" pos:end="39:24">return <expr pos:start="39:12" pos:end="39:23"><call pos:start="39:12" pos:end="39:23"><name pos:start="39:12" pos:end="39:21">g_test_run</name><argument_list pos:start="39:22" pos:end="39:23">()</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
