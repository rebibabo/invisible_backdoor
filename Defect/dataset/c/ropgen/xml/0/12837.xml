<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12837.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:12">target_ulong</name></type> <name pos:start="1:14" pos:end="1:28">helper_rdhwr_cc</name><parameter_list pos:start="1:29" pos:end="1:47">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:41">CPUMIPSState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:13">

    <if_stmt pos:start="5:5" pos:end="23:5"><if pos:start="5:5" pos:end="19:5">if <condition pos:start="5:8" pos:end="7:37">(<expr pos:start="5:9" pos:end="7:36"><operator pos:start="5:9" pos:end="5:9">(</operator><name pos:start="5:10" pos:end="5:20"><name pos:start="5:10" pos:end="5:12">env</name><operator pos:start="5:13" pos:end="5:14">-&gt;</operator><name pos:start="5:15" pos:end="5:20">hflags</name></name> <operator pos:start="5:22" pos:end="5:22">&amp;</operator> <name pos:start="5:24" pos:end="5:37">MIPS_HFLAG_CP0</name><operator pos:start="5:38" pos:end="5:38">)</operator> <operator pos:start="5:40" pos:end="5:41">||</operator>

        <operator pos:start="7:9" pos:end="7:9">(</operator><name pos:start="7:10" pos:end="7:24"><name pos:start="7:10" pos:end="7:12">env</name><operator pos:start="7:13" pos:end="7:14">-&gt;</operator><name pos:start="7:15" pos:end="7:24">CP0_HWREna</name></name> <operator pos:start="7:26" pos:end="7:26">&amp;</operator> <operator pos:start="7:28" pos:end="7:28">(</operator><literal type="number" pos:start="7:29" pos:end="7:29">1</literal> <operator pos:start="7:31" pos:end="7:32">&lt;&lt;</operator> <literal type="number" pos:start="7:34" pos:end="7:34">2</literal><operator pos:start="7:35" pos:end="7:35">)</operator><operator pos:start="7:36" pos:end="7:36">)</operator></expr>)</condition> <block pos:start="7:39" pos:end="19:5">{<block_content pos:start="11:9" pos:end="18:0">

<cpp:ifdef pos:start="9:1" pos:end="9:23">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:23">CONFIG_USER_ONLY</name></cpp:ifdef>

        <return pos:start="11:9" pos:end="14:0">return <expr pos:start="11:16" pos:end="11:29"><name pos:start="11:16" pos:end="11:29"><name pos:start="11:16" pos:end="11:18">env</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:29">CP0_Count</name></name></expr>;</return>

<cpp:else pos:start="13:1" pos:end="13:5">#<cpp:directive pos:start="13:2" pos:end="13:5">else</cpp:directive></cpp:else>

        <return pos:start="15:9" pos:end="18:0">return <expr pos:start="15:16" pos:end="15:47"><operator pos:start="15:16" pos:end="15:16">(</operator><name pos:start="15:17" pos:end="15:23">int32_t</name><operator pos:start="15:24" pos:end="15:24">)</operator><call pos:start="15:25" pos:end="15:47"><name pos:start="15:25" pos:end="15:42">cpu_mips_get_count</name><argument_list pos:start="15:43" pos:end="15:47">(<argument pos:start="15:44" pos:end="15:46"><expr pos:start="15:44" pos:end="15:46"><name pos:start="15:44" pos:end="15:46">env</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="23:5">else <block pos:start="19:12" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:50">

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><call pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:26">do_raise_exception</name><argument_list pos:start="21:27" pos:end="21:49">(<argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">env</name></expr></argument>, <argument pos:start="21:33" pos:end="21:39"><expr pos:start="21:33" pos:end="21:39"><name pos:start="21:33" pos:end="21:39">EXCP_RI</name></expr></argument>, <argument pos:start="21:42" pos:end="21:48"><expr pos:start="21:42" pos:end="21:48"><call pos:start="21:42" pos:end="21:48"><name pos:start="21:42" pos:end="21:46">GETPC</name><argument_list pos:start="21:47" pos:end="21:48">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
