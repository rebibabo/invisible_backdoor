<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10331.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">vmsvga_init</name><parameter_list pos:start="1:24" pos:end="3:70">(<parameter pos:start="1:25" pos:end="1:48"><decl pos:start="1:25" pos:end="1:48"><type pos:start="1:25" pos:end="1:48"><name pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:30">struct</name> <name pos:start="1:32" pos:end="1:45">vmsvga_state_s</name></name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:51"><decl pos:start="3:25" pos:end="3:51"><type pos:start="3:25" pos:end="3:51"><name pos:start="3:25" pos:end="3:36">MemoryRegion</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:51">address_space</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:69"><decl pos:start="3:54" pos:end="3:69"><type pos:start="3:54" pos:end="3:69"><name pos:start="3:54" pos:end="3:65">MemoryRegion</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:69">io</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:22">

    <expr_stmt pos:start="7:5" pos:end="7:40"><expr pos:start="7:5" pos:end="7:39"><name pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:5">s</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:19">scratch_size</name></name> <operator pos:start="7:21" pos:end="7:21">=</operator> <name pos:start="7:23" pos:end="7:39">SVGA_SCRATCH_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:47"><expr pos:start="9:5" pos:end="9:46"><name pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:14">scratch</name></name> <operator pos:start="9:16" pos:end="9:16">=</operator> <call pos:start="9:18" pos:end="9:46"><name pos:start="9:18" pos:end="9:25">g_malloc</name><argument_list pos:start="9:26" pos:end="9:46">(<argument pos:start="9:27" pos:end="9:45"><expr pos:start="9:27" pos:end="9:45"><name pos:start="9:27" pos:end="9:41"><name pos:start="9:27" pos:end="9:27">s</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:41">scratch_size</name></name> <operator pos:start="9:43" pos:end="9:43">*</operator> <literal type="number" pos:start="9:45" pos:end="9:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="19:61"><expr pos:start="13:5" pos:end="19:60"><name pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:10">vga</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:14">con</name></name> <operator pos:start="13:16" pos:end="13:16">=</operator> <call pos:start="13:18" pos:end="19:60"><name pos:start="13:18" pos:end="13:37">graphic_console_init</name><argument_list pos:start="13:38" pos:end="19:60">(<argument pos:start="13:39" pos:end="13:59"><expr pos:start="13:39" pos:end="13:59"><name pos:start="13:39" pos:end="13:59">vmsvga_update_display</name></expr></argument>,

                                      <argument pos:start="15:39" pos:end="15:63"><expr pos:start="15:39" pos:end="15:63"><name pos:start="15:39" pos:end="15:63">vmsvga_invalidate_display</name></expr></argument>,

                                      <argument pos:start="17:39" pos:end="17:56"><expr pos:start="17:39" pos:end="17:56"><name pos:start="17:39" pos:end="17:56">vmsvga_screen_dump</name></expr></argument>,

                                      <argument pos:start="19:39" pos:end="19:56"><expr pos:start="19:39" pos:end="19:56"><name pos:start="19:39" pos:end="19:56">vmsvga_text_update</name></expr></argument>, <argument pos:start="19:59" pos:end="19:59"><expr pos:start="19:59" pos:end="19:59"><name pos:start="19:59" pos:end="19:59">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:16">fifo_size</name></name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:33">SVGA_FIFO_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:70"><expr pos:start="25:5" pos:end="25:69"><call pos:start="25:5" pos:end="25:69"><name pos:start="25:5" pos:end="25:26">memory_region_init_ram</name><argument_list pos:start="25:27" pos:end="25:69">(<argument pos:start="25:28" pos:end="25:39"><expr pos:start="25:28" pos:end="25:39"><operator pos:start="25:28" pos:end="25:28">&amp;</operator><name pos:start="25:29" pos:end="25:39"><name pos:start="25:29" pos:end="25:29">s</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:39">fifo_ram</name></name></expr></argument>, <argument pos:start="25:42" pos:end="25:54"><expr pos:start="25:42" pos:end="25:54"><literal type="string" pos:start="25:42" pos:end="25:54">"vmsvga.fifo"</literal></expr></argument>, <argument pos:start="25:57" pos:end="25:68"><expr pos:start="25:57" pos:end="25:68"><name pos:start="25:57" pos:end="25:68"><name pos:start="25:57" pos:end="25:57">s</name><operator pos:start="25:58" pos:end="25:59">-&gt;</operator><name pos:start="25:60" pos:end="25:68">fifo_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><call pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:31">vmstate_register_ram_global</name><argument_list pos:start="27:32" pos:end="27:45">(<argument pos:start="27:33" pos:end="27:44"><expr pos:start="27:33" pos:end="27:44"><operator pos:start="27:33" pos:end="27:33">&amp;</operator><name pos:start="27:34" pos:end="27:44"><name pos:start="27:34" pos:end="27:34">s</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:44">fifo_ram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:58"><expr pos:start="29:5" pos:end="29:57"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:15">fifo_ptr</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:57"><name pos:start="29:19" pos:end="29:43">memory_region_get_ram_ptr</name><argument_list pos:start="29:44" pos:end="29:57">(<argument pos:start="29:45" pos:end="29:56"><expr pos:start="29:45" pos:end="29:56"><operator pos:start="29:45" pos:end="29:45">&amp;</operator><name pos:start="29:46" pos:end="29:56"><name pos:start="29:46" pos:end="29:46">s</name><operator pos:start="29:47" pos:end="29:48">-&gt;</operator><name pos:start="29:49" pos:end="29:56">fifo_ram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><call pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:19">vga_common_init</name><argument_list pos:start="33:20" pos:end="33:28">(<argument pos:start="33:21" pos:end="33:27"><expr pos:start="33:21" pos:end="33:27"><operator pos:start="33:21" pos:end="33:21">&amp;</operator><name pos:start="33:22" pos:end="33:27"><name pos:start="33:22" pos:end="33:22">s</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:27">vga</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:47"><expr pos:start="35:5" pos:end="35:46"><call pos:start="35:5" pos:end="35:46"><name pos:start="35:5" pos:end="35:12">vga_init</name><argument_list pos:start="35:13" pos:end="35:46">(<argument pos:start="35:14" pos:end="35:20"><expr pos:start="35:14" pos:end="35:20"><operator pos:start="35:14" pos:end="35:14">&amp;</operator><name pos:start="35:15" pos:end="35:20"><name pos:start="35:15" pos:end="35:15">s</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:20">vga</name></name></expr></argument>, <argument pos:start="35:23" pos:end="35:35"><expr pos:start="35:23" pos:end="35:35"><name pos:start="35:23" pos:end="35:35">address_space</name></expr></argument>, <argument pos:start="35:38" pos:end="35:39"><expr pos:start="35:38" pos:end="35:39"><name pos:start="35:38" pos:end="35:39">io</name></expr></argument>, <argument pos:start="35:42" pos:end="35:45"><expr pos:start="35:42" pos:end="35:45"><name pos:start="35:42" pos:end="35:45">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:60"><expr pos:start="37:5" pos:end="37:59"><call pos:start="37:5" pos:end="37:59"><name pos:start="37:5" pos:end="37:20">vmstate_register</name><argument_list pos:start="37:21" pos:end="37:59">(<argument pos:start="37:22" pos:end="37:25"><expr pos:start="37:22" pos:end="37:25"><name pos:start="37:22" pos:end="37:25">NULL</name></expr></argument>, <argument pos:start="37:28" pos:end="37:28"><expr pos:start="37:28" pos:end="37:28"><literal type="number" pos:start="37:28" pos:end="37:28">0</literal></expr></argument>, <argument pos:start="37:31" pos:end="37:49"><expr pos:start="37:31" pos:end="37:49"><operator pos:start="37:31" pos:end="37:31">&amp;</operator><name pos:start="37:32" pos:end="37:49">vmstate_vga_common</name></expr></argument>, <argument pos:start="37:52" pos:end="37:58"><expr pos:start="37:52" pos:end="37:58"><operator pos:start="37:52" pos:end="37:52">&amp;</operator><name pos:start="37:53" pos:end="37:58"><name pos:start="37:53" pos:end="37:53">s</name><operator pos:start="37:54" pos:end="37:55">-&gt;</operator><name pos:start="37:56" pos:end="37:58">vga</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:22"><expr pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:16">new_depth</name></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <literal type="number" pos:start="39:20" pos:end="39:21">32</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
