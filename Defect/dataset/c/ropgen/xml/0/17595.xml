<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17595.c" pos:tabs="8"><function pos:start="1:1" pos:end="359:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">versatile_init</name><parameter_list pos:start="1:27" pos:end="1:63">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:48"><name pos:start="1:28" pos:end="1:39">MachineState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:48">machine</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:62">board_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="359:1">{<block_content pos:start="5:5" pos:end="357:43">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">ARMCPU</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MemoryRegion</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:24">sysmem</name> <init pos:start="7:26" pos:end="7:46">= <expr pos:start="7:28" pos:end="7:46"><call pos:start="7:28" pos:end="7:46"><name pos:start="7:28" pos:end="7:44">get_system_memory</name><argument_list pos:start="7:45" pos:end="7:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">MemoryRegion</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">ram</name> <init pos:start="9:23" pos:end="9:46">= <expr pos:start="9:25" pos:end="9:46"><call pos:start="9:25" pos:end="9:46"><name pos:start="9:25" pos:end="9:29">g_new</name><argument_list pos:start="9:30" pos:end="9:46">(<argument pos:start="9:31" pos:end="9:42"><expr pos:start="9:31" pos:end="9:42"><name pos:start="9:31" pos:end="9:42">MemoryRegion</name></expr></argument>, <argument pos:start="9:45" pos:end="9:45"><expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">qemu_irq</name></type> <name pos:start="11:14" pos:end="11:20"><name pos:start="11:14" pos:end="11:16">pic</name><index pos:start="11:17" pos:end="11:20">[<expr pos:start="11:18" pos:end="11:19"><literal type="number" pos:start="11:18" pos:end="11:19">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">qemu_irq</name></type> <name pos:start="13:14" pos:end="13:20"><name pos:start="13:14" pos:end="13:16">sic</name><index pos:start="13:17" pos:end="13:20">[<expr pos:start="13:18" pos:end="13:19"><literal type="number" pos:start="13:18" pos:end="13:19">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:15">DeviceState</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:20">dev</name></decl>, <decl pos:start="15:23" pos:end="15:29"><type ref="prev" pos:start="15:5" pos:end="15:17"><modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:29">sysctl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:16">SysBusDevice</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:24">busdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:15">DeviceState</name> <modifier pos:start="19:17" pos:end="19:17">*</modifier></type><name pos:start="19:18" pos:end="19:22">pl041</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:10">PCIBus</name> <modifier pos:start="21:12" pos:end="21:12">*</modifier></type><name pos:start="21:13" pos:end="21:19">pci_bus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:16"><decl pos:start="23:5" pos:end="23:15"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11">NICInfo</name> <modifier pos:start="23:13" pos:end="23:13">*</modifier></type><name pos:start="23:14" pos:end="23:15">nd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:16"><decl pos:start="25:5" pos:end="25:15"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:10">I2CBus</name> <modifier pos:start="25:12" pos:end="25:12">*</modifier></type><name pos:start="25:13" pos:end="25:15">i2c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:10"><decl pos:start="27:5" pos:end="27:9"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:9">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:21"><decl pos:start="29:5" pos:end="29:20"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:16">done_smc</name> <init pos:start="29:18" pos:end="29:20">= <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:21"><decl pos:start="31:5" pos:end="31:20"><type pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:13">DriveInfo</name> <modifier pos:start="31:15" pos:end="31:15">*</modifier></type><name pos:start="31:16" pos:end="31:20">dinfo</name></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:28">(<expr pos:start="35:9" pos:end="35:27"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:27"><name pos:start="35:10" pos:end="35:16">machine</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:27">cpu_model</name></name></expr>)</condition> <block pos:start="35:30" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:38">

        <expr_stmt pos:start="37:9" pos:end="37:38"><expr pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:15">machine</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:26">cpu_model</name></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <literal type="string" pos:start="37:30" pos:end="37:37">"arm926"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:43"><expr pos:start="41:5" pos:end="41:42"><name pos:start="41:5" pos:end="41:7">cpu</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:42"><name pos:start="41:11" pos:end="41:22">cpu_arm_init</name><argument_list pos:start="41:23" pos:end="41:42">(<argument pos:start="41:24" pos:end="41:41"><expr pos:start="41:24" pos:end="41:41"><name pos:start="41:24" pos:end="41:41"><name pos:start="41:24" pos:end="41:30">machine</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:41">cpu_model</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:13">(<expr pos:start="43:9" pos:end="43:12"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:12">cpu</name></expr>)</condition> <block pos:start="43:15" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:16">

        <expr_stmt pos:start="45:9" pos:end="45:59"><expr pos:start="45:9" pos:end="45:58"><call pos:start="45:9" pos:end="45:58"><name pos:start="45:9" pos:end="45:15">fprintf</name><argument_list pos:start="45:16" pos:end="45:58">(<argument pos:start="45:17" pos:end="45:22"><expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:22">stderr</name></expr></argument>, <argument pos:start="45:25" pos:end="45:57"><expr pos:start="45:25" pos:end="45:57"><literal type="string" pos:start="45:25" pos:end="45:57">"Unable to find CPU definition\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:16"><expr pos:start="47:9" pos:end="47:15"><call pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:12">exit</name><argument_list pos:start="47:13" pos:end="47:15">(<argument pos:start="47:14" pos:end="47:14"><expr pos:start="47:14" pos:end="47:14"><literal type="number" pos:start="47:14" pos:end="47:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="53:41"><expr pos:start="51:5" pos:end="53:40"><call pos:start="51:5" pos:end="53:40"><name pos:start="51:5" pos:end="51:26">memory_region_init_ram</name><argument_list pos:start="51:27" pos:end="53:40">(<argument pos:start="51:28" pos:end="51:30"><expr pos:start="51:28" pos:end="51:30"><name pos:start="51:28" pos:end="51:30">ram</name></expr></argument>, <argument pos:start="51:33" pos:end="51:36"><expr pos:start="51:33" pos:end="51:36"><name pos:start="51:33" pos:end="51:36">NULL</name></expr></argument>, <argument pos:start="51:39" pos:end="51:53"><expr pos:start="51:39" pos:end="51:53"><literal type="string" pos:start="51:39" pos:end="51:53">"versatile.ram"</literal></expr></argument>, <argument pos:start="51:56" pos:end="51:72"><expr pos:start="51:56" pos:end="51:72"><name pos:start="51:56" pos:end="51:72"><name pos:start="51:56" pos:end="51:62">machine</name><operator pos:start="51:63" pos:end="51:64">-&gt;</operator><name pos:start="51:65" pos:end="51:72">ram_size</name></name></expr></argument>,

                           <argument pos:start="53:28" pos:end="53:39"><expr pos:start="53:28" pos:end="53:39"><operator pos:start="53:28" pos:end="53:28">&amp;</operator><name pos:start="53:29" pos:end="53:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:37"><expr pos:start="55:5" pos:end="55:36"><call pos:start="55:5" pos:end="55:36"><name pos:start="55:5" pos:end="55:31">vmstate_register_ram_global</name><argument_list pos:start="55:32" pos:end="55:36">(<argument pos:start="55:33" pos:end="55:35"><expr pos:start="55:33" pos:end="55:35"><name pos:start="55:33" pos:end="55:35">ram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="57:5" pos:end="57:63">/* ??? RAM should repeat to fill physical memory space.  */</comment>

    <comment type="block" pos:start="59:5" pos:end="59:33">/* SDRAM at address zero.  */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:48"><expr pos:start="61:5" pos:end="61:47"><call pos:start="61:5" pos:end="61:47"><name pos:start="61:5" pos:end="61:31">memory_region_add_subregion</name><argument_list pos:start="61:32" pos:end="61:47">(<argument pos:start="61:33" pos:end="61:38"><expr pos:start="61:33" pos:end="61:38"><name pos:start="61:33" pos:end="61:38">sysmem</name></expr></argument>, <argument pos:start="61:41" pos:end="61:41"><expr pos:start="61:41" pos:end="61:41"><literal type="number" pos:start="61:41" pos:end="61:41">0</literal></expr></argument>, <argument pos:start="61:44" pos:end="61:46"><expr pos:start="61:44" pos:end="61:46"><name pos:start="61:44" pos:end="61:46">ram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:50"><expr pos:start="65:5" pos:end="65:49"><name pos:start="65:5" pos:end="65:10">sysctl</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <call pos:start="65:14" pos:end="65:49"><name pos:start="65:14" pos:end="65:24">qdev_create</name><argument_list pos:start="65:25" pos:end="65:49">(<argument pos:start="65:26" pos:end="65:29"><expr pos:start="65:26" pos:end="65:29"><name pos:start="65:26" pos:end="65:29">NULL</name></expr></argument>, <argument pos:start="65:32" pos:end="65:48"><expr pos:start="65:32" pos:end="65:48"><literal type="string" pos:start="65:32" pos:end="65:48">"realview_sysctl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:55"><expr pos:start="67:5" pos:end="67:54"><call pos:start="67:5" pos:end="67:54"><name pos:start="67:5" pos:end="67:24">qdev_prop_set_uint32</name><argument_list pos:start="67:25" pos:end="67:54">(<argument pos:start="67:26" pos:end="67:31"><expr pos:start="67:26" pos:end="67:31"><name pos:start="67:26" pos:end="67:31">sysctl</name></expr></argument>, <argument pos:start="67:34" pos:end="67:41"><expr pos:start="67:34" pos:end="67:41"><literal type="string" pos:start="67:34" pos:end="67:41">"sys_id"</literal></expr></argument>, <argument pos:start="67:44" pos:end="67:53"><expr pos:start="67:44" pos:end="67:53"><literal type="number" pos:start="67:44" pos:end="67:53">0x41007004</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:56"><expr pos:start="69:5" pos:end="69:55"><call pos:start="69:5" pos:end="69:55"><name pos:start="69:5" pos:end="69:24">qdev_prop_set_uint32</name><argument_list pos:start="69:25" pos:end="69:55">(<argument pos:start="69:26" pos:end="69:31"><expr pos:start="69:26" pos:end="69:31"><name pos:start="69:26" pos:end="69:31">sysctl</name></expr></argument>, <argument pos:start="69:34" pos:end="69:42"><expr pos:start="69:34" pos:end="69:42"><literal type="string" pos:start="69:34" pos:end="69:42">"proc_id"</literal></expr></argument>, <argument pos:start="69:45" pos:end="69:54"><expr pos:start="69:45" pos:end="69:54"><literal type="number" pos:start="69:45" pos:end="69:54">0x02000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:29"><expr pos:start="71:5" pos:end="71:28"><call pos:start="71:5" pos:end="71:28"><name pos:start="71:5" pos:end="71:20">qdev_init_nofail</name><argument_list pos:start="71:21" pos:end="71:28">(<argument pos:start="71:22" pos:end="71:27"><expr pos:start="71:22" pos:end="71:27"><name pos:start="71:22" pos:end="71:27">sysctl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:59"><expr pos:start="73:5" pos:end="73:58"><call pos:start="73:5" pos:end="73:58"><name pos:start="73:5" pos:end="73:19">sysbus_mmio_map</name><argument_list pos:start="73:20" pos:end="73:58">(<argument pos:start="73:21" pos:end="73:42"><expr pos:start="73:21" pos:end="73:42"><call pos:start="73:21" pos:end="73:42"><name pos:start="73:21" pos:end="73:34">SYS_BUS_DEVICE</name><argument_list pos:start="73:35" pos:end="73:42">(<argument pos:start="73:36" pos:end="73:41"><expr pos:start="73:36" pos:end="73:41"><name pos:start="73:36" pos:end="73:41">sysctl</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="73:45" pos:end="73:45"><expr pos:start="73:45" pos:end="73:45"><literal type="number" pos:start="73:45" pos:end="73:45">0</literal></expr></argument>, <argument pos:start="73:48" pos:end="73:57"><expr pos:start="73:48" pos:end="73:57"><literal type="number" pos:start="73:48" pos:end="73:57">0x10000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="83:38"><expr pos:start="77:5" pos:end="83:37"><name pos:start="77:5" pos:end="77:7">dev</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="83:37"><name pos:start="77:11" pos:end="77:31">sysbus_create_varargs</name><argument_list pos:start="77:32" pos:end="83:37">(<argument pos:start="77:33" pos:end="77:39"><expr pos:start="77:33" pos:end="77:39"><literal type="string" pos:start="77:33" pos:end="77:39">"pl190"</literal></expr></argument>, <argument pos:start="77:42" pos:end="77:51"><expr pos:start="77:42" pos:end="77:51"><literal type="number" pos:start="77:42" pos:end="77:51">0x10140000</literal></expr></argument>,

                                <argument pos:start="79:33" pos:end="79:74"><expr pos:start="79:33" pos:end="79:74"><call pos:start="79:33" pos:end="79:74"><name pos:start="79:33" pos:end="79:48">qdev_get_gpio_in</name><argument_list pos:start="79:49" pos:end="79:74">(<argument pos:start="79:50" pos:end="79:60"><expr pos:start="79:50" pos:end="79:60"><call pos:start="79:50" pos:end="79:60"><name pos:start="79:50" pos:end="79:55">DEVICE</name><argument_list pos:start="79:56" pos:end="79:60">(<argument pos:start="79:57" pos:end="79:59"><expr pos:start="79:57" pos:end="79:59"><name pos:start="79:57" pos:end="79:59">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:63" pos:end="79:73"><expr pos:start="79:63" pos:end="79:73"><name pos:start="79:63" pos:end="79:73">ARM_CPU_IRQ</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="81:33" pos:end="81:74"><expr pos:start="81:33" pos:end="81:74"><call pos:start="81:33" pos:end="81:74"><name pos:start="81:33" pos:end="81:48">qdev_get_gpio_in</name><argument_list pos:start="81:49" pos:end="81:74">(<argument pos:start="81:50" pos:end="81:60"><expr pos:start="81:50" pos:end="81:60"><call pos:start="81:50" pos:end="81:60"><name pos:start="81:50" pos:end="81:55">DEVICE</name><argument_list pos:start="81:56" pos:end="81:60">(<argument pos:start="81:57" pos:end="81:59"><expr pos:start="81:57" pos:end="81:59"><name pos:start="81:57" pos:end="81:59">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="81:63" pos:end="81:73"><expr pos:start="81:63" pos:end="81:73"><name pos:start="81:63" pos:end="81:73">ARM_CPU_FIQ</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="83:33" pos:end="83:36"><expr pos:start="83:33" pos:end="83:36"><name pos:start="83:33" pos:end="83:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="85:5" pos:end="89:5">for <control pos:start="85:9" pos:end="85:28">(<init pos:start="85:10" pos:end="85:15"><expr pos:start="85:10" pos:end="85:14"><name pos:start="85:10" pos:end="85:10">n</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <literal type="number" pos:start="85:14" pos:end="85:14">0</literal></expr>;</init> <condition pos:start="85:17" pos:end="85:23"><expr pos:start="85:17" pos:end="85:22"><name pos:start="85:17" pos:end="85:17">n</name> <operator pos:start="85:19" pos:end="85:19">&lt;</operator> <literal type="number" pos:start="85:21" pos:end="85:22">32</literal></expr>;</condition> <incr pos:start="85:25" pos:end="85:27"><expr pos:start="85:25" pos:end="85:27"><name pos:start="85:25" pos:end="85:25">n</name><operator pos:start="85:26" pos:end="85:27">++</operator></expr></incr>)</control> <block pos:start="85:30" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:42">

        <expr_stmt pos:start="87:9" pos:end="87:42"><expr pos:start="87:9" pos:end="87:41"><name pos:start="87:9" pos:end="87:14"><name pos:start="87:9" pos:end="87:11">pic</name><index pos:start="87:12" pos:end="87:14">[<expr pos:start="87:13" pos:end="87:13"><name pos:start="87:13" pos:end="87:13">n</name></expr>]</index></name> <operator pos:start="87:16" pos:end="87:16">=</operator> <call pos:start="87:18" pos:end="87:41"><name pos:start="87:18" pos:end="87:33">qdev_get_gpio_in</name><argument_list pos:start="87:34" pos:end="87:41">(<argument pos:start="87:35" pos:end="87:37"><expr pos:start="87:35" pos:end="87:37"><name pos:start="87:35" pos:end="87:37">dev</name></expr></argument>, <argument pos:start="87:40" pos:end="87:40"><expr pos:start="87:40" pos:end="87:40"><name pos:start="87:40" pos:end="87:40">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="91:5" pos:end="91:72"><expr pos:start="91:5" pos:end="91:71"><name pos:start="91:5" pos:end="91:7">dev</name> <operator pos:start="91:9" pos:end="91:9">=</operator> <call pos:start="91:11" pos:end="91:71"><name pos:start="91:11" pos:end="91:30">sysbus_create_simple</name><argument_list pos:start="91:31" pos:end="91:71">(<argument pos:start="91:32" pos:end="91:52"><expr pos:start="91:32" pos:end="91:52"><name pos:start="91:32" pos:end="91:52">TYPE_VERSATILE_PB_SIC</name></expr></argument>, <argument pos:start="91:55" pos:end="91:64"><expr pos:start="91:55" pos:end="91:64"><literal type="number" pos:start="91:55" pos:end="91:64">0x10003000</literal></expr></argument>, <argument pos:start="91:67" pos:end="91:70"><expr pos:start="91:67" pos:end="91:70"><name pos:start="91:67" pos:end="91:70">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="93:5" pos:end="99:5">for <control pos:start="93:9" pos:end="93:28">(<init pos:start="93:10" pos:end="93:15"><expr pos:start="93:10" pos:end="93:14"><name pos:start="93:10" pos:end="93:10">n</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <literal type="number" pos:start="93:14" pos:end="93:14">0</literal></expr>;</init> <condition pos:start="93:17" pos:end="93:23"><expr pos:start="93:17" pos:end="93:22"><name pos:start="93:17" pos:end="93:17">n</name> <operator pos:start="93:19" pos:end="93:19">&lt;</operator> <literal type="number" pos:start="93:21" pos:end="93:22">32</literal></expr>;</condition> <incr pos:start="93:25" pos:end="93:27"><expr pos:start="93:25" pos:end="93:27"><name pos:start="93:25" pos:end="93:25">n</name><operator pos:start="93:26" pos:end="93:27">++</operator></expr></incr>)</control> <block pos:start="93:30" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:42">

        <expr_stmt pos:start="95:9" pos:end="95:59"><expr pos:start="95:9" pos:end="95:58"><call pos:start="95:9" pos:end="95:58"><name pos:start="95:9" pos:end="95:26">sysbus_connect_irq</name><argument_list pos:start="95:27" pos:end="95:58">(<argument pos:start="95:28" pos:end="95:46"><expr pos:start="95:28" pos:end="95:46"><call pos:start="95:28" pos:end="95:46"><name pos:start="95:28" pos:end="95:41">SYS_BUS_DEVICE</name><argument_list pos:start="95:42" pos:end="95:46">(<argument pos:start="95:43" pos:end="95:45"><expr pos:start="95:43" pos:end="95:45"><name pos:start="95:43" pos:end="95:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:49" pos:end="95:49"><expr pos:start="95:49" pos:end="95:49"><name pos:start="95:49" pos:end="95:49">n</name></expr></argument>, <argument pos:start="95:52" pos:end="95:57"><expr pos:start="95:52" pos:end="95:57"><name pos:start="95:52" pos:end="95:57"><name pos:start="95:52" pos:end="95:54">pic</name><index pos:start="95:55" pos:end="95:57">[<expr pos:start="95:56" pos:end="95:56"><name pos:start="95:56" pos:end="95:56">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:42"><expr pos:start="97:9" pos:end="97:41"><name pos:start="97:9" pos:end="97:14"><name pos:start="97:9" pos:end="97:11">sic</name><index pos:start="97:12" pos:end="97:14">[<expr pos:start="97:13" pos:end="97:13"><name pos:start="97:13" pos:end="97:13">n</name></expr>]</index></name> <operator pos:start="97:16" pos:end="97:16">=</operator> <call pos:start="97:18" pos:end="97:41"><name pos:start="97:18" pos:end="97:33">qdev_get_gpio_in</name><argument_list pos:start="97:34" pos:end="97:41">(<argument pos:start="97:35" pos:end="97:37"><expr pos:start="97:35" pos:end="97:37"><name pos:start="97:35" pos:end="97:37">dev</name></expr></argument>, <argument pos:start="97:40" pos:end="97:40"><expr pos:start="97:40" pos:end="97:40"><name pos:start="97:40" pos:end="97:40">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="103:5" pos:end="103:63"><expr pos:start="103:5" pos:end="103:62"><call pos:start="103:5" pos:end="103:62"><name pos:start="103:5" pos:end="103:24">sysbus_create_simple</name><argument_list pos:start="103:25" pos:end="103:62">(<argument pos:start="103:26" pos:end="103:41"><expr pos:start="103:26" pos:end="103:41"><literal type="string" pos:start="103:26" pos:end="103:41">"pl050_keyboard"</literal></expr></argument>, <argument pos:start="103:44" pos:end="103:53"><expr pos:start="103:44" pos:end="103:53"><literal type="number" pos:start="103:44" pos:end="103:53">0x10006000</literal></expr></argument>, <argument pos:start="103:56" pos:end="103:61"><expr pos:start="103:56" pos:end="103:61"><name pos:start="103:56" pos:end="103:61"><name pos:start="103:56" pos:end="103:58">sic</name><index pos:start="103:59" pos:end="103:61">[<expr pos:start="103:60" pos:end="103:60"><literal type="number" pos:start="103:60" pos:end="103:60">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:60"><expr pos:start="105:5" pos:end="105:59"><call pos:start="105:5" pos:end="105:59"><name pos:start="105:5" pos:end="105:24">sysbus_create_simple</name><argument_list pos:start="105:25" pos:end="105:59">(<argument pos:start="105:26" pos:end="105:38"><expr pos:start="105:26" pos:end="105:38"><literal type="string" pos:start="105:26" pos:end="105:38">"pl050_mouse"</literal></expr></argument>, <argument pos:start="105:41" pos:end="105:50"><expr pos:start="105:41" pos:end="105:50"><literal type="number" pos:start="105:41" pos:end="105:50">0x10007000</literal></expr></argument>, <argument pos:start="105:53" pos:end="105:58"><expr pos:start="105:53" pos:end="105:58"><name pos:start="105:53" pos:end="105:58"><name pos:start="105:53" pos:end="105:55">sic</name><index pos:start="105:56" pos:end="105:58">[<expr pos:start="105:57" pos:end="105:57"><literal type="number" pos:start="105:57" pos:end="105:57">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:45"><expr pos:start="109:5" pos:end="109:44"><name pos:start="109:5" pos:end="109:7">dev</name> <operator pos:start="109:9" pos:end="109:9">=</operator> <call pos:start="109:11" pos:end="109:44"><name pos:start="109:11" pos:end="109:21">qdev_create</name><argument_list pos:start="109:22" pos:end="109:44">(<argument pos:start="109:23" pos:end="109:26"><expr pos:start="109:23" pos:end="109:26"><name pos:start="109:23" pos:end="109:26">NULL</name></expr></argument>, <argument pos:start="109:29" pos:end="109:43"><expr pos:start="109:29" pos:end="109:43"><literal type="string" pos:start="109:29" pos:end="109:43">"versatile_pci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:33"><expr pos:start="111:5" pos:end="111:32"><name pos:start="111:5" pos:end="111:10">busdev</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <call pos:start="111:14" pos:end="111:32"><name pos:start="111:14" pos:end="111:27">SYS_BUS_DEVICE</name><argument_list pos:start="111:28" pos:end="111:32">(<argument pos:start="111:29" pos:end="111:31"><expr pos:start="111:29" pos:end="111:31"><name pos:start="111:29" pos:end="111:31">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:26"><expr pos:start="113:5" pos:end="113:25"><call pos:start="113:5" pos:end="113:25"><name pos:start="113:5" pos:end="113:20">qdev_init_nofail</name><argument_list pos:start="113:21" pos:end="113:25">(<argument pos:start="113:22" pos:end="113:24"><expr pos:start="113:22" pos:end="113:24"><name pos:start="113:22" pos:end="113:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:43"><expr pos:start="115:5" pos:end="115:42"><call pos:start="115:5" pos:end="115:42"><name pos:start="115:5" pos:end="115:19">sysbus_mmio_map</name><argument_list pos:start="115:20" pos:end="115:42">(<argument pos:start="115:21" pos:end="115:26"><expr pos:start="115:21" pos:end="115:26"><name pos:start="115:21" pos:end="115:26">busdev</name></expr></argument>, <argument pos:start="115:29" pos:end="115:29"><expr pos:start="115:29" pos:end="115:29"><literal type="number" pos:start="115:29" pos:end="115:29">0</literal></expr></argument>, <argument pos:start="115:32" pos:end="115:41"><expr pos:start="115:32" pos:end="115:41"><literal type="number" pos:start="115:32" pos:end="115:41">0x10001000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="115:45" pos:end="115:69">/* PCI controller regs */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:43"><expr pos:start="117:5" pos:end="117:42"><call pos:start="117:5" pos:end="117:42"><name pos:start="117:5" pos:end="117:19">sysbus_mmio_map</name><argument_list pos:start="117:20" pos:end="117:42">(<argument pos:start="117:21" pos:end="117:26"><expr pos:start="117:21" pos:end="117:26"><name pos:start="117:21" pos:end="117:26">busdev</name></expr></argument>, <argument pos:start="117:29" pos:end="117:29"><expr pos:start="117:29" pos:end="117:29"><literal type="number" pos:start="117:29" pos:end="117:29">1</literal></expr></argument>, <argument pos:start="117:32" pos:end="117:41"><expr pos:start="117:32" pos:end="117:41"><literal type="number" pos:start="117:32" pos:end="117:41">0x41000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="117:45" pos:end="117:65">/* PCI self-config */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:43"><expr pos:start="119:5" pos:end="119:42"><call pos:start="119:5" pos:end="119:42"><name pos:start="119:5" pos:end="119:19">sysbus_mmio_map</name><argument_list pos:start="119:20" pos:end="119:42">(<argument pos:start="119:21" pos:end="119:26"><expr pos:start="119:21" pos:end="119:26"><name pos:start="119:21" pos:end="119:26">busdev</name></expr></argument>, <argument pos:start="119:29" pos:end="119:29"><expr pos:start="119:29" pos:end="119:29"><literal type="number" pos:start="119:29" pos:end="119:29">2</literal></expr></argument>, <argument pos:start="119:32" pos:end="119:41"><expr pos:start="119:32" pos:end="119:41"><literal type="number" pos:start="119:32" pos:end="119:41">0x42000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="119:45" pos:end="119:60">/* PCI config */</comment>

    <expr_stmt pos:start="121:5" pos:end="121:43"><expr pos:start="121:5" pos:end="121:42"><call pos:start="121:5" pos:end="121:42"><name pos:start="121:5" pos:end="121:19">sysbus_mmio_map</name><argument_list pos:start="121:20" pos:end="121:42">(<argument pos:start="121:21" pos:end="121:26"><expr pos:start="121:21" pos:end="121:26"><name pos:start="121:21" pos:end="121:26">busdev</name></expr></argument>, <argument pos:start="121:29" pos:end="121:29"><expr pos:start="121:29" pos:end="121:29"><literal type="number" pos:start="121:29" pos:end="121:29">3</literal></expr></argument>, <argument pos:start="121:32" pos:end="121:41"><expr pos:start="121:32" pos:end="121:41"><literal type="number" pos:start="121:32" pos:end="121:41">0x43000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="121:45" pos:end="121:57">/* PCI I/O */</comment>

    <expr_stmt pos:start="123:5" pos:end="123:43"><expr pos:start="123:5" pos:end="123:42"><call pos:start="123:5" pos:end="123:42"><name pos:start="123:5" pos:end="123:19">sysbus_mmio_map</name><argument_list pos:start="123:20" pos:end="123:42">(<argument pos:start="123:21" pos:end="123:26"><expr pos:start="123:21" pos:end="123:26"><name pos:start="123:21" pos:end="123:26">busdev</name></expr></argument>, <argument pos:start="123:29" pos:end="123:29"><expr pos:start="123:29" pos:end="123:29"><literal type="number" pos:start="123:29" pos:end="123:29">4</literal></expr></argument>, <argument pos:start="123:32" pos:end="123:41"><expr pos:start="123:32" pos:end="123:41"><literal type="number" pos:start="123:32" pos:end="123:41">0x44000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="123:45" pos:end="123:69">/* PCI memory window 1 */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:43"><expr pos:start="125:5" pos:end="125:42"><call pos:start="125:5" pos:end="125:42"><name pos:start="125:5" pos:end="125:19">sysbus_mmio_map</name><argument_list pos:start="125:20" pos:end="125:42">(<argument pos:start="125:21" pos:end="125:26"><expr pos:start="125:21" pos:end="125:26"><name pos:start="125:21" pos:end="125:26">busdev</name></expr></argument>, <argument pos:start="125:29" pos:end="125:29"><expr pos:start="125:29" pos:end="125:29"><literal type="number" pos:start="125:29" pos:end="125:29">5</literal></expr></argument>, <argument pos:start="125:32" pos:end="125:41"><expr pos:start="125:32" pos:end="125:41"><literal type="number" pos:start="125:32" pos:end="125:41">0x50000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="125:45" pos:end="125:69">/* PCI memory window 2 */</comment>

    <expr_stmt pos:start="127:5" pos:end="127:43"><expr pos:start="127:5" pos:end="127:42"><call pos:start="127:5" pos:end="127:42"><name pos:start="127:5" pos:end="127:19">sysbus_mmio_map</name><argument_list pos:start="127:20" pos:end="127:42">(<argument pos:start="127:21" pos:end="127:26"><expr pos:start="127:21" pos:end="127:26"><name pos:start="127:21" pos:end="127:26">busdev</name></expr></argument>, <argument pos:start="127:29" pos:end="127:29"><expr pos:start="127:29" pos:end="127:29"><literal type="number" pos:start="127:29" pos:end="127:29">6</literal></expr></argument>, <argument pos:start="127:32" pos:end="127:41"><expr pos:start="127:32" pos:end="127:41"><literal type="number" pos:start="127:32" pos:end="127:41">0x60000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="127:45" pos:end="127:69">/* PCI memory window 3 */</comment>

    <expr_stmt pos:start="129:5" pos:end="129:43"><expr pos:start="129:5" pos:end="129:42"><call pos:start="129:5" pos:end="129:42"><name pos:start="129:5" pos:end="129:22">sysbus_connect_irq</name><argument_list pos:start="129:23" pos:end="129:42">(<argument pos:start="129:24" pos:end="129:29"><expr pos:start="129:24" pos:end="129:29"><name pos:start="129:24" pos:end="129:29">busdev</name></expr></argument>, <argument pos:start="129:32" pos:end="129:32"><expr pos:start="129:32" pos:end="129:32"><literal type="number" pos:start="129:32" pos:end="129:32">0</literal></expr></argument>, <argument pos:start="129:35" pos:end="129:41"><expr pos:start="129:35" pos:end="129:41"><name pos:start="129:35" pos:end="129:41"><name pos:start="129:35" pos:end="129:37">sic</name><index pos:start="129:38" pos:end="129:41">[<expr pos:start="129:39" pos:end="129:40"><literal type="number" pos:start="129:39" pos:end="129:40">27</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:43"><expr pos:start="131:5" pos:end="131:42"><call pos:start="131:5" pos:end="131:42"><name pos:start="131:5" pos:end="131:22">sysbus_connect_irq</name><argument_list pos:start="131:23" pos:end="131:42">(<argument pos:start="131:24" pos:end="131:29"><expr pos:start="131:24" pos:end="131:29"><name pos:start="131:24" pos:end="131:29">busdev</name></expr></argument>, <argument pos:start="131:32" pos:end="131:32"><expr pos:start="131:32" pos:end="131:32"><literal type="number" pos:start="131:32" pos:end="131:32">1</literal></expr></argument>, <argument pos:start="131:35" pos:end="131:41"><expr pos:start="131:35" pos:end="131:41"><name pos:start="131:35" pos:end="131:41"><name pos:start="131:35" pos:end="131:37">sic</name><index pos:start="131:38" pos:end="131:41">[<expr pos:start="131:39" pos:end="131:40"><literal type="number" pos:start="131:39" pos:end="131:40">28</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:43"><expr pos:start="133:5" pos:end="133:42"><call pos:start="133:5" pos:end="133:42"><name pos:start="133:5" pos:end="133:22">sysbus_connect_irq</name><argument_list pos:start="133:23" pos:end="133:42">(<argument pos:start="133:24" pos:end="133:29"><expr pos:start="133:24" pos:end="133:29"><name pos:start="133:24" pos:end="133:29">busdev</name></expr></argument>, <argument pos:start="133:32" pos:end="133:32"><expr pos:start="133:32" pos:end="133:32"><literal type="number" pos:start="133:32" pos:end="133:32">2</literal></expr></argument>, <argument pos:start="133:35" pos:end="133:41"><expr pos:start="133:35" pos:end="133:41"><name pos:start="133:35" pos:end="133:41"><name pos:start="133:35" pos:end="133:37">sic</name><index pos:start="133:38" pos:end="133:41">[<expr pos:start="133:39" pos:end="133:40"><literal type="number" pos:start="133:39" pos:end="133:40">29</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:43"><expr pos:start="135:5" pos:end="135:42"><call pos:start="135:5" pos:end="135:42"><name pos:start="135:5" pos:end="135:22">sysbus_connect_irq</name><argument_list pos:start="135:23" pos:end="135:42">(<argument pos:start="135:24" pos:end="135:29"><expr pos:start="135:24" pos:end="135:29"><name pos:start="135:24" pos:end="135:29">busdev</name></expr></argument>, <argument pos:start="135:32" pos:end="135:32"><expr pos:start="135:32" pos:end="135:32"><literal type="number" pos:start="135:32" pos:end="135:32">3</literal></expr></argument>, <argument pos:start="135:35" pos:end="135:41"><expr pos:start="135:35" pos:end="135:41"><name pos:start="135:35" pos:end="135:41"><name pos:start="135:35" pos:end="135:37">sic</name><index pos:start="135:38" pos:end="135:41">[<expr pos:start="135:39" pos:end="135:40"><literal type="number" pos:start="135:39" pos:end="135:40">30</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:55"><expr pos:start="137:5" pos:end="137:54"><name pos:start="137:5" pos:end="137:11">pci_bus</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <operator pos:start="137:15" pos:end="137:15">(</operator><name pos:start="137:16" pos:end="137:21">PCIBus</name> <operator pos:start="137:23" pos:end="137:23">*</operator><operator pos:start="137:24" pos:end="137:24">)</operator><call pos:start="137:25" pos:end="137:54"><name pos:start="137:25" pos:end="137:42">qdev_get_child_bus</name><argument_list pos:start="137:43" pos:end="137:54">(<argument pos:start="137:44" pos:end="137:46"><expr pos:start="137:44" pos:end="137:46"><name pos:start="137:44" pos:end="137:46">dev</name></expr></argument>, <argument pos:start="137:49" pos:end="137:53"><expr pos:start="137:49" pos:end="137:53"><literal type="string" pos:start="137:49" pos:end="137:53">"pci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="141:5" pos:end="159:5">for<control pos:start="141:8" pos:end="141:32">(<init pos:start="141:9" pos:end="141:14"><expr pos:start="141:9" pos:end="141:13"><name pos:start="141:9" pos:end="141:9">n</name> <operator pos:start="141:11" pos:end="141:11">=</operator> <literal type="number" pos:start="141:13" pos:end="141:13">0</literal></expr>;</init> <condition pos:start="141:16" pos:end="141:27"><expr pos:start="141:16" pos:end="141:26"><name pos:start="141:16" pos:end="141:16">n</name> <operator pos:start="141:18" pos:end="141:18">&lt;</operator> <name pos:start="141:20" pos:end="141:26">nb_nics</name></expr>;</condition> <incr pos:start="141:29" pos:end="141:31"><expr pos:start="141:29" pos:end="141:31"><name pos:start="141:29" pos:end="141:29">n</name><operator pos:start="141:30" pos:end="141:31">++</operator></expr></incr>)</control> <block pos:start="141:34" pos:end="159:5">{<block_content pos:start="143:9" pos:end="157:9">

        <expr_stmt pos:start="143:9" pos:end="143:26"><expr pos:start="143:9" pos:end="143:25"><name pos:start="143:9" pos:end="143:10">nd</name> <operator pos:start="143:12" pos:end="143:12">=</operator> <operator pos:start="143:14" pos:end="143:14">&amp;</operator><name pos:start="143:15" pos:end="143:25"><name pos:start="143:15" pos:end="143:22">nd_table</name><index pos:start="143:23" pos:end="143:25">[<expr pos:start="143:24" pos:end="143:24"><name pos:start="143:24" pos:end="143:24">n</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="147:9" pos:end="157:9"><if pos:start="147:9" pos:end="153:9">if <condition pos:start="147:12" pos:end="147:77">(<expr pos:start="147:13" pos:end="147:76"><operator pos:start="147:13" pos:end="147:13">!</operator><name pos:start="147:14" pos:end="147:21">done_smc</name> <operator pos:start="147:23" pos:end="147:24">&amp;&amp;</operator> <operator pos:start="147:26" pos:end="147:26">(</operator><operator pos:start="147:27" pos:end="147:27">!</operator><name pos:start="147:28" pos:end="147:36"><name pos:start="147:28" pos:end="147:29">nd</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:36">model</name></name> <operator pos:start="147:38" pos:end="147:39">||</operator> <call pos:start="147:41" pos:end="147:70"><name pos:start="147:41" pos:end="147:46">strcmp</name><argument_list pos:start="147:47" pos:end="147:70">(<argument pos:start="147:48" pos:end="147:56"><expr pos:start="147:48" pos:end="147:56"><name pos:start="147:48" pos:end="147:56"><name pos:start="147:48" pos:end="147:49">nd</name><operator pos:start="147:50" pos:end="147:51">-&gt;</operator><name pos:start="147:52" pos:end="147:56">model</name></name></expr></argument>, <argument pos:start="147:59" pos:end="147:69"><expr pos:start="147:59" pos:end="147:69"><literal type="string" pos:start="147:59" pos:end="147:69">"smc91c111"</literal></expr></argument>)</argument_list></call> <operator pos:start="147:72" pos:end="147:73">==</operator> <literal type="number" pos:start="147:75" pos:end="147:75">0</literal><operator pos:start="147:76" pos:end="147:76">)</operator></expr>)</condition> <block pos:start="147:79" pos:end="153:9">{<block_content pos:start="149:13" pos:end="151:25">

            <expr_stmt pos:start="149:13" pos:end="149:52"><expr pos:start="149:13" pos:end="149:51"><call pos:start="149:13" pos:end="149:51"><name pos:start="149:13" pos:end="149:26">smc91c111_init</name><argument_list pos:start="149:27" pos:end="149:51">(<argument pos:start="149:28" pos:end="149:29"><expr pos:start="149:28" pos:end="149:29"><name pos:start="149:28" pos:end="149:29">nd</name></expr></argument>, <argument pos:start="149:32" pos:end="149:41"><expr pos:start="149:32" pos:end="149:41"><literal type="number" pos:start="149:32" pos:end="149:41">0x10010000</literal></expr></argument>, <argument pos:start="149:44" pos:end="149:50"><expr pos:start="149:44" pos:end="149:50"><name pos:start="149:44" pos:end="149:50"><name pos:start="149:44" pos:end="149:46">sic</name><index pos:start="149:47" pos:end="149:50">[<expr pos:start="149:48" pos:end="149:49"><literal type="number" pos:start="149:48" pos:end="149:49">25</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:25"><expr pos:start="151:13" pos:end="151:24"><name pos:start="151:13" pos:end="151:20">done_smc</name> <operator pos:start="151:22" pos:end="151:22">=</operator> <literal type="number" pos:start="151:24" pos:end="151:24">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="153:11" pos:end="157:9">else <block pos:start="153:16" pos:end="157:9">{<block_content pos:start="155:13" pos:end="155:62">

            <expr_stmt pos:start="155:13" pos:end="155:62"><expr pos:start="155:13" pos:end="155:61"><call pos:start="155:13" pos:end="155:61"><name pos:start="155:13" pos:end="155:31">pci_nic_init_nofail</name><argument_list pos:start="155:32" pos:end="155:61">(<argument pos:start="155:33" pos:end="155:34"><expr pos:start="155:33" pos:end="155:34"><name pos:start="155:33" pos:end="155:34">nd</name></expr></argument>, <argument pos:start="155:37" pos:end="155:43"><expr pos:start="155:37" pos:end="155:43"><name pos:start="155:37" pos:end="155:43">pci_bus</name></expr></argument>, <argument pos:start="155:46" pos:end="155:54"><expr pos:start="155:46" pos:end="155:54"><literal type="string" pos:start="155:46" pos:end="155:54">"rtl8139"</literal></expr></argument>, <argument pos:start="155:57" pos:end="155:60"><expr pos:start="155:57" pos:end="155:60"><name pos:start="155:57" pos:end="155:60">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="161:5" pos:end="165:5"><if pos:start="161:5" pos:end="165:5">if <condition pos:start="161:8" pos:end="161:27">(<expr pos:start="161:9" pos:end="161:26"><call pos:start="161:9" pos:end="161:26"><name pos:start="161:9" pos:end="161:19">usb_enabled</name><argument_list pos:start="161:20" pos:end="161:26">(<argument pos:start="161:21" pos:end="161:25"><expr pos:start="161:21" pos:end="161:25"><name pos:start="161:21" pos:end="161:25">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="161:29" pos:end="165:5">{<block_content pos:start="163:9" pos:end="163:51">

        <expr_stmt pos:start="163:9" pos:end="163:51"><expr pos:start="163:9" pos:end="163:50"><call pos:start="163:9" pos:end="163:50"><name pos:start="163:9" pos:end="163:25">pci_create_simple</name><argument_list pos:start="163:26" pos:end="163:50">(<argument pos:start="163:27" pos:end="163:33"><expr pos:start="163:27" pos:end="163:33"><name pos:start="163:27" pos:end="163:33">pci_bus</name></expr></argument>, <argument pos:start="163:36" pos:end="163:37"><expr pos:start="163:36" pos:end="163:37"><operator pos:start="163:36" pos:end="163:36">-</operator><literal type="number" pos:start="163:37" pos:end="163:37">1</literal></expr></argument>, <argument pos:start="163:40" pos:end="163:49"><expr pos:start="163:40" pos:end="163:49"><literal type="string" pos:start="163:40" pos:end="163:49">"pci-ohci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:35"><expr pos:start="167:5" pos:end="167:34"><name pos:start="167:5" pos:end="167:5">n</name> <operator pos:start="167:7" pos:end="167:7">=</operator> <call pos:start="167:9" pos:end="167:34"><name pos:start="167:9" pos:end="167:25">drive_get_max_bus</name><argument_list pos:start="167:26" pos:end="167:34">(<argument pos:start="167:27" pos:end="167:33"><expr pos:start="167:27" pos:end="167:33"><name pos:start="167:27" pos:end="167:33">IF_SCSI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="169:5" pos:end="175:5">while <condition pos:start="169:11" pos:end="169:18">(<expr pos:start="169:12" pos:end="169:17"><name pos:start="169:12" pos:end="169:12">n</name> <operator pos:start="169:14" pos:end="169:15">&gt;=</operator> <literal type="number" pos:start="169:17" pos:end="169:17">0</literal></expr>)</condition> <block pos:start="169:20" pos:end="175:5">{<block_content pos:start="171:9" pos:end="173:12">

        <expr_stmt pos:start="171:9" pos:end="171:53"><expr pos:start="171:9" pos:end="171:52"><call pos:start="171:9" pos:end="171:52"><name pos:start="171:9" pos:end="171:25">pci_create_simple</name><argument_list pos:start="171:26" pos:end="171:52">(<argument pos:start="171:27" pos:end="171:33"><expr pos:start="171:27" pos:end="171:33"><name pos:start="171:27" pos:end="171:33">pci_bus</name></expr></argument>, <argument pos:start="171:36" pos:end="171:37"><expr pos:start="171:36" pos:end="171:37"><operator pos:start="171:36" pos:end="171:36">-</operator><literal type="number" pos:start="171:37" pos:end="171:37">1</literal></expr></argument>, <argument pos:start="171:40" pos:end="171:51"><expr pos:start="171:40" pos:end="171:51"><literal type="string" pos:start="171:40" pos:end="171:51">"lsi53c895a"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:12"><expr pos:start="173:9" pos:end="173:11"><name pos:start="173:9" pos:end="173:9">n</name><operator pos:start="173:10" pos:end="173:11">--</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="179:5" pos:end="179:55"><expr pos:start="179:5" pos:end="179:54"><call pos:start="179:5" pos:end="179:54"><name pos:start="179:5" pos:end="179:24">sysbus_create_simple</name><argument_list pos:start="179:25" pos:end="179:54">(<argument pos:start="179:26" pos:end="179:32"><expr pos:start="179:26" pos:end="179:32"><literal type="string" pos:start="179:26" pos:end="179:32">"pl011"</literal></expr></argument>, <argument pos:start="179:35" pos:end="179:44"><expr pos:start="179:35" pos:end="179:44"><literal type="number" pos:start="179:35" pos:end="179:44">0x101f1000</literal></expr></argument>, <argument pos:start="179:47" pos:end="179:53"><expr pos:start="179:47" pos:end="179:53"><name pos:start="179:47" pos:end="179:53"><name pos:start="179:47" pos:end="179:49">pic</name><index pos:start="179:50" pos:end="179:53">[<expr pos:start="179:51" pos:end="179:52"><literal type="number" pos:start="179:51" pos:end="179:52">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:55"><expr pos:start="181:5" pos:end="181:54"><call pos:start="181:5" pos:end="181:54"><name pos:start="181:5" pos:end="181:24">sysbus_create_simple</name><argument_list pos:start="181:25" pos:end="181:54">(<argument pos:start="181:26" pos:end="181:32"><expr pos:start="181:26" pos:end="181:32"><literal type="string" pos:start="181:26" pos:end="181:32">"pl011"</literal></expr></argument>, <argument pos:start="181:35" pos:end="181:44"><expr pos:start="181:35" pos:end="181:44"><literal type="number" pos:start="181:35" pos:end="181:44">0x101f2000</literal></expr></argument>, <argument pos:start="181:47" pos:end="181:53"><expr pos:start="181:47" pos:end="181:53"><name pos:start="181:47" pos:end="181:53"><name pos:start="181:47" pos:end="181:49">pic</name><index pos:start="181:50" pos:end="181:53">[<expr pos:start="181:51" pos:end="181:52"><literal type="number" pos:start="181:51" pos:end="181:52">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:55"><expr pos:start="183:5" pos:end="183:54"><call pos:start="183:5" pos:end="183:54"><name pos:start="183:5" pos:end="183:24">sysbus_create_simple</name><argument_list pos:start="183:25" pos:end="183:54">(<argument pos:start="183:26" pos:end="183:32"><expr pos:start="183:26" pos:end="183:32"><literal type="string" pos:start="183:26" pos:end="183:32">"pl011"</literal></expr></argument>, <argument pos:start="183:35" pos:end="183:44"><expr pos:start="183:35" pos:end="183:44"><literal type="number" pos:start="183:35" pos:end="183:44">0x101f3000</literal></expr></argument>, <argument pos:start="183:47" pos:end="183:53"><expr pos:start="183:47" pos:end="183:53"><name pos:start="183:47" pos:end="183:53"><name pos:start="183:47" pos:end="183:49">pic</name><index pos:start="183:50" pos:end="183:53">[<expr pos:start="183:51" pos:end="183:52"><literal type="number" pos:start="183:51" pos:end="183:52">14</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:54"><expr pos:start="185:5" pos:end="185:53"><call pos:start="185:5" pos:end="185:53"><name pos:start="185:5" pos:end="185:24">sysbus_create_simple</name><argument_list pos:start="185:25" pos:end="185:53">(<argument pos:start="185:26" pos:end="185:32"><expr pos:start="185:26" pos:end="185:32"><literal type="string" pos:start="185:26" pos:end="185:32">"pl011"</literal></expr></argument>, <argument pos:start="185:35" pos:end="185:44"><expr pos:start="185:35" pos:end="185:44"><literal type="number" pos:start="185:35" pos:end="185:44">0x10009000</literal></expr></argument>, <argument pos:start="185:47" pos:end="185:52"><expr pos:start="185:47" pos:end="185:52"><name pos:start="185:47" pos:end="185:52"><name pos:start="185:47" pos:end="185:49">sic</name><index pos:start="185:50" pos:end="185:52">[<expr pos:start="185:51" pos:end="185:51"><literal type="number" pos:start="185:51" pos:end="185:51">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:55"><expr pos:start="189:5" pos:end="189:54"><call pos:start="189:5" pos:end="189:54"><name pos:start="189:5" pos:end="189:24">sysbus_create_simple</name><argument_list pos:start="189:25" pos:end="189:54">(<argument pos:start="189:26" pos:end="189:32"><expr pos:start="189:26" pos:end="189:32"><literal type="string" pos:start="189:26" pos:end="189:32">"pl080"</literal></expr></argument>, <argument pos:start="189:35" pos:end="189:44"><expr pos:start="189:35" pos:end="189:44"><literal type="number" pos:start="189:35" pos:end="189:44">0x10130000</literal></expr></argument>, <argument pos:start="189:47" pos:end="189:53"><expr pos:start="189:47" pos:end="189:53"><name pos:start="189:47" pos:end="189:53"><name pos:start="189:47" pos:end="189:49">pic</name><index pos:start="189:50" pos:end="189:53">[<expr pos:start="189:51" pos:end="189:52"><literal type="number" pos:start="189:51" pos:end="189:52">17</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:54"><expr pos:start="191:5" pos:end="191:53"><call pos:start="191:5" pos:end="191:53"><name pos:start="191:5" pos:end="191:24">sysbus_create_simple</name><argument_list pos:start="191:25" pos:end="191:53">(<argument pos:start="191:26" pos:end="191:32"><expr pos:start="191:26" pos:end="191:32"><literal type="string" pos:start="191:26" pos:end="191:32">"sp804"</literal></expr></argument>, <argument pos:start="191:35" pos:end="191:44"><expr pos:start="191:35" pos:end="191:44"><literal type="number" pos:start="191:35" pos:end="191:44">0x101e2000</literal></expr></argument>, <argument pos:start="191:47" pos:end="191:52"><expr pos:start="191:47" pos:end="191:52"><name pos:start="191:47" pos:end="191:52"><name pos:start="191:47" pos:end="191:49">pic</name><index pos:start="191:50" pos:end="191:52">[<expr pos:start="191:51" pos:end="191:51"><literal type="number" pos:start="191:51" pos:end="191:51">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:54"><expr pos:start="193:5" pos:end="193:53"><call pos:start="193:5" pos:end="193:53"><name pos:start="193:5" pos:end="193:24">sysbus_create_simple</name><argument_list pos:start="193:25" pos:end="193:53">(<argument pos:start="193:26" pos:end="193:32"><expr pos:start="193:26" pos:end="193:32"><literal type="string" pos:start="193:26" pos:end="193:32">"sp804"</literal></expr></argument>, <argument pos:start="193:35" pos:end="193:44"><expr pos:start="193:35" pos:end="193:44"><literal type="number" pos:start="193:35" pos:end="193:44">0x101e3000</literal></expr></argument>, <argument pos:start="193:47" pos:end="193:52"><expr pos:start="193:47" pos:end="193:52"><name pos:start="193:47" pos:end="193:52"><name pos:start="193:47" pos:end="193:49">pic</name><index pos:start="193:50" pos:end="193:52">[<expr pos:start="193:51" pos:end="193:51"><literal type="number" pos:start="193:51" pos:end="193:51">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:54"><expr pos:start="197:5" pos:end="197:53"><call pos:start="197:5" pos:end="197:53"><name pos:start="197:5" pos:end="197:24">sysbus_create_simple</name><argument_list pos:start="197:25" pos:end="197:53">(<argument pos:start="197:26" pos:end="197:32"><expr pos:start="197:26" pos:end="197:32"><literal type="string" pos:start="197:26" pos:end="197:32">"pl061"</literal></expr></argument>, <argument pos:start="197:35" pos:end="197:44"><expr pos:start="197:35" pos:end="197:44"><literal type="number" pos:start="197:35" pos:end="197:44">0x101e4000</literal></expr></argument>, <argument pos:start="197:47" pos:end="197:52"><expr pos:start="197:47" pos:end="197:52"><name pos:start="197:47" pos:end="197:52"><name pos:start="197:47" pos:end="197:49">pic</name><index pos:start="197:50" pos:end="197:52">[<expr pos:start="197:51" pos:end="197:51"><literal type="number" pos:start="197:51" pos:end="197:51">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:54"><expr pos:start="199:5" pos:end="199:53"><call pos:start="199:5" pos:end="199:53"><name pos:start="199:5" pos:end="199:24">sysbus_create_simple</name><argument_list pos:start="199:25" pos:end="199:53">(<argument pos:start="199:26" pos:end="199:32"><expr pos:start="199:26" pos:end="199:32"><literal type="string" pos:start="199:26" pos:end="199:32">"pl061"</literal></expr></argument>, <argument pos:start="199:35" pos:end="199:44"><expr pos:start="199:35" pos:end="199:44"><literal type="number" pos:start="199:35" pos:end="199:44">0x101e5000</literal></expr></argument>, <argument pos:start="199:47" pos:end="199:52"><expr pos:start="199:47" pos:end="199:52"><name pos:start="199:47" pos:end="199:52"><name pos:start="199:47" pos:end="199:49">pic</name><index pos:start="199:50" pos:end="199:52">[<expr pos:start="199:51" pos:end="199:51"><literal type="number" pos:start="199:51" pos:end="199:51">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:54"><expr pos:start="201:5" pos:end="201:53"><call pos:start="201:5" pos:end="201:53"><name pos:start="201:5" pos:end="201:24">sysbus_create_simple</name><argument_list pos:start="201:25" pos:end="201:53">(<argument pos:start="201:26" pos:end="201:32"><expr pos:start="201:26" pos:end="201:32"><literal type="string" pos:start="201:26" pos:end="201:32">"pl061"</literal></expr></argument>, <argument pos:start="201:35" pos:end="201:44"><expr pos:start="201:35" pos:end="201:44"><literal type="number" pos:start="201:35" pos:end="201:44">0x101e6000</literal></expr></argument>, <argument pos:start="201:47" pos:end="201:52"><expr pos:start="201:47" pos:end="201:52"><name pos:start="201:47" pos:end="201:52"><name pos:start="201:47" pos:end="201:49">pic</name><index pos:start="201:50" pos:end="201:52">[<expr pos:start="201:51" pos:end="201:51"><literal type="number" pos:start="201:51" pos:end="201:51">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:54"><expr pos:start="203:5" pos:end="203:53"><call pos:start="203:5" pos:end="203:53"><name pos:start="203:5" pos:end="203:24">sysbus_create_simple</name><argument_list pos:start="203:25" pos:end="203:53">(<argument pos:start="203:26" pos:end="203:32"><expr pos:start="203:26" pos:end="203:32"><literal type="string" pos:start="203:26" pos:end="203:32">"pl061"</literal></expr></argument>, <argument pos:start="203:35" pos:end="203:44"><expr pos:start="203:35" pos:end="203:44"><literal type="number" pos:start="203:35" pos:end="203:44">0x101e7000</literal></expr></argument>, <argument pos:start="203:47" pos:end="203:52"><expr pos:start="203:47" pos:end="203:52"><name pos:start="203:47" pos:end="203:52"><name pos:start="203:47" pos:end="203:49">pic</name><index pos:start="203:50" pos:end="203:52">[<expr pos:start="203:51" pos:end="203:51"><literal type="number" pos:start="203:51" pos:end="203:51">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="207:5" pos:end="209:64">/* The versatile/PB actually has a modified Color LCD controller

       that includes hardware cursor support from the PL111.  */</comment>

    <expr_stmt pos:start="211:5" pos:end="211:71"><expr pos:start="211:5" pos:end="211:70"><name pos:start="211:5" pos:end="211:7">dev</name> <operator pos:start="211:9" pos:end="211:9">=</operator> <call pos:start="211:11" pos:end="211:70"><name pos:start="211:11" pos:end="211:30">sysbus_create_simple</name><argument_list pos:start="211:31" pos:end="211:70">(<argument pos:start="211:32" pos:end="211:48"><expr pos:start="211:32" pos:end="211:48"><literal type="string" pos:start="211:32" pos:end="211:48">"pl110_versatile"</literal></expr></argument>, <argument pos:start="211:51" pos:end="211:60"><expr pos:start="211:51" pos:end="211:60"><literal type="number" pos:start="211:51" pos:end="211:60">0x10120000</literal></expr></argument>, <argument pos:start="211:63" pos:end="211:69"><expr pos:start="211:63" pos:end="211:69"><name pos:start="211:63" pos:end="211:69"><name pos:start="211:63" pos:end="211:65">pic</name><index pos:start="211:66" pos:end="211:69">[<expr pos:start="211:67" pos:end="211:68"><literal type="number" pos:start="211:67" pos:end="211:68">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="213:5" pos:end="213:68">/* Wire up the mux control signals from the SYS_CLCD register */</comment>

    <expr_stmt pos:start="215:5" pos:end="215:63"><expr pos:start="215:5" pos:end="215:62"><call pos:start="215:5" pos:end="215:62"><name pos:start="215:5" pos:end="215:25">qdev_connect_gpio_out</name><argument_list pos:start="215:26" pos:end="215:62">(<argument pos:start="215:27" pos:end="215:32"><expr pos:start="215:27" pos:end="215:32"><name pos:start="215:27" pos:end="215:32">sysctl</name></expr></argument>, <argument pos:start="215:35" pos:end="215:35"><expr pos:start="215:35" pos:end="215:35"><literal type="number" pos:start="215:35" pos:end="215:35">0</literal></expr></argument>, <argument pos:start="215:38" pos:end="215:61"><expr pos:start="215:38" pos:end="215:61"><call pos:start="215:38" pos:end="215:61"><name pos:start="215:38" pos:end="215:53">qdev_get_gpio_in</name><argument_list pos:start="215:54" pos:end="215:61">(<argument pos:start="215:55" pos:end="215:57"><expr pos:start="215:55" pos:end="215:57"><name pos:start="215:55" pos:end="215:57">dev</name></expr></argument>, <argument pos:start="215:60" pos:end="215:60"><expr pos:start="215:60" pos:end="215:60"><literal type="number" pos:start="215:60" pos:end="215:60">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="219:5" pos:end="219:70"><expr pos:start="219:5" pos:end="219:69"><call pos:start="219:5" pos:end="219:69"><name pos:start="219:5" pos:end="219:25">sysbus_create_varargs</name><argument_list pos:start="219:26" pos:end="219:69">(<argument pos:start="219:27" pos:end="219:33"><expr pos:start="219:27" pos:end="219:33"><literal type="string" pos:start="219:27" pos:end="219:33">"pl181"</literal></expr></argument>, <argument pos:start="219:36" pos:end="219:45"><expr pos:start="219:36" pos:end="219:45"><literal type="number" pos:start="219:36" pos:end="219:45">0x10005000</literal></expr></argument>, <argument pos:start="219:48" pos:end="219:54"><expr pos:start="219:48" pos:end="219:54"><name pos:start="219:48" pos:end="219:54"><name pos:start="219:48" pos:end="219:50">sic</name><index pos:start="219:51" pos:end="219:54">[<expr pos:start="219:52" pos:end="219:53"><literal type="number" pos:start="219:52" pos:end="219:53">22</literal></expr>]</index></name></expr></argument>, <argument pos:start="219:57" pos:end="219:62"><expr pos:start="219:57" pos:end="219:62"><name pos:start="219:57" pos:end="219:62"><name pos:start="219:57" pos:end="219:59">sic</name><index pos:start="219:60" pos:end="219:62">[<expr pos:start="219:61" pos:end="219:61"><literal type="number" pos:start="219:61" pos:end="219:61">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="219:65" pos:end="219:68"><expr pos:start="219:65" pos:end="219:68"><name pos:start="219:65" pos:end="219:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:70"><expr pos:start="221:5" pos:end="221:69"><call pos:start="221:5" pos:end="221:69"><name pos:start="221:5" pos:end="221:25">sysbus_create_varargs</name><argument_list pos:start="221:26" pos:end="221:69">(<argument pos:start="221:27" pos:end="221:33"><expr pos:start="221:27" pos:end="221:33"><literal type="string" pos:start="221:27" pos:end="221:33">"pl181"</literal></expr></argument>, <argument pos:start="221:36" pos:end="221:45"><expr pos:start="221:36" pos:end="221:45"><literal type="number" pos:start="221:36" pos:end="221:45">0x1000b000</literal></expr></argument>, <argument pos:start="221:48" pos:end="221:54"><expr pos:start="221:48" pos:end="221:54"><name pos:start="221:48" pos:end="221:54"><name pos:start="221:48" pos:end="221:50">sic</name><index pos:start="221:51" pos:end="221:54">[<expr pos:start="221:52" pos:end="221:53"><literal type="number" pos:start="221:52" pos:end="221:53">23</literal></expr>]</index></name></expr></argument>, <argument pos:start="221:57" pos:end="221:62"><expr pos:start="221:57" pos:end="221:62"><name pos:start="221:57" pos:end="221:62"><name pos:start="221:57" pos:end="221:59">sic</name><index pos:start="221:60" pos:end="221:62">[<expr pos:start="221:61" pos:end="221:61"><literal type="number" pos:start="221:61" pos:end="221:61">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="221:65" pos:end="221:68"><expr pos:start="221:65" pos:end="221:68"><name pos:start="221:65" pos:end="221:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="225:5" pos:end="225:36">/* Add PL031 Real Time Clock. */</comment>

    <expr_stmt pos:start="227:5" pos:end="227:55"><expr pos:start="227:5" pos:end="227:54"><call pos:start="227:5" pos:end="227:54"><name pos:start="227:5" pos:end="227:24">sysbus_create_simple</name><argument_list pos:start="227:25" pos:end="227:54">(<argument pos:start="227:26" pos:end="227:32"><expr pos:start="227:26" pos:end="227:32"><literal type="string" pos:start="227:26" pos:end="227:32">"pl031"</literal></expr></argument>, <argument pos:start="227:35" pos:end="227:44"><expr pos:start="227:35" pos:end="227:44"><literal type="number" pos:start="227:35" pos:end="227:44">0x101e8000</literal></expr></argument>, <argument pos:start="227:47" pos:end="227:53"><expr pos:start="227:47" pos:end="227:53"><name pos:start="227:47" pos:end="227:53"><name pos:start="227:47" pos:end="227:49">pic</name><index pos:start="227:50" pos:end="227:53">[<expr pos:start="227:51" pos:end="227:52"><literal type="number" pos:start="227:51" pos:end="227:52">10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="231:5" pos:end="231:66"><expr pos:start="231:5" pos:end="231:65"><name pos:start="231:5" pos:end="231:7">dev</name> <operator pos:start="231:9" pos:end="231:9">=</operator> <call pos:start="231:11" pos:end="231:65"><name pos:start="231:11" pos:end="231:30">sysbus_create_simple</name><argument_list pos:start="231:31" pos:end="231:65">(<argument pos:start="231:32" pos:end="231:46"><expr pos:start="231:32" pos:end="231:46"><literal type="string" pos:start="231:32" pos:end="231:46">"versatile_i2c"</literal></expr></argument>, <argument pos:start="231:49" pos:end="231:58"><expr pos:start="231:49" pos:end="231:58"><literal type="number" pos:start="231:49" pos:end="231:58">0x10002000</literal></expr></argument>, <argument pos:start="231:61" pos:end="231:64"><expr pos:start="231:61" pos:end="231:64"><name pos:start="231:61" pos:end="231:64">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:51"><expr pos:start="233:5" pos:end="233:50"><name pos:start="233:5" pos:end="233:7">i2c</name> <operator pos:start="233:9" pos:end="233:9">=</operator> <operator pos:start="233:11" pos:end="233:11">(</operator><name pos:start="233:12" pos:end="233:17">I2CBus</name> <operator pos:start="233:19" pos:end="233:19">*</operator><operator pos:start="233:20" pos:end="233:20">)</operator><call pos:start="233:21" pos:end="233:50"><name pos:start="233:21" pos:end="233:38">qdev_get_child_bus</name><argument_list pos:start="233:39" pos:end="233:50">(<argument pos:start="233:40" pos:end="233:42"><expr pos:start="233:40" pos:end="233:42"><name pos:start="233:40" pos:end="233:42">dev</name></expr></argument>, <argument pos:start="233:45" pos:end="233:49"><expr pos:start="233:45" pos:end="233:49"><literal type="string" pos:start="233:45" pos:end="233:49">"i2c"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:42"><expr pos:start="235:5" pos:end="235:41"><call pos:start="235:5" pos:end="235:41"><name pos:start="235:5" pos:end="235:20">i2c_create_slave</name><argument_list pos:start="235:21" pos:end="235:41">(<argument pos:start="235:22" pos:end="235:24"><expr pos:start="235:22" pos:end="235:24"><name pos:start="235:22" pos:end="235:24">i2c</name></expr></argument>, <argument pos:start="235:27" pos:end="235:34"><expr pos:start="235:27" pos:end="235:34"><literal type="string" pos:start="235:27" pos:end="235:34">"ds1338"</literal></expr></argument>, <argument pos:start="235:37" pos:end="235:40"><expr pos:start="235:37" pos:end="235:40"><literal type="number" pos:start="235:37" pos:end="235:40">0x68</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="239:5" pos:end="239:54">/* Add PL041 AACI Interface to the LM4549 codec */</comment>

    <expr_stmt pos:start="241:5" pos:end="241:39"><expr pos:start="241:5" pos:end="241:38"><name pos:start="241:5" pos:end="241:9">pl041</name> <operator pos:start="241:11" pos:end="241:11">=</operator> <call pos:start="241:13" pos:end="241:38"><name pos:start="241:13" pos:end="241:23">qdev_create</name><argument_list pos:start="241:24" pos:end="241:38">(<argument pos:start="241:25" pos:end="241:28"><expr pos:start="241:25" pos:end="241:28"><name pos:start="241:25" pos:end="241:28">NULL</name></expr></argument>, <argument pos:start="241:31" pos:end="241:37"><expr pos:start="241:31" pos:end="241:37"><literal type="string" pos:start="241:31" pos:end="241:37">"pl041"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:54"><expr pos:start="243:5" pos:end="243:53"><call pos:start="243:5" pos:end="243:53"><name pos:start="243:5" pos:end="243:24">qdev_prop_set_uint32</name><argument_list pos:start="243:25" pos:end="243:53">(<argument pos:start="243:26" pos:end="243:30"><expr pos:start="243:26" pos:end="243:30"><name pos:start="243:26" pos:end="243:30">pl041</name></expr></argument>, <argument pos:start="243:33" pos:end="243:47"><expr pos:start="243:33" pos:end="243:47"><literal type="string" pos:start="243:33" pos:end="243:47">"nc_fifo_depth"</literal></expr></argument>, <argument pos:start="243:50" pos:end="243:52"><expr pos:start="243:50" pos:end="243:52"><literal type="number" pos:start="243:50" pos:end="243:52">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:28"><expr pos:start="245:5" pos:end="245:27"><call pos:start="245:5" pos:end="245:27"><name pos:start="245:5" pos:end="245:20">qdev_init_nofail</name><argument_list pos:start="245:21" pos:end="245:27">(<argument pos:start="245:22" pos:end="245:26"><expr pos:start="245:22" pos:end="245:26"><name pos:start="245:22" pos:end="245:26">pl041</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:58"><expr pos:start="247:5" pos:end="247:57"><call pos:start="247:5" pos:end="247:57"><name pos:start="247:5" pos:end="247:19">sysbus_mmio_map</name><argument_list pos:start="247:20" pos:end="247:57">(<argument pos:start="247:21" pos:end="247:41"><expr pos:start="247:21" pos:end="247:41"><call pos:start="247:21" pos:end="247:41"><name pos:start="247:21" pos:end="247:34">SYS_BUS_DEVICE</name><argument_list pos:start="247:35" pos:end="247:41">(<argument pos:start="247:36" pos:end="247:40"><expr pos:start="247:36" pos:end="247:40"><name pos:start="247:36" pos:end="247:40">pl041</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="247:44" pos:end="247:44"><expr pos:start="247:44" pos:end="247:44"><literal type="number" pos:start="247:44" pos:end="247:44">0</literal></expr></argument>, <argument pos:start="247:47" pos:end="247:56"><expr pos:start="247:47" pos:end="247:56"><literal type="number" pos:start="247:47" pos:end="247:56">0x10004000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:58"><expr pos:start="249:5" pos:end="249:57"><call pos:start="249:5" pos:end="249:57"><name pos:start="249:5" pos:end="249:22">sysbus_connect_irq</name><argument_list pos:start="249:23" pos:end="249:57">(<argument pos:start="249:24" pos:end="249:44"><expr pos:start="249:24" pos:end="249:44"><call pos:start="249:24" pos:end="249:44"><name pos:start="249:24" pos:end="249:37">SYS_BUS_DEVICE</name><argument_list pos:start="249:38" pos:end="249:44">(<argument pos:start="249:39" pos:end="249:43"><expr pos:start="249:39" pos:end="249:43"><name pos:start="249:39" pos:end="249:43">pl041</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="249:47" pos:end="249:47"><expr pos:start="249:47" pos:end="249:47"><literal type="number" pos:start="249:47" pos:end="249:47">0</literal></expr></argument>, <argument pos:start="249:50" pos:end="249:56"><expr pos:start="249:50" pos:end="249:56"><name pos:start="249:50" pos:end="249:56"><name pos:start="249:50" pos:end="249:52">sic</name><index pos:start="249:53" pos:end="249:56">[<expr pos:start="249:54" pos:end="249:55"><literal type="number" pos:start="249:54" pos:end="249:55">24</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="253:5" pos:end="253:39">/* Memory map for Versatile/PB:  */</comment>

    <comment type="block" pos:start="255:5" pos:end="255:39">/* 0x10000000 System registers.  */</comment>

    <comment type="block" pos:start="257:5" pos:end="257:54">/* 0x10001000 PCI controller config registers.  */</comment>

    <comment type="block" pos:start="259:5" pos:end="259:43">/* 0x10002000 Serial bus interface.  */</comment>

    <comment type="block" pos:start="261:5" pos:end="261:54">/*  0x10003000 Secondary interrupt controller.  */</comment>

    <comment type="block" pos:start="263:5" pos:end="263:35">/* 0x10004000 AACI (audio).  */</comment>

    <comment type="block" pos:start="265:5" pos:end="265:29">/*  0x10005000 MMCI0.  */</comment>

    <comment type="block" pos:start="267:5" pos:end="267:39">/*  0x10006000 KMI0 (keyboard).  */</comment>

    <comment type="block" pos:start="269:5" pos:end="269:36">/*  0x10007000 KMI1 (mouse).  */</comment>

    <comment type="block" pos:start="271:5" pos:end="271:46">/* 0x10008000 Character LCD Interface.  */</comment>

    <comment type="block" pos:start="273:5" pos:end="273:29">/*  0x10009000 UART3.  */</comment>

    <comment type="block" pos:start="275:5" pos:end="275:35">/* 0x1000a000 Smart card 1.  */</comment>

    <comment type="block" pos:start="277:5" pos:end="277:29">/*  0x1000b000 MMCI1.  */</comment>

    <comment type="block" pos:start="279:5" pos:end="279:32">/*  0x10010000 Ethernet.  */</comment>

    <comment type="block" pos:start="281:5" pos:end="281:26">/* 0x10020000 USB.  */</comment>

    <comment type="block" pos:start="283:5" pos:end="283:27">/* 0x10100000 SSMC.  */</comment>

    <comment type="block" pos:start="285:5" pos:end="285:27">/* 0x10110000 MPMC.  */</comment>

    <comment type="block" pos:start="287:5" pos:end="287:39">/*  0x10120000 CLCD Controller.  */</comment>

    <comment type="block" pos:start="289:5" pos:end="289:38">/*  0x10130000 DMA Controller.  */</comment>

    <comment type="block" pos:start="291:5" pos:end="291:53">/*  0x10140000 Vectored interrupt controller.  */</comment>

    <comment type="block" pos:start="293:5" pos:end="293:44">/* 0x101d0000 AHB Monitor Interface.  */</comment>

    <comment type="block" pos:start="295:5" pos:end="295:40">/* 0x101e0000 System Controller.  */</comment>

    <comment type="block" pos:start="297:5" pos:end="297:41">/* 0x101e1000 Watchdog Interface.  */</comment>

    <comment type="block" pos:start="299:5" pos:end="299:32">/* 0x101e2000 Timer 0/1.  */</comment>

    <comment type="block" pos:start="301:5" pos:end="301:32">/* 0x101e3000 Timer 2/3.  */</comment>

    <comment type="block" pos:start="303:5" pos:end="303:34">/* 0x101e4000 GPIO port 0.  */</comment>

    <comment type="block" pos:start="305:5" pos:end="305:34">/* 0x101e5000 GPIO port 1.  */</comment>

    <comment type="block" pos:start="307:5" pos:end="307:34">/* 0x101e6000 GPIO port 2.  */</comment>

    <comment type="block" pos:start="309:5" pos:end="309:34">/* 0x101e7000 GPIO port 3.  */</comment>

    <comment type="block" pos:start="311:5" pos:end="311:26">/* 0x101e8000 RTC.  */</comment>

    <comment type="block" pos:start="313:5" pos:end="313:35">/* 0x101f0000 Smart card 0.  */</comment>

    <comment type="block" pos:start="315:5" pos:end="315:29">/*  0x101f1000 UART0.  */</comment>

    <comment type="block" pos:start="317:5" pos:end="317:29">/*  0x101f2000 UART1.  */</comment>

    <comment type="block" pos:start="319:5" pos:end="319:29">/*  0x101f3000 UART2.  */</comment>

    <comment type="block" pos:start="321:5" pos:end="321:27">/* 0x101f4000 SSPI.  */</comment>

    <comment type="block" pos:start="323:5" pos:end="323:30">/* 0x34000000 NOR Flash */</comment>



    <expr_stmt pos:start="327:5" pos:end="327:39"><expr pos:start="327:5" pos:end="327:38"><name pos:start="327:5" pos:end="327:9">dinfo</name> <operator pos:start="327:11" pos:end="327:11">=</operator> <call pos:start="327:13" pos:end="327:38"><name pos:start="327:13" pos:end="327:21">drive_get</name><argument_list pos:start="327:22" pos:end="327:38">(<argument pos:start="327:23" pos:end="327:31"><expr pos:start="327:23" pos:end="327:31"><name pos:start="327:23" pos:end="327:31">IF_PFLASH</name></expr></argument>, <argument pos:start="327:34" pos:end="327:34"><expr pos:start="327:34" pos:end="327:34"><literal type="number" pos:start="327:34" pos:end="327:34">0</literal></expr></argument>, <argument pos:start="327:37" pos:end="327:37"><expr pos:start="327:37" pos:end="327:37"><literal type="number" pos:start="327:37" pos:end="327:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="329:5" pos:end="343:5"><if pos:start="329:5" pos:end="343:5">if <condition pos:start="329:8" pos:end="339:61">(<expr pos:start="329:9" pos:end="339:60"><operator pos:start="329:9" pos:end="329:9">!</operator><call pos:start="329:10" pos:end="339:60"><name pos:start="329:10" pos:end="329:30">pflash_cfi01_register</name><argument_list pos:start="329:31" pos:end="339:60">(<argument pos:start="329:32" pos:end="329:51"><expr pos:start="329:32" pos:end="329:51"><name pos:start="329:32" pos:end="329:51">VERSATILE_FLASH_ADDR</name></expr></argument>, <argument pos:start="329:54" pos:end="329:57"><expr pos:start="329:54" pos:end="329:57"><name pos:start="329:54" pos:end="329:57">NULL</name></expr></argument>, <argument pos:start="329:60" pos:end="329:76"><expr pos:start="329:60" pos:end="329:76"><literal type="string" pos:start="329:60" pos:end="329:76">"versatile.flash"</literal></expr></argument>,

                          <argument pos:start="331:27" pos:end="331:46"><expr pos:start="331:27" pos:end="331:46"><name pos:start="331:27" pos:end="331:46">VERSATILE_FLASH_SIZE</name></expr></argument>,

                          <argument pos:start="333:27" pos:end="333:75"><expr pos:start="333:27" pos:end="333:75"><ternary pos:start="333:27" pos:end="333:75"><condition pos:start="333:27" pos:end="333:33"><expr pos:start="333:27" pos:end="333:31"><name pos:start="333:27" pos:end="333:31">dinfo</name></expr> ?</condition><then pos:start="333:35" pos:end="333:68"> <expr pos:start="333:35" pos:end="333:68"><call pos:start="333:35" pos:end="333:68"><name pos:start="333:35" pos:end="333:40">blk_bs</name><argument_list pos:start="333:41" pos:end="333:68">(<argument pos:start="333:42" pos:end="333:67"><expr pos:start="333:42" pos:end="333:67"><call pos:start="333:42" pos:end="333:67"><name pos:start="333:42" pos:end="333:60">blk_by_legacy_dinfo</name><argument_list pos:start="333:61" pos:end="333:67">(<argument pos:start="333:62" pos:end="333:66"><expr pos:start="333:62" pos:end="333:66"><name pos:start="333:62" pos:end="333:66">dinfo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> </then><else pos:start="333:70" pos:end="333:75">: <expr pos:start="333:72" pos:end="333:75"><name pos:start="333:72" pos:end="333:75">NULL</name></expr></else></ternary></expr></argument>,

                          <argument pos:start="335:27" pos:end="335:51"><expr pos:start="335:27" pos:end="335:51"><name pos:start="335:27" pos:end="335:51">VERSATILE_FLASH_SECT_SIZE</name></expr></argument>,

                          <argument pos:start="337:27" pos:end="337:74"><expr pos:start="337:27" pos:end="337:74"><name pos:start="337:27" pos:end="337:46">VERSATILE_FLASH_SIZE</name> <operator pos:start="337:48" pos:end="337:48">/</operator> <name pos:start="337:50" pos:end="337:74">VERSATILE_FLASH_SECT_SIZE</name></expr></argument>,

                          <argument pos:start="339:27" pos:end="339:27"><expr pos:start="339:27" pos:end="339:27"><literal type="number" pos:start="339:27" pos:end="339:27">4</literal></expr></argument>, <argument pos:start="339:30" pos:end="339:35"><expr pos:start="339:30" pos:end="339:35"><literal type="number" pos:start="339:30" pos:end="339:35">0x0089</literal></expr></argument>, <argument pos:start="339:38" pos:end="339:43"><expr pos:start="339:38" pos:end="339:43"><literal type="number" pos:start="339:38" pos:end="339:43">0x0018</literal></expr></argument>, <argument pos:start="339:46" pos:end="339:51"><expr pos:start="339:46" pos:end="339:51"><literal type="number" pos:start="339:46" pos:end="339:51">0x0000</literal></expr></argument>, <argument pos:start="339:54" pos:end="339:56"><expr pos:start="339:54" pos:end="339:56"><literal type="number" pos:start="339:54" pos:end="339:56">0x0</literal></expr></argument>, <argument pos:start="339:59" pos:end="339:59"><expr pos:start="339:59" pos:end="339:59"><literal type="number" pos:start="339:59" pos:end="339:59">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="339:63" pos:end="343:5">{<block_content pos:start="341:9" pos:end="341:67">

        <expr_stmt pos:start="341:9" pos:end="341:67"><expr pos:start="341:9" pos:end="341:66"><call pos:start="341:9" pos:end="341:66"><name pos:start="341:9" pos:end="341:15">fprintf</name><argument_list pos:start="341:16" pos:end="341:66">(<argument pos:start="341:17" pos:end="341:22"><expr pos:start="341:17" pos:end="341:22"><name pos:start="341:17" pos:end="341:22">stderr</name></expr></argument>, <argument pos:start="341:25" pos:end="341:65"><expr pos:start="341:25" pos:end="341:65"><literal type="string" pos:start="341:25" pos:end="341:65">"qemu: Error registering flash memory.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="347:5" pos:end="347:49"><expr pos:start="347:5" pos:end="347:48"><name pos:start="347:5" pos:end="347:28"><name pos:start="347:5" pos:end="347:19">versatile_binfo</name><operator pos:start="347:20" pos:end="347:20">.</operator><name pos:start="347:21" pos:end="347:28">ram_size</name></name> <operator pos:start="347:30" pos:end="347:30">=</operator> <name pos:start="347:32" pos:end="347:48"><name pos:start="347:32" pos:end="347:38">machine</name><operator pos:start="347:39" pos:end="347:40">-&gt;</operator><name pos:start="347:41" pos:end="347:48">ram_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="349:5" pos:end="349:63"><expr pos:start="349:5" pos:end="349:62"><name pos:start="349:5" pos:end="349:35"><name pos:start="349:5" pos:end="349:19">versatile_binfo</name><operator pos:start="349:20" pos:end="349:20">.</operator><name pos:start="349:21" pos:end="349:35">kernel_filename</name></name> <operator pos:start="349:37" pos:end="349:37">=</operator> <name pos:start="349:39" pos:end="349:62"><name pos:start="349:39" pos:end="349:45">machine</name><operator pos:start="349:46" pos:end="349:47">-&gt;</operator><name pos:start="349:48" pos:end="349:62">kernel_filename</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="351:5" pos:end="351:61"><expr pos:start="351:5" pos:end="351:60"><name pos:start="351:5" pos:end="351:34"><name pos:start="351:5" pos:end="351:19">versatile_binfo</name><operator pos:start="351:20" pos:end="351:20">.</operator><name pos:start="351:21" pos:end="351:34">kernel_cmdline</name></name> <operator pos:start="351:36" pos:end="351:36">=</operator> <name pos:start="351:38" pos:end="351:60"><name pos:start="351:38" pos:end="351:44">machine</name><operator pos:start="351:45" pos:end="351:46">-&gt;</operator><name pos:start="351:47" pos:end="351:60">kernel_cmdline</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="353:5" pos:end="353:63"><expr pos:start="353:5" pos:end="353:62"><name pos:start="353:5" pos:end="353:35"><name pos:start="353:5" pos:end="353:19">versatile_binfo</name><operator pos:start="353:20" pos:end="353:20">.</operator><name pos:start="353:21" pos:end="353:35">initrd_filename</name></name> <operator pos:start="353:37" pos:end="353:37">=</operator> <name pos:start="353:39" pos:end="353:62"><name pos:start="353:39" pos:end="353:45">machine</name><operator pos:start="353:46" pos:end="353:47">-&gt;</operator><name pos:start="353:48" pos:end="353:62">initrd_filename</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="355:5" pos:end="355:40"><expr pos:start="355:5" pos:end="355:39"><name pos:start="355:5" pos:end="355:28"><name pos:start="355:5" pos:end="355:19">versatile_binfo</name><operator pos:start="355:20" pos:end="355:20">.</operator><name pos:start="355:21" pos:end="355:28">board_id</name></name> <operator pos:start="355:30" pos:end="355:30">=</operator> <name pos:start="355:32" pos:end="355:39">board_id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="357:5" pos:end="357:43"><expr pos:start="357:5" pos:end="357:42"><call pos:start="357:5" pos:end="357:42"><name pos:start="357:5" pos:end="357:19">arm_load_kernel</name><argument_list pos:start="357:20" pos:end="357:42">(<argument pos:start="357:21" pos:end="357:23"><expr pos:start="357:21" pos:end="357:23"><name pos:start="357:21" pos:end="357:23">cpu</name></expr></argument>, <argument pos:start="357:26" pos:end="357:41"><expr pos:start="357:26" pos:end="357:41"><operator pos:start="357:26" pos:end="357:26">&amp;</operator><name pos:start="357:27" pos:end="357:41">versatile_binfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
