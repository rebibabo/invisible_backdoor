<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21666.c" pos:tabs="8"><function pos:start="1:1" pos:end="1017:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:27">MPV_encode_init</name><parameter_list pos:start="1:28" pos:end="1:50">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1017:1">{<block_content pos:start="5:5" pos:end="1015:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">chroma_h_shift</name></decl>, <decl pos:start="9:25" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:38">chroma_v_shift</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><call pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:23">MPV_encode_defaults</name><argument_list pos:start="13:24" pos:end="13:26">(<argument pos:start="13:25" pos:end="13:25"><expr pos:start="13:25" pos:end="13:25"><name pos:start="13:25" pos:end="13:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="17:5" pos:end="57:5">switch <condition pos:start="17:12" pos:end="17:28">(<expr pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:17">avctx</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:27">codec_id</name></name></expr>)</condition> <block pos:start="17:30" pos:end="57:5">{<block_content pos:start="19:5" pos:end="55:9">

    <case pos:start="19:5" pos:end="19:29">case <expr pos:start="19:10" pos:end="19:28"><name pos:start="19:10" pos:end="19:28">CODEC_ID_MPEG2VIDEO</name></expr>:</case>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if<condition pos:start="21:11" pos:end="21:82">(<expr pos:start="21:12" pos:end="21:81"><name pos:start="21:12" pos:end="21:25"><name pos:start="21:12" pos:end="21:16">avctx</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:25">pix_fmt</name></name> <operator pos:start="21:27" pos:end="21:28">!=</operator> <name pos:start="21:30" pos:end="21:44">PIX_FMT_YUV420P</name> <operator pos:start="21:46" pos:end="21:47">&amp;&amp;</operator> <name pos:start="21:49" pos:end="21:62"><name pos:start="21:49" pos:end="21:53">avctx</name><operator pos:start="21:54" pos:end="21:55">-&gt;</operator><name pos:start="21:56" pos:end="21:62">pix_fmt</name></name> <operator pos:start="21:64" pos:end="21:65">!=</operator> <name pos:start="21:67" pos:end="21:81">PIX_FMT_YUV422P</name></expr>)</condition><block pos:start="21:83" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:22">

            <expr_stmt pos:start="23:13" pos:end="23:82"><expr pos:start="23:13" pos:end="23:81"><call pos:start="23:13" pos:end="23:81"><name pos:start="23:13" pos:end="23:18">av_log</name><argument_list pos:start="23:19" pos:end="23:81">(<argument pos:start="23:20" pos:end="23:24"><expr pos:start="23:20" pos:end="23:24"><name pos:start="23:20" pos:end="23:24">avctx</name></expr></argument>, <argument pos:start="23:27" pos:end="23:38"><expr pos:start="23:27" pos:end="23:38"><name pos:start="23:27" pos:end="23:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:41" pos:end="23:80"><expr pos:start="23:41" pos:end="23:80"><literal type="string" pos:start="23:41" pos:end="23:80">"only YUV420 and YUV422 are supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="25:13" pos:end="25:22">return <expr pos:start="25:20" pos:end="25:21"><operator pos:start="25:20" pos:end="25:20">-</operator><literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:24">case <expr pos:start="31:10" pos:end="31:23"><name pos:start="31:10" pos:end="31:23">CODEC_ID_LJPEG</name></expr>:</case>

    <case pos:start="33:5" pos:end="33:24">case <expr pos:start="33:10" pos:end="33:23"><name pos:start="33:10" pos:end="33:23">CODEC_ID_MJPEG</name></expr>:</case>

        <if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="43:9">if<condition pos:start="35:11" pos:end="37:143">(<expr pos:start="35:12" pos:end="37:142"><name pos:start="35:12" pos:end="35:25"><name pos:start="35:12" pos:end="35:16">avctx</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:25">pix_fmt</name></name> <operator pos:start="35:27" pos:end="35:28">!=</operator> <name pos:start="35:30" pos:end="35:45">PIX_FMT_YUVJ420P</name> <operator pos:start="35:47" pos:end="35:48">&amp;&amp;</operator> <name pos:start="35:50" pos:end="35:63"><name pos:start="35:50" pos:end="35:54">avctx</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:63">pix_fmt</name></name> <operator pos:start="35:65" pos:end="35:66">!=</operator> <name pos:start="35:68" pos:end="35:83">PIX_FMT_YUVJ422P</name> <operator pos:start="35:85" pos:end="35:86">&amp;&amp;</operator> <name pos:start="35:88" pos:end="35:101"><name pos:start="35:88" pos:end="35:92">avctx</name><operator pos:start="35:93" pos:end="35:94">-&gt;</operator><name pos:start="35:95" pos:end="35:101">pix_fmt</name></name> <operator pos:start="35:103" pos:end="35:104">!=</operator> <name pos:start="35:106" pos:end="35:118">PIX_FMT_RGB32</name> <operator pos:start="35:120" pos:end="35:121">&amp;&amp;</operator>

           <operator pos:start="37:12" pos:end="37:12">(</operator><operator pos:start="37:13" pos:end="37:13">(</operator><name pos:start="37:14" pos:end="37:27"><name pos:start="37:14" pos:end="37:18">avctx</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:27">pix_fmt</name></name> <operator pos:start="37:29" pos:end="37:30">!=</operator> <name pos:start="37:32" pos:end="37:46">PIX_FMT_YUV420P</name> <operator pos:start="37:48" pos:end="37:49">&amp;&amp;</operator> <name pos:start="37:51" pos:end="37:64"><name pos:start="37:51" pos:end="37:55">avctx</name><operator pos:start="37:56" pos:end="37:57">-&gt;</operator><name pos:start="37:58" pos:end="37:64">pix_fmt</name></name> <operator pos:start="37:66" pos:end="37:67">!=</operator> <name pos:start="37:69" pos:end="37:83">PIX_FMT_YUV422P</name><operator pos:start="37:84" pos:end="37:84">)</operator> <operator pos:start="37:86" pos:end="37:87">||</operator> <name pos:start="37:89" pos:end="37:116"><name pos:start="37:89" pos:end="37:93">avctx</name><operator pos:start="37:94" pos:end="37:95">-&gt;</operator><name pos:start="37:96" pos:end="37:116">strict_std_compliance</name></name><operator pos:start="37:117" pos:end="37:117">&gt;</operator><name pos:start="37:118" pos:end="37:141">FF_COMPLIANCE_INOFFICIAL</name><operator pos:start="37:142" pos:end="37:142">)</operator></expr>)</condition><block pos:start="37:144" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:22">

            <expr_stmt pos:start="39:13" pos:end="39:78"><expr pos:start="39:13" pos:end="39:77"><call pos:start="39:13" pos:end="39:77"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="39:77">(<argument pos:start="39:20" pos:end="39:24"><expr pos:start="39:20" pos:end="39:24"><name pos:start="39:20" pos:end="39:24">avctx</name></expr></argument>, <argument pos:start="39:27" pos:end="39:38"><expr pos:start="39:27" pos:end="39:38"><name pos:start="39:27" pos:end="39:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:41" pos:end="39:76"><expr pos:start="39:41" pos:end="39:76"><literal type="string" pos:start="39:41" pos:end="39:76">"colorspace not supported in jpeg\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:22">return <expr pos:start="41:20" pos:end="41:21"><operator pos:start="41:20" pos:end="41:20">-</operator><literal type="number" pos:start="41:21" pos:end="41:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <default pos:start="47:5" pos:end="47:12">default:</default>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if<condition pos:start="49:11" pos:end="49:45">(<expr pos:start="49:12" pos:end="49:44"><name pos:start="49:12" pos:end="49:25"><name pos:start="49:12" pos:end="49:16">avctx</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:25">pix_fmt</name></name> <operator pos:start="49:27" pos:end="49:28">!=</operator> <name pos:start="49:30" pos:end="49:44">PIX_FMT_YUV420P</name></expr>)</condition><block pos:start="49:46" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:22">

            <expr_stmt pos:start="51:13" pos:end="51:70"><expr pos:start="51:13" pos:end="51:69"><call pos:start="51:13" pos:end="51:69"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="51:69">(<argument pos:start="51:20" pos:end="51:24"><expr pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:24">avctx</name></expr></argument>, <argument pos:start="51:27" pos:end="51:38"><expr pos:start="51:27" pos:end="51:38"><name pos:start="51:27" pos:end="51:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:41" pos:end="51:68"><expr pos:start="51:41" pos:end="51:68"><literal type="string" pos:start="51:41" pos:end="51:68">"only YUV420 is supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:22">return <expr pos:start="53:20" pos:end="53:21"><operator pos:start="53:20" pos:end="53:20">-</operator><literal type="number" pos:start="53:21" pos:end="53:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></switch>



    <switch pos:start="61:5" pos:end="81:5">switch <condition pos:start="61:12" pos:end="61:27">(<expr pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:17">avctx</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:26">pix_fmt</name></name></expr>)</condition> <block pos:start="61:29" pos:end="81:5">{<block_content pos:start="63:5" pos:end="79:14">

    <case pos:start="63:5" pos:end="63:26">case <expr pos:start="63:10" pos:end="63:25"><name pos:start="63:10" pos:end="63:25">PIX_FMT_YUVJ422P</name></expr>:</case>

    <case pos:start="65:5" pos:end="65:25">case <expr pos:start="65:10" pos:end="65:24"><name pos:start="65:10" pos:end="65:24">PIX_FMT_YUV422P</name></expr>:</case>

        <expr_stmt pos:start="67:9" pos:end="67:38"><expr pos:start="67:9" pos:end="67:37"><name pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:24">chroma_format</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <name pos:start="67:28" pos:end="67:37">CHROMA_422</name></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:26">case <expr pos:start="71:10" pos:end="71:25"><name pos:start="71:10" pos:end="71:25">PIX_FMT_YUVJ420P</name></expr>:</case>

    <case pos:start="73:5" pos:end="73:25">case <expr pos:start="73:10" pos:end="73:24"><name pos:start="73:10" pos:end="73:24">PIX_FMT_YUV420P</name></expr>:</case>

    <default pos:start="75:5" pos:end="75:12">default:</default>

        <expr_stmt pos:start="77:9" pos:end="77:38"><expr pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:24">chroma_format</name></name> <operator pos:start="77:26" pos:end="77:26">=</operator> <name pos:start="77:28" pos:end="77:37">CHROMA_420</name></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="85:5" pos:end="85:34"><expr pos:start="85:5" pos:end="85:33"><name pos:start="85:5" pos:end="85:15"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:15">bit_rate</name></name> <operator pos:start="85:17" pos:end="85:17">=</operator> <name pos:start="85:19" pos:end="85:33"><name pos:start="85:19" pos:end="85:23">avctx</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:33">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:28"><expr pos:start="87:5" pos:end="87:27"><name pos:start="87:5" pos:end="87:12"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:12">width</name></name> <operator pos:start="87:14" pos:end="87:14">=</operator> <name pos:start="87:16" pos:end="87:27"><name pos:start="87:16" pos:end="87:20">avctx</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:27">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:30"><expr pos:start="89:5" pos:end="89:29"><name pos:start="89:5" pos:end="89:13"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:13">height</name></name> <operator pos:start="89:15" pos:end="89:15">=</operator> <name pos:start="89:17" pos:end="89:29"><name pos:start="89:17" pos:end="89:21">avctx</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:29">height</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if<condition pos:start="91:7" pos:end="91:88">(<expr pos:start="91:8" pos:end="91:87"><name pos:start="91:8" pos:end="91:22"><name pos:start="91:8" pos:end="91:12">avctx</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:22">gop_size</name></name> <operator pos:start="91:24" pos:end="91:24">&gt;</operator> <literal type="number" pos:start="91:26" pos:end="91:28">600</literal> <operator pos:start="91:30" pos:end="91:31">&amp;&amp;</operator> <name pos:start="91:33" pos:end="91:60"><name pos:start="91:33" pos:end="91:37">avctx</name><operator pos:start="91:38" pos:end="91:39">-&gt;</operator><name pos:start="91:40" pos:end="91:60">strict_std_compliance</name></name><operator pos:start="91:61" pos:end="91:61">&gt;</operator><name pos:start="91:62" pos:end="91:87">FF_COMPLIANCE_EXPERIMENTAL</name></expr>)</condition><block pos:start="91:89" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:28">

        <expr_stmt pos:start="93:9" pos:end="93:94"><expr pos:start="93:9" pos:end="93:93"><call pos:start="93:9" pos:end="93:93"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:93">(<argument pos:start="93:16" pos:end="93:20"><expr pos:start="93:16" pos:end="93:20"><name pos:start="93:16" pos:end="93:20">avctx</name></expr></argument>, <argument pos:start="93:23" pos:end="93:34"><expr pos:start="93:23" pos:end="93:34"><name pos:start="93:23" pos:end="93:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:37" pos:end="93:92"><expr pos:start="93:37" pos:end="93:92"><literal type="string" pos:start="93:37" pos:end="93:92">"Warning keyframe interval too large! reducing it ...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:28"><expr pos:start="95:9" pos:end="95:27"><name pos:start="95:9" pos:end="95:23"><name pos:start="95:9" pos:end="95:13">avctx</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:23">gop_size</name></name><operator pos:start="95:24" pos:end="95:24">=</operator><literal type="number" pos:start="95:25" pos:end="95:27">600</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:34"><expr pos:start="99:5" pos:end="99:33"><name pos:start="99:5" pos:end="99:15"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:15">gop_size</name></name> <operator pos:start="99:17" pos:end="99:17">=</operator> <name pos:start="99:19" pos:end="99:33"><name pos:start="99:19" pos:end="99:23">avctx</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:33">gop_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:21"><expr pos:start="101:5" pos:end="101:20"><name pos:start="101:5" pos:end="101:12"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:12">avctx</name></name> <operator pos:start="101:14" pos:end="101:14">=</operator> <name pos:start="101:16" pos:end="101:20">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:27"><expr pos:start="103:5" pos:end="103:26"><name pos:start="103:5" pos:end="103:12"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:12">flags</name></name><operator pos:start="103:13" pos:end="103:13">=</operator> <name pos:start="103:15" pos:end="103:26"><name pos:start="103:15" pos:end="103:19">avctx</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:26">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:29"><expr pos:start="105:5" pos:end="105:28"><name pos:start="105:5" pos:end="105:13"><name pos:start="105:5" pos:end="105:5">s</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:13">flags2</name></name><operator pos:start="105:14" pos:end="105:14">=</operator> <name pos:start="105:16" pos:end="105:28"><name pos:start="105:16" pos:end="105:20">avctx</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:28">flags2</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:41"><expr pos:start="107:5" pos:end="107:40"><name pos:start="107:5" pos:end="107:19"><name pos:start="107:5" pos:end="107:5">s</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:19">max_b_frames</name></name><operator pos:start="107:20" pos:end="107:20">=</operator> <name pos:start="107:22" pos:end="107:40"><name pos:start="107:22" pos:end="107:26">avctx</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:40">max_b_frames</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:34"><expr pos:start="109:5" pos:end="109:33"><name pos:start="109:5" pos:end="109:15"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:15">codec_id</name></name><operator pos:start="109:16" pos:end="109:16">=</operator> <name pos:start="109:18" pos:end="109:33"><name pos:start="109:18" pos:end="109:22">avctx</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:29">codec</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:33">id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:57"><expr pos:start="111:5" pos:end="111:56"><name pos:start="111:5" pos:end="111:26"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:26">luma_elim_threshold</name></name>  <operator pos:start="111:29" pos:end="111:29">=</operator> <name pos:start="111:31" pos:end="111:56"><name pos:start="111:31" pos:end="111:35">avctx</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:56">luma_elim_threshold</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:59"><expr pos:start="113:5" pos:end="113:58"><name pos:start="113:5" pos:end="113:28"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:28">chroma_elim_threshold</name></name><operator pos:start="113:29" pos:end="113:29">=</operator> <name pos:start="113:31" pos:end="113:58"><name pos:start="113:31" pos:end="113:35">avctx</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:58">chroma_elim_threshold</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:59"><expr pos:start="115:5" pos:end="115:58"><name pos:start="115:5" pos:end="115:28"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:28">strict_std_compliance</name></name><operator pos:start="115:29" pos:end="115:29">=</operator> <name pos:start="115:31" pos:end="115:58"><name pos:start="115:31" pos:end="115:35">avctx</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:58">strict_std_compliance</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:57"><expr pos:start="117:5" pos:end="117:56"><name pos:start="117:5" pos:end="117:24"><name pos:start="117:5" pos:end="117:5">s</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:24">data_partitioning</name></name><operator pos:start="117:25" pos:end="117:25">=</operator> <name pos:start="117:27" pos:end="117:38"><name pos:start="117:27" pos:end="117:31">avctx</name><operator pos:start="117:32" pos:end="117:33">-&gt;</operator><name pos:start="117:34" pos:end="117:38">flags</name></name> <operator pos:start="117:40" pos:end="117:40">&amp;</operator> <name pos:start="117:42" pos:end="117:56">CODEC_FLAG_PART</name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:59"><expr pos:start="119:5" pos:end="119:58"><name pos:start="119:5" pos:end="119:21"><name pos:start="119:5" pos:end="119:5">s</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:21">quarter_sample</name></name><operator pos:start="119:22" pos:end="119:22">=</operator> <operator pos:start="119:24" pos:end="119:24">(</operator><name pos:start="119:25" pos:end="119:36"><name pos:start="119:25" pos:end="119:29">avctx</name><operator pos:start="119:30" pos:end="119:31">-&gt;</operator><name pos:start="119:32" pos:end="119:36">flags</name></name> <operator pos:start="119:38" pos:end="119:38">&amp;</operator> <name pos:start="119:40" pos:end="119:54">CODEC_FLAG_QPEL</name><operator pos:start="119:55" pos:end="119:55">)</operator><operator pos:start="119:56" pos:end="119:57">!=</operator><literal type="number" pos:start="119:58" pos:end="119:58">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:37"><expr pos:start="121:5" pos:end="121:36"><name pos:start="121:5" pos:end="121:17"><name pos:start="121:5" pos:end="121:5">s</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:17">mpeg_quant</name></name><operator pos:start="121:18" pos:end="121:18">=</operator> <name pos:start="121:20" pos:end="121:36"><name pos:start="121:20" pos:end="121:24">avctx</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:36">mpeg_quant</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:43"><expr pos:start="123:5" pos:end="123:42"><name pos:start="123:5" pos:end="123:15"><name pos:start="123:5" pos:end="123:5">s</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:15">rtp_mode</name></name><operator pos:start="123:16" pos:end="123:16">=</operator> <operator pos:start="123:18" pos:end="123:18">!</operator><operator pos:start="123:19" pos:end="123:19">!</operator><name pos:start="123:20" pos:end="123:42"><name pos:start="123:20" pos:end="123:24">avctx</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:42">rtp_payload_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:53"><expr pos:start="125:5" pos:end="125:52"><name pos:start="125:5" pos:end="125:25"><name pos:start="125:5" pos:end="125:5">s</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:25">intra_dc_precision</name></name><operator pos:start="125:26" pos:end="125:26">=</operator> <name pos:start="125:28" pos:end="125:52"><name pos:start="125:28" pos:end="125:32">avctx</name><operator pos:start="125:33" pos:end="125:34">-&gt;</operator><name pos:start="125:35" pos:end="125:52">intra_dc_precision</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:43"><expr pos:start="127:5" pos:end="127:42"><name pos:start="127:5" pos:end="127:25"><name pos:start="127:5" pos:end="127:5">s</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:25">user_specified_pts</name></name> <operator pos:start="127:27" pos:end="127:27">=</operator> <name pos:start="127:29" pos:end="127:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <if_stmt pos:start="131:5" pos:end="141:5"><if pos:start="131:5" pos:end="137:5">if <condition pos:start="131:8" pos:end="131:25">(<expr pos:start="131:9" pos:end="131:24"><name pos:start="131:9" pos:end="131:19"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:19">gop_size</name></name> <operator pos:start="131:21" pos:end="131:22">&lt;=</operator> <literal type="number" pos:start="131:24" pos:end="131:24">1</literal></expr>)</condition> <block pos:start="131:27" pos:end="137:5">{<block_content pos:start="133:9" pos:end="135:25">

        <expr_stmt pos:start="133:9" pos:end="133:26"><expr pos:start="133:9" pos:end="133:25"><name pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:21">intra_only</name></name> <operator pos:start="133:23" pos:end="133:23">=</operator> <literal type="number" pos:start="133:25" pos:end="133:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:25"><expr pos:start="135:9" pos:end="135:24"><name pos:start="135:9" pos:end="135:19"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:19">gop_size</name></name> <operator pos:start="135:21" pos:end="135:21">=</operator> <literal type="number" pos:start="135:23" pos:end="135:24">12</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="137:7" pos:end="141:5">else <block pos:start="137:12" pos:end="141:5">{<block_content pos:start="139:9" pos:end="139:26">

        <expr_stmt pos:start="139:9" pos:end="139:26"><expr pos:start="139:9" pos:end="139:25"><name pos:start="139:9" pos:end="139:21"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:21">intra_only</name></name> <operator pos:start="139:23" pos:end="139:23">=</operator> <literal type="number" pos:start="139:25" pos:end="139:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:36"><expr pos:start="145:5" pos:end="145:35"><name pos:start="145:5" pos:end="145:16"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:16">me_method</name></name> <operator pos:start="145:18" pos:end="145:18">=</operator> <name pos:start="145:20" pos:end="145:35"><name pos:start="145:20" pos:end="145:24">avctx</name><operator pos:start="145:25" pos:end="145:26">-&gt;</operator><name pos:start="145:27" pos:end="145:35">me_method</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="149:5" pos:end="149:22">/* Fixed QSCALE */</comment>

    <expr_stmt pos:start="151:5" pos:end="151:59"><expr pos:start="151:5" pos:end="151:58"><name pos:start="151:5" pos:end="151:19"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:19">fixed_qscale</name></name> <operator pos:start="151:21" pos:end="151:21">=</operator> <operator pos:start="151:23" pos:end="151:23">!</operator><operator pos:start="151:24" pos:end="151:24">!</operator><operator pos:start="151:25" pos:end="151:25">(</operator><name pos:start="151:26" pos:end="151:37"><name pos:start="151:26" pos:end="151:30">avctx</name><operator pos:start="151:31" pos:end="151:32">-&gt;</operator><name pos:start="151:33" pos:end="151:37">flags</name></name> <operator pos:start="151:39" pos:end="151:39">&amp;</operator> <name pos:start="151:41" pos:end="151:57">CODEC_FLAG_QSCALE</name><operator pos:start="151:58" pos:end="151:58">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="155:5" pos:end="169:43"><expr pos:start="155:5" pos:end="169:42"><name pos:start="155:5" pos:end="155:21"><name pos:start="155:5" pos:end="155:5">s</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:21">adaptive_quant</name></name><operator pos:start="155:22" pos:end="155:22">=</operator> <operator pos:start="155:24" pos:end="155:24">(</operator>   <name pos:start="155:28" pos:end="155:49"><name pos:start="155:28" pos:end="155:28">s</name><operator pos:start="155:29" pos:end="155:30">-&gt;</operator><name pos:start="155:31" pos:end="155:35">avctx</name><operator pos:start="155:36" pos:end="155:37">-&gt;</operator><name pos:start="155:38" pos:end="155:49">lumi_masking</name></name>

                        <operator pos:start="157:25" pos:end="157:26">||</operator> <name pos:start="157:28" pos:end="157:49"><name pos:start="157:28" pos:end="157:28">s</name><operator pos:start="157:29" pos:end="157:30">-&gt;</operator><name pos:start="157:31" pos:end="157:35">avctx</name><operator pos:start="157:36" pos:end="157:37">-&gt;</operator><name pos:start="157:38" pos:end="157:49">dark_masking</name></name>

                        <operator pos:start="159:25" pos:end="159:26">||</operator> <name pos:start="159:28" pos:end="159:58"><name pos:start="159:28" pos:end="159:28">s</name><operator pos:start="159:29" pos:end="159:30">-&gt;</operator><name pos:start="159:31" pos:end="159:35">avctx</name><operator pos:start="159:36" pos:end="159:37">-&gt;</operator><name pos:start="159:38" pos:end="159:58">temporal_cplx_masking</name></name>

                        <operator pos:start="161:25" pos:end="161:26">||</operator> <name pos:start="161:28" pos:end="161:57"><name pos:start="161:28" pos:end="161:28">s</name><operator pos:start="161:29" pos:end="161:30">-&gt;</operator><name pos:start="161:31" pos:end="161:35">avctx</name><operator pos:start="161:36" pos:end="161:37">-&gt;</operator><name pos:start="161:38" pos:end="161:57">spatial_cplx_masking</name></name>

                        <operator pos:start="163:25" pos:end="163:26">||</operator> <name pos:start="163:28" pos:end="163:46"><name pos:start="163:28" pos:end="163:28">s</name><operator pos:start="163:29" pos:end="163:30">-&gt;</operator><name pos:start="163:31" pos:end="163:35">avctx</name><operator pos:start="163:36" pos:end="163:37">-&gt;</operator><name pos:start="163:38" pos:end="163:46">p_masking</name></name>

                        <operator pos:start="165:25" pos:end="165:26">||</operator> <name pos:start="165:28" pos:end="165:51"><name pos:start="165:28" pos:end="165:28">s</name><operator pos:start="165:29" pos:end="165:30">-&gt;</operator><name pos:start="165:31" pos:end="165:35">avctx</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:51">border_masking</name></name>

                        <operator pos:start="167:25" pos:end="167:26">||</operator> <operator pos:start="167:28" pos:end="167:28">(</operator><name pos:start="167:29" pos:end="167:36"><name pos:start="167:29" pos:end="167:29">s</name><operator pos:start="167:30" pos:end="167:31">-&gt;</operator><name pos:start="167:32" pos:end="167:36">flags</name></name><operator pos:start="167:37" pos:end="167:37">&amp;</operator><name pos:start="167:38" pos:end="167:53">CODEC_FLAG_QP_RD</name><operator pos:start="167:54" pos:end="167:54">)</operator><operator pos:start="167:55" pos:end="167:55">)</operator>

                       <operator pos:start="169:24" pos:end="169:25">&amp;&amp;</operator> <operator pos:start="169:27" pos:end="169:27">!</operator><name pos:start="169:28" pos:end="169:42"><name pos:start="169:28" pos:end="169:28">s</name><operator pos:start="169:29" pos:end="169:30">-&gt;</operator><name pos:start="169:31" pos:end="169:42">fixed_qscale</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="173:5" pos:end="173:44"><expr pos:start="173:5" pos:end="173:43"><name pos:start="173:5" pos:end="173:11"><name pos:start="173:5" pos:end="173:5">s</name><operator pos:start="173:6" pos:end="173:7">-&gt;</operator><name pos:start="173:8" pos:end="173:11">obmc</name></name><operator pos:start="173:12" pos:end="173:12">=</operator> <operator pos:start="173:14" pos:end="173:14">!</operator><operator pos:start="173:15" pos:end="173:15">!</operator><operator pos:start="173:16" pos:end="173:16">(</operator><name pos:start="173:17" pos:end="173:24"><name pos:start="173:17" pos:end="173:17">s</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:24">flags</name></name> <operator pos:start="173:26" pos:end="173:26">&amp;</operator> <name pos:start="173:28" pos:end="173:42">CODEC_FLAG_OBMC</name><operator pos:start="173:43" pos:end="173:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:58"><expr pos:start="175:5" pos:end="175:57"><name pos:start="175:5" pos:end="175:18"><name pos:start="175:5" pos:end="175:5">s</name><operator pos:start="175:6" pos:end="175:7">-&gt;</operator><name pos:start="175:8" pos:end="175:18">loop_filter</name></name><operator pos:start="175:19" pos:end="175:19">=</operator> <operator pos:start="175:21" pos:end="175:21">!</operator><operator pos:start="175:22" pos:end="175:22">!</operator><operator pos:start="175:23" pos:end="175:23">(</operator><name pos:start="175:24" pos:end="175:31"><name pos:start="175:24" pos:end="175:24">s</name><operator pos:start="175:25" pos:end="175:26">-&gt;</operator><name pos:start="175:27" pos:end="175:31">flags</name></name> <operator pos:start="175:33" pos:end="175:33">&amp;</operator> <name pos:start="175:35" pos:end="175:56">CODEC_FLAG_LOOP_FILTER</name><operator pos:start="175:57" pos:end="175:57">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:58"><expr pos:start="177:5" pos:end="177:57"><name pos:start="177:5" pos:end="177:21"><name pos:start="177:5" pos:end="177:5">s</name><operator pos:start="177:6" pos:end="177:7">-&gt;</operator><name pos:start="177:8" pos:end="177:21">alternate_scan</name></name><operator pos:start="177:22" pos:end="177:22">=</operator> <operator pos:start="177:24" pos:end="177:24">!</operator><operator pos:start="177:25" pos:end="177:25">!</operator><operator pos:start="177:26" pos:end="177:26">(</operator><name pos:start="177:27" pos:end="177:34"><name pos:start="177:27" pos:end="177:27">s</name><operator pos:start="177:28" pos:end="177:29">-&gt;</operator><name pos:start="177:30" pos:end="177:34">flags</name></name> <operator pos:start="177:36" pos:end="177:36">&amp;</operator> <name pos:start="177:38" pos:end="177:56">CODEC_FLAG_ALT_SCAN</name><operator pos:start="177:57" pos:end="177:57">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:63"><expr pos:start="179:5" pos:end="179:62"><name pos:start="179:5" pos:end="179:23"><name pos:start="179:5" pos:end="179:5">s</name><operator pos:start="179:6" pos:end="179:7">-&gt;</operator><name pos:start="179:8" pos:end="179:23">intra_vlc_format</name></name><operator pos:start="179:24" pos:end="179:24">=</operator> <operator pos:start="179:26" pos:end="179:26">!</operator><operator pos:start="179:27" pos:end="179:27">!</operator><operator pos:start="179:28" pos:end="179:28">(</operator><name pos:start="179:29" pos:end="179:37"><name pos:start="179:29" pos:end="179:29">s</name><operator pos:start="179:30" pos:end="179:31">-&gt;</operator><name pos:start="179:32" pos:end="179:37">flags2</name></name> <operator pos:start="179:39" pos:end="179:39">&amp;</operator> <name pos:start="179:41" pos:end="179:61">CODEC_FLAG2_INTRA_VLC</name><operator pos:start="179:62" pos:end="179:62">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:66"><expr pos:start="181:5" pos:end="181:65"><name pos:start="181:5" pos:end="181:19"><name pos:start="181:5" pos:end="181:5">s</name><operator pos:start="181:6" pos:end="181:7">-&gt;</operator><name pos:start="181:8" pos:end="181:19">q_scale_type</name></name><operator pos:start="181:20" pos:end="181:20">=</operator> <operator pos:start="181:22" pos:end="181:22">!</operator><operator pos:start="181:23" pos:end="181:23">!</operator><operator pos:start="181:24" pos:end="181:24">(</operator><name pos:start="181:25" pos:end="181:33"><name pos:start="181:25" pos:end="181:25">s</name><operator pos:start="181:26" pos:end="181:27">-&gt;</operator><name pos:start="181:28" pos:end="181:33">flags2</name></name> <operator pos:start="181:35" pos:end="181:35">&amp;</operator> <name pos:start="181:37" pos:end="181:64">CODEC_FLAG2_NON_LINEAR_QUANT</name><operator pos:start="181:65" pos:end="181:65">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="185:5" pos:end="191:5"><if pos:start="185:5" pos:end="191:5">if<condition pos:start="185:7" pos:end="185:52">(<expr pos:start="185:8" pos:end="185:51"><name pos:start="185:8" pos:end="185:25"><name pos:start="185:8" pos:end="185:12">avctx</name><operator pos:start="185:13" pos:end="185:14">-&gt;</operator><name pos:start="185:15" pos:end="185:25">rc_max_rate</name></name> <operator pos:start="185:27" pos:end="185:28">&amp;&amp;</operator> <operator pos:start="185:30" pos:end="185:30">!</operator><name pos:start="185:31" pos:end="185:51"><name pos:start="185:31" pos:end="185:35">avctx</name><operator pos:start="185:36" pos:end="185:37">-&gt;</operator><name pos:start="185:38" pos:end="185:51">rc_buffer_size</name></name></expr>)</condition><block pos:start="185:53" pos:end="191:5">{<block_content pos:start="187:9" pos:end="189:18">

        <expr_stmt pos:start="187:9" pos:end="187:106"><expr pos:start="187:9" pos:end="187:105"><call pos:start="187:9" pos:end="187:105"><name pos:start="187:9" pos:end="187:14">av_log</name><argument_list pos:start="187:15" pos:end="187:105">(<argument pos:start="187:16" pos:end="187:20"><expr pos:start="187:16" pos:end="187:20"><name pos:start="187:16" pos:end="187:20">avctx</name></expr></argument>, <argument pos:start="187:23" pos:end="187:34"><expr pos:start="187:23" pos:end="187:34"><name pos:start="187:23" pos:end="187:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="187:37" pos:end="187:104"><expr pos:start="187:37" pos:end="187:104"><literal type="string" pos:start="187:37" pos:end="187:104">"a vbv buffer size is needed, for encoding with a maximum bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="189:9" pos:end="189:18">return <expr pos:start="189:16" pos:end="189:17"><operator pos:start="189:16" pos:end="189:16">-</operator><literal type="number" pos:start="189:17" pos:end="189:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="195:5" pos:end="199:5"><if pos:start="195:5" pos:end="199:5">if<condition pos:start="195:7" pos:end="195:70">(<expr pos:start="195:8" pos:end="195:69"><name pos:start="195:8" pos:end="195:25"><name pos:start="195:8" pos:end="195:12">avctx</name><operator pos:start="195:13" pos:end="195:14">-&gt;</operator><name pos:start="195:15" pos:end="195:25">rc_min_rate</name></name> <operator pos:start="195:27" pos:end="195:28">&amp;&amp;</operator> <name pos:start="195:30" pos:end="195:47"><name pos:start="195:30" pos:end="195:34">avctx</name><operator pos:start="195:35" pos:end="195:36">-&gt;</operator><name pos:start="195:37" pos:end="195:47">rc_max_rate</name></name> <operator pos:start="195:49" pos:end="195:50">!=</operator> <name pos:start="195:52" pos:end="195:69"><name pos:start="195:52" pos:end="195:56">avctx</name><operator pos:start="195:57" pos:end="195:58">-&gt;</operator><name pos:start="195:59" pos:end="195:69">rc_min_rate</name></name></expr>)</condition><block pos:start="195:71" pos:end="199:5">{<block_content pos:start="197:9" pos:end="197:105">

        <expr_stmt pos:start="197:9" pos:end="197:105"><expr pos:start="197:9" pos:end="197:104"><call pos:start="197:9" pos:end="197:104"><name pos:start="197:9" pos:end="197:14">av_log</name><argument_list pos:start="197:15" pos:end="197:104">(<argument pos:start="197:16" pos:end="197:20"><expr pos:start="197:16" pos:end="197:20"><name pos:start="197:16" pos:end="197:20">avctx</name></expr></argument>, <argument pos:start="197:23" pos:end="197:33"><expr pos:start="197:23" pos:end="197:33"><name pos:start="197:23" pos:end="197:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="197:36" pos:end="197:103"><expr pos:start="197:36" pos:end="197:103"><literal type="string" pos:start="197:36" pos:end="197:103">"Warning min_rate &gt; 0 but min_rate != max_rate isn't recommended!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="203:5" pos:end="209:5"><if pos:start="203:5" pos:end="209:5">if<condition pos:start="203:7" pos:end="203:66">(<expr pos:start="203:8" pos:end="203:65"><name pos:start="203:8" pos:end="203:25"><name pos:start="203:8" pos:end="203:12">avctx</name><operator pos:start="203:13" pos:end="203:14">-&gt;</operator><name pos:start="203:15" pos:end="203:25">rc_min_rate</name></name> <operator pos:start="203:27" pos:end="203:28">&amp;&amp;</operator> <name pos:start="203:30" pos:end="203:47"><name pos:start="203:30" pos:end="203:34">avctx</name><operator pos:start="203:35" pos:end="203:36">-&gt;</operator><name pos:start="203:37" pos:end="203:47">rc_min_rate</name></name> <operator pos:start="203:49" pos:end="203:49">&gt;</operator> <name pos:start="203:51" pos:end="203:65"><name pos:start="203:51" pos:end="203:55">avctx</name><operator pos:start="203:56" pos:end="203:57">-&gt;</operator><name pos:start="203:58" pos:end="203:65">bit_rate</name></name></expr>)</condition><block pos:start="203:67" pos:end="209:5">{<block_content pos:start="205:9" pos:end="207:18">

        <expr_stmt pos:start="205:9" pos:end="205:67"><expr pos:start="205:9" pos:end="205:66"><call pos:start="205:9" pos:end="205:66"><name pos:start="205:9" pos:end="205:14">av_log</name><argument_list pos:start="205:15" pos:end="205:66">(<argument pos:start="205:16" pos:end="205:20"><expr pos:start="205:16" pos:end="205:20"><name pos:start="205:16" pos:end="205:20">avctx</name></expr></argument>, <argument pos:start="205:23" pos:end="205:34"><expr pos:start="205:23" pos:end="205:34"><name pos:start="205:23" pos:end="205:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="205:37" pos:end="205:65"><expr pos:start="205:37" pos:end="205:65"><literal type="string" pos:start="205:37" pos:end="205:65">"bitrate below min bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="207:9" pos:end="207:18">return <expr pos:start="207:16" pos:end="207:17"><operator pos:start="207:16" pos:end="207:16">-</operator><literal type="number" pos:start="207:17" pos:end="207:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="213:5" pos:end="219:5"><if pos:start="213:5" pos:end="219:5">if<condition pos:start="213:7" pos:end="213:66">(<expr pos:start="213:8" pos:end="213:65"><name pos:start="213:8" pos:end="213:25"><name pos:start="213:8" pos:end="213:12">avctx</name><operator pos:start="213:13" pos:end="213:14">-&gt;</operator><name pos:start="213:15" pos:end="213:25">rc_max_rate</name></name> <operator pos:start="213:27" pos:end="213:28">&amp;&amp;</operator> <name pos:start="213:30" pos:end="213:47"><name pos:start="213:30" pos:end="213:34">avctx</name><operator pos:start="213:35" pos:end="213:36">-&gt;</operator><name pos:start="213:37" pos:end="213:47">rc_max_rate</name></name> <operator pos:start="213:49" pos:end="213:49">&lt;</operator> <name pos:start="213:51" pos:end="213:65"><name pos:start="213:51" pos:end="213:55">avctx</name><operator pos:start="213:56" pos:end="213:57">-&gt;</operator><name pos:start="213:58" pos:end="213:65">bit_rate</name></name></expr>)</condition><block pos:start="213:67" pos:end="219:5">{<block_content pos:start="215:9" pos:end="217:18">

        <expr_stmt pos:start="215:9" pos:end="215:66"><expr pos:start="215:9" pos:end="215:65"><call pos:start="215:9" pos:end="215:65"><name pos:start="215:9" pos:end="215:14">av_log</name><argument_list pos:start="215:15" pos:end="215:65">(<argument pos:start="215:16" pos:end="215:20"><expr pos:start="215:16" pos:end="215:20"><name pos:start="215:16" pos:end="215:20">avctx</name></expr></argument>, <argument pos:start="215:23" pos:end="215:33"><expr pos:start="215:23" pos:end="215:33"><name pos:start="215:23" pos:end="215:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="215:36" pos:end="215:64"><expr pos:start="215:36" pos:end="215:64"><literal type="string" pos:start="215:36" pos:end="215:64">"bitrate above max bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="217:9" pos:end="217:18">return <expr pos:start="217:16" pos:end="217:17"><operator pos:start="217:16" pos:end="217:16">-</operator><literal type="number" pos:start="217:17" pos:end="217:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="223:5" pos:end="227:5"><if pos:start="223:5" pos:end="227:5">if<condition pos:start="223:7" pos:end="223:111">(<expr pos:start="223:8" pos:end="223:110"><name pos:start="223:8" pos:end="223:25"><name pos:start="223:8" pos:end="223:12">avctx</name><operator pos:start="223:13" pos:end="223:14">-&gt;</operator><name pos:start="223:15" pos:end="223:25">rc_max_rate</name></name> <operator pos:start="223:27" pos:end="223:28">&amp;&amp;</operator> <name pos:start="223:30" pos:end="223:47"><name pos:start="223:30" pos:end="223:34">avctx</name><operator pos:start="223:35" pos:end="223:36">-&gt;</operator><name pos:start="223:37" pos:end="223:47">rc_max_rate</name></name> <operator pos:start="223:49" pos:end="223:50">==</operator> <name pos:start="223:52" pos:end="223:66"><name pos:start="223:52" pos:end="223:56">avctx</name><operator pos:start="223:57" pos:end="223:58">-&gt;</operator><name pos:start="223:59" pos:end="223:66">bit_rate</name></name> <operator pos:start="223:68" pos:end="223:69">&amp;&amp;</operator> <name pos:start="223:71" pos:end="223:88"><name pos:start="223:71" pos:end="223:75">avctx</name><operator pos:start="223:76" pos:end="223:77">-&gt;</operator><name pos:start="223:78" pos:end="223:88">rc_max_rate</name></name> <operator pos:start="223:90" pos:end="223:91">!=</operator> <name pos:start="223:93" pos:end="223:110"><name pos:start="223:93" pos:end="223:97">avctx</name><operator pos:start="223:98" pos:end="223:99">-&gt;</operator><name pos:start="223:100" pos:end="223:110">rc_min_rate</name></name></expr>)</condition><block pos:start="223:112" pos:end="227:5">{<block_content pos:start="225:9" pos:end="225:87">

        <expr_stmt pos:start="225:9" pos:end="225:87"><expr pos:start="225:9" pos:end="225:86"><call pos:start="225:9" pos:end="225:86"><name pos:start="225:9" pos:end="225:14">av_log</name><argument_list pos:start="225:15" pos:end="225:86">(<argument pos:start="225:16" pos:end="225:20"><expr pos:start="225:16" pos:end="225:20"><name pos:start="225:16" pos:end="225:20">avctx</name></expr></argument>, <argument pos:start="225:23" pos:end="225:33"><expr pos:start="225:23" pos:end="225:33"><name pos:start="225:23" pos:end="225:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="225:36" pos:end="225:85"><expr pos:start="225:36" pos:end="225:85"><literal type="string" pos:start="225:36" pos:end="225:85">"impossible bitrate constraints, this will fail\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="231:5" pos:end="237:5"><if pos:start="231:5" pos:end="237:5">if<condition pos:start="231:7" pos:end="231:97">(<expr pos:start="231:8" pos:end="231:96"><name pos:start="231:8" pos:end="231:28"><name pos:start="231:8" pos:end="231:12">avctx</name><operator pos:start="231:13" pos:end="231:14">-&gt;</operator><name pos:start="231:15" pos:end="231:28">rc_buffer_size</name></name> <operator pos:start="231:30" pos:end="231:31">&amp;&amp;</operator> <name pos:start="231:33" pos:end="231:47"><name pos:start="231:33" pos:end="231:37">avctx</name><operator pos:start="231:38" pos:end="231:39">-&gt;</operator><name pos:start="231:40" pos:end="231:47">bit_rate</name></name><operator pos:start="231:48" pos:end="231:48">*</operator><call pos:start="231:49" pos:end="231:72"><name pos:start="231:49" pos:end="231:54">av_q2d</name><argument_list pos:start="231:55" pos:end="231:72">(<argument pos:start="231:56" pos:end="231:71"><expr pos:start="231:56" pos:end="231:71"><name pos:start="231:56" pos:end="231:71"><name pos:start="231:56" pos:end="231:60">avctx</name><operator pos:start="231:61" pos:end="231:62">-&gt;</operator><name pos:start="231:63" pos:end="231:71">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="231:74" pos:end="231:74">&gt;</operator> <name pos:start="231:76" pos:end="231:96"><name pos:start="231:76" pos:end="231:80">avctx</name><operator pos:start="231:81" pos:end="231:82">-&gt;</operator><name pos:start="231:83" pos:end="231:96">rc_buffer_size</name></name></expr>)</condition><block pos:start="231:98" pos:end="237:5">{<block_content pos:start="233:9" pos:end="235:18">

        <expr_stmt pos:start="233:9" pos:end="233:74"><expr pos:start="233:9" pos:end="233:73"><call pos:start="233:9" pos:end="233:73"><name pos:start="233:9" pos:end="233:14">av_log</name><argument_list pos:start="233:15" pos:end="233:73">(<argument pos:start="233:16" pos:end="233:20"><expr pos:start="233:16" pos:end="233:20"><name pos:start="233:16" pos:end="233:20">avctx</name></expr></argument>, <argument pos:start="233:23" pos:end="233:34"><expr pos:start="233:23" pos:end="233:34"><name pos:start="233:23" pos:end="233:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="233:37" pos:end="233:72"><expr pos:start="233:37" pos:end="233:72"><literal type="string" pos:start="233:37" pos:end="233:72">"VBV buffer too small for bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="235:9" pos:end="235:18">return <expr pos:start="235:16" pos:end="235:17"><operator pos:start="235:16" pos:end="235:16">-</operator><literal type="number" pos:start="235:17" pos:end="235:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="241:5" pos:end="247:5"><if pos:start="241:5" pos:end="247:5">if<condition pos:start="241:7" pos:end="241:76">(<expr pos:start="241:8" pos:end="241:75"><name pos:start="241:8" pos:end="241:22"><name pos:start="241:8" pos:end="241:12">avctx</name><operator pos:start="241:13" pos:end="241:14">-&gt;</operator><name pos:start="241:15" pos:end="241:22">bit_rate</name></name><operator pos:start="241:23" pos:end="241:23">*</operator><call pos:start="241:24" pos:end="241:47"><name pos:start="241:24" pos:end="241:29">av_q2d</name><argument_list pos:start="241:30" pos:end="241:47">(<argument pos:start="241:31" pos:end="241:46"><expr pos:start="241:31" pos:end="241:46"><name pos:start="241:31" pos:end="241:46"><name pos:start="241:31" pos:end="241:35">avctx</name><operator pos:start="241:36" pos:end="241:37">-&gt;</operator><name pos:start="241:38" pos:end="241:46">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="241:49" pos:end="241:49">&gt;</operator> <name pos:start="241:51" pos:end="241:75"><name pos:start="241:51" pos:end="241:55">avctx</name><operator pos:start="241:56" pos:end="241:57">-&gt;</operator><name pos:start="241:58" pos:end="241:75">bit_rate_tolerance</name></name></expr>)</condition><block pos:start="241:77" pos:end="247:5">{<block_content pos:start="243:9" pos:end="245:18">

        <expr_stmt pos:start="243:9" pos:end="243:81"><expr pos:start="243:9" pos:end="243:80"><call pos:start="243:9" pos:end="243:80"><name pos:start="243:9" pos:end="243:14">av_log</name><argument_list pos:start="243:15" pos:end="243:80">(<argument pos:start="243:16" pos:end="243:20"><expr pos:start="243:16" pos:end="243:20"><name pos:start="243:16" pos:end="243:20">avctx</name></expr></argument>, <argument pos:start="243:23" pos:end="243:34"><expr pos:start="243:23" pos:end="243:34"><name pos:start="243:23" pos:end="243:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="243:37" pos:end="243:79"><expr pos:start="243:37" pos:end="243:79"><literal type="string" pos:start="243:37" pos:end="243:79">"bitrate tolerance too small for bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="245:9" pos:end="245:18">return <expr pos:start="245:16" pos:end="245:17"><operator pos:start="245:16" pos:end="245:16">-</operator><literal type="number" pos:start="245:17" pos:end="245:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="251:5" pos:end="261:5"><if pos:start="251:5" pos:end="261:5">if<condition pos:start="251:7" pos:end="255:79">(   <expr pos:start="251:11" pos:end="255:78"><name pos:start="251:11" pos:end="251:31"><name pos:start="251:11" pos:end="251:11">s</name><operator pos:start="251:12" pos:end="251:13">-&gt;</operator><name pos:start="251:14" pos:end="251:18">avctx</name><operator pos:start="251:19" pos:end="251:20">-&gt;</operator><name pos:start="251:21" pos:end="251:31">rc_max_rate</name></name> <operator pos:start="251:33" pos:end="251:34">&amp;&amp;</operator> <name pos:start="251:36" pos:end="251:56"><name pos:start="251:36" pos:end="251:36">s</name><operator pos:start="251:37" pos:end="251:38">-&gt;</operator><name pos:start="251:39" pos:end="251:43">avctx</name><operator pos:start="251:44" pos:end="251:45">-&gt;</operator><name pos:start="251:46" pos:end="251:56">rc_min_rate</name></name> <operator pos:start="251:58" pos:end="251:59">==</operator> <name pos:start="251:61" pos:end="251:81"><name pos:start="251:61" pos:end="251:61">s</name><operator pos:start="251:62" pos:end="251:63">-&gt;</operator><name pos:start="251:64" pos:end="251:68">avctx</name><operator pos:start="251:69" pos:end="251:70">-&gt;</operator><name pos:start="251:71" pos:end="251:81">rc_max_rate</name></name>

       <operator pos:start="253:8" pos:end="253:9">&amp;&amp;</operator> <operator pos:start="253:11" pos:end="253:11">(</operator><name pos:start="253:12" pos:end="253:22"><name pos:start="253:12" pos:end="253:12">s</name><operator pos:start="253:13" pos:end="253:14">-&gt;</operator><name pos:start="253:15" pos:end="253:22">codec_id</name></name> <operator pos:start="253:24" pos:end="253:25">==</operator> <name pos:start="253:27" pos:end="253:45">CODEC_ID_MPEG1VIDEO</name> <operator pos:start="253:47" pos:end="253:48">||</operator> <name pos:start="253:50" pos:end="253:60"><name pos:start="253:50" pos:end="253:50">s</name><operator pos:start="253:51" pos:end="253:52">-&gt;</operator><name pos:start="253:53" pos:end="253:60">codec_id</name></name> <operator pos:start="253:62" pos:end="253:63">==</operator> <name pos:start="253:65" pos:end="253:83">CODEC_ID_MPEG2VIDEO</name><operator pos:start="253:84" pos:end="253:84">)</operator>

       <operator pos:start="255:8" pos:end="255:9">&amp;&amp;</operator> <literal type="number" pos:start="255:11" pos:end="255:17">90000LL</literal> <operator pos:start="255:19" pos:end="255:19">*</operator> <operator pos:start="255:21" pos:end="255:21">(</operator><name pos:start="255:22" pos:end="255:42"><name pos:start="255:22" pos:end="255:26">avctx</name><operator pos:start="255:27" pos:end="255:28">-&gt;</operator><name pos:start="255:29" pos:end="255:42">rc_buffer_size</name></name><operator pos:start="255:43" pos:end="255:43">-</operator><literal type="number" pos:start="255:44" pos:end="255:44">1</literal><operator pos:start="255:45" pos:end="255:45">)</operator> <operator pos:start="255:47" pos:end="255:47">&gt;</operator> <name pos:start="255:49" pos:end="255:69"><name pos:start="255:49" pos:end="255:49">s</name><operator pos:start="255:50" pos:end="255:51">-&gt;</operator><name pos:start="255:52" pos:end="255:56">avctx</name><operator pos:start="255:57" pos:end="255:58">-&gt;</operator><name pos:start="255:59" pos:end="255:69">rc_max_rate</name></name><operator pos:start="255:70" pos:end="255:70">*</operator><literal type="number" pos:start="255:71" pos:end="255:78">0xFFFFLL</literal></expr>)</condition><block pos:start="255:80" pos:end="261:5">{<block_content pos:start="259:9" pos:end="259:151">



        <expr_stmt pos:start="259:9" pos:end="259:151"><expr pos:start="259:9" pos:end="259:150"><call pos:start="259:9" pos:end="259:150"><name pos:start="259:9" pos:end="259:14">av_log</name><argument_list pos:start="259:15" pos:end="259:150">(<argument pos:start="259:16" pos:end="259:20"><expr pos:start="259:16" pos:end="259:20"><name pos:start="259:16" pos:end="259:20">avctx</name></expr></argument>, <argument pos:start="259:23" pos:end="259:33"><expr pos:start="259:23" pos:end="259:33"><name pos:start="259:23" pos:end="259:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="259:36" pos:end="259:149"><expr pos:start="259:36" pos:end="259:149"><literal type="string" pos:start="259:36" pos:end="259:149">"Warning vbv_delay will be set to 0xFFFF (=VBR) as the specified vbv buffer is too large for the given bitrate!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="265:5" pos:end="273:5"><if pos:start="265:5" pos:end="273:5">if<condition pos:start="265:7" pos:end="267:104">(<expr pos:start="265:8" pos:end="267:103"><operator pos:start="265:8" pos:end="265:8">(</operator><name pos:start="265:9" pos:end="265:16"><name pos:start="265:9" pos:end="265:9">s</name><operator pos:start="265:10" pos:end="265:11">-&gt;</operator><name pos:start="265:12" pos:end="265:16">flags</name></name> <operator pos:start="265:18" pos:end="265:18">&amp;</operator> <name pos:start="265:20" pos:end="265:33">CODEC_FLAG_4MV</name><operator pos:start="265:34" pos:end="265:34">)</operator> <operator pos:start="265:36" pos:end="265:37">&amp;&amp;</operator> <name pos:start="265:39" pos:end="265:49"><name pos:start="265:39" pos:end="265:39">s</name><operator pos:start="265:40" pos:end="265:41">-&gt;</operator><name pos:start="265:42" pos:end="265:49">codec_id</name></name> <operator pos:start="265:51" pos:end="265:52">!=</operator> <name pos:start="265:54" pos:end="265:67">CODEC_ID_MPEG4</name>

       <operator pos:start="267:8" pos:end="267:9">&amp;&amp;</operator> <name pos:start="267:11" pos:end="267:21"><name pos:start="267:11" pos:end="267:11">s</name><operator pos:start="267:12" pos:end="267:13">-&gt;</operator><name pos:start="267:14" pos:end="267:21">codec_id</name></name> <operator pos:start="267:23" pos:end="267:24">!=</operator> <name pos:start="267:26" pos:end="267:38">CODEC_ID_H263</name> <operator pos:start="267:40" pos:end="267:41">&amp;&amp;</operator> <name pos:start="267:43" pos:end="267:53"><name pos:start="267:43" pos:end="267:43">s</name><operator pos:start="267:44" pos:end="267:45">-&gt;</operator><name pos:start="267:46" pos:end="267:53">codec_id</name></name> <operator pos:start="267:55" pos:end="267:56">!=</operator> <name pos:start="267:58" pos:end="267:71">CODEC_ID_H263P</name> <operator pos:start="267:73" pos:end="267:74">&amp;&amp;</operator> <name pos:start="267:76" pos:end="267:86"><name pos:start="267:76" pos:end="267:76">s</name><operator pos:start="267:77" pos:end="267:78">-&gt;</operator><name pos:start="267:79" pos:end="267:86">codec_id</name></name> <operator pos:start="267:88" pos:end="267:89">!=</operator> <name pos:start="267:91" pos:end="267:103">CODEC_ID_FLV1</name></expr>)</condition><block pos:start="267:105" pos:end="273:5">{<block_content pos:start="269:9" pos:end="271:18">

        <expr_stmt pos:start="269:9" pos:end="269:68"><expr pos:start="269:9" pos:end="269:67"><call pos:start="269:9" pos:end="269:67"><name pos:start="269:9" pos:end="269:14">av_log</name><argument_list pos:start="269:15" pos:end="269:67">(<argument pos:start="269:16" pos:end="269:20"><expr pos:start="269:16" pos:end="269:20"><name pos:start="269:16" pos:end="269:20">avctx</name></expr></argument>, <argument pos:start="269:23" pos:end="269:34"><expr pos:start="269:23" pos:end="269:34"><name pos:start="269:23" pos:end="269:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="269:37" pos:end="269:66"><expr pos:start="269:37" pos:end="269:66"><literal type="string" pos:start="269:37" pos:end="269:66">"4MV not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="271:9" pos:end="271:18">return <expr pos:start="271:16" pos:end="271:17"><operator pos:start="271:16" pos:end="271:16">-</operator><literal type="number" pos:start="271:17" pos:end="271:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="277:5" pos:end="283:5"><if pos:start="277:5" pos:end="283:5">if<condition pos:start="277:7" pos:end="277:65">(<expr pos:start="277:8" pos:end="277:64"><name pos:start="277:8" pos:end="277:14"><name pos:start="277:8" pos:end="277:8">s</name><operator pos:start="277:9" pos:end="277:10">-&gt;</operator><name pos:start="277:11" pos:end="277:14">obmc</name></name> <operator pos:start="277:16" pos:end="277:17">&amp;&amp;</operator> <name pos:start="277:19" pos:end="277:39"><name pos:start="277:19" pos:end="277:19">s</name><operator pos:start="277:20" pos:end="277:21">-&gt;</operator><name pos:start="277:22" pos:end="277:26">avctx</name><operator pos:start="277:27" pos:end="277:28">-&gt;</operator><name pos:start="277:29" pos:end="277:39">mb_decision</name></name> <operator pos:start="277:41" pos:end="277:42">!=</operator> <name pos:start="277:44" pos:end="277:64">FF_MB_DECISION_SIMPLE</name></expr>)</condition><block pos:start="277:66" pos:end="283:5">{<block_content pos:start="279:9" pos:end="281:18">

        <expr_stmt pos:start="279:9" pos:end="279:88"><expr pos:start="279:9" pos:end="279:87"><call pos:start="279:9" pos:end="279:87"><name pos:start="279:9" pos:end="279:14">av_log</name><argument_list pos:start="279:15" pos:end="279:87">(<argument pos:start="279:16" pos:end="279:20"><expr pos:start="279:16" pos:end="279:20"><name pos:start="279:16" pos:end="279:20">avctx</name></expr></argument>, <argument pos:start="279:23" pos:end="279:34"><expr pos:start="279:23" pos:end="279:34"><name pos:start="279:23" pos:end="279:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="279:37" pos:end="279:86"><expr pos:start="279:37" pos:end="279:86"><literal type="string" pos:start="279:37" pos:end="279:86">"OBMC is only supported with simple mb decision\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="281:9" pos:end="281:18">return <expr pos:start="281:16" pos:end="281:17"><operator pos:start="281:16" pos:end="281:16">-</operator><literal type="number" pos:start="281:17" pos:end="281:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="287:5" pos:end="293:5"><if pos:start="287:5" pos:end="293:5">if<condition pos:start="287:7" pos:end="287:80">(<expr pos:start="287:8" pos:end="287:79"><name pos:start="287:8" pos:end="287:14"><name pos:start="287:8" pos:end="287:8">s</name><operator pos:start="287:9" pos:end="287:10">-&gt;</operator><name pos:start="287:11" pos:end="287:14">obmc</name></name> <operator pos:start="287:16" pos:end="287:17">&amp;&amp;</operator> <name pos:start="287:19" pos:end="287:29"><name pos:start="287:19" pos:end="287:19">s</name><operator pos:start="287:20" pos:end="287:21">-&gt;</operator><name pos:start="287:22" pos:end="287:29">codec_id</name></name> <operator pos:start="287:31" pos:end="287:32">!=</operator> <name pos:start="287:34" pos:end="287:46">CODEC_ID_H263</name> <operator pos:start="287:48" pos:end="287:49">&amp;&amp;</operator> <name pos:start="287:51" pos:end="287:61"><name pos:start="287:51" pos:end="287:51">s</name><operator pos:start="287:52" pos:end="287:53">-&gt;</operator><name pos:start="287:54" pos:end="287:61">codec_id</name></name> <operator pos:start="287:63" pos:end="287:64">!=</operator> <name pos:start="287:66" pos:end="287:79">CODEC_ID_H263P</name></expr>)</condition><block pos:start="287:81" pos:end="293:5">{<block_content pos:start="289:9" pos:end="291:18">

        <expr_stmt pos:start="289:9" pos:end="289:77"><expr pos:start="289:9" pos:end="289:76"><call pos:start="289:9" pos:end="289:76"><name pos:start="289:9" pos:end="289:14">av_log</name><argument_list pos:start="289:15" pos:end="289:76">(<argument pos:start="289:16" pos:end="289:20"><expr pos:start="289:16" pos:end="289:20"><name pos:start="289:16" pos:end="289:20">avctx</name></expr></argument>, <argument pos:start="289:23" pos:end="289:34"><expr pos:start="289:23" pos:end="289:34"><name pos:start="289:23" pos:end="289:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="289:37" pos:end="289:75"><expr pos:start="289:37" pos:end="289:75"><literal type="string" pos:start="289:37" pos:end="289:75">"OBMC is only supported with H263(+)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="291:9" pos:end="291:18">return <expr pos:start="291:16" pos:end="291:17"><operator pos:start="291:16" pos:end="291:16">-</operator><literal type="number" pos:start="291:17" pos:end="291:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="297:5" pos:end="303:5"><if pos:start="297:5" pos:end="303:5">if<condition pos:start="297:7" pos:end="297:58">(<expr pos:start="297:8" pos:end="297:57"><name pos:start="297:8" pos:end="297:24"><name pos:start="297:8" pos:end="297:8">s</name><operator pos:start="297:9" pos:end="297:10">-&gt;</operator><name pos:start="297:11" pos:end="297:24">quarter_sample</name></name> <operator pos:start="297:26" pos:end="297:27">&amp;&amp;</operator> <name pos:start="297:29" pos:end="297:39"><name pos:start="297:29" pos:end="297:29">s</name><operator pos:start="297:30" pos:end="297:31">-&gt;</operator><name pos:start="297:32" pos:end="297:39">codec_id</name></name> <operator pos:start="297:41" pos:end="297:42">!=</operator> <name pos:start="297:44" pos:end="297:57">CODEC_ID_MPEG4</name></expr>)</condition><block pos:start="297:59" pos:end="303:5">{<block_content pos:start="299:9" pos:end="301:18">

        <expr_stmt pos:start="299:9" pos:end="299:69"><expr pos:start="299:9" pos:end="299:68"><call pos:start="299:9" pos:end="299:68"><name pos:start="299:9" pos:end="299:14">av_log</name><argument_list pos:start="299:15" pos:end="299:68">(<argument pos:start="299:16" pos:end="299:20"><expr pos:start="299:16" pos:end="299:20"><name pos:start="299:16" pos:end="299:20">avctx</name></expr></argument>, <argument pos:start="299:23" pos:end="299:34"><expr pos:start="299:23" pos:end="299:34"><name pos:start="299:23" pos:end="299:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="299:37" pos:end="299:67"><expr pos:start="299:37" pos:end="299:67"><literal type="string" pos:start="299:37" pos:end="299:67">"qpel not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="301:9" pos:end="301:18">return <expr pos:start="301:16" pos:end="301:17"><operator pos:start="301:16" pos:end="301:16">-</operator><literal type="number" pos:start="301:17" pos:end="301:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="307:5" pos:end="313:5"><if pos:start="307:5" pos:end="313:5">if<condition pos:start="307:7" pos:end="307:61">(<expr pos:start="307:8" pos:end="307:60"><name pos:start="307:8" pos:end="307:27"><name pos:start="307:8" pos:end="307:8">s</name><operator pos:start="307:9" pos:end="307:10">-&gt;</operator><name pos:start="307:11" pos:end="307:27">data_partitioning</name></name> <operator pos:start="307:29" pos:end="307:30">&amp;&amp;</operator> <name pos:start="307:32" pos:end="307:42"><name pos:start="307:32" pos:end="307:32">s</name><operator pos:start="307:33" pos:end="307:34">-&gt;</operator><name pos:start="307:35" pos:end="307:42">codec_id</name></name> <operator pos:start="307:44" pos:end="307:45">!=</operator> <name pos:start="307:47" pos:end="307:60">CODEC_ID_MPEG4</name></expr>)</condition><block pos:start="307:62" pos:end="313:5">{<block_content pos:start="309:9" pos:end="311:18">

        <expr_stmt pos:start="309:9" pos:end="309:82"><expr pos:start="309:9" pos:end="309:81"><call pos:start="309:9" pos:end="309:81"><name pos:start="309:9" pos:end="309:14">av_log</name><argument_list pos:start="309:15" pos:end="309:81">(<argument pos:start="309:16" pos:end="309:20"><expr pos:start="309:16" pos:end="309:20"><name pos:start="309:16" pos:end="309:20">avctx</name></expr></argument>, <argument pos:start="309:23" pos:end="309:34"><expr pos:start="309:23" pos:end="309:34"><name pos:start="309:23" pos:end="309:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="309:37" pos:end="309:80"><expr pos:start="309:37" pos:end="309:80"><literal type="string" pos:start="309:37" pos:end="309:80">"data partitioning not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="311:9" pos:end="311:18">return <expr pos:start="311:16" pos:end="311:17"><operator pos:start="311:16" pos:end="311:16">-</operator><literal type="number" pos:start="311:17" pos:end="311:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="317:5" pos:end="323:5"><if pos:start="317:5" pos:end="323:5">if<condition pos:start="317:7" pos:end="317:132">(<expr pos:start="317:8" pos:end="317:131"><name pos:start="317:8" pos:end="317:22"><name pos:start="317:8" pos:end="317:8">s</name><operator pos:start="317:9" pos:end="317:10">-&gt;</operator><name pos:start="317:11" pos:end="317:22">max_b_frames</name></name> <operator pos:start="317:24" pos:end="317:25">&amp;&amp;</operator> <name pos:start="317:27" pos:end="317:37"><name pos:start="317:27" pos:end="317:27">s</name><operator pos:start="317:28" pos:end="317:29">-&gt;</operator><name pos:start="317:30" pos:end="317:37">codec_id</name></name> <operator pos:start="317:39" pos:end="317:40">!=</operator> <name pos:start="317:42" pos:end="317:55">CODEC_ID_MPEG4</name> <operator pos:start="317:57" pos:end="317:58">&amp;&amp;</operator> <name pos:start="317:60" pos:end="317:70"><name pos:start="317:60" pos:end="317:60">s</name><operator pos:start="317:61" pos:end="317:62">-&gt;</operator><name pos:start="317:63" pos:end="317:70">codec_id</name></name> <operator pos:start="317:72" pos:end="317:73">!=</operator> <name pos:start="317:75" pos:end="317:93">CODEC_ID_MPEG1VIDEO</name> <operator pos:start="317:95" pos:end="317:96">&amp;&amp;</operator> <name pos:start="317:98" pos:end="317:108"><name pos:start="317:98" pos:end="317:98">s</name><operator pos:start="317:99" pos:end="317:100">-&gt;</operator><name pos:start="317:101" pos:end="317:108">codec_id</name></name> <operator pos:start="317:110" pos:end="317:111">!=</operator> <name pos:start="317:113" pos:end="317:131">CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block pos:start="317:133" pos:end="323:5">{<block_content pos:start="319:9" pos:end="321:18">

        <expr_stmt pos:start="319:9" pos:end="319:73"><expr pos:start="319:9" pos:end="319:72"><call pos:start="319:9" pos:end="319:72"><name pos:start="319:9" pos:end="319:14">av_log</name><argument_list pos:start="319:15" pos:end="319:72">(<argument pos:start="319:16" pos:end="319:20"><expr pos:start="319:16" pos:end="319:20"><name pos:start="319:16" pos:end="319:20">avctx</name></expr></argument>, <argument pos:start="319:23" pos:end="319:34"><expr pos:start="319:23" pos:end="319:34"><name pos:start="319:23" pos:end="319:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="319:37" pos:end="319:71"><expr pos:start="319:37" pos:end="319:71"><literal type="string" pos:start="319:37" pos:end="319:71">"b frames not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="321:9" pos:end="321:18">return <expr pos:start="321:16" pos:end="321:17"><operator pos:start="321:16" pos:end="321:16">-</operator><literal type="number" pos:start="321:17" pos:end="321:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="327:5" pos:end="335:5"><if pos:start="327:5" pos:end="335:5">if<condition pos:start="327:7" pos:end="329:78">(<expr pos:start="327:8" pos:end="329:77"><operator pos:start="327:8" pos:end="327:8">(</operator><name pos:start="327:9" pos:end="327:16"><name pos:start="327:9" pos:end="327:9">s</name><operator pos:start="327:10" pos:end="327:11">-&gt;</operator><name pos:start="327:12" pos:end="327:16">flags</name></name> <operator pos:start="327:18" pos:end="327:18">&amp;</operator> <operator pos:start="327:20" pos:end="327:20">(</operator><name pos:start="327:21" pos:end="327:45">CODEC_FLAG_INTERLACED_DCT</name><operator pos:start="327:46" pos:end="327:46">|</operator><name pos:start="327:47" pos:end="327:70">CODEC_FLAG_INTERLACED_ME</name><operator pos:start="327:71" pos:end="327:71">|</operator><name pos:start="327:72" pos:end="327:90">CODEC_FLAG_ALT_SCAN</name><operator pos:start="327:91" pos:end="327:91">)</operator><operator pos:start="327:92" pos:end="327:92">)</operator>

       <operator pos:start="329:8" pos:end="329:9">&amp;&amp;</operator> <name pos:start="329:11" pos:end="329:21"><name pos:start="329:11" pos:end="329:11">s</name><operator pos:start="329:12" pos:end="329:13">-&gt;</operator><name pos:start="329:14" pos:end="329:21">codec_id</name></name> <operator pos:start="329:23" pos:end="329:24">!=</operator> <name pos:start="329:26" pos:end="329:39">CODEC_ID_MPEG4</name> <operator pos:start="329:41" pos:end="329:42">&amp;&amp;</operator> <name pos:start="329:44" pos:end="329:54"><name pos:start="329:44" pos:end="329:44">s</name><operator pos:start="329:45" pos:end="329:46">-&gt;</operator><name pos:start="329:47" pos:end="329:54">codec_id</name></name> <operator pos:start="329:56" pos:end="329:57">!=</operator> <name pos:start="329:59" pos:end="329:77">CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block pos:start="329:79" pos:end="335:5">{<block_content pos:start="331:9" pos:end="333:18">

        <expr_stmt pos:start="331:9" pos:end="331:76"><expr pos:start="331:9" pos:end="331:75"><call pos:start="331:9" pos:end="331:75"><name pos:start="331:9" pos:end="331:14">av_log</name><argument_list pos:start="331:15" pos:end="331:75">(<argument pos:start="331:16" pos:end="331:20"><expr pos:start="331:16" pos:end="331:20"><name pos:start="331:16" pos:end="331:20">avctx</name></expr></argument>, <argument pos:start="331:23" pos:end="331:34"><expr pos:start="331:23" pos:end="331:34"><name pos:start="331:23" pos:end="331:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="331:37" pos:end="331:74"><expr pos:start="331:37" pos:end="331:74"><literal type="string" pos:start="331:37" pos:end="331:74">"interlacing not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="333:9" pos:end="333:18">return <expr pos:start="333:16" pos:end="333:17"><operator pos:start="333:16" pos:end="333:16">-</operator><literal type="number" pos:start="333:17" pos:end="333:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="339:5" pos:end="345:5"><if pos:start="339:5" pos:end="345:5">if<condition pos:start="339:7" pos:end="339:54">(<expr pos:start="339:8" pos:end="339:53"><name pos:start="339:8" pos:end="339:20"><name pos:start="339:8" pos:end="339:8">s</name><operator pos:start="339:9" pos:end="339:10">-&gt;</operator><name pos:start="339:11" pos:end="339:20">mpeg_quant</name></name> <operator pos:start="339:22" pos:end="339:23">&amp;&amp;</operator> <name pos:start="339:25" pos:end="339:35"><name pos:start="339:25" pos:end="339:25">s</name><operator pos:start="339:26" pos:end="339:27">-&gt;</operator><name pos:start="339:28" pos:end="339:35">codec_id</name></name> <operator pos:start="339:37" pos:end="339:38">!=</operator> <name pos:start="339:40" pos:end="339:53">CODEC_ID_MPEG4</name></expr>)</condition><block pos:start="339:55" pos:end="345:5">{<block_content pos:start="341:9" pos:end="343:18"> <comment type="line" pos:start="339:57" pos:end="339:83">//FIXME mpeg2 uses that too</comment>

        <expr_stmt pos:start="341:9" pos:end="341:89"><expr pos:start="341:9" pos:end="341:88"><call pos:start="341:9" pos:end="341:88"><name pos:start="341:9" pos:end="341:14">av_log</name><argument_list pos:start="341:15" pos:end="341:88">(<argument pos:start="341:16" pos:end="341:20"><expr pos:start="341:16" pos:end="341:20"><name pos:start="341:16" pos:end="341:20">avctx</name></expr></argument>, <argument pos:start="341:23" pos:end="341:34"><expr pos:start="341:23" pos:end="341:34"><name pos:start="341:23" pos:end="341:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="341:37" pos:end="341:87"><expr pos:start="341:37" pos:end="341:87"><literal type="string" pos:start="341:37" pos:end="341:87">"mpeg2 style quantization not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="343:9" pos:end="343:18">return <expr pos:start="343:16" pos:end="343:17"><operator pos:start="343:16" pos:end="343:16">-</operator><literal type="number" pos:start="343:17" pos:end="343:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="349:5" pos:end="355:5"><if pos:start="349:5" pos:end="355:5">if<condition pos:start="349:7" pos:end="349:57">(<expr pos:start="349:8" pos:end="349:56"><operator pos:start="349:8" pos:end="349:8">(</operator><name pos:start="349:9" pos:end="349:16"><name pos:start="349:9" pos:end="349:9">s</name><operator pos:start="349:10" pos:end="349:11">-&gt;</operator><name pos:start="349:12" pos:end="349:16">flags</name></name> <operator pos:start="349:18" pos:end="349:18">&amp;</operator> <name pos:start="349:20" pos:end="349:36">CODEC_FLAG_CBP_RD</name><operator pos:start="349:37" pos:end="349:37">)</operator> <operator pos:start="349:39" pos:end="349:40">&amp;&amp;</operator> <operator pos:start="349:42" pos:end="349:42">!</operator><name pos:start="349:43" pos:end="349:56"><name pos:start="349:43" pos:end="349:47">avctx</name><operator pos:start="349:48" pos:end="349:49">-&gt;</operator><name pos:start="349:50" pos:end="349:56">trellis</name></name></expr>)</condition><block pos:start="349:58" pos:end="355:5">{<block_content pos:start="351:9" pos:end="353:18">

        <expr_stmt pos:start="351:9" pos:end="351:68"><expr pos:start="351:9" pos:end="351:67"><call pos:start="351:9" pos:end="351:67"><name pos:start="351:9" pos:end="351:14">av_log</name><argument_list pos:start="351:15" pos:end="351:67">(<argument pos:start="351:16" pos:end="351:20"><expr pos:start="351:16" pos:end="351:20"><name pos:start="351:16" pos:end="351:20">avctx</name></expr></argument>, <argument pos:start="351:23" pos:end="351:34"><expr pos:start="351:23" pos:end="351:34"><name pos:start="351:23" pos:end="351:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="351:37" pos:end="351:66"><expr pos:start="351:37" pos:end="351:66"><literal type="string" pos:start="351:37" pos:end="351:66">"CBP RD needs trellis quant\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="353:9" pos:end="353:18">return <expr pos:start="353:16" pos:end="353:17"><operator pos:start="353:16" pos:end="353:16">-</operator><literal type="number" pos:start="353:17" pos:end="353:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="359:5" pos:end="365:5"><if pos:start="359:5" pos:end="365:5">if<condition pos:start="359:7" pos:end="359:83">(<expr pos:start="359:8" pos:end="359:82"><operator pos:start="359:8" pos:end="359:8">(</operator><name pos:start="359:9" pos:end="359:16"><name pos:start="359:9" pos:end="359:9">s</name><operator pos:start="359:10" pos:end="359:11">-&gt;</operator><name pos:start="359:12" pos:end="359:16">flags</name></name> <operator pos:start="359:18" pos:end="359:18">&amp;</operator> <name pos:start="359:20" pos:end="359:35">CODEC_FLAG_QP_RD</name><operator pos:start="359:36" pos:end="359:36">)</operator> <operator pos:start="359:38" pos:end="359:39">&amp;&amp;</operator> <name pos:start="359:41" pos:end="359:61"><name pos:start="359:41" pos:end="359:41">s</name><operator pos:start="359:42" pos:end="359:43">-&gt;</operator><name pos:start="359:44" pos:end="359:48">avctx</name><operator pos:start="359:49" pos:end="359:50">-&gt;</operator><name pos:start="359:51" pos:end="359:61">mb_decision</name></name> <operator pos:start="359:63" pos:end="359:64">!=</operator> <name pos:start="359:66" pos:end="359:82">FF_MB_DECISION_RD</name></expr>)</condition><block pos:start="359:84" pos:end="365:5">{<block_content pos:start="361:9" pos:end="363:18">

        <expr_stmt pos:start="361:9" pos:end="361:59"><expr pos:start="361:9" pos:end="361:58"><call pos:start="361:9" pos:end="361:58"><name pos:start="361:9" pos:end="361:14">av_log</name><argument_list pos:start="361:15" pos:end="361:58">(<argument pos:start="361:16" pos:end="361:20"><expr pos:start="361:16" pos:end="361:20"><name pos:start="361:16" pos:end="361:20">avctx</name></expr></argument>, <argument pos:start="361:23" pos:end="361:34"><expr pos:start="361:23" pos:end="361:34"><name pos:start="361:23" pos:end="361:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="361:37" pos:end="361:57"><expr pos:start="361:37" pos:end="361:57"><literal type="string" pos:start="361:37" pos:end="361:57">"QP RD needs mbd=2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="363:9" pos:end="363:18">return <expr pos:start="363:16" pos:end="363:17"><operator pos:start="363:16" pos:end="363:16">-</operator><literal type="number" pos:start="363:17" pos:end="363:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="369:5" pos:end="375:5"><if pos:start="369:5" pos:end="375:5">if<condition pos:start="369:7" pos:end="369:90">(<expr pos:start="369:8" pos:end="369:89"><name pos:start="369:8" pos:end="369:38"><name pos:start="369:8" pos:end="369:8">s</name><operator pos:start="369:9" pos:end="369:10">-&gt;</operator><name pos:start="369:11" pos:end="369:15">avctx</name><operator pos:start="369:16" pos:end="369:17">-&gt;</operator><name pos:start="369:18" pos:end="369:38">scenechange_threshold</name></name> <operator pos:start="369:40" pos:end="369:40">&lt;</operator> <literal type="number" pos:start="369:42" pos:end="369:51">1000000000</literal> <operator pos:start="369:53" pos:end="369:54">&amp;&amp;</operator> <operator pos:start="369:56" pos:end="369:56">(</operator><name pos:start="369:57" pos:end="369:64"><name pos:start="369:57" pos:end="369:57">s</name><operator pos:start="369:58" pos:end="369:59">-&gt;</operator><name pos:start="369:60" pos:end="369:64">flags</name></name> <operator pos:start="369:66" pos:end="369:66">&amp;</operator> <name pos:start="369:68" pos:end="369:88">CODEC_FLAG_CLOSED_GOP</name><operator pos:start="369:89" pos:end="369:89">)</operator></expr>)</condition><block pos:start="369:91" pos:end="375:5">{<block_content pos:start="371:9" pos:end="373:18">

        <expr_stmt pos:start="371:9" pos:end="371:131"><expr pos:start="371:9" pos:end="371:130"><call pos:start="371:9" pos:end="371:130"><name pos:start="371:9" pos:end="371:14">av_log</name><argument_list pos:start="371:15" pos:end="371:130">(<argument pos:start="371:16" pos:end="371:20"><expr pos:start="371:16" pos:end="371:20"><name pos:start="371:16" pos:end="371:20">avctx</name></expr></argument>, <argument pos:start="371:23" pos:end="371:34"><expr pos:start="371:23" pos:end="371:34"><name pos:start="371:23" pos:end="371:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="371:37" pos:end="371:129"><expr pos:start="371:37" pos:end="371:129"><literal type="string" pos:start="371:37" pos:end="371:129">"closed gop with scene change detection are not supported yet, set threshold to 1000000000\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="373:9" pos:end="373:18">return <expr pos:start="373:16" pos:end="373:17"><operator pos:start="373:16" pos:end="373:16">-</operator><literal type="number" pos:start="373:17" pos:end="373:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="379:5" pos:end="385:5"><if pos:start="379:5" pos:end="385:5">if<condition pos:start="379:7" pos:end="379:81">(<expr pos:start="379:8" pos:end="379:80"><operator pos:start="379:8" pos:end="379:8">(</operator><name pos:start="379:9" pos:end="379:17"><name pos:start="379:9" pos:end="379:9">s</name><operator pos:start="379:10" pos:end="379:11">-&gt;</operator><name pos:start="379:12" pos:end="379:17">flags2</name></name> <operator pos:start="379:19" pos:end="379:19">&amp;</operator> <name pos:start="379:21" pos:end="379:41">CODEC_FLAG2_INTRA_VLC</name><operator pos:start="379:42" pos:end="379:42">)</operator> <operator pos:start="379:44" pos:end="379:45">&amp;&amp;</operator> <name pos:start="379:47" pos:end="379:57"><name pos:start="379:47" pos:end="379:47">s</name><operator pos:start="379:48" pos:end="379:49">-&gt;</operator><name pos:start="379:50" pos:end="379:57">codec_id</name></name> <operator pos:start="379:59" pos:end="379:60">!=</operator> <name pos:start="379:62" pos:end="379:80">CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block pos:start="379:82" pos:end="385:5">{<block_content pos:start="381:9" pos:end="383:18">

        <expr_stmt pos:start="381:9" pos:end="381:80"><expr pos:start="381:9" pos:end="381:79"><call pos:start="381:9" pos:end="381:79"><name pos:start="381:9" pos:end="381:14">av_log</name><argument_list pos:start="381:15" pos:end="381:79">(<argument pos:start="381:16" pos:end="381:20"><expr pos:start="381:16" pos:end="381:20"><name pos:start="381:16" pos:end="381:20">avctx</name></expr></argument>, <argument pos:start="381:23" pos:end="381:34"><expr pos:start="381:23" pos:end="381:34"><name pos:start="381:23" pos:end="381:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="381:37" pos:end="381:78"><expr pos:start="381:37" pos:end="381:78"><literal type="string" pos:start="381:37" pos:end="381:78">"intra vlc table not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="383:9" pos:end="383:18">return <expr pos:start="383:16" pos:end="383:17"><operator pos:start="383:16" pos:end="383:16">-</operator><literal type="number" pos:start="383:17" pos:end="383:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="389:5" pos:end="407:5"><if pos:start="389:5" pos:end="407:5">if<condition pos:start="389:7" pos:end="389:39">(<expr pos:start="389:8" pos:end="389:38"><name pos:start="389:8" pos:end="389:15"><name pos:start="389:8" pos:end="389:8">s</name><operator pos:start="389:9" pos:end="389:10">-&gt;</operator><name pos:start="389:11" pos:end="389:15">flags</name></name> <operator pos:start="389:17" pos:end="389:17">&amp;</operator> <name pos:start="389:19" pos:end="389:38">CODEC_FLAG_LOW_DELAY</name></expr>)</condition><block pos:start="389:40" pos:end="407:5">{<block_content pos:start="391:9" pos:end="405:9">

        <if_stmt pos:start="391:9" pos:end="397:9"><if pos:start="391:9" pos:end="397:9">if <condition pos:start="391:12" pos:end="391:47">(<expr pos:start="391:13" pos:end="391:46"><name pos:start="391:13" pos:end="391:23"><name pos:start="391:13" pos:end="391:13">s</name><operator pos:start="391:14" pos:end="391:15">-&gt;</operator><name pos:start="391:16" pos:end="391:23">codec_id</name></name> <operator pos:start="391:25" pos:end="391:26">!=</operator> <name pos:start="391:28" pos:end="391:46">CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block pos:start="391:48" pos:end="397:9">{<block_content pos:start="393:13" pos:end="395:22">

            <expr_stmt pos:start="393:13" pos:end="393:91"><expr pos:start="393:13" pos:end="393:90"><call pos:start="393:13" pos:end="393:90"><name pos:start="393:13" pos:end="393:18">av_log</name><argument_list pos:start="393:19" pos:end="393:90">(<argument pos:start="393:20" pos:end="393:24"><expr pos:start="393:20" pos:end="393:24"><name pos:start="393:20" pos:end="393:24">avctx</name></expr></argument>, <argument pos:start="393:27" pos:end="393:38"><expr pos:start="393:27" pos:end="393:38"><name pos:start="393:27" pos:end="393:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="393:41" pos:end="393:89"><expr pos:start="393:41" pos:end="393:89"><literal type="string" pos:start="393:41" pos:end="393:89">"low delay forcing is only available for mpeg2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="395:13" pos:end="395:22">return <expr pos:start="395:20" pos:end="395:21"><operator pos:start="395:20" pos:end="395:20">-</operator><literal type="number" pos:start="395:21" pos:end="395:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="399:9" pos:end="405:9"><if pos:start="399:9" pos:end="405:9">if <condition pos:start="399:12" pos:end="399:33">(<expr pos:start="399:13" pos:end="399:32"><name pos:start="399:13" pos:end="399:27"><name pos:start="399:13" pos:end="399:13">s</name><operator pos:start="399:14" pos:end="399:15">-&gt;</operator><name pos:start="399:16" pos:end="399:27">max_b_frames</name></name> <operator pos:start="399:29" pos:end="399:30">!=</operator> <literal type="number" pos:start="399:32" pos:end="399:32">0</literal></expr>)</condition><block pos:start="399:34" pos:end="405:9">{<block_content pos:start="401:13" pos:end="403:22">

            <expr_stmt pos:start="401:13" pos:end="401:84"><expr pos:start="401:13" pos:end="401:83"><call pos:start="401:13" pos:end="401:83"><name pos:start="401:13" pos:end="401:18">av_log</name><argument_list pos:start="401:19" pos:end="401:83">(<argument pos:start="401:20" pos:end="401:24"><expr pos:start="401:20" pos:end="401:24"><name pos:start="401:20" pos:end="401:24">avctx</name></expr></argument>, <argument pos:start="401:27" pos:end="401:38"><expr pos:start="401:27" pos:end="401:38"><name pos:start="401:27" pos:end="401:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="401:41" pos:end="401:82"><expr pos:start="401:41" pos:end="401:82"><literal type="string" pos:start="401:41" pos:end="401:82">"b frames cannot be used with low delay\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="403:13" pos:end="403:22">return <expr pos:start="403:20" pos:end="403:21"><operator pos:start="403:20" pos:end="403:20">-</operator><literal type="number" pos:start="403:21" pos:end="403:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="411:5" pos:end="429:5"><if pos:start="411:5" pos:end="429:5">if<condition pos:start="411:7" pos:end="411:28">(<expr pos:start="411:8" pos:end="411:27"><name pos:start="411:8" pos:end="411:22"><name pos:start="411:8" pos:end="411:8">s</name><operator pos:start="411:9" pos:end="411:10">-&gt;</operator><name pos:start="411:11" pos:end="411:22">q_scale_type</name></name> <operator pos:start="411:24" pos:end="411:25">==</operator> <literal type="number" pos:start="411:27" pos:end="411:27">1</literal></expr>)</condition><block pos:start="411:29" pos:end="429:5">{<block_content pos:start="413:9" pos:end="427:9">

        <if_stmt pos:start="413:9" pos:end="419:9"><if pos:start="413:9" pos:end="419:9">if<condition pos:start="413:11" pos:end="413:46">(<expr pos:start="413:12" pos:end="413:45"><name pos:start="413:12" pos:end="413:22"><name pos:start="413:12" pos:end="413:12">s</name><operator pos:start="413:13" pos:end="413:14">-&gt;</operator><name pos:start="413:15" pos:end="413:22">codec_id</name></name> <operator pos:start="413:24" pos:end="413:25">!=</operator> <name pos:start="413:27" pos:end="413:45">CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block pos:start="413:47" pos:end="419:9">{<block_content pos:start="415:13" pos:end="417:22">

            <expr_stmt pos:start="415:13" pos:end="415:90"><expr pos:start="415:13" pos:end="415:89"><call pos:start="415:13" pos:end="415:89"><name pos:start="415:13" pos:end="415:18">av_log</name><argument_list pos:start="415:19" pos:end="415:89">(<argument pos:start="415:20" pos:end="415:24"><expr pos:start="415:20" pos:end="415:24"><name pos:start="415:20" pos:end="415:24">avctx</name></expr></argument>, <argument pos:start="415:27" pos:end="415:38"><expr pos:start="415:27" pos:end="415:38"><name pos:start="415:27" pos:end="415:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="415:41" pos:end="415:88"><expr pos:start="415:41" pos:end="415:88"><literal type="string" pos:start="415:41" pos:end="415:88">"non linear quant is only available for mpeg2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="417:13" pos:end="417:22">return <expr pos:start="417:20" pos:end="417:21"><operator pos:start="417:20" pos:end="417:20">-</operator><literal type="number" pos:start="417:21" pos:end="417:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="421:9" pos:end="427:9"><if pos:start="421:9" pos:end="427:9">if<condition pos:start="421:11" pos:end="421:28">(<expr pos:start="421:12" pos:end="421:27"><name pos:start="421:12" pos:end="421:22"><name pos:start="421:12" pos:end="421:16">avctx</name><operator pos:start="421:17" pos:end="421:18">-&gt;</operator><name pos:start="421:19" pos:end="421:22">qmax</name></name> <operator pos:start="421:24" pos:end="421:24">&gt;</operator> <literal type="number" pos:start="421:26" pos:end="421:27">12</literal></expr>)</condition><block pos:start="421:29" pos:end="427:9">{<block_content pos:start="423:13" pos:end="425:22">

            <expr_stmt pos:start="423:13" pos:end="423:97"><expr pos:start="423:13" pos:end="423:96"><call pos:start="423:13" pos:end="423:96"><name pos:start="423:13" pos:end="423:18">av_log</name><argument_list pos:start="423:19" pos:end="423:96">(<argument pos:start="423:20" pos:end="423:24"><expr pos:start="423:20" pos:end="423:24"><name pos:start="423:20" pos:end="423:24">avctx</name></expr></argument>, <argument pos:start="423:27" pos:end="423:38"><expr pos:start="423:27" pos:end="423:38"><name pos:start="423:27" pos:end="423:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="423:41" pos:end="423:95"><expr pos:start="423:41" pos:end="423:95"><literal type="string" pos:start="423:41" pos:end="423:95">"non linear quant only supports qmax &lt;= 12 currently\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="425:13" pos:end="425:22">return <expr pos:start="425:20" pos:end="425:21"><operator pos:start="425:20" pos:end="425:20">-</operator><literal type="number" pos:start="425:21" pos:end="425:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="433:5" pos:end="443:5"><if pos:start="433:5" pos:end="443:5">if<condition pos:start="433:7" pos:end="437:89">(<expr pos:start="433:8" pos:end="437:88"><name pos:start="433:8" pos:end="433:29"><name pos:start="433:8" pos:end="433:8">s</name><operator pos:start="433:9" pos:end="433:10">-&gt;</operator><name pos:start="433:11" pos:end="433:15">avctx</name><operator pos:start="433:16" pos:end="433:17">-&gt;</operator><name pos:start="433:18" pos:end="433:29">thread_count</name></name> <operator pos:start="433:31" pos:end="433:31">&gt;</operator> <literal type="number" pos:start="433:33" pos:end="433:33">1</literal> <operator pos:start="433:35" pos:end="433:36">&amp;&amp;</operator> <name pos:start="433:38" pos:end="433:48"><name pos:start="433:38" pos:end="433:38">s</name><operator pos:start="433:39" pos:end="433:40">-&gt;</operator><name pos:start="433:41" pos:end="433:48">codec_id</name></name> <operator pos:start="433:50" pos:end="433:51">!=</operator> <name pos:start="433:53" pos:end="433:66">CODEC_ID_MPEG4</name>

       <operator pos:start="435:8" pos:end="435:9">&amp;&amp;</operator> <name pos:start="435:11" pos:end="435:21"><name pos:start="435:11" pos:end="435:11">s</name><operator pos:start="435:12" pos:end="435:13">-&gt;</operator><name pos:start="435:14" pos:end="435:21">codec_id</name></name> <operator pos:start="435:23" pos:end="435:24">!=</operator> <name pos:start="435:26" pos:end="435:44">CODEC_ID_MPEG1VIDEO</name> <operator pos:start="435:46" pos:end="435:47">&amp;&amp;</operator> <name pos:start="435:49" pos:end="435:59"><name pos:start="435:49" pos:end="435:49">s</name><operator pos:start="435:50" pos:end="435:51">-&gt;</operator><name pos:start="435:52" pos:end="435:59">codec_id</name></name> <operator pos:start="435:61" pos:end="435:62">!=</operator> <name pos:start="435:64" pos:end="435:82">CODEC_ID_MPEG2VIDEO</name>

       <operator pos:start="437:8" pos:end="437:9">&amp;&amp;</operator> <operator pos:start="437:11" pos:end="437:11">(</operator><name pos:start="437:12" pos:end="437:22"><name pos:start="437:12" pos:end="437:12">s</name><operator pos:start="437:13" pos:end="437:14">-&gt;</operator><name pos:start="437:15" pos:end="437:22">codec_id</name></name> <operator pos:start="437:24" pos:end="437:25">!=</operator> <name pos:start="437:27" pos:end="437:40">CODEC_ID_H263P</name> <operator pos:start="437:42" pos:end="437:43">||</operator> <operator pos:start="437:45" pos:end="437:45">!</operator><operator pos:start="437:46" pos:end="437:46">(</operator><name pos:start="437:47" pos:end="437:54"><name pos:start="437:47" pos:end="437:47">s</name><operator pos:start="437:48" pos:end="437:49">-&gt;</operator><name pos:start="437:50" pos:end="437:54">flags</name></name> <operator pos:start="437:56" pos:end="437:56">&amp;</operator> <name pos:start="437:58" pos:end="437:86">CODEC_FLAG_H263P_SLICE_STRUCT</name><operator pos:start="437:87" pos:end="437:87">)</operator><operator pos:start="437:88" pos:end="437:88">)</operator></expr>)</condition><block pos:start="437:90" pos:end="443:5">{<block_content pos:start="439:9" pos:end="441:18">

        <expr_stmt pos:start="439:9" pos:end="439:88"><expr pos:start="439:9" pos:end="439:87"><call pos:start="439:9" pos:end="439:87"><name pos:start="439:9" pos:end="439:14">av_log</name><argument_list pos:start="439:15" pos:end="439:87">(<argument pos:start="439:16" pos:end="439:20"><expr pos:start="439:16" pos:end="439:20"><name pos:start="439:16" pos:end="439:20">avctx</name></expr></argument>, <argument pos:start="439:23" pos:end="439:34"><expr pos:start="439:23" pos:end="439:34"><name pos:start="439:23" pos:end="439:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="439:37" pos:end="439:86"><expr pos:start="439:37" pos:end="439:86"><literal type="string" pos:start="439:37" pos:end="439:86">"multi threaded encoding not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="441:9" pos:end="441:18">return <expr pos:start="441:16" pos:end="441:17"><operator pos:start="441:16" pos:end="441:16">-</operator><literal type="number" pos:start="441:17" pos:end="441:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="447:5" pos:end="453:5"><if pos:start="447:5" pos:end="453:5">if<condition pos:start="447:7" pos:end="447:34">(<expr pos:start="447:8" pos:end="447:33"><name pos:start="447:8" pos:end="447:29"><name pos:start="447:8" pos:end="447:8">s</name><operator pos:start="447:9" pos:end="447:10">-&gt;</operator><name pos:start="447:11" pos:end="447:15">avctx</name><operator pos:start="447:16" pos:end="447:17">-&gt;</operator><name pos:start="447:18" pos:end="447:29">thread_count</name></name> <operator pos:start="447:31" pos:end="447:31">&lt;</operator> <literal type="number" pos:start="447:33" pos:end="447:33">1</literal></expr>)</condition><block pos:start="447:35" pos:end="453:5">{<block_content pos:start="449:9" pos:end="451:18">

        <expr_stmt pos:start="449:9" pos:end="449:113"><expr pos:start="449:9" pos:end="449:112"><call pos:start="449:9" pos:end="449:112"><name pos:start="449:9" pos:end="449:14">av_log</name><argument_list pos:start="449:15" pos:end="449:112">(<argument pos:start="449:16" pos:end="449:20"><expr pos:start="449:16" pos:end="449:20"><name pos:start="449:16" pos:end="449:20">avctx</name></expr></argument>, <argument pos:start="449:23" pos:end="449:34"><expr pos:start="449:23" pos:end="449:34"><name pos:start="449:23" pos:end="449:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="449:37" pos:end="449:111"><expr pos:start="449:37" pos:end="449:111"><literal type="string" pos:start="449:37" pos:end="449:111">"automatic thread number detection not supported by codec, patch welcome\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="451:9" pos:end="451:18">return <expr pos:start="451:16" pos:end="451:17"><operator pos:start="451:16" pos:end="451:16">-</operator><literal type="number" pos:start="451:17" pos:end="451:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="457:5" pos:end="459:23"><if pos:start="457:5" pos:end="459:23">if<condition pos:start="457:7" pos:end="457:34">(<expr pos:start="457:8" pos:end="457:33"><name pos:start="457:8" pos:end="457:29"><name pos:start="457:8" pos:end="457:8">s</name><operator pos:start="457:9" pos:end="457:10">-&gt;</operator><name pos:start="457:11" pos:end="457:15">avctx</name><operator pos:start="457:16" pos:end="457:17">-&gt;</operator><name pos:start="457:18" pos:end="457:29">thread_count</name></name> <operator pos:start="457:31" pos:end="457:31">&gt;</operator> <literal type="number" pos:start="457:33" pos:end="457:33">1</literal></expr>)</condition><block type="pseudo" pos:start="459:9" pos:end="459:23"><block_content pos:start="459:9" pos:end="459:23">

        <expr_stmt pos:start="459:9" pos:end="459:23"><expr pos:start="459:9" pos:end="459:22"><name pos:start="459:9" pos:end="459:19"><name pos:start="459:9" pos:end="459:9">s</name><operator pos:start="459:10" pos:end="459:11">-&gt;</operator><name pos:start="459:12" pos:end="459:19">rtp_mode</name></name><operator pos:start="459:20" pos:end="459:20">=</operator> <literal type="number" pos:start="459:22" pos:end="459:22">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="463:5" pos:end="469:5"><if pos:start="463:5" pos:end="469:5">if<condition pos:start="463:7" pos:end="463:54">(<expr pos:start="463:8" pos:end="463:53"><operator pos:start="463:8" pos:end="463:8">!</operator><name pos:start="463:9" pos:end="463:28"><name pos:start="463:9" pos:end="463:13">avctx</name><operator pos:start="463:14" pos:end="463:15">-&gt;</operator><name pos:start="463:16" pos:end="463:24">time_base</name><operator pos:start="463:25" pos:end="463:25">.</operator><name pos:start="463:26" pos:end="463:28">den</name></name> <operator pos:start="463:30" pos:end="463:31">||</operator> <operator pos:start="463:33" pos:end="463:33">!</operator><name pos:start="463:34" pos:end="463:53"><name pos:start="463:34" pos:end="463:38">avctx</name><operator pos:start="463:39" pos:end="463:40">-&gt;</operator><name pos:start="463:41" pos:end="463:49">time_base</name><operator pos:start="463:50" pos:end="463:50">.</operator><name pos:start="463:51" pos:end="463:53">num</name></name></expr>)</condition><block pos:start="463:55" pos:end="469:5">{<block_content pos:start="465:9" pos:end="467:18">

        <expr_stmt pos:start="465:9" pos:end="465:59"><expr pos:start="465:9" pos:end="465:58"><call pos:start="465:9" pos:end="465:58"><name pos:start="465:9" pos:end="465:14">av_log</name><argument_list pos:start="465:15" pos:end="465:58">(<argument pos:start="465:16" pos:end="465:20"><expr pos:start="465:16" pos:end="465:20"><name pos:start="465:16" pos:end="465:20">avctx</name></expr></argument>, <argument pos:start="465:23" pos:end="465:34"><expr pos:start="465:23" pos:end="465:34"><name pos:start="465:23" pos:end="465:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="465:37" pos:end="465:57"><expr pos:start="465:37" pos:end="465:57"><literal type="string" pos:start="465:37" pos:end="465:57">"framerate not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="467:9" pos:end="467:18">return <expr pos:start="467:16" pos:end="467:17"><operator pos:start="467:16" pos:end="467:16">-</operator><literal type="number" pos:start="467:17" pos:end="467:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="473:5" pos:end="473:26"><expr pos:start="473:5" pos:end="473:25"><name pos:start="473:5" pos:end="473:5">i</name><operator pos:start="473:6" pos:end="473:6">=</operator> <operator pos:start="473:8" pos:end="473:8">(</operator><name pos:start="473:9" pos:end="473:15">INT_MAX</name><operator pos:start="473:16" pos:end="473:16">/</operator><literal type="number" pos:start="473:17" pos:end="473:18">2</literal><operator pos:start="473:18" pos:end="473:18">+</operator><literal type="number" pos:start="473:19" pos:end="473:21">128</literal><operator pos:start="473:22" pos:end="473:22">)</operator><operator pos:start="473:23" pos:end="473:24">&gt;&gt;</operator><literal type="number" pos:start="473:25" pos:end="473:25">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="475:5" pos:end="481:5"><if pos:start="475:5" pos:end="481:5">if<condition pos:start="475:7" pos:end="475:32">(<expr pos:start="475:8" pos:end="475:31"><name pos:start="475:8" pos:end="475:26"><name pos:start="475:8" pos:end="475:12">avctx</name><operator pos:start="475:13" pos:end="475:14">-&gt;</operator><name pos:start="475:15" pos:end="475:26">me_threshold</name></name> <operator pos:start="475:28" pos:end="475:29">&gt;=</operator> <name pos:start="475:31" pos:end="475:31">i</name></expr>)</condition><block pos:start="475:33" pos:end="481:5">{<block_content pos:start="477:9" pos:end="479:18">

        <expr_stmt pos:start="477:9" pos:end="477:82"><expr pos:start="477:9" pos:end="477:81"><call pos:start="477:9" pos:end="477:81"><name pos:start="477:9" pos:end="477:14">av_log</name><argument_list pos:start="477:15" pos:end="477:81">(<argument pos:start="477:16" pos:end="477:20"><expr pos:start="477:16" pos:end="477:20"><name pos:start="477:16" pos:end="477:20">avctx</name></expr></argument>, <argument pos:start="477:23" pos:end="477:34"><expr pos:start="477:23" pos:end="477:34"><name pos:start="477:23" pos:end="477:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="477:37" pos:end="477:73"><expr pos:start="477:37" pos:end="477:73"><literal type="string" pos:start="477:37" pos:end="477:73">"me_threshold too large, max is %d\n"</literal></expr></argument>, <argument pos:start="477:76" pos:end="477:80"><expr pos:start="477:76" pos:end="477:80"><name pos:start="477:76" pos:end="477:76">i</name> <operator pos:start="477:78" pos:end="477:78">-</operator> <literal type="number" pos:start="477:80" pos:end="477:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="479:9" pos:end="479:18">return <expr pos:start="479:16" pos:end="479:17"><operator pos:start="479:16" pos:end="479:16">-</operator><literal type="number" pos:start="479:17" pos:end="479:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="483:5" pos:end="489:5"><if pos:start="483:5" pos:end="489:5">if<condition pos:start="483:7" pos:end="483:32">(<expr pos:start="483:8" pos:end="483:31"><name pos:start="483:8" pos:end="483:26"><name pos:start="483:8" pos:end="483:12">avctx</name><operator pos:start="483:13" pos:end="483:14">-&gt;</operator><name pos:start="483:15" pos:end="483:26">mb_threshold</name></name> <operator pos:start="483:28" pos:end="483:29">&gt;=</operator> <name pos:start="483:31" pos:end="483:31">i</name></expr>)</condition><block pos:start="483:33" pos:end="489:5">{<block_content pos:start="485:9" pos:end="487:18">

        <expr_stmt pos:start="485:9" pos:end="485:82"><expr pos:start="485:9" pos:end="485:81"><call pos:start="485:9" pos:end="485:81"><name pos:start="485:9" pos:end="485:14">av_log</name><argument_list pos:start="485:15" pos:end="485:81">(<argument pos:start="485:16" pos:end="485:20"><expr pos:start="485:16" pos:end="485:20"><name pos:start="485:16" pos:end="485:20">avctx</name></expr></argument>, <argument pos:start="485:23" pos:end="485:34"><expr pos:start="485:23" pos:end="485:34"><name pos:start="485:23" pos:end="485:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="485:37" pos:end="485:73"><expr pos:start="485:37" pos:end="485:73"><literal type="string" pos:start="485:37" pos:end="485:73">"mb_threshold too large, max is %d\n"</literal></expr></argument>, <argument pos:start="485:76" pos:end="485:80"><expr pos:start="485:76" pos:end="485:80"><name pos:start="485:76" pos:end="485:76">i</name> <operator pos:start="485:78" pos:end="485:78">-</operator> <literal type="number" pos:start="485:80" pos:end="485:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="487:9" pos:end="487:18">return <expr pos:start="487:16" pos:end="487:17"><operator pos:start="487:16" pos:end="487:16">-</operator><literal type="number" pos:start="487:17" pos:end="487:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="493:5" pos:end="499:5"><if pos:start="493:5" pos:end="499:5">if<condition pos:start="493:7" pos:end="493:66">(<expr pos:start="493:8" pos:end="493:65"><name pos:start="493:8" pos:end="493:30"><name pos:start="493:8" pos:end="493:12">avctx</name><operator pos:start="493:13" pos:end="493:14">-&gt;</operator><name pos:start="493:15" pos:end="493:30">b_frame_strategy</name></name> <operator pos:start="493:32" pos:end="493:33">&amp;&amp;</operator> <operator pos:start="493:35" pos:end="493:35">(</operator><name pos:start="493:36" pos:end="493:47"><name pos:start="493:36" pos:end="493:40">avctx</name><operator pos:start="493:41" pos:end="493:42">-&gt;</operator><name pos:start="493:43" pos:end="493:47">flags</name></name><operator pos:start="493:48" pos:end="493:48">&amp;</operator><name pos:start="493:49" pos:end="493:64">CODEC_FLAG_PASS2</name><operator pos:start="493:65" pos:end="493:65">)</operator></expr>)</condition><block pos:start="493:67" pos:end="499:5">{<block_content pos:start="495:9" pos:end="497:36">

        <expr_stmt pos:start="495:9" pos:end="495:93"><expr pos:start="495:9" pos:end="495:92"><call pos:start="495:9" pos:end="495:92"><name pos:start="495:9" pos:end="495:14">av_log</name><argument_list pos:start="495:15" pos:end="495:92">(<argument pos:start="495:16" pos:end="495:20"><expr pos:start="495:16" pos:end="495:20"><name pos:start="495:16" pos:end="495:20">avctx</name></expr></argument>, <argument pos:start="495:23" pos:end="495:33"><expr pos:start="495:23" pos:end="495:33"><name pos:start="495:23" pos:end="495:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="495:36" pos:end="495:91"><expr pos:start="495:36" pos:end="495:91"><literal type="string" pos:start="495:36" pos:end="495:91">"notice: b_frame_strategy only affects the first pass\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="497:9" pos:end="497:36"><expr pos:start="497:9" pos:end="497:35"><name pos:start="497:9" pos:end="497:31"><name pos:start="497:9" pos:end="497:13">avctx</name><operator pos:start="497:14" pos:end="497:15">-&gt;</operator><name pos:start="497:16" pos:end="497:31">b_frame_strategy</name></name> <operator pos:start="497:33" pos:end="497:33">=</operator> <literal type="number" pos:start="497:35" pos:end="497:35">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="503:5" pos:end="503:58"><expr pos:start="503:5" pos:end="503:57"><name pos:start="503:5" pos:end="503:5">i</name><operator pos:start="503:6" pos:end="503:6">=</operator> <call pos:start="503:8" pos:end="503:57"><name pos:start="503:8" pos:end="503:13">av_gcd</name><argument_list pos:start="503:14" pos:end="503:57">(<argument pos:start="503:15" pos:end="503:34"><expr pos:start="503:15" pos:end="503:34"><name pos:start="503:15" pos:end="503:34"><name pos:start="503:15" pos:end="503:19">avctx</name><operator pos:start="503:20" pos:end="503:21">-&gt;</operator><name pos:start="503:22" pos:end="503:30">time_base</name><operator pos:start="503:31" pos:end="503:31">.</operator><name pos:start="503:32" pos:end="503:34">den</name></name></expr></argument>, <argument pos:start="503:37" pos:end="503:56"><expr pos:start="503:37" pos:end="503:56"><name pos:start="503:37" pos:end="503:56"><name pos:start="503:37" pos:end="503:41">avctx</name><operator pos:start="503:42" pos:end="503:43">-&gt;</operator><name pos:start="503:44" pos:end="503:52">time_base</name><operator pos:start="503:53" pos:end="503:53">.</operator><name pos:start="503:54" pos:end="503:56">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="505:5" pos:end="515:5"><if pos:start="505:5" pos:end="515:5">if<condition pos:start="505:7" pos:end="505:13">(<expr pos:start="505:8" pos:end="505:12"><name pos:start="505:8" pos:end="505:8">i</name> <operator pos:start="505:10" pos:end="505:10">&gt;</operator> <literal type="number" pos:start="505:12" pos:end="505:12">1</literal></expr>)</condition><block pos:start="505:14" pos:end="515:5">{<block_content pos:start="507:9" pos:end="511:34">

        <expr_stmt pos:start="507:9" pos:end="507:79"><expr pos:start="507:9" pos:end="507:78"><call pos:start="507:9" pos:end="507:78"><name pos:start="507:9" pos:end="507:14">av_log</name><argument_list pos:start="507:15" pos:end="507:78">(<argument pos:start="507:16" pos:end="507:20"><expr pos:start="507:16" pos:end="507:20"><name pos:start="507:16" pos:end="507:20">avctx</name></expr></argument>, <argument pos:start="507:23" pos:end="507:33"><expr pos:start="507:23" pos:end="507:33"><name pos:start="507:23" pos:end="507:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="507:36" pos:end="507:77"><expr pos:start="507:36" pos:end="507:77"><literal type="string" pos:start="507:36" pos:end="507:77">"removing common factors from framerate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="509:9" pos:end="509:34"><expr pos:start="509:9" pos:end="509:33"><name pos:start="509:9" pos:end="509:28"><name pos:start="509:9" pos:end="509:13">avctx</name><operator pos:start="509:14" pos:end="509:15">-&gt;</operator><name pos:start="509:16" pos:end="509:24">time_base</name><operator pos:start="509:25" pos:end="509:25">.</operator><name pos:start="509:26" pos:end="509:28">den</name></name> <operator pos:start="509:30" pos:end="509:31">/=</operator> <name pos:start="509:33" pos:end="509:33">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="511:9" pos:end="511:34"><expr pos:start="511:9" pos:end="511:33"><name pos:start="511:9" pos:end="511:28"><name pos:start="511:9" pos:end="511:13">avctx</name><operator pos:start="511:14" pos:end="511:15">-&gt;</operator><name pos:start="511:16" pos:end="511:24">time_base</name><operator pos:start="511:25" pos:end="511:25">.</operator><name pos:start="511:26" pos:end="511:28">num</name></name> <operator pos:start="511:30" pos:end="511:31">/=</operator> <name pos:start="511:33" pos:end="511:33">i</name></expr>;</expr_stmt>

<comment type="line" pos:start="513:1" pos:end="513:20">//        return -1;</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="519:5" pos:end="537:5"><if pos:start="519:5" pos:end="525:5">if<condition pos:start="519:7" pos:end="519:35">(<expr pos:start="519:8" pos:end="519:34"><name pos:start="519:8" pos:end="519:18"><name pos:start="519:8" pos:end="519:8">s</name><operator pos:start="519:9" pos:end="519:10">-&gt;</operator><name pos:start="519:11" pos:end="519:18">codec_id</name></name><operator pos:start="519:19" pos:end="519:20">==</operator><name pos:start="519:21" pos:end="519:34">CODEC_ID_MJPEG</name></expr>)</condition><block pos:start="519:36" pos:end="525:5">{<block_content pos:start="521:9" pos:end="523:31">

        <expr_stmt pos:start="521:9" pos:end="521:53"><expr pos:start="521:9" pos:end="521:52"><name pos:start="521:9" pos:end="521:27"><name pos:start="521:9" pos:end="521:9">s</name><operator pos:start="521:10" pos:end="521:11">-&gt;</operator><name pos:start="521:12" pos:end="521:27">intra_quant_bias</name></name><operator pos:start="521:28" pos:end="521:28">=</operator> <literal type="number" pos:start="521:30" pos:end="521:30">1</literal><operator pos:start="521:31" pos:end="521:32">&lt;&lt;</operator><operator pos:start="521:33" pos:end="521:33">(</operator><name pos:start="521:34" pos:end="521:49">QUANT_BIAS_SHIFT</name><operator pos:start="521:50" pos:end="521:50">-</operator><literal type="number" pos:start="521:51" pos:end="521:51">1</literal><operator pos:start="521:52" pos:end="521:52">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="521:55" pos:end="521:67">//(a + x/2)/x</comment>

        <expr_stmt pos:start="523:9" pos:end="523:31"><expr pos:start="523:9" pos:end="523:30"><name pos:start="523:9" pos:end="523:27"><name pos:start="523:9" pos:end="523:9">s</name><operator pos:start="523:10" pos:end="523:11">-&gt;</operator><name pos:start="523:12" pos:end="523:27">inter_quant_bias</name></name><operator pos:start="523:28" pos:end="523:28">=</operator> <literal type="number" pos:start="523:30" pos:end="523:30">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="525:6" pos:end="531:5">else if<condition pos:start="525:13" pos:end="525:99">(<expr pos:start="525:14" pos:end="525:98"><name pos:start="525:14" pos:end="525:26"><name pos:start="525:14" pos:end="525:14">s</name><operator pos:start="525:15" pos:end="525:16">-&gt;</operator><name pos:start="525:17" pos:end="525:26">mpeg_quant</name></name> <operator pos:start="525:28" pos:end="525:29">||</operator> <name pos:start="525:31" pos:end="525:41"><name pos:start="525:31" pos:end="525:31">s</name><operator pos:start="525:32" pos:end="525:33">-&gt;</operator><name pos:start="525:34" pos:end="525:41">codec_id</name></name><operator pos:start="525:42" pos:end="525:43">==</operator><name pos:start="525:44" pos:end="525:62">CODEC_ID_MPEG1VIDEO</name> <operator pos:start="525:64" pos:end="525:65">||</operator> <name pos:start="525:67" pos:end="525:77"><name pos:start="525:67" pos:end="525:67">s</name><operator pos:start="525:68" pos:end="525:69">-&gt;</operator><name pos:start="525:70" pos:end="525:77">codec_id</name></name><operator pos:start="525:78" pos:end="525:79">==</operator><name pos:start="525:80" pos:end="525:98">CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block pos:start="525:100" pos:end="531:5">{<block_content pos:start="527:9" pos:end="529:31">

        <expr_stmt pos:start="527:9" pos:end="527:53"><expr pos:start="527:9" pos:end="527:52"><name pos:start="527:9" pos:end="527:27"><name pos:start="527:9" pos:end="527:9">s</name><operator pos:start="527:10" pos:end="527:11">-&gt;</operator><name pos:start="527:12" pos:end="527:27">intra_quant_bias</name></name><operator pos:start="527:28" pos:end="527:28">=</operator> <literal type="number" pos:start="527:30" pos:end="527:30">3</literal><operator pos:start="527:31" pos:end="527:32">&lt;&lt;</operator><operator pos:start="527:33" pos:end="527:33">(</operator><name pos:start="527:34" pos:end="527:49">QUANT_BIAS_SHIFT</name><operator pos:start="527:50" pos:end="527:50">-</operator><literal type="number" pos:start="527:51" pos:end="527:51">3</literal><operator pos:start="527:52" pos:end="527:52">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="527:55" pos:end="527:69">//(a + x*3/8)/x</comment>

        <expr_stmt pos:start="529:9" pos:end="529:31"><expr pos:start="529:9" pos:end="529:30"><name pos:start="529:9" pos:end="529:27"><name pos:start="529:9" pos:end="529:9">s</name><operator pos:start="529:10" pos:end="529:11">-&gt;</operator><name pos:start="529:12" pos:end="529:27">inter_quant_bias</name></name><operator pos:start="529:28" pos:end="529:28">=</operator> <literal type="number" pos:start="529:30" pos:end="529:30">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="531:6" pos:end="537:5">else<block pos:start="531:10" pos:end="537:5">{<block_content pos:start="533:9" pos:end="535:55">

        <expr_stmt pos:start="533:9" pos:end="533:30"><expr pos:start="533:9" pos:end="533:29"><name pos:start="533:9" pos:end="533:27"><name pos:start="533:9" pos:end="533:9">s</name><operator pos:start="533:10" pos:end="533:11">-&gt;</operator><name pos:start="533:12" pos:end="533:27">intra_quant_bias</name></name><operator pos:start="533:28" pos:end="533:28">=</operator><literal type="number" pos:start="533:29" pos:end="533:29">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="535:9" pos:end="535:55"><expr pos:start="535:9" pos:end="535:54"><name pos:start="535:9" pos:end="535:27"><name pos:start="535:9" pos:end="535:9">s</name><operator pos:start="535:10" pos:end="535:11">-&gt;</operator><name pos:start="535:12" pos:end="535:27">inter_quant_bias</name></name><operator pos:start="535:28" pos:end="535:28">=</operator><operator pos:start="535:29" pos:end="535:29">-</operator><operator pos:start="535:30" pos:end="535:30">(</operator><literal type="number" pos:start="535:31" pos:end="535:31">1</literal><operator pos:start="535:32" pos:end="535:33">&lt;&lt;</operator><operator pos:start="535:34" pos:end="535:34">(</operator><name pos:start="535:35" pos:end="535:50">QUANT_BIAS_SHIFT</name><operator pos:start="535:51" pos:end="535:51">-</operator><literal type="number" pos:start="535:52" pos:end="535:52">2</literal><operator pos:start="535:53" pos:end="535:53">)</operator><operator pos:start="535:54" pos:end="535:54">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="535:57" pos:end="535:69">//(a - x/4)/x</comment>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="541:5" pos:end="543:53"><if pos:start="541:5" pos:end="543:53">if<condition pos:start="541:7" pos:end="541:56">(<expr pos:start="541:8" pos:end="541:55"><name pos:start="541:8" pos:end="541:30"><name pos:start="541:8" pos:end="541:12">avctx</name><operator pos:start="541:13" pos:end="541:14">-&gt;</operator><name pos:start="541:15" pos:end="541:30">intra_quant_bias</name></name> <operator pos:start="541:32" pos:end="541:33">!=</operator> <name pos:start="541:35" pos:end="541:55">FF_DEFAULT_QUANT_BIAS</name></expr>)</condition><block type="pseudo" pos:start="543:9" pos:end="543:53"><block_content pos:start="543:9" pos:end="543:53">

        <expr_stmt pos:start="543:9" pos:end="543:53"><expr pos:start="543:9" pos:end="543:52"><name pos:start="543:9" pos:end="543:27"><name pos:start="543:9" pos:end="543:9">s</name><operator pos:start="543:10" pos:end="543:11">-&gt;</operator><name pos:start="543:12" pos:end="543:27">intra_quant_bias</name></name><operator pos:start="543:28" pos:end="543:28">=</operator> <name pos:start="543:30" pos:end="543:52"><name pos:start="543:30" pos:end="543:34">avctx</name><operator pos:start="543:35" pos:end="543:36">-&gt;</operator><name pos:start="543:37" pos:end="543:52">intra_quant_bias</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="545:5" pos:end="547:53"><if pos:start="545:5" pos:end="547:53">if<condition pos:start="545:7" pos:end="545:56">(<expr pos:start="545:8" pos:end="545:55"><name pos:start="545:8" pos:end="545:30"><name pos:start="545:8" pos:end="545:12">avctx</name><operator pos:start="545:13" pos:end="545:14">-&gt;</operator><name pos:start="545:15" pos:end="545:30">inter_quant_bias</name></name> <operator pos:start="545:32" pos:end="545:33">!=</operator> <name pos:start="545:35" pos:end="545:55">FF_DEFAULT_QUANT_BIAS</name></expr>)</condition><block type="pseudo" pos:start="547:9" pos:end="547:53"><block_content pos:start="547:9" pos:end="547:53">

        <expr_stmt pos:start="547:9" pos:end="547:53"><expr pos:start="547:9" pos:end="547:52"><name pos:start="547:9" pos:end="547:27"><name pos:start="547:9" pos:end="547:9">s</name><operator pos:start="547:10" pos:end="547:11">-&gt;</operator><name pos:start="547:12" pos:end="547:27">inter_quant_bias</name></name><operator pos:start="547:28" pos:end="547:28">=</operator> <name pos:start="547:30" pos:end="547:52"><name pos:start="547:30" pos:end="547:34">avctx</name><operator pos:start="547:35" pos:end="547:36">-&gt;</operator><name pos:start="547:37" pos:end="547:52">inter_quant_bias</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="551:5" pos:end="551:84"><expr pos:start="551:5" pos:end="551:83"><call pos:start="551:5" pos:end="551:83"><name pos:start="551:5" pos:end="551:33">avcodec_get_chroma_sub_sample</name><argument_list pos:start="551:34" pos:end="551:83">(<argument pos:start="551:35" pos:end="551:48"><expr pos:start="551:35" pos:end="551:48"><name pos:start="551:35" pos:end="551:48"><name pos:start="551:35" pos:end="551:39">avctx</name><operator pos:start="551:40" pos:end="551:41">-&gt;</operator><name pos:start="551:42" pos:end="551:48">pix_fmt</name></name></expr></argument>, <argument pos:start="551:51" pos:end="551:65"><expr pos:start="551:51" pos:end="551:65"><operator pos:start="551:51" pos:end="551:51">&amp;</operator><name pos:start="551:52" pos:end="551:65">chroma_h_shift</name></expr></argument>, <argument pos:start="551:68" pos:end="551:82"><expr pos:start="551:68" pos:end="551:82"><operator pos:start="551:68" pos:end="551:68">&amp;</operator><name pos:start="551:69" pos:end="551:82">chroma_v_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="555:5" pos:end="561:5"><if pos:start="555:5" pos:end="561:5">if<condition pos:start="555:7" pos:end="555:80">(<expr pos:start="555:8" pos:end="555:79"><name pos:start="555:8" pos:end="555:22"><name pos:start="555:8" pos:end="555:12">avctx</name><operator pos:start="555:13" pos:end="555:14">-&gt;</operator><name pos:start="555:15" pos:end="555:22">codec_id</name></name> <operator pos:start="555:24" pos:end="555:25">==</operator> <name pos:start="555:27" pos:end="555:40">CODEC_ID_MPEG4</name> <operator pos:start="555:42" pos:end="555:43">&amp;&amp;</operator> <name pos:start="555:45" pos:end="555:67"><name pos:start="555:45" pos:end="555:45">s</name><operator pos:start="555:46" pos:end="555:47">-&gt;</operator><name pos:start="555:48" pos:end="555:52">avctx</name><operator pos:start="555:53" pos:end="555:54">-&gt;</operator><name pos:start="555:55" pos:end="555:63">time_base</name><operator pos:start="555:64" pos:end="555:64">.</operator><name pos:start="555:65" pos:end="555:67">den</name></name> <operator pos:start="555:69" pos:end="555:69">&gt;</operator> <operator pos:start="555:71" pos:end="555:71">(</operator><literal type="number" pos:start="555:72" pos:end="555:72">1</literal><operator pos:start="555:73" pos:end="555:74">&lt;&lt;</operator><literal type="number" pos:start="555:75" pos:end="555:76">16</literal><operator pos:start="555:77" pos:end="555:77">)</operator><operator pos:start="555:78" pos:end="555:78">-</operator><literal type="number" pos:start="555:79" pos:end="555:79">1</literal></expr>)</condition><block pos:start="555:81" pos:end="561:5">{<block_content pos:start="557:9" pos:end="559:18">

        <expr_stmt pos:start="557:9" pos:end="557:83"><expr pos:start="557:9" pos:end="557:82"><call pos:start="557:9" pos:end="557:82"><name pos:start="557:9" pos:end="557:14">av_log</name><argument_list pos:start="557:15" pos:end="557:82">(<argument pos:start="557:16" pos:end="557:20"><expr pos:start="557:16" pos:end="557:20"><name pos:start="557:16" pos:end="557:20">avctx</name></expr></argument>, <argument pos:start="557:23" pos:end="557:34"><expr pos:start="557:23" pos:end="557:34"><name pos:start="557:23" pos:end="557:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="557:37" pos:end="557:81"><expr pos:start="557:37" pos:end="557:81"><literal type="string" pos:start="557:37" pos:end="557:81">"timebase not supported by mpeg 4 standard\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="559:9" pos:end="559:18">return <expr pos:start="559:16" pos:end="559:17"><operator pos:start="559:16" pos:end="559:16">-</operator><literal type="number" pos:start="559:17" pos:end="559:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="563:5" pos:end="563:70"><expr pos:start="563:5" pos:end="563:69"><name pos:start="563:5" pos:end="563:26"><name pos:start="563:5" pos:end="563:5">s</name><operator pos:start="563:6" pos:end="563:7">-&gt;</operator><name pos:start="563:8" pos:end="563:26">time_increment_bits</name></name> <operator pos:start="563:28" pos:end="563:28">=</operator> <call pos:start="563:30" pos:end="563:65"><name pos:start="563:30" pos:end="563:36">av_log2</name><argument_list pos:start="563:37" pos:end="563:65">(<argument pos:start="563:38" pos:end="563:64"><expr pos:start="563:38" pos:end="563:64"><name pos:start="563:38" pos:end="563:60"><name pos:start="563:38" pos:end="563:38">s</name><operator pos:start="563:39" pos:end="563:40">-&gt;</operator><name pos:start="563:41" pos:end="563:45">avctx</name><operator pos:start="563:46" pos:end="563:47">-&gt;</operator><name pos:start="563:48" pos:end="563:56">time_base</name><operator pos:start="563:57" pos:end="563:57">.</operator><name pos:start="563:58" pos:end="563:60">den</name></name> <operator pos:start="563:62" pos:end="563:62">-</operator> <literal type="number" pos:start="563:64" pos:end="563:64">1</literal></expr></argument>)</argument_list></call> <operator pos:start="563:67" pos:end="563:67">+</operator> <literal type="number" pos:start="563:69" pos:end="563:69">1</literal></expr>;</expr_stmt>



    <switch pos:start="567:5" pos:end="873:5">switch<condition pos:start="567:11" pos:end="567:28">(<expr pos:start="567:12" pos:end="567:27"><name pos:start="567:12" pos:end="567:27"><name pos:start="567:12" pos:end="567:16">avctx</name><operator pos:start="567:17" pos:end="567:18">-&gt;</operator><name pos:start="567:19" pos:end="567:23">codec</name><operator pos:start="567:24" pos:end="567:25">-&gt;</operator><name pos:start="567:26" pos:end="567:27">id</name></name></expr>)</condition> <block pos:start="567:30" pos:end="873:5">{<block_content pos:start="569:5" pos:end="871:18">

    <case pos:start="569:5" pos:end="569:29">case <expr pos:start="569:10" pos:end="569:28"><name pos:start="569:10" pos:end="569:28">CODEC_ID_MPEG1VIDEO</name></expr>:</case>

        <expr_stmt pos:start="571:9" pos:end="571:34"><expr pos:start="571:9" pos:end="571:33"><name pos:start="571:9" pos:end="571:21"><name pos:start="571:9" pos:end="571:9">s</name><operator pos:start="571:10" pos:end="571:11">-&gt;</operator><name pos:start="571:12" pos:end="571:21">out_format</name></name> <operator pos:start="571:23" pos:end="571:23">=</operator> <name pos:start="571:25" pos:end="571:33">FMT_MPEG1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="573:9" pos:end="573:58"><expr pos:start="573:9" pos:end="573:57"><name pos:start="573:9" pos:end="573:20"><name pos:start="573:9" pos:end="573:9">s</name><operator pos:start="573:10" pos:end="573:11">-&gt;</operator><name pos:start="573:12" pos:end="573:20">low_delay</name></name><operator pos:start="573:21" pos:end="573:21">=</operator> <operator pos:start="573:23" pos:end="573:23">!</operator><operator pos:start="573:24" pos:end="573:24">!</operator><operator pos:start="573:25" pos:end="573:25">(</operator><name pos:start="573:26" pos:end="573:33"><name pos:start="573:26" pos:end="573:26">s</name><operator pos:start="573:27" pos:end="573:28">-&gt;</operator><name pos:start="573:29" pos:end="573:33">flags</name></name> <operator pos:start="573:35" pos:end="573:35">&amp;</operator> <name pos:start="573:37" pos:end="573:56">CODEC_FLAG_LOW_DELAY</name><operator pos:start="573:57" pos:end="573:57">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="575:9" pos:end="575:63"><expr pos:start="575:9" pos:end="575:62"><name pos:start="575:9" pos:end="575:20"><name pos:start="575:9" pos:end="575:13">avctx</name><operator pos:start="575:14" pos:end="575:15">-&gt;</operator><name pos:start="575:16" pos:end="575:20">delay</name></name><operator pos:start="575:21" pos:end="575:21">=</operator> <ternary pos:start="575:23" pos:end="575:62"><condition pos:start="575:23" pos:end="575:36"><expr pos:start="575:23" pos:end="575:34"><name pos:start="575:23" pos:end="575:34"><name pos:start="575:23" pos:end="575:23">s</name><operator pos:start="575:24" pos:end="575:25">-&gt;</operator><name pos:start="575:26" pos:end="575:34">low_delay</name></name></expr> ?</condition><then pos:start="575:38" pos:end="575:38"> <expr pos:start="575:38" pos:end="575:38"><literal type="number" pos:start="575:38" pos:end="575:38">0</literal></expr> </then><else pos:start="575:40" pos:end="575:62">: <expr pos:start="575:42" pos:end="575:62"><operator pos:start="575:42" pos:end="575:42">(</operator><name pos:start="575:43" pos:end="575:57"><name pos:start="575:43" pos:end="575:43">s</name><operator pos:start="575:44" pos:end="575:45">-&gt;</operator><name pos:start="575:46" pos:end="575:57">max_b_frames</name></name> <operator pos:start="575:59" pos:end="575:59">+</operator> <literal type="number" pos:start="575:61" pos:end="575:61">1</literal><operator pos:start="575:62" pos:end="575:62">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="577:9" pos:end="577:14">break;</break>

    <case pos:start="579:5" pos:end="579:29">case <expr pos:start="579:10" pos:end="579:28"><name pos:start="579:10" pos:end="579:28">CODEC_ID_MPEG2VIDEO</name></expr>:</case>

        <expr_stmt pos:start="581:9" pos:end="581:34"><expr pos:start="581:9" pos:end="581:33"><name pos:start="581:9" pos:end="581:21"><name pos:start="581:9" pos:end="581:9">s</name><operator pos:start="581:10" pos:end="581:11">-&gt;</operator><name pos:start="581:12" pos:end="581:21">out_format</name></name> <operator pos:start="581:23" pos:end="581:23">=</operator> <name pos:start="581:25" pos:end="581:33">FMT_MPEG1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="583:9" pos:end="583:58"><expr pos:start="583:9" pos:end="583:57"><name pos:start="583:9" pos:end="583:20"><name pos:start="583:9" pos:end="583:9">s</name><operator pos:start="583:10" pos:end="583:11">-&gt;</operator><name pos:start="583:12" pos:end="583:20">low_delay</name></name><operator pos:start="583:21" pos:end="583:21">=</operator> <operator pos:start="583:23" pos:end="583:23">!</operator><operator pos:start="583:24" pos:end="583:24">!</operator><operator pos:start="583:25" pos:end="583:25">(</operator><name pos:start="583:26" pos:end="583:33"><name pos:start="583:26" pos:end="583:26">s</name><operator pos:start="583:27" pos:end="583:28">-&gt;</operator><name pos:start="583:29" pos:end="583:33">flags</name></name> <operator pos:start="583:35" pos:end="583:35">&amp;</operator> <name pos:start="583:37" pos:end="583:56">CODEC_FLAG_LOW_DELAY</name><operator pos:start="583:57" pos:end="583:57">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="585:9" pos:end="585:63"><expr pos:start="585:9" pos:end="585:62"><name pos:start="585:9" pos:end="585:20"><name pos:start="585:9" pos:end="585:13">avctx</name><operator pos:start="585:14" pos:end="585:15">-&gt;</operator><name pos:start="585:16" pos:end="585:20">delay</name></name><operator pos:start="585:21" pos:end="585:21">=</operator> <ternary pos:start="585:23" pos:end="585:62"><condition pos:start="585:23" pos:end="585:36"><expr pos:start="585:23" pos:end="585:34"><name pos:start="585:23" pos:end="585:34"><name pos:start="585:23" pos:end="585:23">s</name><operator pos:start="585:24" pos:end="585:25">-&gt;</operator><name pos:start="585:26" pos:end="585:34">low_delay</name></name></expr> ?</condition><then pos:start="585:38" pos:end="585:38"> <expr pos:start="585:38" pos:end="585:38"><literal type="number" pos:start="585:38" pos:end="585:38">0</literal></expr> </then><else pos:start="585:40" pos:end="585:62">: <expr pos:start="585:42" pos:end="585:62"><operator pos:start="585:42" pos:end="585:42">(</operator><name pos:start="585:43" pos:end="585:57"><name pos:start="585:43" pos:end="585:43">s</name><operator pos:start="585:44" pos:end="585:45">-&gt;</operator><name pos:start="585:46" pos:end="585:57">max_b_frames</name></name> <operator pos:start="585:59" pos:end="585:59">+</operator> <literal type="number" pos:start="585:61" pos:end="585:61">1</literal><operator pos:start="585:62" pos:end="585:62">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="587:9" pos:end="587:23"><expr pos:start="587:9" pos:end="587:22"><name pos:start="587:9" pos:end="587:19"><name pos:start="587:9" pos:end="587:9">s</name><operator pos:start="587:10" pos:end="587:11">-&gt;</operator><name pos:start="587:12" pos:end="587:19">rtp_mode</name></name><operator pos:start="587:20" pos:end="587:20">=</operator> <literal type="number" pos:start="587:22" pos:end="587:22">1</literal></expr>;</expr_stmt>

        <break pos:start="589:9" pos:end="589:14">break;</break>

    <case pos:start="591:5" pos:end="591:24">case <expr pos:start="591:10" pos:end="591:23"><name pos:start="591:10" pos:end="591:23">CODEC_ID_LJPEG</name></expr>:</case>

    <case pos:start="593:5" pos:end="593:24">case <expr pos:start="593:10" pos:end="593:23"><name pos:start="593:10" pos:end="593:23">CODEC_ID_MJPEG</name></expr>:</case>

        <expr_stmt pos:start="595:9" pos:end="595:34"><expr pos:start="595:9" pos:end="595:33"><name pos:start="595:9" pos:end="595:21"><name pos:start="595:9" pos:end="595:9">s</name><operator pos:start="595:10" pos:end="595:11">-&gt;</operator><name pos:start="595:12" pos:end="595:21">out_format</name></name> <operator pos:start="595:23" pos:end="595:23">=</operator> <name pos:start="595:25" pos:end="595:33">FMT_MJPEG</name></expr>;</expr_stmt>

        <expr_stmt pos:start="597:9" pos:end="597:26"><expr pos:start="597:9" pos:end="597:25"><name pos:start="597:9" pos:end="597:21"><name pos:start="597:9" pos:end="597:9">s</name><operator pos:start="597:10" pos:end="597:11">-&gt;</operator><name pos:start="597:12" pos:end="597:21">intra_only</name></name> <operator pos:start="597:23" pos:end="597:23">=</operator> <literal type="number" pos:start="597:25" pos:end="597:25">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="597:28" pos:end="597:58">/* force intra only for jpeg */</comment>

        <if_stmt pos:start="599:9" pos:end="621:9"><if pos:start="599:9" pos:end="613:9">if<condition pos:start="599:11" pos:end="599:80">(<expr pos:start="599:12" pos:end="599:79"><name pos:start="599:12" pos:end="599:27"><name pos:start="599:12" pos:end="599:16">avctx</name><operator pos:start="599:17" pos:end="599:18">-&gt;</operator><name pos:start="599:19" pos:end="599:23">codec</name><operator pos:start="599:24" pos:end="599:25">-&gt;</operator><name pos:start="599:26" pos:end="599:27">id</name></name> <operator pos:start="599:29" pos:end="599:30">==</operator> <name pos:start="599:32" pos:end="599:45">CODEC_ID_MJPEG</name> <operator pos:start="599:47" pos:end="599:48">||</operator> <name pos:start="599:50" pos:end="599:63"><name pos:start="599:50" pos:end="599:54">avctx</name><operator pos:start="599:55" pos:end="599:56">-&gt;</operator><name pos:start="599:57" pos:end="599:63">pix_fmt</name></name> <operator pos:start="599:65" pos:end="599:66">!=</operator> <name pos:start="599:68" pos:end="599:79">PIX_FMT_BGRA</name></expr>)</condition><block pos:start="599:81" pos:end="613:9">{<block_content pos:start="601:9" pos:end="611:48">

        <expr_stmt pos:start="601:9" pos:end="601:32"><expr pos:start="601:9" pos:end="601:31"><name pos:start="601:9" pos:end="601:27"><name pos:start="601:9" pos:end="601:9">s</name><operator pos:start="601:10" pos:end="601:11">-&gt;</operator><name pos:start="601:12" pos:end="601:24">mjpeg_vsample</name><index pos:start="601:25" pos:end="601:27">[<expr pos:start="601:26" pos:end="601:26"><literal type="number" pos:start="601:26" pos:end="601:26">0</literal></expr>]</index></name> <operator pos:start="601:29" pos:end="601:29">=</operator> <literal type="number" pos:start="601:31" pos:end="601:31">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="603:9" pos:end="603:48"><expr pos:start="603:9" pos:end="603:47"><name pos:start="603:9" pos:end="603:27"><name pos:start="603:9" pos:end="603:9">s</name><operator pos:start="603:10" pos:end="603:11">-&gt;</operator><name pos:start="603:12" pos:end="603:24">mjpeg_vsample</name><index pos:start="603:25" pos:end="603:27">[<expr pos:start="603:26" pos:end="603:26"><literal type="number" pos:start="603:26" pos:end="603:26">1</literal></expr>]</index></name> <operator pos:start="603:29" pos:end="603:29">=</operator> <literal type="number" pos:start="603:31" pos:end="603:31">2</literal><operator pos:start="603:32" pos:end="603:33">&gt;&gt;</operator><name pos:start="603:34" pos:end="603:47">chroma_v_shift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="605:9" pos:end="605:48"><expr pos:start="605:9" pos:end="605:47"><name pos:start="605:9" pos:end="605:27"><name pos:start="605:9" pos:end="605:9">s</name><operator pos:start="605:10" pos:end="605:11">-&gt;</operator><name pos:start="605:12" pos:end="605:24">mjpeg_vsample</name><index pos:start="605:25" pos:end="605:27">[<expr pos:start="605:26" pos:end="605:26"><literal type="number" pos:start="605:26" pos:end="605:26">2</literal></expr>]</index></name> <operator pos:start="605:29" pos:end="605:29">=</operator> <literal type="number" pos:start="605:31" pos:end="605:31">2</literal><operator pos:start="605:32" pos:end="605:33">&gt;&gt;</operator><name pos:start="605:34" pos:end="605:47">chroma_v_shift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="607:9" pos:end="607:32"><expr pos:start="607:9" pos:end="607:31"><name pos:start="607:9" pos:end="607:27"><name pos:start="607:9" pos:end="607:9">s</name><operator pos:start="607:10" pos:end="607:11">-&gt;</operator><name pos:start="607:12" pos:end="607:24">mjpeg_hsample</name><index pos:start="607:25" pos:end="607:27">[<expr pos:start="607:26" pos:end="607:26"><literal type="number" pos:start="607:26" pos:end="607:26">0</literal></expr>]</index></name> <operator pos:start="607:29" pos:end="607:29">=</operator> <literal type="number" pos:start="607:31" pos:end="607:31">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="609:9" pos:end="609:48"><expr pos:start="609:9" pos:end="609:47"><name pos:start="609:9" pos:end="609:27"><name pos:start="609:9" pos:end="609:9">s</name><operator pos:start="609:10" pos:end="609:11">-&gt;</operator><name pos:start="609:12" pos:end="609:24">mjpeg_hsample</name><index pos:start="609:25" pos:end="609:27">[<expr pos:start="609:26" pos:end="609:26"><literal type="number" pos:start="609:26" pos:end="609:26">1</literal></expr>]</index></name> <operator pos:start="609:29" pos:end="609:29">=</operator> <literal type="number" pos:start="609:31" pos:end="609:31">2</literal><operator pos:start="609:32" pos:end="609:33">&gt;&gt;</operator><name pos:start="609:34" pos:end="609:47">chroma_h_shift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="611:9" pos:end="611:48"><expr pos:start="611:9" pos:end="611:47"><name pos:start="611:9" pos:end="611:27"><name pos:start="611:9" pos:end="611:9">s</name><operator pos:start="611:10" pos:end="611:11">-&gt;</operator><name pos:start="611:12" pos:end="611:24">mjpeg_hsample</name><index pos:start="611:25" pos:end="611:27">[<expr pos:start="611:26" pos:end="611:26"><literal type="number" pos:start="611:26" pos:end="611:26">2</literal></expr>]</index></name> <operator pos:start="611:29" pos:end="611:29">=</operator> <literal type="number" pos:start="611:31" pos:end="611:31">2</literal><operator pos:start="611:32" pos:end="611:33">&gt;&gt;</operator><name pos:start="611:34" pos:end="611:47">chroma_h_shift</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="613:10" pos:end="621:9">else<block pos:start="613:14" pos:end="621:9">{<block_content pos:start="615:13" pos:end="619:58">

            <expr_stmt pos:start="615:13" pos:end="619:58"><expr pos:start="615:13" pos:end="619:57"><name pos:start="615:13" pos:end="615:31"><name pos:start="615:13" pos:end="615:13">s</name><operator pos:start="615:14" pos:end="615:15">-&gt;</operator><name pos:start="615:16" pos:end="615:28">mjpeg_vsample</name><index pos:start="615:29" pos:end="615:31">[<expr pos:start="615:30" pos:end="615:30"><literal type="number" pos:start="615:30" pos:end="615:30">0</literal></expr>]</index></name> <operator pos:start="615:33" pos:end="615:33">=</operator> <name pos:start="615:35" pos:end="615:53"><name pos:start="615:35" pos:end="615:35">s</name><operator pos:start="615:36" pos:end="615:37">-&gt;</operator><name pos:start="615:38" pos:end="615:50">mjpeg_hsample</name><index pos:start="615:51" pos:end="615:53">[<expr pos:start="615:52" pos:end="615:52"><literal type="number" pos:start="615:52" pos:end="615:52">0</literal></expr>]</index></name> <operator pos:start="615:55" pos:end="615:55">=</operator>

            <name pos:start="617:13" pos:end="617:31"><name pos:start="617:13" pos:end="617:13">s</name><operator pos:start="617:14" pos:end="617:15">-&gt;</operator><name pos:start="617:16" pos:end="617:28">mjpeg_vsample</name><index pos:start="617:29" pos:end="617:31">[<expr pos:start="617:30" pos:end="617:30"><literal type="number" pos:start="617:30" pos:end="617:30">1</literal></expr>]</index></name> <operator pos:start="617:33" pos:end="617:33">=</operator> <name pos:start="617:35" pos:end="617:53"><name pos:start="617:35" pos:end="617:35">s</name><operator pos:start="617:36" pos:end="617:37">-&gt;</operator><name pos:start="617:38" pos:end="617:50">mjpeg_hsample</name><index pos:start="617:51" pos:end="617:53">[<expr pos:start="617:52" pos:end="617:52"><literal type="number" pos:start="617:52" pos:end="617:52">1</literal></expr>]</index></name> <operator pos:start="617:55" pos:end="617:55">=</operator>

            <name pos:start="619:13" pos:end="619:31"><name pos:start="619:13" pos:end="619:13">s</name><operator pos:start="619:14" pos:end="619:15">-&gt;</operator><name pos:start="619:16" pos:end="619:28">mjpeg_vsample</name><index pos:start="619:29" pos:end="619:31">[<expr pos:start="619:30" pos:end="619:30"><literal type="number" pos:start="619:30" pos:end="619:30">2</literal></expr>]</index></name> <operator pos:start="619:33" pos:end="619:33">=</operator> <name pos:start="619:35" pos:end="619:53"><name pos:start="619:35" pos:end="619:35">s</name><operator pos:start="619:36" pos:end="619:37">-&gt;</operator><name pos:start="619:38" pos:end="619:50">mjpeg_hsample</name><index pos:start="619:51" pos:end="619:53">[<expr pos:start="619:52" pos:end="619:52"><literal type="number" pos:start="619:52" pos:end="619:52">2</literal></expr>]</index></name> <operator pos:start="619:55" pos:end="619:55">=</operator> <literal type="number" pos:start="619:57" pos:end="619:57">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="623:9" pos:end="627:22"><if pos:start="623:9" pos:end="627:22">if <condition pos:start="623:12" pos:end="625:43">(<expr pos:start="623:13" pos:end="625:42"><operator pos:start="623:13" pos:end="623:13">!</operator><operator pos:start="623:14" pos:end="623:14">(</operator><name pos:start="623:15" pos:end="623:34">CONFIG_MJPEG_ENCODER</name> <operator pos:start="623:36" pos:end="623:37">||</operator> <name pos:start="623:39" pos:end="623:58">CONFIG_LJPEG_ENCODER</name><operator pos:start="623:59" pos:end="623:59">)</operator>

            <operator pos:start="625:13" pos:end="625:14">||</operator> <call pos:start="625:16" pos:end="625:38"><name pos:start="625:16" pos:end="625:35">ff_mjpeg_encode_init</name><argument_list pos:start="625:36" pos:end="625:38">(<argument pos:start="625:37" pos:end="625:37"><expr pos:start="625:37" pos:end="625:37"><name pos:start="625:37" pos:end="625:37">s</name></expr></argument>)</argument_list></call> <operator pos:start="625:40" pos:end="625:40">&lt;</operator> <literal type="number" pos:start="625:42" pos:end="625:42">0</literal></expr>)</condition><block type="pseudo" pos:start="627:13" pos:end="627:22"><block_content pos:start="627:13" pos:end="627:22">

            <return pos:start="627:13" pos:end="627:22">return <expr pos:start="627:20" pos:end="627:21"><operator pos:start="627:20" pos:end="627:20">-</operator><literal type="number" pos:start="627:21" pos:end="627:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="629:9" pos:end="629:23"><expr pos:start="629:9" pos:end="629:22"><name pos:start="629:9" pos:end="629:20"><name pos:start="629:9" pos:end="629:13">avctx</name><operator pos:start="629:14" pos:end="629:15">-&gt;</operator><name pos:start="629:16" pos:end="629:20">delay</name></name><operator pos:start="629:21" pos:end="629:21">=</operator><literal type="number" pos:start="629:22" pos:end="629:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="631:9" pos:end="631:23"><expr pos:start="631:9" pos:end="631:22"><name pos:start="631:9" pos:end="631:20"><name pos:start="631:9" pos:end="631:9">s</name><operator pos:start="631:10" pos:end="631:11">-&gt;</operator><name pos:start="631:12" pos:end="631:20">low_delay</name></name><operator pos:start="631:21" pos:end="631:21">=</operator><literal type="number" pos:start="631:22" pos:end="631:22">1</literal></expr>;</expr_stmt>

        <break pos:start="633:9" pos:end="633:14">break;</break>

    <case pos:start="635:5" pos:end="635:23">case <expr pos:start="635:10" pos:end="635:22"><name pos:start="635:10" pos:end="635:22">CODEC_ID_H261</name></expr>:</case>

        <if_stmt pos:start="637:9" pos:end="637:45"><if pos:start="637:9" pos:end="637:45">if <condition pos:start="637:12" pos:end="637:33">(<expr pos:start="637:13" pos:end="637:32"><operator pos:start="637:13" pos:end="637:13">!</operator><name pos:start="637:14" pos:end="637:32">CONFIG_H261_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="637:36" pos:end="637:45"><block_content pos:start="637:36" pos:end="637:45">  <return pos:start="637:36" pos:end="637:45">return <expr pos:start="637:43" pos:end="637:44"><operator pos:start="637:43" pos:end="637:43">-</operator><literal type="number" pos:start="637:44" pos:end="637:44">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="639:9" pos:end="645:9"><if pos:start="639:9" pos:end="645:9">if <condition pos:start="639:12" pos:end="639:64">(<expr pos:start="639:13" pos:end="639:63"><call pos:start="639:13" pos:end="639:59"><name pos:start="639:13" pos:end="639:38">ff_h261_get_picture_format</name><argument_list pos:start="639:39" pos:end="639:59">(<argument pos:start="639:40" pos:end="639:47"><expr pos:start="639:40" pos:end="639:47"><name pos:start="639:40" pos:end="639:47"><name pos:start="639:40" pos:end="639:40">s</name><operator pos:start="639:41" pos:end="639:42">-&gt;</operator><name pos:start="639:43" pos:end="639:47">width</name></name></expr></argument>, <argument pos:start="639:50" pos:end="639:58"><expr pos:start="639:50" pos:end="639:58"><name pos:start="639:50" pos:end="639:58"><name pos:start="639:50" pos:end="639:50">s</name><operator pos:start="639:51" pos:end="639:52">-&gt;</operator><name pos:start="639:53" pos:end="639:58">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="639:61" pos:end="639:61">&lt;</operator> <literal type="number" pos:start="639:63" pos:end="639:63">0</literal></expr>)</condition> <block pos:start="639:66" pos:end="645:9">{<block_content pos:start="641:13" pos:end="643:22">

            <expr_stmt pos:start="641:13" pos:end="641:170"><expr pos:start="641:13" pos:end="641:169"><call pos:start="641:13" pos:end="641:169"><name pos:start="641:13" pos:end="641:18">av_log</name><argument_list pos:start="641:19" pos:end="641:169">(<argument pos:start="641:20" pos:end="641:24"><expr pos:start="641:20" pos:end="641:24"><name pos:start="641:20" pos:end="641:24">avctx</name></expr></argument>, <argument pos:start="641:27" pos:end="641:38"><expr pos:start="641:27" pos:end="641:38"><name pos:start="641:27" pos:end="641:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="641:41" pos:end="641:147"><expr pos:start="641:41" pos:end="641:147"><literal type="string" pos:start="641:41" pos:end="641:147">"The specified picture size of %dx%d is not valid for the H.261 codec.\nValid sizes are 176x144, 352x288\n"</literal></expr></argument>, <argument pos:start="641:150" pos:end="641:157"><expr pos:start="641:150" pos:end="641:157"><name pos:start="641:150" pos:end="641:157"><name pos:start="641:150" pos:end="641:150">s</name><operator pos:start="641:151" pos:end="641:152">-&gt;</operator><name pos:start="641:153" pos:end="641:157">width</name></name></expr></argument>, <argument pos:start="641:160" pos:end="641:168"><expr pos:start="641:160" pos:end="641:168"><name pos:start="641:160" pos:end="641:168"><name pos:start="641:160" pos:end="641:160">s</name><operator pos:start="641:161" pos:end="641:162">-&gt;</operator><name pos:start="641:163" pos:end="641:168">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="643:13" pos:end="643:22">return <expr pos:start="643:20" pos:end="643:21"><operator pos:start="643:20" pos:end="643:20">-</operator><literal type="number" pos:start="643:21" pos:end="643:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="647:9" pos:end="647:33"><expr pos:start="647:9" pos:end="647:32"><name pos:start="647:9" pos:end="647:21"><name pos:start="647:9" pos:end="647:9">s</name><operator pos:start="647:10" pos:end="647:11">-&gt;</operator><name pos:start="647:12" pos:end="647:21">out_format</name></name> <operator pos:start="647:23" pos:end="647:23">=</operator> <name pos:start="647:25" pos:end="647:32">FMT_H261</name></expr>;</expr_stmt>

        <expr_stmt pos:start="649:9" pos:end="649:23"><expr pos:start="649:9" pos:end="649:22"><name pos:start="649:9" pos:end="649:20"><name pos:start="649:9" pos:end="649:13">avctx</name><operator pos:start="649:14" pos:end="649:15">-&gt;</operator><name pos:start="649:16" pos:end="649:20">delay</name></name><operator pos:start="649:21" pos:end="649:21">=</operator><literal type="number" pos:start="649:22" pos:end="649:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="651:9" pos:end="651:23"><expr pos:start="651:9" pos:end="651:22"><name pos:start="651:9" pos:end="651:20"><name pos:start="651:9" pos:end="651:9">s</name><operator pos:start="651:10" pos:end="651:11">-&gt;</operator><name pos:start="651:12" pos:end="651:20">low_delay</name></name><operator pos:start="651:21" pos:end="651:21">=</operator><literal type="number" pos:start="651:22" pos:end="651:22">1</literal></expr>;</expr_stmt>

        <break pos:start="653:9" pos:end="653:14">break;</break>

    <case pos:start="655:5" pos:end="655:23">case <expr pos:start="655:10" pos:end="655:22"><name pos:start="655:10" pos:end="655:22">CODEC_ID_H263</name></expr>:</case>

        <if_stmt pos:start="657:9" pos:end="657:45"><if pos:start="657:9" pos:end="657:45">if <condition pos:start="657:12" pos:end="657:33">(<expr pos:start="657:13" pos:end="657:32"><operator pos:start="657:13" pos:end="657:13">!</operator><name pos:start="657:14" pos:end="657:32">CONFIG_H263_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="657:36" pos:end="657:45"><block_content pos:start="657:36" pos:end="657:45">  <return pos:start="657:36" pos:end="657:45">return <expr pos:start="657:43" pos:end="657:44"><operator pos:start="657:43" pos:end="657:43">-</operator><literal type="number" pos:start="657:44" pos:end="657:44">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="659:9" pos:end="665:9"><if pos:start="659:9" pos:end="665:9">if <condition pos:start="659:12" pos:end="659:62">(<expr pos:start="659:13" pos:end="659:61"><call pos:start="659:13" pos:end="659:56"><name pos:start="659:13" pos:end="659:35">h263_get_picture_format</name><argument_list pos:start="659:36" pos:end="659:56">(<argument pos:start="659:37" pos:end="659:44"><expr pos:start="659:37" pos:end="659:44"><name pos:start="659:37" pos:end="659:44"><name pos:start="659:37" pos:end="659:37">s</name><operator pos:start="659:38" pos:end="659:39">-&gt;</operator><name pos:start="659:40" pos:end="659:44">width</name></name></expr></argument>, <argument pos:start="659:47" pos:end="659:55"><expr pos:start="659:47" pos:end="659:55"><name pos:start="659:47" pos:end="659:55"><name pos:start="659:47" pos:end="659:47">s</name><operator pos:start="659:48" pos:end="659:49">-&gt;</operator><name pos:start="659:50" pos:end="659:55">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="659:58" pos:end="659:59">==</operator> <literal type="number" pos:start="659:61" pos:end="659:61">7</literal></expr>)</condition> <block pos:start="659:64" pos:end="665:9">{<block_content pos:start="661:13" pos:end="663:22">

            <expr_stmt pos:start="661:13" pos:end="661:214"><expr pos:start="661:13" pos:end="661:213"><call pos:start="661:13" pos:end="661:213"><name pos:start="661:13" pos:end="661:18">av_log</name><argument_list pos:start="661:19" pos:end="661:213">(<argument pos:start="661:20" pos:end="661:24"><expr pos:start="661:20" pos:end="661:24"><name pos:start="661:20" pos:end="661:24">avctx</name></expr></argument>, <argument pos:start="661:27" pos:end="661:37"><expr pos:start="661:27" pos:end="661:37"><name pos:start="661:27" pos:end="661:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="661:40" pos:end="661:191"><expr pos:start="661:40" pos:end="661:191"><literal type="string" pos:start="661:40" pos:end="661:191">"The specified picture size of %dx%d is not valid for the H.263 codec.\nValid sizes are 128x96, 176x144, 352x288, 704x576, and 1408x1152. Try H.263+.\n"</literal></expr></argument>, <argument pos:start="661:194" pos:end="661:201"><expr pos:start="661:194" pos:end="661:201"><name pos:start="661:194" pos:end="661:201"><name pos:start="661:194" pos:end="661:194">s</name><operator pos:start="661:195" pos:end="661:196">-&gt;</operator><name pos:start="661:197" pos:end="661:201">width</name></name></expr></argument>, <argument pos:start="661:204" pos:end="661:212"><expr pos:start="661:204" pos:end="661:212"><name pos:start="661:204" pos:end="661:212"><name pos:start="661:204" pos:end="661:204">s</name><operator pos:start="661:205" pos:end="661:206">-&gt;</operator><name pos:start="661:207" pos:end="661:212">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="663:13" pos:end="663:22">return <expr pos:start="663:20" pos:end="663:21"><operator pos:start="663:20" pos:end="663:20">-</operator><literal type="number" pos:start="663:21" pos:end="663:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="667:9" pos:end="667:33"><expr pos:start="667:9" pos:end="667:32"><name pos:start="667:9" pos:end="667:21"><name pos:start="667:9" pos:end="667:9">s</name><operator pos:start="667:10" pos:end="667:11">-&gt;</operator><name pos:start="667:12" pos:end="667:21">out_format</name></name> <operator pos:start="667:23" pos:end="667:23">=</operator> <name pos:start="667:25" pos:end="667:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="669:9" pos:end="669:56"><expr pos:start="669:9" pos:end="669:55"><name pos:start="669:9" pos:end="669:15"><name pos:start="669:9" pos:end="669:9">s</name><operator pos:start="669:10" pos:end="669:11">-&gt;</operator><name pos:start="669:12" pos:end="669:15">obmc</name></name><operator pos:start="669:16" pos:end="669:16">=</operator> <ternary pos:start="669:18" pos:end="669:55"><condition pos:start="669:18" pos:end="669:51"><expr pos:start="669:18" pos:end="669:49"><operator pos:start="669:18" pos:end="669:18">(</operator><name pos:start="669:19" pos:end="669:30"><name pos:start="669:19" pos:end="669:23">avctx</name><operator pos:start="669:24" pos:end="669:25">-&gt;</operator><name pos:start="669:26" pos:end="669:30">flags</name></name> <operator pos:start="669:32" pos:end="669:32">&amp;</operator> <name pos:start="669:34" pos:end="669:48">CODEC_FLAG_OBMC</name><operator pos:start="669:49" pos:end="669:49">)</operator></expr> ?</condition><then pos:start="669:53" pos:end="669:53"> <expr pos:start="669:53" pos:end="669:53"><literal type="number" pos:start="669:53" pos:end="669:53">1</literal></expr></then><else pos:start="669:54" pos:end="669:55">:<expr pos:start="669:55" pos:end="669:55"><literal type="number" pos:start="669:55" pos:end="669:55">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="671:9" pos:end="671:23"><expr pos:start="671:9" pos:end="671:22"><name pos:start="671:9" pos:end="671:20"><name pos:start="671:9" pos:end="671:13">avctx</name><operator pos:start="671:14" pos:end="671:15">-&gt;</operator><name pos:start="671:16" pos:end="671:20">delay</name></name><operator pos:start="671:21" pos:end="671:21">=</operator><literal type="number" pos:start="671:22" pos:end="671:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="673:9" pos:end="673:23"><expr pos:start="673:9" pos:end="673:22"><name pos:start="673:9" pos:end="673:20"><name pos:start="673:9" pos:end="673:9">s</name><operator pos:start="673:10" pos:end="673:11">-&gt;</operator><name pos:start="673:12" pos:end="673:20">low_delay</name></name><operator pos:start="673:21" pos:end="673:21">=</operator><literal type="number" pos:start="673:22" pos:end="673:22">1</literal></expr>;</expr_stmt>

        <break pos:start="675:9" pos:end="675:14">break;</break>

    <case pos:start="677:5" pos:end="677:24">case <expr pos:start="677:10" pos:end="677:23"><name pos:start="677:10" pos:end="677:23">CODEC_ID_H263P</name></expr>:</case>

        <expr_stmt pos:start="679:9" pos:end="679:33"><expr pos:start="679:9" pos:end="679:32"><name pos:start="679:9" pos:end="679:21"><name pos:start="679:9" pos:end="679:9">s</name><operator pos:start="679:10" pos:end="679:11">-&gt;</operator><name pos:start="679:12" pos:end="679:21">out_format</name></name> <operator pos:start="679:23" pos:end="679:23">=</operator> <name pos:start="679:25" pos:end="679:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="681:9" pos:end="681:25"><expr pos:start="681:9" pos:end="681:24"><name pos:start="681:9" pos:end="681:20"><name pos:start="681:9" pos:end="681:9">s</name><operator pos:start="681:10" pos:end="681:11">-&gt;</operator><name pos:start="681:12" pos:end="681:20">h263_plus</name></name> <operator pos:start="681:22" pos:end="681:22">=</operator> <literal type="number" pos:start="681:24" pos:end="681:24">1</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="683:9" pos:end="683:16">/* Fx */</comment>

        <expr_stmt pos:start="685:9" pos:end="685:65"><expr pos:start="685:9" pos:end="685:64"><name pos:start="685:9" pos:end="685:18"><name pos:start="685:9" pos:end="685:9">s</name><operator pos:start="685:10" pos:end="685:11">-&gt;</operator><name pos:start="685:12" pos:end="685:18">umvplus</name></name> <operator pos:start="685:20" pos:end="685:20">=</operator> <ternary pos:start="685:22" pos:end="685:64"><condition pos:start="685:22" pos:end="685:60"><expr pos:start="685:22" pos:end="685:58"><operator pos:start="685:22" pos:end="685:22">(</operator><name pos:start="685:23" pos:end="685:34"><name pos:start="685:23" pos:end="685:27">avctx</name><operator pos:start="685:28" pos:end="685:29">-&gt;</operator><name pos:start="685:30" pos:end="685:34">flags</name></name> <operator pos:start="685:36" pos:end="685:36">&amp;</operator> <name pos:start="685:38" pos:end="685:57">CODEC_FLAG_H263P_UMV</name><operator pos:start="685:58" pos:end="685:58">)</operator></expr> ?</condition><then pos:start="685:62" pos:end="685:62"> <expr pos:start="685:62" pos:end="685:62"><literal type="number" pos:start="685:62" pos:end="685:62">1</literal></expr></then><else pos:start="685:63" pos:end="685:64">:<expr pos:start="685:64" pos:end="685:64"><literal type="number" pos:start="685:64" pos:end="685:64">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="687:9" pos:end="687:63"><expr pos:start="687:9" pos:end="687:62"><name pos:start="687:9" pos:end="687:19"><name pos:start="687:9" pos:end="687:9">s</name><operator pos:start="687:10" pos:end="687:11">-&gt;</operator><name pos:start="687:12" pos:end="687:19">h263_aic</name></name><operator pos:start="687:20" pos:end="687:20">=</operator> <ternary pos:start="687:22" pos:end="687:62"><condition pos:start="687:22" pos:end="687:58"><expr pos:start="687:22" pos:end="687:56"><operator pos:start="687:22" pos:end="687:22">(</operator><name pos:start="687:23" pos:end="687:34"><name pos:start="687:23" pos:end="687:27">avctx</name><operator pos:start="687:28" pos:end="687:29">-&gt;</operator><name pos:start="687:30" pos:end="687:34">flags</name></name> <operator pos:start="687:36" pos:end="687:36">&amp;</operator> <name pos:start="687:38" pos:end="687:55">CODEC_FLAG_AC_PRED</name><operator pos:start="687:56" pos:end="687:56">)</operator></expr> ?</condition><then pos:start="687:60" pos:end="687:60"> <expr pos:start="687:60" pos:end="687:60"><literal type="number" pos:start="687:60" pos:end="687:60">1</literal></expr></then><else pos:start="687:61" pos:end="687:62">:<expr pos:start="687:62" pos:end="687:62"><literal type="number" pos:start="687:62" pos:end="687:62">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="689:9" pos:end="689:39"><expr pos:start="689:9" pos:end="689:38"><name pos:start="689:9" pos:end="689:25"><name pos:start="689:9" pos:end="689:9">s</name><operator pos:start="689:10" pos:end="689:11">-&gt;</operator><name pos:start="689:12" pos:end="689:25">modified_quant</name></name><operator pos:start="689:26" pos:end="689:26">=</operator> <name pos:start="689:28" pos:end="689:38"><name pos:start="689:28" pos:end="689:28">s</name><operator pos:start="689:29" pos:end="689:30">-&gt;</operator><name pos:start="689:31" pos:end="689:38">h263_aic</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="691:9" pos:end="691:70"><expr pos:start="691:9" pos:end="691:69"><name pos:start="691:9" pos:end="691:24"><name pos:start="691:9" pos:end="691:9">s</name><operator pos:start="691:10" pos:end="691:11">-&gt;</operator><name pos:start="691:12" pos:end="691:24">alt_inter_vlc</name></name><operator pos:start="691:25" pos:end="691:25">=</operator> <ternary pos:start="691:27" pos:end="691:69"><condition pos:start="691:27" pos:end="691:65"><expr pos:start="691:27" pos:end="691:63"><operator pos:start="691:27" pos:end="691:27">(</operator><name pos:start="691:28" pos:end="691:39"><name pos:start="691:28" pos:end="691:32">avctx</name><operator pos:start="691:33" pos:end="691:34">-&gt;</operator><name pos:start="691:35" pos:end="691:39">flags</name></name> <operator pos:start="691:41" pos:end="691:41">&amp;</operator> <name pos:start="691:43" pos:end="691:62">CODEC_FLAG_H263P_AIV</name><operator pos:start="691:63" pos:end="691:63">)</operator></expr> ?</condition><then pos:start="691:67" pos:end="691:67"> <expr pos:start="691:67" pos:end="691:67"><literal type="number" pos:start="691:67" pos:end="691:67">1</literal></expr></then><else pos:start="691:68" pos:end="691:69">:<expr pos:start="691:69" pos:end="691:69"><literal type="number" pos:start="691:69" pos:end="691:69">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="693:9" pos:end="693:56"><expr pos:start="693:9" pos:end="693:55"><name pos:start="693:9" pos:end="693:15"><name pos:start="693:9" pos:end="693:9">s</name><operator pos:start="693:10" pos:end="693:11">-&gt;</operator><name pos:start="693:12" pos:end="693:15">obmc</name></name><operator pos:start="693:16" pos:end="693:16">=</operator> <ternary pos:start="693:18" pos:end="693:55"><condition pos:start="693:18" pos:end="693:51"><expr pos:start="693:18" pos:end="693:49"><operator pos:start="693:18" pos:end="693:18">(</operator><name pos:start="693:19" pos:end="693:30"><name pos:start="693:19" pos:end="693:23">avctx</name><operator pos:start="693:24" pos:end="693:25">-&gt;</operator><name pos:start="693:26" pos:end="693:30">flags</name></name> <operator pos:start="693:32" pos:end="693:32">&amp;</operator> <name pos:start="693:34" pos:end="693:48">CODEC_FLAG_OBMC</name><operator pos:start="693:49" pos:end="693:49">)</operator></expr> ?</condition><then pos:start="693:53" pos:end="693:53"> <expr pos:start="693:53" pos:end="693:53"><literal type="number" pos:start="693:53" pos:end="693:53">1</literal></expr></then><else pos:start="693:54" pos:end="693:55">:<expr pos:start="693:55" pos:end="693:55"><literal type="number" pos:start="693:55" pos:end="693:55">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="695:9" pos:end="695:70"><expr pos:start="695:9" pos:end="695:69"><name pos:start="695:9" pos:end="695:22"><name pos:start="695:9" pos:end="695:9">s</name><operator pos:start="695:10" pos:end="695:11">-&gt;</operator><name pos:start="695:12" pos:end="695:22">loop_filter</name></name><operator pos:start="695:23" pos:end="695:23">=</operator> <ternary pos:start="695:25" pos:end="695:69"><condition pos:start="695:25" pos:end="695:65"><expr pos:start="695:25" pos:end="695:63"><operator pos:start="695:25" pos:end="695:25">(</operator><name pos:start="695:26" pos:end="695:37"><name pos:start="695:26" pos:end="695:30">avctx</name><operator pos:start="695:31" pos:end="695:32">-&gt;</operator><name pos:start="695:33" pos:end="695:37">flags</name></name> <operator pos:start="695:39" pos:end="695:39">&amp;</operator> <name pos:start="695:41" pos:end="695:62">CODEC_FLAG_LOOP_FILTER</name><operator pos:start="695:63" pos:end="695:63">)</operator></expr> ?</condition><then pos:start="695:67" pos:end="695:67"> <expr pos:start="695:67" pos:end="695:67"><literal type="number" pos:start="695:67" pos:end="695:67">1</literal></expr></then><else pos:start="695:68" pos:end="695:69">:<expr pos:start="695:69" pos:end="695:69"><literal type="number" pos:start="695:69" pos:end="695:69">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="697:9" pos:end="697:68"><expr pos:start="697:9" pos:end="697:67"><name pos:start="697:9" pos:end="697:26"><name pos:start="697:9" pos:end="697:9">s</name><operator pos:start="697:10" pos:end="697:11">-&gt;</operator><name pos:start="697:12" pos:end="697:26">unrestricted_mv</name></name><operator pos:start="697:27" pos:end="697:27">=</operator> <name pos:start="697:29" pos:end="697:35"><name pos:start="697:29" pos:end="697:29">s</name><operator pos:start="697:30" pos:end="697:31">-&gt;</operator><name pos:start="697:32" pos:end="697:35">obmc</name></name> <operator pos:start="697:37" pos:end="697:38">||</operator> <name pos:start="697:40" pos:end="697:53"><name pos:start="697:40" pos:end="697:40">s</name><operator pos:start="697:41" pos:end="697:42">-&gt;</operator><name pos:start="697:43" pos:end="697:53">loop_filter</name></name> <operator pos:start="697:55" pos:end="697:56">||</operator> <name pos:start="697:58" pos:end="697:67"><name pos:start="697:58" pos:end="697:58">s</name><operator pos:start="697:59" pos:end="697:60">-&gt;</operator><name pos:start="697:61" pos:end="697:67">umvplus</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="699:9" pos:end="699:83"><expr pos:start="699:9" pos:end="699:82"><name pos:start="699:9" pos:end="699:32"><name pos:start="699:9" pos:end="699:9">s</name><operator pos:start="699:10" pos:end="699:11">-&gt;</operator><name pos:start="699:12" pos:end="699:32">h263_slice_structured</name></name><operator pos:start="699:33" pos:end="699:33">=</operator> <ternary pos:start="699:35" pos:end="699:82"><condition pos:start="699:35" pos:end="699:78"><expr pos:start="699:35" pos:end="699:76"><operator pos:start="699:35" pos:end="699:35">(</operator><name pos:start="699:36" pos:end="699:43"><name pos:start="699:36" pos:end="699:36">s</name><operator pos:start="699:37" pos:end="699:38">-&gt;</operator><name pos:start="699:39" pos:end="699:43">flags</name></name> <operator pos:start="699:45" pos:end="699:45">&amp;</operator> <name pos:start="699:47" pos:end="699:75">CODEC_FLAG_H263P_SLICE_STRUCT</name><operator pos:start="699:76" pos:end="699:76">)</operator></expr> ?</condition><then pos:start="699:80" pos:end="699:80"> <expr pos:start="699:80" pos:end="699:80"><literal type="number" pos:start="699:80" pos:end="699:80">1</literal></expr></then><else pos:start="699:81" pos:end="699:82">:<expr pos:start="699:82" pos:end="699:82"><literal type="number" pos:start="699:82" pos:end="699:82">0</literal></expr></else></ternary></expr>;</expr_stmt>



        <comment type="block" pos:start="703:9" pos:end="703:17">/* /Fx */</comment>

        <comment type="block" pos:start="705:9" pos:end="705:39">/* These are just to be sure */</comment>

        <expr_stmt pos:start="707:9" pos:end="707:23"><expr pos:start="707:9" pos:end="707:22"><name pos:start="707:9" pos:end="707:20"><name pos:start="707:9" pos:end="707:13">avctx</name><operator pos:start="707:14" pos:end="707:15">-&gt;</operator><name pos:start="707:16" pos:end="707:20">delay</name></name><operator pos:start="707:21" pos:end="707:21">=</operator><literal type="number" pos:start="707:22" pos:end="707:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="709:9" pos:end="709:23"><expr pos:start="709:9" pos:end="709:22"><name pos:start="709:9" pos:end="709:20"><name pos:start="709:9" pos:end="709:9">s</name><operator pos:start="709:10" pos:end="709:11">-&gt;</operator><name pos:start="709:12" pos:end="709:20">low_delay</name></name><operator pos:start="709:21" pos:end="709:21">=</operator><literal type="number" pos:start="709:22" pos:end="709:22">1</literal></expr>;</expr_stmt>

        <break pos:start="711:9" pos:end="711:14">break;</break>

    <case pos:start="713:5" pos:end="713:23">case <expr pos:start="713:10" pos:end="713:22"><name pos:start="713:10" pos:end="713:22">CODEC_ID_FLV1</name></expr>:</case>

        <expr_stmt pos:start="715:9" pos:end="715:33"><expr pos:start="715:9" pos:end="715:32"><name pos:start="715:9" pos:end="715:21"><name pos:start="715:9" pos:end="715:9">s</name><operator pos:start="715:10" pos:end="715:11">-&gt;</operator><name pos:start="715:12" pos:end="715:21">out_format</name></name> <operator pos:start="715:23" pos:end="715:23">=</operator> <name pos:start="715:25" pos:end="715:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="717:9" pos:end="717:24"><expr pos:start="717:9" pos:end="717:23"><name pos:start="717:9" pos:end="717:19"><name pos:start="717:9" pos:end="717:9">s</name><operator pos:start="717:10" pos:end="717:11">-&gt;</operator><name pos:start="717:12" pos:end="717:19">h263_flv</name></name> <operator pos:start="717:21" pos:end="717:21">=</operator> <literal type="number" pos:start="717:23" pos:end="717:23">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="717:26" pos:end="717:55">/* format = 1; 11-bit codes */</comment>

        <expr_stmt pos:start="719:9" pos:end="719:31"><expr pos:start="719:9" pos:end="719:30"><name pos:start="719:9" pos:end="719:26"><name pos:start="719:9" pos:end="719:9">s</name><operator pos:start="719:10" pos:end="719:11">-&gt;</operator><name pos:start="719:12" pos:end="719:26">unrestricted_mv</name></name> <operator pos:start="719:28" pos:end="719:28">=</operator> <literal type="number" pos:start="719:30" pos:end="719:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="721:9" pos:end="721:22"><expr pos:start="721:9" pos:end="721:21"><name pos:start="721:9" pos:end="721:19"><name pos:start="721:9" pos:end="721:9">s</name><operator pos:start="721:10" pos:end="721:11">-&gt;</operator><name pos:start="721:12" pos:end="721:19">rtp_mode</name></name><operator pos:start="721:20" pos:end="721:20">=</operator><literal type="number" pos:start="721:21" pos:end="721:21">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="721:24" pos:end="721:44">/* don't allow GOB */</comment>

        <expr_stmt pos:start="723:9" pos:end="723:23"><expr pos:start="723:9" pos:end="723:22"><name pos:start="723:9" pos:end="723:20"><name pos:start="723:9" pos:end="723:13">avctx</name><operator pos:start="723:14" pos:end="723:15">-&gt;</operator><name pos:start="723:16" pos:end="723:20">delay</name></name><operator pos:start="723:21" pos:end="723:21">=</operator><literal type="number" pos:start="723:22" pos:end="723:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="725:9" pos:end="725:23"><expr pos:start="725:9" pos:end="725:22"><name pos:start="725:9" pos:end="725:20"><name pos:start="725:9" pos:end="725:9">s</name><operator pos:start="725:10" pos:end="725:11">-&gt;</operator><name pos:start="725:12" pos:end="725:20">low_delay</name></name><operator pos:start="725:21" pos:end="725:21">=</operator><literal type="number" pos:start="725:22" pos:end="725:22">1</literal></expr>;</expr_stmt>

        <break pos:start="727:9" pos:end="727:14">break;</break>

    <case pos:start="729:5" pos:end="729:23">case <expr pos:start="729:10" pos:end="729:22"><name pos:start="729:10" pos:end="729:22">CODEC_ID_RV10</name></expr>:</case>

        <expr_stmt pos:start="731:9" pos:end="731:33"><expr pos:start="731:9" pos:end="731:32"><name pos:start="731:9" pos:end="731:21"><name pos:start="731:9" pos:end="731:9">s</name><operator pos:start="731:10" pos:end="731:11">-&gt;</operator><name pos:start="731:12" pos:end="731:21">out_format</name></name> <operator pos:start="731:23" pos:end="731:23">=</operator> <name pos:start="731:25" pos:end="731:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="733:9" pos:end="733:23"><expr pos:start="733:9" pos:end="733:22"><name pos:start="733:9" pos:end="733:20"><name pos:start="733:9" pos:end="733:13">avctx</name><operator pos:start="733:14" pos:end="733:15">-&gt;</operator><name pos:start="733:16" pos:end="733:20">delay</name></name><operator pos:start="733:21" pos:end="733:21">=</operator><literal type="number" pos:start="733:22" pos:end="733:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="735:9" pos:end="735:23"><expr pos:start="735:9" pos:end="735:22"><name pos:start="735:9" pos:end="735:20"><name pos:start="735:9" pos:end="735:9">s</name><operator pos:start="735:10" pos:end="735:11">-&gt;</operator><name pos:start="735:12" pos:end="735:20">low_delay</name></name><operator pos:start="735:21" pos:end="735:21">=</operator><literal type="number" pos:start="735:22" pos:end="735:22">1</literal></expr>;</expr_stmt>

        <break pos:start="737:9" pos:end="737:14">break;</break>

    <case pos:start="739:5" pos:end="739:23">case <expr pos:start="739:10" pos:end="739:22"><name pos:start="739:10" pos:end="739:22">CODEC_ID_RV20</name></expr>:</case>

        <expr_stmt pos:start="741:9" pos:end="741:33"><expr pos:start="741:9" pos:end="741:32"><name pos:start="741:9" pos:end="741:21"><name pos:start="741:9" pos:end="741:9">s</name><operator pos:start="741:10" pos:end="741:11">-&gt;</operator><name pos:start="741:12" pos:end="741:21">out_format</name></name> <operator pos:start="741:23" pos:end="741:23">=</operator> <name pos:start="741:25" pos:end="741:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="743:9" pos:end="743:23"><expr pos:start="743:9" pos:end="743:22"><name pos:start="743:9" pos:end="743:20"><name pos:start="743:9" pos:end="743:13">avctx</name><operator pos:start="743:14" pos:end="743:15">-&gt;</operator><name pos:start="743:16" pos:end="743:20">delay</name></name><operator pos:start="743:21" pos:end="743:21">=</operator><literal type="number" pos:start="743:22" pos:end="743:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="745:9" pos:end="745:23"><expr pos:start="745:9" pos:end="745:22"><name pos:start="745:9" pos:end="745:20"><name pos:start="745:9" pos:end="745:9">s</name><operator pos:start="745:10" pos:end="745:11">-&gt;</operator><name pos:start="745:12" pos:end="745:20">low_delay</name></name><operator pos:start="745:21" pos:end="745:21">=</operator><literal type="number" pos:start="745:22" pos:end="745:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="747:9" pos:end="747:28"><expr pos:start="747:9" pos:end="747:27"><name pos:start="747:9" pos:end="747:25"><name pos:start="747:9" pos:end="747:9">s</name><operator pos:start="747:10" pos:end="747:11">-&gt;</operator><name pos:start="747:12" pos:end="747:25">modified_quant</name></name><operator pos:start="747:26" pos:end="747:26">=</operator><literal type="number" pos:start="747:27" pos:end="747:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="749:9" pos:end="749:22"><expr pos:start="749:9" pos:end="749:21"><name pos:start="749:9" pos:end="749:19"><name pos:start="749:9" pos:end="749:9">s</name><operator pos:start="749:10" pos:end="749:11">-&gt;</operator><name pos:start="749:12" pos:end="749:19">h263_aic</name></name><operator pos:start="749:20" pos:end="749:20">=</operator><literal type="number" pos:start="749:21" pos:end="749:21">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="751:9" pos:end="751:23"><expr pos:start="751:9" pos:end="751:22"><name pos:start="751:9" pos:end="751:20"><name pos:start="751:9" pos:end="751:9">s</name><operator pos:start="751:10" pos:end="751:11">-&gt;</operator><name pos:start="751:12" pos:end="751:20">h263_plus</name></name><operator pos:start="751:21" pos:end="751:21">=</operator><literal type="number" pos:start="751:22" pos:end="751:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="753:9" pos:end="753:25"><expr pos:start="753:9" pos:end="753:24"><name pos:start="753:9" pos:end="753:22"><name pos:start="753:9" pos:end="753:9">s</name><operator pos:start="753:10" pos:end="753:11">-&gt;</operator><name pos:start="753:12" pos:end="753:22">loop_filter</name></name><operator pos:start="753:23" pos:end="753:23">=</operator><literal type="number" pos:start="753:24" pos:end="753:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="755:9" pos:end="755:68"><expr pos:start="755:9" pos:end="755:67"><name pos:start="755:9" pos:end="755:26"><name pos:start="755:9" pos:end="755:9">s</name><operator pos:start="755:10" pos:end="755:11">-&gt;</operator><name pos:start="755:12" pos:end="755:26">unrestricted_mv</name></name><operator pos:start="755:27" pos:end="755:27">=</operator> <name pos:start="755:29" pos:end="755:35"><name pos:start="755:29" pos:end="755:29">s</name><operator pos:start="755:30" pos:end="755:31">-&gt;</operator><name pos:start="755:32" pos:end="755:35">obmc</name></name> <operator pos:start="755:37" pos:end="755:38">||</operator> <name pos:start="755:40" pos:end="755:53"><name pos:start="755:40" pos:end="755:40">s</name><operator pos:start="755:41" pos:end="755:42">-&gt;</operator><name pos:start="755:43" pos:end="755:53">loop_filter</name></name> <operator pos:start="755:55" pos:end="755:56">||</operator> <name pos:start="755:58" pos:end="755:67"><name pos:start="755:58" pos:end="755:58">s</name><operator pos:start="755:59" pos:end="755:60">-&gt;</operator><name pos:start="755:61" pos:end="755:67">umvplus</name></name></expr>;</expr_stmt>

        <break pos:start="757:9" pos:end="757:14">break;</break>

    <case pos:start="759:5" pos:end="759:24">case <expr pos:start="759:10" pos:end="759:23"><name pos:start="759:10" pos:end="759:23">CODEC_ID_MPEG4</name></expr>:</case>

        <expr_stmt pos:start="761:9" pos:end="761:33"><expr pos:start="761:9" pos:end="761:32"><name pos:start="761:9" pos:end="761:21"><name pos:start="761:9" pos:end="761:9">s</name><operator pos:start="761:10" pos:end="761:11">-&gt;</operator><name pos:start="761:12" pos:end="761:21">out_format</name></name> <operator pos:start="761:23" pos:end="761:23">=</operator> <name pos:start="761:25" pos:end="761:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="763:9" pos:end="763:25"><expr pos:start="763:9" pos:end="763:24"><name pos:start="763:9" pos:end="763:20"><name pos:start="763:9" pos:end="763:9">s</name><operator pos:start="763:10" pos:end="763:11">-&gt;</operator><name pos:start="763:12" pos:end="763:20">h263_pred</name></name> <operator pos:start="763:22" pos:end="763:22">=</operator> <literal type="number" pos:start="763:24" pos:end="763:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="765:9" pos:end="765:31"><expr pos:start="765:9" pos:end="765:30"><name pos:start="765:9" pos:end="765:26"><name pos:start="765:9" pos:end="765:9">s</name><operator pos:start="765:10" pos:end="765:11">-&gt;</operator><name pos:start="765:12" pos:end="765:26">unrestricted_mv</name></name> <operator pos:start="765:28" pos:end="765:28">=</operator> <literal type="number" pos:start="765:30" pos:end="765:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="767:9" pos:end="767:46"><expr pos:start="767:9" pos:end="767:45"><name pos:start="767:9" pos:end="767:20"><name pos:start="767:9" pos:end="767:9">s</name><operator pos:start="767:10" pos:end="767:11">-&gt;</operator><name pos:start="767:12" pos:end="767:20">low_delay</name></name><operator pos:start="767:21" pos:end="767:21">=</operator> <ternary pos:start="767:23" pos:end="767:45"><condition pos:start="767:23" pos:end="767:39"><expr pos:start="767:23" pos:end="767:37"><name pos:start="767:23" pos:end="767:37"><name pos:start="767:23" pos:end="767:23">s</name><operator pos:start="767:24" pos:end="767:25">-&gt;</operator><name pos:start="767:26" pos:end="767:37">max_b_frames</name></name></expr> ?</condition><then pos:start="767:41" pos:end="767:41"> <expr pos:start="767:41" pos:end="767:41"><literal type="number" pos:start="767:41" pos:end="767:41">0</literal></expr> </then><else pos:start="767:43" pos:end="767:45">: <expr pos:start="767:45" pos:end="767:45"><literal type="number" pos:start="767:45" pos:end="767:45">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="769:9" pos:end="769:63"><expr pos:start="769:9" pos:end="769:62"><name pos:start="769:9" pos:end="769:20"><name pos:start="769:9" pos:end="769:13">avctx</name><operator pos:start="769:14" pos:end="769:15">-&gt;</operator><name pos:start="769:16" pos:end="769:20">delay</name></name><operator pos:start="769:21" pos:end="769:21">=</operator> <ternary pos:start="769:23" pos:end="769:62"><condition pos:start="769:23" pos:end="769:36"><expr pos:start="769:23" pos:end="769:34"><name pos:start="769:23" pos:end="769:34"><name pos:start="769:23" pos:end="769:23">s</name><operator pos:start="769:24" pos:end="769:25">-&gt;</operator><name pos:start="769:26" pos:end="769:34">low_delay</name></name></expr> ?</condition><then pos:start="769:38" pos:end="769:38"> <expr pos:start="769:38" pos:end="769:38"><literal type="number" pos:start="769:38" pos:end="769:38">0</literal></expr> </then><else pos:start="769:40" pos:end="769:62">: <expr pos:start="769:42" pos:end="769:62"><operator pos:start="769:42" pos:end="769:42">(</operator><name pos:start="769:43" pos:end="769:57"><name pos:start="769:43" pos:end="769:43">s</name><operator pos:start="769:44" pos:end="769:45">-&gt;</operator><name pos:start="769:46" pos:end="769:57">max_b_frames</name></name> <operator pos:start="769:59" pos:end="769:59">+</operator> <literal type="number" pos:start="769:61" pos:end="769:61">1</literal><operator pos:start="769:62" pos:end="769:62">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="771:9" pos:end="771:14">break;</break>

    <case pos:start="773:5" pos:end="773:28">case <expr pos:start="773:10" pos:end="773:27"><name pos:start="773:10" pos:end="773:27">CODEC_ID_MSMPEG4V1</name></expr>:</case>

        <expr_stmt pos:start="775:9" pos:end="775:33"><expr pos:start="775:9" pos:end="775:32"><name pos:start="775:9" pos:end="775:21"><name pos:start="775:9" pos:end="775:9">s</name><operator pos:start="775:10" pos:end="775:11">-&gt;</operator><name pos:start="775:12" pos:end="775:21">out_format</name></name> <operator pos:start="775:23" pos:end="775:23">=</operator> <name pos:start="775:25" pos:end="775:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="777:9" pos:end="777:28"><expr pos:start="777:9" pos:end="777:27"><name pos:start="777:9" pos:end="777:23"><name pos:start="777:9" pos:end="777:9">s</name><operator pos:start="777:10" pos:end="777:11">-&gt;</operator><name pos:start="777:12" pos:end="777:23">h263_msmpeg4</name></name> <operator pos:start="777:25" pos:end="777:25">=</operator> <literal type="number" pos:start="777:27" pos:end="777:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="779:9" pos:end="779:25"><expr pos:start="779:9" pos:end="779:24"><name pos:start="779:9" pos:end="779:20"><name pos:start="779:9" pos:end="779:9">s</name><operator pos:start="779:10" pos:end="779:11">-&gt;</operator><name pos:start="779:12" pos:end="779:20">h263_pred</name></name> <operator pos:start="779:22" pos:end="779:22">=</operator> <literal type="number" pos:start="779:24" pos:end="779:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="781:9" pos:end="781:31"><expr pos:start="781:9" pos:end="781:30"><name pos:start="781:9" pos:end="781:26"><name pos:start="781:9" pos:end="781:9">s</name><operator pos:start="781:10" pos:end="781:11">-&gt;</operator><name pos:start="781:12" pos:end="781:26">unrestricted_mv</name></name> <operator pos:start="781:28" pos:end="781:28">=</operator> <literal type="number" pos:start="781:30" pos:end="781:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="783:9" pos:end="783:30"><expr pos:start="783:9" pos:end="783:29"><name pos:start="783:9" pos:end="783:26"><name pos:start="783:9" pos:end="783:9">s</name><operator pos:start="783:10" pos:end="783:11">-&gt;</operator><name pos:start="783:12" pos:end="783:26">msmpeg4_version</name></name><operator pos:start="783:27" pos:end="783:27">=</operator> <literal type="number" pos:start="783:29" pos:end="783:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="785:9" pos:end="785:23"><expr pos:start="785:9" pos:end="785:22"><name pos:start="785:9" pos:end="785:20"><name pos:start="785:9" pos:end="785:13">avctx</name><operator pos:start="785:14" pos:end="785:15">-&gt;</operator><name pos:start="785:16" pos:end="785:20">delay</name></name><operator pos:start="785:21" pos:end="785:21">=</operator><literal type="number" pos:start="785:22" pos:end="785:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="787:9" pos:end="787:23"><expr pos:start="787:9" pos:end="787:22"><name pos:start="787:9" pos:end="787:20"><name pos:start="787:9" pos:end="787:9">s</name><operator pos:start="787:10" pos:end="787:11">-&gt;</operator><name pos:start="787:12" pos:end="787:20">low_delay</name></name><operator pos:start="787:21" pos:end="787:21">=</operator><literal type="number" pos:start="787:22" pos:end="787:22">1</literal></expr>;</expr_stmt>

        <break pos:start="789:9" pos:end="789:14">break;</break>

    <case pos:start="791:5" pos:end="791:28">case <expr pos:start="791:10" pos:end="791:27"><name pos:start="791:10" pos:end="791:27">CODEC_ID_MSMPEG4V2</name></expr>:</case>

        <expr_stmt pos:start="793:9" pos:end="793:33"><expr pos:start="793:9" pos:end="793:32"><name pos:start="793:9" pos:end="793:21"><name pos:start="793:9" pos:end="793:9">s</name><operator pos:start="793:10" pos:end="793:11">-&gt;</operator><name pos:start="793:12" pos:end="793:21">out_format</name></name> <operator pos:start="793:23" pos:end="793:23">=</operator> <name pos:start="793:25" pos:end="793:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="795:9" pos:end="795:28"><expr pos:start="795:9" pos:end="795:27"><name pos:start="795:9" pos:end="795:23"><name pos:start="795:9" pos:end="795:9">s</name><operator pos:start="795:10" pos:end="795:11">-&gt;</operator><name pos:start="795:12" pos:end="795:23">h263_msmpeg4</name></name> <operator pos:start="795:25" pos:end="795:25">=</operator> <literal type="number" pos:start="795:27" pos:end="795:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="797:9" pos:end="797:25"><expr pos:start="797:9" pos:end="797:24"><name pos:start="797:9" pos:end="797:20"><name pos:start="797:9" pos:end="797:9">s</name><operator pos:start="797:10" pos:end="797:11">-&gt;</operator><name pos:start="797:12" pos:end="797:20">h263_pred</name></name> <operator pos:start="797:22" pos:end="797:22">=</operator> <literal type="number" pos:start="797:24" pos:end="797:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="799:9" pos:end="799:31"><expr pos:start="799:9" pos:end="799:30"><name pos:start="799:9" pos:end="799:26"><name pos:start="799:9" pos:end="799:9">s</name><operator pos:start="799:10" pos:end="799:11">-&gt;</operator><name pos:start="799:12" pos:end="799:26">unrestricted_mv</name></name> <operator pos:start="799:28" pos:end="799:28">=</operator> <literal type="number" pos:start="799:30" pos:end="799:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="801:9" pos:end="801:30"><expr pos:start="801:9" pos:end="801:29"><name pos:start="801:9" pos:end="801:26"><name pos:start="801:9" pos:end="801:9">s</name><operator pos:start="801:10" pos:end="801:11">-&gt;</operator><name pos:start="801:12" pos:end="801:26">msmpeg4_version</name></name><operator pos:start="801:27" pos:end="801:27">=</operator> <literal type="number" pos:start="801:29" pos:end="801:29">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="803:9" pos:end="803:23"><expr pos:start="803:9" pos:end="803:22"><name pos:start="803:9" pos:end="803:20"><name pos:start="803:9" pos:end="803:13">avctx</name><operator pos:start="803:14" pos:end="803:15">-&gt;</operator><name pos:start="803:16" pos:end="803:20">delay</name></name><operator pos:start="803:21" pos:end="803:21">=</operator><literal type="number" pos:start="803:22" pos:end="803:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="805:9" pos:end="805:23"><expr pos:start="805:9" pos:end="805:22"><name pos:start="805:9" pos:end="805:20"><name pos:start="805:9" pos:end="805:9">s</name><operator pos:start="805:10" pos:end="805:11">-&gt;</operator><name pos:start="805:12" pos:end="805:20">low_delay</name></name><operator pos:start="805:21" pos:end="805:21">=</operator><literal type="number" pos:start="805:22" pos:end="805:22">1</literal></expr>;</expr_stmt>

        <break pos:start="807:9" pos:end="807:14">break;</break>

    <case pos:start="809:5" pos:end="809:28">case <expr pos:start="809:10" pos:end="809:27"><name pos:start="809:10" pos:end="809:27">CODEC_ID_MSMPEG4V3</name></expr>:</case>

        <expr_stmt pos:start="811:9" pos:end="811:33"><expr pos:start="811:9" pos:end="811:32"><name pos:start="811:9" pos:end="811:21"><name pos:start="811:9" pos:end="811:9">s</name><operator pos:start="811:10" pos:end="811:11">-&gt;</operator><name pos:start="811:12" pos:end="811:21">out_format</name></name> <operator pos:start="811:23" pos:end="811:23">=</operator> <name pos:start="811:25" pos:end="811:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="813:9" pos:end="813:28"><expr pos:start="813:9" pos:end="813:27"><name pos:start="813:9" pos:end="813:23"><name pos:start="813:9" pos:end="813:9">s</name><operator pos:start="813:10" pos:end="813:11">-&gt;</operator><name pos:start="813:12" pos:end="813:23">h263_msmpeg4</name></name> <operator pos:start="813:25" pos:end="813:25">=</operator> <literal type="number" pos:start="813:27" pos:end="813:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="815:9" pos:end="815:25"><expr pos:start="815:9" pos:end="815:24"><name pos:start="815:9" pos:end="815:20"><name pos:start="815:9" pos:end="815:9">s</name><operator pos:start="815:10" pos:end="815:11">-&gt;</operator><name pos:start="815:12" pos:end="815:20">h263_pred</name></name> <operator pos:start="815:22" pos:end="815:22">=</operator> <literal type="number" pos:start="815:24" pos:end="815:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="817:9" pos:end="817:31"><expr pos:start="817:9" pos:end="817:30"><name pos:start="817:9" pos:end="817:26"><name pos:start="817:9" pos:end="817:9">s</name><operator pos:start="817:10" pos:end="817:11">-&gt;</operator><name pos:start="817:12" pos:end="817:26">unrestricted_mv</name></name> <operator pos:start="817:28" pos:end="817:28">=</operator> <literal type="number" pos:start="817:30" pos:end="817:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="819:9" pos:end="819:30"><expr pos:start="819:9" pos:end="819:29"><name pos:start="819:9" pos:end="819:26"><name pos:start="819:9" pos:end="819:9">s</name><operator pos:start="819:10" pos:end="819:11">-&gt;</operator><name pos:start="819:12" pos:end="819:26">msmpeg4_version</name></name><operator pos:start="819:27" pos:end="819:27">=</operator> <literal type="number" pos:start="819:29" pos:end="819:29">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="821:9" pos:end="821:31"><expr pos:start="821:9" pos:end="821:30"><name pos:start="821:9" pos:end="821:28"><name pos:start="821:9" pos:end="821:9">s</name><operator pos:start="821:10" pos:end="821:11">-&gt;</operator><name pos:start="821:12" pos:end="821:28">flipflop_rounding</name></name><operator pos:start="821:29" pos:end="821:29">=</operator><literal type="number" pos:start="821:30" pos:end="821:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="823:9" pos:end="823:23"><expr pos:start="823:9" pos:end="823:22"><name pos:start="823:9" pos:end="823:20"><name pos:start="823:9" pos:end="823:13">avctx</name><operator pos:start="823:14" pos:end="823:15">-&gt;</operator><name pos:start="823:16" pos:end="823:20">delay</name></name><operator pos:start="823:21" pos:end="823:21">=</operator><literal type="number" pos:start="823:22" pos:end="823:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="825:9" pos:end="825:23"><expr pos:start="825:9" pos:end="825:22"><name pos:start="825:9" pos:end="825:20"><name pos:start="825:9" pos:end="825:9">s</name><operator pos:start="825:10" pos:end="825:11">-&gt;</operator><name pos:start="825:12" pos:end="825:20">low_delay</name></name><operator pos:start="825:21" pos:end="825:21">=</operator><literal type="number" pos:start="825:22" pos:end="825:22">1</literal></expr>;</expr_stmt>

        <break pos:start="827:9" pos:end="827:14">break;</break>

    <case pos:start="829:5" pos:end="829:23">case <expr pos:start="829:10" pos:end="829:22"><name pos:start="829:10" pos:end="829:22">CODEC_ID_WMV1</name></expr>:</case>

        <expr_stmt pos:start="831:9" pos:end="831:33"><expr pos:start="831:9" pos:end="831:32"><name pos:start="831:9" pos:end="831:21"><name pos:start="831:9" pos:end="831:9">s</name><operator pos:start="831:10" pos:end="831:11">-&gt;</operator><name pos:start="831:12" pos:end="831:21">out_format</name></name> <operator pos:start="831:23" pos:end="831:23">=</operator> <name pos:start="831:25" pos:end="831:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="833:9" pos:end="833:28"><expr pos:start="833:9" pos:end="833:27"><name pos:start="833:9" pos:end="833:23"><name pos:start="833:9" pos:end="833:9">s</name><operator pos:start="833:10" pos:end="833:11">-&gt;</operator><name pos:start="833:12" pos:end="833:23">h263_msmpeg4</name></name> <operator pos:start="833:25" pos:end="833:25">=</operator> <literal type="number" pos:start="833:27" pos:end="833:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="835:9" pos:end="835:25"><expr pos:start="835:9" pos:end="835:24"><name pos:start="835:9" pos:end="835:20"><name pos:start="835:9" pos:end="835:9">s</name><operator pos:start="835:10" pos:end="835:11">-&gt;</operator><name pos:start="835:12" pos:end="835:20">h263_pred</name></name> <operator pos:start="835:22" pos:end="835:22">=</operator> <literal type="number" pos:start="835:24" pos:end="835:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="837:9" pos:end="837:31"><expr pos:start="837:9" pos:end="837:30"><name pos:start="837:9" pos:end="837:26"><name pos:start="837:9" pos:end="837:9">s</name><operator pos:start="837:10" pos:end="837:11">-&gt;</operator><name pos:start="837:12" pos:end="837:26">unrestricted_mv</name></name> <operator pos:start="837:28" pos:end="837:28">=</operator> <literal type="number" pos:start="837:30" pos:end="837:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="839:9" pos:end="839:30"><expr pos:start="839:9" pos:end="839:29"><name pos:start="839:9" pos:end="839:26"><name pos:start="839:9" pos:end="839:9">s</name><operator pos:start="839:10" pos:end="839:11">-&gt;</operator><name pos:start="839:12" pos:end="839:26">msmpeg4_version</name></name><operator pos:start="839:27" pos:end="839:27">=</operator> <literal type="number" pos:start="839:29" pos:end="839:29">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="841:9" pos:end="841:31"><expr pos:start="841:9" pos:end="841:30"><name pos:start="841:9" pos:end="841:28"><name pos:start="841:9" pos:end="841:9">s</name><operator pos:start="841:10" pos:end="841:11">-&gt;</operator><name pos:start="841:12" pos:end="841:28">flipflop_rounding</name></name><operator pos:start="841:29" pos:end="841:29">=</operator><literal type="number" pos:start="841:30" pos:end="841:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="843:9" pos:end="843:23"><expr pos:start="843:9" pos:end="843:22"><name pos:start="843:9" pos:end="843:20"><name pos:start="843:9" pos:end="843:13">avctx</name><operator pos:start="843:14" pos:end="843:15">-&gt;</operator><name pos:start="843:16" pos:end="843:20">delay</name></name><operator pos:start="843:21" pos:end="843:21">=</operator><literal type="number" pos:start="843:22" pos:end="843:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="845:9" pos:end="845:23"><expr pos:start="845:9" pos:end="845:22"><name pos:start="845:9" pos:end="845:20"><name pos:start="845:9" pos:end="845:9">s</name><operator pos:start="845:10" pos:end="845:11">-&gt;</operator><name pos:start="845:12" pos:end="845:20">low_delay</name></name><operator pos:start="845:21" pos:end="845:21">=</operator><literal type="number" pos:start="845:22" pos:end="845:22">1</literal></expr>;</expr_stmt>

        <break pos:start="847:9" pos:end="847:14">break;</break>

    <case pos:start="849:5" pos:end="849:23">case <expr pos:start="849:10" pos:end="849:22"><name pos:start="849:10" pos:end="849:22">CODEC_ID_WMV2</name></expr>:</case>

        <expr_stmt pos:start="851:9" pos:end="851:33"><expr pos:start="851:9" pos:end="851:32"><name pos:start="851:9" pos:end="851:21"><name pos:start="851:9" pos:end="851:9">s</name><operator pos:start="851:10" pos:end="851:11">-&gt;</operator><name pos:start="851:12" pos:end="851:21">out_format</name></name> <operator pos:start="851:23" pos:end="851:23">=</operator> <name pos:start="851:25" pos:end="851:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="853:9" pos:end="853:28"><expr pos:start="853:9" pos:end="853:27"><name pos:start="853:9" pos:end="853:23"><name pos:start="853:9" pos:end="853:9">s</name><operator pos:start="853:10" pos:end="853:11">-&gt;</operator><name pos:start="853:12" pos:end="853:23">h263_msmpeg4</name></name> <operator pos:start="853:25" pos:end="853:25">=</operator> <literal type="number" pos:start="853:27" pos:end="853:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="855:9" pos:end="855:25"><expr pos:start="855:9" pos:end="855:24"><name pos:start="855:9" pos:end="855:20"><name pos:start="855:9" pos:end="855:9">s</name><operator pos:start="855:10" pos:end="855:11">-&gt;</operator><name pos:start="855:12" pos:end="855:20">h263_pred</name></name> <operator pos:start="855:22" pos:end="855:22">=</operator> <literal type="number" pos:start="855:24" pos:end="855:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="857:9" pos:end="857:31"><expr pos:start="857:9" pos:end="857:30"><name pos:start="857:9" pos:end="857:26"><name pos:start="857:9" pos:end="857:9">s</name><operator pos:start="857:10" pos:end="857:11">-&gt;</operator><name pos:start="857:12" pos:end="857:26">unrestricted_mv</name></name> <operator pos:start="857:28" pos:end="857:28">=</operator> <literal type="number" pos:start="857:30" pos:end="857:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="859:9" pos:end="859:30"><expr pos:start="859:9" pos:end="859:29"><name pos:start="859:9" pos:end="859:26"><name pos:start="859:9" pos:end="859:9">s</name><operator pos:start="859:10" pos:end="859:11">-&gt;</operator><name pos:start="859:12" pos:end="859:26">msmpeg4_version</name></name><operator pos:start="859:27" pos:end="859:27">=</operator> <literal type="number" pos:start="859:29" pos:end="859:29">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="861:9" pos:end="861:31"><expr pos:start="861:9" pos:end="861:30"><name pos:start="861:9" pos:end="861:28"><name pos:start="861:9" pos:end="861:9">s</name><operator pos:start="861:10" pos:end="861:11">-&gt;</operator><name pos:start="861:12" pos:end="861:28">flipflop_rounding</name></name><operator pos:start="861:29" pos:end="861:29">=</operator><literal type="number" pos:start="861:30" pos:end="861:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="863:9" pos:end="863:23"><expr pos:start="863:9" pos:end="863:22"><name pos:start="863:9" pos:end="863:20"><name pos:start="863:9" pos:end="863:13">avctx</name><operator pos:start="863:14" pos:end="863:15">-&gt;</operator><name pos:start="863:16" pos:end="863:20">delay</name></name><operator pos:start="863:21" pos:end="863:21">=</operator><literal type="number" pos:start="863:22" pos:end="863:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="865:9" pos:end="865:23"><expr pos:start="865:9" pos:end="865:22"><name pos:start="865:9" pos:end="865:20"><name pos:start="865:9" pos:end="865:9">s</name><operator pos:start="865:10" pos:end="865:11">-&gt;</operator><name pos:start="865:12" pos:end="865:20">low_delay</name></name><operator pos:start="865:21" pos:end="865:21">=</operator><literal type="number" pos:start="865:22" pos:end="865:22">1</literal></expr>;</expr_stmt>

        <break pos:start="867:9" pos:end="867:14">break;</break>

    <default pos:start="869:5" pos:end="869:12">default:</default>

        <return pos:start="871:9" pos:end="871:18">return <expr pos:start="871:16" pos:end="871:17"><operator pos:start="871:16" pos:end="871:16">-</operator><literal type="number" pos:start="871:17" pos:end="871:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="877:5" pos:end="877:39"><expr pos:start="877:5" pos:end="877:38"><name pos:start="877:5" pos:end="877:23"><name pos:start="877:5" pos:end="877:9">avctx</name><operator pos:start="877:10" pos:end="877:11">-&gt;</operator><name pos:start="877:12" pos:end="877:23">has_b_frames</name></name><operator pos:start="877:24" pos:end="877:24">=</operator> <operator pos:start="877:26" pos:end="877:26">!</operator><name pos:start="877:27" pos:end="877:38"><name pos:start="877:27" pos:end="877:27">s</name><operator pos:start="877:28" pos:end="877:29">-&gt;</operator><name pos:start="877:30" pos:end="877:38">low_delay</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="881:5" pos:end="881:20"><expr pos:start="881:5" pos:end="881:19"><name pos:start="881:5" pos:end="881:15"><name pos:start="881:5" pos:end="881:5">s</name><operator pos:start="881:6" pos:end="881:7">-&gt;</operator><name pos:start="881:8" pos:end="881:15">encoding</name></name> <operator pos:start="881:17" pos:end="881:17">=</operator> <literal type="number" pos:start="881:19" pos:end="881:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="885:5" pos:end="887:120"><expr pos:start="885:5" pos:end="887:119"><name pos:start="885:5" pos:end="885:24"><name pos:start="885:5" pos:end="885:5">s</name><operator pos:start="885:6" pos:end="885:7">-&gt;</operator><name pos:start="885:8" pos:end="885:24">progressive_frame</name></name><operator pos:start="885:25" pos:end="885:25">=</operator>

    <name pos:start="887:5" pos:end="887:27"><name pos:start="887:5" pos:end="887:5">s</name><operator pos:start="887:6" pos:end="887:7">-&gt;</operator><name pos:start="887:8" pos:end="887:27">progressive_sequence</name></name><operator pos:start="887:28" pos:end="887:28">=</operator> <operator pos:start="887:30" pos:end="887:30">!</operator><operator pos:start="887:31" pos:end="887:31">(</operator><name pos:start="887:32" pos:end="887:43"><name pos:start="887:32" pos:end="887:36">avctx</name><operator pos:start="887:37" pos:end="887:38">-&gt;</operator><name pos:start="887:39" pos:end="887:43">flags</name></name> <operator pos:start="887:45" pos:end="887:45">&amp;</operator> <operator pos:start="887:47" pos:end="887:47">(</operator><name pos:start="887:48" pos:end="887:72">CODEC_FLAG_INTERLACED_DCT</name><operator pos:start="887:73" pos:end="887:73">|</operator><name pos:start="887:74" pos:end="887:97">CODEC_FLAG_INTERLACED_ME</name><operator pos:start="887:98" pos:end="887:98">|</operator><name pos:start="887:99" pos:end="887:117">CODEC_FLAG_ALT_SCAN</name><operator pos:start="887:118" pos:end="887:118">)</operator><operator pos:start="887:119" pos:end="887:119">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="891:5" pos:end="891:14">/* init */</comment>

    <if_stmt pos:start="893:5" pos:end="895:18"><if pos:start="893:5" pos:end="895:18">if <condition pos:start="893:8" pos:end="893:31">(<expr pos:start="893:9" pos:end="893:30"><call pos:start="893:9" pos:end="893:26"><name pos:start="893:9" pos:end="893:23">MPV_common_init</name><argument_list pos:start="893:24" pos:end="893:26">(<argument pos:start="893:25" pos:end="893:25"><expr pos:start="893:25" pos:end="893:25"><name pos:start="893:25" pos:end="893:25">s</name></expr></argument>)</argument_list></call> <operator pos:start="893:28" pos:end="893:28">&lt;</operator> <literal type="number" pos:start="893:30" pos:end="893:30">0</literal></expr>)</condition><block type="pseudo" pos:start="895:9" pos:end="895:18"><block_content pos:start="895:9" pos:end="895:18">

        <return pos:start="895:9" pos:end="895:18">return <expr pos:start="895:16" pos:end="895:17"><operator pos:start="895:16" pos:end="895:16">-</operator><literal type="number" pos:start="895:17" pos:end="895:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="899:5" pos:end="901:41"><if pos:start="899:5" pos:end="901:41">if<condition pos:start="899:7" pos:end="899:24">(<expr pos:start="899:8" pos:end="899:23"><operator pos:start="899:8" pos:end="899:8">!</operator><name pos:start="899:9" pos:end="899:23"><name pos:start="899:9" pos:end="899:9">s</name><operator pos:start="899:10" pos:end="899:11">-&gt;</operator><name pos:start="899:12" pos:end="899:23">dct_quantize</name></name></expr>)</condition><block type="pseudo" pos:start="901:9" pos:end="901:41"><block_content pos:start="901:9" pos:end="901:41">

        <expr_stmt pos:start="901:9" pos:end="901:41"><expr pos:start="901:9" pos:end="901:40"><name pos:start="901:9" pos:end="901:23"><name pos:start="901:9" pos:end="901:9">s</name><operator pos:start="901:10" pos:end="901:11">-&gt;</operator><name pos:start="901:12" pos:end="901:23">dct_quantize</name></name> <operator pos:start="901:25" pos:end="901:25">=</operator> <name pos:start="901:27" pos:end="901:40">dct_quantize_c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="903:5" pos:end="905:39"><if pos:start="903:5" pos:end="905:39">if<condition pos:start="903:7" pos:end="903:23">(<expr pos:start="903:8" pos:end="903:22"><operator pos:start="903:8" pos:end="903:8">!</operator><name pos:start="903:9" pos:end="903:22"><name pos:start="903:9" pos:end="903:9">s</name><operator pos:start="903:10" pos:end="903:11">-&gt;</operator><name pos:start="903:12" pos:end="903:22">denoise_dct</name></name></expr>)</condition><block type="pseudo" pos:start="905:9" pos:end="905:39"><block_content pos:start="905:9" pos:end="905:39">

        <expr_stmt pos:start="905:9" pos:end="905:39"><expr pos:start="905:9" pos:end="905:38"><name pos:start="905:9" pos:end="905:22"><name pos:start="905:9" pos:end="905:9">s</name><operator pos:start="905:10" pos:end="905:11">-&gt;</operator><name pos:start="905:12" pos:end="905:22">denoise_dct</name></name> <operator pos:start="905:24" pos:end="905:24">=</operator> <name pos:start="905:26" pos:end="905:38">denoise_dct_c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="907:5" pos:end="907:43"><expr pos:start="907:5" pos:end="907:42"><name pos:start="907:5" pos:end="907:24"><name pos:start="907:5" pos:end="907:5">s</name><operator pos:start="907:6" pos:end="907:7">-&gt;</operator><name pos:start="907:8" pos:end="907:24">fast_dct_quantize</name></name> <operator pos:start="907:26" pos:end="907:26">=</operator> <name pos:start="907:28" pos:end="907:42"><name pos:start="907:28" pos:end="907:28">s</name><operator pos:start="907:29" pos:end="907:30">-&gt;</operator><name pos:start="907:31" pos:end="907:42">dct_quantize</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="909:5" pos:end="911:49"><if pos:start="909:5" pos:end="911:49">if<condition pos:start="909:7" pos:end="909:22">(<expr pos:start="909:8" pos:end="909:21"><name pos:start="909:8" pos:end="909:21"><name pos:start="909:8" pos:end="909:12">avctx</name><operator pos:start="909:13" pos:end="909:14">-&gt;</operator><name pos:start="909:15" pos:end="909:21">trellis</name></name></expr>)</condition><block type="pseudo" pos:start="911:9" pos:end="911:49"><block_content pos:start="911:9" pos:end="911:49">

        <expr_stmt pos:start="911:9" pos:end="911:49"><expr pos:start="911:9" pos:end="911:48"><name pos:start="911:9" pos:end="911:23"><name pos:start="911:9" pos:end="911:9">s</name><operator pos:start="911:10" pos:end="911:11">-&gt;</operator><name pos:start="911:12" pos:end="911:23">dct_quantize</name></name> <operator pos:start="911:25" pos:end="911:25">=</operator> <name pos:start="911:27" pos:end="911:48">dct_quantize_trellis_c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="915:5" pos:end="917:60"><if pos:start="915:5" pos:end="917:60">if<condition pos:start="915:7" pos:end="915:74">(<expr pos:start="915:8" pos:end="915:73"><operator pos:start="915:8" pos:end="915:8">(</operator><name pos:start="915:9" pos:end="915:28">CONFIG_H263P_ENCODER</name> <operator pos:start="915:30" pos:end="915:31">||</operator> <name pos:start="915:33" pos:end="915:51">CONFIG_RV20_ENCODER</name><operator pos:start="915:52" pos:end="915:52">)</operator> <operator pos:start="915:54" pos:end="915:55">&amp;&amp;</operator> <name pos:start="915:57" pos:end="915:73"><name pos:start="915:57" pos:end="915:57">s</name><operator pos:start="915:58" pos:end="915:59">-&gt;</operator><name pos:start="915:60" pos:end="915:73">modified_quant</name></name></expr>)</condition><block type="pseudo" pos:start="917:9" pos:end="917:60"><block_content pos:start="917:9" pos:end="917:60">

        <expr_stmt pos:start="917:9" pos:end="917:60"><expr pos:start="917:9" pos:end="917:59"><name pos:start="917:9" pos:end="917:30"><name pos:start="917:9" pos:end="917:9">s</name><operator pos:start="917:10" pos:end="917:11">-&gt;</operator><name pos:start="917:12" pos:end="917:30">chroma_qscale_table</name></name><operator pos:start="917:31" pos:end="917:31">=</operator> <name pos:start="917:33" pos:end="917:59">ff_h263_chroma_qscale_table</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="921:5" pos:end="921:25"><expr pos:start="921:5" pos:end="921:24"><name pos:start="921:5" pos:end="921:22"><name pos:start="921:5" pos:end="921:5">s</name><operator pos:start="921:6" pos:end="921:7">-&gt;</operator><name pos:start="921:8" pos:end="921:22">quant_precision</name></name><operator pos:start="921:23" pos:end="921:23">=</operator><literal type="number" pos:start="921:24" pos:end="921:24">5</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="925:5" pos:end="925:63"><expr pos:start="925:5" pos:end="925:62"><call pos:start="925:5" pos:end="925:62"><name pos:start="925:5" pos:end="925:14">ff_set_cmp</name><argument_list pos:start="925:15" pos:end="925:62">(<argument pos:start="925:16" pos:end="925:22"><expr pos:start="925:16" pos:end="925:22"><operator pos:start="925:16" pos:end="925:16">&amp;</operator><name pos:start="925:17" pos:end="925:22"><name pos:start="925:17" pos:end="925:17">s</name><operator pos:start="925:18" pos:end="925:19">-&gt;</operator><name pos:start="925:20" pos:end="925:22">dsp</name></name></expr></argument>, <argument pos:start="925:25" pos:end="925:40"><expr pos:start="925:25" pos:end="925:40"><name pos:start="925:25" pos:end="925:40"><name pos:start="925:25" pos:end="925:25">s</name><operator pos:start="925:26" pos:end="925:27">-&gt;</operator><name pos:start="925:28" pos:end="925:30">dsp</name><operator pos:start="925:31" pos:end="925:31">.</operator><name pos:start="925:32" pos:end="925:40">ildct_cmp</name></name></expr></argument>, <argument pos:start="925:43" pos:end="925:61"><expr pos:start="925:43" pos:end="925:61"><name pos:start="925:43" pos:end="925:61"><name pos:start="925:43" pos:end="925:43">s</name><operator pos:start="925:44" pos:end="925:45">-&gt;</operator><name pos:start="925:46" pos:end="925:50">avctx</name><operator pos:start="925:51" pos:end="925:52">-&gt;</operator><name pos:start="925:53" pos:end="925:61">ildct_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="927:5" pos:end="927:73"><expr pos:start="927:5" pos:end="927:72"><call pos:start="927:5" pos:end="927:72"><name pos:start="927:5" pos:end="927:14">ff_set_cmp</name><argument_list pos:start="927:15" pos:end="927:72">(<argument pos:start="927:16" pos:end="927:22"><expr pos:start="927:16" pos:end="927:22"><operator pos:start="927:16" pos:end="927:16">&amp;</operator><name pos:start="927:17" pos:end="927:22"><name pos:start="927:17" pos:end="927:17">s</name><operator pos:start="927:18" pos:end="927:19">-&gt;</operator><name pos:start="927:20" pos:end="927:22">dsp</name></name></expr></argument>, <argument pos:start="927:25" pos:end="927:45"><expr pos:start="927:25" pos:end="927:45"><name pos:start="927:25" pos:end="927:45"><name pos:start="927:25" pos:end="927:25">s</name><operator pos:start="927:26" pos:end="927:27">-&gt;</operator><name pos:start="927:28" pos:end="927:30">dsp</name><operator pos:start="927:31" pos:end="927:31">.</operator><name pos:start="927:32" pos:end="927:45">frame_skip_cmp</name></name></expr></argument>, <argument pos:start="927:48" pos:end="927:71"><expr pos:start="927:48" pos:end="927:71"><name pos:start="927:48" pos:end="927:71"><name pos:start="927:48" pos:end="927:48">s</name><operator pos:start="927:49" pos:end="927:50">-&gt;</operator><name pos:start="927:51" pos:end="927:55">avctx</name><operator pos:start="927:56" pos:end="927:57">-&gt;</operator><name pos:start="927:58" pos:end="927:71">frame_skip_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="931:5" pos:end="933:31"><if pos:start="931:5" pos:end="933:31">if <condition pos:start="931:8" pos:end="931:57">(<expr pos:start="931:9" pos:end="931:56"><name pos:start="931:9" pos:end="931:27">CONFIG_H261_ENCODER</name> <operator pos:start="931:29" pos:end="931:30">&amp;&amp;</operator> <name pos:start="931:32" pos:end="931:44"><name pos:start="931:32" pos:end="931:32">s</name><operator pos:start="931:33" pos:end="931:34">-&gt;</operator><name pos:start="931:35" pos:end="931:44">out_format</name></name> <operator pos:start="931:46" pos:end="931:47">==</operator> <name pos:start="931:49" pos:end="931:56">FMT_H261</name></expr>)</condition><block type="pseudo" pos:start="933:9" pos:end="933:31"><block_content pos:start="933:9" pos:end="933:31">

        <expr_stmt pos:start="933:9" pos:end="933:31"><expr pos:start="933:9" pos:end="933:30"><call pos:start="933:9" pos:end="933:30"><name pos:start="933:9" pos:end="933:27">ff_h261_encode_init</name><argument_list pos:start="933:28" pos:end="933:30">(<argument pos:start="933:29" pos:end="933:29"><expr pos:start="933:29" pos:end="933:29"><name pos:start="933:29" pos:end="933:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="935:5" pos:end="937:28"><if pos:start="935:5" pos:end="937:28">if <condition pos:start="935:8" pos:end="935:61">(<expr pos:start="935:9" pos:end="935:60"><name pos:start="935:9" pos:end="935:31">CONFIG_ANY_H263_ENCODER</name> <operator pos:start="935:33" pos:end="935:34">&amp;&amp;</operator> <name pos:start="935:36" pos:end="935:48"><name pos:start="935:36" pos:end="935:36">s</name><operator pos:start="935:37" pos:end="935:38">-&gt;</operator><name pos:start="935:39" pos:end="935:48">out_format</name></name> <operator pos:start="935:50" pos:end="935:51">==</operator> <name pos:start="935:53" pos:end="935:60">FMT_H263</name></expr>)</condition><block type="pseudo" pos:start="937:9" pos:end="937:28"><block_content pos:start="937:9" pos:end="937:28">

        <expr_stmt pos:start="937:9" pos:end="937:28"><expr pos:start="937:9" pos:end="937:27"><call pos:start="937:9" pos:end="937:27"><name pos:start="937:9" pos:end="937:24">h263_encode_init</name><argument_list pos:start="937:25" pos:end="937:27">(<argument pos:start="937:26" pos:end="937:26"><expr pos:start="937:26" pos:end="937:26"><name pos:start="937:26" pos:end="937:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="939:5" pos:end="941:34"><if pos:start="939:5" pos:end="941:34">if <condition pos:start="939:8" pos:end="939:53">(<expr pos:start="939:9" pos:end="939:52"><name pos:start="939:9" pos:end="939:30">CONFIG_MSMPEG4_ENCODER</name> <operator pos:start="939:32" pos:end="939:33">&amp;&amp;</operator> <name pos:start="939:35" pos:end="939:52"><name pos:start="939:35" pos:end="939:35">s</name><operator pos:start="939:36" pos:end="939:37">-&gt;</operator><name pos:start="939:38" pos:end="939:52">msmpeg4_version</name></name></expr>)</condition><block type="pseudo" pos:start="941:9" pos:end="941:34"><block_content pos:start="941:9" pos:end="941:34">

        <expr_stmt pos:start="941:9" pos:end="941:34"><expr pos:start="941:9" pos:end="941:33"><call pos:start="941:9" pos:end="941:33"><name pos:start="941:9" pos:end="941:30">ff_msmpeg4_encode_init</name><argument_list pos:start="941:31" pos:end="941:33">(<argument pos:start="941:32" pos:end="941:32"><expr pos:start="941:32" pos:end="941:32"><name pos:start="941:32" pos:end="941:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="943:5" pos:end="947:32"><if pos:start="943:5" pos:end="947:32">if <condition pos:start="943:8" pos:end="945:38">(<expr pos:start="943:9" pos:end="945:37"><operator pos:start="943:9" pos:end="943:9">(</operator><name pos:start="943:10" pos:end="943:34">CONFIG_MPEG1VIDEO_ENCODER</name> <operator pos:start="943:36" pos:end="943:37">||</operator> <name pos:start="943:39" pos:end="943:63">CONFIG_MPEG2VIDEO_ENCODER</name><operator pos:start="943:64" pos:end="943:64">)</operator>

        <operator pos:start="945:9" pos:end="945:10">&amp;&amp;</operator> <name pos:start="945:12" pos:end="945:24"><name pos:start="945:12" pos:end="945:12">s</name><operator pos:start="945:13" pos:end="945:14">-&gt;</operator><name pos:start="945:15" pos:end="945:24">out_format</name></name> <operator pos:start="945:26" pos:end="945:27">==</operator> <name pos:start="945:29" pos:end="945:37">FMT_MPEG1</name></expr>)</condition><block type="pseudo" pos:start="947:9" pos:end="947:32"><block_content pos:start="947:9" pos:end="947:32">

        <expr_stmt pos:start="947:9" pos:end="947:32"><expr pos:start="947:9" pos:end="947:31"><call pos:start="947:9" pos:end="947:31"><name pos:start="947:9" pos:end="947:28">ff_mpeg1_encode_init</name><argument_list pos:start="947:29" pos:end="947:31">(<argument pos:start="947:30" pos:end="947:30"><expr pos:start="947:30" pos:end="947:30"><name pos:start="947:30" pos:end="947:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="951:5" pos:end="951:23">/* init q matrix */</comment>

    <for pos:start="953:5" pos:end="987:5">for<control pos:start="953:8" pos:end="953:21">(<init pos:start="953:9" pos:end="953:12"><expr pos:start="953:9" pos:end="953:11"><name pos:start="953:9" pos:end="953:9">i</name><operator pos:start="953:10" pos:end="953:10">=</operator><literal type="number" pos:start="953:11" pos:end="953:11">0</literal></expr>;</init><condition pos:start="953:13" pos:end="953:17"><expr pos:start="953:13" pos:end="953:16"><name pos:start="953:13" pos:end="953:13">i</name><operator pos:start="953:14" pos:end="953:14">&lt;</operator><literal type="number" pos:start="953:15" pos:end="953:16">64</literal></expr>;</condition><incr pos:start="953:18" pos:end="953:20"><expr pos:start="953:18" pos:end="953:20"><name pos:start="953:18" pos:end="953:18">i</name><operator pos:start="953:19" pos:end="953:20">++</operator></expr></incr>)</control> <block pos:start="953:23" pos:end="987:5">{<block_content pos:start="955:9" pos:end="985:59">

        <decl_stmt pos:start="955:9" pos:end="955:42"><decl pos:start="955:9" pos:end="955:41"><type pos:start="955:9" pos:end="955:11"><name pos:start="955:9" pos:end="955:11">int</name></type> <name pos:start="955:13" pos:end="955:13">j</name><init pos:start="955:14" pos:end="955:41">= <expr pos:start="955:16" pos:end="955:41"><name pos:start="955:16" pos:end="955:41"><name pos:start="955:16" pos:end="955:16">s</name><operator pos:start="955:17" pos:end="955:18">-&gt;</operator><name pos:start="955:19" pos:end="955:21">dsp</name><operator pos:start="955:22" pos:end="955:22">.</operator><name pos:start="955:23" pos:end="955:38">idct_permutation</name><index pos:start="955:39" pos:end="955:41">[<expr pos:start="955:40" pos:end="955:40"><name pos:start="955:40" pos:end="955:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="957:9" pos:end="977:9"><if pos:start="957:9" pos:end="963:9">if<condition pos:start="957:11" pos:end="957:80">(<expr pos:start="957:12" pos:end="957:79"><name pos:start="957:12" pos:end="957:31">CONFIG_MPEG4_ENCODER</name> <operator pos:start="957:33" pos:end="957:34">&amp;&amp;</operator> <name pos:start="957:36" pos:end="957:46"><name pos:start="957:36" pos:end="957:36">s</name><operator pos:start="957:37" pos:end="957:38">-&gt;</operator><name pos:start="957:39" pos:end="957:46">codec_id</name></name><operator pos:start="957:47" pos:end="957:48">==</operator><name pos:start="957:49" pos:end="957:62">CODEC_ID_MPEG4</name> <operator pos:start="957:64" pos:end="957:65">&amp;&amp;</operator> <name pos:start="957:67" pos:end="957:79"><name pos:start="957:67" pos:end="957:67">s</name><operator pos:start="957:68" pos:end="957:69">-&gt;</operator><name pos:start="957:70" pos:end="957:79">mpeg_quant</name></name></expr>)</condition><block pos:start="957:81" pos:end="963:9">{<block_content pos:start="959:13" pos:end="961:70">

            <expr_stmt pos:start="959:13" pos:end="959:66"><expr pos:start="959:13" pos:end="959:65"><name pos:start="959:13" pos:end="959:30"><name pos:start="959:13" pos:end="959:13">s</name><operator pos:start="959:14" pos:end="959:15">-&gt;</operator><name pos:start="959:16" pos:end="959:27">intra_matrix</name><index pos:start="959:28" pos:end="959:30">[<expr pos:start="959:29" pos:end="959:29"><name pos:start="959:29" pos:end="959:29">j</name></expr>]</index></name> <operator pos:start="959:32" pos:end="959:32">=</operator> <name pos:start="959:34" pos:end="959:65"><name pos:start="959:34" pos:end="959:62">ff_mpeg4_default_intra_matrix</name><index pos:start="959:63" pos:end="959:65">[<expr pos:start="959:64" pos:end="959:64"><name pos:start="959:64" pos:end="959:64">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="961:13" pos:end="961:70"><expr pos:start="961:13" pos:end="961:69"><name pos:start="961:13" pos:end="961:30"><name pos:start="961:13" pos:end="961:13">s</name><operator pos:start="961:14" pos:end="961:15">-&gt;</operator><name pos:start="961:16" pos:end="961:27">inter_matrix</name><index pos:start="961:28" pos:end="961:30">[<expr pos:start="961:29" pos:end="961:29"><name pos:start="961:29" pos:end="961:29">j</name></expr>]</index></name> <operator pos:start="961:32" pos:end="961:32">=</operator> <name pos:start="961:34" pos:end="961:69"><name pos:start="961:34" pos:end="961:66">ff_mpeg4_default_non_intra_matrix</name><index pos:start="961:67" pos:end="961:69">[<expr pos:start="961:68" pos:end="961:68"><name pos:start="961:68" pos:end="961:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="963:10" pos:end="969:9">else if<condition pos:start="963:17" pos:end="963:72">(<expr pos:start="963:18" pos:end="963:71"><name pos:start="963:18" pos:end="963:30"><name pos:start="963:18" pos:end="963:18">s</name><operator pos:start="963:19" pos:end="963:20">-&gt;</operator><name pos:start="963:21" pos:end="963:30">out_format</name></name> <operator pos:start="963:32" pos:end="963:33">==</operator> <name pos:start="963:35" pos:end="963:42">FMT_H263</name> <operator pos:start="963:44" pos:end="963:45">||</operator> <name pos:start="963:47" pos:end="963:59"><name pos:start="963:47" pos:end="963:47">s</name><operator pos:start="963:48" pos:end="963:49">-&gt;</operator><name pos:start="963:50" pos:end="963:59">out_format</name></name> <operator pos:start="963:61" pos:end="963:62">==</operator> <name pos:start="963:64" pos:end="963:71">FMT_H261</name></expr>)</condition><block pos:start="963:73" pos:end="969:9">{<block_content pos:start="965:13" pos:end="967:70">

            <expr_stmt pos:start="965:13" pos:end="967:70"><expr pos:start="965:13" pos:end="967:69"><name pos:start="965:13" pos:end="965:30"><name pos:start="965:13" pos:end="965:13">s</name><operator pos:start="965:14" pos:end="965:15">-&gt;</operator><name pos:start="965:16" pos:end="965:27">intra_matrix</name><index pos:start="965:28" pos:end="965:30">[<expr pos:start="965:29" pos:end="965:29"><name pos:start="965:29" pos:end="965:29">j</name></expr>]</index></name> <operator pos:start="965:32" pos:end="965:32">=</operator>

            <name pos:start="967:13" pos:end="967:30"><name pos:start="967:13" pos:end="967:13">s</name><operator pos:start="967:14" pos:end="967:15">-&gt;</operator><name pos:start="967:16" pos:end="967:27">inter_matrix</name><index pos:start="967:28" pos:end="967:30">[<expr pos:start="967:29" pos:end="967:29"><name pos:start="967:29" pos:end="967:29">j</name></expr>]</index></name> <operator pos:start="967:32" pos:end="967:32">=</operator> <name pos:start="967:34" pos:end="967:69"><name pos:start="967:34" pos:end="967:66">ff_mpeg1_default_non_intra_matrix</name><index pos:start="967:67" pos:end="967:69">[<expr pos:start="967:68" pos:end="967:68"><name pos:start="967:68" pos:end="967:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="969:10" pos:end="977:9">else

        <block pos:start="971:9" pos:end="977:9">{<block_content pos:start="973:13" pos:end="975:70"> <comment type="block" pos:start="971:11" pos:end="971:23">/* mpeg1/2 */</comment>

            <expr_stmt pos:start="973:13" pos:end="973:66"><expr pos:start="973:13" pos:end="973:65"><name pos:start="973:13" pos:end="973:30"><name pos:start="973:13" pos:end="973:13">s</name><operator pos:start="973:14" pos:end="973:15">-&gt;</operator><name pos:start="973:16" pos:end="973:27">intra_matrix</name><index pos:start="973:28" pos:end="973:30">[<expr pos:start="973:29" pos:end="973:29"><name pos:start="973:29" pos:end="973:29">j</name></expr>]</index></name> <operator pos:start="973:32" pos:end="973:32">=</operator> <name pos:start="973:34" pos:end="973:65"><name pos:start="973:34" pos:end="973:62">ff_mpeg1_default_intra_matrix</name><index pos:start="973:63" pos:end="973:65">[<expr pos:start="973:64" pos:end="973:64"><name pos:start="973:64" pos:end="973:64">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="975:13" pos:end="975:70"><expr pos:start="975:13" pos:end="975:69"><name pos:start="975:13" pos:end="975:30"><name pos:start="975:13" pos:end="975:13">s</name><operator pos:start="975:14" pos:end="975:15">-&gt;</operator><name pos:start="975:16" pos:end="975:27">inter_matrix</name><index pos:start="975:28" pos:end="975:30">[<expr pos:start="975:29" pos:end="975:29"><name pos:start="975:29" pos:end="975:29">j</name></expr>]</index></name> <operator pos:start="975:32" pos:end="975:32">=</operator> <name pos:start="975:34" pos:end="975:69"><name pos:start="975:34" pos:end="975:66">ff_mpeg1_default_non_intra_matrix</name><index pos:start="975:67" pos:end="975:69">[<expr pos:start="975:68" pos:end="975:68"><name pos:start="975:68" pos:end="975:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="979:9" pos:end="981:59"><if pos:start="979:9" pos:end="981:59">if<condition pos:start="979:11" pos:end="979:34">(<expr pos:start="979:12" pos:end="979:33"><name pos:start="979:12" pos:end="979:33"><name pos:start="979:12" pos:end="979:12">s</name><operator pos:start="979:13" pos:end="979:14">-&gt;</operator><name pos:start="979:15" pos:end="979:19">avctx</name><operator pos:start="979:20" pos:end="979:21">-&gt;</operator><name pos:start="979:22" pos:end="979:33">intra_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="981:13" pos:end="981:59"><block_content pos:start="981:13" pos:end="981:59">

            <expr_stmt pos:start="981:13" pos:end="981:59"><expr pos:start="981:13" pos:end="981:58"><name pos:start="981:13" pos:end="981:30"><name pos:start="981:13" pos:end="981:13">s</name><operator pos:start="981:14" pos:end="981:15">-&gt;</operator><name pos:start="981:16" pos:end="981:27">intra_matrix</name><index pos:start="981:28" pos:end="981:30">[<expr pos:start="981:29" pos:end="981:29"><name pos:start="981:29" pos:end="981:29">j</name></expr>]</index></name> <operator pos:start="981:32" pos:end="981:32">=</operator> <name pos:start="981:34" pos:end="981:58"><name pos:start="981:34" pos:end="981:34">s</name><operator pos:start="981:35" pos:end="981:36">-&gt;</operator><name pos:start="981:37" pos:end="981:41">avctx</name><operator pos:start="981:42" pos:end="981:43">-&gt;</operator><name pos:start="981:44" pos:end="981:55">intra_matrix</name><index pos:start="981:56" pos:end="981:58">[<expr pos:start="981:57" pos:end="981:57"><name pos:start="981:57" pos:end="981:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="983:9" pos:end="985:59"><if pos:start="983:9" pos:end="985:59">if<condition pos:start="983:11" pos:end="983:34">(<expr pos:start="983:12" pos:end="983:33"><name pos:start="983:12" pos:end="983:33"><name pos:start="983:12" pos:end="983:12">s</name><operator pos:start="983:13" pos:end="983:14">-&gt;</operator><name pos:start="983:15" pos:end="983:19">avctx</name><operator pos:start="983:20" pos:end="983:21">-&gt;</operator><name pos:start="983:22" pos:end="983:33">inter_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="985:13" pos:end="985:59"><block_content pos:start="985:13" pos:end="985:59">

            <expr_stmt pos:start="985:13" pos:end="985:59"><expr pos:start="985:13" pos:end="985:58"><name pos:start="985:13" pos:end="985:30"><name pos:start="985:13" pos:end="985:13">s</name><operator pos:start="985:14" pos:end="985:15">-&gt;</operator><name pos:start="985:16" pos:end="985:27">inter_matrix</name><index pos:start="985:28" pos:end="985:30">[<expr pos:start="985:29" pos:end="985:29"><name pos:start="985:29" pos:end="985:29">j</name></expr>]</index></name> <operator pos:start="985:32" pos:end="985:32">=</operator> <name pos:start="985:34" pos:end="985:58"><name pos:start="985:34" pos:end="985:34">s</name><operator pos:start="985:35" pos:end="985:36">-&gt;</operator><name pos:start="985:37" pos:end="985:41">avctx</name><operator pos:start="985:42" pos:end="985:43">-&gt;</operator><name pos:start="985:44" pos:end="985:55">inter_matrix</name><index pos:start="985:56" pos:end="985:58">[<expr pos:start="985:57" pos:end="985:57"><name pos:start="985:57" pos:end="985:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="991:5" pos:end="991:27">/* precompute matrix */</comment>

    <comment type="block" pos:start="993:5" pos:end="993:55">/* for mjpeg, we do include qscale in the matrix */</comment>

    <if_stmt pos:start="995:5" pos:end="1005:5"><if pos:start="995:5" pos:end="1005:5">if <condition pos:start="995:8" pos:end="995:35">(<expr pos:start="995:9" pos:end="995:34"><name pos:start="995:9" pos:end="995:21"><name pos:start="995:9" pos:end="995:9">s</name><operator pos:start="995:10" pos:end="995:11">-&gt;</operator><name pos:start="995:12" pos:end="995:21">out_format</name></name> <operator pos:start="995:23" pos:end="995:24">!=</operator> <name pos:start="995:26" pos:end="995:34">FMT_MJPEG</name></expr>)</condition> <block pos:start="995:37" pos:end="1005:5">{<block_content pos:start="997:9" pos:end="1003:81">

        <expr_stmt pos:start="997:9" pos:end="999:81"><expr pos:start="997:9" pos:end="999:80"><call pos:start="997:9" pos:end="999:80"><name pos:start="997:9" pos:end="997:25">ff_convert_matrix</name><argument_list pos:start="997:26" pos:end="999:80">(<argument pos:start="997:27" pos:end="997:33"><expr pos:start="997:27" pos:end="997:33"><operator pos:start="997:27" pos:end="997:27">&amp;</operator><name pos:start="997:28" pos:end="997:33"><name pos:start="997:28" pos:end="997:28">s</name><operator pos:start="997:29" pos:end="997:30">-&gt;</operator><name pos:start="997:31" pos:end="997:33">dsp</name></name></expr></argument>, <argument pos:start="997:36" pos:end="997:52"><expr pos:start="997:36" pos:end="997:52"><name pos:start="997:36" pos:end="997:52"><name pos:start="997:36" pos:end="997:36">s</name><operator pos:start="997:37" pos:end="997:38">-&gt;</operator><name pos:start="997:39" pos:end="997:52">q_intra_matrix</name></name></expr></argument>, <argument pos:start="997:55" pos:end="997:73"><expr pos:start="997:55" pos:end="997:73"><name pos:start="997:55" pos:end="997:73"><name pos:start="997:55" pos:end="997:55">s</name><operator pos:start="997:56" pos:end="997:57">-&gt;</operator><name pos:start="997:58" pos:end="997:73">q_intra_matrix16</name></name></expr></argument>,

                       <argument pos:start="999:24" pos:end="999:38"><expr pos:start="999:24" pos:end="999:38"><name pos:start="999:24" pos:end="999:38"><name pos:start="999:24" pos:end="999:24">s</name><operator pos:start="999:25" pos:end="999:26">-&gt;</operator><name pos:start="999:27" pos:end="999:38">intra_matrix</name></name></expr></argument>, <argument pos:start="999:41" pos:end="999:59"><expr pos:start="999:41" pos:end="999:59"><name pos:start="999:41" pos:end="999:59"><name pos:start="999:41" pos:end="999:41">s</name><operator pos:start="999:42" pos:end="999:43">-&gt;</operator><name pos:start="999:44" pos:end="999:59">intra_quant_bias</name></name></expr></argument>, <argument pos:start="999:62" pos:end="999:72"><expr pos:start="999:62" pos:end="999:72"><name pos:start="999:62" pos:end="999:72"><name pos:start="999:62" pos:end="999:66">avctx</name><operator pos:start="999:67" pos:end="999:68">-&gt;</operator><name pos:start="999:69" pos:end="999:72">qmin</name></name></expr></argument>, <argument pos:start="999:75" pos:end="999:76"><expr pos:start="999:75" pos:end="999:76"><literal type="number" pos:start="999:75" pos:end="999:76">31</literal></expr></argument>, <argument pos:start="999:79" pos:end="999:79"><expr pos:start="999:79" pos:end="999:79"><literal type="number" pos:start="999:79" pos:end="999:79">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1001:9" pos:end="1003:81"><expr pos:start="1001:9" pos:end="1003:80"><call pos:start="1001:9" pos:end="1003:80"><name pos:start="1001:9" pos:end="1001:25">ff_convert_matrix</name><argument_list pos:start="1001:26" pos:end="1003:80">(<argument pos:start="1001:27" pos:end="1001:33"><expr pos:start="1001:27" pos:end="1001:33"><operator pos:start="1001:27" pos:end="1001:27">&amp;</operator><name pos:start="1001:28" pos:end="1001:33"><name pos:start="1001:28" pos:end="1001:28">s</name><operator pos:start="1001:29" pos:end="1001:30">-&gt;</operator><name pos:start="1001:31" pos:end="1001:33">dsp</name></name></expr></argument>, <argument pos:start="1001:36" pos:end="1001:52"><expr pos:start="1001:36" pos:end="1001:52"><name pos:start="1001:36" pos:end="1001:52"><name pos:start="1001:36" pos:end="1001:36">s</name><operator pos:start="1001:37" pos:end="1001:38">-&gt;</operator><name pos:start="1001:39" pos:end="1001:52">q_inter_matrix</name></name></expr></argument>, <argument pos:start="1001:55" pos:end="1001:73"><expr pos:start="1001:55" pos:end="1001:73"><name pos:start="1001:55" pos:end="1001:73"><name pos:start="1001:55" pos:end="1001:55">s</name><operator pos:start="1001:56" pos:end="1001:57">-&gt;</operator><name pos:start="1001:58" pos:end="1001:73">q_inter_matrix16</name></name></expr></argument>,

                       <argument pos:start="1003:24" pos:end="1003:38"><expr pos:start="1003:24" pos:end="1003:38"><name pos:start="1003:24" pos:end="1003:38"><name pos:start="1003:24" pos:end="1003:24">s</name><operator pos:start="1003:25" pos:end="1003:26">-&gt;</operator><name pos:start="1003:27" pos:end="1003:38">inter_matrix</name></name></expr></argument>, <argument pos:start="1003:41" pos:end="1003:59"><expr pos:start="1003:41" pos:end="1003:59"><name pos:start="1003:41" pos:end="1003:59"><name pos:start="1003:41" pos:end="1003:41">s</name><operator pos:start="1003:42" pos:end="1003:43">-&gt;</operator><name pos:start="1003:44" pos:end="1003:59">inter_quant_bias</name></name></expr></argument>, <argument pos:start="1003:62" pos:end="1003:72"><expr pos:start="1003:62" pos:end="1003:72"><name pos:start="1003:62" pos:end="1003:72"><name pos:start="1003:62" pos:end="1003:66">avctx</name><operator pos:start="1003:67" pos:end="1003:68">-&gt;</operator><name pos:start="1003:69" pos:end="1003:72">qmin</name></name></expr></argument>, <argument pos:start="1003:75" pos:end="1003:76"><expr pos:start="1003:75" pos:end="1003:76"><literal type="number" pos:start="1003:75" pos:end="1003:76">31</literal></expr></argument>, <argument pos:start="1003:79" pos:end="1003:79"><expr pos:start="1003:79" pos:end="1003:79"><literal type="number" pos:start="1003:79" pos:end="1003:79">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1009:5" pos:end="1011:18"><if pos:start="1009:5" pos:end="1011:18">if<condition pos:start="1009:7" pos:end="1009:35">(<expr pos:start="1009:8" pos:end="1009:34"><call pos:start="1009:8" pos:end="1009:30"><name pos:start="1009:8" pos:end="1009:27">ff_rate_control_init</name><argument_list pos:start="1009:28" pos:end="1009:30">(<argument pos:start="1009:29" pos:end="1009:29"><expr pos:start="1009:29" pos:end="1009:29"><name pos:start="1009:29" pos:end="1009:29">s</name></expr></argument>)</argument_list></call> <operator pos:start="1009:32" pos:end="1009:32">&lt;</operator> <literal type="number" pos:start="1009:34" pos:end="1009:34">0</literal></expr>)</condition><block type="pseudo" pos:start="1011:9" pos:end="1011:18"><block_content pos:start="1011:9" pos:end="1011:18">

        <return pos:start="1011:9" pos:end="1011:18">return <expr pos:start="1011:16" pos:end="1011:17"><operator pos:start="1011:16" pos:end="1011:16">-</operator><literal type="number" pos:start="1011:17" pos:end="1011:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="1015:5" pos:end="1015:13">return <expr pos:start="1015:12" pos:end="1015:12"><literal type="number" pos:start="1015:12" pos:end="1015:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
