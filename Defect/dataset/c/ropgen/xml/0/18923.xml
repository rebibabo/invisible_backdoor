<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18923.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">tgen_setcond</name><parameter_list pos:start="1:25" pos:end="3:72">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">TCGContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:47">TCGType</name></type> <name pos:start="1:49" pos:end="1:52">type</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:61">TCGCond</name></type> <name pos:start="1:63" pos:end="1:66">cond</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:36"><decl pos:start="3:26" pos:end="3:36"><type pos:start="3:26" pos:end="3:36"><name pos:start="3:26" pos:end="3:31">TCGReg</name></type> <name pos:start="3:33" pos:end="3:36">dest</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:47"><decl pos:start="3:39" pos:end="3:47"><type pos:start="3:39" pos:end="3:47"><name pos:start="3:39" pos:end="3:44">TCGReg</name></type> <name pos:start="3:46" pos:end="3:47">c1</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:58"><decl pos:start="3:50" pos:end="3:58"><type pos:start="3:50" pos:end="3:58"><name pos:start="3:50" pos:end="3:55">TCGArg</name></type> <name pos:start="3:57" pos:end="3:58">c2</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:71"><decl pos:start="3:61" pos:end="3:71"><type pos:start="3:61" pos:end="3:71"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:71">c2const</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="189:1">{<block_content pos:start="7:5" pos:end="187:5">

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">cc</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="161:5">switch <condition pos:start="11:12" pos:end="11:17">(<expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">cond</name></expr>)</condition> <block pos:start="11:19" pos:end="161:5">{<block_content pos:start="13:5" pos:end="159:14">

    <case pos:start="13:5" pos:end="13:22">case <expr pos:start="13:10" pos:end="13:21"><name pos:start="13:10" pos:end="13:21">TCG_COND_GTU</name></expr>:</case>

    <case pos:start="15:5" pos:end="15:21">case <expr pos:start="15:10" pos:end="15:20"><name pos:start="15:10" pos:end="15:20">TCG_COND_GT</name></expr>:</case>

    <label pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:14">do_greater</name>:</label>

        <comment type="block" pos:start="19:9" pos:end="21:71">/* The result of a compare has CC=2 for GT and CC=3 unused.

           ADD LOGICAL WITH CARRY considers (CC &amp; 2) the carry bit.  */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:55"><expr pos:start="23:9" pos:end="23:54"><call pos:start="23:9" pos:end="23:54"><name pos:start="23:9" pos:end="23:16">tgen_cmp</name><argument_list pos:start="23:17" pos:end="23:54">(<argument pos:start="23:18" pos:end="23:18"><expr pos:start="23:18" pos:end="23:18"><name pos:start="23:18" pos:end="23:18">s</name></expr></argument>, <argument pos:start="23:21" pos:end="23:24"><expr pos:start="23:21" pos:end="23:24"><name pos:start="23:21" pos:end="23:24">type</name></expr></argument>, <argument pos:start="23:27" pos:end="23:30"><expr pos:start="23:27" pos:end="23:30"><name pos:start="23:27" pos:end="23:30">cond</name></expr></argument>, <argument pos:start="23:33" pos:end="23:34"><expr pos:start="23:33" pos:end="23:34"><name pos:start="23:33" pos:end="23:34">c1</name></expr></argument>, <argument pos:start="23:37" pos:end="23:38"><expr pos:start="23:37" pos:end="23:38"><name pos:start="23:37" pos:end="23:38">c2</name></expr></argument>, <argument pos:start="23:41" pos:end="23:47"><expr pos:start="23:41" pos:end="23:47"><name pos:start="23:41" pos:end="23:47">c2const</name></expr></argument>, <argument pos:start="23:50" pos:end="23:53"><expr pos:start="23:50" pos:end="23:53"><name pos:start="23:50" pos:end="23:53">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><call pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:20">tcg_out_movi</name><argument_list pos:start="25:21" pos:end="25:38">(<argument pos:start="25:22" pos:end="25:22"><expr pos:start="25:22" pos:end="25:22"><name pos:start="25:22" pos:end="25:22">s</name></expr></argument>, <argument pos:start="25:25" pos:end="25:28"><expr pos:start="25:25" pos:end="25:28"><name pos:start="25:25" pos:end="25:28">type</name></expr></argument>, <argument pos:start="25:31" pos:end="25:34"><expr pos:start="25:31" pos:end="25:34"><name pos:start="25:31" pos:end="25:34">dest</name></expr></argument>, <argument pos:start="25:37" pos:end="25:37"><expr pos:start="25:37" pos:end="25:37"><literal type="number" pos:start="25:37" pos:end="25:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:48"><expr pos:start="27:9" pos:end="27:47"><call pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:20">tcg_out_insn</name><argument_list pos:start="27:21" pos:end="27:47">(<argument pos:start="27:22" pos:end="27:22"><expr pos:start="27:22" pos:end="27:22"><name pos:start="27:22" pos:end="27:22">s</name></expr></argument>, <argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">RRE</name></expr></argument>, <argument pos:start="27:30" pos:end="27:34"><expr pos:start="27:30" pos:end="27:34"><name pos:start="27:30" pos:end="27:34">ALCGR</name></expr></argument>, <argument pos:start="27:37" pos:end="27:40"><expr pos:start="27:37" pos:end="27:40"><name pos:start="27:37" pos:end="27:40">dest</name></expr></argument>, <argument pos:start="27:43" pos:end="27:46"><expr pos:start="27:43" pos:end="27:46"><name pos:start="27:43" pos:end="27:46">dest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>



    <case pos:start="33:5" pos:end="33:22">case <expr pos:start="33:10" pos:end="33:21"><name pos:start="33:10" pos:end="33:21">TCG_COND_GEU</name></expr>:</case>

    <label pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:10">do_geu</name>:</label>

        <comment type="block" pos:start="37:9" pos:end="39:69">/* We need "real" carry semantics, so use SUBTRACT LOGICAL

           instead of COMPARE LOGICAL.  This needs an extra move.  */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:43"><expr pos:start="41:9" pos:end="41:42"><call pos:start="41:9" pos:end="41:42"><name pos:start="41:9" pos:end="41:19">tcg_out_mov</name><argument_list pos:start="41:20" pos:end="41:42">(<argument pos:start="41:21" pos:end="41:21"><expr pos:start="41:21" pos:end="41:21"><name pos:start="41:21" pos:end="41:21">s</name></expr></argument>, <argument pos:start="41:24" pos:end="41:27"><expr pos:start="41:24" pos:end="41:27"><name pos:start="41:24" pos:end="41:27">type</name></expr></argument>, <argument pos:start="41:30" pos:end="41:37"><expr pos:start="41:30" pos:end="41:37"><name pos:start="41:30" pos:end="41:37">TCG_TMP0</name></expr></argument>, <argument pos:start="41:40" pos:end="41:41"><expr pos:start="41:40" pos:end="41:41"><name pos:start="41:40" pos:end="41:41">c1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="71:9"><if pos:start="43:9" pos:end="57:9">if <condition pos:start="43:12" pos:end="43:20">(<expr pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:19">c2const</name></expr>)</condition> <block pos:start="43:22" pos:end="57:9">{<block_content pos:start="45:13" pos:end="55:13">

            <expr_stmt pos:start="45:13" pos:end="45:51"><expr pos:start="45:13" pos:end="45:50"><call pos:start="45:13" pos:end="45:50"><name pos:start="45:13" pos:end="45:24">tcg_out_movi</name><argument_list pos:start="45:25" pos:end="45:50">(<argument pos:start="45:26" pos:end="45:26"><expr pos:start="45:26" pos:end="45:26"><name pos:start="45:26" pos:end="45:26">s</name></expr></argument>, <argument pos:start="45:29" pos:end="45:40"><expr pos:start="45:29" pos:end="45:40"><name pos:start="45:29" pos:end="45:40">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="45:43" pos:end="45:46"><expr pos:start="45:43" pos:end="45:46"><name pos:start="45:43" pos:end="45:46">dest</name></expr></argument>, <argument pos:start="45:49" pos:end="45:49"><expr pos:start="45:49" pos:end="45:49"><literal type="number" pos:start="45:49" pos:end="45:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="55:13"><if pos:start="47:13" pos:end="51:13">if <condition pos:start="47:16" pos:end="47:37">(<expr pos:start="47:17" pos:end="47:36"><name pos:start="47:17" pos:end="47:20">type</name> <operator pos:start="47:22" pos:end="47:23">==</operator> <name pos:start="47:25" pos:end="47:36">TCG_TYPE_I32</name></expr>)</condition> <block pos:start="47:39" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:57">

                <expr_stmt pos:start="49:17" pos:end="49:57"><expr pos:start="49:17" pos:end="49:56"><call pos:start="49:17" pos:end="49:56"><name pos:start="49:17" pos:end="49:28">tcg_out_insn</name><argument_list pos:start="49:29" pos:end="49:56">(<argument pos:start="49:30" pos:end="49:30"><expr pos:start="49:30" pos:end="49:30"><name pos:start="49:30" pos:end="49:30">s</name></expr></argument>, <argument pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><name pos:start="49:33" pos:end="49:35">RIL</name></expr></argument>, <argument pos:start="49:38" pos:end="49:41"><expr pos:start="49:38" pos:end="49:41"><name pos:start="49:38" pos:end="49:41">SLFI</name></expr></argument>, <argument pos:start="49:44" pos:end="49:51"><expr pos:start="49:44" pos:end="49:51"><name pos:start="49:44" pos:end="49:51">TCG_TMP0</name></expr></argument>, <argument pos:start="49:54" pos:end="49:55"><expr pos:start="49:54" pos:end="49:55"><name pos:start="49:54" pos:end="49:55">c2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="51:15" pos:end="55:13">else <block pos:start="51:20" pos:end="55:13">{<block_content pos:start="53:17" pos:end="53:58">

                <expr_stmt pos:start="53:17" pos:end="53:58"><expr pos:start="53:17" pos:end="53:57"><call pos:start="53:17" pos:end="53:57"><name pos:start="53:17" pos:end="53:28">tcg_out_insn</name><argument_list pos:start="53:29" pos:end="53:57">(<argument pos:start="53:30" pos:end="53:30"><expr pos:start="53:30" pos:end="53:30"><name pos:start="53:30" pos:end="53:30">s</name></expr></argument>, <argument pos:start="53:33" pos:end="53:35"><expr pos:start="53:33" pos:end="53:35"><name pos:start="53:33" pos:end="53:35">RIL</name></expr></argument>, <argument pos:start="53:38" pos:end="53:42"><expr pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:42">SLGFI</name></expr></argument>, <argument pos:start="53:45" pos:end="53:52"><expr pos:start="53:45" pos:end="53:52"><name pos:start="53:45" pos:end="53:52">TCG_TMP0</name></expr></argument>, <argument pos:start="53:55" pos:end="53:56"><expr pos:start="53:55" pos:end="53:56"><name pos:start="53:55" pos:end="53:56">c2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="71:9">else <block pos:start="57:16" pos:end="71:9">{<block_content pos:start="59:13" pos:end="69:51">

            <if_stmt pos:start="59:13" pos:end="67:13"><if pos:start="59:13" pos:end="63:13">if <condition pos:start="59:16" pos:end="59:37">(<expr pos:start="59:17" pos:end="59:36"><name pos:start="59:17" pos:end="59:20">type</name> <operator pos:start="59:22" pos:end="59:23">==</operator> <name pos:start="59:25" pos:end="59:36">TCG_TYPE_I32</name></expr>)</condition> <block pos:start="59:39" pos:end="63:13">{<block_content pos:start="61:17" pos:end="61:55">

                <expr_stmt pos:start="61:17" pos:end="61:55"><expr pos:start="61:17" pos:end="61:54"><call pos:start="61:17" pos:end="61:54"><name pos:start="61:17" pos:end="61:28">tcg_out_insn</name><argument_list pos:start="61:29" pos:end="61:54">(<argument pos:start="61:30" pos:end="61:30"><expr pos:start="61:30" pos:end="61:30"><name pos:start="61:30" pos:end="61:30">s</name></expr></argument>, <argument pos:start="61:33" pos:end="61:34"><expr pos:start="61:33" pos:end="61:34"><name pos:start="61:33" pos:end="61:34">RR</name></expr></argument>, <argument pos:start="61:37" pos:end="61:39"><expr pos:start="61:37" pos:end="61:39"><name pos:start="61:37" pos:end="61:39">SLR</name></expr></argument>, <argument pos:start="61:42" pos:end="61:49"><expr pos:start="61:42" pos:end="61:49"><name pos:start="61:42" pos:end="61:49">TCG_TMP0</name></expr></argument>, <argument pos:start="61:52" pos:end="61:53"><expr pos:start="61:52" pos:end="61:53"><name pos:start="61:52" pos:end="61:53">c2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="63:15" pos:end="67:13">else <block pos:start="63:20" pos:end="67:13">{<block_content pos:start="65:17" pos:end="65:57">

                <expr_stmt pos:start="65:17" pos:end="65:57"><expr pos:start="65:17" pos:end="65:56"><call pos:start="65:17" pos:end="65:56"><name pos:start="65:17" pos:end="65:28">tcg_out_insn</name><argument_list pos:start="65:29" pos:end="65:56">(<argument pos:start="65:30" pos:end="65:30"><expr pos:start="65:30" pos:end="65:30"><name pos:start="65:30" pos:end="65:30">s</name></expr></argument>, <argument pos:start="65:33" pos:end="65:35"><expr pos:start="65:33" pos:end="65:35"><name pos:start="65:33" pos:end="65:35">RRE</name></expr></argument>, <argument pos:start="65:38" pos:end="65:41"><expr pos:start="65:38" pos:end="65:41"><name pos:start="65:38" pos:end="65:41">SLGR</name></expr></argument>, <argument pos:start="65:44" pos:end="65:51"><expr pos:start="65:44" pos:end="65:51"><name pos:start="65:44" pos:end="65:51">TCG_TMP0</name></expr></argument>, <argument pos:start="65:54" pos:end="65:55"><expr pos:start="65:54" pos:end="65:55"><name pos:start="65:54" pos:end="65:55">c2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:51"><expr pos:start="69:13" pos:end="69:50"><call pos:start="69:13" pos:end="69:50"><name pos:start="69:13" pos:end="69:24">tcg_out_movi</name><argument_list pos:start="69:25" pos:end="69:50">(<argument pos:start="69:26" pos:end="69:26"><expr pos:start="69:26" pos:end="69:26"><name pos:start="69:26" pos:end="69:26">s</name></expr></argument>, <argument pos:start="69:29" pos:end="69:40"><expr pos:start="69:29" pos:end="69:40"><name pos:start="69:29" pos:end="69:40">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="69:43" pos:end="69:46"><expr pos:start="69:43" pos:end="69:46"><name pos:start="69:43" pos:end="69:46">dest</name></expr></argument>, <argument pos:start="69:49" pos:end="69:49"><expr pos:start="69:49" pos:end="69:49"><literal type="number" pos:start="69:49" pos:end="69:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:48"><expr pos:start="73:9" pos:end="73:47"><call pos:start="73:9" pos:end="73:47"><name pos:start="73:9" pos:end="73:20">tcg_out_insn</name><argument_list pos:start="73:21" pos:end="73:47">(<argument pos:start="73:22" pos:end="73:22"><expr pos:start="73:22" pos:end="73:22"><name pos:start="73:22" pos:end="73:22">s</name></expr></argument>, <argument pos:start="73:25" pos:end="73:27"><expr pos:start="73:25" pos:end="73:27"><name pos:start="73:25" pos:end="73:27">RRE</name></expr></argument>, <argument pos:start="73:30" pos:end="73:34"><expr pos:start="73:30" pos:end="73:34"><name pos:start="73:30" pos:end="73:34">ALCGR</name></expr></argument>, <argument pos:start="73:37" pos:end="73:40"><expr pos:start="73:37" pos:end="73:40"><name pos:start="73:37" pos:end="73:40">dest</name></expr></argument>, <argument pos:start="73:43" pos:end="73:46"><expr pos:start="73:43" pos:end="73:46"><name pos:start="73:43" pos:end="73:46">dest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:15">return;</return>



    <case pos:start="79:5" pos:end="79:22">case <expr pos:start="79:10" pos:end="79:21"><name pos:start="79:10" pos:end="79:21">TCG_COND_LEU</name></expr>:</case>

    <case pos:start="81:5" pos:end="81:22">case <expr pos:start="81:10" pos:end="81:21"><name pos:start="81:10" pos:end="81:21">TCG_COND_LTU</name></expr>:</case>

    <case pos:start="83:5" pos:end="83:21">case <expr pos:start="83:10" pos:end="83:20"><name pos:start="83:10" pos:end="83:20">TCG_COND_LT</name></expr>:</case>

        <comment type="block" pos:start="85:9" pos:end="85:59">/* Swap operands so that we can use GEU/GTU/GT.  */</comment>

        <if_stmt pos:start="87:9" pos:end="105:9"><if pos:start="87:9" pos:end="97:9">if <condition pos:start="87:12" pos:end="87:20">(<expr pos:start="87:13" pos:end="87:19"><name pos:start="87:13" pos:end="87:19">c2const</name></expr>)</condition> <block pos:start="87:22" pos:end="97:9">{<block_content pos:start="89:13" pos:end="95:26">

            <expr_stmt pos:start="89:13" pos:end="89:48"><expr pos:start="89:13" pos:end="89:47"><call pos:start="89:13" pos:end="89:47"><name pos:start="89:13" pos:end="89:24">tcg_out_movi</name><argument_list pos:start="89:25" pos:end="89:47">(<argument pos:start="89:26" pos:end="89:26"><expr pos:start="89:26" pos:end="89:26"><name pos:start="89:26" pos:end="89:26">s</name></expr></argument>, <argument pos:start="89:29" pos:end="89:32"><expr pos:start="89:29" pos:end="89:32"><name pos:start="89:29" pos:end="89:32">type</name></expr></argument>, <argument pos:start="89:35" pos:end="89:42"><expr pos:start="89:35" pos:end="89:42"><name pos:start="89:35" pos:end="89:42">TCG_TMP0</name></expr></argument>, <argument pos:start="89:45" pos:end="89:46"><expr pos:start="89:45" pos:end="89:46"><name pos:start="89:45" pos:end="89:46">c2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:20"><expr pos:start="91:13" pos:end="91:19"><name pos:start="91:13" pos:end="91:14">c2</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <name pos:start="91:18" pos:end="91:19">c1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:24"><expr pos:start="93:13" pos:end="93:23"><name pos:start="93:13" pos:end="93:19">c2const</name> <operator pos:start="93:21" pos:end="93:21">=</operator> <literal type="number" pos:start="93:23" pos:end="93:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:26"><expr pos:start="95:13" pos:end="95:25"><name pos:start="95:13" pos:end="95:14">c1</name> <operator pos:start="95:16" pos:end="95:16">=</operator> <name pos:start="95:18" pos:end="95:25">TCG_TMP0</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="97:11" pos:end="105:9">else <block pos:start="97:16" pos:end="105:9">{<block_content pos:start="99:13" pos:end="103:19">

            <decl_stmt pos:start="99:13" pos:end="99:26"><decl pos:start="99:13" pos:end="99:25"><type pos:start="99:13" pos:end="99:18"><name pos:start="99:13" pos:end="99:18">TCGReg</name></type> <name pos:start="99:20" pos:end="99:20">t</name> <init pos:start="99:22" pos:end="99:25">= <expr pos:start="99:24" pos:end="99:25"><name pos:start="99:24" pos:end="99:25">c1</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:20"><expr pos:start="101:13" pos:end="101:19"><name pos:start="101:13" pos:end="101:14">c1</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <name pos:start="101:18" pos:end="101:19">c2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:19"><expr pos:start="103:13" pos:end="103:18"><name pos:start="103:13" pos:end="103:14">c2</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <name pos:start="103:18" pos:end="103:18">t</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="107:9" pos:end="111:9"><if pos:start="107:9" pos:end="111:9">if <condition pos:start="107:12" pos:end="107:33">(<expr pos:start="107:13" pos:end="107:32"><name pos:start="107:13" pos:end="107:16">cond</name> <operator pos:start="107:18" pos:end="107:19">==</operator> <name pos:start="107:21" pos:end="107:32">TCG_COND_LEU</name></expr>)</condition> <block pos:start="107:35" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:24">

            <goto pos:start="109:13" pos:end="109:24">goto <name pos:start="109:18" pos:end="109:23">do_geu</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:35"><expr pos:start="113:9" pos:end="113:34"><name pos:start="113:9" pos:end="113:12">cond</name> <operator pos:start="113:14" pos:end="113:14">=</operator> <call pos:start="113:16" pos:end="113:34"><name pos:start="113:16" pos:end="113:28">tcg_swap_cond</name><argument_list pos:start="113:29" pos:end="113:34">(<argument pos:start="113:30" pos:end="113:33"><expr pos:start="113:30" pos:end="113:33"><name pos:start="113:30" pos:end="113:33">cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="115:9" pos:end="115:24">goto <name pos:start="115:14" pos:end="115:23">do_greater</name>;</goto>



    <case pos:start="119:5" pos:end="119:21">case <expr pos:start="119:10" pos:end="119:20"><name pos:start="119:10" pos:end="119:20">TCG_COND_NE</name></expr>:</case>

        <comment type="block" pos:start="121:9" pos:end="121:31">/* X != 0 is X &gt; 0.  */</comment>

        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:31">(<expr pos:start="123:13" pos:end="123:30"><name pos:start="123:13" pos:end="123:19">c2const</name> <operator pos:start="123:21" pos:end="123:22">&amp;&amp;</operator> <name pos:start="123:24" pos:end="123:25">c2</name> <operator pos:start="123:27" pos:end="123:28">==</operator> <literal type="number" pos:start="123:30" pos:end="123:30">0</literal></expr>)</condition> <block pos:start="123:33" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:28">

            <expr_stmt pos:start="125:13" pos:end="125:32"><expr pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:16">cond</name> <operator pos:start="125:18" pos:end="125:18">=</operator> <name pos:start="125:20" pos:end="125:31">TCG_COND_GTU</name></expr>;</expr_stmt>

            <goto pos:start="127:13" pos:end="127:28">goto <name pos:start="127:18" pos:end="127:27">do_greater</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="131:9" pos:end="131:14">break;</break>



    <case pos:start="135:5" pos:end="135:21">case <expr pos:start="135:10" pos:end="135:20"><name pos:start="135:10" pos:end="135:20">TCG_COND_EQ</name></expr>:</case>

        <comment type="block" pos:start="137:9" pos:end="137:42">/* X == 0 is X &lt;= 0 is 0 &gt;= X.  */</comment>

        <if_stmt pos:start="139:9" pos:end="151:9"><if pos:start="139:9" pos:end="151:9">if <condition pos:start="139:12" pos:end="139:31">(<expr pos:start="139:13" pos:end="139:30"><name pos:start="139:13" pos:end="139:19">c2const</name> <operator pos:start="139:21" pos:end="139:22">&amp;&amp;</operator> <name pos:start="139:24" pos:end="139:25">c2</name> <operator pos:start="139:27" pos:end="139:28">==</operator> <literal type="number" pos:start="139:30" pos:end="139:30">0</literal></expr>)</condition> <block pos:start="139:33" pos:end="151:9">{<block_content pos:start="141:13" pos:end="149:24">

            <expr_stmt pos:start="141:13" pos:end="141:55"><expr pos:start="141:13" pos:end="141:54"><call pos:start="141:13" pos:end="141:54"><name pos:start="141:13" pos:end="141:24">tcg_out_movi</name><argument_list pos:start="141:25" pos:end="141:54">(<argument pos:start="141:26" pos:end="141:26"><expr pos:start="141:26" pos:end="141:26"><name pos:start="141:26" pos:end="141:26">s</name></expr></argument>, <argument pos:start="141:29" pos:end="141:40"><expr pos:start="141:29" pos:end="141:40"><name pos:start="141:29" pos:end="141:40">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="141:43" pos:end="141:50"><expr pos:start="141:43" pos:end="141:50"><name pos:start="141:43" pos:end="141:50">TCG_TMP0</name></expr></argument>, <argument pos:start="141:53" pos:end="141:53"><expr pos:start="141:53" pos:end="141:53"><literal type="number" pos:start="141:53" pos:end="141:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:20"><expr pos:start="143:13" pos:end="143:19"><name pos:start="143:13" pos:end="143:14">c2</name> <operator pos:start="143:16" pos:end="143:16">=</operator> <name pos:start="143:18" pos:end="143:19">c1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:24"><expr pos:start="145:13" pos:end="145:23"><name pos:start="145:13" pos:end="145:19">c2const</name> <operator pos:start="145:21" pos:end="145:21">=</operator> <literal type="number" pos:start="145:23" pos:end="145:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:26"><expr pos:start="147:13" pos:end="147:25"><name pos:start="147:13" pos:end="147:14">c1</name> <operator pos:start="147:16" pos:end="147:16">=</operator> <name pos:start="147:18" pos:end="147:25">TCG_TMP0</name></expr>;</expr_stmt>

            <goto pos:start="149:13" pos:end="149:24">goto <name pos:start="149:18" pos:end="149:23">do_geu</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="153:9" pos:end="153:14">break;</break>



    <default pos:start="157:5" pos:end="157:12">default:</default>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="165:5" pos:end="165:57"><expr pos:start="165:5" pos:end="165:56"><name pos:start="165:5" pos:end="165:6">cc</name> <operator pos:start="165:8" pos:end="165:8">=</operator> <call pos:start="165:10" pos:end="165:56"><name pos:start="165:10" pos:end="165:17">tgen_cmp</name><argument_list pos:start="165:18" pos:end="165:56">(<argument pos:start="165:19" pos:end="165:19"><expr pos:start="165:19" pos:end="165:19"><name pos:start="165:19" pos:end="165:19">s</name></expr></argument>, <argument pos:start="165:22" pos:end="165:25"><expr pos:start="165:22" pos:end="165:25"><name pos:start="165:22" pos:end="165:25">type</name></expr></argument>, <argument pos:start="165:28" pos:end="165:31"><expr pos:start="165:28" pos:end="165:31"><name pos:start="165:28" pos:end="165:31">cond</name></expr></argument>, <argument pos:start="165:34" pos:end="165:35"><expr pos:start="165:34" pos:end="165:35"><name pos:start="165:34" pos:end="165:35">c1</name></expr></argument>, <argument pos:start="165:38" pos:end="165:39"><expr pos:start="165:38" pos:end="165:39"><name pos:start="165:38" pos:end="165:39">c2</name></expr></argument>, <argument pos:start="165:42" pos:end="165:48"><expr pos:start="165:42" pos:end="165:48"><name pos:start="165:42" pos:end="165:48">c2const</name></expr></argument>, <argument pos:start="165:51" pos:end="165:55"><expr pos:start="165:51" pos:end="165:55"><name pos:start="165:51" pos:end="165:55">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="167:5" pos:end="187:5"><if pos:start="167:5" pos:end="177:5">if <condition pos:start="167:8" pos:end="167:43">(<expr pos:start="167:9" pos:end="167:42"><name pos:start="167:9" pos:end="167:18">facilities</name> <operator pos:start="167:20" pos:end="167:20">&amp;</operator> <name pos:start="167:22" pos:end="167:42">FACILITY_LOAD_ON_COND</name></expr>)</condition> <block pos:start="167:45" pos:end="177:5">{<block_content pos:start="171:9" pos:end="175:56">

        <comment type="block" pos:start="169:9" pos:end="169:52">/* Emit: d = 0, t = 1, d = (cc ? t : d).  */</comment>

        <expr_stmt pos:start="171:9" pos:end="171:47"><expr pos:start="171:9" pos:end="171:46"><call pos:start="171:9" pos:end="171:46"><name pos:start="171:9" pos:end="171:20">tcg_out_movi</name><argument_list pos:start="171:21" pos:end="171:46">(<argument pos:start="171:22" pos:end="171:22"><expr pos:start="171:22" pos:end="171:22"><name pos:start="171:22" pos:end="171:22">s</name></expr></argument>, <argument pos:start="171:25" pos:end="171:36"><expr pos:start="171:25" pos:end="171:36"><name pos:start="171:25" pos:end="171:36">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="171:39" pos:end="171:42"><expr pos:start="171:39" pos:end="171:42"><name pos:start="171:39" pos:end="171:42">dest</name></expr></argument>, <argument pos:start="171:45" pos:end="171:45"><expr pos:start="171:45" pos:end="171:45"><literal type="number" pos:start="171:45" pos:end="171:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:51"><expr pos:start="173:9" pos:end="173:50"><call pos:start="173:9" pos:end="173:50"><name pos:start="173:9" pos:end="173:20">tcg_out_movi</name><argument_list pos:start="173:21" pos:end="173:50">(<argument pos:start="173:22" pos:end="173:22"><expr pos:start="173:22" pos:end="173:22"><name pos:start="173:22" pos:end="173:22">s</name></expr></argument>, <argument pos:start="173:25" pos:end="173:36"><expr pos:start="173:25" pos:end="173:36"><name pos:start="173:25" pos:end="173:36">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="173:39" pos:end="173:46"><expr pos:start="173:39" pos:end="173:46"><name pos:start="173:39" pos:end="173:46">TCG_TMP0</name></expr></argument>, <argument pos:start="173:49" pos:end="173:49"><expr pos:start="173:49" pos:end="173:49"><literal type="number" pos:start="173:49" pos:end="173:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:56"><expr pos:start="175:9" pos:end="175:55"><call pos:start="175:9" pos:end="175:55"><name pos:start="175:9" pos:end="175:20">tcg_out_insn</name><argument_list pos:start="175:21" pos:end="175:55">(<argument pos:start="175:22" pos:end="175:22"><expr pos:start="175:22" pos:end="175:22"><name pos:start="175:22" pos:end="175:22">s</name></expr></argument>, <argument pos:start="175:25" pos:end="175:27"><expr pos:start="175:25" pos:end="175:27"><name pos:start="175:25" pos:end="175:27">RRF</name></expr></argument>, <argument pos:start="175:30" pos:end="175:34"><expr pos:start="175:30" pos:end="175:34"><name pos:start="175:30" pos:end="175:34">LOCGR</name></expr></argument>, <argument pos:start="175:37" pos:end="175:40"><expr pos:start="175:37" pos:end="175:40"><name pos:start="175:37" pos:end="175:40">dest</name></expr></argument>, <argument pos:start="175:43" pos:end="175:50"><expr pos:start="175:43" pos:end="175:50"><name pos:start="175:43" pos:end="175:50">TCG_TMP0</name></expr></argument>, <argument pos:start="175:53" pos:end="175:54"><expr pos:start="175:53" pos:end="175:54"><name pos:start="175:53" pos:end="175:54">cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="177:7" pos:end="187:5">else <block pos:start="177:12" pos:end="187:5">{<block_content pos:start="181:9" pos:end="185:39">

        <comment type="block" pos:start="179:9" pos:end="179:59">/* Emit: d = 1; if (cc) goto over; d = 0; over:  */</comment>

        <expr_stmt pos:start="181:9" pos:end="181:39"><expr pos:start="181:9" pos:end="181:38"><call pos:start="181:9" pos:end="181:38"><name pos:start="181:9" pos:end="181:20">tcg_out_movi</name><argument_list pos:start="181:21" pos:end="181:38">(<argument pos:start="181:22" pos:end="181:22"><expr pos:start="181:22" pos:end="181:22"><name pos:start="181:22" pos:end="181:22">s</name></expr></argument>, <argument pos:start="181:25" pos:end="181:28"><expr pos:start="181:25" pos:end="181:28"><name pos:start="181:25" pos:end="181:28">type</name></expr></argument>, <argument pos:start="181:31" pos:end="181:34"><expr pos:start="181:31" pos:end="181:34"><name pos:start="181:31" pos:end="181:34">dest</name></expr></argument>, <argument pos:start="181:37" pos:end="181:37"><expr pos:start="181:37" pos:end="181:37"><literal type="number" pos:start="181:37" pos:end="181:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:51"><expr pos:start="183:9" pos:end="183:50"><call pos:start="183:9" pos:end="183:50"><name pos:start="183:9" pos:end="183:20">tcg_out_insn</name><argument_list pos:start="183:21" pos:end="183:50">(<argument pos:start="183:22" pos:end="183:22"><expr pos:start="183:22" pos:end="183:22"><name pos:start="183:22" pos:end="183:22">s</name></expr></argument>, <argument pos:start="183:25" pos:end="183:26"><expr pos:start="183:25" pos:end="183:26"><name pos:start="183:25" pos:end="183:26">RI</name></expr></argument>, <argument pos:start="183:29" pos:end="183:31"><expr pos:start="183:29" pos:end="183:31"><name pos:start="183:29" pos:end="183:31">BRC</name></expr></argument>, <argument pos:start="183:34" pos:end="183:35"><expr pos:start="183:34" pos:end="183:35"><name pos:start="183:34" pos:end="183:35">cc</name></expr></argument>, <argument pos:start="183:38" pos:end="183:49"><expr pos:start="183:38" pos:end="183:49"><operator pos:start="183:38" pos:end="183:38">(</operator><literal type="number" pos:start="183:39" pos:end="183:41">4</literal> <operator pos:start="183:41" pos:end="183:41">+</operator> <literal type="number" pos:start="183:43" pos:end="183:43">4</literal><operator pos:start="183:44" pos:end="183:44">)</operator> <operator pos:start="183:46" pos:end="183:47">&gt;&gt;</operator> <literal type="number" pos:start="183:49" pos:end="183:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:39"><expr pos:start="185:9" pos:end="185:38"><call pos:start="185:9" pos:end="185:38"><name pos:start="185:9" pos:end="185:20">tcg_out_movi</name><argument_list pos:start="185:21" pos:end="185:38">(<argument pos:start="185:22" pos:end="185:22"><expr pos:start="185:22" pos:end="185:22"><name pos:start="185:22" pos:end="185:22">s</name></expr></argument>, <argument pos:start="185:25" pos:end="185:28"><expr pos:start="185:25" pos:end="185:28"><name pos:start="185:25" pos:end="185:28">type</name></expr></argument>, <argument pos:start="185:31" pos:end="185:34"><expr pos:start="185:31" pos:end="185:34"><name pos:start="185:31" pos:end="185:34">dest</name></expr></argument>, <argument pos:start="185:37" pos:end="185:37"><expr pos:start="185:37" pos:end="185:37"><literal type="number" pos:start="185:37" pos:end="185:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
