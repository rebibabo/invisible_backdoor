<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21724.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">load_seg</name><parameter_list pos:start="1:14" pos:end="1:40">(<parameter pos:start="1:15" pos:end="1:25"><decl pos:start="1:15" pos:end="1:25"><type pos:start="1:15" pos:end="1:25"><name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:25">seg_reg</name></decl></parameter>, <parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:39">selector</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">SegmentCache</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:26">SegmentDescriptorTable</name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:30">dt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:15">e1</name></decl>, <decl pos:start="11:18" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:18" pos:end="11:19">e2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">ptr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:7">env</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:13">segs</name><index pos:start="17:14" pos:end="17:22">[<expr pos:start="17:15" pos:end="17:21"><name pos:start="17:15" pos:end="17:21">seg_reg</name></expr>]</index></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <name pos:start="17:26" pos:end="17:33">selector</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:6">sc</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <operator pos:start="19:10" pos:end="19:10">&amp;</operator><name pos:start="19:11" pos:end="19:33"><name pos:start="19:11" pos:end="19:13">env</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:24">seg_cache</name><index pos:start="19:25" pos:end="19:33">[<expr pos:start="19:26" pos:end="19:32"><name pos:start="19:26" pos:end="19:32">seg_reg</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="69:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:30">(<expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:11">env</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:19">eflags</name></name> <operator pos:start="21:21" pos:end="21:21">&amp;</operator> <name pos:start="21:23" pos:end="21:29">VM_MASK</name></expr>)</condition> <block pos:start="21:32" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:26">

        <expr_stmt pos:start="23:9" pos:end="23:43"><expr pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:10">sc</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:16">base</name></name> <operator pos:start="23:18" pos:end="23:18">=</operator> <operator pos:start="23:20" pos:end="23:20">(</operator><name pos:start="23:21" pos:end="23:24">void</name> <operator pos:start="23:26" pos:end="23:26">*</operator><operator pos:start="23:27" pos:end="23:27">)</operator><operator pos:start="23:28" pos:end="23:28">(</operator><name pos:start="23:29" pos:end="23:36">selector</name> <operator pos:start="23:38" pos:end="23:39">&lt;&lt;</operator> <literal type="number" pos:start="23:41" pos:end="23:41">4</literal><operator pos:start="23:42" pos:end="23:42">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:27"><expr pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:10">sc</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:17">limit</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <literal type="number" pos:start="25:21" pos:end="25:26">0xffff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:26"><expr pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:10">sc</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:21">seg_32bit</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="69:5">else <block pos:start="29:12" pos:end="69:5">{<block_content pos:start="31:9" pos:end="68:0">

        <if_stmt pos:start="31:9" pos:end="37:27"><if pos:start="31:9" pos:end="33:27">if <condition pos:start="31:12" pos:end="31:27">(<expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:20">selector</name> <operator pos:start="31:22" pos:end="31:22">&amp;</operator> <literal type="number" pos:start="31:24" pos:end="31:26">0x4</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:27"><block_content pos:start="33:13" pos:end="33:27">

            <expr_stmt pos:start="33:13" pos:end="33:27"><expr pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:14">dt</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <operator pos:start="33:18" pos:end="33:18">&amp;</operator><name pos:start="33:19" pos:end="33:26"><name pos:start="33:19" pos:end="33:21">env</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:26">ldt</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="35:9" pos:end="37:27">else<block type="pseudo" pos:start="37:13" pos:end="37:27"><block_content pos:start="37:13" pos:end="37:27">

            <expr_stmt pos:start="37:13" pos:end="37:27"><expr pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:14">dt</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <operator pos:start="37:18" pos:end="37:18">&amp;</operator><name pos:start="37:19" pos:end="37:26"><name pos:start="37:19" pos:end="37:21">env</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:26">gdt</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:13">index</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:24">selector</name> <operator pos:start="39:26" pos:end="39:26">&amp;</operator> <operator pos:start="39:28" pos:end="39:28">~</operator><literal type="number" pos:start="39:29" pos:end="39:29">7</literal></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="43:54"><if pos:start="41:9" pos:end="43:54">if <condition pos:start="41:12" pos:end="41:36">(<expr pos:start="41:13" pos:end="41:35"><operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:18">index</name> <operator pos:start="41:20" pos:end="41:20">+</operator> <literal type="number" pos:start="41:22" pos:end="41:22">7</literal><operator pos:start="41:23" pos:end="41:23">)</operator> <operator pos:start="41:25" pos:end="41:25">&gt;</operator> <name pos:start="41:27" pos:end="41:35"><name pos:start="41:27" pos:end="41:28">dt</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:35">limit</name></name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:54"><block_content pos:start="43:13" pos:end="43:54">

            <expr_stmt pos:start="43:13" pos:end="43:54"><expr pos:start="43:13" pos:end="43:53"><call pos:start="43:13" pos:end="43:53"><name pos:start="43:13" pos:end="43:31">raise_exception_err</name><argument_list pos:start="43:32" pos:end="43:53">(<argument pos:start="43:33" pos:end="43:42"><expr pos:start="43:33" pos:end="43:42"><name pos:start="43:33" pos:end="43:42">EXCP0D_GPF</name></expr></argument>, <argument pos:start="43:45" pos:end="43:52"><expr pos:start="43:45" pos:end="43:52"><name pos:start="43:45" pos:end="43:52">selector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:11">ptr</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <name pos:start="45:15" pos:end="45:22"><name pos:start="45:15" pos:end="45:16">dt</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:22">base</name></name> <operator pos:start="45:24" pos:end="45:24">+</operator> <name pos:start="45:26" pos:end="45:30">index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:22"><expr pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:10">e1</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="47:21"><name pos:start="47:14" pos:end="47:16">ldl</name><argument_list pos:start="47:17" pos:end="47:21">(<argument pos:start="47:18" pos:end="47:20"><expr pos:start="47:18" pos:end="47:20"><name pos:start="47:18" pos:end="47:20">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:10">e2</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <call pos:start="49:14" pos:end="49:25"><name pos:start="49:14" pos:end="49:16">ldl</name><argument_list pos:start="49:17" pos:end="49:25">(<argument pos:start="49:18" pos:end="49:24"><expr pos:start="49:18" pos:end="49:24"><name pos:start="49:18" pos:end="49:20">ptr</name> <operator pos:start="49:22" pos:end="49:22">+</operator> <literal type="number" pos:start="49:24" pos:end="49:24">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:82"><expr pos:start="51:9" pos:end="51:81"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:10">sc</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:16">base</name></name> <operator pos:start="51:18" pos:end="51:18">=</operator> <operator pos:start="51:20" pos:end="51:20">(</operator><name pos:start="51:21" pos:end="51:24">void</name> <operator pos:start="51:26" pos:end="51:26">*</operator><operator pos:start="51:27" pos:end="51:27">)</operator><operator pos:start="51:28" pos:end="51:28">(</operator><operator pos:start="51:29" pos:end="51:29">(</operator><name pos:start="51:30" pos:end="51:31">e1</name> <operator pos:start="51:33" pos:end="51:34">&gt;&gt;</operator> <literal type="number" pos:start="51:36" pos:end="51:37">16</literal><operator pos:start="51:38" pos:end="51:38">)</operator> <operator pos:start="51:40" pos:end="51:40">|</operator> <operator pos:start="51:42" pos:end="51:42">(</operator><operator pos:start="51:43" pos:end="51:43">(</operator><name pos:start="51:44" pos:end="51:45">e2</name> <operator pos:start="51:47" pos:end="51:47">&amp;</operator> <literal type="number" pos:start="51:49" pos:end="51:52">0xff</literal><operator pos:start="51:53" pos:end="51:53">)</operator> <operator pos:start="51:55" pos:end="51:56">&lt;&lt;</operator> <literal type="number" pos:start="51:58" pos:end="51:59">16</literal><operator pos:start="51:60" pos:end="51:60">)</operator> <operator pos:start="51:62" pos:end="51:62">|</operator> <operator pos:start="51:64" pos:end="51:64">(</operator><name pos:start="51:65" pos:end="51:66">e2</name> <operator pos:start="51:68" pos:end="51:68">&amp;</operator> <literal type="number" pos:start="51:70" pos:end="51:79">0xff000000</literal><operator pos:start="51:80" pos:end="51:80">)</operator><operator pos:start="51:81" pos:end="51:81">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:54"><expr pos:start="53:9" pos:end="53:53"><name pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:10">sc</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:17">limit</name></name> <operator pos:start="53:19" pos:end="53:19">=</operator> <operator pos:start="53:21" pos:end="53:21">(</operator><name pos:start="53:22" pos:end="53:23">e1</name> <operator pos:start="53:25" pos:end="53:25">&amp;</operator> <literal type="number" pos:start="53:27" pos:end="53:32">0xffff</literal><operator pos:start="53:33" pos:end="53:33">)</operator> <operator pos:start="53:35" pos:end="53:35">|</operator> <operator pos:start="53:37" pos:end="53:37">(</operator><name pos:start="53:38" pos:end="53:39">e2</name> <operator pos:start="53:41" pos:end="53:41">&amp;</operator> <literal type="number" pos:start="53:43" pos:end="53:52">0x000f0000</literal><operator pos:start="53:53" pos:end="53:53">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:50"><if pos:start="55:9" pos:end="57:50">if <condition pos:start="55:12" pos:end="55:27">(<expr pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:14">e2</name> <operator pos:start="55:16" pos:end="55:16">&amp;</operator> <operator pos:start="55:18" pos:end="55:18">(</operator><literal type="number" pos:start="55:19" pos:end="55:19">1</literal> <operator pos:start="55:21" pos:end="55:22">&lt;&lt;</operator> <literal type="number" pos:start="55:24" pos:end="55:25">23</literal><operator pos:start="55:26" pos:end="55:26">)</operator></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:50"><block_content pos:start="57:13" pos:end="57:50">

            <expr_stmt pos:start="57:13" pos:end="57:50"><expr pos:start="57:13" pos:end="57:49"><name pos:start="57:13" pos:end="57:21"><name pos:start="57:13" pos:end="57:14">sc</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:21">limit</name></name> <operator pos:start="57:23" pos:end="57:23">=</operator> <operator pos:start="57:25" pos:end="57:25">(</operator><name pos:start="57:26" pos:end="57:34"><name pos:start="57:26" pos:end="57:27">sc</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:34">limit</name></name> <operator pos:start="57:36" pos:end="57:37">&lt;&lt;</operator> <literal type="number" pos:start="57:39" pos:end="57:40">12</literal><operator pos:start="57:41" pos:end="57:41">)</operator> <operator pos:start="57:43" pos:end="57:43">|</operator> <literal type="number" pos:start="57:45" pos:end="57:49">0xfff</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="68:0"><expr pos:start="59:9" pos:end="59:38"><name pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:10">sc</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:21">seg_32bit</name></name> <operator pos:start="59:23" pos:end="59:23">=</operator> <operator pos:start="59:25" pos:end="59:25">(</operator><name pos:start="59:26" pos:end="59:27">e2</name> <operator pos:start="59:29" pos:end="59:30">&gt;&gt;</operator> <literal type="number" pos:start="59:32" pos:end="59:33">22</literal><operator pos:start="59:34" pos:end="59:34">)</operator> <operator pos:start="59:36" pos:end="59:36">&amp;</operator> <literal type="number" pos:start="59:38" pos:end="59:38">1</literal></expr>;</expr_stmt>

<cpp:if pos:start="61:1" pos:end="61:5">#<cpp:directive pos:start="61:2" pos:end="61:3">if</cpp:directive> <expr pos:start="61:5" pos:end="61:5"><literal type="number" pos:start="61:5" pos:end="61:5">0</literal></expr></cpp:if>

        fprintf(logfile, "load_seg: sel=0x%04x base=0x%08lx limit=0x%08lx seg_32bit=%d\n", 

                selector, (unsigned long)sc-&gt;base, sc-&gt;limit, sc-&gt;seg_32bit);

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
