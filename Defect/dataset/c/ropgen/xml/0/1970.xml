<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1970.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">file_read_dir</name><parameter_list pos:start="1:25" pos:end="1:60">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">URLContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">h</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:59"><decl pos:start="1:41" pos:end="1:59"><type pos:start="1:41" pos:end="1:59"><name pos:start="1:41" pos:end="1:52">AVIODirEntry</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier><modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">next</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="7:5" pos:end="112:0">

<cpp:if pos:start="5:1" pos:end="5:17">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:17">HAVE_DIRENT_H</name></expr></cpp:if>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">FileContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">c</name> <init pos:start="7:20" pos:end="7:33">= <expr pos:start="7:22" pos:end="7:33"><name pos:start="7:22" pos:end="7:33"><name pos:start="7:22" pos:end="7:22">h</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:17">dirent</name></name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">dir</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:18">fullpath</name> <init pos:start="11:20" pos:end="11:25">= <expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><operator pos:start="15:5" pos:end="15:5">*</operator><name pos:start="15:6" pos:end="15:9">next</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:32"><name pos:start="15:13" pos:end="15:30">ff_alloc_dir_entry</name><argument_list pos:start="15:31" pos:end="15:32">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:31"><if pos:start="17:5" pos:end="19:31">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><operator pos:start="17:9" pos:end="17:9">!</operator><operator pos:start="17:10" pos:end="17:10">*</operator><name pos:start="17:11" pos:end="17:14">next</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:31"><block_content pos:start="19:9" pos:end="19:31">

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <do pos:start="21:5" pos:end="35:70">do <block pos:start="21:8" pos:end="35:5">{<block_content pos:start="23:9" pos:end="33:9">

        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:13">errno</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:30"><expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:11">dir</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:29"><name pos:start="25:15" pos:end="25:21">readdir</name><argument_list pos:start="25:22" pos:end="25:29">(<argument pos:start="25:23" pos:end="25:28"><expr pos:start="25:23" pos:end="25:28"><name pos:start="25:23" pos:end="25:28"><name pos:start="25:23" pos:end="25:23">c</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:28">dir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:17">(<expr pos:start="27:13" pos:end="27:16"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:16">dir</name></expr>)</condition> <block pos:start="27:19" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:34">

            <expr_stmt pos:start="29:13" pos:end="29:27"><expr pos:start="29:13" pos:end="29:26"><call pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:20">av_freep</name><argument_list pos:start="29:21" pos:end="29:26">(<argument pos:start="29:22" pos:end="29:25"><expr pos:start="29:22" pos:end="29:25"><name pos:start="29:22" pos:end="29:25">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:34">return <expr pos:start="31:20" pos:end="31:33"><call pos:start="31:20" pos:end="31:33"><name pos:start="31:20" pos:end="31:26">AVERROR</name><argument_list pos:start="31:27" pos:end="31:33">(<argument pos:start="31:28" pos:end="31:32"><expr pos:start="31:28" pos:end="31:32"><name pos:start="31:28" pos:end="31:32">errno</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="35:13" pos:end="35:69">(<expr pos:start="35:14" pos:end="35:68"><operator pos:start="35:14" pos:end="35:14">!</operator><call pos:start="35:15" pos:end="35:38"><name pos:start="35:15" pos:end="35:20">strcmp</name><argument_list pos:start="35:21" pos:end="35:38">(<argument pos:start="35:22" pos:end="35:32"><expr pos:start="35:22" pos:end="35:32"><name pos:start="35:22" pos:end="35:32"><name pos:start="35:22" pos:end="35:24">dir</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:32">d_name</name></name></expr></argument>, <argument pos:start="35:35" pos:end="35:37"><expr pos:start="35:35" pos:end="35:37"><literal type="string" pos:start="35:35" pos:end="35:37">"."</literal></expr></argument>)</argument_list></call> <operator pos:start="35:40" pos:end="35:41">||</operator> <operator pos:start="35:43" pos:end="35:43">!</operator><call pos:start="35:44" pos:end="35:68"><name pos:start="35:44" pos:end="35:49">strcmp</name><argument_list pos:start="35:50" pos:end="35:68">(<argument pos:start="35:51" pos:end="35:61"><expr pos:start="35:51" pos:end="35:61"><name pos:start="35:51" pos:end="35:61"><name pos:start="35:51" pos:end="35:53">dir</name><operator pos:start="35:54" pos:end="35:55">-&gt;</operator><name pos:start="35:56" pos:end="35:61">d_name</name></name></expr></argument>, <argument pos:start="35:64" pos:end="35:67"><expr pos:start="35:64" pos:end="35:67"><literal type="string" pos:start="35:64" pos:end="35:67">".."</literal></expr></argument>)</argument_list></call></expr>)</condition>;</do>



    <expr_stmt pos:start="39:5" pos:end="39:66"><expr pos:start="39:5" pos:end="39:65"><name pos:start="39:5" pos:end="39:12">fullpath</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:65"><name pos:start="39:16" pos:end="39:39">av_append_path_component</name><argument_list pos:start="39:40" pos:end="39:65">(<argument pos:start="39:41" pos:end="39:51"><expr pos:start="39:41" pos:end="39:51"><name pos:start="39:41" pos:end="39:51"><name pos:start="39:41" pos:end="39:41">h</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:51">filename</name></name></expr></argument>, <argument pos:start="39:54" pos:end="39:64"><expr pos:start="39:54" pos:end="39:64"><name pos:start="39:54" pos:end="39:64"><name pos:start="39:54" pos:end="39:56">dir</name><operator pos:start="39:57" pos:end="39:58">-&gt;</operator><name pos:start="39:59" pos:end="39:64">d_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="99:5"><if pos:start="41:5" pos:end="99:5">if <condition pos:start="41:8" pos:end="41:17">(<expr pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:16">fullpath</name></expr>)</condition> <block pos:start="41:19" pos:end="99:5">{<block_content pos:start="43:9" pos:end="97:26">

        <decl_stmt pos:start="43:9" pos:end="43:23"><decl pos:start="43:9" pos:end="43:22"><type pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:14">struct</name> <name pos:start="43:16" pos:end="43:19">stat</name></name></type> <name pos:start="43:21" pos:end="43:22">st</name></decl>;</decl_stmt>

        <if_stmt pos:start="45:9" pos:end="95:9"><if pos:start="45:9" pos:end="95:9">if <condition pos:start="45:12" pos:end="45:34">(<expr pos:start="45:13" pos:end="45:33"><operator pos:start="45:13" pos:end="45:13">!</operator><call pos:start="45:14" pos:end="45:33"><name pos:start="45:14" pos:end="45:18">lstat</name><argument_list pos:start="45:19" pos:end="45:33">(<argument pos:start="45:20" pos:end="45:27"><expr pos:start="45:20" pos:end="45:27"><name pos:start="45:20" pos:end="45:27">fullpath</name></expr></argument>, <argument pos:start="45:30" pos:end="45:32"><expr pos:start="45:30" pos:end="45:32"><operator pos:start="45:30" pos:end="45:30">&amp;</operator><name pos:start="45:31" pos:end="45:32">st</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:36" pos:end="95:9">{<block_content pos:start="47:13" pos:end="93:78">

            <if_stmt pos:start="47:13" pos:end="77:51"><if pos:start="47:13" pos:end="49:53">if <condition pos:start="47:16" pos:end="47:36">(<expr pos:start="47:17" pos:end="47:35"><call pos:start="47:17" pos:end="47:35"><name pos:start="47:17" pos:end="47:23">S_ISDIR</name><argument_list pos:start="47:24" pos:end="47:35">(<argument pos:start="47:25" pos:end="47:34"><expr pos:start="47:25" pos:end="47:34"><name pos:start="47:25" pos:end="47:34"><name pos:start="47:25" pos:end="47:26">st</name><operator pos:start="47:27" pos:end="47:27">.</operator><name pos:start="47:28" pos:end="47:34">st_mode</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:53"><block_content pos:start="49:17" pos:end="49:53">

                <expr_stmt pos:start="49:17" pos:end="49:53"><expr pos:start="49:17" pos:end="49:52"><name pos:start="49:17" pos:end="49:29"><operator pos:start="49:17" pos:end="49:17">(</operator><operator pos:start="49:18" pos:end="49:18">*</operator><name pos:start="49:19" pos:end="49:22">next</name><operator pos:start="49:23" pos:end="49:23">)</operator><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:29">type</name></name> <operator pos:start="49:31" pos:end="49:31">=</operator> <name pos:start="49:33" pos:end="49:52">AVIO_ENTRY_DIRECTORY</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="51:13" pos:end="53:54">else if <condition pos:start="51:21" pos:end="51:42">(<expr pos:start="51:22" pos:end="51:41"><call pos:start="51:22" pos:end="51:41"><name pos:start="51:22" pos:end="51:29">S_ISFIFO</name><argument_list pos:start="51:30" pos:end="51:41">(<argument pos:start="51:31" pos:end="51:40"><expr pos:start="51:31" pos:end="51:40"><name pos:start="51:31" pos:end="51:40"><name pos:start="51:31" pos:end="51:32">st</name><operator pos:start="51:33" pos:end="51:33">.</operator><name pos:start="51:34" pos:end="51:40">st_mode</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:54"><block_content pos:start="53:17" pos:end="53:54">

                <expr_stmt pos:start="53:17" pos:end="53:54"><expr pos:start="53:17" pos:end="53:53"><name pos:start="53:17" pos:end="53:29"><operator pos:start="53:17" pos:end="53:17">(</operator><operator pos:start="53:18" pos:end="53:18">*</operator><name pos:start="53:19" pos:end="53:22">next</name><operator pos:start="53:23" pos:end="53:23">)</operator><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:29">type</name></name> <operator pos:start="53:31" pos:end="53:31">=</operator> <name pos:start="53:33" pos:end="53:53">AVIO_ENTRY_NAMED_PIPE</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="55:13" pos:end="57:60">else if <condition pos:start="55:21" pos:end="55:41">(<expr pos:start="55:22" pos:end="55:40"><call pos:start="55:22" pos:end="55:40"><name pos:start="55:22" pos:end="55:28">S_ISCHR</name><argument_list pos:start="55:29" pos:end="55:40">(<argument pos:start="55:30" pos:end="55:39"><expr pos:start="55:30" pos:end="55:39"><name pos:start="55:30" pos:end="55:39"><name pos:start="55:30" pos:end="55:31">st</name><operator pos:start="55:32" pos:end="55:32">.</operator><name pos:start="55:33" pos:end="55:39">st_mode</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:60"><block_content pos:start="57:17" pos:end="57:60">

                <expr_stmt pos:start="57:17" pos:end="57:60"><expr pos:start="57:17" pos:end="57:59"><name pos:start="57:17" pos:end="57:29"><operator pos:start="57:17" pos:end="57:17">(</operator><operator pos:start="57:18" pos:end="57:18">*</operator><name pos:start="57:19" pos:end="57:22">next</name><operator pos:start="57:23" pos:end="57:23">)</operator><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:29">type</name></name> <operator pos:start="57:31" pos:end="57:31">=</operator> <name pos:start="57:33" pos:end="57:59">AVIO_ENTRY_CHARACTER_DEVICE</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="59:13" pos:end="61:56">else if <condition pos:start="59:21" pos:end="59:41">(<expr pos:start="59:22" pos:end="59:40"><call pos:start="59:22" pos:end="59:40"><name pos:start="59:22" pos:end="59:28">S_ISBLK</name><argument_list pos:start="59:29" pos:end="59:40">(<argument pos:start="59:30" pos:end="59:39"><expr pos:start="59:30" pos:end="59:39"><name pos:start="59:30" pos:end="59:39"><name pos:start="59:30" pos:end="59:31">st</name><operator pos:start="59:32" pos:end="59:32">.</operator><name pos:start="59:33" pos:end="59:39">st_mode</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:56"><block_content pos:start="61:17" pos:end="61:56">

                <expr_stmt pos:start="61:17" pos:end="61:56"><expr pos:start="61:17" pos:end="61:55"><name pos:start="61:17" pos:end="61:29"><operator pos:start="61:17" pos:end="61:17">(</operator><operator pos:start="61:18" pos:end="61:18">*</operator><name pos:start="61:19" pos:end="61:22">next</name><operator pos:start="61:23" pos:end="61:23">)</operator><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:29">type</name></name> <operator pos:start="61:31" pos:end="61:31">=</operator> <name pos:start="61:33" pos:end="61:55">AVIO_ENTRY_BLOCK_DEVICE</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="63:13" pos:end="65:57">else if <condition pos:start="63:21" pos:end="63:41">(<expr pos:start="63:22" pos:end="63:40"><call pos:start="63:22" pos:end="63:40"><name pos:start="63:22" pos:end="63:28">S_ISLNK</name><argument_list pos:start="63:29" pos:end="63:40">(<argument pos:start="63:30" pos:end="63:39"><expr pos:start="63:30" pos:end="63:39"><name pos:start="63:30" pos:end="63:39"><name pos:start="63:30" pos:end="63:31">st</name><operator pos:start="63:32" pos:end="63:32">.</operator><name pos:start="63:33" pos:end="63:39">st_mode</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:57"><block_content pos:start="65:17" pos:end="65:57">

                <expr_stmt pos:start="65:17" pos:end="65:57"><expr pos:start="65:17" pos:end="65:56"><name pos:start="65:17" pos:end="65:29"><operator pos:start="65:17" pos:end="65:17">(</operator><operator pos:start="65:18" pos:end="65:18">*</operator><name pos:start="65:19" pos:end="65:22">next</name><operator pos:start="65:23" pos:end="65:23">)</operator><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:29">type</name></name> <operator pos:start="65:31" pos:end="65:31">=</operator> <name pos:start="65:33" pos:end="65:56">AVIO_ENTRY_SYMBOLIC_LINK</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="67:13" pos:end="69:50">else if <condition pos:start="67:21" pos:end="67:42">(<expr pos:start="67:22" pos:end="67:41"><call pos:start="67:22" pos:end="67:41"><name pos:start="67:22" pos:end="67:29">S_ISSOCK</name><argument_list pos:start="67:30" pos:end="67:41">(<argument pos:start="67:31" pos:end="67:40"><expr pos:start="67:31" pos:end="67:40"><name pos:start="67:31" pos:end="67:40"><name pos:start="67:31" pos:end="67:32">st</name><operator pos:start="67:33" pos:end="67:33">.</operator><name pos:start="67:34" pos:end="67:40">st_mode</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:50"><block_content pos:start="69:17" pos:end="69:50">

                <expr_stmt pos:start="69:17" pos:end="69:50"><expr pos:start="69:17" pos:end="69:49"><name pos:start="69:17" pos:end="69:29"><operator pos:start="69:17" pos:end="69:17">(</operator><operator pos:start="69:18" pos:end="69:18">*</operator><name pos:start="69:19" pos:end="69:22">next</name><operator pos:start="69:23" pos:end="69:23">)</operator><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:29">type</name></name> <operator pos:start="69:31" pos:end="69:31">=</operator> <name pos:start="69:33" pos:end="69:49">AVIO_ENTRY_SOCKET</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="71:13" pos:end="73:48">else if <condition pos:start="71:21" pos:end="71:41">(<expr pos:start="71:22" pos:end="71:40"><call pos:start="71:22" pos:end="71:40"><name pos:start="71:22" pos:end="71:28">S_ISREG</name><argument_list pos:start="71:29" pos:end="71:40">(<argument pos:start="71:30" pos:end="71:39"><expr pos:start="71:30" pos:end="71:39"><name pos:start="71:30" pos:end="71:39"><name pos:start="71:30" pos:end="71:31">st</name><operator pos:start="71:32" pos:end="71:32">.</operator><name pos:start="71:33" pos:end="71:39">st_mode</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:48"><block_content pos:start="73:17" pos:end="73:48">

                <expr_stmt pos:start="73:17" pos:end="73:48"><expr pos:start="73:17" pos:end="73:47"><name pos:start="73:17" pos:end="73:29"><operator pos:start="73:17" pos:end="73:17">(</operator><operator pos:start="73:18" pos:end="73:18">*</operator><name pos:start="73:19" pos:end="73:22">next</name><operator pos:start="73:23" pos:end="73:23">)</operator><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:29">type</name></name> <operator pos:start="73:31" pos:end="73:31">=</operator> <name pos:start="73:33" pos:end="73:47">AVIO_ENTRY_FILE</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="75:13" pos:end="77:51">else<block type="pseudo" pos:start="77:17" pos:end="77:51"><block_content pos:start="77:17" pos:end="77:51">

                <expr_stmt pos:start="77:17" pos:end="77:51"><expr pos:start="77:17" pos:end="77:50"><name pos:start="77:17" pos:end="77:29"><operator pos:start="77:17" pos:end="77:17">(</operator><operator pos:start="77:18" pos:end="77:18">*</operator><name pos:start="77:19" pos:end="77:22">next</name><operator pos:start="77:23" pos:end="77:23">)</operator><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:29">type</name></name> <operator pos:start="77:31" pos:end="77:31">=</operator> <name pos:start="77:33" pos:end="77:50">AVIO_ENTRY_UNKNOWN</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <expr_stmt pos:start="81:13" pos:end="81:42"><expr pos:start="81:13" pos:end="81:41"><name pos:start="81:13" pos:end="81:29"><operator pos:start="81:13" pos:end="81:13">(</operator><operator pos:start="81:14" pos:end="81:14">*</operator><name pos:start="81:15" pos:end="81:18">next</name><operator pos:start="81:19" pos:end="81:19">)</operator><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:29">group_id</name></name> <operator pos:start="81:31" pos:end="81:31">=</operator> <name pos:start="81:33" pos:end="81:41"><name pos:start="81:33" pos:end="81:34">st</name><operator pos:start="81:35" pos:end="81:35">.</operator><name pos:start="81:36" pos:end="81:41">st_gid</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:41"><expr pos:start="83:13" pos:end="83:40"><name pos:start="83:13" pos:end="83:28"><operator pos:start="83:13" pos:end="83:13">(</operator><operator pos:start="83:14" pos:end="83:14">*</operator><name pos:start="83:15" pos:end="83:18">next</name><operator pos:start="83:19" pos:end="83:19">)</operator><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:28">user_id</name></name> <operator pos:start="83:30" pos:end="83:30">=</operator> <name pos:start="83:32" pos:end="83:40"><name pos:start="83:32" pos:end="83:33">st</name><operator pos:start="83:34" pos:end="83:34">.</operator><name pos:start="83:35" pos:end="83:40">st_uid</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:39"><expr pos:start="85:13" pos:end="85:38"><name pos:start="85:13" pos:end="85:25"><operator pos:start="85:13" pos:end="85:13">(</operator><operator pos:start="85:14" pos:end="85:14">*</operator><name pos:start="85:15" pos:end="85:18">next</name><operator pos:start="85:19" pos:end="85:19">)</operator><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:25">size</name></name> <operator pos:start="85:27" pos:end="85:27">=</operator> <name pos:start="85:29" pos:end="85:38"><name pos:start="85:29" pos:end="85:30">st</name><operator pos:start="85:31" pos:end="85:31">.</operator><name pos:start="85:32" pos:end="85:38">st_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:50"><expr pos:start="87:13" pos:end="87:49"><name pos:start="87:13" pos:end="87:29"><operator pos:start="87:13" pos:end="87:13">(</operator><operator pos:start="87:14" pos:end="87:14">*</operator><name pos:start="87:15" pos:end="87:18">next</name><operator pos:start="87:19" pos:end="87:19">)</operator><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:29">filemode</name></name> <operator pos:start="87:31" pos:end="87:31">=</operator> <name pos:start="87:33" pos:end="87:42"><name pos:start="87:33" pos:end="87:34">st</name><operator pos:start="87:35" pos:end="87:35">.</operator><name pos:start="87:36" pos:end="87:42">st_mode</name></name> <operator pos:start="87:44" pos:end="87:44">&amp;</operator> <literal type="number" pos:start="87:46" pos:end="87:49">0777</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:77"><expr pos:start="89:13" pos:end="89:76"><name pos:start="89:13" pos:end="89:43"><operator pos:start="89:13" pos:end="89:13">(</operator><operator pos:start="89:14" pos:end="89:14">*</operator><name pos:start="89:15" pos:end="89:18">next</name><operator pos:start="89:19" pos:end="89:19">)</operator><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:43">modification_timestamp</name></name> <operator pos:start="89:45" pos:end="89:45">=</operator> <call pos:start="89:47" pos:end="89:62"><name pos:start="89:47" pos:end="89:53">INT64_C</name><argument_list pos:start="89:54" pos:end="89:62">(<argument pos:start="89:55" pos:end="89:61"><expr pos:start="89:55" pos:end="89:61"><literal type="number" pos:start="89:55" pos:end="89:61">1000000</literal></expr></argument>)</argument_list></call> <operator pos:start="89:64" pos:end="89:64">*</operator> <name pos:start="89:66" pos:end="89:76"><name pos:start="89:66" pos:end="89:67">st</name><operator pos:start="89:68" pos:end="89:68">.</operator><name pos:start="89:69" pos:end="89:76">st_mtime</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:72"><expr pos:start="91:13" pos:end="91:71"><name pos:start="91:13" pos:end="91:37"><operator pos:start="91:13" pos:end="91:13">(</operator><operator pos:start="91:14" pos:end="91:14">*</operator><name pos:start="91:15" pos:end="91:18">next</name><operator pos:start="91:19" pos:end="91:19">)</operator><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:37">access_timestamp</name></name> <operator pos:start="91:39" pos:end="91:39">=</operator>  <call pos:start="91:42" pos:end="91:57"><name pos:start="91:42" pos:end="91:48">INT64_C</name><argument_list pos:start="91:49" pos:end="91:57">(<argument pos:start="91:50" pos:end="91:56"><expr pos:start="91:50" pos:end="91:56"><literal type="number" pos:start="91:50" pos:end="91:56">1000000</literal></expr></argument>)</argument_list></call> <operator pos:start="91:59" pos:end="91:59">*</operator> <name pos:start="91:61" pos:end="91:71"><name pos:start="91:61" pos:end="91:62">st</name><operator pos:start="91:63" pos:end="91:63">.</operator><name pos:start="91:64" pos:end="91:71">st_atime</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:78"><expr pos:start="93:13" pos:end="93:77"><name pos:start="93:13" pos:end="93:44"><operator pos:start="93:13" pos:end="93:13">(</operator><operator pos:start="93:14" pos:end="93:14">*</operator><name pos:start="93:15" pos:end="93:18">next</name><operator pos:start="93:19" pos:end="93:19">)</operator><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:44">status_change_timestamp</name></name> <operator pos:start="93:46" pos:end="93:46">=</operator> <call pos:start="93:48" pos:end="93:63"><name pos:start="93:48" pos:end="93:54">INT64_C</name><argument_list pos:start="93:55" pos:end="93:63">(<argument pos:start="93:56" pos:end="93:62"><expr pos:start="93:56" pos:end="93:62"><literal type="number" pos:start="93:56" pos:end="93:62">1000000</literal></expr></argument>)</argument_list></call> <operator pos:start="93:65" pos:end="93:65">*</operator> <name pos:start="93:67" pos:end="93:77"><name pos:start="93:67" pos:end="93:68">st</name><operator pos:start="93:69" pos:end="93:69">.</operator><name pos:start="93:70" pos:end="93:77">st_ctime</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:26"><expr pos:start="97:9" pos:end="97:25"><call pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:15">av_free</name><argument_list pos:start="97:16" pos:end="97:25">(<argument pos:start="97:17" pos:end="97:24"><expr pos:start="97:17" pos:end="97:24"><name pos:start="97:17" pos:end="97:24">fullpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:43"><expr pos:start="103:5" pos:end="103:42"><name pos:start="103:5" pos:end="103:17"><operator pos:start="103:5" pos:end="103:5">(</operator><operator pos:start="103:6" pos:end="103:6">*</operator><name pos:start="103:7" pos:end="103:10">next</name><operator pos:start="103:11" pos:end="103:11">)</operator><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:17">name</name></name> <operator pos:start="103:19" pos:end="103:19">=</operator> <call pos:start="103:21" pos:end="103:42"><name pos:start="103:21" pos:end="103:29">av_strdup</name><argument_list pos:start="103:30" pos:end="103:42">(<argument pos:start="103:31" pos:end="103:41"><expr pos:start="103:31" pos:end="103:41"><name pos:start="103:31" pos:end="103:41"><name pos:start="103:31" pos:end="103:33">dir</name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:41">d_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="105:5" pos:end="108:0">return <expr pos:start="105:12" pos:end="105:12"><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>;</return>

<cpp:else pos:start="107:1" pos:end="107:5">#<cpp:directive pos:start="107:2" pos:end="107:5">else</cpp:directive></cpp:else>

    <return pos:start="109:5" pos:end="112:0">return <expr pos:start="109:12" pos:end="109:26"><call pos:start="109:12" pos:end="109:26"><name pos:start="109:12" pos:end="109:18">AVERROR</name><argument_list pos:start="109:19" pos:end="109:26">(<argument pos:start="109:20" pos:end="109:25"><expr pos:start="109:20" pos:end="109:25"><name pos:start="109:20" pos:end="109:25">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:endif pos:start="111:1" pos:end="111:6">#<cpp:directive pos:start="111:2" pos:end="111:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="111:8" pos:end="111:26">/* HAVE_DIRENT_H */</comment>

</block_content>}</block></function>
</unit>
