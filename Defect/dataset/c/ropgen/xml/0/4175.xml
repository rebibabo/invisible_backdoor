<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4175.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">cpu_gdb_write_register</name><parameter_list pos:start="1:34" pos:end="1:76">(<parameter pos:start="1:35" pos:end="1:50"><decl pos:start="1:35" pos:end="1:50"><type pos:start="1:35" pos:end="1:50"><name pos:start="1:35" pos:end="1:45">CPUPPCState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">env</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:68"><decl pos:start="1:53" pos:end="1:68"><type pos:start="1:53" pos:end="1:68"><name pos:start="1:53" pos:end="1:59">uint8_t</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:68">mem_buf</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:75"><decl pos:start="1:71" pos:end="1:75"><type pos:start="1:71" pos:end="1:75"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:75">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:13">

    <if_stmt pos:start="5:5" pos:end="87:5"><if pos:start="5:5" pos:end="13:5">if <condition pos:start="5:8" pos:end="5:15">(<expr pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:9">n</name> <operator pos:start="5:11" pos:end="5:11">&lt;</operator> <literal type="number" pos:start="5:13" pos:end="5:14">32</literal></expr>)</condition> <block pos:start="5:17" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:36">

        <comment type="block" pos:start="7:9" pos:end="7:18">/* gprs */</comment>

        <expr_stmt pos:start="9:9" pos:end="9:39"><expr pos:start="9:9" pos:end="9:38"><name pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:11">env</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:16">gpr</name><index pos:start="9:17" pos:end="9:19">[<expr pos:start="9:18" pos:end="9:18"><name pos:start="9:18" pos:end="9:18">n</name></expr>]</index></name> <operator pos:start="9:21" pos:end="9:21">=</operator> <call pos:start="9:23" pos:end="9:38"><name pos:start="9:23" pos:end="9:29">ldtul_p</name><argument_list pos:start="9:30" pos:end="9:38">(<argument pos:start="9:31" pos:end="9:37"><expr pos:start="9:31" pos:end="9:37"><name pos:start="9:31" pos:end="9:37">mem_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="11:9" pos:end="11:36">return <expr pos:start="11:16" pos:end="11:35"><sizeof pos:start="11:16" pos:end="11:35">sizeof<argument_list pos:start="11:22" pos:end="11:35">(<argument pos:start="11:23" pos:end="11:34"><expr pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:34">target_ulong</name></expr></argument>)</argument_list></sizeof></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="13:7" pos:end="25:5">else if <condition pos:start="13:15" pos:end="13:22">(<expr pos:start="13:16" pos:end="13:21"><name pos:start="13:16" pos:end="13:16">n</name> <operator pos:start="13:18" pos:end="13:18">&lt;</operator> <literal type="number" pos:start="13:20" pos:end="13:21">64</literal></expr>)</condition> <block pos:start="13:24" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:17">

        <comment type="block" pos:start="15:9" pos:end="15:18">/* fprs */</comment>

        <if_stmt pos:start="17:9" pos:end="19:21"><if pos:start="17:9" pos:end="19:21">if <condition pos:start="17:12" pos:end="17:24">(<expr pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:23">gdb_has_xml</name></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:21"><block_content pos:start="19:13" pos:end="19:21">

            <return pos:start="19:13" pos:end="19:21">return <expr pos:start="19:20" pos:end="19:20"><literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:41"><expr pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:11">env</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:16">fpr</name><index pos:start="21:17" pos:end="21:22">[<expr pos:start="21:18" pos:end="21:21"><name pos:start="21:18" pos:end="21:18">n</name><operator pos:start="21:19" pos:end="21:19">-</operator><literal type="number" pos:start="21:20" pos:end="21:21">32</literal></expr>]</index></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <call pos:start="21:26" pos:end="21:40"><name pos:start="21:26" pos:end="21:31">ldfq_p</name><argument_list pos:start="21:32" pos:end="21:40">(<argument pos:start="21:33" pos:end="21:39"><expr pos:start="21:33" pos:end="21:39"><name pos:start="21:33" pos:end="21:39">mem_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">8</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="87:5">else <block pos:start="25:12" pos:end="87:5">{<block_content pos:start="27:9" pos:end="85:9">

        <switch pos:start="27:9" pos:end="85:9">switch <condition pos:start="27:16" pos:end="27:18">(<expr pos:start="27:17" pos:end="27:17"><name pos:start="27:17" pos:end="27:17">n</name></expr>)</condition> <block pos:start="27:20" pos:end="85:9">{<block_content pos:start="29:9" pos:end="83:21">

        <case pos:start="29:9" pos:end="29:16">case <expr pos:start="29:14" pos:end="29:15"><literal type="number" pos:start="29:14" pos:end="29:15">64</literal></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:40"><expr pos:start="31:13" pos:end="31:39"><name pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:15">env</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:20">nip</name></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <call pos:start="31:24" pos:end="31:39"><name pos:start="31:24" pos:end="31:30">ldtul_p</name><argument_list pos:start="31:31" pos:end="31:39">(<argument pos:start="31:32" pos:end="31:38"><expr pos:start="31:32" pos:end="31:38"><name pos:start="31:32" pos:end="31:38">mem_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:40">return <expr pos:start="33:20" pos:end="33:39"><sizeof pos:start="33:20" pos:end="33:39">sizeof<argument_list pos:start="33:26" pos:end="33:39">(<argument pos:start="33:27" pos:end="33:38"><expr pos:start="33:27" pos:end="33:38"><name pos:start="33:27" pos:end="33:38">target_ulong</name></expr></argument>)</argument_list></sizeof></expr>;</return>

        <case pos:start="35:9" pos:end="35:16">case <expr pos:start="35:14" pos:end="35:15"><literal type="number" pos:start="35:14" pos:end="35:15">65</literal></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:49"><expr pos:start="37:13" pos:end="37:48"><call pos:start="37:13" pos:end="37:48"><name pos:start="37:13" pos:end="37:25">ppc_store_msr</name><argument_list pos:start="37:26" pos:end="37:48">(<argument pos:start="37:27" pos:end="37:29"><expr pos:start="37:27" pos:end="37:29"><name pos:start="37:27" pos:end="37:29">env</name></expr></argument>, <argument pos:start="37:32" pos:end="37:47"><expr pos:start="37:32" pos:end="37:47"><call pos:start="37:32" pos:end="37:47"><name pos:start="37:32" pos:end="37:38">ldtul_p</name><argument_list pos:start="37:39" pos:end="37:47">(<argument pos:start="37:40" pos:end="37:46"><expr pos:start="37:40" pos:end="37:46"><name pos:start="37:40" pos:end="37:46">mem_buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="39:13" pos:end="39:40">return <expr pos:start="39:20" pos:end="39:39"><sizeof pos:start="39:20" pos:end="39:39">sizeof<argument_list pos:start="39:26" pos:end="39:39">(<argument pos:start="39:27" pos:end="39:38"><expr pos:start="39:27" pos:end="39:38"><name pos:start="39:27" pos:end="39:38">target_ulong</name></expr></argument>)</argument_list></sizeof></expr>;</return>

        <case pos:start="41:9" pos:end="41:16">case <expr pos:start="41:14" pos:end="41:15"><literal type="number" pos:start="41:14" pos:end="41:15">66</literal></expr>:</case>

            <block pos:start="43:13" pos:end="55:13">{<block_content pos:start="45:17" pos:end="53:25">

                <decl_stmt pos:start="45:17" pos:end="45:45"><decl pos:start="45:17" pos:end="45:44"><type pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:24">uint32_t</name></type> <name pos:start="45:26" pos:end="45:27">cr</name> <init pos:start="45:29" pos:end="45:44">= <expr pos:start="45:31" pos:end="45:44"><call pos:start="45:31" pos:end="45:44"><name pos:start="45:31" pos:end="45:35">ldl_p</name><argument_list pos:start="45:36" pos:end="45:44">(<argument pos:start="45:37" pos:end="45:43"><expr pos:start="45:37" pos:end="45:43"><name pos:start="45:37" pos:end="45:43">mem_buf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="47:17" pos:end="47:22"><decl pos:start="47:17" pos:end="47:21"><type pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:19">int</name></type> <name pos:start="47:21" pos:end="47:21">i</name></decl>;</decl_stmt>

                <for pos:start="49:17" pos:end="51:69">for <control pos:start="49:21" pos:end="49:39">(<init pos:start="49:22" pos:end="49:27"><expr pos:start="49:22" pos:end="49:26"><name pos:start="49:22" pos:end="49:22">i</name> <operator pos:start="49:24" pos:end="49:24">=</operator> <literal type="number" pos:start="49:26" pos:end="49:26">0</literal></expr>;</init> <condition pos:start="49:29" pos:end="49:34"><expr pos:start="49:29" pos:end="49:33"><name pos:start="49:29" pos:end="49:29">i</name> <operator pos:start="49:31" pos:end="49:31">&lt;</operator> <literal type="number" pos:start="49:33" pos:end="49:33">8</literal></expr>;</condition> <incr pos:start="49:36" pos:end="49:38"><expr pos:start="49:36" pos:end="49:38"><name pos:start="49:36" pos:end="49:36">i</name><operator pos:start="49:37" pos:end="49:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="51:21" pos:end="51:69"><block_content pos:start="51:21" pos:end="51:69">

                    <expr_stmt pos:start="51:21" pos:end="51:69"><expr pos:start="51:21" pos:end="51:68"><name pos:start="51:21" pos:end="51:31"><name pos:start="51:21" pos:end="51:23">env</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:28">crf</name><index pos:start="51:29" pos:end="51:31">[<expr pos:start="51:30" pos:end="51:30"><name pos:start="51:30" pos:end="51:30">i</name></expr>]</index></name> <operator pos:start="51:33" pos:end="51:33">=</operator> <operator pos:start="51:35" pos:end="51:35">(</operator><name pos:start="51:36" pos:end="51:37">cr</name> <operator pos:start="51:39" pos:end="51:40">&gt;&gt;</operator> <operator pos:start="51:42" pos:end="51:42">(</operator><literal type="number" pos:start="51:43" pos:end="51:46">32</literal> <operator pos:start="51:46" pos:end="51:46">-</operator> <operator pos:start="51:48" pos:end="51:48">(</operator><operator pos:start="51:49" pos:end="51:49">(</operator><name pos:start="51:50" pos:end="51:50">i</name> <operator pos:start="51:52" pos:end="51:52">+</operator> <literal type="number" pos:start="51:54" pos:end="51:54">1</literal><operator pos:start="51:55" pos:end="51:55">)</operator> <operator pos:start="51:57" pos:end="51:57">*</operator> <literal type="number" pos:start="51:59" pos:end="51:59">4</literal><operator pos:start="51:60" pos:end="51:60">)</operator><operator pos:start="51:61" pos:end="51:61">)</operator><operator pos:start="51:62" pos:end="51:62">)</operator> <operator pos:start="51:64" pos:end="51:64">&amp;</operator> <literal type="number" pos:start="51:66" pos:end="51:68">0xF</literal></expr>;</expr_stmt></block_content></block></for>

                <return pos:start="53:17" pos:end="53:25">return <expr pos:start="53:24" pos:end="53:24"><literal type="number" pos:start="53:24" pos:end="53:24">4</literal></expr>;</return>

            </block_content>}</block>

        <case pos:start="57:9" pos:end="57:16">case <expr pos:start="57:14" pos:end="57:15"><literal type="number" pos:start="57:14" pos:end="57:15">67</literal></expr>:</case>

            <expr_stmt pos:start="59:13" pos:end="59:39"><expr pos:start="59:13" pos:end="59:38"><name pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:15">env</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:19">lr</name></name> <operator pos:start="59:21" pos:end="59:21">=</operator> <call pos:start="59:23" pos:end="59:38"><name pos:start="59:23" pos:end="59:29">ldtul_p</name><argument_list pos:start="59:30" pos:end="59:38">(<argument pos:start="59:31" pos:end="59:37"><expr pos:start="59:31" pos:end="59:37"><name pos:start="59:31" pos:end="59:37">mem_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:40">return <expr pos:start="61:20" pos:end="61:39"><sizeof pos:start="61:20" pos:end="61:39">sizeof<argument_list pos:start="61:26" pos:end="61:39">(<argument pos:start="61:27" pos:end="61:38"><expr pos:start="61:27" pos:end="61:38"><name pos:start="61:27" pos:end="61:38">target_ulong</name></expr></argument>)</argument_list></sizeof></expr>;</return>

        <case pos:start="63:9" pos:end="63:16">case <expr pos:start="63:14" pos:end="63:15"><literal type="number" pos:start="63:14" pos:end="63:15">68</literal></expr>:</case>

            <expr_stmt pos:start="65:13" pos:end="65:40"><expr pos:start="65:13" pos:end="65:39"><name pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:15">env</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:20">ctr</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <call pos:start="65:24" pos:end="65:39"><name pos:start="65:24" pos:end="65:30">ldtul_p</name><argument_list pos:start="65:31" pos:end="65:39">(<argument pos:start="65:32" pos:end="65:38"><expr pos:start="65:32" pos:end="65:38"><name pos:start="65:32" pos:end="65:38">mem_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="67:13" pos:end="67:40">return <expr pos:start="67:20" pos:end="67:39"><sizeof pos:start="67:20" pos:end="67:39">sizeof<argument_list pos:start="67:26" pos:end="67:39">(<argument pos:start="67:27" pos:end="67:38"><expr pos:start="67:27" pos:end="67:38"><name pos:start="67:27" pos:end="67:38">target_ulong</name></expr></argument>)</argument_list></sizeof></expr>;</return>

        <case pos:start="69:9" pos:end="69:16">case <expr pos:start="69:14" pos:end="69:15"><literal type="number" pos:start="69:14" pos:end="69:15">69</literal></expr>:</case>

            <expr_stmt pos:start="71:13" pos:end="71:40"><expr pos:start="71:13" pos:end="71:39"><name pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:15">env</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:20">xer</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <call pos:start="71:24" pos:end="71:39"><name pos:start="71:24" pos:end="71:30">ldtul_p</name><argument_list pos:start="71:31" pos:end="71:39">(<argument pos:start="71:32" pos:end="71:38"><expr pos:start="71:32" pos:end="71:38"><name pos:start="71:32" pos:end="71:38">mem_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="73:13" pos:end="73:40">return <expr pos:start="73:20" pos:end="73:39"><sizeof pos:start="73:20" pos:end="73:39">sizeof<argument_list pos:start="73:26" pos:end="73:39">(<argument pos:start="73:27" pos:end="73:38"><expr pos:start="73:27" pos:end="73:38"><name pos:start="73:27" pos:end="73:38">target_ulong</name></expr></argument>)</argument_list></sizeof></expr>;</return>

        <case pos:start="75:9" pos:end="75:16">case <expr pos:start="75:14" pos:end="75:15"><literal type="number" pos:start="75:14" pos:end="75:15">70</literal></expr>:</case>

            <comment type="block" pos:start="77:13" pos:end="77:23">/* fpscr */</comment>

            <if_stmt pos:start="79:13" pos:end="81:25"><if pos:start="79:13" pos:end="81:25">if <condition pos:start="79:16" pos:end="79:28">(<expr pos:start="79:17" pos:end="79:27"><name pos:start="79:17" pos:end="79:27">gdb_has_xml</name></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:25"><block_content pos:start="81:17" pos:end="81:25">

                <return pos:start="81:17" pos:end="81:25">return <expr pos:start="81:24" pos:end="81:24"><literal type="number" pos:start="81:24" pos:end="81:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <return pos:start="83:13" pos:end="83:21">return <expr pos:start="83:20" pos:end="83:20"><literal type="number" pos:start="83:20" pos:end="83:20">4</literal></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
