<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20274.c" pos:tabs="8"><function pos:start="1:1" pos:end="549:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">svq3_decode_mb</name><parameter_list pos:start="1:26" pos:end="1:63">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:37">H264Context</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">h</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:62"><decl pos:start="1:43" pos:end="1:62"><type pos:start="1:43" pos:end="1:62"><name pos:start="1:43" pos:end="1:50">unsigned</name> <name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:62">mb_type</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="549:1">{<block_content pos:start="5:5" pos:end="547:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">k</name></decl>, <decl pos:start="5:18" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:18">m</name></decl>, <decl pos:start="5:21" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:21" pos:end="5:23">dir</name></decl>, <decl pos:start="5:26" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:26" pos:end="5:29">mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">cbp</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">vlc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:10">int8_t</name> <modifier pos:start="11:12" pos:end="11:12">*</modifier></type><name pos:start="11:13" pos:end="11:15">top</name></decl>, <decl pos:start="11:18" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:12"><modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:22">left</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:51"><decl pos:start="13:5" pos:end="13:50"><type pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:18">MpegEncContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier><specifier pos:start="13:21" pos:end="13:25">const</specifier></type> <name pos:start="13:27" pos:end="13:27">s</name> <init pos:start="13:29" pos:end="13:50">= <expr pos:start="13:31" pos:end="13:50"><operator pos:start="13:31" pos:end="13:31">(</operator><name pos:start="13:32" pos:end="13:45">MpegEncContext</name> <operator pos:start="13:47" pos:end="13:47">*</operator><operator pos:start="13:48" pos:end="13:48">)</operator> <name pos:start="13:50" pos:end="13:50">h</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:19">mb_xy</name> <init pos:start="15:21" pos:end="15:30">= <expr pos:start="15:23" pos:end="15:30"><name pos:start="15:23" pos:end="15:30"><name pos:start="15:23" pos:end="15:23">h</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:30">mb_xy</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:56"><decl pos:start="17:5" pos:end="17:55"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:18">b_xy</name>  <init pos:start="17:21" pos:end="17:55">= <expr pos:start="17:23" pos:end="17:55"><literal type="number" pos:start="17:23" pos:end="17:23">4</literal><operator pos:start="17:24" pos:end="17:24">*</operator><name pos:start="17:25" pos:end="17:31"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:31">mb_x</name></name> <operator pos:start="17:33" pos:end="17:33">+</operator> <literal type="number" pos:start="17:35" pos:end="17:35">4</literal><operator pos:start="17:36" pos:end="17:36">*</operator><name pos:start="17:37" pos:end="17:43"><name pos:start="17:37" pos:end="17:37">s</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:43">mb_y</name></name><operator pos:start="17:44" pos:end="17:44">*</operator><name pos:start="17:45" pos:end="17:55"><name pos:start="17:45" pos:end="17:45">h</name><operator pos:start="17:46" pos:end="17:47">-&gt;</operator><name pos:start="17:48" pos:end="17:55">b_stride</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:69"><expr pos:start="21:5" pos:end="21:68"><name pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:5">h</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:28">top_samples_available</name></name>      <operator pos:start="21:35" pos:end="21:35">=</operator> <ternary pos:start="21:37" pos:end="21:68"><condition pos:start="21:37" pos:end="21:52"><expr pos:start="21:37" pos:end="21:50"><operator pos:start="21:37" pos:end="21:37">(</operator><name pos:start="21:38" pos:end="21:44"><name pos:start="21:38" pos:end="21:38">s</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:44">mb_y</name></name> <operator pos:start="21:46" pos:end="21:47">==</operator> <literal type="number" pos:start="21:49" pos:end="21:49">0</literal><operator pos:start="21:50" pos:end="21:50">)</operator></expr> ?</condition><then pos:start="21:54" pos:end="21:59"> <expr pos:start="21:54" pos:end="21:59"><literal type="number" pos:start="21:54" pos:end="21:59">0x33FF</literal></expr> </then><else pos:start="21:61" pos:end="21:68">: <expr pos:start="21:63" pos:end="21:68"><literal type="number" pos:start="21:63" pos:end="21:68">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:69"><expr pos:start="23:5" pos:end="23:68"><name pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:5">h</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:29">left_samples_available</name></name>     <operator pos:start="23:35" pos:end="23:35">=</operator> <ternary pos:start="23:37" pos:end="23:68"><condition pos:start="23:37" pos:end="23:52"><expr pos:start="23:37" pos:end="23:50"><operator pos:start="23:37" pos:end="23:37">(</operator><name pos:start="23:38" pos:end="23:44"><name pos:start="23:38" pos:end="23:38">s</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:44">mb_x</name></name> <operator pos:start="23:46" pos:end="23:47">==</operator> <literal type="number" pos:start="23:49" pos:end="23:49">0</literal><operator pos:start="23:50" pos:end="23:50">)</operator></expr> ?</condition><then pos:start="23:54" pos:end="23:59"> <expr pos:start="23:54" pos:end="23:59"><literal type="number" pos:start="23:54" pos:end="23:59">0x5F5F</literal></expr> </then><else pos:start="23:61" pos:end="23:68">: <expr pos:start="23:63" pos:end="23:68"><literal type="number" pos:start="23:63" pos:end="23:68">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:5">h</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:33">topright_samples_available</name></name> <operator pos:start="25:35" pos:end="25:35">=</operator> <literal type="number" pos:start="25:37" pos:end="25:42">0xFFFF</literal></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="369:5"><if pos:start="29:5" pos:end="65:5">if <condition pos:start="29:8" pos:end="29:21">(<expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:15">mb_type</name> <operator pos:start="29:17" pos:end="29:18">==</operator> <literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>)</condition> <block pos:start="29:23" pos:end="65:5">{<block_content pos:start="31:9" pos:end="63:9">           <comment type="block" pos:start="29:35" pos:end="29:44">/* SKIP */</comment>

        <if_stmt pos:start="31:9" pos:end="63:9"><if pos:start="31:9" pos:end="47:9">if <condition pos:start="31:12" pos:end="31:78">(<expr pos:start="31:13" pos:end="31:77"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:24">pict_type</name></name> <operator pos:start="31:26" pos:end="31:27">==</operator> <name pos:start="31:29" pos:end="31:37">FF_P_TYPE</name> <operator pos:start="31:39" pos:end="31:40">||</operator> <name pos:start="31:42" pos:end="31:71"><name pos:start="31:42" pos:end="31:42">s</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:56">next_picture</name><operator pos:start="31:57" pos:end="31:57">.</operator><name pos:start="31:58" pos:end="31:64">mb_type</name><index pos:start="31:65" pos:end="31:71">[<expr pos:start="31:66" pos:end="31:70"><name pos:start="31:66" pos:end="31:70">mb_xy</name></expr>]</index></name> <operator pos:start="31:73" pos:end="31:74">==</operator> <operator pos:start="31:76" pos:end="31:76">-</operator><literal type="number" pos:start="31:77" pos:end="31:77">1</literal></expr>)</condition> <block pos:start="31:80" pos:end="47:9">{<block_content pos:start="33:13" pos:end="45:35">

            <expr_stmt pos:start="33:13" pos:end="33:82"><expr pos:start="33:13" pos:end="33:81"><call pos:start="33:13" pos:end="33:81"><name pos:start="33:13" pos:end="33:28">svq3_mc_dir_part</name><argument_list pos:start="33:29" pos:end="33:81">(<argument pos:start="33:30" pos:end="33:30"><expr pos:start="33:30" pos:end="33:30"><name pos:start="33:30" pos:end="33:30">s</name></expr></argument>, <argument pos:start="33:33" pos:end="33:42"><expr pos:start="33:33" pos:end="33:42"><literal type="number" pos:start="33:33" pos:end="33:34">16</literal><operator pos:start="33:35" pos:end="33:35">*</operator><name pos:start="33:36" pos:end="33:42"><name pos:start="33:36" pos:end="33:36">s</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:42">mb_x</name></name></expr></argument>, <argument pos:start="33:45" pos:end="33:54"><expr pos:start="33:45" pos:end="33:54"><literal type="number" pos:start="33:45" pos:end="33:46">16</literal><operator pos:start="33:47" pos:end="33:47">*</operator><name pos:start="33:48" pos:end="33:54"><name pos:start="33:48" pos:end="33:48">s</name><operator pos:start="33:49" pos:end="33:50">-&gt;</operator><name pos:start="33:51" pos:end="33:54">mb_y</name></name></expr></argument>, <argument pos:start="33:57" pos:end="33:58"><expr pos:start="33:57" pos:end="33:58"><literal type="number" pos:start="33:57" pos:end="33:58">16</literal></expr></argument>, <argument pos:start="33:61" pos:end="33:62"><expr pos:start="33:61" pos:end="33:62"><literal type="number" pos:start="33:61" pos:end="33:62">16</literal></expr></argument>, <argument pos:start="33:65" pos:end="33:65"><expr pos:start="33:65" pos:end="33:65"><literal type="number" pos:start="33:65" pos:end="33:65">0</literal></expr></argument>, <argument pos:start="33:68" pos:end="33:68"><expr pos:start="33:68" pos:end="33:68"><literal type="number" pos:start="33:68" pos:end="33:68">0</literal></expr></argument>, <argument pos:start="33:71" pos:end="33:71"><expr pos:start="33:71" pos:end="33:71"><literal type="number" pos:start="33:71" pos:end="33:71">0</literal></expr></argument>, <argument pos:start="33:74" pos:end="33:74"><expr pos:start="33:74" pos:end="33:74"><literal type="number" pos:start="33:74" pos:end="33:74">0</literal></expr></argument>, <argument pos:start="33:77" pos:end="33:77"><expr pos:start="33:77" pos:end="33:77"><literal type="number" pos:start="33:77" pos:end="33:77">0</literal></expr></argument>, <argument pos:start="33:80" pos:end="33:80"><expr pos:start="33:80" pos:end="33:80"><literal type="number" pos:start="33:80" pos:end="33:80">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="37:13" pos:end="41:13"><if pos:start="37:13" pos:end="41:13">if <condition pos:start="37:16" pos:end="37:42">(<expr pos:start="37:17" pos:end="37:41"><name pos:start="37:17" pos:end="37:28"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:28">pict_type</name></name> <operator pos:start="37:30" pos:end="37:31">==</operator> <name pos:start="37:33" pos:end="37:41">FF_B_TYPE</name></expr>)</condition> <block pos:start="37:44" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:86">

                <expr_stmt pos:start="39:17" pos:end="39:86"><expr pos:start="39:17" pos:end="39:85"><call pos:start="39:17" pos:end="39:85"><name pos:start="39:17" pos:end="39:32">svq3_mc_dir_part</name><argument_list pos:start="39:33" pos:end="39:85">(<argument pos:start="39:34" pos:end="39:34"><expr pos:start="39:34" pos:end="39:34"><name pos:start="39:34" pos:end="39:34">s</name></expr></argument>, <argument pos:start="39:37" pos:end="39:46"><expr pos:start="39:37" pos:end="39:46"><literal type="number" pos:start="39:37" pos:end="39:38">16</literal><operator pos:start="39:39" pos:end="39:39">*</operator><name pos:start="39:40" pos:end="39:46"><name pos:start="39:40" pos:end="39:40">s</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:46">mb_x</name></name></expr></argument>, <argument pos:start="39:49" pos:end="39:58"><expr pos:start="39:49" pos:end="39:58"><literal type="number" pos:start="39:49" pos:end="39:50">16</literal><operator pos:start="39:51" pos:end="39:51">*</operator><name pos:start="39:52" pos:end="39:58"><name pos:start="39:52" pos:end="39:52">s</name><operator pos:start="39:53" pos:end="39:54">-&gt;</operator><name pos:start="39:55" pos:end="39:58">mb_y</name></name></expr></argument>, <argument pos:start="39:61" pos:end="39:62"><expr pos:start="39:61" pos:end="39:62"><literal type="number" pos:start="39:61" pos:end="39:62">16</literal></expr></argument>, <argument pos:start="39:65" pos:end="39:66"><expr pos:start="39:65" pos:end="39:66"><literal type="number" pos:start="39:65" pos:end="39:66">16</literal></expr></argument>, <argument pos:start="39:69" pos:end="39:69"><expr pos:start="39:69" pos:end="39:69"><literal type="number" pos:start="39:69" pos:end="39:69">0</literal></expr></argument>, <argument pos:start="39:72" pos:end="39:72"><expr pos:start="39:72" pos:end="39:72"><literal type="number" pos:start="39:72" pos:end="39:72">0</literal></expr></argument>, <argument pos:start="39:75" pos:end="39:75"><expr pos:start="39:75" pos:end="39:75"><literal type="number" pos:start="39:75" pos:end="39:75">0</literal></expr></argument>, <argument pos:start="39:78" pos:end="39:78"><expr pos:start="39:78" pos:end="39:78"><literal type="number" pos:start="39:78" pos:end="39:78">0</literal></expr></argument>, <argument pos:start="39:81" pos:end="39:81"><expr pos:start="39:81" pos:end="39:81"><literal type="number" pos:start="39:81" pos:end="39:81">1</literal></expr></argument>, <argument pos:start="39:84" pos:end="39:84"><expr pos:start="39:84" pos:end="39:84"><literal type="number" pos:start="39:84" pos:end="39:84">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="45:13" pos:end="45:35"><expr pos:start="45:13" pos:end="45:34"><name pos:start="45:13" pos:end="45:19">mb_type</name> <operator pos:start="45:21" pos:end="45:21">=</operator> <name pos:start="45:23" pos:end="45:34">MB_TYPE_SKIP</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="63:9">else <block pos:start="47:16" pos:end="63:9">{<block_content pos:start="49:13" pos:end="61:36">

            <expr_stmt pos:start="49:13" pos:end="49:63"><expr pos:start="49:13" pos:end="49:62"><name pos:start="49:13" pos:end="49:19">mb_type</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <call pos:start="49:23" pos:end="49:62"><name pos:start="49:23" pos:end="49:27">FFMIN</name><argument_list pos:start="49:28" pos:end="49:62">(<argument pos:start="49:29" pos:end="49:58"><expr pos:start="49:29" pos:end="49:58"><name pos:start="49:29" pos:end="49:58"><name pos:start="49:29" pos:end="49:29">s</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:43">next_picture</name><operator pos:start="49:44" pos:end="49:44">.</operator><name pos:start="49:45" pos:end="49:51">mb_type</name><index pos:start="49:52" pos:end="49:58">[<expr pos:start="49:53" pos:end="49:57"><name pos:start="49:53" pos:end="49:57">mb_xy</name></expr>]</index></name></expr></argument>, <argument pos:start="49:61" pos:end="49:61"><expr pos:start="49:61" pos:end="49:61"><literal type="number" pos:start="49:61" pos:end="49:61">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="53:26"><if pos:start="51:13" pos:end="53:26">if <condition pos:start="51:16" pos:end="51:64">(<expr pos:start="51:17" pos:end="51:63"><call pos:start="51:17" pos:end="51:59"><name pos:start="51:17" pos:end="51:27">svq3_mc_dir</name><argument_list pos:start="51:28" pos:end="51:59">(<argument pos:start="51:29" pos:end="51:29"><expr pos:start="51:29" pos:end="51:29"><name pos:start="51:29" pos:end="51:29">h</name></expr></argument>, <argument pos:start="51:32" pos:end="51:38"><expr pos:start="51:32" pos:end="51:38"><name pos:start="51:32" pos:end="51:38">mb_type</name></expr></argument>, <argument pos:start="51:41" pos:end="51:52"><expr pos:start="51:41" pos:end="51:52"><name pos:start="51:41" pos:end="51:52">PREDICT_MODE</name></expr></argument>, <argument pos:start="51:55" pos:end="51:55"><expr pos:start="51:55" pos:end="51:55"><literal type="number" pos:start="51:55" pos:end="51:55">0</literal></expr></argument>, <argument pos:start="51:58" pos:end="51:58"><expr pos:start="51:58" pos:end="51:58"><literal type="number" pos:start="51:58" pos:end="51:58">0</literal></expr></argument>)</argument_list></call> <operator pos:start="51:61" pos:end="51:61">&lt;</operator> <literal type="number" pos:start="51:63" pos:end="51:63">0</literal></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:26"><block_content pos:start="53:17" pos:end="53:26">

                <return pos:start="53:17" pos:end="53:26">return <expr pos:start="53:24" pos:end="53:25"><operator pos:start="53:24" pos:end="53:24">-</operator><literal type="number" pos:start="53:25" pos:end="53:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="55:13" pos:end="57:26"><if pos:start="55:13" pos:end="57:26">if <condition pos:start="55:16" pos:end="55:64">(<expr pos:start="55:17" pos:end="55:63"><call pos:start="55:17" pos:end="55:59"><name pos:start="55:17" pos:end="55:27">svq3_mc_dir</name><argument_list pos:start="55:28" pos:end="55:59">(<argument pos:start="55:29" pos:end="55:29"><expr pos:start="55:29" pos:end="55:29"><name pos:start="55:29" pos:end="55:29">h</name></expr></argument>, <argument pos:start="55:32" pos:end="55:38"><expr pos:start="55:32" pos:end="55:38"><name pos:start="55:32" pos:end="55:38">mb_type</name></expr></argument>, <argument pos:start="55:41" pos:end="55:52"><expr pos:start="55:41" pos:end="55:52"><name pos:start="55:41" pos:end="55:52">PREDICT_MODE</name></expr></argument>, <argument pos:start="55:55" pos:end="55:55"><expr pos:start="55:55" pos:end="55:55"><literal type="number" pos:start="55:55" pos:end="55:55">1</literal></expr></argument>, <argument pos:start="55:58" pos:end="55:58"><expr pos:start="55:58" pos:end="55:58"><literal type="number" pos:start="55:58" pos:end="55:58">1</literal></expr></argument>)</argument_list></call> <operator pos:start="55:61" pos:end="55:61">&lt;</operator> <literal type="number" pos:start="55:63" pos:end="55:63">0</literal></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:26"><block_content pos:start="57:17" pos:end="57:26">

                <return pos:start="57:17" pos:end="57:26">return <expr pos:start="57:24" pos:end="57:25"><operator pos:start="57:24" pos:end="57:24">-</operator><literal type="number" pos:start="57:25" pos:end="57:25">1</literal></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="61:13" pos:end="61:36"><expr pos:start="61:13" pos:end="61:35"><name pos:start="61:13" pos:end="61:19">mb_type</name> <operator pos:start="61:21" pos:end="61:21">=</operator> <name pos:start="61:23" pos:end="61:35">MB_TYPE_16x16</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="65:7" pos:end="215:5">else if <condition pos:start="65:15" pos:end="65:27">(<expr pos:start="65:16" pos:end="65:26"><name pos:start="65:16" pos:end="65:22">mb_type</name> <operator pos:start="65:24" pos:end="65:24">&lt;</operator> <literal type="number" pos:start="65:26" pos:end="65:26">8</literal></expr>)</condition> <block pos:start="65:29" pos:end="215:5">{<block_content pos:start="67:9" pos:end="213:32">     <comment type="block" pos:start="65:35" pos:end="65:45">/* INTER */</comment>

        <if_stmt pos:start="67:9" pos:end="79:9"><if pos:start="67:9" pos:end="71:9">if <condition pos:start="67:12" pos:end="67:71">(<expr pos:start="67:13" pos:end="67:70"><name pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:13">h</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:28">thirdpel_flag</name></name> <operator pos:start="67:30" pos:end="67:31">&amp;&amp;</operator> <name pos:start="67:33" pos:end="67:47"><name pos:start="67:33" pos:end="67:33">h</name><operator pos:start="67:34" pos:end="67:35">-&gt;</operator><name pos:start="67:36" pos:end="67:47">halfpel_flag</name></name> <operator pos:start="67:49" pos:end="67:50">==</operator> <operator pos:start="67:52" pos:end="67:52">!</operator><call pos:start="67:53" pos:end="67:70"><name pos:start="67:53" pos:end="67:61">get_bits1</name> <argument_list pos:start="67:63" pos:end="67:70">(<argument pos:start="67:64" pos:end="67:69"><expr pos:start="67:64" pos:end="67:69"><operator pos:start="67:64" pos:end="67:64">&amp;</operator><name pos:start="67:65" pos:end="67:69"><name pos:start="67:65" pos:end="67:65">s</name><operator pos:start="67:66" pos:end="67:67">-&gt;</operator><name pos:start="67:68" pos:end="67:69">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:73" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:33">

            <expr_stmt pos:start="69:13" pos:end="69:33"><expr pos:start="69:13" pos:end="69:32"><name pos:start="69:13" pos:end="69:16">mode</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:32">THIRDPEL_MODE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="71:11" pos:end="75:9">else if <condition pos:start="71:19" pos:end="71:78">(<expr pos:start="71:20" pos:end="71:77"><name pos:start="71:20" pos:end="71:34"><name pos:start="71:20" pos:end="71:20">h</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:34">halfpel_flag</name></name> <operator pos:start="71:36" pos:end="71:37">&amp;&amp;</operator> <name pos:start="71:39" pos:end="71:54"><name pos:start="71:39" pos:end="71:39">h</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:54">thirdpel_flag</name></name> <operator pos:start="71:56" pos:end="71:57">==</operator> <operator pos:start="71:59" pos:end="71:59">!</operator><call pos:start="71:60" pos:end="71:77"><name pos:start="71:60" pos:end="71:68">get_bits1</name> <argument_list pos:start="71:70" pos:end="71:77">(<argument pos:start="71:71" pos:end="71:76"><expr pos:start="71:71" pos:end="71:76"><operator pos:start="71:71" pos:end="71:71">&amp;</operator><name pos:start="71:72" pos:end="71:76"><name pos:start="71:72" pos:end="71:72">s</name><operator pos:start="71:73" pos:end="71:74">-&gt;</operator><name pos:start="71:75" pos:end="71:76">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:80" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:32">

            <expr_stmt pos:start="73:13" pos:end="73:32"><expr pos:start="73:13" pos:end="73:31"><name pos:start="73:13" pos:end="73:16">mode</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <name pos:start="73:20" pos:end="73:31">HALFPEL_MODE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="79:9">else <block pos:start="75:16" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:32">

            <expr_stmt pos:start="77:13" pos:end="77:32"><expr pos:start="77:13" pos:end="77:31"><name pos:start="77:13" pos:end="77:16">mode</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <name pos:start="77:20" pos:end="77:31">FULLPEL_MODE</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="83:9" pos:end="83:25">/* fill caches */</comment>

        <comment type="block" pos:start="85:9" pos:end="97:10">/* note ref_cache should contain here:

            ????????

            ???11111

            N??11111

            N??11111

            N??11111

        */</comment>



        <for pos:start="101:9" pos:end="163:9">for <control pos:start="101:13" pos:end="101:31">(<init pos:start="101:14" pos:end="101:19"><expr pos:start="101:14" pos:end="101:18"><name pos:start="101:14" pos:end="101:14">m</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <literal type="number" pos:start="101:18" pos:end="101:18">0</literal></expr>;</init> <condition pos:start="101:21" pos:end="101:26"><expr pos:start="101:21" pos:end="101:25"><name pos:start="101:21" pos:end="101:21">m</name> <operator pos:start="101:23" pos:end="101:23">&lt;</operator> <literal type="number" pos:start="101:25" pos:end="101:25">2</literal></expr>;</condition> <incr pos:start="101:28" pos:end="101:30"><expr pos:start="101:28" pos:end="101:30"><name pos:start="101:28" pos:end="101:28">m</name><operator pos:start="101:29" pos:end="101:30">++</operator></expr></incr>)</control> <block pos:start="101:33" pos:end="163:9">{<block_content pos:start="103:13" pos:end="161:22">

            <if_stmt pos:start="103:13" pos:end="119:13"><if pos:start="103:13" pos:end="111:13">if <condition pos:start="103:16" pos:end="103:73">(<expr pos:start="103:17" pos:end="103:72"><name pos:start="103:17" pos:end="103:23"><name pos:start="103:17" pos:end="103:17">s</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:23">mb_x</name></name> <operator pos:start="103:25" pos:end="103:25">&gt;</operator> <literal type="number" pos:start="103:27" pos:end="103:27">0</literal> <operator pos:start="103:29" pos:end="103:30">&amp;&amp;</operator> <name pos:start="103:32" pos:end="103:66"><name pos:start="103:32" pos:end="103:32">h</name><operator pos:start="103:33" pos:end="103:34">-&gt;</operator><name pos:start="103:35" pos:end="103:52">intra4x4_pred_mode</name><index pos:start="103:53" pos:end="103:63">[<expr pos:start="103:54" pos:end="103:62"><name pos:start="103:54" pos:end="103:58">mb_xy</name> <operator pos:start="103:60" pos:end="103:60">-</operator> <literal type="number" pos:start="103:62" pos:end="103:62">1</literal></expr>]</index><index pos:start="103:64" pos:end="103:66">[<expr pos:start="103:65" pos:end="103:65"><literal type="number" pos:start="103:65" pos:end="103:65">0</literal></expr>]</index></name> <operator pos:start="103:68" pos:end="103:69">!=</operator> <operator pos:start="103:71" pos:end="103:71">-</operator><literal type="number" pos:start="103:72" pos:end="103:72">1</literal></expr>)</condition> <block pos:start="103:75" pos:end="111:13">{<block_content pos:start="105:17" pos:end="109:17">

                <for pos:start="105:17" pos:end="109:17">for <control pos:start="105:21" pos:end="105:39">(<init pos:start="105:22" pos:end="105:27"><expr pos:start="105:22" pos:end="105:26"><name pos:start="105:22" pos:end="105:22">i</name> <operator pos:start="105:24" pos:end="105:24">=</operator> <literal type="number" pos:start="105:26" pos:end="105:26">0</literal></expr>;</init> <condition pos:start="105:29" pos:end="105:34"><expr pos:start="105:29" pos:end="105:33"><name pos:start="105:29" pos:end="105:29">i</name> <operator pos:start="105:31" pos:end="105:31">&lt;</operator> <literal type="number" pos:start="105:33" pos:end="105:33">4</literal></expr>;</condition> <incr pos:start="105:36" pos:end="105:38"><expr pos:start="105:36" pos:end="105:38"><name pos:start="105:36" pos:end="105:36">i</name><operator pos:start="105:37" pos:end="105:38">++</operator></expr></incr>)</control> <block pos:start="105:41" pos:end="109:17">{<block_content pos:start="107:21" pos:end="107:144">

                    <expr_stmt pos:start="107:21" pos:end="107:144"><expr pos:start="107:21" pos:end="107:143"><operator pos:start="107:21" pos:end="107:21">*</operator><operator pos:start="107:22" pos:end="107:22">(</operator><name pos:start="107:23" pos:end="107:30">uint32_t</name> <operator pos:start="107:32" pos:end="107:32">*</operator><operator pos:start="107:33" pos:end="107:33">)</operator> <name pos:start="107:35" pos:end="107:68"><name pos:start="107:35" pos:end="107:35">h</name><operator pos:start="107:36" pos:end="107:37">-&gt;</operator><name pos:start="107:38" pos:end="107:45">mv_cache</name><index pos:start="107:46" pos:end="107:48">[<expr pos:start="107:47" pos:end="107:47"><name pos:start="107:47" pos:end="107:47">m</name></expr>]</index><index pos:start="107:49" pos:end="107:68">[<expr pos:start="107:50" pos:end="107:67"><name pos:start="107:50" pos:end="107:57"><name pos:start="107:50" pos:end="107:54">scan8</name><index pos:start="107:55" pos:end="107:57">[<expr pos:start="107:56" pos:end="107:56"><literal type="number" pos:start="107:56" pos:end="107:56">0</literal></expr>]</index></name> <operator pos:start="107:59" pos:end="107:59">-</operator> <literal type="number" pos:start="107:61" pos:end="107:63">1</literal> <operator pos:start="107:63" pos:end="107:63">+</operator> <name pos:start="107:65" pos:end="107:65">i</name><operator pos:start="107:66" pos:end="107:66">*</operator><literal type="number" pos:start="107:67" pos:end="107:67">8</literal></expr>]</index></name> <operator pos:start="107:70" pos:end="107:70">=</operator> <operator pos:start="107:72" pos:end="107:72">*</operator><operator pos:start="107:73" pos:end="107:73">(</operator><name pos:start="107:74" pos:end="107:81">uint32_t</name> <operator pos:start="107:83" pos:end="107:83">*</operator><operator pos:start="107:84" pos:end="107:84">)</operator> <name pos:start="107:86" pos:end="107:143"><name pos:start="107:86" pos:end="107:86">s</name><operator pos:start="107:87" pos:end="107:88">-&gt;</operator><name pos:start="107:89" pos:end="107:103">current_picture</name><operator pos:start="107:104" pos:end="107:104">.</operator><name pos:start="107:105" pos:end="107:114">motion_val</name><index pos:start="107:115" pos:end="107:117">[<expr pos:start="107:116" pos:end="107:116"><name pos:start="107:116" pos:end="107:116">m</name></expr>]</index><index pos:start="107:118" pos:end="107:143">[<expr pos:start="107:119" pos:end="107:142"><name pos:start="107:119" pos:end="107:122">b_xy</name> <operator pos:start="107:124" pos:end="107:124">-</operator> <literal type="number" pos:start="107:126" pos:end="107:128">1</literal> <operator pos:start="107:128" pos:end="107:128">+</operator> <name pos:start="107:130" pos:end="107:130">i</name><operator pos:start="107:131" pos:end="107:131">*</operator><name pos:start="107:132" pos:end="107:142"><name pos:start="107:132" pos:end="107:132">h</name><operator pos:start="107:133" pos:end="107:134">-&gt;</operator><name pos:start="107:135" pos:end="107:142">b_stride</name></name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="111:15" pos:end="119:13">else <block pos:start="111:20" pos:end="119:13">{<block_content pos:start="113:17" pos:end="117:17">

                <for pos:start="113:17" pos:end="117:17">for <control pos:start="113:21" pos:end="113:39">(<init pos:start="113:22" pos:end="113:27"><expr pos:start="113:22" pos:end="113:26"><name pos:start="113:22" pos:end="113:22">i</name> <operator pos:start="113:24" pos:end="113:24">=</operator> <literal type="number" pos:start="113:26" pos:end="113:26">0</literal></expr>;</init> <condition pos:start="113:29" pos:end="113:34"><expr pos:start="113:29" pos:end="113:33"><name pos:start="113:29" pos:end="113:29">i</name> <operator pos:start="113:31" pos:end="113:31">&lt;</operator> <literal type="number" pos:start="113:33" pos:end="113:33">4</literal></expr>;</condition> <incr pos:start="113:36" pos:end="113:38"><expr pos:start="113:36" pos:end="113:38"><name pos:start="113:36" pos:end="113:36">i</name><operator pos:start="113:37" pos:end="113:38">++</operator></expr></incr>)</control> <block pos:start="113:41" pos:end="117:17">{<block_content pos:start="115:21" pos:end="115:73">

                    <expr_stmt pos:start="115:21" pos:end="115:73"><expr pos:start="115:21" pos:end="115:72"><operator pos:start="115:21" pos:end="115:21">*</operator><operator pos:start="115:22" pos:end="115:22">(</operator><name pos:start="115:23" pos:end="115:30">uint32_t</name> <operator pos:start="115:32" pos:end="115:32">*</operator><operator pos:start="115:33" pos:end="115:33">)</operator> <name pos:start="115:35" pos:end="115:68"><name pos:start="115:35" pos:end="115:35">h</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:45">mv_cache</name><index pos:start="115:46" pos:end="115:48">[<expr pos:start="115:47" pos:end="115:47"><name pos:start="115:47" pos:end="115:47">m</name></expr>]</index><index pos:start="115:49" pos:end="115:68">[<expr pos:start="115:50" pos:end="115:67"><name pos:start="115:50" pos:end="115:57"><name pos:start="115:50" pos:end="115:54">scan8</name><index pos:start="115:55" pos:end="115:57">[<expr pos:start="115:56" pos:end="115:56"><literal type="number" pos:start="115:56" pos:end="115:56">0</literal></expr>]</index></name> <operator pos:start="115:59" pos:end="115:59">-</operator> <literal type="number" pos:start="115:61" pos:end="115:63">1</literal> <operator pos:start="115:63" pos:end="115:63">+</operator> <name pos:start="115:65" pos:end="115:65">i</name><operator pos:start="115:66" pos:end="115:66">*</operator><literal type="number" pos:start="115:67" pos:end="115:67">8</literal></expr>]</index></name> <operator pos:start="115:70" pos:end="115:70">=</operator> <literal type="number" pos:start="115:72" pos:end="115:72">0</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="121:13" pos:end="155:84"><if pos:start="121:13" pos:end="153:13">if <condition pos:start="121:16" pos:end="121:28">(<expr pos:start="121:17" pos:end="121:27"><name pos:start="121:17" pos:end="121:23"><name pos:start="121:17" pos:end="121:17">s</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:23">mb_y</name></name> <operator pos:start="121:25" pos:end="121:25">&gt;</operator> <literal type="number" pos:start="121:27" pos:end="121:27">0</literal></expr>)</condition> <block pos:start="121:30" pos:end="153:13">{<block_content pos:start="123:17" pos:end="151:77">

                <expr_stmt pos:start="123:17" pos:end="123:130"><expr pos:start="123:17" pos:end="123:129"><call pos:start="123:17" pos:end="123:129"><name pos:start="123:17" pos:end="123:22">memcpy</name><argument_list pos:start="123:23" pos:end="123:129">(<argument pos:start="123:24" pos:end="123:53"><expr pos:start="123:24" pos:end="123:53"><name pos:start="123:24" pos:end="123:53"><name pos:start="123:24" pos:end="123:24">h</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:34">mv_cache</name><index pos:start="123:35" pos:end="123:37">[<expr pos:start="123:36" pos:end="123:36"><name pos:start="123:36" pos:end="123:36">m</name></expr>]</index><index pos:start="123:38" pos:end="123:53">[<expr pos:start="123:39" pos:end="123:52"><name pos:start="123:39" pos:end="123:46"><name pos:start="123:39" pos:end="123:43">scan8</name><index pos:start="123:44" pos:end="123:46">[<expr pos:start="123:45" pos:end="123:45"><literal type="number" pos:start="123:45" pos:end="123:45">0</literal></expr>]</index></name> <operator pos:start="123:48" pos:end="123:48">-</operator> <literal type="number" pos:start="123:50" pos:end="123:50">1</literal><operator pos:start="123:51" pos:end="123:51">*</operator><literal type="number" pos:start="123:52" pos:end="123:52">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="123:56" pos:end="123:107"><expr pos:start="123:56" pos:end="123:107"><name pos:start="123:56" pos:end="123:107"><name pos:start="123:56" pos:end="123:56">s</name><operator pos:start="123:57" pos:end="123:58">-&gt;</operator><name pos:start="123:59" pos:end="123:73">current_picture</name><operator pos:start="123:74" pos:end="123:74">.</operator><name pos:start="123:75" pos:end="123:84">motion_val</name><index pos:start="123:85" pos:end="123:87">[<expr pos:start="123:86" pos:end="123:86"><name pos:start="123:86" pos:end="123:86">m</name></expr>]</index><index pos:start="123:88" pos:end="123:107">[<expr pos:start="123:89" pos:end="123:106"><name pos:start="123:89" pos:end="123:92">b_xy</name> <operator pos:start="123:94" pos:end="123:94">-</operator> <name pos:start="123:96" pos:end="123:106"><name pos:start="123:96" pos:end="123:96">h</name><operator pos:start="123:97" pos:end="123:98">-&gt;</operator><name pos:start="123:99" pos:end="123:106">b_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="123:110" pos:end="123:128"><expr pos:start="123:110" pos:end="123:128"><literal type="number" pos:start="123:110" pos:end="123:110">4</literal><operator pos:start="123:111" pos:end="123:111">*</operator><literal type="number" pos:start="123:112" pos:end="123:112">2</literal><operator pos:start="123:113" pos:end="123:113">*</operator><sizeof pos:start="123:114" pos:end="123:128">sizeof<argument_list pos:start="123:120" pos:end="123:128">(<argument pos:start="123:121" pos:end="123:127"><expr pos:start="123:121" pos:end="123:127"><name pos:start="123:121" pos:end="123:127">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:141"><expr pos:start="125:17" pos:end="125:140"><call pos:start="125:17" pos:end="125:140"><name pos:start="125:17" pos:end="125:22">memset</name><argument_list pos:start="125:23" pos:end="125:140">(<argument pos:start="125:24" pos:end="125:55"><expr pos:start="125:24" pos:end="125:55"><operator pos:start="125:24" pos:end="125:24">&amp;</operator><name pos:start="125:25" pos:end="125:55"><name pos:start="125:25" pos:end="125:25">h</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:36">ref_cache</name><index pos:start="125:37" pos:end="125:39">[<expr pos:start="125:38" pos:end="125:38"><name pos:start="125:38" pos:end="125:38">m</name></expr>]</index><index pos:start="125:40" pos:end="125:55">[<expr pos:start="125:41" pos:end="125:54"><name pos:start="125:41" pos:end="125:48"><name pos:start="125:41" pos:end="125:45">scan8</name><index pos:start="125:46" pos:end="125:48">[<expr pos:start="125:47" pos:end="125:47"><literal type="number" pos:start="125:47" pos:end="125:47">0</literal></expr>]</index></name> <operator pos:start="125:50" pos:end="125:50">-</operator> <literal type="number" pos:start="125:52" pos:end="125:52">1</literal><operator pos:start="125:53" pos:end="125:53">*</operator><literal type="number" pos:start="125:54" pos:end="125:54">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="125:58" pos:end="125:136"><expr pos:start="125:58" pos:end="125:136"><ternary pos:start="125:58" pos:end="125:136"><condition pos:start="125:58" pos:end="125:113"><expr pos:start="125:58" pos:end="125:111"><operator pos:start="125:58" pos:end="125:58">(</operator><name pos:start="125:59" pos:end="125:104"><name pos:start="125:59" pos:end="125:59">h</name><operator pos:start="125:60" pos:end="125:61">-&gt;</operator><name pos:start="125:62" pos:end="125:79">intra4x4_pred_mode</name><index pos:start="125:80" pos:end="125:101">[<expr pos:start="125:81" pos:end="125:100"><name pos:start="125:81" pos:end="125:85">mb_xy</name> <operator pos:start="125:87" pos:end="125:87">-</operator> <name pos:start="125:89" pos:end="125:100"><name pos:start="125:89" pos:end="125:89">s</name><operator pos:start="125:90" pos:end="125:91">-&gt;</operator><name pos:start="125:92" pos:end="125:100">mb_stride</name></name></expr>]</index><index pos:start="125:102" pos:end="125:104">[<expr pos:start="125:103" pos:end="125:103"><literal type="number" pos:start="125:103" pos:end="125:103">4</literal></expr>]</index></name> <operator pos:start="125:106" pos:end="125:107">==</operator> <operator pos:start="125:109" pos:end="125:109">-</operator><literal type="number" pos:start="125:110" pos:end="125:110">1</literal><operator pos:start="125:111" pos:end="125:111">)</operator></expr> ?</condition><then pos:start="125:115" pos:end="125:132"> <expr pos:start="125:115" pos:end="125:132"><name pos:start="125:115" pos:end="125:132">PART_NOT_AVAILABLE</name></expr> </then><else pos:start="125:134" pos:end="125:136">: <expr pos:start="125:136" pos:end="125:136"><literal type="number" pos:start="125:136" pos:end="125:136">1</literal></expr></else></ternary></expr></argument>, <argument pos:start="125:139" pos:end="125:139"><expr pos:start="125:139" pos:end="125:139"><literal type="number" pos:start="125:139" pos:end="125:139">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="129:17" pos:end="141:77"><if pos:start="129:17" pos:end="139:17">if <condition pos:start="129:20" pos:end="129:48">(<expr pos:start="129:21" pos:end="129:47"><name pos:start="129:21" pos:end="129:27"><name pos:start="129:21" pos:end="129:21">s</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:27">mb_x</name></name> <operator pos:start="129:29" pos:end="129:29">&lt;</operator> <operator pos:start="129:31" pos:end="129:31">(</operator><name pos:start="129:32" pos:end="129:42"><name pos:start="129:32" pos:end="129:32">s</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:42">mb_width</name></name> <operator pos:start="129:44" pos:end="129:44">-</operator> <literal type="number" pos:start="129:46" pos:end="129:46">1</literal><operator pos:start="129:47" pos:end="129:47">)</operator></expr>)</condition> <block pos:start="129:50" pos:end="139:17">{<block_content pos:start="131:21" pos:end="137:108">

                    <expr_stmt pos:start="131:21" pos:end="131:142"><expr pos:start="131:21" pos:end="131:141"><operator pos:start="131:21" pos:end="131:21">*</operator><operator pos:start="131:22" pos:end="131:22">(</operator><name pos:start="131:23" pos:end="131:30">uint32_t</name> <operator pos:start="131:32" pos:end="131:32">*</operator><operator pos:start="131:33" pos:end="131:33">)</operator> <name pos:start="131:35" pos:end="131:68"><name pos:start="131:35" pos:end="131:35">h</name><operator pos:start="131:36" pos:end="131:37">-&gt;</operator><name pos:start="131:38" pos:end="131:45">mv_cache</name><index pos:start="131:46" pos:end="131:48">[<expr pos:start="131:47" pos:end="131:47"><name pos:start="131:47" pos:end="131:47">m</name></expr>]</index><index pos:start="131:49" pos:end="131:68">[<expr pos:start="131:50" pos:end="131:67"><name pos:start="131:50" pos:end="131:57"><name pos:start="131:50" pos:end="131:54">scan8</name><index pos:start="131:55" pos:end="131:57">[<expr pos:start="131:56" pos:end="131:56"><literal type="number" pos:start="131:56" pos:end="131:56">0</literal></expr>]</index></name> <operator pos:start="131:59" pos:end="131:59">+</operator> <literal type="number" pos:start="131:61" pos:end="131:63">4</literal> <operator pos:start="131:63" pos:end="131:63">-</operator> <literal type="number" pos:start="131:65" pos:end="131:65">1</literal><operator pos:start="131:66" pos:end="131:66">*</operator><literal type="number" pos:start="131:67" pos:end="131:67">8</literal></expr>]</index></name> <operator pos:start="131:70" pos:end="131:70">=</operator> <operator pos:start="131:72" pos:end="131:72">*</operator><operator pos:start="131:73" pos:end="131:73">(</operator><name pos:start="131:74" pos:end="131:81">uint32_t</name> <operator pos:start="131:83" pos:end="131:83">*</operator><operator pos:start="131:84" pos:end="131:84">)</operator> <name pos:start="131:86" pos:end="131:141"><name pos:start="131:86" pos:end="131:86">s</name><operator pos:start="131:87" pos:end="131:88">-&gt;</operator><name pos:start="131:89" pos:end="131:103">current_picture</name><operator pos:start="131:104" pos:end="131:104">.</operator><name pos:start="131:105" pos:end="131:114">motion_val</name><index pos:start="131:115" pos:end="131:117">[<expr pos:start="131:116" pos:end="131:116"><name pos:start="131:116" pos:end="131:116">m</name></expr>]</index><index pos:start="131:118" pos:end="131:141">[<expr pos:start="131:119" pos:end="131:140"><name pos:start="131:119" pos:end="131:122">b_xy</name> <operator pos:start="131:124" pos:end="131:124">-</operator> <name pos:start="131:126" pos:end="131:136"><name pos:start="131:126" pos:end="131:126">h</name><operator pos:start="131:127" pos:end="131:128">-&gt;</operator><name pos:start="131:129" pos:end="131:136">b_stride</name></name> <operator pos:start="131:138" pos:end="131:138">+</operator> <literal type="number" pos:start="131:140" pos:end="131:140">4</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="133:21" pos:end="137:108"><expr pos:start="133:21" pos:end="137:107"><name pos:start="133:21" pos:end="133:55"><name pos:start="133:21" pos:end="133:21">h</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:32">ref_cache</name><index pos:start="133:33" pos:end="133:35">[<expr pos:start="133:34" pos:end="133:34"><name pos:start="133:34" pos:end="133:34">m</name></expr>]</index><index pos:start="133:36" pos:end="133:55">[<expr pos:start="133:37" pos:end="133:54"><name pos:start="133:37" pos:end="133:44"><name pos:start="133:37" pos:end="133:41">scan8</name><index pos:start="133:42" pos:end="133:44">[<expr pos:start="133:43" pos:end="133:43"><literal type="number" pos:start="133:43" pos:end="133:43">0</literal></expr>]</index></name> <operator pos:start="133:46" pos:end="133:46">+</operator> <literal type="number" pos:start="133:48" pos:end="133:48">4</literal> <operator pos:start="133:50" pos:end="133:50">-</operator> <literal type="number" pos:start="133:52" pos:end="133:52">1</literal><operator pos:start="133:53" pos:end="133:53">*</operator><literal type="number" pos:start="133:54" pos:end="133:54">8</literal></expr>]</index></name> <operator pos:start="133:57" pos:end="133:57">=</operator>

                        <ternary pos:start="135:25" pos:end="137:107"><condition pos:start="135:25" pos:end="137:84"><expr pos:start="135:25" pos:end="137:82"><operator pos:start="135:25" pos:end="135:25">(</operator><name pos:start="135:26" pos:end="135:75"><name pos:start="135:26" pos:end="135:26">h</name><operator pos:start="135:27" pos:end="135:28">-&gt;</operator><name pos:start="135:29" pos:end="135:46">intra4x4_pred_mode</name><index pos:start="135:47" pos:end="135:72">[<expr pos:start="135:48" pos:end="135:71"><name pos:start="135:48" pos:end="135:52">mb_xy</name> <operator pos:start="135:54" pos:end="135:54">-</operator> <name pos:start="135:56" pos:end="135:67"><name pos:start="135:56" pos:end="135:56">s</name><operator pos:start="135:57" pos:end="135:58">-&gt;</operator><name pos:start="135:59" pos:end="135:67">mb_stride</name></name> <operator pos:start="135:69" pos:end="135:69">+</operator> <literal type="number" pos:start="135:71" pos:end="135:71">1</literal></expr>]</index><index pos:start="135:73" pos:end="135:75">[<expr pos:start="135:74" pos:end="135:74"><literal type="number" pos:start="135:74" pos:end="135:74">0</literal></expr>]</index></name> <operator pos:start="135:77" pos:end="135:78">==</operator> <operator pos:start="135:80" pos:end="135:80">-</operator><literal type="number" pos:start="135:81" pos:end="135:81">1</literal> <operator pos:start="135:83" pos:end="135:84">||</operator>

                         <name pos:start="137:26" pos:end="137:75"><name pos:start="137:26" pos:end="137:26">h</name><operator pos:start="137:27" pos:end="137:28">-&gt;</operator><name pos:start="137:29" pos:end="137:46">intra4x4_pred_mode</name><index pos:start="137:47" pos:end="137:72">[<expr pos:start="137:48" pos:end="137:67"><name pos:start="137:48" pos:end="137:52">mb_xy</name> <operator pos:start="137:54" pos:end="137:54">-</operator> <name pos:start="137:56" pos:end="137:67"><name pos:start="137:56" pos:end="137:56">s</name><operator pos:start="137:57" pos:end="137:58">-&gt;</operator><name pos:start="137:59" pos:end="137:67">mb_stride</name></name></expr>    ]</index><index pos:start="137:73" pos:end="137:75">[<expr pos:start="137:74" pos:end="137:74"><literal type="number" pos:start="137:74" pos:end="137:74">4</literal></expr>]</index></name> <operator pos:start="137:77" pos:end="137:78">==</operator> <operator pos:start="137:80" pos:end="137:80">-</operator><literal type="number" pos:start="137:81" pos:end="137:81">1</literal><operator pos:start="137:82" pos:end="137:82">)</operator></expr> ?</condition><then pos:start="137:86" pos:end="137:103"> <expr pos:start="137:86" pos:end="137:103"><name pos:start="137:86" pos:end="137:103">PART_NOT_AVAILABLE</name></expr> </then><else pos:start="137:105" pos:end="137:107">: <expr pos:start="137:107" pos:end="137:107"><literal type="number" pos:start="137:107" pos:end="137:107">1</literal></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="139:18" pos:end="141:77">else<block type="pseudo" pos:start="141:21" pos:end="141:77"><block_content pos:start="141:21" pos:end="141:77">

                    <expr_stmt pos:start="141:21" pos:end="141:77"><expr pos:start="141:21" pos:end="141:76"><name pos:start="141:21" pos:end="141:55"><name pos:start="141:21" pos:end="141:21">h</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:32">ref_cache</name><index pos:start="141:33" pos:end="141:35">[<expr pos:start="141:34" pos:end="141:34"><name pos:start="141:34" pos:end="141:34">m</name></expr>]</index><index pos:start="141:36" pos:end="141:55">[<expr pos:start="141:37" pos:end="141:54"><name pos:start="141:37" pos:end="141:44"><name pos:start="141:37" pos:end="141:41">scan8</name><index pos:start="141:42" pos:end="141:44">[<expr pos:start="141:43" pos:end="141:43"><literal type="number" pos:start="141:43" pos:end="141:43">0</literal></expr>]</index></name> <operator pos:start="141:46" pos:end="141:46">+</operator> <literal type="number" pos:start="141:48" pos:end="141:48">4</literal> <operator pos:start="141:50" pos:end="141:50">-</operator> <literal type="number" pos:start="141:52" pos:end="141:52">1</literal><operator pos:start="141:53" pos:end="141:53">*</operator><literal type="number" pos:start="141:54" pos:end="141:54">8</literal></expr>]</index></name> <operator pos:start="141:57" pos:end="141:57">=</operator> <name pos:start="141:59" pos:end="141:76">PART_NOT_AVAILABLE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <if_stmt pos:start="143:17" pos:end="151:77"><if pos:start="143:17" pos:end="149:17">if <condition pos:start="143:20" pos:end="143:32">(<expr pos:start="143:21" pos:end="143:31"><name pos:start="143:21" pos:end="143:27"><name pos:start="143:21" pos:end="143:21">s</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:27">mb_x</name></name> <operator pos:start="143:29" pos:end="143:29">&gt;</operator> <literal type="number" pos:start="143:31" pos:end="143:31">0</literal></expr>)</condition> <block pos:start="143:34" pos:end="149:17">{<block_content pos:start="145:21" pos:end="147:142">

                    <expr_stmt pos:start="145:21" pos:end="145:142"><expr pos:start="145:21" pos:end="145:141"><operator pos:start="145:21" pos:end="145:21">*</operator><operator pos:start="145:22" pos:end="145:22">(</operator><name pos:start="145:23" pos:end="145:30">uint32_t</name> <operator pos:start="145:32" pos:end="145:32">*</operator><operator pos:start="145:33" pos:end="145:33">)</operator> <name pos:start="145:35" pos:end="145:68"><name pos:start="145:35" pos:end="145:35">h</name><operator pos:start="145:36" pos:end="145:37">-&gt;</operator><name pos:start="145:38" pos:end="145:45">mv_cache</name><index pos:start="145:46" pos:end="145:48">[<expr pos:start="145:47" pos:end="145:47"><name pos:start="145:47" pos:end="145:47">m</name></expr>]</index><index pos:start="145:49" pos:end="145:68">[<expr pos:start="145:50" pos:end="145:67"><name pos:start="145:50" pos:end="145:57"><name pos:start="145:50" pos:end="145:54">scan8</name><index pos:start="145:55" pos:end="145:57">[<expr pos:start="145:56" pos:end="145:56"><literal type="number" pos:start="145:56" pos:end="145:56">0</literal></expr>]</index></name> <operator pos:start="145:59" pos:end="145:59">-</operator> <literal type="number" pos:start="145:61" pos:end="145:63">1</literal> <operator pos:start="145:63" pos:end="145:63">-</operator> <literal type="number" pos:start="145:65" pos:end="145:65">1</literal><operator pos:start="145:66" pos:end="145:66">*</operator><literal type="number" pos:start="145:67" pos:end="145:67">8</literal></expr>]</index></name> <operator pos:start="145:70" pos:end="145:70">=</operator> <operator pos:start="145:72" pos:end="145:72">*</operator><operator pos:start="145:73" pos:end="145:73">(</operator><name pos:start="145:74" pos:end="145:81">uint32_t</name> <operator pos:start="145:83" pos:end="145:83">*</operator><operator pos:start="145:84" pos:end="145:84">)</operator> <name pos:start="145:86" pos:end="145:141"><name pos:start="145:86" pos:end="145:86">s</name><operator pos:start="145:87" pos:end="145:88">-&gt;</operator><name pos:start="145:89" pos:end="145:103">current_picture</name><operator pos:start="145:104" pos:end="145:104">.</operator><name pos:start="145:105" pos:end="145:114">motion_val</name><index pos:start="145:115" pos:end="145:117">[<expr pos:start="145:116" pos:end="145:116"><name pos:start="145:116" pos:end="145:116">m</name></expr>]</index><index pos:start="145:118" pos:end="145:141">[<expr pos:start="145:119" pos:end="145:140"><name pos:start="145:119" pos:end="145:122">b_xy</name> <operator pos:start="145:124" pos:end="145:124">-</operator> <name pos:start="145:126" pos:end="145:136"><name pos:start="145:126" pos:end="145:126">h</name><operator pos:start="145:127" pos:end="145:128">-&gt;</operator><name pos:start="145:129" pos:end="145:136">b_stride</name></name> <operator pos:start="145:138" pos:end="145:138">-</operator> <literal type="number" pos:start="145:140" pos:end="145:140">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:142"><expr pos:start="147:21" pos:end="147:141"><name pos:start="147:21" pos:end="147:55"><name pos:start="147:21" pos:end="147:21">h</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:32">ref_cache</name><index pos:start="147:33" pos:end="147:35">[<expr pos:start="147:34" pos:end="147:34"><name pos:start="147:34" pos:end="147:34">m</name></expr>]</index><index pos:start="147:36" pos:end="147:55">[<expr pos:start="147:37" pos:end="147:54"><name pos:start="147:37" pos:end="147:44"><name pos:start="147:37" pos:end="147:41">scan8</name><index pos:start="147:42" pos:end="147:44">[<expr pos:start="147:43" pos:end="147:43"><literal type="number" pos:start="147:43" pos:end="147:43">0</literal></expr>]</index></name> <operator pos:start="147:46" pos:end="147:46">-</operator> <literal type="number" pos:start="147:48" pos:end="147:48">1</literal> <operator pos:start="147:50" pos:end="147:50">-</operator> <literal type="number" pos:start="147:52" pos:end="147:52">1</literal><operator pos:start="147:53" pos:end="147:53">*</operator><literal type="number" pos:start="147:54" pos:end="147:54">8</literal></expr>]</index></name> <operator pos:start="147:57" pos:end="147:57">=</operator> <ternary pos:start="147:59" pos:end="147:141"><condition pos:start="147:59" pos:end="147:118"><expr pos:start="147:59" pos:end="147:116"><operator pos:start="147:59" pos:end="147:59">(</operator><name pos:start="147:60" pos:end="147:109"><name pos:start="147:60" pos:end="147:60">h</name><operator pos:start="147:61" pos:end="147:62">-&gt;</operator><name pos:start="147:63" pos:end="147:80">intra4x4_pred_mode</name><index pos:start="147:81" pos:end="147:106">[<expr pos:start="147:82" pos:end="147:105"><name pos:start="147:82" pos:end="147:86">mb_xy</name> <operator pos:start="147:88" pos:end="147:88">-</operator> <name pos:start="147:90" pos:end="147:101"><name pos:start="147:90" pos:end="147:90">s</name><operator pos:start="147:91" pos:end="147:92">-&gt;</operator><name pos:start="147:93" pos:end="147:101">mb_stride</name></name> <operator pos:start="147:103" pos:end="147:103">-</operator> <literal type="number" pos:start="147:105" pos:end="147:105">1</literal></expr>]</index><index pos:start="147:107" pos:end="147:109">[<expr pos:start="147:108" pos:end="147:108"><literal type="number" pos:start="147:108" pos:end="147:108">3</literal></expr>]</index></name> <operator pos:start="147:111" pos:end="147:112">==</operator> <operator pos:start="147:114" pos:end="147:114">-</operator><literal type="number" pos:start="147:115" pos:end="147:115">1</literal><operator pos:start="147:116" pos:end="147:116">)</operator></expr> ?</condition><then pos:start="147:120" pos:end="147:137"> <expr pos:start="147:120" pos:end="147:137"><name pos:start="147:120" pos:end="147:137">PART_NOT_AVAILABLE</name></expr> </then><else pos:start="147:139" pos:end="147:141">: <expr pos:start="147:141" pos:end="147:141"><literal type="number" pos:start="147:141" pos:end="147:141">1</literal></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="149:18" pos:end="151:77">else<block type="pseudo" pos:start="151:21" pos:end="151:77"><block_content pos:start="151:21" pos:end="151:77">

                    <expr_stmt pos:start="151:21" pos:end="151:77"><expr pos:start="151:21" pos:end="151:76"><name pos:start="151:21" pos:end="151:55"><name pos:start="151:21" pos:end="151:21">h</name><operator pos:start="151:22" pos:end="151:23">-&gt;</operator><name pos:start="151:24" pos:end="151:32">ref_cache</name><index pos:start="151:33" pos:end="151:35">[<expr pos:start="151:34" pos:end="151:34"><name pos:start="151:34" pos:end="151:34">m</name></expr>]</index><index pos:start="151:36" pos:end="151:55">[<expr pos:start="151:37" pos:end="151:54"><name pos:start="151:37" pos:end="151:44"><name pos:start="151:37" pos:end="151:41">scan8</name><index pos:start="151:42" pos:end="151:44">[<expr pos:start="151:43" pos:end="151:43"><literal type="number" pos:start="151:43" pos:end="151:43">0</literal></expr>]</index></name> <operator pos:start="151:46" pos:end="151:46">-</operator> <literal type="number" pos:start="151:48" pos:end="151:48">1</literal> <operator pos:start="151:50" pos:end="151:50">-</operator> <literal type="number" pos:start="151:52" pos:end="151:52">1</literal><operator pos:start="151:53" pos:end="151:53">*</operator><literal type="number" pos:start="151:54" pos:end="151:54">8</literal></expr>]</index></name> <operator pos:start="151:57" pos:end="151:57">=</operator> <name pos:start="151:59" pos:end="151:76">PART_NOT_AVAILABLE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if><else pos:start="153:14" pos:end="155:84">else<block type="pseudo" pos:start="155:17" pos:end="155:84"><block_content pos:start="155:17" pos:end="155:84">

                <expr_stmt pos:start="155:17" pos:end="155:84"><expr pos:start="155:17" pos:end="155:83"><call pos:start="155:17" pos:end="155:83"><name pos:start="155:17" pos:end="155:22">memset</name><argument_list pos:start="155:23" pos:end="155:83">(<argument pos:start="155:24" pos:end="155:59"><expr pos:start="155:24" pos:end="155:59"><operator pos:start="155:24" pos:end="155:24">&amp;</operator><name pos:start="155:25" pos:end="155:59"><name pos:start="155:25" pos:end="155:25">h</name><operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:36">ref_cache</name><index pos:start="155:37" pos:end="155:39">[<expr pos:start="155:38" pos:end="155:38"><name pos:start="155:38" pos:end="155:38">m</name></expr>]</index><index pos:start="155:40" pos:end="155:59">[<expr pos:start="155:41" pos:end="155:58"><name pos:start="155:41" pos:end="155:48"><name pos:start="155:41" pos:end="155:45">scan8</name><index pos:start="155:46" pos:end="155:48">[<expr pos:start="155:47" pos:end="155:47"><literal type="number" pos:start="155:47" pos:end="155:47">0</literal></expr>]</index></name> <operator pos:start="155:50" pos:end="155:50">-</operator> <literal type="number" pos:start="155:52" pos:end="155:52">1</literal><operator pos:start="155:53" pos:end="155:53">*</operator><literal type="number" pos:start="155:54" pos:end="155:56">8</literal> <operator pos:start="155:56" pos:end="155:56">-</operator> <literal type="number" pos:start="155:58" pos:end="155:58">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="155:62" pos:end="155:79"><expr pos:start="155:62" pos:end="155:79"><name pos:start="155:62" pos:end="155:79">PART_NOT_AVAILABLE</name></expr></argument>, <argument pos:start="155:82" pos:end="155:82"><expr pos:start="155:82" pos:end="155:82"><literal type="number" pos:start="155:82" pos:end="155:82">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="159:13" pos:end="161:22"><if pos:start="159:13" pos:end="161:22">if <condition pos:start="159:16" pos:end="159:42">(<expr pos:start="159:17" pos:end="159:41"><name pos:start="159:17" pos:end="159:28"><name pos:start="159:17" pos:end="159:17">s</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:28">pict_type</name></name> <operator pos:start="159:30" pos:end="159:31">!=</operator> <name pos:start="159:33" pos:end="159:41">FF_B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="161:17" pos:end="161:22"><block_content pos:start="161:17" pos:end="161:22">

                <break pos:start="161:17" pos:end="161:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="167:9" pos:end="167:60">/* decode motion vector(s) and form prediction(s) */</comment>

        <if_stmt pos:start="169:9" pos:end="209:9"><if pos:start="169:9" pos:end="175:9">if <condition pos:start="169:12" pos:end="169:38">(<expr pos:start="169:13" pos:end="169:37"><name pos:start="169:13" pos:end="169:24"><name pos:start="169:13" pos:end="169:13">s</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:24">pict_type</name></name> <operator pos:start="169:26" pos:end="169:27">==</operator> <name pos:start="169:29" pos:end="169:37">FF_P_TYPE</name></expr>)</condition> <block pos:start="169:40" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:26">

            <if_stmt pos:start="171:13" pos:end="173:26"><if pos:start="171:13" pos:end="173:26">if <condition pos:start="171:16" pos:end="171:62">(<expr pos:start="171:17" pos:end="171:61"><call pos:start="171:17" pos:end="171:57"><name pos:start="171:17" pos:end="171:27">svq3_mc_dir</name><argument_list pos:start="171:28" pos:end="171:57">(<argument pos:start="171:29" pos:end="171:29"><expr pos:start="171:29" pos:end="171:29"><name pos:start="171:29" pos:end="171:29">h</name></expr></argument>, <argument pos:start="171:32" pos:end="171:44"><expr pos:start="171:32" pos:end="171:44"><operator pos:start="171:32" pos:end="171:32">(</operator><name pos:start="171:33" pos:end="171:39">mb_type</name> <operator pos:start="171:41" pos:end="171:41">-</operator> <literal type="number" pos:start="171:43" pos:end="171:43">1</literal><operator pos:start="171:44" pos:end="171:44">)</operator></expr></argument>, <argument pos:start="171:47" pos:end="171:50"><expr pos:start="171:47" pos:end="171:50"><name pos:start="171:47" pos:end="171:50">mode</name></expr></argument>, <argument pos:start="171:53" pos:end="171:53"><expr pos:start="171:53" pos:end="171:53"><literal type="number" pos:start="171:53" pos:end="171:53">0</literal></expr></argument>, <argument pos:start="171:56" pos:end="171:56"><expr pos:start="171:56" pos:end="171:56"><literal type="number" pos:start="171:56" pos:end="171:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="171:59" pos:end="171:59">&lt;</operator> <literal type="number" pos:start="171:61" pos:end="171:61">0</literal></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:26"><block_content pos:start="173:17" pos:end="173:26">

                <return pos:start="173:17" pos:end="173:26">return <expr pos:start="173:24" pos:end="173:25"><operator pos:start="173:24" pos:end="173:24">-</operator><literal type="number" pos:start="173:25" pos:end="173:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="175:11" pos:end="209:9">else <block pos:start="175:16" pos:end="209:9">{<block_content pos:start="177:13" pos:end="207:13">        <comment type="block" pos:start="175:25" pos:end="175:39">/* FF_B_TYPE */</comment>

            <if_stmt pos:start="177:13" pos:end="191:13"><if pos:start="177:13" pos:end="183:13">if <condition pos:start="177:16" pos:end="177:29">(<expr pos:start="177:17" pos:end="177:28"><name pos:start="177:17" pos:end="177:23">mb_type</name> <operator pos:start="177:25" pos:end="177:26">!=</operator> <literal type="number" pos:start="177:28" pos:end="177:28">2</literal></expr>)</condition> <block pos:start="177:31" pos:end="183:13">{<block_content pos:start="179:17" pos:end="181:30">

                <if_stmt pos:start="179:17" pos:end="181:30"><if pos:start="179:17" pos:end="181:30">if <condition pos:start="179:20" pos:end="179:54">(<expr pos:start="179:21" pos:end="179:53"><call pos:start="179:21" pos:end="179:49"><name pos:start="179:21" pos:end="179:31">svq3_mc_dir</name><argument_list pos:start="179:32" pos:end="179:49">(<argument pos:start="179:33" pos:end="179:33"><expr pos:start="179:33" pos:end="179:33"><name pos:start="179:33" pos:end="179:33">h</name></expr></argument>, <argument pos:start="179:36" pos:end="179:36"><expr pos:start="179:36" pos:end="179:36"><literal type="number" pos:start="179:36" pos:end="179:36">0</literal></expr></argument>, <argument pos:start="179:39" pos:end="179:42"><expr pos:start="179:39" pos:end="179:42"><name pos:start="179:39" pos:end="179:42">mode</name></expr></argument>, <argument pos:start="179:45" pos:end="179:45"><expr pos:start="179:45" pos:end="179:45"><literal type="number" pos:start="179:45" pos:end="179:45">0</literal></expr></argument>, <argument pos:start="179:48" pos:end="179:48"><expr pos:start="179:48" pos:end="179:48"><literal type="number" pos:start="179:48" pos:end="179:48">0</literal></expr></argument>)</argument_list></call> <operator pos:start="179:51" pos:end="179:51">&lt;</operator> <literal type="number" pos:start="179:53" pos:end="179:53">0</literal></expr>)</condition><block type="pseudo" pos:start="181:21" pos:end="181:30"><block_content pos:start="181:21" pos:end="181:30">

                    <return pos:start="181:21" pos:end="181:30">return <expr pos:start="181:28" pos:end="181:29"><operator pos:start="181:28" pos:end="181:28">-</operator><literal type="number" pos:start="181:29" pos:end="181:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="183:15" pos:end="191:13">else <block pos:start="183:20" pos:end="191:13">{<block_content pos:start="185:17" pos:end="189:17">

                <for pos:start="185:17" pos:end="189:17">for <control pos:start="185:21" pos:end="185:39">(<init pos:start="185:22" pos:end="185:27"><expr pos:start="185:22" pos:end="185:26"><name pos:start="185:22" pos:end="185:22">i</name> <operator pos:start="185:24" pos:end="185:24">=</operator> <literal type="number" pos:start="185:26" pos:end="185:26">0</literal></expr>;</init> <condition pos:start="185:29" pos:end="185:34"><expr pos:start="185:29" pos:end="185:33"><name pos:start="185:29" pos:end="185:29">i</name> <operator pos:start="185:31" pos:end="185:31">&lt;</operator> <literal type="number" pos:start="185:33" pos:end="185:33">4</literal></expr>;</condition> <incr pos:start="185:36" pos:end="185:38"><expr pos:start="185:36" pos:end="185:38"><name pos:start="185:36" pos:end="185:36">i</name><operator pos:start="185:37" pos:end="185:38">++</operator></expr></incr>)</control> <block pos:start="185:41" pos:end="189:17">{<block_content pos:start="187:21" pos:end="187:107">

                    <expr_stmt pos:start="187:21" pos:end="187:107"><expr pos:start="187:21" pos:end="187:106"><call pos:start="187:21" pos:end="187:106"><name pos:start="187:21" pos:end="187:26">memset</name><argument_list pos:start="187:27" pos:end="187:106">(<argument pos:start="187:28" pos:end="187:81"><expr pos:start="187:28" pos:end="187:81"><name pos:start="187:28" pos:end="187:81"><name pos:start="187:28" pos:end="187:28">s</name><operator pos:start="187:29" pos:end="187:30">-&gt;</operator><name pos:start="187:31" pos:end="187:45">current_picture</name><operator pos:start="187:46" pos:end="187:46">.</operator><name pos:start="187:47" pos:end="187:56">motion_val</name><index pos:start="187:57" pos:end="187:59">[<expr pos:start="187:58" pos:end="187:58"><literal type="number" pos:start="187:58" pos:end="187:58">0</literal></expr>]</index><index pos:start="187:60" pos:end="187:81">[<expr pos:start="187:61" pos:end="187:80"><name pos:start="187:61" pos:end="187:64">b_xy</name> <operator pos:start="187:66" pos:end="187:66">+</operator> <name pos:start="187:68" pos:end="187:68">i</name><operator pos:start="187:69" pos:end="187:69">*</operator><name pos:start="187:70" pos:end="187:80"><name pos:start="187:70" pos:end="187:70">h</name><operator pos:start="187:71" pos:end="187:72">-&gt;</operator><name pos:start="187:73" pos:end="187:80">b_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="187:84" pos:end="187:84"><expr pos:start="187:84" pos:end="187:84"><literal type="number" pos:start="187:84" pos:end="187:84">0</literal></expr></argument>, <argument pos:start="187:87" pos:end="187:105"><expr pos:start="187:87" pos:end="187:105"><literal type="number" pos:start="187:87" pos:end="187:87">4</literal><operator pos:start="187:88" pos:end="187:88">*</operator><literal type="number" pos:start="187:89" pos:end="187:89">2</literal><operator pos:start="187:90" pos:end="187:90">*</operator><sizeof pos:start="187:91" pos:end="187:105">sizeof<argument_list pos:start="187:97" pos:end="187:105">(<argument pos:start="187:98" pos:end="187:104"><expr pos:start="187:98" pos:end="187:104"><name pos:start="187:98" pos:end="187:104">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="193:13" pos:end="207:13"><if pos:start="193:13" pos:end="199:13">if <condition pos:start="193:16" pos:end="193:29">(<expr pos:start="193:17" pos:end="193:28"><name pos:start="193:17" pos:end="193:23">mb_type</name> <operator pos:start="193:25" pos:end="193:26">!=</operator> <literal type="number" pos:start="193:28" pos:end="193:28">1</literal></expr>)</condition> <block pos:start="193:31" pos:end="199:13">{<block_content pos:start="195:17" pos:end="197:30">

                <if_stmt pos:start="195:17" pos:end="197:30"><if pos:start="195:17" pos:end="197:30">if <condition pos:start="195:20" pos:end="195:67">(<expr pos:start="195:21" pos:end="195:66"><call pos:start="195:21" pos:end="195:62"><name pos:start="195:21" pos:end="195:31">svq3_mc_dir</name><argument_list pos:start="195:32" pos:end="195:62">(<argument pos:start="195:33" pos:end="195:33"><expr pos:start="195:33" pos:end="195:33"><name pos:start="195:33" pos:end="195:33">h</name></expr></argument>, <argument pos:start="195:36" pos:end="195:36"><expr pos:start="195:36" pos:end="195:36"><literal type="number" pos:start="195:36" pos:end="195:36">0</literal></expr></argument>, <argument pos:start="195:39" pos:end="195:42"><expr pos:start="195:39" pos:end="195:42"><name pos:start="195:39" pos:end="195:42">mode</name></expr></argument>, <argument pos:start="195:45" pos:end="195:45"><expr pos:start="195:45" pos:end="195:45"><literal type="number" pos:start="195:45" pos:end="195:45">1</literal></expr></argument>, <argument pos:start="195:48" pos:end="195:61"><expr pos:start="195:48" pos:end="195:61"><operator pos:start="195:48" pos:end="195:48">(</operator><name pos:start="195:49" pos:end="195:55">mb_type</name> <operator pos:start="195:57" pos:end="195:58">==</operator> <literal type="number" pos:start="195:60" pos:end="195:60">3</literal><operator pos:start="195:61" pos:end="195:61">)</operator></expr></argument>)</argument_list></call> <operator pos:start="195:64" pos:end="195:64">&lt;</operator> <literal type="number" pos:start="195:66" pos:end="195:66">0</literal></expr>)</condition><block type="pseudo" pos:start="197:21" pos:end="197:30"><block_content pos:start="197:21" pos:end="197:30">

                    <return pos:start="197:21" pos:end="197:30">return <expr pos:start="197:28" pos:end="197:29"><operator pos:start="197:28" pos:end="197:28">-</operator><literal type="number" pos:start="197:29" pos:end="197:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="199:15" pos:end="207:13">else <block pos:start="199:20" pos:end="207:13">{<block_content pos:start="201:17" pos:end="205:17">

                <for pos:start="201:17" pos:end="205:17">for <control pos:start="201:21" pos:end="201:39">(<init pos:start="201:22" pos:end="201:27"><expr pos:start="201:22" pos:end="201:26"><name pos:start="201:22" pos:end="201:22">i</name> <operator pos:start="201:24" pos:end="201:24">=</operator> <literal type="number" pos:start="201:26" pos:end="201:26">0</literal></expr>;</init> <condition pos:start="201:29" pos:end="201:34"><expr pos:start="201:29" pos:end="201:33"><name pos:start="201:29" pos:end="201:29">i</name> <operator pos:start="201:31" pos:end="201:31">&lt;</operator> <literal type="number" pos:start="201:33" pos:end="201:33">4</literal></expr>;</condition> <incr pos:start="201:36" pos:end="201:38"><expr pos:start="201:36" pos:end="201:38"><name pos:start="201:36" pos:end="201:36">i</name><operator pos:start="201:37" pos:end="201:38">++</operator></expr></incr>)</control> <block pos:start="201:41" pos:end="205:17">{<block_content pos:start="203:21" pos:end="203:107">

                    <expr_stmt pos:start="203:21" pos:end="203:107"><expr pos:start="203:21" pos:end="203:106"><call pos:start="203:21" pos:end="203:106"><name pos:start="203:21" pos:end="203:26">memset</name><argument_list pos:start="203:27" pos:end="203:106">(<argument pos:start="203:28" pos:end="203:81"><expr pos:start="203:28" pos:end="203:81"><name pos:start="203:28" pos:end="203:81"><name pos:start="203:28" pos:end="203:28">s</name><operator pos:start="203:29" pos:end="203:30">-&gt;</operator><name pos:start="203:31" pos:end="203:45">current_picture</name><operator pos:start="203:46" pos:end="203:46">.</operator><name pos:start="203:47" pos:end="203:56">motion_val</name><index pos:start="203:57" pos:end="203:59">[<expr pos:start="203:58" pos:end="203:58"><literal type="number" pos:start="203:58" pos:end="203:58">1</literal></expr>]</index><index pos:start="203:60" pos:end="203:81">[<expr pos:start="203:61" pos:end="203:80"><name pos:start="203:61" pos:end="203:64">b_xy</name> <operator pos:start="203:66" pos:end="203:66">+</operator> <name pos:start="203:68" pos:end="203:68">i</name><operator pos:start="203:69" pos:end="203:69">*</operator><name pos:start="203:70" pos:end="203:80"><name pos:start="203:70" pos:end="203:70">h</name><operator pos:start="203:71" pos:end="203:72">-&gt;</operator><name pos:start="203:73" pos:end="203:80">b_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="203:84" pos:end="203:84"><expr pos:start="203:84" pos:end="203:84"><literal type="number" pos:start="203:84" pos:end="203:84">0</literal></expr></argument>, <argument pos:start="203:87" pos:end="203:105"><expr pos:start="203:87" pos:end="203:105"><literal type="number" pos:start="203:87" pos:end="203:87">4</literal><operator pos:start="203:88" pos:end="203:88">*</operator><literal type="number" pos:start="203:89" pos:end="203:89">2</literal><operator pos:start="203:90" pos:end="203:90">*</operator><sizeof pos:start="203:91" pos:end="203:105">sizeof<argument_list pos:start="203:97" pos:end="203:105">(<argument pos:start="203:98" pos:end="203:104"><expr pos:start="203:98" pos:end="203:104"><name pos:start="203:98" pos:end="203:104">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="213:9" pos:end="213:32"><expr pos:start="213:9" pos:end="213:31"><name pos:start="213:9" pos:end="213:15">mb_type</name> <operator pos:start="213:17" pos:end="213:17">=</operator> <name pos:start="213:19" pos:end="213:31">MB_TYPE_16x16</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="215:7" pos:end="347:5">else if <condition pos:start="215:15" pos:end="215:45">(<expr pos:start="215:16" pos:end="215:44"><name pos:start="215:16" pos:end="215:22">mb_type</name> <operator pos:start="215:24" pos:end="215:25">==</operator> <literal type="number" pos:start="215:27" pos:end="215:27">8</literal> <operator pos:start="215:29" pos:end="215:30">||</operator> <name pos:start="215:32" pos:end="215:38">mb_type</name> <operator pos:start="215:40" pos:end="215:41">==</operator> <literal type="number" pos:start="215:43" pos:end="215:44">33</literal></expr>)</condition> <block pos:start="215:47" pos:end="347:5">{<block_content pos:start="217:9" pos:end="345:35">   <comment type="block" pos:start="215:51" pos:end="215:64">/* INTRA4x4 */</comment>

        <expr_stmt pos:start="217:9" pos:end="217:68"><expr pos:start="217:9" pos:end="217:67"><call pos:start="217:9" pos:end="217:67"><name pos:start="217:9" pos:end="217:14">memset</name><argument_list pos:start="217:15" pos:end="217:67">(<argument pos:start="217:16" pos:end="217:42"><expr pos:start="217:16" pos:end="217:42"><name pos:start="217:16" pos:end="217:42"><name pos:start="217:16" pos:end="217:16">h</name><operator pos:start="217:17" pos:end="217:18">-&gt;</operator><name pos:start="217:19" pos:end="217:42">intra4x4_pred_mode_cache</name></name></expr></argument>, <argument pos:start="217:45" pos:end="217:46"><expr pos:start="217:45" pos:end="217:46"><operator pos:start="217:45" pos:end="217:45">-</operator><literal type="number" pos:start="217:46" pos:end="217:46">1</literal></expr></argument>, <argument pos:start="217:49" pos:end="217:66"><expr pos:start="217:49" pos:end="217:66"><literal type="number" pos:start="217:49" pos:end="217:49">8</literal><operator pos:start="217:50" pos:end="217:50">*</operator><literal type="number" pos:start="217:51" pos:end="217:51">5</literal><operator pos:start="217:52" pos:end="217:52">*</operator><sizeof pos:start="217:53" pos:end="217:66">sizeof<argument_list pos:start="217:59" pos:end="217:66">(<argument pos:start="217:60" pos:end="217:65"><expr pos:start="217:60" pos:end="217:65"><name pos:start="217:60" pos:end="217:65">int8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="221:9" pos:end="309:9"><if pos:start="221:9" pos:end="301:9">if <condition pos:start="221:12" pos:end="221:25">(<expr pos:start="221:13" pos:end="221:24"><name pos:start="221:13" pos:end="221:19">mb_type</name> <operator pos:start="221:21" pos:end="221:22">==</operator> <literal type="number" pos:start="221:24" pos:end="221:24">8</literal></expr>)</condition> <block pos:start="221:27" pos:end="301:9">{<block_content pos:start="223:13" pos:end="299:13">

            <if_stmt pos:start="223:13" pos:end="237:13"><if pos:start="223:13" pos:end="237:13">if <condition pos:start="223:16" pos:end="223:28">(<expr pos:start="223:17" pos:end="223:27"><name pos:start="223:17" pos:end="223:23"><name pos:start="223:17" pos:end="223:17">s</name><operator pos:start="223:18" pos:end="223:19">-&gt;</operator><name pos:start="223:20" pos:end="223:23">mb_x</name></name> <operator pos:start="223:25" pos:end="223:25">&gt;</operator> <literal type="number" pos:start="223:27" pos:end="223:27">0</literal></expr>)</condition> <block pos:start="223:30" pos:end="237:13">{<block_content pos:start="225:17" pos:end="235:17">

                <for pos:start="225:17" pos:end="229:17">for <control pos:start="225:21" pos:end="225:39">(<init pos:start="225:22" pos:end="225:27"><expr pos:start="225:22" pos:end="225:26"><name pos:start="225:22" pos:end="225:22">i</name> <operator pos:start="225:24" pos:end="225:24">=</operator> <literal type="number" pos:start="225:26" pos:end="225:26">0</literal></expr>;</init> <condition pos:start="225:29" pos:end="225:34"><expr pos:start="225:29" pos:end="225:33"><name pos:start="225:29" pos:end="225:29">i</name> <operator pos:start="225:31" pos:end="225:31">&lt;</operator> <literal type="number" pos:start="225:33" pos:end="225:33">4</literal></expr>;</condition> <incr pos:start="225:36" pos:end="225:38"><expr pos:start="225:36" pos:end="225:38"><name pos:start="225:36" pos:end="225:36">i</name><operator pos:start="225:37" pos:end="225:38">++</operator></expr></incr>)</control> <block pos:start="225:41" pos:end="229:17">{<block_content pos:start="227:21" pos:end="227:106">

                    <expr_stmt pos:start="227:21" pos:end="227:106"><expr pos:start="227:21" pos:end="227:105"><name pos:start="227:21" pos:end="227:67"><name pos:start="227:21" pos:end="227:21">h</name><operator pos:start="227:22" pos:end="227:23">-&gt;</operator><name pos:start="227:24" pos:end="227:47">intra4x4_pred_mode_cache</name><index pos:start="227:48" pos:end="227:67">[<expr pos:start="227:49" pos:end="227:66"><name pos:start="227:49" pos:end="227:56"><name pos:start="227:49" pos:end="227:53">scan8</name><index pos:start="227:54" pos:end="227:56">[<expr pos:start="227:55" pos:end="227:55"><literal type="number" pos:start="227:55" pos:end="227:55">0</literal></expr>]</index></name> <operator pos:start="227:58" pos:end="227:58">-</operator> <literal type="number" pos:start="227:60" pos:end="227:60">1</literal> <operator pos:start="227:62" pos:end="227:62">+</operator> <name pos:start="227:64" pos:end="227:64">i</name><operator pos:start="227:65" pos:end="227:65">*</operator><literal type="number" pos:start="227:66" pos:end="227:66">8</literal></expr>]</index></name> <operator pos:start="227:69" pos:end="227:69">=</operator> <name pos:start="227:71" pos:end="227:105"><name pos:start="227:71" pos:end="227:71">h</name><operator pos:start="227:72" pos:end="227:73">-&gt;</operator><name pos:start="227:74" pos:end="227:91">intra4x4_pred_mode</name><index pos:start="227:92" pos:end="227:102">[<expr pos:start="227:93" pos:end="227:101"><name pos:start="227:93" pos:end="227:97">mb_xy</name> <operator pos:start="227:99" pos:end="227:99">-</operator> <literal type="number" pos:start="227:101" pos:end="227:101">1</literal></expr>]</index><index pos:start="227:103" pos:end="227:105">[<expr pos:start="227:104" pos:end="227:104"><name pos:start="227:104" pos:end="227:104">i</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="231:17" pos:end="235:17"><if pos:start="231:17" pos:end="235:17">if <condition pos:start="231:20" pos:end="231:68">(<expr pos:start="231:21" pos:end="231:67"><name pos:start="231:21" pos:end="231:61"><name pos:start="231:21" pos:end="231:21">h</name><operator pos:start="231:22" pos:end="231:23">-&gt;</operator><name pos:start="231:24" pos:end="231:47">intra4x4_pred_mode_cache</name><index pos:start="231:48" pos:end="231:61">[<expr pos:start="231:49" pos:end="231:60"><name pos:start="231:49" pos:end="231:56"><name pos:start="231:49" pos:end="231:53">scan8</name><index pos:start="231:54" pos:end="231:56">[<expr pos:start="231:55" pos:end="231:55"><literal type="number" pos:start="231:55" pos:end="231:55">0</literal></expr>]</index></name> <operator pos:start="231:58" pos:end="231:58">-</operator> <literal type="number" pos:start="231:60" pos:end="231:60">1</literal></expr>]</index></name> <operator pos:start="231:63" pos:end="231:64">==</operator> <operator pos:start="231:66" pos:end="231:66">-</operator><literal type="number" pos:start="231:67" pos:end="231:67">1</literal></expr>)</condition> <block pos:start="231:70" pos:end="235:17">{<block_content pos:start="233:21" pos:end="233:55">

                    <expr_stmt pos:start="233:21" pos:end="233:55"><expr pos:start="233:21" pos:end="233:54"><name pos:start="233:21" pos:end="233:45"><name pos:start="233:21" pos:end="233:21">h</name><operator pos:start="233:22" pos:end="233:23">-&gt;</operator><name pos:start="233:24" pos:end="233:45">left_samples_available</name></name> <operator pos:start="233:47" pos:end="233:47">=</operator> <literal type="number" pos:start="233:49" pos:end="233:54">0x5F5F</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="239:13" pos:end="257:13"><if pos:start="239:13" pos:end="257:13">if <condition pos:start="239:16" pos:end="239:28">(<expr pos:start="239:17" pos:end="239:27"><name pos:start="239:17" pos:end="239:23"><name pos:start="239:17" pos:end="239:17">s</name><operator pos:start="239:18" pos:end="239:19">-&gt;</operator><name pos:start="239:20" pos:end="239:23">mb_y</name></name> <operator pos:start="239:25" pos:end="239:25">&gt;</operator> <literal type="number" pos:start="239:27" pos:end="239:27">0</literal></expr>)</condition> <block pos:start="239:30" pos:end="257:13">{<block_content pos:start="241:17" pos:end="255:17">

                <expr_stmt pos:start="241:17" pos:end="241:100"><expr pos:start="241:17" pos:end="241:99"><name pos:start="241:17" pos:end="241:50"><name pos:start="241:17" pos:end="241:17">h</name><operator pos:start="241:18" pos:end="241:19">-&gt;</operator><name pos:start="241:20" pos:end="241:43">intra4x4_pred_mode_cache</name><index pos:start="241:44" pos:end="241:50">[<expr pos:start="241:45" pos:end="241:49"><literal type="number" pos:start="241:45" pos:end="241:45">4</literal><operator pos:start="241:46" pos:end="241:46">+</operator><literal type="number" pos:start="241:47" pos:end="241:47">8</literal><operator pos:start="241:48" pos:end="241:48">*</operator><literal type="number" pos:start="241:49" pos:end="241:49">0</literal></expr>]</index></name> <operator pos:start="241:52" pos:end="241:52">=</operator> <name pos:start="241:54" pos:end="241:99"><name pos:start="241:54" pos:end="241:54">h</name><operator pos:start="241:55" pos:end="241:56">-&gt;</operator><name pos:start="241:57" pos:end="241:74">intra4x4_pred_mode</name><index pos:start="241:75" pos:end="241:96">[<expr pos:start="241:76" pos:end="241:95"><name pos:start="241:76" pos:end="241:80">mb_xy</name> <operator pos:start="241:82" pos:end="241:82">-</operator> <name pos:start="241:84" pos:end="241:95"><name pos:start="241:84" pos:end="241:84">s</name><operator pos:start="241:85" pos:end="241:86">-&gt;</operator><name pos:start="241:87" pos:end="241:95">mb_stride</name></name></expr>]</index><index pos:start="241:97" pos:end="241:99">[<expr pos:start="241:98" pos:end="241:98"><literal type="number" pos:start="241:98" pos:end="241:98">4</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="243:17" pos:end="243:100"><expr pos:start="243:17" pos:end="243:99"><name pos:start="243:17" pos:end="243:50"><name pos:start="243:17" pos:end="243:17">h</name><operator pos:start="243:18" pos:end="243:19">-&gt;</operator><name pos:start="243:20" pos:end="243:43">intra4x4_pred_mode_cache</name><index pos:start="243:44" pos:end="243:50">[<expr pos:start="243:45" pos:end="243:49"><literal type="number" pos:start="243:45" pos:end="243:45">5</literal><operator pos:start="243:46" pos:end="243:46">+</operator><literal type="number" pos:start="243:47" pos:end="243:47">8</literal><operator pos:start="243:48" pos:end="243:48">*</operator><literal type="number" pos:start="243:49" pos:end="243:49">0</literal></expr>]</index></name> <operator pos:start="243:52" pos:end="243:52">=</operator> <name pos:start="243:54" pos:end="243:99"><name pos:start="243:54" pos:end="243:54">h</name><operator pos:start="243:55" pos:end="243:56">-&gt;</operator><name pos:start="243:57" pos:end="243:74">intra4x4_pred_mode</name><index pos:start="243:75" pos:end="243:96">[<expr pos:start="243:76" pos:end="243:95"><name pos:start="243:76" pos:end="243:80">mb_xy</name> <operator pos:start="243:82" pos:end="243:82">-</operator> <name pos:start="243:84" pos:end="243:95"><name pos:start="243:84" pos:end="243:84">s</name><operator pos:start="243:85" pos:end="243:86">-&gt;</operator><name pos:start="243:87" pos:end="243:95">mb_stride</name></name></expr>]</index><index pos:start="243:97" pos:end="243:99">[<expr pos:start="243:98" pos:end="243:98"><literal type="number" pos:start="243:98" pos:end="243:98">5</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="245:17" pos:end="245:100"><expr pos:start="245:17" pos:end="245:99"><name pos:start="245:17" pos:end="245:50"><name pos:start="245:17" pos:end="245:17">h</name><operator pos:start="245:18" pos:end="245:19">-&gt;</operator><name pos:start="245:20" pos:end="245:43">intra4x4_pred_mode_cache</name><index pos:start="245:44" pos:end="245:50">[<expr pos:start="245:45" pos:end="245:49"><literal type="number" pos:start="245:45" pos:end="245:45">6</literal><operator pos:start="245:46" pos:end="245:46">+</operator><literal type="number" pos:start="245:47" pos:end="245:47">8</literal><operator pos:start="245:48" pos:end="245:48">*</operator><literal type="number" pos:start="245:49" pos:end="245:49">0</literal></expr>]</index></name> <operator pos:start="245:52" pos:end="245:52">=</operator> <name pos:start="245:54" pos:end="245:99"><name pos:start="245:54" pos:end="245:54">h</name><operator pos:start="245:55" pos:end="245:56">-&gt;</operator><name pos:start="245:57" pos:end="245:74">intra4x4_pred_mode</name><index pos:start="245:75" pos:end="245:96">[<expr pos:start="245:76" pos:end="245:95"><name pos:start="245:76" pos:end="245:80">mb_xy</name> <operator pos:start="245:82" pos:end="245:82">-</operator> <name pos:start="245:84" pos:end="245:95"><name pos:start="245:84" pos:end="245:84">s</name><operator pos:start="245:85" pos:end="245:86">-&gt;</operator><name pos:start="245:87" pos:end="245:95">mb_stride</name></name></expr>]</index><index pos:start="245:97" pos:end="245:99">[<expr pos:start="245:98" pos:end="245:98"><literal type="number" pos:start="245:98" pos:end="245:98">6</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="247:17" pos:end="247:100"><expr pos:start="247:17" pos:end="247:99"><name pos:start="247:17" pos:end="247:50"><name pos:start="247:17" pos:end="247:17">h</name><operator pos:start="247:18" pos:end="247:19">-&gt;</operator><name pos:start="247:20" pos:end="247:43">intra4x4_pred_mode_cache</name><index pos:start="247:44" pos:end="247:50">[<expr pos:start="247:45" pos:end="247:49"><literal type="number" pos:start="247:45" pos:end="247:45">7</literal><operator pos:start="247:46" pos:end="247:46">+</operator><literal type="number" pos:start="247:47" pos:end="247:47">8</literal><operator pos:start="247:48" pos:end="247:48">*</operator><literal type="number" pos:start="247:49" pos:end="247:49">0</literal></expr>]</index></name> <operator pos:start="247:52" pos:end="247:52">=</operator> <name pos:start="247:54" pos:end="247:99"><name pos:start="247:54" pos:end="247:54">h</name><operator pos:start="247:55" pos:end="247:56">-&gt;</operator><name pos:start="247:57" pos:end="247:74">intra4x4_pred_mode</name><index pos:start="247:75" pos:end="247:96">[<expr pos:start="247:76" pos:end="247:95"><name pos:start="247:76" pos:end="247:80">mb_xy</name> <operator pos:start="247:82" pos:end="247:82">-</operator> <name pos:start="247:84" pos:end="247:95"><name pos:start="247:84" pos:end="247:84">s</name><operator pos:start="247:85" pos:end="247:86">-&gt;</operator><name pos:start="247:87" pos:end="247:95">mb_stride</name></name></expr>]</index><index pos:start="247:97" pos:end="247:99">[<expr pos:start="247:98" pos:end="247:98"><literal type="number" pos:start="247:98" pos:end="247:98">3</literal></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="251:17" pos:end="255:17"><if pos:start="251:17" pos:end="255:17">if <condition pos:start="251:20" pos:end="251:61">(<expr pos:start="251:21" pos:end="251:60"><name pos:start="251:21" pos:end="251:54"><name pos:start="251:21" pos:end="251:21">h</name><operator pos:start="251:22" pos:end="251:23">-&gt;</operator><name pos:start="251:24" pos:end="251:47">intra4x4_pred_mode_cache</name><index pos:start="251:48" pos:end="251:54">[<expr pos:start="251:49" pos:end="251:53"><literal type="number" pos:start="251:49" pos:end="251:49">4</literal><operator pos:start="251:50" pos:end="251:50">+</operator><literal type="number" pos:start="251:51" pos:end="251:51">8</literal><operator pos:start="251:52" pos:end="251:52">*</operator><literal type="number" pos:start="251:53" pos:end="251:53">0</literal></expr>]</index></name> <operator pos:start="251:56" pos:end="251:57">==</operator> <operator pos:start="251:59" pos:end="251:59">-</operator><literal type="number" pos:start="251:60" pos:end="251:60">1</literal></expr>)</condition> <block pos:start="251:63" pos:end="255:17">{<block_content pos:start="253:21" pos:end="253:54">

                    <expr_stmt pos:start="253:21" pos:end="253:54"><expr pos:start="253:21" pos:end="253:53"><name pos:start="253:21" pos:end="253:44"><name pos:start="253:21" pos:end="253:21">h</name><operator pos:start="253:22" pos:end="253:23">-&gt;</operator><name pos:start="253:24" pos:end="253:44">top_samples_available</name></name> <operator pos:start="253:46" pos:end="253:46">=</operator> <literal type="number" pos:start="253:48" pos:end="253:53">0x33FF</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="261:13" pos:end="261:57">/* decode prediction codes for luma blocks */</comment>

            <for pos:start="263:13" pos:end="299:13">for <control pos:start="263:17" pos:end="263:37">(<init pos:start="263:18" pos:end="263:23"><expr pos:start="263:18" pos:end="263:22"><name pos:start="263:18" pos:end="263:18">i</name> <operator pos:start="263:20" pos:end="263:20">=</operator> <literal type="number" pos:start="263:22" pos:end="263:22">0</literal></expr>;</init> <condition pos:start="263:25" pos:end="263:31"><expr pos:start="263:25" pos:end="263:30"><name pos:start="263:25" pos:end="263:25">i</name> <operator pos:start="263:27" pos:end="263:27">&lt;</operator> <literal type="number" pos:start="263:29" pos:end="263:30">16</literal></expr>;</condition> <incr pos:start="263:33" pos:end="263:36"><expr pos:start="263:33" pos:end="263:36"><name pos:start="263:33" pos:end="263:33">i</name><operator pos:start="263:34" pos:end="263:35">+=</operator><literal type="number" pos:start="263:36" pos:end="263:36">2</literal></expr></incr>)</control> <block pos:start="263:39" pos:end="299:13">{<block_content pos:start="265:17" pos:end="297:17">

                <expr_stmt pos:start="265:17" pos:end="265:49"><expr pos:start="265:17" pos:end="265:48"><name pos:start="265:17" pos:end="265:19">vlc</name> <operator pos:start="265:21" pos:end="265:21">=</operator> <call pos:start="265:23" pos:end="265:48"><name pos:start="265:23" pos:end="265:40">svq3_get_ue_golomb</name><argument_list pos:start="265:41" pos:end="265:48">(<argument pos:start="265:42" pos:end="265:47"><expr pos:start="265:42" pos:end="265:47"><operator pos:start="265:42" pos:end="265:42">&amp;</operator><name pos:start="265:43" pos:end="265:47"><name pos:start="265:43" pos:end="265:43">s</name><operator pos:start="265:44" pos:end="265:45">-&gt;</operator><name pos:start="265:46" pos:end="265:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="269:17" pos:end="275:17"><if pos:start="269:17" pos:end="275:17">if <condition pos:start="269:20" pos:end="269:30">(<expr pos:start="269:21" pos:end="269:29"><name pos:start="269:21" pos:end="269:23">vlc</name> <operator pos:start="269:25" pos:end="269:26">&gt;=</operator> <literal type="number" pos:start="269:28" pos:end="269:29">25</literal></expr>)</condition><block pos:start="269:31" pos:end="275:17">{<block_content pos:start="271:21" pos:end="273:30">

                    <expr_stmt pos:start="271:21" pos:end="271:82"><expr pos:start="271:21" pos:end="271:81"><call pos:start="271:21" pos:end="271:81"><name pos:start="271:21" pos:end="271:26">av_log</name><argument_list pos:start="271:27" pos:end="271:81">(<argument pos:start="271:28" pos:end="271:37"><expr pos:start="271:28" pos:end="271:37"><name pos:start="271:28" pos:end="271:37"><name pos:start="271:28" pos:end="271:28">h</name><operator pos:start="271:29" pos:end="271:30">-&gt;</operator><name pos:start="271:31" pos:end="271:31">s</name><operator pos:start="271:32" pos:end="271:32">.</operator><name pos:start="271:33" pos:end="271:37">avctx</name></name></expr></argument>, <argument pos:start="271:40" pos:end="271:51"><expr pos:start="271:40" pos:end="271:51"><name pos:start="271:40" pos:end="271:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="271:54" pos:end="271:75"><expr pos:start="271:54" pos:end="271:75"><literal type="string" pos:start="271:54" pos:end="271:75">"luma prediction:%d\n"</literal></expr></argument>, <argument pos:start="271:78" pos:end="271:80"><expr pos:start="271:78" pos:end="271:80"><name pos:start="271:78" pos:end="271:80">vlc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="273:21" pos:end="273:30">return <expr pos:start="273:28" pos:end="273:29"><operator pos:start="273:28" pos:end="273:28">-</operator><literal type="number" pos:start="273:29" pos:end="273:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="279:17" pos:end="279:69"><expr pos:start="279:17" pos:end="279:68"><name pos:start="279:17" pos:end="279:20">left</name>    <operator pos:start="279:25" pos:end="279:25">=</operator> <operator pos:start="279:27" pos:end="279:27">&amp;</operator><name pos:start="279:28" pos:end="279:68"><name pos:start="279:28" pos:end="279:28">h</name><operator pos:start="279:29" pos:end="279:30">-&gt;</operator><name pos:start="279:31" pos:end="279:54">intra4x4_pred_mode_cache</name><index pos:start="279:55" pos:end="279:68">[<expr pos:start="279:56" pos:end="279:67"><name pos:start="279:56" pos:end="279:63"><name pos:start="279:56" pos:end="279:60">scan8</name><index pos:start="279:61" pos:end="279:63">[<expr pos:start="279:62" pos:end="279:62"><name pos:start="279:62" pos:end="279:62">i</name></expr>]</index></name> <operator pos:start="279:65" pos:end="279:65">-</operator> <literal type="number" pos:start="279:67" pos:end="279:67">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="281:17" pos:end="281:69"><expr pos:start="281:17" pos:end="281:68"><name pos:start="281:17" pos:end="281:19">top</name>     <operator pos:start="281:25" pos:end="281:25">=</operator> <operator pos:start="281:27" pos:end="281:27">&amp;</operator><name pos:start="281:28" pos:end="281:68"><name pos:start="281:28" pos:end="281:28">h</name><operator pos:start="281:29" pos:end="281:30">-&gt;</operator><name pos:start="281:31" pos:end="281:54">intra4x4_pred_mode_cache</name><index pos:start="281:55" pos:end="281:68">[<expr pos:start="281:56" pos:end="281:67"><name pos:start="281:56" pos:end="281:63"><name pos:start="281:56" pos:end="281:60">scan8</name><index pos:start="281:61" pos:end="281:63">[<expr pos:start="281:62" pos:end="281:62"><name pos:start="281:62" pos:end="281:62">i</name></expr>]</index></name> <operator pos:start="281:65" pos:end="281:65">-</operator> <literal type="number" pos:start="281:67" pos:end="281:67">8</literal></expr>]</index></name></expr>;</expr_stmt>



                <expr_stmt pos:start="285:17" pos:end="285:84"><expr pos:start="285:17" pos:end="285:83"><name pos:start="285:17" pos:end="285:23"><name pos:start="285:17" pos:end="285:20">left</name><index pos:start="285:21" pos:end="285:23">[<expr pos:start="285:22" pos:end="285:22"><literal type="number" pos:start="285:22" pos:end="285:22">1</literal></expr>]</index></name> <operator pos:start="285:25" pos:end="285:25">=</operator> <name pos:start="285:27" pos:end="285:83"><name pos:start="285:27" pos:end="285:37">svq3_pred_1</name><index pos:start="285:38" pos:end="285:49">[<expr pos:start="285:39" pos:end="285:48"><name pos:start="285:39" pos:end="285:44"><name pos:start="285:39" pos:end="285:41">top</name><index pos:start="285:42" pos:end="285:44">[<expr pos:start="285:43" pos:end="285:43"><literal type="number" pos:start="285:43" pos:end="285:43">0</literal></expr>]</index></name> <operator pos:start="285:46" pos:end="285:46">+</operator> <literal type="number" pos:start="285:48" pos:end="285:48">1</literal></expr>]</index><index pos:start="285:50" pos:end="285:62">[<expr pos:start="285:51" pos:end="285:61"><name pos:start="285:51" pos:end="285:57"><name pos:start="285:51" pos:end="285:54">left</name><index pos:start="285:55" pos:end="285:57">[<expr pos:start="285:56" pos:end="285:56"><literal type="number" pos:start="285:56" pos:end="285:56">0</literal></expr>]</index></name> <operator pos:start="285:59" pos:end="285:59">+</operator> <literal type="number" pos:start="285:61" pos:end="285:61">1</literal></expr>]</index><index pos:start="285:63" pos:end="285:83">[<expr pos:start="285:64" pos:end="285:82"><name pos:start="285:64" pos:end="285:82"><name pos:start="285:64" pos:end="285:74">svq3_pred_0</name><index pos:start="285:75" pos:end="285:79">[<expr pos:start="285:76" pos:end="285:78"><name pos:start="285:76" pos:end="285:78">vlc</name></expr>]</index><index pos:start="285:80" pos:end="285:82">[<expr pos:start="285:81" pos:end="285:81"><literal type="number" pos:start="285:81" pos:end="285:81">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:84"><expr pos:start="287:17" pos:end="287:83"><name pos:start="287:17" pos:end="287:23"><name pos:start="287:17" pos:end="287:20">left</name><index pos:start="287:21" pos:end="287:23">[<expr pos:start="287:22" pos:end="287:22"><literal type="number" pos:start="287:22" pos:end="287:22">2</literal></expr>]</index></name> <operator pos:start="287:25" pos:end="287:25">=</operator> <name pos:start="287:27" pos:end="287:83"><name pos:start="287:27" pos:end="287:37">svq3_pred_1</name><index pos:start="287:38" pos:end="287:49">[<expr pos:start="287:39" pos:end="287:48"><name pos:start="287:39" pos:end="287:44"><name pos:start="287:39" pos:end="287:41">top</name><index pos:start="287:42" pos:end="287:44">[<expr pos:start="287:43" pos:end="287:43"><literal type="number" pos:start="287:43" pos:end="287:43">1</literal></expr>]</index></name> <operator pos:start="287:46" pos:end="287:46">+</operator> <literal type="number" pos:start="287:48" pos:end="287:48">1</literal></expr>]</index><index pos:start="287:50" pos:end="287:62">[<expr pos:start="287:51" pos:end="287:61"><name pos:start="287:51" pos:end="287:57"><name pos:start="287:51" pos:end="287:54">left</name><index pos:start="287:55" pos:end="287:57">[<expr pos:start="287:56" pos:end="287:56"><literal type="number" pos:start="287:56" pos:end="287:56">1</literal></expr>]</index></name> <operator pos:start="287:59" pos:end="287:59">+</operator> <literal type="number" pos:start="287:61" pos:end="287:61">1</literal></expr>]</index><index pos:start="287:63" pos:end="287:83">[<expr pos:start="287:64" pos:end="287:82"><name pos:start="287:64" pos:end="287:82"><name pos:start="287:64" pos:end="287:74">svq3_pred_0</name><index pos:start="287:75" pos:end="287:79">[<expr pos:start="287:76" pos:end="287:78"><name pos:start="287:76" pos:end="287:78">vlc</name></expr>]</index><index pos:start="287:80" pos:end="287:82">[<expr pos:start="287:81" pos:end="287:81"><literal type="number" pos:start="287:81" pos:end="287:81">1</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="291:17" pos:end="297:17"><if pos:start="291:17" pos:end="297:17">if <condition pos:start="291:20" pos:end="291:51">(<expr pos:start="291:21" pos:end="291:50"><name pos:start="291:21" pos:end="291:27"><name pos:start="291:21" pos:end="291:24">left</name><index pos:start="291:25" pos:end="291:27">[<expr pos:start="291:26" pos:end="291:26"><literal type="number" pos:start="291:26" pos:end="291:26">1</literal></expr>]</index></name> <operator pos:start="291:29" pos:end="291:30">==</operator> <operator pos:start="291:32" pos:end="291:32">-</operator><literal type="number" pos:start="291:33" pos:end="291:33">1</literal> <operator pos:start="291:35" pos:end="291:36">||</operator> <name pos:start="291:38" pos:end="291:44"><name pos:start="291:38" pos:end="291:41">left</name><index pos:start="291:42" pos:end="291:44">[<expr pos:start="291:43" pos:end="291:43"><literal type="number" pos:start="291:43" pos:end="291:43">2</literal></expr>]</index></name> <operator pos:start="291:46" pos:end="291:47">==</operator> <operator pos:start="291:49" pos:end="291:49">-</operator><literal type="number" pos:start="291:50" pos:end="291:50">1</literal></expr>)</condition><block pos:start="291:52" pos:end="297:17">{<block_content pos:start="293:21" pos:end="295:30">

                    <expr_stmt pos:start="293:21" pos:end="293:75"><expr pos:start="293:21" pos:end="293:74"><call pos:start="293:21" pos:end="293:74"><name pos:start="293:21" pos:end="293:26">av_log</name><argument_list pos:start="293:27" pos:end="293:74">(<argument pos:start="293:28" pos:end="293:37"><expr pos:start="293:28" pos:end="293:37"><name pos:start="293:28" pos:end="293:37"><name pos:start="293:28" pos:end="293:28">h</name><operator pos:start="293:29" pos:end="293:30">-&gt;</operator><name pos:start="293:31" pos:end="293:31">s</name><operator pos:start="293:32" pos:end="293:32">.</operator><name pos:start="293:33" pos:end="293:37">avctx</name></name></expr></argument>, <argument pos:start="293:40" pos:end="293:51"><expr pos:start="293:40" pos:end="293:51"><name pos:start="293:40" pos:end="293:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="293:54" pos:end="293:73"><expr pos:start="293:54" pos:end="293:73"><literal type="string" pos:start="293:54" pos:end="293:73">"weird prediction\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="295:21" pos:end="295:30">return <expr pos:start="295:28" pos:end="295:29"><operator pos:start="295:28" pos:end="295:28">-</operator><literal type="number" pos:start="295:29" pos:end="295:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="301:11" pos:end="309:9">else <block pos:start="301:16" pos:end="309:9">{<block_content pos:start="303:13" pos:end="307:13">    <comment type="block" pos:start="301:21" pos:end="301:63">/* mb_type == 33, DC_128_PRED block type */</comment>

            <for pos:start="303:13" pos:end="307:13">for <control pos:start="303:17" pos:end="303:35">(<init pos:start="303:18" pos:end="303:23"><expr pos:start="303:18" pos:end="303:22"><name pos:start="303:18" pos:end="303:18">i</name> <operator pos:start="303:20" pos:end="303:20">=</operator> <literal type="number" pos:start="303:22" pos:end="303:22">0</literal></expr>;</init> <condition pos:start="303:25" pos:end="303:30"><expr pos:start="303:25" pos:end="303:29"><name pos:start="303:25" pos:end="303:25">i</name> <operator pos:start="303:27" pos:end="303:27">&lt;</operator> <literal type="number" pos:start="303:29" pos:end="303:29">4</literal></expr>;</condition> <incr pos:start="303:32" pos:end="303:34"><expr pos:start="303:32" pos:end="303:34"><name pos:start="303:32" pos:end="303:32">i</name><operator pos:start="303:33" pos:end="303:34">++</operator></expr></incr>)</control> <block pos:start="303:37" pos:end="307:13">{<block_content pos:start="305:17" pos:end="305:81">

                <expr_stmt pos:start="305:17" pos:end="305:81"><expr pos:start="305:17" pos:end="305:80"><call pos:start="305:17" pos:end="305:80"><name pos:start="305:17" pos:end="305:22">memset</name><argument_list pos:start="305:23" pos:end="305:80">(<argument pos:start="305:24" pos:end="305:67"><expr pos:start="305:24" pos:end="305:67"><operator pos:start="305:24" pos:end="305:24">&amp;</operator><name pos:start="305:25" pos:end="305:67"><name pos:start="305:25" pos:end="305:25">h</name><operator pos:start="305:26" pos:end="305:27">-&gt;</operator><name pos:start="305:28" pos:end="305:51">intra4x4_pred_mode_cache</name><index pos:start="305:52" pos:end="305:67">[<expr pos:start="305:53" pos:end="305:66"><name pos:start="305:53" pos:end="305:60"><name pos:start="305:53" pos:end="305:57">scan8</name><index pos:start="305:58" pos:end="305:60">[<expr pos:start="305:59" pos:end="305:59"><literal type="number" pos:start="305:59" pos:end="305:59">0</literal></expr>]</index></name> <operator pos:start="305:62" pos:end="305:62">+</operator> <literal type="number" pos:start="305:64" pos:end="305:64">8</literal><operator pos:start="305:65" pos:end="305:65">*</operator><name pos:start="305:66" pos:end="305:66">i</name></expr>]</index></name></expr></argument>, <argument pos:start="305:70" pos:end="305:76"><expr pos:start="305:70" pos:end="305:76"><name pos:start="305:70" pos:end="305:76">DC_PRED</name></expr></argument>, <argument pos:start="305:79" pos:end="305:79"><expr pos:start="305:79" pos:end="305:79"><literal type="number" pos:start="305:79" pos:end="305:79">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="313:9" pos:end="313:46"><expr pos:start="313:9" pos:end="313:45"><call pos:start="313:9" pos:end="313:45"><name pos:start="313:9" pos:end="313:42">ff_h264_write_back_intra_pred_mode</name><argument_list pos:start="313:43" pos:end="313:45">(<argument pos:start="313:44" pos:end="313:44"><expr pos:start="313:44" pos:end="313:44"><name pos:start="313:44" pos:end="313:44">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="317:9" pos:end="341:9"><if pos:start="317:9" pos:end="327:9">if <condition pos:start="317:12" pos:end="317:25">(<expr pos:start="317:13" pos:end="317:24"><name pos:start="317:13" pos:end="317:19">mb_type</name> <operator pos:start="317:21" pos:end="317:22">==</operator> <literal type="number" pos:start="317:24" pos:end="317:24">8</literal></expr>)</condition> <block pos:start="317:27" pos:end="327:9">{<block_content pos:start="319:13" pos:end="325:73">

            <expr_stmt pos:start="319:13" pos:end="319:48"><expr pos:start="319:13" pos:end="319:47"><call pos:start="319:13" pos:end="319:47"><name pos:start="319:13" pos:end="319:44">ff_h264_check_intra4x4_pred_mode</name><argument_list pos:start="319:45" pos:end="319:47">(<argument pos:start="319:46" pos:end="319:46"><expr pos:start="319:46" pos:end="319:46"><name pos:start="319:46" pos:end="319:46">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="323:13" pos:end="323:73"><expr pos:start="323:13" pos:end="323:72"><name pos:start="323:13" pos:end="323:36"><name pos:start="323:13" pos:end="323:13">h</name><operator pos:start="323:14" pos:end="323:15">-&gt;</operator><name pos:start="323:16" pos:end="323:36">top_samples_available</name></name>  <operator pos:start="323:39" pos:end="323:39">=</operator> <ternary pos:start="323:41" pos:end="323:72"><condition pos:start="323:41" pos:end="323:56"><expr pos:start="323:41" pos:end="323:54"><operator pos:start="323:41" pos:end="323:41">(</operator><name pos:start="323:42" pos:end="323:48"><name pos:start="323:42" pos:end="323:42">s</name><operator pos:start="323:43" pos:end="323:44">-&gt;</operator><name pos:start="323:45" pos:end="323:48">mb_y</name></name> <operator pos:start="323:50" pos:end="323:51">==</operator> <literal type="number" pos:start="323:53" pos:end="323:53">0</literal><operator pos:start="323:54" pos:end="323:54">)</operator></expr> ?</condition><then pos:start="323:58" pos:end="323:63"> <expr pos:start="323:58" pos:end="323:63"><literal type="number" pos:start="323:58" pos:end="323:63">0x33FF</literal></expr> </then><else pos:start="323:65" pos:end="323:72">: <expr pos:start="323:67" pos:end="323:72"><literal type="number" pos:start="323:67" pos:end="323:72">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="325:13" pos:end="325:73"><expr pos:start="325:13" pos:end="325:72"><name pos:start="325:13" pos:end="325:37"><name pos:start="325:13" pos:end="325:13">h</name><operator pos:start="325:14" pos:end="325:15">-&gt;</operator><name pos:start="325:16" pos:end="325:37">left_samples_available</name></name> <operator pos:start="325:39" pos:end="325:39">=</operator> <ternary pos:start="325:41" pos:end="325:72"><condition pos:start="325:41" pos:end="325:56"><expr pos:start="325:41" pos:end="325:54"><operator pos:start="325:41" pos:end="325:41">(</operator><name pos:start="325:42" pos:end="325:48"><name pos:start="325:42" pos:end="325:42">s</name><operator pos:start="325:43" pos:end="325:44">-&gt;</operator><name pos:start="325:45" pos:end="325:48">mb_x</name></name> <operator pos:start="325:50" pos:end="325:51">==</operator> <literal type="number" pos:start="325:53" pos:end="325:53">0</literal><operator pos:start="325:54" pos:end="325:54">)</operator></expr> ?</condition><then pos:start="325:58" pos:end="325:63"> <expr pos:start="325:58" pos:end="325:63"><literal type="number" pos:start="325:58" pos:end="325:63">0x5F5F</literal></expr> </then><else pos:start="325:65" pos:end="325:72">: <expr pos:start="325:67" pos:end="325:72"><literal type="number" pos:start="325:67" pos:end="325:72">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="327:11" pos:end="341:9">else <block pos:start="327:16" pos:end="341:9">{<block_content pos:start="329:13" pos:end="339:47">

            <for pos:start="329:13" pos:end="333:13">for <control pos:start="329:17" pos:end="329:35">(<init pos:start="329:18" pos:end="329:23"><expr pos:start="329:18" pos:end="329:22"><name pos:start="329:18" pos:end="329:18">i</name> <operator pos:start="329:20" pos:end="329:20">=</operator> <literal type="number" pos:start="329:22" pos:end="329:22">0</literal></expr>;</init> <condition pos:start="329:25" pos:end="329:30"><expr pos:start="329:25" pos:end="329:29"><name pos:start="329:25" pos:end="329:25">i</name> <operator pos:start="329:27" pos:end="329:27">&lt;</operator> <literal type="number" pos:start="329:29" pos:end="329:29">4</literal></expr>;</condition> <incr pos:start="329:32" pos:end="329:34"><expr pos:start="329:32" pos:end="329:34"><name pos:start="329:32" pos:end="329:32">i</name><operator pos:start="329:33" pos:end="329:34">++</operator></expr></incr>)</control> <block pos:start="329:37" pos:end="333:13">{<block_content pos:start="331:17" pos:end="331:85">

                <expr_stmt pos:start="331:17" pos:end="331:85"><expr pos:start="331:17" pos:end="331:84"><call pos:start="331:17" pos:end="331:84"><name pos:start="331:17" pos:end="331:22">memset</name><argument_list pos:start="331:23" pos:end="331:84">(<argument pos:start="331:24" pos:end="331:67"><expr pos:start="331:24" pos:end="331:67"><operator pos:start="331:24" pos:end="331:24">&amp;</operator><name pos:start="331:25" pos:end="331:67"><name pos:start="331:25" pos:end="331:25">h</name><operator pos:start="331:26" pos:end="331:27">-&gt;</operator><name pos:start="331:28" pos:end="331:51">intra4x4_pred_mode_cache</name><index pos:start="331:52" pos:end="331:67">[<expr pos:start="331:53" pos:end="331:66"><name pos:start="331:53" pos:end="331:60"><name pos:start="331:53" pos:end="331:57">scan8</name><index pos:start="331:58" pos:end="331:60">[<expr pos:start="331:59" pos:end="331:59"><literal type="number" pos:start="331:59" pos:end="331:59">0</literal></expr>]</index></name> <operator pos:start="331:62" pos:end="331:62">+</operator> <literal type="number" pos:start="331:64" pos:end="331:64">8</literal><operator pos:start="331:65" pos:end="331:65">*</operator><name pos:start="331:66" pos:end="331:66">i</name></expr>]</index></name></expr></argument>, <argument pos:start="331:70" pos:end="331:80"><expr pos:start="331:70" pos:end="331:80"><name pos:start="331:70" pos:end="331:80">DC_128_PRED</name></expr></argument>, <argument pos:start="331:83" pos:end="331:83"><expr pos:start="331:83" pos:end="331:83"><literal type="number" pos:start="331:83" pos:end="331:83">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="337:13" pos:end="337:47"><expr pos:start="337:13" pos:end="337:46"><name pos:start="337:13" pos:end="337:36"><name pos:start="337:13" pos:end="337:13">h</name><operator pos:start="337:14" pos:end="337:15">-&gt;</operator><name pos:start="337:16" pos:end="337:36">top_samples_available</name></name>  <operator pos:start="337:39" pos:end="337:39">=</operator> <literal type="number" pos:start="337:41" pos:end="337:46">0x33FF</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:47"><expr pos:start="339:13" pos:end="339:46"><name pos:start="339:13" pos:end="339:37"><name pos:start="339:13" pos:end="339:13">h</name><operator pos:start="339:14" pos:end="339:15">-&gt;</operator><name pos:start="339:16" pos:end="339:37">left_samples_available</name></name> <operator pos:start="339:39" pos:end="339:39">=</operator> <literal type="number" pos:start="339:41" pos:end="339:46">0x5F5F</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="345:9" pos:end="345:35"><expr pos:start="345:9" pos:end="345:34"><name pos:start="345:9" pos:end="345:15">mb_type</name> <operator pos:start="345:17" pos:end="345:17">=</operator> <name pos:start="345:19" pos:end="345:34">MB_TYPE_INTRA4x4</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="347:7" pos:end="369:5">else <block pos:start="347:12" pos:end="369:5">{<block_content pos:start="349:9" pos:end="367:37">                      <comment type="block" pos:start="347:35" pos:end="347:50">/* INTRA16x16 */</comment>

        <expr_stmt pos:start="349:9" pos:end="349:52"><expr pos:start="349:9" pos:end="349:51"><name pos:start="349:9" pos:end="349:11">dir</name> <operator pos:start="349:13" pos:end="349:13">=</operator> <name pos:start="349:15" pos:end="349:41"><name pos:start="349:15" pos:end="349:28">i_mb_type_info</name><index pos:start="349:29" pos:end="349:41">[<expr pos:start="349:30" pos:end="349:40"><name pos:start="349:30" pos:end="349:36">mb_type</name> <operator pos:start="349:38" pos:end="349:38">-</operator> <literal type="number" pos:start="349:40" pos:end="349:40">8</literal></expr>]</index></name><operator pos:start="349:42" pos:end="349:42">.</operator><name pos:start="349:43" pos:end="349:51">pred_mode</name></expr>;</expr_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:43"><expr pos:start="351:9" pos:end="351:42"><name pos:start="351:9" pos:end="351:11">dir</name> <operator pos:start="351:13" pos:end="351:13">=</operator> <operator pos:start="351:15" pos:end="351:15">(</operator><name pos:start="351:16" pos:end="351:18">dir</name> <operator pos:start="351:20" pos:end="351:21">&gt;&gt;</operator> <literal type="number" pos:start="351:23" pos:end="351:23">1</literal><operator pos:start="351:24" pos:end="351:24">)</operator> <operator pos:start="351:26" pos:end="351:26">^</operator> <literal type="number" pos:start="351:28" pos:end="351:28">3</literal><operator pos:start="351:29" pos:end="351:29">*</operator><operator pos:start="351:30" pos:end="351:30">(</operator><name pos:start="351:31" pos:end="351:33">dir</name> <operator pos:start="351:35" pos:end="351:35">&amp;</operator> <literal type="number" pos:start="351:37" pos:end="351:37">1</literal><operator pos:start="351:38" pos:end="351:38">)</operator> <operator pos:start="351:40" pos:end="351:40">^</operator> <literal type="number" pos:start="351:42" pos:end="351:42">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="355:9" pos:end="361:9"><if pos:start="355:9" pos:end="361:9">if <condition pos:start="355:12" pos:end="355:84">(<expr pos:start="355:13" pos:end="355:83"><operator pos:start="355:13" pos:end="355:13">(</operator><name pos:start="355:14" pos:end="355:36"><name pos:start="355:14" pos:end="355:14">h</name><operator pos:start="355:15" pos:end="355:16">-&gt;</operator><name pos:start="355:17" pos:end="355:36">intra16x16_pred_mode</name></name> <operator pos:start="355:38" pos:end="355:38">=</operator> <call pos:start="355:40" pos:end="355:76"><name pos:start="355:40" pos:end="355:68">ff_h264_check_intra_pred_mode</name><argument_list pos:start="355:69" pos:end="355:76">(<argument pos:start="355:70" pos:end="355:70"><expr pos:start="355:70" pos:end="355:70"><name pos:start="355:70" pos:end="355:70">h</name></expr></argument>, <argument pos:start="355:73" pos:end="355:75"><expr pos:start="355:73" pos:end="355:75"><name pos:start="355:73" pos:end="355:75">dir</name></expr></argument>)</argument_list></call><operator pos:start="355:77" pos:end="355:77">)</operator> <operator pos:start="355:79" pos:end="355:80">==</operator> <operator pos:start="355:82" pos:end="355:82">-</operator><literal type="number" pos:start="355:83" pos:end="355:83">1</literal></expr>)</condition><block pos:start="355:85" pos:end="361:9">{<block_content pos:start="357:13" pos:end="359:22">

            <expr_stmt pos:start="357:13" pos:end="357:77"><expr pos:start="357:13" pos:end="357:76"><call pos:start="357:13" pos:end="357:76"><name pos:start="357:13" pos:end="357:18">av_log</name><argument_list pos:start="357:19" pos:end="357:76">(<argument pos:start="357:20" pos:end="357:29"><expr pos:start="357:20" pos:end="357:29"><name pos:start="357:20" pos:end="357:29"><name pos:start="357:20" pos:end="357:20">h</name><operator pos:start="357:21" pos:end="357:22">-&gt;</operator><name pos:start="357:23" pos:end="357:23">s</name><operator pos:start="357:24" pos:end="357:24">.</operator><name pos:start="357:25" pos:end="357:29">avctx</name></name></expr></argument>, <argument pos:start="357:32" pos:end="357:43"><expr pos:start="357:32" pos:end="357:43"><name pos:start="357:32" pos:end="357:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="357:46" pos:end="357:75"><expr pos:start="357:46" pos:end="357:75"><literal type="string" pos:start="357:46" pos:end="357:75">"check_intra_pred_mode = -1\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="359:13" pos:end="359:22">return <expr pos:start="359:20" pos:end="359:21"><operator pos:start="359:20" pos:end="359:20">-</operator><literal type="number" pos:start="359:21" pos:end="359:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="365:9" pos:end="365:46"><expr pos:start="365:9" pos:end="365:45"><name pos:start="365:9" pos:end="365:11">cbp</name> <operator pos:start="365:13" pos:end="365:13">=</operator> <name pos:start="365:15" pos:end="365:41"><name pos:start="365:15" pos:end="365:28">i_mb_type_info</name><index pos:start="365:29" pos:end="365:41">[<expr pos:start="365:30" pos:end="365:40"><name pos:start="365:30" pos:end="365:36">mb_type</name> <operator pos:start="365:38" pos:end="365:38">-</operator> <literal type="number" pos:start="365:40" pos:end="365:40">8</literal></expr>]</index></name><operator pos:start="365:42" pos:end="365:42">.</operator><name pos:start="365:43" pos:end="365:45">cbp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="367:37"><expr pos:start="367:9" pos:end="367:36"><name pos:start="367:9" pos:end="367:15">mb_type</name> <operator pos:start="367:17" pos:end="367:17">=</operator> <name pos:start="367:19" pos:end="367:36">MB_TYPE_INTRA16x16</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="373:5" pos:end="391:5"><if pos:start="373:5" pos:end="391:5">if <condition pos:start="373:8" pos:end="373:56">(<expr pos:start="373:9" pos:end="373:55"><operator pos:start="373:9" pos:end="373:9">!</operator><call pos:start="373:10" pos:end="373:26"><name pos:start="373:10" pos:end="373:17">IS_INTER</name><argument_list pos:start="373:18" pos:end="373:26">(<argument pos:start="373:19" pos:end="373:25"><expr pos:start="373:19" pos:end="373:25"><name pos:start="373:19" pos:end="373:25">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="373:28" pos:end="373:29">&amp;&amp;</operator> <name pos:start="373:31" pos:end="373:42"><name pos:start="373:31" pos:end="373:31">s</name><operator pos:start="373:32" pos:end="373:33">-&gt;</operator><name pos:start="373:34" pos:end="373:42">pict_type</name></name> <operator pos:start="373:44" pos:end="373:45">!=</operator> <name pos:start="373:47" pos:end="373:55">FF_I_TYPE</name></expr>)</condition> <block pos:start="373:58" pos:end="391:5">{<block_content pos:start="375:9" pos:end="389:9">

        <for pos:start="375:9" pos:end="379:9">for <control pos:start="375:13" pos:end="375:31">(<init pos:start="375:14" pos:end="375:19"><expr pos:start="375:14" pos:end="375:18"><name pos:start="375:14" pos:end="375:14">i</name> <operator pos:start="375:16" pos:end="375:16">=</operator> <literal type="number" pos:start="375:18" pos:end="375:18">0</literal></expr>;</init> <condition pos:start="375:21" pos:end="375:26"><expr pos:start="375:21" pos:end="375:25"><name pos:start="375:21" pos:end="375:21">i</name> <operator pos:start="375:23" pos:end="375:23">&lt;</operator> <literal type="number" pos:start="375:25" pos:end="375:25">4</literal></expr>;</condition> <incr pos:start="375:28" pos:end="375:30"><expr pos:start="375:28" pos:end="375:30"><name pos:start="375:28" pos:end="375:28">i</name><operator pos:start="375:29" pos:end="375:30">++</operator></expr></incr>)</control> <block pos:start="375:33" pos:end="379:9">{<block_content pos:start="377:13" pos:end="377:99">

            <expr_stmt pos:start="377:13" pos:end="377:99"><expr pos:start="377:13" pos:end="377:98"><call pos:start="377:13" pos:end="377:98"><name pos:start="377:13" pos:end="377:18">memset</name><argument_list pos:start="377:19" pos:end="377:98">(<argument pos:start="377:20" pos:end="377:73"><expr pos:start="377:20" pos:end="377:73"><name pos:start="377:20" pos:end="377:73"><name pos:start="377:20" pos:end="377:20">s</name><operator pos:start="377:21" pos:end="377:22">-&gt;</operator><name pos:start="377:23" pos:end="377:37">current_picture</name><operator pos:start="377:38" pos:end="377:38">.</operator><name pos:start="377:39" pos:end="377:48">motion_val</name><index pos:start="377:49" pos:end="377:51">[<expr pos:start="377:50" pos:end="377:50"><literal type="number" pos:start="377:50" pos:end="377:50">0</literal></expr>]</index><index pos:start="377:52" pos:end="377:73">[<expr pos:start="377:53" pos:end="377:72"><name pos:start="377:53" pos:end="377:56">b_xy</name> <operator pos:start="377:58" pos:end="377:58">+</operator> <name pos:start="377:60" pos:end="377:60">i</name><operator pos:start="377:61" pos:end="377:61">*</operator><name pos:start="377:62" pos:end="377:72"><name pos:start="377:62" pos:end="377:62">h</name><operator pos:start="377:63" pos:end="377:64">-&gt;</operator><name pos:start="377:65" pos:end="377:72">b_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="377:76" pos:end="377:76"><expr pos:start="377:76" pos:end="377:76"><literal type="number" pos:start="377:76" pos:end="377:76">0</literal></expr></argument>, <argument pos:start="377:79" pos:end="377:97"><expr pos:start="377:79" pos:end="377:97"><literal type="number" pos:start="377:79" pos:end="377:79">4</literal><operator pos:start="377:80" pos:end="377:80">*</operator><literal type="number" pos:start="377:81" pos:end="377:81">2</literal><operator pos:start="377:82" pos:end="377:82">*</operator><sizeof pos:start="377:83" pos:end="377:97">sizeof<argument_list pos:start="377:89" pos:end="377:97">(<argument pos:start="377:90" pos:end="377:96"><expr pos:start="377:90" pos:end="377:96"><name pos:start="377:90" pos:end="377:96">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="381:9" pos:end="389:9"><if pos:start="381:9" pos:end="389:9">if <condition pos:start="381:12" pos:end="381:38">(<expr pos:start="381:13" pos:end="381:37"><name pos:start="381:13" pos:end="381:24"><name pos:start="381:13" pos:end="381:13">s</name><operator pos:start="381:14" pos:end="381:15">-&gt;</operator><name pos:start="381:16" pos:end="381:24">pict_type</name></name> <operator pos:start="381:26" pos:end="381:27">==</operator> <name pos:start="381:29" pos:end="381:37">FF_B_TYPE</name></expr>)</condition> <block pos:start="381:40" pos:end="389:9">{<block_content pos:start="383:13" pos:end="387:13">

            <for pos:start="383:13" pos:end="387:13">for <control pos:start="383:17" pos:end="383:35">(<init pos:start="383:18" pos:end="383:23"><expr pos:start="383:18" pos:end="383:22"><name pos:start="383:18" pos:end="383:18">i</name> <operator pos:start="383:20" pos:end="383:20">=</operator> <literal type="number" pos:start="383:22" pos:end="383:22">0</literal></expr>;</init> <condition pos:start="383:25" pos:end="383:30"><expr pos:start="383:25" pos:end="383:29"><name pos:start="383:25" pos:end="383:25">i</name> <operator pos:start="383:27" pos:end="383:27">&lt;</operator> <literal type="number" pos:start="383:29" pos:end="383:29">4</literal></expr>;</condition> <incr pos:start="383:32" pos:end="383:34"><expr pos:start="383:32" pos:end="383:34"><name pos:start="383:32" pos:end="383:32">i</name><operator pos:start="383:33" pos:end="383:34">++</operator></expr></incr>)</control> <block pos:start="383:37" pos:end="387:13">{<block_content pos:start="385:17" pos:end="385:103">

                <expr_stmt pos:start="385:17" pos:end="385:103"><expr pos:start="385:17" pos:end="385:102"><call pos:start="385:17" pos:end="385:102"><name pos:start="385:17" pos:end="385:22">memset</name><argument_list pos:start="385:23" pos:end="385:102">(<argument pos:start="385:24" pos:end="385:77"><expr pos:start="385:24" pos:end="385:77"><name pos:start="385:24" pos:end="385:77"><name pos:start="385:24" pos:end="385:24">s</name><operator pos:start="385:25" pos:end="385:26">-&gt;</operator><name pos:start="385:27" pos:end="385:41">current_picture</name><operator pos:start="385:42" pos:end="385:42">.</operator><name pos:start="385:43" pos:end="385:52">motion_val</name><index pos:start="385:53" pos:end="385:55">[<expr pos:start="385:54" pos:end="385:54"><literal type="number" pos:start="385:54" pos:end="385:54">1</literal></expr>]</index><index pos:start="385:56" pos:end="385:77">[<expr pos:start="385:57" pos:end="385:76"><name pos:start="385:57" pos:end="385:60">b_xy</name> <operator pos:start="385:62" pos:end="385:62">+</operator> <name pos:start="385:64" pos:end="385:64">i</name><operator pos:start="385:65" pos:end="385:65">*</operator><name pos:start="385:66" pos:end="385:76"><name pos:start="385:66" pos:end="385:66">h</name><operator pos:start="385:67" pos:end="385:68">-&gt;</operator><name pos:start="385:69" pos:end="385:76">b_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="385:80" pos:end="385:80"><expr pos:start="385:80" pos:end="385:80"><literal type="number" pos:start="385:80" pos:end="385:80">0</literal></expr></argument>, <argument pos:start="385:83" pos:end="385:101"><expr pos:start="385:83" pos:end="385:101"><literal type="number" pos:start="385:83" pos:end="385:83">4</literal><operator pos:start="385:84" pos:end="385:84">*</operator><literal type="number" pos:start="385:85" pos:end="385:85">2</literal><operator pos:start="385:86" pos:end="385:86">*</operator><sizeof pos:start="385:87" pos:end="385:101">sizeof<argument_list pos:start="385:93" pos:end="385:101">(<argument pos:start="385:94" pos:end="385:100"><expr pos:start="385:94" pos:end="385:100"><name pos:start="385:94" pos:end="385:100">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="393:5" pos:end="397:5"><if pos:start="393:5" pos:end="397:5">if <condition pos:start="393:8" pos:end="393:30">(<expr pos:start="393:9" pos:end="393:29"><operator pos:start="393:9" pos:end="393:9">!</operator><call pos:start="393:10" pos:end="393:29"><name pos:start="393:10" pos:end="393:20">IS_INTRA4x4</name><argument_list pos:start="393:21" pos:end="393:29">(<argument pos:start="393:22" pos:end="393:28"><expr pos:start="393:22" pos:end="393:28"><name pos:start="393:22" pos:end="393:28">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="393:32" pos:end="397:5">{<block_content pos:start="395:9" pos:end="395:57">

        <expr_stmt pos:start="395:9" pos:end="395:57"><expr pos:start="395:9" pos:end="395:56"><call pos:start="395:9" pos:end="395:56"><name pos:start="395:9" pos:end="395:14">memset</name><argument_list pos:start="395:15" pos:end="395:56">(<argument pos:start="395:16" pos:end="395:43"><expr pos:start="395:16" pos:end="395:43"><name pos:start="395:16" pos:end="395:43"><name pos:start="395:16" pos:end="395:16">h</name><operator pos:start="395:17" pos:end="395:18">-&gt;</operator><name pos:start="395:19" pos:end="395:36">intra4x4_pred_mode</name><index pos:start="395:37" pos:end="395:43">[<expr pos:start="395:38" pos:end="395:42"><name pos:start="395:38" pos:end="395:42">mb_xy</name></expr>]</index></name></expr></argument>, <argument pos:start="395:46" pos:end="395:52"><expr pos:start="395:46" pos:end="395:52"><name pos:start="395:46" pos:end="395:52">DC_PRED</name></expr></argument>, <argument pos:start="395:55" pos:end="395:55"><expr pos:start="395:55" pos:end="395:55"><literal type="number" pos:start="395:55" pos:end="395:55">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="399:5" pos:end="405:5"><if pos:start="399:5" pos:end="405:5">if <condition pos:start="399:8" pos:end="399:55">(<expr pos:start="399:9" pos:end="399:54"><operator pos:start="399:9" pos:end="399:9">!</operator><call pos:start="399:10" pos:end="399:25"><name pos:start="399:10" pos:end="399:16">IS_SKIP</name><argument_list pos:start="399:17" pos:end="399:25">(<argument pos:start="399:18" pos:end="399:24"><expr pos:start="399:18" pos:end="399:24"><name pos:start="399:18" pos:end="399:24">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="399:27" pos:end="399:28">||</operator> <name pos:start="399:30" pos:end="399:41"><name pos:start="399:30" pos:end="399:30">s</name><operator pos:start="399:31" pos:end="399:32">-&gt;</operator><name pos:start="399:33" pos:end="399:41">pict_type</name></name> <operator pos:start="399:43" pos:end="399:44">==</operator> <name pos:start="399:46" pos:end="399:54">FF_B_TYPE</name></expr>)</condition> <block pos:start="399:57" pos:end="405:5">{<block_content pos:start="401:9" pos:end="403:35">

        <expr_stmt pos:start="401:9" pos:end="401:68"><expr pos:start="401:9" pos:end="401:67"><call pos:start="401:9" pos:end="401:67"><name pos:start="401:9" pos:end="401:14">memset</name><argument_list pos:start="401:15" pos:end="401:67">(<argument pos:start="401:16" pos:end="401:42"><expr pos:start="401:16" pos:end="401:42"><name pos:start="401:16" pos:end="401:38"><name pos:start="401:16" pos:end="401:16">h</name><operator pos:start="401:17" pos:end="401:18">-&gt;</operator><name pos:start="401:19" pos:end="401:38">non_zero_count_cache</name></name> <operator pos:start="401:40" pos:end="401:40">+</operator> <literal type="number" pos:start="401:42" pos:end="401:42">8</literal></expr></argument>, <argument pos:start="401:45" pos:end="401:45"><expr pos:start="401:45" pos:end="401:45"><literal type="number" pos:start="401:45" pos:end="401:45">0</literal></expr></argument>, <argument pos:start="401:48" pos:end="401:66"><expr pos:start="401:48" pos:end="401:66"><literal type="number" pos:start="401:48" pos:end="401:48">4</literal><operator pos:start="401:49" pos:end="401:49">*</operator><literal type="number" pos:start="401:50" pos:end="401:50">9</literal><operator pos:start="401:51" pos:end="401:51">*</operator><sizeof pos:start="401:52" pos:end="401:66">sizeof<argument_list pos:start="401:58" pos:end="401:66">(<argument pos:start="401:59" pos:end="401:65"><expr pos:start="401:59" pos:end="401:65"><name pos:start="401:59" pos:end="401:65">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="403:9" pos:end="403:35"><expr pos:start="403:9" pos:end="403:34"><call pos:start="403:9" pos:end="403:34"><name pos:start="403:9" pos:end="403:27"><name pos:start="403:9" pos:end="403:9">s</name><operator pos:start="403:10" pos:end="403:11">-&gt;</operator><name pos:start="403:12" pos:end="403:14">dsp</name><operator pos:start="403:15" pos:end="403:15">.</operator><name pos:start="403:16" pos:end="403:27">clear_blocks</name></name><argument_list pos:start="403:28" pos:end="403:34">(<argument pos:start="403:29" pos:end="403:33"><expr pos:start="403:29" pos:end="403:33"><name pos:start="403:29" pos:end="403:33"><name pos:start="403:29" pos:end="403:29">h</name><operator pos:start="403:30" pos:end="403:31">-&gt;</operator><name pos:start="403:32" pos:end="403:33">mb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="409:5" pos:end="423:5"><if pos:start="409:5" pos:end="423:5">if <condition pos:start="409:8" pos:end="409:84">(<expr pos:start="409:9" pos:end="409:83"><operator pos:start="409:9" pos:end="409:9">!</operator><call pos:start="409:10" pos:end="409:31"><name pos:start="409:10" pos:end="409:22">IS_INTRA16x16</name><argument_list pos:start="409:23" pos:end="409:31">(<argument pos:start="409:24" pos:end="409:30"><expr pos:start="409:24" pos:end="409:30"><name pos:start="409:24" pos:end="409:30">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="409:33" pos:end="409:34">&amp;&amp;</operator> <operator pos:start="409:36" pos:end="409:36">(</operator><operator pos:start="409:37" pos:end="409:37">!</operator><call pos:start="409:38" pos:end="409:53"><name pos:start="409:38" pos:end="409:44">IS_SKIP</name><argument_list pos:start="409:45" pos:end="409:53">(<argument pos:start="409:46" pos:end="409:52"><expr pos:start="409:46" pos:end="409:52"><name pos:start="409:46" pos:end="409:52">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="409:55" pos:end="409:56">||</operator> <name pos:start="409:58" pos:end="409:69"><name pos:start="409:58" pos:end="409:58">s</name><operator pos:start="409:59" pos:end="409:60">-&gt;</operator><name pos:start="409:61" pos:end="409:69">pict_type</name></name> <operator pos:start="409:71" pos:end="409:72">==</operator> <name pos:start="409:74" pos:end="409:82">FF_B_TYPE</name><operator pos:start="409:83" pos:end="409:83">)</operator></expr>)</condition> <block pos:start="409:86" pos:end="423:5">{<block_content pos:start="411:9" pos:end="421:89">

        <if_stmt pos:start="411:9" pos:end="417:9"><if pos:start="411:9" pos:end="417:9">if <condition pos:start="411:12" pos:end="411:53">(<expr pos:start="411:13" pos:end="411:52"><operator pos:start="411:13" pos:end="411:13">(</operator><name pos:start="411:14" pos:end="411:16">vlc</name> <operator pos:start="411:18" pos:end="411:18">=</operator> <call pos:start="411:20" pos:end="411:45"><name pos:start="411:20" pos:end="411:37">svq3_get_ue_golomb</name><argument_list pos:start="411:38" pos:end="411:45">(<argument pos:start="411:39" pos:end="411:44"><expr pos:start="411:39" pos:end="411:44"><operator pos:start="411:39" pos:end="411:39">&amp;</operator><name pos:start="411:40" pos:end="411:44"><name pos:start="411:40" pos:end="411:40">s</name><operator pos:start="411:41" pos:end="411:42">-&gt;</operator><name pos:start="411:43" pos:end="411:44">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="411:46" pos:end="411:46">)</operator> <operator pos:start="411:48" pos:end="411:49">&gt;=</operator> <literal type="number" pos:start="411:51" pos:end="411:52">48</literal></expr>)</condition><block pos:start="411:54" pos:end="417:9">{<block_content pos:start="413:13" pos:end="415:22">

            <expr_stmt pos:start="413:13" pos:end="413:66"><expr pos:start="413:13" pos:end="413:65"><call pos:start="413:13" pos:end="413:65"><name pos:start="413:13" pos:end="413:18">av_log</name><argument_list pos:start="413:19" pos:end="413:65">(<argument pos:start="413:20" pos:end="413:29"><expr pos:start="413:20" pos:end="413:29"><name pos:start="413:20" pos:end="413:29"><name pos:start="413:20" pos:end="413:20">h</name><operator pos:start="413:21" pos:end="413:22">-&gt;</operator><name pos:start="413:23" pos:end="413:23">s</name><operator pos:start="413:24" pos:end="413:24">.</operator><name pos:start="413:25" pos:end="413:29">avctx</name></name></expr></argument>, <argument pos:start="413:32" pos:end="413:43"><expr pos:start="413:32" pos:end="413:43"><name pos:start="413:32" pos:end="413:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="413:46" pos:end="413:59"><expr pos:start="413:46" pos:end="413:59"><literal type="string" pos:start="413:46" pos:end="413:59">"cbp_vlc=%d\n"</literal></expr></argument>, <argument pos:start="413:62" pos:end="413:64"><expr pos:start="413:62" pos:end="413:64"><name pos:start="413:62" pos:end="413:64">vlc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="415:13" pos:end="415:22">return <expr pos:start="415:20" pos:end="415:21"><operator pos:start="415:20" pos:end="415:20">-</operator><literal type="number" pos:start="415:21" pos:end="415:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="421:9" pos:end="421:89"><expr pos:start="421:9" pos:end="421:88"><name pos:start="421:9" pos:end="421:11">cbp</name> <operator pos:start="421:13" pos:end="421:13">=</operator> <ternary pos:start="421:15" pos:end="421:88"><condition pos:start="421:15" pos:end="421:33"><expr pos:start="421:15" pos:end="421:31"><call pos:start="421:15" pos:end="421:31"><name pos:start="421:15" pos:end="421:22">IS_INTRA</name><argument_list pos:start="421:23" pos:end="421:31">(<argument pos:start="421:24" pos:end="421:30"><expr pos:start="421:24" pos:end="421:30"><name pos:start="421:24" pos:end="421:30">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="421:35" pos:end="421:61"> <expr pos:start="421:35" pos:end="421:61"><name pos:start="421:35" pos:end="421:61"><name pos:start="421:35" pos:end="421:56">golomb_to_intra4x4_cbp</name><index pos:start="421:57" pos:end="421:61">[<expr pos:start="421:58" pos:end="421:60"><name pos:start="421:58" pos:end="421:60">vlc</name></expr>]</index></name></expr> </then><else pos:start="421:63" pos:end="421:88">: <expr pos:start="421:65" pos:end="421:88"><name pos:start="421:65" pos:end="421:88"><name pos:start="421:65" pos:end="421:83">golomb_to_inter_cbp</name><index pos:start="421:84" pos:end="421:88">[<expr pos:start="421:85" pos:end="421:87"><name pos:start="421:85" pos:end="421:87">vlc</name></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="425:5" pos:end="439:5"><if pos:start="425:5" pos:end="439:5">if <condition pos:start="425:8" pos:end="425:90">(<expr pos:start="425:9" pos:end="425:89"><call pos:start="425:9" pos:end="425:30"><name pos:start="425:9" pos:end="425:21">IS_INTRA16x16</name><argument_list pos:start="425:22" pos:end="425:30">(<argument pos:start="425:23" pos:end="425:29"><expr pos:start="425:23" pos:end="425:29"><name pos:start="425:23" pos:end="425:29">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="425:32" pos:end="425:33">||</operator> <operator pos:start="425:35" pos:end="425:35">(</operator><name pos:start="425:36" pos:end="425:47"><name pos:start="425:36" pos:end="425:36">s</name><operator pos:start="425:37" pos:end="425:38">-&gt;</operator><name pos:start="425:39" pos:end="425:47">pict_type</name></name> <operator pos:start="425:49" pos:end="425:50">!=</operator> <name pos:start="425:52" pos:end="425:60">FF_I_TYPE</name> <operator pos:start="425:62" pos:end="425:63">&amp;&amp;</operator> <name pos:start="425:65" pos:end="425:81"><name pos:start="425:65" pos:end="425:65">s</name><operator pos:start="425:66" pos:end="425:67">-&gt;</operator><name pos:start="425:68" pos:end="425:81">adaptive_quant</name></name> <operator pos:start="425:83" pos:end="425:84">&amp;&amp;</operator> <name pos:start="425:86" pos:end="425:88">cbp</name><operator pos:start="425:89" pos:end="425:89">)</operator></expr>)</condition> <block pos:start="425:92" pos:end="439:5">{<block_content pos:start="427:9" pos:end="437:9">

        <expr_stmt pos:start="427:9" pos:end="427:48"><expr pos:start="427:9" pos:end="427:47"><name pos:start="427:9" pos:end="427:17"><name pos:start="427:9" pos:end="427:9">s</name><operator pos:start="427:10" pos:end="427:11">-&gt;</operator><name pos:start="427:12" pos:end="427:17">qscale</name></name> <operator pos:start="427:19" pos:end="427:20">+=</operator> <call pos:start="427:22" pos:end="427:47"><name pos:start="427:22" pos:end="427:39">svq3_get_se_golomb</name><argument_list pos:start="427:40" pos:end="427:47">(<argument pos:start="427:41" pos:end="427:46"><expr pos:start="427:41" pos:end="427:46"><operator pos:start="427:41" pos:end="427:41">&amp;</operator><name pos:start="427:42" pos:end="427:46"><name pos:start="427:42" pos:end="427:42">s</name><operator pos:start="427:43" pos:end="427:44">-&gt;</operator><name pos:start="427:45" pos:end="427:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="431:9" pos:end="437:9"><if pos:start="431:9" pos:end="437:9">if <condition pos:start="431:12" pos:end="431:27">(<expr pos:start="431:13" pos:end="431:26"><name pos:start="431:13" pos:end="431:21"><name pos:start="431:13" pos:end="431:13">s</name><operator pos:start="431:14" pos:end="431:15">-&gt;</operator><name pos:start="431:16" pos:end="431:21">qscale</name></name> <operator pos:start="431:23" pos:end="431:23">&gt;</operator> <literal type="number" pos:start="431:25" pos:end="431:26">31</literal></expr>)</condition><block pos:start="431:28" pos:end="437:9">{<block_content pos:start="433:13" pos:end="435:22">

            <expr_stmt pos:start="433:13" pos:end="433:71"><expr pos:start="433:13" pos:end="433:70"><call pos:start="433:13" pos:end="433:70"><name pos:start="433:13" pos:end="433:18">av_log</name><argument_list pos:start="433:19" pos:end="433:70">(<argument pos:start="433:20" pos:end="433:29"><expr pos:start="433:20" pos:end="433:29"><name pos:start="433:20" pos:end="433:29"><name pos:start="433:20" pos:end="433:20">h</name><operator pos:start="433:21" pos:end="433:22">-&gt;</operator><name pos:start="433:23" pos:end="433:23">s</name><operator pos:start="433:24" pos:end="433:24">.</operator><name pos:start="433:25" pos:end="433:29">avctx</name></name></expr></argument>, <argument pos:start="433:32" pos:end="433:43"><expr pos:start="433:32" pos:end="433:43"><name pos:start="433:32" pos:end="433:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="433:46" pos:end="433:58"><expr pos:start="433:46" pos:end="433:58"><literal type="string" pos:start="433:46" pos:end="433:58">"qscale:%d\n"</literal></expr></argument>, <argument pos:start="433:61" pos:end="433:69"><expr pos:start="433:61" pos:end="433:69"><name pos:start="433:61" pos:end="433:69"><name pos:start="433:61" pos:end="433:61">s</name><operator pos:start="433:62" pos:end="433:63">-&gt;</operator><name pos:start="433:64" pos:end="433:69">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="435:13" pos:end="435:22">return <expr pos:start="435:20" pos:end="435:21"><operator pos:start="435:20" pos:end="435:20">-</operator><literal type="number" pos:start="435:21" pos:end="435:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="441:5" pos:end="451:5"><if pos:start="441:5" pos:end="451:5">if <condition pos:start="441:8" pos:end="441:31">(<expr pos:start="441:9" pos:end="441:30"><call pos:start="441:9" pos:end="441:30"><name pos:start="441:9" pos:end="441:21">IS_INTRA16x16</name><argument_list pos:start="441:22" pos:end="441:30">(<argument pos:start="441:23" pos:end="441:29"><expr pos:start="441:23" pos:end="441:29"><name pos:start="441:23" pos:end="441:29">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="441:33" pos:end="451:5">{<block_content pos:start="443:9" pos:end="449:9">

        <if_stmt pos:start="443:9" pos:end="449:9"><if pos:start="443:9" pos:end="449:9">if <condition pos:start="443:12" pos:end="443:51">(<expr pos:start="443:13" pos:end="443:50"><call pos:start="443:13" pos:end="443:50"><name pos:start="443:13" pos:end="443:29">svq3_decode_block</name><argument_list pos:start="443:30" pos:end="443:50">(<argument pos:start="443:31" pos:end="443:36"><expr pos:start="443:31" pos:end="443:36"><operator pos:start="443:31" pos:end="443:31">&amp;</operator><name pos:start="443:32" pos:end="443:36"><name pos:start="443:32" pos:end="443:32">s</name><operator pos:start="443:33" pos:end="443:34">-&gt;</operator><name pos:start="443:35" pos:end="443:36">gb</name></name></expr></argument>, <argument pos:start="443:39" pos:end="443:43"><expr pos:start="443:39" pos:end="443:43"><name pos:start="443:39" pos:end="443:43"><name pos:start="443:39" pos:end="443:39">h</name><operator pos:start="443:40" pos:end="443:41">-&gt;</operator><name pos:start="443:42" pos:end="443:43">mb</name></name></expr></argument>, <argument pos:start="443:46" pos:end="443:46"><expr pos:start="443:46" pos:end="443:46"><literal type="number" pos:start="443:46" pos:end="443:46">0</literal></expr></argument>, <argument pos:start="443:49" pos:end="443:49"><expr pos:start="443:49" pos:end="443:49"><literal type="number" pos:start="443:49" pos:end="443:49">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="443:52" pos:end="449:9">{<block_content pos:start="445:13" pos:end="447:22">

            <expr_stmt pos:start="445:13" pos:end="445:85"><expr pos:start="445:13" pos:end="445:84"><call pos:start="445:13" pos:end="445:84"><name pos:start="445:13" pos:end="445:18">av_log</name><argument_list pos:start="445:19" pos:end="445:84">(<argument pos:start="445:20" pos:end="445:29"><expr pos:start="445:20" pos:end="445:29"><name pos:start="445:20" pos:end="445:29"><name pos:start="445:20" pos:end="445:20">h</name><operator pos:start="445:21" pos:end="445:22">-&gt;</operator><name pos:start="445:23" pos:end="445:23">s</name><operator pos:start="445:24" pos:end="445:24">.</operator><name pos:start="445:25" pos:end="445:29">avctx</name></name></expr></argument>, <argument pos:start="445:32" pos:end="445:43"><expr pos:start="445:32" pos:end="445:43"><name pos:start="445:32" pos:end="445:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="445:46" pos:end="445:83"><expr pos:start="445:46" pos:end="445:83"><literal type="string" pos:start="445:46" pos:end="445:83">"error while decoding intra luma dc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="447:13" pos:end="447:22">return <expr pos:start="447:20" pos:end="447:21"><operator pos:start="447:20" pos:end="447:20">-</operator><literal type="number" pos:start="447:21" pos:end="447:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="455:5" pos:end="529:5"><if pos:start="455:5" pos:end="529:5">if <condition pos:start="455:8" pos:end="455:12">(<expr pos:start="455:9" pos:end="455:11"><name pos:start="455:9" pos:end="455:11">cbp</name></expr>)</condition> <block pos:start="455:14" pos:end="529:5">{<block_content pos:start="457:9" pos:end="527:9">

        <decl_stmt pos:start="457:9" pos:end="457:57"><decl pos:start="457:9" pos:end="457:56"><type pos:start="457:9" pos:end="457:17"><specifier pos:start="457:9" pos:end="457:13">const</specifier> <name pos:start="457:15" pos:end="457:17">int</name></type> <name pos:start="457:19" pos:end="457:23">index</name> <init pos:start="457:25" pos:end="457:56">= <expr pos:start="457:27" pos:end="457:56"><ternary pos:start="457:27" pos:end="457:56"><condition pos:start="457:27" pos:end="457:50"><expr pos:start="457:27" pos:end="457:48"><call pos:start="457:27" pos:end="457:48"><name pos:start="457:27" pos:end="457:39">IS_INTRA16x16</name><argument_list pos:start="457:40" pos:end="457:48">(<argument pos:start="457:41" pos:end="457:47"><expr pos:start="457:41" pos:end="457:47"><name pos:start="457:41" pos:end="457:47">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="457:52" pos:end="457:52"> <expr pos:start="457:52" pos:end="457:52"><literal type="number" pos:start="457:52" pos:end="457:52">1</literal></expr> </then><else pos:start="457:54" pos:end="457:56">: <expr pos:start="457:56" pos:end="457:56"><literal type="number" pos:start="457:56" pos:end="457:56">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="459:9" pos:end="459:76"><decl pos:start="459:9" pos:end="459:75"><type pos:start="459:9" pos:end="459:17"><specifier pos:start="459:9" pos:end="459:13">const</specifier> <name pos:start="459:15" pos:end="459:17">int</name></type> <name pos:start="459:19" pos:end="459:22">type</name> <init pos:start="459:24" pos:end="459:75">= <expr pos:start="459:26" pos:end="459:75"><operator pos:start="459:26" pos:end="459:26">(</operator><ternary pos:start="459:27" pos:end="459:74"><condition pos:start="459:27" pos:end="459:68"><expr pos:start="459:27" pos:end="459:66"><operator pos:start="459:27" pos:end="459:27">(</operator><name pos:start="459:28" pos:end="459:36"><name pos:start="459:28" pos:end="459:28">s</name><operator pos:start="459:29" pos:end="459:30">-&gt;</operator><name pos:start="459:31" pos:end="459:36">qscale</name></name> <operator pos:start="459:38" pos:end="459:38">&lt;</operator> <literal type="number" pos:start="459:40" pos:end="459:41">24</literal> <operator pos:start="459:43" pos:end="459:44">&amp;&amp;</operator> <call pos:start="459:46" pos:end="459:65"><name pos:start="459:46" pos:end="459:56">IS_INTRA4x4</name><argument_list pos:start="459:57" pos:end="459:65">(<argument pos:start="459:58" pos:end="459:64"><expr pos:start="459:58" pos:end="459:64"><name pos:start="459:58" pos:end="459:64">mb_type</name></expr></argument>)</argument_list></call><operator pos:start="459:66" pos:end="459:66">)</operator></expr> ?</condition><then pos:start="459:70" pos:end="459:70"> <expr pos:start="459:70" pos:end="459:70"><literal type="number" pos:start="459:70" pos:end="459:70">2</literal></expr> </then><else pos:start="459:72" pos:end="459:74">: <expr pos:start="459:74" pos:end="459:74"><literal type="number" pos:start="459:74" pos:end="459:74">1</literal></expr></else></ternary><operator pos:start="459:75" pos:end="459:75">)</operator></expr></init></decl>;</decl_stmt>



        <for pos:start="463:9" pos:end="487:9">for <control pos:start="463:13" pos:end="463:31">(<init pos:start="463:14" pos:end="463:19"><expr pos:start="463:14" pos:end="463:18"><name pos:start="463:14" pos:end="463:14">i</name> <operator pos:start="463:16" pos:end="463:16">=</operator> <literal type="number" pos:start="463:18" pos:end="463:18">0</literal></expr>;</init> <condition pos:start="463:21" pos:end="463:26"><expr pos:start="463:21" pos:end="463:25"><name pos:start="463:21" pos:end="463:21">i</name> <operator pos:start="463:23" pos:end="463:23">&lt;</operator> <literal type="number" pos:start="463:25" pos:end="463:25">4</literal></expr>;</condition> <incr pos:start="463:28" pos:end="463:30"><expr pos:start="463:28" pos:end="463:30"><name pos:start="463:28" pos:end="463:28">i</name><operator pos:start="463:29" pos:end="463:30">++</operator></expr></incr>)</control> <block pos:start="463:33" pos:end="487:9">{<block_content pos:start="465:13" pos:end="485:13">

            <if_stmt pos:start="465:13" pos:end="485:13"><if pos:start="465:13" pos:end="485:13">if <condition pos:start="465:16" pos:end="465:33">(<expr pos:start="465:17" pos:end="465:32"><operator pos:start="465:17" pos:end="465:17">(</operator><name pos:start="465:18" pos:end="465:20">cbp</name> <operator pos:start="465:22" pos:end="465:22">&amp;</operator> <operator pos:start="465:24" pos:end="465:24">(</operator><literal type="number" pos:start="465:25" pos:end="465:25">1</literal> <operator pos:start="465:27" pos:end="465:28">&lt;&lt;</operator> <name pos:start="465:30" pos:end="465:30">i</name><operator pos:start="465:31" pos:end="465:31">)</operator><operator pos:start="465:32" pos:end="465:32">)</operator></expr>)</condition> <block pos:start="465:35" pos:end="485:13">{<block_content pos:start="467:17" pos:end="483:17">

                <for pos:start="467:17" pos:end="483:17">for <control pos:start="467:21" pos:end="467:39">(<init pos:start="467:22" pos:end="467:27"><expr pos:start="467:22" pos:end="467:26"><name pos:start="467:22" pos:end="467:22">j</name> <operator pos:start="467:24" pos:end="467:24">=</operator> <literal type="number" pos:start="467:26" pos:end="467:26">0</literal></expr>;</init> <condition pos:start="467:29" pos:end="467:34"><expr pos:start="467:29" pos:end="467:33"><name pos:start="467:29" pos:end="467:29">j</name> <operator pos:start="467:31" pos:end="467:31">&lt;</operator> <literal type="number" pos:start="467:33" pos:end="467:33">4</literal></expr>;</condition> <incr pos:start="467:36" pos:end="467:38"><expr pos:start="467:36" pos:end="467:38"><name pos:start="467:36" pos:end="467:36">j</name><operator pos:start="467:37" pos:end="467:38">++</operator></expr></incr>)</control> <block pos:start="467:41" pos:end="483:17">{<block_content pos:start="469:21" pos:end="481:21">

                    <expr_stmt pos:start="469:21" pos:end="469:82"><expr pos:start="469:21" pos:end="469:81"><name pos:start="469:21" pos:end="469:21">k</name> <operator pos:start="469:23" pos:end="469:23">=</operator> <ternary pos:start="469:25" pos:end="469:81"><condition pos:start="469:25" pos:end="469:31"><expr pos:start="469:25" pos:end="469:29"><name pos:start="469:25" pos:end="469:29">index</name></expr> ?</condition><then pos:start="469:33" pos:end="469:69"> <expr pos:start="469:33" pos:end="469:69"><operator pos:start="469:33" pos:end="469:33">(</operator><operator pos:start="469:34" pos:end="469:34">(</operator><name pos:start="469:35" pos:end="469:35">j</name><operator pos:start="469:36" pos:end="469:36">&amp;</operator><literal type="number" pos:start="469:37" pos:end="469:37">1</literal><operator pos:start="469:38" pos:end="469:38">)</operator> <operator pos:start="469:40" pos:end="469:40">+</operator> <literal type="number" pos:start="469:42" pos:end="469:42">2</literal><operator pos:start="469:43" pos:end="469:43">*</operator><operator pos:start="469:44" pos:end="469:44">(</operator><name pos:start="469:45" pos:end="469:45">i</name><operator pos:start="469:46" pos:end="469:46">&amp;</operator><literal type="number" pos:start="469:47" pos:end="469:47">1</literal><operator pos:start="469:48" pos:end="469:48">)</operator> <operator pos:start="469:50" pos:end="469:50">+</operator> <literal type="number" pos:start="469:52" pos:end="469:52">2</literal><operator pos:start="469:53" pos:end="469:53">*</operator><operator pos:start="469:54" pos:end="469:54">(</operator><name pos:start="469:55" pos:end="469:55">j</name><operator pos:start="469:56" pos:end="469:56">&amp;</operator><literal type="number" pos:start="469:57" pos:end="469:57">2</literal><operator pos:start="469:58" pos:end="469:58">)</operator> <operator pos:start="469:60" pos:end="469:60">+</operator> <literal type="number" pos:start="469:62" pos:end="469:62">4</literal><operator pos:start="469:63" pos:end="469:63">*</operator><operator pos:start="469:64" pos:end="469:64">(</operator><name pos:start="469:65" pos:end="469:65">i</name><operator pos:start="469:66" pos:end="469:66">&amp;</operator><literal type="number" pos:start="469:67" pos:end="469:67">2</literal><operator pos:start="469:68" pos:end="469:68">)</operator><operator pos:start="469:69" pos:end="469:69">)</operator></expr> </then><else pos:start="469:71" pos:end="469:81">: <expr pos:start="469:73" pos:end="469:81"><operator pos:start="469:73" pos:end="469:73">(</operator><literal type="number" pos:start="469:74" pos:end="469:74">4</literal><operator pos:start="469:75" pos:end="469:75">*</operator><name pos:start="469:76" pos:end="469:76">i</name> <operator pos:start="469:78" pos:end="469:78">+</operator> <name pos:start="469:80" pos:end="469:80">j</name><operator pos:start="469:81" pos:end="469:81">)</operator></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="471:21" pos:end="471:60"><expr pos:start="471:21" pos:end="471:59"><name pos:start="471:21" pos:end="471:55"><name pos:start="471:21" pos:end="471:21">h</name><operator pos:start="471:22" pos:end="471:23">-&gt;</operator><name pos:start="471:24" pos:end="471:43">non_zero_count_cache</name><index pos:start="471:44" pos:end="471:55">[ <expr pos:start="471:46" pos:end="471:53"><name pos:start="471:46" pos:end="471:53"><name pos:start="471:46" pos:end="471:50">scan8</name><index pos:start="471:51" pos:end="471:53">[<expr pos:start="471:52" pos:end="471:52"><name pos:start="471:52" pos:end="471:52">k</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="471:57" pos:end="471:57">=</operator> <literal type="number" pos:start="471:59" pos:end="471:59">1</literal></expr>;</expr_stmt>



                    <if_stmt pos:start="475:21" pos:end="481:21"><if pos:start="475:21" pos:end="481:21">if <condition pos:start="475:24" pos:end="475:77">(<expr pos:start="475:25" pos:end="475:76"><call pos:start="475:25" pos:end="475:76"><name pos:start="475:25" pos:end="475:41">svq3_decode_block</name><argument_list pos:start="475:42" pos:end="475:76">(<argument pos:start="475:43" pos:end="475:48"><expr pos:start="475:43" pos:end="475:48"><operator pos:start="475:43" pos:end="475:43">&amp;</operator><name pos:start="475:44" pos:end="475:48"><name pos:start="475:44" pos:end="475:44">s</name><operator pos:start="475:45" pos:end="475:46">-&gt;</operator><name pos:start="475:47" pos:end="475:48">gb</name></name></expr></argument>, <argument pos:start="475:51" pos:end="475:62"><expr pos:start="475:51" pos:end="475:62"><operator pos:start="475:51" pos:end="475:51">&amp;</operator><name pos:start="475:52" pos:end="475:62"><name pos:start="475:52" pos:end="475:52">h</name><operator pos:start="475:53" pos:end="475:54">-&gt;</operator><name pos:start="475:55" pos:end="475:56">mb</name><index pos:start="475:57" pos:end="475:62">[<expr pos:start="475:58" pos:end="475:61"><literal type="number" pos:start="475:58" pos:end="475:59">16</literal><operator pos:start="475:60" pos:end="475:60">*</operator><name pos:start="475:61" pos:end="475:61">k</name></expr>]</index></name></expr></argument>, <argument pos:start="475:65" pos:end="475:69"><expr pos:start="475:65" pos:end="475:69"><name pos:start="475:65" pos:end="475:69">index</name></expr></argument>, <argument pos:start="475:72" pos:end="475:75"><expr pos:start="475:72" pos:end="475:75"><name pos:start="475:72" pos:end="475:75">type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="475:78" pos:end="481:21">{<block_content pos:start="477:25" pos:end="479:34">

                        <expr_stmt pos:start="477:25" pos:end="477:89"><expr pos:start="477:25" pos:end="477:88"><call pos:start="477:25" pos:end="477:88"><name pos:start="477:25" pos:end="477:30">av_log</name><argument_list pos:start="477:31" pos:end="477:88">(<argument pos:start="477:32" pos:end="477:41"><expr pos:start="477:32" pos:end="477:41"><name pos:start="477:32" pos:end="477:41"><name pos:start="477:32" pos:end="477:32">h</name><operator pos:start="477:33" pos:end="477:34">-&gt;</operator><name pos:start="477:35" pos:end="477:35">s</name><operator pos:start="477:36" pos:end="477:36">.</operator><name pos:start="477:37" pos:end="477:41">avctx</name></name></expr></argument>, <argument pos:start="477:44" pos:end="477:55"><expr pos:start="477:44" pos:end="477:55"><name pos:start="477:44" pos:end="477:55">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="477:58" pos:end="477:87"><expr pos:start="477:58" pos:end="477:87"><literal type="string" pos:start="477:58" pos:end="477:87">"error while decoding block\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="479:25" pos:end="479:34">return <expr pos:start="479:32" pos:end="479:33"><operator pos:start="479:32" pos:end="479:32">-</operator><literal type="number" pos:start="479:33" pos:end="479:33">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="491:9" pos:end="527:9"><if pos:start="491:9" pos:end="527:9">if <condition pos:start="491:12" pos:end="491:25">(<expr pos:start="491:13" pos:end="491:24"><operator pos:start="491:13" pos:end="491:13">(</operator><name pos:start="491:14" pos:end="491:16">cbp</name> <operator pos:start="491:18" pos:end="491:18">&amp;</operator> <literal type="number" pos:start="491:20" pos:end="491:23">0x30</literal><operator pos:start="491:24" pos:end="491:24">)</operator></expr>)</condition> <block pos:start="491:27" pos:end="527:9">{<block_content pos:start="493:13" pos:end="525:13">

            <for pos:start="493:13" pos:end="503:13">for <control pos:start="493:17" pos:end="493:35">(<init pos:start="493:18" pos:end="493:23"><expr pos:start="493:18" pos:end="493:22"><name pos:start="493:18" pos:end="493:18">i</name> <operator pos:start="493:20" pos:end="493:20">=</operator> <literal type="number" pos:start="493:22" pos:end="493:22">0</literal></expr>;</init> <condition pos:start="493:25" pos:end="493:30"><expr pos:start="493:25" pos:end="493:29"><name pos:start="493:25" pos:end="493:25">i</name> <operator pos:start="493:27" pos:end="493:27">&lt;</operator> <literal type="number" pos:start="493:29" pos:end="493:29">2</literal></expr>;</condition> <incr pos:start="493:32" pos:end="493:34"><expr pos:start="493:32" pos:end="493:34"><operator pos:start="493:32" pos:end="493:33">++</operator><name pos:start="493:34" pos:end="493:34">i</name></expr></incr>)</control> <block pos:start="493:37" pos:end="503:13">{<block_content pos:start="495:15" pos:end="501:15">

              <if_stmt pos:start="495:15" pos:end="501:15"><if pos:start="495:15" pos:end="501:15">if <condition pos:start="495:18" pos:end="495:73">(<expr pos:start="495:19" pos:end="495:72"><call pos:start="495:19" pos:end="495:72"><name pos:start="495:19" pos:end="495:35">svq3_decode_block</name><argument_list pos:start="495:36" pos:end="495:72">(<argument pos:start="495:37" pos:end="495:42"><expr pos:start="495:37" pos:end="495:42"><operator pos:start="495:37" pos:end="495:37">&amp;</operator><name pos:start="495:38" pos:end="495:42"><name pos:start="495:38" pos:end="495:38">s</name><operator pos:start="495:39" pos:end="495:40">-&gt;</operator><name pos:start="495:41" pos:end="495:42">gb</name></name></expr></argument>, <argument pos:start="495:45" pos:end="495:65"><expr pos:start="495:45" pos:end="495:65"><operator pos:start="495:45" pos:end="495:45">&amp;</operator><name pos:start="495:46" pos:end="495:65"><name pos:start="495:46" pos:end="495:46">h</name><operator pos:start="495:47" pos:end="495:48">-&gt;</operator><name pos:start="495:49" pos:end="495:50">mb</name><index pos:start="495:51" pos:end="495:65">[<expr pos:start="495:52" pos:end="495:64"><literal type="number" pos:start="495:52" pos:end="495:53">16</literal><operator pos:start="495:54" pos:end="495:54">*</operator><operator pos:start="495:55" pos:end="495:55">(</operator><literal type="number" pos:start="495:56" pos:end="495:59">16</literal> <operator pos:start="495:59" pos:end="495:59">+</operator> <literal type="number" pos:start="495:61" pos:end="495:61">4</literal><operator pos:start="495:62" pos:end="495:62">*</operator><name pos:start="495:63" pos:end="495:63">i</name><operator pos:start="495:64" pos:end="495:64">)</operator></expr>]</index></name></expr></argument>, <argument pos:start="495:68" pos:end="495:68"><expr pos:start="495:68" pos:end="495:68"><literal type="number" pos:start="495:68" pos:end="495:68">0</literal></expr></argument>, <argument pos:start="495:71" pos:end="495:71"><expr pos:start="495:71" pos:end="495:71"><literal type="number" pos:start="495:71" pos:end="495:71">3</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="495:74" pos:end="501:15">{<block_content pos:start="497:17" pos:end="499:26">

                <expr_stmt pos:start="497:17" pos:end="497:91"><expr pos:start="497:17" pos:end="497:90"><call pos:start="497:17" pos:end="497:90"><name pos:start="497:17" pos:end="497:22">av_log</name><argument_list pos:start="497:23" pos:end="497:90">(<argument pos:start="497:24" pos:end="497:33"><expr pos:start="497:24" pos:end="497:33"><name pos:start="497:24" pos:end="497:33"><name pos:start="497:24" pos:end="497:24">h</name><operator pos:start="497:25" pos:end="497:26">-&gt;</operator><name pos:start="497:27" pos:end="497:27">s</name><operator pos:start="497:28" pos:end="497:28">.</operator><name pos:start="497:29" pos:end="497:33">avctx</name></name></expr></argument>, <argument pos:start="497:36" pos:end="497:47"><expr pos:start="497:36" pos:end="497:47"><name pos:start="497:36" pos:end="497:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="497:50" pos:end="497:89"><expr pos:start="497:50" pos:end="497:89"><literal type="string" pos:start="497:50" pos:end="497:89">"error while decoding chroma dc block\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="499:17" pos:end="499:26">return <expr pos:start="499:24" pos:end="499:25"><operator pos:start="499:24" pos:end="499:24">-</operator><literal type="number" pos:start="499:25" pos:end="499:25">1</literal></expr>;</return>

              </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>



            <if_stmt pos:start="507:13" pos:end="525:13"><if pos:start="507:13" pos:end="525:13">if <condition pos:start="507:16" pos:end="507:29">(<expr pos:start="507:17" pos:end="507:28"><operator pos:start="507:17" pos:end="507:17">(</operator><name pos:start="507:18" pos:end="507:20">cbp</name> <operator pos:start="507:22" pos:end="507:22">&amp;</operator> <literal type="number" pos:start="507:24" pos:end="507:27">0x20</literal><operator pos:start="507:28" pos:end="507:28">)</operator></expr>)</condition> <block pos:start="507:31" pos:end="525:13">{<block_content pos:start="509:17" pos:end="523:17">

                <for pos:start="509:17" pos:end="523:17">for <control pos:start="509:21" pos:end="509:39">(<init pos:start="509:22" pos:end="509:27"><expr pos:start="509:22" pos:end="509:26"><name pos:start="509:22" pos:end="509:22">i</name> <operator pos:start="509:24" pos:end="509:24">=</operator> <literal type="number" pos:start="509:26" pos:end="509:26">0</literal></expr>;</init> <condition pos:start="509:29" pos:end="509:34"><expr pos:start="509:29" pos:end="509:33"><name pos:start="509:29" pos:end="509:29">i</name> <operator pos:start="509:31" pos:end="509:31">&lt;</operator> <literal type="number" pos:start="509:33" pos:end="509:33">8</literal></expr>;</condition> <incr pos:start="509:36" pos:end="509:38"><expr pos:start="509:36" pos:end="509:38"><name pos:start="509:36" pos:end="509:36">i</name><operator pos:start="509:37" pos:end="509:38">++</operator></expr></incr>)</control> <block pos:start="509:41" pos:end="523:17">{<block_content pos:start="511:21" pos:end="521:21">

                    <expr_stmt pos:start="511:21" pos:end="511:63"><expr pos:start="511:21" pos:end="511:62"><name pos:start="511:21" pos:end="511:58"><name pos:start="511:21" pos:end="511:21">h</name><operator pos:start="511:22" pos:end="511:23">-&gt;</operator><name pos:start="511:24" pos:end="511:43">non_zero_count_cache</name><index pos:start="511:44" pos:end="511:58">[ <expr pos:start="511:46" pos:end="511:56"><name pos:start="511:46" pos:end="511:56"><name pos:start="511:46" pos:end="511:50">scan8</name><index pos:start="511:51" pos:end="511:56">[<expr pos:start="511:52" pos:end="511:55"><literal type="number" pos:start="511:52" pos:end="511:53">16</literal><operator pos:start="511:54" pos:end="511:54">+</operator><name pos:start="511:55" pos:end="511:55">i</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="511:60" pos:end="511:60">=</operator> <literal type="number" pos:start="511:62" pos:end="511:62">1</literal></expr>;</expr_stmt>



                    <if_stmt pos:start="515:21" pos:end="521:21"><if pos:start="515:21" pos:end="521:21">if <condition pos:start="515:24" pos:end="515:77">(<expr pos:start="515:25" pos:end="515:76"><call pos:start="515:25" pos:end="515:76"><name pos:start="515:25" pos:end="515:41">svq3_decode_block</name><argument_list pos:start="515:42" pos:end="515:76">(<argument pos:start="515:43" pos:end="515:48"><expr pos:start="515:43" pos:end="515:48"><operator pos:start="515:43" pos:end="515:43">&amp;</operator><name pos:start="515:44" pos:end="515:48"><name pos:start="515:44" pos:end="515:44">s</name><operator pos:start="515:45" pos:end="515:46">-&gt;</operator><name pos:start="515:47" pos:end="515:48">gb</name></name></expr></argument>, <argument pos:start="515:51" pos:end="515:69"><expr pos:start="515:51" pos:end="515:69"><operator pos:start="515:51" pos:end="515:51">&amp;</operator><name pos:start="515:52" pos:end="515:69"><name pos:start="515:52" pos:end="515:52">h</name><operator pos:start="515:53" pos:end="515:54">-&gt;</operator><name pos:start="515:55" pos:end="515:56">mb</name><index pos:start="515:57" pos:end="515:69">[<expr pos:start="515:58" pos:end="515:68"><literal type="number" pos:start="515:58" pos:end="515:59">16</literal><operator pos:start="515:60" pos:end="515:60">*</operator><operator pos:start="515:61" pos:end="515:61">(</operator><literal type="number" pos:start="515:62" pos:end="515:65">16</literal> <operator pos:start="515:65" pos:end="515:65">+</operator> <name pos:start="515:67" pos:end="515:67">i</name><operator pos:start="515:68" pos:end="515:68">)</operator></expr>]</index></name></expr></argument>, <argument pos:start="515:72" pos:end="515:72"><expr pos:start="515:72" pos:end="515:72"><literal type="number" pos:start="515:72" pos:end="515:72">1</literal></expr></argument>, <argument pos:start="515:75" pos:end="515:75"><expr pos:start="515:75" pos:end="515:75"><literal type="number" pos:start="515:75" pos:end="515:75">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="515:78" pos:end="521:21">{<block_content pos:start="517:25" pos:end="519:34">

                        <expr_stmt pos:start="517:25" pos:end="517:99"><expr pos:start="517:25" pos:end="517:98"><call pos:start="517:25" pos:end="517:98"><name pos:start="517:25" pos:end="517:30">av_log</name><argument_list pos:start="517:31" pos:end="517:98">(<argument pos:start="517:32" pos:end="517:41"><expr pos:start="517:32" pos:end="517:41"><name pos:start="517:32" pos:end="517:41"><name pos:start="517:32" pos:end="517:32">h</name><operator pos:start="517:33" pos:end="517:34">-&gt;</operator><name pos:start="517:35" pos:end="517:35">s</name><operator pos:start="517:36" pos:end="517:36">.</operator><name pos:start="517:37" pos:end="517:41">avctx</name></name></expr></argument>, <argument pos:start="517:44" pos:end="517:55"><expr pos:start="517:44" pos:end="517:55"><name pos:start="517:44" pos:end="517:55">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="517:58" pos:end="517:97"><expr pos:start="517:58" pos:end="517:97"><literal type="string" pos:start="517:58" pos:end="517:97">"error while decoding chroma ac block\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="519:25" pos:end="519:34">return <expr pos:start="519:32" pos:end="519:33"><operator pos:start="519:32" pos:end="519:32">-</operator><literal type="number" pos:start="519:33" pos:end="519:33">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="533:5" pos:end="533:16"><expr pos:start="533:5" pos:end="533:15"><name pos:start="533:5" pos:end="533:10"><name pos:start="533:5" pos:end="533:5">h</name><operator pos:start="533:6" pos:end="533:7">-&gt;</operator><name pos:start="533:8" pos:end="533:10">cbp</name></name><operator pos:start="533:11" pos:end="533:11">=</operator> <name pos:start="533:13" pos:end="533:15">cbp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="535:5" pos:end="535:48"><expr pos:start="535:5" pos:end="535:47"><name pos:start="535:5" pos:end="535:37"><name pos:start="535:5" pos:end="535:5">s</name><operator pos:start="535:6" pos:end="535:7">-&gt;</operator><name pos:start="535:8" pos:end="535:22">current_picture</name><operator pos:start="535:23" pos:end="535:23">.</operator><name pos:start="535:24" pos:end="535:30">mb_type</name><index pos:start="535:31" pos:end="535:37">[<expr pos:start="535:32" pos:end="535:36"><name pos:start="535:32" pos:end="535:36">mb_xy</name></expr>]</index></name> <operator pos:start="535:39" pos:end="535:39">=</operator> <name pos:start="535:41" pos:end="535:47">mb_type</name></expr>;</expr_stmt>



    <if_stmt pos:start="539:5" pos:end="543:5"><if pos:start="539:5" pos:end="543:5">if <condition pos:start="539:8" pos:end="539:26">(<expr pos:start="539:9" pos:end="539:25"><call pos:start="539:9" pos:end="539:25"><name pos:start="539:9" pos:end="539:16">IS_INTRA</name><argument_list pos:start="539:17" pos:end="539:25">(<argument pos:start="539:18" pos:end="539:24"><expr pos:start="539:18" pos:end="539:24"><name pos:start="539:18" pos:end="539:24">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="539:28" pos:end="543:5">{<block_content pos:start="541:9" pos:end="541:75">

        <expr_stmt pos:start="541:9" pos:end="541:75"><expr pos:start="541:9" pos:end="541:74"><name pos:start="541:9" pos:end="541:27"><name pos:start="541:9" pos:end="541:9">h</name><operator pos:start="541:10" pos:end="541:11">-&gt;</operator><name pos:start="541:12" pos:end="541:27">chroma_pred_mode</name></name> <operator pos:start="541:29" pos:end="541:29">=</operator> <call pos:start="541:31" pos:end="541:74"><name pos:start="541:31" pos:end="541:59">ff_h264_check_intra_pred_mode</name><argument_list pos:start="541:60" pos:end="541:74">(<argument pos:start="541:61" pos:end="541:61"><expr pos:start="541:61" pos:end="541:61"><name pos:start="541:61" pos:end="541:61">h</name></expr></argument>, <argument pos:start="541:64" pos:end="541:73"><expr pos:start="541:64" pos:end="541:73"><name pos:start="541:64" pos:end="541:73">DC_PRED8x8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="547:5" pos:end="547:13">return <expr pos:start="547:12" pos:end="547:12"><literal type="number" pos:start="547:12" pos:end="547:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
