<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7209.c" pos:tabs="8"><function pos:start="1:1" pos:end="459:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:29">tcg_out_op</name><parameter_list pos:start="1:30" pos:end="3:52">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:40">TCGContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:52"><decl pos:start="1:46" pos:end="1:52"><type pos:start="1:46" pos:end="1:52"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:52">opc</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:72"><decl pos:start="1:55" pos:end="1:72"><type pos:start="1:55" pos:end="1:72"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:66">TCGArg</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">args</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:51"><decl pos:start="3:31" pos:end="3:51"><type pos:start="3:31" pos:end="3:51"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:39">int</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:51">const_args</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="459:1">{<block_content pos:start="7:5" pos:end="457:5">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">c</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="457:5">switch <condition pos:start="11:12" pos:end="11:16">(<expr pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:15">opc</name></expr>)</condition> <block pos:start="11:18" pos:end="457:5">{<block_content pos:start="13:5" pos:end="455:20">

    <case pos:start="13:5" pos:end="13:26">case <expr pos:start="13:10" pos:end="13:25"><name pos:start="13:10" pos:end="13:25">INDEX_op_exit_tb</name></expr>:</case>

        <expr_stmt pos:start="15:9" pos:end="15:59"><expr pos:start="15:9" pos:end="15:58"><call pos:start="15:9" pos:end="15:58"><name pos:start="15:9" pos:end="15:20">tcg_out_movi</name><argument_list pos:start="15:21" pos:end="15:58">(<argument pos:start="15:22" pos:end="15:22"><expr pos:start="15:22" pos:end="15:22"><name pos:start="15:22" pos:end="15:22">s</name></expr></argument>, <argument pos:start="15:25" pos:end="15:36"><expr pos:start="15:25" pos:end="15:36"><name pos:start="15:25" pos:end="15:36">TCG_TYPE_PTR</name></expr></argument>, <argument pos:start="15:39" pos:end="15:48"><expr pos:start="15:39" pos:end="15:48"><name pos:start="15:39" pos:end="15:48">TCG_REG_I0</name></expr></argument>, <argument pos:start="15:51" pos:end="15:57"><expr pos:start="15:51" pos:end="15:57"><name pos:start="15:51" pos:end="15:57"><name pos:start="15:51" pos:end="15:54">args</name><index pos:start="15:55" pos:end="15:57">[<expr pos:start="15:56" pos:end="15:56"><literal type="number" pos:start="15:56" pos:end="15:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="19:33"><expr pos:start="17:9" pos:end="19:32"><call pos:start="17:9" pos:end="19:32"><name pos:start="17:9" pos:end="17:17">tcg_out32</name><argument_list pos:start="17:18" pos:end="19:32">(<argument pos:start="17:19" pos:end="17:19"><expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">s</name></expr></argument>, <argument pos:start="17:22" pos:end="19:31"><expr pos:start="17:22" pos:end="19:31"><name pos:start="17:22" pos:end="17:25">JMPL</name> <operator pos:start="17:27" pos:end="17:27">|</operator> <call pos:start="17:29" pos:end="17:47"><name pos:start="17:29" pos:end="17:35">INSN_RD</name><argument_list pos:start="17:36" pos:end="17:47">(<argument pos:start="17:37" pos:end="17:46"><expr pos:start="17:37" pos:end="17:46"><name pos:start="17:37" pos:end="17:46">TCG_REG_G0</name></expr></argument>)</argument_list></call> <operator pos:start="17:49" pos:end="17:49">|</operator> <call pos:start="17:51" pos:end="17:70"><name pos:start="17:51" pos:end="17:58">INSN_RS1</name><argument_list pos:start="17:59" pos:end="17:70">(<argument pos:start="17:60" pos:end="17:69"><expr pos:start="17:60" pos:end="17:69"><name pos:start="17:60" pos:end="17:69">TCG_REG_I7</name></expr></argument>)</argument_list></call> <operator pos:start="17:72" pos:end="17:72">|</operator>

                  <call pos:start="19:19" pos:end="19:31"><name pos:start="19:19" pos:end="19:28">INSN_IMM13</name><argument_list pos:start="19:29" pos:end="19:31">(<argument pos:start="19:30" pos:end="19:30"><expr pos:start="19:30" pos:end="19:30"><literal type="number" pos:start="19:30" pos:end="19:30">8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="23:44"><expr pos:start="21:9" pos:end="23:43"><call pos:start="21:9" pos:end="23:43"><name pos:start="21:9" pos:end="21:17">tcg_out32</name><argument_list pos:start="21:18" pos:end="23:43">(<argument pos:start="21:19" pos:end="21:19"><expr pos:start="21:19" pos:end="21:19"><name pos:start="21:19" pos:end="21:19">s</name></expr></argument>, <argument pos:start="21:22" pos:end="23:42"><expr pos:start="21:22" pos:end="23:42"><name pos:start="21:22" pos:end="21:28">RESTORE</name> <operator pos:start="21:30" pos:end="21:30">|</operator> <call pos:start="21:32" pos:end="21:50"><name pos:start="21:32" pos:end="21:38">INSN_RD</name><argument_list pos:start="21:39" pos:end="21:50">(<argument pos:start="21:40" pos:end="21:49"><expr pos:start="21:40" pos:end="21:49"><name pos:start="21:40" pos:end="21:49">TCG_REG_G0</name></expr></argument>)</argument_list></call> <operator pos:start="21:52" pos:end="21:52">|</operator> <call pos:start="21:54" pos:end="21:73"><name pos:start="21:54" pos:end="21:61">INSN_RS1</name><argument_list pos:start="21:62" pos:end="21:73">(<argument pos:start="21:63" pos:end="21:72"><expr pos:start="21:63" pos:end="21:72"><name pos:start="21:63" pos:end="21:72">TCG_REG_G0</name></expr></argument>)</argument_list></call> <operator pos:start="21:75" pos:end="21:75">|</operator>

                      <call pos:start="23:23" pos:end="23:42"><name pos:start="23:23" pos:end="23:30">INSN_RS2</name><argument_list pos:start="23:31" pos:end="23:42">(<argument pos:start="23:32" pos:end="23:41"><expr pos:start="23:32" pos:end="23:41"><name pos:start="23:32" pos:end="23:41">TCG_REG_G0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:26">case <expr pos:start="27:10" pos:end="27:25"><name pos:start="27:10" pos:end="27:25">INDEX_op_goto_tb</name></expr>:</case>

        <if_stmt pos:start="29:9" pos:end="63:9"><if pos:start="29:9" pos:end="53:9">if <condition pos:start="29:12" pos:end="29:29">(<expr pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:28">tb_jmp_offset</name></name></expr>)</condition> <block pos:start="29:31" pos:end="53:9">{<block_content pos:start="33:13" pos:end="51:66">

            <comment type="block" pos:start="31:13" pos:end="31:36">/* direct jump method */</comment>

            <if_stmt pos:start="33:13" pos:end="49:13"><if pos:start="33:13" pos:end="41:13">if <condition pos:start="33:16" pos:end="35:71">(<expr pos:start="33:17" pos:end="35:70"><call pos:start="33:17" pos:end="33:57"><name pos:start="33:17" pos:end="33:19">ABS</name><argument_list pos:start="33:20" pos:end="33:57">(<argument pos:start="33:21" pos:end="33:56"><expr pos:start="33:21" pos:end="33:56"><name pos:start="33:21" pos:end="33:27"><name pos:start="33:21" pos:end="33:24">args</name><index pos:start="33:25" pos:end="33:27">[<expr pos:start="33:26" pos:end="33:26"><literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr>]</index></name> <operator pos:start="33:29" pos:end="33:29">-</operator> <operator pos:start="33:31" pos:end="33:31">(</operator><name pos:start="33:32" pos:end="33:39">unsigned</name> <name pos:start="33:41" pos:end="33:44">long</name><operator pos:start="33:45" pos:end="33:45">)</operator><name pos:start="33:46" pos:end="33:56"><name pos:start="33:46" pos:end="33:46">s</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:56">code_ptr</name></name></expr></argument>)</argument_list></call> <operator pos:start="33:59" pos:end="33:60">==</operator>

                <operator pos:start="35:17" pos:end="35:17">(</operator><call pos:start="35:18" pos:end="35:58"><name pos:start="35:18" pos:end="35:20">ABS</name><argument_list pos:start="35:21" pos:end="35:58">(<argument pos:start="35:22" pos:end="35:57"><expr pos:start="35:22" pos:end="35:57"><name pos:start="35:22" pos:end="35:28"><name pos:start="35:22" pos:end="35:25">args</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">0</literal></expr>]</index></name> <operator pos:start="35:30" pos:end="35:30">-</operator> <operator pos:start="35:32" pos:end="35:32">(</operator><name pos:start="35:33" pos:end="35:40">unsigned</name> <name pos:start="35:42" pos:end="35:45">long</name><operator pos:start="35:46" pos:end="35:46">)</operator><name pos:start="35:47" pos:end="35:57"><name pos:start="35:47" pos:end="35:47">s</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:57">code_ptr</name></name></expr></argument>)</argument_list></call> <operator pos:start="35:60" pos:end="35:60">&amp;</operator> <literal type="number" pos:start="35:62" pos:end="35:69">0x1fffff</literal><operator pos:start="35:70" pos:end="35:70">)</operator></expr>)</condition> <block pos:start="35:73" pos:end="41:13">{<block_content pos:start="37:17" pos:end="39:76">

                <expr_stmt pos:start="37:17" pos:end="39:76"><expr pos:start="37:17" pos:end="39:75"><call pos:start="37:17" pos:end="39:75"><name pos:start="37:17" pos:end="37:25">tcg_out32</name><argument_list pos:start="37:26" pos:end="39:75">(<argument pos:start="37:27" pos:end="37:27"><expr pos:start="37:27" pos:end="37:27"><name pos:start="37:27" pos:end="37:27">s</name></expr></argument>, <argument pos:start="37:30" pos:end="39:74"><expr pos:start="37:30" pos:end="39:74"><name pos:start="37:30" pos:end="37:31">BA</name> <operator pos:start="37:33" pos:end="37:33">|</operator>

                          <call pos:start="39:27" pos:end="39:74"><name pos:start="39:27" pos:end="39:36">INSN_OFF22</name><argument_list pos:start="39:37" pos:end="39:74">(<argument pos:start="39:38" pos:end="39:73"><expr pos:start="39:38" pos:end="39:73"><name pos:start="39:38" pos:end="39:44"><name pos:start="39:38" pos:end="39:41">args</name><index pos:start="39:42" pos:end="39:44">[<expr pos:start="39:43" pos:end="39:43"><literal type="number" pos:start="39:43" pos:end="39:43">0</literal></expr>]</index></name> <operator pos:start="39:46" pos:end="39:46">-</operator> <operator pos:start="39:48" pos:end="39:48">(</operator><name pos:start="39:49" pos:end="39:56">unsigned</name> <name pos:start="39:58" pos:end="39:61">long</name><operator pos:start="39:62" pos:end="39:62">)</operator><name pos:start="39:63" pos:end="39:73"><name pos:start="39:63" pos:end="39:63">s</name><operator pos:start="39:64" pos:end="39:65">-&gt;</operator><name pos:start="39:66" pos:end="39:73">code_ptr</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="41:15" pos:end="49:13">else <block pos:start="41:20" pos:end="49:13">{<block_content pos:start="43:17" pos:end="47:48">

                <expr_stmt pos:start="43:17" pos:end="43:67"><expr pos:start="43:17" pos:end="43:66"><call pos:start="43:17" pos:end="43:66"><name pos:start="43:17" pos:end="43:28">tcg_out_movi</name><argument_list pos:start="43:29" pos:end="43:66">(<argument pos:start="43:30" pos:end="43:30"><expr pos:start="43:30" pos:end="43:30"><name pos:start="43:30" pos:end="43:30">s</name></expr></argument>, <argument pos:start="43:33" pos:end="43:44"><expr pos:start="43:33" pos:end="43:44"><name pos:start="43:33" pos:end="43:44">TCG_TYPE_PTR</name></expr></argument>, <argument pos:start="43:47" pos:end="43:56"><expr pos:start="43:47" pos:end="43:56"><name pos:start="43:47" pos:end="43:56">TCG_REG_I5</name></expr></argument>, <argument pos:start="43:59" pos:end="43:65"><expr pos:start="43:59" pos:end="43:65"><name pos:start="43:59" pos:end="43:65"><name pos:start="43:59" pos:end="43:62">args</name><index pos:start="43:63" pos:end="43:65">[<expr pos:start="43:64" pos:end="43:64"><literal type="number" pos:start="43:64" pos:end="43:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="47:48"><expr pos:start="45:17" pos:end="47:47"><call pos:start="45:17" pos:end="47:47"><name pos:start="45:17" pos:end="45:25">tcg_out32</name><argument_list pos:start="45:26" pos:end="47:47">(<argument pos:start="45:27" pos:end="45:27"><expr pos:start="45:27" pos:end="45:27"><name pos:start="45:27" pos:end="45:27">s</name></expr></argument>, <argument pos:start="45:30" pos:end="47:46"><expr pos:start="45:30" pos:end="47:46"><name pos:start="45:30" pos:end="45:33">JMPL</name> <operator pos:start="45:35" pos:end="45:35">|</operator> <call pos:start="45:37" pos:end="45:55"><name pos:start="45:37" pos:end="45:43">INSN_RD</name><argument_list pos:start="45:44" pos:end="45:55">(<argument pos:start="45:45" pos:end="45:54"><expr pos:start="45:45" pos:end="45:54"><name pos:start="45:45" pos:end="45:54">TCG_REG_G0</name></expr></argument>)</argument_list></call> <operator pos:start="45:57" pos:end="45:57">|</operator> <call pos:start="45:59" pos:end="45:78"><name pos:start="45:59" pos:end="45:66">INSN_RS1</name><argument_list pos:start="45:67" pos:end="45:78">(<argument pos:start="45:68" pos:end="45:77"><expr pos:start="45:68" pos:end="45:77"><name pos:start="45:68" pos:end="45:77">TCG_REG_I5</name></expr></argument>)</argument_list></call> <operator pos:start="45:80" pos:end="45:80">|</operator>

                          <call pos:start="47:27" pos:end="47:46"><name pos:start="47:27" pos:end="47:34">INSN_RS2</name><argument_list pos:start="47:35" pos:end="47:46">(<argument pos:start="47:36" pos:end="47:45"><expr pos:start="47:36" pos:end="47:45"><name pos:start="47:36" pos:end="47:45">TCG_REG_G0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:66"><expr pos:start="51:13" pos:end="51:65"><name pos:start="51:13" pos:end="51:37"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:28">tb_jmp_offset</name><index pos:start="51:29" pos:end="51:37">[<expr pos:start="51:30" pos:end="51:36"><name pos:start="51:30" pos:end="51:36"><name pos:start="51:30" pos:end="51:33">args</name><index pos:start="51:34" pos:end="51:36">[<expr pos:start="51:35" pos:end="51:35"><literal type="number" pos:start="51:35" pos:end="51:35">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="51:39" pos:end="51:39">=</operator> <name pos:start="51:41" pos:end="51:51"><name pos:start="51:41" pos:end="51:41">s</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:51">code_ptr</name></name> <operator pos:start="51:53" pos:end="51:53">-</operator> <name pos:start="51:55" pos:end="51:65"><name pos:start="51:55" pos:end="51:55">s</name><operator pos:start="51:56" pos:end="51:57">-&gt;</operator><name pos:start="51:58" pos:end="51:65">code_buf</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="53:11" pos:end="63:9">else <block pos:start="53:16" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:44">

            <comment type="block" pos:start="55:13" pos:end="55:38">/* indirect jump method */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:83"><expr pos:start="57:13" pos:end="57:82"><call pos:start="57:13" pos:end="57:82"><name pos:start="57:13" pos:end="57:26">tcg_out_ld_ptr</name><argument_list pos:start="57:27" pos:end="57:82">(<argument pos:start="57:28" pos:end="57:28"><expr pos:start="57:28" pos:end="57:28"><name pos:start="57:28" pos:end="57:28">s</name></expr></argument>, <argument pos:start="57:31" pos:end="57:40"><expr pos:start="57:31" pos:end="57:40"><name pos:start="57:31" pos:end="57:40">TCG_REG_I5</name></expr></argument>, <argument pos:start="57:43" pos:end="57:81"><expr pos:start="57:43" pos:end="57:81"><operator pos:start="57:43" pos:end="57:43">(</operator><name pos:start="57:44" pos:end="57:58">tcg_target_long</name><operator pos:start="57:59" pos:end="57:59">)</operator><operator pos:start="57:60" pos:end="57:60">(</operator><name pos:start="57:61" pos:end="57:70"><name pos:start="57:61" pos:end="57:61">s</name><operator pos:start="57:62" pos:end="57:63">-&gt;</operator><name pos:start="57:64" pos:end="57:70">tb_next</name></name> <operator pos:start="57:72" pos:end="57:72">+</operator> <name pos:start="57:74" pos:end="57:80"><name pos:start="57:74" pos:end="57:77">args</name><index pos:start="57:78" pos:end="57:80">[<expr pos:start="57:79" pos:end="57:79"><literal type="number" pos:start="57:79" pos:end="57:79">0</literal></expr>]</index></name><operator pos:start="57:81" pos:end="57:81">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="61:44"><expr pos:start="59:13" pos:end="61:43"><call pos:start="59:13" pos:end="61:43"><name pos:start="59:13" pos:end="59:21">tcg_out32</name><argument_list pos:start="59:22" pos:end="61:43">(<argument pos:start="59:23" pos:end="59:23"><expr pos:start="59:23" pos:end="59:23"><name pos:start="59:23" pos:end="59:23">s</name></expr></argument>, <argument pos:start="59:26" pos:end="61:42"><expr pos:start="59:26" pos:end="61:42"><name pos:start="59:26" pos:end="59:29">JMPL</name> <operator pos:start="59:31" pos:end="59:31">|</operator> <call pos:start="59:33" pos:end="59:51"><name pos:start="59:33" pos:end="59:39">INSN_RD</name><argument_list pos:start="59:40" pos:end="59:51">(<argument pos:start="59:41" pos:end="59:50"><expr pos:start="59:41" pos:end="59:50"><name pos:start="59:41" pos:end="59:50">TCG_REG_G0</name></expr></argument>)</argument_list></call> <operator pos:start="59:53" pos:end="59:53">|</operator> <call pos:start="59:55" pos:end="59:74"><name pos:start="59:55" pos:end="59:62">INSN_RS1</name><argument_list pos:start="59:63" pos:end="59:74">(<argument pos:start="59:64" pos:end="59:73"><expr pos:start="59:64" pos:end="59:73"><name pos:start="59:64" pos:end="59:73">TCG_REG_I5</name></expr></argument>)</argument_list></call> <operator pos:start="59:76" pos:end="59:76">|</operator>

                      <call pos:start="61:23" pos:end="61:42"><name pos:start="61:23" pos:end="61:30">INSN_RS2</name><argument_list pos:start="61:31" pos:end="61:42">(<argument pos:start="61:32" pos:end="61:41"><expr pos:start="61:32" pos:end="61:41"><name pos:start="61:32" pos:end="61:41">TCG_REG_G0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:23"><expr pos:start="65:9" pos:end="65:22"><call pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:19">tcg_out_nop</name><argument_list pos:start="65:20" pos:end="65:22">(<argument pos:start="65:21" pos:end="65:21"><expr pos:start="65:21" pos:end="65:21"><name pos:start="65:21" pos:end="65:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:63"><expr pos:start="67:9" pos:end="67:62"><name pos:start="67:9" pos:end="67:34"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:25">tb_next_offset</name><index pos:start="67:26" pos:end="67:34">[<expr pos:start="67:27" pos:end="67:33"><name pos:start="67:27" pos:end="67:33"><name pos:start="67:27" pos:end="67:30">args</name><index pos:start="67:31" pos:end="67:33">[<expr pos:start="67:32" pos:end="67:32"><literal type="number" pos:start="67:32" pos:end="67:32">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="67:36" pos:end="67:36">=</operator> <name pos:start="67:38" pos:end="67:48"><name pos:start="67:38" pos:end="67:38">s</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:48">code_ptr</name></name> <operator pos:start="67:50" pos:end="67:50">-</operator> <name pos:start="67:52" pos:end="67:62"><name pos:start="67:52" pos:end="67:52">s</name><operator pos:start="67:53" pos:end="67:54">-&gt;</operator><name pos:start="67:55" pos:end="67:62">code_buf</name></name></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:23">case <expr pos:start="71:10" pos:end="71:22"><name pos:start="71:10" pos:end="71:22">INDEX_op_call</name></expr>:</case>

        <if_stmt pos:start="73:9" pos:end="93:9"><if pos:start="73:9" pos:end="83:9">if <condition pos:start="73:12" pos:end="73:26">(<expr pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:22">const_args</name><index pos:start="73:23" pos:end="73:25">[<expr pos:start="73:24" pos:end="73:24"><literal type="number" pos:start="73:24" pos:end="73:24">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="73:28" pos:end="83:9">{<block_content pos:start="75:13" pos:end="81:27">

            <expr_stmt pos:start="75:13" pos:end="79:48"><expr pos:start="75:13" pos:end="79:47"><call pos:start="75:13" pos:end="79:47"><name pos:start="75:13" pos:end="75:21">tcg_out32</name><argument_list pos:start="75:22" pos:end="79:47">(<argument pos:start="75:23" pos:end="75:23"><expr pos:start="75:23" pos:end="75:23"><name pos:start="75:23" pos:end="75:23">s</name></expr></argument>, <argument pos:start="75:26" pos:end="79:46"><expr pos:start="75:26" pos:end="79:46"><name pos:start="75:26" pos:end="75:29">CALL</name> <operator pos:start="75:31" pos:end="75:31">|</operator> <operator pos:start="75:33" pos:end="75:33">(</operator><operator pos:start="75:34" pos:end="75:34">(</operator><operator pos:start="75:35" pos:end="75:35">(</operator><operator pos:start="75:36" pos:end="75:36">(</operator><name pos:start="75:37" pos:end="75:52">tcg_target_ulong</name><operator pos:start="75:53" pos:end="75:53">)</operator><name pos:start="75:54" pos:end="75:60"><name pos:start="75:54" pos:end="75:57">args</name><index pos:start="75:58" pos:end="75:60">[<expr pos:start="75:59" pos:end="75:59"><literal type="number" pos:start="75:59" pos:end="75:59">0</literal></expr>]</index></name>

                                  <operator pos:start="77:35" pos:end="77:35">-</operator> <operator pos:start="77:37" pos:end="77:37">(</operator><name pos:start="77:38" pos:end="77:53">tcg_target_ulong</name><operator pos:start="77:54" pos:end="77:54">)</operator><name pos:start="77:55" pos:end="77:65"><name pos:start="77:55" pos:end="77:55">s</name><operator pos:start="77:56" pos:end="77:57">-&gt;</operator><name pos:start="77:58" pos:end="77:65">code_ptr</name></name><operator pos:start="77:66" pos:end="77:66">)</operator> <operator pos:start="77:68" pos:end="77:69">&gt;&gt;</operator> <literal type="number" pos:start="77:71" pos:end="77:71">2</literal><operator pos:start="77:72" pos:end="77:72">)</operator>

                                 <operator pos:start="79:34" pos:end="79:34">&amp;</operator> <literal type="number" pos:start="79:36" pos:end="79:45">0x3fffffff</literal><operator pos:start="79:46" pos:end="79:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:27"><expr pos:start="81:13" pos:end="81:26"><call pos:start="81:13" pos:end="81:26"><name pos:start="81:13" pos:end="81:23">tcg_out_nop</name><argument_list pos:start="81:24" pos:end="81:26">(<argument pos:start="81:25" pos:end="81:25"><expr pos:start="81:25" pos:end="81:25"><name pos:start="81:25" pos:end="81:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="83:11" pos:end="93:9">else <block pos:start="83:16" pos:end="93:9">{<block_content pos:start="85:13" pos:end="91:27">

            <expr_stmt pos:start="85:13" pos:end="85:83"><expr pos:start="85:13" pos:end="85:82"><call pos:start="85:13" pos:end="85:82"><name pos:start="85:13" pos:end="85:26">tcg_out_ld_ptr</name><argument_list pos:start="85:27" pos:end="85:82">(<argument pos:start="85:28" pos:end="85:28"><expr pos:start="85:28" pos:end="85:28"><name pos:start="85:28" pos:end="85:28">s</name></expr></argument>, <argument pos:start="85:31" pos:end="85:40"><expr pos:start="85:31" pos:end="85:40"><name pos:start="85:31" pos:end="85:40">TCG_REG_O7</name></expr></argument>, <argument pos:start="85:43" pos:end="85:81"><expr pos:start="85:43" pos:end="85:81"><operator pos:start="85:43" pos:end="85:43">(</operator><name pos:start="85:44" pos:end="85:58">tcg_target_long</name><operator pos:start="85:59" pos:end="85:59">)</operator><operator pos:start="85:60" pos:end="85:60">(</operator><name pos:start="85:61" pos:end="85:70"><name pos:start="85:61" pos:end="85:61">s</name><operator pos:start="85:62" pos:end="85:63">-&gt;</operator><name pos:start="85:64" pos:end="85:70">tb_next</name></name> <operator pos:start="85:72" pos:end="85:72">+</operator> <name pos:start="85:74" pos:end="85:80"><name pos:start="85:74" pos:end="85:77">args</name><index pos:start="85:78" pos:end="85:80">[<expr pos:start="85:79" pos:end="85:79"><literal type="number" pos:start="85:79" pos:end="85:79">0</literal></expr>]</index></name><operator pos:start="85:81" pos:end="85:81">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="89:44"><expr pos:start="87:13" pos:end="89:43"><call pos:start="87:13" pos:end="89:43"><name pos:start="87:13" pos:end="87:21">tcg_out32</name><argument_list pos:start="87:22" pos:end="89:43">(<argument pos:start="87:23" pos:end="87:23"><expr pos:start="87:23" pos:end="87:23"><name pos:start="87:23" pos:end="87:23">s</name></expr></argument>, <argument pos:start="87:26" pos:end="89:42"><expr pos:start="87:26" pos:end="89:42"><name pos:start="87:26" pos:end="87:29">JMPL</name> <operator pos:start="87:31" pos:end="87:31">|</operator> <call pos:start="87:33" pos:end="87:51"><name pos:start="87:33" pos:end="87:39">INSN_RD</name><argument_list pos:start="87:40" pos:end="87:51">(<argument pos:start="87:41" pos:end="87:50"><expr pos:start="87:41" pos:end="87:50"><name pos:start="87:41" pos:end="87:50">TCG_REG_O7</name></expr></argument>)</argument_list></call> <operator pos:start="87:53" pos:end="87:53">|</operator> <call pos:start="87:55" pos:end="87:74"><name pos:start="87:55" pos:end="87:62">INSN_RS1</name><argument_list pos:start="87:63" pos:end="87:74">(<argument pos:start="87:64" pos:end="87:73"><expr pos:start="87:64" pos:end="87:73"><name pos:start="87:64" pos:end="87:73">TCG_REG_O7</name></expr></argument>)</argument_list></call> <operator pos:start="87:76" pos:end="87:76">|</operator>

                      <call pos:start="89:23" pos:end="89:42"><name pos:start="89:23" pos:end="89:30">INSN_RS2</name><argument_list pos:start="89:31" pos:end="89:42">(<argument pos:start="89:32" pos:end="89:41"><expr pos:start="89:32" pos:end="89:41"><name pos:start="89:32" pos:end="89:41">TCG_REG_G0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:27"><expr pos:start="91:13" pos:end="91:26"><call pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:23">tcg_out_nop</name><argument_list pos:start="91:24" pos:end="91:26">(<argument pos:start="91:25" pos:end="91:25"><expr pos:start="91:25" pos:end="91:25"><name pos:start="91:25" pos:end="91:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:22">case <expr pos:start="97:10" pos:end="97:21"><name pos:start="97:10" pos:end="97:21">INDEX_op_jmp</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:47"><expr pos:start="99:9" pos:end="99:46"><call pos:start="99:9" pos:end="99:46"><name pos:start="99:9" pos:end="99:15">fprintf</name><argument_list pos:start="99:16" pos:end="99:46">(<argument pos:start="99:17" pos:end="99:22"><expr pos:start="99:17" pos:end="99:22"><name pos:start="99:17" pos:end="99:22">stderr</name></expr></argument>, <argument pos:start="99:25" pos:end="99:45"><expr pos:start="99:25" pos:end="99:45"><literal type="string" pos:start="99:25" pos:end="99:45">"unimplemented jmp\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:21">case <expr pos:start="103:10" pos:end="103:20"><name pos:start="103:10" pos:end="103:20">INDEX_op_br</name></expr>:</case>

        <expr_stmt pos:start="105:9" pos:end="105:46"><expr pos:start="105:9" pos:end="105:45"><call pos:start="105:9" pos:end="105:45"><name pos:start="105:9" pos:end="105:15">fprintf</name><argument_list pos:start="105:16" pos:end="105:45">(<argument pos:start="105:17" pos:end="105:22"><expr pos:start="105:17" pos:end="105:22"><name pos:start="105:17" pos:end="105:22">stderr</name></expr></argument>, <argument pos:start="105:25" pos:end="105:44"><expr pos:start="105:25" pos:end="105:44"><literal type="string" pos:start="105:25" pos:end="105:44">"unimplemented br\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    <case pos:start="109:5" pos:end="109:27">case <expr pos:start="109:10" pos:end="109:26"><name pos:start="109:10" pos:end="109:26">INDEX_op_movi_i32</name></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:66"><expr pos:start="111:9" pos:end="111:65"><call pos:start="111:9" pos:end="111:65"><name pos:start="111:9" pos:end="111:20">tcg_out_movi</name><argument_list pos:start="111:21" pos:end="111:65">(<argument pos:start="111:22" pos:end="111:22"><expr pos:start="111:22" pos:end="111:22"><name pos:start="111:22" pos:end="111:22">s</name></expr></argument>, <argument pos:start="111:25" pos:end="111:36"><expr pos:start="111:25" pos:end="111:36"><name pos:start="111:25" pos:end="111:36">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="111:39" pos:end="111:45"><expr pos:start="111:39" pos:end="111:45"><name pos:start="111:39" pos:end="111:45"><name pos:start="111:39" pos:end="111:42">args</name><index pos:start="111:43" pos:end="111:45">[<expr pos:start="111:44" pos:end="111:44"><literal type="number" pos:start="111:44" pos:end="111:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="111:48" pos:end="111:64"><expr pos:start="111:48" pos:end="111:64"><operator pos:start="111:48" pos:end="111:48">(</operator><name pos:start="111:49" pos:end="111:56">uint32_t</name><operator pos:start="111:57" pos:end="111:57">)</operator><name pos:start="111:58" pos:end="111:64"><name pos:start="111:58" pos:end="111:61">args</name><index pos:start="111:62" pos:end="111:64">[<expr pos:start="111:63" pos:end="111:63"><literal type="number" pos:start="111:63" pos:end="111:63">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="132:0">break;</break>



<cpp:if pos:start="117:1" pos:end="117:55">#<cpp:directive pos:start="117:2" pos:end="117:3">if</cpp:directive> <expr pos:start="117:5" pos:end="117:55"><call pos:start="117:5" pos:end="117:25"><name pos:start="117:5" pos:end="117:11">defined</name><argument_list pos:start="117:12" pos:end="117:25">(<argument pos:start="117:13" pos:end="117:24"><expr pos:start="117:13" pos:end="117:24"><name pos:start="117:13" pos:end="117:24">__sparc_v9__</name></expr></argument>)</argument_list></call> <operator pos:start="117:27" pos:end="117:28">&amp;&amp;</operator> <operator pos:start="117:30" pos:end="117:30">!</operator><call pos:start="117:31" pos:end="117:55"><name pos:start="117:31" pos:end="117:37">defined</name><argument_list pos:start="117:38" pos:end="117:55">(<argument pos:start="117:39" pos:end="117:54"><expr pos:start="117:39" pos:end="117:54"><name pos:start="117:39" pos:end="117:54">__sparc_v8plus__</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define pos:start="119:1" pos:end="123:44">#<cpp:directive pos:start="119:2" pos:end="119:7">define</cpp:directive> <cpp:macro pos:start="119:9" pos:end="119:19"><name pos:start="119:9" pos:end="119:16">OP_32_64</name><parameter_list pos:start="119:17" pos:end="119:19">(<parameter pos:start="119:18" pos:end="119:18"><type pos:start="119:18" pos:end="119:18"><name pos:start="119:18" pos:end="119:18">x</name></type></parameter>)</parameter_list></cpp:macro>                             \

        <cpp:value pos:start="121:9" pos:end="123:44">glue(glue(case INDEX_op_, x), _i32:)    \

        glue(glue(case INDEX_op_, x), _i64:)</cpp:value></cpp:define>

<cpp:else pos:start="125:1" pos:end="125:5">#<cpp:directive pos:start="125:2" pos:end="125:5">else</cpp:directive></cpp:else>

<cpp:define pos:start="127:1" pos:end="129:44">#<cpp:directive pos:start="127:2" pos:end="127:7">define</cpp:directive> <cpp:macro pos:start="127:9" pos:end="127:19"><name pos:start="127:9" pos:end="127:16">OP_32_64</name><parameter_list pos:start="127:17" pos:end="127:19">(<parameter pos:start="127:18" pos:end="127:18"><type pos:start="127:18" pos:end="127:18"><name pos:start="127:18" pos:end="127:18">x</name></type></parameter>)</parameter_list></cpp:macro>                             \

        <cpp:value pos:start="129:9" pos:end="129:44">glue(glue(case INDEX_op_, x), _i32:)</cpp:value></cpp:define>

<cpp:endif pos:start="131:1" pos:end="131:6">#<cpp:directive pos:start="131:2" pos:end="131:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="133:9" pos:end="133:23"><expr pos:start="133:9" pos:end="133:22"><call pos:start="133:9" pos:end="133:22"><name pos:start="133:9" pos:end="133:16">OP_32_64</name><argument_list pos:start="133:17" pos:end="133:22">(<argument pos:start="133:18" pos:end="133:21"><expr pos:start="133:18" pos:end="133:21"><name pos:start="133:18" pos:end="133:21">ld8u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:57"><expr pos:start="135:9" pos:end="135:56"><call pos:start="135:9" pos:end="135:56"><name pos:start="135:9" pos:end="135:20">tcg_out_ldst</name><argument_list pos:start="135:21" pos:end="135:56">(<argument pos:start="135:22" pos:end="135:22"><expr pos:start="135:22" pos:end="135:22"><name pos:start="135:22" pos:end="135:22">s</name></expr></argument>, <argument pos:start="135:25" pos:end="135:31"><expr pos:start="135:25" pos:end="135:31"><name pos:start="135:25" pos:end="135:31"><name pos:start="135:25" pos:end="135:28">args</name><index pos:start="135:29" pos:end="135:31">[<expr pos:start="135:30" pos:end="135:30"><literal type="number" pos:start="135:30" pos:end="135:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="135:34" pos:end="135:40"><expr pos:start="135:34" pos:end="135:40"><name pos:start="135:34" pos:end="135:40"><name pos:start="135:34" pos:end="135:37">args</name><index pos:start="135:38" pos:end="135:40">[<expr pos:start="135:39" pos:end="135:39"><literal type="number" pos:start="135:39" pos:end="135:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="135:43" pos:end="135:49"><expr pos:start="135:43" pos:end="135:49"><name pos:start="135:43" pos:end="135:49"><name pos:start="135:43" pos:end="135:46">args</name><index pos:start="135:47" pos:end="135:49">[<expr pos:start="135:48" pos:end="135:48"><literal type="number" pos:start="135:48" pos:end="135:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="135:52" pos:end="135:55"><expr pos:start="135:52" pos:end="135:55"><name pos:start="135:52" pos:end="135:55">LDUB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

        <expr_stmt pos:start="139:9" pos:end="139:23"><expr pos:start="139:9" pos:end="139:22"><call pos:start="139:9" pos:end="139:22"><name pos:start="139:9" pos:end="139:16">OP_32_64</name><argument_list pos:start="139:17" pos:end="139:22">(<argument pos:start="139:18" pos:end="139:21"><expr pos:start="139:18" pos:end="139:21"><name pos:start="139:18" pos:end="139:21">ld8s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:57"><expr pos:start="141:9" pos:end="141:56"><call pos:start="141:9" pos:end="141:56"><name pos:start="141:9" pos:end="141:20">tcg_out_ldst</name><argument_list pos:start="141:21" pos:end="141:56">(<argument pos:start="141:22" pos:end="141:22"><expr pos:start="141:22" pos:end="141:22"><name pos:start="141:22" pos:end="141:22">s</name></expr></argument>, <argument pos:start="141:25" pos:end="141:31"><expr pos:start="141:25" pos:end="141:31"><name pos:start="141:25" pos:end="141:31"><name pos:start="141:25" pos:end="141:28">args</name><index pos:start="141:29" pos:end="141:31">[<expr pos:start="141:30" pos:end="141:30"><literal type="number" pos:start="141:30" pos:end="141:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="141:34" pos:end="141:40"><expr pos:start="141:34" pos:end="141:40"><name pos:start="141:34" pos:end="141:40"><name pos:start="141:34" pos:end="141:37">args</name><index pos:start="141:38" pos:end="141:40">[<expr pos:start="141:39" pos:end="141:39"><literal type="number" pos:start="141:39" pos:end="141:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="141:43" pos:end="141:49"><expr pos:start="141:43" pos:end="141:49"><name pos:start="141:43" pos:end="141:49"><name pos:start="141:43" pos:end="141:46">args</name><index pos:start="141:47" pos:end="141:49">[<expr pos:start="141:48" pos:end="141:48"><literal type="number" pos:start="141:48" pos:end="141:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="141:52" pos:end="141:55"><expr pos:start="141:52" pos:end="141:55"><name pos:start="141:52" pos:end="141:55">LDSB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="143:9" pos:end="143:14">break;</break>

        <expr_stmt pos:start="145:9" pos:end="145:24"><expr pos:start="145:9" pos:end="145:23"><call pos:start="145:9" pos:end="145:23"><name pos:start="145:9" pos:end="145:16">OP_32_64</name><argument_list pos:start="145:17" pos:end="145:23">(<argument pos:start="145:18" pos:end="145:22"><expr pos:start="145:18" pos:end="145:22"><name pos:start="145:18" pos:end="145:22">ld16u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:57"><expr pos:start="147:9" pos:end="147:56"><call pos:start="147:9" pos:end="147:56"><name pos:start="147:9" pos:end="147:20">tcg_out_ldst</name><argument_list pos:start="147:21" pos:end="147:56">(<argument pos:start="147:22" pos:end="147:22"><expr pos:start="147:22" pos:end="147:22"><name pos:start="147:22" pos:end="147:22">s</name></expr></argument>, <argument pos:start="147:25" pos:end="147:31"><expr pos:start="147:25" pos:end="147:31"><name pos:start="147:25" pos:end="147:31"><name pos:start="147:25" pos:end="147:28">args</name><index pos:start="147:29" pos:end="147:31">[<expr pos:start="147:30" pos:end="147:30"><literal type="number" pos:start="147:30" pos:end="147:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="147:34" pos:end="147:40"><expr pos:start="147:34" pos:end="147:40"><name pos:start="147:34" pos:end="147:40"><name pos:start="147:34" pos:end="147:37">args</name><index pos:start="147:38" pos:end="147:40">[<expr pos:start="147:39" pos:end="147:39"><literal type="number" pos:start="147:39" pos:end="147:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="147:43" pos:end="147:49"><expr pos:start="147:43" pos:end="147:49"><name pos:start="147:43" pos:end="147:49"><name pos:start="147:43" pos:end="147:46">args</name><index pos:start="147:47" pos:end="147:49">[<expr pos:start="147:48" pos:end="147:48"><literal type="number" pos:start="147:48" pos:end="147:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="147:52" pos:end="147:55"><expr pos:start="147:52" pos:end="147:55"><name pos:start="147:52" pos:end="147:55">LDUH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="149:9" pos:end="149:14">break;</break>

        <expr_stmt pos:start="151:9" pos:end="151:24"><expr pos:start="151:9" pos:end="151:23"><call pos:start="151:9" pos:end="151:23"><name pos:start="151:9" pos:end="151:16">OP_32_64</name><argument_list pos:start="151:17" pos:end="151:23">(<argument pos:start="151:18" pos:end="151:22"><expr pos:start="151:18" pos:end="151:22"><name pos:start="151:18" pos:end="151:22">ld16s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:57"><expr pos:start="153:9" pos:end="153:56"><call pos:start="153:9" pos:end="153:56"><name pos:start="153:9" pos:end="153:20">tcg_out_ldst</name><argument_list pos:start="153:21" pos:end="153:56">(<argument pos:start="153:22" pos:end="153:22"><expr pos:start="153:22" pos:end="153:22"><name pos:start="153:22" pos:end="153:22">s</name></expr></argument>, <argument pos:start="153:25" pos:end="153:31"><expr pos:start="153:25" pos:end="153:31"><name pos:start="153:25" pos:end="153:31"><name pos:start="153:25" pos:end="153:28">args</name><index pos:start="153:29" pos:end="153:31">[<expr pos:start="153:30" pos:end="153:30"><literal type="number" pos:start="153:30" pos:end="153:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:34" pos:end="153:40"><expr pos:start="153:34" pos:end="153:40"><name pos:start="153:34" pos:end="153:40"><name pos:start="153:34" pos:end="153:37">args</name><index pos:start="153:38" pos:end="153:40">[<expr pos:start="153:39" pos:end="153:39"><literal type="number" pos:start="153:39" pos:end="153:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:43" pos:end="153:49"><expr pos:start="153:43" pos:end="153:49"><name pos:start="153:43" pos:end="153:49"><name pos:start="153:43" pos:end="153:46">args</name><index pos:start="153:47" pos:end="153:49">[<expr pos:start="153:48" pos:end="153:48"><literal type="number" pos:start="153:48" pos:end="153:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:52" pos:end="153:55"><expr pos:start="153:52" pos:end="153:55"><name pos:start="153:52" pos:end="153:55">LDSH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="155:9" pos:end="155:14">break;</break>

    <case pos:start="157:5" pos:end="160:0">case <expr pos:start="157:10" pos:end="157:24"><name pos:start="157:10" pos:end="157:24">INDEX_op_ld_i32</name></expr>:</case>

<cpp:if pos:start="159:1" pos:end="159:55">#<cpp:directive pos:start="159:2" pos:end="159:3">if</cpp:directive> <expr pos:start="159:5" pos:end="159:55"><call pos:start="159:5" pos:end="159:25"><name pos:start="159:5" pos:end="159:11">defined</name><argument_list pos:start="159:12" pos:end="159:25">(<argument pos:start="159:13" pos:end="159:24"><expr pos:start="159:13" pos:end="159:24"><name pos:start="159:13" pos:end="159:24">__sparc_v9__</name></expr></argument>)</argument_list></call> <operator pos:start="159:27" pos:end="159:28">&amp;&amp;</operator> <operator pos:start="159:30" pos:end="159:30">!</operator><call pos:start="159:31" pos:end="159:55"><name pos:start="159:31" pos:end="159:37">defined</name><argument_list pos:start="159:38" pos:end="159:55">(<argument pos:start="159:39" pos:end="159:54"><expr pos:start="159:39" pos:end="159:54"><name pos:start="159:39" pos:end="159:54">__sparc_v8plus__</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="161:5" pos:end="164:0">case <expr pos:start="161:10" pos:end="161:27"><name pos:start="161:10" pos:end="161:27">INDEX_op_ld32u_i64</name></expr>:</case>

<cpp:endif pos:start="163:1" pos:end="163:6">#<cpp:directive pos:start="163:2" pos:end="163:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="165:9" pos:end="165:57"><expr pos:start="165:9" pos:end="165:56"><call pos:start="165:9" pos:end="165:56"><name pos:start="165:9" pos:end="165:20">tcg_out_ldst</name><argument_list pos:start="165:21" pos:end="165:56">(<argument pos:start="165:22" pos:end="165:22"><expr pos:start="165:22" pos:end="165:22"><name pos:start="165:22" pos:end="165:22">s</name></expr></argument>, <argument pos:start="165:25" pos:end="165:31"><expr pos:start="165:25" pos:end="165:31"><name pos:start="165:25" pos:end="165:31"><name pos:start="165:25" pos:end="165:28">args</name><index pos:start="165:29" pos:end="165:31">[<expr pos:start="165:30" pos:end="165:30"><literal type="number" pos:start="165:30" pos:end="165:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:34" pos:end="165:40"><expr pos:start="165:34" pos:end="165:40"><name pos:start="165:34" pos:end="165:40"><name pos:start="165:34" pos:end="165:37">args</name><index pos:start="165:38" pos:end="165:40">[<expr pos:start="165:39" pos:end="165:39"><literal type="number" pos:start="165:39" pos:end="165:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:43" pos:end="165:49"><expr pos:start="165:43" pos:end="165:49"><name pos:start="165:43" pos:end="165:49"><name pos:start="165:43" pos:end="165:46">args</name><index pos:start="165:47" pos:end="165:49">[<expr pos:start="165:48" pos:end="165:48"><literal type="number" pos:start="165:48" pos:end="165:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:52" pos:end="165:55"><expr pos:start="165:52" pos:end="165:55"><name pos:start="165:52" pos:end="165:55">LDUW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="167:9" pos:end="167:14">break;</break>

        <expr_stmt pos:start="169:9" pos:end="169:22"><expr pos:start="169:9" pos:end="169:21"><call pos:start="169:9" pos:end="169:21"><name pos:start="169:9" pos:end="169:16">OP_32_64</name><argument_list pos:start="169:17" pos:end="169:21">(<argument pos:start="169:18" pos:end="169:20"><expr pos:start="169:18" pos:end="169:20"><name pos:start="169:18" pos:end="169:20">st8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:56"><expr pos:start="171:9" pos:end="171:55"><call pos:start="171:9" pos:end="171:55"><name pos:start="171:9" pos:end="171:20">tcg_out_ldst</name><argument_list pos:start="171:21" pos:end="171:55">(<argument pos:start="171:22" pos:end="171:22"><expr pos:start="171:22" pos:end="171:22"><name pos:start="171:22" pos:end="171:22">s</name></expr></argument>, <argument pos:start="171:25" pos:end="171:31"><expr pos:start="171:25" pos:end="171:31"><name pos:start="171:25" pos:end="171:31"><name pos:start="171:25" pos:end="171:28">args</name><index pos:start="171:29" pos:end="171:31">[<expr pos:start="171:30" pos:end="171:30"><literal type="number" pos:start="171:30" pos:end="171:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="171:34" pos:end="171:40"><expr pos:start="171:34" pos:end="171:40"><name pos:start="171:34" pos:end="171:40"><name pos:start="171:34" pos:end="171:37">args</name><index pos:start="171:38" pos:end="171:40">[<expr pos:start="171:39" pos:end="171:39"><literal type="number" pos:start="171:39" pos:end="171:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="171:43" pos:end="171:49"><expr pos:start="171:43" pos:end="171:49"><name pos:start="171:43" pos:end="171:49"><name pos:start="171:43" pos:end="171:46">args</name><index pos:start="171:47" pos:end="171:49">[<expr pos:start="171:48" pos:end="171:48"><literal type="number" pos:start="171:48" pos:end="171:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="171:52" pos:end="171:54"><expr pos:start="171:52" pos:end="171:54"><name pos:start="171:52" pos:end="171:54">STB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="173:9" pos:end="173:14">break;</break>

        <expr_stmt pos:start="175:9" pos:end="175:23"><expr pos:start="175:9" pos:end="175:22"><call pos:start="175:9" pos:end="175:22"><name pos:start="175:9" pos:end="175:16">OP_32_64</name><argument_list pos:start="175:17" pos:end="175:22">(<argument pos:start="175:18" pos:end="175:21"><expr pos:start="175:18" pos:end="175:21"><name pos:start="175:18" pos:end="175:21">st16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:56"><expr pos:start="177:9" pos:end="177:55"><call pos:start="177:9" pos:end="177:55"><name pos:start="177:9" pos:end="177:20">tcg_out_ldst</name><argument_list pos:start="177:21" pos:end="177:55">(<argument pos:start="177:22" pos:end="177:22"><expr pos:start="177:22" pos:end="177:22"><name pos:start="177:22" pos:end="177:22">s</name></expr></argument>, <argument pos:start="177:25" pos:end="177:31"><expr pos:start="177:25" pos:end="177:31"><name pos:start="177:25" pos:end="177:31"><name pos:start="177:25" pos:end="177:28">args</name><index pos:start="177:29" pos:end="177:31">[<expr pos:start="177:30" pos:end="177:30"><literal type="number" pos:start="177:30" pos:end="177:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="177:34" pos:end="177:40"><expr pos:start="177:34" pos:end="177:40"><name pos:start="177:34" pos:end="177:40"><name pos:start="177:34" pos:end="177:37">args</name><index pos:start="177:38" pos:end="177:40">[<expr pos:start="177:39" pos:end="177:39"><literal type="number" pos:start="177:39" pos:end="177:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="177:43" pos:end="177:49"><expr pos:start="177:43" pos:end="177:49"><name pos:start="177:43" pos:end="177:49"><name pos:start="177:43" pos:end="177:46">args</name><index pos:start="177:47" pos:end="177:49">[<expr pos:start="177:48" pos:end="177:48"><literal type="number" pos:start="177:48" pos:end="177:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="177:52" pos:end="177:54"><expr pos:start="177:52" pos:end="177:54"><name pos:start="177:52" pos:end="177:54">STH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="179:9" pos:end="179:14">break;</break>

    <case pos:start="181:5" pos:end="184:0">case <expr pos:start="181:10" pos:end="181:24"><name pos:start="181:10" pos:end="181:24">INDEX_op_st_i32</name></expr>:</case>

<cpp:if pos:start="183:1" pos:end="183:55">#<cpp:directive pos:start="183:2" pos:end="183:3">if</cpp:directive> <expr pos:start="183:5" pos:end="183:55"><call pos:start="183:5" pos:end="183:25"><name pos:start="183:5" pos:end="183:11">defined</name><argument_list pos:start="183:12" pos:end="183:25">(<argument pos:start="183:13" pos:end="183:24"><expr pos:start="183:13" pos:end="183:24"><name pos:start="183:13" pos:end="183:24">__sparc_v9__</name></expr></argument>)</argument_list></call> <operator pos:start="183:27" pos:end="183:28">&amp;&amp;</operator> <operator pos:start="183:30" pos:end="183:30">!</operator><call pos:start="183:31" pos:end="183:55"><name pos:start="183:31" pos:end="183:37">defined</name><argument_list pos:start="183:38" pos:end="183:55">(<argument pos:start="183:39" pos:end="183:54"><expr pos:start="183:39" pos:end="183:54"><name pos:start="183:39" pos:end="183:54">__sparc_v8plus__</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="185:5" pos:end="188:0">case <expr pos:start="185:10" pos:end="185:26"><name pos:start="185:10" pos:end="185:26">INDEX_op_st32_i64</name></expr>:</case>

<cpp:endif pos:start="187:1" pos:end="187:6">#<cpp:directive pos:start="187:2" pos:end="187:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="189:9" pos:end="189:56"><expr pos:start="189:9" pos:end="189:55"><call pos:start="189:9" pos:end="189:55"><name pos:start="189:9" pos:end="189:20">tcg_out_ldst</name><argument_list pos:start="189:21" pos:end="189:55">(<argument pos:start="189:22" pos:end="189:22"><expr pos:start="189:22" pos:end="189:22"><name pos:start="189:22" pos:end="189:22">s</name></expr></argument>, <argument pos:start="189:25" pos:end="189:31"><expr pos:start="189:25" pos:end="189:31"><name pos:start="189:25" pos:end="189:31"><name pos:start="189:25" pos:end="189:28">args</name><index pos:start="189:29" pos:end="189:31">[<expr pos:start="189:30" pos:end="189:30"><literal type="number" pos:start="189:30" pos:end="189:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="189:34" pos:end="189:40"><expr pos:start="189:34" pos:end="189:40"><name pos:start="189:34" pos:end="189:40"><name pos:start="189:34" pos:end="189:37">args</name><index pos:start="189:38" pos:end="189:40">[<expr pos:start="189:39" pos:end="189:39"><literal type="number" pos:start="189:39" pos:end="189:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="189:43" pos:end="189:49"><expr pos:start="189:43" pos:end="189:49"><name pos:start="189:43" pos:end="189:49"><name pos:start="189:43" pos:end="189:46">args</name><index pos:start="189:47" pos:end="189:49">[<expr pos:start="189:48" pos:end="189:48"><literal type="number" pos:start="189:48" pos:end="189:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="189:52" pos:end="189:54"><expr pos:start="189:52" pos:end="189:54"><name pos:start="189:52" pos:end="189:54">STW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="191:9" pos:end="191:14">break;</break>

        <expr_stmt pos:start="193:9" pos:end="193:22"><expr pos:start="193:9" pos:end="193:21"><call pos:start="193:9" pos:end="193:21"><name pos:start="193:9" pos:end="193:16">OP_32_64</name><argument_list pos:start="193:17" pos:end="193:21">(<argument pos:start="193:18" pos:end="193:20"><expr pos:start="193:18" pos:end="193:20"><name pos:start="193:18" pos:end="193:20">add</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:22"><expr pos:start="195:9" pos:end="195:21"><name pos:start="195:9" pos:end="195:9">c</name> <operator pos:start="195:11" pos:end="195:11">=</operator> <name pos:start="195:13" pos:end="195:21">ARITH_ADD</name></expr>;</expr_stmt>

        <goto pos:start="197:9" pos:end="197:25">goto <name pos:start="197:14" pos:end="197:24">gen_arith32</name>;</goto>

        <expr_stmt pos:start="199:9" pos:end="199:22"><expr pos:start="199:9" pos:end="199:21"><call pos:start="199:9" pos:end="199:21"><name pos:start="199:9" pos:end="199:16">OP_32_64</name><argument_list pos:start="199:17" pos:end="199:21">(<argument pos:start="199:18" pos:end="199:20"><expr pos:start="199:18" pos:end="199:20"><name pos:start="199:18" pos:end="199:20">sub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:22"><expr pos:start="201:9" pos:end="201:21"><name pos:start="201:9" pos:end="201:9">c</name> <operator pos:start="201:11" pos:end="201:11">=</operator> <name pos:start="201:13" pos:end="201:21">ARITH_SUB</name></expr>;</expr_stmt>

        <goto pos:start="203:9" pos:end="203:25">goto <name pos:start="203:14" pos:end="203:24">gen_arith32</name>;</goto>

        <expr_stmt pos:start="205:9" pos:end="205:22"><expr pos:start="205:9" pos:end="205:21"><call pos:start="205:9" pos:end="205:21"><name pos:start="205:9" pos:end="205:16">OP_32_64</name><argument_list pos:start="205:17" pos:end="205:21">(<argument pos:start="205:18" pos:end="205:20"><expr pos:start="205:18" pos:end="205:20"><name pos:start="205:18" pos:end="205:20">and</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:22"><expr pos:start="207:9" pos:end="207:21"><name pos:start="207:9" pos:end="207:9">c</name> <operator pos:start="207:11" pos:end="207:11">=</operator> <name pos:start="207:13" pos:end="207:21">ARITH_AND</name></expr>;</expr_stmt>

        <goto pos:start="209:9" pos:end="209:25">goto <name pos:start="209:14" pos:end="209:24">gen_arith32</name>;</goto>

        <expr_stmt pos:start="211:9" pos:end="211:21"><expr pos:start="211:9" pos:end="211:20"><call pos:start="211:9" pos:end="211:20"><name pos:start="211:9" pos:end="211:16">OP_32_64</name><argument_list pos:start="211:17" pos:end="211:20">(<argument pos:start="211:18" pos:end="211:19"><expr pos:start="211:18" pos:end="211:19"><name pos:start="211:18" pos:end="211:19">or</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:21"><expr pos:start="213:9" pos:end="213:20"><name pos:start="213:9" pos:end="213:9">c</name> <operator pos:start="213:11" pos:end="213:11">=</operator> <name pos:start="213:13" pos:end="213:20">ARITH_OR</name></expr>;</expr_stmt>

        <goto pos:start="215:9" pos:end="215:25">goto <name pos:start="215:14" pos:end="215:24">gen_arith32</name>;</goto>

        <expr_stmt pos:start="217:9" pos:end="217:22"><expr pos:start="217:9" pos:end="217:21"><call pos:start="217:9" pos:end="217:21"><name pos:start="217:9" pos:end="217:16">OP_32_64</name><argument_list pos:start="217:17" pos:end="217:21">(<argument pos:start="217:18" pos:end="217:20"><expr pos:start="217:18" pos:end="217:20"><name pos:start="217:18" pos:end="217:20">xor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:22"><expr pos:start="219:9" pos:end="219:21"><name pos:start="219:9" pos:end="219:9">c</name> <operator pos:start="219:11" pos:end="219:11">=</operator> <name pos:start="219:13" pos:end="219:21">ARITH_XOR</name></expr>;</expr_stmt>

        <goto pos:start="221:9" pos:end="221:25">goto <name pos:start="221:14" pos:end="221:24">gen_arith32</name>;</goto>

    <case pos:start="223:5" pos:end="223:26">case <expr pos:start="223:10" pos:end="223:25"><name pos:start="223:10" pos:end="223:25">INDEX_op_shl_i32</name></expr>:</case>

        <expr_stmt pos:start="225:9" pos:end="225:22"><expr pos:start="225:9" pos:end="225:21"><name pos:start="225:9" pos:end="225:9">c</name> <operator pos:start="225:11" pos:end="225:11">=</operator> <name pos:start="225:13" pos:end="225:21">SHIFT_SLL</name></expr>;</expr_stmt>

        <goto pos:start="227:9" pos:end="227:25">goto <name pos:start="227:14" pos:end="227:24">gen_arith32</name>;</goto>

    <case pos:start="229:5" pos:end="229:26">case <expr pos:start="229:10" pos:end="229:25"><name pos:start="229:10" pos:end="229:25">INDEX_op_shr_i32</name></expr>:</case>

        <expr_stmt pos:start="231:9" pos:end="231:22"><expr pos:start="231:9" pos:end="231:21"><name pos:start="231:9" pos:end="231:9">c</name> <operator pos:start="231:11" pos:end="231:11">=</operator> <name pos:start="231:13" pos:end="231:21">SHIFT_SRL</name></expr>;</expr_stmt>

        <goto pos:start="233:9" pos:end="233:25">goto <name pos:start="233:14" pos:end="233:24">gen_arith32</name>;</goto>

    <case pos:start="235:5" pos:end="235:26">case <expr pos:start="235:10" pos:end="235:25"><name pos:start="235:10" pos:end="235:25">INDEX_op_sar_i32</name></expr>:</case>

        <expr_stmt pos:start="237:9" pos:end="237:22"><expr pos:start="237:9" pos:end="237:21"><name pos:start="237:9" pos:end="237:9">c</name> <operator pos:start="237:11" pos:end="237:11">=</operator> <name pos:start="237:13" pos:end="237:21">SHIFT_SRA</name></expr>;</expr_stmt>

        <goto pos:start="239:9" pos:end="239:25">goto <name pos:start="239:14" pos:end="239:24">gen_arith32</name>;</goto>

    <case pos:start="241:5" pos:end="241:26">case <expr pos:start="241:10" pos:end="241:25"><name pos:start="241:10" pos:end="241:25">INDEX_op_mul_i32</name></expr>:</case>

        <expr_stmt pos:start="243:9" pos:end="243:23"><expr pos:start="243:9" pos:end="243:22"><name pos:start="243:9" pos:end="243:9">c</name> <operator pos:start="243:11" pos:end="243:11">=</operator> <name pos:start="243:13" pos:end="243:22">ARITH_UMUL</name></expr>;</expr_stmt>

        <goto pos:start="245:9" pos:end="245:25">goto <name pos:start="245:14" pos:end="245:24">gen_arith32</name>;</goto>

    <case pos:start="247:5" pos:end="250:0">case <expr pos:start="247:10" pos:end="247:26"><name pos:start="247:10" pos:end="247:26">INDEX_op_div2_i32</name></expr>:</case>

<cpp:if pos:start="249:1" pos:end="249:54">#<cpp:directive pos:start="249:2" pos:end="249:3">if</cpp:directive> <expr pos:start="249:5" pos:end="249:54"><call pos:start="249:5" pos:end="249:25"><name pos:start="249:5" pos:end="249:11">defined</name><argument_list pos:start="249:12" pos:end="249:25">(<argument pos:start="249:13" pos:end="249:24"><expr pos:start="249:13" pos:end="249:24"><name pos:start="249:13" pos:end="249:24">__sparc_v9__</name></expr></argument>)</argument_list></call> <operator pos:start="249:27" pos:end="249:28">||</operator> <call pos:start="249:30" pos:end="249:54"><name pos:start="249:30" pos:end="249:36">defined</name><argument_list pos:start="249:37" pos:end="249:54">(<argument pos:start="249:38" pos:end="249:53"><expr pos:start="249:38" pos:end="249:53"><name pos:start="249:38" pos:end="249:53">__sparc_v8plus__</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="251:9" pos:end="251:24"><expr pos:start="251:9" pos:end="251:23"><name pos:start="251:9" pos:end="251:9">c</name> <operator pos:start="251:11" pos:end="251:11">=</operator> <name pos:start="251:13" pos:end="251:23">ARITH_SDIVX</name></expr>;</expr_stmt>

        <goto pos:start="253:9" pos:end="256:0">goto <name pos:start="253:14" pos:end="253:24">gen_arith32</name>;</goto>

<cpp:else pos:start="255:1" pos:end="255:5">#<cpp:directive pos:start="255:2" pos:end="255:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="257:9" pos:end="257:27"><expr pos:start="257:9" pos:end="257:26"><call pos:start="257:9" pos:end="257:26"><name pos:start="257:9" pos:end="257:20">tcg_out_sety</name><argument_list pos:start="257:21" pos:end="257:26">(<argument pos:start="257:22" pos:end="257:22"><expr pos:start="257:22" pos:end="257:22"><name pos:start="257:22" pos:end="257:22">s</name></expr></argument>, <argument pos:start="257:25" pos:end="257:25"><expr pos:start="257:25" pos:end="257:25"><literal type="number" pos:start="257:25" pos:end="257:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:23"><expr pos:start="259:9" pos:end="259:22"><name pos:start="259:9" pos:end="259:9">c</name> <operator pos:start="259:11" pos:end="259:11">=</operator> <name pos:start="259:13" pos:end="259:22">ARITH_SDIV</name></expr>;</expr_stmt>

        <goto pos:start="261:9" pos:end="264:0">goto <name pos:start="261:14" pos:end="261:24">gen_arith32</name>;</goto>

<cpp:endif pos:start="263:1" pos:end="263:6">#<cpp:directive pos:start="263:2" pos:end="263:6">endif</cpp:directive></cpp:endif>

    <case pos:start="265:5" pos:end="268:0">case <expr pos:start="265:10" pos:end="265:27"><name pos:start="265:10" pos:end="265:27">INDEX_op_divu2_i32</name></expr>:</case>

<cpp:if pos:start="267:1" pos:end="267:54">#<cpp:directive pos:start="267:2" pos:end="267:3">if</cpp:directive> <expr pos:start="267:5" pos:end="267:54"><call pos:start="267:5" pos:end="267:25"><name pos:start="267:5" pos:end="267:11">defined</name><argument_list pos:start="267:12" pos:end="267:25">(<argument pos:start="267:13" pos:end="267:24"><expr pos:start="267:13" pos:end="267:24"><name pos:start="267:13" pos:end="267:24">__sparc_v9__</name></expr></argument>)</argument_list></call> <operator pos:start="267:27" pos:end="267:28">||</operator> <call pos:start="267:30" pos:end="267:54"><name pos:start="267:30" pos:end="267:36">defined</name><argument_list pos:start="267:37" pos:end="267:54">(<argument pos:start="267:38" pos:end="267:53"><expr pos:start="267:38" pos:end="267:53"><name pos:start="267:38" pos:end="267:53">__sparc_v8plus__</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="269:9" pos:end="269:24"><expr pos:start="269:9" pos:end="269:23"><name pos:start="269:9" pos:end="269:9">c</name> <operator pos:start="269:11" pos:end="269:11">=</operator> <name pos:start="269:13" pos:end="269:23">ARITH_UDIVX</name></expr>;</expr_stmt>

        <goto pos:start="271:9" pos:end="274:0">goto <name pos:start="271:14" pos:end="271:24">gen_arith32</name>;</goto>

<cpp:else pos:start="273:1" pos:end="273:5">#<cpp:directive pos:start="273:2" pos:end="273:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="275:9" pos:end="275:27"><expr pos:start="275:9" pos:end="275:26"><call pos:start="275:9" pos:end="275:26"><name pos:start="275:9" pos:end="275:20">tcg_out_sety</name><argument_list pos:start="275:21" pos:end="275:26">(<argument pos:start="275:22" pos:end="275:22"><expr pos:start="275:22" pos:end="275:22"><name pos:start="275:22" pos:end="275:22">s</name></expr></argument>, <argument pos:start="275:25" pos:end="275:25"><expr pos:start="275:25" pos:end="275:25"><literal type="number" pos:start="275:25" pos:end="275:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:23"><expr pos:start="277:9" pos:end="277:22"><name pos:start="277:9" pos:end="277:9">c</name> <operator pos:start="277:11" pos:end="277:11">=</operator> <name pos:start="277:13" pos:end="277:22">ARITH_UDIV</name></expr>;</expr_stmt>

        <goto pos:start="279:9" pos:end="282:0">goto <name pos:start="279:14" pos:end="279:24">gen_arith32</name>;</goto>

<cpp:endif pos:start="281:1" pos:end="281:6">#<cpp:directive pos:start="281:2" pos:end="281:6">endif</cpp:directive></cpp:endif>



    <case pos:start="285:5" pos:end="285:29">case <expr pos:start="285:10" pos:end="285:28"><name pos:start="285:10" pos:end="285:28">INDEX_op_brcond_i32</name></expr>:</case>

        <expr_stmt pos:start="287:9" pos:end="287:50"><expr pos:start="287:9" pos:end="287:49"><call pos:start="287:9" pos:end="287:49"><name pos:start="287:9" pos:end="287:15">fprintf</name><argument_list pos:start="287:16" pos:end="287:49">(<argument pos:start="287:17" pos:end="287:22"><expr pos:start="287:17" pos:end="287:22"><name pos:start="287:17" pos:end="287:22">stderr</name></expr></argument>, <argument pos:start="287:25" pos:end="287:48"><expr pos:start="287:25" pos:end="287:48"><literal type="string" pos:start="287:25" pos:end="287:48">"unimplemented brcond\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="289:9" pos:end="289:14">break;</break>



    <case pos:start="293:5" pos:end="293:28">case <expr pos:start="293:10" pos:end="293:27"><name pos:start="293:10" pos:end="293:27">INDEX_op_qemu_ld8u</name></expr>:</case>

        <expr_stmt pos:start="295:9" pos:end="295:47"><expr pos:start="295:9" pos:end="295:46"><call pos:start="295:9" pos:end="295:46"><name pos:start="295:9" pos:end="295:15">fprintf</name><argument_list pos:start="295:16" pos:end="295:46">(<argument pos:start="295:17" pos:end="295:22"><expr pos:start="295:17" pos:end="295:22"><name pos:start="295:17" pos:end="295:22">stderr</name></expr></argument>, <argument pos:start="295:25" pos:end="295:45"><expr pos:start="295:25" pos:end="295:45"><literal type="string" pos:start="295:25" pos:end="295:45">"unimplemented qld\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="297:9" pos:end="297:14">break;</break>

    <case pos:start="299:5" pos:end="299:28">case <expr pos:start="299:10" pos:end="299:27"><name pos:start="299:10" pos:end="299:27">INDEX_op_qemu_ld8s</name></expr>:</case>

        <expr_stmt pos:start="301:9" pos:end="301:47"><expr pos:start="301:9" pos:end="301:46"><call pos:start="301:9" pos:end="301:46"><name pos:start="301:9" pos:end="301:15">fprintf</name><argument_list pos:start="301:16" pos:end="301:46">(<argument pos:start="301:17" pos:end="301:22"><expr pos:start="301:17" pos:end="301:22"><name pos:start="301:17" pos:end="301:22">stderr</name></expr></argument>, <argument pos:start="301:25" pos:end="301:45"><expr pos:start="301:25" pos:end="301:45"><literal type="string" pos:start="301:25" pos:end="301:45">"unimplemented qld\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="303:9" pos:end="303:14">break;</break>

    <case pos:start="305:5" pos:end="305:29">case <expr pos:start="305:10" pos:end="305:28"><name pos:start="305:10" pos:end="305:28">INDEX_op_qemu_ld16u</name></expr>:</case>

        <expr_stmt pos:start="307:9" pos:end="307:47"><expr pos:start="307:9" pos:end="307:46"><call pos:start="307:9" pos:end="307:46"><name pos:start="307:9" pos:end="307:15">fprintf</name><argument_list pos:start="307:16" pos:end="307:46">(<argument pos:start="307:17" pos:end="307:22"><expr pos:start="307:17" pos:end="307:22"><name pos:start="307:17" pos:end="307:22">stderr</name></expr></argument>, <argument pos:start="307:25" pos:end="307:45"><expr pos:start="307:25" pos:end="307:45"><literal type="string" pos:start="307:25" pos:end="307:45">"unimplemented qld\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="309:9" pos:end="309:14">break;</break>

    <case pos:start="311:5" pos:end="311:29">case <expr pos:start="311:10" pos:end="311:28"><name pos:start="311:10" pos:end="311:28">INDEX_op_qemu_ld16s</name></expr>:</case>

        <expr_stmt pos:start="313:9" pos:end="313:47"><expr pos:start="313:9" pos:end="313:46"><call pos:start="313:9" pos:end="313:46"><name pos:start="313:9" pos:end="313:15">fprintf</name><argument_list pos:start="313:16" pos:end="313:46">(<argument pos:start="313:17" pos:end="313:22"><expr pos:start="313:17" pos:end="313:22"><name pos:start="313:17" pos:end="313:22">stderr</name></expr></argument>, <argument pos:start="313:25" pos:end="313:45"><expr pos:start="313:25" pos:end="313:45"><literal type="string" pos:start="313:25" pos:end="313:45">"unimplemented qld\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="315:9" pos:end="315:14">break;</break>

    <case pos:start="317:5" pos:end="317:29">case <expr pos:start="317:10" pos:end="317:28"><name pos:start="317:10" pos:end="317:28">INDEX_op_qemu_ld32u</name></expr>:</case>

        <expr_stmt pos:start="319:9" pos:end="319:47"><expr pos:start="319:9" pos:end="319:46"><call pos:start="319:9" pos:end="319:46"><name pos:start="319:9" pos:end="319:15">fprintf</name><argument_list pos:start="319:16" pos:end="319:46">(<argument pos:start="319:17" pos:end="319:22"><expr pos:start="319:17" pos:end="319:22"><name pos:start="319:17" pos:end="319:22">stderr</name></expr></argument>, <argument pos:start="319:25" pos:end="319:45"><expr pos:start="319:25" pos:end="319:45"><literal type="string" pos:start="319:25" pos:end="319:45">"unimplemented qld\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="321:9" pos:end="321:14">break;</break>

    <case pos:start="323:5" pos:end="323:29">case <expr pos:start="323:10" pos:end="323:28"><name pos:start="323:10" pos:end="323:28">INDEX_op_qemu_ld32s</name></expr>:</case>

        <expr_stmt pos:start="325:9" pos:end="325:47"><expr pos:start="325:9" pos:end="325:46"><call pos:start="325:9" pos:end="325:46"><name pos:start="325:9" pos:end="325:15">fprintf</name><argument_list pos:start="325:16" pos:end="325:46">(<argument pos:start="325:17" pos:end="325:22"><expr pos:start="325:17" pos:end="325:22"><name pos:start="325:17" pos:end="325:22">stderr</name></expr></argument>, <argument pos:start="325:25" pos:end="325:45"><expr pos:start="325:25" pos:end="325:45"><literal type="string" pos:start="325:25" pos:end="325:45">"unimplemented qld\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="327:9" pos:end="327:14">break;</break>

    <case pos:start="329:5" pos:end="329:27">case <expr pos:start="329:10" pos:end="329:26"><name pos:start="329:10" pos:end="329:26">INDEX_op_qemu_st8</name></expr>:</case>

        <expr_stmt pos:start="331:9" pos:end="331:47"><expr pos:start="331:9" pos:end="331:46"><call pos:start="331:9" pos:end="331:46"><name pos:start="331:9" pos:end="331:15">fprintf</name><argument_list pos:start="331:16" pos:end="331:46">(<argument pos:start="331:17" pos:end="331:22"><expr pos:start="331:17" pos:end="331:22"><name pos:start="331:17" pos:end="331:22">stderr</name></expr></argument>, <argument pos:start="331:25" pos:end="331:45"><expr pos:start="331:25" pos:end="331:45"><literal type="string" pos:start="331:25" pos:end="331:45">"unimplemented qst\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="333:9" pos:end="333:14">break;</break>

    <case pos:start="335:5" pos:end="335:28">case <expr pos:start="335:10" pos:end="335:27"><name pos:start="335:10" pos:end="335:27">INDEX_op_qemu_st16</name></expr>:</case>

        <expr_stmt pos:start="337:9" pos:end="337:47"><expr pos:start="337:9" pos:end="337:46"><call pos:start="337:9" pos:end="337:46"><name pos:start="337:9" pos:end="337:15">fprintf</name><argument_list pos:start="337:16" pos:end="337:46">(<argument pos:start="337:17" pos:end="337:22"><expr pos:start="337:17" pos:end="337:22"><name pos:start="337:17" pos:end="337:22">stderr</name></expr></argument>, <argument pos:start="337:25" pos:end="337:45"><expr pos:start="337:25" pos:end="337:45"><literal type="string" pos:start="337:25" pos:end="337:45">"unimplemented qst\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="339:9" pos:end="339:14">break;</break>

    <case pos:start="341:5" pos:end="341:28">case <expr pos:start="341:10" pos:end="341:27"><name pos:start="341:10" pos:end="341:27">INDEX_op_qemu_st32</name></expr>:</case>

        <expr_stmt pos:start="343:9" pos:end="343:47"><expr pos:start="343:9" pos:end="343:46"><call pos:start="343:9" pos:end="343:46"><name pos:start="343:9" pos:end="343:15">fprintf</name><argument_list pos:start="343:16" pos:end="343:46">(<argument pos:start="343:17" pos:end="343:22"><expr pos:start="343:17" pos:end="343:22"><name pos:start="343:17" pos:end="343:22">stderr</name></expr></argument>, <argument pos:start="343:25" pos:end="343:45"><expr pos:start="343:25" pos:end="343:45"><literal type="string" pos:start="343:25" pos:end="343:45">"unimplemented qst\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="345:9" pos:end="350:0">break;</break>



<cpp:if pos:start="349:1" pos:end="349:55">#<cpp:directive pos:start="349:2" pos:end="349:3">if</cpp:directive> <expr pos:start="349:5" pos:end="349:55"><call pos:start="349:5" pos:end="349:25"><name pos:start="349:5" pos:end="349:11">defined</name><argument_list pos:start="349:12" pos:end="349:25">(<argument pos:start="349:13" pos:end="349:24"><expr pos:start="349:13" pos:end="349:24"><name pos:start="349:13" pos:end="349:24">__sparc_v9__</name></expr></argument>)</argument_list></call> <operator pos:start="349:27" pos:end="349:28">&amp;&amp;</operator> <operator pos:start="349:30" pos:end="349:30">!</operator><call pos:start="349:31" pos:end="349:55"><name pos:start="349:31" pos:end="349:37">defined</name><argument_list pos:start="349:38" pos:end="349:55">(<argument pos:start="349:39" pos:end="349:54"><expr pos:start="349:39" pos:end="349:54"><name pos:start="349:39" pos:end="349:54">__sparc_v8plus__</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="351:5" pos:end="351:27">case <expr pos:start="351:10" pos:end="351:26"><name pos:start="351:10" pos:end="351:26">INDEX_op_movi_i64</name></expr>:</case>

        <expr_stmt pos:start="353:9" pos:end="353:56"><expr pos:start="353:9" pos:end="353:55"><call pos:start="353:9" pos:end="353:55"><name pos:start="353:9" pos:end="353:20">tcg_out_movi</name><argument_list pos:start="353:21" pos:end="353:55">(<argument pos:start="353:22" pos:end="353:22"><expr pos:start="353:22" pos:end="353:22"><name pos:start="353:22" pos:end="353:22">s</name></expr></argument>, <argument pos:start="353:25" pos:end="353:36"><expr pos:start="353:25" pos:end="353:36"><name pos:start="353:25" pos:end="353:36">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="353:39" pos:end="353:45"><expr pos:start="353:39" pos:end="353:45"><name pos:start="353:39" pos:end="353:45"><name pos:start="353:39" pos:end="353:42">args</name><index pos:start="353:43" pos:end="353:45">[<expr pos:start="353:44" pos:end="353:44"><literal type="number" pos:start="353:44" pos:end="353:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="353:48" pos:end="353:54"><expr pos:start="353:48" pos:end="353:54"><name pos:start="353:48" pos:end="353:54"><name pos:start="353:48" pos:end="353:51">args</name><index pos:start="353:52" pos:end="353:54">[<expr pos:start="353:53" pos:end="353:53"><literal type="number" pos:start="353:53" pos:end="353:53">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="355:9" pos:end="355:14">break;</break>

    <case pos:start="357:5" pos:end="357:28">case <expr pos:start="357:10" pos:end="357:27"><name pos:start="357:10" pos:end="357:27">INDEX_op_ld32s_i64</name></expr>:</case>

        <expr_stmt pos:start="359:9" pos:end="359:57"><expr pos:start="359:9" pos:end="359:56"><call pos:start="359:9" pos:end="359:56"><name pos:start="359:9" pos:end="359:20">tcg_out_ldst</name><argument_list pos:start="359:21" pos:end="359:56">(<argument pos:start="359:22" pos:end="359:22"><expr pos:start="359:22" pos:end="359:22"><name pos:start="359:22" pos:end="359:22">s</name></expr></argument>, <argument pos:start="359:25" pos:end="359:31"><expr pos:start="359:25" pos:end="359:31"><name pos:start="359:25" pos:end="359:31"><name pos:start="359:25" pos:end="359:28">args</name><index pos:start="359:29" pos:end="359:31">[<expr pos:start="359:30" pos:end="359:30"><literal type="number" pos:start="359:30" pos:end="359:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="359:34" pos:end="359:40"><expr pos:start="359:34" pos:end="359:40"><name pos:start="359:34" pos:end="359:40"><name pos:start="359:34" pos:end="359:37">args</name><index pos:start="359:38" pos:end="359:40">[<expr pos:start="359:39" pos:end="359:39"><literal type="number" pos:start="359:39" pos:end="359:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="359:43" pos:end="359:49"><expr pos:start="359:43" pos:end="359:49"><name pos:start="359:43" pos:end="359:49"><name pos:start="359:43" pos:end="359:46">args</name><index pos:start="359:47" pos:end="359:49">[<expr pos:start="359:48" pos:end="359:48"><literal type="number" pos:start="359:48" pos:end="359:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="359:52" pos:end="359:55"><expr pos:start="359:52" pos:end="359:55"><name pos:start="359:52" pos:end="359:55">LDSW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="361:9" pos:end="361:14">break;</break>

    <case pos:start="363:5" pos:end="363:25">case <expr pos:start="363:10" pos:end="363:24"><name pos:start="363:10" pos:end="363:24">INDEX_op_ld_i64</name></expr>:</case>

        <expr_stmt pos:start="365:9" pos:end="365:56"><expr pos:start="365:9" pos:end="365:55"><call pos:start="365:9" pos:end="365:55"><name pos:start="365:9" pos:end="365:20">tcg_out_ldst</name><argument_list pos:start="365:21" pos:end="365:55">(<argument pos:start="365:22" pos:end="365:22"><expr pos:start="365:22" pos:end="365:22"><name pos:start="365:22" pos:end="365:22">s</name></expr></argument>, <argument pos:start="365:25" pos:end="365:31"><expr pos:start="365:25" pos:end="365:31"><name pos:start="365:25" pos:end="365:31"><name pos:start="365:25" pos:end="365:28">args</name><index pos:start="365:29" pos:end="365:31">[<expr pos:start="365:30" pos:end="365:30"><literal type="number" pos:start="365:30" pos:end="365:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="365:34" pos:end="365:40"><expr pos:start="365:34" pos:end="365:40"><name pos:start="365:34" pos:end="365:40"><name pos:start="365:34" pos:end="365:37">args</name><index pos:start="365:38" pos:end="365:40">[<expr pos:start="365:39" pos:end="365:39"><literal type="number" pos:start="365:39" pos:end="365:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="365:43" pos:end="365:49"><expr pos:start="365:43" pos:end="365:49"><name pos:start="365:43" pos:end="365:49"><name pos:start="365:43" pos:end="365:46">args</name><index pos:start="365:47" pos:end="365:49">[<expr pos:start="365:48" pos:end="365:48"><literal type="number" pos:start="365:48" pos:end="365:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="365:52" pos:end="365:54"><expr pos:start="365:52" pos:end="365:54"><name pos:start="365:52" pos:end="365:54">LDX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="367:9" pos:end="367:14">break;</break>

    <case pos:start="369:5" pos:end="369:25">case <expr pos:start="369:10" pos:end="369:24"><name pos:start="369:10" pos:end="369:24">INDEX_op_st_i64</name></expr>:</case>

        <expr_stmt pos:start="371:9" pos:end="371:56"><expr pos:start="371:9" pos:end="371:55"><call pos:start="371:9" pos:end="371:55"><name pos:start="371:9" pos:end="371:20">tcg_out_ldst</name><argument_list pos:start="371:21" pos:end="371:55">(<argument pos:start="371:22" pos:end="371:22"><expr pos:start="371:22" pos:end="371:22"><name pos:start="371:22" pos:end="371:22">s</name></expr></argument>, <argument pos:start="371:25" pos:end="371:31"><expr pos:start="371:25" pos:end="371:31"><name pos:start="371:25" pos:end="371:31"><name pos:start="371:25" pos:end="371:28">args</name><index pos:start="371:29" pos:end="371:31">[<expr pos:start="371:30" pos:end="371:30"><literal type="number" pos:start="371:30" pos:end="371:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="371:34" pos:end="371:40"><expr pos:start="371:34" pos:end="371:40"><name pos:start="371:34" pos:end="371:40"><name pos:start="371:34" pos:end="371:37">args</name><index pos:start="371:38" pos:end="371:40">[<expr pos:start="371:39" pos:end="371:39"><literal type="number" pos:start="371:39" pos:end="371:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="371:43" pos:end="371:49"><expr pos:start="371:43" pos:end="371:49"><name pos:start="371:43" pos:end="371:49"><name pos:start="371:43" pos:end="371:46">args</name><index pos:start="371:47" pos:end="371:49">[<expr pos:start="371:48" pos:end="371:48"><literal type="number" pos:start="371:48" pos:end="371:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="371:52" pos:end="371:54"><expr pos:start="371:52" pos:end="371:54"><name pos:start="371:52" pos:end="371:54">STX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="373:9" pos:end="373:14">break;</break>

    <case pos:start="375:5" pos:end="375:26">case <expr pos:start="375:10" pos:end="375:25"><name pos:start="375:10" pos:end="375:25">INDEX_op_shl_i64</name></expr>:</case>

        <expr_stmt pos:start="377:9" pos:end="377:23"><expr pos:start="377:9" pos:end="377:22"><name pos:start="377:9" pos:end="377:9">c</name> <operator pos:start="377:11" pos:end="377:11">=</operator> <name pos:start="377:13" pos:end="377:22">SHIFT_SLLX</name></expr>;</expr_stmt>

        <goto pos:start="379:9" pos:end="379:25">goto <name pos:start="379:14" pos:end="379:24">gen_arith32</name>;</goto>

    <case pos:start="381:5" pos:end="381:26">case <expr pos:start="381:10" pos:end="381:25"><name pos:start="381:10" pos:end="381:25">INDEX_op_shr_i64</name></expr>:</case>

        <expr_stmt pos:start="383:9" pos:end="383:23"><expr pos:start="383:9" pos:end="383:22"><name pos:start="383:9" pos:end="383:9">c</name> <operator pos:start="383:11" pos:end="383:11">=</operator> <name pos:start="383:13" pos:end="383:22">SHIFT_SRLX</name></expr>;</expr_stmt>

        <goto pos:start="385:9" pos:end="385:25">goto <name pos:start="385:14" pos:end="385:24">gen_arith32</name>;</goto>

    <case pos:start="387:5" pos:end="387:26">case <expr pos:start="387:10" pos:end="387:25"><name pos:start="387:10" pos:end="387:25">INDEX_op_sar_i64</name></expr>:</case>

        <expr_stmt pos:start="389:9" pos:end="389:23"><expr pos:start="389:9" pos:end="389:22"><name pos:start="389:9" pos:end="389:9">c</name> <operator pos:start="389:11" pos:end="389:11">=</operator> <name pos:start="389:13" pos:end="389:22">SHIFT_SRAX</name></expr>;</expr_stmt>

        <goto pos:start="391:9" pos:end="391:25">goto <name pos:start="391:14" pos:end="391:24">gen_arith32</name>;</goto>

    <case pos:start="393:5" pos:end="393:26">case <expr pos:start="393:10" pos:end="393:25"><name pos:start="393:10" pos:end="393:25">INDEX_op_mul_i64</name></expr>:</case>

        <expr_stmt pos:start="395:9" pos:end="395:23"><expr pos:start="395:9" pos:end="395:22"><name pos:start="395:9" pos:end="395:9">c</name> <operator pos:start="395:11" pos:end="395:11">=</operator> <name pos:start="395:13" pos:end="395:22">ARITH_MULX</name></expr>;</expr_stmt>

        <goto pos:start="397:9" pos:end="397:25">goto <name pos:start="397:14" pos:end="397:24">gen_arith32</name>;</goto>

    <case pos:start="399:5" pos:end="399:27">case <expr pos:start="399:10" pos:end="399:26"><name pos:start="399:10" pos:end="399:26">INDEX_op_div2_i64</name></expr>:</case>

        <expr_stmt pos:start="401:9" pos:end="401:24"><expr pos:start="401:9" pos:end="401:23"><name pos:start="401:9" pos:end="401:9">c</name> <operator pos:start="401:11" pos:end="401:11">=</operator> <name pos:start="401:13" pos:end="401:23">ARITH_SDIVX</name></expr>;</expr_stmt>

        <goto pos:start="403:9" pos:end="403:25">goto <name pos:start="403:14" pos:end="403:24">gen_arith32</name>;</goto>

    <case pos:start="405:5" pos:end="405:28">case <expr pos:start="405:10" pos:end="405:27"><name pos:start="405:10" pos:end="405:27">INDEX_op_divu2_i64</name></expr>:</case>

        <expr_stmt pos:start="407:9" pos:end="407:24"><expr pos:start="407:9" pos:end="407:23"><name pos:start="407:9" pos:end="407:9">c</name> <operator pos:start="407:11" pos:end="407:11">=</operator> <name pos:start="407:13" pos:end="407:23">ARITH_UDIVX</name></expr>;</expr_stmt>

        <goto pos:start="409:9" pos:end="409:25">goto <name pos:start="409:14" pos:end="409:24">gen_arith32</name>;</goto>



    <case pos:start="413:5" pos:end="413:29">case <expr pos:start="413:10" pos:end="413:28"><name pos:start="413:10" pos:end="413:28">INDEX_op_brcond_i64</name></expr>:</case>

        <expr_stmt pos:start="415:9" pos:end="415:50"><expr pos:start="415:9" pos:end="415:49"><call pos:start="415:9" pos:end="415:49"><name pos:start="415:9" pos:end="415:15">fprintf</name><argument_list pos:start="415:16" pos:end="415:49">(<argument pos:start="415:17" pos:end="415:22"><expr pos:start="415:17" pos:end="415:22"><name pos:start="415:17" pos:end="415:22">stderr</name></expr></argument>, <argument pos:start="415:25" pos:end="415:48"><expr pos:start="415:25" pos:end="415:48"><literal type="string" pos:start="415:25" pos:end="415:48">"unimplemented brcond\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="417:9" pos:end="417:14">break;</break>

    <case pos:start="419:5" pos:end="419:28">case <expr pos:start="419:10" pos:end="419:27"><name pos:start="419:10" pos:end="419:27">INDEX_op_qemu_ld64</name></expr>:</case>

        <expr_stmt pos:start="421:9" pos:end="421:47"><expr pos:start="421:9" pos:end="421:46"><call pos:start="421:9" pos:end="421:46"><name pos:start="421:9" pos:end="421:15">fprintf</name><argument_list pos:start="421:16" pos:end="421:46">(<argument pos:start="421:17" pos:end="421:22"><expr pos:start="421:17" pos:end="421:22"><name pos:start="421:17" pos:end="421:22">stderr</name></expr></argument>, <argument pos:start="421:25" pos:end="421:45"><expr pos:start="421:25" pos:end="421:45"><literal type="string" pos:start="421:25" pos:end="421:45">"unimplemented qld\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="423:9" pos:end="423:14">break;</break>

    <case pos:start="425:5" pos:end="425:28">case <expr pos:start="425:10" pos:end="425:27"><name pos:start="425:10" pos:end="425:27">INDEX_op_qemu_st64</name></expr>:</case>

        <expr_stmt pos:start="427:9" pos:end="427:47"><expr pos:start="427:9" pos:end="427:46"><call pos:start="427:9" pos:end="427:46"><name pos:start="427:9" pos:end="427:15">fprintf</name><argument_list pos:start="427:16" pos:end="427:46">(<argument pos:start="427:17" pos:end="427:22"><expr pos:start="427:17" pos:end="427:22"><name pos:start="427:17" pos:end="427:22">stderr</name></expr></argument>, <argument pos:start="427:25" pos:end="427:45"><expr pos:start="427:25" pos:end="427:45"><literal type="string" pos:start="427:25" pos:end="427:45">"unimplemented qst\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="429:9" pos:end="434:0">break;</break>



<cpp:endif pos:start="433:1" pos:end="433:6">#<cpp:directive pos:start="433:2" pos:end="433:6">endif</cpp:directive></cpp:endif>

    <label pos:start="435:5" pos:end="435:16"><name pos:start="435:5" pos:end="435:15">gen_arith32</name>:</label>

        <if_stmt pos:start="437:9" pos:end="445:9"><if pos:start="437:9" pos:end="441:9">if <condition pos:start="437:12" pos:end="437:26">(<expr pos:start="437:13" pos:end="437:25"><name pos:start="437:13" pos:end="437:25"><name pos:start="437:13" pos:end="437:22">const_args</name><index pos:start="437:23" pos:end="437:25">[<expr pos:start="437:24" pos:end="437:24"><literal type="number" pos:start="437:24" pos:end="437:24">2</literal></expr>]</index></name></expr>)</condition> <block pos:start="437:28" pos:end="441:9">{<block_content pos:start="439:13" pos:end="439:60">

            <expr_stmt pos:start="439:13" pos:end="439:60"><expr pos:start="439:13" pos:end="439:59"><call pos:start="439:13" pos:end="439:59"><name pos:start="439:13" pos:end="439:26">tcg_out_arithi</name><argument_list pos:start="439:27" pos:end="439:59">(<argument pos:start="439:28" pos:end="439:28"><expr pos:start="439:28" pos:end="439:28"><name pos:start="439:28" pos:end="439:28">s</name></expr></argument>, <argument pos:start="439:31" pos:end="439:37"><expr pos:start="439:31" pos:end="439:37"><name pos:start="439:31" pos:end="439:37"><name pos:start="439:31" pos:end="439:34">args</name><index pos:start="439:35" pos:end="439:37">[<expr pos:start="439:36" pos:end="439:36"><literal type="number" pos:start="439:36" pos:end="439:36">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="439:40" pos:end="439:46"><expr pos:start="439:40" pos:end="439:46"><name pos:start="439:40" pos:end="439:46"><name pos:start="439:40" pos:end="439:43">args</name><index pos:start="439:44" pos:end="439:46">[<expr pos:start="439:45" pos:end="439:45"><literal type="number" pos:start="439:45" pos:end="439:45">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="439:49" pos:end="439:55"><expr pos:start="439:49" pos:end="439:55"><name pos:start="439:49" pos:end="439:55"><name pos:start="439:49" pos:end="439:52">args</name><index pos:start="439:53" pos:end="439:55">[<expr pos:start="439:54" pos:end="439:54"><literal type="number" pos:start="439:54" pos:end="439:54">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="439:58" pos:end="439:58"><expr pos:start="439:58" pos:end="439:58"><name pos:start="439:58" pos:end="439:58">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="441:11" pos:end="445:9">else <block pos:start="441:16" pos:end="445:9">{<block_content pos:start="443:13" pos:end="443:59">

            <expr_stmt pos:start="443:13" pos:end="443:59"><expr pos:start="443:13" pos:end="443:58"><call pos:start="443:13" pos:end="443:58"><name pos:start="443:13" pos:end="443:25">tcg_out_arith</name><argument_list pos:start="443:26" pos:end="443:58">(<argument pos:start="443:27" pos:end="443:27"><expr pos:start="443:27" pos:end="443:27"><name pos:start="443:27" pos:end="443:27">s</name></expr></argument>, <argument pos:start="443:30" pos:end="443:36"><expr pos:start="443:30" pos:end="443:36"><name pos:start="443:30" pos:end="443:36"><name pos:start="443:30" pos:end="443:33">args</name><index pos:start="443:34" pos:end="443:36">[<expr pos:start="443:35" pos:end="443:35"><literal type="number" pos:start="443:35" pos:end="443:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="443:39" pos:end="443:45"><expr pos:start="443:39" pos:end="443:45"><name pos:start="443:39" pos:end="443:45"><name pos:start="443:39" pos:end="443:42">args</name><index pos:start="443:43" pos:end="443:45">[<expr pos:start="443:44" pos:end="443:44"><literal type="number" pos:start="443:44" pos:end="443:44">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="443:48" pos:end="443:54"><expr pos:start="443:48" pos:end="443:54"><name pos:start="443:48" pos:end="443:54"><name pos:start="443:48" pos:end="443:51">args</name><index pos:start="443:52" pos:end="443:54">[<expr pos:start="443:53" pos:end="443:53"><literal type="number" pos:start="443:53" pos:end="443:53">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="443:57" pos:end="443:57"><expr pos:start="443:57" pos:end="443:57"><name pos:start="443:57" pos:end="443:57">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="447:9" pos:end="447:14">break;</break>



    <default pos:start="451:5" pos:end="451:12">default:</default>

        <expr_stmt pos:start="453:9" pos:end="453:54"><expr pos:start="453:9" pos:end="453:53"><call pos:start="453:9" pos:end="453:53"><name pos:start="453:9" pos:end="453:15">fprintf</name><argument_list pos:start="453:16" pos:end="453:53">(<argument pos:start="453:17" pos:end="453:22"><expr pos:start="453:17" pos:end="453:22"><name pos:start="453:17" pos:end="453:22">stderr</name></expr></argument>, <argument pos:start="453:25" pos:end="453:47"><expr pos:start="453:25" pos:end="453:47"><literal type="string" pos:start="453:25" pos:end="453:47">"unknown opcode 0x%x\n"</literal></expr></argument>, <argument pos:start="453:50" pos:end="453:52"><expr pos:start="453:50" pos:end="453:52"><name pos:start="453:50" pos:end="453:52">opc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="455:9" pos:end="455:20"><expr pos:start="455:9" pos:end="455:19"><call pos:start="455:9" pos:end="455:19"><name pos:start="455:9" pos:end="455:17">tcg_abort</name><argument_list pos:start="455:18" pos:end="455:19">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
