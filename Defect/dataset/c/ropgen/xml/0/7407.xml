<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7407.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:16">BlockDriverState</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:41">bdrv_find_backing_image</name><parameter_list pos:start="1:42" pos:end="3:33">(<parameter pos:start="1:43" pos:end="1:62"><decl pos:start="1:43" pos:end="1:62"><type pos:start="1:43" pos:end="1:62"><name pos:start="1:43" pos:end="1:58">BlockDriverState</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">bs</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:32"><decl pos:start="3:9" pos:end="3:32"><type pos:start="3:9" pos:end="3:32"><specifier pos:start="3:9" pos:end="3:13">const</specifier> <name pos:start="3:15" pos:end="3:18">char</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:32">backing_file</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="121:1">{<block_content pos:start="7:5" pos:end="119:18">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:23">filename_full</name> <init pos:start="7:25" pos:end="7:30">= <expr pos:start="7:27" pos:end="7:30"><name pos:start="7:27" pos:end="7:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:27">backing_file_full</name> <init pos:start="9:29" pos:end="9:34">= <expr pos:start="9:31" pos:end="9:34"><name pos:start="9:31" pos:end="9:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:22">filename_tmp</name> <init pos:start="11:24" pos:end="11:29">= <expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">is_protocol</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:20">BlockDriverState</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:29">curr_bs</name> <init pos:start="15:31" pos:end="15:36">= <expr pos:start="15:33" pos:end="15:36"><name pos:start="15:33" pos:end="15:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:20">BlockDriverState</name> <modifier pos:start="17:22" pos:end="17:22">*</modifier></type><name pos:start="17:23" pos:end="17:28">retval</name> <init pos:start="17:30" pos:end="17:35">= <expr pos:start="17:32" pos:end="17:35"><name pos:start="17:32" pos:end="17:35">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:41">(<expr pos:start="21:9" pos:end="21:40"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:11">bs</name> <operator pos:start="21:13" pos:end="21:14">||</operator> <operator pos:start="21:16" pos:end="21:16">!</operator><name pos:start="21:17" pos:end="21:23"><name pos:start="21:17" pos:end="21:18">bs</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:23">drv</name></name> <operator pos:start="21:25" pos:end="21:26">||</operator> <operator pos:start="21:28" pos:end="21:28">!</operator><name pos:start="21:29" pos:end="21:40">backing_file</name></expr>)</condition> <block pos:start="21:43" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:20">

        <return pos:start="23:9" pos:end="23:20">return <expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:43"><expr pos:start="29:5" pos:end="29:42"><name pos:start="29:5" pos:end="29:17">filename_full</name>     <operator pos:start="29:23" pos:end="29:23">=</operator> <call pos:start="29:25" pos:end="29:42"><name pos:start="29:25" pos:end="29:32">g_malloc</name><argument_list pos:start="29:33" pos:end="29:42">(<argument pos:start="29:34" pos:end="29:41"><expr pos:start="29:34" pos:end="29:41"><name pos:start="29:34" pos:end="29:41">PATH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:21">backing_file_full</name> <operator pos:start="31:23" pos:end="31:23">=</operator> <call pos:start="31:25" pos:end="31:42"><name pos:start="31:25" pos:end="31:32">g_malloc</name><argument_list pos:start="31:33" pos:end="31:42">(<argument pos:start="31:34" pos:end="31:41"><expr pos:start="31:34" pos:end="31:41"><name pos:start="31:34" pos:end="31:41">PATH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:16">filename_tmp</name>      <operator pos:start="33:23" pos:end="33:23">=</operator> <call pos:start="33:25" pos:end="33:42"><name pos:start="33:25" pos:end="33:32">g_malloc</name><argument_list pos:start="33:33" pos:end="33:42">(<argument pos:start="33:34" pos:end="33:41"><expr pos:start="33:34" pos:end="33:41"><name pos:start="33:34" pos:end="33:41">PATH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:50"><expr pos:start="37:5" pos:end="37:49"><name pos:start="37:5" pos:end="37:15">is_protocol</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:49"><name pos:start="37:19" pos:end="37:35">path_has_protocol</name><argument_list pos:start="37:36" pos:end="37:49">(<argument pos:start="37:37" pos:end="37:48"><expr pos:start="37:37" pos:end="37:48"><name pos:start="37:37" pos:end="37:48">backing_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="41:5" pos:end="109:5">for <control pos:start="41:9" pos:end="41:74">(<init pos:start="41:10" pos:end="41:22"><expr pos:start="41:10" pos:end="41:21"><name pos:start="41:10" pos:end="41:16">curr_bs</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <name pos:start="41:20" pos:end="41:21">bs</name></expr>;</init> <condition pos:start="41:24" pos:end="41:43"><expr pos:start="41:24" pos:end="41:42"><name pos:start="41:24" pos:end="41:42"><name pos:start="41:24" pos:end="41:30">curr_bs</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:42">backing_hd</name></name></expr>;</condition> <incr pos:start="41:45" pos:end="41:73"><expr pos:start="41:45" pos:end="41:73"><name pos:start="41:45" pos:end="41:51">curr_bs</name> <operator pos:start="41:53" pos:end="41:53">=</operator> <name pos:start="41:55" pos:end="41:73"><name pos:start="41:55" pos:end="41:61">curr_bs</name><operator pos:start="41:62" pos:end="41:63">-&gt;</operator><name pos:start="41:64" pos:end="41:73">backing_hd</name></name></expr></incr>)</control> <block pos:start="41:76" pos:end="109:5">{<block_content pos:start="49:9" pos:end="107:9">



        <comment type="block" pos:start="45:9" pos:end="47:69">/* If either of the filename paths is actually a protocol, then

         * compare unmodified paths; otherwise make paths relative */</comment>

        <if_stmt pos:start="49:9" pos:end="107:9"><if pos:start="49:9" pos:end="59:9">if <condition pos:start="49:12" pos:end="49:68">(<expr pos:start="49:13" pos:end="49:67"><name pos:start="49:13" pos:end="49:23">is_protocol</name> <operator pos:start="49:25" pos:end="49:26">||</operator> <call pos:start="49:28" pos:end="49:67"><name pos:start="49:28" pos:end="49:44">path_has_protocol</name><argument_list pos:start="49:45" pos:end="49:67">(<argument pos:start="49:46" pos:end="49:66"><expr pos:start="49:46" pos:end="49:66"><name pos:start="49:46" pos:end="49:66"><name pos:start="49:46" pos:end="49:52">curr_bs</name><operator pos:start="49:53" pos:end="49:54">-&gt;</operator><name pos:start="49:55" pos:end="49:66">backing_file</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:70" pos:end="59:9">{<block_content pos:start="51:13" pos:end="57:13">

            <if_stmt pos:start="51:13" pos:end="57:13"><if pos:start="51:13" pos:end="57:13">if <condition pos:start="51:16" pos:end="51:65">(<expr pos:start="51:17" pos:end="51:64"><call pos:start="51:17" pos:end="51:59"><name pos:start="51:17" pos:end="51:22">strcmp</name><argument_list pos:start="51:23" pos:end="51:59">(<argument pos:start="51:24" pos:end="51:35"><expr pos:start="51:24" pos:end="51:35"><name pos:start="51:24" pos:end="51:35">backing_file</name></expr></argument>, <argument pos:start="51:38" pos:end="51:58"><expr pos:start="51:38" pos:end="51:58"><name pos:start="51:38" pos:end="51:58"><name pos:start="51:38" pos:end="51:44">curr_bs</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:58">backing_file</name></name></expr></argument>)</argument_list></call> <operator pos:start="51:61" pos:end="51:62">==</operator> <literal type="number" pos:start="51:64" pos:end="51:64">0</literal></expr>)</condition> <block pos:start="51:67" pos:end="57:13">{<block_content pos:start="53:17" pos:end="55:22">

                <expr_stmt pos:start="53:17" pos:end="53:45"><expr pos:start="53:17" pos:end="53:44"><name pos:start="53:17" pos:end="53:22">retval</name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:44"><name pos:start="53:26" pos:end="53:32">curr_bs</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:44">backing_hd</name></name></expr>;</expr_stmt>

                <break pos:start="55:17" pos:end="55:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="107:9">else <block pos:start="59:16" pos:end="107:9">{<block_content pos:start="65:13" pos:end="105:13">

            <comment type="block" pos:start="61:13" pos:end="63:39">/* If not an absolute filename path, make it relative to the current

             * image's filename path */</comment>

            <expr_stmt pos:start="65:13" pos:end="67:39"><expr pos:start="65:13" pos:end="67:38"><call pos:start="65:13" pos:end="67:38"><name pos:start="65:13" pos:end="65:24">path_combine</name><argument_list pos:start="65:25" pos:end="67:38">(<argument pos:start="65:26" pos:end="65:37"><expr pos:start="65:26" pos:end="65:37"><name pos:start="65:26" pos:end="65:37">filename_tmp</name></expr></argument>, <argument pos:start="65:40" pos:end="65:47"><expr pos:start="65:40" pos:end="65:47"><name pos:start="65:40" pos:end="65:47">PATH_MAX</name></expr></argument>, <argument pos:start="65:50" pos:end="65:66"><expr pos:start="65:50" pos:end="65:66"><name pos:start="65:50" pos:end="65:66"><name pos:start="65:50" pos:end="65:56">curr_bs</name><operator pos:start="65:57" pos:end="65:58">-&gt;</operator><name pos:start="65:59" pos:end="65:66">filename</name></name></expr></argument>,

                         <argument pos:start="67:26" pos:end="67:37"><expr pos:start="67:26" pos:end="67:37"><name pos:start="67:26" pos:end="67:37">backing_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="71:13" pos:end="71:60">/* We are going to compare absolute pathnames */</comment>

            <if_stmt pos:start="73:13" pos:end="77:13"><if pos:start="73:13" pos:end="77:13">if <condition pos:start="73:16" pos:end="73:55">(<expr pos:start="73:17" pos:end="73:54"><operator pos:start="73:17" pos:end="73:17">!</operator><call pos:start="73:18" pos:end="73:54"><name pos:start="73:18" pos:end="73:25">realpath</name><argument_list pos:start="73:26" pos:end="73:54">(<argument pos:start="73:27" pos:end="73:38"><expr pos:start="73:27" pos:end="73:38"><name pos:start="73:27" pos:end="73:38">filename_tmp</name></expr></argument>, <argument pos:start="73:41" pos:end="73:53"><expr pos:start="73:41" pos:end="73:53"><name pos:start="73:41" pos:end="73:53">filename_full</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:57" pos:end="77:13">{<block_content pos:start="75:17" pos:end="75:25">

                <continue pos:start="75:17" pos:end="75:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="81:13" pos:end="83:73">/* We need to make sure the backing filename we are comparing against

             * is relative to the current image filename (or absolute) */</comment>

            <expr_stmt pos:start="85:13" pos:end="87:48"><expr pos:start="85:13" pos:end="87:47"><call pos:start="85:13" pos:end="87:47"><name pos:start="85:13" pos:end="85:24">path_combine</name><argument_list pos:start="85:25" pos:end="87:47">(<argument pos:start="85:26" pos:end="85:37"><expr pos:start="85:26" pos:end="85:37"><name pos:start="85:26" pos:end="85:37">filename_tmp</name></expr></argument>, <argument pos:start="85:40" pos:end="85:47"><expr pos:start="85:40" pos:end="85:47"><name pos:start="85:40" pos:end="85:47">PATH_MAX</name></expr></argument>, <argument pos:start="85:50" pos:end="85:66"><expr pos:start="85:50" pos:end="85:66"><name pos:start="85:50" pos:end="85:66"><name pos:start="85:50" pos:end="85:56">curr_bs</name><operator pos:start="85:57" pos:end="85:58">-&gt;</operator><name pos:start="85:59" pos:end="85:66">filename</name></name></expr></argument>,

                         <argument pos:start="87:26" pos:end="87:46"><expr pos:start="87:26" pos:end="87:46"><name pos:start="87:26" pos:end="87:46"><name pos:start="87:26" pos:end="87:32">curr_bs</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:46">backing_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="91:13" pos:end="95:13"><if pos:start="91:13" pos:end="95:13">if <condition pos:start="91:16" pos:end="91:59">(<expr pos:start="91:17" pos:end="91:58"><operator pos:start="91:17" pos:end="91:17">!</operator><call pos:start="91:18" pos:end="91:58"><name pos:start="91:18" pos:end="91:25">realpath</name><argument_list pos:start="91:26" pos:end="91:58">(<argument pos:start="91:27" pos:end="91:38"><expr pos:start="91:27" pos:end="91:38"><name pos:start="91:27" pos:end="91:38">filename_tmp</name></expr></argument>, <argument pos:start="91:41" pos:end="91:57"><expr pos:start="91:41" pos:end="91:57"><name pos:start="91:41" pos:end="91:57">backing_file_full</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:61" pos:end="95:13">{<block_content pos:start="93:17" pos:end="93:25">

                <continue pos:start="93:17" pos:end="93:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="99:13" pos:end="105:13"><if pos:start="99:13" pos:end="105:13">if <condition pos:start="99:16" pos:end="99:62">(<expr pos:start="99:17" pos:end="99:61"><call pos:start="99:17" pos:end="99:56"><name pos:start="99:17" pos:end="99:22">strcmp</name><argument_list pos:start="99:23" pos:end="99:56">(<argument pos:start="99:24" pos:end="99:40"><expr pos:start="99:24" pos:end="99:40"><name pos:start="99:24" pos:end="99:40">backing_file_full</name></expr></argument>, <argument pos:start="99:43" pos:end="99:55"><expr pos:start="99:43" pos:end="99:55"><name pos:start="99:43" pos:end="99:55">filename_full</name></expr></argument>)</argument_list></call> <operator pos:start="99:58" pos:end="99:59">==</operator> <literal type="number" pos:start="99:61" pos:end="99:61">0</literal></expr>)</condition> <block pos:start="99:64" pos:end="105:13">{<block_content pos:start="101:17" pos:end="103:22">

                <expr_stmt pos:start="101:17" pos:end="101:45"><expr pos:start="101:17" pos:end="101:44"><name pos:start="101:17" pos:end="101:22">retval</name> <operator pos:start="101:24" pos:end="101:24">=</operator> <name pos:start="101:26" pos:end="101:44"><name pos:start="101:26" pos:end="101:32">curr_bs</name><operator pos:start="101:33" pos:end="101:34">-&gt;</operator><name pos:start="101:35" pos:end="101:44">backing_hd</name></name></expr>;</expr_stmt>

                <break pos:start="103:17" pos:end="103:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="113:5" pos:end="113:26"><expr pos:start="113:5" pos:end="113:25"><call pos:start="113:5" pos:end="113:25"><name pos:start="113:5" pos:end="113:10">g_free</name><argument_list pos:start="113:11" pos:end="113:25">(<argument pos:start="113:12" pos:end="113:24"><expr pos:start="113:12" pos:end="113:24"><name pos:start="113:12" pos:end="113:24">filename_full</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:30"><expr pos:start="115:5" pos:end="115:29"><call pos:start="115:5" pos:end="115:29"><name pos:start="115:5" pos:end="115:10">g_free</name><argument_list pos:start="115:11" pos:end="115:29">(<argument pos:start="115:12" pos:end="115:28"><expr pos:start="115:12" pos:end="115:28"><name pos:start="115:12" pos:end="115:28">backing_file_full</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:25"><expr pos:start="117:5" pos:end="117:24"><call pos:start="117:5" pos:end="117:24"><name pos:start="117:5" pos:end="117:10">g_free</name><argument_list pos:start="117:11" pos:end="117:24">(<argument pos:start="117:12" pos:end="117:23"><expr pos:start="117:12" pos:end="117:23"><name pos:start="117:12" pos:end="117:23">filename_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="119:5" pos:end="119:18">return <expr pos:start="119:12" pos:end="119:17"><name pos:start="119:12" pos:end="119:17">retval</name></expr>;</return>

</block_content>}</block></function>
</unit>
