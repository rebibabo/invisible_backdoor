<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8845.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">qemu_iohandler_fill</name><parameter_list pos:start="1:25" pos:end="1:41">(<parameter pos:start="1:26" pos:end="1:40"><decl pos:start="1:26" pos:end="1:40"><type pos:start="1:26" pos:end="1:33"><name pos:start="1:26" pos:end="1:31">GArray</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:40">pollfds</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">IOHandlerRecord</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ioh</name></decl>;</decl_stmt>



    <macro pos:start="9:5" pos:end="9:42"><name pos:start="9:5" pos:end="9:17">QLIST_FOREACH</name><argument_list pos:start="9:18" pos:end="9:42">(<argument pos:start="9:19" pos:end="9:21">ioh</argument>, <argument pos:start="9:24" pos:end="9:35">&amp;io_handlers</argument>, <argument pos:start="9:38" pos:end="9:41">next</argument>)</argument_list></macro> <block pos:start="9:44" pos:end="55:5">{<block_content pos:start="11:9" pos:end="53:9">

        <decl_stmt pos:start="11:9" pos:end="11:23"><decl pos:start="11:9" pos:end="11:22"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:18">events</name> <init pos:start="11:20" pos:end="11:22">= <expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="15:9" pos:end="17:21"><if pos:start="15:9" pos:end="17:21">if <condition pos:start="15:12" pos:end="15:25">(<expr pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:15">ioh</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:24">deleted</name></name></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:21"><block_content pos:start="17:13" pos:end="17:21">

            <continue pos:start="17:13" pos:end="17:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="19:9" pos:end="27:9"><if pos:start="19:9" pos:end="27:9">if <condition pos:start="19:12" pos:end="23:50">(<expr pos:start="19:13" pos:end="23:49"><name pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:15">ioh</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:24">fd_read</name></name> <operator pos:start="19:26" pos:end="19:27">&amp;&amp;</operator>

            <operator pos:start="21:13" pos:end="21:13">(</operator><operator pos:start="21:14" pos:end="21:14">!</operator><name pos:start="21:15" pos:end="21:31"><name pos:start="21:15" pos:end="21:17">ioh</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:31">fd_read_poll</name></name> <operator pos:start="21:33" pos:end="21:34">||</operator>

             <call pos:start="23:14" pos:end="23:43"><name pos:start="23:14" pos:end="23:30"><name pos:start="23:14" pos:end="23:16">ioh</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:30">fd_read_poll</name></name><argument_list pos:start="23:31" pos:end="23:43">(<argument pos:start="23:32" pos:end="23:42"><expr pos:start="23:32" pos:end="23:42"><name pos:start="23:32" pos:end="23:42"><name pos:start="23:32" pos:end="23:34">ioh</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:42">opaque</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:45" pos:end="23:46">!=</operator> <literal type="number" pos:start="23:48" pos:end="23:48">0</literal><operator pos:start="23:49" pos:end="23:49">)</operator></expr>)</condition> <block pos:start="23:52" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:52">

            <expr_stmt pos:start="25:13" pos:end="25:52"><expr pos:start="25:13" pos:end="25:51"><name pos:start="25:13" pos:end="25:18">events</name> <operator pos:start="25:20" pos:end="25:21">|=</operator> <name pos:start="25:23" pos:end="25:29">G_IO_IN</name> <operator pos:start="25:31" pos:end="25:31">|</operator> <name pos:start="25:33" pos:end="25:40">G_IO_HUP</name> <operator pos:start="25:42" pos:end="25:42">|</operator> <name pos:start="25:44" pos:end="25:51">G_IO_ERR</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:26">(<expr pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:15">ioh</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:25">fd_write</name></name></expr>)</condition> <block pos:start="29:28" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:42">

            <expr_stmt pos:start="31:13" pos:end="31:42"><expr pos:start="31:13" pos:end="31:41"><name pos:start="31:13" pos:end="31:18">events</name> <operator pos:start="31:20" pos:end="31:21">|=</operator> <name pos:start="31:23" pos:end="31:30">G_IO_OUT</name> <operator pos:start="31:32" pos:end="31:32">|</operator> <name pos:start="31:34" pos:end="31:41">G_IO_ERR</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="53:9"><if pos:start="35:9" pos:end="49:9">if <condition pos:start="35:12" pos:end="35:19">(<expr pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:18">events</name></expr>)</condition> <block pos:start="35:21" pos:end="49:9">{<block_content pos:start="37:13" pos:end="47:45">

            <decl_stmt pos:start="37:13" pos:end="43:14"><decl pos:start="37:13" pos:end="43:13"><type pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:19">GPollFD</name></type> <name pos:start="37:21" pos:end="37:23">pfd</name> <init pos:start="37:25" pos:end="43:13">= <expr pos:start="37:27" pos:end="43:13"><block pos:start="37:27" pos:end="43:13">{

                <expr pos:start="39:17" pos:end="39:29"><operator pos:start="39:17" pos:end="39:17">.</operator><name pos:start="39:18" pos:end="39:19">fd</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <name pos:start="39:23" pos:end="39:29"><name pos:start="39:23" pos:end="39:25">ioh</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:29">fd</name></name></expr>,

                <expr pos:start="41:17" pos:end="41:32"><operator pos:start="41:17" pos:end="41:17">.</operator><name pos:start="41:18" pos:end="41:23">events</name> <operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:32">events</name></expr>,

            }</block></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:44"><expr pos:start="45:13" pos:end="45:43"><name pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:15">ioh</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:28">pollfds_idx</name></name> <operator pos:start="45:30" pos:end="45:30">=</operator> <name pos:start="45:32" pos:end="45:43"><name pos:start="45:32" pos:end="45:38">pollfds</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:43">len</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:45"><expr pos:start="47:13" pos:end="47:44"><call pos:start="47:13" pos:end="47:44"><name pos:start="47:13" pos:end="47:30">g_array_append_val</name><argument_list pos:start="47:31" pos:end="47:44">(<argument pos:start="47:32" pos:end="47:38"><expr pos:start="47:32" pos:end="47:38"><name pos:start="47:32" pos:end="47:38">pollfds</name></expr></argument>, <argument pos:start="47:41" pos:end="47:43"><expr pos:start="47:41" pos:end="47:43"><name pos:start="47:41" pos:end="47:43">pfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="53:9">else <block pos:start="49:16" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:34">

            <expr_stmt pos:start="51:13" pos:end="51:34"><expr pos:start="51:13" pos:end="51:33"><name pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:15">ioh</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:28">pollfds_idx</name></name> <operator pos:start="51:30" pos:end="51:30">=</operator> <operator pos:start="51:32" pos:end="51:32">-</operator><literal type="number" pos:start="51:33" pos:end="51:33">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
