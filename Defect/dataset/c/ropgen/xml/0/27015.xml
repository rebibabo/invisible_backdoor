<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27015.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">send_qmp_error_event</name><parameter_list pos:start="1:33" pos:end="5:57">(<parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:53"><name pos:start="1:34" pos:end="1:49">BlockDriverState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">bs</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:56"><decl pos:start="3:34" pos:end="3:56"><type pos:start="3:34" pos:end="3:56"><name pos:start="3:34" pos:end="3:49">BlockErrorAction</name></type> <name pos:start="3:51" pos:end="3:56">action</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:45"><decl pos:start="5:34" pos:end="5:45"><type pos:start="5:34" pos:end="5:45"><name pos:start="5:34" pos:end="5:37">bool</name></type> <name pos:start="5:39" pos:end="5:45">is_read</name></decl></parameter>, <parameter pos:start="5:48" pos:end="5:56"><decl pos:start="5:48" pos:end="5:56"><type pos:start="5:48" pos:end="5:56"><name pos:start="5:48" pos:end="5:50">int</name></type> <name pos:start="5:52" pos:end="5:56">error</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="23:1">{<block_content pos:start="9:5" pos:end="21:49">

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:19">IoOperationType</name></type> <name pos:start="9:21" pos:end="9:26">optype</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:72"><expr pos:start="13:5" pos:end="13:71"><name pos:start="13:5" pos:end="13:10">optype</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <ternary pos:start="13:14" pos:end="13:71"><condition pos:start="13:14" pos:end="13:22"><expr pos:start="13:14" pos:end="13:20"><name pos:start="13:14" pos:end="13:20">is_read</name></expr> ?</condition><then pos:start="13:24" pos:end="13:45"> <expr pos:start="13:24" pos:end="13:45"><name pos:start="13:24" pos:end="13:45">IO_OPERATION_TYPE_READ</name></expr> </then><else pos:start="13:47" pos:end="13:71">: <expr pos:start="13:49" pos:end="13:71"><name pos:start="13:49" pos:end="13:71">IO_OPERATION_TYPE_WRITE</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="21:49"><expr pos:start="15:5" pos:end="21:48"><call pos:start="15:5" pos:end="21:48"><name pos:start="15:5" pos:end="15:34">qapi_event_send_block_io_error</name><argument_list pos:start="15:35" pos:end="21:48">(<argument pos:start="15:36" pos:end="15:59"><expr pos:start="15:36" pos:end="15:59"><call pos:start="15:36" pos:end="15:59"><name pos:start="15:36" pos:end="15:55">bdrv_get_device_name</name><argument_list pos:start="15:56" pos:end="15:59">(<argument pos:start="15:57" pos:end="15:58"><expr pos:start="15:57" pos:end="15:58"><name pos:start="15:57" pos:end="15:58">bs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:62" pos:end="15:67"><expr pos:start="15:62" pos:end="15:67"><name pos:start="15:62" pos:end="15:67">optype</name></expr></argument>, <argument pos:start="15:70" pos:end="15:75"><expr pos:start="15:70" pos:end="15:75"><name pos:start="15:70" pos:end="15:75">action</name></expr></argument>,

                                   <argument pos:start="17:36" pos:end="17:63"><expr pos:start="17:36" pos:end="17:63"><call pos:start="17:36" pos:end="17:63"><name pos:start="17:36" pos:end="17:59">bdrv_iostatus_is_enabled</name><argument_list pos:start="17:60" pos:end="17:63">(<argument pos:start="17:61" pos:end="17:62"><expr pos:start="17:61" pos:end="17:62"><name pos:start="17:61" pos:end="17:62">bs</name></expr></argument>)</argument_list></call></expr></argument>,

                                   <argument pos:start="19:36" pos:end="19:50"><expr pos:start="19:36" pos:end="19:50"><name pos:start="19:36" pos:end="19:40">error</name> <operator pos:start="19:42" pos:end="19:43">==</operator> <name pos:start="19:45" pos:end="19:50">ENOSPC</name></expr></argument>, <argument pos:start="19:53" pos:end="19:67"><expr pos:start="19:53" pos:end="19:67"><call pos:start="19:53" pos:end="19:67"><name pos:start="19:53" pos:end="19:60">strerror</name><argument_list pos:start="19:61" pos:end="19:67">(<argument pos:start="19:62" pos:end="19:66"><expr pos:start="19:62" pos:end="19:66"><name pos:start="19:62" pos:end="19:66">error</name></expr></argument>)</argument_list></call></expr></argument>,

                                   <argument pos:start="21:36" pos:end="21:47"><expr pos:start="21:36" pos:end="21:47"><operator pos:start="21:36" pos:end="21:36">&amp;</operator><name pos:start="21:37" pos:end="21:47">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
