<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9705.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">av_find_best_stream</name><parameter_list pos:start="1:24" pos:end="11:34">(<parameter pos:start="1:25" pos:end="1:43"><decl pos:start="1:25" pos:end="1:43"><type pos:start="1:25" pos:end="1:43"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">ic</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:45"><decl pos:start="3:25" pos:end="3:45"><type pos:start="3:25" pos:end="3:45"><name pos:start="3:25" pos:end="3:40"><name pos:start="3:25" pos:end="3:28">enum</name> <name pos:start="3:30" pos:end="3:40">AVMediaType</name></name></type> <name pos:start="3:42" pos:end="3:45">type</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:44"><decl pos:start="5:25" pos:end="5:44"><type pos:start="5:25" pos:end="5:44"><name pos:start="5:25" pos:end="5:27">int</name></type> <name pos:start="5:29" pos:end="5:44">wanted_stream_nb</name></decl></parameter>,

                        <parameter pos:start="7:25" pos:end="7:42"><decl pos:start="7:25" pos:end="7:42"><type pos:start="7:25" pos:end="7:42"><name pos:start="7:25" pos:end="7:27">int</name></type> <name pos:start="7:29" pos:end="7:42">related_stream</name></decl></parameter>,

                        <parameter pos:start="9:25" pos:end="9:45"><decl pos:start="9:25" pos:end="9:45"><type pos:start="9:25" pos:end="9:45"><name pos:start="9:25" pos:end="9:31">AVCodec</name> <modifier pos:start="9:33" pos:end="9:33">*</modifier><modifier pos:start="9:34" pos:end="9:34">*</modifier></type><name pos:start="9:35" pos:end="9:45">decoder_ret</name></decl></parameter>,

                        <parameter pos:start="11:25" pos:end="11:33"><decl pos:start="11:25" pos:end="11:33"><type pos:start="11:25" pos:end="11:33"><name pos:start="11:25" pos:end="11:27">int</name></type> <name pos:start="11:29" pos:end="11:33">flags</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="101:1">{<block_content pos:start="15:5" pos:end="99:15">

    <decl_stmt pos:start="15:5" pos:end="15:58"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:38"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:21">nb_streams</name> <init pos:start="15:23" pos:end="15:38">= <expr pos:start="15:25" pos:end="15:38"><name pos:start="15:25" pos:end="15:38"><name pos:start="15:25" pos:end="15:26">ic</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:38">nb_streams</name></name></expr></init></decl>, <decl pos:start="15:41" pos:end="15:57"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:41" pos:end="15:53">stream_number</name> <init pos:start="15:55" pos:end="15:57">= <expr pos:start="15:57" pos:end="15:57"><literal type="number" pos:start="15:57" pos:end="15:57">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:56"><decl pos:start="17:5" pos:end="17:38"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name> <init pos:start="17:13" pos:end="17:38">= <expr pos:start="17:15" pos:end="17:38"><name pos:start="17:15" pos:end="17:38">AVERROR_STREAM_NOT_FOUND</name></expr></init></decl>, <decl pos:start="17:41" pos:end="17:55"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:41" pos:end="17:50">best_count</name> <init pos:start="17:52" pos:end="17:55">= <expr pos:start="17:54" pos:end="17:55"><operator pos:start="17:54" pos:end="17:54">-</operator><literal type="number" pos:start="17:55" pos:end="17:55">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:28"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">unsigned</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:21">program</name> <init pos:start="19:23" pos:end="19:28">= <expr pos:start="19:25" pos:end="19:28"><name pos:start="19:25" pos:end="19:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:50"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">AVCodec</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:20">decoder</name> <init pos:start="21:22" pos:end="21:27">= <expr pos:start="21:24" pos:end="21:27"><name pos:start="21:24" pos:end="21:27">NULL</name></expr></init></decl>, <decl pos:start="21:30" pos:end="21:49"><type ref="prev" pos:start="21:5" pos:end="21:13"><modifier pos:start="21:30" pos:end="21:30">*</modifier></type><name pos:start="21:31" pos:end="21:42">best_decoder</name> <init pos:start="21:44" pos:end="21:49">= <expr pos:start="21:46" pos:end="21:49"><name pos:start="21:46" pos:end="21:49">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:52">(<expr pos:start="25:9" pos:end="25:51"><name pos:start="25:9" pos:end="25:22">related_stream</name> <operator pos:start="25:24" pos:end="25:25">&gt;=</operator> <literal type="number" pos:start="25:27" pos:end="25:27">0</literal> <operator pos:start="25:29" pos:end="25:30">&amp;&amp;</operator> <name pos:start="25:32" pos:end="25:47">wanted_stream_nb</name> <operator pos:start="25:49" pos:end="25:49">&lt;</operator> <literal type="number" pos:start="25:51" pos:end="25:51">0</literal></expr>)</condition> <block pos:start="25:54" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:9">

        <decl_stmt pos:start="27:9" pos:end="27:68"><decl pos:start="27:9" pos:end="27:67"><type pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:17">AVProgram</name> <modifier pos:start="27:19" pos:end="27:19">*</modifier></type><name pos:start="27:20" pos:end="27:20">p</name> <init pos:start="27:22" pos:end="27:67">= <expr pos:start="27:24" pos:end="27:67"><call pos:start="27:24" pos:end="27:67"><name pos:start="27:24" pos:end="27:47">find_program_from_stream</name><argument_list pos:start="27:48" pos:end="27:67">(<argument pos:start="27:49" pos:end="27:50"><expr pos:start="27:49" pos:end="27:50"><name pos:start="27:49" pos:end="27:50">ic</name></expr></argument>, <argument pos:start="27:53" pos:end="27:66"><expr pos:start="27:53" pos:end="27:66"><name pos:start="27:53" pos:end="27:66">related_stream</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:14">(<expr pos:start="29:13" pos:end="29:13"><name pos:start="29:13" pos:end="29:13">p</name></expr>)</condition> <block pos:start="29:16" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:46">

            <expr_stmt pos:start="31:13" pos:end="31:38"><expr pos:start="31:13" pos:end="31:37"><name pos:start="31:13" pos:end="31:19">program</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:37"><name pos:start="31:23" pos:end="31:23">p</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:37">stream_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:46"><expr pos:start="33:13" pos:end="33:45"><name pos:start="33:13" pos:end="33:22">nb_streams</name> <operator pos:start="33:24" pos:end="33:24">=</operator> <name pos:start="33:26" pos:end="33:45"><name pos:start="33:26" pos:end="33:26">p</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:45">nb_stream_indexes</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="39:5" pos:end="93:5">for <control pos:start="39:9" pos:end="39:36">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:31"><expr pos:start="39:17" pos:end="39:30"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:30">nb_streams</name></expr>;</condition> <incr pos:start="39:33" pos:end="39:35"><expr pos:start="39:33" pos:end="39:35"><name pos:start="39:33" pos:end="39:33">i</name><operator pos:start="39:34" pos:end="39:35">++</operator></expr></incr>)</control> <block pos:start="39:38" pos:end="93:5">{<block_content pos:start="41:9" pos:end="91:9">

        <decl_stmt pos:start="41:9" pos:end="41:61"><decl pos:start="41:9" pos:end="41:60"><type pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:16">AVStream</name> <modifier pos:start="41:18" pos:end="41:18">*</modifier></type><name pos:start="41:19" pos:end="41:20">st</name> <init pos:start="41:22" pos:end="41:60">= <expr pos:start="41:24" pos:end="41:60"><name pos:start="41:24" pos:end="41:60"><name pos:start="41:24" pos:end="41:25">ic</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:34">streams</name><index pos:start="41:35" pos:end="41:60">[<expr pos:start="41:36" pos:end="41:59"><ternary pos:start="41:36" pos:end="41:59"><condition pos:start="41:36" pos:end="41:44"><expr pos:start="41:36" pos:end="41:42"><name pos:start="41:36" pos:end="41:42">program</name></expr> ?</condition><then pos:start="41:46" pos:end="41:55"> <expr pos:start="41:46" pos:end="41:55"><name pos:start="41:46" pos:end="41:55"><name pos:start="41:46" pos:end="41:52">program</name><index pos:start="41:53" pos:end="41:55">[<expr pos:start="41:54" pos:end="41:54"><name pos:start="41:54" pos:end="41:54">i</name></expr>]</index></name></expr> </then><else pos:start="41:57" pos:end="41:59">: <expr pos:start="41:59" pos:end="41:59"><name pos:start="41:59" pos:end="41:59">i</name></expr></else></ternary></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:42"><decl pos:start="43:9" pos:end="43:41"><type pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:22">AVCodecContext</name> <modifier pos:start="43:24" pos:end="43:24">*</modifier></type><name pos:start="43:25" pos:end="43:29">avctx</name> <init pos:start="43:31" pos:end="43:41">= <expr pos:start="43:33" pos:end="43:41"><name pos:start="43:33" pos:end="43:41"><name pos:start="43:33" pos:end="43:34">st</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:41">codec</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="45:9" pos:end="47:21"><if pos:start="45:9" pos:end="47:21">if <condition pos:start="45:12" pos:end="45:38">(<expr pos:start="45:13" pos:end="45:37"><name pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:17">avctx</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:29">codec_type</name></name> <operator pos:start="45:31" pos:end="45:32">!=</operator> <name pos:start="45:34" pos:end="45:37">type</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:21"><block_content pos:start="47:13" pos:end="47:21">

            <continue pos:start="47:13" pos:end="47:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="51:21"><if pos:start="49:9" pos:end="51:21">if <condition pos:start="49:12" pos:end="49:73">(<expr pos:start="49:13" pos:end="49:72"><name pos:start="49:13" pos:end="49:28">wanted_stream_nb</name> <operator pos:start="49:30" pos:end="49:31">&gt;=</operator> <literal type="number" pos:start="49:33" pos:end="49:33">0</literal> <operator pos:start="49:35" pos:end="49:36">&amp;&amp;</operator> <name pos:start="49:38" pos:end="49:50">stream_number</name><operator pos:start="49:51" pos:end="49:52">++</operator> <operator pos:start="49:54" pos:end="49:55">!=</operator> <name pos:start="49:57" pos:end="49:72">wanted_stream_nb</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:21"><block_content pos:start="51:13" pos:end="51:21">

            <continue pos:start="51:13" pos:end="51:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="55:21"><if pos:start="53:9" pos:end="55:21">if <condition pos:start="53:12" pos:end="53:95">(<expr pos:start="53:13" pos:end="53:94"><name pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:14">st</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:27">disposition</name></name> <operator pos:start="53:29" pos:end="53:29">&amp;</operator> <operator pos:start="53:31" pos:end="53:31">(</operator><name pos:start="53:32" pos:end="53:62">AV_DISPOSITION_HEARING_IMPAIRED</name><operator pos:start="53:63" pos:end="53:63">|</operator><name pos:start="53:64" pos:end="53:93">AV_DISPOSITION_VISUAL_IMPAIRED</name><operator pos:start="53:94" pos:end="53:94">)</operator></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:21"><block_content pos:start="55:13" pos:end="55:21">

            <continue pos:start="55:13" pos:end="55:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="71:9"><if pos:start="57:9" pos:end="71:9">if <condition pos:start="57:12" pos:end="57:24">(<expr pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:23">decoder_ret</name></expr>)</condition> <block pos:start="57:26" pos:end="71:9">{<block_content pos:start="59:13" pos:end="69:13">

            <expr_stmt pos:start="59:13" pos:end="59:64"><expr pos:start="59:13" pos:end="59:63"><name pos:start="59:13" pos:end="59:19">decoder</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <call pos:start="59:23" pos:end="59:63"><name pos:start="59:23" pos:end="59:42">avcodec_find_decoder</name><argument_list pos:start="59:43" pos:end="59:63">(<argument pos:start="59:44" pos:end="59:62"><expr pos:start="59:44" pos:end="59:62"><name pos:start="59:44" pos:end="59:62"><name pos:start="59:44" pos:end="59:45">st</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:52">codec</name><operator pos:start="59:53" pos:end="59:54">-&gt;</operator><name pos:start="59:55" pos:end="59:62">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="61:13" pos:end="69:13"><if pos:start="61:13" pos:end="69:13">if <condition pos:start="61:16" pos:end="61:25">(<expr pos:start="61:17" pos:end="61:24"><operator pos:start="61:17" pos:end="61:17">!</operator><name pos:start="61:18" pos:end="61:24">decoder</name></expr>)</condition> <block pos:start="61:27" pos:end="69:13">{<block_content pos:start="63:17" pos:end="67:25">

                <if_stmt pos:start="63:17" pos:end="65:52"><if pos:start="63:17" pos:end="65:52">if <condition pos:start="63:20" pos:end="63:28">(<expr pos:start="63:21" pos:end="63:27"><name pos:start="63:21" pos:end="63:23">ret</name> <operator pos:start="63:25" pos:end="63:25">&lt;</operator> <literal type="number" pos:start="63:27" pos:end="63:27">0</literal></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:52"><block_content pos:start="65:21" pos:end="65:52">

                    <expr_stmt pos:start="65:21" pos:end="65:52"><expr pos:start="65:21" pos:end="65:51"><name pos:start="65:21" pos:end="65:23">ret</name> <operator pos:start="65:25" pos:end="65:25">=</operator> <name pos:start="65:27" pos:end="65:51">AVERROR_DECODER_NOT_FOUND</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <continue pos:start="67:17" pos:end="67:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="73:9" pos:end="75:21"><if pos:start="73:9" pos:end="75:21">if <condition pos:start="73:12" pos:end="73:51">(<expr pos:start="73:13" pos:end="73:50"><name pos:start="73:13" pos:end="73:22">best_count</name> <operator pos:start="73:24" pos:end="73:25">&gt;=</operator> <name pos:start="73:27" pos:end="73:50"><name pos:start="73:27" pos:end="73:28">st</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:50">codec_info_nb_frames</name></name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:21"><block_content pos:start="75:13" pos:end="75:21">

            <continue pos:start="75:13" pos:end="75:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:46"><expr pos:start="77:9" pos:end="77:45"><name pos:start="77:9" pos:end="77:18">best_count</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:45"><name pos:start="77:22" pos:end="77:23">st</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:45">codec_info_nb_frames</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:39"><expr pos:start="79:9" pos:end="79:38"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <ternary pos:start="79:15" pos:end="79:38"><condition pos:start="79:15" pos:end="79:23"><expr pos:start="79:15" pos:end="79:21"><name pos:start="79:15" pos:end="79:21">program</name></expr> ?</condition><then pos:start="79:25" pos:end="79:34"> <expr pos:start="79:25" pos:end="79:34"><name pos:start="79:25" pos:end="79:34"><name pos:start="79:25" pos:end="79:31">program</name><index pos:start="79:32" pos:end="79:34">[<expr pos:start="79:33" pos:end="79:33"><name pos:start="79:33" pos:end="79:33">i</name></expr>]</index></name></expr> </then><else pos:start="79:36" pos:end="79:38">: <expr pos:start="79:38" pos:end="79:38"><name pos:start="79:38" pos:end="79:38">i</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:31"><expr pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:20">best_decoder</name> <operator pos:start="81:22" pos:end="81:22">=</operator> <name pos:start="81:24" pos:end="81:30">decoder</name></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="91:9"><if pos:start="83:9" pos:end="91:9">if <condition pos:start="83:12" pos:end="83:54">(<expr pos:start="83:13" pos:end="83:53"><name pos:start="83:13" pos:end="83:19">program</name> <operator pos:start="83:21" pos:end="83:22">&amp;&amp;</operator> <name pos:start="83:24" pos:end="83:24">i</name> <operator pos:start="83:26" pos:end="83:27">==</operator> <name pos:start="83:29" pos:end="83:38">nb_streams</name> <operator pos:start="83:40" pos:end="83:40">-</operator> <literal type="number" pos:start="83:42" pos:end="83:42">1</literal> <operator pos:start="83:44" pos:end="83:45">&amp;&amp;</operator> <name pos:start="83:47" pos:end="83:49">ret</name> <operator pos:start="83:51" pos:end="83:51">&lt;</operator> <literal type="number" pos:start="83:53" pos:end="83:53">0</literal></expr>)</condition> <block pos:start="83:56" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:18">

            <expr_stmt pos:start="85:13" pos:end="85:27"><expr pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:19">program</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <name pos:start="85:23" pos:end="85:26">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:40"><expr pos:start="87:13" pos:end="87:39"><name pos:start="87:13" pos:end="87:22">nb_streams</name> <operator pos:start="87:24" pos:end="87:24">=</operator> <name pos:start="87:26" pos:end="87:39"><name pos:start="87:26" pos:end="87:27">ic</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:39">nb_streams</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:18"><expr pos:start="89:13" pos:end="89:17"><name pos:start="89:13" pos:end="89:13">i</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <literal type="number" pos:start="89:17" pos:end="89:17">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="89:20" pos:end="89:75">/* no related stream found, try again with everything */</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="95:5" pos:end="97:36"><if pos:start="95:5" pos:end="97:36">if <condition pos:start="95:8" pos:end="95:20">(<expr pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:19">decoder_ret</name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:36"><block_content pos:start="97:9" pos:end="97:36">

        <expr_stmt pos:start="97:9" pos:end="97:36"><expr pos:start="97:9" pos:end="97:35"><operator pos:start="97:9" pos:end="97:9">*</operator><name pos:start="97:10" pos:end="97:20">decoder_ret</name> <operator pos:start="97:22" pos:end="97:22">=</operator> <name pos:start="97:24" pos:end="97:35">best_decoder</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="99:5" pos:end="99:15">return <expr pos:start="99:12" pos:end="99:14"><name pos:start="99:12" pos:end="99:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
