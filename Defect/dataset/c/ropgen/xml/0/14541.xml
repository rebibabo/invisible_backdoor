<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14541.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">spapr_vio_send_crq</name><parameter_list pos:start="1:23" pos:end="1:57">(<parameter pos:start="1:24" pos:end="1:42"><decl pos:start="1:24" pos:end="1:42"><type pos:start="1:24" pos:end="1:42"><name pos:start="1:24" pos:end="1:37">VIOsPAPRDevice</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">dev</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:51">uint8_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">crq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:13">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">rc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:16">byte</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:23"><name pos:start="11:10" pos:end="11:12">dev</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:17">crq</name><operator pos:start="11:18" pos:end="11:18">.</operator><name pos:start="11:19" pos:end="11:23">qsize</name></name></expr>)</condition> <block pos:start="11:26" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:18">

        <expr_stmt pos:start="13:9" pos:end="13:72"><expr pos:start="13:9" pos:end="13:71"><call pos:start="13:9" pos:end="13:71"><name pos:start="13:9" pos:end="13:15">fprintf</name><argument_list pos:start="13:16" pos:end="13:71">(<argument pos:start="13:17" pos:end="13:22"><expr pos:start="13:17" pos:end="13:22"><name pos:start="13:17" pos:end="13:22">stderr</name></expr></argument>, <argument pos:start="13:25" pos:end="13:70"><expr pos:start="13:25" pos:end="13:70"><literal type="string" pos:start="13:25" pos:end="13:70">"spapr_vio_send_creq on uninitialized queue\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:64">/* Maybe do a fast path for KVM just writing to the pages */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:77"><expr pos:start="23:5" pos:end="23:76"><name pos:start="23:5" pos:end="23:6">rc</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <call pos:start="23:10" pos:end="23:76"><name pos:start="23:10" pos:end="23:27">spapr_vio_dma_read</name><argument_list pos:start="23:28" pos:end="23:76">(<argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">dev</name></expr></argument>, <argument pos:start="23:34" pos:end="23:65"><expr pos:start="23:34" pos:end="23:65"><name pos:start="23:34" pos:end="23:48"><name pos:start="23:34" pos:end="23:36">dev</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:41">crq</name><operator pos:start="23:42" pos:end="23:42">.</operator><name pos:start="23:43" pos:end="23:48">qladdr</name></name> <operator pos:start="23:50" pos:end="23:50">+</operator> <name pos:start="23:52" pos:end="23:65"><name pos:start="23:52" pos:end="23:54">dev</name><operator pos:start="23:55" pos:end="23:56">-&gt;</operator><name pos:start="23:57" pos:end="23:59">crq</name><operator pos:start="23:60" pos:end="23:60">.</operator><name pos:start="23:61" pos:end="23:65">qnext</name></name></expr></argument>, <argument pos:start="23:68" pos:end="23:72"><expr pos:start="23:68" pos:end="23:72"><operator pos:start="23:68" pos:end="23:68">&amp;</operator><name pos:start="23:69" pos:end="23:72">byte</name></expr></argument>, <argument pos:start="23:75" pos:end="23:75"><expr pos:start="23:75" pos:end="23:75"><literal type="number" pos:start="23:75" pos:end="23:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:11">(<expr pos:start="25:9" pos:end="25:10"><name pos:start="25:9" pos:end="25:10">rc</name></expr>)</condition> <block pos:start="25:13" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><name pos:start="27:16" pos:end="27:17">rc</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:18">(<expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:12">byte</name> <operator pos:start="31:14" pos:end="31:15">!=</operator> <literal type="number" pos:start="31:17" pos:end="31:17">0</literal></expr>)</condition> <block pos:start="31:20" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:17">

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="41:41"><expr pos:start="39:5" pos:end="41:40"><name pos:start="39:5" pos:end="39:6">rc</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <call pos:start="39:10" pos:end="41:40"><name pos:start="39:10" pos:end="39:28">spapr_vio_dma_write</name><argument_list pos:start="39:29" pos:end="41:40">(<argument pos:start="39:30" pos:end="39:32"><expr pos:start="39:30" pos:end="39:32"><name pos:start="39:30" pos:end="39:32">dev</name></expr></argument>, <argument pos:start="39:35" pos:end="39:70"><expr pos:start="39:35" pos:end="39:70"><name pos:start="39:35" pos:end="39:49"><name pos:start="39:35" pos:end="39:37">dev</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:42">crq</name><operator pos:start="39:43" pos:end="39:43">.</operator><name pos:start="39:44" pos:end="39:49">qladdr</name></name> <operator pos:start="39:51" pos:end="39:51">+</operator> <name pos:start="39:53" pos:end="39:66"><name pos:start="39:53" pos:end="39:55">dev</name><operator pos:start="39:56" pos:end="39:57">-&gt;</operator><name pos:start="39:58" pos:end="39:60">crq</name><operator pos:start="39:61" pos:end="39:61">.</operator><name pos:start="39:62" pos:end="39:66">qnext</name></name> <operator pos:start="39:68" pos:end="39:68">+</operator> <literal type="number" pos:start="39:70" pos:end="39:70">8</literal></expr></argument>,

                             <argument pos:start="41:30" pos:end="41:36"><expr pos:start="41:30" pos:end="41:36"><operator pos:start="41:30" pos:end="41:30">&amp;</operator><name pos:start="41:31" pos:end="41:36"><name pos:start="41:31" pos:end="41:33">crq</name><index pos:start="41:34" pos:end="41:36">[<expr pos:start="41:35" pos:end="41:35"><literal type="number" pos:start="41:35" pos:end="41:35">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="41:39" pos:end="41:39"><expr pos:start="41:39" pos:end="41:39"><literal type="number" pos:start="41:39" pos:end="41:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:11">(<expr pos:start="43:9" pos:end="43:10"><name pos:start="43:9" pos:end="43:10">rc</name></expr>)</condition> <block pos:start="43:13" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:18">

        <return pos:start="45:9" pos:end="45:18">return <expr pos:start="45:16" pos:end="45:17"><name pos:start="45:16" pos:end="45:17">rc</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:19"><expr pos:start="51:5" pos:end="51:18"><call pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:16">kvmppc_eieio</name><argument_list pos:start="51:17" pos:end="51:18">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:76"><expr pos:start="55:5" pos:end="55:75"><name pos:start="55:5" pos:end="55:6">rc</name> <operator pos:start="55:8" pos:end="55:8">=</operator> <call pos:start="55:10" pos:end="55:75"><name pos:start="55:10" pos:end="55:28">spapr_vio_dma_write</name><argument_list pos:start="55:29" pos:end="55:75">(<argument pos:start="55:30" pos:end="55:32"><expr pos:start="55:30" pos:end="55:32"><name pos:start="55:30" pos:end="55:32">dev</name></expr></argument>, <argument pos:start="55:35" pos:end="55:66"><expr pos:start="55:35" pos:end="55:66"><name pos:start="55:35" pos:end="55:49"><name pos:start="55:35" pos:end="55:37">dev</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:42">crq</name><operator pos:start="55:43" pos:end="55:43">.</operator><name pos:start="55:44" pos:end="55:49">qladdr</name></name> <operator pos:start="55:51" pos:end="55:51">+</operator> <name pos:start="55:53" pos:end="55:66"><name pos:start="55:53" pos:end="55:55">dev</name><operator pos:start="55:56" pos:end="55:57">-&gt;</operator><name pos:start="55:58" pos:end="55:60">crq</name><operator pos:start="55:61" pos:end="55:61">.</operator><name pos:start="55:62" pos:end="55:66">qnext</name></name></expr></argument>, <argument pos:start="55:69" pos:end="55:71"><expr pos:start="55:69" pos:end="55:71"><name pos:start="55:69" pos:end="55:71">crq</name></expr></argument>, <argument pos:start="55:74" pos:end="55:74"><expr pos:start="55:74" pos:end="55:74"><literal type="number" pos:start="55:74" pos:end="55:74">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:11">(<expr pos:start="57:9" pos:end="57:10"><name pos:start="57:9" pos:end="57:10">rc</name></expr>)</condition> <block pos:start="57:13" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:18">

        <return pos:start="59:9" pos:end="59:18">return <expr pos:start="59:16" pos:end="59:17"><name pos:start="59:16" pos:end="59:17">rc</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:60"><expr pos:start="65:5" pos:end="65:59"><name pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:7">dev</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:12">crq</name><operator pos:start="65:13" pos:end="65:13">.</operator><name pos:start="65:14" pos:end="65:18">qnext</name></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <operator pos:start="65:22" pos:end="65:22">(</operator><name pos:start="65:23" pos:end="65:36"><name pos:start="65:23" pos:end="65:25">dev</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:30">crq</name><operator pos:start="65:31" pos:end="65:31">.</operator><name pos:start="65:32" pos:end="65:36">qnext</name></name> <operator pos:start="65:38" pos:end="65:38">+</operator> <literal type="number" pos:start="65:40" pos:end="65:41">16</literal><operator pos:start="65:42" pos:end="65:42">)</operator> <operator pos:start="65:44" pos:end="65:44">%</operator> <name pos:start="65:46" pos:end="65:59"><name pos:start="65:46" pos:end="65:48">dev</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:53">crq</name><operator pos:start="65:54" pos:end="65:54">.</operator><name pos:start="65:55" pos:end="65:59">qsize</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:30">(<expr pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:11">dev</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:25">signal_state</name></name> <operator pos:start="69:27" pos:end="69:27">&amp;</operator> <literal type="number" pos:start="69:29" pos:end="69:29">1</literal></expr>)</condition> <block pos:start="69:32" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:34">

        <expr_stmt pos:start="71:9" pos:end="71:34"><expr pos:start="71:9" pos:end="71:33"><call pos:start="71:9" pos:end="71:33"><name pos:start="71:9" pos:end="71:22">qemu_irq_pulse</name><argument_list pos:start="71:23" pos:end="71:33">(<argument pos:start="71:24" pos:end="71:32"><expr pos:start="71:24" pos:end="71:32"><name pos:start="71:24" pos:end="71:32"><name pos:start="71:24" pos:end="71:26">dev</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:32">qirq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
