<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12125.c" pos:tabs="8"><function pos:start="1:1" pos:end="287:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">get_segment32</name><parameter_list pos:start="1:18" pos:end="3:55">(<parameter pos:start="1:19" pos:end="1:34"><decl pos:start="1:19" pos:end="1:34"><type pos:start="1:19" pos:end="1:34"><name pos:start="1:19" pos:end="1:29">CPUPPCState</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">env</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:50"><decl pos:start="1:37" pos:end="1:50"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:45">mmu_ctx_t</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:36"><decl pos:start="3:19" pos:end="3:36"><type pos:start="3:19" pos:end="3:36"><name pos:start="3:19" pos:end="3:30">target_ulong</name></type> <name pos:start="3:32" pos:end="3:36">eaddr</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:44"><decl pos:start="3:39" pos:end="3:44"><type pos:start="3:39" pos:end="3:44"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:44">rw</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:54"><decl pos:start="3:47" pos:end="3:54"><type pos:start="3:47" pos:end="3:54"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:54">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="287:1">{<block_content pos:start="7:5" pos:end="285:15">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">hwaddr</name></type> <name pos:start="7:12" pos:end="7:15">hash</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:21">vsid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">ds</name></decl>, <decl pos:start="11:13" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:14">pr</name></decl>, <decl pos:start="11:17" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:32">target_page_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:17">ret2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:19">sr</name></decl>, <decl pos:start="15:22" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:22" pos:end="15:26">pgidx</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:16"><expr pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:6">pr</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <name pos:start="19:10" pos:end="19:15">msr_pr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:7">ctx</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:14">eaddr</name></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:22">eaddr</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:6">sr</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <name pos:start="25:10" pos:end="25:29"><name pos:start="25:10" pos:end="25:12">env</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:16">sr</name><index pos:start="25:17" pos:end="25:29">[<expr pos:start="25:18" pos:end="25:28"><name pos:start="25:18" pos:end="25:22">eaddr</name> <operator pos:start="25:24" pos:end="25:25">&gt;&gt;</operator> <literal type="number" pos:start="25:27" pos:end="25:28">28</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="29:58"><expr pos:start="27:5" pos:end="29:57"><name pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:7">ctx</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:12">key</name></name> <operator pos:start="27:14" pos:end="27:14">=</operator> <ternary pos:start="27:16" pos:end="29:57"><condition pos:start="27:16" pos:end="29:51"><expr pos:start="27:16" pos:end="29:49"><operator pos:start="27:16" pos:end="27:16">(</operator><operator pos:start="27:17" pos:end="27:17">(</operator><operator pos:start="27:18" pos:end="27:18">(</operator><name pos:start="27:19" pos:end="27:20">sr</name> <operator pos:start="27:22" pos:end="27:22">&amp;</operator> <literal type="number" pos:start="27:24" pos:end="27:33">0x20000000</literal><operator pos:start="27:34" pos:end="27:34">)</operator> <operator pos:start="27:36" pos:end="27:37">&amp;&amp;</operator> <operator pos:start="27:39" pos:end="27:39">(</operator><name pos:start="27:40" pos:end="27:41">pr</name> <operator pos:start="27:43" pos:end="27:44">!=</operator> <literal type="number" pos:start="27:46" pos:end="27:46">0</literal><operator pos:start="27:47" pos:end="27:47">)</operator><operator pos:start="27:48" pos:end="27:48">)</operator> <operator pos:start="27:50" pos:end="27:51">||</operator>

                <operator pos:start="29:17" pos:end="29:17">(</operator><operator pos:start="29:18" pos:end="29:18">(</operator><name pos:start="29:19" pos:end="29:20">sr</name> <operator pos:start="29:22" pos:end="29:22">&amp;</operator> <literal type="number" pos:start="29:24" pos:end="29:33">0x40000000</literal><operator pos:start="29:34" pos:end="29:34">)</operator> <operator pos:start="29:36" pos:end="29:37">&amp;&amp;</operator> <operator pos:start="29:39" pos:end="29:39">(</operator><name pos:start="29:40" pos:end="29:41">pr</name> <operator pos:start="29:43" pos:end="29:44">==</operator> <literal type="number" pos:start="29:46" pos:end="29:46">0</literal><operator pos:start="29:47" pos:end="29:47">)</operator><operator pos:start="29:48" pos:end="29:48">)</operator><operator pos:start="29:49" pos:end="29:49">)</operator></expr> ?</condition><then pos:start="29:53" pos:end="29:53"> <expr pos:start="29:53" pos:end="29:53"><literal type="number" pos:start="29:53" pos:end="29:53">1</literal></expr> </then><else pos:start="29:55" pos:end="29:57">: <expr pos:start="29:57" pos:end="29:57"><literal type="number" pos:start="29:57" pos:end="29:57">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:6">ds</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <ternary pos:start="31:10" pos:end="31:32"><condition pos:start="31:10" pos:end="31:26"><expr pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:11">sr</name> <operator pos:start="31:13" pos:end="31:13">&amp;</operator> <literal type="number" pos:start="31:15" pos:end="31:24">0x80000000</literal></expr> ?</condition><then pos:start="31:28" pos:end="31:28"> <expr pos:start="31:28" pos:end="31:28"><literal type="number" pos:start="31:28" pos:end="31:28">1</literal></expr> </then><else pos:start="31:30" pos:end="31:32">: <expr pos:start="31:32" pos:end="31:32"><literal type="number" pos:start="31:32" pos:end="31:32">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:7">ctx</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:11">nx</name></name> <operator pos:start="33:13" pos:end="33:13">=</operator> <ternary pos:start="33:15" pos:end="33:37"><condition pos:start="33:15" pos:end="33:31"><expr pos:start="33:15" pos:end="33:29"><name pos:start="33:15" pos:end="33:16">sr</name> <operator pos:start="33:18" pos:end="33:18">&amp;</operator> <literal type="number" pos:start="33:20" pos:end="33:29">0x10000000</literal></expr> ?</condition><then pos:start="33:33" pos:end="33:33"> <expr pos:start="33:33" pos:end="33:33"><literal type="number" pos:start="33:33" pos:end="33:33">1</literal></expr> </then><else pos:start="33:35" pos:end="33:37">: <expr pos:start="33:37" pos:end="33:37"><literal type="number" pos:start="33:37" pos:end="33:37">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:8">vsid</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <name pos:start="35:12" pos:end="35:13">sr</name> <operator pos:start="35:15" pos:end="35:15">&amp;</operator> <literal type="number" pos:start="35:17" pos:end="35:26">0x00FFFFFF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:20">target_page_bits</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:39">TARGET_PAGE_BITS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="47:52"><expr pos:start="39:5" pos:end="47:51"><call pos:start="39:5" pos:end="47:51"><name pos:start="39:5" pos:end="39:11">LOG_MMU</name><argument_list pos:start="39:12" pos:end="47:51">(<argument pos:start="39:13" pos:end="43:42"><expr pos:start="39:13" pos:end="43:42"><literal type="string" pos:start="39:13" pos:end="39:30">"Check segment v="</literal> <name pos:start="39:32" pos:end="39:44">TARGET_FMT_lx</name> <literal type="string" pos:start="39:46" pos:end="39:51">" %d "</literal> <name pos:start="39:53" pos:end="39:65">TARGET_FMT_lx</name> <literal type="string" pos:start="39:67" pos:end="39:73">" nip="</literal>

            <name pos:start="41:13" pos:end="41:25">TARGET_FMT_lx</name> <literal type="string" pos:start="41:27" pos:end="41:32">" lr="</literal> <name pos:start="41:34" pos:end="41:46">TARGET_FMT_lx</name>

            <literal type="string" pos:start="43:13" pos:end="43:42">" ir=%d dr=%d pr=%d %d t=%d\n"</literal></expr></argument>,

            <argument pos:start="45:13" pos:end="45:17"><expr pos:start="45:13" pos:end="45:17"><name pos:start="45:13" pos:end="45:17">eaddr</name></expr></argument>, <argument pos:start="45:20" pos:end="45:37"><expr pos:start="45:20" pos:end="45:37"><operator pos:start="45:20" pos:end="45:20">(</operator><name pos:start="45:21" pos:end="45:23">int</name><operator pos:start="45:24" pos:end="45:24">)</operator><operator pos:start="45:25" pos:end="45:25">(</operator><name pos:start="45:26" pos:end="45:30">eaddr</name> <operator pos:start="45:32" pos:end="45:33">&gt;&gt;</operator> <literal type="number" pos:start="45:35" pos:end="45:36">28</literal><operator pos:start="45:37" pos:end="45:37">)</operator></expr></argument>, <argument pos:start="45:40" pos:end="45:41"><expr pos:start="45:40" pos:end="45:41"><name pos:start="45:40" pos:end="45:41">sr</name></expr></argument>, <argument pos:start="45:44" pos:end="45:51"><expr pos:start="45:44" pos:end="45:51"><name pos:start="45:44" pos:end="45:51"><name pos:start="45:44" pos:end="45:46">env</name><operator pos:start="45:47" pos:end="45:48">-&gt;</operator><name pos:start="45:49" pos:end="45:51">nip</name></name></expr></argument>, <argument pos:start="45:54" pos:end="45:60"><expr pos:start="45:54" pos:end="45:60"><name pos:start="45:54" pos:end="45:60"><name pos:start="45:54" pos:end="45:56">env</name><operator pos:start="45:57" pos:end="45:58">-&gt;</operator><name pos:start="45:59" pos:end="45:60">lr</name></name></expr></argument>, <argument pos:start="45:63" pos:end="45:73"><expr pos:start="45:63" pos:end="45:73"><operator pos:start="45:63" pos:end="45:63">(</operator><name pos:start="45:64" pos:end="45:66">int</name><operator pos:start="45:67" pos:end="45:67">)</operator><name pos:start="45:68" pos:end="45:73">msr_ir</name></expr></argument>,

            <argument pos:start="47:13" pos:end="47:23"><expr pos:start="47:13" pos:end="47:23"><operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:16">int</name><operator pos:start="47:17" pos:end="47:17">)</operator><name pos:start="47:18" pos:end="47:23">msr_dr</name></expr></argument>, <argument pos:start="47:26" pos:end="47:40"><expr pos:start="47:26" pos:end="47:40"><ternary pos:start="47:26" pos:end="47:40"><condition pos:start="47:26" pos:end="47:34"><expr pos:start="47:26" pos:end="47:32"><name pos:start="47:26" pos:end="47:27">pr</name> <operator pos:start="47:29" pos:end="47:30">!=</operator> <literal type="number" pos:start="47:32" pos:end="47:32">0</literal></expr> ?</condition><then pos:start="47:36" pos:end="47:36"> <expr pos:start="47:36" pos:end="47:36"><literal type="number" pos:start="47:36" pos:end="47:36">1</literal></expr> </then><else pos:start="47:38" pos:end="47:40">: <expr pos:start="47:40" pos:end="47:40"><literal type="number" pos:start="47:40" pos:end="47:40">0</literal></expr></else></ternary></expr></argument>, <argument pos:start="47:43" pos:end="47:44"><expr pos:start="47:43" pos:end="47:44"><name pos:start="47:43" pos:end="47:44">rw</name></expr></argument>, <argument pos:start="47:47" pos:end="47:50"><expr pos:start="47:47" pos:end="47:50"><name pos:start="47:47" pos:end="47:50">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:61"><expr pos:start="49:5" pos:end="49:60"><name pos:start="49:5" pos:end="49:9">pgidx</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <operator pos:start="49:13" pos:end="49:13">(</operator><name pos:start="49:14" pos:end="49:18">eaddr</name> <operator pos:start="49:20" pos:end="49:20">&amp;</operator> <operator pos:start="49:22" pos:end="49:22">~</operator><name pos:start="49:23" pos:end="49:39">SEGMENT_MASK_256M</name><operator pos:start="49:40" pos:end="49:40">)</operator> <operator pos:start="49:42" pos:end="49:43">&gt;&gt;</operator> <name pos:start="49:45" pos:end="49:60">target_page_bits</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:24"><expr pos:start="51:5" pos:end="51:23"><name pos:start="51:5" pos:end="51:8">hash</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <name pos:start="51:12" pos:end="51:15">vsid</name> <operator pos:start="51:17" pos:end="51:17">^</operator> <name pos:start="51:19" pos:end="51:23">pgidx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:44"><expr pos:start="53:5" pos:end="53:43"><name pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:7">ctx</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:13">ptem</name></name> <operator pos:start="53:15" pos:end="53:15">=</operator> <operator pos:start="53:17" pos:end="53:17">(</operator><name pos:start="53:18" pos:end="53:21">vsid</name> <operator pos:start="53:23" pos:end="53:24">&lt;&lt;</operator> <literal type="number" pos:start="53:26" pos:end="53:26">7</literal><operator pos:start="53:27" pos:end="53:27">)</operator> <operator pos:start="53:29" pos:end="53:29">|</operator> <operator pos:start="53:31" pos:end="53:31">(</operator><name pos:start="53:32" pos:end="53:36">pgidx</name> <operator pos:start="53:38" pos:end="53:39">&gt;&gt;</operator> <literal type="number" pos:start="53:41" pos:end="53:42">10</literal><operator pos:start="53:43" pos:end="53:43">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="59:41"><expr pos:start="57:5" pos:end="59:40"><call pos:start="57:5" pos:end="59:40"><name pos:start="57:5" pos:end="57:11">LOG_MMU</name><argument_list pos:start="57:12" pos:end="59:40">(<argument pos:start="57:13" pos:end="57:70"><expr pos:start="57:13" pos:end="57:70"><literal type="string" pos:start="57:13" pos:end="57:51">"pte segment: key=%d ds %d nx %d vsid "</literal> <name pos:start="57:53" pos:end="57:65">TARGET_FMT_lx</name> <literal type="string" pos:start="57:67" pos:end="57:70">"\n"</literal></expr></argument>,

            <argument pos:start="59:13" pos:end="59:20"><expr pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:15">ctx</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:20">key</name></name></expr></argument>, <argument pos:start="59:23" pos:end="59:24"><expr pos:start="59:23" pos:end="59:24"><name pos:start="59:23" pos:end="59:24">ds</name></expr></argument>, <argument pos:start="59:27" pos:end="59:33"><expr pos:start="59:27" pos:end="59:33"><name pos:start="59:27" pos:end="59:33"><name pos:start="59:27" pos:end="59:29">ctx</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:33">nx</name></name></expr></argument>, <argument pos:start="59:36" pos:end="59:39"><expr pos:start="59:36" pos:end="59:39"><name pos:start="59:36" pos:end="59:39">vsid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:13"><expr pos:start="61:5" pos:end="61:12"><name pos:start="61:5" pos:end="61:7">ret</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <operator pos:start="61:11" pos:end="61:11">-</operator><literal type="number" pos:start="61:12" pos:end="61:12">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="281:5"><if pos:start="63:5" pos:end="173:5">if <condition pos:start="63:8" pos:end="63:12">(<expr pos:start="63:9" pos:end="63:11"><operator pos:start="63:9" pos:end="63:9">!</operator><name pos:start="63:10" pos:end="63:11">ds</name></expr>)</condition> <block pos:start="63:14" pos:end="173:5">{<block_content pos:start="67:9" pos:end="171:9">

        <comment type="block" pos:start="65:9" pos:end="65:62">/* Check if instruction fetch is allowed, if needed */</comment>

        <if_stmt pos:start="67:9" pos:end="171:9"><if pos:start="67:9" pos:end="165:9">if <condition pos:start="67:12" pos:end="67:48">(<expr pos:start="67:13" pos:end="67:47"><name pos:start="67:13" pos:end="67:16">type</name> <operator pos:start="67:18" pos:end="67:19">!=</operator> <name pos:start="67:21" pos:end="67:31">ACCESS_CODE</name> <operator pos:start="67:33" pos:end="67:34">||</operator> <name pos:start="67:36" pos:end="67:42"><name pos:start="67:36" pos:end="67:38">ctx</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:42">nx</name></name> <operator pos:start="67:44" pos:end="67:45">==</operator> <literal type="number" pos:start="67:47" pos:end="67:47">0</literal></expr>)</condition> <block pos:start="67:50" pos:end="165:9">{<block_content pos:start="71:13" pos:end="164:0">

            <comment type="block" pos:start="69:13" pos:end="69:42">/* Page address translation */</comment>

            <expr_stmt pos:start="71:13" pos:end="75:58"><expr pos:start="71:13" pos:end="75:57"><call pos:start="71:13" pos:end="75:57"><name pos:start="71:13" pos:end="71:19">LOG_MMU</name><argument_list pos:start="71:20" pos:end="75:57">(<argument pos:start="71:21" pos:end="73:48"><expr pos:start="71:21" pos:end="73:48"><literal type="string" pos:start="71:21" pos:end="71:32">"htab_base "</literal> <name pos:start="71:34" pos:end="71:47">TARGET_FMT_plx</name> <literal type="string" pos:start="71:49" pos:end="71:61">" htab_mask "</literal> <name pos:start="71:63" pos:end="71:76">TARGET_FMT_plx</name>

                    <literal type="string" pos:start="73:21" pos:end="73:28">" hash "</literal> <name pos:start="73:30" pos:end="73:43">TARGET_FMT_plx</name> <literal type="string" pos:start="73:45" pos:end="73:48">"\n"</literal></expr></argument>,

                    <argument pos:start="75:21" pos:end="75:34"><expr pos:start="75:21" pos:end="75:34"><name pos:start="75:21" pos:end="75:34"><name pos:start="75:21" pos:end="75:23">env</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:34">htab_base</name></name></expr></argument>, <argument pos:start="75:37" pos:end="75:50"><expr pos:start="75:37" pos:end="75:50"><name pos:start="75:37" pos:end="75:50"><name pos:start="75:37" pos:end="75:39">env</name><operator pos:start="75:40" pos:end="75:41">-&gt;</operator><name pos:start="75:42" pos:end="75:50">htab_mask</name></name></expr></argument>, <argument pos:start="75:53" pos:end="75:56"><expr pos:start="75:53" pos:end="75:56"><name pos:start="75:53" pos:end="75:56">hash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:32"><expr pos:start="77:13" pos:end="77:31"><name pos:start="77:13" pos:end="77:24"><name pos:start="77:13" pos:end="77:15">ctx</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:21">hash</name><index pos:start="77:22" pos:end="77:24">[<expr pos:start="77:23" pos:end="77:23"><literal type="number" pos:start="77:23" pos:end="77:23">0</literal></expr>]</index></name> <operator pos:start="77:26" pos:end="77:26">=</operator> <name pos:start="77:28" pos:end="77:31">hash</name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:33"><expr pos:start="79:13" pos:end="79:32"><name pos:start="79:13" pos:end="79:24"><name pos:start="79:13" pos:end="79:15">ctx</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:21">hash</name><index pos:start="79:22" pos:end="79:24">[<expr pos:start="79:23" pos:end="79:23"><literal type="number" pos:start="79:23" pos:end="79:23">1</literal></expr>]</index></name> <operator pos:start="79:26" pos:end="79:26">=</operator> <operator pos:start="79:28" pos:end="79:28">~</operator><name pos:start="79:29" pos:end="79:32">hash</name></expr>;</expr_stmt>



            <comment type="block" pos:start="83:13" pos:end="83:63">/* Initialize real address with an invalid value */</comment>

            <expr_stmt pos:start="85:13" pos:end="85:39"><expr pos:start="85:13" pos:end="85:38"><name pos:start="85:13" pos:end="85:22"><name pos:start="85:13" pos:end="85:15">ctx</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:22">raddr</name></name> <operator pos:start="85:24" pos:end="85:24">=</operator> <operator pos:start="85:26" pos:end="85:26">(</operator><name pos:start="85:27" pos:end="85:32">hwaddr</name><operator pos:start="85:33" pos:end="85:33">)</operator><operator pos:start="85:34" pos:end="85:34">-</operator><literal type="number" pos:start="85:35" pos:end="85:38">1ULL</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="95:34"><expr pos:start="87:13" pos:end="95:33"><call pos:start="87:13" pos:end="95:33"><name pos:start="87:13" pos:end="87:19">LOG_MMU</name><argument_list pos:start="87:20" pos:end="95:33">(<argument pos:start="87:21" pos:end="91:48"><expr pos:start="87:21" pos:end="91:48"><literal type="string" pos:start="87:21" pos:end="87:29">"0 htab="</literal> <name pos:start="87:31" pos:end="87:44">TARGET_FMT_plx</name> <literal type="string" pos:start="87:46" pos:end="87:48">"/"</literal> <name pos:start="87:50" pos:end="87:63">TARGET_FMT_plx</name>

                    <literal type="string" pos:start="89:21" pos:end="89:28">" vsid="</literal> <name pos:start="89:30" pos:end="89:42">TARGET_FMT_lx</name> <literal type="string" pos:start="89:44" pos:end="89:51">" ptem="</literal> <name pos:start="89:53" pos:end="89:65">TARGET_FMT_lx</name>

                    <literal type="string" pos:start="91:21" pos:end="91:28">" hash="</literal> <name pos:start="91:30" pos:end="91:43">TARGET_FMT_plx</name> <literal type="string" pos:start="91:45" pos:end="91:48">"\n"</literal></expr></argument>,

                    <argument pos:start="93:21" pos:end="93:34"><expr pos:start="93:21" pos:end="93:34"><name pos:start="93:21" pos:end="93:34"><name pos:start="93:21" pos:end="93:23">env</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:34">htab_base</name></name></expr></argument>, <argument pos:start="93:37" pos:end="93:50"><expr pos:start="93:37" pos:end="93:50"><name pos:start="93:37" pos:end="93:50"><name pos:start="93:37" pos:end="93:39">env</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:50">htab_mask</name></name></expr></argument>, <argument pos:start="93:53" pos:end="93:56"><expr pos:start="93:53" pos:end="93:56"><name pos:start="93:53" pos:end="93:56">vsid</name></expr></argument>, <argument pos:start="93:59" pos:end="93:67"><expr pos:start="93:59" pos:end="93:67"><name pos:start="93:59" pos:end="93:67"><name pos:start="93:59" pos:end="93:61">ctx</name><operator pos:start="93:62" pos:end="93:63">-&gt;</operator><name pos:start="93:64" pos:end="93:67">ptem</name></name></expr></argument>,

                    <argument pos:start="95:21" pos:end="95:32"><expr pos:start="95:21" pos:end="95:32"><name pos:start="95:21" pos:end="95:32"><name pos:start="95:21" pos:end="95:23">ctx</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:29">hash</name><index pos:start="95:30" pos:end="95:32">[<expr pos:start="95:31" pos:end="95:31"><literal type="number" pos:start="95:31" pos:end="95:31">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="97:13" pos:end="97:38">/* Primary table lookup */</comment>

            <expr_stmt pos:start="99:13" pos:end="99:70"><expr pos:start="99:13" pos:end="99:69"><name pos:start="99:13" pos:end="99:15">ret</name> <operator pos:start="99:17" pos:end="99:17">=</operator> <call pos:start="99:19" pos:end="99:69"><name pos:start="99:19" pos:end="99:28">find_pte32</name><argument_list pos:start="99:29" pos:end="99:69">(<argument pos:start="99:30" pos:end="99:32"><expr pos:start="99:30" pos:end="99:32"><name pos:start="99:30" pos:end="99:32">env</name></expr></argument>, <argument pos:start="99:35" pos:end="99:37"><expr pos:start="99:35" pos:end="99:37"><name pos:start="99:35" pos:end="99:37">ctx</name></expr></argument>, <argument pos:start="99:40" pos:end="99:40"><expr pos:start="99:40" pos:end="99:40"><literal type="number" pos:start="99:40" pos:end="99:40">0</literal></expr></argument>, <argument pos:start="99:43" pos:end="99:44"><expr pos:start="99:43" pos:end="99:44"><name pos:start="99:43" pos:end="99:44">rw</name></expr></argument>, <argument pos:start="99:47" pos:end="99:50"><expr pos:start="99:47" pos:end="99:50"><name pos:start="99:47" pos:end="99:50">type</name></expr></argument>, <argument pos:start="99:53" pos:end="99:68"><expr pos:start="99:53" pos:end="99:68"><name pos:start="99:53" pos:end="99:68">target_page_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="126:0"><if pos:start="101:13" pos:end="126:0">if <condition pos:start="101:16" pos:end="101:24">(<expr pos:start="101:17" pos:end="101:23"><name pos:start="101:17" pos:end="101:19">ret</name> <operator pos:start="101:21" pos:end="101:21">&lt;</operator> <literal type="number" pos:start="101:23" pos:end="101:23">0</literal></expr>)</condition> <block pos:start="101:26" pos:end="126:0">{<block_content pos:start="105:17" pos:end="121:17">

                <comment type="block" pos:start="103:17" pos:end="103:44">/* Secondary table lookup */</comment>

                <expr_stmt pos:start="105:17" pos:end="111:71"><expr pos:start="105:17" pos:end="111:70"><call pos:start="105:17" pos:end="111:70"><name pos:start="105:17" pos:end="105:23">LOG_MMU</name><argument_list pos:start="105:24" pos:end="111:70">(<argument pos:start="105:25" pos:end="109:52"><expr pos:start="105:25" pos:end="109:52"><literal type="string" pos:start="105:25" pos:end="105:33">"1 htab="</literal> <name pos:start="105:35" pos:end="105:48">TARGET_FMT_plx</name> <literal type="string" pos:start="105:50" pos:end="105:52">"/"</literal> <name pos:start="105:54" pos:end="105:67">TARGET_FMT_plx</name>

                        <literal type="string" pos:start="107:25" pos:end="107:32">" vsid="</literal> <name pos:start="107:34" pos:end="107:46">TARGET_FMT_lx</name> <literal type="string" pos:start="107:48" pos:end="107:54">" api="</literal> <name pos:start="107:56" pos:end="107:68">TARGET_FMT_lx</name>

                        <literal type="string" pos:start="109:25" pos:end="109:32">" hash="</literal> <name pos:start="109:34" pos:end="109:47">TARGET_FMT_plx</name> <literal type="string" pos:start="109:49" pos:end="109:52">"\n"</literal></expr></argument>, <argument pos:start="109:55" pos:end="109:68"><expr pos:start="109:55" pos:end="109:68"><name pos:start="109:55" pos:end="109:68"><name pos:start="109:55" pos:end="109:57">env</name><operator pos:start="109:58" pos:end="109:59">-&gt;</operator><name pos:start="109:60" pos:end="109:68">htab_base</name></name></expr></argument>,

                        <argument pos:start="111:25" pos:end="111:38"><expr pos:start="111:25" pos:end="111:38"><name pos:start="111:25" pos:end="111:38"><name pos:start="111:25" pos:end="111:27">env</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:38">htab_mask</name></name></expr></argument>, <argument pos:start="111:41" pos:end="111:44"><expr pos:start="111:41" pos:end="111:44"><name pos:start="111:41" pos:end="111:44">vsid</name></expr></argument>, <argument pos:start="111:47" pos:end="111:55"><expr pos:start="111:47" pos:end="111:55"><name pos:start="111:47" pos:end="111:55"><name pos:start="111:47" pos:end="111:49">ctx</name><operator pos:start="111:50" pos:end="111:51">-&gt;</operator><name pos:start="111:52" pos:end="111:55">ptem</name></name></expr></argument>, <argument pos:start="111:58" pos:end="111:69"><expr pos:start="111:58" pos:end="111:69"><name pos:start="111:58" pos:end="111:69"><name pos:start="111:58" pos:end="111:60">ctx</name><operator pos:start="111:61" pos:end="111:62">-&gt;</operator><name pos:start="111:63" pos:end="111:66">hash</name><index pos:start="111:67" pos:end="111:69">[<expr pos:start="111:68" pos:end="111:68"><literal type="number" pos:start="111:68" pos:end="111:68">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="115:52"><expr pos:start="113:17" pos:end="115:51"><name pos:start="113:17" pos:end="113:20">ret2</name> <operator pos:start="113:22" pos:end="113:22">=</operator> <call pos:start="113:24" pos:end="115:51"><name pos:start="113:24" pos:end="113:33">find_pte32</name><argument_list pos:start="113:34" pos:end="115:51">(<argument pos:start="113:35" pos:end="113:37"><expr pos:start="113:35" pos:end="113:37"><name pos:start="113:35" pos:end="113:37">env</name></expr></argument>, <argument pos:start="113:40" pos:end="113:42"><expr pos:start="113:40" pos:end="113:42"><name pos:start="113:40" pos:end="113:42">ctx</name></expr></argument>, <argument pos:start="113:45" pos:end="113:45"><expr pos:start="113:45" pos:end="113:45"><literal type="number" pos:start="113:45" pos:end="113:45">1</literal></expr></argument>, <argument pos:start="113:48" pos:end="113:49"><expr pos:start="113:48" pos:end="113:49"><name pos:start="113:48" pos:end="113:49">rw</name></expr></argument>, <argument pos:start="113:52" pos:end="113:55"><expr pos:start="113:52" pos:end="113:55"><name pos:start="113:52" pos:end="113:55">type</name></expr></argument>,

                                  <argument pos:start="115:35" pos:end="115:50"><expr pos:start="115:35" pos:end="115:50"><name pos:start="115:35" pos:end="115:50">target_page_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="117:17" pos:end="121:17"><if pos:start="117:17" pos:end="121:17">if <condition pos:start="117:20" pos:end="117:31">(<expr pos:start="117:21" pos:end="117:30"><name pos:start="117:21" pos:end="117:24">ret2</name> <operator pos:start="117:26" pos:end="117:27">!=</operator> <operator pos:start="117:29" pos:end="117:29">-</operator><literal type="number" pos:start="117:30" pos:end="117:30">1</literal></expr>)</condition> <block pos:start="117:33" pos:end="121:17">{<block_content pos:start="119:21" pos:end="119:31">

                    <expr_stmt pos:start="119:21" pos:end="119:31"><expr pos:start="119:21" pos:end="119:30"><name pos:start="119:21" pos:end="119:23">ret</name> <operator pos:start="119:25" pos:end="119:25">=</operator> <name pos:start="119:27" pos:end="119:30">ret2</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:if pos:start="125:1" pos:end="125:29">#<cpp:directive pos:start="125:2" pos:end="125:3">if</cpp:directive> <expr pos:start="125:5" pos:end="125:29"><call pos:start="125:5" pos:end="125:29"><name pos:start="125:5" pos:end="125:11">defined</name><argument_list pos:start="125:12" pos:end="125:29">(<argument pos:start="125:13" pos:end="125:28"><expr pos:start="125:13" pos:end="125:28"><name pos:start="125:13" pos:end="125:28">DUMP_PAGE_TABLES</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="127:13" pos:end="164:0"><if pos:start="127:13" pos:end="164:0">if <condition pos:start="127:16" pos:end="127:35">(<expr pos:start="127:17" pos:end="127:34"><call pos:start="127:17" pos:end="127:34"><name pos:start="127:17" pos:end="127:32">qemu_log_enabled</name><argument_list pos:start="127:33" pos:end="127:34">()</argument_list></call></expr>)</condition> <block pos:start="127:37" pos:end="164:0">{<block_content pos:start="129:17" pos:end="159:17">

                <decl_stmt pos:start="129:17" pos:end="129:31"><decl pos:start="129:17" pos:end="129:30"><type pos:start="129:17" pos:end="129:22"><name pos:start="129:17" pos:end="129:22">hwaddr</name></type> <name pos:start="129:24" pos:end="129:30">curaddr</name></decl>;</decl_stmt>

                <decl_stmt pos:start="131:17" pos:end="131:40"><decl pos:start="131:17" pos:end="131:27"><type pos:start="131:17" pos:end="131:24"><name pos:start="131:17" pos:end="131:24">uint32_t</name></type> <name pos:start="131:26" pos:end="131:27">a0</name></decl>, <decl pos:start="131:30" pos:end="131:31"><type ref="prev" pos:start="131:17" pos:end="131:24"/><name pos:start="131:30" pos:end="131:31">a1</name></decl>, <decl pos:start="131:34" pos:end="131:35"><type ref="prev" pos:start="131:17" pos:end="131:24"/><name pos:start="131:34" pos:end="131:35">a2</name></decl>, <decl pos:start="131:38" pos:end="131:39"><type ref="prev" pos:start="131:17" pos:end="131:24"/><name pos:start="131:38" pos:end="131:39">a3</name></decl>;</decl_stmt>



                <expr_stmt pos:start="135:17" pos:end="137:49"><expr pos:start="135:17" pos:end="137:48"><call pos:start="135:17" pos:end="137:48"><name pos:start="135:17" pos:end="135:24">qemu_log</name><argument_list pos:start="135:25" pos:end="137:48">(<argument pos:start="135:26" pos:end="137:29"><expr pos:start="135:26" pos:end="137:29"><literal type="string" pos:start="135:26" pos:end="135:39">"Page table: "</literal> <name pos:start="135:41" pos:end="135:54">TARGET_FMT_plx</name> <literal type="string" pos:start="135:56" pos:end="135:62">" len "</literal> <name pos:start="135:64" pos:end="135:77">TARGET_FMT_plx</name>

                         <literal type="string" pos:start="137:26" pos:end="137:29">"\n"</literal></expr></argument>, <argument pos:start="137:32" pos:end="137:34"><expr pos:start="137:32" pos:end="137:34"><name pos:start="137:32" pos:end="137:34">sdr</name></expr></argument>, <argument pos:start="137:37" pos:end="137:47"><expr pos:start="137:37" pos:end="137:47"><name pos:start="137:37" pos:end="137:40">mask</name> <operator pos:start="137:42" pos:end="137:42">+</operator> <literal type="number" pos:start="137:44" pos:end="137:47">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="139:17" pos:end="159:17">for <control pos:start="139:21" pos:end="141:35">(<init pos:start="139:22" pos:end="139:35"><expr pos:start="139:22" pos:end="139:34"><name pos:start="139:22" pos:end="139:28">curaddr</name> <operator pos:start="139:30" pos:end="139:30">=</operator> <name pos:start="139:32" pos:end="139:34">sdr</name></expr>;</init> <condition pos:start="139:37" pos:end="139:66"><expr pos:start="139:37" pos:end="139:65"><name pos:start="139:37" pos:end="139:43">curaddr</name> <operator pos:start="139:45" pos:end="139:45">&lt;</operator> <operator pos:start="139:47" pos:end="139:47">(</operator><name pos:start="139:48" pos:end="139:50">sdr</name> <operator pos:start="139:52" pos:end="139:52">+</operator> <name pos:start="139:54" pos:end="139:57">mask</name> <operator pos:start="139:59" pos:end="139:59">+</operator> <literal type="number" pos:start="139:61" pos:end="139:64">0x80</literal><operator pos:start="139:65" pos:end="139:65">)</operator></expr>;</condition>

                     <incr pos:start="141:22" pos:end="141:34"><expr pos:start="141:22" pos:end="141:34"><name pos:start="141:22" pos:end="141:28">curaddr</name> <operator pos:start="141:30" pos:end="141:31">+=</operator> <literal type="number" pos:start="141:33" pos:end="141:34">16</literal></expr></incr>)</control> <block pos:start="141:37" pos:end="159:17">{<block_content pos:start="143:21" pos:end="157:21">

                    <expr_stmt pos:start="143:21" pos:end="143:43"><expr pos:start="143:21" pos:end="143:42"><name pos:start="143:21" pos:end="143:22">a0</name> <operator pos:start="143:24" pos:end="143:24">=</operator> <call pos:start="143:26" pos:end="143:42"><name pos:start="143:26" pos:end="143:33">ldl_phys</name><argument_list pos:start="143:34" pos:end="143:42">(<argument pos:start="143:35" pos:end="143:41"><expr pos:start="143:35" pos:end="143:41"><name pos:start="143:35" pos:end="143:41">curaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="145:21" pos:end="145:47"><expr pos:start="145:21" pos:end="145:46"><name pos:start="145:21" pos:end="145:22">a1</name> <operator pos:start="145:24" pos:end="145:24">=</operator> <call pos:start="145:26" pos:end="145:46"><name pos:start="145:26" pos:end="145:33">ldl_phys</name><argument_list pos:start="145:34" pos:end="145:46">(<argument pos:start="145:35" pos:end="145:45"><expr pos:start="145:35" pos:end="145:45"><name pos:start="145:35" pos:end="145:41">curaddr</name> <operator pos:start="145:43" pos:end="145:43">+</operator> <literal type="number" pos:start="145:45" pos:end="145:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:47"><expr pos:start="147:21" pos:end="147:46"><name pos:start="147:21" pos:end="147:22">a2</name> <operator pos:start="147:24" pos:end="147:24">=</operator> <call pos:start="147:26" pos:end="147:46"><name pos:start="147:26" pos:end="147:33">ldl_phys</name><argument_list pos:start="147:34" pos:end="147:46">(<argument pos:start="147:35" pos:end="147:45"><expr pos:start="147:35" pos:end="147:45"><name pos:start="147:35" pos:end="147:41">curaddr</name> <operator pos:start="147:43" pos:end="147:43">+</operator> <literal type="number" pos:start="147:45" pos:end="147:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="149:21" pos:end="149:48"><expr pos:start="149:21" pos:end="149:47"><name pos:start="149:21" pos:end="149:22">a3</name> <operator pos:start="149:24" pos:end="149:24">=</operator> <call pos:start="149:26" pos:end="149:47"><name pos:start="149:26" pos:end="149:33">ldl_phys</name><argument_list pos:start="149:34" pos:end="149:47">(<argument pos:start="149:35" pos:end="149:46"><expr pos:start="149:35" pos:end="149:46"><name pos:start="149:35" pos:end="149:41">curaddr</name> <operator pos:start="149:43" pos:end="149:43">+</operator> <literal type="number" pos:start="149:45" pos:end="149:46">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="151:21" pos:end="157:21"><if pos:start="151:21" pos:end="157:21">if <condition pos:start="151:24" pos:end="151:65">(<expr pos:start="151:25" pos:end="151:64"><name pos:start="151:25" pos:end="151:26">a0</name> <operator pos:start="151:28" pos:end="151:29">!=</operator> <literal type="number" pos:start="151:31" pos:end="151:31">0</literal> <operator pos:start="151:33" pos:end="151:34">||</operator> <name pos:start="151:36" pos:end="151:37">a1</name> <operator pos:start="151:39" pos:end="151:40">!=</operator> <literal type="number" pos:start="151:42" pos:end="151:42">0</literal> <operator pos:start="151:44" pos:end="151:45">||</operator> <name pos:start="151:47" pos:end="151:48">a2</name> <operator pos:start="151:50" pos:end="151:51">!=</operator> <literal type="number" pos:start="151:53" pos:end="151:53">0</literal> <operator pos:start="151:55" pos:end="151:56">||</operator> <name pos:start="151:58" pos:end="151:59">a3</name> <operator pos:start="151:61" pos:end="151:62">!=</operator> <literal type="number" pos:start="151:64" pos:end="151:64">0</literal></expr>)</condition> <block pos:start="151:67" pos:end="157:21">{<block_content pos:start="153:25" pos:end="155:58">

                        <expr_stmt pos:start="153:25" pos:end="155:58"><expr pos:start="153:25" pos:end="155:57"><call pos:start="153:25" pos:end="155:57"><name pos:start="153:25" pos:end="153:32">qemu_log</name><argument_list pos:start="153:33" pos:end="155:57">(<argument pos:start="153:34" pos:end="153:73"><expr pos:start="153:34" pos:end="153:73"><name pos:start="153:34" pos:end="153:47">TARGET_FMT_plx</name> <literal type="string" pos:start="153:49" pos:end="153:73">": %08x %08x %08x %08x\n"</literal></expr></argument>,

                                 <argument pos:start="155:34" pos:end="155:40"><expr pos:start="155:34" pos:end="155:40"><name pos:start="155:34" pos:end="155:40">curaddr</name></expr></argument>, <argument pos:start="155:43" pos:end="155:44"><expr pos:start="155:43" pos:end="155:44"><name pos:start="155:43" pos:end="155:44">a0</name></expr></argument>, <argument pos:start="155:47" pos:end="155:48"><expr pos:start="155:47" pos:end="155:48"><name pos:start="155:47" pos:end="155:48">a1</name></expr></argument>, <argument pos:start="155:51" pos:end="155:52"><expr pos:start="155:51" pos:end="155:52"><name pos:start="155:51" pos:end="155:52">a2</name></expr></argument>, <argument pos:start="155:55" pos:end="155:56"><expr pos:start="155:55" pos:end="155:56"><name pos:start="155:55" pos:end="155:56">a3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="163:1" pos:end="163:6">#<cpp:directive pos:start="163:2" pos:end="163:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="165:11" pos:end="171:9">else <block pos:start="165:16" pos:end="171:9">{<block_content pos:start="167:13" pos:end="169:21">

            <expr_stmt pos:start="167:13" pos:end="167:43"><expr pos:start="167:13" pos:end="167:42"><call pos:start="167:13" pos:end="167:42"><name pos:start="167:13" pos:end="167:19">LOG_MMU</name><argument_list pos:start="167:20" pos:end="167:42">(<argument pos:start="167:21" pos:end="167:41"><expr pos:start="167:21" pos:end="167:41"><literal type="string" pos:start="167:21" pos:end="167:41">"No access allowed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:21"><expr pos:start="169:13" pos:end="169:20"><name pos:start="169:13" pos:end="169:15">ret</name> <operator pos:start="169:17" pos:end="169:17">=</operator> <operator pos:start="169:19" pos:end="169:19">-</operator><literal type="number" pos:start="169:20" pos:end="169:20">3</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="173:7" pos:end="281:5">else <block pos:start="173:12" pos:end="281:5">{<block_content pos:start="175:9" pos:end="279:9">

        <decl_stmt pos:start="175:9" pos:end="175:24"><decl pos:start="175:9" pos:end="175:23"><type pos:start="175:9" pos:end="175:20"><name pos:start="175:9" pos:end="175:20">target_ulong</name></type> <name pos:start="175:22" pos:end="175:23">sr</name></decl>;</decl_stmt>



        <expr_stmt pos:start="179:9" pos:end="179:37"><expr pos:start="179:9" pos:end="179:36"><call pos:start="179:9" pos:end="179:36"><name pos:start="179:9" pos:end="179:15">LOG_MMU</name><argument_list pos:start="179:16" pos:end="179:36">(<argument pos:start="179:17" pos:end="179:35"><expr pos:start="179:17" pos:end="179:35"><literal type="string" pos:start="179:17" pos:end="179:35">"direct store...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="181:9" pos:end="181:63">/* Direct-store segment : absolutely *BUGGY* for now */</comment>



        <comment type="block" pos:start="185:9" pos:end="189:11">/* Direct-store implies a 32-bit MMU.

         * Check the Segment Register's bus unit ID (BUID).

         */</comment>

        <expr_stmt pos:start="191:9" pos:end="191:34"><expr pos:start="191:9" pos:end="191:33"><name pos:start="191:9" pos:end="191:10">sr</name> <operator pos:start="191:12" pos:end="191:12">=</operator> <name pos:start="191:14" pos:end="191:33"><name pos:start="191:14" pos:end="191:16">env</name><operator pos:start="191:17" pos:end="191:18">-&gt;</operator><name pos:start="191:19" pos:end="191:20">sr</name><index pos:start="191:21" pos:end="191:33">[<expr pos:start="191:22" pos:end="191:32"><name pos:start="191:22" pos:end="191:26">eaddr</name> <operator pos:start="191:28" pos:end="191:29">&gt;&gt;</operator> <literal type="number" pos:start="191:31" pos:end="191:32">28</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="193:9" pos:end="209:9"><if pos:start="193:9" pos:end="209:9">if <condition pos:start="193:12" pos:end="193:45">(<expr pos:start="193:13" pos:end="193:44"><operator pos:start="193:13" pos:end="193:13">(</operator><name pos:start="193:14" pos:end="193:15">sr</name> <operator pos:start="193:17" pos:end="193:17">&amp;</operator> <literal type="number" pos:start="193:19" pos:end="193:28">0x1FF00000</literal><operator pos:start="193:29" pos:end="193:29">)</operator> <operator pos:start="193:31" pos:end="193:32">&gt;&gt;</operator> <literal type="number" pos:start="193:34" pos:end="193:35">20</literal> <operator pos:start="193:37" pos:end="193:38">==</operator> <literal type="number" pos:start="193:40" pos:end="193:44">0x07f</literal></expr>)</condition> <block pos:start="193:47" pos:end="209:9">{<block_content pos:start="203:13" pos:end="207:21">

            <comment type="block" pos:start="195:13" pos:end="195:63">/* Memory-forced I/O controller interface access */</comment>

            <comment type="block" pos:start="197:13" pos:end="201:15">/* If T=1 and BUID=x'07F', the 601 performs a memory access

             * to SR[28-31] LA[4-31], bypassing all protection mechanisms.

             */</comment>

            <expr_stmt pos:start="203:13" pos:end="203:67"><expr pos:start="203:13" pos:end="203:66"><name pos:start="203:13" pos:end="203:22"><name pos:start="203:13" pos:end="203:15">ctx</name><operator pos:start="203:16" pos:end="203:17">-&gt;</operator><name pos:start="203:18" pos:end="203:22">raddr</name></name> <operator pos:start="203:24" pos:end="203:24">=</operator> <operator pos:start="203:26" pos:end="203:26">(</operator><operator pos:start="203:27" pos:end="203:27">(</operator><name pos:start="203:28" pos:end="203:29">sr</name> <operator pos:start="203:31" pos:end="203:31">&amp;</operator> <literal type="number" pos:start="203:33" pos:end="203:35">0xF</literal><operator pos:start="203:36" pos:end="203:36">)</operator> <operator pos:start="203:38" pos:end="203:39">&lt;&lt;</operator> <literal type="number" pos:start="203:41" pos:end="203:42">28</literal><operator pos:start="203:43" pos:end="203:43">)</operator> <operator pos:start="203:45" pos:end="203:45">|</operator> <operator pos:start="203:47" pos:end="203:47">(</operator><name pos:start="203:48" pos:end="203:52">eaddr</name> <operator pos:start="203:54" pos:end="203:54">&amp;</operator> <literal type="number" pos:start="203:56" pos:end="203:65">0x0FFFFFFF</literal><operator pos:start="203:66" pos:end="203:66">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:59"><expr pos:start="205:13" pos:end="205:58"><name pos:start="205:13" pos:end="205:21"><name pos:start="205:13" pos:end="205:15">ctx</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:21">prot</name></name> <operator pos:start="205:23" pos:end="205:23">=</operator> <name pos:start="205:25" pos:end="205:33">PAGE_READ</name> <operator pos:start="205:35" pos:end="205:35">|</operator> <name pos:start="205:37" pos:end="205:46">PAGE_WRITE</name> <operator pos:start="205:48" pos:end="205:48">|</operator> <name pos:start="205:50" pos:end="205:58">PAGE_EXEC</name></expr>;</expr_stmt>

            <return pos:start="207:13" pos:end="207:21">return <expr pos:start="207:20" pos:end="207:20"><literal type="number" pos:start="207:20" pos:end="207:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="213:9" pos:end="267:9">switch <condition pos:start="213:16" pos:end="213:21">(<expr pos:start="213:17" pos:end="213:20"><name pos:start="213:17" pos:end="213:20">type</name></expr>)</condition> <block pos:start="213:23" pos:end="267:9">{<block_content pos:start="215:9" pos:end="265:22">

        <case pos:start="215:9" pos:end="215:24">case <expr pos:start="215:14" pos:end="215:23"><name pos:start="215:14" pos:end="215:23">ACCESS_INT</name></expr>:</case>

            <comment type="block" pos:start="217:13" pos:end="217:58">/* Integer load/store : only access allowed */</comment>

            <break pos:start="219:13" pos:end="219:18">break;</break>

        <case pos:start="221:9" pos:end="221:25">case <expr pos:start="221:14" pos:end="221:24"><name pos:start="221:14" pos:end="221:24">ACCESS_CODE</name></expr>:</case>

            <comment type="block" pos:start="223:13" pos:end="223:64">/* No code fetch is allowed in direct-store areas */</comment>

            <return pos:start="225:13" pos:end="225:22">return <expr pos:start="225:20" pos:end="225:21"><operator pos:start="225:20" pos:end="225:20">-</operator><literal type="number" pos:start="225:21" pos:end="225:21">4</literal></expr>;</return>

        <case pos:start="227:9" pos:end="227:26">case <expr pos:start="227:14" pos:end="227:25"><name pos:start="227:14" pos:end="227:25">ACCESS_FLOAT</name></expr>:</case>

            <comment type="block" pos:start="229:13" pos:end="229:43">/* Floating point load/store */</comment>

            <return pos:start="231:13" pos:end="231:22">return <expr pos:start="231:20" pos:end="231:21"><operator pos:start="231:20" pos:end="231:20">-</operator><literal type="number" pos:start="231:21" pos:end="231:21">4</literal></expr>;</return>

        <case pos:start="233:9" pos:end="233:24">case <expr pos:start="233:14" pos:end="233:23"><name pos:start="233:14" pos:end="233:23">ACCESS_RES</name></expr>:</case>

            <comment type="block" pos:start="235:13" pos:end="235:40">/* lwarx, ldarx or srwcx. */</comment>

            <return pos:start="237:13" pos:end="237:22">return <expr pos:start="237:20" pos:end="237:21"><operator pos:start="237:20" pos:end="237:20">-</operator><literal type="number" pos:start="237:21" pos:end="237:21">4</literal></expr>;</return>

        <case pos:start="239:9" pos:end="239:26">case <expr pos:start="239:14" pos:end="239:25"><name pos:start="239:14" pos:end="239:25">ACCESS_CACHE</name></expr>:</case>

            <comment type="block" pos:start="241:13" pos:end="241:70">/* dcba, dcbt, dcbtst, dcbf, dcbi, dcbst, dcbz, or icbi */</comment>

            <comment type="block" pos:start="243:13" pos:end="247:15">/* Should make the instruction do no-op.

             * As it already do no-op, it's quite easy :-)

             */</comment>

            <expr_stmt pos:start="249:13" pos:end="249:31"><expr pos:start="249:13" pos:end="249:30"><name pos:start="249:13" pos:end="249:22"><name pos:start="249:13" pos:end="249:15">ctx</name><operator pos:start="249:16" pos:end="249:17">-&gt;</operator><name pos:start="249:18" pos:end="249:22">raddr</name></name> <operator pos:start="249:24" pos:end="249:24">=</operator> <name pos:start="249:26" pos:end="249:30">eaddr</name></expr>;</expr_stmt>

            <return pos:start="251:13" pos:end="251:21">return <expr pos:start="251:20" pos:end="251:20"><literal type="number" pos:start="251:20" pos:end="251:20">0</literal></expr>;</return>

        <case pos:start="253:9" pos:end="253:24">case <expr pos:start="253:14" pos:end="253:23"><name pos:start="253:14" pos:end="253:23">ACCESS_EXT</name></expr>:</case>

            <comment type="block" pos:start="255:13" pos:end="255:32">/* eciwx or ecowx */</comment>

            <return pos:start="257:13" pos:end="257:22">return <expr pos:start="257:20" pos:end="257:21"><operator pos:start="257:20" pos:end="257:20">-</operator><literal type="number" pos:start="257:21" pos:end="257:21">4</literal></expr>;</return>

        <default pos:start="259:9" pos:end="259:16">default:</default>

            <expr_stmt pos:start="261:13" pos:end="263:49"><expr pos:start="261:13" pos:end="263:48"><call pos:start="261:13" pos:end="263:48"><name pos:start="261:13" pos:end="261:20">qemu_log</name><argument_list pos:start="261:21" pos:end="263:48">(<argument pos:start="261:22" pos:end="263:47"><expr pos:start="261:22" pos:end="263:47"><literal type="string" pos:start="261:22" pos:end="261:58">"ERROR: instruction should not need "</literal>

                        <literal type="string" pos:start="263:25" pos:end="263:47">"address translation\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="265:13" pos:end="265:22">return <expr pos:start="265:20" pos:end="265:21"><operator pos:start="265:20" pos:end="265:20">-</operator><literal type="number" pos:start="265:21" pos:end="265:21">4</literal></expr>;</return>

        </block_content>}</block></switch>

        <if_stmt pos:start="269:9" pos:end="279:9"><if pos:start="269:9" pos:end="275:9">if <condition pos:start="269:12" pos:end="269:69">(<expr pos:start="269:13" pos:end="269:68"><operator pos:start="269:13" pos:end="269:13">(</operator><name pos:start="269:14" pos:end="269:15">rw</name> <operator pos:start="269:17" pos:end="269:18">==</operator> <literal type="number" pos:start="269:20" pos:end="269:20">1</literal> <operator pos:start="269:22" pos:end="269:23">||</operator> <name pos:start="269:25" pos:end="269:32"><name pos:start="269:25" pos:end="269:27">ctx</name><operator pos:start="269:28" pos:end="269:29">-&gt;</operator><name pos:start="269:30" pos:end="269:32">key</name></name> <operator pos:start="269:34" pos:end="269:35">!=</operator> <literal type="number" pos:start="269:37" pos:end="269:37">1</literal><operator pos:start="269:38" pos:end="269:38">)</operator> <operator pos:start="269:40" pos:end="269:41">&amp;&amp;</operator> <operator pos:start="269:43" pos:end="269:43">(</operator><name pos:start="269:44" pos:end="269:45">rw</name> <operator pos:start="269:47" pos:end="269:48">==</operator> <literal type="number" pos:start="269:50" pos:end="269:50">0</literal> <operator pos:start="269:52" pos:end="269:53">||</operator> <name pos:start="269:55" pos:end="269:62"><name pos:start="269:55" pos:end="269:57">ctx</name><operator pos:start="269:58" pos:end="269:59">-&gt;</operator><name pos:start="269:60" pos:end="269:62">key</name></name> <operator pos:start="269:64" pos:end="269:65">!=</operator> <literal type="number" pos:start="269:67" pos:end="269:67">0</literal><operator pos:start="269:68" pos:end="269:68">)</operator></expr>)</condition> <block pos:start="269:71" pos:end="275:9">{<block_content pos:start="271:13" pos:end="273:20">

            <expr_stmt pos:start="271:13" pos:end="271:31"><expr pos:start="271:13" pos:end="271:30"><name pos:start="271:13" pos:end="271:22"><name pos:start="271:13" pos:end="271:15">ctx</name><operator pos:start="271:16" pos:end="271:17">-&gt;</operator><name pos:start="271:18" pos:end="271:22">raddr</name></name> <operator pos:start="271:24" pos:end="271:24">=</operator> <name pos:start="271:26" pos:end="271:30">eaddr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:20"><expr pos:start="273:13" pos:end="273:19"><name pos:start="273:13" pos:end="273:15">ret</name> <operator pos:start="273:17" pos:end="273:17">=</operator> <literal type="number" pos:start="273:19" pos:end="273:19">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="275:11" pos:end="279:9">else <block pos:start="275:16" pos:end="279:9">{<block_content pos:start="277:13" pos:end="277:21">

            <expr_stmt pos:start="277:13" pos:end="277:21"><expr pos:start="277:13" pos:end="277:20"><name pos:start="277:13" pos:end="277:15">ret</name> <operator pos:start="277:17" pos:end="277:17">=</operator> <operator pos:start="277:19" pos:end="277:19">-</operator><literal type="number" pos:start="277:20" pos:end="277:20">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="285:5" pos:end="285:15">return <expr pos:start="285:12" pos:end="285:14"><name pos:start="285:12" pos:end="285:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
