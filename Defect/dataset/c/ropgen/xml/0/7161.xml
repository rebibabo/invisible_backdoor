<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7161.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">cbr_bit_allocation</name><parameter_list pos:start="1:30" pos:end="1:50">(<parameter pos:start="1:31" pos:end="1:49"><decl pos:start="1:31" pos:end="1:49"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:46">AC3EncodeContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:13">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">ch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">bits_left</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">snr_offset</name></decl>, <decl pos:start="9:21" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:28">snr_incr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:71"><expr pos:start="13:5" pos:end="13:70"><name pos:start="13:5" pos:end="13:13">bits_left</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <literal type="number" pos:start="13:17" pos:end="13:17">8</literal> <operator pos:start="13:19" pos:end="13:19">*</operator> <name pos:start="13:21" pos:end="13:33"><name pos:start="13:21" pos:end="13:21">s</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:33">frame_size</name></name> <operator pos:start="13:35" pos:end="13:35">-</operator> <operator pos:start="13:37" pos:end="13:37">(</operator><name pos:start="13:38" pos:end="13:50"><name pos:start="13:38" pos:end="13:38">s</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:50">frame_bits</name></name> <operator pos:start="13:52" pos:end="13:52">+</operator> <name pos:start="13:54" pos:end="13:69"><name pos:start="13:54" pos:end="13:54">s</name><operator pos:start="13:55" pos:end="13:56">-&gt;</operator><name pos:start="13:57" pos:end="13:69">exponent_bits</name></name><operator pos:start="13:70" pos:end="13:70">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:43"><expr pos:start="17:5" pos:end="17:42"><name pos:start="17:5" pos:end="17:14">snr_offset</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:37"><name pos:start="17:18" pos:end="17:18">s</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:37">coarse_snr_offset</name></name> <operator pos:start="17:39" pos:end="17:40">&lt;&lt;</operator> <literal type="number" pos:start="17:42" pos:end="17:42">4</literal></expr>;</expr_stmt>



    <while pos:start="21:5" pos:end="27:5">while <condition pos:start="21:11" pos:end="23:48">(<expr pos:start="21:12" pos:end="23:47"><name pos:start="21:12" pos:end="21:21">snr_offset</name> <operator pos:start="21:23" pos:end="21:24">&gt;=</operator> <literal type="number" pos:start="21:26" pos:end="21:26">0</literal> <operator pos:start="21:28" pos:end="21:29">&amp;&amp;</operator>

           <call pos:start="23:12" pos:end="23:35"><name pos:start="23:12" pos:end="23:20">bit_alloc</name><argument_list pos:start="23:21" pos:end="23:35">(<argument pos:start="23:22" pos:end="23:22"><expr pos:start="23:22" pos:end="23:22"><name pos:start="23:22" pos:end="23:22">s</name></expr></argument>, <argument pos:start="23:25" pos:end="23:34"><expr pos:start="23:25" pos:end="23:34"><name pos:start="23:25" pos:end="23:34">snr_offset</name></expr></argument>)</argument_list></call> <operator pos:start="23:37" pos:end="23:37">&gt;</operator> <name pos:start="23:39" pos:end="23:47">bits_left</name></expr>)</condition> <block pos:start="23:50" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:25">

        <expr_stmt pos:start="25:9" pos:end="25:25"><expr pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:18">snr_offset</name> <operator pos:start="25:20" pos:end="25:21">-=</operator> <literal type="number" pos:start="25:23" pos:end="25:24">64</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="29:5" pos:end="31:31"><if pos:start="29:5" pos:end="31:31">if <condition pos:start="29:8" pos:end="29:23">(<expr pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:18">snr_offset</name> <operator pos:start="29:20" pos:end="29:20">&lt;</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:31"><block_content pos:start="31:9" pos:end="31:31">

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><call pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:10">FFSWAP</name><argument_list pos:start="35:11" pos:end="35:52">(<argument pos:start="35:12" pos:end="35:20"><expr pos:start="35:12" pos:end="35:20"><name pos:start="35:12" pos:end="35:18">uint8_t</name> <operator pos:start="35:20" pos:end="35:20">*</operator></expr></argument>, <argument pos:start="35:23" pos:end="35:35"><expr pos:start="35:23" pos:end="35:35"><name pos:start="35:23" pos:end="35:35"><name pos:start="35:23" pos:end="35:23">s</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:35">bap_buffer</name></name></expr></argument>, <argument pos:start="35:38" pos:end="35:51"><expr pos:start="35:38" pos:end="35:51"><name pos:start="35:38" pos:end="35:51"><name pos:start="35:38" pos:end="35:38">s</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:51">bap1_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="37:5" pos:end="49:5">for <control pos:start="37:9" pos:end="37:53">(<init pos:start="37:10" pos:end="37:23"><expr pos:start="37:10" pos:end="37:22"><name pos:start="37:10" pos:end="37:17">snr_incr</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="number" pos:start="37:21" pos:end="37:22">64</literal></expr>;</init> <condition pos:start="37:25" pos:end="37:37"><expr pos:start="37:25" pos:end="37:36"><name pos:start="37:25" pos:end="37:32">snr_incr</name> <operator pos:start="37:34" pos:end="37:34">&gt;</operator> <literal type="number" pos:start="37:36" pos:end="37:36">0</literal></expr>;</condition> <incr pos:start="37:39" pos:end="37:52"><expr pos:start="37:39" pos:end="37:52"><name pos:start="37:39" pos:end="37:46">snr_incr</name> <operator pos:start="37:48" pos:end="37:50">&gt;&gt;=</operator> <literal type="number" pos:start="37:52" pos:end="37:52">2</literal></expr></incr>)</control> <block pos:start="37:55" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:9">

        <while pos:start="39:9" pos:end="47:9">while <condition pos:start="39:15" pos:end="41:64">(<expr pos:start="39:16" pos:end="41:63"><name pos:start="39:16" pos:end="39:25">snr_offset</name> <operator pos:start="39:27" pos:end="39:27">+</operator> <literal type="number" pos:start="39:29" pos:end="39:30">64</literal> <operator pos:start="39:32" pos:end="39:33">&lt;=</operator> <literal type="number" pos:start="39:35" pos:end="39:38">1023</literal> <operator pos:start="39:40" pos:end="39:41">&amp;&amp;</operator>

               <call pos:start="41:16" pos:end="41:50"><name pos:start="41:16" pos:end="41:24">bit_alloc</name><argument_list pos:start="41:25" pos:end="41:50">(<argument pos:start="41:26" pos:end="41:26"><expr pos:start="41:26" pos:end="41:26"><name pos:start="41:26" pos:end="41:26">s</name></expr></argument>, <argument pos:start="41:29" pos:end="41:49"><expr pos:start="41:29" pos:end="41:49"><name pos:start="41:29" pos:end="41:38">snr_offset</name> <operator pos:start="41:40" pos:end="41:40">+</operator> <name pos:start="41:42" pos:end="41:49">snr_incr</name></expr></argument>)</argument_list></call> <operator pos:start="41:52" pos:end="41:53">&lt;=</operator> <name pos:start="41:55" pos:end="41:63">bits_left</name></expr>)</condition> <block pos:start="41:66" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:61">

            <expr_stmt pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:22">snr_offset</name> <operator pos:start="43:24" pos:end="43:25">+=</operator> <name pos:start="43:27" pos:end="43:34">snr_incr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:61"><expr pos:start="45:13" pos:end="45:60"><call pos:start="45:13" pos:end="45:60"><name pos:start="45:13" pos:end="45:18">FFSWAP</name><argument_list pos:start="45:19" pos:end="45:60">(<argument pos:start="45:20" pos:end="45:28"><expr pos:start="45:20" pos:end="45:28"><name pos:start="45:20" pos:end="45:26">uint8_t</name> <operator pos:start="45:28" pos:end="45:28">*</operator></expr></argument>, <argument pos:start="45:31" pos:end="45:43"><expr pos:start="45:31" pos:end="45:43"><name pos:start="45:31" pos:end="45:43"><name pos:start="45:31" pos:end="45:31">s</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:43">bap_buffer</name></name></expr></argument>, <argument pos:start="45:46" pos:end="45:59"><expr pos:start="45:46" pos:end="45:59"><name pos:start="45:46" pos:end="45:59"><name pos:start="45:46" pos:end="45:46">s</name><operator pos:start="45:47" pos:end="45:48">-&gt;</operator><name pos:start="45:49" pos:end="45:59">bap1_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></for>

    <expr_stmt pos:start="51:5" pos:end="51:53"><expr pos:start="51:5" pos:end="51:52"><call pos:start="51:5" pos:end="51:52"><name pos:start="51:5" pos:end="51:10">FFSWAP</name><argument_list pos:start="51:11" pos:end="51:52">(<argument pos:start="51:12" pos:end="51:20"><expr pos:start="51:12" pos:end="51:20"><name pos:start="51:12" pos:end="51:18">uint8_t</name> <operator pos:start="51:20" pos:end="51:20">*</operator></expr></argument>, <argument pos:start="51:23" pos:end="51:35"><expr pos:start="51:23" pos:end="51:35"><name pos:start="51:23" pos:end="51:35"><name pos:start="51:23" pos:end="51:23">s</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:35">bap_buffer</name></name></expr></argument>, <argument pos:start="51:38" pos:end="51:51"><expr pos:start="51:38" pos:end="51:51"><name pos:start="51:38" pos:end="51:51"><name pos:start="51:38" pos:end="51:38">s</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:51">bap1_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:23"><expr pos:start="53:5" pos:end="53:22"><call pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:19">reset_block_bap</name><argument_list pos:start="53:20" pos:end="53:22">(<argument pos:start="53:21" pos:end="53:21"><expr pos:start="53:21" pos:end="53:21"><name pos:start="53:21" pos:end="53:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:43"><expr pos:start="57:5" pos:end="57:42"><name pos:start="57:5" pos:end="57:24"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:24">coarse_snr_offset</name></name> <operator pos:start="57:26" pos:end="57:26">=</operator> <name pos:start="57:28" pos:end="57:37">snr_offset</name> <operator pos:start="57:39" pos:end="57:40">&gt;&gt;</operator> <literal type="number" pos:start="57:42" pos:end="57:42">4</literal></expr>;</expr_stmt>

    <for pos:start="59:5" pos:end="61:50">for <control pos:start="59:9" pos:end="59:40">(<init pos:start="59:10" pos:end="59:16"><expr pos:start="59:10" pos:end="59:15"><name pos:start="59:10" pos:end="59:11">ch</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>;</init> <condition pos:start="59:18" pos:end="59:34"><expr pos:start="59:18" pos:end="59:33"><name pos:start="59:18" pos:end="59:19">ch</name> <operator pos:start="59:21" pos:end="59:21">&lt;</operator> <name pos:start="59:23" pos:end="59:33"><name pos:start="59:23" pos:end="59:23">s</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:33">channels</name></name></expr>;</condition> <incr pos:start="59:36" pos:end="59:39"><expr pos:start="59:36" pos:end="59:39"><name pos:start="59:36" pos:end="59:37">ch</name><operator pos:start="59:38" pos:end="59:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="61:9" pos:end="61:50"><block_content pos:start="61:9" pos:end="61:50">

        <expr_stmt pos:start="61:9" pos:end="61:50"><expr pos:start="61:9" pos:end="61:49"><name pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:26">fine_snr_offset</name><index pos:start="61:27" pos:end="61:30">[<expr pos:start="61:28" pos:end="61:29"><name pos:start="61:28" pos:end="61:29">ch</name></expr>]</index></name> <operator pos:start="61:32" pos:end="61:32">=</operator> <name pos:start="61:34" pos:end="61:43">snr_offset</name> <operator pos:start="61:45" pos:end="61:45">&amp;</operator> <literal type="number" pos:start="61:47" pos:end="61:49">0xF</literal></expr>;</expr_stmt></block_content></block></for>



    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
