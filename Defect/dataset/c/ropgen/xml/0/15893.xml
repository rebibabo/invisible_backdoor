<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15893.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">bdrv_iterate_format</name><parameter_list pos:start="1:25" pos:end="3:38">(<parameter pos:start="1:26" pos:end="1:67"><function_decl pos:start="1:26" pos:end="1:67"><type pos:start="1:26" pos:end="1:29"><name pos:start="1:26" pos:end="1:29">void</name></type> (<modifier pos:start="1:32" pos:end="1:32">*</modifier><name pos:start="1:33" pos:end="1:34">it</name>)<parameter_list pos:start="1:36" pos:end="1:67">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">opaque</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:66"><decl pos:start="1:51" pos:end="1:66"><type pos:start="1:51" pos:end="1:66"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:60">char</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">name</name></decl></parameter>)</parameter_list></function_decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:37"><decl pos:start="3:26" pos:end="3:37"><type pos:start="3:26" pos:end="3:37"><name pos:start="3:26" pos:end="3:29">void</name> <modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:37">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:20">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">BlockDriver</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">count</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:17"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier><modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:24">formats</name> <init pos:start="13:26" pos:end="13:31">= <expr pos:start="13:28" pos:end="13:31"><name pos:start="13:28" pos:end="13:31">NULL</name></expr></init></decl>;</decl_stmt>



    <macro pos:start="17:5" pos:end="17:43"><name pos:start="17:5" pos:end="17:17">QLIST_FOREACH</name><argument_list pos:start="17:18" pos:end="17:43">(<argument pos:start="17:19" pos:end="17:21">drv</argument>, <argument pos:start="17:24" pos:end="17:36">&amp;bdrv_drivers</argument>, <argument pos:start="17:39" pos:end="17:42">list</argument>)</argument_list></macro> <block pos:start="17:45" pos:end="43:5">{<block_content pos:start="19:9" pos:end="41:9">

        <if_stmt pos:start="19:9" pos:end="41:9"><if pos:start="19:9" pos:end="41:9">if <condition pos:start="19:12" pos:end="19:29">(<expr pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:15">drv</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:28">format_name</name></name></expr>)</condition> <block pos:start="19:31" pos:end="41:9">{<block_content pos:start="21:13" pos:end="39:13">

            <decl_stmt pos:start="21:13" pos:end="21:31"><decl pos:start="21:13" pos:end="21:30"><type pos:start="21:13" pos:end="21:16"><name pos:start="21:13" pos:end="21:16">bool</name></type> <name pos:start="21:18" pos:end="21:22">found</name> <init pos:start="21:24" pos:end="21:30">= <expr pos:start="21:26" pos:end="21:30"><name pos:start="21:26" pos:end="21:30">false</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="23:13" pos:end="23:26"><decl pos:start="23:13" pos:end="23:25"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:17">i</name> <init pos:start="23:19" pos:end="23:25">= <expr pos:start="23:21" pos:end="23:25"><name pos:start="23:21" pos:end="23:25">count</name></expr></init></decl>;</decl_stmt>

            <while pos:start="25:13" pos:end="29:13">while <condition pos:start="25:19" pos:end="25:42">(<expr pos:start="25:20" pos:end="25:41"><name pos:start="25:20" pos:end="25:26">formats</name> <operator pos:start="25:28" pos:end="25:29">&amp;&amp;</operator> <name pos:start="25:31" pos:end="25:31">i</name> <operator pos:start="25:33" pos:end="25:34">&amp;&amp;</operator> <operator pos:start="25:36" pos:end="25:36">!</operator><name pos:start="25:37" pos:end="25:41">found</name></expr>)</condition> <block pos:start="25:44" pos:end="29:13">{<block_content pos:start="27:17" pos:end="27:64">

                <expr_stmt pos:start="27:17" pos:end="27:64"><expr pos:start="27:17" pos:end="27:63"><name pos:start="27:17" pos:end="27:21">found</name> <operator pos:start="27:23" pos:end="27:23">=</operator> <operator pos:start="27:25" pos:end="27:25">!</operator><call pos:start="27:26" pos:end="27:63"><name pos:start="27:26" pos:end="27:31">strcmp</name><argument_list pos:start="27:32" pos:end="27:63">(<argument pos:start="27:33" pos:end="27:44"><expr pos:start="27:33" pos:end="27:44"><name pos:start="27:33" pos:end="27:44"><name pos:start="27:33" pos:end="27:39">formats</name><index pos:start="27:40" pos:end="27:44">[<expr pos:start="27:41" pos:end="27:43"><operator pos:start="27:41" pos:end="27:42">--</operator><name pos:start="27:43" pos:end="27:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="27:47" pos:end="27:62"><expr pos:start="27:47" pos:end="27:62"><name pos:start="27:47" pos:end="27:62"><name pos:start="27:47" pos:end="27:49">drv</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:62">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>



            <if_stmt pos:start="33:13" pos:end="39:13"><if pos:start="33:13" pos:end="39:13">if <condition pos:start="33:16" pos:end="33:23">(<expr pos:start="33:17" pos:end="33:22"><operator pos:start="33:17" pos:end="33:17">!</operator><name pos:start="33:18" pos:end="33:22">found</name></expr>)</condition> <block pos:start="33:25" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:52">

                <expr_stmt pos:start="35:17" pos:end="35:68"><expr pos:start="35:17" pos:end="35:67"><name pos:start="35:17" pos:end="35:23">formats</name> <operator pos:start="35:25" pos:end="35:25">=</operator> <call pos:start="35:27" pos:end="35:67"><name pos:start="35:27" pos:end="35:33">g_renew</name><argument_list pos:start="35:34" pos:end="35:67">(<argument pos:start="35:35" pos:end="35:46"><expr pos:start="35:35" pos:end="35:46"><specifier pos:start="35:35" pos:end="35:39">const</specifier> <name pos:start="35:41" pos:end="35:44">char</name> <operator pos:start="35:46" pos:end="35:46">*</operator></expr></argument>, <argument pos:start="35:49" pos:end="35:55"><expr pos:start="35:49" pos:end="35:55"><name pos:start="35:49" pos:end="35:55">formats</name></expr></argument>, <argument pos:start="35:58" pos:end="35:66"><expr pos:start="35:58" pos:end="35:66"><name pos:start="35:58" pos:end="35:62">count</name> <operator pos:start="35:64" pos:end="35:64">+</operator> <literal type="number" pos:start="35:66" pos:end="35:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:52"><expr pos:start="37:17" pos:end="37:51"><name pos:start="37:17" pos:end="37:32"><name pos:start="37:17" pos:end="37:23">formats</name><index pos:start="37:24" pos:end="37:32">[<expr pos:start="37:25" pos:end="37:31"><name pos:start="37:25" pos:end="37:29">count</name><operator pos:start="37:30" pos:end="37:31">++</operator></expr>]</index></name> <operator pos:start="37:34" pos:end="37:34">=</operator> <name pos:start="37:36" pos:end="37:51"><name pos:start="37:36" pos:end="37:38">drv</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:51">format_name</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="47:5" pos:end="47:60"><expr pos:start="47:5" pos:end="47:59"><call pos:start="47:5" pos:end="47:59"><name pos:start="47:5" pos:end="47:9">qsort</name><argument_list pos:start="47:10" pos:end="47:59">(<argument pos:start="47:11" pos:end="47:17"><expr pos:start="47:11" pos:end="47:17"><name pos:start="47:11" pos:end="47:17">formats</name></expr></argument>, <argument pos:start="47:20" pos:end="47:24"><expr pos:start="47:20" pos:end="47:24"><name pos:start="47:20" pos:end="47:24">count</name></expr></argument>, <argument pos:start="47:27" pos:end="47:44"><expr pos:start="47:27" pos:end="47:44"><sizeof pos:start="47:27" pos:end="47:44">sizeof<argument_list pos:start="47:33" pos:end="47:44">(<argument pos:start="47:34" pos:end="47:43"><expr pos:start="47:34" pos:end="47:43"><name pos:start="47:34" pos:end="47:43"><name pos:start="47:34" pos:end="47:40">formats</name><index pos:start="47:41" pos:end="47:43">[<expr pos:start="47:42" pos:end="47:42"><literal type="number" pos:start="47:42" pos:end="47:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="47:47" pos:end="47:58"><expr pos:start="47:47" pos:end="47:58"><name pos:start="47:47" pos:end="47:58">qsort_strcmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="51:5" pos:end="55:5">for <control pos:start="51:9" pos:end="51:31">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:26"><expr pos:start="51:17" pos:end="51:25"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <name pos:start="51:21" pos:end="51:25">count</name></expr>;</condition> <incr pos:start="51:28" pos:end="51:30"><expr pos:start="51:28" pos:end="51:30"><name pos:start="51:28" pos:end="51:28">i</name><operator pos:start="51:29" pos:end="51:30">++</operator></expr></incr>)</control> <block pos:start="51:33" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:31">

        <expr_stmt pos:start="53:9" pos:end="53:31"><expr pos:start="53:9" pos:end="53:30"><call pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:10">it</name><argument_list pos:start="53:11" pos:end="53:30">(<argument pos:start="53:12" pos:end="53:17"><expr pos:start="53:12" pos:end="53:17"><name pos:start="53:12" pos:end="53:17">opaque</name></expr></argument>, <argument pos:start="53:20" pos:end="53:29"><expr pos:start="53:20" pos:end="53:29"><name pos:start="53:20" pos:end="53:29"><name pos:start="53:20" pos:end="53:26">formats</name><index pos:start="53:27" pos:end="53:29">[<expr pos:start="53:28" pos:end="53:28"><name pos:start="53:28" pos:end="53:28">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="59:5" pos:end="59:20"><expr pos:start="59:5" pos:end="59:19"><call pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:10">g_free</name><argument_list pos:start="59:11" pos:end="59:19">(<argument pos:start="59:12" pos:end="59:18"><expr pos:start="59:12" pos:end="59:18"><name pos:start="59:12" pos:end="59:18">formats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
