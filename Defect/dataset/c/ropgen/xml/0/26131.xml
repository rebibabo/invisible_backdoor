<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26131.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">virtio_scsi_handle_ctrl</name><parameter_list pos:start="1:36" pos:end="1:70">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:48">VirtIODevice</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">vdev</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:69"><decl pos:start="1:57" pos:end="1:69"><type pos:start="1:57" pos:end="1:69"><name pos:start="1:57" pos:end="1:65">VirtQueue</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:69">vq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:5">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VirtIOSCSI</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:38">= <expr pos:start="5:21" pos:end="5:38"><operator pos:start="5:21" pos:end="5:21">(</operator><name pos:start="5:22" pos:end="5:31">VirtIOSCSI</name> <operator pos:start="5:33" pos:end="5:33">*</operator><operator pos:start="5:34" pos:end="5:34">)</operator><name pos:start="5:35" pos:end="5:38">vdev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">VirtIOSCSIReq</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">req</name></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="69:5">while <condition pos:start="11:11" pos:end="11:46">(<expr pos:start="11:12" pos:end="11:45"><operator pos:start="11:12" pos:end="11:12">(</operator><name pos:start="11:13" pos:end="11:15">req</name> <operator pos:start="11:17" pos:end="11:17">=</operator> <call pos:start="11:19" pos:end="11:44"><name pos:start="11:19" pos:end="11:37">virtio_scsi_pop_req</name><argument_list pos:start="11:38" pos:end="11:44">(<argument pos:start="11:39" pos:end="11:39"><expr pos:start="11:39" pos:end="11:39"><name pos:start="11:39" pos:end="11:39">s</name></expr></argument>, <argument pos:start="11:42" pos:end="11:43"><expr pos:start="11:42" pos:end="11:43"><name pos:start="11:42" pos:end="11:43">vq</name></expr></argument>)</argument_list></call><operator pos:start="11:45" pos:end="11:45">)</operator></expr>)</condition> <block pos:start="11:48" pos:end="69:5">{<block_content pos:start="13:9" pos:end="67:38">

        <decl_stmt pos:start="13:9" pos:end="13:17"><decl pos:start="13:9" pos:end="13:16"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:16">type</name></decl>;</decl_stmt>



        <if_stmt pos:start="17:9" pos:end="25:9"><if pos:start="17:9" pos:end="25:9">if <condition pos:start="17:12" pos:end="19:59">(<expr pos:start="17:13" pos:end="19:58"><call pos:start="17:13" pos:end="19:43"><name pos:start="17:13" pos:end="17:22">iov_to_buf</name><argument_list pos:start="17:23" pos:end="19:43">(<argument pos:start="17:24" pos:end="17:39"><expr pos:start="17:24" pos:end="17:39"><name pos:start="17:24" pos:end="17:39"><name pos:start="17:24" pos:end="17:26">req</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:32">elem</name><operator pos:start="17:33" pos:end="17:33">.</operator><name pos:start="17:34" pos:end="17:39">out_sg</name></name></expr></argument>, <argument pos:start="17:42" pos:end="17:58"><expr pos:start="17:42" pos:end="17:58"><name pos:start="17:42" pos:end="17:58"><name pos:start="17:42" pos:end="17:44">req</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:50">elem</name><operator pos:start="17:51" pos:end="17:51">.</operator><name pos:start="17:52" pos:end="17:58">out_num</name></name></expr></argument>, <argument pos:start="17:61" pos:end="17:61"><expr pos:start="17:61" pos:end="17:61"><literal type="number" pos:start="17:61" pos:end="17:61">0</literal></expr></argument>,

                       <argument pos:start="19:24" pos:end="19:28"><expr pos:start="19:24" pos:end="19:28"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:28">type</name></expr></argument>, <argument pos:start="19:31" pos:end="19:42"><expr pos:start="19:31" pos:end="19:42"><sizeof pos:start="19:31" pos:end="19:42">sizeof<argument_list pos:start="19:37" pos:end="19:42">(<argument pos:start="19:38" pos:end="19:41"><expr pos:start="19:38" pos:end="19:41"><name pos:start="19:38" pos:end="19:41">type</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="19:45" pos:end="19:45">&lt;</operator> <sizeof pos:start="19:47" pos:end="19:58">sizeof<argument_list pos:start="19:53" pos:end="19:58">(<argument pos:start="19:54" pos:end="19:57"><expr pos:start="19:54" pos:end="19:57"><name pos:start="19:54" pos:end="19:57">type</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="19:61" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:21">

            <expr_stmt pos:start="21:13" pos:end="21:34"><expr pos:start="21:13" pos:end="21:33"><call pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:31">virtio_scsi_bad_req</name><argument_list pos:start="21:32" pos:end="21:33">()</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="23:13" pos:end="23:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:38"><expr pos:start="29:9" pos:end="29:37"><call pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:16">tswap32s</name><argument_list pos:start="29:17" pos:end="29:37">(<argument pos:start="29:18" pos:end="29:36"><expr pos:start="29:18" pos:end="29:36"><operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:36"><name pos:start="29:19" pos:end="29:21">req</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:26">req</name><operator pos:start="29:27" pos:end="29:27">.</operator><name pos:start="29:28" pos:end="29:30">tmf</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:36">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="65:9"><if pos:start="31:9" pos:end="47:9">if <condition pos:start="31:12" pos:end="31:52">(<expr pos:start="31:13" pos:end="31:51"><name pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:15">req</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:20">req</name><operator pos:start="31:21" pos:end="31:21">.</operator><name pos:start="31:22" pos:end="31:24">tmf</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:30">type</name></name> <operator pos:start="31:32" pos:end="31:33">==</operator> <name pos:start="31:35" pos:end="31:51">VIRTIO_SCSI_T_TMF</name></expr>)</condition> <block pos:start="31:54" pos:end="47:9">{<block_content pos:start="33:13" pos:end="43:13">

            <if_stmt pos:start="33:13" pos:end="43:13"><if pos:start="33:13" pos:end="39:13">if <condition pos:start="33:16" pos:end="35:73">(<expr pos:start="33:17" pos:end="35:72"><call pos:start="33:17" pos:end="35:68"><name pos:start="33:17" pos:end="33:37">virtio_scsi_parse_req</name><argument_list pos:start="33:38" pos:end="35:68">(<argument pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><name pos:start="33:39" pos:end="33:41">req</name></expr></argument>, <argument pos:start="33:44" pos:end="33:71"><expr pos:start="33:44" pos:end="33:71"><sizeof pos:start="33:44" pos:end="33:71">sizeof<argument_list pos:start="33:50" pos:end="33:71">(<argument pos:start="33:51" pos:end="33:70"><expr pos:start="33:51" pos:end="33:70"><name pos:start="33:51" pos:end="33:70">VirtIOSCSICtrlTMFReq</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                      <argument pos:start="35:39" pos:end="35:67"><expr pos:start="35:39" pos:end="35:67"><sizeof pos:start="35:39" pos:end="35:67">sizeof<argument_list pos:start="35:45" pos:end="35:67">(<argument pos:start="35:46" pos:end="35:66"><expr pos:start="35:46" pos:end="35:66"><name pos:start="35:46" pos:end="35:66">VirtIOSCSICtrlTMFResp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="35:70" pos:end="35:70">&lt;</operator> <literal type="number" pos:start="35:72" pos:end="35:72">0</literal></expr>)</condition> <block pos:start="35:75" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:38">

                <expr_stmt pos:start="37:17" pos:end="37:38"><expr pos:start="37:17" pos:end="37:37"><call pos:start="37:17" pos:end="37:37"><name pos:start="37:17" pos:end="37:35">virtio_scsi_bad_req</name><argument_list pos:start="37:36" pos:end="37:37">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="39:15" pos:end="43:13">else <block pos:start="39:20" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:43">

                <expr_stmt pos:start="41:17" pos:end="41:43"><expr pos:start="41:17" pos:end="41:42"><call pos:start="41:17" pos:end="41:42"><name pos:start="41:17" pos:end="41:34">virtio_scsi_do_tmf</name><argument_list pos:start="41:35" pos:end="41:42">(<argument pos:start="41:36" pos:end="41:36"><expr pos:start="41:36" pos:end="41:36"><name pos:start="41:36" pos:end="41:36">s</name></expr></argument>, <argument pos:start="41:39" pos:end="41:41"><expr pos:start="41:39" pos:end="41:41"><name pos:start="41:39" pos:end="41:41">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



        </block_content>}</block></if> <if type="elseif" pos:start="47:11" pos:end="65:9">else if <condition pos:start="47:19" pos:end="49:68">(<expr pos:start="47:20" pos:end="49:67"><name pos:start="47:20" pos:end="47:37"><name pos:start="47:20" pos:end="47:22">req</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:27">req</name><operator pos:start="47:28" pos:end="47:28">.</operator><name pos:start="47:29" pos:end="47:31">tmf</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:37">type</name></name> <operator pos:start="47:39" pos:end="47:40">==</operator> <name pos:start="47:42" pos:end="47:63">VIRTIO_SCSI_T_AN_QUERY</name> <operator pos:start="47:65" pos:end="47:66">||</operator>

                   <name pos:start="49:20" pos:end="49:37"><name pos:start="49:20" pos:end="49:22">req</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:27">req</name><operator pos:start="49:28" pos:end="49:28">.</operator><name pos:start="49:29" pos:end="49:31">tmf</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:37">type</name></name> <operator pos:start="49:39" pos:end="49:40">==</operator> <name pos:start="49:42" pos:end="49:67">VIRTIO_SCSI_T_AN_SUBSCRIBE</name></expr>)</condition> <block pos:start="49:70" pos:end="65:9">{<block_content pos:start="51:13" pos:end="63:13">

            <if_stmt pos:start="51:13" pos:end="63:13"><if pos:start="51:13" pos:end="57:13">if <condition pos:start="51:16" pos:end="53:72">(<expr pos:start="51:17" pos:end="53:71"><call pos:start="51:17" pos:end="53:67"><name pos:start="51:17" pos:end="51:37">virtio_scsi_parse_req</name><argument_list pos:start="51:38" pos:end="53:67">(<argument pos:start="51:39" pos:end="51:41"><expr pos:start="51:39" pos:end="51:41"><name pos:start="51:39" pos:end="51:41">req</name></expr></argument>, <argument pos:start="51:44" pos:end="51:70"><expr pos:start="51:44" pos:end="51:70"><sizeof pos:start="51:44" pos:end="51:70">sizeof<argument_list pos:start="51:50" pos:end="51:70">(<argument pos:start="51:51" pos:end="51:69"><expr pos:start="51:51" pos:end="51:69"><name pos:start="51:51" pos:end="51:69">VirtIOSCSICtrlANReq</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                      <argument pos:start="53:39" pos:end="53:66"><expr pos:start="53:39" pos:end="53:66"><sizeof pos:start="53:39" pos:end="53:66">sizeof<argument_list pos:start="53:45" pos:end="53:66">(<argument pos:start="53:46" pos:end="53:65"><expr pos:start="53:46" pos:end="53:65"><name pos:start="53:46" pos:end="53:65">VirtIOSCSICtrlANResp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="53:69" pos:end="53:69">&lt;</operator> <literal type="number" pos:start="53:71" pos:end="53:71">0</literal></expr>)</condition> <block pos:start="53:74" pos:end="57:13">{<block_content pos:start="55:17" pos:end="55:38">

                <expr_stmt pos:start="55:17" pos:end="55:38"><expr pos:start="55:17" pos:end="55:37"><call pos:start="55:17" pos:end="55:37"><name pos:start="55:17" pos:end="55:35">virtio_scsi_bad_req</name><argument_list pos:start="55:36" pos:end="55:37">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="57:15" pos:end="63:13">else <block pos:start="57:20" pos:end="63:13">{<block_content pos:start="59:17" pos:end="61:58">

                <expr_stmt pos:start="59:17" pos:end="59:47"><expr pos:start="59:17" pos:end="59:46"><name pos:start="59:17" pos:end="59:42"><name pos:start="59:17" pos:end="59:19">req</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:25">resp</name><operator pos:start="59:26" pos:end="59:26">.</operator><name pos:start="59:27" pos:end="59:28">an</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:42">event_actual</name></name> <operator pos:start="59:44" pos:end="59:44">=</operator> <literal type="number" pos:start="59:46" pos:end="59:46">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:58"><expr pos:start="61:17" pos:end="61:57"><name pos:start="61:17" pos:end="61:38"><name pos:start="61:17" pos:end="61:19">req</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:25">resp</name><operator pos:start="61:26" pos:end="61:26">.</operator><name pos:start="61:27" pos:end="61:28">an</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:38">response</name></name> <operator pos:start="61:40" pos:end="61:40">=</operator> <name pos:start="61:42" pos:end="61:57">VIRTIO_SCSI_S_OK</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:38"><expr pos:start="67:9" pos:end="67:37"><call pos:start="67:9" pos:end="67:37"><name pos:start="67:9" pos:end="67:32">virtio_scsi_complete_req</name><argument_list pos:start="67:33" pos:end="67:37">(<argument pos:start="67:34" pos:end="67:36"><expr pos:start="67:34" pos:end="67:36"><name pos:start="67:34" pos:end="67:36">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
