<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7065.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">qxl_render_update</name><parameter_list pos:start="1:23" pos:end="1:41">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:35">PCIQXLDevice</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">qxl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:1">{<block_content pos:start="5:5" pos:end="137:5">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VGACommonState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">vga</name> <init pos:start="5:25" pos:end="5:35">= <expr pos:start="5:27" pos:end="5:35"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:35"><name pos:start="5:28" pos:end="5:30">qxl</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:35">vga</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">QXLRect</name></type> <name pos:start="7:13" pos:end="7:21"><name pos:start="7:13" pos:end="7:17">dirty</name><index pos:start="7:18" pos:end="7:21">[<expr pos:start="7:19" pos:end="7:20"><literal type="number" pos:start="7:19" pos:end="7:20">32</literal></expr>]</index></name></decl>, <decl pos:start="7:24" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:24" pos:end="7:29">update</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">void</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="83:5"><if pos:start="15:5" pos:end="83:5">if <condition pos:start="15:8" pos:end="15:35">(<expr pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:11">qxl</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:26">guest_primary</name><operator pos:start="15:27" pos:end="15:27">.</operator><name pos:start="15:28" pos:end="15:34">resized</name></name></expr>)</condition> <block pos:start="15:37" pos:end="83:5">{<block_content pos:start="17:9" pos:end="81:28">

        <expr_stmt pos:start="17:9" pos:end="17:39"><expr pos:start="17:9" pos:end="17:38"><name pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:11">qxl</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:26">guest_primary</name><operator pos:start="17:27" pos:end="17:27">.</operator><name pos:start="17:28" pos:end="17:34">resized</name></name> <operator pos:start="17:36" pos:end="17:36">=</operator> <literal type="number" pos:start="17:38" pos:end="17:38">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:39">(<expr pos:start="21:13" pos:end="21:38"><name pos:start="21:13" pos:end="21:38"><name pos:start="21:13" pos:end="21:15">qxl</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:30">guest_primary</name><operator pos:start="21:31" pos:end="21:31">.</operator><name pos:start="21:32" pos:end="21:38">flipped</name></name></expr>)</condition> <block pos:start="21:41" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:46">

            <expr_stmt pos:start="23:13" pos:end="23:47"><expr pos:start="23:13" pos:end="23:46"><call pos:start="23:13" pos:end="23:46"><name pos:start="23:13" pos:end="23:18">g_free</name><argument_list pos:start="23:19" pos:end="23:46">(<argument pos:start="23:20" pos:end="23:45"><expr pos:start="23:20" pos:end="23:45"><name pos:start="23:20" pos:end="23:45"><name pos:start="23:20" pos:end="23:22">qxl</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:37">guest_primary</name><operator pos:start="23:38" pos:end="23:38">.</operator><name pos:start="23:39" pos:end="23:45">flipped</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:46"><expr pos:start="25:13" pos:end="25:45"><name pos:start="25:13" pos:end="25:38"><name pos:start="25:13" pos:end="25:15">qxl</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:30">guest_primary</name><operator pos:start="25:31" pos:end="25:31">.</operator><name pos:start="25:32" pos:end="25:38">flipped</name></name> <operator pos:start="25:40" pos:end="25:40">=</operator> <name pos:start="25:42" pos:end="25:45">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:42"><expr pos:start="29:9" pos:end="29:41"><call pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:32">qemu_free_displaysurface</name><argument_list pos:start="29:33" pos:end="29:41">(<argument pos:start="29:34" pos:end="29:40"><expr pos:start="29:34" pos:end="29:40"><name pos:start="29:34" pos:end="29:40"><name pos:start="29:34" pos:end="29:36">vga</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:40">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:76"><expr pos:start="33:9" pos:end="33:75"><name pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:11">qxl</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:26">guest_primary</name><operator pos:start="33:27" pos:end="33:27">.</operator><name pos:start="33:28" pos:end="33:31">data</name></name> <operator pos:start="33:33" pos:end="33:33">=</operator> <call pos:start="33:35" pos:end="33:75"><name pos:start="33:35" pos:end="33:59">memory_region_get_ram_ptr</name><argument_list pos:start="33:60" pos:end="33:75">(<argument pos:start="33:61" pos:end="33:74"><expr pos:start="33:61" pos:end="33:74"><operator pos:start="33:61" pos:end="33:61">&amp;</operator><name pos:start="33:62" pos:end="33:74"><name pos:start="33:62" pos:end="33:64">qxl</name><operator pos:start="33:65" pos:end="33:66">-&gt;</operator><name pos:start="33:67" pos:end="33:69">vga</name><operator pos:start="33:70" pos:end="33:70">.</operator><name pos:start="33:71" pos:end="33:74">vram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="51:9"><if pos:start="35:9" pos:end="47:9">if <condition pos:start="35:12" pos:end="35:42">(<expr pos:start="35:13" pos:end="35:41"><name pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:15">qxl</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:30">guest_primary</name><operator pos:start="35:31" pos:end="35:31">.</operator><name pos:start="35:32" pos:end="35:37">stride</name></name> <operator pos:start="35:39" pos:end="35:39">&lt;</operator> <literal type="number" pos:start="35:41" pos:end="35:41">0</literal></expr>)</condition> <block pos:start="35:44" pos:end="47:9">{<block_content pos:start="39:13" pos:end="45:45">

            <comment type="block" pos:start="37:13" pos:end="37:75">/* spice surface is upside down -&gt; need extra buffer to flip */</comment>

            <expr_stmt pos:start="39:13" pos:end="39:67"><expr pos:start="39:13" pos:end="39:66"><name pos:start="39:13" pos:end="39:37"><name pos:start="39:13" pos:end="39:15">qxl</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:30">guest_primary</name><operator pos:start="39:31" pos:end="39:31">.</operator><name pos:start="39:32" pos:end="39:37">stride</name></name> <operator pos:start="39:39" pos:end="39:39">=</operator> <operator pos:start="39:41" pos:end="39:41">-</operator><name pos:start="39:42" pos:end="39:66"><name pos:start="39:42" pos:end="39:44">qxl</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:59">guest_primary</name><operator pos:start="39:60" pos:end="39:60">.</operator><name pos:start="39:61" pos:end="39:66">stride</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="43:80"><expr pos:start="41:13" pos:end="43:79"><name pos:start="41:13" pos:end="41:38"><name pos:start="41:13" pos:end="41:15">qxl</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:30">guest_primary</name><operator pos:start="41:31" pos:end="41:31">.</operator><name pos:start="41:32" pos:end="41:38">flipped</name></name> <operator pos:start="41:40" pos:end="41:40">=</operator> <call pos:start="41:42" pos:end="43:79"><name pos:start="41:42" pos:end="41:49">g_malloc</name><argument_list pos:start="41:50" pos:end="43:79">(<argument pos:start="41:51" pos:end="43:78"><expr pos:start="41:51" pos:end="43:78"><name pos:start="41:51" pos:end="41:82"><name pos:start="41:51" pos:end="41:53">qxl</name><operator pos:start="41:54" pos:end="41:55">-&gt;</operator><name pos:start="41:56" pos:end="41:68">guest_primary</name><operator pos:start="41:69" pos:end="41:69">.</operator><name pos:start="41:70" pos:end="41:76">surface</name><operator pos:start="41:77" pos:end="41:77">.</operator><name pos:start="41:78" pos:end="41:82">width</name></name> <operator pos:start="41:84" pos:end="41:84">*</operator>

                                                     <name pos:start="43:54" pos:end="43:78"><name pos:start="43:54" pos:end="43:56">qxl</name><operator pos:start="43:57" pos:end="43:58">-&gt;</operator><name pos:start="43:59" pos:end="43:71">guest_primary</name><operator pos:start="43:72" pos:end="43:72">.</operator><name pos:start="43:73" pos:end="43:78">stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:45"><expr pos:start="45:13" pos:end="45:44"><name pos:start="45:13" pos:end="45:15">ptr</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:44"><name pos:start="45:19" pos:end="45:21">qxl</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:36">guest_primary</name><operator pos:start="45:37" pos:end="45:37">.</operator><name pos:start="45:38" pos:end="45:44">flipped</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="51:9">else <block pos:start="47:16" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:42">

            <expr_stmt pos:start="49:13" pos:end="49:42"><expr pos:start="49:13" pos:end="49:41"><name pos:start="49:13" pos:end="49:15">ptr</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:41"><name pos:start="49:19" pos:end="49:21">qxl</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:36">guest_primary</name><operator pos:start="49:37" pos:end="49:37">.</operator><name pos:start="49:38" pos:end="49:41">data</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="67:58"><expr pos:start="53:9" pos:end="67:57"><call pos:start="53:9" pos:end="67:57"><name pos:start="53:9" pos:end="53:14">dprint</name><argument_list pos:start="53:15" pos:end="67:57">(<argument pos:start="53:16" pos:end="53:18"><expr pos:start="53:16" pos:end="53:18"><name pos:start="53:16" pos:end="53:18">qxl</name></expr></argument>, <argument pos:start="53:21" pos:end="53:21"><expr pos:start="53:21" pos:end="53:21"><literal type="number" pos:start="53:21" pos:end="53:21">1</literal></expr></argument>, <argument pos:start="53:24" pos:end="53:74"><expr pos:start="53:24" pos:end="53:74"><literal type="string" pos:start="53:24" pos:end="53:74">"%s: %dx%d, stride %d, bpp %d, depth %d, flip %s\n"</literal></expr></argument>,

               <argument pos:start="55:16" pos:end="55:27"><expr pos:start="55:16" pos:end="55:27"><name pos:start="55:16" pos:end="55:27">__FUNCTION__</name></expr></argument>,

               <argument pos:start="57:16" pos:end="57:47"><expr pos:start="57:16" pos:end="57:47"><name pos:start="57:16" pos:end="57:47"><name pos:start="57:16" pos:end="57:18">qxl</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:33">guest_primary</name><operator pos:start="57:34" pos:end="57:34">.</operator><name pos:start="57:35" pos:end="57:41">surface</name><operator pos:start="57:42" pos:end="57:42">.</operator><name pos:start="57:43" pos:end="57:47">width</name></name></expr></argument>,

               <argument pos:start="59:16" pos:end="59:48"><expr pos:start="59:16" pos:end="59:48"><name pos:start="59:16" pos:end="59:48"><name pos:start="59:16" pos:end="59:18">qxl</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:33">guest_primary</name><operator pos:start="59:34" pos:end="59:34">.</operator><name pos:start="59:35" pos:end="59:41">surface</name><operator pos:start="59:42" pos:end="59:42">.</operator><name pos:start="59:43" pos:end="59:48">height</name></name></expr></argument>,

               <argument pos:start="61:16" pos:end="61:40"><expr pos:start="61:16" pos:end="61:40"><name pos:start="61:16" pos:end="61:40"><name pos:start="61:16" pos:end="61:18">qxl</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:33">guest_primary</name><operator pos:start="61:34" pos:end="61:34">.</operator><name pos:start="61:35" pos:end="61:40">stride</name></name></expr></argument>,

               <argument pos:start="63:16" pos:end="63:42"><expr pos:start="63:16" pos:end="63:42"><name pos:start="63:16" pos:end="63:42"><name pos:start="63:16" pos:end="63:18">qxl</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:33">guest_primary</name><operator pos:start="63:34" pos:end="63:34">.</operator><name pos:start="63:35" pos:end="63:42">bytes_pp</name></name></expr></argument>,

               <argument pos:start="65:16" pos:end="65:41"><expr pos:start="65:16" pos:end="65:41"><name pos:start="65:16" pos:end="65:41"><name pos:start="65:16" pos:end="65:18">qxl</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:33">guest_primary</name><operator pos:start="65:34" pos:end="65:34">.</operator><name pos:start="65:35" pos:end="65:41">bits_pp</name></name></expr></argument>,

               <argument pos:start="67:16" pos:end="67:56"><expr pos:start="67:16" pos:end="67:56"><ternary pos:start="67:16" pos:end="67:56"><condition pos:start="67:16" pos:end="67:43"><expr pos:start="67:16" pos:end="67:41"><name pos:start="67:16" pos:end="67:41"><name pos:start="67:16" pos:end="67:18">qxl</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:33">guest_primary</name><operator pos:start="67:34" pos:end="67:34">.</operator><name pos:start="67:35" pos:end="67:41">flipped</name></name></expr> ?</condition><then pos:start="67:45" pos:end="67:49"> <expr pos:start="67:45" pos:end="67:49"><literal type="string" pos:start="67:45" pos:end="67:49">"yes"</literal></expr> </then><else pos:start="67:51" pos:end="67:56">: <expr pos:start="67:53" pos:end="67:56"><literal type="string" pos:start="67:53" pos:end="67:56">"no"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="79:49"><expr pos:start="69:9" pos:end="79:48"><name pos:start="69:9" pos:end="69:24"><name pos:start="69:9" pos:end="69:11">vga</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:15">ds</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:24">surface</name></name> <operator pos:start="69:26" pos:end="69:26">=</operator>

            <call pos:start="71:13" pos:end="79:48"><name pos:start="71:13" pos:end="71:43">qemu_create_displaysurface_from</name><argument_list pos:start="71:44" pos:end="79:48">(<argument pos:start="71:45" pos:end="71:76"><expr pos:start="71:45" pos:end="71:76"><name pos:start="71:45" pos:end="71:76"><name pos:start="71:45" pos:end="71:47">qxl</name><operator pos:start="71:48" pos:end="71:49">-&gt;</operator><name pos:start="71:50" pos:end="71:62">guest_primary</name><operator pos:start="71:63" pos:end="71:63">.</operator><name pos:start="71:64" pos:end="71:70">surface</name><operator pos:start="71:71" pos:end="71:71">.</operator><name pos:start="71:72" pos:end="71:76">width</name></name></expr></argument>,

                                            <argument pos:start="73:45" pos:end="73:77"><expr pos:start="73:45" pos:end="73:77"><name pos:start="73:45" pos:end="73:77"><name pos:start="73:45" pos:end="73:47">qxl</name><operator pos:start="73:48" pos:end="73:49">-&gt;</operator><name pos:start="73:50" pos:end="73:62">guest_primary</name><operator pos:start="73:63" pos:end="73:63">.</operator><name pos:start="73:64" pos:end="73:70">surface</name><operator pos:start="73:71" pos:end="73:71">.</operator><name pos:start="73:72" pos:end="73:77">height</name></name></expr></argument>,

                                            <argument pos:start="75:45" pos:end="75:70"><expr pos:start="75:45" pos:end="75:70"><name pos:start="75:45" pos:end="75:70"><name pos:start="75:45" pos:end="75:47">qxl</name><operator pos:start="75:48" pos:end="75:49">-&gt;</operator><name pos:start="75:50" pos:end="75:62">guest_primary</name><operator pos:start="75:63" pos:end="75:63">.</operator><name pos:start="75:64" pos:end="75:70">bits_pp</name></name></expr></argument>,

                                            <argument pos:start="77:45" pos:end="77:69"><expr pos:start="77:45" pos:end="77:69"><name pos:start="77:45" pos:end="77:69"><name pos:start="77:45" pos:end="77:47">qxl</name><operator pos:start="77:48" pos:end="77:49">-&gt;</operator><name pos:start="77:50" pos:end="77:62">guest_primary</name><operator pos:start="77:63" pos:end="77:63">.</operator><name pos:start="77:64" pos:end="77:69">stride</name></name></expr></argument>,

                                            <argument pos:start="79:45" pos:end="79:47"><expr pos:start="79:45" pos:end="79:47"><name pos:start="79:45" pos:end="79:47">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:28"><expr pos:start="81:9" pos:end="81:27"><call pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:18">dpy_resize</name><argument_list pos:start="81:19" pos:end="81:27">(<argument pos:start="81:20" pos:end="81:26"><expr pos:start="81:20" pos:end="81:26"><name pos:start="81:20" pos:end="81:26"><name pos:start="81:20" pos:end="81:22">vga</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:26">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="91:5"><if pos:start="87:5" pos:end="91:5">if <condition pos:start="87:8" pos:end="87:37">(<expr pos:start="87:9" pos:end="87:36"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:36"><name pos:start="87:10" pos:end="87:12">qxl</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:27">guest_primary</name><operator pos:start="87:28" pos:end="87:28">.</operator><name pos:start="87:29" pos:end="87:36">commands</name></name></expr>)</condition> <block pos:start="87:39" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:15">

        <return pos:start="89:9" pos:end="89:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:36"><expr pos:start="93:5" pos:end="93:35"><name pos:start="93:5" pos:end="93:31"><name pos:start="93:5" pos:end="93:7">qxl</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:22">guest_primary</name><operator pos:start="93:23" pos:end="93:23">.</operator><name pos:start="93:24" pos:end="93:31">commands</name></name> <operator pos:start="93:33" pos:end="93:33">=</operator> <literal type="number" pos:start="93:35" pos:end="93:35">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:22"><expr pos:start="97:5" pos:end="97:21"><name pos:start="97:5" pos:end="97:15"><name pos:start="97:5" pos:end="97:10">update</name><operator pos:start="97:11" pos:end="97:11">.</operator><name pos:start="97:12" pos:end="97:15">left</name></name>   <operator pos:start="97:19" pos:end="97:19">=</operator> <literal type="number" pos:start="97:21" pos:end="97:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:53"><expr pos:start="99:5" pos:end="99:52"><name pos:start="99:5" pos:end="99:16"><name pos:start="99:5" pos:end="99:10">update</name><operator pos:start="99:11" pos:end="99:11">.</operator><name pos:start="99:12" pos:end="99:16">right</name></name>  <operator pos:start="99:19" pos:end="99:19">=</operator> <name pos:start="99:21" pos:end="99:52"><name pos:start="99:21" pos:end="99:23">qxl</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:38">guest_primary</name><operator pos:start="99:39" pos:end="99:39">.</operator><name pos:start="99:40" pos:end="99:46">surface</name><operator pos:start="99:47" pos:end="99:47">.</operator><name pos:start="99:48" pos:end="99:52">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:22"><expr pos:start="101:5" pos:end="101:21"><name pos:start="101:5" pos:end="101:14"><name pos:start="101:5" pos:end="101:10">update</name><operator pos:start="101:11" pos:end="101:11">.</operator><name pos:start="101:12" pos:end="101:14">top</name></name>    <operator pos:start="101:19" pos:end="101:19">=</operator> <literal type="number" pos:start="101:21" pos:end="101:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:54"><expr pos:start="103:5" pos:end="103:53"><name pos:start="103:5" pos:end="103:17"><name pos:start="103:5" pos:end="103:10">update</name><operator pos:start="103:11" pos:end="103:11">.</operator><name pos:start="103:12" pos:end="103:17">bottom</name></name> <operator pos:start="103:19" pos:end="103:19">=</operator> <name pos:start="103:21" pos:end="103:53"><name pos:start="103:21" pos:end="103:23">qxl</name><operator pos:start="103:24" pos:end="103:25">-&gt;</operator><name pos:start="103:26" pos:end="103:38">guest_primary</name><operator pos:start="103:39" pos:end="103:39">.</operator><name pos:start="103:40" pos:end="103:46">surface</name><operator pos:start="103:47" pos:end="103:47">.</operator><name pos:start="103:48" pos:end="103:53">height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:36"><expr pos:start="107:5" pos:end="107:35"><call pos:start="107:5" pos:end="107:35"><name pos:start="107:5" pos:end="107:10">memset</name><argument_list pos:start="107:11" pos:end="107:35">(<argument pos:start="107:12" pos:end="107:16"><expr pos:start="107:12" pos:end="107:16"><name pos:start="107:12" pos:end="107:16">dirty</name></expr></argument>, <argument pos:start="107:19" pos:end="107:19"><expr pos:start="107:19" pos:end="107:19"><literal type="number" pos:start="107:19" pos:end="107:19">0</literal></expr></argument>, <argument pos:start="107:22" pos:end="107:34"><expr pos:start="107:22" pos:end="107:34"><sizeof pos:start="107:22" pos:end="107:34">sizeof<argument_list pos:start="107:28" pos:end="107:34">(<argument pos:start="107:29" pos:end="107:33"><expr pos:start="107:29" pos:end="107:33"><name pos:start="107:29" pos:end="107:33">dirty</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="111:65"><expr pos:start="109:5" pos:end="111:64"><call pos:start="109:5" pos:end="111:64"><name pos:start="109:5" pos:end="109:25">qxl_spice_update_area</name><argument_list pos:start="109:26" pos:end="111:64">(<argument pos:start="109:27" pos:end="109:29"><expr pos:start="109:27" pos:end="109:29"><name pos:start="109:27" pos:end="109:29">qxl</name></expr></argument>, <argument pos:start="109:32" pos:end="109:32"><expr pos:start="109:32" pos:end="109:32"><literal type="number" pos:start="109:32" pos:end="109:32">0</literal></expr></argument>, <argument pos:start="109:35" pos:end="109:41"><expr pos:start="109:35" pos:end="109:41"><operator pos:start="109:35" pos:end="109:35">&amp;</operator><name pos:start="109:36" pos:end="109:41">update</name></expr></argument>,

                          <argument pos:start="111:27" pos:end="111:31"><expr pos:start="111:27" pos:end="111:31"><name pos:start="111:27" pos:end="111:31">dirty</name></expr></argument>, <argument pos:start="111:34" pos:end="111:50"><expr pos:start="111:34" pos:end="111:50"><call pos:start="111:34" pos:end="111:50"><name pos:start="111:34" pos:end="111:43">ARRAY_SIZE</name><argument_list pos:start="111:44" pos:end="111:50">(<argument pos:start="111:45" pos:end="111:49"><expr pos:start="111:45" pos:end="111:49"><name pos:start="111:45" pos:end="111:49">dirty</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="111:53" pos:end="111:53"><expr pos:start="111:53" pos:end="111:53"><literal type="number" pos:start="111:53" pos:end="111:53">1</literal></expr></argument>, <argument pos:start="111:56" pos:end="111:63"><expr pos:start="111:56" pos:end="111:63"><name pos:start="111:56" pos:end="111:63">QXL_SYNC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="115:5" pos:end="137:5">for <control pos:start="115:9" pos:end="115:43">(<init pos:start="115:10" pos:end="115:15"><expr pos:start="115:10" pos:end="115:14"><name pos:start="115:10" pos:end="115:10">i</name> <operator pos:start="115:12" pos:end="115:12">=</operator> <literal type="number" pos:start="115:14" pos:end="115:14">0</literal></expr>;</init> <condition pos:start="115:17" pos:end="115:38"><expr pos:start="115:17" pos:end="115:37"><name pos:start="115:17" pos:end="115:17">i</name> <operator pos:start="115:19" pos:end="115:19">&lt;</operator> <call pos:start="115:21" pos:end="115:37"><name pos:start="115:21" pos:end="115:30">ARRAY_SIZE</name><argument_list pos:start="115:31" pos:end="115:37">(<argument pos:start="115:32" pos:end="115:36"><expr pos:start="115:32" pos:end="115:36"><name pos:start="115:32" pos:end="115:36">dirty</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="115:40" pos:end="115:42"><expr pos:start="115:40" pos:end="115:42"><name pos:start="115:40" pos:end="115:40">i</name><operator pos:start="115:41" pos:end="115:42">++</operator></expr></incr>)</control> <block pos:start="115:45" pos:end="137:5">{<block_content pos:start="117:9" pos:end="135:51">

        <if_stmt pos:start="117:9" pos:end="121:9"><if pos:start="117:9" pos:end="121:9">if <condition pos:start="117:12" pos:end="117:46">(<expr pos:start="117:13" pos:end="117:45"><call pos:start="117:13" pos:end="117:45"><name pos:start="117:13" pos:end="117:36">qemu_spice_rect_is_empty</name><argument_list pos:start="117:37" pos:end="117:45">(<argument pos:start="117:38" pos:end="117:44"><expr pos:start="117:38" pos:end="117:44"><name pos:start="117:38" pos:end="117:42">dirty</name><operator pos:start="117:43" pos:end="117:43">+</operator><name pos:start="117:44" pos:end="117:44">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:48" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:18">

            <break pos:start="119:13" pos:end="119:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="123:9" pos:end="127:9"><if pos:start="123:9" pos:end="127:9">if <condition pos:start="123:12" pos:end="123:39">(<expr pos:start="123:13" pos:end="123:38"><name pos:start="123:13" pos:end="123:38"><name pos:start="123:13" pos:end="123:15">qxl</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:30">guest_primary</name><operator pos:start="123:31" pos:end="123:31">.</operator><name pos:start="123:32" pos:end="123:38">flipped</name></name></expr>)</condition> <block pos:start="123:41" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:35">

            <expr_stmt pos:start="125:13" pos:end="125:35"><expr pos:start="125:13" pos:end="125:34"><call pos:start="125:13" pos:end="125:34"><name pos:start="125:13" pos:end="125:20">qxl_flip</name><argument_list pos:start="125:21" pos:end="125:34">(<argument pos:start="125:22" pos:end="125:24"><expr pos:start="125:22" pos:end="125:24"><name pos:start="125:22" pos:end="125:24">qxl</name></expr></argument>, <argument pos:start="125:27" pos:end="125:33"><expr pos:start="125:27" pos:end="125:33"><name pos:start="125:27" pos:end="125:31">dirty</name><operator pos:start="125:32" pos:end="125:32">+</operator><name pos:start="125:33" pos:end="125:33">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="135:51"><expr pos:start="129:9" pos:end="135:50"><call pos:start="129:9" pos:end="135:50"><name pos:start="129:9" pos:end="129:18">dpy_update</name><argument_list pos:start="129:19" pos:end="135:50">(<argument pos:start="129:20" pos:end="129:26"><expr pos:start="129:20" pos:end="129:26"><name pos:start="129:20" pos:end="129:26"><name pos:start="129:20" pos:end="129:22">vga</name><operator pos:start="129:23" pos:end="129:24">-&gt;</operator><name pos:start="129:25" pos:end="129:26">ds</name></name></expr></argument>,

                   <argument pos:start="131:20" pos:end="131:32"><expr pos:start="131:20" pos:end="131:32"><name pos:start="131:20" pos:end="131:27"><name pos:start="131:20" pos:end="131:24">dirty</name><index pos:start="131:25" pos:end="131:27">[<expr pos:start="131:26" pos:end="131:26"><name pos:start="131:26" pos:end="131:26">i</name></expr>]</index></name><operator pos:start="131:28" pos:end="131:28">.</operator><name pos:start="131:29" pos:end="131:32">left</name></expr></argument>, <argument pos:start="131:35" pos:end="131:46"><expr pos:start="131:35" pos:end="131:46"><name pos:start="131:35" pos:end="131:42"><name pos:start="131:35" pos:end="131:39">dirty</name><index pos:start="131:40" pos:end="131:42">[<expr pos:start="131:41" pos:end="131:41"><name pos:start="131:41" pos:end="131:41">i</name></expr>]</index></name><operator pos:start="131:43" pos:end="131:43">.</operator><name pos:start="131:44" pos:end="131:46">top</name></expr></argument>,

                   <argument pos:start="133:20" pos:end="133:49"><expr pos:start="133:20" pos:end="133:49"><name pos:start="133:20" pos:end="133:27"><name pos:start="133:20" pos:end="133:24">dirty</name><index pos:start="133:25" pos:end="133:27">[<expr pos:start="133:26" pos:end="133:26"><name pos:start="133:26" pos:end="133:26">i</name></expr>]</index></name><operator pos:start="133:28" pos:end="133:28">.</operator><name pos:start="133:29" pos:end="133:33">right</name> <operator pos:start="133:35" pos:end="133:35">-</operator> <name pos:start="133:37" pos:end="133:44"><name pos:start="133:37" pos:end="133:41">dirty</name><index pos:start="133:42" pos:end="133:44">[<expr pos:start="133:43" pos:end="133:43"><name pos:start="133:43" pos:end="133:43">i</name></expr>]</index></name><operator pos:start="133:45" pos:end="133:45">.</operator><name pos:start="133:46" pos:end="133:49">left</name></expr></argument>,

                   <argument pos:start="135:20" pos:end="135:49"><expr pos:start="135:20" pos:end="135:49"><name pos:start="135:20" pos:end="135:27"><name pos:start="135:20" pos:end="135:24">dirty</name><index pos:start="135:25" pos:end="135:27">[<expr pos:start="135:26" pos:end="135:26"><name pos:start="135:26" pos:end="135:26">i</name></expr>]</index></name><operator pos:start="135:28" pos:end="135:28">.</operator><name pos:start="135:29" pos:end="135:34">bottom</name> <operator pos:start="135:36" pos:end="135:36">-</operator> <name pos:start="135:38" pos:end="135:45"><name pos:start="135:38" pos:end="135:42">dirty</name><index pos:start="135:43" pos:end="135:45">[<expr pos:start="135:44" pos:end="135:44"><name pos:start="135:44" pos:end="135:44">i</name></expr>]</index></name><operator pos:start="135:46" pos:end="135:46">.</operator><name pos:start="135:47" pos:end="135:49">top</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
