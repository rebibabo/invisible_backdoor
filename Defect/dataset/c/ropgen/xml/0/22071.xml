<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22071.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">load_elf_as</name><parameter_list pos:start="1:16" pos:end="9:63">(<parameter pos:start="1:17" pos:end="1:36"><decl pos:start="1:17" pos:end="1:36"><type pos:start="1:17" pos:end="1:36"><specifier pos:start="1:17" pos:end="1:21">const</specifier> <name pos:start="1:23" pos:end="1:26">char</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:36">filename</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:58"><function_decl pos:start="3:17" pos:end="3:58"><type pos:start="3:17" pos:end="3:24"><name pos:start="3:17" pos:end="3:24">uint64_t</name></type> (<modifier pos:start="3:27" pos:end="3:27">*</modifier><name pos:start="3:28" pos:end="3:39">translate_fn</name>)<parameter_list pos:start="3:41" pos:end="3:58">(<parameter pos:start="3:42" pos:end="3:47"><decl pos:start="3:42" pos:end="3:47"><type pos:start="3:42" pos:end="3:47"><name pos:start="3:42" pos:end="3:45">void</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type></decl></parameter>, <parameter pos:start="3:50" pos:end="3:57"><decl pos:start="3:50" pos:end="3:57"><type pos:start="3:50" pos:end="3:57"><name pos:start="3:50" pos:end="3:57">uint64_t</name></type></decl></parameter>)</parameter_list></function_decl></parameter>,

                <parameter pos:start="5:17" pos:end="5:38"><decl pos:start="5:17" pos:end="5:38"><type pos:start="5:17" pos:end="5:38"><name pos:start="5:17" pos:end="5:20">void</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:38">translate_opaque</name></decl></parameter>, <parameter pos:start="5:41" pos:end="5:56"><decl pos:start="5:41" pos:end="5:56"><type pos:start="5:41" pos:end="5:56"><name pos:start="5:41" pos:end="5:48">uint64_t</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:56">pentry</name></decl></parameter>, <parameter pos:start="5:59" pos:end="5:75"><decl pos:start="5:59" pos:end="5:75"><type pos:start="5:59" pos:end="5:75"><name pos:start="5:59" pos:end="5:66">uint64_t</name> <modifier pos:start="5:68" pos:end="5:68">*</modifier></type><name pos:start="5:69" pos:end="5:75">lowaddr</name></decl></parameter>,

                <parameter pos:start="7:17" pos:end="7:34"><decl pos:start="7:17" pos:end="7:34"><type pos:start="7:17" pos:end="7:34"><name pos:start="7:17" pos:end="7:24">uint64_t</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:34">highaddr</name></decl></parameter>, <parameter pos:start="7:37" pos:end="7:50"><decl pos:start="7:37" pos:end="7:50"><type pos:start="7:37" pos:end="7:50"><name pos:start="7:37" pos:end="7:39">int</name></type> <name pos:start="7:41" pos:end="7:50">big_endian</name></decl></parameter>, <parameter pos:start="7:53" pos:end="7:67"><decl pos:start="7:53" pos:end="7:67"><type pos:start="7:53" pos:end="7:67"><name pos:start="7:53" pos:end="7:55">int</name></type> <name pos:start="7:57" pos:end="7:67">elf_machine</name></decl></parameter>,

                <parameter pos:start="9:17" pos:end="9:29"><decl pos:start="9:17" pos:end="9:29"><type pos:start="9:17" pos:end="9:29"><name pos:start="9:17" pos:end="9:19">int</name></type> <name pos:start="9:21" pos:end="9:29">clear_lsb</name></decl></parameter>, <parameter pos:start="9:32" pos:end="9:44"><decl pos:start="9:32" pos:end="9:44"><type pos:start="9:32" pos:end="9:44"><name pos:start="9:32" pos:end="9:34">int</name></type> <name pos:start="9:36" pos:end="9:44">data_swab</name></decl></parameter>, <parameter pos:start="9:47" pos:end="9:62"><decl pos:start="9:47" pos:end="9:62"><type pos:start="9:47" pos:end="9:62"><name pos:start="9:47" pos:end="9:58">AddressSpace</name> <modifier pos:start="9:60" pos:end="9:60">*</modifier></type><name pos:start="9:61" pos:end="9:62">as</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="109:1">{<block_content pos:start="13:5" pos:end="107:15">

    <decl_stmt pos:start="13:5" pos:end="13:76"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">fd</name></decl>, <decl pos:start="13:13" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:13" pos:end="13:22">data_order</name></decl>, <decl pos:start="13:25" pos:end="13:41"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:25" pos:end="13:41">target_data_order</name></decl>, <decl pos:start="13:44" pos:end="13:52"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:44" pos:end="13:52">must_swab</name></decl>, <decl pos:start="13:55" pos:end="13:75"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:55" pos:end="13:57">ret</name> <init pos:start="13:59" pos:end="13:75">= <expr pos:start="13:61" pos:end="13:75"><name pos:start="13:61" pos:end="13:75">ELF_LOAD_FAILED</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:30"><name pos:start="15:13" pos:end="15:19">e_ident</name><index pos:start="15:20" pos:end="15:30">[<expr pos:start="15:21" pos:end="15:29"><name pos:start="15:21" pos:end="15:29">EI_NIDENT</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:6">fd</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:44"><name pos:start="19:10" pos:end="19:13">open</name><argument_list pos:start="19:14" pos:end="19:44">(<argument pos:start="19:15" pos:end="19:22"><expr pos:start="19:15" pos:end="19:22"><name pos:start="19:15" pos:end="19:22">filename</name></expr></argument>, <argument pos:start="19:25" pos:end="19:43"><expr pos:start="19:25" pos:end="19:43"><name pos:start="19:25" pos:end="19:32">O_RDONLY</name> <operator pos:start="19:34" pos:end="19:34">|</operator> <name pos:start="19:36" pos:end="19:43">O_BINARY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:15">(<expr pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:10">fd</name> <operator pos:start="21:12" pos:end="21:12">&lt;</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>)</condition> <block pos:start="21:17" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:18">

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><call pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:14">perror</name><argument_list pos:start="23:15" pos:end="23:24">(<argument pos:start="23:16" pos:end="23:23"><expr pos:start="23:16" pos:end="23:23"><name pos:start="23:16" pos:end="23:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="31:18"><if pos:start="29:5" pos:end="31:18">if <condition pos:start="29:8" pos:end="29:62">(<expr pos:start="29:9" pos:end="29:61"><call pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:12">read</name><argument_list pos:start="29:13" pos:end="29:42">(<argument pos:start="29:14" pos:end="29:15"><expr pos:start="29:14" pos:end="29:15"><name pos:start="29:14" pos:end="29:15">fd</name></expr></argument>, <argument pos:start="29:18" pos:end="29:24"><expr pos:start="29:18" pos:end="29:24"><name pos:start="29:18" pos:end="29:24">e_ident</name></expr></argument>, <argument pos:start="29:27" pos:end="29:41"><expr pos:start="29:27" pos:end="29:41"><sizeof pos:start="29:27" pos:end="29:41">sizeof<argument_list pos:start="29:33" pos:end="29:41">(<argument pos:start="29:34" pos:end="29:40"><expr pos:start="29:34" pos:end="29:40"><name pos:start="29:34" pos:end="29:40">e_ident</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="29:44" pos:end="29:45">!=</operator> <sizeof pos:start="29:47" pos:end="29:61">sizeof<argument_list pos:start="29:53" pos:end="29:61">(<argument pos:start="29:54" pos:end="29:60"><expr pos:start="29:54" pos:end="29:60"><name pos:start="29:54" pos:end="29:60">e_ident</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:18"><block_content pos:start="31:9" pos:end="31:18">

        <goto pos:start="31:9" pos:end="31:18">goto <name pos:start="31:14" pos:end="31:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="48:0"><if pos:start="33:5" pos:end="48:0">if <condition pos:start="33:8" pos:end="39:30">(<expr pos:start="33:9" pos:end="39:29"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:15">e_ident</name><index pos:start="33:16" pos:end="33:18">[<expr pos:start="33:17" pos:end="33:17"><literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr>]</index></name> <operator pos:start="33:20" pos:end="33:21">!=</operator> <name pos:start="33:23" pos:end="33:29">ELFMAG0</name> <operator pos:start="33:31" pos:end="33:32">||</operator>

        <name pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:15">e_ident</name><index pos:start="35:16" pos:end="35:18">[<expr pos:start="35:17" pos:end="35:17"><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>]</index></name> <operator pos:start="35:20" pos:end="35:21">!=</operator> <name pos:start="35:23" pos:end="35:29">ELFMAG1</name> <operator pos:start="35:31" pos:end="35:32">||</operator>

        <name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:15">e_ident</name><index pos:start="37:16" pos:end="37:18">[<expr pos:start="37:17" pos:end="37:17"><literal type="number" pos:start="37:17" pos:end="37:17">2</literal></expr>]</index></name> <operator pos:start="37:20" pos:end="37:21">!=</operator> <name pos:start="37:23" pos:end="37:29">ELFMAG2</name> <operator pos:start="37:31" pos:end="37:32">||</operator>

        <name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:15">e_ident</name><index pos:start="39:16" pos:end="39:18">[<expr pos:start="39:17" pos:end="39:17"><literal type="number" pos:start="39:17" pos:end="39:17">3</literal></expr>]</index></name> <operator pos:start="39:20" pos:end="39:21">!=</operator> <name pos:start="39:23" pos:end="39:29">ELFMAG3</name></expr>)</condition> <block pos:start="39:32" pos:end="48:0">{<block_content pos:start="41:9" pos:end="43:18">

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:30">ELF_LOAD_NOT_ELF</name></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:18">goto <name pos:start="43:14" pos:end="43:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

<cpp:ifdef pos:start="47:1" pos:end="47:27">#<cpp:directive pos:start="47:2" pos:end="47:6">ifdef</cpp:directive> <name pos:start="47:8" pos:end="47:27">HOST_WORDS_BIGENDIAN</name></cpp:ifdef>

    <expr_stmt pos:start="49:5" pos:end="52:0"><expr pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:14">data_order</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:28">ELFDATA2MSB</name></expr>;</expr_stmt>

<cpp:else pos:start="51:1" pos:end="51:5">#<cpp:directive pos:start="51:2" pos:end="51:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="53:5" pos:end="56:0"><expr pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:14">data_order</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <name pos:start="53:18" pos:end="53:28">ELFDATA2LSB</name></expr>;</expr_stmt>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="57:5" pos:end="57:47"><expr pos:start="57:5" pos:end="57:46"><name pos:start="57:5" pos:end="57:13">must_swab</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:26">data_order</name> <operator pos:start="57:28" pos:end="57:29">!=</operator> <name pos:start="57:31" pos:end="57:46"><name pos:start="57:31" pos:end="57:37">e_ident</name><index pos:start="57:38" pos:end="57:46">[<expr pos:start="57:39" pos:end="57:45"><name pos:start="57:39" pos:end="57:45">EI_DATA</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:19">(<expr pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:18">big_endian</name></expr>)</condition> <block pos:start="59:21" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:40">

        <expr_stmt pos:start="61:9" pos:end="61:40"><expr pos:start="61:9" pos:end="61:39"><name pos:start="61:9" pos:end="61:25">target_data_order</name> <operator pos:start="61:27" pos:end="61:27">=</operator> <name pos:start="61:29" pos:end="61:39">ELFDATA2MSB</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="67:5">else <block pos:start="63:12" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:40">

        <expr_stmt pos:start="65:9" pos:end="65:40"><expr pos:start="65:9" pos:end="65:39"><name pos:start="65:9" pos:end="65:25">target_data_order</name> <operator pos:start="65:27" pos:end="65:27">=</operator> <name pos:start="65:29" pos:end="65:39">ELFDATA2LSB</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:46">(<expr pos:start="71:9" pos:end="71:45"><name pos:start="71:9" pos:end="71:25">target_data_order</name> <operator pos:start="71:27" pos:end="71:28">!=</operator> <name pos:start="71:30" pos:end="71:45"><name pos:start="71:30" pos:end="71:36">e_ident</name><index pos:start="71:37" pos:end="71:45">[<expr pos:start="71:38" pos:end="71:44"><name pos:start="71:38" pos:end="71:44">EI_DATA</name></expr>]</index></name></expr>)</condition> <block pos:start="71:48" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:18">

        <expr_stmt pos:start="73:9" pos:end="73:36"><expr pos:start="73:9" pos:end="73:35"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <name pos:start="73:15" pos:end="73:35">ELF_LOAD_WRONG_ENDIAN</name></expr>;</expr_stmt>

        <goto pos:start="75:9" pos:end="75:18">goto <name pos:start="75:14" pos:end="75:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:27"><expr pos:start="81:5" pos:end="81:26"><call pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:9">lseek</name><argument_list pos:start="81:10" pos:end="81:26">(<argument pos:start="81:11" pos:end="81:12"><expr pos:start="81:11" pos:end="81:12"><name pos:start="81:11" pos:end="81:12">fd</name></expr></argument>, <argument pos:start="81:15" pos:end="81:15"><expr pos:start="81:15" pos:end="81:15"><literal type="number" pos:start="81:15" pos:end="81:15">0</literal></expr></argument>, <argument pos:start="81:18" pos:end="81:25"><expr pos:start="81:18" pos:end="81:25"><name pos:start="81:18" pos:end="81:25">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="99:5"><if pos:start="83:5" pos:end="91:5">if <condition pos:start="83:8" pos:end="83:40">(<expr pos:start="83:9" pos:end="83:39"><name pos:start="83:9" pos:end="83:25"><name pos:start="83:9" pos:end="83:15">e_ident</name><index pos:start="83:16" pos:end="83:25">[<expr pos:start="83:17" pos:end="83:24"><name pos:start="83:17" pos:end="83:24">EI_CLASS</name></expr>]</index></name> <operator pos:start="83:27" pos:end="83:28">==</operator> <name pos:start="83:30" pos:end="83:39">ELFCLASS64</name></expr>)</condition> <block pos:start="83:42" pos:end="91:5">{<block_content pos:start="85:9" pos:end="89:40">

        <expr_stmt pos:start="85:9" pos:end="89:40"><expr pos:start="85:9" pos:end="89:39"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="89:39"><name pos:start="85:15" pos:end="85:24">load_elf64</name><argument_list pos:start="85:25" pos:end="89:39">(<argument pos:start="85:26" pos:end="85:33"><expr pos:start="85:26" pos:end="85:33"><name pos:start="85:26" pos:end="85:33">filename</name></expr></argument>, <argument pos:start="85:36" pos:end="85:37"><expr pos:start="85:36" pos:end="85:37"><name pos:start="85:36" pos:end="85:37">fd</name></expr></argument>, <argument pos:start="85:40" pos:end="85:51"><expr pos:start="85:40" pos:end="85:51"><name pos:start="85:40" pos:end="85:51">translate_fn</name></expr></argument>, <argument pos:start="85:54" pos:end="85:69"><expr pos:start="85:54" pos:end="85:69"><name pos:start="85:54" pos:end="85:69">translate_opaque</name></expr></argument>, <argument pos:start="85:72" pos:end="85:80"><expr pos:start="85:72" pos:end="85:80"><name pos:start="85:72" pos:end="85:80">must_swab</name></expr></argument>,

                         <argument pos:start="87:26" pos:end="87:31"><expr pos:start="87:26" pos:end="87:31"><name pos:start="87:26" pos:end="87:31">pentry</name></expr></argument>, <argument pos:start="87:34" pos:end="87:40"><expr pos:start="87:34" pos:end="87:40"><name pos:start="87:34" pos:end="87:40">lowaddr</name></expr></argument>, <argument pos:start="87:43" pos:end="87:50"><expr pos:start="87:43" pos:end="87:50"><name pos:start="87:43" pos:end="87:50">highaddr</name></expr></argument>, <argument pos:start="87:53" pos:end="87:63"><expr pos:start="87:53" pos:end="87:63"><name pos:start="87:53" pos:end="87:63">elf_machine</name></expr></argument>, <argument pos:start="87:66" pos:end="87:74"><expr pos:start="87:66" pos:end="87:74"><name pos:start="87:66" pos:end="87:74">clear_lsb</name></expr></argument>,

                         <argument pos:start="89:26" pos:end="89:34"><expr pos:start="89:26" pos:end="89:34"><name pos:start="89:26" pos:end="89:34">data_swab</name></expr></argument>, <argument pos:start="89:37" pos:end="89:38"><expr pos:start="89:37" pos:end="89:38"><name pos:start="89:37" pos:end="89:38">as</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="99:5">else <block pos:start="91:12" pos:end="99:5">{<block_content pos:start="93:9" pos:end="97:40">

        <expr_stmt pos:start="93:9" pos:end="97:40"><expr pos:start="93:9" pos:end="97:39"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <call pos:start="93:15" pos:end="97:39"><name pos:start="93:15" pos:end="93:24">load_elf32</name><argument_list pos:start="93:25" pos:end="97:39">(<argument pos:start="93:26" pos:end="93:33"><expr pos:start="93:26" pos:end="93:33"><name pos:start="93:26" pos:end="93:33">filename</name></expr></argument>, <argument pos:start="93:36" pos:end="93:37"><expr pos:start="93:36" pos:end="93:37"><name pos:start="93:36" pos:end="93:37">fd</name></expr></argument>, <argument pos:start="93:40" pos:end="93:51"><expr pos:start="93:40" pos:end="93:51"><name pos:start="93:40" pos:end="93:51">translate_fn</name></expr></argument>, <argument pos:start="93:54" pos:end="93:69"><expr pos:start="93:54" pos:end="93:69"><name pos:start="93:54" pos:end="93:69">translate_opaque</name></expr></argument>, <argument pos:start="93:72" pos:end="93:80"><expr pos:start="93:72" pos:end="93:80"><name pos:start="93:72" pos:end="93:80">must_swab</name></expr></argument>,

                         <argument pos:start="95:26" pos:end="95:31"><expr pos:start="95:26" pos:end="95:31"><name pos:start="95:26" pos:end="95:31">pentry</name></expr></argument>, <argument pos:start="95:34" pos:end="95:40"><expr pos:start="95:34" pos:end="95:40"><name pos:start="95:34" pos:end="95:40">lowaddr</name></expr></argument>, <argument pos:start="95:43" pos:end="95:50"><expr pos:start="95:43" pos:end="95:50"><name pos:start="95:43" pos:end="95:50">highaddr</name></expr></argument>, <argument pos:start="95:53" pos:end="95:63"><expr pos:start="95:53" pos:end="95:63"><name pos:start="95:53" pos:end="95:63">elf_machine</name></expr></argument>, <argument pos:start="95:66" pos:end="95:74"><expr pos:start="95:66" pos:end="95:74"><name pos:start="95:66" pos:end="95:74">clear_lsb</name></expr></argument>,

                         <argument pos:start="97:26" pos:end="97:34"><expr pos:start="97:26" pos:end="97:34"><name pos:start="97:26" pos:end="97:34">data_swab</name></expr></argument>, <argument pos:start="97:37" pos:end="97:38"><expr pos:start="97:37" pos:end="97:38"><name pos:start="97:37" pos:end="97:38">as</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



 <label pos:start="103:2" pos:end="103:6"><name pos:start="103:2" pos:end="103:5">fail</name>:</label>

    <expr_stmt pos:start="105:5" pos:end="105:14"><expr pos:start="105:5" pos:end="105:13"><call pos:start="105:5" pos:end="105:13"><name pos:start="105:5" pos:end="105:9">close</name><argument_list pos:start="105:10" pos:end="105:13">(<argument pos:start="105:11" pos:end="105:12"><expr pos:start="105:11" pos:end="105:12"><name pos:start="105:11" pos:end="105:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="107:5" pos:end="107:15">return <expr pos:start="107:12" pos:end="107:14"><name pos:start="107:12" pos:end="107:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
