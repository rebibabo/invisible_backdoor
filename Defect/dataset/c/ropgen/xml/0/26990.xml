<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26990.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:18">RENAME</name></type>(<name pos:start="1:20" pos:end="1:30">yuv2rgb32_2</name>)<parameter_list pos:start="1:32" pos:end="11:73">(<parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:42">SwsContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">c</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:67"><decl pos:start="1:48" pos:end="1:67"><type pos:start="1:48" pos:end="1:67"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:61">uint16_t</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:67">buf0</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:52"><decl pos:start="3:33" pos:end="3:52"><type pos:start="3:33" pos:end="3:52"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:46">uint16_t</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:52">buf1</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:75"><decl pos:start="3:55" pos:end="3:75"><type pos:start="3:55" pos:end="3:75"><specifier pos:start="3:55" pos:end="3:59">const</specifier> <name pos:start="3:61" pos:end="3:68">uint16_t</name> <modifier pos:start="3:70" pos:end="3:70">*</modifier></type><name pos:start="3:71" pos:end="3:75">ubuf0</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:53"><decl pos:start="5:33" pos:end="5:53"><type pos:start="5:33" pos:end="5:53"><specifier pos:start="5:33" pos:end="5:37">const</specifier> <name pos:start="5:39" pos:end="5:46">uint16_t</name> <modifier pos:start="5:48" pos:end="5:48">*</modifier></type><name pos:start="5:49" pos:end="5:53">ubuf1</name></decl></parameter>, <parameter pos:start="5:56" pos:end="5:76"><decl pos:start="5:56" pos:end="5:76"><type pos:start="5:56" pos:end="5:76"><specifier pos:start="5:56" pos:end="5:60">const</specifier> <name pos:start="5:62" pos:end="5:69">uint16_t</name> <modifier pos:start="5:71" pos:end="5:71">*</modifier></type><name pos:start="5:72" pos:end="5:76">vbuf0</name></decl></parameter>,

                                <parameter pos:start="7:33" pos:end="7:53"><decl pos:start="7:33" pos:end="7:53"><type pos:start="7:33" pos:end="7:53"><specifier pos:start="7:33" pos:end="7:37">const</specifier> <name pos:start="7:39" pos:end="7:46">uint16_t</name> <modifier pos:start="7:48" pos:end="7:48">*</modifier></type><name pos:start="7:49" pos:end="7:53">vbuf1</name></decl></parameter>, <parameter pos:start="7:56" pos:end="7:76"><decl pos:start="7:56" pos:end="7:76"><type pos:start="7:56" pos:end="7:76"><specifier pos:start="7:56" pos:end="7:60">const</specifier> <name pos:start="7:62" pos:end="7:69">uint16_t</name> <modifier pos:start="7:71" pos:end="7:71">*</modifier></type><name pos:start="7:72" pos:end="7:76">abuf0</name></decl></parameter>,

                                <parameter pos:start="9:33" pos:end="9:53"><decl pos:start="9:33" pos:end="9:53"><type pos:start="9:33" pos:end="9:53"><specifier pos:start="9:33" pos:end="9:37">const</specifier> <name pos:start="9:39" pos:end="9:46">uint16_t</name> <modifier pos:start="9:48" pos:end="9:48">*</modifier></type><name pos:start="9:49" pos:end="9:53">abuf1</name></decl></parameter>, <parameter pos:start="9:56" pos:end="9:68"><decl pos:start="9:56" pos:end="9:68"><type pos:start="9:56" pos:end="9:68"><name pos:start="9:56" pos:end="9:62">uint8_t</name> <modifier pos:start="9:64" pos:end="9:64">*</modifier></type><name pos:start="9:65" pos:end="9:68">dest</name></decl></parameter>,

                                <parameter pos:start="11:33" pos:end="11:40"><decl pos:start="11:33" pos:end="11:40"><type pos:start="11:33" pos:end="11:40"><name pos:start="11:33" pos:end="11:35">int</name></type> <name pos:start="11:37" pos:end="11:40">dstW</name></decl></parameter>, <parameter pos:start="11:43" pos:end="11:52"><decl pos:start="11:43" pos:end="11:52"><type pos:start="11:43" pos:end="11:52"><name pos:start="11:43" pos:end="11:45">int</name></type> <name pos:start="11:47" pos:end="11:52">yalpha</name></decl></parameter>, <parameter pos:start="11:55" pos:end="11:65"><decl pos:start="11:55" pos:end="11:65"><type pos:start="11:55" pos:end="11:65"><name pos:start="11:55" pos:end="11:57">int</name></type> <name pos:start="11:59" pos:end="11:65">uvalpha</name></decl></parameter>, <parameter pos:start="11:68" pos:end="11:72"><decl pos:start="11:68" pos:end="11:72"><type pos:start="11:68" pos:end="11:72"><name pos:start="11:68" pos:end="11:70">int</name></type> <name pos:start="11:72" pos:end="11:72">y</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="121:1">{<block_content pos:start="15:5" pos:end="119:5">

    <if_stmt pos:start="15:5" pos:end="119:5"><if pos:start="15:5" pos:end="93:5">if <condition pos:start="15:8" pos:end="15:45">(<expr pos:start="15:9" pos:end="15:44"><name pos:start="15:9" pos:end="15:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="15:30" pos:end="15:31">&amp;&amp;</operator> <name pos:start="15:33" pos:end="15:44"><name pos:start="15:33" pos:end="15:33">c</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:44">alpPixBuf</name></name></expr>)</condition> <block pos:start="15:47" pos:end="93:5">{<block_content pos:start="19:9" pos:end="92:0">

<cpp:if pos:start="17:1" pos:end="17:15">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15">ARCH_X86_64</name></expr></cpp:if>

        <asm pos:start="19:9" pos:end="44:0">__asm__ <specifier pos:start="19:17" pos:end="19:24">volatile</specifier>(

            YSCALEYUV2RGB(%%r8, %5)

            YSCALEYUV2RGB_YA(%%r8, %5, %6, %7)

            "psraw                  $3, %%mm1       \n\t" <comment type="block" pos:start="25:59" pos:end="25:90">/* abuf0[eax] - abuf1[eax] &gt;&gt;7*/</comment>

            "psraw                  $3, %%mm7       \n\t" <comment type="block" pos:start="27:59" pos:end="27:90">/* abuf0[eax] - abuf1[eax] &gt;&gt;7*/</comment>

            "packuswb            %%mm7, %%mm1       \n\t"

            WRITEBGR32(%4, 8280(%5), %%r8, %%mm2, %%mm4, %%mm5, %%mm1, %%mm0, %%mm7, %%mm3, %%mm6)

            :: "c" (buf0), "d" (buf1), "S" (ubuf0), "D" (ubuf1), "r" (dest),

               "a" (&amp;c-&gt;redDither),

               "r" (abuf0), "r" (abuf1)

            : "%r8"

        );</asm>

<cpp:else pos:start="43:1" pos:end="43:5">#<cpp:directive pos:start="43:2" pos:end="43:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="45:9" pos:end="45:47"><expr pos:start="45:9" pos:end="45:46"><operator pos:start="45:9" pos:end="45:9">*</operator><operator pos:start="45:10" pos:end="45:10">(</operator><specifier pos:start="45:11" pos:end="45:15">const</specifier> <name pos:start="45:17" pos:end="45:24">uint16_t</name> <operator pos:start="45:26" pos:end="45:26">*</operator><operator pos:start="45:27" pos:end="45:27">*</operator><operator pos:start="45:28" pos:end="45:28">)</operator><operator pos:start="45:29" pos:end="45:29">(</operator><operator pos:start="45:30" pos:end="45:30">&amp;</operator><name pos:start="45:31" pos:end="45:39"><name pos:start="45:31" pos:end="45:31">c</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:39">u_temp</name></name><operator pos:start="45:40" pos:end="45:40">)</operator><operator pos:start="45:41" pos:end="45:41">=</operator><name pos:start="45:42" pos:end="45:46">abuf0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:47"><expr pos:start="47:9" pos:end="47:46"><operator pos:start="47:9" pos:end="47:9">*</operator><operator pos:start="47:10" pos:end="47:10">(</operator><specifier pos:start="47:11" pos:end="47:15">const</specifier> <name pos:start="47:17" pos:end="47:24">uint16_t</name> <operator pos:start="47:26" pos:end="47:26">*</operator><operator pos:start="47:27" pos:end="47:27">*</operator><operator pos:start="47:28" pos:end="47:28">)</operator><operator pos:start="47:29" pos:end="47:29">(</operator><operator pos:start="47:30" pos:end="47:30">&amp;</operator><name pos:start="47:31" pos:end="47:39"><name pos:start="47:31" pos:end="47:31">c</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:39">v_temp</name></name><operator pos:start="47:40" pos:end="47:40">)</operator><operator pos:start="47:41" pos:end="47:41">=</operator><name pos:start="47:42" pos:end="47:46">abuf1</name></expr>;</expr_stmt>

        <asm pos:start="49:9" pos:end="92:0">__asm__ <specifier pos:start="49:17" pos:end="49:24">volatile</specifier>(

            "mov %%"REG_b", "ESP_OFFSET"(%5)        \n\t"

            "mov        %4, %%"REG_b"               \n\t"

            "push %%"REG_BP"                        \n\t"

            YSCALEYUV2RGB(%%REGBP, %5)

            "push                   %0              \n\t"

            "push                   %1              \n\t"

            "mov          "U_TEMP"(%5), %0          \n\t"

            "mov          "V_TEMP"(%5), %1          \n\t"

            YSCALEYUV2RGB_YA(%%REGBP, %5, %0, %1)

            "psraw                  $3, %%mm1       \n\t" <comment type="block" pos:start="69:59" pos:end="69:90">/* abuf0[eax] - abuf1[eax] &gt;&gt;7*/</comment>

            "psraw                  $3, %%mm7       \n\t" <comment type="block" pos:start="71:59" pos:end="71:90">/* abuf0[eax] - abuf1[eax] &gt;&gt;7*/</comment>

            "packuswb            %%mm7, %%mm1       \n\t"

            "pop                    %1              \n\t"

            "pop                    %0              \n\t"

            WRITEBGR32(%%REGb, 8280(%5), %%REGBP, %%mm2, %%mm4, %%mm5, %%mm1, %%mm0, %%mm7, %%mm3, %%mm6)

            "pop %%"REG_BP"                         \n\t"

            "mov "ESP_OFFSET"(%5), %%"REG_b"        \n\t"

            :: "c" (buf0), "d" (buf1), "S" (ubuf0), "D" (ubuf1), "m" (dest),

               "a" (&amp;c-&gt;redDither)

        );</asm>

<cpp:endif pos:start="91:1" pos:end="91:6">#<cpp:directive pos:start="91:2" pos:end="91:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="119:5">else <block pos:start="93:12" pos:end="119:5">{<block_content pos:start="95:9" pos:end="117:10">

        <asm pos:start="95:9" pos:end="117:10">__asm__ <specifier pos:start="95:17" pos:end="95:24">volatile</specifier>(

            "mov %%"REG_b", "ESP_OFFSET"(%5)        \n\t"

            "mov        %4, %%"REG_b"               \n\t"

            "push %%"REG_BP"                        \n\t"

            YSCALEYUV2RGB(%%REGBP, %5)

            "pcmpeqd %%mm7, %%mm7                   \n\t"

            WRITEBGR32(%%REGb, 8280(%5), %%REGBP, %%mm2, %%mm4, %%mm5, %%mm7, %%mm0, %%mm1, %%mm3, %%mm6)

            "pop %%"REG_BP"                         \n\t"

            "mov "ESP_OFFSET"(%5), %%"REG_b"        \n\t"

            :: "c" (buf0), "d" (buf1), "S" (ubuf0), "D" (ubuf1), "m" (dest),

               "a" (&amp;c-&gt;redDither)

        );</asm>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
