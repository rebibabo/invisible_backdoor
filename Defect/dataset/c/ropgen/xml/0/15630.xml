<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15630.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">pause_all_vcpus</name><parameter_list pos:start="1:28" pos:end="1:33">(<parameter pos:start="1:29" pos:end="1:32"><decl pos:start="1:29" pos:end="1:32"><type pos:start="1:29" pos:end="1:32"><name pos:start="1:29" pos:end="1:32">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">penv</name> <init pos:start="5:20" pos:end="5:30">= <expr pos:start="5:22" pos:end="5:30"><name pos:start="5:22" pos:end="5:30">first_cpu</name></expr></init></decl>;</decl_stmt>



    <while pos:start="9:5" pos:end="19:5">while <condition pos:start="9:11" pos:end="9:16">(<expr pos:start="9:12" pos:end="9:15"><name pos:start="9:12" pos:end="9:15">penv</name></expr>)</condition> <block pos:start="9:18" pos:end="19:5">{<block_content pos:start="11:9" pos:end="17:42">

        <expr_stmt pos:start="11:9" pos:end="11:23"><expr pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:12">penv</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:18">stop</name></name> <operator pos:start="11:20" pos:end="11:20">=</operator> <literal type="number" pos:start="11:22" pos:end="11:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:50"><expr pos:start="13:9" pos:end="13:49"><call pos:start="13:9" pos:end="13:49"><name pos:start="13:9" pos:end="13:26">qemu_thread_signal</name><argument_list pos:start="13:27" pos:end="13:49">(<argument pos:start="13:28" pos:end="13:39"><expr pos:start="13:28" pos:end="13:39"><name pos:start="13:28" pos:end="13:39"><name pos:start="13:28" pos:end="13:31">penv</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:39">thread</name></name></expr></argument>, <argument pos:start="13:42" pos:end="13:48"><expr pos:start="13:42" pos:end="13:48"><name pos:start="13:42" pos:end="13:48">SIGUSR1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:28"><expr pos:start="15:9" pos:end="15:27"><call pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:21">qemu_cpu_kick</name><argument_list pos:start="15:22" pos:end="15:27">(<argument pos:start="15:23" pos:end="15:26"><expr pos:start="15:23" pos:end="15:26"><name pos:start="15:23" pos:end="15:26">penv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:42"><expr pos:start="17:9" pos:end="17:41"><name pos:start="17:9" pos:end="17:12">penv</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <operator pos:start="17:16" pos:end="17:16">(</operator><name pos:start="17:17" pos:end="17:24">CPUState</name> <operator pos:start="17:26" pos:end="17:26">*</operator><operator pos:start="17:27" pos:end="17:27">)</operator><name pos:start="17:28" pos:end="17:41"><name pos:start="17:28" pos:end="17:31">penv</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:41">next_cpu</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <while pos:start="23:5" pos:end="37:5">while <condition pos:start="23:11" pos:end="23:31">(<expr pos:start="23:12" pos:end="23:30"><operator pos:start="23:12" pos:end="23:12">!</operator><call pos:start="23:13" pos:end="23:30"><name pos:start="23:13" pos:end="23:28">all_vcpus_paused</name><argument_list pos:start="23:29" pos:end="23:30">()</argument_list></call></expr>)</condition> <block pos:start="23:33" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:9">

        <expr_stmt pos:start="25:9" pos:end="25:71"><expr pos:start="25:9" pos:end="25:70"><call pos:start="25:9" pos:end="25:70"><name pos:start="25:9" pos:end="25:27">qemu_cond_timedwait</name><argument_list pos:start="25:28" pos:end="25:70">(<argument pos:start="25:29" pos:end="25:44"><expr pos:start="25:29" pos:end="25:44"><operator pos:start="25:29" pos:end="25:29">&amp;</operator><name pos:start="25:30" pos:end="25:44">qemu_pause_cond</name></expr></argument>, <argument pos:start="25:47" pos:end="25:64"><expr pos:start="25:47" pos:end="25:64"><operator pos:start="25:47" pos:end="25:47">&amp;</operator><name pos:start="25:48" pos:end="25:64">qemu_global_mutex</name></expr></argument>, <argument pos:start="25:67" pos:end="25:69"><expr pos:start="25:67" pos:end="25:69"><literal type="number" pos:start="25:67" pos:end="25:69">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:12">penv</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:24">first_cpu</name></expr>;</expr_stmt>

        <while pos:start="29:9" pos:end="35:9">while <condition pos:start="29:15" pos:end="29:20">(<expr pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:19">penv</name></expr>)</condition> <block pos:start="29:22" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:46">

            <expr_stmt pos:start="31:13" pos:end="31:54"><expr pos:start="31:13" pos:end="31:53"><call pos:start="31:13" pos:end="31:53"><name pos:start="31:13" pos:end="31:30">qemu_thread_signal</name><argument_list pos:start="31:31" pos:end="31:53">(<argument pos:start="31:32" pos:end="31:43"><expr pos:start="31:32" pos:end="31:43"><name pos:start="31:32" pos:end="31:43"><name pos:start="31:32" pos:end="31:35">penv</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:43">thread</name></name></expr></argument>, <argument pos:start="31:46" pos:end="31:52"><expr pos:start="31:46" pos:end="31:52"><name pos:start="31:46" pos:end="31:52">SIGUSR1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:46"><expr pos:start="33:13" pos:end="33:45"><name pos:start="33:13" pos:end="33:16">penv</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <operator pos:start="33:20" pos:end="33:20">(</operator><name pos:start="33:21" pos:end="33:28">CPUState</name> <operator pos:start="33:30" pos:end="33:30">*</operator><operator pos:start="33:31" pos:end="33:31">)</operator><name pos:start="33:32" pos:end="33:45"><name pos:start="33:32" pos:end="33:35">penv</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:45">next_cpu</name></name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
