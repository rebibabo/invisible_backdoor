<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2433.c" pos:tabs="8"><function pos:start="1:1" pos:end="197:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">ff_h264_frame_start</name><parameter_list pos:start="1:24" pos:end="1:39">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:35">H264Context</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="197:1">{<block_content pos:start="5:5" pos:end="195:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">Picture</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">pic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:25">pixel_shift</name> <init pos:start="9:27" pos:end="9:42">= <expr pos:start="9:29" pos:end="9:42"><name pos:start="9:29" pos:end="9:42"><name pos:start="9:29" pos:end="9:29">h</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:42">pixel_shift</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="21:6"><decl pos:start="11:5" pos:end="21:5"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:9">c</name><index pos:start="11:10" pos:end="11:12">[<expr pos:start="11:11" pos:end="11:11"><literal type="number" pos:start="11:11" pos:end="11:11">4</literal></expr>]</index></name> <init pos:start="11:14" pos:end="21:5">= <expr pos:start="11:16" pos:end="21:5"><block pos:start="11:16" pos:end="21:5">{

        <expr pos:start="13:9" pos:end="13:36"><literal type="number" pos:start="13:9" pos:end="13:9">1</literal><operator pos:start="13:10" pos:end="13:11">&lt;&lt;</operator><operator pos:start="13:12" pos:end="13:12">(</operator><name pos:start="13:13" pos:end="13:33"><name pos:start="13:13" pos:end="13:13">h</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:18">sps</name><operator pos:start="13:19" pos:end="13:19">.</operator><name pos:start="13:20" pos:end="13:33">bit_depth_luma</name></name><operator pos:start="13:34" pos:end="13:34">-</operator><literal type="number" pos:start="13:35" pos:end="13:35">1</literal><operator pos:start="13:36" pos:end="13:36">)</operator></expr>,

        <expr pos:start="15:9" pos:end="15:38"><literal type="number" pos:start="15:9" pos:end="15:9">1</literal><operator pos:start="15:10" pos:end="15:11">&lt;&lt;</operator><operator pos:start="15:12" pos:end="15:12">(</operator><name pos:start="15:13" pos:end="15:35"><name pos:start="15:13" pos:end="15:13">h</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:18">sps</name><operator pos:start="15:19" pos:end="15:19">.</operator><name pos:start="15:20" pos:end="15:35">bit_depth_chroma</name></name><operator pos:start="15:36" pos:end="15:36">-</operator><literal type="number" pos:start="15:37" pos:end="15:37">1</literal><operator pos:start="15:38" pos:end="15:38">)</operator></expr>,

        <expr pos:start="17:9" pos:end="17:38"><literal type="number" pos:start="17:9" pos:end="17:9">1</literal><operator pos:start="17:10" pos:end="17:11">&lt;&lt;</operator><operator pos:start="17:12" pos:end="17:12">(</operator><name pos:start="17:13" pos:end="17:35"><name pos:start="17:13" pos:end="17:13">h</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:18">sps</name><operator pos:start="17:19" pos:end="17:19">.</operator><name pos:start="17:20" pos:end="17:35">bit_depth_chroma</name></name><operator pos:start="17:36" pos:end="17:36">-</operator><literal type="number" pos:start="17:37" pos:end="17:37">1</literal><operator pos:start="17:38" pos:end="17:38">)</operator></expr>,

        <expr pos:start="19:9" pos:end="19:10"><operator pos:start="19:9" pos:end="19:9">-</operator><literal type="number" pos:start="19:10" pos:end="19:10">1</literal></expr>

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:45">(<expr pos:start="25:9" pos:end="25:44"><operator pos:start="25:9" pos:end="25:9">!</operator><call pos:start="25:10" pos:end="25:44"><name pos:start="25:10" pos:end="25:34">ff_thread_can_start_frame</name><argument_list pos:start="25:35" pos:end="25:44">(<argument pos:start="25:36" pos:end="25:43"><expr pos:start="25:36" pos:end="25:43"><name pos:start="25:36" pos:end="25:43"><name pos:start="25:36" pos:end="25:36">h</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:43">avctx</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:47" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:89"><expr pos:start="27:9" pos:end="27:88"><call pos:start="27:9" pos:end="27:88"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:88">(<argument pos:start="27:16" pos:end="27:23"><expr pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:16">h</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:23">avctx</name></name></expr></argument>, <argument pos:start="27:26" pos:end="27:37"><expr pos:start="27:26" pos:end="27:37"><name pos:start="27:26" pos:end="27:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:40" pos:end="27:87"><expr pos:start="27:40" pos:end="27:87"><literal type="string" pos:start="27:40" pos:end="27:87">"Attempt to start a frame outside SETUP state\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:34"><expr pos:start="35:5" pos:end="35:33"><call pos:start="35:5" pos:end="35:33"><name pos:start="35:5" pos:end="35:27">release_unused_pictures</name><argument_list pos:start="35:28" pos:end="35:33">(<argument pos:start="35:29" pos:end="35:29"><expr pos:start="35:29" pos:end="35:29"><name pos:start="35:29" pos:end="35:29">h</name></expr></argument>, <argument pos:start="35:32" pos:end="35:32"><expr pos:start="35:32" pos:end="35:32"><literal type="number" pos:start="35:32" pos:end="35:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:26"><expr pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:5">h</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:18">cur_pic_ptr</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:25">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:5">i</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <call pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:27">find_unused_picture</name><argument_list pos:start="41:28" pos:end="41:30">(<argument pos:start="41:29" pos:end="41:29"><expr pos:start="41:29" pos:end="41:29"><name pos:start="41:29" pos:end="41:29">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:14">(<expr pos:start="43:9" pos:end="43:13"><name pos:start="43:9" pos:end="43:9">i</name> <operator pos:start="43:11" pos:end="43:11">&lt;</operator> <literal type="number" pos:start="43:13" pos:end="43:13">0</literal></expr>)</condition> <block pos:start="43:16" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:17">

        <expr_stmt pos:start="45:9" pos:end="45:70"><expr pos:start="45:9" pos:end="45:69"><call pos:start="45:9" pos:end="45:69"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:69">(<argument pos:start="45:16" pos:end="45:23"><expr pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:16">h</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:23">avctx</name></name></expr></argument>, <argument pos:start="45:26" pos:end="45:37"><expr pos:start="45:26" pos:end="45:37"><name pos:start="45:26" pos:end="45:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:40" pos:end="45:68"><expr pos:start="45:40" pos:end="45:68"><literal type="string" pos:start="45:40" pos:end="45:68">"no frame buffer available\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><name pos:start="47:16" pos:end="47:16">i</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:21"><expr pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:7">pic</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <operator pos:start="51:11" pos:end="51:11">&amp;</operator><name pos:start="51:12" pos:end="51:20"><name pos:start="51:12" pos:end="51:12">h</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:17">DPB</name><index pos:start="51:18" pos:end="51:20">[<expr pos:start="51:19" pos:end="51:19"><name pos:start="51:19" pos:end="51:19">i</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:74"><expr pos:start="55:5" pos:end="55:73"><name pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:7">pic</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:10">f</name><operator pos:start="55:11" pos:end="55:11">.</operator><name pos:start="55:12" pos:end="55:20">reference</name></name>            <operator pos:start="55:33" pos:end="55:33">=</operator> <ternary pos:start="55:35" pos:end="55:73"><condition pos:start="55:35" pos:end="55:48"><expr pos:start="55:35" pos:end="55:46"><name pos:start="55:35" pos:end="55:46"><name pos:start="55:35" pos:end="55:35">h</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:46">droppable</name></name></expr> ?</condition><then pos:start="55:50" pos:end="55:50"> <expr pos:start="55:50" pos:end="55:50"><literal type="number" pos:start="55:50" pos:end="55:50">0</literal></expr> </then><else pos:start="55:52" pos:end="55:73">: <expr pos:start="55:54" pos:end="55:73"><name pos:start="55:54" pos:end="55:73"><name pos:start="55:54" pos:end="55:54">h</name><operator pos:start="55:55" pos:end="55:56">-&gt;</operator><name pos:start="55:57" pos:end="55:73">picture_structure</name></name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:60"><expr pos:start="57:5" pos:end="57:59"><name pos:start="57:5" pos:end="57:31"><name pos:start="57:5" pos:end="57:7">pic</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:10">f</name><operator pos:start="57:11" pos:end="57:11">.</operator><name pos:start="57:12" pos:end="57:31">coded_picture_number</name></name> <operator pos:start="57:33" pos:end="57:33">=</operator> <name pos:start="57:35" pos:end="57:57"><name pos:start="57:35" pos:end="57:35">h</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:57">coded_picture_number</name></name><operator pos:start="57:58" pos:end="57:59">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:69"><expr pos:start="59:5" pos:end="59:68"><name pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:7">pic</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:22">field_picture</name></name>          <operator pos:start="59:33" pos:end="59:33">=</operator> <name pos:start="59:35" pos:end="59:54"><name pos:start="59:35" pos:end="59:35">h</name><operator pos:start="59:36" pos:end="59:37">-&gt;</operator><name pos:start="59:38" pos:end="59:54">picture_structure</name></name> <operator pos:start="59:56" pos:end="59:57">!=</operator> <name pos:start="59:59" pos:end="59:68">PICT_FRAME</name></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="71:7">/*

     * Zero key_frame here; IDR markings per slice in frame or fields are ORed

     * in later.

     * See decode_nal_units().

     */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:25"><expr pos:start="73:5" pos:end="73:24"><name pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:7">pic</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:10">f</name><operator pos:start="73:11" pos:end="73:11">.</operator><name pos:start="73:12" pos:end="73:20">key_frame</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <literal type="number" pos:start="73:24" pos:end="73:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:25"><expr pos:start="75:5" pos:end="75:24"><name pos:start="75:5" pos:end="75:13"><name pos:start="75:5" pos:end="75:7">pic</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:13">sync</name></name>        <operator pos:start="75:22" pos:end="75:22">=</operator> <literal type="number" pos:start="75:24" pos:end="75:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:25"><expr pos:start="77:5" pos:end="77:24"><name pos:start="77:5" pos:end="77:19"><name pos:start="77:5" pos:end="77:7">pic</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:19">mmco_reset</name></name>  <operator pos:start="77:22" pos:end="77:22">=</operator> <literal type="number" pos:start="77:24" pos:end="77:24">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="83:19"><if pos:start="81:5" pos:end="83:19">if <condition pos:start="81:8" pos:end="81:42">(<expr pos:start="81:9" pos:end="81:41"><operator pos:start="81:9" pos:end="81:9">(</operator><name pos:start="81:10" pos:end="81:12">ret</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <call pos:start="81:16" pos:end="81:36"><name pos:start="81:16" pos:end="81:28">alloc_picture</name><argument_list pos:start="81:29" pos:end="81:36">(<argument pos:start="81:30" pos:end="81:30"><expr pos:start="81:30" pos:end="81:30"><name pos:start="81:30" pos:end="81:30">h</name></expr></argument>, <argument pos:start="81:33" pos:end="81:35"><expr pos:start="81:33" pos:end="81:35"><name pos:start="81:33" pos:end="81:35">pic</name></expr></argument>)</argument_list></call><operator pos:start="81:37" pos:end="81:37">)</operator> <operator pos:start="81:39" pos:end="81:39">&lt;</operator> <literal type="number" pos:start="81:41" pos:end="81:41">0</literal></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:19"><block_content pos:start="83:9" pos:end="83:19">

        <return pos:start="83:9" pos:end="83:19">return <expr pos:start="83:16" pos:end="83:18"><name pos:start="83:16" pos:end="83:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="85:5" pos:end="89:39"><if pos:start="85:5" pos:end="89:39">if<condition pos:start="85:7" pos:end="87:66">(<expr pos:start="85:8" pos:end="87:65"><operator pos:start="85:8" pos:end="85:8">!</operator><name pos:start="85:9" pos:end="85:15"><name pos:start="85:9" pos:end="85:9">h</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:15">sync</name></name> <operator pos:start="85:17" pos:end="85:18">&amp;&amp;</operator> <operator pos:start="85:20" pos:end="85:20">!</operator><name pos:start="85:21" pos:end="85:37"><name pos:start="85:21" pos:end="85:21">h</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:28">avctx</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:37">hwaccel</name></name> <operator pos:start="85:39" pos:end="85:40">&amp;&amp;</operator>

       <operator pos:start="87:8" pos:end="87:8">!</operator><operator pos:start="87:9" pos:end="87:9">(</operator><name pos:start="87:10" pos:end="87:38"><name pos:start="87:10" pos:end="87:10">h</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:17">avctx</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:24">codec</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:38">capabilities</name></name> <operator pos:start="87:40" pos:end="87:40">&amp;</operator> <name pos:start="87:42" pos:end="87:64">CODEC_CAP_HWACCEL_VDPAU</name><operator pos:start="87:65" pos:end="87:65">)</operator></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:39"><block_content pos:start="89:9" pos:end="89:39">

        <expr_stmt pos:start="89:9" pos:end="89:39"><expr pos:start="89:9" pos:end="89:38"><call pos:start="89:9" pos:end="89:38"><name pos:start="89:9" pos:end="89:26">avpriv_color_frame</name><argument_list pos:start="89:27" pos:end="89:38">(<argument pos:start="89:28" pos:end="89:34"><expr pos:start="89:28" pos:end="89:34"><operator pos:start="89:28" pos:end="89:28">&amp;</operator><name pos:start="89:29" pos:end="89:34"><name pos:start="89:29" pos:end="89:31">pic</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:34">f</name></name></expr></argument>, <argument pos:start="89:37" pos:end="89:37"><expr pos:start="89:37" pos:end="89:37"><name pos:start="89:37" pos:end="89:37">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:25"><expr pos:start="93:5" pos:end="93:24"><name pos:start="93:5" pos:end="93:18"><name pos:start="93:5" pos:end="93:5">h</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:18">cur_pic_ptr</name></name> <operator pos:start="93:20" pos:end="93:20">=</operator> <name pos:start="93:22" pos:end="93:24">pic</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:37"><expr pos:start="95:5" pos:end="95:36"><name pos:start="95:5" pos:end="95:14"><name pos:start="95:5" pos:end="95:5">h</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:14">cur_pic</name></name>     <operator pos:start="95:20" pos:end="95:20">=</operator> <operator pos:start="95:22" pos:end="95:22">*</operator><name pos:start="95:23" pos:end="95:36"><name pos:start="95:23" pos:end="95:23">h</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:36">cur_pic_ptr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:51"><expr pos:start="97:5" pos:end="97:50"><name pos:start="97:5" pos:end="97:30"><name pos:start="97:5" pos:end="97:5">h</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:14">cur_pic</name><operator pos:start="97:15" pos:end="97:15">.</operator><name pos:start="97:16" pos:end="97:16">f</name><operator pos:start="97:17" pos:end="97:17">.</operator><name pos:start="97:18" pos:end="97:30">extended_data</name></name> <operator pos:start="97:32" pos:end="97:32">=</operator> <name pos:start="97:34" pos:end="97:50"><name pos:start="97:34" pos:end="97:34">h</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:43">cur_pic</name><operator pos:start="97:44" pos:end="97:44">.</operator><name pos:start="97:45" pos:end="97:45">f</name><operator pos:start="97:46" pos:end="97:46">.</operator><name pos:start="97:47" pos:end="97:50">data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:30"><expr pos:start="101:5" pos:end="101:29"><call pos:start="101:5" pos:end="101:29"><name pos:start="101:5" pos:end="101:21">ff_er_frame_start</name><argument_list pos:start="101:22" pos:end="101:29">(<argument pos:start="101:23" pos:end="101:28"><expr pos:start="101:23" pos:end="101:28"><operator pos:start="101:23" pos:end="101:23">&amp;</operator><name pos:start="101:24" pos:end="101:28"><name pos:start="101:24" pos:end="101:24">h</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:28">er</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:41"><expr pos:start="105:5" pos:end="105:40"><call pos:start="105:5" pos:end="105:40"><name pos:start="105:5" pos:end="105:10">assert</name><argument_list pos:start="105:11" pos:end="105:40">(<argument pos:start="105:12" pos:end="105:39"><expr pos:start="105:12" pos:end="105:39"><name pos:start="105:12" pos:end="105:22"><name pos:start="105:12" pos:end="105:12">h</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:22">linesize</name></name> <operator pos:start="105:24" pos:end="105:25">&amp;&amp;</operator> <name pos:start="105:27" pos:end="105:39"><name pos:start="105:27" pos:end="105:27">h</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:39">uvlinesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="109:5" pos:end="115:5">for <control pos:start="109:9" pos:end="109:28">(<init pos:start="109:10" pos:end="109:15"><expr pos:start="109:10" pos:end="109:14"><name pos:start="109:10" pos:end="109:10">i</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <literal type="number" pos:start="109:14" pos:end="109:14">0</literal></expr>;</init> <condition pos:start="109:17" pos:end="109:23"><expr pos:start="109:17" pos:end="109:22"><name pos:start="109:17" pos:end="109:17">i</name> <operator pos:start="109:19" pos:end="109:19">&lt;</operator> <literal type="number" pos:start="109:21" pos:end="109:22">16</literal></expr>;</condition> <incr pos:start="109:25" pos:end="109:27"><expr pos:start="109:25" pos:end="109:27"><name pos:start="109:25" pos:end="109:25">i</name><operator pos:start="109:26" pos:end="109:27">++</operator></expr></incr>)</control> <block pos:start="109:30" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:137">

        <expr_stmt pos:start="111:9" pos:end="111:137"><expr pos:start="111:9" pos:end="111:136"><name pos:start="111:9" pos:end="111:26"><name pos:start="111:9" pos:end="111:9">h</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:23">block_offset</name><index pos:start="111:24" pos:end="111:26">[<expr pos:start="111:25" pos:end="111:25"><name pos:start="111:25" pos:end="111:25">i</name></expr>]</index></name>           <operator pos:start="111:38" pos:end="111:38">=</operator> <operator pos:start="111:40" pos:end="111:40">(</operator><literal type="number" pos:start="111:41" pos:end="111:41">4</literal> <operator pos:start="111:43" pos:end="111:43">*</operator> <operator pos:start="111:45" pos:end="111:45">(</operator><operator pos:start="111:46" pos:end="111:46">(</operator><name pos:start="111:47" pos:end="111:54"><name pos:start="111:47" pos:end="111:51">scan8</name><index pos:start="111:52" pos:end="111:54">[<expr pos:start="111:53" pos:end="111:53"><name pos:start="111:53" pos:end="111:53">i</name></expr>]</index></name> <operator pos:start="111:56" pos:end="111:56">-</operator> <name pos:start="111:58" pos:end="111:65"><name pos:start="111:58" pos:end="111:62">scan8</name><index pos:start="111:63" pos:end="111:65">[<expr pos:start="111:64" pos:end="111:64"><literal type="number" pos:start="111:64" pos:end="111:64">0</literal></expr>]</index></name><operator pos:start="111:66" pos:end="111:66">)</operator> <operator pos:start="111:68" pos:end="111:68">&amp;</operator> <literal type="number" pos:start="111:70" pos:end="111:70">7</literal><operator pos:start="111:71" pos:end="111:71">)</operator> <operator pos:start="111:73" pos:end="111:74">&lt;&lt;</operator> <name pos:start="111:76" pos:end="111:86">pixel_shift</name><operator pos:start="111:87" pos:end="111:87">)</operator> <operator pos:start="111:89" pos:end="111:89">+</operator> <literal type="number" pos:start="111:91" pos:end="111:91">4</literal> <operator pos:start="111:93" pos:end="111:93">*</operator> <name pos:start="111:95" pos:end="111:105"><name pos:start="111:95" pos:end="111:95">h</name><operator pos:start="111:96" pos:end="111:97">-&gt;</operator><name pos:start="111:98" pos:end="111:105">linesize</name></name> <operator pos:start="111:107" pos:end="111:107">*</operator> <operator pos:start="111:109" pos:end="111:109">(</operator><operator pos:start="111:110" pos:end="111:110">(</operator><name pos:start="111:111" pos:end="111:118"><name pos:start="111:111" pos:end="111:115">scan8</name><index pos:start="111:116" pos:end="111:118">[<expr pos:start="111:117" pos:end="111:117"><name pos:start="111:117" pos:end="111:117">i</name></expr>]</index></name> <operator pos:start="111:120" pos:end="111:120">-</operator> <name pos:start="111:122" pos:end="111:129"><name pos:start="111:122" pos:end="111:126">scan8</name><index pos:start="111:127" pos:end="111:129">[<expr pos:start="111:128" pos:end="111:128"><literal type="number" pos:start="111:128" pos:end="111:128">0</literal></expr>]</index></name><operator pos:start="111:130" pos:end="111:130">)</operator> <operator pos:start="111:132" pos:end="111:133">&gt;&gt;</operator> <literal type="number" pos:start="111:135" pos:end="111:135">3</literal><operator pos:start="111:136" pos:end="111:136">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:137"><expr pos:start="113:9" pos:end="113:136"><name pos:start="113:9" pos:end="113:31"><name pos:start="113:9" pos:end="113:9">h</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:23">block_offset</name><index pos:start="113:24" pos:end="113:31">[<expr pos:start="113:25" pos:end="113:30"><literal type="number" pos:start="113:25" pos:end="113:26">48</literal> <operator pos:start="113:28" pos:end="113:28">+</operator> <name pos:start="113:30" pos:end="113:30">i</name></expr>]</index></name>      <operator pos:start="113:38" pos:end="113:38">=</operator> <operator pos:start="113:40" pos:end="113:40">(</operator><literal type="number" pos:start="113:41" pos:end="113:41">4</literal> <operator pos:start="113:43" pos:end="113:43">*</operator> <operator pos:start="113:45" pos:end="113:45">(</operator><operator pos:start="113:46" pos:end="113:46">(</operator><name pos:start="113:47" pos:end="113:54"><name pos:start="113:47" pos:end="113:51">scan8</name><index pos:start="113:52" pos:end="113:54">[<expr pos:start="113:53" pos:end="113:53"><name pos:start="113:53" pos:end="113:53">i</name></expr>]</index></name> <operator pos:start="113:56" pos:end="113:56">-</operator> <name pos:start="113:58" pos:end="113:65"><name pos:start="113:58" pos:end="113:62">scan8</name><index pos:start="113:63" pos:end="113:65">[<expr pos:start="113:64" pos:end="113:64"><literal type="number" pos:start="113:64" pos:end="113:64">0</literal></expr>]</index></name><operator pos:start="113:66" pos:end="113:66">)</operator> <operator pos:start="113:68" pos:end="113:68">&amp;</operator> <literal type="number" pos:start="113:70" pos:end="113:70">7</literal><operator pos:start="113:71" pos:end="113:71">)</operator> <operator pos:start="113:73" pos:end="113:74">&lt;&lt;</operator> <name pos:start="113:76" pos:end="113:86">pixel_shift</name><operator pos:start="113:87" pos:end="113:87">)</operator> <operator pos:start="113:89" pos:end="113:89">+</operator> <literal type="number" pos:start="113:91" pos:end="113:91">8</literal> <operator pos:start="113:93" pos:end="113:93">*</operator> <name pos:start="113:95" pos:end="113:105"><name pos:start="113:95" pos:end="113:95">h</name><operator pos:start="113:96" pos:end="113:97">-&gt;</operator><name pos:start="113:98" pos:end="113:105">linesize</name></name> <operator pos:start="113:107" pos:end="113:107">*</operator> <operator pos:start="113:109" pos:end="113:109">(</operator><operator pos:start="113:110" pos:end="113:110">(</operator><name pos:start="113:111" pos:end="113:118"><name pos:start="113:111" pos:end="113:115">scan8</name><index pos:start="113:116" pos:end="113:118">[<expr pos:start="113:117" pos:end="113:117"><name pos:start="113:117" pos:end="113:117">i</name></expr>]</index></name> <operator pos:start="113:120" pos:end="113:120">-</operator> <name pos:start="113:122" pos:end="113:129"><name pos:start="113:122" pos:end="113:126">scan8</name><index pos:start="113:127" pos:end="113:129">[<expr pos:start="113:128" pos:end="113:128"><literal type="number" pos:start="113:128" pos:end="113:128">0</literal></expr>]</index></name><operator pos:start="113:130" pos:end="113:130">)</operator> <operator pos:start="113:132" pos:end="113:133">&gt;&gt;</operator> <literal type="number" pos:start="113:135" pos:end="113:135">3</literal><operator pos:start="113:136" pos:end="113:136">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="117:5" pos:end="127:5">for <control pos:start="117:9" pos:end="117:28">(<init pos:start="117:10" pos:end="117:15"><expr pos:start="117:10" pos:end="117:14"><name pos:start="117:10" pos:end="117:10">i</name> <operator pos:start="117:12" pos:end="117:12">=</operator> <literal type="number" pos:start="117:14" pos:end="117:14">0</literal></expr>;</init> <condition pos:start="117:17" pos:end="117:23"><expr pos:start="117:17" pos:end="117:22"><name pos:start="117:17" pos:end="117:17">i</name> <operator pos:start="117:19" pos:end="117:19">&lt;</operator> <literal type="number" pos:start="117:21" pos:end="117:22">16</literal></expr>;</condition> <incr pos:start="117:25" pos:end="117:27"><expr pos:start="117:25" pos:end="117:27"><name pos:start="117:25" pos:end="117:25">i</name><operator pos:start="117:26" pos:end="117:27">++</operator></expr></incr>)</control> <block pos:start="117:30" pos:end="127:5">{<block_content pos:start="119:9" pos:end="125:139">

        <expr_stmt pos:start="119:9" pos:end="121:139"><expr pos:start="119:9" pos:end="121:138"><name pos:start="119:9" pos:end="119:31"><name pos:start="119:9" pos:end="119:9">h</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:23">block_offset</name><index pos:start="119:24" pos:end="119:31">[<expr pos:start="119:25" pos:end="119:30"><literal type="number" pos:start="119:25" pos:end="119:26">16</literal> <operator pos:start="119:28" pos:end="119:28">+</operator> <name pos:start="119:30" pos:end="119:30">i</name></expr>]</index></name>      <operator pos:start="119:38" pos:end="119:38">=</operator>

        <name pos:start="121:9" pos:end="121:31"><name pos:start="121:9" pos:end="121:9">h</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:23">block_offset</name><index pos:start="121:24" pos:end="121:31">[<expr pos:start="121:25" pos:end="121:30"><literal type="number" pos:start="121:25" pos:end="121:28">32</literal> <operator pos:start="121:28" pos:end="121:28">+</operator> <name pos:start="121:30" pos:end="121:30">i</name></expr>]</index></name>      <operator pos:start="121:38" pos:end="121:38">=</operator> <operator pos:start="121:40" pos:end="121:40">(</operator><literal type="number" pos:start="121:41" pos:end="121:41">4</literal> <operator pos:start="121:43" pos:end="121:43">*</operator> <operator pos:start="121:45" pos:end="121:45">(</operator><operator pos:start="121:46" pos:end="121:46">(</operator><name pos:start="121:47" pos:end="121:54"><name pos:start="121:47" pos:end="121:51">scan8</name><index pos:start="121:52" pos:end="121:54">[<expr pos:start="121:53" pos:end="121:53"><name pos:start="121:53" pos:end="121:53">i</name></expr>]</index></name> <operator pos:start="121:56" pos:end="121:56">-</operator> <name pos:start="121:58" pos:end="121:65"><name pos:start="121:58" pos:end="121:62">scan8</name><index pos:start="121:63" pos:end="121:65">[<expr pos:start="121:64" pos:end="121:64"><literal type="number" pos:start="121:64" pos:end="121:64">0</literal></expr>]</index></name><operator pos:start="121:66" pos:end="121:66">)</operator> <operator pos:start="121:68" pos:end="121:68">&amp;</operator> <literal type="number" pos:start="121:70" pos:end="121:70">7</literal><operator pos:start="121:71" pos:end="121:71">)</operator> <operator pos:start="121:73" pos:end="121:74">&lt;&lt;</operator> <name pos:start="121:76" pos:end="121:86">pixel_shift</name><operator pos:start="121:87" pos:end="121:87">)</operator> <operator pos:start="121:89" pos:end="121:89">+</operator> <literal type="number" pos:start="121:91" pos:end="121:91">4</literal> <operator pos:start="121:93" pos:end="121:93">*</operator> <name pos:start="121:95" pos:end="121:107"><name pos:start="121:95" pos:end="121:95">h</name><operator pos:start="121:96" pos:end="121:97">-&gt;</operator><name pos:start="121:98" pos:end="121:107">uvlinesize</name></name> <operator pos:start="121:109" pos:end="121:109">*</operator> <operator pos:start="121:111" pos:end="121:111">(</operator><operator pos:start="121:112" pos:end="121:112">(</operator><name pos:start="121:113" pos:end="121:120"><name pos:start="121:113" pos:end="121:117">scan8</name><index pos:start="121:118" pos:end="121:120">[<expr pos:start="121:119" pos:end="121:119"><name pos:start="121:119" pos:end="121:119">i</name></expr>]</index></name> <operator pos:start="121:122" pos:end="121:122">-</operator> <name pos:start="121:124" pos:end="121:131"><name pos:start="121:124" pos:end="121:128">scan8</name><index pos:start="121:129" pos:end="121:131">[<expr pos:start="121:130" pos:end="121:130"><literal type="number" pos:start="121:130" pos:end="121:130">0</literal></expr>]</index></name><operator pos:start="121:132" pos:end="121:132">)</operator> <operator pos:start="121:134" pos:end="121:135">&gt;&gt;</operator> <literal type="number" pos:start="121:137" pos:end="121:137">3</literal><operator pos:start="121:138" pos:end="121:138">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="125:139"><expr pos:start="123:9" pos:end="125:138"><name pos:start="123:9" pos:end="123:36"><name pos:start="123:9" pos:end="123:9">h</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:23">block_offset</name><index pos:start="123:24" pos:end="123:36">[<expr pos:start="123:25" pos:end="123:35"><literal type="number" pos:start="123:25" pos:end="123:28">48</literal> <operator pos:start="123:28" pos:end="123:28">+</operator> <literal type="number" pos:start="123:30" pos:end="123:33">16</literal> <operator pos:start="123:33" pos:end="123:33">+</operator> <name pos:start="123:35" pos:end="123:35">i</name></expr>]</index></name> <operator pos:start="123:38" pos:end="123:38">=</operator>

        <name pos:start="125:9" pos:end="125:36"><name pos:start="125:9" pos:end="125:9">h</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:23">block_offset</name><index pos:start="125:24" pos:end="125:36">[<expr pos:start="125:25" pos:end="125:35"><literal type="number" pos:start="125:25" pos:end="125:28">48</literal> <operator pos:start="125:28" pos:end="125:28">+</operator> <literal type="number" pos:start="125:30" pos:end="125:33">32</literal> <operator pos:start="125:33" pos:end="125:33">+</operator> <name pos:start="125:35" pos:end="125:35">i</name></expr>]</index></name> <operator pos:start="125:38" pos:end="125:38">=</operator> <operator pos:start="125:40" pos:end="125:40">(</operator><literal type="number" pos:start="125:41" pos:end="125:41">4</literal> <operator pos:start="125:43" pos:end="125:43">*</operator> <operator pos:start="125:45" pos:end="125:45">(</operator><operator pos:start="125:46" pos:end="125:46">(</operator><name pos:start="125:47" pos:end="125:54"><name pos:start="125:47" pos:end="125:51">scan8</name><index pos:start="125:52" pos:end="125:54">[<expr pos:start="125:53" pos:end="125:53"><name pos:start="125:53" pos:end="125:53">i</name></expr>]</index></name> <operator pos:start="125:56" pos:end="125:56">-</operator> <name pos:start="125:58" pos:end="125:65"><name pos:start="125:58" pos:end="125:62">scan8</name><index pos:start="125:63" pos:end="125:65">[<expr pos:start="125:64" pos:end="125:64"><literal type="number" pos:start="125:64" pos:end="125:64">0</literal></expr>]</index></name><operator pos:start="125:66" pos:end="125:66">)</operator> <operator pos:start="125:68" pos:end="125:68">&amp;</operator> <literal type="number" pos:start="125:70" pos:end="125:70">7</literal><operator pos:start="125:71" pos:end="125:71">)</operator> <operator pos:start="125:73" pos:end="125:74">&lt;&lt;</operator> <name pos:start="125:76" pos:end="125:86">pixel_shift</name><operator pos:start="125:87" pos:end="125:87">)</operator> <operator pos:start="125:89" pos:end="125:89">+</operator> <literal type="number" pos:start="125:91" pos:end="125:91">8</literal> <operator pos:start="125:93" pos:end="125:93">*</operator> <name pos:start="125:95" pos:end="125:107"><name pos:start="125:95" pos:end="125:95">h</name><operator pos:start="125:96" pos:end="125:97">-&gt;</operator><name pos:start="125:98" pos:end="125:107">uvlinesize</name></name> <operator pos:start="125:109" pos:end="125:109">*</operator> <operator pos:start="125:111" pos:end="125:111">(</operator><operator pos:start="125:112" pos:end="125:112">(</operator><name pos:start="125:113" pos:end="125:120"><name pos:start="125:113" pos:end="125:117">scan8</name><index pos:start="125:118" pos:end="125:120">[<expr pos:start="125:119" pos:end="125:119"><name pos:start="125:119" pos:end="125:119">i</name></expr>]</index></name> <operator pos:start="125:122" pos:end="125:122">-</operator> <name pos:start="125:124" pos:end="125:131"><name pos:start="125:124" pos:end="125:128">scan8</name><index pos:start="125:129" pos:end="125:131">[<expr pos:start="125:130" pos:end="125:130"><literal type="number" pos:start="125:130" pos:end="125:130">0</literal></expr>]</index></name><operator pos:start="125:132" pos:end="125:132">)</operator> <operator pos:start="125:134" pos:end="125:135">&gt;&gt;</operator> <literal type="number" pos:start="125:137" pos:end="125:137">3</literal><operator pos:start="125:138" pos:end="125:138">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="131:5" pos:end="133:64">/* can't be in alloc_tables because linesize isn't known there.

     * FIXME: redo bipred weight to not require extra buffer? */</comment>

    <for pos:start="135:5" pos:end="145:9">for <control pos:start="135:9" pos:end="135:48">(<init pos:start="135:10" pos:end="135:15"><expr pos:start="135:10" pos:end="135:14"><name pos:start="135:10" pos:end="135:10">i</name> <operator pos:start="135:12" pos:end="135:12">=</operator> <literal type="number" pos:start="135:14" pos:end="135:14">0</literal></expr>;</init> <condition pos:start="135:17" pos:end="135:43"><expr pos:start="135:17" pos:end="135:42"><name pos:start="135:17" pos:end="135:17">i</name> <operator pos:start="135:19" pos:end="135:19">&lt;</operator> <name pos:start="135:21" pos:end="135:42"><name pos:start="135:21" pos:end="135:21">h</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:42">slice_context_count</name></name></expr>;</condition> <incr pos:start="135:45" pos:end="135:47"><expr pos:start="135:45" pos:end="135:47"><name pos:start="135:45" pos:end="135:45">i</name><operator pos:start="135:46" pos:end="135:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="137:9" pos:end="145:9"><block_content pos:start="137:9" pos:end="145:9">

        <if_stmt pos:start="137:9" pos:end="145:9"><if pos:start="137:9" pos:end="145:9">if <condition pos:start="137:12" pos:end="137:33">(<expr pos:start="137:13" pos:end="137:32"><name pos:start="137:13" pos:end="137:32"><name pos:start="137:13" pos:end="137:13">h</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:29">thread_context</name><index pos:start="137:30" pos:end="137:32">[<expr pos:start="137:31" pos:end="137:31"><name pos:start="137:31" pos:end="137:31">i</name></expr>]</index></name></expr>)</condition> <block pos:start="137:35" pos:end="145:9">{<block_content pos:start="139:13" pos:end="143:27">

            <expr_stmt pos:start="139:13" pos:end="139:75"><expr pos:start="139:13" pos:end="139:74"><name pos:start="139:13" pos:end="139:15">ret</name> <operator pos:start="139:17" pos:end="139:17">=</operator> <call pos:start="139:19" pos:end="139:74"><name pos:start="139:19" pos:end="139:39">alloc_scratch_buffers</name><argument_list pos:start="139:40" pos:end="139:74">(<argument pos:start="139:41" pos:end="139:60"><expr pos:start="139:41" pos:end="139:60"><name pos:start="139:41" pos:end="139:60"><name pos:start="139:41" pos:end="139:41">h</name><operator pos:start="139:42" pos:end="139:43">-&gt;</operator><name pos:start="139:44" pos:end="139:57">thread_context</name><index pos:start="139:58" pos:end="139:60">[<expr pos:start="139:59" pos:end="139:59"><name pos:start="139:59" pos:end="139:59">i</name></expr>]</index></name></expr></argument>, <argument pos:start="139:63" pos:end="139:73"><expr pos:start="139:63" pos:end="139:73"><name pos:start="139:63" pos:end="139:73"><name pos:start="139:63" pos:end="139:63">h</name><operator pos:start="139:64" pos:end="139:65">-&gt;</operator><name pos:start="139:66" pos:end="139:73">linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="141:13" pos:end="143:27"><if pos:start="141:13" pos:end="143:27">if <condition pos:start="141:16" pos:end="141:24">(<expr pos:start="141:17" pos:end="141:23"><name pos:start="141:17" pos:end="141:19">ret</name> <operator pos:start="141:21" pos:end="141:21">&lt;</operator> <literal type="number" pos:start="141:23" pos:end="141:23">0</literal></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="143:27"><block_content pos:start="143:17" pos:end="143:27">

                <return pos:start="143:17" pos:end="143:27">return <expr pos:start="143:24" pos:end="143:26"><name pos:start="143:24" pos:end="143:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></for>



    <comment type="block" pos:start="149:5" pos:end="151:45">/* Some macroblocks can be accessed before they're available in case

     * of lost slices, MBAFF or threading. */</comment>

    <expr_stmt pos:start="153:5" pos:end="155:72"><expr pos:start="153:5" pos:end="155:71"><call pos:start="153:5" pos:end="155:71"><name pos:start="153:5" pos:end="153:10">memset</name><argument_list pos:start="153:11" pos:end="155:71">(<argument pos:start="153:12" pos:end="153:25"><expr pos:start="153:12" pos:end="153:25"><name pos:start="153:12" pos:end="153:25"><name pos:start="153:12" pos:end="153:12">h</name><operator pos:start="153:13" pos:end="153:14">-&gt;</operator><name pos:start="153:15" pos:end="153:25">slice_table</name></name></expr></argument>, <argument pos:start="153:28" pos:end="153:29"><expr pos:start="153:28" pos:end="153:29"><operator pos:start="153:28" pos:end="153:28">-</operator><literal type="number" pos:start="153:29" pos:end="153:29">1</literal></expr></argument>,

           <argument pos:start="155:12" pos:end="155:70"><expr pos:start="155:12" pos:end="155:70"><operator pos:start="155:12" pos:end="155:12">(</operator><name pos:start="155:13" pos:end="155:24"><name pos:start="155:13" pos:end="155:13">h</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:24">mb_height</name></name> <operator pos:start="155:26" pos:end="155:26">*</operator> <name pos:start="155:28" pos:end="155:39"><name pos:start="155:28" pos:end="155:28">h</name><operator pos:start="155:29" pos:end="155:30">-&gt;</operator><name pos:start="155:31" pos:end="155:39">mb_stride</name></name> <operator pos:start="155:41" pos:end="155:41">-</operator> <literal type="number" pos:start="155:43" pos:end="155:43">1</literal><operator pos:start="155:44" pos:end="155:44">)</operator> <operator pos:start="155:46" pos:end="155:46">*</operator> <sizeof pos:start="155:48" pos:end="155:70">sizeof<argument_list pos:start="155:54" pos:end="155:70">(<argument pos:start="155:55" pos:end="155:69"><expr pos:start="155:55" pos:end="155:69"><operator pos:start="155:55" pos:end="155:55">*</operator><name pos:start="155:56" pos:end="155:69"><name pos:start="155:56" pos:end="155:56">h</name><operator pos:start="155:57" pos:end="155:58">-&gt;</operator><name pos:start="155:59" pos:end="155:69">slice_table</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="159:5" pos:end="159:66">// s-&gt;decode = (h-&gt;flags &amp; CODEC_FLAG_PSNR) || !s-&gt;encoding ||</comment>

    <comment type="line" pos:start="161:5" pos:end="161:74">//             h-&gt;cur_pic.f.reference /* || h-&gt;contains_intra */ || 1;</comment>



    <comment type="block" pos:start="165:5" pos:end="175:53">/* We mark the current picture as non-reference after allocating it, so

     * that if we break out due to an error it can be released automatically

     * in the next ff_MPV_frame_start().

     * SVQ3 as well as most other codecs have only last/next/current and thus

     * get released even with set reference, besides SVQ3 and others do not

     * mark frames as reference later "naturally". */</comment>

    <if_stmt pos:start="177:5" pos:end="179:40"><if pos:start="177:5" pos:end="179:40">if <condition pos:start="177:8" pos:end="177:47">(<expr pos:start="177:9" pos:end="177:46"><name pos:start="177:9" pos:end="177:26"><name pos:start="177:9" pos:end="177:9">h</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:16">avctx</name><operator pos:start="177:17" pos:end="177:18">-&gt;</operator><name pos:start="177:19" pos:end="177:26">codec_id</name></name> <operator pos:start="177:28" pos:end="177:29">!=</operator> <name pos:start="177:31" pos:end="177:46">AV_CODEC_ID_SVQ3</name></expr>)</condition><block type="pseudo" pos:start="179:9" pos:end="179:40"><block_content pos:start="179:9" pos:end="179:40">

        <expr_stmt pos:start="179:9" pos:end="179:40"><expr pos:start="179:9" pos:end="179:39"><name pos:start="179:9" pos:end="179:35"><name pos:start="179:9" pos:end="179:9">h</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:22">cur_pic_ptr</name><operator pos:start="179:23" pos:end="179:24">-&gt;</operator><name pos:start="179:25" pos:end="179:25">f</name><operator pos:start="179:26" pos:end="179:26">.</operator><name pos:start="179:27" pos:end="179:35">reference</name></name> <operator pos:start="179:37" pos:end="179:37">=</operator> <literal type="number" pos:start="179:39" pos:end="179:39">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:74"><expr pos:start="183:5" pos:end="183:73"><name pos:start="183:5" pos:end="183:32"><name pos:start="183:5" pos:end="183:5">h</name><operator pos:start="183:6" pos:end="183:7">-&gt;</operator><name pos:start="183:8" pos:end="183:18">cur_pic_ptr</name><operator pos:start="183:19" pos:end="183:20">-&gt;</operator><name pos:start="183:21" pos:end="183:29">field_poc</name><index pos:start="183:30" pos:end="183:32">[<expr pos:start="183:31" pos:end="183:31"><literal type="number" pos:start="183:31" pos:end="183:31">0</literal></expr>]</index></name> <operator pos:start="183:34" pos:end="183:34">=</operator> <name pos:start="183:36" pos:end="183:63"><name pos:start="183:36" pos:end="183:36">h</name><operator pos:start="183:37" pos:end="183:38">-&gt;</operator><name pos:start="183:39" pos:end="183:49">cur_pic_ptr</name><operator pos:start="183:50" pos:end="183:51">-&gt;</operator><name pos:start="183:52" pos:end="183:60">field_poc</name><index pos:start="183:61" pos:end="183:63">[<expr pos:start="183:62" pos:end="183:62"><literal type="number" pos:start="183:62" pos:end="183:62">1</literal></expr>]</index></name> <operator pos:start="183:65" pos:end="183:65">=</operator> <name pos:start="183:67" pos:end="183:73">INT_MAX</name></expr>;</expr_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:30"><expr pos:start="187:5" pos:end="187:29"><name pos:start="187:5" pos:end="187:22"><name pos:start="187:5" pos:end="187:5">h</name><operator pos:start="187:6" pos:end="187:7">-&gt;</operator><name pos:start="187:8" pos:end="187:22">next_output_pic</name></name> <operator pos:start="187:24" pos:end="187:24">=</operator> <name pos:start="187:26" pos:end="187:29">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:42"><expr pos:start="191:5" pos:end="191:41"><call pos:start="191:5" pos:end="191:41"><name pos:start="191:5" pos:end="191:10">assert</name><argument_list pos:start="191:11" pos:end="191:41">(<argument pos:start="191:12" pos:end="191:40"><expr pos:start="191:12" pos:end="191:40"><name pos:start="191:12" pos:end="191:35"><name pos:start="191:12" pos:end="191:12">h</name><operator pos:start="191:13" pos:end="191:14">-&gt;</operator><name pos:start="191:15" pos:end="191:25">cur_pic_ptr</name><operator pos:start="191:26" pos:end="191:27">-&gt;</operator><name pos:start="191:28" pos:end="191:35">long_ref</name></name> <operator pos:start="191:37" pos:end="191:38">==</operator> <literal type="number" pos:start="191:40" pos:end="191:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="195:5" pos:end="195:13">return <expr pos:start="195:12" pos:end="195:12"><literal type="number" pos:start="195:12" pos:end="195:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
