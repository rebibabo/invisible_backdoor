<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8393.c" pos:tabs="8"><function pos:start="1:1" pos:end="517:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">cpu_ppc_handle_mmu_fault</name> <parameter_list pos:start="1:30" pos:end="3:58">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:38">CPUState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">env</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:65"><decl pos:start="1:46" pos:end="1:65"><type pos:start="1:46" pos:end="1:65"><name pos:start="1:46" pos:end="1:57">target_ulong</name></type> <name pos:start="1:59" pos:end="1:65">address</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:73"><decl pos:start="1:68" pos:end="1:73"><type pos:start="1:68" pos:end="1:73"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:73">rw</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:41"><decl pos:start="3:31" pos:end="3:41"><type pos:start="3:31" pos:end="3:41"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:41">mmu_idx</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:57"><decl pos:start="3:44" pos:end="3:57"><type pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:57">is_softmmu</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="517:1">{<block_content pos:start="7:5" pos:end="515:15">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">mmu_ctx_t</name></type> <name pos:start="7:15" pos:end="7:17">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">access_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="29:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:10">rw</name> <operator pos:start="15:12" pos:end="15:13">==</operator> <literal type="number" pos:start="15:15" pos:end="15:15">2</literal></expr>)</condition> <block pos:start="15:18" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:34">

        <comment type="block" pos:start="17:9" pos:end="17:25">/* code access */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:15"><expr pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:10">rw</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:19">access_type</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:33">ACCESS_CODE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="29:5">else <block pos:start="23:12" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:39">

        <comment type="block" pos:start="25:9" pos:end="25:25">/* data access */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:39"><expr pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:19">access_type</name> <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:38"><name pos:start="27:23" pos:end="27:25">env</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:38">access_type</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:68"><expr pos:start="31:5" pos:end="31:67"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:67"><name pos:start="31:11" pos:end="31:30">get_physical_address</name><argument_list pos:start="31:31" pos:end="31:67">(<argument pos:start="31:32" pos:end="31:34"><expr pos:start="31:32" pos:end="31:34"><name pos:start="31:32" pos:end="31:34">env</name></expr></argument>, <argument pos:start="31:37" pos:end="31:40"><expr pos:start="31:37" pos:end="31:40"><operator pos:start="31:37" pos:end="31:37">&amp;</operator><name pos:start="31:38" pos:end="31:40">ctx</name></expr></argument>, <argument pos:start="31:43" pos:end="31:49"><expr pos:start="31:43" pos:end="31:49"><name pos:start="31:43" pos:end="31:49">address</name></expr></argument>, <argument pos:start="31:52" pos:end="31:53"><expr pos:start="31:52" pos:end="31:53"><name pos:start="31:52" pos:end="31:53">rw</name></expr></argument>, <argument pos:start="31:56" pos:end="31:66"><expr pos:start="31:56" pos:end="31:66"><name pos:start="31:56" pos:end="31:66">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="511:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:17">(<expr pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:14">==</operator> <literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>)</condition> <block pos:start="33:19" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:53">

        <expr_stmt pos:start="35:9" pos:end="39:53"><expr pos:start="35:9" pos:end="39:52"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="39:52"><name pos:start="35:15" pos:end="35:31">tlb_set_page_exec</name><argument_list pos:start="35:32" pos:end="39:52">(<argument pos:start="35:33" pos:end="35:35"><expr pos:start="35:33" pos:end="35:35"><name pos:start="35:33" pos:end="35:35">env</name></expr></argument>, <argument pos:start="35:38" pos:end="35:63"><expr pos:start="35:38" pos:end="35:63"><name pos:start="35:38" pos:end="35:44">address</name> <operator pos:start="35:46" pos:end="35:46">&amp;</operator> <name pos:start="35:48" pos:end="35:63">TARGET_PAGE_MASK</name></expr></argument>,

                                <argument pos:start="37:33" pos:end="37:60"><expr pos:start="37:33" pos:end="37:60"><name pos:start="37:33" pos:end="37:41"><name pos:start="37:33" pos:end="37:35">ctx</name><operator pos:start="37:36" pos:end="37:36">.</operator><name pos:start="37:37" pos:end="37:41">raddr</name></name> <operator pos:start="37:43" pos:end="37:43">&amp;</operator> <name pos:start="37:45" pos:end="37:60">TARGET_PAGE_MASK</name></expr></argument>, <argument pos:start="37:63" pos:end="37:70"><expr pos:start="37:63" pos:end="37:70"><name pos:start="37:63" pos:end="37:70"><name pos:start="37:63" pos:end="37:65">ctx</name><operator pos:start="37:66" pos:end="37:66">.</operator><name pos:start="37:67" pos:end="37:70">prot</name></name></expr></argument>,

                                <argument pos:start="39:33" pos:end="39:39"><expr pos:start="39:33" pos:end="39:39"><name pos:start="39:33" pos:end="39:39">mmu_idx</name></expr></argument>, <argument pos:start="39:42" pos:end="39:51"><expr pos:start="39:42" pos:end="39:51"><name pos:start="39:42" pos:end="39:51">is_softmmu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="41:7" pos:end="511:5">else if <condition pos:start="41:15" pos:end="41:23">(<expr pos:start="41:16" pos:end="41:22"><name pos:start="41:16" pos:end="41:18">ret</name> <operator pos:start="41:20" pos:end="41:20">&lt;</operator> <literal type="number" pos:start="41:22" pos:end="41:22">0</literal></expr>)</condition> <block pos:start="41:25" pos:end="511:5">{<block_content pos:start="43:9" pos:end="509:16">

        <expr_stmt pos:start="43:9" pos:end="43:27"><expr pos:start="43:9" pos:end="43:26"><call pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:21">LOG_MMU_STATE</name><argument_list pos:start="43:22" pos:end="43:26">(<argument pos:start="43:23" pos:end="43:25"><expr pos:start="43:23" pos:end="43:25"><name pos:start="43:23" pos:end="43:25">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="508:0"><if pos:start="45:9" pos:end="207:9">if <condition pos:start="45:12" pos:end="45:39">(<expr pos:start="45:13" pos:end="45:38"><name pos:start="45:13" pos:end="45:23">access_type</name> <operator pos:start="45:25" pos:end="45:26">==</operator> <name pos:start="45:28" pos:end="45:38">ACCESS_CODE</name></expr>)</condition> <block pos:start="45:41" pos:end="207:9">{<block_content pos:start="47:13" pos:end="205:13">

            <switch pos:start="47:13" pos:end="205:13">switch <condition pos:start="47:20" pos:end="47:24">(<expr pos:start="47:21" pos:end="47:23"><name pos:start="47:21" pos:end="47:23">ret</name></expr>)</condition> <block pos:start="47:26" pos:end="205:13">{<block_content pos:start="49:13" pos:end="204:0">

            <case pos:start="49:13" pos:end="49:20">case <expr pos:start="49:18" pos:end="49:19"><operator pos:start="49:18" pos:end="49:18">-</operator><literal type="number" pos:start="49:19" pos:end="49:19">1</literal></expr>:</case>

                <comment type="block" pos:start="51:17" pos:end="51:54">/* No matches in page tables or TLB */</comment>

                <switch pos:start="53:17" pos:end="143:17">switch <condition pos:start="53:24" pos:end="53:39">(<expr pos:start="53:25" pos:end="53:38"><name pos:start="53:25" pos:end="53:38"><name pos:start="53:25" pos:end="53:27">env</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:38">mmu_model</name></name></expr>)</condition> <block pos:start="53:41" pos:end="143:17">{<block_content pos:start="55:17" pos:end="141:30">

                <case pos:start="55:17" pos:end="55:42">case <expr pos:start="55:22" pos:end="55:41"><name pos:start="55:22" pos:end="55:41">POWERPC_MMU_SOFT_6xx</name></expr>:</case>

                    <expr_stmt pos:start="57:21" pos:end="57:62"><expr pos:start="57:21" pos:end="57:61"><name pos:start="57:21" pos:end="57:40"><name pos:start="57:21" pos:end="57:23">env</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:40">exception_index</name></name> <operator pos:start="57:42" pos:end="57:42">=</operator> <name pos:start="57:44" pos:end="57:61">POWERPC_EXCP_IFTLB</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:46"><expr pos:start="59:21" pos:end="59:45"><name pos:start="59:21" pos:end="59:35"><name pos:start="59:21" pos:end="59:23">env</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:35">error_code</name></name> <operator pos:start="59:37" pos:end="59:37">=</operator> <literal type="number" pos:start="59:39" pos:end="59:39">1</literal> <operator pos:start="59:41" pos:end="59:42">&lt;&lt;</operator> <literal type="number" pos:start="59:44" pos:end="59:45">18</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="61:21" pos:end="61:50"><expr pos:start="61:21" pos:end="61:49"><name pos:start="61:21" pos:end="61:39"><name pos:start="61:21" pos:end="61:23">env</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:28">spr</name><index pos:start="61:29" pos:end="61:39">[<expr pos:start="61:30" pos:end="61:38"><name pos:start="61:30" pos:end="61:38">SPR_IMISS</name></expr>]</index></name> <operator pos:start="61:41" pos:end="61:41">=</operator> <name pos:start="61:43" pos:end="61:49">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="63:21" pos:end="63:63"><expr pos:start="63:21" pos:end="63:62"><name pos:start="63:21" pos:end="63:38"><name pos:start="63:21" pos:end="63:23">env</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:28">spr</name><index pos:start="63:29" pos:end="63:38">[<expr pos:start="63:30" pos:end="63:37"><name pos:start="63:30" pos:end="63:37">SPR_ICMP</name></expr>]</index></name> <operator pos:start="63:40" pos:end="63:40">=</operator> <literal type="number" pos:start="63:42" pos:end="63:51">0x80000000</literal> <operator pos:start="63:53" pos:end="63:53">|</operator> <name pos:start="63:55" pos:end="63:62"><name pos:start="63:55" pos:end="63:57">ctx</name><operator pos:start="63:58" pos:end="63:58">.</operator><name pos:start="63:59" pos:end="63:62">ptem</name></name></expr>;</expr_stmt>

                    <goto pos:start="65:21" pos:end="65:34">goto <name pos:start="65:26" pos:end="65:33">tlb_miss</name>;</goto>

                <case pos:start="67:17" pos:end="67:43">case <expr pos:start="67:22" pos:end="67:42"><name pos:start="67:22" pos:end="67:42">POWERPC_MMU_SOFT_74xx</name></expr>:</case>

                    <expr_stmt pos:start="69:21" pos:end="69:62"><expr pos:start="69:21" pos:end="69:61"><name pos:start="69:21" pos:end="69:40"><name pos:start="69:21" pos:end="69:23">env</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:40">exception_index</name></name> <operator pos:start="69:42" pos:end="69:42">=</operator> <name pos:start="69:44" pos:end="69:61">POWERPC_EXCP_IFTLB</name></expr>;</expr_stmt>

                    <goto pos:start="71:21" pos:end="71:39">goto <name pos:start="71:26" pos:end="71:38">tlb_miss_74xx</name>;</goto>

                <case pos:start="73:17" pos:end="73:42">case <expr pos:start="73:22" pos:end="73:41"><name pos:start="73:22" pos:end="73:41">POWERPC_MMU_SOFT_4xx</name></expr>:</case>

                <case pos:start="75:17" pos:end="75:44">case <expr pos:start="75:22" pos:end="75:43"><name pos:start="75:22" pos:end="75:43">POWERPC_MMU_SOFT_4xx_Z</name></expr>:</case>

                    <expr_stmt pos:start="77:21" pos:end="77:61"><expr pos:start="77:21" pos:end="77:60"><name pos:start="77:21" pos:end="77:40"><name pos:start="77:21" pos:end="77:23">env</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:40">exception_index</name></name> <operator pos:start="77:42" pos:end="77:42">=</operator> <name pos:start="77:44" pos:end="77:60">POWERPC_EXCP_ITLB</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="79:21" pos:end="79:40"><expr pos:start="79:21" pos:end="79:39"><name pos:start="79:21" pos:end="79:35"><name pos:start="79:21" pos:end="79:23">env</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:35">error_code</name></name> <operator pos:start="79:37" pos:end="79:37">=</operator> <literal type="number" pos:start="79:39" pos:end="79:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:53"><expr pos:start="81:21" pos:end="81:52"><name pos:start="81:21" pos:end="81:42"><name pos:start="81:21" pos:end="81:23">env</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:28">spr</name><index pos:start="81:29" pos:end="81:42">[<expr pos:start="81:30" pos:end="81:41"><name pos:start="81:30" pos:end="81:41">SPR_40x_DEAR</name></expr>]</index></name> <operator pos:start="81:44" pos:end="81:44">=</operator> <name pos:start="81:46" pos:end="81:52">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:55"><expr pos:start="83:21" pos:end="83:54"><name pos:start="83:21" pos:end="83:41"><name pos:start="83:21" pos:end="83:23">env</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:28">spr</name><index pos:start="83:29" pos:end="83:41">[<expr pos:start="83:30" pos:end="83:40"><name pos:start="83:30" pos:end="83:40">SPR_40x_ESR</name></expr>]</index></name> <operator pos:start="83:43" pos:end="83:43">=</operator> <literal type="number" pos:start="83:45" pos:end="83:54">0x00000000</literal></expr>;</expr_stmt>

                    <break pos:start="85:21" pos:end="85:26">break;</break>

                <case pos:start="87:17" pos:end="87:37">case <expr pos:start="87:22" pos:end="87:36"><name pos:start="87:22" pos:end="87:36">POWERPC_MMU_32B</name></expr>:</case>

                <case pos:start="89:17" pos:end="92:0">case <expr pos:start="89:22" pos:end="89:36"><name pos:start="89:22" pos:end="89:36">POWERPC_MMU_601</name></expr>:</case>

<cpp:if pos:start="91:1" pos:end="91:25">#<cpp:directive pos:start="91:2" pos:end="91:3">if</cpp:directive> <expr pos:start="91:5" pos:end="91:25"><call pos:start="91:5" pos:end="91:25"><name pos:start="91:5" pos:end="91:11">defined</name><argument_list pos:start="91:12" pos:end="91:25">(<argument pos:start="91:13" pos:end="91:24"><expr pos:start="91:13" pos:end="91:24"><name pos:start="91:13" pos:end="91:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <case pos:start="93:17" pos:end="93:37">case <expr pos:start="93:22" pos:end="93:36"><name pos:start="93:22" pos:end="93:36">POWERPC_MMU_620</name></expr>:</case>

                <case pos:start="95:17" pos:end="98:0">case <expr pos:start="95:22" pos:end="95:36"><name pos:start="95:22" pos:end="95:36">POWERPC_MMU_64B</name></expr>:</case>

<cpp:endif pos:start="97:1" pos:end="97:6">#<cpp:directive pos:start="97:2" pos:end="97:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="99:21" pos:end="99:60"><expr pos:start="99:21" pos:end="99:59"><name pos:start="99:21" pos:end="99:40"><name pos:start="99:21" pos:end="99:23">env</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:40">exception_index</name></name> <operator pos:start="99:42" pos:end="99:42">=</operator> <name pos:start="99:44" pos:end="99:59">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="101:21" pos:end="101:49"><expr pos:start="101:21" pos:end="101:48"><name pos:start="101:21" pos:end="101:35"><name pos:start="101:21" pos:end="101:23">env</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:35">error_code</name></name> <operator pos:start="101:37" pos:end="101:37">=</operator> <literal type="number" pos:start="101:39" pos:end="101:48">0x40000000</literal></expr>;</expr_stmt>

                    <break pos:start="103:21" pos:end="103:26">break;</break>

                <case pos:start="105:17" pos:end="105:39">case <expr pos:start="105:22" pos:end="105:38"><name pos:start="105:22" pos:end="105:38">POWERPC_MMU_BOOKE</name></expr>:</case>

                    <comment type="block" pos:start="107:21" pos:end="107:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="109:21" pos:end="109:75"><expr pos:start="109:21" pos:end="109:74"><call pos:start="109:21" pos:end="109:74"><name pos:start="109:21" pos:end="109:29">cpu_abort</name><argument_list pos:start="109:30" pos:end="109:74">(<argument pos:start="109:31" pos:end="109:33"><expr pos:start="109:31" pos:end="109:33"><name pos:start="109:31" pos:end="109:33">env</name></expr></argument>, <argument pos:start="109:36" pos:end="109:73"><expr pos:start="109:36" pos:end="109:73"><literal type="string" pos:start="109:36" pos:end="109:73">"BookE MMU model is not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="111:21" pos:end="111:30">return <expr pos:start="111:28" pos:end="111:29"><operator pos:start="111:28" pos:end="111:28">-</operator><literal type="number" pos:start="111:29" pos:end="111:29">1</literal></expr>;</return>

                <case pos:start="113:17" pos:end="113:43">case <expr pos:start="113:22" pos:end="113:42"><name pos:start="113:22" pos:end="113:42">POWERPC_MMU_BOOKE_FSL</name></expr>:</case>

                    <comment type="block" pos:start="115:21" pos:end="115:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="117:21" pos:end="117:79"><expr pos:start="117:21" pos:end="117:78"><call pos:start="117:21" pos:end="117:78"><name pos:start="117:21" pos:end="117:29">cpu_abort</name><argument_list pos:start="117:30" pos:end="117:78">(<argument pos:start="117:31" pos:end="117:33"><expr pos:start="117:31" pos:end="117:33"><name pos:start="117:31" pos:end="117:33">env</name></expr></argument>, <argument pos:start="117:36" pos:end="117:77"><expr pos:start="117:36" pos:end="117:77"><literal type="string" pos:start="117:36" pos:end="117:77">"BookE FSL MMU model is not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="119:21" pos:end="119:30">return <expr pos:start="119:28" pos:end="119:29"><operator pos:start="119:28" pos:end="119:28">-</operator><literal type="number" pos:start="119:29" pos:end="119:29">1</literal></expr>;</return>

                <case pos:start="121:17" pos:end="121:40">case <expr pos:start="121:22" pos:end="121:39"><name pos:start="121:22" pos:end="121:39">POWERPC_MMU_MPC8xx</name></expr>:</case>

                    <comment type="block" pos:start="123:21" pos:end="123:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="125:21" pos:end="125:76"><expr pos:start="125:21" pos:end="125:75"><call pos:start="125:21" pos:end="125:75"><name pos:start="125:21" pos:end="125:29">cpu_abort</name><argument_list pos:start="125:30" pos:end="125:75">(<argument pos:start="125:31" pos:end="125:33"><expr pos:start="125:31" pos:end="125:33"><name pos:start="125:31" pos:end="125:33">env</name></expr></argument>, <argument pos:start="125:36" pos:end="125:74"><expr pos:start="125:36" pos:end="125:74"><literal type="string" pos:start="125:36" pos:end="125:74">"MPC8xx MMU model is not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="127:21" pos:end="127:26">break;</break>

                <case pos:start="129:17" pos:end="129:38">case <expr pos:start="129:22" pos:end="129:37"><name pos:start="129:22" pos:end="129:37">POWERPC_MMU_REAL</name></expr>:</case>

                    <expr_stmt pos:start="131:21" pos:end="133:54"><expr pos:start="131:21" pos:end="133:53"><call pos:start="131:21" pos:end="133:53"><name pos:start="131:21" pos:end="131:29">cpu_abort</name><argument_list pos:start="131:30" pos:end="133:53">(<argument pos:start="131:31" pos:end="131:33"><expr pos:start="131:31" pos:end="131:33"><name pos:start="131:31" pos:end="131:33">env</name></expr></argument>, <argument pos:start="131:36" pos:end="133:52"><expr pos:start="131:36" pos:end="133:52"><literal type="string" pos:start="131:36" pos:end="131:77">"PowerPC in real mode should never raise "</literal>

                              <literal type="string" pos:start="133:31" pos:end="133:52">"any MMU exceptions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="135:21" pos:end="135:30">return <expr pos:start="135:28" pos:end="135:29"><operator pos:start="135:28" pos:end="135:28">-</operator><literal type="number" pos:start="135:29" pos:end="135:29">1</literal></expr>;</return>

                <default pos:start="137:17" pos:end="137:24">default:</default>

                    <expr_stmt pos:start="139:21" pos:end="139:69"><expr pos:start="139:21" pos:end="139:68"><call pos:start="139:21" pos:end="139:68"><name pos:start="139:21" pos:end="139:29">cpu_abort</name><argument_list pos:start="139:30" pos:end="139:68">(<argument pos:start="139:31" pos:end="139:33"><expr pos:start="139:31" pos:end="139:33"><name pos:start="139:31" pos:end="139:33">env</name></expr></argument>, <argument pos:start="139:36" pos:end="139:67"><expr pos:start="139:36" pos:end="139:67"><literal type="string" pos:start="139:36" pos:end="139:67">"Unknown or invalid MMU model\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="141:21" pos:end="141:30">return <expr pos:start="141:28" pos:end="141:29"><operator pos:start="141:28" pos:end="141:28">-</operator><literal type="number" pos:start="141:29" pos:end="141:29">1</literal></expr>;</return>

                </block_content>}</block></switch>

                <break pos:start="145:17" pos:end="145:22">break;</break>

            <case pos:start="147:13" pos:end="147:20">case <expr pos:start="147:18" pos:end="147:19"><operator pos:start="147:18" pos:end="147:18">-</operator><literal type="number" pos:start="147:19" pos:end="147:19">2</literal></expr>:</case>

                <comment type="block" pos:start="149:17" pos:end="149:45">/* Access rights violation */</comment>

                <expr_stmt pos:start="151:17" pos:end="151:56"><expr pos:start="151:17" pos:end="151:55"><name pos:start="151:17" pos:end="151:36"><name pos:start="151:17" pos:end="151:19">env</name><operator pos:start="151:20" pos:end="151:21">-&gt;</operator><name pos:start="151:22" pos:end="151:36">exception_index</name></name> <operator pos:start="151:38" pos:end="151:38">=</operator> <name pos:start="151:40" pos:end="151:55">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:45"><expr pos:start="153:17" pos:end="153:44"><name pos:start="153:17" pos:end="153:31"><name pos:start="153:17" pos:end="153:19">env</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:31">error_code</name></name> <operator pos:start="153:33" pos:end="153:33">=</operator> <literal type="number" pos:start="153:35" pos:end="153:44">0x08000000</literal></expr>;</expr_stmt>

                <break pos:start="155:17" pos:end="155:22">break;</break>

            <case pos:start="157:13" pos:end="157:20">case <expr pos:start="157:18" pos:end="157:19"><operator pos:start="157:18" pos:end="157:18">-</operator><literal type="number" pos:start="157:19" pos:end="157:19">3</literal></expr>:</case>

                <comment type="block" pos:start="159:17" pos:end="159:53">/* No execute protection violation */</comment>

                <expr_stmt pos:start="161:17" pos:end="161:56"><expr pos:start="161:17" pos:end="161:55"><name pos:start="161:17" pos:end="161:36"><name pos:start="161:17" pos:end="161:19">env</name><operator pos:start="161:20" pos:end="161:21">-&gt;</operator><name pos:start="161:22" pos:end="161:36">exception_index</name></name> <operator pos:start="161:38" pos:end="161:38">=</operator> <name pos:start="161:40" pos:end="161:55">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:45"><expr pos:start="163:17" pos:end="163:44"><name pos:start="163:17" pos:end="163:31"><name pos:start="163:17" pos:end="163:19">env</name><operator pos:start="163:20" pos:end="163:21">-&gt;</operator><name pos:start="163:22" pos:end="163:31">error_code</name></name> <operator pos:start="163:33" pos:end="163:33">=</operator> <literal type="number" pos:start="163:35" pos:end="163:44">0x10000000</literal></expr>;</expr_stmt>

                <break pos:start="165:17" pos:end="165:22">break;</break>

            <case pos:start="167:13" pos:end="167:20">case <expr pos:start="167:18" pos:end="167:19"><operator pos:start="167:18" pos:end="167:18">-</operator><literal type="number" pos:start="167:19" pos:end="167:19">4</literal></expr>:</case>

                <comment type="block" pos:start="169:17" pos:end="169:44">/* Direct store exception */</comment>

                <comment type="block" pos:start="171:17" pos:end="171:68">/* No code fetch is allowed in direct-store areas */</comment>

                <expr_stmt pos:start="173:17" pos:end="173:56"><expr pos:start="173:17" pos:end="173:55"><name pos:start="173:17" pos:end="173:36"><name pos:start="173:17" pos:end="173:19">env</name><operator pos:start="173:20" pos:end="173:21">-&gt;</operator><name pos:start="173:22" pos:end="173:36">exception_index</name></name> <operator pos:start="173:38" pos:end="173:38">=</operator> <name pos:start="173:40" pos:end="173:55">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:45"><expr pos:start="175:17" pos:end="175:44"><name pos:start="175:17" pos:end="175:31"><name pos:start="175:17" pos:end="175:19">env</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:31">error_code</name></name> <operator pos:start="175:33" pos:end="175:33">=</operator> <literal type="number" pos:start="175:35" pos:end="175:44">0x10000000</literal></expr>;</expr_stmt>

                <break pos:start="177:17" pos:end="180:0">break;</break>

<cpp:if pos:start="179:1" pos:end="179:25">#<cpp:directive pos:start="179:2" pos:end="179:3">if</cpp:directive> <expr pos:start="179:5" pos:end="179:25"><call pos:start="179:5" pos:end="179:25"><name pos:start="179:5" pos:end="179:11">defined</name><argument_list pos:start="179:12" pos:end="179:25">(<argument pos:start="179:13" pos:end="179:24"><expr pos:start="179:13" pos:end="179:24"><name pos:start="179:13" pos:end="179:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <case pos:start="181:13" pos:end="181:20">case <expr pos:start="181:18" pos:end="181:19"><operator pos:start="181:18" pos:end="181:18">-</operator><literal type="number" pos:start="181:19" pos:end="181:19">5</literal></expr>:</case>

                <comment type="block" pos:start="183:17" pos:end="183:47">/* No match in segment table */</comment>

                <if_stmt pos:start="185:17" pos:end="199:17"><if pos:start="185:17" pos:end="193:17">if <condition pos:start="185:20" pos:end="185:54">(<expr pos:start="185:21" pos:end="185:53"><name pos:start="185:21" pos:end="185:34"><name pos:start="185:21" pos:end="185:23">env</name><operator pos:start="185:24" pos:end="185:25">-&gt;</operator><name pos:start="185:26" pos:end="185:34">mmu_model</name></name> <operator pos:start="185:36" pos:end="185:37">==</operator> <name pos:start="185:39" pos:end="185:53">POWERPC_MMU_620</name></expr>)</condition> <block pos:start="185:56" pos:end="193:17">{<block_content pos:start="187:21" pos:end="191:49">

                    <expr_stmt pos:start="187:21" pos:end="187:60"><expr pos:start="187:21" pos:end="187:59"><name pos:start="187:21" pos:end="187:40"><name pos:start="187:21" pos:end="187:23">env</name><operator pos:start="187:24" pos:end="187:25">-&gt;</operator><name pos:start="187:26" pos:end="187:40">exception_index</name></name> <operator pos:start="187:42" pos:end="187:42">=</operator> <name pos:start="187:44" pos:end="187:59">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                    <comment type="block" pos:start="189:21" pos:end="189:54">/* XXX: this might be incorrect */</comment>

                    <expr_stmt pos:start="191:21" pos:end="191:49"><expr pos:start="191:21" pos:end="191:48"><name pos:start="191:21" pos:end="191:35"><name pos:start="191:21" pos:end="191:23">env</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:35">error_code</name></name> <operator pos:start="191:37" pos:end="191:37">=</operator> <literal type="number" pos:start="191:39" pos:end="191:48">0x40000000</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="193:19" pos:end="199:17">else <block pos:start="193:24" pos:end="199:17">{<block_content pos:start="195:21" pos:end="197:40">

                    <expr_stmt pos:start="195:21" pos:end="195:61"><expr pos:start="195:21" pos:end="195:60"><name pos:start="195:21" pos:end="195:40"><name pos:start="195:21" pos:end="195:23">env</name><operator pos:start="195:24" pos:end="195:25">-&gt;</operator><name pos:start="195:26" pos:end="195:40">exception_index</name></name> <operator pos:start="195:42" pos:end="195:42">=</operator> <name pos:start="195:44" pos:end="195:60">POWERPC_EXCP_ISEG</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="197:21" pos:end="197:40"><expr pos:start="197:21" pos:end="197:39"><name pos:start="197:21" pos:end="197:35"><name pos:start="197:21" pos:end="197:23">env</name><operator pos:start="197:24" pos:end="197:25">-&gt;</operator><name pos:start="197:26" pos:end="197:35">error_code</name></name> <operator pos:start="197:37" pos:end="197:37">=</operator> <literal type="number" pos:start="197:39" pos:end="197:39">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="201:17" pos:end="204:0">break;</break>

<cpp:endif pos:start="203:1" pos:end="203:6">#<cpp:directive pos:start="203:2" pos:end="203:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="207:11" pos:end="508:0">else <block pos:start="207:16" pos:end="508:0">{<block_content pos:start="209:13" pos:end="497:13">

            <switch pos:start="209:13" pos:end="497:13">switch <condition pos:start="209:20" pos:end="209:24">(<expr pos:start="209:21" pos:end="209:23"><name pos:start="209:21" pos:end="209:23">ret</name></expr>)</condition> <block pos:start="209:26" pos:end="497:13">{<block_content pos:start="211:13" pos:end="496:0">

            <case pos:start="211:13" pos:end="211:20">case <expr pos:start="211:18" pos:end="211:19"><operator pos:start="211:18" pos:end="211:18">-</operator><literal type="number" pos:start="211:19" pos:end="211:19">1</literal></expr>:</case>

                <comment type="block" pos:start="213:17" pos:end="213:54">/* No matches in page tables or TLB */</comment>

                <switch pos:start="215:17" pos:end="359:17">switch <condition pos:start="215:24" pos:end="215:39">(<expr pos:start="215:25" pos:end="215:38"><name pos:start="215:25" pos:end="215:38"><name pos:start="215:25" pos:end="215:27">env</name><operator pos:start="215:28" pos:end="215:29">-&gt;</operator><name pos:start="215:30" pos:end="215:38">mmu_model</name></name></expr>)</condition> <block pos:start="215:41" pos:end="359:17">{<block_content pos:start="217:17" pos:end="357:30">

                <case pos:start="217:17" pos:end="217:42">case <expr pos:start="217:22" pos:end="217:41"><name pos:start="217:22" pos:end="217:41">POWERPC_MMU_SOFT_6xx</name></expr>:</case>

                    <if_stmt pos:start="219:21" pos:end="231:21"><if pos:start="219:21" pos:end="225:21">if <condition pos:start="219:24" pos:end="219:32">(<expr pos:start="219:25" pos:end="219:31"><name pos:start="219:25" pos:end="219:26">rw</name> <operator pos:start="219:28" pos:end="219:29">==</operator> <literal type="number" pos:start="219:31" pos:end="219:31">1</literal></expr>)</condition> <block pos:start="219:34" pos:end="225:21">{<block_content pos:start="221:25" pos:end="223:50">

                        <expr_stmt pos:start="221:25" pos:end="221:66"><expr pos:start="221:25" pos:end="221:65"><name pos:start="221:25" pos:end="221:44"><name pos:start="221:25" pos:end="221:27">env</name><operator pos:start="221:28" pos:end="221:29">-&gt;</operator><name pos:start="221:30" pos:end="221:44">exception_index</name></name> <operator pos:start="221:46" pos:end="221:46">=</operator> <name pos:start="221:48" pos:end="221:65">POWERPC_EXCP_DSTLB</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="223:25" pos:end="223:50"><expr pos:start="223:25" pos:end="223:49"><name pos:start="223:25" pos:end="223:39"><name pos:start="223:25" pos:end="223:27">env</name><operator pos:start="223:28" pos:end="223:29">-&gt;</operator><name pos:start="223:30" pos:end="223:39">error_code</name></name> <operator pos:start="223:41" pos:end="223:41">=</operator> <literal type="number" pos:start="223:43" pos:end="223:43">1</literal> <operator pos:start="223:45" pos:end="223:46">&lt;&lt;</operator> <literal type="number" pos:start="223:48" pos:end="223:49">16</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="225:23" pos:end="231:21">else <block pos:start="225:28" pos:end="231:21">{<block_content pos:start="227:25" pos:end="229:44">

                        <expr_stmt pos:start="227:25" pos:end="227:66"><expr pos:start="227:25" pos:end="227:65"><name pos:start="227:25" pos:end="227:44"><name pos:start="227:25" pos:end="227:27">env</name><operator pos:start="227:28" pos:end="227:29">-&gt;</operator><name pos:start="227:30" pos:end="227:44">exception_index</name></name> <operator pos:start="227:46" pos:end="227:46">=</operator> <name pos:start="227:48" pos:end="227:65">POWERPC_EXCP_DLTLB</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="229:25" pos:end="229:44"><expr pos:start="229:25" pos:end="229:43"><name pos:start="229:25" pos:end="229:39"><name pos:start="229:25" pos:end="229:27">env</name><operator pos:start="229:28" pos:end="229:29">-&gt;</operator><name pos:start="229:30" pos:end="229:39">error_code</name></name> <operator pos:start="229:41" pos:end="229:41">=</operator> <literal type="number" pos:start="229:43" pos:end="229:43">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="233:21" pos:end="233:50"><expr pos:start="233:21" pos:end="233:49"><name pos:start="233:21" pos:end="233:39"><name pos:start="233:21" pos:end="233:23">env</name><operator pos:start="233:24" pos:end="233:25">-&gt;</operator><name pos:start="233:26" pos:end="233:28">spr</name><index pos:start="233:29" pos:end="233:39">[<expr pos:start="233:30" pos:end="233:38"><name pos:start="233:30" pos:end="233:38">SPR_DMISS</name></expr>]</index></name> <operator pos:start="233:41" pos:end="233:41">=</operator> <name pos:start="233:43" pos:end="233:49">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="235:21" pos:end="235:63"><expr pos:start="235:21" pos:end="235:62"><name pos:start="235:21" pos:end="235:38"><name pos:start="235:21" pos:end="235:23">env</name><operator pos:start="235:24" pos:end="235:25">-&gt;</operator><name pos:start="235:26" pos:end="235:28">spr</name><index pos:start="235:29" pos:end="235:38">[<expr pos:start="235:30" pos:end="235:37"><name pos:start="235:30" pos:end="235:37">SPR_DCMP</name></expr>]</index></name> <operator pos:start="235:40" pos:end="235:40">=</operator> <literal type="number" pos:start="235:42" pos:end="235:51">0x80000000</literal> <operator pos:start="235:53" pos:end="235:53">|</operator> <name pos:start="235:55" pos:end="235:62"><name pos:start="235:55" pos:end="235:57">ctx</name><operator pos:start="235:58" pos:end="235:58">.</operator><name pos:start="235:59" pos:end="235:62">ptem</name></name></expr>;</expr_stmt>

                <label pos:start="237:17" pos:end="237:25"><name pos:start="237:17" pos:end="237:24">tlb_miss</name>:</label>

                    <expr_stmt pos:start="239:21" pos:end="239:53"><expr pos:start="239:21" pos:end="239:52"><name pos:start="239:21" pos:end="239:35"><name pos:start="239:21" pos:end="239:23">env</name><operator pos:start="239:24" pos:end="239:25">-&gt;</operator><name pos:start="239:26" pos:end="239:35">error_code</name></name> <operator pos:start="239:37" pos:end="239:38">|=</operator> <name pos:start="239:40" pos:end="239:46"><name pos:start="239:40" pos:end="239:42">ctx</name><operator pos:start="239:43" pos:end="239:43">.</operator><name pos:start="239:44" pos:end="239:46">key</name></name> <operator pos:start="239:48" pos:end="239:49">&lt;&lt;</operator> <literal type="number" pos:start="239:51" pos:end="239:52">19</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="241:21" pos:end="241:57"><expr pos:start="241:21" pos:end="241:56"><name pos:start="241:21" pos:end="241:39"><name pos:start="241:21" pos:end="241:23">env</name><operator pos:start="241:24" pos:end="241:25">-&gt;</operator><name pos:start="241:26" pos:end="241:28">spr</name><index pos:start="241:29" pos:end="241:39">[<expr pos:start="241:30" pos:end="241:38"><name pos:start="241:30" pos:end="241:38">SPR_HASH1</name></expr>]</index></name> <operator pos:start="241:41" pos:end="241:41">=</operator> <name pos:start="241:43" pos:end="241:56"><name pos:start="241:43" pos:end="241:45">ctx</name><operator pos:start="241:46" pos:end="241:46">.</operator><name pos:start="241:47" pos:end="241:53">pg_addr</name><index pos:start="241:54" pos:end="241:56">[<expr pos:start="241:55" pos:end="241:55"><literal type="number" pos:start="241:55" pos:end="241:55">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="243:21" pos:end="243:57"><expr pos:start="243:21" pos:end="243:56"><name pos:start="243:21" pos:end="243:39"><name pos:start="243:21" pos:end="243:23">env</name><operator pos:start="243:24" pos:end="243:25">-&gt;</operator><name pos:start="243:26" pos:end="243:28">spr</name><index pos:start="243:29" pos:end="243:39">[<expr pos:start="243:30" pos:end="243:38"><name pos:start="243:30" pos:end="243:38">SPR_HASH2</name></expr>]</index></name> <operator pos:start="243:41" pos:end="243:41">=</operator> <name pos:start="243:43" pos:end="243:56"><name pos:start="243:43" pos:end="243:45">ctx</name><operator pos:start="243:46" pos:end="243:46">.</operator><name pos:start="243:47" pos:end="243:53">pg_addr</name><index pos:start="243:54" pos:end="243:56">[<expr pos:start="243:55" pos:end="243:55"><literal type="number" pos:start="243:55" pos:end="243:55">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <break pos:start="245:21" pos:end="245:26">break;</break>

                <case pos:start="247:17" pos:end="247:43">case <expr pos:start="247:22" pos:end="247:42"><name pos:start="247:22" pos:end="247:42">POWERPC_MMU_SOFT_74xx</name></expr>:</case>

                    <if_stmt pos:start="249:21" pos:end="257:21"><if pos:start="249:21" pos:end="253:21">if <condition pos:start="249:24" pos:end="249:32">(<expr pos:start="249:25" pos:end="249:31"><name pos:start="249:25" pos:end="249:26">rw</name> <operator pos:start="249:28" pos:end="249:29">==</operator> <literal type="number" pos:start="249:31" pos:end="249:31">1</literal></expr>)</condition> <block pos:start="249:34" pos:end="253:21">{<block_content pos:start="251:25" pos:end="251:66">

                        <expr_stmt pos:start="251:25" pos:end="251:66"><expr pos:start="251:25" pos:end="251:65"><name pos:start="251:25" pos:end="251:44"><name pos:start="251:25" pos:end="251:27">env</name><operator pos:start="251:28" pos:end="251:29">-&gt;</operator><name pos:start="251:30" pos:end="251:44">exception_index</name></name> <operator pos:start="251:46" pos:end="251:46">=</operator> <name pos:start="251:48" pos:end="251:65">POWERPC_EXCP_DSTLB</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="253:23" pos:end="257:21">else <block pos:start="253:28" pos:end="257:21">{<block_content pos:start="255:25" pos:end="255:66">

                        <expr_stmt pos:start="255:25" pos:end="255:66"><expr pos:start="255:25" pos:end="255:65"><name pos:start="255:25" pos:end="255:44"><name pos:start="255:25" pos:end="255:27">env</name><operator pos:start="255:28" pos:end="255:29">-&gt;</operator><name pos:start="255:30" pos:end="255:44">exception_index</name></name> <operator pos:start="255:46" pos:end="255:46">=</operator> <name pos:start="255:48" pos:end="255:65">POWERPC_EXCP_DLTLB</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                <label pos:start="259:17" pos:end="259:30"><name pos:start="259:17" pos:end="259:29">tlb_miss_74xx</name>:</label>

                    <comment type="block" pos:start="261:21" pos:end="261:49">/* Implement LRU algorithm */</comment>

                    <expr_stmt pos:start="263:21" pos:end="263:52"><expr pos:start="263:21" pos:end="263:51"><name pos:start="263:21" pos:end="263:35"><name pos:start="263:21" pos:end="263:23">env</name><operator pos:start="263:24" pos:end="263:25">-&gt;</operator><name pos:start="263:26" pos:end="263:35">error_code</name></name> <operator pos:start="263:37" pos:end="263:37">=</operator> <name pos:start="263:39" pos:end="263:45"><name pos:start="263:39" pos:end="263:41">ctx</name><operator pos:start="263:42" pos:end="263:42">.</operator><name pos:start="263:43" pos:end="263:45">key</name></name> <operator pos:start="263:47" pos:end="263:48">&lt;&lt;</operator> <literal type="number" pos:start="263:50" pos:end="263:51">19</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="265:21" pos:end="267:67"><expr pos:start="265:21" pos:end="267:66"><name pos:start="265:21" pos:end="265:41"><name pos:start="265:21" pos:end="265:23">env</name><operator pos:start="265:24" pos:end="265:25">-&gt;</operator><name pos:start="265:26" pos:end="265:28">spr</name><index pos:start="265:29" pos:end="265:41">[<expr pos:start="265:30" pos:end="265:40"><name pos:start="265:30" pos:end="265:40">SPR_TLBMISS</name></expr>]</index></name> <operator pos:start="265:43" pos:end="265:43">=</operator> <operator pos:start="265:45" pos:end="265:45">(</operator><name pos:start="265:46" pos:end="265:52">address</name> <operator pos:start="265:54" pos:end="265:54">&amp;</operator> <operator pos:start="265:56" pos:end="265:56">~</operator><operator pos:start="265:57" pos:end="265:57">(</operator><operator pos:start="265:58" pos:end="265:58">(</operator><name pos:start="265:59" pos:end="265:70">target_ulong</name><operator pos:start="265:71" pos:end="265:71">)</operator><literal type="number" pos:start="265:72" pos:end="265:74">0x3</literal><operator pos:start="265:75" pos:end="265:75">)</operator><operator pos:start="265:76" pos:end="265:76">)</operator> <operator pos:start="265:78" pos:end="265:78">|</operator>

                        <operator pos:start="267:25" pos:end="267:25">(</operator><operator pos:start="267:26" pos:end="267:26">(</operator><name pos:start="267:27" pos:end="267:39"><name pos:start="267:27" pos:end="267:29">env</name><operator pos:start="267:30" pos:end="267:31">-&gt;</operator><name pos:start="267:32" pos:end="267:39">last_way</name></name> <operator pos:start="267:41" pos:end="267:41">+</operator> <literal type="number" pos:start="267:43" pos:end="267:43">1</literal><operator pos:start="267:44" pos:end="267:44">)</operator> <operator pos:start="267:46" pos:end="267:46">&amp;</operator> <operator pos:start="267:48" pos:end="267:48">(</operator><name pos:start="267:49" pos:end="267:60"><name pos:start="267:49" pos:end="267:51">env</name><operator pos:start="267:52" pos:end="267:53">-&gt;</operator><name pos:start="267:54" pos:end="267:60">nb_ways</name></name> <operator pos:start="267:62" pos:end="267:62">-</operator> <literal type="number" pos:start="267:64" pos:end="267:64">1</literal><operator pos:start="267:65" pos:end="267:65">)</operator><operator pos:start="267:66" pos:end="267:66">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="269:21" pos:end="269:64"><expr pos:start="269:21" pos:end="269:63"><name pos:start="269:21" pos:end="269:39"><name pos:start="269:21" pos:end="269:23">env</name><operator pos:start="269:24" pos:end="269:25">-&gt;</operator><name pos:start="269:26" pos:end="269:28">spr</name><index pos:start="269:29" pos:end="269:39">[<expr pos:start="269:30" pos:end="269:38"><name pos:start="269:30" pos:end="269:38">SPR_PTEHI</name></expr>]</index></name> <operator pos:start="269:41" pos:end="269:41">=</operator> <literal type="number" pos:start="269:43" pos:end="269:52">0x80000000</literal> <operator pos:start="269:54" pos:end="269:54">|</operator> <name pos:start="269:56" pos:end="269:63"><name pos:start="269:56" pos:end="269:58">ctx</name><operator pos:start="269:59" pos:end="269:59">.</operator><name pos:start="269:60" pos:end="269:63">ptem</name></name></expr>;</expr_stmt>

                    <break pos:start="271:21" pos:end="271:26">break;</break>

                <case pos:start="273:17" pos:end="273:42">case <expr pos:start="273:22" pos:end="273:41"><name pos:start="273:22" pos:end="273:41">POWERPC_MMU_SOFT_4xx</name></expr>:</case>

                <case pos:start="275:17" pos:end="275:44">case <expr pos:start="275:22" pos:end="275:43"><name pos:start="275:22" pos:end="275:43">POWERPC_MMU_SOFT_4xx_Z</name></expr>:</case>

                    <expr_stmt pos:start="277:21" pos:end="277:61"><expr pos:start="277:21" pos:end="277:60"><name pos:start="277:21" pos:end="277:40"><name pos:start="277:21" pos:end="277:23">env</name><operator pos:start="277:24" pos:end="277:25">-&gt;</operator><name pos:start="277:26" pos:end="277:40">exception_index</name></name> <operator pos:start="277:42" pos:end="277:42">=</operator> <name pos:start="277:44" pos:end="277:60">POWERPC_EXCP_DTLB</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="279:21" pos:end="279:40"><expr pos:start="279:21" pos:end="279:39"><name pos:start="279:21" pos:end="279:35"><name pos:start="279:21" pos:end="279:23">env</name><operator pos:start="279:24" pos:end="279:25">-&gt;</operator><name pos:start="279:26" pos:end="279:35">error_code</name></name> <operator pos:start="279:37" pos:end="279:37">=</operator> <literal type="number" pos:start="279:39" pos:end="279:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="281:21" pos:end="281:53"><expr pos:start="281:21" pos:end="281:52"><name pos:start="281:21" pos:end="281:42"><name pos:start="281:21" pos:end="281:23">env</name><operator pos:start="281:24" pos:end="281:25">-&gt;</operator><name pos:start="281:26" pos:end="281:28">spr</name><index pos:start="281:29" pos:end="281:42">[<expr pos:start="281:30" pos:end="281:41"><name pos:start="281:30" pos:end="281:41">SPR_40x_DEAR</name></expr>]</index></name> <operator pos:start="281:44" pos:end="281:44">=</operator> <name pos:start="281:46" pos:end="281:52">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="283:21" pos:end="289:59"><if pos:start="283:21" pos:end="285:59">if <condition pos:start="283:24" pos:end="283:27">(<expr pos:start="283:25" pos:end="283:26"><name pos:start="283:25" pos:end="283:26">rw</name></expr>)</condition><block type="pseudo" pos:start="285:25" pos:end="285:59"><block_content pos:start="285:25" pos:end="285:59">

                        <expr_stmt pos:start="285:25" pos:end="285:59"><expr pos:start="285:25" pos:end="285:58"><name pos:start="285:25" pos:end="285:45"><name pos:start="285:25" pos:end="285:27">env</name><operator pos:start="285:28" pos:end="285:29">-&gt;</operator><name pos:start="285:30" pos:end="285:32">spr</name><index pos:start="285:33" pos:end="285:45">[<expr pos:start="285:34" pos:end="285:44"><name pos:start="285:34" pos:end="285:44">SPR_40x_ESR</name></expr>]</index></name> <operator pos:start="285:47" pos:end="285:47">=</operator> <literal type="number" pos:start="285:49" pos:end="285:58">0x00800000</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="287:21" pos:end="289:59">else<block type="pseudo" pos:start="289:25" pos:end="289:59"><block_content pos:start="289:25" pos:end="289:59">

                        <expr_stmt pos:start="289:25" pos:end="289:59"><expr pos:start="289:25" pos:end="289:58"><name pos:start="289:25" pos:end="289:45"><name pos:start="289:25" pos:end="289:27">env</name><operator pos:start="289:28" pos:end="289:29">-&gt;</operator><name pos:start="289:30" pos:end="289:32">spr</name><index pos:start="289:33" pos:end="289:45">[<expr pos:start="289:34" pos:end="289:44"><name pos:start="289:34" pos:end="289:44">SPR_40x_ESR</name></expr>]</index></name> <operator pos:start="289:47" pos:end="289:47">=</operator> <literal type="number" pos:start="289:49" pos:end="289:58">0x00000000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <break pos:start="291:21" pos:end="291:26">break;</break>

                <case pos:start="293:17" pos:end="293:37">case <expr pos:start="293:22" pos:end="293:36"><name pos:start="293:22" pos:end="293:36">POWERPC_MMU_32B</name></expr>:</case>

                <case pos:start="295:17" pos:end="298:0">case <expr pos:start="295:22" pos:end="295:36"><name pos:start="295:22" pos:end="295:36">POWERPC_MMU_601</name></expr>:</case>

<cpp:if pos:start="297:1" pos:end="297:25">#<cpp:directive pos:start="297:2" pos:end="297:3">if</cpp:directive> <expr pos:start="297:5" pos:end="297:25"><call pos:start="297:5" pos:end="297:25"><name pos:start="297:5" pos:end="297:11">defined</name><argument_list pos:start="297:12" pos:end="297:25">(<argument pos:start="297:13" pos:end="297:24"><expr pos:start="297:13" pos:end="297:24"><name pos:start="297:13" pos:end="297:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <case pos:start="299:17" pos:end="299:37">case <expr pos:start="299:22" pos:end="299:36"><name pos:start="299:22" pos:end="299:36">POWERPC_MMU_620</name></expr>:</case>

                <case pos:start="301:17" pos:end="304:0">case <expr pos:start="301:22" pos:end="301:36"><name pos:start="301:22" pos:end="301:36">POWERPC_MMU_64B</name></expr>:</case>

<cpp:endif pos:start="303:1" pos:end="303:6">#<cpp:directive pos:start="303:2" pos:end="303:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="305:21" pos:end="305:60"><expr pos:start="305:21" pos:end="305:59"><name pos:start="305:21" pos:end="305:40"><name pos:start="305:21" pos:end="305:23">env</name><operator pos:start="305:24" pos:end="305:25">-&gt;</operator><name pos:start="305:26" pos:end="305:40">exception_index</name></name> <operator pos:start="305:42" pos:end="305:42">=</operator> <name pos:start="305:44" pos:end="305:59">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="307:21" pos:end="307:40"><expr pos:start="307:21" pos:end="307:39"><name pos:start="307:21" pos:end="307:35"><name pos:start="307:21" pos:end="307:23">env</name><operator pos:start="307:24" pos:end="307:25">-&gt;</operator><name pos:start="307:26" pos:end="307:35">error_code</name></name> <operator pos:start="307:37" pos:end="307:37">=</operator> <literal type="number" pos:start="307:39" pos:end="307:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="309:21" pos:end="309:48"><expr pos:start="309:21" pos:end="309:47"><name pos:start="309:21" pos:end="309:37"><name pos:start="309:21" pos:end="309:23">env</name><operator pos:start="309:24" pos:end="309:25">-&gt;</operator><name pos:start="309:26" pos:end="309:28">spr</name><index pos:start="309:29" pos:end="309:37">[<expr pos:start="309:30" pos:end="309:36"><name pos:start="309:30" pos:end="309:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="309:39" pos:end="309:39">=</operator> <name pos:start="309:41" pos:end="309:47">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="311:21" pos:end="317:57"><if pos:start="311:21" pos:end="313:57">if <condition pos:start="311:24" pos:end="311:32">(<expr pos:start="311:25" pos:end="311:31"><name pos:start="311:25" pos:end="311:26">rw</name> <operator pos:start="311:28" pos:end="311:29">==</operator> <literal type="number" pos:start="311:31" pos:end="311:31">1</literal></expr>)</condition><block type="pseudo" pos:start="313:25" pos:end="313:57"><block_content pos:start="313:25" pos:end="313:57">

                        <expr_stmt pos:start="313:25" pos:end="313:57"><expr pos:start="313:25" pos:end="313:56"><name pos:start="313:25" pos:end="313:43"><name pos:start="313:25" pos:end="313:27">env</name><operator pos:start="313:28" pos:end="313:29">-&gt;</operator><name pos:start="313:30" pos:end="313:32">spr</name><index pos:start="313:33" pos:end="313:43">[<expr pos:start="313:34" pos:end="313:42"><name pos:start="313:34" pos:end="313:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="313:45" pos:end="313:45">=</operator> <literal type="number" pos:start="313:47" pos:end="313:56">0x42000000</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="315:21" pos:end="317:57">else<block type="pseudo" pos:start="317:25" pos:end="317:57"><block_content pos:start="317:25" pos:end="317:57">

                        <expr_stmt pos:start="317:25" pos:end="317:57"><expr pos:start="317:25" pos:end="317:56"><name pos:start="317:25" pos:end="317:43"><name pos:start="317:25" pos:end="317:27">env</name><operator pos:start="317:28" pos:end="317:29">-&gt;</operator><name pos:start="317:30" pos:end="317:32">spr</name><index pos:start="317:33" pos:end="317:43">[<expr pos:start="317:34" pos:end="317:42"><name pos:start="317:34" pos:end="317:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="317:45" pos:end="317:45">=</operator> <literal type="number" pos:start="317:47" pos:end="317:56">0x40000000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <break pos:start="319:21" pos:end="319:26">break;</break>

                <case pos:start="321:17" pos:end="321:40">case <expr pos:start="321:22" pos:end="321:39"><name pos:start="321:22" pos:end="321:39">POWERPC_MMU_MPC8xx</name></expr>:</case>

                    <comment type="block" pos:start="323:21" pos:end="323:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="325:21" pos:end="325:76"><expr pos:start="325:21" pos:end="325:75"><call pos:start="325:21" pos:end="325:75"><name pos:start="325:21" pos:end="325:29">cpu_abort</name><argument_list pos:start="325:30" pos:end="325:75">(<argument pos:start="325:31" pos:end="325:33"><expr pos:start="325:31" pos:end="325:33"><name pos:start="325:31" pos:end="325:33">env</name></expr></argument>, <argument pos:start="325:36" pos:end="325:74"><expr pos:start="325:36" pos:end="325:74"><literal type="string" pos:start="325:36" pos:end="325:74">"MPC8xx MMU model is not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="327:21" pos:end="327:26">break;</break>

                <case pos:start="329:17" pos:end="329:39">case <expr pos:start="329:22" pos:end="329:38"><name pos:start="329:22" pos:end="329:38">POWERPC_MMU_BOOKE</name></expr>:</case>

                    <comment type="block" pos:start="331:21" pos:end="331:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="333:21" pos:end="333:75"><expr pos:start="333:21" pos:end="333:74"><call pos:start="333:21" pos:end="333:74"><name pos:start="333:21" pos:end="333:29">cpu_abort</name><argument_list pos:start="333:30" pos:end="333:74">(<argument pos:start="333:31" pos:end="333:33"><expr pos:start="333:31" pos:end="333:33"><name pos:start="333:31" pos:end="333:33">env</name></expr></argument>, <argument pos:start="333:36" pos:end="333:73"><expr pos:start="333:36" pos:end="333:73"><literal type="string" pos:start="333:36" pos:end="333:73">"BookE MMU model is not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="335:21" pos:end="335:30">return <expr pos:start="335:28" pos:end="335:29"><operator pos:start="335:28" pos:end="335:28">-</operator><literal type="number" pos:start="335:29" pos:end="335:29">1</literal></expr>;</return>

                <case pos:start="337:17" pos:end="337:43">case <expr pos:start="337:22" pos:end="337:42"><name pos:start="337:22" pos:end="337:42">POWERPC_MMU_BOOKE_FSL</name></expr>:</case>

                    <comment type="block" pos:start="339:21" pos:end="339:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="341:21" pos:end="341:79"><expr pos:start="341:21" pos:end="341:78"><call pos:start="341:21" pos:end="341:78"><name pos:start="341:21" pos:end="341:29">cpu_abort</name><argument_list pos:start="341:30" pos:end="341:78">(<argument pos:start="341:31" pos:end="341:33"><expr pos:start="341:31" pos:end="341:33"><name pos:start="341:31" pos:end="341:33">env</name></expr></argument>, <argument pos:start="341:36" pos:end="341:77"><expr pos:start="341:36" pos:end="341:77"><literal type="string" pos:start="341:36" pos:end="341:77">"BookE FSL MMU model is not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="343:21" pos:end="343:30">return <expr pos:start="343:28" pos:end="343:29"><operator pos:start="343:28" pos:end="343:28">-</operator><literal type="number" pos:start="343:29" pos:end="343:29">1</literal></expr>;</return>

                <case pos:start="345:17" pos:end="345:38">case <expr pos:start="345:22" pos:end="345:37"><name pos:start="345:22" pos:end="345:37">POWERPC_MMU_REAL</name></expr>:</case>

                    <expr_stmt pos:start="347:21" pos:end="349:54"><expr pos:start="347:21" pos:end="349:53"><call pos:start="347:21" pos:end="349:53"><name pos:start="347:21" pos:end="347:29">cpu_abort</name><argument_list pos:start="347:30" pos:end="349:53">(<argument pos:start="347:31" pos:end="347:33"><expr pos:start="347:31" pos:end="347:33"><name pos:start="347:31" pos:end="347:33">env</name></expr></argument>, <argument pos:start="347:36" pos:end="349:52"><expr pos:start="347:36" pos:end="349:52"><literal type="string" pos:start="347:36" pos:end="347:77">"PowerPC in real mode should never raise "</literal>

                              <literal type="string" pos:start="349:31" pos:end="349:52">"any MMU exceptions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="351:21" pos:end="351:30">return <expr pos:start="351:28" pos:end="351:29"><operator pos:start="351:28" pos:end="351:28">-</operator><literal type="number" pos:start="351:29" pos:end="351:29">1</literal></expr>;</return>

                <default pos:start="353:17" pos:end="353:24">default:</default>

                    <expr_stmt pos:start="355:21" pos:end="355:69"><expr pos:start="355:21" pos:end="355:68"><call pos:start="355:21" pos:end="355:68"><name pos:start="355:21" pos:end="355:29">cpu_abort</name><argument_list pos:start="355:30" pos:end="355:68">(<argument pos:start="355:31" pos:end="355:33"><expr pos:start="355:31" pos:end="355:33"><name pos:start="355:31" pos:end="355:33">env</name></expr></argument>, <argument pos:start="355:36" pos:end="355:67"><expr pos:start="355:36" pos:end="355:67"><literal type="string" pos:start="355:36" pos:end="355:67">"Unknown or invalid MMU model\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="357:21" pos:end="357:30">return <expr pos:start="357:28" pos:end="357:29"><operator pos:start="357:28" pos:end="357:28">-</operator><literal type="number" pos:start="357:29" pos:end="357:29">1</literal></expr>;</return>

                </block_content>}</block></switch>

                <break pos:start="361:17" pos:end="361:22">break;</break>

            <case pos:start="363:13" pos:end="363:20">case <expr pos:start="363:18" pos:end="363:19"><operator pos:start="363:18" pos:end="363:18">-</operator><literal type="number" pos:start="363:19" pos:end="363:19">2</literal></expr>:</case>

                <comment type="block" pos:start="365:17" pos:end="365:45">/* Access rights violation */</comment>

                <expr_stmt pos:start="367:17" pos:end="367:56"><expr pos:start="367:17" pos:end="367:55"><name pos:start="367:17" pos:end="367:36"><name pos:start="367:17" pos:end="367:19">env</name><operator pos:start="367:20" pos:end="367:21">-&gt;</operator><name pos:start="367:22" pos:end="367:36">exception_index</name></name> <operator pos:start="367:38" pos:end="367:38">=</operator> <name pos:start="367:40" pos:end="367:55">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="369:17" pos:end="369:36"><expr pos:start="369:17" pos:end="369:35"><name pos:start="369:17" pos:end="369:31"><name pos:start="369:17" pos:end="369:19">env</name><operator pos:start="369:20" pos:end="369:21">-&gt;</operator><name pos:start="369:22" pos:end="369:31">error_code</name></name> <operator pos:start="369:33" pos:end="369:33">=</operator> <literal type="number" pos:start="369:35" pos:end="369:35">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="371:17" pos:end="371:44"><expr pos:start="371:17" pos:end="371:43"><name pos:start="371:17" pos:end="371:33"><name pos:start="371:17" pos:end="371:19">env</name><operator pos:start="371:20" pos:end="371:21">-&gt;</operator><name pos:start="371:22" pos:end="371:24">spr</name><index pos:start="371:25" pos:end="371:33">[<expr pos:start="371:26" pos:end="371:32"><name pos:start="371:26" pos:end="371:32">SPR_DAR</name></expr>]</index></name> <operator pos:start="371:35" pos:end="371:35">=</operator> <name pos:start="371:37" pos:end="371:43">address</name></expr>;</expr_stmt>

                <if_stmt pos:start="373:17" pos:end="379:53"><if pos:start="373:17" pos:end="375:53">if <condition pos:start="373:20" pos:end="373:28">(<expr pos:start="373:21" pos:end="373:27"><name pos:start="373:21" pos:end="373:22">rw</name> <operator pos:start="373:24" pos:end="373:25">==</operator> <literal type="number" pos:start="373:27" pos:end="373:27">1</literal></expr>)</condition><block type="pseudo" pos:start="375:21" pos:end="375:53"><block_content pos:start="375:21" pos:end="375:53">

                    <expr_stmt pos:start="375:21" pos:end="375:53"><expr pos:start="375:21" pos:end="375:52"><name pos:start="375:21" pos:end="375:39"><name pos:start="375:21" pos:end="375:23">env</name><operator pos:start="375:24" pos:end="375:25">-&gt;</operator><name pos:start="375:26" pos:end="375:28">spr</name><index pos:start="375:29" pos:end="375:39">[<expr pos:start="375:30" pos:end="375:38"><name pos:start="375:30" pos:end="375:38">SPR_DSISR</name></expr>]</index></name> <operator pos:start="375:41" pos:end="375:41">=</operator> <literal type="number" pos:start="375:43" pos:end="375:52">0x0A000000</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="377:17" pos:end="379:53">else<block type="pseudo" pos:start="379:21" pos:end="379:53"><block_content pos:start="379:21" pos:end="379:53">

                    <expr_stmt pos:start="379:21" pos:end="379:53"><expr pos:start="379:21" pos:end="379:52"><name pos:start="379:21" pos:end="379:39"><name pos:start="379:21" pos:end="379:23">env</name><operator pos:start="379:24" pos:end="379:25">-&gt;</operator><name pos:start="379:26" pos:end="379:28">spr</name><index pos:start="379:29" pos:end="379:39">[<expr pos:start="379:30" pos:end="379:38"><name pos:start="379:30" pos:end="379:38">SPR_DSISR</name></expr>]</index></name> <operator pos:start="379:41" pos:end="379:41">=</operator> <literal type="number" pos:start="379:43" pos:end="379:52">0x08000000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <break pos:start="381:17" pos:end="381:22">break;</break>

            <case pos:start="383:13" pos:end="383:20">case <expr pos:start="383:18" pos:end="383:19"><operator pos:start="383:18" pos:end="383:18">-</operator><literal type="number" pos:start="383:19" pos:end="383:19">4</literal></expr>:</case>

                <comment type="block" pos:start="385:17" pos:end="385:44">/* Direct store exception */</comment>

                <switch pos:start="387:17" pos:end="455:17">switch <condition pos:start="387:24" pos:end="387:36">(<expr pos:start="387:25" pos:end="387:35"><name pos:start="387:25" pos:end="387:35">access_type</name></expr>)</condition> <block pos:start="387:38" pos:end="455:17">{<block_content pos:start="389:17" pos:end="453:26">

                <case pos:start="389:17" pos:end="389:34">case <expr pos:start="389:22" pos:end="389:33"><name pos:start="389:22" pos:end="389:33">ACCESS_FLOAT</name></expr>:</case>

                    <comment type="block" pos:start="391:21" pos:end="391:51">/* Floating point load/store */</comment>

                    <expr_stmt pos:start="393:21" pos:end="393:62"><expr pos:start="393:21" pos:end="393:61"><name pos:start="393:21" pos:end="393:40"><name pos:start="393:21" pos:end="393:23">env</name><operator pos:start="393:24" pos:end="393:25">-&gt;</operator><name pos:start="393:26" pos:end="393:40">exception_index</name></name> <operator pos:start="393:42" pos:end="393:42">=</operator> <name pos:start="393:44" pos:end="393:61">POWERPC_EXCP_ALIGN</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="395:21" pos:end="395:60"><expr pos:start="395:21" pos:end="395:59"><name pos:start="395:21" pos:end="395:35"><name pos:start="395:21" pos:end="395:23">env</name><operator pos:start="395:24" pos:end="395:25">-&gt;</operator><name pos:start="395:26" pos:end="395:35">error_code</name></name> <operator pos:start="395:37" pos:end="395:37">=</operator> <name pos:start="395:39" pos:end="395:59">POWERPC_EXCP_ALIGN_FP</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="397:21" pos:end="397:48"><expr pos:start="397:21" pos:end="397:47"><name pos:start="397:21" pos:end="397:37"><name pos:start="397:21" pos:end="397:23">env</name><operator pos:start="397:24" pos:end="397:25">-&gt;</operator><name pos:start="397:26" pos:end="397:28">spr</name><index pos:start="397:29" pos:end="397:37">[<expr pos:start="397:30" pos:end="397:36"><name pos:start="397:30" pos:end="397:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="397:39" pos:end="397:39">=</operator> <name pos:start="397:41" pos:end="397:47">address</name></expr>;</expr_stmt>

                    <break pos:start="399:21" pos:end="399:26">break;</break>

                <case pos:start="401:17" pos:end="401:32">case <expr pos:start="401:22" pos:end="401:31"><name pos:start="401:22" pos:end="401:31">ACCESS_RES</name></expr>:</case>

                    <comment type="block" pos:start="403:21" pos:end="403:48">/* lwarx, ldarx or stwcx. */</comment>

                    <expr_stmt pos:start="405:21" pos:end="405:60"><expr pos:start="405:21" pos:end="405:59"><name pos:start="405:21" pos:end="405:40"><name pos:start="405:21" pos:end="405:23">env</name><operator pos:start="405:24" pos:end="405:25">-&gt;</operator><name pos:start="405:26" pos:end="405:40">exception_index</name></name> <operator pos:start="405:42" pos:end="405:42">=</operator> <name pos:start="405:44" pos:end="405:59">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="407:21" pos:end="407:40"><expr pos:start="407:21" pos:end="407:39"><name pos:start="407:21" pos:end="407:35"><name pos:start="407:21" pos:end="407:23">env</name><operator pos:start="407:24" pos:end="407:25">-&gt;</operator><name pos:start="407:26" pos:end="407:35">error_code</name></name> <operator pos:start="407:37" pos:end="407:37">=</operator> <literal type="number" pos:start="407:39" pos:end="407:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="409:21" pos:end="409:48"><expr pos:start="409:21" pos:end="409:47"><name pos:start="409:21" pos:end="409:37"><name pos:start="409:21" pos:end="409:23">env</name><operator pos:start="409:24" pos:end="409:25">-&gt;</operator><name pos:start="409:26" pos:end="409:28">spr</name><index pos:start="409:29" pos:end="409:37">[<expr pos:start="409:30" pos:end="409:36"><name pos:start="409:30" pos:end="409:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="409:39" pos:end="409:39">=</operator> <name pos:start="409:41" pos:end="409:47">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="411:21" pos:end="417:57"><if pos:start="411:21" pos:end="413:57">if <condition pos:start="411:24" pos:end="411:32">(<expr pos:start="411:25" pos:end="411:31"><name pos:start="411:25" pos:end="411:26">rw</name> <operator pos:start="411:28" pos:end="411:29">==</operator> <literal type="number" pos:start="411:31" pos:end="411:31">1</literal></expr>)</condition><block type="pseudo" pos:start="413:25" pos:end="413:57"><block_content pos:start="413:25" pos:end="413:57">

                        <expr_stmt pos:start="413:25" pos:end="413:57"><expr pos:start="413:25" pos:end="413:56"><name pos:start="413:25" pos:end="413:43"><name pos:start="413:25" pos:end="413:27">env</name><operator pos:start="413:28" pos:end="413:29">-&gt;</operator><name pos:start="413:30" pos:end="413:32">spr</name><index pos:start="413:33" pos:end="413:43">[<expr pos:start="413:34" pos:end="413:42"><name pos:start="413:34" pos:end="413:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="413:45" pos:end="413:45">=</operator> <literal type="number" pos:start="413:47" pos:end="413:56">0x06000000</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="415:21" pos:end="417:57">else<block type="pseudo" pos:start="417:25" pos:end="417:57"><block_content pos:start="417:25" pos:end="417:57">

                        <expr_stmt pos:start="417:25" pos:end="417:57"><expr pos:start="417:25" pos:end="417:56"><name pos:start="417:25" pos:end="417:43"><name pos:start="417:25" pos:end="417:27">env</name><operator pos:start="417:28" pos:end="417:29">-&gt;</operator><name pos:start="417:30" pos:end="417:32">spr</name><index pos:start="417:33" pos:end="417:43">[<expr pos:start="417:34" pos:end="417:42"><name pos:start="417:34" pos:end="417:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="417:45" pos:end="417:45">=</operator> <literal type="number" pos:start="417:47" pos:end="417:56">0x04000000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <break pos:start="419:21" pos:end="419:26">break;</break>

                <case pos:start="421:17" pos:end="421:32">case <expr pos:start="421:22" pos:end="421:31"><name pos:start="421:22" pos:end="421:31">ACCESS_EXT</name></expr>:</case>

                    <comment type="block" pos:start="423:21" pos:end="423:40">/* eciwx or ecowx */</comment>

                    <expr_stmt pos:start="425:21" pos:end="425:60"><expr pos:start="425:21" pos:end="425:59"><name pos:start="425:21" pos:end="425:40"><name pos:start="425:21" pos:end="425:23">env</name><operator pos:start="425:24" pos:end="425:25">-&gt;</operator><name pos:start="425:26" pos:end="425:40">exception_index</name></name> <operator pos:start="425:42" pos:end="425:42">=</operator> <name pos:start="425:44" pos:end="425:59">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="427:21" pos:end="427:40"><expr pos:start="427:21" pos:end="427:39"><name pos:start="427:21" pos:end="427:35"><name pos:start="427:21" pos:end="427:23">env</name><operator pos:start="427:24" pos:end="427:25">-&gt;</operator><name pos:start="427:26" pos:end="427:35">error_code</name></name> <operator pos:start="427:37" pos:end="427:37">=</operator> <literal type="number" pos:start="427:39" pos:end="427:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="429:21" pos:end="429:48"><expr pos:start="429:21" pos:end="429:47"><name pos:start="429:21" pos:end="429:37"><name pos:start="429:21" pos:end="429:23">env</name><operator pos:start="429:24" pos:end="429:25">-&gt;</operator><name pos:start="429:26" pos:end="429:28">spr</name><index pos:start="429:29" pos:end="429:37">[<expr pos:start="429:30" pos:end="429:36"><name pos:start="429:30" pos:end="429:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="429:39" pos:end="429:39">=</operator> <name pos:start="429:41" pos:end="429:47">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="431:21" pos:end="437:57"><if pos:start="431:21" pos:end="433:57">if <condition pos:start="431:24" pos:end="431:32">(<expr pos:start="431:25" pos:end="431:31"><name pos:start="431:25" pos:end="431:26">rw</name> <operator pos:start="431:28" pos:end="431:29">==</operator> <literal type="number" pos:start="431:31" pos:end="431:31">1</literal></expr>)</condition><block type="pseudo" pos:start="433:25" pos:end="433:57"><block_content pos:start="433:25" pos:end="433:57">

                        <expr_stmt pos:start="433:25" pos:end="433:57"><expr pos:start="433:25" pos:end="433:56"><name pos:start="433:25" pos:end="433:43"><name pos:start="433:25" pos:end="433:27">env</name><operator pos:start="433:28" pos:end="433:29">-&gt;</operator><name pos:start="433:30" pos:end="433:32">spr</name><index pos:start="433:33" pos:end="433:43">[<expr pos:start="433:34" pos:end="433:42"><name pos:start="433:34" pos:end="433:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="433:45" pos:end="433:45">=</operator> <literal type="number" pos:start="433:47" pos:end="433:56">0x06100000</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="435:21" pos:end="437:57">else<block type="pseudo" pos:start="437:25" pos:end="437:57"><block_content pos:start="437:25" pos:end="437:57">

                        <expr_stmt pos:start="437:25" pos:end="437:57"><expr pos:start="437:25" pos:end="437:56"><name pos:start="437:25" pos:end="437:43"><name pos:start="437:25" pos:end="437:27">env</name><operator pos:start="437:28" pos:end="437:29">-&gt;</operator><name pos:start="437:30" pos:end="437:32">spr</name><index pos:start="437:33" pos:end="437:43">[<expr pos:start="437:34" pos:end="437:42"><name pos:start="437:34" pos:end="437:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="437:45" pos:end="437:45">=</operator> <literal type="number" pos:start="437:47" pos:end="437:56">0x04100000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <break pos:start="439:21" pos:end="439:26">break;</break>

                <default pos:start="441:17" pos:end="441:24">default:</default>

                    <expr_stmt pos:start="443:21" pos:end="443:65"><expr pos:start="443:21" pos:end="443:64"><call pos:start="443:21" pos:end="443:64"><name pos:start="443:21" pos:end="443:26">printf</name><argument_list pos:start="443:27" pos:end="443:64">(<argument pos:start="443:28" pos:end="443:58"><expr pos:start="443:28" pos:end="443:58"><literal type="string" pos:start="443:28" pos:end="443:58">"DSI: invalid exception (%d)\n"</literal></expr></argument>, <argument pos:start="443:61" pos:end="443:63"><expr pos:start="443:61" pos:end="443:63"><name pos:start="443:61" pos:end="443:63">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="445:21" pos:end="445:64"><expr pos:start="445:21" pos:end="445:63"><name pos:start="445:21" pos:end="445:40"><name pos:start="445:21" pos:end="445:23">env</name><operator pos:start="445:24" pos:end="445:25">-&gt;</operator><name pos:start="445:26" pos:end="445:40">exception_index</name></name> <operator pos:start="445:42" pos:end="445:42">=</operator> <name pos:start="445:44" pos:end="445:63">POWERPC_EXCP_PROGRAM</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="447:21" pos:end="449:70"><expr pos:start="447:21" pos:end="449:69"><name pos:start="447:21" pos:end="447:35"><name pos:start="447:21" pos:end="447:23">env</name><operator pos:start="447:24" pos:end="447:25">-&gt;</operator><name pos:start="447:26" pos:end="447:35">error_code</name></name> <operator pos:start="447:37" pos:end="447:37">=</operator>

                        <name pos:start="449:25" pos:end="449:42">POWERPC_EXCP_INVAL</name> <operator pos:start="449:44" pos:end="449:44">|</operator> <name pos:start="449:46" pos:end="449:69">POWERPC_EXCP_INVAL_INVAL</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="451:21" pos:end="451:48"><expr pos:start="451:21" pos:end="451:47"><name pos:start="451:21" pos:end="451:37"><name pos:start="451:21" pos:end="451:23">env</name><operator pos:start="451:24" pos:end="451:25">-&gt;</operator><name pos:start="451:26" pos:end="451:28">spr</name><index pos:start="451:29" pos:end="451:37">[<expr pos:start="451:30" pos:end="451:36"><name pos:start="451:30" pos:end="451:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="451:39" pos:end="451:39">=</operator> <name pos:start="451:41" pos:end="451:47">address</name></expr>;</expr_stmt>

                    <break pos:start="453:21" pos:end="453:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="457:17" pos:end="460:0">break;</break>

<cpp:if pos:start="459:1" pos:end="459:25">#<cpp:directive pos:start="459:2" pos:end="459:3">if</cpp:directive> <expr pos:start="459:5" pos:end="459:25"><call pos:start="459:5" pos:end="459:25"><name pos:start="459:5" pos:end="459:11">defined</name><argument_list pos:start="459:12" pos:end="459:25">(<argument pos:start="459:13" pos:end="459:24"><expr pos:start="459:13" pos:end="459:24"><name pos:start="459:13" pos:end="459:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <case pos:start="461:13" pos:end="461:20">case <expr pos:start="461:18" pos:end="461:19"><operator pos:start="461:18" pos:end="461:18">-</operator><literal type="number" pos:start="461:19" pos:end="461:19">5</literal></expr>:</case>

                <comment type="block" pos:start="463:17" pos:end="463:47">/* No match in segment table */</comment>

                <if_stmt pos:start="465:17" pos:end="491:17"><if pos:start="465:17" pos:end="483:17">if <condition pos:start="465:20" pos:end="465:54">(<expr pos:start="465:21" pos:end="465:53"><name pos:start="465:21" pos:end="465:34"><name pos:start="465:21" pos:end="465:23">env</name><operator pos:start="465:24" pos:end="465:25">-&gt;</operator><name pos:start="465:26" pos:end="465:34">mmu_model</name></name> <operator pos:start="465:36" pos:end="465:37">==</operator> <name pos:start="465:39" pos:end="465:53">POWERPC_MMU_620</name></expr>)</condition> <block pos:start="465:56" pos:end="483:17">{<block_content pos:start="467:21" pos:end="481:57">

                    <expr_stmt pos:start="467:21" pos:end="467:60"><expr pos:start="467:21" pos:end="467:59"><name pos:start="467:21" pos:end="467:40"><name pos:start="467:21" pos:end="467:23">env</name><operator pos:start="467:24" pos:end="467:25">-&gt;</operator><name pos:start="467:26" pos:end="467:40">exception_index</name></name> <operator pos:start="467:42" pos:end="467:42">=</operator> <name pos:start="467:44" pos:end="467:59">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="469:21" pos:end="469:40"><expr pos:start="469:21" pos:end="469:39"><name pos:start="469:21" pos:end="469:35"><name pos:start="469:21" pos:end="469:23">env</name><operator pos:start="469:24" pos:end="469:25">-&gt;</operator><name pos:start="469:26" pos:end="469:35">error_code</name></name> <operator pos:start="469:37" pos:end="469:37">=</operator> <literal type="number" pos:start="469:39" pos:end="469:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="471:21" pos:end="471:48"><expr pos:start="471:21" pos:end="471:47"><name pos:start="471:21" pos:end="471:37"><name pos:start="471:21" pos:end="471:23">env</name><operator pos:start="471:24" pos:end="471:25">-&gt;</operator><name pos:start="471:26" pos:end="471:28">spr</name><index pos:start="471:29" pos:end="471:37">[<expr pos:start="471:30" pos:end="471:36"><name pos:start="471:30" pos:end="471:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="471:39" pos:end="471:39">=</operator> <name pos:start="471:41" pos:end="471:47">address</name></expr>;</expr_stmt>

                    <comment type="block" pos:start="473:21" pos:end="473:54">/* XXX: this might be incorrect */</comment>

                    <if_stmt pos:start="475:21" pos:end="481:57"><if pos:start="475:21" pos:end="477:57">if <condition pos:start="475:24" pos:end="475:32">(<expr pos:start="475:25" pos:end="475:31"><name pos:start="475:25" pos:end="475:26">rw</name> <operator pos:start="475:28" pos:end="475:29">==</operator> <literal type="number" pos:start="475:31" pos:end="475:31">1</literal></expr>)</condition><block type="pseudo" pos:start="477:25" pos:end="477:57"><block_content pos:start="477:25" pos:end="477:57">

                        <expr_stmt pos:start="477:25" pos:end="477:57"><expr pos:start="477:25" pos:end="477:56"><name pos:start="477:25" pos:end="477:43"><name pos:start="477:25" pos:end="477:27">env</name><operator pos:start="477:28" pos:end="477:29">-&gt;</operator><name pos:start="477:30" pos:end="477:32">spr</name><index pos:start="477:33" pos:end="477:43">[<expr pos:start="477:34" pos:end="477:42"><name pos:start="477:34" pos:end="477:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="477:45" pos:end="477:45">=</operator> <literal type="number" pos:start="477:47" pos:end="477:56">0x42000000</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="479:21" pos:end="481:57">else<block type="pseudo" pos:start="481:25" pos:end="481:57"><block_content pos:start="481:25" pos:end="481:57">

                        <expr_stmt pos:start="481:25" pos:end="481:57"><expr pos:start="481:25" pos:end="481:56"><name pos:start="481:25" pos:end="481:43"><name pos:start="481:25" pos:end="481:27">env</name><operator pos:start="481:28" pos:end="481:29">-&gt;</operator><name pos:start="481:30" pos:end="481:32">spr</name><index pos:start="481:33" pos:end="481:43">[<expr pos:start="481:34" pos:end="481:42"><name pos:start="481:34" pos:end="481:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="481:45" pos:end="481:45">=</operator> <literal type="number" pos:start="481:47" pos:end="481:56">0x40000000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="483:19" pos:end="491:17">else <block pos:start="483:24" pos:end="491:17">{<block_content pos:start="485:21" pos:end="489:48">

                    <expr_stmt pos:start="485:21" pos:end="485:61"><expr pos:start="485:21" pos:end="485:60"><name pos:start="485:21" pos:end="485:40"><name pos:start="485:21" pos:end="485:23">env</name><operator pos:start="485:24" pos:end="485:25">-&gt;</operator><name pos:start="485:26" pos:end="485:40">exception_index</name></name> <operator pos:start="485:42" pos:end="485:42">=</operator> <name pos:start="485:44" pos:end="485:60">POWERPC_EXCP_DSEG</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="487:21" pos:end="487:40"><expr pos:start="487:21" pos:end="487:39"><name pos:start="487:21" pos:end="487:35"><name pos:start="487:21" pos:end="487:23">env</name><operator pos:start="487:24" pos:end="487:25">-&gt;</operator><name pos:start="487:26" pos:end="487:35">error_code</name></name> <operator pos:start="487:37" pos:end="487:37">=</operator> <literal type="number" pos:start="487:39" pos:end="487:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="489:21" pos:end="489:48"><expr pos:start="489:21" pos:end="489:47"><name pos:start="489:21" pos:end="489:37"><name pos:start="489:21" pos:end="489:23">env</name><operator pos:start="489:24" pos:end="489:25">-&gt;</operator><name pos:start="489:26" pos:end="489:28">spr</name><index pos:start="489:29" pos:end="489:37">[<expr pos:start="489:30" pos:end="489:36"><name pos:start="489:30" pos:end="489:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="489:39" pos:end="489:39">=</operator> <name pos:start="489:41" pos:end="489:47">address</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="493:17" pos:end="496:0">break;</break>

<cpp:endif pos:start="495:1" pos:end="495:6">#<cpp:directive pos:start="495:2" pos:end="495:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

<cpp:if pos:start="501:1" pos:end="501:5">#<cpp:directive pos:start="501:2" pos:end="501:3">if</cpp:directive> <expr pos:start="501:5" pos:end="501:5"><literal type="number" pos:start="501:5" pos:end="501:5">0</literal></expr></cpp:if>

        printf("%s: set exception to %d %02x\n", __func__,

               env-&gt;exception, env-&gt;error_code);

<cpp:endif pos:start="507:1" pos:end="507:6">#<cpp:directive pos:start="507:2" pos:end="507:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="509:9" pos:end="509:16"><expr pos:start="509:9" pos:end="509:15"><name pos:start="509:9" pos:end="509:11">ret</name> <operator pos:start="509:13" pos:end="509:13">=</operator> <literal type="number" pos:start="509:15" pos:end="509:15">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="515:5" pos:end="515:15">return <expr pos:start="515:12" pos:end="515:14"><name pos:start="515:12" pos:end="515:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
