<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19010.c" pos:tabs="8"><function pos:start="1:1" pos:end="575:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">ff_print_debug_info</name><parameter_list pos:start="1:25" pos:end="1:58">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:39">MpegEncContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:51">AVFrame</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">pict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="575:1">{<block_content pos:start="5:5" pos:end="573:5">

    <if_stmt pos:start="5:5" pos:end="9:15"><if pos:start="5:5" pos:end="9:15">if <condition pos:start="5:8" pos:end="7:67">(   <expr pos:start="5:12" pos:end="7:66"><name pos:start="5:12" pos:end="5:28"><name pos:start="5:12" pos:end="5:12">s</name><operator pos:start="5:13" pos:end="5:14">-&gt;</operator><name pos:start="5:15" pos:end="5:19">avctx</name><operator pos:start="5:20" pos:end="5:21">-&gt;</operator><name pos:start="5:22" pos:end="5:28">hwaccel</name></name> <operator pos:start="5:30" pos:end="5:31">||</operator> <operator pos:start="5:33" pos:end="5:33">!</operator><name pos:start="5:34" pos:end="5:37">pict</name> <operator pos:start="5:39" pos:end="5:40">||</operator> <operator pos:start="5:42" pos:end="5:42">!</operator><name pos:start="5:43" pos:end="5:55"><name pos:start="5:43" pos:end="5:46">pict</name><operator pos:start="5:47" pos:end="5:48">-&gt;</operator><name pos:start="5:49" pos:end="5:55">mb_type</name></name>

        <operator pos:start="7:9" pos:end="7:10">||</operator> <operator pos:start="7:12" pos:end="7:12">(</operator><name pos:start="7:13" pos:end="7:41"><name pos:start="7:13" pos:end="7:13">s</name><operator pos:start="7:14" pos:end="7:15">-&gt;</operator><name pos:start="7:16" pos:end="7:20">avctx</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:27">codec</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:41">capabilities</name></name><operator pos:start="7:42" pos:end="7:42">&amp;</operator><name pos:start="7:43" pos:end="7:65">CODEC_CAP_HWACCEL_VDPAU</name><operator pos:start="7:66" pos:end="7:66">)</operator></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:15"><block_content pos:start="9:9" pos:end="9:15">

        <return pos:start="9:9" pos:end="9:15">return;</return></block_content></block></if></if_stmt>





    <if_stmt pos:start="15:5" pos:end="151:5"><if pos:start="15:5" pos:end="151:5">if <condition pos:start="15:8" pos:end="15:75">(<expr pos:start="15:9" pos:end="15:74"><name pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:16">avctx</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:23">debug</name></name> <operator pos:start="15:25" pos:end="15:25">&amp;</operator> <operator pos:start="15:27" pos:end="15:27">(</operator><name pos:start="15:28" pos:end="15:40">FF_DEBUG_SKIP</name> <operator pos:start="15:42" pos:end="15:42">|</operator> <name pos:start="15:44" pos:end="15:54">FF_DEBUG_QP</name> <operator pos:start="15:56" pos:end="15:56">|</operator> <name pos:start="15:58" pos:end="15:73">FF_DEBUG_MB_TYPE</name><operator pos:start="15:74" pos:end="15:74">)</operator></expr>)</condition> <block pos:start="15:77" pos:end="151:5">{<block_content pos:start="17:9" pos:end="149:9">

        <decl_stmt pos:start="17:9" pos:end="17:16"><decl pos:start="17:9" pos:end="17:13"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">x</name></decl>,<decl pos:start="17:15" pos:end="17:15"><type ref="prev" pos:start="17:9" pos:end="17:11"/><name pos:start="17:15" pos:end="17:15">y</name></decl>;</decl_stmt>



        <expr_stmt pos:start="21:9" pos:end="23:58"><expr pos:start="21:9" pos:end="23:57"><call pos:start="21:9" pos:end="23:57"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="23:57">(<argument pos:start="21:16" pos:end="21:23"><expr pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:23">avctx</name></name></expr></argument>, <argument pos:start="21:26" pos:end="21:37"><expr pos:start="21:26" pos:end="21:37"><name pos:start="21:26" pos:end="21:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="21:40" pos:end="21:62"><expr pos:start="21:40" pos:end="21:62"><literal type="string" pos:start="21:40" pos:end="21:62">"New frame, type: %c\n"</literal></expr></argument>,

               <argument pos:start="23:16" pos:end="23:56"><expr pos:start="23:16" pos:end="23:56"><call pos:start="23:16" pos:end="23:56"><name pos:start="23:16" pos:end="23:39">av_get_picture_type_char</name><argument_list pos:start="23:40" pos:end="23:56">(<argument pos:start="23:41" pos:end="23:55"><expr pos:start="23:41" pos:end="23:55"><name pos:start="23:41" pos:end="23:55"><name pos:start="23:41" pos:end="23:44">pict</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:55">pict_type</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="25:9" pos:end="149:9">for <control pos:start="25:13" pos:end="25:42">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">y</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:37"><expr pos:start="25:21" pos:end="25:36"><name pos:start="25:21" pos:end="25:21">y</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <name pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:36">mb_height</name></name></expr>;</condition> <incr pos:start="25:39" pos:end="25:41"><expr pos:start="25:39" pos:end="25:41"><name pos:start="25:39" pos:end="25:39">y</name><operator pos:start="25:40" pos:end="25:41">++</operator></expr></incr>)</control> <block pos:start="25:44" pos:end="149:9">{<block_content pos:start="27:13" pos:end="147:49">

            <for pos:start="27:13" pos:end="145:13">for <control pos:start="27:17" pos:end="27:45">(<init pos:start="27:18" pos:end="27:23"><expr pos:start="27:18" pos:end="27:22"><name pos:start="27:18" pos:end="27:18">x</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr>;</init> <condition pos:start="27:25" pos:end="27:40"><expr pos:start="27:25" pos:end="27:39"><name pos:start="27:25" pos:end="27:25">x</name> <operator pos:start="27:27" pos:end="27:27">&lt;</operator> <name pos:start="27:29" pos:end="27:39"><name pos:start="27:29" pos:end="27:29">s</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:39">mb_width</name></name></expr>;</condition> <incr pos:start="27:42" pos:end="27:44"><expr pos:start="27:42" pos:end="27:44"><name pos:start="27:42" pos:end="27:42">x</name><operator pos:start="27:43" pos:end="27:44">++</operator></expr></incr>)</control> <block pos:start="27:47" pos:end="145:13">{<block_content pos:start="29:17" pos:end="143:17">

                <if_stmt pos:start="29:17" pos:end="39:17"><if pos:start="29:17" pos:end="39:17">if <condition pos:start="29:20" pos:end="29:52">(<expr pos:start="29:21" pos:end="29:51"><name pos:start="29:21" pos:end="29:35"><name pos:start="29:21" pos:end="29:21">s</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:28">avctx</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:35">debug</name></name> <operator pos:start="29:37" pos:end="29:37">&amp;</operator> <name pos:start="29:39" pos:end="29:51">FF_DEBUG_SKIP</name></expr>)</condition> <block pos:start="29:54" pos:end="39:17">{<block_content pos:start="31:21" pos:end="37:65">

                    <decl_stmt pos:start="31:21" pos:end="31:70"><decl pos:start="31:21" pos:end="31:69"><type pos:start="31:21" pos:end="31:23"><name pos:start="31:21" pos:end="31:23">int</name></type> <name pos:start="31:25" pos:end="31:29">count</name> <init pos:start="31:31" pos:end="31:69">= <expr pos:start="31:33" pos:end="31:69"><name pos:start="31:33" pos:end="31:69"><name pos:start="31:33" pos:end="31:33">s</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:47">mbskip_table</name><index pos:start="31:48" pos:end="31:69">[<expr pos:start="31:49" pos:end="31:68"><name pos:start="31:49" pos:end="31:49">x</name> <operator pos:start="31:51" pos:end="31:51">+</operator> <name pos:start="31:53" pos:end="31:53">y</name> <operator pos:start="31:55" pos:end="31:55">*</operator> <name pos:start="31:57" pos:end="31:68"><name pos:start="31:57" pos:end="31:57">s</name><operator pos:start="31:58" pos:end="31:59">-&gt;</operator><name pos:start="31:60" pos:end="31:68">mb_stride</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="33:21" pos:end="35:34"><if pos:start="33:21" pos:end="35:34">if <condition pos:start="33:24" pos:end="33:34">(<expr pos:start="33:25" pos:end="33:33"><name pos:start="33:25" pos:end="33:29">count</name> <operator pos:start="33:31" pos:end="33:31">&gt;</operator> <literal type="number" pos:start="33:33" pos:end="33:33">9</literal></expr>)</condition><block type="pseudo" pos:start="35:25" pos:end="35:34"><block_content pos:start="35:25" pos:end="35:34">

                        <expr_stmt pos:start="35:25" pos:end="35:34"><expr pos:start="35:25" pos:end="35:33"><name pos:start="35:25" pos:end="35:29">count</name> <operator pos:start="35:31" pos:end="35:31">=</operator> <literal type="number" pos:start="35:33" pos:end="35:33">9</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="37:21" pos:end="37:65"><expr pos:start="37:21" pos:end="37:64"><call pos:start="37:21" pos:end="37:64"><name pos:start="37:21" pos:end="37:26">av_log</name><argument_list pos:start="37:27" pos:end="37:64">(<argument pos:start="37:28" pos:end="37:35"><expr pos:start="37:28" pos:end="37:35"><name pos:start="37:28" pos:end="37:35"><name pos:start="37:28" pos:end="37:28">s</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:35">avctx</name></name></expr></argument>, <argument pos:start="37:38" pos:end="37:49"><expr pos:start="37:38" pos:end="37:49"><name pos:start="37:38" pos:end="37:49">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="37:52" pos:end="37:56"><expr pos:start="37:52" pos:end="37:56"><literal type="string" pos:start="37:52" pos:end="37:56">"%1d"</literal></expr></argument>, <argument pos:start="37:59" pos:end="37:63"><expr pos:start="37:59" pos:end="37:63"><name pos:start="37:59" pos:end="37:63">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="41:17" pos:end="47:17"><if pos:start="41:17" pos:end="47:17">if <condition pos:start="41:20" pos:end="41:50">(<expr pos:start="41:21" pos:end="41:49"><name pos:start="41:21" pos:end="41:35"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:28">avctx</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:35">debug</name></name> <operator pos:start="41:37" pos:end="41:37">&amp;</operator> <name pos:start="41:39" pos:end="41:49">FF_DEBUG_QP</name></expr>)</condition> <block pos:start="41:52" pos:end="47:17">{<block_content pos:start="43:21" pos:end="45:69">

                    <expr_stmt pos:start="43:21" pos:end="45:69"><expr pos:start="43:21" pos:end="45:68"><call pos:start="43:21" pos:end="45:68"><name pos:start="43:21" pos:end="43:26">av_log</name><argument_list pos:start="43:27" pos:end="45:68">(<argument pos:start="43:28" pos:end="43:35"><expr pos:start="43:28" pos:end="43:35"><name pos:start="43:28" pos:end="43:35"><name pos:start="43:28" pos:end="43:28">s</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:35">avctx</name></name></expr></argument>, <argument pos:start="43:38" pos:end="43:49"><expr pos:start="43:38" pos:end="43:49"><name pos:start="43:38" pos:end="43:49">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="43:52" pos:end="43:56"><expr pos:start="43:52" pos:end="43:56"><literal type="string" pos:start="43:52" pos:end="43:56">"%2d"</literal></expr></argument>,

                           <argument pos:start="45:28" pos:end="45:67"><expr pos:start="45:28" pos:end="45:67"><name pos:start="45:28" pos:end="45:67"><name pos:start="45:28" pos:end="45:31">pict</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:45">qscale_table</name><index pos:start="45:46" pos:end="45:67">[<expr pos:start="45:47" pos:end="45:66"><name pos:start="45:47" pos:end="45:47">x</name> <operator pos:start="45:49" pos:end="45:49">+</operator> <name pos:start="45:51" pos:end="45:51">y</name> <operator pos:start="45:53" pos:end="45:53">*</operator> <name pos:start="45:55" pos:end="45:66"><name pos:start="45:55" pos:end="45:55">s</name><operator pos:start="45:56" pos:end="45:57">-&gt;</operator><name pos:start="45:58" pos:end="45:66">mb_stride</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="49:17" pos:end="143:17"><if pos:start="49:17" pos:end="143:17">if <condition pos:start="49:20" pos:end="49:55">(<expr pos:start="49:21" pos:end="49:54"><name pos:start="49:21" pos:end="49:35"><name pos:start="49:21" pos:end="49:21">s</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:28">avctx</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:35">debug</name></name> <operator pos:start="49:37" pos:end="49:37">&amp;</operator> <name pos:start="49:39" pos:end="49:54">FF_DEBUG_MB_TYPE</name></expr>)</condition> <block pos:start="49:57" pos:end="143:17">{<block_content pos:start="51:21" pos:end="141:60">

                    <decl_stmt pos:start="51:21" pos:end="51:70"><decl pos:start="51:21" pos:end="51:69"><type pos:start="51:21" pos:end="51:23"><name pos:start="51:21" pos:end="51:23">int</name></type> <name pos:start="51:25" pos:end="51:31">mb_type</name> <init pos:start="51:33" pos:end="51:69">= <expr pos:start="51:35" pos:end="51:69"><name pos:start="51:35" pos:end="51:69"><name pos:start="51:35" pos:end="51:38">pict</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:47">mb_type</name><index pos:start="51:48" pos:end="51:69">[<expr pos:start="51:49" pos:end="51:68"><name pos:start="51:49" pos:end="51:49">x</name> <operator pos:start="51:51" pos:end="51:51">+</operator> <name pos:start="51:53" pos:end="51:53">y</name> <operator pos:start="51:55" pos:end="51:55">*</operator> <name pos:start="51:57" pos:end="51:68"><name pos:start="51:57" pos:end="51:57">s</name><operator pos:start="51:58" pos:end="51:59">-&gt;</operator><name pos:start="51:60" pos:end="51:68">mb_stride</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <comment type="line" pos:start="53:21" pos:end="53:42">// Type &amp; MV direction</comment>

                    <if_stmt pos:start="55:21" pos:end="105:21"><if pos:start="55:21" pos:end="57:60">if <condition pos:start="55:24" pos:end="55:40">(<expr pos:start="55:25" pos:end="55:39"><call pos:start="55:25" pos:end="55:39"><name pos:start="55:25" pos:end="55:30">IS_PCM</name><argument_list pos:start="55:31" pos:end="55:39">(<argument pos:start="55:32" pos:end="55:38"><expr pos:start="55:32" pos:end="55:38"><name pos:start="55:32" pos:end="55:38">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:25" pos:end="57:60"><block_content pos:start="57:25" pos:end="57:60">

                        <expr_stmt pos:start="57:25" pos:end="57:60"><expr pos:start="57:25" pos:end="57:59"><call pos:start="57:25" pos:end="57:59"><name pos:start="57:25" pos:end="57:30">av_log</name><argument_list pos:start="57:31" pos:end="57:59">(<argument pos:start="57:32" pos:end="57:39"><expr pos:start="57:32" pos:end="57:39"><name pos:start="57:32" pos:end="57:39"><name pos:start="57:32" pos:end="57:32">s</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:39">avctx</name></name></expr></argument>, <argument pos:start="57:42" pos:end="57:53"><expr pos:start="57:42" pos:end="57:53"><name pos:start="57:42" pos:end="57:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="57:56" pos:end="57:58"><expr pos:start="57:56" pos:end="57:58"><literal type="string" pos:start="57:56" pos:end="57:58">"P"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="59:21" pos:end="61:60">else if <condition pos:start="59:29" pos:end="59:69">(<expr pos:start="59:30" pos:end="59:68"><call pos:start="59:30" pos:end="59:46"><name pos:start="59:30" pos:end="59:37">IS_INTRA</name><argument_list pos:start="59:38" pos:end="59:46">(<argument pos:start="59:39" pos:end="59:45"><expr pos:start="59:39" pos:end="59:45"><name pos:start="59:39" pos:end="59:45">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="59:48" pos:end="59:49">&amp;&amp;</operator> <call pos:start="59:51" pos:end="59:68"><name pos:start="59:51" pos:end="59:59">IS_ACPRED</name><argument_list pos:start="59:60" pos:end="59:68">(<argument pos:start="59:61" pos:end="59:67"><expr pos:start="59:61" pos:end="59:67"><name pos:start="59:61" pos:end="59:67">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:25" pos:end="61:60"><block_content pos:start="61:25" pos:end="61:60">

                        <expr_stmt pos:start="61:25" pos:end="61:60"><expr pos:start="61:25" pos:end="61:59"><call pos:start="61:25" pos:end="61:59"><name pos:start="61:25" pos:end="61:30">av_log</name><argument_list pos:start="61:31" pos:end="61:59">(<argument pos:start="61:32" pos:end="61:39"><expr pos:start="61:32" pos:end="61:39"><name pos:start="61:32" pos:end="61:39"><name pos:start="61:32" pos:end="61:32">s</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:39">avctx</name></name></expr></argument>, <argument pos:start="61:42" pos:end="61:53"><expr pos:start="61:42" pos:end="61:53"><name pos:start="61:42" pos:end="61:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="61:56" pos:end="61:58"><expr pos:start="61:56" pos:end="61:58"><literal type="string" pos:start="61:56" pos:end="61:58">"A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="63:21" pos:end="65:60">else if <condition pos:start="63:29" pos:end="63:50">(<expr pos:start="63:30" pos:end="63:49"><call pos:start="63:30" pos:end="63:49"><name pos:start="63:30" pos:end="63:40">IS_INTRA4x4</name><argument_list pos:start="63:41" pos:end="63:49">(<argument pos:start="63:42" pos:end="63:48"><expr pos:start="63:42" pos:end="63:48"><name pos:start="63:42" pos:end="63:48">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="65:25" pos:end="65:60"><block_content pos:start="65:25" pos:end="65:60">

                        <expr_stmt pos:start="65:25" pos:end="65:60"><expr pos:start="65:25" pos:end="65:59"><call pos:start="65:25" pos:end="65:59"><name pos:start="65:25" pos:end="65:30">av_log</name><argument_list pos:start="65:31" pos:end="65:59">(<argument pos:start="65:32" pos:end="65:39"><expr pos:start="65:32" pos:end="65:39"><name pos:start="65:32" pos:end="65:39"><name pos:start="65:32" pos:end="65:32">s</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:39">avctx</name></name></expr></argument>, <argument pos:start="65:42" pos:end="65:53"><expr pos:start="65:42" pos:end="65:53"><name pos:start="65:42" pos:end="65:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="65:56" pos:end="65:58"><expr pos:start="65:56" pos:end="65:58"><literal type="string" pos:start="65:56" pos:end="65:58">"i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="67:21" pos:end="69:60">else if <condition pos:start="67:29" pos:end="67:52">(<expr pos:start="67:30" pos:end="67:51"><call pos:start="67:30" pos:end="67:51"><name pos:start="67:30" pos:end="67:42">IS_INTRA16x16</name><argument_list pos:start="67:43" pos:end="67:51">(<argument pos:start="67:44" pos:end="67:50"><expr pos:start="67:44" pos:end="67:50"><name pos:start="67:44" pos:end="67:50">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="69:25" pos:end="69:60"><block_content pos:start="69:25" pos:end="69:60">

                        <expr_stmt pos:start="69:25" pos:end="69:60"><expr pos:start="69:25" pos:end="69:59"><call pos:start="69:25" pos:end="69:59"><name pos:start="69:25" pos:end="69:30">av_log</name><argument_list pos:start="69:31" pos:end="69:59">(<argument pos:start="69:32" pos:end="69:39"><expr pos:start="69:32" pos:end="69:39"><name pos:start="69:32" pos:end="69:39"><name pos:start="69:32" pos:end="69:32">s</name><operator pos:start="69:33" pos:end="69:34">-&gt;</operator><name pos:start="69:35" pos:end="69:39">avctx</name></name></expr></argument>, <argument pos:start="69:42" pos:end="69:53"><expr pos:start="69:42" pos:end="69:53"><name pos:start="69:42" pos:end="69:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="69:56" pos:end="69:58"><expr pos:start="69:56" pos:end="69:58"><literal type="string" pos:start="69:56" pos:end="69:58">"I"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="71:21" pos:end="73:60">else if <condition pos:start="71:29" pos:end="71:68">(<expr pos:start="71:30" pos:end="71:67"><call pos:start="71:30" pos:end="71:47"><name pos:start="71:30" pos:end="71:38">IS_DIRECT</name><argument_list pos:start="71:39" pos:end="71:47">(<argument pos:start="71:40" pos:end="71:46"><expr pos:start="71:40" pos:end="71:46"><name pos:start="71:40" pos:end="71:46">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="71:49" pos:end="71:50">&amp;&amp;</operator> <call pos:start="71:52" pos:end="71:67"><name pos:start="71:52" pos:end="71:58">IS_SKIP</name><argument_list pos:start="71:59" pos:end="71:67">(<argument pos:start="71:60" pos:end="71:66"><expr pos:start="71:60" pos:end="71:66"><name pos:start="71:60" pos:end="71:66">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="73:25" pos:end="73:60"><block_content pos:start="73:25" pos:end="73:60">

                        <expr_stmt pos:start="73:25" pos:end="73:60"><expr pos:start="73:25" pos:end="73:59"><call pos:start="73:25" pos:end="73:59"><name pos:start="73:25" pos:end="73:30">av_log</name><argument_list pos:start="73:31" pos:end="73:59">(<argument pos:start="73:32" pos:end="73:39"><expr pos:start="73:32" pos:end="73:39"><name pos:start="73:32" pos:end="73:39"><name pos:start="73:32" pos:end="73:32">s</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:39">avctx</name></name></expr></argument>, <argument pos:start="73:42" pos:end="73:53"><expr pos:start="73:42" pos:end="73:53"><name pos:start="73:42" pos:end="73:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="73:56" pos:end="73:58"><expr pos:start="73:56" pos:end="73:58"><literal type="string" pos:start="73:56" pos:end="73:58">"d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="75:21" pos:end="77:60">else if <condition pos:start="75:29" pos:end="75:48">(<expr pos:start="75:30" pos:end="75:47"><call pos:start="75:30" pos:end="75:47"><name pos:start="75:30" pos:end="75:38">IS_DIRECT</name><argument_list pos:start="75:39" pos:end="75:47">(<argument pos:start="75:40" pos:end="75:46"><expr pos:start="75:40" pos:end="75:46"><name pos:start="75:40" pos:end="75:46">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="77:25" pos:end="77:60"><block_content pos:start="77:25" pos:end="77:60">

                        <expr_stmt pos:start="77:25" pos:end="77:60"><expr pos:start="77:25" pos:end="77:59"><call pos:start="77:25" pos:end="77:59"><name pos:start="77:25" pos:end="77:30">av_log</name><argument_list pos:start="77:31" pos:end="77:59">(<argument pos:start="77:32" pos:end="77:39"><expr pos:start="77:32" pos:end="77:39"><name pos:start="77:32" pos:end="77:39"><name pos:start="77:32" pos:end="77:32">s</name><operator pos:start="77:33" pos:end="77:34">-&gt;</operator><name pos:start="77:35" pos:end="77:39">avctx</name></name></expr></argument>, <argument pos:start="77:42" pos:end="77:53"><expr pos:start="77:42" pos:end="77:53"><name pos:start="77:42" pos:end="77:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="77:56" pos:end="77:58"><expr pos:start="77:56" pos:end="77:58"><literal type="string" pos:start="77:56" pos:end="77:58">"D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="79:21" pos:end="81:60">else if <condition pos:start="79:29" pos:end="79:65">(<expr pos:start="79:30" pos:end="79:64"><call pos:start="79:30" pos:end="79:44"><name pos:start="79:30" pos:end="79:35">IS_GMC</name><argument_list pos:start="79:36" pos:end="79:44">(<argument pos:start="79:37" pos:end="79:43"><expr pos:start="79:37" pos:end="79:43"><name pos:start="79:37" pos:end="79:43">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="79:46" pos:end="79:47">&amp;&amp;</operator> <call pos:start="79:49" pos:end="79:64"><name pos:start="79:49" pos:end="79:55">IS_SKIP</name><argument_list pos:start="79:56" pos:end="79:64">(<argument pos:start="79:57" pos:end="79:63"><expr pos:start="79:57" pos:end="79:63"><name pos:start="79:57" pos:end="79:63">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="81:25" pos:end="81:60"><block_content pos:start="81:25" pos:end="81:60">

                        <expr_stmt pos:start="81:25" pos:end="81:60"><expr pos:start="81:25" pos:end="81:59"><call pos:start="81:25" pos:end="81:59"><name pos:start="81:25" pos:end="81:30">av_log</name><argument_list pos:start="81:31" pos:end="81:59">(<argument pos:start="81:32" pos:end="81:39"><expr pos:start="81:32" pos:end="81:39"><name pos:start="81:32" pos:end="81:39"><name pos:start="81:32" pos:end="81:32">s</name><operator pos:start="81:33" pos:end="81:34">-&gt;</operator><name pos:start="81:35" pos:end="81:39">avctx</name></name></expr></argument>, <argument pos:start="81:42" pos:end="81:53"><expr pos:start="81:42" pos:end="81:53"><name pos:start="81:42" pos:end="81:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="81:56" pos:end="81:58"><expr pos:start="81:56" pos:end="81:58"><literal type="string" pos:start="81:56" pos:end="81:58">"g"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="83:21" pos:end="85:60">else if <condition pos:start="83:29" pos:end="83:45">(<expr pos:start="83:30" pos:end="83:44"><call pos:start="83:30" pos:end="83:44"><name pos:start="83:30" pos:end="83:35">IS_GMC</name><argument_list pos:start="83:36" pos:end="83:44">(<argument pos:start="83:37" pos:end="83:43"><expr pos:start="83:37" pos:end="83:43"><name pos:start="83:37" pos:end="83:43">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="85:25" pos:end="85:60"><block_content pos:start="85:25" pos:end="85:60">

                        <expr_stmt pos:start="85:25" pos:end="85:60"><expr pos:start="85:25" pos:end="85:59"><call pos:start="85:25" pos:end="85:59"><name pos:start="85:25" pos:end="85:30">av_log</name><argument_list pos:start="85:31" pos:end="85:59">(<argument pos:start="85:32" pos:end="85:39"><expr pos:start="85:32" pos:end="85:39"><name pos:start="85:32" pos:end="85:39"><name pos:start="85:32" pos:end="85:32">s</name><operator pos:start="85:33" pos:end="85:34">-&gt;</operator><name pos:start="85:35" pos:end="85:39">avctx</name></name></expr></argument>, <argument pos:start="85:42" pos:end="85:53"><expr pos:start="85:42" pos:end="85:53"><name pos:start="85:42" pos:end="85:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="85:56" pos:end="85:58"><expr pos:start="85:56" pos:end="85:58"><literal type="string" pos:start="85:56" pos:end="85:58">"G"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="87:21" pos:end="89:60">else if <condition pos:start="87:29" pos:end="87:46">(<expr pos:start="87:30" pos:end="87:45"><call pos:start="87:30" pos:end="87:45"><name pos:start="87:30" pos:end="87:36">IS_SKIP</name><argument_list pos:start="87:37" pos:end="87:45">(<argument pos:start="87:38" pos:end="87:44"><expr pos:start="87:38" pos:end="87:44"><name pos:start="87:38" pos:end="87:44">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="89:25" pos:end="89:60"><block_content pos:start="89:25" pos:end="89:60">

                        <expr_stmt pos:start="89:25" pos:end="89:60"><expr pos:start="89:25" pos:end="89:59"><call pos:start="89:25" pos:end="89:59"><name pos:start="89:25" pos:end="89:30">av_log</name><argument_list pos:start="89:31" pos:end="89:59">(<argument pos:start="89:32" pos:end="89:39"><expr pos:start="89:32" pos:end="89:39"><name pos:start="89:32" pos:end="89:39"><name pos:start="89:32" pos:end="89:32">s</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:39">avctx</name></name></expr></argument>, <argument pos:start="89:42" pos:end="89:53"><expr pos:start="89:42" pos:end="89:53"><name pos:start="89:42" pos:end="89:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="89:56" pos:end="89:58"><expr pos:start="89:56" pos:end="89:58"><literal type="string" pos:start="89:56" pos:end="89:58">"S"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="91:21" pos:end="93:60">else if <condition pos:start="91:29" pos:end="91:52">(<expr pos:start="91:30" pos:end="91:51"><operator pos:start="91:30" pos:end="91:30">!</operator><call pos:start="91:31" pos:end="91:51"><name pos:start="91:31" pos:end="91:39">USES_LIST</name><argument_list pos:start="91:40" pos:end="91:51">(<argument pos:start="91:41" pos:end="91:47"><expr pos:start="91:41" pos:end="91:47"><name pos:start="91:41" pos:end="91:47">mb_type</name></expr></argument>, <argument pos:start="91:50" pos:end="91:50"><expr pos:start="91:50" pos:end="91:50"><literal type="number" pos:start="91:50" pos:end="91:50">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="93:25" pos:end="93:60"><block_content pos:start="93:25" pos:end="93:60">

                        <expr_stmt pos:start="93:25" pos:end="93:60"><expr pos:start="93:25" pos:end="93:59"><call pos:start="93:25" pos:end="93:59"><name pos:start="93:25" pos:end="93:30">av_log</name><argument_list pos:start="93:31" pos:end="93:59">(<argument pos:start="93:32" pos:end="93:39"><expr pos:start="93:32" pos:end="93:39"><name pos:start="93:32" pos:end="93:39"><name pos:start="93:32" pos:end="93:32">s</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:39">avctx</name></name></expr></argument>, <argument pos:start="93:42" pos:end="93:53"><expr pos:start="93:42" pos:end="93:53"><name pos:start="93:42" pos:end="93:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="93:56" pos:end="93:58"><expr pos:start="93:56" pos:end="93:58"><literal type="string" pos:start="93:56" pos:end="93:58">"&gt;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="95:21" pos:end="97:60">else if <condition pos:start="95:29" pos:end="95:52">(<expr pos:start="95:30" pos:end="95:51"><operator pos:start="95:30" pos:end="95:30">!</operator><call pos:start="95:31" pos:end="95:51"><name pos:start="95:31" pos:end="95:39">USES_LIST</name><argument_list pos:start="95:40" pos:end="95:51">(<argument pos:start="95:41" pos:end="95:47"><expr pos:start="95:41" pos:end="95:47"><name pos:start="95:41" pos:end="95:47">mb_type</name></expr></argument>, <argument pos:start="95:50" pos:end="95:50"><expr pos:start="95:50" pos:end="95:50"><literal type="number" pos:start="95:50" pos:end="95:50">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="97:25" pos:end="97:60"><block_content pos:start="97:25" pos:end="97:60">

                        <expr_stmt pos:start="97:25" pos:end="97:60"><expr pos:start="97:25" pos:end="97:59"><call pos:start="97:25" pos:end="97:59"><name pos:start="97:25" pos:end="97:30">av_log</name><argument_list pos:start="97:31" pos:end="97:59">(<argument pos:start="97:32" pos:end="97:39"><expr pos:start="97:32" pos:end="97:39"><name pos:start="97:32" pos:end="97:39"><name pos:start="97:32" pos:end="97:32">s</name><operator pos:start="97:33" pos:end="97:34">-&gt;</operator><name pos:start="97:35" pos:end="97:39">avctx</name></name></expr></argument>, <argument pos:start="97:42" pos:end="97:53"><expr pos:start="97:42" pos:end="97:53"><name pos:start="97:42" pos:end="97:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="97:56" pos:end="97:58"><expr pos:start="97:56" pos:end="97:58"><literal type="string" pos:start="97:56" pos:end="97:58">"&lt;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="99:21" pos:end="105:21">else <block pos:start="99:26" pos:end="105:21">{<block_content pos:start="101:25" pos:end="103:60">

                        <expr_stmt pos:start="101:25" pos:end="101:83"><expr pos:start="101:25" pos:end="101:82"><call pos:start="101:25" pos:end="101:82"><name pos:start="101:25" pos:end="101:34">av_assert2</name><argument_list pos:start="101:35" pos:end="101:82">(<argument pos:start="101:36" pos:end="101:81"><expr pos:start="101:36" pos:end="101:81"><call pos:start="101:36" pos:end="101:56"><name pos:start="101:36" pos:end="101:44">USES_LIST</name><argument_list pos:start="101:45" pos:end="101:56">(<argument pos:start="101:46" pos:end="101:52"><expr pos:start="101:46" pos:end="101:52"><name pos:start="101:46" pos:end="101:52">mb_type</name></expr></argument>, <argument pos:start="101:55" pos:end="101:55"><expr pos:start="101:55" pos:end="101:55"><literal type="number" pos:start="101:55" pos:end="101:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="101:58" pos:end="101:59">&amp;&amp;</operator> <call pos:start="101:61" pos:end="101:81"><name pos:start="101:61" pos:end="101:69">USES_LIST</name><argument_list pos:start="101:70" pos:end="101:81">(<argument pos:start="101:71" pos:end="101:77"><expr pos:start="101:71" pos:end="101:77"><name pos:start="101:71" pos:end="101:77">mb_type</name></expr></argument>, <argument pos:start="101:80" pos:end="101:80"><expr pos:start="101:80" pos:end="101:80"><literal type="number" pos:start="101:80" pos:end="101:80">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="103:25" pos:end="103:60"><expr pos:start="103:25" pos:end="103:59"><call pos:start="103:25" pos:end="103:59"><name pos:start="103:25" pos:end="103:30">av_log</name><argument_list pos:start="103:31" pos:end="103:59">(<argument pos:start="103:32" pos:end="103:39"><expr pos:start="103:32" pos:end="103:39"><name pos:start="103:32" pos:end="103:39"><name pos:start="103:32" pos:end="103:32">s</name><operator pos:start="103:33" pos:end="103:34">-&gt;</operator><name pos:start="103:35" pos:end="103:39">avctx</name></name></expr></argument>, <argument pos:start="103:42" pos:end="103:53"><expr pos:start="103:42" pos:end="103:53"><name pos:start="103:42" pos:end="103:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="103:56" pos:end="103:58"><expr pos:start="103:56" pos:end="103:58"><literal type="string" pos:start="103:56" pos:end="103:58">"X"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>



                    <comment type="line" pos:start="109:21" pos:end="109:35">// segmentation</comment>

                    <if_stmt pos:start="111:21" pos:end="129:60"><if pos:start="111:21" pos:end="113:60">if <condition pos:start="111:24" pos:end="111:40">(<expr pos:start="111:25" pos:end="111:39"><call pos:start="111:25" pos:end="111:39"><name pos:start="111:25" pos:end="111:30">IS_8X8</name><argument_list pos:start="111:31" pos:end="111:39">(<argument pos:start="111:32" pos:end="111:38"><expr pos:start="111:32" pos:end="111:38"><name pos:start="111:32" pos:end="111:38">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="113:25" pos:end="113:60"><block_content pos:start="113:25" pos:end="113:60">

                        <expr_stmt pos:start="113:25" pos:end="113:60"><expr pos:start="113:25" pos:end="113:59"><call pos:start="113:25" pos:end="113:59"><name pos:start="113:25" pos:end="113:30">av_log</name><argument_list pos:start="113:31" pos:end="113:59">(<argument pos:start="113:32" pos:end="113:39"><expr pos:start="113:32" pos:end="113:39"><name pos:start="113:32" pos:end="113:39"><name pos:start="113:32" pos:end="113:32">s</name><operator pos:start="113:33" pos:end="113:34">-&gt;</operator><name pos:start="113:35" pos:end="113:39">avctx</name></name></expr></argument>, <argument pos:start="113:42" pos:end="113:53"><expr pos:start="113:42" pos:end="113:53"><name pos:start="113:42" pos:end="113:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="113:56" pos:end="113:58"><expr pos:start="113:56" pos:end="113:58"><literal type="string" pos:start="113:56" pos:end="113:58">"+"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="115:21" pos:end="117:60">else if <condition pos:start="115:29" pos:end="115:46">(<expr pos:start="115:30" pos:end="115:45"><call pos:start="115:30" pos:end="115:45"><name pos:start="115:30" pos:end="115:36">IS_16X8</name><argument_list pos:start="115:37" pos:end="115:45">(<argument pos:start="115:38" pos:end="115:44"><expr pos:start="115:38" pos:end="115:44"><name pos:start="115:38" pos:end="115:44">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="117:25" pos:end="117:60"><block_content pos:start="117:25" pos:end="117:60">

                        <expr_stmt pos:start="117:25" pos:end="117:60"><expr pos:start="117:25" pos:end="117:59"><call pos:start="117:25" pos:end="117:59"><name pos:start="117:25" pos:end="117:30">av_log</name><argument_list pos:start="117:31" pos:end="117:59">(<argument pos:start="117:32" pos:end="117:39"><expr pos:start="117:32" pos:end="117:39"><name pos:start="117:32" pos:end="117:39"><name pos:start="117:32" pos:end="117:32">s</name><operator pos:start="117:33" pos:end="117:34">-&gt;</operator><name pos:start="117:35" pos:end="117:39">avctx</name></name></expr></argument>, <argument pos:start="117:42" pos:end="117:53"><expr pos:start="117:42" pos:end="117:53"><name pos:start="117:42" pos:end="117:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="117:56" pos:end="117:58"><expr pos:start="117:56" pos:end="117:58"><literal type="string" pos:start="117:56" pos:end="117:58">"-"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="119:21" pos:end="121:60">else if <condition pos:start="119:29" pos:end="119:46">(<expr pos:start="119:30" pos:end="119:45"><call pos:start="119:30" pos:end="119:45"><name pos:start="119:30" pos:end="119:36">IS_8X16</name><argument_list pos:start="119:37" pos:end="119:45">(<argument pos:start="119:38" pos:end="119:44"><expr pos:start="119:38" pos:end="119:44"><name pos:start="119:38" pos:end="119:44">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="121:25" pos:end="121:60"><block_content pos:start="121:25" pos:end="121:60">

                        <expr_stmt pos:start="121:25" pos:end="121:60"><expr pos:start="121:25" pos:end="121:59"><call pos:start="121:25" pos:end="121:59"><name pos:start="121:25" pos:end="121:30">av_log</name><argument_list pos:start="121:31" pos:end="121:59">(<argument pos:start="121:32" pos:end="121:39"><expr pos:start="121:32" pos:end="121:39"><name pos:start="121:32" pos:end="121:39"><name pos:start="121:32" pos:end="121:32">s</name><operator pos:start="121:33" pos:end="121:34">-&gt;</operator><name pos:start="121:35" pos:end="121:39">avctx</name></name></expr></argument>, <argument pos:start="121:42" pos:end="121:53"><expr pos:start="121:42" pos:end="121:53"><name pos:start="121:42" pos:end="121:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="121:56" pos:end="121:58"><expr pos:start="121:56" pos:end="121:58"><literal type="string" pos:start="121:56" pos:end="121:58">"|"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="123:21" pos:end="125:60">else if <condition pos:start="123:29" pos:end="123:68">(<expr pos:start="123:30" pos:end="123:67"><call pos:start="123:30" pos:end="123:46"><name pos:start="123:30" pos:end="123:37">IS_INTRA</name><argument_list pos:start="123:38" pos:end="123:46">(<argument pos:start="123:39" pos:end="123:45"><expr pos:start="123:39" pos:end="123:45"><name pos:start="123:39" pos:end="123:45">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="123:48" pos:end="123:49">||</operator> <call pos:start="123:51" pos:end="123:67"><name pos:start="123:51" pos:end="123:58">IS_16X16</name><argument_list pos:start="123:59" pos:end="123:67">(<argument pos:start="123:60" pos:end="123:66"><expr pos:start="123:60" pos:end="123:66"><name pos:start="123:60" pos:end="123:66">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="125:25" pos:end="125:60"><block_content pos:start="125:25" pos:end="125:60">

                        <expr_stmt pos:start="125:25" pos:end="125:60"><expr pos:start="125:25" pos:end="125:59"><call pos:start="125:25" pos:end="125:59"><name pos:start="125:25" pos:end="125:30">av_log</name><argument_list pos:start="125:31" pos:end="125:59">(<argument pos:start="125:32" pos:end="125:39"><expr pos:start="125:32" pos:end="125:39"><name pos:start="125:32" pos:end="125:39"><name pos:start="125:32" pos:end="125:32">s</name><operator pos:start="125:33" pos:end="125:34">-&gt;</operator><name pos:start="125:35" pos:end="125:39">avctx</name></name></expr></argument>, <argument pos:start="125:42" pos:end="125:53"><expr pos:start="125:42" pos:end="125:53"><name pos:start="125:42" pos:end="125:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="125:56" pos:end="125:58"><expr pos:start="125:56" pos:end="125:58"><literal type="string" pos:start="125:56" pos:end="125:58">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="127:21" pos:end="129:60">else<block type="pseudo" pos:start="129:25" pos:end="129:60"><block_content pos:start="129:25" pos:end="129:60">

                        <expr_stmt pos:start="129:25" pos:end="129:60"><expr pos:start="129:25" pos:end="129:59"><call pos:start="129:25" pos:end="129:59"><name pos:start="129:25" pos:end="129:30">av_log</name><argument_list pos:start="129:31" pos:end="129:59">(<argument pos:start="129:32" pos:end="129:39"><expr pos:start="129:32" pos:end="129:39"><name pos:start="129:32" pos:end="129:39"><name pos:start="129:32" pos:end="129:32">s</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:39">avctx</name></name></expr></argument>, <argument pos:start="129:42" pos:end="129:53"><expr pos:start="129:42" pos:end="129:53"><name pos:start="129:42" pos:end="129:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="129:56" pos:end="129:58"><expr pos:start="129:56" pos:end="129:58"><literal type="string" pos:start="129:56" pos:end="129:58">"?"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>





                    <if_stmt pos:start="135:21" pos:end="141:60"><if pos:start="135:21" pos:end="137:60">if <condition pos:start="135:24" pos:end="135:47">(<expr pos:start="135:25" pos:end="135:46"><call pos:start="135:25" pos:end="135:46"><name pos:start="135:25" pos:end="135:37">IS_INTERLACED</name><argument_list pos:start="135:38" pos:end="135:46">(<argument pos:start="135:39" pos:end="135:45"><expr pos:start="135:39" pos:end="135:45"><name pos:start="135:39" pos:end="135:45">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="137:25" pos:end="137:60"><block_content pos:start="137:25" pos:end="137:60">

                        <expr_stmt pos:start="137:25" pos:end="137:60"><expr pos:start="137:25" pos:end="137:59"><call pos:start="137:25" pos:end="137:59"><name pos:start="137:25" pos:end="137:30">av_log</name><argument_list pos:start="137:31" pos:end="137:59">(<argument pos:start="137:32" pos:end="137:39"><expr pos:start="137:32" pos:end="137:39"><name pos:start="137:32" pos:end="137:39"><name pos:start="137:32" pos:end="137:32">s</name><operator pos:start="137:33" pos:end="137:34">-&gt;</operator><name pos:start="137:35" pos:end="137:39">avctx</name></name></expr></argument>, <argument pos:start="137:42" pos:end="137:53"><expr pos:start="137:42" pos:end="137:53"><name pos:start="137:42" pos:end="137:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="137:56" pos:end="137:58"><expr pos:start="137:56" pos:end="137:58"><literal type="string" pos:start="137:56" pos:end="137:58">"="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="139:21" pos:end="141:60">else<block type="pseudo" pos:start="141:25" pos:end="141:60"><block_content pos:start="141:25" pos:end="141:60">

                        <expr_stmt pos:start="141:25" pos:end="141:60"><expr pos:start="141:25" pos:end="141:59"><call pos:start="141:25" pos:end="141:59"><name pos:start="141:25" pos:end="141:30">av_log</name><argument_list pos:start="141:31" pos:end="141:59">(<argument pos:start="141:32" pos:end="141:39"><expr pos:start="141:32" pos:end="141:39"><name pos:start="141:32" pos:end="141:39"><name pos:start="141:32" pos:end="141:32">s</name><operator pos:start="141:33" pos:end="141:34">-&gt;</operator><name pos:start="141:35" pos:end="141:39">avctx</name></name></expr></argument>, <argument pos:start="141:42" pos:end="141:53"><expr pos:start="141:42" pos:end="141:53"><name pos:start="141:42" pos:end="141:53">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="141:56" pos:end="141:58"><expr pos:start="141:56" pos:end="141:58"><literal type="string" pos:start="141:56" pos:end="141:58">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="147:13" pos:end="147:49"><expr pos:start="147:13" pos:end="147:48"><call pos:start="147:13" pos:end="147:48"><name pos:start="147:13" pos:end="147:18">av_log</name><argument_list pos:start="147:19" pos:end="147:48">(<argument pos:start="147:20" pos:end="147:27"><expr pos:start="147:20" pos:end="147:27"><name pos:start="147:20" pos:end="147:27"><name pos:start="147:20" pos:end="147:20">s</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:27">avctx</name></name></expr></argument>, <argument pos:start="147:30" pos:end="147:41"><expr pos:start="147:30" pos:end="147:41"><name pos:start="147:30" pos:end="147:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="147:44" pos:end="147:47"><expr pos:start="147:44" pos:end="147:47"><literal type="string" pos:start="147:44" pos:end="147:47">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="155:5" pos:end="573:5"><if pos:start="155:5" pos:end="573:5">if <condition pos:start="155:8" pos:end="157:29">(<expr pos:start="155:9" pos:end="157:28"><operator pos:start="155:9" pos:end="155:9">(</operator><name pos:start="155:10" pos:end="155:24"><name pos:start="155:10" pos:end="155:10">s</name><operator pos:start="155:11" pos:end="155:12">-&gt;</operator><name pos:start="155:13" pos:end="155:17">avctx</name><operator pos:start="155:18" pos:end="155:19">-&gt;</operator><name pos:start="155:20" pos:end="155:24">debug</name></name> <operator pos:start="155:26" pos:end="155:26">&amp;</operator> <operator pos:start="155:28" pos:end="155:28">(</operator><name pos:start="155:29" pos:end="155:43">FF_DEBUG_VIS_QP</name> <operator pos:start="155:45" pos:end="155:45">|</operator> <name pos:start="155:47" pos:end="155:66">FF_DEBUG_VIS_MB_TYPE</name><operator pos:start="155:67" pos:end="155:67">)</operator><operator pos:start="155:68" pos:end="155:68">)</operator> <operator pos:start="155:70" pos:end="155:71">||</operator>

        <operator pos:start="157:9" pos:end="157:9">(</operator><name pos:start="157:10" pos:end="157:27"><name pos:start="157:10" pos:end="157:10">s</name><operator pos:start="157:11" pos:end="157:12">-&gt;</operator><name pos:start="157:13" pos:end="157:17">avctx</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:27">debug_mv</name></name><operator pos:start="157:28" pos:end="157:28">)</operator></expr>)</condition> <block pos:start="157:31" pos:end="573:5">{<block_content pos:start="159:9" pos:end="571:9">

        <decl_stmt pos:start="159:9" pos:end="159:48"><decl pos:start="159:9" pos:end="159:47"><type pos:start="159:9" pos:end="159:17"><specifier pos:start="159:9" pos:end="159:13">const</specifier> <name pos:start="159:15" pos:end="159:17">int</name></type> <name pos:start="159:19" pos:end="159:23">shift</name> <init pos:start="159:25" pos:end="159:47">= <expr pos:start="159:27" pos:end="159:47"><literal type="number" pos:start="159:27" pos:end="159:29">1</literal> <operator pos:start="159:29" pos:end="159:29">+</operator> <name pos:start="159:31" pos:end="159:47"><name pos:start="159:31" pos:end="159:31">s</name><operator pos:start="159:32" pos:end="159:33">-&gt;</operator><name pos:start="159:34" pos:end="159:47">quarter_sample</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="161:9" pos:end="161:17"><decl pos:start="161:9" pos:end="161:16"><type pos:start="161:9" pos:end="161:11"><name pos:start="161:9" pos:end="161:11">int</name></type> <name pos:start="161:13" pos:end="161:16">mb_y</name></decl>;</decl_stmt>

        <decl_stmt pos:start="163:9" pos:end="163:21"><decl pos:start="163:9" pos:end="163:20"><type pos:start="163:9" pos:end="163:17"><name pos:start="163:9" pos:end="163:15">uint8_t</name> <modifier pos:start="163:17" pos:end="163:17">*</modifier></type><name pos:start="163:18" pos:end="163:20">ptr</name></decl>;</decl_stmt>

        <decl_stmt pos:start="165:9" pos:end="165:14"><decl pos:start="165:9" pos:end="165:13"><type pos:start="165:9" pos:end="165:11"><name pos:start="165:9" pos:end="165:11">int</name></type> <name pos:start="165:13" pos:end="165:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="167:9" pos:end="167:57"><decl pos:start="167:9" pos:end="167:26"><type pos:start="167:9" pos:end="167:11"><name pos:start="167:9" pos:end="167:11">int</name></type> <name pos:start="167:13" pos:end="167:26">h_chroma_shift</name></decl>, <decl pos:start="167:29" pos:end="167:42"><type ref="prev" pos:start="167:9" pos:end="167:11"/><name pos:start="167:29" pos:end="167:42">v_chroma_shift</name></decl>, <decl pos:start="167:45" pos:end="167:56"><type ref="prev" pos:start="167:9" pos:end="167:11"/><name pos:start="167:45" pos:end="167:56">block_height</name></decl>;</decl_stmt>

        <decl_stmt pos:start="169:9" pos:end="169:51"><decl pos:start="169:9" pos:end="169:50"><type pos:start="169:9" pos:end="169:17"><specifier pos:start="169:9" pos:end="169:13">const</specifier> <name pos:start="169:15" pos:end="169:17">int</name></type> <name pos:start="169:19" pos:end="169:23">width</name>          <init pos:start="169:34" pos:end="169:50">= <expr pos:start="169:36" pos:end="169:50"><name pos:start="169:36" pos:end="169:50"><name pos:start="169:36" pos:end="169:36">s</name><operator pos:start="169:37" pos:end="169:38">-&gt;</operator><name pos:start="169:39" pos:end="169:43">avctx</name><operator pos:start="169:44" pos:end="169:45">-&gt;</operator><name pos:start="169:46" pos:end="169:50">width</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="171:9" pos:end="171:52"><decl pos:start="171:9" pos:end="171:51"><type pos:start="171:9" pos:end="171:17"><specifier pos:start="171:9" pos:end="171:13">const</specifier> <name pos:start="171:15" pos:end="171:17">int</name></type> <name pos:start="171:19" pos:end="171:24">height</name>         <init pos:start="171:34" pos:end="171:51">= <expr pos:start="171:36" pos:end="171:51"><name pos:start="171:36" pos:end="171:51"><name pos:start="171:36" pos:end="171:36">s</name><operator pos:start="171:37" pos:end="171:38">-&gt;</operator><name pos:start="171:39" pos:end="171:43">avctx</name><operator pos:start="171:44" pos:end="171:45">-&gt;</operator><name pos:start="171:46" pos:end="171:51">height</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="173:9" pos:end="173:67"><decl pos:start="173:9" pos:end="173:66"><type pos:start="173:9" pos:end="173:17"><specifier pos:start="173:9" pos:end="173:13">const</specifier> <name pos:start="173:15" pos:end="173:17">int</name></type> <name pos:start="173:19" pos:end="173:32">mv_sample_log2</name> <init pos:start="173:34" pos:end="173:66">= <expr pos:start="173:36" pos:end="173:66"><literal type="number" pos:start="173:36" pos:end="173:38">4</literal> <operator pos:start="173:38" pos:end="173:38">-</operator> <name pos:start="173:40" pos:end="173:66"><name pos:start="173:40" pos:end="173:43">pict</name><operator pos:start="173:44" pos:end="173:45">-&gt;</operator><name pos:start="173:46" pos:end="173:66">motion_subsample_log2</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="175:9" pos:end="177:77"><decl pos:start="175:9" pos:end="177:76"><type pos:start="175:9" pos:end="175:17"><specifier pos:start="175:9" pos:end="175:13">const</specifier> <name pos:start="175:15" pos:end="175:17">int</name></type> <name pos:start="175:19" pos:end="175:27">mv_stride</name>      <init pos:start="175:34" pos:end="177:76">= <expr pos:start="175:36" pos:end="177:76"><operator pos:start="175:36" pos:end="175:36">(</operator><name pos:start="175:37" pos:end="175:47"><name pos:start="175:37" pos:end="175:37">s</name><operator pos:start="175:38" pos:end="175:39">-&gt;</operator><name pos:start="175:40" pos:end="175:47">mb_width</name></name> <operator pos:start="175:49" pos:end="175:50">&lt;&lt;</operator> <name pos:start="175:52" pos:end="175:65">mv_sample_log2</name><operator pos:start="175:66" pos:end="175:66">)</operator> <operator pos:start="175:68" pos:end="175:68">+</operator>

                                   <operator pos:start="177:36" pos:end="177:36">(</operator><ternary pos:start="177:37" pos:end="177:75"><condition pos:start="177:37" pos:end="177:69"><expr pos:start="177:37" pos:end="177:67"><name pos:start="177:37" pos:end="177:47"><name pos:start="177:37" pos:end="177:37">s</name><operator pos:start="177:38" pos:end="177:39">-&gt;</operator><name pos:start="177:40" pos:end="177:47">codec_id</name></name> <operator pos:start="177:49" pos:end="177:50">==</operator> <name pos:start="177:52" pos:end="177:67">AV_CODEC_ID_H264</name></expr> ?</condition><then pos:start="177:71" pos:end="177:71"> <expr pos:start="177:71" pos:end="177:71"><literal type="number" pos:start="177:71" pos:end="177:71">0</literal></expr> </then><else pos:start="177:73" pos:end="177:75">: <expr pos:start="177:75" pos:end="177:75"><literal type="number" pos:start="177:75" pos:end="177:75">1</literal></expr></else></ternary><operator pos:start="177:76" pos:end="177:76">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:25"><expr pos:start="179:9" pos:end="179:24"><name pos:start="179:9" pos:end="179:20"><name pos:start="179:9" pos:end="179:9">s</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:20">low_delay</name></name> <operator pos:start="179:22" pos:end="179:22">=</operator> <literal type="number" pos:start="179:24" pos:end="179:24">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="179:27" pos:end="179:83">// needed to see the vectors without trashing the buffers</comment>



        <expr_stmt pos:start="183:9" pos:end="185:72"><expr pos:start="183:9" pos:end="185:71"><call pos:start="183:9" pos:end="185:71"><name pos:start="183:9" pos:end="183:37">avcodec_get_chroma_sub_sample</name><argument_list pos:start="183:38" pos:end="185:71">(<argument pos:start="183:39" pos:end="183:55"><expr pos:start="183:39" pos:end="183:55"><name pos:start="183:39" pos:end="183:55"><name pos:start="183:39" pos:end="183:39">s</name><operator pos:start="183:40" pos:end="183:41">-&gt;</operator><name pos:start="183:42" pos:end="183:46">avctx</name><operator pos:start="183:47" pos:end="183:48">-&gt;</operator><name pos:start="183:49" pos:end="183:55">pix_fmt</name></name></expr></argument>,

                                      <argument pos:start="185:39" pos:end="185:53"><expr pos:start="185:39" pos:end="185:53"><operator pos:start="185:39" pos:end="185:39">&amp;</operator><name pos:start="185:40" pos:end="185:53">h_chroma_shift</name></expr></argument>, <argument pos:start="185:56" pos:end="185:70"><expr pos:start="185:56" pos:end="185:70"><operator pos:start="185:56" pos:end="185:56">&amp;</operator><name pos:start="185:57" pos:end="185:70">v_chroma_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="187:9" pos:end="199:9">for <control pos:start="187:13" pos:end="187:31">(<init pos:start="187:14" pos:end="187:19"><expr pos:start="187:14" pos:end="187:18"><name pos:start="187:14" pos:end="187:14">i</name> <operator pos:start="187:16" pos:end="187:16">=</operator> <literal type="number" pos:start="187:18" pos:end="187:18">0</literal></expr>;</init> <condition pos:start="187:21" pos:end="187:26"><expr pos:start="187:21" pos:end="187:25"><name pos:start="187:21" pos:end="187:21">i</name> <operator pos:start="187:23" pos:end="187:23">&lt;</operator> <literal type="number" pos:start="187:25" pos:end="187:25">3</literal></expr>;</condition> <incr pos:start="187:28" pos:end="187:30"><expr pos:start="187:28" pos:end="187:30"><name pos:start="187:28" pos:end="187:28">i</name><operator pos:start="187:29" pos:end="187:30">++</operator></expr></incr>)</control> <block pos:start="187:33" pos:end="199:9">{<block_content pos:start="189:13" pos:end="197:55">

            <decl_stmt pos:start="189:13" pos:end="191:83"><decl pos:start="189:13" pos:end="191:82"><type pos:start="189:13" pos:end="189:18"><name pos:start="189:13" pos:end="189:18">size_t</name></type> <name pos:start="189:20" pos:end="189:23">size</name><init pos:start="189:24" pos:end="191:82">= <expr pos:start="189:26" pos:end="191:82"><ternary pos:start="189:26" pos:end="191:82"><condition pos:start="189:26" pos:end="189:35"><expr pos:start="189:26" pos:end="189:33"><operator pos:start="189:26" pos:end="189:26">(</operator><name pos:start="189:27" pos:end="189:27">i</name> <operator pos:start="189:29" pos:end="189:30">==</operator> <literal type="number" pos:start="189:32" pos:end="189:32">0</literal><operator pos:start="189:33" pos:end="189:33">)</operator></expr> ?</condition><then pos:start="189:37" pos:end="189:75"> <expr pos:start="189:37" pos:end="189:75"><name pos:start="189:37" pos:end="189:53"><name pos:start="189:37" pos:end="189:40">pict</name><operator pos:start="189:41" pos:end="189:42">-&gt;</operator><name pos:start="189:43" pos:end="189:50">linesize</name><index pos:start="189:51" pos:end="189:53">[<expr pos:start="189:52" pos:end="189:52"><name pos:start="189:52" pos:end="189:52">i</name></expr>]</index></name> <operator pos:start="189:55" pos:end="189:55">*</operator> <call pos:start="189:57" pos:end="189:75"><name pos:start="189:57" pos:end="189:63">FFALIGN</name><argument_list pos:start="189:64" pos:end="189:75">(<argument pos:start="189:65" pos:end="189:70"><expr pos:start="189:65" pos:end="189:70"><name pos:start="189:65" pos:end="189:70">height</name></expr></argument>, <argument pos:start="189:73" pos:end="189:74"><expr pos:start="189:73" pos:end="189:74"><literal type="number" pos:start="189:73" pos:end="189:74">16</literal></expr></argument>)</argument_list></call></expr></then><else pos:start="189:76" pos:end="191:82">:

                         <expr pos:start="191:26" pos:end="191:82"><name pos:start="191:26" pos:end="191:42"><name pos:start="191:26" pos:end="191:29">pict</name><operator pos:start="191:30" pos:end="191:31">-&gt;</operator><name pos:start="191:32" pos:end="191:39">linesize</name><index pos:start="191:40" pos:end="191:42">[<expr pos:start="191:41" pos:end="191:41"><name pos:start="191:41" pos:end="191:41">i</name></expr>]</index></name> <operator pos:start="191:44" pos:end="191:44">*</operator> <call pos:start="191:46" pos:end="191:64"><name pos:start="191:46" pos:end="191:52">FFALIGN</name><argument_list pos:start="191:53" pos:end="191:64">(<argument pos:start="191:54" pos:end="191:59"><expr pos:start="191:54" pos:end="191:59"><name pos:start="191:54" pos:end="191:59">height</name></expr></argument>, <argument pos:start="191:62" pos:end="191:63"><expr pos:start="191:62" pos:end="191:63"><literal type="number" pos:start="191:62" pos:end="191:63">16</literal></expr></argument>)</argument_list></call> <operator pos:start="191:66" pos:end="191:67">&gt;&gt;</operator> <name pos:start="191:69" pos:end="191:82">v_chroma_shift</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:85"><expr pos:start="193:13" pos:end="193:84"><name pos:start="193:13" pos:end="193:38"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:35">visualization_buffer</name><index pos:start="193:36" pos:end="193:38">[<expr pos:start="193:37" pos:end="193:37"><name pos:start="193:37" pos:end="193:37">i</name></expr>]</index></name><operator pos:start="193:39" pos:end="193:39">=</operator> <call pos:start="193:41" pos:end="193:84"><name pos:start="193:41" pos:end="193:50">av_realloc</name><argument_list pos:start="193:51" pos:end="193:84">(<argument pos:start="193:52" pos:end="193:77"><expr pos:start="193:52" pos:end="193:77"><name pos:start="193:52" pos:end="193:77"><name pos:start="193:52" pos:end="193:52">s</name><operator pos:start="193:53" pos:end="193:54">-&gt;</operator><name pos:start="193:55" pos:end="193:74">visualization_buffer</name><index pos:start="193:75" pos:end="193:77">[<expr pos:start="193:76" pos:end="193:76"><name pos:start="193:76" pos:end="193:76">i</name></expr>]</index></name></expr></argument>, <argument pos:start="193:80" pos:end="193:83"><expr pos:start="193:80" pos:end="193:83"><name pos:start="193:80" pos:end="193:83">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:68"><expr pos:start="195:13" pos:end="195:67"><call pos:start="195:13" pos:end="195:67"><name pos:start="195:13" pos:end="195:18">memcpy</name><argument_list pos:start="195:19" pos:end="195:67">(<argument pos:start="195:20" pos:end="195:45"><expr pos:start="195:20" pos:end="195:45"><name pos:start="195:20" pos:end="195:45"><name pos:start="195:20" pos:end="195:20">s</name><operator pos:start="195:21" pos:end="195:22">-&gt;</operator><name pos:start="195:23" pos:end="195:42">visualization_buffer</name><index pos:start="195:43" pos:end="195:45">[<expr pos:start="195:44" pos:end="195:44"><name pos:start="195:44" pos:end="195:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="195:48" pos:end="195:60"><expr pos:start="195:48" pos:end="195:60"><name pos:start="195:48" pos:end="195:60"><name pos:start="195:48" pos:end="195:51">pict</name><operator pos:start="195:52" pos:end="195:53">-&gt;</operator><name pos:start="195:54" pos:end="195:57">data</name><index pos:start="195:58" pos:end="195:60">[<expr pos:start="195:59" pos:end="195:59"><name pos:start="195:59" pos:end="195:59">i</name></expr>]</index></name></expr></argument>, <argument pos:start="195:63" pos:end="195:66"><expr pos:start="195:63" pos:end="195:66"><name pos:start="195:63" pos:end="195:66">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:55"><expr pos:start="197:13" pos:end="197:54"><name pos:start="197:13" pos:end="197:25"><name pos:start="197:13" pos:end="197:16">pict</name><operator pos:start="197:17" pos:end="197:18">-&gt;</operator><name pos:start="197:19" pos:end="197:22">data</name><index pos:start="197:23" pos:end="197:25">[<expr pos:start="197:24" pos:end="197:24"><name pos:start="197:24" pos:end="197:24">i</name></expr>]</index></name> <operator pos:start="197:27" pos:end="197:27">=</operator> <name pos:start="197:29" pos:end="197:54"><name pos:start="197:29" pos:end="197:29">s</name><operator pos:start="197:30" pos:end="197:31">-&gt;</operator><name pos:start="197:32" pos:end="197:51">visualization_buffer</name><index pos:start="197:52" pos:end="197:54">[<expr pos:start="197:53" pos:end="197:53"><name pos:start="197:53" pos:end="197:53">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="201:9" pos:end="201:43"><expr pos:start="201:9" pos:end="201:42"><name pos:start="201:9" pos:end="201:18"><name pos:start="201:9" pos:end="201:12">pict</name><operator pos:start="201:13" pos:end="201:14">-&gt;</operator><name pos:start="201:15" pos:end="201:18">type</name></name>   <operator pos:start="201:22" pos:end="201:22">=</operator> <name pos:start="201:24" pos:end="201:42">FF_BUFFER_TYPE_COPY</name></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:27"><expr pos:start="203:9" pos:end="203:26"><name pos:start="203:9" pos:end="203:20"><name pos:start="203:9" pos:end="203:12">pict</name><operator pos:start="203:13" pos:end="203:14">-&gt;</operator><name pos:start="203:15" pos:end="203:20">opaque</name></name><operator pos:start="203:21" pos:end="203:21">=</operator> <name pos:start="203:23" pos:end="203:26">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:37"><expr pos:start="205:9" pos:end="205:36"><name pos:start="205:9" pos:end="205:11">ptr</name>          <operator pos:start="205:22" pos:end="205:22">=</operator> <name pos:start="205:24" pos:end="205:36"><name pos:start="205:24" pos:end="205:27">pict</name><operator pos:start="205:28" pos:end="205:29">-&gt;</operator><name pos:start="205:30" pos:end="205:33">data</name><index pos:start="205:34" pos:end="205:36">[<expr pos:start="205:35" pos:end="205:35"><literal type="number" pos:start="205:35" pos:end="205:35">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:44"><expr pos:start="207:9" pos:end="207:43"><name pos:start="207:9" pos:end="207:20">block_height</name> <operator pos:start="207:22" pos:end="207:22">=</operator> <literal type="number" pos:start="207:24" pos:end="207:25">16</literal> <operator pos:start="207:27" pos:end="207:28">&gt;&gt;</operator> <name pos:start="207:30" pos:end="207:43">v_chroma_shift</name></expr>;</expr_stmt>



        <for pos:start="211:9" pos:end="571:9">for <control pos:start="211:13" pos:end="211:51">(<init pos:start="211:14" pos:end="211:22"><expr pos:start="211:14" pos:end="211:21"><name pos:start="211:14" pos:end="211:17">mb_y</name> <operator pos:start="211:19" pos:end="211:19">=</operator> <literal type="number" pos:start="211:21" pos:end="211:21">0</literal></expr>;</init> <condition pos:start="211:24" pos:end="211:43"><expr pos:start="211:24" pos:end="211:42"><name pos:start="211:24" pos:end="211:27">mb_y</name> <operator pos:start="211:29" pos:end="211:29">&lt;</operator> <name pos:start="211:31" pos:end="211:42"><name pos:start="211:31" pos:end="211:31">s</name><operator pos:start="211:32" pos:end="211:33">-&gt;</operator><name pos:start="211:34" pos:end="211:42">mb_height</name></name></expr>;</condition> <incr pos:start="211:45" pos:end="211:50"><expr pos:start="211:45" pos:end="211:50"><name pos:start="211:45" pos:end="211:48">mb_y</name><operator pos:start="211:49" pos:end="211:50">++</operator></expr></incr>)</control> <block pos:start="211:53" pos:end="571:9">{<block_content pos:start="213:13" pos:end="569:13">

            <decl_stmt pos:start="213:13" pos:end="213:21"><decl pos:start="213:13" pos:end="213:20"><type pos:start="213:13" pos:end="213:15"><name pos:start="213:13" pos:end="213:15">int</name></type> <name pos:start="213:17" pos:end="213:20">mb_x</name></decl>;</decl_stmt>

            <for pos:start="215:13" pos:end="569:13">for <control pos:start="215:17" pos:end="215:54">(<init pos:start="215:18" pos:end="215:26"><expr pos:start="215:18" pos:end="215:25"><name pos:start="215:18" pos:end="215:21">mb_x</name> <operator pos:start="215:23" pos:end="215:23">=</operator> <literal type="number" pos:start="215:25" pos:end="215:25">0</literal></expr>;</init> <condition pos:start="215:28" pos:end="215:46"><expr pos:start="215:28" pos:end="215:45"><name pos:start="215:28" pos:end="215:31">mb_x</name> <operator pos:start="215:33" pos:end="215:33">&lt;</operator> <name pos:start="215:35" pos:end="215:45"><name pos:start="215:35" pos:end="215:35">s</name><operator pos:start="215:36" pos:end="215:37">-&gt;</operator><name pos:start="215:38" pos:end="215:45">mb_width</name></name></expr>;</condition> <incr pos:start="215:48" pos:end="215:53"><expr pos:start="215:48" pos:end="215:53"><name pos:start="215:48" pos:end="215:51">mb_x</name><operator pos:start="215:52" pos:end="215:53">++</operator></expr></incr>)</control> <block pos:start="215:56" pos:end="569:13">{<block_content pos:start="217:17" pos:end="567:46">

                <decl_stmt pos:start="217:17" pos:end="217:64"><decl pos:start="217:17" pos:end="217:63"><type pos:start="217:17" pos:end="217:25"><specifier pos:start="217:17" pos:end="217:21">const</specifier> <name pos:start="217:23" pos:end="217:25">int</name></type> <name pos:start="217:27" pos:end="217:34">mb_index</name> <init pos:start="217:36" pos:end="217:63">= <expr pos:start="217:38" pos:end="217:63"><name pos:start="217:38" pos:end="217:41">mb_x</name> <operator pos:start="217:43" pos:end="217:43">+</operator> <name pos:start="217:45" pos:end="217:48">mb_y</name> <operator pos:start="217:50" pos:end="217:50">*</operator> <name pos:start="217:52" pos:end="217:63"><name pos:start="217:52" pos:end="217:52">s</name><operator pos:start="217:53" pos:end="217:54">-&gt;</operator><name pos:start="217:55" pos:end="217:63">mb_stride</name></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="219:17" pos:end="375:17"><if pos:start="219:17" pos:end="375:17">if <condition pos:start="219:20" pos:end="219:61">(<expr pos:start="219:21" pos:end="219:60"><operator pos:start="219:21" pos:end="219:21">(</operator><name pos:start="219:22" pos:end="219:39"><name pos:start="219:22" pos:end="219:22">s</name><operator pos:start="219:23" pos:end="219:24">-&gt;</operator><name pos:start="219:25" pos:end="219:29">avctx</name><operator pos:start="219:30" pos:end="219:31">-&gt;</operator><name pos:start="219:32" pos:end="219:39">debug_mv</name></name><operator pos:start="219:40" pos:end="219:40">)</operator> <operator pos:start="219:42" pos:end="219:43">&amp;&amp;</operator> <name pos:start="219:45" pos:end="219:60"><name pos:start="219:45" pos:end="219:48">pict</name><operator pos:start="219:49" pos:end="219:50">-&gt;</operator><name pos:start="219:51" pos:end="219:60">motion_val</name></name></expr>)</condition> <block pos:start="219:63" pos:end="375:17">{<block_content pos:start="221:21" pos:end="373:21">

                    <decl_stmt pos:start="221:21" pos:end="221:29"><decl pos:start="221:21" pos:end="221:28"><type pos:start="221:21" pos:end="221:23"><name pos:start="221:21" pos:end="221:23">int</name></type> <name pos:start="221:25" pos:end="221:28">type</name></decl>;</decl_stmt>

                    <for pos:start="223:21" pos:end="373:21">for <control pos:start="223:25" pos:end="223:52">(<init pos:start="223:26" pos:end="223:34"><expr pos:start="223:26" pos:end="223:33"><name pos:start="223:26" pos:end="223:29">type</name> <operator pos:start="223:31" pos:end="223:31">=</operator> <literal type="number" pos:start="223:33" pos:end="223:33">0</literal></expr>;</init> <condition pos:start="223:36" pos:end="223:44"><expr pos:start="223:36" pos:end="223:43"><name pos:start="223:36" pos:end="223:39">type</name> <operator pos:start="223:41" pos:end="223:41">&lt;</operator> <literal type="number" pos:start="223:43" pos:end="223:43">3</literal></expr>;</condition> <incr pos:start="223:46" pos:end="223:51"><expr pos:start="223:46" pos:end="223:51"><name pos:start="223:46" pos:end="223:49">type</name><operator pos:start="223:50" pos:end="223:51">++</operator></expr></incr>)</control> <block pos:start="223:54" pos:end="373:21">{<block_content pos:start="225:25" pos:end="371:25">

                        <decl_stmt pos:start="225:25" pos:end="225:42"><decl pos:start="225:25" pos:end="225:41"><type pos:start="225:25" pos:end="225:27"><name pos:start="225:25" pos:end="225:27">int</name></type> <name pos:start="225:29" pos:end="225:37">direction</name> <init pos:start="225:39" pos:end="225:41">= <expr pos:start="225:41" pos:end="225:41"><literal type="number" pos:start="225:41" pos:end="225:41">0</literal></expr></init></decl>;</decl_stmt>

                        <switch pos:start="227:25" pos:end="265:25">switch <condition pos:start="227:32" pos:end="227:37">(<expr pos:start="227:33" pos:end="227:36"><name pos:start="227:33" pos:end="227:36">type</name></expr>)</condition> <block pos:start="227:39" pos:end="265:25">{<block_content pos:start="229:25" pos:end="263:34">

                        <case pos:start="229:25" pos:end="229:31">case <expr pos:start="229:30" pos:end="229:30"><literal type="number" pos:start="229:30" pos:end="229:30">0</literal></expr>:</case>

                            <if_stmt pos:start="231:29" pos:end="235:41"><if pos:start="231:29" pos:end="235:41">if <condition pos:start="231:32" pos:end="233:70">(<expr pos:start="231:33" pos:end="233:69"><operator pos:start="231:33" pos:end="231:33">(</operator><operator pos:start="231:34" pos:end="231:34">!</operator><operator pos:start="231:35" pos:end="231:35">(</operator><name pos:start="231:36" pos:end="231:53"><name pos:start="231:36" pos:end="231:36">s</name><operator pos:start="231:37" pos:end="231:38">-&gt;</operator><name pos:start="231:39" pos:end="231:43">avctx</name><operator pos:start="231:44" pos:end="231:45">-&gt;</operator><name pos:start="231:46" pos:end="231:53">debug_mv</name></name> <operator pos:start="231:55" pos:end="231:55">&amp;</operator> <name pos:start="231:57" pos:end="231:77">FF_DEBUG_VIS_MV_P_FOR</name><operator pos:start="231:78" pos:end="231:78">)</operator><operator pos:start="231:79" pos:end="231:79">)</operator> <operator pos:start="231:81" pos:end="231:82">||</operator>

                                <operator pos:start="233:33" pos:end="233:33">(</operator><name pos:start="233:34" pos:end="233:48"><name pos:start="233:34" pos:end="233:37">pict</name><operator pos:start="233:38" pos:end="233:39">-&gt;</operator><name pos:start="233:40" pos:end="233:48">pict_type</name></name><operator pos:start="233:49" pos:end="233:50">!=</operator> <name pos:start="233:52" pos:end="233:68">AV_PICTURE_TYPE_P</name><operator pos:start="233:69" pos:end="233:69">)</operator></expr>)</condition><block type="pseudo" pos:start="235:33" pos:end="235:41"><block_content pos:start="235:33" pos:end="235:41">

                                <continue pos:start="235:33" pos:end="235:41">continue;</continue></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="237:29" pos:end="237:42"><expr pos:start="237:29" pos:end="237:41"><name pos:start="237:29" pos:end="237:37">direction</name> <operator pos:start="237:39" pos:end="237:39">=</operator> <literal type="number" pos:start="237:41" pos:end="237:41">0</literal></expr>;</expr_stmt>

                            <break pos:start="239:29" pos:end="239:34">break;</break>

                        <case pos:start="241:25" pos:end="241:31">case <expr pos:start="241:30" pos:end="241:30"><literal type="number" pos:start="241:30" pos:end="241:30">1</literal></expr>:</case>

                            <if_stmt pos:start="243:29" pos:end="247:41"><if pos:start="243:29" pos:end="247:41">if <condition pos:start="243:32" pos:end="245:70">(<expr pos:start="243:33" pos:end="245:69"><operator pos:start="243:33" pos:end="243:33">(</operator><operator pos:start="243:34" pos:end="243:34">!</operator><operator pos:start="243:35" pos:end="243:35">(</operator><name pos:start="243:36" pos:end="243:53"><name pos:start="243:36" pos:end="243:36">s</name><operator pos:start="243:37" pos:end="243:38">-&gt;</operator><name pos:start="243:39" pos:end="243:43">avctx</name><operator pos:start="243:44" pos:end="243:45">-&gt;</operator><name pos:start="243:46" pos:end="243:53">debug_mv</name></name> <operator pos:start="243:55" pos:end="243:55">&amp;</operator> <name pos:start="243:57" pos:end="243:77">FF_DEBUG_VIS_MV_B_FOR</name><operator pos:start="243:78" pos:end="243:78">)</operator><operator pos:start="243:79" pos:end="243:79">)</operator> <operator pos:start="243:81" pos:end="243:82">||</operator>

                                <operator pos:start="245:33" pos:end="245:33">(</operator><name pos:start="245:34" pos:end="245:48"><name pos:start="245:34" pos:end="245:37">pict</name><operator pos:start="245:38" pos:end="245:39">-&gt;</operator><name pos:start="245:40" pos:end="245:48">pict_type</name></name><operator pos:start="245:49" pos:end="245:50">!=</operator> <name pos:start="245:52" pos:end="245:68">AV_PICTURE_TYPE_B</name><operator pos:start="245:69" pos:end="245:69">)</operator></expr>)</condition><block type="pseudo" pos:start="247:33" pos:end="247:41"><block_content pos:start="247:33" pos:end="247:41">

                                <continue pos:start="247:33" pos:end="247:41">continue;</continue></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="249:29" pos:end="249:42"><expr pos:start="249:29" pos:end="249:41"><name pos:start="249:29" pos:end="249:37">direction</name> <operator pos:start="249:39" pos:end="249:39">=</operator> <literal type="number" pos:start="249:41" pos:end="249:41">0</literal></expr>;</expr_stmt>

                            <break pos:start="251:29" pos:end="251:34">break;</break>

                        <case pos:start="253:25" pos:end="253:31">case <expr pos:start="253:30" pos:end="253:30"><literal type="number" pos:start="253:30" pos:end="253:30">2</literal></expr>:</case>

                            <if_stmt pos:start="255:29" pos:end="259:41"><if pos:start="255:29" pos:end="259:41">if <condition pos:start="255:32" pos:end="257:70">(<expr pos:start="255:33" pos:end="257:69"><operator pos:start="255:33" pos:end="255:33">(</operator><operator pos:start="255:34" pos:end="255:34">!</operator><operator pos:start="255:35" pos:end="255:35">(</operator><name pos:start="255:36" pos:end="255:53"><name pos:start="255:36" pos:end="255:36">s</name><operator pos:start="255:37" pos:end="255:38">-&gt;</operator><name pos:start="255:39" pos:end="255:43">avctx</name><operator pos:start="255:44" pos:end="255:45">-&gt;</operator><name pos:start="255:46" pos:end="255:53">debug_mv</name></name> <operator pos:start="255:55" pos:end="255:55">&amp;</operator> <name pos:start="255:57" pos:end="255:78">FF_DEBUG_VIS_MV_B_BACK</name><operator pos:start="255:79" pos:end="255:79">)</operator><operator pos:start="255:80" pos:end="255:80">)</operator> <operator pos:start="255:82" pos:end="255:83">||</operator>

                                <operator pos:start="257:33" pos:end="257:33">(</operator><name pos:start="257:34" pos:end="257:48"><name pos:start="257:34" pos:end="257:37">pict</name><operator pos:start="257:38" pos:end="257:39">-&gt;</operator><name pos:start="257:40" pos:end="257:48">pict_type</name></name><operator pos:start="257:49" pos:end="257:50">!=</operator> <name pos:start="257:52" pos:end="257:68">AV_PICTURE_TYPE_B</name><operator pos:start="257:69" pos:end="257:69">)</operator></expr>)</condition><block type="pseudo" pos:start="259:33" pos:end="259:41"><block_content pos:start="259:33" pos:end="259:41">

                                <continue pos:start="259:33" pos:end="259:41">continue;</continue></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="261:29" pos:end="261:42"><expr pos:start="261:29" pos:end="261:41"><name pos:start="261:29" pos:end="261:37">direction</name> <operator pos:start="261:39" pos:end="261:39">=</operator> <literal type="number" pos:start="261:41" pos:end="261:41">1</literal></expr>;</expr_stmt>

                            <break pos:start="263:29" pos:end="263:34">break;</break>

                        </block_content>}</block></switch>

                        <if_stmt pos:start="267:25" pos:end="269:37"><if pos:start="267:25" pos:end="269:37">if <condition pos:start="267:28" pos:end="267:75">(<expr pos:start="267:29" pos:end="267:74"><operator pos:start="267:29" pos:end="267:29">!</operator><call pos:start="267:30" pos:end="267:74"><name pos:start="267:30" pos:end="267:38">USES_LIST</name><argument_list pos:start="267:39" pos:end="267:74">(<argument pos:start="267:40" pos:end="267:62"><expr pos:start="267:40" pos:end="267:62"><name pos:start="267:40" pos:end="267:62"><name pos:start="267:40" pos:end="267:43">pict</name><operator pos:start="267:44" pos:end="267:45">-&gt;</operator><name pos:start="267:46" pos:end="267:52">mb_type</name><index pos:start="267:53" pos:end="267:62">[<expr pos:start="267:54" pos:end="267:61"><name pos:start="267:54" pos:end="267:61">mb_index</name></expr>]</index></name></expr></argument>, <argument pos:start="267:65" pos:end="267:73"><expr pos:start="267:65" pos:end="267:73"><name pos:start="267:65" pos:end="267:73">direction</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="269:29" pos:end="269:37"><block_content pos:start="269:29" pos:end="269:37">

                            <continue pos:start="269:29" pos:end="269:37">continue;</continue></block_content></block></if></if_stmt>



                        <if_stmt pos:start="273:25" pos:end="371:25"><if pos:start="273:25" pos:end="297:25">if <condition pos:start="273:28" pos:end="273:60">(<expr pos:start="273:29" pos:end="273:59"><call pos:start="273:29" pos:end="273:59"><name pos:start="273:29" pos:end="273:34">IS_8X8</name><argument_list pos:start="273:35" pos:end="273:59">(<argument pos:start="273:36" pos:end="273:58"><expr pos:start="273:36" pos:end="273:58"><name pos:start="273:36" pos:end="273:58"><name pos:start="273:36" pos:end="273:39">pict</name><operator pos:start="273:40" pos:end="273:41">-&gt;</operator><name pos:start="273:42" pos:end="273:48">mb_type</name><index pos:start="273:49" pos:end="273:58">[<expr pos:start="273:50" pos:end="273:57"><name pos:start="273:50" pos:end="273:57">mb_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="273:62" pos:end="297:25">{<block_content pos:start="275:29" pos:end="295:29">

                            <decl_stmt pos:start="275:29" pos:end="275:34"><decl pos:start="275:29" pos:end="275:33"><type pos:start="275:29" pos:end="275:31"><name pos:start="275:29" pos:end="275:31">int</name></type> <name pos:start="275:33" pos:end="275:33">i</name></decl>;</decl_stmt>

                            <for pos:start="277:29" pos:end="295:29">for <control pos:start="277:33" pos:end="277:51">(<init pos:start="277:34" pos:end="277:39"><expr pos:start="277:34" pos:end="277:38"><name pos:start="277:34" pos:end="277:34">i</name> <operator pos:start="277:36" pos:end="277:36">=</operator> <literal type="number" pos:start="277:38" pos:end="277:38">0</literal></expr>;</init> <condition pos:start="277:41" pos:end="277:46"><expr pos:start="277:41" pos:end="277:45"><name pos:start="277:41" pos:end="277:41">i</name> <operator pos:start="277:43" pos:end="277:43">&lt;</operator> <literal type="number" pos:start="277:45" pos:end="277:45">4</literal></expr>;</condition> <incr pos:start="277:48" pos:end="277:50"><expr pos:start="277:48" pos:end="277:50"><name pos:start="277:48" pos:end="277:48">i</name><operator pos:start="277:49" pos:end="277:50">++</operator></expr></incr>)</control> <block pos:start="277:53" pos:end="295:29">{<block_content pos:start="279:33" pos:end="293:69">

                                <decl_stmt pos:start="279:33" pos:end="279:69"><decl pos:start="279:33" pos:end="279:68"><type pos:start="279:33" pos:end="279:35"><name pos:start="279:33" pos:end="279:35">int</name></type> <name pos:start="279:37" pos:end="279:38">sx</name> <init pos:start="279:40" pos:end="279:68">= <expr pos:start="279:42" pos:end="279:68"><name pos:start="279:42" pos:end="279:45">mb_x</name> <operator pos:start="279:47" pos:end="279:47">*</operator> <literal type="number" pos:start="279:49" pos:end="279:52">16</literal> <operator pos:start="279:52" pos:end="279:52">+</operator> <literal type="number" pos:start="279:54" pos:end="279:56">4</literal> <operator pos:start="279:56" pos:end="279:56">+</operator> <literal type="number" pos:start="279:58" pos:end="279:58">8</literal> <operator pos:start="279:60" pos:end="279:60">*</operator> <operator pos:start="279:62" pos:end="279:62">(</operator><name pos:start="279:63" pos:end="279:63">i</name> <operator pos:start="279:65" pos:end="279:65">&amp;</operator> <literal type="number" pos:start="279:67" pos:end="279:67">1</literal><operator pos:start="279:68" pos:end="279:68">)</operator></expr></init></decl>;</decl_stmt>

                                <decl_stmt pos:start="281:33" pos:end="281:70"><decl pos:start="281:33" pos:end="281:69"><type pos:start="281:33" pos:end="281:35"><name pos:start="281:33" pos:end="281:35">int</name></type> <name pos:start="281:37" pos:end="281:38">sy</name> <init pos:start="281:40" pos:end="281:69">= <expr pos:start="281:42" pos:end="281:69"><name pos:start="281:42" pos:end="281:45">mb_y</name> <operator pos:start="281:47" pos:end="281:47">*</operator> <literal type="number" pos:start="281:49" pos:end="281:52">16</literal> <operator pos:start="281:52" pos:end="281:52">+</operator> <literal type="number" pos:start="281:54" pos:end="281:56">4</literal> <operator pos:start="281:56" pos:end="281:56">+</operator> <literal type="number" pos:start="281:58" pos:end="281:58">8</literal> <operator pos:start="281:60" pos:end="281:60">*</operator> <operator pos:start="281:62" pos:end="281:62">(</operator><name pos:start="281:63" pos:end="281:63">i</name> <operator pos:start="281:65" pos:end="281:66">&gt;&gt;</operator> <literal type="number" pos:start="281:68" pos:end="281:68">1</literal><operator pos:start="281:69" pos:end="281:69">)</operator></expr></init></decl>;</decl_stmt>

                                <decl_stmt pos:start="283:33" pos:end="285:101"><decl pos:start="283:33" pos:end="285:100"><type pos:start="283:33" pos:end="283:35"><name pos:start="283:33" pos:end="283:35">int</name></type> <name pos:start="283:37" pos:end="283:38">xy</name> <init pos:start="283:40" pos:end="285:100">= <expr pos:start="283:42" pos:end="285:100"><operator pos:start="283:42" pos:end="283:42">(</operator><name pos:start="283:43" pos:end="283:46">mb_x</name> <operator pos:start="283:48" pos:end="283:48">*</operator> <literal type="number" pos:start="283:50" pos:end="283:52">2</literal> <operator pos:start="283:52" pos:end="283:52">+</operator> <operator pos:start="283:54" pos:end="283:54">(</operator><name pos:start="283:55" pos:end="283:55">i</name> <operator pos:start="283:57" pos:end="283:57">&amp;</operator> <literal type="number" pos:start="283:59" pos:end="283:59">1</literal><operator pos:start="283:60" pos:end="283:60">)</operator> <operator pos:start="283:62" pos:end="283:62">+</operator>

                                          <operator pos:start="285:43" pos:end="285:43">(</operator><name pos:start="285:44" pos:end="285:47">mb_y</name> <operator pos:start="285:49" pos:end="285:49">*</operator> <literal type="number" pos:start="285:51" pos:end="285:53">2</literal> <operator pos:start="285:53" pos:end="285:53">+</operator> <operator pos:start="285:55" pos:end="285:55">(</operator><name pos:start="285:56" pos:end="285:56">i</name> <operator pos:start="285:58" pos:end="285:59">&gt;&gt;</operator> <literal type="number" pos:start="285:61" pos:end="285:61">1</literal><operator pos:start="285:62" pos:end="285:62">)</operator><operator pos:start="285:63" pos:end="285:63">)</operator> <operator pos:start="285:65" pos:end="285:65">*</operator> <name pos:start="285:67" pos:end="285:75">mv_stride</name><operator pos:start="285:76" pos:end="285:76">)</operator> <operator pos:start="285:78" pos:end="285:79">&lt;&lt;</operator> <operator pos:start="285:81" pos:end="285:81">(</operator><name pos:start="285:82" pos:end="285:95">mv_sample_log2</name> <operator pos:start="285:97" pos:end="285:97">-</operator> <literal type="number" pos:start="285:99" pos:end="285:99">1</literal><operator pos:start="285:100" pos:end="285:100">)</operator></expr></init></decl>;</decl_stmt>

                                <decl_stmt pos:start="287:33" pos:end="287:92"><decl pos:start="287:33" pos:end="287:91"><type pos:start="287:33" pos:end="287:35"><name pos:start="287:33" pos:end="287:35">int</name></type> <name pos:start="287:37" pos:end="287:38">mx</name> <init pos:start="287:40" pos:end="287:91">= <expr pos:start="287:42" pos:end="287:91"><operator pos:start="287:42" pos:end="287:42">(</operator><name pos:start="287:43" pos:end="287:76"><name pos:start="287:43" pos:end="287:46">pict</name><operator pos:start="287:47" pos:end="287:48">-&gt;</operator><name pos:start="287:49" pos:end="287:58">motion_val</name><index pos:start="287:59" pos:end="287:69">[<expr pos:start="287:60" pos:end="287:68"><name pos:start="287:60" pos:end="287:68">direction</name></expr>]</index><index pos:start="287:70" pos:end="287:73">[<expr pos:start="287:71" pos:end="287:72"><name pos:start="287:71" pos:end="287:72">xy</name></expr>]</index><index pos:start="287:74" pos:end="287:76">[<expr pos:start="287:75" pos:end="287:75"><literal type="number" pos:start="287:75" pos:end="287:75">0</literal></expr>]</index></name> <operator pos:start="287:78" pos:end="287:79">&gt;&gt;</operator> <name pos:start="287:81" pos:end="287:85">shift</name><operator pos:start="287:86" pos:end="287:86">)</operator> <operator pos:start="287:88" pos:end="287:88">+</operator> <name pos:start="287:90" pos:end="287:91">sx</name></expr></init></decl>;</decl_stmt>

                                <decl_stmt pos:start="289:33" pos:end="289:92"><decl pos:start="289:33" pos:end="289:91"><type pos:start="289:33" pos:end="289:35"><name pos:start="289:33" pos:end="289:35">int</name></type> <name pos:start="289:37" pos:end="289:38">my</name> <init pos:start="289:40" pos:end="289:91">= <expr pos:start="289:42" pos:end="289:91"><operator pos:start="289:42" pos:end="289:42">(</operator><name pos:start="289:43" pos:end="289:76"><name pos:start="289:43" pos:end="289:46">pict</name><operator pos:start="289:47" pos:end="289:48">-&gt;</operator><name pos:start="289:49" pos:end="289:58">motion_val</name><index pos:start="289:59" pos:end="289:69">[<expr pos:start="289:60" pos:end="289:68"><name pos:start="289:60" pos:end="289:68">direction</name></expr>]</index><index pos:start="289:70" pos:end="289:73">[<expr pos:start="289:71" pos:end="289:72"><name pos:start="289:71" pos:end="289:72">xy</name></expr>]</index><index pos:start="289:74" pos:end="289:76">[<expr pos:start="289:75" pos:end="289:75"><literal type="number" pos:start="289:75" pos:end="289:75">1</literal></expr>]</index></name> <operator pos:start="289:78" pos:end="289:79">&gt;&gt;</operator> <name pos:start="289:81" pos:end="289:85">shift</name><operator pos:start="289:86" pos:end="289:86">)</operator> <operator pos:start="289:88" pos:end="289:88">+</operator> <name pos:start="289:90" pos:end="289:91">sy</name></expr></init></decl>;</decl_stmt>

                                <expr_stmt pos:start="291:33" pos:end="293:69"><expr pos:start="291:33" pos:end="293:68"><call pos:start="291:33" pos:end="293:68"><name pos:start="291:33" pos:end="291:42">draw_arrow</name><argument_list pos:start="291:43" pos:end="293:68">(<argument pos:start="291:44" pos:end="291:46"><expr pos:start="291:44" pos:end="291:46"><name pos:start="291:44" pos:end="291:46">ptr</name></expr></argument>, <argument pos:start="291:49" pos:end="291:50"><expr pos:start="291:49" pos:end="291:50"><name pos:start="291:49" pos:end="291:50">sx</name></expr></argument>, <argument pos:start="291:53" pos:end="291:54"><expr pos:start="291:53" pos:end="291:54"><name pos:start="291:53" pos:end="291:54">sy</name></expr></argument>, <argument pos:start="291:57" pos:end="291:58"><expr pos:start="291:57" pos:end="291:58"><name pos:start="291:57" pos:end="291:58">mx</name></expr></argument>, <argument pos:start="291:61" pos:end="291:62"><expr pos:start="291:61" pos:end="291:62"><name pos:start="291:61" pos:end="291:62">my</name></expr></argument>, <argument pos:start="291:65" pos:end="291:69"><expr pos:start="291:65" pos:end="291:69"><name pos:start="291:65" pos:end="291:69">width</name></expr></argument>,

                                           <argument pos:start="293:44" pos:end="293:49"><expr pos:start="293:44" pos:end="293:49"><name pos:start="293:44" pos:end="293:49">height</name></expr></argument>, <argument pos:start="293:52" pos:end="293:62"><expr pos:start="293:52" pos:end="293:62"><name pos:start="293:52" pos:end="293:62"><name pos:start="293:52" pos:end="293:52">s</name><operator pos:start="293:53" pos:end="293:54">-&gt;</operator><name pos:start="293:55" pos:end="293:62">linesize</name></name></expr></argument>, <argument pos:start="293:65" pos:end="293:67"><expr pos:start="293:65" pos:end="293:67"><literal type="number" pos:start="293:65" pos:end="293:67">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></for>

                        </block_content>}</block></if> <if type="elseif" pos:start="297:27" pos:end="327:25">else if <condition pos:start="297:35" pos:end="297:68">(<expr pos:start="297:36" pos:end="297:67"><call pos:start="297:36" pos:end="297:67"><name pos:start="297:36" pos:end="297:42">IS_16X8</name><argument_list pos:start="297:43" pos:end="297:67">(<argument pos:start="297:44" pos:end="297:66"><expr pos:start="297:44" pos:end="297:66"><name pos:start="297:44" pos:end="297:66"><name pos:start="297:44" pos:end="297:47">pict</name><operator pos:start="297:48" pos:end="297:49">-&gt;</operator><name pos:start="297:50" pos:end="297:56">mb_type</name><index pos:start="297:57" pos:end="297:66">[<expr pos:start="297:58" pos:end="297:65"><name pos:start="297:58" pos:end="297:65">mb_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="297:70" pos:end="327:25">{<block_content pos:start="299:29" pos:end="325:29">

                            <decl_stmt pos:start="299:29" pos:end="299:34"><decl pos:start="299:29" pos:end="299:33"><type pos:start="299:29" pos:end="299:31"><name pos:start="299:29" pos:end="299:31">int</name></type> <name pos:start="299:33" pos:end="299:33">i</name></decl>;</decl_stmt>

                            <for pos:start="301:29" pos:end="325:29">for <control pos:start="301:33" pos:end="301:51">(<init pos:start="301:34" pos:end="301:39"><expr pos:start="301:34" pos:end="301:38"><name pos:start="301:34" pos:end="301:34">i</name> <operator pos:start="301:36" pos:end="301:36">=</operator> <literal type="number" pos:start="301:38" pos:end="301:38">0</literal></expr>;</init> <condition pos:start="301:41" pos:end="301:46"><expr pos:start="301:41" pos:end="301:45"><name pos:start="301:41" pos:end="301:41">i</name> <operator pos:start="301:43" pos:end="301:43">&lt;</operator> <literal type="number" pos:start="301:45" pos:end="301:45">2</literal></expr>;</condition> <incr pos:start="301:48" pos:end="301:50"><expr pos:start="301:48" pos:end="301:50"><name pos:start="301:48" pos:end="301:48">i</name><operator pos:start="301:49" pos:end="301:50">++</operator></expr></incr>)</control> <block pos:start="301:53" pos:end="325:29">{<block_content pos:start="303:33" pos:end="323:65">

                                <decl_stmt pos:start="303:33" pos:end="303:55"><decl pos:start="303:33" pos:end="303:54"><type pos:start="303:33" pos:end="303:35"><name pos:start="303:33" pos:end="303:35">int</name></type> <name pos:start="303:37" pos:end="303:38">sx</name> <init pos:start="303:40" pos:end="303:54">= <expr pos:start="303:42" pos:end="303:54"><name pos:start="303:42" pos:end="303:45">mb_x</name> <operator pos:start="303:47" pos:end="303:47">*</operator> <literal type="number" pos:start="303:49" pos:end="303:52">16</literal> <operator pos:start="303:52" pos:end="303:52">+</operator> <literal type="number" pos:start="303:54" pos:end="303:54">8</literal></expr></init></decl>;</decl_stmt>

                                <decl_stmt pos:start="305:33" pos:end="305:63"><decl pos:start="305:33" pos:end="305:62"><type pos:start="305:33" pos:end="305:35"><name pos:start="305:33" pos:end="305:35">int</name></type> <name pos:start="305:37" pos:end="305:38">sy</name> <init pos:start="305:40" pos:end="305:62">= <expr pos:start="305:42" pos:end="305:62"><name pos:start="305:42" pos:end="305:45">mb_y</name> <operator pos:start="305:47" pos:end="305:47">*</operator> <literal type="number" pos:start="305:49" pos:end="305:52">16</literal> <operator pos:start="305:52" pos:end="305:52">+</operator> <literal type="number" pos:start="305:54" pos:end="305:56">4</literal> <operator pos:start="305:56" pos:end="305:56">+</operator> <literal type="number" pos:start="305:58" pos:end="305:58">8</literal> <operator pos:start="305:60" pos:end="305:60">*</operator> <name pos:start="305:62" pos:end="305:62">i</name></expr></init></decl>;</decl_stmt>

                                <decl_stmt pos:start="307:33" pos:end="307:105"><decl pos:start="307:33" pos:end="307:104"><type pos:start="307:33" pos:end="307:35"><name pos:start="307:33" pos:end="307:35">int</name></type> <name pos:start="307:37" pos:end="307:38">xy</name> <init pos:start="307:40" pos:end="307:104">= <expr pos:start="307:42" pos:end="307:104"><operator pos:start="307:42" pos:end="307:42">(</operator><name pos:start="307:43" pos:end="307:46">mb_x</name> <operator pos:start="307:48" pos:end="307:48">*</operator> <literal type="number" pos:start="307:50" pos:end="307:52">2</literal> <operator pos:start="307:52" pos:end="307:52">+</operator> <operator pos:start="307:54" pos:end="307:54">(</operator><name pos:start="307:55" pos:end="307:58">mb_y</name> <operator pos:start="307:60" pos:end="307:60">*</operator> <literal type="number" pos:start="307:62" pos:end="307:64">2</literal> <operator pos:start="307:64" pos:end="307:64">+</operator> <name pos:start="307:66" pos:end="307:66">i</name><operator pos:start="307:67" pos:end="307:67">)</operator> <operator pos:start="307:69" pos:end="307:69">*</operator> <name pos:start="307:71" pos:end="307:79">mv_stride</name><operator pos:start="307:80" pos:end="307:80">)</operator> <operator pos:start="307:82" pos:end="307:83">&lt;&lt;</operator> <operator pos:start="307:85" pos:end="307:85">(</operator><name pos:start="307:86" pos:end="307:99">mv_sample_log2</name> <operator pos:start="307:101" pos:end="307:101">-</operator> <literal type="number" pos:start="307:103" pos:end="307:103">1</literal><operator pos:start="307:104" pos:end="307:104">)</operator></expr></init></decl>;</decl_stmt>

                                <decl_stmt pos:start="309:33" pos:end="309:87"><decl pos:start="309:33" pos:end="309:86"><type pos:start="309:33" pos:end="309:35"><name pos:start="309:33" pos:end="309:35">int</name></type> <name pos:start="309:37" pos:end="309:38">mx</name> <init pos:start="309:40" pos:end="309:86">= <expr pos:start="309:42" pos:end="309:86"><operator pos:start="309:42" pos:end="309:42">(</operator><name pos:start="309:43" pos:end="309:76"><name pos:start="309:43" pos:end="309:46">pict</name><operator pos:start="309:47" pos:end="309:48">-&gt;</operator><name pos:start="309:49" pos:end="309:58">motion_val</name><index pos:start="309:59" pos:end="309:69">[<expr pos:start="309:60" pos:end="309:68"><name pos:start="309:60" pos:end="309:68">direction</name></expr>]</index><index pos:start="309:70" pos:end="309:73">[<expr pos:start="309:71" pos:end="309:72"><name pos:start="309:71" pos:end="309:72">xy</name></expr>]</index><index pos:start="309:74" pos:end="309:76">[<expr pos:start="309:75" pos:end="309:75"><literal type="number" pos:start="309:75" pos:end="309:75">0</literal></expr>]</index></name> <operator pos:start="309:78" pos:end="309:79">&gt;&gt;</operator> <name pos:start="309:81" pos:end="309:85">shift</name><operator pos:start="309:86" pos:end="309:86">)</operator></expr></init></decl>;</decl_stmt>

                                <decl_stmt pos:start="311:33" pos:end="311:87"><decl pos:start="311:33" pos:end="311:86"><type pos:start="311:33" pos:end="311:35"><name pos:start="311:33" pos:end="311:35">int</name></type> <name pos:start="311:37" pos:end="311:38">my</name> <init pos:start="311:40" pos:end="311:86">= <expr pos:start="311:42" pos:end="311:86"><operator pos:start="311:42" pos:end="311:42">(</operator><name pos:start="311:43" pos:end="311:76"><name pos:start="311:43" pos:end="311:46">pict</name><operator pos:start="311:47" pos:end="311:48">-&gt;</operator><name pos:start="311:49" pos:end="311:58">motion_val</name><index pos:start="311:59" pos:end="311:69">[<expr pos:start="311:60" pos:end="311:68"><name pos:start="311:60" pos:end="311:68">direction</name></expr>]</index><index pos:start="311:70" pos:end="311:73">[<expr pos:start="311:71" pos:end="311:72"><name pos:start="311:71" pos:end="311:72">xy</name></expr>]</index><index pos:start="311:74" pos:end="311:76">[<expr pos:start="311:75" pos:end="311:75"><literal type="number" pos:start="311:75" pos:end="311:75">1</literal></expr>]</index></name> <operator pos:start="311:78" pos:end="311:79">&gt;&gt;</operator> <name pos:start="311:81" pos:end="311:85">shift</name><operator pos:start="311:86" pos:end="311:86">)</operator></expr></init></decl>;</decl_stmt>



                                <if_stmt pos:start="315:33" pos:end="317:44"><if pos:start="315:33" pos:end="317:44">if <condition pos:start="315:36" pos:end="315:75">(<expr pos:start="315:37" pos:end="315:74"><call pos:start="315:37" pos:end="315:74"><name pos:start="315:37" pos:end="315:49">IS_INTERLACED</name><argument_list pos:start="315:50" pos:end="315:74">(<argument pos:start="315:51" pos:end="315:73"><expr pos:start="315:51" pos:end="315:73"><name pos:start="315:51" pos:end="315:73"><name pos:start="315:51" pos:end="315:54">pict</name><operator pos:start="315:55" pos:end="315:56">-&gt;</operator><name pos:start="315:57" pos:end="315:63">mb_type</name><index pos:start="315:64" pos:end="315:73">[<expr pos:start="315:65" pos:end="315:72"><name pos:start="315:65" pos:end="315:72">mb_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="317:37" pos:end="317:44"><block_content pos:start="317:37" pos:end="317:44">

                                    <expr_stmt pos:start="317:37" pos:end="317:44"><expr pos:start="317:37" pos:end="317:43"><name pos:start="317:37" pos:end="317:38">my</name> <operator pos:start="317:40" pos:end="317:41">*=</operator> <literal type="number" pos:start="317:43" pos:end="317:43">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                            <expr_stmt pos:start="321:29" pos:end="323:65"><expr pos:start="321:29" pos:end="323:64"><call pos:start="321:29" pos:end="323:64"><name pos:start="321:29" pos:end="321:38">draw_arrow</name><argument_list pos:start="321:39" pos:end="323:64">(<argument pos:start="321:40" pos:end="321:42"><expr pos:start="321:40" pos:end="321:42"><name pos:start="321:40" pos:end="321:42">ptr</name></expr></argument>, <argument pos:start="321:45" pos:end="321:46"><expr pos:start="321:45" pos:end="321:46"><name pos:start="321:45" pos:end="321:46">sx</name></expr></argument>, <argument pos:start="321:49" pos:end="321:50"><expr pos:start="321:49" pos:end="321:50"><name pos:start="321:49" pos:end="321:50">sy</name></expr></argument>, <argument pos:start="321:53" pos:end="321:59"><expr pos:start="321:53" pos:end="321:59"><name pos:start="321:53" pos:end="321:54">mx</name> <operator pos:start="321:56" pos:end="321:56">+</operator> <name pos:start="321:58" pos:end="321:59">sx</name></expr></argument>, <argument pos:start="321:62" pos:end="321:68"><expr pos:start="321:62" pos:end="321:68"><name pos:start="321:62" pos:end="321:63">my</name> <operator pos:start="321:65" pos:end="321:65">+</operator> <name pos:start="321:67" pos:end="321:68">sy</name></expr></argument>, <argument pos:start="321:71" pos:end="321:75"><expr pos:start="321:71" pos:end="321:75"><name pos:start="321:71" pos:end="321:75">width</name></expr></argument>,

                                       <argument pos:start="323:40" pos:end="323:45"><expr pos:start="323:40" pos:end="323:45"><name pos:start="323:40" pos:end="323:45">height</name></expr></argument>, <argument pos:start="323:48" pos:end="323:58"><expr pos:start="323:48" pos:end="323:58"><name pos:start="323:48" pos:end="323:58"><name pos:start="323:48" pos:end="323:48">s</name><operator pos:start="323:49" pos:end="323:50">-&gt;</operator><name pos:start="323:51" pos:end="323:58">linesize</name></name></expr></argument>, <argument pos:start="323:61" pos:end="323:63"><expr pos:start="323:61" pos:end="323:63"><literal type="number" pos:start="323:61" pos:end="323:63">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></for>

                        </block_content>}</block></if> <if type="elseif" pos:start="327:27" pos:end="357:25">else if <condition pos:start="327:35" pos:end="327:68">(<expr pos:start="327:36" pos:end="327:67"><call pos:start="327:36" pos:end="327:67"><name pos:start="327:36" pos:end="327:42">IS_8X16</name><argument_list pos:start="327:43" pos:end="327:67">(<argument pos:start="327:44" pos:end="327:66"><expr pos:start="327:44" pos:end="327:66"><name pos:start="327:44" pos:end="327:66"><name pos:start="327:44" pos:end="327:47">pict</name><operator pos:start="327:48" pos:end="327:49">-&gt;</operator><name pos:start="327:50" pos:end="327:56">mb_type</name><index pos:start="327:57" pos:end="327:66">[<expr pos:start="327:58" pos:end="327:65"><name pos:start="327:58" pos:end="327:65">mb_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="327:70" pos:end="357:25">{<block_content pos:start="329:29" pos:end="355:29">

                            <decl_stmt pos:start="329:29" pos:end="329:34"><decl pos:start="329:29" pos:end="329:33"><type pos:start="329:29" pos:end="329:31"><name pos:start="329:29" pos:end="329:31">int</name></type> <name pos:start="329:33" pos:end="329:33">i</name></decl>;</decl_stmt>

                            <for pos:start="331:29" pos:end="355:29">for <control pos:start="331:33" pos:end="331:51">(<init pos:start="331:34" pos:end="331:39"><expr pos:start="331:34" pos:end="331:38"><name pos:start="331:34" pos:end="331:34">i</name> <operator pos:start="331:36" pos:end="331:36">=</operator> <literal type="number" pos:start="331:38" pos:end="331:38">0</literal></expr>;</init> <condition pos:start="331:41" pos:end="331:46"><expr pos:start="331:41" pos:end="331:45"><name pos:start="331:41" pos:end="331:41">i</name> <operator pos:start="331:43" pos:end="331:43">&lt;</operator> <literal type="number" pos:start="331:45" pos:end="331:45">2</literal></expr>;</condition> <incr pos:start="331:48" pos:end="331:50"><expr pos:start="331:48" pos:end="331:50"><name pos:start="331:48" pos:end="331:48">i</name><operator pos:start="331:49" pos:end="331:50">++</operator></expr></incr>)</control> <block pos:start="331:53" pos:end="355:29">{<block_content pos:start="333:33" pos:end="353:69">

                                <decl_stmt pos:start="333:33" pos:end="333:63"><decl pos:start="333:33" pos:end="333:62"><type pos:start="333:33" pos:end="333:35"><name pos:start="333:33" pos:end="333:35">int</name></type> <name pos:start="333:37" pos:end="333:38">sx</name> <init pos:start="333:40" pos:end="333:62">= <expr pos:start="333:42" pos:end="333:62"><name pos:start="333:42" pos:end="333:45">mb_x</name> <operator pos:start="333:47" pos:end="333:47">*</operator> <literal type="number" pos:start="333:49" pos:end="333:52">16</literal> <operator pos:start="333:52" pos:end="333:52">+</operator> <literal type="number" pos:start="333:54" pos:end="333:56">4</literal> <operator pos:start="333:56" pos:end="333:56">+</operator> <literal type="number" pos:start="333:58" pos:end="333:58">8</literal> <operator pos:start="333:60" pos:end="333:60">*</operator> <name pos:start="333:62" pos:end="333:62">i</name></expr></init></decl>;</decl_stmt>

                                <decl_stmt pos:start="335:33" pos:end="335:55"><decl pos:start="335:33" pos:end="335:54"><type pos:start="335:33" pos:end="335:35"><name pos:start="335:33" pos:end="335:35">int</name></type> <name pos:start="335:37" pos:end="335:38">sy</name> <init pos:start="335:40" pos:end="335:54">= <expr pos:start="335:42" pos:end="335:54"><name pos:start="335:42" pos:end="335:45">mb_y</name> <operator pos:start="335:47" pos:end="335:47">*</operator> <literal type="number" pos:start="335:49" pos:end="335:52">16</literal> <operator pos:start="335:52" pos:end="335:52">+</operator> <literal type="number" pos:start="335:54" pos:end="335:54">8</literal></expr></init></decl>;</decl_stmt>

                                <decl_stmt pos:start="337:33" pos:end="337:103"><decl pos:start="337:33" pos:end="337:102"><type pos:start="337:33" pos:end="337:35"><name pos:start="337:33" pos:end="337:35">int</name></type> <name pos:start="337:37" pos:end="337:38">xy</name> <init pos:start="337:40" pos:end="337:102">= <expr pos:start="337:42" pos:end="337:102"><operator pos:start="337:42" pos:end="337:42">(</operator><name pos:start="337:43" pos:end="337:46">mb_x</name> <operator pos:start="337:48" pos:end="337:48">*</operator> <literal type="number" pos:start="337:50" pos:end="337:52">2</literal> <operator pos:start="337:52" pos:end="337:52">+</operator> <name pos:start="337:54" pos:end="337:54">i</name> <operator pos:start="337:56" pos:end="337:56">+</operator> <name pos:start="337:58" pos:end="337:61">mb_y</name> <operator pos:start="337:63" pos:end="337:63">*</operator> <literal type="number" pos:start="337:65" pos:end="337:65">2</literal> <operator pos:start="337:67" pos:end="337:67">*</operator> <name pos:start="337:69" pos:end="337:77">mv_stride</name><operator pos:start="337:78" pos:end="337:78">)</operator> <operator pos:start="337:80" pos:end="337:81">&lt;&lt;</operator> <operator pos:start="337:83" pos:end="337:83">(</operator><name pos:start="337:84" pos:end="337:97">mv_sample_log2</name> <operator pos:start="337:99" pos:end="337:99">-</operator> <literal type="number" pos:start="337:101" pos:end="337:101">1</literal><operator pos:start="337:102" pos:end="337:102">)</operator></expr></init></decl>;</decl_stmt>

                                <decl_stmt pos:start="339:33" pos:end="339:85"><decl pos:start="339:33" pos:end="339:84"><type pos:start="339:33" pos:end="339:35"><name pos:start="339:33" pos:end="339:35">int</name></type> <name pos:start="339:37" pos:end="339:38">mx</name> <init pos:start="339:40" pos:end="339:84">= <expr pos:start="339:42" pos:end="339:84"><name pos:start="339:42" pos:end="339:75"><name pos:start="339:42" pos:end="339:45">pict</name><operator pos:start="339:46" pos:end="339:47">-&gt;</operator><name pos:start="339:48" pos:end="339:57">motion_val</name><index pos:start="339:58" pos:end="339:68">[<expr pos:start="339:59" pos:end="339:67"><name pos:start="339:59" pos:end="339:67">direction</name></expr>]</index><index pos:start="339:69" pos:end="339:72">[<expr pos:start="339:70" pos:end="339:71"><name pos:start="339:70" pos:end="339:71">xy</name></expr>]</index><index pos:start="339:73" pos:end="339:75">[<expr pos:start="339:74" pos:end="339:74"><literal type="number" pos:start="339:74" pos:end="339:74">0</literal></expr>]</index></name> <operator pos:start="339:77" pos:end="339:78">&gt;&gt;</operator> <name pos:start="339:80" pos:end="339:84">shift</name></expr></init></decl>;</decl_stmt>

                                <decl_stmt pos:start="341:33" pos:end="341:85"><decl pos:start="341:33" pos:end="341:84"><type pos:start="341:33" pos:end="341:35"><name pos:start="341:33" pos:end="341:35">int</name></type> <name pos:start="341:37" pos:end="341:38">my</name> <init pos:start="341:40" pos:end="341:84">= <expr pos:start="341:42" pos:end="341:84"><name pos:start="341:42" pos:end="341:75"><name pos:start="341:42" pos:end="341:45">pict</name><operator pos:start="341:46" pos:end="341:47">-&gt;</operator><name pos:start="341:48" pos:end="341:57">motion_val</name><index pos:start="341:58" pos:end="341:68">[<expr pos:start="341:59" pos:end="341:67"><name pos:start="341:59" pos:end="341:67">direction</name></expr>]</index><index pos:start="341:69" pos:end="341:72">[<expr pos:start="341:70" pos:end="341:71"><name pos:start="341:70" pos:end="341:71">xy</name></expr>]</index><index pos:start="341:73" pos:end="341:75">[<expr pos:start="341:74" pos:end="341:74"><literal type="number" pos:start="341:74" pos:end="341:74">1</literal></expr>]</index></name> <operator pos:start="341:77" pos:end="341:78">&gt;&gt;</operator> <name pos:start="341:80" pos:end="341:84">shift</name></expr></init></decl>;</decl_stmt>



                                <if_stmt pos:start="345:33" pos:end="347:44"><if pos:start="345:33" pos:end="347:44">if <condition pos:start="345:36" pos:end="345:75">(<expr pos:start="345:37" pos:end="345:74"><call pos:start="345:37" pos:end="345:74"><name pos:start="345:37" pos:end="345:49">IS_INTERLACED</name><argument_list pos:start="345:50" pos:end="345:74">(<argument pos:start="345:51" pos:end="345:73"><expr pos:start="345:51" pos:end="345:73"><name pos:start="345:51" pos:end="345:73"><name pos:start="345:51" pos:end="345:54">pict</name><operator pos:start="345:55" pos:end="345:56">-&gt;</operator><name pos:start="345:57" pos:end="345:63">mb_type</name><index pos:start="345:64" pos:end="345:73">[<expr pos:start="345:65" pos:end="345:72"><name pos:start="345:65" pos:end="345:72">mb_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="347:37" pos:end="347:44"><block_content pos:start="347:37" pos:end="347:44">

                                    <expr_stmt pos:start="347:37" pos:end="347:44"><expr pos:start="347:37" pos:end="347:43"><name pos:start="347:37" pos:end="347:38">my</name> <operator pos:start="347:40" pos:end="347:41">*=</operator> <literal type="number" pos:start="347:43" pos:end="347:43">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                                <expr_stmt pos:start="351:33" pos:end="353:69"><expr pos:start="351:33" pos:end="353:68"><call pos:start="351:33" pos:end="353:68"><name pos:start="351:33" pos:end="351:42">draw_arrow</name><argument_list pos:start="351:43" pos:end="353:68">(<argument pos:start="351:44" pos:end="351:46"><expr pos:start="351:44" pos:end="351:46"><name pos:start="351:44" pos:end="351:46">ptr</name></expr></argument>, <argument pos:start="351:49" pos:end="351:50"><expr pos:start="351:49" pos:end="351:50"><name pos:start="351:49" pos:end="351:50">sx</name></expr></argument>, <argument pos:start="351:53" pos:end="351:54"><expr pos:start="351:53" pos:end="351:54"><name pos:start="351:53" pos:end="351:54">sy</name></expr></argument>, <argument pos:start="351:57" pos:end="351:63"><expr pos:start="351:57" pos:end="351:63"><name pos:start="351:57" pos:end="351:58">mx</name> <operator pos:start="351:60" pos:end="351:60">+</operator> <name pos:start="351:62" pos:end="351:63">sx</name></expr></argument>, <argument pos:start="351:66" pos:end="351:72"><expr pos:start="351:66" pos:end="351:72"><name pos:start="351:66" pos:end="351:67">my</name> <operator pos:start="351:69" pos:end="351:69">+</operator> <name pos:start="351:71" pos:end="351:72">sy</name></expr></argument>, <argument pos:start="351:75" pos:end="351:79"><expr pos:start="351:75" pos:end="351:79"><name pos:start="351:75" pos:end="351:79">width</name></expr></argument>,

                                           <argument pos:start="353:44" pos:end="353:49"><expr pos:start="353:44" pos:end="353:49"><name pos:start="353:44" pos:end="353:49">height</name></expr></argument>, <argument pos:start="353:52" pos:end="353:62"><expr pos:start="353:52" pos:end="353:62"><name pos:start="353:52" pos:end="353:62"><name pos:start="353:52" pos:end="353:52">s</name><operator pos:start="353:53" pos:end="353:54">-&gt;</operator><name pos:start="353:55" pos:end="353:62">linesize</name></name></expr></argument>, <argument pos:start="353:65" pos:end="353:67"><expr pos:start="353:65" pos:end="353:67"><literal type="number" pos:start="353:65" pos:end="353:67">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></for>

                        </block_content>}</block></if> <else pos:start="357:27" pos:end="371:25">else <block pos:start="357:32" pos:end="371:25">{<block_content pos:start="359:31" pos:end="369:95">

                              <decl_stmt pos:start="359:31" pos:end="359:52"><decl pos:start="359:31" pos:end="359:51"><type pos:start="359:31" pos:end="359:33"><name pos:start="359:31" pos:end="359:33">int</name></type> <name pos:start="359:35" pos:end="359:36">sx</name><init pos:start="359:37" pos:end="359:51">= <expr pos:start="359:39" pos:end="359:51"><name pos:start="359:39" pos:end="359:42">mb_x</name> <operator pos:start="359:44" pos:end="359:44">*</operator> <literal type="number" pos:start="359:46" pos:end="359:49">16</literal> <operator pos:start="359:49" pos:end="359:49">+</operator> <literal type="number" pos:start="359:51" pos:end="359:51">8</literal></expr></init></decl>;</decl_stmt>

                              <decl_stmt pos:start="361:31" pos:end="361:52"><decl pos:start="361:31" pos:end="361:51"><type pos:start="361:31" pos:end="361:33"><name pos:start="361:31" pos:end="361:33">int</name></type> <name pos:start="361:35" pos:end="361:36">sy</name><init pos:start="361:37" pos:end="361:51">= <expr pos:start="361:39" pos:end="361:51"><name pos:start="361:39" pos:end="361:42">mb_y</name> <operator pos:start="361:44" pos:end="361:44">*</operator> <literal type="number" pos:start="361:46" pos:end="361:49">16</literal> <operator pos:start="361:49" pos:end="361:49">+</operator> <literal type="number" pos:start="361:51" pos:end="361:51">8</literal></expr></init></decl>;</decl_stmt>

                              <decl_stmt pos:start="363:31" pos:end="363:82"><decl pos:start="363:31" pos:end="363:81"><type pos:start="363:31" pos:end="363:33"><name pos:start="363:31" pos:end="363:33">int</name></type> <name pos:start="363:35" pos:end="363:36">xy</name><init pos:start="363:37" pos:end="363:81">= <expr pos:start="363:39" pos:end="363:81"><operator pos:start="363:39" pos:end="363:39">(</operator><name pos:start="363:40" pos:end="363:43">mb_x</name> <operator pos:start="363:45" pos:end="363:45">+</operator> <name pos:start="363:47" pos:end="363:50">mb_y</name> <operator pos:start="363:52" pos:end="363:52">*</operator> <name pos:start="363:54" pos:end="363:62">mv_stride</name><operator pos:start="363:63" pos:end="363:63">)</operator> <operator pos:start="363:65" pos:end="363:66">&lt;&lt;</operator> <name pos:start="363:68" pos:end="363:81">mv_sample_log2</name></expr></init></decl>;</decl_stmt>

                              <decl_stmt pos:start="365:31" pos:end="365:87"><decl pos:start="365:31" pos:end="365:86"><type pos:start="365:31" pos:end="365:33"><name pos:start="365:31" pos:end="365:33">int</name></type> <name pos:start="365:35" pos:end="365:36">mx</name><init pos:start="365:37" pos:end="365:86">= <expr pos:start="365:39" pos:end="365:86"><operator pos:start="365:39" pos:end="365:39">(</operator><name pos:start="365:40" pos:end="365:73"><name pos:start="365:40" pos:end="365:43">pict</name><operator pos:start="365:44" pos:end="365:45">-&gt;</operator><name pos:start="365:46" pos:end="365:55">motion_val</name><index pos:start="365:56" pos:end="365:66">[<expr pos:start="365:57" pos:end="365:65"><name pos:start="365:57" pos:end="365:65">direction</name></expr>]</index><index pos:start="365:67" pos:end="365:70">[<expr pos:start="365:68" pos:end="365:69"><name pos:start="365:68" pos:end="365:69">xy</name></expr>]</index><index pos:start="365:71" pos:end="365:73">[<expr pos:start="365:72" pos:end="365:72"><literal type="number" pos:start="365:72" pos:end="365:72">0</literal></expr>]</index></name><operator pos:start="365:74" pos:end="365:75">&gt;&gt;</operator><name pos:start="365:76" pos:end="365:80">shift</name><operator pos:start="365:81" pos:end="365:81">)</operator> <operator pos:start="365:83" pos:end="365:83">+</operator> <name pos:start="365:85" pos:end="365:86">sx</name></expr></init></decl>;</decl_stmt>

                              <decl_stmt pos:start="367:31" pos:end="367:87"><decl pos:start="367:31" pos:end="367:86"><type pos:start="367:31" pos:end="367:33"><name pos:start="367:31" pos:end="367:33">int</name></type> <name pos:start="367:35" pos:end="367:36">my</name><init pos:start="367:37" pos:end="367:86">= <expr pos:start="367:39" pos:end="367:86"><operator pos:start="367:39" pos:end="367:39">(</operator><name pos:start="367:40" pos:end="367:73"><name pos:start="367:40" pos:end="367:43">pict</name><operator pos:start="367:44" pos:end="367:45">-&gt;</operator><name pos:start="367:46" pos:end="367:55">motion_val</name><index pos:start="367:56" pos:end="367:66">[<expr pos:start="367:57" pos:end="367:65"><name pos:start="367:57" pos:end="367:65">direction</name></expr>]</index><index pos:start="367:67" pos:end="367:70">[<expr pos:start="367:68" pos:end="367:69"><name pos:start="367:68" pos:end="367:69">xy</name></expr>]</index><index pos:start="367:71" pos:end="367:73">[<expr pos:start="367:72" pos:end="367:72"><literal type="number" pos:start="367:72" pos:end="367:72">1</literal></expr>]</index></name><operator pos:start="367:74" pos:end="367:75">&gt;&gt;</operator><name pos:start="367:76" pos:end="367:80">shift</name><operator pos:start="367:81" pos:end="367:81">)</operator> <operator pos:start="367:83" pos:end="367:83">+</operator> <name pos:start="367:85" pos:end="367:86">sy</name></expr></init></decl>;</decl_stmt>

                              <expr_stmt pos:start="369:31" pos:end="369:95"><expr pos:start="369:31" pos:end="369:94"><call pos:start="369:31" pos:end="369:94"><name pos:start="369:31" pos:end="369:40">draw_arrow</name><argument_list pos:start="369:41" pos:end="369:94">(<argument pos:start="369:42" pos:end="369:44"><expr pos:start="369:42" pos:end="369:44"><name pos:start="369:42" pos:end="369:44">ptr</name></expr></argument>, <argument pos:start="369:47" pos:end="369:48"><expr pos:start="369:47" pos:end="369:48"><name pos:start="369:47" pos:end="369:48">sx</name></expr></argument>, <argument pos:start="369:51" pos:end="369:52"><expr pos:start="369:51" pos:end="369:52"><name pos:start="369:51" pos:end="369:52">sy</name></expr></argument>, <argument pos:start="369:55" pos:end="369:56"><expr pos:start="369:55" pos:end="369:56"><name pos:start="369:55" pos:end="369:56">mx</name></expr></argument>, <argument pos:start="369:59" pos:end="369:60"><expr pos:start="369:59" pos:end="369:60"><name pos:start="369:59" pos:end="369:60">my</name></expr></argument>, <argument pos:start="369:63" pos:end="369:67"><expr pos:start="369:63" pos:end="369:67"><name pos:start="369:63" pos:end="369:67">width</name></expr></argument>, <argument pos:start="369:70" pos:end="369:75"><expr pos:start="369:70" pos:end="369:75"><name pos:start="369:70" pos:end="369:75">height</name></expr></argument>, <argument pos:start="369:78" pos:end="369:88"><expr pos:start="369:78" pos:end="369:88"><name pos:start="369:78" pos:end="369:88"><name pos:start="369:78" pos:end="369:78">s</name><operator pos:start="369:79" pos:end="369:80">-&gt;</operator><name pos:start="369:81" pos:end="369:88">linesize</name></name></expr></argument>, <argument pos:start="369:91" pos:end="369:93"><expr pos:start="369:91" pos:end="369:93"><literal type="number" pos:start="369:91" pos:end="369:93">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="377:17" pos:end="401:17"><if pos:start="377:17" pos:end="401:17">if <condition pos:start="377:20" pos:end="377:76">(<expr pos:start="377:21" pos:end="377:75"><operator pos:start="377:21" pos:end="377:21">(</operator><name pos:start="377:22" pos:end="377:36"><name pos:start="377:22" pos:end="377:22">s</name><operator pos:start="377:23" pos:end="377:24">-&gt;</operator><name pos:start="377:25" pos:end="377:29">avctx</name><operator pos:start="377:30" pos:end="377:31">-&gt;</operator><name pos:start="377:32" pos:end="377:36">debug</name></name> <operator pos:start="377:38" pos:end="377:38">&amp;</operator> <name pos:start="377:40" pos:end="377:54">FF_DEBUG_VIS_QP</name><operator pos:start="377:55" pos:end="377:55">)</operator> <operator pos:start="377:57" pos:end="377:58">&amp;&amp;</operator> <name pos:start="377:60" pos:end="377:75"><name pos:start="377:60" pos:end="377:63">pict</name><operator pos:start="377:64" pos:end="377:65">-&gt;</operator><name pos:start="377:66" pos:end="377:75">motion_val</name></name></expr>)</condition> <block pos:start="377:78" pos:end="401:17">{<block_content pos:start="379:21" pos:end="399:21">

                    <decl_stmt pos:start="379:21" pos:end="381:55"><decl pos:start="379:21" pos:end="381:54"><type pos:start="379:21" pos:end="379:28"><name pos:start="379:21" pos:end="379:28">uint64_t</name></type> <name pos:start="379:30" pos:end="379:30">c</name> <init pos:start="379:32" pos:end="381:54">= <expr pos:start="379:34" pos:end="381:54"><operator pos:start="379:34" pos:end="379:34">(</operator><name pos:start="379:35" pos:end="379:62"><name pos:start="379:35" pos:end="379:38">pict</name><operator pos:start="379:39" pos:end="379:40">-&gt;</operator><name pos:start="379:41" pos:end="379:52">qscale_table</name><index pos:start="379:53" pos:end="379:62">[<expr pos:start="379:54" pos:end="379:61"><name pos:start="379:54" pos:end="379:61">mb_index</name></expr>]</index></name> <operator pos:start="379:64" pos:end="379:64">*</operator> <literal type="number" pos:start="379:66" pos:end="379:68">128</literal> <operator pos:start="379:70" pos:end="379:70">/</operator> <literal type="number" pos:start="379:72" pos:end="379:73">31</literal><operator pos:start="379:74" pos:end="379:74">)</operator> <operator pos:start="379:76" pos:end="379:76">*</operator>

                                 <literal type="number" pos:start="381:34" pos:end="381:54">0x0101010101010101ULL</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="383:21" pos:end="383:26"><decl pos:start="383:21" pos:end="383:25"><type pos:start="383:21" pos:end="383:23"><name pos:start="383:21" pos:end="383:23">int</name></type> <name pos:start="383:25" pos:end="383:25">y</name></decl>;</decl_stmt>

                    <for pos:start="385:21" pos:end="399:21">for <control pos:start="385:25" pos:end="385:54">(<init pos:start="385:26" pos:end="385:31"><expr pos:start="385:26" pos:end="385:30"><name pos:start="385:26" pos:end="385:26">y</name> <operator pos:start="385:28" pos:end="385:28">=</operator> <literal type="number" pos:start="385:30" pos:end="385:30">0</literal></expr>;</init> <condition pos:start="385:33" pos:end="385:49"><expr pos:start="385:33" pos:end="385:48"><name pos:start="385:33" pos:end="385:33">y</name> <operator pos:start="385:35" pos:end="385:35">&lt;</operator> <name pos:start="385:37" pos:end="385:48">block_height</name></expr>;</condition> <incr pos:start="385:51" pos:end="385:53"><expr pos:start="385:51" pos:end="385:53"><name pos:start="385:51" pos:end="385:51">y</name><operator pos:start="385:52" pos:end="385:53">++</operator></expr></incr>)</control> <block pos:start="385:56" pos:end="399:21">{<block_content pos:start="387:25" pos:end="397:61">

                        <expr_stmt pos:start="387:25" pos:end="391:61"><expr pos:start="387:25" pos:end="391:60"><operator pos:start="387:25" pos:end="387:25">*</operator><operator pos:start="387:26" pos:end="387:26">(</operator><name pos:start="387:27" pos:end="387:34">uint64_t</name> <operator pos:start="387:36" pos:end="387:36">*</operator><operator pos:start="387:37" pos:end="387:37">)</operator><operator pos:start="387:38" pos:end="387:38">(</operator><name pos:start="387:39" pos:end="387:51"><name pos:start="387:39" pos:end="387:42">pict</name><operator pos:start="387:43" pos:end="387:44">-&gt;</operator><name pos:start="387:45" pos:end="387:48">data</name><index pos:start="387:49" pos:end="387:51">[<expr pos:start="387:50" pos:end="387:50"><literal type="number" pos:start="387:50" pos:end="387:50">1</literal></expr>]</index></name> <operator pos:start="387:53" pos:end="387:53">+</operator> <literal type="number" pos:start="387:55" pos:end="387:55">8</literal> <operator pos:start="387:57" pos:end="387:57">*</operator> <name pos:start="387:59" pos:end="387:62">mb_x</name> <operator pos:start="387:64" pos:end="387:64">+</operator>

                                      <operator pos:start="389:39" pos:end="389:39">(</operator><name pos:start="389:40" pos:end="389:51">block_height</name> <operator pos:start="389:53" pos:end="389:53">*</operator> <name pos:start="389:55" pos:end="389:58">mb_y</name> <operator pos:start="389:60" pos:end="389:60">+</operator> <name pos:start="389:62" pos:end="389:62">y</name><operator pos:start="389:63" pos:end="389:63">)</operator> <operator pos:start="389:65" pos:end="389:65">*</operator>

                                      <name pos:start="391:39" pos:end="391:55"><name pos:start="391:39" pos:end="391:42">pict</name><operator pos:start="391:43" pos:end="391:44">-&gt;</operator><name pos:start="391:45" pos:end="391:52">linesize</name><index pos:start="391:53" pos:end="391:55">[<expr pos:start="391:54" pos:end="391:54"><literal type="number" pos:start="391:54" pos:end="391:54">1</literal></expr>]</index></name><operator pos:start="391:56" pos:end="391:56">)</operator> <operator pos:start="391:58" pos:end="391:58">=</operator> <name pos:start="391:60" pos:end="391:60">c</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="393:25" pos:end="397:61"><expr pos:start="393:25" pos:end="397:60"><operator pos:start="393:25" pos:end="393:25">*</operator><operator pos:start="393:26" pos:end="393:26">(</operator><name pos:start="393:27" pos:end="393:34">uint64_t</name> <operator pos:start="393:36" pos:end="393:36">*</operator><operator pos:start="393:37" pos:end="393:37">)</operator><operator pos:start="393:38" pos:end="393:38">(</operator><name pos:start="393:39" pos:end="393:51"><name pos:start="393:39" pos:end="393:42">pict</name><operator pos:start="393:43" pos:end="393:44">-&gt;</operator><name pos:start="393:45" pos:end="393:48">data</name><index pos:start="393:49" pos:end="393:51">[<expr pos:start="393:50" pos:end="393:50"><literal type="number" pos:start="393:50" pos:end="393:50">2</literal></expr>]</index></name> <operator pos:start="393:53" pos:end="393:53">+</operator> <literal type="number" pos:start="393:55" pos:end="393:55">8</literal> <operator pos:start="393:57" pos:end="393:57">*</operator> <name pos:start="393:59" pos:end="393:62">mb_x</name> <operator pos:start="393:64" pos:end="393:64">+</operator>

                                      <operator pos:start="395:39" pos:end="395:39">(</operator><name pos:start="395:40" pos:end="395:51">block_height</name> <operator pos:start="395:53" pos:end="395:53">*</operator> <name pos:start="395:55" pos:end="395:58">mb_y</name> <operator pos:start="395:60" pos:end="395:60">+</operator> <name pos:start="395:62" pos:end="395:62">y</name><operator pos:start="395:63" pos:end="395:63">)</operator> <operator pos:start="395:65" pos:end="395:65">*</operator>

                                      <name pos:start="397:39" pos:end="397:55"><name pos:start="397:39" pos:end="397:42">pict</name><operator pos:start="397:43" pos:end="397:44">-&gt;</operator><name pos:start="397:45" pos:end="397:52">linesize</name><index pos:start="397:53" pos:end="397:55">[<expr pos:start="397:54" pos:end="397:54"><literal type="number" pos:start="397:54" pos:end="397:54">2</literal></expr>]</index></name><operator pos:start="397:56" pos:end="397:56">)</operator> <operator pos:start="397:58" pos:end="397:58">=</operator> <name pos:start="397:60" pos:end="397:60">c</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="403:17" pos:end="565:17"><if pos:start="403:17" pos:end="565:17">if <condition pos:start="403:20" pos:end="405:37">(<expr pos:start="403:21" pos:end="405:36"><operator pos:start="403:21" pos:end="403:21">(</operator><name pos:start="403:22" pos:end="403:36"><name pos:start="403:22" pos:end="403:22">s</name><operator pos:start="403:23" pos:end="403:24">-&gt;</operator><name pos:start="403:25" pos:end="403:29">avctx</name><operator pos:start="403:30" pos:end="403:31">-&gt;</operator><name pos:start="403:32" pos:end="403:36">debug</name></name> <operator pos:start="403:38" pos:end="403:38">&amp;</operator> <name pos:start="403:40" pos:end="403:59">FF_DEBUG_VIS_MB_TYPE</name><operator pos:start="403:60" pos:end="403:60">)</operator> <operator pos:start="403:62" pos:end="403:63">&amp;&amp;</operator>

                    <name pos:start="405:21" pos:end="405:36"><name pos:start="405:21" pos:end="405:24">pict</name><operator pos:start="405:25" pos:end="405:26">-&gt;</operator><name pos:start="405:27" pos:end="405:36">motion_val</name></name></expr>)</condition> <block pos:start="405:39" pos:end="565:17">{<block_content pos:start="407:21" pos:end="563:21">

                    <decl_stmt pos:start="407:21" pos:end="407:58"><decl pos:start="407:21" pos:end="407:57"><type pos:start="407:21" pos:end="407:23"><name pos:start="407:21" pos:end="407:23">int</name></type> <name pos:start="407:25" pos:end="407:31">mb_type</name> <init pos:start="407:33" pos:end="407:57">= <expr pos:start="407:35" pos:end="407:57"><name pos:start="407:35" pos:end="407:57"><name pos:start="407:35" pos:end="407:38">pict</name><operator pos:start="407:39" pos:end="407:40">-&gt;</operator><name pos:start="407:41" pos:end="407:47">mb_type</name><index pos:start="407:48" pos:end="407:57">[<expr pos:start="407:49" pos:end="407:56"><name pos:start="407:49" pos:end="407:56">mb_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="409:21" pos:end="409:33"><decl pos:start="409:21" pos:end="409:30"><type pos:start="409:21" pos:end="409:28"><name pos:start="409:21" pos:end="409:28">uint64_t</name></type> <name pos:start="409:30" pos:end="409:30">u</name></decl>,<decl pos:start="409:32" pos:end="409:32"><type ref="prev" pos:start="409:21" pos:end="409:28"/><name pos:start="409:32" pos:end="409:32">v</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="411:21" pos:end="418:0"><decl pos:start="411:21" pos:end="411:25"><type pos:start="411:21" pos:end="411:23"><name pos:start="411:21" pos:end="411:23">int</name></type> <name pos:start="411:25" pos:end="411:25">y</name></decl>;</decl_stmt>

<cpp:define pos:start="413:1" pos:end="417:53">#<cpp:directive pos:start="413:2" pos:end="413:7">define</cpp:directive> <cpp:macro pos:start="413:9" pos:end="413:23"><name pos:start="413:9" pos:end="413:13">COLOR</name><parameter_list pos:start="413:14" pos:end="413:23">(<parameter pos:start="413:15" pos:end="413:19"><type pos:start="413:15" pos:end="413:19"><name pos:start="413:15" pos:end="413:19">theta</name></type></parameter>, <parameter pos:start="413:22" pos:end="413:22"><type pos:start="413:22" pos:end="413:22"><name pos:start="413:22" pos:end="413:22">r</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="415:5" pos:end="417:53">u = (int)(128 + r * cos(theta * 3.141592 / 180)); \

    v = (int)(128 + r * sin(theta * 3.141592 / 180));</cpp:value></cpp:define>





                    <expr_stmt pos:start="423:21" pos:end="423:32"><expr pos:start="423:21" pos:end="423:31"><name pos:start="423:21" pos:end="423:21">u</name> <operator pos:start="423:23" pos:end="423:23">=</operator> <name pos:start="423:25" pos:end="423:25">v</name> <operator pos:start="423:27" pos:end="423:27">=</operator> <literal type="number" pos:start="423:29" pos:end="423:31">128</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="425:21" pos:end="473:21"><if pos:start="425:21" pos:end="429:21">if <condition pos:start="425:24" pos:end="425:40">(<expr pos:start="425:25" pos:end="425:39"><call pos:start="425:25" pos:end="425:39"><name pos:start="425:25" pos:end="425:30">IS_PCM</name><argument_list pos:start="425:31" pos:end="425:39">(<argument pos:start="425:32" pos:end="425:38"><expr pos:start="425:32" pos:end="425:38"><name pos:start="425:32" pos:end="425:38">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="425:42" pos:end="429:21">{<block_content pos:start="427:25" pos:end="427:38">

                        <macro pos:start="427:25" pos:end="427:38"><name pos:start="427:25" pos:end="427:29">COLOR</name><argument_list pos:start="427:30" pos:end="427:38">(<argument pos:start="427:31" pos:end="427:33"><literal type="number" pos:start="427:31" pos:end="427:33">120</literal></argument>, <argument pos:start="427:36" pos:end="427:37"><literal type="number" pos:start="427:36" pos:end="427:37">48</literal></argument>)</argument_list></macro>

                    </block_content>}</block></if> <if type="elseif" pos:start="429:23" pos:end="435:21">else if <condition pos:start="429:31" pos:end="431:54">(<expr pos:start="429:32" pos:end="431:53"><operator pos:start="429:32" pos:end="429:32">(</operator><call pos:start="429:33" pos:end="429:49"><name pos:start="429:33" pos:end="429:40">IS_INTRA</name><argument_list pos:start="429:41" pos:end="429:49">(<argument pos:start="429:42" pos:end="429:48"><expr pos:start="429:42" pos:end="429:48"><name pos:start="429:42" pos:end="429:48">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="429:51" pos:end="429:52">&amp;&amp;</operator> <call pos:start="429:54" pos:end="429:71"><name pos:start="429:54" pos:end="429:62">IS_ACPRED</name><argument_list pos:start="429:63" pos:end="429:71">(<argument pos:start="429:64" pos:end="429:70"><expr pos:start="429:64" pos:end="429:70"><name pos:start="429:64" pos:end="429:70">mb_type</name></expr></argument>)</argument_list></call><operator pos:start="429:72" pos:end="429:72">)</operator> <operator pos:start="429:74" pos:end="429:75">||</operator>

                               <call pos:start="431:32" pos:end="431:53"><name pos:start="431:32" pos:end="431:44">IS_INTRA16x16</name><argument_list pos:start="431:45" pos:end="431:53">(<argument pos:start="431:46" pos:end="431:52"><expr pos:start="431:46" pos:end="431:52"><name pos:start="431:46" pos:end="431:52">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="431:56" pos:end="435:21">{<block_content pos:start="433:25" pos:end="433:37">

                        <macro pos:start="433:25" pos:end="433:37"><name pos:start="433:25" pos:end="433:29">COLOR</name><argument_list pos:start="433:30" pos:end="433:37">(<argument pos:start="433:31" pos:end="433:32"><literal type="number" pos:start="433:31" pos:end="433:32">30</literal></argument>, <argument pos:start="433:35" pos:end="433:36"><literal type="number" pos:start="433:35" pos:end="433:36">48</literal></argument>)</argument_list></macro>

                    </block_content>}</block></if> <if type="elseif" pos:start="435:23" pos:end="439:21">else if <condition pos:start="435:31" pos:end="435:52">(<expr pos:start="435:32" pos:end="435:51"><call pos:start="435:32" pos:end="435:51"><name pos:start="435:32" pos:end="435:42">IS_INTRA4x4</name><argument_list pos:start="435:43" pos:end="435:51">(<argument pos:start="435:44" pos:end="435:50"><expr pos:start="435:44" pos:end="435:50"><name pos:start="435:44" pos:end="435:50">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="435:54" pos:end="439:21">{<block_content pos:start="437:25" pos:end="437:37">

                        <macro pos:start="437:25" pos:end="437:37"><name pos:start="437:25" pos:end="437:29">COLOR</name><argument_list pos:start="437:30" pos:end="437:37">(<argument pos:start="437:31" pos:end="437:32"><literal type="number" pos:start="437:31" pos:end="437:32">90</literal></argument>, <argument pos:start="437:35" pos:end="437:36"><literal type="number" pos:start="437:35" pos:end="437:36">48</literal></argument>)</argument_list></macro>

                    </block_content>}</block></if> <if type="elseif" pos:start="439:23" pos:end="443:21">else if <condition pos:start="439:31" pos:end="439:70">(<expr pos:start="439:32" pos:end="439:69"><call pos:start="439:32" pos:end="439:49"><name pos:start="439:32" pos:end="439:40">IS_DIRECT</name><argument_list pos:start="439:41" pos:end="439:49">(<argument pos:start="439:42" pos:end="439:48"><expr pos:start="439:42" pos:end="439:48"><name pos:start="439:42" pos:end="439:48">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="439:51" pos:end="439:52">&amp;&amp;</operator> <call pos:start="439:54" pos:end="439:69"><name pos:start="439:54" pos:end="439:60">IS_SKIP</name><argument_list pos:start="439:61" pos:end="439:69">(<argument pos:start="439:62" pos:end="439:68"><expr pos:start="439:62" pos:end="439:68"><name pos:start="439:62" pos:end="439:68">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="439:72" pos:end="443:21">{<block_content>

                        <comment type="line" pos:start="441:25" pos:end="441:41">// COLOR(120, 48)</comment>

                    </block_content>}</block></if> <if type="elseif" pos:start="443:23" pos:end="447:21">else if <condition pos:start="443:31" pos:end="443:50">(<expr pos:start="443:32" pos:end="443:49"><call pos:start="443:32" pos:end="443:49"><name pos:start="443:32" pos:end="443:40">IS_DIRECT</name><argument_list pos:start="443:41" pos:end="443:49">(<argument pos:start="443:42" pos:end="443:48"><expr pos:start="443:42" pos:end="443:48"><name pos:start="443:42" pos:end="443:48">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="443:52" pos:end="447:21">{<block_content pos:start="445:25" pos:end="445:38">

                        <macro pos:start="445:25" pos:end="445:38"><name pos:start="445:25" pos:end="445:29">COLOR</name><argument_list pos:start="445:30" pos:end="445:38">(<argument pos:start="445:31" pos:end="445:33"><literal type="number" pos:start="445:31" pos:end="445:33">150</literal></argument>, <argument pos:start="445:36" pos:end="445:37"><literal type="number" pos:start="445:36" pos:end="445:37">48</literal></argument>)</argument_list></macro>

                    </block_content>}</block></if> <if type="elseif" pos:start="447:23" pos:end="451:21">else if <condition pos:start="447:31" pos:end="447:67">(<expr pos:start="447:32" pos:end="447:66"><call pos:start="447:32" pos:end="447:46"><name pos:start="447:32" pos:end="447:37">IS_GMC</name><argument_list pos:start="447:38" pos:end="447:46">(<argument pos:start="447:39" pos:end="447:45"><expr pos:start="447:39" pos:end="447:45"><name pos:start="447:39" pos:end="447:45">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="447:48" pos:end="447:49">&amp;&amp;</operator> <call pos:start="447:51" pos:end="447:66"><name pos:start="447:51" pos:end="447:57">IS_SKIP</name><argument_list pos:start="447:58" pos:end="447:66">(<argument pos:start="447:59" pos:end="447:65"><expr pos:start="447:59" pos:end="447:65"><name pos:start="447:59" pos:end="447:65">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="447:69" pos:end="451:21">{<block_content pos:start="449:25" pos:end="449:38">

                        <macro pos:start="449:25" pos:end="449:38"><name pos:start="449:25" pos:end="449:29">COLOR</name><argument_list pos:start="449:30" pos:end="449:38">(<argument pos:start="449:31" pos:end="449:33"><literal type="number" pos:start="449:31" pos:end="449:33">170</literal></argument>, <argument pos:start="449:36" pos:end="449:37"><literal type="number" pos:start="449:36" pos:end="449:37">48</literal></argument>)</argument_list></macro>

                    </block_content>}</block></if> <if type="elseif" pos:start="451:23" pos:end="455:21">else if <condition pos:start="451:31" pos:end="451:47">(<expr pos:start="451:32" pos:end="451:46"><call pos:start="451:32" pos:end="451:46"><name pos:start="451:32" pos:end="451:37">IS_GMC</name><argument_list pos:start="451:38" pos:end="451:46">(<argument pos:start="451:39" pos:end="451:45"><expr pos:start="451:39" pos:end="451:45"><name pos:start="451:39" pos:end="451:45">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="451:49" pos:end="455:21">{<block_content pos:start="453:25" pos:end="453:38">

                        <macro pos:start="453:25" pos:end="453:38"><name pos:start="453:25" pos:end="453:29">COLOR</name><argument_list pos:start="453:30" pos:end="453:38">(<argument pos:start="453:31" pos:end="453:33"><literal type="number" pos:start="453:31" pos:end="453:33">190</literal></argument>, <argument pos:start="453:36" pos:end="453:37"><literal type="number" pos:start="453:36" pos:end="453:37">48</literal></argument>)</argument_list></macro>

                    </block_content>}</block></if> <if type="elseif" pos:start="455:23" pos:end="459:21">else if <condition pos:start="455:31" pos:end="455:48">(<expr pos:start="455:32" pos:end="455:47"><call pos:start="455:32" pos:end="455:47"><name pos:start="455:32" pos:end="455:38">IS_SKIP</name><argument_list pos:start="455:39" pos:end="455:47">(<argument pos:start="455:40" pos:end="455:46"><expr pos:start="455:40" pos:end="455:46"><name pos:start="455:40" pos:end="455:46">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="455:50" pos:end="459:21">{<block_content>

                        <comment type="line" pos:start="457:25" pos:end="457:41">// COLOR(180, 48)</comment>

                    </block_content>}</block></if> <if type="elseif" pos:start="459:23" pos:end="463:21">else if <condition pos:start="459:31" pos:end="459:54">(<expr pos:start="459:32" pos:end="459:53"><operator pos:start="459:32" pos:end="459:32">!</operator><call pos:start="459:33" pos:end="459:53"><name pos:start="459:33" pos:end="459:41">USES_LIST</name><argument_list pos:start="459:42" pos:end="459:53">(<argument pos:start="459:43" pos:end="459:49"><expr pos:start="459:43" pos:end="459:49"><name pos:start="459:43" pos:end="459:49">mb_type</name></expr></argument>, <argument pos:start="459:52" pos:end="459:52"><expr pos:start="459:52" pos:end="459:52"><literal type="number" pos:start="459:52" pos:end="459:52">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="459:56" pos:end="463:21">{<block_content pos:start="461:25" pos:end="461:38">

                        <macro pos:start="461:25" pos:end="461:38"><name pos:start="461:25" pos:end="461:29">COLOR</name><argument_list pos:start="461:30" pos:end="461:38">(<argument pos:start="461:31" pos:end="461:33"><literal type="number" pos:start="461:31" pos:end="461:33">240</literal></argument>, <argument pos:start="461:36" pos:end="461:37"><literal type="number" pos:start="461:36" pos:end="461:37">48</literal></argument>)</argument_list></macro>

                    </block_content>}</block></if> <if type="elseif" pos:start="463:23" pos:end="467:21">else if <condition pos:start="463:31" pos:end="463:54">(<expr pos:start="463:32" pos:end="463:53"><operator pos:start="463:32" pos:end="463:32">!</operator><call pos:start="463:33" pos:end="463:53"><name pos:start="463:33" pos:end="463:41">USES_LIST</name><argument_list pos:start="463:42" pos:end="463:53">(<argument pos:start="463:43" pos:end="463:49"><expr pos:start="463:43" pos:end="463:49"><name pos:start="463:43" pos:end="463:49">mb_type</name></expr></argument>, <argument pos:start="463:52" pos:end="463:52"><expr pos:start="463:52" pos:end="463:52"><literal type="number" pos:start="463:52" pos:end="463:52">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="463:56" pos:end="467:21">{<block_content pos:start="465:25" pos:end="465:36">

                        <macro pos:start="465:25" pos:end="465:36"><name pos:start="465:25" pos:end="465:29">COLOR</name><argument_list pos:start="465:30" pos:end="465:36">(<argument pos:start="465:31" pos:end="465:31"><literal type="number" pos:start="465:31" pos:end="465:31">0</literal></argument>, <argument pos:start="465:34" pos:end="465:35"><literal type="number" pos:start="465:34" pos:end="465:35">48</literal></argument>)</argument_list></macro>

                    </block_content>}</block></if> <else pos:start="467:23" pos:end="473:21">else <block pos:start="467:28" pos:end="473:21">{<block_content pos:start="469:25" pos:end="471:37">

                        <expr_stmt pos:start="469:25" pos:end="469:83"><expr pos:start="469:25" pos:end="469:82"><call pos:start="469:25" pos:end="469:82"><name pos:start="469:25" pos:end="469:34">av_assert2</name><argument_list pos:start="469:35" pos:end="469:82">(<argument pos:start="469:36" pos:end="469:81"><expr pos:start="469:36" pos:end="469:81"><call pos:start="469:36" pos:end="469:56"><name pos:start="469:36" pos:end="469:44">USES_LIST</name><argument_list pos:start="469:45" pos:end="469:56">(<argument pos:start="469:46" pos:end="469:52"><expr pos:start="469:46" pos:end="469:52"><name pos:start="469:46" pos:end="469:52">mb_type</name></expr></argument>, <argument pos:start="469:55" pos:end="469:55"><expr pos:start="469:55" pos:end="469:55"><literal type="number" pos:start="469:55" pos:end="469:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="469:58" pos:end="469:59">&amp;&amp;</operator> <call pos:start="469:61" pos:end="469:81"><name pos:start="469:61" pos:end="469:69">USES_LIST</name><argument_list pos:start="469:70" pos:end="469:81">(<argument pos:start="469:71" pos:end="469:77"><expr pos:start="469:71" pos:end="469:77"><name pos:start="469:71" pos:end="469:77">mb_type</name></expr></argument>, <argument pos:start="469:80" pos:end="469:80"><expr pos:start="469:80" pos:end="469:80"><literal type="number" pos:start="469:80" pos:end="469:80">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <macro pos:start="471:25" pos:end="471:37"><name pos:start="471:25" pos:end="471:29">COLOR</name><argument_list pos:start="471:30" pos:end="471:37">(<argument pos:start="471:31" pos:end="471:33"><literal type="number" pos:start="471:31" pos:end="471:33">300</literal></argument>,<argument pos:start="471:35" pos:end="471:36"><literal type="number" pos:start="471:35" pos:end="471:36">48</literal></argument>)</argument_list></macro>

                    </block_content>}</block></else></if_stmt>



                    <expr_stmt pos:start="477:21" pos:end="477:47"><expr pos:start="477:21" pos:end="477:46"><name pos:start="477:21" pos:end="477:21">u</name> <operator pos:start="477:23" pos:end="477:24">*=</operator> <literal type="number" pos:start="477:26" pos:end="477:46">0x0101010101010101ULL</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="479:21" pos:end="479:47"><expr pos:start="479:21" pos:end="479:46"><name pos:start="479:21" pos:end="479:21">v</name> <operator pos:start="479:23" pos:end="479:24">*=</operator> <literal type="number" pos:start="479:26" pos:end="479:46">0x0101010101010101ULL</literal></expr>;</expr_stmt>

                    <for pos:start="481:21" pos:end="491:21">for <control pos:start="481:25" pos:end="481:54">(<init pos:start="481:26" pos:end="481:31"><expr pos:start="481:26" pos:end="481:30"><name pos:start="481:26" pos:end="481:26">y</name> <operator pos:start="481:28" pos:end="481:28">=</operator> <literal type="number" pos:start="481:30" pos:end="481:30">0</literal></expr>;</init> <condition pos:start="481:33" pos:end="481:49"><expr pos:start="481:33" pos:end="481:48"><name pos:start="481:33" pos:end="481:33">y</name> <operator pos:start="481:35" pos:end="481:35">&lt;</operator> <name pos:start="481:37" pos:end="481:48">block_height</name></expr>;</condition> <incr pos:start="481:51" pos:end="481:53"><expr pos:start="481:51" pos:end="481:53"><name pos:start="481:51" pos:end="481:51">y</name><operator pos:start="481:52" pos:end="481:53">++</operator></expr></incr>)</control> <block pos:start="481:56" pos:end="491:21">{<block_content pos:start="483:25" pos:end="489:89">

                        <expr_stmt pos:start="483:25" pos:end="485:89"><expr pos:start="483:25" pos:end="485:88"><operator pos:start="483:25" pos:end="483:25">*</operator><operator pos:start="483:26" pos:end="483:26">(</operator><name pos:start="483:27" pos:end="483:34">uint64_t</name> <operator pos:start="483:36" pos:end="483:36">*</operator><operator pos:start="483:37" pos:end="483:37">)</operator><operator pos:start="483:38" pos:end="483:38">(</operator><name pos:start="483:39" pos:end="483:51"><name pos:start="483:39" pos:end="483:42">pict</name><operator pos:start="483:43" pos:end="483:44">-&gt;</operator><name pos:start="483:45" pos:end="483:48">data</name><index pos:start="483:49" pos:end="483:51">[<expr pos:start="483:50" pos:end="483:50"><literal type="number" pos:start="483:50" pos:end="483:50">1</literal></expr>]</index></name> <operator pos:start="483:53" pos:end="483:53">+</operator> <literal type="number" pos:start="483:55" pos:end="483:55">8</literal> <operator pos:start="483:57" pos:end="483:57">*</operator> <name pos:start="483:59" pos:end="483:62">mb_x</name> <operator pos:start="483:64" pos:end="483:64">+</operator>

                                      <operator pos:start="485:39" pos:end="485:39">(</operator><name pos:start="485:40" pos:end="485:51">block_height</name> <operator pos:start="485:53" pos:end="485:53">*</operator> <name pos:start="485:55" pos:end="485:58">mb_y</name> <operator pos:start="485:60" pos:end="485:60">+</operator> <name pos:start="485:62" pos:end="485:62">y</name><operator pos:start="485:63" pos:end="485:63">)</operator> <operator pos:start="485:65" pos:end="485:65">*</operator> <name pos:start="485:67" pos:end="485:83"><name pos:start="485:67" pos:end="485:70">pict</name><operator pos:start="485:71" pos:end="485:72">-&gt;</operator><name pos:start="485:73" pos:end="485:80">linesize</name><index pos:start="485:81" pos:end="485:83">[<expr pos:start="485:82" pos:end="485:82"><literal type="number" pos:start="485:82" pos:end="485:82">1</literal></expr>]</index></name><operator pos:start="485:84" pos:end="485:84">)</operator> <operator pos:start="485:86" pos:end="485:86">=</operator> <name pos:start="485:88" pos:end="485:88">u</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="487:25" pos:end="489:89"><expr pos:start="487:25" pos:end="489:88"><operator pos:start="487:25" pos:end="487:25">*</operator><operator pos:start="487:26" pos:end="487:26">(</operator><name pos:start="487:27" pos:end="487:34">uint64_t</name> <operator pos:start="487:36" pos:end="487:36">*</operator><operator pos:start="487:37" pos:end="487:37">)</operator><operator pos:start="487:38" pos:end="487:38">(</operator><name pos:start="487:39" pos:end="487:51"><name pos:start="487:39" pos:end="487:42">pict</name><operator pos:start="487:43" pos:end="487:44">-&gt;</operator><name pos:start="487:45" pos:end="487:48">data</name><index pos:start="487:49" pos:end="487:51">[<expr pos:start="487:50" pos:end="487:50"><literal type="number" pos:start="487:50" pos:end="487:50">2</literal></expr>]</index></name> <operator pos:start="487:53" pos:end="487:53">+</operator> <literal type="number" pos:start="487:55" pos:end="487:55">8</literal> <operator pos:start="487:57" pos:end="487:57">*</operator> <name pos:start="487:59" pos:end="487:62">mb_x</name> <operator pos:start="487:64" pos:end="487:64">+</operator>

                                      <operator pos:start="489:39" pos:end="489:39">(</operator><name pos:start="489:40" pos:end="489:51">block_height</name> <operator pos:start="489:53" pos:end="489:53">*</operator> <name pos:start="489:55" pos:end="489:58">mb_y</name> <operator pos:start="489:60" pos:end="489:60">+</operator> <name pos:start="489:62" pos:end="489:62">y</name><operator pos:start="489:63" pos:end="489:63">)</operator> <operator pos:start="489:65" pos:end="489:65">*</operator> <name pos:start="489:67" pos:end="489:83"><name pos:start="489:67" pos:end="489:70">pict</name><operator pos:start="489:71" pos:end="489:72">-&gt;</operator><name pos:start="489:73" pos:end="489:80">linesize</name><index pos:start="489:81" pos:end="489:83">[<expr pos:start="489:82" pos:end="489:82"><literal type="number" pos:start="489:82" pos:end="489:82">2</literal></expr>]</index></name><operator pos:start="489:84" pos:end="489:84">)</operator> <operator pos:start="489:86" pos:end="489:86">=</operator> <name pos:start="489:88" pos:end="489:88">v</name></expr>;</expr_stmt>

                    </block_content>}</block></for>



                    <comment type="line" pos:start="495:21" pos:end="495:35">// segmentation</comment>

                    <if_stmt pos:start="497:21" pos:end="507:21"><if pos:start="497:21" pos:end="507:21">if <condition pos:start="497:24" pos:end="497:60">(<expr pos:start="497:25" pos:end="497:59"><call pos:start="497:25" pos:end="497:39"><name pos:start="497:25" pos:end="497:30">IS_8X8</name><argument_list pos:start="497:31" pos:end="497:39">(<argument pos:start="497:32" pos:end="497:38"><expr pos:start="497:32" pos:end="497:38"><name pos:start="497:32" pos:end="497:38">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="497:41" pos:end="497:42">||</operator> <call pos:start="497:44" pos:end="497:59"><name pos:start="497:44" pos:end="497:50">IS_16X8</name><argument_list pos:start="497:51" pos:end="497:59">(<argument pos:start="497:52" pos:end="497:58"><expr pos:start="497:52" pos:end="497:58"><name pos:start="497:52" pos:end="497:58">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="497:62" pos:end="507:21">{<block_content pos:start="499:25" pos:end="505:100">

                        <expr_stmt pos:start="499:25" pos:end="501:100"><expr pos:start="499:25" pos:end="501:99"><operator pos:start="499:25" pos:end="499:25">*</operator><operator pos:start="499:26" pos:end="499:26">(</operator><name pos:start="499:27" pos:end="499:34">uint64_t</name> <operator pos:start="499:36" pos:end="499:36">*</operator><operator pos:start="499:37" pos:end="499:37">)</operator><operator pos:start="499:38" pos:end="499:38">(</operator><name pos:start="499:39" pos:end="499:51"><name pos:start="499:39" pos:end="499:42">pict</name><operator pos:start="499:43" pos:end="499:44">-&gt;</operator><name pos:start="499:45" pos:end="499:48">data</name><index pos:start="499:49" pos:end="499:51">[<expr pos:start="499:50" pos:end="499:50"><literal type="number" pos:start="499:50" pos:end="499:50">0</literal></expr>]</index></name> <operator pos:start="499:53" pos:end="499:53">+</operator> <literal type="number" pos:start="499:55" pos:end="499:56">16</literal> <operator pos:start="499:58" pos:end="499:58">*</operator> <name pos:start="499:60" pos:end="499:63">mb_x</name> <operator pos:start="499:65" pos:end="499:65">+</operator> <literal type="number" pos:start="499:67" pos:end="499:69">0</literal> <operator pos:start="499:69" pos:end="499:69">+</operator>

                                      <operator pos:start="501:39" pos:end="501:39">(</operator><literal type="number" pos:start="501:40" pos:end="501:41">16</literal> <operator pos:start="501:43" pos:end="501:43">*</operator> <name pos:start="501:45" pos:end="501:48">mb_y</name> <operator pos:start="501:50" pos:end="501:50">+</operator> <literal type="number" pos:start="501:52" pos:end="501:52">8</literal><operator pos:start="501:53" pos:end="501:53">)</operator> <operator pos:start="501:55" pos:end="501:55">*</operator> <name pos:start="501:57" pos:end="501:73"><name pos:start="501:57" pos:end="501:60">pict</name><operator pos:start="501:61" pos:end="501:62">-&gt;</operator><name pos:start="501:63" pos:end="501:70">linesize</name><index pos:start="501:71" pos:end="501:73">[<expr pos:start="501:72" pos:end="501:72"><literal type="number" pos:start="501:72" pos:end="501:72">0</literal></expr>]</index></name><operator pos:start="501:74" pos:end="501:74">)</operator> <operator pos:start="501:76" pos:end="501:77">^=</operator> <literal type="number" pos:start="501:79" pos:end="501:99">0x8080808080808080ULL</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="503:25" pos:end="505:100"><expr pos:start="503:25" pos:end="505:99"><operator pos:start="503:25" pos:end="503:25">*</operator><operator pos:start="503:26" pos:end="503:26">(</operator><name pos:start="503:27" pos:end="503:34">uint64_t</name> <operator pos:start="503:36" pos:end="503:36">*</operator><operator pos:start="503:37" pos:end="503:37">)</operator><operator pos:start="503:38" pos:end="503:38">(</operator><name pos:start="503:39" pos:end="503:51"><name pos:start="503:39" pos:end="503:42">pict</name><operator pos:start="503:43" pos:end="503:44">-&gt;</operator><name pos:start="503:45" pos:end="503:48">data</name><index pos:start="503:49" pos:end="503:51">[<expr pos:start="503:50" pos:end="503:50"><literal type="number" pos:start="503:50" pos:end="503:50">0</literal></expr>]</index></name> <operator pos:start="503:53" pos:end="503:53">+</operator> <literal type="number" pos:start="503:55" pos:end="503:56">16</literal> <operator pos:start="503:58" pos:end="503:58">*</operator> <name pos:start="503:60" pos:end="503:63">mb_x</name> <operator pos:start="503:65" pos:end="503:65">+</operator> <literal type="number" pos:start="503:67" pos:end="503:69">8</literal> <operator pos:start="503:69" pos:end="503:69">+</operator>

                                      <operator pos:start="505:39" pos:end="505:39">(</operator><literal type="number" pos:start="505:40" pos:end="505:41">16</literal> <operator pos:start="505:43" pos:end="505:43">*</operator> <name pos:start="505:45" pos:end="505:48">mb_y</name> <operator pos:start="505:50" pos:end="505:50">+</operator> <literal type="number" pos:start="505:52" pos:end="505:52">8</literal><operator pos:start="505:53" pos:end="505:53">)</operator> <operator pos:start="505:55" pos:end="505:55">*</operator> <name pos:start="505:57" pos:end="505:73"><name pos:start="505:57" pos:end="505:60">pict</name><operator pos:start="505:61" pos:end="505:62">-&gt;</operator><name pos:start="505:63" pos:end="505:70">linesize</name><index pos:start="505:71" pos:end="505:73">[<expr pos:start="505:72" pos:end="505:72"><literal type="number" pos:start="505:72" pos:end="505:72">0</literal></expr>]</index></name><operator pos:start="505:74" pos:end="505:74">)</operator> <operator pos:start="505:76" pos:end="505:77">^=</operator> <literal type="number" pos:start="505:79" pos:end="505:99">0x8080808080808080ULL</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="509:21" pos:end="517:21"><if pos:start="509:21" pos:end="517:21">if <condition pos:start="509:24" pos:end="509:60">(<expr pos:start="509:25" pos:end="509:59"><call pos:start="509:25" pos:end="509:39"><name pos:start="509:25" pos:end="509:30">IS_8X8</name><argument_list pos:start="509:31" pos:end="509:39">(<argument pos:start="509:32" pos:end="509:38"><expr pos:start="509:32" pos:end="509:38"><name pos:start="509:32" pos:end="509:38">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="509:41" pos:end="509:42">||</operator> <call pos:start="509:44" pos:end="509:59"><name pos:start="509:44" pos:end="509:50">IS_8X16</name><argument_list pos:start="509:51" pos:end="509:59">(<argument pos:start="509:52" pos:end="509:58"><expr pos:start="509:52" pos:end="509:58"><name pos:start="509:52" pos:end="509:58">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="509:62" pos:end="517:21">{<block_content pos:start="511:25" pos:end="515:69">

                        <for pos:start="511:25" pos:end="515:69">for <control pos:start="511:29" pos:end="511:48">(<init pos:start="511:30" pos:end="511:35"><expr pos:start="511:30" pos:end="511:34"><name pos:start="511:30" pos:end="511:30">y</name> <operator pos:start="511:32" pos:end="511:32">=</operator> <literal type="number" pos:start="511:34" pos:end="511:34">0</literal></expr>;</init> <condition pos:start="511:37" pos:end="511:43"><expr pos:start="511:37" pos:end="511:42"><name pos:start="511:37" pos:end="511:37">y</name> <operator pos:start="511:39" pos:end="511:39">&lt;</operator> <literal type="number" pos:start="511:41" pos:end="511:42">16</literal></expr>;</condition> <incr pos:start="511:45" pos:end="511:47"><expr pos:start="511:45" pos:end="511:47"><name pos:start="511:45" pos:end="511:45">y</name><operator pos:start="511:46" pos:end="511:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="513:29" pos:end="515:69"><block_content pos:start="513:29" pos:end="515:69">

                            <expr_stmt pos:start="513:29" pos:end="515:69"><expr pos:start="513:29" pos:end="515:68"><name pos:start="513:29" pos:end="515:60"><name pos:start="513:29" pos:end="513:32">pict</name><operator pos:start="513:33" pos:end="513:34">-&gt;</operator><name pos:start="513:35" pos:end="513:38">data</name><index pos:start="513:39" pos:end="513:41">[<expr pos:start="513:40" pos:end="513:40"><literal type="number" pos:start="513:40" pos:end="513:40">0</literal></expr>]</index><index pos:start="513:42" pos:end="515:60">[<expr pos:start="513:43" pos:end="515:59"><literal type="number" pos:start="513:43" pos:end="513:44">16</literal> <operator pos:start="513:46" pos:end="513:46">*</operator> <name pos:start="513:48" pos:end="513:51">mb_x</name> <operator pos:start="513:53" pos:end="513:53">+</operator> <literal type="number" pos:start="513:55" pos:end="513:55">8</literal> <operator pos:start="513:57" pos:end="513:57">+</operator> <operator pos:start="513:59" pos:end="513:59">(</operator><literal type="number" pos:start="513:60" pos:end="513:61">16</literal> <operator pos:start="513:63" pos:end="513:63">*</operator> <name pos:start="513:65" pos:end="513:68">mb_y</name> <operator pos:start="513:70" pos:end="513:70">+</operator> <name pos:start="513:72" pos:end="513:72">y</name><operator pos:start="513:73" pos:end="513:73">)</operator> <operator pos:start="513:75" pos:end="513:75">*</operator>

                                          <name pos:start="515:43" pos:end="515:59"><name pos:start="515:43" pos:end="515:46">pict</name><operator pos:start="515:47" pos:end="515:48">-&gt;</operator><name pos:start="515:49" pos:end="515:56">linesize</name><index pos:start="515:57" pos:end="515:59">[<expr pos:start="515:58" pos:end="515:58"><literal type="number" pos:start="515:58" pos:end="515:58">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="515:62" pos:end="515:63">^=</operator> <literal type="number" pos:start="515:65" pos:end="515:68">0x80</literal></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="519:21" pos:end="553:21"><if pos:start="519:21" pos:end="553:21">if <condition pos:start="519:24" pos:end="519:63">(<expr pos:start="519:25" pos:end="519:62"><call pos:start="519:25" pos:end="519:39"><name pos:start="519:25" pos:end="519:30">IS_8X8</name><argument_list pos:start="519:31" pos:end="519:39">(<argument pos:start="519:32" pos:end="519:38"><expr pos:start="519:32" pos:end="519:38"><name pos:start="519:32" pos:end="519:38">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="519:41" pos:end="519:42">&amp;&amp;</operator> <name pos:start="519:44" pos:end="519:57">mv_sample_log2</name> <operator pos:start="519:59" pos:end="519:60">&gt;=</operator> <literal type="number" pos:start="519:62" pos:end="519:62">2</literal></expr>)</condition> <block pos:start="519:65" pos:end="553:21">{<block_content pos:start="521:25" pos:end="551:25">

                        <decl_stmt pos:start="521:25" pos:end="521:59"><decl pos:start="521:25" pos:end="521:58"><type pos:start="521:25" pos:end="521:27"><name pos:start="521:25" pos:end="521:27">int</name></type> <name pos:start="521:29" pos:end="521:30">dm</name> <init pos:start="521:32" pos:end="521:58">= <expr pos:start="521:34" pos:end="521:58"><literal type="number" pos:start="521:34" pos:end="521:34">1</literal> <operator pos:start="521:36" pos:end="521:37">&lt;&lt;</operator> <operator pos:start="521:39" pos:end="521:39">(</operator><name pos:start="521:40" pos:end="521:53">mv_sample_log2</name> <operator pos:start="521:55" pos:end="521:55">-</operator> <literal type="number" pos:start="521:57" pos:end="521:57">2</literal><operator pos:start="521:58" pos:end="521:58">)</operator></expr></init></decl>;</decl_stmt>

                        <for pos:start="523:25" pos:end="551:25">for <control pos:start="523:29" pos:end="523:47">(<init pos:start="523:30" pos:end="523:35"><expr pos:start="523:30" pos:end="523:34"><name pos:start="523:30" pos:end="523:30">i</name> <operator pos:start="523:32" pos:end="523:32">=</operator> <literal type="number" pos:start="523:34" pos:end="523:34">0</literal></expr>;</init> <condition pos:start="523:37" pos:end="523:42"><expr pos:start="523:37" pos:end="523:41"><name pos:start="523:37" pos:end="523:37">i</name> <operator pos:start="523:39" pos:end="523:39">&lt;</operator> <literal type="number" pos:start="523:41" pos:end="523:41">4</literal></expr>;</condition> <incr pos:start="523:44" pos:end="523:46"><expr pos:start="523:44" pos:end="523:46"><name pos:start="523:44" pos:end="523:44">i</name><operator pos:start="523:45" pos:end="523:46">++</operator></expr></incr>)</control> <block pos:start="523:49" pos:end="551:25">{<block_content pos:start="525:29" pos:end="549:90">

                            <decl_stmt pos:start="525:29" pos:end="525:61"><decl pos:start="525:29" pos:end="525:60"><type pos:start="525:29" pos:end="525:31"><name pos:start="525:29" pos:end="525:31">int</name></type> <name pos:start="525:33" pos:end="525:34">sx</name> <init pos:start="525:36" pos:end="525:60">= <expr pos:start="525:38" pos:end="525:60"><name pos:start="525:38" pos:end="525:41">mb_x</name> <operator pos:start="525:43" pos:end="525:43">*</operator> <literal type="number" pos:start="525:45" pos:end="525:48">16</literal> <operator pos:start="525:48" pos:end="525:48">+</operator> <literal type="number" pos:start="525:50" pos:end="525:50">8</literal> <operator pos:start="525:52" pos:end="525:52">*</operator> <operator pos:start="525:54" pos:end="525:54">(</operator><name pos:start="525:55" pos:end="525:55">i</name> <operator pos:start="525:57" pos:end="525:57">&amp;</operator> <literal type="number" pos:start="525:59" pos:end="525:59">1</literal><operator pos:start="525:60" pos:end="525:60">)</operator></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="527:29" pos:end="527:62"><decl pos:start="527:29" pos:end="527:61"><type pos:start="527:29" pos:end="527:31"><name pos:start="527:29" pos:end="527:31">int</name></type> <name pos:start="527:33" pos:end="527:34">sy</name> <init pos:start="527:36" pos:end="527:61">= <expr pos:start="527:38" pos:end="527:61"><name pos:start="527:38" pos:end="527:41">mb_y</name> <operator pos:start="527:43" pos:end="527:43">*</operator> <literal type="number" pos:start="527:45" pos:end="527:48">16</literal> <operator pos:start="527:48" pos:end="527:48">+</operator> <literal type="number" pos:start="527:50" pos:end="527:50">8</literal> <operator pos:start="527:52" pos:end="527:52">*</operator> <operator pos:start="527:54" pos:end="527:54">(</operator><name pos:start="527:55" pos:end="527:55">i</name> <operator pos:start="527:57" pos:end="527:58">&gt;&gt;</operator> <literal type="number" pos:start="527:60" pos:end="527:60">1</literal><operator pos:start="527:61" pos:end="527:61">)</operator></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="529:29" pos:end="531:96"><decl pos:start="529:29" pos:end="531:95"><type pos:start="529:29" pos:end="529:31"><name pos:start="529:29" pos:end="529:31">int</name></type> <name pos:start="529:33" pos:end="529:34">xy</name> <init pos:start="529:36" pos:end="531:95">= <expr pos:start="529:38" pos:end="531:95"><operator pos:start="529:38" pos:end="529:38">(</operator><name pos:start="529:39" pos:end="529:42">mb_x</name> <operator pos:start="529:44" pos:end="529:44">*</operator> <literal type="number" pos:start="529:46" pos:end="529:48">2</literal> <operator pos:start="529:48" pos:end="529:48">+</operator> <operator pos:start="529:50" pos:end="529:50">(</operator><name pos:start="529:51" pos:end="529:51">i</name> <operator pos:start="529:53" pos:end="529:53">&amp;</operator> <literal type="number" pos:start="529:55" pos:end="529:55">1</literal><operator pos:start="529:56" pos:end="529:56">)</operator> <operator pos:start="529:58" pos:end="529:58">+</operator>

                                     <operator pos:start="531:38" pos:end="531:38">(</operator><name pos:start="531:39" pos:end="531:42">mb_y</name> <operator pos:start="531:44" pos:end="531:44">*</operator> <literal type="number" pos:start="531:46" pos:end="531:48">2</literal> <operator pos:start="531:48" pos:end="531:48">+</operator> <operator pos:start="531:50" pos:end="531:50">(</operator><name pos:start="531:51" pos:end="531:51">i</name> <operator pos:start="531:53" pos:end="531:54">&gt;&gt;</operator> <literal type="number" pos:start="531:56" pos:end="531:56">1</literal><operator pos:start="531:57" pos:end="531:57">)</operator><operator pos:start="531:58" pos:end="531:58">)</operator> <operator pos:start="531:60" pos:end="531:60">*</operator> <name pos:start="531:62" pos:end="531:70">mv_stride</name><operator pos:start="531:71" pos:end="531:71">)</operator> <operator pos:start="531:73" pos:end="531:74">&lt;&lt;</operator> <operator pos:start="531:76" pos:end="531:76">(</operator><name pos:start="531:77" pos:end="531:90">mv_sample_log2</name> <operator pos:start="531:92" pos:end="531:92">-</operator> <literal type="number" pos:start="531:94" pos:end="531:94">1</literal><operator pos:start="531:95" pos:end="531:95">)</operator></expr></init></decl>;</decl_stmt>

                            <comment type="line" pos:start="533:29" pos:end="533:42">// FIXME bidir</comment>

                            <decl_stmt pos:start="535:29" pos:end="535:79"><decl pos:start="535:29" pos:end="535:78"><type pos:start="535:29" pos:end="535:37"><name pos:start="535:29" pos:end="535:35">int32_t</name> <modifier pos:start="535:37" pos:end="535:37">*</modifier></type><name pos:start="535:38" pos:end="535:39">mv</name> <init pos:start="535:41" pos:end="535:78">= <expr pos:start="535:43" pos:end="535:78"><operator pos:start="535:43" pos:end="535:43">(</operator><name pos:start="535:44" pos:end="535:50">int32_t</name> <operator pos:start="535:52" pos:end="535:52">*</operator><operator pos:start="535:53" pos:end="535:53">)</operator> <operator pos:start="535:55" pos:end="535:55">&amp;</operator><name pos:start="535:56" pos:end="535:78"><name pos:start="535:56" pos:end="535:59">pict</name><operator pos:start="535:60" pos:end="535:61">-&gt;</operator><name pos:start="535:62" pos:end="535:71">motion_val</name><index pos:start="535:72" pos:end="535:74">[<expr pos:start="535:73" pos:end="535:73"><literal type="number" pos:start="535:73" pos:end="535:73">0</literal></expr>]</index><index pos:start="535:75" pos:end="535:78">[<expr pos:start="535:76" pos:end="535:77"><name pos:start="535:76" pos:end="535:77">xy</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                            <if_stmt pos:start="537:29" pos:end="543:97"><if pos:start="537:29" pos:end="543:97">if <condition pos:start="537:32" pos:end="539:79">(<expr pos:start="537:33" pos:end="539:78"><name pos:start="537:33" pos:end="537:37"><name pos:start="537:33" pos:end="537:34">mv</name><index pos:start="537:35" pos:end="537:37">[<expr pos:start="537:36" pos:end="537:36"><literal type="number" pos:start="537:36" pos:end="537:36">0</literal></expr>]</index></name> <operator pos:start="537:39" pos:end="537:40">!=</operator> <name pos:start="537:42" pos:end="537:47"><name pos:start="537:42" pos:end="537:43">mv</name><index pos:start="537:44" pos:end="537:47">[<expr pos:start="537:45" pos:end="537:46"><name pos:start="537:45" pos:end="537:46">dm</name></expr>]</index></name> <operator pos:start="537:49" pos:end="537:50">||</operator>

                                <name pos:start="539:33" pos:end="539:50"><name pos:start="539:33" pos:end="539:34">mv</name><index pos:start="539:35" pos:end="539:50">[<expr pos:start="539:36" pos:end="539:49"><name pos:start="539:36" pos:end="539:37">dm</name> <operator pos:start="539:39" pos:end="539:39">*</operator> <name pos:start="539:41" pos:end="539:49">mv_stride</name></expr>]</index></name> <operator pos:start="539:52" pos:end="539:53">!=</operator> <name pos:start="539:55" pos:end="539:78"><name pos:start="539:55" pos:end="539:56">mv</name><index pos:start="539:57" pos:end="539:78">[<expr pos:start="539:58" pos:end="539:77"><name pos:start="539:58" pos:end="539:59">dm</name> <operator pos:start="539:61" pos:end="539:61">*</operator> <operator pos:start="539:63" pos:end="539:63">(</operator><name pos:start="539:64" pos:end="539:72">mv_stride</name> <operator pos:start="539:74" pos:end="539:74">+</operator> <literal type="number" pos:start="539:76" pos:end="539:76">1</literal><operator pos:start="539:77" pos:end="539:77">)</operator></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="541:33" pos:end="543:97"><block_content pos:start="541:33" pos:end="543:97">

                                <for pos:start="541:33" pos:end="543:97">for <control pos:start="541:37" pos:end="541:55">(<init pos:start="541:38" pos:end="541:43"><expr pos:start="541:38" pos:end="541:42"><name pos:start="541:38" pos:end="541:38">y</name> <operator pos:start="541:40" pos:end="541:40">=</operator> <literal type="number" pos:start="541:42" pos:end="541:42">0</literal></expr>;</init> <condition pos:start="541:45" pos:end="541:50"><expr pos:start="541:45" pos:end="541:49"><name pos:start="541:45" pos:end="541:45">y</name> <operator pos:start="541:47" pos:end="541:47">&lt;</operator> <literal type="number" pos:start="541:49" pos:end="541:49">8</literal></expr>;</condition> <incr pos:start="541:52" pos:end="541:54"><expr pos:start="541:52" pos:end="541:54"><name pos:start="541:52" pos:end="541:52">y</name><operator pos:start="541:53" pos:end="541:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="543:37" pos:end="543:97"><block_content pos:start="543:37" pos:end="543:97">

                                    <expr_stmt pos:start="543:37" pos:end="543:97"><expr pos:start="543:37" pos:end="543:96"><name pos:start="543:37" pos:end="543:88"><name pos:start="543:37" pos:end="543:40">pict</name><operator pos:start="543:41" pos:end="543:42">-&gt;</operator><name pos:start="543:43" pos:end="543:46">data</name><index pos:start="543:47" pos:end="543:49">[<expr pos:start="543:48" pos:end="543:48"><literal type="number" pos:start="543:48" pos:end="543:48">0</literal></expr>]</index><index pos:start="543:50" pos:end="543:88">[<expr pos:start="543:51" pos:end="543:87"><name pos:start="543:51" pos:end="543:52">sx</name> <operator pos:start="543:54" pos:end="543:54">+</operator> <literal type="number" pos:start="543:56" pos:end="543:56">4</literal> <operator pos:start="543:58" pos:end="543:58">+</operator> <operator pos:start="543:60" pos:end="543:60">(</operator><name pos:start="543:61" pos:end="543:62">sy</name> <operator pos:start="543:64" pos:end="543:64">+</operator> <name pos:start="543:66" pos:end="543:66">y</name><operator pos:start="543:67" pos:end="543:67">)</operator> <operator pos:start="543:69" pos:end="543:69">*</operator> <name pos:start="543:71" pos:end="543:87"><name pos:start="543:71" pos:end="543:74">pict</name><operator pos:start="543:75" pos:end="543:76">-&gt;</operator><name pos:start="543:77" pos:end="543:84">linesize</name><index pos:start="543:85" pos:end="543:87">[<expr pos:start="543:86" pos:end="543:86"><literal type="number" pos:start="543:86" pos:end="543:86">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="543:90" pos:end="543:91">^=</operator> <literal type="number" pos:start="543:93" pos:end="543:96">0x80</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

                            <if_stmt pos:start="545:29" pos:end="549:90"><if pos:start="545:29" pos:end="549:90">if <condition pos:start="545:32" pos:end="545:98">(<expr pos:start="545:33" pos:end="545:97"><name pos:start="545:33" pos:end="545:37"><name pos:start="545:33" pos:end="545:34">mv</name><index pos:start="545:35" pos:end="545:37">[<expr pos:start="545:36" pos:end="545:36"><literal type="number" pos:start="545:36" pos:end="545:36">0</literal></expr>]</index></name> <operator pos:start="545:39" pos:end="545:40">!=</operator> <name pos:start="545:42" pos:end="545:59"><name pos:start="545:42" pos:end="545:43">mv</name><index pos:start="545:44" pos:end="545:59">[<expr pos:start="545:45" pos:end="545:58"><name pos:start="545:45" pos:end="545:46">dm</name> <operator pos:start="545:48" pos:end="545:48">*</operator> <name pos:start="545:50" pos:end="545:58">mv_stride</name></expr>]</index></name> <operator pos:start="545:61" pos:end="545:62">||</operator> <name pos:start="545:64" pos:end="545:69"><name pos:start="545:64" pos:end="545:65">mv</name><index pos:start="545:66" pos:end="545:69">[<expr pos:start="545:67" pos:end="545:68"><name pos:start="545:67" pos:end="545:68">dm</name></expr>]</index></name> <operator pos:start="545:71" pos:end="545:72">!=</operator> <name pos:start="545:74" pos:end="545:97"><name pos:start="545:74" pos:end="545:75">mv</name><index pos:start="545:76" pos:end="545:97">[<expr pos:start="545:77" pos:end="545:96"><name pos:start="545:77" pos:end="545:78">dm</name> <operator pos:start="545:80" pos:end="545:80">*</operator> <operator pos:start="545:82" pos:end="545:82">(</operator><name pos:start="545:83" pos:end="545:91">mv_stride</name> <operator pos:start="545:93" pos:end="545:93">+</operator> <literal type="number" pos:start="545:95" pos:end="545:95">1</literal><operator pos:start="545:96" pos:end="545:96">)</operator></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="547:33" pos:end="549:90"><block_content pos:start="547:33" pos:end="549:90">

                                <expr_stmt pos:start="547:33" pos:end="549:90"><expr pos:start="547:33" pos:end="549:89"><operator pos:start="547:33" pos:end="547:33">*</operator><operator pos:start="547:34" pos:end="547:34">(</operator><name pos:start="547:35" pos:end="547:42">uint64_t</name> <operator pos:start="547:44" pos:end="547:44">*</operator><operator pos:start="547:45" pos:end="547:45">)</operator><operator pos:start="547:46" pos:end="547:46">(</operator><name pos:start="547:47" pos:end="547:59"><name pos:start="547:47" pos:end="547:50">pict</name><operator pos:start="547:51" pos:end="547:52">-&gt;</operator><name pos:start="547:53" pos:end="547:56">data</name><index pos:start="547:57" pos:end="547:59">[<expr pos:start="547:58" pos:end="547:58"><literal type="number" pos:start="547:58" pos:end="547:58">0</literal></expr>]</index></name> <operator pos:start="547:61" pos:end="547:61">+</operator> <name pos:start="547:63" pos:end="547:64">sx</name> <operator pos:start="547:66" pos:end="547:66">+</operator> <operator pos:start="547:68" pos:end="547:68">(</operator><name pos:start="547:69" pos:end="547:70">sy</name> <operator pos:start="547:72" pos:end="547:72">+</operator> <literal type="number" pos:start="547:74" pos:end="547:74">4</literal><operator pos:start="547:75" pos:end="547:75">)</operator> <operator pos:start="547:77" pos:end="547:77">*</operator>

                                              <name pos:start="549:47" pos:end="549:63"><name pos:start="549:47" pos:end="549:50">pict</name><operator pos:start="549:51" pos:end="549:52">-&gt;</operator><name pos:start="549:53" pos:end="549:60">linesize</name><index pos:start="549:61" pos:end="549:63">[<expr pos:start="549:62" pos:end="549:62"><literal type="number" pos:start="549:62" pos:end="549:62">0</literal></expr>]</index></name><operator pos:start="549:64" pos:end="549:64">)</operator> <operator pos:start="549:66" pos:end="549:67">^=</operator> <literal type="number" pos:start="549:69" pos:end="549:89">0x8080808080808080ULL</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if></if_stmt>



                    <if_stmt pos:start="557:21" pos:end="563:21"><if pos:start="557:21" pos:end="563:21">if <condition pos:start="557:24" pos:end="559:56">(<expr pos:start="557:25" pos:end="559:55"><call pos:start="557:25" pos:end="557:46"><name pos:start="557:25" pos:end="557:37">IS_INTERLACED</name><argument_list pos:start="557:38" pos:end="557:46">(<argument pos:start="557:39" pos:end="557:45"><expr pos:start="557:39" pos:end="557:45"><name pos:start="557:39" pos:end="557:45">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="557:48" pos:end="557:49">&amp;&amp;</operator>

                        <name pos:start="559:25" pos:end="559:35"><name pos:start="559:25" pos:end="559:25">s</name><operator pos:start="559:26" pos:end="559:27">-&gt;</operator><name pos:start="559:28" pos:end="559:35">codec_id</name></name> <operator pos:start="559:37" pos:end="559:38">==</operator> <name pos:start="559:40" pos:end="559:55">AV_CODEC_ID_H264</name></expr>)</condition> <block pos:start="559:58" pos:end="563:21">{<block_content>

                        <comment type="line" pos:start="561:25" pos:end="561:30">// hmm</comment>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="567:17" pos:end="567:46"><expr pos:start="567:17" pos:end="567:45"><name pos:start="567:17" pos:end="567:41"><name pos:start="567:17" pos:end="567:17">s</name><operator pos:start="567:18" pos:end="567:19">-&gt;</operator><name pos:start="567:20" pos:end="567:31">mbskip_table</name><index pos:start="567:32" pos:end="567:41">[<expr pos:start="567:33" pos:end="567:40"><name pos:start="567:33" pos:end="567:40">mb_index</name></expr>]</index></name> <operator pos:start="567:43" pos:end="567:43">=</operator> <literal type="number" pos:start="567:45" pos:end="567:45">0</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
