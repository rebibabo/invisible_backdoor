<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4405.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:11">DeviceState</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:22">nand_init</name><parameter_list pos:start="1:23" pos:end="1:67">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:35">BlockBackend</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">blk</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:53">manf_id</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:66"><decl pos:start="1:56" pos:end="1:66"><type pos:start="1:56" pos:end="1:66"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:66">chip_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:15">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:42">(<expr pos:start="9:9" pos:end="9:41"><name pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:22">nand_flash_ids</name><index pos:start="9:23" pos:end="9:31">[<expr pos:start="9:24" pos:end="9:30"><name pos:start="9:24" pos:end="9:30">chip_id</name></expr>]</index></name><operator pos:start="9:32" pos:end="9:32">.</operator><name pos:start="9:33" pos:end="9:36">size</name> <operator pos:start="9:38" pos:end="9:39">==</operator> <literal type="number" pos:start="9:41" pos:end="9:41">0</literal></expr>)</condition> <block pos:start="9:44" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:66">

        <expr_stmt pos:start="11:9" pos:end="11:66"><expr pos:start="11:9" pos:end="11:65"><call pos:start="11:9" pos:end="11:65"><name pos:start="11:9" pos:end="11:16">hw_error</name><argument_list pos:start="11:17" pos:end="11:65">(<argument pos:start="11:18" pos:end="11:50"><expr pos:start="11:18" pos:end="11:50"><literal type="string" pos:start="11:18" pos:end="11:50">"%s: Unsupported NAND chip ID.\n"</literal></expr></argument>, <argument pos:start="11:53" pos:end="11:64"><expr pos:start="11:53" pos:end="11:64"><name pos:start="11:53" pos:end="11:64">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:40"><expr pos:start="15:5" pos:end="15:39"><name pos:start="15:5" pos:end="15:7">dev</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:39"><name pos:start="15:11" pos:end="15:16">DEVICE</name><argument_list pos:start="15:17" pos:end="15:39">(<argument pos:start="15:18" pos:end="15:38"><expr pos:start="15:18" pos:end="15:38"><call pos:start="15:18" pos:end="15:38"><name pos:start="15:18" pos:end="15:27">object_new</name><argument_list pos:start="15:28" pos:end="15:38">(<argument pos:start="15:29" pos:end="15:37"><expr pos:start="15:29" pos:end="15:37"><name pos:start="15:29" pos:end="15:37">TYPE_NAND</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:57"><expr pos:start="17:5" pos:end="17:56"><call pos:start="17:5" pos:end="17:56"><name pos:start="17:5" pos:end="17:23">qdev_prop_set_uint8</name><argument_list pos:start="17:24" pos:end="17:56">(<argument pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:27">dev</name></expr></argument>, <argument pos:start="17:30" pos:end="17:46"><expr pos:start="17:30" pos:end="17:46"><literal type="string" pos:start="17:30" pos:end="17:46">"manufacturer_id"</literal></expr></argument>, <argument pos:start="17:49" pos:end="17:55"><expr pos:start="17:49" pos:end="17:55"><name pos:start="17:49" pos:end="17:55">manf_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:49"><expr pos:start="19:5" pos:end="19:48"><call pos:start="19:5" pos:end="19:48"><name pos:start="19:5" pos:end="19:23">qdev_prop_set_uint8</name><argument_list pos:start="19:24" pos:end="19:48">(<argument pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><name pos:start="19:25" pos:end="19:27">dev</name></expr></argument>, <argument pos:start="19:30" pos:end="19:38"><expr pos:start="19:30" pos:end="19:38"><literal type="string" pos:start="19:30" pos:end="19:38">"chip_id"</literal></expr></argument>, <argument pos:start="19:41" pos:end="19:47"><expr pos:start="19:41" pos:end="19:47"><name pos:start="19:41" pos:end="19:47">chip_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">blk</name></expr>)</condition> <block pos:start="21:14" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:61">

        <expr_stmt pos:start="23:9" pos:end="23:61"><expr pos:start="23:9" pos:end="23:60"><call pos:start="23:9" pos:end="23:60"><name pos:start="23:9" pos:end="23:27">qdev_prop_set_drive</name><argument_list pos:start="23:28" pos:end="23:60">(<argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">dev</name></expr></argument>, <argument pos:start="23:34" pos:end="23:40"><expr pos:start="23:34" pos:end="23:40"><literal type="string" pos:start="23:34" pos:end="23:40">"drive"</literal></expr></argument>, <argument pos:start="23:43" pos:end="23:45"><expr pos:start="23:43" pos:end="23:45"><name pos:start="23:43" pos:end="23:45">blk</name></expr></argument>, <argument pos:start="23:48" pos:end="23:59"><expr pos:start="23:48" pos:end="23:59"><operator pos:start="23:48" pos:end="23:48">&amp;</operator><name pos:start="23:49" pos:end="23:59">error_fatal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><call pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:20">qdev_init_nofail</name><argument_list pos:start="29:21" pos:end="29:25">(<argument pos:start="29:22" pos:end="29:24"><expr pos:start="29:22" pos:end="29:24"><name pos:start="29:22" pos:end="29:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">dev</name></expr>;</return>

</block_content>}</block></function>
</unit>
