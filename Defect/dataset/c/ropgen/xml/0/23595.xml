<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23595.c" pos:tabs="8"><function pos:start="1:1" pos:end="337:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vfw_read_header</name><parameter_list pos:start="1:27" pos:end="1:70">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:69"><decl pos:start="1:48" pos:end="1:69"><type pos:start="1:48" pos:end="1:69"><name pos:start="1:48" pos:end="1:65">AVFormatParameters</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:69">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="337:1">{<block_content pos:start="5:5" pos:end="335:22">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:18">vfw_ctx</name></name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">ctx</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">devnum</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">bisize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:14">BITMAPINFO</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:18">bi</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">CAPTUREPARMS</name></type> <name pos:start="17:18" pos:end="17:23">cparms</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:9">DWORD</name></type> <name pos:start="19:11" pos:end="19:23">biCompression</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">WORD</name></type> <name pos:start="21:10" pos:end="21:19">biBitCount</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:14"><decl pos:start="23:5" pos:end="23:13"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13">width</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:15"><decl pos:start="25:5" pos:end="25:14"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:14">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:12"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if<condition pos:start="31:7" pos:end="31:26">(<expr pos:start="31:8" pos:end="31:25"><operator pos:start="31:8" pos:end="31:8">!</operator><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:10">ap</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:21">time_base</name><operator pos:start="31:22" pos:end="31:22">.</operator><name pos:start="31:23" pos:end="31:25">den</name></name></expr>)</condition> <block pos:start="31:28" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:26">

        <expr_stmt pos:start="33:9" pos:end="33:68"><expr pos:start="33:9" pos:end="33:67"><call pos:start="33:9" pos:end="33:67"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:67">(<argument pos:start="33:16" pos:end="33:16"><expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">s</name></expr></argument>, <argument pos:start="33:19" pos:end="33:30"><expr pos:start="33:19" pos:end="33:30"><name pos:start="33:19" pos:end="33:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:33" pos:end="33:66"><expr pos:start="33:33" pos:end="33:66"><literal type="string" pos:start="33:33" pos:end="33:66">"A time base must be specified.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:26">return <expr pos:start="35:16" pos:end="35:25"><name pos:start="35:16" pos:end="35:25">AVERROR_IO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:15"><expr pos:start="41:5" pos:end="41:14"><name pos:start="41:5" pos:end="41:10"><name pos:start="41:5" pos:end="41:7">ctx</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:10">s</name></name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:14">s</name></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:77"><expr pos:start="45:5" pos:end="45:76"><name pos:start="45:5" pos:end="45:13"><name pos:start="45:5" pos:end="45:7">ctx</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:13">hwnd</name></name> <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:76"><name pos:start="45:17" pos:end="45:38">capCreateCaptureWindow</name><argument_list pos:start="45:39" pos:end="45:76">(<argument pos:start="45:40" pos:end="45:43"><expr pos:start="45:40" pos:end="45:43"><name pos:start="45:40" pos:end="45:43">NULL</name></expr></argument>, <argument pos:start="45:46" pos:end="45:46"><expr pos:start="45:46" pos:end="45:46"><literal type="number" pos:start="45:46" pos:end="45:46">0</literal></expr></argument>, <argument pos:start="45:49" pos:end="45:49"><expr pos:start="45:49" pos:end="45:49"><literal type="number" pos:start="45:49" pos:end="45:49">0</literal></expr></argument>, <argument pos:start="45:52" pos:end="45:52"><expr pos:start="45:52" pos:end="45:52"><literal type="number" pos:start="45:52" pos:end="45:52">0</literal></expr></argument>, <argument pos:start="45:55" pos:end="45:55"><expr pos:start="45:55" pos:end="45:55"><literal type="number" pos:start="45:55" pos:end="45:55">0</literal></expr></argument>, <argument pos:start="45:58" pos:end="45:58"><expr pos:start="45:58" pos:end="45:58"><literal type="number" pos:start="45:58" pos:end="45:58">0</literal></expr></argument>, <argument pos:start="45:61" pos:end="45:72"><expr pos:start="45:61" pos:end="45:72"><name pos:start="45:61" pos:end="45:72">HWND_MESSAGE</name></expr></argument>, <argument pos:start="45:75" pos:end="45:75"><expr pos:start="45:75" pos:end="45:75"><literal type="number" pos:start="45:75" pos:end="45:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if<condition pos:start="47:7" pos:end="47:18">(<expr pos:start="47:8" pos:end="47:17"><operator pos:start="47:8" pos:end="47:8">!</operator><name pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:11">ctx</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:17">hwnd</name></name></expr>)</condition> <block pos:start="47:20" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:26">

        <expr_stmt pos:start="49:9" pos:end="49:70"><expr pos:start="49:9" pos:end="49:69"><call pos:start="49:9" pos:end="49:69"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:69">(<argument pos:start="49:16" pos:end="49:16"><expr pos:start="49:16" pos:end="49:16"><name pos:start="49:16" pos:end="49:16">s</name></expr></argument>, <argument pos:start="49:19" pos:end="49:30"><expr pos:start="49:19" pos:end="49:30"><name pos:start="49:19" pos:end="49:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:33" pos:end="49:68"><expr pos:start="49:33" pos:end="49:68"><literal type="string" pos:start="49:33" pos:end="49:68">"Could not create capture window.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:26">return <expr pos:start="51:16" pos:end="51:25"><name pos:start="51:16" pos:end="51:25">AVERROR_IO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:65">/* If atoi fails, devnum==0 and the default device is used */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:31"><expr pos:start="59:5" pos:end="59:30"><name pos:start="59:5" pos:end="59:10">devnum</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <call pos:start="59:14" pos:end="59:30"><name pos:start="59:14" pos:end="59:17">atoi</name><argument_list pos:start="59:18" pos:end="59:30">(<argument pos:start="59:19" pos:end="59:29"><expr pos:start="59:19" pos:end="59:29"><name pos:start="59:19" pos:end="59:29"><name pos:start="59:19" pos:end="59:19">s</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:29">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:67"><expr pos:start="63:5" pos:end="63:66"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:66"><name pos:start="63:11" pos:end="63:21">SendMessage</name><argument_list pos:start="63:22" pos:end="63:66">(<argument pos:start="63:23" pos:end="63:31"><expr pos:start="63:23" pos:end="63:31"><name pos:start="63:23" pos:end="63:31"><name pos:start="63:23" pos:end="63:25">ctx</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:31">hwnd</name></name></expr></argument>, <argument pos:start="63:34" pos:end="63:54"><expr pos:start="63:34" pos:end="63:54"><name pos:start="63:34" pos:end="63:54">WM_CAP_DRIVER_CONNECT</name></expr></argument>, <argument pos:start="63:57" pos:end="63:62"><expr pos:start="63:57" pos:end="63:62"><name pos:start="63:57" pos:end="63:62">devnum</name></expr></argument>, <argument pos:start="63:65" pos:end="63:65"><expr pos:start="63:65" pos:end="63:65"><literal type="number" pos:start="63:65" pos:end="63:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="73:5">if<condition pos:start="65:7" pos:end="65:12">(<expr pos:start="65:8" pos:end="65:11"><operator pos:start="65:8" pos:end="65:8">!</operator><name pos:start="65:9" pos:end="65:11">ret</name></expr>)</condition> <block pos:start="65:14" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:31">

        <expr_stmt pos:start="67:9" pos:end="67:66"><expr pos:start="67:9" pos:end="67:65"><call pos:start="67:9" pos:end="67:65"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="67:65">(<argument pos:start="67:16" pos:end="67:16"><expr pos:start="67:16" pos:end="67:16"><name pos:start="67:16" pos:end="67:16">s</name></expr></argument>, <argument pos:start="67:19" pos:end="67:30"><expr pos:start="67:19" pos:end="67:30"><name pos:start="67:19" pos:end="67:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:33" pos:end="67:64"><expr pos:start="67:33" pos:end="67:64"><literal type="string" pos:start="67:33" pos:end="67:64">"Could not connect to device.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:33"><expr pos:start="69:9" pos:end="69:32"><call pos:start="69:9" pos:end="69:32"><name pos:start="69:9" pos:end="69:21">DestroyWindow</name><argument_list pos:start="69:22" pos:end="69:32">(<argument pos:start="69:23" pos:end="69:31"><expr pos:start="69:23" pos:end="69:31"><name pos:start="69:23" pos:end="69:31"><name pos:start="69:23" pos:end="69:25">ctx</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:31">hwnd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:31">return <expr pos:start="71:16" pos:end="71:30"><call pos:start="71:16" pos:end="71:30"><name pos:start="71:16" pos:end="71:22">AVERROR</name><argument_list pos:start="71:23" pos:end="71:30">(<argument pos:start="71:24" pos:end="71:29"><expr pos:start="71:24" pos:end="71:29"><name pos:start="71:24" pos:end="71:29">ENODEV</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:53"><expr pos:start="77:5" pos:end="77:52"><call pos:start="77:5" pos:end="77:52"><name pos:start="77:5" pos:end="77:15">SendMessage</name><argument_list pos:start="77:16" pos:end="77:52">(<argument pos:start="77:17" pos:end="77:25"><expr pos:start="77:17" pos:end="77:25"><name pos:start="77:17" pos:end="77:25"><name pos:start="77:17" pos:end="77:19">ctx</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:25">hwnd</name></name></expr></argument>, <argument pos:start="77:28" pos:end="77:45"><expr pos:start="77:28" pos:end="77:45"><name pos:start="77:28" pos:end="77:45">WM_CAP_SET_OVERLAY</name></expr></argument>, <argument pos:start="77:48" pos:end="77:48"><expr pos:start="77:48" pos:end="77:48"><literal type="number" pos:start="77:48" pos:end="77:48">0</literal></expr></argument>, <argument pos:start="77:51" pos:end="77:51"><expr pos:start="77:51" pos:end="77:51"><literal type="number" pos:start="77:51" pos:end="77:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:53"><expr pos:start="79:5" pos:end="79:52"><call pos:start="79:5" pos:end="79:52"><name pos:start="79:5" pos:end="79:15">SendMessage</name><argument_list pos:start="79:16" pos:end="79:52">(<argument pos:start="79:17" pos:end="79:25"><expr pos:start="79:17" pos:end="79:25"><name pos:start="79:17" pos:end="79:25"><name pos:start="79:17" pos:end="79:19">ctx</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:25">hwnd</name></name></expr></argument>, <argument pos:start="79:28" pos:end="79:45"><expr pos:start="79:28" pos:end="79:45"><name pos:start="79:28" pos:end="79:45">WM_CAP_SET_PREVIEW</name></expr></argument>, <argument pos:start="79:48" pos:end="79:48"><expr pos:start="79:48" pos:end="79:48"><literal type="number" pos:start="79:48" pos:end="79:48">0</literal></expr></argument>, <argument pos:start="79:51" pos:end="79:51"><expr pos:start="79:51" pos:end="79:51"><literal type="number" pos:start="79:51" pos:end="79:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="85:47"><expr pos:start="83:5" pos:end="85:46"><name pos:start="83:5" pos:end="83:7">ret</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <call pos:start="83:11" pos:end="85:46"><name pos:start="83:11" pos:end="83:21">SendMessage</name><argument_list pos:start="83:22" pos:end="85:46">(<argument pos:start="83:23" pos:end="83:31"><expr pos:start="83:23" pos:end="83:31"><name pos:start="83:23" pos:end="83:31"><name pos:start="83:23" pos:end="83:25">ctx</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:31">hwnd</name></name></expr></argument>, <argument pos:start="83:34" pos:end="83:64"><expr pos:start="83:34" pos:end="83:64"><name pos:start="83:34" pos:end="83:64">WM_CAP_SET_CALLBACK_VIDEOSTREAM</name></expr></argument>, <argument pos:start="83:67" pos:end="83:67"><expr pos:start="83:67" pos:end="83:67"><literal type="number" pos:start="83:67" pos:end="83:67">0</literal></expr></argument>,

                      <argument pos:start="85:23" pos:end="85:45"><expr pos:start="85:23" pos:end="85:45"><operator pos:start="85:23" pos:end="85:23">(</operator><name pos:start="85:24" pos:end="85:29">LPARAM</name><operator pos:start="85:30" pos:end="85:30">)</operator> <name pos:start="85:32" pos:end="85:45">videostream_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if<condition pos:start="87:7" pos:end="87:12">(<expr pos:start="87:8" pos:end="87:11"><operator pos:start="87:8" pos:end="87:8">!</operator><name pos:start="87:9" pos:end="87:11">ret</name></expr>)</condition> <block pos:start="87:14" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:21">

        <expr_stmt pos:start="89:9" pos:end="89:74"><expr pos:start="89:9" pos:end="89:73"><call pos:start="89:9" pos:end="89:73"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:73">(<argument pos:start="89:16" pos:end="89:16"><expr pos:start="89:16" pos:end="89:16"><name pos:start="89:16" pos:end="89:16">s</name></expr></argument>, <argument pos:start="89:19" pos:end="89:30"><expr pos:start="89:19" pos:end="89:30"><name pos:start="89:19" pos:end="89:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:33" pos:end="89:72"><expr pos:start="89:33" pos:end="89:72"><literal type="string" pos:start="89:33" pos:end="89:72">"Could not set video stream callback.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="91:9" pos:end="91:21">goto <name pos:start="91:14" pos:end="91:20">fail_io</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:63"><expr pos:start="97:5" pos:end="97:62"><call pos:start="97:5" pos:end="97:62"><name pos:start="97:5" pos:end="97:20">SetWindowLongPtr</name><argument_list pos:start="97:21" pos:end="97:62">(<argument pos:start="97:22" pos:end="97:30"><expr pos:start="97:22" pos:end="97:30"><name pos:start="97:22" pos:end="97:30"><name pos:start="97:22" pos:end="97:24">ctx</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:30">hwnd</name></name></expr></argument>, <argument pos:start="97:33" pos:end="97:45"><expr pos:start="97:33" pos:end="97:45"><name pos:start="97:33" pos:end="97:45">GWLP_USERDATA</name></expr></argument>, <argument pos:start="97:48" pos:end="97:61"><expr pos:start="97:48" pos:end="97:61"><operator pos:start="97:48" pos:end="97:48">(</operator><name pos:start="97:49" pos:end="97:56">LONG_PTR</name><operator pos:start="97:57" pos:end="97:57">)</operator> <name pos:start="97:59" pos:end="97:61">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:29"><expr pos:start="101:5" pos:end="101:28"><name pos:start="101:5" pos:end="101:6">st</name> <operator pos:start="101:8" pos:end="101:8">=</operator> <call pos:start="101:10" pos:end="101:28"><name pos:start="101:10" pos:end="101:22">av_new_stream</name><argument_list pos:start="101:23" pos:end="101:28">(<argument pos:start="101:24" pos:end="101:24"><expr pos:start="101:24" pos:end="101:24"><name pos:start="101:24" pos:end="101:24">s</name></expr></argument>, <argument pos:start="101:27" pos:end="101:27"><expr pos:start="101:27" pos:end="101:27"><literal type="number" pos:start="101:27" pos:end="101:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="109:5"><if pos:start="103:5" pos:end="109:5">if<condition pos:start="103:7" pos:end="103:11">(<expr pos:start="103:8" pos:end="103:10"><operator pos:start="103:8" pos:end="103:8">!</operator><name pos:start="103:9" pos:end="103:10">st</name></expr>)</condition> <block pos:start="103:13" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:29">

        <expr_stmt pos:start="105:9" pos:end="105:26"><expr pos:start="105:9" pos:end="105:25"><call pos:start="105:9" pos:end="105:25"><name pos:start="105:9" pos:end="105:22">vfw_read_close</name><argument_list pos:start="105:23" pos:end="105:25">(<argument pos:start="105:24" pos:end="105:24"><expr pos:start="105:24" pos:end="105:24"><name pos:start="105:24" pos:end="105:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="107:9" pos:end="107:29">return <expr pos:start="107:16" pos:end="107:28"><name pos:start="107:16" pos:end="107:28">AVERROR_NOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="113:5" pos:end="113:26">/* Set video format */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:66"><expr pos:start="115:5" pos:end="115:65"><name pos:start="115:5" pos:end="115:10">bisize</name> <operator pos:start="115:12" pos:end="115:12">=</operator> <call pos:start="115:14" pos:end="115:65"><name pos:start="115:14" pos:end="115:24">SendMessage</name><argument_list pos:start="115:25" pos:end="115:65">(<argument pos:start="115:26" pos:end="115:34"><expr pos:start="115:26" pos:end="115:34"><name pos:start="115:26" pos:end="115:34"><name pos:start="115:26" pos:end="115:28">ctx</name><operator pos:start="115:29" pos:end="115:30">-&gt;</operator><name pos:start="115:31" pos:end="115:34">hwnd</name></name></expr></argument>, <argument pos:start="115:37" pos:end="115:58"><expr pos:start="115:37" pos:end="115:58"><name pos:start="115:37" pos:end="115:58">WM_CAP_GET_VIDEOFORMAT</name></expr></argument>, <argument pos:start="115:61" pos:end="115:61"><expr pos:start="115:61" pos:end="115:61"><literal type="number" pos:start="115:61" pos:end="115:61">0</literal></expr></argument>, <argument pos:start="115:64" pos:end="115:64"><expr pos:start="115:64" pos:end="115:64"><literal type="number" pos:start="115:64" pos:end="115:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="119:21"><if pos:start="117:5" pos:end="119:21">if<condition pos:start="117:7" pos:end="117:15">(<expr pos:start="117:8" pos:end="117:14"><operator pos:start="117:8" pos:end="117:8">!</operator><name pos:start="117:9" pos:end="117:14">bisize</name></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:21"><block_content pos:start="119:9" pos:end="119:21">

        <goto pos:start="119:9" pos:end="119:21">goto <name pos:start="119:14" pos:end="119:20">fail_io</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:27"><expr pos:start="121:5" pos:end="121:26"><name pos:start="121:5" pos:end="121:6">bi</name> <operator pos:start="121:8" pos:end="121:8">=</operator> <call pos:start="121:10" pos:end="121:26"><name pos:start="121:10" pos:end="121:18">av_malloc</name><argument_list pos:start="121:19" pos:end="121:26">(<argument pos:start="121:20" pos:end="121:25"><expr pos:start="121:20" pos:end="121:25"><name pos:start="121:20" pos:end="121:25">bisize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="123:5" pos:end="129:5"><if pos:start="123:5" pos:end="129:5">if<condition pos:start="123:7" pos:end="123:11">(<expr pos:start="123:8" pos:end="123:10"><operator pos:start="123:8" pos:end="123:8">!</operator><name pos:start="123:9" pos:end="123:10">bi</name></expr>)</condition> <block pos:start="123:13" pos:end="129:5">{<block_content pos:start="125:9" pos:end="127:29">

        <expr_stmt pos:start="125:9" pos:end="125:26"><expr pos:start="125:9" pos:end="125:25"><call pos:start="125:9" pos:end="125:25"><name pos:start="125:9" pos:end="125:22">vfw_read_close</name><argument_list pos:start="125:23" pos:end="125:25">(<argument pos:start="125:24" pos:end="125:24"><expr pos:start="125:24" pos:end="125:24"><name pos:start="125:24" pos:end="125:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="127:9" pos:end="127:29">return <expr pos:start="127:16" pos:end="127:28"><name pos:start="127:16" pos:end="127:28">AVERROR_NOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:78"><expr pos:start="131:5" pos:end="131:77"><name pos:start="131:5" pos:end="131:7">ret</name> <operator pos:start="131:9" pos:end="131:9">=</operator> <call pos:start="131:11" pos:end="131:77"><name pos:start="131:11" pos:end="131:21">SendMessage</name><argument_list pos:start="131:22" pos:end="131:77">(<argument pos:start="131:23" pos:end="131:31"><expr pos:start="131:23" pos:end="131:31"><name pos:start="131:23" pos:end="131:31"><name pos:start="131:23" pos:end="131:25">ctx</name><operator pos:start="131:26" pos:end="131:27">-&gt;</operator><name pos:start="131:28" pos:end="131:31">hwnd</name></name></expr></argument>, <argument pos:start="131:34" pos:end="131:55"><expr pos:start="131:34" pos:end="131:55"><name pos:start="131:34" pos:end="131:55">WM_CAP_GET_VIDEOFORMAT</name></expr></argument>, <argument pos:start="131:58" pos:end="131:63"><expr pos:start="131:58" pos:end="131:63"><name pos:start="131:58" pos:end="131:63">bisize</name></expr></argument>, <argument pos:start="131:66" pos:end="131:76"><expr pos:start="131:66" pos:end="131:76"><operator pos:start="131:66" pos:end="131:66">(</operator><name pos:start="131:67" pos:end="131:72">LPARAM</name><operator pos:start="131:73" pos:end="131:73">)</operator> <name pos:start="131:75" pos:end="131:76">bi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="133:5" pos:end="135:21"><if pos:start="133:5" pos:end="135:21">if<condition pos:start="133:7" pos:end="133:12">(<expr pos:start="133:8" pos:end="133:11"><operator pos:start="133:8" pos:end="133:8">!</operator><name pos:start="133:9" pos:end="133:11">ret</name></expr>)</condition><block type="pseudo" pos:start="135:9" pos:end="135:21"><block_content pos:start="135:9" pos:end="135:21">

        <goto pos:start="135:9" pos:end="135:21">goto <name pos:start="135:14" pos:end="135:20">fail_bi</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:32"><expr pos:start="139:5" pos:end="139:31"><call pos:start="139:5" pos:end="139:31"><name pos:start="139:5" pos:end="139:12">dump_bih</name><argument_list pos:start="139:13" pos:end="139:31">(<argument pos:start="139:14" pos:end="139:14"><expr pos:start="139:14" pos:end="139:14"><name pos:start="139:14" pos:end="139:14">s</name></expr></argument>, <argument pos:start="139:17" pos:end="139:30"><expr pos:start="139:17" pos:end="139:30"><operator pos:start="139:17" pos:end="139:17">&amp;</operator><name pos:start="139:18" pos:end="139:30"><name pos:start="139:18" pos:end="139:19">bi</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:30">bmiHeader</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:62"><expr pos:start="143:5" pos:end="143:60"><name pos:start="143:5" pos:end="143:9">width</name>  <operator pos:start="143:12" pos:end="143:12">=</operator> <ternary pos:start="143:14" pos:end="143:60"><condition pos:start="143:14" pos:end="143:25"><expr pos:start="143:14" pos:end="143:22"><name pos:start="143:14" pos:end="143:22"><name pos:start="143:14" pos:end="143:15">ap</name><operator pos:start="143:16" pos:end="143:17">-&gt;</operator><name pos:start="143:18" pos:end="143:22">width</name></name></expr>  ?</condition><then pos:start="143:27" pos:end="143:35"> <expr pos:start="143:27" pos:end="143:35"><name pos:start="143:27" pos:end="143:35"><name pos:start="143:27" pos:end="143:28">ap</name><operator pos:start="143:29" pos:end="143:30">-&gt;</operator><name pos:start="143:31" pos:end="143:35">width</name></name></expr>  </then><else pos:start="143:38" pos:end="143:60">: <expr pos:start="143:40" pos:end="143:60"><name pos:start="143:40" pos:end="143:60"><name pos:start="143:40" pos:end="143:41">bi</name><operator pos:start="143:42" pos:end="143:43">-&gt;</operator><name pos:start="143:44" pos:end="143:52">bmiHeader</name><operator pos:start="143:53" pos:end="143:53">.</operator><name pos:start="143:54" pos:end="143:60">biWidth</name></name></expr></else></ternary></expr> ;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:62"><expr pos:start="145:5" pos:end="145:61"><name pos:start="145:5" pos:end="145:10">height</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <ternary pos:start="145:14" pos:end="145:61"><condition pos:start="145:14" pos:end="145:25"><expr pos:start="145:14" pos:end="145:23"><name pos:start="145:14" pos:end="145:23"><name pos:start="145:14" pos:end="145:15">ap</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:23">height</name></name></expr> ?</condition><then pos:start="145:27" pos:end="145:36"> <expr pos:start="145:27" pos:end="145:36"><name pos:start="145:27" pos:end="145:36"><name pos:start="145:27" pos:end="145:28">ap</name><operator pos:start="145:29" pos:end="145:30">-&gt;</operator><name pos:start="145:31" pos:end="145:36">height</name></name></expr> </then><else pos:start="145:38" pos:end="145:61">: <expr pos:start="145:40" pos:end="145:61"><name pos:start="145:40" pos:end="145:61"><name pos:start="145:40" pos:end="145:41">bi</name><operator pos:start="145:42" pos:end="145:43">-&gt;</operator><name pos:start="145:44" pos:end="145:52">bmiHeader</name><operator pos:start="145:53" pos:end="145:53">.</operator><name pos:start="145:54" pos:end="145:61">biHeight</name></name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:36"><expr pos:start="147:5" pos:end="147:34"><name pos:start="147:5" pos:end="147:25"><name pos:start="147:5" pos:end="147:6">bi</name><operator pos:start="147:7" pos:end="147:8">-&gt;</operator><name pos:start="147:9" pos:end="147:17">bmiHeader</name><operator pos:start="147:18" pos:end="147:18">.</operator><name pos:start="147:19" pos:end="147:25">biWidth</name></name>  <operator pos:start="147:28" pos:end="147:28">=</operator> <name pos:start="147:30" pos:end="147:34">width</name></expr> ;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="174:0"><expr pos:start="149:5" pos:end="149:35"><name pos:start="149:5" pos:end="149:26"><name pos:start="149:5" pos:end="149:6">bi</name><operator pos:start="149:7" pos:end="149:8">-&gt;</operator><name pos:start="149:9" pos:end="149:17">bmiHeader</name><operator pos:start="149:18" pos:end="149:18">.</operator><name pos:start="149:19" pos:end="149:26">biHeight</name></name> <operator pos:start="149:28" pos:end="149:28">=</operator> <name pos:start="149:30" pos:end="149:35">height</name></expr>;</expr_stmt>



<cpp:if pos:start="153:1" pos:end="153:5">#<cpp:directive pos:start="153:2" pos:end="153:3">if</cpp:directive> <expr pos:start="153:5" pos:end="153:5"><literal type="number" pos:start="153:5" pos:end="153:5">0</literal></expr></cpp:if>

    <comment type="block" pos:start="155:5" pos:end="157:66">/* For testing yet unsupported compressions

     * Copy these values from user-supplied verbose information */</comment>

    bi-&gt;bmiHeader.biWidth       = 320;

    bi-&gt;bmiHeader.biHeight      = 240;

    bi-&gt;bmiHeader.biPlanes      = 1;

    bi-&gt;bmiHeader.biBitCount    = 12;

    bi-&gt;bmiHeader.biCompression = MKTAG('I','4','2','0');

    bi-&gt;bmiHeader.biSizeImage   = 115200;

    dump_bih(s, &amp;bi-&gt;bmiHeader);

<cpp:endif pos:start="173:1" pos:end="173:6">#<cpp:directive pos:start="173:2" pos:end="173:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="177:5" pos:end="177:78"><expr pos:start="177:5" pos:end="177:77"><name pos:start="177:5" pos:end="177:7">ret</name> <operator pos:start="177:9" pos:end="177:9">=</operator> <call pos:start="177:11" pos:end="177:77"><name pos:start="177:11" pos:end="177:21">SendMessage</name><argument_list pos:start="177:22" pos:end="177:77">(<argument pos:start="177:23" pos:end="177:31"><expr pos:start="177:23" pos:end="177:31"><name pos:start="177:23" pos:end="177:31"><name pos:start="177:23" pos:end="177:25">ctx</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:31">hwnd</name></name></expr></argument>, <argument pos:start="177:34" pos:end="177:55"><expr pos:start="177:34" pos:end="177:55"><name pos:start="177:34" pos:end="177:55">WM_CAP_SET_VIDEOFORMAT</name></expr></argument>, <argument pos:start="177:58" pos:end="177:63"><expr pos:start="177:58" pos:end="177:63"><name pos:start="177:58" pos:end="177:63">bisize</name></expr></argument>, <argument pos:start="177:66" pos:end="177:76"><expr pos:start="177:66" pos:end="177:76"><operator pos:start="177:66" pos:end="177:66">(</operator><name pos:start="177:67" pos:end="177:72">LPARAM</name><operator pos:start="177:73" pos:end="177:73">)</operator> <name pos:start="177:75" pos:end="177:76">bi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="179:5" pos:end="185:5"><if pos:start="179:5" pos:end="185:5">if<condition pos:start="179:7" pos:end="179:12">(<expr pos:start="179:8" pos:end="179:11"><operator pos:start="179:8" pos:end="179:8">!</operator><name pos:start="179:9" pos:end="179:11">ret</name></expr>)</condition> <block pos:start="179:14" pos:end="185:5">{<block_content pos:start="181:9" pos:end="183:21">

        <expr_stmt pos:start="181:9" pos:end="181:65"><expr pos:start="181:9" pos:end="181:64"><call pos:start="181:9" pos:end="181:64"><name pos:start="181:9" pos:end="181:14">av_log</name><argument_list pos:start="181:15" pos:end="181:64">(<argument pos:start="181:16" pos:end="181:16"><expr pos:start="181:16" pos:end="181:16"><name pos:start="181:16" pos:end="181:16">s</name></expr></argument>, <argument pos:start="181:19" pos:end="181:30"><expr pos:start="181:19" pos:end="181:30"><name pos:start="181:19" pos:end="181:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="181:33" pos:end="181:63"><expr pos:start="181:33" pos:end="181:63"><literal type="string" pos:start="181:33" pos:end="181:63">"Could not set Video Format.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="183:9" pos:end="183:21">goto <name pos:start="183:14" pos:end="183:20">fail_bi</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:48"><expr pos:start="189:5" pos:end="189:47"><name pos:start="189:5" pos:end="189:17">biCompression</name> <operator pos:start="189:19" pos:end="189:19">=</operator> <name pos:start="189:21" pos:end="189:47"><name pos:start="189:21" pos:end="189:22">bi</name><operator pos:start="189:23" pos:end="189:24">-&gt;</operator><name pos:start="189:25" pos:end="189:33">bmiHeader</name><operator pos:start="189:34" pos:end="189:34">.</operator><name pos:start="189:35" pos:end="189:47">biCompression</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:42"><expr pos:start="191:5" pos:end="191:41"><name pos:start="191:5" pos:end="191:14">biBitCount</name> <operator pos:start="191:16" pos:end="191:16">=</operator> <name pos:start="191:18" pos:end="191:41"><name pos:start="191:18" pos:end="191:19">bi</name><operator pos:start="191:20" pos:end="191:21">-&gt;</operator><name pos:start="191:22" pos:end="191:30">bmiHeader</name><operator pos:start="191:31" pos:end="191:31">.</operator><name pos:start="191:32" pos:end="191:41">biBitCount</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:16"><expr pos:start="195:5" pos:end="195:15"><call pos:start="195:5" pos:end="195:15"><name pos:start="195:5" pos:end="195:11">av_free</name><argument_list pos:start="195:12" pos:end="195:15">(<argument pos:start="195:13" pos:end="195:14"><expr pos:start="195:13" pos:end="195:14"><name pos:start="195:13" pos:end="195:14">bi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="199:5" pos:end="199:28">/* Set sequence setup */</comment>

    <expr_stmt pos:start="201:5" pos:end="203:40"><expr pos:start="201:5" pos:end="203:39"><name pos:start="201:5" pos:end="201:7">ret</name> <operator pos:start="201:9" pos:end="201:9">=</operator> <call pos:start="201:11" pos:end="203:39"><name pos:start="201:11" pos:end="201:21">SendMessage</name><argument_list pos:start="201:22" pos:end="203:39">(<argument pos:start="201:23" pos:end="201:31"><expr pos:start="201:23" pos:end="201:31"><name pos:start="201:23" pos:end="201:31"><name pos:start="201:23" pos:end="201:25">ctx</name><operator pos:start="201:26" pos:end="201:27">-&gt;</operator><name pos:start="201:28" pos:end="201:31">hwnd</name></name></expr></argument>, <argument pos:start="201:34" pos:end="201:58"><expr pos:start="201:34" pos:end="201:58"><name pos:start="201:34" pos:end="201:58">WM_CAP_GET_SEQUENCE_SETUP</name></expr></argument>, <argument pos:start="201:61" pos:end="201:74"><expr pos:start="201:61" pos:end="201:74"><sizeof pos:start="201:61" pos:end="201:74">sizeof<argument_list pos:start="201:67" pos:end="201:74">(<argument pos:start="201:68" pos:end="201:73"><expr pos:start="201:68" pos:end="201:73"><name pos:start="201:68" pos:end="201:73">cparms</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                      <argument pos:start="203:23" pos:end="203:38"><expr pos:start="203:23" pos:end="203:38"><operator pos:start="203:23" pos:end="203:23">(</operator><name pos:start="203:24" pos:end="203:29">LPARAM</name><operator pos:start="203:30" pos:end="203:30">)</operator> <operator pos:start="203:32" pos:end="203:32">&amp;</operator><name pos:start="203:33" pos:end="203:38">cparms</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="205:5" pos:end="207:21"><if pos:start="205:5" pos:end="207:21">if<condition pos:start="205:7" pos:end="205:12">(<expr pos:start="205:8" pos:end="205:11"><operator pos:start="205:8" pos:end="205:8">!</operator><name pos:start="205:9" pos:end="205:11">ret</name></expr>)</condition><block type="pseudo" pos:start="207:9" pos:end="207:21"><block_content pos:start="207:9" pos:end="207:21">

        <goto pos:start="207:9" pos:end="207:21">goto <name pos:start="207:14" pos:end="207:20">fail_io</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="211:5" pos:end="211:34"><expr pos:start="211:5" pos:end="211:33"><call pos:start="211:5" pos:end="211:33"><name pos:start="211:5" pos:end="211:21">dump_captureparms</name><argument_list pos:start="211:22" pos:end="211:33">(<argument pos:start="211:23" pos:end="211:23"><expr pos:start="211:23" pos:end="211:23"><name pos:start="211:23" pos:end="211:23">s</name></expr></argument>, <argument pos:start="211:26" pos:end="211:32"><expr pos:start="211:26" pos:end="211:32"><operator pos:start="211:26" pos:end="211:26">&amp;</operator><name pos:start="211:27" pos:end="211:32">cparms</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="215:5" pos:end="215:22"><expr pos:start="215:5" pos:end="215:21"><name pos:start="215:5" pos:end="215:17"><name pos:start="215:5" pos:end="215:10">cparms</name><operator pos:start="215:11" pos:end="215:11">.</operator><name pos:start="215:12" pos:end="215:17">fYield</name></name> <operator pos:start="215:19" pos:end="215:19">=</operator> <literal type="number" pos:start="215:21" pos:end="215:21">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="215:24" pos:end="215:51">// Spawn a background thread</comment>

    <expr_stmt pos:start="217:5" pos:end="219:79"><expr pos:start="217:5" pos:end="219:78"><name pos:start="217:5" pos:end="217:36"><name pos:start="217:5" pos:end="217:10">cparms</name><operator pos:start="217:11" pos:end="217:11">.</operator><name pos:start="217:12" pos:end="217:36">dwRequestMicroSecPerFrame</name></name> <operator pos:start="217:38" pos:end="217:38">=</operator>

                               <operator pos:start="219:32" pos:end="219:32">(</operator><name pos:start="219:33" pos:end="219:49"><name pos:start="219:33" pos:end="219:34">ap</name><operator pos:start="219:35" pos:end="219:36">-&gt;</operator><name pos:start="219:37" pos:end="219:45">time_base</name><operator pos:start="219:46" pos:end="219:46">.</operator><name pos:start="219:47" pos:end="219:49">num</name></name><operator pos:start="219:50" pos:end="219:50">*</operator><literal type="number" pos:start="219:51" pos:end="219:57">1000000</literal><operator pos:start="219:58" pos:end="219:58">)</operator> <operator pos:start="219:60" pos:end="219:60">/</operator> <name pos:start="219:62" pos:end="219:78"><name pos:start="219:62" pos:end="219:63">ap</name><operator pos:start="219:64" pos:end="219:65">-&gt;</operator><name pos:start="219:66" pos:end="219:74">time_base</name><operator pos:start="219:75" pos:end="219:75">.</operator><name pos:start="219:76" pos:end="219:78">den</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:31"><expr pos:start="221:5" pos:end="221:30"><name pos:start="221:5" pos:end="221:26"><name pos:start="221:5" pos:end="221:10">cparms</name><operator pos:start="221:11" pos:end="221:11">.</operator><name pos:start="221:12" pos:end="221:26">fAbortLeftMouse</name></name> <operator pos:start="221:28" pos:end="221:28">=</operator> <literal type="number" pos:start="221:30" pos:end="221:30">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:32"><expr pos:start="223:5" pos:end="223:31"><name pos:start="223:5" pos:end="223:27"><name pos:start="223:5" pos:end="223:10">cparms</name><operator pos:start="223:11" pos:end="223:11">.</operator><name pos:start="223:12" pos:end="223:27">fAbortRightMouse</name></name> <operator pos:start="223:29" pos:end="223:29">=</operator> <literal type="number" pos:start="223:31" pos:end="223:31">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:29"><expr pos:start="225:5" pos:end="225:28"><name pos:start="225:5" pos:end="225:24"><name pos:start="225:5" pos:end="225:10">cparms</name><operator pos:start="225:11" pos:end="225:11">.</operator><name pos:start="225:12" pos:end="225:24">fCaptureAudio</name></name> <operator pos:start="225:26" pos:end="225:26">=</operator> <literal type="number" pos:start="225:28" pos:end="225:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:25"><expr pos:start="227:5" pos:end="227:24"><name pos:start="227:5" pos:end="227:20"><name pos:start="227:5" pos:end="227:10">cparms</name><operator pos:start="227:11" pos:end="227:11">.</operator><name pos:start="227:12" pos:end="227:20">vKeyAbort</name></name> <operator pos:start="227:22" pos:end="227:22">=</operator> <literal type="number" pos:start="227:24" pos:end="227:24">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="231:5" pos:end="233:40"><expr pos:start="231:5" pos:end="233:39"><name pos:start="231:5" pos:end="231:7">ret</name> <operator pos:start="231:9" pos:end="231:9">=</operator> <call pos:start="231:11" pos:end="233:39"><name pos:start="231:11" pos:end="231:21">SendMessage</name><argument_list pos:start="231:22" pos:end="233:39">(<argument pos:start="231:23" pos:end="231:31"><expr pos:start="231:23" pos:end="231:31"><name pos:start="231:23" pos:end="231:31"><name pos:start="231:23" pos:end="231:25">ctx</name><operator pos:start="231:26" pos:end="231:27">-&gt;</operator><name pos:start="231:28" pos:end="231:31">hwnd</name></name></expr></argument>, <argument pos:start="231:34" pos:end="231:58"><expr pos:start="231:34" pos:end="231:58"><name pos:start="231:34" pos:end="231:58">WM_CAP_SET_SEQUENCE_SETUP</name></expr></argument>, <argument pos:start="231:61" pos:end="231:74"><expr pos:start="231:61" pos:end="231:74"><sizeof pos:start="231:61" pos:end="231:74">sizeof<argument_list pos:start="231:67" pos:end="231:74">(<argument pos:start="231:68" pos:end="231:73"><expr pos:start="231:68" pos:end="231:73"><name pos:start="231:68" pos:end="231:73">cparms</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                      <argument pos:start="233:23" pos:end="233:38"><expr pos:start="233:23" pos:end="233:38"><operator pos:start="233:23" pos:end="233:23">(</operator><name pos:start="233:24" pos:end="233:29">LPARAM</name><operator pos:start="233:30" pos:end="233:30">)</operator> <operator pos:start="233:32" pos:end="233:32">&amp;</operator><name pos:start="233:33" pos:end="233:38">cparms</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="235:5" pos:end="237:21"><if pos:start="235:5" pos:end="237:21">if<condition pos:start="235:7" pos:end="235:12">(<expr pos:start="235:8" pos:end="235:11"><operator pos:start="235:8" pos:end="235:8">!</operator><name pos:start="235:9" pos:end="235:11">ret</name></expr>)</condition><block type="pseudo" pos:start="237:9" pos:end="237:21"><block_content pos:start="237:9" pos:end="237:21">

        <goto pos:start="237:9" pos:end="237:21">goto <name pos:start="237:14" pos:end="237:20">fail_io</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="241:5" pos:end="241:22"><expr pos:start="241:5" pos:end="241:21"><name pos:start="241:5" pos:end="241:9">codec</name> <operator pos:start="241:11" pos:end="241:11">=</operator> <name pos:start="241:13" pos:end="241:21"><name pos:start="241:13" pos:end="241:14">st</name><operator pos:start="241:15" pos:end="241:16">-&gt;</operator><name pos:start="241:17" pos:end="241:21">codec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:37"><expr pos:start="243:5" pos:end="243:36"><name pos:start="243:5" pos:end="243:20"><name pos:start="243:5" pos:end="243:9">codec</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:20">time_base</name></name> <operator pos:start="243:22" pos:end="243:22">=</operator> <name pos:start="243:24" pos:end="243:36"><name pos:start="243:24" pos:end="243:25">ap</name><operator pos:start="243:26" pos:end="243:27">-&gt;</operator><name pos:start="243:28" pos:end="243:36">time_base</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:41"><expr pos:start="245:5" pos:end="245:40"><name pos:start="245:5" pos:end="245:21"><name pos:start="245:5" pos:end="245:9">codec</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:21">codec_type</name></name> <operator pos:start="245:23" pos:end="245:23">=</operator> <name pos:start="245:25" pos:end="245:40">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:25"><expr pos:start="247:5" pos:end="247:24"><name pos:start="247:5" pos:end="247:16"><name pos:start="247:5" pos:end="247:9">codec</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:16">width</name></name> <operator pos:start="247:18" pos:end="247:18">=</operator> <name pos:start="247:20" pos:end="247:24">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:27"><expr pos:start="249:5" pos:end="249:26"><name pos:start="249:5" pos:end="249:17"><name pos:start="249:5" pos:end="249:9">codec</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:17">height</name></name> <operator pos:start="249:19" pos:end="249:19">=</operator> <name pos:start="249:21" pos:end="249:26">height</name></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:59"><expr pos:start="251:5" pos:end="251:58"><name pos:start="251:5" pos:end="251:18"><name pos:start="251:5" pos:end="251:9">codec</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:18">pix_fmt</name></name> <operator pos:start="251:20" pos:end="251:20">=</operator> <call pos:start="251:22" pos:end="251:58"><name pos:start="251:22" pos:end="251:31">vfw_pixfmt</name><argument_list pos:start="251:32" pos:end="251:58">(<argument pos:start="251:33" pos:end="251:45"><expr pos:start="251:33" pos:end="251:45"><name pos:start="251:33" pos:end="251:45">biCompression</name></expr></argument>, <argument pos:start="251:48" pos:end="251:57"><expr pos:start="251:48" pos:end="251:57"><name pos:start="251:48" pos:end="251:57">biBitCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="253:5" pos:end="279:5"><if pos:start="253:5" pos:end="271:5">if<condition pos:start="253:7" pos:end="253:38">(<expr pos:start="253:8" pos:end="253:37"><name pos:start="253:8" pos:end="253:21"><name pos:start="253:8" pos:end="253:12">codec</name><operator pos:start="253:13" pos:end="253:14">-&gt;</operator><name pos:start="253:15" pos:end="253:21">pix_fmt</name></name> <operator pos:start="253:23" pos:end="253:24">==</operator> <name pos:start="253:26" pos:end="253:37">PIX_FMT_NONE</name></expr>)</condition> <block pos:start="253:40" pos:end="271:5">{<block_content pos:start="255:9" pos:end="269:50">

        <expr_stmt pos:start="255:9" pos:end="255:53"><expr pos:start="255:9" pos:end="255:52"><name pos:start="255:9" pos:end="255:23"><name pos:start="255:9" pos:end="255:13">codec</name><operator pos:start="255:14" pos:end="255:15">-&gt;</operator><name pos:start="255:16" pos:end="255:23">codec_id</name></name> <operator pos:start="255:25" pos:end="255:25">=</operator> <call pos:start="255:27" pos:end="255:52"><name pos:start="255:27" pos:end="255:37">vfw_codecid</name><argument_list pos:start="255:38" pos:end="255:52">(<argument pos:start="255:39" pos:end="255:51"><expr pos:start="255:39" pos:end="255:51"><name pos:start="255:39" pos:end="255:51">biCompression</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="257:9" pos:end="267:9"><if pos:start="257:9" pos:end="267:9">if<condition pos:start="257:11" pos:end="257:44">(<expr pos:start="257:12" pos:end="257:43"><name pos:start="257:12" pos:end="257:26"><name pos:start="257:12" pos:end="257:16">codec</name><operator pos:start="257:17" pos:end="257:18">-&gt;</operator><name pos:start="257:19" pos:end="257:26">codec_id</name></name> <operator pos:start="257:28" pos:end="257:29">==</operator> <name pos:start="257:31" pos:end="257:43">CODEC_ID_NONE</name></expr>)</condition> <block pos:start="257:46" pos:end="267:9">{<block_content pos:start="259:13" pos:end="265:40">

            <expr_stmt pos:start="259:13" pos:end="261:82"><expr pos:start="259:13" pos:end="261:81"><call pos:start="259:13" pos:end="261:81"><name pos:start="259:13" pos:end="259:18">av_log</name><argument_list pos:start="259:19" pos:end="261:81">(<argument pos:start="259:20" pos:end="259:20"><expr pos:start="259:20" pos:end="259:20"><name pos:start="259:20" pos:end="259:20">s</name></expr></argument>, <argument pos:start="259:23" pos:end="259:34"><expr pos:start="259:23" pos:end="259:34"><name pos:start="259:23" pos:end="259:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="259:37" pos:end="261:80"><expr pos:start="259:37" pos:end="261:80"><literal type="string" pos:start="259:37" pos:end="259:64">"Unknown compression type. "</literal>

                             <literal type="string" pos:start="261:30" pos:end="261:80">"Please report verbose (-v 9) debug information.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:30"><expr pos:start="263:13" pos:end="263:29"><call pos:start="263:13" pos:end="263:29"><name pos:start="263:13" pos:end="263:26">vfw_read_close</name><argument_list pos:start="263:27" pos:end="263:29">(<argument pos:start="263:28" pos:end="263:28"><expr pos:start="263:28" pos:end="263:28"><name pos:start="263:28" pos:end="263:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="265:13" pos:end="265:40">return <expr pos:start="265:20" pos:end="265:39"><name pos:start="265:20" pos:end="265:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:50"><expr pos:start="269:9" pos:end="269:49"><name pos:start="269:9" pos:end="269:36"><name pos:start="269:9" pos:end="269:13">codec</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:36">bits_per_coded_sample</name></name> <operator pos:start="269:38" pos:end="269:38">=</operator> <name pos:start="269:40" pos:end="269:49">biBitCount</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="271:7" pos:end="279:5">else <block pos:start="271:12" pos:end="279:5">{<block_content pos:start="273:9" pos:end="277:54">

        <expr_stmt pos:start="273:9" pos:end="273:44"><expr pos:start="273:9" pos:end="273:43"><name pos:start="273:9" pos:end="273:23"><name pos:start="273:9" pos:end="273:13">codec</name><operator pos:start="273:14" pos:end="273:15">-&gt;</operator><name pos:start="273:16" pos:end="273:23">codec_id</name></name> <operator pos:start="273:25" pos:end="273:25">=</operator> <name pos:start="273:27" pos:end="273:43">CODEC_ID_RAWVIDEO</name></expr>;</expr_stmt>

        <if_stmt pos:start="275:9" pos:end="277:54"><if pos:start="275:9" pos:end="277:54">if<condition pos:start="275:11" pos:end="275:35">(<expr pos:start="275:12" pos:end="275:34"><name pos:start="275:12" pos:end="275:24">biCompression</name> <operator pos:start="275:26" pos:end="275:27">==</operator> <name pos:start="275:29" pos:end="275:34">BI_RGB</name></expr>)</condition><block type="pseudo" pos:start="277:13" pos:end="277:54"><block_content pos:start="277:13" pos:end="277:54">

            <expr_stmt pos:start="277:13" pos:end="277:54"><expr pos:start="277:13" pos:end="277:53"><name pos:start="277:13" pos:end="277:40"><name pos:start="277:13" pos:end="277:17">codec</name><operator pos:start="277:18" pos:end="277:19">-&gt;</operator><name pos:start="277:20" pos:end="277:40">bits_per_coded_sample</name></name> <operator pos:start="277:42" pos:end="277:42">=</operator> <name pos:start="277:44" pos:end="277:53">biBitCount</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="283:5" pos:end="283:37"><expr pos:start="283:5" pos:end="283:36"><call pos:start="283:5" pos:end="283:36"><name pos:start="283:5" pos:end="283:19">av_set_pts_info</name><argument_list pos:start="283:20" pos:end="283:36">(<argument pos:start="283:21" pos:end="283:22"><expr pos:start="283:21" pos:end="283:22"><name pos:start="283:21" pos:end="283:22">st</name></expr></argument>, <argument pos:start="283:25" pos:end="283:26"><expr pos:start="283:25" pos:end="283:26"><literal type="number" pos:start="283:25" pos:end="283:26">32</literal></expr></argument>, <argument pos:start="283:29" pos:end="283:29"><expr pos:start="283:29" pos:end="283:29"><literal type="number" pos:start="283:29" pos:end="283:29">1</literal></expr></argument>, <argument pos:start="283:32" pos:end="283:35"><expr pos:start="283:32" pos:end="283:35"><literal type="number" pos:start="283:32" pos:end="283:35">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="287:5" pos:end="287:44"><expr pos:start="287:5" pos:end="287:43"><name pos:start="287:5" pos:end="287:14"><name pos:start="287:5" pos:end="287:7">ctx</name><operator pos:start="287:8" pos:end="287:9">-&gt;</operator><name pos:start="287:10" pos:end="287:14">mutex</name></name> <operator pos:start="287:16" pos:end="287:16">=</operator> <call pos:start="287:18" pos:end="287:43"><name pos:start="287:18" pos:end="287:28">CreateMutex</name><argument_list pos:start="287:29" pos:end="287:43">(<argument pos:start="287:30" pos:end="287:33"><expr pos:start="287:30" pos:end="287:33"><name pos:start="287:30" pos:end="287:33">NULL</name></expr></argument>, <argument pos:start="287:36" pos:end="287:36"><expr pos:start="287:36" pos:end="287:36"><literal type="number" pos:start="287:36" pos:end="287:36">0</literal></expr></argument>, <argument pos:start="287:39" pos:end="287:42"><expr pos:start="287:39" pos:end="287:42"><name pos:start="287:39" pos:end="287:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="289:5" pos:end="295:5"><if pos:start="289:5" pos:end="295:5">if<condition pos:start="289:7" pos:end="289:19">(<expr pos:start="289:8" pos:end="289:18"><operator pos:start="289:8" pos:end="289:8">!</operator><name pos:start="289:9" pos:end="289:18"><name pos:start="289:9" pos:end="289:11">ctx</name><operator pos:start="289:12" pos:end="289:13">-&gt;</operator><name pos:start="289:14" pos:end="289:18">mutex</name></name></expr>)</condition> <block pos:start="289:21" pos:end="295:5">{<block_content pos:start="291:9" pos:end="293:21">

        <expr_stmt pos:start="291:9" pos:end="291:62"><expr pos:start="291:9" pos:end="291:61"><call pos:start="291:9" pos:end="291:61"><name pos:start="291:9" pos:end="291:14">av_log</name><argument_list pos:start="291:15" pos:end="291:61">(<argument pos:start="291:16" pos:end="291:16"><expr pos:start="291:16" pos:end="291:16"><name pos:start="291:16" pos:end="291:16">s</name></expr></argument>, <argument pos:start="291:19" pos:end="291:30"><expr pos:start="291:19" pos:end="291:30"><name pos:start="291:19" pos:end="291:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="291:33" pos:end="291:59"><expr pos:start="291:33" pos:end="291:59"><literal type="string" pos:start="291:33" pos:end="291:59">"Could not create Mutex.\n"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="293:9" pos:end="293:21">goto <name pos:start="293:14" pos:end="293:20">fail_io</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:47"><expr pos:start="297:5" pos:end="297:46"><name pos:start="297:5" pos:end="297:14"><name pos:start="297:5" pos:end="297:7">ctx</name><operator pos:start="297:8" pos:end="297:9">-&gt;</operator><name pos:start="297:10" pos:end="297:14">event</name></name> <operator pos:start="297:16" pos:end="297:16">=</operator> <call pos:start="297:18" pos:end="297:46"><name pos:start="297:18" pos:end="297:28">CreateEvent</name><argument_list pos:start="297:29" pos:end="297:46">(<argument pos:start="297:30" pos:end="297:33"><expr pos:start="297:30" pos:end="297:33"><name pos:start="297:30" pos:end="297:33">NULL</name></expr></argument>, <argument pos:start="297:36" pos:end="297:36"><expr pos:start="297:36" pos:end="297:36"><literal type="number" pos:start="297:36" pos:end="297:36">1</literal></expr></argument>, <argument pos:start="297:39" pos:end="297:39"><expr pos:start="297:39" pos:end="297:39"><literal type="number" pos:start="297:39" pos:end="297:39">0</literal></expr></argument>, <argument pos:start="297:42" pos:end="297:45"><expr pos:start="297:42" pos:end="297:45"><name pos:start="297:42" pos:end="297:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="299:5" pos:end="305:5"><if pos:start="299:5" pos:end="305:5">if<condition pos:start="299:7" pos:end="299:19">(<expr pos:start="299:8" pos:end="299:18"><operator pos:start="299:8" pos:end="299:8">!</operator><name pos:start="299:9" pos:end="299:18"><name pos:start="299:9" pos:end="299:11">ctx</name><operator pos:start="299:12" pos:end="299:13">-&gt;</operator><name pos:start="299:14" pos:end="299:18">event</name></name></expr>)</condition> <block pos:start="299:21" pos:end="305:5">{<block_content pos:start="301:9" pos:end="303:21">

        <expr_stmt pos:start="301:9" pos:end="301:62"><expr pos:start="301:9" pos:end="301:61"><call pos:start="301:9" pos:end="301:61"><name pos:start="301:9" pos:end="301:14">av_log</name><argument_list pos:start="301:15" pos:end="301:61">(<argument pos:start="301:16" pos:end="301:16"><expr pos:start="301:16" pos:end="301:16"><name pos:start="301:16" pos:end="301:16">s</name></expr></argument>, <argument pos:start="301:19" pos:end="301:30"><expr pos:start="301:19" pos:end="301:30"><name pos:start="301:19" pos:end="301:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="301:33" pos:end="301:59"><expr pos:start="301:33" pos:end="301:59"><literal type="string" pos:start="301:33" pos:end="301:59">"Could not create Event.\n"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="303:9" pos:end="303:21">goto <name pos:start="303:14" pos:end="303:20">fail_io</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="309:5" pos:end="309:63"><expr pos:start="309:5" pos:end="309:62"><name pos:start="309:5" pos:end="309:7">ret</name> <operator pos:start="309:9" pos:end="309:9">=</operator> <call pos:start="309:11" pos:end="309:62"><name pos:start="309:11" pos:end="309:21">SendMessage</name><argument_list pos:start="309:22" pos:end="309:62">(<argument pos:start="309:23" pos:end="309:31"><expr pos:start="309:23" pos:end="309:31"><name pos:start="309:23" pos:end="309:31"><name pos:start="309:23" pos:end="309:25">ctx</name><operator pos:start="309:26" pos:end="309:27">-&gt;</operator><name pos:start="309:28" pos:end="309:31">hwnd</name></name></expr></argument>, <argument pos:start="309:34" pos:end="309:55"><expr pos:start="309:34" pos:end="309:55"><name pos:start="309:34" pos:end="309:55">WM_CAP_SEQUENCE_NOFILE</name></expr></argument>, <argument pos:start="309:58" pos:end="309:58"><expr pos:start="309:58" pos:end="309:58"><literal type="number" pos:start="309:58" pos:end="309:58">0</literal></expr></argument>, <argument pos:start="309:61" pos:end="309:61"><expr pos:start="309:61" pos:end="309:61"><literal type="number" pos:start="309:61" pos:end="309:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="311:5" pos:end="317:5"><if pos:start="311:5" pos:end="317:5">if<condition pos:start="311:7" pos:end="311:12">(<expr pos:start="311:8" pos:end="311:11"><operator pos:start="311:8" pos:end="311:8">!</operator><name pos:start="311:9" pos:end="311:11">ret</name></expr>)</condition> <block pos:start="311:14" pos:end="317:5">{<block_content pos:start="313:9" pos:end="315:21">

        <expr_stmt pos:start="313:9" pos:end="313:72"><expr pos:start="313:9" pos:end="313:71"><call pos:start="313:9" pos:end="313:71"><name pos:start="313:9" pos:end="313:14">av_log</name><argument_list pos:start="313:15" pos:end="313:71">(<argument pos:start="313:16" pos:end="313:16"><expr pos:start="313:16" pos:end="313:16"><name pos:start="313:16" pos:end="313:16">s</name></expr></argument>, <argument pos:start="313:19" pos:end="313:30"><expr pos:start="313:19" pos:end="313:30"><name pos:start="313:19" pos:end="313:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="313:33" pos:end="313:69"><expr pos:start="313:33" pos:end="313:69"><literal type="string" pos:start="313:33" pos:end="313:69">"Could not start capture sequence.\n"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="315:9" pos:end="315:21">goto <name pos:start="315:14" pos:end="315:20">fail_io</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="321:5" pos:end="321:13">return <expr pos:start="321:12" pos:end="321:12"><literal type="number" pos:start="321:12" pos:end="321:12">0</literal></expr>;</return>



<label pos:start="325:1" pos:end="325:8"><name pos:start="325:1" pos:end="325:7">fail_bi</name>:</label>

    <expr_stmt pos:start="327:5" pos:end="327:16"><expr pos:start="327:5" pos:end="327:15"><call pos:start="327:5" pos:end="327:15"><name pos:start="327:5" pos:end="327:11">av_free</name><argument_list pos:start="327:12" pos:end="327:15">(<argument pos:start="327:13" pos:end="327:14"><expr pos:start="327:13" pos:end="327:14"><name pos:start="327:13" pos:end="327:14">bi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="331:1" pos:end="331:8"><name pos:start="331:1" pos:end="331:7">fail_io</name>:</label>

    <expr_stmt pos:start="333:5" pos:end="333:22"><expr pos:start="333:5" pos:end="333:21"><call pos:start="333:5" pos:end="333:21"><name pos:start="333:5" pos:end="333:18">vfw_read_close</name><argument_list pos:start="333:19" pos:end="333:21">(<argument pos:start="333:20" pos:end="333:20"><expr pos:start="333:20" pos:end="333:20"><name pos:start="333:20" pos:end="333:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="335:5" pos:end="335:22">return <expr pos:start="335:12" pos:end="335:21"><name pos:start="335:12" pos:end="335:21">AVERROR_IO</name></expr>;</return>

</block_content>}</block></function>
</unit>
