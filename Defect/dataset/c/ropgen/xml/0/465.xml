<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/465.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">vhost_dev_init</name><parameter_list pos:start="1:19" pos:end="3:30">(<parameter pos:start="1:20" pos:end="1:41"><decl pos:start="1:20" pos:end="1:41"><type pos:start="1:20" pos:end="1:41"><name pos:start="1:20" pos:end="1:35"><name pos:start="1:20" pos:end="1:25">struct</name> <name pos:start="1:27" pos:end="1:35">vhost_dev</name></name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">hdev</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:52"><decl pos:start="1:44" pos:end="1:52"><type pos:start="1:44" pos:end="1:52"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:52">devfd</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:73"><decl pos:start="1:55" pos:end="1:73"><type pos:start="1:55" pos:end="1:73"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:64">char</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:73">devpath</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:29"><decl pos:start="3:20" pos:end="3:29"><type pos:start="3:20" pos:end="3:29"><name pos:start="3:20" pos:end="3:23">bool</name></type> <name pos:start="3:25" pos:end="3:29">force</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="107:1">{<block_content pos:start="7:5" pos:end="105:13">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:21">features</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">r</name></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="25:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:19">(<expr pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:13">devfd</name> <operator pos:start="11:15" pos:end="11:16">&gt;=</operator> <literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr>)</condition> <block pos:start="11:21" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:30">

        <expr_stmt pos:start="13:9" pos:end="13:30"><expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:12">hdev</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:21">control</name></name> <operator pos:start="13:23" pos:end="13:23">=</operator> <name pos:start="13:25" pos:end="13:29">devfd</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="25:5">else <block pos:start="15:12" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:9">

        <expr_stmt pos:start="17:9" pos:end="17:46"><expr pos:start="17:9" pos:end="17:45"><name pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:12">hdev</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:21">control</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <call pos:start="17:25" pos:end="17:45"><name pos:start="17:25" pos:end="17:28">open</name><argument_list pos:start="17:29" pos:end="17:45">(<argument pos:start="17:30" pos:end="17:36"><expr pos:start="17:30" pos:end="17:36"><name pos:start="17:30" pos:end="17:36">devpath</name></expr></argument>, <argument pos:start="17:39" pos:end="17:44"><expr pos:start="17:39" pos:end="17:44"><name pos:start="17:39" pos:end="17:44">O_RDWR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:30">(<expr pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:16">hdev</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:25">control</name></name> <operator pos:start="19:27" pos:end="19:27">&lt;</operator> <literal type="number" pos:start="19:29" pos:end="19:29">0</literal></expr>)</condition> <block pos:start="19:32" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:26">

            <return pos:start="21:13" pos:end="21:26">return <expr pos:start="21:20" pos:end="21:25"><operator pos:start="21:20" pos:end="21:20">-</operator><name pos:start="21:21" pos:end="21:25">errno</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:52"><expr pos:start="27:5" pos:end="27:51"><name pos:start="27:5" pos:end="27:5">r</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="27:51"><name pos:start="27:9" pos:end="27:13">ioctl</name><argument_list pos:start="27:14" pos:end="27:51">(<argument pos:start="27:15" pos:end="27:27"><expr pos:start="27:15" pos:end="27:27"><name pos:start="27:15" pos:end="27:27"><name pos:start="27:15" pos:end="27:18">hdev</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:27">control</name></name></expr></argument>, <argument pos:start="27:30" pos:end="27:44"><expr pos:start="27:30" pos:end="27:44"><name pos:start="27:30" pos:end="27:44">VHOST_SET_OWNER</name></expr></argument>, <argument pos:start="27:47" pos:end="27:50"><expr pos:start="27:47" pos:end="27:50"><name pos:start="27:47" pos:end="27:50">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:14">(<expr pos:start="29:9" pos:end="29:13"><name pos:start="29:9" pos:end="29:9">r</name> <operator pos:start="29:11" pos:end="29:11">&lt;</operator> <literal type="number" pos:start="29:13" pos:end="29:13">0</literal></expr>)</condition> <block pos:start="29:16" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:18">

        <goto pos:start="31:9" pos:end="31:18">goto <name pos:start="31:14" pos:end="31:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:60"><expr pos:start="37:5" pos:end="37:59"><name pos:start="37:5" pos:end="37:5">r</name> <operator pos:start="37:7" pos:end="37:7">=</operator> <call pos:start="37:9" pos:end="37:59"><name pos:start="37:9" pos:end="37:13">ioctl</name><argument_list pos:start="37:14" pos:end="37:59">(<argument pos:start="37:15" pos:end="37:27"><expr pos:start="37:15" pos:end="37:27"><name pos:start="37:15" pos:end="37:27"><name pos:start="37:15" pos:end="37:18">hdev</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:27">control</name></name></expr></argument>, <argument pos:start="37:30" pos:end="37:47"><expr pos:start="37:30" pos:end="37:47"><name pos:start="37:30" pos:end="37:47">VHOST_GET_FEATURES</name></expr></argument>, <argument pos:start="37:50" pos:end="37:58"><expr pos:start="37:50" pos:end="37:58"><operator pos:start="37:50" pos:end="37:50">&amp;</operator><name pos:start="37:51" pos:end="37:58">features</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:14">(<expr pos:start="39:9" pos:end="39:13"><name pos:start="39:9" pos:end="39:9">r</name> <operator pos:start="39:11" pos:end="39:11">&lt;</operator> <literal type="number" pos:start="39:13" pos:end="39:13">0</literal></expr>)</condition> <block pos:start="39:16" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:18">

        <goto pos:start="41:9" pos:end="41:18">goto <name pos:start="41:14" pos:end="41:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:8">hdev</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:18">features</name></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:29">features</name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="77:6"><expr pos:start="49:5" pos:end="77:5"><name pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:8">hdev</name><operator pos:start="49:9" pos:end="49:10">-&gt;</operator><name pos:start="49:11" pos:end="49:25">memory_listener</name></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <operator pos:start="49:29" pos:end="49:29">(</operator><name pos:start="49:30" pos:end="49:43">MemoryListener</name><operator pos:start="49:44" pos:end="49:44">)</operator> <block pos:start="49:46" pos:end="77:5">{

        <expr pos:start="51:9" pos:end="51:28"><operator pos:start="51:9" pos:end="51:9">.</operator><name pos:start="51:10" pos:end="51:14">begin</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <name pos:start="51:18" pos:end="51:28">vhost_begin</name></expr>,

        <expr pos:start="53:9" pos:end="53:30"><operator pos:start="53:9" pos:end="53:9">.</operator><name pos:start="53:10" pos:end="53:15">commit</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:30">vhost_commit</name></expr>,

        <expr pos:start="55:9" pos:end="55:38"><operator pos:start="55:9" pos:end="55:9">.</operator><name pos:start="55:10" pos:end="55:19">region_add</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:38">vhost_region_add</name></expr>,

        <expr pos:start="57:9" pos:end="57:38"><operator pos:start="57:9" pos:end="57:9">.</operator><name pos:start="57:10" pos:end="57:19">region_del</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:38">vhost_region_del</name></expr>,

        <expr pos:start="59:9" pos:end="59:38"><operator pos:start="59:9" pos:end="59:9">.</operator><name pos:start="59:10" pos:end="59:19">region_nop</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <name pos:start="59:23" pos:end="59:38">vhost_region_nop</name></expr>,

        <expr pos:start="61:9" pos:end="61:36"><operator pos:start="61:9" pos:end="61:9">.</operator><name pos:start="61:10" pos:end="61:18">log_start</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:36">vhost_log_start</name></expr>,

        <expr pos:start="63:9" pos:end="63:34"><operator pos:start="63:9" pos:end="63:9">.</operator><name pos:start="63:10" pos:end="63:17">log_stop</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:34">vhost_log_stop</name></expr>,

        <expr pos:start="65:9" pos:end="65:34"><operator pos:start="65:9" pos:end="65:9">.</operator><name pos:start="65:10" pos:end="65:17">log_sync</name> <operator pos:start="65:19" pos:end="65:19">=</operator> <name pos:start="65:21" pos:end="65:34">vhost_log_sync</name></expr>,

        <expr pos:start="67:9" pos:end="67:50"><operator pos:start="67:9" pos:end="67:9">.</operator><name pos:start="67:10" pos:end="67:25">log_global_start</name> <operator pos:start="67:27" pos:end="67:27">=</operator> <name pos:start="67:29" pos:end="67:50">vhost_log_global_start</name></expr>,

        <expr pos:start="69:9" pos:end="69:48"><operator pos:start="69:9" pos:end="69:9">.</operator><name pos:start="69:10" pos:end="69:24">log_global_stop</name> <operator pos:start="69:26" pos:end="69:26">=</operator> <name pos:start="69:28" pos:end="69:48">vhost_log_global_stop</name></expr>,

        <expr pos:start="71:9" pos:end="71:40"><operator pos:start="71:9" pos:end="71:9">.</operator><name pos:start="71:10" pos:end="71:20">eventfd_add</name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:40">vhost_eventfd_add</name></expr>,

        <expr pos:start="73:9" pos:end="73:40"><operator pos:start="73:9" pos:end="73:9">.</operator><name pos:start="73:10" pos:end="73:20">eventfd_del</name> <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:40">vhost_eventfd_del</name></expr>,

        <expr pos:start="75:9" pos:end="75:22"><operator pos:start="75:9" pos:end="75:9">.</operator><name pos:start="75:10" pos:end="75:17">priority</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <literal type="number" pos:start="75:21" pos:end="75:22">10</literal></expr>

    }</block></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:66"><expr pos:start="79:5" pos:end="79:65"><name pos:start="79:5" pos:end="79:13"><name pos:start="79:5" pos:end="79:8">hdev</name><operator pos:start="79:9" pos:end="79:10">-&gt;</operator><name pos:start="79:11" pos:end="79:13">mem</name></name> <operator pos:start="79:15" pos:end="79:15">=</operator> <call pos:start="79:17" pos:end="79:65"><name pos:start="79:17" pos:end="79:25">g_malloc0</name><argument_list pos:start="79:26" pos:end="79:65">(<argument pos:start="79:27" pos:end="79:64"><expr pos:start="79:27" pos:end="79:64"><call pos:start="79:27" pos:end="79:64"><name pos:start="79:27" pos:end="79:34">offsetof</name><argument_list pos:start="79:35" pos:end="79:64">(<argument pos:start="79:36" pos:end="79:54"><expr pos:start="79:36" pos:end="79:54">struct <name pos:start="79:43" pos:end="79:54">vhost_memory</name></expr></argument>, <argument pos:start="79:57" pos:end="79:63"><expr pos:start="79:57" pos:end="79:63"><name pos:start="79:57" pos:end="79:63">regions</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:29"><expr pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:24"><name pos:start="81:5" pos:end="81:8">hdev</name><operator pos:start="81:9" pos:end="81:10">-&gt;</operator><name pos:start="81:11" pos:end="81:24">n_mem_sections</name></name> <operator pos:start="81:26" pos:end="81:26">=</operator> <literal type="number" pos:start="81:28" pos:end="81:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:30"><expr pos:start="83:5" pos:end="83:29"><name pos:start="83:5" pos:end="83:22"><name pos:start="83:5" pos:end="83:8">hdev</name><operator pos:start="83:9" pos:end="83:10">-&gt;</operator><name pos:start="83:11" pos:end="83:22">mem_sections</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <name pos:start="83:26" pos:end="83:29">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:21"><expr pos:start="85:5" pos:end="85:20"><name pos:start="85:5" pos:end="85:13"><name pos:start="85:5" pos:end="85:8">hdev</name><operator pos:start="85:9" pos:end="85:10">-&gt;</operator><name pos:start="85:11" pos:end="85:13">log</name></name> <operator pos:start="85:15" pos:end="85:15">=</operator> <name pos:start="85:17" pos:end="85:20">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:23"><expr pos:start="87:5" pos:end="87:22"><name pos:start="87:5" pos:end="87:18"><name pos:start="87:5" pos:end="87:8">hdev</name><operator pos:start="87:9" pos:end="87:10">-&gt;</operator><name pos:start="87:11" pos:end="87:18">log_size</name></name> <operator pos:start="87:20" pos:end="87:20">=</operator> <literal type="number" pos:start="87:22" pos:end="87:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:30"><expr pos:start="89:5" pos:end="89:29"><name pos:start="89:5" pos:end="89:21"><name pos:start="89:5" pos:end="89:8">hdev</name><operator pos:start="89:9" pos:end="89:10">-&gt;</operator><name pos:start="89:11" pos:end="89:21">log_enabled</name></name> <operator pos:start="89:23" pos:end="89:23">=</operator> <name pos:start="89:25" pos:end="89:29">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:26"><expr pos:start="91:5" pos:end="91:25"><name pos:start="91:5" pos:end="91:17"><name pos:start="91:5" pos:end="91:8">hdev</name><operator pos:start="91:9" pos:end="91:10">-&gt;</operator><name pos:start="91:11" pos:end="91:17">started</name></name> <operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:25">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:59"><expr pos:start="93:5" pos:end="93:58"><call pos:start="93:5" pos:end="93:58"><name pos:start="93:5" pos:end="93:28">memory_listener_register</name><argument_list pos:start="93:29" pos:end="93:58">(<argument pos:start="93:30" pos:end="93:51"><expr pos:start="93:30" pos:end="93:51"><operator pos:start="93:30" pos:end="93:30">&amp;</operator><name pos:start="93:31" pos:end="93:51"><name pos:start="93:31" pos:end="93:34">hdev</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:51">memory_listener</name></name></expr></argument>, <argument pos:start="93:54" pos:end="93:57"><expr pos:start="93:54" pos:end="93:57"><name pos:start="93:54" pos:end="93:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:24"><expr pos:start="95:5" pos:end="95:23"><name pos:start="95:5" pos:end="95:15"><name pos:start="95:5" pos:end="95:8">hdev</name><operator pos:start="95:9" pos:end="95:10">-&gt;</operator><name pos:start="95:11" pos:end="95:15">force</name></name> <operator pos:start="95:17" pos:end="95:17">=</operator> <name pos:start="95:19" pos:end="95:23">force</name></expr>;</expr_stmt>

    <return pos:start="97:5" pos:end="97:13">return <expr pos:start="97:12" pos:end="97:12"><literal type="number" pos:start="97:12" pos:end="97:12">0</literal></expr>;</return>

<label pos:start="99:1" pos:end="99:5"><name pos:start="99:1" pos:end="99:4">fail</name>:</label>

    <expr_stmt pos:start="101:5" pos:end="101:15"><expr pos:start="101:5" pos:end="101:14"><name pos:start="101:5" pos:end="101:5">r</name> <operator pos:start="101:7" pos:end="101:7">=</operator> <operator pos:start="101:9" pos:end="101:9">-</operator><name pos:start="101:10" pos:end="101:14">errno</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:25"><expr pos:start="103:5" pos:end="103:24"><call pos:start="103:5" pos:end="103:24"><name pos:start="103:5" pos:end="103:9">close</name><argument_list pos:start="103:10" pos:end="103:24">(<argument pos:start="103:11" pos:end="103:23"><expr pos:start="103:11" pos:end="103:23"><name pos:start="103:11" pos:end="103:23"><name pos:start="103:11" pos:end="103:14">hdev</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:23">control</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="105:5" pos:end="105:13">return <expr pos:start="105:12" pos:end="105:12"><name pos:start="105:12" pos:end="105:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
