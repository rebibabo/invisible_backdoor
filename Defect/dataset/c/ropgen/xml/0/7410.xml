<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7410.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">ipmi_sim_realize</name><parameter_list pos:start="1:29" pos:end="1:60">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">DeviceState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dev</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:52">Error</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier><modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:54">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">IPMIBmc</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:14">b</name> <init pos:start="5:16" pos:end="5:30">= <expr pos:start="5:18" pos:end="5:30"><call pos:start="5:18" pos:end="5:30"><name pos:start="5:18" pos:end="5:25">IPMI_BMC</name><argument_list pos:start="5:26" pos:end="5:30">(<argument pos:start="5:27" pos:end="5:29"><expr pos:start="5:27" pos:end="5:29"><name pos:start="5:27" pos:end="5:29">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">IPMIBmcSim</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">ibs</name> <init pos:start="9:21" pos:end="9:43">= <expr pos:start="9:23" pos:end="9:43"><call pos:start="9:23" pos:end="9:43"><name pos:start="9:23" pos:end="9:40">IPMI_BMC_SIMULATOR</name><argument_list pos:start="9:41" pos:end="9:43">(<argument pos:start="9:42" pos:end="9:42"><expr pos:start="9:42" pos:end="9:42"><name pos:start="9:42" pos:end="9:42">b</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:32"><expr pos:start="13:5" pos:end="13:31"><call pos:start="13:5" pos:end="13:31"><name pos:start="13:5" pos:end="13:19">qemu_mutex_init</name><argument_list pos:start="13:20" pos:end="13:31">(<argument pos:start="13:21" pos:end="13:30"><expr pos:start="13:21" pos:end="13:30"><operator pos:start="13:21" pos:end="13:21">&amp;</operator><name pos:start="13:22" pos:end="13:30"><name pos:start="13:22" pos:end="13:24">ibs</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:30">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><call pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:15">QTAILQ_INIT</name><argument_list pos:start="15:16" pos:end="15:30">(<argument pos:start="15:17" pos:end="15:29"><expr pos:start="15:17" pos:end="15:29"><operator pos:start="15:17" pos:end="15:17">&amp;</operator><name pos:start="15:18" pos:end="15:29"><name pos:start="15:18" pos:end="15:20">ibs</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:29">rcvbufs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:60"><expr pos:start="19:5" pos:end="19:59"><name pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:7">ibs</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:27">bmc_global_enables</name></name> <operator pos:start="19:29" pos:end="19:29">=</operator> <operator pos:start="19:31" pos:end="19:31">(</operator><literal type="number" pos:start="19:32" pos:end="19:32">1</literal> <operator pos:start="19:34" pos:end="19:35">&lt;&lt;</operator> <name pos:start="19:37" pos:end="19:58">IPMI_BMC_EVENT_LOG_BIT</name><operator pos:start="19:59" pos:end="19:59">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:7">ibs</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:18">device_id</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <literal type="number" pos:start="21:22" pos:end="21:25">0x20</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:7">ibs</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:21">ipmi_version</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <literal type="number" pos:start="23:25" pos:end="23:28">0x02</literal></expr>;</expr_stmt> <comment type="block" pos:start="23:31" pos:end="23:44">/* IPMI 2.0 */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:7">ibs</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:22">restart_cause</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <literal type="number" pos:start="25:26" pos:end="25:26">0</literal></expr>;</expr_stmt>

    <for pos:start="27:5" pos:end="37:5">for <control pos:start="27:9" pos:end="27:27">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:21"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <literal type="number" pos:start="27:21" pos:end="27:21">4</literal></expr>;</condition> <incr pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:24">i</name><operator pos:start="27:25" pos:end="27:26">++</operator></expr></incr>)</control> <block pos:start="27:29" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:38">

        <expr_stmt pos:start="29:9" pos:end="29:41"><expr pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:11">ibs</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:16">sel</name><operator pos:start="29:17" pos:end="29:17">.</operator><name pos:start="29:18" pos:end="29:30">last_addition</name><index pos:start="29:31" pos:end="29:33">[<expr pos:start="29:32" pos:end="29:32"><name pos:start="29:32" pos:end="29:32">i</name></expr>]</index></name> <operator pos:start="29:35" pos:end="29:35">=</operator> <literal type="number" pos:start="29:37" pos:end="29:40">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:11">ibs</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:16">sel</name><operator pos:start="31:17" pos:end="31:17">.</operator><name pos:start="31:18" pos:end="31:27">last_clear</name><index pos:start="31:28" pos:end="31:30">[<expr pos:start="31:29" pos:end="31:29"><name pos:start="31:29" pos:end="31:29">i</name></expr>]</index></name> <operator pos:start="31:32" pos:end="31:32">=</operator> <literal type="number" pos:start="31:34" pos:end="31:37">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:41"><expr pos:start="33:9" pos:end="33:40"><name pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:11">ibs</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:16">sdr</name><operator pos:start="33:17" pos:end="33:17">.</operator><name pos:start="33:18" pos:end="33:30">last_addition</name><index pos:start="33:31" pos:end="33:33">[<expr pos:start="33:32" pos:end="33:32"><name pos:start="33:32" pos:end="33:32">i</name></expr>]</index></name> <operator pos:start="33:35" pos:end="33:35">=</operator> <literal type="number" pos:start="33:37" pos:end="33:40">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:38"><expr pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:11">ibs</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:16">sdr</name><operator pos:start="35:17" pos:end="35:17">.</operator><name pos:start="35:18" pos:end="35:27">last_clear</name><index pos:start="35:28" pos:end="35:30">[<expr pos:start="35:29" pos:end="35:29"><name pos:start="35:29" pos:end="35:29">i</name></expr>]</index></name> <operator pos:start="35:32" pos:end="35:32">=</operator> <literal type="number" pos:start="35:34" pos:end="35:37">0xff</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="41:5" pos:end="41:23"><expr pos:start="41:5" pos:end="41:22"><call pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:17">ipmi_sdr_init</name><argument_list pos:start="41:18" pos:end="41:22">(<argument pos:start="41:19" pos:end="41:21"><expr pos:start="41:19" pos:end="41:21"><name pos:start="41:19" pos:end="41:21">ibs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:7">ibs</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:25">acpi_power_state</name><index pos:start="45:26" pos:end="45:28">[<expr pos:start="45:27" pos:end="45:27"><literal type="number" pos:start="45:27" pos:end="45:27">0</literal></expr>]</index></name> <operator pos:start="45:30" pos:end="45:30">=</operator> <literal type="number" pos:start="45:32" pos:end="45:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:33"><expr pos:start="47:5" pos:end="47:32"><name pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:7">ibs</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:25">acpi_power_state</name><index pos:start="47:26" pos:end="47:28">[<expr pos:start="47:27" pos:end="47:27"><literal type="number" pos:start="47:27" pos:end="47:27">1</literal></expr>]</index></name> <operator pos:start="47:30" pos:end="47:30">=</operator> <literal type="number" pos:start="47:32" pos:end="47:32">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:22">(<expr pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:21">qemu_uuid_set</name></expr>)</condition> <block pos:start="51:24" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:42">

        <expr_stmt pos:start="53:9" pos:end="53:42"><expr pos:start="53:9" pos:end="53:41"><call pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:14">memcpy</name><argument_list pos:start="53:15" pos:end="53:41">(<argument pos:start="53:16" pos:end="53:25"><expr pos:start="53:16" pos:end="53:25"><operator pos:start="53:16" pos:end="53:16">&amp;</operator><name pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:19">ibs</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:25">uuid</name></name></expr></argument>, <argument pos:start="53:28" pos:end="53:36"><expr pos:start="53:28" pos:end="53:36"><name pos:start="53:28" pos:end="53:36">qemu_uuid</name></expr></argument>, <argument pos:start="53:39" pos:end="53:40"><expr pos:start="53:39" pos:end="53:40"><literal type="number" pos:start="53:39" pos:end="53:40">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="59:5">else <block pos:start="55:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:34">

        <expr_stmt pos:start="57:9" pos:end="57:34"><expr pos:start="57:9" pos:end="57:33"><call pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:14">memset</name><argument_list pos:start="57:15" pos:end="57:33">(<argument pos:start="57:16" pos:end="57:25"><expr pos:start="57:16" pos:end="57:25"><operator pos:start="57:16" pos:end="57:16">&amp;</operator><name pos:start="57:17" pos:end="57:25"><name pos:start="57:17" pos:end="57:19">ibs</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:25">uuid</name></name></expr></argument>, <argument pos:start="57:28" pos:end="57:28"><expr pos:start="57:28" pos:end="57:28"><literal type="number" pos:start="57:28" pos:end="57:28">0</literal></expr></argument>, <argument pos:start="57:31" pos:end="57:32"><expr pos:start="57:31" pos:end="57:32"><literal type="number" pos:start="57:31" pos:end="57:32">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:37"><expr pos:start="63:5" pos:end="63:36"><call pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:31">ipmi_init_sensors_from_sdrs</name><argument_list pos:start="63:32" pos:end="63:36">(<argument pos:start="63:33" pos:end="63:35"><expr pos:start="63:33" pos:end="63:35"><name pos:start="63:33" pos:end="63:35">ibs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:23"><expr pos:start="65:5" pos:end="65:22"><call pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:17">register_cmds</name><argument_list pos:start="65:18" pos:end="65:22">(<argument pos:start="65:19" pos:end="65:21"><expr pos:start="65:19" pos:end="65:21"><name pos:start="65:19" pos:end="65:21">ibs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:69"><expr pos:start="69:5" pos:end="69:68"><name pos:start="69:5" pos:end="69:14"><name pos:start="69:5" pos:end="69:7">ibs</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:14">timer</name></name> <operator pos:start="69:16" pos:end="69:16">=</operator> <call pos:start="69:18" pos:end="69:68"><name pos:start="69:18" pos:end="69:29">timer_new_ns</name><argument_list pos:start="69:30" pos:end="69:68">(<argument pos:start="69:31" pos:end="69:48"><expr pos:start="69:31" pos:end="69:48"><name pos:start="69:31" pos:end="69:48">QEMU_CLOCK_VIRTUAL</name></expr></argument>, <argument pos:start="69:51" pos:end="69:62"><expr pos:start="69:51" pos:end="69:62"><name pos:start="69:51" pos:end="69:62">ipmi_timeout</name></expr></argument>, <argument pos:start="69:65" pos:end="69:67"><expr pos:start="69:65" pos:end="69:67"><name pos:start="69:65" pos:end="69:67">ibs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:54"><expr pos:start="73:5" pos:end="73:53"><call pos:start="73:5" pos:end="73:53"><name pos:start="73:5" pos:end="73:20">vmstate_register</name><argument_list pos:start="73:21" pos:end="73:53">(<argument pos:start="73:22" pos:end="73:25"><expr pos:start="73:22" pos:end="73:25"><name pos:start="73:22" pos:end="73:25">NULL</name></expr></argument>, <argument pos:start="73:28" pos:end="73:28"><expr pos:start="73:28" pos:end="73:28"><literal type="number" pos:start="73:28" pos:end="73:28">0</literal></expr></argument>, <argument pos:start="73:31" pos:end="73:47"><expr pos:start="73:31" pos:end="73:47"><operator pos:start="73:31" pos:end="73:31">&amp;</operator><name pos:start="73:32" pos:end="73:47">vmstate_ipmi_sim</name></expr></argument>, <argument pos:start="73:50" pos:end="73:52"><expr pos:start="73:50" pos:end="73:52"><name pos:start="73:50" pos:end="73:52">ibs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
