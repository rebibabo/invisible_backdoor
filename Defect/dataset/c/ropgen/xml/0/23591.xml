<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23591.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">test_io_channel</name><parameter_list pos:start="1:28" pos:end="7:40">(<parameter pos:start="1:29" pos:end="1:38"><decl pos:start="1:29" pos:end="1:38"><type pos:start="1:29" pos:end="1:38"><name pos:start="1:29" pos:end="1:32">bool</name></type> <name pos:start="1:34" pos:end="1:38">async</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:54"><decl pos:start="3:29" pos:end="3:54"><type pos:start="3:29" pos:end="3:54"><name pos:start="3:29" pos:end="3:41">SocketAddress</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:54">listen_addr</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:55"><decl pos:start="5:29" pos:end="5:55"><type pos:start="5:29" pos:end="5:55"><name pos:start="5:29" pos:end="5:41">SocketAddress</name> <modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:55">connect_addr</name></decl></parameter>,

                            <parameter pos:start="7:29" pos:end="7:39"><decl pos:start="7:29" pos:end="7:39"><type pos:start="7:29" pos:end="7:39"><name pos:start="7:29" pos:end="7:32">bool</name></type> <name pos:start="7:34" pos:end="7:39">passFD</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="145:1">{<block_content pos:start="11:5" pos:end="143:5">

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">QIOChannel</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:19">src</name></decl>, <decl pos:start="11:22" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:16"><modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:25">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">QIOChannelTest</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:24">test</name></decl>;</decl_stmt>

    <if_stmt pos:start="15:5" pos:end="143:5"><if pos:start="15:5" pos:end="79:5">if <condition pos:start="15:8" pos:end="15:14">(<expr pos:start="15:9" pos:end="15:13"><name pos:start="15:9" pos:end="15:13">async</name></expr>)</condition> <block pos:start="15:16" pos:end="79:5">{<block_content pos:start="17:9" pos:end="77:34">

        <expr_stmt pos:start="17:9" pos:end="17:75"><expr pos:start="17:9" pos:end="17:74"><call pos:start="17:9" pos:end="17:74"><name pos:start="17:9" pos:end="17:35">test_io_channel_setup_async</name><argument_list pos:start="17:36" pos:end="17:74">(<argument pos:start="17:37" pos:end="17:47"><expr pos:start="17:37" pos:end="17:47"><name pos:start="17:37" pos:end="17:47">listen_addr</name></expr></argument>, <argument pos:start="17:50" pos:end="17:61"><expr pos:start="17:50" pos:end="17:61"><name pos:start="17:50" pos:end="17:61">connect_addr</name></expr></argument>, <argument pos:start="17:64" pos:end="17:67"><expr pos:start="17:64" pos:end="17:67"><operator pos:start="17:64" pos:end="17:64">&amp;</operator><name pos:start="17:65" pos:end="17:67">src</name></expr></argument>, <argument pos:start="17:70" pos:end="17:73"><expr pos:start="17:70" pos:end="17:73"><operator pos:start="17:70" pos:end="17:70">&amp;</operator><name pos:start="17:71" pos:end="17:73">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="21:9" pos:end="23:76"><expr pos:start="21:9" pos:end="23:75"><call pos:start="21:9" pos:end="23:75"><name pos:start="21:9" pos:end="21:16">g_assert</name><argument_list pos:start="21:17" pos:end="23:75">(<argument pos:start="21:18" pos:end="23:74"><expr pos:start="21:18" pos:end="23:74"><operator pos:start="21:18" pos:end="21:18">!</operator><name pos:start="21:19" pos:end="21:24">passFD</name> <operator pos:start="21:26" pos:end="21:27">||</operator>

                 <call pos:start="23:18" pos:end="23:74"><name pos:start="23:18" pos:end="23:40">qio_channel_has_feature</name><argument_list pos:start="23:41" pos:end="23:74">(<argument pos:start="23:42" pos:end="23:44"><expr pos:start="23:42" pos:end="23:44"><name pos:start="23:42" pos:end="23:44">src</name></expr></argument>, <argument pos:start="23:47" pos:end="23:73"><expr pos:start="23:47" pos:end="23:73"><name pos:start="23:47" pos:end="23:73">QIO_CHANNEL_FEATURE_FD_PASS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="27:76"><expr pos:start="25:9" pos:end="27:75"><call pos:start="25:9" pos:end="27:75"><name pos:start="25:9" pos:end="25:16">g_assert</name><argument_list pos:start="25:17" pos:end="27:75">(<argument pos:start="25:18" pos:end="27:74"><expr pos:start="25:18" pos:end="27:74"><operator pos:start="25:18" pos:end="25:18">!</operator><name pos:start="25:19" pos:end="25:24">passFD</name> <operator pos:start="25:26" pos:end="25:27">||</operator>

                 <call pos:start="27:18" pos:end="27:74"><name pos:start="27:18" pos:end="27:40">qio_channel_has_feature</name><argument_list pos:start="27:41" pos:end="27:74">(<argument pos:start="27:42" pos:end="27:44"><expr pos:start="27:42" pos:end="27:44"><name pos:start="27:42" pos:end="27:44">dst</name></expr></argument>, <argument pos:start="27:47" pos:end="27:73"><expr pos:start="27:47" pos:end="27:73"><name pos:start="27:47" pos:end="27:73">QIO_CHANNEL_FEATURE_FD_PASS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:77"><expr pos:start="29:9" pos:end="29:76"><call pos:start="29:9" pos:end="29:76"><name pos:start="29:9" pos:end="29:16">g_assert</name><argument_list pos:start="29:17" pos:end="29:76">(<argument pos:start="29:18" pos:end="29:75"><expr pos:start="29:18" pos:end="29:75"><call pos:start="29:18" pos:end="29:75"><name pos:start="29:18" pos:end="29:40">qio_channel_has_feature</name><argument_list pos:start="29:41" pos:end="29:75">(<argument pos:start="29:42" pos:end="29:44"><expr pos:start="29:42" pos:end="29:44"><name pos:start="29:42" pos:end="29:44">src</name></expr></argument>, <argument pos:start="29:47" pos:end="29:74"><expr pos:start="29:47" pos:end="29:74"><name pos:start="29:47" pos:end="29:74">QIO_CHANNEL_FEATURE_SHUTDOWN</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:77"><expr pos:start="31:9" pos:end="31:76"><call pos:start="31:9" pos:end="31:76"><name pos:start="31:9" pos:end="31:16">g_assert</name><argument_list pos:start="31:17" pos:end="31:76">(<argument pos:start="31:18" pos:end="31:75"><expr pos:start="31:18" pos:end="31:75"><call pos:start="31:18" pos:end="31:75"><name pos:start="31:18" pos:end="31:40">qio_channel_has_feature</name><argument_list pos:start="31:41" pos:end="31:75">(<argument pos:start="31:42" pos:end="31:44"><expr pos:start="31:42" pos:end="31:44"><name pos:start="31:42" pos:end="31:44">dst</name></expr></argument>, <argument pos:start="31:47" pos:end="31:74"><expr pos:start="31:47" pos:end="31:74"><name pos:start="31:47" pos:end="31:74">QIO_CHANNEL_FEATURE_SHUTDOWN</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:38"><expr pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:12">test</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:37"><name pos:start="35:16" pos:end="35:35">qio_channel_test_new</name><argument_list pos:start="35:36" pos:end="35:37">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:59"><expr pos:start="37:9" pos:end="37:58"><call pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:36">qio_channel_test_run_threads</name><argument_list pos:start="37:37" pos:end="37:58">(<argument pos:start="37:38" pos:end="37:41"><expr pos:start="37:38" pos:end="37:41"><name pos:start="37:38" pos:end="37:41">test</name></expr></argument>, <argument pos:start="37:44" pos:end="37:47"><expr pos:start="37:44" pos:end="37:47"><name pos:start="37:44" pos:end="37:47">true</name></expr></argument>, <argument pos:start="37:50" pos:end="37:52"><expr pos:start="37:50" pos:end="37:52"><name pos:start="37:50" pos:end="37:52">src</name></expr></argument>, <argument pos:start="37:55" pos:end="37:57"><expr pos:start="37:55" pos:end="37:57"><name pos:start="37:55" pos:end="37:57">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:40"><expr pos:start="39:9" pos:end="39:39"><call pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:33">qio_channel_test_validate</name><argument_list pos:start="39:34" pos:end="39:39">(<argument pos:start="39:35" pos:end="39:38"><expr pos:start="39:35" pos:end="39:38"><name pos:start="39:35" pos:end="39:38">test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:34"><expr pos:start="43:9" pos:end="43:33"><call pos:start="43:9" pos:end="43:33"><name pos:start="43:9" pos:end="43:20">object_unref</name><argument_list pos:start="43:21" pos:end="43:33">(<argument pos:start="43:22" pos:end="43:32"><expr pos:start="43:22" pos:end="43:32"><call pos:start="43:22" pos:end="43:32"><name pos:start="43:22" pos:end="43:27">OBJECT</name><argument_list pos:start="43:28" pos:end="43:32">(<argument pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><name pos:start="43:29" pos:end="43:31">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:34"><expr pos:start="45:9" pos:end="45:33"><call pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:20">object_unref</name><argument_list pos:start="45:21" pos:end="45:33">(<argument pos:start="45:22" pos:end="45:32"><expr pos:start="45:22" pos:end="45:32"><call pos:start="45:22" pos:end="45:32"><name pos:start="45:22" pos:end="45:27">OBJECT</name><argument_list pos:start="45:28" pos:end="45:32">(<argument pos:start="45:29" pos:end="45:31"><expr pos:start="45:29" pos:end="45:31"><name pos:start="45:29" pos:end="45:31">dst</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:75"><expr pos:start="49:9" pos:end="49:74"><call pos:start="49:9" pos:end="49:74"><name pos:start="49:9" pos:end="49:35">test_io_channel_setup_async</name><argument_list pos:start="49:36" pos:end="49:74">(<argument pos:start="49:37" pos:end="49:47"><expr pos:start="49:37" pos:end="49:47"><name pos:start="49:37" pos:end="49:47">listen_addr</name></expr></argument>, <argument pos:start="49:50" pos:end="49:61"><expr pos:start="49:50" pos:end="49:61"><name pos:start="49:50" pos:end="49:61">connect_addr</name></expr></argument>, <argument pos:start="49:64" pos:end="49:67"><expr pos:start="49:64" pos:end="49:67"><operator pos:start="49:64" pos:end="49:64">&amp;</operator><name pos:start="49:65" pos:end="49:67">src</name></expr></argument>, <argument pos:start="49:70" pos:end="49:73"><expr pos:start="49:70" pos:end="49:73"><operator pos:start="49:70" pos:end="49:70">&amp;</operator><name pos:start="49:71" pos:end="49:73">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="53:9" pos:end="55:76"><expr pos:start="53:9" pos:end="55:75"><call pos:start="53:9" pos:end="55:75"><name pos:start="53:9" pos:end="53:16">g_assert</name><argument_list pos:start="53:17" pos:end="55:75">(<argument pos:start="53:18" pos:end="55:74"><expr pos:start="53:18" pos:end="55:74"><operator pos:start="53:18" pos:end="53:18">!</operator><name pos:start="53:19" pos:end="53:24">passFD</name> <operator pos:start="53:26" pos:end="53:27">||</operator>

                 <call pos:start="55:18" pos:end="55:74"><name pos:start="55:18" pos:end="55:40">qio_channel_has_feature</name><argument_list pos:start="55:41" pos:end="55:74">(<argument pos:start="55:42" pos:end="55:44"><expr pos:start="55:42" pos:end="55:44"><name pos:start="55:42" pos:end="55:44">src</name></expr></argument>, <argument pos:start="55:47" pos:end="55:73"><expr pos:start="55:47" pos:end="55:73"><name pos:start="55:47" pos:end="55:73">QIO_CHANNEL_FEATURE_FD_PASS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="59:76"><expr pos:start="57:9" pos:end="59:75"><call pos:start="57:9" pos:end="59:75"><name pos:start="57:9" pos:end="57:16">g_assert</name><argument_list pos:start="57:17" pos:end="59:75">(<argument pos:start="57:18" pos:end="59:74"><expr pos:start="57:18" pos:end="59:74"><operator pos:start="57:18" pos:end="57:18">!</operator><name pos:start="57:19" pos:end="57:24">passFD</name> <operator pos:start="57:26" pos:end="57:27">||</operator>

                 <call pos:start="59:18" pos:end="59:74"><name pos:start="59:18" pos:end="59:40">qio_channel_has_feature</name><argument_list pos:start="59:41" pos:end="59:74">(<argument pos:start="59:42" pos:end="59:44"><expr pos:start="59:42" pos:end="59:44"><name pos:start="59:42" pos:end="59:44">dst</name></expr></argument>, <argument pos:start="59:47" pos:end="59:73"><expr pos:start="59:47" pos:end="59:73"><name pos:start="59:47" pos:end="59:73">QIO_CHANNEL_FEATURE_FD_PASS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:77"><expr pos:start="61:9" pos:end="61:76"><call pos:start="61:9" pos:end="61:76"><name pos:start="61:9" pos:end="61:16">g_assert</name><argument_list pos:start="61:17" pos:end="61:76">(<argument pos:start="61:18" pos:end="61:75"><expr pos:start="61:18" pos:end="61:75"><call pos:start="61:18" pos:end="61:75"><name pos:start="61:18" pos:end="61:40">qio_channel_has_feature</name><argument_list pos:start="61:41" pos:end="61:75">(<argument pos:start="61:42" pos:end="61:44"><expr pos:start="61:42" pos:end="61:44"><name pos:start="61:42" pos:end="61:44">src</name></expr></argument>, <argument pos:start="61:47" pos:end="61:74"><expr pos:start="61:47" pos:end="61:74"><name pos:start="61:47" pos:end="61:74">QIO_CHANNEL_FEATURE_SHUTDOWN</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:77"><expr pos:start="63:9" pos:end="63:76"><call pos:start="63:9" pos:end="63:76"><name pos:start="63:9" pos:end="63:16">g_assert</name><argument_list pos:start="63:17" pos:end="63:76">(<argument pos:start="63:18" pos:end="63:75"><expr pos:start="63:18" pos:end="63:75"><call pos:start="63:18" pos:end="63:75"><name pos:start="63:18" pos:end="63:40">qio_channel_has_feature</name><argument_list pos:start="63:41" pos:end="63:75">(<argument pos:start="63:42" pos:end="63:44"><expr pos:start="63:42" pos:end="63:44"><name pos:start="63:42" pos:end="63:44">dst</name></expr></argument>, <argument pos:start="63:47" pos:end="63:74"><expr pos:start="63:47" pos:end="63:74"><name pos:start="63:47" pos:end="63:74">QIO_CHANNEL_FEATURE_SHUTDOWN</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:38"><expr pos:start="67:9" pos:end="67:37"><name pos:start="67:9" pos:end="67:12">test</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <call pos:start="67:16" pos:end="67:37"><name pos:start="67:16" pos:end="67:35">qio_channel_test_new</name><argument_list pos:start="67:36" pos:end="67:37">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:60"><expr pos:start="69:9" pos:end="69:59"><call pos:start="69:9" pos:end="69:59"><name pos:start="69:9" pos:end="69:36">qio_channel_test_run_threads</name><argument_list pos:start="69:37" pos:end="69:59">(<argument pos:start="69:38" pos:end="69:41"><expr pos:start="69:38" pos:end="69:41"><name pos:start="69:38" pos:end="69:41">test</name></expr></argument>, <argument pos:start="69:44" pos:end="69:48"><expr pos:start="69:44" pos:end="69:48"><name pos:start="69:44" pos:end="69:48">false</name></expr></argument>, <argument pos:start="69:51" pos:end="69:53"><expr pos:start="69:51" pos:end="69:53"><name pos:start="69:51" pos:end="69:53">src</name></expr></argument>, <argument pos:start="69:56" pos:end="69:58"><expr pos:start="69:56" pos:end="69:58"><name pos:start="69:56" pos:end="69:58">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:40"><expr pos:start="71:9" pos:end="71:39"><call pos:start="71:9" pos:end="71:39"><name pos:start="71:9" pos:end="71:33">qio_channel_test_validate</name><argument_list pos:start="71:34" pos:end="71:39">(<argument pos:start="71:35" pos:end="71:38"><expr pos:start="71:35" pos:end="71:38"><name pos:start="71:35" pos:end="71:38">test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:34"><expr pos:start="75:9" pos:end="75:33"><call pos:start="75:9" pos:end="75:33"><name pos:start="75:9" pos:end="75:20">object_unref</name><argument_list pos:start="75:21" pos:end="75:33">(<argument pos:start="75:22" pos:end="75:32"><expr pos:start="75:22" pos:end="75:32"><call pos:start="75:22" pos:end="75:32"><name pos:start="75:22" pos:end="75:27">OBJECT</name><argument_list pos:start="75:28" pos:end="75:32">(<argument pos:start="75:29" pos:end="75:31"><expr pos:start="75:29" pos:end="75:31"><name pos:start="75:29" pos:end="75:31">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:34"><expr pos:start="77:9" pos:end="77:33"><call pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:20">object_unref</name><argument_list pos:start="77:21" pos:end="77:33">(<argument pos:start="77:22" pos:end="77:32"><expr pos:start="77:22" pos:end="77:32"><call pos:start="77:22" pos:end="77:32"><name pos:start="77:22" pos:end="77:27">OBJECT</name><argument_list pos:start="77:28" pos:end="77:32">(<argument pos:start="77:29" pos:end="77:31"><expr pos:start="77:29" pos:end="77:31"><name pos:start="77:29" pos:end="77:31">dst</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="143:5">else <block pos:start="79:12" pos:end="143:5">{<block_content pos:start="81:9" pos:end="141:34">

        <expr_stmt pos:start="81:9" pos:end="81:74"><expr pos:start="81:9" pos:end="81:73"><call pos:start="81:9" pos:end="81:73"><name pos:start="81:9" pos:end="81:34">test_io_channel_setup_sync</name><argument_list pos:start="81:35" pos:end="81:73">(<argument pos:start="81:36" pos:end="81:46"><expr pos:start="81:36" pos:end="81:46"><name pos:start="81:36" pos:end="81:46">listen_addr</name></expr></argument>, <argument pos:start="81:49" pos:end="81:60"><expr pos:start="81:49" pos:end="81:60"><name pos:start="81:49" pos:end="81:60">connect_addr</name></expr></argument>, <argument pos:start="81:63" pos:end="81:66"><expr pos:start="81:63" pos:end="81:66"><operator pos:start="81:63" pos:end="81:63">&amp;</operator><name pos:start="81:64" pos:end="81:66">src</name></expr></argument>, <argument pos:start="81:69" pos:end="81:72"><expr pos:start="81:69" pos:end="81:72"><operator pos:start="81:69" pos:end="81:69">&amp;</operator><name pos:start="81:70" pos:end="81:72">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="85:9" pos:end="87:76"><expr pos:start="85:9" pos:end="87:75"><call pos:start="85:9" pos:end="87:75"><name pos:start="85:9" pos:end="85:16">g_assert</name><argument_list pos:start="85:17" pos:end="87:75">(<argument pos:start="85:18" pos:end="87:74"><expr pos:start="85:18" pos:end="87:74"><operator pos:start="85:18" pos:end="85:18">!</operator><name pos:start="85:19" pos:end="85:24">passFD</name> <operator pos:start="85:26" pos:end="85:27">||</operator>

                 <call pos:start="87:18" pos:end="87:74"><name pos:start="87:18" pos:end="87:40">qio_channel_has_feature</name><argument_list pos:start="87:41" pos:end="87:74">(<argument pos:start="87:42" pos:end="87:44"><expr pos:start="87:42" pos:end="87:44"><name pos:start="87:42" pos:end="87:44">src</name></expr></argument>, <argument pos:start="87:47" pos:end="87:73"><expr pos:start="87:47" pos:end="87:73"><name pos:start="87:47" pos:end="87:73">QIO_CHANNEL_FEATURE_FD_PASS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="91:76"><expr pos:start="89:9" pos:end="91:75"><call pos:start="89:9" pos:end="91:75"><name pos:start="89:9" pos:end="89:16">g_assert</name><argument_list pos:start="89:17" pos:end="91:75">(<argument pos:start="89:18" pos:end="91:74"><expr pos:start="89:18" pos:end="91:74"><operator pos:start="89:18" pos:end="89:18">!</operator><name pos:start="89:19" pos:end="89:24">passFD</name> <operator pos:start="89:26" pos:end="89:27">||</operator>

                 <call pos:start="91:18" pos:end="91:74"><name pos:start="91:18" pos:end="91:40">qio_channel_has_feature</name><argument_list pos:start="91:41" pos:end="91:74">(<argument pos:start="91:42" pos:end="91:44"><expr pos:start="91:42" pos:end="91:44"><name pos:start="91:42" pos:end="91:44">dst</name></expr></argument>, <argument pos:start="91:47" pos:end="91:73"><expr pos:start="91:47" pos:end="91:73"><name pos:start="91:47" pos:end="91:73">QIO_CHANNEL_FEATURE_FD_PASS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:77"><expr pos:start="93:9" pos:end="93:76"><call pos:start="93:9" pos:end="93:76"><name pos:start="93:9" pos:end="93:16">g_assert</name><argument_list pos:start="93:17" pos:end="93:76">(<argument pos:start="93:18" pos:end="93:75"><expr pos:start="93:18" pos:end="93:75"><call pos:start="93:18" pos:end="93:75"><name pos:start="93:18" pos:end="93:40">qio_channel_has_feature</name><argument_list pos:start="93:41" pos:end="93:75">(<argument pos:start="93:42" pos:end="93:44"><expr pos:start="93:42" pos:end="93:44"><name pos:start="93:42" pos:end="93:44">src</name></expr></argument>, <argument pos:start="93:47" pos:end="93:74"><expr pos:start="93:47" pos:end="93:74"><name pos:start="93:47" pos:end="93:74">QIO_CHANNEL_FEATURE_SHUTDOWN</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:77"><expr pos:start="95:9" pos:end="95:76"><call pos:start="95:9" pos:end="95:76"><name pos:start="95:9" pos:end="95:16">g_assert</name><argument_list pos:start="95:17" pos:end="95:76">(<argument pos:start="95:18" pos:end="95:75"><expr pos:start="95:18" pos:end="95:75"><call pos:start="95:18" pos:end="95:75"><name pos:start="95:18" pos:end="95:40">qio_channel_has_feature</name><argument_list pos:start="95:41" pos:end="95:75">(<argument pos:start="95:42" pos:end="95:44"><expr pos:start="95:42" pos:end="95:44"><name pos:start="95:42" pos:end="95:44">dst</name></expr></argument>, <argument pos:start="95:47" pos:end="95:74"><expr pos:start="95:47" pos:end="95:74"><name pos:start="95:47" pos:end="95:74">QIO_CHANNEL_FEATURE_SHUTDOWN</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:38"><expr pos:start="99:9" pos:end="99:37"><name pos:start="99:9" pos:end="99:12">test</name> <operator pos:start="99:14" pos:end="99:14">=</operator> <call pos:start="99:16" pos:end="99:37"><name pos:start="99:16" pos:end="99:35">qio_channel_test_new</name><argument_list pos:start="99:36" pos:end="99:37">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:59"><expr pos:start="101:9" pos:end="101:58"><call pos:start="101:9" pos:end="101:58"><name pos:start="101:9" pos:end="101:36">qio_channel_test_run_threads</name><argument_list pos:start="101:37" pos:end="101:58">(<argument pos:start="101:38" pos:end="101:41"><expr pos:start="101:38" pos:end="101:41"><name pos:start="101:38" pos:end="101:41">test</name></expr></argument>, <argument pos:start="101:44" pos:end="101:47"><expr pos:start="101:44" pos:end="101:47"><name pos:start="101:44" pos:end="101:47">true</name></expr></argument>, <argument pos:start="101:50" pos:end="101:52"><expr pos:start="101:50" pos:end="101:52"><name pos:start="101:50" pos:end="101:52">src</name></expr></argument>, <argument pos:start="101:55" pos:end="101:57"><expr pos:start="101:55" pos:end="101:57"><name pos:start="101:55" pos:end="101:57">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:40"><expr pos:start="103:9" pos:end="103:39"><call pos:start="103:9" pos:end="103:39"><name pos:start="103:9" pos:end="103:33">qio_channel_test_validate</name><argument_list pos:start="103:34" pos:end="103:39">(<argument pos:start="103:35" pos:end="103:38"><expr pos:start="103:35" pos:end="103:38"><name pos:start="103:35" pos:end="103:38">test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:34"><expr pos:start="107:9" pos:end="107:33"><call pos:start="107:9" pos:end="107:33"><name pos:start="107:9" pos:end="107:20">object_unref</name><argument_list pos:start="107:21" pos:end="107:33">(<argument pos:start="107:22" pos:end="107:32"><expr pos:start="107:22" pos:end="107:32"><call pos:start="107:22" pos:end="107:32"><name pos:start="107:22" pos:end="107:27">OBJECT</name><argument_list pos:start="107:28" pos:end="107:32">(<argument pos:start="107:29" pos:end="107:31"><expr pos:start="107:29" pos:end="107:31"><name pos:start="107:29" pos:end="107:31">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:34"><expr pos:start="109:9" pos:end="109:33"><call pos:start="109:9" pos:end="109:33"><name pos:start="109:9" pos:end="109:20">object_unref</name><argument_list pos:start="109:21" pos:end="109:33">(<argument pos:start="109:22" pos:end="109:32"><expr pos:start="109:22" pos:end="109:32"><call pos:start="109:22" pos:end="109:32"><name pos:start="109:22" pos:end="109:27">OBJECT</name><argument_list pos:start="109:28" pos:end="109:32">(<argument pos:start="109:29" pos:end="109:31"><expr pos:start="109:29" pos:end="109:31"><name pos:start="109:29" pos:end="109:31">dst</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:74"><expr pos:start="113:9" pos:end="113:73"><call pos:start="113:9" pos:end="113:73"><name pos:start="113:9" pos:end="113:34">test_io_channel_setup_sync</name><argument_list pos:start="113:35" pos:end="113:73">(<argument pos:start="113:36" pos:end="113:46"><expr pos:start="113:36" pos:end="113:46"><name pos:start="113:36" pos:end="113:46">listen_addr</name></expr></argument>, <argument pos:start="113:49" pos:end="113:60"><expr pos:start="113:49" pos:end="113:60"><name pos:start="113:49" pos:end="113:60">connect_addr</name></expr></argument>, <argument pos:start="113:63" pos:end="113:66"><expr pos:start="113:63" pos:end="113:66"><operator pos:start="113:63" pos:end="113:63">&amp;</operator><name pos:start="113:64" pos:end="113:66">src</name></expr></argument>, <argument pos:start="113:69" pos:end="113:72"><expr pos:start="113:69" pos:end="113:72"><operator pos:start="113:69" pos:end="113:69">&amp;</operator><name pos:start="113:70" pos:end="113:72">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="117:9" pos:end="119:76"><expr pos:start="117:9" pos:end="119:75"><call pos:start="117:9" pos:end="119:75"><name pos:start="117:9" pos:end="117:16">g_assert</name><argument_list pos:start="117:17" pos:end="119:75">(<argument pos:start="117:18" pos:end="119:74"><expr pos:start="117:18" pos:end="119:74"><operator pos:start="117:18" pos:end="117:18">!</operator><name pos:start="117:19" pos:end="117:24">passFD</name> <operator pos:start="117:26" pos:end="117:27">||</operator>

                 <call pos:start="119:18" pos:end="119:74"><name pos:start="119:18" pos:end="119:40">qio_channel_has_feature</name><argument_list pos:start="119:41" pos:end="119:74">(<argument pos:start="119:42" pos:end="119:44"><expr pos:start="119:42" pos:end="119:44"><name pos:start="119:42" pos:end="119:44">src</name></expr></argument>, <argument pos:start="119:47" pos:end="119:73"><expr pos:start="119:47" pos:end="119:73"><name pos:start="119:47" pos:end="119:73">QIO_CHANNEL_FEATURE_FD_PASS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="123:76"><expr pos:start="121:9" pos:end="123:75"><call pos:start="121:9" pos:end="123:75"><name pos:start="121:9" pos:end="121:16">g_assert</name><argument_list pos:start="121:17" pos:end="123:75">(<argument pos:start="121:18" pos:end="123:74"><expr pos:start="121:18" pos:end="123:74"><operator pos:start="121:18" pos:end="121:18">!</operator><name pos:start="121:19" pos:end="121:24">passFD</name> <operator pos:start="121:26" pos:end="121:27">||</operator>

                 <call pos:start="123:18" pos:end="123:74"><name pos:start="123:18" pos:end="123:40">qio_channel_has_feature</name><argument_list pos:start="123:41" pos:end="123:74">(<argument pos:start="123:42" pos:end="123:44"><expr pos:start="123:42" pos:end="123:44"><name pos:start="123:42" pos:end="123:44">dst</name></expr></argument>, <argument pos:start="123:47" pos:end="123:73"><expr pos:start="123:47" pos:end="123:73"><name pos:start="123:47" pos:end="123:73">QIO_CHANNEL_FEATURE_FD_PASS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:77"><expr pos:start="125:9" pos:end="125:76"><call pos:start="125:9" pos:end="125:76"><name pos:start="125:9" pos:end="125:16">g_assert</name><argument_list pos:start="125:17" pos:end="125:76">(<argument pos:start="125:18" pos:end="125:75"><expr pos:start="125:18" pos:end="125:75"><call pos:start="125:18" pos:end="125:75"><name pos:start="125:18" pos:end="125:40">qio_channel_has_feature</name><argument_list pos:start="125:41" pos:end="125:75">(<argument pos:start="125:42" pos:end="125:44"><expr pos:start="125:42" pos:end="125:44"><name pos:start="125:42" pos:end="125:44">src</name></expr></argument>, <argument pos:start="125:47" pos:end="125:74"><expr pos:start="125:47" pos:end="125:74"><name pos:start="125:47" pos:end="125:74">QIO_CHANNEL_FEATURE_SHUTDOWN</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:77"><expr pos:start="127:9" pos:end="127:76"><call pos:start="127:9" pos:end="127:76"><name pos:start="127:9" pos:end="127:16">g_assert</name><argument_list pos:start="127:17" pos:end="127:76">(<argument pos:start="127:18" pos:end="127:75"><expr pos:start="127:18" pos:end="127:75"><call pos:start="127:18" pos:end="127:75"><name pos:start="127:18" pos:end="127:40">qio_channel_has_feature</name><argument_list pos:start="127:41" pos:end="127:75">(<argument pos:start="127:42" pos:end="127:44"><expr pos:start="127:42" pos:end="127:44"><name pos:start="127:42" pos:end="127:44">dst</name></expr></argument>, <argument pos:start="127:47" pos:end="127:74"><expr pos:start="127:47" pos:end="127:74"><name pos:start="127:47" pos:end="127:74">QIO_CHANNEL_FEATURE_SHUTDOWN</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="131:9" pos:end="131:38"><expr pos:start="131:9" pos:end="131:37"><name pos:start="131:9" pos:end="131:12">test</name> <operator pos:start="131:14" pos:end="131:14">=</operator> <call pos:start="131:16" pos:end="131:37"><name pos:start="131:16" pos:end="131:35">qio_channel_test_new</name><argument_list pos:start="131:36" pos:end="131:37">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:60"><expr pos:start="133:9" pos:end="133:59"><call pos:start="133:9" pos:end="133:59"><name pos:start="133:9" pos:end="133:36">qio_channel_test_run_threads</name><argument_list pos:start="133:37" pos:end="133:59">(<argument pos:start="133:38" pos:end="133:41"><expr pos:start="133:38" pos:end="133:41"><name pos:start="133:38" pos:end="133:41">test</name></expr></argument>, <argument pos:start="133:44" pos:end="133:48"><expr pos:start="133:44" pos:end="133:48"><name pos:start="133:44" pos:end="133:48">false</name></expr></argument>, <argument pos:start="133:51" pos:end="133:53"><expr pos:start="133:51" pos:end="133:53"><name pos:start="133:51" pos:end="133:53">src</name></expr></argument>, <argument pos:start="133:56" pos:end="133:58"><expr pos:start="133:56" pos:end="133:58"><name pos:start="133:56" pos:end="133:58">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:40"><expr pos:start="135:9" pos:end="135:39"><call pos:start="135:9" pos:end="135:39"><name pos:start="135:9" pos:end="135:33">qio_channel_test_validate</name><argument_list pos:start="135:34" pos:end="135:39">(<argument pos:start="135:35" pos:end="135:38"><expr pos:start="135:35" pos:end="135:38"><name pos:start="135:35" pos:end="135:38">test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="139:9" pos:end="139:34"><expr pos:start="139:9" pos:end="139:33"><call pos:start="139:9" pos:end="139:33"><name pos:start="139:9" pos:end="139:20">object_unref</name><argument_list pos:start="139:21" pos:end="139:33">(<argument pos:start="139:22" pos:end="139:32"><expr pos:start="139:22" pos:end="139:32"><call pos:start="139:22" pos:end="139:32"><name pos:start="139:22" pos:end="139:27">OBJECT</name><argument_list pos:start="139:28" pos:end="139:32">(<argument pos:start="139:29" pos:end="139:31"><expr pos:start="139:29" pos:end="139:31"><name pos:start="139:29" pos:end="139:31">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:34"><expr pos:start="141:9" pos:end="141:33"><call pos:start="141:9" pos:end="141:33"><name pos:start="141:9" pos:end="141:20">object_unref</name><argument_list pos:start="141:21" pos:end="141:33">(<argument pos:start="141:22" pos:end="141:32"><expr pos:start="141:22" pos:end="141:32"><call pos:start="141:22" pos:end="141:32"><name pos:start="141:22" pos:end="141:27">OBJECT</name><argument_list pos:start="141:28" pos:end="141:32">(<argument pos:start="141:29" pos:end="141:31"><expr pos:start="141:29" pos:end="141:31"><name pos:start="141:29" pos:end="141:31">dst</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
