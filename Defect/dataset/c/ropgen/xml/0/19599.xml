<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19599.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">tgv_decode_inter</name><parameter_list pos:start="1:28" pos:end="1:87">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:38">TgvContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type> <name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:57">uint8_t</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">buf</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:86"><decl pos:start="1:65" pos:end="1:86"><type pos:start="1:65" pos:end="1:86"><specifier pos:start="1:65" pos:end="1:69">const</specifier> <name pos:start="1:71" pos:end="1:77">uint8_t</name> <modifier pos:start="1:79" pos:end="1:79">*</modifier></type><name pos:start="1:80" pos:end="1:86">buf_end</name></decl></parameter>)</parameter_list><block pos:start="1:88" pos:end="189:1">{<block_content pos:start="3:5" pos:end="187:13">

    <decl_stmt pos:start="3:5" pos:end="3:98"><decl pos:start="3:5" pos:end="3:97"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:12">unsigned</name> <name pos:start="3:14" pos:end="3:17">char</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:29">frame0_end</name> <init pos:start="3:31" pos:end="3:97">= <expr pos:start="3:33" pos:end="3:97"><name pos:start="3:33" pos:end="3:53"><name pos:start="3:33" pos:end="3:33">s</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:45">last_frame</name><operator pos:start="3:46" pos:end="3:46">.</operator><name pos:start="3:47" pos:end="3:50">data</name><index pos:start="3:51" pos:end="3:53">[<expr pos:start="3:52" pos:end="3:52"><literal type="number" pos:start="3:52" pos:end="3:52">0</literal></expr>]</index></name> <operator pos:start="3:55" pos:end="3:55">+</operator> <name pos:start="3:57" pos:end="3:71"><name pos:start="3:57" pos:end="3:57">s</name><operator pos:start="3:58" pos:end="3:59">-&gt;</operator><name pos:start="3:60" pos:end="3:64">avctx</name><operator pos:start="3:65" pos:end="3:66">-&gt;</operator><name pos:start="3:67" pos:end="3:71">width</name></name><operator pos:start="3:72" pos:end="3:72">*</operator><name pos:start="3:73" pos:end="3:97"><name pos:start="3:73" pos:end="3:73">s</name><operator pos:start="3:74" pos:end="3:75">-&gt;</operator><name pos:start="3:76" pos:end="3:85">last_frame</name><operator pos:start="3:86" pos:end="3:86">.</operator><name pos:start="3:87" pos:end="3:94">linesize</name><index pos:start="3:95" pos:end="3:97">[<expr pos:start="3:96" pos:end="3:96"><literal type="number" pos:start="3:96" pos:end="3:96">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">num_mvs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:22">num_blocks_raw</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:25">num_blocks_packed</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">vector_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>,<decl pos:start="13:11" pos:end="13:11"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:11" pos:end="13:11">j</name></decl>,<decl pos:start="13:13" pos:end="13:13"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:13" pos:end="13:13">x</name></decl>,<decl pos:start="13:15" pos:end="13:15"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:15">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:17">GetBitContext</name></type> <name pos:start="15:19" pos:end="15:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">mvbits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:36"><decl pos:start="19:5" pos:end="19:35"><type pos:start="19:5" pos:end="19:25"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:18">unsigned</name> <name pos:start="19:20" pos:end="19:23">char</name> <modifier pos:start="19:25" pos:end="19:25">*</modifier></type><name pos:start="19:26" pos:end="19:35">blocks_raw</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if<condition pos:start="23:7" pos:end="23:22">(<expr pos:start="23:8" pos:end="23:21"><name pos:start="23:8" pos:end="23:10">buf</name><operator pos:start="23:11" pos:end="23:11">+</operator><literal type="number" pos:start="23:12" pos:end="23:13">12</literal><operator pos:start="23:14" pos:end="23:14">&gt;</operator><name pos:start="23:15" pos:end="23:21">buf_end</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:41"><expr pos:start="29:5" pos:end="29:40"><name pos:start="29:5" pos:end="29:11">num_mvs</name>           <operator pos:start="29:23" pos:end="29:23">=</operator> <call pos:start="29:25" pos:end="29:40"><name pos:start="29:25" pos:end="29:31">AV_RL16</name><argument_list pos:start="29:32" pos:end="29:40">(<argument pos:start="29:33" pos:end="29:39"><expr pos:start="29:33" pos:end="29:39"><operator pos:start="29:33" pos:end="29:33">&amp;</operator><name pos:start="29:34" pos:end="29:39"><name pos:start="29:34" pos:end="29:36">buf</name><index pos:start="29:37" pos:end="29:39">[<expr pos:start="29:38" pos:end="29:38"><literal type="number" pos:start="29:38" pos:end="29:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:18">num_blocks_raw</name>    <operator pos:start="31:23" pos:end="31:23">=</operator> <call pos:start="31:25" pos:end="31:40"><name pos:start="31:25" pos:end="31:31">AV_RL16</name><argument_list pos:start="31:32" pos:end="31:40">(<argument pos:start="31:33" pos:end="31:39"><expr pos:start="31:33" pos:end="31:39"><operator pos:start="31:33" pos:end="31:33">&amp;</operator><name pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:36">buf</name><index pos:start="31:37" pos:end="31:39">[<expr pos:start="31:38" pos:end="31:38"><literal type="number" pos:start="31:38" pos:end="31:38">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:21">num_blocks_packed</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <call pos:start="33:25" pos:end="33:40"><name pos:start="33:25" pos:end="33:31">AV_RL16</name><argument_list pos:start="33:32" pos:end="33:40">(<argument pos:start="33:33" pos:end="33:39"><expr pos:start="33:33" pos:end="33:39"><operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:39"><name pos:start="33:34" pos:end="33:36">buf</name><index pos:start="33:37" pos:end="33:39">[<expr pos:start="33:38" pos:end="33:38"><literal type="number" pos:start="33:38" pos:end="33:38">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:15">vector_bits</name>       <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:40"><name pos:start="35:25" pos:end="35:31">AV_RL16</name><argument_list pos:start="35:32" pos:end="35:40">(<argument pos:start="35:33" pos:end="35:39"><expr pos:start="35:33" pos:end="35:39"><operator pos:start="35:33" pos:end="35:33">&amp;</operator><name pos:start="35:34" pos:end="35:39"><name pos:start="35:34" pos:end="35:36">buf</name><index pos:start="35:37" pos:end="35:39">[<expr pos:start="35:38" pos:end="35:38"><literal type="number" pos:start="35:38" pos:end="35:38">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:14"><expr pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:7">buf</name> <operator pos:start="37:9" pos:end="37:10">+=</operator> <literal type="number" pos:start="37:12" pos:end="37:13">12</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:48">/* allocate codebook buffers as necessary */</comment>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:29">(<expr pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:15">num_mvs</name> <operator pos:start="43:17" pos:end="43:17">&gt;</operator> <name pos:start="43:19" pos:end="43:28"><name pos:start="43:19" pos:end="43:19">s</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:28">num_mvs</name></name></expr>)</condition> <block pos:start="43:31" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:29">

        <expr_stmt pos:start="45:9" pos:end="45:75"><expr pos:start="45:9" pos:end="45:74"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:22">mv_codebook</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <call pos:start="45:26" pos:end="45:74"><name pos:start="45:26" pos:end="45:35">av_realloc</name><argument_list pos:start="45:36" pos:end="45:74">(<argument pos:start="45:37" pos:end="45:50"><expr pos:start="45:37" pos:end="45:50"><name pos:start="45:37" pos:end="45:50"><name pos:start="45:37" pos:end="45:37">s</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:50">mv_codebook</name></name></expr></argument>, <argument pos:start="45:53" pos:end="45:73"><expr pos:start="45:53" pos:end="45:73"><name pos:start="45:53" pos:end="45:59">num_mvs</name><operator pos:start="45:60" pos:end="45:60">*</operator><literal type="number" pos:start="45:61" pos:end="45:61">2</literal><operator pos:start="45:62" pos:end="45:62">*</operator><sizeof pos:start="45:63" pos:end="45:73">sizeof<argument_list pos:start="45:69" pos:end="45:73">(<argument pos:start="45:70" pos:end="45:72"><expr pos:start="45:70" pos:end="45:72"><name pos:start="45:70" pos:end="45:72">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:29"><expr pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:18">num_mvs</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:28">num_mvs</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:49">(<expr pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:25">num_blocks_packed</name> <operator pos:start="53:27" pos:end="53:27">&gt;</operator> <name pos:start="53:29" pos:end="53:48"><name pos:start="53:29" pos:end="53:29">s</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:48">num_blocks_packed</name></name></expr>)</condition> <block pos:start="53:51" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:49">

        <expr_stmt pos:start="55:9" pos:end="55:102"><expr pos:start="55:9" pos:end="55:101"><name pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:25">block_codebook</name></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <call pos:start="55:29" pos:end="55:101"><name pos:start="55:29" pos:end="55:38">av_realloc</name><argument_list pos:start="55:39" pos:end="55:101">(<argument pos:start="55:40" pos:end="55:56"><expr pos:start="55:40" pos:end="55:56"><name pos:start="55:40" pos:end="55:56"><name pos:start="55:40" pos:end="55:40">s</name><operator pos:start="55:41" pos:end="55:42">-&gt;</operator><name pos:start="55:43" pos:end="55:56">block_codebook</name></name></expr></argument>, <argument pos:start="55:59" pos:end="55:100"><expr pos:start="55:59" pos:end="55:100"><name pos:start="55:59" pos:end="55:75">num_blocks_packed</name><operator pos:start="55:76" pos:end="55:76">*</operator><literal type="number" pos:start="55:77" pos:end="55:78">16</literal><operator pos:start="55:79" pos:end="55:79">*</operator>sizeof<operator pos:start="55:86" pos:end="55:86">(</operator><name pos:start="55:87" pos:end="55:94">unsigned</name> <name pos:start="55:96" pos:end="55:99">char</name><operator pos:start="55:100" pos:end="55:100">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:49"><expr pos:start="57:9" pos:end="57:48"><name pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:28">num_blocks_packed</name></name> <operator pos:start="57:30" pos:end="57:30">=</operator> <name pos:start="57:32" pos:end="57:48">num_blocks_packed</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:29">/* read motion vectors */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:37"><expr pos:start="65:5" pos:end="65:36"><name pos:start="65:5" pos:end="65:10">mvbits</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <operator pos:start="65:14" pos:end="65:14">(</operator><name pos:start="65:15" pos:end="65:21">num_mvs</name><operator pos:start="65:22" pos:end="65:22">*</operator><literal type="number" pos:start="65:23" pos:end="65:23">2</literal><operator pos:start="65:24" pos:end="65:24">*</operator><literal type="number" pos:start="65:25" pos:end="65:27">10</literal><operator pos:start="65:27" pos:end="65:27">+</operator><literal type="number" pos:start="65:28" pos:end="65:29">31</literal><operator pos:start="65:30" pos:end="65:30">)</operator> <operator pos:start="65:32" pos:end="65:32">&amp;</operator> <operator pos:start="65:34" pos:end="65:34">~</operator><literal type="number" pos:start="65:35" pos:end="65:36">31</literal></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="71:18"><if pos:start="69:5" pos:end="71:18">if <condition pos:start="69:8" pos:end="69:70">(<expr pos:start="69:9" pos:end="69:69"><name pos:start="69:9" pos:end="69:11">buf</name><operator pos:start="69:12" pos:end="69:12">+</operator><operator pos:start="69:13" pos:end="69:13">(</operator><name pos:start="69:14" pos:end="69:19">mvbits</name><operator pos:start="69:20" pos:end="69:21">&gt;&gt;</operator><literal type="number" pos:start="69:22" pos:end="69:22">3</literal><operator pos:start="69:23" pos:end="69:23">)</operator><operator pos:start="69:24" pos:end="69:24">+</operator><literal type="number" pos:start="69:25" pos:end="69:26">16</literal><operator pos:start="69:27" pos:end="69:27">*</operator><name pos:start="69:28" pos:end="69:41">num_blocks_raw</name><operator pos:start="69:42" pos:end="69:42">+</operator><literal type="number" pos:start="69:43" pos:end="69:43">8</literal><operator pos:start="69:44" pos:end="69:44">*</operator><name pos:start="69:45" pos:end="69:61">num_blocks_packed</name><operator pos:start="69:62" pos:end="69:62">&gt;</operator><name pos:start="69:63" pos:end="69:69">buf_end</name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:18"><block_content pos:start="71:9" pos:end="71:18">

        <return pos:start="71:9" pos:end="71:18">return <expr pos:start="71:16" pos:end="71:17"><operator pos:start="71:16" pos:end="71:16">-</operator><literal type="number" pos:start="71:17" pos:end="71:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:36"><expr pos:start="75:5" pos:end="75:35"><call pos:start="75:5" pos:end="75:35"><name pos:start="75:5" pos:end="75:17">init_get_bits</name><argument_list pos:start="75:18" pos:end="75:35">(<argument pos:start="75:19" pos:end="75:21"><expr pos:start="75:19" pos:end="75:21"><operator pos:start="75:19" pos:end="75:19">&amp;</operator><name pos:start="75:20" pos:end="75:21">gb</name></expr></argument>, <argument pos:start="75:24" pos:end="75:26"><expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:26">buf</name></expr></argument>, <argument pos:start="75:29" pos:end="75:34"><expr pos:start="75:29" pos:end="75:34"><name pos:start="75:29" pos:end="75:34">mvbits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="77:5" pos:end="83:5">for <control pos:start="77:9" pos:end="77:29">(<init pos:start="77:10" pos:end="77:13"><expr pos:start="77:10" pos:end="77:12"><name pos:start="77:10" pos:end="77:10">i</name><operator pos:start="77:11" pos:end="77:11">=</operator><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</init> <condition pos:start="77:15" pos:end="77:24"><expr pos:start="77:15" pos:end="77:23"><name pos:start="77:15" pos:end="77:15">i</name><operator pos:start="77:16" pos:end="77:16">&lt;</operator><name pos:start="77:17" pos:end="77:23">num_mvs</name></expr>;</condition> <incr pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:26">i</name><operator pos:start="77:27" pos:end="77:28">++</operator></expr></incr>)</control> <block pos:start="77:31" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:50">

        <expr_stmt pos:start="79:9" pos:end="79:50"><expr pos:start="79:9" pos:end="79:49"><name pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:22">mv_codebook</name><index pos:start="79:23" pos:end="79:25">[<expr pos:start="79:24" pos:end="79:24"><name pos:start="79:24" pos:end="79:24">i</name></expr>]</index><index pos:start="79:26" pos:end="79:28">[<expr pos:start="79:27" pos:end="79:27"><literal type="number" pos:start="79:27" pos:end="79:27">0</literal></expr>]</index></name> <operator pos:start="79:30" pos:end="79:30">=</operator> <call pos:start="79:32" pos:end="79:49"><name pos:start="79:32" pos:end="79:40">get_sbits</name><argument_list pos:start="79:41" pos:end="79:49">(<argument pos:start="79:42" pos:end="79:44"><expr pos:start="79:42" pos:end="79:44"><operator pos:start="79:42" pos:end="79:42">&amp;</operator><name pos:start="79:43" pos:end="79:44">gb</name></expr></argument>, <argument pos:start="79:47" pos:end="79:48"><expr pos:start="79:47" pos:end="79:48"><literal type="number" pos:start="79:47" pos:end="79:48">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:50"><expr pos:start="81:9" pos:end="81:49"><name pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:22">mv_codebook</name><index pos:start="81:23" pos:end="81:25">[<expr pos:start="81:24" pos:end="81:24"><name pos:start="81:24" pos:end="81:24">i</name></expr>]</index><index pos:start="81:26" pos:end="81:28">[<expr pos:start="81:27" pos:end="81:27"><literal type="number" pos:start="81:27" pos:end="81:27">1</literal></expr>]</index></name> <operator pos:start="81:30" pos:end="81:30">=</operator> <call pos:start="81:32" pos:end="81:49"><name pos:start="81:32" pos:end="81:40">get_sbits</name><argument_list pos:start="81:41" pos:end="81:49">(<argument pos:start="81:42" pos:end="81:44"><expr pos:start="81:42" pos:end="81:44"><operator pos:start="81:42" pos:end="81:42">&amp;</operator><name pos:start="81:43" pos:end="81:44">gb</name></expr></argument>, <argument pos:start="81:47" pos:end="81:48"><expr pos:start="81:47" pos:end="81:48"><literal type="number" pos:start="81:47" pos:end="81:48">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="85:5" pos:end="85:21"><expr pos:start="85:5" pos:end="85:20"><name pos:start="85:5" pos:end="85:7">buf</name> <operator pos:start="85:9" pos:end="85:10">+=</operator> <name pos:start="85:12" pos:end="85:17">mvbits</name><operator pos:start="85:18" pos:end="85:19">&gt;&gt;</operator><literal type="number" pos:start="85:20" pos:end="85:20">3</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:41">/* note ptr to uncompressed blocks */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:21"><expr pos:start="91:5" pos:end="91:20"><name pos:start="91:5" pos:end="91:14">blocks_raw</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <name pos:start="91:18" pos:end="91:20">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:29"><expr pos:start="93:5" pos:end="93:28"><name pos:start="93:5" pos:end="93:7">buf</name> <operator pos:start="93:9" pos:end="93:10">+=</operator> <name pos:start="93:12" pos:end="93:25">num_blocks_raw</name><operator pos:start="93:26" pos:end="93:26">*</operator><literal type="number" pos:start="93:27" pos:end="93:28">16</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:32">/* read compressed blocks */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:46"><expr pos:start="99:5" pos:end="99:45"><call pos:start="99:5" pos:end="99:45"><name pos:start="99:5" pos:end="99:17">init_get_bits</name><argument_list pos:start="99:18" pos:end="99:45">(<argument pos:start="99:19" pos:end="99:21"><expr pos:start="99:19" pos:end="99:21"><operator pos:start="99:19" pos:end="99:19">&amp;</operator><name pos:start="99:20" pos:end="99:21">gb</name></expr></argument>, <argument pos:start="99:24" pos:end="99:26"><expr pos:start="99:24" pos:end="99:26"><name pos:start="99:24" pos:end="99:26">buf</name></expr></argument>, <argument pos:start="99:29" pos:end="99:44"><expr pos:start="99:29" pos:end="99:44"><operator pos:start="99:29" pos:end="99:29">(</operator><name pos:start="99:30" pos:end="99:36">buf_end</name><operator pos:start="99:37" pos:end="99:37">-</operator><name pos:start="99:38" pos:end="99:40">buf</name><operator pos:start="99:41" pos:end="99:41">)</operator><operator pos:start="99:42" pos:end="99:43">&lt;&lt;</operator><literal type="number" pos:start="99:44" pos:end="99:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="101:5" pos:end="113:5">for <control pos:start="101:9" pos:end="101:39">(<init pos:start="101:10" pos:end="101:13"><expr pos:start="101:10" pos:end="101:12"><name pos:start="101:10" pos:end="101:10">i</name><operator pos:start="101:11" pos:end="101:11">=</operator><literal type="number" pos:start="101:12" pos:end="101:12">0</literal></expr>;</init> <condition pos:start="101:15" pos:end="101:34"><expr pos:start="101:15" pos:end="101:33"><name pos:start="101:15" pos:end="101:15">i</name><operator pos:start="101:16" pos:end="101:16">&lt;</operator><name pos:start="101:17" pos:end="101:33">num_blocks_packed</name></expr>;</condition> <incr pos:start="101:36" pos:end="101:38"><expr pos:start="101:36" pos:end="101:38"><name pos:start="101:36" pos:end="101:36">i</name><operator pos:start="101:37" pos:end="101:38">++</operator></expr></incr>)</control> <block pos:start="101:41" pos:end="113:5">{<block_content pos:start="103:9" pos:end="111:63">

        <decl_stmt pos:start="103:9" pos:end="103:19"><decl pos:start="103:9" pos:end="103:18"><type pos:start="103:9" pos:end="103:11"><name pos:start="103:9" pos:end="103:11">int</name></type> <name pos:start="103:13" pos:end="103:18"><name pos:start="103:13" pos:end="103:15">tmp</name><index pos:start="103:16" pos:end="103:18">[<expr pos:start="103:17" pos:end="103:17"><literal type="number" pos:start="103:17" pos:end="103:17">4</literal></expr>]</index></name></decl>;</decl_stmt>

        <for pos:start="105:9" pos:end="107:38">for<control pos:start="105:12" pos:end="105:26">(<init pos:start="105:13" pos:end="105:16"><expr pos:start="105:13" pos:end="105:15"><name pos:start="105:13" pos:end="105:13">j</name><operator pos:start="105:14" pos:end="105:14">=</operator><literal type="number" pos:start="105:15" pos:end="105:15">0</literal></expr>;</init> <condition pos:start="105:18" pos:end="105:21"><expr pos:start="105:18" pos:end="105:20"><name pos:start="105:18" pos:end="105:18">j</name><operator pos:start="105:19" pos:end="105:19">&lt;</operator><literal type="number" pos:start="105:20" pos:end="105:20">4</literal></expr>;</condition> <incr pos:start="105:23" pos:end="105:25"><expr pos:start="105:23" pos:end="105:25"><name pos:start="105:23" pos:end="105:23">j</name><operator pos:start="105:24" pos:end="105:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:13" pos:end="107:38"><block_content pos:start="107:13" pos:end="107:38">

            <expr_stmt pos:start="107:13" pos:end="107:38"><expr pos:start="107:13" pos:end="107:37"><name pos:start="107:13" pos:end="107:18"><name pos:start="107:13" pos:end="107:15">tmp</name><index pos:start="107:16" pos:end="107:18">[<expr pos:start="107:17" pos:end="107:17"><name pos:start="107:17" pos:end="107:17">j</name></expr>]</index></name> <operator pos:start="107:20" pos:end="107:20">=</operator> <call pos:start="107:22" pos:end="107:37"><name pos:start="107:22" pos:end="107:29">get_bits</name><argument_list pos:start="107:30" pos:end="107:37">(<argument pos:start="107:31" pos:end="107:33"><expr pos:start="107:31" pos:end="107:33"><operator pos:start="107:31" pos:end="107:31">&amp;</operator><name pos:start="107:32" pos:end="107:33">gb</name></expr></argument>, <argument pos:start="107:36" pos:end="107:36"><expr pos:start="107:36" pos:end="107:36"><literal type="number" pos:start="107:36" pos:end="107:36">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="109:9" pos:end="111:63">for<control pos:start="109:12" pos:end="109:27">(<init pos:start="109:13" pos:end="109:16"><expr pos:start="109:13" pos:end="109:15"><name pos:start="109:13" pos:end="109:13">j</name><operator pos:start="109:14" pos:end="109:14">=</operator><literal type="number" pos:start="109:15" pos:end="109:15">0</literal></expr>;</init> <condition pos:start="109:18" pos:end="109:22"><expr pos:start="109:18" pos:end="109:21"><name pos:start="109:18" pos:end="109:18">j</name><operator pos:start="109:19" pos:end="109:19">&lt;</operator><literal type="number" pos:start="109:20" pos:end="109:21">16</literal></expr>;</condition> <incr pos:start="109:24" pos:end="109:26"><expr pos:start="109:24" pos:end="109:26"><name pos:start="109:24" pos:end="109:24">j</name><operator pos:start="109:25" pos:end="109:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="111:13" pos:end="111:63"><block_content pos:start="111:13" pos:end="111:63">

            <expr_stmt pos:start="111:13" pos:end="111:63"><expr pos:start="111:13" pos:end="111:62"><name pos:start="111:13" pos:end="111:38"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:29">block_codebook</name><index pos:start="111:30" pos:end="111:32">[<expr pos:start="111:31" pos:end="111:31"><name pos:start="111:31" pos:end="111:31">i</name></expr>]</index><index pos:start="111:33" pos:end="111:38">[<expr pos:start="111:34" pos:end="111:37"><literal type="number" pos:start="111:34" pos:end="111:35">15</literal><operator pos:start="111:36" pos:end="111:36">-</operator><name pos:start="111:37" pos:end="111:37">j</name></expr>]</index></name> <operator pos:start="111:40" pos:end="111:40">=</operator> <name pos:start="111:42" pos:end="111:62"><name pos:start="111:42" pos:end="111:44">tmp</name><index pos:start="111:45" pos:end="111:62">[<expr pos:start="111:46" pos:end="111:61"><call pos:start="111:46" pos:end="111:61"><name pos:start="111:46" pos:end="111:53">get_bits</name><argument_list pos:start="111:54" pos:end="111:61">(<argument pos:start="111:55" pos:end="111:57"><expr pos:start="111:55" pos:end="111:57"><operator pos:start="111:55" pos:end="111:55">&amp;</operator><name pos:start="111:56" pos:end="111:57">gb</name></expr></argument>, <argument pos:start="111:60" pos:end="111:60"><expr pos:start="111:60" pos:end="111:60"><literal type="number" pos:start="111:60" pos:end="111:60">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="117:5" pos:end="121:18"><if pos:start="117:5" pos:end="121:18">if <condition pos:start="117:8" pos:end="119:51">(<expr pos:start="117:9" pos:end="119:50"><call pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:21">get_bits_left</name><argument_list pos:start="117:22" pos:end="117:26">(<argument pos:start="117:23" pos:end="117:25"><expr pos:start="117:23" pos:end="117:25"><operator pos:start="117:23" pos:end="117:23">&amp;</operator><name pos:start="117:24" pos:end="117:25">gb</name></expr></argument>)</argument_list></call> <operator pos:start="117:28" pos:end="117:28">&lt;</operator> <name pos:start="117:30" pos:end="117:40">vector_bits</name> <operator pos:start="117:42" pos:end="117:42">*</operator>

        <operator pos:start="119:9" pos:end="119:9">(</operator><name pos:start="119:10" pos:end="119:25"><name pos:start="119:10" pos:end="119:10">s</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:17">avctx</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:25">height</name></name><operator pos:start="119:26" pos:end="119:26">/</operator><literal type="number" pos:start="119:27" pos:end="119:27">4</literal><operator pos:start="119:28" pos:end="119:28">)</operator> <operator pos:start="119:30" pos:end="119:30">*</operator> <operator pos:start="119:32" pos:end="119:32">(</operator><name pos:start="119:33" pos:end="119:47"><name pos:start="119:33" pos:end="119:33">s</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:40">avctx</name><operator pos:start="119:41" pos:end="119:42">-&gt;</operator><name pos:start="119:43" pos:end="119:47">width</name></name><operator pos:start="119:48" pos:end="119:48">/</operator><literal type="number" pos:start="119:49" pos:end="119:49">4</literal><operator pos:start="119:50" pos:end="119:50">)</operator></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:18"><block_content pos:start="121:9" pos:end="121:18">

        <return pos:start="121:9" pos:end="121:18">return <expr pos:start="121:16" pos:end="121:17"><operator pos:start="121:16" pos:end="121:16">-</operator><literal type="number" pos:start="121:17" pos:end="121:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="125:5" pos:end="125:38">/* read vectors and build frame */</comment>

    <for pos:start="127:5" pos:end="183:5">for<control pos:start="127:8" pos:end="127:39">(<init pos:start="127:9" pos:end="127:12"><expr pos:start="127:9" pos:end="127:11"><name pos:start="127:9" pos:end="127:9">y</name><operator pos:start="127:10" pos:end="127:10">=</operator><literal type="number" pos:start="127:11" pos:end="127:11">0</literal></expr>;</init> <condition pos:start="127:14" pos:end="127:34"><expr pos:start="127:14" pos:end="127:33"><name pos:start="127:14" pos:end="127:14">y</name><operator pos:start="127:15" pos:end="127:15">&lt;</operator><name pos:start="127:16" pos:end="127:31"><name pos:start="127:16" pos:end="127:16">s</name><operator pos:start="127:17" pos:end="127:18">-&gt;</operator><name pos:start="127:19" pos:end="127:23">avctx</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:31">height</name></name><operator pos:start="127:32" pos:end="127:32">/</operator><literal type="number" pos:start="127:33" pos:end="127:33">4</literal></expr>;</condition> <incr pos:start="127:36" pos:end="127:38"><expr pos:start="127:36" pos:end="127:38"><name pos:start="127:36" pos:end="127:36">y</name><operator pos:start="127:37" pos:end="127:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="129:5" pos:end="183:5"><block_content pos:start="129:5" pos:end="183:5">

    <for pos:start="129:5" pos:end="183:5">for<control pos:start="129:8" pos:end="129:38">(<init pos:start="129:9" pos:end="129:12"><expr pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:9">x</name><operator pos:start="129:10" pos:end="129:10">=</operator><literal type="number" pos:start="129:11" pos:end="129:11">0</literal></expr>;</init> <condition pos:start="129:14" pos:end="129:33"><expr pos:start="129:14" pos:end="129:32"><name pos:start="129:14" pos:end="129:14">x</name><operator pos:start="129:15" pos:end="129:15">&lt;</operator><name pos:start="129:16" pos:end="129:30"><name pos:start="129:16" pos:end="129:16">s</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:23">avctx</name><operator pos:start="129:24" pos:end="129:25">-&gt;</operator><name pos:start="129:26" pos:end="129:30">width</name></name><operator pos:start="129:31" pos:end="129:31">/</operator><literal type="number" pos:start="129:32" pos:end="129:32">4</literal></expr>;</condition> <incr pos:start="129:35" pos:end="129:37"><expr pos:start="129:35" pos:end="129:37"><name pos:start="129:35" pos:end="129:35">x</name><operator pos:start="129:36" pos:end="129:37">++</operator></expr></incr>)</control> <block pos:start="129:40" pos:end="183:5">{<block_content pos:start="131:9" pos:end="181:37">

        <decl_stmt pos:start="131:9" pos:end="131:57"><decl pos:start="131:9" pos:end="131:56"><type pos:start="131:9" pos:end="131:20"><name pos:start="131:9" pos:end="131:16">unsigned</name> <name pos:start="131:18" pos:end="131:20">int</name></type> <name pos:start="131:22" pos:end="131:27">vector</name> <init pos:start="131:29" pos:end="131:56">= <expr pos:start="131:31" pos:end="131:56"><call pos:start="131:31" pos:end="131:56"><name pos:start="131:31" pos:end="131:38">get_bits</name><argument_list pos:start="131:39" pos:end="131:56">(<argument pos:start="131:40" pos:end="131:42"><expr pos:start="131:40" pos:end="131:42"><operator pos:start="131:40" pos:end="131:40">&amp;</operator><name pos:start="131:41" pos:end="131:42">gb</name></expr></argument>, <argument pos:start="131:45" pos:end="131:55"><expr pos:start="131:45" pos:end="131:55"><name pos:start="131:45" pos:end="131:55">vector_bits</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="133:9" pos:end="133:33"><decl pos:start="133:9" pos:end="133:32"><type pos:start="133:9" pos:end="133:29"><specifier pos:start="133:9" pos:end="133:13">const</specifier> <name pos:start="133:15" pos:end="133:22">unsigned</name> <name pos:start="133:24" pos:end="133:27">char</name> <modifier pos:start="133:29" pos:end="133:29">*</modifier></type><name pos:start="133:30" pos:end="133:32">src</name></decl>;</decl_stmt>

        <decl_stmt pos:start="135:9" pos:end="135:23"><decl pos:start="135:9" pos:end="135:22"><type pos:start="135:9" pos:end="135:11"><name pos:start="135:9" pos:end="135:11">int</name></type> <name pos:start="135:13" pos:end="135:22">src_stride</name></decl>;</decl_stmt>



        <if_stmt pos:start="139:9" pos:end="171:9"><if pos:start="139:9" pos:end="153:9">if <condition pos:start="139:12" pos:end="139:29">(<expr pos:start="139:13" pos:end="139:28"><name pos:start="139:13" pos:end="139:18">vector</name> <operator pos:start="139:20" pos:end="139:20">&lt;</operator> <name pos:start="139:22" pos:end="139:28">num_mvs</name></expr>)</condition> <block pos:start="139:31" pos:end="153:9">{<block_content pos:start="141:13" pos:end="151:25">

            <expr_stmt pos:start="141:13" pos:end="145:51"><expr pos:start="141:13" pos:end="145:50"><name pos:start="141:13" pos:end="141:15">src</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <name pos:start="141:19" pos:end="141:39"><name pos:start="141:19" pos:end="141:19">s</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:31">last_frame</name><operator pos:start="141:32" pos:end="141:32">.</operator><name pos:start="141:33" pos:end="141:36">data</name><index pos:start="141:37" pos:end="141:39">[<expr pos:start="141:38" pos:end="141:38"><literal type="number" pos:start="141:38" pos:end="141:38">0</literal></expr>]</index></name> <operator pos:start="141:41" pos:end="141:41">+</operator>

                  <operator pos:start="143:19" pos:end="143:19">(</operator><name pos:start="143:20" pos:end="143:20">y</name><operator pos:start="143:21" pos:end="143:21">*</operator><literal type="number" pos:start="143:22" pos:end="143:24">4</literal> <operator pos:start="143:24" pos:end="143:24">+</operator> <name pos:start="143:26" pos:end="143:50"><name pos:start="143:26" pos:end="143:26">s</name><operator pos:start="143:27" pos:end="143:28">-&gt;</operator><name pos:start="143:29" pos:end="143:39">mv_codebook</name><index pos:start="143:40" pos:end="143:47">[<expr pos:start="143:41" pos:end="143:46"><name pos:start="143:41" pos:end="143:46">vector</name></expr>]</index><index pos:start="143:48" pos:end="143:50">[<expr pos:start="143:49" pos:end="143:49"><literal type="number" pos:start="143:49" pos:end="143:49">1</literal></expr>]</index></name><operator pos:start="143:51" pos:end="143:51">)</operator><operator pos:start="143:52" pos:end="143:52">*</operator><name pos:start="143:53" pos:end="143:77"><name pos:start="143:53" pos:end="143:53">s</name><operator pos:start="143:54" pos:end="143:55">-&gt;</operator><name pos:start="143:56" pos:end="143:65">last_frame</name><operator pos:start="143:66" pos:end="143:66">.</operator><name pos:start="143:67" pos:end="143:74">linesize</name><index pos:start="143:75" pos:end="143:77">[<expr pos:start="143:76" pos:end="143:76"><literal type="number" pos:start="143:76" pos:end="143:76">0</literal></expr>]</index></name> <operator pos:start="143:79" pos:end="143:79">+</operator>

                   <name pos:start="145:20" pos:end="145:20">x</name><operator pos:start="145:21" pos:end="145:21">*</operator><literal type="number" pos:start="145:22" pos:end="145:24">4</literal> <operator pos:start="145:24" pos:end="145:24">+</operator> <name pos:start="145:26" pos:end="145:50"><name pos:start="145:26" pos:end="145:26">s</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:39">mv_codebook</name><index pos:start="145:40" pos:end="145:47">[<expr pos:start="145:41" pos:end="145:46"><name pos:start="145:41" pos:end="145:46">vector</name></expr>]</index><index pos:start="145:48" pos:end="145:50">[<expr pos:start="145:49" pos:end="145:49"><literal type="number" pos:start="145:49" pos:end="145:49">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:51"><expr pos:start="147:13" pos:end="147:50"><name pos:start="147:13" pos:end="147:22">src_stride</name> <operator pos:start="147:24" pos:end="147:24">=</operator> <name pos:start="147:26" pos:end="147:50"><name pos:start="147:26" pos:end="147:26">s</name><operator pos:start="147:27" pos:end="147:28">-&gt;</operator><name pos:start="147:29" pos:end="147:38">last_frame</name><operator pos:start="147:39" pos:end="147:39">.</operator><name pos:start="147:40" pos:end="147:47">linesize</name><index pos:start="147:48" pos:end="147:50">[<expr pos:start="147:49" pos:end="147:49"><literal type="number" pos:start="147:49" pos:end="147:49">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="149:13" pos:end="151:25"><if pos:start="149:13" pos:end="151:25">if <condition pos:start="149:16" pos:end="149:47">(<expr pos:start="149:17" pos:end="149:46"><name pos:start="149:17" pos:end="149:19">src</name><operator pos:start="149:20" pos:end="149:20">+</operator><literal type="number" pos:start="149:21" pos:end="149:21">3</literal><operator pos:start="149:22" pos:end="149:22">*</operator><name pos:start="149:23" pos:end="149:32">src_stride</name><operator pos:start="149:33" pos:end="149:33">+</operator><literal type="number" pos:start="149:34" pos:end="149:34">3</literal><operator pos:start="149:35" pos:end="149:36">&gt;=</operator><name pos:start="149:37" pos:end="149:46">frame0_end</name></expr>)</condition><block type="pseudo" pos:start="151:17" pos:end="151:25"><block_content pos:start="151:17" pos:end="151:25">

                <continue pos:start="151:17" pos:end="151:25">continue;</continue></block_content></block></if></if_stmt>

        </block_content>}</block></if><else pos:start="153:10" pos:end="171:9">else<block pos:start="153:14" pos:end="171:9">{<block_content pos:start="155:13" pos:end="169:27">

            <decl_stmt pos:start="155:13" pos:end="155:42"><decl pos:start="155:13" pos:end="155:41"><type pos:start="155:13" pos:end="155:15"><name pos:start="155:13" pos:end="155:15">int</name></type> <name pos:start="155:17" pos:end="155:22">offset</name> <init pos:start="155:24" pos:end="155:41">= <expr pos:start="155:26" pos:end="155:41"><name pos:start="155:26" pos:end="155:31">vector</name> <operator pos:start="155:33" pos:end="155:33">-</operator> <name pos:start="155:35" pos:end="155:41">num_mvs</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="157:13" pos:end="167:25"><if pos:start="157:13" pos:end="159:45">if <condition pos:start="157:16" pos:end="157:38">(<expr pos:start="157:17" pos:end="157:37"><name pos:start="157:17" pos:end="157:22">offset</name><operator pos:start="157:23" pos:end="157:23">&lt;</operator><name pos:start="157:24" pos:end="157:37">num_blocks_raw</name></expr>)</condition><block type="pseudo" pos:start="159:17" pos:end="159:45"><block_content pos:start="159:17" pos:end="159:45">

                <expr_stmt pos:start="159:17" pos:end="159:45"><expr pos:start="159:17" pos:end="159:44"><name pos:start="159:17" pos:end="159:19">src</name> <operator pos:start="159:21" pos:end="159:21">=</operator> <name pos:start="159:23" pos:end="159:32">blocks_raw</name> <operator pos:start="159:34" pos:end="159:34">+</operator> <literal type="number" pos:start="159:36" pos:end="159:37">16</literal><operator pos:start="159:38" pos:end="159:38">*</operator><name pos:start="159:39" pos:end="159:44">offset</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="161:13" pos:end="163:63">else if <condition pos:start="161:21" pos:end="161:61">(<expr pos:start="161:22" pos:end="161:60"><name pos:start="161:22" pos:end="161:27">offset</name><operator pos:start="161:28" pos:end="161:28">-</operator><name pos:start="161:29" pos:end="161:42">num_blocks_raw</name><operator pos:start="161:43" pos:end="161:43">&lt;</operator><name pos:start="161:44" pos:end="161:60">num_blocks_packed</name></expr>)</condition><block type="pseudo" pos:start="163:17" pos:end="163:63"><block_content pos:start="163:17" pos:end="163:63">

                <expr_stmt pos:start="163:17" pos:end="163:63"><expr pos:start="163:17" pos:end="163:62"><name pos:start="163:17" pos:end="163:19">src</name> <operator pos:start="163:21" pos:end="163:21">=</operator> <name pos:start="163:23" pos:end="163:62"><name pos:start="163:23" pos:end="163:23">s</name><operator pos:start="163:24" pos:end="163:25">-&gt;</operator><name pos:start="163:26" pos:end="163:39">block_codebook</name><index pos:start="163:40" pos:end="163:62">[<expr pos:start="163:41" pos:end="163:61"><name pos:start="163:41" pos:end="163:46">offset</name><operator pos:start="163:47" pos:end="163:47">-</operator><name pos:start="163:48" pos:end="163:61">num_blocks_raw</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="165:13" pos:end="167:25">else<block type="pseudo" pos:start="167:17" pos:end="167:25"><block_content pos:start="167:17" pos:end="167:25">

                <continue pos:start="167:17" pos:end="167:25">continue;</continue></block_content></block></else></if_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:27"><expr pos:start="169:13" pos:end="169:26"><name pos:start="169:13" pos:end="169:22">src_stride</name> <operator pos:start="169:24" pos:end="169:24">=</operator> <literal type="number" pos:start="169:26" pos:end="169:26">4</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <for pos:start="175:9" pos:end="181:37">for<control pos:start="175:12" pos:end="175:26">(<init pos:start="175:13" pos:end="175:16"><expr pos:start="175:13" pos:end="175:15"><name pos:start="175:13" pos:end="175:13">j</name><operator pos:start="175:14" pos:end="175:14">=</operator><literal type="number" pos:start="175:15" pos:end="175:15">0</literal></expr>;</init> <condition pos:start="175:18" pos:end="175:21"><expr pos:start="175:18" pos:end="175:20"><name pos:start="175:18" pos:end="175:18">j</name><operator pos:start="175:19" pos:end="175:19">&lt;</operator><literal type="number" pos:start="175:20" pos:end="175:20">4</literal></expr>;</condition> <incr pos:start="175:23" pos:end="175:25"><expr pos:start="175:23" pos:end="175:25"><name pos:start="175:23" pos:end="175:23">j</name><operator pos:start="175:24" pos:end="175:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="177:9" pos:end="181:37"><block_content pos:start="177:9" pos:end="181:37">

        <for pos:start="177:9" pos:end="181:37">for<control pos:start="177:12" pos:end="177:26">(<init pos:start="177:13" pos:end="177:16"><expr pos:start="177:13" pos:end="177:15"><name pos:start="177:13" pos:end="177:13">i</name><operator pos:start="177:14" pos:end="177:14">=</operator><literal type="number" pos:start="177:15" pos:end="177:15">0</literal></expr>;</init> <condition pos:start="177:18" pos:end="177:21"><expr pos:start="177:18" pos:end="177:20"><name pos:start="177:18" pos:end="177:18">i</name><operator pos:start="177:19" pos:end="177:19">&lt;</operator><literal type="number" pos:start="177:20" pos:end="177:20">4</literal></expr>;</condition> <incr pos:start="177:23" pos:end="177:25"><expr pos:start="177:23" pos:end="177:25"><name pos:start="177:23" pos:end="177:23">i</name><operator pos:start="177:24" pos:end="177:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="179:13" pos:end="181:37"><block_content pos:start="179:13" pos:end="181:37">

            <expr_stmt pos:start="179:13" pos:end="181:37"><expr pos:start="179:13" pos:end="181:36"><name pos:start="179:13" pos:end="179:71"><name pos:start="179:13" pos:end="179:13">s</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:20">frame</name><operator pos:start="179:21" pos:end="179:21">.</operator><name pos:start="179:22" pos:end="179:25">data</name><index pos:start="179:26" pos:end="179:28">[<expr pos:start="179:27" pos:end="179:27"><literal type="number" pos:start="179:27" pos:end="179:27">0</literal></expr>]</index><index pos:start="179:29" pos:end="179:71">[ <expr pos:start="179:31" pos:end="179:68"><operator pos:start="179:31" pos:end="179:31">(</operator><name pos:start="179:32" pos:end="179:32">y</name><operator pos:start="179:33" pos:end="179:33">*</operator><literal type="number" pos:start="179:34" pos:end="179:35">4</literal><operator pos:start="179:35" pos:end="179:35">+</operator><name pos:start="179:36" pos:end="179:36">j</name><operator pos:start="179:37" pos:end="179:37">)</operator><operator pos:start="179:38" pos:end="179:38">*</operator><name pos:start="179:39" pos:end="179:58"><name pos:start="179:39" pos:end="179:39">s</name><operator pos:start="179:40" pos:end="179:41">-&gt;</operator><name pos:start="179:42" pos:end="179:46">frame</name><operator pos:start="179:47" pos:end="179:47">.</operator><name pos:start="179:48" pos:end="179:55">linesize</name><index pos:start="179:56" pos:end="179:58">[<expr pos:start="179:57" pos:end="179:57"><literal type="number" pos:start="179:57" pos:end="179:57">0</literal></expr>]</index></name> <operator pos:start="179:60" pos:end="179:60">+</operator> <operator pos:start="179:62" pos:end="179:62">(</operator><name pos:start="179:63" pos:end="179:63">x</name><operator pos:start="179:64" pos:end="179:64">*</operator><literal type="number" pos:start="179:65" pos:end="179:66">4</literal><operator pos:start="179:66" pos:end="179:66">+</operator><name pos:start="179:67" pos:end="179:67">i</name><operator pos:start="179:68" pos:end="179:68">)</operator></expr>  ]</index></name> <operator pos:start="179:73" pos:end="179:73">=</operator>

               <name pos:start="181:16" pos:end="181:36"><name pos:start="181:16" pos:end="181:18">src</name><index pos:start="181:19" pos:end="181:36">[<expr pos:start="181:20" pos:end="181:35"><name pos:start="181:20" pos:end="181:20">j</name><operator pos:start="181:21" pos:end="181:21">*</operator><name pos:start="181:22" pos:end="181:31">src_stride</name> <operator pos:start="181:33" pos:end="181:33">+</operator> <name pos:start="181:35" pos:end="181:35">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

    </block_content>}</block></for></block_content></block></for>



    <return pos:start="187:5" pos:end="187:13">return <expr pos:start="187:12" pos:end="187:12"><literal type="number" pos:start="187:12" pos:end="187:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
