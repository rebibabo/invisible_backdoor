<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/654.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">ff_ccitt_unpack</name><parameter_list pos:start="1:20" pos:end="7:51">(<parameter pos:start="1:21" pos:end="1:41"><decl pos:start="1:21" pos:end="1:41"><type pos:start="1:21" pos:end="1:41"><name pos:start="1:21" pos:end="1:34">AVCodecContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:41">avctx</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:38"><decl pos:start="3:21" pos:end="3:38"><type pos:start="3:21" pos:end="3:38"><specifier pos:start="3:21" pos:end="3:25">const</specifier> <name pos:start="3:27" pos:end="3:33">uint8_t</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:38">src</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:51"><decl pos:start="3:41" pos:end="3:51"><type pos:start="3:41" pos:end="3:51"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:51">srcsize</name></decl></parameter>,

                    <parameter pos:start="5:21" pos:end="5:32"><decl pos:start="5:21" pos:end="5:32"><type pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:27">uint8_t</name> <modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:32">dst</name></decl></parameter>, <parameter pos:start="5:35" pos:end="5:44"><decl pos:start="5:35" pos:end="5:44"><type pos:start="5:35" pos:end="5:44"><name pos:start="5:35" pos:end="5:37">int</name></type> <name pos:start="5:39" pos:end="5:44">height</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:56"><decl pos:start="5:47" pos:end="5:56"><type pos:start="5:47" pos:end="5:56"><name pos:start="5:47" pos:end="5:49">int</name></type> <name pos:start="5:51" pos:end="5:56">stride</name></decl></parameter>,

                    <parameter pos:start="7:21" pos:end="7:40"><decl pos:start="7:21" pos:end="7:40"><type pos:start="7:21" pos:end="7:40"><name pos:start="7:21" pos:end="7:34"><name pos:start="7:21" pos:end="7:24">enum</name> <name pos:start="7:26" pos:end="7:34">TiffCompr</name></name></type> <name pos:start="7:36" pos:end="7:40">compr</name></decl></parameter>, <parameter pos:start="7:43" pos:end="7:50"><decl pos:start="7:43" pos:end="7:50"><type pos:start="7:43" pos:end="7:50"><name pos:start="7:43" pos:end="7:45">int</name></type> <name pos:start="7:47" pos:end="7:50">opts</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="97:1">{<block_content pos:start="11:5" pos:end="95:13">

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">GetBitContext</name></type> <name pos:start="13:19" pos:end="13:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:7">int</name> <modifier pos:start="15:9" pos:end="15:9">*</modifier></type><name pos:start="15:10" pos:end="15:13">runs</name></decl>, <decl pos:start="15:16" pos:end="15:19"><type ref="prev" pos:start="15:5" pos:end="15:9"><modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:19">ref</name></decl>, <decl pos:start="15:22" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:9"><modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:28">runend</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:34"><decl pos:start="19:5" pos:end="19:33"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:15">runsize</name><init pos:start="19:16" pos:end="19:33">= <expr pos:start="19:18" pos:end="19:33"><name pos:start="19:18" pos:end="19:29"><name pos:start="19:18" pos:end="19:22">avctx</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:29">width</name></name> <operator pos:start="19:31" pos:end="19:31">+</operator> <literal type="number" pos:start="19:33" pos:end="19:33">2</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:48"><expr pos:start="23:5" pos:end="23:47"><name pos:start="23:5" pos:end="23:8">runs</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:47"><name pos:start="23:12" pos:end="23:20">av_malloc</name><argument_list pos:start="23:21" pos:end="23:47">(<argument pos:start="23:22" pos:end="23:46"><expr pos:start="23:22" pos:end="23:46"><name pos:start="23:22" pos:end="23:28">runsize</name> <operator pos:start="23:30" pos:end="23:30">*</operator> <sizeof pos:start="23:32" pos:end="23:46">sizeof<argument_list pos:start="23:38" pos:end="23:46">(<argument pos:start="23:39" pos:end="23:45"><expr pos:start="23:39" pos:end="23:45"><name pos:start="23:39" pos:end="23:45"><name pos:start="23:39" pos:end="23:42">runs</name><index pos:start="23:43" pos:end="23:45">[<expr pos:start="23:44" pos:end="23:44"><literal type="number" pos:start="23:44" pos:end="23:44">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:7">ref</name>  <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:46"><name pos:start="25:12" pos:end="25:20">av_malloc</name><argument_list pos:start="25:21" pos:end="25:46">(<argument pos:start="25:22" pos:end="25:45"><expr pos:start="25:22" pos:end="25:45"><name pos:start="25:22" pos:end="25:28">runsize</name> <operator pos:start="25:30" pos:end="25:30">*</operator> <sizeof pos:start="25:32" pos:end="25:45">sizeof<argument_list pos:start="25:38" pos:end="25:45">(<argument pos:start="25:39" pos:end="25:44"><expr pos:start="25:39" pos:end="25:44"><name pos:start="25:39" pos:end="25:44"><name pos:start="25:39" pos:end="25:41">ref</name><index pos:start="25:42" pos:end="25:44">[<expr pos:start="25:43" pos:end="25:43"><literal type="number" pos:start="25:43" pos:end="25:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:26"><expr pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:7">ref</name><index pos:start="27:8" pos:end="27:10">[<expr pos:start="27:9" pos:end="27:9"><literal type="number" pos:start="27:9" pos:end="27:9">0</literal></expr>]</index></name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:25"><name pos:start="27:14" pos:end="27:18">avctx</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:25">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:15"><expr pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:7">ref</name><index pos:start="29:8" pos:end="29:10">[<expr pos:start="29:9" pos:end="29:9"><literal type="number" pos:start="29:9" pos:end="29:9">1</literal></expr>]</index></name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:15"><expr pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:7">ref</name><index pos:start="31:8" pos:end="31:10">[<expr pos:start="31:9" pos:end="31:9"><literal type="number" pos:start="31:9" pos:end="31:9">2</literal></expr>]</index></name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><call pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:17">init_get_bits</name><argument_list pos:start="33:18" pos:end="33:38">(<argument pos:start="33:19" pos:end="33:21"><expr pos:start="33:19" pos:end="33:21"><operator pos:start="33:19" pos:end="33:19">&amp;</operator><name pos:start="33:20" pos:end="33:21">gb</name></expr></argument>, <argument pos:start="33:24" pos:end="33:26"><expr pos:start="33:24" pos:end="33:26"><name pos:start="33:24" pos:end="33:26">src</name></expr></argument>, <argument pos:start="33:29" pos:end="33:37"><expr pos:start="33:29" pos:end="33:37"><name pos:start="33:29" pos:end="33:35">srcsize</name><operator pos:start="33:36" pos:end="33:36">*</operator><literal type="number" pos:start="33:37" pos:end="33:37">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="89:5">for<control pos:start="35:8" pos:end="35:31">(<init pos:start="35:9" pos:end="35:14"><expr pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:9">j</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <literal type="number" pos:start="35:13" pos:end="35:13">0</literal></expr>;</init> <condition pos:start="35:16" pos:end="35:26"><expr pos:start="35:16" pos:end="35:25"><name pos:start="35:16" pos:end="35:16">j</name> <operator pos:start="35:18" pos:end="35:18">&lt;</operator> <name pos:start="35:20" pos:end="35:25">height</name></expr>;</condition> <incr pos:start="35:28" pos:end="35:30"><expr pos:start="35:28" pos:end="35:30"><name pos:start="35:28" pos:end="35:28">j</name><operator pos:start="35:29" pos:end="35:30">++</operator></expr></incr>)</control><block pos:start="35:32" pos:end="89:5">{<block_content pos:start="37:9" pos:end="87:22">

        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:14">runend</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:21">runs</name> <operator pos:start="37:23" pos:end="37:23">+</operator> <name pos:start="37:25" pos:end="37:31">runsize</name></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="73:9"><if pos:start="39:9" pos:end="53:9">if<condition pos:start="39:11" pos:end="39:28">(<expr pos:start="39:12" pos:end="39:27"><name pos:start="39:12" pos:end="39:16">compr</name> <operator pos:start="39:18" pos:end="39:19">==</operator> <name pos:start="39:21" pos:end="39:27">TIFF_G4</name></expr>)</condition><block pos:start="39:29" pos:end="53:9">{<block_content pos:start="41:13" pos:end="51:13">

            <expr_stmt pos:start="41:13" pos:end="41:85"><expr pos:start="41:13" pos:end="41:84"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:84"><name pos:start="41:19" pos:end="41:39">decode_group3_2d_line</name><argument_list pos:start="41:40" pos:end="41:84">(<argument pos:start="41:41" pos:end="41:45"><expr pos:start="41:41" pos:end="41:45"><name pos:start="41:41" pos:end="41:45">avctx</name></expr></argument>, <argument pos:start="41:48" pos:end="41:50"><expr pos:start="41:48" pos:end="41:50"><operator pos:start="41:48" pos:end="41:48">&amp;</operator><name pos:start="41:49" pos:end="41:50">gb</name></expr></argument>, <argument pos:start="41:53" pos:end="41:64"><expr pos:start="41:53" pos:end="41:64"><name pos:start="41:53" pos:end="41:64"><name pos:start="41:53" pos:end="41:57">avctx</name><operator pos:start="41:58" pos:end="41:59">-&gt;</operator><name pos:start="41:60" pos:end="41:64">width</name></name></expr></argument>, <argument pos:start="41:67" pos:end="41:70"><expr pos:start="41:67" pos:end="41:70"><name pos:start="41:67" pos:end="41:70">runs</name></expr></argument>, <argument pos:start="41:73" pos:end="41:78"><expr pos:start="41:73" pos:end="41:78"><name pos:start="41:73" pos:end="41:78">runend</name></expr></argument>, <argument pos:start="41:81" pos:end="41:83"><expr pos:start="41:81" pos:end="41:83"><name pos:start="41:81" pos:end="41:83">ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="51:13"><if pos:start="43:13" pos:end="51:13">if<condition pos:start="43:15" pos:end="43:23">(<expr pos:start="43:16" pos:end="43:22"><name pos:start="43:16" pos:end="43:18">ret</name> <operator pos:start="43:20" pos:end="43:20">&lt;</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>)</condition><block pos:start="43:24" pos:end="51:13">{<block_content pos:start="45:17" pos:end="49:26">

                <expr_stmt pos:start="45:17" pos:end="45:30"><expr pos:start="45:17" pos:end="45:29"><call pos:start="45:17" pos:end="45:29"><name pos:start="45:17" pos:end="45:23">av_free</name><argument_list pos:start="45:24" pos:end="45:29">(<argument pos:start="45:25" pos:end="45:28"><expr pos:start="45:25" pos:end="45:28"><name pos:start="45:25" pos:end="45:28">runs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:29"><expr pos:start="47:17" pos:end="47:28"><call pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:23">av_free</name><argument_list pos:start="47:24" pos:end="47:28">(<argument pos:start="47:25" pos:end="47:27"><expr pos:start="47:25" pos:end="47:27"><name pos:start="47:25" pos:end="47:27">ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="49:17" pos:end="49:26">return <expr pos:start="49:24" pos:end="49:25"><operator pos:start="49:24" pos:end="49:24">-</operator><literal type="number" pos:start="49:25" pos:end="49:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if><else pos:start="53:10" pos:end="73:9">else<block pos:start="53:14" pos:end="73:9">{<block_content pos:start="55:13" pos:end="71:36">

            <decl_stmt pos:start="55:13" pos:end="55:57"><decl pos:start="55:13" pos:end="55:56"><type pos:start="55:13" pos:end="55:15"><name pos:start="55:13" pos:end="55:15">int</name></type> <name pos:start="55:17" pos:end="55:20">g3d1</name> <init pos:start="55:22" pos:end="55:56">= <expr pos:start="55:24" pos:end="55:56"><operator pos:start="55:24" pos:end="55:24">(</operator><name pos:start="55:25" pos:end="55:29">compr</name> <operator pos:start="55:31" pos:end="55:32">==</operator> <name pos:start="55:34" pos:end="55:40">TIFF_G3</name><operator pos:start="55:41" pos:end="55:41">)</operator> <operator pos:start="55:43" pos:end="55:44">&amp;&amp;</operator> <operator pos:start="55:46" pos:end="55:46">!</operator><operator pos:start="55:47" pos:end="55:47">(</operator><name pos:start="55:48" pos:end="55:51">opts</name> <operator pos:start="55:53" pos:end="55:53">&amp;</operator> <literal type="number" pos:start="55:55" pos:end="55:55">1</literal><operator pos:start="55:56" pos:end="55:56">)</operator></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="57:13" pos:end="59:22"><if pos:start="57:13" pos:end="59:22">if<condition pos:start="57:15" pos:end="57:83">(<expr pos:start="57:16" pos:end="57:82"><name pos:start="57:16" pos:end="57:20">compr</name><operator pos:start="57:21" pos:end="57:22">!=</operator><name pos:start="57:23" pos:end="57:36">TIFF_CCITT_RLE</name> <operator pos:start="57:38" pos:end="57:39">&amp;&amp;</operator> <call pos:start="57:41" pos:end="57:78"><name pos:start="57:41" pos:end="57:62">find_group3_syncmarker</name><argument_list pos:start="57:63" pos:end="57:78">(<argument pos:start="57:64" pos:end="57:66"><expr pos:start="57:64" pos:end="57:66"><operator pos:start="57:64" pos:end="57:64">&amp;</operator><name pos:start="57:65" pos:end="57:66">gb</name></expr></argument>, <argument pos:start="57:69" pos:end="57:77"><expr pos:start="57:69" pos:end="57:77"><name pos:start="57:69" pos:end="57:75">srcsize</name><operator pos:start="57:76" pos:end="57:76">*</operator><literal type="number" pos:start="57:77" pos:end="57:77">8</literal></expr></argument>)</argument_list></call> <operator pos:start="57:80" pos:end="57:80">&lt;</operator> <literal type="number" pos:start="57:82" pos:end="57:82">0</literal></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:22"><block_content pos:start="59:17" pos:end="59:22">

                <break pos:start="59:17" pos:end="59:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="61:13" pos:end="67:89"><if pos:start="61:13" pos:end="63:84">if<condition pos:start="61:15" pos:end="61:63">(<expr pos:start="61:16" pos:end="61:62"><name pos:start="61:16" pos:end="61:20">compr</name><operator pos:start="61:21" pos:end="61:22">==</operator><name pos:start="61:23" pos:end="61:36">TIFF_CCITT_RLE</name> <operator pos:start="61:38" pos:end="61:39">||</operator> <name pos:start="61:41" pos:end="61:44">g3d1</name> <operator pos:start="61:46" pos:end="61:47">||</operator> <call pos:start="61:49" pos:end="61:62"><name pos:start="61:49" pos:end="61:57">get_bits1</name><argument_list pos:start="61:58" pos:end="61:62">(<argument pos:start="61:59" pos:end="61:61"><expr pos:start="61:59" pos:end="61:61"><operator pos:start="61:59" pos:end="61:59">&amp;</operator><name pos:start="61:60" pos:end="61:61">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:84"><block_content pos:start="63:17" pos:end="63:84">

                <expr_stmt pos:start="63:17" pos:end="63:84"><expr pos:start="63:17" pos:end="63:83"><name pos:start="63:17" pos:end="63:19">ret</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <call pos:start="63:23" pos:end="63:83"><name pos:start="63:23" pos:end="63:43">decode_group3_1d_line</name><argument_list pos:start="63:44" pos:end="63:83">(<argument pos:start="63:45" pos:end="63:49"><expr pos:start="63:45" pos:end="63:49"><name pos:start="63:45" pos:end="63:49">avctx</name></expr></argument>, <argument pos:start="63:52" pos:end="63:54"><expr pos:start="63:52" pos:end="63:54"><operator pos:start="63:52" pos:end="63:52">&amp;</operator><name pos:start="63:53" pos:end="63:54">gb</name></expr></argument>, <argument pos:start="63:57" pos:end="63:68"><expr pos:start="63:57" pos:end="63:68"><name pos:start="63:57" pos:end="63:68"><name pos:start="63:57" pos:end="63:61">avctx</name><operator pos:start="63:62" pos:end="63:63">-&gt;</operator><name pos:start="63:64" pos:end="63:68">width</name></name></expr></argument>, <argument pos:start="63:71" pos:end="63:74"><expr pos:start="63:71" pos:end="63:74"><name pos:start="63:71" pos:end="63:74">runs</name></expr></argument>, <argument pos:start="63:77" pos:end="63:82"><expr pos:start="63:77" pos:end="63:82"><name pos:start="63:77" pos:end="63:82">runend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="65:13" pos:end="67:89">else<block type="pseudo" pos:start="67:17" pos:end="67:89"><block_content pos:start="67:17" pos:end="67:89">

                <expr_stmt pos:start="67:17" pos:end="67:89"><expr pos:start="67:17" pos:end="67:88"><name pos:start="67:17" pos:end="67:19">ret</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <call pos:start="67:23" pos:end="67:88"><name pos:start="67:23" pos:end="67:43">decode_group3_2d_line</name><argument_list pos:start="67:44" pos:end="67:88">(<argument pos:start="67:45" pos:end="67:49"><expr pos:start="67:45" pos:end="67:49"><name pos:start="67:45" pos:end="67:49">avctx</name></expr></argument>, <argument pos:start="67:52" pos:end="67:54"><expr pos:start="67:52" pos:end="67:54"><operator pos:start="67:52" pos:end="67:52">&amp;</operator><name pos:start="67:53" pos:end="67:54">gb</name></expr></argument>, <argument pos:start="67:57" pos:end="67:68"><expr pos:start="67:57" pos:end="67:68"><name pos:start="67:57" pos:end="67:68"><name pos:start="67:57" pos:end="67:61">avctx</name><operator pos:start="67:62" pos:end="67:63">-&gt;</operator><name pos:start="67:64" pos:end="67:68">width</name></name></expr></argument>, <argument pos:start="67:71" pos:end="67:74"><expr pos:start="67:71" pos:end="67:74"><name pos:start="67:71" pos:end="67:74">runs</name></expr></argument>, <argument pos:start="67:77" pos:end="67:82"><expr pos:start="67:77" pos:end="67:82"><name pos:start="67:77" pos:end="67:82">runend</name></expr></argument>, <argument pos:start="67:85" pos:end="67:87"><expr pos:start="67:85" pos:end="67:87"><name pos:start="67:85" pos:end="67:87">ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="69:13" pos:end="71:36"><if pos:start="69:13" pos:end="71:36">if<condition pos:start="69:15" pos:end="69:37">(<expr pos:start="69:16" pos:end="69:36"><name pos:start="69:16" pos:end="69:20">compr</name><operator pos:start="69:21" pos:end="69:22">==</operator><name pos:start="69:23" pos:end="69:36">TIFF_CCITT_RLE</name></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:36"><block_content pos:start="71:17" pos:end="71:36">

                <expr_stmt pos:start="71:17" pos:end="71:36"><expr pos:start="71:17" pos:end="71:35"><call pos:start="71:17" pos:end="71:35"><name pos:start="71:17" pos:end="71:30">align_get_bits</name><argument_list pos:start="71:31" pos:end="71:35">(<argument pos:start="71:32" pos:end="71:34"><expr pos:start="71:32" pos:end="71:34"><operator pos:start="71:32" pos:end="71:32">&amp;</operator><name pos:start="71:33" pos:end="71:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="75:9" pos:end="85:9"><if pos:start="75:9" pos:end="79:9">if<condition pos:start="75:11" pos:end="75:19">(<expr pos:start="75:12" pos:end="75:18"><name pos:start="75:12" pos:end="75:14">ret</name> <operator pos:start="75:16" pos:end="75:16">&lt;</operator> <literal type="number" pos:start="75:18" pos:end="75:18">0</literal></expr>)</condition><block pos:start="75:20" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:53">

            <expr_stmt pos:start="77:13" pos:end="77:53"><expr pos:start="77:13" pos:end="77:52"><call pos:start="77:13" pos:end="77:52"><name pos:start="77:13" pos:end="77:20">put_line</name><argument_list pos:start="77:21" pos:end="77:52">(<argument pos:start="77:22" pos:end="77:24"><expr pos:start="77:22" pos:end="77:24"><name pos:start="77:22" pos:end="77:24">dst</name></expr></argument>, <argument pos:start="77:27" pos:end="77:32"><expr pos:start="77:27" pos:end="77:32"><name pos:start="77:27" pos:end="77:32">stride</name></expr></argument>, <argument pos:start="77:35" pos:end="77:46"><expr pos:start="77:35" pos:end="77:46"><name pos:start="77:35" pos:end="77:46"><name pos:start="77:35" pos:end="77:39">avctx</name><operator pos:start="77:40" pos:end="77:41">-&gt;</operator><name pos:start="77:42" pos:end="77:46">width</name></name></expr></argument>, <argument pos:start="77:49" pos:end="77:51"><expr pos:start="77:49" pos:end="77:51"><name pos:start="77:49" pos:end="77:51">ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="79:10" pos:end="85:9">else<block pos:start="79:14" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:36">

            <expr_stmt pos:start="81:13" pos:end="81:54"><expr pos:start="81:13" pos:end="81:53"><call pos:start="81:13" pos:end="81:53"><name pos:start="81:13" pos:end="81:20">put_line</name><argument_list pos:start="81:21" pos:end="81:53">(<argument pos:start="81:22" pos:end="81:24"><expr pos:start="81:22" pos:end="81:24"><name pos:start="81:22" pos:end="81:24">dst</name></expr></argument>, <argument pos:start="81:27" pos:end="81:32"><expr pos:start="81:27" pos:end="81:32"><name pos:start="81:27" pos:end="81:32">stride</name></expr></argument>, <argument pos:start="81:35" pos:end="81:46"><expr pos:start="81:35" pos:end="81:46"><name pos:start="81:35" pos:end="81:46"><name pos:start="81:35" pos:end="81:39">avctx</name><operator pos:start="81:40" pos:end="81:41">-&gt;</operator><name pos:start="81:42" pos:end="81:46">width</name></name></expr></argument>, <argument pos:start="81:49" pos:end="81:52"><expr pos:start="81:49" pos:end="81:52"><name pos:start="81:49" pos:end="81:52">runs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:36"><expr pos:start="83:13" pos:end="83:35"><call pos:start="83:13" pos:end="83:35"><name pos:start="83:13" pos:end="83:18">FFSWAP</name><argument_list pos:start="83:19" pos:end="83:35">(<argument pos:start="83:20" pos:end="83:23"><expr pos:start="83:20" pos:end="83:23"><name pos:start="83:20" pos:end="83:22">int</name><operator pos:start="83:23" pos:end="83:23">*</operator></expr></argument>, <argument pos:start="83:26" pos:end="83:29"><expr pos:start="83:26" pos:end="83:29"><name pos:start="83:26" pos:end="83:29">runs</name></expr></argument>, <argument pos:start="83:32" pos:end="83:34"><expr pos:start="83:32" pos:end="83:34"><name pos:start="83:32" pos:end="83:34">ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:22"><expr pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:11">dst</name> <operator pos:start="87:13" pos:end="87:14">+=</operator> <name pos:start="87:16" pos:end="87:21">stride</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="91:5" pos:end="91:18"><expr pos:start="91:5" pos:end="91:17"><call pos:start="91:5" pos:end="91:17"><name pos:start="91:5" pos:end="91:11">av_free</name><argument_list pos:start="91:12" pos:end="91:17">(<argument pos:start="91:13" pos:end="91:16"><expr pos:start="91:13" pos:end="91:16"><name pos:start="91:13" pos:end="91:16">runs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:17"><expr pos:start="93:5" pos:end="93:16"><call pos:start="93:5" pos:end="93:16"><name pos:start="93:5" pos:end="93:11">av_free</name><argument_list pos:start="93:12" pos:end="93:16">(<argument pos:start="93:13" pos:end="93:15"><expr pos:start="93:13" pos:end="93:15"><name pos:start="93:13" pos:end="93:15">ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
