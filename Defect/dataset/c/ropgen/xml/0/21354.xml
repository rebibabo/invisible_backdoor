<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21354.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">pc_dimm_realize</name><parameter_list pos:start="1:28" pos:end="1:59">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:39">DeviceState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">dev</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:51">Error</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier><modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:5">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">PCDIMMDevice</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">dimm</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><call pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:32">PC_DIMM</name><argument_list pos:start="5:33" pos:end="5:37">(<argument pos:start="5:34" pos:end="5:36"><expr pos:start="5:34" pos:end="5:36"><name pos:start="5:34" pos:end="5:36">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:23">(<expr pos:start="9:9" pos:end="9:22"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:22"><name pos:start="9:10" pos:end="9:13">dimm</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:22">hostmem</name></name></expr>)</condition> <block pos:start="9:25" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:15">

        <expr_stmt pos:start="11:9" pos:end="11:74"><expr pos:start="11:9" pos:end="11:73"><call pos:start="11:9" pos:end="11:73"><name pos:start="11:9" pos:end="11:18">error_setg</name><argument_list pos:start="11:19" pos:end="11:73">(<argument pos:start="11:20" pos:end="11:23"><expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">errp</name></expr></argument>, <argument pos:start="11:26" pos:end="11:72"><expr pos:start="11:26" pos:end="11:72"><literal type="string" pos:start="11:26" pos:end="11:28">"'"</literal> <name pos:start="11:30" pos:end="11:48">PC_DIMM_MEMDEV_PROP</name> <literal type="string" pos:start="11:50" pos:end="11:72">"' property is not set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="17:36">(<expr pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:12">dimm</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:18">node</name></name> <operator pos:start="17:20" pos:end="17:21">&gt;=</operator> <name pos:start="17:23" pos:end="17:35">nb_numa_nodes</name></expr>)</condition> <block pos:start="17:38" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:15">

        <expr_stmt pos:start="19:9" pos:end="23:46"><expr pos:start="19:9" pos:end="23:45"><call pos:start="19:9" pos:end="23:45"><name pos:start="19:9" pos:end="19:18">error_setg</name><argument_list pos:start="19:19" pos:end="23:45">(<argument pos:start="19:20" pos:end="19:23"><expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">errp</name></expr></argument>, <argument pos:start="19:26" pos:end="21:72"><expr pos:start="19:26" pos:end="21:72"><literal type="string" pos:start="19:26" pos:end="19:42">"'DIMM property "</literal> <name pos:start="19:44" pos:end="19:60">PC_DIMM_NODE_PROP</name> <literal type="string" pos:start="19:62" pos:end="19:75">" has value %"</literal>

                   <name pos:start="21:20" pos:end="21:25">PRIu32</name> <literal type="string" pos:start="21:27" pos:end="21:72">"' which exceeds the number of numa nodes: %d"</literal></expr></argument>,

                   <argument pos:start="23:20" pos:end="23:29"><expr pos:start="23:20" pos:end="23:29"><name pos:start="23:20" pos:end="23:29"><name pos:start="23:20" pos:end="23:23">dimm</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:29">node</name></name></expr></argument>, <argument pos:start="23:32" pos:end="23:44"><expr pos:start="23:32" pos:end="23:44"><name pos:start="23:32" pos:end="23:44">nb_numa_nodes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
