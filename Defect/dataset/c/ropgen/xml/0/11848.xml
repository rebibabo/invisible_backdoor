<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11848.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">tcx_init</name><parameter_list pos:start="1:21" pos:end="3:43">(<parameter pos:start="1:22" pos:end="1:32"><decl pos:start="1:22" pos:end="1:32"><type pos:start="1:22" pos:end="1:32"><name pos:start="1:22" pos:end="1:27">hwaddr</name></type> <name pos:start="1:29" pos:end="1:32">addr</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:42">qemu_irq</name></type> <name pos:start="1:44" pos:end="1:46">irq</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:61">vram_size</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:72"><decl pos:start="1:64" pos:end="1:72"><type pos:start="1:64" pos:end="1:72"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:72">width</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:31"><decl pos:start="3:22" pos:end="3:31"><type pos:start="3:22" pos:end="3:31"><name pos:start="3:22" pos:end="3:24">int</name></type> <name pos:start="3:26" pos:end="3:31">height</name></decl></parameter>, <parameter pos:start="3:34" pos:end="3:42"><decl pos:start="3:34" pos:end="3:42"><type pos:start="3:34" pos:end="3:42"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:42">depth</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:34">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">SysBusDevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:40"><expr pos:start="13:5" pos:end="13:39"><name pos:start="13:5" pos:end="13:7">dev</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:39"><name pos:start="13:11" pos:end="13:21">qdev_create</name><argument_list pos:start="13:22" pos:end="13:39">(<argument pos:start="13:23" pos:end="13:26"><expr pos:start="13:23" pos:end="13:26"><name pos:start="13:23" pos:end="13:26">NULL</name></expr></argument>, <argument pos:start="13:29" pos:end="13:38"><expr pos:start="13:29" pos:end="13:38"><literal type="string" pos:start="13:29" pos:end="13:38">"SUNW,tcx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:54"><expr pos:start="15:5" pos:end="15:53"><call pos:start="15:5" pos:end="15:53"><name pos:start="15:5" pos:end="15:24">qdev_prop_set_uint32</name><argument_list pos:start="15:25" pos:end="15:53">(<argument pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><name pos:start="15:26" pos:end="15:28">dev</name></expr></argument>, <argument pos:start="15:31" pos:end="15:41"><expr pos:start="15:31" pos:end="15:41"><literal type="string" pos:start="15:31" pos:end="15:41">"vram_size"</literal></expr></argument>, <argument pos:start="15:44" pos:end="15:52"><expr pos:start="15:44" pos:end="15:52"><name pos:start="15:44" pos:end="15:52">vram_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><call pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:24">qdev_prop_set_uint16</name><argument_list pos:start="17:25" pos:end="17:45">(<argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><name pos:start="17:26" pos:end="17:28">dev</name></expr></argument>, <argument pos:start="17:31" pos:end="17:37"><expr pos:start="17:31" pos:end="17:37"><literal type="string" pos:start="17:31" pos:end="17:37">"width"</literal></expr></argument>, <argument pos:start="17:40" pos:end="17:44"><expr pos:start="17:40" pos:end="17:44"><name pos:start="17:40" pos:end="17:44">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:48"><expr pos:start="19:5" pos:end="19:47"><call pos:start="19:5" pos:end="19:47"><name pos:start="19:5" pos:end="19:24">qdev_prop_set_uint16</name><argument_list pos:start="19:25" pos:end="19:47">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">dev</name></expr></argument>, <argument pos:start="19:31" pos:end="19:38"><expr pos:start="19:31" pos:end="19:38"><literal type="string" pos:start="19:31" pos:end="19:38">"height"</literal></expr></argument>, <argument pos:start="19:41" pos:end="19:46"><expr pos:start="19:41" pos:end="19:46"><name pos:start="19:41" pos:end="19:46">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><call pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:24">qdev_prop_set_uint16</name><argument_list pos:start="21:25" pos:end="21:45">(<argument pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:28">dev</name></expr></argument>, <argument pos:start="21:31" pos:end="21:37"><expr pos:start="21:31" pos:end="21:37"><literal type="string" pos:start="21:31" pos:end="21:37">"depth"</literal></expr></argument>, <argument pos:start="21:40" pos:end="21:44"><expr pos:start="21:40" pos:end="21:44"><name pos:start="21:40" pos:end="21:44">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:49"><expr pos:start="23:5" pos:end="23:48"><call pos:start="23:5" pos:end="23:48"><name pos:start="23:5" pos:end="23:24">qdev_prop_set_uint64</name><argument_list pos:start="23:25" pos:end="23:48">(<argument pos:start="23:26" pos:end="23:28"><expr pos:start="23:26" pos:end="23:28"><name pos:start="23:26" pos:end="23:28">dev</name></expr></argument>, <argument pos:start="23:31" pos:end="23:41"><expr pos:start="23:31" pos:end="23:41"><literal type="string" pos:start="23:31" pos:end="23:41">"prom_addr"</literal></expr></argument>, <argument pos:start="23:44" pos:end="23:47"><expr pos:start="23:44" pos:end="23:47"><name pos:start="23:44" pos:end="23:47">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><call pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:20">qdev_init_nofail</name><argument_list pos:start="25:21" pos:end="25:25">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:5">s</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:22">SYS_BUS_DEVICE</name><argument_list pos:start="27:23" pos:end="27:27">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:28">/* 10/ROM : FCode ROM */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><call pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:19">sysbus_mmio_map</name><argument_list pos:start="33:20" pos:end="33:31">(<argument pos:start="33:21" pos:end="33:21"><expr pos:start="33:21" pos:end="33:21"><name pos:start="33:21" pos:end="33:21">s</name></expr></argument>, <argument pos:start="33:24" pos:end="33:24"><expr pos:start="33:24" pos:end="33:24"><literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr></argument>, <argument pos:start="33:27" pos:end="33:30"><expr pos:start="33:27" pos:end="33:30"><name pos:start="33:27" pos:end="33:30">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="35:5" pos:end="35:26">/* 2/STIP : Stipple */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:48"><expr pos:start="37:5" pos:end="37:47"><call pos:start="37:5" pos:end="37:47"><name pos:start="37:5" pos:end="37:19">sysbus_mmio_map</name><argument_list pos:start="37:20" pos:end="37:47">(<argument pos:start="37:21" pos:end="37:21"><expr pos:start="37:21" pos:end="37:21"><name pos:start="37:21" pos:end="37:21">s</name></expr></argument>, <argument pos:start="37:24" pos:end="37:24"><expr pos:start="37:24" pos:end="37:24"><literal type="number" pos:start="37:24" pos:end="37:24">1</literal></expr></argument>, <argument pos:start="37:27" pos:end="37:46"><expr pos:start="37:27" pos:end="37:46"><name pos:start="37:27" pos:end="37:30">addr</name> <operator pos:start="37:32" pos:end="37:32">+</operator> <literal type="number" pos:start="37:34" pos:end="37:46">0x04000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="39:5" pos:end="39:26">/* 3/BLIT : Blitter */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:48"><expr pos:start="41:5" pos:end="41:47"><call pos:start="41:5" pos:end="41:47"><name pos:start="41:5" pos:end="41:19">sysbus_mmio_map</name><argument_list pos:start="41:20" pos:end="41:47">(<argument pos:start="41:21" pos:end="41:21"><expr pos:start="41:21" pos:end="41:21"><name pos:start="41:21" pos:end="41:21">s</name></expr></argument>, <argument pos:start="41:24" pos:end="41:24"><expr pos:start="41:24" pos:end="41:24"><literal type="number" pos:start="41:24" pos:end="41:24">2</literal></expr></argument>, <argument pos:start="41:27" pos:end="41:46"><expr pos:start="41:27" pos:end="41:46"><name pos:start="41:27" pos:end="41:30">addr</name> <operator pos:start="41:32" pos:end="41:32">+</operator> <literal type="number" pos:start="41:34" pos:end="41:46">0x06000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="43:5" pos:end="43:31">/* 5/RSTIP : Raw Stipple */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:48"><expr pos:start="45:5" pos:end="45:47"><call pos:start="45:5" pos:end="45:47"><name pos:start="45:5" pos:end="45:19">sysbus_mmio_map</name><argument_list pos:start="45:20" pos:end="45:47">(<argument pos:start="45:21" pos:end="45:21"><expr pos:start="45:21" pos:end="45:21"><name pos:start="45:21" pos:end="45:21">s</name></expr></argument>, <argument pos:start="45:24" pos:end="45:24"><expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">3</literal></expr></argument>, <argument pos:start="45:27" pos:end="45:46"><expr pos:start="45:27" pos:end="45:46"><name pos:start="45:27" pos:end="45:30">addr</name> <operator pos:start="45:32" pos:end="45:32">+</operator> <literal type="number" pos:start="45:34" pos:end="45:46">0x0c000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="47:5" pos:end="47:31">/* 6/RBLIT : Raw Blitter */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:48"><expr pos:start="49:5" pos:end="49:47"><call pos:start="49:5" pos:end="49:47"><name pos:start="49:5" pos:end="49:19">sysbus_mmio_map</name><argument_list pos:start="49:20" pos:end="49:47">(<argument pos:start="49:21" pos:end="49:21"><expr pos:start="49:21" pos:end="49:21"><name pos:start="49:21" pos:end="49:21">s</name></expr></argument>, <argument pos:start="49:24" pos:end="49:24"><expr pos:start="49:24" pos:end="49:24"><literal type="number" pos:start="49:24" pos:end="49:24">4</literal></expr></argument>, <argument pos:start="49:27" pos:end="49:46"><expr pos:start="49:27" pos:end="49:46"><name pos:start="49:27" pos:end="49:30">addr</name> <operator pos:start="49:32" pos:end="49:32">+</operator> <literal type="number" pos:start="49:34" pos:end="49:46">0x0e000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="51:5" pos:end="51:34">/* 7/TEC : Transform Engine */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:48"><expr pos:start="53:5" pos:end="53:47"><call pos:start="53:5" pos:end="53:47"><name pos:start="53:5" pos:end="53:19">sysbus_mmio_map</name><argument_list pos:start="53:20" pos:end="53:47">(<argument pos:start="53:21" pos:end="53:21"><expr pos:start="53:21" pos:end="53:21"><name pos:start="53:21" pos:end="53:21">s</name></expr></argument>, <argument pos:start="53:24" pos:end="53:24"><expr pos:start="53:24" pos:end="53:24"><literal type="number" pos:start="53:24" pos:end="53:24">5</literal></expr></argument>, <argument pos:start="53:27" pos:end="53:46"><expr pos:start="53:27" pos:end="53:46"><name pos:start="53:27" pos:end="53:30">addr</name> <operator pos:start="53:32" pos:end="53:32">+</operator> <literal type="number" pos:start="53:34" pos:end="53:46">0x00700000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="55:5" pos:end="55:23">/* 8/CMAP  : DAC */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:48"><expr pos:start="57:5" pos:end="57:47"><call pos:start="57:5" pos:end="57:47"><name pos:start="57:5" pos:end="57:19">sysbus_mmio_map</name><argument_list pos:start="57:20" pos:end="57:47">(<argument pos:start="57:21" pos:end="57:21"><expr pos:start="57:21" pos:end="57:21"><name pos:start="57:21" pos:end="57:21">s</name></expr></argument>, <argument pos:start="57:24" pos:end="57:24"><expr pos:start="57:24" pos:end="57:24"><literal type="number" pos:start="57:24" pos:end="57:24">6</literal></expr></argument>, <argument pos:start="57:27" pos:end="57:46"><expr pos:start="57:27" pos:end="57:46"><name pos:start="57:27" pos:end="57:30">addr</name> <operator pos:start="57:32" pos:end="57:32">+</operator> <literal type="number" pos:start="57:34" pos:end="57:46">0x00200000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="59:5" pos:end="59:17">/* 9/THC : */</comment>

    <if_stmt pos:start="61:5" pos:end="69:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:19">(<expr pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:13">depth</name> <operator pos:start="61:15" pos:end="61:16">==</operator> <literal type="number" pos:start="61:18" pos:end="61:18">8</literal></expr>)</condition> <block pos:start="61:21" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:52">

        <expr_stmt pos:start="63:9" pos:end="63:52"><expr pos:start="63:9" pos:end="63:51"><call pos:start="63:9" pos:end="63:51"><name pos:start="63:9" pos:end="63:23">sysbus_mmio_map</name><argument_list pos:start="63:24" pos:end="63:51">(<argument pos:start="63:25" pos:end="63:25"><expr pos:start="63:25" pos:end="63:25"><name pos:start="63:25" pos:end="63:25">s</name></expr></argument>, <argument pos:start="63:28" pos:end="63:28"><expr pos:start="63:28" pos:end="63:28"><literal type="number" pos:start="63:28" pos:end="63:28">7</literal></expr></argument>, <argument pos:start="63:31" pos:end="63:50"><expr pos:start="63:31" pos:end="63:50"><name pos:start="63:31" pos:end="63:34">addr</name> <operator pos:start="63:36" pos:end="63:36">+</operator> <literal type="number" pos:start="63:38" pos:end="63:50">0x00300000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="69:5">else <block pos:start="65:12" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:52">

        <expr_stmt pos:start="67:9" pos:end="67:52"><expr pos:start="67:9" pos:end="67:51"><call pos:start="67:9" pos:end="67:51"><name pos:start="67:9" pos:end="67:23">sysbus_mmio_map</name><argument_list pos:start="67:24" pos:end="67:51">(<argument pos:start="67:25" pos:end="67:25"><expr pos:start="67:25" pos:end="67:25"><name pos:start="67:25" pos:end="67:25">s</name></expr></argument>, <argument pos:start="67:28" pos:end="67:28"><expr pos:start="67:28" pos:end="67:28"><literal type="number" pos:start="67:28" pos:end="67:28">7</literal></expr></argument>, <argument pos:start="67:31" pos:end="67:50"><expr pos:start="67:31" pos:end="67:50"><name pos:start="67:31" pos:end="67:34">addr</name> <operator pos:start="67:36" pos:end="67:36">+</operator> <literal type="number" pos:start="67:38" pos:end="67:50">0x00301000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="71:5" pos:end="71:18">/* 11/DHC : */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:48"><expr pos:start="73:5" pos:end="73:47"><call pos:start="73:5" pos:end="73:47"><name pos:start="73:5" pos:end="73:19">sysbus_mmio_map</name><argument_list pos:start="73:20" pos:end="73:47">(<argument pos:start="73:21" pos:end="73:21"><expr pos:start="73:21" pos:end="73:21"><name pos:start="73:21" pos:end="73:21">s</name></expr></argument>, <argument pos:start="73:24" pos:end="73:24"><expr pos:start="73:24" pos:end="73:24"><literal type="number" pos:start="73:24" pos:end="73:24">8</literal></expr></argument>, <argument pos:start="73:27" pos:end="73:46"><expr pos:start="73:27" pos:end="73:46"><name pos:start="73:27" pos:end="73:30">addr</name> <operator pos:start="73:32" pos:end="73:32">+</operator> <literal type="number" pos:start="73:34" pos:end="73:46">0x00240000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="75:5" pos:end="75:18">/* 12/ALT : */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:48"><expr pos:start="77:5" pos:end="77:47"><call pos:start="77:5" pos:end="77:47"><name pos:start="77:5" pos:end="77:19">sysbus_mmio_map</name><argument_list pos:start="77:20" pos:end="77:47">(<argument pos:start="77:21" pos:end="77:21"><expr pos:start="77:21" pos:end="77:21"><name pos:start="77:21" pos:end="77:21">s</name></expr></argument>, <argument pos:start="77:24" pos:end="77:24"><expr pos:start="77:24" pos:end="77:24"><literal type="number" pos:start="77:24" pos:end="77:24">9</literal></expr></argument>, <argument pos:start="77:27" pos:end="77:46"><expr pos:start="77:27" pos:end="77:46"><name pos:start="77:27" pos:end="77:30">addr</name> <operator pos:start="77:32" pos:end="77:32">+</operator> <literal type="number" pos:start="77:34" pos:end="77:46">0x00280000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="79:5" pos:end="79:30">/* 0/DFB8 : 8-bit plane */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:49"><expr pos:start="81:5" pos:end="81:48"><call pos:start="81:5" pos:end="81:48"><name pos:start="81:5" pos:end="81:19">sysbus_mmio_map</name><argument_list pos:start="81:20" pos:end="81:48">(<argument pos:start="81:21" pos:end="81:21"><expr pos:start="81:21" pos:end="81:21"><name pos:start="81:21" pos:end="81:21">s</name></expr></argument>, <argument pos:start="81:24" pos:end="81:25"><expr pos:start="81:24" pos:end="81:25"><literal type="number" pos:start="81:24" pos:end="81:25">10</literal></expr></argument>, <argument pos:start="81:28" pos:end="81:47"><expr pos:start="81:28" pos:end="81:47"><name pos:start="81:28" pos:end="81:31">addr</name> <operator pos:start="81:33" pos:end="81:33">+</operator> <literal type="number" pos:start="81:35" pos:end="81:47">0x00800000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="83:5" pos:end="83:31">/* 1/DFB24 : 24bit plane */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:49"><expr pos:start="85:5" pos:end="85:48"><call pos:start="85:5" pos:end="85:48"><name pos:start="85:5" pos:end="85:19">sysbus_mmio_map</name><argument_list pos:start="85:20" pos:end="85:48">(<argument pos:start="85:21" pos:end="85:21"><expr pos:start="85:21" pos:end="85:21"><name pos:start="85:21" pos:end="85:21">s</name></expr></argument>, <argument pos:start="85:24" pos:end="85:25"><expr pos:start="85:24" pos:end="85:25"><literal type="number" pos:start="85:24" pos:end="85:25">11</literal></expr></argument>, <argument pos:start="85:28" pos:end="85:47"><expr pos:start="85:28" pos:end="85:47"><name pos:start="85:28" pos:end="85:31">addr</name> <operator pos:start="85:33" pos:end="85:33">+</operator> <literal type="number" pos:start="85:35" pos:end="85:47">0x02000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="87:5" pos:end="87:50">/* 4/RDFB32: Raw framebuffer. Control plane */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:49"><expr pos:start="89:5" pos:end="89:48"><call pos:start="89:5" pos:end="89:48"><name pos:start="89:5" pos:end="89:19">sysbus_mmio_map</name><argument_list pos:start="89:20" pos:end="89:48">(<argument pos:start="89:21" pos:end="89:21"><expr pos:start="89:21" pos:end="89:21"><name pos:start="89:21" pos:end="89:21">s</name></expr></argument>, <argument pos:start="89:24" pos:end="89:25"><expr pos:start="89:24" pos:end="89:25"><literal type="number" pos:start="89:24" pos:end="89:25">12</literal></expr></argument>, <argument pos:start="89:28" pos:end="89:47"><expr pos:start="89:28" pos:end="89:47"><name pos:start="89:28" pos:end="89:31">addr</name> <operator pos:start="89:33" pos:end="89:33">+</operator> <literal type="number" pos:start="89:35" pos:end="89:47">0x0a000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="91:5" pos:end="91:73">/* 9/THC24bits : NetBSD writes here even with 8-bit display: dummy */</comment>

    <if_stmt pos:start="93:5" pos:end="97:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:19">(<expr pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:13">depth</name> <operator pos:start="93:15" pos:end="93:16">==</operator> <literal type="number" pos:start="93:18" pos:end="93:18">8</literal></expr>)</condition> <block pos:start="93:21" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:53">

        <expr_stmt pos:start="95:9" pos:end="95:53"><expr pos:start="95:9" pos:end="95:52"><call pos:start="95:9" pos:end="95:52"><name pos:start="95:9" pos:end="95:23">sysbus_mmio_map</name><argument_list pos:start="95:24" pos:end="95:52">(<argument pos:start="95:25" pos:end="95:25"><expr pos:start="95:25" pos:end="95:25"><name pos:start="95:25" pos:end="95:25">s</name></expr></argument>, <argument pos:start="95:28" pos:end="95:29"><expr pos:start="95:28" pos:end="95:29"><literal type="number" pos:start="95:28" pos:end="95:29">13</literal></expr></argument>, <argument pos:start="95:32" pos:end="95:51"><expr pos:start="95:32" pos:end="95:51"><name pos:start="95:32" pos:end="95:35">addr</name> <operator pos:start="95:37" pos:end="95:37">+</operator> <literal type="number" pos:start="95:39" pos:end="95:51">0x00301000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:34"><expr pos:start="101:5" pos:end="101:33"><call pos:start="101:5" pos:end="101:33"><name pos:start="101:5" pos:end="101:22">sysbus_connect_irq</name><argument_list pos:start="101:23" pos:end="101:33">(<argument pos:start="101:24" pos:end="101:24"><expr pos:start="101:24" pos:end="101:24"><name pos:start="101:24" pos:end="101:24">s</name></expr></argument>, <argument pos:start="101:27" pos:end="101:27"><expr pos:start="101:27" pos:end="101:27"><literal type="number" pos:start="101:27" pos:end="101:27">0</literal></expr></argument>, <argument pos:start="101:30" pos:end="101:32"><expr pos:start="101:30" pos:end="101:32"><name pos:start="101:30" pos:end="101:32">irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
