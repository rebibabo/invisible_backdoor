<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22872.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">xen_pt_config_delete</name><parameter_list pos:start="1:26" pos:end="1:52">(<parameter pos:start="1:27" pos:end="1:51"><decl pos:start="1:27" pos:end="1:51"><type pos:start="1:27" pos:end="1:50"><name pos:start="1:27" pos:end="1:48">XenPCIPassthroughState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:5">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:24">XenPTRegGroup</name></name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:35">reg_group</name></decl>, <decl pos:start="5:38" pos:end="5:46"><type ref="prev" pos:start="5:5" pos:end="5:26"><modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:46">next_grp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:19">XenPTReg</name></name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">reg</name></decl>, <decl pos:start="7:27" pos:end="7:35"><type ref="prev" pos:start="7:5" pos:end="7:21"><modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:35">next_reg</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:35">/* free MSI/MSI-X info table */</comment>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:16">(<expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:15">msix</name></name></expr>)</condition> <block pos:start="13:18" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:30">

        <expr_stmt pos:start="15:9" pos:end="15:30"><expr pos:start="15:9" pos:end="15:29"><call pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:26">xen_pt_msix_delete</name><argument_list pos:start="15:27" pos:end="15:29">(<argument pos:start="15:28" pos:end="15:28"><expr pos:start="15:28" pos:end="15:28"><name pos:start="15:28" pos:end="15:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:15">(<expr pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:14">msi</name></name></expr>)</condition> <block pos:start="19:17" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:23">

        <expr_stmt pos:start="21:9" pos:end="21:23"><expr pos:start="21:9" pos:end="21:22"><call pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:14">g_free</name><argument_list pos:start="21:15" pos:end="21:22">(<argument pos:start="21:16" pos:end="21:21"><expr pos:start="21:16" pos:end="21:21"><name pos:start="21:16" pos:end="21:21"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:21">msi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:39">/* free all register group entry */</comment>

    <macro pos:start="29:5" pos:end="29:66"><name pos:start="29:5" pos:end="29:22">QLIST_FOREACH_SAFE</name><argument_list pos:start="29:23" pos:end="29:66">(<argument pos:start="29:24" pos:end="29:32">reg_group</argument>, <argument pos:start="29:35" pos:end="29:46">&amp;s-&gt;reg_grps</argument>, <argument pos:start="29:49" pos:end="29:55">entries</argument>, <argument pos:start="29:58" pos:end="29:65">next_grp</argument>)</argument_list></macro> <block pos:start="29:68" pos:end="47:5">{<block_content pos:start="33:9" pos:end="45:26">

        <comment type="block" pos:start="31:9" pos:end="31:37">/* free all register entry */</comment>

        <macro pos:start="33:9" pos:end="33:76"><name pos:start="33:9" pos:end="33:26">QLIST_FOREACH_SAFE</name><argument_list pos:start="33:27" pos:end="33:76">(<argument pos:start="33:28" pos:end="33:30">reg</argument>, <argument pos:start="33:33" pos:end="33:56">&amp;reg_group-&gt;reg_tbl_list</argument>, <argument pos:start="33:59" pos:end="33:65">entries</argument>, <argument pos:start="33:68" pos:end="33:75">next_reg</argument>)</argument_list></macro> <block pos:start="33:78" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:24">

            <expr_stmt pos:start="35:13" pos:end="35:39"><expr pos:start="35:13" pos:end="35:38"><call pos:start="35:13" pos:end="35:38"><name pos:start="35:13" pos:end="35:24">QLIST_REMOVE</name><argument_list pos:start="35:25" pos:end="35:38">(<argument pos:start="35:26" pos:end="35:28"><expr pos:start="35:26" pos:end="35:28"><name pos:start="35:26" pos:end="35:28">reg</name></expr></argument>, <argument pos:start="35:31" pos:end="35:37"><expr pos:start="35:31" pos:end="35:37"><name pos:start="35:31" pos:end="35:37">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:24"><expr pos:start="37:13" pos:end="37:23"><call pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:18">g_free</name><argument_list pos:start="37:19" pos:end="37:23">(<argument pos:start="37:20" pos:end="37:22"><expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>



        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:20">QLIST_REMOVE</name><argument_list pos:start="43:21" pos:end="43:40">(<argument pos:start="43:22" pos:end="43:30"><expr pos:start="43:22" pos:end="43:30"><name pos:start="43:22" pos:end="43:30">reg_group</name></expr></argument>, <argument pos:start="43:33" pos:end="43:39"><expr pos:start="43:33" pos:end="43:39"><name pos:start="43:33" pos:end="43:39">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:26"><expr pos:start="45:9" pos:end="45:25"><call pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:14">g_free</name><argument_list pos:start="45:15" pos:end="45:25">(<argument pos:start="45:16" pos:end="45:24"><expr pos:start="45:16" pos:end="45:24"><name pos:start="45:16" pos:end="45:24">reg_group</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
