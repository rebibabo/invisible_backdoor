<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1503.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">mpic_irq_raise</name><parameter_list pos:start="1:27" pos:end="1:69">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:36">openpic_t</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">mpp</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:52"><decl pos:start="1:44" pos:end="1:52"><type pos:start="1:44" pos:end="1:52"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:52">n_CPU</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:68"><decl pos:start="1:55" pos:end="1:68"><type pos:start="1:55" pos:end="1:68"><name pos:start="1:55" pos:end="1:63">IRQ_src_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">src</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">n_ci</name> <init pos:start="5:14" pos:end="5:30">= <expr pos:start="5:16" pos:end="5:30"><name pos:start="5:16" pos:end="5:22">IDR_CI0</name> <operator pos:start="5:24" pos:end="5:24">-</operator> <name pos:start="5:26" pos:end="5:30">n_CPU</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="19:5"><if pos:start="9:5" pos:end="13:5">if<condition pos:start="9:7" pos:end="9:33">(<expr pos:start="9:8" pos:end="9:32"><call pos:start="9:8" pos:end="9:32"><name pos:start="9:8" pos:end="9:15">test_bit</name><argument_list pos:start="9:16" pos:end="9:32">(<argument pos:start="9:17" pos:end="9:25"><expr pos:start="9:17" pos:end="9:25"><operator pos:start="9:17" pos:end="9:17">&amp;</operator><name pos:start="9:18" pos:end="9:25"><name pos:start="9:18" pos:end="9:20">src</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:25">ide</name></name></expr></argument>, <argument pos:start="9:28" pos:end="9:31"><expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">n_ci</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:35" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:66">

        <expr_stmt pos:start="11:9" pos:end="11:66"><expr pos:start="11:9" pos:end="11:65"><call pos:start="11:9" pos:end="11:65"><name pos:start="11:9" pos:end="11:22">qemu_irq_raise</name><argument_list pos:start="11:23" pos:end="11:65">(<argument pos:start="11:24" pos:end="11:64"><expr pos:start="11:24" pos:end="11:64"><name pos:start="11:24" pos:end="11:38"><name pos:start="11:24" pos:end="11:26">mpp</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:31">dst</name><index pos:start="11:32" pos:end="11:38">[<expr pos:start="11:33" pos:end="11:37"><name pos:start="11:33" pos:end="11:37">n_CPU</name></expr>]</index></name><operator pos:start="11:39" pos:end="11:39">.</operator><name pos:start="11:40" pos:end="11:64"><name pos:start="11:40" pos:end="11:43">irqs</name><index pos:start="11:44" pos:end="11:64">[<expr pos:start="11:45" pos:end="11:63"><name pos:start="11:45" pos:end="11:63">OPENPIC_OUTPUT_CINT</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="15:5" pos:end="19:5">else <block pos:start="15:10" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:65">

        <expr_stmt pos:start="17:9" pos:end="17:65"><expr pos:start="17:9" pos:end="17:64"><call pos:start="17:9" pos:end="17:64"><name pos:start="17:9" pos:end="17:22">qemu_irq_raise</name><argument_list pos:start="17:23" pos:end="17:64">(<argument pos:start="17:24" pos:end="17:63"><expr pos:start="17:24" pos:end="17:63"><name pos:start="17:24" pos:end="17:38"><name pos:start="17:24" pos:end="17:26">mpp</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:31">dst</name><index pos:start="17:32" pos:end="17:38">[<expr pos:start="17:33" pos:end="17:37"><name pos:start="17:33" pos:end="17:37">n_CPU</name></expr>]</index></name><operator pos:start="17:39" pos:end="17:39">.</operator><name pos:start="17:40" pos:end="17:63"><name pos:start="17:40" pos:end="17:43">irqs</name><index pos:start="17:44" pos:end="17:63">[<expr pos:start="17:45" pos:end="17:62"><name pos:start="17:45" pos:end="17:62">OPENPIC_OUTPUT_INT</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
