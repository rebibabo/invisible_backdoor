<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6808.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">tta_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="167:1">{<block_content pos:start="5:5" pos:end="165:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">TTAContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">c</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:19">channels</name></decl>, <decl pos:start="9:22" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:24">bps</name></decl>, <decl pos:start="9:27" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:36">samplerate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:21">framepos</name></decl>, <decl pos:start="11:24" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:24" pos:end="11:35">start_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:20">datalen</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:25"><if pos:start="17:5" pos:end="19:25">if <condition pos:start="17:8" pos:end="17:67">(<expr pos:start="17:9" pos:end="17:66"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:66"><name pos:start="17:10" pos:end="17:20">av_dict_get</name><argument_list pos:start="17:21" pos:end="17:66">(<argument pos:start="17:22" pos:end="17:32"><expr pos:start="17:22" pos:end="17:32"><name pos:start="17:22" pos:end="17:32"><name pos:start="17:22" pos:end="17:22">s</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:32">metadata</name></name></expr></argument>, <argument pos:start="17:35" pos:end="17:36"><expr pos:start="17:35" pos:end="17:36"><literal type="string" pos:start="17:35" pos:end="17:36">""</literal></expr></argument>, <argument pos:start="17:39" pos:end="17:42"><expr pos:start="17:39" pos:end="17:42"><name pos:start="17:39" pos:end="17:42">NULL</name></expr></argument>, <argument pos:start="17:45" pos:end="17:65"><expr pos:start="17:45" pos:end="17:65"><name pos:start="17:45" pos:end="17:65">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:25"><block_content pos:start="19:9" pos:end="19:25">

        <expr_stmt pos:start="19:9" pos:end="19:25"><expr pos:start="19:9" pos:end="19:24"><call pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:21">ff_id3v1_read</name><argument_list pos:start="19:22" pos:end="19:24">(<argument pos:start="19:23" pos:end="19:23"><expr pos:start="19:23" pos:end="19:23"><name pos:start="19:23" pos:end="19:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:16">start_offset</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <call pos:start="23:20" pos:end="23:35"><name pos:start="23:20" pos:end="23:28">avio_tell</name><argument_list pos:start="23:29" pos:end="23:35">(<argument pos:start="23:30" pos:end="23:34"><expr pos:start="23:30" pos:end="23:34"><name pos:start="23:30" pos:end="23:34"><name pos:start="23:30" pos:end="23:30">s</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:18"><if pos:start="25:5" pos:end="27:18">if <condition pos:start="25:8" pos:end="25:44">(<expr pos:start="25:9" pos:end="25:43"><call pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:17">avio_rl32</name><argument_list pos:start="25:18" pos:end="25:24">(<argument pos:start="25:19" pos:end="25:23"><expr pos:start="25:19" pos:end="25:23"><name pos:start="25:19" pos:end="25:23"><name pos:start="25:19" pos:end="25:19">s</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:23">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:26" pos:end="25:27">!=</operator> <call pos:start="25:29" pos:end="25:43"><name pos:start="25:29" pos:end="25:35">AV_RL32</name><argument_list pos:start="25:36" pos:end="25:43">(<argument pos:start="25:37" pos:end="25:42"><expr pos:start="25:37" pos:end="25:42"><literal type="string" pos:start="25:37" pos:end="25:42">"TTA1"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="27:20" pos:end="27:34">// not tta file</comment>



    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><call pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:13">avio_skip</name><argument_list pos:start="31:14" pos:end="31:23">(<argument pos:start="31:15" pos:end="31:19"><expr pos:start="31:15" pos:end="31:19"><name pos:start="31:15" pos:end="31:19"><name pos:start="31:15" pos:end="31:15">s</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:19">pb</name></name></expr></argument>, <argument pos:start="31:22" pos:end="31:22"><expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="31:26" pos:end="31:40">// FIXME: flags</comment>

    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:12">channels</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:31"><name pos:start="33:16" pos:end="33:24">avio_rl16</name><argument_list pos:start="33:25" pos:end="33:31">(<argument pos:start="33:26" pos:end="33:30"><expr pos:start="33:26" pos:end="33:30"><name pos:start="33:26" pos:end="33:30"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:30">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:7">bps</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:26"><name pos:start="35:11" pos:end="35:19">avio_rl16</name><argument_list pos:start="35:20" pos:end="35:26">(<argument pos:start="35:21" pos:end="35:25"><expr pos:start="35:21" pos:end="35:25"><name pos:start="35:21" pos:end="35:25"><name pos:start="35:21" pos:end="35:21">s</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:34"><expr pos:start="37:5" pos:end="37:33"><name pos:start="37:5" pos:end="37:14">samplerate</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="37:33"><name pos:start="37:18" pos:end="37:26">avio_rl32</name><argument_list pos:start="37:27" pos:end="37:33">(<argument pos:start="37:28" pos:end="37:32"><expr pos:start="37:28" pos:end="37:32"><name pos:start="37:28" pos:end="37:32"><name pos:start="37:28" pos:end="37:28">s</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:32">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if<condition pos:start="39:7" pos:end="39:47">(<expr pos:start="39:8" pos:end="39:46"><name pos:start="39:8" pos:end="39:17">samplerate</name> <operator pos:start="39:19" pos:end="39:20">&lt;=</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal> <operator pos:start="39:24" pos:end="39:25">||</operator> <name pos:start="39:27" pos:end="39:36">samplerate</name> <operator pos:start="39:38" pos:end="39:38">&gt;</operator> <literal type="number" pos:start="39:40" pos:end="39:46">1000000</literal></expr>)</condition><block pos:start="39:48" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:18">

        <expr_stmt pos:start="41:9" pos:end="41:57"><expr pos:start="41:9" pos:end="41:56"><call pos:start="41:9" pos:end="41:56"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:56">(<argument pos:start="41:16" pos:end="41:16"><expr pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">s</name></expr></argument>, <argument pos:start="41:19" pos:end="41:30"><expr pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:33" pos:end="41:55"><expr pos:start="41:33" pos:end="41:55"><literal type="string" pos:start="41:33" pos:end="41:55">"nonsense samplerate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:31"><expr pos:start="49:5" pos:end="49:30"><name pos:start="49:5" pos:end="49:11">datalen</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:30"><name pos:start="49:15" pos:end="49:23">avio_rl32</name><argument_list pos:start="49:24" pos:end="49:30">(<argument pos:start="49:25" pos:end="49:29"><expr pos:start="49:25" pos:end="49:29"><name pos:start="49:25" pos:end="49:29"><name pos:start="49:25" pos:end="49:25">s</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:17">(<expr pos:start="51:9" pos:end="51:16"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:16">datalen</name></expr>)</condition> <block pos:start="51:19" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:35">

        <expr_stmt pos:start="53:9" pos:end="53:53"><expr pos:start="53:9" pos:end="53:52"><call pos:start="53:9" pos:end="53:52"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:52">(<argument pos:start="53:16" pos:end="53:16"><expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">s</name></expr></argument>, <argument pos:start="53:19" pos:end="53:30"><expr pos:start="53:19" pos:end="53:30"><name pos:start="53:19" pos:end="53:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:33" pos:end="53:51"><expr pos:start="53:33" pos:end="53:51"><literal type="string" pos:start="53:33" pos:end="53:51">"invalid datalen\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:35">return <expr pos:start="55:16" pos:end="55:34"><name pos:start="55:16" pos:end="55:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:24"><expr pos:start="61:5" pos:end="61:23"><call pos:start="61:5" pos:end="61:23"><name pos:start="61:5" pos:end="61:13">avio_skip</name><argument_list pos:start="61:14" pos:end="61:23">(<argument pos:start="61:15" pos:end="61:19"><expr pos:start="61:15" pos:end="61:19"><name pos:start="61:15" pos:end="61:19"><name pos:start="61:15" pos:end="61:15">s</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:19">pb</name></name></expr></argument>, <argument pos:start="61:22" pos:end="61:22"><expr pos:start="61:22" pos:end="61:22"><literal type="number" pos:start="61:22" pos:end="61:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="61:26" pos:end="61:38">// header crc</comment>



    <expr_stmt pos:start="65:5" pos:end="65:48"><expr pos:start="65:5" pos:end="65:47"><name pos:start="65:5" pos:end="65:17"><name pos:start="65:5" pos:end="65:5">c</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:17">frame_size</name></name>      <operator pos:start="65:24" pos:end="65:24">=</operator> <name pos:start="65:26" pos:end="65:35">samplerate</name> <operator pos:start="65:37" pos:end="65:37">*</operator> <literal type="number" pos:start="65:39" pos:end="65:41">256</literal> <operator pos:start="65:43" pos:end="65:43">/</operator> <literal type="number" pos:start="65:45" pos:end="65:47">245</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:49"><expr pos:start="67:5" pos:end="67:48"><name pos:start="67:5" pos:end="67:22"><name pos:start="67:5" pos:end="67:5">c</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:22">last_frame_size</name></name> <operator pos:start="67:24" pos:end="67:24">=</operator> <name pos:start="67:26" pos:end="67:32">datalen</name> <operator pos:start="67:34" pos:end="67:34">%</operator> <name pos:start="67:36" pos:end="67:48"><name pos:start="67:36" pos:end="67:36">c</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:48">frame_size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="71:43"><if pos:start="69:5" pos:end="71:43">if <condition pos:start="69:8" pos:end="69:28">(<expr pos:start="69:9" pos:end="69:27"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:27"><name pos:start="69:10" pos:end="69:10">c</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:27">last_frame_size</name></name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:43"><block_content pos:start="71:9" pos:end="71:43">

        <expr_stmt pos:start="71:9" pos:end="71:43"><expr pos:start="71:9" pos:end="71:42"><name pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:9">c</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:26">last_frame_size</name></name> <operator pos:start="71:28" pos:end="71:28">=</operator> <name pos:start="71:30" pos:end="71:42"><name pos:start="71:30" pos:end="71:30">c</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:42">frame_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:84"><expr pos:start="73:5" pos:end="73:83"><name pos:start="73:5" pos:end="73:18"><name pos:start="73:5" pos:end="73:5">c</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:18">totalframes</name></name> <operator pos:start="73:20" pos:end="73:20">=</operator> <name pos:start="73:22" pos:end="73:28">datalen</name> <operator pos:start="73:30" pos:end="73:30">/</operator> <name pos:start="73:32" pos:end="73:44"><name pos:start="73:32" pos:end="73:32">c</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:44">frame_size</name></name> <operator pos:start="73:46" pos:end="73:46">+</operator> <operator pos:start="73:48" pos:end="73:48">(</operator><name pos:start="73:49" pos:end="73:66"><name pos:start="73:49" pos:end="73:49">c</name><operator pos:start="73:50" pos:end="73:51">-&gt;</operator><name pos:start="73:52" pos:end="73:66">last_frame_size</name></name> <operator pos:start="73:68" pos:end="73:68">&lt;</operator> <name pos:start="73:70" pos:end="73:82"><name pos:start="73:70" pos:end="73:70">c</name><operator pos:start="73:71" pos:end="73:72">-&gt;</operator><name pos:start="73:73" pos:end="73:82">frame_size</name></name><operator pos:start="73:83" pos:end="73:83">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:24"><expr pos:start="75:5" pos:end="75:23"><name pos:start="75:5" pos:end="75:19"><name pos:start="75:5" pos:end="75:5">c</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:19">currentframe</name></name> <operator pos:start="75:21" pos:end="75:21">=</operator> <literal type="number" pos:start="75:23" pos:end="75:23">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if<condition pos:start="79:7" pos:end="79:74">(<expr pos:start="79:8" pos:end="79:73"><name pos:start="79:8" pos:end="79:21"><name pos:start="79:8" pos:end="79:8">c</name><operator pos:start="79:9" pos:end="79:10">-&gt;</operator><name pos:start="79:11" pos:end="79:21">totalframes</name></name> <operator pos:start="79:23" pos:end="79:24">&gt;=</operator> <name pos:start="79:26" pos:end="79:33">UINT_MAX</name><operator pos:start="79:34" pos:end="79:34">/</operator><sizeof pos:start="79:35" pos:end="79:50">sizeof<argument_list pos:start="79:41" pos:end="79:50">(<argument pos:start="79:42" pos:end="79:49"><expr pos:start="79:42" pos:end="79:49"><name pos:start="79:42" pos:end="79:49">uint32_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="79:52" pos:end="79:53">||</operator> <name pos:start="79:55" pos:end="79:68"><name pos:start="79:55" pos:end="79:55">c</name><operator pos:start="79:56" pos:end="79:57">-&gt;</operator><name pos:start="79:58" pos:end="79:68">totalframes</name></name> <operator pos:start="79:70" pos:end="79:71">&lt;=</operator> <literal type="number" pos:start="79:73" pos:end="79:73">0</literal></expr>)</condition><block pos:start="79:75" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:18">

        <expr_stmt pos:start="81:9" pos:end="81:76"><expr pos:start="81:9" pos:end="81:75"><call pos:start="81:9" pos:end="81:75"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:75">(<argument pos:start="81:16" pos:end="81:16"><expr pos:start="81:16" pos:end="81:16"><name pos:start="81:16" pos:end="81:16">s</name></expr></argument>, <argument pos:start="81:19" pos:end="81:30"><expr pos:start="81:19" pos:end="81:30"><name pos:start="81:19" pos:end="81:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:33" pos:end="81:58"><expr pos:start="81:33" pos:end="81:58"><literal type="string" pos:start="81:33" pos:end="81:58">"totalframes %d invalid\n"</literal></expr></argument>, <argument pos:start="81:61" pos:end="81:74"><expr pos:start="81:61" pos:end="81:74"><name pos:start="81:61" pos:end="81:74"><name pos:start="81:61" pos:end="81:61">c</name><operator pos:start="81:62" pos:end="81:63">-&gt;</operator><name pos:start="81:64" pos:end="81:74">totalframes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:18">return <expr pos:start="83:16" pos:end="83:17"><operator pos:start="83:16" pos:end="83:16">-</operator><literal type="number" pos:start="83:17" pos:end="83:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:38"><expr pos:start="89:5" pos:end="89:37"><name pos:start="89:5" pos:end="89:6">st</name> <operator pos:start="89:8" pos:end="89:8">=</operator> <call pos:start="89:10" pos:end="89:37"><name pos:start="89:10" pos:end="89:28">avformat_new_stream</name><argument_list pos:start="89:29" pos:end="89:37">(<argument pos:start="89:30" pos:end="89:30"><expr pos:start="89:30" pos:end="89:30"><name pos:start="89:30" pos:end="89:30">s</name></expr></argument>, <argument pos:start="89:33" pos:end="89:36"><expr pos:start="89:33" pos:end="89:36"><name pos:start="89:33" pos:end="89:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="93:31"><if pos:start="91:5" pos:end="93:31">if <condition pos:start="91:8" pos:end="91:12">(<expr pos:start="91:9" pos:end="91:11"><operator pos:start="91:9" pos:end="91:9">!</operator><name pos:start="91:10" pos:end="91:11">st</name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:31"><block_content pos:start="93:9" pos:end="93:31">

        <return pos:start="93:9" pos:end="93:31">return <expr pos:start="93:16" pos:end="93:30"><call pos:start="93:16" pos:end="93:30"><name pos:start="93:16" pos:end="93:22">AVERROR</name><argument_list pos:start="93:23" pos:end="93:30">(<argument pos:start="93:24" pos:end="93:29"><expr pos:start="93:24" pos:end="93:29"><name pos:start="93:24" pos:end="93:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:47"><expr pos:start="97:5" pos:end="97:46"><call pos:start="97:5" pos:end="97:46"><name pos:start="97:5" pos:end="97:23">avpriv_set_pts_info</name><argument_list pos:start="97:24" pos:end="97:46">(<argument pos:start="97:25" pos:end="97:26"><expr pos:start="97:25" pos:end="97:26"><name pos:start="97:25" pos:end="97:26">st</name></expr></argument>, <argument pos:start="97:29" pos:end="97:30"><expr pos:start="97:29" pos:end="97:30"><literal type="number" pos:start="97:29" pos:end="97:30">64</literal></expr></argument>, <argument pos:start="97:33" pos:end="97:33"><expr pos:start="97:33" pos:end="97:33"><literal type="number" pos:start="97:33" pos:end="97:33">1</literal></expr></argument>, <argument pos:start="97:36" pos:end="97:45"><expr pos:start="97:36" pos:end="97:45"><name pos:start="97:36" pos:end="97:45">samplerate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:23"><expr pos:start="99:5" pos:end="99:22"><name pos:start="99:5" pos:end="99:18"><name pos:start="99:5" pos:end="99:6">st</name><operator pos:start="99:7" pos:end="99:8">-&gt;</operator><name pos:start="99:9" pos:end="99:18">start_time</name></name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:27"><expr pos:start="101:5" pos:end="101:26"><name pos:start="101:5" pos:end="101:16"><name pos:start="101:5" pos:end="101:6">st</name><operator pos:start="101:7" pos:end="101:8">-&gt;</operator><name pos:start="101:9" pos:end="101:16">duration</name></name> <operator pos:start="101:18" pos:end="101:18">=</operator> <name pos:start="101:20" pos:end="101:26">datalen</name></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:55"><expr pos:start="105:5" pos:end="105:54"><name pos:start="105:5" pos:end="105:12">framepos</name> <operator pos:start="105:14" pos:end="105:14">=</operator> <call pos:start="105:16" pos:end="105:31"><name pos:start="105:16" pos:end="105:24">avio_tell</name><argument_list pos:start="105:25" pos:end="105:31">(<argument pos:start="105:26" pos:end="105:30"><expr pos:start="105:26" pos:end="105:30"><name pos:start="105:26" pos:end="105:30"><name pos:start="105:26" pos:end="105:26">s</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:30">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="105:33" pos:end="105:33">+</operator> <literal type="number" pos:start="105:35" pos:end="105:35">4</literal><operator pos:start="105:36" pos:end="105:36">*</operator><name pos:start="105:37" pos:end="105:50"><name pos:start="105:37" pos:end="105:37">c</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:50">totalframes</name></name> <operator pos:start="105:52" pos:end="105:52">+</operator> <literal type="number" pos:start="105:54" pos:end="105:54">4</literal></expr>;</expr_stmt>



    <for pos:start="109:5" pos:end="119:5">for <control pos:start="109:9" pos:end="109:40">(<init pos:start="109:10" pos:end="109:15"><expr pos:start="109:10" pos:end="109:14"><name pos:start="109:10" pos:end="109:10">i</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <literal type="number" pos:start="109:14" pos:end="109:14">0</literal></expr>;</init> <condition pos:start="109:17" pos:end="109:35"><expr pos:start="109:17" pos:end="109:34"><name pos:start="109:17" pos:end="109:17">i</name> <operator pos:start="109:19" pos:end="109:19">&lt;</operator> <name pos:start="109:21" pos:end="109:34"><name pos:start="109:21" pos:end="109:21">c</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:34">totalframes</name></name></expr>;</condition> <incr pos:start="109:37" pos:end="109:39"><expr pos:start="109:37" pos:end="109:39"><name pos:start="109:37" pos:end="109:37">i</name><operator pos:start="109:38" pos:end="109:39">++</operator></expr></incr>)</control> <block pos:start="109:42" pos:end="119:5">{<block_content pos:start="111:9" pos:end="117:25">

        <decl_stmt pos:start="111:9" pos:end="111:41"><decl pos:start="111:9" pos:end="111:40"><type pos:start="111:9" pos:end="111:16"><name pos:start="111:9" pos:end="111:16">uint32_t</name></type> <name pos:start="111:18" pos:end="111:21">size</name> <init pos:start="111:23" pos:end="111:40">= <expr pos:start="111:25" pos:end="111:40"><call pos:start="111:25" pos:end="111:40"><name pos:start="111:25" pos:end="111:33">avio_rl32</name><argument_list pos:start="111:34" pos:end="111:40">(<argument pos:start="111:35" pos:end="111:39"><expr pos:start="111:35" pos:end="111:39"><name pos:start="111:35" pos:end="111:39"><name pos:start="111:35" pos:end="111:35">s</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:39">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="113:9" pos:end="115:45"><expr pos:start="113:9" pos:end="115:44"><call pos:start="113:9" pos:end="115:44"><name pos:start="113:9" pos:end="113:26">av_add_index_entry</name><argument_list pos:start="113:27" pos:end="115:44">(<argument pos:start="113:28" pos:end="113:29"><expr pos:start="113:28" pos:end="113:29"><name pos:start="113:28" pos:end="113:29">st</name></expr></argument>, <argument pos:start="113:32" pos:end="113:39"><expr pos:start="113:32" pos:end="113:39"><name pos:start="113:32" pos:end="113:39">framepos</name></expr></argument>, <argument pos:start="113:42" pos:end="113:58"><expr pos:start="113:42" pos:end="113:58"><name pos:start="113:42" pos:end="113:42">i</name> <operator pos:start="113:44" pos:end="113:44">*</operator> <name pos:start="113:46" pos:end="113:58"><name pos:start="113:46" pos:end="113:46">c</name><operator pos:start="113:47" pos:end="113:48">-&gt;</operator><name pos:start="113:49" pos:end="113:58">frame_size</name></name></expr></argument>, <argument pos:start="113:61" pos:end="113:64"><expr pos:start="113:61" pos:end="113:64"><name pos:start="113:61" pos:end="113:64">size</name></expr></argument>, <argument pos:start="113:67" pos:end="113:67"><expr pos:start="113:67" pos:end="113:67"><literal type="number" pos:start="113:67" pos:end="113:67">0</literal></expr></argument>,

                           <argument pos:start="115:28" pos:end="115:43"><expr pos:start="115:28" pos:end="115:43"><name pos:start="115:28" pos:end="115:43">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:25"><expr pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:16">framepos</name> <operator pos:start="117:18" pos:end="117:19">+=</operator> <name pos:start="117:21" pos:end="117:24">size</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="121:5" pos:end="121:24"><expr pos:start="121:5" pos:end="121:23"><call pos:start="121:5" pos:end="121:23"><name pos:start="121:5" pos:end="121:13">avio_skip</name><argument_list pos:start="121:14" pos:end="121:23">(<argument pos:start="121:15" pos:end="121:19"><expr pos:start="121:15" pos:end="121:19"><name pos:start="121:15" pos:end="121:19"><name pos:start="121:15" pos:end="121:15">s</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:19">pb</name></name></expr></argument>, <argument pos:start="121:22" pos:end="121:22"><expr pos:start="121:22" pos:end="121:22"><literal type="number" pos:start="121:22" pos:end="121:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="121:26" pos:end="121:41">// seektable crc</comment>



    <expr_stmt pos:start="125:5" pos:end="125:47"><expr pos:start="125:5" pos:end="125:46"><name pos:start="125:5" pos:end="125:25"><name pos:start="125:5" pos:end="125:6">st</name><operator pos:start="125:7" pos:end="125:8">-&gt;</operator><name pos:start="125:9" pos:end="125:13">codec</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:25">codec_type</name></name> <operator pos:start="125:27" pos:end="125:27">=</operator> <name pos:start="125:29" pos:end="125:46">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:42"><expr pos:start="127:5" pos:end="127:41"><name pos:start="127:5" pos:end="127:23"><name pos:start="127:5" pos:end="127:6">st</name><operator pos:start="127:7" pos:end="127:8">-&gt;</operator><name pos:start="127:9" pos:end="127:13">codec</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:23">codec_id</name></name> <operator pos:start="127:25" pos:end="127:25">=</operator> <name pos:start="127:27" pos:end="127:41">AV_CODEC_ID_TTA</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:35"><expr pos:start="129:5" pos:end="129:34"><name pos:start="129:5" pos:end="129:23"><name pos:start="129:5" pos:end="129:6">st</name><operator pos:start="129:7" pos:end="129:8">-&gt;</operator><name pos:start="129:9" pos:end="129:13">codec</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:23">channels</name></name> <operator pos:start="129:25" pos:end="129:25">=</operator> <name pos:start="129:27" pos:end="129:34">channels</name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:40"><expr pos:start="131:5" pos:end="131:39"><name pos:start="131:5" pos:end="131:26"><name pos:start="131:5" pos:end="131:6">st</name><operator pos:start="131:7" pos:end="131:8">-&gt;</operator><name pos:start="131:9" pos:end="131:13">codec</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:26">sample_rate</name></name> <operator pos:start="131:28" pos:end="131:28">=</operator> <name pos:start="131:30" pos:end="131:39">samplerate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:43"><expr pos:start="133:5" pos:end="133:42"><name pos:start="133:5" pos:end="133:36"><name pos:start="133:5" pos:end="133:6">st</name><operator pos:start="133:7" pos:end="133:8">-&gt;</operator><name pos:start="133:9" pos:end="133:13">codec</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:36">bits_per_coded_sample</name></name> <operator pos:start="133:38" pos:end="133:38">=</operator> <name pos:start="133:40" pos:end="133:42">bps</name></expr>;</expr_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:64"><expr pos:start="137:5" pos:end="137:63"><name pos:start="137:5" pos:end="137:29"><name pos:start="137:5" pos:end="137:6">st</name><operator pos:start="137:7" pos:end="137:8">-&gt;</operator><name pos:start="137:9" pos:end="137:13">codec</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:29">extradata_size</name></name> <operator pos:start="137:31" pos:end="137:31">=</operator> <call pos:start="137:33" pos:end="137:48"><name pos:start="137:33" pos:end="137:41">avio_tell</name><argument_list pos:start="137:42" pos:end="137:48">(<argument pos:start="137:43" pos:end="137:47"><expr pos:start="137:43" pos:end="137:47"><name pos:start="137:43" pos:end="137:47"><name pos:start="137:43" pos:end="137:43">s</name><operator pos:start="137:44" pos:end="137:45">-&gt;</operator><name pos:start="137:46" pos:end="137:47">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="137:50" pos:end="137:50">-</operator> <name pos:start="137:52" pos:end="137:63">start_offset</name></expr>;</expr_stmt>

    <if_stmt pos:start="139:5" pos:end="147:5"><if pos:start="139:5" pos:end="147:5">if<condition pos:start="139:7" pos:end="139:101">(<expr pos:start="139:8" pos:end="139:100"><name pos:start="139:8" pos:end="139:32"><name pos:start="139:8" pos:end="139:9">st</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:16">codec</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:32">extradata_size</name></name><operator pos:start="139:33" pos:end="139:33">+</operator><name pos:start="139:34" pos:end="139:61">FF_INPUT_BUFFER_PADDING_SIZE</name> <operator pos:start="139:63" pos:end="139:64">&lt;=</operator> <operator pos:start="139:66" pos:end="139:66">(</operator><name pos:start="139:67" pos:end="139:74">unsigned</name><operator pos:start="139:75" pos:end="139:75">)</operator><name pos:start="139:76" pos:end="139:100"><name pos:start="139:76" pos:end="139:77">st</name><operator pos:start="139:78" pos:end="139:79">-&gt;</operator><name pos:start="139:80" pos:end="139:84">codec</name><operator pos:start="139:85" pos:end="139:86">-&gt;</operator><name pos:start="139:87" pos:end="139:100">extradata_size</name></name></expr>)</condition><block pos:start="139:102" pos:end="147:5">{<block_content pos:start="143:9" pos:end="145:18">

        <comment type="line" pos:start="141:9" pos:end="141:58">//this check is redundant as avio_read should fail</comment>

        <expr_stmt pos:start="143:9" pos:end="143:62"><expr pos:start="143:9" pos:end="143:61"><call pos:start="143:9" pos:end="143:61"><name pos:start="143:9" pos:end="143:14">av_log</name><argument_list pos:start="143:15" pos:end="143:61">(<argument pos:start="143:16" pos:end="143:16"><expr pos:start="143:16" pos:end="143:16"><name pos:start="143:16" pos:end="143:16">s</name></expr></argument>, <argument pos:start="143:19" pos:end="143:30"><expr pos:start="143:19" pos:end="143:30"><name pos:start="143:19" pos:end="143:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="143:33" pos:end="143:60"><expr pos:start="143:33" pos:end="143:60"><literal type="string" pos:start="143:33" pos:end="143:60">"extradata_size too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="145:9" pos:end="145:18">return <expr pos:start="145:16" pos:end="145:17"><operator pos:start="145:16" pos:end="145:16">-</operator><literal type="number" pos:start="145:17" pos:end="145:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:94"><expr pos:start="149:5" pos:end="149:93"><name pos:start="149:5" pos:end="149:24"><name pos:start="149:5" pos:end="149:6">st</name><operator pos:start="149:7" pos:end="149:8">-&gt;</operator><name pos:start="149:9" pos:end="149:13">codec</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:24">extradata</name></name> <operator pos:start="149:26" pos:end="149:26">=</operator> <call pos:start="149:28" pos:end="149:93"><name pos:start="149:28" pos:end="149:37">av_mallocz</name><argument_list pos:start="149:38" pos:end="149:93">(<argument pos:start="149:39" pos:end="149:92"><expr pos:start="149:39" pos:end="149:92"><name pos:start="149:39" pos:end="149:63"><name pos:start="149:39" pos:end="149:40">st</name><operator pos:start="149:41" pos:end="149:42">-&gt;</operator><name pos:start="149:43" pos:end="149:47">codec</name><operator pos:start="149:48" pos:end="149:49">-&gt;</operator><name pos:start="149:50" pos:end="149:63">extradata_size</name></name><operator pos:start="149:64" pos:end="149:64">+</operator><name pos:start="149:65" pos:end="149:92">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="157:5"><if pos:start="151:5" pos:end="157:5">if <condition pos:start="151:8" pos:end="151:30">(<expr pos:start="151:9" pos:end="151:29"><operator pos:start="151:9" pos:end="151:9">!</operator><name pos:start="151:10" pos:end="151:29"><name pos:start="151:10" pos:end="151:11">st</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:18">codec</name><operator pos:start="151:19" pos:end="151:20">-&gt;</operator><name pos:start="151:21" pos:end="151:29">extradata</name></name></expr>)</condition> <block pos:start="151:32" pos:end="157:5">{<block_content pos:start="153:9" pos:end="155:31">

        <expr_stmt pos:start="153:9" pos:end="153:38"><expr pos:start="153:9" pos:end="153:37"><name pos:start="153:9" pos:end="153:33"><name pos:start="153:9" pos:end="153:10">st</name><operator pos:start="153:11" pos:end="153:12">-&gt;</operator><name pos:start="153:13" pos:end="153:17">codec</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:33">extradata_size</name></name> <operator pos:start="153:35" pos:end="153:35">=</operator> <literal type="number" pos:start="153:37" pos:end="153:37">0</literal></expr>;</expr_stmt>

        <return pos:start="155:9" pos:end="155:31">return <expr pos:start="155:16" pos:end="155:30"><call pos:start="155:16" pos:end="155:30"><name pos:start="155:16" pos:end="155:22">AVERROR</name><argument_list pos:start="155:23" pos:end="155:30">(<argument pos:start="155:24" pos:end="155:29"><expr pos:start="155:24" pos:end="155:29"><name pos:start="155:24" pos:end="155:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:45"><expr pos:start="159:5" pos:end="159:44"><call pos:start="159:5" pos:end="159:44"><name pos:start="159:5" pos:end="159:13">avio_seek</name><argument_list pos:start="159:14" pos:end="159:44">(<argument pos:start="159:15" pos:end="159:19"><expr pos:start="159:15" pos:end="159:19"><name pos:start="159:15" pos:end="159:19"><name pos:start="159:15" pos:end="159:15">s</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:19">pb</name></name></expr></argument>, <argument pos:start="159:22" pos:end="159:33"><expr pos:start="159:22" pos:end="159:33"><name pos:start="159:22" pos:end="159:33">start_offset</name></expr></argument>, <argument pos:start="159:36" pos:end="159:43"><expr pos:start="159:36" pos:end="159:43"><name pos:start="159:36" pos:end="159:43">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:70"><expr pos:start="161:5" pos:end="161:69"><call pos:start="161:5" pos:end="161:69"><name pos:start="161:5" pos:end="161:13">avio_read</name><argument_list pos:start="161:14" pos:end="161:69">(<argument pos:start="161:15" pos:end="161:19"><expr pos:start="161:15" pos:end="161:19"><name pos:start="161:15" pos:end="161:19"><name pos:start="161:15" pos:end="161:15">s</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:19">pb</name></name></expr></argument>, <argument pos:start="161:22" pos:end="161:41"><expr pos:start="161:22" pos:end="161:41"><name pos:start="161:22" pos:end="161:41"><name pos:start="161:22" pos:end="161:23">st</name><operator pos:start="161:24" pos:end="161:25">-&gt;</operator><name pos:start="161:26" pos:end="161:30">codec</name><operator pos:start="161:31" pos:end="161:32">-&gt;</operator><name pos:start="161:33" pos:end="161:41">extradata</name></name></expr></argument>, <argument pos:start="161:44" pos:end="161:68"><expr pos:start="161:44" pos:end="161:68"><name pos:start="161:44" pos:end="161:68"><name pos:start="161:44" pos:end="161:45">st</name><operator pos:start="161:46" pos:end="161:47">-&gt;</operator><name pos:start="161:48" pos:end="161:52">codec</name><operator pos:start="161:53" pos:end="161:54">-&gt;</operator><name pos:start="161:55" pos:end="161:68">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="165:5" pos:end="165:13">return <expr pos:start="165:12" pos:end="165:12"><literal type="number" pos:start="165:12" pos:end="165:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
