<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23499.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">mpegts_raw_read_packet</name><parameter_list pos:start="1:34" pos:end="3:48">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:49">AVFormatContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:47"><decl pos:start="3:35" pos:end="3:47"><type pos:start="3:35" pos:end="3:47"><name pos:start="3:35" pos:end="3:42">AVPacket</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="7:5" pos:end="83:13">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MpegTSContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">ts</name> <init pos:start="7:23" pos:end="7:36">= <expr pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:17">pcr_h</name></decl>, <decl pos:start="11:20" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:20" pos:end="11:29">next_pcr_h</name></decl>, <decl pos:start="11:32" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:32" pos:end="11:34">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">pcr_l</name></decl>, <decl pos:start="13:16" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:25">next_pcr_l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:19">pcr_buf</name><index pos:start="15:20" pos:end="15:23">[<expr pos:start="15:21" pos:end="15:22"><literal type="number" pos:start="15:21" pos:end="15:22">12</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:47">(<expr pos:start="19:9" pos:end="19:46"><call pos:start="19:9" pos:end="19:42"><name pos:start="19:9" pos:end="19:21">av_new_packet</name><argument_list pos:start="19:22" pos:end="19:42">(<argument pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:25">pkt</name></expr></argument>, <argument pos:start="19:28" pos:end="19:41"><expr pos:start="19:28" pos:end="19:41"><name pos:start="19:28" pos:end="19:41">TS_PACKET_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="19:44" pos:end="19:44">&lt;</operator> <literal type="number" pos:start="19:46" pos:end="19:46">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:7">pkt</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:12">pos</name></name><operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:30"><name pos:start="23:15" pos:end="23:23">url_ftell</name><argument_list pos:start="23:24" pos:end="23:30">(<argument pos:start="23:25" pos:end="23:29"><expr pos:start="23:25" pos:end="23:29"><name pos:start="23:25" pos:end="23:29"><name pos:start="23:25" pos:end="23:25">s</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:61"><expr pos:start="25:5" pos:end="25:60"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:60"><name pos:start="25:11" pos:end="25:21">read_packet</name><argument_list pos:start="25:22" pos:end="25:60">(<argument pos:start="25:23" pos:end="25:27"><expr pos:start="25:23" pos:end="25:27"><name pos:start="25:23" pos:end="25:27"><name pos:start="25:23" pos:end="25:23">s</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:27">pb</name></name></expr></argument>, <argument pos:start="25:30" pos:end="25:38"><expr pos:start="25:30" pos:end="25:38"><name pos:start="25:30" pos:end="25:38"><name pos:start="25:30" pos:end="25:32">pkt</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:38">data</name></name></expr></argument>, <argument pos:start="25:41" pos:end="25:59"><expr pos:start="25:41" pos:end="25:59"><name pos:start="25:41" pos:end="25:59"><name pos:start="25:41" pos:end="25:42">ts</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:59">raw_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">&lt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>)</condition> <block pos:start="27:18" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:19">

        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><call pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:22">av_free_packet</name><argument_list pos:start="29:23" pos:end="29:27">(<argument pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="79:5"><if pos:start="35:5" pos:end="79:5">if <condition pos:start="35:8" pos:end="35:32">(<expr pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:10">ts</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:31">mpeg2ts_compute_pcr</name></name></expr>)</condition> <block pos:start="35:34" pos:end="79:5">{<block_content pos:start="39:9" pos:end="77:36">

        <comment type="block" pos:start="37:9" pos:end="37:47">/* compute exact PCR for each packet */</comment>

        <if_stmt pos:start="39:9" pos:end="71:9"><if pos:start="39:9" pos:end="71:9">if <condition pos:start="39:12" pos:end="39:54">(<expr pos:start="39:13" pos:end="39:53"><call pos:start="39:13" pos:end="39:48"><name pos:start="39:13" pos:end="39:21">parse_pcr</name><argument_list pos:start="39:22" pos:end="39:48">(<argument pos:start="39:23" pos:end="39:28"><expr pos:start="39:23" pos:end="39:28"><operator pos:start="39:23" pos:end="39:23">&amp;</operator><name pos:start="39:24" pos:end="39:28">pcr_h</name></expr></argument>, <argument pos:start="39:31" pos:end="39:36"><expr pos:start="39:31" pos:end="39:36"><operator pos:start="39:31" pos:end="39:31">&amp;</operator><name pos:start="39:32" pos:end="39:36">pcr_l</name></expr></argument>, <argument pos:start="39:39" pos:end="39:47"><expr pos:start="39:39" pos:end="39:47"><name pos:start="39:39" pos:end="39:47"><name pos:start="39:39" pos:end="39:41">pkt</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:47">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:50" pos:end="39:51">==</operator> <literal type="number" pos:start="39:53" pos:end="39:53">0</literal></expr>)</condition> <block pos:start="39:56" pos:end="71:9">{<block_content pos:start="43:13" pos:end="69:46">

            <comment type="block" pos:start="41:13" pos:end="41:81">/* we read the next PCR (XXX: optimize it by using a bigger buffer */</comment>

            <expr_stmt pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:15">pos</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:34"><name pos:start="43:19" pos:end="43:27">url_ftell</name><argument_list pos:start="43:28" pos:end="43:34">(<argument pos:start="43:29" pos:end="43:33"><expr pos:start="43:29" pos:end="43:33"><name pos:start="43:29" pos:end="43:33"><name pos:start="43:29" pos:end="43:29">s</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="45:13" pos:end="63:13">for<control pos:start="45:16" pos:end="45:53">(<init pos:start="45:17" pos:end="45:22"><expr pos:start="45:17" pos:end="45:21"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <literal type="number" pos:start="45:21" pos:end="45:21">0</literal></expr>;</init> <condition pos:start="45:24" pos:end="45:48"><expr pos:start="45:24" pos:end="45:47"><name pos:start="45:24" pos:end="45:24">i</name> <operator pos:start="45:26" pos:end="45:26">&lt;</operator> <name pos:start="45:28" pos:end="45:47">MAX_PACKET_READAHEAD</name></expr>;</condition> <incr pos:start="45:50" pos:end="45:52"><expr pos:start="45:50" pos:end="45:52"><name pos:start="45:50" pos:end="45:50">i</name><operator pos:start="45:51" pos:end="45:52">++</operator></expr></incr>)</control> <block pos:start="45:55" pos:end="63:13">{<block_content pos:start="47:17" pos:end="61:17">

                <expr_stmt pos:start="47:17" pos:end="47:74"><expr pos:start="47:17" pos:end="47:73"><call pos:start="47:17" pos:end="47:73"><name pos:start="47:17" pos:end="47:25">url_fseek</name><argument_list pos:start="47:26" pos:end="47:73">(<argument pos:start="47:27" pos:end="47:31"><expr pos:start="47:27" pos:end="47:31"><name pos:start="47:27" pos:end="47:31"><name pos:start="47:27" pos:end="47:27">s</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:31">pb</name></name></expr></argument>, <argument pos:start="47:34" pos:end="47:62"><expr pos:start="47:34" pos:end="47:62"><name pos:start="47:34" pos:end="47:36">pos</name> <operator pos:start="47:38" pos:end="47:38">+</operator> <name pos:start="47:40" pos:end="47:40">i</name> <operator pos:start="47:42" pos:end="47:42">*</operator> <name pos:start="47:44" pos:end="47:62"><name pos:start="47:44" pos:end="47:45">ts</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:62">raw_packet_size</name></name></expr></argument>, <argument pos:start="47:65" pos:end="47:72"><expr pos:start="47:65" pos:end="47:72"><name pos:start="47:65" pos:end="47:72">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:47"><expr pos:start="49:17" pos:end="49:46"><call pos:start="49:17" pos:end="49:46"><name pos:start="49:17" pos:end="49:26">get_buffer</name><argument_list pos:start="49:27" pos:end="49:46">(<argument pos:start="49:28" pos:end="49:32"><expr pos:start="49:28" pos:end="49:32"><name pos:start="49:28" pos:end="49:32"><name pos:start="49:28" pos:end="49:28">s</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:32">pb</name></name></expr></argument>, <argument pos:start="49:35" pos:end="49:41"><expr pos:start="49:35" pos:end="49:41"><name pos:start="49:35" pos:end="49:41">pcr_buf</name></expr></argument>, <argument pos:start="49:44" pos:end="49:45"><expr pos:start="49:44" pos:end="49:45"><literal type="number" pos:start="49:44" pos:end="49:45">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="51:17" pos:end="61:17"><if pos:start="51:17" pos:end="61:17">if <condition pos:start="51:20" pos:end="51:70">(<expr pos:start="51:21" pos:end="51:69"><call pos:start="51:21" pos:end="51:64"><name pos:start="51:21" pos:end="51:29">parse_pcr</name><argument_list pos:start="51:30" pos:end="51:64">(<argument pos:start="51:31" pos:end="51:41"><expr pos:start="51:31" pos:end="51:41"><operator pos:start="51:31" pos:end="51:31">&amp;</operator><name pos:start="51:32" pos:end="51:41">next_pcr_h</name></expr></argument>, <argument pos:start="51:44" pos:end="51:54"><expr pos:start="51:44" pos:end="51:54"><operator pos:start="51:44" pos:end="51:44">&amp;</operator><name pos:start="51:45" pos:end="51:54">next_pcr_l</name></expr></argument>, <argument pos:start="51:57" pos:end="51:63"><expr pos:start="51:57" pos:end="51:63"><name pos:start="51:57" pos:end="51:63">pcr_buf</name></expr></argument>)</argument_list></call> <operator pos:start="51:66" pos:end="51:67">==</operator> <literal type="number" pos:start="51:69" pos:end="51:69">0</literal></expr>)</condition> <block pos:start="51:72" pos:end="61:17">{<block_content pos:start="55:21" pos:end="59:26">

                    <comment type="block" pos:start="53:21" pos:end="53:49">/* XXX: not precise enough */</comment>

                    <expr_stmt pos:start="55:21" pos:end="57:32"><expr pos:start="55:21" pos:end="57:31"><name pos:start="55:21" pos:end="55:32"><name pos:start="55:21" pos:end="55:22">ts</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:32">pcr_incr</name></name> <operator pos:start="55:34" pos:end="55:34">=</operator> <operator pos:start="55:36" pos:end="55:36">(</operator><operator pos:start="55:37" pos:end="55:37">(</operator><name pos:start="55:38" pos:end="55:47">next_pcr_h</name> <operator pos:start="55:49" pos:end="55:49">-</operator> <name pos:start="55:51" pos:end="55:55">pcr_h</name><operator pos:start="55:56" pos:end="55:56">)</operator> <operator pos:start="55:58" pos:end="55:58">*</operator> <literal type="number" pos:start="55:60" pos:end="55:64">300</literal> <operator pos:start="55:64" pos:end="55:64">+</operator> <operator pos:start="55:66" pos:end="55:66">(</operator><name pos:start="55:67" pos:end="55:76">next_pcr_l</name> <operator pos:start="55:78" pos:end="55:78">-</operator> <name pos:start="55:80" pos:end="55:84">pcr_l</name><operator pos:start="55:85" pos:end="55:85">)</operator><operator pos:start="55:86" pos:end="55:86">)</operator> <operator pos:start="55:88" pos:end="55:88">/</operator>

                        <operator pos:start="57:25" pos:end="57:25">(</operator><name pos:start="57:26" pos:end="57:26">i</name> <operator pos:start="57:28" pos:end="57:28">+</operator> <literal type="number" pos:start="57:30" pos:end="57:30">1</literal><operator pos:start="57:31" pos:end="57:31">)</operator></expr>;</expr_stmt>

                    <break pos:start="59:21" pos:end="59:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="65:13" pos:end="65:44"><expr pos:start="65:13" pos:end="65:43"><call pos:start="65:13" pos:end="65:43"><name pos:start="65:13" pos:end="65:21">url_fseek</name><argument_list pos:start="65:22" pos:end="65:43">(<argument pos:start="65:23" pos:end="65:27"><expr pos:start="65:23" pos:end="65:27"><name pos:start="65:23" pos:end="65:27"><name pos:start="65:23" pos:end="65:23">s</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:27">pb</name></name></expr></argument>, <argument pos:start="65:30" pos:end="65:32"><expr pos:start="65:30" pos:end="65:32"><name pos:start="65:30" pos:end="65:32">pos</name></expr></argument>, <argument pos:start="65:35" pos:end="65:42"><expr pos:start="65:35" pos:end="65:42"><name pos:start="65:35" pos:end="65:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="67:13" pos:end="67:62">/* no next PCR found: we use previous increment */</comment>

            <expr_stmt pos:start="69:13" pos:end="69:46"><expr pos:start="69:13" pos:end="69:45"><name pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:14">ts</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:23">cur_pcr</name></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <name pos:start="69:27" pos:end="69:31">pcr_h</name> <operator pos:start="69:33" pos:end="69:33">*</operator> <literal type="number" pos:start="69:35" pos:end="69:39">300</literal> <operator pos:start="69:39" pos:end="69:39">+</operator> <name pos:start="69:41" pos:end="69:45">pcr_l</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:31"><expr pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:16"><name pos:start="73:9" pos:end="73:11">pkt</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:16">pts</name></name> <operator pos:start="73:18" pos:end="73:18">=</operator> <name pos:start="73:20" pos:end="73:30"><name pos:start="73:20" pos:end="73:21">ts</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:30">cur_pcr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:37"><expr pos:start="75:9" pos:end="75:36"><name pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:11">pkt</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:21">duration</name></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:36"><name pos:start="75:25" pos:end="75:26">ts</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:36">pcr_incr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:36"><expr pos:start="77:9" pos:end="77:35"><name pos:start="77:9" pos:end="77:19"><name pos:start="77:9" pos:end="77:10">ts</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:19">cur_pcr</name></name> <operator pos:start="77:21" pos:end="77:22">+=</operator> <name pos:start="77:24" pos:end="77:35"><name pos:start="77:24" pos:end="77:25">ts</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:35">pcr_incr</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:26"><expr pos:start="81:5" pos:end="81:25"><name pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:7">pkt</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:21">stream_index</name></name> <operator pos:start="81:23" pos:end="81:23">=</operator> <literal type="number" pos:start="81:25" pos:end="81:25">0</literal></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
