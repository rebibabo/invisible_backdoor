<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13599.c" pos:tabs="8"><function pos:start="1:1" pos:end="237:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">swf_read_header</name><parameter_list pos:start="1:27" pos:end="1:70">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:69"><decl pos:start="1:48" pos:end="1:69"><type pos:start="1:48" pos:end="1:69"><name pos:start="1:48" pos:end="1:65">AVFormatParameters</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:69">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="237:1">{<block_content pos:start="5:5" pos:end="235:13">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">SWFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">swf</name> <init pos:start="5:21" pos:end="5:23">= <expr pos:start="5:23" pos:end="5:23"><literal type="number" pos:start="5:23" pos:end="5:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ByteIOContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">pb</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">nbits</name></decl>, <decl pos:start="9:16" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:18">len</name></decl>, <decl pos:start="9:21" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:30">frame_rate</name></decl>, <decl pos:start="9:33" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:35">tag</name></decl>, <decl pos:start="9:38" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:38" pos:end="9:38">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">offset_t</name></type> <name pos:start="11:14" pos:end="11:24">firstTagOff</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:17">ast</name> <init pos:start="13:19" pos:end="13:21">= <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">AVStream</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:17">vst</name> <init pos:start="15:19" pos:end="15:21">= <expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:40"><expr pos:start="19:5" pos:end="19:39"><name pos:start="19:5" pos:end="19:7">swf</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:39"><name pos:start="19:11" pos:end="19:19">av_malloc</name><argument_list pos:start="19:20" pos:end="19:39">(<argument pos:start="19:21" pos:end="19:38"><expr pos:start="19:21" pos:end="19:38"><sizeof pos:start="19:21" pos:end="19:38">sizeof<argument_list pos:start="19:27" pos:end="19:38">(<argument pos:start="19:28" pos:end="19:37"><expr pos:start="19:28" pos:end="19:37"><name pos:start="19:28" pos:end="19:37">SWFContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:13">(<expr pos:start="21:9" pos:end="21:12"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:12">swf</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:16">priv_data</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:22">swf</name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:7">tag</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:22"><name pos:start="29:11" pos:end="29:18">get_be32</name><argument_list pos:start="29:19" pos:end="29:22">(<argument pos:start="29:20" pos:end="29:21"><expr pos:start="29:20" pos:end="29:21"><name pos:start="29:20" pos:end="29:21">pb</name></expr></argument>)</argument_list></call> <operator pos:start="29:24" pos:end="29:24">&amp;</operator> <literal type="number" pos:start="29:26" pos:end="29:35">0xffffff00</literal></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:41">(<expr pos:start="33:9" pos:end="33:40"><name pos:start="33:9" pos:end="33:11">tag</name> <operator pos:start="33:13" pos:end="33:14">==</operator> <call pos:start="33:16" pos:end="33:40"><name pos:start="33:16" pos:end="33:22">MKBETAG</name><argument_list pos:start="33:23" pos:end="33:40">(<argument pos:start="33:24" pos:end="33:26"><expr pos:start="33:24" pos:end="33:26"><literal type="char" pos:start="33:24" pos:end="33:26">'C'</literal></expr></argument>, <argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><literal type="char" pos:start="33:29" pos:end="33:31">'W'</literal></expr></argument>, <argument pos:start="33:34" pos:end="33:36"><expr pos:start="33:34" pos:end="33:36"><literal type="char" pos:start="33:34" pos:end="33:36">'S'</literal></expr></argument>, <argument pos:start="33:39" pos:end="33:39"><expr pos:start="33:39" pos:end="33:39"><literal type="number" pos:start="33:39" pos:end="33:39">0</literal></expr></argument>)</argument_list></call></expr>)</condition>

    <block pos:start="35:5" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:26">

        <expr_stmt pos:start="37:9" pos:end="37:73"><expr pos:start="37:9" pos:end="37:72"><call pos:start="37:9" pos:end="37:72"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:72">(<argument pos:start="37:16" pos:end="37:16"><expr pos:start="37:16" pos:end="37:16"><name pos:start="37:16" pos:end="37:16">s</name></expr></argument>, <argument pos:start="37:19" pos:end="37:30"><expr pos:start="37:19" pos:end="37:30"><name pos:start="37:19" pos:end="37:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:33" pos:end="37:71"><expr pos:start="37:33" pos:end="37:71"><literal type="string" pos:start="37:33" pos:end="37:71">"Compressed SWF format not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:26">return <expr pos:start="39:16" pos:end="39:25"><name pos:start="39:16" pos:end="39:25">AVERROR_IO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="45:26"><if pos:start="43:5" pos:end="45:26">if <condition pos:start="43:8" pos:end="43:41">(<expr pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:11">tag</name> <operator pos:start="43:13" pos:end="43:14">!=</operator> <call pos:start="43:16" pos:end="43:40"><name pos:start="43:16" pos:end="43:22">MKBETAG</name><argument_list pos:start="43:23" pos:end="43:40">(<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><literal type="char" pos:start="43:24" pos:end="43:26">'F'</literal></expr></argument>, <argument pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><literal type="char" pos:start="43:29" pos:end="43:31">'W'</literal></expr></argument>, <argument pos:start="43:34" pos:end="43:36"><expr pos:start="43:34" pos:end="43:36"><literal type="char" pos:start="43:34" pos:end="43:36">'S'</literal></expr></argument>, <argument pos:start="43:39" pos:end="43:39"><expr pos:start="43:39" pos:end="43:39"><literal type="number" pos:start="43:39" pos:end="43:39">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:26"><block_content pos:start="45:9" pos:end="45:26">

        <return pos:start="45:9" pos:end="45:26">return <expr pos:start="45:16" pos:end="45:25"><name pos:start="45:16" pos:end="45:25">AVERROR_IO</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:17"><expr pos:start="47:5" pos:end="47:16"><call pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:12">get_le32</name><argument_list pos:start="47:13" pos:end="47:16">(<argument pos:start="47:14" pos:end="47:15"><expr pos:start="47:14" pos:end="47:15"><name pos:start="47:14" pos:end="47:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="49:5" pos:end="49:29">/* skip rectangle size */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:30"><expr pos:start="51:5" pos:end="51:29"><name pos:start="51:5" pos:end="51:9">nbits</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <call pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:20">get_byte</name><argument_list pos:start="51:21" pos:end="51:24">(<argument pos:start="51:22" pos:end="51:23"><expr pos:start="51:22" pos:end="51:23"><name pos:start="51:22" pos:end="51:23">pb</name></expr></argument>)</argument_list></call> <operator pos:start="51:26" pos:end="51:27">&gt;&gt;</operator> <literal type="number" pos:start="51:29" pos:end="51:29">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:34"><expr pos:start="53:5" pos:end="53:33"><name pos:start="53:5" pos:end="53:7">len</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <operator pos:start="53:11" pos:end="53:11">(</operator><literal type="number" pos:start="53:12" pos:end="53:12">4</literal> <operator pos:start="53:14" pos:end="53:14">*</operator> <name pos:start="53:16" pos:end="53:20">nbits</name> <operator pos:start="53:22" pos:end="53:22">-</operator> <literal type="number" pos:start="53:24" pos:end="53:26">3</literal> <operator pos:start="53:26" pos:end="53:26">+</operator> <literal type="number" pos:start="53:28" pos:end="53:28">7</literal><operator pos:start="53:29" pos:end="53:29">)</operator> <operator pos:start="53:31" pos:end="53:31">/</operator> <literal type="number" pos:start="53:33" pos:end="53:33">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:23"><expr pos:start="55:5" pos:end="55:22"><call pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:13">url_fskip</name><argument_list pos:start="55:14" pos:end="55:22">(<argument pos:start="55:15" pos:end="55:16"><expr pos:start="55:15" pos:end="55:16"><name pos:start="55:15" pos:end="55:16">pb</name></expr></argument>, <argument pos:start="55:19" pos:end="55:21"><expr pos:start="55:19" pos:end="55:21"><name pos:start="55:19" pos:end="55:21">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:30"><expr pos:start="57:5" pos:end="57:29"><name pos:start="57:5" pos:end="57:14">frame_rate</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <call pos:start="57:18" pos:end="57:29"><name pos:start="57:18" pos:end="57:25">get_le16</name><argument_list pos:start="57:26" pos:end="57:29">(<argument pos:start="57:27" pos:end="57:28"><expr pos:start="57:27" pos:end="57:28"><name pos:start="57:27" pos:end="57:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:17"><expr pos:start="59:5" pos:end="59:16"><call pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:12">get_le16</name><argument_list pos:start="59:13" pos:end="59:16">(<argument pos:start="59:14" pos:end="59:15"><expr pos:start="59:14" pos:end="59:15"><name pos:start="59:14" pos:end="59:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="59:19" pos:end="59:35">/* frame count */</comment>



    <comment type="block" pos:start="63:5" pos:end="67:29">/* The Flash Player converts 8.8 frame rates

       to milliseconds internally. Do the same to get

       a correct framerate */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:52"><expr pos:start="69:5" pos:end="69:51"><name pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:7">swf</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:21">ms_per_frame</name></name> <operator pos:start="69:23" pos:end="69:23">=</operator> <operator pos:start="69:25" pos:end="69:25">(</operator> <literal type="number" pos:start="69:27" pos:end="69:30">1000</literal> <operator pos:start="69:32" pos:end="69:32">*</operator> <literal type="number" pos:start="69:34" pos:end="69:36">256</literal> <operator pos:start="69:38" pos:end="69:38">)</operator> <operator pos:start="69:40" pos:end="69:40">/</operator> <name pos:start="69:42" pos:end="69:51">frame_rate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:31"><expr pos:start="71:5" pos:end="71:30"><name pos:start="71:5" pos:end="71:26"><name pos:start="71:5" pos:end="71:7">swf</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:26">samples_per_frame</name></name> <operator pos:start="71:28" pos:end="71:28">=</operator> <literal type="number" pos:start="71:30" pos:end="71:30">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:20"><expr pos:start="73:5" pos:end="73:19"><name pos:start="73:5" pos:end="73:14"><name pos:start="73:5" pos:end="73:7">swf</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:14">ch_id</name></name> <operator pos:start="73:16" pos:end="73:16">=</operator> <operator pos:start="73:18" pos:end="73:18">-</operator><literal type="number" pos:start="73:19" pos:end="73:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:32"><expr pos:start="77:5" pos:end="77:31"><name pos:start="77:5" pos:end="77:15">firstTagOff</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <call pos:start="77:19" pos:end="77:31"><name pos:start="77:19" pos:end="77:27">url_ftell</name><argument_list pos:start="77:28" pos:end="77:31">(<argument pos:start="77:29" pos:end="77:30"><expr pos:start="77:29" pos:end="77:30"><name pos:start="77:29" pos:end="77:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="79:5" pos:end="229:5">for<control pos:start="79:8" pos:end="79:11">(<init pos:start="79:9" pos:end="79:9">;</init><condition pos:start="79:10" pos:end="79:10">;</condition><incr/>)</control> <block pos:start="79:13" pos:end="229:5">{<block_content pos:start="81:9" pos:end="227:9">

        <expr_stmt pos:start="81:9" pos:end="81:36"><expr pos:start="81:9" pos:end="81:35"><name pos:start="81:9" pos:end="81:11">tag</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="81:35"><name pos:start="81:15" pos:end="81:25">get_swf_tag</name><argument_list pos:start="81:26" pos:end="81:35">(<argument pos:start="81:27" pos:end="81:28"><expr pos:start="81:27" pos:end="81:28"><name pos:start="81:27" pos:end="81:28">pb</name></expr></argument>, <argument pos:start="81:31" pos:end="81:34"><expr pos:start="81:31" pos:end="81:34"><operator pos:start="81:31" pos:end="81:31">&amp;</operator><name pos:start="81:32" pos:end="81:34">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="103:9"><if pos:start="83:9" pos:end="103:9">if <condition pos:start="83:12" pos:end="83:20">(<expr pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:15">tag</name> <operator pos:start="83:17" pos:end="83:17">&lt;</operator> <literal type="number" pos:start="83:19" pos:end="83:19">0</literal></expr>)</condition> <block pos:start="83:22" pos:end="103:9">{<block_content pos:start="85:13" pos:end="101:30">

            <if_stmt pos:start="85:13" pos:end="97:13"><if pos:start="85:13" pos:end="97:13">if <condition pos:start="85:16" pos:end="85:29">( <expr pos:start="85:18" pos:end="85:27"><name pos:start="85:18" pos:end="85:20">ast</name> <operator pos:start="85:22" pos:end="85:23">||</operator> <name pos:start="85:25" pos:end="85:27">vst</name></expr> )</condition> <block pos:start="85:31" pos:end="97:13">{<block_content pos:start="87:17" pos:end="95:22">

                <if_stmt pos:start="87:17" pos:end="93:17"><if pos:start="87:17" pos:end="93:17">if <condition pos:start="87:20" pos:end="87:33">( <expr pos:start="87:22" pos:end="87:31"><name pos:start="87:22" pos:end="87:24">vst</name> <operator pos:start="87:26" pos:end="87:27">&amp;&amp;</operator> <name pos:start="87:29" pos:end="87:31">ast</name></expr> )</condition> <block pos:start="87:35" pos:end="93:17">{<block_content pos:start="89:21" pos:end="91:50">

                    <expr_stmt pos:start="89:21" pos:end="89:97"><expr pos:start="89:21" pos:end="89:96"><name pos:start="89:21" pos:end="89:45"><name pos:start="89:21" pos:end="89:23">vst</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:30">codec</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:41">time_base</name><operator pos:start="89:42" pos:end="89:42">.</operator><name pos:start="89:43" pos:end="89:45">den</name></name> <operator pos:start="89:47" pos:end="89:47">=</operator> <name pos:start="89:49" pos:end="89:71"><name pos:start="89:49" pos:end="89:51">ast</name><operator pos:start="89:52" pos:end="89:53">-&gt;</operator><name pos:start="89:54" pos:end="89:58">codec</name><operator pos:start="89:59" pos:end="89:60">-&gt;</operator><name pos:start="89:61" pos:end="89:71">sample_rate</name></name> <operator pos:start="89:73" pos:end="89:73">/</operator> <name pos:start="89:75" pos:end="89:96"><name pos:start="89:75" pos:end="89:77">swf</name><operator pos:start="89:78" pos:end="89:79">-&gt;</operator><name pos:start="89:80" pos:end="89:96">samples_per_frame</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:50"><expr pos:start="91:21" pos:end="91:49"><name pos:start="91:21" pos:end="91:45"><name pos:start="91:21" pos:end="91:23">vst</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:30">codec</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:41">time_base</name><operator pos:start="91:42" pos:end="91:42">.</operator><name pos:start="91:43" pos:end="91:45">num</name></name> <operator pos:start="91:47" pos:end="91:47">=</operator> <literal type="number" pos:start="91:49" pos:end="91:49">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="95:17" pos:end="95:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:63"><expr pos:start="99:13" pos:end="99:62"><call pos:start="99:13" pos:end="99:62"><name pos:start="99:13" pos:end="99:18">av_log</name><argument_list pos:start="99:19" pos:end="99:62">(<argument pos:start="99:20" pos:end="99:20"><expr pos:start="99:20" pos:end="99:20"><name pos:start="99:20" pos:end="99:20">s</name></expr></argument>, <argument pos:start="99:23" pos:end="99:34"><expr pos:start="99:23" pos:end="99:34"><name pos:start="99:23" pos:end="99:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="99:37" pos:end="99:61"><expr pos:start="99:37" pos:end="99:61"><literal type="string" pos:start="99:37" pos:end="99:61">"No media found in SWF\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="101:13" pos:end="101:30">return <expr pos:start="101:20" pos:end="101:29"><name pos:start="101:20" pos:end="101:29">AVERROR_IO</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="105:9" pos:end="227:9"><if pos:start="105:9" pos:end="145:9">if <condition pos:start="105:12" pos:end="105:44">( <expr pos:start="105:14" pos:end="105:43"><name pos:start="105:14" pos:end="105:16">tag</name> <operator pos:start="105:18" pos:end="105:19">==</operator> <name pos:start="105:21" pos:end="105:35">TAG_VIDEOSTREAM</name> <operator pos:start="105:37" pos:end="105:38">&amp;&amp;</operator> <operator pos:start="105:40" pos:end="105:40">!</operator><name pos:start="105:41" pos:end="105:43">vst</name></expr>)</condition> <block pos:start="105:46" pos:end="145:9">{<block_content pos:start="107:13" pos:end="143:13">

            <decl_stmt pos:start="107:13" pos:end="107:25"><decl pos:start="107:13" pos:end="107:24"><type pos:start="107:13" pos:end="107:15"><name pos:start="107:13" pos:end="107:15">int</name></type> <name pos:start="107:17" pos:end="107:24">codec_id</name></decl>;</decl_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:38"><expr pos:start="109:13" pos:end="109:37"><name pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:15">swf</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:22">ch_id</name></name> <operator pos:start="109:24" pos:end="109:24">=</operator> <call pos:start="109:26" pos:end="109:37"><name pos:start="109:26" pos:end="109:33">get_le16</name><argument_list pos:start="109:34" pos:end="109:37">(<argument pos:start="109:35" pos:end="109:36"><expr pos:start="109:35" pos:end="109:36"><name pos:start="109:35" pos:end="109:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:25"><expr pos:start="111:13" pos:end="111:24"><call pos:start="111:13" pos:end="111:24"><name pos:start="111:13" pos:end="111:20">get_le16</name><argument_list pos:start="111:21" pos:end="111:24">(<argument pos:start="111:22" pos:end="111:23"><expr pos:start="111:22" pos:end="111:23"><name pos:start="111:22" pos:end="111:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:25"><expr pos:start="113:13" pos:end="113:24"><call pos:start="113:13" pos:end="113:24"><name pos:start="113:13" pos:end="113:20">get_le16</name><argument_list pos:start="113:21" pos:end="113:24">(<argument pos:start="113:22" pos:end="113:23"><expr pos:start="113:22" pos:end="113:23"><name pos:start="113:22" pos:end="113:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:25"><expr pos:start="115:13" pos:end="115:24"><call pos:start="115:13" pos:end="115:24"><name pos:start="115:13" pos:end="115:20">get_le16</name><argument_list pos:start="115:21" pos:end="115:24">(<argument pos:start="115:22" pos:end="115:23"><expr pos:start="115:22" pos:end="115:23"><name pos:start="115:22" pos:end="115:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:25"><expr pos:start="117:13" pos:end="117:24"><call pos:start="117:13" pos:end="117:24"><name pos:start="117:13" pos:end="117:20">get_byte</name><argument_list pos:start="117:21" pos:end="117:24">(<argument pos:start="117:22" pos:end="117:23"><expr pos:start="117:22" pos:end="117:23"><name pos:start="117:22" pos:end="117:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="119:13" pos:end="119:32">/* Check for FLV1 */</comment>

            <expr_stmt pos:start="121:13" pos:end="121:66"><expr pos:start="121:13" pos:end="121:65"><name pos:start="121:13" pos:end="121:20">codec_id</name> <operator pos:start="121:22" pos:end="121:22">=</operator> <call pos:start="121:24" pos:end="121:65"><name pos:start="121:24" pos:end="121:35">codec_get_id</name><argument_list pos:start="121:36" pos:end="121:65">(<argument pos:start="121:37" pos:end="121:50"><expr pos:start="121:37" pos:end="121:50"><name pos:start="121:37" pos:end="121:50">swf_codec_tags</name></expr></argument>, <argument pos:start="121:53" pos:end="121:64"><expr pos:start="121:53" pos:end="121:64"><call pos:start="121:53" pos:end="121:64"><name pos:start="121:53" pos:end="121:60">get_byte</name><argument_list pos:start="121:61" pos:end="121:64">(<argument pos:start="121:62" pos:end="121:63"><expr pos:start="121:62" pos:end="121:63"><name pos:start="121:62" pos:end="121:63">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="143:13"><if pos:start="123:13" pos:end="143:13">if <condition pos:start="123:16" pos:end="123:27">( <expr pos:start="123:18" pos:end="123:25"><name pos:start="123:18" pos:end="123:25">codec_id</name></expr> )</condition> <block pos:start="123:29" pos:end="143:13">{<block_content pos:start="125:17" pos:end="141:17">

                <expr_stmt pos:start="125:17" pos:end="125:42"><expr pos:start="125:17" pos:end="125:41"><name pos:start="125:17" pos:end="125:19">vst</name> <operator pos:start="125:21" pos:end="125:21">=</operator> <call pos:start="125:23" pos:end="125:41"><name pos:start="125:23" pos:end="125:35">av_new_stream</name><argument_list pos:start="125:36" pos:end="125:41">(<argument pos:start="125:37" pos:end="125:37"><expr pos:start="125:37" pos:end="125:37"><name pos:start="125:37" pos:end="125:37">s</name></expr></argument>, <argument pos:start="125:40" pos:end="125:40"><expr pos:start="125:40" pos:end="125:40"><literal type="number" pos:start="125:40" pos:end="125:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:50"><expr pos:start="127:17" pos:end="127:49"><call pos:start="127:17" pos:end="127:49"><name pos:start="127:17" pos:end="127:31">av_set_pts_info</name><argument_list pos:start="127:32" pos:end="127:49">(<argument pos:start="127:33" pos:end="127:35"><expr pos:start="127:33" pos:end="127:35"><name pos:start="127:33" pos:end="127:35">vst</name></expr></argument>, <argument pos:start="127:38" pos:end="127:39"><expr pos:start="127:38" pos:end="127:39"><literal type="number" pos:start="127:38" pos:end="127:39">24</literal></expr></argument>, <argument pos:start="127:42" pos:end="127:42"><expr pos:start="127:42" pos:end="127:42"><literal type="number" pos:start="127:42" pos:end="127:42">1</literal></expr></argument>, <argument pos:start="127:45" pos:end="127:48"><expr pos:start="127:45" pos:end="127:48"><literal type="number" pos:start="127:45" pos:end="127:48">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="127:52" pos:end="127:73">/* 24 bit pts in ms */</comment>



                <expr_stmt pos:start="131:17" pos:end="131:58"><expr pos:start="131:17" pos:end="131:57"><name pos:start="131:17" pos:end="131:38"><name pos:start="131:17" pos:end="131:19">vst</name><operator pos:start="131:20" pos:end="131:21">-&gt;</operator><name pos:start="131:22" pos:end="131:26">codec</name><operator pos:start="131:27" pos:end="131:28">-&gt;</operator><name pos:start="131:29" pos:end="131:38">codec_type</name></name> <operator pos:start="131:40" pos:end="131:40">=</operator> <name pos:start="131:42" pos:end="131:57">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:48"><expr pos:start="133:17" pos:end="133:47"><name pos:start="133:17" pos:end="133:36"><name pos:start="133:17" pos:end="133:19">vst</name><operator pos:start="133:20" pos:end="133:21">-&gt;</operator><name pos:start="133:22" pos:end="133:26">codec</name><operator pos:start="133:27" pos:end="133:28">-&gt;</operator><name pos:start="133:29" pos:end="133:36">codec_id</name></name> <operator pos:start="133:38" pos:end="133:38">=</operator> <name pos:start="133:40" pos:end="133:47">codec_id</name></expr>;</expr_stmt>

                <if_stmt pos:start="135:17" pos:end="141:17"><if pos:start="135:17" pos:end="141:17">if <condition pos:start="135:20" pos:end="135:45">( <expr pos:start="135:22" pos:end="135:43"><name pos:start="135:22" pos:end="135:43"><name pos:start="135:22" pos:end="135:24">swf</name><operator pos:start="135:25" pos:end="135:26">-&gt;</operator><name pos:start="135:27" pos:end="135:43">samples_per_frame</name></name></expr> )</condition> <block pos:start="135:47" pos:end="141:17">{<block_content pos:start="137:21" pos:end="139:50">

                    <expr_stmt pos:start="137:21" pos:end="137:74"><expr pos:start="137:21" pos:end="137:73"><name pos:start="137:21" pos:end="137:45"><name pos:start="137:21" pos:end="137:23">vst</name><operator pos:start="137:24" pos:end="137:25">-&gt;</operator><name pos:start="137:26" pos:end="137:30">codec</name><operator pos:start="137:31" pos:end="137:32">-&gt;</operator><name pos:start="137:33" pos:end="137:41">time_base</name><operator pos:start="137:42" pos:end="137:42">.</operator><name pos:start="137:43" pos:end="137:45">den</name></name> <operator pos:start="137:47" pos:end="137:47">=</operator> <literal type="number" pos:start="137:49" pos:end="137:53">1000.</literal> <operator pos:start="137:55" pos:end="137:55">/</operator> <name pos:start="137:57" pos:end="137:73"><name pos:start="137:57" pos:end="137:59">swf</name><operator pos:start="137:60" pos:end="137:61">-&gt;</operator><name pos:start="137:62" pos:end="137:73">ms_per_frame</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="139:21" pos:end="139:50"><expr pos:start="139:21" pos:end="139:49"><name pos:start="139:21" pos:end="139:45"><name pos:start="139:21" pos:end="139:23">vst</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:30">codec</name><operator pos:start="139:31" pos:end="139:32">-&gt;</operator><name pos:start="139:33" pos:end="139:41">time_base</name><operator pos:start="139:42" pos:end="139:42">.</operator><name pos:start="139:43" pos:end="139:45">num</name></name> <operator pos:start="139:47" pos:end="139:47">=</operator> <literal type="number" pos:start="139:49" pos:end="139:49">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="145:11" pos:end="223:9">else if <condition pos:start="145:19" pos:end="145:80">( <expr pos:start="145:21" pos:end="145:79"><operator pos:start="145:21" pos:end="145:21">(</operator> <name pos:start="145:23" pos:end="145:25">tag</name> <operator pos:start="145:27" pos:end="145:28">==</operator> <name pos:start="145:30" pos:end="145:43">TAG_STREAMHEAD</name> <operator pos:start="145:45" pos:end="145:46">||</operator> <name pos:start="145:48" pos:end="145:50">tag</name> <operator pos:start="145:52" pos:end="145:53">==</operator> <name pos:start="145:55" pos:end="145:69">TAG_STREAMHEAD2</name> <operator pos:start="145:71" pos:end="145:71">)</operator> <operator pos:start="145:73" pos:end="145:74">&amp;&amp;</operator> <operator pos:start="145:76" pos:end="145:76">!</operator><name pos:start="145:77" pos:end="145:79">ast</name></expr>)</condition> <block pos:start="145:82" pos:end="223:9">{<block_content pos:start="149:13" pos:end="221:13">

            <comment type="block" pos:start="147:13" pos:end="147:33">/* streaming found */</comment>

            <expr_stmt pos:start="149:13" pos:end="149:25"><expr pos:start="149:13" pos:end="149:24"><call pos:start="149:13" pos:end="149:24"><name pos:start="149:13" pos:end="149:20">get_byte</name><argument_list pos:start="149:21" pos:end="149:24">(<argument pos:start="149:22" pos:end="149:23"><expr pos:start="149:22" pos:end="149:23"><name pos:start="149:22" pos:end="149:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:29"><expr pos:start="151:13" pos:end="151:28"><name pos:start="151:13" pos:end="151:13">v</name> <operator pos:start="151:15" pos:end="151:15">=</operator> <call pos:start="151:17" pos:end="151:28"><name pos:start="151:17" pos:end="151:24">get_byte</name><argument_list pos:start="151:25" pos:end="151:28">(<argument pos:start="151:26" pos:end="151:27"><expr pos:start="151:26" pos:end="151:27"><name pos:start="151:26" pos:end="151:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:50"><expr pos:start="153:13" pos:end="153:49"><name pos:start="153:13" pos:end="153:34"><name pos:start="153:13" pos:end="153:15">swf</name><operator pos:start="153:16" pos:end="153:17">-&gt;</operator><name pos:start="153:18" pos:end="153:34">samples_per_frame</name></name> <operator pos:start="153:36" pos:end="153:36">=</operator> <call pos:start="153:38" pos:end="153:49"><name pos:start="153:38" pos:end="153:45">get_le16</name><argument_list pos:start="153:46" pos:end="153:49">(<argument pos:start="153:47" pos:end="153:48"><expr pos:start="153:47" pos:end="153:48"><name pos:start="153:47" pos:end="153:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="155:13" pos:end="157:36"><if pos:start="155:13" pos:end="157:36">if <condition pos:start="155:16" pos:end="155:23">(<expr pos:start="155:17" pos:end="155:22"><name pos:start="155:17" pos:end="155:19">len</name><operator pos:start="155:20" pos:end="155:21">!=</operator><literal type="number" pos:start="155:22" pos:end="155:22">4</literal></expr>)</condition><block type="pseudo" pos:start="157:17" pos:end="157:36"><block_content pos:start="157:17" pos:end="157:36">

                <expr_stmt pos:start="157:17" pos:end="157:36"><expr pos:start="157:17" pos:end="157:35"><call pos:start="157:17" pos:end="157:35"><name pos:start="157:17" pos:end="157:25">url_fskip</name><argument_list pos:start="157:26" pos:end="157:35">(<argument pos:start="157:27" pos:end="157:28"><expr pos:start="157:27" pos:end="157:28"><name pos:start="157:27" pos:end="157:28">pb</name></expr></argument>,<argument pos:start="157:30" pos:end="157:34"><expr pos:start="157:30" pos:end="157:34"><name pos:start="157:30" pos:end="157:32">len</name><operator pos:start="157:33" pos:end="157:33">-</operator><literal type="number" pos:start="157:34" pos:end="157:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="159:13" pos:end="159:44">/* if mp3 streaming found, OK */</comment>

            <if_stmt pos:start="161:13" pos:end="221:13"><if pos:start="161:13" pos:end="221:13">if <condition pos:start="161:16" pos:end="161:32">(<expr pos:start="161:17" pos:end="161:31"><operator pos:start="161:17" pos:end="161:17">(</operator><name pos:start="161:18" pos:end="161:18">v</name> <operator pos:start="161:20" pos:end="161:20">&amp;</operator> <literal type="number" pos:start="161:22" pos:end="161:25">0x20</literal><operator pos:start="161:26" pos:end="161:26">)</operator> <operator pos:start="161:28" pos:end="161:29">!=</operator> <literal type="number" pos:start="161:31" pos:end="161:31">0</literal></expr>)</condition> <block pos:start="161:34" pos:end="221:13">{<block_content pos:start="163:17" pos:end="219:52">

                <if_stmt pos:start="163:17" pos:end="167:17"><if pos:start="163:17" pos:end="167:17">if <condition pos:start="163:20" pos:end="163:45">( <expr pos:start="163:22" pos:end="163:43"><name pos:start="163:22" pos:end="163:24">tag</name> <operator pos:start="163:26" pos:end="163:27">==</operator> <name pos:start="163:29" pos:end="163:43">TAG_STREAMHEAD2</name></expr> )</condition> <block pos:start="163:47" pos:end="167:17">{<block_content pos:start="165:21" pos:end="165:33">

                    <expr_stmt pos:start="165:21" pos:end="165:33"><expr pos:start="165:21" pos:end="165:32"><call pos:start="165:21" pos:end="165:32"><name pos:start="165:21" pos:end="165:28">get_le16</name><argument_list pos:start="165:29" pos:end="165:32">(<argument pos:start="165:30" pos:end="165:31"><expr pos:start="165:30" pos:end="165:31"><name pos:start="165:30" pos:end="165:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:42"><expr pos:start="169:17" pos:end="169:41"><name pos:start="169:17" pos:end="169:19">ast</name> <operator pos:start="169:21" pos:end="169:21">=</operator> <call pos:start="169:23" pos:end="169:41"><name pos:start="169:23" pos:end="169:35">av_new_stream</name><argument_list pos:start="169:36" pos:end="169:41">(<argument pos:start="169:37" pos:end="169:37"><expr pos:start="169:37" pos:end="169:37"><name pos:start="169:37" pos:end="169:37">s</name></expr></argument>, <argument pos:start="169:40" pos:end="169:40"><expr pos:start="169:40" pos:end="169:40"><literal type="number" pos:start="169:40" pos:end="169:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:50"><expr pos:start="171:17" pos:end="171:49"><call pos:start="171:17" pos:end="171:49"><name pos:start="171:17" pos:end="171:31">av_set_pts_info</name><argument_list pos:start="171:32" pos:end="171:49">(<argument pos:start="171:33" pos:end="171:35"><expr pos:start="171:33" pos:end="171:35"><name pos:start="171:33" pos:end="171:35">ast</name></expr></argument>, <argument pos:start="171:38" pos:end="171:39"><expr pos:start="171:38" pos:end="171:39"><literal type="number" pos:start="171:38" pos:end="171:39">24</literal></expr></argument>, <argument pos:start="171:42" pos:end="171:42"><expr pos:start="171:42" pos:end="171:42"><literal type="number" pos:start="171:42" pos:end="171:42">1</literal></expr></argument>, <argument pos:start="171:45" pos:end="171:48"><expr pos:start="171:45" pos:end="171:48"><literal type="number" pos:start="171:45" pos:end="171:48">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="171:52" pos:end="171:73">/* 24 bit pts in ms */</comment>

                <if_stmt pos:start="173:17" pos:end="175:35"><if pos:start="173:17" pos:end="175:35">if <condition pos:start="173:20" pos:end="173:25">(<expr pos:start="173:21" pos:end="173:24"><operator pos:start="173:21" pos:end="173:21">!</operator><name pos:start="173:22" pos:end="173:24">ast</name></expr>)</condition><block type="pseudo" pos:start="175:21" pos:end="175:35"><block_content pos:start="175:21" pos:end="175:35">

                    <return pos:start="175:21" pos:end="175:35">return <expr pos:start="175:28" pos:end="175:34"><operator pos:start="175:28" pos:end="175:28">-</operator><name pos:start="175:29" pos:end="175:34">ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>



                <if_stmt pos:start="179:17" pos:end="185:45"><if pos:start="179:17" pos:end="181:45">if <condition pos:start="179:20" pos:end="179:29">(<expr pos:start="179:21" pos:end="179:28"><name pos:start="179:21" pos:end="179:21">v</name> <operator pos:start="179:23" pos:end="179:23">&amp;</operator> <literal type="number" pos:start="179:25" pos:end="179:28">0x01</literal></expr>)</condition><block type="pseudo" pos:start="181:21" pos:end="181:45"><block_content pos:start="181:21" pos:end="181:45">

                    <expr_stmt pos:start="181:21" pos:end="181:45"><expr pos:start="181:21" pos:end="181:44"><name pos:start="181:21" pos:end="181:40"><name pos:start="181:21" pos:end="181:23">ast</name><operator pos:start="181:24" pos:end="181:25">-&gt;</operator><name pos:start="181:26" pos:end="181:30">codec</name><operator pos:start="181:31" pos:end="181:32">-&gt;</operator><name pos:start="181:33" pos:end="181:40">channels</name></name> <operator pos:start="181:42" pos:end="181:42">=</operator> <literal type="number" pos:start="181:44" pos:end="181:44">2</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="183:17" pos:end="185:45">else<block type="pseudo" pos:start="185:21" pos:end="185:45"><block_content pos:start="185:21" pos:end="185:45">

                    <expr_stmt pos:start="185:21" pos:end="185:45"><expr pos:start="185:21" pos:end="185:44"><name pos:start="185:21" pos:end="185:40"><name pos:start="185:21" pos:end="185:23">ast</name><operator pos:start="185:24" pos:end="185:25">-&gt;</operator><name pos:start="185:26" pos:end="185:30">codec</name><operator pos:start="185:31" pos:end="185:32">-&gt;</operator><name pos:start="185:33" pos:end="185:40">channels</name></name> <operator pos:start="185:42" pos:end="185:42">=</operator> <literal type="number" pos:start="185:44" pos:end="185:44">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <switch pos:start="189:17" pos:end="215:17">switch<condition pos:start="189:23" pos:end="189:38">(<expr pos:start="189:24" pos:end="189:37"><operator pos:start="189:24" pos:end="189:24">(</operator><name pos:start="189:25" pos:end="189:25">v</name><operator pos:start="189:26" pos:end="189:27">&gt;&gt;</operator> <literal type="number" pos:start="189:29" pos:end="189:29">2</literal><operator pos:start="189:30" pos:end="189:30">)</operator> <operator pos:start="189:32" pos:end="189:32">&amp;</operator> <literal type="number" pos:start="189:34" pos:end="189:37">0x03</literal></expr>)</condition> <block pos:start="189:40" pos:end="215:17">{<block_content pos:start="191:17" pos:end="213:38">

                <case pos:start="191:17" pos:end="191:23">case <expr pos:start="191:22" pos:end="191:22"><literal type="number" pos:start="191:22" pos:end="191:22">1</literal></expr>:</case>

                    <expr_stmt pos:start="193:21" pos:end="193:52"><expr pos:start="193:21" pos:end="193:51"><name pos:start="193:21" pos:end="193:43"><name pos:start="193:21" pos:end="193:23">ast</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:30">codec</name><operator pos:start="193:31" pos:end="193:32">-&gt;</operator><name pos:start="193:33" pos:end="193:43">sample_rate</name></name> <operator pos:start="193:45" pos:end="193:45">=</operator> <literal type="number" pos:start="193:47" pos:end="193:51">11025</literal></expr>;</expr_stmt>

                    <break pos:start="195:21" pos:end="195:26">break;</break>

                <case pos:start="197:17" pos:end="197:23">case <expr pos:start="197:22" pos:end="197:22"><literal type="number" pos:start="197:22" pos:end="197:22">2</literal></expr>:</case>

                    <expr_stmt pos:start="199:21" pos:end="199:52"><expr pos:start="199:21" pos:end="199:51"><name pos:start="199:21" pos:end="199:43"><name pos:start="199:21" pos:end="199:23">ast</name><operator pos:start="199:24" pos:end="199:25">-&gt;</operator><name pos:start="199:26" pos:end="199:30">codec</name><operator pos:start="199:31" pos:end="199:32">-&gt;</operator><name pos:start="199:33" pos:end="199:43">sample_rate</name></name> <operator pos:start="199:45" pos:end="199:45">=</operator> <literal type="number" pos:start="199:47" pos:end="199:51">22050</literal></expr>;</expr_stmt>

                    <break pos:start="201:21" pos:end="201:26">break;</break>

                <case pos:start="203:17" pos:end="203:23">case <expr pos:start="203:22" pos:end="203:22"><literal type="number" pos:start="203:22" pos:end="203:22">3</literal></expr>:</case>

                    <expr_stmt pos:start="205:21" pos:end="205:52"><expr pos:start="205:21" pos:end="205:51"><name pos:start="205:21" pos:end="205:43"><name pos:start="205:21" pos:end="205:23">ast</name><operator pos:start="205:24" pos:end="205:25">-&gt;</operator><name pos:start="205:26" pos:end="205:30">codec</name><operator pos:start="205:31" pos:end="205:32">-&gt;</operator><name pos:start="205:33" pos:end="205:43">sample_rate</name></name> <operator pos:start="205:45" pos:end="205:45">=</operator> <literal type="number" pos:start="205:47" pos:end="205:51">44100</literal></expr>;</expr_stmt>

                    <break pos:start="207:21" pos:end="207:26">break;</break>

                <default pos:start="209:17" pos:end="209:24">default:</default>

                    <expr_stmt pos:start="211:21" pos:end="211:33"><expr pos:start="211:21" pos:end="211:32"><call pos:start="211:21" pos:end="211:32"><name pos:start="211:21" pos:end="211:27">av_free</name><argument_list pos:start="211:28" pos:end="211:32">(<argument pos:start="211:29" pos:end="211:31"><expr pos:start="211:29" pos:end="211:31"><name pos:start="211:29" pos:end="211:31">ast</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="213:21" pos:end="213:38">return <expr pos:start="213:28" pos:end="213:37"><name pos:start="213:28" pos:end="213:37">AVERROR_IO</name></expr>;</return>

                </block_content>}</block></switch>

                <expr_stmt pos:start="217:17" pos:end="217:58"><expr pos:start="217:17" pos:end="217:57"><name pos:start="217:17" pos:end="217:38"><name pos:start="217:17" pos:end="217:19">ast</name><operator pos:start="217:20" pos:end="217:21">-&gt;</operator><name pos:start="217:22" pos:end="217:26">codec</name><operator pos:start="217:27" pos:end="217:28">-&gt;</operator><name pos:start="217:29" pos:end="217:38">codec_type</name></name> <operator pos:start="217:40" pos:end="217:40">=</operator> <name pos:start="217:42" pos:end="217:57">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:52"><expr pos:start="219:17" pos:end="219:51"><name pos:start="219:17" pos:end="219:36"><name pos:start="219:17" pos:end="219:19">ast</name><operator pos:start="219:20" pos:end="219:21">-&gt;</operator><name pos:start="219:22" pos:end="219:26">codec</name><operator pos:start="219:27" pos:end="219:28">-&gt;</operator><name pos:start="219:29" pos:end="219:36">codec_id</name></name> <operator pos:start="219:38" pos:end="219:38">=</operator> <name pos:start="219:40" pos:end="219:51">CODEC_ID_MP3</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="223:11" pos:end="227:9">else <block pos:start="223:16" pos:end="227:9">{<block_content pos:start="225:13" pos:end="225:31">

            <expr_stmt pos:start="225:13" pos:end="225:31"><expr pos:start="225:13" pos:end="225:30"><call pos:start="225:13" pos:end="225:30"><name pos:start="225:13" pos:end="225:21">url_fskip</name><argument_list pos:start="225:22" pos:end="225:30">(<argument pos:start="225:23" pos:end="225:24"><expr pos:start="225:23" pos:end="225:24"><name pos:start="225:23" pos:end="225:24">pb</name></expr></argument>, <argument pos:start="225:27" pos:end="225:29"><expr pos:start="225:27" pos:end="225:29"><name pos:start="225:27" pos:end="225:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="231:5" pos:end="231:41"><expr pos:start="231:5" pos:end="231:40"><call pos:start="231:5" pos:end="231:40"><name pos:start="231:5" pos:end="231:13">url_fseek</name><argument_list pos:start="231:14" pos:end="231:40">(<argument pos:start="231:15" pos:end="231:16"><expr pos:start="231:15" pos:end="231:16"><name pos:start="231:15" pos:end="231:16">pb</name></expr></argument>, <argument pos:start="231:19" pos:end="231:29"><expr pos:start="231:19" pos:end="231:29"><name pos:start="231:19" pos:end="231:29">firstTagOff</name></expr></argument>, <argument pos:start="231:32" pos:end="231:39"><expr pos:start="231:32" pos:end="231:39"><name pos:start="231:32" pos:end="231:39">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="235:5" pos:end="235:13">return <expr pos:start="235:12" pos:end="235:12"><literal type="number" pos:start="235:12" pos:end="235:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
