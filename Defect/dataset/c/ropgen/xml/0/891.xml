<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/891.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint32_t</name></type> <name pos:start="1:10" pos:end="1:24">helper_efdctuiz</name> <parameter_list pos:start="1:26" pos:end="1:39">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:34"><name pos:start="1:27" pos:end="1:34">uint64_t</name></type> <name pos:start="1:36" pos:end="1:38">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:66">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:15">CPU_DoubleU</name></type> <name pos:start="5:17" pos:end="5:17">u</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:15"><expr pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:5">u</name><operator pos:start="9:6" pos:end="9:6">.</operator><name pos:start="9:7" pos:end="9:8">ll</name></name> <operator pos:start="9:10" pos:end="9:10">=</operator> <name pos:start="9:12" pos:end="9:14">val</name></expr>;</expr_stmt>

    <comment type="block" pos:start="11:5" pos:end="11:56">/* NaN are not treated the same way IEEE 754 does */</comment>

    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:38">(<expr pos:start="13:9" pos:end="13:37"><call pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:16">unlikely</name><argument_list pos:start="13:17" pos:end="13:37">(<argument pos:start="13:18" pos:end="13:36"><expr pos:start="13:18" pos:end="13:36"><call pos:start="13:18" pos:end="13:36"><name pos:start="13:18" pos:end="13:31">float64_is_nan</name><argument_list pos:start="13:32" pos:end="13:36">(<argument pos:start="13:33" pos:end="13:35"><expr pos:start="13:33" pos:end="13:35"><name pos:start="13:33" pos:end="13:35"><name pos:start="13:33" pos:end="13:33">u</name><operator pos:start="13:34" pos:end="13:34">.</operator><name pos:start="13:35" pos:end="13:35">d</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="19:5" pos:end="19:66">return <expr pos:start="19:12" pos:end="19:65"><call pos:start="19:12" pos:end="19:65"><name pos:start="19:12" pos:end="19:42">float64_to_uint32_round_to_zero</name><argument_list pos:start="19:43" pos:end="19:65">(<argument pos:start="19:44" pos:end="19:46"><expr pos:start="19:44" pos:end="19:46"><name pos:start="19:44" pos:end="19:46"><name pos:start="19:44" pos:end="19:44">u</name><operator pos:start="19:45" pos:end="19:45">.</operator><name pos:start="19:46" pos:end="19:46">d</name></name></expr></argument>, <argument pos:start="19:49" pos:end="19:64"><expr pos:start="19:49" pos:end="19:64"><operator pos:start="19:49" pos:end="19:49">&amp;</operator><name pos:start="19:50" pos:end="19:64"><name pos:start="19:50" pos:end="19:52">env</name><operator pos:start="19:53" pos:end="19:54">-&gt;</operator><name pos:start="19:55" pos:end="19:64">vec_status</name></name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
