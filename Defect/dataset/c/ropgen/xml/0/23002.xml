<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23002.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:24">vring_notify</name><parameter_list pos:start="1:25" pos:end="1:59">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:37">VirtIODevice</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">vdev</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:54">VirtQueue</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">vq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:70">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint16_t</name></type> <name pos:start="5:14" pos:end="5:16">old</name></decl>, <decl pos:start="5:19" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:19" pos:end="5:21">new</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:10">v</name></decl>;</decl_stmt>

    <comment type="block" pos:start="9:5" pos:end="9:74">/* We need to expose used array entries before checking used event. */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:13"><expr pos:start="11:5" pos:end="11:12"><call pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:10">smp_mb</name><argument_list pos:start="11:11" pos:end="11:12">()</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="13:70">/* Always notify when queue is empty (when feature acknowledge) */</comment>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="17:64">(<expr pos:start="15:9" pos:end="17:63"><call pos:start="15:9" pos:end="15:58"><name pos:start="15:9" pos:end="15:26">virtio_has_feature</name><argument_list pos:start="15:27" pos:end="15:58">(<argument pos:start="15:28" pos:end="15:31"><expr pos:start="15:28" pos:end="15:31"><name pos:start="15:28" pos:end="15:31">vdev</name></expr></argument>, <argument pos:start="15:34" pos:end="15:57"><expr pos:start="15:34" pos:end="15:57"><name pos:start="15:34" pos:end="15:57">VIRTIO_F_NOTIFY_ON_EMPTY</name></expr></argument>)</argument_list></call> <operator pos:start="15:60" pos:end="15:61">&amp;&amp;</operator>

        <operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:18"><name pos:start="17:10" pos:end="17:11">vq</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:18">inuse</name></name> <operator pos:start="17:20" pos:end="17:21">&amp;&amp;</operator> <call pos:start="17:23" pos:end="17:41"><name pos:start="17:23" pos:end="17:37">vring_avail_idx</name><argument_list pos:start="17:38" pos:end="17:41">(<argument pos:start="17:39" pos:end="17:40"><expr pos:start="17:39" pos:end="17:40"><name pos:start="17:39" pos:end="17:40">vq</name></expr></argument>)</argument_list></call> <operator pos:start="17:43" pos:end="17:44">==</operator> <name pos:start="17:46" pos:end="17:63"><name pos:start="17:46" pos:end="17:47">vq</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:63">last_avail_idx</name></name></expr>)</condition> <block pos:start="17:66" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:20">

        <return pos:start="19:9" pos:end="19:20">return <expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:19">true</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:59">(<expr pos:start="25:9" pos:end="25:58"><operator pos:start="25:9" pos:end="25:9">!</operator><call pos:start="25:10" pos:end="25:58"><name pos:start="25:10" pos:end="25:27">virtio_has_feature</name><argument_list pos:start="25:28" pos:end="25:58">(<argument pos:start="25:29" pos:end="25:32"><expr pos:start="25:29" pos:end="25:32"><name pos:start="25:29" pos:end="25:32">vdev</name></expr></argument>, <argument pos:start="25:35" pos:end="25:57"><expr pos:start="25:35" pos:end="25:57"><name pos:start="25:35" pos:end="25:57">VIRTIO_RING_F_EVENT_IDX</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:61" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:69">

        <return pos:start="27:9" pos:end="27:69">return <expr pos:start="27:16" pos:end="27:68"><operator pos:start="27:16" pos:end="27:16">!</operator><operator pos:start="27:17" pos:end="27:17">(</operator><call pos:start="27:18" pos:end="27:38"><name pos:start="27:18" pos:end="27:34">vring_avail_flags</name><argument_list pos:start="27:35" pos:end="27:38">(<argument pos:start="27:36" pos:end="27:37"><expr pos:start="27:36" pos:end="27:37"><name pos:start="27:36" pos:end="27:37">vq</name></expr></argument>)</argument_list></call> <operator pos:start="27:40" pos:end="27:40">&amp;</operator> <name pos:start="27:42" pos:end="27:67">VRING_AVAIL_F_NO_INTERRUPT</name><operator pos:start="27:68" pos:end="27:68">)</operator></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:5">v</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <name pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:10">vq</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:32">signalled_used_valid</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:36"><expr pos:start="35:5" pos:end="35:35"><name pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:6">vq</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:28">signalled_used_valid</name></name> <operator pos:start="35:30" pos:end="35:30">=</operator> <name pos:start="35:32" pos:end="35:35">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:29"><expr pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:7">old</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <name pos:start="37:11" pos:end="37:28"><name pos:start="37:11" pos:end="37:12">vq</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:28">signalled_used</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:50"><expr pos:start="39:5" pos:end="39:49"><name pos:start="39:5" pos:end="39:7">new</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <name pos:start="39:11" pos:end="39:28"><name pos:start="39:11" pos:end="39:12">vq</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:28">signalled_used</name></name> <operator pos:start="39:30" pos:end="39:30">=</operator> <call pos:start="39:32" pos:end="39:49"><name pos:start="39:32" pos:end="39:45">vring_used_idx</name><argument_list pos:start="39:46" pos:end="39:49">(<argument pos:start="39:47" pos:end="39:48"><expr pos:start="39:47" pos:end="39:48"><name pos:start="39:47" pos:end="39:48">vq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="41:5" pos:end="41:70">return <expr pos:start="41:12" pos:end="41:69"><operator pos:start="41:12" pos:end="41:12">!</operator><name pos:start="41:13" pos:end="41:13">v</name> <operator pos:start="41:15" pos:end="41:16">||</operator> <call pos:start="41:18" pos:end="41:69"><name pos:start="41:18" pos:end="41:33">vring_need_event</name><argument_list pos:start="41:34" pos:end="41:69">(<argument pos:start="41:35" pos:end="41:58"><expr pos:start="41:35" pos:end="41:58"><call pos:start="41:35" pos:end="41:58"><name pos:start="41:35" pos:end="41:54">vring_get_used_event</name><argument_list pos:start="41:55" pos:end="41:58">(<argument pos:start="41:56" pos:end="41:57"><expr pos:start="41:56" pos:end="41:57"><name pos:start="41:56" pos:end="41:57">vq</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:61" pos:end="41:63"><expr pos:start="41:61" pos:end="41:63"><name pos:start="41:61" pos:end="41:63">new</name></expr></argument>, <argument pos:start="41:66" pos:end="41:68"><expr pos:start="41:66" pos:end="41:68"><name pos:start="41:66" pos:end="41:68">old</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
