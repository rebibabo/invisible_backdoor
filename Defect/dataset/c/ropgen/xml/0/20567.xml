<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20567.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">cirrus_invalidate_region</name><parameter_list pos:start="1:37" pos:end="5:47">(<parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><name pos:start="1:38" pos:end="1:51">CirrusVGAState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type> <name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:70"><decl pos:start="1:58" pos:end="1:70"><type pos:start="1:58" pos:end="1:70"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:70">off_begin</name></decl></parameter>,

				     <parameter pos:start="3:38" pos:end="3:50"><decl pos:start="3:38" pos:end="3:50"><type pos:start="3:38" pos:end="3:50"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:50">off_pitch</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:68"><decl pos:start="3:53" pos:end="3:68"><type pos:start="3:53" pos:end="3:68"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:68">bytesperline</name></decl></parameter>,

				     <parameter pos:start="5:38" pos:end="5:46"><decl pos:start="5:38" pos:end="5:46"><type pos:start="5:38" pos:end="5:46"><name pos:start="5:38" pos:end="5:40">int</name></type> <name pos:start="5:42" pos:end="5:46">lines</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="39:1">{<block_content pos:start="9:5" pos:end="37:5">

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">off_cur</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">off_cur_end</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:22">(<expr pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:17">off_pitch</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr>)</condition> <block pos:start="17:24" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:38">

        <expr_stmt pos:start="19:9" pos:end="19:38"><expr pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:17">off_begin</name> <operator pos:start="19:19" pos:end="19:20">-=</operator> <name pos:start="19:22" pos:end="19:33">bytesperline</name> <operator pos:start="19:35" pos:end="19:35">-</operator> <literal type="number" pos:start="19:37" pos:end="19:37">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="25:5" pos:end="37:5">for <control pos:start="25:9" pos:end="25:31">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">y</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:26"><expr pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:17">y</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:25">lines</name></expr>;</condition> <incr pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><name pos:start="25:28" pos:end="25:28">y</name><operator pos:start="25:29" pos:end="25:30">++</operator></expr></incr>)</control> <block pos:start="25:33" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:31">

	<expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:15">off_cur</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:27">off_begin</name></expr>;</expr_stmt>

	<expr_stmt pos:start="29:9" pos:end="29:69"><expr pos:start="29:9" pos:end="29:68"><name pos:start="29:9" pos:end="29:19">off_cur_end</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <operator pos:start="29:23" pos:end="29:23">(</operator><name pos:start="29:24" pos:end="29:30">off_cur</name> <operator pos:start="29:32" pos:end="29:32">+</operator> <name pos:start="29:34" pos:end="29:45">bytesperline</name><operator pos:start="29:46" pos:end="29:46">)</operator> <operator pos:start="29:48" pos:end="29:48">&amp;</operator> <name pos:start="29:50" pos:end="29:68"><name pos:start="29:50" pos:end="29:50">s</name><operator pos:start="29:51" pos:end="29:52">-&gt;</operator><name pos:start="29:53" pos:end="29:68">cirrus_addr_mask</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:39"><expr pos:start="31:9" pos:end="31:38"><call pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:14">assert</name><argument_list pos:start="31:15" pos:end="31:38">(<argument pos:start="31:16" pos:end="31:37"><expr pos:start="31:16" pos:end="31:37"><name pos:start="31:16" pos:end="31:26">off_cur_end</name> <operator pos:start="31:28" pos:end="31:29">&gt;=</operator> <name pos:start="31:31" pos:end="31:37">off_cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:78"><expr pos:start="33:9" pos:end="33:77"><call pos:start="33:9" pos:end="33:77"><name pos:start="33:9" pos:end="33:31">memory_region_set_dirty</name><argument_list pos:start="33:32" pos:end="33:77">(<argument pos:start="33:33" pos:end="33:44"><expr pos:start="33:33" pos:end="33:44"><operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:44"><name pos:start="33:34" pos:end="33:34">s</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:39">vga</name><operator pos:start="33:40" pos:end="33:40">.</operator><name pos:start="33:41" pos:end="33:44">vram</name></name></expr></argument>, <argument pos:start="33:47" pos:end="33:53"><expr pos:start="33:47" pos:end="33:53"><name pos:start="33:47" pos:end="33:53">off_cur</name></expr></argument>, <argument pos:start="33:56" pos:end="33:76"><expr pos:start="33:56" pos:end="33:76"><name pos:start="33:56" pos:end="33:66">off_cur_end</name> <operator pos:start="33:68" pos:end="33:68">-</operator> <name pos:start="33:70" pos:end="33:76">off_cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:17">off_begin</name> <operator pos:start="35:19" pos:end="35:20">+=</operator> <name pos:start="35:22" pos:end="35:30">off_pitch</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
