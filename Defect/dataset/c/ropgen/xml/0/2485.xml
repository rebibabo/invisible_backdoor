<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2485.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:16">coroutine_fn</name></type> <name pos:start="1:18" pos:end="1:30">blk_co_preadv</name><parameter_list pos:start="1:31" pos:end="5:54">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:43">BlockBackend</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">blk</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:57">int64_t</name></type> <name pos:start="1:59" pos:end="1:64">offset</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:49"><decl pos:start="3:32" pos:end="3:49"><type pos:start="3:32" pos:end="3:49"><name pos:start="3:32" pos:end="3:39">unsigned</name> <name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:49">bytes</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:69"><decl pos:start="3:52" pos:end="3:69"><type pos:start="3:52" pos:end="3:69"><name pos:start="3:52" pos:end="3:63">QEMUIOVector</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:69">qiov</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:53"><decl pos:start="5:32" pos:end="5:53"><type pos:start="5:32" pos:end="5:53"><name pos:start="5:32" pos:end="5:47">BdrvRequestFlags</name></type> <name pos:start="5:49" pos:end="5:53">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="39:1">{<block_content pos:start="9:5" pos:end="37:67">

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:64"><expr pos:start="13:5" pos:end="13:63"><call pos:start="13:5" pos:end="13:63"><name pos:start="13:5" pos:end="13:23">trace_blk_co_preadv</name><argument_list pos:start="13:24" pos:end="13:63">(<argument pos:start="13:25" pos:end="13:27"><expr pos:start="13:25" pos:end="13:27"><name pos:start="13:25" pos:end="13:27">blk</name></expr></argument>, <argument pos:start="13:30" pos:end="13:40"><expr pos:start="13:30" pos:end="13:40"><call pos:start="13:30" pos:end="13:40"><name pos:start="13:30" pos:end="13:35">blk_bs</name><argument_list pos:start="13:36" pos:end="13:40">(<argument pos:start="13:37" pos:end="13:39"><expr pos:start="13:37" pos:end="13:39"><name pos:start="13:37" pos:end="13:39">blk</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:43" pos:end="13:48"><expr pos:start="13:43" pos:end="13:48"><name pos:start="13:43" pos:end="13:48">offset</name></expr></argument>, <argument pos:start="13:51" pos:end="13:55"><expr pos:start="13:51" pos:end="13:55"><name pos:start="13:51" pos:end="13:55">bytes</name></expr></argument>, <argument pos:start="13:58" pos:end="13:62"><expr pos:start="13:58" pos:end="13:62"><name pos:start="13:58" pos:end="13:62">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:53"><expr pos:start="17:5" pos:end="17:52"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:52"><name pos:start="17:11" pos:end="17:32">blk_check_byte_request</name><argument_list pos:start="17:33" pos:end="17:52">(<argument pos:start="17:34" pos:end="17:36"><expr pos:start="17:34" pos:end="17:36"><name pos:start="17:34" pos:end="17:36">blk</name></expr></argument>, <argument pos:start="17:39" pos:end="17:44"><expr pos:start="17:39" pos:end="17:44"><name pos:start="17:39" pos:end="17:44">offset</name></expr></argument>, <argument pos:start="17:47" pos:end="17:51"><expr pos:start="17:47" pos:end="17:51"><name pos:start="17:47" pos:end="17:51">bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition> <block pos:start="19:18" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:19">

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:29">/* throttling disk I/O */</comment>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:35">(<expr pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:11">blk</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:19">public</name><operator pos:start="29:20" pos:end="29:20">.</operator><name pos:start="29:21" pos:end="29:34">throttle_state</name></name></expr>)</condition> <block pos:start="29:37" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:65">

        <expr_stmt pos:start="31:9" pos:end="31:65"><expr pos:start="31:9" pos:end="31:64"><call pos:start="31:9" pos:end="31:64"><name pos:start="31:9" pos:end="31:45">throttle_group_co_io_limits_intercept</name><argument_list pos:start="31:46" pos:end="31:64">(<argument pos:start="31:47" pos:end="31:49"><expr pos:start="31:47" pos:end="31:49"><name pos:start="31:47" pos:end="31:49">blk</name></expr></argument>, <argument pos:start="31:52" pos:end="31:56"><expr pos:start="31:52" pos:end="31:56"><name pos:start="31:52" pos:end="31:56">bytes</name></expr></argument>, <argument pos:start="31:59" pos:end="31:63"><expr pos:start="31:59" pos:end="31:63"><name pos:start="31:59" pos:end="31:63">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="37:5" pos:end="37:67">return <expr pos:start="37:12" pos:end="37:66"><call pos:start="37:12" pos:end="37:66"><name pos:start="37:12" pos:end="37:25">bdrv_co_preadv</name><argument_list pos:start="37:26" pos:end="37:66">(<argument pos:start="37:27" pos:end="37:37"><expr pos:start="37:27" pos:end="37:37"><call pos:start="37:27" pos:end="37:37"><name pos:start="37:27" pos:end="37:32">blk_bs</name><argument_list pos:start="37:33" pos:end="37:37">(<argument pos:start="37:34" pos:end="37:36"><expr pos:start="37:34" pos:end="37:36"><name pos:start="37:34" pos:end="37:36">blk</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:40" pos:end="37:45"><expr pos:start="37:40" pos:end="37:45"><name pos:start="37:40" pos:end="37:45">offset</name></expr></argument>, <argument pos:start="37:48" pos:end="37:52"><expr pos:start="37:48" pos:end="37:52"><name pos:start="37:48" pos:end="37:52">bytes</name></expr></argument>, <argument pos:start="37:55" pos:end="37:58"><expr pos:start="37:55" pos:end="37:58"><name pos:start="37:55" pos:end="37:58">qiov</name></expr></argument>, <argument pos:start="37:61" pos:end="37:65"><expr pos:start="37:61" pos:end="37:65"><name pos:start="37:61" pos:end="37:65">flags</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
