<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20002.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">dct_quantize_c</name><parameter_list pos:start="1:26" pos:end="5:50">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:40">MpegEncContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, 

                        <parameter pos:start="3:25" pos:end="3:38"><decl pos:start="3:25" pos:end="3:38"><type pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:31">DCTELEM</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:38">block</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:45"><decl pos:start="3:41" pos:end="3:45"><type pos:start="3:41" pos:end="3:45"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:45">n</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:34"><decl pos:start="5:25" pos:end="5:34"><type pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:27">int</name></type> <name pos:start="5:29" pos:end="5:34">qscale</name></decl></parameter>, <parameter pos:start="5:37" pos:end="5:49"><decl pos:start="5:37" pos:end="5:49"><type pos:start="5:37" pos:end="5:49"><name pos:start="5:37" pos:end="5:39">int</name> <modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:49">overflow</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="133:1">{<block_content pos:start="9:5" pos:end="131:25">

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:19">level</name></decl>, <decl pos:start="9:22" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:34">last_non_zero</name></decl>, <decl pos:start="9:37" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:37" pos:end="9:37">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:15"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:19">qmat</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">bias</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">max</name><init pos:start="15:12" pos:end="15:13">=<expr pos:start="15:13" pos:end="15:13"><literal type="number" pos:start="15:13" pos:end="15:13">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:40"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:27">threshold1</name></decl>, <decl pos:start="17:30" pos:end="17:39"><type ref="prev" pos:start="17:5" pos:end="17:16"/><name pos:start="17:30" pos:end="17:39">threshold2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:20"><expr pos:start="21:5" pos:end="21:19"><call pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:11">av_fdct</name> <argument_list pos:start="21:13" pos:end="21:19">(<argument pos:start="21:14" pos:end="21:18"><expr pos:start="21:14" pos:end="21:18"><name pos:start="21:14" pos:end="21:18">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="27:50">/* we need this permutation so that we correct the IDCT

       permutation. will be moved into DCT code */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:25"><expr pos:start="29:5" pos:end="29:24"><call pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:17">block_permute</name><argument_list pos:start="29:18" pos:end="29:24">(<argument pos:start="29:19" pos:end="29:23"><expr pos:start="29:19" pos:end="29:23"><name pos:start="29:19" pos:end="29:23">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="77:5"><if pos:start="33:5" pos:end="67:5">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:19">mb_intra</name></name></expr>)</condition> <block pos:start="33:22" pos:end="67:5">{<block_content pos:start="35:9" pos:end="65:71">

        <if_stmt pos:start="35:9" pos:end="51:23"><if pos:start="35:9" pos:end="47:9">if <condition pos:start="35:12" pos:end="35:25">(<expr pos:start="35:13" pos:end="35:24"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:24"><name pos:start="35:14" pos:end="35:14">s</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:24">h263_aic</name></name></expr>)</condition> <block pos:start="35:27" pos:end="47:9">{<block_content pos:start="37:13" pos:end="45:23">

            <if_stmt pos:start="37:13" pos:end="43:34"><if pos:start="37:13" pos:end="39:34">if <condition pos:start="37:16" pos:end="37:22">(<expr pos:start="37:17" pos:end="37:21"><name pos:start="37:17" pos:end="37:17">n</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <literal type="number" pos:start="37:21" pos:end="37:21">4</literal></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:34"><block_content pos:start="39:17" pos:end="39:34">

                <expr_stmt pos:start="39:17" pos:end="39:34"><expr pos:start="39:17" pos:end="39:33"><name pos:start="39:17" pos:end="39:17">q</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:33"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:33">y_dc_scale</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="41:13" pos:end="43:34">else<block type="pseudo" pos:start="43:17" pos:end="43:34"><block_content pos:start="43:17" pos:end="43:34">

                <expr_stmt pos:start="43:17" pos:end="43:34"><expr pos:start="43:17" pos:end="43:33"><name pos:start="43:17" pos:end="43:17">q</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:33"><name pos:start="43:21" pos:end="43:21">s</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:33">c_dc_scale</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:23"><expr pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:13">q</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:17">q</name> <operator pos:start="45:19" pos:end="45:20">&lt;&lt;</operator> <literal type="number" pos:start="45:22" pos:end="45:22">3</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="51:23">else<block type="pseudo" pos:start="51:13" pos:end="51:23"><block_content pos:start="51:13" pos:end="51:23">

            <comment type="block" pos:start="49:13" pos:end="49:58">/* For AIC we skip quant/dequant of INTRADC */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:23"><expr pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:13">q</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <literal type="number" pos:start="51:17" pos:end="51:17">1</literal> <operator pos:start="51:19" pos:end="51:20">&lt;&lt;</operator> <literal type="number" pos:start="51:22" pos:end="51:22">3</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            

        <comment type="block" pos:start="55:9" pos:end="55:54">/* note: block[0] is assumed to be positive */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:45"><expr pos:start="57:9" pos:end="57:44"><name pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:13">block</name><index pos:start="57:14" pos:end="57:16">[<expr pos:start="57:15" pos:end="57:15"><literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>]</index></name> <operator pos:start="57:18" pos:end="57:18">=</operator> <operator pos:start="57:20" pos:end="57:20">(</operator><name pos:start="57:21" pos:end="57:28"><name pos:start="57:21" pos:end="57:25">block</name><index pos:start="57:26" pos:end="57:28">[<expr pos:start="57:27" pos:end="57:27"><literal type="number" pos:start="57:27" pos:end="57:27">0</literal></expr>]</index></name> <operator pos:start="57:30" pos:end="57:30">+</operator> <operator pos:start="57:32" pos:end="57:32">(</operator><name pos:start="57:33" pos:end="57:33">q</name> <operator pos:start="57:35" pos:end="57:36">&gt;&gt;</operator> <literal type="number" pos:start="57:38" pos:end="57:38">1</literal><operator pos:start="57:39" pos:end="57:39">)</operator><operator pos:start="57:40" pos:end="57:40">)</operator> <operator pos:start="57:42" pos:end="57:42">/</operator> <name pos:start="57:44" pos:end="57:44">q</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:14"><expr pos:start="59:9" pos:end="59:13"><name pos:start="59:9" pos:end="59:9">i</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <literal type="number" pos:start="59:13" pos:end="59:13">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:26"><expr pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:21">last_non_zero</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="number" pos:start="61:25" pos:end="61:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:41"><expr pos:start="63:9" pos:end="63:40"><name pos:start="63:9" pos:end="63:12">qmat</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <name pos:start="63:16" pos:end="63:40"><name pos:start="63:16" pos:end="63:16">s</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:32">q_intra_matrix</name><index pos:start="63:33" pos:end="63:40">[<expr pos:start="63:34" pos:end="63:39"><name pos:start="63:34" pos:end="63:39">qscale</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:71"><expr pos:start="65:9" pos:end="65:70"><name pos:start="65:9" pos:end="65:12">bias</name><operator pos:start="65:13" pos:end="65:13">=</operator> <name pos:start="65:15" pos:end="65:33"><name pos:start="65:15" pos:end="65:15">s</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:33">intra_quant_bias</name></name><operator pos:start="65:34" pos:end="65:35">&lt;&lt;</operator><operator pos:start="65:36" pos:end="65:36">(</operator><name pos:start="65:37" pos:end="65:46">QMAT_SHIFT</name> <operator pos:start="65:48" pos:end="65:48">-</operator> <literal type="number" pos:start="65:50" pos:end="65:52">3</literal> <operator pos:start="65:52" pos:end="65:52">-</operator> <name pos:start="65:54" pos:end="65:69">QUANT_BIAS_SHIFT</name><operator pos:start="65:70" pos:end="65:70">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="67:7" pos:end="77:5">else <block pos:start="67:12" pos:end="77:5">{<block_content pos:start="69:9" pos:end="75:71">

        <expr_stmt pos:start="69:9" pos:end="69:14"><expr pos:start="69:9" pos:end="69:13"><name pos:start="69:9" pos:end="69:9">i</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <literal type="number" pos:start="69:13" pos:end="69:13">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:27"><expr pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:21">last_non_zero</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <operator pos:start="71:25" pos:end="71:25">-</operator><literal type="number" pos:start="71:26" pos:end="71:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:41"><expr pos:start="73:9" pos:end="73:40"><name pos:start="73:9" pos:end="73:12">qmat</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <name pos:start="73:16" pos:end="73:40"><name pos:start="73:16" pos:end="73:16">s</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:32">q_inter_matrix</name><index pos:start="73:33" pos:end="73:40">[<expr pos:start="73:34" pos:end="73:39"><name pos:start="73:34" pos:end="73:39">qscale</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:71"><expr pos:start="75:9" pos:end="75:70"><name pos:start="75:9" pos:end="75:12">bias</name><operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:33"><name pos:start="75:15" pos:end="75:15">s</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:33">inter_quant_bias</name></name><operator pos:start="75:34" pos:end="75:35">&lt;&lt;</operator><operator pos:start="75:36" pos:end="75:36">(</operator><name pos:start="75:37" pos:end="75:46">QMAT_SHIFT</name> <operator pos:start="75:48" pos:end="75:48">-</operator> <literal type="number" pos:start="75:50" pos:end="75:52">3</literal> <operator pos:start="75:52" pos:end="75:52">-</operator> <name pos:start="75:54" pos:end="75:69">QUANT_BIAS_SHIFT</name><operator pos:start="75:70" pos:end="75:70">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:49"><expr pos:start="79:5" pos:end="79:48"><name pos:start="79:5" pos:end="79:14">threshold1</name><operator pos:start="79:15" pos:end="79:15">=</operator> <operator pos:start="79:17" pos:end="79:17">(</operator><literal type="number" pos:start="79:18" pos:end="79:18">1</literal><operator pos:start="79:19" pos:end="79:20">&lt;&lt;</operator><operator pos:start="79:21" pos:end="79:21">(</operator><name pos:start="79:22" pos:end="79:31">QMAT_SHIFT</name> <operator pos:start="79:33" pos:end="79:33">-</operator> <literal type="number" pos:start="79:35" pos:end="79:35">3</literal><operator pos:start="79:36" pos:end="79:36">)</operator><operator pos:start="79:37" pos:end="79:37">)</operator> <operator pos:start="79:39" pos:end="79:39">-</operator> <name pos:start="79:41" pos:end="79:44">bias</name> <operator pos:start="79:46" pos:end="79:46">-</operator> <literal type="number" pos:start="79:48" pos:end="79:48">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:30"><expr pos:start="81:5" pos:end="81:29"><name pos:start="81:5" pos:end="81:14">threshold2</name><operator pos:start="81:15" pos:end="81:15">=</operator> <name pos:start="81:17" pos:end="81:26">threshold1</name><operator pos:start="81:27" pos:end="81:28">&lt;&lt;</operator><literal type="number" pos:start="81:29" pos:end="81:29">1</literal></expr>;</expr_stmt>



    <for pos:start="85:5" pos:end="125:5">for<control pos:start="85:8" pos:end="85:18">(<init pos:start="85:9" pos:end="85:9">;</init><condition pos:start="85:10" pos:end="85:14"><expr pos:start="85:10" pos:end="85:13"><name pos:start="85:10" pos:end="85:10">i</name><operator pos:start="85:11" pos:end="85:11">&lt;</operator><literal type="number" pos:start="85:12" pos:end="85:13">64</literal></expr>;</condition><incr pos:start="85:15" pos:end="85:17"><expr pos:start="85:15" pos:end="85:17"><name pos:start="85:15" pos:end="85:15">i</name><operator pos:start="85:16" pos:end="85:17">++</operator></expr></incr>)</control> <block pos:start="85:20" pos:end="125:5">{<block_content pos:start="87:9" pos:end="123:9">

        <expr_stmt pos:start="87:9" pos:end="87:29"><expr pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:9">j</name> <operator pos:start="87:11" pos:end="87:11">=</operator> <name pos:start="87:13" pos:end="87:28"><name pos:start="87:13" pos:end="87:25">zigzag_direct</name><index pos:start="87:26" pos:end="87:28">[<expr pos:start="87:27" pos:end="87:27"><name pos:start="87:27" pos:end="87:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:25"><expr pos:start="89:9" pos:end="89:24"><name pos:start="89:9" pos:end="89:13">level</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <name pos:start="89:17" pos:end="89:24"><name pos:start="89:17" pos:end="89:21">block</name><index pos:start="89:22" pos:end="89:24">[<expr pos:start="89:23" pos:end="89:23"><name pos:start="89:23" pos:end="89:23">j</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:32"><expr pos:start="91:9" pos:end="91:31"><name pos:start="91:9" pos:end="91:13">level</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <name pos:start="91:17" pos:end="91:21">level</name> <operator pos:start="91:23" pos:end="91:23">*</operator> <name pos:start="91:25" pos:end="91:31"><name pos:start="91:25" pos:end="91:28">qmat</name><index pos:start="91:29" pos:end="91:31">[<expr pos:start="91:30" pos:end="91:30"><name pos:start="91:30" pos:end="91:30">j</name></expr>]</index></name></expr>;</expr_stmt>



<comment type="line" pos:start="95:1" pos:end="95:51">//        if(   bias+level &gt;= (1&lt;&lt;(QMAT_SHIFT - 3))</comment>

<comment type="line" pos:start="97:1" pos:end="97:53">//           || bias-level &gt;= (1&lt;&lt;(QMAT_SHIFT - 3))){</comment>

        <if_stmt pos:start="99:9" pos:end="123:9"><if pos:start="99:9" pos:end="119:9">if<condition pos:start="99:11" pos:end="99:53">(<expr pos:start="99:12" pos:end="99:52"><operator pos:start="99:12" pos:end="99:12">(</operator><operator pos:start="99:13" pos:end="99:13">(</operator><name pos:start="99:14" pos:end="99:21">unsigned</name><operator pos:start="99:22" pos:end="99:22">)</operator><operator pos:start="99:23" pos:end="99:23">(</operator><name pos:start="99:24" pos:end="99:28">level</name><operator pos:start="99:29" pos:end="99:29">+</operator><name pos:start="99:30" pos:end="99:39">threshold1</name><operator pos:start="99:40" pos:end="99:40">)</operator><operator pos:start="99:41" pos:end="99:41">)</operator><operator pos:start="99:42" pos:end="99:42">&gt;</operator><name pos:start="99:43" pos:end="99:52">threshold2</name></expr>)</condition><block pos:start="99:54" pos:end="119:9">{<block_content pos:start="101:13" pos:end="117:30">

            <if_stmt pos:start="101:13" pos:end="113:13"><if pos:start="101:13" pos:end="107:13">if<condition pos:start="101:15" pos:end="101:23">(<expr pos:start="101:16" pos:end="101:22"><name pos:start="101:16" pos:end="101:20">level</name><operator pos:start="101:21" pos:end="101:21">&gt;</operator><literal type="number" pos:start="101:22" pos:end="101:22">0</literal></expr>)</condition><block pos:start="101:24" pos:end="107:13">{<block_content pos:start="103:17" pos:end="105:32">

                <expr_stmt pos:start="103:17" pos:end="103:56"><expr pos:start="103:17" pos:end="103:55"><name pos:start="103:17" pos:end="103:21">level</name><operator pos:start="103:22" pos:end="103:22">=</operator> <operator pos:start="103:24" pos:end="103:24">(</operator><name pos:start="103:25" pos:end="103:28">bias</name> <operator pos:start="103:30" pos:end="103:30">+</operator> <name pos:start="103:32" pos:end="103:36">level</name><operator pos:start="103:37" pos:end="103:37">)</operator><operator pos:start="103:38" pos:end="103:39">&gt;&gt;</operator><operator pos:start="103:40" pos:end="103:40">(</operator><name pos:start="103:41" pos:end="103:50">QMAT_SHIFT</name> <operator pos:start="103:52" pos:end="103:52">-</operator> <literal type="number" pos:start="103:54" pos:end="103:54">3</literal><operator pos:start="103:55" pos:end="103:55">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:32"><expr pos:start="105:17" pos:end="105:31"><name pos:start="105:17" pos:end="105:24"><name pos:start="105:17" pos:end="105:21">block</name><index pos:start="105:22" pos:end="105:24">[<expr pos:start="105:23" pos:end="105:23"><name pos:start="105:23" pos:end="105:23">j</name></expr>]</index></name><operator pos:start="105:25" pos:end="105:25">=</operator> <name pos:start="105:27" pos:end="105:31">level</name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="107:14" pos:end="113:13">else<block pos:start="107:18" pos:end="113:13">{<block_content pos:start="109:17" pos:end="111:33">

                <expr_stmt pos:start="109:17" pos:end="109:56"><expr pos:start="109:17" pos:end="109:55"><name pos:start="109:17" pos:end="109:21">level</name><operator pos:start="109:22" pos:end="109:22">=</operator> <operator pos:start="109:24" pos:end="109:24">(</operator><name pos:start="109:25" pos:end="109:28">bias</name> <operator pos:start="109:30" pos:end="109:30">-</operator> <name pos:start="109:32" pos:end="109:36">level</name><operator pos:start="109:37" pos:end="109:37">)</operator><operator pos:start="109:38" pos:end="109:39">&gt;&gt;</operator><operator pos:start="109:40" pos:end="109:40">(</operator><name pos:start="109:41" pos:end="109:50">QMAT_SHIFT</name> <operator pos:start="109:52" pos:end="109:52">-</operator> <literal type="number" pos:start="109:54" pos:end="109:54">3</literal><operator pos:start="109:55" pos:end="109:55">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:33"><expr pos:start="111:17" pos:end="111:32"><name pos:start="111:17" pos:end="111:24"><name pos:start="111:17" pos:end="111:21">block</name><index pos:start="111:22" pos:end="111:24">[<expr pos:start="111:23" pos:end="111:23"><name pos:start="111:23" pos:end="111:23">j</name></expr>]</index></name><operator pos:start="111:25" pos:end="111:25">=</operator> <operator pos:start="111:27" pos:end="111:27">-</operator><name pos:start="111:28" pos:end="111:32">level</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:24"><expr pos:start="115:13" pos:end="115:23"><name pos:start="115:13" pos:end="115:15">max</name> <operator pos:start="115:17" pos:end="115:18">|=</operator><name pos:start="115:19" pos:end="115:23">level</name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:30"><expr pos:start="117:13" pos:end="117:29"><name pos:start="117:13" pos:end="117:25">last_non_zero</name> <operator pos:start="117:27" pos:end="117:27">=</operator> <name pos:start="117:29" pos:end="117:29">i</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="119:10" pos:end="123:9">else<block pos:start="119:14" pos:end="123:9">{<block_content pos:start="121:13" pos:end="121:23">

            <expr_stmt pos:start="121:13" pos:end="121:23"><expr pos:start="121:13" pos:end="121:22"><name pos:start="121:13" pos:end="121:20"><name pos:start="121:13" pos:end="121:17">block</name><index pos:start="121:18" pos:end="121:20">[<expr pos:start="121:19" pos:end="121:19"><name pos:start="121:19" pos:end="121:19">j</name></expr>]</index></name><operator pos:start="121:21" pos:end="121:21">=</operator><literal type="number" pos:start="121:22" pos:end="121:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="127:5" pos:end="127:35"><expr pos:start="127:5" pos:end="127:34"><operator pos:start="127:5" pos:end="127:5">*</operator><name pos:start="127:6" pos:end="127:13">overflow</name><operator pos:start="127:14" pos:end="127:14">=</operator> <name pos:start="127:16" pos:end="127:28"><name pos:start="127:16" pos:end="127:16">s</name><operator pos:start="127:17" pos:end="127:18">-&gt;</operator><name pos:start="127:19" pos:end="127:28">max_qcoeff</name></name> <operator pos:start="127:30" pos:end="127:30">&lt;</operator> <name pos:start="127:32" pos:end="127:34">max</name></expr>;</expr_stmt> <comment type="line" pos:start="127:37" pos:end="127:65">//overflow might have happend</comment>

    

    <return pos:start="131:5" pos:end="131:25">return <expr pos:start="131:12" pos:end="131:24"><name pos:start="131:12" pos:end="131:24">last_non_zero</name></expr>;</return>

</block_content>}</block></function>
</unit>
