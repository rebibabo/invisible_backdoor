<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24841.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">nand_command</name><parameter_list pos:start="1:25" pos:end="1:43">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:39">NANDFlashState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="147:1">{<block_content pos:start="5:5" pos:end="145:5">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:23">offset</name></decl>;</decl_stmt>

    <switch pos:start="7:5" pos:end="145:5">switch <condition pos:start="7:12" pos:end="7:19">(<expr pos:start="7:13" pos:end="7:18"><name pos:start="7:13" pos:end="7:18"><name pos:start="7:13" pos:end="7:13">s</name><operator pos:start="7:14" pos:end="7:15">-&gt;</operator><name pos:start="7:16" pos:end="7:18">cmd</name></name></expr>)</condition> <block pos:start="7:21" pos:end="145:5">{<block_content pos:start="9:5" pos:end="143:74">

    <case pos:start="9:5" pos:end="9:24">case <expr pos:start="9:10" pos:end="9:23"><name pos:start="9:10" pos:end="9:23">NAND_CMD_READ0</name></expr>:</case>

        <expr_stmt pos:start="11:9" pos:end="11:21"><expr pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:16">iolen</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr>;</expr_stmt>

        <break pos:start="13:9" pos:end="13:14">break;</break>



    <case pos:start="17:5" pos:end="17:25">case <expr pos:start="17:10" pos:end="17:24"><name pos:start="17:10" pos:end="17:24">NAND_CMD_READID</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:26"><expr pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:17">ioaddr</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:21">s</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:25">io</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:21"><expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:16">iolen</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><call pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:24">nand_pushio_byte</name><argument_list pos:start="23:25" pos:end="23:39">(<argument pos:start="23:26" pos:end="23:26"><expr pos:start="23:26" pos:end="23:26"><name pos:start="23:26" pos:end="23:26">s</name></expr></argument>, <argument pos:start="23:29" pos:end="23:38"><expr pos:start="23:29" pos:end="23:38"><name pos:start="23:29" pos:end="23:38"><name pos:start="23:29" pos:end="23:29">s</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:38">manf_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:40"><expr pos:start="25:9" pos:end="25:39"><call pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:24">nand_pushio_byte</name><argument_list pos:start="25:25" pos:end="25:39">(<argument pos:start="25:26" pos:end="25:26"><expr pos:start="25:26" pos:end="25:26"><name pos:start="25:26" pos:end="25:26">s</name></expr></argument>, <argument pos:start="25:29" pos:end="25:38"><expr pos:start="25:29" pos:end="25:38"><name pos:start="25:29" pos:end="25:38"><name pos:start="25:29" pos:end="25:29">s</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:38">chip_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><call pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:24">nand_pushio_byte</name><argument_list pos:start="27:25" pos:end="27:32">(<argument pos:start="27:26" pos:end="27:26"><expr pos:start="27:26" pos:end="27:26"><name pos:start="27:26" pos:end="27:26">s</name></expr></argument>, <argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><literal type="char" pos:start="27:29" pos:end="27:31">'Q'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:35" pos:end="27:68">/* Don't-care byte (often 0xa5) */</comment>

        <if_stmt pos:start="29:9" pos:end="43:9"><if pos:start="29:9" pos:end="39:9">if <condition pos:start="29:12" pos:end="29:65">(<expr pos:start="29:13" pos:end="29:64"><name pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:26">nand_flash_ids</name><index pos:start="29:27" pos:end="29:38">[<expr pos:start="29:28" pos:end="29:37"><name pos:start="29:28" pos:end="29:37"><name pos:start="29:28" pos:end="29:28">s</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:37">chip_id</name></name></expr>]</index></name><operator pos:start="29:39" pos:end="29:39">.</operator><name pos:start="29:40" pos:end="29:46">options</name> <operator pos:start="29:48" pos:end="29:48">&amp;</operator> <name pos:start="29:50" pos:end="29:64">NAND_SAMSUNG_LP</name></expr>)</condition> <block pos:start="29:67" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:66">

            <comment type="block" pos:start="31:13" pos:end="35:15">/* Page Size, Block Size, Spare Size; bit 6 indicates

             * 8 vs 16 bit width NAND.

             */</comment>

            <expr_stmt pos:start="37:13" pos:end="37:66"><expr pos:start="37:13" pos:end="37:65"><call pos:start="37:13" pos:end="37:65"><name pos:start="37:13" pos:end="37:28">nand_pushio_byte</name><argument_list pos:start="37:29" pos:end="37:65">(<argument pos:start="37:30" pos:end="37:30"><expr pos:start="37:30" pos:end="37:30"><name pos:start="37:30" pos:end="37:30">s</name></expr></argument>, <argument pos:start="37:33" pos:end="37:64"><expr pos:start="37:33" pos:end="37:64"><ternary pos:start="37:33" pos:end="37:64"><condition pos:start="37:33" pos:end="37:52"><expr pos:start="37:33" pos:end="37:50"><operator pos:start="37:33" pos:end="37:33">(</operator><name pos:start="37:34" pos:end="37:44"><name pos:start="37:34" pos:end="37:34">s</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:44">buswidth</name></name> <operator pos:start="37:46" pos:end="37:47">==</operator> <literal type="number" pos:start="37:49" pos:end="37:49">2</literal><operator pos:start="37:50" pos:end="37:50">)</operator></expr> ?</condition><then pos:start="37:54" pos:end="37:57"> <expr pos:start="37:54" pos:end="37:57"><literal type="number" pos:start="37:54" pos:end="37:57">0x55</literal></expr> </then><else pos:start="37:59" pos:end="37:64">: <expr pos:start="37:61" pos:end="37:64"><literal type="number" pos:start="37:61" pos:end="37:64">0x15</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="43:9">else <block pos:start="39:16" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:38">

            <expr_stmt pos:start="41:13" pos:end="41:38"><expr pos:start="41:13" pos:end="41:37"><call pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:28">nand_pushio_byte</name><argument_list pos:start="41:29" pos:end="41:37">(<argument pos:start="41:30" pos:end="41:30"><expr pos:start="41:30" pos:end="41:30"><name pos:start="41:30" pos:end="41:30">s</name></expr></argument>, <argument pos:start="41:33" pos:end="41:36"><expr pos:start="41:33" pos:end="41:36"><literal type="number" pos:start="41:33" pos:end="41:36">0xc0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="41:40" pos:end="41:56">/* Multi-plane */</comment>

        </block_content>}</block></else></if_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>



    <case pos:start="49:5" pos:end="49:30">case <expr pos:start="49:10" pos:end="49:29"><name pos:start="49:10" pos:end="49:29">NAND_CMD_RANDOMREAD2</name></expr>:</case>

    <case pos:start="51:5" pos:end="51:32">case <expr pos:start="51:10" pos:end="51:31"><name pos:start="51:10" pos:end="51:31">NAND_CMD_NOSERIALREAD2</name></expr>:</case>

        <if_stmt pos:start="53:9" pos:end="55:18"><if pos:start="53:9" pos:end="55:18">if <condition pos:start="53:12" pos:end="53:68">(<expr pos:start="53:13" pos:end="53:67"><operator pos:start="53:13" pos:end="53:13">!</operator><operator pos:start="53:14" pos:end="53:14">(</operator><name pos:start="53:15" pos:end="53:40"><name pos:start="53:15" pos:end="53:28">nand_flash_ids</name><index pos:start="53:29" pos:end="53:40">[<expr pos:start="53:30" pos:end="53:39"><name pos:start="53:30" pos:end="53:39"><name pos:start="53:30" pos:end="53:30">s</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:39">chip_id</name></name></expr>]</index></name><operator pos:start="53:41" pos:end="53:41">.</operator><name pos:start="53:42" pos:end="53:48">options</name> <operator pos:start="53:50" pos:end="53:50">&amp;</operator> <name pos:start="53:52" pos:end="53:66">NAND_SAMSUNG_LP</name><operator pos:start="53:67" pos:end="53:67">)</operator></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:18"><block_content pos:start="55:13" pos:end="55:18">

            <break pos:start="55:13" pos:end="55:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:54"><expr pos:start="57:9" pos:end="57:53"><name pos:start="57:9" pos:end="57:14">offset</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <name pos:start="57:18" pos:end="57:24"><name pos:start="57:18" pos:end="57:18">s</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:24">addr</name></name> <operator pos:start="57:26" pos:end="57:26">&amp;</operator> <operator pos:start="57:28" pos:end="57:28">(</operator><operator pos:start="57:29" pos:end="57:29">(</operator><literal type="number" pos:start="57:30" pos:end="57:30">1</literal> <operator pos:start="57:32" pos:end="57:33">&lt;&lt;</operator> <name pos:start="57:35" pos:end="57:47"><name pos:start="57:35" pos:end="57:35">s</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:47">addr_shift</name></name><operator pos:start="57:48" pos:end="57:48">)</operator> <operator pos:start="57:50" pos:end="57:50">-</operator> <literal type="number" pos:start="57:52" pos:end="57:52">1</literal><operator pos:start="57:53" pos:end="57:53">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:40"><expr pos:start="59:9" pos:end="59:39"><call pos:start="59:9" pos:end="59:39"><name pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:19">blk_load</name></name><argument_list pos:start="59:20" pos:end="59:39">(<argument pos:start="59:21" pos:end="59:21"><expr pos:start="59:21" pos:end="59:21"><name pos:start="59:21" pos:end="59:21">s</name></expr></argument>, <argument pos:start="59:24" pos:end="59:30"><expr pos:start="59:24" pos:end="59:30"><name pos:start="59:24" pos:end="59:30"><name pos:start="59:24" pos:end="59:24">s</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:30">addr</name></name></expr></argument>, <argument pos:start="59:33" pos:end="59:38"><expr pos:start="59:33" pos:end="59:38"><name pos:start="59:33" pos:end="59:38">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="67:75"><if pos:start="61:9" pos:end="63:53">if <condition pos:start="61:12" pos:end="61:19">(<expr pos:start="61:13" pos:end="61:18"><name pos:start="61:13" pos:end="61:18"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:18">gnd</name></name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:53"><block_content pos:start="63:13" pos:end="63:53">

            <expr_stmt pos:start="63:13" pos:end="63:53"><expr pos:start="63:13" pos:end="63:52"><name pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:20">iolen</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <operator pos:start="63:24" pos:end="63:24">(</operator><literal type="number" pos:start="63:25" pos:end="63:25">1</literal> <operator pos:start="63:27" pos:end="63:28">&lt;&lt;</operator> <name pos:start="63:30" pos:end="63:42"><name pos:start="63:30" pos:end="63:30">s</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:42">page_shift</name></name><operator pos:start="63:43" pos:end="63:43">)</operator> <operator pos:start="63:45" pos:end="63:45">-</operator> <name pos:start="63:47" pos:end="63:52">offset</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="65:9" pos:end="67:75">else<block type="pseudo" pos:start="67:13" pos:end="67:75"><block_content pos:start="67:13" pos:end="67:75">

            <expr_stmt pos:start="67:13" pos:end="67:75"><expr pos:start="67:13" pos:end="67:74"><name pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:20">iolen</name></name> <operator pos:start="67:22" pos:end="67:22">=</operator> <operator pos:start="67:24" pos:end="67:24">(</operator><literal type="number" pos:start="67:25" pos:end="67:25">1</literal> <operator pos:start="67:27" pos:end="67:28">&lt;&lt;</operator> <name pos:start="67:30" pos:end="67:42"><name pos:start="67:30" pos:end="67:30">s</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:42">page_shift</name></name><operator pos:start="67:43" pos:end="67:43">)</operator> <operator pos:start="67:45" pos:end="67:45">+</operator> <operator pos:start="67:47" pos:end="67:47">(</operator><literal type="number" pos:start="67:48" pos:end="67:48">1</literal> <operator pos:start="67:50" pos:end="67:51">&lt;&lt;</operator> <name pos:start="67:53" pos:end="67:64"><name pos:start="67:53" pos:end="67:53">s</name><operator pos:start="67:54" pos:end="67:55">-&gt;</operator><name pos:start="67:56" pos:end="67:64">oob_shift</name></name><operator pos:start="67:65" pos:end="67:65">)</operator> <operator pos:start="67:67" pos:end="67:67">-</operator> <name pos:start="67:69" pos:end="67:74">offset</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>



    <case pos:start="73:5" pos:end="73:24">case <expr pos:start="73:10" pos:end="73:23"><name pos:start="73:10" pos:end="73:23">NAND_CMD_RESET</name></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:30"><expr pos:start="75:9" pos:end="75:29"><call pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:18">nand_reset</name><argument_list pos:start="75:19" pos:end="75:29">(<argument pos:start="75:20" pos:end="75:28"><expr pos:start="75:20" pos:end="75:28"><call pos:start="75:20" pos:end="75:28"><name pos:start="75:20" pos:end="75:25">DEVICE</name><argument_list pos:start="75:26" pos:end="75:28">(<argument pos:start="75:27" pos:end="75:27"><expr pos:start="75:27" pos:end="75:27"><name pos:start="75:27" pos:end="75:27">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>



    <case pos:start="81:5" pos:end="81:31">case <expr pos:start="81:10" pos:end="81:30"><name pos:start="81:10" pos:end="81:30">NAND_CMD_PAGEPROGRAM1</name></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:26"><expr pos:start="83:9" pos:end="83:25"><name pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:17">ioaddr</name></name> <operator pos:start="83:19" pos:end="83:19">=</operator> <name pos:start="83:21" pos:end="83:25"><name pos:start="83:21" pos:end="83:21">s</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:25">io</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:21"><expr pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:16"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:16">iolen</name></name> <operator pos:start="85:18" pos:end="85:18">=</operator> <literal type="number" pos:start="85:20" pos:end="85:20">0</literal></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>



    <case pos:start="91:5" pos:end="91:31">case <expr pos:start="91:10" pos:end="91:30"><name pos:start="91:10" pos:end="91:30">NAND_CMD_PAGEPROGRAM2</name></expr>:</case>

        <if_stmt pos:start="93:9" pos:end="97:9"><if pos:start="93:9" pos:end="97:9">if <condition pos:start="93:12" pos:end="93:18">(<expr pos:start="93:13" pos:end="93:17"><name pos:start="93:13" pos:end="93:17"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:17">wp</name></name></expr>)</condition> <block pos:start="93:20" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:28">

            <expr_stmt pos:start="95:13" pos:end="95:28"><expr pos:start="95:13" pos:end="95:27"><call pos:start="95:13" pos:end="95:27"><name pos:start="95:13" pos:end="95:24"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:24">blk_write</name></name><argument_list pos:start="95:25" pos:end="95:27">(<argument pos:start="95:26" pos:end="95:26"><expr pos:start="95:26" pos:end="95:26"><name pos:start="95:26" pos:end="95:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>



    <case pos:start="103:5" pos:end="103:30">case <expr pos:start="103:10" pos:end="103:29"><name pos:start="103:10" pos:end="103:29">NAND_CMD_BLOCKERASE1</name></expr>:</case>

        <break pos:start="105:9" pos:end="105:14">break;</break>



    <case pos:start="109:5" pos:end="109:30">case <expr pos:start="109:10" pos:end="109:29"><name pos:start="109:10" pos:end="109:29">NAND_CMD_BLOCKERASE2</name></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:48"><expr pos:start="111:9" pos:end="111:47"><name pos:start="111:9" pos:end="111:15"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:15">addr</name></name> <operator pos:start="111:17" pos:end="111:18">&amp;=</operator> <operator pos:start="111:20" pos:end="111:20">(</operator><literal type="number" pos:start="111:21" pos:end="111:24">1ull</literal> <operator pos:start="111:26" pos:end="111:27">&lt;&lt;</operator> <name pos:start="111:29" pos:end="111:38"><name pos:start="111:29" pos:end="111:29">s</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:38">addrlen</name></name> <operator pos:start="111:40" pos:end="111:40">*</operator> <literal type="number" pos:start="111:42" pos:end="111:42">8</literal><operator pos:start="111:43" pos:end="111:43">)</operator> <operator pos:start="111:45" pos:end="111:45">-</operator> <literal type="number" pos:start="111:47" pos:end="111:47">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="115:75"><expr pos:start="113:9" pos:end="115:74"><name pos:start="113:9" pos:end="113:15"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:15">addr</name></name> <operator pos:start="113:17" pos:end="113:19">&lt;&lt;=</operator> <ternary pos:start="113:21" pos:end="115:74"><condition pos:start="113:21" pos:end="113:74"><expr pos:start="113:21" pos:end="113:72"><name pos:start="113:21" pos:end="113:46"><name pos:start="113:21" pos:end="113:34">nand_flash_ids</name><index pos:start="113:35" pos:end="113:46">[<expr pos:start="113:36" pos:end="113:45"><name pos:start="113:36" pos:end="113:45"><name pos:start="113:36" pos:end="113:36">s</name><operator pos:start="113:37" pos:end="113:38">-&gt;</operator><name pos:start="113:39" pos:end="113:45">chip_id</name></name></expr>]</index></name><operator pos:start="113:47" pos:end="113:47">.</operator><name pos:start="113:48" pos:end="113:54">options</name> <operator pos:start="113:56" pos:end="113:56">&amp;</operator> <name pos:start="113:58" pos:end="113:72">NAND_SAMSUNG_LP</name></expr> ?</condition><then pos:start="115:69" pos:end="115:70">

                                                                    <expr pos:start="115:69" pos:end="115:70"><literal type="number" pos:start="115:69" pos:end="115:70">16</literal></expr> </then><else pos:start="115:72" pos:end="115:74">: <expr pos:start="115:74" pos:end="115:74"><literal type="number" pos:start="115:74" pos:end="115:74">8</literal></expr></else></ternary></expr>;</expr_stmt>



        <if_stmt pos:start="119:9" pos:end="123:9"><if pos:start="119:9" pos:end="123:9">if <condition pos:start="119:12" pos:end="119:18">(<expr pos:start="119:13" pos:end="119:17"><name pos:start="119:13" pos:end="119:17"><name pos:start="119:13" pos:end="119:13">s</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:17">wp</name></name></expr>)</condition> <block pos:start="119:20" pos:end="123:9">{<block_content pos:start="121:13" pos:end="121:28">

            <expr_stmt pos:start="121:13" pos:end="121:28"><expr pos:start="121:13" pos:end="121:27"><call pos:start="121:13" pos:end="121:27"><name pos:start="121:13" pos:end="121:24"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:24">blk_erase</name></name><argument_list pos:start="121:25" pos:end="121:27">(<argument pos:start="121:26" pos:end="121:26"><expr pos:start="121:26" pos:end="121:26"><name pos:start="121:26" pos:end="121:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="125:9" pos:end="125:14">break;</break>



    <case pos:start="129:5" pos:end="129:29">case <expr pos:start="129:10" pos:end="129:28"><name pos:start="129:10" pos:end="129:28">NAND_CMD_READSTATUS</name></expr>:</case>

        <expr_stmt pos:start="131:9" pos:end="131:26"><expr pos:start="131:9" pos:end="131:25"><name pos:start="131:9" pos:end="131:17"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:17">ioaddr</name></name> <operator pos:start="131:19" pos:end="131:19">=</operator> <name pos:start="131:21" pos:end="131:25"><name pos:start="131:21" pos:end="131:21">s</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:25">io</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:21"><expr pos:start="133:9" pos:end="133:20"><name pos:start="133:9" pos:end="133:16"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:16">iolen</name></name> <operator pos:start="133:18" pos:end="133:18">=</operator> <literal type="number" pos:start="133:20" pos:end="133:20">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:39"><expr pos:start="135:9" pos:end="135:38"><call pos:start="135:9" pos:end="135:38"><name pos:start="135:9" pos:end="135:24">nand_pushio_byte</name><argument_list pos:start="135:25" pos:end="135:38">(<argument pos:start="135:26" pos:end="135:26"><expr pos:start="135:26" pos:end="135:26"><name pos:start="135:26" pos:end="135:26">s</name></expr></argument>, <argument pos:start="135:29" pos:end="135:37"><expr pos:start="135:29" pos:end="135:37"><name pos:start="135:29" pos:end="135:37"><name pos:start="135:29" pos:end="135:29">s</name><operator pos:start="135:30" pos:end="135:31">-&gt;</operator><name pos:start="135:32" pos:end="135:37">status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>



    <default pos:start="141:5" pos:end="141:12">default:</default>

        <expr_stmt pos:start="143:9" pos:end="143:74"><expr pos:start="143:9" pos:end="143:73"><call pos:start="143:9" pos:end="143:73"><name pos:start="143:9" pos:end="143:14">printf</name><argument_list pos:start="143:15" pos:end="143:73">(<argument pos:start="143:16" pos:end="143:50"><expr pos:start="143:16" pos:end="143:50"><literal type="string" pos:start="143:16" pos:end="143:50">"%s: Unknown NAND command 0x%02x\n"</literal></expr></argument>, <argument pos:start="143:53" pos:end="143:64"><expr pos:start="143:53" pos:end="143:64"><name pos:start="143:53" pos:end="143:64">__FUNCTION__</name></expr></argument>, <argument pos:start="143:67" pos:end="143:72"><expr pos:start="143:67" pos:end="143:72"><name pos:start="143:67" pos:end="143:72"><name pos:start="143:67" pos:end="143:67">s</name><operator pos:start="143:68" pos:end="143:69">-&gt;</operator><name pos:start="143:70" pos:end="143:72">cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
