<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3186.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:34">bmp_encode_init</name><parameter_list pos:start="1:35" pos:end="1:57">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">avctx</name></decl></parameter>)</parameter_list><block pos:start="1:58" pos:end="63:1">{<block_content pos:start="3:5" pos:end="61:13">

    <switch pos:start="3:5" pos:end="49:5">switch <condition pos:start="3:12" pos:end="3:27">(<expr pos:start="3:13" pos:end="3:26"><name pos:start="3:13" pos:end="3:26"><name pos:start="3:13" pos:end="3:17">avctx</name><operator pos:start="3:18" pos:end="3:19">-&gt;</operator><name pos:start="3:20" pos:end="3:26">pix_fmt</name></name></expr>)</condition> <block pos:start="3:29" pos:end="49:5">{<block_content pos:start="5:5" pos:end="47:18">

    <case pos:start="5:5" pos:end="5:26">case <expr pos:start="5:10" pos:end="5:25"><name pos:start="5:10" pos:end="5:25">AV_PIX_FMT_BGR24</name></expr>:</case>

        <expr_stmt pos:start="7:9" pos:end="7:42"><expr pos:start="7:9" pos:end="7:41"><name pos:start="7:9" pos:end="7:36"><name pos:start="7:9" pos:end="7:13">avctx</name><operator pos:start="7:14" pos:end="7:15">-&gt;</operator><name pos:start="7:16" pos:end="7:36">bits_per_coded_sample</name></name> <operator pos:start="7:38" pos:end="7:38">=</operator> <literal type="number" pos:start="7:40" pos:end="7:41">24</literal></expr>;</expr_stmt>

        <break pos:start="9:9" pos:end="9:14">break;</break>

    <case pos:start="11:5" pos:end="11:27">case <expr pos:start="11:10" pos:end="11:26"><name pos:start="11:10" pos:end="11:26">AV_PIX_FMT_RGB555</name></expr>:</case>

    <case pos:start="13:5" pos:end="13:27">case <expr pos:start="13:10" pos:end="13:26"><name pos:start="13:10" pos:end="13:26">AV_PIX_FMT_RGB565</name></expr>:</case>

    <case pos:start="15:5" pos:end="15:27">case <expr pos:start="15:10" pos:end="15:26"><name pos:start="15:10" pos:end="15:26">AV_PIX_FMT_RGB444</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:42"><expr pos:start="17:9" pos:end="17:41"><name pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:13">avctx</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:36">bits_per_coded_sample</name></name> <operator pos:start="17:38" pos:end="17:38">=</operator> <literal type="number" pos:start="17:40" pos:end="17:41">16</literal></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:25">case <expr pos:start="21:10" pos:end="21:24"><name pos:start="21:10" pos:end="21:24">AV_PIX_FMT_RGB8</name></expr>:</case>

    <case pos:start="23:5" pos:end="23:25">case <expr pos:start="23:10" pos:end="23:24"><name pos:start="23:10" pos:end="23:24">AV_PIX_FMT_BGR8</name></expr>:</case>

    <case pos:start="25:5" pos:end="25:30">case <expr pos:start="25:10" pos:end="25:29"><name pos:start="25:10" pos:end="25:29">AV_PIX_FMT_RGB4_BYTE</name></expr>:</case>

    <case pos:start="27:5" pos:end="27:30">case <expr pos:start="27:10" pos:end="27:29"><name pos:start="27:10" pos:end="27:29">AV_PIX_FMT_BGR4_BYTE</name></expr>:</case>

    <case pos:start="29:5" pos:end="29:26">case <expr pos:start="29:10" pos:end="29:25"><name pos:start="29:10" pos:end="29:25">AV_PIX_FMT_GRAY8</name></expr>:</case>

    <case pos:start="31:5" pos:end="31:25">case <expr pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:24">AV_PIX_FMT_PAL8</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:41"><expr pos:start="33:9" pos:end="33:40"><name pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:13">avctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:36">bits_per_coded_sample</name></name> <operator pos:start="33:38" pos:end="33:38">=</operator> <literal type="number" pos:start="33:40" pos:end="33:40">8</literal></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:30">case <expr pos:start="37:10" pos:end="37:29"><name pos:start="37:10" pos:end="37:29">AV_PIX_FMT_MONOBLACK</name></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:41"><expr pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:36"><name pos:start="39:9" pos:end="39:13">avctx</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:36">bits_per_coded_sample</name></name> <operator pos:start="39:38" pos:end="39:38">=</operator> <literal type="number" pos:start="39:40" pos:end="39:40">1</literal></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <default pos:start="43:5" pos:end="43:12">default:</default>

        <expr_stmt pos:start="45:9" pos:end="45:65"><expr pos:start="45:9" pos:end="45:64"><call pos:start="45:9" pos:end="45:64"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:64">(<argument pos:start="45:16" pos:end="45:20"><expr pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:20">avctx</name></expr></argument>, <argument pos:start="45:23" pos:end="45:33"><expr pos:start="45:23" pos:end="45:33"><name pos:start="45:23" pos:end="45:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="45:36" pos:end="45:63"><expr pos:start="45:36" pos:end="45:63"><literal type="string" pos:start="45:36" pos:end="45:63">"unsupported pixel format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="53:5" pos:end="53:42"><expr pos:start="53:5" pos:end="53:41"><name pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:9">avctx</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:22">coded_frame</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <call pos:start="53:26" pos:end="53:41"><name pos:start="53:26" pos:end="53:39">av_frame_alloc</name><argument_list pos:start="53:40" pos:end="53:41">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="57:31"><if pos:start="55:5" pos:end="57:31">if <condition pos:start="55:8" pos:end="55:28">(<expr pos:start="55:9" pos:end="55:27"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:27"><name pos:start="55:10" pos:end="55:14">avctx</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:27">coded_frame</name></name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:31"><block_content pos:start="57:9" pos:end="57:31">

        <return pos:start="57:9" pos:end="57:31">return <expr pos:start="57:16" pos:end="57:30"><call pos:start="57:16" pos:end="57:30"><name pos:start="57:16" pos:end="57:22">AVERROR</name><argument_list pos:start="57:23" pos:end="57:30">(<argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
