<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23172.c" pos:tabs="8"><function pos:start="1:1" pos:end="845:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:10">SwsContext</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:26">sws_getContext</name><parameter_list pos:start="1:27" pos:end="5:91">(<parameter pos:start="1:28" pos:end="1:35"><decl pos:start="1:28" pos:end="1:35"><type pos:start="1:28" pos:end="1:35"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:35">srcW</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:45"><decl pos:start="1:38" pos:end="1:45"><type pos:start="1:38" pos:end="1:45"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:45">srcH</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:73"><decl pos:start="1:48" pos:end="1:73"><type pos:start="1:48" pos:end="1:73"><name pos:start="1:48" pos:end="1:63"><name pos:start="1:48" pos:end="1:51">enum</name> <name pos:start="1:53" pos:end="1:63">PixelFormat</name></name></type> <name pos:start="1:65" pos:end="1:73">srcFormat</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:35"><decl pos:start="3:28" pos:end="3:35"><type pos:start="3:28" pos:end="3:35"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:35">dstW</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:45"><decl pos:start="3:38" pos:end="3:45"><type pos:start="3:38" pos:end="3:45"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:45">dstH</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:73"><decl pos:start="3:48" pos:end="3:73"><type pos:start="3:48" pos:end="3:73"><name pos:start="3:48" pos:end="3:63"><name pos:start="3:48" pos:end="3:51">enum</name> <name pos:start="3:53" pos:end="3:63">PixelFormat</name></name></type> <name pos:start="3:65" pos:end="3:73">dstFormat</name></decl></parameter>, <parameter pos:start="3:76" pos:end="3:84"><decl pos:start="3:76" pos:end="3:84"><type pos:start="3:76" pos:end="3:84"><name pos:start="3:76" pos:end="3:78">int</name></type> <name pos:start="3:80" pos:end="3:84">flags</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:47"><decl pos:start="5:28" pos:end="5:47"><type pos:start="5:28" pos:end="5:47"><name pos:start="5:28" pos:end="5:36">SwsFilter</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:47">srcFilter</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:69"><decl pos:start="5:50" pos:end="5:69"><type pos:start="5:50" pos:end="5:69"><name pos:start="5:50" pos:end="5:58">SwsFilter</name> <modifier pos:start="5:60" pos:end="5:60">*</modifier></type><name pos:start="5:61" pos:end="5:69">dstFilter</name></decl></parameter>, <parameter pos:start="5:72" pos:end="5:90"><decl pos:start="5:72" pos:end="5:90"><type pos:start="5:72" pos:end="5:90"><specifier pos:start="5:72" pos:end="5:76">const</specifier> <name pos:start="5:78" pos:end="5:83">double</name> <modifier pos:start="5:85" pos:end="5:85">*</modifier></type><name pos:start="5:86" pos:end="5:90">param</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="845:1">{<block_content pos:start="9:5" pos:end="843:16">

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">SwsContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">usesVFilter</name></decl>, <decl pos:start="13:22" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:32">usesHFilter</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">unscaled</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">srcRange</name></decl>, <decl pos:start="17:19" pos:end="17:26"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:19" pos:end="17:26">dstRange</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="22:0"><decl pos:start="19:5" pos:end="19:51"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:13">SwsFilter</name></type> <name pos:start="19:15" pos:end="19:25">dummyFilter</name><init pos:start="19:26" pos:end="19:51">= <expr pos:start="19:28" pos:end="19:51"><block pos:start="19:28" pos:end="19:51">{<expr pos:start="19:29" pos:end="19:32"><name pos:start="19:29" pos:end="19:32">NULL</name></expr>, <expr pos:start="19:35" pos:end="19:38"><name pos:start="19:35" pos:end="19:38">NULL</name></expr>, <expr pos:start="19:41" pos:end="19:44"><name pos:start="19:41" pos:end="19:44">NULL</name></expr>, <expr pos:start="19:47" pos:end="19:50"><name pos:start="19:47" pos:end="19:50">NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="21:1" pos:end="21:12">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">ARCH_X86</name></expr></cpp:if>

    <if_stmt pos:start="23:5" pos:end="32:0"><if pos:start="23:5" pos:end="32:0">if <condition pos:start="23:8" pos:end="23:33">(<expr pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:13">flags</name> <operator pos:start="23:15" pos:end="23:15">&amp;</operator> <name pos:start="23:17" pos:end="23:32">SWS_CPU_CAPS_MMX</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="32:0"><block_content pos:start="25:9" pos:end="32:0">

        <asm pos:start="25:9" pos:end="32:0">__asm__ <specifier pos:start="25:17" pos:end="25:24">volatile</specifier>("emms\n\t"::: "memory");</asm></block_content></block></if></if_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="31:1" pos:end="31:29">#<cpp:directive pos:start="31:2" pos:end="31:3">if</cpp:directive> <expr pos:start="31:5" pos:end="31:29"><operator pos:start="31:5" pos:end="31:5">!</operator><name pos:start="31:6" pos:end="31:29">CONFIG_RUNTIME_CPUDETECT</name></expr></cpp:if> <comment type="line" pos:start="31:31" pos:end="31:100">//ensure that the flags match the compiled variant if cpudetect is off</comment>

    <expr_stmt pos:start="33:5" pos:end="33:109"><expr pos:start="33:5" pos:end="33:108"><name pos:start="33:5" pos:end="33:9">flags</name> <operator pos:start="33:11" pos:end="33:12">&amp;=</operator> <operator pos:start="33:14" pos:end="33:14">~</operator><operator pos:start="33:15" pos:end="33:15">(</operator><name pos:start="33:16" pos:end="33:31">SWS_CPU_CAPS_MMX</name><operator pos:start="33:32" pos:end="33:32">|</operator><name pos:start="33:33" pos:end="33:49">SWS_CPU_CAPS_MMX2</name><operator pos:start="33:50" pos:end="33:50">|</operator><name pos:start="33:51" pos:end="33:68">SWS_CPU_CAPS_3DNOW</name><operator pos:start="33:69" pos:end="33:69">|</operator><name pos:start="33:70" pos:end="33:89">SWS_CPU_CAPS_ALTIVEC</name><operator pos:start="33:90" pos:end="33:90">|</operator><name pos:start="33:91" pos:end="33:107">SWS_CPU_CAPS_BFIN</name><operator pos:start="33:108" pos:end="33:108">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="38:0"><expr pos:start="35:5" pos:end="35:35"><name pos:start="35:5" pos:end="35:9">flags</name> <operator pos:start="35:11" pos:end="35:12">|=</operator> <call pos:start="35:14" pos:end="35:35"><name pos:start="35:14" pos:end="35:33">ff_hardcodedcpuflags</name><argument_list pos:start="35:34" pos:end="35:35">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="37:8" pos:end="37:37">/* CONFIG_RUNTIME_CPUDETECT */</comment>

    <if_stmt pos:start="39:5" pos:end="39:44"><if pos:start="39:5" pos:end="39:44">if <condition pos:start="39:8" pos:end="39:19">(<expr pos:start="39:9" pos:end="39:18"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:18">rgb15to16</name></expr>)</condition><block type="pseudo" pos:start="39:21" pos:end="39:44"><block_content pos:start="39:21" pos:end="39:44"> <expr_stmt pos:start="39:21" pos:end="39:44"><expr pos:start="39:21" pos:end="39:43"><call pos:start="39:21" pos:end="39:43"><name pos:start="39:21" pos:end="39:36">sws_rgb2rgb_init</name><argument_list pos:start="39:37" pos:end="39:43">(<argument pos:start="39:38" pos:end="39:42"><expr pos:start="39:38" pos:end="39:42"><name pos:start="39:38" pos:end="39:42">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:46"><expr pos:start="43:5" pos:end="43:45"><name pos:start="43:5" pos:end="43:12">unscaled</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <operator pos:start="43:16" pos:end="43:16">(</operator><name pos:start="43:17" pos:end="43:20">srcW</name> <operator pos:start="43:22" pos:end="43:23">==</operator> <name pos:start="43:25" pos:end="43:28">dstW</name> <operator pos:start="43:30" pos:end="43:31">&amp;&amp;</operator> <name pos:start="43:33" pos:end="43:36">srcH</name> <operator pos:start="43:38" pos:end="43:39">==</operator> <name pos:start="43:41" pos:end="43:44">dstH</name><operator pos:start="43:45" pos:end="43:45">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:12">srcRange</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:38"><name pos:start="47:16" pos:end="47:26">handle_jpeg</name><argument_list pos:start="47:27" pos:end="47:38">(<argument pos:start="47:28" pos:end="47:37"><expr pos:start="47:28" pos:end="47:37"><operator pos:start="47:28" pos:end="47:28">&amp;</operator><name pos:start="47:29" pos:end="47:37">srcFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:39"><expr pos:start="49:5" pos:end="49:38"><name pos:start="49:5" pos:end="49:12">dstRange</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:38"><name pos:start="49:16" pos:end="49:26">handle_jpeg</name><argument_list pos:start="49:27" pos:end="49:38">(<argument pos:start="49:28" pos:end="49:37"><expr pos:start="49:28" pos:end="49:37"><operator pos:start="49:28" pos:end="49:28">&amp;</operator><name pos:start="49:29" pos:end="49:37">dstFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:34">(<expr pos:start="53:9" pos:end="53:33"><operator pos:start="53:9" pos:end="53:9">!</operator><call pos:start="53:10" pos:end="53:33"><name pos:start="53:10" pos:end="53:22">isSupportedIn</name><argument_list pos:start="53:23" pos:end="53:33">(<argument pos:start="53:24" pos:end="53:32"><expr pos:start="53:24" pos:end="53:32"><name pos:start="53:24" pos:end="53:32">srcFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:36" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:20">

        <expr_stmt pos:start="55:9" pos:end="55:120"><expr pos:start="55:9" pos:end="55:119"><call pos:start="55:9" pos:end="55:119"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:119">(<argument pos:start="55:16" pos:end="55:19"><expr pos:start="55:16" pos:end="55:19"><name pos:start="55:16" pos:end="55:19">NULL</name></expr></argument>, <argument pos:start="55:22" pos:end="55:33"><expr pos:start="55:22" pos:end="55:33"><name pos:start="55:22" pos:end="55:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:36" pos:end="55:90"><expr pos:start="55:36" pos:end="55:90"><literal type="string" pos:start="55:36" pos:end="55:90">"swScaler: %s is not supported as input pixel format\n"</literal></expr></argument>, <argument pos:start="55:93" pos:end="55:118"><expr pos:start="55:93" pos:end="55:118"><call pos:start="55:93" pos:end="55:118"><name pos:start="55:93" pos:end="55:107">sws_format_name</name><argument_list pos:start="55:108" pos:end="55:118">(<argument pos:start="55:109" pos:end="55:117"><expr pos:start="55:109" pos:end="55:117"><name pos:start="55:109" pos:end="55:117">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:20">return <expr pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:35">(<expr pos:start="61:9" pos:end="61:34"><operator pos:start="61:9" pos:end="61:9">!</operator><call pos:start="61:10" pos:end="61:34"><name pos:start="61:10" pos:end="61:23">isSupportedOut</name><argument_list pos:start="61:24" pos:end="61:34">(<argument pos:start="61:25" pos:end="61:33"><expr pos:start="61:25" pos:end="61:33"><name pos:start="61:25" pos:end="61:33">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:37" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:20">

        <expr_stmt pos:start="63:9" pos:end="63:121"><expr pos:start="63:9" pos:end="63:120"><call pos:start="63:9" pos:end="63:120"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:120">(<argument pos:start="63:16" pos:end="63:19"><expr pos:start="63:16" pos:end="63:19"><name pos:start="63:16" pos:end="63:19">NULL</name></expr></argument>, <argument pos:start="63:22" pos:end="63:33"><expr pos:start="63:22" pos:end="63:33"><name pos:start="63:22" pos:end="63:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:36" pos:end="63:91"><expr pos:start="63:36" pos:end="63:91"><literal type="string" pos:start="63:36" pos:end="63:91">"swScaler: %s is not supported as output pixel format\n"</literal></expr></argument>, <argument pos:start="63:94" pos:end="63:119"><expr pos:start="63:94" pos:end="63:119"><call pos:start="63:94" pos:end="63:119"><name pos:start="63:94" pos:end="63:108">sws_format_name</name><argument_list pos:start="63:109" pos:end="63:119">(<argument pos:start="63:110" pos:end="63:118"><expr pos:start="63:110" pos:end="63:118"><name pos:start="63:110" pos:end="63:118">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:20">return <expr pos:start="65:16" pos:end="65:19"><name pos:start="65:16" pos:end="65:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="91:31"><expr pos:start="71:5" pos:end="91:30"><name pos:start="71:5" pos:end="71:5">i</name><operator pos:start="71:6" pos:end="71:6">=</operator> <name pos:start="71:8" pos:end="71:12">flags</name> <operator pos:start="71:14" pos:end="71:14">&amp;</operator> <operator pos:start="71:16" pos:end="71:16">(</operator> <name pos:start="71:18" pos:end="71:26">SWS_POINT</name>

                <operator pos:start="73:17" pos:end="73:17">|</operator><name pos:start="73:18" pos:end="73:25">SWS_AREA</name>

                <operator pos:start="75:17" pos:end="75:17">|</operator><name pos:start="75:18" pos:end="75:29">SWS_BILINEAR</name>

                <operator pos:start="77:17" pos:end="77:17">|</operator><name pos:start="77:18" pos:end="77:34">SWS_FAST_BILINEAR</name>

                <operator pos:start="79:17" pos:end="79:17">|</operator><name pos:start="79:18" pos:end="79:28">SWS_BICUBIC</name>

                <operator pos:start="81:17" pos:end="81:17">|</operator><name pos:start="81:18" pos:end="81:22">SWS_X</name>

                <operator pos:start="83:17" pos:end="83:17">|</operator><name pos:start="83:18" pos:end="83:26">SWS_GAUSS</name>

                <operator pos:start="85:17" pos:end="85:17">|</operator><name pos:start="85:18" pos:end="85:28">SWS_LANCZOS</name>

                <operator pos:start="87:17" pos:end="87:17">|</operator><name pos:start="87:18" pos:end="87:25">SWS_SINC</name>

                <operator pos:start="89:17" pos:end="89:17">|</operator><name pos:start="89:18" pos:end="89:27">SWS_SPLINE</name>

                <operator pos:start="91:17" pos:end="91:17">|</operator><name pos:start="91:18" pos:end="91:29">SWS_BICUBLIN</name><operator pos:start="91:30" pos:end="91:30">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if<condition pos:start="93:7" pos:end="93:25">(<expr pos:start="93:8" pos:end="93:24"><operator pos:start="93:8" pos:end="93:8">!</operator><name pos:start="93:9" pos:end="93:9">i</name> <operator pos:start="93:11" pos:end="93:12">||</operator> <operator pos:start="93:14" pos:end="93:14">(</operator><name pos:start="93:15" pos:end="93:15">i</name> <operator pos:start="93:17" pos:end="93:17">&amp;</operator> <operator pos:start="93:19" pos:end="93:19">(</operator><name pos:start="93:20" pos:end="93:20">i</name><operator pos:start="93:21" pos:end="93:21">-</operator><literal type="number" pos:start="93:22" pos:end="93:22">1</literal><operator pos:start="93:23" pos:end="93:23">)</operator><operator pos:start="93:24" pos:end="93:24">)</operator></expr>)</condition> <block pos:start="93:27" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:20">

        <expr_stmt pos:start="95:9" pos:end="95:94"><expr pos:start="95:9" pos:end="95:93"><call pos:start="95:9" pos:end="95:93"><name pos:start="95:9" pos:end="95:14">av_log</name><argument_list pos:start="95:15" pos:end="95:93">(<argument pos:start="95:16" pos:end="95:19"><expr pos:start="95:16" pos:end="95:19"><name pos:start="95:16" pos:end="95:19">NULL</name></expr></argument>, <argument pos:start="95:22" pos:end="95:33"><expr pos:start="95:22" pos:end="95:33"><name pos:start="95:22" pos:end="95:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:36" pos:end="95:92"><expr pos:start="95:36" pos:end="95:92"><literal type="string" pos:start="95:36" pos:end="95:92">"swScaler: Exactly one scaler algorithm must be chosen\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="97:9" pos:end="97:20">return <expr pos:start="97:16" pos:end="97:19"><name pos:start="97:16" pos:end="97:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="103:5" pos:end="103:22">/* sanity check */</comment>

    <if_stmt pos:start="105:5" pos:end="113:5"><if pos:start="105:5" pos:end="113:5">if <condition pos:start="105:8" pos:end="105:45">(<expr pos:start="105:9" pos:end="105:44"><name pos:start="105:9" pos:end="105:12">srcW</name><operator pos:start="105:13" pos:end="105:13">&lt;</operator><literal type="number" pos:start="105:14" pos:end="105:14">4</literal> <operator pos:start="105:16" pos:end="105:17">||</operator> <name pos:start="105:19" pos:end="105:22">srcH</name><operator pos:start="105:23" pos:end="105:23">&lt;</operator><literal type="number" pos:start="105:24" pos:end="105:24">1</literal> <operator pos:start="105:26" pos:end="105:27">||</operator> <name pos:start="105:29" pos:end="105:32">dstW</name><operator pos:start="105:33" pos:end="105:33">&lt;</operator><literal type="number" pos:start="105:34" pos:end="105:34">8</literal> <operator pos:start="105:36" pos:end="105:37">||</operator> <name pos:start="105:39" pos:end="105:42">dstH</name><operator pos:start="105:43" pos:end="105:43">&lt;</operator><literal type="number" pos:start="105:44" pos:end="105:44">1</literal></expr>)</condition> <block pos:start="105:47" pos:end="113:5">{<block_content pos:start="107:9" pos:end="111:20"> <comment type="line" pos:start="105:49" pos:end="105:148">//FIXME check if these are enough and try to lowwer them after fixing the relevant parts of the code</comment>

        <expr_stmt pos:start="107:9" pos:end="109:39"><expr pos:start="107:9" pos:end="109:38"><call pos:start="107:9" pos:end="109:38"><name pos:start="107:9" pos:end="107:14">av_log</name><argument_list pos:start="107:15" pos:end="109:38">(<argument pos:start="107:16" pos:end="107:19"><expr pos:start="107:16" pos:end="107:19"><name pos:start="107:16" pos:end="107:19">NULL</name></expr></argument>, <argument pos:start="107:22" pos:end="107:33"><expr pos:start="107:22" pos:end="107:33"><name pos:start="107:22" pos:end="107:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:36" pos:end="107:92"><expr pos:start="107:36" pos:end="107:92"><literal type="string" pos:start="107:36" pos:end="107:92">"swScaler: %dx%d -&gt; %dx%d is invalid scaling dimension\n"</literal></expr></argument>,

               <argument pos:start="109:16" pos:end="109:19"><expr pos:start="109:16" pos:end="109:19"><name pos:start="109:16" pos:end="109:19">srcW</name></expr></argument>, <argument pos:start="109:22" pos:end="109:25"><expr pos:start="109:22" pos:end="109:25"><name pos:start="109:22" pos:end="109:25">srcH</name></expr></argument>, <argument pos:start="109:28" pos:end="109:31"><expr pos:start="109:28" pos:end="109:31"><name pos:start="109:28" pos:end="109:31">dstW</name></expr></argument>, <argument pos:start="109:34" pos:end="109:37"><expr pos:start="109:34" pos:end="109:37"><name pos:start="109:34" pos:end="109:37">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="111:9" pos:end="111:20">return <expr pos:start="111:16" pos:end="111:19"><name pos:start="111:16" pos:end="111:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if<condition pos:start="115:7" pos:end="115:34">(<expr pos:start="115:8" pos:end="115:33"><name pos:start="115:8" pos:end="115:11">srcW</name> <operator pos:start="115:13" pos:end="115:13">&gt;</operator> <name pos:start="115:15" pos:end="115:18">VOFW</name> <operator pos:start="115:20" pos:end="115:21">||</operator> <name pos:start="115:23" pos:end="115:26">dstW</name> <operator pos:start="115:28" pos:end="115:28">&gt;</operator> <name pos:start="115:30" pos:end="115:33">VOFW</name></expr>)</condition> <block pos:start="115:36" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:20">

        <expr_stmt pos:start="117:9" pos:end="117:131"><expr pos:start="117:9" pos:end="117:130"><call pos:start="117:9" pos:end="117:130"><name pos:start="117:9" pos:end="117:14">av_log</name><argument_list pos:start="117:15" pos:end="117:130">(<argument pos:start="117:16" pos:end="117:19"><expr pos:start="117:16" pos:end="117:19"><name pos:start="117:16" pos:end="117:19">NULL</name></expr></argument>, <argument pos:start="117:22" pos:end="117:33"><expr pos:start="117:22" pos:end="117:33"><name pos:start="117:22" pos:end="117:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="117:36" pos:end="117:129"><expr pos:start="117:36" pos:end="117:129"><literal type="string" pos:start="117:36" pos:end="117:77">"swScaler: Compile-time maximum width is "</literal><call pos:start="117:78" pos:end="117:95"><name pos:start="117:78" pos:end="117:89">AV_STRINGIFY</name><argument_list pos:start="117:90" pos:end="117:95">(<argument pos:start="117:91" pos:end="117:94"><expr pos:start="117:91" pos:end="117:94"><name pos:start="117:91" pos:end="117:94">VOFW</name></expr></argument>)</argument_list></call><literal type="string" pos:start="117:96" pos:end="117:129">" change VOF/VOFW and recompile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="119:9" pos:end="119:20">return <expr pos:start="119:16" pos:end="119:19"><name pos:start="119:16" pos:end="119:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="125:5" pos:end="125:44"><if pos:start="125:5" pos:end="125:44">if <condition pos:start="125:8" pos:end="125:19">(<expr pos:start="125:9" pos:end="125:18"><operator pos:start="125:9" pos:end="125:9">!</operator><name pos:start="125:10" pos:end="125:18">dstFilter</name></expr>)</condition><block type="pseudo" pos:start="125:21" pos:end="125:44"><block_content pos:start="125:21" pos:end="125:44"> <expr_stmt pos:start="125:21" pos:end="125:44"><expr pos:start="125:21" pos:end="125:43"><name pos:start="125:21" pos:end="125:29">dstFilter</name><operator pos:start="125:30" pos:end="125:30">=</operator> <operator pos:start="125:32" pos:end="125:32">&amp;</operator><name pos:start="125:33" pos:end="125:43">dummyFilter</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="127:5" pos:end="127:44"><if pos:start="127:5" pos:end="127:44">if <condition pos:start="127:8" pos:end="127:19">(<expr pos:start="127:9" pos:end="127:18"><operator pos:start="127:9" pos:end="127:9">!</operator><name pos:start="127:10" pos:end="127:18">srcFilter</name></expr>)</condition><block type="pseudo" pos:start="127:21" pos:end="127:44"><block_content pos:start="127:21" pos:end="127:44"> <expr_stmt pos:start="127:21" pos:end="127:44"><expr pos:start="127:21" pos:end="127:43"><name pos:start="127:21" pos:end="127:29">srcFilter</name><operator pos:start="127:30" pos:end="127:30">=</operator> <operator pos:start="127:32" pos:end="127:32">&amp;</operator><name pos:start="127:33" pos:end="127:43">dummyFilter</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:57"><expr pos:start="131:5" pos:end="131:56"><call pos:start="131:5" pos:end="131:56"><name pos:start="131:5" pos:end="131:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="131:22" pos:end="131:56">(<argument pos:start="131:23" pos:end="131:26"><expr pos:start="131:23" pos:end="131:26"><name pos:start="131:23" pos:end="131:26">NULL</name></expr></argument>, <argument pos:start="131:29" pos:end="131:29"><expr pos:start="131:29" pos:end="131:29"><name pos:start="131:29" pos:end="131:29">c</name></expr></argument>, <argument pos:start="131:32" pos:end="131:49"><expr pos:start="131:32" pos:end="131:49"><sizeof pos:start="131:32" pos:end="131:49">sizeof<argument_list pos:start="131:38" pos:end="131:49">(<argument pos:start="131:39" pos:end="131:48"><expr pos:start="131:39" pos:end="131:48"><name pos:start="131:39" pos:end="131:48">SwsContext</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="131:52" pos:end="131:55"><expr pos:start="131:52" pos:end="131:55"><name pos:start="131:52" pos:end="131:55">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:37"><expr pos:start="135:5" pos:end="135:36"><name pos:start="135:5" pos:end="135:15"><name pos:start="135:5" pos:end="135:5">c</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:15">av_class</name></name> <operator pos:start="135:17" pos:end="135:17">=</operator> <operator pos:start="135:19" pos:end="135:19">&amp;</operator><name pos:start="135:20" pos:end="135:36">sws_context_class</name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:18"><expr pos:start="137:5" pos:end="137:17"><name pos:start="137:5" pos:end="137:11"><name pos:start="137:5" pos:end="137:5">c</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:11">srcW</name></name><operator pos:start="137:12" pos:end="137:12">=</operator> <name pos:start="137:14" pos:end="137:17">srcW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:18"><expr pos:start="139:5" pos:end="139:17"><name pos:start="139:5" pos:end="139:11"><name pos:start="139:5" pos:end="139:5">c</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:11">srcH</name></name><operator pos:start="139:12" pos:end="139:12">=</operator> <name pos:start="139:14" pos:end="139:17">srcH</name></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:18"><expr pos:start="141:5" pos:end="141:17"><name pos:start="141:5" pos:end="141:11"><name pos:start="141:5" pos:end="141:5">c</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:11">dstW</name></name><operator pos:start="141:12" pos:end="141:12">=</operator> <name pos:start="141:14" pos:end="141:17">dstW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:18"><expr pos:start="143:5" pos:end="143:17"><name pos:start="143:5" pos:end="143:11"><name pos:start="143:5" pos:end="143:5">c</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:11">dstH</name></name><operator pos:start="143:12" pos:end="143:12">=</operator> <name pos:start="143:14" pos:end="143:17">dstH</name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:46"><expr pos:start="145:5" pos:end="145:45"><name pos:start="145:5" pos:end="145:14"><name pos:start="145:5" pos:end="145:5">c</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:14">lumXInc</name></name><operator pos:start="145:15" pos:end="145:15">=</operator> <operator pos:start="145:17" pos:end="145:17">(</operator><operator pos:start="145:18" pos:end="145:18">(</operator><name pos:start="145:19" pos:end="145:22">srcW</name><operator pos:start="145:23" pos:end="145:24">&lt;&lt;</operator><literal type="number" pos:start="145:25" pos:end="145:26">16</literal><operator pos:start="145:27" pos:end="145:27">)</operator> <operator pos:start="145:29" pos:end="145:29">+</operator> <operator pos:start="145:31" pos:end="145:31">(</operator><name pos:start="145:32" pos:end="145:35">dstW</name><operator pos:start="145:36" pos:end="145:37">&gt;&gt;</operator><literal type="number" pos:start="145:38" pos:end="145:38">1</literal><operator pos:start="145:39" pos:end="145:39">)</operator><operator pos:start="145:40" pos:end="145:40">)</operator><operator pos:start="145:41" pos:end="145:41">/</operator><name pos:start="145:42" pos:end="145:45">dstW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:46"><expr pos:start="147:5" pos:end="147:45"><name pos:start="147:5" pos:end="147:14"><name pos:start="147:5" pos:end="147:5">c</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:14">lumYInc</name></name><operator pos:start="147:15" pos:end="147:15">=</operator> <operator pos:start="147:17" pos:end="147:17">(</operator><operator pos:start="147:18" pos:end="147:18">(</operator><name pos:start="147:19" pos:end="147:22">srcH</name><operator pos:start="147:23" pos:end="147:24">&lt;&lt;</operator><literal type="number" pos:start="147:25" pos:end="147:26">16</literal><operator pos:start="147:27" pos:end="147:27">)</operator> <operator pos:start="147:29" pos:end="147:29">+</operator> <operator pos:start="147:31" pos:end="147:31">(</operator><name pos:start="147:32" pos:end="147:35">dstH</name><operator pos:start="147:36" pos:end="147:37">&gt;&gt;</operator><literal type="number" pos:start="147:38" pos:end="147:38">1</literal><operator pos:start="147:39" pos:end="147:39">)</operator><operator pos:start="147:40" pos:end="147:40">)</operator><operator pos:start="147:41" pos:end="147:41">/</operator><name pos:start="147:42" pos:end="147:45">dstH</name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:20"><expr pos:start="149:5" pos:end="149:19"><name pos:start="149:5" pos:end="149:12"><name pos:start="149:5" pos:end="149:5">c</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:12">flags</name></name><operator pos:start="149:13" pos:end="149:13">=</operator> <name pos:start="149:15" pos:end="149:19">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:28"><expr pos:start="151:5" pos:end="151:27"><name pos:start="151:5" pos:end="151:16"><name pos:start="151:5" pos:end="151:5">c</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:16">dstFormat</name></name><operator pos:start="151:17" pos:end="151:17">=</operator> <name pos:start="151:19" pos:end="151:27">dstFormat</name></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:28"><expr pos:start="153:5" pos:end="153:27"><name pos:start="153:5" pos:end="153:16"><name pos:start="153:5" pos:end="153:5">c</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:16">srcFormat</name></name><operator pos:start="153:17" pos:end="153:17">=</operator> <name pos:start="153:19" pos:end="153:27">srcFormat</name></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:80"><expr pos:start="155:5" pos:end="155:79"><name pos:start="155:5" pos:end="155:19"><name pos:start="155:5" pos:end="155:5">c</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:19">dstFormatBpp</name></name> <operator pos:start="155:21" pos:end="155:21">=</operator> <call pos:start="155:23" pos:end="155:79"><name pos:start="155:23" pos:end="155:43">av_get_bits_per_pixel</name><argument_list pos:start="155:44" pos:end="155:79">(<argument pos:start="155:45" pos:end="155:78"><expr pos:start="155:45" pos:end="155:78"><operator pos:start="155:45" pos:end="155:45">&amp;</operator><name pos:start="155:46" pos:end="155:78"><name pos:start="155:46" pos:end="155:67">av_pix_fmt_descriptors</name><index pos:start="155:68" pos:end="155:78">[<expr pos:start="155:69" pos:end="155:77"><name pos:start="155:69" pos:end="155:77">dstFormat</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:80"><expr pos:start="157:5" pos:end="157:79"><name pos:start="157:5" pos:end="157:19"><name pos:start="157:5" pos:end="157:5">c</name><operator pos:start="157:6" pos:end="157:7">-&gt;</operator><name pos:start="157:8" pos:end="157:19">srcFormatBpp</name></name> <operator pos:start="157:21" pos:end="157:21">=</operator> <call pos:start="157:23" pos:end="157:79"><name pos:start="157:23" pos:end="157:43">av_get_bits_per_pixel</name><argument_list pos:start="157:44" pos:end="157:79">(<argument pos:start="157:45" pos:end="157:78"><expr pos:start="157:45" pos:end="157:78"><operator pos:start="157:45" pos:end="157:45">&amp;</operator><name pos:start="157:46" pos:end="157:78"><name pos:start="157:46" pos:end="157:67">av_pix_fmt_descriptors</name><index pos:start="157:68" pos:end="157:78">[<expr pos:start="157:69" pos:end="157:77"><name pos:start="157:69" pos:end="157:77">srcFormat</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:42"><expr pos:start="159:5" pos:end="159:41"><name pos:start="159:5" pos:end="159:15"><name pos:start="159:5" pos:end="159:5">c</name><operator pos:start="159:6" pos:end="159:7">-&gt;</operator><name pos:start="159:8" pos:end="159:15">vRounder</name></name><operator pos:start="159:16" pos:end="159:16">=</operator> <literal type="number" pos:start="159:18" pos:end="159:18">4</literal><operator pos:start="159:19" pos:end="159:19">*</operator> <literal type="number" pos:start="159:21" pos:end="159:41">0x0001000100010001ULL</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="163:5" pos:end="169:65"><expr pos:start="163:5" pos:end="169:64"><name pos:start="163:5" pos:end="163:15">usesVFilter</name> <operator pos:start="163:17" pos:end="163:17">=</operator> <operator pos:start="163:19" pos:end="163:19">(</operator><name pos:start="163:20" pos:end="163:34"><name pos:start="163:20" pos:end="163:28">srcFilter</name><operator pos:start="163:29" pos:end="163:30">-&gt;</operator><name pos:start="163:31" pos:end="163:34">lumV</name></name> <operator pos:start="163:36" pos:end="163:37">&amp;&amp;</operator> <name pos:start="163:39" pos:end="163:61"><name pos:start="163:39" pos:end="163:47">srcFilter</name><operator pos:start="163:48" pos:end="163:49">-&gt;</operator><name pos:start="163:50" pos:end="163:53">lumV</name><operator pos:start="163:54" pos:end="163:55">-&gt;</operator><name pos:start="163:56" pos:end="163:61">length</name></name><operator pos:start="163:62" pos:end="163:62">&gt;</operator><literal type="number" pos:start="163:63" pos:end="163:63">1</literal><operator pos:start="163:64" pos:end="163:64">)</operator> <operator pos:start="163:66" pos:end="163:67">||</operator>

                  <operator pos:start="165:19" pos:end="165:19">(</operator><name pos:start="165:20" pos:end="165:34"><name pos:start="165:20" pos:end="165:28">srcFilter</name><operator pos:start="165:29" pos:end="165:30">-&gt;</operator><name pos:start="165:31" pos:end="165:34">chrV</name></name> <operator pos:start="165:36" pos:end="165:37">&amp;&amp;</operator> <name pos:start="165:39" pos:end="165:61"><name pos:start="165:39" pos:end="165:47">srcFilter</name><operator pos:start="165:48" pos:end="165:49">-&gt;</operator><name pos:start="165:50" pos:end="165:53">chrV</name><operator pos:start="165:54" pos:end="165:55">-&gt;</operator><name pos:start="165:56" pos:end="165:61">length</name></name><operator pos:start="165:62" pos:end="165:62">&gt;</operator><literal type="number" pos:start="165:63" pos:end="165:63">1</literal><operator pos:start="165:64" pos:end="165:64">)</operator> <operator pos:start="165:66" pos:end="165:67">||</operator>

                  <operator pos:start="167:19" pos:end="167:19">(</operator><name pos:start="167:20" pos:end="167:34"><name pos:start="167:20" pos:end="167:28">dstFilter</name><operator pos:start="167:29" pos:end="167:30">-&gt;</operator><name pos:start="167:31" pos:end="167:34">lumV</name></name> <operator pos:start="167:36" pos:end="167:37">&amp;&amp;</operator> <name pos:start="167:39" pos:end="167:61"><name pos:start="167:39" pos:end="167:47">dstFilter</name><operator pos:start="167:48" pos:end="167:49">-&gt;</operator><name pos:start="167:50" pos:end="167:53">lumV</name><operator pos:start="167:54" pos:end="167:55">-&gt;</operator><name pos:start="167:56" pos:end="167:61">length</name></name><operator pos:start="167:62" pos:end="167:62">&gt;</operator><literal type="number" pos:start="167:63" pos:end="167:63">1</literal><operator pos:start="167:64" pos:end="167:64">)</operator> <operator pos:start="167:66" pos:end="167:67">||</operator>

                  <operator pos:start="169:19" pos:end="169:19">(</operator><name pos:start="169:20" pos:end="169:34"><name pos:start="169:20" pos:end="169:28">dstFilter</name><operator pos:start="169:29" pos:end="169:30">-&gt;</operator><name pos:start="169:31" pos:end="169:34">chrV</name></name> <operator pos:start="169:36" pos:end="169:37">&amp;&amp;</operator> <name pos:start="169:39" pos:end="169:61"><name pos:start="169:39" pos:end="169:47">dstFilter</name><operator pos:start="169:48" pos:end="169:49">-&gt;</operator><name pos:start="169:50" pos:end="169:53">chrV</name><operator pos:start="169:54" pos:end="169:55">-&gt;</operator><name pos:start="169:56" pos:end="169:61">length</name></name><operator pos:start="169:62" pos:end="169:62">&gt;</operator><literal type="number" pos:start="169:63" pos:end="169:63">1</literal><operator pos:start="169:64" pos:end="169:64">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="177:65"><expr pos:start="171:5" pos:end="177:64"><name pos:start="171:5" pos:end="171:15">usesHFilter</name> <operator pos:start="171:17" pos:end="171:17">=</operator> <operator pos:start="171:19" pos:end="171:19">(</operator><name pos:start="171:20" pos:end="171:34"><name pos:start="171:20" pos:end="171:28">srcFilter</name><operator pos:start="171:29" pos:end="171:30">-&gt;</operator><name pos:start="171:31" pos:end="171:34">lumH</name></name> <operator pos:start="171:36" pos:end="171:37">&amp;&amp;</operator> <name pos:start="171:39" pos:end="171:61"><name pos:start="171:39" pos:end="171:47">srcFilter</name><operator pos:start="171:48" pos:end="171:49">-&gt;</operator><name pos:start="171:50" pos:end="171:53">lumH</name><operator pos:start="171:54" pos:end="171:55">-&gt;</operator><name pos:start="171:56" pos:end="171:61">length</name></name><operator pos:start="171:62" pos:end="171:62">&gt;</operator><literal type="number" pos:start="171:63" pos:end="171:63">1</literal><operator pos:start="171:64" pos:end="171:64">)</operator> <operator pos:start="171:66" pos:end="171:67">||</operator>

                  <operator pos:start="173:19" pos:end="173:19">(</operator><name pos:start="173:20" pos:end="173:34"><name pos:start="173:20" pos:end="173:28">srcFilter</name><operator pos:start="173:29" pos:end="173:30">-&gt;</operator><name pos:start="173:31" pos:end="173:34">chrH</name></name> <operator pos:start="173:36" pos:end="173:37">&amp;&amp;</operator> <name pos:start="173:39" pos:end="173:61"><name pos:start="173:39" pos:end="173:47">srcFilter</name><operator pos:start="173:48" pos:end="173:49">-&gt;</operator><name pos:start="173:50" pos:end="173:53">chrH</name><operator pos:start="173:54" pos:end="173:55">-&gt;</operator><name pos:start="173:56" pos:end="173:61">length</name></name><operator pos:start="173:62" pos:end="173:62">&gt;</operator><literal type="number" pos:start="173:63" pos:end="173:63">1</literal><operator pos:start="173:64" pos:end="173:64">)</operator> <operator pos:start="173:66" pos:end="173:67">||</operator>

                  <operator pos:start="175:19" pos:end="175:19">(</operator><name pos:start="175:20" pos:end="175:34"><name pos:start="175:20" pos:end="175:28">dstFilter</name><operator pos:start="175:29" pos:end="175:30">-&gt;</operator><name pos:start="175:31" pos:end="175:34">lumH</name></name> <operator pos:start="175:36" pos:end="175:37">&amp;&amp;</operator> <name pos:start="175:39" pos:end="175:61"><name pos:start="175:39" pos:end="175:47">dstFilter</name><operator pos:start="175:48" pos:end="175:49">-&gt;</operator><name pos:start="175:50" pos:end="175:53">lumH</name><operator pos:start="175:54" pos:end="175:55">-&gt;</operator><name pos:start="175:56" pos:end="175:61">length</name></name><operator pos:start="175:62" pos:end="175:62">&gt;</operator><literal type="number" pos:start="175:63" pos:end="175:63">1</literal><operator pos:start="175:64" pos:end="175:64">)</operator> <operator pos:start="175:66" pos:end="175:67">||</operator>

                  <operator pos:start="177:19" pos:end="177:19">(</operator><name pos:start="177:20" pos:end="177:34"><name pos:start="177:20" pos:end="177:28">dstFilter</name><operator pos:start="177:29" pos:end="177:30">-&gt;</operator><name pos:start="177:31" pos:end="177:34">chrH</name></name> <operator pos:start="177:36" pos:end="177:37">&amp;&amp;</operator> <name pos:start="177:39" pos:end="177:61"><name pos:start="177:39" pos:end="177:47">dstFilter</name><operator pos:start="177:48" pos:end="177:49">-&gt;</operator><name pos:start="177:50" pos:end="177:53">chrH</name><operator pos:start="177:54" pos:end="177:55">-&gt;</operator><name pos:start="177:56" pos:end="177:61">length</name></name><operator pos:start="177:62" pos:end="177:62">&gt;</operator><literal type="number" pos:start="177:63" pos:end="177:63">1</literal><operator pos:start="177:64" pos:end="177:64">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:79"><expr pos:start="181:5" pos:end="181:78"><call pos:start="181:5" pos:end="181:78"><name pos:start="181:5" pos:end="181:23">getSubSampleFactors</name><argument_list pos:start="181:24" pos:end="181:78">(<argument pos:start="181:25" pos:end="181:44"><expr pos:start="181:25" pos:end="181:44"><operator pos:start="181:25" pos:end="181:25">&amp;</operator><name pos:start="181:26" pos:end="181:44"><name pos:start="181:26" pos:end="181:26">c</name><operator pos:start="181:27" pos:end="181:28">-&gt;</operator><name pos:start="181:29" pos:end="181:44">chrSrcHSubSample</name></name></expr></argument>, <argument pos:start="181:47" pos:end="181:66"><expr pos:start="181:47" pos:end="181:66"><operator pos:start="181:47" pos:end="181:47">&amp;</operator><name pos:start="181:48" pos:end="181:66"><name pos:start="181:48" pos:end="181:48">c</name><operator pos:start="181:49" pos:end="181:50">-&gt;</operator><name pos:start="181:51" pos:end="181:66">chrSrcVSubSample</name></name></expr></argument>, <argument pos:start="181:69" pos:end="181:77"><expr pos:start="181:69" pos:end="181:77"><name pos:start="181:69" pos:end="181:77">srcFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:79"><expr pos:start="183:5" pos:end="183:78"><call pos:start="183:5" pos:end="183:78"><name pos:start="183:5" pos:end="183:23">getSubSampleFactors</name><argument_list pos:start="183:24" pos:end="183:78">(<argument pos:start="183:25" pos:end="183:44"><expr pos:start="183:25" pos:end="183:44"><operator pos:start="183:25" pos:end="183:25">&amp;</operator><name pos:start="183:26" pos:end="183:44"><name pos:start="183:26" pos:end="183:26">c</name><operator pos:start="183:27" pos:end="183:28">-&gt;</operator><name pos:start="183:29" pos:end="183:44">chrDstHSubSample</name></name></expr></argument>, <argument pos:start="183:47" pos:end="183:66"><expr pos:start="183:47" pos:end="183:66"><operator pos:start="183:47" pos:end="183:47">&amp;</operator><name pos:start="183:48" pos:end="183:66"><name pos:start="183:48" pos:end="183:48">c</name><operator pos:start="183:49" pos:end="183:50">-&gt;</operator><name pos:start="183:51" pos:end="183:66">chrDstVSubSample</name></name></expr></argument>, <argument pos:start="183:69" pos:end="183:77"><expr pos:start="183:69" pos:end="183:77"><name pos:start="183:69" pos:end="183:77">dstFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="187:5" pos:end="187:84">// reuse chroma for 2 pixels RGB/BGR unless user wants full chroma interpolation</comment>

    <if_stmt pos:start="189:5" pos:end="189:82"><if pos:start="189:5" pos:end="189:82">if <condition pos:start="189:8" pos:end="189:59">(<expr pos:start="189:9" pos:end="189:58"><call pos:start="189:9" pos:end="189:27"><name pos:start="189:9" pos:end="189:16">isAnyRGB</name><argument_list pos:start="189:17" pos:end="189:27">(<argument pos:start="189:18" pos:end="189:26"><expr pos:start="189:18" pos:end="189:26"><name pos:start="189:18" pos:end="189:26">dstFormat</name></expr></argument>)</argument_list></call> <operator pos:start="189:29" pos:end="189:30">&amp;&amp;</operator> <operator pos:start="189:32" pos:end="189:32">!</operator><operator pos:start="189:33" pos:end="189:33">(</operator><name pos:start="189:34" pos:end="189:38">flags</name><operator pos:start="189:39" pos:end="189:39">&amp;</operator><name pos:start="189:40" pos:end="189:57">SWS_FULL_CHR_H_INT</name><operator pos:start="189:58" pos:end="189:58">)</operator></expr>)</condition><block type="pseudo" pos:start="189:61" pos:end="189:82"><block_content pos:start="189:61" pos:end="189:82"> <expr_stmt pos:start="189:61" pos:end="189:82"><expr pos:start="189:61" pos:end="189:81"><name pos:start="189:61" pos:end="189:79"><name pos:start="189:61" pos:end="189:61">c</name><operator pos:start="189:62" pos:end="189:63">-&gt;</operator><name pos:start="189:64" pos:end="189:79">chrDstHSubSample</name></name><operator pos:start="189:80" pos:end="189:80">=</operator><literal type="number" pos:start="189:81" pos:end="189:81">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="193:5" pos:end="193:50">// drop some chroma lines if the user wants it</comment>

    <expr_stmt pos:start="195:5" pos:end="195:75"><expr pos:start="195:5" pos:end="195:74"><name pos:start="195:5" pos:end="195:15"><name pos:start="195:5" pos:end="195:5">c</name><operator pos:start="195:6" pos:end="195:7">-&gt;</operator><name pos:start="195:8" pos:end="195:15">vChrDrop</name></name><operator pos:start="195:16" pos:end="195:16">=</operator> <operator pos:start="195:18" pos:end="195:18">(</operator><name pos:start="195:19" pos:end="195:23">flags</name><operator pos:start="195:24" pos:end="195:24">&amp;</operator><name pos:start="195:25" pos:end="195:47">SWS_SRC_V_CHR_DROP_MASK</name><operator pos:start="195:48" pos:end="195:48">)</operator><operator pos:start="195:49" pos:end="195:50">&gt;&gt;</operator><name pos:start="195:51" pos:end="195:74">SWS_SRC_V_CHR_DROP_SHIFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:38"><expr pos:start="197:5" pos:end="197:37"><name pos:start="197:5" pos:end="197:23"><name pos:start="197:5" pos:end="197:5">c</name><operator pos:start="197:6" pos:end="197:7">-&gt;</operator><name pos:start="197:8" pos:end="197:23">chrSrcVSubSample</name></name><operator pos:start="197:24" pos:end="197:25">+=</operator> <name pos:start="197:27" pos:end="197:37"><name pos:start="197:27" pos:end="197:27">c</name><operator pos:start="197:28" pos:end="197:29">-&gt;</operator><name pos:start="197:30" pos:end="197:37">vChrDrop</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="201:5" pos:end="201:82">// drop every other pixel for chroma calculation unless user wants full chroma</comment>

    <if_stmt pos:start="203:5" pos:end="213:30"><if pos:start="203:5" pos:end="213:30">if <condition pos:start="203:8" pos:end="211:93">(<expr pos:start="203:9" pos:end="211:92"><call pos:start="203:9" pos:end="203:27"><name pos:start="203:9" pos:end="203:16">isAnyRGB</name><argument_list pos:start="203:17" pos:end="203:27">(<argument pos:start="203:18" pos:end="203:26"><expr pos:start="203:18" pos:end="203:26"><name pos:start="203:18" pos:end="203:26">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="203:29" pos:end="203:30">&amp;&amp;</operator> <operator pos:start="203:32" pos:end="203:32">!</operator><operator pos:start="203:33" pos:end="203:33">(</operator><name pos:start="203:34" pos:end="203:38">flags</name><operator pos:start="203:39" pos:end="203:39">&amp;</operator><name pos:start="203:40" pos:end="203:57">SWS_FULL_CHR_H_INP</name><operator pos:start="203:58" pos:end="203:58">)</operator>

      <operator pos:start="205:7" pos:end="205:8">&amp;&amp;</operator> <name pos:start="205:10" pos:end="205:18">srcFormat</name><operator pos:start="205:19" pos:end="205:20">!=</operator><name pos:start="205:21" pos:end="205:32">PIX_FMT_RGB8</name>      <operator pos:start="205:39" pos:end="205:40">&amp;&amp;</operator> <name pos:start="205:42" pos:end="205:50">srcFormat</name><operator pos:start="205:51" pos:end="205:52">!=</operator><name pos:start="205:53" pos:end="205:64">PIX_FMT_BGR8</name>

      <operator pos:start="207:7" pos:end="207:8">&amp;&amp;</operator> <name pos:start="207:10" pos:end="207:18">srcFormat</name><operator pos:start="207:19" pos:end="207:20">!=</operator><name pos:start="207:21" pos:end="207:32">PIX_FMT_RGB4</name>      <operator pos:start="207:39" pos:end="207:40">&amp;&amp;</operator> <name pos:start="207:42" pos:end="207:50">srcFormat</name><operator pos:start="207:51" pos:end="207:52">!=</operator><name pos:start="207:53" pos:end="207:64">PIX_FMT_BGR4</name>

      <operator pos:start="209:7" pos:end="209:8">&amp;&amp;</operator> <name pos:start="209:10" pos:end="209:18">srcFormat</name><operator pos:start="209:19" pos:end="209:20">!=</operator><name pos:start="209:21" pos:end="209:37">PIX_FMT_RGB4_BYTE</name> <operator pos:start="209:39" pos:end="209:40">&amp;&amp;</operator> <name pos:start="209:42" pos:end="209:50">srcFormat</name><operator pos:start="209:51" pos:end="209:52">!=</operator><name pos:start="209:53" pos:end="209:69">PIX_FMT_BGR4_BYTE</name>

      <operator pos:start="211:7" pos:end="211:8">&amp;&amp;</operator> <operator pos:start="211:10" pos:end="211:10">(</operator><operator pos:start="211:11" pos:end="211:11">(</operator><name pos:start="211:12" pos:end="211:15">dstW</name><operator pos:start="211:16" pos:end="211:17">&gt;&gt;</operator><name pos:start="211:18" pos:end="211:36"><name pos:start="211:18" pos:end="211:18">c</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:36">chrDstHSubSample</name></name><operator pos:start="211:37" pos:end="211:37">)</operator> <operator pos:start="211:39" pos:end="211:40">&lt;=</operator> <operator pos:start="211:42" pos:end="211:42">(</operator><name pos:start="211:43" pos:end="211:46">srcW</name><operator pos:start="211:47" pos:end="211:48">&gt;&gt;</operator><literal type="number" pos:start="211:49" pos:end="211:49">1</literal><operator pos:start="211:50" pos:end="211:50">)</operator> <operator pos:start="211:52" pos:end="211:53">||</operator> <operator pos:start="211:55" pos:end="211:55">(</operator><name pos:start="211:56" pos:end="211:60">flags</name><operator pos:start="211:61" pos:end="211:61">&amp;</operator><operator pos:start="211:62" pos:end="211:62">(</operator><name pos:start="211:63" pos:end="211:79">SWS_FAST_BILINEAR</name><operator pos:start="211:80" pos:end="211:80">|</operator><name pos:start="211:81" pos:end="211:89">SWS_POINT</name><operator pos:start="211:90" pos:end="211:90">)</operator><operator pos:start="211:91" pos:end="211:91">)</operator><operator pos:start="211:92" pos:end="211:92">)</operator></expr>)</condition><block type="pseudo" pos:start="213:9" pos:end="213:30"><block_content pos:start="213:9" pos:end="213:30">

        <expr_stmt pos:start="213:9" pos:end="213:30"><expr pos:start="213:9" pos:end="213:29"><name pos:start="213:9" pos:end="213:27"><name pos:start="213:9" pos:end="213:9">c</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:27">chrSrcHSubSample</name></name><operator pos:start="213:28" pos:end="213:28">=</operator><literal type="number" pos:start="213:29" pos:end="213:29">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="217:5" pos:end="229:5"><if pos:start="217:5" pos:end="223:5">if <condition pos:start="217:8" pos:end="217:14">(<expr pos:start="217:9" pos:end="217:13"><name pos:start="217:9" pos:end="217:13">param</name></expr>)</condition> <block pos:start="217:16" pos:end="223:5">{<block_content pos:start="219:9" pos:end="221:31">

        <expr_stmt pos:start="219:9" pos:end="219:31"><expr pos:start="219:9" pos:end="219:30"><name pos:start="219:9" pos:end="219:19"><name pos:start="219:9" pos:end="219:9">c</name><operator pos:start="219:10" pos:end="219:11">-&gt;</operator><name pos:start="219:12" pos:end="219:16">param</name><index pos:start="219:17" pos:end="219:19">[<expr pos:start="219:18" pos:end="219:18"><literal type="number" pos:start="219:18" pos:end="219:18">0</literal></expr>]</index></name> <operator pos:start="219:21" pos:end="219:21">=</operator> <name pos:start="219:23" pos:end="219:30"><name pos:start="219:23" pos:end="219:27">param</name><index pos:start="219:28" pos:end="219:30">[<expr pos:start="219:29" pos:end="219:29"><literal type="number" pos:start="219:29" pos:end="219:29">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:31"><expr pos:start="221:9" pos:end="221:30"><name pos:start="221:9" pos:end="221:19"><name pos:start="221:9" pos:end="221:9">c</name><operator pos:start="221:10" pos:end="221:11">-&gt;</operator><name pos:start="221:12" pos:end="221:16">param</name><index pos:start="221:17" pos:end="221:19">[<expr pos:start="221:18" pos:end="221:18"><literal type="number" pos:start="221:18" pos:end="221:18">1</literal></expr>]</index></name> <operator pos:start="221:21" pos:end="221:21">=</operator> <name pos:start="221:23" pos:end="221:30"><name pos:start="221:23" pos:end="221:27">param</name><index pos:start="221:28" pos:end="221:30">[<expr pos:start="221:29" pos:end="221:29"><literal type="number" pos:start="221:29" pos:end="221:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="223:7" pos:end="229:5">else <block pos:start="223:12" pos:end="229:5">{<block_content pos:start="225:9" pos:end="227:40">

        <expr_stmt pos:start="225:9" pos:end="227:40"><expr pos:start="225:9" pos:end="227:39"><name pos:start="225:9" pos:end="225:19"><name pos:start="225:9" pos:end="225:9">c</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:16">param</name><index pos:start="225:17" pos:end="225:19">[<expr pos:start="225:18" pos:end="225:18"><literal type="number" pos:start="225:18" pos:end="225:18">0</literal></expr>]</index></name> <operator pos:start="225:21" pos:end="225:21">=</operator>

        <name pos:start="227:9" pos:end="227:19"><name pos:start="227:9" pos:end="227:9">c</name><operator pos:start="227:10" pos:end="227:11">-&gt;</operator><name pos:start="227:12" pos:end="227:16">param</name><index pos:start="227:17" pos:end="227:19">[<expr pos:start="227:18" pos:end="227:18"><literal type="number" pos:start="227:18" pos:end="227:18">1</literal></expr>]</index></name> <operator pos:start="227:21" pos:end="227:21">=</operator> <name pos:start="227:23" pos:end="227:39">SWS_PARAM_DEFAULT</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="233:5" pos:end="233:66">// Note the -((-x)&gt;&gt;y) is so that we always round toward +inf.</comment>

    <expr_stmt pos:start="235:5" pos:end="235:50"><expr pos:start="235:5" pos:end="235:49"><name pos:start="235:5" pos:end="235:14"><name pos:start="235:5" pos:end="235:5">c</name><operator pos:start="235:6" pos:end="235:7">-&gt;</operator><name pos:start="235:8" pos:end="235:14">chrSrcW</name></name><operator pos:start="235:15" pos:end="235:15">=</operator> <operator pos:start="235:17" pos:end="235:17">-</operator><operator pos:start="235:18" pos:end="235:18">(</operator><operator pos:start="235:19" pos:end="235:19">(</operator><operator pos:start="235:20" pos:end="235:20">-</operator><name pos:start="235:21" pos:end="235:24">srcW</name><operator pos:start="235:25" pos:end="235:25">)</operator> <operator pos:start="235:27" pos:end="235:28">&gt;&gt;</operator> <name pos:start="235:30" pos:end="235:48"><name pos:start="235:30" pos:end="235:30">c</name><operator pos:start="235:31" pos:end="235:32">-&gt;</operator><name pos:start="235:33" pos:end="235:48">chrSrcHSubSample</name></name><operator pos:start="235:49" pos:end="235:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:50"><expr pos:start="237:5" pos:end="237:49"><name pos:start="237:5" pos:end="237:14"><name pos:start="237:5" pos:end="237:5">c</name><operator pos:start="237:6" pos:end="237:7">-&gt;</operator><name pos:start="237:8" pos:end="237:14">chrSrcH</name></name><operator pos:start="237:15" pos:end="237:15">=</operator> <operator pos:start="237:17" pos:end="237:17">-</operator><operator pos:start="237:18" pos:end="237:18">(</operator><operator pos:start="237:19" pos:end="237:19">(</operator><operator pos:start="237:20" pos:end="237:20">-</operator><name pos:start="237:21" pos:end="237:24">srcH</name><operator pos:start="237:25" pos:end="237:25">)</operator> <operator pos:start="237:27" pos:end="237:28">&gt;&gt;</operator> <name pos:start="237:30" pos:end="237:48"><name pos:start="237:30" pos:end="237:30">c</name><operator pos:start="237:31" pos:end="237:32">-&gt;</operator><name pos:start="237:33" pos:end="237:48">chrSrcVSubSample</name></name><operator pos:start="237:49" pos:end="237:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:50"><expr pos:start="239:5" pos:end="239:49"><name pos:start="239:5" pos:end="239:14"><name pos:start="239:5" pos:end="239:5">c</name><operator pos:start="239:6" pos:end="239:7">-&gt;</operator><name pos:start="239:8" pos:end="239:14">chrDstW</name></name><operator pos:start="239:15" pos:end="239:15">=</operator> <operator pos:start="239:17" pos:end="239:17">-</operator><operator pos:start="239:18" pos:end="239:18">(</operator><operator pos:start="239:19" pos:end="239:19">(</operator><operator pos:start="239:20" pos:end="239:20">-</operator><name pos:start="239:21" pos:end="239:24">dstW</name><operator pos:start="239:25" pos:end="239:25">)</operator> <operator pos:start="239:27" pos:end="239:28">&gt;&gt;</operator> <name pos:start="239:30" pos:end="239:48"><name pos:start="239:30" pos:end="239:30">c</name><operator pos:start="239:31" pos:end="239:32">-&gt;</operator><name pos:start="239:33" pos:end="239:48">chrDstHSubSample</name></name><operator pos:start="239:49" pos:end="239:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:50"><expr pos:start="241:5" pos:end="241:49"><name pos:start="241:5" pos:end="241:14"><name pos:start="241:5" pos:end="241:5">c</name><operator pos:start="241:6" pos:end="241:7">-&gt;</operator><name pos:start="241:8" pos:end="241:14">chrDstH</name></name><operator pos:start="241:15" pos:end="241:15">=</operator> <operator pos:start="241:17" pos:end="241:17">-</operator><operator pos:start="241:18" pos:end="241:18">(</operator><operator pos:start="241:19" pos:end="241:19">(</operator><operator pos:start="241:20" pos:end="241:20">-</operator><name pos:start="241:21" pos:end="241:24">dstH</name><operator pos:start="241:25" pos:end="241:25">)</operator> <operator pos:start="241:27" pos:end="241:28">&gt;&gt;</operator> <name pos:start="241:30" pos:end="241:48"><name pos:start="241:30" pos:end="241:30">c</name><operator pos:start="241:31" pos:end="241:32">-&gt;</operator><name pos:start="241:33" pos:end="241:48">chrDstVSubSample</name></name><operator pos:start="241:49" pos:end="241:49">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="245:5" pos:end="245:150"><expr pos:start="245:5" pos:end="245:149"><call pos:start="245:5" pos:end="245:149"><name pos:start="245:5" pos:end="245:28">sws_setColorspaceDetails</name><argument_list pos:start="245:29" pos:end="245:149">(<argument pos:start="245:30" pos:end="245:30"><expr pos:start="245:30" pos:end="245:30"><name pos:start="245:30" pos:end="245:30">c</name></expr></argument>, <argument pos:start="245:33" pos:end="245:65"><expr pos:start="245:33" pos:end="245:65"><name pos:start="245:33" pos:end="245:65"><name pos:start="245:33" pos:end="245:49">ff_yuv2rgb_coeffs</name><index pos:start="245:50" pos:end="245:65">[<expr pos:start="245:51" pos:end="245:64"><name pos:start="245:51" pos:end="245:64">SWS_CS_DEFAULT</name></expr>]</index></name></expr></argument>, <argument pos:start="245:68" pos:end="245:75"><expr pos:start="245:68" pos:end="245:75"><name pos:start="245:68" pos:end="245:75">srcRange</name></expr></argument>, <argument pos:start="245:78" pos:end="245:110"><expr pos:start="245:78" pos:end="245:110"><name pos:start="245:78" pos:end="245:110"><name pos:start="245:78" pos:end="245:94">ff_yuv2rgb_coeffs</name><index pos:start="245:95" pos:end="245:110">[<expr pos:start="245:96" pos:end="245:109"><name pos:start="245:96" pos:end="245:109">SWS_CS_DEFAULT</name></expr>]</index></name></expr></argument> <comment type="block" pos:start="245:112" pos:end="245:121">/* FIXME*/</comment>, <argument pos:start="245:124" pos:end="245:131"><expr pos:start="245:124" pos:end="245:131"><name pos:start="245:124" pos:end="245:131">dstRange</name></expr></argument>, <argument pos:start="245:134" pos:end="245:134"><expr pos:start="245:134" pos:end="245:134"><literal type="number" pos:start="245:134" pos:end="245:134">0</literal></expr></argument>, <argument pos:start="245:137" pos:end="245:141"><expr pos:start="245:137" pos:end="245:141"><literal type="number" pos:start="245:137" pos:end="245:137">1</literal><operator pos:start="245:138" pos:end="245:139">&lt;&lt;</operator><literal type="number" pos:start="245:140" pos:end="245:141">16</literal></expr></argument>, <argument pos:start="245:144" pos:end="245:148"><expr pos:start="245:144" pos:end="245:148"><literal type="number" pos:start="245:144" pos:end="245:144">1</literal><operator pos:start="245:145" pos:end="245:146">&lt;&lt;</operator><literal type="number" pos:start="245:147" pos:end="245:148">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="249:5" pos:end="249:32">/* unscaled special cases */</comment>

    <if_stmt pos:start="251:5" pos:end="269:5"><if pos:start="251:5" pos:end="269:5">if <condition pos:start="251:8" pos:end="251:98">(<expr pos:start="251:9" pos:end="251:97"><name pos:start="251:9" pos:end="251:16">unscaled</name> <operator pos:start="251:18" pos:end="251:19">&amp;&amp;</operator> <operator pos:start="251:21" pos:end="251:21">!</operator><name pos:start="251:22" pos:end="251:32">usesHFilter</name> <operator pos:start="251:34" pos:end="251:35">&amp;&amp;</operator> <operator pos:start="251:37" pos:end="251:37">!</operator><name pos:start="251:38" pos:end="251:48">usesVFilter</name> <operator pos:start="251:50" pos:end="251:51">&amp;&amp;</operator> <operator pos:start="251:53" pos:end="251:53">(</operator><name pos:start="251:54" pos:end="251:61">srcRange</name> <operator pos:start="251:63" pos:end="251:64">==</operator> <name pos:start="251:66" pos:end="251:73">dstRange</name> <operator pos:start="251:75" pos:end="251:76">||</operator> <call pos:start="251:78" pos:end="251:96"><name pos:start="251:78" pos:end="251:85">isAnyRGB</name><argument_list pos:start="251:86" pos:end="251:96">(<argument pos:start="251:87" pos:end="251:95"><expr pos:start="251:87" pos:end="251:95"><name pos:start="251:87" pos:end="251:95">dstFormat</name></expr></argument>)</argument_list></call><operator pos:start="251:97" pos:end="251:97">)</operator></expr>)</condition> <block pos:start="251:100" pos:end="269:5">{<block_content pos:start="253:9" pos:end="267:9">

        <expr_stmt pos:start="253:9" pos:end="253:35"><expr pos:start="253:9" pos:end="253:34"><call pos:start="253:9" pos:end="253:34"><name pos:start="253:9" pos:end="253:31">ff_get_unscaled_swscale</name><argument_list pos:start="253:32" pos:end="253:34">(<argument pos:start="253:33" pos:end="253:33"><expr pos:start="253:33" pos:end="253:33"><name pos:start="253:33" pos:end="253:33">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="257:9" pos:end="267:9"><if pos:start="257:9" pos:end="267:9">if <condition pos:start="257:12" pos:end="257:23">(<expr pos:start="257:13" pos:end="257:22"><name pos:start="257:13" pos:end="257:22"><name pos:start="257:13" pos:end="257:13">c</name><operator pos:start="257:14" pos:end="257:15">-&gt;</operator><name pos:start="257:16" pos:end="257:22">swScale</name></name></expr>)</condition> <block pos:start="257:25" pos:end="267:9">{<block_content pos:start="259:13" pos:end="265:21">

            <if_stmt pos:start="259:13" pos:end="263:79"><if pos:start="259:13" pos:end="263:79">if <condition pos:start="259:16" pos:end="259:37">(<expr pos:start="259:17" pos:end="259:36"><name pos:start="259:17" pos:end="259:21">flags</name><operator pos:start="259:22" pos:end="259:22">&amp;</operator><name pos:start="259:23" pos:end="259:36">SWS_PRINT_INFO</name></expr>)</condition><block type="pseudo" pos:start="261:17" pos:end="263:79"><block_content pos:start="261:17" pos:end="263:79">

                <expr_stmt pos:start="261:17" pos:end="263:79"><expr pos:start="261:17" pos:end="263:78"><call pos:start="261:17" pos:end="263:78"><name pos:start="261:17" pos:end="261:22">av_log</name><argument_list pos:start="261:23" pos:end="263:78">(<argument pos:start="261:24" pos:end="261:24"><expr pos:start="261:24" pos:end="261:24"><name pos:start="261:24" pos:end="261:24">c</name></expr></argument>, <argument pos:start="261:27" pos:end="261:37"><expr pos:start="261:27" pos:end="261:37"><name pos:start="261:27" pos:end="261:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="261:40" pos:end="261:84"><expr pos:start="261:40" pos:end="261:84"><literal type="string" pos:start="261:40" pos:end="261:84">"using unscaled %s -&gt; %s special converter\n"</literal></expr></argument>,

                       <argument pos:start="263:24" pos:end="263:49"><expr pos:start="263:24" pos:end="263:49"><call pos:start="263:24" pos:end="263:49"><name pos:start="263:24" pos:end="263:38">sws_format_name</name><argument_list pos:start="263:39" pos:end="263:49">(<argument pos:start="263:40" pos:end="263:48"><expr pos:start="263:40" pos:end="263:48"><name pos:start="263:40" pos:end="263:48">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="263:52" pos:end="263:77"><expr pos:start="263:52" pos:end="263:77"><call pos:start="263:52" pos:end="263:77"><name pos:start="263:52" pos:end="263:66">sws_format_name</name><argument_list pos:start="263:67" pos:end="263:77">(<argument pos:start="263:68" pos:end="263:76"><expr pos:start="263:68" pos:end="263:76"><name pos:start="263:68" pos:end="263:76">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="265:13" pos:end="265:21">return <expr pos:start="265:20" pos:end="265:20"><name pos:start="265:20" pos:end="265:20">c</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="273:5" pos:end="291:27"><if pos:start="273:5" pos:end="287:5">if <condition pos:start="273:8" pos:end="273:34">(<expr pos:start="273:9" pos:end="273:33"><name pos:start="273:9" pos:end="273:13">flags</name> <operator pos:start="273:15" pos:end="273:15">&amp;</operator> <name pos:start="273:17" pos:end="273:33">SWS_CPU_CAPS_MMX2</name></expr>)</condition> <block pos:start="273:36" pos:end="287:5">{<block_content pos:start="275:9" pos:end="285:44">

        <expr_stmt pos:start="275:9" pos:end="275:80"><expr pos:start="275:9" pos:end="275:79"><name pos:start="275:9" pos:end="275:24"><name pos:start="275:9" pos:end="275:9">c</name><operator pos:start="275:10" pos:end="275:11">-&gt;</operator><name pos:start="275:12" pos:end="275:24">canMMX2BeUsed</name></name><operator pos:start="275:25" pos:end="275:25">=</operator> <ternary pos:start="275:27" pos:end="275:79"><condition pos:start="275:27" pos:end="275:73"><expr pos:start="275:27" pos:end="275:71"><operator pos:start="275:27" pos:end="275:27">(</operator><name pos:start="275:28" pos:end="275:31">dstW</name> <operator pos:start="275:33" pos:end="275:34">&gt;=</operator><name pos:start="275:35" pos:end="275:38">srcW</name> <operator pos:start="275:40" pos:end="275:41">&amp;&amp;</operator> <operator pos:start="275:43" pos:end="275:43">(</operator><name pos:start="275:44" pos:end="275:47">dstW</name><operator pos:start="275:48" pos:end="275:48">&amp;</operator><literal type="number" pos:start="275:49" pos:end="275:50">31</literal><operator pos:start="275:51" pos:end="275:51">)</operator><operator pos:start="275:52" pos:end="275:53">==</operator><literal type="number" pos:start="275:54" pos:end="275:54">0</literal> <operator pos:start="275:56" pos:end="275:57">&amp;&amp;</operator> <operator pos:start="275:59" pos:end="275:59">(</operator><name pos:start="275:60" pos:end="275:63">srcW</name><operator pos:start="275:64" pos:end="275:64">&amp;</operator><literal type="number" pos:start="275:65" pos:end="275:66">15</literal><operator pos:start="275:67" pos:end="275:67">)</operator><operator pos:start="275:68" pos:end="275:69">==</operator><literal type="number" pos:start="275:70" pos:end="275:70">0</literal><operator pos:start="275:71" pos:end="275:71">)</operator></expr> ?</condition><then pos:start="275:75" pos:end="275:75"> <expr pos:start="275:75" pos:end="275:75"><literal type="number" pos:start="275:75" pos:end="275:75">1</literal></expr> </then><else pos:start="275:77" pos:end="275:79">: <expr pos:start="275:79" pos:end="275:79"><literal type="number" pos:start="275:79" pos:end="275:79">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="277:9" pos:end="283:9"><if pos:start="277:9" pos:end="283:9">if <condition pos:start="277:12" pos:end="277:90">(<expr pos:start="277:13" pos:end="277:89"><operator pos:start="277:13" pos:end="277:13">!</operator><name pos:start="277:14" pos:end="277:29"><name pos:start="277:14" pos:end="277:14">c</name><operator pos:start="277:15" pos:end="277:16">-&gt;</operator><name pos:start="277:17" pos:end="277:29">canMMX2BeUsed</name></name> <operator pos:start="277:31" pos:end="277:32">&amp;&amp;</operator> <name pos:start="277:34" pos:end="277:37">dstW</name> <operator pos:start="277:39" pos:end="277:40">&gt;=</operator><name pos:start="277:41" pos:end="277:44">srcW</name> <operator pos:start="277:46" pos:end="277:47">&amp;&amp;</operator> <operator pos:start="277:49" pos:end="277:49">(</operator><name pos:start="277:50" pos:end="277:53">srcW</name><operator pos:start="277:54" pos:end="277:54">&amp;</operator><literal type="number" pos:start="277:55" pos:end="277:56">15</literal><operator pos:start="277:57" pos:end="277:57">)</operator><operator pos:start="277:58" pos:end="277:59">==</operator><literal type="number" pos:start="277:60" pos:end="277:60">0</literal> <operator pos:start="277:62" pos:end="277:63">&amp;&amp;</operator> <operator pos:start="277:65" pos:end="277:65">(</operator><name pos:start="277:66" pos:end="277:70">flags</name><operator pos:start="277:71" pos:end="277:71">&amp;</operator><name pos:start="277:72" pos:end="277:88">SWS_FAST_BILINEAR</name><operator pos:start="277:89" pos:end="277:89">)</operator></expr>)</condition> <block pos:start="277:92" pos:end="283:9">{<block_content pos:start="279:13" pos:end="281:99">

            <if_stmt pos:start="279:13" pos:end="281:99"><if pos:start="279:13" pos:end="281:99">if <condition pos:start="279:16" pos:end="279:37">(<expr pos:start="279:17" pos:end="279:36"><name pos:start="279:17" pos:end="279:21">flags</name><operator pos:start="279:22" pos:end="279:22">&amp;</operator><name pos:start="279:23" pos:end="279:36">SWS_PRINT_INFO</name></expr>)</condition><block type="pseudo" pos:start="281:17" pos:end="281:99"><block_content pos:start="281:17" pos:end="281:99">

                <expr_stmt pos:start="281:17" pos:end="281:99"><expr pos:start="281:17" pos:end="281:98"><call pos:start="281:17" pos:end="281:98"><name pos:start="281:17" pos:end="281:22">av_log</name><argument_list pos:start="281:23" pos:end="281:98">(<argument pos:start="281:24" pos:end="281:24"><expr pos:start="281:24" pos:end="281:24"><name pos:start="281:24" pos:end="281:24">c</name></expr></argument>, <argument pos:start="281:27" pos:end="281:37"><expr pos:start="281:27" pos:end="281:37"><name pos:start="281:27" pos:end="281:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="281:40" pos:end="281:97"><expr pos:start="281:40" pos:end="281:97"><literal type="string" pos:start="281:40" pos:end="281:97">"output width is not a multiple of 32 -&gt; no MMX2 scaler\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="285:9" pos:end="285:44"><if pos:start="285:9" pos:end="285:44">if <condition pos:start="285:12" pos:end="285:24">(<expr pos:start="285:13" pos:end="285:23"><name pos:start="285:13" pos:end="285:23">usesHFilter</name></expr>)</condition><block type="pseudo" pos:start="285:26" pos:end="285:44"><block_content pos:start="285:26" pos:end="285:44"> <expr_stmt pos:start="285:26" pos:end="285:44"><expr pos:start="285:26" pos:end="285:43"><name pos:start="285:26" pos:end="285:41"><name pos:start="285:26" pos:end="285:26">c</name><operator pos:start="285:27" pos:end="285:28">-&gt;</operator><name pos:start="285:29" pos:end="285:41">canMMX2BeUsed</name></name><operator pos:start="285:42" pos:end="285:42">=</operator><literal type="number" pos:start="285:43" pos:end="285:43">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if>

    <else pos:start="289:5" pos:end="291:27">else<block type="pseudo" pos:start="291:9" pos:end="291:27"><block_content pos:start="291:9" pos:end="291:27">

        <expr_stmt pos:start="291:9" pos:end="291:27"><expr pos:start="291:9" pos:end="291:26"><name pos:start="291:9" pos:end="291:24"><name pos:start="291:9" pos:end="291:9">c</name><operator pos:start="291:10" pos:end="291:11">-&gt;</operator><name pos:start="291:12" pos:end="291:24">canMMX2BeUsed</name></name><operator pos:start="291:25" pos:end="291:25">=</operator><literal type="number" pos:start="291:26" pos:end="291:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="295:5" pos:end="295:64"><expr pos:start="295:5" pos:end="295:63"><name pos:start="295:5" pos:end="295:14"><name pos:start="295:5" pos:end="295:5">c</name><operator pos:start="295:6" pos:end="295:7">-&gt;</operator><name pos:start="295:8" pos:end="295:14">chrXInc</name></name><operator pos:start="295:15" pos:end="295:15">=</operator> <operator pos:start="295:17" pos:end="295:17">(</operator><operator pos:start="295:18" pos:end="295:18">(</operator><name pos:start="295:19" pos:end="295:28"><name pos:start="295:19" pos:end="295:19">c</name><operator pos:start="295:20" pos:end="295:21">-&gt;</operator><name pos:start="295:22" pos:end="295:28">chrSrcW</name></name><operator pos:start="295:29" pos:end="295:30">&lt;&lt;</operator><literal type="number" pos:start="295:31" pos:end="295:32">16</literal><operator pos:start="295:33" pos:end="295:33">)</operator> <operator pos:start="295:35" pos:end="295:35">+</operator> <operator pos:start="295:37" pos:end="295:37">(</operator><name pos:start="295:38" pos:end="295:47"><name pos:start="295:38" pos:end="295:38">c</name><operator pos:start="295:39" pos:end="295:40">-&gt;</operator><name pos:start="295:41" pos:end="295:47">chrDstW</name></name><operator pos:start="295:48" pos:end="295:49">&gt;&gt;</operator><literal type="number" pos:start="295:50" pos:end="295:50">1</literal><operator pos:start="295:51" pos:end="295:51">)</operator><operator pos:start="295:52" pos:end="295:52">)</operator><operator pos:start="295:53" pos:end="295:53">/</operator><name pos:start="295:54" pos:end="295:63"><name pos:start="295:54" pos:end="295:54">c</name><operator pos:start="295:55" pos:end="295:56">-&gt;</operator><name pos:start="295:57" pos:end="295:63">chrDstW</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:64"><expr pos:start="297:5" pos:end="297:63"><name pos:start="297:5" pos:end="297:14"><name pos:start="297:5" pos:end="297:5">c</name><operator pos:start="297:6" pos:end="297:7">-&gt;</operator><name pos:start="297:8" pos:end="297:14">chrYInc</name></name><operator pos:start="297:15" pos:end="297:15">=</operator> <operator pos:start="297:17" pos:end="297:17">(</operator><operator pos:start="297:18" pos:end="297:18">(</operator><name pos:start="297:19" pos:end="297:28"><name pos:start="297:19" pos:end="297:19">c</name><operator pos:start="297:20" pos:end="297:21">-&gt;</operator><name pos:start="297:22" pos:end="297:28">chrSrcH</name></name><operator pos:start="297:29" pos:end="297:30">&lt;&lt;</operator><literal type="number" pos:start="297:31" pos:end="297:32">16</literal><operator pos:start="297:33" pos:end="297:33">)</operator> <operator pos:start="297:35" pos:end="297:35">+</operator> <operator pos:start="297:37" pos:end="297:37">(</operator><name pos:start="297:38" pos:end="297:47"><name pos:start="297:38" pos:end="297:38">c</name><operator pos:start="297:39" pos:end="297:40">-&gt;</operator><name pos:start="297:41" pos:end="297:47">chrDstH</name></name><operator pos:start="297:48" pos:end="297:49">&gt;&gt;</operator><literal type="number" pos:start="297:50" pos:end="297:50">1</literal><operator pos:start="297:51" pos:end="297:51">)</operator><operator pos:start="297:52" pos:end="297:52">)</operator><operator pos:start="297:53" pos:end="297:53">/</operator><name pos:start="297:54" pos:end="297:63"><name pos:start="297:54" pos:end="297:54">c</name><operator pos:start="297:55" pos:end="297:56">-&gt;</operator><name pos:start="297:57" pos:end="297:63">chrDstH</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="301:5" pos:end="301:96">// match pixel 0 of the src to pixel 0 of dst and match pixel n-2 of src to pixel n-2 of dst</comment>

    <comment type="line" pos:start="303:5" pos:end="303:71">// but only for the FAST_BILINEAR mode otherwise do correct scaling</comment>

    <comment type="line" pos:start="305:5" pos:end="305:51">// n-2 is the last chrominance sample available</comment>

    <comment type="line" pos:start="307:5" pos:end="307:93">// this is not perfect, but no one should notice the difference, the more correct variant</comment>

    <comment type="line" pos:start="309:5" pos:end="309:87">// would be like the vertical one, but that would require some special code for the</comment>

    <comment type="line" pos:start="311:5" pos:end="311:27">// first and last pixel</comment>

    <if_stmt pos:start="313:5" pos:end="333:5"><if pos:start="313:5" pos:end="333:5">if <condition pos:start="313:8" pos:end="313:32">(<expr pos:start="313:9" pos:end="313:31"><name pos:start="313:9" pos:end="313:13">flags</name><operator pos:start="313:14" pos:end="313:14">&amp;</operator><name pos:start="313:15" pos:end="313:31">SWS_FAST_BILINEAR</name></expr>)</condition> <block pos:start="313:34" pos:end="333:5">{<block_content pos:start="315:9" pos:end="331:9">

        <if_stmt pos:start="315:9" pos:end="331:9"><if pos:start="315:9" pos:end="321:9">if <condition pos:start="315:12" pos:end="315:29">(<expr pos:start="315:13" pos:end="315:28"><name pos:start="315:13" pos:end="315:28"><name pos:start="315:13" pos:end="315:13">c</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:28">canMMX2BeUsed</name></name></expr>)</condition> <block pos:start="315:31" pos:end="321:9">{<block_content pos:start="317:13" pos:end="319:28">

            <expr_stmt pos:start="317:13" pos:end="317:28"><expr pos:start="317:13" pos:end="317:27"><name pos:start="317:13" pos:end="317:22"><name pos:start="317:13" pos:end="317:13">c</name><operator pos:start="317:14" pos:end="317:15">-&gt;</operator><name pos:start="317:16" pos:end="317:22">lumXInc</name></name><operator pos:start="317:23" pos:end="317:24">+=</operator> <literal type="number" pos:start="317:26" pos:end="317:27">20</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="319:13" pos:end="319:28"><expr pos:start="319:13" pos:end="319:27"><name pos:start="319:13" pos:end="319:22"><name pos:start="319:13" pos:end="319:13">c</name><operator pos:start="319:14" pos:end="319:15">-&gt;</operator><name pos:start="319:16" pos:end="319:22">chrXInc</name></name><operator pos:start="319:23" pos:end="319:24">+=</operator> <literal type="number" pos:start="319:26" pos:end="319:27">20</literal></expr>;</expr_stmt>

        </block_content>}</block></if>

        <comment type="line" pos:start="323:9" pos:end="323:61">//we don't use the x86 asm scaler if MMX is available</comment>

        <if type="elseif" pos:start="325:9" pos:end="331:9">else if <condition pos:start="325:17" pos:end="325:42">(<expr pos:start="325:18" pos:end="325:41"><name pos:start="325:18" pos:end="325:22">flags</name> <operator pos:start="325:24" pos:end="325:24">&amp;</operator> <name pos:start="325:26" pos:end="325:41">SWS_CPU_CAPS_MMX</name></expr>)</condition> <block pos:start="325:44" pos:end="331:9">{<block_content pos:start="327:13" pos:end="329:66">

            <expr_stmt pos:start="327:13" pos:end="327:54"><expr pos:start="327:13" pos:end="327:53"><name pos:start="327:13" pos:end="327:22"><name pos:start="327:13" pos:end="327:13">c</name><operator pos:start="327:14" pos:end="327:15">-&gt;</operator><name pos:start="327:16" pos:end="327:22">lumXInc</name></name> <operator pos:start="327:24" pos:end="327:24">=</operator> <operator pos:start="327:26" pos:end="327:26">(</operator><operator pos:start="327:27" pos:end="327:27">(</operator><name pos:start="327:28" pos:end="327:31">srcW</name><operator pos:start="327:32" pos:end="327:32">-</operator><literal type="number" pos:start="327:33" pos:end="327:33">2</literal><operator pos:start="327:34" pos:end="327:34">)</operator><operator pos:start="327:35" pos:end="327:36">&lt;&lt;</operator><literal type="number" pos:start="327:37" pos:end="327:38">16</literal><operator pos:start="327:39" pos:end="327:39">)</operator><operator pos:start="327:40" pos:end="327:40">/</operator><operator pos:start="327:41" pos:end="327:41">(</operator><name pos:start="327:42" pos:end="327:45">dstW</name><operator pos:start="327:46" pos:end="327:46">-</operator><literal type="number" pos:start="327:47" pos:end="327:47">2</literal><operator pos:start="327:48" pos:end="327:48">)</operator> <operator pos:start="327:50" pos:end="327:50">-</operator> <literal type="number" pos:start="327:52" pos:end="327:53">20</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="329:13" pos:end="329:66"><expr pos:start="329:13" pos:end="329:65"><name pos:start="329:13" pos:end="329:22"><name pos:start="329:13" pos:end="329:13">c</name><operator pos:start="329:14" pos:end="329:15">-&gt;</operator><name pos:start="329:16" pos:end="329:22">chrXInc</name></name> <operator pos:start="329:24" pos:end="329:24">=</operator> <operator pos:start="329:26" pos:end="329:26">(</operator><operator pos:start="329:27" pos:end="329:27">(</operator><name pos:start="329:28" pos:end="329:37"><name pos:start="329:28" pos:end="329:28">c</name><operator pos:start="329:29" pos:end="329:30">-&gt;</operator><name pos:start="329:31" pos:end="329:37">chrSrcW</name></name><operator pos:start="329:38" pos:end="329:38">-</operator><literal type="number" pos:start="329:39" pos:end="329:39">2</literal><operator pos:start="329:40" pos:end="329:40">)</operator><operator pos:start="329:41" pos:end="329:42">&lt;&lt;</operator><literal type="number" pos:start="329:43" pos:end="329:44">16</literal><operator pos:start="329:45" pos:end="329:45">)</operator><operator pos:start="329:46" pos:end="329:46">/</operator><operator pos:start="329:47" pos:end="329:47">(</operator><name pos:start="329:48" pos:end="329:57"><name pos:start="329:48" pos:end="329:48">c</name><operator pos:start="329:49" pos:end="329:50">-&gt;</operator><name pos:start="329:51" pos:end="329:57">chrDstW</name></name><operator pos:start="329:58" pos:end="329:58">-</operator><literal type="number" pos:start="329:59" pos:end="329:59">2</literal><operator pos:start="329:60" pos:end="329:60">)</operator> <operator pos:start="329:62" pos:end="329:62">-</operator> <literal type="number" pos:start="329:64" pos:end="329:65">20</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="337:5" pos:end="337:60">/* precalculate horizontal scaler filter coefficients */</comment>

    <block pos:start="339:5" pos:end="441:5">{<block_content pos:start="345:9" pos:end="439:9">

<cpp:if pos:start="341:1" pos:end="341:69">#<cpp:directive pos:start="341:2" pos:end="341:3">if</cpp:directive> <expr pos:start="341:5" pos:end="341:69"><name pos:start="341:5" pos:end="341:12">ARCH_X86</name> <operator pos:start="341:14" pos:end="341:15">&amp;&amp;</operator> <operator pos:start="341:17" pos:end="341:17">(</operator><name pos:start="341:18" pos:end="341:26">HAVE_MMX2</name> <operator pos:start="341:28" pos:end="341:29">||</operator> <name pos:start="341:31" pos:end="341:54">CONFIG_RUNTIME_CPUDETECT</name><operator pos:start="341:55" pos:end="341:55">)</operator> <operator pos:start="341:57" pos:end="341:58">&amp;&amp;</operator> <name pos:start="341:60" pos:end="341:69">CONFIG_GPL</name></expr></cpp:if>

<comment type="line" pos:start="343:1" pos:end="343:22">// can't downscale !!!</comment>

        <if_stmt pos:start="345:9" pos:end="439:9"><if pos:start="345:9" pos:end="403:9">if <condition pos:start="345:12" pos:end="345:60">(<expr pos:start="345:13" pos:end="345:59"><name pos:start="345:13" pos:end="345:28"><name pos:start="345:13" pos:end="345:13">c</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:28">canMMX2BeUsed</name></name> <operator pos:start="345:30" pos:end="345:31">&amp;&amp;</operator> <operator pos:start="345:33" pos:end="345:33">(</operator><name pos:start="345:34" pos:end="345:38">flags</name> <operator pos:start="345:40" pos:end="345:40">&amp;</operator> <name pos:start="345:42" pos:end="345:58">SWS_FAST_BILINEAR</name><operator pos:start="345:59" pos:end="345:59">)</operator></expr>)</condition> <block pos:start="345:62" pos:end="403:9">{<block_content pos:start="347:13" pos:end="402:0">

            <expr_stmt pos:start="347:13" pos:end="347:100"><expr pos:start="347:13" pos:end="347:99"><name pos:start="347:13" pos:end="347:36"><name pos:start="347:13" pos:end="347:13">c</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:36">lumMmx2FilterCodeSize</name></name> <operator pos:start="347:38" pos:end="347:38">=</operator> <call pos:start="347:40" pos:end="347:99"><name pos:start="347:40" pos:end="347:54">initMMX2HScaler</name><argument_list pos:start="347:55" pos:end="347:99">(      <argument pos:start="347:62" pos:end="347:65"><expr pos:start="347:62" pos:end="347:65"><name pos:start="347:62" pos:end="347:65">dstW</name></expr></argument>, <argument pos:start="347:68" pos:end="347:77"><expr pos:start="347:68" pos:end="347:77"><name pos:start="347:68" pos:end="347:77"><name pos:start="347:68" pos:end="347:68">c</name><operator pos:start="347:69" pos:end="347:70">-&gt;</operator><name pos:start="347:71" pos:end="347:77">lumXInc</name></name></expr></argument>, <argument pos:start="347:80" pos:end="347:83"><expr pos:start="347:80" pos:end="347:83"><name pos:start="347:80" pos:end="347:83">NULL</name></expr></argument>, <argument pos:start="347:86" pos:end="347:89"><expr pos:start="347:86" pos:end="347:89"><name pos:start="347:86" pos:end="347:89">NULL</name></expr></argument>, <argument pos:start="347:92" pos:end="347:95"><expr pos:start="347:92" pos:end="347:95"><name pos:start="347:92" pos:end="347:95">NULL</name></expr></argument>, <argument pos:start="347:98" pos:end="347:98"><expr pos:start="347:98" pos:end="347:98"><literal type="number" pos:start="347:98" pos:end="347:98">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="354:0"><expr pos:start="349:13" pos:end="349:99"><name pos:start="349:13" pos:end="349:36"><name pos:start="349:13" pos:end="349:13">c</name><operator pos:start="349:14" pos:end="349:15">-&gt;</operator><name pos:start="349:16" pos:end="349:36">chrMmx2FilterCodeSize</name></name> <operator pos:start="349:38" pos:end="349:38">=</operator> <call pos:start="349:40" pos:end="349:99"><name pos:start="349:40" pos:end="349:54">initMMX2HScaler</name><argument_list pos:start="349:55" pos:end="349:99">(<argument pos:start="349:56" pos:end="349:65"><expr pos:start="349:56" pos:end="349:65"><name pos:start="349:56" pos:end="349:65"><name pos:start="349:56" pos:end="349:56">c</name><operator pos:start="349:57" pos:end="349:58">-&gt;</operator><name pos:start="349:59" pos:end="349:65">chrDstW</name></name></expr></argument>, <argument pos:start="349:68" pos:end="349:77"><expr pos:start="349:68" pos:end="349:77"><name pos:start="349:68" pos:end="349:77"><name pos:start="349:68" pos:end="349:68">c</name><operator pos:start="349:69" pos:end="349:70">-&gt;</operator><name pos:start="349:71" pos:end="349:77">chrXInc</name></name></expr></argument>, <argument pos:start="349:80" pos:end="349:83"><expr pos:start="349:80" pos:end="349:83"><name pos:start="349:80" pos:end="349:83">NULL</name></expr></argument>, <argument pos:start="349:86" pos:end="349:89"><expr pos:start="349:86" pos:end="349:89"><name pos:start="349:86" pos:end="349:89">NULL</name></expr></argument>, <argument pos:start="349:92" pos:end="349:95"><expr pos:start="349:92" pos:end="349:95"><name pos:start="349:92" pos:end="349:95">NULL</name></expr></argument>, <argument pos:start="349:98" pos:end="349:98"><expr pos:start="349:98" pos:end="349:98"><literal type="number" pos:start="349:98" pos:end="349:98">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="353:1" pos:end="353:20">#<cpp:directive pos:start="353:2" pos:end="353:6">ifdef</cpp:directive> <name pos:start="353:8" pos:end="353:20">MAP_ANONYMOUS</name></cpp:ifdef>

            <expr_stmt pos:start="355:13" pos:end="355:131"><expr pos:start="355:13" pos:end="355:130"><name pos:start="355:13" pos:end="355:32"><name pos:start="355:13" pos:end="355:13">c</name><operator pos:start="355:14" pos:end="355:15">-&gt;</operator><name pos:start="355:16" pos:end="355:32">lumMmx2FilterCode</name></name> <operator pos:start="355:34" pos:end="355:34">=</operator> <call pos:start="355:36" pos:end="355:130"><name pos:start="355:36" pos:end="355:39">mmap</name><argument_list pos:start="355:40" pos:end="355:130">(<argument pos:start="355:41" pos:end="355:44"><expr pos:start="355:41" pos:end="355:44"><name pos:start="355:41" pos:end="355:44">NULL</name></expr></argument>, <argument pos:start="355:47" pos:end="355:70"><expr pos:start="355:47" pos:end="355:70"><name pos:start="355:47" pos:end="355:70"><name pos:start="355:47" pos:end="355:47">c</name><operator pos:start="355:48" pos:end="355:49">-&gt;</operator><name pos:start="355:50" pos:end="355:70">lumMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="355:73" pos:end="355:94"><expr pos:start="355:73" pos:end="355:94"><name pos:start="355:73" pos:end="355:81">PROT_READ</name> <operator pos:start="355:83" pos:end="355:83">|</operator> <name pos:start="355:85" pos:end="355:94">PROT_WRITE</name></expr></argument>, <argument pos:start="355:97" pos:end="355:123"><expr pos:start="355:97" pos:end="355:123"><name pos:start="355:97" pos:end="355:107">MAP_PRIVATE</name> <operator pos:start="355:109" pos:end="355:109">|</operator> <name pos:start="355:111" pos:end="355:123">MAP_ANONYMOUS</name></expr></argument>, <argument pos:start="355:126" pos:end="355:126"><expr pos:start="355:126" pos:end="355:126"><literal type="number" pos:start="355:126" pos:end="355:126">0</literal></expr></argument>, <argument pos:start="355:129" pos:end="355:129"><expr pos:start="355:129" pos:end="355:129"><literal type="number" pos:start="355:129" pos:end="355:129">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="357:13" pos:end="360:0"><expr pos:start="357:13" pos:end="357:130"><name pos:start="357:13" pos:end="357:32"><name pos:start="357:13" pos:end="357:13">c</name><operator pos:start="357:14" pos:end="357:15">-&gt;</operator><name pos:start="357:16" pos:end="357:32">chrMmx2FilterCode</name></name> <operator pos:start="357:34" pos:end="357:34">=</operator> <call pos:start="357:36" pos:end="357:130"><name pos:start="357:36" pos:end="357:39">mmap</name><argument_list pos:start="357:40" pos:end="357:130">(<argument pos:start="357:41" pos:end="357:44"><expr pos:start="357:41" pos:end="357:44"><name pos:start="357:41" pos:end="357:44">NULL</name></expr></argument>, <argument pos:start="357:47" pos:end="357:70"><expr pos:start="357:47" pos:end="357:70"><name pos:start="357:47" pos:end="357:70"><name pos:start="357:47" pos:end="357:47">c</name><operator pos:start="357:48" pos:end="357:49">-&gt;</operator><name pos:start="357:50" pos:end="357:70">chrMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="357:73" pos:end="357:94"><expr pos:start="357:73" pos:end="357:94"><name pos:start="357:73" pos:end="357:81">PROT_READ</name> <operator pos:start="357:83" pos:end="357:83">|</operator> <name pos:start="357:85" pos:end="357:94">PROT_WRITE</name></expr></argument>, <argument pos:start="357:97" pos:end="357:123"><expr pos:start="357:97" pos:end="357:123"><name pos:start="357:97" pos:end="357:107">MAP_PRIVATE</name> <operator pos:start="357:109" pos:end="357:109">|</operator> <name pos:start="357:111" pos:end="357:123">MAP_ANONYMOUS</name></expr></argument>, <argument pos:start="357:126" pos:end="357:126"><expr pos:start="357:126" pos:end="357:126"><literal type="number" pos:start="357:126" pos:end="357:126">0</literal></expr></argument>, <argument pos:start="357:129" pos:end="357:129"><expr pos:start="357:129" pos:end="357:129"><literal type="number" pos:start="357:129" pos:end="357:129">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="359:1" pos:end="359:23">#<cpp:directive pos:start="359:2" pos:end="359:5">elif</cpp:directive> <expr pos:start="359:7" pos:end="359:23"><name pos:start="359:7" pos:end="359:23">HAVE_VIRTUALALLOC</name></expr></cpp:elif>

            <expr_stmt pos:start="361:13" pos:end="361:116"><expr pos:start="361:13" pos:end="361:115"><name pos:start="361:13" pos:end="361:32"><name pos:start="361:13" pos:end="361:13">c</name><operator pos:start="361:14" pos:end="361:15">-&gt;</operator><name pos:start="361:16" pos:end="361:32">lumMmx2FilterCode</name></name> <operator pos:start="361:34" pos:end="361:34">=</operator> <call pos:start="361:36" pos:end="361:115"><name pos:start="361:36" pos:end="361:47">VirtualAlloc</name><argument_list pos:start="361:48" pos:end="361:115">(<argument pos:start="361:49" pos:end="361:52"><expr pos:start="361:49" pos:end="361:52"><name pos:start="361:49" pos:end="361:52">NULL</name></expr></argument>, <argument pos:start="361:55" pos:end="361:78"><expr pos:start="361:55" pos:end="361:78"><name pos:start="361:55" pos:end="361:78"><name pos:start="361:55" pos:end="361:55">c</name><operator pos:start="361:56" pos:end="361:57">-&gt;</operator><name pos:start="361:58" pos:end="361:78">lumMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="361:81" pos:end="361:90"><expr pos:start="361:81" pos:end="361:90"><name pos:start="361:81" pos:end="361:90">MEM_COMMIT</name></expr></argument>, <argument pos:start="361:93" pos:end="361:114"><expr pos:start="361:93" pos:end="361:114"><name pos:start="361:93" pos:end="361:114">PAGE_EXECUTE_READWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="366:0"><expr pos:start="363:13" pos:end="363:115"><name pos:start="363:13" pos:end="363:32"><name pos:start="363:13" pos:end="363:13">c</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:32">chrMmx2FilterCode</name></name> <operator pos:start="363:34" pos:end="363:34">=</operator> <call pos:start="363:36" pos:end="363:115"><name pos:start="363:36" pos:end="363:47">VirtualAlloc</name><argument_list pos:start="363:48" pos:end="363:115">(<argument pos:start="363:49" pos:end="363:52"><expr pos:start="363:49" pos:end="363:52"><name pos:start="363:49" pos:end="363:52">NULL</name></expr></argument>, <argument pos:start="363:55" pos:end="363:78"><expr pos:start="363:55" pos:end="363:78"><name pos:start="363:55" pos:end="363:78"><name pos:start="363:55" pos:end="363:55">c</name><operator pos:start="363:56" pos:end="363:57">-&gt;</operator><name pos:start="363:58" pos:end="363:78">chrMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="363:81" pos:end="363:90"><expr pos:start="363:81" pos:end="363:90"><name pos:start="363:81" pos:end="363:90">MEM_COMMIT</name></expr></argument>, <argument pos:start="363:93" pos:end="363:114"><expr pos:start="363:93" pos:end="363:114"><name pos:start="363:93" pos:end="363:114">PAGE_EXECUTE_READWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="365:1" pos:end="365:5">#<cpp:directive pos:start="365:2" pos:end="365:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="367:13" pos:end="367:71"><expr pos:start="367:13" pos:end="367:70"><name pos:start="367:13" pos:end="367:32"><name pos:start="367:13" pos:end="367:13">c</name><operator pos:start="367:14" pos:end="367:15">-&gt;</operator><name pos:start="367:16" pos:end="367:32">lumMmx2FilterCode</name></name> <operator pos:start="367:34" pos:end="367:34">=</operator> <call pos:start="367:36" pos:end="367:70"><name pos:start="367:36" pos:end="367:44">av_malloc</name><argument_list pos:start="367:45" pos:end="367:70">(<argument pos:start="367:46" pos:end="367:69"><expr pos:start="367:46" pos:end="367:69"><name pos:start="367:46" pos:end="367:69"><name pos:start="367:46" pos:end="367:46">c</name><operator pos:start="367:47" pos:end="367:48">-&gt;</operator><name pos:start="367:49" pos:end="367:69">lumMmx2FilterCodeSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="372:0"><expr pos:start="369:13" pos:end="369:70"><name pos:start="369:13" pos:end="369:32"><name pos:start="369:13" pos:end="369:13">c</name><operator pos:start="369:14" pos:end="369:15">-&gt;</operator><name pos:start="369:16" pos:end="369:32">chrMmx2FilterCode</name></name> <operator pos:start="369:34" pos:end="369:34">=</operator> <call pos:start="369:36" pos:end="369:70"><name pos:start="369:36" pos:end="369:44">av_malloc</name><argument_list pos:start="369:45" pos:end="369:70">(<argument pos:start="369:46" pos:end="369:69"><expr pos:start="369:46" pos:end="369:69"><name pos:start="369:46" pos:end="369:69"><name pos:start="369:46" pos:end="369:46">c</name><operator pos:start="369:47" pos:end="369:48">-&gt;</operator><name pos:start="369:49" pos:end="369:69">chrMmx2FilterCodeSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="371:1" pos:end="371:6">#<cpp:directive pos:start="371:2" pos:end="371:6">endif</cpp:directive></cpp:endif>



            <if_stmt pos:start="375:13" pos:end="377:26"><if pos:start="375:13" pos:end="377:26">if <condition pos:start="375:16" pos:end="375:63">(<expr pos:start="375:17" pos:end="375:62"><operator pos:start="375:17" pos:end="375:17">!</operator><name pos:start="375:18" pos:end="375:37"><name pos:start="375:18" pos:end="375:18">c</name><operator pos:start="375:19" pos:end="375:20">-&gt;</operator><name pos:start="375:21" pos:end="375:37">lumMmx2FilterCode</name></name> <operator pos:start="375:39" pos:end="375:40">||</operator> <operator pos:start="375:42" pos:end="375:42">!</operator><name pos:start="375:43" pos:end="375:62"><name pos:start="375:43" pos:end="375:43">c</name><operator pos:start="375:44" pos:end="375:45">-&gt;</operator><name pos:start="375:46" pos:end="375:62">chrMmx2FilterCode</name></name></expr>)</condition><block type="pseudo" pos:start="377:17" pos:end="377:26"><block_content pos:start="377:17" pos:end="377:26">

                <goto pos:start="377:17" pos:end="377:26">goto <name pos:start="377:22" pos:end="377:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="379:13" pos:end="379:93"><expr pos:start="379:13" pos:end="379:92"><call pos:start="379:13" pos:end="379:92"><name pos:start="379:13" pos:end="379:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="379:30" pos:end="379:92">(<argument pos:start="379:31" pos:end="379:31"><expr pos:start="379:31" pos:end="379:31"><name pos:start="379:31" pos:end="379:31">c</name></expr></argument>, <argument pos:start="379:34" pos:end="379:46"><expr pos:start="379:34" pos:end="379:46"><name pos:start="379:34" pos:end="379:46"><name pos:start="379:34" pos:end="379:34">c</name><operator pos:start="379:35" pos:end="379:36">-&gt;</operator><name pos:start="379:37" pos:end="379:46">hLumFilter</name></name></expr></argument>   , <argument pos:start="379:52" pos:end="379:85"><expr pos:start="379:52" pos:end="379:85"><operator pos:start="379:52" pos:end="379:52">(</operator><name pos:start="379:53" pos:end="379:56">dstW</name>        <operator pos:start="379:65" pos:end="379:65">/</operator><literal type="number" pos:start="379:66" pos:end="379:67">8</literal><operator pos:start="379:67" pos:end="379:67">+</operator><literal type="number" pos:start="379:68" pos:end="379:68">8</literal><operator pos:start="379:69" pos:end="379:69">)</operator><operator pos:start="379:70" pos:end="379:70">*</operator><sizeof pos:start="379:71" pos:end="379:85">sizeof<argument_list pos:start="379:77" pos:end="379:85">(<argument pos:start="379:78" pos:end="379:84"><expr pos:start="379:78" pos:end="379:84"><name pos:start="379:78" pos:end="379:84">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="379:88" pos:end="379:91"><expr pos:start="379:88" pos:end="379:91"><name pos:start="379:88" pos:end="379:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="381:13" pos:end="381:93"><expr pos:start="381:13" pos:end="381:92"><call pos:start="381:13" pos:end="381:92"><name pos:start="381:13" pos:end="381:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="381:30" pos:end="381:92">(<argument pos:start="381:31" pos:end="381:31"><expr pos:start="381:31" pos:end="381:31"><name pos:start="381:31" pos:end="381:31">c</name></expr></argument>, <argument pos:start="381:34" pos:end="381:46"><expr pos:start="381:34" pos:end="381:46"><name pos:start="381:34" pos:end="381:46"><name pos:start="381:34" pos:end="381:34">c</name><operator pos:start="381:35" pos:end="381:36">-&gt;</operator><name pos:start="381:37" pos:end="381:46">hChrFilter</name></name></expr></argument>   , <argument pos:start="381:52" pos:end="381:85"><expr pos:start="381:52" pos:end="381:85"><operator pos:start="381:52" pos:end="381:52">(</operator><name pos:start="381:53" pos:end="381:62"><name pos:start="381:53" pos:end="381:53">c</name><operator pos:start="381:54" pos:end="381:55">-&gt;</operator><name pos:start="381:56" pos:end="381:62">chrDstW</name></name>  <operator pos:start="381:65" pos:end="381:65">/</operator><literal type="number" pos:start="381:66" pos:end="381:67">4</literal><operator pos:start="381:67" pos:end="381:67">+</operator><literal type="number" pos:start="381:68" pos:end="381:68">8</literal><operator pos:start="381:69" pos:end="381:69">)</operator><operator pos:start="381:70" pos:end="381:70">*</operator><sizeof pos:start="381:71" pos:end="381:85">sizeof<argument_list pos:start="381:77" pos:end="381:85">(<argument pos:start="381:78" pos:end="381:84"><expr pos:start="381:78" pos:end="381:84"><name pos:start="381:78" pos:end="381:84">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="381:88" pos:end="381:91"><expr pos:start="381:88" pos:end="381:91"><name pos:start="381:88" pos:end="381:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="383:13" pos:end="383:93"><expr pos:start="383:13" pos:end="383:92"><call pos:start="383:13" pos:end="383:92"><name pos:start="383:13" pos:end="383:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="383:30" pos:end="383:92">(<argument pos:start="383:31" pos:end="383:31"><expr pos:start="383:31" pos:end="383:31"><name pos:start="383:31" pos:end="383:31">c</name></expr></argument>, <argument pos:start="383:34" pos:end="383:49"><expr pos:start="383:34" pos:end="383:49"><name pos:start="383:34" pos:end="383:49"><name pos:start="383:34" pos:end="383:34">c</name><operator pos:start="383:35" pos:end="383:36">-&gt;</operator><name pos:start="383:37" pos:end="383:49">hLumFilterPos</name></name></expr></argument>, <argument pos:start="383:52" pos:end="383:85"><expr pos:start="383:52" pos:end="383:85"><operator pos:start="383:52" pos:end="383:52">(</operator><name pos:start="383:53" pos:end="383:56">dstW</name>      <operator pos:start="383:63" pos:end="383:63">/</operator><literal type="number" pos:start="383:64" pos:end="383:64">2</literal><operator pos:start="383:65" pos:end="383:65">/</operator><literal type="number" pos:start="383:66" pos:end="383:67">8</literal><operator pos:start="383:67" pos:end="383:67">+</operator><literal type="number" pos:start="383:68" pos:end="383:68">8</literal><operator pos:start="383:69" pos:end="383:69">)</operator><operator pos:start="383:70" pos:end="383:70">*</operator><sizeof pos:start="383:71" pos:end="383:85">sizeof<argument_list pos:start="383:77" pos:end="383:85">(<argument pos:start="383:78" pos:end="383:84"><expr pos:start="383:78" pos:end="383:84"><name pos:start="383:78" pos:end="383:84">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="383:88" pos:end="383:91"><expr pos:start="383:88" pos:end="383:91"><name pos:start="383:88" pos:end="383:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="385:13" pos:end="385:93"><expr pos:start="385:13" pos:end="385:92"><call pos:start="385:13" pos:end="385:92"><name pos:start="385:13" pos:end="385:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="385:30" pos:end="385:92">(<argument pos:start="385:31" pos:end="385:31"><expr pos:start="385:31" pos:end="385:31"><name pos:start="385:31" pos:end="385:31">c</name></expr></argument>, <argument pos:start="385:34" pos:end="385:49"><expr pos:start="385:34" pos:end="385:49"><name pos:start="385:34" pos:end="385:49"><name pos:start="385:34" pos:end="385:34">c</name><operator pos:start="385:35" pos:end="385:36">-&gt;</operator><name pos:start="385:37" pos:end="385:49">hChrFilterPos</name></name></expr></argument>, <argument pos:start="385:52" pos:end="385:85"><expr pos:start="385:52" pos:end="385:85"><operator pos:start="385:52" pos:end="385:52">(</operator><name pos:start="385:53" pos:end="385:62"><name pos:start="385:53" pos:end="385:53">c</name><operator pos:start="385:54" pos:end="385:55">-&gt;</operator><name pos:start="385:56" pos:end="385:62">chrDstW</name></name><operator pos:start="385:63" pos:end="385:63">/</operator><literal type="number" pos:start="385:64" pos:end="385:64">2</literal><operator pos:start="385:65" pos:end="385:65">/</operator><literal type="number" pos:start="385:66" pos:end="385:67">4</literal><operator pos:start="385:67" pos:end="385:67">+</operator><literal type="number" pos:start="385:68" pos:end="385:68">8</literal><operator pos:start="385:69" pos:end="385:69">)</operator><operator pos:start="385:70" pos:end="385:70">*</operator><sizeof pos:start="385:71" pos:end="385:85">sizeof<argument_list pos:start="385:77" pos:end="385:85">(<argument pos:start="385:78" pos:end="385:84"><expr pos:start="385:78" pos:end="385:84"><name pos:start="385:78" pos:end="385:84">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="385:88" pos:end="385:91"><expr pos:start="385:88" pos:end="385:91"><name pos:start="385:88" pos:end="385:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="389:13" pos:end="389:110"><expr pos:start="389:13" pos:end="389:109"><call pos:start="389:13" pos:end="389:109"><name pos:start="389:13" pos:end="389:27">initMMX2HScaler</name><argument_list pos:start="389:28" pos:end="389:109">(      <argument pos:start="389:35" pos:end="389:38"><expr pos:start="389:35" pos:end="389:38"><name pos:start="389:35" pos:end="389:38">dstW</name></expr></argument>, <argument pos:start="389:41" pos:end="389:50"><expr pos:start="389:41" pos:end="389:50"><name pos:start="389:41" pos:end="389:50"><name pos:start="389:41" pos:end="389:41">c</name><operator pos:start="389:42" pos:end="389:43">-&gt;</operator><name pos:start="389:44" pos:end="389:50">lumXInc</name></name></expr></argument>, <argument pos:start="389:53" pos:end="389:72"><expr pos:start="389:53" pos:end="389:72"><name pos:start="389:53" pos:end="389:72"><name pos:start="389:53" pos:end="389:53">c</name><operator pos:start="389:54" pos:end="389:55">-&gt;</operator><name pos:start="389:56" pos:end="389:72">lumMmx2FilterCode</name></name></expr></argument>, <argument pos:start="389:75" pos:end="389:87"><expr pos:start="389:75" pos:end="389:87"><name pos:start="389:75" pos:end="389:87"><name pos:start="389:75" pos:end="389:75">c</name><operator pos:start="389:76" pos:end="389:77">-&gt;</operator><name pos:start="389:78" pos:end="389:87">hLumFilter</name></name></expr></argument>, <argument pos:start="389:90" pos:end="389:105"><expr pos:start="389:90" pos:end="389:105"><name pos:start="389:90" pos:end="389:105"><name pos:start="389:90" pos:end="389:90">c</name><operator pos:start="389:91" pos:end="389:92">-&gt;</operator><name pos:start="389:93" pos:end="389:105">hLumFilterPos</name></name></expr></argument>, <argument pos:start="389:108" pos:end="389:108"><expr pos:start="389:108" pos:end="389:108"><literal type="number" pos:start="389:108" pos:end="389:108">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="391:13" pos:end="396:0"><expr pos:start="391:13" pos:end="391:109"><call pos:start="391:13" pos:end="391:109"><name pos:start="391:13" pos:end="391:27">initMMX2HScaler</name><argument_list pos:start="391:28" pos:end="391:109">(<argument pos:start="391:29" pos:end="391:38"><expr pos:start="391:29" pos:end="391:38"><name pos:start="391:29" pos:end="391:38"><name pos:start="391:29" pos:end="391:29">c</name><operator pos:start="391:30" pos:end="391:31">-&gt;</operator><name pos:start="391:32" pos:end="391:38">chrDstW</name></name></expr></argument>, <argument pos:start="391:41" pos:end="391:50"><expr pos:start="391:41" pos:end="391:50"><name pos:start="391:41" pos:end="391:50"><name pos:start="391:41" pos:end="391:41">c</name><operator pos:start="391:42" pos:end="391:43">-&gt;</operator><name pos:start="391:44" pos:end="391:50">chrXInc</name></name></expr></argument>, <argument pos:start="391:53" pos:end="391:72"><expr pos:start="391:53" pos:end="391:72"><name pos:start="391:53" pos:end="391:72"><name pos:start="391:53" pos:end="391:53">c</name><operator pos:start="391:54" pos:end="391:55">-&gt;</operator><name pos:start="391:56" pos:end="391:72">chrMmx2FilterCode</name></name></expr></argument>, <argument pos:start="391:75" pos:end="391:87"><expr pos:start="391:75" pos:end="391:87"><name pos:start="391:75" pos:end="391:87"><name pos:start="391:75" pos:end="391:75">c</name><operator pos:start="391:76" pos:end="391:77">-&gt;</operator><name pos:start="391:78" pos:end="391:87">hChrFilter</name></name></expr></argument>, <argument pos:start="391:90" pos:end="391:105"><expr pos:start="391:90" pos:end="391:105"><name pos:start="391:90" pos:end="391:105"><name pos:start="391:90" pos:end="391:90">c</name><operator pos:start="391:91" pos:end="391:92">-&gt;</operator><name pos:start="391:93" pos:end="391:105">hChrFilterPos</name></name></expr></argument>, <argument pos:start="391:108" pos:end="391:108"><expr pos:start="391:108" pos:end="391:108"><literal type="number" pos:start="391:108" pos:end="391:108">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="395:1" pos:end="395:20">#<cpp:directive pos:start="395:2" pos:end="395:6">ifdef</cpp:directive> <name pos:start="395:8" pos:end="395:20">MAP_ANONYMOUS</name></cpp:ifdef>

            <expr_stmt pos:start="397:13" pos:end="397:92"><expr pos:start="397:13" pos:end="397:91"><call pos:start="397:13" pos:end="397:91"><name pos:start="397:13" pos:end="397:20">mprotect</name><argument_list pos:start="397:21" pos:end="397:91">(<argument pos:start="397:22" pos:end="397:41"><expr pos:start="397:22" pos:end="397:41"><name pos:start="397:22" pos:end="397:41"><name pos:start="397:22" pos:end="397:22">c</name><operator pos:start="397:23" pos:end="397:24">-&gt;</operator><name pos:start="397:25" pos:end="397:41">lumMmx2FilterCode</name></name></expr></argument>, <argument pos:start="397:44" pos:end="397:67"><expr pos:start="397:44" pos:end="397:67"><name pos:start="397:44" pos:end="397:67"><name pos:start="397:44" pos:end="397:44">c</name><operator pos:start="397:45" pos:end="397:46">-&gt;</operator><name pos:start="397:47" pos:end="397:67">lumMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="397:70" pos:end="397:90"><expr pos:start="397:70" pos:end="397:90"><name pos:start="397:70" pos:end="397:78">PROT_EXEC</name> <operator pos:start="397:80" pos:end="397:80">|</operator> <name pos:start="397:82" pos:end="397:90">PROT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="399:13" pos:end="402:0"><expr pos:start="399:13" pos:end="399:91"><call pos:start="399:13" pos:end="399:91"><name pos:start="399:13" pos:end="399:20">mprotect</name><argument_list pos:start="399:21" pos:end="399:91">(<argument pos:start="399:22" pos:end="399:41"><expr pos:start="399:22" pos:end="399:41"><name pos:start="399:22" pos:end="399:41"><name pos:start="399:22" pos:end="399:22">c</name><operator pos:start="399:23" pos:end="399:24">-&gt;</operator><name pos:start="399:25" pos:end="399:41">chrMmx2FilterCode</name></name></expr></argument>, <argument pos:start="399:44" pos:end="399:67"><expr pos:start="399:44" pos:end="399:67"><name pos:start="399:44" pos:end="399:67"><name pos:start="399:44" pos:end="399:44">c</name><operator pos:start="399:45" pos:end="399:46">-&gt;</operator><name pos:start="399:47" pos:end="399:67">chrMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="399:70" pos:end="399:90"><expr pos:start="399:70" pos:end="399:90"><name pos:start="399:70" pos:end="399:78">PROT_EXEC</name> <operator pos:start="399:80" pos:end="399:80">|</operator> <name pos:start="399:82" pos:end="399:90">PROT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="401:1" pos:end="401:6">#<cpp:directive pos:start="401:2" pos:end="401:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="403:11" pos:end="439:9">else

<cpp:endif pos:start="405:1" pos:end="405:6">#<cpp:directive pos:start="405:2" pos:end="405:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="405:8" pos:end="405:78">/* ARCH_X86 &amp;&amp; (HAVE_MMX2 || CONFIG_RUNTIME_CPUDETECT) &amp;&amp; CONFIG_GPL */</comment>

        <block pos:start="407:9" pos:end="439:9">{<block_content pos:start="409:13" pos:end="437:26">

            <decl_stmt pos:start="409:13" pos:end="415:18"><decl pos:start="409:13" pos:end="415:17"><type pos:start="409:13" pos:end="409:21"><specifier pos:start="409:13" pos:end="409:17">const</specifier> <name pos:start="409:19" pos:end="409:21">int</name></type> <name pos:start="409:23" pos:end="409:33">filterAlign</name><init pos:start="409:34" pos:end="415:17">=

                <expr pos:start="411:17" pos:end="415:17"><ternary pos:start="411:17" pos:end="415:17"><condition pos:start="411:17" pos:end="411:44"><expr pos:start="411:17" pos:end="411:42"><operator pos:start="411:17" pos:end="411:17">(</operator><name pos:start="411:18" pos:end="411:22">flags</name> <operator pos:start="411:24" pos:end="411:24">&amp;</operator> <name pos:start="411:26" pos:end="411:41">SWS_CPU_CAPS_MMX</name><operator pos:start="411:42" pos:end="411:42">)</operator></expr> ?</condition><then pos:start="411:46" pos:end="411:46"> <expr pos:start="411:46" pos:end="411:46"><literal type="number" pos:start="411:46" pos:end="411:46">4</literal></expr> </then><else pos:start="411:48" pos:end="415:17">:

                <expr pos:start="413:17" pos:end="415:17"><ternary pos:start="413:17" pos:end="415:17"><condition pos:start="413:17" pos:end="413:48"><expr pos:start="413:17" pos:end="413:46"><operator pos:start="413:17" pos:end="413:17">(</operator><name pos:start="413:18" pos:end="413:22">flags</name> <operator pos:start="413:24" pos:end="413:24">&amp;</operator> <name pos:start="413:26" pos:end="413:45">SWS_CPU_CAPS_ALTIVEC</name><operator pos:start="413:46" pos:end="413:46">)</operator></expr> ?</condition><then pos:start="413:50" pos:end="413:50"> <expr pos:start="413:50" pos:end="413:50"><literal type="number" pos:start="413:50" pos:end="413:50">8</literal></expr> </then><else pos:start="413:52" pos:end="415:17">:

                <expr pos:start="415:17" pos:end="415:17"><literal type="number" pos:start="415:17" pos:end="415:17">1</literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="419:13" pos:end="427:26"><if pos:start="419:13" pos:end="427:26">if <condition pos:start="419:16" pos:end="425:75">(<expr pos:start="419:17" pos:end="425:74"><call pos:start="419:17" pos:end="425:70"><name pos:start="419:17" pos:end="419:26">initFilter</name><argument_list pos:start="419:27" pos:end="425:70">(<argument pos:start="419:28" pos:end="419:41"><expr pos:start="419:28" pos:end="419:41"><operator pos:start="419:28" pos:end="419:28">&amp;</operator><name pos:start="419:29" pos:end="419:41"><name pos:start="419:29" pos:end="419:29">c</name><operator pos:start="419:30" pos:end="419:31">-&gt;</operator><name pos:start="419:32" pos:end="419:41">hLumFilter</name></name></expr></argument>, <argument pos:start="419:44" pos:end="419:60"><expr pos:start="419:44" pos:end="419:60"><operator pos:start="419:44" pos:end="419:44">&amp;</operator><name pos:start="419:45" pos:end="419:60"><name pos:start="419:45" pos:end="419:45">c</name><operator pos:start="419:46" pos:end="419:47">-&gt;</operator><name pos:start="419:48" pos:end="419:60">hLumFilterPos</name></name></expr></argument>, <argument pos:start="419:63" pos:end="419:80"><expr pos:start="419:63" pos:end="419:80"><operator pos:start="419:63" pos:end="419:63">&amp;</operator><name pos:start="419:64" pos:end="419:80"><name pos:start="419:64" pos:end="419:64">c</name><operator pos:start="419:65" pos:end="419:66">-&gt;</operator><name pos:start="419:67" pos:end="419:80">hLumFilterSize</name></name></expr></argument>, <argument pos:start="419:83" pos:end="419:92"><expr pos:start="419:83" pos:end="419:92"><name pos:start="419:83" pos:end="419:92"><name pos:start="419:83" pos:end="419:83">c</name><operator pos:start="419:84" pos:end="419:85">-&gt;</operator><name pos:start="419:86" pos:end="419:92">lumXInc</name></name></expr></argument>,

                           <argument pos:start="421:28" pos:end="421:31"><expr pos:start="421:28" pos:end="421:31"><name pos:start="421:28" pos:end="421:31">srcW</name></expr></argument>      ,       <argument pos:start="421:46" pos:end="421:49"><expr pos:start="421:46" pos:end="421:49"><name pos:start="421:46" pos:end="421:49">dstW</name></expr></argument>, <argument pos:start="421:52" pos:end="421:62"><expr pos:start="421:52" pos:end="421:62"><name pos:start="421:52" pos:end="421:62">filterAlign</name></expr></argument>, <argument pos:start="421:65" pos:end="421:69"><expr pos:start="421:65" pos:end="421:69"><literal type="number" pos:start="421:65" pos:end="421:65">1</literal><operator pos:start="421:66" pos:end="421:67">&lt;&lt;</operator><literal type="number" pos:start="421:68" pos:end="421:69">14</literal></expr></argument>,

                           <argument pos:start="423:28" pos:end="423:78"><expr pos:start="423:28" pos:end="423:78"><ternary pos:start="423:28" pos:end="423:78"><condition pos:start="423:28" pos:end="423:49"><expr pos:start="423:28" pos:end="423:47"><operator pos:start="423:28" pos:end="423:28">(</operator><name pos:start="423:29" pos:end="423:33">flags</name><operator pos:start="423:34" pos:end="423:34">&amp;</operator><name pos:start="423:35" pos:end="423:46">SWS_BICUBLIN</name><operator pos:start="423:47" pos:end="423:47">)</operator></expr> ?</condition><then pos:start="423:51" pos:end="423:69"> <expr pos:start="423:51" pos:end="423:69"><operator pos:start="423:51" pos:end="423:51">(</operator><name pos:start="423:52" pos:end="423:56">flags</name><operator pos:start="423:57" pos:end="423:57">|</operator><name pos:start="423:58" pos:end="423:68">SWS_BICUBIC</name><operator pos:start="423:69" pos:end="423:69">)</operator></expr>  </then><else pos:start="423:72" pos:end="423:78">: <expr pos:start="423:74" pos:end="423:78"><name pos:start="423:74" pos:end="423:78">flags</name></expr></else></ternary></expr></argument>,

                           <argument pos:start="425:28" pos:end="425:42"><expr pos:start="425:28" pos:end="425:42"><name pos:start="425:28" pos:end="425:42"><name pos:start="425:28" pos:end="425:36">srcFilter</name><operator pos:start="425:37" pos:end="425:38">-&gt;</operator><name pos:start="425:39" pos:end="425:42">lumH</name></name></expr></argument>, <argument pos:start="425:45" pos:end="425:59"><expr pos:start="425:45" pos:end="425:59"><name pos:start="425:45" pos:end="425:59"><name pos:start="425:45" pos:end="425:53">dstFilter</name><operator pos:start="425:54" pos:end="425:55">-&gt;</operator><name pos:start="425:56" pos:end="425:59">lumH</name></name></expr></argument>, <argument pos:start="425:62" pos:end="425:69"><expr pos:start="425:62" pos:end="425:69"><name pos:start="425:62" pos:end="425:69"><name pos:start="425:62" pos:end="425:62">c</name><operator pos:start="425:63" pos:end="425:64">-&gt;</operator><name pos:start="425:65" pos:end="425:69">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="425:72" pos:end="425:72">&lt;</operator> <literal type="number" pos:start="425:74" pos:end="425:74">0</literal></expr>)</condition><block type="pseudo" pos:start="427:17" pos:end="427:26"><block_content pos:start="427:17" pos:end="427:26">

                <goto pos:start="427:17" pos:end="427:26">goto <name pos:start="427:22" pos:end="427:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="429:13" pos:end="437:26"><if pos:start="429:13" pos:end="437:26">if <condition pos:start="429:16" pos:end="435:75">(<expr pos:start="429:17" pos:end="435:74"><call pos:start="429:17" pos:end="435:70"><name pos:start="429:17" pos:end="429:26">initFilter</name><argument_list pos:start="429:27" pos:end="435:70">(<argument pos:start="429:28" pos:end="429:41"><expr pos:start="429:28" pos:end="429:41"><operator pos:start="429:28" pos:end="429:28">&amp;</operator><name pos:start="429:29" pos:end="429:41"><name pos:start="429:29" pos:end="429:29">c</name><operator pos:start="429:30" pos:end="429:31">-&gt;</operator><name pos:start="429:32" pos:end="429:41">hChrFilter</name></name></expr></argument>, <argument pos:start="429:44" pos:end="429:60"><expr pos:start="429:44" pos:end="429:60"><operator pos:start="429:44" pos:end="429:44">&amp;</operator><name pos:start="429:45" pos:end="429:60"><name pos:start="429:45" pos:end="429:45">c</name><operator pos:start="429:46" pos:end="429:47">-&gt;</operator><name pos:start="429:48" pos:end="429:60">hChrFilterPos</name></name></expr></argument>, <argument pos:start="429:63" pos:end="429:80"><expr pos:start="429:63" pos:end="429:80"><operator pos:start="429:63" pos:end="429:63">&amp;</operator><name pos:start="429:64" pos:end="429:80"><name pos:start="429:64" pos:end="429:64">c</name><operator pos:start="429:65" pos:end="429:66">-&gt;</operator><name pos:start="429:67" pos:end="429:80">hChrFilterSize</name></name></expr></argument>, <argument pos:start="429:83" pos:end="429:92"><expr pos:start="429:83" pos:end="429:92"><name pos:start="429:83" pos:end="429:92"><name pos:start="429:83" pos:end="429:83">c</name><operator pos:start="429:84" pos:end="429:85">-&gt;</operator><name pos:start="429:86" pos:end="429:92">chrXInc</name></name></expr></argument>,

                           <argument pos:start="431:28" pos:end="431:37"><expr pos:start="431:28" pos:end="431:37"><name pos:start="431:28" pos:end="431:37"><name pos:start="431:28" pos:end="431:28">c</name><operator pos:start="431:29" pos:end="431:30">-&gt;</operator><name pos:start="431:31" pos:end="431:37">chrSrcW</name></name></expr></argument>, <argument pos:start="431:40" pos:end="431:49"><expr pos:start="431:40" pos:end="431:49"><name pos:start="431:40" pos:end="431:49"><name pos:start="431:40" pos:end="431:40">c</name><operator pos:start="431:41" pos:end="431:42">-&gt;</operator><name pos:start="431:43" pos:end="431:49">chrDstW</name></name></expr></argument>, <argument pos:start="431:52" pos:end="431:62"><expr pos:start="431:52" pos:end="431:62"><name pos:start="431:52" pos:end="431:62">filterAlign</name></expr></argument>, <argument pos:start="431:65" pos:end="431:69"><expr pos:start="431:65" pos:end="431:69"><literal type="number" pos:start="431:65" pos:end="431:65">1</literal><operator pos:start="431:66" pos:end="431:67">&lt;&lt;</operator><literal type="number" pos:start="431:68" pos:end="431:69">14</literal></expr></argument>,

                           <argument pos:start="433:28" pos:end="433:78"><expr pos:start="433:28" pos:end="433:78"><ternary pos:start="433:28" pos:end="433:78"><condition pos:start="433:28" pos:end="433:49"><expr pos:start="433:28" pos:end="433:47"><operator pos:start="433:28" pos:end="433:28">(</operator><name pos:start="433:29" pos:end="433:33">flags</name><operator pos:start="433:34" pos:end="433:34">&amp;</operator><name pos:start="433:35" pos:end="433:46">SWS_BICUBLIN</name><operator pos:start="433:47" pos:end="433:47">)</operator></expr> ?</condition><then pos:start="433:51" pos:end="433:70"> <expr pos:start="433:51" pos:end="433:70"><operator pos:start="433:51" pos:end="433:51">(</operator><name pos:start="433:52" pos:end="433:56">flags</name><operator pos:start="433:57" pos:end="433:57">|</operator><name pos:start="433:58" pos:end="433:69">SWS_BILINEAR</name><operator pos:start="433:70" pos:end="433:70">)</operator></expr> </then><else pos:start="433:72" pos:end="433:78">: <expr pos:start="433:74" pos:end="433:78"><name pos:start="433:74" pos:end="433:78">flags</name></expr></else></ternary></expr></argument>,

                           <argument pos:start="435:28" pos:end="435:42"><expr pos:start="435:28" pos:end="435:42"><name pos:start="435:28" pos:end="435:42"><name pos:start="435:28" pos:end="435:36">srcFilter</name><operator pos:start="435:37" pos:end="435:38">-&gt;</operator><name pos:start="435:39" pos:end="435:42">chrH</name></name></expr></argument>, <argument pos:start="435:45" pos:end="435:59"><expr pos:start="435:45" pos:end="435:59"><name pos:start="435:45" pos:end="435:59"><name pos:start="435:45" pos:end="435:53">dstFilter</name><operator pos:start="435:54" pos:end="435:55">-&gt;</operator><name pos:start="435:56" pos:end="435:59">chrH</name></name></expr></argument>, <argument pos:start="435:62" pos:end="435:69"><expr pos:start="435:62" pos:end="435:69"><name pos:start="435:62" pos:end="435:69"><name pos:start="435:62" pos:end="435:62">c</name><operator pos:start="435:63" pos:end="435:64">-&gt;</operator><name pos:start="435:65" pos:end="435:69">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="435:72" pos:end="435:72">&lt;</operator> <literal type="number" pos:start="435:74" pos:end="435:74">0</literal></expr>)</condition><block type="pseudo" pos:start="437:17" pos:end="437:26"><block_content pos:start="437:17" pos:end="437:26">

                <goto pos:start="437:17" pos:end="437:26">goto <name pos:start="437:22" pos:end="437:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block> <comment type="line" pos:start="441:7" pos:end="441:36">// initialize horizontal stuff</comment>



    <comment type="block" pos:start="445:5" pos:end="445:58">/* precalculate vertical scaler filter coefficients */</comment>

    <block pos:start="447:5" pos:end="517:5">{<block_content pos:start="449:9" pos:end="516:0">

        <decl_stmt pos:start="449:9" pos:end="455:14"><decl pos:start="449:9" pos:end="455:13"><type pos:start="449:9" pos:end="449:17"><specifier pos:start="449:9" pos:end="449:13">const</specifier> <name pos:start="449:15" pos:end="449:17">int</name></type> <name pos:start="449:19" pos:end="449:29">filterAlign</name><init pos:start="449:30" pos:end="455:13">=

            <expr pos:start="451:13" pos:end="455:13"><ternary pos:start="451:13" pos:end="455:13"><condition pos:start="451:13" pos:end="451:70"><expr pos:start="451:13" pos:end="451:68"><operator pos:start="451:13" pos:end="451:13">(</operator><name pos:start="451:14" pos:end="451:18">flags</name> <operator pos:start="451:20" pos:end="451:20">&amp;</operator> <name pos:start="451:22" pos:end="451:37">SWS_CPU_CAPS_MMX</name><operator pos:start="451:38" pos:end="451:38">)</operator> <operator pos:start="451:40" pos:end="451:41">&amp;&amp;</operator> <operator pos:start="451:43" pos:end="451:43">(</operator><name pos:start="451:44" pos:end="451:48">flags</name> <operator pos:start="451:50" pos:end="451:50">&amp;</operator> <name pos:start="451:52" pos:end="451:67">SWS_ACCURATE_RND</name><operator pos:start="451:68" pos:end="451:68">)</operator></expr> ?</condition><then pos:start="451:72" pos:end="451:72"> <expr pos:start="451:72" pos:end="451:72"><literal type="number" pos:start="451:72" pos:end="451:72">2</literal></expr> </then><else pos:start="451:74" pos:end="455:13">:

            <expr pos:start="453:13" pos:end="455:13"><ternary pos:start="453:13" pos:end="455:13"><condition pos:start="453:13" pos:end="453:44"><expr pos:start="453:13" pos:end="453:42"><operator pos:start="453:13" pos:end="453:13">(</operator><name pos:start="453:14" pos:end="453:18">flags</name> <operator pos:start="453:20" pos:end="453:20">&amp;</operator> <name pos:start="453:22" pos:end="453:41">SWS_CPU_CAPS_ALTIVEC</name><operator pos:start="453:42" pos:end="453:42">)</operator></expr> ?</condition><then pos:start="453:46" pos:end="453:46"> <expr pos:start="453:46" pos:end="453:46"><literal type="number" pos:start="453:46" pos:end="453:46">8</literal></expr> </then><else pos:start="453:48" pos:end="455:13">:

            <expr pos:start="455:13" pos:end="455:13"><literal type="number" pos:start="455:13" pos:end="455:13">1</literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="459:9" pos:end="467:22"><if pos:start="459:9" pos:end="467:22">if <condition pos:start="459:12" pos:end="465:71">(<expr pos:start="459:13" pos:end="465:70"><call pos:start="459:13" pos:end="465:66"><name pos:start="459:13" pos:end="459:22">initFilter</name><argument_list pos:start="459:23" pos:end="465:66">(<argument pos:start="459:24" pos:end="459:37"><expr pos:start="459:24" pos:end="459:37"><operator pos:start="459:24" pos:end="459:24">&amp;</operator><name pos:start="459:25" pos:end="459:37"><name pos:start="459:25" pos:end="459:25">c</name><operator pos:start="459:26" pos:end="459:27">-&gt;</operator><name pos:start="459:28" pos:end="459:37">vLumFilter</name></name></expr></argument>, <argument pos:start="459:40" pos:end="459:56"><expr pos:start="459:40" pos:end="459:56"><operator pos:start="459:40" pos:end="459:40">&amp;</operator><name pos:start="459:41" pos:end="459:56"><name pos:start="459:41" pos:end="459:41">c</name><operator pos:start="459:42" pos:end="459:43">-&gt;</operator><name pos:start="459:44" pos:end="459:56">vLumFilterPos</name></name></expr></argument>, <argument pos:start="459:59" pos:end="459:76"><expr pos:start="459:59" pos:end="459:76"><operator pos:start="459:59" pos:end="459:59">&amp;</operator><name pos:start="459:60" pos:end="459:76"><name pos:start="459:60" pos:end="459:60">c</name><operator pos:start="459:61" pos:end="459:62">-&gt;</operator><name pos:start="459:63" pos:end="459:76">vLumFilterSize</name></name></expr></argument>, <argument pos:start="459:79" pos:end="459:88"><expr pos:start="459:79" pos:end="459:88"><name pos:start="459:79" pos:end="459:88"><name pos:start="459:79" pos:end="459:79">c</name><operator pos:start="459:80" pos:end="459:81">-&gt;</operator><name pos:start="459:82" pos:end="459:88">lumYInc</name></name></expr></argument>,

                       <argument pos:start="461:24" pos:end="461:27"><expr pos:start="461:24" pos:end="461:27"><name pos:start="461:24" pos:end="461:27">srcH</name></expr></argument>      ,        <argument pos:start="461:43" pos:end="461:46"><expr pos:start="461:43" pos:end="461:46"><name pos:start="461:43" pos:end="461:46">dstH</name></expr></argument>, <argument pos:start="461:49" pos:end="461:59"><expr pos:start="461:49" pos:end="461:59"><name pos:start="461:49" pos:end="461:59">filterAlign</name></expr></argument>, <argument pos:start="461:62" pos:end="461:68"><expr pos:start="461:62" pos:end="461:68"><operator pos:start="461:62" pos:end="461:62">(</operator><literal type="number" pos:start="461:63" pos:end="461:63">1</literal><operator pos:start="461:64" pos:end="461:65">&lt;&lt;</operator><literal type="number" pos:start="461:66" pos:end="461:67">12</literal><operator pos:start="461:68" pos:end="461:68">)</operator></expr></argument>,

                       <argument pos:start="463:24" pos:end="463:74"><expr pos:start="463:24" pos:end="463:74"><ternary pos:start="463:24" pos:end="463:74"><condition pos:start="463:24" pos:end="463:45"><expr pos:start="463:24" pos:end="463:43"><operator pos:start="463:24" pos:end="463:24">(</operator><name pos:start="463:25" pos:end="463:29">flags</name><operator pos:start="463:30" pos:end="463:30">&amp;</operator><name pos:start="463:31" pos:end="463:42">SWS_BICUBLIN</name><operator pos:start="463:43" pos:end="463:43">)</operator></expr> ?</condition><then pos:start="463:47" pos:end="463:65"> <expr pos:start="463:47" pos:end="463:65"><operator pos:start="463:47" pos:end="463:47">(</operator><name pos:start="463:48" pos:end="463:52">flags</name><operator pos:start="463:53" pos:end="463:53">|</operator><name pos:start="463:54" pos:end="463:64">SWS_BICUBIC</name><operator pos:start="463:65" pos:end="463:65">)</operator></expr>  </then><else pos:start="463:68" pos:end="463:74">: <expr pos:start="463:70" pos:end="463:74"><name pos:start="463:70" pos:end="463:74">flags</name></expr></else></ternary></expr></argument>,

                       <argument pos:start="465:24" pos:end="465:38"><expr pos:start="465:24" pos:end="465:38"><name pos:start="465:24" pos:end="465:38"><name pos:start="465:24" pos:end="465:32">srcFilter</name><operator pos:start="465:33" pos:end="465:34">-&gt;</operator><name pos:start="465:35" pos:end="465:38">lumV</name></name></expr></argument>, <argument pos:start="465:41" pos:end="465:55"><expr pos:start="465:41" pos:end="465:55"><name pos:start="465:41" pos:end="465:55"><name pos:start="465:41" pos:end="465:49">dstFilter</name><operator pos:start="465:50" pos:end="465:51">-&gt;</operator><name pos:start="465:52" pos:end="465:55">lumV</name></name></expr></argument>, <argument pos:start="465:58" pos:end="465:65"><expr pos:start="465:58" pos:end="465:65"><name pos:start="465:58" pos:end="465:65"><name pos:start="465:58" pos:end="465:58">c</name><operator pos:start="465:59" pos:end="465:60">-&gt;</operator><name pos:start="465:61" pos:end="465:65">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="465:68" pos:end="465:68">&lt;</operator> <literal type="number" pos:start="465:70" pos:end="465:70">0</literal></expr>)</condition><block type="pseudo" pos:start="467:13" pos:end="467:22"><block_content pos:start="467:13" pos:end="467:22">

            <goto pos:start="467:13" pos:end="467:22">goto <name pos:start="467:18" pos:end="467:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="469:9" pos:end="482:0"><if pos:start="469:9" pos:end="482:0">if <condition pos:start="469:12" pos:end="475:71">(<expr pos:start="469:13" pos:end="475:70"><call pos:start="469:13" pos:end="475:66"><name pos:start="469:13" pos:end="469:22">initFilter</name><argument_list pos:start="469:23" pos:end="475:66">(<argument pos:start="469:24" pos:end="469:37"><expr pos:start="469:24" pos:end="469:37"><operator pos:start="469:24" pos:end="469:24">&amp;</operator><name pos:start="469:25" pos:end="469:37"><name pos:start="469:25" pos:end="469:25">c</name><operator pos:start="469:26" pos:end="469:27">-&gt;</operator><name pos:start="469:28" pos:end="469:37">vChrFilter</name></name></expr></argument>, <argument pos:start="469:40" pos:end="469:56"><expr pos:start="469:40" pos:end="469:56"><operator pos:start="469:40" pos:end="469:40">&amp;</operator><name pos:start="469:41" pos:end="469:56"><name pos:start="469:41" pos:end="469:41">c</name><operator pos:start="469:42" pos:end="469:43">-&gt;</operator><name pos:start="469:44" pos:end="469:56">vChrFilterPos</name></name></expr></argument>, <argument pos:start="469:59" pos:end="469:76"><expr pos:start="469:59" pos:end="469:76"><operator pos:start="469:59" pos:end="469:59">&amp;</operator><name pos:start="469:60" pos:end="469:76"><name pos:start="469:60" pos:end="469:60">c</name><operator pos:start="469:61" pos:end="469:62">-&gt;</operator><name pos:start="469:63" pos:end="469:76">vChrFilterSize</name></name></expr></argument>, <argument pos:start="469:79" pos:end="469:88"><expr pos:start="469:79" pos:end="469:88"><name pos:start="469:79" pos:end="469:88"><name pos:start="469:79" pos:end="469:79">c</name><operator pos:start="469:80" pos:end="469:81">-&gt;</operator><name pos:start="469:82" pos:end="469:88">chrYInc</name></name></expr></argument>,

                       <argument pos:start="471:24" pos:end="471:33"><expr pos:start="471:24" pos:end="471:33"><name pos:start="471:24" pos:end="471:33"><name pos:start="471:24" pos:end="471:24">c</name><operator pos:start="471:25" pos:end="471:26">-&gt;</operator><name pos:start="471:27" pos:end="471:33">chrSrcH</name></name></expr></argument>, <argument pos:start="471:36" pos:end="471:45"><expr pos:start="471:36" pos:end="471:45"><name pos:start="471:36" pos:end="471:45"><name pos:start="471:36" pos:end="471:36">c</name><operator pos:start="471:37" pos:end="471:38">-&gt;</operator><name pos:start="471:39" pos:end="471:45">chrDstH</name></name></expr></argument>, <argument pos:start="471:48" pos:end="471:58"><expr pos:start="471:48" pos:end="471:58"><name pos:start="471:48" pos:end="471:58">filterAlign</name></expr></argument>, <argument pos:start="471:61" pos:end="471:67"><expr pos:start="471:61" pos:end="471:67"><operator pos:start="471:61" pos:end="471:61">(</operator><literal type="number" pos:start="471:62" pos:end="471:62">1</literal><operator pos:start="471:63" pos:end="471:64">&lt;&lt;</operator><literal type="number" pos:start="471:65" pos:end="471:66">12</literal><operator pos:start="471:67" pos:end="471:67">)</operator></expr></argument>,

                       <argument pos:start="473:24" pos:end="473:74"><expr pos:start="473:24" pos:end="473:74"><ternary pos:start="473:24" pos:end="473:74"><condition pos:start="473:24" pos:end="473:45"><expr pos:start="473:24" pos:end="473:43"><operator pos:start="473:24" pos:end="473:24">(</operator><name pos:start="473:25" pos:end="473:29">flags</name><operator pos:start="473:30" pos:end="473:30">&amp;</operator><name pos:start="473:31" pos:end="473:42">SWS_BICUBLIN</name><operator pos:start="473:43" pos:end="473:43">)</operator></expr> ?</condition><then pos:start="473:47" pos:end="473:66"> <expr pos:start="473:47" pos:end="473:66"><operator pos:start="473:47" pos:end="473:47">(</operator><name pos:start="473:48" pos:end="473:52">flags</name><operator pos:start="473:53" pos:end="473:53">|</operator><name pos:start="473:54" pos:end="473:65">SWS_BILINEAR</name><operator pos:start="473:66" pos:end="473:66">)</operator></expr> </then><else pos:start="473:68" pos:end="473:74">: <expr pos:start="473:70" pos:end="473:74"><name pos:start="473:70" pos:end="473:74">flags</name></expr></else></ternary></expr></argument>,

                       <argument pos:start="475:24" pos:end="475:38"><expr pos:start="475:24" pos:end="475:38"><name pos:start="475:24" pos:end="475:38"><name pos:start="475:24" pos:end="475:32">srcFilter</name><operator pos:start="475:33" pos:end="475:34">-&gt;</operator><name pos:start="475:35" pos:end="475:38">chrV</name></name></expr></argument>, <argument pos:start="475:41" pos:end="475:55"><expr pos:start="475:41" pos:end="475:55"><name pos:start="475:41" pos:end="475:55"><name pos:start="475:41" pos:end="475:49">dstFilter</name><operator pos:start="475:50" pos:end="475:51">-&gt;</operator><name pos:start="475:52" pos:end="475:55">chrV</name></name></expr></argument>, <argument pos:start="475:58" pos:end="475:65"><expr pos:start="475:58" pos:end="475:65"><name pos:start="475:58" pos:end="475:65"><name pos:start="475:58" pos:end="475:58">c</name><operator pos:start="475:59" pos:end="475:60">-&gt;</operator><name pos:start="475:61" pos:end="475:65">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="475:68" pos:end="475:68">&lt;</operator> <literal type="number" pos:start="475:70" pos:end="475:70">0</literal></expr>)</condition><block type="pseudo" pos:start="477:13" pos:end="482:0"><block_content pos:start="477:13" pos:end="482:0">

            <goto pos:start="477:13" pos:end="482:0">goto <name pos:start="477:18" pos:end="477:21">fail</name>;</goto></block_content></block></if></if_stmt>



<cpp:if pos:start="481:1" pos:end="481:28">#<cpp:directive pos:start="481:2" pos:end="481:3">if</cpp:directive> <expr pos:start="481:5" pos:end="481:28"><name pos:start="481:5" pos:end="481:12">ARCH_PPC</name> <operator pos:start="481:14" pos:end="481:15">&amp;&amp;</operator> <name pos:start="481:17" pos:end="481:28">HAVE_ALTIVEC</name></expr></cpp:if>

        <expr_stmt pos:start="483:9" pos:end="483:107"><expr pos:start="483:9" pos:end="483:106"><call pos:start="483:9" pos:end="483:106"><name pos:start="483:9" pos:end="483:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="483:25" pos:end="483:106">(<argument pos:start="483:26" pos:end="483:26"><expr pos:start="483:26" pos:end="483:26"><name pos:start="483:26" pos:end="483:26">c</name></expr></argument>, <argument pos:start="483:29" pos:end="483:43"><expr pos:start="483:29" pos:end="483:43"><name pos:start="483:29" pos:end="483:43"><name pos:start="483:29" pos:end="483:29">c</name><operator pos:start="483:30" pos:end="483:31">-&gt;</operator><name pos:start="483:32" pos:end="483:43">vYCoeffsBank</name></name></expr></argument>, <argument pos:start="483:46" pos:end="483:99"><expr pos:start="483:46" pos:end="483:99">sizeof <operator pos:start="483:53" pos:end="483:53">(</operator><name pos:start="483:54" pos:end="483:59">vector</name> <name pos:start="483:61" pos:end="483:66">signed</name> <name pos:start="483:68" pos:end="483:72">short</name><operator pos:start="483:73" pos:end="483:73">)</operator><operator pos:start="483:74" pos:end="483:74">*</operator><name pos:start="483:75" pos:end="483:91"><name pos:start="483:75" pos:end="483:75">c</name><operator pos:start="483:76" pos:end="483:77">-&gt;</operator><name pos:start="483:78" pos:end="483:91">vLumFilterSize</name></name><operator pos:start="483:92" pos:end="483:92">*</operator><name pos:start="483:93" pos:end="483:99"><name pos:start="483:93" pos:end="483:93">c</name><operator pos:start="483:94" pos:end="483:95">-&gt;</operator><name pos:start="483:96" pos:end="483:99">dstH</name></name></expr></argument>, <argument pos:start="483:102" pos:end="483:105"><expr pos:start="483:102" pos:end="483:105"><name pos:start="483:102" pos:end="483:105">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="485:9" pos:end="485:110"><expr pos:start="485:9" pos:end="485:109"><call pos:start="485:9" pos:end="485:109"><name pos:start="485:9" pos:end="485:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="485:25" pos:end="485:109">(<argument pos:start="485:26" pos:end="485:26"><expr pos:start="485:26" pos:end="485:26"><name pos:start="485:26" pos:end="485:26">c</name></expr></argument>, <argument pos:start="485:29" pos:end="485:43"><expr pos:start="485:29" pos:end="485:43"><name pos:start="485:29" pos:end="485:43"><name pos:start="485:29" pos:end="485:29">c</name><operator pos:start="485:30" pos:end="485:31">-&gt;</operator><name pos:start="485:32" pos:end="485:43">vCCoeffsBank</name></name></expr></argument>, <argument pos:start="485:46" pos:end="485:102"><expr pos:start="485:46" pos:end="485:102">sizeof <operator pos:start="485:53" pos:end="485:53">(</operator><name pos:start="485:54" pos:end="485:59">vector</name> <name pos:start="485:61" pos:end="485:66">signed</name> <name pos:start="485:68" pos:end="485:72">short</name><operator pos:start="485:73" pos:end="485:73">)</operator><operator pos:start="485:74" pos:end="485:74">*</operator><name pos:start="485:75" pos:end="485:91"><name pos:start="485:75" pos:end="485:75">c</name><operator pos:start="485:76" pos:end="485:77">-&gt;</operator><name pos:start="485:78" pos:end="485:91">vChrFilterSize</name></name><operator pos:start="485:92" pos:end="485:92">*</operator><name pos:start="485:93" pos:end="485:102"><name pos:start="485:93" pos:end="485:93">c</name><operator pos:start="485:94" pos:end="485:95">-&gt;</operator><name pos:start="485:96" pos:end="485:102">chrDstH</name></name></expr></argument>, <argument pos:start="485:105" pos:end="485:108"><expr pos:start="485:105" pos:end="485:108"><name pos:start="485:105" pos:end="485:108">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="489:9" pos:end="499:9">for <control pos:start="489:13" pos:end="489:49">(<init pos:start="489:14" pos:end="489:17"><expr pos:start="489:14" pos:end="489:16"><name pos:start="489:14" pos:end="489:14">i</name><operator pos:start="489:15" pos:end="489:15">=</operator><literal type="number" pos:start="489:16" pos:end="489:16">0</literal></expr>;</init><condition pos:start="489:18" pos:end="489:45"><expr pos:start="489:18" pos:end="489:44"><name pos:start="489:18" pos:end="489:18">i</name><operator pos:start="489:19" pos:end="489:19">&lt;</operator><name pos:start="489:20" pos:end="489:36"><name pos:start="489:20" pos:end="489:20">c</name><operator pos:start="489:21" pos:end="489:22">-&gt;</operator><name pos:start="489:23" pos:end="489:36">vLumFilterSize</name></name><operator pos:start="489:37" pos:end="489:37">*</operator><name pos:start="489:38" pos:end="489:44"><name pos:start="489:38" pos:end="489:38">c</name><operator pos:start="489:39" pos:end="489:40">-&gt;</operator><name pos:start="489:41" pos:end="489:44">dstH</name></name></expr>;</condition><incr pos:start="489:46" pos:end="489:48"><expr pos:start="489:46" pos:end="489:48"><name pos:start="489:46" pos:end="489:46">i</name><operator pos:start="489:47" pos:end="489:48">++</operator></expr></incr>)</control> <block pos:start="489:51" pos:end="499:9">{<block_content pos:start="491:13" pos:end="497:40">

            <decl_stmt pos:start="491:13" pos:end="491:18"><decl pos:start="491:13" pos:end="491:17"><type pos:start="491:13" pos:end="491:15"><name pos:start="491:13" pos:end="491:15">int</name></type> <name pos:start="491:17" pos:end="491:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="493:13" pos:end="493:52"><decl pos:start="493:13" pos:end="493:51"><type pos:start="493:13" pos:end="493:19"><name pos:start="493:13" pos:end="493:17">short</name> <modifier pos:start="493:19" pos:end="493:19">*</modifier></type><name pos:start="493:20" pos:end="493:20">p</name> <init pos:start="493:22" pos:end="493:51">= <expr pos:start="493:24" pos:end="493:51"><operator pos:start="493:24" pos:end="493:24">(</operator><name pos:start="493:25" pos:end="493:29">short</name> <operator pos:start="493:31" pos:end="493:31">*</operator><operator pos:start="493:32" pos:end="493:32">)</operator><operator pos:start="493:33" pos:end="493:33">&amp;</operator><name pos:start="493:34" pos:end="493:51"><name pos:start="493:34" pos:end="493:34">c</name><operator pos:start="493:35" pos:end="493:36">-&gt;</operator><name pos:start="493:37" pos:end="493:48">vYCoeffsBank</name><index pos:start="493:49" pos:end="493:51">[<expr pos:start="493:50" pos:end="493:50"><name pos:start="493:50" pos:end="493:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="495:13" pos:end="497:40">for <control pos:start="495:17" pos:end="495:29">(<init pos:start="495:18" pos:end="495:21"><expr pos:start="495:18" pos:end="495:20"><name pos:start="495:18" pos:end="495:18">j</name><operator pos:start="495:19" pos:end="495:19">=</operator><literal type="number" pos:start="495:20" pos:end="495:20">0</literal></expr>;</init><condition pos:start="495:22" pos:end="495:25"><expr pos:start="495:22" pos:end="495:24"><name pos:start="495:22" pos:end="495:22">j</name><operator pos:start="495:23" pos:end="495:23">&lt;</operator><literal type="number" pos:start="495:24" pos:end="495:24">8</literal></expr>;</condition><incr pos:start="495:26" pos:end="495:28"><expr pos:start="495:26" pos:end="495:28"><name pos:start="495:26" pos:end="495:26">j</name><operator pos:start="495:27" pos:end="495:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="497:17" pos:end="497:40"><block_content pos:start="497:17" pos:end="497:40">

                <expr_stmt pos:start="497:17" pos:end="497:40"><expr pos:start="497:17" pos:end="497:39"><name pos:start="497:17" pos:end="497:20"><name pos:start="497:17" pos:end="497:17">p</name><index pos:start="497:18" pos:end="497:20">[<expr pos:start="497:19" pos:end="497:19"><name pos:start="497:19" pos:end="497:19">j</name></expr>]</index></name> <operator pos:start="497:22" pos:end="497:22">=</operator> <name pos:start="497:24" pos:end="497:39"><name pos:start="497:24" pos:end="497:24">c</name><operator pos:start="497:25" pos:end="497:26">-&gt;</operator><name pos:start="497:27" pos:end="497:36">vLumFilter</name><index pos:start="497:37" pos:end="497:39">[<expr pos:start="497:38" pos:end="497:38"><name pos:start="497:38" pos:end="497:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>



        <for pos:start="503:9" pos:end="516:0">for <control pos:start="503:13" pos:end="503:52">(<init pos:start="503:14" pos:end="503:17"><expr pos:start="503:14" pos:end="503:16"><name pos:start="503:14" pos:end="503:14">i</name><operator pos:start="503:15" pos:end="503:15">=</operator><literal type="number" pos:start="503:16" pos:end="503:16">0</literal></expr>;</init><condition pos:start="503:18" pos:end="503:48"><expr pos:start="503:18" pos:end="503:47"><name pos:start="503:18" pos:end="503:18">i</name><operator pos:start="503:19" pos:end="503:19">&lt;</operator><name pos:start="503:20" pos:end="503:36"><name pos:start="503:20" pos:end="503:20">c</name><operator pos:start="503:21" pos:end="503:22">-&gt;</operator><name pos:start="503:23" pos:end="503:36">vChrFilterSize</name></name><operator pos:start="503:37" pos:end="503:37">*</operator><name pos:start="503:38" pos:end="503:47"><name pos:start="503:38" pos:end="503:38">c</name><operator pos:start="503:39" pos:end="503:40">-&gt;</operator><name pos:start="503:41" pos:end="503:47">chrDstH</name></name></expr>;</condition><incr pos:start="503:49" pos:end="503:51"><expr pos:start="503:49" pos:end="503:51"><name pos:start="503:49" pos:end="503:49">i</name><operator pos:start="503:50" pos:end="503:51">++</operator></expr></incr>)</control> <block pos:start="503:54" pos:end="516:0">{<block_content pos:start="505:13" pos:end="511:40">

            <decl_stmt pos:start="505:13" pos:end="505:18"><decl pos:start="505:13" pos:end="505:17"><type pos:start="505:13" pos:end="505:15"><name pos:start="505:13" pos:end="505:15">int</name></type> <name pos:start="505:17" pos:end="505:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="507:13" pos:end="507:52"><decl pos:start="507:13" pos:end="507:51"><type pos:start="507:13" pos:end="507:19"><name pos:start="507:13" pos:end="507:17">short</name> <modifier pos:start="507:19" pos:end="507:19">*</modifier></type><name pos:start="507:20" pos:end="507:20">p</name> <init pos:start="507:22" pos:end="507:51">= <expr pos:start="507:24" pos:end="507:51"><operator pos:start="507:24" pos:end="507:24">(</operator><name pos:start="507:25" pos:end="507:29">short</name> <operator pos:start="507:31" pos:end="507:31">*</operator><operator pos:start="507:32" pos:end="507:32">)</operator><operator pos:start="507:33" pos:end="507:33">&amp;</operator><name pos:start="507:34" pos:end="507:51"><name pos:start="507:34" pos:end="507:34">c</name><operator pos:start="507:35" pos:end="507:36">-&gt;</operator><name pos:start="507:37" pos:end="507:48">vCCoeffsBank</name><index pos:start="507:49" pos:end="507:51">[<expr pos:start="507:50" pos:end="507:50"><name pos:start="507:50" pos:end="507:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="509:13" pos:end="511:40">for <control pos:start="509:17" pos:end="509:29">(<init pos:start="509:18" pos:end="509:21"><expr pos:start="509:18" pos:end="509:20"><name pos:start="509:18" pos:end="509:18">j</name><operator pos:start="509:19" pos:end="509:19">=</operator><literal type="number" pos:start="509:20" pos:end="509:20">0</literal></expr>;</init><condition pos:start="509:22" pos:end="509:25"><expr pos:start="509:22" pos:end="509:24"><name pos:start="509:22" pos:end="509:22">j</name><operator pos:start="509:23" pos:end="509:23">&lt;</operator><literal type="number" pos:start="509:24" pos:end="509:24">8</literal></expr>;</condition><incr pos:start="509:26" pos:end="509:28"><expr pos:start="509:26" pos:end="509:28"><name pos:start="509:26" pos:end="509:26">j</name><operator pos:start="509:27" pos:end="509:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="511:17" pos:end="511:40"><block_content pos:start="511:17" pos:end="511:40">

                <expr_stmt pos:start="511:17" pos:end="511:40"><expr pos:start="511:17" pos:end="511:39"><name pos:start="511:17" pos:end="511:20"><name pos:start="511:17" pos:end="511:17">p</name><index pos:start="511:18" pos:end="511:20">[<expr pos:start="511:19" pos:end="511:19"><name pos:start="511:19" pos:end="511:19">j</name></expr>]</index></name> <operator pos:start="511:22" pos:end="511:22">=</operator> <name pos:start="511:24" pos:end="511:39"><name pos:start="511:24" pos:end="511:24">c</name><operator pos:start="511:25" pos:end="511:26">-&gt;</operator><name pos:start="511:27" pos:end="511:36">vChrFilter</name><index pos:start="511:37" pos:end="511:39">[<expr pos:start="511:38" pos:end="511:38"><name pos:start="511:38" pos:end="511:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>

<cpp:endif pos:start="515:1" pos:end="515:6">#<cpp:directive pos:start="515:2" pos:end="515:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block>



    <comment type="line" pos:start="521:5" pos:end="521:89">// calculate buffer sizes so that they won't run out while handling these damn slices</comment>

    <expr_stmt pos:start="523:5" pos:end="523:38"><expr pos:start="523:5" pos:end="523:37"><name pos:start="523:5" pos:end="523:18"><name pos:start="523:5" pos:end="523:5">c</name><operator pos:start="523:6" pos:end="523:7">-&gt;</operator><name pos:start="523:8" pos:end="523:18">vLumBufSize</name></name><operator pos:start="523:19" pos:end="523:19">=</operator> <name pos:start="523:21" pos:end="523:37"><name pos:start="523:21" pos:end="523:21">c</name><operator pos:start="523:22" pos:end="523:23">-&gt;</operator><name pos:start="523:24" pos:end="523:37">vLumFilterSize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="525:5" pos:end="525:38"><expr pos:start="525:5" pos:end="525:37"><name pos:start="525:5" pos:end="525:18"><name pos:start="525:5" pos:end="525:5">c</name><operator pos:start="525:6" pos:end="525:7">-&gt;</operator><name pos:start="525:8" pos:end="525:18">vChrBufSize</name></name><operator pos:start="525:19" pos:end="525:19">=</operator> <name pos:start="525:21" pos:end="525:37"><name pos:start="525:21" pos:end="525:21">c</name><operator pos:start="525:22" pos:end="525:23">-&gt;</operator><name pos:start="525:24" pos:end="525:37">vChrFilterSize</name></name></expr>;</expr_stmt>

    <for pos:start="527:5" pos:end="549:5">for <control pos:start="527:9" pos:end="527:26">(<init pos:start="527:10" pos:end="527:13"><expr pos:start="527:10" pos:end="527:12"><name pos:start="527:10" pos:end="527:10">i</name><operator pos:start="527:11" pos:end="527:11">=</operator><literal type="number" pos:start="527:12" pos:end="527:12">0</literal></expr>;</init> <condition pos:start="527:15" pos:end="527:21"><expr pos:start="527:15" pos:end="527:20"><name pos:start="527:15" pos:end="527:15">i</name><operator pos:start="527:16" pos:end="527:16">&lt;</operator><name pos:start="527:17" pos:end="527:20">dstH</name></expr>;</condition> <incr pos:start="527:23" pos:end="527:25"><expr pos:start="527:23" pos:end="527:25"><name pos:start="527:23" pos:end="527:23">i</name><operator pos:start="527:24" pos:end="527:25">++</operator></expr></incr>)</control> <block pos:start="527:28" pos:end="549:5">{<block_content pos:start="529:9" pos:end="547:86">

        <decl_stmt pos:start="529:9" pos:end="529:38"><decl pos:start="529:9" pos:end="529:37"><type pos:start="529:9" pos:end="529:11"><name pos:start="529:9" pos:end="529:11">int</name></type> <name pos:start="529:13" pos:end="529:16">chrI</name><init pos:start="529:17" pos:end="529:37">= <expr pos:start="529:19" pos:end="529:37"><name pos:start="529:19" pos:end="529:19">i</name><operator pos:start="529:20" pos:end="529:20">*</operator><name pos:start="529:21" pos:end="529:30"><name pos:start="529:21" pos:end="529:21">c</name><operator pos:start="529:22" pos:end="529:23">-&gt;</operator><name pos:start="529:24" pos:end="529:30">chrDstH</name></name> <operator pos:start="529:32" pos:end="529:32">/</operator> <name pos:start="529:34" pos:end="529:37">dstH</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="531:9" pos:end="533:100"><decl pos:start="531:9" pos:end="533:99"><type pos:start="531:9" pos:end="531:11"><name pos:start="531:9" pos:end="531:11">int</name></type> <name pos:start="531:13" pos:end="531:21">nextSlice</name><init pos:start="531:22" pos:end="533:99">= <expr pos:start="531:24" pos:end="533:99"><call pos:start="531:24" pos:end="533:99"><name pos:start="531:24" pos:end="531:28">FFMAX</name><argument_list pos:start="531:29" pos:end="533:99">(<argument pos:start="531:30" pos:end="531:75"><expr pos:start="531:30" pos:end="531:75"><name pos:start="531:30" pos:end="531:51"><name pos:start="531:30" pos:end="531:30">c</name><operator pos:start="531:31" pos:end="531:32">-&gt;</operator><name pos:start="531:33" pos:end="531:45">vLumFilterPos</name><index pos:start="531:46" pos:end="531:51">[<expr pos:start="531:47" pos:end="531:47"><name pos:start="531:47" pos:end="531:47">i</name></expr>   ]</index></name> <operator pos:start="531:53" pos:end="531:53">+</operator> <name pos:start="531:55" pos:end="531:71"><name pos:start="531:55" pos:end="531:55">c</name><operator pos:start="531:56" pos:end="531:57">-&gt;</operator><name pos:start="531:58" pos:end="531:71">vLumFilterSize</name></name> <operator pos:start="531:73" pos:end="531:73">-</operator> <literal type="number" pos:start="531:75" pos:end="531:75">1</literal></expr></argument>,

                           <argument pos:start="533:28" pos:end="533:98"><expr pos:start="533:28" pos:end="533:98"><operator pos:start="533:28" pos:end="533:28">(</operator><operator pos:start="533:29" pos:end="533:29">(</operator><name pos:start="533:30" pos:end="533:51"><name pos:start="533:30" pos:end="533:30">c</name><operator pos:start="533:31" pos:end="533:32">-&gt;</operator><name pos:start="533:33" pos:end="533:45">vChrFilterPos</name><index pos:start="533:46" pos:end="533:51">[<expr pos:start="533:47" pos:end="533:50"><name pos:start="533:47" pos:end="533:50">chrI</name></expr>]</index></name> <operator pos:start="533:53" pos:end="533:53">+</operator> <name pos:start="533:55" pos:end="533:71"><name pos:start="533:55" pos:end="533:55">c</name><operator pos:start="533:56" pos:end="533:57">-&gt;</operator><name pos:start="533:58" pos:end="533:71">vChrFilterSize</name></name> <operator pos:start="533:73" pos:end="533:73">-</operator> <literal type="number" pos:start="533:75" pos:end="533:75">1</literal><operator pos:start="533:76" pos:end="533:76">)</operator><operator pos:start="533:77" pos:end="533:78">&lt;&lt;</operator><name pos:start="533:79" pos:end="533:97"><name pos:start="533:79" pos:end="533:79">c</name><operator pos:start="533:80" pos:end="533:81">-&gt;</operator><name pos:start="533:82" pos:end="533:97">chrSrcVSubSample</name></name><operator pos:start="533:98" pos:end="533:98">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="537:9" pos:end="537:41"><expr pos:start="537:9" pos:end="537:40"><name pos:start="537:9" pos:end="537:17">nextSlice</name><operator pos:start="537:18" pos:end="537:20">&gt;&gt;=</operator> <name pos:start="537:22" pos:end="537:40"><name pos:start="537:22" pos:end="537:22">c</name><operator pos:start="537:23" pos:end="537:24">-&gt;</operator><name pos:start="537:25" pos:end="537:40">chrSrcVSubSample</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="539:9" pos:end="539:41"><expr pos:start="539:9" pos:end="539:40"><name pos:start="539:9" pos:end="539:17">nextSlice</name><operator pos:start="539:18" pos:end="539:20">&lt;&lt;=</operator> <name pos:start="539:22" pos:end="539:40"><name pos:start="539:22" pos:end="539:22">c</name><operator pos:start="539:23" pos:end="539:24">-&gt;</operator><name pos:start="539:25" pos:end="539:40">chrSrcVSubSample</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="541:9" pos:end="543:60"><if pos:start="541:9" pos:end="543:60">if <condition pos:start="541:12" pos:end="541:64">(<expr pos:start="541:13" pos:end="541:63"><name pos:start="541:13" pos:end="541:34"><name pos:start="541:13" pos:end="541:13">c</name><operator pos:start="541:14" pos:end="541:15">-&gt;</operator><name pos:start="541:16" pos:end="541:28">vLumFilterPos</name><index pos:start="541:29" pos:end="541:34">[<expr pos:start="541:30" pos:end="541:30"><name pos:start="541:30" pos:end="541:30">i</name></expr>   ]</index></name> <operator pos:start="541:36" pos:end="541:36">+</operator> <name pos:start="541:38" pos:end="541:51"><name pos:start="541:38" pos:end="541:38">c</name><operator pos:start="541:39" pos:end="541:40">-&gt;</operator><name pos:start="541:41" pos:end="541:51">vLumBufSize</name></name> <operator pos:start="541:53" pos:end="541:53">&lt;</operator> <name pos:start="541:55" pos:end="541:63">nextSlice</name></expr>)</condition><block type="pseudo" pos:start="543:13" pos:end="543:60"><block_content pos:start="543:13" pos:end="543:60">

            <expr_stmt pos:start="543:13" pos:end="543:60"><expr pos:start="543:13" pos:end="543:59"><name pos:start="543:13" pos:end="543:26"><name pos:start="543:13" pos:end="543:13">c</name><operator pos:start="543:14" pos:end="543:15">-&gt;</operator><name pos:start="543:16" pos:end="543:26">vLumBufSize</name></name><operator pos:start="543:27" pos:end="543:27">=</operator> <name pos:start="543:29" pos:end="543:37">nextSlice</name> <operator pos:start="543:39" pos:end="543:39">-</operator> <name pos:start="543:41" pos:end="543:59"><name pos:start="543:41" pos:end="543:41">c</name><operator pos:start="543:42" pos:end="543:43">-&gt;</operator><name pos:start="543:44" pos:end="543:56">vLumFilterPos</name><index pos:start="543:57" pos:end="543:59">[<expr pos:start="543:58" pos:end="543:58"><name pos:start="543:58" pos:end="543:58">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="545:9" pos:end="547:86"><if pos:start="545:9" pos:end="547:86">if <condition pos:start="545:12" pos:end="545:87">(<expr pos:start="545:13" pos:end="545:86"><name pos:start="545:13" pos:end="545:34"><name pos:start="545:13" pos:end="545:13">c</name><operator pos:start="545:14" pos:end="545:15">-&gt;</operator><name pos:start="545:16" pos:end="545:28">vChrFilterPos</name><index pos:start="545:29" pos:end="545:34">[<expr pos:start="545:30" pos:end="545:33"><name pos:start="545:30" pos:end="545:33">chrI</name></expr>]</index></name> <operator pos:start="545:36" pos:end="545:36">+</operator> <name pos:start="545:38" pos:end="545:51"><name pos:start="545:38" pos:end="545:38">c</name><operator pos:start="545:39" pos:end="545:40">-&gt;</operator><name pos:start="545:41" pos:end="545:51">vChrBufSize</name></name> <operator pos:start="545:53" pos:end="545:53">&lt;</operator> <operator pos:start="545:55" pos:end="545:55">(</operator><name pos:start="545:56" pos:end="545:64">nextSlice</name><operator pos:start="545:65" pos:end="545:66">&gt;&gt;</operator><name pos:start="545:67" pos:end="545:85"><name pos:start="545:67" pos:end="545:67">c</name><operator pos:start="545:68" pos:end="545:69">-&gt;</operator><name pos:start="545:70" pos:end="545:85">chrSrcVSubSample</name></name><operator pos:start="545:86" pos:end="545:86">)</operator></expr>)</condition><block type="pseudo" pos:start="547:13" pos:end="547:86"><block_content pos:start="547:13" pos:end="547:86">

            <expr_stmt pos:start="547:13" pos:end="547:86"><expr pos:start="547:13" pos:end="547:85"><name pos:start="547:13" pos:end="547:26"><name pos:start="547:13" pos:end="547:13">c</name><operator pos:start="547:14" pos:end="547:15">-&gt;</operator><name pos:start="547:16" pos:end="547:26">vChrBufSize</name></name><operator pos:start="547:27" pos:end="547:27">=</operator> <operator pos:start="547:29" pos:end="547:29">(</operator><name pos:start="547:30" pos:end="547:38">nextSlice</name><operator pos:start="547:39" pos:end="547:40">&gt;&gt;</operator><name pos:start="547:41" pos:end="547:59"><name pos:start="547:41" pos:end="547:41">c</name><operator pos:start="547:42" pos:end="547:43">-&gt;</operator><name pos:start="547:44" pos:end="547:59">chrSrcVSubSample</name></name><operator pos:start="547:60" pos:end="547:60">)</operator> <operator pos:start="547:62" pos:end="547:62">-</operator> <name pos:start="547:64" pos:end="547:85"><name pos:start="547:64" pos:end="547:64">c</name><operator pos:start="547:65" pos:end="547:66">-&gt;</operator><name pos:start="547:67" pos:end="547:79">vChrFilterPos</name><index pos:start="547:80" pos:end="547:85">[<expr pos:start="547:81" pos:end="547:84"><name pos:start="547:81" pos:end="547:84">chrI</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="553:5" pos:end="553:85">// allocate pixbufs (we use dynamic allocation because otherwise we would need to</comment>

    <comment type="line" pos:start="555:5" pos:end="555:63">// allocate several megabytes to handle all possible cases)</comment>

    <expr_stmt pos:start="557:5" pos:end="557:79"><expr pos:start="557:5" pos:end="557:78"><call pos:start="557:5" pos:end="557:78"><name pos:start="557:5" pos:end="557:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="557:21" pos:end="557:78">(<argument pos:start="557:22" pos:end="557:22"><expr pos:start="557:22" pos:end="557:22"><name pos:start="557:22" pos:end="557:22">c</name></expr></argument>, <argument pos:start="557:25" pos:end="557:36"><expr pos:start="557:25" pos:end="557:36"><name pos:start="557:25" pos:end="557:36"><name pos:start="557:25" pos:end="557:25">c</name><operator pos:start="557:26" pos:end="557:27">-&gt;</operator><name pos:start="557:28" pos:end="557:36">lumPixBuf</name></name></expr></argument>, <argument pos:start="557:39" pos:end="557:71"><expr pos:start="557:39" pos:end="557:71"><name pos:start="557:39" pos:end="557:52"><name pos:start="557:39" pos:end="557:39">c</name><operator pos:start="557:40" pos:end="557:41">-&gt;</operator><name pos:start="557:42" pos:end="557:52">vLumBufSize</name></name><operator pos:start="557:53" pos:end="557:53">*</operator><literal type="number" pos:start="557:54" pos:end="557:54">2</literal><operator pos:start="557:55" pos:end="557:55">*</operator><sizeof pos:start="557:56" pos:end="557:71">sizeof<argument_list pos:start="557:62" pos:end="557:71">(<argument pos:start="557:63" pos:end="557:70"><expr pos:start="557:63" pos:end="557:70"><name pos:start="557:63" pos:end="557:69">int16_t</name><operator pos:start="557:70" pos:end="557:70">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="557:74" pos:end="557:77"><expr pos:start="557:74" pos:end="557:77"><name pos:start="557:74" pos:end="557:77">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="559:5" pos:end="559:79"><expr pos:start="559:5" pos:end="559:78"><call pos:start="559:5" pos:end="559:78"><name pos:start="559:5" pos:end="559:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="559:21" pos:end="559:78">(<argument pos:start="559:22" pos:end="559:22"><expr pos:start="559:22" pos:end="559:22"><name pos:start="559:22" pos:end="559:22">c</name></expr></argument>, <argument pos:start="559:25" pos:end="559:36"><expr pos:start="559:25" pos:end="559:36"><name pos:start="559:25" pos:end="559:36"><name pos:start="559:25" pos:end="559:25">c</name><operator pos:start="559:26" pos:end="559:27">-&gt;</operator><name pos:start="559:28" pos:end="559:36">chrPixBuf</name></name></expr></argument>, <argument pos:start="559:39" pos:end="559:71"><expr pos:start="559:39" pos:end="559:71"><name pos:start="559:39" pos:end="559:52"><name pos:start="559:39" pos:end="559:39">c</name><operator pos:start="559:40" pos:end="559:41">-&gt;</operator><name pos:start="559:42" pos:end="559:52">vChrBufSize</name></name><operator pos:start="559:53" pos:end="559:53">*</operator><literal type="number" pos:start="559:54" pos:end="559:54">2</literal><operator pos:start="559:55" pos:end="559:55">*</operator><sizeof pos:start="559:56" pos:end="559:71">sizeof<argument_list pos:start="559:62" pos:end="559:71">(<argument pos:start="559:63" pos:end="559:70"><expr pos:start="559:63" pos:end="559:70"><name pos:start="559:63" pos:end="559:69">int16_t</name><operator pos:start="559:70" pos:end="559:70">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="559:74" pos:end="559:77"><expr pos:start="559:74" pos:end="559:77"><name pos:start="559:74" pos:end="559:77">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="561:5" pos:end="563:84"><if pos:start="561:5" pos:end="563:84">if <condition pos:start="561:8" pos:end="561:79">(<expr pos:start="561:9" pos:end="561:78"><name pos:start="561:9" pos:end="561:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="561:30" pos:end="561:31">&amp;&amp;</operator> <call pos:start="561:33" pos:end="561:53"><name pos:start="561:33" pos:end="561:39">isALPHA</name><argument_list pos:start="561:40" pos:end="561:53">(<argument pos:start="561:41" pos:end="561:52"><expr pos:start="561:41" pos:end="561:52"><name pos:start="561:41" pos:end="561:52"><name pos:start="561:41" pos:end="561:41">c</name><operator pos:start="561:42" pos:end="561:43">-&gt;</operator><name pos:start="561:44" pos:end="561:52">srcFormat</name></name></expr></argument>)</argument_list></call> <operator pos:start="561:55" pos:end="561:56">&amp;&amp;</operator> <call pos:start="561:58" pos:end="561:78"><name pos:start="561:58" pos:end="561:64">isALPHA</name><argument_list pos:start="561:65" pos:end="561:78">(<argument pos:start="561:66" pos:end="561:77"><expr pos:start="561:66" pos:end="561:77"><name pos:start="561:66" pos:end="561:77"><name pos:start="561:66" pos:end="561:66">c</name><operator pos:start="561:67" pos:end="561:68">-&gt;</operator><name pos:start="561:69" pos:end="561:77">dstFormat</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="563:9" pos:end="563:84"><block_content pos:start="563:9" pos:end="563:84">

        <expr_stmt pos:start="563:9" pos:end="563:84"><expr pos:start="563:9" pos:end="563:83"><call pos:start="563:9" pos:end="563:83"><name pos:start="563:9" pos:end="563:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="563:26" pos:end="563:83">(<argument pos:start="563:27" pos:end="563:27"><expr pos:start="563:27" pos:end="563:27"><name pos:start="563:27" pos:end="563:27">c</name></expr></argument>, <argument pos:start="563:30" pos:end="563:41"><expr pos:start="563:30" pos:end="563:41"><name pos:start="563:30" pos:end="563:41"><name pos:start="563:30" pos:end="563:30">c</name><operator pos:start="563:31" pos:end="563:32">-&gt;</operator><name pos:start="563:33" pos:end="563:41">alpPixBuf</name></name></expr></argument>, <argument pos:start="563:44" pos:end="563:76"><expr pos:start="563:44" pos:end="563:76"><name pos:start="563:44" pos:end="563:57"><name pos:start="563:44" pos:end="563:44">c</name><operator pos:start="563:45" pos:end="563:46">-&gt;</operator><name pos:start="563:47" pos:end="563:57">vLumBufSize</name></name><operator pos:start="563:58" pos:end="563:58">*</operator><literal type="number" pos:start="563:59" pos:end="563:59">2</literal><operator pos:start="563:60" pos:end="563:60">*</operator><sizeof pos:start="563:61" pos:end="563:76">sizeof<argument_list pos:start="563:67" pos:end="563:76">(<argument pos:start="563:68" pos:end="563:75"><expr pos:start="563:68" pos:end="563:75"><name pos:start="563:68" pos:end="563:74">int16_t</name><operator pos:start="563:75" pos:end="563:75">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="563:79" pos:end="563:82"><expr pos:start="563:79" pos:end="563:82"><name pos:start="563:79" pos:end="563:82">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="line" pos:start="565:5" pos:end="565:128">//Note we need at least one pixel more at the end because of the MMX code (just in case someone wanna replace the 4000/8000)</comment>

    <comment type="block" pos:start="567:5" pos:end="567:39">/* align at 16 bytes for AltiVec */</comment>

    <for pos:start="569:5" pos:end="575:5">for <control pos:start="569:9" pos:end="569:36">(<init pos:start="569:10" pos:end="569:13"><expr pos:start="569:10" pos:end="569:12"><name pos:start="569:10" pos:end="569:10">i</name><operator pos:start="569:11" pos:end="569:11">=</operator><literal type="number" pos:start="569:12" pos:end="569:12">0</literal></expr>;</init> <condition pos:start="569:15" pos:end="569:31"><expr pos:start="569:15" pos:end="569:30"><name pos:start="569:15" pos:end="569:15">i</name><operator pos:start="569:16" pos:end="569:16">&lt;</operator><name pos:start="569:17" pos:end="569:30"><name pos:start="569:17" pos:end="569:17">c</name><operator pos:start="569:18" pos:end="569:19">-&gt;</operator><name pos:start="569:20" pos:end="569:30">vLumBufSize</name></name></expr>;</condition> <incr pos:start="569:33" pos:end="569:35"><expr pos:start="569:33" pos:end="569:35"><name pos:start="569:33" pos:end="569:33">i</name><operator pos:start="569:34" pos:end="569:35">++</operator></expr></incr>)</control> <block pos:start="569:38" pos:end="575:5">{<block_content pos:start="571:9" pos:end="573:57">

        <expr_stmt pos:start="571:9" pos:end="571:74"><expr pos:start="571:9" pos:end="571:73"><call pos:start="571:9" pos:end="571:73"><name pos:start="571:9" pos:end="571:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="571:26" pos:end="571:73">(<argument pos:start="571:27" pos:end="571:27"><expr pos:start="571:27" pos:end="571:27"><name pos:start="571:27" pos:end="571:27">c</name></expr></argument>, <argument pos:start="571:30" pos:end="571:59"><expr pos:start="571:30" pos:end="571:59"><name pos:start="571:30" pos:end="571:59"><name pos:start="571:30" pos:end="571:30">c</name><operator pos:start="571:31" pos:end="571:32">-&gt;</operator><name pos:start="571:33" pos:end="571:41">lumPixBuf</name><index pos:start="571:42" pos:end="571:59">[<expr pos:start="571:43" pos:end="571:58"><name pos:start="571:43" pos:end="571:43">i</name><operator pos:start="571:44" pos:end="571:44">+</operator><name pos:start="571:45" pos:end="571:58"><name pos:start="571:45" pos:end="571:45">c</name><operator pos:start="571:46" pos:end="571:47">-&gt;</operator><name pos:start="571:48" pos:end="571:58">vLumBufSize</name></name></expr>]</index></name></expr></argument>, <argument pos:start="571:62" pos:end="571:66"><expr pos:start="571:62" pos:end="571:66"><name pos:start="571:62" pos:end="571:64">VOF</name><operator pos:start="571:65" pos:end="571:65">+</operator><literal type="number" pos:start="571:66" pos:end="571:66">1</literal></expr></argument>, <argument pos:start="571:69" pos:end="571:72"><expr pos:start="571:69" pos:end="571:72"><name pos:start="571:69" pos:end="571:72">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="573:9" pos:end="573:57"><expr pos:start="573:9" pos:end="573:56"><name pos:start="573:9" pos:end="573:23"><name pos:start="573:9" pos:end="573:9">c</name><operator pos:start="573:10" pos:end="573:11">-&gt;</operator><name pos:start="573:12" pos:end="573:20">lumPixBuf</name><index pos:start="573:21" pos:end="573:23">[<expr pos:start="573:22" pos:end="573:22"><name pos:start="573:22" pos:end="573:22">i</name></expr>]</index></name> <operator pos:start="573:25" pos:end="573:25">=</operator> <name pos:start="573:27" pos:end="573:56"><name pos:start="573:27" pos:end="573:27">c</name><operator pos:start="573:28" pos:end="573:29">-&gt;</operator><name pos:start="573:30" pos:end="573:38">lumPixBuf</name><index pos:start="573:39" pos:end="573:56">[<expr pos:start="573:40" pos:end="573:55"><name pos:start="573:40" pos:end="573:40">i</name><operator pos:start="573:41" pos:end="573:41">+</operator><name pos:start="573:42" pos:end="573:55"><name pos:start="573:42" pos:end="573:42">c</name><operator pos:start="573:43" pos:end="573:44">-&gt;</operator><name pos:start="573:45" pos:end="573:55">vLumBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="577:5" pos:end="583:5">for <control pos:start="577:9" pos:end="577:36">(<init pos:start="577:10" pos:end="577:13"><expr pos:start="577:10" pos:end="577:12"><name pos:start="577:10" pos:end="577:10">i</name><operator pos:start="577:11" pos:end="577:11">=</operator><literal type="number" pos:start="577:12" pos:end="577:12">0</literal></expr>;</init> <condition pos:start="577:15" pos:end="577:31"><expr pos:start="577:15" pos:end="577:30"><name pos:start="577:15" pos:end="577:15">i</name><operator pos:start="577:16" pos:end="577:16">&lt;</operator><name pos:start="577:17" pos:end="577:30"><name pos:start="577:17" pos:end="577:17">c</name><operator pos:start="577:18" pos:end="577:19">-&gt;</operator><name pos:start="577:20" pos:end="577:30">vChrBufSize</name></name></expr>;</condition> <incr pos:start="577:33" pos:end="577:35"><expr pos:start="577:33" pos:end="577:35"><name pos:start="577:33" pos:end="577:33">i</name><operator pos:start="577:34" pos:end="577:35">++</operator></expr></incr>)</control> <block pos:start="577:38" pos:end="583:5">{<block_content pos:start="579:9" pos:end="581:57">

        <expr_stmt pos:start="579:9" pos:end="579:77"><expr pos:start="579:9" pos:end="579:76"><call pos:start="579:9" pos:end="579:76"><name pos:start="579:9" pos:end="579:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="579:25" pos:end="579:76">(<argument pos:start="579:26" pos:end="579:26"><expr pos:start="579:26" pos:end="579:26"><name pos:start="579:26" pos:end="579:26">c</name></expr></argument>, <argument pos:start="579:29" pos:end="579:58"><expr pos:start="579:29" pos:end="579:58"><name pos:start="579:29" pos:end="579:58"><name pos:start="579:29" pos:end="579:29">c</name><operator pos:start="579:30" pos:end="579:31">-&gt;</operator><name pos:start="579:32" pos:end="579:40">chrPixBuf</name><index pos:start="579:41" pos:end="579:58">[<expr pos:start="579:42" pos:end="579:57"><name pos:start="579:42" pos:end="579:42">i</name><operator pos:start="579:43" pos:end="579:43">+</operator><name pos:start="579:44" pos:end="579:57"><name pos:start="579:44" pos:end="579:44">c</name><operator pos:start="579:45" pos:end="579:46">-&gt;</operator><name pos:start="579:47" pos:end="579:57">vChrBufSize</name></name></expr>]</index></name></expr></argument>, <argument pos:start="579:61" pos:end="579:69"><expr pos:start="579:61" pos:end="579:69"><operator pos:start="579:61" pos:end="579:61">(</operator><name pos:start="579:62" pos:end="579:64">VOF</name><operator pos:start="579:65" pos:end="579:65">+</operator><literal type="number" pos:start="579:66" pos:end="579:66">1</literal><operator pos:start="579:67" pos:end="579:67">)</operator><operator pos:start="579:68" pos:end="579:68">*</operator><literal type="number" pos:start="579:69" pos:end="579:69">2</literal></expr></argument>, <argument pos:start="579:72" pos:end="579:75"><expr pos:start="579:72" pos:end="579:75"><name pos:start="579:72" pos:end="579:75">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="581:9" pos:end="581:57"><expr pos:start="581:9" pos:end="581:56"><name pos:start="581:9" pos:end="581:23"><name pos:start="581:9" pos:end="581:9">c</name><operator pos:start="581:10" pos:end="581:11">-&gt;</operator><name pos:start="581:12" pos:end="581:20">chrPixBuf</name><index pos:start="581:21" pos:end="581:23">[<expr pos:start="581:22" pos:end="581:22"><name pos:start="581:22" pos:end="581:22">i</name></expr>]</index></name> <operator pos:start="581:25" pos:end="581:25">=</operator> <name pos:start="581:27" pos:end="581:56"><name pos:start="581:27" pos:end="581:27">c</name><operator pos:start="581:28" pos:end="581:29">-&gt;</operator><name pos:start="581:30" pos:end="581:38">chrPixBuf</name><index pos:start="581:39" pos:end="581:56">[<expr pos:start="581:40" pos:end="581:55"><name pos:start="581:40" pos:end="581:40">i</name><operator pos:start="581:41" pos:end="581:41">+</operator><name pos:start="581:42" pos:end="581:55"><name pos:start="581:42" pos:end="581:42">c</name><operator pos:start="581:43" pos:end="581:44">-&gt;</operator><name pos:start="581:45" pos:end="581:55">vChrBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="585:5" pos:end="593:9"><if pos:start="585:5" pos:end="593:9">if <condition pos:start="585:8" pos:end="585:45">(<expr pos:start="585:9" pos:end="585:44"><name pos:start="585:9" pos:end="585:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="585:30" pos:end="585:31">&amp;&amp;</operator> <name pos:start="585:33" pos:end="585:44"><name pos:start="585:33" pos:end="585:33">c</name><operator pos:start="585:34" pos:end="585:35">-&gt;</operator><name pos:start="585:36" pos:end="585:44">alpPixBuf</name></name></expr>)</condition><block type="pseudo" pos:start="587:9" pos:end="593:9"><block_content pos:start="587:9" pos:end="593:9">

        <for pos:start="587:9" pos:end="593:9">for <control pos:start="587:13" pos:end="587:40">(<init pos:start="587:14" pos:end="587:17"><expr pos:start="587:14" pos:end="587:16"><name pos:start="587:14" pos:end="587:14">i</name><operator pos:start="587:15" pos:end="587:15">=</operator><literal type="number" pos:start="587:16" pos:end="587:16">0</literal></expr>;</init> <condition pos:start="587:19" pos:end="587:35"><expr pos:start="587:19" pos:end="587:34"><name pos:start="587:19" pos:end="587:19">i</name><operator pos:start="587:20" pos:end="587:20">&lt;</operator><name pos:start="587:21" pos:end="587:34"><name pos:start="587:21" pos:end="587:21">c</name><operator pos:start="587:22" pos:end="587:23">-&gt;</operator><name pos:start="587:24" pos:end="587:34">vLumBufSize</name></name></expr>;</condition> <incr pos:start="587:37" pos:end="587:39"><expr pos:start="587:37" pos:end="587:39"><name pos:start="587:37" pos:end="587:37">i</name><operator pos:start="587:38" pos:end="587:39">++</operator></expr></incr>)</control> <block pos:start="587:42" pos:end="593:9">{<block_content pos:start="589:13" pos:end="591:61">

            <expr_stmt pos:start="589:13" pos:end="589:78"><expr pos:start="589:13" pos:end="589:77"><call pos:start="589:13" pos:end="589:77"><name pos:start="589:13" pos:end="589:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="589:30" pos:end="589:77">(<argument pos:start="589:31" pos:end="589:31"><expr pos:start="589:31" pos:end="589:31"><name pos:start="589:31" pos:end="589:31">c</name></expr></argument>, <argument pos:start="589:34" pos:end="589:63"><expr pos:start="589:34" pos:end="589:63"><name pos:start="589:34" pos:end="589:63"><name pos:start="589:34" pos:end="589:34">c</name><operator pos:start="589:35" pos:end="589:36">-&gt;</operator><name pos:start="589:37" pos:end="589:45">alpPixBuf</name><index pos:start="589:46" pos:end="589:63">[<expr pos:start="589:47" pos:end="589:62"><name pos:start="589:47" pos:end="589:47">i</name><operator pos:start="589:48" pos:end="589:48">+</operator><name pos:start="589:49" pos:end="589:62"><name pos:start="589:49" pos:end="589:49">c</name><operator pos:start="589:50" pos:end="589:51">-&gt;</operator><name pos:start="589:52" pos:end="589:62">vLumBufSize</name></name></expr>]</index></name></expr></argument>, <argument pos:start="589:66" pos:end="589:70"><expr pos:start="589:66" pos:end="589:70"><name pos:start="589:66" pos:end="589:68">VOF</name><operator pos:start="589:69" pos:end="589:69">+</operator><literal type="number" pos:start="589:70" pos:end="589:70">1</literal></expr></argument>, <argument pos:start="589:73" pos:end="589:76"><expr pos:start="589:73" pos:end="589:76"><name pos:start="589:73" pos:end="589:76">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="591:13" pos:end="591:61"><expr pos:start="591:13" pos:end="591:60"><name pos:start="591:13" pos:end="591:27"><name pos:start="591:13" pos:end="591:13">c</name><operator pos:start="591:14" pos:end="591:15">-&gt;</operator><name pos:start="591:16" pos:end="591:24">alpPixBuf</name><index pos:start="591:25" pos:end="591:27">[<expr pos:start="591:26" pos:end="591:26"><name pos:start="591:26" pos:end="591:26">i</name></expr>]</index></name> <operator pos:start="591:29" pos:end="591:29">=</operator> <name pos:start="591:31" pos:end="591:60"><name pos:start="591:31" pos:end="591:31">c</name><operator pos:start="591:32" pos:end="591:33">-&gt;</operator><name pos:start="591:34" pos:end="591:42">alpPixBuf</name><index pos:start="591:43" pos:end="591:60">[<expr pos:start="591:44" pos:end="591:59"><name pos:start="591:44" pos:end="591:44">i</name><operator pos:start="591:45" pos:end="591:45">+</operator><name pos:start="591:46" pos:end="591:59"><name pos:start="591:46" pos:end="591:46">c</name><operator pos:start="591:47" pos:end="591:48">-&gt;</operator><name pos:start="591:49" pos:end="591:59">vLumBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <comment type="line" pos:start="597:5" pos:end="597:79">//try to avoid drawing green stuff between the right end and the stride end</comment>

    <for pos:start="599:5" pos:end="599:76">for <control pos:start="599:9" pos:end="599:36">(<init pos:start="599:10" pos:end="599:13"><expr pos:start="599:10" pos:end="599:12"><name pos:start="599:10" pos:end="599:10">i</name><operator pos:start="599:11" pos:end="599:11">=</operator><literal type="number" pos:start="599:12" pos:end="599:12">0</literal></expr>;</init> <condition pos:start="599:15" pos:end="599:31"><expr pos:start="599:15" pos:end="599:30"><name pos:start="599:15" pos:end="599:15">i</name><operator pos:start="599:16" pos:end="599:16">&lt;</operator><name pos:start="599:17" pos:end="599:30"><name pos:start="599:17" pos:end="599:17">c</name><operator pos:start="599:18" pos:end="599:19">-&gt;</operator><name pos:start="599:20" pos:end="599:30">vChrBufSize</name></name></expr>;</condition> <incr pos:start="599:33" pos:end="599:35"><expr pos:start="599:33" pos:end="599:35"><name pos:start="599:33" pos:end="599:33">i</name><operator pos:start="599:34" pos:end="599:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="599:38" pos:end="599:76"><block_content pos:start="599:38" pos:end="599:76"> <expr_stmt pos:start="599:38" pos:end="599:76"><expr pos:start="599:38" pos:end="599:75"><call pos:start="599:38" pos:end="599:75"><name pos:start="599:38" pos:end="599:43">memset</name><argument_list pos:start="599:44" pos:end="599:75">(<argument pos:start="599:45" pos:end="599:59"><expr pos:start="599:45" pos:end="599:59"><name pos:start="599:45" pos:end="599:59"><name pos:start="599:45" pos:end="599:45">c</name><operator pos:start="599:46" pos:end="599:47">-&gt;</operator><name pos:start="599:48" pos:end="599:56">chrPixBuf</name><index pos:start="599:57" pos:end="599:59">[<expr pos:start="599:58" pos:end="599:58"><name pos:start="599:58" pos:end="599:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="599:62" pos:end="599:63"><expr pos:start="599:62" pos:end="599:63"><literal type="number" pos:start="599:62" pos:end="599:63">64</literal></expr></argument>, <argument pos:start="599:66" pos:end="599:74"><expr pos:start="599:66" pos:end="599:74"><operator pos:start="599:66" pos:end="599:66">(</operator><name pos:start="599:67" pos:end="599:69">VOF</name><operator pos:start="599:70" pos:end="599:70">+</operator><literal type="number" pos:start="599:71" pos:end="599:71">1</literal><operator pos:start="599:72" pos:end="599:72">)</operator><operator pos:start="599:73" pos:end="599:73">*</operator><literal type="number" pos:start="599:74" pos:end="599:74">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="603:5" pos:end="603:26"><expr pos:start="603:5" pos:end="603:25"><call pos:start="603:5" pos:end="603:25"><name pos:start="603:5" pos:end="603:10">assert</name><argument_list pos:start="603:11" pos:end="603:25">(<argument pos:start="603:12" pos:end="603:24"><expr pos:start="603:12" pos:end="603:24"><literal type="number" pos:start="603:12" pos:end="603:12">2</literal><operator pos:start="603:13" pos:end="603:13">*</operator><name pos:start="603:14" pos:end="603:17">VOFW</name> <operator pos:start="603:19" pos:end="603:20">==</operator> <name pos:start="603:22" pos:end="603:24">VOF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="607:5" pos:end="607:31"><expr pos:start="607:5" pos:end="607:30"><call pos:start="607:5" pos:end="607:30"><name pos:start="607:5" pos:end="607:10">assert</name><argument_list pos:start="607:11" pos:end="607:30">(<argument pos:start="607:12" pos:end="607:29"><expr pos:start="607:12" pos:end="607:29"><name pos:start="607:12" pos:end="607:21"><name pos:start="607:12" pos:end="607:12">c</name><operator pos:start="607:13" pos:end="607:14">-&gt;</operator><name pos:start="607:15" pos:end="607:21">chrDstH</name></name> <operator pos:start="607:23" pos:end="607:24">&lt;=</operator> <name pos:start="607:26" pos:end="607:29">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="611:5" pos:end="829:5"><if pos:start="611:5" pos:end="829:5">if <condition pos:start="611:8" pos:end="611:29">(<expr pos:start="611:9" pos:end="611:28"><name pos:start="611:9" pos:end="611:13">flags</name><operator pos:start="611:14" pos:end="611:14">&amp;</operator><name pos:start="611:15" pos:end="611:28">SWS_PRINT_INFO</name></expr>)</condition> <block pos:start="611:31" pos:end="829:5">{<block_content pos:start="613:9" pos:end="827:87">

        <if_stmt pos:start="613:9" pos:end="659:59"><if pos:start="613:9" pos:end="615:61">if <condition pos:start="613:12" pos:end="613:36">(<expr pos:start="613:13" pos:end="613:35"><name pos:start="613:13" pos:end="613:17">flags</name><operator pos:start="613:18" pos:end="613:18">&amp;</operator><name pos:start="613:19" pos:end="613:35">SWS_FAST_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="615:13" pos:end="615:61"><block_content pos:start="615:13" pos:end="615:61">

            <expr_stmt pos:start="615:13" pos:end="615:61"><expr pos:start="615:13" pos:end="615:60"><call pos:start="615:13" pos:end="615:60"><name pos:start="615:13" pos:end="615:18">av_log</name><argument_list pos:start="615:19" pos:end="615:60">(<argument pos:start="615:20" pos:end="615:20"><expr pos:start="615:20" pos:end="615:20"><name pos:start="615:20" pos:end="615:20">c</name></expr></argument>, <argument pos:start="615:23" pos:end="615:33"><expr pos:start="615:23" pos:end="615:33"><name pos:start="615:23" pos:end="615:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="615:36" pos:end="615:59"><expr pos:start="615:36" pos:end="615:59"><literal type="string" pos:start="615:36" pos:end="615:59">"FAST_BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="617:9" pos:end="619:56">else if <condition pos:start="617:17" pos:end="617:36">(<expr pos:start="617:18" pos:end="617:35"><name pos:start="617:18" pos:end="617:22">flags</name><operator pos:start="617:23" pos:end="617:23">&amp;</operator><name pos:start="617:24" pos:end="617:35">SWS_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="619:13" pos:end="619:56"><block_content pos:start="619:13" pos:end="619:56">

            <expr_stmt pos:start="619:13" pos:end="619:56"><expr pos:start="619:13" pos:end="619:55"><call pos:start="619:13" pos:end="619:55"><name pos:start="619:13" pos:end="619:18">av_log</name><argument_list pos:start="619:19" pos:end="619:55">(<argument pos:start="619:20" pos:end="619:20"><expr pos:start="619:20" pos:end="619:20"><name pos:start="619:20" pos:end="619:20">c</name></expr></argument>, <argument pos:start="619:23" pos:end="619:33"><expr pos:start="619:23" pos:end="619:33"><name pos:start="619:23" pos:end="619:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="619:36" pos:end="619:54"><expr pos:start="619:36" pos:end="619:54"><literal type="string" pos:start="619:36" pos:end="619:54">"BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="621:9" pos:end="623:55">else if <condition pos:start="621:17" pos:end="621:35">(<expr pos:start="621:18" pos:end="621:34"><name pos:start="621:18" pos:end="621:22">flags</name><operator pos:start="621:23" pos:end="621:23">&amp;</operator><name pos:start="621:24" pos:end="621:34">SWS_BICUBIC</name></expr>)</condition><block type="pseudo" pos:start="623:13" pos:end="623:55"><block_content pos:start="623:13" pos:end="623:55">

            <expr_stmt pos:start="623:13" pos:end="623:55"><expr pos:start="623:13" pos:end="623:54"><call pos:start="623:13" pos:end="623:54"><name pos:start="623:13" pos:end="623:18">av_log</name><argument_list pos:start="623:19" pos:end="623:54">(<argument pos:start="623:20" pos:end="623:20"><expr pos:start="623:20" pos:end="623:20"><name pos:start="623:20" pos:end="623:20">c</name></expr></argument>, <argument pos:start="623:23" pos:end="623:33"><expr pos:start="623:23" pos:end="623:33"><name pos:start="623:23" pos:end="623:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="623:36" pos:end="623:53"><expr pos:start="623:36" pos:end="623:53"><literal type="string" pos:start="623:36" pos:end="623:53">"BICUBIC scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="625:9" pos:end="627:60">else if <condition pos:start="625:17" pos:end="625:29">(<expr pos:start="625:18" pos:end="625:28"><name pos:start="625:18" pos:end="625:22">flags</name><operator pos:start="625:23" pos:end="625:23">&amp;</operator><name pos:start="625:24" pos:end="625:28">SWS_X</name></expr>)</condition><block type="pseudo" pos:start="627:13" pos:end="627:60"><block_content pos:start="627:13" pos:end="627:60">

            <expr_stmt pos:start="627:13" pos:end="627:60"><expr pos:start="627:13" pos:end="627:59"><call pos:start="627:13" pos:end="627:59"><name pos:start="627:13" pos:end="627:18">av_log</name><argument_list pos:start="627:19" pos:end="627:59">(<argument pos:start="627:20" pos:end="627:20"><expr pos:start="627:20" pos:end="627:20"><name pos:start="627:20" pos:end="627:20">c</name></expr></argument>, <argument pos:start="627:23" pos:end="627:33"><expr pos:start="627:23" pos:end="627:33"><name pos:start="627:23" pos:end="627:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="627:36" pos:end="627:58"><expr pos:start="627:36" pos:end="627:58"><literal type="string" pos:start="627:36" pos:end="627:58">"Experimental scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="629:9" pos:end="631:72">else if <condition pos:start="629:17" pos:end="629:33">(<expr pos:start="629:18" pos:end="629:32"><name pos:start="629:18" pos:end="629:22">flags</name><operator pos:start="629:23" pos:end="629:23">&amp;</operator><name pos:start="629:24" pos:end="629:32">SWS_POINT</name></expr>)</condition><block type="pseudo" pos:start="631:13" pos:end="631:72"><block_content pos:start="631:13" pos:end="631:72">

            <expr_stmt pos:start="631:13" pos:end="631:72"><expr pos:start="631:13" pos:end="631:71"><call pos:start="631:13" pos:end="631:71"><name pos:start="631:13" pos:end="631:18">av_log</name><argument_list pos:start="631:19" pos:end="631:71">(<argument pos:start="631:20" pos:end="631:20"><expr pos:start="631:20" pos:end="631:20"><name pos:start="631:20" pos:end="631:20">c</name></expr></argument>, <argument pos:start="631:23" pos:end="631:33"><expr pos:start="631:23" pos:end="631:33"><name pos:start="631:23" pos:end="631:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="631:36" pos:end="631:70"><expr pos:start="631:36" pos:end="631:70"><literal type="string" pos:start="631:36" pos:end="631:70">"Nearest Neighbor / POINT scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="633:9" pos:end="635:62">else if <condition pos:start="633:17" pos:end="633:32">(<expr pos:start="633:18" pos:end="633:31"><name pos:start="633:18" pos:end="633:22">flags</name><operator pos:start="633:23" pos:end="633:23">&amp;</operator><name pos:start="633:24" pos:end="633:31">SWS_AREA</name></expr>)</condition><block type="pseudo" pos:start="635:13" pos:end="635:62"><block_content pos:start="635:13" pos:end="635:62">

            <expr_stmt pos:start="635:13" pos:end="635:62"><expr pos:start="635:13" pos:end="635:61"><call pos:start="635:13" pos:end="635:61"><name pos:start="635:13" pos:end="635:18">av_log</name><argument_list pos:start="635:19" pos:end="635:61">(<argument pos:start="635:20" pos:end="635:20"><expr pos:start="635:20" pos:end="635:20"><name pos:start="635:20" pos:end="635:20">c</name></expr></argument>, <argument pos:start="635:23" pos:end="635:33"><expr pos:start="635:23" pos:end="635:33"><name pos:start="635:23" pos:end="635:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="635:36" pos:end="635:60"><expr pos:start="635:36" pos:end="635:60"><literal type="string" pos:start="635:36" pos:end="635:60">"Area Averaging scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="637:9" pos:end="639:78">else if <condition pos:start="637:17" pos:end="637:36">(<expr pos:start="637:18" pos:end="637:35"><name pos:start="637:18" pos:end="637:22">flags</name><operator pos:start="637:23" pos:end="637:23">&amp;</operator><name pos:start="637:24" pos:end="637:35">SWS_BICUBLIN</name></expr>)</condition><block type="pseudo" pos:start="639:13" pos:end="639:78"><block_content pos:start="639:13" pos:end="639:78">

            <expr_stmt pos:start="639:13" pos:end="639:78"><expr pos:start="639:13" pos:end="639:77"><call pos:start="639:13" pos:end="639:77"><name pos:start="639:13" pos:end="639:18">av_log</name><argument_list pos:start="639:19" pos:end="639:77">(<argument pos:start="639:20" pos:end="639:20"><expr pos:start="639:20" pos:end="639:20"><name pos:start="639:20" pos:end="639:20">c</name></expr></argument>, <argument pos:start="639:23" pos:end="639:33"><expr pos:start="639:23" pos:end="639:33"><name pos:start="639:23" pos:end="639:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="639:36" pos:end="639:76"><expr pos:start="639:36" pos:end="639:76"><literal type="string" pos:start="639:36" pos:end="639:76">"luma BICUBIC / chroma BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="641:9" pos:end="643:56">else if <condition pos:start="641:17" pos:end="641:33">(<expr pos:start="641:18" pos:end="641:32"><name pos:start="641:18" pos:end="641:22">flags</name><operator pos:start="641:23" pos:end="641:23">&amp;</operator><name pos:start="641:24" pos:end="641:32">SWS_GAUSS</name></expr>)</condition><block type="pseudo" pos:start="643:13" pos:end="643:56"><block_content pos:start="643:13" pos:end="643:56">

            <expr_stmt pos:start="643:13" pos:end="643:56"><expr pos:start="643:13" pos:end="643:55"><call pos:start="643:13" pos:end="643:55"><name pos:start="643:13" pos:end="643:18">av_log</name><argument_list pos:start="643:19" pos:end="643:55">(<argument pos:start="643:20" pos:end="643:20"><expr pos:start="643:20" pos:end="643:20"><name pos:start="643:20" pos:end="643:20">c</name></expr></argument>, <argument pos:start="643:23" pos:end="643:33"><expr pos:start="643:23" pos:end="643:33"><name pos:start="643:23" pos:end="643:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="643:36" pos:end="643:54"><expr pos:start="643:36" pos:end="643:54"><literal type="string" pos:start="643:36" pos:end="643:54">"Gaussian scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="645:9" pos:end="647:52">else if <condition pos:start="645:17" pos:end="645:32">(<expr pos:start="645:18" pos:end="645:31"><name pos:start="645:18" pos:end="645:22">flags</name><operator pos:start="645:23" pos:end="645:23">&amp;</operator><name pos:start="645:24" pos:end="645:31">SWS_SINC</name></expr>)</condition><block type="pseudo" pos:start="647:13" pos:end="647:52"><block_content pos:start="647:13" pos:end="647:52">

            <expr_stmt pos:start="647:13" pos:end="647:52"><expr pos:start="647:13" pos:end="647:51"><call pos:start="647:13" pos:end="647:51"><name pos:start="647:13" pos:end="647:18">av_log</name><argument_list pos:start="647:19" pos:end="647:51">(<argument pos:start="647:20" pos:end="647:20"><expr pos:start="647:20" pos:end="647:20"><name pos:start="647:20" pos:end="647:20">c</name></expr></argument>, <argument pos:start="647:23" pos:end="647:33"><expr pos:start="647:23" pos:end="647:33"><name pos:start="647:23" pos:end="647:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="647:36" pos:end="647:50"><expr pos:start="647:36" pos:end="647:50"><literal type="string" pos:start="647:36" pos:end="647:50">"Sinc scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="649:9" pos:end="651:55">else if <condition pos:start="649:17" pos:end="649:35">(<expr pos:start="649:18" pos:end="649:34"><name pos:start="649:18" pos:end="649:22">flags</name><operator pos:start="649:23" pos:end="649:23">&amp;</operator><name pos:start="649:24" pos:end="649:34">SWS_LANCZOS</name></expr>)</condition><block type="pseudo" pos:start="651:13" pos:end="651:55"><block_content pos:start="651:13" pos:end="651:55">

            <expr_stmt pos:start="651:13" pos:end="651:55"><expr pos:start="651:13" pos:end="651:54"><call pos:start="651:13" pos:end="651:54"><name pos:start="651:13" pos:end="651:18">av_log</name><argument_list pos:start="651:19" pos:end="651:54">(<argument pos:start="651:20" pos:end="651:20"><expr pos:start="651:20" pos:end="651:20"><name pos:start="651:20" pos:end="651:20">c</name></expr></argument>, <argument pos:start="651:23" pos:end="651:33"><expr pos:start="651:23" pos:end="651:33"><name pos:start="651:23" pos:end="651:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="651:36" pos:end="651:53"><expr pos:start="651:36" pos:end="651:53"><literal type="string" pos:start="651:36" pos:end="651:53">"Lanczos scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="653:9" pos:end="655:62">else if <condition pos:start="653:17" pos:end="653:34">(<expr pos:start="653:18" pos:end="653:33"><name pos:start="653:18" pos:end="653:22">flags</name><operator pos:start="653:23" pos:end="653:23">&amp;</operator><name pos:start="653:24" pos:end="653:33">SWS_SPLINE</name></expr>)</condition><block type="pseudo" pos:start="655:13" pos:end="655:62"><block_content pos:start="655:13" pos:end="655:62">

            <expr_stmt pos:start="655:13" pos:end="655:62"><expr pos:start="655:13" pos:end="655:61"><call pos:start="655:13" pos:end="655:61"><name pos:start="655:13" pos:end="655:18">av_log</name><argument_list pos:start="655:19" pos:end="655:61">(<argument pos:start="655:20" pos:end="655:20"><expr pos:start="655:20" pos:end="655:20"><name pos:start="655:20" pos:end="655:20">c</name></expr></argument>, <argument pos:start="655:23" pos:end="655:33"><expr pos:start="655:23" pos:end="655:33"><name pos:start="655:23" pos:end="655:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="655:36" pos:end="655:60"><expr pos:start="655:36" pos:end="655:60"><literal type="string" pos:start="655:36" pos:end="655:60">"Bicubic spline scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="657:9" pos:end="659:59">else<block type="pseudo" pos:start="659:13" pos:end="659:59"><block_content pos:start="659:13" pos:end="659:59">

            <expr_stmt pos:start="659:13" pos:end="659:59"><expr pos:start="659:13" pos:end="659:58"><call pos:start="659:13" pos:end="659:58"><name pos:start="659:13" pos:end="659:18">av_log</name><argument_list pos:start="659:19" pos:end="659:58">(<argument pos:start="659:20" pos:end="659:20"><expr pos:start="659:20" pos:end="659:20"><name pos:start="659:20" pos:end="659:20">c</name></expr></argument>, <argument pos:start="659:23" pos:end="659:33"><expr pos:start="659:23" pos:end="659:33"><name pos:start="659:23" pos:end="659:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="659:36" pos:end="659:57"><expr pos:start="659:36" pos:end="659:57"><literal type="string" pos:start="659:36" pos:end="659:57">"ehh flags invalid?! "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="663:9" pos:end="681:43"><expr pos:start="663:9" pos:end="681:42"><call pos:start="663:9" pos:end="681:42"><name pos:start="663:9" pos:end="663:14">av_log</name><argument_list pos:start="663:15" pos:end="681:42">(<argument pos:start="663:16" pos:end="663:16"><expr pos:start="663:16" pos:end="663:16"><name pos:start="663:16" pos:end="663:16">c</name></expr></argument>, <argument pos:start="663:19" pos:end="663:29"><expr pos:start="663:19" pos:end="663:29"><name pos:start="663:19" pos:end="663:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="663:32" pos:end="663:49"><expr pos:start="663:32" pos:end="663:49"><literal type="string" pos:start="663:32" pos:end="663:49">"from %s to %s%s "</literal></expr></argument>,

               <argument pos:start="665:16" pos:end="665:41"><expr pos:start="665:16" pos:end="665:41"><call pos:start="665:16" pos:end="665:41"><name pos:start="665:16" pos:end="665:30">sws_format_name</name><argument_list pos:start="665:31" pos:end="665:41">(<argument pos:start="665:32" pos:end="665:40"><expr pos:start="665:32" pos:end="665:40"><name pos:start="665:32" pos:end="665:40">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>,

<cpp:ifdef pos:start="667:1" pos:end="667:18">#<cpp:directive pos:start="667:2" pos:end="667:6">ifdef</cpp:directive> <name pos:start="667:8" pos:end="667:18">DITHER1XBPP</name></cpp:ifdef>

               <argument pos:start="669:16" pos:end="673:96"><expr pos:start="669:16" pos:end="673:96"><ternary pos:start="669:16" pos:end="673:96"><condition pos:start="669:16" pos:end="673:79"><expr pos:start="669:16" pos:end="673:77"><name pos:start="669:16" pos:end="669:24">dstFormat</name> <operator pos:start="669:26" pos:end="669:27">==</operator> <name pos:start="669:29" pos:end="669:42">PIX_FMT_BGR555</name> <operator pos:start="669:44" pos:end="669:45">||</operator> <name pos:start="669:47" pos:end="669:55">dstFormat</name> <operator pos:start="669:57" pos:end="669:58">==</operator> <name pos:start="669:60" pos:end="669:73">PIX_FMT_BGR565</name> <operator pos:start="669:75" pos:end="669:76">||</operator>

               <name pos:start="671:16" pos:end="671:24">dstFormat</name> <operator pos:start="671:26" pos:end="671:27">==</operator> <name pos:start="671:29" pos:end="671:44">PIX_FMT_RGB444BE</name> <operator pos:start="671:46" pos:end="671:47">||</operator> <name pos:start="671:49" pos:end="671:57">dstFormat</name> <operator pos:start="671:59" pos:end="671:60">==</operator> <name pos:start="671:62" pos:end="671:77">PIX_FMT_RGB444LE</name> <operator pos:start="671:79" pos:end="671:80">||</operator>

               <name pos:start="673:16" pos:end="673:24">dstFormat</name> <operator pos:start="673:26" pos:end="673:27">==</operator> <name pos:start="673:29" pos:end="673:44">PIX_FMT_BGR444BE</name> <operator pos:start="673:46" pos:end="673:47">||</operator> <name pos:start="673:49" pos:end="673:57">dstFormat</name> <operator pos:start="673:59" pos:end="673:60">==</operator> <name pos:start="673:62" pos:end="673:77">PIX_FMT_BGR444LE</name></expr> ?</condition><then pos:start="673:81" pos:end="673:91"> <expr pos:start="673:81" pos:end="673:91"><literal type="string" pos:start="673:81" pos:end="673:91">"dithered "</literal></expr> </then><else pos:start="673:93" pos:end="673:96">: <expr pos:start="673:95" pos:end="673:96"><literal type="string" pos:start="673:95" pos:end="673:96">""</literal></expr></else></ternary></expr></argument>,

<cpp:else pos:start="675:1" pos:end="675:5">#<cpp:directive pos:start="675:2" pos:end="675:5">else</cpp:directive></cpp:else>

               <argument pos:start="677:16" pos:end="677:17"><expr pos:start="677:16" pos:end="677:17"><literal type="string" pos:start="677:16" pos:end="677:17">""</literal></expr></argument>,

<cpp:endif pos:start="679:1" pos:end="679:6">#<cpp:directive pos:start="679:2" pos:end="679:6">endif</cpp:directive></cpp:endif>

               <argument pos:start="681:16" pos:end="681:41"><expr pos:start="681:16" pos:end="681:41"><call pos:start="681:16" pos:end="681:41"><name pos:start="681:16" pos:end="681:30">sws_format_name</name><argument_list pos:start="681:31" pos:end="681:41">(<argument pos:start="681:32" pos:end="681:40"><expr pos:start="681:32" pos:end="681:40"><name pos:start="681:32" pos:end="681:40">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="685:9" pos:end="703:48"><if pos:start="685:9" pos:end="687:51">if <condition pos:start="685:12" pos:end="685:38">(<expr pos:start="685:13" pos:end="685:37"><name pos:start="685:13" pos:end="685:17">flags</name> <operator pos:start="685:19" pos:end="685:19">&amp;</operator> <name pos:start="685:21" pos:end="685:37">SWS_CPU_CAPS_MMX2</name></expr>)</condition><block type="pseudo" pos:start="687:13" pos:end="687:51"><block_content pos:start="687:13" pos:end="687:51">

            <expr_stmt pos:start="687:13" pos:end="687:51"><expr pos:start="687:13" pos:end="687:50"><call pos:start="687:13" pos:end="687:50"><name pos:start="687:13" pos:end="687:18">av_log</name><argument_list pos:start="687:19" pos:end="687:50">(<argument pos:start="687:20" pos:end="687:20"><expr pos:start="687:20" pos:end="687:20"><name pos:start="687:20" pos:end="687:20">c</name></expr></argument>, <argument pos:start="687:23" pos:end="687:33"><expr pos:start="687:23" pos:end="687:33"><name pos:start="687:23" pos:end="687:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="687:36" pos:end="687:49"><expr pos:start="687:36" pos:end="687:49"><literal type="string" pos:start="687:36" pos:end="687:49">"using MMX2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="689:9" pos:end="691:52">else if <condition pos:start="689:17" pos:end="689:44">(<expr pos:start="689:18" pos:end="689:43"><name pos:start="689:18" pos:end="689:22">flags</name> <operator pos:start="689:24" pos:end="689:24">&amp;</operator> <name pos:start="689:26" pos:end="689:43">SWS_CPU_CAPS_3DNOW</name></expr>)</condition><block type="pseudo" pos:start="691:13" pos:end="691:52"><block_content pos:start="691:13" pos:end="691:52">

            <expr_stmt pos:start="691:13" pos:end="691:52"><expr pos:start="691:13" pos:end="691:51"><call pos:start="691:13" pos:end="691:51"><name pos:start="691:13" pos:end="691:18">av_log</name><argument_list pos:start="691:19" pos:end="691:51">(<argument pos:start="691:20" pos:end="691:20"><expr pos:start="691:20" pos:end="691:20"><name pos:start="691:20" pos:end="691:20">c</name></expr></argument>, <argument pos:start="691:23" pos:end="691:33"><expr pos:start="691:23" pos:end="691:33"><name pos:start="691:23" pos:end="691:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="691:36" pos:end="691:50"><expr pos:start="691:36" pos:end="691:50"><literal type="string" pos:start="691:36" pos:end="691:50">"using 3DNOW\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="693:9" pos:end="695:50">else if <condition pos:start="693:17" pos:end="693:42">(<expr pos:start="693:18" pos:end="693:41"><name pos:start="693:18" pos:end="693:22">flags</name> <operator pos:start="693:24" pos:end="693:24">&amp;</operator> <name pos:start="693:26" pos:end="693:41">SWS_CPU_CAPS_MMX</name></expr>)</condition><block type="pseudo" pos:start="695:13" pos:end="695:50"><block_content pos:start="695:13" pos:end="695:50">

            <expr_stmt pos:start="695:13" pos:end="695:50"><expr pos:start="695:13" pos:end="695:49"><call pos:start="695:13" pos:end="695:49"><name pos:start="695:13" pos:end="695:18">av_log</name><argument_list pos:start="695:19" pos:end="695:49">(<argument pos:start="695:20" pos:end="695:20"><expr pos:start="695:20" pos:end="695:20"><name pos:start="695:20" pos:end="695:20">c</name></expr></argument>, <argument pos:start="695:23" pos:end="695:33"><expr pos:start="695:23" pos:end="695:33"><name pos:start="695:23" pos:end="695:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="695:36" pos:end="695:48"><expr pos:start="695:36" pos:end="695:48"><literal type="string" pos:start="695:36" pos:end="695:48">"using MMX\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="697:9" pos:end="699:54">else if <condition pos:start="697:17" pos:end="697:46">(<expr pos:start="697:18" pos:end="697:45"><name pos:start="697:18" pos:end="697:22">flags</name> <operator pos:start="697:24" pos:end="697:24">&amp;</operator> <name pos:start="697:26" pos:end="697:45">SWS_CPU_CAPS_ALTIVEC</name></expr>)</condition><block type="pseudo" pos:start="699:13" pos:end="699:54"><block_content pos:start="699:13" pos:end="699:54">

            <expr_stmt pos:start="699:13" pos:end="699:54"><expr pos:start="699:13" pos:end="699:53"><call pos:start="699:13" pos:end="699:53"><name pos:start="699:13" pos:end="699:18">av_log</name><argument_list pos:start="699:19" pos:end="699:53">(<argument pos:start="699:20" pos:end="699:20"><expr pos:start="699:20" pos:end="699:20"><name pos:start="699:20" pos:end="699:20">c</name></expr></argument>, <argument pos:start="699:23" pos:end="699:33"><expr pos:start="699:23" pos:end="699:33"><name pos:start="699:23" pos:end="699:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="699:36" pos:end="699:52"><expr pos:start="699:36" pos:end="699:52"><literal type="string" pos:start="699:36" pos:end="699:52">"using AltiVec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="701:9" pos:end="703:48">else<block type="pseudo" pos:start="703:13" pos:end="703:48"><block_content pos:start="703:13" pos:end="703:48">

            <expr_stmt pos:start="703:13" pos:end="703:48"><expr pos:start="703:13" pos:end="703:47"><call pos:start="703:13" pos:end="703:47"><name pos:start="703:13" pos:end="703:18">av_log</name><argument_list pos:start="703:19" pos:end="703:47">(<argument pos:start="703:20" pos:end="703:20"><expr pos:start="703:20" pos:end="703:20"><name pos:start="703:20" pos:end="703:20">c</name></expr></argument>, <argument pos:start="703:23" pos:end="703:33"><expr pos:start="703:23" pos:end="703:33"><name pos:start="703:23" pos:end="703:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="703:36" pos:end="703:46"><expr pos:start="703:36" pos:end="703:46"><literal type="string" pos:start="703:36" pos:end="703:46">"using C\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="707:9" pos:end="761:9"><if pos:start="707:9" pos:end="743:9">if <condition pos:start="707:12" pos:end="707:37">(<expr pos:start="707:13" pos:end="707:36"><name pos:start="707:13" pos:end="707:17">flags</name> <operator pos:start="707:19" pos:end="707:19">&amp;</operator> <name pos:start="707:21" pos:end="707:36">SWS_CPU_CAPS_MMX</name></expr>)</condition> <block pos:start="707:39" pos:end="743:9">{<block_content pos:start="709:13" pos:end="741:13">

            <if_stmt pos:start="709:13" pos:end="741:13"><if pos:start="709:13" pos:end="711:102">if <condition pos:start="709:16" pos:end="709:62">(<expr pos:start="709:17" pos:end="709:61"><name pos:start="709:17" pos:end="709:32"><name pos:start="709:17" pos:end="709:17">c</name><operator pos:start="709:18" pos:end="709:19">-&gt;</operator><name pos:start="709:20" pos:end="709:32">canMMX2BeUsed</name></name> <operator pos:start="709:34" pos:end="709:35">&amp;&amp;</operator> <operator pos:start="709:37" pos:end="709:37">(</operator><name pos:start="709:38" pos:end="709:42">flags</name><operator pos:start="709:43" pos:end="709:43">&amp;</operator><name pos:start="709:44" pos:end="709:60">SWS_FAST_BILINEAR</name><operator pos:start="709:61" pos:end="709:61">)</operator></expr>)</condition><block type="pseudo" pos:start="711:17" pos:end="711:102"><block_content pos:start="711:17" pos:end="711:102">

                <expr_stmt pos:start="711:17" pos:end="711:102"><expr pos:start="711:17" pos:end="711:101"><call pos:start="711:17" pos:end="711:101"><name pos:start="711:17" pos:end="711:22">av_log</name><argument_list pos:start="711:23" pos:end="711:101">(<argument pos:start="711:24" pos:end="711:24"><expr pos:start="711:24" pos:end="711:24"><name pos:start="711:24" pos:end="711:24">c</name></expr></argument>, <argument pos:start="711:27" pos:end="711:40"><expr pos:start="711:27" pos:end="711:40"><name pos:start="711:27" pos:end="711:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="711:43" pos:end="711:100"><expr pos:start="711:43" pos:end="711:100"><literal type="string" pos:start="711:43" pos:end="711:100">"using FAST_BILINEAR MMX2 scaler for horizontal scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="713:13" pos:end="741:13">else <block pos:start="713:18" pos:end="741:13">{<block_content pos:start="715:17" pos:end="739:109">

                <if_stmt pos:start="715:17" pos:end="725:107"><if pos:start="715:17" pos:end="717:107">if <condition pos:start="715:20" pos:end="715:41">(<expr pos:start="715:21" pos:end="715:40"><name pos:start="715:21" pos:end="715:37"><name pos:start="715:21" pos:end="715:21">c</name><operator pos:start="715:22" pos:end="715:23">-&gt;</operator><name pos:start="715:24" pos:end="715:37">hLumFilterSize</name></name><operator pos:start="715:38" pos:end="715:39">==</operator><literal type="number" pos:start="715:40" pos:end="715:40">4</literal></expr>)</condition><block type="pseudo" pos:start="717:21" pos:end="717:107"><block_content pos:start="717:21" pos:end="717:107">

                    <expr_stmt pos:start="717:21" pos:end="717:107"><expr pos:start="717:21" pos:end="717:106"><call pos:start="717:21" pos:end="717:106"><name pos:start="717:21" pos:end="717:26">av_log</name><argument_list pos:start="717:27" pos:end="717:106">(<argument pos:start="717:28" pos:end="717:28"><expr pos:start="717:28" pos:end="717:28"><name pos:start="717:28" pos:end="717:28">c</name></expr></argument>, <argument pos:start="717:31" pos:end="717:44"><expr pos:start="717:31" pos:end="717:44"><name pos:start="717:31" pos:end="717:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="717:47" pos:end="717:105"><expr pos:start="717:47" pos:end="717:105"><literal type="string" pos:start="717:47" pos:end="717:105">"using 4-tap MMX scaler for horizontal luminance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="719:17" pos:end="721:107">else if <condition pos:start="719:25" pos:end="719:46">(<expr pos:start="719:26" pos:end="719:45"><name pos:start="719:26" pos:end="719:42"><name pos:start="719:26" pos:end="719:26">c</name><operator pos:start="719:27" pos:end="719:28">-&gt;</operator><name pos:start="719:29" pos:end="719:42">hLumFilterSize</name></name><operator pos:start="719:43" pos:end="719:44">==</operator><literal type="number" pos:start="719:45" pos:end="719:45">8</literal></expr>)</condition><block type="pseudo" pos:start="721:21" pos:end="721:107"><block_content pos:start="721:21" pos:end="721:107">

                    <expr_stmt pos:start="721:21" pos:end="721:107"><expr pos:start="721:21" pos:end="721:106"><call pos:start="721:21" pos:end="721:106"><name pos:start="721:21" pos:end="721:26">av_log</name><argument_list pos:start="721:27" pos:end="721:106">(<argument pos:start="721:28" pos:end="721:28"><expr pos:start="721:28" pos:end="721:28"><name pos:start="721:28" pos:end="721:28">c</name></expr></argument>, <argument pos:start="721:31" pos:end="721:44"><expr pos:start="721:31" pos:end="721:44"><name pos:start="721:31" pos:end="721:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="721:47" pos:end="721:105"><expr pos:start="721:47" pos:end="721:105"><literal type="string" pos:start="721:47" pos:end="721:105">"using 8-tap MMX scaler for horizontal luminance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="723:17" pos:end="725:107">else<block type="pseudo" pos:start="725:21" pos:end="725:107"><block_content pos:start="725:21" pos:end="725:107">

                    <expr_stmt pos:start="725:21" pos:end="725:107"><expr pos:start="725:21" pos:end="725:106"><call pos:start="725:21" pos:end="725:106"><name pos:start="725:21" pos:end="725:26">av_log</name><argument_list pos:start="725:27" pos:end="725:106">(<argument pos:start="725:28" pos:end="725:28"><expr pos:start="725:28" pos:end="725:28"><name pos:start="725:28" pos:end="725:28">c</name></expr></argument>, <argument pos:start="725:31" pos:end="725:44"><expr pos:start="725:31" pos:end="725:44"><name pos:start="725:31" pos:end="725:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="725:47" pos:end="725:105"><expr pos:start="725:47" pos:end="725:105"><literal type="string" pos:start="725:47" pos:end="725:105">"using n-tap MMX scaler for horizontal luminance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <if_stmt pos:start="729:17" pos:end="739:109"><if pos:start="729:17" pos:end="731:109">if <condition pos:start="729:20" pos:end="729:41">(<expr pos:start="729:21" pos:end="729:40"><name pos:start="729:21" pos:end="729:37"><name pos:start="729:21" pos:end="729:21">c</name><operator pos:start="729:22" pos:end="729:23">-&gt;</operator><name pos:start="729:24" pos:end="729:37">hChrFilterSize</name></name><operator pos:start="729:38" pos:end="729:39">==</operator><literal type="number" pos:start="729:40" pos:end="729:40">4</literal></expr>)</condition><block type="pseudo" pos:start="731:21" pos:end="731:109"><block_content pos:start="731:21" pos:end="731:109">

                    <expr_stmt pos:start="731:21" pos:end="731:109"><expr pos:start="731:21" pos:end="731:108"><call pos:start="731:21" pos:end="731:108"><name pos:start="731:21" pos:end="731:26">av_log</name><argument_list pos:start="731:27" pos:end="731:108">(<argument pos:start="731:28" pos:end="731:28"><expr pos:start="731:28" pos:end="731:28"><name pos:start="731:28" pos:end="731:28">c</name></expr></argument>, <argument pos:start="731:31" pos:end="731:44"><expr pos:start="731:31" pos:end="731:44"><name pos:start="731:31" pos:end="731:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="731:47" pos:end="731:107"><expr pos:start="731:47" pos:end="731:107"><literal type="string" pos:start="731:47" pos:end="731:107">"using 4-tap MMX scaler for horizontal chrominance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="733:17" pos:end="735:109">else if <condition pos:start="733:25" pos:end="733:46">(<expr pos:start="733:26" pos:end="733:45"><name pos:start="733:26" pos:end="733:42"><name pos:start="733:26" pos:end="733:26">c</name><operator pos:start="733:27" pos:end="733:28">-&gt;</operator><name pos:start="733:29" pos:end="733:42">hChrFilterSize</name></name><operator pos:start="733:43" pos:end="733:44">==</operator><literal type="number" pos:start="733:45" pos:end="733:45">8</literal></expr>)</condition><block type="pseudo" pos:start="735:21" pos:end="735:109"><block_content pos:start="735:21" pos:end="735:109">

                    <expr_stmt pos:start="735:21" pos:end="735:109"><expr pos:start="735:21" pos:end="735:108"><call pos:start="735:21" pos:end="735:108"><name pos:start="735:21" pos:end="735:26">av_log</name><argument_list pos:start="735:27" pos:end="735:108">(<argument pos:start="735:28" pos:end="735:28"><expr pos:start="735:28" pos:end="735:28"><name pos:start="735:28" pos:end="735:28">c</name></expr></argument>, <argument pos:start="735:31" pos:end="735:44"><expr pos:start="735:31" pos:end="735:44"><name pos:start="735:31" pos:end="735:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="735:47" pos:end="735:107"><expr pos:start="735:47" pos:end="735:107"><literal type="string" pos:start="735:47" pos:end="735:107">"using 8-tap MMX scaler for horizontal chrominance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="737:17" pos:end="739:109">else<block type="pseudo" pos:start="739:21" pos:end="739:109"><block_content pos:start="739:21" pos:end="739:109">

                    <expr_stmt pos:start="739:21" pos:end="739:109"><expr pos:start="739:21" pos:end="739:108"><call pos:start="739:21" pos:end="739:108"><name pos:start="739:21" pos:end="739:26">av_log</name><argument_list pos:start="739:27" pos:end="739:108">(<argument pos:start="739:28" pos:end="739:28"><expr pos:start="739:28" pos:end="739:28"><name pos:start="739:28" pos:end="739:28">c</name></expr></argument>, <argument pos:start="739:31" pos:end="739:44"><expr pos:start="739:31" pos:end="739:44"><name pos:start="739:31" pos:end="739:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="739:47" pos:end="739:107"><expr pos:start="739:47" pos:end="739:107"><literal type="string" pos:start="739:47" pos:end="739:107">"using n-tap MMX scaler for horizontal chrominance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="743:11" pos:end="761:9">else <block pos:start="743:16" pos:end="761:9">{<block_content pos:start="747:13" pos:end="760:0">

<cpp:if pos:start="745:1" pos:end="745:12">#<cpp:directive pos:start="745:2" pos:end="745:3">if</cpp:directive> <expr pos:start="745:5" pos:end="745:12"><name pos:start="745:5" pos:end="745:12">ARCH_X86</name></expr></cpp:if>

            <expr_stmt pos:start="747:13" pos:end="750:0"><expr pos:start="747:13" pos:end="747:86"><call pos:start="747:13" pos:end="747:86"><name pos:start="747:13" pos:end="747:18">av_log</name><argument_list pos:start="747:19" pos:end="747:86">(<argument pos:start="747:20" pos:end="747:20"><expr pos:start="747:20" pos:end="747:20"><name pos:start="747:20" pos:end="747:20">c</name></expr></argument>, <argument pos:start="747:23" pos:end="747:36"><expr pos:start="747:23" pos:end="747:36"><name pos:start="747:23" pos:end="747:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="747:39" pos:end="747:85"><expr pos:start="747:39" pos:end="747:85"><literal type="string" pos:start="747:39" pos:end="747:85">"using x86 asm scaler for horizontal scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="749:1" pos:end="749:5">#<cpp:directive pos:start="749:2" pos:end="749:5">else</cpp:directive></cpp:else>

            <if_stmt pos:start="751:13" pos:end="760:0"><if pos:start="751:13" pos:end="753:99">if <condition pos:start="751:16" pos:end="751:42">(<expr pos:start="751:17" pos:end="751:41"><name pos:start="751:17" pos:end="751:21">flags</name> <operator pos:start="751:23" pos:end="751:23">&amp;</operator> <name pos:start="751:25" pos:end="751:41">SWS_FAST_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="753:17" pos:end="753:99"><block_content pos:start="753:17" pos:end="753:99">

                <expr_stmt pos:start="753:17" pos:end="753:99"><expr pos:start="753:17" pos:end="753:98"><call pos:start="753:17" pos:end="753:98"><name pos:start="753:17" pos:end="753:22">av_log</name><argument_list pos:start="753:23" pos:end="753:98">(<argument pos:start="753:24" pos:end="753:24"><expr pos:start="753:24" pos:end="753:24"><name pos:start="753:24" pos:end="753:24">c</name></expr></argument>, <argument pos:start="753:27" pos:end="753:40"><expr pos:start="753:27" pos:end="753:40"><name pos:start="753:27" pos:end="753:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="753:43" pos:end="753:97"><expr pos:start="753:43" pos:end="753:97"><literal type="string" pos:start="753:43" pos:end="753:97">"using FAST_BILINEAR C scaler for horizontal scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="755:13" pos:end="760:0">else<block type="pseudo" pos:start="757:17" pos:end="760:0"><block_content pos:start="757:17" pos:end="760:0">

                <expr_stmt pos:start="757:17" pos:end="760:0"><expr pos:start="757:17" pos:end="757:84"><call pos:start="757:17" pos:end="757:84"><name pos:start="757:17" pos:end="757:22">av_log</name><argument_list pos:start="757:23" pos:end="757:84">(<argument pos:start="757:24" pos:end="757:24"><expr pos:start="757:24" pos:end="757:24"><name pos:start="757:24" pos:end="757:24">c</name></expr></argument>, <argument pos:start="757:27" pos:end="757:40"><expr pos:start="757:27" pos:end="757:40"><name pos:start="757:27" pos:end="757:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="757:43" pos:end="757:83"><expr pos:start="757:43" pos:end="757:83"><literal type="string" pos:start="757:43" pos:end="757:83">"using C scaler for horizontal scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:endif pos:start="759:1" pos:end="759:6">#<cpp:directive pos:start="759:2" pos:end="759:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="763:9" pos:end="789:9"><if pos:start="763:9" pos:end="773:9">if <condition pos:start="763:12" pos:end="763:35">(<expr pos:start="763:13" pos:end="763:34"><call pos:start="763:13" pos:end="763:34"><name pos:start="763:13" pos:end="763:23">isPlanarYUV</name><argument_list pos:start="763:24" pos:end="763:34">(<argument pos:start="763:25" pos:end="763:33"><expr pos:start="763:25" pos:end="763:33"><name pos:start="763:25" pos:end="763:33">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="763:37" pos:end="773:9">{<block_content pos:start="765:13" pos:end="771:144">

            <if_stmt pos:start="765:13" pos:end="771:144"><if pos:start="765:13" pos:end="767:148">if <condition pos:start="765:16" pos:end="765:37">(<expr pos:start="765:17" pos:end="765:36"><name pos:start="765:17" pos:end="765:33"><name pos:start="765:17" pos:end="765:17">c</name><operator pos:start="765:18" pos:end="765:19">-&gt;</operator><name pos:start="765:20" pos:end="765:33">vLumFilterSize</name></name><operator pos:start="765:34" pos:end="765:35">==</operator><literal type="number" pos:start="765:36" pos:end="765:36">1</literal></expr>)</condition><block type="pseudo" pos:start="767:17" pos:end="767:148"><block_content pos:start="767:17" pos:end="767:148">

                <expr_stmt pos:start="767:17" pos:end="767:148"><expr pos:start="767:17" pos:end="767:147"><call pos:start="767:17" pos:end="767:147"><name pos:start="767:17" pos:end="767:22">av_log</name><argument_list pos:start="767:23" pos:end="767:147">(<argument pos:start="767:24" pos:end="767:24"><expr pos:start="767:24" pos:end="767:24"><name pos:start="767:24" pos:end="767:24">c</name></expr></argument>, <argument pos:start="767:27" pos:end="767:40"><expr pos:start="767:27" pos:end="767:40"><name pos:start="767:27" pos:end="767:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="767:43" pos:end="767:104"><expr pos:start="767:43" pos:end="767:104"><literal type="string" pos:start="767:43" pos:end="767:104">"using 1-tap %s \"scaler\" for vertical scaling (YV12 like)\n"</literal></expr></argument>, <argument pos:start="767:107" pos:end="767:146"><expr pos:start="767:107" pos:end="767:146"><ternary pos:start="767:107" pos:end="767:146"><condition pos:start="767:107" pos:end="767:134"><expr pos:start="767:107" pos:end="767:132"><operator pos:start="767:107" pos:end="767:107">(</operator><name pos:start="767:108" pos:end="767:112">flags</name> <operator pos:start="767:114" pos:end="767:114">&amp;</operator> <name pos:start="767:116" pos:end="767:131">SWS_CPU_CAPS_MMX</name><operator pos:start="767:132" pos:end="767:132">)</operator></expr> ?</condition><then pos:start="767:136" pos:end="767:140"> <expr pos:start="767:136" pos:end="767:140"><literal type="string" pos:start="767:136" pos:end="767:140">"MMX"</literal></expr> </then><else pos:start="767:142" pos:end="767:146">: <expr pos:start="767:144" pos:end="767:146"><literal type="string" pos:start="767:144" pos:end="767:146">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="769:13" pos:end="771:144">else<block type="pseudo" pos:start="771:17" pos:end="771:144"><block_content pos:start="771:17" pos:end="771:144">

                <expr_stmt pos:start="771:17" pos:end="771:144"><expr pos:start="771:17" pos:end="771:143"><call pos:start="771:17" pos:end="771:143"><name pos:start="771:17" pos:end="771:22">av_log</name><argument_list pos:start="771:23" pos:end="771:143">(<argument pos:start="771:24" pos:end="771:24"><expr pos:start="771:24" pos:end="771:24"><name pos:start="771:24" pos:end="771:24">c</name></expr></argument>, <argument pos:start="771:27" pos:end="771:40"><expr pos:start="771:27" pos:end="771:40"><name pos:start="771:27" pos:end="771:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="771:43" pos:end="771:100"><expr pos:start="771:43" pos:end="771:100"><literal type="string" pos:start="771:43" pos:end="771:100">"using n-tap %s scaler for vertical scaling (YV12 like)\n"</literal></expr></argument>, <argument pos:start="771:103" pos:end="771:142"><expr pos:start="771:103" pos:end="771:142"><ternary pos:start="771:103" pos:end="771:142"><condition pos:start="771:103" pos:end="771:130"><expr pos:start="771:103" pos:end="771:128"><operator pos:start="771:103" pos:end="771:103">(</operator><name pos:start="771:104" pos:end="771:108">flags</name> <operator pos:start="771:110" pos:end="771:110">&amp;</operator> <name pos:start="771:112" pos:end="771:127">SWS_CPU_CAPS_MMX</name><operator pos:start="771:128" pos:end="771:128">)</operator></expr> ?</condition><then pos:start="771:132" pos:end="771:136"> <expr pos:start="771:132" pos:end="771:136"><literal type="string" pos:start="771:132" pos:end="771:136">"MMX"</literal></expr> </then><else pos:start="771:138" pos:end="771:142">: <expr pos:start="771:140" pos:end="771:142"><literal type="string" pos:start="771:140" pos:end="771:142">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="773:11" pos:end="789:9">else <block pos:start="773:16" pos:end="789:9">{<block_content pos:start="775:13" pos:end="787:138">

            <if_stmt pos:start="775:13" pos:end="787:138"><if pos:start="775:13" pos:end="779:128">if <condition pos:start="775:16" pos:end="775:61">(<expr pos:start="775:17" pos:end="775:60"><name pos:start="775:17" pos:end="775:33"><name pos:start="775:17" pos:end="775:17">c</name><operator pos:start="775:18" pos:end="775:19">-&gt;</operator><name pos:start="775:20" pos:end="775:33">vLumFilterSize</name></name><operator pos:start="775:34" pos:end="775:35">==</operator><literal type="number" pos:start="775:36" pos:end="775:36">1</literal> <operator pos:start="775:38" pos:end="775:39">&amp;&amp;</operator> <name pos:start="775:41" pos:end="775:57"><name pos:start="775:41" pos:end="775:41">c</name><operator pos:start="775:42" pos:end="775:43">-&gt;</operator><name pos:start="775:44" pos:end="775:57">vChrFilterSize</name></name><operator pos:start="775:58" pos:end="775:59">==</operator><literal type="number" pos:start="775:60" pos:end="775:60">2</literal></expr>)</condition><block type="pseudo" pos:start="777:17" pos:end="779:128"><block_content pos:start="777:17" pos:end="779:128">

                <expr_stmt pos:start="777:17" pos:end="779:128"><expr pos:start="777:17" pos:end="779:127"><call pos:start="777:17" pos:end="779:127"><name pos:start="777:17" pos:end="777:22">av_log</name><argument_list pos:start="777:23" pos:end="779:127">(<argument pos:start="777:24" pos:end="777:24"><expr pos:start="777:24" pos:end="777:24"><name pos:start="777:24" pos:end="777:24">c</name></expr></argument>, <argument pos:start="777:27" pos:end="777:40"><expr pos:start="777:27" pos:end="777:40"><name pos:start="777:27" pos:end="777:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="777:43" pos:end="779:84"><expr pos:start="777:43" pos:end="779:84"><literal type="string" pos:start="777:43" pos:end="777:108">"using 1-tap %s \"scaler\" for vertical luminance scaling (BGR)\n"</literal>

                       <literal type="string" pos:start="779:24" pos:end="779:84">"      2-tap scaler for vertical chrominance scaling (BGR)\n"</literal></expr></argument>, <argument pos:start="779:87" pos:end="779:126"><expr pos:start="779:87" pos:end="779:126"><ternary pos:start="779:87" pos:end="779:126"><condition pos:start="779:87" pos:end="779:114"><expr pos:start="779:87" pos:end="779:112"><operator pos:start="779:87" pos:end="779:87">(</operator><name pos:start="779:88" pos:end="779:92">flags</name> <operator pos:start="779:94" pos:end="779:94">&amp;</operator> <name pos:start="779:96" pos:end="779:111">SWS_CPU_CAPS_MMX</name><operator pos:start="779:112" pos:end="779:112">)</operator></expr> ?</condition><then pos:start="779:116" pos:end="779:120"> <expr pos:start="779:116" pos:end="779:120"><literal type="string" pos:start="779:116" pos:end="779:120">"MMX"</literal></expr> </then><else pos:start="779:122" pos:end="779:126">: <expr pos:start="779:124" pos:end="779:126"><literal type="string" pos:start="779:124" pos:end="779:126">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="781:13" pos:end="783:145">else if <condition pos:start="781:21" pos:end="781:66">(<expr pos:start="781:22" pos:end="781:65"><name pos:start="781:22" pos:end="781:38"><name pos:start="781:22" pos:end="781:22">c</name><operator pos:start="781:23" pos:end="781:24">-&gt;</operator><name pos:start="781:25" pos:end="781:38">vLumFilterSize</name></name><operator pos:start="781:39" pos:end="781:40">==</operator><literal type="number" pos:start="781:41" pos:end="781:41">2</literal> <operator pos:start="781:43" pos:end="781:44">&amp;&amp;</operator> <name pos:start="781:46" pos:end="781:62"><name pos:start="781:46" pos:end="781:46">c</name><operator pos:start="781:47" pos:end="781:48">-&gt;</operator><name pos:start="781:49" pos:end="781:62">vChrFilterSize</name></name><operator pos:start="781:63" pos:end="781:64">==</operator><literal type="number" pos:start="781:65" pos:end="781:65">2</literal></expr>)</condition><block type="pseudo" pos:start="783:17" pos:end="783:145"><block_content pos:start="783:17" pos:end="783:145">

                <expr_stmt pos:start="783:17" pos:end="783:145"><expr pos:start="783:17" pos:end="783:144"><call pos:start="783:17" pos:end="783:144"><name pos:start="783:17" pos:end="783:22">av_log</name><argument_list pos:start="783:23" pos:end="783:144">(<argument pos:start="783:24" pos:end="783:24"><expr pos:start="783:24" pos:end="783:24"><name pos:start="783:24" pos:end="783:24">c</name></expr></argument>, <argument pos:start="783:27" pos:end="783:40"><expr pos:start="783:27" pos:end="783:40"><name pos:start="783:27" pos:end="783:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="783:43" pos:end="783:101"><expr pos:start="783:43" pos:end="783:101"><literal type="string" pos:start="783:43" pos:end="783:101">"using 2-tap linear %s scaler for vertical scaling (BGR)\n"</literal></expr></argument>, <argument pos:start="783:104" pos:end="783:143"><expr pos:start="783:104" pos:end="783:143"><ternary pos:start="783:104" pos:end="783:143"><condition pos:start="783:104" pos:end="783:131"><expr pos:start="783:104" pos:end="783:129"><operator pos:start="783:104" pos:end="783:104">(</operator><name pos:start="783:105" pos:end="783:109">flags</name> <operator pos:start="783:111" pos:end="783:111">&amp;</operator> <name pos:start="783:113" pos:end="783:128">SWS_CPU_CAPS_MMX</name><operator pos:start="783:129" pos:end="783:129">)</operator></expr> ?</condition><then pos:start="783:133" pos:end="783:137"> <expr pos:start="783:133" pos:end="783:137"><literal type="string" pos:start="783:133" pos:end="783:137">"MMX"</literal></expr> </then><else pos:start="783:139" pos:end="783:143">: <expr pos:start="783:141" pos:end="783:143"><literal type="string" pos:start="783:141" pos:end="783:143">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="785:13" pos:end="787:138">else<block type="pseudo" pos:start="787:17" pos:end="787:138"><block_content pos:start="787:17" pos:end="787:138">

                <expr_stmt pos:start="787:17" pos:end="787:138"><expr pos:start="787:17" pos:end="787:137"><call pos:start="787:17" pos:end="787:137"><name pos:start="787:17" pos:end="787:22">av_log</name><argument_list pos:start="787:23" pos:end="787:137">(<argument pos:start="787:24" pos:end="787:24"><expr pos:start="787:24" pos:end="787:24"><name pos:start="787:24" pos:end="787:24">c</name></expr></argument>, <argument pos:start="787:27" pos:end="787:40"><expr pos:start="787:27" pos:end="787:40"><name pos:start="787:27" pos:end="787:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="787:43" pos:end="787:94"><expr pos:start="787:43" pos:end="787:94"><literal type="string" pos:start="787:43" pos:end="787:94">"using n-tap %s scaler for vertical scaling (BGR)\n"</literal></expr></argument>, <argument pos:start="787:97" pos:end="787:136"><expr pos:start="787:97" pos:end="787:136"><ternary pos:start="787:97" pos:end="787:136"><condition pos:start="787:97" pos:end="787:124"><expr pos:start="787:97" pos:end="787:122"><operator pos:start="787:97" pos:end="787:97">(</operator><name pos:start="787:98" pos:end="787:102">flags</name> <operator pos:start="787:104" pos:end="787:104">&amp;</operator> <name pos:start="787:106" pos:end="787:121">SWS_CPU_CAPS_MMX</name><operator pos:start="787:122" pos:end="787:122">)</operator></expr> ?</condition><then pos:start="787:126" pos:end="787:130"> <expr pos:start="787:126" pos:end="787:130"><literal type="string" pos:start="787:126" pos:end="787:130">"MMX"</literal></expr> </then><else pos:start="787:132" pos:end="787:136">: <expr pos:start="787:134" pos:end="787:136"><literal type="string" pos:start="787:134" pos:end="787:136">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="793:9" pos:end="815:116"><if pos:start="793:9" pos:end="797:102">if <condition pos:start="793:12" pos:end="793:37">(<expr pos:start="793:13" pos:end="793:36"><name pos:start="793:13" pos:end="793:21">dstFormat</name><operator pos:start="793:22" pos:end="793:23">==</operator><name pos:start="793:24" pos:end="793:36">PIX_FMT_BGR24</name></expr>)</condition><block type="pseudo" pos:start="795:13" pos:end="797:102"><block_content pos:start="795:13" pos:end="797:102">

            <expr_stmt pos:start="795:13" pos:end="797:102"><expr pos:start="795:13" pos:end="797:101"><call pos:start="795:13" pos:end="797:101"><name pos:start="795:13" pos:end="795:18">av_log</name><argument_list pos:start="795:19" pos:end="797:101">(<argument pos:start="795:20" pos:end="795:20"><expr pos:start="795:20" pos:end="795:20"><name pos:start="795:20" pos:end="795:20">c</name></expr></argument>, <argument pos:start="795:23" pos:end="795:36"><expr pos:start="795:23" pos:end="795:36"><name pos:start="795:23" pos:end="795:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="795:39" pos:end="795:72"><expr pos:start="795:39" pos:end="795:72"><literal type="string" pos:start="795:39" pos:end="795:72">"using %s YV12-&gt;BGR24 converter\n"</literal></expr></argument>,

                   <argument pos:start="797:20" pos:end="797:100"><expr pos:start="797:20" pos:end="797:100"><ternary pos:start="797:20" pos:end="797:100"><condition pos:start="797:20" pos:end="797:48"><expr pos:start="797:20" pos:end="797:46"><operator pos:start="797:20" pos:end="797:20">(</operator><name pos:start="797:21" pos:end="797:25">flags</name> <operator pos:start="797:27" pos:end="797:27">&amp;</operator> <name pos:start="797:29" pos:end="797:45">SWS_CPU_CAPS_MMX2</name><operator pos:start="797:46" pos:end="797:46">)</operator></expr> ?</condition><then pos:start="797:50" pos:end="797:55"> <expr pos:start="797:50" pos:end="797:55"><literal type="string" pos:start="797:50" pos:end="797:55">"MMX2"</literal></expr> </then><else pos:start="797:57" pos:end="797:100">: <expr pos:start="797:59" pos:end="797:100"><operator pos:start="797:59" pos:end="797:59">(</operator><ternary pos:start="797:60" pos:end="797:99"><condition pos:start="797:60" pos:end="797:87"><expr pos:start="797:60" pos:end="797:85"><operator pos:start="797:60" pos:end="797:60">(</operator><name pos:start="797:61" pos:end="797:65">flags</name> <operator pos:start="797:67" pos:end="797:67">&amp;</operator> <name pos:start="797:69" pos:end="797:84">SWS_CPU_CAPS_MMX</name><operator pos:start="797:85" pos:end="797:85">)</operator></expr> ?</condition><then pos:start="797:89" pos:end="797:93"> <expr pos:start="797:89" pos:end="797:93"><literal type="string" pos:start="797:89" pos:end="797:93">"MMX"</literal></expr> </then><else pos:start="797:95" pos:end="797:99">: <expr pos:start="797:97" pos:end="797:99"><literal type="string" pos:start="797:97" pos:end="797:99">"C"</literal></expr></else></ternary><operator pos:start="797:100" pos:end="797:100">)</operator></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="799:9" pos:end="801:116">else if <condition pos:start="799:17" pos:end="799:42">(<expr pos:start="799:18" pos:end="799:41"><name pos:start="799:18" pos:end="799:26">dstFormat</name><operator pos:start="799:27" pos:end="799:28">==</operator><name pos:start="799:29" pos:end="799:41">PIX_FMT_RGB32</name></expr>)</condition><block type="pseudo" pos:start="801:13" pos:end="801:116"><block_content pos:start="801:13" pos:end="801:116">

            <expr_stmt pos:start="801:13" pos:end="801:116"><expr pos:start="801:13" pos:end="801:115"><call pos:start="801:13" pos:end="801:115"><name pos:start="801:13" pos:end="801:18">av_log</name><argument_list pos:start="801:19" pos:end="801:115">(<argument pos:start="801:20" pos:end="801:20"><expr pos:start="801:20" pos:end="801:20"><name pos:start="801:20" pos:end="801:20">c</name></expr></argument>, <argument pos:start="801:23" pos:end="801:36"><expr pos:start="801:23" pos:end="801:36"><name pos:start="801:23" pos:end="801:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="801:39" pos:end="801:72"><expr pos:start="801:39" pos:end="801:72"><literal type="string" pos:start="801:39" pos:end="801:72">"using %s YV12-&gt;BGR32 converter\n"</literal></expr></argument>, <argument pos:start="801:75" pos:end="801:114"><expr pos:start="801:75" pos:end="801:114"><ternary pos:start="801:75" pos:end="801:114"><condition pos:start="801:75" pos:end="801:102"><expr pos:start="801:75" pos:end="801:100"><operator pos:start="801:75" pos:end="801:75">(</operator><name pos:start="801:76" pos:end="801:80">flags</name> <operator pos:start="801:82" pos:end="801:82">&amp;</operator> <name pos:start="801:84" pos:end="801:99">SWS_CPU_CAPS_MMX</name><operator pos:start="801:100" pos:end="801:100">)</operator></expr> ?</condition><then pos:start="801:104" pos:end="801:108"> <expr pos:start="801:104" pos:end="801:108"><literal type="string" pos:start="801:104" pos:end="801:108">"MMX"</literal></expr> </then><else pos:start="801:110" pos:end="801:114">: <expr pos:start="801:112" pos:end="801:114"><literal type="string" pos:start="801:112" pos:end="801:114">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="803:9" pos:end="805:116">else if <condition pos:start="803:17" pos:end="803:43">(<expr pos:start="803:18" pos:end="803:42"><name pos:start="803:18" pos:end="803:26">dstFormat</name><operator pos:start="803:27" pos:end="803:28">==</operator><name pos:start="803:29" pos:end="803:42">PIX_FMT_BGR565</name></expr>)</condition><block type="pseudo" pos:start="805:13" pos:end="805:116"><block_content pos:start="805:13" pos:end="805:116">

            <expr_stmt pos:start="805:13" pos:end="805:116"><expr pos:start="805:13" pos:end="805:115"><call pos:start="805:13" pos:end="805:115"><name pos:start="805:13" pos:end="805:18">av_log</name><argument_list pos:start="805:19" pos:end="805:115">(<argument pos:start="805:20" pos:end="805:20"><expr pos:start="805:20" pos:end="805:20"><name pos:start="805:20" pos:end="805:20">c</name></expr></argument>, <argument pos:start="805:23" pos:end="805:36"><expr pos:start="805:23" pos:end="805:36"><name pos:start="805:23" pos:end="805:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="805:39" pos:end="805:72"><expr pos:start="805:39" pos:end="805:72"><literal type="string" pos:start="805:39" pos:end="805:72">"using %s YV12-&gt;BGR16 converter\n"</literal></expr></argument>, <argument pos:start="805:75" pos:end="805:114"><expr pos:start="805:75" pos:end="805:114"><ternary pos:start="805:75" pos:end="805:114"><condition pos:start="805:75" pos:end="805:102"><expr pos:start="805:75" pos:end="805:100"><operator pos:start="805:75" pos:end="805:75">(</operator><name pos:start="805:76" pos:end="805:80">flags</name> <operator pos:start="805:82" pos:end="805:82">&amp;</operator> <name pos:start="805:84" pos:end="805:99">SWS_CPU_CAPS_MMX</name><operator pos:start="805:100" pos:end="805:100">)</operator></expr> ?</condition><then pos:start="805:104" pos:end="805:108"> <expr pos:start="805:104" pos:end="805:108"><literal type="string" pos:start="805:104" pos:end="805:108">"MMX"</literal></expr> </then><else pos:start="805:110" pos:end="805:114">: <expr pos:start="805:112" pos:end="805:114"><literal type="string" pos:start="805:112" pos:end="805:114">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="807:9" pos:end="809:116">else if <condition pos:start="807:17" pos:end="807:43">(<expr pos:start="807:18" pos:end="807:42"><name pos:start="807:18" pos:end="807:26">dstFormat</name><operator pos:start="807:27" pos:end="807:28">==</operator><name pos:start="807:29" pos:end="807:42">PIX_FMT_BGR555</name></expr>)</condition><block type="pseudo" pos:start="809:13" pos:end="809:116"><block_content pos:start="809:13" pos:end="809:116">

            <expr_stmt pos:start="809:13" pos:end="809:116"><expr pos:start="809:13" pos:end="809:115"><call pos:start="809:13" pos:end="809:115"><name pos:start="809:13" pos:end="809:18">av_log</name><argument_list pos:start="809:19" pos:end="809:115">(<argument pos:start="809:20" pos:end="809:20"><expr pos:start="809:20" pos:end="809:20"><name pos:start="809:20" pos:end="809:20">c</name></expr></argument>, <argument pos:start="809:23" pos:end="809:36"><expr pos:start="809:23" pos:end="809:36"><name pos:start="809:23" pos:end="809:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="809:39" pos:end="809:72"><expr pos:start="809:39" pos:end="809:72"><literal type="string" pos:start="809:39" pos:end="809:72">"using %s YV12-&gt;BGR15 converter\n"</literal></expr></argument>, <argument pos:start="809:75" pos:end="809:114"><expr pos:start="809:75" pos:end="809:114"><ternary pos:start="809:75" pos:end="809:114"><condition pos:start="809:75" pos:end="809:102"><expr pos:start="809:75" pos:end="809:100"><operator pos:start="809:75" pos:end="809:75">(</operator><name pos:start="809:76" pos:end="809:80">flags</name> <operator pos:start="809:82" pos:end="809:82">&amp;</operator> <name pos:start="809:84" pos:end="809:99">SWS_CPU_CAPS_MMX</name><operator pos:start="809:100" pos:end="809:100">)</operator></expr> ?</condition><then pos:start="809:104" pos:end="809:108"> <expr pos:start="809:104" pos:end="809:108"><literal type="string" pos:start="809:104" pos:end="809:108">"MMX"</literal></expr> </then><else pos:start="809:110" pos:end="809:114">: <expr pos:start="809:112" pos:end="809:114"><literal type="string" pos:start="809:112" pos:end="809:114">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="811:9" pos:end="815:116">else if <condition pos:start="811:17" pos:end="813:80">(<expr pos:start="811:18" pos:end="813:79"><name pos:start="811:18" pos:end="811:26">dstFormat</name> <operator pos:start="811:28" pos:end="811:29">==</operator> <name pos:start="811:31" pos:end="811:46">PIX_FMT_RGB444BE</name> <operator pos:start="811:48" pos:end="811:49">||</operator> <name pos:start="811:51" pos:end="811:59">dstFormat</name> <operator pos:start="811:61" pos:end="811:62">==</operator> <name pos:start="811:64" pos:end="811:79">PIX_FMT_RGB444LE</name> <operator pos:start="811:81" pos:end="811:82">||</operator>

                 <name pos:start="813:18" pos:end="813:26">dstFormat</name> <operator pos:start="813:28" pos:end="813:29">==</operator> <name pos:start="813:31" pos:end="813:46">PIX_FMT_BGR444BE</name> <operator pos:start="813:48" pos:end="813:49">||</operator> <name pos:start="813:51" pos:end="813:59">dstFormat</name> <operator pos:start="813:61" pos:end="813:62">==</operator> <name pos:start="813:64" pos:end="813:79">PIX_FMT_BGR444LE</name></expr>)</condition><block type="pseudo" pos:start="815:13" pos:end="815:116"><block_content pos:start="815:13" pos:end="815:116">

            <expr_stmt pos:start="815:13" pos:end="815:116"><expr pos:start="815:13" pos:end="815:115"><call pos:start="815:13" pos:end="815:115"><name pos:start="815:13" pos:end="815:18">av_log</name><argument_list pos:start="815:19" pos:end="815:115">(<argument pos:start="815:20" pos:end="815:20"><expr pos:start="815:20" pos:end="815:20"><name pos:start="815:20" pos:end="815:20">c</name></expr></argument>, <argument pos:start="815:23" pos:end="815:36"><expr pos:start="815:23" pos:end="815:36"><name pos:start="815:23" pos:end="815:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="815:39" pos:end="815:72"><expr pos:start="815:39" pos:end="815:72"><literal type="string" pos:start="815:39" pos:end="815:72">"using %s YV12-&gt;BGR12 converter\n"</literal></expr></argument>, <argument pos:start="815:75" pos:end="815:114"><expr pos:start="815:75" pos:end="815:114"><ternary pos:start="815:75" pos:end="815:114"><condition pos:start="815:75" pos:end="815:102"><expr pos:start="815:75" pos:end="815:100"><operator pos:start="815:75" pos:end="815:75">(</operator><name pos:start="815:76" pos:end="815:80">flags</name> <operator pos:start="815:82" pos:end="815:82">&amp;</operator> <name pos:start="815:84" pos:end="815:99">SWS_CPU_CAPS_MMX</name><operator pos:start="815:100" pos:end="815:100">)</operator></expr> ?</condition><then pos:start="815:104" pos:end="815:108"> <expr pos:start="815:104" pos:end="815:108"><literal type="string" pos:start="815:104" pos:end="815:108">"MMX"</literal></expr> </then><else pos:start="815:110" pos:end="815:114">: <expr pos:start="815:112" pos:end="815:114"><literal type="string" pos:start="815:112" pos:end="815:114">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="819:9" pos:end="819:78"><expr pos:start="819:9" pos:end="819:77"><call pos:start="819:9" pos:end="819:77"><name pos:start="819:9" pos:end="819:14">av_log</name><argument_list pos:start="819:15" pos:end="819:77">(<argument pos:start="819:16" pos:end="819:16"><expr pos:start="819:16" pos:end="819:16"><name pos:start="819:16" pos:end="819:16">c</name></expr></argument>, <argument pos:start="819:19" pos:end="819:32"><expr pos:start="819:19" pos:end="819:32"><name pos:start="819:19" pos:end="819:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="819:35" pos:end="819:52"><expr pos:start="819:35" pos:end="819:52"><literal type="string" pos:start="819:35" pos:end="819:52">"%dx%d -&gt; %dx%d\n"</literal></expr></argument>, <argument pos:start="819:55" pos:end="819:58"><expr pos:start="819:55" pos:end="819:58"><name pos:start="819:55" pos:end="819:58">srcW</name></expr></argument>, <argument pos:start="819:61" pos:end="819:64"><expr pos:start="819:61" pos:end="819:64"><name pos:start="819:61" pos:end="819:64">srcH</name></expr></argument>, <argument pos:start="819:67" pos:end="819:70"><expr pos:start="819:67" pos:end="819:70"><name pos:start="819:67" pos:end="819:70">dstW</name></expr></argument>, <argument pos:start="819:73" pos:end="819:76"><expr pos:start="819:73" pos:end="819:76"><name pos:start="819:73" pos:end="819:76">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="821:9" pos:end="823:75"><expr pos:start="821:9" pos:end="823:74"><call pos:start="821:9" pos:end="823:74"><name pos:start="821:9" pos:end="821:14">av_log</name><argument_list pos:start="821:15" pos:end="823:74">(<argument pos:start="821:16" pos:end="821:16"><expr pos:start="821:16" pos:end="821:16"><name pos:start="821:16" pos:end="821:16">c</name></expr></argument>, <argument pos:start="821:19" pos:end="821:30"><expr pos:start="821:19" pos:end="821:30"><name pos:start="821:19" pos:end="821:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="821:33" pos:end="821:87"><expr pos:start="821:33" pos:end="821:87"><literal type="string" pos:start="821:33" pos:end="821:87">"lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n"</literal></expr></argument>,

               <argument pos:start="823:16" pos:end="823:22"><expr pos:start="823:16" pos:end="823:22"><name pos:start="823:16" pos:end="823:22"><name pos:start="823:16" pos:end="823:16">c</name><operator pos:start="823:17" pos:end="823:18">-&gt;</operator><name pos:start="823:19" pos:end="823:22">srcW</name></name></expr></argument>, <argument pos:start="823:25" pos:end="823:31"><expr pos:start="823:25" pos:end="823:31"><name pos:start="823:25" pos:end="823:31"><name pos:start="823:25" pos:end="823:25">c</name><operator pos:start="823:26" pos:end="823:27">-&gt;</operator><name pos:start="823:28" pos:end="823:31">srcH</name></name></expr></argument>, <argument pos:start="823:34" pos:end="823:40"><expr pos:start="823:34" pos:end="823:40"><name pos:start="823:34" pos:end="823:40"><name pos:start="823:34" pos:end="823:34">c</name><operator pos:start="823:35" pos:end="823:36">-&gt;</operator><name pos:start="823:37" pos:end="823:40">dstW</name></name></expr></argument>, <argument pos:start="823:43" pos:end="823:49"><expr pos:start="823:43" pos:end="823:49"><name pos:start="823:43" pos:end="823:49"><name pos:start="823:43" pos:end="823:43">c</name><operator pos:start="823:44" pos:end="823:45">-&gt;</operator><name pos:start="823:46" pos:end="823:49">dstH</name></name></expr></argument>, <argument pos:start="823:52" pos:end="823:61"><expr pos:start="823:52" pos:end="823:61"><name pos:start="823:52" pos:end="823:61"><name pos:start="823:52" pos:end="823:52">c</name><operator pos:start="823:53" pos:end="823:54">-&gt;</operator><name pos:start="823:55" pos:end="823:61">lumXInc</name></name></expr></argument>, <argument pos:start="823:64" pos:end="823:73"><expr pos:start="823:64" pos:end="823:73"><name pos:start="823:64" pos:end="823:73"><name pos:start="823:64" pos:end="823:64">c</name><operator pos:start="823:65" pos:end="823:66">-&gt;</operator><name pos:start="823:67" pos:end="823:73">lumYInc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="825:9" pos:end="827:87"><expr pos:start="825:9" pos:end="827:86"><call pos:start="825:9" pos:end="827:86"><name pos:start="825:9" pos:end="825:14">av_log</name><argument_list pos:start="825:15" pos:end="827:86">(<argument pos:start="825:16" pos:end="825:16"><expr pos:start="825:16" pos:end="825:16"><name pos:start="825:16" pos:end="825:16">c</name></expr></argument>, <argument pos:start="825:19" pos:end="825:30"><expr pos:start="825:19" pos:end="825:30"><name pos:start="825:19" pos:end="825:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="825:33" pos:end="825:87"><expr pos:start="825:33" pos:end="825:87"><literal type="string" pos:start="825:33" pos:end="825:87">"chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n"</literal></expr></argument>,

               <argument pos:start="827:16" pos:end="827:25"><expr pos:start="827:16" pos:end="827:25"><name pos:start="827:16" pos:end="827:25"><name pos:start="827:16" pos:end="827:16">c</name><operator pos:start="827:17" pos:end="827:18">-&gt;</operator><name pos:start="827:19" pos:end="827:25">chrSrcW</name></name></expr></argument>, <argument pos:start="827:28" pos:end="827:37"><expr pos:start="827:28" pos:end="827:37"><name pos:start="827:28" pos:end="827:37"><name pos:start="827:28" pos:end="827:28">c</name><operator pos:start="827:29" pos:end="827:30">-&gt;</operator><name pos:start="827:31" pos:end="827:37">chrSrcH</name></name></expr></argument>, <argument pos:start="827:40" pos:end="827:49"><expr pos:start="827:40" pos:end="827:49"><name pos:start="827:40" pos:end="827:49"><name pos:start="827:40" pos:end="827:40">c</name><operator pos:start="827:41" pos:end="827:42">-&gt;</operator><name pos:start="827:43" pos:end="827:49">chrDstW</name></name></expr></argument>, <argument pos:start="827:52" pos:end="827:61"><expr pos:start="827:52" pos:end="827:61"><name pos:start="827:52" pos:end="827:61"><name pos:start="827:52" pos:end="827:52">c</name><operator pos:start="827:53" pos:end="827:54">-&gt;</operator><name pos:start="827:55" pos:end="827:61">chrDstH</name></name></expr></argument>, <argument pos:start="827:64" pos:end="827:73"><expr pos:start="827:64" pos:end="827:73"><name pos:start="827:64" pos:end="827:73"><name pos:start="827:64" pos:end="827:64">c</name><operator pos:start="827:65" pos:end="827:66">-&gt;</operator><name pos:start="827:67" pos:end="827:73">chrXInc</name></name></expr></argument>, <argument pos:start="827:76" pos:end="827:85"><expr pos:start="827:76" pos:end="827:85"><name pos:start="827:76" pos:end="827:85"><name pos:start="827:76" pos:end="827:76">c</name><operator pos:start="827:77" pos:end="827:78">-&gt;</operator><name pos:start="827:79" pos:end="827:85">chrYInc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="833:5" pos:end="833:33"><expr pos:start="833:5" pos:end="833:32"><name pos:start="833:5" pos:end="833:14"><name pos:start="833:5" pos:end="833:5">c</name><operator pos:start="833:6" pos:end="833:7">-&gt;</operator><name pos:start="833:8" pos:end="833:14">swScale</name></name><operator pos:start="833:15" pos:end="833:15">=</operator> <call pos:start="833:17" pos:end="833:32"><name pos:start="833:17" pos:end="833:29">ff_getSwsFunc</name><argument_list pos:start="833:30" pos:end="833:32">(<argument pos:start="833:31" pos:end="833:31"><expr pos:start="833:31" pos:end="833:31"><name pos:start="833:31" pos:end="833:31">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="835:5" pos:end="835:13">return <expr pos:start="835:12" pos:end="835:12"><name pos:start="835:12" pos:end="835:12">c</name></expr>;</return>



<label pos:start="839:1" pos:end="839:5"><name pos:start="839:1" pos:end="839:4">fail</name>:</label>

    <expr_stmt pos:start="841:5" pos:end="841:23"><expr pos:start="841:5" pos:end="841:22"><call pos:start="841:5" pos:end="841:22"><name pos:start="841:5" pos:end="841:19">sws_freeContext</name><argument_list pos:start="841:20" pos:end="841:22">(<argument pos:start="841:21" pos:end="841:21"><expr pos:start="841:21" pos:end="841:21"><name pos:start="841:21" pos:end="841:21">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="843:5" pos:end="843:16">return <expr pos:start="843:12" pos:end="843:15"><name pos:start="843:12" pos:end="843:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
