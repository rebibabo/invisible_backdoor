<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11173.c" pos:tabs="8"><function pos:start="1:1" pos:end="255:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">init_native_list</name><parameter_list pos:start="1:29" pos:end="1:60">(<parameter pos:start="1:30" pos:end="1:59"><decl pos:start="1:30" pos:end="1:59"><type pos:start="1:30" pos:end="1:53"><name pos:start="1:30" pos:end="1:51">UserDefNativeListUnion</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:59">cvalue</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="255:1">{<block_content pos:start="5:5" pos:end="253:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <switch pos:start="7:5" pos:end="253:5">switch <condition pos:start="7:12" pos:end="7:25">(<expr pos:start="7:13" pos:end="7:24"><name pos:start="7:13" pos:end="7:24"><name pos:start="7:13" pos:end="7:18">cvalue</name><operator pos:start="7:19" pos:end="7:20">-&gt;</operator><name pos:start="7:21" pos:end="7:24">type</name></name></expr>)</condition> <block pos:start="7:27" pos:end="253:5">{<block_content pos:start="9:5" pos:end="251:31">

    <case pos:start="9:5" pos:end="9:49">case <expr pos:start="9:10" pos:end="9:48"><name pos:start="9:10" pos:end="9:48">USER_DEF_NATIVE_LIST_UNION_KIND_INTEGER</name></expr>:</case> <block pos:start="9:51" pos:end="27:5">{<block_content pos:start="11:9" pos:end="25:14">

        <decl_stmt pos:start="11:9" pos:end="11:49"><decl pos:start="11:9" pos:end="11:48"><type pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:15">intList</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier><modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:22">list</name> <init pos:start="11:24" pos:end="11:48">= <expr pos:start="11:26" pos:end="11:48"><operator pos:start="11:26" pos:end="11:26">&amp;</operator><name pos:start="11:27" pos:end="11:48"><name pos:start="11:27" pos:end="11:32">cvalue</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:35">u</name><operator pos:start="11:36" pos:end="11:36">.</operator><name pos:start="11:37" pos:end="11:43">integer</name><operator pos:start="11:44" pos:end="11:44">.</operator><name pos:start="11:45" pos:end="11:48">data</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="13:9" pos:end="23:9">for <control pos:start="13:13" pos:end="13:32">(<init pos:start="13:14" pos:end="13:19"><expr pos:start="13:14" pos:end="13:18"><name pos:start="13:14" pos:end="13:14">i</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>;</init> <condition pos:start="13:21" pos:end="13:27"><expr pos:start="13:21" pos:end="13:26"><name pos:start="13:21" pos:end="13:21">i</name> <operator pos:start="13:23" pos:end="13:23">&lt;</operator> <literal type="number" pos:start="13:25" pos:end="13:26">32</literal></expr>;</condition> <incr pos:start="13:29" pos:end="13:31"><expr pos:start="13:29" pos:end="13:31"><name pos:start="13:29" pos:end="13:29">i</name><operator pos:start="13:30" pos:end="13:31">++</operator></expr></incr>)</control> <block pos:start="13:34" pos:end="23:9">{<block_content pos:start="15:13" pos:end="21:34">

            <expr_stmt pos:start="15:13" pos:end="15:39"><expr pos:start="15:13" pos:end="15:38"><operator pos:start="15:13" pos:end="15:13">*</operator><name pos:start="15:14" pos:end="15:17">list</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <call pos:start="15:21" pos:end="15:38"><name pos:start="15:21" pos:end="15:26">g_new0</name><argument_list pos:start="15:27" pos:end="15:38">(<argument pos:start="15:28" pos:end="15:34"><expr pos:start="15:28" pos:end="15:34"><name pos:start="15:28" pos:end="15:34">intList</name></expr></argument>, <argument pos:start="15:37" pos:end="15:37"><expr pos:start="15:37" pos:end="15:37"><literal type="number" pos:start="15:37" pos:end="15:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="17:13" pos:end="17:31"><expr pos:start="17:13" pos:end="17:30"><name pos:start="17:13" pos:end="17:26"><operator pos:start="17:13" pos:end="17:13">(</operator><operator pos:start="17:14" pos:end="17:14">*</operator><name pos:start="17:15" pos:end="17:18">list</name><operator pos:start="17:19" pos:end="17:19">)</operator><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:26">value</name></name> <operator pos:start="17:28" pos:end="17:28">=</operator> <name pos:start="17:30" pos:end="17:30">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:33"><expr pos:start="19:13" pos:end="19:32"><name pos:start="19:13" pos:end="19:25"><operator pos:start="19:13" pos:end="19:13">(</operator><operator pos:start="19:14" pos:end="19:14">*</operator><name pos:start="19:15" pos:end="19:18">list</name><operator pos:start="19:19" pos:end="19:19">)</operator><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:25">next</name></name> <operator pos:start="19:27" pos:end="19:27">=</operator> <name pos:start="19:29" pos:end="19:32">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:34"><expr pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:16">list</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <operator pos:start="21:20" pos:end="21:20">&amp;</operator><name pos:start="21:21" pos:end="21:33"><operator pos:start="21:21" pos:end="21:21">(</operator><operator pos:start="21:22" pos:end="21:22">*</operator><name pos:start="21:23" pos:end="21:26">list</name><operator pos:start="21:27" pos:end="21:27">)</operator><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:33">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    </block_content>}</block>

    <case pos:start="29:5" pos:end="29:44">case <expr pos:start="29:10" pos:end="29:43"><name pos:start="29:10" pos:end="29:43">USER_DEF_NATIVE_LIST_UNION_KIND_S8</name></expr>:</case> <block pos:start="29:46" pos:end="47:5">{<block_content pos:start="31:9" pos:end="45:14">

        <decl_stmt pos:start="31:9" pos:end="31:45"><decl pos:start="31:9" pos:end="31:44"><type pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:16">int8List</name> <modifier pos:start="31:18" pos:end="31:18">*</modifier><modifier pos:start="31:19" pos:end="31:19">*</modifier></type><name pos:start="31:20" pos:end="31:23">list</name> <init pos:start="31:25" pos:end="31:44">= <expr pos:start="31:27" pos:end="31:44"><operator pos:start="31:27" pos:end="31:27">&amp;</operator><name pos:start="31:28" pos:end="31:44"><name pos:start="31:28" pos:end="31:33">cvalue</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:36">u</name><operator pos:start="31:37" pos:end="31:37">.</operator><name pos:start="31:38" pos:end="31:39">s8</name><operator pos:start="31:40" pos:end="31:40">.</operator><name pos:start="31:41" pos:end="31:44">data</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="33:9" pos:end="43:9">for <control pos:start="33:13" pos:end="33:32">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">i</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:27"><expr pos:start="33:21" pos:end="33:26"><name pos:start="33:21" pos:end="33:21">i</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <literal type="number" pos:start="33:25" pos:end="33:26">32</literal></expr>;</condition> <incr pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><name pos:start="33:29" pos:end="33:29">i</name><operator pos:start="33:30" pos:end="33:31">++</operator></expr></incr>)</control> <block pos:start="33:34" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:34">

            <expr_stmt pos:start="35:13" pos:end="35:40"><expr pos:start="35:13" pos:end="35:39"><operator pos:start="35:13" pos:end="35:13">*</operator><name pos:start="35:14" pos:end="35:17">list</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:39"><name pos:start="35:21" pos:end="35:26">g_new0</name><argument_list pos:start="35:27" pos:end="35:39">(<argument pos:start="35:28" pos:end="35:35"><expr pos:start="35:28" pos:end="35:35"><name pos:start="35:28" pos:end="35:35">int8List</name></expr></argument>, <argument pos:start="35:38" pos:end="35:38"><expr pos:start="35:38" pos:end="35:38"><literal type="number" pos:start="35:38" pos:end="35:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:31"><expr pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:26"><operator pos:start="37:13" pos:end="37:13">(</operator><operator pos:start="37:14" pos:end="37:14">*</operator><name pos:start="37:15" pos:end="37:18">list</name><operator pos:start="37:19" pos:end="37:19">)</operator><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:26">value</name></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:30">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:33"><expr pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:25"><operator pos:start="39:13" pos:end="39:13">(</operator><operator pos:start="39:14" pos:end="39:14">*</operator><name pos:start="39:15" pos:end="39:18">list</name><operator pos:start="39:19" pos:end="39:19">)</operator><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:25">next</name></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:32">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:34"><expr pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:16">list</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <operator pos:start="41:20" pos:end="41:20">&amp;</operator><name pos:start="41:21" pos:end="41:33"><operator pos:start="41:21" pos:end="41:21">(</operator><operator pos:start="41:22" pos:end="41:22">*</operator><name pos:start="41:23" pos:end="41:26">list</name><operator pos:start="41:27" pos:end="41:27">)</operator><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:33">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    </block_content>}</block>

    <case pos:start="49:5" pos:end="49:45">case <expr pos:start="49:10" pos:end="49:44"><name pos:start="49:10" pos:end="49:44">USER_DEF_NATIVE_LIST_UNION_KIND_S16</name></expr>:</case> <block pos:start="49:47" pos:end="67:5">{<block_content pos:start="51:9" pos:end="65:14">

        <decl_stmt pos:start="51:9" pos:end="51:47"><decl pos:start="51:9" pos:end="51:46"><type pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:17">int16List</name> <modifier pos:start="51:19" pos:end="51:19">*</modifier><modifier pos:start="51:20" pos:end="51:20">*</modifier></type><name pos:start="51:21" pos:end="51:24">list</name> <init pos:start="51:26" pos:end="51:46">= <expr pos:start="51:28" pos:end="51:46"><operator pos:start="51:28" pos:end="51:28">&amp;</operator><name pos:start="51:29" pos:end="51:46"><name pos:start="51:29" pos:end="51:34">cvalue</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:37">u</name><operator pos:start="51:38" pos:end="51:38">.</operator><name pos:start="51:39" pos:end="51:41">s16</name><operator pos:start="51:42" pos:end="51:42">.</operator><name pos:start="51:43" pos:end="51:46">data</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="53:9" pos:end="63:9">for <control pos:start="53:13" pos:end="53:32">(<init pos:start="53:14" pos:end="53:19"><expr pos:start="53:14" pos:end="53:18"><name pos:start="53:14" pos:end="53:14">i</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <literal type="number" pos:start="53:18" pos:end="53:18">0</literal></expr>;</init> <condition pos:start="53:21" pos:end="53:27"><expr pos:start="53:21" pos:end="53:26"><name pos:start="53:21" pos:end="53:21">i</name> <operator pos:start="53:23" pos:end="53:23">&lt;</operator> <literal type="number" pos:start="53:25" pos:end="53:26">32</literal></expr>;</condition> <incr pos:start="53:29" pos:end="53:31"><expr pos:start="53:29" pos:end="53:31"><name pos:start="53:29" pos:end="53:29">i</name><operator pos:start="53:30" pos:end="53:31">++</operator></expr></incr>)</control> <block pos:start="53:34" pos:end="63:9">{<block_content pos:start="55:13" pos:end="61:34">

            <expr_stmt pos:start="55:13" pos:end="55:41"><expr pos:start="55:13" pos:end="55:40"><operator pos:start="55:13" pos:end="55:13">*</operator><name pos:start="55:14" pos:end="55:17">list</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <call pos:start="55:21" pos:end="55:40"><name pos:start="55:21" pos:end="55:26">g_new0</name><argument_list pos:start="55:27" pos:end="55:40">(<argument pos:start="55:28" pos:end="55:36"><expr pos:start="55:28" pos:end="55:36"><name pos:start="55:28" pos:end="55:36">int16List</name></expr></argument>, <argument pos:start="55:39" pos:end="55:39"><expr pos:start="55:39" pos:end="55:39"><literal type="number" pos:start="55:39" pos:end="55:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:31"><expr pos:start="57:13" pos:end="57:30"><name pos:start="57:13" pos:end="57:26"><operator pos:start="57:13" pos:end="57:13">(</operator><operator pos:start="57:14" pos:end="57:14">*</operator><name pos:start="57:15" pos:end="57:18">list</name><operator pos:start="57:19" pos:end="57:19">)</operator><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:26">value</name></name> <operator pos:start="57:28" pos:end="57:28">=</operator> <name pos:start="57:30" pos:end="57:30">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:33"><expr pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:25"><operator pos:start="59:13" pos:end="59:13">(</operator><operator pos:start="59:14" pos:end="59:14">*</operator><name pos:start="59:15" pos:end="59:18">list</name><operator pos:start="59:19" pos:end="59:19">)</operator><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:25">next</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <name pos:start="59:29" pos:end="59:32">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:34"><expr pos:start="61:13" pos:end="61:33"><name pos:start="61:13" pos:end="61:16">list</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <operator pos:start="61:20" pos:end="61:20">&amp;</operator><name pos:start="61:21" pos:end="61:33"><operator pos:start="61:21" pos:end="61:21">(</operator><operator pos:start="61:22" pos:end="61:22">*</operator><name pos:start="61:23" pos:end="61:26">list</name><operator pos:start="61:27" pos:end="61:27">)</operator><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:33">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    </block_content>}</block>

    <case pos:start="69:5" pos:end="69:45">case <expr pos:start="69:10" pos:end="69:44"><name pos:start="69:10" pos:end="69:44">USER_DEF_NATIVE_LIST_UNION_KIND_S32</name></expr>:</case> <block pos:start="69:47" pos:end="87:5">{<block_content pos:start="71:9" pos:end="85:14">

        <decl_stmt pos:start="71:9" pos:end="71:47"><decl pos:start="71:9" pos:end="71:46"><type pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:17">int32List</name> <modifier pos:start="71:19" pos:end="71:19">*</modifier><modifier pos:start="71:20" pos:end="71:20">*</modifier></type><name pos:start="71:21" pos:end="71:24">list</name> <init pos:start="71:26" pos:end="71:46">= <expr pos:start="71:28" pos:end="71:46"><operator pos:start="71:28" pos:end="71:28">&amp;</operator><name pos:start="71:29" pos:end="71:46"><name pos:start="71:29" pos:end="71:34">cvalue</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:37">u</name><operator pos:start="71:38" pos:end="71:38">.</operator><name pos:start="71:39" pos:end="71:41">s32</name><operator pos:start="71:42" pos:end="71:42">.</operator><name pos:start="71:43" pos:end="71:46">data</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="73:9" pos:end="83:9">for <control pos:start="73:13" pos:end="73:32">(<init pos:start="73:14" pos:end="73:19"><expr pos:start="73:14" pos:end="73:18"><name pos:start="73:14" pos:end="73:14">i</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">0</literal></expr>;</init> <condition pos:start="73:21" pos:end="73:27"><expr pos:start="73:21" pos:end="73:26"><name pos:start="73:21" pos:end="73:21">i</name> <operator pos:start="73:23" pos:end="73:23">&lt;</operator> <literal type="number" pos:start="73:25" pos:end="73:26">32</literal></expr>;</condition> <incr pos:start="73:29" pos:end="73:31"><expr pos:start="73:29" pos:end="73:31"><name pos:start="73:29" pos:end="73:29">i</name><operator pos:start="73:30" pos:end="73:31">++</operator></expr></incr>)</control> <block pos:start="73:34" pos:end="83:9">{<block_content pos:start="75:13" pos:end="81:34">

            <expr_stmt pos:start="75:13" pos:end="75:41"><expr pos:start="75:13" pos:end="75:40"><operator pos:start="75:13" pos:end="75:13">*</operator><name pos:start="75:14" pos:end="75:17">list</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <call pos:start="75:21" pos:end="75:40"><name pos:start="75:21" pos:end="75:26">g_new0</name><argument_list pos:start="75:27" pos:end="75:40">(<argument pos:start="75:28" pos:end="75:36"><expr pos:start="75:28" pos:end="75:36"><name pos:start="75:28" pos:end="75:36">int32List</name></expr></argument>, <argument pos:start="75:39" pos:end="75:39"><expr pos:start="75:39" pos:end="75:39"><literal type="number" pos:start="75:39" pos:end="75:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:31"><expr pos:start="77:13" pos:end="77:30"><name pos:start="77:13" pos:end="77:26"><operator pos:start="77:13" pos:end="77:13">(</operator><operator pos:start="77:14" pos:end="77:14">*</operator><name pos:start="77:15" pos:end="77:18">list</name><operator pos:start="77:19" pos:end="77:19">)</operator><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:26">value</name></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <name pos:start="77:30" pos:end="77:30">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:33"><expr pos:start="79:13" pos:end="79:32"><name pos:start="79:13" pos:end="79:25"><operator pos:start="79:13" pos:end="79:13">(</operator><operator pos:start="79:14" pos:end="79:14">*</operator><name pos:start="79:15" pos:end="79:18">list</name><operator pos:start="79:19" pos:end="79:19">)</operator><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:25">next</name></name> <operator pos:start="79:27" pos:end="79:27">=</operator> <name pos:start="79:29" pos:end="79:32">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:34"><expr pos:start="81:13" pos:end="81:33"><name pos:start="81:13" pos:end="81:16">list</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <operator pos:start="81:20" pos:end="81:20">&amp;</operator><name pos:start="81:21" pos:end="81:33"><operator pos:start="81:21" pos:end="81:21">(</operator><operator pos:start="81:22" pos:end="81:22">*</operator><name pos:start="81:23" pos:end="81:26">list</name><operator pos:start="81:27" pos:end="81:27">)</operator><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:33">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    </block_content>}</block>

    <case pos:start="89:5" pos:end="89:45">case <expr pos:start="89:10" pos:end="89:44"><name pos:start="89:10" pos:end="89:44">USER_DEF_NATIVE_LIST_UNION_KIND_S64</name></expr>:</case> <block pos:start="89:47" pos:end="107:5">{<block_content pos:start="91:9" pos:end="105:14">

        <decl_stmt pos:start="91:9" pos:end="91:47"><decl pos:start="91:9" pos:end="91:46"><type pos:start="91:9" pos:end="91:20"><name pos:start="91:9" pos:end="91:17">int64List</name> <modifier pos:start="91:19" pos:end="91:19">*</modifier><modifier pos:start="91:20" pos:end="91:20">*</modifier></type><name pos:start="91:21" pos:end="91:24">list</name> <init pos:start="91:26" pos:end="91:46">= <expr pos:start="91:28" pos:end="91:46"><operator pos:start="91:28" pos:end="91:28">&amp;</operator><name pos:start="91:29" pos:end="91:46"><name pos:start="91:29" pos:end="91:34">cvalue</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:37">u</name><operator pos:start="91:38" pos:end="91:38">.</operator><name pos:start="91:39" pos:end="91:41">s64</name><operator pos:start="91:42" pos:end="91:42">.</operator><name pos:start="91:43" pos:end="91:46">data</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="93:9" pos:end="103:9">for <control pos:start="93:13" pos:end="93:32">(<init pos:start="93:14" pos:end="93:19"><expr pos:start="93:14" pos:end="93:18"><name pos:start="93:14" pos:end="93:14">i</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <literal type="number" pos:start="93:18" pos:end="93:18">0</literal></expr>;</init> <condition pos:start="93:21" pos:end="93:27"><expr pos:start="93:21" pos:end="93:26"><name pos:start="93:21" pos:end="93:21">i</name> <operator pos:start="93:23" pos:end="93:23">&lt;</operator> <literal type="number" pos:start="93:25" pos:end="93:26">32</literal></expr>;</condition> <incr pos:start="93:29" pos:end="93:31"><expr pos:start="93:29" pos:end="93:31"><name pos:start="93:29" pos:end="93:29">i</name><operator pos:start="93:30" pos:end="93:31">++</operator></expr></incr>)</control> <block pos:start="93:34" pos:end="103:9">{<block_content pos:start="95:13" pos:end="101:34">

            <expr_stmt pos:start="95:13" pos:end="95:41"><expr pos:start="95:13" pos:end="95:40"><operator pos:start="95:13" pos:end="95:13">*</operator><name pos:start="95:14" pos:end="95:17">list</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <call pos:start="95:21" pos:end="95:40"><name pos:start="95:21" pos:end="95:26">g_new0</name><argument_list pos:start="95:27" pos:end="95:40">(<argument pos:start="95:28" pos:end="95:36"><expr pos:start="95:28" pos:end="95:36"><name pos:start="95:28" pos:end="95:36">int64List</name></expr></argument>, <argument pos:start="95:39" pos:end="95:39"><expr pos:start="95:39" pos:end="95:39"><literal type="number" pos:start="95:39" pos:end="95:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:31"><expr pos:start="97:13" pos:end="97:30"><name pos:start="97:13" pos:end="97:26"><operator pos:start="97:13" pos:end="97:13">(</operator><operator pos:start="97:14" pos:end="97:14">*</operator><name pos:start="97:15" pos:end="97:18">list</name><operator pos:start="97:19" pos:end="97:19">)</operator><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:26">value</name></name> <operator pos:start="97:28" pos:end="97:28">=</operator> <name pos:start="97:30" pos:end="97:30">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:33"><expr pos:start="99:13" pos:end="99:32"><name pos:start="99:13" pos:end="99:25"><operator pos:start="99:13" pos:end="99:13">(</operator><operator pos:start="99:14" pos:end="99:14">*</operator><name pos:start="99:15" pos:end="99:18">list</name><operator pos:start="99:19" pos:end="99:19">)</operator><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:25">next</name></name> <operator pos:start="99:27" pos:end="99:27">=</operator> <name pos:start="99:29" pos:end="99:32">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:34"><expr pos:start="101:13" pos:end="101:33"><name pos:start="101:13" pos:end="101:16">list</name> <operator pos:start="101:18" pos:end="101:18">=</operator> <operator pos:start="101:20" pos:end="101:20">&amp;</operator><name pos:start="101:21" pos:end="101:33"><operator pos:start="101:21" pos:end="101:21">(</operator><operator pos:start="101:22" pos:end="101:22">*</operator><name pos:start="101:23" pos:end="101:26">list</name><operator pos:start="101:27" pos:end="101:27">)</operator><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:33">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    </block_content>}</block>

    <case pos:start="109:5" pos:end="109:44">case <expr pos:start="109:10" pos:end="109:43"><name pos:start="109:10" pos:end="109:43">USER_DEF_NATIVE_LIST_UNION_KIND_U8</name></expr>:</case> <block pos:start="109:46" pos:end="127:5">{<block_content pos:start="111:9" pos:end="125:14">

        <decl_stmt pos:start="111:9" pos:end="111:46"><decl pos:start="111:9" pos:end="111:45"><type pos:start="111:9" pos:end="111:20"><name pos:start="111:9" pos:end="111:17">uint8List</name> <modifier pos:start="111:19" pos:end="111:19">*</modifier><modifier pos:start="111:20" pos:end="111:20">*</modifier></type><name pos:start="111:21" pos:end="111:24">list</name> <init pos:start="111:26" pos:end="111:45">= <expr pos:start="111:28" pos:end="111:45"><operator pos:start="111:28" pos:end="111:28">&amp;</operator><name pos:start="111:29" pos:end="111:45"><name pos:start="111:29" pos:end="111:34">cvalue</name><operator pos:start="111:35" pos:end="111:36">-&gt;</operator><name pos:start="111:37" pos:end="111:37">u</name><operator pos:start="111:38" pos:end="111:38">.</operator><name pos:start="111:39" pos:end="111:40">u8</name><operator pos:start="111:41" pos:end="111:41">.</operator><name pos:start="111:42" pos:end="111:45">data</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="113:9" pos:end="123:9">for <control pos:start="113:13" pos:end="113:32">(<init pos:start="113:14" pos:end="113:19"><expr pos:start="113:14" pos:end="113:18"><name pos:start="113:14" pos:end="113:14">i</name> <operator pos:start="113:16" pos:end="113:16">=</operator> <literal type="number" pos:start="113:18" pos:end="113:18">0</literal></expr>;</init> <condition pos:start="113:21" pos:end="113:27"><expr pos:start="113:21" pos:end="113:26"><name pos:start="113:21" pos:end="113:21">i</name> <operator pos:start="113:23" pos:end="113:23">&lt;</operator> <literal type="number" pos:start="113:25" pos:end="113:26">32</literal></expr>;</condition> <incr pos:start="113:29" pos:end="113:31"><expr pos:start="113:29" pos:end="113:31"><name pos:start="113:29" pos:end="113:29">i</name><operator pos:start="113:30" pos:end="113:31">++</operator></expr></incr>)</control> <block pos:start="113:34" pos:end="123:9">{<block_content pos:start="115:13" pos:end="121:34">

            <expr_stmt pos:start="115:13" pos:end="115:41"><expr pos:start="115:13" pos:end="115:40"><operator pos:start="115:13" pos:end="115:13">*</operator><name pos:start="115:14" pos:end="115:17">list</name> <operator pos:start="115:19" pos:end="115:19">=</operator> <call pos:start="115:21" pos:end="115:40"><name pos:start="115:21" pos:end="115:26">g_new0</name><argument_list pos:start="115:27" pos:end="115:40">(<argument pos:start="115:28" pos:end="115:36"><expr pos:start="115:28" pos:end="115:36"><name pos:start="115:28" pos:end="115:36">uint8List</name></expr></argument>, <argument pos:start="115:39" pos:end="115:39"><expr pos:start="115:39" pos:end="115:39"><literal type="number" pos:start="115:39" pos:end="115:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:31"><expr pos:start="117:13" pos:end="117:30"><name pos:start="117:13" pos:end="117:26"><operator pos:start="117:13" pos:end="117:13">(</operator><operator pos:start="117:14" pos:end="117:14">*</operator><name pos:start="117:15" pos:end="117:18">list</name><operator pos:start="117:19" pos:end="117:19">)</operator><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:26">value</name></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <name pos:start="117:30" pos:end="117:30">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:33"><expr pos:start="119:13" pos:end="119:32"><name pos:start="119:13" pos:end="119:25"><operator pos:start="119:13" pos:end="119:13">(</operator><operator pos:start="119:14" pos:end="119:14">*</operator><name pos:start="119:15" pos:end="119:18">list</name><operator pos:start="119:19" pos:end="119:19">)</operator><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:25">next</name></name> <operator pos:start="119:27" pos:end="119:27">=</operator> <name pos:start="119:29" pos:end="119:32">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:34"><expr pos:start="121:13" pos:end="121:33"><name pos:start="121:13" pos:end="121:16">list</name> <operator pos:start="121:18" pos:end="121:18">=</operator> <operator pos:start="121:20" pos:end="121:20">&amp;</operator><name pos:start="121:21" pos:end="121:33"><operator pos:start="121:21" pos:end="121:21">(</operator><operator pos:start="121:22" pos:end="121:22">*</operator><name pos:start="121:23" pos:end="121:26">list</name><operator pos:start="121:27" pos:end="121:27">)</operator><operator pos:start="121:28" pos:end="121:29">-&gt;</operator><name pos:start="121:30" pos:end="121:33">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="125:9" pos:end="125:14">break;</break>

    </block_content>}</block>

    <case pos:start="129:5" pos:end="129:45">case <expr pos:start="129:10" pos:end="129:44"><name pos:start="129:10" pos:end="129:44">USER_DEF_NATIVE_LIST_UNION_KIND_U16</name></expr>:</case> <block pos:start="129:47" pos:end="147:5">{<block_content pos:start="131:9" pos:end="145:14">

        <decl_stmt pos:start="131:9" pos:end="131:48"><decl pos:start="131:9" pos:end="131:47"><type pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:18">uint16List</name> <modifier pos:start="131:20" pos:end="131:20">*</modifier><modifier pos:start="131:21" pos:end="131:21">*</modifier></type><name pos:start="131:22" pos:end="131:25">list</name> <init pos:start="131:27" pos:end="131:47">= <expr pos:start="131:29" pos:end="131:47"><operator pos:start="131:29" pos:end="131:29">&amp;</operator><name pos:start="131:30" pos:end="131:47"><name pos:start="131:30" pos:end="131:35">cvalue</name><operator pos:start="131:36" pos:end="131:37">-&gt;</operator><name pos:start="131:38" pos:end="131:38">u</name><operator pos:start="131:39" pos:end="131:39">.</operator><name pos:start="131:40" pos:end="131:42">u16</name><operator pos:start="131:43" pos:end="131:43">.</operator><name pos:start="131:44" pos:end="131:47">data</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="133:9" pos:end="143:9">for <control pos:start="133:13" pos:end="133:32">(<init pos:start="133:14" pos:end="133:19"><expr pos:start="133:14" pos:end="133:18"><name pos:start="133:14" pos:end="133:14">i</name> <operator pos:start="133:16" pos:end="133:16">=</operator> <literal type="number" pos:start="133:18" pos:end="133:18">0</literal></expr>;</init> <condition pos:start="133:21" pos:end="133:27"><expr pos:start="133:21" pos:end="133:26"><name pos:start="133:21" pos:end="133:21">i</name> <operator pos:start="133:23" pos:end="133:23">&lt;</operator> <literal type="number" pos:start="133:25" pos:end="133:26">32</literal></expr>;</condition> <incr pos:start="133:29" pos:end="133:31"><expr pos:start="133:29" pos:end="133:31"><name pos:start="133:29" pos:end="133:29">i</name><operator pos:start="133:30" pos:end="133:31">++</operator></expr></incr>)</control> <block pos:start="133:34" pos:end="143:9">{<block_content pos:start="135:13" pos:end="141:34">

            <expr_stmt pos:start="135:13" pos:end="135:42"><expr pos:start="135:13" pos:end="135:41"><operator pos:start="135:13" pos:end="135:13">*</operator><name pos:start="135:14" pos:end="135:17">list</name> <operator pos:start="135:19" pos:end="135:19">=</operator> <call pos:start="135:21" pos:end="135:41"><name pos:start="135:21" pos:end="135:26">g_new0</name><argument_list pos:start="135:27" pos:end="135:41">(<argument pos:start="135:28" pos:end="135:37"><expr pos:start="135:28" pos:end="135:37"><name pos:start="135:28" pos:end="135:37">uint16List</name></expr></argument>, <argument pos:start="135:40" pos:end="135:40"><expr pos:start="135:40" pos:end="135:40"><literal type="number" pos:start="135:40" pos:end="135:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:31"><expr pos:start="137:13" pos:end="137:30"><name pos:start="137:13" pos:end="137:26"><operator pos:start="137:13" pos:end="137:13">(</operator><operator pos:start="137:14" pos:end="137:14">*</operator><name pos:start="137:15" pos:end="137:18">list</name><operator pos:start="137:19" pos:end="137:19">)</operator><operator pos:start="137:20" pos:end="137:21">-&gt;</operator><name pos:start="137:22" pos:end="137:26">value</name></name> <operator pos:start="137:28" pos:end="137:28">=</operator> <name pos:start="137:30" pos:end="137:30">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:33"><expr pos:start="139:13" pos:end="139:32"><name pos:start="139:13" pos:end="139:25"><operator pos:start="139:13" pos:end="139:13">(</operator><operator pos:start="139:14" pos:end="139:14">*</operator><name pos:start="139:15" pos:end="139:18">list</name><operator pos:start="139:19" pos:end="139:19">)</operator><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:25">next</name></name> <operator pos:start="139:27" pos:end="139:27">=</operator> <name pos:start="139:29" pos:end="139:32">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:34"><expr pos:start="141:13" pos:end="141:33"><name pos:start="141:13" pos:end="141:16">list</name> <operator pos:start="141:18" pos:end="141:18">=</operator> <operator pos:start="141:20" pos:end="141:20">&amp;</operator><name pos:start="141:21" pos:end="141:33"><operator pos:start="141:21" pos:end="141:21">(</operator><operator pos:start="141:22" pos:end="141:22">*</operator><name pos:start="141:23" pos:end="141:26">list</name><operator pos:start="141:27" pos:end="141:27">)</operator><operator pos:start="141:28" pos:end="141:29">-&gt;</operator><name pos:start="141:30" pos:end="141:33">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="145:9" pos:end="145:14">break;</break>

    </block_content>}</block>

    <case pos:start="149:5" pos:end="149:45">case <expr pos:start="149:10" pos:end="149:44"><name pos:start="149:10" pos:end="149:44">USER_DEF_NATIVE_LIST_UNION_KIND_U32</name></expr>:</case> <block pos:start="149:47" pos:end="167:5">{<block_content pos:start="151:9" pos:end="165:14">

        <decl_stmt pos:start="151:9" pos:end="151:48"><decl pos:start="151:9" pos:end="151:47"><type pos:start="151:9" pos:end="151:21"><name pos:start="151:9" pos:end="151:18">uint32List</name> <modifier pos:start="151:20" pos:end="151:20">*</modifier><modifier pos:start="151:21" pos:end="151:21">*</modifier></type><name pos:start="151:22" pos:end="151:25">list</name> <init pos:start="151:27" pos:end="151:47">= <expr pos:start="151:29" pos:end="151:47"><operator pos:start="151:29" pos:end="151:29">&amp;</operator><name pos:start="151:30" pos:end="151:47"><name pos:start="151:30" pos:end="151:35">cvalue</name><operator pos:start="151:36" pos:end="151:37">-&gt;</operator><name pos:start="151:38" pos:end="151:38">u</name><operator pos:start="151:39" pos:end="151:39">.</operator><name pos:start="151:40" pos:end="151:42">u32</name><operator pos:start="151:43" pos:end="151:43">.</operator><name pos:start="151:44" pos:end="151:47">data</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="153:9" pos:end="163:9">for <control pos:start="153:13" pos:end="153:32">(<init pos:start="153:14" pos:end="153:19"><expr pos:start="153:14" pos:end="153:18"><name pos:start="153:14" pos:end="153:14">i</name> <operator pos:start="153:16" pos:end="153:16">=</operator> <literal type="number" pos:start="153:18" pos:end="153:18">0</literal></expr>;</init> <condition pos:start="153:21" pos:end="153:27"><expr pos:start="153:21" pos:end="153:26"><name pos:start="153:21" pos:end="153:21">i</name> <operator pos:start="153:23" pos:end="153:23">&lt;</operator> <literal type="number" pos:start="153:25" pos:end="153:26">32</literal></expr>;</condition> <incr pos:start="153:29" pos:end="153:31"><expr pos:start="153:29" pos:end="153:31"><name pos:start="153:29" pos:end="153:29">i</name><operator pos:start="153:30" pos:end="153:31">++</operator></expr></incr>)</control> <block pos:start="153:34" pos:end="163:9">{<block_content pos:start="155:13" pos:end="161:34">

            <expr_stmt pos:start="155:13" pos:end="155:42"><expr pos:start="155:13" pos:end="155:41"><operator pos:start="155:13" pos:end="155:13">*</operator><name pos:start="155:14" pos:end="155:17">list</name> <operator pos:start="155:19" pos:end="155:19">=</operator> <call pos:start="155:21" pos:end="155:41"><name pos:start="155:21" pos:end="155:26">g_new0</name><argument_list pos:start="155:27" pos:end="155:41">(<argument pos:start="155:28" pos:end="155:37"><expr pos:start="155:28" pos:end="155:37"><name pos:start="155:28" pos:end="155:37">uint32List</name></expr></argument>, <argument pos:start="155:40" pos:end="155:40"><expr pos:start="155:40" pos:end="155:40"><literal type="number" pos:start="155:40" pos:end="155:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:31"><expr pos:start="157:13" pos:end="157:30"><name pos:start="157:13" pos:end="157:26"><operator pos:start="157:13" pos:end="157:13">(</operator><operator pos:start="157:14" pos:end="157:14">*</operator><name pos:start="157:15" pos:end="157:18">list</name><operator pos:start="157:19" pos:end="157:19">)</operator><operator pos:start="157:20" pos:end="157:21">-&gt;</operator><name pos:start="157:22" pos:end="157:26">value</name></name> <operator pos:start="157:28" pos:end="157:28">=</operator> <name pos:start="157:30" pos:end="157:30">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:33"><expr pos:start="159:13" pos:end="159:32"><name pos:start="159:13" pos:end="159:25"><operator pos:start="159:13" pos:end="159:13">(</operator><operator pos:start="159:14" pos:end="159:14">*</operator><name pos:start="159:15" pos:end="159:18">list</name><operator pos:start="159:19" pos:end="159:19">)</operator><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:25">next</name></name> <operator pos:start="159:27" pos:end="159:27">=</operator> <name pos:start="159:29" pos:end="159:32">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:34"><expr pos:start="161:13" pos:end="161:33"><name pos:start="161:13" pos:end="161:16">list</name> <operator pos:start="161:18" pos:end="161:18">=</operator> <operator pos:start="161:20" pos:end="161:20">&amp;</operator><name pos:start="161:21" pos:end="161:33"><operator pos:start="161:21" pos:end="161:21">(</operator><operator pos:start="161:22" pos:end="161:22">*</operator><name pos:start="161:23" pos:end="161:26">list</name><operator pos:start="161:27" pos:end="161:27">)</operator><operator pos:start="161:28" pos:end="161:29">-&gt;</operator><name pos:start="161:30" pos:end="161:33">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    </block_content>}</block>

    <case pos:start="169:5" pos:end="169:45">case <expr pos:start="169:10" pos:end="169:44"><name pos:start="169:10" pos:end="169:44">USER_DEF_NATIVE_LIST_UNION_KIND_U64</name></expr>:</case> <block pos:start="169:47" pos:end="187:5">{<block_content pos:start="171:9" pos:end="185:14">

        <decl_stmt pos:start="171:9" pos:end="171:48"><decl pos:start="171:9" pos:end="171:47"><type pos:start="171:9" pos:end="171:21"><name pos:start="171:9" pos:end="171:18">uint64List</name> <modifier pos:start="171:20" pos:end="171:20">*</modifier><modifier pos:start="171:21" pos:end="171:21">*</modifier></type><name pos:start="171:22" pos:end="171:25">list</name> <init pos:start="171:27" pos:end="171:47">= <expr pos:start="171:29" pos:end="171:47"><operator pos:start="171:29" pos:end="171:29">&amp;</operator><name pos:start="171:30" pos:end="171:47"><name pos:start="171:30" pos:end="171:35">cvalue</name><operator pos:start="171:36" pos:end="171:37">-&gt;</operator><name pos:start="171:38" pos:end="171:38">u</name><operator pos:start="171:39" pos:end="171:39">.</operator><name pos:start="171:40" pos:end="171:42">u64</name><operator pos:start="171:43" pos:end="171:43">.</operator><name pos:start="171:44" pos:end="171:47">data</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="173:9" pos:end="183:9">for <control pos:start="173:13" pos:end="173:32">(<init pos:start="173:14" pos:end="173:19"><expr pos:start="173:14" pos:end="173:18"><name pos:start="173:14" pos:end="173:14">i</name> <operator pos:start="173:16" pos:end="173:16">=</operator> <literal type="number" pos:start="173:18" pos:end="173:18">0</literal></expr>;</init> <condition pos:start="173:21" pos:end="173:27"><expr pos:start="173:21" pos:end="173:26"><name pos:start="173:21" pos:end="173:21">i</name> <operator pos:start="173:23" pos:end="173:23">&lt;</operator> <literal type="number" pos:start="173:25" pos:end="173:26">32</literal></expr>;</condition> <incr pos:start="173:29" pos:end="173:31"><expr pos:start="173:29" pos:end="173:31"><name pos:start="173:29" pos:end="173:29">i</name><operator pos:start="173:30" pos:end="173:31">++</operator></expr></incr>)</control> <block pos:start="173:34" pos:end="183:9">{<block_content pos:start="175:13" pos:end="181:34">

            <expr_stmt pos:start="175:13" pos:end="175:42"><expr pos:start="175:13" pos:end="175:41"><operator pos:start="175:13" pos:end="175:13">*</operator><name pos:start="175:14" pos:end="175:17">list</name> <operator pos:start="175:19" pos:end="175:19">=</operator> <call pos:start="175:21" pos:end="175:41"><name pos:start="175:21" pos:end="175:26">g_new0</name><argument_list pos:start="175:27" pos:end="175:41">(<argument pos:start="175:28" pos:end="175:37"><expr pos:start="175:28" pos:end="175:37"><name pos:start="175:28" pos:end="175:37">uint64List</name></expr></argument>, <argument pos:start="175:40" pos:end="175:40"><expr pos:start="175:40" pos:end="175:40"><literal type="number" pos:start="175:40" pos:end="175:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:31"><expr pos:start="177:13" pos:end="177:30"><name pos:start="177:13" pos:end="177:26"><operator pos:start="177:13" pos:end="177:13">(</operator><operator pos:start="177:14" pos:end="177:14">*</operator><name pos:start="177:15" pos:end="177:18">list</name><operator pos:start="177:19" pos:end="177:19">)</operator><operator pos:start="177:20" pos:end="177:21">-&gt;</operator><name pos:start="177:22" pos:end="177:26">value</name></name> <operator pos:start="177:28" pos:end="177:28">=</operator> <name pos:start="177:30" pos:end="177:30">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:33"><expr pos:start="179:13" pos:end="179:32"><name pos:start="179:13" pos:end="179:25"><operator pos:start="179:13" pos:end="179:13">(</operator><operator pos:start="179:14" pos:end="179:14">*</operator><name pos:start="179:15" pos:end="179:18">list</name><operator pos:start="179:19" pos:end="179:19">)</operator><operator pos:start="179:20" pos:end="179:21">-&gt;</operator><name pos:start="179:22" pos:end="179:25">next</name></name> <operator pos:start="179:27" pos:end="179:27">=</operator> <name pos:start="179:29" pos:end="179:32">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:34"><expr pos:start="181:13" pos:end="181:33"><name pos:start="181:13" pos:end="181:16">list</name> <operator pos:start="181:18" pos:end="181:18">=</operator> <operator pos:start="181:20" pos:end="181:20">&amp;</operator><name pos:start="181:21" pos:end="181:33"><operator pos:start="181:21" pos:end="181:21">(</operator><operator pos:start="181:22" pos:end="181:22">*</operator><name pos:start="181:23" pos:end="181:26">list</name><operator pos:start="181:27" pos:end="181:27">)</operator><operator pos:start="181:28" pos:end="181:29">-&gt;</operator><name pos:start="181:30" pos:end="181:33">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="185:9" pos:end="185:14">break;</break>

    </block_content>}</block>

    <case pos:start="189:5" pos:end="189:49">case <expr pos:start="189:10" pos:end="189:48"><name pos:start="189:10" pos:end="189:48">USER_DEF_NATIVE_LIST_UNION_KIND_BOOLEAN</name></expr>:</case> <block pos:start="189:51" pos:end="207:5">{<block_content pos:start="191:9" pos:end="205:14">

        <decl_stmt pos:start="191:9" pos:end="191:50"><decl pos:start="191:9" pos:end="191:49"><type pos:start="191:9" pos:end="191:19"><name pos:start="191:9" pos:end="191:16">boolList</name> <modifier pos:start="191:18" pos:end="191:18">*</modifier><modifier pos:start="191:19" pos:end="191:19">*</modifier></type><name pos:start="191:20" pos:end="191:23">list</name> <init pos:start="191:25" pos:end="191:49">= <expr pos:start="191:27" pos:end="191:49"><operator pos:start="191:27" pos:end="191:27">&amp;</operator><name pos:start="191:28" pos:end="191:49"><name pos:start="191:28" pos:end="191:33">cvalue</name><operator pos:start="191:34" pos:end="191:35">-&gt;</operator><name pos:start="191:36" pos:end="191:36">u</name><operator pos:start="191:37" pos:end="191:37">.</operator><name pos:start="191:38" pos:end="191:44">boolean</name><operator pos:start="191:45" pos:end="191:45">.</operator><name pos:start="191:46" pos:end="191:49">data</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="193:9" pos:end="203:9">for <control pos:start="193:13" pos:end="193:32">(<init pos:start="193:14" pos:end="193:19"><expr pos:start="193:14" pos:end="193:18"><name pos:start="193:14" pos:end="193:14">i</name> <operator pos:start="193:16" pos:end="193:16">=</operator> <literal type="number" pos:start="193:18" pos:end="193:18">0</literal></expr>;</init> <condition pos:start="193:21" pos:end="193:27"><expr pos:start="193:21" pos:end="193:26"><name pos:start="193:21" pos:end="193:21">i</name> <operator pos:start="193:23" pos:end="193:23">&lt;</operator> <literal type="number" pos:start="193:25" pos:end="193:26">32</literal></expr>;</condition> <incr pos:start="193:29" pos:end="193:31"><expr pos:start="193:29" pos:end="193:31"><name pos:start="193:29" pos:end="193:29">i</name><operator pos:start="193:30" pos:end="193:31">++</operator></expr></incr>)</control> <block pos:start="193:34" pos:end="203:9">{<block_content pos:start="195:13" pos:end="201:34">

            <expr_stmt pos:start="195:13" pos:end="195:40"><expr pos:start="195:13" pos:end="195:39"><operator pos:start="195:13" pos:end="195:13">*</operator><name pos:start="195:14" pos:end="195:17">list</name> <operator pos:start="195:19" pos:end="195:19">=</operator> <call pos:start="195:21" pos:end="195:39"><name pos:start="195:21" pos:end="195:26">g_new0</name><argument_list pos:start="195:27" pos:end="195:39">(<argument pos:start="195:28" pos:end="195:35"><expr pos:start="195:28" pos:end="195:35"><name pos:start="195:28" pos:end="195:35">boolList</name></expr></argument>, <argument pos:start="195:38" pos:end="195:38"><expr pos:start="195:38" pos:end="195:38"><literal type="number" pos:start="195:38" pos:end="195:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:42"><expr pos:start="197:13" pos:end="197:41"><name pos:start="197:13" pos:end="197:26"><operator pos:start="197:13" pos:end="197:13">(</operator><operator pos:start="197:14" pos:end="197:14">*</operator><name pos:start="197:15" pos:end="197:18">list</name><operator pos:start="197:19" pos:end="197:19">)</operator><operator pos:start="197:20" pos:end="197:21">-&gt;</operator><name pos:start="197:22" pos:end="197:26">value</name></name> <operator pos:start="197:28" pos:end="197:28">=</operator> <operator pos:start="197:30" pos:end="197:30">(</operator><name pos:start="197:31" pos:end="197:31">i</name> <operator pos:start="197:33" pos:end="197:33">%</operator> <literal type="number" pos:start="197:35" pos:end="197:35">3</literal> <operator pos:start="197:37" pos:end="197:38">==</operator> <literal type="number" pos:start="197:40" pos:end="197:40">0</literal><operator pos:start="197:41" pos:end="197:41">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:33"><expr pos:start="199:13" pos:end="199:32"><name pos:start="199:13" pos:end="199:25"><operator pos:start="199:13" pos:end="199:13">(</operator><operator pos:start="199:14" pos:end="199:14">*</operator><name pos:start="199:15" pos:end="199:18">list</name><operator pos:start="199:19" pos:end="199:19">)</operator><operator pos:start="199:20" pos:end="199:21">-&gt;</operator><name pos:start="199:22" pos:end="199:25">next</name></name> <operator pos:start="199:27" pos:end="199:27">=</operator> <name pos:start="199:29" pos:end="199:32">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:34"><expr pos:start="201:13" pos:end="201:33"><name pos:start="201:13" pos:end="201:16">list</name> <operator pos:start="201:18" pos:end="201:18">=</operator> <operator pos:start="201:20" pos:end="201:20">&amp;</operator><name pos:start="201:21" pos:end="201:33"><operator pos:start="201:21" pos:end="201:21">(</operator><operator pos:start="201:22" pos:end="201:22">*</operator><name pos:start="201:23" pos:end="201:26">list</name><operator pos:start="201:27" pos:end="201:27">)</operator><operator pos:start="201:28" pos:end="201:29">-&gt;</operator><name pos:start="201:30" pos:end="201:33">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="205:9" pos:end="205:14">break;</break>

    </block_content>}</block>

    <case pos:start="209:5" pos:end="209:48">case <expr pos:start="209:10" pos:end="209:47"><name pos:start="209:10" pos:end="209:47">USER_DEF_NATIVE_LIST_UNION_KIND_STRING</name></expr>:</case> <block pos:start="209:50" pos:end="227:5">{<block_content pos:start="211:9" pos:end="225:14">

        <decl_stmt pos:start="211:9" pos:end="211:48"><decl pos:start="211:9" pos:end="211:47"><type pos:start="211:9" pos:end="211:18"><name pos:start="211:9" pos:end="211:15">strList</name> <modifier pos:start="211:17" pos:end="211:17">*</modifier><modifier pos:start="211:18" pos:end="211:18">*</modifier></type><name pos:start="211:19" pos:end="211:22">list</name> <init pos:start="211:24" pos:end="211:47">= <expr pos:start="211:26" pos:end="211:47"><operator pos:start="211:26" pos:end="211:26">&amp;</operator><name pos:start="211:27" pos:end="211:47"><name pos:start="211:27" pos:end="211:32">cvalue</name><operator pos:start="211:33" pos:end="211:34">-&gt;</operator><name pos:start="211:35" pos:end="211:35">u</name><operator pos:start="211:36" pos:end="211:36">.</operator><name pos:start="211:37" pos:end="211:42">string</name><operator pos:start="211:43" pos:end="211:43">.</operator><name pos:start="211:44" pos:end="211:47">data</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="213:9" pos:end="223:9">for <control pos:start="213:13" pos:end="213:32">(<init pos:start="213:14" pos:end="213:19"><expr pos:start="213:14" pos:end="213:18"><name pos:start="213:14" pos:end="213:14">i</name> <operator pos:start="213:16" pos:end="213:16">=</operator> <literal type="number" pos:start="213:18" pos:end="213:18">0</literal></expr>;</init> <condition pos:start="213:21" pos:end="213:27"><expr pos:start="213:21" pos:end="213:26"><name pos:start="213:21" pos:end="213:21">i</name> <operator pos:start="213:23" pos:end="213:23">&lt;</operator> <literal type="number" pos:start="213:25" pos:end="213:26">32</literal></expr>;</condition> <incr pos:start="213:29" pos:end="213:31"><expr pos:start="213:29" pos:end="213:31"><name pos:start="213:29" pos:end="213:29">i</name><operator pos:start="213:30" pos:end="213:31">++</operator></expr></incr>)</control> <block pos:start="213:34" pos:end="223:9">{<block_content pos:start="215:13" pos:end="221:34">

            <expr_stmt pos:start="215:13" pos:end="215:39"><expr pos:start="215:13" pos:end="215:38"><operator pos:start="215:13" pos:end="215:13">*</operator><name pos:start="215:14" pos:end="215:17">list</name> <operator pos:start="215:19" pos:end="215:19">=</operator> <call pos:start="215:21" pos:end="215:38"><name pos:start="215:21" pos:end="215:26">g_new0</name><argument_list pos:start="215:27" pos:end="215:38">(<argument pos:start="215:28" pos:end="215:34"><expr pos:start="215:28" pos:end="215:34"><name pos:start="215:28" pos:end="215:34">strList</name></expr></argument>, <argument pos:start="215:37" pos:end="215:37"><expr pos:start="215:37" pos:end="215:37"><literal type="number" pos:start="215:37" pos:end="215:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:54"><expr pos:start="217:13" pos:end="217:53"><name pos:start="217:13" pos:end="217:26"><operator pos:start="217:13" pos:end="217:13">(</operator><operator pos:start="217:14" pos:end="217:14">*</operator><name pos:start="217:15" pos:end="217:18">list</name><operator pos:start="217:19" pos:end="217:19">)</operator><operator pos:start="217:20" pos:end="217:21">-&gt;</operator><name pos:start="217:22" pos:end="217:26">value</name></name> <operator pos:start="217:28" pos:end="217:28">=</operator> <call pos:start="217:30" pos:end="217:53"><name pos:start="217:30" pos:end="217:44">g_strdup_printf</name><argument_list pos:start="217:45" pos:end="217:53">(<argument pos:start="217:46" pos:end="217:49"><expr pos:start="217:46" pos:end="217:49"><literal type="string" pos:start="217:46" pos:end="217:49">"%d"</literal></expr></argument>, <argument pos:start="217:52" pos:end="217:52"><expr pos:start="217:52" pos:end="217:52"><name pos:start="217:52" pos:end="217:52">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:33"><expr pos:start="219:13" pos:end="219:32"><name pos:start="219:13" pos:end="219:25"><operator pos:start="219:13" pos:end="219:13">(</operator><operator pos:start="219:14" pos:end="219:14">*</operator><name pos:start="219:15" pos:end="219:18">list</name><operator pos:start="219:19" pos:end="219:19">)</operator><operator pos:start="219:20" pos:end="219:21">-&gt;</operator><name pos:start="219:22" pos:end="219:25">next</name></name> <operator pos:start="219:27" pos:end="219:27">=</operator> <name pos:start="219:29" pos:end="219:32">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:34"><expr pos:start="221:13" pos:end="221:33"><name pos:start="221:13" pos:end="221:16">list</name> <operator pos:start="221:18" pos:end="221:18">=</operator> <operator pos:start="221:20" pos:end="221:20">&amp;</operator><name pos:start="221:21" pos:end="221:33"><operator pos:start="221:21" pos:end="221:21">(</operator><operator pos:start="221:22" pos:end="221:22">*</operator><name pos:start="221:23" pos:end="221:26">list</name><operator pos:start="221:27" pos:end="221:27">)</operator><operator pos:start="221:28" pos:end="221:29">-&gt;</operator><name pos:start="221:30" pos:end="221:33">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="225:9" pos:end="225:14">break;</break>

    </block_content>}</block>

    <case pos:start="229:5" pos:end="229:48">case <expr pos:start="229:10" pos:end="229:47"><name pos:start="229:10" pos:end="229:47">USER_DEF_NATIVE_LIST_UNION_KIND_NUMBER</name></expr>:</case> <block pos:start="229:50" pos:end="247:5">{<block_content pos:start="231:9" pos:end="245:14">

        <decl_stmt pos:start="231:9" pos:end="231:51"><decl pos:start="231:9" pos:end="231:50"><type pos:start="231:9" pos:end="231:21"><name pos:start="231:9" pos:end="231:18">numberList</name> <modifier pos:start="231:20" pos:end="231:20">*</modifier><modifier pos:start="231:21" pos:end="231:21">*</modifier></type><name pos:start="231:22" pos:end="231:25">list</name> <init pos:start="231:27" pos:end="231:50">= <expr pos:start="231:29" pos:end="231:50"><operator pos:start="231:29" pos:end="231:29">&amp;</operator><name pos:start="231:30" pos:end="231:50"><name pos:start="231:30" pos:end="231:35">cvalue</name><operator pos:start="231:36" pos:end="231:37">-&gt;</operator><name pos:start="231:38" pos:end="231:38">u</name><operator pos:start="231:39" pos:end="231:39">.</operator><name pos:start="231:40" pos:end="231:45">number</name><operator pos:start="231:46" pos:end="231:46">.</operator><name pos:start="231:47" pos:end="231:50">data</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="233:9" pos:end="243:9">for <control pos:start="233:13" pos:end="233:32">(<init pos:start="233:14" pos:end="233:19"><expr pos:start="233:14" pos:end="233:18"><name pos:start="233:14" pos:end="233:14">i</name> <operator pos:start="233:16" pos:end="233:16">=</operator> <literal type="number" pos:start="233:18" pos:end="233:18">0</literal></expr>;</init> <condition pos:start="233:21" pos:end="233:27"><expr pos:start="233:21" pos:end="233:26"><name pos:start="233:21" pos:end="233:21">i</name> <operator pos:start="233:23" pos:end="233:23">&lt;</operator> <literal type="number" pos:start="233:25" pos:end="233:26">32</literal></expr>;</condition> <incr pos:start="233:29" pos:end="233:31"><expr pos:start="233:29" pos:end="233:31"><name pos:start="233:29" pos:end="233:29">i</name><operator pos:start="233:30" pos:end="233:31">++</operator></expr></incr>)</control> <block pos:start="233:34" pos:end="243:9">{<block_content pos:start="235:13" pos:end="241:34">

            <expr_stmt pos:start="235:13" pos:end="235:42"><expr pos:start="235:13" pos:end="235:41"><operator pos:start="235:13" pos:end="235:13">*</operator><name pos:start="235:14" pos:end="235:17">list</name> <operator pos:start="235:19" pos:end="235:19">=</operator> <call pos:start="235:21" pos:end="235:41"><name pos:start="235:21" pos:end="235:26">g_new0</name><argument_list pos:start="235:27" pos:end="235:41">(<argument pos:start="235:28" pos:end="235:37"><expr pos:start="235:28" pos:end="235:37"><name pos:start="235:28" pos:end="235:37">numberList</name></expr></argument>, <argument pos:start="235:40" pos:end="235:40"><expr pos:start="235:40" pos:end="235:40"><literal type="number" pos:start="235:40" pos:end="235:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:43"><expr pos:start="237:13" pos:end="237:42"><name pos:start="237:13" pos:end="237:26"><operator pos:start="237:13" pos:end="237:13">(</operator><operator pos:start="237:14" pos:end="237:14">*</operator><name pos:start="237:15" pos:end="237:18">list</name><operator pos:start="237:19" pos:end="237:19">)</operator><operator pos:start="237:20" pos:end="237:21">-&gt;</operator><name pos:start="237:22" pos:end="237:26">value</name></name> <operator pos:start="237:28" pos:end="237:28">=</operator> <operator pos:start="237:30" pos:end="237:30">(</operator><name pos:start="237:31" pos:end="237:36">double</name><operator pos:start="237:37" pos:end="237:37">)</operator><name pos:start="237:38" pos:end="237:38">i</name> <operator pos:start="237:40" pos:end="237:40">/</operator> <literal type="number" pos:start="237:42" pos:end="237:42">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:33"><expr pos:start="239:13" pos:end="239:32"><name pos:start="239:13" pos:end="239:25"><operator pos:start="239:13" pos:end="239:13">(</operator><operator pos:start="239:14" pos:end="239:14">*</operator><name pos:start="239:15" pos:end="239:18">list</name><operator pos:start="239:19" pos:end="239:19">)</operator><operator pos:start="239:20" pos:end="239:21">-&gt;</operator><name pos:start="239:22" pos:end="239:25">next</name></name> <operator pos:start="239:27" pos:end="239:27">=</operator> <name pos:start="239:29" pos:end="239:32">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:34"><expr pos:start="241:13" pos:end="241:33"><name pos:start="241:13" pos:end="241:16">list</name> <operator pos:start="241:18" pos:end="241:18">=</operator> <operator pos:start="241:20" pos:end="241:20">&amp;</operator><name pos:start="241:21" pos:end="241:33"><operator pos:start="241:21" pos:end="241:21">(</operator><operator pos:start="241:22" pos:end="241:22">*</operator><name pos:start="241:23" pos:end="241:26">list</name><operator pos:start="241:27" pos:end="241:27">)</operator><operator pos:start="241:28" pos:end="241:29">-&gt;</operator><name pos:start="241:30" pos:end="241:33">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="245:9" pos:end="245:14">break;</break>

    </block_content>}</block>

    <default pos:start="249:5" pos:end="249:12">default:</default>

        <expr_stmt pos:start="251:9" pos:end="251:31"><expr pos:start="251:9" pos:end="251:30"><call pos:start="251:9" pos:end="251:30"><name pos:start="251:9" pos:end="251:28">g_assert_not_reached</name><argument_list pos:start="251:29" pos:end="251:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
