<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4460.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:33">main_loop_should_exit</name><parameter_list pos:start="1:34" pos:end="1:39">(<parameter pos:start="1:35" pos:end="1:38"><decl pos:start="1:35" pos:end="1:38"><type pos:start="1:35" pos:end="1:38"><name pos:start="1:35" pos:end="1:38">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:17">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">RunState</name></type> <name pos:start="5:14" pos:end="5:14">r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">ShutdownCause</name></type> <name pos:start="7:19" pos:end="7:25">request</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:31">(<expr pos:start="11:9" pos:end="11:30"><call pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:28">qemu_debug_requested</name><argument_list pos:start="11:29" pos:end="11:30">()</argument_list></call></expr>)</condition> <block pos:start="11:33" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:33">

        <expr_stmt pos:start="13:9" pos:end="13:33"><expr pos:start="13:9" pos:end="13:32"><call pos:start="13:9" pos:end="13:32"><name pos:start="13:9" pos:end="13:15">vm_stop</name><argument_list pos:start="13:16" pos:end="13:32">(<argument pos:start="13:17" pos:end="13:31"><expr pos:start="13:17" pos:end="13:31"><name pos:start="13:17" pos:end="13:31">RUN_STATE_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:33">(<expr pos:start="17:9" pos:end="17:32"><call pos:start="17:9" pos:end="17:32"><name pos:start="17:9" pos:end="17:30">qemu_suspend_requested</name><argument_list pos:start="17:31" pos:end="17:32">()</argument_list></call></expr>)</condition> <block pos:start="17:35" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:30">

        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><call pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:27">qemu_system_suspend</name><argument_list pos:start="19:28" pos:end="19:29">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:11">request</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:39"><name pos:start="23:15" pos:end="23:37">qemu_shutdown_requested</name><argument_list pos:start="23:38" pos:end="23:39">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="43:5"><if pos:start="25:5" pos:end="43:5">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:15">request</name></expr>)</condition> <block pos:start="25:18" pos:end="43:5">{<block_content pos:start="27:9" pos:end="41:9">

        <expr_stmt pos:start="27:9" pos:end="27:27"><expr pos:start="27:9" pos:end="27:26"><call pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:24">qemu_kill_report</name><argument_list pos:start="27:25" pos:end="27:26">()</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="29:9" pos:end="29:48">/* TODO update event based on request */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><call pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:32">qapi_event_send_shutdown</name><argument_list pos:start="31:33" pos:end="31:46">(<argument pos:start="31:34" pos:end="31:45"><expr pos:start="31:34" pos:end="31:45"><operator pos:start="31:34" pos:end="31:34">&amp;</operator><name pos:start="31:35" pos:end="31:45">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="41:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:24">(<expr pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:23">no_shutdown</name></expr>)</condition> <block pos:start="33:26" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:40">

            <expr_stmt pos:start="35:13" pos:end="35:40"><expr pos:start="35:13" pos:end="35:39"><call pos:start="35:13" pos:end="35:39"><name pos:start="35:13" pos:end="35:19">vm_stop</name><argument_list pos:start="35:20" pos:end="35:39">(<argument pos:start="35:21" pos:end="35:38"><expr pos:start="35:21" pos:end="35:38"><name pos:start="35:21" pos:end="35:38">RUN_STATE_SHUTDOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="37:11" pos:end="41:9">else <block pos:start="37:16" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:24">

            <return pos:start="39:13" pos:end="39:24">return <expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:23">true</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><name pos:start="45:5" pos:end="45:11">request</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:36"><name pos:start="45:15" pos:end="45:34">qemu_reset_requested</name><argument_list pos:start="45:35" pos:end="45:36">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="63:5"><if pos:start="47:5" pos:end="63:5">if <condition pos:start="47:8" pos:end="47:16">(<expr pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:15">request</name></expr>)</condition> <block pos:start="47:18" pos:end="63:5">{<block_content pos:start="49:9" pos:end="61:9">

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><call pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:23">pause_all_vcpus</name><argument_list pos:start="49:24" pos:end="49:25">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:35"><expr pos:start="51:9" pos:end="51:34"><call pos:start="51:9" pos:end="51:34"><name pos:start="51:9" pos:end="51:25">qemu_system_reset</name><argument_list pos:start="51:26" pos:end="51:34">(<argument pos:start="51:27" pos:end="51:33"><expr pos:start="51:27" pos:end="51:33"><name pos:start="51:27" pos:end="51:33">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:27"><expr pos:start="53:9" pos:end="53:26"><call pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:24">resume_all_vcpus</name><argument_list pos:start="53:25" pos:end="53:26">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="61:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="57:53">(<expr pos:start="55:13" pos:end="57:52"><operator pos:start="55:13" pos:end="55:13">!</operator><call pos:start="55:14" pos:end="55:46"><name pos:start="55:14" pos:end="55:27">runstate_check</name><argument_list pos:start="55:28" pos:end="55:46">(<argument pos:start="55:29" pos:end="55:45"><expr pos:start="55:29" pos:end="55:45"><name pos:start="55:29" pos:end="55:45">RUN_STATE_RUNNING</name></expr></argument>)</argument_list></call> <operator pos:start="55:48" pos:end="55:49">&amp;&amp;</operator>

                <operator pos:start="57:17" pos:end="57:17">!</operator><call pos:start="57:18" pos:end="57:52"><name pos:start="57:18" pos:end="57:31">runstate_check</name><argument_list pos:start="57:32" pos:end="57:52">(<argument pos:start="57:33" pos:end="57:51"><expr pos:start="57:33" pos:end="57:51"><name pos:start="57:33" pos:end="57:51">RUN_STATE_INMIGRATE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:55" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:46">

            <expr_stmt pos:start="59:13" pos:end="59:46"><expr pos:start="59:13" pos:end="59:45"><call pos:start="59:13" pos:end="59:45"><name pos:start="59:13" pos:end="59:24">runstate_set</name><argument_list pos:start="59:25" pos:end="59:45">(<argument pos:start="59:26" pos:end="59:44"><expr pos:start="59:26" pos:end="59:44"><name pos:start="59:26" pos:end="59:44">RUN_STATE_PRELAUNCH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="79:5"><if pos:start="65:5" pos:end="79:5">if <condition pos:start="65:8" pos:end="65:32">(<expr pos:start="65:9" pos:end="65:31"><call pos:start="65:9" pos:end="65:31"><name pos:start="65:9" pos:end="65:29">qemu_wakeup_requested</name><argument_list pos:start="65:30" pos:end="65:31">()</argument_list></call></expr>)</condition> <block pos:start="65:34" pos:end="79:5">{<block_content pos:start="67:9" pos:end="77:45">

        <expr_stmt pos:start="67:9" pos:end="67:26"><expr pos:start="67:9" pos:end="67:25"><call pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:23">pause_all_vcpus</name><argument_list pos:start="67:24" pos:end="67:25">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:47"><expr pos:start="69:9" pos:end="69:46"><call pos:start="69:9" pos:end="69:46"><name pos:start="69:9" pos:end="69:25">qemu_system_reset</name><argument_list pos:start="69:26" pos:end="69:46">(<argument pos:start="69:27" pos:end="69:45"><expr pos:start="69:27" pos:end="69:45"><name pos:start="69:27" pos:end="69:45">SHUTDOWN_CAUSE_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:64"><expr pos:start="71:9" pos:end="71:63"><call pos:start="71:9" pos:end="71:63"><name pos:start="71:9" pos:end="71:28">notifier_list_notify</name><argument_list pos:start="71:29" pos:end="71:63">(<argument pos:start="71:30" pos:end="71:46"><expr pos:start="71:30" pos:end="71:46"><operator pos:start="71:30" pos:end="71:30">&amp;</operator><name pos:start="71:31" pos:end="71:46">wakeup_notifiers</name></expr></argument>, <argument pos:start="71:49" pos:end="71:62"><expr pos:start="71:49" pos:end="71:62"><operator pos:start="71:49" pos:end="71:49">&amp;</operator><name pos:start="71:50" pos:end="71:62">wakeup_reason</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:48"><expr pos:start="73:9" pos:end="73:47"><name pos:start="73:9" pos:end="73:21">wakeup_reason</name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:47">QEMU_WAKEUP_REASON_NONE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:27"><expr pos:start="75:9" pos:end="75:26"><call pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:24">resume_all_vcpus</name><argument_list pos:start="75:25" pos:end="75:26">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:45"><expr pos:start="77:9" pos:end="77:44"><call pos:start="77:9" pos:end="77:44"><name pos:start="77:9" pos:end="77:30">qapi_event_send_wakeup</name><argument_list pos:start="77:31" pos:end="77:44">(<argument pos:start="77:32" pos:end="77:43"><expr pos:start="77:32" pos:end="77:43"><operator pos:start="77:32" pos:end="77:32">&amp;</operator><name pos:start="77:33" pos:end="77:43">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="81:5" pos:end="85:5"><if pos:start="81:5" pos:end="85:5">if <condition pos:start="81:8" pos:end="81:35">(<expr pos:start="81:9" pos:end="81:34"><call pos:start="81:9" pos:end="81:34"><name pos:start="81:9" pos:end="81:32">qemu_powerdown_requested</name><argument_list pos:start="81:33" pos:end="81:34">()</argument_list></call></expr>)</condition> <block pos:start="81:37" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:32">

        <expr_stmt pos:start="83:9" pos:end="83:32"><expr pos:start="83:9" pos:end="83:31"><call pos:start="83:9" pos:end="83:31"><name pos:start="83:9" pos:end="83:29">qemu_system_powerdown</name><argument_list pos:start="83:30" pos:end="83:31">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="91:5"><if pos:start="87:5" pos:end="91:5">if <condition pos:start="87:8" pos:end="87:34">(<expr pos:start="87:9" pos:end="87:33"><call pos:start="87:9" pos:end="87:33"><name pos:start="87:9" pos:end="87:29">qemu_vmstop_requested</name><argument_list pos:start="87:30" pos:end="87:33">(<argument pos:start="87:31" pos:end="87:32"><expr pos:start="87:31" pos:end="87:32"><operator pos:start="87:31" pos:end="87:31">&amp;</operator><name pos:start="87:32" pos:end="87:32">r</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:36" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:19">

        <expr_stmt pos:start="89:9" pos:end="89:19"><expr pos:start="89:9" pos:end="89:18"><call pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:15">vm_stop</name><argument_list pos:start="89:16" pos:end="89:18">(<argument pos:start="89:17" pos:end="89:17"><expr pos:start="89:17" pos:end="89:17"><name pos:start="89:17" pos:end="89:17">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="93:5" pos:end="93:17">return <expr pos:start="93:12" pos:end="93:16"><name pos:start="93:12" pos:end="93:16">false</name></expr>;</return>

</block_content>}</block></function>
</unit>
