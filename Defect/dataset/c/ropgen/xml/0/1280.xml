<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1280.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">CCW1</name></type> <name pos:start="1:13" pos:end="1:31">copy_ccw_from_guest</name><parameter_list pos:start="1:32" pos:end="1:55">(<parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:38">hwaddr</name></type> <name pos:start="1:40" pos:end="1:43">addr</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:54"><decl pos:start="1:46" pos:end="1:54"><type pos:start="1:46" pos:end="1:54"><name pos:start="1:46" pos:end="1:49">bool</name></type> <name pos:start="1:51" pos:end="1:54">fmt1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:15">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">CCW0</name></type> <name pos:start="5:10" pos:end="5:13">tmp0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">CCW1</name></type> <name pos:start="7:10" pos:end="7:13">tmp1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">CCW1</name></type> <name pos:start="9:10" pos:end="9:12">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="43:5"><if pos:start="13:5" pos:end="25:5">if <condition pos:start="13:8" pos:end="13:13">(<expr pos:start="13:9" pos:end="13:12"><name pos:start="13:9" pos:end="13:12">fmt1</name></expr>)</condition> <block pos:start="13:15" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:40">

        <expr_stmt pos:start="15:9" pos:end="15:60"><expr pos:start="15:9" pos:end="15:59"><call pos:start="15:9" pos:end="15:59"><name pos:start="15:9" pos:end="15:32">cpu_physical_memory_read</name><argument_list pos:start="15:33" pos:end="15:59">(<argument pos:start="15:34" pos:end="15:37"><expr pos:start="15:34" pos:end="15:37"><name pos:start="15:34" pos:end="15:37">addr</name></expr></argument>, <argument pos:start="15:40" pos:end="15:44"><expr pos:start="15:40" pos:end="15:44"><operator pos:start="15:40" pos:end="15:40">&amp;</operator><name pos:start="15:41" pos:end="15:44">tmp1</name></expr></argument>, <argument pos:start="15:47" pos:end="15:58"><expr pos:start="15:47" pos:end="15:58"><sizeof pos:start="15:47" pos:end="15:58">sizeof<argument_list pos:start="15:53" pos:end="15:58">(<argument pos:start="15:54" pos:end="15:57"><expr pos:start="15:54" pos:end="15:57"><name pos:start="15:54" pos:end="15:57">tmp1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:37"><expr pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:11">ret</name><operator pos:start="17:12" pos:end="17:12">.</operator><name pos:start="17:13" pos:end="17:20">cmd_code</name></name> <operator pos:start="17:22" pos:end="17:22">=</operator> <name pos:start="17:24" pos:end="17:36"><name pos:start="17:24" pos:end="17:27">tmp1</name><operator pos:start="17:28" pos:end="17:28">.</operator><name pos:start="17:29" pos:end="17:36">cmd_code</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:31"><expr pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:11">ret</name><operator pos:start="19:12" pos:end="19:12">.</operator><name pos:start="19:13" pos:end="19:17">flags</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:30"><name pos:start="19:21" pos:end="19:24">tmp1</name><operator pos:start="19:25" pos:end="19:25">.</operator><name pos:start="19:26" pos:end="19:30">flags</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:44"><expr pos:start="21:9" pos:end="21:43"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:11">ret</name><operator pos:start="21:12" pos:end="21:12">.</operator><name pos:start="21:13" pos:end="21:17">count</name></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <call pos:start="21:21" pos:end="21:43"><name pos:start="21:21" pos:end="21:31">be16_to_cpu</name><argument_list pos:start="21:32" pos:end="21:43">(<argument pos:start="21:33" pos:end="21:42"><expr pos:start="21:33" pos:end="21:42"><name pos:start="21:33" pos:end="21:42"><name pos:start="21:33" pos:end="21:36">tmp1</name><operator pos:start="21:37" pos:end="21:37">.</operator><name pos:start="21:38" pos:end="21:42">count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">ret</name><operator pos:start="23:12" pos:end="23:12">.</operator><name pos:start="23:13" pos:end="23:15">cda</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:39"><name pos:start="23:19" pos:end="23:29">be32_to_cpu</name><argument_list pos:start="23:30" pos:end="23:39">(<argument pos:start="23:31" pos:end="23:38"><expr pos:start="23:31" pos:end="23:38"><name pos:start="23:31" pos:end="23:38"><name pos:start="23:31" pos:end="23:34">tmp1</name><operator pos:start="23:35" pos:end="23:35">.</operator><name pos:start="23:36" pos:end="23:38">cda</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="43:5">else <block pos:start="25:12" pos:end="43:5">{<block_content pos:start="27:9" pos:end="41:9">

        <expr_stmt pos:start="27:9" pos:end="27:60"><expr pos:start="27:9" pos:end="27:59"><call pos:start="27:9" pos:end="27:59"><name pos:start="27:9" pos:end="27:32">cpu_physical_memory_read</name><argument_list pos:start="27:33" pos:end="27:59">(<argument pos:start="27:34" pos:end="27:37"><expr pos:start="27:34" pos:end="27:37"><name pos:start="27:34" pos:end="27:37">addr</name></expr></argument>, <argument pos:start="27:40" pos:end="27:44"><expr pos:start="27:40" pos:end="27:44"><operator pos:start="27:40" pos:end="27:40">&amp;</operator><name pos:start="27:41" pos:end="27:44">tmp0</name></expr></argument>, <argument pos:start="27:47" pos:end="27:58"><expr pos:start="27:47" pos:end="27:58"><sizeof pos:start="27:47" pos:end="27:58">sizeof<argument_list pos:start="27:53" pos:end="27:58">(<argument pos:start="27:54" pos:end="27:57"><expr pos:start="27:54" pos:end="27:57"><name pos:start="27:54" pos:end="27:57">tmp0</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:37"><expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:11">ret</name><operator pos:start="29:12" pos:end="29:12">.</operator><name pos:start="29:13" pos:end="29:20">cmd_code</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:36"><name pos:start="29:24" pos:end="29:27">tmp0</name><operator pos:start="29:28" pos:end="29:28">.</operator><name pos:start="29:29" pos:end="29:36">cmd_code</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:31"><expr pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:11">ret</name><operator pos:start="31:12" pos:end="31:12">.</operator><name pos:start="31:13" pos:end="31:17">flags</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:30"><name pos:start="31:21" pos:end="31:24">tmp0</name><operator pos:start="31:25" pos:end="31:25">.</operator><name pos:start="31:26" pos:end="31:30">flags</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:11">ret</name><operator pos:start="33:12" pos:end="33:12">.</operator><name pos:start="33:13" pos:end="33:17">count</name></name> <operator pos:start="33:19" pos:end="33:19">=</operator> <call pos:start="33:21" pos:end="33:43"><name pos:start="33:21" pos:end="33:31">be16_to_cpu</name><argument_list pos:start="33:32" pos:end="33:43">(<argument pos:start="33:33" pos:end="33:42"><expr pos:start="33:33" pos:end="33:42"><name pos:start="33:33" pos:end="33:42"><name pos:start="33:33" pos:end="33:36">tmp0</name><operator pos:start="33:37" pos:end="33:37">.</operator><name pos:start="33:38" pos:end="33:42">count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:61"><expr pos:start="35:9" pos:end="35:60"><name pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:11">ret</name><operator pos:start="35:12" pos:end="35:12">.</operator><name pos:start="35:13" pos:end="35:15">cda</name></name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:40"><name pos:start="35:19" pos:end="35:29">be16_to_cpu</name><argument_list pos:start="35:30" pos:end="35:40">(<argument pos:start="35:31" pos:end="35:39"><expr pos:start="35:31" pos:end="35:39"><name pos:start="35:31" pos:end="35:39"><name pos:start="35:31" pos:end="35:34">tmp0</name><operator pos:start="35:35" pos:end="35:35">.</operator><name pos:start="35:36" pos:end="35:39">cda1</name></name></expr></argument>)</argument_list></call> <operator pos:start="35:42" pos:end="35:42">|</operator> <operator pos:start="35:44" pos:end="35:44">(</operator><name pos:start="35:45" pos:end="35:53"><name pos:start="35:45" pos:end="35:48">tmp0</name><operator pos:start="35:49" pos:end="35:49">.</operator><name pos:start="35:50" pos:end="35:53">cda0</name></name> <operator pos:start="35:55" pos:end="35:56">&lt;&lt;</operator> <literal type="number" pos:start="35:58" pos:end="35:59">16</literal><operator pos:start="35:60" pos:end="35:60">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:49">(<expr pos:start="37:13" pos:end="37:48"><operator pos:start="37:13" pos:end="37:13">(</operator><name pos:start="37:14" pos:end="37:25"><name pos:start="37:14" pos:end="37:16">ret</name><operator pos:start="37:17" pos:end="37:17">.</operator><name pos:start="37:18" pos:end="37:25">cmd_code</name></name> <operator pos:start="37:27" pos:end="37:27">&amp;</operator> <literal type="number" pos:start="37:29" pos:end="37:32">0x0f</literal><operator pos:start="37:33" pos:end="37:33">)</operator> <operator pos:start="37:35" pos:end="37:36">==</operator> <name pos:start="37:38" pos:end="37:48">CCW_CMD_TIC</name></expr>)</condition> <block pos:start="37:51" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:33">

            <expr_stmt pos:start="39:13" pos:end="39:33"><expr pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:15">ret</name><operator pos:start="39:16" pos:end="39:16">.</operator><name pos:start="39:17" pos:end="39:24">cmd_code</name></name> <operator pos:start="39:26" pos:end="39:27">&amp;=</operator> <literal type="number" pos:start="39:29" pos:end="39:32">0x0f</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="45:5" pos:end="45:15">return <expr pos:start="45:12" pos:end="45:14"><name pos:start="45:12" pos:end="45:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
