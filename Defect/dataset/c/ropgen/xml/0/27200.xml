<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27200.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">flac_encode_frame</name><parameter_list pos:start="1:29" pos:end="3:71">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avpkt</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:49"><decl pos:start="3:30" pos:end="3:49"><type pos:start="3:30" pos:end="3:49"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">AVFrame</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:49">frame</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:70"><decl pos:start="3:52" pos:end="3:70"><type pos:start="3:52" pos:end="3:70"><name pos:start="3:52" pos:end="3:54">int</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:70">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="131:1">{<block_content pos:start="7:5" pos:end="129:13">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">FlacEncodeContext</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">frame_bytes</name></decl>, <decl pos:start="9:22" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:30">out_bytes</name></decl>, <decl pos:start="9:33" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:35">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:5">s</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <name pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:13">avctx</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:24">priv_data</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:72">/* when the last block is reached, update the header in extradata */</comment>

    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:15">(<expr pos:start="19:9" pos:end="19:14"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:14">frame</name></expr>)</condition> <block pos:start="19:17" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:17">

        <expr_stmt pos:start="21:9" pos:end="21:52"><expr pos:start="21:9" pos:end="21:51"><name pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:24">max_framesize</name></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <name pos:start="21:28" pos:end="21:51"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:51">max_encoded_framesize</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:43"><expr pos:start="23:9" pos:end="23:42"><call pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:20">av_md5_final</name><argument_list pos:start="23:21" pos:end="23:42">(<argument pos:start="23:22" pos:end="23:30"><expr pos:start="23:22" pos:end="23:30"><name pos:start="23:22" pos:end="23:30"><name pos:start="23:22" pos:end="23:22">s</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:30">md5ctx</name></name></expr></argument>, <argument pos:start="23:33" pos:end="23:41"><expr pos:start="23:33" pos:end="23:41"><name pos:start="23:33" pos:end="23:41"><name pos:start="23:33" pos:end="23:33">s</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:41">md5sum</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:46"><expr pos:start="25:9" pos:end="25:45"><call pos:start="25:9" pos:end="25:45"><name pos:start="25:9" pos:end="25:24">write_streaminfo</name><argument_list pos:start="25:25" pos:end="25:45">(<argument pos:start="25:26" pos:end="25:26"><expr pos:start="25:26" pos:end="25:26"><name pos:start="25:26" pos:end="25:26">s</name></expr></argument>, <argument pos:start="25:29" pos:end="25:44"><expr pos:start="25:29" pos:end="25:44"><name pos:start="25:29" pos:end="25:44"><name pos:start="25:29" pos:end="25:33">avctx</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:44">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:52">/* change max_framesize for small final frame */</comment>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:47">(<expr pos:start="35:9" pos:end="35:46"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:13">frame</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:25">nb_samples</name></name> <operator pos:start="35:27" pos:end="35:27">&lt;</operator> <name pos:start="35:29" pos:end="35:46"><name pos:start="35:29" pos:end="35:29">s</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:36">frame</name><operator pos:start="35:37" pos:end="35:37">.</operator><name pos:start="35:38" pos:end="35:46">blocksize</name></name></expr>)</condition> <block pos:start="35:49" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:82">

        <expr_stmt pos:start="37:9" pos:end="41:82"><expr pos:start="37:9" pos:end="41:81"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:24">max_framesize</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <call pos:start="37:28" pos:end="41:81"><name pos:start="37:28" pos:end="37:53">ff_flac_get_max_frame_size</name><argument_list pos:start="37:54" pos:end="41:81">(<argument pos:start="37:55" pos:end="37:71"><expr pos:start="37:55" pos:end="37:71"><name pos:start="37:55" pos:end="37:71"><name pos:start="37:55" pos:end="37:59">frame</name><operator pos:start="37:60" pos:end="37:61">-&gt;</operator><name pos:start="37:62" pos:end="37:71">nb_samples</name></name></expr></argument>,

                                                      <argument pos:start="39:55" pos:end="39:65"><expr pos:start="39:55" pos:end="39:65"><name pos:start="39:55" pos:end="39:65"><name pos:start="39:55" pos:end="39:55">s</name><operator pos:start="39:56" pos:end="39:57">-&gt;</operator><name pos:start="39:58" pos:end="39:65">channels</name></name></expr></argument>,

                                                      <argument pos:start="41:55" pos:end="41:80"><expr pos:start="41:55" pos:end="41:80"><name pos:start="41:55" pos:end="41:80"><name pos:start="41:55" pos:end="41:59">avctx</name><operator pos:start="41:60" pos:end="41:61">-&gt;</operator><name pos:start="41:62" pos:end="41:80">bits_per_raw_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:37"><expr pos:start="47:5" pos:end="47:36"><call pos:start="47:5" pos:end="47:36"><name pos:start="47:5" pos:end="47:14">init_frame</name><argument_list pos:start="47:15" pos:end="47:36">(<argument pos:start="47:16" pos:end="47:16"><expr pos:start="47:16" pos:end="47:16"><name pos:start="47:16" pos:end="47:16">s</name></expr></argument>, <argument pos:start="47:19" pos:end="47:35"><expr pos:start="47:19" pos:end="47:35"><name pos:start="47:19" pos:end="47:35"><name pos:start="47:19" pos:end="47:23">frame</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:35">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><call pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:16">copy_samples</name><argument_list pos:start="51:17" pos:end="51:35">(<argument pos:start="51:18" pos:end="51:18"><expr pos:start="51:18" pos:end="51:18"><name pos:start="51:18" pos:end="51:18">s</name></expr></argument>, <argument pos:start="51:21" pos:end="51:34"><expr pos:start="51:21" pos:end="51:34"><name pos:start="51:21" pos:end="51:34"><name pos:start="51:21" pos:end="51:25">frame</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:31">data</name><index pos:start="51:32" pos:end="51:34">[<expr pos:start="51:33" pos:end="51:33"><literal type="number" pos:start="51:33" pos:end="51:33">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:29"><expr pos:start="55:5" pos:end="55:28"><call pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:25">channel_decorrelation</name><argument_list pos:start="55:26" pos:end="55:28">(<argument pos:start="55:27" pos:end="55:27"><expr pos:start="55:27" pos:end="55:27"><name pos:start="55:27" pos:end="55:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:26"><expr pos:start="59:5" pos:end="59:25"><call pos:start="59:5" pos:end="59:25"><name pos:start="59:5" pos:end="59:22">remove_wasted_bits</name><argument_list pos:start="59:23" pos:end="59:25">(<argument pos:start="59:24" pos:end="59:24"><expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:34"><expr pos:start="63:5" pos:end="63:33"><name pos:start="63:5" pos:end="63:15">frame_bytes</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="63:33"><name pos:start="63:19" pos:end="63:30">encode_frame</name><argument_list pos:start="63:31" pos:end="63:33">(<argument pos:start="63:32" pos:end="63:32"><expr pos:start="63:32" pos:end="63:32"><name pos:start="63:32" pos:end="63:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="67:5" pos:end="69:43">/* fallback to verbatim mode if the compressed frame is larger than it

       would be if encoded uncompressed. */</comment>

    <if_stmt pos:start="71:5" pos:end="85:5"><if pos:start="71:5" pos:end="85:5">if <condition pos:start="71:8" pos:end="71:58">(<expr pos:start="71:9" pos:end="71:57"><name pos:start="71:9" pos:end="71:40"><name pos:start="71:9" pos:end="71:19">frame_bytes</name> <argument_list type="generic" pos:start="71:21" pos:end="71:40">&lt; <argument pos:start="71:23" pos:end="71:38"><expr pos:start="71:23" pos:end="71:38"><literal type="number" pos:start="71:23" pos:end="71:23">0</literal> <operator pos:start="71:25" pos:end="71:26">||</operator> <name pos:start="71:28" pos:end="71:38">frame_bytes</name></expr></argument> &gt;</argument_list></name> <name pos:start="71:42" pos:end="71:57"><name pos:start="71:42" pos:end="71:42">s</name><operator pos:start="71:43" pos:end="71:44">-&gt;</operator><name pos:start="71:45" pos:end="71:57">max_framesize</name></name></expr>)</condition> <block pos:start="71:60" pos:end="85:5">{<block_content pos:start="73:9" pos:end="83:9">

        <expr_stmt pos:start="73:9" pos:end="73:35"><expr pos:start="73:9" pos:end="73:34"><name pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:16">frame</name><operator pos:start="73:17" pos:end="73:17">.</operator><name pos:start="73:18" pos:end="73:30">verbatim_only</name></name> <operator pos:start="73:32" pos:end="73:32">=</operator> <literal type="number" pos:start="73:34" pos:end="73:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:38"><expr pos:start="75:9" pos:end="75:37"><name pos:start="75:9" pos:end="75:19">frame_bytes</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <call pos:start="75:23" pos:end="75:37"><name pos:start="75:23" pos:end="75:34">encode_frame</name><argument_list pos:start="75:35" pos:end="75:37">(<argument pos:start="75:36" pos:end="75:36"><expr pos:start="75:36" pos:end="75:36"><name pos:start="75:36" pos:end="75:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:28">(<expr pos:start="77:13" pos:end="77:27"><name pos:start="77:13" pos:end="77:23">frame_bytes</name> <operator pos:start="77:25" pos:end="77:25">&lt;</operator> <literal type="number" pos:start="77:27" pos:end="77:27">0</literal></expr>)</condition> <block pos:start="77:30" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:31">

            <expr_stmt pos:start="79:13" pos:end="79:61"><expr pos:start="79:13" pos:end="79:60"><call pos:start="79:13" pos:end="79:60"><name pos:start="79:13" pos:end="79:18">av_log</name><argument_list pos:start="79:19" pos:end="79:60">(<argument pos:start="79:20" pos:end="79:24"><expr pos:start="79:20" pos:end="79:24"><name pos:start="79:20" pos:end="79:24">avctx</name></expr></argument>, <argument pos:start="79:27" pos:end="79:38"><expr pos:start="79:27" pos:end="79:38"><name pos:start="79:27" pos:end="79:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:41" pos:end="79:59"><expr pos:start="79:41" pos:end="79:59"><literal type="string" pos:start="79:41" pos:end="79:59">"Bad frame count\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:31">return <expr pos:start="81:20" pos:end="81:30"><name pos:start="81:20" pos:end="81:30">frame_bytes</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="91:19"><if pos:start="89:5" pos:end="91:19">if <condition pos:start="89:8" pos:end="89:60">(<expr pos:start="89:9" pos:end="89:59"><operator pos:start="89:9" pos:end="89:9">(</operator><name pos:start="89:10" pos:end="89:12">ret</name> <operator pos:start="89:14" pos:end="89:14">=</operator> <call pos:start="89:16" pos:end="89:58"><name pos:start="89:16" pos:end="89:31">ff_alloc_packet2</name><argument_list pos:start="89:32" pos:end="89:58">(<argument pos:start="89:33" pos:end="89:37"><expr pos:start="89:33" pos:end="89:37"><name pos:start="89:33" pos:end="89:37">avctx</name></expr></argument>, <argument pos:start="89:40" pos:end="89:44"><expr pos:start="89:40" pos:end="89:44"><name pos:start="89:40" pos:end="89:44">avpkt</name></expr></argument>, <argument pos:start="89:47" pos:end="89:57"><expr pos:start="89:47" pos:end="89:57"><name pos:start="89:47" pos:end="89:57">frame_bytes</name></expr></argument>)</argument_list></call><operator pos:start="89:59" pos:end="89:59">)</operator></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:19"><block_content pos:start="91:9" pos:end="91:19">

        <return pos:start="91:9" pos:end="91:19">return <expr pos:start="91:16" pos:end="91:18"><name pos:start="91:16" pos:end="91:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:38"><expr pos:start="95:5" pos:end="95:37"><name pos:start="95:5" pos:end="95:13">out_bytes</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <call pos:start="95:17" pos:end="95:37"><name pos:start="95:17" pos:end="95:27">write_frame</name><argument_list pos:start="95:28" pos:end="95:37">(<argument pos:start="95:29" pos:end="95:29"><expr pos:start="95:29" pos:end="95:29"><name pos:start="95:29" pos:end="95:29">s</name></expr></argument>, <argument pos:start="95:32" pos:end="95:36"><expr pos:start="95:32" pos:end="95:36"><name pos:start="95:32" pos:end="95:36">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:21"><expr pos:start="99:5" pos:end="99:20"><name pos:start="99:5" pos:end="99:18"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:18">frame_count</name></name><operator pos:start="99:19" pos:end="99:20">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:41"><expr pos:start="101:5" pos:end="101:40"><name pos:start="101:5" pos:end="101:19"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:19">sample_count</name></name> <operator pos:start="101:21" pos:end="101:22">+=</operator> <name pos:start="101:24" pos:end="101:40"><name pos:start="101:24" pos:end="101:28">frame</name><operator pos:start="101:29" pos:end="101:30">-&gt;</operator><name pos:start="101:31" pos:end="101:40">nb_samples</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="109:5"><if pos:start="103:5" pos:end="109:5">if <condition pos:start="103:8" pos:end="103:54">(<expr pos:start="103:9" pos:end="103:53"><operator pos:start="103:9" pos:end="103:9">(</operator><name pos:start="103:10" pos:end="103:12">ret</name> <operator pos:start="103:14" pos:end="103:14">=</operator> <call pos:start="103:16" pos:end="103:48"><name pos:start="103:16" pos:end="103:29">update_md5_sum</name><argument_list pos:start="103:30" pos:end="103:48">(<argument pos:start="103:31" pos:end="103:31"><expr pos:start="103:31" pos:end="103:31"><name pos:start="103:31" pos:end="103:31">s</name></expr></argument>, <argument pos:start="103:34" pos:end="103:47"><expr pos:start="103:34" pos:end="103:47"><name pos:start="103:34" pos:end="103:47"><name pos:start="103:34" pos:end="103:38">frame</name><operator pos:start="103:39" pos:end="103:40">-&gt;</operator><name pos:start="103:41" pos:end="103:44">data</name><index pos:start="103:45" pos:end="103:47">[<expr pos:start="103:46" pos:end="103:46"><literal type="number" pos:start="103:46" pos:end="103:46">0</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="103:49" pos:end="103:49">)</operator> <operator pos:start="103:51" pos:end="103:51">&lt;</operator> <literal type="number" pos:start="103:53" pos:end="103:53">0</literal></expr>)</condition> <block pos:start="103:56" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:19">

        <expr_stmt pos:start="105:9" pos:end="105:69"><expr pos:start="105:9" pos:end="105:68"><call pos:start="105:9" pos:end="105:68"><name pos:start="105:9" pos:end="105:14">av_log</name><argument_list pos:start="105:15" pos:end="105:68">(<argument pos:start="105:16" pos:end="105:20"><expr pos:start="105:16" pos:end="105:20"><name pos:start="105:16" pos:end="105:20">avctx</name></expr></argument>, <argument pos:start="105:23" pos:end="105:34"><expr pos:start="105:23" pos:end="105:34"><name pos:start="105:23" pos:end="105:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="105:37" pos:end="105:67"><expr pos:start="105:37" pos:end="105:67"><literal type="string" pos:start="105:37" pos:end="105:67">"Error updating MD5 checksum\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="107:9" pos:end="107:19">return <expr pos:start="107:16" pos:end="107:18"><name pos:start="107:16" pos:end="107:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="111:5" pos:end="113:45"><if pos:start="111:5" pos:end="113:45">if <condition pos:start="111:8" pos:end="111:45">(<expr pos:start="111:9" pos:end="111:44"><name pos:start="111:9" pos:end="111:17">out_bytes</name> <operator pos:start="111:19" pos:end="111:19">&gt;</operator> <name pos:start="111:21" pos:end="111:44"><name pos:start="111:21" pos:end="111:21">s</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:44">max_encoded_framesize</name></name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:45"><block_content pos:start="113:9" pos:end="113:45">

        <expr_stmt pos:start="113:9" pos:end="113:45"><expr pos:start="113:9" pos:end="113:44"><name pos:start="113:9" pos:end="113:32"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:32">max_encoded_framesize</name></name> <operator pos:start="113:34" pos:end="113:34">=</operator> <name pos:start="113:36" pos:end="113:44">out_bytes</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="117:37"><if pos:start="115:5" pos:end="117:37">if <condition pos:start="115:8" pos:end="115:37">(<expr pos:start="115:9" pos:end="115:36"><name pos:start="115:9" pos:end="115:17">out_bytes</name> <operator pos:start="115:19" pos:end="115:19">&lt;</operator> <name pos:start="115:21" pos:end="115:36"><name pos:start="115:21" pos:end="115:21">s</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:36">min_framesize</name></name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:37"><block_content pos:start="117:9" pos:end="117:37">

        <expr_stmt pos:start="117:9" pos:end="117:37"><expr pos:start="117:9" pos:end="117:36"><name pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:24">min_framesize</name></name> <operator pos:start="117:26" pos:end="117:26">=</operator> <name pos:start="117:28" pos:end="117:36">out_bytes</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:33"><expr pos:start="121:5" pos:end="121:32"><name pos:start="121:5" pos:end="121:14"><name pos:start="121:5" pos:end="121:9">avpkt</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:14">pts</name></name>      <operator pos:start="121:21" pos:end="121:21">=</operator> <name pos:start="121:23" pos:end="121:32"><name pos:start="121:23" pos:end="121:27">frame</name><operator pos:start="121:28" pos:end="121:29">-&gt;</operator><name pos:start="121:30" pos:end="121:32">pts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:72"><expr pos:start="123:5" pos:end="123:71"><name pos:start="123:5" pos:end="123:19"><name pos:start="123:5" pos:end="123:9">avpkt</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:19">duration</name></name> <operator pos:start="123:21" pos:end="123:21">=</operator> <call pos:start="123:23" pos:end="123:71"><name pos:start="123:23" pos:end="123:45">ff_samples_to_time_base</name><argument_list pos:start="123:46" pos:end="123:71">(<argument pos:start="123:47" pos:end="123:51"><expr pos:start="123:47" pos:end="123:51"><name pos:start="123:47" pos:end="123:51">avctx</name></expr></argument>, <argument pos:start="123:54" pos:end="123:70"><expr pos:start="123:54" pos:end="123:70"><name pos:start="123:54" pos:end="123:70"><name pos:start="123:54" pos:end="123:58">frame</name><operator pos:start="123:59" pos:end="123:60">-&gt;</operator><name pos:start="123:61" pos:end="123:70">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:32"><expr pos:start="125:5" pos:end="125:31"><name pos:start="125:5" pos:end="125:15"><name pos:start="125:5" pos:end="125:9">avpkt</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:15">size</name></name>     <operator pos:start="125:21" pos:end="125:21">=</operator> <name pos:start="125:23" pos:end="125:31">out_bytes</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:24"><expr pos:start="127:5" pos:end="127:23"><operator pos:start="127:5" pos:end="127:5">*</operator><name pos:start="127:6" pos:end="127:19">got_packet_ptr</name> <operator pos:start="127:21" pos:end="127:21">=</operator> <literal type="number" pos:start="127:23" pos:end="127:23">1</literal></expr>;</expr_stmt>

    <return pos:start="129:5" pos:end="129:13">return <expr pos:start="129:12" pos:end="129:12"><literal type="number" pos:start="129:12" pos:end="129:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
