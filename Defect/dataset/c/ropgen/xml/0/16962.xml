<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16962.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">test_qemu_strtosz_invalid</name><parameter_list pos:start="1:38" pos:end="1:43">(<parameter pos:start="1:39" pos:end="1:42"><decl pos:start="1:39" pos:end="1:42"><type pos:start="1:39" pos:end="1:42"><name pos:start="1:39" pos:end="1:42">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:28">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">str</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:16">endptr</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:15">res</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:13"><expr pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:7">str</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <literal type="string" pos:start="13:11" pos:end="13:12">""</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:37"><expr pos:start="15:5" pos:end="15:36"><name pos:start="15:5" pos:end="15:7">res</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:36"><name pos:start="15:11" pos:end="15:22">qemu_strtosz</name><argument_list pos:start="15:23" pos:end="15:36">(<argument pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><name pos:start="15:24" pos:end="15:26">str</name></expr></argument>, <argument pos:start="15:29" pos:end="15:35"><expr pos:start="15:29" pos:end="15:35"><operator pos:start="15:29" pos:end="15:29">&amp;</operator><name pos:start="15:30" pos:end="15:35">endptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><call pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:19">g_assert_cmpint</name><argument_list pos:start="17:20" pos:end="17:37">(<argument pos:start="17:21" pos:end="17:23"><expr pos:start="17:21" pos:end="17:23"><name pos:start="17:21" pos:end="17:23">res</name></expr></argument>, <argument pos:start="17:26" pos:end="17:27"><expr pos:start="17:26" pos:end="17:27"><operator pos:start="17:26" pos:end="17:27">==</operator></expr></argument>, <argument pos:start="17:30" pos:end="17:36"><expr pos:start="17:30" pos:end="17:36"><operator pos:start="17:30" pos:end="17:30">-</operator><name pos:start="17:31" pos:end="17:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><call pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:12">g_assert</name><argument_list pos:start="19:13" pos:end="19:27">(<argument pos:start="19:14" pos:end="19:26"><expr pos:start="19:14" pos:end="19:26"><name pos:start="19:14" pos:end="19:19">endptr</name> <operator pos:start="19:21" pos:end="19:22">==</operator> <name pos:start="19:24" pos:end="19:26">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:7">str</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <literal type="string" pos:start="23:11" pos:end="23:16">" \t "</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:7">res</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:36"><name pos:start="25:11" pos:end="25:22">qemu_strtosz</name><argument_list pos:start="25:23" pos:end="25:36">(<argument pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:26">str</name></expr></argument>, <argument pos:start="25:29" pos:end="25:35"><expr pos:start="25:29" pos:end="25:35"><operator pos:start="25:29" pos:end="25:29">&amp;</operator><name pos:start="25:30" pos:end="25:35">endptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><call pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:19">g_assert_cmpint</name><argument_list pos:start="27:20" pos:end="27:37">(<argument pos:start="27:21" pos:end="27:23"><expr pos:start="27:21" pos:end="27:23"><name pos:start="27:21" pos:end="27:23">res</name></expr></argument>, <argument pos:start="27:26" pos:end="27:27"><expr pos:start="27:26" pos:end="27:27"><operator pos:start="27:26" pos:end="27:27">==</operator></expr></argument>, <argument pos:start="27:30" pos:end="27:36"><expr pos:start="27:30" pos:end="27:36"><operator pos:start="27:30" pos:end="27:30">-</operator><name pos:start="27:31" pos:end="27:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><call pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:12">g_assert</name><argument_list pos:start="29:13" pos:end="29:27">(<argument pos:start="29:14" pos:end="29:26"><expr pos:start="29:14" pos:end="29:26"><name pos:start="29:14" pos:end="29:19">endptr</name> <operator pos:start="29:21" pos:end="29:22">==</operator> <name pos:start="29:24" pos:end="29:26">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:17"><expr pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:7">str</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <literal type="string" pos:start="33:11" pos:end="33:16">"crap"</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:37"><expr pos:start="35:5" pos:end="35:36"><name pos:start="35:5" pos:end="35:7">res</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:36"><name pos:start="35:11" pos:end="35:22">qemu_strtosz</name><argument_list pos:start="35:23" pos:end="35:36">(<argument pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">str</name></expr></argument>, <argument pos:start="35:29" pos:end="35:35"><expr pos:start="35:29" pos:end="35:35"><operator pos:start="35:29" pos:end="35:29">&amp;</operator><name pos:start="35:30" pos:end="35:35">endptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:38"><expr pos:start="37:5" pos:end="37:37"><call pos:start="37:5" pos:end="37:37"><name pos:start="37:5" pos:end="37:19">g_assert_cmpint</name><argument_list pos:start="37:20" pos:end="37:37">(<argument pos:start="37:21" pos:end="37:23"><expr pos:start="37:21" pos:end="37:23"><name pos:start="37:21" pos:end="37:23">res</name></expr></argument>, <argument pos:start="37:26" pos:end="37:27"><expr pos:start="37:26" pos:end="37:27"><operator pos:start="37:26" pos:end="37:27">==</operator></expr></argument>, <argument pos:start="37:30" pos:end="37:36"><expr pos:start="37:30" pos:end="37:36"><operator pos:start="37:30" pos:end="37:30">-</operator><name pos:start="37:31" pos:end="37:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><call pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:12">g_assert</name><argument_list pos:start="39:13" pos:end="39:27">(<argument pos:start="39:14" pos:end="39:26"><expr pos:start="39:14" pos:end="39:26"><name pos:start="39:14" pos:end="39:19">endptr</name> <operator pos:start="39:21" pos:end="39:22">==</operator> <name pos:start="39:24" pos:end="39:26">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
