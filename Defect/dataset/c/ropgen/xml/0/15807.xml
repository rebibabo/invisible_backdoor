<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15807.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">qemu_spice_display_switch</name><parameter_list pos:start="1:31" pos:end="3:55">(<parameter pos:start="1:32" pos:end="1:54"><decl pos:start="1:32" pos:end="1:54"><type pos:start="1:32" pos:end="1:54"><name pos:start="1:32" pos:end="1:49">SimpleSpiceDisplay</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">ssd</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:54"><decl pos:start="3:32" pos:end="3:54"><type pos:start="3:32" pos:end="3:54"><name pos:start="3:32" pos:end="3:45">DisplaySurface</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:54">surface</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="117:1">{<block_content pos:start="7:5" pos:end="115:18">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">SimpleSpiceUpdate</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:29">update</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:21">need_destroy</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="43:5"><if pos:start="13:5" pos:end="43:5">if <condition pos:start="13:8" pos:end="17:73">(<expr pos:start="13:9" pos:end="17:72"><name pos:start="13:9" pos:end="13:15">surface</name> <operator pos:start="13:17" pos:end="13:18">&amp;&amp;</operator> <name pos:start="13:20" pos:end="13:31"><name pos:start="13:20" pos:end="13:22">ssd</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:31">surface</name></name> <operator pos:start="13:33" pos:end="13:34">&amp;&amp;</operator>

        <call pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:21">surface_width</name><argument_list pos:start="15:22" pos:end="15:30">(<argument pos:start="15:23" pos:end="15:29"><expr pos:start="15:23" pos:end="15:29"><name pos:start="15:23" pos:end="15:29">surface</name></expr></argument>)</argument_list></call> <operator pos:start="15:32" pos:end="15:33">==</operator> <call pos:start="15:35" pos:end="15:70"><name pos:start="15:35" pos:end="15:56">pixman_image_get_width</name><argument_list pos:start="15:57" pos:end="15:70">(<argument pos:start="15:58" pos:end="15:69"><expr pos:start="15:58" pos:end="15:69"><name pos:start="15:58" pos:end="15:69"><name pos:start="15:58" pos:end="15:60">ssd</name><operator pos:start="15:61" pos:end="15:62">-&gt;</operator><name pos:start="15:63" pos:end="15:69">surface</name></name></expr></argument>)</argument_list></call> <operator pos:start="15:72" pos:end="15:73">&amp;&amp;</operator>

        <call pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:22">surface_height</name><argument_list pos:start="17:23" pos:end="17:31">(<argument pos:start="17:24" pos:end="17:30"><expr pos:start="17:24" pos:end="17:30"><name pos:start="17:24" pos:end="17:30">surface</name></expr></argument>)</argument_list></call> <operator pos:start="17:33" pos:end="17:34">==</operator> <call pos:start="17:36" pos:end="17:72"><name pos:start="17:36" pos:end="17:58">pixman_image_get_height</name><argument_list pos:start="17:59" pos:end="17:72">(<argument pos:start="17:60" pos:end="17:71"><expr pos:start="17:60" pos:end="17:71"><name pos:start="17:60" pos:end="17:71"><name pos:start="17:60" pos:end="17:62">ssd</name><operator pos:start="17:63" pos:end="17:64">-&gt;</operator><name pos:start="17:65" pos:end="17:71">surface</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:75" pos:end="43:5">{<block_content pos:start="21:9" pos:end="41:15">

        <comment type="block" pos:start="19:9" pos:end="19:58">/* no-resize fast path: just swap backing store */</comment>

        <expr_stmt pos:start="21:9" pos:end="23:64"><expr pos:start="21:9" pos:end="23:63"><call pos:start="21:9" pos:end="23:63"><name pos:start="21:9" pos:end="21:14">dprint</name><argument_list pos:start="21:15" pos:end="23:63">(<argument pos:start="21:16" pos:end="21:16"><expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">1</literal></expr></argument>, <argument pos:start="21:19" pos:end="21:41"><expr pos:start="21:19" pos:end="21:41"><literal type="string" pos:start="21:19" pos:end="21:41">"%s/%d: fast (%dx%d)\n"</literal></expr></argument>, <argument pos:start="21:44" pos:end="21:51"><expr pos:start="21:44" pos:end="21:51"><name pos:start="21:44" pos:end="21:51">__func__</name></expr></argument>, <argument pos:start="21:54" pos:end="21:64"><expr pos:start="21:54" pos:end="21:64"><name pos:start="21:54" pos:end="21:64"><name pos:start="21:54" pos:end="21:56">ssd</name><operator pos:start="21:57" pos:end="21:58">-&gt;</operator><name pos:start="21:59" pos:end="21:61">qxl</name><operator pos:start="21:62" pos:end="21:62">.</operator><name pos:start="21:63" pos:end="21:64">id</name></name></expr></argument>,

               <argument pos:start="23:16" pos:end="23:37"><expr pos:start="23:16" pos:end="23:37"><call pos:start="23:16" pos:end="23:37"><name pos:start="23:16" pos:end="23:28">surface_width</name><argument_list pos:start="23:29" pos:end="23:37">(<argument pos:start="23:30" pos:end="23:36"><expr pos:start="23:30" pos:end="23:36"><name pos:start="23:30" pos:end="23:36">surface</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:40" pos:end="23:62"><expr pos:start="23:40" pos:end="23:62"><call pos:start="23:40" pos:end="23:62"><name pos:start="23:40" pos:end="23:53">surface_height</name><argument_list pos:start="23:54" pos:end="23:62">(<argument pos:start="23:55" pos:end="23:61"><expr pos:start="23:55" pos:end="23:61"><name pos:start="23:55" pos:end="23:61">surface</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:36"><expr pos:start="25:9" pos:end="25:35"><call pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:23">qemu_mutex_lock</name><argument_list pos:start="25:24" pos:end="25:35">(<argument pos:start="25:25" pos:end="25:34"><expr pos:start="25:25" pos:end="25:34"><operator pos:start="25:25" pos:end="25:25">&amp;</operator><name pos:start="25:26" pos:end="25:34"><name pos:start="25:26" pos:end="25:28">ssd</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:34">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:26"><expr pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ssd</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:15">ds</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:25">surface</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:41"><expr pos:start="29:9" pos:end="29:40"><call pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:26">pixman_image_unref</name><argument_list pos:start="29:27" pos:end="29:40">(<argument pos:start="29:28" pos:end="29:39"><expr pos:start="29:28" pos:end="29:39"><name pos:start="29:28" pos:end="29:39"><name pos:start="29:28" pos:end="29:30">ssd</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:39">surface</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:56"><expr pos:start="31:9" pos:end="31:55"><name pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:11">ssd</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:20">surface</name></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <call pos:start="31:24" pos:end="31:55"><name pos:start="31:24" pos:end="31:39">pixman_image_ref</name><argument_list pos:start="31:40" pos:end="31:55">(<argument pos:start="31:41" pos:end="31:54"><expr pos:start="31:41" pos:end="31:54"><name pos:start="31:41" pos:end="31:54"><name pos:start="31:41" pos:end="31:43">ssd</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:47">ds</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:54">image</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:38"><expr pos:start="33:9" pos:end="33:37"><call pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:25">qemu_mutex_unlock</name><argument_list pos:start="33:26" pos:end="33:37">(<argument pos:start="33:27" pos:end="33:36"><expr pos:start="33:27" pos:end="33:36"><operator pos:start="33:27" pos:end="33:27">&amp;</operator><name pos:start="33:28" pos:end="33:36"><name pos:start="33:28" pos:end="33:30">ssd</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:36">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="39:59"><expr pos:start="35:9" pos:end="39:58"><call pos:start="35:9" pos:end="39:58"><name pos:start="35:9" pos:end="35:33">qemu_spice_display_update</name><argument_list pos:start="35:34" pos:end="39:58">(<argument pos:start="35:35" pos:end="35:37"><expr pos:start="35:35" pos:end="35:37"><name pos:start="35:35" pos:end="35:37">ssd</name></expr></argument>, <argument pos:start="35:40" pos:end="35:40"><expr pos:start="35:40" pos:end="35:40"><literal type="number" pos:start="35:40" pos:end="35:40">0</literal></expr></argument>, <argument pos:start="35:43" pos:end="35:43"><expr pos:start="35:43" pos:end="35:43"><literal type="number" pos:start="35:43" pos:end="35:43">0</literal></expr></argument>,

                                  <argument pos:start="37:35" pos:end="37:56"><expr pos:start="37:35" pos:end="37:56"><call pos:start="37:35" pos:end="37:56"><name pos:start="37:35" pos:end="37:47">surface_width</name><argument_list pos:start="37:48" pos:end="37:56">(<argument pos:start="37:49" pos:end="37:55"><expr pos:start="37:49" pos:end="37:55"><name pos:start="37:49" pos:end="37:55">surface</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="39:35" pos:end="39:57"><expr pos:start="39:35" pos:end="39:57"><call pos:start="39:35" pos:end="39:57"><name pos:start="39:35" pos:end="39:48">surface_height</name><argument_list pos:start="39:49" pos:end="39:57">(<argument pos:start="39:50" pos:end="39:56"><expr pos:start="39:50" pos:end="39:56"><name pos:start="39:50" pos:end="39:56">surface</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:26">/* full mode switch */</comment>

    <expr_stmt pos:start="49:5" pos:end="57:50"><expr pos:start="49:5" pos:end="57:49"><call pos:start="49:5" pos:end="57:49"><name pos:start="49:5" pos:end="49:10">dprint</name><argument_list pos:start="49:11" pos:end="57:49">(<argument pos:start="49:12" pos:end="49:12"><expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">1</literal></expr></argument>, <argument pos:start="49:15" pos:end="49:46"><expr pos:start="49:15" pos:end="49:46"><literal type="string" pos:start="49:15" pos:end="49:46">"%s/%d: full (%dx%d -&gt; %dx%d)\n"</literal></expr></argument>, <argument pos:start="49:49" pos:end="49:56"><expr pos:start="49:49" pos:end="49:56"><name pos:start="49:49" pos:end="49:56">__func__</name></expr></argument>, <argument pos:start="49:59" pos:end="49:69"><expr pos:start="49:59" pos:end="49:69"><name pos:start="49:59" pos:end="49:69"><name pos:start="49:59" pos:end="49:61">ssd</name><operator pos:start="49:62" pos:end="49:63">-&gt;</operator><name pos:start="49:64" pos:end="49:66">qxl</name><operator pos:start="49:67" pos:end="49:67">.</operator><name pos:start="49:68" pos:end="49:69">id</name></name></expr></argument>,

           <argument pos:start="51:12" pos:end="51:67"><expr pos:start="51:12" pos:end="51:67"><ternary pos:start="51:12" pos:end="51:67"><condition pos:start="51:12" pos:end="51:25"><expr pos:start="51:12" pos:end="51:23"><name pos:start="51:12" pos:end="51:23"><name pos:start="51:12" pos:end="51:14">ssd</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:23">surface</name></name></expr> ?</condition><then pos:start="51:27" pos:end="51:62"> <expr pos:start="51:27" pos:end="51:62"><call pos:start="51:27" pos:end="51:62"><name pos:start="51:27" pos:end="51:48">pixman_image_get_width</name><argument_list pos:start="51:49" pos:end="51:62">(<argument pos:start="51:50" pos:end="51:61"><expr pos:start="51:50" pos:end="51:61"><name pos:start="51:50" pos:end="51:61"><name pos:start="51:50" pos:end="51:52">ssd</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:61">surface</name></name></expr></argument>)</argument_list></call></expr>  </then><else pos:start="51:65" pos:end="51:67">: <expr pos:start="51:67" pos:end="51:67"><literal type="number" pos:start="51:67" pos:end="51:67">0</literal></expr></else></ternary></expr></argument>,

           <argument pos:start="53:12" pos:end="53:67"><expr pos:start="53:12" pos:end="53:67"><ternary pos:start="53:12" pos:end="53:67"><condition pos:start="53:12" pos:end="53:25"><expr pos:start="53:12" pos:end="53:23"><name pos:start="53:12" pos:end="53:23"><name pos:start="53:12" pos:end="53:14">ssd</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:23">surface</name></name></expr> ?</condition><then pos:start="53:27" pos:end="53:63"> <expr pos:start="53:27" pos:end="53:63"><call pos:start="53:27" pos:end="53:63"><name pos:start="53:27" pos:end="53:49">pixman_image_get_height</name><argument_list pos:start="53:50" pos:end="53:63">(<argument pos:start="53:51" pos:end="53:62"><expr pos:start="53:51" pos:end="53:62"><name pos:start="53:51" pos:end="53:62"><name pos:start="53:51" pos:end="53:53">ssd</name><operator pos:start="53:54" pos:end="53:55">-&gt;</operator><name pos:start="53:56" pos:end="53:62">surface</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="53:65" pos:end="53:67">: <expr pos:start="53:67" pos:end="53:67"><literal type="number" pos:start="53:67" pos:end="53:67">0</literal></expr></else></ternary></expr></argument>,

           <argument pos:start="55:12" pos:end="55:48"><expr pos:start="55:12" pos:end="55:48"><ternary pos:start="55:12" pos:end="55:48"><condition pos:start="55:12" pos:end="55:20"><expr pos:start="55:12" pos:end="55:18"><name pos:start="55:12" pos:end="55:18">surface</name></expr> ?</condition><then pos:start="55:22" pos:end="55:43"> <expr pos:start="55:22" pos:end="55:43"><call pos:start="55:22" pos:end="55:43"><name pos:start="55:22" pos:end="55:34">surface_width</name><argument_list pos:start="55:35" pos:end="55:43">(<argument pos:start="55:36" pos:end="55:42"><expr pos:start="55:36" pos:end="55:42"><name pos:start="55:36" pos:end="55:42">surface</name></expr></argument>)</argument_list></call></expr>  </then><else pos:start="55:46" pos:end="55:48">: <expr pos:start="55:48" pos:end="55:48"><literal type="number" pos:start="55:48" pos:end="55:48">0</literal></expr></else></ternary></expr></argument>,

           <argument pos:start="57:12" pos:end="57:48"><expr pos:start="57:12" pos:end="57:48"><ternary pos:start="57:12" pos:end="57:48"><condition pos:start="57:12" pos:end="57:20"><expr pos:start="57:12" pos:end="57:18"><name pos:start="57:12" pos:end="57:18">surface</name></expr> ?</condition><then pos:start="57:22" pos:end="57:44"> <expr pos:start="57:22" pos:end="57:44"><call pos:start="57:22" pos:end="57:44"><name pos:start="57:22" pos:end="57:35">surface_height</name><argument_list pos:start="57:36" pos:end="57:44">(<argument pos:start="57:37" pos:end="57:43"><expr pos:start="57:37" pos:end="57:43"><name pos:start="57:37" pos:end="57:43">surface</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="57:46" pos:end="57:48">: <expr pos:start="57:48" pos:end="57:48"><literal type="number" pos:start="57:48" pos:end="57:48">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:47"><expr pos:start="61:5" pos:end="61:46"><call pos:start="61:5" pos:end="61:46"><name pos:start="61:5" pos:end="61:10">memset</name><argument_list pos:start="61:11" pos:end="61:46">(<argument pos:start="61:12" pos:end="61:22"><expr pos:start="61:12" pos:end="61:22"><operator pos:start="61:12" pos:end="61:12">&amp;</operator><name pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:15">ssd</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:22">dirty</name></name></expr></argument>, <argument pos:start="61:25" pos:end="61:25"><expr pos:start="61:25" pos:end="61:25"><literal type="number" pos:start="61:25" pos:end="61:25">0</literal></expr></argument>, <argument pos:start="61:28" pos:end="61:45"><expr pos:start="61:28" pos:end="61:45"><sizeof pos:start="61:28" pos:end="61:45">sizeof<argument_list pos:start="61:34" pos:end="61:45">(<argument pos:start="61:35" pos:end="61:44"><expr pos:start="61:35" pos:end="61:44"><name pos:start="61:35" pos:end="61:44"><name pos:start="61:35" pos:end="61:37">ssd</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:44">dirty</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="73:5"><if pos:start="63:5" pos:end="73:5">if <condition pos:start="63:8" pos:end="63:21">(<expr pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:11">ssd</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:20">surface</name></name></expr>)</condition> <block pos:start="63:23" pos:end="73:5">{<block_content pos:start="65:9" pos:end="71:27">

        <expr_stmt pos:start="65:9" pos:end="65:41"><expr pos:start="65:9" pos:end="65:40"><call pos:start="65:9" pos:end="65:40"><name pos:start="65:9" pos:end="65:26">pixman_image_unref</name><argument_list pos:start="65:27" pos:end="65:40">(<argument pos:start="65:28" pos:end="65:39"><expr pos:start="65:28" pos:end="65:39"><name pos:start="65:28" pos:end="65:39"><name pos:start="65:28" pos:end="65:30">ssd</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:39">surface</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:28"><expr pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:11">ssd</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:20">surface</name></name> <operator pos:start="67:22" pos:end="67:22">=</operator> <name pos:start="67:24" pos:end="67:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:40"><expr pos:start="69:9" pos:end="69:39"><call pos:start="69:9" pos:end="69:39"><name pos:start="69:9" pos:end="69:26">pixman_image_unref</name><argument_list pos:start="69:27" pos:end="69:39">(<argument pos:start="69:28" pos:end="69:38"><expr pos:start="69:28" pos:end="69:38"><name pos:start="69:28" pos:end="69:38"><name pos:start="69:28" pos:end="69:30">ssd</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:38">mirror</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:27"><expr pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:11">ssd</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:19">mirror</name></name> <operator pos:start="71:21" pos:end="71:21">=</operator> <name pos:start="71:23" pos:end="71:26">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:32"><expr pos:start="77:5" pos:end="77:31"><call pos:start="77:5" pos:end="77:31"><name pos:start="77:5" pos:end="77:19">qemu_mutex_lock</name><argument_list pos:start="77:20" pos:end="77:31">(<argument pos:start="77:21" pos:end="77:30"><expr pos:start="77:21" pos:end="77:30"><operator pos:start="77:21" pos:end="77:21">&amp;</operator><name pos:start="77:22" pos:end="77:30"><name pos:start="77:22" pos:end="77:24">ssd</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:30">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:37"><expr pos:start="79:5" pos:end="79:36"><name pos:start="79:5" pos:end="79:16">need_destroy</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <operator pos:start="79:20" pos:end="79:20">(</operator><name pos:start="79:21" pos:end="79:27"><name pos:start="79:21" pos:end="79:23">ssd</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:27">ds</name></name> <operator pos:start="79:29" pos:end="79:30">!=</operator> <name pos:start="79:32" pos:end="79:35">NULL</name><operator pos:start="79:36" pos:end="79:36">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:22"><expr pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:11"><name pos:start="81:5" pos:end="81:7">ssd</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:11">ds</name></name> <operator pos:start="81:13" pos:end="81:13">=</operator> <name pos:start="81:15" pos:end="81:21">surface</name></expr>;</expr_stmt>

    <while pos:start="83:5" pos:end="89:5">while <condition pos:start="83:11" pos:end="83:58">(<expr pos:start="83:12" pos:end="83:57"><operator pos:start="83:12" pos:end="83:12">(</operator><name pos:start="83:13" pos:end="83:18">update</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <call pos:start="83:22" pos:end="83:48"><name pos:start="83:22" pos:end="83:33">QTAILQ_FIRST</name><argument_list pos:start="83:34" pos:end="83:48">(<argument pos:start="83:35" pos:end="83:47"><expr pos:start="83:35" pos:end="83:47"><operator pos:start="83:35" pos:end="83:35">&amp;</operator><name pos:start="83:36" pos:end="83:47"><name pos:start="83:36" pos:end="83:38">ssd</name><operator pos:start="83:39" pos:end="83:40">-&gt;</operator><name pos:start="83:41" pos:end="83:47">updates</name></name></expr></argument>)</argument_list></call><operator pos:start="83:49" pos:end="83:49">)</operator> <operator pos:start="83:51" pos:end="83:52">!=</operator> <name pos:start="83:54" pos:end="83:57">NULL</name></expr>)</condition> <block pos:start="83:60" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:47">

        <expr_stmt pos:start="85:9" pos:end="85:51"><expr pos:start="85:9" pos:end="85:50"><call pos:start="85:9" pos:end="85:50"><name pos:start="85:9" pos:end="85:21">QTAILQ_REMOVE</name><argument_list pos:start="85:22" pos:end="85:50">(<argument pos:start="85:23" pos:end="85:35"><expr pos:start="85:23" pos:end="85:35"><operator pos:start="85:23" pos:end="85:23">&amp;</operator><name pos:start="85:24" pos:end="85:35"><name pos:start="85:24" pos:end="85:26">ssd</name><operator pos:start="85:27" pos:end="85:28">-&gt;</operator><name pos:start="85:29" pos:end="85:35">updates</name></name></expr></argument>, <argument pos:start="85:38" pos:end="85:43"><expr pos:start="85:38" pos:end="85:43"><name pos:start="85:38" pos:end="85:43">update</name></expr></argument>, <argument pos:start="85:46" pos:end="85:49"><expr pos:start="85:46" pos:end="85:49"><name pos:start="85:46" pos:end="85:49">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:47"><expr pos:start="87:9" pos:end="87:46"><call pos:start="87:9" pos:end="87:46"><name pos:start="87:9" pos:end="87:33">qemu_spice_destroy_update</name><argument_list pos:start="87:34" pos:end="87:46">(<argument pos:start="87:35" pos:end="87:37"><expr pos:start="87:35" pos:end="87:37"><name pos:start="87:35" pos:end="87:37">ssd</name></expr></argument>, <argument pos:start="87:40" pos:end="87:45"><expr pos:start="87:40" pos:end="87:45"><name pos:start="87:40" pos:end="87:45">update</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="91:5" pos:end="91:34"><expr pos:start="91:5" pos:end="91:33"><call pos:start="91:5" pos:end="91:33"><name pos:start="91:5" pos:end="91:21">qemu_mutex_unlock</name><argument_list pos:start="91:22" pos:end="91:33">(<argument pos:start="91:23" pos:end="91:32"><expr pos:start="91:23" pos:end="91:32"><operator pos:start="91:23" pos:end="91:23">&amp;</operator><name pos:start="91:24" pos:end="91:32"><name pos:start="91:24" pos:end="91:26">ssd</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:32">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="97:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:21">(<expr pos:start="93:9" pos:end="93:20"><name pos:start="93:9" pos:end="93:20">need_destroy</name></expr>)</condition> <block pos:start="93:23" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:45">

        <expr_stmt pos:start="95:9" pos:end="95:45"><expr pos:start="95:9" pos:end="95:44"><call pos:start="95:9" pos:end="95:44"><name pos:start="95:9" pos:end="95:39">qemu_spice_destroy_host_primary</name><argument_list pos:start="95:40" pos:end="95:44">(<argument pos:start="95:41" pos:end="95:43"><expr pos:start="95:41" pos:end="95:43"><name pos:start="95:41" pos:end="95:43">ssd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="99:5" pos:end="109:5"><if pos:start="99:5" pos:end="109:5">if <condition pos:start="99:8" pos:end="99:16">(<expr pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:11">ssd</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:15">ds</name></name></expr>)</condition> <block pos:start="99:18" pos:end="109:5">{<block_content pos:start="101:9" pos:end="107:44">

        <expr_stmt pos:start="101:9" pos:end="101:56"><expr pos:start="101:9" pos:end="101:55"><name pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:11">ssd</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:20">surface</name></name> <operator pos:start="101:22" pos:end="101:22">=</operator> <call pos:start="101:24" pos:end="101:55"><name pos:start="101:24" pos:end="101:39">pixman_image_ref</name><argument_list pos:start="101:40" pos:end="101:55">(<argument pos:start="101:41" pos:end="101:54"><expr pos:start="101:41" pos:end="101:54"><name pos:start="101:41" pos:end="101:54"><name pos:start="101:41" pos:end="101:43">ssd</name><operator pos:start="101:44" pos:end="101:45">-&gt;</operator><name pos:start="101:46" pos:end="101:47">ds</name><operator pos:start="101:48" pos:end="101:49">-&gt;</operator><name pos:start="101:50" pos:end="101:54">image</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="105:65"><expr pos:start="103:9" pos:end="105:64"><name pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:11">ssd</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:19">mirror</name></name>  <operator pos:start="103:22" pos:end="103:22">=</operator> <call pos:start="103:24" pos:end="105:64"><name pos:start="103:24" pos:end="103:48">qemu_pixman_mirror_create</name><argument_list pos:start="103:49" pos:end="105:64">(<argument pos:start="103:50" pos:end="103:64"><expr pos:start="103:50" pos:end="103:64"><name pos:start="103:50" pos:end="103:64"><name pos:start="103:50" pos:end="103:52">ssd</name><operator pos:start="103:53" pos:end="103:54">-&gt;</operator><name pos:start="103:55" pos:end="103:56">ds</name><operator pos:start="103:57" pos:end="103:58">-&gt;</operator><name pos:start="103:59" pos:end="103:64">format</name></name></expr></argument>,

                                                 <argument pos:start="105:50" pos:end="105:63"><expr pos:start="105:50" pos:end="105:63"><name pos:start="105:50" pos:end="105:63"><name pos:start="105:50" pos:end="105:52">ssd</name><operator pos:start="105:53" pos:end="105:54">-&gt;</operator><name pos:start="105:55" pos:end="105:56">ds</name><operator pos:start="105:57" pos:end="105:58">-&gt;</operator><name pos:start="105:59" pos:end="105:63">image</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:44"><expr pos:start="107:9" pos:end="107:43"><call pos:start="107:9" pos:end="107:43"><name pos:start="107:9" pos:end="107:38">qemu_spice_create_host_primary</name><argument_list pos:start="107:39" pos:end="107:43">(<argument pos:start="107:40" pos:end="107:42"><expr pos:start="107:40" pos:end="107:42"><name pos:start="107:40" pos:end="107:42">ssd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:47"><expr pos:start="113:5" pos:end="113:46"><call pos:start="113:5" pos:end="113:46"><name pos:start="113:5" pos:end="113:10">memset</name><argument_list pos:start="113:11" pos:end="113:46">(<argument pos:start="113:12" pos:end="113:22"><expr pos:start="113:12" pos:end="113:22"><operator pos:start="113:12" pos:end="113:12">&amp;</operator><name pos:start="113:13" pos:end="113:22"><name pos:start="113:13" pos:end="113:15">ssd</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:22">dirty</name></name></expr></argument>, <argument pos:start="113:25" pos:end="113:25"><expr pos:start="113:25" pos:end="113:25"><literal type="number" pos:start="113:25" pos:end="113:25">0</literal></expr></argument>, <argument pos:start="113:28" pos:end="113:45"><expr pos:start="113:28" pos:end="113:45"><sizeof pos:start="113:28" pos:end="113:45">sizeof<argument_list pos:start="113:34" pos:end="113:45">(<argument pos:start="113:35" pos:end="113:44"><expr pos:start="113:35" pos:end="113:44"><name pos:start="113:35" pos:end="113:44"><name pos:start="113:35" pos:end="113:37">ssd</name><operator pos:start="113:38" pos:end="113:39">-&gt;</operator><name pos:start="113:40" pos:end="113:44">dirty</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:18"><expr pos:start="115:5" pos:end="115:17"><name pos:start="115:5" pos:end="115:15"><name pos:start="115:5" pos:end="115:7">ssd</name><operator pos:start="115:8" pos:end="115:9">-&gt;</operator><name pos:start="115:10" pos:end="115:15">notify</name></name><operator pos:start="115:16" pos:end="115:17">++</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
