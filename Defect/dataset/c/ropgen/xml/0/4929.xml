<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4929.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">vmdk_refresh_limits</name><parameter_list pos:start="1:32" pos:end="1:67">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:48">BlockDriverState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">bs</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:59">Error</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier><modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:5">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVVmdkState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="23:5">for <control pos:start="11:9" pos:end="11:40">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:35"><expr pos:start="11:17" pos:end="11:34"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:34"><name pos:start="11:21" pos:end="11:21">s</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:34">num_extents</name></name></expr>;</condition> <incr pos:start="11:37" pos:end="11:39"><expr pos:start="11:37" pos:end="11:39"><name pos:start="11:37" pos:end="11:37">i</name><operator pos:start="11:38" pos:end="11:39">++</operator></expr></incr>)</control> <block pos:start="11:42" pos:end="23:5">{<block_content pos:start="13:9" pos:end="21:9">

        <if_stmt pos:start="13:9" pos:end="21:9"><if pos:start="13:9" pos:end="21:9">if <condition pos:start="13:12" pos:end="13:32">(<expr pos:start="13:13" pos:end="13:31"><operator pos:start="13:13" pos:end="13:13">!</operator><name pos:start="13:14" pos:end="13:26"><name pos:start="13:14" pos:end="13:14">s</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:23">extents</name><index pos:start="13:24" pos:end="13:26">[<expr pos:start="13:25" pos:end="13:25"><name pos:start="13:25" pos:end="13:25">i</name></expr>]</index></name><operator pos:start="13:27" pos:end="13:27">.</operator><name pos:start="13:28" pos:end="13:31">flat</name></expr>)</condition> <block pos:start="13:34" pos:end="21:9">{<block_content pos:start="15:13" pos:end="19:51">

            <expr_stmt pos:start="15:13" pos:end="19:51"><expr pos:start="15:13" pos:end="19:50"><name pos:start="15:13" pos:end="15:41"><name pos:start="15:13" pos:end="15:14">bs</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:18">bl</name><operator pos:start="15:19" pos:end="15:19">.</operator><name pos:start="15:20" pos:end="15:41">write_zeroes_alignment</name></name> <operator pos:start="15:43" pos:end="15:43">=</operator>

                <call pos:start="17:17" pos:end="19:50"><name pos:start="17:17" pos:end="17:19">MAX</name><argument_list pos:start="17:20" pos:end="19:50">(<argument pos:start="17:21" pos:end="17:49"><expr pos:start="17:21" pos:end="17:49"><name pos:start="17:21" pos:end="17:49"><name pos:start="17:21" pos:end="17:22">bs</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:26">bl</name><operator pos:start="17:27" pos:end="17:27">.</operator><name pos:start="17:28" pos:end="17:49">write_zeroes_alignment</name></name></expr></argument>,

                    <argument pos:start="19:21" pos:end="19:49"><expr pos:start="19:21" pos:end="19:49"><name pos:start="19:21" pos:end="19:33"><name pos:start="19:21" pos:end="19:21">s</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:30">extents</name><index pos:start="19:31" pos:end="19:33">[<expr pos:start="19:32" pos:end="19:32"><name pos:start="19:32" pos:end="19:32">i</name></expr>]</index></name><operator pos:start="19:34" pos:end="19:34">.</operator><name pos:start="19:35" pos:end="19:49">cluster_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
