<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19208.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">exec_close</name><parameter_list pos:start="1:22" pos:end="1:40">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:36">MigrationState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:28"><expr pos:start="7:5" pos:end="7:27"><call pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:11">DPRINTF</name><argument_list pos:start="7:12" pos:end="7:27">(<argument pos:start="7:13" pos:end="7:26"><expr pos:start="7:13" pos:end="7:26"><literal type="string" pos:start="7:13" pos:end="7:26">"exec_close\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:33"><expr pos:start="9:5" pos:end="9:32"><name pos:start="9:5" pos:end="9:7">ret</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:32"><name pos:start="9:11" pos:end="9:21">qemu_fclose</name><argument_list pos:start="9:22" pos:end="9:32">(<argument pos:start="9:23" pos:end="9:31"><expr pos:start="9:23" pos:end="9:31"><name pos:start="9:23" pos:end="9:31"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:31">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:13">opaque</name></name> <operator pos:start="11:15" pos:end="11:15">=</operator> <name pos:start="11:17" pos:end="11:20">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:15"><expr pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:9">fd</name></name> <operator pos:start="13:11" pos:end="13:11">=</operator> <operator pos:start="13:13" pos:end="13:13">-</operator><literal type="number" pos:start="13:14" pos:end="13:14">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:63">(<expr pos:start="15:9" pos:end="15:62"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:14">&gt;=</operator> <literal type="number" pos:start="15:16" pos:end="15:16">0</literal> <operator pos:start="15:18" pos:end="15:19">&amp;&amp;</operator> <operator pos:start="15:21" pos:end="15:21">!</operator><operator pos:start="15:22" pos:end="15:22">(</operator><call pos:start="15:23" pos:end="15:36"><name pos:start="15:23" pos:end="15:31">WIFEXITED</name><argument_list pos:start="15:32" pos:end="15:36">(<argument pos:start="15:33" pos:end="15:35"><expr pos:start="15:33" pos:end="15:35"><name pos:start="15:33" pos:end="15:35">ret</name></expr></argument>)</argument_list></call> <operator pos:start="15:38" pos:end="15:39">&amp;&amp;</operator> <call pos:start="15:41" pos:end="15:56"><name pos:start="15:41" pos:end="15:51">WEXITSTATUS</name><argument_list pos:start="15:52" pos:end="15:56">(<argument pos:start="15:53" pos:end="15:55"><expr pos:start="15:53" pos:end="15:55"><name pos:start="15:53" pos:end="15:55">ret</name></expr></argument>)</argument_list></call> <operator pos:start="15:58" pos:end="15:59">==</operator> <literal type="number" pos:start="15:61" pos:end="15:61">0</literal><operator pos:start="15:62" pos:end="15:62">)</operator></expr>)</condition> <block pos:start="15:65" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:19">

        <comment type="block" pos:start="17:9" pos:end="17:54">/* close succeeded, but non-zero exit code: */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:19"><expr pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <operator pos:start="19:15" pos:end="19:15">-</operator><name pos:start="19:16" pos:end="19:18">EIO</name></expr>;</expr_stmt> <comment type="block" pos:start="19:21" pos:end="19:42">/* fake errno value */</comment>

    </block_content>}</block></if></if_stmt>

    <return pos:start="23:5" pos:end="23:15">return <expr pos:start="23:12" pos:end="23:14"><name pos:start="23:12" pos:end="23:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
