<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24189.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">vfio_container_do_ioctl</name><parameter_list pos:start="1:35" pos:end="3:56">(<parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:47">AddressSpace</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">as</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:68"><decl pos:start="1:54" pos:end="1:68"><type pos:start="1:54" pos:end="1:68"><name pos:start="1:54" pos:end="1:60">int32_t</name></type> <name pos:start="1:62" pos:end="1:68">groupid</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:42"><decl pos:start="3:36" pos:end="3:42"><type pos:start="3:36" pos:end="3:42"><name pos:start="3:36" pos:end="3:38">int</name></type> <name pos:start="3:40" pos:end="3:42">req</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:55"><decl pos:start="3:45" pos:end="3:55"><type pos:start="3:45" pos:end="3:55"><name pos:start="3:45" pos:end="3:48">void</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:55">param</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:15">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">VFIOGroup</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:20">group</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">VFIOContainer</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:28">container</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:16">= <expr pos:start="11:15" pos:end="11:16"><operator pos:start="11:15" pos:end="11:15">-</operator><literal type="number" pos:start="11:16" pos:end="11:16">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:40"><expr pos:start="15:5" pos:end="15:39"><name pos:start="15:5" pos:end="15:9">group</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:39"><name pos:start="15:13" pos:end="15:26">vfio_get_group</name><argument_list pos:start="15:27" pos:end="15:39">(<argument pos:start="15:28" pos:end="15:34"><expr pos:start="15:28" pos:end="15:34"><name pos:start="15:28" pos:end="15:34">groupid</name></expr></argument>, <argument pos:start="15:37" pos:end="15:38"><expr pos:start="15:37" pos:end="15:38"><name pos:start="15:37" pos:end="15:38">as</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:14">group</name></expr>)</condition> <block pos:start="17:17" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:19">

        <expr_stmt pos:start="19:9" pos:end="19:63"><expr pos:start="19:9" pos:end="19:62"><call pos:start="19:9" pos:end="19:62"><name pos:start="19:9" pos:end="19:20">error_report</name><argument_list pos:start="19:21" pos:end="19:62">(<argument pos:start="19:22" pos:end="19:52"><expr pos:start="19:22" pos:end="19:52"><literal type="string" pos:start="19:22" pos:end="19:52">"vfio: group %d not registered"</literal></expr></argument>, <argument pos:start="19:55" pos:end="19:61"><expr pos:start="19:55" pos:end="19:61"><name pos:start="19:55" pos:end="19:61">groupid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:13">container</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:32"><name pos:start="27:17" pos:end="27:21">group</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:32">container</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="41:5"><if pos:start="29:5" pos:end="41:5">if <condition pos:start="29:8" pos:end="29:25">(<expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:13">group</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:24">container</name></name></expr>)</condition> <block pos:start="29:27" pos:end="41:5">{<block_content pos:start="31:9" pos:end="39:9">

        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:46"><name pos:start="31:15" pos:end="31:19">ioctl</name><argument_list pos:start="31:20" pos:end="31:46">(<argument pos:start="31:21" pos:end="31:33"><expr pos:start="31:21" pos:end="31:33"><name pos:start="31:21" pos:end="31:33"><name pos:start="31:21" pos:end="31:29">container</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:33">fd</name></name></expr></argument>, <argument pos:start="31:36" pos:end="31:38"><expr pos:start="31:36" pos:end="31:38"><name pos:start="31:36" pos:end="31:38">req</name></expr></argument>, <argument pos:start="31:41" pos:end="31:45"><expr pos:start="31:41" pos:end="31:45"><name pos:start="31:41" pos:end="31:45">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:20">(<expr pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:15">ret</name> <operator pos:start="33:17" pos:end="33:17">&lt;</operator> <literal type="number" pos:start="33:19" pos:end="33:19">0</literal></expr>)</condition> <block pos:start="33:22" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:73">

            <expr_stmt pos:start="35:13" pos:end="37:73"><expr pos:start="35:13" pos:end="37:72"><call pos:start="35:13" pos:end="37:72"><name pos:start="35:13" pos:end="35:24">error_report</name><argument_list pos:start="35:25" pos:end="37:72">(<argument pos:start="35:26" pos:end="35:76"><expr pos:start="35:26" pos:end="35:76"><literal type="string" pos:start="35:26" pos:end="35:76">"vfio: failed to ioctl %d to container: ret=%d, %s"</literal></expr></argument>,

                         <argument pos:start="37:26" pos:end="37:49"><expr pos:start="37:26" pos:end="37:49"><call pos:start="37:26" pos:end="37:37"><name pos:start="37:26" pos:end="37:32">_IOC_NR</name><argument_list pos:start="37:33" pos:end="37:37">(<argument pos:start="37:34" pos:end="37:36"><expr pos:start="37:34" pos:end="37:36"><name pos:start="37:34" pos:end="37:36">req</name></expr></argument>)</argument_list></call> <operator pos:start="37:39" pos:end="37:39">-</operator> <name pos:start="37:41" pos:end="37:49">VFIO_BASE</name></expr></argument>, <argument pos:start="37:52" pos:end="37:54"><expr pos:start="37:52" pos:end="37:54"><name pos:start="37:52" pos:end="37:54">ret</name></expr></argument>, <argument pos:start="37:57" pos:end="37:71"><expr pos:start="37:57" pos:end="37:71"><call pos:start="37:57" pos:end="37:71"><name pos:start="37:57" pos:end="37:64">strerror</name><argument_list pos:start="37:65" pos:end="37:71">(<argument pos:start="37:66" pos:end="37:70"><expr pos:start="37:66" pos:end="37:70"><name pos:start="37:66" pos:end="37:70">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:26"><expr pos:start="45:5" pos:end="45:25"><call pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:18">vfio_put_group</name><argument_list pos:start="45:19" pos:end="45:25">(<argument pos:start="45:20" pos:end="45:24"><expr pos:start="45:20" pos:end="45:24"><name pos:start="45:20" pos:end="45:24">group</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="49:5" pos:end="49:15">return <expr pos:start="49:12" pos:end="49:14"><name pos:start="49:12" pos:end="49:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
