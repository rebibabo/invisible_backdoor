<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26869.c" pos:tabs="8"><function pos:start="1:1" pos:end="217:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">http_receive_data</name><parameter_list pos:start="1:29" pos:end="1:44">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">HTTPContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="217:1">{<block_content pos:start="5:5" pos:end="215:14">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">HTTPContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">c1</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="43:5"><if pos:start="9:5" pos:end="43:5">if <condition pos:start="9:8" pos:end="9:38">(<expr pos:start="9:9" pos:end="9:37"><name pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:9">c</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:21">buffer_end</name></name> <operator pos:start="9:23" pos:end="9:23">&gt;</operator> <name pos:start="9:25" pos:end="9:37"><name pos:start="9:25" pos:end="9:25">c</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:37">buffer_ptr</name></name></expr>)</condition> <block pos:start="9:40" pos:end="43:5">{<block_content pos:start="11:9" pos:end="41:9">

        <decl_stmt pos:start="11:9" pos:end="11:16"><decl pos:start="11:9" pos:end="11:15"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:15">len</name></decl>;</decl_stmt>



        <expr_stmt pos:start="15:9" pos:end="15:75"><expr pos:start="15:9" pos:end="15:74"><name pos:start="15:9" pos:end="15:11">len</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:74"><name pos:start="15:15" pos:end="15:18">recv</name><argument_list pos:start="15:19" pos:end="15:74">(<argument pos:start="15:20" pos:end="15:24"><expr pos:start="15:20" pos:end="15:24"><name pos:start="15:20" pos:end="15:24"><name pos:start="15:20" pos:end="15:20">c</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:24">fd</name></name></expr></argument>, <argument pos:start="15:27" pos:end="15:39"><expr pos:start="15:27" pos:end="15:39"><name pos:start="15:27" pos:end="15:39"><name pos:start="15:27" pos:end="15:27">c</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:39">buffer_ptr</name></name></expr></argument>, <argument pos:start="15:42" pos:end="15:70"><expr pos:start="15:42" pos:end="15:70"><name pos:start="15:42" pos:end="15:54"><name pos:start="15:42" pos:end="15:42">c</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:54">buffer_end</name></name> <operator pos:start="15:56" pos:end="15:56">-</operator> <name pos:start="15:58" pos:end="15:70"><name pos:start="15:58" pos:end="15:58">c</name><operator pos:start="15:59" pos:end="15:60">-&gt;</operator><name pos:start="15:61" pos:end="15:70">buffer_ptr</name></name></expr></argument>, <argument pos:start="15:73" pos:end="15:73"><expr pos:start="15:73" pos:end="15:73"><literal type="number" pos:start="15:73" pos:end="15:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="41:9"><if pos:start="17:9" pos:end="27:9">if <condition pos:start="17:12" pos:end="17:20">(<expr pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:15">len</name> <operator pos:start="17:17" pos:end="17:17">&lt;</operator> <literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr>)</condition> <block pos:start="17:22" pos:end="27:9">{<block_content pos:start="19:13" pos:end="25:26">

            <if_stmt pos:start="19:13" pos:end="25:26"><if pos:start="19:13" pos:end="25:26">if <condition pos:start="19:16" pos:end="21:52">(<expr pos:start="19:17" pos:end="21:51"><call pos:start="19:17" pos:end="19:29"><name pos:start="19:17" pos:end="19:27">ff_neterrno</name><argument_list pos:start="19:28" pos:end="19:29">()</argument_list></call> <operator pos:start="19:31" pos:end="19:32">!=</operator> <call pos:start="19:34" pos:end="19:52"><name pos:start="19:34" pos:end="19:44">FF_NETERROR</name><argument_list pos:start="19:45" pos:end="19:52">(<argument pos:start="19:46" pos:end="19:51"><expr pos:start="19:46" pos:end="19:51"><name pos:start="19:46" pos:end="19:51">EAGAIN</name></expr></argument>)</argument_list></call> <operator pos:start="19:54" pos:end="19:55">&amp;&amp;</operator>

                <call pos:start="21:17" pos:end="21:29"><name pos:start="21:17" pos:end="21:27">ff_neterrno</name><argument_list pos:start="21:28" pos:end="21:29">()</argument_list></call> <operator pos:start="21:31" pos:end="21:32">!=</operator> <call pos:start="21:34" pos:end="21:51"><name pos:start="21:34" pos:end="21:44">FF_NETERROR</name><argument_list pos:start="21:45" pos:end="21:51">(<argument pos:start="21:46" pos:end="21:50"><expr pos:start="21:46" pos:end="21:50"><name pos:start="21:46" pos:end="21:50">EINTR</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:26"><block_content pos:start="25:17" pos:end="25:26">

                <comment type="block" pos:start="23:17" pos:end="23:46">/* error : close connection */</comment>

                <goto pos:start="25:17" pos:end="25:26">goto <name pos:start="25:22" pos:end="25:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="27:11" pos:end="31:22">else if <condition pos:start="27:19" pos:end="27:28">(<expr pos:start="27:20" pos:end="27:27"><name pos:start="27:20" pos:end="27:22">len</name> <operator pos:start="27:24" pos:end="27:25">==</operator> <literal type="number" pos:start="27:27" pos:end="27:27">0</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:22"><block_content pos:start="31:13" pos:end="31:22">

            <comment type="block" pos:start="29:13" pos:end="29:46">/* end of connection : close it */</comment>

            <goto pos:start="31:13" pos:end="31:22">goto <name pos:start="31:18" pos:end="31:21">fail</name>;</goto></block_content></block></if>

        <else pos:start="33:9" pos:end="41:9">else <block pos:start="33:14" pos:end="41:9">{<block_content pos:start="35:13" pos:end="39:57">

            <expr_stmt pos:start="35:13" pos:end="35:33"><expr pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:13">c</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:25">buffer_ptr</name></name> <operator pos:start="35:27" pos:end="35:28">+=</operator> <name pos:start="35:30" pos:end="35:32">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:33"><expr pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:13">c</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:25">data_count</name></name> <operator pos:start="37:27" pos:end="37:28">+=</operator> <name pos:start="37:30" pos:end="37:32">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:57"><expr pos:start="39:13" pos:end="39:56"><call pos:start="39:13" pos:end="39:56"><name pos:start="39:13" pos:end="39:27">update_datarate</name><argument_list pos:start="39:28" pos:end="39:56">(<argument pos:start="39:29" pos:end="39:40"><expr pos:start="39:29" pos:end="39:40"><operator pos:start="39:29" pos:end="39:29">&amp;</operator><name pos:start="39:30" pos:end="39:40"><name pos:start="39:30" pos:end="39:30">c</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:40">datarate</name></name></expr></argument>, <argument pos:start="39:43" pos:end="39:55"><expr pos:start="39:43" pos:end="39:55"><name pos:start="39:43" pos:end="39:55"><name pos:start="39:43" pos:end="39:43">c</name><operator pos:start="39:44" pos:end="39:45">-&gt;</operator><name pos:start="39:46" pos:end="39:55">data_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="59:5"><if pos:start="47:5" pos:end="59:5">if <condition pos:start="47:8" pos:end="47:74">(<expr pos:start="47:9" pos:end="47:73"><name pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:9">c</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:21">buffer_ptr</name></name> <operator pos:start="47:23" pos:end="47:23">-</operator> <name pos:start="47:25" pos:end="47:33"><name pos:start="47:25" pos:end="47:25">c</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:33">buffer</name></name> <operator pos:start="47:35" pos:end="47:36">&gt;=</operator> <literal type="number" pos:start="47:38" pos:end="47:38">2</literal> <operator pos:start="47:40" pos:end="47:41">&amp;&amp;</operator> <name pos:start="47:43" pos:end="47:55"><name pos:start="47:43" pos:end="47:43">c</name><operator pos:start="47:44" pos:end="47:45">-&gt;</operator><name pos:start="47:46" pos:end="47:55">data_count</name></name> <operator pos:start="47:57" pos:end="47:57">&gt;</operator> <name pos:start="47:59" pos:end="47:73">FFM_PACKET_SIZE</name></expr>)</condition> <block pos:start="47:76" pos:end="59:5">{<block_content pos:start="49:9" pos:end="57:9">

        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="51:32">(<expr pos:start="49:13" pos:end="51:31"><name pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:13">c</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:21">buffer</name><index pos:start="49:22" pos:end="49:24">[<expr pos:start="49:23" pos:end="49:23"><literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr>]</index></name> <operator pos:start="49:26" pos:end="49:27">!=</operator> <literal type="char" pos:start="49:29" pos:end="49:31">'f'</literal> <operator pos:start="49:33" pos:end="49:34">||</operator>

            <name pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:13">c</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:21">buffer</name><index pos:start="51:22" pos:end="51:24">[<expr pos:start="51:23" pos:end="51:23"><literal type="number" pos:start="51:23" pos:end="51:23">1</literal></expr>]</index></name> <operator pos:start="51:26" pos:end="51:27">!=</operator> <literal type="char" pos:start="51:29" pos:end="51:31">'m'</literal></expr>)</condition> <block pos:start="51:34" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:22">

            <expr_stmt pos:start="53:13" pos:end="53:81"><expr pos:start="53:13" pos:end="53:80"><call pos:start="53:13" pos:end="53:80"><name pos:start="53:13" pos:end="53:20">http_log</name><argument_list pos:start="53:21" pos:end="53:80">(<argument pos:start="53:22" pos:end="53:79"><expr pos:start="53:22" pos:end="53:79"><literal type="string" pos:start="53:22" pos:end="53:79">"Feed stream has become desynchronized -- disconnecting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="55:13" pos:end="55:22">goto <name pos:start="55:18" pos:end="55:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="191:5"><if pos:start="63:5" pos:end="191:5">if <condition pos:start="63:8" pos:end="63:39">(<expr pos:start="63:9" pos:end="63:38"><name pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:9">c</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:21">buffer_ptr</name></name> <operator pos:start="63:23" pos:end="63:24">&gt;=</operator> <name pos:start="63:26" pos:end="63:38"><name pos:start="63:26" pos:end="63:26">c</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:38">buffer_end</name></name></expr>)</condition> <block pos:start="63:41" pos:end="191:5">{<block_content pos:start="65:9" pos:end="189:34">

        <decl_stmt pos:start="65:9" pos:end="65:35"><decl pos:start="65:9" pos:end="65:34"><type pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:16">FFStream</name> <modifier pos:start="65:18" pos:end="65:18">*</modifier></type><name pos:start="65:19" pos:end="65:22">feed</name> <init pos:start="65:24" pos:end="65:34">= <expr pos:start="65:26" pos:end="65:34"><name pos:start="65:26" pos:end="65:34"><name pos:start="65:26" pos:end="65:26">c</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:34">stream</name></name></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="67:9" pos:end="69:23">/* a packet has been received : write it in the store, except

           if header */</comment>

        <if_stmt pos:start="71:9" pos:end="187:9"><if pos:start="71:9" pos:end="127:9">if <condition pos:start="71:12" pos:end="71:44">(<expr pos:start="71:13" pos:end="71:43"><name pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:13">c</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:25">data_count</name></name> <operator pos:start="71:27" pos:end="71:27">&gt;</operator> <name pos:start="71:29" pos:end="71:43">FFM_PACKET_SIZE</name></expr>)</condition> <block pos:start="71:46" pos:end="127:9">{<block_content pos:start="79:13" pos:end="125:13">



            <comment type="line" pos:start="75:13" pos:end="75:120">//            printf("writing pos=0x%"PRIx64" size=0x%"PRIx64"\n", feed-&gt;feed_write_index, feed-&gt;feed_size);</comment>

            <comment type="block" pos:start="77:13" pos:end="77:45">/* XXX: use llseek or url_seek */</comment>

            <expr_stmt pos:start="79:13" pos:end="79:64"><expr pos:start="79:13" pos:end="79:63"><call pos:start="79:13" pos:end="79:63"><name pos:start="79:13" pos:end="79:17">lseek</name><argument_list pos:start="79:18" pos:end="79:63">(<argument pos:start="79:19" pos:end="79:28"><expr pos:start="79:19" pos:end="79:28"><name pos:start="79:19" pos:end="79:28"><name pos:start="79:19" pos:end="79:19">c</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:28">feed_fd</name></name></expr></argument>, <argument pos:start="79:31" pos:end="79:52"><expr pos:start="79:31" pos:end="79:52"><name pos:start="79:31" pos:end="79:52"><name pos:start="79:31" pos:end="79:34">feed</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:52">feed_write_index</name></name></expr></argument>, <argument pos:start="79:55" pos:end="79:62"><expr pos:start="79:55" pos:end="79:62"><name pos:start="79:55" pos:end="79:62">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="81:13" pos:end="87:13"><if pos:start="81:13" pos:end="87:13">if <condition pos:start="81:16" pos:end="81:66">(<expr pos:start="81:17" pos:end="81:65"><call pos:start="81:17" pos:end="81:61"><name pos:start="81:17" pos:end="81:21">write</name><argument_list pos:start="81:22" pos:end="81:61">(<argument pos:start="81:23" pos:end="81:32"><expr pos:start="81:23" pos:end="81:32"><name pos:start="81:23" pos:end="81:32"><name pos:start="81:23" pos:end="81:23">c</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:32">feed_fd</name></name></expr></argument>, <argument pos:start="81:35" pos:end="81:43"><expr pos:start="81:35" pos:end="81:43"><name pos:start="81:35" pos:end="81:43"><name pos:start="81:35" pos:end="81:35">c</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:43">buffer</name></name></expr></argument>, <argument pos:start="81:46" pos:end="81:60"><expr pos:start="81:46" pos:end="81:60"><name pos:start="81:46" pos:end="81:60">FFM_PACKET_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="81:63" pos:end="81:63">&lt;</operator> <literal type="number" pos:start="81:65" pos:end="81:65">0</literal></expr>)</condition> <block pos:start="81:68" pos:end="87:13">{<block_content pos:start="83:17" pos:end="85:26">

                <expr_stmt pos:start="83:17" pos:end="83:78"><expr pos:start="83:17" pos:end="83:77"><call pos:start="83:17" pos:end="83:77"><name pos:start="83:17" pos:end="83:24">http_log</name><argument_list pos:start="83:25" pos:end="83:77">(<argument pos:start="83:26" pos:end="83:59"><expr pos:start="83:26" pos:end="83:59"><literal type="string" pos:start="83:26" pos:end="83:59">"Error writing to feed file: %s\n"</literal></expr></argument>, <argument pos:start="83:62" pos:end="83:76"><expr pos:start="83:62" pos:end="83:76"><call pos:start="83:62" pos:end="83:76"><name pos:start="83:62" pos:end="83:69">strerror</name><argument_list pos:start="83:70" pos:end="83:76">(<argument pos:start="83:71" pos:end="83:75"><expr pos:start="83:71" pos:end="83:75"><name pos:start="83:71" pos:end="83:75">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="85:17" pos:end="85:26">goto <name pos:start="85:22" pos:end="85:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="91:13" pos:end="91:54"><expr pos:start="91:13" pos:end="91:53"><name pos:start="91:13" pos:end="91:34"><name pos:start="91:13" pos:end="91:16">feed</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:34">feed_write_index</name></name> <operator pos:start="91:36" pos:end="91:37">+=</operator> <name pos:start="91:39" pos:end="91:53">FFM_PACKET_SIZE</name></expr>;</expr_stmt>

            <comment type="block" pos:start="93:13" pos:end="93:34">/* update file size */</comment>

            <if_stmt pos:start="95:13" pos:end="97:57"><if pos:start="95:13" pos:end="97:57">if <condition pos:start="95:16" pos:end="95:62">(<expr pos:start="95:17" pos:end="95:61"><name pos:start="95:17" pos:end="95:38"><name pos:start="95:17" pos:end="95:20">feed</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:38">feed_write_index</name></name> <operator pos:start="95:40" pos:end="95:40">&gt;</operator> <name pos:start="95:42" pos:end="95:61"><name pos:start="95:42" pos:end="95:42">c</name><operator pos:start="95:43" pos:end="95:44">-&gt;</operator><name pos:start="95:45" pos:end="95:50">stream</name><operator pos:start="95:51" pos:end="95:52">-&gt;</operator><name pos:start="95:53" pos:end="95:61">feed_size</name></name></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:57"><block_content pos:start="97:17" pos:end="97:57">

                <expr_stmt pos:start="97:17" pos:end="97:57"><expr pos:start="97:17" pos:end="97:56"><name pos:start="97:17" pos:end="97:31"><name pos:start="97:17" pos:end="97:20">feed</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:31">feed_size</name></name> <operator pos:start="97:33" pos:end="97:33">=</operator> <name pos:start="97:35" pos:end="97:56"><name pos:start="97:35" pos:end="97:38">feed</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:56">feed_write_index</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="101:13" pos:end="101:61">/* handle wrap around if max file size reached */</comment>

            <if_stmt pos:start="103:13" pos:end="105:57"><if pos:start="103:13" pos:end="105:57">if <condition pos:start="103:16" pos:end="103:95">(<expr pos:start="103:17" pos:end="103:94"><name pos:start="103:17" pos:end="103:40"><name pos:start="103:17" pos:end="103:17">c</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:25">stream</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:40">feed_max_size</name></name> <operator pos:start="103:42" pos:end="103:43">&amp;&amp;</operator> <name pos:start="103:45" pos:end="103:66"><name pos:start="103:45" pos:end="103:48">feed</name><operator pos:start="103:49" pos:end="103:50">-&gt;</operator><name pos:start="103:51" pos:end="103:66">feed_write_index</name></name> <operator pos:start="103:68" pos:end="103:69">&gt;=</operator> <name pos:start="103:71" pos:end="103:94"><name pos:start="103:71" pos:end="103:71">c</name><operator pos:start="103:72" pos:end="103:73">-&gt;</operator><name pos:start="103:74" pos:end="103:79">stream</name><operator pos:start="103:80" pos:end="103:81">-&gt;</operator><name pos:start="103:82" pos:end="103:94">feed_max_size</name></name></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:57"><block_content pos:start="105:17" pos:end="105:57">

                <expr_stmt pos:start="105:17" pos:end="105:57"><expr pos:start="105:17" pos:end="105:56"><name pos:start="105:17" pos:end="105:38"><name pos:start="105:17" pos:end="105:20">feed</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:38">feed_write_index</name></name> <operator pos:start="105:40" pos:end="105:40">=</operator> <name pos:start="105:42" pos:end="105:56">FFM_PACKET_SIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="109:13" pos:end="109:29">/* write index */</comment>

            <expr_stmt pos:start="111:13" pos:end="111:70"><expr pos:start="111:13" pos:end="111:69"><call pos:start="111:13" pos:end="111:69"><name pos:start="111:13" pos:end="111:33">ffm_write_write_index</name><argument_list pos:start="111:34" pos:end="111:69">(<argument pos:start="111:35" pos:end="111:44"><expr pos:start="111:35" pos:end="111:44"><name pos:start="111:35" pos:end="111:44"><name pos:start="111:35" pos:end="111:35">c</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:44">feed_fd</name></name></expr></argument>, <argument pos:start="111:47" pos:end="111:68"><expr pos:start="111:47" pos:end="111:68"><name pos:start="111:47" pos:end="111:68"><name pos:start="111:47" pos:end="111:50">feed</name><operator pos:start="111:51" pos:end="111:52">-&gt;</operator><name pos:start="111:53" pos:end="111:68">feed_write_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="115:13" pos:end="115:49">/* wake up any waiting connections */</comment>

            <for pos:start="117:13" pos:end="125:13">for<control pos:start="117:16" pos:end="117:63">(<init pos:start="117:17" pos:end="117:36"><expr pos:start="117:17" pos:end="117:35"><name pos:start="117:17" pos:end="117:18">c1</name> <operator pos:start="117:20" pos:end="117:20">=</operator> <name pos:start="117:22" pos:end="117:35">first_http_ctx</name></expr>;</init> <condition pos:start="117:38" pos:end="117:48"><expr pos:start="117:38" pos:end="117:47"><name pos:start="117:38" pos:end="117:39">c1</name> <operator pos:start="117:41" pos:end="117:42">!=</operator> <name pos:start="117:44" pos:end="117:47">NULL</name></expr>;</condition> <incr pos:start="117:50" pos:end="117:62"><expr pos:start="117:50" pos:end="117:62"><name pos:start="117:50" pos:end="117:51">c1</name> <operator pos:start="117:53" pos:end="117:53">=</operator> <name pos:start="117:55" pos:end="117:62"><name pos:start="117:55" pos:end="117:56">c1</name><operator pos:start="117:57" pos:end="117:58">-&gt;</operator><name pos:start="117:59" pos:end="117:62">next</name></name></expr></incr>)</control> <block pos:start="117:65" pos:end="125:13">{<block_content pos:start="119:17" pos:end="123:52">

                <if_stmt pos:start="119:17" pos:end="123:52"><if pos:start="119:17" pos:end="123:52">if <condition pos:start="119:20" pos:end="121:56">(<expr pos:start="119:21" pos:end="121:55"><name pos:start="119:21" pos:end="119:29"><name pos:start="119:21" pos:end="119:22">c1</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:29">state</name></name> <operator pos:start="119:31" pos:end="119:32">==</operator> <name pos:start="119:34" pos:end="119:52">HTTPSTATE_WAIT_FEED</name> <operator pos:start="119:54" pos:end="119:55">&amp;&amp;</operator>

                    <name pos:start="121:21" pos:end="121:36"><name pos:start="121:21" pos:end="121:22">c1</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:30">stream</name><operator pos:start="121:31" pos:end="121:32">-&gt;</operator><name pos:start="121:33" pos:end="121:36">feed</name></name> <operator pos:start="121:38" pos:end="121:39">==</operator> <name pos:start="121:41" pos:end="121:55"><name pos:start="121:41" pos:end="121:41">c</name><operator pos:start="121:42" pos:end="121:43">-&gt;</operator><name pos:start="121:44" pos:end="121:49">stream</name><operator pos:start="121:50" pos:end="121:51">-&gt;</operator><name pos:start="121:52" pos:end="121:55">feed</name></name></expr>)</condition><block type="pseudo" pos:start="123:21" pos:end="123:52"><block_content pos:start="123:21" pos:end="123:52">

                    <expr_stmt pos:start="123:21" pos:end="123:52"><expr pos:start="123:21" pos:end="123:51"><name pos:start="123:21" pos:end="123:29"><name pos:start="123:21" pos:end="123:22">c1</name><operator pos:start="123:23" pos:end="123:24">-&gt;</operator><name pos:start="123:25" pos:end="123:29">state</name></name> <operator pos:start="123:31" pos:end="123:31">=</operator> <name pos:start="123:33" pos:end="123:51">HTTPSTATE_SEND_DATA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="127:11" pos:end="187:9">else <block pos:start="127:16" pos:end="187:9">{<block_content pos:start="131:13" pos:end="185:24">

            <comment type="block" pos:start="129:13" pos:end="129:73">/* We have a header in our hands that contains useful data */</comment>

            <decl_stmt pos:start="131:13" pos:end="131:38"><decl pos:start="131:13" pos:end="131:37"><type pos:start="131:13" pos:end="131:29"><name pos:start="131:13" pos:end="131:27">AVFormatContext</name> <modifier pos:start="131:29" pos:end="131:29">*</modifier></type><name pos:start="131:30" pos:end="131:30">s</name> <init pos:start="131:32" pos:end="131:37">= <expr pos:start="131:34" pos:end="131:37"><name pos:start="131:34" pos:end="131:37">NULL</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="133:13" pos:end="133:30"><decl pos:start="133:13" pos:end="133:29"><type pos:start="133:13" pos:end="133:27"><name pos:start="133:13" pos:end="133:25">ByteIOContext</name> <modifier pos:start="133:27" pos:end="133:27">*</modifier></type><name pos:start="133:28" pos:end="133:29">pb</name></decl>;</decl_stmt>

            <decl_stmt pos:start="135:13" pos:end="135:34"><decl pos:start="135:13" pos:end="135:33"><type pos:start="135:13" pos:end="135:27"><name pos:start="135:13" pos:end="135:25">AVInputFormat</name> <modifier pos:start="135:27" pos:end="135:27">*</modifier></type><name pos:start="135:28" pos:end="135:33">fmt_in</name></decl>;</decl_stmt>

            <decl_stmt pos:start="137:13" pos:end="137:18"><decl pos:start="137:13" pos:end="137:17"><type pos:start="137:13" pos:end="137:15"><name pos:start="137:13" pos:end="137:15">int</name></type> <name pos:start="137:17" pos:end="137:17">i</name></decl>;</decl_stmt>



            <expr_stmt pos:start="141:13" pos:end="141:80"><expr pos:start="141:13" pos:end="141:79"><call pos:start="141:13" pos:end="141:79"><name pos:start="141:13" pos:end="141:24">url_open_buf</name><argument_list pos:start="141:25" pos:end="141:79">(<argument pos:start="141:26" pos:end="141:28"><expr pos:start="141:26" pos:end="141:28"><operator pos:start="141:26" pos:end="141:26">&amp;</operator><name pos:start="141:27" pos:end="141:28">pb</name></expr></argument>, <argument pos:start="141:31" pos:end="141:39"><expr pos:start="141:31" pos:end="141:39"><name pos:start="141:31" pos:end="141:39"><name pos:start="141:31" pos:end="141:31">c</name><operator pos:start="141:32" pos:end="141:33">-&gt;</operator><name pos:start="141:34" pos:end="141:39">buffer</name></name></expr></argument>, <argument pos:start="141:42" pos:end="141:66"><expr pos:start="141:42" pos:end="141:66"><name pos:start="141:42" pos:end="141:54"><name pos:start="141:42" pos:end="141:42">c</name><operator pos:start="141:43" pos:end="141:44">-&gt;</operator><name pos:start="141:45" pos:end="141:54">buffer_end</name></name> <operator pos:start="141:56" pos:end="141:56">-</operator> <name pos:start="141:58" pos:end="141:66"><name pos:start="141:58" pos:end="141:58">c</name><operator pos:start="141:59" pos:end="141:60">-&gt;</operator><name pos:start="141:61" pos:end="141:66">buffer</name></name></expr></argument>, <argument pos:start="141:69" pos:end="141:78"><expr pos:start="141:69" pos:end="141:78"><name pos:start="141:69" pos:end="141:78">URL_RDONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:32"><expr pos:start="143:13" pos:end="143:31"><name pos:start="143:13" pos:end="143:27"><name pos:start="143:13" pos:end="143:14">pb</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:27">is_streamed</name></name> <operator pos:start="143:29" pos:end="143:29">=</operator> <literal type="number" pos:start="143:31" pos:end="143:31">1</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="147:13" pos:end="147:80">/* use feed output format name to find corresponding input format */</comment>

            <expr_stmt pos:start="149:13" pos:end="149:59"><expr pos:start="149:13" pos:end="149:58"><name pos:start="149:13" pos:end="149:18">fmt_in</name> <operator pos:start="149:20" pos:end="149:20">=</operator> <call pos:start="149:22" pos:end="149:58"><name pos:start="149:22" pos:end="149:41">av_find_input_format</name><argument_list pos:start="149:42" pos:end="149:58">(<argument pos:start="149:43" pos:end="149:57"><expr pos:start="149:43" pos:end="149:57"><name pos:start="149:43" pos:end="149:57"><name pos:start="149:43" pos:end="149:46">feed</name><operator pos:start="149:47" pos:end="149:48">-&gt;</operator><name pos:start="149:49" pos:end="149:51">fmt</name><operator pos:start="149:52" pos:end="149:53">-&gt;</operator><name pos:start="149:54" pos:end="149:57">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="151:13" pos:end="153:26"><if pos:start="151:13" pos:end="153:26">if <condition pos:start="151:16" pos:end="151:24">(<expr pos:start="151:17" pos:end="151:23"><operator pos:start="151:17" pos:end="151:17">!</operator><name pos:start="151:18" pos:end="151:23">fmt_in</name></expr>)</condition><block type="pseudo" pos:start="153:17" pos:end="153:26"><block_content pos:start="153:17" pos:end="153:26">

                <goto pos:start="153:17" pos:end="153:26">goto <name pos:start="153:22" pos:end="153:25">fail</name>;</goto></block_content></block></if></if_stmt>



            <expr_stmt pos:start="157:13" pos:end="157:81"><expr pos:start="157:13" pos:end="157:80"><call pos:start="157:13" pos:end="157:80"><name pos:start="157:13" pos:end="157:32">av_open_input_stream</name><argument_list pos:start="157:33" pos:end="157:80">(<argument pos:start="157:34" pos:end="157:35"><expr pos:start="157:34" pos:end="157:35"><operator pos:start="157:34" pos:end="157:34">&amp;</operator><name pos:start="157:35" pos:end="157:35">s</name></expr></argument>, <argument pos:start="157:38" pos:end="157:39"><expr pos:start="157:38" pos:end="157:39"><name pos:start="157:38" pos:end="157:39">pb</name></expr></argument>, <argument pos:start="157:42" pos:end="157:65"><expr pos:start="157:42" pos:end="157:65"><name pos:start="157:42" pos:end="157:65"><name pos:start="157:42" pos:end="157:42">c</name><operator pos:start="157:43" pos:end="157:44">-&gt;</operator><name pos:start="157:45" pos:end="157:50">stream</name><operator pos:start="157:51" pos:end="157:52">-&gt;</operator><name pos:start="157:53" pos:end="157:65">feed_filename</name></name></expr></argument>, <argument pos:start="157:68" pos:end="157:73"><expr pos:start="157:68" pos:end="157:73"><name pos:start="157:68" pos:end="157:73">fmt_in</name></expr></argument>, <argument pos:start="157:76" pos:end="157:79"><expr pos:start="157:76" pos:end="157:79"><name pos:start="157:76" pos:end="157:79">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="161:13" pos:end="161:48">/* Now we have the actual streams */</comment>

            <if_stmt pos:start="163:13" pos:end="171:13"><if pos:start="163:13" pos:end="171:13">if <condition pos:start="163:16" pos:end="163:50">(<expr pos:start="163:17" pos:end="163:49"><name pos:start="163:17" pos:end="163:29"><name pos:start="163:17" pos:end="163:17">s</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:29">nb_streams</name></name> <operator pos:start="163:31" pos:end="163:32">!=</operator> <name pos:start="163:34" pos:end="163:49"><name pos:start="163:34" pos:end="163:37">feed</name><operator pos:start="163:38" pos:end="163:39">-&gt;</operator><name pos:start="163:40" pos:end="163:49">nb_streams</name></name></expr>)</condition> <block pos:start="163:52" pos:end="171:13">{<block_content pos:start="165:17" pos:end="169:26">

                <expr_stmt pos:start="165:17" pos:end="165:41"><expr pos:start="165:17" pos:end="165:40"><call pos:start="165:17" pos:end="165:40"><name pos:start="165:17" pos:end="165:37">av_close_input_stream</name><argument_list pos:start="165:38" pos:end="165:40">(<argument pos:start="165:39" pos:end="165:39"><expr pos:start="165:39" pos:end="165:39"><name pos:start="165:39" pos:end="165:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:28"><expr pos:start="167:17" pos:end="167:27"><call pos:start="167:17" pos:end="167:27"><name pos:start="167:17" pos:end="167:23">av_free</name><argument_list pos:start="167:24" pos:end="167:27">(<argument pos:start="167:25" pos:end="167:26"><expr pos:start="167:25" pos:end="167:26"><name pos:start="167:25" pos:end="167:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="169:17" pos:end="169:26">goto <name pos:start="169:22" pos:end="169:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <for pos:start="175:13" pos:end="179:69">for <control pos:start="175:17" pos:end="175:47">(<init pos:start="175:18" pos:end="175:23"><expr pos:start="175:18" pos:end="175:22"><name pos:start="175:18" pos:end="175:18">i</name> <operator pos:start="175:20" pos:end="175:20">=</operator> <literal type="number" pos:start="175:22" pos:end="175:22">0</literal></expr>;</init> <condition pos:start="175:25" pos:end="175:42"><expr pos:start="175:25" pos:end="175:41"><name pos:start="175:25" pos:end="175:25">i</name> <operator pos:start="175:27" pos:end="175:27">&lt;</operator> <name pos:start="175:29" pos:end="175:41"><name pos:start="175:29" pos:end="175:29">s</name><operator pos:start="175:30" pos:end="175:31">-&gt;</operator><name pos:start="175:32" pos:end="175:41">nb_streams</name></name></expr>;</condition> <incr pos:start="175:44" pos:end="175:46"><expr pos:start="175:44" pos:end="175:46"><name pos:start="175:44" pos:end="175:44">i</name><operator pos:start="175:45" pos:end="175:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="177:17" pos:end="179:69"><block_content pos:start="177:17" pos:end="179:69">

                <expr_stmt pos:start="177:17" pos:end="179:69"><expr pos:start="177:17" pos:end="179:68"><call pos:start="177:17" pos:end="179:68"><name pos:start="177:17" pos:end="177:22">memcpy</name><argument_list pos:start="177:23" pos:end="179:68">(<argument pos:start="177:24" pos:end="177:46"><expr pos:start="177:24" pos:end="177:46"><name pos:start="177:24" pos:end="177:39"><name pos:start="177:24" pos:end="177:27">feed</name><operator pos:start="177:28" pos:end="177:29">-&gt;</operator><name pos:start="177:30" pos:end="177:36">streams</name><index pos:start="177:37" pos:end="177:39">[<expr pos:start="177:38" pos:end="177:38"><name pos:start="177:38" pos:end="177:38">i</name></expr>]</index></name><operator pos:start="177:40" pos:end="177:41">-&gt;</operator><name pos:start="177:42" pos:end="177:46">codec</name></expr></argument>,

                       <argument pos:start="179:24" pos:end="179:43"><expr pos:start="179:24" pos:end="179:43"><name pos:start="179:24" pos:end="179:36"><name pos:start="179:24" pos:end="179:24">s</name><operator pos:start="179:25" pos:end="179:26">-&gt;</operator><name pos:start="179:27" pos:end="179:33">streams</name><index pos:start="179:34" pos:end="179:36">[<expr pos:start="179:35" pos:end="179:35"><name pos:start="179:35" pos:end="179:35">i</name></expr>]</index></name><operator pos:start="179:37" pos:end="179:38">-&gt;</operator><name pos:start="179:39" pos:end="179:43">codec</name></expr></argument>, <argument pos:start="179:46" pos:end="179:67"><expr pos:start="179:46" pos:end="179:67"><sizeof pos:start="179:46" pos:end="179:67">sizeof<argument_list pos:start="179:52" pos:end="179:67">(<argument pos:start="179:53" pos:end="179:66"><expr pos:start="179:53" pos:end="179:66"><name pos:start="179:53" pos:end="179:66">AVCodecContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="183:13" pos:end="183:37"><expr pos:start="183:13" pos:end="183:36"><call pos:start="183:13" pos:end="183:36"><name pos:start="183:13" pos:end="183:33">av_close_input_stream</name><argument_list pos:start="183:34" pos:end="183:36">(<argument pos:start="183:35" pos:end="183:35"><expr pos:start="183:35" pos:end="183:35"><name pos:start="183:35" pos:end="183:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:24"><expr pos:start="185:13" pos:end="185:23"><call pos:start="185:13" pos:end="185:23"><name pos:start="185:13" pos:end="185:19">av_free</name><argument_list pos:start="185:20" pos:end="185:23">(<argument pos:start="185:21" pos:end="185:22"><expr pos:start="185:21" pos:end="185:22"><name pos:start="185:21" pos:end="185:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:34"><expr pos:start="189:9" pos:end="189:33"><name pos:start="189:9" pos:end="189:21"><name pos:start="189:9" pos:end="189:9">c</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:21">buffer_ptr</name></name> <operator pos:start="189:23" pos:end="189:23">=</operator> <name pos:start="189:25" pos:end="189:33"><name pos:start="189:25" pos:end="189:25">c</name><operator pos:start="189:26" pos:end="189:27">-&gt;</operator><name pos:start="189:28" pos:end="189:33">buffer</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="195:5" pos:end="195:13">return <expr pos:start="195:12" pos:end="195:12"><literal type="number" pos:start="195:12" pos:end="195:12">0</literal></expr>;</return>

 <label pos:start="197:2" pos:end="197:6"><name pos:start="197:2" pos:end="197:5">fail</name>:</label>

    <expr_stmt pos:start="199:5" pos:end="199:31"><expr pos:start="199:5" pos:end="199:30"><name pos:start="199:5" pos:end="199:26"><name pos:start="199:5" pos:end="199:5">c</name><operator pos:start="199:6" pos:end="199:7">-&gt;</operator><name pos:start="199:8" pos:end="199:13">stream</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:26">feed_opened</name></name> <operator pos:start="199:28" pos:end="199:28">=</operator> <literal type="number" pos:start="199:30" pos:end="199:30">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:22"><expr pos:start="201:5" pos:end="201:21"><call pos:start="201:5" pos:end="201:21"><name pos:start="201:5" pos:end="201:9">close</name><argument_list pos:start="201:10" pos:end="201:21">(<argument pos:start="201:11" pos:end="201:20"><expr pos:start="201:11" pos:end="201:20"><name pos:start="201:11" pos:end="201:20"><name pos:start="201:11" pos:end="201:11">c</name><operator pos:start="201:12" pos:end="201:13">-&gt;</operator><name pos:start="201:14" pos:end="201:20">feed_fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="203:5" pos:end="203:66">/* wake up any waiting connections to stop waiting for feed */</comment>

    <for pos:start="205:5" pos:end="213:5">for<control pos:start="205:8" pos:end="205:55">(<init pos:start="205:9" pos:end="205:28"><expr pos:start="205:9" pos:end="205:27"><name pos:start="205:9" pos:end="205:10">c1</name> <operator pos:start="205:12" pos:end="205:12">=</operator> <name pos:start="205:14" pos:end="205:27">first_http_ctx</name></expr>;</init> <condition pos:start="205:30" pos:end="205:40"><expr pos:start="205:30" pos:end="205:39"><name pos:start="205:30" pos:end="205:31">c1</name> <operator pos:start="205:33" pos:end="205:34">!=</operator> <name pos:start="205:36" pos:end="205:39">NULL</name></expr>;</condition> <incr pos:start="205:42" pos:end="205:54"><expr pos:start="205:42" pos:end="205:54"><name pos:start="205:42" pos:end="205:43">c1</name> <operator pos:start="205:45" pos:end="205:45">=</operator> <name pos:start="205:47" pos:end="205:54"><name pos:start="205:47" pos:end="205:48">c1</name><operator pos:start="205:49" pos:end="205:50">-&gt;</operator><name pos:start="205:51" pos:end="205:54">next</name></name></expr></incr>)</control> <block pos:start="205:57" pos:end="213:5">{<block_content pos:start="207:9" pos:end="211:52">

        <if_stmt pos:start="207:9" pos:end="211:52"><if pos:start="207:9" pos:end="211:52">if <condition pos:start="207:12" pos:end="209:48">(<expr pos:start="207:13" pos:end="209:47"><name pos:start="207:13" pos:end="207:21"><name pos:start="207:13" pos:end="207:14">c1</name><operator pos:start="207:15" pos:end="207:16">-&gt;</operator><name pos:start="207:17" pos:end="207:21">state</name></name> <operator pos:start="207:23" pos:end="207:24">==</operator> <name pos:start="207:26" pos:end="207:44">HTTPSTATE_WAIT_FEED</name> <operator pos:start="207:46" pos:end="207:47">&amp;&amp;</operator>

            <name pos:start="209:13" pos:end="209:28"><name pos:start="209:13" pos:end="209:14">c1</name><operator pos:start="209:15" pos:end="209:16">-&gt;</operator><name pos:start="209:17" pos:end="209:22">stream</name><operator pos:start="209:23" pos:end="209:24">-&gt;</operator><name pos:start="209:25" pos:end="209:28">feed</name></name> <operator pos:start="209:30" pos:end="209:31">==</operator> <name pos:start="209:33" pos:end="209:47"><name pos:start="209:33" pos:end="209:33">c</name><operator pos:start="209:34" pos:end="209:35">-&gt;</operator><name pos:start="209:36" pos:end="209:41">stream</name><operator pos:start="209:42" pos:end="209:43">-&gt;</operator><name pos:start="209:44" pos:end="209:47">feed</name></name></expr>)</condition><block type="pseudo" pos:start="211:13" pos:end="211:52"><block_content pos:start="211:13" pos:end="211:52">

            <expr_stmt pos:start="211:13" pos:end="211:52"><expr pos:start="211:13" pos:end="211:51"><name pos:start="211:13" pos:end="211:21"><name pos:start="211:13" pos:end="211:14">c1</name><operator pos:start="211:15" pos:end="211:16">-&gt;</operator><name pos:start="211:17" pos:end="211:21">state</name></name> <operator pos:start="211:23" pos:end="211:23">=</operator> <name pos:start="211:25" pos:end="211:51">HTTPSTATE_SEND_DATA_TRAILER</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="215:5" pos:end="215:14">return <expr pos:start="215:12" pos:end="215:13"><operator pos:start="215:12" pos:end="215:12">-</operator><literal type="number" pos:start="215:13" pos:end="215:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
