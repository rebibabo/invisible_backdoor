<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2598.c" pos:tabs="8"><function pos:start="1:1" pos:end="335:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">process_input_packet</name><parameter_list pos:start="1:32" pos:end="1:82">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:43">InputStream</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ist</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:69"><decl pos:start="1:51" pos:end="1:69"><type pos:start="1:51" pos:end="1:69"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:64">AVPacket</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">pkt</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:81"><decl pos:start="1:72" pos:end="1:81"><type pos:start="1:72" pos:end="1:81"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:81">no_eof</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="335:1">{<block_content pos:start="5:5" pos:end="333:24">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>, <decl pos:start="5:18" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">repeating</name> <init pos:start="7:19" pos:end="7:21">= <expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">eof_reached</name> <init pos:start="9:21" pos:end="9:23">= <expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">AVPacket</name></type> <name pos:start="13:14" pos:end="13:18">avpkt</name></decl>;</decl_stmt>

    <if_stmt pos:start="15:5" pos:end="31:5"><if pos:start="15:5" pos:end="31:5">if <condition pos:start="15:8" pos:end="15:27">(<expr pos:start="15:9" pos:end="15:26"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:26"><name pos:start="15:10" pos:end="15:12">ist</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:26">saw_first_ts</name></name></expr>)</condition> <block pos:start="15:29" pos:end="31:5">{<block_content pos:start="17:9" pos:end="29:30">

        <expr_stmt pos:start="17:9" pos:end="17:131"><expr pos:start="17:9" pos:end="17:130"><name pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:11">ist</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:16">dts</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <ternary pos:start="17:20" pos:end="17:130"><condition pos:start="17:20" pos:end="17:48"><expr pos:start="17:20" pos:end="17:46"><name pos:start="17:20" pos:end="17:46"><name pos:start="17:20" pos:end="17:22">ist</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:26">st</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:42">avg_frame_rate</name><operator pos:start="17:43" pos:end="17:43">.</operator><name pos:start="17:44" pos:end="17:46">num</name></name></expr> ?</condition><then pos:start="17:50" pos:end="17:126"> <expr pos:start="17:50" pos:end="17:126"><operator pos:start="17:50" pos:end="17:50">-</operator> <name pos:start="17:52" pos:end="17:77"><name pos:start="17:52" pos:end="17:54">ist</name><operator pos:start="17:55" pos:end="17:56">-&gt;</operator><name pos:start="17:57" pos:end="17:63">dec_ctx</name><operator pos:start="17:64" pos:end="17:65">-&gt;</operator><name pos:start="17:66" pos:end="17:77">has_b_frames</name></name> <operator pos:start="17:79" pos:end="17:79">*</operator> <name pos:start="17:81" pos:end="17:92">AV_TIME_BASE</name> <operator pos:start="17:94" pos:end="17:94">/</operator> <call pos:start="17:96" pos:end="17:126"><name pos:start="17:96" pos:end="17:101">av_q2d</name><argument_list pos:start="17:102" pos:end="17:126">(<argument pos:start="17:103" pos:end="17:125"><expr pos:start="17:103" pos:end="17:125"><name pos:start="17:103" pos:end="17:125"><name pos:start="17:103" pos:end="17:105">ist</name><operator pos:start="17:106" pos:end="17:107">-&gt;</operator><name pos:start="17:108" pos:end="17:109">st</name><operator pos:start="17:110" pos:end="17:111">-&gt;</operator><name pos:start="17:112" pos:end="17:125">avg_frame_rate</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="17:128" pos:end="17:130">: <expr pos:start="17:130" pos:end="17:130"><literal type="number" pos:start="17:130" pos:end="17:130">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:21"><expr pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:11">ist</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:16">pts</name></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:71">(<expr pos:start="21:13" pos:end="21:70"><name pos:start="21:13" pos:end="21:15">pkt</name> <operator pos:start="21:17" pos:end="21:18">&amp;&amp;</operator> <name pos:start="21:20" pos:end="21:27"><name pos:start="21:20" pos:end="21:22">pkt</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:27">pts</name></name> <operator pos:start="21:29" pos:end="21:30">!=</operator> <name pos:start="21:32" pos:end="21:45">AV_NOPTS_VALUE</name> <operator pos:start="21:47" pos:end="21:48">&amp;&amp;</operator> <operator pos:start="21:50" pos:end="21:50">!</operator><name pos:start="21:51" pos:end="21:70"><name pos:start="21:51" pos:end="21:53">ist</name><operator pos:start="21:54" pos:end="21:55">-&gt;</operator><name pos:start="21:56" pos:end="21:70">decoding_needed</name></name></expr>)</condition> <block pos:start="21:73" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:32">

            <expr_stmt pos:start="23:13" pos:end="23:83"><expr pos:start="23:13" pos:end="23:82"><name pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:15">ist</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:20">dts</name></name> <operator pos:start="23:22" pos:end="23:23">+=</operator> <call pos:start="23:25" pos:end="23:82"><name pos:start="23:25" pos:end="23:36">av_rescale_q</name><argument_list pos:start="23:37" pos:end="23:82">(<argument pos:start="23:38" pos:end="23:45"><expr pos:start="23:38" pos:end="23:45"><name pos:start="23:38" pos:end="23:45"><name pos:start="23:38" pos:end="23:40">pkt</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:45">pts</name></name></expr></argument>, <argument pos:start="23:48" pos:end="23:65"><expr pos:start="23:48" pos:end="23:65"><name pos:start="23:48" pos:end="23:65"><name pos:start="23:48" pos:end="23:50">ist</name><operator pos:start="23:51" pos:end="23:52">-&gt;</operator><name pos:start="23:53" pos:end="23:54">st</name><operator pos:start="23:55" pos:end="23:56">-&gt;</operator><name pos:start="23:57" pos:end="23:65">time_base</name></name></expr></argument>, <argument pos:start="23:68" pos:end="23:81"><expr pos:start="23:68" pos:end="23:81"><name pos:start="23:68" pos:end="23:81">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:32"><expr pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:15">ist</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:20">pts</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:31"><name pos:start="25:24" pos:end="25:26">ist</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:31">dts</name></name></expr>;</expr_stmt> <comment type="line" pos:start="25:34" pos:end="25:97">//unused but better to set it to a value thats not totally wrong</comment>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:11">ist</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:25">saw_first_ts</name></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <literal type="number" pos:start="29:29" pos:end="29:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="37:33"><if pos:start="35:5" pos:end="37:33">if <condition pos:start="35:8" pos:end="35:40">(<expr pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:11">ist</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:21">next_dts</name></name> <operator pos:start="35:23" pos:end="35:24">==</operator> <name pos:start="35:26" pos:end="35:39">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:33"><block_content pos:start="37:9" pos:end="37:33">

        <expr_stmt pos:start="37:9" pos:end="37:33"><expr pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:11">ist</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:21">next_dts</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:32"><name pos:start="37:25" pos:end="37:27">ist</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:32">dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:33"><if pos:start="39:5" pos:end="41:33">if <condition pos:start="39:8" pos:end="39:40">(<expr pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:11">ist</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:21">next_pts</name></name> <operator pos:start="39:23" pos:end="39:24">==</operator> <name pos:start="39:26" pos:end="39:39">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:33"><block_content pos:start="41:9" pos:end="41:33">

        <expr_stmt pos:start="41:9" pos:end="41:33"><expr pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:11">ist</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:21">next_pts</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:32"><name pos:start="41:25" pos:end="41:27">ist</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:32">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="59:5"><if pos:start="45:5" pos:end="55:5">if <condition pos:start="45:8" pos:end="45:13">(<expr pos:start="45:9" pos:end="45:12"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:12">pkt</name></expr>)</condition> <block pos:start="45:15" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:23">

        <comment type="block" pos:start="47:9" pos:end="47:26">/* EOF handling */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><call pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:22">av_init_packet</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><operator pos:start="49:24" pos:end="49:24">&amp;</operator><name pos:start="49:25" pos:end="49:29">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:26"><expr pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:13">avpkt</name><operator pos:start="51:14" pos:end="51:14">.</operator><name pos:start="51:15" pos:end="51:18">data</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:25">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:23"><expr pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:13">avpkt</name><operator pos:start="53:14" pos:end="53:14">.</operator><name pos:start="53:15" pos:end="53:18">size</name></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <literal type="number" pos:start="53:22" pos:end="53:22">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="59:5">else <block pos:start="55:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:21">

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:13">avpkt</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <operator pos:start="57:17" pos:end="57:17">*</operator><name pos:start="57:18" pos:end="57:20">pkt</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="71:5">if <condition pos:start="63:8" pos:end="63:42">(<expr pos:start="63:9" pos:end="63:41"><name pos:start="63:9" pos:end="63:11">pkt</name> <operator pos:start="63:13" pos:end="63:14">&amp;&amp;</operator> <name pos:start="63:16" pos:end="63:23"><name pos:start="63:16" pos:end="63:18">pkt</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:23">dts</name></name> <operator pos:start="63:25" pos:end="63:26">!=</operator> <name pos:start="63:28" pos:end="63:41">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="63:44" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:48">

        <expr_stmt pos:start="65:9" pos:end="65:94"><expr pos:start="65:9" pos:end="65:93"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:11">ist</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:21">next_dts</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:32"><name pos:start="65:25" pos:end="65:27">ist</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:32">dts</name></name> <operator pos:start="65:34" pos:end="65:34">=</operator> <call pos:start="65:36" pos:end="65:93"><name pos:start="65:36" pos:end="65:47">av_rescale_q</name><argument_list pos:start="65:48" pos:end="65:93">(<argument pos:start="65:49" pos:end="65:56"><expr pos:start="65:49" pos:end="65:56"><name pos:start="65:49" pos:end="65:56"><name pos:start="65:49" pos:end="65:51">pkt</name><operator pos:start="65:52" pos:end="65:53">-&gt;</operator><name pos:start="65:54" pos:end="65:56">dts</name></name></expr></argument>, <argument pos:start="65:59" pos:end="65:76"><expr pos:start="65:59" pos:end="65:76"><name pos:start="65:59" pos:end="65:76"><name pos:start="65:59" pos:end="65:61">ist</name><operator pos:start="65:62" pos:end="65:63">-&gt;</operator><name pos:start="65:64" pos:end="65:65">st</name><operator pos:start="65:66" pos:end="65:67">-&gt;</operator><name pos:start="65:68" pos:end="65:76">time_base</name></name></expr></argument>, <argument pos:start="65:79" pos:end="65:92"><expr pos:start="65:79" pos:end="65:92"><name pos:start="65:79" pos:end="65:92">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:48"><if pos:start="67:9" pos:end="69:48">if <condition pos:start="67:12" pos:end="67:84">(<expr pos:start="67:13" pos:end="67:83"><name pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:15">ist</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:24">dec_ctx</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:36">codec_type</name></name> <operator pos:start="67:38" pos:end="67:39">!=</operator> <name pos:start="67:41" pos:end="67:58">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="67:60" pos:end="67:61">||</operator> <operator pos:start="67:63" pos:end="67:63">!</operator><name pos:start="67:64" pos:end="67:83"><name pos:start="67:64" pos:end="67:66">ist</name><operator pos:start="67:67" pos:end="67:68">-&gt;</operator><name pos:start="67:69" pos:end="67:83">decoding_needed</name></name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:48"><block_content pos:start="69:13" pos:end="69:48">

            <expr_stmt pos:start="69:13" pos:end="69:48"><expr pos:start="69:13" pos:end="69:47"><name pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:15">ist</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:25">next_pts</name></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:36"><name pos:start="69:29" pos:end="69:31">ist</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:36">pts</name></name> <operator pos:start="69:38" pos:end="69:38">=</operator> <name pos:start="69:40" pos:end="69:47"><name pos:start="69:40" pos:end="69:42">ist</name><operator pos:start="69:43" pos:end="69:44">-&gt;</operator><name pos:start="69:45" pos:end="69:47">dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="75:5" pos:end="75:84">// while we have more to decode or while the decoder did output something on EOF</comment>

    <while pos:start="77:5" pos:end="237:5">while <condition pos:start="77:11" pos:end="77:32">(<expr pos:start="77:12" pos:end="77:31"><name pos:start="77:12" pos:end="77:31"><name pos:start="77:12" pos:end="77:14">ist</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:31">decoding_needed</name></name></expr>)</condition> <block pos:start="77:34" pos:end="237:5">{<block_content pos:start="79:9" pos:end="235:22">

        <decl_stmt pos:start="79:9" pos:end="79:25"><decl pos:start="79:9" pos:end="79:24"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:20">duration</name> <init pos:start="79:22" pos:end="79:24">= <expr pos:start="79:24" pos:end="79:24"><literal type="number" pos:start="79:24" pos:end="79:24">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="81:9" pos:end="81:27"><decl pos:start="81:9" pos:end="81:26"><type pos:start="81:9" pos:end="81:11"><name pos:start="81:9" pos:end="81:11">int</name></type> <name pos:start="81:13" pos:end="81:22">got_output</name> <init pos:start="81:24" pos:end="81:26">= <expr pos:start="81:26" pos:end="81:26"><literal type="number" pos:start="81:26" pos:end="81:26">0</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:33"><expr pos:start="85:9" pos:end="85:32"><name pos:start="85:9" pos:end="85:16"><name pos:start="85:9" pos:end="85:11">ist</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:16">pts</name></name> <operator pos:start="85:18" pos:end="85:18">=</operator> <name pos:start="85:20" pos:end="85:32"><name pos:start="85:20" pos:end="85:22">ist</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:32">next_pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:33"><expr pos:start="87:9" pos:end="87:32"><name pos:start="87:9" pos:end="87:16"><name pos:start="87:9" pos:end="87:11">ist</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:16">dts</name></name> <operator pos:start="87:18" pos:end="87:18">=</operator> <name pos:start="87:20" pos:end="87:32"><name pos:start="87:20" pos:end="87:22">ist</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:32">next_dts</name></name></expr>;</expr_stmt>



        <switch pos:start="91:9" pos:end="159:9">switch <condition pos:start="91:16" pos:end="91:41">(<expr pos:start="91:17" pos:end="91:40"><name pos:start="91:17" pos:end="91:40"><name pos:start="91:17" pos:end="91:19">ist</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:28">dec_ctx</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:40">codec_type</name></name></expr>)</condition> <block pos:start="91:43" pos:end="159:9">{<block_content pos:start="93:9" pos:end="157:22">

        <case pos:start="93:9" pos:end="93:32">case <expr pos:start="93:14" pos:end="93:31"><name pos:start="93:14" pos:end="93:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="95:13" pos:end="95:80"><expr pos:start="95:13" pos:end="95:79"><name pos:start="95:13" pos:end="95:15">ret</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:79"><name pos:start="95:19" pos:end="95:30">decode_audio</name>    <argument_list pos:start="95:35" pos:end="95:79">(<argument pos:start="95:36" pos:end="95:38"><expr pos:start="95:36" pos:end="95:38"><name pos:start="95:36" pos:end="95:38">ist</name></expr></argument>, <argument pos:start="95:41" pos:end="95:65"><expr pos:start="95:41" pos:end="95:65"><ternary pos:start="95:41" pos:end="95:65"><condition pos:start="95:41" pos:end="95:51"><expr pos:start="95:41" pos:end="95:49"><name pos:start="95:41" pos:end="95:49">repeating</name></expr> ?</condition><then pos:start="95:53" pos:end="95:56"> <expr pos:start="95:53" pos:end="95:56"><name pos:start="95:53" pos:end="95:56">NULL</name></expr> </then><else pos:start="95:58" pos:end="95:65">: <expr pos:start="95:60" pos:end="95:65"><operator pos:start="95:60" pos:end="95:60">&amp;</operator><name pos:start="95:61" pos:end="95:65">avpkt</name></expr></else></ternary></expr></argument>, <argument pos:start="95:68" pos:end="95:78"><expr pos:start="95:68" pos:end="95:78"><operator pos:start="95:68" pos:end="95:68">&amp;</operator><name pos:start="95:69" pos:end="95:78">got_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        <case pos:start="99:9" pos:end="99:32">case <expr pos:start="99:14" pos:end="99:31"><name pos:start="99:14" pos:end="99:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="101:13" pos:end="101:86"><expr pos:start="101:13" pos:end="101:85"><name pos:start="101:13" pos:end="101:15">ret</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <call pos:start="101:19" pos:end="101:85"><name pos:start="101:19" pos:end="101:30">decode_video</name>    <argument_list pos:start="101:35" pos:end="101:85">(<argument pos:start="101:36" pos:end="101:38"><expr pos:start="101:36" pos:end="101:38"><name pos:start="101:36" pos:end="101:38">ist</name></expr></argument>, <argument pos:start="101:41" pos:end="101:65"><expr pos:start="101:41" pos:end="101:65"><ternary pos:start="101:41" pos:end="101:65"><condition pos:start="101:41" pos:end="101:51"><expr pos:start="101:41" pos:end="101:49"><name pos:start="101:41" pos:end="101:49">repeating</name></expr> ?</condition><then pos:start="101:53" pos:end="101:56"> <expr pos:start="101:53" pos:end="101:56"><name pos:start="101:53" pos:end="101:56">NULL</name></expr> </then><else pos:start="101:58" pos:end="101:65">: <expr pos:start="101:60" pos:end="101:65"><operator pos:start="101:60" pos:end="101:60">&amp;</operator><name pos:start="101:61" pos:end="101:65">avpkt</name></expr></else></ternary></expr></argument>, <argument pos:start="101:68" pos:end="101:78"><expr pos:start="101:68" pos:end="101:78"><operator pos:start="101:68" pos:end="101:68">&amp;</operator><name pos:start="101:69" pos:end="101:78">got_output</name></expr></argument>, <argument pos:start="101:81" pos:end="101:84"><expr pos:start="101:81" pos:end="101:84"><operator pos:start="101:81" pos:end="101:81">!</operator><name pos:start="101:82" pos:end="101:84">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="131:13"><if pos:start="103:13" pos:end="131:13">if <condition pos:start="103:16" pos:end="103:49">(<expr pos:start="103:17" pos:end="103:48"><operator pos:start="103:17" pos:end="103:17">!</operator><name pos:start="103:18" pos:end="103:26">repeating</name> <operator pos:start="103:28" pos:end="103:29">||</operator> <operator pos:start="103:31" pos:end="103:31">!</operator><name pos:start="103:32" pos:end="103:34">pkt</name> <operator pos:start="103:36" pos:end="103:37">||</operator> <name pos:start="103:39" pos:end="103:48">got_output</name></expr>)</condition> <block pos:start="103:51" pos:end="131:13">{<block_content pos:start="105:17" pos:end="129:51">

                <if_stmt pos:start="105:17" pos:end="119:17"><if pos:start="105:17" pos:end="109:17">if <condition pos:start="105:20" pos:end="105:41">(<expr pos:start="105:21" pos:end="105:40"><name pos:start="105:21" pos:end="105:23">pkt</name> <operator pos:start="105:25" pos:end="105:26">&amp;&amp;</operator> <name pos:start="105:28" pos:end="105:40"><name pos:start="105:28" pos:end="105:30">pkt</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:40">duration</name></name></expr>)</condition> <block pos:start="105:43" pos:end="109:17">{<block_content pos:start="107:21" pos:end="107:95">

                    <expr_stmt pos:start="107:21" pos:end="107:95"><expr pos:start="107:21" pos:end="107:94"><name pos:start="107:21" pos:end="107:28">duration</name> <operator pos:start="107:30" pos:end="107:30">=</operator> <call pos:start="107:32" pos:end="107:94"><name pos:start="107:32" pos:end="107:43">av_rescale_q</name><argument_list pos:start="107:44" pos:end="107:94">(<argument pos:start="107:45" pos:end="107:57"><expr pos:start="107:45" pos:end="107:57"><name pos:start="107:45" pos:end="107:57"><name pos:start="107:45" pos:end="107:47">pkt</name><operator pos:start="107:48" pos:end="107:49">-&gt;</operator><name pos:start="107:50" pos:end="107:57">duration</name></name></expr></argument>, <argument pos:start="107:60" pos:end="107:77"><expr pos:start="107:60" pos:end="107:77"><name pos:start="107:60" pos:end="107:77"><name pos:start="107:60" pos:end="107:62">ist</name><operator pos:start="107:63" pos:end="107:64">-&gt;</operator><name pos:start="107:65" pos:end="107:66">st</name><operator pos:start="107:67" pos:end="107:68">-&gt;</operator><name pos:start="107:69" pos:end="107:77">time_base</name></name></expr></argument>, <argument pos:start="107:80" pos:end="107:93"><expr pos:start="107:80" pos:end="107:93"><name pos:start="107:80" pos:end="107:93">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="109:19" pos:end="119:17">else if<condition pos:start="109:26" pos:end="109:95">(<expr pos:start="109:27" pos:end="109:94"><name pos:start="109:27" pos:end="109:53"><name pos:start="109:27" pos:end="109:29">ist</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:38">dec_ctx</name><operator pos:start="109:39" pos:end="109:40">-&gt;</operator><name pos:start="109:41" pos:end="109:49">framerate</name><operator pos:start="109:50" pos:end="109:50">.</operator><name pos:start="109:51" pos:end="109:53">num</name></name> <operator pos:start="109:55" pos:end="109:56">!=</operator> <literal type="number" pos:start="109:58" pos:end="109:58">0</literal> <operator pos:start="109:60" pos:end="109:61">&amp;&amp;</operator> <name pos:start="109:63" pos:end="109:89"><name pos:start="109:63" pos:end="109:65">ist</name><operator pos:start="109:66" pos:end="109:67">-&gt;</operator><name pos:start="109:68" pos:end="109:74">dec_ctx</name><operator pos:start="109:75" pos:end="109:76">-&gt;</operator><name pos:start="109:77" pos:end="109:85">framerate</name><operator pos:start="109:86" pos:end="109:86">.</operator><name pos:start="109:87" pos:end="109:89">den</name></name> <operator pos:start="109:91" pos:end="109:92">!=</operator> <literal type="number" pos:start="109:94" pos:end="109:94">0</literal></expr>)</condition> <block pos:start="109:97" pos:end="119:17">{<block_content pos:start="111:21" pos:end="117:96">

                    <decl_stmt pos:start="111:21" pos:end="111:140"><decl pos:start="111:21" pos:end="111:139"><type pos:start="111:21" pos:end="111:23"><name pos:start="111:21" pos:end="111:23">int</name></type> <name pos:start="111:25" pos:end="111:29">ticks</name><init pos:start="111:30" pos:end="111:139">= <expr pos:start="111:32" pos:end="111:139"><ternary pos:start="111:32" pos:end="111:139"><condition pos:start="111:32" pos:end="111:62"><expr pos:start="111:32" pos:end="111:60"><call pos:start="111:32" pos:end="111:60"><name pos:start="111:32" pos:end="111:51">av_stream_get_parser</name><argument_list pos:start="111:52" pos:end="111:60">(<argument pos:start="111:53" pos:end="111:59"><expr pos:start="111:53" pos:end="111:59"><name pos:start="111:53" pos:end="111:59"><name pos:start="111:53" pos:end="111:55">ist</name><operator pos:start="111:56" pos:end="111:57">-&gt;</operator><name pos:start="111:58" pos:end="111:59">st</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="111:64" pos:end="111:107"> <expr pos:start="111:64" pos:end="111:107"><call pos:start="111:64" pos:end="111:92"><name pos:start="111:64" pos:end="111:83">av_stream_get_parser</name><argument_list pos:start="111:84" pos:end="111:92">(<argument pos:start="111:85" pos:end="111:91"><expr pos:start="111:85" pos:end="111:91"><name pos:start="111:85" pos:end="111:91"><name pos:start="111:85" pos:end="111:87">ist</name><operator pos:start="111:88" pos:end="111:89">-&gt;</operator><name pos:start="111:90" pos:end="111:91">st</name></name></expr></argument>)</argument_list></call><operator pos:start="111:93" pos:end="111:94">-&gt;</operator><name pos:start="111:95" pos:end="111:105">repeat_pict</name><operator pos:start="111:106" pos:end="111:106">+</operator><literal type="number" pos:start="111:107" pos:end="111:107">1</literal></expr> </then><else pos:start="111:109" pos:end="111:139">: <expr pos:start="111:111" pos:end="111:139"><name pos:start="111:111" pos:end="111:139"><name pos:start="111:111" pos:end="111:113">ist</name><operator pos:start="111:114" pos:end="111:115">-&gt;</operator><name pos:start="111:116" pos:end="111:122">dec_ctx</name><operator pos:start="111:123" pos:end="111:124">-&gt;</operator><name pos:start="111:125" pos:end="111:139">ticks_per_frame</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="113:21" pos:end="117:96"><expr pos:start="113:21" pos:end="117:95"><name pos:start="113:21" pos:end="113:28">duration</name> <operator pos:start="113:30" pos:end="113:30">=</operator> <operator pos:start="113:32" pos:end="113:32">(</operator><operator pos:start="113:33" pos:end="113:33">(</operator><name pos:start="113:34" pos:end="113:40">int64_t</name><operator pos:start="113:41" pos:end="113:41">)</operator><name pos:start="113:42" pos:end="113:53">AV_TIME_BASE</name> <operator pos:start="113:55" pos:end="113:55">*</operator>

                                    <name pos:start="115:37" pos:end="115:63"><name pos:start="115:37" pos:end="115:39">ist</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:48">dec_ctx</name><operator pos:start="115:49" pos:end="115:50">-&gt;</operator><name pos:start="115:51" pos:end="115:59">framerate</name><operator pos:start="115:60" pos:end="115:60">.</operator><name pos:start="115:61" pos:end="115:63">den</name></name> <operator pos:start="115:65" pos:end="115:65">*</operator> <name pos:start="115:67" pos:end="115:71">ticks</name><operator pos:start="115:72" pos:end="115:72">)</operator> <operator pos:start="115:74" pos:end="115:74">/</operator>

                                    <name pos:start="117:37" pos:end="117:63"><name pos:start="117:37" pos:end="117:39">ist</name><operator pos:start="117:40" pos:end="117:41">-&gt;</operator><name pos:start="117:42" pos:end="117:48">dec_ctx</name><operator pos:start="117:49" pos:end="117:50">-&gt;</operator><name pos:start="117:51" pos:end="117:59">framerate</name><operator pos:start="117:60" pos:end="117:60">.</operator><name pos:start="117:61" pos:end="117:63">num</name></name> <operator pos:start="117:65" pos:end="117:65">/</operator> <name pos:start="117:67" pos:end="117:95"><name pos:start="117:67" pos:end="117:69">ist</name><operator pos:start="117:70" pos:end="117:71">-&gt;</operator><name pos:start="117:72" pos:end="117:78">dec_ctx</name><operator pos:start="117:79" pos:end="117:80">-&gt;</operator><name pos:start="117:81" pos:end="117:95">ticks_per_frame</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="123:17" pos:end="129:51"><if pos:start="123:17" pos:end="127:17">if<condition pos:start="123:19" pos:end="123:58">(<expr pos:start="123:20" pos:end="123:57"><name pos:start="123:20" pos:end="123:27"><name pos:start="123:20" pos:end="123:22">ist</name><operator pos:start="123:23" pos:end="123:24">-&gt;</operator><name pos:start="123:25" pos:end="123:27">dts</name></name> <operator pos:start="123:29" pos:end="123:30">!=</operator> <name pos:start="123:32" pos:end="123:45">AV_NOPTS_VALUE</name> <operator pos:start="123:47" pos:end="123:48">&amp;&amp;</operator> <name pos:start="123:50" pos:end="123:57">duration</name></expr>)</condition> <block pos:start="123:60" pos:end="127:17">{<block_content pos:start="125:21" pos:end="125:46">

                    <expr_stmt pos:start="125:21" pos:end="125:46"><expr pos:start="125:21" pos:end="125:45"><name pos:start="125:21" pos:end="125:33"><name pos:start="125:21" pos:end="125:23">ist</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:33">next_dts</name></name> <operator pos:start="125:35" pos:end="125:36">+=</operator> <name pos:start="125:38" pos:end="125:45">duration</name></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="127:18" pos:end="129:51">else<block type="pseudo" pos:start="129:21" pos:end="129:51"><block_content pos:start="129:21" pos:end="129:51">

                    <expr_stmt pos:start="129:21" pos:end="129:51"><expr pos:start="129:21" pos:end="129:50"><name pos:start="129:21" pos:end="129:33"><name pos:start="129:21" pos:end="129:23">ist</name><operator pos:start="129:24" pos:end="129:25">-&gt;</operator><name pos:start="129:26" pos:end="129:33">next_dts</name></name> <operator pos:start="129:35" pos:end="129:35">=</operator> <name pos:start="129:37" pos:end="129:50">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="135:13" pos:end="137:42"><if pos:start="135:13" pos:end="137:42">if <condition pos:start="135:16" pos:end="135:27">(<expr pos:start="135:17" pos:end="135:26"><name pos:start="135:17" pos:end="135:26">got_output</name></expr>)</condition><block type="pseudo" pos:start="137:17" pos:end="137:42"><block_content pos:start="137:17" pos:end="137:42">

                <expr_stmt pos:start="137:17" pos:end="137:42"><expr pos:start="137:17" pos:end="137:41"><name pos:start="137:17" pos:end="137:29"><name pos:start="137:17" pos:end="137:19">ist</name><operator pos:start="137:20" pos:end="137:21">-&gt;</operator><name pos:start="137:22" pos:end="137:29">next_pts</name></name> <operator pos:start="137:31" pos:end="137:32">+=</operator> <name pos:start="137:34" pos:end="137:41">duration</name></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="137:44" pos:end="137:92">//FIXME the duration is not correct in some cases</comment>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:35">case <expr pos:start="141:14" pos:end="141:34"><name pos:start="141:14" pos:end="141:34">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

            <if_stmt pos:start="143:13" pos:end="145:22"><if pos:start="143:13" pos:end="145:22">if <condition pos:start="143:16" pos:end="143:26">(<expr pos:start="143:17" pos:end="143:25"><name pos:start="143:17" pos:end="143:25">repeating</name></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:22"><block_content pos:start="145:17" pos:end="145:22">

                <break pos:start="145:17" pos:end="145:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:64"><expr pos:start="147:13" pos:end="147:63"><name pos:start="147:13" pos:end="147:15">ret</name> <operator pos:start="147:17" pos:end="147:17">=</operator> <call pos:start="147:19" pos:end="147:63"><name pos:start="147:19" pos:end="147:37">transcode_subtitles</name><argument_list pos:start="147:38" pos:end="147:63">(<argument pos:start="147:39" pos:end="147:41"><expr pos:start="147:39" pos:end="147:41"><name pos:start="147:39" pos:end="147:41">ist</name></expr></argument>, <argument pos:start="147:44" pos:end="147:49"><expr pos:start="147:44" pos:end="147:49"><operator pos:start="147:44" pos:end="147:44">&amp;</operator><name pos:start="147:45" pos:end="147:49">avpkt</name></expr></argument>, <argument pos:start="147:52" pos:end="147:62"><expr pos:start="147:52" pos:end="147:62"><operator pos:start="147:52" pos:end="147:52">&amp;</operator><name pos:start="147:53" pos:end="147:62">got_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="149:13" pos:end="151:34"><if pos:start="149:13" pos:end="151:34">if <condition pos:start="149:16" pos:end="149:33">(<expr pos:start="149:17" pos:end="149:32"><operator pos:start="149:17" pos:end="149:17">!</operator><name pos:start="149:18" pos:end="149:20">pkt</name> <operator pos:start="149:22" pos:end="149:23">&amp;&amp;</operator> <name pos:start="149:25" pos:end="149:27">ret</name> <operator pos:start="149:29" pos:end="149:30">&gt;=</operator> <literal type="number" pos:start="149:32" pos:end="149:32">0</literal></expr>)</condition><block type="pseudo" pos:start="151:17" pos:end="151:34"><block_content pos:start="151:17" pos:end="151:34">

                <expr_stmt pos:start="151:17" pos:end="151:34"><expr pos:start="151:17" pos:end="151:33"><name pos:start="151:17" pos:end="151:19">ret</name> <operator pos:start="151:21" pos:end="151:21">=</operator> <name pos:start="151:23" pos:end="151:33">AVERROR_EOF</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="153:13" pos:end="153:18">break;</break>

        <default pos:start="155:9" pos:end="155:16">default:</default>

            <return pos:start="157:13" pos:end="157:22">return <expr pos:start="157:20" pos:end="157:21"><operator pos:start="157:20" pos:end="157:20">-</operator><literal type="number" pos:start="157:21" pos:end="157:21">1</literal></expr>;</return>

        </block_content>}</block></switch>



        <if_stmt pos:start="163:9" pos:end="169:9"><if pos:start="163:9" pos:end="169:9">if <condition pos:start="163:12" pos:end="163:31">(<expr pos:start="163:13" pos:end="163:30"><name pos:start="163:13" pos:end="163:15">ret</name> <operator pos:start="163:17" pos:end="163:18">==</operator> <name pos:start="163:20" pos:end="163:30">AVERROR_EOF</name></expr>)</condition> <block pos:start="163:33" pos:end="169:9">{<block_content pos:start="165:13" pos:end="167:18">

            <expr_stmt pos:start="165:13" pos:end="165:28"><expr pos:start="165:13" pos:end="165:27"><name pos:start="165:13" pos:end="165:23">eof_reached</name> <operator pos:start="165:25" pos:end="165:25">=</operator> <literal type="number" pos:start="165:27" pos:end="165:27">1</literal></expr>;</expr_stmt>

            <break pos:start="167:13" pos:end="167:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="173:9" pos:end="197:9"><if pos:start="173:9" pos:end="197:9">if <condition pos:start="173:12" pos:end="173:20">(<expr pos:start="173:13" pos:end="173:19"><name pos:start="173:13" pos:end="173:15">ret</name> <operator pos:start="173:17" pos:end="173:17">&lt;</operator> <literal type="number" pos:start="173:19" pos:end="173:19">0</literal></expr>)</condition> <block pos:start="173:22" pos:end="197:9">{<block_content pos:start="175:13" pos:end="195:18">

            <expr_stmt pos:start="175:13" pos:end="177:69"><expr pos:start="175:13" pos:end="177:68"><call pos:start="175:13" pos:end="177:68"><name pos:start="175:13" pos:end="175:18">av_log</name><argument_list pos:start="175:19" pos:end="177:68">(<argument pos:start="175:20" pos:end="175:23"><expr pos:start="175:20" pos:end="175:23"><name pos:start="175:20" pos:end="175:23">NULL</name></expr></argument>, <argument pos:start="175:26" pos:end="175:37"><expr pos:start="175:26" pos:end="175:37"><name pos:start="175:26" pos:end="175:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="175:40" pos:end="175:81"><expr pos:start="175:40" pos:end="175:81"><literal type="string" pos:start="175:40" pos:end="175:81">"Error while decoding stream #%d:%d: %s\n"</literal></expr></argument>,

                   <argument pos:start="177:20" pos:end="177:34"><expr pos:start="177:20" pos:end="177:34"><name pos:start="177:20" pos:end="177:34"><name pos:start="177:20" pos:end="177:22">ist</name><operator pos:start="177:23" pos:end="177:24">-&gt;</operator><name pos:start="177:25" pos:end="177:34">file_index</name></name></expr></argument>, <argument pos:start="177:37" pos:end="177:50"><expr pos:start="177:37" pos:end="177:50"><name pos:start="177:37" pos:end="177:50"><name pos:start="177:37" pos:end="177:39">ist</name><operator pos:start="177:40" pos:end="177:41">-&gt;</operator><name pos:start="177:42" pos:end="177:43">st</name><operator pos:start="177:44" pos:end="177:45">-&gt;</operator><name pos:start="177:46" pos:end="177:50">index</name></name></expr></argument>, <argument pos:start="177:53" pos:end="177:67"><expr pos:start="177:53" pos:end="177:67"><call pos:start="177:53" pos:end="177:67"><name pos:start="177:53" pos:end="177:62">av_err2str</name><argument_list pos:start="177:63" pos:end="177:67">(<argument pos:start="177:64" pos:end="177:66"><expr pos:start="177:64" pos:end="177:66"><name pos:start="177:64" pos:end="177:66">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="179:13" pos:end="181:32"><if pos:start="179:13" pos:end="181:32">if <condition pos:start="179:16" pos:end="179:30">(<expr pos:start="179:17" pos:end="179:29"><name pos:start="179:17" pos:end="179:29">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:32"><block_content pos:start="181:17" pos:end="181:32">

                <expr_stmt pos:start="181:17" pos:end="181:32"><expr pos:start="181:17" pos:end="181:31"><call pos:start="181:17" pos:end="181:31"><name pos:start="181:17" pos:end="181:28">exit_program</name><argument_list pos:start="181:29" pos:end="181:31">(<argument pos:start="181:30" pos:end="181:30"><expr pos:start="181:30" pos:end="181:30"><literal type="number" pos:start="181:30" pos:end="181:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="line" pos:start="183:13" pos:end="183:78">// Decoding might not terminate if we're draining the decoder, and</comment>

            <comment type="line" pos:start="185:13" pos:end="185:52">// the decoder keeps returning an error.</comment>

            <comment type="line" pos:start="187:13" pos:end="187:69">// This should probably be considered a libavcodec issue.</comment>

            <comment type="line" pos:start="189:13" pos:end="189:52">// Sample: fate-vsynth1-dnxhd-720p-hr-lb</comment>

            <if_stmt pos:start="191:13" pos:end="193:32"><if pos:start="191:13" pos:end="193:32">if <condition pos:start="191:16" pos:end="191:21">(<expr pos:start="191:17" pos:end="191:20"><operator pos:start="191:17" pos:end="191:17">!</operator><name pos:start="191:18" pos:end="191:20">pkt</name></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:32"><block_content pos:start="193:17" pos:end="193:32">

                <expr_stmt pos:start="193:17" pos:end="193:32"><expr pos:start="193:17" pos:end="193:31"><name pos:start="193:17" pos:end="193:27">eof_reached</name> <operator pos:start="193:29" pos:end="193:29">=</operator> <literal type="number" pos:start="193:31" pos:end="193:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="201:9" pos:end="203:32"><if pos:start="201:9" pos:end="203:32">if <condition pos:start="201:12" pos:end="201:23">(<expr pos:start="201:13" pos:end="201:22"><name pos:start="201:13" pos:end="201:22">got_output</name></expr>)</condition><block type="pseudo" pos:start="203:13" pos:end="203:32"><block_content pos:start="203:13" pos:end="203:32">

            <expr_stmt pos:start="203:13" pos:end="203:32"><expr pos:start="203:13" pos:end="203:31"><name pos:start="203:13" pos:end="203:27"><name pos:start="203:13" pos:end="203:15">ist</name><operator pos:start="203:16" pos:end="203:17">-&gt;</operator><name pos:start="203:18" pos:end="203:27">got_output</name></name> <operator pos:start="203:29" pos:end="203:29">=</operator> <literal type="number" pos:start="203:31" pos:end="203:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="207:9" pos:end="209:18"><if pos:start="207:9" pos:end="209:18">if <condition pos:start="207:12" pos:end="207:24">(<expr pos:start="207:13" pos:end="207:23"><operator pos:start="207:13" pos:end="207:13">!</operator><name pos:start="207:14" pos:end="207:23">got_output</name></expr>)</condition><block type="pseudo" pos:start="209:13" pos:end="209:18"><block_content pos:start="209:13" pos:end="209:18">

            <break pos:start="209:13" pos:end="209:18">break;</break></block_content></block></if></if_stmt>



        <comment type="line" pos:start="213:9" pos:end="213:77">// During draining, we might get multiple output frames in this loop.</comment>

        <comment type="line" pos:start="215:9" pos:end="215:77">// ffmpeg.c does not drain the filter chain on configuration changes,</comment>

        <comment type="line" pos:start="217:9" pos:end="217:77">// which means if we send multiple frames at once to the filters, and</comment>

        <comment type="line" pos:start="219:9" pos:end="219:78">// one of those frames changes configuration, the buffered frames will</comment>

        <comment type="line" pos:start="221:9" pos:end="221:54">// be lost. This can upset certain FATE tests.</comment>

        <comment type="line" pos:start="223:9" pos:end="223:75">// Decode only 1 frame per call on EOF to appease these FATE tests.</comment>

        <comment type="line" pos:start="225:9" pos:end="225:73">// The ideal solution would be to rewrite decoding to use the new</comment>

        <comment type="line" pos:start="227:9" pos:end="227:40">// decoding API in a better way.</comment>

        <if_stmt pos:start="229:9" pos:end="231:18"><if pos:start="229:9" pos:end="231:18">if <condition pos:start="229:12" pos:end="229:17">(<expr pos:start="229:13" pos:end="229:16"><operator pos:start="229:13" pos:end="229:13">!</operator><name pos:start="229:14" pos:end="229:16">pkt</name></expr>)</condition><block type="pseudo" pos:start="231:13" pos:end="231:18"><block_content pos:start="231:13" pos:end="231:18">

            <break pos:start="231:13" pos:end="231:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="235:9" pos:end="235:22"><expr pos:start="235:9" pos:end="235:21"><name pos:start="235:9" pos:end="235:17">repeating</name> <operator pos:start="235:19" pos:end="235:19">=</operator> <literal type="number" pos:start="235:21" pos:end="235:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="241:5" pos:end="241:85">/* after flushing, send an EOF on all the filter inputs attached to the stream */</comment>

    <comment type="block" pos:start="243:5" pos:end="243:69">/* except when looping we need to flush but not to send an EOF */</comment>

    <if_stmt pos:start="245:5" pos:end="257:5"><if pos:start="245:5" pos:end="257:5">if <condition pos:start="245:8" pos:end="245:63">(<expr pos:start="245:9" pos:end="245:62"><operator pos:start="245:9" pos:end="245:9">!</operator><name pos:start="245:10" pos:end="245:12">pkt</name> <operator pos:start="245:14" pos:end="245:15">&amp;&amp;</operator> <name pos:start="245:17" pos:end="245:36"><name pos:start="245:17" pos:end="245:19">ist</name><operator pos:start="245:20" pos:end="245:21">-&gt;</operator><name pos:start="245:22" pos:end="245:36">decoding_needed</name></name> <operator pos:start="245:38" pos:end="245:39">&amp;&amp;</operator> <name pos:start="245:41" pos:end="245:51">eof_reached</name> <operator pos:start="245:53" pos:end="245:54">&amp;&amp;</operator> <operator pos:start="245:56" pos:end="245:56">!</operator><name pos:start="245:57" pos:end="245:62">no_eof</name></expr>)</condition> <block pos:start="245:65" pos:end="257:5">{<block_content pos:start="247:9" pos:end="255:9">

        <decl_stmt pos:start="247:9" pos:end="247:39"><decl pos:start="247:9" pos:end="247:38"><type pos:start="247:9" pos:end="247:11"><name pos:start="247:9" pos:end="247:11">int</name></type> <name pos:start="247:13" pos:end="247:15">ret</name> <init pos:start="247:17" pos:end="247:38">= <expr pos:start="247:19" pos:end="247:38"><call pos:start="247:19" pos:end="247:38"><name pos:start="247:19" pos:end="247:33">send_filter_eof</name><argument_list pos:start="247:34" pos:end="247:38">(<argument pos:start="247:35" pos:end="247:37"><expr pos:start="247:35" pos:end="247:37"><name pos:start="247:35" pos:end="247:37">ist</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="249:9" pos:end="255:9"><if pos:start="249:9" pos:end="255:9">if <condition pos:start="249:12" pos:end="249:20">(<expr pos:start="249:13" pos:end="249:19"><name pos:start="249:13" pos:end="249:15">ret</name> <operator pos:start="249:17" pos:end="249:17">&lt;</operator> <literal type="number" pos:start="249:19" pos:end="249:19">0</literal></expr>)</condition> <block pos:start="249:22" pos:end="255:9">{<block_content pos:start="251:13" pos:end="253:28">

            <expr_stmt pos:start="251:13" pos:end="251:78"><expr pos:start="251:13" pos:end="251:77"><call pos:start="251:13" pos:end="251:77"><name pos:start="251:13" pos:end="251:18">av_log</name><argument_list pos:start="251:19" pos:end="251:77">(<argument pos:start="251:20" pos:end="251:23"><expr pos:start="251:20" pos:end="251:23"><name pos:start="251:20" pos:end="251:23">NULL</name></expr></argument>, <argument pos:start="251:26" pos:end="251:37"><expr pos:start="251:26" pos:end="251:37"><name pos:start="251:26" pos:end="251:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="251:40" pos:end="251:76"><expr pos:start="251:40" pos:end="251:76"><literal type="string" pos:start="251:40" pos:end="251:76">"Error marking filters as finished\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:28"><expr pos:start="253:13" pos:end="253:27"><call pos:start="253:13" pos:end="253:27"><name pos:start="253:13" pos:end="253:24">exit_program</name><argument_list pos:start="253:25" pos:end="253:27">(<argument pos:start="253:26" pos:end="253:26"><expr pos:start="253:26" pos:end="253:26"><literal type="number" pos:start="253:26" pos:end="253:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="261:5" pos:end="261:28">/* handle stream copy */</comment>

    <if_stmt pos:start="263:5" pos:end="313:5"><if pos:start="263:5" pos:end="313:5">if <condition pos:start="263:8" pos:end="263:30">(<expr pos:start="263:9" pos:end="263:29"><operator pos:start="263:9" pos:end="263:9">!</operator><name pos:start="263:10" pos:end="263:29"><name pos:start="263:10" pos:end="263:12">ist</name><operator pos:start="263:13" pos:end="263:14">-&gt;</operator><name pos:start="263:15" pos:end="263:29">decoding_needed</name></name></expr>)</condition> <block pos:start="263:32" pos:end="313:5">{<block_content pos:start="265:9" pos:end="311:38">

        <expr_stmt pos:start="265:9" pos:end="265:33"><expr pos:start="265:9" pos:end="265:32"><name pos:start="265:9" pos:end="265:16"><name pos:start="265:9" pos:end="265:11">ist</name><operator pos:start="265:12" pos:end="265:13">-&gt;</operator><name pos:start="265:14" pos:end="265:16">dts</name></name> <operator pos:start="265:18" pos:end="265:18">=</operator> <name pos:start="265:20" pos:end="265:32"><name pos:start="265:20" pos:end="265:22">ist</name><operator pos:start="265:23" pos:end="265:24">-&gt;</operator><name pos:start="265:25" pos:end="265:32">next_dts</name></name></expr>;</expr_stmt>

        <switch pos:start="267:9" pos:end="307:9">switch <condition pos:start="267:16" pos:end="267:41">(<expr pos:start="267:17" pos:end="267:40"><name pos:start="267:17" pos:end="267:40"><name pos:start="267:17" pos:end="267:19">ist</name><operator pos:start="267:20" pos:end="267:21">-&gt;</operator><name pos:start="267:22" pos:end="267:28">dec_ctx</name><operator pos:start="267:29" pos:end="267:30">-&gt;</operator><name pos:start="267:31" pos:end="267:40">codec_type</name></name></expr>)</condition> <block pos:start="267:43" pos:end="307:9">{<block_content pos:start="269:9" pos:end="305:18">

        <case pos:start="269:9" pos:end="269:32">case <expr pos:start="269:14" pos:end="269:31"><name pos:start="269:14" pos:end="269:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="271:13" pos:end="273:55"><expr pos:start="271:13" pos:end="273:54"><name pos:start="271:13" pos:end="271:25"><name pos:start="271:13" pos:end="271:15">ist</name><operator pos:start="271:16" pos:end="271:17">-&gt;</operator><name pos:start="271:18" pos:end="271:25">next_dts</name></name> <operator pos:start="271:27" pos:end="271:28">+=</operator> <operator pos:start="271:30" pos:end="271:30">(</operator><operator pos:start="271:31" pos:end="271:31">(</operator><name pos:start="271:32" pos:end="271:38">int64_t</name><operator pos:start="271:39" pos:end="271:39">)</operator><name pos:start="271:40" pos:end="271:51">AV_TIME_BASE</name> <operator pos:start="271:53" pos:end="271:53">*</operator> <name pos:start="271:55" pos:end="271:78"><name pos:start="271:55" pos:end="271:57">ist</name><operator pos:start="271:58" pos:end="271:59">-&gt;</operator><name pos:start="271:60" pos:end="271:66">dec_ctx</name><operator pos:start="271:67" pos:end="271:68">-&gt;</operator><name pos:start="271:69" pos:end="271:78">frame_size</name></name><operator pos:start="271:79" pos:end="271:79">)</operator> <operator pos:start="271:81" pos:end="271:81">/</operator>

                             <name pos:start="273:30" pos:end="273:54"><name pos:start="273:30" pos:end="273:32">ist</name><operator pos:start="273:33" pos:end="273:34">-&gt;</operator><name pos:start="273:35" pos:end="273:41">dec_ctx</name><operator pos:start="273:42" pos:end="273:43">-&gt;</operator><name pos:start="273:44" pos:end="273:54">sample_rate</name></name></expr>;</expr_stmt>

            <break pos:start="275:13" pos:end="275:18">break;</break>

        <case pos:start="277:9" pos:end="277:32">case <expr pos:start="277:14" pos:end="277:31"><name pos:start="277:14" pos:end="277:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <if_stmt pos:start="279:13" pos:end="303:13"><if pos:start="279:13" pos:end="289:13">if <condition pos:start="279:16" pos:end="279:35">(<expr pos:start="279:17" pos:end="279:34"><name pos:start="279:17" pos:end="279:34"><name pos:start="279:17" pos:end="279:19">ist</name><operator pos:start="279:20" pos:end="279:21">-&gt;</operator><name pos:start="279:22" pos:end="279:30">framerate</name><operator pos:start="279:31" pos:end="279:31">.</operator><name pos:start="279:32" pos:end="279:34">num</name></name></expr>)</condition> <block pos:start="279:37" pos:end="289:13">{<block_content pos:start="283:17" pos:end="287:98">

                <comment type="line" pos:start="281:17" pos:end="281:66">// TODO: Remove work-around for c99-to-c89 issue 7</comment>

                <decl_stmt pos:start="283:17" pos:end="283:56"><decl pos:start="283:17" pos:end="283:55"><type pos:start="283:17" pos:end="283:26"><name pos:start="283:17" pos:end="283:26">AVRational</name></type> <name pos:start="283:28" pos:end="283:38">time_base_q</name> <init pos:start="283:40" pos:end="283:55">= <expr pos:start="283:42" pos:end="283:55"><name pos:start="283:42" pos:end="283:55">AV_TIME_BASE_Q</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="285:17" pos:end="285:102"><decl pos:start="285:17" pos:end="285:101"><type pos:start="285:17" pos:end="285:23"><name pos:start="285:17" pos:end="285:23">int64_t</name></type> <name pos:start="285:25" pos:end="285:32">next_dts</name> <init pos:start="285:34" pos:end="285:101">= <expr pos:start="285:36" pos:end="285:101"><call pos:start="285:36" pos:end="285:101"><name pos:start="285:36" pos:end="285:47">av_rescale_q</name><argument_list pos:start="285:48" pos:end="285:101">(<argument pos:start="285:49" pos:end="285:61"><expr pos:start="285:49" pos:end="285:61"><name pos:start="285:49" pos:end="285:61"><name pos:start="285:49" pos:end="285:51">ist</name><operator pos:start="285:52" pos:end="285:53">-&gt;</operator><name pos:start="285:54" pos:end="285:61">next_dts</name></name></expr></argument>, <argument pos:start="285:64" pos:end="285:74"><expr pos:start="285:64" pos:end="285:74"><name pos:start="285:64" pos:end="285:74">time_base_q</name></expr></argument>, <argument pos:start="285:77" pos:end="285:100"><expr pos:start="285:77" pos:end="285:100"><call pos:start="285:77" pos:end="285:100"><name pos:start="285:77" pos:end="285:84">av_inv_q</name><argument_list pos:start="285:85" pos:end="285:100">(<argument pos:start="285:86" pos:end="285:99"><expr pos:start="285:86" pos:end="285:99"><name pos:start="285:86" pos:end="285:99"><name pos:start="285:86" pos:end="285:88">ist</name><operator pos:start="285:89" pos:end="285:90">-&gt;</operator><name pos:start="285:91" pos:end="285:99">framerate</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:98"><expr pos:start="287:17" pos:end="287:97"><name pos:start="287:17" pos:end="287:29"><name pos:start="287:17" pos:end="287:19">ist</name><operator pos:start="287:20" pos:end="287:21">-&gt;</operator><name pos:start="287:22" pos:end="287:29">next_dts</name></name> <operator pos:start="287:31" pos:end="287:31">=</operator> <call pos:start="287:33" pos:end="287:97"><name pos:start="287:33" pos:end="287:44">av_rescale_q</name><argument_list pos:start="287:45" pos:end="287:97">(<argument pos:start="287:46" pos:end="287:57"><expr pos:start="287:46" pos:end="287:57"><name pos:start="287:46" pos:end="287:53">next_dts</name> <operator pos:start="287:55" pos:end="287:55">+</operator> <literal type="number" pos:start="287:57" pos:end="287:57">1</literal></expr></argument>, <argument pos:start="287:60" pos:end="287:83"><expr pos:start="287:60" pos:end="287:83"><call pos:start="287:60" pos:end="287:83"><name pos:start="287:60" pos:end="287:67">av_inv_q</name><argument_list pos:start="287:68" pos:end="287:83">(<argument pos:start="287:69" pos:end="287:82"><expr pos:start="287:69" pos:end="287:82"><name pos:start="287:69" pos:end="287:82"><name pos:start="287:69" pos:end="287:71">ist</name><operator pos:start="287:72" pos:end="287:73">-&gt;</operator><name pos:start="287:74" pos:end="287:82">framerate</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="287:86" pos:end="287:96"><expr pos:start="287:86" pos:end="287:96"><name pos:start="287:86" pos:end="287:96">time_base_q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="289:15" pos:end="293:13">else if <condition pos:start="289:23" pos:end="289:37">(<expr pos:start="289:24" pos:end="289:36"><name pos:start="289:24" pos:end="289:36"><name pos:start="289:24" pos:end="289:26">pkt</name><operator pos:start="289:27" pos:end="289:28">-&gt;</operator><name pos:start="289:29" pos:end="289:36">duration</name></name></expr>)</condition> <block pos:start="289:39" pos:end="293:13">{<block_content pos:start="291:17" pos:end="291:97">

                <expr_stmt pos:start="291:17" pos:end="291:97"><expr pos:start="291:17" pos:end="291:96"><name pos:start="291:17" pos:end="291:29"><name pos:start="291:17" pos:end="291:19">ist</name><operator pos:start="291:20" pos:end="291:21">-&gt;</operator><name pos:start="291:22" pos:end="291:29">next_dts</name></name> <operator pos:start="291:31" pos:end="291:32">+=</operator> <call pos:start="291:34" pos:end="291:96"><name pos:start="291:34" pos:end="291:45">av_rescale_q</name><argument_list pos:start="291:46" pos:end="291:96">(<argument pos:start="291:47" pos:end="291:59"><expr pos:start="291:47" pos:end="291:59"><name pos:start="291:47" pos:end="291:59"><name pos:start="291:47" pos:end="291:49">pkt</name><operator pos:start="291:50" pos:end="291:51">-&gt;</operator><name pos:start="291:52" pos:end="291:59">duration</name></name></expr></argument>, <argument pos:start="291:62" pos:end="291:79"><expr pos:start="291:62" pos:end="291:79"><name pos:start="291:62" pos:end="291:79"><name pos:start="291:62" pos:end="291:64">ist</name><operator pos:start="291:65" pos:end="291:66">-&gt;</operator><name pos:start="291:67" pos:end="291:68">st</name><operator pos:start="291:69" pos:end="291:70">-&gt;</operator><name pos:start="291:71" pos:end="291:79">time_base</name></name></expr></argument>, <argument pos:start="291:82" pos:end="291:95"><expr pos:start="291:82" pos:end="291:95"><name pos:start="291:82" pos:end="291:95">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="293:15" pos:end="303:13">else if<condition pos:start="293:22" pos:end="293:55">(<expr pos:start="293:23" pos:end="293:54"><name pos:start="293:23" pos:end="293:49"><name pos:start="293:23" pos:end="293:25">ist</name><operator pos:start="293:26" pos:end="293:27">-&gt;</operator><name pos:start="293:28" pos:end="293:34">dec_ctx</name><operator pos:start="293:35" pos:end="293:36">-&gt;</operator><name pos:start="293:37" pos:end="293:45">framerate</name><operator pos:start="293:46" pos:end="293:46">.</operator><name pos:start="293:47" pos:end="293:49">num</name></name> <operator pos:start="293:51" pos:end="293:52">!=</operator> <literal type="number" pos:start="293:54" pos:end="293:54">0</literal></expr>)</condition> <block pos:start="293:57" pos:end="303:13">{<block_content pos:start="295:17" pos:end="301:94">

                <decl_stmt pos:start="295:17" pos:end="295:138"><decl pos:start="295:17" pos:end="295:137"><type pos:start="295:17" pos:end="295:19"><name pos:start="295:17" pos:end="295:19">int</name></type> <name pos:start="295:21" pos:end="295:25">ticks</name><init pos:start="295:26" pos:end="295:137">= <expr pos:start="295:28" pos:end="295:137"><ternary pos:start="295:28" pos:end="295:137"><condition pos:start="295:28" pos:end="295:58"><expr pos:start="295:28" pos:end="295:56"><call pos:start="295:28" pos:end="295:56"><name pos:start="295:28" pos:end="295:47">av_stream_get_parser</name><argument_list pos:start="295:48" pos:end="295:56">(<argument pos:start="295:49" pos:end="295:55"><expr pos:start="295:49" pos:end="295:55"><name pos:start="295:49" pos:end="295:55"><name pos:start="295:49" pos:end="295:51">ist</name><operator pos:start="295:52" pos:end="295:53">-&gt;</operator><name pos:start="295:54" pos:end="295:55">st</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="295:60" pos:end="295:105"> <expr pos:start="295:60" pos:end="295:105"><call pos:start="295:60" pos:end="295:88"><name pos:start="295:60" pos:end="295:79">av_stream_get_parser</name><argument_list pos:start="295:80" pos:end="295:88">(<argument pos:start="295:81" pos:end="295:87"><expr pos:start="295:81" pos:end="295:87"><name pos:start="295:81" pos:end="295:87"><name pos:start="295:81" pos:end="295:83">ist</name><operator pos:start="295:84" pos:end="295:85">-&gt;</operator><name pos:start="295:86" pos:end="295:87">st</name></name></expr></argument>)</argument_list></call><operator pos:start="295:89" pos:end="295:90">-&gt;</operator><name pos:start="295:91" pos:end="295:101">repeat_pict</name> <operator pos:start="295:103" pos:end="295:103">+</operator> <literal type="number" pos:start="295:105" pos:end="295:105">1</literal></expr> </then><else pos:start="295:107" pos:end="295:137">: <expr pos:start="295:109" pos:end="295:137"><name pos:start="295:109" pos:end="295:137"><name pos:start="295:109" pos:end="295:111">ist</name><operator pos:start="295:112" pos:end="295:113">-&gt;</operator><name pos:start="295:114" pos:end="295:120">dec_ctx</name><operator pos:start="295:121" pos:end="295:122">-&gt;</operator><name pos:start="295:123" pos:end="295:137">ticks_per_frame</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="297:17" pos:end="301:94"><expr pos:start="297:17" pos:end="301:93"><name pos:start="297:17" pos:end="297:29"><name pos:start="297:17" pos:end="297:19">ist</name><operator pos:start="297:20" pos:end="297:21">-&gt;</operator><name pos:start="297:22" pos:end="297:29">next_dts</name></name> <operator pos:start="297:31" pos:end="297:32">+=</operator> <operator pos:start="297:34" pos:end="297:34">(</operator><operator pos:start="297:35" pos:end="297:35">(</operator><name pos:start="297:36" pos:end="297:42">int64_t</name><operator pos:start="297:43" pos:end="297:43">)</operator><name pos:start="297:44" pos:end="297:55">AV_TIME_BASE</name> <operator pos:start="297:57" pos:end="297:57">*</operator>

                                  <name pos:start="299:35" pos:end="299:61"><name pos:start="299:35" pos:end="299:37">ist</name><operator pos:start="299:38" pos:end="299:39">-&gt;</operator><name pos:start="299:40" pos:end="299:46">dec_ctx</name><operator pos:start="299:47" pos:end="299:48">-&gt;</operator><name pos:start="299:49" pos:end="299:57">framerate</name><operator pos:start="299:58" pos:end="299:58">.</operator><name pos:start="299:59" pos:end="299:61">den</name></name> <operator pos:start="299:63" pos:end="299:63">*</operator> <name pos:start="299:65" pos:end="299:69">ticks</name><operator pos:start="299:70" pos:end="299:70">)</operator> <operator pos:start="299:72" pos:end="299:72">/</operator>

                                  <name pos:start="301:35" pos:end="301:61"><name pos:start="301:35" pos:end="301:37">ist</name><operator pos:start="301:38" pos:end="301:39">-&gt;</operator><name pos:start="301:40" pos:end="301:46">dec_ctx</name><operator pos:start="301:47" pos:end="301:48">-&gt;</operator><name pos:start="301:49" pos:end="301:57">framerate</name><operator pos:start="301:58" pos:end="301:58">.</operator><name pos:start="301:59" pos:end="301:61">num</name></name> <operator pos:start="301:63" pos:end="301:63">/</operator> <name pos:start="301:65" pos:end="301:93"><name pos:start="301:65" pos:end="301:67">ist</name><operator pos:start="301:68" pos:end="301:69">-&gt;</operator><name pos:start="301:70" pos:end="301:76">dec_ctx</name><operator pos:start="301:77" pos:end="301:78">-&gt;</operator><name pos:start="301:79" pos:end="301:93">ticks_per_frame</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="305:13" pos:end="305:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="309:9" pos:end="309:28"><expr pos:start="309:9" pos:end="309:27"><name pos:start="309:9" pos:end="309:16"><name pos:start="309:9" pos:end="309:11">ist</name><operator pos:start="309:12" pos:end="309:13">-&gt;</operator><name pos:start="309:14" pos:end="309:16">pts</name></name> <operator pos:start="309:18" pos:end="309:18">=</operator> <name pos:start="309:20" pos:end="309:27"><name pos:start="309:20" pos:end="309:22">ist</name><operator pos:start="309:23" pos:end="309:24">-&gt;</operator><name pos:start="309:25" pos:end="309:27">dts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:38"><expr pos:start="311:9" pos:end="311:37"><name pos:start="311:9" pos:end="311:21"><name pos:start="311:9" pos:end="311:11">ist</name><operator pos:start="311:12" pos:end="311:13">-&gt;</operator><name pos:start="311:14" pos:end="311:21">next_pts</name></name> <operator pos:start="311:23" pos:end="311:23">=</operator> <name pos:start="311:25" pos:end="311:37"><name pos:start="311:25" pos:end="311:27">ist</name><operator pos:start="311:28" pos:end="311:29">-&gt;</operator><name pos:start="311:30" pos:end="311:37">next_dts</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="315:5" pos:end="329:5">for <control pos:start="315:9" pos:end="315:50">(<init pos:start="315:10" pos:end="315:15"><expr pos:start="315:10" pos:end="315:14"><name pos:start="315:10" pos:end="315:10">i</name> <operator pos:start="315:12" pos:end="315:12">=</operator> <literal type="number" pos:start="315:14" pos:end="315:14">0</literal></expr>;</init> <condition pos:start="315:17" pos:end="315:45"><expr pos:start="315:17" pos:end="315:44"><name pos:start="315:17" pos:end="315:19">pkt</name> <operator pos:start="315:21" pos:end="315:22">&amp;&amp;</operator> <name pos:start="315:24" pos:end="315:24">i</name> <operator pos:start="315:26" pos:end="315:26">&lt;</operator> <name pos:start="315:28" pos:end="315:44">nb_output_streams</name></expr>;</condition> <incr pos:start="315:47" pos:end="315:49"><expr pos:start="315:47" pos:end="315:49"><name pos:start="315:47" pos:end="315:47">i</name><operator pos:start="315:48" pos:end="315:49">++</operator></expr></incr>)</control> <block pos:start="315:52" pos:end="329:5">{<block_content pos:start="317:9" pos:end="327:37">

        <decl_stmt pos:start="317:9" pos:end="317:46"><decl pos:start="317:9" pos:end="317:45"><type pos:start="317:9" pos:end="317:22"><name pos:start="317:9" pos:end="317:20">OutputStream</name> <modifier pos:start="317:22" pos:end="317:22">*</modifier></type><name pos:start="317:23" pos:end="317:25">ost</name> <init pos:start="317:27" pos:end="317:45">= <expr pos:start="317:29" pos:end="317:45"><name pos:start="317:29" pos:end="317:45"><name pos:start="317:29" pos:end="317:42">output_streams</name><index pos:start="317:43" pos:end="317:45">[<expr pos:start="317:44" pos:end="317:44"><name pos:start="317:44" pos:end="317:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="321:9" pos:end="323:21"><if pos:start="321:9" pos:end="323:21">if <condition pos:start="321:12" pos:end="321:72">(<expr pos:start="321:13" pos:end="321:71"><operator pos:start="321:13" pos:end="321:13">!</operator><call pos:start="321:14" pos:end="321:47"><name pos:start="321:14" pos:end="321:37">check_output_constraints</name><argument_list pos:start="321:38" pos:end="321:47">(<argument pos:start="321:39" pos:end="321:41"><expr pos:start="321:39" pos:end="321:41"><name pos:start="321:39" pos:end="321:41">ist</name></expr></argument>, <argument pos:start="321:44" pos:end="321:46"><expr pos:start="321:44" pos:end="321:46"><name pos:start="321:44" pos:end="321:46">ost</name></expr></argument>)</argument_list></call> <operator pos:start="321:49" pos:end="321:50">||</operator> <name pos:start="321:52" pos:end="321:71"><name pos:start="321:52" pos:end="321:54">ost</name><operator pos:start="321:55" pos:end="321:56">-&gt;</operator><name pos:start="321:57" pos:end="321:71">encoding_needed</name></name></expr>)</condition><block type="pseudo" pos:start="323:13" pos:end="323:21"><block_content pos:start="323:13" pos:end="323:21">

            <continue pos:start="323:13" pos:end="323:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="327:9" pos:end="327:37"><expr pos:start="327:9" pos:end="327:36"><call pos:start="327:9" pos:end="327:36"><name pos:start="327:9" pos:end="327:21">do_streamcopy</name><argument_list pos:start="327:22" pos:end="327:36">(<argument pos:start="327:23" pos:end="327:25"><expr pos:start="327:23" pos:end="327:25"><name pos:start="327:23" pos:end="327:25">ist</name></expr></argument>, <argument pos:start="327:28" pos:end="327:30"><expr pos:start="327:28" pos:end="327:30"><name pos:start="327:28" pos:end="327:30">ost</name></expr></argument>, <argument pos:start="327:33" pos:end="327:35"><expr pos:start="327:33" pos:end="327:35"><name pos:start="327:33" pos:end="327:35">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="333:5" pos:end="333:24">return <expr pos:start="333:12" pos:end="333:23"><operator pos:start="333:12" pos:end="333:12">!</operator><name pos:start="333:13" pos:end="333:23">eof_reached</name></expr>;</return>

</block_content>}</block></function>
</unit>
