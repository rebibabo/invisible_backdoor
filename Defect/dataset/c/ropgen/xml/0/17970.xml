<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17970.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:57"><name pos:start="1:1" pos:end="1:19">iscsi_co_generic_cb</name><argument_list pos:start="1:20" pos:end="3:57">(<argument pos:start="1:21" pos:end="1:47">struct iscsi_context *iscsi</argument>, <argument pos:start="1:50" pos:end="1:59">int status</argument>,

                        <argument pos:start="3:25" pos:end="3:42">void *command_data</argument>, <argument pos:start="3:45" pos:end="3:56">void *opaque</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="115:1">{<block_content pos:start="7:5" pos:end="113:5">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:20">IscsiTask</name></name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:27">iTask</name> <init pos:start="7:29" pos:end="7:36">= <expr pos:start="7:31" pos:end="7:36"><name pos:start="7:31" pos:end="7:36">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:20">scsi_task</name></name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:26">task</name> <init pos:start="9:28" pos:end="9:41">= <expr pos:start="9:30" pos:end="9:41"><name pos:start="9:30" pos:end="9:41">command_data</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:9">iTask</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:17">status</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:26">status</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:9">iTask</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:19">do_retry</name></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:9">iTask</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:15">task</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:22">task</name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="95:5"><if pos:start="21:5" pos:end="91:5">if <condition pos:start="21:8" pos:end="21:35">(<expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:14">status</name> <operator pos:start="21:16" pos:end="21:17">!=</operator> <name pos:start="21:19" pos:end="21:34">SCSI_STATUS_GOOD</name></expr>)</condition> <block pos:start="21:37" pos:end="91:5">{<block_content pos:start="23:9" pos:end="89:66">

        <if_stmt pos:start="23:9" pos:end="85:9"><if pos:start="23:9" pos:end="85:9">if <condition pos:start="23:12" pos:end="23:49">(<expr pos:start="23:13" pos:end="23:48"><name pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:17">iTask</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:26">retries</name></name><operator pos:start="23:27" pos:end="23:28">++</operator> <operator pos:start="23:30" pos:end="23:30">&lt;</operator> <name pos:start="23:32" pos:end="23:48">ISCSI_CMD_RETRIES</name></expr>)</condition> <block pos:start="23:51" pos:end="85:9">{<block_content pos:start="25:13" pos:end="83:13">

            <if_stmt pos:start="25:13" pos:end="37:13"><if pos:start="25:13" pos:end="37:13">if <condition pos:start="25:16" pos:end="27:64">(<expr pos:start="25:17" pos:end="27:63"><name pos:start="25:17" pos:end="25:22">status</name> <operator pos:start="25:24" pos:end="25:25">==</operator> <name pos:start="25:27" pos:end="25:53">SCSI_STATUS_CHECK_CONDITION</name>

                <operator pos:start="27:17" pos:end="27:18">&amp;&amp;</operator> <name pos:start="27:20" pos:end="27:34"><name pos:start="27:20" pos:end="27:23">task</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:30">sense</name><operator pos:start="27:31" pos:end="27:31">.</operator><name pos:start="27:32" pos:end="27:34">key</name></name> <operator pos:start="27:36" pos:end="27:37">==</operator> <name pos:start="27:39" pos:end="27:63">SCSI_SENSE_UNIT_ATTENTION</name></expr>)</condition> <block pos:start="27:66" pos:end="37:13">{<block_content pos:start="29:17" pos:end="35:25">

                <expr_stmt pos:start="29:17" pos:end="31:53"><expr pos:start="29:17" pos:end="31:52"><call pos:start="29:17" pos:end="31:52"><name pos:start="29:17" pos:end="29:28">error_report</name><argument_list pos:start="29:29" pos:end="31:52">(<argument pos:start="29:30" pos:end="29:55"><expr pos:start="29:30" pos:end="29:55"><literal type="string" pos:start="29:30" pos:end="29:55">"iSCSI CheckCondition: %s"</literal></expr></argument>,

                             <argument pos:start="31:30" pos:end="31:51"><expr pos:start="31:30" pos:end="31:51"><call pos:start="31:30" pos:end="31:51"><name pos:start="31:30" pos:end="31:44">iscsi_get_error</name><argument_list pos:start="31:45" pos:end="31:51">(<argument pos:start="31:46" pos:end="31:50"><expr pos:start="31:46" pos:end="31:50"><name pos:start="31:46" pos:end="31:50">iscsi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:36"><expr pos:start="33:17" pos:end="33:35"><name pos:start="33:17" pos:end="33:31"><name pos:start="33:17" pos:end="33:21">iTask</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:31">do_retry</name></name> <operator pos:start="33:33" pos:end="33:33">=</operator> <literal type="number" pos:start="33:35" pos:end="33:35">1</literal></expr>;</expr_stmt>

                <goto pos:start="35:17" pos:end="35:25">goto <name pos:start="35:22" pos:end="35:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="39:13" pos:end="83:13"><if pos:start="39:13" pos:end="83:13">if <condition pos:start="39:16" pos:end="43:52">(<expr pos:start="39:17" pos:end="43:51"><name pos:start="39:17" pos:end="39:22">status</name> <operator pos:start="39:24" pos:end="39:25">==</operator> <name pos:start="39:27" pos:end="39:42">SCSI_STATUS_BUSY</name> <operator pos:start="39:44" pos:end="39:45">||</operator>

                <name pos:start="41:17" pos:end="41:22">status</name> <operator pos:start="41:24" pos:end="41:25">==</operator> <name pos:start="41:27" pos:end="41:45">SCSI_STATUS_TIMEOUT</name> <operator pos:start="41:47" pos:end="41:48">||</operator>

                <name pos:start="43:17" pos:end="43:22">status</name> <operator pos:start="43:24" pos:end="43:25">==</operator> <name pos:start="43:27" pos:end="43:51">SCSI_STATUS_TASK_SET_FULL</name></expr>)</condition> <block pos:start="43:54" pos:end="83:13">{<block_content pos:start="45:17" pos:end="81:23">

                <decl_stmt pos:start="45:17" pos:end="47:70"><decl pos:start="45:17" pos:end="47:69"><type pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:24">unsigned</name></type> <name pos:start="45:26" pos:end="45:35">retry_time</name> <init pos:start="45:37" pos:end="47:69">=

                    <expr pos:start="47:21" pos:end="47:69"><call pos:start="47:21" pos:end="47:69"><name pos:start="47:21" pos:end="47:30">exp_random</name><argument_list pos:start="47:31" pos:end="47:69">(<argument pos:start="47:32" pos:end="47:68"><expr pos:start="47:32" pos:end="47:68"><name pos:start="47:32" pos:end="47:68"><name pos:start="47:32" pos:end="47:48">iscsi_retry_times</name><index pos:start="47:49" pos:end="47:68">[<expr pos:start="47:50" pos:end="47:67"><name pos:start="47:50" pos:end="47:63"><name pos:start="47:50" pos:end="47:54">iTask</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:63">retries</name></name> <operator pos:start="47:65" pos:end="47:65">-</operator> <literal type="number" pos:start="47:67" pos:end="47:67">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="49:17" pos:end="59:17"><if pos:start="49:17" pos:end="59:17">if <condition pos:start="49:20" pos:end="49:50">(<expr pos:start="49:21" pos:end="49:49"><name pos:start="49:21" pos:end="49:26">status</name> <operator pos:start="49:28" pos:end="49:29">==</operator> <name pos:start="49:31" pos:end="49:49">SCSI_STATUS_TIMEOUT</name></expr>)</condition> <block pos:start="49:52" pos:end="59:17">{<block_content pos:start="55:21" pos:end="57:62">

                    <comment type="block" pos:start="51:21" pos:end="53:48">/* make sure the request is rescheduled AFTER the

                     * reconnect is initiated */</comment>

                    <expr_stmt pos:start="55:21" pos:end="55:52"><expr pos:start="55:21" pos:end="55:51"><name pos:start="55:21" pos:end="55:30">retry_time</name> <operator pos:start="55:32" pos:end="55:32">=</operator> <name pos:start="55:34" pos:end="55:47">EVENT_INTERVAL</name> <operator pos:start="55:49" pos:end="55:49">*</operator> <literal type="number" pos:start="55:51" pos:end="55:51">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:62"><expr pos:start="57:21" pos:end="57:61"><name pos:start="57:21" pos:end="57:54"><name pos:start="57:21" pos:end="57:25">iTask</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:35">iscsilun</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:54">request_timed_out</name></name> <operator pos:start="57:56" pos:end="57:56">=</operator> <name pos:start="57:58" pos:end="57:61">true</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="61:17" pos:end="67:53"><expr pos:start="61:17" pos:end="67:52"><call pos:start="61:17" pos:end="67:52"><name pos:start="61:17" pos:end="61:28">error_report</name><argument_list pos:start="61:29" pos:end="67:52">(<argument pos:start="61:30" pos:end="63:56"><expr pos:start="61:30" pos:end="63:56"><literal type="string" pos:start="61:30" pos:end="61:61">"iSCSI Busy/TaskSetFull/TimeOut"</literal>

                             <literal type="string" pos:start="63:30" pos:end="63:56">" (retry #%u in %u ms): %s"</literal></expr></argument>,

                             <argument pos:start="65:30" pos:end="65:43"><expr pos:start="65:30" pos:end="65:43"><name pos:start="65:30" pos:end="65:43"><name pos:start="65:30" pos:end="65:34">iTask</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:43">retries</name></name></expr></argument>, <argument pos:start="65:46" pos:end="65:55"><expr pos:start="65:46" pos:end="65:55"><name pos:start="65:46" pos:end="65:55">retry_time</name></expr></argument>,

                             <argument pos:start="67:30" pos:end="67:51"><expr pos:start="67:30" pos:end="67:51"><call pos:start="67:30" pos:end="67:51"><name pos:start="67:30" pos:end="67:44">iscsi_get_error</name><argument_list pos:start="67:45" pos:end="67:51">(<argument pos:start="67:46" pos:end="67:50"><expr pos:start="67:46" pos:end="67:50"><name pos:start="67:46" pos:end="67:50">iscsi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="73:75"><expr pos:start="69:17" pos:end="73:74"><call pos:start="69:17" pos:end="73:74"><name pos:start="69:17" pos:end="69:30">aio_timer_init</name><argument_list pos:start="69:31" pos:end="73:74">(<argument pos:start="69:32" pos:end="69:59"><expr pos:start="69:32" pos:end="69:59"><name pos:start="69:32" pos:end="69:59"><name pos:start="69:32" pos:end="69:36">iTask</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:46">iscsilun</name><operator pos:start="69:47" pos:end="69:48">-&gt;</operator><name pos:start="69:49" pos:end="69:59">aio_context</name></name></expr></argument>,

                               <argument pos:start="71:32" pos:end="71:50"><expr pos:start="71:32" pos:end="71:50"><operator pos:start="71:32" pos:end="71:32">&amp;</operator><name pos:start="71:33" pos:end="71:50"><name pos:start="71:33" pos:end="71:37">iTask</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:50">retry_timer</name></name></expr></argument>, <argument pos:start="71:53" pos:end="71:71"><expr pos:start="71:53" pos:end="71:71"><name pos:start="71:53" pos:end="71:71">QEMU_CLOCK_REALTIME</name></expr></argument>,

                               <argument pos:start="73:32" pos:end="73:39"><expr pos:start="73:32" pos:end="73:39"><name pos:start="73:32" pos:end="73:39">SCALE_MS</name></expr></argument>, <argument pos:start="73:42" pos:end="73:66"><expr pos:start="73:42" pos:end="73:66"><name pos:start="73:42" pos:end="73:66">iscsi_retry_timer_expired</name></expr></argument>, <argument pos:start="73:69" pos:end="73:73"><expr pos:start="73:69" pos:end="73:73"><name pos:start="73:69" pos:end="73:73">iTask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="77:79"><expr pos:start="75:17" pos:end="77:78"><call pos:start="75:17" pos:end="77:78"><name pos:start="75:17" pos:end="75:25">timer_mod</name><argument_list pos:start="75:26" pos:end="77:78">(<argument pos:start="75:27" pos:end="75:45"><expr pos:start="75:27" pos:end="75:45"><operator pos:start="75:27" pos:end="75:27">&amp;</operator><name pos:start="75:28" pos:end="75:45"><name pos:start="75:28" pos:end="75:32">iTask</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:45">retry_timer</name></name></expr></argument>,

                          <argument pos:start="77:27" pos:end="77:77"><expr pos:start="77:27" pos:end="77:77"><call pos:start="77:27" pos:end="77:64"><name pos:start="77:27" pos:end="77:43">qemu_clock_get_ms</name><argument_list pos:start="77:44" pos:end="77:64">(<argument pos:start="77:45" pos:end="77:63"><expr pos:start="77:45" pos:end="77:63"><name pos:start="77:45" pos:end="77:63">QEMU_CLOCK_REALTIME</name></expr></argument>)</argument_list></call> <operator pos:start="77:66" pos:end="77:66">+</operator> <name pos:start="77:68" pos:end="77:77">retry_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:36"><expr pos:start="79:17" pos:end="79:35"><name pos:start="79:17" pos:end="79:31"><name pos:start="79:17" pos:end="79:21">iTask</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:31">do_retry</name></name> <operator pos:start="79:33" pos:end="79:33">=</operator> <literal type="number" pos:start="79:35" pos:end="79:35">1</literal></expr>;</expr_stmt>

                <return pos:start="81:17" pos:end="81:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:62"><expr pos:start="87:9" pos:end="87:61"><name pos:start="87:9" pos:end="87:23"><name pos:start="87:9" pos:end="87:13">iTask</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:23">err_code</name></name> <operator pos:start="87:25" pos:end="87:25">=</operator> <call pos:start="87:27" pos:end="87:61"><name pos:start="87:27" pos:end="87:47">iscsi_translate_sense</name><argument_list pos:start="87:48" pos:end="87:61">(<argument pos:start="87:49" pos:end="87:60"><expr pos:start="87:49" pos:end="87:60"><operator pos:start="87:49" pos:end="87:49">&amp;</operator><name pos:start="87:50" pos:end="87:60"><name pos:start="87:50" pos:end="87:53">task</name><operator pos:start="87:54" pos:end="87:55">-&gt;</operator><name pos:start="87:56" pos:end="87:60">sense</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:66"><expr pos:start="89:9" pos:end="89:65"><call pos:start="89:9" pos:end="89:65"><name pos:start="89:9" pos:end="89:20">error_report</name><argument_list pos:start="89:21" pos:end="89:65">(<argument pos:start="89:22" pos:end="89:40"><expr pos:start="89:22" pos:end="89:40"><literal type="string" pos:start="89:22" pos:end="89:40">"iSCSI Failure: %s"</literal></expr></argument>, <argument pos:start="89:43" pos:end="89:64"><expr pos:start="89:43" pos:end="89:64"><call pos:start="89:43" pos:end="89:64"><name pos:start="89:43" pos:end="89:57">iscsi_get_error</name><argument_list pos:start="89:58" pos:end="89:64">(<argument pos:start="89:59" pos:end="89:63"><expr pos:start="89:59" pos:end="89:63"><name pos:start="89:59" pos:end="89:63">iscsi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="95:5">else <block pos:start="91:12" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:69">

        <expr_stmt pos:start="93:9" pos:end="93:69"><expr pos:start="93:9" pos:end="93:68"><name pos:start="93:9" pos:end="93:41"><name pos:start="93:9" pos:end="93:13">iTask</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:23">iscsilun</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:41">force_next_flush</name></name> <operator pos:start="93:43" pos:end="93:44">|=</operator> <name pos:start="93:46" pos:end="93:68"><name pos:start="93:46" pos:end="93:50">iTask</name><operator pos:start="93:51" pos:end="93:52">-&gt;</operator><name pos:start="93:53" pos:end="93:68">force_next_flush</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="99:1" pos:end="99:4"><name pos:start="99:1" pos:end="99:3">out</name>:</label>

    <if_stmt pos:start="101:5" pos:end="113:5"><if pos:start="101:5" pos:end="109:5">if <condition pos:start="101:8" pos:end="101:18">(<expr pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:13">iTask</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:17">co</name></name></expr>)</condition> <block pos:start="101:20" pos:end="109:5">{<block_content pos:start="103:9" pos:end="107:36">

        <expr_stmt pos:start="103:9" pos:end="105:62"><expr pos:start="103:9" pos:end="105:61"><name pos:start="103:9" pos:end="103:17"><name pos:start="103:9" pos:end="103:13">iTask</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:17">bh</name></name> <operator pos:start="103:19" pos:end="103:19">=</operator> <call pos:start="103:21" pos:end="105:61"><name pos:start="103:21" pos:end="103:30">aio_bh_new</name><argument_list pos:start="103:31" pos:end="105:61">(<argument pos:start="103:32" pos:end="103:59"><expr pos:start="103:32" pos:end="103:59"><name pos:start="103:32" pos:end="103:59"><name pos:start="103:32" pos:end="103:36">iTask</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:46">iscsilun</name><operator pos:start="103:47" pos:end="103:48">-&gt;</operator><name pos:start="103:49" pos:end="103:59">aio_context</name></name></expr></argument>,

                               <argument pos:start="105:32" pos:end="105:53"><expr pos:start="105:32" pos:end="105:53"><name pos:start="105:32" pos:end="105:53">iscsi_co_generic_bh_cb</name></expr></argument>, <argument pos:start="105:56" pos:end="105:60"><expr pos:start="105:56" pos:end="105:60"><name pos:start="105:56" pos:end="105:60">iTask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:36"><expr pos:start="107:9" pos:end="107:35"><call pos:start="107:9" pos:end="107:35"><name pos:start="107:9" pos:end="107:24">qemu_bh_schedule</name><argument_list pos:start="107:25" pos:end="107:35">(<argument pos:start="107:26" pos:end="107:34"><expr pos:start="107:26" pos:end="107:34"><name pos:start="107:26" pos:end="107:34"><name pos:start="107:26" pos:end="107:30">iTask</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:34">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="109:7" pos:end="113:5">else <block pos:start="109:12" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:28">

        <expr_stmt pos:start="111:9" pos:end="111:28"><expr pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:13">iTask</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:23">complete</name></name> <operator pos:start="111:25" pos:end="111:25">=</operator> <literal type="number" pos:start="111:27" pos:end="111:27">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block>
</unit>
