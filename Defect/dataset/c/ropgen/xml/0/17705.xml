<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17705.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">parse_numa</name><parameter_list pos:start="1:22" pos:end="1:65">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:34"><name pos:start="1:23" pos:end="1:26">void</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:34">opaque</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:50"><decl pos:start="1:37" pos:end="1:50"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:44">QemuOpts</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">opts</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:57">Error</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier><modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:14">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">NumaOptions</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:23">object</name> <init pos:start="5:25" pos:end="5:30">= <expr pos:start="5:27" pos:end="5:30"><name pos:start="5:27" pos:end="5:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:14">err</name> <init pos:start="7:16" pos:end="7:21">= <expr pos:start="7:18" pos:end="7:21"><name pos:start="7:18" pos:end="7:21">NULL</name></expr></init></decl>;</decl_stmt>



    <block pos:start="11:5" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:33">

        <decl_stmt pos:start="13:9" pos:end="13:49"><decl pos:start="13:9" pos:end="13:48"><type pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:19">OptsVisitor</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:23">ov</name> <init pos:start="13:25" pos:end="13:48">= <expr pos:start="13:27" pos:end="13:48"><call pos:start="13:27" pos:end="13:48"><name pos:start="13:27" pos:end="13:42">opts_visitor_new</name><argument_list pos:start="13:43" pos:end="13:48">(<argument pos:start="13:44" pos:end="13:47"><expr pos:start="13:44" pos:end="13:47"><name pos:start="13:44" pos:end="13:47">opts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:74"><expr pos:start="15:9" pos:end="15:73"><call pos:start="15:9" pos:end="15:73"><name pos:start="15:9" pos:end="15:30">visit_type_NumaOptions</name><argument_list pos:start="15:31" pos:end="15:73">(<argument pos:start="15:32" pos:end="15:51"><expr pos:start="15:32" pos:end="15:51"><call pos:start="15:32" pos:end="15:51"><name pos:start="15:32" pos:end="15:47">opts_get_visitor</name><argument_list pos:start="15:48" pos:end="15:51">(<argument pos:start="15:49" pos:end="15:50"><expr pos:start="15:49" pos:end="15:50"><name pos:start="15:49" pos:end="15:50">ov</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:54" pos:end="15:57"><expr pos:start="15:54" pos:end="15:57"><name pos:start="15:54" pos:end="15:57">NULL</name></expr></argument>, <argument pos:start="15:60" pos:end="15:66"><expr pos:start="15:60" pos:end="15:66"><operator pos:start="15:60" pos:end="15:60">&amp;</operator><name pos:start="15:61" pos:end="15:66">object</name></expr></argument>, <argument pos:start="15:69" pos:end="15:72"><expr pos:start="15:69" pos:end="15:72"><operator pos:start="15:69" pos:end="15:69">&amp;</operator><name pos:start="15:70" pos:end="15:72">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:33"><expr pos:start="17:9" pos:end="17:32"><call pos:start="17:9" pos:end="17:32"><name pos:start="17:9" pos:end="17:28">opts_visitor_cleanup</name><argument_list pos:start="17:29" pos:end="17:32">(<argument pos:start="17:30" pos:end="17:31"><expr pos:start="17:30" pos:end="17:31"><name pos:start="17:30" pos:end="17:31">ov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">err</name></expr>)</condition> <block pos:start="23:14" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:19">

        <goto pos:start="25:9" pos:end="25:19">goto <name pos:start="25:14" pos:end="25:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="31:5" pos:end="51:5">switch <condition pos:start="31:12" pos:end="31:25">(<expr pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:18">object</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:24">type</name></name></expr>)</condition> <block pos:start="31:27" pos:end="51:5">{<block_content pos:start="33:5" pos:end="49:16">

    <case pos:start="33:5" pos:end="33:32">case <expr pos:start="33:10" pos:end="33:31"><name pos:start="33:10" pos:end="33:31">NUMA_OPTIONS_KIND_NODE</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:52"><expr pos:start="35:9" pos:end="35:51"><call pos:start="35:9" pos:end="35:51"><name pos:start="35:9" pos:end="35:23">numa_node_parse</name><argument_list pos:start="35:24" pos:end="35:51">(<argument pos:start="35:25" pos:end="35:38"><expr pos:start="35:25" pos:end="35:38"><name pos:start="35:25" pos:end="35:38"><name pos:start="35:25" pos:end="35:30">object</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:33">u</name><operator pos:start="35:34" pos:end="35:34">.</operator><name pos:start="35:35" pos:end="35:38">node</name></name></expr></argument>, <argument pos:start="35:41" pos:end="35:44"><expr pos:start="35:41" pos:end="35:44"><name pos:start="35:41" pos:end="35:44">opts</name></expr></argument>, <argument pos:start="35:47" pos:end="35:50"><expr pos:start="35:47" pos:end="35:50"><operator pos:start="35:47" pos:end="35:47">&amp;</operator><name pos:start="35:48" pos:end="35:50">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:16">(<expr pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">err</name></expr>)</condition> <block pos:start="37:18" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:23">

            <goto pos:start="39:13" pos:end="39:23">goto <name pos:start="39:18" pos:end="39:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:24"><expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:21">nb_numa_nodes</name><operator pos:start="43:22" pos:end="43:23">++</operator></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <default pos:start="47:5" pos:end="47:12">default:</default>

        <expr_stmt pos:start="49:9" pos:end="49:16"><expr pos:start="49:9" pos:end="49:15"><call pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:13">abort</name><argument_list pos:start="49:14" pos:end="49:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>



<label pos:start="59:1" pos:end="59:6"><name pos:start="59:1" pos:end="59:5">error</name>:</label>

    <expr_stmt pos:start="61:5" pos:end="61:26"><expr pos:start="61:5" pos:end="61:25"><call pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:20">error_report_err</name><argument_list pos:start="61:21" pos:end="61:25">(<argument pos:start="61:22" pos:end="61:24"><expr pos:start="61:22" pos:end="61:24"><name pos:start="61:22" pos:end="61:24">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:34"><expr pos:start="63:5" pos:end="63:33"><call pos:start="63:5" pos:end="63:33"><name pos:start="63:5" pos:end="63:25">qapi_free_NumaOptions</name><argument_list pos:start="63:26" pos:end="63:33">(<argument pos:start="63:27" pos:end="63:32"><expr pos:start="63:27" pos:end="63:32"><name pos:start="63:27" pos:end="63:32">object</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="67:5" pos:end="67:14">return <expr pos:start="67:12" pos:end="67:13"><operator pos:start="67:12" pos:end="67:12">-</operator><literal type="number" pos:start="67:13" pos:end="67:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
