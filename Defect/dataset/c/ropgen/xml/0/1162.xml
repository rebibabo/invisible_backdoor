<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1162.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">qemu_rbd_complete_aio</name><parameter_list pos:start="1:34" pos:end="1:47">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:43"><name pos:start="1:35" pos:end="1:41">RADOSCB</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">rcb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:16">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">RBDAIOCB</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">acb</name> <init pos:start="5:19" pos:end="5:28">= <expr pos:start="5:21" pos:end="5:28"><name pos:start="5:21" pos:end="5:28"><name pos:start="5:21" pos:end="5:23">rcb</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:28">acb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:13">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:5">r</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <name pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:11">rcb</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:16">ret</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="57:5"><if pos:start="15:5" pos:end="31:5">if <condition pos:start="15:8" pos:end="17:36">(<expr pos:start="15:9" pos:end="17:35"><name pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:11">acb</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:16">cmd</name></name> <operator pos:start="15:18" pos:end="15:19">==</operator> <name pos:start="15:21" pos:end="15:33">RBD_AIO_WRITE</name> <operator pos:start="15:35" pos:end="15:36">||</operator>

        <name pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:11">acb</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:16">cmd</name></name> <operator pos:start="17:18" pos:end="17:19">==</operator> <name pos:start="17:21" pos:end="17:35">RBD_AIO_DISCARD</name></expr>)</condition> <block pos:start="17:38" pos:end="31:5">{<block_content pos:start="19:9" pos:end="29:9">

        <if_stmt pos:start="19:9" pos:end="29:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:18">(<expr pos:start="19:13" pos:end="19:17"><name pos:start="19:13" pos:end="19:13">r</name> <operator pos:start="19:15" pos:end="19:15">&lt;</operator> <literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr>)</condition> <block pos:start="19:20" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:27">

            <expr_stmt pos:start="21:13" pos:end="21:25"><expr pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:15">acb</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:20">ret</name></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <name pos:start="21:24" pos:end="21:24">r</name></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:27"><expr pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:15">acb</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:22">error</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <literal type="number" pos:start="23:26" pos:end="23:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="25:11" pos:end="29:9">else if <condition pos:start="25:19" pos:end="25:31">(<expr pos:start="25:20" pos:end="25:30"><operator pos:start="25:20" pos:end="25:20">!</operator><name pos:start="25:21" pos:end="25:30"><name pos:start="25:21" pos:end="25:23">acb</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:30">error</name></name></expr>)</condition> <block pos:start="25:33" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:33">

            <expr_stmt pos:start="27:13" pos:end="27:33"><expr pos:start="27:13" pos:end="27:32"><name pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:15">acb</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:20">ret</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:32"><name pos:start="27:24" pos:end="27:26">rcb</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:32">size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="57:5">else <block pos:start="31:12" pos:end="57:5">{<block_content pos:start="33:9" pos:end="55:9">

        <if_stmt pos:start="33:9" pos:end="55:9"><if pos:start="33:9" pos:end="41:9">if <condition pos:start="33:12" pos:end="33:18">(<expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:13">r</name> <operator pos:start="33:15" pos:end="33:15">&lt;</operator> <literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr>)</condition> <block pos:start="33:20" pos:end="41:9">{<block_content pos:start="35:13" pos:end="39:27">

            <expr_stmt pos:start="35:13" pos:end="35:43"><expr pos:start="35:13" pos:end="35:42"><call pos:start="35:13" pos:end="35:42"><name pos:start="35:13" pos:end="35:18">memset</name><argument_list pos:start="35:19" pos:end="35:42">(<argument pos:start="35:20" pos:end="35:27"><expr pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:22">rcb</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:27">buf</name></name></expr></argument>, <argument pos:start="35:30" pos:end="35:30"><expr pos:start="35:30" pos:end="35:30"><literal type="number" pos:start="35:30" pos:end="35:30">0</literal></expr></argument>, <argument pos:start="35:33" pos:end="35:41"><expr pos:start="35:33" pos:end="35:41"><name pos:start="35:33" pos:end="35:41"><name pos:start="35:33" pos:end="35:35">rcb</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:41">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:25"><expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:15">acb</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:20">ret</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:24">r</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:27"><expr pos:start="39:13" pos:end="39:26"><name pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:15">acb</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:22">error</name></name> <operator pos:start="39:24" pos:end="39:24">=</operator> <literal type="number" pos:start="39:26" pos:end="39:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="41:11" pos:end="51:9">else if <condition pos:start="41:19" pos:end="41:33">(<expr pos:start="41:20" pos:end="41:32"><name pos:start="41:20" pos:end="41:20">r</name> <operator pos:start="41:22" pos:end="41:22">&lt;</operator> <name pos:start="41:24" pos:end="41:32"><name pos:start="41:24" pos:end="41:26">rcb</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:32">size</name></name></expr>)</condition> <block pos:start="41:35" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:13">

            <expr_stmt pos:start="43:13" pos:end="43:51"><expr pos:start="43:13" pos:end="43:50"><call pos:start="43:13" pos:end="43:50"><name pos:start="43:13" pos:end="43:18">memset</name><argument_list pos:start="43:19" pos:end="43:50">(<argument pos:start="43:20" pos:end="43:31"><expr pos:start="43:20" pos:end="43:31"><name pos:start="43:20" pos:end="43:27"><name pos:start="43:20" pos:end="43:22">rcb</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:27">buf</name></name> <operator pos:start="43:29" pos:end="43:29">+</operator> <name pos:start="43:31" pos:end="43:31">r</name></expr></argument>, <argument pos:start="43:34" pos:end="43:34"><expr pos:start="43:34" pos:end="43:34"><literal type="number" pos:start="43:34" pos:end="43:34">0</literal></expr></argument>, <argument pos:start="43:37" pos:end="43:49"><expr pos:start="43:37" pos:end="43:49"><name pos:start="43:37" pos:end="43:45"><name pos:start="43:37" pos:end="43:39">rcb</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:45">size</name></name> <operator pos:start="43:47" pos:end="43:47">-</operator> <name pos:start="43:49" pos:end="43:49">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="49:13"><if pos:start="45:13" pos:end="49:13">if <condition pos:start="45:16" pos:end="45:28">(<expr pos:start="45:17" pos:end="45:27"><operator pos:start="45:17" pos:end="45:17">!</operator><name pos:start="45:18" pos:end="45:27"><name pos:start="45:18" pos:end="45:20">acb</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:27">error</name></name></expr>)</condition> <block pos:start="45:30" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:37">

                <expr_stmt pos:start="47:17" pos:end="47:37"><expr pos:start="47:17" pos:end="47:36"><name pos:start="47:17" pos:end="47:24"><name pos:start="47:17" pos:end="47:19">acb</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:24">ret</name></name> <operator pos:start="47:26" pos:end="47:26">=</operator> <name pos:start="47:28" pos:end="47:36"><name pos:start="47:28" pos:end="47:30">rcb</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:36">size</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="51:11" pos:end="55:9">else if <condition pos:start="51:19" pos:end="51:31">(<expr pos:start="51:20" pos:end="51:30"><operator pos:start="51:20" pos:end="51:20">!</operator><name pos:start="51:21" pos:end="51:30"><name pos:start="51:21" pos:end="51:23">acb</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:30">error</name></name></expr>)</condition> <block pos:start="51:33" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:25">

            <expr_stmt pos:start="53:13" pos:end="53:25"><expr pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:15">acb</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:20">ret</name></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:24">r</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="59:5" pos:end="59:75">/* Note that acb-&gt;bh can be NULL in case where the aio was cancelled */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:46"><expr pos:start="61:5" pos:end="61:45"><name pos:start="61:5" pos:end="61:11"><name pos:start="61:5" pos:end="61:7">acb</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:11">bh</name></name> <operator pos:start="61:13" pos:end="61:13">=</operator> <call pos:start="61:15" pos:end="61:45"><name pos:start="61:15" pos:end="61:25">qemu_bh_new</name><argument_list pos:start="61:26" pos:end="61:45">(<argument pos:start="61:27" pos:end="61:39"><expr pos:start="61:27" pos:end="61:39"><name pos:start="61:27" pos:end="61:39">rbd_aio_bh_cb</name></expr></argument>, <argument pos:start="61:42" pos:end="61:44"><expr pos:start="61:42" pos:end="61:44"><name pos:start="61:42" pos:end="61:44">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:30"><expr pos:start="63:5" pos:end="63:29"><call pos:start="63:5" pos:end="63:29"><name pos:start="63:5" pos:end="63:20">qemu_bh_schedule</name><argument_list pos:start="63:21" pos:end="63:29">(<argument pos:start="63:22" pos:end="63:28"><expr pos:start="63:22" pos:end="63:28"><name pos:start="63:22" pos:end="63:28"><name pos:start="63:22" pos:end="63:24">acb</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:28">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:16"><expr pos:start="65:5" pos:end="65:15"><call pos:start="65:5" pos:end="65:15"><name pos:start="65:5" pos:end="65:10">g_free</name><argument_list pos:start="65:11" pos:end="65:15">(<argument pos:start="65:12" pos:end="65:14"><expr pos:start="65:12" pos:end="65:14"><name pos:start="65:12" pos:end="65:14">rcb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
