<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11426.c" pos:tabs="8"><function pos:start="1:1" pos:end="431:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mpeg_decode_slice</name><parameter_list pos:start="1:29" pos:end="3:63">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:41">Mpeg1Context</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">s1</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:55"><decl pos:start="1:48" pos:end="1:55"><type pos:start="1:48" pos:end="1:55"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:55">mb_y</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:48"><decl pos:start="3:30" pos:end="3:48"><type pos:start="3:30" pos:end="3:48"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">uint8_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier><modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:48">buf</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:62"><decl pos:start="3:51" pos:end="3:62"><type pos:start="3:51" pos:end="3:62"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:62">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="431:1">{<block_content pos:start="7:5" pos:end="429:13">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:41">= <expr pos:start="7:25" pos:end="7:41"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:27">s1</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:41">mpeg_enc_ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">avctx</name><init pos:start="9:26" pos:end="9:35">= <expr pos:start="9:28" pos:end="9:35"><name pos:start="9:28" pos:end="9:35"><name pos:start="9:28" pos:end="9:28">s</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:35">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:60"><decl pos:start="11:5" pos:end="11:59"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:23">field_pic</name><init pos:start="11:24" pos:end="11:59">= <expr pos:start="11:26" pos:end="11:59"><name pos:start="11:26" pos:end="11:45"><name pos:start="11:26" pos:end="11:26">s</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:45">picture_structure</name></name> <operator pos:start="11:47" pos:end="11:48">!=</operator> <name pos:start="11:50" pos:end="11:59">PICT_FRAME</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:20">lowres</name><init pos:start="13:21" pos:end="13:38">= <expr pos:start="13:23" pos:end="13:38"><name pos:start="13:23" pos:end="13:38"><name pos:start="13:23" pos:end="13:23">s</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:30">avctx</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:38">lowres</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:23"><expr pos:start="17:5" pos:end="19:22"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:18">resync_mb_x</name></name><operator pos:start="17:19" pos:end="17:19">=</operator>

    <name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:18">resync_mb_y</name></name><operator pos:start="19:19" pos:end="19:19">=</operator> <operator pos:start="19:21" pos:end="19:21">-</operator><literal type="number" pos:start="19:22" pos:end="19:22">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:29">(<expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:12">mb_y</name> <operator pos:start="23:14" pos:end="23:15">&gt;=</operator> <name pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:28">mb_height</name></name></expr>)</condition><block pos:start="23:30" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:18">

        <expr_stmt pos:start="25:9" pos:end="25:93"><expr pos:start="25:9" pos:end="25:92"><call pos:start="25:9" pos:end="25:92"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:92">(<argument pos:start="25:16" pos:end="25:23"><expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:23">avctx</name></name></expr></argument>, <argument pos:start="25:26" pos:end="25:37"><expr pos:start="25:26" pos:end="25:37"><name pos:start="25:26" pos:end="25:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:40" pos:end="25:71"><expr pos:start="25:40" pos:end="25:71"><literal type="string" pos:start="25:40" pos:end="25:71">"slice below image (%d &gt;= %d)\n"</literal></expr></argument>, <argument pos:start="25:74" pos:end="25:77"><expr pos:start="25:74" pos:end="25:77"><name pos:start="25:74" pos:end="25:77">mb_y</name></expr></argument>, <argument pos:start="25:80" pos:end="25:91"><expr pos:start="25:80" pos:end="25:91"><name pos:start="25:80" pos:end="25:91"><name pos:start="25:80" pos:end="25:80">s</name><operator pos:start="25:81" pos:end="25:82">-&gt;</operator><name pos:start="25:83" pos:end="25:91">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:44"><expr pos:start="33:5" pos:end="33:43"><call pos:start="33:5" pos:end="33:43"><name pos:start="33:5" pos:end="33:17">init_get_bits</name><argument_list pos:start="33:18" pos:end="33:43">(<argument pos:start="33:19" pos:end="33:24"><expr pos:start="33:19" pos:end="33:24"><operator pos:start="33:19" pos:end="33:19">&amp;</operator><name pos:start="33:20" pos:end="33:24"><name pos:start="33:20" pos:end="33:20">s</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:24">gb</name></name></expr></argument>, <argument pos:start="33:27" pos:end="33:30"><expr pos:start="33:27" pos:end="33:30"><operator pos:start="33:27" pos:end="33:27">*</operator><name pos:start="33:28" pos:end="33:30">buf</name></expr></argument>, <argument pos:start="33:33" pos:end="33:42"><expr pos:start="33:33" pos:end="33:42"><name pos:start="33:33" pos:end="33:40">buf_size</name><operator pos:start="33:41" pos:end="33:41">*</operator><literal type="number" pos:start="33:42" pos:end="33:42">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><call pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:26">ff_mpeg1_clean_buffers</name><argument_list pos:start="37:27" pos:end="37:29">(<argument pos:start="37:28" pos:end="37:28"><expr pos:start="37:28" pos:end="37:28"><name pos:start="37:28" pos:end="37:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:21">interlaced_dct</name></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:13">qscale</name></name> <operator pos:start="43:15" pos:end="43:15">=</operator> <call pos:start="43:17" pos:end="43:29"><name pos:start="43:17" pos:end="43:26">get_qscale</name><argument_list pos:start="43:27" pos:end="43:29">(<argument pos:start="43:28" pos:end="43:28"><expr pos:start="43:28" pos:end="43:28"><name pos:start="43:28" pos:end="43:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if<condition pos:start="47:7" pos:end="47:22">(<expr pos:start="47:8" pos:end="47:21"><name pos:start="47:8" pos:end="47:16"><name pos:start="47:8" pos:end="47:8">s</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:16">qscale</name></name> <operator pos:start="47:18" pos:end="47:19">==</operator> <literal type="number" pos:start="47:21" pos:end="47:21">0</literal></expr>)</condition><block pos:start="47:23" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:18">

        <expr_stmt pos:start="49:9" pos:end="49:56"><expr pos:start="49:9" pos:end="49:55"><call pos:start="49:9" pos:end="49:55"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:55">(<argument pos:start="49:16" pos:end="49:23"><expr pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:16">s</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:23">avctx</name></name></expr></argument>, <argument pos:start="49:26" pos:end="49:37"><expr pos:start="49:26" pos:end="49:37"><name pos:start="49:26" pos:end="49:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:40" pos:end="49:54"><expr pos:start="49:40" pos:end="49:54"><literal type="string" pos:start="49:40" pos:end="49:54">"qscale == 0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:26">/* extra slice info */</comment>

    <while pos:start="59:5" pos:end="63:5">while <condition pos:start="59:11" pos:end="59:34">(<expr pos:start="59:12" pos:end="59:33"><call pos:start="59:12" pos:end="59:28"><name pos:start="59:12" pos:end="59:20">get_bits1</name><argument_list pos:start="59:21" pos:end="59:28">(<argument pos:start="59:22" pos:end="59:27"><expr pos:start="59:22" pos:end="59:27"><operator pos:start="59:22" pos:end="59:22">&amp;</operator><name pos:start="59:23" pos:end="59:27"><name pos:start="59:23" pos:end="59:23">s</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:27">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="59:30" pos:end="59:31">!=</operator> <literal type="number" pos:start="59:33" pos:end="59:33">0</literal></expr>)</condition> <block pos:start="59:36" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:29">

        <expr_stmt pos:start="61:9" pos:end="61:29"><expr pos:start="61:9" pos:end="61:28"><call pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:17">skip_bits</name><argument_list pos:start="61:18" pos:end="61:28">(<argument pos:start="61:19" pos:end="61:24"><expr pos:start="61:19" pos:end="61:24"><operator pos:start="61:19" pos:end="61:19">&amp;</operator><name pos:start="61:20" pos:end="61:24"><name pos:start="61:20" pos:end="61:20">s</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:24">gb</name></name></expr></argument>, <argument pos:start="61:27" pos:end="61:27"><expr pos:start="61:27" pos:end="61:27"><literal type="number" pos:start="61:27" pos:end="61:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="67:5" pos:end="67:14"><expr pos:start="67:5" pos:end="67:13"><name pos:start="67:5" pos:end="67:11"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:11">mb_x</name></name><operator pos:start="67:12" pos:end="67:12">=</operator><literal type="number" pos:start="67:13" pos:end="67:13">0</literal></expr>;</expr_stmt>



    <for pos:start="71:5" pos:end="101:5">for<control pos:start="71:8" pos:end="71:11">(<init pos:start="71:9" pos:end="71:9">;</init><condition pos:start="71:10" pos:end="71:10">;</condition><incr/>)</control> <block pos:start="71:13" pos:end="101:5">{<block_content pos:start="73:9" pos:end="99:9">

        <decl_stmt pos:start="73:9" pos:end="73:74"><decl pos:start="73:9" pos:end="73:73"><type pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">int</name></type> <name pos:start="73:13" pos:end="73:16">code</name> <init pos:start="73:18" pos:end="73:73">= <expr pos:start="73:20" pos:end="73:73"><call pos:start="73:20" pos:end="73:73"><name pos:start="73:20" pos:end="73:27">get_vlc2</name><argument_list pos:start="73:28" pos:end="73:73">(<argument pos:start="73:29" pos:end="73:34"><expr pos:start="73:29" pos:end="73:34"><operator pos:start="73:29" pos:end="73:29">&amp;</operator><name pos:start="73:30" pos:end="73:34"><name pos:start="73:30" pos:end="73:30">s</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:34">gb</name></name></expr></argument>, <argument pos:start="73:37" pos:end="73:52"><expr pos:start="73:37" pos:end="73:52"><name pos:start="73:37" pos:end="73:52"><name pos:start="73:37" pos:end="73:46">mbincr_vlc</name><operator pos:start="73:47" pos:end="73:47">.</operator><name pos:start="73:48" pos:end="73:52">table</name></name></expr></argument>, <argument pos:start="73:55" pos:end="73:69"><expr pos:start="73:55" pos:end="73:69"><name pos:start="73:55" pos:end="73:69">MBINCR_VLC_BITS</name></expr></argument>, <argument pos:start="73:72" pos:end="73:72"><expr pos:start="73:72" pos:end="73:72"><literal type="number" pos:start="73:72" pos:end="73:72">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="75:9" pos:end="81:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="75:21">(<expr pos:start="75:13" pos:end="75:20"><name pos:start="75:13" pos:end="75:16">code</name> <operator pos:start="75:18" pos:end="75:18">&lt;</operator> <literal type="number" pos:start="75:20" pos:end="75:20">0</literal></expr>)</condition><block pos:start="75:22" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:22">

            <expr_stmt pos:start="77:13" pos:end="77:70"><expr pos:start="77:13" pos:end="77:69"><call pos:start="77:13" pos:end="77:69"><name pos:start="77:13" pos:end="77:18">av_log</name><argument_list pos:start="77:19" pos:end="77:69">(<argument pos:start="77:20" pos:end="77:27"><expr pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:20">s</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:27">avctx</name></name></expr></argument>, <argument pos:start="77:30" pos:end="77:41"><expr pos:start="77:30" pos:end="77:41"><name pos:start="77:30" pos:end="77:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:44" pos:end="77:68"><expr pos:start="77:44" pos:end="77:68"><literal type="string" pos:start="77:44" pos:end="77:68">"first mb_incr damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:22">return <expr pos:start="79:20" pos:end="79:21"><operator pos:start="79:20" pos:end="79:20">-</operator><literal type="number" pos:start="79:21" pos:end="79:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="83:9" pos:end="99:9"><if pos:start="83:9" pos:end="93:9">if <condition pos:start="83:12" pos:end="83:23">(<expr pos:start="83:13" pos:end="83:22"><name pos:start="83:13" pos:end="83:16">code</name> <operator pos:start="83:18" pos:end="83:19">&gt;=</operator> <literal type="number" pos:start="83:21" pos:end="83:22">33</literal></expr>)</condition> <block pos:start="83:25" pos:end="93:9">{<block_content pos:start="85:13" pos:end="89:13">

            <if_stmt pos:start="85:13" pos:end="89:13"><if pos:start="85:13" pos:end="89:13">if <condition pos:start="85:16" pos:end="85:27">(<expr pos:start="85:17" pos:end="85:26"><name pos:start="85:17" pos:end="85:20">code</name> <operator pos:start="85:22" pos:end="85:23">==</operator> <literal type="number" pos:start="85:25" pos:end="85:26">33</literal></expr>)</condition> <block pos:start="85:29" pos:end="89:13">{<block_content pos:start="87:17" pos:end="87:30">

                <expr_stmt pos:start="87:17" pos:end="87:30"><expr pos:start="87:17" pos:end="87:29"><name pos:start="87:17" pos:end="87:23"><name pos:start="87:17" pos:end="87:17">s</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:23">mb_x</name></name> <operator pos:start="87:25" pos:end="87:26">+=</operator> <literal type="number" pos:start="87:28" pos:end="87:29">33</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="91:13" pos:end="91:52">/* otherwise, stuffing, nothing to do */</comment>

        </block_content>}</block></if> <else pos:start="93:11" pos:end="99:9">else <block pos:start="93:16" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:18">

            <expr_stmt pos:start="95:13" pos:end="95:28"><expr pos:start="95:13" pos:end="95:27"><name pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:19">mb_x</name></name> <operator pos:start="95:21" pos:end="95:22">+=</operator> <name pos:start="95:24" pos:end="95:27">code</name></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="103:5" pos:end="109:5"><if pos:start="103:5" pos:end="109:5">if<condition pos:start="103:7" pos:end="103:40">(<expr pos:start="103:8" pos:end="103:39"><name pos:start="103:8" pos:end="103:14"><name pos:start="103:8" pos:end="103:8">s</name><operator pos:start="103:9" pos:end="103:10">-&gt;</operator><name pos:start="103:11" pos:end="103:14">mb_x</name></name> <operator pos:start="103:16" pos:end="103:17">&gt;=</operator> <operator pos:start="103:19" pos:end="103:19">(</operator><name pos:start="103:20" pos:end="103:27">unsigned</name><operator pos:start="103:28" pos:end="103:28">)</operator><name pos:start="103:29" pos:end="103:39"><name pos:start="103:29" pos:end="103:29">s</name><operator pos:start="103:30" pos:end="103:31">-&gt;</operator><name pos:start="103:32" pos:end="103:39">mb_width</name></name></expr>)</condition><block pos:start="103:41" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:18">

        <expr_stmt pos:start="105:9" pos:end="105:66"><expr pos:start="105:9" pos:end="105:65"><call pos:start="105:9" pos:end="105:65"><name pos:start="105:9" pos:end="105:14">av_log</name><argument_list pos:start="105:15" pos:end="105:65">(<argument pos:start="105:16" pos:end="105:23"><expr pos:start="105:16" pos:end="105:23"><name pos:start="105:16" pos:end="105:23"><name pos:start="105:16" pos:end="105:16">s</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:23">avctx</name></name></expr></argument>, <argument pos:start="105:26" pos:end="105:37"><expr pos:start="105:26" pos:end="105:37"><name pos:start="105:26" pos:end="105:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="105:40" pos:end="105:64"><expr pos:start="105:40" pos:end="105:64"><literal type="string" pos:start="105:40" pos:end="105:64">"initial skip overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="107:9" pos:end="107:18">return <expr pos:start="107:16" pos:end="107:17"><operator pos:start="107:16" pos:end="107:16">-</operator><literal type="number" pos:start="107:17" pos:end="107:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="135:5"><if pos:start="113:5" pos:end="135:5">if <condition pos:start="113:8" pos:end="113:23">(<expr pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:13">avctx</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:22">hwaccel</name></name></expr>)</condition> <block pos:start="113:25" pos:end="135:5">{<block_content pos:start="115:9" pos:end="133:31">

        <decl_stmt pos:start="115:9" pos:end="115:54"><decl pos:start="115:9" pos:end="115:30"><type pos:start="115:9" pos:end="115:23"><specifier pos:start="115:9" pos:end="115:13">const</specifier> <name pos:start="115:15" pos:end="115:21">uint8_t</name> <modifier pos:start="115:23" pos:end="115:23">*</modifier></type><name pos:start="115:24" pos:end="115:30">buf_end</name></decl>, <decl pos:start="115:33" pos:end="115:53"><type ref="prev" pos:start="115:9" pos:end="115:23"><modifier pos:start="115:33" pos:end="115:33">*</modifier></type><name pos:start="115:34" pos:end="115:42">buf_start</name> <init pos:start="115:44" pos:end="115:53">= <expr pos:start="115:46" pos:end="115:53"><operator pos:start="115:46" pos:end="115:46">*</operator><name pos:start="115:47" pos:end="115:49">buf</name> <operator pos:start="115:51" pos:end="115:51">-</operator> <literal type="number" pos:start="115:53" pos:end="115:53">4</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="115:56" pos:end="115:79">/* include start_code */</comment>

        <decl_stmt pos:start="117:9" pos:end="117:28"><decl pos:start="117:9" pos:end="117:27"><type pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:11">int</name></type> <name pos:start="117:13" pos:end="117:22">start_code</name> <init pos:start="117:24" pos:end="117:27">= <expr pos:start="117:26" pos:end="117:27"><operator pos:start="117:26" pos:end="117:26">-</operator><literal type="number" pos:start="117:27" pos:end="117:27">1</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:82"><expr pos:start="119:9" pos:end="119:81"><name pos:start="119:9" pos:end="119:15">buf_end</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <call pos:start="119:19" pos:end="119:81"><name pos:start="119:19" pos:end="119:36">ff_find_start_code</name><argument_list pos:start="119:37" pos:end="119:81">(<argument pos:start="119:38" pos:end="119:50"><expr pos:start="119:38" pos:end="119:50"><name pos:start="119:38" pos:end="119:46">buf_start</name> <operator pos:start="119:48" pos:end="119:48">+</operator> <literal type="number" pos:start="119:50" pos:end="119:50">2</literal></expr></argument>, <argument pos:start="119:53" pos:end="119:67"><expr pos:start="119:53" pos:end="119:67"><operator pos:start="119:53" pos:end="119:53">*</operator><name pos:start="119:54" pos:end="119:56">buf</name> <operator pos:start="119:58" pos:end="119:58">+</operator> <name pos:start="119:60" pos:end="119:67">buf_size</name></expr></argument>, <argument pos:start="119:70" pos:end="119:80"><expr pos:start="119:70" pos:end="119:80"><operator pos:start="119:70" pos:end="119:70">&amp;</operator><name pos:start="119:71" pos:end="119:80">start_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="123:25"><if pos:start="121:9" pos:end="123:25">if <condition pos:start="121:12" pos:end="121:38">(<expr pos:start="121:13" pos:end="121:37"><name pos:start="121:13" pos:end="121:19">buf_end</name> <operator pos:start="121:21" pos:end="121:21">&lt;</operator> <operator pos:start="121:23" pos:end="121:23">*</operator><name pos:start="121:24" pos:end="121:26">buf</name> <operator pos:start="121:28" pos:end="121:28">+</operator> <name pos:start="121:30" pos:end="121:37">buf_size</name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:25"><block_content pos:start="123:13" pos:end="123:25">

            <expr_stmt pos:start="123:13" pos:end="123:25"><expr pos:start="123:13" pos:end="123:24"><name pos:start="123:13" pos:end="123:19">buf_end</name> <operator pos:start="123:21" pos:end="123:22">-=</operator> <literal type="number" pos:start="123:24" pos:end="123:24">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:23"><expr pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:15"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:15">mb_y</name></name> <operator pos:start="125:17" pos:end="125:17">=</operator> <name pos:start="125:19" pos:end="125:22">mb_y</name></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="129:38"><if pos:start="127:9" pos:end="129:38">if <condition pos:start="127:12" pos:end="127:84">(<expr pos:start="127:13" pos:end="127:83"><call pos:start="127:13" pos:end="127:79"><name pos:start="127:13" pos:end="127:40"><name pos:start="127:13" pos:end="127:17">avctx</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:26">hwaccel</name><operator pos:start="127:27" pos:end="127:28">-&gt;</operator><name pos:start="127:29" pos:end="127:40">decode_slice</name></name><argument_list pos:start="127:41" pos:end="127:79">(<argument pos:start="127:42" pos:end="127:46"><expr pos:start="127:42" pos:end="127:46"><name pos:start="127:42" pos:end="127:46">avctx</name></expr></argument>, <argument pos:start="127:49" pos:end="127:57"><expr pos:start="127:49" pos:end="127:57"><name pos:start="127:49" pos:end="127:57">buf_start</name></expr></argument>, <argument pos:start="127:60" pos:end="127:78"><expr pos:start="127:60" pos:end="127:78"><name pos:start="127:60" pos:end="127:66">buf_end</name> <operator pos:start="127:68" pos:end="127:68">-</operator> <name pos:start="127:70" pos:end="127:78">buf_start</name></expr></argument>)</argument_list></call> <operator pos:start="127:81" pos:end="127:81">&lt;</operator> <literal type="number" pos:start="127:83" pos:end="127:83">0</literal></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:38"><block_content pos:start="129:13" pos:end="129:38">

            <return pos:start="129:13" pos:end="129:38">return <expr pos:start="129:20" pos:end="129:37"><name pos:start="129:20" pos:end="129:37">DECODE_SLICE_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:23"><expr pos:start="131:9" pos:end="131:22"><operator pos:start="131:9" pos:end="131:9">*</operator><name pos:start="131:10" pos:end="131:12">buf</name> <operator pos:start="131:14" pos:end="131:14">=</operator> <name pos:start="131:16" pos:end="131:22">buf_end</name></expr>;</expr_stmt>

        <return pos:start="133:9" pos:end="133:31">return <expr pos:start="133:16" pos:end="133:30"><name pos:start="133:16" pos:end="133:30">DECODE_SLICE_OK</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:28"><expr pos:start="139:5" pos:end="139:27"><name pos:start="139:5" pos:end="139:18"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:18">resync_mb_x</name></name><operator pos:start="139:19" pos:end="139:19">=</operator> <name pos:start="139:21" pos:end="139:27"><name pos:start="139:21" pos:end="139:21">s</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:27">mb_x</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:34"><expr pos:start="141:5" pos:end="141:33"><name pos:start="141:5" pos:end="141:18"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:18">resync_mb_y</name></name><operator pos:start="141:19" pos:end="141:19">=</operator> <name pos:start="141:21" pos:end="141:27"><name pos:start="141:21" pos:end="141:21">s</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:27">mb_y</name></name><operator pos:start="141:28" pos:end="141:28">=</operator> <name pos:start="141:30" pos:end="141:33">mb_y</name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:22"><expr pos:start="143:5" pos:end="143:21"><name pos:start="143:5" pos:end="143:18"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:18">mb_skip_run</name></name><operator pos:start="143:19" pos:end="143:19">=</operator> <literal type="number" pos:start="143:21" pos:end="143:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:27"><expr pos:start="145:5" pos:end="145:26"><call pos:start="145:5" pos:end="145:26"><name pos:start="145:5" pos:end="145:23">ff_init_block_index</name><argument_list pos:start="145:24" pos:end="145:26">(<argument pos:start="145:25" pos:end="145:25"><expr pos:start="145:25" pos:end="145:25"><name pos:start="145:25" pos:end="145:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="149:5" pos:end="167:5"><if pos:start="149:5" pos:end="167:5">if <condition pos:start="149:8" pos:end="149:89">(<expr pos:start="149:9" pos:end="149:88"><name pos:start="149:9" pos:end="149:15"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:15">mb_y</name></name><operator pos:start="149:16" pos:end="149:17">==</operator><literal type="number" pos:start="149:18" pos:end="149:18">0</literal> <operator pos:start="149:20" pos:end="149:21">&amp;&amp;</operator> <name pos:start="149:23" pos:end="149:29"><name pos:start="149:23" pos:end="149:23">s</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:29">mb_x</name></name><operator pos:start="149:30" pos:end="149:31">==</operator><literal type="number" pos:start="149:32" pos:end="149:32">0</literal> <operator pos:start="149:34" pos:end="149:35">&amp;&amp;</operator> <operator pos:start="149:37" pos:end="149:37">(</operator><name pos:start="149:38" pos:end="149:51"><name pos:start="149:38" pos:end="149:38">s</name><operator pos:start="149:39" pos:end="149:40">-&gt;</operator><name pos:start="149:41" pos:end="149:51">first_field</name></name> <operator pos:start="149:53" pos:end="149:54">||</operator> <name pos:start="149:56" pos:end="149:75"><name pos:start="149:56" pos:end="149:56">s</name><operator pos:start="149:57" pos:end="149:58">-&gt;</operator><name pos:start="149:59" pos:end="149:75">picture_structure</name></name><operator pos:start="149:76" pos:end="149:77">==</operator><name pos:start="149:78" pos:end="149:87">PICT_FRAME</name><operator pos:start="149:88" pos:end="149:88">)</operator></expr>)</condition> <block pos:start="149:91" pos:end="167:5">{<block_content pos:start="151:9" pos:end="165:9">

        <if_stmt pos:start="151:9" pos:end="165:9"><if pos:start="151:9" pos:end="165:9">if<condition pos:start="151:11" pos:end="151:46">(<expr pos:start="151:12" pos:end="151:45"><name pos:start="151:12" pos:end="151:26"><name pos:start="151:12" pos:end="151:12">s</name><operator pos:start="151:13" pos:end="151:14">-&gt;</operator><name pos:start="151:15" pos:end="151:19">avctx</name><operator pos:start="151:20" pos:end="151:21">-&gt;</operator><name pos:start="151:22" pos:end="151:26">debug</name></name><operator pos:start="151:27" pos:end="151:27">&amp;</operator><name pos:start="151:28" pos:end="151:45">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="151:47" pos:end="165:9">{<block_content pos:start="153:14" pos:end="163:110">

             <expr_stmt pos:start="153:14" pos:end="163:110"><expr pos:start="153:14" pos:end="163:109"><call pos:start="153:14" pos:end="163:109"><name pos:start="153:14" pos:end="153:19">av_log</name><argument_list pos:start="153:20" pos:end="163:109">(<argument pos:start="153:21" pos:end="153:28"><expr pos:start="153:21" pos:end="153:28"><name pos:start="153:21" pos:end="153:28"><name pos:start="153:21" pos:end="153:21">s</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:28">avctx</name></name></expr></argument>, <argument pos:start="153:31" pos:end="153:42"><expr pos:start="153:31" pos:end="153:42"><name pos:start="153:31" pos:end="153:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="153:45" pos:end="153:143"><expr pos:start="153:45" pos:end="153:143"><literal type="string" pos:start="153:45" pos:end="153:143">"qp:%d fc:%2d%2d%2d%2d %s %s %s %s %s dc:%d pstruct:%d fdct:%d cmv:%d qtype:%d ivlc:%d rff:%d %s\n"</literal></expr></argument>,

                 <argument pos:start="155:18" pos:end="155:26"><expr pos:start="155:18" pos:end="155:26"><name pos:start="155:18" pos:end="155:26"><name pos:start="155:18" pos:end="155:18">s</name><operator pos:start="155:19" pos:end="155:20">-&gt;</operator><name pos:start="155:21" pos:end="155:26">qscale</name></name></expr></argument>, <argument pos:start="155:29" pos:end="155:48"><expr pos:start="155:29" pos:end="155:48"><name pos:start="155:29" pos:end="155:48"><name pos:start="155:29" pos:end="155:29">s</name><operator pos:start="155:30" pos:end="155:31">-&gt;</operator><name pos:start="155:32" pos:end="155:42">mpeg_f_code</name><index pos:start="155:43" pos:end="155:45">[<expr pos:start="155:44" pos:end="155:44"><literal type="number" pos:start="155:44" pos:end="155:44">0</literal></expr>]</index><index pos:start="155:46" pos:end="155:48">[<expr pos:start="155:47" pos:end="155:47"><literal type="number" pos:start="155:47" pos:end="155:47">0</literal></expr>]</index></name></expr></argument>,<argument pos:start="155:50" pos:end="155:69"><expr pos:start="155:50" pos:end="155:69"><name pos:start="155:50" pos:end="155:69"><name pos:start="155:50" pos:end="155:50">s</name><operator pos:start="155:51" pos:end="155:52">-&gt;</operator><name pos:start="155:53" pos:end="155:63">mpeg_f_code</name><index pos:start="155:64" pos:end="155:66">[<expr pos:start="155:65" pos:end="155:65"><literal type="number" pos:start="155:65" pos:end="155:65">0</literal></expr>]</index><index pos:start="155:67" pos:end="155:69">[<expr pos:start="155:68" pos:end="155:68"><literal type="number" pos:start="155:68" pos:end="155:68">1</literal></expr>]</index></name></expr></argument>,<argument pos:start="155:71" pos:end="155:90"><expr pos:start="155:71" pos:end="155:90"><name pos:start="155:71" pos:end="155:90"><name pos:start="155:71" pos:end="155:71">s</name><operator pos:start="155:72" pos:end="155:73">-&gt;</operator><name pos:start="155:74" pos:end="155:84">mpeg_f_code</name><index pos:start="155:85" pos:end="155:87">[<expr pos:start="155:86" pos:end="155:86"><literal type="number" pos:start="155:86" pos:end="155:86">1</literal></expr>]</index><index pos:start="155:88" pos:end="155:90">[<expr pos:start="155:89" pos:end="155:89"><literal type="number" pos:start="155:89" pos:end="155:89">0</literal></expr>]</index></name></expr></argument>,<argument pos:start="155:92" pos:end="155:111"><expr pos:start="155:92" pos:end="155:111"><name pos:start="155:92" pos:end="155:111"><name pos:start="155:92" pos:end="155:92">s</name><operator pos:start="155:93" pos:end="155:94">-&gt;</operator><name pos:start="155:95" pos:end="155:105">mpeg_f_code</name><index pos:start="155:106" pos:end="155:108">[<expr pos:start="155:107" pos:end="155:107"><literal type="number" pos:start="155:107" pos:end="155:107">1</literal></expr>]</index><index pos:start="155:109" pos:end="155:111">[<expr pos:start="155:110" pos:end="155:110"><literal type="number" pos:start="155:110" pos:end="155:110">1</literal></expr>]</index></name></expr></argument>,

                 <argument pos:start="157:18" pos:end="157:126"><expr pos:start="157:18" pos:end="157:126"><ternary pos:start="157:18" pos:end="157:126"><condition pos:start="157:18" pos:end="157:44"><expr pos:start="157:18" pos:end="157:42"><name pos:start="157:18" pos:end="157:29"><name pos:start="157:18" pos:end="157:18">s</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:29">pict_type</name></name> <operator pos:start="157:31" pos:end="157:32">==</operator> <name pos:start="157:34" pos:end="157:42">FF_I_TYPE</name></expr> ?</condition><then pos:start="157:46" pos:end="157:48"> <expr pos:start="157:46" pos:end="157:48"><literal type="string" pos:start="157:46" pos:end="157:48">"I"</literal></expr> </then><else pos:start="157:50" pos:end="157:126">: <expr pos:start="157:52" pos:end="157:126"><operator pos:start="157:52" pos:end="157:52">(</operator><ternary pos:start="157:53" pos:end="157:125"><condition pos:start="157:53" pos:end="157:79"><expr pos:start="157:53" pos:end="157:77"><name pos:start="157:53" pos:end="157:64"><name pos:start="157:53" pos:end="157:53">s</name><operator pos:start="157:54" pos:end="157:55">-&gt;</operator><name pos:start="157:56" pos:end="157:64">pict_type</name></name> <operator pos:start="157:66" pos:end="157:67">==</operator> <name pos:start="157:69" pos:end="157:77">FF_P_TYPE</name></expr> ?</condition><then pos:start="157:81" pos:end="157:83"> <expr pos:start="157:81" pos:end="157:83"><literal type="string" pos:start="157:81" pos:end="157:83">"P"</literal></expr> </then><else pos:start="157:85" pos:end="157:125">: <expr pos:start="157:87" pos:end="157:125"><operator pos:start="157:87" pos:end="157:87">(</operator><ternary pos:start="157:88" pos:end="157:124"><condition pos:start="157:88" pos:end="157:114"><expr pos:start="157:88" pos:end="157:112"><name pos:start="157:88" pos:end="157:99"><name pos:start="157:88" pos:end="157:88">s</name><operator pos:start="157:89" pos:end="157:90">-&gt;</operator><name pos:start="157:91" pos:end="157:99">pict_type</name></name> <operator pos:start="157:101" pos:end="157:102">==</operator> <name pos:start="157:104" pos:end="157:112">FF_B_TYPE</name></expr> ?</condition><then pos:start="157:116" pos:end="157:118"> <expr pos:start="157:116" pos:end="157:118"><literal type="string" pos:start="157:116" pos:end="157:118">"B"</literal></expr> </then><else pos:start="157:120" pos:end="157:124">: <expr pos:start="157:122" pos:end="157:124"><literal type="string" pos:start="157:122" pos:end="157:124">"S"</literal></expr></else></ternary><operator pos:start="157:125" pos:end="157:125">)</operator></expr></else></ternary><operator pos:start="157:126" pos:end="157:126">)</operator></expr></else></ternary></expr></argument>,

                 <argument pos:start="159:18" pos:end="159:51"><expr pos:start="159:18" pos:end="159:51"><ternary pos:start="159:18" pos:end="159:51"><condition pos:start="159:18" pos:end="159:42"><expr pos:start="159:18" pos:end="159:40"><name pos:start="159:18" pos:end="159:40"><name pos:start="159:18" pos:end="159:18">s</name><operator pos:start="159:19" pos:end="159:20">-&gt;</operator><name pos:start="159:21" pos:end="159:40">progressive_sequence</name></name></expr> ?</condition><then pos:start="159:44" pos:end="159:47"> <expr pos:start="159:44" pos:end="159:47"><literal type="string" pos:start="159:44" pos:end="159:47">"ps"</literal></expr> </then><else pos:start="159:49" pos:end="159:51">:<expr pos:start="159:50" pos:end="159:51"><literal type="string" pos:start="159:50" pos:end="159:51">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="159:54" pos:end="159:85"><expr pos:start="159:54" pos:end="159:85"><ternary pos:start="159:54" pos:end="159:85"><condition pos:start="159:54" pos:end="159:75"><expr pos:start="159:54" pos:end="159:73"><name pos:start="159:54" pos:end="159:73"><name pos:start="159:54" pos:end="159:54">s</name><operator pos:start="159:55" pos:end="159:56">-&gt;</operator><name pos:start="159:57" pos:end="159:73">progressive_frame</name></name></expr> ?</condition><then pos:start="159:77" pos:end="159:80"> <expr pos:start="159:77" pos:end="159:80"><literal type="string" pos:start="159:77" pos:end="159:80">"pf"</literal></expr> </then><else pos:start="159:82" pos:end="159:85">: <expr pos:start="159:84" pos:end="159:85"><literal type="string" pos:start="159:84" pos:end="159:85">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="159:88" pos:end="159:116"><expr pos:start="159:88" pos:end="159:116"><ternary pos:start="159:88" pos:end="159:116"><condition pos:start="159:88" pos:end="159:106"><expr pos:start="159:88" pos:end="159:104"><name pos:start="159:88" pos:end="159:104"><name pos:start="159:88" pos:end="159:88">s</name><operator pos:start="159:89" pos:end="159:90">-&gt;</operator><name pos:start="159:91" pos:end="159:104">alternate_scan</name></name></expr> ?</condition><then pos:start="159:108" pos:end="159:112"> <expr pos:start="159:108" pos:end="159:112"><literal type="string" pos:start="159:108" pos:end="159:112">"alt"</literal></expr> </then><else pos:start="159:114" pos:end="159:116">:<expr pos:start="159:115" pos:end="159:116"><literal type="string" pos:start="159:115" pos:end="159:116">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="159:119" pos:end="159:148"><expr pos:start="159:119" pos:end="159:148"><ternary pos:start="159:119" pos:end="159:148"><condition pos:start="159:119" pos:end="159:138"><expr pos:start="159:119" pos:end="159:136"><name pos:start="159:119" pos:end="159:136"><name pos:start="159:119" pos:end="159:119">s</name><operator pos:start="159:120" pos:end="159:121">-&gt;</operator><name pos:start="159:122" pos:end="159:136">top_field_first</name></name></expr> ?</condition><then pos:start="159:140" pos:end="159:144"> <expr pos:start="159:140" pos:end="159:144"><literal type="string" pos:start="159:140" pos:end="159:144">"top"</literal></expr> </then><else pos:start="159:146" pos:end="159:148">:<expr pos:start="159:147" pos:end="159:148"><literal type="string" pos:start="159:147" pos:end="159:148">""</literal></expr></else></ternary></expr></argument>,

                 <argument pos:start="161:18" pos:end="161:38"><expr pos:start="161:18" pos:end="161:38"><name pos:start="161:18" pos:end="161:38"><name pos:start="161:18" pos:end="161:18">s</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:38">intra_dc_precision</name></name></expr></argument>, <argument pos:start="161:41" pos:end="161:60"><expr pos:start="161:41" pos:end="161:60"><name pos:start="161:41" pos:end="161:60"><name pos:start="161:41" pos:end="161:41">s</name><operator pos:start="161:42" pos:end="161:43">-&gt;</operator><name pos:start="161:44" pos:end="161:60">picture_structure</name></name></expr></argument>, <argument pos:start="161:63" pos:end="161:85"><expr pos:start="161:63" pos:end="161:85"><name pos:start="161:63" pos:end="161:85"><name pos:start="161:63" pos:end="161:63">s</name><operator pos:start="161:64" pos:end="161:65">-&gt;</operator><name pos:start="161:66" pos:end="161:85">frame_pred_frame_dct</name></name></expr></argument>, <argument pos:start="161:88" pos:end="161:116"><expr pos:start="161:88" pos:end="161:116"><name pos:start="161:88" pos:end="161:116"><name pos:start="161:88" pos:end="161:88">s</name><operator pos:start="161:89" pos:end="161:90">-&gt;</operator><name pos:start="161:91" pos:end="161:116">concealment_motion_vectors</name></name></expr></argument>,

                 <argument pos:start="163:18" pos:end="163:32"><expr pos:start="163:18" pos:end="163:32"><name pos:start="163:18" pos:end="163:32"><name pos:start="163:18" pos:end="163:18">s</name><operator pos:start="163:19" pos:end="163:20">-&gt;</operator><name pos:start="163:21" pos:end="163:32">q_scale_type</name></name></expr></argument>, <argument pos:start="163:35" pos:end="163:53"><expr pos:start="163:35" pos:end="163:53"><name pos:start="163:35" pos:end="163:53"><name pos:start="163:35" pos:end="163:35">s</name><operator pos:start="163:36" pos:end="163:37">-&gt;</operator><name pos:start="163:38" pos:end="163:53">intra_vlc_format</name></name></expr></argument>, <argument pos:start="163:56" pos:end="163:76"><expr pos:start="163:56" pos:end="163:76"><name pos:start="163:56" pos:end="163:76"><name pos:start="163:56" pos:end="163:56">s</name><operator pos:start="163:57" pos:end="163:58">-&gt;</operator><name pos:start="163:59" pos:end="163:76">repeat_first_field</name></name></expr></argument>, <argument pos:start="163:79" pos:end="163:108"><expr pos:start="163:79" pos:end="163:108"><ternary pos:start="163:79" pos:end="163:108"><condition pos:start="163:79" pos:end="163:98"><expr pos:start="163:79" pos:end="163:96"><name pos:start="163:79" pos:end="163:96"><name pos:start="163:79" pos:end="163:79">s</name><operator pos:start="163:80" pos:end="163:81">-&gt;</operator><name pos:start="163:82" pos:end="163:96">chroma_420_type</name></name></expr> ?</condition><then pos:start="163:100" pos:end="163:104"> <expr pos:start="163:100" pos:end="163:104"><literal type="string" pos:start="163:100" pos:end="163:104">"420"</literal></expr> </then><else pos:start="163:106" pos:end="163:108">:<expr pos:start="163:107" pos:end="163:108"><literal type="string" pos:start="163:107" pos:end="163:108">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="171:5" pos:end="421:5">for<control pos:start="171:8" pos:end="171:11">(<init pos:start="171:9" pos:end="171:9">;</init><condition pos:start="171:10" pos:end="171:10">;</condition><incr/>)</control> <block pos:start="171:13" pos:end="421:5">{<block_content pos:start="175:9" pos:end="419:9">

        <comment type="line" pos:start="173:9" pos:end="173:46">//If 1, we memcpy blocks in xvmcvideo.</comment>

        <if_stmt pos:start="175:9" pos:end="177:34"><if pos:start="175:9" pos:end="177:34">if<condition pos:start="175:11" pos:end="175:71">(<expr pos:start="175:12" pos:end="175:70"><name pos:start="175:12" pos:end="175:35">CONFIG_MPEG_XVMC_DECODER</name> <operator pos:start="175:37" pos:end="175:38">&amp;&amp;</operator> <name pos:start="175:40" pos:end="175:66"><name pos:start="175:40" pos:end="175:40">s</name><operator pos:start="175:41" pos:end="175:42">-&gt;</operator><name pos:start="175:43" pos:end="175:47">avctx</name><operator pos:start="175:48" pos:end="175:49">-&gt;</operator><name pos:start="175:50" pos:end="175:66">xvmc_acceleration</name></name> <operator pos:start="175:68" pos:end="175:68">&gt;</operator> <literal type="number" pos:start="175:70" pos:end="175:70">1</literal></expr>)</condition><block type="pseudo" pos:start="177:13" pos:end="177:34"><block_content pos:start="177:13" pos:end="177:34">

            <expr_stmt pos:start="177:13" pos:end="177:34"><expr pos:start="177:13" pos:end="177:33"><call pos:start="177:13" pos:end="177:33"><name pos:start="177:13" pos:end="177:30">ff_xvmc_init_block</name><argument_list pos:start="177:31" pos:end="177:33">(<argument pos:start="177:32" pos:end="177:32"><expr pos:start="177:32" pos:end="177:32"><name pos:start="177:32" pos:end="177:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt><comment type="line" pos:start="177:35" pos:end="177:48">//set s-&gt;block</comment>



        <if_stmt pos:start="181:9" pos:end="183:22"><if pos:start="181:9" pos:end="183:22">if<condition pos:start="181:11" pos:end="181:43">(<expr pos:start="181:12" pos:end="181:42"><call pos:start="181:12" pos:end="181:38"><name pos:start="181:12" pos:end="181:25">mpeg_decode_mb</name><argument_list pos:start="181:26" pos:end="181:38">(<argument pos:start="181:27" pos:end="181:27"><expr pos:start="181:27" pos:end="181:27"><name pos:start="181:27" pos:end="181:27">s</name></expr></argument>, <argument pos:start="181:30" pos:end="181:37"><expr pos:start="181:30" pos:end="181:37"><name pos:start="181:30" pos:end="181:37"><name pos:start="181:30" pos:end="181:30">s</name><operator pos:start="181:31" pos:end="181:32">-&gt;</operator><name pos:start="181:33" pos:end="181:37">block</name></name></expr></argument>)</argument_list></call> <operator pos:start="181:40" pos:end="181:40">&lt;</operator> <literal type="number" pos:start="181:42" pos:end="181:42">0</literal></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:22"><block_content pos:start="183:13" pos:end="183:22">

            <return pos:start="183:13" pos:end="183:22">return <expr pos:start="183:20" pos:end="183:21"><operator pos:start="183:20" pos:end="183:20">-</operator><literal type="number" pos:start="183:21" pos:end="183:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="187:9" pos:end="241:9"><if pos:start="187:9" pos:end="241:9">if<condition pos:start="187:11" pos:end="187:60">(<expr pos:start="187:12" pos:end="187:59"><name pos:start="187:12" pos:end="187:43"><name pos:start="187:12" pos:end="187:12">s</name><operator pos:start="187:13" pos:end="187:14">-&gt;</operator><name pos:start="187:15" pos:end="187:29">current_picture</name><operator pos:start="187:30" pos:end="187:30">.</operator><name pos:start="187:31" pos:end="187:40">motion_val</name><index pos:start="187:41" pos:end="187:43">[<expr pos:start="187:42" pos:end="187:42"><literal type="number" pos:start="187:42" pos:end="187:42">0</literal></expr>]</index></name> <operator pos:start="187:45" pos:end="187:46">&amp;&amp;</operator> <operator pos:start="187:48" pos:end="187:48">!</operator><name pos:start="187:49" pos:end="187:59"><name pos:start="187:49" pos:end="187:49">s</name><operator pos:start="187:50" pos:end="187:51">-&gt;</operator><name pos:start="187:52" pos:end="187:59">encoding</name></name></expr>)</condition><block pos:start="187:61" pos:end="241:9">{<block_content pos:start="189:13" pos:end="239:13"> <comment type="line" pos:start="187:63" pos:end="187:130">//note motion_val is normally NULL unless we want to extract the MVs</comment>

            <decl_stmt pos:start="189:13" pos:end="189:42"><decl pos:start="189:13" pos:end="189:41"><type pos:start="189:13" pos:end="189:21"><specifier pos:start="189:13" pos:end="189:17">const</specifier> <name pos:start="189:19" pos:end="189:21">int</name></type> <name pos:start="189:23" pos:end="189:26">wrap</name> <init pos:start="189:28" pos:end="189:41">= <expr pos:start="189:30" pos:end="189:41"><name pos:start="189:30" pos:end="189:41"><name pos:start="189:30" pos:end="189:30">s</name><operator pos:start="189:31" pos:end="189:32">-&gt;</operator><name pos:start="189:33" pos:end="189:41">b8_stride</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="191:13" pos:end="191:48"><decl pos:start="191:13" pos:end="191:47"><type pos:start="191:13" pos:end="191:15"><name pos:start="191:13" pos:end="191:15">int</name></type> <name pos:start="191:17" pos:end="191:18">xy</name> <init pos:start="191:20" pos:end="191:47">= <expr pos:start="191:22" pos:end="191:47"><name pos:start="191:22" pos:end="191:28"><name pos:start="191:22" pos:end="191:22">s</name><operator pos:start="191:23" pos:end="191:24">-&gt;</operator><name pos:start="191:25" pos:end="191:28">mb_x</name></name><operator pos:start="191:29" pos:end="191:29">*</operator><literal type="number" pos:start="191:30" pos:end="191:32">2</literal> <operator pos:start="191:32" pos:end="191:32">+</operator> <name pos:start="191:34" pos:end="191:40"><name pos:start="191:34" pos:end="191:34">s</name><operator pos:start="191:35" pos:end="191:36">-&gt;</operator><name pos:start="191:37" pos:end="191:40">mb_y</name></name><operator pos:start="191:41" pos:end="191:41">*</operator><literal type="number" pos:start="191:42" pos:end="191:42">2</literal><operator pos:start="191:43" pos:end="191:43">*</operator><name pos:start="191:44" pos:end="191:47">wrap</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="193:13" pos:end="193:43"><decl pos:start="193:13" pos:end="193:24"><type pos:start="193:13" pos:end="193:15"><name pos:start="193:13" pos:end="193:15">int</name></type> <name pos:start="193:17" pos:end="193:24">motion_x</name></decl>, <decl pos:start="193:27" pos:end="193:34"><type ref="prev" pos:start="193:13" pos:end="193:15"/><name pos:start="193:27" pos:end="193:34">motion_y</name></decl>, <decl pos:start="193:37" pos:end="193:39"><type ref="prev" pos:start="193:13" pos:end="193:15"/><name pos:start="193:37" pos:end="193:39">dir</name></decl>, <decl pos:start="193:42" pos:end="193:42"><type ref="prev" pos:start="193:13" pos:end="193:15"/><name pos:start="193:42" pos:end="193:42">i</name></decl>;</decl_stmt>



            <for pos:start="197:13" pos:end="239:13">for<control pos:start="197:16" pos:end="197:30">(<init pos:start="197:17" pos:end="197:20"><expr pos:start="197:17" pos:end="197:19"><name pos:start="197:17" pos:end="197:17">i</name><operator pos:start="197:18" pos:end="197:18">=</operator><literal type="number" pos:start="197:19" pos:end="197:19">0</literal></expr>;</init> <condition pos:start="197:22" pos:end="197:25"><expr pos:start="197:22" pos:end="197:24"><name pos:start="197:22" pos:end="197:22">i</name><operator pos:start="197:23" pos:end="197:23">&lt;</operator><literal type="number" pos:start="197:24" pos:end="197:24">2</literal></expr>;</condition> <incr pos:start="197:27" pos:end="197:29"><expr pos:start="197:27" pos:end="197:29"><name pos:start="197:27" pos:end="197:27">i</name><operator pos:start="197:28" pos:end="197:29">++</operator></expr></incr>)</control><block pos:start="197:31" pos:end="239:13">{<block_content pos:start="199:17" pos:end="237:27">

                <for pos:start="199:17" pos:end="235:17">for<control pos:start="199:20" pos:end="199:40">(<init pos:start="199:21" pos:end="199:26"><expr pos:start="199:21" pos:end="199:25"><name pos:start="199:21" pos:end="199:23">dir</name><operator pos:start="199:24" pos:end="199:24">=</operator><literal type="number" pos:start="199:25" pos:end="199:25">0</literal></expr>;</init> <condition pos:start="199:28" pos:end="199:33"><expr pos:start="199:28" pos:end="199:32"><name pos:start="199:28" pos:end="199:30">dir</name><operator pos:start="199:31" pos:end="199:31">&lt;</operator><literal type="number" pos:start="199:32" pos:end="199:32">2</literal></expr>;</condition> <incr pos:start="199:35" pos:end="199:39"><expr pos:start="199:35" pos:end="199:39"><name pos:start="199:35" pos:end="199:37">dir</name><operator pos:start="199:38" pos:end="199:39">++</operator></expr></incr>)</control><block pos:start="199:41" pos:end="235:17">{<block_content pos:start="201:21" pos:end="233:85">

                    <if_stmt pos:start="201:21" pos:end="217:21"><if pos:start="201:21" pos:end="205:21">if <condition pos:start="201:24" pos:end="201:77">(<expr pos:start="201:25" pos:end="201:76"><name pos:start="201:25" pos:end="201:35"><name pos:start="201:25" pos:end="201:25">s</name><operator pos:start="201:26" pos:end="201:27">-&gt;</operator><name pos:start="201:28" pos:end="201:35">mb_intra</name></name> <operator pos:start="201:37" pos:end="201:38">||</operator> <operator pos:start="201:40" pos:end="201:40">(</operator><name pos:start="201:41" pos:end="201:43">dir</name><operator pos:start="201:44" pos:end="201:45">==</operator><literal type="number" pos:start="201:46" pos:end="201:46">1</literal> <operator pos:start="201:48" pos:end="201:49">&amp;&amp;</operator> <name pos:start="201:51" pos:end="201:62"><name pos:start="201:51" pos:end="201:51">s</name><operator pos:start="201:52" pos:end="201:53">-&gt;</operator><name pos:start="201:54" pos:end="201:62">pict_type</name></name> <operator pos:start="201:64" pos:end="201:65">!=</operator> <name pos:start="201:67" pos:end="201:75">FF_B_TYPE</name><operator pos:start="201:76" pos:end="201:76">)</operator></expr>)</condition> <block pos:start="201:79" pos:end="205:21">{<block_content pos:start="203:25" pos:end="203:48">

                        <expr_stmt pos:start="203:25" pos:end="203:48"><expr pos:start="203:25" pos:end="203:47"><name pos:start="203:25" pos:end="203:32">motion_x</name> <operator pos:start="203:34" pos:end="203:34">=</operator> <name pos:start="203:36" pos:end="203:43">motion_y</name> <operator pos:start="203:45" pos:end="203:45">=</operator> <literal type="number" pos:start="203:47" pos:end="203:47">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if><if type="elseif" pos:start="205:22" pos:end="211:21">else if <condition pos:start="205:30" pos:end="205:104">(<expr pos:start="205:31" pos:end="205:103"><name pos:start="205:31" pos:end="205:40"><name pos:start="205:31" pos:end="205:31">s</name><operator pos:start="205:32" pos:end="205:33">-&gt;</operator><name pos:start="205:34" pos:end="205:40">mv_type</name></name> <operator pos:start="205:42" pos:end="205:43">==</operator> <name pos:start="205:45" pos:end="205:57">MV_TYPE_16X16</name> <operator pos:start="205:59" pos:end="205:60">||</operator> <operator pos:start="205:62" pos:end="205:62">(</operator><name pos:start="205:63" pos:end="205:72"><name pos:start="205:63" pos:end="205:63">s</name><operator pos:start="205:64" pos:end="205:65">-&gt;</operator><name pos:start="205:66" pos:end="205:72">mv_type</name></name> <operator pos:start="205:74" pos:end="205:75">==</operator> <name pos:start="205:77" pos:end="205:89">MV_TYPE_FIELD</name> <operator pos:start="205:91" pos:end="205:92">&amp;&amp;</operator> <name pos:start="205:94" pos:end="205:102">field_pic</name><operator pos:start="205:103" pos:end="205:103">)</operator></expr>)</condition><block pos:start="205:105" pos:end="211:21">{<block_content pos:start="207:25" pos:end="209:52">

                        <expr_stmt pos:start="207:25" pos:end="207:52"><expr pos:start="207:25" pos:end="207:51"><name pos:start="207:25" pos:end="207:32">motion_x</name> <operator pos:start="207:34" pos:end="207:34">=</operator> <name pos:start="207:36" pos:end="207:51"><name pos:start="207:36" pos:end="207:36">s</name><operator pos:start="207:37" pos:end="207:38">-&gt;</operator><name pos:start="207:39" pos:end="207:40">mv</name><index pos:start="207:41" pos:end="207:45">[<expr pos:start="207:42" pos:end="207:44"><name pos:start="207:42" pos:end="207:44">dir</name></expr>]</index><index pos:start="207:46" pos:end="207:48">[<expr pos:start="207:47" pos:end="207:47"><literal type="number" pos:start="207:47" pos:end="207:47">0</literal></expr>]</index><index pos:start="207:49" pos:end="207:51">[<expr pos:start="207:50" pos:end="207:50"><literal type="number" pos:start="207:50" pos:end="207:50">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="209:25" pos:end="209:52"><expr pos:start="209:25" pos:end="209:51"><name pos:start="209:25" pos:end="209:32">motion_y</name> <operator pos:start="209:34" pos:end="209:34">=</operator> <name pos:start="209:36" pos:end="209:51"><name pos:start="209:36" pos:end="209:36">s</name><operator pos:start="209:37" pos:end="209:38">-&gt;</operator><name pos:start="209:39" pos:end="209:40">mv</name><index pos:start="209:41" pos:end="209:45">[<expr pos:start="209:42" pos:end="209:44"><name pos:start="209:42" pos:end="209:44">dir</name></expr>]</index><index pos:start="209:46" pos:end="209:48">[<expr pos:start="209:47" pos:end="209:47"><literal type="number" pos:start="209:47" pos:end="209:47">0</literal></expr>]</index><index pos:start="209:49" pos:end="209:51">[<expr pos:start="209:50" pos:end="209:50"><literal type="number" pos:start="209:50" pos:end="209:50">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="211:23" pos:end="217:21">else <comment type="block" pos:start="211:28" pos:end="211:97">/*if ((s-&gt;mv_type == MV_TYPE_FIELD) || (s-&gt;mv_type == MV_TYPE_16X8))*/</comment> <block pos:start="211:99" pos:end="217:21">{<block_content pos:start="213:25" pos:end="215:52">

                        <expr_stmt pos:start="213:25" pos:end="213:52"><expr pos:start="213:25" pos:end="213:51"><name pos:start="213:25" pos:end="213:32">motion_x</name> <operator pos:start="213:34" pos:end="213:34">=</operator> <name pos:start="213:36" pos:end="213:51"><name pos:start="213:36" pos:end="213:36">s</name><operator pos:start="213:37" pos:end="213:38">-&gt;</operator><name pos:start="213:39" pos:end="213:40">mv</name><index pos:start="213:41" pos:end="213:45">[<expr pos:start="213:42" pos:end="213:44"><name pos:start="213:42" pos:end="213:44">dir</name></expr>]</index><index pos:start="213:46" pos:end="213:48">[<expr pos:start="213:47" pos:end="213:47"><name pos:start="213:47" pos:end="213:47">i</name></expr>]</index><index pos:start="213:49" pos:end="213:51">[<expr pos:start="213:50" pos:end="213:50"><literal type="number" pos:start="213:50" pos:end="213:50">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="215:25" pos:end="215:52"><expr pos:start="215:25" pos:end="215:51"><name pos:start="215:25" pos:end="215:32">motion_y</name> <operator pos:start="215:34" pos:end="215:34">=</operator> <name pos:start="215:36" pos:end="215:51"><name pos:start="215:36" pos:end="215:36">s</name><operator pos:start="215:37" pos:end="215:38">-&gt;</operator><name pos:start="215:39" pos:end="215:40">mv</name><index pos:start="215:41" pos:end="215:45">[<expr pos:start="215:42" pos:end="215:44"><name pos:start="215:42" pos:end="215:44">dir</name></expr>]</index><index pos:start="215:46" pos:end="215:48">[<expr pos:start="215:47" pos:end="215:47"><name pos:start="215:47" pos:end="215:47">i</name></expr>]</index><index pos:start="215:49" pos:end="215:51">[<expr pos:start="215:50" pos:end="215:50"><literal type="number" pos:start="215:50" pos:end="215:50">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>



                    <expr_stmt pos:start="221:21" pos:end="221:77"><expr pos:start="221:21" pos:end="221:76"><name pos:start="221:21" pos:end="221:65"><name pos:start="221:21" pos:end="221:21">s</name><operator pos:start="221:22" pos:end="221:23">-&gt;</operator><name pos:start="221:24" pos:end="221:38">current_picture</name><operator pos:start="221:39" pos:end="221:39">.</operator><name pos:start="221:40" pos:end="221:49">motion_val</name><index pos:start="221:50" pos:end="221:54">[<expr pos:start="221:51" pos:end="221:53"><name pos:start="221:51" pos:end="221:53">dir</name></expr>]</index><index pos:start="221:55" pos:end="221:62">[<expr pos:start="221:56" pos:end="221:57"><name pos:start="221:56" pos:end="221:57">xy</name></expr>    ]</index><index pos:start="221:63" pos:end="221:65">[<expr pos:start="221:64" pos:end="221:64"><literal type="number" pos:start="221:64" pos:end="221:64">0</literal></expr>]</index></name> <operator pos:start="221:67" pos:end="221:67">=</operator> <name pos:start="221:69" pos:end="221:76">motion_x</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="223:21" pos:end="223:77"><expr pos:start="223:21" pos:end="223:76"><name pos:start="223:21" pos:end="223:65"><name pos:start="223:21" pos:end="223:21">s</name><operator pos:start="223:22" pos:end="223:23">-&gt;</operator><name pos:start="223:24" pos:end="223:38">current_picture</name><operator pos:start="223:39" pos:end="223:39">.</operator><name pos:start="223:40" pos:end="223:49">motion_val</name><index pos:start="223:50" pos:end="223:54">[<expr pos:start="223:51" pos:end="223:53"><name pos:start="223:51" pos:end="223:53">dir</name></expr>]</index><index pos:start="223:55" pos:end="223:62">[<expr pos:start="223:56" pos:end="223:57"><name pos:start="223:56" pos:end="223:57">xy</name></expr>    ]</index><index pos:start="223:63" pos:end="223:65">[<expr pos:start="223:64" pos:end="223:64"><literal type="number" pos:start="223:64" pos:end="223:64">1</literal></expr>]</index></name> <operator pos:start="223:67" pos:end="223:67">=</operator> <name pos:start="223:69" pos:end="223:76">motion_y</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="225:21" pos:end="225:77"><expr pos:start="225:21" pos:end="225:76"><name pos:start="225:21" pos:end="225:65"><name pos:start="225:21" pos:end="225:21">s</name><operator pos:start="225:22" pos:end="225:23">-&gt;</operator><name pos:start="225:24" pos:end="225:38">current_picture</name><operator pos:start="225:39" pos:end="225:39">.</operator><name pos:start="225:40" pos:end="225:49">motion_val</name><index pos:start="225:50" pos:end="225:54">[<expr pos:start="225:51" pos:end="225:53"><name pos:start="225:51" pos:end="225:53">dir</name></expr>]</index><index pos:start="225:55" pos:end="225:62">[<expr pos:start="225:56" pos:end="225:61"><name pos:start="225:56" pos:end="225:57">xy</name> <operator pos:start="225:59" pos:end="225:59">+</operator> <literal type="number" pos:start="225:61" pos:end="225:61">1</literal></expr>]</index><index pos:start="225:63" pos:end="225:65">[<expr pos:start="225:64" pos:end="225:64"><literal type="number" pos:start="225:64" pos:end="225:64">0</literal></expr>]</index></name> <operator pos:start="225:67" pos:end="225:67">=</operator> <name pos:start="225:69" pos:end="225:76">motion_x</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="227:21" pos:end="227:77"><expr pos:start="227:21" pos:end="227:76"><name pos:start="227:21" pos:end="227:65"><name pos:start="227:21" pos:end="227:21">s</name><operator pos:start="227:22" pos:end="227:23">-&gt;</operator><name pos:start="227:24" pos:end="227:38">current_picture</name><operator pos:start="227:39" pos:end="227:39">.</operator><name pos:start="227:40" pos:end="227:49">motion_val</name><index pos:start="227:50" pos:end="227:54">[<expr pos:start="227:51" pos:end="227:53"><name pos:start="227:51" pos:end="227:53">dir</name></expr>]</index><index pos:start="227:55" pos:end="227:62">[<expr pos:start="227:56" pos:end="227:61"><name pos:start="227:56" pos:end="227:57">xy</name> <operator pos:start="227:59" pos:end="227:59">+</operator> <literal type="number" pos:start="227:61" pos:end="227:61">1</literal></expr>]</index><index pos:start="227:63" pos:end="227:65">[<expr pos:start="227:64" pos:end="227:64"><literal type="number" pos:start="227:64" pos:end="227:64">1</literal></expr>]</index></name> <operator pos:start="227:67" pos:end="227:67">=</operator> <name pos:start="227:69" pos:end="227:76">motion_y</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="229:21" pos:end="231:88"><expr pos:start="229:21" pos:end="231:87"><name pos:start="229:21" pos:end="229:62"><name pos:start="229:21" pos:end="229:21">s</name><operator pos:start="229:22" pos:end="229:23">-&gt;</operator><name pos:start="229:24" pos:end="229:38">current_picture</name><operator pos:start="229:39" pos:end="229:39">.</operator><name pos:start="229:40" pos:end="229:48">ref_index</name> <index pos:start="229:50" pos:end="229:54">[<expr pos:start="229:51" pos:end="229:53"><name pos:start="229:51" pos:end="229:53">dir</name></expr>]</index><index pos:start="229:55" pos:end="229:62">[<expr pos:start="229:56" pos:end="229:57"><name pos:start="229:56" pos:end="229:57">xy</name></expr>    ]</index></name><operator pos:start="229:63" pos:end="229:63">=</operator>

                    <name pos:start="231:21" pos:end="231:62"><name pos:start="231:21" pos:end="231:21">s</name><operator pos:start="231:22" pos:end="231:23">-&gt;</operator><name pos:start="231:24" pos:end="231:38">current_picture</name><operator pos:start="231:39" pos:end="231:39">.</operator><name pos:start="231:40" pos:end="231:48">ref_index</name> <index pos:start="231:50" pos:end="231:54">[<expr pos:start="231:51" pos:end="231:53"><name pos:start="231:51" pos:end="231:53">dir</name></expr>]</index><index pos:start="231:55" pos:end="231:62">[<expr pos:start="231:56" pos:end="231:61"><name pos:start="231:56" pos:end="231:57">xy</name> <operator pos:start="231:59" pos:end="231:59">+</operator> <literal type="number" pos:start="231:61" pos:end="231:61">1</literal></expr>]</index></name><operator pos:start="231:63" pos:end="231:63">=</operator> <name pos:start="231:65" pos:end="231:87"><name pos:start="231:65" pos:end="231:65">s</name><operator pos:start="231:66" pos:end="231:67">-&gt;</operator><name pos:start="231:68" pos:end="231:79">field_select</name><index pos:start="231:80" pos:end="231:84">[<expr pos:start="231:81" pos:end="231:83"><name pos:start="231:81" pos:end="231:83">dir</name></expr>]</index><index pos:start="231:85" pos:end="231:87">[<expr pos:start="231:86" pos:end="231:86"><name pos:start="231:86" pos:end="231:86">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="233:21" pos:end="233:85"><expr pos:start="233:21" pos:end="233:84"><call pos:start="233:21" pos:end="233:84"><name pos:start="233:21" pos:end="233:26">assert</name><argument_list pos:start="233:27" pos:end="233:84">(<argument pos:start="233:28" pos:end="233:83"><expr pos:start="233:28" pos:end="233:83"><name pos:start="233:28" pos:end="233:50"><name pos:start="233:28" pos:end="233:28">s</name><operator pos:start="233:29" pos:end="233:30">-&gt;</operator><name pos:start="233:31" pos:end="233:42">field_select</name><index pos:start="233:43" pos:end="233:47">[<expr pos:start="233:44" pos:end="233:46"><name pos:start="233:44" pos:end="233:46">dir</name></expr>]</index><index pos:start="233:48" pos:end="233:50">[<expr pos:start="233:49" pos:end="233:49"><name pos:start="233:49" pos:end="233:49">i</name></expr>]</index></name><operator pos:start="233:51" pos:end="233:52">==</operator><literal type="number" pos:start="233:53" pos:end="233:53">0</literal> <operator pos:start="233:55" pos:end="233:56">||</operator> <name pos:start="233:58" pos:end="233:80"><name pos:start="233:58" pos:end="233:58">s</name><operator pos:start="233:59" pos:end="233:60">-&gt;</operator><name pos:start="233:61" pos:end="233:72">field_select</name><index pos:start="233:73" pos:end="233:77">[<expr pos:start="233:74" pos:end="233:76"><name pos:start="233:74" pos:end="233:76">dir</name></expr>]</index><index pos:start="233:78" pos:end="233:80">[<expr pos:start="233:79" pos:end="233:79"><name pos:start="233:79" pos:end="233:79">i</name></expr>]</index></name><operator pos:start="233:81" pos:end="233:82">==</operator><literal type="number" pos:start="233:83" pos:end="233:83">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="237:17" pos:end="237:27"><expr pos:start="237:17" pos:end="237:26"><name pos:start="237:17" pos:end="237:18">xy</name> <operator pos:start="237:20" pos:end="237:21">+=</operator> <name pos:start="237:23" pos:end="237:26">wrap</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="245:9" pos:end="245:35"><expr pos:start="245:9" pos:end="245:34"><name pos:start="245:9" pos:end="245:18"><name pos:start="245:9" pos:end="245:9">s</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:15">dest</name><index pos:start="245:16" pos:end="245:18">[<expr pos:start="245:17" pos:end="245:17"><literal type="number" pos:start="245:17" pos:end="245:17">0</literal></expr>]</index></name> <operator pos:start="245:20" pos:end="245:21">+=</operator> <literal type="number" pos:start="245:23" pos:end="245:24">16</literal> <operator pos:start="245:26" pos:end="245:27">&gt;&gt;</operator> <name pos:start="245:29" pos:end="245:34">lowres</name></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:57"><expr pos:start="247:9" pos:end="247:56"><name pos:start="247:9" pos:end="247:18"><name pos:start="247:9" pos:end="247:9">s</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:15">dest</name><index pos:start="247:16" pos:end="247:18">[<expr pos:start="247:17" pos:end="247:17"><literal type="number" pos:start="247:17" pos:end="247:17">1</literal></expr>]</index></name> <operator pos:start="247:20" pos:end="247:21">+=</operator><operator pos:start="247:22" pos:end="247:22">(</operator><literal type="number" pos:start="247:23" pos:end="247:24">16</literal> <operator pos:start="247:26" pos:end="247:27">&gt;&gt;</operator> <name pos:start="247:29" pos:end="247:34">lowres</name><operator pos:start="247:35" pos:end="247:35">)</operator> <operator pos:start="247:37" pos:end="247:38">&gt;&gt;</operator> <name pos:start="247:40" pos:end="247:56"><name pos:start="247:40" pos:end="247:40">s</name><operator pos:start="247:41" pos:end="247:42">-&gt;</operator><name pos:start="247:43" pos:end="247:56">chroma_x_shift</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:57"><expr pos:start="249:9" pos:end="249:56"><name pos:start="249:9" pos:end="249:18"><name pos:start="249:9" pos:end="249:9">s</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:15">dest</name><index pos:start="249:16" pos:end="249:18">[<expr pos:start="249:17" pos:end="249:17"><literal type="number" pos:start="249:17" pos:end="249:17">2</literal></expr>]</index></name> <operator pos:start="249:20" pos:end="249:21">+=</operator><operator pos:start="249:22" pos:end="249:22">(</operator><literal type="number" pos:start="249:23" pos:end="249:24">16</literal> <operator pos:start="249:26" pos:end="249:27">&gt;&gt;</operator> <name pos:start="249:29" pos:end="249:34">lowres</name><operator pos:start="249:35" pos:end="249:35">)</operator> <operator pos:start="249:37" pos:end="249:38">&gt;&gt;</operator> <name pos:start="249:40" pos:end="249:56"><name pos:start="249:40" pos:end="249:40">s</name><operator pos:start="249:41" pos:end="249:42">-&gt;</operator><name pos:start="249:43" pos:end="249:56">chroma_x_shift</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="253:9" pos:end="253:35"><expr pos:start="253:9" pos:end="253:34"><call pos:start="253:9" pos:end="253:34"><name pos:start="253:9" pos:end="253:21">MPV_decode_mb</name><argument_list pos:start="253:22" pos:end="253:34">(<argument pos:start="253:23" pos:end="253:23"><expr pos:start="253:23" pos:end="253:23"><name pos:start="253:23" pos:end="253:23">s</name></expr></argument>, <argument pos:start="253:26" pos:end="253:33"><expr pos:start="253:26" pos:end="253:33"><name pos:start="253:26" pos:end="253:33"><name pos:start="253:26" pos:end="253:26">s</name><operator pos:start="253:27" pos:end="253:28">-&gt;</operator><name pos:start="253:29" pos:end="253:33">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="257:9" pos:end="303:9"><if pos:start="257:9" pos:end="303:9">if <condition pos:start="257:12" pos:end="257:37">(<expr pos:start="257:13" pos:end="257:36"><operator pos:start="257:13" pos:end="257:14">++</operator><name pos:start="257:15" pos:end="257:21"><name pos:start="257:15" pos:end="257:15">s</name><operator pos:start="257:16" pos:end="257:17">-&gt;</operator><name pos:start="257:18" pos:end="257:21">mb_x</name></name> <operator pos:start="257:23" pos:end="257:24">&gt;=</operator> <name pos:start="257:26" pos:end="257:36"><name pos:start="257:26" pos:end="257:26">s</name><operator pos:start="257:27" pos:end="257:28">-&gt;</operator><name pos:start="257:29" pos:end="257:36">mb_width</name></name></expr>)</condition> <block pos:start="257:39" pos:end="303:9">{<block_content pos:start="259:13" pos:end="301:35">

            <decl_stmt pos:start="259:13" pos:end="259:52"><decl pos:start="259:13" pos:end="259:51"><type pos:start="259:13" pos:end="259:21"><specifier pos:start="259:13" pos:end="259:17">const</specifier> <name pos:start="259:19" pos:end="259:21">int</name></type> <name pos:start="259:23" pos:end="259:29">mb_size</name><init pos:start="259:30" pos:end="259:51">= <expr pos:start="259:32" pos:end="259:51"><literal type="number" pos:start="259:32" pos:end="259:33">16</literal><operator pos:start="259:34" pos:end="259:35">&gt;&gt;</operator><name pos:start="259:36" pos:end="259:51"><name pos:start="259:36" pos:end="259:36">s</name><operator pos:start="259:37" pos:end="259:38">-&gt;</operator><name pos:start="259:39" pos:end="259:43">avctx</name><operator pos:start="259:44" pos:end="259:45">-&gt;</operator><name pos:start="259:46" pos:end="259:51">lowres</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="263:13" pos:end="263:73"><expr pos:start="263:13" pos:end="263:72"><call pos:start="263:13" pos:end="263:72"><name pos:start="263:13" pos:end="263:30">ff_draw_horiz_band</name><argument_list pos:start="263:31" pos:end="263:72">(<argument pos:start="263:32" pos:end="263:32"><expr pos:start="263:32" pos:end="263:32"><name pos:start="263:32" pos:end="263:32">s</name></expr></argument>, <argument pos:start="263:35" pos:end="263:62"><expr pos:start="263:35" pos:end="263:62"><name pos:start="263:35" pos:end="263:41">mb_size</name><operator pos:start="263:42" pos:end="263:42">*</operator><operator pos:start="263:43" pos:end="263:43">(</operator><name pos:start="263:44" pos:end="263:50"><name pos:start="263:44" pos:end="263:44">s</name><operator pos:start="263:45" pos:end="263:46">-&gt;</operator><name pos:start="263:47" pos:end="263:50">mb_y</name></name><operator pos:start="263:51" pos:end="263:52">&gt;&gt;</operator><name pos:start="263:53" pos:end="263:61">field_pic</name><operator pos:start="263:62" pos:end="263:62">)</operator></expr></argument>, <argument pos:start="263:65" pos:end="263:71"><expr pos:start="263:65" pos:end="263:71"><name pos:start="263:65" pos:end="263:71">mb_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="267:13" pos:end="267:24"><expr pos:start="267:13" pos:end="267:23"><name pos:start="267:13" pos:end="267:19"><name pos:start="267:13" pos:end="267:13">s</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:19">mb_x</name></name> <operator pos:start="267:21" pos:end="267:21">=</operator> <literal type="number" pos:start="267:23" pos:end="267:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:36"><expr pos:start="269:13" pos:end="269:35"><name pos:start="269:13" pos:end="269:19"><name pos:start="269:13" pos:end="269:13">s</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:19">mb_y</name></name> <operator pos:start="269:21" pos:end="269:22">+=</operator> <literal type="number" pos:start="269:24" pos:end="269:24">1</literal><operator pos:start="269:25" pos:end="269:26">&lt;&lt;</operator><name pos:start="269:27" pos:end="269:35">field_pic</name></expr>;</expr_stmt>



            <if_stmt pos:start="273:13" pos:end="297:13"><if pos:start="273:13" pos:end="297:13">if<condition pos:start="273:15" pos:end="273:39">(<expr pos:start="273:16" pos:end="273:38"><name pos:start="273:16" pos:end="273:22"><name pos:start="273:16" pos:end="273:16">s</name><operator pos:start="273:17" pos:end="273:18">-&gt;</operator><name pos:start="273:19" pos:end="273:22">mb_y</name></name> <operator pos:start="273:24" pos:end="273:25">&gt;=</operator> <name pos:start="273:27" pos:end="273:38"><name pos:start="273:27" pos:end="273:27">s</name><operator pos:start="273:28" pos:end="273:29">-&gt;</operator><name pos:start="273:30" pos:end="273:38">mb_height</name></name></expr>)</condition><block pos:start="273:40" pos:end="297:13">{<block_content pos:start="275:17" pos:end="295:29">

                <decl_stmt pos:start="275:17" pos:end="275:48"><decl pos:start="275:17" pos:end="275:47"><type pos:start="275:17" pos:end="275:19"><name pos:start="275:17" pos:end="275:19">int</name></type> <name pos:start="275:21" pos:end="275:24">left</name><init pos:start="275:25" pos:end="275:47">= <expr pos:start="275:27" pos:end="275:47"><call pos:start="275:27" pos:end="275:47"><name pos:start="275:27" pos:end="275:39">get_bits_left</name><argument_list pos:start="275:40" pos:end="275:47">(<argument pos:start="275:41" pos:end="275:46"><expr pos:start="275:41" pos:end="275:46"><operator pos:start="275:41" pos:end="275:41">&amp;</operator><name pos:start="275:42" pos:end="275:46"><name pos:start="275:42" pos:end="275:42">s</name><operator pos:start="275:43" pos:end="275:44">-&gt;</operator><name pos:start="275:45" pos:end="275:46">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="277:17" pos:end="281:90"><decl pos:start="277:17" pos:end="281:56"><type pos:start="277:17" pos:end="277:19"><name pos:start="277:17" pos:end="277:19">int</name></type> <name pos:start="277:21" pos:end="277:26">is_d10</name><init pos:start="277:27" pos:end="281:56">= <expr pos:start="277:29" pos:end="281:56"><name pos:start="277:29" pos:end="277:44"><name pos:start="277:29" pos:end="277:29">s</name><operator pos:start="277:30" pos:end="277:31">-&gt;</operator><name pos:start="277:32" pos:end="277:44">chroma_format</name></name><operator pos:start="277:45" pos:end="277:46">==</operator><literal type="number" pos:start="277:47" pos:end="277:47">2</literal> <operator pos:start="277:49" pos:end="277:50">&amp;&amp;</operator> <name pos:start="277:52" pos:end="277:63"><name pos:start="277:52" pos:end="277:52">s</name><operator pos:start="277:53" pos:end="277:54">-&gt;</operator><name pos:start="277:55" pos:end="277:63">pict_type</name></name><operator pos:start="277:64" pos:end="277:65">==</operator><name pos:start="277:66" pos:end="277:74">FF_I_TYPE</name> <operator pos:start="277:76" pos:end="277:77">&amp;&amp;</operator> <name pos:start="277:79" pos:end="277:92"><name pos:start="277:79" pos:end="277:83">avctx</name><operator pos:start="277:84" pos:end="277:85">-&gt;</operator><name pos:start="277:86" pos:end="277:92">profile</name></name><operator pos:start="277:93" pos:end="277:94">==</operator><literal type="number" pos:start="277:95" pos:end="277:95">0</literal> <operator pos:start="277:97" pos:end="277:98">&amp;&amp;</operator> <name pos:start="277:100" pos:end="277:111"><name pos:start="277:100" pos:end="277:104">avctx</name><operator pos:start="277:105" pos:end="277:106">-&gt;</operator><name pos:start="277:107" pos:end="277:111">level</name></name><operator pos:start="277:112" pos:end="277:113">==</operator><literal type="number" pos:start="277:114" pos:end="277:114">5</literal>

                            <operator pos:start="279:29" pos:end="279:30">&amp;&amp;</operator> <name pos:start="279:32" pos:end="279:52"><name pos:start="279:32" pos:end="279:32">s</name><operator pos:start="279:33" pos:end="279:34">-&gt;</operator><name pos:start="279:35" pos:end="279:52">intra_dc_precision</name></name> <operator pos:start="279:54" pos:end="279:55">==</operator> <literal type="number" pos:start="279:57" pos:end="279:57">2</literal> <operator pos:start="279:59" pos:end="279:60">&amp;&amp;</operator> <name pos:start="279:62" pos:end="279:76"><name pos:start="279:62" pos:end="279:62">s</name><operator pos:start="279:63" pos:end="279:64">-&gt;</operator><name pos:start="279:65" pos:end="279:76">q_scale_type</name></name> <operator pos:start="279:78" pos:end="279:79">==</operator> <literal type="number" pos:start="279:81" pos:end="279:81">1</literal> <operator pos:start="279:83" pos:end="279:84">&amp;&amp;</operator> <name pos:start="279:86" pos:end="279:102"><name pos:start="279:86" pos:end="279:86">s</name><operator pos:start="279:87" pos:end="279:88">-&gt;</operator><name pos:start="279:89" pos:end="279:102">alternate_scan</name></name> <operator pos:start="279:104" pos:end="279:105">==</operator> <literal type="number" pos:start="279:107" pos:end="279:107">0</literal>

                            <operator pos:start="281:29" pos:end="281:30">&amp;&amp;</operator> <name pos:start="281:32" pos:end="281:51"><name pos:start="281:32" pos:end="281:32">s</name><operator pos:start="281:33" pos:end="281:34">-&gt;</operator><name pos:start="281:35" pos:end="281:51">progressive_frame</name></name> <operator pos:start="281:53" pos:end="281:54">==</operator> <literal type="number" pos:start="281:56" pos:end="281:56">0</literal></expr></init></decl> <comment type="block" pos:start="281:58" pos:end="281:89">/* vbv_delay == 0xBBB || 0xE10*/</comment>;</decl_stmt>



                <if_stmt pos:start="285:17" pos:end="295:29"><if pos:start="285:17" pos:end="293:17">if<condition pos:start="285:19" pos:end="287:79">(<expr pos:start="285:20" pos:end="287:78"><name pos:start="285:20" pos:end="285:23">left</name> <operator pos:start="285:25" pos:end="285:25">&lt;</operator> <literal type="number" pos:start="285:27" pos:end="285:27">0</literal> <operator pos:start="285:29" pos:end="285:30">||</operator> <operator pos:start="285:32" pos:end="285:32">(</operator><name pos:start="285:33" pos:end="285:36">left</name> <operator pos:start="285:38" pos:end="285:39">&amp;&amp;</operator> <call pos:start="285:41" pos:end="285:74"><name pos:start="285:41" pos:end="285:49">show_bits</name><argument_list pos:start="285:50" pos:end="285:74">(<argument pos:start="285:51" pos:end="285:56"><expr pos:start="285:51" pos:end="285:56"><operator pos:start="285:51" pos:end="285:51">&amp;</operator><name pos:start="285:52" pos:end="285:56"><name pos:start="285:52" pos:end="285:52">s</name><operator pos:start="285:53" pos:end="285:54">-&gt;</operator><name pos:start="285:55" pos:end="285:56">gb</name></name></expr></argument>, <argument pos:start="285:59" pos:end="285:73"><expr pos:start="285:59" pos:end="285:73"><call pos:start="285:59" pos:end="285:73"><name pos:start="285:59" pos:end="285:63">FFMIN</name><argument_list pos:start="285:64" pos:end="285:73">(<argument pos:start="285:65" pos:end="285:68"><expr pos:start="285:65" pos:end="285:68"><name pos:start="285:65" pos:end="285:68">left</name></expr></argument>, <argument pos:start="285:71" pos:end="285:72"><expr pos:start="285:71" pos:end="285:72"><literal type="number" pos:start="285:71" pos:end="285:72">23</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="285:76" pos:end="285:77">&amp;&amp;</operator> <operator pos:start="285:79" pos:end="285:79">!</operator><name pos:start="285:80" pos:end="285:85">is_d10</name><operator pos:start="285:86" pos:end="285:86">)</operator>

                   <operator pos:start="287:20" pos:end="287:21">||</operator> <operator pos:start="287:23" pos:end="287:23">(</operator><name pos:start="287:24" pos:end="287:47"><name pos:start="287:24" pos:end="287:28">avctx</name><operator pos:start="287:29" pos:end="287:30">-&gt;</operator><name pos:start="287:31" pos:end="287:47">error_recognition</name></name> <operator pos:start="287:49" pos:end="287:50">&gt;=</operator> <name pos:start="287:52" pos:end="287:67">FF_ER_AGGRESSIVE</name> <operator pos:start="287:69" pos:end="287:70">&amp;&amp;</operator> <name pos:start="287:72" pos:end="287:75">left</name><operator pos:start="287:76" pos:end="287:76">&gt;</operator><literal type="number" pos:start="287:77" pos:end="287:77">8</literal><operator pos:start="287:78" pos:end="287:78">)</operator></expr>)</condition><block pos:start="287:80" pos:end="293:17">{<block_content pos:start="289:21" pos:end="291:30">

                    <expr_stmt pos:start="289:21" pos:end="289:120"><expr pos:start="289:21" pos:end="289:119"><call pos:start="289:21" pos:end="289:119"><name pos:start="289:21" pos:end="289:26">av_log</name><argument_list pos:start="289:27" pos:end="289:119">(<argument pos:start="289:28" pos:end="289:32"><expr pos:start="289:28" pos:end="289:32"><name pos:start="289:28" pos:end="289:32">avctx</name></expr></argument>, <argument pos:start="289:35" pos:end="289:46"><expr pos:start="289:35" pos:end="289:46"><name pos:start="289:35" pos:end="289:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="289:49" pos:end="289:76"><expr pos:start="289:49" pos:end="289:76"><literal type="string" pos:start="289:49" pos:end="289:76">"end mismatch left=%d %0X\n"</literal></expr></argument>, <argument pos:start="289:79" pos:end="289:82"><expr pos:start="289:79" pos:end="289:82"><name pos:start="289:79" pos:end="289:82">left</name></expr></argument>, <argument pos:start="289:85" pos:end="289:118"><expr pos:start="289:85" pos:end="289:118"><call pos:start="289:85" pos:end="289:118"><name pos:start="289:85" pos:end="289:93">show_bits</name><argument_list pos:start="289:94" pos:end="289:118">(<argument pos:start="289:95" pos:end="289:100"><expr pos:start="289:95" pos:end="289:100"><operator pos:start="289:95" pos:end="289:95">&amp;</operator><name pos:start="289:96" pos:end="289:100"><name pos:start="289:96" pos:end="289:96">s</name><operator pos:start="289:97" pos:end="289:98">-&gt;</operator><name pos:start="289:99" pos:end="289:100">gb</name></name></expr></argument>, <argument pos:start="289:103" pos:end="289:117"><expr pos:start="289:103" pos:end="289:117"><call pos:start="289:103" pos:end="289:117"><name pos:start="289:103" pos:end="289:107">FFMIN</name><argument_list pos:start="289:108" pos:end="289:117">(<argument pos:start="289:109" pos:end="289:112"><expr pos:start="289:109" pos:end="289:112"><name pos:start="289:109" pos:end="289:112">left</name></expr></argument>, <argument pos:start="289:115" pos:end="289:116"><expr pos:start="289:115" pos:end="289:116"><literal type="number" pos:start="289:115" pos:end="289:116">23</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="291:21" pos:end="291:30">return <expr pos:start="291:28" pos:end="291:29"><operator pos:start="291:28" pos:end="291:28">-</operator><literal type="number" pos:start="291:29" pos:end="291:29">1</literal></expr>;</return>

                </block_content>}</block></if><else pos:start="293:18" pos:end="295:29">else<block type="pseudo" pos:start="295:21" pos:end="295:29"><block_content pos:start="295:21" pos:end="295:29">

                    <goto pos:start="295:21" pos:end="295:29">goto <name pos:start="295:26" pos:end="295:28">eos</name>;</goto></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="301:13" pos:end="301:35"><expr pos:start="301:13" pos:end="301:34"><call pos:start="301:13" pos:end="301:34"><name pos:start="301:13" pos:end="301:31">ff_init_block_index</name><argument_list pos:start="301:32" pos:end="301:34">(<argument pos:start="301:33" pos:end="301:33"><expr pos:start="301:33" pos:end="301:33"><name pos:start="301:33" pos:end="301:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="307:9" pos:end="307:30">/* skip mb handling */</comment>

        <if_stmt pos:start="309:9" pos:end="419:9"><if pos:start="309:9" pos:end="419:9">if <condition pos:start="309:12" pos:end="309:33">(<expr pos:start="309:13" pos:end="309:32"><name pos:start="309:13" pos:end="309:26"><name pos:start="309:13" pos:end="309:13">s</name><operator pos:start="309:14" pos:end="309:15">-&gt;</operator><name pos:start="309:16" pos:end="309:26">mb_skip_run</name></name> <operator pos:start="309:28" pos:end="309:29">==</operator> <operator pos:start="309:31" pos:end="309:31">-</operator><literal type="number" pos:start="309:32" pos:end="309:32">1</literal></expr>)</condition> <block pos:start="309:35" pos:end="419:9">{<block_content pos:start="313:13" pos:end="417:13">

            <comment type="block" pos:start="311:13" pos:end="311:38">/* read increment again */</comment>

            <expr_stmt pos:start="313:13" pos:end="313:31"><expr pos:start="313:13" pos:end="313:30"><name pos:start="313:13" pos:end="313:26"><name pos:start="313:13" pos:end="313:13">s</name><operator pos:start="313:14" pos:end="313:15">-&gt;</operator><name pos:start="313:16" pos:end="313:26">mb_skip_run</name></name> <operator pos:start="313:28" pos:end="313:28">=</operator> <literal type="number" pos:start="313:30" pos:end="313:30">0</literal></expr>;</expr_stmt>

            <for pos:start="315:13" pos:end="357:13">for<control pos:start="315:16" pos:end="315:19">(<init pos:start="315:17" pos:end="315:17">;</init><condition pos:start="315:18" pos:end="315:18">;</condition><incr/>)</control> <block pos:start="315:21" pos:end="357:13">{<block_content pos:start="317:17" pos:end="355:17">

                <decl_stmt pos:start="317:17" pos:end="317:82"><decl pos:start="317:17" pos:end="317:81"><type pos:start="317:17" pos:end="317:19"><name pos:start="317:17" pos:end="317:19">int</name></type> <name pos:start="317:21" pos:end="317:24">code</name> <init pos:start="317:26" pos:end="317:81">= <expr pos:start="317:28" pos:end="317:81"><call pos:start="317:28" pos:end="317:81"><name pos:start="317:28" pos:end="317:35">get_vlc2</name><argument_list pos:start="317:36" pos:end="317:81">(<argument pos:start="317:37" pos:end="317:42"><expr pos:start="317:37" pos:end="317:42"><operator pos:start="317:37" pos:end="317:37">&amp;</operator><name pos:start="317:38" pos:end="317:42"><name pos:start="317:38" pos:end="317:38">s</name><operator pos:start="317:39" pos:end="317:40">-&gt;</operator><name pos:start="317:41" pos:end="317:42">gb</name></name></expr></argument>, <argument pos:start="317:45" pos:end="317:60"><expr pos:start="317:45" pos:end="317:60"><name pos:start="317:45" pos:end="317:60"><name pos:start="317:45" pos:end="317:54">mbincr_vlc</name><operator pos:start="317:55" pos:end="317:55">.</operator><name pos:start="317:56" pos:end="317:60">table</name></name></expr></argument>, <argument pos:start="317:63" pos:end="317:77"><expr pos:start="317:63" pos:end="317:77"><name pos:start="317:63" pos:end="317:77">MBINCR_VLC_BITS</name></expr></argument>, <argument pos:start="317:80" pos:end="317:80"><expr pos:start="317:80" pos:end="317:80"><literal type="number" pos:start="317:80" pos:end="317:80">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="319:17" pos:end="325:17"><if pos:start="319:17" pos:end="325:17">if <condition pos:start="319:20" pos:end="319:29">(<expr pos:start="319:21" pos:end="319:28"><name pos:start="319:21" pos:end="319:24">code</name> <operator pos:start="319:26" pos:end="319:26">&lt;</operator> <literal type="number" pos:start="319:28" pos:end="319:28">0</literal></expr>)</condition><block pos:start="319:30" pos:end="325:17">{<block_content pos:start="321:21" pos:end="323:30">

                    <expr_stmt pos:start="321:21" pos:end="321:72"><expr pos:start="321:21" pos:end="321:71"><call pos:start="321:21" pos:end="321:71"><name pos:start="321:21" pos:end="321:26">av_log</name><argument_list pos:start="321:27" pos:end="321:71">(<argument pos:start="321:28" pos:end="321:35"><expr pos:start="321:28" pos:end="321:35"><name pos:start="321:28" pos:end="321:35"><name pos:start="321:28" pos:end="321:28">s</name><operator pos:start="321:29" pos:end="321:30">-&gt;</operator><name pos:start="321:31" pos:end="321:35">avctx</name></name></expr></argument>, <argument pos:start="321:38" pos:end="321:49"><expr pos:start="321:38" pos:end="321:49"><name pos:start="321:38" pos:end="321:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="321:52" pos:end="321:70"><expr pos:start="321:52" pos:end="321:70"><literal type="string" pos:start="321:52" pos:end="321:70">"mb incr damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="323:21" pos:end="323:30">return <expr pos:start="323:28" pos:end="323:29"><operator pos:start="323:28" pos:end="323:28">-</operator><literal type="number" pos:start="323:29" pos:end="323:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="327:17" pos:end="355:17"><if pos:start="327:17" pos:end="349:17">if <condition pos:start="327:20" pos:end="327:31">(<expr pos:start="327:21" pos:end="327:30"><name pos:start="327:21" pos:end="327:24">code</name> <operator pos:start="327:26" pos:end="327:27">&gt;=</operator> <literal type="number" pos:start="327:29" pos:end="327:30">33</literal></expr>)</condition> <block pos:start="327:33" pos:end="349:17">{<block_content pos:start="329:21" pos:end="345:21">

                    <if_stmt pos:start="329:21" pos:end="345:21"><if pos:start="329:21" pos:end="333:21">if <condition pos:start="329:24" pos:end="329:35">(<expr pos:start="329:25" pos:end="329:34"><name pos:start="329:25" pos:end="329:28">code</name> <operator pos:start="329:30" pos:end="329:31">==</operator> <literal type="number" pos:start="329:33" pos:end="329:34">33</literal></expr>)</condition> <block pos:start="329:37" pos:end="333:21">{<block_content pos:start="331:25" pos:end="331:45">

                        <expr_stmt pos:start="331:25" pos:end="331:45"><expr pos:start="331:25" pos:end="331:44"><name pos:start="331:25" pos:end="331:38"><name pos:start="331:25" pos:end="331:25">s</name><operator pos:start="331:26" pos:end="331:27">-&gt;</operator><name pos:start="331:28" pos:end="331:38">mb_skip_run</name></name> <operator pos:start="331:40" pos:end="331:41">+=</operator> <literal type="number" pos:start="331:43" pos:end="331:44">33</literal></expr>;</expr_stmt>

                    </block_content>}</block></if><if type="elseif" pos:start="333:22" pos:end="345:21">else if<condition pos:start="333:29" pos:end="333:40">(<expr pos:start="333:30" pos:end="333:39"><name pos:start="333:30" pos:end="333:33">code</name> <operator pos:start="333:35" pos:end="333:36">==</operator> <literal type="number" pos:start="333:38" pos:end="333:39">35</literal></expr>)</condition><block pos:start="333:41" pos:end="345:21">{<block_content pos:start="335:25" pos:end="343:33">

                        <if_stmt pos:start="335:25" pos:end="341:25"><if pos:start="335:25" pos:end="341:25">if<condition pos:start="335:27" pos:end="335:77">(<expr pos:start="335:28" pos:end="335:76"><name pos:start="335:28" pos:end="335:41"><name pos:start="335:28" pos:end="335:28">s</name><operator pos:start="335:29" pos:end="335:30">-&gt;</operator><name pos:start="335:31" pos:end="335:41">mb_skip_run</name></name> <operator pos:start="335:43" pos:end="335:44">!=</operator> <literal type="number" pos:start="335:46" pos:end="335:46">0</literal> <operator pos:start="335:48" pos:end="335:49">||</operator> <call pos:start="335:51" pos:end="335:71"><name pos:start="335:51" pos:end="335:59">show_bits</name><argument_list pos:start="335:60" pos:end="335:71">(<argument pos:start="335:61" pos:end="335:66"><expr pos:start="335:61" pos:end="335:66"><operator pos:start="335:61" pos:end="335:61">&amp;</operator><name pos:start="335:62" pos:end="335:66"><name pos:start="335:62" pos:end="335:62">s</name><operator pos:start="335:63" pos:end="335:64">-&gt;</operator><name pos:start="335:65" pos:end="335:66">gb</name></name></expr></argument>, <argument pos:start="335:69" pos:end="335:70"><expr pos:start="335:69" pos:end="335:70"><literal type="number" pos:start="335:69" pos:end="335:70">15</literal></expr></argument>)</argument_list></call> <operator pos:start="335:73" pos:end="335:74">!=</operator> <literal type="number" pos:start="335:76" pos:end="335:76">0</literal></expr>)</condition><block pos:start="335:78" pos:end="341:25">{<block_content pos:start="337:29" pos:end="339:38">

                            <expr_stmt pos:start="337:29" pos:end="337:79"><expr pos:start="337:29" pos:end="337:78"><call pos:start="337:29" pos:end="337:78"><name pos:start="337:29" pos:end="337:34">av_log</name><argument_list pos:start="337:35" pos:end="337:78">(<argument pos:start="337:36" pos:end="337:43"><expr pos:start="337:36" pos:end="337:43"><name pos:start="337:36" pos:end="337:43"><name pos:start="337:36" pos:end="337:36">s</name><operator pos:start="337:37" pos:end="337:38">-&gt;</operator><name pos:start="337:39" pos:end="337:43">avctx</name></name></expr></argument>, <argument pos:start="337:46" pos:end="337:57"><expr pos:start="337:46" pos:end="337:57"><name pos:start="337:46" pos:end="337:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="337:60" pos:end="337:77"><expr pos:start="337:60" pos:end="337:77"><literal type="string" pos:start="337:60" pos:end="337:77">"slice mismatch\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="339:29" pos:end="339:38">return <expr pos:start="339:36" pos:end="339:37"><operator pos:start="339:36" pos:end="339:36">-</operator><literal type="number" pos:start="339:37" pos:end="339:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <goto pos:start="343:25" pos:end="343:33">goto <name pos:start="343:30" pos:end="343:32">eos</name>;</goto> <comment type="block" pos:start="343:35" pos:end="343:52">/* end of slice */</comment>

                    </block_content>}</block></if></if_stmt>

                    <comment type="block" pos:start="347:21" pos:end="347:60">/* otherwise, stuffing, nothing to do */</comment>

                </block_content>}</block></if> <else pos:start="349:19" pos:end="355:17">else <block pos:start="349:24" pos:end="355:17">{<block_content pos:start="351:21" pos:end="353:26">

                    <expr_stmt pos:start="351:21" pos:end="351:43"><expr pos:start="351:21" pos:end="351:42"><name pos:start="351:21" pos:end="351:34"><name pos:start="351:21" pos:end="351:21">s</name><operator pos:start="351:22" pos:end="351:23">-&gt;</operator><name pos:start="351:24" pos:end="351:34">mb_skip_run</name></name> <operator pos:start="351:36" pos:end="351:37">+=</operator> <name pos:start="351:39" pos:end="351:42">code</name></expr>;</expr_stmt>

                    <break pos:start="353:21" pos:end="353:26">break;</break>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="359:13" pos:end="417:13"><if pos:start="359:13" pos:end="417:13">if<condition pos:start="359:15" pos:end="359:30">(<expr pos:start="359:16" pos:end="359:29"><name pos:start="359:16" pos:end="359:29"><name pos:start="359:16" pos:end="359:16">s</name><operator pos:start="359:17" pos:end="359:18">-&gt;</operator><name pos:start="359:19" pos:end="359:29">mb_skip_run</name></name></expr>)</condition><block pos:start="359:31" pos:end="417:13">{<block_content pos:start="361:17" pos:end="415:17">

                <decl_stmt pos:start="361:17" pos:end="361:22"><decl pos:start="361:17" pos:end="361:21"><type pos:start="361:17" pos:end="361:19"><name pos:start="361:17" pos:end="361:19">int</name></type> <name pos:start="361:21" pos:end="361:21">i</name></decl>;</decl_stmt>

                <if_stmt pos:start="363:17" pos:end="369:17"><if pos:start="363:17" pos:end="369:17">if<condition pos:start="363:19" pos:end="363:45">(<expr pos:start="363:20" pos:end="363:44"><name pos:start="363:20" pos:end="363:31"><name pos:start="363:20" pos:end="363:20">s</name><operator pos:start="363:21" pos:end="363:22">-&gt;</operator><name pos:start="363:23" pos:end="363:31">pict_type</name></name> <operator pos:start="363:33" pos:end="363:34">==</operator> <name pos:start="363:36" pos:end="363:44">FF_I_TYPE</name></expr>)</condition><block pos:start="363:46" pos:end="369:17">{<block_content pos:start="365:21" pos:end="367:30">

                    <expr_stmt pos:start="365:21" pos:end="365:105"><expr pos:start="365:21" pos:end="365:104"><call pos:start="365:21" pos:end="365:104"><name pos:start="365:21" pos:end="365:26">av_log</name><argument_list pos:start="365:27" pos:end="365:104">(<argument pos:start="365:28" pos:end="365:35"><expr pos:start="365:28" pos:end="365:35"><name pos:start="365:28" pos:end="365:35"><name pos:start="365:28" pos:end="365:28">s</name><operator pos:start="365:29" pos:end="365:30">-&gt;</operator><name pos:start="365:31" pos:end="365:35">avctx</name></name></expr></argument>, <argument pos:start="365:38" pos:end="365:49"><expr pos:start="365:38" pos:end="365:49"><name pos:start="365:38" pos:end="365:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="365:52" pos:end="365:85"><expr pos:start="365:52" pos:end="365:85"><literal type="string" pos:start="365:52" pos:end="365:85">"skipped MB in I frame at %d %d\n"</literal></expr></argument>, <argument pos:start="365:88" pos:end="365:94"><expr pos:start="365:88" pos:end="365:94"><name pos:start="365:88" pos:end="365:94"><name pos:start="365:88" pos:end="365:88">s</name><operator pos:start="365:89" pos:end="365:90">-&gt;</operator><name pos:start="365:91" pos:end="365:94">mb_x</name></name></expr></argument>, <argument pos:start="365:97" pos:end="365:103"><expr pos:start="365:97" pos:end="365:103"><name pos:start="365:97" pos:end="365:103"><name pos:start="365:97" pos:end="365:97">s</name><operator pos:start="365:98" pos:end="365:99">-&gt;</operator><name pos:start="365:100" pos:end="365:103">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="367:21" pos:end="367:30">return <expr pos:start="367:28" pos:end="367:29"><operator pos:start="367:28" pos:end="367:28">-</operator><literal type="number" pos:start="367:29" pos:end="367:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="373:17" pos:end="373:29">/* skip mb */</comment>

                <expr_stmt pos:start="375:17" pos:end="375:32"><expr pos:start="375:17" pos:end="375:31"><name pos:start="375:17" pos:end="375:27"><name pos:start="375:17" pos:end="375:17">s</name><operator pos:start="375:18" pos:end="375:19">-&gt;</operator><name pos:start="375:20" pos:end="375:27">mb_intra</name></name> <operator pos:start="375:29" pos:end="375:29">=</operator> <literal type="number" pos:start="375:31" pos:end="375:31">0</literal></expr>;</expr_stmt>

                <for pos:start="377:17" pos:end="379:48">for<control pos:start="377:20" pos:end="377:33">(<init pos:start="377:21" pos:end="377:24"><expr pos:start="377:21" pos:end="377:23"><name pos:start="377:21" pos:end="377:21">i</name><operator pos:start="377:22" pos:end="377:22">=</operator><literal type="number" pos:start="377:23" pos:end="377:23">0</literal></expr>;</init><condition pos:start="377:25" pos:end="377:29"><expr pos:start="377:25" pos:end="377:28"><name pos:start="377:25" pos:end="377:25">i</name><operator pos:start="377:26" pos:end="377:26">&lt;</operator><literal type="number" pos:start="377:27" pos:end="377:28">12</literal></expr>;</condition><incr pos:start="377:30" pos:end="377:32"><expr pos:start="377:30" pos:end="377:32"><name pos:start="377:30" pos:end="377:30">i</name><operator pos:start="377:31" pos:end="377:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="379:21" pos:end="379:48"><block_content pos:start="379:21" pos:end="379:48">

                    <expr_stmt pos:start="379:21" pos:end="379:48"><expr pos:start="379:21" pos:end="379:47"><name pos:start="379:21" pos:end="379:42"><name pos:start="379:21" pos:end="379:21">s</name><operator pos:start="379:22" pos:end="379:23">-&gt;</operator><name pos:start="379:24" pos:end="379:39">block_last_index</name><index pos:start="379:40" pos:end="379:42">[<expr pos:start="379:41" pos:end="379:41"><name pos:start="379:41" pos:end="379:41">i</name></expr>]</index></name> <operator pos:start="379:44" pos:end="379:44">=</operator> <operator pos:start="379:46" pos:end="379:46">-</operator><literal type="number" pos:start="379:47" pos:end="379:47">1</literal></expr>;</expr_stmt></block_content></block></for>

                <if_stmt pos:start="381:17" pos:end="387:47"><if pos:start="381:17" pos:end="383:47">if<condition pos:start="381:19" pos:end="381:54">(<expr pos:start="381:20" pos:end="381:53"><name pos:start="381:20" pos:end="381:39"><name pos:start="381:20" pos:end="381:20">s</name><operator pos:start="381:21" pos:end="381:22">-&gt;</operator><name pos:start="381:23" pos:end="381:39">picture_structure</name></name> <operator pos:start="381:41" pos:end="381:42">==</operator> <name pos:start="381:44" pos:end="381:53">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="383:21" pos:end="383:47"><block_content pos:start="383:21" pos:end="383:47">

                    <expr_stmt pos:start="383:21" pos:end="383:47"><expr pos:start="383:21" pos:end="383:46"><name pos:start="383:21" pos:end="383:30"><name pos:start="383:21" pos:end="383:21">s</name><operator pos:start="383:22" pos:end="383:23">-&gt;</operator><name pos:start="383:24" pos:end="383:30">mv_type</name></name> <operator pos:start="383:32" pos:end="383:32">=</operator> <name pos:start="383:34" pos:end="383:46">MV_TYPE_16X16</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="385:17" pos:end="387:47">else<block type="pseudo" pos:start="387:21" pos:end="387:47"><block_content pos:start="387:21" pos:end="387:47">

                    <expr_stmt pos:start="387:21" pos:end="387:47"><expr pos:start="387:21" pos:end="387:46"><name pos:start="387:21" pos:end="387:30"><name pos:start="387:21" pos:end="387:21">s</name><operator pos:start="387:22" pos:end="387:23">-&gt;</operator><name pos:start="387:24" pos:end="387:30">mv_type</name></name> <operator pos:start="387:32" pos:end="387:32">=</operator> <name pos:start="387:34" pos:end="387:46">MV_TYPE_FIELD</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <if_stmt pos:start="389:17" pos:end="415:17"><if pos:start="389:17" pos:end="403:17">if <condition pos:start="389:20" pos:end="389:46">(<expr pos:start="389:21" pos:end="389:45"><name pos:start="389:21" pos:end="389:32"><name pos:start="389:21" pos:end="389:21">s</name><operator pos:start="389:22" pos:end="389:23">-&gt;</operator><name pos:start="389:24" pos:end="389:32">pict_type</name></name> <operator pos:start="389:34" pos:end="389:35">==</operator> <name pos:start="389:37" pos:end="389:45">FF_P_TYPE</name></expr>)</condition> <block pos:start="389:48" pos:end="403:17">{<block_content pos:start="393:21" pos:end="401:74">

                    <comment type="block" pos:start="391:21" pos:end="391:66">/* if P type, zero motion vector is implied */</comment>

                    <expr_stmt pos:start="393:21" pos:end="393:47"><expr pos:start="393:21" pos:end="393:46"><name pos:start="393:21" pos:end="393:29"><name pos:start="393:21" pos:end="393:21">s</name><operator pos:start="393:22" pos:end="393:23">-&gt;</operator><name pos:start="393:24" pos:end="393:29">mv_dir</name></name> <operator pos:start="393:31" pos:end="393:31">=</operator> <name pos:start="393:33" pos:end="393:46">MV_DIR_FORWARD</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="395:21" pos:end="395:56"><expr pos:start="395:21" pos:end="395:55"><name pos:start="395:21" pos:end="395:34"><name pos:start="395:21" pos:end="395:21">s</name><operator pos:start="395:22" pos:end="395:23">-&gt;</operator><name pos:start="395:24" pos:end="395:25">mv</name><index pos:start="395:26" pos:end="395:28">[<expr pos:start="395:27" pos:end="395:27"><literal type="number" pos:start="395:27" pos:end="395:27">0</literal></expr>]</index><index pos:start="395:29" pos:end="395:31">[<expr pos:start="395:30" pos:end="395:30"><literal type="number" pos:start="395:30" pos:end="395:30">0</literal></expr>]</index><index pos:start="395:32" pos:end="395:34">[<expr pos:start="395:33" pos:end="395:33"><literal type="number" pos:start="395:33" pos:end="395:33">0</literal></expr>]</index></name> <operator pos:start="395:36" pos:end="395:36">=</operator> <name pos:start="395:38" pos:end="395:51"><name pos:start="395:38" pos:end="395:38">s</name><operator pos:start="395:39" pos:end="395:40">-&gt;</operator><name pos:start="395:41" pos:end="395:42">mv</name><index pos:start="395:43" pos:end="395:45">[<expr pos:start="395:44" pos:end="395:44"><literal type="number" pos:start="395:44" pos:end="395:44">0</literal></expr>]</index><index pos:start="395:46" pos:end="395:48">[<expr pos:start="395:47" pos:end="395:47"><literal type="number" pos:start="395:47" pos:end="395:47">0</literal></expr>]</index><index pos:start="395:49" pos:end="395:51">[<expr pos:start="395:50" pos:end="395:50"><literal type="number" pos:start="395:50" pos:end="395:50">1</literal></expr>]</index></name> <operator pos:start="395:53" pos:end="395:53">=</operator> <literal type="number" pos:start="395:55" pos:end="395:55">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="397:21" pos:end="397:66"><expr pos:start="397:21" pos:end="397:65"><name pos:start="397:21" pos:end="397:39"><name pos:start="397:21" pos:end="397:21">s</name><operator pos:start="397:22" pos:end="397:23">-&gt;</operator><name pos:start="397:24" pos:end="397:30">last_mv</name><index pos:start="397:31" pos:end="397:33">[<expr pos:start="397:32" pos:end="397:32"><literal type="number" pos:start="397:32" pos:end="397:32">0</literal></expr>]</index><index pos:start="397:34" pos:end="397:36">[<expr pos:start="397:35" pos:end="397:35"><literal type="number" pos:start="397:35" pos:end="397:35">0</literal></expr>]</index><index pos:start="397:37" pos:end="397:39">[<expr pos:start="397:38" pos:end="397:38"><literal type="number" pos:start="397:38" pos:end="397:38">0</literal></expr>]</index></name> <operator pos:start="397:41" pos:end="397:41">=</operator> <name pos:start="397:43" pos:end="397:61"><name pos:start="397:43" pos:end="397:43">s</name><operator pos:start="397:44" pos:end="397:45">-&gt;</operator><name pos:start="397:46" pos:end="397:52">last_mv</name><index pos:start="397:53" pos:end="397:55">[<expr pos:start="397:54" pos:end="397:54"><literal type="number" pos:start="397:54" pos:end="397:54">0</literal></expr>]</index><index pos:start="397:56" pos:end="397:58">[<expr pos:start="397:57" pos:end="397:57"><literal type="number" pos:start="397:57" pos:end="397:57">0</literal></expr>]</index><index pos:start="397:59" pos:end="397:61">[<expr pos:start="397:60" pos:end="397:60"><literal type="number" pos:start="397:60" pos:end="397:60">1</literal></expr>]</index></name> <operator pos:start="397:63" pos:end="397:63">=</operator> <literal type="number" pos:start="397:65" pos:end="397:65">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="399:21" pos:end="399:66"><expr pos:start="399:21" pos:end="399:65"><name pos:start="399:21" pos:end="399:39"><name pos:start="399:21" pos:end="399:21">s</name><operator pos:start="399:22" pos:end="399:23">-&gt;</operator><name pos:start="399:24" pos:end="399:30">last_mv</name><index pos:start="399:31" pos:end="399:33">[<expr pos:start="399:32" pos:end="399:32"><literal type="number" pos:start="399:32" pos:end="399:32">0</literal></expr>]</index><index pos:start="399:34" pos:end="399:36">[<expr pos:start="399:35" pos:end="399:35"><literal type="number" pos:start="399:35" pos:end="399:35">1</literal></expr>]</index><index pos:start="399:37" pos:end="399:39">[<expr pos:start="399:38" pos:end="399:38"><literal type="number" pos:start="399:38" pos:end="399:38">0</literal></expr>]</index></name> <operator pos:start="399:41" pos:end="399:41">=</operator> <name pos:start="399:43" pos:end="399:61"><name pos:start="399:43" pos:end="399:43">s</name><operator pos:start="399:44" pos:end="399:45">-&gt;</operator><name pos:start="399:46" pos:end="399:52">last_mv</name><index pos:start="399:53" pos:end="399:55">[<expr pos:start="399:54" pos:end="399:54"><literal type="number" pos:start="399:54" pos:end="399:54">0</literal></expr>]</index><index pos:start="399:56" pos:end="399:58">[<expr pos:start="399:57" pos:end="399:57"><literal type="number" pos:start="399:57" pos:end="399:57">1</literal></expr>]</index><index pos:start="399:59" pos:end="399:61">[<expr pos:start="399:60" pos:end="399:60"><literal type="number" pos:start="399:60" pos:end="399:60">1</literal></expr>]</index></name> <operator pos:start="399:63" pos:end="399:63">=</operator> <literal type="number" pos:start="399:65" pos:end="399:65">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="401:21" pos:end="401:74"><expr pos:start="401:21" pos:end="401:73"><name pos:start="401:21" pos:end="401:41"><name pos:start="401:21" pos:end="401:21">s</name><operator pos:start="401:22" pos:end="401:23">-&gt;</operator><name pos:start="401:24" pos:end="401:35">field_select</name><index pos:start="401:36" pos:end="401:38">[<expr pos:start="401:37" pos:end="401:37"><literal type="number" pos:start="401:37" pos:end="401:37">0</literal></expr>]</index><index pos:start="401:39" pos:end="401:41">[<expr pos:start="401:40" pos:end="401:40"><literal type="number" pos:start="401:40" pos:end="401:40">0</literal></expr>]</index></name><operator pos:start="401:42" pos:end="401:42">=</operator> <operator pos:start="401:44" pos:end="401:44">(</operator><name pos:start="401:45" pos:end="401:64"><name pos:start="401:45" pos:end="401:45">s</name><operator pos:start="401:46" pos:end="401:47">-&gt;</operator><name pos:start="401:48" pos:end="401:64">picture_structure</name></name> <operator pos:start="401:66" pos:end="401:66">-</operator> <literal type="number" pos:start="401:68" pos:end="401:68">1</literal><operator pos:start="401:69" pos:end="401:69">)</operator> <operator pos:start="401:71" pos:end="401:71">&amp;</operator> <literal type="number" pos:start="401:73" pos:end="401:73">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="403:19" pos:end="415:17">else <block pos:start="403:24" pos:end="415:17">{<block_content pos:start="407:21" pos:end="413:57">

                    <comment type="block" pos:start="405:21" pos:end="405:74">/* if B type, reuse previous vectors and directions */</comment>

                    <expr_stmt pos:start="407:21" pos:end="407:57"><expr pos:start="407:21" pos:end="407:56"><name pos:start="407:21" pos:end="407:34"><name pos:start="407:21" pos:end="407:21">s</name><operator pos:start="407:22" pos:end="407:23">-&gt;</operator><name pos:start="407:24" pos:end="407:25">mv</name><index pos:start="407:26" pos:end="407:28">[<expr pos:start="407:27" pos:end="407:27"><literal type="number" pos:start="407:27" pos:end="407:27">0</literal></expr>]</index><index pos:start="407:29" pos:end="407:31">[<expr pos:start="407:30" pos:end="407:30"><literal type="number" pos:start="407:30" pos:end="407:30">0</literal></expr>]</index><index pos:start="407:32" pos:end="407:34">[<expr pos:start="407:33" pos:end="407:33"><literal type="number" pos:start="407:33" pos:end="407:33">0</literal></expr>]</index></name> <operator pos:start="407:36" pos:end="407:36">=</operator> <name pos:start="407:38" pos:end="407:56"><name pos:start="407:38" pos:end="407:38">s</name><operator pos:start="407:39" pos:end="407:40">-&gt;</operator><name pos:start="407:41" pos:end="407:47">last_mv</name><index pos:start="407:48" pos:end="407:50">[<expr pos:start="407:49" pos:end="407:49"><literal type="number" pos:start="407:49" pos:end="407:49">0</literal></expr>]</index><index pos:start="407:51" pos:end="407:53">[<expr pos:start="407:52" pos:end="407:52"><literal type="number" pos:start="407:52" pos:end="407:52">0</literal></expr>]</index><index pos:start="407:54" pos:end="407:56">[<expr pos:start="407:55" pos:end="407:55"><literal type="number" pos:start="407:55" pos:end="407:55">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="409:21" pos:end="409:57"><expr pos:start="409:21" pos:end="409:56"><name pos:start="409:21" pos:end="409:34"><name pos:start="409:21" pos:end="409:21">s</name><operator pos:start="409:22" pos:end="409:23">-&gt;</operator><name pos:start="409:24" pos:end="409:25">mv</name><index pos:start="409:26" pos:end="409:28">[<expr pos:start="409:27" pos:end="409:27"><literal type="number" pos:start="409:27" pos:end="409:27">0</literal></expr>]</index><index pos:start="409:29" pos:end="409:31">[<expr pos:start="409:30" pos:end="409:30"><literal type="number" pos:start="409:30" pos:end="409:30">0</literal></expr>]</index><index pos:start="409:32" pos:end="409:34">[<expr pos:start="409:33" pos:end="409:33"><literal type="number" pos:start="409:33" pos:end="409:33">1</literal></expr>]</index></name> <operator pos:start="409:36" pos:end="409:36">=</operator> <name pos:start="409:38" pos:end="409:56"><name pos:start="409:38" pos:end="409:38">s</name><operator pos:start="409:39" pos:end="409:40">-&gt;</operator><name pos:start="409:41" pos:end="409:47">last_mv</name><index pos:start="409:48" pos:end="409:50">[<expr pos:start="409:49" pos:end="409:49"><literal type="number" pos:start="409:49" pos:end="409:49">0</literal></expr>]</index><index pos:start="409:51" pos:end="409:53">[<expr pos:start="409:52" pos:end="409:52"><literal type="number" pos:start="409:52" pos:end="409:52">0</literal></expr>]</index><index pos:start="409:54" pos:end="409:56">[<expr pos:start="409:55" pos:end="409:55"><literal type="number" pos:start="409:55" pos:end="409:55">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="411:21" pos:end="411:57"><expr pos:start="411:21" pos:end="411:56"><name pos:start="411:21" pos:end="411:34"><name pos:start="411:21" pos:end="411:21">s</name><operator pos:start="411:22" pos:end="411:23">-&gt;</operator><name pos:start="411:24" pos:end="411:25">mv</name><index pos:start="411:26" pos:end="411:28">[<expr pos:start="411:27" pos:end="411:27"><literal type="number" pos:start="411:27" pos:end="411:27">1</literal></expr>]</index><index pos:start="411:29" pos:end="411:31">[<expr pos:start="411:30" pos:end="411:30"><literal type="number" pos:start="411:30" pos:end="411:30">0</literal></expr>]</index><index pos:start="411:32" pos:end="411:34">[<expr pos:start="411:33" pos:end="411:33"><literal type="number" pos:start="411:33" pos:end="411:33">0</literal></expr>]</index></name> <operator pos:start="411:36" pos:end="411:36">=</operator> <name pos:start="411:38" pos:end="411:56"><name pos:start="411:38" pos:end="411:38">s</name><operator pos:start="411:39" pos:end="411:40">-&gt;</operator><name pos:start="411:41" pos:end="411:47">last_mv</name><index pos:start="411:48" pos:end="411:50">[<expr pos:start="411:49" pos:end="411:49"><literal type="number" pos:start="411:49" pos:end="411:49">1</literal></expr>]</index><index pos:start="411:51" pos:end="411:53">[<expr pos:start="411:52" pos:end="411:52"><literal type="number" pos:start="411:52" pos:end="411:52">0</literal></expr>]</index><index pos:start="411:54" pos:end="411:56">[<expr pos:start="411:55" pos:end="411:55"><literal type="number" pos:start="411:55" pos:end="411:55">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="413:21" pos:end="413:57"><expr pos:start="413:21" pos:end="413:56"><name pos:start="413:21" pos:end="413:34"><name pos:start="413:21" pos:end="413:21">s</name><operator pos:start="413:22" pos:end="413:23">-&gt;</operator><name pos:start="413:24" pos:end="413:25">mv</name><index pos:start="413:26" pos:end="413:28">[<expr pos:start="413:27" pos:end="413:27"><literal type="number" pos:start="413:27" pos:end="413:27">1</literal></expr>]</index><index pos:start="413:29" pos:end="413:31">[<expr pos:start="413:30" pos:end="413:30"><literal type="number" pos:start="413:30" pos:end="413:30">0</literal></expr>]</index><index pos:start="413:32" pos:end="413:34">[<expr pos:start="413:33" pos:end="413:33"><literal type="number" pos:start="413:33" pos:end="413:33">1</literal></expr>]</index></name> <operator pos:start="413:36" pos:end="413:36">=</operator> <name pos:start="413:38" pos:end="413:56"><name pos:start="413:38" pos:end="413:38">s</name><operator pos:start="413:39" pos:end="413:40">-&gt;</operator><name pos:start="413:41" pos:end="413:47">last_mv</name><index pos:start="413:48" pos:end="413:50">[<expr pos:start="413:49" pos:end="413:49"><literal type="number" pos:start="413:49" pos:end="413:49">1</literal></expr>]</index><index pos:start="413:51" pos:end="413:53">[<expr pos:start="413:52" pos:end="413:52"><literal type="number" pos:start="413:52" pos:end="413:52">0</literal></expr>]</index><index pos:start="413:54" pos:end="413:56">[<expr pos:start="413:55" pos:end="413:55"><literal type="number" pos:start="413:55" pos:end="413:55">1</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<label pos:start="423:1" pos:end="423:4"><name pos:start="423:1" pos:end="423:3">eos</name>:</label> <comment type="line" pos:start="423:6" pos:end="423:20">// end of slice</comment>

    <expr_stmt pos:start="425:5" pos:end="425:41"><expr pos:start="425:5" pos:end="425:40"><operator pos:start="425:5" pos:end="425:5">*</operator><name pos:start="425:6" pos:end="425:8">buf</name> <operator pos:start="425:10" pos:end="425:11">+=</operator> <operator pos:start="425:13" pos:end="425:13">(</operator><call pos:start="425:14" pos:end="425:35"><name pos:start="425:14" pos:end="425:27">get_bits_count</name><argument_list pos:start="425:28" pos:end="425:35">(<argument pos:start="425:29" pos:end="425:34"><expr pos:start="425:29" pos:end="425:34"><operator pos:start="425:29" pos:end="425:29">&amp;</operator><name pos:start="425:30" pos:end="425:34"><name pos:start="425:30" pos:end="425:30">s</name><operator pos:start="425:31" pos:end="425:32">-&gt;</operator><name pos:start="425:33" pos:end="425:34">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="425:36" pos:end="425:36">-</operator><literal type="number" pos:start="425:37" pos:end="425:37">1</literal><operator pos:start="425:38" pos:end="425:38">)</operator><operator pos:start="425:39" pos:end="425:39">/</operator><literal type="number" pos:start="425:40" pos:end="425:40">8</literal></expr>;</expr_stmt>

<comment type="line" pos:start="427:1" pos:end="427:78">//printf("y %d %d %d %d\n", s-&gt;resync_mb_x, s-&gt;resync_mb_y, s-&gt;mb_x, s-&gt;mb_y);</comment>

    <return pos:start="429:5" pos:end="429:13">return <expr pos:start="429:12" pos:end="429:12"><literal type="number" pos:start="429:12" pos:end="429:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
