<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13819.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">pcnet_transmit</name><parameter_list pos:start="1:27" pos:end="1:41">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:37">PCNetState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="163:1">{<block_content pos:start="5:5" pos:end="161:19">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:22">target_phys_addr_t</name></type> <name pos:start="5:24" pos:end="5:32">xmit_cxda</name> <init pos:start="5:34" pos:end="5:36">= <expr pos:start="5:36" pos:end="5:36"><literal type="number" pos:start="5:36" pos:end="5:36">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">count</name> <init pos:start="7:15" pos:end="7:30">= <expr pos:start="7:17" pos:end="7:30"><call pos:start="7:17" pos:end="7:28"><name pos:start="7:17" pos:end="7:25">CSR_XMTRL</name><argument_list pos:start="7:26" pos:end="7:28">(<argument pos:start="7:27" pos:end="7:27"><expr pos:start="7:27" pos:end="7:27"><name pos:start="7:27" pos:end="7:27">s</name></expr></argument>)</argument_list></call><operator pos:start="7:29" pos:end="7:29">-</operator><literal type="number" pos:start="7:30" pos:end="7:30">1</literal></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:21"><expr pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:15">xmit_pos</name></name> <operator pos:start="9:17" pos:end="9:17">=</operator> <operator pos:start="9:19" pos:end="9:19">-</operator><literal type="number" pos:start="9:20" pos:end="9:20">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:21">(<expr pos:start="13:9" pos:end="13:20"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:20"><name pos:start="13:10" pos:end="13:17">CSR_TXON</name><argument_list pos:start="13:18" pos:end="13:20">(<argument pos:start="13:19" pos:end="13:19"><expr pos:start="13:19" pos:end="13:19"><name pos:start="13:19" pos:end="13:19">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:23" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:29"><expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:14">csr</name><index pos:start="15:15" pos:end="15:17">[<expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>]</index></name> <operator pos:start="15:19" pos:end="15:20">&amp;=</operator> <operator pos:start="15:22" pos:end="15:22">~</operator><literal type="number" pos:start="15:23" pos:end="15:28">0x0008</literal></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:14">tx_busy</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">1</literal></expr>;</expr_stmt>



    <label pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:11">txagain</name>:</label>

    <if_stmt pos:start="29:5" pos:end="157:5"><if pos:start="29:5" pos:end="127:5">if <condition pos:start="29:8" pos:end="29:27">(<expr pos:start="29:9" pos:end="29:26"><call pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:23">pcnet_tdte_poll</name><argument_list pos:start="29:24" pos:end="29:26">(<argument pos:start="29:25" pos:end="29:25"><expr pos:start="29:25" pos:end="29:25"><name pos:start="29:25" pos:end="29:25">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:29" pos:end="127:5">{<block_content pos:start="31:9" pos:end="123:25">

        <decl_stmt pos:start="31:9" pos:end="31:29"><decl pos:start="31:9" pos:end="31:28"><type pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:14">struct</name> <name pos:start="31:16" pos:end="31:24">pcnet_TMD</name></name></type> <name pos:start="31:26" pos:end="31:28">tmd</name></decl>;</decl_stmt>



        <expr_stmt pos:start="35:9" pos:end="40:0"><expr pos:start="35:9" pos:end="35:46"><call pos:start="35:9" pos:end="35:46"><name pos:start="35:9" pos:end="35:15">TMDLOAD</name><argument_list pos:start="35:16" pos:end="35:46">(<argument pos:start="35:17" pos:end="35:20"><expr pos:start="35:17" pos:end="35:20"><operator pos:start="35:17" pos:end="35:17">&amp;</operator><name pos:start="35:18" pos:end="35:20">tmd</name></expr></argument>, <argument pos:start="35:23" pos:end="35:45"><expr pos:start="35:23" pos:end="35:45"><call pos:start="35:23" pos:end="35:45"><name pos:start="35:23" pos:end="35:30">PHYSADDR</name><argument_list pos:start="35:31" pos:end="35:45">(<argument pos:start="35:32" pos:end="35:32"><expr pos:start="35:32" pos:end="35:32"><name pos:start="35:32" pos:end="35:32">s</name></expr></argument>,<argument pos:start="35:34" pos:end="35:44"><expr pos:start="35:34" pos:end="35:44"><call pos:start="35:34" pos:end="35:44"><name pos:start="35:34" pos:end="35:41">CSR_CXDA</name><argument_list pos:start="35:42" pos:end="35:44">(<argument pos:start="35:43" pos:end="35:43"><expr pos:start="35:43" pos:end="35:43"><name pos:start="35:43" pos:end="35:43">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="39:1" pos:end="39:22">#<cpp:directive pos:start="39:2" pos:end="39:6">ifdef</cpp:directive> <name pos:start="39:8" pos:end="39:22">PCNET_DEBUG_TMD</name></cpp:ifdef>

        <expr_stmt pos:start="41:9" pos:end="41:62"><expr pos:start="41:9" pos:end="41:61"><call pos:start="41:9" pos:end="41:61"><name pos:start="41:9" pos:end="41:14">printf</name><argument_list pos:start="41:15" pos:end="41:61">(<argument pos:start="41:16" pos:end="41:35"><expr pos:start="41:16" pos:end="41:35"><literal type="string" pos:start="41:16" pos:end="41:35">"  TMDLOAD 0x%08x\n"</literal></expr></argument>, <argument pos:start="41:38" pos:end="41:60"><expr pos:start="41:38" pos:end="41:60"><call pos:start="41:38" pos:end="41:60"><name pos:start="41:38" pos:end="41:45">PHYSADDR</name><argument_list pos:start="41:46" pos:end="41:60">(<argument pos:start="41:47" pos:end="41:47"><expr pos:start="41:47" pos:end="41:47"><name pos:start="41:47" pos:end="41:47">s</name></expr></argument>,<argument pos:start="41:49" pos:end="41:59"><expr pos:start="41:49" pos:end="41:59"><call pos:start="41:49" pos:end="41:59"><name pos:start="41:49" pos:end="41:56">CSR_CXDA</name><argument_list pos:start="41:57" pos:end="41:59">(<argument pos:start="41:58" pos:end="41:58"><expr pos:start="41:58" pos:end="41:58"><name pos:start="41:58" pos:end="41:58">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="46:0"><expr pos:start="43:9" pos:end="43:23"><call pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:17">PRINT_TMD</name><argument_list pos:start="43:18" pos:end="43:23">(<argument pos:start="43:19" pos:end="43:22"><expr pos:start="43:19" pos:end="43:22"><operator pos:start="43:19" pos:end="43:19">&amp;</operator><name pos:start="43:20" pos:end="43:22">tmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:45">(<expr pos:start="47:13" pos:end="47:44"><call pos:start="47:13" pos:end="47:44"><name pos:start="47:13" pos:end="47:21">GET_FIELD</name><argument_list pos:start="47:22" pos:end="47:44">(<argument pos:start="47:23" pos:end="47:32"><expr pos:start="47:23" pos:end="47:32"><name pos:start="47:23" pos:end="47:32"><name pos:start="47:23" pos:end="47:25">tmd</name><operator pos:start="47:26" pos:end="47:26">.</operator><name pos:start="47:27" pos:end="47:32">status</name></name></expr></argument>, <argument pos:start="47:35" pos:end="47:38"><expr pos:start="47:35" pos:end="47:38"><name pos:start="47:35" pos:end="47:38">TMDS</name></expr></argument>, <argument pos:start="47:41" pos:end="47:43"><expr pos:start="47:41" pos:end="47:43"><name pos:start="47:41" pos:end="47:43">STP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:47" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:48">

            <expr_stmt pos:start="49:13" pos:end="49:28"><expr pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:23"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:23">xmit_pos</name></name> <operator pos:start="49:25" pos:end="49:25">=</operator> <literal type="number" pos:start="49:27" pos:end="49:27">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:48"><expr pos:start="51:13" pos:end="51:47"><name pos:start="51:13" pos:end="51:21">xmit_cxda</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <call pos:start="51:25" pos:end="51:47"><name pos:start="51:25" pos:end="51:32">PHYSADDR</name><argument_list pos:start="51:33" pos:end="51:47">(<argument pos:start="51:34" pos:end="51:34"><expr pos:start="51:34" pos:end="51:34"><name pos:start="51:34" pos:end="51:34">s</name></expr></argument>,<argument pos:start="51:36" pos:end="51:46"><expr pos:start="51:36" pos:end="51:46"><call pos:start="51:36" pos:end="51:46"><name pos:start="51:36" pos:end="51:43">CSR_CXDA</name><argument_list pos:start="51:44" pos:end="51:46">(<argument pos:start="51:45" pos:end="51:45"><expr pos:start="51:45" pos:end="51:45"><name pos:start="51:45" pos:end="51:45">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="55:9" pos:end="99:9"><if pos:start="55:9" pos:end="65:9">if <condition pos:start="55:12" pos:end="55:46">(<expr pos:start="55:13" pos:end="55:45"><operator pos:start="55:13" pos:end="55:13">!</operator><call pos:start="55:14" pos:end="55:45"><name pos:start="55:14" pos:end="55:22">GET_FIELD</name><argument_list pos:start="55:23" pos:end="55:45">(<argument pos:start="55:24" pos:end="55:33"><expr pos:start="55:24" pos:end="55:33"><name pos:start="55:24" pos:end="55:33"><name pos:start="55:24" pos:end="55:26">tmd</name><operator pos:start="55:27" pos:end="55:27">.</operator><name pos:start="55:28" pos:end="55:33">status</name></name></expr></argument>, <argument pos:start="55:36" pos:end="55:39"><expr pos:start="55:36" pos:end="55:39"><name pos:start="55:36" pos:end="55:39">TMDS</name></expr></argument>, <argument pos:start="55:42" pos:end="55:44"><expr pos:start="55:42" pos:end="55:44"><name pos:start="55:42" pos:end="55:44">ENP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:48" pos:end="65:9">{<block_content pos:start="57:13" pos:end="63:32">

            <decl_stmt pos:start="57:13" pos:end="57:64"><decl pos:start="57:13" pos:end="57:63"><type pos:start="57:13" pos:end="57:15"><name pos:start="57:13" pos:end="57:15">int</name></type> <name pos:start="57:17" pos:end="57:20">bcnt</name> <init pos:start="57:22" pos:end="57:63">= <expr pos:start="57:24" pos:end="57:63"><literal type="number" pos:start="57:24" pos:end="57:29">4096</literal> <operator pos:start="57:29" pos:end="57:29">-</operator> <call pos:start="57:31" pos:end="57:63"><name pos:start="57:31" pos:end="57:39">GET_FIELD</name><argument_list pos:start="57:40" pos:end="57:63">(<argument pos:start="57:41" pos:end="57:50"><expr pos:start="57:41" pos:end="57:50"><name pos:start="57:41" pos:end="57:50"><name pos:start="57:41" pos:end="57:43">tmd</name><operator pos:start="57:44" pos:end="57:44">.</operator><name pos:start="57:45" pos:end="57:50">length</name></name></expr></argument>, <argument pos:start="57:53" pos:end="57:56"><expr pos:start="57:53" pos:end="57:56"><name pos:start="57:53" pos:end="57:56">TMDL</name></expr></argument>, <argument pos:start="57:59" pos:end="57:62"><expr pos:start="57:59" pos:end="57:62"><name pos:start="57:59" pos:end="57:62">BCNT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="59:13" pos:end="61:73"><expr pos:start="59:13" pos:end="61:72"><call pos:start="59:13" pos:end="61:72"><name pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:28">phys_mem_read</name></name><argument_list pos:start="59:29" pos:end="61:72">(<argument pos:start="59:30" pos:end="59:42"><expr pos:start="59:30" pos:end="59:42"><name pos:start="59:30" pos:end="59:42"><name pos:start="59:30" pos:end="59:30">s</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:42">dma_opaque</name></name></expr></argument>, <argument pos:start="59:45" pos:end="59:66"><expr pos:start="59:45" pos:end="59:66"><call pos:start="59:45" pos:end="59:66"><name pos:start="59:45" pos:end="59:52">PHYSADDR</name><argument_list pos:start="59:53" pos:end="59:66">(<argument pos:start="59:54" pos:end="59:54"><expr pos:start="59:54" pos:end="59:54"><name pos:start="59:54" pos:end="59:54">s</name></expr></argument>, <argument pos:start="59:57" pos:end="59:65"><expr pos:start="59:57" pos:end="59:65"><name pos:start="59:57" pos:end="59:65"><name pos:start="59:57" pos:end="59:59">tmd</name><operator pos:start="59:60" pos:end="59:60">.</operator><name pos:start="59:61" pos:end="59:65">tbadr</name></name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="61:30" pos:end="61:52"><expr pos:start="61:30" pos:end="61:52"><name pos:start="61:30" pos:end="61:38"><name pos:start="61:30" pos:end="61:30">s</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:38">buffer</name></name> <operator pos:start="61:40" pos:end="61:40">+</operator> <name pos:start="61:42" pos:end="61:52"><name pos:start="61:42" pos:end="61:42">s</name><operator pos:start="61:43" pos:end="61:44">-&gt;</operator><name pos:start="61:45" pos:end="61:52">xmit_pos</name></name></expr></argument>, <argument pos:start="61:55" pos:end="61:58"><expr pos:start="61:55" pos:end="61:58"><name pos:start="61:55" pos:end="61:58">bcnt</name></expr></argument>, <argument pos:start="61:61" pos:end="61:71"><expr pos:start="61:61" pos:end="61:71"><call pos:start="61:61" pos:end="61:71"><name pos:start="61:61" pos:end="61:68">CSR_BSWP</name><argument_list pos:start="61:69" pos:end="61:71">(<argument pos:start="61:70" pos:end="61:70"><expr pos:start="61:70" pos:end="61:70"><name pos:start="61:70" pos:end="61:70">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:32"><expr pos:start="63:13" pos:end="63:31"><name pos:start="63:13" pos:end="63:23"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:23">xmit_pos</name></name> <operator pos:start="63:25" pos:end="63:26">+=</operator> <name pos:start="63:28" pos:end="63:31">bcnt</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="65:11" pos:end="99:9">else if <condition pos:start="65:19" pos:end="65:36">(<expr pos:start="65:20" pos:end="65:35"><name pos:start="65:20" pos:end="65:30"><name pos:start="65:20" pos:end="65:20">s</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:30">xmit_pos</name></name> <operator pos:start="65:32" pos:end="65:33">&gt;=</operator> <literal type="number" pos:start="65:35" pos:end="65:35">0</literal></expr>)</condition> <block pos:start="65:38" pos:end="99:9">{<block_content pos:start="67:13" pos:end="97:29">

            <decl_stmt pos:start="67:13" pos:end="67:64"><decl pos:start="67:13" pos:end="67:63"><type pos:start="67:13" pos:end="67:15"><name pos:start="67:13" pos:end="67:15">int</name></type> <name pos:start="67:17" pos:end="67:20">bcnt</name> <init pos:start="67:22" pos:end="67:63">= <expr pos:start="67:24" pos:end="67:63"><literal type="number" pos:start="67:24" pos:end="67:29">4096</literal> <operator pos:start="67:29" pos:end="67:29">-</operator> <call pos:start="67:31" pos:end="67:63"><name pos:start="67:31" pos:end="67:39">GET_FIELD</name><argument_list pos:start="67:40" pos:end="67:63">(<argument pos:start="67:41" pos:end="67:50"><expr pos:start="67:41" pos:end="67:50"><name pos:start="67:41" pos:end="67:50"><name pos:start="67:41" pos:end="67:43">tmd</name><operator pos:start="67:44" pos:end="67:44">.</operator><name pos:start="67:45" pos:end="67:50">length</name></name></expr></argument>, <argument pos:start="67:53" pos:end="67:56"><expr pos:start="67:53" pos:end="67:56"><name pos:start="67:53" pos:end="67:56">TMDL</name></expr></argument>, <argument pos:start="67:59" pos:end="67:62"><expr pos:start="67:59" pos:end="67:62"><name pos:start="67:59" pos:end="67:62">BCNT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="69:13" pos:end="71:73"><expr pos:start="69:13" pos:end="71:72"><call pos:start="69:13" pos:end="71:72"><name pos:start="69:13" pos:end="69:28"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:28">phys_mem_read</name></name><argument_list pos:start="69:29" pos:end="71:72">(<argument pos:start="69:30" pos:end="69:42"><expr pos:start="69:30" pos:end="69:42"><name pos:start="69:30" pos:end="69:42"><name pos:start="69:30" pos:end="69:30">s</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:42">dma_opaque</name></name></expr></argument>, <argument pos:start="69:45" pos:end="69:66"><expr pos:start="69:45" pos:end="69:66"><call pos:start="69:45" pos:end="69:66"><name pos:start="69:45" pos:end="69:52">PHYSADDR</name><argument_list pos:start="69:53" pos:end="69:66">(<argument pos:start="69:54" pos:end="69:54"><expr pos:start="69:54" pos:end="69:54"><name pos:start="69:54" pos:end="69:54">s</name></expr></argument>, <argument pos:start="69:57" pos:end="69:65"><expr pos:start="69:57" pos:end="69:65"><name pos:start="69:57" pos:end="69:65"><name pos:start="69:57" pos:end="69:59">tmd</name><operator pos:start="69:60" pos:end="69:60">.</operator><name pos:start="69:61" pos:end="69:65">tbadr</name></name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="71:30" pos:end="71:52"><expr pos:start="71:30" pos:end="71:52"><name pos:start="71:30" pos:end="71:38"><name pos:start="71:30" pos:end="71:30">s</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:38">buffer</name></name> <operator pos:start="71:40" pos:end="71:40">+</operator> <name pos:start="71:42" pos:end="71:52"><name pos:start="71:42" pos:end="71:42">s</name><operator pos:start="71:43" pos:end="71:44">-&gt;</operator><name pos:start="71:45" pos:end="71:52">xmit_pos</name></name></expr></argument>, <argument pos:start="71:55" pos:end="71:58"><expr pos:start="71:55" pos:end="71:58"><name pos:start="71:55" pos:end="71:58">bcnt</name></expr></argument>, <argument pos:start="71:61" pos:end="71:71"><expr pos:start="71:61" pos:end="71:71"><call pos:start="71:61" pos:end="71:71"><name pos:start="71:61" pos:end="71:68">CSR_BSWP</name><argument_list pos:start="71:69" pos:end="71:71">(<argument pos:start="71:70" pos:end="71:70"><expr pos:start="71:70" pos:end="71:70"><name pos:start="71:70" pos:end="71:70">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="76:0"><expr pos:start="73:13" pos:end="73:31"><name pos:start="73:13" pos:end="73:23"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:23">xmit_pos</name></name> <operator pos:start="73:25" pos:end="73:26">+=</operator> <name pos:start="73:28" pos:end="73:31">bcnt</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="75:1" pos:end="75:18">#<cpp:directive pos:start="75:2" pos:end="75:6">ifdef</cpp:directive> <name pos:start="75:8" pos:end="75:18">PCNET_DEBUG</name></cpp:ifdef>

            <expr_stmt pos:start="77:13" pos:end="80:0"><expr pos:start="77:13" pos:end="77:59"><call pos:start="77:13" pos:end="77:59"><name pos:start="77:13" pos:end="77:18">printf</name><argument_list pos:start="77:19" pos:end="77:59">(<argument pos:start="77:20" pos:end="77:45"><expr pos:start="77:20" pos:end="77:45"><literal type="string" pos:start="77:20" pos:end="77:45">"pcnet_transmit size=%d\n"</literal></expr></argument>, <argument pos:start="77:48" pos:end="77:58"><expr pos:start="77:48" pos:end="77:58"><name pos:start="77:48" pos:end="77:58"><name pos:start="77:48" pos:end="77:48">s</name><operator pos:start="77:49" pos:end="77:50">-&gt;</operator><name pos:start="77:51" pos:end="77:58">xmit_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="79:1" pos:end="79:6">#<cpp:directive pos:start="79:2" pos:end="79:6">endif</cpp:directive></cpp:endif>

            <if_stmt pos:start="81:13" pos:end="89:68"><if pos:start="81:13" pos:end="83:57">if <condition pos:start="81:16" pos:end="81:28">(<expr pos:start="81:17" pos:end="81:27"><call pos:start="81:17" pos:end="81:27"><name pos:start="81:17" pos:end="81:24">CSR_LOOP</name><argument_list pos:start="81:25" pos:end="81:27">(<argument pos:start="81:26" pos:end="81:26"><expr pos:start="81:26" pos:end="81:26"><name pos:start="81:26" pos:end="81:26">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:57"><block_content pos:start="83:17" pos:end="83:57">

                <expr_stmt pos:start="83:17" pos:end="83:57"><expr pos:start="83:17" pos:end="83:56"><call pos:start="83:17" pos:end="83:56"><name pos:start="83:17" pos:end="83:29">pcnet_receive</name><argument_list pos:start="83:30" pos:end="83:56">(<argument pos:start="83:31" pos:end="83:31"><expr pos:start="83:31" pos:end="83:31"><name pos:start="83:31" pos:end="83:31">s</name></expr></argument>, <argument pos:start="83:34" pos:end="83:42"><expr pos:start="83:34" pos:end="83:42"><name pos:start="83:34" pos:end="83:42"><name pos:start="83:34" pos:end="83:34">s</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:42">buffer</name></name></expr></argument>, <argument pos:start="83:45" pos:end="83:55"><expr pos:start="83:45" pos:end="83:55"><name pos:start="83:45" pos:end="83:55"><name pos:start="83:45" pos:end="83:45">s</name><operator pos:start="83:46" pos:end="83:47">-&gt;</operator><name pos:start="83:48" pos:end="83:55">xmit_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="85:13" pos:end="89:68">else

                if <condition pos:start="87:20" pos:end="87:26">(<expr pos:start="87:21" pos:end="87:25"><name pos:start="87:21" pos:end="87:25"><name pos:start="87:21" pos:end="87:21">s</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:25">vc</name></name></expr>)</condition><block type="pseudo" pos:start="89:21" pos:end="89:68"><block_content pos:start="89:21" pos:end="89:68">

                    <expr_stmt pos:start="89:21" pos:end="89:68"><expr pos:start="89:21" pos:end="89:67"><call pos:start="89:21" pos:end="89:67"><name pos:start="89:21" pos:end="89:36">qemu_send_packet</name><argument_list pos:start="89:37" pos:end="89:67">(<argument pos:start="89:38" pos:end="89:42"><expr pos:start="89:38" pos:end="89:42"><name pos:start="89:38" pos:end="89:42"><name pos:start="89:38" pos:end="89:38">s</name><operator pos:start="89:39" pos:end="89:40">-&gt;</operator><name pos:start="89:41" pos:end="89:42">vc</name></name></expr></argument>, <argument pos:start="89:45" pos:end="89:53"><expr pos:start="89:45" pos:end="89:53"><name pos:start="89:45" pos:end="89:53"><name pos:start="89:45" pos:end="89:45">s</name><operator pos:start="89:46" pos:end="89:47">-&gt;</operator><name pos:start="89:48" pos:end="89:53">buffer</name></name></expr></argument>, <argument pos:start="89:56" pos:end="89:66"><expr pos:start="89:56" pos:end="89:66"><name pos:start="89:56" pos:end="89:66"><name pos:start="89:56" pos:end="89:56">s</name><operator pos:start="89:57" pos:end="89:58">-&gt;</operator><name pos:start="89:59" pos:end="89:66">xmit_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="93:13" pos:end="93:33"><expr pos:start="93:13" pos:end="93:32"><name pos:start="93:13" pos:end="93:21"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:18">csr</name><index pos:start="93:19" pos:end="93:21">[<expr pos:start="93:20" pos:end="93:20"><literal type="number" pos:start="93:20" pos:end="93:20">0</literal></expr>]</index></name> <operator pos:start="93:23" pos:end="93:24">&amp;=</operator> <operator pos:start="93:26" pos:end="93:26">~</operator><literal type="number" pos:start="93:27" pos:end="93:32">0x0008</literal></expr>;</expr_stmt>   <comment type="block" pos:start="93:37" pos:end="93:52">/* clear TDMD */</comment>

            <expr_stmt pos:start="95:13" pos:end="95:32"><expr pos:start="95:13" pos:end="95:31"><name pos:start="95:13" pos:end="95:21"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:18">csr</name><index pos:start="95:19" pos:end="95:21">[<expr pos:start="95:20" pos:end="95:20"><literal type="number" pos:start="95:20" pos:end="95:20">4</literal></expr>]</index></name> <operator pos:start="95:23" pos:end="95:24">|=</operator> <literal type="number" pos:start="95:26" pos:end="95:31">0x0004</literal></expr>;</expr_stmt>    <comment type="block" pos:start="95:37" pos:end="95:52">/* set TXSTRT */</comment>

            <expr_stmt pos:start="97:13" pos:end="97:29"><expr pos:start="97:13" pos:end="97:28"><name pos:start="97:13" pos:end="97:23"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:23">xmit_pos</name></name> <operator pos:start="97:25" pos:end="97:25">=</operator> <operator pos:start="97:27" pos:end="97:27">-</operator><literal type="number" pos:start="97:28" pos:end="97:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:45"><expr pos:start="103:9" pos:end="103:44"><call pos:start="103:9" pos:end="103:44"><name pos:start="103:9" pos:end="103:17">SET_FIELD</name><argument_list pos:start="103:18" pos:end="103:44">(<argument pos:start="103:19" pos:end="103:29"><expr pos:start="103:19" pos:end="103:29"><operator pos:start="103:19" pos:end="103:19">&amp;</operator><name pos:start="103:20" pos:end="103:29"><name pos:start="103:20" pos:end="103:22">tmd</name><operator pos:start="103:23" pos:end="103:23">.</operator><name pos:start="103:24" pos:end="103:29">status</name></name></expr></argument>, <argument pos:start="103:32" pos:end="103:35"><expr pos:start="103:32" pos:end="103:35"><name pos:start="103:32" pos:end="103:35">TMDS</name></expr></argument>, <argument pos:start="103:38" pos:end="103:40"><expr pos:start="103:38" pos:end="103:40"><name pos:start="103:38" pos:end="103:40">OWN</name></expr></argument>, <argument pos:start="103:43" pos:end="103:43"><expr pos:start="103:43" pos:end="103:43"><literal type="number" pos:start="103:43" pos:end="103:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:48"><expr pos:start="105:9" pos:end="105:47"><call pos:start="105:9" pos:end="105:47"><name pos:start="105:9" pos:end="105:16">TMDSTORE</name><argument_list pos:start="105:17" pos:end="105:47">(<argument pos:start="105:18" pos:end="105:21"><expr pos:start="105:18" pos:end="105:21"><operator pos:start="105:18" pos:end="105:18">&amp;</operator><name pos:start="105:19" pos:end="105:21">tmd</name></expr></argument>, <argument pos:start="105:24" pos:end="105:46"><expr pos:start="105:24" pos:end="105:46"><call pos:start="105:24" pos:end="105:46"><name pos:start="105:24" pos:end="105:31">PHYSADDR</name><argument_list pos:start="105:32" pos:end="105:46">(<argument pos:start="105:33" pos:end="105:33"><expr pos:start="105:33" pos:end="105:33"><name pos:start="105:33" pos:end="105:33">s</name></expr></argument>,<argument pos:start="105:35" pos:end="105:45"><expr pos:start="105:35" pos:end="105:45"><call pos:start="105:35" pos:end="105:45"><name pos:start="105:35" pos:end="105:42">CSR_CXDA</name><argument_list pos:start="105:43" pos:end="105:45">(<argument pos:start="105:44" pos:end="105:44"><expr pos:start="105:44" pos:end="105:44"><name pos:start="105:44" pos:end="105:44">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="109:32"><if pos:start="107:9" pos:end="109:32">if <condition pos:start="107:12" pos:end="107:86">(<expr pos:start="107:13" pos:end="107:85"><operator pos:start="107:13" pos:end="107:13">!</operator><call pos:start="107:14" pos:end="107:27"><name pos:start="107:14" pos:end="107:24">CSR_TOKINTD</name><argument_list pos:start="107:25" pos:end="107:27">(<argument pos:start="107:26" pos:end="107:26"><expr pos:start="107:26" pos:end="107:26"><name pos:start="107:26" pos:end="107:26">s</name></expr></argument>)</argument_list></call> <operator pos:start="107:29" pos:end="107:30">||</operator> <operator pos:start="107:32" pos:end="107:32">(</operator><call pos:start="107:33" pos:end="107:46"><name pos:start="107:33" pos:end="107:43">CSR_LTINTEN</name><argument_list pos:start="107:44" pos:end="107:46">(<argument pos:start="107:45" pos:end="107:45"><expr pos:start="107:45" pos:end="107:45"><name pos:start="107:45" pos:end="107:45">s</name></expr></argument>)</argument_list></call> <operator pos:start="107:48" pos:end="107:49">&amp;&amp;</operator> <call pos:start="107:51" pos:end="107:84"><name pos:start="107:51" pos:end="107:59">GET_FIELD</name><argument_list pos:start="107:60" pos:end="107:84">(<argument pos:start="107:61" pos:end="107:70"><expr pos:start="107:61" pos:end="107:70"><name pos:start="107:61" pos:end="107:70"><name pos:start="107:61" pos:end="107:63">tmd</name><operator pos:start="107:64" pos:end="107:64">.</operator><name pos:start="107:65" pos:end="107:70">status</name></name></expr></argument>, <argument pos:start="107:73" pos:end="107:76"><expr pos:start="107:73" pos:end="107:76"><name pos:start="107:73" pos:end="107:76">TMDS</name></expr></argument>, <argument pos:start="107:79" pos:end="107:83"><expr pos:start="107:79" pos:end="107:83"><name pos:start="107:79" pos:end="107:83">LTINT</name></expr></argument>)</argument_list></call><operator pos:start="107:85" pos:end="107:85">)</operator></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:32"><block_content pos:start="109:13" pos:end="109:32">

            <expr_stmt pos:start="109:13" pos:end="109:32"><expr pos:start="109:13" pos:end="109:31"><name pos:start="109:13" pos:end="109:21"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:18">csr</name><index pos:start="109:19" pos:end="109:21">[<expr pos:start="109:20" pos:end="109:20"><literal type="number" pos:start="109:20" pos:end="109:20">0</literal></expr>]</index></name> <operator pos:start="109:23" pos:end="109:24">|=</operator> <literal type="number" pos:start="109:26" pos:end="109:31">0x0200</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>    <comment type="block" pos:start="109:37" pos:end="109:50">/* set TINT */</comment>



        <if_stmt pos:start="113:9" pos:end="119:27"><if pos:start="113:9" pos:end="115:40">if <condition pos:start="113:12" pos:end="113:28">(<expr pos:start="113:13" pos:end="113:27"><call pos:start="113:13" pos:end="113:24"><name pos:start="113:13" pos:end="113:21">CSR_XMTRC</name><argument_list pos:start="113:22" pos:end="113:24">(<argument pos:start="113:23" pos:end="113:23"><expr pos:start="113:23" pos:end="113:23"><name pos:start="113:23" pos:end="113:23">s</name></expr></argument>)</argument_list></call><operator pos:start="113:25" pos:end="113:26">&lt;=</operator><literal type="number" pos:start="113:27" pos:end="113:27">1</literal></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:40"><block_content pos:start="115:13" pos:end="115:40">

            <expr_stmt pos:start="115:13" pos:end="115:40"><expr pos:start="115:13" pos:end="115:39"><call pos:start="115:13" pos:end="115:24"><name pos:start="115:13" pos:end="115:21">CSR_XMTRC</name><argument_list pos:start="115:22" pos:end="115:24">(<argument pos:start="115:23" pos:end="115:23"><expr pos:start="115:23" pos:end="115:23"><name pos:start="115:23" pos:end="115:23">s</name></expr></argument>)</argument_list></call> <operator pos:start="115:26" pos:end="115:26">=</operator> <call pos:start="115:28" pos:end="115:39"><name pos:start="115:28" pos:end="115:36">CSR_XMTRL</name><argument_list pos:start="115:37" pos:end="115:39">(<argument pos:start="115:38" pos:end="115:38"><expr pos:start="115:38" pos:end="115:38"><name pos:start="115:38" pos:end="115:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="117:9" pos:end="119:27">else<block type="pseudo" pos:start="119:13" pos:end="119:27"><block_content pos:start="119:13" pos:end="119:27">

            <expr_stmt pos:start="119:13" pos:end="119:27"><expr pos:start="119:13" pos:end="119:26"><call pos:start="119:13" pos:end="119:24"><name pos:start="119:13" pos:end="119:21">CSR_XMTRC</name><argument_list pos:start="119:22" pos:end="119:24">(<argument pos:start="119:23" pos:end="119:23"><expr pos:start="119:23" pos:end="119:23"><name pos:start="119:23" pos:end="119:23">s</name></expr></argument>)</argument_list></call><operator pos:start="119:25" pos:end="119:26">--</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="121:9" pos:end="123:25"><if pos:start="121:9" pos:end="123:25">if <condition pos:start="121:12" pos:end="121:20">(<expr pos:start="121:13" pos:end="121:19"><name pos:start="121:13" pos:end="121:17">count</name><operator pos:start="121:18" pos:end="121:19">--</operator></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:25"><block_content pos:start="123:13" pos:end="123:25">

            <goto pos:start="123:13" pos:end="123:25">goto <name pos:start="123:18" pos:end="123:24">txagain</name>;</goto></block_content></block></if></if_stmt>



    </block_content>}</block></if> <if type="elseif" pos:start="127:7" pos:end="157:5">else

    if <condition pos:start="129:8" pos:end="129:25">(<expr pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:19"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:19">xmit_pos</name></name> <operator pos:start="129:21" pos:end="129:22">&gt;=</operator> <literal type="number" pos:start="129:24" pos:end="129:24">0</literal></expr>)</condition> <block pos:start="129:27" pos:end="157:5">{<block_content pos:start="131:9" pos:end="155:23">

        <decl_stmt pos:start="131:9" pos:end="131:29"><decl pos:start="131:9" pos:end="131:28"><type pos:start="131:9" pos:end="131:24"><name pos:start="131:9" pos:end="131:24"><name pos:start="131:9" pos:end="131:14">struct</name> <name pos:start="131:16" pos:end="131:24">pcnet_TMD</name></name></type> <name pos:start="131:26" pos:end="131:28">tmd</name></decl>;</decl_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:45"><expr pos:start="133:9" pos:end="133:44"><call pos:start="133:9" pos:end="133:44"><name pos:start="133:9" pos:end="133:15">TMDLOAD</name><argument_list pos:start="133:16" pos:end="133:44">(<argument pos:start="133:17" pos:end="133:20"><expr pos:start="133:17" pos:end="133:20"><operator pos:start="133:17" pos:end="133:17">&amp;</operator><name pos:start="133:18" pos:end="133:20">tmd</name></expr></argument>, <argument pos:start="133:23" pos:end="133:43"><expr pos:start="133:23" pos:end="133:43"><call pos:start="133:23" pos:end="133:43"><name pos:start="133:23" pos:end="133:30">PHYSADDR</name><argument_list pos:start="133:31" pos:end="133:43">(<argument pos:start="133:32" pos:end="133:32"><expr pos:start="133:32" pos:end="133:32"><name pos:start="133:32" pos:end="133:32">s</name></expr></argument>,<argument pos:start="133:34" pos:end="133:42"><expr pos:start="133:34" pos:end="133:42"><name pos:start="133:34" pos:end="133:42">xmit_cxda</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:44"><expr pos:start="135:9" pos:end="135:43"><call pos:start="135:9" pos:end="135:43"><name pos:start="135:9" pos:end="135:17">SET_FIELD</name><argument_list pos:start="135:18" pos:end="135:43">(<argument pos:start="135:19" pos:end="135:27"><expr pos:start="135:19" pos:end="135:27"><operator pos:start="135:19" pos:end="135:19">&amp;</operator><name pos:start="135:20" pos:end="135:27"><name pos:start="135:20" pos:end="135:22">tmd</name><operator pos:start="135:23" pos:end="135:23">.</operator><name pos:start="135:24" pos:end="135:27">misc</name></name></expr></argument>, <argument pos:start="135:30" pos:end="135:33"><expr pos:start="135:30" pos:end="135:33"><name pos:start="135:30" pos:end="135:33">TMDM</name></expr></argument>, <argument pos:start="135:36" pos:end="135:39"><expr pos:start="135:36" pos:end="135:39"><name pos:start="135:36" pos:end="135:39">BUFF</name></expr></argument>, <argument pos:start="135:42" pos:end="135:42"><expr pos:start="135:42" pos:end="135:42"><literal type="number" pos:start="135:42" pos:end="135:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:44"><expr pos:start="137:9" pos:end="137:43"><call pos:start="137:9" pos:end="137:43"><name pos:start="137:9" pos:end="137:17">SET_FIELD</name><argument_list pos:start="137:18" pos:end="137:43">(<argument pos:start="137:19" pos:end="137:27"><expr pos:start="137:19" pos:end="137:27"><operator pos:start="137:19" pos:end="137:19">&amp;</operator><name pos:start="137:20" pos:end="137:27"><name pos:start="137:20" pos:end="137:22">tmd</name><operator pos:start="137:23" pos:end="137:23">.</operator><name pos:start="137:24" pos:end="137:27">misc</name></name></expr></argument>, <argument pos:start="137:30" pos:end="137:33"><expr pos:start="137:30" pos:end="137:33"><name pos:start="137:30" pos:end="137:33">TMDM</name></expr></argument>, <argument pos:start="137:36" pos:end="137:39"><expr pos:start="137:36" pos:end="137:39"><name pos:start="137:36" pos:end="137:39">UFLO</name></expr></argument>, <argument pos:start="137:42" pos:end="137:42"><expr pos:start="137:42" pos:end="137:42"><literal type="number" pos:start="137:42" pos:end="137:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:45"><expr pos:start="139:9" pos:end="139:44"><call pos:start="139:9" pos:end="139:44"><name pos:start="139:9" pos:end="139:17">SET_FIELD</name><argument_list pos:start="139:18" pos:end="139:44">(<argument pos:start="139:19" pos:end="139:29"><expr pos:start="139:19" pos:end="139:29"><operator pos:start="139:19" pos:end="139:19">&amp;</operator><name pos:start="139:20" pos:end="139:29"><name pos:start="139:20" pos:end="139:22">tmd</name><operator pos:start="139:23" pos:end="139:23">.</operator><name pos:start="139:24" pos:end="139:29">status</name></name></expr></argument>, <argument pos:start="139:32" pos:end="139:35"><expr pos:start="139:32" pos:end="139:35"><name pos:start="139:32" pos:end="139:35">TMDS</name></expr></argument>, <argument pos:start="139:38" pos:end="139:40"><expr pos:start="139:38" pos:end="139:40"><name pos:start="139:38" pos:end="139:40">ERR</name></expr></argument>, <argument pos:start="139:43" pos:end="139:43"><expr pos:start="139:43" pos:end="139:43"><literal type="number" pos:start="139:43" pos:end="139:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:45"><expr pos:start="141:9" pos:end="141:44"><call pos:start="141:9" pos:end="141:44"><name pos:start="141:9" pos:end="141:17">SET_FIELD</name><argument_list pos:start="141:18" pos:end="141:44">(<argument pos:start="141:19" pos:end="141:29"><expr pos:start="141:19" pos:end="141:29"><operator pos:start="141:19" pos:end="141:19">&amp;</operator><name pos:start="141:20" pos:end="141:29"><name pos:start="141:20" pos:end="141:22">tmd</name><operator pos:start="141:23" pos:end="141:23">.</operator><name pos:start="141:24" pos:end="141:29">status</name></name></expr></argument>, <argument pos:start="141:32" pos:end="141:35"><expr pos:start="141:32" pos:end="141:35"><name pos:start="141:32" pos:end="141:35">TMDS</name></expr></argument>, <argument pos:start="141:38" pos:end="141:40"><expr pos:start="141:38" pos:end="141:40"><name pos:start="141:38" pos:end="141:40">OWN</name></expr></argument>, <argument pos:start="141:43" pos:end="141:43"><expr pos:start="141:43" pos:end="141:43"><literal type="number" pos:start="141:43" pos:end="141:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:46"><expr pos:start="143:9" pos:end="143:45"><call pos:start="143:9" pos:end="143:45"><name pos:start="143:9" pos:end="143:16">TMDSTORE</name><argument_list pos:start="143:17" pos:end="143:45">(<argument pos:start="143:18" pos:end="143:21"><expr pos:start="143:18" pos:end="143:21"><operator pos:start="143:18" pos:end="143:18">&amp;</operator><name pos:start="143:19" pos:end="143:21">tmd</name></expr></argument>, <argument pos:start="143:24" pos:end="143:44"><expr pos:start="143:24" pos:end="143:44"><call pos:start="143:24" pos:end="143:44"><name pos:start="143:24" pos:end="143:31">PHYSADDR</name><argument_list pos:start="143:32" pos:end="143:44">(<argument pos:start="143:33" pos:end="143:33"><expr pos:start="143:33" pos:end="143:33"><name pos:start="143:33" pos:end="143:33">s</name></expr></argument>,<argument pos:start="143:35" pos:end="143:43"><expr pos:start="143:35" pos:end="143:43"><name pos:start="143:35" pos:end="143:43">xmit_cxda</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:28"><expr pos:start="145:9" pos:end="145:27"><name pos:start="145:9" pos:end="145:17"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:14">csr</name><index pos:start="145:15" pos:end="145:17">[<expr pos:start="145:16" pos:end="145:16"><literal type="number" pos:start="145:16" pos:end="145:16">0</literal></expr>]</index></name> <operator pos:start="145:19" pos:end="145:20">|=</operator> <literal type="number" pos:start="145:22" pos:end="145:27">0x0200</literal></expr>;</expr_stmt>    <comment type="block" pos:start="145:33" pos:end="145:46">/* set TINT */</comment>

        <if_stmt pos:start="147:9" pos:end="155:23"><if pos:start="147:9" pos:end="151:9">if <condition pos:start="147:12" pos:end="147:28">(<expr pos:start="147:13" pos:end="147:27"><operator pos:start="147:13" pos:end="147:13">!</operator><call pos:start="147:14" pos:end="147:27"><name pos:start="147:14" pos:end="147:24">CSR_DXSUFLO</name><argument_list pos:start="147:25" pos:end="147:27">(<argument pos:start="147:26" pos:end="147:26"><expr pos:start="147:26" pos:end="147:26"><name pos:start="147:26" pos:end="147:26">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="147:30" pos:end="151:9">{<block_content pos:start="149:13" pos:end="149:33">

            <expr_stmt pos:start="149:13" pos:end="149:33"><expr pos:start="149:13" pos:end="149:32"><name pos:start="149:13" pos:end="149:21"><name pos:start="149:13" pos:end="149:13">s</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:18">csr</name><index pos:start="149:19" pos:end="149:21">[<expr pos:start="149:20" pos:end="149:20"><literal type="number" pos:start="149:20" pos:end="149:20">0</literal></expr>]</index></name> <operator pos:start="149:23" pos:end="149:24">&amp;=</operator> <operator pos:start="149:26" pos:end="149:26">~</operator><literal type="number" pos:start="149:27" pos:end="149:32">0x0010</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="151:11" pos:end="155:23">else

        if <condition pos:start="153:12" pos:end="153:20">(<expr pos:start="153:13" pos:end="153:19"><name pos:start="153:13" pos:end="153:17">count</name><operator pos:start="153:18" pos:end="153:19">--</operator></expr>)</condition><block type="pseudo" pos:start="155:11" pos:end="155:23"><block_content pos:start="155:11" pos:end="155:23">

          <goto pos:start="155:11" pos:end="155:23">goto <name pos:start="155:16" pos:end="155:22">txagain</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:19"><expr pos:start="161:5" pos:end="161:18"><name pos:start="161:5" pos:end="161:14"><name pos:start="161:5" pos:end="161:5">s</name><operator pos:start="161:6" pos:end="161:7">-&gt;</operator><name pos:start="161:8" pos:end="161:14">tx_busy</name></name> <operator pos:start="161:16" pos:end="161:16">=</operator> <literal type="number" pos:start="161:18" pos:end="161:18">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
