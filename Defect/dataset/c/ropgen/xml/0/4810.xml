<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4810.c" pos:tabs="8"><function pos:start="1:1" pos:end="195:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">x11grab_read_packet</name><parameter_list pos:start="1:31" pos:end="1:66">(<parameter pos:start="1:32" pos:end="1:50"><decl pos:start="1:32" pos:end="1:50"><type pos:start="1:32" pos:end="1:50"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">s1</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="195:1">{<block_content pos:start="5:5" pos:end="193:25">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">X11GrabContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:37">= <expr pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:26">s1</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">Display</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">dpy</name>      <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:30">dpy</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">XImage</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:17">image</name>     <init pos:start="9:23" pos:end="9:32">= <expr pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:32">image</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">x_off</name>         <init pos:start="11:23" pos:end="11:32">= <expr pos:start="11:25" pos:end="11:32"><name pos:start="11:25" pos:end="11:32"><name pos:start="11:25" pos:end="11:25">s</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:32">x_off</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">y_off</name>         <init pos:start="13:23" pos:end="13:32">= <expr pos:start="13:25" pos:end="13:32"><name pos:start="13:25" pos:end="13:32"><name pos:start="13:25" pos:end="13:25">s</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:32">y_off</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:39"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20">follow_mouse</name>  <init pos:start="15:23" pos:end="15:39">= <expr pos:start="15:25" pos:end="15:39"><name pos:start="15:25" pos:end="15:39"><name pos:start="15:25" pos:end="15:25">s</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:39">follow_mouse</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">screen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">Window</name></type> <name pos:start="19:12" pos:end="19:15">root</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int64_t</name></type> <name pos:start="21:13" pos:end="21:19">curtime</name></decl>, <decl pos:start="21:22" pos:end="21:26"><type ref="prev" pos:start="21:5" pos:end="21:11"/><name pos:start="21:22" pos:end="21:26">delay</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:23"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:10">struct</name> <name pos:start="23:12" pos:end="23:19">timespec</name></name></type> <name pos:start="23:21" pos:end="23:22">ts</name></decl>;</decl_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:46">/* Calculate the time of the next frame */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:38"><expr pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:17">time_frame</name></name> <operator pos:start="29:19" pos:end="29:20">+=</operator> <call pos:start="29:22" pos:end="29:37"><name pos:start="29:22" pos:end="29:28">INT64_C</name><argument_list pos:start="29:29" pos:end="29:37">(<argument pos:start="29:30" pos:end="29:36"><expr pos:start="29:30" pos:end="29:36"><literal type="number" pos:start="29:30" pos:end="29:36">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:38">/* wait based on the frame rate */</comment>

    <for pos:start="35:5" pos:end="57:5">for <control pos:start="35:9" pos:end="35:12">(<init pos:start="35:10" pos:end="35:10">;</init><condition pos:start="35:11" pos:end="35:11">;</condition><incr/>)</control> <block pos:start="35:14" pos:end="57:5">{<block_content pos:start="37:9" pos:end="55:29">

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:15">curtime</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:30"><name pos:start="37:19" pos:end="37:28">av_gettime</name><argument_list pos:start="37:29" pos:end="37:30">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:65"><expr pos:start="39:9" pos:end="39:64"><name pos:start="39:9" pos:end="39:13">delay</name>   <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:31"><name pos:start="39:19" pos:end="39:19">s</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:31">time_frame</name></name> <operator pos:start="39:33" pos:end="39:33">*</operator> <call pos:start="39:35" pos:end="39:54"><name pos:start="39:35" pos:end="39:40">av_q2d</name><argument_list pos:start="39:41" pos:end="39:54">(<argument pos:start="39:42" pos:end="39:53"><expr pos:start="39:42" pos:end="39:53"><name pos:start="39:42" pos:end="39:53"><name pos:start="39:42" pos:end="39:42">s</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:53">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:56" pos:end="39:56">-</operator> <name pos:start="39:58" pos:end="39:64">curtime</name></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="49:9"><if pos:start="41:9" pos:end="49:9">if <condition pos:start="41:12" pos:end="41:23">(<expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:17">delay</name> <operator pos:start="41:19" pos:end="41:20">&lt;=</operator> <literal type="number" pos:start="41:22" pos:end="41:22">0</literal></expr>)</condition> <block pos:start="41:25" pos:end="49:9">{<block_content pos:start="43:13" pos:end="47:18">

            <if_stmt pos:start="43:13" pos:end="45:50"><if pos:start="43:13" pos:end="45:50">if <condition pos:start="43:16" pos:end="43:65">(<expr pos:start="43:17" pos:end="43:64"><name pos:start="43:17" pos:end="43:21">delay</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <call pos:start="43:25" pos:end="43:41"><name pos:start="43:25" pos:end="43:31">INT64_C</name><argument_list pos:start="43:32" pos:end="43:41">(<argument pos:start="43:33" pos:end="43:40"><expr pos:start="43:33" pos:end="43:40"><operator pos:start="43:33" pos:end="43:33">-</operator><literal type="number" pos:start="43:34" pos:end="43:40">1000000</literal></expr></argument>)</argument_list></call> <operator pos:start="43:43" pos:end="43:43">*</operator> <call pos:start="43:45" pos:end="43:64"><name pos:start="43:45" pos:end="43:50">av_q2d</name><argument_list pos:start="43:51" pos:end="43:64">(<argument pos:start="43:52" pos:end="43:63"><expr pos:start="43:52" pos:end="43:63"><name pos:start="43:52" pos:end="43:63"><name pos:start="43:52" pos:end="43:52">s</name><operator pos:start="43:53" pos:end="43:54">-&gt;</operator><name pos:start="43:55" pos:end="43:63">time_base</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:50"><block_content pos:start="45:17" pos:end="45:50">

                <expr_stmt pos:start="45:17" pos:end="45:50"><expr pos:start="45:17" pos:end="45:49"><name pos:start="45:17" pos:end="45:29"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:29">time_frame</name></name> <operator pos:start="45:31" pos:end="45:32">+=</operator> <call pos:start="45:34" pos:end="45:49"><name pos:start="45:34" pos:end="45:40">INT64_C</name><argument_list pos:start="45:41" pos:end="45:49">(<argument pos:start="45:42" pos:end="45:48"><expr pos:start="45:42" pos:end="45:48"><literal type="number" pos:start="45:42" pos:end="45:48">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:37"><expr pos:start="51:9" pos:end="51:36"><name pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:10">ts</name><operator pos:start="51:11" pos:end="51:11">.</operator><name pos:start="51:12" pos:end="51:17">tv_sec</name></name>  <operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:26">delay</name> <operator pos:start="51:28" pos:end="51:28">/</operator> <literal type="number" pos:start="51:30" pos:end="51:36">1000000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:46"><expr pos:start="53:9" pos:end="53:45"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:10">ts</name><operator pos:start="53:11" pos:end="53:11">.</operator><name pos:start="53:12" pos:end="53:18">tv_nsec</name></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <operator pos:start="53:22" pos:end="53:22">(</operator><name pos:start="53:23" pos:end="53:27">delay</name> <operator pos:start="53:29" pos:end="53:29">%</operator> <literal type="number" pos:start="53:31" pos:end="53:37">1000000</literal><operator pos:start="53:38" pos:end="53:38">)</operator> <operator pos:start="53:40" pos:end="53:40">*</operator> <literal type="number" pos:start="53:42" pos:end="53:45">1000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:29"><expr pos:start="55:9" pos:end="55:28"><call pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:17">nanosleep</name><argument_list pos:start="55:18" pos:end="55:28">(<argument pos:start="55:19" pos:end="55:21"><expr pos:start="55:19" pos:end="55:21"><operator pos:start="55:19" pos:end="55:19">&amp;</operator><name pos:start="55:20" pos:end="55:21">ts</name></expr></argument>, <argument pos:start="55:24" pos:end="55:27"><expr pos:start="55:24" pos:end="55:27"><name pos:start="55:24" pos:end="55:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="61:5" pos:end="61:24"><expr pos:start="61:5" pos:end="61:23"><call pos:start="61:5" pos:end="61:23"><name pos:start="61:5" pos:end="61:18">av_init_packet</name><argument_list pos:start="61:19" pos:end="61:23">(<argument pos:start="61:20" pos:end="61:22"><expr pos:start="61:20" pos:end="61:22"><name pos:start="61:20" pos:end="61:22">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:28"><expr pos:start="63:5" pos:end="63:27"><name pos:start="63:5" pos:end="63:13"><name pos:start="63:5" pos:end="63:7">pkt</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:13">data</name></name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:27"><name pos:start="63:17" pos:end="63:21">image</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:27">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:30"><expr pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:13"><name pos:start="65:5" pos:end="65:7">pkt</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:13">size</name></name> <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:29"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:29">frame_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:24"><expr pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:12"><name pos:start="67:5" pos:end="67:7">pkt</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:12">pts</name></name>  <operator pos:start="67:15" pos:end="67:15">=</operator> <name pos:start="67:17" pos:end="67:23">curtime</name></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:32"><expr pos:start="71:5" pos:end="71:31"><name pos:start="71:5" pos:end="71:10">screen</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <call pos:start="71:14" pos:end="71:31"><name pos:start="71:14" pos:end="71:26">DefaultScreen</name><argument_list pos:start="71:27" pos:end="71:31">(<argument pos:start="71:28" pos:end="71:30"><expr pos:start="71:28" pos:end="71:30"><name pos:start="71:28" pos:end="71:30">dpy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:37"><expr pos:start="73:5" pos:end="73:36"><name pos:start="73:5" pos:end="73:8">root</name>   <operator pos:start="73:12" pos:end="73:12">=</operator> <call pos:start="73:14" pos:end="73:36"><name pos:start="73:14" pos:end="73:23">RootWindow</name><argument_list pos:start="73:24" pos:end="73:36">(<argument pos:start="73:25" pos:end="73:27"><expr pos:start="73:25" pos:end="73:27"><name pos:start="73:25" pos:end="73:27">dpy</name></expr></argument>, <argument pos:start="73:30" pos:end="73:35"><expr pos:start="73:30" pos:end="73:35"><name pos:start="73:30" pos:end="73:35">screen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="139:5"><if pos:start="75:5" pos:end="139:5">if <condition pos:start="75:8" pos:end="75:21">(<expr pos:start="75:9" pos:end="75:20"><name pos:start="75:9" pos:end="75:20">follow_mouse</name></expr>)</condition> <block pos:start="75:23" pos:end="139:5">{<block_content pos:start="77:9" pos:end="137:54">

        <decl_stmt pos:start="77:9" pos:end="77:31"><decl pos:start="77:9" pos:end="77:20"><type pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">int</name></type> <name pos:start="77:13" pos:end="77:20">screen_w</name></decl>, <decl pos:start="77:23" pos:end="77:30"><type ref="prev" pos:start="77:9" pos:end="77:11"/><name pos:start="77:23" pos:end="77:30">screen_h</name></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:36"><decl pos:start="79:9" pos:end="79:21"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:21">pointer_x</name></decl>, <decl pos:start="79:24" pos:end="79:32"><type ref="prev" pos:start="79:9" pos:end="79:11"/><name pos:start="79:24" pos:end="79:32">pointer_y</name></decl>, <decl pos:start="79:35" pos:end="79:35"><type ref="prev" pos:start="79:9" pos:end="79:11"/><name pos:start="79:35" pos:end="79:35">_</name></decl>;</decl_stmt>

        <decl_stmt pos:start="81:9" pos:end="81:17"><decl pos:start="81:9" pos:end="81:16"><type pos:start="81:9" pos:end="81:14"><name pos:start="81:9" pos:end="81:14">Window</name></type> <name pos:start="81:16" pos:end="81:16">w</name></decl>;</decl_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:45"><expr pos:start="85:9" pos:end="85:44"><name pos:start="85:9" pos:end="85:16">screen_w</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <call pos:start="85:20" pos:end="85:44"><name pos:start="85:20" pos:end="85:31">DisplayWidth</name><argument_list pos:start="85:32" pos:end="85:44">(<argument pos:start="85:33" pos:end="85:35"><expr pos:start="85:33" pos:end="85:35"><name pos:start="85:33" pos:end="85:35">dpy</name></expr></argument>, <argument pos:start="85:38" pos:end="85:43"><expr pos:start="85:38" pos:end="85:43"><name pos:start="85:38" pos:end="85:43">screen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:46"><expr pos:start="87:9" pos:end="87:45"><name pos:start="87:9" pos:end="87:16">screen_h</name> <operator pos:start="87:18" pos:end="87:18">=</operator> <call pos:start="87:20" pos:end="87:45"><name pos:start="87:20" pos:end="87:32">DisplayHeight</name><argument_list pos:start="87:33" pos:end="87:45">(<argument pos:start="87:34" pos:end="87:36"><expr pos:start="87:34" pos:end="87:36"><name pos:start="87:34" pos:end="87:36">dpy</name></expr></argument>, <argument pos:start="87:39" pos:end="87:44"><expr pos:start="87:39" pos:end="87:44"><name pos:start="87:39" pos:end="87:44">screen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:77"><expr pos:start="89:9" pos:end="89:76"><call pos:start="89:9" pos:end="89:76"><name pos:start="89:9" pos:end="89:21">XQueryPointer</name><argument_list pos:start="89:22" pos:end="89:76">(<argument pos:start="89:23" pos:end="89:25"><expr pos:start="89:23" pos:end="89:25"><name pos:start="89:23" pos:end="89:25">dpy</name></expr></argument>, <argument pos:start="89:28" pos:end="89:31"><expr pos:start="89:28" pos:end="89:31"><name pos:start="89:28" pos:end="89:31">root</name></expr></argument>, <argument pos:start="89:34" pos:end="89:35"><expr pos:start="89:34" pos:end="89:35"><operator pos:start="89:34" pos:end="89:34">&amp;</operator><name pos:start="89:35" pos:end="89:35">w</name></expr></argument>, <argument pos:start="89:38" pos:end="89:39"><expr pos:start="89:38" pos:end="89:39"><operator pos:start="89:38" pos:end="89:38">&amp;</operator><name pos:start="89:39" pos:end="89:39">w</name></expr></argument>, <argument pos:start="89:42" pos:end="89:51"><expr pos:start="89:42" pos:end="89:51"><operator pos:start="89:42" pos:end="89:42">&amp;</operator><name pos:start="89:43" pos:end="89:51">pointer_x</name></expr></argument>, <argument pos:start="89:54" pos:end="89:63"><expr pos:start="89:54" pos:end="89:63"><operator pos:start="89:54" pos:end="89:54">&amp;</operator><name pos:start="89:55" pos:end="89:63">pointer_y</name></expr></argument>, <argument pos:start="89:66" pos:end="89:67"><expr pos:start="89:66" pos:end="89:67"><operator pos:start="89:66" pos:end="89:66">&amp;</operator><name pos:start="89:67" pos:end="89:67">_</name></expr></argument>, <argument pos:start="89:70" pos:end="89:71"><expr pos:start="89:70" pos:end="89:71"><operator pos:start="89:70" pos:end="89:70">&amp;</operator><name pos:start="89:71" pos:end="89:71">_</name></expr></argument>, <argument pos:start="89:74" pos:end="89:75"><expr pos:start="89:74" pos:end="89:75"><operator pos:start="89:74" pos:end="89:74">&amp;</operator><name pos:start="89:75" pos:end="89:75">_</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="121:9"><if pos:start="91:9" pos:end="99:9">if <condition pos:start="91:12" pos:end="91:31">(<expr pos:start="91:13" pos:end="91:30"><name pos:start="91:13" pos:end="91:24">follow_mouse</name> <operator pos:start="91:26" pos:end="91:27">==</operator> <operator pos:start="91:29" pos:end="91:29">-</operator><literal type="number" pos:start="91:30" pos:end="91:30">1</literal></expr>)</condition> <block pos:start="91:33" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:55">

            <comment type="line" pos:start="93:13" pos:end="93:68">// follow the mouse, put it at center of grabbing region</comment>

            <expr_stmt pos:start="95:13" pos:end="95:54"><expr pos:start="95:13" pos:end="95:53"><name pos:start="95:13" pos:end="95:17">x_off</name> <operator pos:start="95:19" pos:end="95:20">+=</operator> <name pos:start="95:22" pos:end="95:30">pointer_x</name> <operator pos:start="95:32" pos:end="95:32">-</operator> <name pos:start="95:34" pos:end="95:41"><name pos:start="95:34" pos:end="95:34">s</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:41">width</name></name> <operator pos:start="95:43" pos:end="95:43">/</operator> <literal type="number" pos:start="95:45" pos:end="95:47">2</literal> <operator pos:start="95:47" pos:end="95:47">-</operator> <name pos:start="95:49" pos:end="95:53">x_off</name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:55"><expr pos:start="97:13" pos:end="97:54"><name pos:start="97:13" pos:end="97:17">y_off</name> <operator pos:start="97:19" pos:end="97:20">+=</operator> <name pos:start="97:22" pos:end="97:30">pointer_y</name> <operator pos:start="97:32" pos:end="97:32">-</operator> <name pos:start="97:34" pos:end="97:42"><name pos:start="97:34" pos:end="97:34">s</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:42">height</name></name> <operator pos:start="97:44" pos:end="97:44">/</operator> <literal type="number" pos:start="97:46" pos:end="97:48">2</literal> <operator pos:start="97:48" pos:end="97:48">-</operator> <name pos:start="97:50" pos:end="97:54">y_off</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="99:11" pos:end="121:9">else <block pos:start="99:16" pos:end="121:9">{<block_content pos:start="105:13" pos:end="119:60">

            <comment type="line" pos:start="101:13" pos:end="101:77">// follow the mouse, but only move the grabbing region when mouse</comment>

            <comment type="line" pos:start="103:13" pos:end="103:57">// reaches within certain pixels to the edge.</comment>

            <if_stmt pos:start="105:13" pos:end="111:60"><if pos:start="105:13" pos:end="107:71">if <condition pos:start="105:16" pos:end="105:60">(<expr pos:start="105:17" pos:end="105:59"><name pos:start="105:17" pos:end="105:25">pointer_x</name> <operator pos:start="105:27" pos:end="105:27">&gt;</operator> <name pos:start="105:29" pos:end="105:33">x_off</name> <operator pos:start="105:35" pos:end="105:35">+</operator> <name pos:start="105:37" pos:end="105:44"><name pos:start="105:37" pos:end="105:37">s</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:44">width</name></name> <operator pos:start="105:46" pos:end="105:46">-</operator> <name pos:start="105:48" pos:end="105:59">follow_mouse</name></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:71"><block_content pos:start="107:17" pos:end="107:71">

                <expr_stmt pos:start="107:17" pos:end="107:71"><expr pos:start="107:17" pos:end="107:70"><name pos:start="107:17" pos:end="107:21">x_off</name> <operator pos:start="107:23" pos:end="107:24">+=</operator> <name pos:start="107:26" pos:end="107:34">pointer_x</name> <operator pos:start="107:36" pos:end="107:36">-</operator> <operator pos:start="107:38" pos:end="107:38">(</operator><name pos:start="107:39" pos:end="107:43">x_off</name> <operator pos:start="107:45" pos:end="107:45">+</operator> <name pos:start="107:47" pos:end="107:54"><name pos:start="107:47" pos:end="107:47">s</name><operator pos:start="107:48" pos:end="107:49">-&gt;</operator><name pos:start="107:50" pos:end="107:54">width</name></name> <operator pos:start="107:56" pos:end="107:56">-</operator> <name pos:start="107:58" pos:end="107:69">follow_mouse</name><operator pos:start="107:70" pos:end="107:70">)</operator></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="109:13" pos:end="111:60">else if <condition pos:start="109:21" pos:end="109:54">(<expr pos:start="109:22" pos:end="109:53"><name pos:start="109:22" pos:end="109:30">pointer_x</name> <operator pos:start="109:32" pos:end="109:32">&lt;</operator> <name pos:start="109:34" pos:end="109:38">x_off</name> <operator pos:start="109:40" pos:end="109:40">+</operator> <name pos:start="109:42" pos:end="109:53">follow_mouse</name></expr>)</condition><block type="pseudo" pos:start="111:17" pos:end="111:60"><block_content pos:start="111:17" pos:end="111:60">

                <expr_stmt pos:start="111:17" pos:end="111:60"><expr pos:start="111:17" pos:end="111:59"><name pos:start="111:17" pos:end="111:21">x_off</name> <operator pos:start="111:23" pos:end="111:24">-=</operator> <operator pos:start="111:26" pos:end="111:26">(</operator><name pos:start="111:27" pos:end="111:31">x_off</name> <operator pos:start="111:33" pos:end="111:33">+</operator> <name pos:start="111:35" pos:end="111:46">follow_mouse</name><operator pos:start="111:47" pos:end="111:47">)</operator> <operator pos:start="111:49" pos:end="111:49">-</operator> <name pos:start="111:51" pos:end="111:59">pointer_x</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="113:13" pos:end="119:60"><if pos:start="113:13" pos:end="115:72">if <condition pos:start="113:16" pos:end="113:61">(<expr pos:start="113:17" pos:end="113:60"><name pos:start="113:17" pos:end="113:25">pointer_y</name> <operator pos:start="113:27" pos:end="113:27">&gt;</operator> <name pos:start="113:29" pos:end="113:33">y_off</name> <operator pos:start="113:35" pos:end="113:35">+</operator> <name pos:start="113:37" pos:end="113:45"><name pos:start="113:37" pos:end="113:37">s</name><operator pos:start="113:38" pos:end="113:39">-&gt;</operator><name pos:start="113:40" pos:end="113:45">height</name></name> <operator pos:start="113:47" pos:end="113:47">-</operator> <name pos:start="113:49" pos:end="113:60">follow_mouse</name></expr>)</condition><block type="pseudo" pos:start="115:17" pos:end="115:72"><block_content pos:start="115:17" pos:end="115:72">

                <expr_stmt pos:start="115:17" pos:end="115:72"><expr pos:start="115:17" pos:end="115:71"><name pos:start="115:17" pos:end="115:21">y_off</name> <operator pos:start="115:23" pos:end="115:24">+=</operator> <name pos:start="115:26" pos:end="115:34">pointer_y</name> <operator pos:start="115:36" pos:end="115:36">-</operator> <operator pos:start="115:38" pos:end="115:38">(</operator><name pos:start="115:39" pos:end="115:43">y_off</name> <operator pos:start="115:45" pos:end="115:45">+</operator> <name pos:start="115:47" pos:end="115:55"><name pos:start="115:47" pos:end="115:47">s</name><operator pos:start="115:48" pos:end="115:49">-&gt;</operator><name pos:start="115:50" pos:end="115:55">height</name></name> <operator pos:start="115:57" pos:end="115:57">-</operator> <name pos:start="115:59" pos:end="115:70">follow_mouse</name><operator pos:start="115:71" pos:end="115:71">)</operator></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="117:13" pos:end="119:60">else if <condition pos:start="117:21" pos:end="117:54">(<expr pos:start="117:22" pos:end="117:53"><name pos:start="117:22" pos:end="117:30">pointer_y</name> <operator pos:start="117:32" pos:end="117:32">&lt;</operator> <name pos:start="117:34" pos:end="117:38">y_off</name> <operator pos:start="117:40" pos:end="117:40">+</operator> <name pos:start="117:42" pos:end="117:53">follow_mouse</name></expr>)</condition><block type="pseudo" pos:start="119:17" pos:end="119:60"><block_content pos:start="119:17" pos:end="119:60">

                <expr_stmt pos:start="119:17" pos:end="119:60"><expr pos:start="119:17" pos:end="119:59"><name pos:start="119:17" pos:end="119:21">y_off</name> <operator pos:start="119:23" pos:end="119:24">-=</operator> <operator pos:start="119:26" pos:end="119:26">(</operator><name pos:start="119:27" pos:end="119:31">y_off</name> <operator pos:start="119:33" pos:end="119:33">+</operator> <name pos:start="119:35" pos:end="119:46">follow_mouse</name><operator pos:start="119:47" pos:end="119:47">)</operator> <operator pos:start="119:49" pos:end="119:49">-</operator> <name pos:start="119:51" pos:end="119:59">pointer_y</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="line" pos:start="123:9" pos:end="123:68">// adjust grabbing region position if it goes out of screen.</comment>

        <expr_stmt pos:start="125:9" pos:end="125:71"><expr pos:start="125:9" pos:end="125:70"><name pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:16">x_off</name></name> <operator pos:start="125:18" pos:end="125:18">=</operator> <name pos:start="125:20" pos:end="125:24">x_off</name> <operator pos:start="125:26" pos:end="125:26">=</operator> <call pos:start="125:28" pos:end="125:70"><name pos:start="125:28" pos:end="125:32">FFMIN</name><argument_list pos:start="125:33" pos:end="125:70">(<argument pos:start="125:34" pos:end="125:48"><expr pos:start="125:34" pos:end="125:48"><call pos:start="125:34" pos:end="125:48"><name pos:start="125:34" pos:end="125:38">FFMAX</name><argument_list pos:start="125:39" pos:end="125:48">(<argument pos:start="125:40" pos:end="125:44"><expr pos:start="125:40" pos:end="125:44"><name pos:start="125:40" pos:end="125:44">x_off</name></expr></argument>, <argument pos:start="125:47" pos:end="125:47"><expr pos:start="125:47" pos:end="125:47"><literal type="number" pos:start="125:47" pos:end="125:47">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="125:51" pos:end="125:69"><expr pos:start="125:51" pos:end="125:69"><name pos:start="125:51" pos:end="125:58">screen_w</name> <operator pos:start="125:60" pos:end="125:60">-</operator> <name pos:start="125:62" pos:end="125:69"><name pos:start="125:62" pos:end="125:62">s</name><operator pos:start="125:63" pos:end="125:64">-&gt;</operator><name pos:start="125:65" pos:end="125:69">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:72"><expr pos:start="127:9" pos:end="127:71"><name pos:start="127:9" pos:end="127:16"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:16">y_off</name></name> <operator pos:start="127:18" pos:end="127:18">=</operator> <name pos:start="127:20" pos:end="127:24">y_off</name> <operator pos:start="127:26" pos:end="127:26">=</operator> <call pos:start="127:28" pos:end="127:71"><name pos:start="127:28" pos:end="127:32">FFMIN</name><argument_list pos:start="127:33" pos:end="127:71">(<argument pos:start="127:34" pos:end="127:48"><expr pos:start="127:34" pos:end="127:48"><call pos:start="127:34" pos:end="127:48"><name pos:start="127:34" pos:end="127:38">FFMAX</name><argument_list pos:start="127:39" pos:end="127:48">(<argument pos:start="127:40" pos:end="127:44"><expr pos:start="127:40" pos:end="127:44"><name pos:start="127:40" pos:end="127:44">y_off</name></expr></argument>, <argument pos:start="127:47" pos:end="127:47"><expr pos:start="127:47" pos:end="127:47"><literal type="number" pos:start="127:47" pos:end="127:47">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="127:51" pos:end="127:70"><expr pos:start="127:51" pos:end="127:70"><name pos:start="127:51" pos:end="127:58">screen_h</name> <operator pos:start="127:60" pos:end="127:60">-</operator> <name pos:start="127:62" pos:end="127:70"><name pos:start="127:62" pos:end="127:62">s</name><operator pos:start="127:63" pos:end="127:64">-&gt;</operator><name pos:start="127:65" pos:end="127:70">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="131:9" pos:end="137:54"><if pos:start="131:9" pos:end="137:54">if <condition pos:start="131:12" pos:end="131:44">(<expr pos:start="131:13" pos:end="131:43"><name pos:start="131:13" pos:end="131:26"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:26">show_region</name></name> <operator pos:start="131:28" pos:end="131:29">&amp;&amp;</operator> <name pos:start="131:31" pos:end="131:43"><name pos:start="131:31" pos:end="131:31">s</name><operator pos:start="131:32" pos:end="131:33">-&gt;</operator><name pos:start="131:34" pos:end="131:43">region_win</name></name></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="137:54"><block_content pos:start="133:13" pos:end="137:54">

            <expr_stmt pos:start="133:13" pos:end="137:54"><expr pos:start="133:13" pos:end="137:53"><call pos:start="133:13" pos:end="137:53"><name pos:start="133:13" pos:end="133:23">XMoveWindow</name><argument_list pos:start="133:24" pos:end="137:53">(<argument pos:start="133:25" pos:end="133:27"><expr pos:start="133:25" pos:end="133:27"><name pos:start="133:25" pos:end="133:27">dpy</name></expr></argument>, <argument pos:start="133:30" pos:end="133:42"><expr pos:start="133:30" pos:end="133:42"><name pos:start="133:30" pos:end="133:42"><name pos:start="133:30" pos:end="133:30">s</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:42">region_win</name></name></expr></argument>,

                        <argument pos:start="135:25" pos:end="135:52"><expr pos:start="135:25" pos:end="135:52"><name pos:start="135:25" pos:end="135:32"><name pos:start="135:25" pos:end="135:25">s</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:32">x_off</name></name> <operator pos:start="135:34" pos:end="135:34">-</operator> <name pos:start="135:36" pos:end="135:52">REGION_WIN_BORDER</name></expr></argument>,

                        <argument pos:start="137:25" pos:end="137:52"><expr pos:start="137:25" pos:end="137:52"><name pos:start="137:25" pos:end="137:32"><name pos:start="137:25" pos:end="137:25">s</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:32">y_off</name></name> <operator pos:start="137:34" pos:end="137:34">-</operator> <name pos:start="137:36" pos:end="137:52">REGION_WIN_BORDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="143:5" pos:end="167:5"><if pos:start="143:5" pos:end="167:5">if <condition pos:start="143:8" pos:end="143:23">(<expr pos:start="143:9" pos:end="143:22"><name pos:start="143:9" pos:end="143:22"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:22">show_region</name></name></expr>)</condition> <block pos:start="143:25" pos:end="167:5">{<block_content pos:start="145:9" pos:end="165:9">

        <if_stmt pos:start="145:9" pos:end="165:9"><if pos:start="145:9" pos:end="161:9">if <condition pos:start="145:12" pos:end="145:26">(<expr pos:start="145:13" pos:end="145:25"><name pos:start="145:13" pos:end="145:25"><name pos:start="145:13" pos:end="145:13">s</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:25">region_win</name></name></expr>)</condition> <block pos:start="145:28" pos:end="161:9">{<block_content pos:start="147:13" pos:end="159:43">

            <decl_stmt pos:start="147:13" pos:end="147:49"><decl pos:start="147:13" pos:end="147:48"><type pos:start="147:13" pos:end="147:18"><name pos:start="147:13" pos:end="147:18">XEvent</name></type> <name pos:start="147:20" pos:end="147:22">evt</name> <init pos:start="147:24" pos:end="147:48">= <expr pos:start="147:26" pos:end="147:48"><block pos:start="147:26" pos:end="147:48">{ <expr pos:start="147:28" pos:end="147:46"><operator pos:start="147:28" pos:end="147:28">.</operator><name pos:start="147:29" pos:end="147:32">type</name> <operator pos:start="147:34" pos:end="147:34">=</operator> <name pos:start="147:36" pos:end="147:46">NoEventMask</name></expr> }</block></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:start="149:13" pos:end="149:70">// Clean up the events, and do the initial draw or redraw.</comment>

            <while pos:start="151:13" pos:end="155:17">while <condition pos:start="151:19" pos:end="153:41">(<expr pos:start="151:20" pos:end="153:40"><call pos:start="151:20" pos:end="153:40"><name pos:start="151:20" pos:end="151:34">XCheckMaskEvent</name><argument_list pos:start="151:35" pos:end="153:40">(<argument pos:start="151:36" pos:end="151:38"><expr pos:start="151:36" pos:end="151:38"><name pos:start="151:36" pos:end="151:38">dpy</name></expr></argument>, <argument pos:start="151:41" pos:end="151:74"><expr pos:start="151:41" pos:end="151:74"><name pos:start="151:41" pos:end="151:52">ExposureMask</name> <operator pos:start="151:54" pos:end="151:54">|</operator> <name pos:start="151:56" pos:end="151:74">StructureNotifyMask</name></expr></argument>,

                                   <argument pos:start="153:36" pos:end="153:39"><expr pos:start="153:36" pos:end="153:39"><operator pos:start="153:36" pos:end="153:36">&amp;</operator><name pos:start="153:37" pos:end="153:39">evt</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="155:17" pos:end="155:17"><block_content pos:start="155:17" pos:end="155:17">

                <empty_stmt pos:start="155:17" pos:end="155:17">;</empty_stmt></block_content></block></while>

            <if_stmt pos:start="157:13" pos:end="159:43"><if pos:start="157:13" pos:end="159:43">if <condition pos:start="157:16" pos:end="157:25">(<expr pos:start="157:17" pos:end="157:24"><name pos:start="157:17" pos:end="157:24"><name pos:start="157:17" pos:end="157:19">evt</name><operator pos:start="157:20" pos:end="157:20">.</operator><name pos:start="157:21" pos:end="157:24">type</name></name></expr>)</condition><block type="pseudo" pos:start="159:17" pos:end="159:43"><block_content pos:start="159:17" pos:end="159:43">

                <expr_stmt pos:start="159:17" pos:end="159:43"><expr pos:start="159:17" pos:end="159:42"><call pos:start="159:17" pos:end="159:42"><name pos:start="159:17" pos:end="159:39">x11grab_draw_region_win</name><argument_list pos:start="159:40" pos:end="159:42">(<argument pos:start="159:41" pos:end="159:41"><expr pos:start="159:41" pos:end="159:41"><name pos:start="159:41" pos:end="159:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="161:11" pos:end="165:9">else <block pos:start="161:16" pos:end="165:9">{<block_content pos:start="163:13" pos:end="163:39">

            <expr_stmt pos:start="163:13" pos:end="163:39"><expr pos:start="163:13" pos:end="163:38"><call pos:start="163:13" pos:end="163:38"><name pos:start="163:13" pos:end="163:35">x11grab_region_win_init</name><argument_list pos:start="163:36" pos:end="163:38">(<argument pos:start="163:37" pos:end="163:37"><expr pos:start="163:37" pos:end="163:37"><name pos:start="163:37" pos:end="163:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="171:5" pos:end="183:5"><if pos:start="171:5" pos:end="177:5">if <condition pos:start="171:8" pos:end="171:19">(<expr pos:start="171:9" pos:end="171:18"><name pos:start="171:9" pos:end="171:18"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:18">use_shm</name></name></expr>)</condition> <block pos:start="171:21" pos:end="177:5">{<block_content pos:start="173:9" pos:end="175:63">

        <if_stmt pos:start="173:9" pos:end="175:63"><if pos:start="173:9" pos:end="175:63">if <condition pos:start="173:12" pos:end="173:69">(<expr pos:start="173:13" pos:end="173:68"><operator pos:start="173:13" pos:end="173:13">!</operator><call pos:start="173:14" pos:end="173:68"><name pos:start="173:14" pos:end="173:25">XShmGetImage</name><argument_list pos:start="173:26" pos:end="173:68">(<argument pos:start="173:27" pos:end="173:29"><expr pos:start="173:27" pos:end="173:29"><name pos:start="173:27" pos:end="173:29">dpy</name></expr></argument>, <argument pos:start="173:32" pos:end="173:35"><expr pos:start="173:32" pos:end="173:35"><name pos:start="173:32" pos:end="173:35">root</name></expr></argument>, <argument pos:start="173:38" pos:end="173:42"><expr pos:start="173:38" pos:end="173:42"><name pos:start="173:38" pos:end="173:42">image</name></expr></argument>, <argument pos:start="173:45" pos:end="173:49"><expr pos:start="173:45" pos:end="173:49"><name pos:start="173:45" pos:end="173:49">x_off</name></expr></argument>, <argument pos:start="173:52" pos:end="173:56"><expr pos:start="173:52" pos:end="173:56"><name pos:start="173:52" pos:end="173:56">y_off</name></expr></argument>, <argument pos:start="173:59" pos:end="173:67"><expr pos:start="173:59" pos:end="173:67"><name pos:start="173:59" pos:end="173:67">AllPlanes</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:63"><block_content pos:start="175:13" pos:end="175:63">

            <expr_stmt pos:start="175:13" pos:end="175:63"><expr pos:start="175:13" pos:end="175:62"><call pos:start="175:13" pos:end="175:62"><name pos:start="175:13" pos:end="175:18">av_log</name><argument_list pos:start="175:19" pos:end="175:62">(<argument pos:start="175:20" pos:end="175:21"><expr pos:start="175:20" pos:end="175:21"><name pos:start="175:20" pos:end="175:21">s1</name></expr></argument>, <argument pos:start="175:24" pos:end="175:34"><expr pos:start="175:24" pos:end="175:34"><name pos:start="175:24" pos:end="175:34">AV_LOG_INFO</name></expr></argument>, <argument pos:start="175:37" pos:end="175:61"><expr pos:start="175:37" pos:end="175:61"><literal type="string" pos:start="175:37" pos:end="175:61">"XShmGetImage() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="177:7" pos:end="183:5">else <block pos:start="177:12" pos:end="183:5">{<block_content pos:start="179:9" pos:end="181:62">

        <if_stmt pos:start="179:9" pos:end="181:62"><if pos:start="179:9" pos:end="181:62">if <condition pos:start="179:12" pos:end="179:58">(<expr pos:start="179:13" pos:end="179:57"><operator pos:start="179:13" pos:end="179:13">!</operator><call pos:start="179:14" pos:end="179:57"><name pos:start="179:14" pos:end="179:25">xget_zpixmap</name><argument_list pos:start="179:26" pos:end="179:57">(<argument pos:start="179:27" pos:end="179:29"><expr pos:start="179:27" pos:end="179:29"><name pos:start="179:27" pos:end="179:29">dpy</name></expr></argument>, <argument pos:start="179:32" pos:end="179:35"><expr pos:start="179:32" pos:end="179:35"><name pos:start="179:32" pos:end="179:35">root</name></expr></argument>, <argument pos:start="179:38" pos:end="179:42"><expr pos:start="179:38" pos:end="179:42"><name pos:start="179:38" pos:end="179:42">image</name></expr></argument>, <argument pos:start="179:45" pos:end="179:49"><expr pos:start="179:45" pos:end="179:49"><name pos:start="179:45" pos:end="179:49">x_off</name></expr></argument>, <argument pos:start="179:52" pos:end="179:56"><expr pos:start="179:52" pos:end="179:56"><name pos:start="179:52" pos:end="179:56">y_off</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="181:13" pos:end="181:62"><block_content pos:start="181:13" pos:end="181:62">

            <expr_stmt pos:start="181:13" pos:end="181:62"><expr pos:start="181:13" pos:end="181:61"><call pos:start="181:13" pos:end="181:61"><name pos:start="181:13" pos:end="181:18">av_log</name><argument_list pos:start="181:19" pos:end="181:61">(<argument pos:start="181:20" pos:end="181:21"><expr pos:start="181:20" pos:end="181:21"><name pos:start="181:20" pos:end="181:21">s1</name></expr></argument>, <argument pos:start="181:24" pos:end="181:34"><expr pos:start="181:24" pos:end="181:34"><name pos:start="181:24" pos:end="181:34">AV_LOG_INFO</name></expr></argument>, <argument pos:start="181:37" pos:end="181:60"><expr pos:start="181:37" pos:end="181:60"><literal type="string" pos:start="181:37" pos:end="181:60">"XGetZPixmap() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="187:5" pos:end="189:38"><if pos:start="187:5" pos:end="189:38">if <condition pos:start="187:8" pos:end="187:22">(<expr pos:start="187:9" pos:end="187:21"><name pos:start="187:9" pos:end="187:21"><name pos:start="187:9" pos:end="187:9">s</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:21">draw_mouse</name></name></expr>)</condition><block type="pseudo" pos:start="189:9" pos:end="189:38"><block_content pos:start="189:9" pos:end="189:38">

        <expr_stmt pos:start="189:9" pos:end="189:38"><expr pos:start="189:9" pos:end="189:37"><call pos:start="189:9" pos:end="189:37"><name pos:start="189:9" pos:end="189:27">paint_mouse_pointer</name><argument_list pos:start="189:28" pos:end="189:37">(<argument pos:start="189:29" pos:end="189:33"><expr pos:start="189:29" pos:end="189:33"><name pos:start="189:29" pos:end="189:33">image</name></expr></argument>, <argument pos:start="189:36" pos:end="189:36"><expr pos:start="189:36" pos:end="189:36"><name pos:start="189:36" pos:end="189:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="193:5" pos:end="193:25">return <expr pos:start="193:12" pos:end="193:24"><name pos:start="193:12" pos:end="193:24"><name pos:start="193:12" pos:end="193:12">s</name><operator pos:start="193:13" pos:end="193:14">-&gt;</operator><name pos:start="193:15" pos:end="193:24">frame_size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
