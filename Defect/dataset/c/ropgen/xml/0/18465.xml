<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18465.c" pos:tabs="8"><function pos:start="1:1" pos:end="257:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">roqvideo_decode_frame</name><parameter_list pos:start="1:34" pos:end="1:49">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:44">RoqContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">ri</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="257:1">{<block_content pos:start="5:5" pos:end="255:5">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:25">chunk_id</name> <init pos:start="5:27" pos:end="5:29">= <expr pos:start="5:29" pos:end="5:29"><literal type="number" pos:start="5:29" pos:end="5:29">0</literal></expr></init></decl>, <decl pos:start="5:32" pos:end="5:44"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:32" pos:end="5:40">chunk_arg</name> <init pos:start="5:42" pos:end="5:44">= <expr pos:start="5:44" pos:end="5:44"><literal type="number" pos:start="5:44" pos:end="5:44">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">long</name></type> <name pos:start="7:19" pos:end="7:28">chunk_size</name> <init pos:start="7:30" pos:end="7:32">= <expr pos:start="7:32" pos:end="7:32"><literal type="number" pos:start="7:32" pos:end="7:32">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">k</name></decl>, <decl pos:start="9:18" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:20">nv1</name></decl>, <decl pos:start="9:23" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:23" pos:end="9:25">nv2</name></decl>, <decl pos:start="9:28" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:32">vqflg</name> <init pos:start="9:34" pos:end="9:36">= <expr pos:start="9:36" pos:end="9:36"><literal type="number" pos:start="9:36" pos:end="9:36">0</literal></expr></init></decl>, <decl pos:start="9:39" pos:end="9:52"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:39" pos:end="9:47">vqflg_pos</name> <init pos:start="9:49" pos:end="9:52">= <expr pos:start="9:51" pos:end="9:52"><operator pos:start="9:51" pos:end="9:51">-</operator><literal type="number" pos:start="9:52" pos:end="9:52">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">vqid</name></decl>, <decl pos:start="11:15" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:18">bpos</name></decl>, <decl pos:start="11:21" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:24">xpos</name></decl>, <decl pos:start="11:27" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:27" pos:end="11:30">ypos</name></decl>, <decl pos:start="11:33" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:33" pos:end="11:34">xp</name></decl>, <decl pos:start="11:37" pos:end="11:38"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:37" pos:end="11:38">yp</name></decl>, <decl pos:start="11:41" pos:end="11:41"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:41" pos:end="11:41">x</name></decl>, <decl pos:start="11:44" pos:end="11:44"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:44" pos:end="11:44">y</name></decl>, <decl pos:start="11:47" pos:end="11:48"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:47" pos:end="11:48">mx</name></decl>, <decl pos:start="11:51" pos:end="11:52"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:51" pos:end="11:52">my</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:19">frame_stats</name><index pos:start="13:20" pos:end="13:22">[<expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">2</literal></expr>]</index><index pos:start="13:23" pos:end="13:25">[<expr pos:start="13:24" pos:end="13:24"><literal type="number" pos:start="13:24" pos:end="13:24">4</literal></expr>]</index></name> <init pos:start="13:27" pos:end="13:37">= <expr pos:start="13:29" pos:end="13:37"><block pos:start="13:29" pos:end="13:37">{<expr pos:start="13:30" pos:end="13:32"><block pos:start="13:30" pos:end="13:32">{<expr pos:start="13:31" pos:end="13:31"><literal type="number" pos:start="13:31" pos:end="13:31">0</literal></expr>}</block></expr>,<expr pos:start="13:34" pos:end="13:36"><block pos:start="13:34" pos:end="13:36">{<expr pos:start="13:35" pos:end="13:35"><literal type="number" pos:start="13:35" pos:end="13:35">0</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">roq_qcell</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:20">qcell</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:39"><decl pos:start="17:5" pos:end="17:38"><type pos:start="17:5" pos:end="17:25"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:18">unsigned</name> <name pos:start="17:20" pos:end="17:23">char</name> <modifier pos:start="17:25" pos:end="17:25">*</modifier></type><name pos:start="17:26" pos:end="17:28">buf</name> <init pos:start="17:30" pos:end="17:38">= <expr pos:start="17:32" pos:end="17:38"><name pos:start="17:32" pos:end="17:38"><name pos:start="17:32" pos:end="17:33">ri</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:38">buf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:54"><decl pos:start="19:5" pos:end="19:53"><type pos:start="19:5" pos:end="19:25"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:18">unsigned</name> <name pos:start="19:20" pos:end="19:23">char</name> <modifier pos:start="19:25" pos:end="19:25">*</modifier></type><name pos:start="19:26" pos:end="19:32">buf_end</name> <init pos:start="19:34" pos:end="19:53">= <expr pos:start="19:36" pos:end="19:53"><name pos:start="19:36" pos:end="19:42"><name pos:start="19:36" pos:end="19:37">ri</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:42">buf</name></name> <operator pos:start="19:44" pos:end="19:44">+</operator> <name pos:start="19:46" pos:end="19:53"><name pos:start="19:46" pos:end="19:47">ri</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:53">size</name></name></expr></init></decl>;</decl_stmt>



    <while pos:start="23:5" pos:end="71:5">while <condition pos:start="23:11" pos:end="23:25">(<expr pos:start="23:12" pos:end="23:24"><name pos:start="23:12" pos:end="23:14">buf</name> <operator pos:start="23:16" pos:end="23:16">&lt;</operator> <name pos:start="23:18" pos:end="23:24">buf_end</name></expr>)</condition> <block pos:start="23:27" pos:end="71:5">{<block_content pos:start="25:9" pos:end="69:9">

        <expr_stmt pos:start="25:9" pos:end="25:45"><expr pos:start="25:9" pos:end="25:44"><name pos:start="25:9" pos:end="25:16">chunk_id</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <call pos:start="25:20" pos:end="25:44"><name pos:start="25:20" pos:end="25:38">bytestream_get_le16</name><argument_list pos:start="25:39" pos:end="25:44">(<argument pos:start="25:40" pos:end="25:43"><expr pos:start="25:40" pos:end="25:43"><operator pos:start="25:40" pos:end="25:40">&amp;</operator><name pos:start="25:41" pos:end="25:43">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:47"><expr pos:start="27:9" pos:end="27:46"><name pos:start="27:9" pos:end="27:18">chunk_size</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <call pos:start="27:22" pos:end="27:46"><name pos:start="27:22" pos:end="27:40">bytestream_get_le32</name><argument_list pos:start="27:41" pos:end="27:46">(<argument pos:start="27:42" pos:end="27:45"><expr pos:start="27:42" pos:end="27:45"><operator pos:start="27:42" pos:end="27:42">&amp;</operator><name pos:start="27:43" pos:end="27:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:46"><expr pos:start="29:9" pos:end="29:45"><name pos:start="29:9" pos:end="29:17">chunk_arg</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <call pos:start="29:21" pos:end="29:45"><name pos:start="29:21" pos:end="29:39">bytestream_get_le16</name><argument_list pos:start="29:40" pos:end="29:45">(<argument pos:start="29:41" pos:end="29:44"><expr pos:start="29:41" pos:end="29:44"><operator pos:start="29:41" pos:end="29:41">&amp;</operator><name pos:start="29:42" pos:end="29:44">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="35:18"><if pos:start="33:9" pos:end="35:18">if<condition pos:start="33:11" pos:end="33:35">(<expr pos:start="33:12" pos:end="33:34"><name pos:start="33:12" pos:end="33:19">chunk_id</name> <operator pos:start="33:21" pos:end="33:22">==</operator> <name pos:start="33:24" pos:end="33:34">RoQ_QUAD_VQ</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:18"><block_content pos:start="35:13" pos:end="35:18">

            <break pos:start="35:13" pos:end="35:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="69:9"><if pos:start="37:9" pos:end="69:9">if<condition pos:start="37:11" pos:end="37:41">(<expr pos:start="37:12" pos:end="37:40"><name pos:start="37:12" pos:end="37:19">chunk_id</name> <operator pos:start="37:21" pos:end="37:22">==</operator> <name pos:start="37:24" pos:end="37:40">RoQ_QUAD_CODEBOOK</name></expr>)</condition> <block pos:start="37:43" pos:end="69:9">{<block_content pos:start="39:13" pos:end="67:49">

            <if_stmt pos:start="39:13" pos:end="41:26"><if pos:start="39:13" pos:end="41:26">if<condition pos:start="39:15" pos:end="39:43">(<expr pos:start="39:16" pos:end="39:42"><operator pos:start="39:16" pos:end="39:16">(</operator><name pos:start="39:17" pos:end="39:19">nv1</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <name pos:start="39:23" pos:end="39:31">chunk_arg</name> <operator pos:start="39:33" pos:end="39:34">&gt;&gt;</operator> <literal type="number" pos:start="39:36" pos:end="39:36">8</literal><operator pos:start="39:37" pos:end="39:37">)</operator> <operator pos:start="39:39" pos:end="39:40">==</operator> <literal type="number" pos:start="39:42" pos:end="39:42">0</literal></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:26"><block_content pos:start="41:17" pos:end="41:26">

                <expr_stmt pos:start="41:17" pos:end="41:26"><expr pos:start="41:17" pos:end="41:25"><name pos:start="41:17" pos:end="41:19">nv1</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <literal type="number" pos:start="41:23" pos:end="41:25">256</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="43:13" pos:end="45:26"><if pos:start="43:13" pos:end="45:26">if<condition pos:start="43:15" pos:end="43:69">(<expr pos:start="43:16" pos:end="43:68"><operator pos:start="43:16" pos:end="43:16">(</operator><name pos:start="43:17" pos:end="43:19">nv2</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:31">chunk_arg</name> <operator pos:start="43:33" pos:end="43:33">&amp;</operator> <literal type="number" pos:start="43:35" pos:end="43:38">0xff</literal><operator pos:start="43:39" pos:end="43:39">)</operator> <operator pos:start="43:41" pos:end="43:42">==</operator> <literal type="number" pos:start="43:44" pos:end="43:44">0</literal> <operator pos:start="43:46" pos:end="43:47">&amp;&amp;</operator> <name pos:start="43:49" pos:end="43:51">nv1</name> <operator pos:start="43:53" pos:end="43:53">*</operator> <literal type="number" pos:start="43:55" pos:end="43:55">6</literal> <operator pos:start="43:57" pos:end="43:57">&lt;</operator> <name pos:start="43:59" pos:end="43:68">chunk_size</name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:26"><block_content pos:start="45:17" pos:end="45:26">

                <expr_stmt pos:start="45:17" pos:end="45:26"><expr pos:start="45:17" pos:end="45:25"><name pos:start="45:17" pos:end="45:19">nv2</name> <operator pos:start="45:21" pos:end="45:21">=</operator> <literal type="number" pos:start="45:23" pos:end="45:25">256</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <for pos:start="47:13" pos:end="61:13">for<control pos:start="47:16" pos:end="47:36">(<init pos:start="47:17" pos:end="47:22"><expr pos:start="47:17" pos:end="47:21"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <literal type="number" pos:start="47:21" pos:end="47:21">0</literal></expr>;</init> <condition pos:start="47:24" pos:end="47:31"><expr pos:start="47:24" pos:end="47:30"><name pos:start="47:24" pos:end="47:24">i</name> <operator pos:start="47:26" pos:end="47:26">&lt;</operator> <name pos:start="47:28" pos:end="47:30">nv1</name></expr>;</condition> <incr pos:start="47:33" pos:end="47:35"><expr pos:start="47:33" pos:end="47:35"><name pos:start="47:33" pos:end="47:33">i</name><operator pos:start="47:34" pos:end="47:35">++</operator></expr></incr>)</control> <block pos:start="47:38" pos:end="61:13">{<block_content pos:start="49:17" pos:end="59:40">

                <expr_stmt pos:start="49:17" pos:end="49:43"><expr pos:start="49:17" pos:end="49:42"><name pos:start="49:17" pos:end="49:28"><name pos:start="49:17" pos:end="49:18">ri</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:25">cb2x2</name><index pos:start="49:26" pos:end="49:28">[<expr pos:start="49:27" pos:end="49:27"><name pos:start="49:27" pos:end="49:27">i</name></expr>]</index></name><operator pos:start="49:29" pos:end="49:29">.</operator><name pos:start="49:30" pos:end="49:33"><name pos:start="49:30" pos:end="49:30">y</name><index pos:start="49:31" pos:end="49:33">[<expr pos:start="49:32" pos:end="49:32"><literal type="number" pos:start="49:32" pos:end="49:32">0</literal></expr>]</index></name> <operator pos:start="49:35" pos:end="49:35">=</operator> <operator pos:start="49:37" pos:end="49:37">*</operator><name pos:start="49:38" pos:end="49:40">buf</name><operator pos:start="49:41" pos:end="49:42">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:43"><expr pos:start="51:17" pos:end="51:42"><name pos:start="51:17" pos:end="51:28"><name pos:start="51:17" pos:end="51:18">ri</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:25">cb2x2</name><index pos:start="51:26" pos:end="51:28">[<expr pos:start="51:27" pos:end="51:27"><name pos:start="51:27" pos:end="51:27">i</name></expr>]</index></name><operator pos:start="51:29" pos:end="51:29">.</operator><name pos:start="51:30" pos:end="51:33"><name pos:start="51:30" pos:end="51:30">y</name><index pos:start="51:31" pos:end="51:33">[<expr pos:start="51:32" pos:end="51:32"><literal type="number" pos:start="51:32" pos:end="51:32">1</literal></expr>]</index></name> <operator pos:start="51:35" pos:end="51:35">=</operator> <operator pos:start="51:37" pos:end="51:37">*</operator><name pos:start="51:38" pos:end="51:40">buf</name><operator pos:start="51:41" pos:end="51:42">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:43"><expr pos:start="53:17" pos:end="53:42"><name pos:start="53:17" pos:end="53:28"><name pos:start="53:17" pos:end="53:18">ri</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:25">cb2x2</name><index pos:start="53:26" pos:end="53:28">[<expr pos:start="53:27" pos:end="53:27"><name pos:start="53:27" pos:end="53:27">i</name></expr>]</index></name><operator pos:start="53:29" pos:end="53:29">.</operator><name pos:start="53:30" pos:end="53:33"><name pos:start="53:30" pos:end="53:30">y</name><index pos:start="53:31" pos:end="53:33">[<expr pos:start="53:32" pos:end="53:32"><literal type="number" pos:start="53:32" pos:end="53:32">2</literal></expr>]</index></name> <operator pos:start="53:35" pos:end="53:35">=</operator> <operator pos:start="53:37" pos:end="53:37">*</operator><name pos:start="53:38" pos:end="53:40">buf</name><operator pos:start="53:41" pos:end="53:42">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:43"><expr pos:start="55:17" pos:end="55:42"><name pos:start="55:17" pos:end="55:28"><name pos:start="55:17" pos:end="55:18">ri</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:25">cb2x2</name><index pos:start="55:26" pos:end="55:28">[<expr pos:start="55:27" pos:end="55:27"><name pos:start="55:27" pos:end="55:27">i</name></expr>]</index></name><operator pos:start="55:29" pos:end="55:29">.</operator><name pos:start="55:30" pos:end="55:33"><name pos:start="55:30" pos:end="55:30">y</name><index pos:start="55:31" pos:end="55:33">[<expr pos:start="55:32" pos:end="55:32"><literal type="number" pos:start="55:32" pos:end="55:32">3</literal></expr>]</index></name> <operator pos:start="55:35" pos:end="55:35">=</operator> <operator pos:start="55:37" pos:end="55:37">*</operator><name pos:start="55:38" pos:end="55:40">buf</name><operator pos:start="55:41" pos:end="55:42">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:40"><expr pos:start="57:17" pos:end="57:39"><name pos:start="57:17" pos:end="57:28"><name pos:start="57:17" pos:end="57:18">ri</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:25">cb2x2</name><index pos:start="57:26" pos:end="57:28">[<expr pos:start="57:27" pos:end="57:27"><name pos:start="57:27" pos:end="57:27">i</name></expr>]</index></name><operator pos:start="57:29" pos:end="57:29">.</operator><name pos:start="57:30" pos:end="57:30">u</name> <operator pos:start="57:32" pos:end="57:32">=</operator> <operator pos:start="57:34" pos:end="57:34">*</operator><name pos:start="57:35" pos:end="57:37">buf</name><operator pos:start="57:38" pos:end="57:39">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:40"><expr pos:start="59:17" pos:end="59:39"><name pos:start="59:17" pos:end="59:28"><name pos:start="59:17" pos:end="59:18">ri</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:25">cb2x2</name><index pos:start="59:26" pos:end="59:28">[<expr pos:start="59:27" pos:end="59:27"><name pos:start="59:27" pos:end="59:27">i</name></expr>]</index></name><operator pos:start="59:29" pos:end="59:29">.</operator><name pos:start="59:30" pos:end="59:30">v</name> <operator pos:start="59:32" pos:end="59:32">=</operator> <operator pos:start="59:34" pos:end="59:34">*</operator><name pos:start="59:35" pos:end="59:37">buf</name><operator pos:start="59:38" pos:end="59:39">++</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="63:13" pos:end="67:49">for<control pos:start="63:16" pos:end="63:36">(<init pos:start="63:17" pos:end="63:22"><expr pos:start="63:17" pos:end="63:21"><name pos:start="63:17" pos:end="63:17">i</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <literal type="number" pos:start="63:21" pos:end="63:21">0</literal></expr>;</init> <condition pos:start="63:24" pos:end="63:31"><expr pos:start="63:24" pos:end="63:30"><name pos:start="63:24" pos:end="63:24">i</name> <operator pos:start="63:26" pos:end="63:26">&lt;</operator> <name pos:start="63:28" pos:end="63:30">nv2</name></expr>;</condition> <incr pos:start="63:33" pos:end="63:35"><expr pos:start="63:33" pos:end="63:35"><name pos:start="63:33" pos:end="63:33">i</name><operator pos:start="63:34" pos:end="63:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="65:17" pos:end="67:49"><block_content pos:start="65:17" pos:end="67:49">

                <for pos:start="65:17" pos:end="67:49">for<control pos:start="65:20" pos:end="65:38">(<init pos:start="65:21" pos:end="65:26"><expr pos:start="65:21" pos:end="65:25"><name pos:start="65:21" pos:end="65:21">j</name> <operator pos:start="65:23" pos:end="65:23">=</operator> <literal type="number" pos:start="65:25" pos:end="65:25">0</literal></expr>;</init> <condition pos:start="65:28" pos:end="65:33"><expr pos:start="65:28" pos:end="65:32"><name pos:start="65:28" pos:end="65:28">j</name> <operator pos:start="65:30" pos:end="65:30">&lt;</operator> <literal type="number" pos:start="65:32" pos:end="65:32">4</literal></expr>;</condition> <incr pos:start="65:35" pos:end="65:37"><expr pos:start="65:35" pos:end="65:37"><name pos:start="65:35" pos:end="65:35">j</name><operator pos:start="65:36" pos:end="65:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="67:21" pos:end="67:49"><block_content pos:start="67:21" pos:end="67:49">

                    <expr_stmt pos:start="67:21" pos:end="67:49"><expr pos:start="67:21" pos:end="67:48"><name pos:start="67:21" pos:end="67:32"><name pos:start="67:21" pos:end="67:22">ri</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:29">cb4x4</name><index pos:start="67:30" pos:end="67:32">[<expr pos:start="67:31" pos:end="67:31"><name pos:start="67:31" pos:end="67:31">i</name></expr>]</index></name><operator pos:start="67:33" pos:end="67:33">.</operator><name pos:start="67:34" pos:end="67:39"><name pos:start="67:34" pos:end="67:36">idx</name><index pos:start="67:37" pos:end="67:39">[<expr pos:start="67:38" pos:end="67:38"><name pos:start="67:38" pos:end="67:38">j</name></expr>]</index></name> <operator pos:start="67:41" pos:end="67:41">=</operator> <operator pos:start="67:43" pos:end="67:43">*</operator><name pos:start="67:44" pos:end="67:46">buf</name><operator pos:start="67:47" pos:end="67:48">++</operator></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="75:5" pos:end="75:27"><expr pos:start="75:5" pos:end="75:26"><name pos:start="75:5" pos:end="75:8">bpos</name> <operator pos:start="75:10" pos:end="75:10">=</operator> <name pos:start="75:12" pos:end="75:15">xpos</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <name pos:start="75:19" pos:end="75:22">ypos</name> <operator pos:start="75:24" pos:end="75:24">=</operator> <literal type="number" pos:start="75:26" pos:end="75:26">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:35">(<expr pos:start="77:9" pos:end="77:34"><name pos:start="77:9" pos:end="77:18">chunk_size</name> <operator pos:start="77:20" pos:end="77:20">&gt;</operator> <name pos:start="77:22" pos:end="77:28">buf_end</name> <operator pos:start="77:30" pos:end="77:30">-</operator> <name pos:start="77:32" pos:end="77:34">buf</name></expr>)</condition> <block pos:start="77:37" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:35">

        <expr_stmt pos:start="79:9" pos:end="79:80"><expr pos:start="79:9" pos:end="79:79"><call pos:start="79:9" pos:end="79:79"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:79">(<argument pos:start="79:16" pos:end="79:24"><expr pos:start="79:16" pos:end="79:24"><name pos:start="79:16" pos:end="79:24"><name pos:start="79:16" pos:end="79:17">ri</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:24">avctx</name></name></expr></argument>, <argument pos:start="79:27" pos:end="79:38"><expr pos:start="79:27" pos:end="79:38"><name pos:start="79:27" pos:end="79:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:41" pos:end="79:78"><expr pos:start="79:41" pos:end="79:78"><literal type="string" pos:start="79:41" pos:end="79:78">"Chunk does not fit in input buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:35"><expr pos:start="81:9" pos:end="81:34"><name pos:start="81:9" pos:end="81:18">chunk_size</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:28">buf_end</name> <operator pos:start="81:30" pos:end="81:30">-</operator> <name pos:start="81:32" pos:end="81:34">buf</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <while pos:start="85:5" pos:end="255:5">while<condition pos:start="85:10" pos:end="85:28">(<expr pos:start="85:11" pos:end="85:27"><name pos:start="85:11" pos:end="85:14">bpos</name> <operator pos:start="85:16" pos:end="85:16">&lt;</operator> <name pos:start="85:18" pos:end="85:27">chunk_size</name></expr>)</condition> <block pos:start="85:30" pos:end="255:5">{<block_content pos:start="87:9" pos:end="253:18">

        <for pos:start="87:9" pos:end="237:9">for <control pos:start="87:13" pos:end="87:48">(<init pos:start="87:14" pos:end="87:23"><expr pos:start="87:14" pos:end="87:22"><name pos:start="87:14" pos:end="87:15">yp</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <name pos:start="87:19" pos:end="87:22">ypos</name></expr>;</init> <condition pos:start="87:25" pos:end="87:39"><expr pos:start="87:25" pos:end="87:38"><name pos:start="87:25" pos:end="87:26">yp</name> <operator pos:start="87:28" pos:end="87:28">&lt;</operator> <name pos:start="87:30" pos:end="87:33">ypos</name> <operator pos:start="87:35" pos:end="87:35">+</operator> <literal type="number" pos:start="87:37" pos:end="87:38">16</literal></expr>;</condition> <incr pos:start="87:41" pos:end="87:47"><expr pos:start="87:41" pos:end="87:47"><name pos:start="87:41" pos:end="87:42">yp</name> <operator pos:start="87:44" pos:end="87:45">+=</operator> <literal type="number" pos:start="87:47" pos:end="87:47">8</literal></expr></incr>)</control><block type="pseudo" pos:start="89:13" pos:end="237:9"><block_content pos:start="89:13" pos:end="237:9">

            <for pos:start="89:13" pos:end="237:9">for <control pos:start="89:17" pos:end="89:52">(<init pos:start="89:18" pos:end="89:27"><expr pos:start="89:18" pos:end="89:26"><name pos:start="89:18" pos:end="89:19">xp</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:26">xpos</name></expr>;</init> <condition pos:start="89:29" pos:end="89:43"><expr pos:start="89:29" pos:end="89:42"><name pos:start="89:29" pos:end="89:30">xp</name> <operator pos:start="89:32" pos:end="89:32">&lt;</operator> <name pos:start="89:34" pos:end="89:37">xpos</name> <operator pos:start="89:39" pos:end="89:39">+</operator> <literal type="number" pos:start="89:41" pos:end="89:42">16</literal></expr>;</condition> <incr pos:start="89:45" pos:end="89:51"><expr pos:start="89:45" pos:end="89:51"><name pos:start="89:45" pos:end="89:46">xp</name> <operator pos:start="89:48" pos:end="89:49">+=</operator> <literal type="number" pos:start="89:51" pos:end="89:51">8</literal></expr></incr>)</control> <block pos:start="89:54" pos:end="237:9">{<block_content pos:start="91:17" pos:end="235:13">

                <if_stmt pos:start="91:17" pos:end="97:17"><if pos:start="91:17" pos:end="97:17">if <condition pos:start="91:20" pos:end="91:39">(<expr pos:start="91:21" pos:end="91:38"><name pos:start="91:21" pos:end="91:24">bpos</name> <operator pos:start="91:26" pos:end="91:27">&gt;=</operator> <name pos:start="91:29" pos:end="91:38">chunk_size</name></expr>)</condition> <block pos:start="91:41" pos:end="97:17">{<block_content pos:start="93:21" pos:end="95:27">

                    <expr_stmt pos:start="93:21" pos:end="93:80"><expr pos:start="93:21" pos:end="93:79"><call pos:start="93:21" pos:end="93:79"><name pos:start="93:21" pos:end="93:26">av_log</name><argument_list pos:start="93:27" pos:end="93:79">(<argument pos:start="93:28" pos:end="93:36"><expr pos:start="93:28" pos:end="93:36"><name pos:start="93:28" pos:end="93:36"><name pos:start="93:28" pos:end="93:29">ri</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:36">avctx</name></name></expr></argument>, <argument pos:start="93:39" pos:end="93:50"><expr pos:start="93:39" pos:end="93:50"><name pos:start="93:39" pos:end="93:50">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:53" pos:end="93:78"><expr pos:start="93:53" pos:end="93:78"><literal type="string" pos:start="93:53" pos:end="93:78">"Input buffer too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="95:21" pos:end="95:27">return;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="99:17" pos:end="105:17"><if pos:start="99:17" pos:end="105:17">if <condition pos:start="99:20" pos:end="99:34">(<expr pos:start="99:21" pos:end="99:33"><name pos:start="99:21" pos:end="99:29">vqflg_pos</name> <operator pos:start="99:31" pos:end="99:31">&lt;</operator> <literal type="number" pos:start="99:33" pos:end="99:33">0</literal></expr>)</condition> <block pos:start="99:36" pos:end="105:17">{<block_content pos:start="101:21" pos:end="103:34">

                    <expr_stmt pos:start="101:21" pos:end="101:40"><expr pos:start="101:21" pos:end="101:39"><name pos:start="101:21" pos:end="101:25">vqflg</name> <operator pos:start="101:27" pos:end="101:27">=</operator> <name pos:start="101:29" pos:end="101:39"><name pos:start="101:29" pos:end="101:31">buf</name><index pos:start="101:32" pos:end="101:39">[<expr pos:start="101:33" pos:end="101:38"><name pos:start="101:33" pos:end="101:36">bpos</name><operator pos:start="101:37" pos:end="101:38">++</operator></expr>]</index></name></expr>;</expr_stmt> <expr_stmt pos:start="101:42" pos:end="101:69"><expr pos:start="101:42" pos:end="101:68"><name pos:start="101:42" pos:end="101:46">vqflg</name> <operator pos:start="101:48" pos:end="101:49">|=</operator> <operator pos:start="101:51" pos:end="101:51">(</operator><name pos:start="101:52" pos:end="101:62"><name pos:start="101:52" pos:end="101:54">buf</name><index pos:start="101:55" pos:end="101:62">[<expr pos:start="101:56" pos:end="101:61"><name pos:start="101:56" pos:end="101:59">bpos</name><operator pos:start="101:60" pos:end="101:61">++</operator></expr>]</index></name> <operator pos:start="101:64" pos:end="101:65">&lt;&lt;</operator> <literal type="number" pos:start="101:67" pos:end="101:67">8</literal><operator pos:start="101:68" pos:end="101:68">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="103:21" pos:end="103:34"><expr pos:start="103:21" pos:end="103:33"><name pos:start="103:21" pos:end="103:29">vqflg_pos</name> <operator pos:start="103:31" pos:end="103:31">=</operator> <literal type="number" pos:start="103:33" pos:end="103:33">7</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:56"><expr pos:start="107:17" pos:end="107:55"><name pos:start="107:17" pos:end="107:20">vqid</name> <operator pos:start="107:22" pos:end="107:22">=</operator> <operator pos:start="107:24" pos:end="107:24">(</operator><name pos:start="107:25" pos:end="107:29">vqflg</name> <operator pos:start="107:31" pos:end="107:32">&gt;&gt;</operator> <operator pos:start="107:34" pos:end="107:34">(</operator><name pos:start="107:35" pos:end="107:43">vqflg_pos</name> <operator pos:start="107:45" pos:end="107:45">*</operator> <literal type="number" pos:start="107:47" pos:end="107:47">2</literal><operator pos:start="107:48" pos:end="107:48">)</operator><operator pos:start="107:49" pos:end="107:49">)</operator> <operator pos:start="107:51" pos:end="107:51">&amp;</operator> <literal type="number" pos:start="107:53" pos:end="107:55">0x3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:39"><expr pos:start="109:17" pos:end="109:38"><name pos:start="109:17" pos:end="109:36"><name pos:start="109:17" pos:end="109:27">frame_stats</name><index pos:start="109:28" pos:end="109:30">[<expr pos:start="109:29" pos:end="109:29"><literal type="number" pos:start="109:29" pos:end="109:29">0</literal></expr>]</index><index pos:start="109:31" pos:end="109:36">[<expr pos:start="109:32" pos:end="109:35"><name pos:start="109:32" pos:end="109:35">vqid</name></expr>]</index></name><operator pos:start="109:37" pos:end="109:38">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:28"><expr pos:start="111:17" pos:end="111:27"><name pos:start="111:17" pos:end="111:25">vqflg_pos</name><operator pos:start="111:26" pos:end="111:27">--</operator></expr>;</expr_stmt>



                <switch pos:start="115:17" pos:end="235:13">switch<condition pos:start="115:23" pos:end="115:28">(<expr pos:start="115:24" pos:end="115:27"><name pos:start="115:24" pos:end="115:27">vqid</name></expr>)</condition> <block pos:start="115:30" pos:end="235:13">{<block_content pos:start="117:17" pos:end="233:83">

                <case pos:start="117:17" pos:end="117:32">case <expr pos:start="117:22" pos:end="117:31"><name pos:start="117:22" pos:end="117:31">RoQ_ID_MOT</name></expr>:</case>

                    <break pos:start="119:21" pos:end="119:26">break;</break>

                <case pos:start="121:17" pos:end="121:32">case <expr pos:start="121:22" pos:end="121:31"><name pos:start="121:22" pos:end="121:31">RoQ_ID_FCC</name></expr>:</case>

                    <expr_stmt pos:start="123:21" pos:end="123:81"><expr pos:start="123:21" pos:end="123:80"><name pos:start="123:21" pos:end="123:22">mx</name> <operator pos:start="123:24" pos:end="123:24">=</operator> <literal type="number" pos:start="123:26" pos:end="123:28">8</literal> <operator pos:start="123:28" pos:end="123:28">-</operator> <operator pos:start="123:30" pos:end="123:30">(</operator><name pos:start="123:31" pos:end="123:39"><name pos:start="123:31" pos:end="123:33">buf</name><index pos:start="123:34" pos:end="123:39">[<expr pos:start="123:35" pos:end="123:38"><name pos:start="123:35" pos:end="123:38">bpos</name></expr>]</index></name> <operator pos:start="123:41" pos:end="123:42">&gt;&gt;</operator> <literal type="number" pos:start="123:44" pos:end="123:44">4</literal><operator pos:start="123:45" pos:end="123:45">)</operator> <operator pos:start="123:47" pos:end="123:47">-</operator> <operator pos:start="123:49" pos:end="123:49">(</operator><operator pos:start="123:50" pos:end="123:50">(</operator><name pos:start="123:51" pos:end="123:56">signed</name> <name pos:start="123:58" pos:end="123:61">char</name><operator pos:start="123:62" pos:end="123:62">)</operator> <operator pos:start="123:64" pos:end="123:64">(</operator><name pos:start="123:65" pos:end="123:73">chunk_arg</name> <operator pos:start="123:75" pos:end="123:76">&gt;&gt;</operator> <literal type="number" pos:start="123:78" pos:end="123:78">8</literal><operator pos:start="123:79" pos:end="123:79">)</operator><operator pos:start="123:80" pos:end="123:80">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="125:21" pos:end="125:77"><expr pos:start="125:21" pos:end="125:76"><name pos:start="125:21" pos:end="125:22">my</name> <operator pos:start="125:24" pos:end="125:24">=</operator> <literal type="number" pos:start="125:26" pos:end="125:28">8</literal> <operator pos:start="125:28" pos:end="125:28">-</operator> <operator pos:start="125:30" pos:end="125:30">(</operator><name pos:start="125:31" pos:end="125:41"><name pos:start="125:31" pos:end="125:33">buf</name><index pos:start="125:34" pos:end="125:41">[<expr pos:start="125:35" pos:end="125:40"><name pos:start="125:35" pos:end="125:38">bpos</name><operator pos:start="125:39" pos:end="125:40">++</operator></expr>]</index></name> <operator pos:start="125:43" pos:end="125:43">&amp;</operator> <literal type="number" pos:start="125:45" pos:end="125:47">0xf</literal><operator pos:start="125:48" pos:end="125:48">)</operator> <operator pos:start="125:50" pos:end="125:50">-</operator> <operator pos:start="125:52" pos:end="125:52">(</operator><operator pos:start="125:53" pos:end="125:53">(</operator><name pos:start="125:54" pos:end="125:59">signed</name> <name pos:start="125:61" pos:end="125:64">char</name><operator pos:start="125:65" pos:end="125:65">)</operator> <name pos:start="125:67" pos:end="125:75">chunk_arg</name><operator pos:start="125:76" pos:end="125:76">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="127:21" pos:end="127:60"><expr pos:start="127:21" pos:end="127:59"><call pos:start="127:21" pos:end="127:59"><name pos:start="127:21" pos:end="127:39">ff_apply_motion_8x8</name><argument_list pos:start="127:40" pos:end="127:59">(<argument pos:start="127:41" pos:end="127:42"><expr pos:start="127:41" pos:end="127:42"><name pos:start="127:41" pos:end="127:42">ri</name></expr></argument>, <argument pos:start="127:45" pos:end="127:46"><expr pos:start="127:45" pos:end="127:46"><name pos:start="127:45" pos:end="127:46">xp</name></expr></argument>, <argument pos:start="127:49" pos:end="127:50"><expr pos:start="127:49" pos:end="127:50"><name pos:start="127:49" pos:end="127:50">yp</name></expr></argument>, <argument pos:start="127:53" pos:end="127:54"><expr pos:start="127:53" pos:end="127:54"><name pos:start="127:53" pos:end="127:54">mx</name></expr></argument>, <argument pos:start="127:57" pos:end="127:58"><expr pos:start="127:57" pos:end="127:58"><name pos:start="127:57" pos:end="127:58">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="129:21" pos:end="129:26">break;</break>

                <case pos:start="131:17" pos:end="131:32">case <expr pos:start="131:22" pos:end="131:31"><name pos:start="131:22" pos:end="131:31">RoQ_ID_SLD</name></expr>:</case>

                    <expr_stmt pos:start="133:21" pos:end="133:52"><expr pos:start="133:21" pos:end="133:51"><name pos:start="133:21" pos:end="133:25">qcell</name> <operator pos:start="133:27" pos:end="133:27">=</operator> <name pos:start="133:29" pos:end="133:37"><name pos:start="133:29" pos:end="133:30">ri</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:37">cb4x4</name></name> <operator pos:start="133:39" pos:end="133:39">+</operator> <name pos:start="133:41" pos:end="133:51"><name pos:start="133:41" pos:end="133:43">buf</name><index pos:start="133:44" pos:end="133:51">[<expr pos:start="133:45" pos:end="133:50"><name pos:start="133:45" pos:end="133:48">bpos</name><operator pos:start="133:49" pos:end="133:50">++</operator></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="135:21" pos:end="135:79"><expr pos:start="135:21" pos:end="135:78"><call pos:start="135:21" pos:end="135:78"><name pos:start="135:21" pos:end="135:39">ff_apply_vector_4x4</name><argument_list pos:start="135:40" pos:end="135:78">(<argument pos:start="135:41" pos:end="135:42"><expr pos:start="135:41" pos:end="135:42"><name pos:start="135:41" pos:end="135:42">ri</name></expr></argument>, <argument pos:start="135:45" pos:end="135:46"><expr pos:start="135:45" pos:end="135:46"><name pos:start="135:45" pos:end="135:46">xp</name></expr></argument>, <argument pos:start="135:49" pos:end="135:50"><expr pos:start="135:49" pos:end="135:50"><name pos:start="135:49" pos:end="135:50">yp</name></expr></argument>, <argument pos:start="135:53" pos:end="135:77"><expr pos:start="135:53" pos:end="135:77"><name pos:start="135:53" pos:end="135:61"><name pos:start="135:53" pos:end="135:54">ri</name><operator pos:start="135:55" pos:end="135:56">-&gt;</operator><name pos:start="135:57" pos:end="135:61">cb2x2</name></name> <operator pos:start="135:63" pos:end="135:63">+</operator> <name pos:start="135:65" pos:end="135:77"><name pos:start="135:65" pos:end="135:69">qcell</name><operator pos:start="135:70" pos:end="135:71">-&gt;</operator><name pos:start="135:72" pos:end="135:74">idx</name><index pos:start="135:75" pos:end="135:77">[<expr pos:start="135:76" pos:end="135:76"><literal type="number" pos:start="135:76" pos:end="135:76">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="137:21" pos:end="137:81"><expr pos:start="137:21" pos:end="137:80"><call pos:start="137:21" pos:end="137:80"><name pos:start="137:21" pos:end="137:39">ff_apply_vector_4x4</name><argument_list pos:start="137:40" pos:end="137:80">(<argument pos:start="137:41" pos:end="137:42"><expr pos:start="137:41" pos:end="137:42"><name pos:start="137:41" pos:end="137:42">ri</name></expr></argument>, <argument pos:start="137:45" pos:end="137:48"><expr pos:start="137:45" pos:end="137:48"><name pos:start="137:45" pos:end="137:46">xp</name><operator pos:start="137:47" pos:end="137:47">+</operator><literal type="number" pos:start="137:48" pos:end="137:48">4</literal></expr></argument>, <argument pos:start="137:51" pos:end="137:52"><expr pos:start="137:51" pos:end="137:52"><name pos:start="137:51" pos:end="137:52">yp</name></expr></argument>, <argument pos:start="137:55" pos:end="137:79"><expr pos:start="137:55" pos:end="137:79"><name pos:start="137:55" pos:end="137:63"><name pos:start="137:55" pos:end="137:56">ri</name><operator pos:start="137:57" pos:end="137:58">-&gt;</operator><name pos:start="137:59" pos:end="137:63">cb2x2</name></name> <operator pos:start="137:65" pos:end="137:65">+</operator> <name pos:start="137:67" pos:end="137:79"><name pos:start="137:67" pos:end="137:71">qcell</name><operator pos:start="137:72" pos:end="137:73">-&gt;</operator><name pos:start="137:74" pos:end="137:76">idx</name><index pos:start="137:77" pos:end="137:79">[<expr pos:start="137:78" pos:end="137:78"><literal type="number" pos:start="137:78" pos:end="137:78">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="139:21" pos:end="139:81"><expr pos:start="139:21" pos:end="139:80"><call pos:start="139:21" pos:end="139:80"><name pos:start="139:21" pos:end="139:39">ff_apply_vector_4x4</name><argument_list pos:start="139:40" pos:end="139:80">(<argument pos:start="139:41" pos:end="139:42"><expr pos:start="139:41" pos:end="139:42"><name pos:start="139:41" pos:end="139:42">ri</name></expr></argument>, <argument pos:start="139:45" pos:end="139:46"><expr pos:start="139:45" pos:end="139:46"><name pos:start="139:45" pos:end="139:46">xp</name></expr></argument>, <argument pos:start="139:49" pos:end="139:52"><expr pos:start="139:49" pos:end="139:52"><name pos:start="139:49" pos:end="139:50">yp</name><operator pos:start="139:51" pos:end="139:51">+</operator><literal type="number" pos:start="139:52" pos:end="139:52">4</literal></expr></argument>, <argument pos:start="139:55" pos:end="139:79"><expr pos:start="139:55" pos:end="139:79"><name pos:start="139:55" pos:end="139:63"><name pos:start="139:55" pos:end="139:56">ri</name><operator pos:start="139:57" pos:end="139:58">-&gt;</operator><name pos:start="139:59" pos:end="139:63">cb2x2</name></name> <operator pos:start="139:65" pos:end="139:65">+</operator> <name pos:start="139:67" pos:end="139:79"><name pos:start="139:67" pos:end="139:71">qcell</name><operator pos:start="139:72" pos:end="139:73">-&gt;</operator><name pos:start="139:74" pos:end="139:76">idx</name><index pos:start="139:77" pos:end="139:79">[<expr pos:start="139:78" pos:end="139:78"><literal type="number" pos:start="139:78" pos:end="139:78">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="141:21" pos:end="141:83"><expr pos:start="141:21" pos:end="141:82"><call pos:start="141:21" pos:end="141:82"><name pos:start="141:21" pos:end="141:39">ff_apply_vector_4x4</name><argument_list pos:start="141:40" pos:end="141:82">(<argument pos:start="141:41" pos:end="141:42"><expr pos:start="141:41" pos:end="141:42"><name pos:start="141:41" pos:end="141:42">ri</name></expr></argument>, <argument pos:start="141:45" pos:end="141:48"><expr pos:start="141:45" pos:end="141:48"><name pos:start="141:45" pos:end="141:46">xp</name><operator pos:start="141:47" pos:end="141:47">+</operator><literal type="number" pos:start="141:48" pos:end="141:48">4</literal></expr></argument>, <argument pos:start="141:51" pos:end="141:54"><expr pos:start="141:51" pos:end="141:54"><name pos:start="141:51" pos:end="141:52">yp</name><operator pos:start="141:53" pos:end="141:53">+</operator><literal type="number" pos:start="141:54" pos:end="141:54">4</literal></expr></argument>, <argument pos:start="141:57" pos:end="141:81"><expr pos:start="141:57" pos:end="141:81"><name pos:start="141:57" pos:end="141:65"><name pos:start="141:57" pos:end="141:58">ri</name><operator pos:start="141:59" pos:end="141:60">-&gt;</operator><name pos:start="141:61" pos:end="141:65">cb2x2</name></name> <operator pos:start="141:67" pos:end="141:67">+</operator> <name pos:start="141:69" pos:end="141:81"><name pos:start="141:69" pos:end="141:73">qcell</name><operator pos:start="141:74" pos:end="141:75">-&gt;</operator><name pos:start="141:76" pos:end="141:78">idx</name><index pos:start="141:79" pos:end="141:81">[<expr pos:start="141:80" pos:end="141:80"><literal type="number" pos:start="141:80" pos:end="141:80">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="143:21" pos:end="143:26">break;</break>

                <case pos:start="145:17" pos:end="145:32">case <expr pos:start="145:22" pos:end="145:31"><name pos:start="145:22" pos:end="145:31">RoQ_ID_CCC</name></expr>:</case>

                    <for pos:start="147:21" pos:end="227:21">for <control pos:start="147:25" pos:end="147:43">(<init pos:start="147:26" pos:end="147:31"><expr pos:start="147:26" pos:end="147:30"><name pos:start="147:26" pos:end="147:26">k</name> <operator pos:start="147:28" pos:end="147:28">=</operator> <literal type="number" pos:start="147:30" pos:end="147:30">0</literal></expr>;</init> <condition pos:start="147:33" pos:end="147:38"><expr pos:start="147:33" pos:end="147:37"><name pos:start="147:33" pos:end="147:33">k</name> <operator pos:start="147:35" pos:end="147:35">&lt;</operator> <literal type="number" pos:start="147:37" pos:end="147:37">4</literal></expr>;</condition> <incr pos:start="147:40" pos:end="147:42"><expr pos:start="147:40" pos:end="147:42"><name pos:start="147:40" pos:end="147:40">k</name><operator pos:start="147:41" pos:end="147:42">++</operator></expr></incr>)</control> <block pos:start="147:45" pos:end="227:21">{<block_content pos:start="149:25" pos:end="225:25">

                        <expr_stmt pos:start="149:25" pos:end="149:31"><expr pos:start="149:25" pos:end="149:30"><name pos:start="149:25" pos:end="149:25">x</name> <operator pos:start="149:27" pos:end="149:27">=</operator> <name pos:start="149:29" pos:end="149:30">xp</name></expr>;</expr_stmt> <expr_stmt pos:start="149:33" pos:end="149:39"><expr pos:start="149:33" pos:end="149:38"><name pos:start="149:33" pos:end="149:33">y</name> <operator pos:start="149:35" pos:end="149:35">=</operator> <name pos:start="149:37" pos:end="149:38">yp</name></expr>;</expr_stmt>

                        <if_stmt pos:start="151:25" pos:end="151:44"><if pos:start="151:25" pos:end="151:44">if<condition pos:start="151:27" pos:end="151:36">(<expr pos:start="151:28" pos:end="151:35"><name pos:start="151:28" pos:end="151:28">k</name> <operator pos:start="151:30" pos:end="151:30">&amp;</operator> <literal type="number" pos:start="151:32" pos:end="151:35">0x01</literal></expr>)</condition><block type="pseudo" pos:start="151:38" pos:end="151:44"><block_content pos:start="151:38" pos:end="151:44"> <expr_stmt pos:start="151:38" pos:end="151:44"><expr pos:start="151:38" pos:end="151:43"><name pos:start="151:38" pos:end="151:38">x</name> <operator pos:start="151:40" pos:end="151:41">+=</operator> <literal type="number" pos:start="151:43" pos:end="151:43">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="153:25" pos:end="153:44"><if pos:start="153:25" pos:end="153:44">if<condition pos:start="153:27" pos:end="153:36">(<expr pos:start="153:28" pos:end="153:35"><name pos:start="153:28" pos:end="153:28">k</name> <operator pos:start="153:30" pos:end="153:30">&amp;</operator> <literal type="number" pos:start="153:32" pos:end="153:35">0x02</literal></expr>)</condition><block type="pseudo" pos:start="153:38" pos:end="153:44"><block_content pos:start="153:38" pos:end="153:44"> <expr_stmt pos:start="153:38" pos:end="153:44"><expr pos:start="153:38" pos:end="153:43"><name pos:start="153:38" pos:end="153:38">y</name> <operator pos:start="153:40" pos:end="153:41">+=</operator> <literal type="number" pos:start="153:43" pos:end="153:43">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                        <if_stmt pos:start="157:25" pos:end="163:25"><if pos:start="157:25" pos:end="163:25">if <condition pos:start="157:28" pos:end="157:47">(<expr pos:start="157:29" pos:end="157:46"><name pos:start="157:29" pos:end="157:32">bpos</name> <operator pos:start="157:34" pos:end="157:35">&gt;=</operator> <name pos:start="157:37" pos:end="157:46">chunk_size</name></expr>)</condition> <block pos:start="157:49" pos:end="163:25">{<block_content pos:start="159:29" pos:end="161:35">

                            <expr_stmt pos:start="159:29" pos:end="159:88"><expr pos:start="159:29" pos:end="159:87"><call pos:start="159:29" pos:end="159:87"><name pos:start="159:29" pos:end="159:34">av_log</name><argument_list pos:start="159:35" pos:end="159:87">(<argument pos:start="159:36" pos:end="159:44"><expr pos:start="159:36" pos:end="159:44"><name pos:start="159:36" pos:end="159:44"><name pos:start="159:36" pos:end="159:37">ri</name><operator pos:start="159:38" pos:end="159:39">-&gt;</operator><name pos:start="159:40" pos:end="159:44">avctx</name></name></expr></argument>, <argument pos:start="159:47" pos:end="159:58"><expr pos:start="159:47" pos:end="159:58"><name pos:start="159:47" pos:end="159:58">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="159:61" pos:end="159:86"><expr pos:start="159:61" pos:end="159:86"><literal type="string" pos:start="159:61" pos:end="159:86">"Input buffer too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="161:29" pos:end="161:35">return;</return>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="165:25" pos:end="173:25"><if pos:start="165:25" pos:end="173:25">if <condition pos:start="165:28" pos:end="165:42">(<expr pos:start="165:29" pos:end="165:41"><name pos:start="165:29" pos:end="165:37">vqflg_pos</name> <operator pos:start="165:39" pos:end="165:39">&lt;</operator> <literal type="number" pos:start="165:41" pos:end="165:41">0</literal></expr>)</condition> <block pos:start="165:44" pos:end="173:25">{<block_content pos:start="167:29" pos:end="171:42">

                            <expr_stmt pos:start="167:29" pos:end="167:48"><expr pos:start="167:29" pos:end="167:47"><name pos:start="167:29" pos:end="167:33">vqflg</name> <operator pos:start="167:35" pos:end="167:35">=</operator> <name pos:start="167:37" pos:end="167:47"><name pos:start="167:37" pos:end="167:39">buf</name><index pos:start="167:40" pos:end="167:47">[<expr pos:start="167:41" pos:end="167:46"><name pos:start="167:41" pos:end="167:44">bpos</name><operator pos:start="167:45" pos:end="167:46">++</operator></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="169:29" pos:end="169:56"><expr pos:start="169:29" pos:end="169:55"><name pos:start="169:29" pos:end="169:33">vqflg</name> <operator pos:start="169:35" pos:end="169:36">|=</operator> <operator pos:start="169:38" pos:end="169:38">(</operator><name pos:start="169:39" pos:end="169:49"><name pos:start="169:39" pos:end="169:41">buf</name><index pos:start="169:42" pos:end="169:49">[<expr pos:start="169:43" pos:end="169:48"><name pos:start="169:43" pos:end="169:46">bpos</name><operator pos:start="169:47" pos:end="169:48">++</operator></expr>]</index></name> <operator pos:start="169:51" pos:end="169:52">&lt;&lt;</operator> <literal type="number" pos:start="169:54" pos:end="169:54">8</literal><operator pos:start="169:55" pos:end="169:55">)</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="171:29" pos:end="171:42"><expr pos:start="171:29" pos:end="171:41"><name pos:start="171:29" pos:end="171:37">vqflg_pos</name> <operator pos:start="171:39" pos:end="171:39">=</operator> <literal type="number" pos:start="171:41" pos:end="171:41">7</literal></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="175:25" pos:end="175:64"><expr pos:start="175:25" pos:end="175:63"><name pos:start="175:25" pos:end="175:28">vqid</name> <operator pos:start="175:30" pos:end="175:30">=</operator> <operator pos:start="175:32" pos:end="175:32">(</operator><name pos:start="175:33" pos:end="175:37">vqflg</name> <operator pos:start="175:39" pos:end="175:40">&gt;&gt;</operator> <operator pos:start="175:42" pos:end="175:42">(</operator><name pos:start="175:43" pos:end="175:51">vqflg_pos</name> <operator pos:start="175:53" pos:end="175:53">*</operator> <literal type="number" pos:start="175:55" pos:end="175:55">2</literal><operator pos:start="175:56" pos:end="175:56">)</operator><operator pos:start="175:57" pos:end="175:57">)</operator> <operator pos:start="175:59" pos:end="175:59">&amp;</operator> <literal type="number" pos:start="175:61" pos:end="175:63">0x3</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="177:25" pos:end="177:47"><expr pos:start="177:25" pos:end="177:46"><name pos:start="177:25" pos:end="177:44"><name pos:start="177:25" pos:end="177:35">frame_stats</name><index pos:start="177:36" pos:end="177:38">[<expr pos:start="177:37" pos:end="177:37"><literal type="number" pos:start="177:37" pos:end="177:37">1</literal></expr>]</index><index pos:start="177:39" pos:end="177:44">[<expr pos:start="177:40" pos:end="177:43"><name pos:start="177:40" pos:end="177:43">vqid</name></expr>]</index></name><operator pos:start="177:45" pos:end="177:46">++</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="179:25" pos:end="179:36"><expr pos:start="179:25" pos:end="179:35"><name pos:start="179:25" pos:end="179:33">vqflg_pos</name><operator pos:start="179:34" pos:end="179:35">--</operator></expr>;</expr_stmt>

                        <switch pos:start="181:25" pos:end="225:25">switch<condition pos:start="181:31" pos:end="181:36">(<expr pos:start="181:32" pos:end="181:35"><name pos:start="181:32" pos:end="181:35">vqid</name></expr>)</condition> <block pos:start="181:38" pos:end="225:25">{<block_content pos:start="183:25" pos:end="223:34">

                        <case pos:start="183:25" pos:end="183:40">case <expr pos:start="183:30" pos:end="183:39"><name pos:start="183:30" pos:end="183:39">RoQ_ID_MOT</name></expr>:</case>

                            <break pos:start="185:29" pos:end="185:34">break;</break>

                        <case pos:start="187:25" pos:end="187:40">case <expr pos:start="187:30" pos:end="187:39"><name pos:start="187:30" pos:end="187:39">RoQ_ID_FCC</name></expr>:</case>

                            <expr_stmt pos:start="189:29" pos:end="189:89"><expr pos:start="189:29" pos:end="189:88"><name pos:start="189:29" pos:end="189:30">mx</name> <operator pos:start="189:32" pos:end="189:32">=</operator> <literal type="number" pos:start="189:34" pos:end="189:36">8</literal> <operator pos:start="189:36" pos:end="189:36">-</operator> <operator pos:start="189:38" pos:end="189:38">(</operator><name pos:start="189:39" pos:end="189:47"><name pos:start="189:39" pos:end="189:41">buf</name><index pos:start="189:42" pos:end="189:47">[<expr pos:start="189:43" pos:end="189:46"><name pos:start="189:43" pos:end="189:46">bpos</name></expr>]</index></name> <operator pos:start="189:49" pos:end="189:50">&gt;&gt;</operator> <literal type="number" pos:start="189:52" pos:end="189:52">4</literal><operator pos:start="189:53" pos:end="189:53">)</operator> <operator pos:start="189:55" pos:end="189:55">-</operator> <operator pos:start="189:57" pos:end="189:57">(</operator><operator pos:start="189:58" pos:end="189:58">(</operator><name pos:start="189:59" pos:end="189:64">signed</name> <name pos:start="189:66" pos:end="189:69">char</name><operator pos:start="189:70" pos:end="189:70">)</operator> <operator pos:start="189:72" pos:end="189:72">(</operator><name pos:start="189:73" pos:end="189:81">chunk_arg</name> <operator pos:start="189:83" pos:end="189:84">&gt;&gt;</operator> <literal type="number" pos:start="189:86" pos:end="189:86">8</literal><operator pos:start="189:87" pos:end="189:87">)</operator><operator pos:start="189:88" pos:end="189:88">)</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="191:29" pos:end="191:85"><expr pos:start="191:29" pos:end="191:84"><name pos:start="191:29" pos:end="191:30">my</name> <operator pos:start="191:32" pos:end="191:32">=</operator> <literal type="number" pos:start="191:34" pos:end="191:36">8</literal> <operator pos:start="191:36" pos:end="191:36">-</operator> <operator pos:start="191:38" pos:end="191:38">(</operator><name pos:start="191:39" pos:end="191:49"><name pos:start="191:39" pos:end="191:41">buf</name><index pos:start="191:42" pos:end="191:49">[<expr pos:start="191:43" pos:end="191:48"><name pos:start="191:43" pos:end="191:46">bpos</name><operator pos:start="191:47" pos:end="191:48">++</operator></expr>]</index></name> <operator pos:start="191:51" pos:end="191:51">&amp;</operator> <literal type="number" pos:start="191:53" pos:end="191:55">0xf</literal><operator pos:start="191:56" pos:end="191:56">)</operator> <operator pos:start="191:58" pos:end="191:58">-</operator> <operator pos:start="191:60" pos:end="191:60">(</operator><operator pos:start="191:61" pos:end="191:61">(</operator><name pos:start="191:62" pos:end="191:67">signed</name> <name pos:start="191:69" pos:end="191:72">char</name><operator pos:start="191:73" pos:end="191:73">)</operator> <name pos:start="191:75" pos:end="191:83">chunk_arg</name><operator pos:start="191:84" pos:end="191:84">)</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="193:29" pos:end="193:66"><expr pos:start="193:29" pos:end="193:65"><call pos:start="193:29" pos:end="193:65"><name pos:start="193:29" pos:end="193:47">ff_apply_motion_4x4</name><argument_list pos:start="193:48" pos:end="193:65">(<argument pos:start="193:49" pos:end="193:50"><expr pos:start="193:49" pos:end="193:50"><name pos:start="193:49" pos:end="193:50">ri</name></expr></argument>, <argument pos:start="193:53" pos:end="193:53"><expr pos:start="193:53" pos:end="193:53"><name pos:start="193:53" pos:end="193:53">x</name></expr></argument>, <argument pos:start="193:56" pos:end="193:56"><expr pos:start="193:56" pos:end="193:56"><name pos:start="193:56" pos:end="193:56">y</name></expr></argument>, <argument pos:start="193:59" pos:end="193:60"><expr pos:start="193:59" pos:end="193:60"><name pos:start="193:59" pos:end="193:60">mx</name></expr></argument>, <argument pos:start="193:63" pos:end="193:64"><expr pos:start="193:63" pos:end="193:64"><name pos:start="193:63" pos:end="193:64">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="195:29" pos:end="195:34">break;</break>

                        <case pos:start="197:25" pos:end="197:40">case <expr pos:start="197:30" pos:end="197:39"><name pos:start="197:30" pos:end="197:39">RoQ_ID_SLD</name></expr>:</case>

                            <expr_stmt pos:start="199:29" pos:end="199:60"><expr pos:start="199:29" pos:end="199:59"><name pos:start="199:29" pos:end="199:33">qcell</name> <operator pos:start="199:35" pos:end="199:35">=</operator> <name pos:start="199:37" pos:end="199:45"><name pos:start="199:37" pos:end="199:38">ri</name><operator pos:start="199:39" pos:end="199:40">-&gt;</operator><name pos:start="199:41" pos:end="199:45">cb4x4</name></name> <operator pos:start="199:47" pos:end="199:47">+</operator> <name pos:start="199:49" pos:end="199:59"><name pos:start="199:49" pos:end="199:51">buf</name><index pos:start="199:52" pos:end="199:59">[<expr pos:start="199:53" pos:end="199:58"><name pos:start="199:53" pos:end="199:56">bpos</name><operator pos:start="199:57" pos:end="199:58">++</operator></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="201:29" pos:end="201:85"><expr pos:start="201:29" pos:end="201:84"><call pos:start="201:29" pos:end="201:84"><name pos:start="201:29" pos:end="201:47">ff_apply_vector_2x2</name><argument_list pos:start="201:48" pos:end="201:84">(<argument pos:start="201:49" pos:end="201:50"><expr pos:start="201:49" pos:end="201:50"><name pos:start="201:49" pos:end="201:50">ri</name></expr></argument>, <argument pos:start="201:53" pos:end="201:53"><expr pos:start="201:53" pos:end="201:53"><name pos:start="201:53" pos:end="201:53">x</name></expr></argument>, <argument pos:start="201:56" pos:end="201:56"><expr pos:start="201:56" pos:end="201:56"><name pos:start="201:56" pos:end="201:56">y</name></expr></argument>, <argument pos:start="201:59" pos:end="201:83"><expr pos:start="201:59" pos:end="201:83"><name pos:start="201:59" pos:end="201:67"><name pos:start="201:59" pos:end="201:60">ri</name><operator pos:start="201:61" pos:end="201:62">-&gt;</operator><name pos:start="201:63" pos:end="201:67">cb2x2</name></name> <operator pos:start="201:69" pos:end="201:69">+</operator> <name pos:start="201:71" pos:end="201:83"><name pos:start="201:71" pos:end="201:75">qcell</name><operator pos:start="201:76" pos:end="201:77">-&gt;</operator><name pos:start="201:78" pos:end="201:80">idx</name><index pos:start="201:81" pos:end="201:83">[<expr pos:start="201:82" pos:end="201:82"><literal type="number" pos:start="201:82" pos:end="201:82">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="203:29" pos:end="203:87"><expr pos:start="203:29" pos:end="203:86"><call pos:start="203:29" pos:end="203:86"><name pos:start="203:29" pos:end="203:47">ff_apply_vector_2x2</name><argument_list pos:start="203:48" pos:end="203:86">(<argument pos:start="203:49" pos:end="203:50"><expr pos:start="203:49" pos:end="203:50"><name pos:start="203:49" pos:end="203:50">ri</name></expr></argument>, <argument pos:start="203:53" pos:end="203:55"><expr pos:start="203:53" pos:end="203:55"><name pos:start="203:53" pos:end="203:53">x</name><operator pos:start="203:54" pos:end="203:54">+</operator><literal type="number" pos:start="203:55" pos:end="203:55">2</literal></expr></argument>, <argument pos:start="203:58" pos:end="203:58"><expr pos:start="203:58" pos:end="203:58"><name pos:start="203:58" pos:end="203:58">y</name></expr></argument>, <argument pos:start="203:61" pos:end="203:85"><expr pos:start="203:61" pos:end="203:85"><name pos:start="203:61" pos:end="203:69"><name pos:start="203:61" pos:end="203:62">ri</name><operator pos:start="203:63" pos:end="203:64">-&gt;</operator><name pos:start="203:65" pos:end="203:69">cb2x2</name></name> <operator pos:start="203:71" pos:end="203:71">+</operator> <name pos:start="203:73" pos:end="203:85"><name pos:start="203:73" pos:end="203:77">qcell</name><operator pos:start="203:78" pos:end="203:79">-&gt;</operator><name pos:start="203:80" pos:end="203:82">idx</name><index pos:start="203:83" pos:end="203:85">[<expr pos:start="203:84" pos:end="203:84"><literal type="number" pos:start="203:84" pos:end="203:84">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="205:29" pos:end="205:87"><expr pos:start="205:29" pos:end="205:86"><call pos:start="205:29" pos:end="205:86"><name pos:start="205:29" pos:end="205:47">ff_apply_vector_2x2</name><argument_list pos:start="205:48" pos:end="205:86">(<argument pos:start="205:49" pos:end="205:50"><expr pos:start="205:49" pos:end="205:50"><name pos:start="205:49" pos:end="205:50">ri</name></expr></argument>, <argument pos:start="205:53" pos:end="205:53"><expr pos:start="205:53" pos:end="205:53"><name pos:start="205:53" pos:end="205:53">x</name></expr></argument>, <argument pos:start="205:56" pos:end="205:58"><expr pos:start="205:56" pos:end="205:58"><name pos:start="205:56" pos:end="205:56">y</name><operator pos:start="205:57" pos:end="205:57">+</operator><literal type="number" pos:start="205:58" pos:end="205:58">2</literal></expr></argument>, <argument pos:start="205:61" pos:end="205:85"><expr pos:start="205:61" pos:end="205:85"><name pos:start="205:61" pos:end="205:69"><name pos:start="205:61" pos:end="205:62">ri</name><operator pos:start="205:63" pos:end="205:64">-&gt;</operator><name pos:start="205:65" pos:end="205:69">cb2x2</name></name> <operator pos:start="205:71" pos:end="205:71">+</operator> <name pos:start="205:73" pos:end="205:85"><name pos:start="205:73" pos:end="205:77">qcell</name><operator pos:start="205:78" pos:end="205:79">-&gt;</operator><name pos:start="205:80" pos:end="205:82">idx</name><index pos:start="205:83" pos:end="205:85">[<expr pos:start="205:84" pos:end="205:84"><literal type="number" pos:start="205:84" pos:end="205:84">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="207:29" pos:end="207:89"><expr pos:start="207:29" pos:end="207:88"><call pos:start="207:29" pos:end="207:88"><name pos:start="207:29" pos:end="207:47">ff_apply_vector_2x2</name><argument_list pos:start="207:48" pos:end="207:88">(<argument pos:start="207:49" pos:end="207:50"><expr pos:start="207:49" pos:end="207:50"><name pos:start="207:49" pos:end="207:50">ri</name></expr></argument>, <argument pos:start="207:53" pos:end="207:55"><expr pos:start="207:53" pos:end="207:55"><name pos:start="207:53" pos:end="207:53">x</name><operator pos:start="207:54" pos:end="207:54">+</operator><literal type="number" pos:start="207:55" pos:end="207:55">2</literal></expr></argument>, <argument pos:start="207:58" pos:end="207:60"><expr pos:start="207:58" pos:end="207:60"><name pos:start="207:58" pos:end="207:58">y</name><operator pos:start="207:59" pos:end="207:59">+</operator><literal type="number" pos:start="207:60" pos:end="207:60">2</literal></expr></argument>, <argument pos:start="207:63" pos:end="207:87"><expr pos:start="207:63" pos:end="207:87"><name pos:start="207:63" pos:end="207:71"><name pos:start="207:63" pos:end="207:64">ri</name><operator pos:start="207:65" pos:end="207:66">-&gt;</operator><name pos:start="207:67" pos:end="207:71">cb2x2</name></name> <operator pos:start="207:73" pos:end="207:73">+</operator> <name pos:start="207:75" pos:end="207:87"><name pos:start="207:75" pos:end="207:79">qcell</name><operator pos:start="207:80" pos:end="207:81">-&gt;</operator><name pos:start="207:82" pos:end="207:84">idx</name><index pos:start="207:85" pos:end="207:87">[<expr pos:start="207:86" pos:end="207:86"><literal type="number" pos:start="207:86" pos:end="207:86">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="209:29" pos:end="209:34">break;</break>

                        <case pos:start="211:25" pos:end="211:40">case <expr pos:start="211:30" pos:end="211:39"><name pos:start="211:30" pos:end="211:39">RoQ_ID_CCC</name></expr>:</case>

                            <expr_stmt pos:start="213:29" pos:end="213:81"><expr pos:start="213:29" pos:end="213:80"><call pos:start="213:29" pos:end="213:80"><name pos:start="213:29" pos:end="213:47">ff_apply_vector_2x2</name><argument_list pos:start="213:48" pos:end="213:80">(<argument pos:start="213:49" pos:end="213:50"><expr pos:start="213:49" pos:end="213:50"><name pos:start="213:49" pos:end="213:50">ri</name></expr></argument>, <argument pos:start="213:53" pos:end="213:53"><expr pos:start="213:53" pos:end="213:53"><name pos:start="213:53" pos:end="213:53">x</name></expr></argument>, <argument pos:start="213:56" pos:end="213:56"><expr pos:start="213:56" pos:end="213:56"><name pos:start="213:56" pos:end="213:56">y</name></expr></argument>, <argument pos:start="213:59" pos:end="213:79"><expr pos:start="213:59" pos:end="213:79"><name pos:start="213:59" pos:end="213:67"><name pos:start="213:59" pos:end="213:60">ri</name><operator pos:start="213:61" pos:end="213:62">-&gt;</operator><name pos:start="213:63" pos:end="213:67">cb2x2</name></name> <operator pos:start="213:69" pos:end="213:69">+</operator> <name pos:start="213:71" pos:end="213:79"><name pos:start="213:71" pos:end="213:73">buf</name><index pos:start="213:74" pos:end="213:79">[<expr pos:start="213:75" pos:end="213:78"><name pos:start="213:75" pos:end="213:78">bpos</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="215:29" pos:end="215:85"><expr pos:start="215:29" pos:end="215:84"><call pos:start="215:29" pos:end="215:84"><name pos:start="215:29" pos:end="215:47">ff_apply_vector_2x2</name><argument_list pos:start="215:48" pos:end="215:84">(<argument pos:start="215:49" pos:end="215:50"><expr pos:start="215:49" pos:end="215:50"><name pos:start="215:49" pos:end="215:50">ri</name></expr></argument>, <argument pos:start="215:53" pos:end="215:55"><expr pos:start="215:53" pos:end="215:55"><name pos:start="215:53" pos:end="215:53">x</name><operator pos:start="215:54" pos:end="215:54">+</operator><literal type="number" pos:start="215:55" pos:end="215:55">2</literal></expr></argument>, <argument pos:start="215:58" pos:end="215:58"><expr pos:start="215:58" pos:end="215:58"><name pos:start="215:58" pos:end="215:58">y</name></expr></argument>, <argument pos:start="215:61" pos:end="215:83"><expr pos:start="215:61" pos:end="215:83"><name pos:start="215:61" pos:end="215:69"><name pos:start="215:61" pos:end="215:62">ri</name><operator pos:start="215:63" pos:end="215:64">-&gt;</operator><name pos:start="215:65" pos:end="215:69">cb2x2</name></name> <operator pos:start="215:71" pos:end="215:71">+</operator> <name pos:start="215:73" pos:end="215:83"><name pos:start="215:73" pos:end="215:75">buf</name><index pos:start="215:76" pos:end="215:83">[<expr pos:start="215:77" pos:end="215:82"><name pos:start="215:77" pos:end="215:80">bpos</name><operator pos:start="215:81" pos:end="215:81">+</operator><literal type="number" pos:start="215:82" pos:end="215:82">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="217:29" pos:end="217:85"><expr pos:start="217:29" pos:end="217:84"><call pos:start="217:29" pos:end="217:84"><name pos:start="217:29" pos:end="217:47">ff_apply_vector_2x2</name><argument_list pos:start="217:48" pos:end="217:84">(<argument pos:start="217:49" pos:end="217:50"><expr pos:start="217:49" pos:end="217:50"><name pos:start="217:49" pos:end="217:50">ri</name></expr></argument>, <argument pos:start="217:53" pos:end="217:53"><expr pos:start="217:53" pos:end="217:53"><name pos:start="217:53" pos:end="217:53">x</name></expr></argument>, <argument pos:start="217:56" pos:end="217:58"><expr pos:start="217:56" pos:end="217:58"><name pos:start="217:56" pos:end="217:56">y</name><operator pos:start="217:57" pos:end="217:57">+</operator><literal type="number" pos:start="217:58" pos:end="217:58">2</literal></expr></argument>, <argument pos:start="217:61" pos:end="217:83"><expr pos:start="217:61" pos:end="217:83"><name pos:start="217:61" pos:end="217:69"><name pos:start="217:61" pos:end="217:62">ri</name><operator pos:start="217:63" pos:end="217:64">-&gt;</operator><name pos:start="217:65" pos:end="217:69">cb2x2</name></name> <operator pos:start="217:71" pos:end="217:71">+</operator> <name pos:start="217:73" pos:end="217:83"><name pos:start="217:73" pos:end="217:75">buf</name><index pos:start="217:76" pos:end="217:83">[<expr pos:start="217:77" pos:end="217:82"><name pos:start="217:77" pos:end="217:80">bpos</name><operator pos:start="217:81" pos:end="217:81">+</operator><literal type="number" pos:start="217:82" pos:end="217:82">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="219:29" pos:end="219:87"><expr pos:start="219:29" pos:end="219:86"><call pos:start="219:29" pos:end="219:86"><name pos:start="219:29" pos:end="219:47">ff_apply_vector_2x2</name><argument_list pos:start="219:48" pos:end="219:86">(<argument pos:start="219:49" pos:end="219:50"><expr pos:start="219:49" pos:end="219:50"><name pos:start="219:49" pos:end="219:50">ri</name></expr></argument>, <argument pos:start="219:53" pos:end="219:55"><expr pos:start="219:53" pos:end="219:55"><name pos:start="219:53" pos:end="219:53">x</name><operator pos:start="219:54" pos:end="219:54">+</operator><literal type="number" pos:start="219:55" pos:end="219:55">2</literal></expr></argument>, <argument pos:start="219:58" pos:end="219:60"><expr pos:start="219:58" pos:end="219:60"><name pos:start="219:58" pos:end="219:58">y</name><operator pos:start="219:59" pos:end="219:59">+</operator><literal type="number" pos:start="219:60" pos:end="219:60">2</literal></expr></argument>, <argument pos:start="219:63" pos:end="219:85"><expr pos:start="219:63" pos:end="219:85"><name pos:start="219:63" pos:end="219:71"><name pos:start="219:63" pos:end="219:64">ri</name><operator pos:start="219:65" pos:end="219:66">-&gt;</operator><name pos:start="219:67" pos:end="219:71">cb2x2</name></name> <operator pos:start="219:73" pos:end="219:73">+</operator> <name pos:start="219:75" pos:end="219:85"><name pos:start="219:75" pos:end="219:77">buf</name><index pos:start="219:78" pos:end="219:85">[<expr pos:start="219:79" pos:end="219:84"><name pos:start="219:79" pos:end="219:82">bpos</name><operator pos:start="219:83" pos:end="219:83">+</operator><literal type="number" pos:start="219:84" pos:end="219:84">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="221:29" pos:end="221:38"><expr pos:start="221:29" pos:end="221:37"><name pos:start="221:29" pos:end="221:32">bpos</name> <operator pos:start="221:34" pos:end="221:35">+=</operator> <literal type="number" pos:start="221:37" pos:end="221:37">4</literal></expr>;</expr_stmt>

                            <break pos:start="223:29" pos:end="223:34">break;</break>

                        </block_content>}</block></switch>

                    </block_content>}</block></for>

                    <break pos:start="229:21" pos:end="229:26">break;</break>

                <default pos:start="231:17" pos:end="231:24">default:</default>

                    <expr_stmt pos:start="233:21" pos:end="233:83"><expr pos:start="233:21" pos:end="233:82"><call pos:start="233:21" pos:end="233:82"><name pos:start="233:21" pos:end="233:26">av_log</name><argument_list pos:start="233:27" pos:end="233:82">(<argument pos:start="233:28" pos:end="233:36"><expr pos:start="233:28" pos:end="233:36"><name pos:start="233:28" pos:end="233:36"><name pos:start="233:28" pos:end="233:29">ri</name><operator pos:start="233:30" pos:end="233:31">-&gt;</operator><name pos:start="233:32" pos:end="233:36">avctx</name></name></expr></argument>, <argument pos:start="233:39" pos:end="233:50"><expr pos:start="233:39" pos:end="233:50"><name pos:start="233:39" pos:end="233:50">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="233:53" pos:end="233:75"><expr pos:start="233:53" pos:end="233:75"><literal type="string" pos:start="233:53" pos:end="233:75">"Unknown vq code: %d\n"</literal></expr></argument>, <argument pos:start="233:78" pos:end="233:81"><expr pos:start="233:78" pos:end="233:81"><name pos:start="233:78" pos:end="233:81">vqid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></for></block_content></block></for>



        <expr_stmt pos:start="241:9" pos:end="241:19"><expr pos:start="241:9" pos:end="241:18"><name pos:start="241:9" pos:end="241:12">xpos</name> <operator pos:start="241:14" pos:end="241:15">+=</operator> <literal type="number" pos:start="241:17" pos:end="241:18">16</literal></expr>;</expr_stmt>

        <if_stmt pos:start="243:9" pos:end="249:9"><if pos:start="243:9" pos:end="249:9">if <condition pos:start="243:12" pos:end="243:30">(<expr pos:start="243:13" pos:end="243:29"><name pos:start="243:13" pos:end="243:16">xpos</name> <operator pos:start="243:18" pos:end="243:19">&gt;=</operator> <name pos:start="243:21" pos:end="243:29"><name pos:start="243:21" pos:end="243:22">ri</name><operator pos:start="243:23" pos:end="243:24">-&gt;</operator><name pos:start="243:25" pos:end="243:29">width</name></name></expr>)</condition> <block pos:start="243:32" pos:end="249:9">{<block_content pos:start="245:13" pos:end="247:23">

            <expr_stmt pos:start="245:13" pos:end="245:30"><expr pos:start="245:13" pos:end="245:29"><name pos:start="245:13" pos:end="245:16">xpos</name> <operator pos:start="245:18" pos:end="245:19">-=</operator> <name pos:start="245:21" pos:end="245:29"><name pos:start="245:21" pos:end="245:22">ri</name><operator pos:start="245:23" pos:end="245:24">-&gt;</operator><name pos:start="245:25" pos:end="245:29">width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:23"><expr pos:start="247:13" pos:end="247:22"><name pos:start="247:13" pos:end="247:16">ypos</name> <operator pos:start="247:18" pos:end="247:19">+=</operator> <literal type="number" pos:start="247:21" pos:end="247:22">16</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="251:9" pos:end="253:18"><if pos:start="251:9" pos:end="253:18">if<condition pos:start="251:11" pos:end="251:30">(<expr pos:start="251:12" pos:end="251:29"><name pos:start="251:12" pos:end="251:15">ypos</name> <operator pos:start="251:17" pos:end="251:18">&gt;=</operator> <name pos:start="251:20" pos:end="251:29"><name pos:start="251:20" pos:end="251:21">ri</name><operator pos:start="251:22" pos:end="251:23">-&gt;</operator><name pos:start="251:24" pos:end="251:29">height</name></name></expr>)</condition><block type="pseudo" pos:start="253:13" pos:end="253:18"><block_content pos:start="253:13" pos:end="253:18">

            <break pos:start="253:13" pos:end="253:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
