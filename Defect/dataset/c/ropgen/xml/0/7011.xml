<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7011.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:9">NBDExport</name> <modifier pos:start="1:11" pos:end="1:11">*</modifier></type><name pos:start="1:12" pos:end="1:25">nbd_export_new</name><parameter_list pos:start="1:26" pos:end="5:39">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:38">BlockBackend</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">blk</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><name pos:start="1:46" pos:end="1:50">off_t</name></type> <name pos:start="1:52" pos:end="1:61">dev_offset</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:73"><decl pos:start="1:64" pos:end="1:73"><type pos:start="1:64" pos:end="1:73"><name pos:start="1:64" pos:end="1:68">off_t</name></type> <name pos:start="1:70" pos:end="1:73">size</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:43"><decl pos:start="3:27" pos:end="3:43"><type pos:start="3:27" pos:end="3:43"><name pos:start="3:27" pos:end="3:34">uint32_t</name></type> <name pos:start="3:36" pos:end="3:43">nbdflags</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:71"><function_decl pos:start="3:46" pos:end="3:71"><type pos:start="3:46" pos:end="3:49"><name pos:start="3:46" pos:end="3:49">void</name></type> (<modifier pos:start="3:52" pos:end="3:52">*</modifier><name pos:start="3:53" pos:end="3:57">close</name>)<parameter_list pos:start="3:59" pos:end="3:71">(<parameter pos:start="3:60" pos:end="3:70"><decl pos:start="3:60" pos:end="3:70"><type pos:start="3:60" pos:end="3:70"><name pos:start="3:60" pos:end="3:68">NBDExport</name> <modifier pos:start="3:70" pos:end="3:70">*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:38"><decl pos:start="5:27" pos:end="5:38"><type pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:31">Error</name> <modifier pos:start="5:33" pos:end="5:33">*</modifier><modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:38">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="79:1">{<block_content pos:start="9:5" pos:end="77:16">

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">NBDExport</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:18">exp</name> <init pos:start="9:20" pos:end="9:49">= <expr pos:start="9:22" pos:end="9:49"><call pos:start="9:22" pos:end="9:49"><name pos:start="9:22" pos:end="9:30">g_malloc0</name><argument_list pos:start="9:31" pos:end="9:49">(<argument pos:start="9:32" pos:end="9:48"><expr pos:start="9:32" pos:end="9:48"><sizeof pos:start="9:32" pos:end="9:48">sizeof<argument_list pos:start="9:38" pos:end="9:48">(<argument pos:start="9:39" pos:end="9:47"><expr pos:start="9:39" pos:end="9:47"><name pos:start="9:39" pos:end="9:47">NBDExport</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:7">exp</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:17">refcount</name></name> <operator pos:start="11:19" pos:end="11:19">=</operator> <literal type="number" pos:start="11:21" pos:end="11:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><call pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:15">QTAILQ_INIT</name><argument_list pos:start="13:16" pos:end="13:30">(<argument pos:start="13:17" pos:end="13:29"><expr pos:start="13:17" pos:end="13:29"><operator pos:start="13:17" pos:end="13:17">&amp;</operator><name pos:start="13:18" pos:end="13:29"><name pos:start="13:18" pos:end="13:20">exp</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:29">clients</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:19"><expr pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:7">exp</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:12">blk</name></name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:18">blk</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:7">exp</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:19">dev_offset</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:32">dev_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:7">exp</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:17">nbdflags</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:28">nbdflags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:53"><expr pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:7">exp</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:13">size</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <ternary pos:start="21:17" pos:end="21:52"><condition pos:start="21:17" pos:end="21:26"><expr pos:start="21:17" pos:end="21:24"><name pos:start="21:17" pos:end="21:20">size</name> <operator pos:start="21:22" pos:end="21:22">&lt;</operator> <literal type="number" pos:start="21:24" pos:end="21:24">0</literal></expr> ?</condition><then pos:start="21:28" pos:end="21:45"> <expr pos:start="21:28" pos:end="21:45"><call pos:start="21:28" pos:end="21:45"><name pos:start="21:28" pos:end="21:40">blk_getlength</name><argument_list pos:start="21:41" pos:end="21:45">(<argument pos:start="21:42" pos:end="21:44"><expr pos:start="21:42" pos:end="21:44"><name pos:start="21:42" pos:end="21:44">blk</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="21:47" pos:end="21:52">: <expr pos:start="21:49" pos:end="21:52"><name pos:start="21:49" pos:end="21:52">size</name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:22">(<expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:11">exp</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:17">size</name></name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <literal type="number" pos:start="23:21" pos:end="23:21">0</literal></expr>)</condition> <block pos:start="23:24" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:18">

        <expr_stmt pos:start="25:9" pos:end="27:72"><expr pos:start="25:9" pos:end="27:71"><call pos:start="25:9" pos:end="27:71"><name pos:start="25:9" pos:end="25:24">error_setg_errno</name><argument_list pos:start="25:25" pos:end="27:71">(<argument pos:start="25:26" pos:end="25:29"><expr pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:29">errp</name></expr></argument>, <argument pos:start="25:32" pos:end="25:41"><expr pos:start="25:32" pos:end="25:41"><operator pos:start="25:32" pos:end="25:32">-</operator><name pos:start="25:33" pos:end="25:41"><name pos:start="25:33" pos:end="25:35">exp</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:41">size</name></name></expr></argument>,

                         <argument pos:start="27:26" pos:end="27:70"><expr pos:start="27:26" pos:end="27:70"><literal type="string" pos:start="27:26" pos:end="27:70">"Failed to determine the NBD export's length"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="29:9" pos:end="29:18">goto <name pos:start="29:14" pos:end="29:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:7">exp</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:13">size</name></name> <operator pos:start="33:15" pos:end="33:16">-=</operator> <name pos:start="33:18" pos:end="33:26"><name pos:start="33:18" pos:end="33:20">exp</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:26">size</name></name> <operator pos:start="33:28" pos:end="33:28">%</operator> <name pos:start="33:30" pos:end="33:45">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:23"><expr pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:7">exp</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:14">close</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:22">close</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:7">exp</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:12">ctx</name></name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:39"><name pos:start="39:16" pos:end="39:34">blk_get_aio_context</name><argument_list pos:start="39:35" pos:end="39:39">(<argument pos:start="39:36" pos:end="39:38"><expr pos:start="39:36" pos:end="39:38"><name pos:start="39:36" pos:end="39:38">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:17"><expr pos:start="41:5" pos:end="41:16"><call pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:11">blk_ref</name><argument_list pos:start="41:12" pos:end="41:16">(<argument pos:start="41:13" pos:end="41:15"><expr pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:77"><expr pos:start="43:5" pos:end="43:76"><call pos:start="43:5" pos:end="43:76"><name pos:start="43:5" pos:end="43:32">blk_add_aio_context_notifier</name><argument_list pos:start="43:33" pos:end="43:76">(<argument pos:start="43:34" pos:end="43:36"><expr pos:start="43:34" pos:end="43:36"><name pos:start="43:34" pos:end="43:36">blk</name></expr></argument>, <argument pos:start="43:39" pos:end="43:54"><expr pos:start="43:39" pos:end="43:54"><name pos:start="43:39" pos:end="43:54">blk_aio_attached</name></expr></argument>, <argument pos:start="43:57" pos:end="43:70"><expr pos:start="43:57" pos:end="43:70"><name pos:start="43:57" pos:end="43:70">blk_aio_detach</name></expr></argument>, <argument pos:start="43:73" pos:end="43:75"><expr pos:start="43:73" pos:end="43:75"><name pos:start="43:73" pos:end="43:75">exp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:52"><expr pos:start="47:5" pos:end="47:51"><name pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:7">exp</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:23">eject_notifier</name><operator pos:start="47:24" pos:end="47:24">.</operator><name pos:start="47:25" pos:end="47:30">notify</name></name> <operator pos:start="47:32" pos:end="47:32">=</operator> <name pos:start="47:34" pos:end="47:51">nbd_eject_notifier</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:58"><expr pos:start="49:5" pos:end="49:57"><call pos:start="49:5" pos:end="49:57"><name pos:start="49:5" pos:end="49:30">blk_add_remove_bs_notifier</name><argument_list pos:start="49:31" pos:end="49:57">(<argument pos:start="49:32" pos:end="49:34"><expr pos:start="49:32" pos:end="49:34"><name pos:start="49:32" pos:end="49:34">blk</name></expr></argument>, <argument pos:start="49:37" pos:end="49:56"><expr pos:start="49:37" pos:end="49:56"><operator pos:start="49:37" pos:end="49:37">&amp;</operator><name pos:start="49:38" pos:end="49:56"><name pos:start="49:38" pos:end="49:40">exp</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:56">eject_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="61:7">/*

     * NBD exports are used for non-shared storage migration.  Make sure

     * that BDRV_O_INACTIVE is cleared and the image is ready for write

     * access since the export could be available before migration handover.

     */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:34"><expr pos:start="63:5" pos:end="63:33"><call pos:start="63:5" pos:end="63:33"><name pos:start="63:5" pos:end="63:23">aio_context_acquire</name><argument_list pos:start="63:24" pos:end="63:33">(<argument pos:start="63:25" pos:end="63:32"><expr pos:start="63:25" pos:end="63:32"><name pos:start="63:25" pos:end="63:32"><name pos:start="63:25" pos:end="63:27">exp</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:32">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:36"><expr pos:start="65:5" pos:end="65:35"><call pos:start="65:5" pos:end="65:35"><name pos:start="65:5" pos:end="65:24">blk_invalidate_cache</name><argument_list pos:start="65:25" pos:end="65:35">(<argument pos:start="65:26" pos:end="65:28"><expr pos:start="65:26" pos:end="65:28"><name pos:start="65:26" pos:end="65:28">blk</name></expr></argument>, <argument pos:start="65:31" pos:end="65:34"><expr pos:start="65:31" pos:end="65:34"><name pos:start="65:31" pos:end="65:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:34"><expr pos:start="67:5" pos:end="67:33"><call pos:start="67:5" pos:end="67:33"><name pos:start="67:5" pos:end="67:23">aio_context_release</name><argument_list pos:start="67:24" pos:end="67:33">(<argument pos:start="67:25" pos:end="67:32"><expr pos:start="67:25" pos:end="67:32"><name pos:start="67:25" pos:end="67:32"><name pos:start="67:25" pos:end="67:27">exp</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:32">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="69:5" pos:end="69:15">return <expr pos:start="69:12" pos:end="69:14"><name pos:start="69:12" pos:end="69:14">exp</name></expr>;</return>



<label pos:start="73:1" pos:end="73:5"><name pos:start="73:1" pos:end="73:4">fail</name>:</label>

    <expr_stmt pos:start="75:5" pos:end="75:16"><expr pos:start="75:5" pos:end="75:15"><call pos:start="75:5" pos:end="75:15"><name pos:start="75:5" pos:end="75:10">g_free</name><argument_list pos:start="75:11" pos:end="75:15">(<argument pos:start="75:12" pos:end="75:14"><expr pos:start="75:12" pos:end="75:14"><name pos:start="75:12" pos:end="75:14">exp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="77:5" pos:end="77:16">return <expr pos:start="77:12" pos:end="77:15"><name pos:start="77:12" pos:end="77:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
