<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19934.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">dec_scall</name><parameter_list pos:start="1:22" pos:end="1:39">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:36"><name pos:start="1:23" pos:end="1:34">DisasContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:5">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:11">t0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">l1</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:10">dc</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:16">imm5</name></name> <operator pos:start="11:18" pos:end="11:19">==</operator> <literal type="number" pos:start="11:21" pos:end="11:21">7</literal></expr>)</condition> <block pos:start="11:24" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:27">

        <expr_stmt pos:start="13:9" pos:end="13:27"><expr pos:start="13:9" pos:end="13:26"><call pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:15">LOG_DIS</name><argument_list pos:start="13:16" pos:end="13:26">(<argument pos:start="13:17" pos:end="13:25"><expr pos:start="13:17" pos:end="13:25"><literal type="string" pos:start="13:17" pos:end="13:25">"scall\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="15:7" pos:end="19:5">else if <condition pos:start="15:15" pos:end="15:29">(<expr pos:start="15:16" pos:end="15:28"><name pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:17">dc</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:23">imm5</name></name> <operator pos:start="15:25" pos:end="15:26">==</operator> <literal type="number" pos:start="15:28" pos:end="15:28">2</literal></expr>)</condition> <block pos:start="15:31" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:27">

        <expr_stmt pos:start="17:9" pos:end="17:27"><expr pos:start="17:9" pos:end="17:26"><call pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:15">LOG_DIS</name><argument_list pos:start="17:16" pos:end="17:26">(<argument pos:start="17:17" pos:end="17:25"><expr pos:start="17:17" pos:end="17:25"><literal type="string" pos:start="17:17" pos:end="17:25">"break\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="23:5">else <block pos:start="19:12" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:47">

        <expr_stmt pos:start="21:9" pos:end="21:47"><expr pos:start="21:9" pos:end="21:46"><call pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:17">cpu_abort</name><argument_list pos:start="21:18" pos:end="21:46">(<argument pos:start="21:19" pos:end="21:25"><expr pos:start="21:19" pos:end="21:25"><name pos:start="21:19" pos:end="21:25"><name pos:start="21:19" pos:end="21:20">dc</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:25">env</name></name></expr></argument>, <argument pos:start="21:28" pos:end="21:45"><expr pos:start="21:28" pos:end="21:45"><literal type="string" pos:start="21:28" pos:end="21:45">"invalid opcode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:6">t0</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <call pos:start="27:10" pos:end="27:23"><name pos:start="27:10" pos:end="27:21">tcg_temp_new</name><argument_list pos:start="27:22" pos:end="27:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:25"><expr pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:6">l1</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:24"><name pos:start="29:10" pos:end="29:22">gen_new_label</name><argument_list pos:start="29:23" pos:end="29:24">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="45:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:22">(<expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:10">dc</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:16">imm5</name></name> <operator pos:start="33:18" pos:end="33:19">==</operator> <literal type="number" pos:start="33:21" pos:end="33:21">7</literal></expr>)</condition> <block pos:start="33:24" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:51">

        <expr_stmt pos:start="35:9" pos:end="35:40"><expr pos:start="35:9" pos:end="35:39"><call pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:23">tcg_gen_movi_tl</name><argument_list pos:start="35:24" pos:end="35:39">(<argument pos:start="35:25" pos:end="35:30"><expr pos:start="35:25" pos:end="35:30"><name pos:start="35:25" pos:end="35:30">cpu_pc</name></expr></argument>, <argument pos:start="35:33" pos:end="35:38"><expr pos:start="35:33" pos:end="35:38"><name pos:start="35:33" pos:end="35:38"><name pos:start="35:33" pos:end="35:34">dc</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:38">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:51"><expr pos:start="37:9" pos:end="37:50"><call pos:start="37:9" pos:end="37:50"><name pos:start="37:9" pos:end="37:29">t_gen_raise_exception</name><argument_list pos:start="37:30" pos:end="37:50">(<argument pos:start="37:31" pos:end="37:32"><expr pos:start="37:31" pos:end="37:32"><name pos:start="37:31" pos:end="37:32">dc</name></expr></argument>, <argument pos:start="37:35" pos:end="37:49"><expr pos:start="37:35" pos:end="37:49"><name pos:start="37:35" pos:end="37:49">EXCP_SYSTEMCALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="45:5">else <block pos:start="39:12" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:51">

        <expr_stmt pos:start="41:9" pos:end="41:40"><expr pos:start="41:9" pos:end="41:39"><call pos:start="41:9" pos:end="41:39"><name pos:start="41:9" pos:end="41:23">tcg_gen_movi_tl</name><argument_list pos:start="41:24" pos:end="41:39">(<argument pos:start="41:25" pos:end="41:30"><expr pos:start="41:25" pos:end="41:30"><name pos:start="41:25" pos:end="41:30">cpu_pc</name></expr></argument>, <argument pos:start="41:33" pos:end="41:38"><expr pos:start="41:33" pos:end="41:38"><name pos:start="41:33" pos:end="41:38"><name pos:start="41:33" pos:end="41:34">dc</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:38">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:51"><expr pos:start="43:9" pos:end="43:50"><call pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:29">t_gen_raise_exception</name><argument_list pos:start="43:30" pos:end="43:50">(<argument pos:start="43:31" pos:end="43:32"><expr pos:start="43:31" pos:end="43:32"><name pos:start="43:31" pos:end="43:32">dc</name></expr></argument>, <argument pos:start="43:35" pos:end="43:49"><expr pos:start="43:35" pos:end="43:49"><name pos:start="43:35" pos:end="43:49">EXCP_BREAKPOINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
