<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3788.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:31">read_raw_cp_reg</name><parameter_list pos:start="1:32" pos:end="1:73">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:43">CPUARMState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">env</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:72"><decl pos:start="1:51" pos:end="1:72"><type pos:start="1:51" pos:end="1:72"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:68">ARMCPRegInfo</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:72">ri</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:5">

    <comment type="block" pos:start="5:5" pos:end="5:76">/* Raw read of a coprocessor register (as needed for migration, etc). */</comment>

    <if_stmt pos:start="7:5" pos:end="23:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:32">(<expr pos:start="7:9" pos:end="7:31"><name pos:start="7:9" pos:end="7:16"><name pos:start="7:9" pos:end="7:10">ri</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:16">type</name></name> <operator pos:start="7:18" pos:end="7:18">&amp;</operator> <name pos:start="7:20" pos:end="7:31">ARM_CP_CONST</name></expr>)</condition> <block pos:start="7:34" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:30">

        <return pos:start="9:9" pos:end="9:30">return <expr pos:start="9:16" pos:end="9:29"><name pos:start="9:16" pos:end="9:29"><name pos:start="9:16" pos:end="9:17">ri</name><operator pos:start="9:18" pos:end="9:19">-&gt;</operator><name pos:start="9:20" pos:end="9:29">resetvalue</name></name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="11:7" pos:end="15:5">else if <condition pos:start="11:15" pos:end="11:30">(<expr pos:start="11:16" pos:end="11:29"><name pos:start="11:16" pos:end="11:29"><name pos:start="11:16" pos:end="11:17">ri</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:29">raw_readfn</name></name></expr>)</condition> <block pos:start="11:32" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:39">

        <return pos:start="13:9" pos:end="13:39">return <expr pos:start="13:16" pos:end="13:38"><call pos:start="13:16" pos:end="13:38"><name pos:start="13:16" pos:end="13:29"><name pos:start="13:16" pos:end="13:17">ri</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:29">raw_readfn</name></name><argument_list pos:start="13:30" pos:end="13:38">(<argument pos:start="13:31" pos:end="13:33"><expr pos:start="13:31" pos:end="13:33"><name pos:start="13:31" pos:end="13:33">env</name></expr></argument>, <argument pos:start="13:36" pos:end="13:37"><expr pos:start="13:36" pos:end="13:37"><name pos:start="13:36" pos:end="13:37">ri</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="15:7" pos:end="19:5">else if <condition pos:start="15:15" pos:end="15:26">(<expr pos:start="15:16" pos:end="15:25"><name pos:start="15:16" pos:end="15:25"><name pos:start="15:16" pos:end="15:17">ri</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:25">readfn</name></name></expr>)</condition> <block pos:start="15:28" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:35">

        <return pos:start="17:9" pos:end="17:35">return <expr pos:start="17:16" pos:end="17:34"><call pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:25"><name pos:start="17:16" pos:end="17:17">ri</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:25">readfn</name></name><argument_list pos:start="17:26" pos:end="17:34">(<argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:29">env</name></expr></argument>, <argument pos:start="17:32" pos:end="17:33"><expr pos:start="17:32" pos:end="17:33"><name pos:start="17:32" pos:end="17:33">ri</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="23:5">else <block pos:start="19:12" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:33">

        <return pos:start="21:9" pos:end="21:33">return <expr pos:start="21:16" pos:end="21:32"><call pos:start="21:16" pos:end="21:32"><name pos:start="21:16" pos:end="21:23">raw_read</name><argument_list pos:start="21:24" pos:end="21:32">(<argument pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:27">env</name></expr></argument>, <argument pos:start="21:30" pos:end="21:31"><expr pos:start="21:30" pos:end="21:31"><name pos:start="21:30" pos:end="21:31">ri</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
