<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25017.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23"><name pos:start="1:8" pos:end="1:13">struct</name> <name pos:start="1:15" pos:end="1:23">XenDevice</name></name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:42">xen_be_del_xendev</name><parameter_list pos:start="1:43" pos:end="1:60">(<parameter pos:start="1:44" pos:end="1:50"><decl pos:start="1:44" pos:end="1:50"><type pos:start="1:44" pos:end="1:50"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:50">dom</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:59"><decl pos:start="1:53" pos:end="1:59"><type pos:start="1:53" pos:end="1:59"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:59">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:16">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">XenDevice</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">xendev</name></decl>, <decl pos:start="5:31" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:22"><modifier pos:start="5:31" pos:end="5:31">*</modifier></type><name pos:start="5:32" pos:end="5:36">xnext</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="15:7">/*

     * This is pretty much like QTAILQ_FOREACH(xendev, &amp;xendevs, next) but

     * we save the next pointer in xnext because we might free xendev.

     */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:30"><expr pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:9">xnext</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <name pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:19">xendevs</name><operator pos:start="17:20" pos:end="17:20">.</operator><name pos:start="17:21" pos:end="17:29">tqh_first</name></name></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="81:5">while <condition pos:start="19:11" pos:end="19:17">(<expr pos:start="19:12" pos:end="19:16"><name pos:start="19:12" pos:end="19:16">xnext</name></expr>)</condition> <block pos:start="19:19" pos:end="81:5">{<block_content pos:start="21:9" pos:end="79:23">

        <expr_stmt pos:start="21:9" pos:end="21:23"><expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:14">xendev</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:22">xnext</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:38"><expr pos:start="23:9" pos:end="23:37"><name pos:start="23:9" pos:end="23:13">xnext</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:37"><name pos:start="23:17" pos:end="23:22">xendev</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:28">next</name><operator pos:start="23:29" pos:end="23:29">.</operator><name pos:start="23:30" pos:end="23:37">tqe_next</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:31">(<expr pos:start="27:13" pos:end="27:30"><name pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:18">xendev</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:23">dom</name></name> <operator pos:start="27:25" pos:end="27:26">!=</operator> <name pos:start="27:28" pos:end="27:30">dom</name></expr>)</condition> <block pos:start="27:33" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:21">

            <continue pos:start="29:13" pos:end="29:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:44">(<expr pos:start="33:13" pos:end="33:43"><name pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:18">xendev</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:23">dev</name></name> <operator pos:start="33:25" pos:end="33:26">!=</operator> <name pos:start="33:28" pos:end="33:30">dev</name> <operator pos:start="33:32" pos:end="33:33">&amp;&amp;</operator> <name pos:start="33:35" pos:end="33:37">dev</name> <operator pos:start="33:39" pos:end="33:40">!=</operator> <operator pos:start="33:42" pos:end="33:42">-</operator><literal type="number" pos:start="33:43" pos:end="33:43">1</literal></expr>)</condition> <block pos:start="33:46" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:21">

            <continue pos:start="35:13" pos:end="35:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:30">(<expr pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:18">xendev</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:23">ops</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:29">free</name></name></expr>)</condition> <block pos:start="41:32" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:38">

            <expr_stmt pos:start="43:13" pos:end="43:38"><expr pos:start="43:13" pos:end="43:37"><call pos:start="43:13" pos:end="43:37"><name pos:start="43:13" pos:end="43:29"><name pos:start="43:13" pos:end="43:18">xendev</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:23">ops</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:29">free</name></name><argument_list pos:start="43:30" pos:end="43:37">(<argument pos:start="43:31" pos:end="43:36"><expr pos:start="43:31" pos:end="43:36"><name pos:start="43:31" pos:end="43:36">xendev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="49:9" pos:end="59:9"><if pos:start="49:9" pos:end="59:9">if <condition pos:start="49:12" pos:end="49:23">(<expr pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:18">xendev</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:22">fe</name></name></expr>)</condition> <block pos:start="49:25" pos:end="59:9">{<block_content pos:start="51:13" pos:end="57:31">

            <decl_stmt pos:start="51:13" pos:end="51:36"><decl pos:start="51:13" pos:end="51:35"><type pos:start="51:13" pos:end="51:16"><name pos:start="51:13" pos:end="51:16">char</name></type> <name pos:start="51:18" pos:end="51:35"><name pos:start="51:18" pos:end="51:22">token</name><index pos:start="51:23" pos:end="51:35">[<expr pos:start="51:24" pos:end="51:34"><name pos:start="51:24" pos:end="51:34">XEN_BUFSIZE</name></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:60"><expr pos:start="53:13" pos:end="53:59"><call pos:start="53:13" pos:end="53:59"><name pos:start="53:13" pos:end="53:20">snprintf</name><argument_list pos:start="53:21" pos:end="53:59">(<argument pos:start="53:22" pos:end="53:26"><expr pos:start="53:22" pos:end="53:26"><name pos:start="53:22" pos:end="53:26">token</name></expr></argument>, <argument pos:start="53:29" pos:end="53:41"><expr pos:start="53:29" pos:end="53:41"><sizeof pos:start="53:29" pos:end="53:41">sizeof<argument_list pos:start="53:35" pos:end="53:41">(<argument pos:start="53:36" pos:end="53:40"><expr pos:start="53:36" pos:end="53:40"><name pos:start="53:36" pos:end="53:40">token</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="53:44" pos:end="53:50"><expr pos:start="53:44" pos:end="53:50"><literal type="string" pos:start="53:44" pos:end="53:50">"fe:%p"</literal></expr></argument>, <argument pos:start="53:53" pos:end="53:58"><expr pos:start="53:53" pos:end="53:58"><name pos:start="53:53" pos:end="53:58">xendev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:52"><expr pos:start="55:13" pos:end="55:51"><call pos:start="55:13" pos:end="55:51"><name pos:start="55:13" pos:end="55:22">xs_unwatch</name><argument_list pos:start="55:23" pos:end="55:51">(<argument pos:start="55:24" pos:end="55:31"><expr pos:start="55:24" pos:end="55:31"><name pos:start="55:24" pos:end="55:31">xenstore</name></expr></argument>, <argument pos:start="55:34" pos:end="55:43"><expr pos:start="55:34" pos:end="55:43"><name pos:start="55:34" pos:end="55:43"><name pos:start="55:34" pos:end="55:39">xendev</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:43">fe</name></name></expr></argument>, <argument pos:start="55:46" pos:end="55:50"><expr pos:start="55:46" pos:end="55:50"><name pos:start="55:46" pos:end="55:50">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:31"><expr pos:start="57:13" pos:end="57:30"><call pos:start="57:13" pos:end="57:30"><name pos:start="57:13" pos:end="57:18">g_free</name><argument_list pos:start="57:19" pos:end="57:30">(<argument pos:start="57:20" pos:end="57:29"><expr pos:start="57:20" pos:end="57:29"><name pos:start="57:20" pos:end="57:29"><name pos:start="57:20" pos:end="57:25">xendev</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:29">fe</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="63:9" pos:end="67:9"><if pos:start="63:9" pos:end="67:9">if <condition pos:start="63:12" pos:end="63:58">(<expr pos:start="63:13" pos:end="63:57"><name pos:start="63:13" pos:end="63:29"><name pos:start="63:13" pos:end="63:18">xendev</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:29">evtchndev</name></name> <operator pos:start="63:31" pos:end="63:32">!=</operator> <name pos:start="63:34" pos:end="63:57">XC_HANDLER_INITIAL_VALUE</name></expr>)</condition> <block pos:start="63:60" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:47">

            <expr_stmt pos:start="65:13" pos:end="65:47"><expr pos:start="65:13" pos:end="65:46"><call pos:start="65:13" pos:end="65:46"><name pos:start="65:13" pos:end="65:27">xc_evtchn_close</name><argument_list pos:start="65:28" pos:end="65:46">(<argument pos:start="65:29" pos:end="65:45"><expr pos:start="65:29" pos:end="65:45"><name pos:start="65:29" pos:end="65:45"><name pos:start="65:29" pos:end="65:34">xendev</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:45">evtchndev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:58">(<expr pos:start="69:13" pos:end="69:57"><name pos:start="69:13" pos:end="69:29"><name pos:start="69:13" pos:end="69:18">xendev</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:29">gnttabdev</name></name> <operator pos:start="69:31" pos:end="69:32">!=</operator> <name pos:start="69:34" pos:end="69:57">XC_HANDLER_INITIAL_VALUE</name></expr>)</condition> <block pos:start="69:60" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:47">

            <expr_stmt pos:start="71:13" pos:end="71:47"><expr pos:start="71:13" pos:end="71:46"><call pos:start="71:13" pos:end="71:46"><name pos:start="71:13" pos:end="71:27">xc_gnttab_close</name><argument_list pos:start="71:28" pos:end="71:46">(<argument pos:start="71:29" pos:end="71:45"><expr pos:start="71:29" pos:end="71:45"><name pos:start="71:29" pos:end="71:45"><name pos:start="71:29" pos:end="71:34">xendev</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:45">gnttabdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:46"><expr pos:start="77:9" pos:end="77:45"><call pos:start="77:9" pos:end="77:45"><name pos:start="77:9" pos:end="77:21">QTAILQ_REMOVE</name><argument_list pos:start="77:22" pos:end="77:45">(<argument pos:start="77:23" pos:end="77:30"><expr pos:start="77:23" pos:end="77:30"><operator pos:start="77:23" pos:end="77:23">&amp;</operator><name pos:start="77:24" pos:end="77:30">xendevs</name></expr></argument>, <argument pos:start="77:33" pos:end="77:38"><expr pos:start="77:33" pos:end="77:38"><name pos:start="77:33" pos:end="77:38">xendev</name></expr></argument>, <argument pos:start="77:41" pos:end="77:44"><expr pos:start="77:41" pos:end="77:44"><name pos:start="77:41" pos:end="77:44">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:23"><expr pos:start="79:9" pos:end="79:22"><call pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:14">g_free</name><argument_list pos:start="79:15" pos:end="79:22">(<argument pos:start="79:16" pos:end="79:21"><expr pos:start="79:16" pos:end="79:21"><name pos:start="79:16" pos:end="79:21">xendev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="83:5" pos:end="83:16">return <expr pos:start="83:12" pos:end="83:15"><name pos:start="83:12" pos:end="83:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
