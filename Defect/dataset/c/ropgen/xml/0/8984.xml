<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8984.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">parse_pair</name><parameter_list pos:start="1:22" pos:end="1:72">(<parameter pos:start="1:23" pos:end="1:45"><decl pos:start="1:23" pos:end="1:45"><type pos:start="1:23" pos:end="1:45"><name pos:start="1:23" pos:end="1:39">JSONParserContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">ctxt</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:58"><decl pos:start="1:48" pos:end="1:58"><type pos:start="1:48" pos:end="1:58"><name pos:start="1:48" pos:end="1:52">QDict</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">dict</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:71"><decl pos:start="1:61" pos:end="1:71"><type pos:start="1:61" pos:end="1:71"><name pos:start="1:61" pos:end="1:67">va_list</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:71">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:14">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">QObject</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">key</name> <init pos:start="5:18" pos:end="5:23">= <expr pos:start="5:20" pos:end="5:23"><name pos:start="5:20" pos:end="5:23">NULL</name></expr></init></decl>, <decl pos:start="5:26" pos:end="5:38"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:31">token</name> <init pos:start="5:33" pos:end="5:38">= <expr pos:start="5:35" pos:end="5:38"><name pos:start="5:35" pos:end="5:38">NULL</name></expr></init></decl>, <decl pos:start="5:41" pos:end="5:46"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:46">value</name></decl>, <decl pos:start="5:49" pos:end="5:53"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:49" pos:end="5:49">*</modifier></type><name pos:start="5:50" pos:end="5:53">peek</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:60"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:21">JSONParserContext</name></type> <name pos:start="7:23" pos:end="7:32">saved_ctxt</name> <init pos:start="7:34" pos:end="7:60">= <expr pos:start="7:36" pos:end="7:60"><call pos:start="7:36" pos:end="7:60"><name pos:start="7:36" pos:end="7:54">parser_context_save</name><argument_list pos:start="7:55" pos:end="7:60">(<argument pos:start="7:56" pos:end="7:59"><expr pos:start="7:56" pos:end="7:59"><name pos:start="7:56" pos:end="7:59">ctxt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:43"><expr pos:start="11:5" pos:end="11:42"><name pos:start="11:5" pos:end="11:8">peek</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="11:42"><name pos:start="11:12" pos:end="11:36">parser_context_peek_token</name><argument_list pos:start="11:37" pos:end="11:42">(<argument pos:start="11:38" pos:end="11:41"><expr pos:start="11:38" pos:end="11:41"><name pos:start="11:38" pos:end="11:41">ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:21">(<expr pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:12">peek</name> <operator pos:start="13:14" pos:end="13:15">==</operator> <name pos:start="13:17" pos:end="13:20">NULL</name></expr>)</condition> <block pos:start="13:23" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:17">

        <expr_stmt pos:start="15:9" pos:end="15:49"><expr pos:start="15:9" pos:end="15:48"><call pos:start="15:9" pos:end="15:48"><name pos:start="15:9" pos:end="15:19">parse_error</name><argument_list pos:start="15:20" pos:end="15:48">(<argument pos:start="15:21" pos:end="15:24"><expr pos:start="15:21" pos:end="15:24"><name pos:start="15:21" pos:end="15:24">ctxt</name></expr></argument>, <argument pos:start="15:27" pos:end="15:30"><expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">NULL</name></expr></argument>, <argument pos:start="15:33" pos:end="15:47"><expr pos:start="15:33" pos:end="15:47"><literal type="string" pos:start="15:33" pos:end="15:47">"premature EOI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="17:9" pos:end="17:17">goto <name pos:start="17:14" pos:end="17:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:7">key</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:31"><name pos:start="23:11" pos:end="23:21">parse_value</name><argument_list pos:start="23:22" pos:end="23:31">(<argument pos:start="23:23" pos:end="23:26"><expr pos:start="23:23" pos:end="23:26"><name pos:start="23:23" pos:end="23:26">ctxt</name></expr></argument>, <argument pos:start="23:29" pos:end="23:30"><expr pos:start="23:29" pos:end="23:30"><name pos:start="23:29" pos:end="23:30">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:51">(<expr pos:start="25:9" pos:end="25:50"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:12">key</name> <operator pos:start="25:14" pos:end="25:15">||</operator> <call pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:28">qobject_type</name><argument_list pos:start="25:29" pos:end="25:33">(<argument pos:start="25:30" pos:end="25:32"><expr pos:start="25:30" pos:end="25:32"><name pos:start="25:30" pos:end="25:32">key</name></expr></argument>)</argument_list></call> <operator pos:start="25:35" pos:end="25:36">!=</operator> <name pos:start="25:38" pos:end="25:50">QTYPE_QSTRING</name></expr>)</condition> <block pos:start="25:53" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:17">

        <expr_stmt pos:start="27:9" pos:end="27:65"><expr pos:start="27:9" pos:end="27:64"><call pos:start="27:9" pos:end="27:64"><name pos:start="27:9" pos:end="27:19">parse_error</name><argument_list pos:start="27:20" pos:end="27:64">(<argument pos:start="27:21" pos:end="27:24"><expr pos:start="27:21" pos:end="27:24"><name pos:start="27:21" pos:end="27:24">ctxt</name></expr></argument>, <argument pos:start="27:27" pos:end="27:30"><expr pos:start="27:27" pos:end="27:30"><name pos:start="27:27" pos:end="27:30">peek</name></expr></argument>, <argument pos:start="27:33" pos:end="27:63"><expr pos:start="27:33" pos:end="27:63"><literal type="string" pos:start="27:33" pos:end="27:63">"key is not a string in object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="29:9" pos:end="29:17">goto <name pos:start="29:14" pos:end="29:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:43"><expr pos:start="35:5" pos:end="35:42"><name pos:start="35:5" pos:end="35:9">token</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="35:42"><name pos:start="35:13" pos:end="35:36">parser_context_pop_token</name><argument_list pos:start="35:37" pos:end="35:42">(<argument pos:start="35:38" pos:end="35:41"><expr pos:start="35:38" pos:end="35:41"><name pos:start="35:38" pos:end="35:41">ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:22">(<expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:13">token</name> <operator pos:start="37:15" pos:end="37:16">==</operator> <name pos:start="37:18" pos:end="37:21">NULL</name></expr>)</condition> <block pos:start="37:24" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:17">

        <expr_stmt pos:start="39:9" pos:end="39:49"><expr pos:start="39:9" pos:end="39:48"><call pos:start="39:9" pos:end="39:48"><name pos:start="39:9" pos:end="39:19">parse_error</name><argument_list pos:start="39:20" pos:end="39:48">(<argument pos:start="39:21" pos:end="39:24"><expr pos:start="39:21" pos:end="39:24"><name pos:start="39:21" pos:end="39:24">ctxt</name></expr></argument>, <argument pos:start="39:27" pos:end="39:30"><expr pos:start="39:27" pos:end="39:30"><name pos:start="39:27" pos:end="39:30">NULL</name></expr></argument>, <argument pos:start="39:33" pos:end="39:47"><expr pos:start="39:33" pos:end="39:47"><literal type="string" pos:start="39:33" pos:end="39:47">"premature EOI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="41:9" pos:end="41:17">goto <name pos:start="41:14" pos:end="41:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:39">(<expr pos:start="47:9" pos:end="47:38"><operator pos:start="47:9" pos:end="47:9">!</operator><call pos:start="47:10" pos:end="47:38"><name pos:start="47:10" pos:end="47:26">token_is_operator</name><argument_list pos:start="47:27" pos:end="47:38">(<argument pos:start="47:28" pos:end="47:32"><expr pos:start="47:28" pos:end="47:32"><name pos:start="47:28" pos:end="47:32">token</name></expr></argument>, <argument pos:start="47:35" pos:end="47:37"><expr pos:start="47:35" pos:end="47:37"><literal type="char" pos:start="47:35" pos:end="47:37">':'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:41" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:17">

        <expr_stmt pos:start="49:9" pos:end="49:61"><expr pos:start="49:9" pos:end="49:60"><call pos:start="49:9" pos:end="49:60"><name pos:start="49:9" pos:end="49:19">parse_error</name><argument_list pos:start="49:20" pos:end="49:60">(<argument pos:start="49:21" pos:end="49:24"><expr pos:start="49:21" pos:end="49:24"><name pos:start="49:21" pos:end="49:24">ctxt</name></expr></argument>, <argument pos:start="49:27" pos:end="49:31"><expr pos:start="49:27" pos:end="49:31"><name pos:start="49:27" pos:end="49:31">token</name></expr></argument>, <argument pos:start="49:34" pos:end="49:59"><expr pos:start="49:34" pos:end="49:59"><literal type="string" pos:start="49:34" pos:end="49:59">"missing : in object pair"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:17">goto <name pos:start="51:14" pos:end="51:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:34"><expr pos:start="57:5" pos:end="57:33"><name pos:start="57:5" pos:end="57:9">value</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <call pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:23">parse_value</name><argument_list pos:start="57:24" pos:end="57:33">(<argument pos:start="57:25" pos:end="57:28"><expr pos:start="57:25" pos:end="57:28"><name pos:start="57:25" pos:end="57:28">ctxt</name></expr></argument>, <argument pos:start="57:31" pos:end="57:32"><expr pos:start="57:31" pos:end="57:32"><name pos:start="57:31" pos:end="57:32">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:22">(<expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:13">value</name> <operator pos:start="59:15" pos:end="59:16">==</operator> <name pos:start="59:18" pos:end="59:21">NULL</name></expr>)</condition> <block pos:start="59:24" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:17">

        <expr_stmt pos:start="61:9" pos:end="61:58"><expr pos:start="61:9" pos:end="61:57"><call pos:start="61:9" pos:end="61:57"><name pos:start="61:9" pos:end="61:19">parse_error</name><argument_list pos:start="61:20" pos:end="61:57">(<argument pos:start="61:21" pos:end="61:24"><expr pos:start="61:21" pos:end="61:24"><name pos:start="61:21" pos:end="61:24">ctxt</name></expr></argument>, <argument pos:start="61:27" pos:end="61:31"><expr pos:start="61:27" pos:end="61:31"><name pos:start="61:27" pos:end="61:31">token</name></expr></argument>, <argument pos:start="61:34" pos:end="61:56"><expr pos:start="61:34" pos:end="61:56"><literal type="string" pos:start="61:34" pos:end="61:56">"Missing value in dict"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:17">goto <name pos:start="63:14" pos:end="63:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:73"><expr pos:start="69:5" pos:end="69:72"><call pos:start="69:5" pos:end="69:72"><name pos:start="69:5" pos:end="69:17">qdict_put_obj</name><argument_list pos:start="69:18" pos:end="69:72">(<argument pos:start="69:19" pos:end="69:22"><expr pos:start="69:19" pos:end="69:22"><name pos:start="69:19" pos:end="69:22">dict</name></expr></argument>, <argument pos:start="69:25" pos:end="69:64"><expr pos:start="69:25" pos:end="69:64"><call pos:start="69:25" pos:end="69:64"><name pos:start="69:25" pos:end="69:39">qstring_get_str</name><argument_list pos:start="69:40" pos:end="69:64">(<argument pos:start="69:41" pos:end="69:63"><expr pos:start="69:41" pos:end="69:63"><call pos:start="69:41" pos:end="69:63"><name pos:start="69:41" pos:end="69:58">qobject_to_qstring</name><argument_list pos:start="69:59" pos:end="69:63">(<argument pos:start="69:60" pos:end="69:62"><expr pos:start="69:60" pos:end="69:62"><name pos:start="69:60" pos:end="69:62">key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:67" pos:end="69:71"><expr pos:start="69:67" pos:end="69:71"><name pos:start="69:67" pos:end="69:71">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:24"><expr pos:start="73:5" pos:end="73:23"><call pos:start="73:5" pos:end="73:23"><name pos:start="73:5" pos:end="73:18">qobject_decref</name><argument_list pos:start="73:19" pos:end="73:23">(<argument pos:start="73:20" pos:end="73:22"><expr pos:start="73:20" pos:end="73:22"><name pos:start="73:20" pos:end="73:22">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>



<label pos:start="81:1" pos:end="81:4"><name pos:start="81:1" pos:end="81:3">out</name>:</label>

    <expr_stmt pos:start="83:5" pos:end="83:45"><expr pos:start="83:5" pos:end="83:44"><call pos:start="83:5" pos:end="83:44"><name pos:start="83:5" pos:end="83:26">parser_context_restore</name><argument_list pos:start="83:27" pos:end="83:44">(<argument pos:start="83:28" pos:end="83:31"><expr pos:start="83:28" pos:end="83:31"><name pos:start="83:28" pos:end="83:31">ctxt</name></expr></argument>, <argument pos:start="83:34" pos:end="83:43"><expr pos:start="83:34" pos:end="83:43"><name pos:start="83:34" pos:end="83:43">saved_ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:24"><expr pos:start="85:5" pos:end="85:23"><call pos:start="85:5" pos:end="85:23"><name pos:start="85:5" pos:end="85:18">qobject_decref</name><argument_list pos:start="85:19" pos:end="85:23">(<argument pos:start="85:20" pos:end="85:22"><expr pos:start="85:20" pos:end="85:22"><name pos:start="85:20" pos:end="85:22">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="89:5" pos:end="89:14">return <expr pos:start="89:12" pos:end="89:13"><operator pos:start="89:12" pos:end="89:12">-</operator><literal type="number" pos:start="89:13" pos:end="89:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
