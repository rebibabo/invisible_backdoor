<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2835.c" pos:tabs="8"><function pos:start="1:1" pos:end="261:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_vaapi_decode_init</name><parameter_list pos:start="1:25" pos:end="1:47">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="261:1">{<block_content pos:start="5:5" pos:end="259:15">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">VAAPIDecodeContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">ctx</name> <init pos:start="5:29" pos:end="5:64">= <expr pos:start="5:31" pos:end="5:64"><name pos:start="5:31" pos:end="5:64"><name pos:start="5:31" pos:end="5:35">avctx</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:45">internal</name><operator pos:start="5:46" pos:end="5:47">-&gt;</operator><name pos:start="5:48" pos:end="5:64">hwaccel_priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">VAStatus</name></type> <name pos:start="7:14" pos:end="7:16">vas</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:36"><expr pos:start="13:5" pos:end="13:35"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:7">ctx</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:18">va_config</name></name>  <operator pos:start="13:21" pos:end="13:21">=</operator> <name pos:start="13:23" pos:end="13:35">VA_INVALID_ID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="20:0"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:7">ctx</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:19">va_context</name></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:35">VA_INVALID_ID</name></expr>;</expr_stmt>



<cpp:if pos:start="19:1" pos:end="19:24">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:24">FF_API_VAAPI_CONTEXT</name></expr></cpp:if>

    <if_stmt pos:start="21:5" pos:end="136:0"><if pos:start="21:5" pos:end="73:5">if <condition pos:start="21:8" pos:end="21:31">(<expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:13">avctx</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:30">hwaccel_context</name></name></expr>)</condition> <block pos:start="21:33" pos:end="73:5">{<block_content pos:start="23:9" pos:end="69:55">

        <expr_stmt pos:start="23:9" pos:end="25:45"><expr pos:start="23:9" pos:end="25:44"><call pos:start="23:9" pos:end="25:44"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="25:44">(<argument pos:start="23:16" pos:end="23:20"><expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">avctx</name></expr></argument>, <argument pos:start="23:23" pos:end="23:36"><expr pos:start="23:23" pos:end="23:36"><name pos:start="23:23" pos:end="23:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="23:39" pos:end="25:43"><expr pos:start="23:39" pos:end="25:43"><literal type="string" pos:start="23:39" pos:end="23:64">"Using deprecated struct "</literal>

               <literal type="string" pos:start="25:16" pos:end="25:43">"vaapi_context in decode.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:34"><expr pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:11">ctx</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:29">have_old_context</name></name> <operator pos:start="29:31" pos:end="29:31">=</operator> <literal type="number" pos:start="29:33" pos:end="29:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:50"><expr pos:start="31:9" pos:end="31:49"><name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:11">ctx</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:24">old_context</name></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <name pos:start="31:28" pos:end="31:49"><name pos:start="31:28" pos:end="31:32">avctx</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:49">hwaccel_context</name></name></expr>;</expr_stmt>



        <comment type="line" pos:start="35:9" pos:end="35:65">// Really we only want the VAAPI device context, but this</comment>

        <comment type="line" pos:start="37:9" pos:end="37:68">// allocates a whole generic device context because we don't</comment>

        <comment type="line" pos:start="39:9" pos:end="39:64">// have any other way to determine how big it should be.</comment>

        <expr_stmt pos:start="41:9" pos:end="43:58"><expr pos:start="41:9" pos:end="43:57"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:11">ctx</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:23">device_ref</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator>

            <call pos:start="43:13" pos:end="43:57"><name pos:start="43:13" pos:end="43:33">av_hwdevice_ctx_alloc</name><argument_list pos:start="43:34" pos:end="43:57">(<argument pos:start="43:35" pos:end="43:56"><expr pos:start="43:35" pos:end="43:56"><name pos:start="43:35" pos:end="43:56">AV_HWDEVICE_TYPE_VAAPI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:29">(<expr pos:start="45:13" pos:end="45:28"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:28"><name pos:start="45:14" pos:end="45:16">ctx</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:28">device_ref</name></name></expr>)</condition> <block pos:start="45:31" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:22">

            <expr_stmt pos:start="47:13" pos:end="47:34"><expr pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:15">err</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <call pos:start="47:19" pos:end="47:33"><name pos:start="47:19" pos:end="47:25">AVERROR</name><argument_list pos:start="47:26" pos:end="47:33">(<argument pos:start="47:27" pos:end="47:32"><expr pos:start="47:27" pos:end="47:32"><name pos:start="47:27" pos:end="47:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="49:13" pos:end="49:22">goto <name pos:start="49:18" pos:end="49:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:64"><expr pos:start="53:9" pos:end="53:63"><name pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:11">ctx</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:19">device</name></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <operator pos:start="53:23" pos:end="53:23">(</operator><name pos:start="53:24" pos:end="53:40">AVHWDeviceContext</name><operator pos:start="53:41" pos:end="53:41">*</operator><operator pos:start="53:42" pos:end="53:42">)</operator><name pos:start="53:43" pos:end="53:63"><name pos:start="53:43" pos:end="53:45">ctx</name><operator pos:start="53:46" pos:end="53:47">-&gt;</operator><name pos:start="53:48" pos:end="53:57">device_ref</name><operator pos:start="53:58" pos:end="53:59">-&gt;</operator><name pos:start="53:60" pos:end="53:63">data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:11">ctx</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:18">hwctx</name></name>  <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:40"><name pos:start="55:23" pos:end="55:25">ctx</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:33">device</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:40">hwctx</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:56"><expr pos:start="59:9" pos:end="59:55"><name pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:11">ctx</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:18">hwctx</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:27">display</name></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <name pos:start="59:31" pos:end="59:55"><name pos:start="59:31" pos:end="59:33">ctx</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:46">old_context</name><operator pos:start="59:47" pos:end="59:48">-&gt;</operator><name pos:start="59:49" pos:end="59:55">display</name></name></expr>;</expr_stmt>



        <comment type="line" pos:start="63:9" pos:end="63:67">// The old VAAPI decode setup assumed this quirk was always</comment>

        <comment type="line" pos:start="65:9" pos:end="65:67">// present, so set it here to avoid the behaviour changing.</comment>

        <expr_stmt pos:start="67:9" pos:end="69:55"><expr pos:start="67:9" pos:end="69:54"><name pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:11">ctx</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:18">hwctx</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:33">driver_quirks</name></name> <operator pos:start="67:35" pos:end="67:35">=</operator>

            <name pos:start="69:13" pos:end="69:54">AV_VAAPI_DRIVER_QUIRK_RENDER_PARAM_BUFFERS</name></expr>;</expr_stmt>



    </block_content>}</block></if> <if type="elseif" pos:start="73:7" pos:end="97:5">else

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>

    if <condition pos:start="77:8" pos:end="77:29">(<expr pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:13">avctx</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:28">hw_frames_ctx</name></name></expr>)</condition> <block pos:start="77:31" pos:end="97:5">{<block_content pos:start="87:9" pos:end="93:41">

        <comment type="line" pos:start="79:9" pos:end="79:67">// This structure has a shorter lifetime than the enclosing</comment>

        <comment type="line" pos:start="81:9" pos:end="81:66">// AVCodecContext, so we inherit the references from there</comment>

        <comment type="line" pos:start="83:9" pos:end="83:49">// and do not need to make separate ones.</comment>



        <expr_stmt pos:start="87:9" pos:end="87:69"><expr pos:start="87:9" pos:end="87:68"><name pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:11">ctx</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:19">frames</name></name> <operator pos:start="87:21" pos:end="87:21">=</operator> <operator pos:start="87:23" pos:end="87:23">(</operator><name pos:start="87:24" pos:end="87:40">AVHWFramesContext</name><operator pos:start="87:41" pos:end="87:41">*</operator><operator pos:start="87:42" pos:end="87:42">)</operator><name pos:start="87:43" pos:end="87:68"><name pos:start="87:43" pos:end="87:47">avctx</name><operator pos:start="87:48" pos:end="87:49">-&gt;</operator><name pos:start="87:50" pos:end="87:62">hw_frames_ctx</name><operator pos:start="87:63" pos:end="87:64">-&gt;</operator><name pos:start="87:65" pos:end="87:68">data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:41"><expr pos:start="89:9" pos:end="89:40"><name pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:11">ctx</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:17">hwfc</name></name>   <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:40"><name pos:start="89:23" pos:end="89:25">ctx</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:33">frames</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:40">hwctx</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:46"><expr pos:start="91:9" pos:end="91:45"><name pos:start="91:9" pos:end="91:19"><name pos:start="91:9" pos:end="91:11">ctx</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:19">device</name></name> <operator pos:start="91:21" pos:end="91:21">=</operator> <name pos:start="91:23" pos:end="91:45"><name pos:start="91:23" pos:end="91:25">ctx</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:33">frames</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:45">device_ctx</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:41"><expr pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:11">ctx</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:18">hwctx</name></name>  <operator pos:start="93:21" pos:end="93:21">=</operator> <name pos:start="93:23" pos:end="93:40"><name pos:start="93:23" pos:end="93:25">ctx</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:33">device</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:40">hwctx</name></name></expr>;</expr_stmt>



    </block_content>}</block></if> <if type="elseif" pos:start="97:7" pos:end="121:5">else if <condition pos:start="97:15" pos:end="97:36">(<expr pos:start="97:16" pos:end="97:35"><name pos:start="97:16" pos:end="97:35"><name pos:start="97:16" pos:end="97:20">avctx</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:35">hw_device_ctx</name></name></expr>)</condition> <block pos:start="97:38" pos:end="121:5">{<block_content pos:start="99:9" pos:end="117:9">

        <expr_stmt pos:start="99:9" pos:end="99:69"><expr pos:start="99:9" pos:end="99:68"><name pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:11">ctx</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:19">device</name></name> <operator pos:start="99:21" pos:end="99:21">=</operator> <operator pos:start="99:23" pos:end="99:23">(</operator><name pos:start="99:24" pos:end="99:40">AVHWDeviceContext</name><operator pos:start="99:41" pos:end="99:41">*</operator><operator pos:start="99:42" pos:end="99:42">)</operator><name pos:start="99:43" pos:end="99:68"><name pos:start="99:43" pos:end="99:47">avctx</name><operator pos:start="99:48" pos:end="99:49">-&gt;</operator><name pos:start="99:50" pos:end="99:62">hw_device_ctx</name><operator pos:start="99:63" pos:end="99:64">-&gt;</operator><name pos:start="99:65" pos:end="99:68">data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:41"><expr pos:start="101:9" pos:end="101:40"><name pos:start="101:9" pos:end="101:18"><name pos:start="101:9" pos:end="101:11">ctx</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:18">hwctx</name></name>  <operator pos:start="101:21" pos:end="101:21">=</operator> <name pos:start="101:23" pos:end="101:40"><name pos:start="101:23" pos:end="101:25">ctx</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:33">device</name><operator pos:start="101:34" pos:end="101:35">-&gt;</operator><name pos:start="101:36" pos:end="101:40">hwctx</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="105:9" pos:end="117:9"><if pos:start="105:9" pos:end="117:9">if <condition pos:start="105:12" pos:end="105:56">(<expr pos:start="105:13" pos:end="105:55"><name pos:start="105:13" pos:end="105:29"><name pos:start="105:13" pos:end="105:15">ctx</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:23">device</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:29">type</name></name> <operator pos:start="105:31" pos:end="105:32">!=</operator> <name pos:start="105:34" pos:end="105:55">AV_HWDEVICE_TYPE_VAAPI</name></expr>)</condition> <block pos:start="105:58" pos:end="117:9">{<block_content pos:start="107:13" pos:end="115:22">

            <expr_stmt pos:start="107:13" pos:end="111:38"><expr pos:start="107:13" pos:end="111:37"><call pos:start="107:13" pos:end="111:37"><name pos:start="107:13" pos:end="107:18">av_log</name><argument_list pos:start="107:19" pos:end="111:37">(<argument pos:start="107:20" pos:end="107:24"><expr pos:start="107:20" pos:end="107:24"><name pos:start="107:20" pos:end="107:24">avctx</name></expr></argument>, <argument pos:start="107:27" pos:end="107:38"><expr pos:start="107:27" pos:end="107:38"><name pos:start="107:27" pos:end="107:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:41" pos:end="109:64"><expr pos:start="107:41" pos:end="109:64"><literal type="string" pos:start="107:41" pos:end="107:68">"Device supplied for VAAPI "</literal>

                   <literal type="string" pos:start="109:20" pos:end="109:64">"decoding must be a VAAPI device (not %d).\n"</literal></expr></argument>,

                   <argument pos:start="111:20" pos:end="111:36"><expr pos:start="111:20" pos:end="111:36"><name pos:start="111:20" pos:end="111:36"><name pos:start="111:20" pos:end="111:22">ctx</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:30">device</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:36">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:34"><expr pos:start="113:13" pos:end="113:33"><name pos:start="113:13" pos:end="113:15">err</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <call pos:start="113:19" pos:end="113:33"><name pos:start="113:19" pos:end="113:25">AVERROR</name><argument_list pos:start="113:26" pos:end="113:33">(<argument pos:start="113:27" pos:end="113:32"><expr pos:start="113:27" pos:end="113:32"><name pos:start="113:27" pos:end="113:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="115:13" pos:end="115:22">goto <name pos:start="115:18" pos:end="115:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></if> <else pos:start="121:7" pos:end="136:0">else <block pos:start="121:12" pos:end="136:0">{<block_content pos:start="123:9" pos:end="129:18">

        <expr_stmt pos:start="123:9" pos:end="125:52"><expr pos:start="123:9" pos:end="125:51"><call pos:start="123:9" pos:end="125:51"><name pos:start="123:9" pos:end="123:14">av_log</name><argument_list pos:start="123:15" pos:end="125:51">(<argument pos:start="123:16" pos:end="123:20"><expr pos:start="123:16" pos:end="123:20"><name pos:start="123:16" pos:end="123:20">avctx</name></expr></argument>, <argument pos:start="123:23" pos:end="123:34"><expr pos:start="123:23" pos:end="123:34"><name pos:start="123:23" pos:end="123:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="123:37" pos:end="125:50"><expr pos:start="123:37" pos:end="125:50"><literal type="string" pos:start="123:37" pos:end="123:74">"A hardware device or frames context "</literal>

               <literal type="string" pos:start="125:16" pos:end="125:50">"is required for VAAPI decoding.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:30"><expr pos:start="127:9" pos:end="127:29"><name pos:start="127:9" pos:end="127:11">err</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <call pos:start="127:15" pos:end="127:29"><name pos:start="127:15" pos:end="127:21">AVERROR</name><argument_list pos:start="127:22" pos:end="127:29">(<argument pos:start="127:23" pos:end="127:28"><expr pos:start="127:23" pos:end="127:28"><name pos:start="127:23" pos:end="127:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="129:9" pos:end="129:18">goto <name pos:start="129:14" pos:end="129:17">fail</name>;</goto>

    </block_content>}</block></else></if_stmt>



<cpp:if pos:start="135:1" pos:end="135:24">#<cpp:directive pos:start="135:2" pos:end="135:3">if</cpp:directive> <expr pos:start="135:5" pos:end="135:24"><name pos:start="135:5" pos:end="135:24">FF_API_VAAPI_CONTEXT</name></expr></cpp:if>

    <if_stmt pos:start="137:5" pos:end="248:0"><if pos:start="137:5" pos:end="149:5">if <condition pos:start="137:8" pos:end="137:30">(<expr pos:start="137:9" pos:end="137:29"><name pos:start="137:9" pos:end="137:29"><name pos:start="137:9" pos:end="137:11">ctx</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:29">have_old_context</name></name></expr>)</condition> <block pos:start="137:32" pos:end="149:5">{<block_content pos:start="139:9" pos:end="147:71">

        <expr_stmt pos:start="139:9" pos:end="139:54"><expr pos:start="139:9" pos:end="139:53"><name pos:start="139:9" pos:end="139:22"><name pos:start="139:9" pos:end="139:11">ctx</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:22">va_config</name></name>  <operator pos:start="139:25" pos:end="139:25">=</operator> <name pos:start="139:27" pos:end="139:53"><name pos:start="139:27" pos:end="139:29">ctx</name><operator pos:start="139:30" pos:end="139:31">-&gt;</operator><name pos:start="139:32" pos:end="139:42">old_context</name><operator pos:start="139:43" pos:end="139:44">-&gt;</operator><name pos:start="139:45" pos:end="139:53">config_id</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:55"><expr pos:start="141:9" pos:end="141:54"><name pos:start="141:9" pos:end="141:23"><name pos:start="141:9" pos:end="141:11">ctx</name><operator pos:start="141:12" pos:end="141:13">-&gt;</operator><name pos:start="141:14" pos:end="141:23">va_context</name></name> <operator pos:start="141:25" pos:end="141:25">=</operator> <name pos:start="141:27" pos:end="141:54"><name pos:start="141:27" pos:end="141:29">ctx</name><operator pos:start="141:30" pos:end="141:31">-&gt;</operator><name pos:start="141:32" pos:end="141:42">old_context</name><operator pos:start="141:43" pos:end="141:44">-&gt;</operator><name pos:start="141:45" pos:end="141:54">context_id</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="145:9" pos:end="147:71"><expr pos:start="145:9" pos:end="147:70"><call pos:start="145:9" pos:end="147:70"><name pos:start="145:9" pos:end="145:14">av_log</name><argument_list pos:start="145:15" pos:end="147:70">(<argument pos:start="145:16" pos:end="145:20"><expr pos:start="145:16" pos:end="145:20"><name pos:start="145:16" pos:end="145:20">avctx</name></expr></argument>, <argument pos:start="145:23" pos:end="145:34"><expr pos:start="145:23" pos:end="145:34"><name pos:start="145:23" pos:end="145:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="145:37" pos:end="147:36"><expr pos:start="145:37" pos:end="147:36"><literal type="string" pos:start="145:37" pos:end="145:66">"Using user-supplied decoder "</literal>

               <literal type="string" pos:start="147:16" pos:end="147:36">"context: %#x/%#x.\n"</literal></expr></argument>, <argument pos:start="147:39" pos:end="147:52"><expr pos:start="147:39" pos:end="147:52"><name pos:start="147:39" pos:end="147:52"><name pos:start="147:39" pos:end="147:41">ctx</name><operator pos:start="147:42" pos:end="147:43">-&gt;</operator><name pos:start="147:44" pos:end="147:52">va_config</name></name></expr></argument>, <argument pos:start="147:55" pos:end="147:69"><expr pos:start="147:55" pos:end="147:69"><name pos:start="147:55" pos:end="147:69"><name pos:start="147:55" pos:end="147:57">ctx</name><operator pos:start="147:58" pos:end="147:59">-&gt;</operator><name pos:start="147:60" pos:end="147:69">va_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="149:7" pos:end="248:0">else <block pos:start="149:12" pos:end="248:0">{<block_content pos:start="155:5" pos:end="244:0">

<cpp:endif pos:start="151:1" pos:end="151:6">#<cpp:directive pos:start="151:2" pos:end="151:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="155:5" pos:end="155:42"><expr pos:start="155:5" pos:end="155:41"><name pos:start="155:5" pos:end="155:7">err</name> <operator pos:start="155:9" pos:end="155:9">=</operator> <call pos:start="155:11" pos:end="155:41"><name pos:start="155:11" pos:end="155:34">vaapi_decode_make_config</name><argument_list pos:start="155:35" pos:end="155:41">(<argument pos:start="155:36" pos:end="155:40"><expr pos:start="155:36" pos:end="155:40"><name pos:start="155:36" pos:end="155:40">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="157:5" pos:end="159:18"><if pos:start="157:5" pos:end="159:18">if <condition pos:start="157:8" pos:end="157:12">(<expr pos:start="157:9" pos:end="157:11"><name pos:start="157:9" pos:end="157:11">err</name></expr>)</condition><block type="pseudo" pos:start="159:9" pos:end="159:18"><block_content pos:start="159:9" pos:end="159:18">

        <goto pos:start="159:9" pos:end="159:18">goto <name pos:start="159:14" pos:end="159:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="163:5" pos:end="209:5"><if pos:start="163:5" pos:end="209:5">if <condition pos:start="163:8" pos:end="163:30">(<expr pos:start="163:9" pos:end="163:29"><operator pos:start="163:9" pos:end="163:9">!</operator><name pos:start="163:10" pos:end="163:29"><name pos:start="163:10" pos:end="163:14">avctx</name><operator pos:start="163:15" pos:end="163:16">-&gt;</operator><name pos:start="163:17" pos:end="163:29">hw_frames_ctx</name></name></expr>)</condition> <block pos:start="163:32" pos:end="209:5">{<block_content pos:start="165:9" pos:end="207:39">

        <expr_stmt pos:start="165:9" pos:end="165:74"><expr pos:start="165:9" pos:end="165:73"><name pos:start="165:9" pos:end="165:28"><name pos:start="165:9" pos:end="165:13">avctx</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:28">hw_frames_ctx</name></name> <operator pos:start="165:30" pos:end="165:30">=</operator> <call pos:start="165:32" pos:end="165:73"><name pos:start="165:32" pos:end="165:51">av_hwframe_ctx_alloc</name><argument_list pos:start="165:52" pos:end="165:73">(<argument pos:start="165:53" pos:end="165:72"><expr pos:start="165:53" pos:end="165:72"><name pos:start="165:53" pos:end="165:72"><name pos:start="165:53" pos:end="165:57">avctx</name><operator pos:start="165:58" pos:end="165:59">-&gt;</operator><name pos:start="165:60" pos:end="165:72">hw_device_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="167:9" pos:end="173:9"><if pos:start="167:9" pos:end="173:9">if <condition pos:start="167:12" pos:end="167:34">(<expr pos:start="167:13" pos:end="167:33"><operator pos:start="167:13" pos:end="167:13">!</operator><name pos:start="167:14" pos:end="167:33"><name pos:start="167:14" pos:end="167:18">avctx</name><operator pos:start="167:19" pos:end="167:20">-&gt;</operator><name pos:start="167:21" pos:end="167:33">hw_frames_ctx</name></name></expr>)</condition> <block pos:start="167:36" pos:end="173:9">{<block_content pos:start="169:13" pos:end="171:22">

            <expr_stmt pos:start="169:13" pos:end="169:34"><expr pos:start="169:13" pos:end="169:33"><name pos:start="169:13" pos:end="169:15">err</name> <operator pos:start="169:17" pos:end="169:17">=</operator> <call pos:start="169:19" pos:end="169:33"><name pos:start="169:19" pos:end="169:25">AVERROR</name><argument_list pos:start="169:26" pos:end="169:33">(<argument pos:start="169:27" pos:end="169:32"><expr pos:start="169:27" pos:end="169:32"><name pos:start="169:27" pos:end="169:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="171:13" pos:end="171:22">goto <name pos:start="171:18" pos:end="171:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:69"><expr pos:start="175:9" pos:end="175:68"><name pos:start="175:9" pos:end="175:19"><name pos:start="175:9" pos:end="175:11">ctx</name><operator pos:start="175:12" pos:end="175:13">-&gt;</operator><name pos:start="175:14" pos:end="175:19">frames</name></name> <operator pos:start="175:21" pos:end="175:21">=</operator> <operator pos:start="175:23" pos:end="175:23">(</operator><name pos:start="175:24" pos:end="175:40">AVHWFramesContext</name><operator pos:start="175:41" pos:end="175:41">*</operator><operator pos:start="175:42" pos:end="175:42">)</operator><name pos:start="175:43" pos:end="175:68"><name pos:start="175:43" pos:end="175:47">avctx</name><operator pos:start="175:48" pos:end="175:49">-&gt;</operator><name pos:start="175:50" pos:end="175:62">hw_frames_ctx</name><operator pos:start="175:63" pos:end="175:64">-&gt;</operator><name pos:start="175:65" pos:end="175:68">data</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="179:9" pos:end="179:47"><expr pos:start="179:9" pos:end="179:46"><name pos:start="179:9" pos:end="179:27"><name pos:start="179:9" pos:end="179:11">ctx</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:19">frames</name><operator pos:start="179:20" pos:end="179:21">-&gt;</operator><name pos:start="179:22" pos:end="179:27">format</name></name> <operator pos:start="179:29" pos:end="179:29">=</operator> <name pos:start="179:31" pos:end="179:46">AV_PIX_FMT_VAAPI</name></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:49"><expr pos:start="181:9" pos:end="181:48"><name pos:start="181:9" pos:end="181:26"><name pos:start="181:9" pos:end="181:11">ctx</name><operator pos:start="181:12" pos:end="181:13">-&gt;</operator><name pos:start="181:14" pos:end="181:19">frames</name><operator pos:start="181:20" pos:end="181:21">-&gt;</operator><name pos:start="181:22" pos:end="181:26">width</name></name>  <operator pos:start="181:29" pos:end="181:29">=</operator> <name pos:start="181:31" pos:end="181:48"><name pos:start="181:31" pos:end="181:35">avctx</name><operator pos:start="181:36" pos:end="181:37">-&gt;</operator><name pos:start="181:38" pos:end="181:48">coded_width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:50"><expr pos:start="183:9" pos:end="183:49"><name pos:start="183:9" pos:end="183:27"><name pos:start="183:9" pos:end="183:11">ctx</name><operator pos:start="183:12" pos:end="183:13">-&gt;</operator><name pos:start="183:14" pos:end="183:19">frames</name><operator pos:start="183:20" pos:end="183:21">-&gt;</operator><name pos:start="183:22" pos:end="183:27">height</name></name> <operator pos:start="183:29" pos:end="183:29">=</operator> <name pos:start="183:31" pos:end="183:49"><name pos:start="183:31" pos:end="183:35">avctx</name><operator pos:start="183:36" pos:end="183:37">-&gt;</operator><name pos:start="183:38" pos:end="183:49">coded_height</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="187:9" pos:end="187:61"><expr pos:start="187:9" pos:end="187:60"><name pos:start="187:9" pos:end="187:30"><name pos:start="187:9" pos:end="187:11">ctx</name><operator pos:start="187:12" pos:end="187:13">-&gt;</operator><name pos:start="187:14" pos:end="187:19">frames</name><operator pos:start="187:20" pos:end="187:21">-&gt;</operator><name pos:start="187:22" pos:end="187:30">sw_format</name></name>         <operator pos:start="187:40" pos:end="187:40">=</operator> <name pos:start="187:42" pos:end="187:60"><name pos:start="187:42" pos:end="187:44">ctx</name><operator pos:start="187:45" pos:end="187:46">-&gt;</operator><name pos:start="187:47" pos:end="187:60">surface_format</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:60"><expr pos:start="189:9" pos:end="189:59"><name pos:start="189:9" pos:end="189:38"><name pos:start="189:9" pos:end="189:11">ctx</name><operator pos:start="189:12" pos:end="189:13">-&gt;</operator><name pos:start="189:14" pos:end="189:19">frames</name><operator pos:start="189:20" pos:end="189:21">-&gt;</operator><name pos:start="189:22" pos:end="189:38">initial_pool_size</name></name> <operator pos:start="189:40" pos:end="189:40">=</operator> <name pos:start="189:42" pos:end="189:59"><name pos:start="189:42" pos:end="189:44">ctx</name><operator pos:start="189:45" pos:end="189:46">-&gt;</operator><name pos:start="189:47" pos:end="189:59">surface_count</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="193:9" pos:end="193:56"><expr pos:start="193:9" pos:end="193:55"><name pos:start="193:9" pos:end="193:11">err</name> <operator pos:start="193:13" pos:end="193:13">=</operator> <call pos:start="193:15" pos:end="193:55"><name pos:start="193:15" pos:end="193:33">av_hwframe_ctx_init</name><argument_list pos:start="193:34" pos:end="193:55">(<argument pos:start="193:35" pos:end="193:54"><expr pos:start="193:35" pos:end="193:54"><name pos:start="193:35" pos:end="193:54"><name pos:start="193:35" pos:end="193:39">avctx</name><operator pos:start="193:40" pos:end="193:41">-&gt;</operator><name pos:start="193:42" pos:end="193:54">hw_frames_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="195:9" pos:end="203:9"><if pos:start="195:9" pos:end="203:9">if <condition pos:start="195:12" pos:end="195:20">(<expr pos:start="195:13" pos:end="195:19"><name pos:start="195:13" pos:end="195:15">err</name> <operator pos:start="195:17" pos:end="195:17">&lt;</operator> <literal type="number" pos:start="195:19" pos:end="195:19">0</literal></expr>)</condition> <block pos:start="195:22" pos:end="203:9">{<block_content pos:start="197:13" pos:end="201:22">

            <expr_stmt pos:start="197:13" pos:end="199:49"><expr pos:start="197:13" pos:end="199:48"><call pos:start="197:13" pos:end="199:48"><name pos:start="197:13" pos:end="197:18">av_log</name><argument_list pos:start="197:19" pos:end="199:48">(<argument pos:start="197:20" pos:end="197:24"><expr pos:start="197:20" pos:end="197:24"><name pos:start="197:20" pos:end="197:24">avctx</name></expr></argument>, <argument pos:start="197:27" pos:end="197:38"><expr pos:start="197:27" pos:end="197:38"><name pos:start="197:27" pos:end="197:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="197:41" pos:end="199:42"><expr pos:start="197:41" pos:end="199:42"><literal type="string" pos:start="197:41" pos:end="197:72">"Failed to initialise internal "</literal>

                   <literal type="string" pos:start="199:20" pos:end="199:42">"frames context: %d.\n"</literal></expr></argument>, <argument pos:start="199:45" pos:end="199:47"><expr pos:start="199:45" pos:end="199:47"><name pos:start="199:45" pos:end="199:47">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="201:13" pos:end="201:22">goto <name pos:start="201:18" pos:end="201:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="207:9" pos:end="207:39"><expr pos:start="207:9" pos:end="207:38"><name pos:start="207:9" pos:end="207:17"><name pos:start="207:9" pos:end="207:11">ctx</name><operator pos:start="207:12" pos:end="207:13">-&gt;</operator><name pos:start="207:14" pos:end="207:17">hwfc</name></name> <operator pos:start="207:19" pos:end="207:19">=</operator> <name pos:start="207:21" pos:end="207:38"><name pos:start="207:21" pos:end="207:23">ctx</name><operator pos:start="207:24" pos:end="207:25">-&gt;</operator><name pos:start="207:26" pos:end="207:31">frames</name><operator pos:start="207:32" pos:end="207:33">-&gt;</operator><name pos:start="207:34" pos:end="207:38">hwctx</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="213:5" pos:end="223:44"><expr pos:start="213:5" pos:end="223:43"><name pos:start="213:5" pos:end="213:7">vas</name> <operator pos:start="213:9" pos:end="213:9">=</operator> <call pos:start="213:11" pos:end="223:43"><name pos:start="213:11" pos:end="213:25">vaCreateContext</name><argument_list pos:start="213:26" pos:end="223:43">(<argument pos:start="213:27" pos:end="213:45"><expr pos:start="213:27" pos:end="213:45"><name pos:start="213:27" pos:end="213:45"><name pos:start="213:27" pos:end="213:29">ctx</name><operator pos:start="213:30" pos:end="213:31">-&gt;</operator><name pos:start="213:32" pos:end="213:36">hwctx</name><operator pos:start="213:37" pos:end="213:38">-&gt;</operator><name pos:start="213:39" pos:end="213:45">display</name></name></expr></argument>, <argument pos:start="213:48" pos:end="213:61"><expr pos:start="213:48" pos:end="213:61"><name pos:start="213:48" pos:end="213:61"><name pos:start="213:48" pos:end="213:50">ctx</name><operator pos:start="213:51" pos:end="213:52">-&gt;</operator><name pos:start="213:53" pos:end="213:61">va_config</name></name></expr></argument>,

                          <argument pos:start="215:27" pos:end="215:44"><expr pos:start="215:27" pos:end="215:44"><name pos:start="215:27" pos:end="215:44"><name pos:start="215:27" pos:end="215:31">avctx</name><operator pos:start="215:32" pos:end="215:33">-&gt;</operator><name pos:start="215:34" pos:end="215:44">coded_width</name></name></expr></argument>, <argument pos:start="215:47" pos:end="215:65"><expr pos:start="215:47" pos:end="215:65"><name pos:start="215:47" pos:end="215:65"><name pos:start="215:47" pos:end="215:51">avctx</name><operator pos:start="215:52" pos:end="215:53">-&gt;</operator><name pos:start="215:54" pos:end="215:65">coded_height</name></name></expr></argument>,

                          <argument pos:start="217:27" pos:end="217:40"><expr pos:start="217:27" pos:end="217:40"><name pos:start="217:27" pos:end="217:40">VA_PROGRESSIVE</name></expr></argument>,

                          <argument pos:start="219:27" pos:end="219:48"><expr pos:start="219:27" pos:end="219:48"><name pos:start="219:27" pos:end="219:48"><name pos:start="219:27" pos:end="219:29">ctx</name><operator pos:start="219:30" pos:end="219:31">-&gt;</operator><name pos:start="219:32" pos:end="219:35">hwfc</name><operator pos:start="219:36" pos:end="219:37">-&gt;</operator><name pos:start="219:38" pos:end="219:48">surface_ids</name></name></expr></argument>,

                          <argument pos:start="221:27" pos:end="221:48"><expr pos:start="221:27" pos:end="221:48"><name pos:start="221:27" pos:end="221:48"><name pos:start="221:27" pos:end="221:29">ctx</name><operator pos:start="221:30" pos:end="221:31">-&gt;</operator><name pos:start="221:32" pos:end="221:35">hwfc</name><operator pos:start="221:36" pos:end="221:37">-&gt;</operator><name pos:start="221:38" pos:end="221:48">nb_surfaces</name></name></expr></argument>,

                          <argument pos:start="223:27" pos:end="223:42"><expr pos:start="223:27" pos:end="223:42"><operator pos:start="223:27" pos:end="223:27">&amp;</operator><name pos:start="223:28" pos:end="223:42"><name pos:start="223:28" pos:end="223:30">ctx</name><operator pos:start="223:31" pos:end="223:32">-&gt;</operator><name pos:start="223:33" pos:end="223:42">va_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="225:5" pos:end="235:5"><if pos:start="225:5" pos:end="235:5">if <condition pos:start="225:8" pos:end="225:33">(<expr pos:start="225:9" pos:end="225:32"><name pos:start="225:9" pos:end="225:11">vas</name> <operator pos:start="225:13" pos:end="225:14">!=</operator> <name pos:start="225:16" pos:end="225:32">VA_STATUS_SUCCESS</name></expr>)</condition> <block pos:start="225:35" pos:end="235:5">{<block_content pos:start="227:9" pos:end="233:18">

        <expr_stmt pos:start="227:9" pos:end="229:60"><expr pos:start="227:9" pos:end="229:59"><call pos:start="227:9" pos:end="229:59"><name pos:start="227:9" pos:end="227:14">av_log</name><argument_list pos:start="227:15" pos:end="229:59">(<argument pos:start="227:16" pos:end="227:20"><expr pos:start="227:16" pos:end="227:20"><name pos:start="227:16" pos:end="227:20">avctx</name></expr></argument>, <argument pos:start="227:23" pos:end="227:34"><expr pos:start="227:23" pos:end="227:34"><name pos:start="227:23" pos:end="227:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="227:37" pos:end="229:36"><expr pos:start="227:37" pos:end="229:36"><literal type="string" pos:start="227:37" pos:end="227:62">"Failed to create decode "</literal>

               <literal type="string" pos:start="229:16" pos:end="229:36">"context: %d (%s).\n"</literal></expr></argument>, <argument pos:start="229:39" pos:end="229:41"><expr pos:start="229:39" pos:end="229:41"><name pos:start="229:39" pos:end="229:41">vas</name></expr></argument>, <argument pos:start="229:44" pos:end="229:58"><expr pos:start="229:44" pos:end="229:58"><call pos:start="229:44" pos:end="229:58"><name pos:start="229:44" pos:end="229:53">vaErrorStr</name><argument_list pos:start="229:54" pos:end="229:58">(<argument pos:start="229:55" pos:end="229:57"><expr pos:start="229:55" pos:end="229:57"><name pos:start="229:55" pos:end="229:57">vas</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:27"><expr pos:start="231:9" pos:end="231:26"><name pos:start="231:9" pos:end="231:11">err</name> <operator pos:start="231:13" pos:end="231:13">=</operator> <call pos:start="231:15" pos:end="231:26"><name pos:start="231:15" pos:end="231:21">AVERROR</name><argument_list pos:start="231:22" pos:end="231:26">(<argument pos:start="231:23" pos:end="231:25"><expr pos:start="231:23" pos:end="231:25"><name pos:start="231:23" pos:end="231:25">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="233:9" pos:end="233:18">goto <name pos:start="233:14" pos:end="233:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="239:5" pos:end="244:0"><expr pos:start="239:5" pos:end="241:57"><call pos:start="239:5" pos:end="241:57"><name pos:start="239:5" pos:end="239:10">av_log</name><argument_list pos:start="239:11" pos:end="241:57">(<argument pos:start="239:12" pos:end="239:16"><expr pos:start="239:12" pos:end="239:16"><name pos:start="239:12" pos:end="239:16">avctx</name></expr></argument>, <argument pos:start="239:19" pos:end="239:30"><expr pos:start="239:19" pos:end="239:30"><name pos:start="239:19" pos:end="239:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="239:33" pos:end="241:23"><expr pos:start="239:33" pos:end="241:23"><literal type="string" pos:start="239:33" pos:end="239:62">"Decode context initialised: "</literal>

           <literal type="string" pos:start="241:12" pos:end="241:23">"%#x/%#x.\n"</literal></expr></argument>, <argument pos:start="241:26" pos:end="241:39"><expr pos:start="241:26" pos:end="241:39"><name pos:start="241:26" pos:end="241:39"><name pos:start="241:26" pos:end="241:28">ctx</name><operator pos:start="241:29" pos:end="241:30">-&gt;</operator><name pos:start="241:31" pos:end="241:39">va_config</name></name></expr></argument>, <argument pos:start="241:42" pos:end="241:56"><expr pos:start="241:42" pos:end="241:56"><name pos:start="241:42" pos:end="241:56"><name pos:start="241:42" pos:end="241:44">ctx</name><operator pos:start="241:45" pos:end="241:46">-&gt;</operator><name pos:start="241:47" pos:end="241:56">va_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="243:1" pos:end="243:24">#<cpp:directive pos:start="243:2" pos:end="243:3">if</cpp:directive> <expr pos:start="243:5" pos:end="243:24"><name pos:start="243:5" pos:end="243:24">FF_API_VAAPI_CONTEXT</name></expr></cpp:if>

    </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="247:1" pos:end="247:6">#<cpp:directive pos:start="247:2" pos:end="247:6">endif</cpp:directive></cpp:endif>



    <return pos:start="251:5" pos:end="251:13">return <expr pos:start="251:12" pos:end="251:12"><literal type="number" pos:start="251:12" pos:end="251:12">0</literal></expr>;</return>



<label pos:start="255:1" pos:end="255:5"><name pos:start="255:1" pos:end="255:4">fail</name>:</label>

    <expr_stmt pos:start="257:5" pos:end="257:34"><expr pos:start="257:5" pos:end="257:33"><call pos:start="257:5" pos:end="257:33"><name pos:start="257:5" pos:end="257:26">ff_vaapi_decode_uninit</name><argument_list pos:start="257:27" pos:end="257:33">(<argument pos:start="257:28" pos:end="257:32"><expr pos:start="257:28" pos:end="257:32"><name pos:start="257:28" pos:end="257:32">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="259:5" pos:end="259:15">return <expr pos:start="259:12" pos:end="259:14"><name pos:start="259:12" pos:end="259:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
