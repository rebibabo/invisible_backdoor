<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3025.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">vt82c686b_pm_initfn</name><parameter_list pos:start="1:31" pos:end="1:46">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:40">PCIDevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:13">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">VT686PMState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:55">= <expr pos:start="5:23" pos:end="5:55"><call pos:start="5:23" pos:end="5:55"><name pos:start="5:23" pos:end="5:31">DO_UPCAST</name><argument_list pos:start="5:32" pos:end="5:55">(<argument pos:start="5:33" pos:end="5:44"><expr pos:start="5:33" pos:end="5:44"><name pos:start="5:33" pos:end="5:44">VT686PMState</name></expr></argument>, <argument pos:start="5:47" pos:end="5:49"><expr pos:start="5:47" pos:end="5:49"><name pos:start="5:47" pos:end="5:49">dev</name></expr></argument>, <argument pos:start="5:52" pos:end="5:54"><expr pos:start="5:52" pos:end="5:54"><name pos:start="5:52" pos:end="5:54">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:21">pci_conf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:29"><expr pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:12">pci_conf</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:28"><name pos:start="11:16" pos:end="11:16">s</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:21">dev</name><operator pos:start="11:22" pos:end="11:22">.</operator><name pos:start="11:23" pos:end="11:28">config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:58"><expr pos:start="13:5" pos:end="13:57"><call pos:start="13:5" pos:end="13:57"><name pos:start="13:5" pos:end="13:28">pci_config_set_vendor_id</name><argument_list pos:start="13:29" pos:end="13:57">(<argument pos:start="13:30" pos:end="13:37"><expr pos:start="13:30" pos:end="13:37"><name pos:start="13:30" pos:end="13:37">pci_conf</name></expr></argument>, <argument pos:start="13:40" pos:end="13:56"><expr pos:start="13:40" pos:end="13:56"><name pos:start="13:40" pos:end="13:56">PCI_VENDOR_ID_VIA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:63"><expr pos:start="15:5" pos:end="15:62"><call pos:start="15:5" pos:end="15:62"><name pos:start="15:5" pos:end="15:28">pci_config_set_device_id</name><argument_list pos:start="15:29" pos:end="15:62">(<argument pos:start="15:30" pos:end="15:37"><expr pos:start="15:30" pos:end="15:37"><name pos:start="15:30" pos:end="15:37">pci_conf</name></expr></argument>, <argument pos:start="15:40" pos:end="15:61"><expr pos:start="15:40" pos:end="15:61"><name pos:start="15:40" pos:end="15:61">PCI_DEVICE_ID_VIA_ACPI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:59"><expr pos:start="17:5" pos:end="17:58"><call pos:start="17:5" pos:end="17:58"><name pos:start="17:5" pos:end="17:24">pci_config_set_class</name><argument_list pos:start="17:25" pos:end="17:58">(<argument pos:start="17:26" pos:end="17:33"><expr pos:start="17:26" pos:end="17:33"><name pos:start="17:26" pos:end="17:33">pci_conf</name></expr></argument>, <argument pos:start="17:36" pos:end="17:57"><expr pos:start="17:36" pos:end="17:57"><name pos:start="17:36" pos:end="17:57">PCI_CLASS_BRIDGE_OTHER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><call pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:27">pci_config_set_revision</name><argument_list pos:start="19:28" pos:end="19:43">(<argument pos:start="19:29" pos:end="19:36"><expr pos:start="19:29" pos:end="19:36"><name pos:start="19:29" pos:end="19:36">pci_conf</name></expr></argument>, <argument pos:start="19:39" pos:end="19:42"><expr pos:start="19:39" pos:end="19:42"><literal type="number" pos:start="19:39" pos:end="19:42">0x40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:44"><expr pos:start="23:5" pos:end="23:43"><call pos:start="23:5" pos:end="23:43"><name pos:start="23:5" pos:end="23:16">pci_set_word</name><argument_list pos:start="23:17" pos:end="23:43">(<argument pos:start="23:18" pos:end="23:39"><expr pos:start="23:18" pos:end="23:39"><name pos:start="23:18" pos:end="23:25">pci_conf</name> <operator pos:start="23:27" pos:end="23:27">+</operator> <name pos:start="23:29" pos:end="23:39">PCI_COMMAND</name></expr></argument>, <argument pos:start="23:42" pos:end="23:42"><expr pos:start="23:42" pos:end="23:42"><literal type="number" pos:start="23:42" pos:end="23:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:43"><expr pos:start="25:5" pos:end="27:42"><call pos:start="25:5" pos:end="27:42"><name pos:start="25:5" pos:end="25:16">pci_set_word</name><argument_list pos:start="25:17" pos:end="27:42">(<argument pos:start="25:18" pos:end="25:38"><expr pos:start="25:18" pos:end="25:38"><name pos:start="25:18" pos:end="25:25">pci_conf</name> <operator pos:start="25:27" pos:end="25:27">+</operator> <name pos:start="25:29" pos:end="25:38">PCI_STATUS</name></expr></argument>, <argument pos:start="25:41" pos:end="27:41"><expr pos:start="25:41" pos:end="27:41"><name pos:start="25:41" pos:end="25:60">PCI_STATUS_FAST_BACK</name> <operator pos:start="25:62" pos:end="25:62">|</operator>

                 <name pos:start="27:18" pos:end="27:41">PCI_STATUS_DEVSEL_MEDIUM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:48">/* 0x48-0x4B is Power Management I/O Base */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><call pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:16">pci_set_long</name><argument_list pos:start="33:17" pos:end="33:45">(<argument pos:start="33:18" pos:end="33:32"><expr pos:start="33:18" pos:end="33:32"><name pos:start="33:18" pos:end="33:25">pci_conf</name> <operator pos:start="33:27" pos:end="33:27">+</operator> <literal type="number" pos:start="33:29" pos:end="33:32">0x48</literal></expr></argument>, <argument pos:start="33:35" pos:end="33:44"><expr pos:start="33:35" pos:end="33:44"><literal type="number" pos:start="33:35" pos:end="33:44">0x00000001</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:33">/* SMB ports:0xeee0~0xeeef */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:54"><expr pos:start="39:5" pos:end="39:53"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:18">smb_io_base</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator><operator pos:start="39:21" pos:end="39:21">(</operator><operator pos:start="39:22" pos:end="39:22">(</operator><name pos:start="39:23" pos:end="39:36"><name pos:start="39:23" pos:end="39:23">s</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:36">smb_io_base</name></name> <operator pos:start="39:38" pos:end="39:38">&amp;</operator> <literal type="number" pos:start="39:40" pos:end="39:45">0xfff0</literal><operator pos:start="39:46" pos:end="39:46">)</operator> <operator pos:start="39:48" pos:end="39:48">+</operator> <literal type="number" pos:start="39:50" pos:end="39:52">0x0</literal><operator pos:start="39:53" pos:end="39:53">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:40"><expr pos:start="41:5" pos:end="41:39"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:12">pci_conf</name><index pos:start="41:13" pos:end="41:18">[<expr pos:start="41:14" pos:end="41:17"><literal type="number" pos:start="41:14" pos:end="41:17">0x90</literal></expr>]</index></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:35"><name pos:start="41:22" pos:end="41:22">s</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:35">smb_io_base</name></name> <operator pos:start="41:37" pos:end="41:37">|</operator> <literal type="number" pos:start="41:39" pos:end="41:39">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:12">pci_conf</name><index pos:start="43:13" pos:end="43:18">[<expr pos:start="43:14" pos:end="43:17"><literal type="number" pos:start="43:14" pos:end="43:17">0x91</literal></expr>]</index></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:35"><name pos:start="43:22" pos:end="43:22">s</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:35">smb_io_base</name></name> <operator pos:start="43:37" pos:end="43:38">&gt;&gt;</operator> <literal type="number" pos:start="43:40" pos:end="43:40">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:26"><expr pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:12">pci_conf</name><index pos:start="45:13" pos:end="45:18">[<expr pos:start="45:14" pos:end="45:17"><literal type="number" pos:start="45:14" pos:end="45:17">0xd2</literal></expr>]</index></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <literal type="number" pos:start="45:22" pos:end="45:25">0x90</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:78"><expr pos:start="47:5" pos:end="47:77"><call pos:start="47:5" pos:end="47:77"><name pos:start="47:5" pos:end="47:25">register_ioport_write</name><argument_list pos:start="47:26" pos:end="47:77">(<argument pos:start="47:27" pos:end="47:40"><expr pos:start="47:27" pos:end="47:40"><name pos:start="47:27" pos:end="47:40"><name pos:start="47:27" pos:end="47:27">s</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:40">smb_io_base</name></name></expr></argument>, <argument pos:start="47:43" pos:end="47:45"><expr pos:start="47:43" pos:end="47:45"><literal type="number" pos:start="47:43" pos:end="47:45">0xf</literal></expr></argument>, <argument pos:start="47:48" pos:end="47:48"><expr pos:start="47:48" pos:end="47:48"><literal type="number" pos:start="47:48" pos:end="47:48">1</literal></expr></argument>, <argument pos:start="47:51" pos:end="47:67"><expr pos:start="47:51" pos:end="47:67"><name pos:start="47:51" pos:end="47:67">smb_ioport_writeb</name></expr></argument>, <argument pos:start="47:70" pos:end="47:76"><expr pos:start="47:70" pos:end="47:76"><operator pos:start="47:70" pos:end="47:70">&amp;</operator><name pos:start="47:71" pos:end="47:76"><name pos:start="47:71" pos:end="47:71">s</name><operator pos:start="47:72" pos:end="47:73">-&gt;</operator><name pos:start="47:74" pos:end="47:76">smb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:76"><expr pos:start="49:5" pos:end="49:75"><call pos:start="49:5" pos:end="49:75"><name pos:start="49:5" pos:end="49:24">register_ioport_read</name><argument_list pos:start="49:25" pos:end="49:75">(<argument pos:start="49:26" pos:end="49:39"><expr pos:start="49:26" pos:end="49:39"><name pos:start="49:26" pos:end="49:39"><name pos:start="49:26" pos:end="49:26">s</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:39">smb_io_base</name></name></expr></argument>, <argument pos:start="49:42" pos:end="49:44"><expr pos:start="49:42" pos:end="49:44"><literal type="number" pos:start="49:42" pos:end="49:44">0xf</literal></expr></argument>, <argument pos:start="49:47" pos:end="49:47"><expr pos:start="49:47" pos:end="49:47"><literal type="number" pos:start="49:47" pos:end="49:47">1</literal></expr></argument>, <argument pos:start="49:50" pos:end="49:65"><expr pos:start="49:50" pos:end="49:65"><name pos:start="49:50" pos:end="49:65">smb_ioport_readb</name></expr></argument>, <argument pos:start="49:68" pos:end="49:74"><expr pos:start="49:68" pos:end="49:74"><operator pos:start="49:68" pos:end="49:68">&amp;</operator><name pos:start="49:69" pos:end="49:74"><name pos:start="49:69" pos:end="49:69">s</name><operator pos:start="49:70" pos:end="49:71">-&gt;</operator><name pos:start="49:72" pos:end="49:74">smb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:31"><expr pos:start="53:5" pos:end="53:30"><call pos:start="53:5" pos:end="53:30"><name pos:start="53:5" pos:end="53:12">apm_init</name><argument_list pos:start="53:13" pos:end="53:30">(<argument pos:start="53:14" pos:end="53:20"><expr pos:start="53:14" pos:end="53:20"><operator pos:start="53:14" pos:end="53:14">&amp;</operator><name pos:start="53:15" pos:end="53:20"><name pos:start="53:15" pos:end="53:15">s</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:20">apm</name></name></expr></argument>, <argument pos:start="53:23" pos:end="53:26"><expr pos:start="53:23" pos:end="53:26"><name pos:start="53:23" pos:end="53:26">NULL</name></expr></argument>, <argument pos:start="53:29" pos:end="53:29"><expr pos:start="53:29" pos:end="53:29"><name pos:start="53:29" pos:end="53:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:44"><expr pos:start="57:5" pos:end="57:43"><call pos:start="57:5" pos:end="57:43"><name pos:start="57:5" pos:end="57:20">acpi_pm_tmr_init</name><argument_list pos:start="57:21" pos:end="57:43">(<argument pos:start="57:22" pos:end="57:28"><expr pos:start="57:22" pos:end="57:28"><operator pos:start="57:22" pos:end="57:22">&amp;</operator><name pos:start="57:23" pos:end="57:28"><name pos:start="57:23" pos:end="57:23">s</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:28">tmr</name></name></expr></argument>, <argument pos:start="57:31" pos:end="57:42"><expr pos:start="57:31" pos:end="57:42"><name pos:start="57:31" pos:end="57:42">pm_tmr_timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:41"><expr pos:start="59:5" pos:end="59:40"><call pos:start="59:5" pos:end="59:40"><name pos:start="59:5" pos:end="59:21">acpi_pm1_cnt_init</name><argument_list pos:start="59:22" pos:end="59:40">(<argument pos:start="59:23" pos:end="59:33"><expr pos:start="59:23" pos:end="59:33"><operator pos:start="59:23" pos:end="59:23">&amp;</operator><name pos:start="59:24" pos:end="59:33"><name pos:start="59:24" pos:end="59:24">s</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:33">pm1_cnt</name></name></expr></argument>, <argument pos:start="59:36" pos:end="59:39"><expr pos:start="59:36" pos:end="59:39"><name pos:start="59:36" pos:end="59:39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:41"><expr pos:start="63:5" pos:end="63:40"><call pos:start="63:5" pos:end="63:40"><name pos:start="63:5" pos:end="63:17">pm_smbus_init</name><argument_list pos:start="63:18" pos:end="63:40">(<argument pos:start="63:19" pos:end="63:30"><expr pos:start="63:19" pos:end="63:30"><operator pos:start="63:19" pos:end="63:19">&amp;</operator><name pos:start="63:20" pos:end="63:30"><name pos:start="63:20" pos:end="63:20">s</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:25">dev</name><operator pos:start="63:26" pos:end="63:26">.</operator><name pos:start="63:27" pos:end="63:30">qdev</name></name></expr></argument>, <argument pos:start="63:33" pos:end="63:39"><expr pos:start="63:33" pos:end="63:39"><operator pos:start="63:33" pos:end="63:33">&amp;</operator><name pos:start="63:34" pos:end="63:39"><name pos:start="63:34" pos:end="63:34">s</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:39">smb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
