<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1844.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">bdrv_register</name><parameter_list pos:start="1:19" pos:end="1:37">(<parameter pos:start="1:20" pos:end="1:36"><decl pos:start="1:20" pos:end="1:36"><type pos:start="1:20" pos:end="1:32"><name pos:start="1:20" pos:end="1:30">BlockDriver</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:36">bdrv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:49">

    <comment type="block" pos:start="5:5" pos:end="5:66">/* Block drivers without coroutine functions need emulation */</comment>

    <if_stmt pos:start="7:5" pos:end="33:5"><if pos:start="7:5" pos:end="33:5">if <condition pos:start="7:8" pos:end="7:29">(<expr pos:start="7:9" pos:end="7:28"><operator pos:start="7:9" pos:end="7:9">!</operator><name pos:start="7:10" pos:end="7:28"><name pos:start="7:10" pos:end="7:13">bdrv</name><operator pos:start="7:14" pos:end="7:15">-&gt;</operator><name pos:start="7:16" pos:end="7:28">bdrv_co_readv</name></name></expr>)</condition> <block pos:start="7:31" pos:end="33:5">{<block_content pos:start="9:9" pos:end="31:9">

        <expr_stmt pos:start="9:9" pos:end="9:47"><expr pos:start="9:9" pos:end="9:46"><name pos:start="9:9" pos:end="9:27"><name pos:start="9:9" pos:end="9:12">bdrv</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:27">bdrv_co_readv</name></name> <operator pos:start="9:29" pos:end="9:29">=</operator> <name pos:start="9:31" pos:end="9:46">bdrv_co_readv_em</name></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:49"><expr pos:start="11:9" pos:end="11:48"><name pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:12">bdrv</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:28">bdrv_co_writev</name></name> <operator pos:start="11:30" pos:end="11:30">=</operator> <name pos:start="11:32" pos:end="11:48">bdrv_co_writev_em</name></expr>;</expr_stmt>



        <if_stmt pos:start="15:9" pos:end="31:9"><if pos:start="15:9" pos:end="23:9">if <condition pos:start="15:12" pos:end="15:34">(<expr pos:start="15:13" pos:end="15:33"><operator pos:start="15:13" pos:end="15:13">!</operator><name pos:start="15:14" pos:end="15:33"><name pos:start="15:14" pos:end="15:17">bdrv</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:33">bdrv_aio_readv</name></name></expr>)</condition> <block pos:start="15:36" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:55">

            <comment type="block" pos:start="17:13" pos:end="17:41">/* add AIO emulation layer */</comment>

            <expr_stmt pos:start="19:13" pos:end="19:53"><expr pos:start="19:13" pos:end="19:52"><name pos:start="19:13" pos:end="19:32"><name pos:start="19:13" pos:end="19:16">bdrv</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:32">bdrv_aio_readv</name></name> <operator pos:start="19:34" pos:end="19:34">=</operator> <name pos:start="19:36" pos:end="19:52">bdrv_aio_readv_em</name></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:55"><expr pos:start="21:13" pos:end="21:54"><name pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:16">bdrv</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:33">bdrv_aio_writev</name></name> <operator pos:start="21:35" pos:end="21:35">=</operator> <name pos:start="21:37" pos:end="21:54">bdrv_aio_writev_em</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="23:11" pos:end="31:9">else if <condition pos:start="23:19" pos:end="23:36">(<expr pos:start="23:20" pos:end="23:35"><operator pos:start="23:20" pos:end="23:20">!</operator><name pos:start="23:21" pos:end="23:35"><name pos:start="23:21" pos:end="23:24">bdrv</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:35">bdrv_read</name></name></expr>)</condition> <block pos:start="23:38" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:45">

            <comment type="block" pos:start="25:13" pos:end="25:52">/* add synchronous IO emulation layer */</comment>

            <expr_stmt pos:start="27:13" pos:end="27:43"><expr pos:start="27:13" pos:end="27:42"><name pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:16">bdrv</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:27">bdrv_read</name></name> <operator pos:start="27:29" pos:end="27:29">=</operator> <name pos:start="27:31" pos:end="27:42">bdrv_read_em</name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:45"><expr pos:start="29:13" pos:end="29:44"><name pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:16">bdrv</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:28">bdrv_write</name></name> <operator pos:start="29:30" pos:end="29:30">=</operator> <name pos:start="29:32" pos:end="29:44">bdrv_write_em</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="39:49"><if pos:start="37:5" pos:end="39:49">if <condition pos:start="37:8" pos:end="37:30">(<expr pos:start="37:9" pos:end="37:29"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:29"><name pos:start="37:10" pos:end="37:13">bdrv</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:29">bdrv_aio_flush</name></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:49"><block_content pos:start="39:9" pos:end="39:49">

        <expr_stmt pos:start="39:9" pos:end="39:49"><expr pos:start="39:9" pos:end="39:48"><name pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:12">bdrv</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:28">bdrv_aio_flush</name></name> <operator pos:start="39:30" pos:end="39:30">=</operator> <name pos:start="39:32" pos:end="39:48">bdrv_aio_flush_em</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:49"><expr pos:start="43:5" pos:end="43:48"><call pos:start="43:5" pos:end="43:48"><name pos:start="43:5" pos:end="43:21">QLIST_INSERT_HEAD</name><argument_list pos:start="43:22" pos:end="43:48">(<argument pos:start="43:23" pos:end="43:35"><expr pos:start="43:23" pos:end="43:35"><operator pos:start="43:23" pos:end="43:23">&amp;</operator><name pos:start="43:24" pos:end="43:35">bdrv_drivers</name></expr></argument>, <argument pos:start="43:38" pos:end="43:41"><expr pos:start="43:38" pos:end="43:41"><name pos:start="43:38" pos:end="43:41">bdrv</name></expr></argument>, <argument pos:start="43:44" pos:end="43:47"><expr pos:start="43:44" pos:end="43:47"><name pos:start="43:44" pos:end="43:47">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
