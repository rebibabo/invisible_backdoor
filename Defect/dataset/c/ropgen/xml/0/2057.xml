<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2057.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">hmp_info_memory_devices</name><parameter_list pos:start="1:29" pos:end="1:62">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:36">Monitor</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">mon</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:61"><decl pos:start="1:44" pos:end="1:61"><type pos:start="1:44" pos:end="1:61"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:54">QDict</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61">qdict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:46">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:14">err</name> <init pos:start="5:16" pos:end="5:21">= <expr pos:start="5:18" pos:end="5:21"><name pos:start="5:18" pos:end="5:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:69"><decl pos:start="7:5" pos:end="7:68"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24">MemoryDeviceInfoList</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:35">info_list</name> <init pos:start="7:37" pos:end="7:68">= <expr pos:start="7:39" pos:end="7:68"><call pos:start="7:39" pos:end="7:68"><name pos:start="7:39" pos:end="7:62">qmp_query_memory_devices</name><argument_list pos:start="7:63" pos:end="7:68">(<argument pos:start="7:64" pos:end="7:67"><expr pos:start="7:64" pos:end="7:67"><operator pos:start="7:64" pos:end="7:64">&amp;</operator><name pos:start="7:65" pos:end="7:67">err</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:24">MemoryDeviceInfoList</name> <modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:30">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">MemoryDeviceInfo</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:27">value</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">PCDIMMDeviceInfo</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:24">di</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="67:5">for <control pos:start="17:9" pos:end="17:51">(<init pos:start="17:10" pos:end="17:26"><expr pos:start="17:10" pos:end="17:25"><name pos:start="17:10" pos:end="17:13">info</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:25">info_list</name></expr>;</init> <condition pos:start="17:28" pos:end="17:32"><expr pos:start="17:28" pos:end="17:31"><name pos:start="17:28" pos:end="17:31">info</name></expr>;</condition> <incr pos:start="17:34" pos:end="17:50"><expr pos:start="17:34" pos:end="17:50"><name pos:start="17:34" pos:end="17:37">info</name> <operator pos:start="17:39" pos:end="17:39">=</operator> <name pos:start="17:41" pos:end="17:50"><name pos:start="17:41" pos:end="17:44">info</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:50">next</name></name></expr></incr>)</control> <block pos:start="17:53" pos:end="67:5">{<block_content pos:start="19:9" pos:end="65:9">

        <expr_stmt pos:start="19:9" pos:end="19:28"><expr pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:13">value</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:27"><name pos:start="19:17" pos:end="19:20">info</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:27">value</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="23:9" pos:end="65:9"><if pos:start="23:9" pos:end="65:9">if <condition pos:start="23:12" pos:end="23:18">(<expr pos:start="23:13" pos:end="23:17"><name pos:start="23:13" pos:end="23:17">value</name></expr>)</condition> <block pos:start="23:20" pos:end="65:9">{<block_content pos:start="25:13" pos:end="63:13">

            <switch pos:start="25:13" pos:end="63:13">switch <condition pos:start="25:20" pos:end="25:32">(<expr pos:start="25:21" pos:end="25:31"><name pos:start="25:21" pos:end="25:31"><name pos:start="25:21" pos:end="25:25">value</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:31">kind</name></name></expr>)</condition> <block pos:start="25:34" pos:end="63:13">{<block_content pos:start="27:13" pos:end="61:22">

            <case pos:start="27:13" pos:end="27:46">case <expr pos:start="27:18" pos:end="27:45"><name pos:start="27:18" pos:end="27:45">MEMORY_DEVICE_INFO_KIND_DIMM</name></expr>:</case>

                <expr_stmt pos:start="29:17" pos:end="29:33"><expr pos:start="29:17" pos:end="29:32"><name pos:start="29:17" pos:end="29:18">di</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:32"><name pos:start="29:22" pos:end="29:26">value</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:32">dimm</name></name></expr>;</expr_stmt>



                <expr_stmt pos:start="33:17" pos:end="37:53"><expr pos:start="33:17" pos:end="37:52"><call pos:start="33:17" pos:end="37:52"><name pos:start="33:17" pos:end="33:30">monitor_printf</name><argument_list pos:start="33:31" pos:end="37:52">(<argument pos:start="33:32" pos:end="33:34"><expr pos:start="33:32" pos:end="33:34"><name pos:start="33:32" pos:end="33:34">mon</name></expr></argument>, <argument pos:start="33:37" pos:end="33:66"><expr pos:start="33:37" pos:end="33:66"><literal type="string" pos:start="33:37" pos:end="33:66">"Memory device [%s]: \"%s\"\n"</literal></expr></argument>,

                               <argument pos:start="35:32" pos:end="35:71"><expr pos:start="35:32" pos:end="35:71"><name pos:start="35:32" pos:end="35:71"><name pos:start="35:32" pos:end="35:58">MemoryDeviceInfoKind_lookup</name><index pos:start="35:59" pos:end="35:71">[<expr pos:start="35:60" pos:end="35:70"><name pos:start="35:60" pos:end="35:70"><name pos:start="35:60" pos:end="35:64">value</name><operator pos:start="35:65" pos:end="35:66">-&gt;</operator><name pos:start="35:67" pos:end="35:70">kind</name></name></expr>]</index></name></expr></argument>,

                               <argument pos:start="37:32" pos:end="37:51"><expr pos:start="37:32" pos:end="37:51"><ternary pos:start="37:32" pos:end="37:51"><condition pos:start="37:32" pos:end="37:39"><expr pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:33">di</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:37">id</name></name></expr> ?</condition><then pos:start="37:41" pos:end="37:46"> <expr pos:start="37:41" pos:end="37:46"><name pos:start="37:41" pos:end="37:46"><name pos:start="37:41" pos:end="37:42">di</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:46">id</name></name></expr> </then><else pos:start="37:48" pos:end="37:51">: <expr pos:start="37:50" pos:end="37:51"><literal type="string" pos:start="37:50" pos:end="37:51">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:73"><expr pos:start="39:17" pos:end="39:72"><call pos:start="39:17" pos:end="39:72"><name pos:start="39:17" pos:end="39:30">monitor_printf</name><argument_list pos:start="39:31" pos:end="39:72">(<argument pos:start="39:32" pos:end="39:34"><expr pos:start="39:32" pos:end="39:34"><name pos:start="39:32" pos:end="39:34">mon</name></expr></argument>, <argument pos:start="39:37" pos:end="39:61"><expr pos:start="39:37" pos:end="39:61"><literal type="string" pos:start="39:37" pos:end="39:49">"  addr: 0x%"</literal> <name pos:start="39:51" pos:end="39:56">PRIx64</name> <literal type="string" pos:start="39:58" pos:end="39:61">"\n"</literal></expr></argument>, <argument pos:start="39:64" pos:end="39:71"><expr pos:start="39:64" pos:end="39:71"><name pos:start="39:64" pos:end="39:71"><name pos:start="39:64" pos:end="39:65">di</name><operator pos:start="39:66" pos:end="39:67">-&gt;</operator><name pos:start="39:68" pos:end="39:71">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:71"><expr pos:start="41:17" pos:end="41:70"><call pos:start="41:17" pos:end="41:70"><name pos:start="41:17" pos:end="41:30">monitor_printf</name><argument_list pos:start="41:31" pos:end="41:70">(<argument pos:start="41:32" pos:end="41:34"><expr pos:start="41:32" pos:end="41:34"><name pos:start="41:32" pos:end="41:34">mon</name></expr></argument>, <argument pos:start="41:37" pos:end="41:59"><expr pos:start="41:37" pos:end="41:59"><literal type="string" pos:start="41:37" pos:end="41:47">"  slot: %"</literal> <name pos:start="41:49" pos:end="41:54">PRId64</name> <literal type="string" pos:start="41:56" pos:end="41:59">"\n"</literal></expr></argument>, <argument pos:start="41:62" pos:end="41:69"><expr pos:start="41:62" pos:end="41:69"><name pos:start="41:62" pos:end="41:69"><name pos:start="41:62" pos:end="41:63">di</name><operator pos:start="41:64" pos:end="41:65">-&gt;</operator><name pos:start="41:66" pos:end="41:69">slot</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:71"><expr pos:start="43:17" pos:end="43:70"><call pos:start="43:17" pos:end="43:70"><name pos:start="43:17" pos:end="43:30">monitor_printf</name><argument_list pos:start="43:31" pos:end="43:70">(<argument pos:start="43:32" pos:end="43:34"><expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:34">mon</name></expr></argument>, <argument pos:start="43:37" pos:end="43:59"><expr pos:start="43:37" pos:end="43:59"><literal type="string" pos:start="43:37" pos:end="43:47">"  node: %"</literal> <name pos:start="43:49" pos:end="43:54">PRId64</name> <literal type="string" pos:start="43:56" pos:end="43:59">"\n"</literal></expr></argument>, <argument pos:start="43:62" pos:end="43:69"><expr pos:start="43:62" pos:end="43:69"><name pos:start="43:62" pos:end="43:69"><name pos:start="43:62" pos:end="43:63">di</name><operator pos:start="43:64" pos:end="43:65">-&gt;</operator><name pos:start="43:66" pos:end="43:69">node</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:71"><expr pos:start="45:17" pos:end="45:70"><call pos:start="45:17" pos:end="45:70"><name pos:start="45:17" pos:end="45:30">monitor_printf</name><argument_list pos:start="45:31" pos:end="45:70">(<argument pos:start="45:32" pos:end="45:34"><expr pos:start="45:32" pos:end="45:34"><name pos:start="45:32" pos:end="45:34">mon</name></expr></argument>, <argument pos:start="45:37" pos:end="45:59"><expr pos:start="45:37" pos:end="45:59"><literal type="string" pos:start="45:37" pos:end="45:47">"  size: %"</literal> <name pos:start="45:49" pos:end="45:54">PRIu64</name> <literal type="string" pos:start="45:56" pos:end="45:59">"\n"</literal></expr></argument>, <argument pos:start="45:62" pos:end="45:69"><expr pos:start="45:62" pos:end="45:69"><name pos:start="45:62" pos:end="45:69"><name pos:start="45:62" pos:end="45:63">di</name><operator pos:start="45:64" pos:end="45:65">-&gt;</operator><name pos:start="45:66" pos:end="45:69">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:66"><expr pos:start="47:17" pos:end="47:65"><call pos:start="47:17" pos:end="47:65"><name pos:start="47:17" pos:end="47:30">monitor_printf</name><argument_list pos:start="47:31" pos:end="47:65">(<argument pos:start="47:32" pos:end="47:34"><expr pos:start="47:32" pos:end="47:34"><name pos:start="47:32" pos:end="47:34">mon</name></expr></argument>, <argument pos:start="47:37" pos:end="47:52"><expr pos:start="47:37" pos:end="47:52"><literal type="string" pos:start="47:37" pos:end="47:52">"  memdev: %s\n"</literal></expr></argument>, <argument pos:start="47:55" pos:end="47:64"><expr pos:start="47:55" pos:end="47:64"><name pos:start="47:55" pos:end="47:64"><name pos:start="47:55" pos:end="47:56">di</name><operator pos:start="47:57" pos:end="47:58">-&gt;</operator><name pos:start="47:59" pos:end="47:64">memdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="51:66"><expr pos:start="49:17" pos:end="51:65"><call pos:start="49:17" pos:end="51:65"><name pos:start="49:17" pos:end="49:30">monitor_printf</name><argument_list pos:start="49:31" pos:end="51:65">(<argument pos:start="49:32" pos:end="49:34"><expr pos:start="49:32" pos:end="49:34"><name pos:start="49:32" pos:end="49:34">mon</name></expr></argument>, <argument pos:start="49:37" pos:end="49:56"><expr pos:start="49:37" pos:end="49:56"><literal type="string" pos:start="49:37" pos:end="49:56">"  hotplugged: %s\n"</literal></expr></argument>,

                               <argument pos:start="51:32" pos:end="51:64"><expr pos:start="51:32" pos:end="51:64"><ternary pos:start="51:32" pos:end="51:64"><condition pos:start="51:32" pos:end="51:47"><expr pos:start="51:32" pos:end="51:45"><name pos:start="51:32" pos:end="51:45"><name pos:start="51:32" pos:end="51:33">di</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:45">hotplugged</name></name></expr> ?</condition><then pos:start="51:49" pos:end="51:54"> <expr pos:start="51:49" pos:end="51:54"><literal type="string" pos:start="51:49" pos:end="51:54">"true"</literal></expr> </then><else pos:start="51:56" pos:end="51:64">: <expr pos:start="51:58" pos:end="51:64"><literal type="string" pos:start="51:58" pos:end="51:64">"false"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="55:68"><expr pos:start="53:17" pos:end="55:67"><call pos:start="53:17" pos:end="55:67"><name pos:start="53:17" pos:end="53:30">monitor_printf</name><argument_list pos:start="53:31" pos:end="55:67">(<argument pos:start="53:32" pos:end="53:34"><expr pos:start="53:32" pos:end="53:34"><name pos:start="53:32" pos:end="53:34">mon</name></expr></argument>, <argument pos:start="53:37" pos:end="53:58"><expr pos:start="53:37" pos:end="53:58"><literal type="string" pos:start="53:37" pos:end="53:58">"  hotpluggable: %s\n"</literal></expr></argument>,

                               <argument pos:start="55:32" pos:end="55:66"><expr pos:start="55:32" pos:end="55:66"><ternary pos:start="55:32" pos:end="55:66"><condition pos:start="55:32" pos:end="55:49"><expr pos:start="55:32" pos:end="55:47"><name pos:start="55:32" pos:end="55:47"><name pos:start="55:32" pos:end="55:33">di</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:47">hotpluggable</name></name></expr> ?</condition><then pos:start="55:51" pos:end="55:56"> <expr pos:start="55:51" pos:end="55:56"><literal type="string" pos:start="55:51" pos:end="55:56">"true"</literal></expr> </then><else pos:start="55:58" pos:end="55:66">: <expr pos:start="55:60" pos:end="55:66"><literal type="string" pos:start="55:60" pos:end="55:66">"false"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="57:17" pos:end="57:22">break;</break>

            <default pos:start="59:13" pos:end="59:20">default:</default>

                <break pos:start="61:17" pos:end="61:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="71:5" pos:end="71:46"><expr pos:start="71:5" pos:end="71:45"><call pos:start="71:5" pos:end="71:45"><name pos:start="71:5" pos:end="71:34">qapi_free_MemoryDeviceInfoList</name><argument_list pos:start="71:35" pos:end="71:45">(<argument pos:start="71:36" pos:end="71:44"><expr pos:start="71:36" pos:end="71:44"><name pos:start="71:36" pos:end="71:44">info_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
