<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3777.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:35">gen_stack_update</name><parameter_list pos:start="1:36" pos:end="1:64">(<parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:51"><name pos:start="1:37" pos:end="1:48">DisasContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:63"><decl pos:start="1:54" pos:end="1:63"><type pos:start="1:54" pos:end="1:63"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:63">addend</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:5">

<cpp:ifdef pos:start="5:1" pos:end="5:20">#<cpp:directive pos:start="5:2" pos:end="5:6">ifdef</cpp:directive> <name pos:start="5:8" pos:end="5:20">TARGET_X86_64</name></cpp:ifdef>

    <if_stmt pos:start="7:5" pos:end="23:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:18">(<expr pos:start="7:9" pos:end="7:17"><call pos:start="7:9" pos:end="7:17"><name pos:start="7:9" pos:end="7:14">CODE64</name><argument_list pos:start="7:15" pos:end="7:17">(<argument pos:start="7:16" pos:end="7:16"><expr pos:start="7:16" pos:end="7:16"><name pos:start="7:16" pos:end="7:16">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:20" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:35">

        <expr_stmt pos:start="9:9" pos:end="9:35"><expr pos:start="9:9" pos:end="9:34"><call pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:26">gen_op_addq_ESP_im</name><argument_list pos:start="9:27" pos:end="9:34">(<argument pos:start="9:28" pos:end="9:33"><expr pos:start="9:28" pos:end="9:33"><name pos:start="9:28" pos:end="9:33">addend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="11:7" pos:end="19:5">else

<cpp:endif pos:start="13:1" pos:end="13:6">#<cpp:directive pos:start="13:2" pos:end="13:6">endif</cpp:directive></cpp:endif>

    if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:15">ss32</name></name></expr>)</condition> <block pos:start="15:18" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:35">

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><call pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:26">gen_op_addl_ESP_im</name><argument_list pos:start="17:27" pos:end="17:34">(<argument pos:start="17:28" pos:end="17:33"><expr pos:start="17:28" pos:end="17:33"><name pos:start="17:28" pos:end="17:33">addend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="23:5">else <block pos:start="19:12" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:35">

        <expr_stmt pos:start="21:9" pos:end="21:35"><expr pos:start="21:9" pos:end="21:34"><call pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:26">gen_op_addw_ESP_im</name><argument_list pos:start="21:27" pos:end="21:34">(<argument pos:start="21:28" pos:end="21:33"><expr pos:start="21:28" pos:end="21:33"><name pos:start="21:28" pos:end="21:33">addend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
