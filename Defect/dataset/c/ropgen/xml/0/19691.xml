<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19691.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">adx_parse</name><parameter_list pos:start="1:21" pos:end="7:60">(<parameter pos:start="1:22" pos:end="1:45"><decl pos:start="1:22" pos:end="1:45"><type pos:start="1:22" pos:end="1:45"><name pos:start="1:22" pos:end="1:41">AVCodecParserContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">s1</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:48"><decl pos:start="3:28" pos:end="3:48"><type pos:start="3:28" pos:end="3:48"><name pos:start="3:28" pos:end="3:41">AVCodecContext</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:48">avctx</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:50"><decl pos:start="5:28" pos:end="5:50"><type pos:start="5:28" pos:end="5:50"><specifier pos:start="5:28" pos:end="5:32">const</specifier> <name pos:start="5:34" pos:end="5:40">uint8_t</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier><modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:50">poutbuf</name></decl></parameter>, <parameter pos:start="5:53" pos:end="5:69"><decl pos:start="5:53" pos:end="5:69"><type pos:start="5:53" pos:end="5:69"><name pos:start="5:53" pos:end="5:55">int</name> <modifier pos:start="5:57" pos:end="5:57">*</modifier></type><name pos:start="5:58" pos:end="5:69">poutbuf_size</name></decl></parameter>,

                           <parameter pos:start="7:28" pos:end="7:45"><decl pos:start="7:28" pos:end="7:45"><type pos:start="7:28" pos:end="7:45"><specifier pos:start="7:28" pos:end="7:32">const</specifier> <name pos:start="7:34" pos:end="7:40">uint8_t</name> <modifier pos:start="7:42" pos:end="7:42">*</modifier></type><name pos:start="7:43" pos:end="7:45">buf</name></decl></parameter>, <parameter pos:start="7:48" pos:end="7:59"><decl pos:start="7:48" pos:end="7:59"><type pos:start="7:48" pos:end="7:59"><name pos:start="7:48" pos:end="7:50">int</name></type> <name pos:start="7:52" pos:end="7:59">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="113:1">{<block_content pos:start="11:5" pos:end="111:16">

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">ADXParseContext</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:22">s</name> <init pos:start="11:24" pos:end="11:38">= <expr pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:27">s1</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">ParseContext</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:20">pc</name> <init pos:start="13:22" pos:end="13:29">= <expr pos:start="13:24" pos:end="13:29"><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:29"><name pos:start="13:25" pos:end="13:25">s</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:29">pc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">next</name> <init pos:start="15:14" pos:end="15:28">= <expr pos:start="15:16" pos:end="15:28"><name pos:start="15:16" pos:end="15:28">END_NOT_FOUND</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="65:5"><if pos:start="19:5" pos:end="65:5">if <condition pos:start="19:8" pos:end="19:31">(<expr pos:start="19:9" pos:end="19:30"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:30"><name pos:start="19:10" pos:end="19:14">avctx</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:30">extradata_size</name></name></expr>)</condition> <block pos:start="19:33" pos:end="65:5">{<block_content pos:start="21:9" pos:end="63:24">

        <decl_stmt pos:start="21:9" pos:end="21:16"><decl pos:start="21:9" pos:end="21:15"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:15">ret</name></decl>;</decl_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:61"><expr pos:start="25:9" pos:end="25:60"><call pos:start="25:9" pos:end="25:60"><name pos:start="25:9" pos:end="25:24">ff_combine_frame</name><argument_list pos:start="25:25" pos:end="25:60">(<argument pos:start="25:26" pos:end="25:27"><expr pos:start="25:26" pos:end="25:27"><name pos:start="25:26" pos:end="25:27">pc</name></expr></argument>, <argument pos:start="25:30" pos:end="25:42"><expr pos:start="25:30" pos:end="25:42"><name pos:start="25:30" pos:end="25:42">END_NOT_FOUND</name></expr></argument>, <argument pos:start="25:45" pos:end="25:48"><expr pos:start="25:45" pos:end="25:48"><operator pos:start="25:45" pos:end="25:45">&amp;</operator><name pos:start="25:46" pos:end="25:48">buf</name></expr></argument>, <argument pos:start="25:51" pos:end="25:59"><expr pos:start="25:51" pos:end="25:59"><operator pos:start="25:51" pos:end="25:51">&amp;</operator><name pos:start="25:52" pos:end="25:59">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="29:9" pos:end="39:9"><if pos:start="29:9" pos:end="39:9">if <condition pos:start="29:12" pos:end="29:60">(<expr pos:start="29:13" pos:end="29:59"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:27"><name pos:start="29:14" pos:end="29:14">s</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:27">header_size</name></name> <operator pos:start="29:29" pos:end="29:30">&amp;&amp;</operator> <name pos:start="29:32" pos:end="29:40"><name pos:start="29:32" pos:end="29:33">pc</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:40">index</name></name> <operator pos:start="29:42" pos:end="29:43">&gt;=</operator> <name pos:start="29:45" pos:end="29:59">MIN_HEADER_SIZE</name></expr>)</condition> <block pos:start="29:62" pos:end="39:9">{<block_content pos:start="31:13" pos:end="37:57">

            <if_stmt pos:start="31:13" pos:end="35:43"><if pos:start="31:13" pos:end="35:43">if <condition pos:start="31:16" pos:end="33:70">(<expr pos:start="31:17" pos:end="33:69"><name pos:start="31:17" pos:end="31:19">ret</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <call pos:start="31:23" pos:end="33:69"><name pos:start="31:23" pos:end="31:46">avpriv_adx_decode_header</name><argument_list pos:start="31:47" pos:end="33:69">(<argument pos:start="31:48" pos:end="31:52"><expr pos:start="31:48" pos:end="31:52"><name pos:start="31:48" pos:end="31:52">avctx</name></expr></argument>, <argument pos:start="31:55" pos:end="31:64"><expr pos:start="31:55" pos:end="31:64"><name pos:start="31:55" pos:end="31:64"><name pos:start="31:55" pos:end="31:56">pc</name><operator pos:start="31:57" pos:end="31:58">-&gt;</operator><name pos:start="31:59" pos:end="31:64">buffer</name></name></expr></argument>, <argument pos:start="31:67" pos:end="31:75"><expr pos:start="31:67" pos:end="31:75"><name pos:start="31:67" pos:end="31:75"><name pos:start="31:67" pos:end="31:68">pc</name><operator pos:start="31:69" pos:end="31:70">-&gt;</operator><name pos:start="31:71" pos:end="31:75">index</name></name></expr></argument>,

                                               <argument pos:start="33:48" pos:end="33:62"><expr pos:start="33:48" pos:end="33:62"><operator pos:start="33:48" pos:end="33:48">&amp;</operator><name pos:start="33:49" pos:end="33:62"><name pos:start="33:49" pos:end="33:49">s</name><operator pos:start="33:50" pos:end="33:51">-&gt;</operator><name pos:start="33:52" pos:end="33:62">header_size</name></name></expr></argument>, <argument pos:start="33:65" pos:end="33:68"><expr pos:start="33:65" pos:end="33:68"><name pos:start="33:65" pos:end="33:68">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:43"><block_content pos:start="35:17" pos:end="35:43">

                <return pos:start="35:17" pos:end="35:43">return <expr pos:start="35:24" pos:end="35:42"><name pos:start="35:24" pos:end="35:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:57"><expr pos:start="37:13" pos:end="37:56"><name pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:25">block_size</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <name pos:start="37:29" pos:end="37:38">BLOCK_SIZE</name> <operator pos:start="37:40" pos:end="37:40">*</operator> <name pos:start="37:42" pos:end="37:56"><name pos:start="37:42" pos:end="37:46">avctx</name><operator pos:start="37:47" pos:end="37:48">-&gt;</operator><name pos:start="37:49" pos:end="37:56">channels</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="57:9"><if pos:start="41:9" pos:end="57:9">if <condition pos:start="41:12" pos:end="41:58">(<expr pos:start="41:13" pos:end="41:57"><name pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:26">header_size</name></name> <operator pos:start="41:28" pos:end="41:29">&amp;&amp;</operator> <name pos:start="41:31" pos:end="41:44"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:44">header_size</name></name> <operator pos:start="41:46" pos:end="41:47">&lt;=</operator> <name pos:start="41:49" pos:end="41:57"><name pos:start="41:49" pos:end="41:50">pc</name><operator pos:start="41:51" pos:end="41:52">-&gt;</operator><name pos:start="41:53" pos:end="41:57">index</name></name></expr>)</condition> <block pos:start="41:60" pos:end="57:9">{<block_content pos:start="43:13" pos:end="55:40">

            <expr_stmt pos:start="43:13" pos:end="43:89"><expr pos:start="43:13" pos:end="43:88"><name pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:17">avctx</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:28">extradata</name></name> <operator pos:start="43:30" pos:end="43:30">=</operator> <call pos:start="43:32" pos:end="43:88"><name pos:start="43:32" pos:end="43:41">av_mallocz</name><argument_list pos:start="43:42" pos:end="43:88">(<argument pos:start="43:43" pos:end="43:87"><expr pos:start="43:43" pos:end="43:87"><name pos:start="43:43" pos:end="43:56"><name pos:start="43:43" pos:end="43:43">s</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:56">header_size</name></name> <operator pos:start="43:58" pos:end="43:58">+</operator> <name pos:start="43:60" pos:end="43:87">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="47:39"><if pos:start="45:13" pos:end="47:39">if <condition pos:start="45:16" pos:end="45:34">(<expr pos:start="45:17" pos:end="45:33"><operator pos:start="45:17" pos:end="45:17">!</operator><name pos:start="45:18" pos:end="45:33"><name pos:start="45:18" pos:end="45:22">avctx</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:33">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:39"><block_content pos:start="47:17" pos:end="47:39">

                <return pos:start="47:17" pos:end="47:39">return <expr pos:start="47:24" pos:end="47:38"><call pos:start="47:24" pos:end="47:38"><name pos:start="47:24" pos:end="47:30">AVERROR</name><argument_list pos:start="47:31" pos:end="47:38">(<argument pos:start="47:32" pos:end="47:37"><expr pos:start="47:32" pos:end="47:37"><name pos:start="47:32" pos:end="47:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:51"><expr pos:start="49:13" pos:end="49:50"><name pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:17">avctx</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:33">extradata_size</name></name> <operator pos:start="49:35" pos:end="49:35">=</operator> <name pos:start="49:37" pos:end="49:50"><name pos:start="49:37" pos:end="49:37">s</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:50">header_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:65"><expr pos:start="51:13" pos:end="51:64"><call pos:start="51:13" pos:end="51:64"><name pos:start="51:13" pos:end="51:18">memcpy</name><argument_list pos:start="51:19" pos:end="51:64">(<argument pos:start="51:20" pos:end="51:35"><expr pos:start="51:20" pos:end="51:35"><name pos:start="51:20" pos:end="51:35"><name pos:start="51:20" pos:end="51:24">avctx</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:35">extradata</name></name></expr></argument>, <argument pos:start="51:38" pos:end="51:47"><expr pos:start="51:38" pos:end="51:47"><name pos:start="51:38" pos:end="51:47"><name pos:start="51:38" pos:end="51:39">pc</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:47">buffer</name></name></expr></argument>, <argument pos:start="51:50" pos:end="51:63"><expr pos:start="51:50" pos:end="51:63"><name pos:start="51:50" pos:end="51:63"><name pos:start="51:50" pos:end="51:50">s</name><operator pos:start="51:51" pos:end="51:52">-&gt;</operator><name pos:start="51:53" pos:end="51:63">header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:77"><expr pos:start="53:13" pos:end="53:76"><call pos:start="53:13" pos:end="53:76"><name pos:start="53:13" pos:end="53:19">memmove</name><argument_list pos:start="53:20" pos:end="53:76">(<argument pos:start="53:21" pos:end="53:30"><expr pos:start="53:21" pos:end="53:30"><name pos:start="53:21" pos:end="53:30"><name pos:start="53:21" pos:end="53:22">pc</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:30">buffer</name></name></expr></argument>, <argument pos:start="53:33" pos:end="53:59"><expr pos:start="53:33" pos:end="53:59"><name pos:start="53:33" pos:end="53:42"><name pos:start="53:33" pos:end="53:34">pc</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:42">buffer</name></name> <operator pos:start="53:44" pos:end="53:44">+</operator> <name pos:start="53:46" pos:end="53:59"><name pos:start="53:46" pos:end="53:46">s</name><operator pos:start="53:47" pos:end="53:48">-&gt;</operator><name pos:start="53:49" pos:end="53:59">header_size</name></name></expr></argument>, <argument pos:start="53:62" pos:end="53:75"><expr pos:start="53:62" pos:end="53:75"><name pos:start="53:62" pos:end="53:75"><name pos:start="53:62" pos:end="53:62">s</name><operator pos:start="53:63" pos:end="53:64">-&gt;</operator><name pos:start="53:65" pos:end="53:75">header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:40"><expr pos:start="55:13" pos:end="55:39"><name pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:14">pc</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:21">index</name></name> <operator pos:start="55:23" pos:end="55:24">-=</operator> <name pos:start="55:26" pos:end="55:39"><name pos:start="55:26" pos:end="55:26">s</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:39">header_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><operator pos:start="59:9" pos:end="59:9">*</operator><name pos:start="59:10" pos:end="59:16">poutbuf</name>      <operator pos:start="59:23" pos:end="59:23">=</operator> <name pos:start="59:25" pos:end="59:28">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:26"><expr pos:start="61:9" pos:end="61:25"><operator pos:start="61:9" pos:end="61:9">*</operator><name pos:start="61:10" pos:end="61:21">poutbuf_size</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="number" pos:start="61:25" pos:end="61:25">0</literal></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:24">return <expr pos:start="63:16" pos:end="63:23"><name pos:start="63:16" pos:end="63:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="79:5"><if pos:start="69:5" pos:end="79:5">if <condition pos:start="69:8" pos:end="69:48">(<expr pos:start="69:9" pos:end="69:47"><name pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:10">pc</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:17">index</name></name> <operator pos:start="69:19" pos:end="69:19">-</operator> <name pos:start="69:21" pos:end="69:30"><name pos:start="69:21" pos:end="69:21">s</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:30">buf_pos</name></name> <operator pos:start="69:32" pos:end="69:33">&gt;=</operator> <name pos:start="69:35" pos:end="69:47"><name pos:start="69:35" pos:end="69:35">s</name><operator pos:start="69:36" pos:end="69:37">-&gt;</operator><name pos:start="69:38" pos:end="69:47">block_size</name></name></expr>)</condition> <block pos:start="69:50" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:17">

        <expr_stmt pos:start="71:9" pos:end="71:48"><expr pos:start="71:9" pos:end="71:47"><operator pos:start="71:9" pos:end="71:9">*</operator><name pos:start="71:10" pos:end="71:16">poutbuf</name>      <operator pos:start="71:23" pos:end="71:23">=</operator> <operator pos:start="71:25" pos:end="71:25">&amp;</operator><name pos:start="71:26" pos:end="71:47"><name pos:start="71:26" pos:end="71:27">pc</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:35">buffer</name><index pos:start="71:36" pos:end="71:47">[<expr pos:start="71:37" pos:end="71:46"><name pos:start="71:37" pos:end="71:46"><name pos:start="71:37" pos:end="71:37">s</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:46">buf_pos</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:38"><expr pos:start="73:9" pos:end="73:37"><operator pos:start="73:9" pos:end="73:9">*</operator><name pos:start="73:10" pos:end="73:21">poutbuf_size</name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:37"><name pos:start="73:25" pos:end="73:25">s</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:37">block_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:38"><expr pos:start="75:9" pos:end="75:37"><name pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:18">buf_pos</name></name>   <operator pos:start="75:22" pos:end="75:23">+=</operator> <name pos:start="75:25" pos:end="75:37"><name pos:start="75:25" pos:end="75:25">s</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:37">block_size</name></name></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:17">return <expr pos:start="77:16" pos:end="77:16"><literal type="number" pos:start="77:16" pos:end="77:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="81:5" pos:end="89:5"><if pos:start="81:5" pos:end="89:5">if <condition pos:start="81:8" pos:end="81:32">(<expr pos:start="81:9" pos:end="81:31"><name pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:10">pc</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:17">index</name></name> <operator pos:start="81:19" pos:end="81:20">&amp;&amp;</operator> <name pos:start="81:22" pos:end="81:31"><name pos:start="81:22" pos:end="81:22">s</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:31">buf_pos</name></name></expr>)</condition> <block pos:start="81:34" pos:end="89:5">{<block_content pos:start="83:9" pos:end="87:23">

        <expr_stmt pos:start="83:9" pos:end="83:77"><expr pos:start="83:9" pos:end="83:76"><call pos:start="83:9" pos:end="83:76"><name pos:start="83:9" pos:end="83:15">memmove</name><argument_list pos:start="83:16" pos:end="83:76">(<argument pos:start="83:17" pos:end="83:26"><expr pos:start="83:17" pos:end="83:26"><name pos:start="83:17" pos:end="83:26"><name pos:start="83:17" pos:end="83:18">pc</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:26">buffer</name></name></expr></argument>, <argument pos:start="83:29" pos:end="83:51"><expr pos:start="83:29" pos:end="83:51"><operator pos:start="83:29" pos:end="83:29">&amp;</operator><name pos:start="83:30" pos:end="83:51"><name pos:start="83:30" pos:end="83:31">pc</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:39">buffer</name><index pos:start="83:40" pos:end="83:51">[<expr pos:start="83:41" pos:end="83:50"><name pos:start="83:41" pos:end="83:50"><name pos:start="83:41" pos:end="83:41">s</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:50">buf_pos</name></name></expr>]</index></name></expr></argument>, <argument pos:start="83:54" pos:end="83:75"><expr pos:start="83:54" pos:end="83:75"><name pos:start="83:54" pos:end="83:62"><name pos:start="83:54" pos:end="83:55">pc</name><operator pos:start="83:56" pos:end="83:57">-&gt;</operator><name pos:start="83:58" pos:end="83:62">index</name></name> <operator pos:start="83:64" pos:end="83:64">-</operator> <name pos:start="83:66" pos:end="83:75"><name pos:start="83:66" pos:end="83:66">s</name><operator pos:start="83:67" pos:end="83:68">-&gt;</operator><name pos:start="83:69" pos:end="83:75">buf_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:32"><expr pos:start="85:9" pos:end="85:31"><name pos:start="85:9" pos:end="85:17"><name pos:start="85:9" pos:end="85:10">pc</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:17">index</name></name> <operator pos:start="85:19" pos:end="85:20">-=</operator> <name pos:start="85:22" pos:end="85:31"><name pos:start="85:22" pos:end="85:22">s</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:31">buf_pos</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:23"><expr pos:start="87:9" pos:end="87:22"><name pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:18">buf_pos</name></name> <operator pos:start="87:20" pos:end="87:20">=</operator> <literal type="number" pos:start="87:22" pos:end="87:22">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="93:41"><if pos:start="91:5" pos:end="93:41">if <condition pos:start="91:8" pos:end="91:46">(<expr pos:start="91:9" pos:end="91:45"><name pos:start="91:9" pos:end="91:16">buf_size</name> <operator pos:start="91:18" pos:end="91:18">+</operator> <name pos:start="91:20" pos:end="91:28"><name pos:start="91:20" pos:end="91:21">pc</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:28">index</name></name> <operator pos:start="91:30" pos:end="91:31">&gt;=</operator> <name pos:start="91:33" pos:end="91:45"><name pos:start="91:33" pos:end="91:33">s</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:45">block_size</name></name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:41"><block_content pos:start="93:9" pos:end="93:41">

        <expr_stmt pos:start="93:9" pos:end="93:41"><expr pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:12">next</name> <operator pos:start="93:14" pos:end="93:14">=</operator> <name pos:start="93:16" pos:end="93:28"><name pos:start="93:16" pos:end="93:16">s</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:28">block_size</name></name> <operator pos:start="93:30" pos:end="93:30">-</operator> <name pos:start="93:32" pos:end="93:40"><name pos:start="93:32" pos:end="93:33">pc</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:40">index</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="105:5"><if pos:start="97:5" pos:end="105:5">if <condition pos:start="97:8" pos:end="97:69">(<expr pos:start="97:9" pos:end="97:68"><call pos:start="97:9" pos:end="97:51"><name pos:start="97:9" pos:end="97:24">ff_combine_frame</name><argument_list pos:start="97:25" pos:end="97:51">(<argument pos:start="97:26" pos:end="97:27"><expr pos:start="97:26" pos:end="97:27"><name pos:start="97:26" pos:end="97:27">pc</name></expr></argument>, <argument pos:start="97:30" pos:end="97:33"><expr pos:start="97:30" pos:end="97:33"><name pos:start="97:30" pos:end="97:33">next</name></expr></argument>, <argument pos:start="97:36" pos:end="97:39"><expr pos:start="97:36" pos:end="97:39"><operator pos:start="97:36" pos:end="97:36">&amp;</operator><name pos:start="97:37" pos:end="97:39">buf</name></expr></argument>, <argument pos:start="97:42" pos:end="97:50"><expr pos:start="97:42" pos:end="97:50"><operator pos:start="97:42" pos:end="97:42">&amp;</operator><name pos:start="97:43" pos:end="97:50">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="97:53" pos:end="97:53">&lt;</operator> <literal type="number" pos:start="97:55" pos:end="97:55">0</literal> <operator pos:start="97:57" pos:end="97:58">||</operator> <operator pos:start="97:60" pos:end="97:60">!</operator><name pos:start="97:61" pos:end="97:68">buf_size</name></expr>)</condition> <block pos:start="97:71" pos:end="105:5">{<block_content pos:start="99:9" pos:end="103:24">

        <expr_stmt pos:start="99:9" pos:end="99:29"><expr pos:start="99:9" pos:end="99:28"><operator pos:start="99:9" pos:end="99:9">*</operator><name pos:start="99:10" pos:end="99:16">poutbuf</name>      <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:28">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:26"><expr pos:start="101:9" pos:end="101:25"><operator pos:start="101:9" pos:end="101:9">*</operator><name pos:start="101:10" pos:end="101:21">poutbuf_size</name> <operator pos:start="101:23" pos:end="101:23">=</operator> <literal type="number" pos:start="101:25" pos:end="101:25">0</literal></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:24">return <expr pos:start="103:16" pos:end="103:23"><name pos:start="103:16" pos:end="103:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:19"><expr pos:start="107:5" pos:end="107:18"><operator pos:start="107:5" pos:end="107:5">*</operator><name pos:start="107:6" pos:end="107:12">poutbuf</name> <operator pos:start="107:14" pos:end="107:14">=</operator> <name pos:start="107:16" pos:end="107:18">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:29"><expr pos:start="109:5" pos:end="109:28"><operator pos:start="109:5" pos:end="109:5">*</operator><name pos:start="109:6" pos:end="109:17">poutbuf_size</name> <operator pos:start="109:19" pos:end="109:19">=</operator> <name pos:start="109:21" pos:end="109:28">buf_size</name></expr>;</expr_stmt>

    <return pos:start="111:5" pos:end="111:16">return <expr pos:start="111:12" pos:end="111:15"><name pos:start="111:12" pos:end="111:15">next</name></expr>;</return>

</block_content>}</block></function>
</unit>
