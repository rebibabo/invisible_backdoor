<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14330.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">gsm_parse</name><parameter_list pos:start="1:21" pos:end="5:54">(<parameter pos:start="1:22" pos:end="1:45"><decl pos:start="1:22" pos:end="1:45"><type pos:start="1:22" pos:end="1:45"><name pos:start="1:22" pos:end="1:41">AVCodecParserContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">s1</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:68"><decl pos:start="1:48" pos:end="1:68"><type pos:start="1:48" pos:end="1:68"><name pos:start="1:48" pos:end="1:61">AVCodecContext</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:68">avctx</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:44"><decl pos:start="3:22" pos:end="3:44"><type pos:start="3:22" pos:end="3:44"><specifier pos:start="3:22" pos:end="3:26">const</specifier> <name pos:start="3:28" pos:end="3:34">uint8_t</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier><modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:44">poutbuf</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:63"><decl pos:start="3:47" pos:end="3:63"><type pos:start="3:47" pos:end="3:63"><name pos:start="3:47" pos:end="3:49">int</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:63">poutbuf_size</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:39"><decl pos:start="5:22" pos:end="5:39"><type pos:start="5:22" pos:end="5:39"><specifier pos:start="5:22" pos:end="5:26">const</specifier> <name pos:start="5:28" pos:end="5:34">uint8_t</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:39">buf</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:53"><decl pos:start="5:42" pos:end="5:53"><type pos:start="5:42" pos:end="5:53"><name pos:start="5:42" pos:end="5:44">int</name></type> <name pos:start="5:46" pos:end="5:53">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="89:1">{<block_content pos:start="9:5" pos:end="87:16">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">GSMParseContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:22">s</name> <init pos:start="9:24" pos:end="9:38">= <expr pos:start="9:26" pos:end="9:38"><name pos:start="9:26" pos:end="9:38"><name pos:start="9:26" pos:end="9:27">s1</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">ParseContext</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:20">pc</name> <init pos:start="11:22" pos:end="11:29">= <expr pos:start="11:24" pos:end="11:29"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:29"><name pos:start="11:25" pos:end="11:25">s</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:29">pc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">next</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="43:5"><if pos:start="17:5" pos:end="43:5">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:22"><name pos:start="17:10" pos:end="17:10">s</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:22">block_size</name></name></expr>)</condition> <block pos:start="17:25" pos:end="43:5">{<block_content pos:start="19:9" pos:end="41:9">

        <switch pos:start="19:9" pos:end="41:9">switch <condition pos:start="19:16" pos:end="19:32">(<expr pos:start="19:17" pos:end="19:31"><name pos:start="19:17" pos:end="19:31"><name pos:start="19:17" pos:end="19:21">avctx</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:31">codec_id</name></name></expr>)</condition> <block pos:start="19:34" pos:end="41:9">{<block_content pos:start="21:9" pos:end="39:35">

        <case pos:start="21:9" pos:end="21:29">case <expr pos:start="21:14" pos:end="21:28"><name pos:start="21:14" pos:end="21:28">AV_CODEC_ID_GSM</name></expr>:</case>

            <expr_stmt pos:start="23:13" pos:end="23:43"><expr pos:start="23:13" pos:end="23:42"><name pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:25">block_size</name></name> <operator pos:start="23:27" pos:end="23:27">=</operator> <name pos:start="23:29" pos:end="23:42">GSM_BLOCK_SIZE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:43"><expr pos:start="25:13" pos:end="25:42"><name pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:23">duration</name></name>   <operator pos:start="25:27" pos:end="25:27">=</operator> <name pos:start="25:29" pos:end="25:42">GSM_FRAME_SIZE</name></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        <case pos:start="29:9" pos:end="29:32">case <expr pos:start="29:14" pos:end="29:31"><name pos:start="29:14" pos:end="29:31">AV_CODEC_ID_GSM_MS</name></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:46"><expr pos:start="31:13" pos:end="31:45"><name pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:25">block_size</name></name> <operator pos:start="31:27" pos:end="31:27">=</operator> <name pos:start="31:29" pos:end="31:45">GSM_MS_BLOCK_SIZE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:47"><expr pos:start="33:13" pos:end="33:46"><name pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:23">duration</name></name>   <operator pos:start="33:27" pos:end="33:27">=</operator> <name pos:start="33:29" pos:end="33:42">GSM_FRAME_SIZE</name> <operator pos:start="33:44" pos:end="33:44">*</operator> <literal type="number" pos:start="33:46" pos:end="33:46">2</literal></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <default pos:start="37:9" pos:end="37:16">default:</default>

            <return pos:start="39:13" pos:end="39:35">return <expr pos:start="39:20" pos:end="39:34"><call pos:start="39:20" pos:end="39:34"><name pos:start="39:20" pos:end="39:26">AVERROR</name><argument_list pos:start="39:27" pos:end="39:34">(<argument pos:start="39:28" pos:end="39:33"><expr pos:start="39:28" pos:end="39:33"><name pos:start="39:28" pos:end="39:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="49:37"><if pos:start="47:5" pos:end="49:37">if <condition pos:start="47:8" pos:end="47:22">(<expr pos:start="47:9" pos:end="47:21"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:21"><name pos:start="47:10" pos:end="47:10">s</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:21">remaining</name></name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:37"><block_content pos:start="49:9" pos:end="49:37">

        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:20">remaining</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <name pos:start="49:24" pos:end="49:36"><name pos:start="49:24" pos:end="49:24">s</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:36">block_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="63:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:33">(<expr pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:20">remaining</name></name> <operator pos:start="51:22" pos:end="51:23">&lt;=</operator> <name pos:start="51:25" pos:end="51:32">buf_size</name></expr>)</condition> <block pos:start="51:35" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:25">

        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:12">next</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <name pos:start="53:16" pos:end="53:27"><name pos:start="53:16" pos:end="53:16">s</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:27">remaining</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:25"><expr pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:20">remaining</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <literal type="number" pos:start="55:24" pos:end="55:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="63:5">else <block pos:start="57:12" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:33">

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:12">next</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:28">END_NOT_FOUND</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:33"><expr pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:20">remaining</name></name> <operator pos:start="61:22" pos:end="61:23">-=</operator> <name pos:start="61:25" pos:end="61:32">buf_size</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="67:5" pos:end="75:5"><if pos:start="67:5" pos:end="75:5">if <condition pos:start="67:8" pos:end="67:69">(<expr pos:start="67:9" pos:end="67:68"><call pos:start="67:9" pos:end="67:51"><name pos:start="67:9" pos:end="67:24">ff_combine_frame</name><argument_list pos:start="67:25" pos:end="67:51">(<argument pos:start="67:26" pos:end="67:27"><expr pos:start="67:26" pos:end="67:27"><name pos:start="67:26" pos:end="67:27">pc</name></expr></argument>, <argument pos:start="67:30" pos:end="67:33"><expr pos:start="67:30" pos:end="67:33"><name pos:start="67:30" pos:end="67:33">next</name></expr></argument>, <argument pos:start="67:36" pos:end="67:39"><expr pos:start="67:36" pos:end="67:39"><operator pos:start="67:36" pos:end="67:36">&amp;</operator><name pos:start="67:37" pos:end="67:39">buf</name></expr></argument>, <argument pos:start="67:42" pos:end="67:50"><expr pos:start="67:42" pos:end="67:50"><operator pos:start="67:42" pos:end="67:42">&amp;</operator><name pos:start="67:43" pos:end="67:50">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="67:53" pos:end="67:53">&lt;</operator> <literal type="number" pos:start="67:55" pos:end="67:55">0</literal> <operator pos:start="67:57" pos:end="67:58">||</operator> <operator pos:start="67:60" pos:end="67:60">!</operator><name pos:start="67:61" pos:end="67:68">buf_size</name></expr>)</condition> <block pos:start="67:71" pos:end="75:5">{<block_content pos:start="69:9" pos:end="73:24">

        <expr_stmt pos:start="69:9" pos:end="69:29"><expr pos:start="69:9" pos:end="69:28"><operator pos:start="69:9" pos:end="69:9">*</operator><name pos:start="69:10" pos:end="69:16">poutbuf</name>      <operator pos:start="69:23" pos:end="69:23">=</operator> <name pos:start="69:25" pos:end="69:28">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:26"><expr pos:start="71:9" pos:end="71:25"><operator pos:start="71:9" pos:end="71:9">*</operator><name pos:start="71:10" pos:end="71:21">poutbuf_size</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <literal type="number" pos:start="71:25" pos:end="71:25">0</literal></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:24">return <expr pos:start="73:16" pos:end="73:23"><name pos:start="73:16" pos:end="73:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:31"><expr pos:start="79:5" pos:end="79:30"><name pos:start="79:5" pos:end="79:16"><name pos:start="79:5" pos:end="79:6">s1</name><operator pos:start="79:7" pos:end="79:8">-&gt;</operator><name pos:start="79:9" pos:end="79:16">duration</name></name> <operator pos:start="79:18" pos:end="79:18">=</operator> <name pos:start="79:20" pos:end="79:30"><name pos:start="79:20" pos:end="79:20">s</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:30">duration</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:24"><expr pos:start="83:5" pos:end="83:23"><operator pos:start="83:5" pos:end="83:5">*</operator><name pos:start="83:6" pos:end="83:12">poutbuf</name>      <operator pos:start="83:19" pos:end="83:19">=</operator> <name pos:start="83:21" pos:end="83:23">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:29"><expr pos:start="85:5" pos:end="85:28"><operator pos:start="85:5" pos:end="85:5">*</operator><name pos:start="85:6" pos:end="85:17">poutbuf_size</name> <operator pos:start="85:19" pos:end="85:19">=</operator> <name pos:start="85:21" pos:end="85:28">buf_size</name></expr>;</expr_stmt>

    <return pos:start="87:5" pos:end="87:16">return <expr pos:start="87:12" pos:end="87:15"><name pos:start="87:12" pos:end="87:15">next</name></expr>;</return>

</block_content>}</block></function>
</unit>
