<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24452.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">tcg_out_qemu_st_slow_path</name> <parameter_list pos:start="1:39" pos:end="1:78">(<parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:49">TCGContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:77"><decl pos:start="1:55" pos:end="1:77"><type pos:start="1:55" pos:end="1:77"><name pos:start="1:55" pos:end="1:70">TCGLabelQemuLdst</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:77">label</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:46">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">s_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">ir</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">opc</name> <init pos:start="9:13" pos:end="9:24">= <expr pos:start="9:15" pos:end="9:24"><name pos:start="9:15" pos:end="9:24"><name pos:start="9:15" pos:end="9:19">label</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:24">opc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">mem_index</name> <init pos:start="11:19" pos:end="11:36">= <expr pos:start="11:21" pos:end="11:36"><name pos:start="11:21" pos:end="11:36"><name pos:start="11:21" pos:end="11:25">label</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:36">mem_index</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">data_reg</name> <init pos:start="13:18" pos:end="13:36">= <expr pos:start="13:20" pos:end="13:36"><name pos:start="13:20" pos:end="13:36"><name pos:start="13:20" pos:end="13:24">label</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:36">datalo_reg</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:37"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">data_reg2</name> <init pos:start="15:19" pos:end="15:37">= <expr pos:start="15:21" pos:end="15:37"><name pos:start="15:21" pos:end="15:37"><name pos:start="15:21" pos:end="15:25">label</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:37">datahi_reg</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:36"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">addr_reg</name> <init pos:start="17:18" pos:end="17:36">= <expr pos:start="17:20" pos:end="17:36"><name pos:start="17:20" pos:end="17:36"><name pos:start="17:20" pos:end="17:24">label</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:36">addrlo_reg</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:34"><decl pos:start="19:5" pos:end="19:33"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:18">raddr</name> <init pos:start="19:20" pos:end="19:33">= <expr pos:start="19:22" pos:end="19:33"><name pos:start="19:22" pos:end="19:33"><name pos:start="19:22" pos:end="19:26">label</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:33">raddr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:47"><decl pos:start="21:5" pos:end="21:46"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier><modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:23">label_ptr</name> <init pos:start="21:25" pos:end="21:46">= <expr pos:start="21:27" pos:end="21:46"><operator pos:start="21:27" pos:end="21:27">&amp;</operator><name pos:start="21:28" pos:end="21:46"><name pos:start="21:28" pos:end="21:32">label</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:43">label_ptr</name><index pos:start="21:44" pos:end="21:46">[<expr pos:start="21:45" pos:end="21:45"><literal type="number" pos:start="21:45" pos:end="21:45">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:10">s_bits</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <name pos:start="25:14" pos:end="25:16">opc</name> <operator pos:start="25:18" pos:end="25:18">&amp;</operator> <literal type="number" pos:start="25:20" pos:end="25:20">3</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:31">/* resolve label address */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:61"><expr pos:start="31:5" pos:end="31:60"><call pos:start="31:5" pos:end="31:60"><name pos:start="31:5" pos:end="31:14">reloc_pc14</name> <argument_list pos:start="31:16" pos:end="31:60">(<argument pos:start="31:17" pos:end="31:28"><expr pos:start="31:17" pos:end="31:28"><name pos:start="31:17" pos:end="31:28"><name pos:start="31:17" pos:end="31:25">label_ptr</name><index pos:start="31:26" pos:end="31:28">[<expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:31" pos:end="31:59"><expr pos:start="31:31" pos:end="31:59"><operator pos:start="31:31" pos:end="31:31">(</operator><name pos:start="31:32" pos:end="31:46">tcg_target_long</name><operator pos:start="31:47" pos:end="31:47">)</operator> <name pos:start="31:49" pos:end="31:59"><name pos:start="31:49" pos:end="31:49">s</name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:59">code_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:19">/* slow path */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:11"><expr pos:start="37:5" pos:end="37:10"><name pos:start="37:5" pos:end="37:6">ir</name> <operator pos:start="37:8" pos:end="37:8">=</operator> <literal type="number" pos:start="37:10" pos:end="37:10">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="42:0"><expr pos:start="39:5" pos:end="39:50"><call pos:start="39:5" pos:end="39:50"><name pos:start="39:5" pos:end="39:15">tcg_out_mov</name> <argument_list pos:start="39:17" pos:end="39:50">(<argument pos:start="39:18" pos:end="39:18"><expr pos:start="39:18" pos:end="39:18"><name pos:start="39:18" pos:end="39:18">s</name></expr></argument>, <argument pos:start="39:21" pos:end="39:32"><expr pos:start="39:21" pos:end="39:32"><name pos:start="39:21" pos:end="39:32">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="39:35" pos:end="39:38"><expr pos:start="39:35" pos:end="39:38"><name pos:start="39:35" pos:end="39:36">ir</name><operator pos:start="39:37" pos:end="39:38">++</operator></expr></argument>, <argument pos:start="39:41" pos:end="39:49"><expr pos:start="39:41" pos:end="39:49"><name pos:start="39:41" pos:end="39:49">TCG_AREG0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="41:1" pos:end="41:26">#<cpp:directive pos:start="41:2" pos:end="41:3">if</cpp:directive> <expr pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:20">TARGET_LONG_BITS</name> <operator pos:start="41:22" pos:end="41:23">==</operator> <literal type="number" pos:start="41:25" pos:end="41:26">32</literal></expr></cpp:if>

    <expr_stmt pos:start="43:5" pos:end="48:0"><expr pos:start="43:5" pos:end="43:49"><call pos:start="43:5" pos:end="43:49"><name pos:start="43:5" pos:end="43:15">tcg_out_mov</name> <argument_list pos:start="43:17" pos:end="43:49">(<argument pos:start="43:18" pos:end="43:18"><expr pos:start="43:18" pos:end="43:18"><name pos:start="43:18" pos:end="43:18">s</name></expr></argument>, <argument pos:start="43:21" pos:end="43:32"><expr pos:start="43:21" pos:end="43:32"><name pos:start="43:21" pos:end="43:32">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="43:35" pos:end="43:38"><expr pos:start="43:35" pos:end="43:38"><name pos:start="43:35" pos:end="43:36">ir</name><operator pos:start="43:37" pos:end="43:38">++</operator></expr></argument>, <argument pos:start="43:41" pos:end="43:48"><expr pos:start="43:41" pos:end="43:48"><name pos:start="43:41" pos:end="43:48">addr_reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="45:1" pos:end="45:5">#<cpp:directive pos:start="45:2" pos:end="45:5">else</cpp:directive></cpp:else>

<cpp:ifdef pos:start="47:1" pos:end="47:33">#<cpp:directive pos:start="47:2" pos:end="47:6">ifdef</cpp:directive> <name pos:start="47:8" pos:end="47:33">TCG_TARGET_CALL_ALIGN_ARGS</name></cpp:ifdef>

    <expr_stmt pos:start="49:5" pos:end="52:0"><expr pos:start="49:5" pos:end="49:11"><name pos:start="49:5" pos:end="49:6">ir</name> <operator pos:start="49:8" pos:end="49:9">|=</operator> <literal type="number" pos:start="49:11" pos:end="49:11">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="53:5" pos:end="53:59"><expr pos:start="53:5" pos:end="53:58"><call pos:start="53:5" pos:end="53:58"><name pos:start="53:5" pos:end="53:15">tcg_out_mov</name> <argument_list pos:start="53:17" pos:end="53:58">(<argument pos:start="53:18" pos:end="53:18"><expr pos:start="53:18" pos:end="53:18"><name pos:start="53:18" pos:end="53:18">s</name></expr></argument>, <argument pos:start="53:21" pos:end="53:32"><expr pos:start="53:21" pos:end="53:32"><name pos:start="53:21" pos:end="53:32">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="53:35" pos:end="53:38"><expr pos:start="53:35" pos:end="53:38"><name pos:start="53:35" pos:end="53:36">ir</name><operator pos:start="53:37" pos:end="53:38">++</operator></expr></argument>, <argument pos:start="53:41" pos:end="53:57"><expr pos:start="53:41" pos:end="53:57"><name pos:start="53:41" pos:end="53:57"><name pos:start="53:41" pos:end="53:45">label</name><operator pos:start="53:46" pos:end="53:47">-&gt;</operator><name pos:start="53:48" pos:end="53:57">addrhi_reg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="58:0"><expr pos:start="55:5" pos:end="55:49"><call pos:start="55:5" pos:end="55:49"><name pos:start="55:5" pos:end="55:15">tcg_out_mov</name> <argument_list pos:start="55:17" pos:end="55:49">(<argument pos:start="55:18" pos:end="55:18"><expr pos:start="55:18" pos:end="55:18"><name pos:start="55:18" pos:end="55:18">s</name></expr></argument>, <argument pos:start="55:21" pos:end="55:32"><expr pos:start="55:21" pos:end="55:32"><name pos:start="55:21" pos:end="55:32">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="55:35" pos:end="55:38"><expr pos:start="55:35" pos:end="55:38"><name pos:start="55:35" pos:end="55:36">ir</name><operator pos:start="55:37" pos:end="55:38">++</operator></expr></argument>, <argument pos:start="55:41" pos:end="55:48"><expr pos:start="55:41" pos:end="55:48"><name pos:start="55:41" pos:end="55:48">addr_reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>



    <switch pos:start="61:5" pos:end="115:5">switch <condition pos:start="61:12" pos:end="61:16">(<expr pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">opc</name></expr>)</condition> <block pos:start="61:18" pos:end="115:5">{<block_content pos:start="63:5" pos:end="113:14">

    <case pos:start="63:5" pos:end="63:11">case <expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">0</literal></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="75:35"><expr pos:start="65:9" pos:end="75:34"><call pos:start="65:9" pos:end="75:34"><name pos:start="65:9" pos:end="65:17">tcg_out32</name> <argument_list pos:start="65:19" pos:end="75:34">(<argument pos:start="65:20" pos:end="65:20"><expr pos:start="65:20" pos:end="65:20"><name pos:start="65:20" pos:end="65:20">s</name></expr></argument>, <argument pos:start="65:23" pos:end="75:33"><expr pos:start="65:23" pos:end="75:33"><operator pos:start="65:23" pos:end="65:23">(</operator><name pos:start="65:24" pos:end="65:29">RLWINM</name>

                       <operator pos:start="67:24" pos:end="67:24">|</operator> <call pos:start="67:26" pos:end="67:32"><name pos:start="67:26" pos:end="67:27">RA</name> <argument_list pos:start="67:29" pos:end="67:32">(<argument pos:start="67:30" pos:end="67:31"><expr pos:start="67:30" pos:end="67:31"><name pos:start="67:30" pos:end="67:31">ir</name></expr></argument>)</argument_list></call>

                       <operator pos:start="69:24" pos:end="69:24">|</operator> <call pos:start="69:26" pos:end="69:38"><name pos:start="69:26" pos:end="69:27">RS</name> <argument_list pos:start="69:29" pos:end="69:38">(<argument pos:start="69:30" pos:end="69:37"><expr pos:start="69:30" pos:end="69:37"><name pos:start="69:30" pos:end="69:37">data_reg</name></expr></argument>)</argument_list></call>

                       <operator pos:start="71:24" pos:end="71:24">|</operator> <call pos:start="71:26" pos:end="71:31"><name pos:start="71:26" pos:end="71:27">SH</name> <argument_list pos:start="71:29" pos:end="71:31">(<argument pos:start="71:30" pos:end="71:30"><expr pos:start="71:30" pos:end="71:30"><literal type="number" pos:start="71:30" pos:end="71:30">0</literal></expr></argument>)</argument_list></call>

                       <operator pos:start="73:24" pos:end="73:24">|</operator> <call pos:start="73:26" pos:end="73:32"><name pos:start="73:26" pos:end="73:27">MB</name> <argument_list pos:start="73:29" pos:end="73:32">(<argument pos:start="73:30" pos:end="73:31"><expr pos:start="73:30" pos:end="73:31"><literal type="number" pos:start="73:30" pos:end="73:31">24</literal></expr></argument>)</argument_list></call>

                       <operator pos:start="75:24" pos:end="75:24">|</operator> <call pos:start="75:26" pos:end="75:32"><name pos:start="75:26" pos:end="75:27">ME</name> <argument_list pos:start="75:29" pos:end="75:32">(<argument pos:start="75:30" pos:end="75:31"><expr pos:start="75:30" pos:end="75:31"><literal type="number" pos:start="75:30" pos:end="75:31">31</literal></expr></argument>)</argument_list></call><operator pos:start="75:33" pos:end="75:33">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:11">case <expr pos:start="79:10" pos:end="79:10"><literal type="number" pos:start="79:10" pos:end="79:10">1</literal></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="91:35"><expr pos:start="81:9" pos:end="91:34"><call pos:start="81:9" pos:end="91:34"><name pos:start="81:9" pos:end="81:17">tcg_out32</name> <argument_list pos:start="81:19" pos:end="91:34">(<argument pos:start="81:20" pos:end="81:20"><expr pos:start="81:20" pos:end="81:20"><name pos:start="81:20" pos:end="81:20">s</name></expr></argument>, <argument pos:start="81:23" pos:end="91:33"><expr pos:start="81:23" pos:end="91:33"><operator pos:start="81:23" pos:end="81:23">(</operator><name pos:start="81:24" pos:end="81:29">RLWINM</name>

                       <operator pos:start="83:24" pos:end="83:24">|</operator> <call pos:start="83:26" pos:end="83:32"><name pos:start="83:26" pos:end="83:27">RA</name> <argument_list pos:start="83:29" pos:end="83:32">(<argument pos:start="83:30" pos:end="83:31"><expr pos:start="83:30" pos:end="83:31"><name pos:start="83:30" pos:end="83:31">ir</name></expr></argument>)</argument_list></call>

                       <operator pos:start="85:24" pos:end="85:24">|</operator> <call pos:start="85:26" pos:end="85:38"><name pos:start="85:26" pos:end="85:27">RS</name> <argument_list pos:start="85:29" pos:end="85:38">(<argument pos:start="85:30" pos:end="85:37"><expr pos:start="85:30" pos:end="85:37"><name pos:start="85:30" pos:end="85:37">data_reg</name></expr></argument>)</argument_list></call>

                       <operator pos:start="87:24" pos:end="87:24">|</operator> <call pos:start="87:26" pos:end="87:31"><name pos:start="87:26" pos:end="87:27">SH</name> <argument_list pos:start="87:29" pos:end="87:31">(<argument pos:start="87:30" pos:end="87:30"><expr pos:start="87:30" pos:end="87:30"><literal type="number" pos:start="87:30" pos:end="87:30">0</literal></expr></argument>)</argument_list></call>

                       <operator pos:start="89:24" pos:end="89:24">|</operator> <call pos:start="89:26" pos:end="89:32"><name pos:start="89:26" pos:end="89:27">MB</name> <argument_list pos:start="89:29" pos:end="89:32">(<argument pos:start="89:30" pos:end="89:31"><expr pos:start="89:30" pos:end="89:31"><literal type="number" pos:start="89:30" pos:end="89:31">16</literal></expr></argument>)</argument_list></call>

                       <operator pos:start="91:24" pos:end="91:24">|</operator> <call pos:start="91:26" pos:end="91:32"><name pos:start="91:26" pos:end="91:27">ME</name> <argument_list pos:start="91:29" pos:end="91:32">(<argument pos:start="91:30" pos:end="91:31"><expr pos:start="91:30" pos:end="91:31"><literal type="number" pos:start="91:30" pos:end="91:31">31</literal></expr></argument>)</argument_list></call><operator pos:start="91:33" pos:end="91:33">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:11">case <expr pos:start="95:10" pos:end="95:10"><literal type="number" pos:start="95:10" pos:end="95:10">2</literal></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:52"><expr pos:start="97:9" pos:end="97:51"><call pos:start="97:9" pos:end="97:51"><name pos:start="97:9" pos:end="97:19">tcg_out_mov</name> <argument_list pos:start="97:21" pos:end="97:51">(<argument pos:start="97:22" pos:end="97:22"><expr pos:start="97:22" pos:end="97:22"><name pos:start="97:22" pos:end="97:22">s</name></expr></argument>, <argument pos:start="97:25" pos:end="97:36"><expr pos:start="97:25" pos:end="97:36"><name pos:start="97:25" pos:end="97:36">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="97:39" pos:end="97:40"><expr pos:start="97:39" pos:end="97:40"><name pos:start="97:39" pos:end="97:40">ir</name></expr></argument>, <argument pos:start="97:43" pos:end="97:50"><expr pos:start="97:43" pos:end="97:50"><name pos:start="97:43" pos:end="97:50">data_reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="104:0">case <expr pos:start="101:10" pos:end="101:10"><literal type="number" pos:start="101:10" pos:end="101:10">3</literal></expr>:</case>

<cpp:ifdef pos:start="103:1" pos:end="103:33">#<cpp:directive pos:start="103:2" pos:end="103:6">ifdef</cpp:directive> <name pos:start="103:8" pos:end="103:33">TCG_TARGET_CALL_ALIGN_ARGS</name></cpp:ifdef>

        <expr_stmt pos:start="105:9" pos:end="108:0"><expr pos:start="105:9" pos:end="105:15"><name pos:start="105:9" pos:end="105:10">ir</name> <operator pos:start="105:12" pos:end="105:13">|=</operator> <literal type="number" pos:start="105:15" pos:end="105:15">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="107:1" pos:end="107:6">#<cpp:directive pos:start="107:2" pos:end="107:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="109:9" pos:end="109:55"><expr pos:start="109:9" pos:end="109:54"><call pos:start="109:9" pos:end="109:54"><name pos:start="109:9" pos:end="109:19">tcg_out_mov</name> <argument_list pos:start="109:21" pos:end="109:54">(<argument pos:start="109:22" pos:end="109:22"><expr pos:start="109:22" pos:end="109:22"><name pos:start="109:22" pos:end="109:22">s</name></expr></argument>, <argument pos:start="109:25" pos:end="109:36"><expr pos:start="109:25" pos:end="109:36"><name pos:start="109:25" pos:end="109:36">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="109:39" pos:end="109:42"><expr pos:start="109:39" pos:end="109:42"><name pos:start="109:39" pos:end="109:40">ir</name><operator pos:start="109:41" pos:end="109:42">++</operator></expr></argument>, <argument pos:start="109:45" pos:end="109:53"><expr pos:start="109:45" pos:end="109:53"><name pos:start="109:45" pos:end="109:53">data_reg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:52"><expr pos:start="111:9" pos:end="111:51"><call pos:start="111:9" pos:end="111:51"><name pos:start="111:9" pos:end="111:19">tcg_out_mov</name> <argument_list pos:start="111:21" pos:end="111:51">(<argument pos:start="111:22" pos:end="111:22"><expr pos:start="111:22" pos:end="111:22"><name pos:start="111:22" pos:end="111:22">s</name></expr></argument>, <argument pos:start="111:25" pos:end="111:36"><expr pos:start="111:25" pos:end="111:36"><name pos:start="111:25" pos:end="111:36">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="111:39" pos:end="111:40"><expr pos:start="111:39" pos:end="111:40"><name pos:start="111:39" pos:end="111:40">ir</name></expr></argument>, <argument pos:start="111:43" pos:end="111:50"><expr pos:start="111:43" pos:end="111:50"><name pos:start="111:43" pos:end="111:50">data_reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="117:5" pos:end="117:9"><expr pos:start="117:5" pos:end="117:8"><name pos:start="117:5" pos:end="117:6">ir</name><operator pos:start="117:7" pos:end="117:8">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:50"><expr pos:start="121:5" pos:end="121:49"><call pos:start="121:5" pos:end="121:49"><name pos:start="121:5" pos:end="121:16">tcg_out_movi</name> <argument_list pos:start="121:18" pos:end="121:49">(<argument pos:start="121:19" pos:end="121:19"><expr pos:start="121:19" pos:end="121:19"><name pos:start="121:19" pos:end="121:19">s</name></expr></argument>, <argument pos:start="121:22" pos:end="121:33"><expr pos:start="121:22" pos:end="121:33"><name pos:start="121:22" pos:end="121:33">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="121:36" pos:end="121:37"><expr pos:start="121:36" pos:end="121:37"><name pos:start="121:36" pos:end="121:37">ir</name></expr></argument>, <argument pos:start="121:40" pos:end="121:48"><expr pos:start="121:40" pos:end="121:48"><name pos:start="121:40" pos:end="121:48">mem_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:64"><expr pos:start="123:5" pos:end="123:63"><call pos:start="123:5" pos:end="123:63"><name pos:start="123:5" pos:end="123:16">tcg_out_call</name> <argument_list pos:start="123:18" pos:end="123:63">(<argument pos:start="123:19" pos:end="123:19"><expr pos:start="123:19" pos:end="123:19"><name pos:start="123:19" pos:end="123:19">s</name></expr></argument>, <argument pos:start="123:22" pos:end="123:59"><expr pos:start="123:22" pos:end="123:59"><operator pos:start="123:22" pos:end="123:22">(</operator><name pos:start="123:23" pos:end="123:37">tcg_target_long</name><operator pos:start="123:38" pos:end="123:38">)</operator> <name pos:start="123:40" pos:end="123:59"><name pos:start="123:40" pos:end="123:54">qemu_st_helpers</name><index pos:start="123:55" pos:end="123:59">[<expr pos:start="123:56" pos:end="123:58"><name pos:start="123:56" pos:end="123:58">opc</name></expr>]</index></name></expr></argument>, <argument pos:start="123:62" pos:end="123:62"><expr pos:start="123:62" pos:end="123:62"><literal type="number" pos:start="123:62" pos:end="123:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:25"><expr pos:start="125:5" pos:end="125:24"><call pos:start="125:5" pos:end="125:24"><name pos:start="125:5" pos:end="125:13">tcg_out32</name> <argument_list pos:start="125:15" pos:end="125:24">(<argument pos:start="125:16" pos:end="125:16"><expr pos:start="125:16" pos:end="125:16"><name pos:start="125:16" pos:end="125:16">s</name></expr></argument>, <argument pos:start="125:19" pos:end="125:23"><expr pos:start="125:19" pos:end="125:23"><name pos:start="125:19" pos:end="125:19">B</name> <operator pos:start="125:21" pos:end="125:21">|</operator> <literal type="number" pos:start="125:23" pos:end="125:23">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:43"><expr pos:start="127:5" pos:end="127:42"><call pos:start="127:5" pos:end="127:42"><name pos:start="127:5" pos:end="127:13">tcg_out32</name> <argument_list pos:start="127:15" pos:end="127:42">(<argument pos:start="127:16" pos:end="127:16"><expr pos:start="127:16" pos:end="127:16"><name pos:start="127:16" pos:end="127:16">s</name></expr></argument>, <argument pos:start="127:19" pos:end="127:41"><expr pos:start="127:19" pos:end="127:41"><operator pos:start="127:19" pos:end="127:19">(</operator><name pos:start="127:20" pos:end="127:34">tcg_target_long</name><operator pos:start="127:35" pos:end="127:35">)</operator> <name pos:start="127:37" pos:end="127:41">raddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:46"><expr pos:start="129:5" pos:end="129:45"><call pos:start="129:5" pos:end="129:45"><name pos:start="129:5" pos:end="129:13">tcg_out_b</name> <argument_list pos:start="129:15" pos:end="129:45">(<argument pos:start="129:16" pos:end="129:16"><expr pos:start="129:16" pos:end="129:16"><name pos:start="129:16" pos:end="129:16">s</name></expr></argument>, <argument pos:start="129:19" pos:end="129:19"><expr pos:start="129:19" pos:end="129:19"><literal type="number" pos:start="129:19" pos:end="129:19">0</literal></expr></argument>, <argument pos:start="129:22" pos:end="129:44"><expr pos:start="129:22" pos:end="129:44"><operator pos:start="129:22" pos:end="129:22">(</operator><name pos:start="129:23" pos:end="129:37">tcg_target_long</name><operator pos:start="129:38" pos:end="129:38">)</operator> <name pos:start="129:40" pos:end="129:44">raddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
