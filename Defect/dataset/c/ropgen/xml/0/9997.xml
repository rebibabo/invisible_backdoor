<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9997.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">bdrv_set_key</name><parameter_list pos:start="1:17" pos:end="1:55">(<parameter pos:start="1:18" pos:end="1:37"><decl pos:start="1:18" pos:end="1:37"><type pos:start="1:18" pos:end="1:37"><name pos:start="1:18" pos:end="1:33">BlockDriverState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">bs</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:54"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">key</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="19:5"><if pos:start="7:5" pos:end="19:5">if <condition pos:start="7:8" pos:end="7:52">(<expr pos:start="7:9" pos:end="7:51"><name pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:10">bs</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:22">backing_hd</name></name> <operator pos:start="7:24" pos:end="7:25">&amp;&amp;</operator> <name pos:start="7:27" pos:end="7:51"><name pos:start="7:27" pos:end="7:28">bs</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:40">backing_hd</name><operator pos:start="7:41" pos:end="7:42">-&gt;</operator><name pos:start="7:43" pos:end="7:51">encrypted</name></name></expr>)</condition> <block pos:start="7:54" pos:end="19:5">{<block_content pos:start="9:9" pos:end="17:21">

        <expr_stmt pos:start="9:9" pos:end="9:48"><expr pos:start="9:9" pos:end="9:47"><name pos:start="9:9" pos:end="9:11">ret</name> <operator pos:start="9:13" pos:end="9:13">=</operator> <call pos:start="9:15" pos:end="9:47"><name pos:start="9:15" pos:end="9:26">bdrv_set_key</name><argument_list pos:start="9:27" pos:end="9:47">(<argument pos:start="9:28" pos:end="9:41"><expr pos:start="9:28" pos:end="9:41"><name pos:start="9:28" pos:end="9:41"><name pos:start="9:28" pos:end="9:29">bs</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:41">backing_hd</name></name></expr></argument>, <argument pos:start="9:44" pos:end="9:46"><expr pos:start="9:44" pos:end="9:46"><name pos:start="9:44" pos:end="9:46">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="11:9" pos:end="13:23"><if pos:start="11:9" pos:end="13:23">if <condition pos:start="11:12" pos:end="11:20">(<expr pos:start="11:13" pos:end="11:19"><name pos:start="11:13" pos:end="11:15">ret</name> <operator pos:start="11:17" pos:end="11:17">&lt;</operator> <literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr>)</condition><block type="pseudo" pos:start="13:13" pos:end="13:23"><block_content pos:start="13:13" pos:end="13:23">

            <return pos:start="13:13" pos:end="13:23">return <expr pos:start="13:20" pos:end="13:22"><name pos:start="13:20" pos:end="13:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="15:9" pos:end="17:21"><if pos:start="15:9" pos:end="17:21">if <condition pos:start="15:12" pos:end="15:27">(<expr pos:start="15:13" pos:end="15:26"><operator pos:start="15:13" pos:end="15:13">!</operator><name pos:start="15:14" pos:end="15:26"><name pos:start="15:14" pos:end="15:15">bs</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:26">encrypted</name></name></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:21"><block_content pos:start="17:13" pos:end="17:21">

            <return pos:start="17:13" pos:end="17:21">return <expr pos:start="17:20" pos:end="17:20"><literal type="number" pos:start="17:20" pos:end="17:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:22"><name pos:start="21:10" pos:end="21:11">bs</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:22">encrypted</name></name></expr>)</condition> <block pos:start="21:25" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:23">

        <return pos:start="23:9" pos:end="23:23">return <expr pos:start="23:16" pos:end="23:22"><operator pos:start="23:16" pos:end="23:16">-</operator><name pos:start="23:17" pos:end="23:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="29:5">else if <condition pos:start="25:15" pos:end="25:50">(<expr pos:start="25:16" pos:end="25:49"><operator pos:start="25:16" pos:end="25:16">!</operator><name pos:start="25:17" pos:end="25:23"><name pos:start="25:17" pos:end="25:18">bs</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:23">drv</name></name> <operator pos:start="25:25" pos:end="25:26">||</operator> <operator pos:start="25:28" pos:end="25:28">!</operator><name pos:start="25:29" pos:end="25:49"><name pos:start="25:29" pos:end="25:30">bs</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:35">drv</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:49">bdrv_set_key</name></name></expr>)</condition> <block pos:start="25:52" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:26">

        <return pos:start="27:9" pos:end="27:26">return <expr pos:start="27:16" pos:end="27:25"><operator pos:start="27:16" pos:end="27:16">-</operator><name pos:start="27:17" pos:end="27:25">ENOMEDIUM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:40"><name pos:start="31:11" pos:end="31:31"><name pos:start="31:11" pos:end="31:12">bs</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:17">drv</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:31">bdrv_set_key</name></name><argument_list pos:start="31:32" pos:end="31:40">(<argument pos:start="31:33" pos:end="31:34"><expr pos:start="31:33" pos:end="31:34"><name pos:start="31:33" pos:end="31:34">bs</name></expr></argument>, <argument pos:start="31:37" pos:end="31:39"><expr pos:start="31:37" pos:end="31:39"><name pos:start="31:37" pos:end="31:39">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="49:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">&lt;</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>)</condition> <block pos:start="33:18" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:26">

        <expr_stmt pos:start="35:9" pos:end="35:26"><expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:10">bs</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:21">valid_key</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="49:5">else if <condition pos:start="37:15" pos:end="37:30">(<expr pos:start="37:16" pos:end="37:29"><operator pos:start="37:16" pos:end="37:16">!</operator><name pos:start="37:17" pos:end="37:29"><name pos:start="37:17" pos:end="37:18">bs</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:29">valid_key</name></name></expr>)</condition> <block pos:start="37:32" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:9">

        <expr_stmt pos:start="39:9" pos:end="39:26"><expr pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:10">bs</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:21">valid_key</name></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <literal type="number" pos:start="39:25" pos:end="39:25">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:14">bs</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:19">blk</name></name></expr>)</condition> <block pos:start="41:22" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:51">

            <comment type="block" pos:start="43:13" pos:end="43:69">/* call the change callback now, we skipped it on open */</comment>

            <expr_stmt pos:start="45:13" pos:end="45:51"><expr pos:start="45:13" pos:end="45:50"><call pos:start="45:13" pos:end="45:50"><name pos:start="45:13" pos:end="45:35">blk_dev_change_media_cb</name><argument_list pos:start="45:36" pos:end="45:50">(<argument pos:start="45:37" pos:end="45:43"><expr pos:start="45:37" pos:end="45:43"><name pos:start="45:37" pos:end="45:43"><name pos:start="45:37" pos:end="45:38">bs</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:43">blk</name></name></expr></argument>, <argument pos:start="45:46" pos:end="45:49"><expr pos:start="45:46" pos:end="45:49"><name pos:start="45:46" pos:end="45:49">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="51:5" pos:end="51:15">return <expr pos:start="51:12" pos:end="51:14"><name pos:start="51:12" pos:end="51:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
