<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25818.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">ftp_get_line</name><parameter_list pos:start="1:24" pos:end="1:65">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:34">FTPContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:49"><decl pos:start="1:40" pos:end="1:49"><type pos:start="1:40" pos:end="1:49"><name pos:start="1:40" pos:end="1:43">char</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">line</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:64"><decl pos:start="1:52" pos:end="1:64"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:64">line_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:5">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">ch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">q</name> <init pos:start="7:13" pos:end="7:18">= <expr pos:start="7:15" pos:end="7:18"><name pos:start="7:15" pos:end="7:18">line</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">ori_block_flag</name> <init pos:start="9:24" pos:end="9:51">= <expr pos:start="9:26" pos:end="9:51"><name pos:start="9:26" pos:end="9:51"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:51">conn_control_block_flag</name></name></expr></init></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="51:5">for <control pos:start="13:9" pos:end="13:12">(<init pos:start="13:10" pos:end="13:10">;</init><condition pos:start="13:11" pos:end="13:11">;</condition><incr/>)</control> <block pos:start="13:14" pos:end="51:5">{<block_content pos:start="15:9" pos:end="49:9">

        <expr_stmt pos:start="15:9" pos:end="15:25"><expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:10">ch</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:24"><name pos:start="15:14" pos:end="15:21">ftp_getc</name><argument_list pos:start="15:22" pos:end="15:24">(<argument pos:start="15:23" pos:end="15:23"><expr pos:start="15:23" pos:end="15:23"><name pos:start="15:23" pos:end="15:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:19">(<expr pos:start="17:13" pos:end="17:18"><name pos:start="17:13" pos:end="17:14">ch</name> <operator pos:start="17:16" pos:end="17:16">&lt;</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>)</condition> <block pos:start="17:21" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:22">

            <expr_stmt pos:start="19:13" pos:end="19:56"><expr pos:start="19:13" pos:end="19:55"><name pos:start="19:13" pos:end="19:38"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:38">conn_control_block_flag</name></name> <operator pos:start="19:40" pos:end="19:40">=</operator> <name pos:start="19:42" pos:end="19:55">ori_block_flag</name></expr>;</expr_stmt>

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><name pos:start="21:20" pos:end="21:21">ch</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="49:9"><if pos:start="25:9" pos:end="41:9">if <condition pos:start="25:12" pos:end="25:23">(<expr pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:14">ch</name> <operator pos:start="25:16" pos:end="25:17">==</operator> <literal type="char" pos:start="25:19" pos:end="25:22">'\n'</literal></expr>)</condition> <block pos:start="25:25" pos:end="41:9">{<block_content pos:start="29:13" pos:end="39:21">

            <comment type="block" pos:start="27:13" pos:end="27:30">/* process line */</comment>

            <if_stmt pos:start="29:13" pos:end="31:20"><if pos:start="29:13" pos:end="31:20">if <condition pos:start="29:16" pos:end="29:42">(<expr pos:start="29:17" pos:end="29:41"><name pos:start="29:17" pos:end="29:17">q</name> <operator pos:start="29:19" pos:end="29:19">&gt;</operator> <name pos:start="29:21" pos:end="29:24">line</name> <operator pos:start="29:26" pos:end="29:27">&amp;&amp;</operator> <name pos:start="29:29" pos:end="29:33"><name pos:start="29:29" pos:end="29:29">q</name><index pos:start="29:30" pos:end="29:33">[<expr pos:start="29:31" pos:end="29:32"><operator pos:start="29:31" pos:end="29:31">-</operator><literal type="number" pos:start="29:32" pos:end="29:32">1</literal></expr>]</index></name> <operator pos:start="29:35" pos:end="29:36">==</operator> <literal type="char" pos:start="29:38" pos:end="29:41">'\r'</literal></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:20"><block_content pos:start="31:17" pos:end="31:20">

                <expr_stmt pos:start="31:17" pos:end="31:20"><expr pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:17">q</name><operator pos:start="31:18" pos:end="31:19">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:22"><expr pos:start="33:13" pos:end="33:21"><operator pos:start="33:13" pos:end="33:13">*</operator><name pos:start="33:14" pos:end="33:14">q</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="char" pos:start="33:18" pos:end="33:21">'\0'</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="37:13" pos:end="37:56"><expr pos:start="37:13" pos:end="37:55"><name pos:start="37:13" pos:end="37:38"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:38">conn_control_block_flag</name></name> <operator pos:start="37:40" pos:end="37:40">=</operator> <name pos:start="37:42" pos:end="37:55">ori_block_flag</name></expr>;</expr_stmt>

            <return pos:start="39:13" pos:end="39:21">return <expr pos:start="39:20" pos:end="39:20"><literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr>;</return>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="49:9">else <block pos:start="41:16" pos:end="49:9">{<block_content pos:start="43:13" pos:end="47:26">

            <expr_stmt pos:start="43:13" pos:end="43:43"><expr pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:38"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:38">conn_control_block_flag</name></name> <operator pos:start="43:40" pos:end="43:40">=</operator> <literal type="number" pos:start="43:42" pos:end="43:42">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="43:45" pos:end="43:74">/* line need to be finished */</comment>

            <if_stmt pos:start="45:13" pos:end="47:26"><if pos:start="45:13" pos:end="47:26">if <condition pos:start="45:16" pos:end="45:43">(<expr pos:start="45:17" pos:end="45:42"><operator pos:start="45:17" pos:end="45:17">(</operator><name pos:start="45:18" pos:end="45:18">q</name> <operator pos:start="45:20" pos:end="45:20">-</operator> <name pos:start="45:22" pos:end="45:25">line</name><operator pos:start="45:26" pos:end="45:26">)</operator> <operator pos:start="45:28" pos:end="45:28">&lt;</operator> <name pos:start="45:30" pos:end="45:38">line_size</name> <operator pos:start="45:40" pos:end="45:40">-</operator> <literal type="number" pos:start="45:42" pos:end="45:42">1</literal></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:26"><block_content pos:start="47:17" pos:end="47:26">

                <expr_stmt pos:start="47:17" pos:end="47:26"><expr pos:start="47:17" pos:end="47:25"><operator pos:start="47:17" pos:end="47:17">*</operator><name pos:start="47:18" pos:end="47:18">q</name><operator pos:start="47:19" pos:end="47:20">++</operator> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:25">ch</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
