<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9490.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">av_tempfile</name><parameter_list pos:start="1:16" pos:end="1:46">(<parameter pos:start="1:17" pos:end="1:28"><decl pos:start="1:17" pos:end="1:28"><type pos:start="1:17" pos:end="1:28"><name pos:start="1:17" pos:end="1:20">char</name> <modifier pos:start="1:22" pos:end="1:22">*</modifier></type><name pos:start="1:23" pos:end="1:28">prefix</name></decl></parameter>, <parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier><modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:45">filename</name></decl></parameter>)</parameter_list> <block pos:start="1:48" pos:end="59:1">{<block_content pos:start="3:5" pos:end="57:14">

    <decl_stmt pos:start="3:5" pos:end="6:0"><decl pos:start="3:5" pos:end="3:13"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:10">fd</name><init pos:start="3:11" pos:end="3:13">=<expr pos:start="3:12" pos:end="3:13"><operator pos:start="3:12" pos:end="3:12">-</operator><literal type="number" pos:start="3:13" pos:end="3:13">1</literal></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:start="5:1" pos:end="5:18">#<cpp:directive pos:start="5:2" pos:end="5:6">ifdef</cpp:directive> <name pos:start="5:8" pos:end="5:18">__MINGW32__</name></cpp:ifdef>

    <expr_stmt pos:start="7:5" pos:end="10:0"><expr pos:start="7:5" pos:end="7:36"><operator pos:start="7:5" pos:end="7:5">*</operator><name pos:start="7:6" pos:end="7:13">filename</name> <operator pos:start="7:15" pos:end="7:15">=</operator> <call pos:start="7:17" pos:end="7:36"><name pos:start="7:17" pos:end="7:23">tempnam</name><argument_list pos:start="7:24" pos:end="7:36">(<argument pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><literal type="string" pos:start="7:25" pos:end="7:27">"."</literal></expr></argument>, <argument pos:start="7:30" pos:end="7:35"><expr pos:start="7:30" pos:end="7:35"><name pos:start="7:30" pos:end="7:35">prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="9:1" pos:end="9:5">#<cpp:directive pos:start="9:2" pos:end="9:5">else</cpp:directive></cpp:else>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:14">len</name> <init pos:start="11:16" pos:end="11:36">= <expr pos:start="11:18" pos:end="11:36"><call pos:start="11:18" pos:end="11:31"><name pos:start="11:18" pos:end="11:23">strlen</name><argument_list pos:start="11:24" pos:end="11:31">(<argument pos:start="11:25" pos:end="11:30"><expr pos:start="11:25" pos:end="11:30"><name pos:start="11:25" pos:end="11:30">prefix</name></expr></argument>)</argument_list></call> <operator pos:start="11:33" pos:end="11:33">+</operator> <literal type="number" pos:start="11:35" pos:end="11:36">12</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="11:39" pos:end="11:75">/* room for "/tmp/" and "XXXXXX\0" */</comment>

    <expr_stmt pos:start="13:5" pos:end="16:0"><expr pos:start="13:5" pos:end="13:30"><operator pos:start="13:5" pos:end="13:5">*</operator><name pos:start="13:6" pos:end="13:13">filename</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <call pos:start="13:17" pos:end="13:30"><name pos:start="13:17" pos:end="13:25">av_malloc</name><argument_list pos:start="13:26" pos:end="13:30">(<argument pos:start="13:27" pos:end="13:29"><expr pos:start="13:27" pos:end="13:29"><name pos:start="13:27" pos:end="13:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="17:5" pos:end="17:33">/* -----common section-----*/</comment>

    <if_stmt pos:start="19:5" pos:end="28:0"><if pos:start="19:5" pos:end="28:0">if <condition pos:start="19:8" pos:end="19:26">(<expr pos:start="19:9" pos:end="19:25"><operator pos:start="19:9" pos:end="19:9">*</operator><name pos:start="19:10" pos:end="19:17">filename</name> <operator pos:start="19:19" pos:end="19:20">==</operator> <name pos:start="19:22" pos:end="19:25">NULL</name></expr>)</condition> <block pos:start="19:28" pos:end="28:0">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:79"><expr pos:start="21:9" pos:end="21:78"><call pos:start="21:9" pos:end="21:78"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:78">(<argument pos:start="21:16" pos:end="21:19"><expr pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:19">NULL</name></expr></argument>, <argument pos:start="21:22" pos:end="21:33"><expr pos:start="21:22" pos:end="21:33"><name pos:start="21:22" pos:end="21:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:36" pos:end="21:77"><expr pos:start="21:36" pos:end="21:77"><literal type="string" pos:start="21:36" pos:end="21:77">"ff_tempfile: Cannot allocate file name\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

<cpp:ifdef pos:start="27:1" pos:end="27:18">#<cpp:directive pos:start="27:2" pos:end="27:6">ifdef</cpp:directive> <name pos:start="27:8" pos:end="27:18">__MINGW32__</name></cpp:ifdef>

    <expr_stmt pos:start="29:5" pos:end="32:0"><expr pos:start="29:5" pos:end="29:62"><name pos:start="29:5" pos:end="29:6">fd</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:62"><name pos:start="29:10" pos:end="29:13">open</name><argument_list pos:start="29:14" pos:end="29:62">(<argument pos:start="29:15" pos:end="29:23"><expr pos:start="29:15" pos:end="29:23"><operator pos:start="29:15" pos:end="29:15">*</operator><name pos:start="29:16" pos:end="29:23">filename</name></expr></argument>, <argument pos:start="29:26" pos:end="29:55"><expr pos:start="29:26" pos:end="29:55"><name pos:start="29:26" pos:end="29:32">_O_RDWR</name> <operator pos:start="29:34" pos:end="29:34">|</operator> <name pos:start="29:36" pos:end="29:44">_O_BINARY</name> <operator pos:start="29:46" pos:end="29:46">|</operator> <name pos:start="29:48" pos:end="29:55">_O_CREAT</name></expr></argument>, <argument pos:start="29:58" pos:end="29:61"><expr pos:start="29:58" pos:end="29:61"><literal type="number" pos:start="29:58" pos:end="29:61">0444</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="31:1" pos:end="31:5">#<cpp:directive pos:start="31:2" pos:end="31:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="33:5" pos:end="33:54"><expr pos:start="33:5" pos:end="33:53"><call pos:start="33:5" pos:end="33:53"><name pos:start="33:5" pos:end="33:12">snprintf</name><argument_list pos:start="33:13" pos:end="33:53">(<argument pos:start="33:14" pos:end="33:22"><expr pos:start="33:14" pos:end="33:22"><operator pos:start="33:14" pos:end="33:14">*</operator><name pos:start="33:15" pos:end="33:22">filename</name></expr></argument>, <argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:27">len</name></expr></argument>, <argument pos:start="33:30" pos:end="33:44"><expr pos:start="33:30" pos:end="33:44"><literal type="string" pos:start="33:30" pos:end="33:44">"/tmp/%sXXXXXX"</literal></expr></argument>, <argument pos:start="33:47" pos:end="33:52"><expr pos:start="33:47" pos:end="33:52"><name pos:start="33:47" pos:end="33:52">prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:28"><expr pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:6">fd</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:27"><name pos:start="35:10" pos:end="35:16">mkstemp</name><argument_list pos:start="35:17" pos:end="35:27">(<argument pos:start="35:18" pos:end="35:26"><expr pos:start="35:18" pos:end="35:26"><operator pos:start="35:18" pos:end="35:18">*</operator><name pos:start="35:19" pos:end="35:26">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="46:0"><if pos:start="37:5" pos:end="46:0">if <condition pos:start="37:8" pos:end="37:15">(<expr pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:10">fd</name> <operator pos:start="37:12" pos:end="37:12">&lt;</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>)</condition> <block pos:start="37:17" pos:end="46:0">{<block_content pos:start="39:9" pos:end="41:32">

        <expr_stmt pos:start="39:9" pos:end="39:55"><expr pos:start="39:9" pos:end="39:54"><call pos:start="39:9" pos:end="39:54"><name pos:start="39:9" pos:end="39:16">snprintf</name><argument_list pos:start="39:17" pos:end="39:54">(<argument pos:start="39:18" pos:end="39:26"><expr pos:start="39:18" pos:end="39:26"><operator pos:start="39:18" pos:end="39:18">*</operator><name pos:start="39:19" pos:end="39:26">filename</name></expr></argument>, <argument pos:start="39:29" pos:end="39:31"><expr pos:start="39:29" pos:end="39:31"><name pos:start="39:29" pos:end="39:31">len</name></expr></argument>, <argument pos:start="39:34" pos:end="39:45"><expr pos:start="39:34" pos:end="39:45"><literal type="string" pos:start="39:34" pos:end="39:45">"./%sXXXXXX"</literal></expr></argument>, <argument pos:start="39:48" pos:end="39:53"><expr pos:start="39:48" pos:end="39:53"><name pos:start="39:48" pos:end="39:53">prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:32"><expr pos:start="41:9" pos:end="41:31"><name pos:start="41:9" pos:end="41:10">fd</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:31"><name pos:start="41:14" pos:end="41:20">mkstemp</name><argument_list pos:start="41:21" pos:end="41:31">(<argument pos:start="41:22" pos:end="41:30"><expr pos:start="41:22" pos:end="41:30"><operator pos:start="41:22" pos:end="41:22">*</operator><name pos:start="41:23" pos:end="41:30">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="47:5" pos:end="47:33">/* -----common section-----*/</comment>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:15">(<expr pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:10">fd</name> <operator pos:start="49:12" pos:end="49:12">&lt;</operator> <literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr>)</condition> <block pos:start="49:17" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:18">

        <expr_stmt pos:start="51:9" pos:end="51:94"><expr pos:start="51:9" pos:end="51:93"><call pos:start="51:9" pos:end="51:93"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:93">(<argument pos:start="51:16" pos:end="51:19"><expr pos:start="51:16" pos:end="51:19"><name pos:start="51:16" pos:end="51:19">NULL</name></expr></argument>, <argument pos:start="51:22" pos:end="51:33"><expr pos:start="51:22" pos:end="51:33"><name pos:start="51:22" pos:end="51:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:36" pos:end="51:81"><expr pos:start="51:36" pos:end="51:81"><literal type="string" pos:start="51:36" pos:end="51:81">"ff_tempfile: Cannot open temporary file %s\n"</literal></expr></argument>, <argument pos:start="51:84" pos:end="51:92"><expr pos:start="51:84" pos:end="51:92"><operator pos:start="51:84" pos:end="51:84">*</operator><name pos:start="51:85" pos:end="51:92">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="57:5" pos:end="57:14">return <expr pos:start="57:12" pos:end="57:13"><name pos:start="57:12" pos:end="57:13">fd</name></expr>;</return> <comment type="block" pos:start="57:16" pos:end="57:28">/* success */</comment>

</block_content>}</block></function>
</unit>
