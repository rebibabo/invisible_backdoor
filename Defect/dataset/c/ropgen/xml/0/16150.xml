<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16150.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:12"><specifier pos:start="1:1" pos:end="1:5">const</specifier> <name pos:start="1:7" pos:end="1:10">char</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:26">small_strptime</name><parameter_list pos:start="1:27" pos:end="3:41">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">p</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">fmt</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:40"><decl pos:start="3:28" pos:end="3:40"><type pos:start="3:28" pos:end="3:40"><name pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:33">struct</name> <name pos:start="3:35" pos:end="3:36">tm</name></name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:40">dt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="123:1">{<block_content pos:start="7:5" pos:end="121:13">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">c</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">val</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="119:5">for<control pos:start="11:8" pos:end="11:11">(<init pos:start="11:9" pos:end="11:9">;</init><condition pos:start="11:10" pos:end="11:10">;</condition><incr/>)</control> <block pos:start="11:13" pos:end="119:5">{<block_content pos:start="13:9" pos:end="117:9">

        <expr_stmt pos:start="13:9" pos:end="13:19"><expr pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:9">c</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <operator pos:start="13:13" pos:end="13:13">*</operator><name pos:start="13:14" pos:end="13:16">fmt</name><operator pos:start="13:17" pos:end="13:18">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="117:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:22">(<expr pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:13">c</name> <operator pos:start="15:15" pos:end="15:16">==</operator> <literal type="char" pos:start="15:18" pos:end="15:21">'\0'</literal></expr>)</condition> <block pos:start="15:24" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:21">

            <return pos:start="17:13" pos:end="17:21">return <expr pos:start="17:20" pos:end="17:20"><name pos:start="17:20" pos:end="17:20">p</name></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="19:11" pos:end="107:9">else if <condition pos:start="19:19" pos:end="19:28">(<expr pos:start="19:20" pos:end="19:27"><name pos:start="19:20" pos:end="19:20">c</name> <operator pos:start="19:22" pos:end="19:23">==</operator> <literal type="char" pos:start="19:25" pos:end="19:27">'%'</literal></expr>)</condition> <block pos:start="19:30" pos:end="107:9">{<block_content pos:start="21:13" pos:end="105:13">

            <expr_stmt pos:start="21:13" pos:end="21:23"><expr pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:13">c</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <operator pos:start="21:17" pos:end="21:17">*</operator><name pos:start="21:18" pos:end="21:20">fmt</name><operator pos:start="21:21" pos:end="21:22">++</operator></expr>;</expr_stmt>

            <switch pos:start="23:13" pos:end="105:13">switch<condition pos:start="23:19" pos:end="23:21">(<expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">c</name></expr>)</condition> <block pos:start="23:23" pos:end="105:13">{<block_content pos:start="25:13" pos:end="103:28">

            <case pos:start="25:13" pos:end="25:21">case <expr pos:start="25:18" pos:end="25:20"><literal type="char" pos:start="25:18" pos:end="25:20">'H'</literal></expr>:</case>

                <expr_stmt pos:start="27:17" pos:end="27:49"><expr pos:start="27:17" pos:end="27:48"><name pos:start="27:17" pos:end="27:19">val</name> <operator pos:start="27:21" pos:end="27:21">=</operator> <call pos:start="27:23" pos:end="27:48"><name pos:start="27:23" pos:end="27:34">date_get_num</name><argument_list pos:start="27:35" pos:end="27:48">(<argument pos:start="27:36" pos:end="27:37"><expr pos:start="27:36" pos:end="27:37"><operator pos:start="27:36" pos:end="27:36">&amp;</operator><name pos:start="27:37" pos:end="27:37">p</name></expr></argument>, <argument pos:start="27:40" pos:end="27:40"><expr pos:start="27:40" pos:end="27:40"><literal type="number" pos:start="27:40" pos:end="27:40">0</literal></expr></argument>, <argument pos:start="27:43" pos:end="27:44"><expr pos:start="27:43" pos:end="27:44"><literal type="number" pos:start="27:43" pos:end="27:44">23</literal></expr></argument>, <argument pos:start="27:47" pos:end="27:47"><expr pos:start="27:47" pos:end="27:47"><literal type="number" pos:start="27:47" pos:end="27:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="29:17" pos:end="31:32"><if pos:start="29:17" pos:end="31:32">if <condition pos:start="29:20" pos:end="29:30">(<expr pos:start="29:21" pos:end="29:29"><name pos:start="29:21" pos:end="29:23">val</name> <operator pos:start="29:25" pos:end="29:26">==</operator> <operator pos:start="29:28" pos:end="29:28">-</operator><literal type="number" pos:start="29:29" pos:end="29:29">1</literal></expr>)</condition><block type="pseudo" pos:start="31:21" pos:end="31:32"><block_content pos:start="31:21" pos:end="31:32">

                    <return pos:start="31:21" pos:end="31:32">return <expr pos:start="31:28" pos:end="31:31"><name pos:start="31:28" pos:end="31:31">NULL</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:34"><expr pos:start="33:17" pos:end="33:33"><name pos:start="33:17" pos:end="33:27"><name pos:start="33:17" pos:end="33:18">dt</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:27">tm_hour</name></name> <operator pos:start="33:29" pos:end="33:29">=</operator> <name pos:start="33:31" pos:end="33:33">val</name></expr>;</expr_stmt>

                <break pos:start="35:17" pos:end="35:22">break;</break>

            <case pos:start="37:13" pos:end="37:21">case <expr pos:start="37:18" pos:end="37:20"><literal type="char" pos:start="37:18" pos:end="37:20">'M'</literal></expr>:</case>

                <expr_stmt pos:start="39:17" pos:end="39:49"><expr pos:start="39:17" pos:end="39:48"><name pos:start="39:17" pos:end="39:19">val</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <call pos:start="39:23" pos:end="39:48"><name pos:start="39:23" pos:end="39:34">date_get_num</name><argument_list pos:start="39:35" pos:end="39:48">(<argument pos:start="39:36" pos:end="39:37"><expr pos:start="39:36" pos:end="39:37"><operator pos:start="39:36" pos:end="39:36">&amp;</operator><name pos:start="39:37" pos:end="39:37">p</name></expr></argument>, <argument pos:start="39:40" pos:end="39:40"><expr pos:start="39:40" pos:end="39:40"><literal type="number" pos:start="39:40" pos:end="39:40">0</literal></expr></argument>, <argument pos:start="39:43" pos:end="39:44"><expr pos:start="39:43" pos:end="39:44"><literal type="number" pos:start="39:43" pos:end="39:44">59</literal></expr></argument>, <argument pos:start="39:47" pos:end="39:47"><expr pos:start="39:47" pos:end="39:47"><literal type="number" pos:start="39:47" pos:end="39:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="41:17" pos:end="43:32"><if pos:start="41:17" pos:end="43:32">if <condition pos:start="41:20" pos:end="41:30">(<expr pos:start="41:21" pos:end="41:29"><name pos:start="41:21" pos:end="41:23">val</name> <operator pos:start="41:25" pos:end="41:26">==</operator> <operator pos:start="41:28" pos:end="41:28">-</operator><literal type="number" pos:start="41:29" pos:end="41:29">1</literal></expr>)</condition><block type="pseudo" pos:start="43:21" pos:end="43:32"><block_content pos:start="43:21" pos:end="43:32">

                    <return pos:start="43:21" pos:end="43:32">return <expr pos:start="43:28" pos:end="43:31"><name pos:start="43:28" pos:end="43:31">NULL</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:33"><expr pos:start="45:17" pos:end="45:32"><name pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:18">dt</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:26">tm_min</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <name pos:start="45:30" pos:end="45:32">val</name></expr>;</expr_stmt>

                <break pos:start="47:17" pos:end="47:22">break;</break>

            <case pos:start="49:13" pos:end="49:21">case <expr pos:start="49:18" pos:end="49:20"><literal type="char" pos:start="49:18" pos:end="49:20">'S'</literal></expr>:</case>

                <expr_stmt pos:start="51:17" pos:end="51:49"><expr pos:start="51:17" pos:end="51:48"><name pos:start="51:17" pos:end="51:19">val</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <call pos:start="51:23" pos:end="51:48"><name pos:start="51:23" pos:end="51:34">date_get_num</name><argument_list pos:start="51:35" pos:end="51:48">(<argument pos:start="51:36" pos:end="51:37"><expr pos:start="51:36" pos:end="51:37"><operator pos:start="51:36" pos:end="51:36">&amp;</operator><name pos:start="51:37" pos:end="51:37">p</name></expr></argument>, <argument pos:start="51:40" pos:end="51:40"><expr pos:start="51:40" pos:end="51:40"><literal type="number" pos:start="51:40" pos:end="51:40">0</literal></expr></argument>, <argument pos:start="51:43" pos:end="51:44"><expr pos:start="51:43" pos:end="51:44"><literal type="number" pos:start="51:43" pos:end="51:44">59</literal></expr></argument>, <argument pos:start="51:47" pos:end="51:47"><expr pos:start="51:47" pos:end="51:47"><literal type="number" pos:start="51:47" pos:end="51:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="53:17" pos:end="55:32"><if pos:start="53:17" pos:end="55:32">if <condition pos:start="53:20" pos:end="53:30">(<expr pos:start="53:21" pos:end="53:29"><name pos:start="53:21" pos:end="53:23">val</name> <operator pos:start="53:25" pos:end="53:26">==</operator> <operator pos:start="53:28" pos:end="53:28">-</operator><literal type="number" pos:start="53:29" pos:end="53:29">1</literal></expr>)</condition><block type="pseudo" pos:start="55:21" pos:end="55:32"><block_content pos:start="55:21" pos:end="55:32">

                    <return pos:start="55:21" pos:end="55:32">return <expr pos:start="55:28" pos:end="55:31"><name pos:start="55:28" pos:end="55:31">NULL</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:33"><expr pos:start="57:17" pos:end="57:32"><name pos:start="57:17" pos:end="57:26"><name pos:start="57:17" pos:end="57:18">dt</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:26">tm_sec</name></name> <operator pos:start="57:28" pos:end="57:28">=</operator> <name pos:start="57:30" pos:end="57:32">val</name></expr>;</expr_stmt>

                <break pos:start="59:17" pos:end="59:22">break;</break>

            <case pos:start="61:13" pos:end="61:21">case <expr pos:start="61:18" pos:end="61:20"><literal type="char" pos:start="61:18" pos:end="61:20">'Y'</literal></expr>:</case>

                <expr_stmt pos:start="63:17" pos:end="63:51"><expr pos:start="63:17" pos:end="63:50"><name pos:start="63:17" pos:end="63:19">val</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <call pos:start="63:23" pos:end="63:50"><name pos:start="63:23" pos:end="63:34">date_get_num</name><argument_list pos:start="63:35" pos:end="63:50">(<argument pos:start="63:36" pos:end="63:37"><expr pos:start="63:36" pos:end="63:37"><operator pos:start="63:36" pos:end="63:36">&amp;</operator><name pos:start="63:37" pos:end="63:37">p</name></expr></argument>, <argument pos:start="63:40" pos:end="63:40"><expr pos:start="63:40" pos:end="63:40"><literal type="number" pos:start="63:40" pos:end="63:40">0</literal></expr></argument>, <argument pos:start="63:43" pos:end="63:46"><expr pos:start="63:43" pos:end="63:46"><literal type="number" pos:start="63:43" pos:end="63:46">9999</literal></expr></argument>, <argument pos:start="63:49" pos:end="63:49"><expr pos:start="63:49" pos:end="63:49"><literal type="number" pos:start="63:49" pos:end="63:49">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="65:17" pos:end="67:32"><if pos:start="65:17" pos:end="67:32">if <condition pos:start="65:20" pos:end="65:30">(<expr pos:start="65:21" pos:end="65:29"><name pos:start="65:21" pos:end="65:23">val</name> <operator pos:start="65:25" pos:end="65:26">==</operator> <operator pos:start="65:28" pos:end="65:28">-</operator><literal type="number" pos:start="65:29" pos:end="65:29">1</literal></expr>)</condition><block type="pseudo" pos:start="67:21" pos:end="67:32"><block_content pos:start="67:21" pos:end="67:32">

                    <return pos:start="67:21" pos:end="67:32">return <expr pos:start="67:28" pos:end="67:31"><name pos:start="67:28" pos:end="67:31">NULL</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:41"><expr pos:start="69:17" pos:end="69:40"><name pos:start="69:17" pos:end="69:27"><name pos:start="69:17" pos:end="69:18">dt</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:27">tm_year</name></name> <operator pos:start="69:29" pos:end="69:29">=</operator> <name pos:start="69:31" pos:end="69:33">val</name> <operator pos:start="69:35" pos:end="69:35">-</operator> <literal type="number" pos:start="69:37" pos:end="69:40">1900</literal></expr>;</expr_stmt>

                <break pos:start="71:17" pos:end="71:22">break;</break>

            <case pos:start="73:13" pos:end="73:21">case <expr pos:start="73:18" pos:end="73:20"><literal type="char" pos:start="73:18" pos:end="73:20">'m'</literal></expr>:</case>

                <expr_stmt pos:start="75:17" pos:end="75:49"><expr pos:start="75:17" pos:end="75:48"><name pos:start="75:17" pos:end="75:19">val</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <call pos:start="75:23" pos:end="75:48"><name pos:start="75:23" pos:end="75:34">date_get_num</name><argument_list pos:start="75:35" pos:end="75:48">(<argument pos:start="75:36" pos:end="75:37"><expr pos:start="75:36" pos:end="75:37"><operator pos:start="75:36" pos:end="75:36">&amp;</operator><name pos:start="75:37" pos:end="75:37">p</name></expr></argument>, <argument pos:start="75:40" pos:end="75:40"><expr pos:start="75:40" pos:end="75:40"><literal type="number" pos:start="75:40" pos:end="75:40">1</literal></expr></argument>, <argument pos:start="75:43" pos:end="75:44"><expr pos:start="75:43" pos:end="75:44"><literal type="number" pos:start="75:43" pos:end="75:44">12</literal></expr></argument>, <argument pos:start="75:47" pos:end="75:47"><expr pos:start="75:47" pos:end="75:47"><literal type="number" pos:start="75:47" pos:end="75:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="77:17" pos:end="79:32"><if pos:start="77:17" pos:end="79:32">if <condition pos:start="77:20" pos:end="77:30">(<expr pos:start="77:21" pos:end="77:29"><name pos:start="77:21" pos:end="77:23">val</name> <operator pos:start="77:25" pos:end="77:26">==</operator> <operator pos:start="77:28" pos:end="77:28">-</operator><literal type="number" pos:start="77:29" pos:end="77:29">1</literal></expr>)</condition><block type="pseudo" pos:start="79:21" pos:end="79:32"><block_content pos:start="79:21" pos:end="79:32">

                    <return pos:start="79:21" pos:end="79:32">return <expr pos:start="79:28" pos:end="79:31"><name pos:start="79:28" pos:end="79:31">NULL</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:37"><expr pos:start="81:17" pos:end="81:36"><name pos:start="81:17" pos:end="81:26"><name pos:start="81:17" pos:end="81:18">dt</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:26">tm_mon</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:32">val</name> <operator pos:start="81:34" pos:end="81:34">-</operator> <literal type="number" pos:start="81:36" pos:end="81:36">1</literal></expr>;</expr_stmt>

                <break pos:start="83:17" pos:end="83:22">break;</break>

            <case pos:start="85:13" pos:end="85:21">case <expr pos:start="85:18" pos:end="85:20"><literal type="char" pos:start="85:18" pos:end="85:20">'d'</literal></expr>:</case>

                <expr_stmt pos:start="87:17" pos:end="87:49"><expr pos:start="87:17" pos:end="87:48"><name pos:start="87:17" pos:end="87:19">val</name> <operator pos:start="87:21" pos:end="87:21">=</operator> <call pos:start="87:23" pos:end="87:48"><name pos:start="87:23" pos:end="87:34">date_get_num</name><argument_list pos:start="87:35" pos:end="87:48">(<argument pos:start="87:36" pos:end="87:37"><expr pos:start="87:36" pos:end="87:37"><operator pos:start="87:36" pos:end="87:36">&amp;</operator><name pos:start="87:37" pos:end="87:37">p</name></expr></argument>, <argument pos:start="87:40" pos:end="87:40"><expr pos:start="87:40" pos:end="87:40"><literal type="number" pos:start="87:40" pos:end="87:40">1</literal></expr></argument>, <argument pos:start="87:43" pos:end="87:44"><expr pos:start="87:43" pos:end="87:44"><literal type="number" pos:start="87:43" pos:end="87:44">31</literal></expr></argument>, <argument pos:start="87:47" pos:end="87:47"><expr pos:start="87:47" pos:end="87:47"><literal type="number" pos:start="87:47" pos:end="87:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="89:17" pos:end="91:32"><if pos:start="89:17" pos:end="91:32">if <condition pos:start="89:20" pos:end="89:30">(<expr pos:start="89:21" pos:end="89:29"><name pos:start="89:21" pos:end="89:23">val</name> <operator pos:start="89:25" pos:end="89:26">==</operator> <operator pos:start="89:28" pos:end="89:28">-</operator><literal type="number" pos:start="89:29" pos:end="89:29">1</literal></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:32"><block_content pos:start="91:21" pos:end="91:32">

                    <return pos:start="91:21" pos:end="91:32">return <expr pos:start="91:28" pos:end="91:31"><name pos:start="91:28" pos:end="91:31">NULL</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:34"><expr pos:start="93:17" pos:end="93:33"><name pos:start="93:17" pos:end="93:27"><name pos:start="93:17" pos:end="93:18">dt</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:27">tm_mday</name></name> <operator pos:start="93:29" pos:end="93:29">=</operator> <name pos:start="93:31" pos:end="93:33">val</name></expr>;</expr_stmt>

                <break pos:start="95:17" pos:end="95:22">break;</break>

            <case pos:start="97:13" pos:end="97:21">case <expr pos:start="97:18" pos:end="97:20"><literal type="char" pos:start="97:18" pos:end="97:20">'%'</literal></expr>:</case>

                <goto pos:start="99:17" pos:end="99:27">goto <name pos:start="99:22" pos:end="99:26">match</name>;</goto>

            <default pos:start="101:13" pos:end="101:20">default:</default>

                <return pos:start="103:17" pos:end="103:28">return <expr pos:start="103:24" pos:end="103:27"><name pos:start="103:24" pos:end="103:27">NULL</name></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="107:11" pos:end="117:9">else <block pos:start="107:16" pos:end="117:9">{<block_content pos:start="109:9" pos:end="115:16">

        <label pos:start="109:9" pos:end="109:14"><name pos:start="109:9" pos:end="109:13">match</name>:</label>

            <if_stmt pos:start="111:13" pos:end="113:28"><if pos:start="111:13" pos:end="113:28">if <condition pos:start="111:16" pos:end="111:24">(<expr pos:start="111:17" pos:end="111:23"><name pos:start="111:17" pos:end="111:17">c</name> <operator pos:start="111:19" pos:end="111:20">!=</operator> <operator pos:start="111:22" pos:end="111:22">*</operator><name pos:start="111:23" pos:end="111:23">p</name></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:28"><block_content pos:start="113:17" pos:end="113:28">

                <return pos:start="113:17" pos:end="113:28">return <expr pos:start="113:24" pos:end="113:27"><name pos:start="113:24" pos:end="113:27">NULL</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:16"><expr pos:start="115:13" pos:end="115:15"><name pos:start="115:13" pos:end="115:13">p</name><operator pos:start="115:14" pos:end="115:15">++</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <return pos:start="121:5" pos:end="121:13">return <expr pos:start="121:12" pos:end="121:12"><name pos:start="121:12" pos:end="121:12">p</name></expr>;</return>

</block_content>}</block></function>
</unit>
