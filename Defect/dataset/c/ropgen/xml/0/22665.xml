<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22665.c" pos:tabs="8"><function pos:start="1:1" pos:end="275:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:42">ff_hevc_deblocking_boundary_strengths</name><parameter_list pos:start="1:43" pos:end="7:76">(<parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:54">HEVCContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:65"><decl pos:start="1:60" pos:end="1:65"><type pos:start="1:60" pos:end="1:65"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:65">x0</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:73"><decl pos:start="1:68" pos:end="1:73"><type pos:start="1:68" pos:end="1:73"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:73">y0</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:62"><decl pos:start="3:44" pos:end="3:62"><type pos:start="3:44" pos:end="3:62"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:62">log2_trafo_size</name></decl></parameter>,

                                           <parameter pos:start="5:44" pos:end="5:73"><decl pos:start="5:44" pos:end="5:73"><type pos:start="5:44" pos:end="5:73"><name pos:start="5:44" pos:end="5:46">int</name></type> <name pos:start="5:48" pos:end="5:73">slice_or_tiles_up_boundary</name></decl></parameter>,

                                           <parameter pos:start="7:44" pos:end="7:75"><decl pos:start="7:44" pos:end="7:75"><type pos:start="7:44" pos:end="7:75"><name pos:start="7:44" pos:end="7:46">int</name></type> <name pos:start="7:48" pos:end="7:75">slice_or_tiles_left_boundary</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="275:1">{<block_content pos:start="11:5" pos:end="273:9">

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">MvField</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:20">tab_mvf</name>     <init pos:start="11:26" pos:end="11:42">= <expr pos:start="11:28" pos:end="11:42"><name pos:start="11:28" pos:end="11:42"><name pos:start="11:28" pos:end="11:28">s</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:33">ref</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:42">tab_mvf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:51"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:24">log2_min_pu_size</name> <init pos:start="13:26" pos:end="13:51">= <expr pos:start="13:28" pos:end="13:51"><name pos:start="13:28" pos:end="13:51"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:33">sps</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:51">log2_min_pu_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:52"><decl pos:start="15:5" pos:end="15:51"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:24">log2_min_tu_size</name> <init pos:start="15:26" pos:end="15:51">= <expr pos:start="15:28" pos:end="15:51"><name pos:start="15:28" pos:end="15:51"><name pos:start="15:28" pos:end="15:28">s</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:33">sps</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:51">log2_min_tb_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:48"><decl pos:start="17:5" pos:end="17:47"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:20">min_pu_width</name>     <init pos:start="17:26" pos:end="17:47">= <expr pos:start="17:28" pos:end="17:47"><name pos:start="17:28" pos:end="17:47"><name pos:start="17:28" pos:end="17:28">s</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:33">sps</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:47">min_pu_width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:48"><decl pos:start="19:5" pos:end="19:47"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:20">min_tu_width</name>     <init pos:start="19:26" pos:end="19:47">= <expr pos:start="19:28" pos:end="19:47"><name pos:start="19:28" pos:end="19:47"><name pos:start="19:28" pos:end="19:28">s</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:33">sps</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:47">min_tb_width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="23:62"><decl pos:start="21:5" pos:end="23:61"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:16">is_intra</name> <init pos:start="21:18" pos:end="23:61">= <expr pos:start="21:20" pos:end="23:61"><name pos:start="21:20" pos:end="23:52"><name pos:start="21:20" pos:end="21:26">tab_mvf</name><index pos:start="21:27" pos:end="23:52">[<expr pos:start="21:28" pos:end="23:51"><operator pos:start="21:28" pos:end="21:28">(</operator><name pos:start="21:29" pos:end="21:30">y0</name> <operator pos:start="21:32" pos:end="21:33">&gt;&gt;</operator> <name pos:start="21:35" pos:end="21:50">log2_min_pu_size</name><operator pos:start="21:51" pos:end="21:51">)</operator> <operator pos:start="21:53" pos:end="21:53">*</operator> <name pos:start="21:55" pos:end="21:66">min_pu_width</name> <operator pos:start="21:68" pos:end="21:68">+</operator>

                           <operator pos:start="23:28" pos:end="23:28">(</operator><name pos:start="23:29" pos:end="23:30">x0</name> <operator pos:start="23:32" pos:end="23:33">&gt;&gt;</operator> <name pos:start="23:35" pos:end="23:50">log2_min_pu_size</name><operator pos:start="23:51" pos:end="23:51">)</operator></expr>]</index></name><operator pos:start="23:53" pos:end="23:53">.</operator><name pos:start="23:54" pos:end="23:61">is_intra</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name></decl>, <decl pos:start="25:12" pos:end="25:12"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:12" pos:end="25:12">j</name></decl>, <decl pos:start="25:15" pos:end="25:16"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:15" pos:end="25:16">bs</name></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="91:5"><if pos:start="29:5" pos:end="91:5">if <condition pos:start="29:8" pos:end="29:32">(<expr pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:10">y0</name> <operator pos:start="29:12" pos:end="29:12">&gt;</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal> <operator pos:start="29:16" pos:end="29:17">&amp;&amp;</operator> <operator pos:start="29:19" pos:end="29:19">(</operator><name pos:start="29:20" pos:end="29:21">y0</name> <operator pos:start="29:23" pos:end="29:23">&amp;</operator> <literal type="number" pos:start="29:25" pos:end="29:25">7</literal><operator pos:start="29:26" pos:end="29:26">)</operator> <operator pos:start="29:28" pos:end="29:29">==</operator> <literal type="number" pos:start="29:31" pos:end="29:31">0</literal></expr>)</condition> <block pos:start="29:34" pos:end="91:5">{<block_content pos:start="31:9" pos:end="89:9">

        <decl_stmt pos:start="31:9" pos:end="31:49"><decl pos:start="31:9" pos:end="31:48"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:17">yp_pu</name> <init pos:start="31:19" pos:end="31:48">= <expr pos:start="31:21" pos:end="31:48"><operator pos:start="31:21" pos:end="31:21">(</operator><name pos:start="31:22" pos:end="31:23">y0</name> <operator pos:start="31:25" pos:end="31:25">-</operator> <literal type="number" pos:start="31:27" pos:end="31:27">1</literal><operator pos:start="31:28" pos:end="31:28">)</operator> <operator pos:start="31:30" pos:end="31:31">&gt;&gt;</operator> <name pos:start="31:33" pos:end="31:48">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:49"><decl pos:start="33:9" pos:end="33:48"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:17">yq_pu</name> <init pos:start="33:19" pos:end="33:48">=  <expr pos:start="33:22" pos:end="33:48"><name pos:start="33:22" pos:end="33:23">y0</name>      <operator pos:start="33:30" pos:end="33:31">&gt;&gt;</operator> <name pos:start="33:33" pos:end="33:48">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:49"><decl pos:start="35:9" pos:end="35:48"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:17">yp_tu</name> <init pos:start="35:19" pos:end="35:48">= <expr pos:start="35:21" pos:end="35:48"><operator pos:start="35:21" pos:end="35:21">(</operator><name pos:start="35:22" pos:end="35:23">y0</name> <operator pos:start="35:25" pos:end="35:25">-</operator> <literal type="number" pos:start="35:27" pos:end="35:27">1</literal><operator pos:start="35:28" pos:end="35:28">)</operator> <operator pos:start="35:30" pos:end="35:31">&gt;&gt;</operator> <name pos:start="35:33" pos:end="35:48">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:49"><decl pos:start="37:9" pos:end="37:48"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:17">yq_tu</name> <init pos:start="37:19" pos:end="37:48">=  <expr pos:start="37:22" pos:end="37:48"><name pos:start="37:22" pos:end="37:23">y0</name>      <operator pos:start="37:30" pos:end="37:31">&gt;&gt;</operator> <name pos:start="37:33" pos:end="37:48">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>



        <for pos:start="41:9" pos:end="89:9">for <control pos:start="41:13" pos:end="41:55">(<init pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">i</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</init> <condition pos:start="41:21" pos:end="41:47"><expr pos:start="41:21" pos:end="41:46"><name pos:start="41:21" pos:end="41:21">i</name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <operator pos:start="41:25" pos:end="41:25">(</operator><literal type="number" pos:start="41:26" pos:end="41:26">1</literal> <operator pos:start="41:28" pos:end="41:29">&lt;&lt;</operator> <name pos:start="41:31" pos:end="41:45">log2_trafo_size</name><operator pos:start="41:46" pos:end="41:46">)</operator></expr>;</condition> <incr pos:start="41:49" pos:end="41:54"><expr pos:start="41:49" pos:end="41:54"><name pos:start="41:49" pos:end="41:49">i</name> <operator pos:start="41:51" pos:end="41:52">+=</operator> <literal type="number" pos:start="41:54" pos:end="41:54">4</literal></expr></incr>)</control> <block pos:start="41:57" pos:end="89:9">{<block_content pos:start="43:13" pos:end="87:74">

            <decl_stmt pos:start="43:13" pos:end="43:52"><decl pos:start="43:13" pos:end="43:51"><type pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">int</name></type> <name pos:start="43:17" pos:end="43:20">x_pu</name> <init pos:start="43:22" pos:end="43:51">= <expr pos:start="43:24" pos:end="43:51"><operator pos:start="43:24" pos:end="43:24">(</operator><name pos:start="43:25" pos:end="43:26">x0</name> <operator pos:start="43:28" pos:end="43:28">+</operator> <name pos:start="43:30" pos:end="43:30">i</name><operator pos:start="43:31" pos:end="43:31">)</operator> <operator pos:start="43:33" pos:end="43:34">&gt;&gt;</operator> <name pos:start="43:36" pos:end="43:51">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="45:13" pos:end="45:52"><decl pos:start="45:13" pos:end="45:51"><type pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">int</name></type> <name pos:start="45:17" pos:end="45:20">x_tu</name> <init pos:start="45:22" pos:end="45:51">= <expr pos:start="45:24" pos:end="45:51"><operator pos:start="45:24" pos:end="45:24">(</operator><name pos:start="45:25" pos:end="45:26">x0</name> <operator pos:start="45:28" pos:end="45:28">+</operator> <name pos:start="45:30" pos:end="45:30">i</name><operator pos:start="45:31" pos:end="45:31">)</operator> <operator pos:start="45:33" pos:end="45:34">&gt;&gt;</operator> <name pos:start="45:36" pos:end="45:51">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="47:13" pos:end="47:66"><decl pos:start="47:13" pos:end="47:65"><type pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:19">MvField</name> <modifier pos:start="47:21" pos:end="47:21">*</modifier></type><name pos:start="47:22" pos:end="47:24">top</name>  <init pos:start="47:27" pos:end="47:65">= <expr pos:start="47:29" pos:end="47:65"><operator pos:start="47:29" pos:end="47:29">&amp;</operator><name pos:start="47:30" pos:end="47:65"><name pos:start="47:30" pos:end="47:36">tab_mvf</name><index pos:start="47:37" pos:end="47:65">[<expr pos:start="47:38" pos:end="47:64"><name pos:start="47:38" pos:end="47:42">yp_pu</name> <operator pos:start="47:44" pos:end="47:44">*</operator> <name pos:start="47:46" pos:end="47:57">min_pu_width</name> <operator pos:start="47:59" pos:end="47:59">+</operator> <name pos:start="47:61" pos:end="47:64">x_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:66"><decl pos:start="49:13" pos:end="49:65"><type pos:start="49:13" pos:end="49:21"><name pos:start="49:13" pos:end="49:19">MvField</name> <modifier pos:start="49:21" pos:end="49:21">*</modifier></type><name pos:start="49:22" pos:end="49:25">curr</name> <init pos:start="49:27" pos:end="49:65">= <expr pos:start="49:29" pos:end="49:65"><operator pos:start="49:29" pos:end="49:29">&amp;</operator><name pos:start="49:30" pos:end="49:65"><name pos:start="49:30" pos:end="49:36">tab_mvf</name><index pos:start="49:37" pos:end="49:65">[<expr pos:start="49:38" pos:end="49:64"><name pos:start="49:38" pos:end="49:42">yq_pu</name> <operator pos:start="49:44" pos:end="49:44">*</operator> <name pos:start="49:46" pos:end="49:57">min_pu_width</name> <operator pos:start="49:59" pos:end="49:59">+</operator> <name pos:start="49:61" pos:end="49:64">x_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:77"><decl pos:start="51:13" pos:end="51:76"><type pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:19">uint8_t</name></type> <name pos:start="51:21" pos:end="51:32">top_cbf_luma</name>  <init pos:start="51:35" pos:end="51:76">= <expr pos:start="51:37" pos:end="51:76"><name pos:start="51:37" pos:end="51:76"><name pos:start="51:37" pos:end="51:37">s</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:47">cbf_luma</name><index pos:start="51:48" pos:end="51:76">[<expr pos:start="51:49" pos:end="51:75"><name pos:start="51:49" pos:end="51:53">yp_tu</name> <operator pos:start="51:55" pos:end="51:55">*</operator> <name pos:start="51:57" pos:end="51:68">min_tu_width</name> <operator pos:start="51:70" pos:end="51:70">+</operator> <name pos:start="51:72" pos:end="51:75">x_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="53:77"><decl pos:start="53:13" pos:end="53:76"><type pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:19">uint8_t</name></type> <name pos:start="53:21" pos:end="53:33">curr_cbf_luma</name> <init pos:start="53:35" pos:end="53:76">= <expr pos:start="53:37" pos:end="53:76"><name pos:start="53:37" pos:end="53:76"><name pos:start="53:37" pos:end="53:37">s</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:47">cbf_luma</name><index pos:start="53:48" pos:end="53:76">[<expr pos:start="53:49" pos:end="53:75"><name pos:start="53:49" pos:end="53:53">yq_tu</name> <operator pos:start="53:55" pos:end="53:55">*</operator> <name pos:start="53:57" pos:end="53:68">min_tu_width</name> <operator pos:start="53:70" pos:end="53:70">+</operator> <name pos:start="53:72" pos:end="53:75">x_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="55:13" pos:end="57:78"><decl pos:start="55:13" pos:end="57:77"><type pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:22">RefPicList</name> <modifier pos:start="55:24" pos:end="55:24">*</modifier></type><name pos:start="55:25" pos:end="55:38">top_refPicList</name> <init pos:start="55:40" pos:end="57:77">= <expr pos:start="55:42" pos:end="57:77"><call pos:start="55:42" pos:end="57:77"><name pos:start="55:42" pos:end="55:61">ff_hevc_get_ref_list</name><argument_list pos:start="55:62" pos:end="57:77">(<argument pos:start="55:63" pos:end="55:63"><expr pos:start="55:63" pos:end="55:63"><name pos:start="55:63" pos:end="55:63">s</name></expr></argument>, <argument pos:start="55:66" pos:end="55:71"><expr pos:start="55:66" pos:end="55:71"><name pos:start="55:66" pos:end="55:71"><name pos:start="55:66" pos:end="55:66">s</name><operator pos:start="55:67" pos:end="55:68">-&gt;</operator><name pos:start="55:69" pos:end="55:71">ref</name></name></expr></argument>,

                                                              <argument pos:start="57:63" pos:end="57:68"><expr pos:start="57:63" pos:end="57:68"><name pos:start="57:63" pos:end="57:64">x0</name> <operator pos:start="57:66" pos:end="57:66">+</operator> <name pos:start="57:68" pos:end="57:68">i</name></expr></argument>, <argument pos:start="57:71" pos:end="57:76"><expr pos:start="57:71" pos:end="57:76"><name pos:start="57:71" pos:end="57:72">y0</name> <operator pos:start="57:74" pos:end="57:74">-</operator> <literal type="number" pos:start="57:76" pos:end="57:76">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="61:13" pos:end="63:73"><expr pos:start="61:13" pos:end="63:72"><name pos:start="61:13" pos:end="61:14">bs</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="63:72"><name pos:start="61:18" pos:end="61:34">boundary_strength</name><argument_list pos:start="61:35" pos:end="63:72">(<argument pos:start="61:36" pos:end="61:36"><expr pos:start="61:36" pos:end="61:36"><name pos:start="61:36" pos:end="61:36">s</name></expr></argument>, <argument pos:start="61:39" pos:end="61:42"><expr pos:start="61:39" pos:end="61:42"><name pos:start="61:39" pos:end="61:42">curr</name></expr></argument>, <argument pos:start="61:45" pos:end="61:57"><expr pos:start="61:45" pos:end="61:57"><name pos:start="61:45" pos:end="61:57">curr_cbf_luma</name></expr></argument>,

                                   <argument pos:start="63:36" pos:end="63:38"><expr pos:start="63:36" pos:end="63:38"><name pos:start="63:36" pos:end="63:38">top</name></expr></argument>, <argument pos:start="63:41" pos:end="63:52"><expr pos:start="63:41" pos:end="63:52"><name pos:start="63:41" pos:end="63:52">top_cbf_luma</name></expr></argument>, <argument pos:start="63:55" pos:end="63:68"><expr pos:start="63:55" pos:end="63:68"><name pos:start="63:55" pos:end="63:68">top_refPicList</name></expr></argument>, <argument pos:start="63:71" pos:end="63:71"><expr pos:start="63:71" pos:end="63:71"><literal type="number" pos:start="63:71" pos:end="63:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="79:23"><if pos:start="65:13" pos:end="71:23">if <condition pos:start="65:16" pos:end="69:57">(<expr pos:start="65:17" pos:end="69:56"><operator pos:start="65:17" pos:end="65:17">!</operator><name pos:start="65:18" pos:end="65:67"><name pos:start="65:18" pos:end="65:18">s</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:22">sh</name><operator pos:start="65:23" pos:end="65:23">.</operator><name pos:start="65:24" pos:end="65:67">slice_loop_filter_across_slices_enabled_flag</name></name> <operator pos:start="65:69" pos:end="65:70">&amp;&amp;</operator>

                <operator pos:start="67:17" pos:end="67:17">(</operator><name pos:start="67:18" pos:end="67:43">slice_or_tiles_up_boundary</name> <operator pos:start="67:45" pos:end="67:45">&amp;</operator> <literal type="number" pos:start="67:47" pos:end="67:47">1</literal><operator pos:start="67:48" pos:end="67:48">)</operator> <operator pos:start="67:50" pos:end="67:51">&amp;&amp;</operator>

                <operator pos:start="69:17" pos:end="69:17">(</operator><name pos:start="69:18" pos:end="69:19">y0</name> <operator pos:start="69:21" pos:end="69:21">%</operator> <operator pos:start="69:23" pos:end="69:23">(</operator><literal type="number" pos:start="69:24" pos:end="69:24">1</literal> <operator pos:start="69:26" pos:end="69:27">&lt;&lt;</operator> <name pos:start="69:29" pos:end="69:49"><name pos:start="69:29" pos:end="69:29">s</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:34">sps</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:49">log2_ctb_size</name></name><operator pos:start="69:50" pos:end="69:50">)</operator><operator pos:start="69:51" pos:end="69:51">)</operator> <operator pos:start="69:53" pos:end="69:54">==</operator> <literal type="number" pos:start="69:56" pos:end="69:56">0</literal></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:23"><block_content pos:start="71:17" pos:end="71:23">

                <expr_stmt pos:start="71:17" pos:end="71:23"><expr pos:start="71:17" pos:end="71:22"><name pos:start="71:17" pos:end="71:18">bs</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="73:13" pos:end="79:23">else if <condition pos:start="73:21" pos:end="77:62">(<expr pos:start="73:22" pos:end="77:61"><operator pos:start="73:22" pos:end="73:22">!</operator><name pos:start="73:23" pos:end="73:67"><name pos:start="73:23" pos:end="73:23">s</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:28">pps</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:67">loop_filter_across_tiles_enabled_flag</name></name> <operator pos:start="73:69" pos:end="73:70">&amp;&amp;</operator>

                     <operator pos:start="75:22" pos:end="75:22">(</operator><name pos:start="75:23" pos:end="75:48">slice_or_tiles_up_boundary</name> <operator pos:start="75:50" pos:end="75:50">&amp;</operator> <literal type="number" pos:start="75:52" pos:end="75:52">2</literal><operator pos:start="75:53" pos:end="75:53">)</operator> <operator pos:start="75:55" pos:end="75:56">&amp;&amp;</operator>

                     <operator pos:start="77:22" pos:end="77:22">(</operator><name pos:start="77:23" pos:end="77:24">y0</name> <operator pos:start="77:26" pos:end="77:26">%</operator> <operator pos:start="77:28" pos:end="77:28">(</operator><literal type="number" pos:start="77:29" pos:end="77:29">1</literal> <operator pos:start="77:31" pos:end="77:32">&lt;&lt;</operator> <name pos:start="77:34" pos:end="77:54"><name pos:start="77:34" pos:end="77:34">s</name><operator pos:start="77:35" pos:end="77:36">-&gt;</operator><name pos:start="77:37" pos:end="77:39">sps</name><operator pos:start="77:40" pos:end="77:41">-&gt;</operator><name pos:start="77:42" pos:end="77:54">log2_ctb_size</name></name><operator pos:start="77:55" pos:end="77:55">)</operator><operator pos:start="77:56" pos:end="77:56">)</operator> <operator pos:start="77:58" pos:end="77:59">==</operator> <literal type="number" pos:start="77:61" pos:end="77:61">0</literal></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:23"><block_content pos:start="79:17" pos:end="79:23">

                <expr_stmt pos:start="79:17" pos:end="79:23"><expr pos:start="79:17" pos:end="79:22"><name pos:start="79:17" pos:end="79:18">bs</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="81:13" pos:end="83:23"><if pos:start="81:13" pos:end="83:23">if <condition pos:start="81:16" pos:end="81:69">(<expr pos:start="81:17" pos:end="81:68"><name pos:start="81:17" pos:end="81:18">y0</name> <operator pos:start="81:20" pos:end="81:21">==</operator> <literal type="number" pos:start="81:23" pos:end="81:23">0</literal> <operator pos:start="81:25" pos:end="81:26">||</operator> <name pos:start="81:28" pos:end="81:63"><name pos:start="81:28" pos:end="81:28">s</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:32">sh</name><operator pos:start="81:33" pos:end="81:33">.</operator><name pos:start="81:34" pos:end="81:63">disable_deblocking_filter_flag</name></name> <operator pos:start="81:65" pos:end="81:66">==</operator> <literal type="number" pos:start="81:68" pos:end="81:68">1</literal></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:23"><block_content pos:start="83:17" pos:end="83:23">

                <expr_stmt pos:start="83:17" pos:end="83:23"><expr pos:start="83:17" pos:end="83:22"><name pos:start="83:17" pos:end="83:18">bs</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <literal type="number" pos:start="83:22" pos:end="83:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="85:13" pos:end="87:74"><if pos:start="85:13" pos:end="87:74">if <condition pos:start="85:16" pos:end="85:19">(<expr pos:start="85:17" pos:end="85:18"><name pos:start="85:17" pos:end="85:18">bs</name></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:74"><block_content pos:start="87:17" pos:end="87:74">

                <expr_stmt pos:start="87:17" pos:end="87:74"><expr pos:start="87:17" pos:end="87:73"><name pos:start="87:17" pos:end="87:68"><name pos:start="87:17" pos:end="87:17">s</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:32">horizontal_bs</name><index pos:start="87:33" pos:end="87:68">[<expr pos:start="87:34" pos:end="87:67"><operator pos:start="87:34" pos:end="87:34">(</operator><operator pos:start="87:35" pos:end="87:35">(</operator><name pos:start="87:36" pos:end="87:37">x0</name> <operator pos:start="87:39" pos:end="87:39">+</operator> <name pos:start="87:41" pos:end="87:41">i</name><operator pos:start="87:42" pos:end="87:42">)</operator> <operator pos:start="87:44" pos:end="87:44">+</operator> <name pos:start="87:46" pos:end="87:47">y0</name> <operator pos:start="87:49" pos:end="87:49">*</operator> <name pos:start="87:51" pos:end="87:61"><name pos:start="87:51" pos:end="87:51">s</name><operator pos:start="87:52" pos:end="87:53">-&gt;</operator><name pos:start="87:54" pos:end="87:61">bs_width</name></name><operator pos:start="87:62" pos:end="87:62">)</operator> <operator pos:start="87:64" pos:end="87:65">&gt;&gt;</operator> <literal type="number" pos:start="87:67" pos:end="87:67">2</literal></expr>]</index></name> <operator pos:start="87:70" pos:end="87:70">=</operator> <name pos:start="87:72" pos:end="87:73">bs</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="95:5" pos:end="95:50">// bs for TU internal horizontal PU boundaries</comment>

    <if_stmt pos:start="97:5" pos:end="147:9"><if pos:start="97:5" pos:end="147:9">if <condition pos:start="97:8" pos:end="97:64">(<expr pos:start="97:9" pos:end="97:63"><name pos:start="97:9" pos:end="97:23">log2_trafo_size</name> <operator pos:start="97:25" pos:end="97:25">&gt;</operator> <name pos:start="97:27" pos:end="97:50"><name pos:start="97:27" pos:end="97:27">s</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:32">sps</name><operator pos:start="97:33" pos:end="97:34">-&gt;</operator><name pos:start="97:35" pos:end="97:50">log2_min_pu_size</name></name> <operator pos:start="97:52" pos:end="97:53">&amp;&amp;</operator> <operator pos:start="97:55" pos:end="97:55">!</operator><name pos:start="97:56" pos:end="97:63">is_intra</name></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="147:9"><block_content pos:start="99:9" pos:end="147:9">

        <for pos:start="99:9" pos:end="147:9">for <control pos:start="99:13" pos:end="99:55">(<init pos:start="99:14" pos:end="99:19"><expr pos:start="99:14" pos:end="99:18"><name pos:start="99:14" pos:end="99:14">j</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <literal type="number" pos:start="99:18" pos:end="99:18">8</literal></expr>;</init> <condition pos:start="99:21" pos:end="99:47"><expr pos:start="99:21" pos:end="99:46"><name pos:start="99:21" pos:end="99:21">j</name> <operator pos:start="99:23" pos:end="99:23">&lt;</operator> <operator pos:start="99:25" pos:end="99:25">(</operator><literal type="number" pos:start="99:26" pos:end="99:26">1</literal> <operator pos:start="99:28" pos:end="99:29">&lt;&lt;</operator> <name pos:start="99:31" pos:end="99:45">log2_trafo_size</name><operator pos:start="99:46" pos:end="99:46">)</operator></expr>;</condition> <incr pos:start="99:49" pos:end="99:54"><expr pos:start="99:49" pos:end="99:54"><name pos:start="99:49" pos:end="99:49">j</name> <operator pos:start="99:51" pos:end="99:52">+=</operator> <literal type="number" pos:start="99:54" pos:end="99:54">8</literal></expr></incr>)</control> <block pos:start="99:57" pos:end="147:9">{<block_content pos:start="101:13" pos:end="145:13">

            <decl_stmt pos:start="101:13" pos:end="101:57"><decl pos:start="101:13" pos:end="101:56"><type pos:start="101:13" pos:end="101:15"><name pos:start="101:13" pos:end="101:15">int</name></type> <name pos:start="101:17" pos:end="101:21">yp_pu</name> <init pos:start="101:23" pos:end="101:56">= <expr pos:start="101:25" pos:end="101:56"><operator pos:start="101:25" pos:end="101:25">(</operator><name pos:start="101:26" pos:end="101:27">y0</name> <operator pos:start="101:29" pos:end="101:29">+</operator> <name pos:start="101:31" pos:end="101:31">j</name> <operator pos:start="101:33" pos:end="101:33">-</operator> <literal type="number" pos:start="101:35" pos:end="101:35">1</literal><operator pos:start="101:36" pos:end="101:36">)</operator> <operator pos:start="101:38" pos:end="101:39">&gt;&gt;</operator> <name pos:start="101:41" pos:end="101:56">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="103:13" pos:end="103:57"><decl pos:start="103:13" pos:end="103:56"><type pos:start="103:13" pos:end="103:15"><name pos:start="103:13" pos:end="103:15">int</name></type> <name pos:start="103:17" pos:end="103:21">yq_pu</name> <init pos:start="103:23" pos:end="103:56">= <expr pos:start="103:25" pos:end="103:56"><operator pos:start="103:25" pos:end="103:25">(</operator><name pos:start="103:26" pos:end="103:27">y0</name> <operator pos:start="103:29" pos:end="103:29">+</operator> <name pos:start="103:31" pos:end="103:31">j</name><operator pos:start="103:32" pos:end="103:32">)</operator>     <operator pos:start="103:38" pos:end="103:39">&gt;&gt;</operator> <name pos:start="103:41" pos:end="103:56">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="105:13" pos:end="105:57"><decl pos:start="105:13" pos:end="105:56"><type pos:start="105:13" pos:end="105:15"><name pos:start="105:13" pos:end="105:15">int</name></type> <name pos:start="105:17" pos:end="105:21">yp_tu</name> <init pos:start="105:23" pos:end="105:56">= <expr pos:start="105:25" pos:end="105:56"><operator pos:start="105:25" pos:end="105:25">(</operator><name pos:start="105:26" pos:end="105:27">y0</name> <operator pos:start="105:29" pos:end="105:29">+</operator> <name pos:start="105:31" pos:end="105:31">j</name> <operator pos:start="105:33" pos:end="105:33">-</operator> <literal type="number" pos:start="105:35" pos:end="105:35">1</literal><operator pos:start="105:36" pos:end="105:36">)</operator> <operator pos:start="105:38" pos:end="105:39">&gt;&gt;</operator> <name pos:start="105:41" pos:end="105:56">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="107:13" pos:end="107:57"><decl pos:start="107:13" pos:end="107:56"><type pos:start="107:13" pos:end="107:15"><name pos:start="107:13" pos:end="107:15">int</name></type> <name pos:start="107:17" pos:end="107:21">yq_tu</name> <init pos:start="107:23" pos:end="107:56">= <expr pos:start="107:25" pos:end="107:56"><operator pos:start="107:25" pos:end="107:25">(</operator><name pos:start="107:26" pos:end="107:27">y0</name> <operator pos:start="107:29" pos:end="107:29">+</operator> <name pos:start="107:31" pos:end="107:31">j</name><operator pos:start="107:32" pos:end="107:32">)</operator>     <operator pos:start="107:38" pos:end="107:39">&gt;&gt;</operator> <name pos:start="107:41" pos:end="107:56">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>



            <for pos:start="111:13" pos:end="145:13">for <control pos:start="111:17" pos:end="111:59">(<init pos:start="111:18" pos:end="111:23"><expr pos:start="111:18" pos:end="111:22"><name pos:start="111:18" pos:end="111:18">i</name> <operator pos:start="111:20" pos:end="111:20">=</operator> <literal type="number" pos:start="111:22" pos:end="111:22">0</literal></expr>;</init> <condition pos:start="111:25" pos:end="111:51"><expr pos:start="111:25" pos:end="111:50"><name pos:start="111:25" pos:end="111:25">i</name> <operator pos:start="111:27" pos:end="111:27">&lt;</operator> <operator pos:start="111:29" pos:end="111:29">(</operator><literal type="number" pos:start="111:30" pos:end="111:30">1</literal> <operator pos:start="111:32" pos:end="111:33">&lt;&lt;</operator> <name pos:start="111:35" pos:end="111:49">log2_trafo_size</name><operator pos:start="111:50" pos:end="111:50">)</operator></expr>;</condition> <incr pos:start="111:53" pos:end="111:58"><expr pos:start="111:53" pos:end="111:58"><name pos:start="111:53" pos:end="111:53">i</name> <operator pos:start="111:55" pos:end="111:56">+=</operator> <literal type="number" pos:start="111:58" pos:end="111:58">4</literal></expr></incr>)</control> <block pos:start="111:61" pos:end="145:13">{<block_content pos:start="113:17" pos:end="143:84">

                <decl_stmt pos:start="113:17" pos:end="113:56"><decl pos:start="113:17" pos:end="113:55"><type pos:start="113:17" pos:end="113:19"><name pos:start="113:17" pos:end="113:19">int</name></type> <name pos:start="113:21" pos:end="113:24">x_pu</name> <init pos:start="113:26" pos:end="113:55">= <expr pos:start="113:28" pos:end="113:55"><operator pos:start="113:28" pos:end="113:28">(</operator><name pos:start="113:29" pos:end="113:30">x0</name> <operator pos:start="113:32" pos:end="113:32">+</operator> <name pos:start="113:34" pos:end="113:34">i</name><operator pos:start="113:35" pos:end="113:35">)</operator> <operator pos:start="113:37" pos:end="113:38">&gt;&gt;</operator> <name pos:start="113:40" pos:end="113:55">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="115:17" pos:end="115:56"><decl pos:start="115:17" pos:end="115:55"><type pos:start="115:17" pos:end="115:19"><name pos:start="115:17" pos:end="115:19">int</name></type> <name pos:start="115:21" pos:end="115:24">x_tu</name> <init pos:start="115:26" pos:end="115:55">= <expr pos:start="115:28" pos:end="115:55"><operator pos:start="115:28" pos:end="115:28">(</operator><name pos:start="115:29" pos:end="115:30">x0</name> <operator pos:start="115:32" pos:end="115:32">+</operator> <name pos:start="115:34" pos:end="115:34">i</name><operator pos:start="115:35" pos:end="115:35">)</operator> <operator pos:start="115:37" pos:end="115:38">&gt;&gt;</operator> <name pos:start="115:40" pos:end="115:55">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="117:17" pos:end="117:70"><decl pos:start="117:17" pos:end="117:69"><type pos:start="117:17" pos:end="117:25"><name pos:start="117:17" pos:end="117:23">MvField</name> <modifier pos:start="117:25" pos:end="117:25">*</modifier></type><name pos:start="117:26" pos:end="117:28">top</name>  <init pos:start="117:31" pos:end="117:69">= <expr pos:start="117:33" pos:end="117:69"><operator pos:start="117:33" pos:end="117:33">&amp;</operator><name pos:start="117:34" pos:end="117:69"><name pos:start="117:34" pos:end="117:40">tab_mvf</name><index pos:start="117:41" pos:end="117:69">[<expr pos:start="117:42" pos:end="117:68"><name pos:start="117:42" pos:end="117:46">yp_pu</name> <operator pos:start="117:48" pos:end="117:48">*</operator> <name pos:start="117:50" pos:end="117:61">min_pu_width</name> <operator pos:start="117:63" pos:end="117:63">+</operator> <name pos:start="117:65" pos:end="117:68">x_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="119:17" pos:end="119:70"><decl pos:start="119:17" pos:end="119:69"><type pos:start="119:17" pos:end="119:25"><name pos:start="119:17" pos:end="119:23">MvField</name> <modifier pos:start="119:25" pos:end="119:25">*</modifier></type><name pos:start="119:26" pos:end="119:29">curr</name> <init pos:start="119:31" pos:end="119:69">= <expr pos:start="119:33" pos:end="119:69"><operator pos:start="119:33" pos:end="119:33">&amp;</operator><name pos:start="119:34" pos:end="119:69"><name pos:start="119:34" pos:end="119:40">tab_mvf</name><index pos:start="119:41" pos:end="119:69">[<expr pos:start="119:42" pos:end="119:68"><name pos:start="119:42" pos:end="119:46">yq_pu</name> <operator pos:start="119:48" pos:end="119:48">*</operator> <name pos:start="119:50" pos:end="119:61">min_pu_width</name> <operator pos:start="119:63" pos:end="119:63">+</operator> <name pos:start="119:65" pos:end="119:68">x_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="121:17" pos:end="121:81"><decl pos:start="121:17" pos:end="121:80"><type pos:start="121:17" pos:end="121:23"><name pos:start="121:17" pos:end="121:23">uint8_t</name></type> <name pos:start="121:25" pos:end="121:36">top_cbf_luma</name>  <init pos:start="121:39" pos:end="121:80">= <expr pos:start="121:41" pos:end="121:80"><name pos:start="121:41" pos:end="121:80"><name pos:start="121:41" pos:end="121:41">s</name><operator pos:start="121:42" pos:end="121:43">-&gt;</operator><name pos:start="121:44" pos:end="121:51">cbf_luma</name><index pos:start="121:52" pos:end="121:80">[<expr pos:start="121:53" pos:end="121:79"><name pos:start="121:53" pos:end="121:57">yp_tu</name> <operator pos:start="121:59" pos:end="121:59">*</operator> <name pos:start="121:61" pos:end="121:72">min_tu_width</name> <operator pos:start="121:74" pos:end="121:74">+</operator> <name pos:start="121:76" pos:end="121:79">x_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="123:17" pos:end="123:81"><decl pos:start="123:17" pos:end="123:80"><type pos:start="123:17" pos:end="123:23"><name pos:start="123:17" pos:end="123:23">uint8_t</name></type> <name pos:start="123:25" pos:end="123:37">curr_cbf_luma</name> <init pos:start="123:39" pos:end="123:80">= <expr pos:start="123:41" pos:end="123:80"><name pos:start="123:41" pos:end="123:80"><name pos:start="123:41" pos:end="123:41">s</name><operator pos:start="123:42" pos:end="123:43">-&gt;</operator><name pos:start="123:44" pos:end="123:51">cbf_luma</name><index pos:start="123:52" pos:end="123:80">[<expr pos:start="123:53" pos:end="123:79"><name pos:start="123:53" pos:end="123:57">yq_tu</name> <operator pos:start="123:59" pos:end="123:59">*</operator> <name pos:start="123:61" pos:end="123:72">min_tu_width</name> <operator pos:start="123:74" pos:end="123:74">+</operator> <name pos:start="123:76" pos:end="123:79">x_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="125:17" pos:end="129:78"><decl pos:start="125:17" pos:end="129:77"><type pos:start="125:17" pos:end="125:28"><name pos:start="125:17" pos:end="125:26">RefPicList</name> <modifier pos:start="125:28" pos:end="125:28">*</modifier></type><name pos:start="125:29" pos:end="125:42">top_refPicList</name> <init pos:start="125:44" pos:end="129:77">= <expr pos:start="125:46" pos:end="129:77"><call pos:start="125:46" pos:end="129:77"><name pos:start="125:46" pos:end="125:65">ff_hevc_get_ref_list</name><argument_list pos:start="125:66" pos:end="129:77">(<argument pos:start="125:67" pos:end="125:67"><expr pos:start="125:67" pos:end="125:67"><name pos:start="125:67" pos:end="125:67">s</name></expr></argument>, <argument pos:start="125:70" pos:end="125:75"><expr pos:start="125:70" pos:end="125:75"><name pos:start="125:70" pos:end="125:75"><name pos:start="125:70" pos:end="125:70">s</name><operator pos:start="125:71" pos:end="125:72">-&gt;</operator><name pos:start="125:73" pos:end="125:75">ref</name></name></expr></argument>,

                                                                  <argument pos:start="127:67" pos:end="127:72"><expr pos:start="127:67" pos:end="127:72"><name pos:start="127:67" pos:end="127:68">x0</name> <operator pos:start="127:70" pos:end="127:70">+</operator> <name pos:start="127:72" pos:end="127:72">i</name></expr></argument>,

                                                                  <argument pos:start="129:67" pos:end="129:76"><expr pos:start="129:67" pos:end="129:76"><name pos:start="129:67" pos:end="129:68">y0</name> <operator pos:start="129:70" pos:end="129:70">+</operator> <name pos:start="129:72" pos:end="129:72">j</name> <operator pos:start="129:74" pos:end="129:74">-</operator> <literal type="number" pos:start="129:76" pos:end="129:76">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="133:17" pos:end="135:77"><expr pos:start="133:17" pos:end="135:76"><name pos:start="133:17" pos:end="133:18">bs</name> <operator pos:start="133:20" pos:end="133:20">=</operator> <call pos:start="133:22" pos:end="135:76"><name pos:start="133:22" pos:end="133:38">boundary_strength</name><argument_list pos:start="133:39" pos:end="135:76">(<argument pos:start="133:40" pos:end="133:40"><expr pos:start="133:40" pos:end="133:40"><name pos:start="133:40" pos:end="133:40">s</name></expr></argument>, <argument pos:start="133:43" pos:end="133:46"><expr pos:start="133:43" pos:end="133:46"><name pos:start="133:43" pos:end="133:46">curr</name></expr></argument>, <argument pos:start="133:49" pos:end="133:61"><expr pos:start="133:49" pos:end="133:61"><name pos:start="133:49" pos:end="133:61">curr_cbf_luma</name></expr></argument>,

                                       <argument pos:start="135:40" pos:end="135:42"><expr pos:start="135:40" pos:end="135:42"><name pos:start="135:40" pos:end="135:42">top</name></expr></argument>, <argument pos:start="135:45" pos:end="135:56"><expr pos:start="135:45" pos:end="135:56"><name pos:start="135:45" pos:end="135:56">top_cbf_luma</name></expr></argument>, <argument pos:start="135:59" pos:end="135:72"><expr pos:start="135:59" pos:end="135:72"><name pos:start="135:59" pos:end="135:72">top_refPicList</name></expr></argument>, <argument pos:start="135:75" pos:end="135:75"><expr pos:start="135:75" pos:end="135:75"><literal type="number" pos:start="135:75" pos:end="135:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="137:17" pos:end="139:27"><if pos:start="137:17" pos:end="139:27">if <condition pos:start="137:20" pos:end="137:62">(<expr pos:start="137:21" pos:end="137:61"><name pos:start="137:21" pos:end="137:56"><name pos:start="137:21" pos:end="137:21">s</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:25">sh</name><operator pos:start="137:26" pos:end="137:26">.</operator><name pos:start="137:27" pos:end="137:56">disable_deblocking_filter_flag</name></name> <operator pos:start="137:58" pos:end="137:59">==</operator> <literal type="number" pos:start="137:61" pos:end="137:61">1</literal></expr>)</condition><block type="pseudo" pos:start="139:21" pos:end="139:27"><block_content pos:start="139:21" pos:end="139:27">

                    <expr_stmt pos:start="139:21" pos:end="139:27"><expr pos:start="139:21" pos:end="139:26"><name pos:start="139:21" pos:end="139:22">bs</name> <operator pos:start="139:24" pos:end="139:24">=</operator> <literal type="number" pos:start="139:26" pos:end="139:26">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="141:17" pos:end="143:84"><if pos:start="141:17" pos:end="143:84">if <condition pos:start="141:20" pos:end="141:23">(<expr pos:start="141:21" pos:end="141:22"><name pos:start="141:21" pos:end="141:22">bs</name></expr>)</condition><block type="pseudo" pos:start="143:21" pos:end="143:84"><block_content pos:start="143:21" pos:end="143:84">

                    <expr_stmt pos:start="143:21" pos:end="143:84"><expr pos:start="143:21" pos:end="143:83"><name pos:start="143:21" pos:end="143:78"><name pos:start="143:21" pos:end="143:21">s</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:36">horizontal_bs</name><index pos:start="143:37" pos:end="143:78">[<expr pos:start="143:38" pos:end="143:77"><operator pos:start="143:38" pos:end="143:38">(</operator><operator pos:start="143:39" pos:end="143:39">(</operator><name pos:start="143:40" pos:end="143:41">x0</name> <operator pos:start="143:43" pos:end="143:43">+</operator> <name pos:start="143:45" pos:end="143:45">i</name><operator pos:start="143:46" pos:end="143:46">)</operator> <operator pos:start="143:48" pos:end="143:48">+</operator> <operator pos:start="143:50" pos:end="143:50">(</operator><name pos:start="143:51" pos:end="143:52">y0</name> <operator pos:start="143:54" pos:end="143:54">+</operator> <name pos:start="143:56" pos:end="143:56">j</name><operator pos:start="143:57" pos:end="143:57">)</operator> <operator pos:start="143:59" pos:end="143:59">*</operator> <name pos:start="143:61" pos:end="143:71"><name pos:start="143:61" pos:end="143:61">s</name><operator pos:start="143:62" pos:end="143:63">-&gt;</operator><name pos:start="143:64" pos:end="143:71">bs_width</name></name><operator pos:start="143:72" pos:end="143:72">)</operator> <operator pos:start="143:74" pos:end="143:75">&gt;&gt;</operator> <literal type="number" pos:start="143:77" pos:end="143:77">2</literal></expr>]</index></name> <operator pos:start="143:80" pos:end="143:80">=</operator> <name pos:start="143:82" pos:end="143:83">bs</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <comment type="line" pos:start="151:5" pos:end="151:36">// bs for vertical TU boundaries</comment>

    <if_stmt pos:start="153:5" pos:end="217:5"><if pos:start="153:5" pos:end="217:5">if <condition pos:start="153:8" pos:end="153:32">(<expr pos:start="153:9" pos:end="153:31"><name pos:start="153:9" pos:end="153:10">x0</name> <operator pos:start="153:12" pos:end="153:12">&gt;</operator> <literal type="number" pos:start="153:14" pos:end="153:14">0</literal> <operator pos:start="153:16" pos:end="153:17">&amp;&amp;</operator> <operator pos:start="153:19" pos:end="153:19">(</operator><name pos:start="153:20" pos:end="153:21">x0</name> <operator pos:start="153:23" pos:end="153:23">&amp;</operator> <literal type="number" pos:start="153:25" pos:end="153:25">7</literal><operator pos:start="153:26" pos:end="153:26">)</operator> <operator pos:start="153:28" pos:end="153:29">==</operator> <literal type="number" pos:start="153:31" pos:end="153:31">0</literal></expr>)</condition> <block pos:start="153:34" pos:end="217:5">{<block_content pos:start="155:9" pos:end="215:9">

        <decl_stmt pos:start="155:9" pos:end="155:49"><decl pos:start="155:9" pos:end="155:48"><type pos:start="155:9" pos:end="155:11"><name pos:start="155:9" pos:end="155:11">int</name></type> <name pos:start="155:13" pos:end="155:17">xp_pu</name> <init pos:start="155:19" pos:end="155:48">= <expr pos:start="155:21" pos:end="155:48"><operator pos:start="155:21" pos:end="155:21">(</operator><name pos:start="155:22" pos:end="155:23">x0</name> <operator pos:start="155:25" pos:end="155:25">-</operator> <literal type="number" pos:start="155:27" pos:end="155:27">1</literal><operator pos:start="155:28" pos:end="155:28">)</operator> <operator pos:start="155:30" pos:end="155:31">&gt;&gt;</operator> <name pos:start="155:33" pos:end="155:48">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="157:9" pos:end="157:49"><decl pos:start="157:9" pos:end="157:48"><type pos:start="157:9" pos:end="157:11"><name pos:start="157:9" pos:end="157:11">int</name></type> <name pos:start="157:13" pos:end="157:17">xq_pu</name> <init pos:start="157:19" pos:end="157:48">=  <expr pos:start="157:22" pos:end="157:48"><name pos:start="157:22" pos:end="157:23">x0</name>      <operator pos:start="157:30" pos:end="157:31">&gt;&gt;</operator> <name pos:start="157:33" pos:end="157:48">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="159:9" pos:end="159:49"><decl pos:start="159:9" pos:end="159:48"><type pos:start="159:9" pos:end="159:11"><name pos:start="159:9" pos:end="159:11">int</name></type> <name pos:start="159:13" pos:end="159:17">xp_tu</name> <init pos:start="159:19" pos:end="159:48">= <expr pos:start="159:21" pos:end="159:48"><operator pos:start="159:21" pos:end="159:21">(</operator><name pos:start="159:22" pos:end="159:23">x0</name> <operator pos:start="159:25" pos:end="159:25">-</operator> <literal type="number" pos:start="159:27" pos:end="159:27">1</literal><operator pos:start="159:28" pos:end="159:28">)</operator> <operator pos:start="159:30" pos:end="159:31">&gt;&gt;</operator> <name pos:start="159:33" pos:end="159:48">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="161:9" pos:end="161:49"><decl pos:start="161:9" pos:end="161:48"><type pos:start="161:9" pos:end="161:11"><name pos:start="161:9" pos:end="161:11">int</name></type> <name pos:start="161:13" pos:end="161:17">xq_tu</name> <init pos:start="161:19" pos:end="161:48">=  <expr pos:start="161:22" pos:end="161:48"><name pos:start="161:22" pos:end="161:23">x0</name>      <operator pos:start="161:30" pos:end="161:31">&gt;&gt;</operator> <name pos:start="161:33" pos:end="161:48">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>



        <for pos:start="165:9" pos:end="215:9">for <control pos:start="165:13" pos:end="165:55">(<init pos:start="165:14" pos:end="165:19"><expr pos:start="165:14" pos:end="165:18"><name pos:start="165:14" pos:end="165:14">i</name> <operator pos:start="165:16" pos:end="165:16">=</operator> <literal type="number" pos:start="165:18" pos:end="165:18">0</literal></expr>;</init> <condition pos:start="165:21" pos:end="165:47"><expr pos:start="165:21" pos:end="165:46"><name pos:start="165:21" pos:end="165:21">i</name> <operator pos:start="165:23" pos:end="165:23">&lt;</operator> <operator pos:start="165:25" pos:end="165:25">(</operator><literal type="number" pos:start="165:26" pos:end="165:26">1</literal> <operator pos:start="165:28" pos:end="165:29">&lt;&lt;</operator> <name pos:start="165:31" pos:end="165:45">log2_trafo_size</name><operator pos:start="165:46" pos:end="165:46">)</operator></expr>;</condition> <incr pos:start="165:49" pos:end="165:54"><expr pos:start="165:49" pos:end="165:54"><name pos:start="165:49" pos:end="165:49">i</name> <operator pos:start="165:51" pos:end="165:52">+=</operator> <literal type="number" pos:start="165:54" pos:end="165:54">4</literal></expr></incr>)</control> <block pos:start="165:57" pos:end="215:9">{<block_content pos:start="167:13" pos:end="213:79">

            <decl_stmt pos:start="167:13" pos:end="167:57"><decl pos:start="167:13" pos:end="167:56"><type pos:start="167:13" pos:end="167:15"><name pos:start="167:13" pos:end="167:15">int</name></type> <name pos:start="167:17" pos:end="167:20">y_pu</name>      <init pos:start="167:27" pos:end="167:56">= <expr pos:start="167:29" pos:end="167:56"><operator pos:start="167:29" pos:end="167:29">(</operator><name pos:start="167:30" pos:end="167:31">y0</name> <operator pos:start="167:33" pos:end="167:33">+</operator> <name pos:start="167:35" pos:end="167:35">i</name><operator pos:start="167:36" pos:end="167:36">)</operator> <operator pos:start="167:38" pos:end="167:39">&gt;&gt;</operator> <name pos:start="167:41" pos:end="167:56">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="169:13" pos:end="169:57"><decl pos:start="169:13" pos:end="169:56"><type pos:start="169:13" pos:end="169:15"><name pos:start="169:13" pos:end="169:15">int</name></type> <name pos:start="169:17" pos:end="169:20">y_tu</name>      <init pos:start="169:27" pos:end="169:56">= <expr pos:start="169:29" pos:end="169:56"><operator pos:start="169:29" pos:end="169:29">(</operator><name pos:start="169:30" pos:end="169:31">y0</name> <operator pos:start="169:33" pos:end="169:33">+</operator> <name pos:start="169:35" pos:end="169:35">i</name><operator pos:start="169:36" pos:end="169:36">)</operator> <operator pos:start="169:38" pos:end="169:39">&gt;&gt;</operator> <name pos:start="169:41" pos:end="169:56">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="171:13" pos:end="171:66"><decl pos:start="171:13" pos:end="171:65"><type pos:start="171:13" pos:end="171:21"><name pos:start="171:13" pos:end="171:19">MvField</name> <modifier pos:start="171:21" pos:end="171:21">*</modifier></type><name pos:start="171:22" pos:end="171:25">left</name> <init pos:start="171:27" pos:end="171:65">= <expr pos:start="171:29" pos:end="171:65"><operator pos:start="171:29" pos:end="171:29">&amp;</operator><name pos:start="171:30" pos:end="171:65"><name pos:start="171:30" pos:end="171:36">tab_mvf</name><index pos:start="171:37" pos:end="171:65">[<expr pos:start="171:38" pos:end="171:64"><name pos:start="171:38" pos:end="171:41">y_pu</name> <operator pos:start="171:43" pos:end="171:43">*</operator> <name pos:start="171:45" pos:end="171:56">min_pu_width</name> <operator pos:start="171:58" pos:end="171:58">+</operator> <name pos:start="171:60" pos:end="171:64">xp_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="173:13" pos:end="173:66"><decl pos:start="173:13" pos:end="173:65"><type pos:start="173:13" pos:end="173:21"><name pos:start="173:13" pos:end="173:19">MvField</name> <modifier pos:start="173:21" pos:end="173:21">*</modifier></type><name pos:start="173:22" pos:end="173:25">curr</name> <init pos:start="173:27" pos:end="173:65">= <expr pos:start="173:29" pos:end="173:65"><operator pos:start="173:29" pos:end="173:29">&amp;</operator><name pos:start="173:30" pos:end="173:65"><name pos:start="173:30" pos:end="173:36">tab_mvf</name><index pos:start="173:37" pos:end="173:65">[<expr pos:start="173:38" pos:end="173:64"><name pos:start="173:38" pos:end="173:41">y_pu</name> <operator pos:start="173:43" pos:end="173:43">*</operator> <name pos:start="173:45" pos:end="173:56">min_pu_width</name> <operator pos:start="173:58" pos:end="173:58">+</operator> <name pos:start="173:60" pos:end="173:64">xq_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <decl_stmt pos:start="177:13" pos:end="177:77"><decl pos:start="177:13" pos:end="177:76"><type pos:start="177:13" pos:end="177:19"><name pos:start="177:13" pos:end="177:19">uint8_t</name></type> <name pos:start="177:21" pos:end="177:33">left_cbf_luma</name> <init pos:start="177:35" pos:end="177:76">= <expr pos:start="177:37" pos:end="177:76"><name pos:start="177:37" pos:end="177:76"><name pos:start="177:37" pos:end="177:37">s</name><operator pos:start="177:38" pos:end="177:39">-&gt;</operator><name pos:start="177:40" pos:end="177:47">cbf_luma</name><index pos:start="177:48" pos:end="177:76">[<expr pos:start="177:49" pos:end="177:75"><name pos:start="177:49" pos:end="177:52">y_tu</name> <operator pos:start="177:54" pos:end="177:54">*</operator> <name pos:start="177:56" pos:end="177:67">min_tu_width</name> <operator pos:start="177:69" pos:end="177:69">+</operator> <name pos:start="177:71" pos:end="177:75">xp_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="179:13" pos:end="179:77"><decl pos:start="179:13" pos:end="179:76"><type pos:start="179:13" pos:end="179:19"><name pos:start="179:13" pos:end="179:19">uint8_t</name></type> <name pos:start="179:21" pos:end="179:33">curr_cbf_luma</name> <init pos:start="179:35" pos:end="179:76">= <expr pos:start="179:37" pos:end="179:76"><name pos:start="179:37" pos:end="179:76"><name pos:start="179:37" pos:end="179:37">s</name><operator pos:start="179:38" pos:end="179:39">-&gt;</operator><name pos:start="179:40" pos:end="179:47">cbf_luma</name><index pos:start="179:48" pos:end="179:76">[<expr pos:start="179:49" pos:end="179:75"><name pos:start="179:49" pos:end="179:52">y_tu</name> <operator pos:start="179:54" pos:end="179:54">*</operator> <name pos:start="179:56" pos:end="179:67">min_tu_width</name> <operator pos:start="179:69" pos:end="179:69">+</operator> <name pos:start="179:71" pos:end="179:75">xq_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="181:13" pos:end="183:79"><decl pos:start="181:13" pos:end="183:78"><type pos:start="181:13" pos:end="181:24"><name pos:start="181:13" pos:end="181:22">RefPicList</name> <modifier pos:start="181:24" pos:end="181:24">*</modifier></type><name pos:start="181:25" pos:end="181:39">left_refPicList</name> <init pos:start="181:41" pos:end="183:78">= <expr pos:start="181:43" pos:end="183:78"><call pos:start="181:43" pos:end="183:78"><name pos:start="181:43" pos:end="181:62">ff_hevc_get_ref_list</name><argument_list pos:start="181:63" pos:end="183:78">(<argument pos:start="181:64" pos:end="181:64"><expr pos:start="181:64" pos:end="181:64"><name pos:start="181:64" pos:end="181:64">s</name></expr></argument>, <argument pos:start="181:67" pos:end="181:72"><expr pos:start="181:67" pos:end="181:72"><name pos:start="181:67" pos:end="181:72"><name pos:start="181:67" pos:end="181:67">s</name><operator pos:start="181:68" pos:end="181:69">-&gt;</operator><name pos:start="181:70" pos:end="181:72">ref</name></name></expr></argument>,

                                                               <argument pos:start="183:64" pos:end="183:69"><expr pos:start="183:64" pos:end="183:69"><name pos:start="183:64" pos:end="183:65">x0</name> <operator pos:start="183:67" pos:end="183:67">-</operator> <literal type="number" pos:start="183:69" pos:end="183:69">1</literal></expr></argument>, <argument pos:start="183:72" pos:end="183:77"><expr pos:start="183:72" pos:end="183:77"><name pos:start="183:72" pos:end="183:73">y0</name> <operator pos:start="183:75" pos:end="183:75">+</operator> <name pos:start="183:77" pos:end="183:77">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="187:13" pos:end="189:76"><expr pos:start="187:13" pos:end="189:75"><name pos:start="187:13" pos:end="187:14">bs</name> <operator pos:start="187:16" pos:end="187:16">=</operator> <call pos:start="187:18" pos:end="189:75"><name pos:start="187:18" pos:end="187:34">boundary_strength</name><argument_list pos:start="187:35" pos:end="189:75">(<argument pos:start="187:36" pos:end="187:36"><expr pos:start="187:36" pos:end="187:36"><name pos:start="187:36" pos:end="187:36">s</name></expr></argument>, <argument pos:start="187:39" pos:end="187:42"><expr pos:start="187:39" pos:end="187:42"><name pos:start="187:39" pos:end="187:42">curr</name></expr></argument>, <argument pos:start="187:45" pos:end="187:57"><expr pos:start="187:45" pos:end="187:57"><name pos:start="187:45" pos:end="187:57">curr_cbf_luma</name></expr></argument>,

                                   <argument pos:start="189:36" pos:end="189:39"><expr pos:start="189:36" pos:end="189:39"><name pos:start="189:36" pos:end="189:39">left</name></expr></argument>, <argument pos:start="189:42" pos:end="189:54"><expr pos:start="189:42" pos:end="189:54"><name pos:start="189:42" pos:end="189:54">left_cbf_luma</name></expr></argument>, <argument pos:start="189:57" pos:end="189:71"><expr pos:start="189:57" pos:end="189:71"><name pos:start="189:57" pos:end="189:71">left_refPicList</name></expr></argument>, <argument pos:start="189:74" pos:end="189:74"><expr pos:start="189:74" pos:end="189:74"><literal type="number" pos:start="189:74" pos:end="189:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="191:13" pos:end="205:23"><if pos:start="191:13" pos:end="197:23">if <condition pos:start="191:16" pos:end="195:57">(<expr pos:start="191:17" pos:end="195:56"><operator pos:start="191:17" pos:end="191:17">!</operator><name pos:start="191:18" pos:end="191:67"><name pos:start="191:18" pos:end="191:18">s</name><operator pos:start="191:19" pos:end="191:20">-&gt;</operator><name pos:start="191:21" pos:end="191:22">sh</name><operator pos:start="191:23" pos:end="191:23">.</operator><name pos:start="191:24" pos:end="191:67">slice_loop_filter_across_slices_enabled_flag</name></name> <operator pos:start="191:69" pos:end="191:70">&amp;&amp;</operator>

                <operator pos:start="193:17" pos:end="193:17">(</operator><name pos:start="193:18" pos:end="193:45">slice_or_tiles_left_boundary</name> <operator pos:start="193:47" pos:end="193:47">&amp;</operator> <literal type="number" pos:start="193:49" pos:end="193:49">1</literal><operator pos:start="193:50" pos:end="193:50">)</operator> <operator pos:start="193:52" pos:end="193:53">&amp;&amp;</operator>

                <operator pos:start="195:17" pos:end="195:17">(</operator><name pos:start="195:18" pos:end="195:19">x0</name> <operator pos:start="195:21" pos:end="195:21">%</operator> <operator pos:start="195:23" pos:end="195:23">(</operator><literal type="number" pos:start="195:24" pos:end="195:24">1</literal> <operator pos:start="195:26" pos:end="195:27">&lt;&lt;</operator> <name pos:start="195:29" pos:end="195:49"><name pos:start="195:29" pos:end="195:29">s</name><operator pos:start="195:30" pos:end="195:31">-&gt;</operator><name pos:start="195:32" pos:end="195:34">sps</name><operator pos:start="195:35" pos:end="195:36">-&gt;</operator><name pos:start="195:37" pos:end="195:49">log2_ctb_size</name></name><operator pos:start="195:50" pos:end="195:50">)</operator><operator pos:start="195:51" pos:end="195:51">)</operator> <operator pos:start="195:53" pos:end="195:54">==</operator> <literal type="number" pos:start="195:56" pos:end="195:56">0</literal></expr>)</condition><block type="pseudo" pos:start="197:17" pos:end="197:23"><block_content pos:start="197:17" pos:end="197:23">

                <expr_stmt pos:start="197:17" pos:end="197:23"><expr pos:start="197:17" pos:end="197:22"><name pos:start="197:17" pos:end="197:18">bs</name> <operator pos:start="197:20" pos:end="197:20">=</operator> <literal type="number" pos:start="197:22" pos:end="197:22">0</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="199:13" pos:end="205:23">else if <condition pos:start="199:21" pos:end="203:62">(<expr pos:start="199:22" pos:end="203:61"><operator pos:start="199:22" pos:end="199:22">!</operator><name pos:start="199:23" pos:end="199:67"><name pos:start="199:23" pos:end="199:23">s</name><operator pos:start="199:24" pos:end="199:25">-&gt;</operator><name pos:start="199:26" pos:end="199:28">pps</name><operator pos:start="199:29" pos:end="199:30">-&gt;</operator><name pos:start="199:31" pos:end="199:67">loop_filter_across_tiles_enabled_flag</name></name> <operator pos:start="199:69" pos:end="199:70">&amp;&amp;</operator>

                     <operator pos:start="201:22" pos:end="201:22">(</operator><name pos:start="201:23" pos:end="201:50">slice_or_tiles_left_boundary</name> <operator pos:start="201:52" pos:end="201:52">&amp;</operator> <literal type="number" pos:start="201:54" pos:end="201:54">2</literal><operator pos:start="201:55" pos:end="201:55">)</operator> <operator pos:start="201:57" pos:end="201:58">&amp;&amp;</operator>

                     <operator pos:start="203:22" pos:end="203:22">(</operator><name pos:start="203:23" pos:end="203:24">x0</name> <operator pos:start="203:26" pos:end="203:26">%</operator> <operator pos:start="203:28" pos:end="203:28">(</operator><literal type="number" pos:start="203:29" pos:end="203:29">1</literal> <operator pos:start="203:31" pos:end="203:32">&lt;&lt;</operator> <name pos:start="203:34" pos:end="203:54"><name pos:start="203:34" pos:end="203:34">s</name><operator pos:start="203:35" pos:end="203:36">-&gt;</operator><name pos:start="203:37" pos:end="203:39">sps</name><operator pos:start="203:40" pos:end="203:41">-&gt;</operator><name pos:start="203:42" pos:end="203:54">log2_ctb_size</name></name><operator pos:start="203:55" pos:end="203:55">)</operator><operator pos:start="203:56" pos:end="203:56">)</operator> <operator pos:start="203:58" pos:end="203:59">==</operator> <literal type="number" pos:start="203:61" pos:end="203:61">0</literal></expr>)</condition><block type="pseudo" pos:start="205:17" pos:end="205:23"><block_content pos:start="205:17" pos:end="205:23">

                <expr_stmt pos:start="205:17" pos:end="205:23"><expr pos:start="205:17" pos:end="205:22"><name pos:start="205:17" pos:end="205:18">bs</name> <operator pos:start="205:20" pos:end="205:20">=</operator> <literal type="number" pos:start="205:22" pos:end="205:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="207:13" pos:end="209:23"><if pos:start="207:13" pos:end="209:23">if <condition pos:start="207:16" pos:end="207:69">(<expr pos:start="207:17" pos:end="207:68"><name pos:start="207:17" pos:end="207:18">x0</name> <operator pos:start="207:20" pos:end="207:21">==</operator> <literal type="number" pos:start="207:23" pos:end="207:23">0</literal> <operator pos:start="207:25" pos:end="207:26">||</operator> <name pos:start="207:28" pos:end="207:63"><name pos:start="207:28" pos:end="207:28">s</name><operator pos:start="207:29" pos:end="207:30">-&gt;</operator><name pos:start="207:31" pos:end="207:32">sh</name><operator pos:start="207:33" pos:end="207:33">.</operator><name pos:start="207:34" pos:end="207:63">disable_deblocking_filter_flag</name></name> <operator pos:start="207:65" pos:end="207:66">==</operator> <literal type="number" pos:start="207:68" pos:end="207:68">1</literal></expr>)</condition><block type="pseudo" pos:start="209:17" pos:end="209:23"><block_content pos:start="209:17" pos:end="209:23">

                <expr_stmt pos:start="209:17" pos:end="209:23"><expr pos:start="209:17" pos:end="209:22"><name pos:start="209:17" pos:end="209:18">bs</name> <operator pos:start="209:20" pos:end="209:20">=</operator> <literal type="number" pos:start="209:22" pos:end="209:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="211:13" pos:end="213:79"><if pos:start="211:13" pos:end="213:79">if <condition pos:start="211:16" pos:end="211:19">(<expr pos:start="211:17" pos:end="211:18"><name pos:start="211:17" pos:end="211:18">bs</name></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:79"><block_content pos:start="213:17" pos:end="213:79">

                <expr_stmt pos:start="213:17" pos:end="213:79"><expr pos:start="213:17" pos:end="213:78"><name pos:start="213:17" pos:end="213:73"><name pos:start="213:17" pos:end="213:17">s</name><operator pos:start="213:18" pos:end="213:19">-&gt;</operator><name pos:start="213:20" pos:end="213:30">vertical_bs</name><index pos:start="213:31" pos:end="213:73">[<expr pos:start="213:32" pos:end="213:72"><operator pos:start="213:32" pos:end="213:32">(</operator><name pos:start="213:33" pos:end="213:34">x0</name> <operator pos:start="213:36" pos:end="213:37">&gt;&gt;</operator> <literal type="number" pos:start="213:39" pos:end="213:39">3</literal><operator pos:start="213:40" pos:end="213:40">)</operator> <operator pos:start="213:42" pos:end="213:42">+</operator> <operator pos:start="213:44" pos:end="213:44">(</operator><operator pos:start="213:45" pos:end="213:45">(</operator><name pos:start="213:46" pos:end="213:47">y0</name> <operator pos:start="213:49" pos:end="213:49">+</operator> <name pos:start="213:51" pos:end="213:51">i</name><operator pos:start="213:52" pos:end="213:52">)</operator> <operator pos:start="213:54" pos:end="213:55">&gt;&gt;</operator> <literal type="number" pos:start="213:57" pos:end="213:57">2</literal><operator pos:start="213:58" pos:end="213:58">)</operator> <operator pos:start="213:60" pos:end="213:60">*</operator> <name pos:start="213:62" pos:end="213:72"><name pos:start="213:62" pos:end="213:62">s</name><operator pos:start="213:63" pos:end="213:64">-&gt;</operator><name pos:start="213:65" pos:end="213:72">bs_width</name></name></expr>]</index></name> <operator pos:start="213:75" pos:end="213:75">=</operator> <name pos:start="213:77" pos:end="213:78">bs</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="221:5" pos:end="221:48">// bs for TU internal vertical PU boundaries</comment>

    <if_stmt pos:start="223:5" pos:end="273:9"><if pos:start="223:5" pos:end="273:9">if <condition pos:start="223:8" pos:end="223:56">(<expr pos:start="223:9" pos:end="223:55"><name pos:start="223:9" pos:end="223:23">log2_trafo_size</name> <operator pos:start="223:25" pos:end="223:25">&gt;</operator> <name pos:start="223:27" pos:end="223:42">log2_min_pu_size</name> <operator pos:start="223:44" pos:end="223:45">&amp;&amp;</operator> <operator pos:start="223:47" pos:end="223:47">!</operator><name pos:start="223:48" pos:end="223:55">is_intra</name></expr>)</condition><block type="pseudo" pos:start="225:9" pos:end="273:9"><block_content pos:start="225:9" pos:end="273:9">

        <for pos:start="225:9" pos:end="273:9">for <control pos:start="225:13" pos:end="225:55">(<init pos:start="225:14" pos:end="225:19"><expr pos:start="225:14" pos:end="225:18"><name pos:start="225:14" pos:end="225:14">j</name> <operator pos:start="225:16" pos:end="225:16">=</operator> <literal type="number" pos:start="225:18" pos:end="225:18">0</literal></expr>;</init> <condition pos:start="225:21" pos:end="225:47"><expr pos:start="225:21" pos:end="225:46"><name pos:start="225:21" pos:end="225:21">j</name> <operator pos:start="225:23" pos:end="225:23">&lt;</operator> <operator pos:start="225:25" pos:end="225:25">(</operator><literal type="number" pos:start="225:26" pos:end="225:26">1</literal> <operator pos:start="225:28" pos:end="225:29">&lt;&lt;</operator> <name pos:start="225:31" pos:end="225:45">log2_trafo_size</name><operator pos:start="225:46" pos:end="225:46">)</operator></expr>;</condition> <incr pos:start="225:49" pos:end="225:54"><expr pos:start="225:49" pos:end="225:54"><name pos:start="225:49" pos:end="225:49">j</name> <operator pos:start="225:51" pos:end="225:52">+=</operator> <literal type="number" pos:start="225:54" pos:end="225:54">4</literal></expr></incr>)</control> <block pos:start="225:57" pos:end="273:9">{<block_content pos:start="227:13" pos:end="271:13">

            <decl_stmt pos:start="227:13" pos:end="227:52"><decl pos:start="227:13" pos:end="227:51"><type pos:start="227:13" pos:end="227:15"><name pos:start="227:13" pos:end="227:15">int</name></type> <name pos:start="227:17" pos:end="227:20">y_pu</name> <init pos:start="227:22" pos:end="227:51">= <expr pos:start="227:24" pos:end="227:51"><operator pos:start="227:24" pos:end="227:24">(</operator><name pos:start="227:25" pos:end="227:26">y0</name> <operator pos:start="227:28" pos:end="227:28">+</operator> <name pos:start="227:30" pos:end="227:30">j</name><operator pos:start="227:31" pos:end="227:31">)</operator> <operator pos:start="227:33" pos:end="227:34">&gt;&gt;</operator> <name pos:start="227:36" pos:end="227:51">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="229:13" pos:end="229:52"><decl pos:start="229:13" pos:end="229:51"><type pos:start="229:13" pos:end="229:15"><name pos:start="229:13" pos:end="229:15">int</name></type> <name pos:start="229:17" pos:end="229:20">y_tu</name> <init pos:start="229:22" pos:end="229:51">= <expr pos:start="229:24" pos:end="229:51"><operator pos:start="229:24" pos:end="229:24">(</operator><name pos:start="229:25" pos:end="229:26">y0</name> <operator pos:start="229:28" pos:end="229:28">+</operator> <name pos:start="229:30" pos:end="229:30">j</name><operator pos:start="229:31" pos:end="229:31">)</operator> <operator pos:start="229:33" pos:end="229:34">&gt;&gt;</operator> <name pos:start="229:36" pos:end="229:51">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>



            <for pos:start="233:13" pos:end="271:13">for <control pos:start="233:17" pos:end="233:59">(<init pos:start="233:18" pos:end="233:23"><expr pos:start="233:18" pos:end="233:22"><name pos:start="233:18" pos:end="233:18">i</name> <operator pos:start="233:20" pos:end="233:20">=</operator> <literal type="number" pos:start="233:22" pos:end="233:22">8</literal></expr>;</init> <condition pos:start="233:25" pos:end="233:51"><expr pos:start="233:25" pos:end="233:50"><name pos:start="233:25" pos:end="233:25">i</name> <operator pos:start="233:27" pos:end="233:27">&lt;</operator> <operator pos:start="233:29" pos:end="233:29">(</operator><literal type="number" pos:start="233:30" pos:end="233:30">1</literal> <operator pos:start="233:32" pos:end="233:33">&lt;&lt;</operator> <name pos:start="233:35" pos:end="233:49">log2_trafo_size</name><operator pos:start="233:50" pos:end="233:50">)</operator></expr>;</condition> <incr pos:start="233:53" pos:end="233:58"><expr pos:start="233:53" pos:end="233:58"><name pos:start="233:53" pos:end="233:53">i</name> <operator pos:start="233:55" pos:end="233:56">+=</operator> <literal type="number" pos:start="233:58" pos:end="233:58">8</literal></expr></incr>)</control> <block pos:start="233:61" pos:end="271:13">{<block_content pos:start="235:17" pos:end="269:89">

                <decl_stmt pos:start="235:17" pos:end="235:61"><decl pos:start="235:17" pos:end="235:60"><type pos:start="235:17" pos:end="235:19"><name pos:start="235:17" pos:end="235:19">int</name></type> <name pos:start="235:21" pos:end="235:25">xp_pu</name> <init pos:start="235:27" pos:end="235:60">= <expr pos:start="235:29" pos:end="235:60"><operator pos:start="235:29" pos:end="235:29">(</operator><name pos:start="235:30" pos:end="235:31">x0</name> <operator pos:start="235:33" pos:end="235:33">+</operator> <name pos:start="235:35" pos:end="235:35">i</name> <operator pos:start="235:37" pos:end="235:37">-</operator> <literal type="number" pos:start="235:39" pos:end="235:39">1</literal><operator pos:start="235:40" pos:end="235:40">)</operator> <operator pos:start="235:42" pos:end="235:43">&gt;&gt;</operator> <name pos:start="235:45" pos:end="235:60">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="237:17" pos:end="237:61"><decl pos:start="237:17" pos:end="237:60"><type pos:start="237:17" pos:end="237:19"><name pos:start="237:17" pos:end="237:19">int</name></type> <name pos:start="237:21" pos:end="237:25">xq_pu</name> <init pos:start="237:27" pos:end="237:60">= <expr pos:start="237:29" pos:end="237:60"><operator pos:start="237:29" pos:end="237:29">(</operator><name pos:start="237:30" pos:end="237:31">x0</name> <operator pos:start="237:33" pos:end="237:33">+</operator> <name pos:start="237:35" pos:end="237:35">i</name><operator pos:start="237:36" pos:end="237:36">)</operator>     <operator pos:start="237:42" pos:end="237:43">&gt;&gt;</operator> <name pos:start="237:45" pos:end="237:60">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="239:17" pos:end="239:61"><decl pos:start="239:17" pos:end="239:60"><type pos:start="239:17" pos:end="239:19"><name pos:start="239:17" pos:end="239:19">int</name></type> <name pos:start="239:21" pos:end="239:25">xp_tu</name> <init pos:start="239:27" pos:end="239:60">= <expr pos:start="239:29" pos:end="239:60"><operator pos:start="239:29" pos:end="239:29">(</operator><name pos:start="239:30" pos:end="239:31">x0</name> <operator pos:start="239:33" pos:end="239:33">+</operator> <name pos:start="239:35" pos:end="239:35">i</name> <operator pos:start="239:37" pos:end="239:37">-</operator> <literal type="number" pos:start="239:39" pos:end="239:39">1</literal><operator pos:start="239:40" pos:end="239:40">)</operator> <operator pos:start="239:42" pos:end="239:43">&gt;&gt;</operator> <name pos:start="239:45" pos:end="239:60">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="241:17" pos:end="241:61"><decl pos:start="241:17" pos:end="241:60"><type pos:start="241:17" pos:end="241:19"><name pos:start="241:17" pos:end="241:19">int</name></type> <name pos:start="241:21" pos:end="241:25">xq_tu</name> <init pos:start="241:27" pos:end="241:60">= <expr pos:start="241:29" pos:end="241:60"><operator pos:start="241:29" pos:end="241:29">(</operator><name pos:start="241:30" pos:end="241:31">x0</name> <operator pos:start="241:33" pos:end="241:33">+</operator> <name pos:start="241:35" pos:end="241:35">i</name><operator pos:start="241:36" pos:end="241:36">)</operator>     <operator pos:start="241:42" pos:end="241:43">&gt;&gt;</operator> <name pos:start="241:45" pos:end="241:60">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="243:17" pos:end="243:70"><decl pos:start="243:17" pos:end="243:69"><type pos:start="243:17" pos:end="243:25"><name pos:start="243:17" pos:end="243:23">MvField</name> <modifier pos:start="243:25" pos:end="243:25">*</modifier></type><name pos:start="243:26" pos:end="243:29">left</name> <init pos:start="243:31" pos:end="243:69">= <expr pos:start="243:33" pos:end="243:69"><operator pos:start="243:33" pos:end="243:33">&amp;</operator><name pos:start="243:34" pos:end="243:69"><name pos:start="243:34" pos:end="243:40">tab_mvf</name><index pos:start="243:41" pos:end="243:69">[<expr pos:start="243:42" pos:end="243:68"><name pos:start="243:42" pos:end="243:45">y_pu</name> <operator pos:start="243:47" pos:end="243:47">*</operator> <name pos:start="243:49" pos:end="243:60">min_pu_width</name> <operator pos:start="243:62" pos:end="243:62">+</operator> <name pos:start="243:64" pos:end="243:68">xp_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="245:17" pos:end="245:70"><decl pos:start="245:17" pos:end="245:69"><type pos:start="245:17" pos:end="245:25"><name pos:start="245:17" pos:end="245:23">MvField</name> <modifier pos:start="245:25" pos:end="245:25">*</modifier></type><name pos:start="245:26" pos:end="245:29">curr</name> <init pos:start="245:31" pos:end="245:69">= <expr pos:start="245:33" pos:end="245:69"><operator pos:start="245:33" pos:end="245:33">&amp;</operator><name pos:start="245:34" pos:end="245:69"><name pos:start="245:34" pos:end="245:40">tab_mvf</name><index pos:start="245:41" pos:end="245:69">[<expr pos:start="245:42" pos:end="245:68"><name pos:start="245:42" pos:end="245:45">y_pu</name> <operator pos:start="245:47" pos:end="245:47">*</operator> <name pos:start="245:49" pos:end="245:60">min_pu_width</name> <operator pos:start="245:62" pos:end="245:62">+</operator> <name pos:start="245:64" pos:end="245:68">xq_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="247:17" pos:end="247:81"><decl pos:start="247:17" pos:end="247:80"><type pos:start="247:17" pos:end="247:23"><name pos:start="247:17" pos:end="247:23">uint8_t</name></type> <name pos:start="247:25" pos:end="247:37">left_cbf_luma</name> <init pos:start="247:39" pos:end="247:80">= <expr pos:start="247:41" pos:end="247:80"><name pos:start="247:41" pos:end="247:80"><name pos:start="247:41" pos:end="247:41">s</name><operator pos:start="247:42" pos:end="247:43">-&gt;</operator><name pos:start="247:44" pos:end="247:51">cbf_luma</name><index pos:start="247:52" pos:end="247:80">[<expr pos:start="247:53" pos:end="247:79"><name pos:start="247:53" pos:end="247:56">y_tu</name> <operator pos:start="247:58" pos:end="247:58">*</operator> <name pos:start="247:60" pos:end="247:71">min_tu_width</name> <operator pos:start="247:73" pos:end="247:73">+</operator> <name pos:start="247:75" pos:end="247:79">xp_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="249:17" pos:end="249:81"><decl pos:start="249:17" pos:end="249:80"><type pos:start="249:17" pos:end="249:23"><name pos:start="249:17" pos:end="249:23">uint8_t</name></type> <name pos:start="249:25" pos:end="249:37">curr_cbf_luma</name> <init pos:start="249:39" pos:end="249:80">= <expr pos:start="249:41" pos:end="249:80"><name pos:start="249:41" pos:end="249:80"><name pos:start="249:41" pos:end="249:41">s</name><operator pos:start="249:42" pos:end="249:43">-&gt;</operator><name pos:start="249:44" pos:end="249:51">cbf_luma</name><index pos:start="249:52" pos:end="249:80">[<expr pos:start="249:53" pos:end="249:79"><name pos:start="249:53" pos:end="249:56">y_tu</name> <operator pos:start="249:58" pos:end="249:58">*</operator> <name pos:start="249:60" pos:end="249:71">min_tu_width</name> <operator pos:start="249:73" pos:end="249:73">+</operator> <name pos:start="249:75" pos:end="249:79">xq_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="251:17" pos:end="255:75"><decl pos:start="251:17" pos:end="255:74"><type pos:start="251:17" pos:end="251:28"><name pos:start="251:17" pos:end="251:26">RefPicList</name> <modifier pos:start="251:28" pos:end="251:28">*</modifier></type><name pos:start="251:29" pos:end="251:43">left_refPicList</name> <init pos:start="251:45" pos:end="255:74">= <expr pos:start="251:47" pos:end="255:74"><call pos:start="251:47" pos:end="255:74"><name pos:start="251:47" pos:end="251:66">ff_hevc_get_ref_list</name><argument_list pos:start="251:67" pos:end="255:74">(<argument pos:start="251:68" pos:end="251:68"><expr pos:start="251:68" pos:end="251:68"><name pos:start="251:68" pos:end="251:68">s</name></expr></argument>, <argument pos:start="251:71" pos:end="251:76"><expr pos:start="251:71" pos:end="251:76"><name pos:start="251:71" pos:end="251:76"><name pos:start="251:71" pos:end="251:71">s</name><operator pos:start="251:72" pos:end="251:73">-&gt;</operator><name pos:start="251:74" pos:end="251:76">ref</name></name></expr></argument>,

                                                                   <argument pos:start="253:68" pos:end="253:77"><expr pos:start="253:68" pos:end="253:77"><name pos:start="253:68" pos:end="253:69">x0</name> <operator pos:start="253:71" pos:end="253:71">+</operator> <name pos:start="253:73" pos:end="253:73">i</name> <operator pos:start="253:75" pos:end="253:75">-</operator> <literal type="number" pos:start="253:77" pos:end="253:77">1</literal></expr></argument>,

                                                                   <argument pos:start="255:68" pos:end="255:73"><expr pos:start="255:68" pos:end="255:73"><name pos:start="255:68" pos:end="255:69">y0</name> <operator pos:start="255:71" pos:end="255:71">+</operator> <name pos:start="255:73" pos:end="255:73">j</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="259:17" pos:end="261:80"><expr pos:start="259:17" pos:end="261:79"><name pos:start="259:17" pos:end="259:18">bs</name> <operator pos:start="259:20" pos:end="259:20">=</operator> <call pos:start="259:22" pos:end="261:79"><name pos:start="259:22" pos:end="259:38">boundary_strength</name><argument_list pos:start="259:39" pos:end="261:79">(<argument pos:start="259:40" pos:end="259:40"><expr pos:start="259:40" pos:end="259:40"><name pos:start="259:40" pos:end="259:40">s</name></expr></argument>, <argument pos:start="259:43" pos:end="259:46"><expr pos:start="259:43" pos:end="259:46"><name pos:start="259:43" pos:end="259:46">curr</name></expr></argument>, <argument pos:start="259:49" pos:end="259:61"><expr pos:start="259:49" pos:end="259:61"><name pos:start="259:49" pos:end="259:61">curr_cbf_luma</name></expr></argument>,

                                       <argument pos:start="261:40" pos:end="261:43"><expr pos:start="261:40" pos:end="261:43"><name pos:start="261:40" pos:end="261:43">left</name></expr></argument>, <argument pos:start="261:46" pos:end="261:58"><expr pos:start="261:46" pos:end="261:58"><name pos:start="261:46" pos:end="261:58">left_cbf_luma</name></expr></argument>, <argument pos:start="261:61" pos:end="261:75"><expr pos:start="261:61" pos:end="261:75"><name pos:start="261:61" pos:end="261:75">left_refPicList</name></expr></argument>, <argument pos:start="261:78" pos:end="261:78"><expr pos:start="261:78" pos:end="261:78"><literal type="number" pos:start="261:78" pos:end="261:78">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="263:17" pos:end="265:27"><if pos:start="263:17" pos:end="265:27">if <condition pos:start="263:20" pos:end="263:62">(<expr pos:start="263:21" pos:end="263:61"><name pos:start="263:21" pos:end="263:56"><name pos:start="263:21" pos:end="263:21">s</name><operator pos:start="263:22" pos:end="263:23">-&gt;</operator><name pos:start="263:24" pos:end="263:25">sh</name><operator pos:start="263:26" pos:end="263:26">.</operator><name pos:start="263:27" pos:end="263:56">disable_deblocking_filter_flag</name></name> <operator pos:start="263:58" pos:end="263:59">==</operator> <literal type="number" pos:start="263:61" pos:end="263:61">1</literal></expr>)</condition><block type="pseudo" pos:start="265:21" pos:end="265:27"><block_content pos:start="265:21" pos:end="265:27">

                    <expr_stmt pos:start="265:21" pos:end="265:27"><expr pos:start="265:21" pos:end="265:26"><name pos:start="265:21" pos:end="265:22">bs</name> <operator pos:start="265:24" pos:end="265:24">=</operator> <literal type="number" pos:start="265:26" pos:end="265:26">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="267:17" pos:end="269:89"><if pos:start="267:17" pos:end="269:89">if <condition pos:start="267:20" pos:end="267:23">(<expr pos:start="267:21" pos:end="267:22"><name pos:start="267:21" pos:end="267:22">bs</name></expr>)</condition><block type="pseudo" pos:start="269:21" pos:end="269:89"><block_content pos:start="269:21" pos:end="269:89">

                    <expr_stmt pos:start="269:21" pos:end="269:89"><expr pos:start="269:21" pos:end="269:88"><name pos:start="269:21" pos:end="269:83"><name pos:start="269:21" pos:end="269:21">s</name><operator pos:start="269:22" pos:end="269:23">-&gt;</operator><name pos:start="269:24" pos:end="269:34">vertical_bs</name><index pos:start="269:35" pos:end="269:83">[<expr pos:start="269:36" pos:end="269:82"><operator pos:start="269:36" pos:end="269:36">(</operator><operator pos:start="269:37" pos:end="269:37">(</operator><name pos:start="269:38" pos:end="269:39">x0</name> <operator pos:start="269:41" pos:end="269:41">+</operator> <name pos:start="269:43" pos:end="269:43">i</name><operator pos:start="269:44" pos:end="269:44">)</operator> <operator pos:start="269:46" pos:end="269:47">&gt;&gt;</operator> <literal type="number" pos:start="269:49" pos:end="269:49">3</literal><operator pos:start="269:50" pos:end="269:50">)</operator> <operator pos:start="269:52" pos:end="269:52">+</operator> <operator pos:start="269:54" pos:end="269:54">(</operator><operator pos:start="269:55" pos:end="269:55">(</operator><name pos:start="269:56" pos:end="269:57">y0</name> <operator pos:start="269:59" pos:end="269:59">+</operator> <name pos:start="269:61" pos:end="269:61">j</name><operator pos:start="269:62" pos:end="269:62">)</operator> <operator pos:start="269:64" pos:end="269:65">&gt;&gt;</operator> <literal type="number" pos:start="269:67" pos:end="269:67">2</literal><operator pos:start="269:68" pos:end="269:68">)</operator> <operator pos:start="269:70" pos:end="269:70">*</operator> <name pos:start="269:72" pos:end="269:82"><name pos:start="269:72" pos:end="269:72">s</name><operator pos:start="269:73" pos:end="269:74">-&gt;</operator><name pos:start="269:75" pos:end="269:82">bs_width</name></name></expr>]</index></name> <operator pos:start="269:85" pos:end="269:85">=</operator> <name pos:start="269:87" pos:end="269:88">bs</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
