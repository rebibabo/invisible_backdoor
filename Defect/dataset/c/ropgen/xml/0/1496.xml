<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1496.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:15"><name pos:start="1:1" pos:end="1:8">uint32_t</name> <name pos:start="1:10" pos:end="1:15">HELPER</name></type>(<name pos:start="1:17" pos:end="1:25">testblock</name>)<parameter_list pos:start="1:27" pos:end="1:66">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:40">CPUS390XState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:65"><decl pos:start="1:48" pos:end="1:65"><type pos:start="1:48" pos:end="1:65"><name pos:start="1:48" pos:end="1:55">uint64_t</name></type> <name pos:start="1:57" pos:end="1:65">real_addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:13">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">uintptr_t</name></type> <name pos:start="5:15" pos:end="5:16">ra</name> <init pos:start="5:18" pos:end="5:26">= <expr pos:start="5:20" pos:end="5:26"><call pos:start="5:20" pos:end="5:26"><name pos:start="5:20" pos:end="5:24">GETPC</name><argument_list pos:start="5:25" pos:end="5:26">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:45">= <expr pos:start="7:20" pos:end="7:45"><call pos:start="7:20" pos:end="7:45"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:45">(<argument pos:start="7:24" pos:end="7:44"><expr pos:start="7:24" pos:end="7:44"><call pos:start="7:24" pos:end="7:44"><name pos:start="7:24" pos:end="7:39">s390_env_get_cpu</name><argument_list pos:start="7:40" pos:end="7:44">(<argument pos:start="7:41" pos:end="7:43"><expr pos:start="7:41" pos:end="7:43"><name pos:start="7:41" pos:end="7:43">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:64"><expr pos:start="13:5" pos:end="13:63"><name pos:start="13:5" pos:end="13:13">real_addr</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <call pos:start="13:17" pos:end="13:44"><name pos:start="13:17" pos:end="13:28">wrap_address</name><argument_list pos:start="13:29" pos:end="13:44">(<argument pos:start="13:30" pos:end="13:32"><expr pos:start="13:30" pos:end="13:32"><name pos:start="13:30" pos:end="13:32">env</name></expr></argument>, <argument pos:start="13:35" pos:end="13:43"><expr pos:start="13:35" pos:end="13:43"><name pos:start="13:35" pos:end="13:43">real_addr</name></expr></argument>)</argument_list></call> <operator pos:start="13:46" pos:end="13:46">&amp;</operator> <name pos:start="13:48" pos:end="13:63">TARGET_PAGE_MASK</name></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:38">/* Check low-address protection */</comment>

    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:60">(<expr pos:start="19:9" pos:end="19:59"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:22"><name pos:start="19:10" pos:end="19:12">env</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:19">cregs</name><index pos:start="19:20" pos:end="19:22">[<expr pos:start="19:21" pos:end="19:21"><literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>]</index></name> <operator pos:start="19:24" pos:end="19:24">&amp;</operator> <name pos:start="19:26" pos:end="19:36">CR0_LOWPROT</name><operator pos:start="19:37" pos:end="19:37">)</operator> <operator pos:start="19:39" pos:end="19:40">&amp;&amp;</operator> <name pos:start="19:42" pos:end="19:50">real_addr</name> <operator pos:start="19:52" pos:end="19:52">&lt;</operator> <literal type="number" pos:start="19:54" pos:end="19:59">0x2000</literal></expr>)</condition> <block pos:start="19:62" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:17">

        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><call pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:25">cpu_restore_state</name><argument_list pos:start="21:26" pos:end="21:33">(<argument pos:start="21:27" pos:end="21:28"><expr pos:start="21:27" pos:end="21:28"><name pos:start="21:27" pos:end="21:28">cs</name></expr></argument>, <argument pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:32"><name pos:start="21:31" pos:end="21:32">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:50"><expr pos:start="23:9" pos:end="23:49"><call pos:start="23:9" pos:end="23:49"><name pos:start="23:9" pos:end="23:25">program_interrupt</name><argument_list pos:start="23:26" pos:end="23:49">(<argument pos:start="23:27" pos:end="23:29"><expr pos:start="23:27" pos:end="23:29"><name pos:start="23:27" pos:end="23:29">env</name></expr></argument>, <argument pos:start="23:32" pos:end="23:45"><expr pos:start="23:32" pos:end="23:45"><name pos:start="23:32" pos:end="23:45">PGM_PROTECTION</name></expr></argument>, <argument pos:start="23:48" pos:end="23:48"><expr pos:start="23:48" pos:end="23:48"><literal type="number" pos:start="23:48" pos:end="23:48">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="31:5" pos:end="35:5">for <control pos:start="31:9" pos:end="31:45">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:37"><expr pos:start="31:17" pos:end="31:36"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:36">TARGET_PAGE_SIZE</name></expr>;</condition> <incr pos:start="31:39" pos:end="31:44"><expr pos:start="31:39" pos:end="31:44"><name pos:start="31:39" pos:end="31:39">i</name> <operator pos:start="31:41" pos:end="31:42">+=</operator> <literal type="number" pos:start="31:44" pos:end="31:44">8</literal></expr></incr>)</control> <block pos:start="31:47" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:51">

        <expr_stmt pos:start="33:9" pos:end="33:51"><expr pos:start="33:9" pos:end="33:50"><call pos:start="33:9" pos:end="33:50"><name pos:start="33:9" pos:end="33:23">cpu_stq_real_ra</name><argument_list pos:start="33:24" pos:end="33:50">(<argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:27">env</name></expr></argument>, <argument pos:start="33:30" pos:end="33:42"><expr pos:start="33:30" pos:end="33:42"><name pos:start="33:30" pos:end="33:38">real_addr</name> <operator pos:start="33:40" pos:end="33:40">+</operator> <name pos:start="33:42" pos:end="33:42">i</name></expr></argument>, <argument pos:start="33:45" pos:end="33:45"><expr pos:start="33:45" pos:end="33:45"><literal type="number" pos:start="33:45" pos:end="33:45">0</literal></expr></argument>, <argument pos:start="33:48" pos:end="33:49"><expr pos:start="33:48" pos:end="33:49"><name pos:start="33:48" pos:end="33:49">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
