<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20790.c" pos:tabs="8"><function pos:start="1:1" pos:end="285:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">bdrv_open_common</name><parameter_list pos:start="1:28" pos:end="3:57">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:65"><decl pos:start="1:51" pos:end="1:65"><type pos:start="1:51" pos:end="1:65"><name pos:start="1:51" pos:end="1:59">BdrvChild</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">file</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:33">QDict</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:42">options</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:56"><decl pos:start="3:45" pos:end="3:56"><type pos:start="3:45" pos:end="3:56"><name pos:start="3:45" pos:end="3:49">Error</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier><modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:56">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="285:1">{<block_content pos:start="7:5" pos:end="283:15">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:23">open_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:24">filename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:27">driver_name</name> <init pos:start="11:29" pos:end="11:34">= <expr pos:start="11:31" pos:end="11:34"><name pos:start="11:31" pos:end="11:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:25">node_name</name> <init pos:start="13:27" pos:end="13:32">= <expr pos:start="13:29" pos:end="13:32"><name pos:start="13:29" pos:end="13:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">QemuOpts</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:15">BlockDriver</name> <modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:20">drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:9">Error</name> <modifier pos:start="19:11" pos:end="19:11">*</modifier></type><name pos:start="19:12" pos:end="19:20">local_err</name> <init pos:start="19:22" pos:end="19:27">= <expr pos:start="19:24" pos:end="19:27"><name pos:start="19:24" pos:end="19:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><call pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:10">assert</name><argument_list pos:start="23:11" pos:end="23:28">(<argument pos:start="23:12" pos:end="23:27"><expr pos:start="23:12" pos:end="23:27"><name pos:start="23:12" pos:end="23:19"><name pos:start="23:12" pos:end="23:13">bs</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:19">file</name></name> <operator pos:start="23:21" pos:end="23:22">==</operator> <name pos:start="23:24" pos:end="23:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:54"><expr pos:start="25:5" pos:end="25:53"><call pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:10">assert</name><argument_list pos:start="25:11" pos:end="25:53">(<argument pos:start="25:12" pos:end="25:52"><expr pos:start="25:12" pos:end="25:52"><name pos:start="25:12" pos:end="25:18">options</name> <operator pos:start="25:20" pos:end="25:21">!=</operator> <name pos:start="25:23" pos:end="25:26">NULL</name> <operator pos:start="25:28" pos:end="25:29">&amp;&amp;</operator> <name pos:start="25:31" pos:end="25:41"><name pos:start="25:31" pos:end="25:32">bs</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:41">options</name></name> <operator pos:start="25:43" pos:end="25:44">!=</operator> <name pos:start="25:46" pos:end="25:52">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:71"><expr pos:start="29:5" pos:end="29:70"><name pos:start="29:5" pos:end="29:8">opts</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:70"><name pos:start="29:12" pos:end="29:27">qemu_opts_create</name><argument_list pos:start="29:28" pos:end="29:70">(<argument pos:start="29:29" pos:end="29:46"><expr pos:start="29:29" pos:end="29:46"><operator pos:start="29:29" pos:end="29:29">&amp;</operator><name pos:start="29:30" pos:end="29:46">bdrv_runtime_opts</name></expr></argument>, <argument pos:start="29:49" pos:end="29:52"><expr pos:start="29:49" pos:end="29:52"><name pos:start="29:49" pos:end="29:52">NULL</name></expr></argument>, <argument pos:start="29:55" pos:end="29:55"><expr pos:start="29:55" pos:end="29:55"><literal type="number" pos:start="29:55" pos:end="29:55">0</literal></expr></argument>, <argument pos:start="29:58" pos:end="29:69"><expr pos:start="29:58" pos:end="29:69"><operator pos:start="29:58" pos:end="29:58">&amp;</operator><name pos:start="29:59" pos:end="29:69">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><call pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:26">qemu_opts_absorb_qdict</name><argument_list pos:start="31:27" pos:end="31:53">(<argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><name pos:start="31:28" pos:end="31:31">opts</name></expr></argument>, <argument pos:start="31:34" pos:end="31:40"><expr pos:start="31:34" pos:end="31:40"><name pos:start="31:34" pos:end="31:40">options</name></expr></argument>, <argument pos:start="31:43" pos:end="31:52"><expr pos:start="31:43" pos:end="31:52"><operator pos:start="31:43" pos:end="31:43">&amp;</operator><name pos:start="31:44" pos:end="31:52">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:17">local_err</name></expr>)</condition> <block pos:start="33:20" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:23">

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><call pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:23">error_propagate</name><argument_list pos:start="35:24" pos:end="35:40">(<argument pos:start="35:25" pos:end="35:28"><expr pos:start="35:25" pos:end="35:28"><name pos:start="35:25" pos:end="35:28">errp</name></expr></argument>, <argument pos:start="35:31" pos:end="35:39"><expr pos:start="35:31" pos:end="35:39"><name pos:start="35:31" pos:end="35:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <operator pos:start="37:15" pos:end="37:15">-</operator><name pos:start="37:16" pos:end="37:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:23">goto <name pos:start="39:14" pos:end="39:22">fail_opts</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:47"><expr pos:start="45:5" pos:end="45:46"><name pos:start="45:5" pos:end="45:15">driver_name</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <call pos:start="45:19" pos:end="45:46"><name pos:start="45:19" pos:end="45:30">qemu_opt_get</name><argument_list pos:start="45:31" pos:end="45:46">(<argument pos:start="45:32" pos:end="45:35"><expr pos:start="45:32" pos:end="45:35"><name pos:start="45:32" pos:end="45:35">opts</name></expr></argument>, <argument pos:start="45:38" pos:end="45:45"><expr pos:start="45:38" pos:end="45:45"><literal type="string" pos:start="45:38" pos:end="45:45">"driver"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:40"><expr pos:start="47:5" pos:end="47:39"><name pos:start="47:5" pos:end="47:7">drv</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:39"><name pos:start="47:11" pos:end="47:26">bdrv_find_format</name><argument_list pos:start="47:27" pos:end="47:39">(<argument pos:start="47:28" pos:end="47:38"><expr pos:start="47:28" pos:end="47:38"><name pos:start="47:28" pos:end="47:38">driver_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><call pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:10">assert</name><argument_list pos:start="49:11" pos:end="49:23">(<argument pos:start="49:12" pos:end="49:22"><expr pos:start="49:12" pos:end="49:22"><name pos:start="49:12" pos:end="49:14">drv</name> <operator pos:start="49:16" pos:end="49:17">!=</operator> <name pos:start="49:19" pos:end="49:22">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="61:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:21">(<expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:12">file</name> <operator pos:start="53:14" pos:end="53:15">!=</operator> <name pos:start="53:17" pos:end="53:20">NULL</name></expr>)</condition> <block pos:start="53:23" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:38">

        <expr_stmt pos:start="55:9" pos:end="55:38"><expr pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:16">filename</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <name pos:start="55:20" pos:end="55:37"><name pos:start="55:20" pos:end="55:23">file</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:27">bs</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:37">filename</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="61:5">else <block pos:start="57:12" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:58">

        <expr_stmt pos:start="59:9" pos:end="59:58"><expr pos:start="59:9" pos:end="59:57"><name pos:start="59:9" pos:end="59:16">filename</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <call pos:start="59:20" pos:end="59:57"><name pos:start="59:20" pos:end="59:36">qdict_get_try_str</name><argument_list pos:start="59:37" pos:end="59:57">(<argument pos:start="59:38" pos:end="59:44"><expr pos:start="59:38" pos:end="59:44"><name pos:start="59:38" pos:end="59:44">options</name></expr></argument>, <argument pos:start="59:47" pos:end="59:56"><expr pos:start="59:47" pos:end="59:56"><literal type="string" pos:start="59:47" pos:end="59:56">"filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="65:5" pos:end="75:5"><if pos:start="65:5" pos:end="75:5">if <condition pos:start="65:8" pos:end="65:46">(<expr pos:start="65:9" pos:end="65:45"><name pos:start="65:9" pos:end="65:32"><name pos:start="65:9" pos:end="65:11">drv</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:32">bdrv_needs_filename</name></name> <operator pos:start="65:34" pos:end="65:35">&amp;&amp;</operator> <operator pos:start="65:37" pos:end="65:37">!</operator><name pos:start="65:38" pos:end="65:45">filename</name></expr>)</condition> <block pos:start="65:48" pos:end="75:5">{<block_content pos:start="67:9" pos:end="73:23">

        <expr_stmt pos:start="67:9" pos:end="69:37"><expr pos:start="67:9" pos:end="69:36"><call pos:start="67:9" pos:end="69:36"><name pos:start="67:9" pos:end="67:18">error_setg</name><argument_list pos:start="67:19" pos:end="69:36">(<argument pos:start="67:20" pos:end="67:23"><expr pos:start="67:20" pos:end="67:23"><name pos:start="67:20" pos:end="67:23">errp</name></expr></argument>, <argument pos:start="67:26" pos:end="67:69"><expr pos:start="67:26" pos:end="67:69"><literal type="string" pos:start="67:26" pos:end="67:69">"The '%s' block driver requires a file name"</literal></expr></argument>,

                   <argument pos:start="69:20" pos:end="69:35"><expr pos:start="69:20" pos:end="69:35"><name pos:start="69:20" pos:end="69:35"><name pos:start="69:20" pos:end="69:22">drv</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:35">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:22"><expr pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <operator pos:start="71:15" pos:end="71:15">-</operator><name pos:start="71:16" pos:end="71:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="73:9" pos:end="73:23">goto <name pos:start="73:14" pos:end="73:22">fail_opts</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="81:45"><expr pos:start="79:5" pos:end="81:44"><call pos:start="79:5" pos:end="81:44"><name pos:start="79:5" pos:end="79:26">trace_bdrv_open_common</name><argument_list pos:start="79:27" pos:end="81:44">(<argument pos:start="79:28" pos:end="79:29"><expr pos:start="79:28" pos:end="79:29"><name pos:start="79:28" pos:end="79:29">bs</name></expr></argument>, <argument pos:start="79:32" pos:end="79:45"><expr pos:start="79:32" pos:end="79:45"><ternary pos:start="79:32" pos:end="79:45"><condition pos:start="79:32" pos:end="79:41"><expr pos:start="79:32" pos:end="79:39"><name pos:start="79:32" pos:end="79:39">filename</name></expr> ?</condition><then/><else pos:start="79:42" pos:end="79:45">: <expr pos:start="79:44" pos:end="79:45"><literal type="string" pos:start="79:44" pos:end="79:45">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="79:48" pos:end="79:61"><expr pos:start="79:48" pos:end="79:61"><name pos:start="79:48" pos:end="79:61"><name pos:start="79:48" pos:end="79:49">bs</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:61">open_flags</name></name></expr></argument>,

                           <argument pos:start="81:28" pos:end="81:43"><expr pos:start="81:28" pos:end="81:43"><name pos:start="81:28" pos:end="81:43"><name pos:start="81:28" pos:end="81:30">drv</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:43">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:48"><expr pos:start="85:5" pos:end="85:47"><name pos:start="85:5" pos:end="85:13">node_name</name> <operator pos:start="85:15" pos:end="85:15">=</operator> <call pos:start="85:17" pos:end="85:47"><name pos:start="85:17" pos:end="85:28">qemu_opt_get</name><argument_list pos:start="85:29" pos:end="85:47">(<argument pos:start="85:30" pos:end="85:33"><expr pos:start="85:30" pos:end="85:33"><name pos:start="85:30" pos:end="85:33">opts</name></expr></argument>, <argument pos:start="85:36" pos:end="85:46"><expr pos:start="85:36" pos:end="85:46"><literal type="string" pos:start="85:36" pos:end="85:46">"node-name"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:53"><expr pos:start="87:5" pos:end="87:52"><call pos:start="87:5" pos:end="87:52"><name pos:start="87:5" pos:end="87:25">bdrv_assign_node_name</name><argument_list pos:start="87:26" pos:end="87:52">(<argument pos:start="87:27" pos:end="87:28"><expr pos:start="87:27" pos:end="87:28"><name pos:start="87:27" pos:end="87:28">bs</name></expr></argument>, <argument pos:start="87:31" pos:end="87:39"><expr pos:start="87:31" pos:end="87:39"><name pos:start="87:31" pos:end="87:39">node_name</name></expr></argument>, <argument pos:start="87:42" pos:end="87:51"><expr pos:start="87:42" pos:end="87:51"><operator pos:start="87:42" pos:end="87:42">&amp;</operator><name pos:start="87:43" pos:end="87:51">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="97:5"><if pos:start="89:5" pos:end="97:5">if <condition pos:start="89:8" pos:end="89:18">(<expr pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:17">local_err</name></expr>)</condition> <block pos:start="89:20" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:23">

        <expr_stmt pos:start="91:9" pos:end="91:41"><expr pos:start="91:9" pos:end="91:40"><call pos:start="91:9" pos:end="91:40"><name pos:start="91:9" pos:end="91:23">error_propagate</name><argument_list pos:start="91:24" pos:end="91:40">(<argument pos:start="91:25" pos:end="91:28"><expr pos:start="91:25" pos:end="91:28"><name pos:start="91:25" pos:end="91:28">errp</name></expr></argument>, <argument pos:start="91:31" pos:end="91:39"><expr pos:start="91:31" pos:end="91:39"><name pos:start="91:31" pos:end="91:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:22"><expr pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <operator pos:start="93:15" pos:end="93:15">-</operator><name pos:start="93:16" pos:end="93:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="95:9" pos:end="95:23">goto <name pos:start="95:14" pos:end="95:22">fail_opts</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:52"><expr pos:start="101:5" pos:end="101:51"><name pos:start="101:5" pos:end="101:17"><name pos:start="101:5" pos:end="101:6">bs</name><operator pos:start="101:7" pos:end="101:8">-&gt;</operator><name pos:start="101:9" pos:end="101:17">read_only</name></name> <operator pos:start="101:19" pos:end="101:19">=</operator> <operator pos:start="101:21" pos:end="101:21">!</operator><operator pos:start="101:22" pos:end="101:22">(</operator><name pos:start="101:23" pos:end="101:36"><name pos:start="101:23" pos:end="101:24">bs</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:36">open_flags</name></name> <operator pos:start="101:38" pos:end="101:38">&amp;</operator> <name pos:start="101:40" pos:end="101:50">BDRV_O_RDWR</name><operator pos:start="101:51" pos:end="101:51">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="105:5" pos:end="121:5"><if pos:start="105:5" pos:end="121:5">if <condition pos:start="105:8" pos:end="105:71">(<expr pos:start="105:9" pos:end="105:70"><name pos:start="105:9" pos:end="105:26">use_bdrv_whitelist</name> <operator pos:start="105:28" pos:end="105:29">&amp;&amp;</operator> <operator pos:start="105:31" pos:end="105:31">!</operator><call pos:start="105:32" pos:end="105:70"><name pos:start="105:32" pos:end="105:50">bdrv_is_whitelisted</name><argument_list pos:start="105:51" pos:end="105:70">(<argument pos:start="105:52" pos:end="105:54"><expr pos:start="105:52" pos:end="105:54"><name pos:start="105:52" pos:end="105:54">drv</name></expr></argument>, <argument pos:start="105:57" pos:end="105:69"><expr pos:start="105:57" pos:end="105:69"><name pos:start="105:57" pos:end="105:69"><name pos:start="105:57" pos:end="105:58">bs</name><operator pos:start="105:59" pos:end="105:60">-&gt;</operator><name pos:start="105:61" pos:end="105:69">read_only</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="105:73" pos:end="121:5">{<block_content pos:start="107:9" pos:end="119:23">

        <expr_stmt pos:start="107:9" pos:end="115:37"><expr pos:start="107:9" pos:end="115:36"><call pos:start="107:9" pos:end="115:36"><name pos:start="107:9" pos:end="107:18">error_setg</name><argument_list pos:start="107:19" pos:end="115:36">(<argument pos:start="107:20" pos:end="107:23"><expr pos:start="107:20" pos:end="107:23"><name pos:start="107:20" pos:end="107:23">errp</name></expr></argument>,

                   <argument pos:start="109:20" pos:end="113:58"><expr pos:start="109:20" pos:end="113:58"><ternary pos:start="109:20" pos:end="113:58"><condition pos:start="109:20" pos:end="111:25"><expr pos:start="109:20" pos:end="109:67"><operator pos:start="109:20" pos:end="109:20">!</operator><name pos:start="109:21" pos:end="109:33"><name pos:start="109:21" pos:end="109:22">bs</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:33">read_only</name></name> <operator pos:start="109:35" pos:end="109:36">&amp;&amp;</operator> <call pos:start="109:38" pos:end="109:67"><name pos:start="109:38" pos:end="109:56">bdrv_is_whitelisted</name><argument_list pos:start="109:57" pos:end="109:67">(<argument pos:start="109:58" pos:end="109:60"><expr pos:start="109:58" pos:end="109:60"><name pos:start="109:58" pos:end="109:60">drv</name></expr></argument>, <argument pos:start="109:63" pos:end="109:66"><expr pos:start="109:63" pos:end="109:66"><name pos:start="109:63" pos:end="109:66">true</name></expr></argument>)</argument_list></call></expr>

                        ?</condition><then pos:start="111:27" pos:end="111:78"> <expr pos:start="111:27" pos:end="111:78"><literal type="string" pos:start="111:27" pos:end="111:78">"Driver '%s' can only be used for read-only devices"</literal></expr>

                        </then><else pos:start="113:25" pos:end="113:58">: <expr pos:start="113:27" pos:end="113:58"><literal type="string" pos:start="113:27" pos:end="113:58">"Driver '%s' is not whitelisted"</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="115:20" pos:end="115:35"><expr pos:start="115:20" pos:end="115:35"><name pos:start="115:20" pos:end="115:35"><name pos:start="115:20" pos:end="115:22">drv</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:35">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:23"><expr pos:start="117:9" pos:end="117:22"><name pos:start="117:9" pos:end="117:11">ret</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <operator pos:start="117:15" pos:end="117:15">-</operator><name pos:start="117:16" pos:end="117:22">ENOTSUP</name></expr>;</expr_stmt>

        <goto pos:start="119:9" pos:end="119:23">goto <name pos:start="119:14" pos:end="119:22">fail_opts</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:34"><expr pos:start="125:5" pos:end="125:33"><call pos:start="125:5" pos:end="125:33"><name pos:start="125:5" pos:end="125:10">assert</name><argument_list pos:start="125:11" pos:end="125:33">(<argument pos:start="125:12" pos:end="125:32"><expr pos:start="125:12" pos:end="125:32"><name pos:start="125:12" pos:end="125:27"><name pos:start="125:12" pos:end="125:13">bs</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:27">copy_on_read</name></name> <operator pos:start="125:29" pos:end="125:30">==</operator> <literal type="number" pos:start="125:32" pos:end="125:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="125:36" pos:end="125:79">/* bdrv_new() and bdrv_close() make it so */</comment>

    <if_stmt pos:start="127:5" pos:end="143:5"><if pos:start="127:5" pos:end="143:5">if <condition pos:start="127:8" pos:end="127:45">(<expr pos:start="127:9" pos:end="127:44"><name pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:10">bs</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:22">open_flags</name></name> <operator pos:start="127:24" pos:end="127:24">&amp;</operator> <name pos:start="127:26" pos:end="127:44">BDRV_O_COPY_ON_READ</name></expr>)</condition> <block pos:start="127:47" pos:end="143:5">{<block_content pos:start="129:9" pos:end="141:9">

        <if_stmt pos:start="129:9" pos:end="141:9"><if pos:start="129:9" pos:end="133:9">if <condition pos:start="129:12" pos:end="129:27">(<expr pos:start="129:13" pos:end="129:26"><operator pos:start="129:13" pos:end="129:13">!</operator><name pos:start="129:14" pos:end="129:26"><name pos:start="129:14" pos:end="129:15">bs</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:26">read_only</name></name></expr>)</condition> <block pos:start="129:29" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:41">

            <expr_stmt pos:start="131:13" pos:end="131:41"><expr pos:start="131:13" pos:end="131:40"><call pos:start="131:13" pos:end="131:40"><name pos:start="131:13" pos:end="131:36">bdrv_enable_copy_on_read</name><argument_list pos:start="131:37" pos:end="131:40">(<argument pos:start="131:38" pos:end="131:39"><expr pos:start="131:38" pos:end="131:39"><name pos:start="131:38" pos:end="131:39">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="133:11" pos:end="141:9">else <block pos:start="133:16" pos:end="141:9">{<block_content pos:start="135:13" pos:end="139:27">

            <expr_stmt pos:start="135:13" pos:end="135:75"><expr pos:start="135:13" pos:end="135:74"><call pos:start="135:13" pos:end="135:74"><name pos:start="135:13" pos:end="135:22">error_setg</name><argument_list pos:start="135:23" pos:end="135:74">(<argument pos:start="135:24" pos:end="135:27"><expr pos:start="135:24" pos:end="135:27"><name pos:start="135:24" pos:end="135:27">errp</name></expr></argument>, <argument pos:start="135:30" pos:end="135:73"><expr pos:start="135:30" pos:end="135:73"><literal type="string" pos:start="135:30" pos:end="135:73">"Can't use copy-on-read on read-only device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:26"><expr pos:start="137:13" pos:end="137:25"><name pos:start="137:13" pos:end="137:15">ret</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <operator pos:start="137:19" pos:end="137:19">-</operator><name pos:start="137:20" pos:end="137:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="139:13" pos:end="139:27">goto <name pos:start="139:18" pos:end="139:26">fail_opts</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="147:5" pos:end="155:5"><if pos:start="147:5" pos:end="151:5">if <condition pos:start="147:8" pos:end="147:25">(<expr pos:start="147:9" pos:end="147:24"><name pos:start="147:9" pos:end="147:16">filename</name> <operator pos:start="147:18" pos:end="147:19">!=</operator> <name pos:start="147:21" pos:end="147:24">NULL</name></expr>)</condition> <block pos:start="147:27" pos:end="151:5">{<block_content pos:start="149:9" pos:end="149:62">

        <expr_stmt pos:start="149:9" pos:end="149:62"><expr pos:start="149:9" pos:end="149:61"><call pos:start="149:9" pos:end="149:61"><name pos:start="149:9" pos:end="149:15">pstrcpy</name><argument_list pos:start="149:16" pos:end="149:61">(<argument pos:start="149:17" pos:end="149:28"><expr pos:start="149:17" pos:end="149:28"><name pos:start="149:17" pos:end="149:28"><name pos:start="149:17" pos:end="149:18">bs</name><operator pos:start="149:19" pos:end="149:20">-&gt;</operator><name pos:start="149:21" pos:end="149:28">filename</name></name></expr></argument>, <argument pos:start="149:31" pos:end="149:50"><expr pos:start="149:31" pos:end="149:50"><sizeof pos:start="149:31" pos:end="149:50">sizeof<argument_list pos:start="149:37" pos:end="149:50">(<argument pos:start="149:38" pos:end="149:49"><expr pos:start="149:38" pos:end="149:49"><name pos:start="149:38" pos:end="149:49"><name pos:start="149:38" pos:end="149:39">bs</name><operator pos:start="149:40" pos:end="149:41">-&gt;</operator><name pos:start="149:42" pos:end="149:49">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="149:53" pos:end="149:60"><expr pos:start="149:53" pos:end="149:60"><name pos:start="149:53" pos:end="149:60">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="151:7" pos:end="155:5">else <block pos:start="151:12" pos:end="155:5">{<block_content pos:start="153:9" pos:end="153:31">

        <expr_stmt pos:start="153:9" pos:end="153:31"><expr pos:start="153:9" pos:end="153:30"><name pos:start="153:9" pos:end="153:23"><name pos:start="153:9" pos:end="153:10">bs</name><operator pos:start="153:11" pos:end="153:12">-&gt;</operator><name pos:start="153:13" pos:end="153:20">filename</name><index pos:start="153:21" pos:end="153:23">[<expr pos:start="153:22" pos:end="153:22"><literal type="number" pos:start="153:22" pos:end="153:22">0</literal></expr>]</index></name> <operator pos:start="153:25" pos:end="153:25">=</operator> <literal type="char" pos:start="153:27" pos:end="153:30">'\0'</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:74"><expr pos:start="157:5" pos:end="157:73"><call pos:start="157:5" pos:end="157:73"><name pos:start="157:5" pos:end="157:11">pstrcpy</name><argument_list pos:start="157:12" pos:end="157:73">(<argument pos:start="157:13" pos:end="157:30"><expr pos:start="157:13" pos:end="157:30"><name pos:start="157:13" pos:end="157:30"><name pos:start="157:13" pos:end="157:14">bs</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:30">exact_filename</name></name></expr></argument>, <argument pos:start="157:33" pos:end="157:58"><expr pos:start="157:33" pos:end="157:58"><sizeof pos:start="157:33" pos:end="157:58">sizeof<argument_list pos:start="157:39" pos:end="157:58">(<argument pos:start="157:40" pos:end="157:57"><expr pos:start="157:40" pos:end="157:57"><name pos:start="157:40" pos:end="157:57"><name pos:start="157:40" pos:end="157:41">bs</name><operator pos:start="157:42" pos:end="157:43">-&gt;</operator><name pos:start="157:44" pos:end="157:57">exact_filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="157:61" pos:end="157:72"><expr pos:start="157:61" pos:end="157:72"><name pos:start="157:61" pos:end="157:72"><name pos:start="157:61" pos:end="157:62">bs</name><operator pos:start="157:63" pos:end="157:64">-&gt;</operator><name pos:start="157:65" pos:end="157:72">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:18"><expr pos:start="161:5" pos:end="161:17"><name pos:start="161:5" pos:end="161:11"><name pos:start="161:5" pos:end="161:6">bs</name><operator pos:start="161:7" pos:end="161:8">-&gt;</operator><name pos:start="161:9" pos:end="161:11">drv</name></name> <operator pos:start="161:13" pos:end="161:13">=</operator> <name pos:start="161:15" pos:end="161:17">drv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:47"><expr pos:start="163:5" pos:end="163:46"><name pos:start="163:5" pos:end="163:14"><name pos:start="163:5" pos:end="163:6">bs</name><operator pos:start="163:7" pos:end="163:8">-&gt;</operator><name pos:start="163:9" pos:end="163:14">opaque</name></name> <operator pos:start="163:16" pos:end="163:16">=</operator> <call pos:start="163:18" pos:end="163:46"><name pos:start="163:18" pos:end="163:26">g_malloc0</name><argument_list pos:start="163:27" pos:end="163:46">(<argument pos:start="163:28" pos:end="163:45"><expr pos:start="163:28" pos:end="163:45"><name pos:start="163:28" pos:end="163:45"><name pos:start="163:28" pos:end="163:30">drv</name><operator pos:start="163:31" pos:end="163:32">-&gt;</operator><name pos:start="163:33" pos:end="163:45">instance_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="167:5" pos:end="167:34">/* Apply cache mode options */</comment>

    <expr_stmt pos:start="169:5" pos:end="169:53"><expr pos:start="169:5" pos:end="169:52"><call pos:start="169:5" pos:end="169:52"><name pos:start="169:5" pos:end="169:29">update_flags_from_options</name><argument_list pos:start="169:30" pos:end="169:52">(<argument pos:start="169:31" pos:end="169:45"><expr pos:start="169:31" pos:end="169:45"><operator pos:start="169:31" pos:end="169:31">&amp;</operator><name pos:start="169:32" pos:end="169:45"><name pos:start="169:32" pos:end="169:33">bs</name><operator pos:start="169:34" pos:end="169:35">-&gt;</operator><name pos:start="169:36" pos:end="169:45">open_flags</name></name></expr></argument>, <argument pos:start="169:48" pos:end="169:51"><expr pos:start="169:48" pos:end="169:51"><name pos:start="169:48" pos:end="169:51">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="173:5" pos:end="173:61">/* Open the image, either directly or using a protocol */</comment>

    <expr_stmt pos:start="175:5" pos:end="175:53"><expr pos:start="175:5" pos:end="175:52"><name pos:start="175:5" pos:end="175:14">open_flags</name> <operator pos:start="175:16" pos:end="175:16">=</operator> <call pos:start="175:18" pos:end="175:52"><name pos:start="175:18" pos:end="175:32">bdrv_open_flags</name><argument_list pos:start="175:33" pos:end="175:52">(<argument pos:start="175:34" pos:end="175:35"><expr pos:start="175:34" pos:end="175:35"><name pos:start="175:34" pos:end="175:35">bs</name></expr></argument>, <argument pos:start="175:38" pos:end="175:51"><expr pos:start="175:38" pos:end="175:51"><name pos:start="175:38" pos:end="175:51"><name pos:start="175:38" pos:end="175:39">bs</name><operator pos:start="175:40" pos:end="175:41">-&gt;</operator><name pos:start="175:42" pos:end="175:51">open_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="177:5" pos:end="203:5"><if pos:start="177:5" pos:end="185:5">if <condition pos:start="177:8" pos:end="177:28">(<expr pos:start="177:9" pos:end="177:27"><name pos:start="177:9" pos:end="177:27"><name pos:start="177:9" pos:end="177:11">drv</name><operator pos:start="177:12" pos:end="177:13">-&gt;</operator><name pos:start="177:14" pos:end="177:27">bdrv_file_open</name></name></expr>)</condition> <block pos:start="177:30" pos:end="185:5">{<block_content pos:start="179:9" pos:end="183:71">

        <expr_stmt pos:start="179:9" pos:end="179:29"><expr pos:start="179:9" pos:end="179:28"><call pos:start="179:9" pos:end="179:28"><name pos:start="179:9" pos:end="179:14">assert</name><argument_list pos:start="179:15" pos:end="179:28">(<argument pos:start="179:16" pos:end="179:27"><expr pos:start="179:16" pos:end="179:27"><name pos:start="179:16" pos:end="179:19">file</name> <operator pos:start="179:21" pos:end="179:22">==</operator> <name pos:start="179:24" pos:end="179:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:62"><expr pos:start="181:9" pos:end="181:61"><call pos:start="181:9" pos:end="181:61"><name pos:start="181:9" pos:end="181:14">assert</name><argument_list pos:start="181:15" pos:end="181:61">(<argument pos:start="181:16" pos:end="181:60"><expr pos:start="181:16" pos:end="181:60"><operator pos:start="181:16" pos:end="181:16">!</operator><name pos:start="181:17" pos:end="181:40"><name pos:start="181:17" pos:end="181:19">drv</name><operator pos:start="181:20" pos:end="181:21">-&gt;</operator><name pos:start="181:22" pos:end="181:40">bdrv_needs_filename</name></name> <operator pos:start="181:42" pos:end="181:43">||</operator> <name pos:start="181:45" pos:end="181:52">filename</name> <operator pos:start="181:54" pos:end="181:55">!=</operator> <name pos:start="181:57" pos:end="181:60">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:71"><expr pos:start="183:9" pos:end="183:70"><name pos:start="183:9" pos:end="183:11">ret</name> <operator pos:start="183:13" pos:end="183:13">=</operator> <call pos:start="183:15" pos:end="183:70"><name pos:start="183:15" pos:end="183:33"><name pos:start="183:15" pos:end="183:17">drv</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:33">bdrv_file_open</name></name><argument_list pos:start="183:34" pos:end="183:70">(<argument pos:start="183:35" pos:end="183:36"><expr pos:start="183:35" pos:end="183:36"><name pos:start="183:35" pos:end="183:36">bs</name></expr></argument>, <argument pos:start="183:39" pos:end="183:45"><expr pos:start="183:39" pos:end="183:45"><name pos:start="183:39" pos:end="183:45">options</name></expr></argument>, <argument pos:start="183:48" pos:end="183:57"><expr pos:start="183:48" pos:end="183:57"><name pos:start="183:48" pos:end="183:57">open_flags</name></expr></argument>, <argument pos:start="183:60" pos:end="183:69"><expr pos:start="183:60" pos:end="183:69"><operator pos:start="183:60" pos:end="183:60">&amp;</operator><name pos:start="183:61" pos:end="183:69">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="185:7" pos:end="203:5">else <block pos:start="185:12" pos:end="203:5">{<block_content pos:start="187:9" pos:end="201:66">

        <if_stmt pos:start="187:9" pos:end="197:9"><if pos:start="187:9" pos:end="197:9">if <condition pos:start="187:12" pos:end="187:25">(<expr pos:start="187:13" pos:end="187:24"><name pos:start="187:13" pos:end="187:16">file</name> <operator pos:start="187:18" pos:end="187:19">==</operator> <name pos:start="187:21" pos:end="187:24">NULL</name></expr>)</condition> <block pos:start="187:27" pos:end="197:9">{<block_content pos:start="189:13" pos:end="195:31">

            <expr_stmt pos:start="189:13" pos:end="191:59"><expr pos:start="189:13" pos:end="191:58"><call pos:start="189:13" pos:end="191:58"><name pos:start="189:13" pos:end="189:22">error_setg</name><argument_list pos:start="189:23" pos:end="191:58">(<argument pos:start="189:24" pos:end="189:27"><expr pos:start="189:24" pos:end="189:27"><name pos:start="189:24" pos:end="189:27">errp</name></expr></argument>, <argument pos:start="189:30" pos:end="191:39"><expr pos:start="189:30" pos:end="191:39"><literal type="string" pos:start="189:30" pos:end="189:72">"Can't use '%s' as a block driver for the "</literal>

                       <literal type="string" pos:start="191:24" pos:end="191:39">"protocol level"</literal></expr></argument>, <argument pos:start="191:42" pos:end="191:57"><expr pos:start="191:42" pos:end="191:57"><name pos:start="191:42" pos:end="191:57"><name pos:start="191:42" pos:end="191:44">drv</name><operator pos:start="191:45" pos:end="191:46">-&gt;</operator><name pos:start="191:47" pos:end="191:57">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:26"><expr pos:start="193:13" pos:end="193:25"><name pos:start="193:13" pos:end="193:15">ret</name> <operator pos:start="193:17" pos:end="193:17">=</operator> <operator pos:start="193:19" pos:end="193:19">-</operator><name pos:start="193:20" pos:end="193:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="195:13" pos:end="195:31">goto <name pos:start="195:18" pos:end="195:30">free_and_fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:24"><expr pos:start="199:9" pos:end="199:23"><name pos:start="199:9" pos:end="199:16"><name pos:start="199:9" pos:end="199:10">bs</name><operator pos:start="199:11" pos:end="199:12">-&gt;</operator><name pos:start="199:13" pos:end="199:16">file</name></name> <operator pos:start="199:18" pos:end="199:18">=</operator> <name pos:start="199:20" pos:end="199:23">file</name></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:66"><expr pos:start="201:9" pos:end="201:65"><name pos:start="201:9" pos:end="201:11">ret</name> <operator pos:start="201:13" pos:end="201:13">=</operator> <call pos:start="201:15" pos:end="201:65"><name pos:start="201:15" pos:end="201:28"><name pos:start="201:15" pos:end="201:17">drv</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:28">bdrv_open</name></name><argument_list pos:start="201:29" pos:end="201:65">(<argument pos:start="201:30" pos:end="201:31"><expr pos:start="201:30" pos:end="201:31"><name pos:start="201:30" pos:end="201:31">bs</name></expr></argument>, <argument pos:start="201:34" pos:end="201:40"><expr pos:start="201:34" pos:end="201:40"><name pos:start="201:34" pos:end="201:40">options</name></expr></argument>, <argument pos:start="201:43" pos:end="201:52"><expr pos:start="201:43" pos:end="201:52"><name pos:start="201:43" pos:end="201:52">open_flags</name></expr></argument>, <argument pos:start="201:55" pos:end="201:64"><expr pos:start="201:55" pos:end="201:64"><operator pos:start="201:55" pos:end="201:55">&amp;</operator><name pos:start="201:56" pos:end="201:64">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="207:5" pos:end="225:5"><if pos:start="207:5" pos:end="225:5">if <condition pos:start="207:8" pos:end="207:16">(<expr pos:start="207:9" pos:end="207:15"><name pos:start="207:9" pos:end="207:11">ret</name> <operator pos:start="207:13" pos:end="207:13">&lt;</operator> <literal type="number" pos:start="207:15" pos:end="207:15">0</literal></expr>)</condition> <block pos:start="207:18" pos:end="225:5">{<block_content pos:start="209:9" pos:end="223:27">

        <if_stmt pos:start="209:9" pos:end="221:9"><if pos:start="209:9" pos:end="213:9">if <condition pos:start="209:12" pos:end="209:22">(<expr pos:start="209:13" pos:end="209:21"><name pos:start="209:13" pos:end="209:21">local_err</name></expr>)</condition> <block pos:start="209:24" pos:end="213:9">{<block_content pos:start="211:13" pos:end="211:45">

            <expr_stmt pos:start="211:13" pos:end="211:45"><expr pos:start="211:13" pos:end="211:44"><call pos:start="211:13" pos:end="211:44"><name pos:start="211:13" pos:end="211:27">error_propagate</name><argument_list pos:start="211:28" pos:end="211:44">(<argument pos:start="211:29" pos:end="211:32"><expr pos:start="211:29" pos:end="211:32"><name pos:start="211:29" pos:end="211:32">errp</name></expr></argument>, <argument pos:start="211:35" pos:end="211:43"><expr pos:start="211:35" pos:end="211:43"><name pos:start="211:35" pos:end="211:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="213:11" pos:end="217:9">else if <condition pos:start="213:19" pos:end="213:35">(<expr pos:start="213:20" pos:end="213:34"><name pos:start="213:20" pos:end="213:34"><name pos:start="213:20" pos:end="213:21">bs</name><operator pos:start="213:22" pos:end="213:23">-&gt;</operator><name pos:start="213:24" pos:end="213:31">filename</name><index pos:start="213:32" pos:end="213:34">[<expr pos:start="213:33" pos:end="213:33"><literal type="number" pos:start="213:33" pos:end="213:33">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="213:37" pos:end="217:9">{<block_content pos:start="215:13" pos:end="215:78">

            <expr_stmt pos:start="215:13" pos:end="215:78"><expr pos:start="215:13" pos:end="215:77"><call pos:start="215:13" pos:end="215:77"><name pos:start="215:13" pos:end="215:28">error_setg_errno</name><argument_list pos:start="215:29" pos:end="215:77">(<argument pos:start="215:30" pos:end="215:33"><expr pos:start="215:30" pos:end="215:33"><name pos:start="215:30" pos:end="215:33">errp</name></expr></argument>, <argument pos:start="215:36" pos:end="215:39"><expr pos:start="215:36" pos:end="215:39"><operator pos:start="215:36" pos:end="215:36">-</operator><name pos:start="215:37" pos:end="215:39">ret</name></expr></argument>, <argument pos:start="215:42" pos:end="215:62"><expr pos:start="215:42" pos:end="215:62"><literal type="string" pos:start="215:42" pos:end="215:62">"Could not open '%s'"</literal></expr></argument>, <argument pos:start="215:65" pos:end="215:76"><expr pos:start="215:65" pos:end="215:76"><name pos:start="215:65" pos:end="215:76"><name pos:start="215:65" pos:end="215:66">bs</name><operator pos:start="215:67" pos:end="215:68">-&gt;</operator><name pos:start="215:69" pos:end="215:76">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="217:11" pos:end="221:9">else <block pos:start="217:16" pos:end="221:9">{<block_content pos:start="219:13" pos:end="219:65">

            <expr_stmt pos:start="219:13" pos:end="219:65"><expr pos:start="219:13" pos:end="219:64"><call pos:start="219:13" pos:end="219:64"><name pos:start="219:13" pos:end="219:28">error_setg_errno</name><argument_list pos:start="219:29" pos:end="219:64">(<argument pos:start="219:30" pos:end="219:33"><expr pos:start="219:30" pos:end="219:33"><name pos:start="219:30" pos:end="219:33">errp</name></expr></argument>, <argument pos:start="219:36" pos:end="219:39"><expr pos:start="219:36" pos:end="219:39"><operator pos:start="219:36" pos:end="219:36">-</operator><name pos:start="219:37" pos:end="219:39">ret</name></expr></argument>, <argument pos:start="219:42" pos:end="219:63"><expr pos:start="219:42" pos:end="219:63"><literal type="string" pos:start="219:42" pos:end="219:63">"Could not open image"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <goto pos:start="223:9" pos:end="223:27">goto <name pos:start="223:14" pos:end="223:26">free_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="229:5" pos:end="229:55"><expr pos:start="229:5" pos:end="229:54"><name pos:start="229:5" pos:end="229:7">ret</name> <operator pos:start="229:9" pos:end="229:9">=</operator> <call pos:start="229:11" pos:end="229:54"><name pos:start="229:11" pos:end="229:31">refresh_total_sectors</name><argument_list pos:start="229:32" pos:end="229:54">(<argument pos:start="229:33" pos:end="229:34"><expr pos:start="229:33" pos:end="229:34"><name pos:start="229:33" pos:end="229:34">bs</name></expr></argument>, <argument pos:start="229:37" pos:end="229:53"><expr pos:start="229:37" pos:end="229:53"><name pos:start="229:37" pos:end="229:53"><name pos:start="229:37" pos:end="229:38">bs</name><operator pos:start="229:39" pos:end="229:40">-&gt;</operator><name pos:start="229:41" pos:end="229:53">total_sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="231:5" pos:end="237:5"><if pos:start="231:5" pos:end="237:5">if <condition pos:start="231:8" pos:end="231:16">(<expr pos:start="231:9" pos:end="231:15"><name pos:start="231:9" pos:end="231:11">ret</name> <operator pos:start="231:13" pos:end="231:13">&lt;</operator> <literal type="number" pos:start="231:15" pos:end="231:15">0</literal></expr>)</condition> <block pos:start="231:18" pos:end="237:5">{<block_content pos:start="233:9" pos:end="235:27">

        <expr_stmt pos:start="233:9" pos:end="233:77"><expr pos:start="233:9" pos:end="233:76"><call pos:start="233:9" pos:end="233:76"><name pos:start="233:9" pos:end="233:24">error_setg_errno</name><argument_list pos:start="233:25" pos:end="233:76">(<argument pos:start="233:26" pos:end="233:29"><expr pos:start="233:26" pos:end="233:29"><name pos:start="233:26" pos:end="233:29">errp</name></expr></argument>, <argument pos:start="233:32" pos:end="233:35"><expr pos:start="233:32" pos:end="233:35"><operator pos:start="233:32" pos:end="233:32">-</operator><name pos:start="233:33" pos:end="233:35">ret</name></expr></argument>, <argument pos:start="233:38" pos:end="233:75"><expr pos:start="233:38" pos:end="233:75"><literal type="string" pos:start="233:38" pos:end="233:75">"Could not refresh total sector count"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="235:9" pos:end="235:27">goto <name pos:start="235:14" pos:end="235:26">free_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="241:5" pos:end="241:40"><expr pos:start="241:5" pos:end="241:39"><call pos:start="241:5" pos:end="241:39"><name pos:start="241:5" pos:end="241:23">bdrv_refresh_limits</name><argument_list pos:start="241:24" pos:end="241:39">(<argument pos:start="241:25" pos:end="241:26"><expr pos:start="241:25" pos:end="241:26"><name pos:start="241:25" pos:end="241:26">bs</name></expr></argument>, <argument pos:start="241:29" pos:end="241:38"><expr pos:start="241:29" pos:end="241:38"><operator pos:start="241:29" pos:end="241:29">&amp;</operator><name pos:start="241:30" pos:end="241:38">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="243:5" pos:end="251:5"><if pos:start="243:5" pos:end="251:5">if <condition pos:start="243:8" pos:end="243:18">(<expr pos:start="243:9" pos:end="243:17"><name pos:start="243:9" pos:end="243:17">local_err</name></expr>)</condition> <block pos:start="243:20" pos:end="251:5">{<block_content pos:start="245:9" pos:end="249:27">

        <expr_stmt pos:start="245:9" pos:end="245:41"><expr pos:start="245:9" pos:end="245:40"><call pos:start="245:9" pos:end="245:40"><name pos:start="245:9" pos:end="245:23">error_propagate</name><argument_list pos:start="245:24" pos:end="245:40">(<argument pos:start="245:25" pos:end="245:28"><expr pos:start="245:25" pos:end="245:28"><name pos:start="245:25" pos:end="245:28">errp</name></expr></argument>, <argument pos:start="245:31" pos:end="245:39"><expr pos:start="245:31" pos:end="245:39"><name pos:start="245:31" pos:end="245:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:22"><expr pos:start="247:9" pos:end="247:21"><name pos:start="247:9" pos:end="247:11">ret</name> <operator pos:start="247:13" pos:end="247:13">=</operator> <operator pos:start="247:15" pos:end="247:15">-</operator><name pos:start="247:16" pos:end="247:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="249:9" pos:end="249:27">goto <name pos:start="249:14" pos:end="249:26">free_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="255:5" pos:end="255:40"><expr pos:start="255:5" pos:end="255:39"><call pos:start="255:5" pos:end="255:39"><name pos:start="255:5" pos:end="255:10">assert</name><argument_list pos:start="255:11" pos:end="255:39">(<argument pos:start="255:12" pos:end="255:38"><expr pos:start="255:12" pos:end="255:38"><call pos:start="255:12" pos:end="255:33"><name pos:start="255:12" pos:end="255:29">bdrv_opt_mem_align</name><argument_list pos:start="255:30" pos:end="255:33">(<argument pos:start="255:31" pos:end="255:32"><expr pos:start="255:31" pos:end="255:32"><name pos:start="255:31" pos:end="255:32">bs</name></expr></argument>)</argument_list></call> <operator pos:start="255:35" pos:end="255:36">!=</operator> <literal type="number" pos:start="255:38" pos:end="255:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:40"><expr pos:start="257:5" pos:end="257:39"><call pos:start="257:5" pos:end="257:39"><name pos:start="257:5" pos:end="257:10">assert</name><argument_list pos:start="257:11" pos:end="257:39">(<argument pos:start="257:12" pos:end="257:38"><expr pos:start="257:12" pos:end="257:38"><call pos:start="257:12" pos:end="257:33"><name pos:start="257:12" pos:end="257:29">bdrv_min_mem_align</name><argument_list pos:start="257:30" pos:end="257:33">(<argument pos:start="257:31" pos:end="257:32"><expr pos:start="257:31" pos:end="257:32"><name pos:start="257:31" pos:end="257:32">bs</name></expr></argument>)</argument_list></call> <operator pos:start="257:35" pos:end="257:36">!=</operator> <literal type="number" pos:start="257:38" pos:end="257:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:67"><expr pos:start="259:5" pos:end="259:66"><call pos:start="259:5" pos:end="259:66"><name pos:start="259:5" pos:end="259:10">assert</name><argument_list pos:start="259:11" pos:end="259:66">(<argument pos:start="259:12" pos:end="259:65"><expr pos:start="259:12" pos:end="259:65"><call pos:start="259:12" pos:end="259:47"><name pos:start="259:12" pos:end="259:24">is_power_of_2</name><argument_list pos:start="259:25" pos:end="259:47">(<argument pos:start="259:26" pos:end="259:46"><expr pos:start="259:26" pos:end="259:46"><name pos:start="259:26" pos:end="259:46"><name pos:start="259:26" pos:end="259:27">bs</name><operator pos:start="259:28" pos:end="259:29">-&gt;</operator><name pos:start="259:30" pos:end="259:46">request_alignment</name></name></expr></argument>)</argument_list></call> <operator pos:start="259:49" pos:end="259:50">||</operator> <call pos:start="259:52" pos:end="259:65"><name pos:start="259:52" pos:end="259:61">bdrv_is_sg</name><argument_list pos:start="259:62" pos:end="259:65">(<argument pos:start="259:63" pos:end="259:64"><expr pos:start="259:63" pos:end="259:64"><name pos:start="259:63" pos:end="259:64">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="263:5" pos:end="263:24"><expr pos:start="263:5" pos:end="263:23"><call pos:start="263:5" pos:end="263:23"><name pos:start="263:5" pos:end="263:17">qemu_opts_del</name><argument_list pos:start="263:18" pos:end="263:23">(<argument pos:start="263:19" pos:end="263:22"><expr pos:start="263:19" pos:end="263:22"><name pos:start="263:19" pos:end="263:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="265:5" pos:end="265:13">return <expr pos:start="265:12" pos:end="265:12"><literal type="number" pos:start="265:12" pos:end="265:12">0</literal></expr>;</return>



<label pos:start="269:1" pos:end="269:14"><name pos:start="269:1" pos:end="269:13">free_and_fail</name>:</label>

    <expr_stmt pos:start="271:5" pos:end="271:20"><expr pos:start="271:5" pos:end="271:19"><name pos:start="271:5" pos:end="271:12"><name pos:start="271:5" pos:end="271:6">bs</name><operator pos:start="271:7" pos:end="271:8">-&gt;</operator><name pos:start="271:9" pos:end="271:12">file</name></name> <operator pos:start="271:14" pos:end="271:14">=</operator> <name pos:start="271:16" pos:end="271:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="273:5" pos:end="273:23"><expr pos:start="273:5" pos:end="273:22"><call pos:start="273:5" pos:end="273:22"><name pos:start="273:5" pos:end="273:10">g_free</name><argument_list pos:start="273:11" pos:end="273:22">(<argument pos:start="273:12" pos:end="273:21"><expr pos:start="273:12" pos:end="273:21"><name pos:start="273:12" pos:end="273:21"><name pos:start="273:12" pos:end="273:13">bs</name><operator pos:start="273:14" pos:end="273:15">-&gt;</operator><name pos:start="273:16" pos:end="273:21">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="275:5" pos:end="275:22"><expr pos:start="275:5" pos:end="275:21"><name pos:start="275:5" pos:end="275:14"><name pos:start="275:5" pos:end="275:6">bs</name><operator pos:start="275:7" pos:end="275:8">-&gt;</operator><name pos:start="275:9" pos:end="275:14">opaque</name></name> <operator pos:start="275:16" pos:end="275:16">=</operator> <name pos:start="275:18" pos:end="275:21">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="277:5" pos:end="277:19"><expr pos:start="277:5" pos:end="277:18"><name pos:start="277:5" pos:end="277:11"><name pos:start="277:5" pos:end="277:6">bs</name><operator pos:start="277:7" pos:end="277:8">-&gt;</operator><name pos:start="277:9" pos:end="277:11">drv</name></name> <operator pos:start="277:13" pos:end="277:13">=</operator> <name pos:start="277:15" pos:end="277:18">NULL</name></expr>;</expr_stmt>

<label pos:start="279:1" pos:end="279:10"><name pos:start="279:1" pos:end="279:9">fail_opts</name>:</label>

    <expr_stmt pos:start="281:5" pos:end="281:24"><expr pos:start="281:5" pos:end="281:23"><call pos:start="281:5" pos:end="281:23"><name pos:start="281:5" pos:end="281:17">qemu_opts_del</name><argument_list pos:start="281:18" pos:end="281:23">(<argument pos:start="281:19" pos:end="281:22"><expr pos:start="281:19" pos:end="281:22"><name pos:start="281:19" pos:end="281:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="283:5" pos:end="283:15">return <expr pos:start="283:12" pos:end="283:14"><name pos:start="283:12" pos:end="283:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
