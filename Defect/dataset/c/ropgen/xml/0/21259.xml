<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21259.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">v9fs_walk</name><parameter_list pos:start="1:22" pos:end="1:35">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:28"><name pos:start="1:23" pos:end="1:26">void</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:34">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:11">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">name_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">V9fsQID</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">qids</name> <init pos:start="7:19" pos:end="7:24">= <expr pos:start="7:21" pos:end="7:24"><name pos:start="7:21" pos:end="7:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">V9fsPath</name></type> <name pos:start="11:14" pos:end="11:18">dpath</name></decl>, <decl pos:start="11:21" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:21" pos:end="11:24">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint16_t</name></type> <name pos:start="13:14" pos:end="13:20">nwnames</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:15">stat</name></name></type> <name pos:start="15:17" pos:end="15:21">stbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">size_t</name></type> <name pos:start="17:12" pos:end="17:17">offset</name> <init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int32_t</name></type> <name pos:start="19:13" pos:end="19:15">fid</name></decl>, <decl pos:start="19:18" pos:end="19:23"><type ref="prev" pos:start="19:5" pos:end="19:11"/><name pos:start="19:18" pos:end="19:23">newfid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:30"><decl pos:start="21:5" pos:end="21:29"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:14">V9fsString</name> <modifier pos:start="21:16" pos:end="21:16">*</modifier></type><name pos:start="21:17" pos:end="21:22">wnames</name> <init pos:start="21:24" pos:end="21:29">= <expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:23"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:16">V9fsFidState</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:33"><decl pos:start="25:5" pos:end="25:32"><type pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:16">V9fsFidState</name> <modifier pos:start="25:18" pos:end="25:18">*</modifier></type><name pos:start="25:19" pos:end="25:25">newfidp</name> <init pos:start="25:27" pos:end="25:32">= <expr pos:start="25:29" pos:end="25:32"><name pos:start="25:29" pos:end="25:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:26"><decl pos:start="27:5" pos:end="27:25"><type pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:11">V9fsPDU</name> <modifier pos:start="27:13" pos:end="27:13">*</modifier></type><name pos:start="27:14" pos:end="27:16">pdu</name> <init pos:start="27:18" pos:end="27:25">= <expr pos:start="27:20" pos:end="27:25"><name pos:start="27:20" pos:end="27:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:26"><decl pos:start="29:5" pos:end="29:25"><type pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:13">V9fsState</name> <modifier pos:start="29:15" pos:end="29:15">*</modifier></type><name pos:start="29:16" pos:end="29:16">s</name> <init pos:start="29:18" pos:end="29:25">= <expr pos:start="29:20" pos:end="29:25"><name pos:start="29:20" pos:end="29:25"><name pos:start="29:20" pos:end="29:22">pdu</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:25">s</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:47"><expr pos:start="33:5" pos:end="35:46"><name pos:start="33:5" pos:end="33:10">offset</name> <operator pos:start="33:12" pos:end="33:13">+=</operator> <call pos:start="33:15" pos:end="35:46"><name pos:start="33:15" pos:end="33:27">pdu_unmarshal</name><argument_list pos:start="33:28" pos:end="35:46">(<argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><name pos:start="33:29" pos:end="33:31">pdu</name></expr></argument>, <argument pos:start="33:34" pos:end="33:39"><expr pos:start="33:34" pos:end="33:39"><name pos:start="33:34" pos:end="33:39">offset</name></expr></argument>, <argument pos:start="33:42" pos:end="33:46"><expr pos:start="33:42" pos:end="33:46"><literal type="string" pos:start="33:42" pos:end="33:46">"ddw"</literal></expr></argument>, <argument pos:start="33:49" pos:end="33:52"><expr pos:start="33:49" pos:end="33:52"><operator pos:start="33:49" pos:end="33:49">&amp;</operator><name pos:start="33:50" pos:end="33:52">fid</name></expr></argument>,

                            <argument pos:start="35:29" pos:end="35:35"><expr pos:start="35:29" pos:end="35:35"><operator pos:start="35:29" pos:end="35:29">&amp;</operator><name pos:start="35:30" pos:end="35:35">newfid</name></expr></argument>, <argument pos:start="35:38" pos:end="35:45"><expr pos:start="35:38" pos:end="35:45"><operator pos:start="35:38" pos:end="35:38">&amp;</operator><name pos:start="35:39" pos:end="35:45">nwnames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:61"><expr pos:start="39:5" pos:end="39:60"><call pos:start="39:5" pos:end="39:60"><name pos:start="39:5" pos:end="39:19">trace_v9fs_walk</name><argument_list pos:start="39:20" pos:end="39:60">(<argument pos:start="39:21" pos:end="39:28"><expr pos:start="39:21" pos:end="39:28"><name pos:start="39:21" pos:end="39:28"><name pos:start="39:21" pos:end="39:23">pdu</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:28">tag</name></name></expr></argument>, <argument pos:start="39:31" pos:end="39:37"><expr pos:start="39:31" pos:end="39:37"><name pos:start="39:31" pos:end="39:37"><name pos:start="39:31" pos:end="39:33">pdu</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:37">id</name></name></expr></argument>, <argument pos:start="39:40" pos:end="39:42"><expr pos:start="39:40" pos:end="39:42"><name pos:start="39:40" pos:end="39:42">fid</name></expr></argument>, <argument pos:start="39:45" pos:end="39:50"><expr pos:start="39:45" pos:end="39:50"><name pos:start="39:45" pos:end="39:50">newfid</name></expr></argument>, <argument pos:start="39:53" pos:end="39:59"><expr pos:start="39:53" pos:end="39:59"><name pos:start="39:53" pos:end="39:59">nwnames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="61:5"><if pos:start="43:5" pos:end="55:5">if <condition pos:start="43:8" pos:end="43:42">(<expr pos:start="43:9" pos:end="43:41"><name pos:start="43:9" pos:end="43:15">nwnames</name> <operator pos:start="43:17" pos:end="43:18">&amp;&amp;</operator> <name pos:start="43:20" pos:end="43:26">nwnames</name> <operator pos:start="43:28" pos:end="43:29">&lt;=</operator> <name pos:start="43:31" pos:end="43:41">P9_MAXWELEM</name></expr>)</condition> <block pos:start="43:44" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:9">

        <expr_stmt pos:start="45:9" pos:end="45:56"><expr pos:start="45:9" pos:end="45:55"><name pos:start="45:9" pos:end="45:14">wnames</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:55"><name pos:start="45:18" pos:end="45:26">g_malloc0</name><argument_list pos:start="45:27" pos:end="45:55">(<argument pos:start="45:28" pos:end="45:54"><expr pos:start="45:28" pos:end="45:54"><sizeof pos:start="45:28" pos:end="45:44">sizeof<argument_list pos:start="45:34" pos:end="45:44">(<argument pos:start="45:35" pos:end="45:43"><expr pos:start="45:35" pos:end="45:43"><name pos:start="45:35" pos:end="45:43"><name pos:start="45:35" pos:end="45:40">wnames</name><index pos:start="45:41" pos:end="45:43">[<expr pos:start="45:42" pos:end="45:42"><literal type="number" pos:start="45:42" pos:end="45:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="45:46" pos:end="45:46">*</operator> <name pos:start="45:48" pos:end="45:54">nwnames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:54"><expr pos:start="47:9" pos:end="47:53"><name pos:start="47:9" pos:end="47:12">qids</name>   <operator pos:start="47:16" pos:end="47:16">=</operator> <call pos:start="47:18" pos:end="47:53"><name pos:start="47:18" pos:end="47:26">g_malloc0</name><argument_list pos:start="47:27" pos:end="47:53">(<argument pos:start="47:28" pos:end="47:52"><expr pos:start="47:28" pos:end="47:52"><sizeof pos:start="47:28" pos:end="47:42">sizeof<argument_list pos:start="47:34" pos:end="47:42">(<argument pos:start="47:35" pos:end="47:41"><expr pos:start="47:35" pos:end="47:41"><name pos:start="47:35" pos:end="47:41"><name pos:start="47:35" pos:end="47:38">qids</name><index pos:start="47:39" pos:end="47:41">[<expr pos:start="47:40" pos:end="47:40"><literal type="number" pos:start="47:40" pos:end="47:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="47:44" pos:end="47:44">*</operator> <name pos:start="47:46" pos:end="47:52">nwnames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="49:9" pos:end="53:9">for <control pos:start="49:13" pos:end="49:37">(<init pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:14">i</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</init> <condition pos:start="49:21" pos:end="49:32"><expr pos:start="49:21" pos:end="49:31"><name pos:start="49:21" pos:end="49:21">i</name> <operator pos:start="49:23" pos:end="49:23">&lt;</operator> <name pos:start="49:25" pos:end="49:31">nwnames</name></expr>;</condition> <incr pos:start="49:34" pos:end="49:36"><expr pos:start="49:34" pos:end="49:36"><name pos:start="49:34" pos:end="49:34">i</name><operator pos:start="49:35" pos:end="49:36">++</operator></expr></incr>)</control> <block pos:start="49:39" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:66">

            <expr_stmt pos:start="51:13" pos:end="51:66"><expr pos:start="51:13" pos:end="51:65"><name pos:start="51:13" pos:end="51:18">offset</name> <operator pos:start="51:20" pos:end="51:21">+=</operator> <call pos:start="51:23" pos:end="51:65"><name pos:start="51:23" pos:end="51:35">pdu_unmarshal</name><argument_list pos:start="51:36" pos:end="51:65">(<argument pos:start="51:37" pos:end="51:39"><expr pos:start="51:37" pos:end="51:39"><name pos:start="51:37" pos:end="51:39">pdu</name></expr></argument>, <argument pos:start="51:42" pos:end="51:47"><expr pos:start="51:42" pos:end="51:47"><name pos:start="51:42" pos:end="51:47">offset</name></expr></argument>, <argument pos:start="51:50" pos:end="51:52"><expr pos:start="51:50" pos:end="51:52"><literal type="string" pos:start="51:50" pos:end="51:52">"s"</literal></expr></argument>, <argument pos:start="51:55" pos:end="51:64"><expr pos:start="51:55" pos:end="51:64"><operator pos:start="51:55" pos:end="51:55">&amp;</operator><name pos:start="51:56" pos:end="51:64"><name pos:start="51:56" pos:end="51:61">wnames</name><index pos:start="51:62" pos:end="51:64">[<expr pos:start="51:63" pos:end="51:63"><name pos:start="51:63" pos:end="51:63">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="55:7" pos:end="61:5">else if <condition pos:start="55:15" pos:end="55:37">(<expr pos:start="55:16" pos:end="55:36"><name pos:start="55:16" pos:end="55:22">nwnames</name> <operator pos:start="55:24" pos:end="55:24">&gt;</operator> <name pos:start="55:26" pos:end="55:36">P9_MAXWELEM</name></expr>)</condition> <block pos:start="55:39" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:23">

        <expr_stmt pos:start="57:9" pos:end="57:22"><expr pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:11">err</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <operator pos:start="57:15" pos:end="57:15">-</operator><name pos:start="57:16" pos:end="57:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:23">goto <name pos:start="59:14" pos:end="59:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:29"><expr pos:start="63:5" pos:end="63:28"><name pos:start="63:5" pos:end="63:8">fidp</name> <operator pos:start="63:10" pos:end="63:10">=</operator> <call pos:start="63:12" pos:end="63:28"><name pos:start="63:12" pos:end="63:18">get_fid</name><argument_list pos:start="63:19" pos:end="63:28">(<argument pos:start="63:20" pos:end="63:22"><expr pos:start="63:20" pos:end="63:22"><name pos:start="63:20" pos:end="63:22">pdu</name></expr></argument>, <argument pos:start="63:25" pos:end="63:27"><expr pos:start="63:25" pos:end="63:27"><name pos:start="63:25" pos:end="63:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:21">(<expr pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:12">fidp</name> <operator pos:start="65:14" pos:end="65:15">==</operator> <name pos:start="65:17" pos:end="65:20">NULL</name></expr>)</condition> <block pos:start="65:23" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:23">

        <expr_stmt pos:start="67:9" pos:end="67:22"><expr pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:11">err</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <operator pos:start="67:15" pos:end="67:15">-</operator><name pos:start="67:16" pos:end="67:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:23">goto <name pos:start="69:14" pos:end="69:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:27"><expr pos:start="73:5" pos:end="73:26"><call pos:start="73:5" pos:end="73:26"><name pos:start="73:5" pos:end="73:18">v9fs_path_init</name><argument_list pos:start="73:19" pos:end="73:26">(<argument pos:start="73:20" pos:end="73:25"><expr pos:start="73:20" pos:end="73:25"><operator pos:start="73:20" pos:end="73:20">&amp;</operator><name pos:start="73:21" pos:end="73:25">dpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:26"><expr pos:start="75:5" pos:end="75:25"><call pos:start="75:5" pos:end="75:25"><name pos:start="75:5" pos:end="75:18">v9fs_path_init</name><argument_list pos:start="75:19" pos:end="75:25">(<argument pos:start="75:20" pos:end="75:24"><expr pos:start="75:20" pos:end="75:24"><operator pos:start="75:20" pos:end="75:20">&amp;</operator><name pos:start="75:21" pos:end="75:24">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="77:5" pos:end="83:7">/*

     * Both dpath and path initially poin to fidp.

     * Needed to handle request with nwnames == 0

     */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:40"><expr pos:start="85:5" pos:end="85:39"><call pos:start="85:5" pos:end="85:39"><name pos:start="85:5" pos:end="85:18">v9fs_path_copy</name><argument_list pos:start="85:19" pos:end="85:39">(<argument pos:start="85:20" pos:end="85:25"><expr pos:start="85:20" pos:end="85:25"><operator pos:start="85:20" pos:end="85:20">&amp;</operator><name pos:start="85:21" pos:end="85:25">dpath</name></expr></argument>, <argument pos:start="85:28" pos:end="85:38"><expr pos:start="85:28" pos:end="85:38"><operator pos:start="85:28" pos:end="85:28">&amp;</operator><name pos:start="85:29" pos:end="85:38"><name pos:start="85:29" pos:end="85:32">fidp</name><operator pos:start="85:33" pos:end="85:34">-&gt;</operator><name pos:start="85:35" pos:end="85:38">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:39"><expr pos:start="87:5" pos:end="87:38"><call pos:start="87:5" pos:end="87:38"><name pos:start="87:5" pos:end="87:18">v9fs_path_copy</name><argument_list pos:start="87:19" pos:end="87:38">(<argument pos:start="87:20" pos:end="87:24"><expr pos:start="87:20" pos:end="87:24"><operator pos:start="87:20" pos:end="87:20">&amp;</operator><name pos:start="87:21" pos:end="87:24">path</name></expr></argument>, <argument pos:start="87:27" pos:end="87:37"><expr pos:start="87:27" pos:end="87:37"><operator pos:start="87:27" pos:end="87:27">&amp;</operator><name pos:start="87:28" pos:end="87:37"><name pos:start="87:28" pos:end="87:31">fidp</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:37">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="89:5" pos:end="111:5">for <control pos:start="89:9" pos:end="89:54">(<init pos:start="89:10" pos:end="89:22"><expr pos:start="89:10" pos:end="89:21"><name pos:start="89:10" pos:end="89:17">name_idx</name> <operator pos:start="89:19" pos:end="89:19">=</operator> <literal type="number" pos:start="89:21" pos:end="89:21">0</literal></expr>;</init> <condition pos:start="89:24" pos:end="89:42"><expr pos:start="89:24" pos:end="89:41"><name pos:start="89:24" pos:end="89:31">name_idx</name> <operator pos:start="89:33" pos:end="89:33">&lt;</operator> <name pos:start="89:35" pos:end="89:41">nwnames</name></expr>;</condition> <incr pos:start="89:44" pos:end="89:53"><expr pos:start="89:44" pos:end="89:53"><name pos:start="89:44" pos:end="89:51">name_idx</name><operator pos:start="89:52" pos:end="89:53">++</operator></expr></incr>)</control> <block pos:start="89:56" pos:end="111:5">{<block_content pos:start="91:9" pos:end="109:38">

        <expr_stmt pos:start="91:9" pos:end="91:78"><expr pos:start="91:9" pos:end="91:77"><name pos:start="91:9" pos:end="91:11">err</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="91:77"><name pos:start="91:15" pos:end="91:34">v9fs_co_name_to_path</name><argument_list pos:start="91:35" pos:end="91:77">(<argument pos:start="91:36" pos:end="91:38"><expr pos:start="91:36" pos:end="91:38"><name pos:start="91:36" pos:end="91:38">pdu</name></expr></argument>, <argument pos:start="91:41" pos:end="91:46"><expr pos:start="91:41" pos:end="91:46"><operator pos:start="91:41" pos:end="91:41">&amp;</operator><name pos:start="91:42" pos:end="91:46">dpath</name></expr></argument>, <argument pos:start="91:49" pos:end="91:69"><expr pos:start="91:49" pos:end="91:69"><name pos:start="91:49" pos:end="91:64"><name pos:start="91:49" pos:end="91:54">wnames</name><index pos:start="91:55" pos:end="91:64">[<expr pos:start="91:56" pos:end="91:63"><name pos:start="91:56" pos:end="91:63">name_idx</name></expr>]</index></name><operator pos:start="91:65" pos:end="91:65">.</operator><name pos:start="91:66" pos:end="91:69">data</name></expr></argument>, <argument pos:start="91:72" pos:end="91:76"><expr pos:start="91:72" pos:end="91:76"><operator pos:start="91:72" pos:end="91:72">&amp;</operator><name pos:start="91:73" pos:end="91:76">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="97:9"><if pos:start="93:9" pos:end="97:9">if <condition pos:start="93:12" pos:end="93:20">(<expr pos:start="93:13" pos:end="93:19"><name pos:start="93:13" pos:end="93:15">err</name> <operator pos:start="93:17" pos:end="93:17">&lt;</operator> <literal type="number" pos:start="93:19" pos:end="93:19">0</literal></expr>)</condition> <block pos:start="93:22" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:21">

            <goto pos:start="95:13" pos:end="95:21">goto <name pos:start="95:18" pos:end="95:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:48"><expr pos:start="99:9" pos:end="99:47"><name pos:start="99:9" pos:end="99:11">err</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <call pos:start="99:15" pos:end="99:47"><name pos:start="99:15" pos:end="99:27">v9fs_co_lstat</name><argument_list pos:start="99:28" pos:end="99:47">(<argument pos:start="99:29" pos:end="99:31"><expr pos:start="99:29" pos:end="99:31"><name pos:start="99:29" pos:end="99:31">pdu</name></expr></argument>, <argument pos:start="99:34" pos:end="99:38"><expr pos:start="99:34" pos:end="99:38"><operator pos:start="99:34" pos:end="99:34">&amp;</operator><name pos:start="99:35" pos:end="99:38">path</name></expr></argument>, <argument pos:start="99:41" pos:end="99:46"><expr pos:start="99:41" pos:end="99:46"><operator pos:start="99:41" pos:end="99:41">&amp;</operator><name pos:start="99:42" pos:end="99:46">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="105:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:20">(<expr pos:start="101:13" pos:end="101:19"><name pos:start="101:13" pos:end="101:15">err</name> <operator pos:start="101:17" pos:end="101:17">&lt;</operator> <literal type="number" pos:start="101:19" pos:end="101:19">0</literal></expr>)</condition> <block pos:start="101:22" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:21">

            <goto pos:start="103:13" pos:end="103:21">goto <name pos:start="103:18" pos:end="103:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:45"><expr pos:start="107:9" pos:end="107:44"><call pos:start="107:9" pos:end="107:44"><name pos:start="107:9" pos:end="107:19">stat_to_qid</name><argument_list pos:start="107:20" pos:end="107:44">(<argument pos:start="107:21" pos:end="107:26"><expr pos:start="107:21" pos:end="107:26"><operator pos:start="107:21" pos:end="107:21">&amp;</operator><name pos:start="107:22" pos:end="107:26">stbuf</name></expr></argument>, <argument pos:start="107:29" pos:end="107:43"><expr pos:start="107:29" pos:end="107:43"><operator pos:start="107:29" pos:end="107:29">&amp;</operator><name pos:start="107:30" pos:end="107:43"><name pos:start="107:30" pos:end="107:33">qids</name><index pos:start="107:34" pos:end="107:43">[<expr pos:start="107:35" pos:end="107:42"><name pos:start="107:35" pos:end="107:42">name_idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:38"><expr pos:start="109:9" pos:end="109:37"><call pos:start="109:9" pos:end="109:37"><name pos:start="109:9" pos:end="109:22">v9fs_path_copy</name><argument_list pos:start="109:23" pos:end="109:37">(<argument pos:start="109:24" pos:end="109:29"><expr pos:start="109:24" pos:end="109:29"><operator pos:start="109:24" pos:end="109:24">&amp;</operator><name pos:start="109:25" pos:end="109:29">dpath</name></expr></argument>, <argument pos:start="109:32" pos:end="109:36"><expr pos:start="109:32" pos:end="109:36"><operator pos:start="109:32" pos:end="109:32">&amp;</operator><name pos:start="109:33" pos:end="109:36">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="113:5" pos:end="135:5"><if pos:start="113:5" pos:end="119:5">if <condition pos:start="113:8" pos:end="113:22">(<expr pos:start="113:9" pos:end="113:21"><name pos:start="113:9" pos:end="113:11">fid</name> <operator pos:start="113:13" pos:end="113:14">==</operator> <name pos:start="113:16" pos:end="113:21">newfid</name></expr>)</condition> <block pos:start="113:24" pos:end="119:5">{<block_content pos:start="115:9" pos:end="117:43">

        <expr_stmt pos:start="115:9" pos:end="115:46"><expr pos:start="115:9" pos:end="115:45"><call pos:start="115:9" pos:end="115:45"><name pos:start="115:9" pos:end="115:14">BUG_ON</name><argument_list pos:start="115:15" pos:end="115:45">(<argument pos:start="115:16" pos:end="115:44"><expr pos:start="115:16" pos:end="115:44"><name pos:start="115:16" pos:end="115:29"><name pos:start="115:16" pos:end="115:19">fidp</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:29">fid_type</name></name> <operator pos:start="115:31" pos:end="115:32">!=</operator> <name pos:start="115:34" pos:end="115:44">P9_FID_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:43"><expr pos:start="117:9" pos:end="117:42"><call pos:start="117:9" pos:end="117:42"><name pos:start="117:9" pos:end="117:22">v9fs_path_copy</name><argument_list pos:start="117:23" pos:end="117:42">(<argument pos:start="117:24" pos:end="117:34"><expr pos:start="117:24" pos:end="117:34"><operator pos:start="117:24" pos:end="117:24">&amp;</operator><name pos:start="117:25" pos:end="117:34"><name pos:start="117:25" pos:end="117:28">fidp</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:34">path</name></name></expr></argument>, <argument pos:start="117:37" pos:end="117:41"><expr pos:start="117:37" pos:end="117:41"><operator pos:start="117:37" pos:end="117:37">&amp;</operator><name pos:start="117:38" pos:end="117:41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="119:7" pos:end="135:5">else <block pos:start="119:12" pos:end="135:5">{<block_content pos:start="121:9" pos:end="133:46">

        <expr_stmt pos:start="121:9" pos:end="121:39"><expr pos:start="121:9" pos:end="121:38"><name pos:start="121:9" pos:end="121:15">newfidp</name> <operator pos:start="121:17" pos:end="121:17">=</operator> <call pos:start="121:19" pos:end="121:38"><name pos:start="121:19" pos:end="121:27">alloc_fid</name><argument_list pos:start="121:28" pos:end="121:38">(<argument pos:start="121:29" pos:end="121:29"><expr pos:start="121:29" pos:end="121:29"><name pos:start="121:29" pos:end="121:29">s</name></expr></argument>, <argument pos:start="121:32" pos:end="121:37"><expr pos:start="121:32" pos:end="121:37"><name pos:start="121:32" pos:end="121:37">newfid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:28">(<expr pos:start="123:13" pos:end="123:27"><name pos:start="123:13" pos:end="123:19">newfidp</name> <operator pos:start="123:21" pos:end="123:22">==</operator> <name pos:start="123:24" pos:end="123:27">NULL</name></expr>)</condition> <block pos:start="123:30" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:21">

            <expr_stmt pos:start="125:13" pos:end="125:26"><expr pos:start="125:13" pos:end="125:25"><name pos:start="125:13" pos:end="125:15">err</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <operator pos:start="125:19" pos:end="125:19">-</operator><name pos:start="125:20" pos:end="125:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="127:13" pos:end="127:21">goto <name pos:start="127:18" pos:end="127:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:33"><expr pos:start="131:9" pos:end="131:32"><name pos:start="131:9" pos:end="131:20"><name pos:start="131:9" pos:end="131:15">newfidp</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:20">uid</name></name> <operator pos:start="131:22" pos:end="131:22">=</operator> <name pos:start="131:24" pos:end="131:32"><name pos:start="131:24" pos:end="131:27">fidp</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:32">uid</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:46"><expr pos:start="133:9" pos:end="133:45"><call pos:start="133:9" pos:end="133:45"><name pos:start="133:9" pos:end="133:22">v9fs_path_copy</name><argument_list pos:start="133:23" pos:end="133:45">(<argument pos:start="133:24" pos:end="133:37"><expr pos:start="133:24" pos:end="133:37"><operator pos:start="133:24" pos:end="133:24">&amp;</operator><name pos:start="133:25" pos:end="133:37"><name pos:start="133:25" pos:end="133:31">newfidp</name><operator pos:start="133:32" pos:end="133:33">-&gt;</operator><name pos:start="133:34" pos:end="133:37">path</name></name></expr></argument>, <argument pos:start="133:40" pos:end="133:44"><expr pos:start="133:40" pos:end="133:44"><operator pos:start="133:40" pos:end="133:40">&amp;</operator><name pos:start="133:41" pos:end="133:44">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:48"><expr pos:start="137:5" pos:end="137:47"><name pos:start="137:5" pos:end="137:7">err</name> <operator pos:start="137:9" pos:end="137:9">=</operator> <call pos:start="137:11" pos:end="137:47"><name pos:start="137:11" pos:end="137:27">v9fs_walk_marshal</name><argument_list pos:start="137:28" pos:end="137:47">(<argument pos:start="137:29" pos:end="137:31"><expr pos:start="137:29" pos:end="137:31"><name pos:start="137:29" pos:end="137:31">pdu</name></expr></argument>, <argument pos:start="137:34" pos:end="137:40"><expr pos:start="137:34" pos:end="137:40"><name pos:start="137:34" pos:end="137:40">nwnames</name></expr></argument>, <argument pos:start="137:43" pos:end="137:46"><expr pos:start="137:43" pos:end="137:46"><name pos:start="137:43" pos:end="137:46">qids</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:61"><expr pos:start="139:5" pos:end="139:60"><call pos:start="139:5" pos:end="139:60"><name pos:start="139:5" pos:end="139:26">trace_v9fs_walk_return</name><argument_list pos:start="139:27" pos:end="139:60">(<argument pos:start="139:28" pos:end="139:35"><expr pos:start="139:28" pos:end="139:35"><name pos:start="139:28" pos:end="139:35"><name pos:start="139:28" pos:end="139:30">pdu</name><operator pos:start="139:31" pos:end="139:32">-&gt;</operator><name pos:start="139:33" pos:end="139:35">tag</name></name></expr></argument>, <argument pos:start="139:38" pos:end="139:44"><expr pos:start="139:38" pos:end="139:44"><name pos:start="139:38" pos:end="139:44"><name pos:start="139:38" pos:end="139:40">pdu</name><operator pos:start="139:41" pos:end="139:42">-&gt;</operator><name pos:start="139:43" pos:end="139:44">id</name></name></expr></argument>, <argument pos:start="139:47" pos:end="139:53"><expr pos:start="139:47" pos:end="139:53"><name pos:start="139:47" pos:end="139:53">nwnames</name></expr></argument>, <argument pos:start="139:56" pos:end="139:59"><expr pos:start="139:56" pos:end="139:59"><name pos:start="139:56" pos:end="139:59">qids</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="141:1" pos:end="141:4"><name pos:start="141:1" pos:end="141:3">out</name>:</label>

    <expr_stmt pos:start="143:5" pos:end="143:23"><expr pos:start="143:5" pos:end="143:22"><call pos:start="143:5" pos:end="143:22"><name pos:start="143:5" pos:end="143:11">put_fid</name><argument_list pos:start="143:12" pos:end="143:22">(<argument pos:start="143:13" pos:end="143:15"><expr pos:start="143:13" pos:end="143:15"><name pos:start="143:13" pos:end="143:15">pdu</name></expr></argument>, <argument pos:start="143:18" pos:end="143:21"><expr pos:start="143:18" pos:end="143:21"><name pos:start="143:18" pos:end="143:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="149:5"><if pos:start="145:5" pos:end="149:5">if <condition pos:start="145:8" pos:end="145:16">(<expr pos:start="145:9" pos:end="145:15"><name pos:start="145:9" pos:end="145:15">newfidp</name></expr>)</condition> <block pos:start="145:18" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:30">

        <expr_stmt pos:start="147:9" pos:end="147:30"><expr pos:start="147:9" pos:end="147:29"><call pos:start="147:9" pos:end="147:29"><name pos:start="147:9" pos:end="147:15">put_fid</name><argument_list pos:start="147:16" pos:end="147:29">(<argument pos:start="147:17" pos:end="147:19"><expr pos:start="147:17" pos:end="147:19"><name pos:start="147:17" pos:end="147:19">pdu</name></expr></argument>, <argument pos:start="147:22" pos:end="147:28"><expr pos:start="147:22" pos:end="147:28"><name pos:start="147:22" pos:end="147:28">newfidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:27"><expr pos:start="151:5" pos:end="151:26"><call pos:start="151:5" pos:end="151:26"><name pos:start="151:5" pos:end="151:18">v9fs_path_free</name><argument_list pos:start="151:19" pos:end="151:26">(<argument pos:start="151:20" pos:end="151:25"><expr pos:start="151:20" pos:end="151:25"><operator pos:start="151:20" pos:end="151:20">&amp;</operator><name pos:start="151:21" pos:end="151:25">dpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:26"><expr pos:start="153:5" pos:end="153:25"><call pos:start="153:5" pos:end="153:25"><name pos:start="153:5" pos:end="153:18">v9fs_path_free</name><argument_list pos:start="153:19" pos:end="153:25">(<argument pos:start="153:20" pos:end="153:24"><expr pos:start="153:20" pos:end="153:24"><operator pos:start="153:20" pos:end="153:20">&amp;</operator><name pos:start="153:21" pos:end="153:24">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="155:1" pos:end="155:10"><name pos:start="155:1" pos:end="155:9">out_nofid</name>:</label>

    <expr_stmt pos:start="157:5" pos:end="157:30"><expr pos:start="157:5" pos:end="157:29"><call pos:start="157:5" pos:end="157:29"><name pos:start="157:5" pos:end="157:16">complete_pdu</name><argument_list pos:start="157:17" pos:end="157:29">(<argument pos:start="157:18" pos:end="157:18"><expr pos:start="157:18" pos:end="157:18"><name pos:start="157:18" pos:end="157:18">s</name></expr></argument>, <argument pos:start="157:21" pos:end="157:23"><expr pos:start="157:21" pos:end="157:23"><name pos:start="157:21" pos:end="157:23">pdu</name></expr></argument>, <argument pos:start="157:26" pos:end="157:28"><expr pos:start="157:26" pos:end="157:28"><name pos:start="157:26" pos:end="157:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="159:5" pos:end="171:5"><if pos:start="159:5" pos:end="171:5">if <condition pos:start="159:8" pos:end="159:42">(<expr pos:start="159:9" pos:end="159:41"><name pos:start="159:9" pos:end="159:15">nwnames</name> <operator pos:start="159:17" pos:end="159:18">&amp;&amp;</operator> <name pos:start="159:20" pos:end="159:26">nwnames</name> <operator pos:start="159:28" pos:end="159:29">&lt;=</operator> <name pos:start="159:31" pos:end="159:41">P9_MAXWELEM</name></expr>)</condition> <block pos:start="159:44" pos:end="171:5">{<block_content pos:start="161:9" pos:end="169:21">

        <for pos:start="161:9" pos:end="165:9">for <control pos:start="161:13" pos:end="161:58">(<init pos:start="161:14" pos:end="161:26"><expr pos:start="161:14" pos:end="161:25"><name pos:start="161:14" pos:end="161:21">name_idx</name> <operator pos:start="161:23" pos:end="161:23">=</operator> <literal type="number" pos:start="161:25" pos:end="161:25">0</literal></expr>;</init> <condition pos:start="161:28" pos:end="161:46"><expr pos:start="161:28" pos:end="161:45"><name pos:start="161:28" pos:end="161:35">name_idx</name> <operator pos:start="161:37" pos:end="161:37">&lt;</operator> <name pos:start="161:39" pos:end="161:45">nwnames</name></expr>;</condition> <incr pos:start="161:48" pos:end="161:57"><expr pos:start="161:48" pos:end="161:57"><name pos:start="161:48" pos:end="161:55">name_idx</name><operator pos:start="161:56" pos:end="161:57">++</operator></expr></incr>)</control> <block pos:start="161:60" pos:end="165:9">{<block_content pos:start="163:13" pos:end="163:48">

            <expr_stmt pos:start="163:13" pos:end="163:48"><expr pos:start="163:13" pos:end="163:47"><call pos:start="163:13" pos:end="163:47"><name pos:start="163:13" pos:end="163:28">v9fs_string_free</name><argument_list pos:start="163:29" pos:end="163:47">(<argument pos:start="163:30" pos:end="163:46"><expr pos:start="163:30" pos:end="163:46"><operator pos:start="163:30" pos:end="163:30">&amp;</operator><name pos:start="163:31" pos:end="163:46"><name pos:start="163:31" pos:end="163:36">wnames</name><index pos:start="163:37" pos:end="163:46">[<expr pos:start="163:38" pos:end="163:45"><name pos:start="163:38" pos:end="163:45">name_idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="167:9" pos:end="167:23"><expr pos:start="167:9" pos:end="167:22"><call pos:start="167:9" pos:end="167:22"><name pos:start="167:9" pos:end="167:14">g_free</name><argument_list pos:start="167:15" pos:end="167:22">(<argument pos:start="167:16" pos:end="167:21"><expr pos:start="167:16" pos:end="167:21"><name pos:start="167:16" pos:end="167:21">wnames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:21"><expr pos:start="169:9" pos:end="169:20"><call pos:start="169:9" pos:end="169:20"><name pos:start="169:9" pos:end="169:14">g_free</name><argument_list pos:start="169:15" pos:end="169:20">(<argument pos:start="169:16" pos:end="169:19"><expr pos:start="169:16" pos:end="169:19"><name pos:start="169:16" pos:end="169:19">qids</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="173:5" pos:end="173:11">return;</return>

</block_content>}</block></function>
</unit>
