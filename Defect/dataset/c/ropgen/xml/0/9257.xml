<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9257.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">abi_long</name></type> <name pos:start="1:17" pos:end="1:27">do_recvfrom</name><parameter_list pos:start="1:28" pos:end="5:53">(<parameter pos:start="1:29" pos:end="1:34"><decl pos:start="1:29" pos:end="1:34"><type pos:start="1:29" pos:end="1:34"><name pos:start="1:29" pos:end="1:31">int</name></type> <name pos:start="1:33" pos:end="1:34">fd</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:49"><decl pos:start="1:37" pos:end="1:49"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:45">abi_ulong</name></type> <name pos:start="1:47" pos:end="1:49">msg</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:57">size_t</name></type> <name pos:start="1:59" pos:end="1:61">len</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:72"><decl pos:start="1:64" pos:end="1:72"><type pos:start="1:64" pos:end="1:72"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:72">flags</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:49"><decl pos:start="3:29" pos:end="3:49"><type pos:start="3:29" pos:end="3:49"><name pos:start="3:29" pos:end="3:37">abi_ulong</name></type> <name pos:start="3:39" pos:end="3:49">target_addr</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:52"><decl pos:start="5:29" pos:end="5:52"><type pos:start="5:29" pos:end="5:52"><name pos:start="5:29" pos:end="5:37">abi_ulong</name></type> <name pos:start="5:39" pos:end="5:52">target_addrlen</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="83:1">{<block_content pos:start="9:5" pos:end="81:15">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">socklen_t</name></type> <name pos:start="9:15" pos:end="9:21">addrlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">void</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:14">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">void</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:18">host_msg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">abi_long</name></type> <name pos:start="15:14" pos:end="15:16">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:52"><expr pos:start="19:5" pos:end="19:51"><name pos:start="19:5" pos:end="19:12">host_msg</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:51"><name pos:start="19:16" pos:end="19:24">lock_user</name><argument_list pos:start="19:25" pos:end="19:51">(<argument pos:start="19:26" pos:end="19:37"><expr pos:start="19:26" pos:end="19:37"><name pos:start="19:26" pos:end="19:37">VERIFY_WRITE</name></expr></argument>, <argument pos:start="19:40" pos:end="19:42"><expr pos:start="19:40" pos:end="19:42"><name pos:start="19:40" pos:end="19:42">msg</name></expr></argument>, <argument pos:start="19:45" pos:end="19:47"><expr pos:start="19:45" pos:end="19:47"><name pos:start="19:45" pos:end="19:47">len</name></expr></argument>, <argument pos:start="19:50" pos:end="19:50"><expr pos:start="19:50" pos:end="19:50"><literal type="number" pos:start="19:50" pos:end="19:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:30"><if pos:start="21:5" pos:end="23:30">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:17">host_msg</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:30"><block_content pos:start="23:9" pos:end="23:30">

        <return pos:start="23:9" pos:end="23:30">return <expr pos:start="23:16" pos:end="23:29"><operator pos:start="23:16" pos:end="23:16">-</operator><name pos:start="23:17" pos:end="23:29">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="53:5"><if pos:start="25:5" pos:end="47:5">if <condition pos:start="25:8" pos:end="25:20">(<expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:19">target_addr</name></expr>)</condition> <block pos:start="25:22" pos:end="47:5">{<block_content pos:start="27:9" pos:end="45:76">

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:50">(<expr pos:start="27:13" pos:end="27:49"><call pos:start="27:13" pos:end="27:49"><name pos:start="27:13" pos:end="27:24">get_user_u32</name><argument_list pos:start="27:25" pos:end="27:49">(<argument pos:start="27:26" pos:end="27:32"><expr pos:start="27:26" pos:end="27:32"><name pos:start="27:26" pos:end="27:32">addrlen</name></expr></argument>, <argument pos:start="27:35" pos:end="27:48"><expr pos:start="27:35" pos:end="27:48"><name pos:start="27:35" pos:end="27:48">target_addrlen</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:52" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:22">

            <expr_stmt pos:start="29:13" pos:end="29:33"><expr pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <operator pos:start="29:19" pos:end="29:19">-</operator><name pos:start="29:20" pos:end="29:32">TARGET_EFAULT</name></expr>;</expr_stmt>

            <goto pos:start="31:13" pos:end="31:22">goto <name pos:start="31:18" pos:end="31:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:51">(<expr pos:start="35:13" pos:end="35:50"><name pos:start="35:13" pos:end="35:36"><name pos:start="35:13" pos:end="35:19">addrlen</name> <argument_list type="generic" pos:start="35:21" pos:end="35:36">&lt; <argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><literal type="number" pos:start="35:23" pos:end="35:23">0</literal> <operator pos:start="35:25" pos:end="35:26">||</operator> <name pos:start="35:28" pos:end="35:34">addrlen</name></expr></argument> &gt;</argument_list></name> <name pos:start="35:38" pos:end="35:50">MAX_SOCK_ADDR</name></expr>)</condition> <block pos:start="35:53" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:22">

            <expr_stmt pos:start="37:13" pos:end="37:33"><expr pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <operator pos:start="37:19" pos:end="37:19">-</operator><name pos:start="37:20" pos:end="37:32">TARGET_EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="39:13" pos:end="39:22">goto <name pos:start="39:18" pos:end="39:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:12">addr</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:21">alloca</name><argument_list pos:start="43:22" pos:end="43:30">(<argument pos:start="43:23" pos:end="43:29"><expr pos:start="43:23" pos:end="43:29"><name pos:start="43:23" pos:end="43:29">addrlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:76"><expr pos:start="45:9" pos:end="45:75"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:75"><name pos:start="45:15" pos:end="45:23">get_errno</name><argument_list pos:start="45:24" pos:end="45:75">(<argument pos:start="45:25" pos:end="45:74"><expr pos:start="45:25" pos:end="45:74"><call pos:start="45:25" pos:end="45:74"><name pos:start="45:25" pos:end="45:32">recvfrom</name><argument_list pos:start="45:33" pos:end="45:74">(<argument pos:start="45:34" pos:end="45:35"><expr pos:start="45:34" pos:end="45:35"><name pos:start="45:34" pos:end="45:35">fd</name></expr></argument>, <argument pos:start="45:38" pos:end="45:45"><expr pos:start="45:38" pos:end="45:45"><name pos:start="45:38" pos:end="45:45">host_msg</name></expr></argument>, <argument pos:start="45:48" pos:end="45:50"><expr pos:start="45:48" pos:end="45:50"><name pos:start="45:48" pos:end="45:50">len</name></expr></argument>, <argument pos:start="45:53" pos:end="45:57"><expr pos:start="45:53" pos:end="45:57"><name pos:start="45:53" pos:end="45:57">flags</name></expr></argument>, <argument pos:start="45:60" pos:end="45:63"><expr pos:start="45:60" pos:end="45:63"><name pos:start="45:60" pos:end="45:63">addr</name></expr></argument>, <argument pos:start="45:66" pos:end="45:73"><expr pos:start="45:66" pos:end="45:73"><operator pos:start="45:66" pos:end="45:66">&amp;</operator><name pos:start="45:67" pos:end="45:73">addrlen</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="53:5">else <block pos:start="47:12" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:56">

        <expr_stmt pos:start="49:9" pos:end="49:20"><expr pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:12">addr</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <name pos:start="49:16" pos:end="49:19">NULL</name></expr>;</expr_stmt> <comment type="block" pos:start="49:22" pos:end="49:51">/* To keep compiler quiet.  */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:56"><expr pos:start="51:9" pos:end="51:55"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:55"><name pos:start="51:15" pos:end="51:23">get_errno</name><argument_list pos:start="51:24" pos:end="51:55">(<argument pos:start="51:25" pos:end="51:54"><expr pos:start="51:25" pos:end="51:54"><call pos:start="51:25" pos:end="51:54"><name pos:start="51:25" pos:end="51:28">recv</name><argument_list pos:start="51:29" pos:end="51:54">(<argument pos:start="51:30" pos:end="51:31"><expr pos:start="51:30" pos:end="51:31"><name pos:start="51:30" pos:end="51:31">fd</name></expr></argument>, <argument pos:start="51:34" pos:end="51:41"><expr pos:start="51:34" pos:end="51:41"><name pos:start="51:34" pos:end="51:41">host_msg</name></expr></argument>, <argument pos:start="51:44" pos:end="51:46"><expr pos:start="51:44" pos:end="51:46"><name pos:start="51:44" pos:end="51:46">len</name></expr></argument>, <argument pos:start="51:49" pos:end="51:53"><expr pos:start="51:49" pos:end="51:53"><name pos:start="51:49" pos:end="51:53">flags</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="55:5" pos:end="79:5"><if pos:start="55:5" pos:end="73:5">if <condition pos:start="55:8" pos:end="55:23">(<expr pos:start="55:9" pos:end="55:22"><operator pos:start="55:9" pos:end="55:9">!</operator><call pos:start="55:10" pos:end="55:22"><name pos:start="55:10" pos:end="55:17">is_error</name><argument_list pos:start="55:18" pos:end="55:22">(<argument pos:start="55:19" pos:end="55:21"><expr pos:start="55:19" pos:end="55:21"><name pos:start="55:19" pos:end="55:21">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:25" pos:end="73:5">{<block_content pos:start="57:9" pos:end="71:40">

        <if_stmt pos:start="57:9" pos:end="69:9"><if pos:start="57:9" pos:end="69:9">if <condition pos:start="57:12" pos:end="57:24">(<expr pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:23">target_addr</name></expr>)</condition> <block pos:start="57:26" pos:end="69:9">{<block_content pos:start="59:13" pos:end="67:13">

            <expr_stmt pos:start="59:13" pos:end="59:64"><expr pos:start="59:13" pos:end="59:63"><call pos:start="59:13" pos:end="59:63"><name pos:start="59:13" pos:end="59:35">host_to_target_sockaddr</name><argument_list pos:start="59:36" pos:end="59:63">(<argument pos:start="59:37" pos:end="59:47"><expr pos:start="59:37" pos:end="59:47"><name pos:start="59:37" pos:end="59:47">target_addr</name></expr></argument>, <argument pos:start="59:50" pos:end="59:53"><expr pos:start="59:50" pos:end="59:53"><name pos:start="59:50" pos:end="59:53">addr</name></expr></argument>, <argument pos:start="59:56" pos:end="59:62"><expr pos:start="59:56" pos:end="59:62"><name pos:start="59:56" pos:end="59:62">addrlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="61:13" pos:end="67:13"><if pos:start="61:13" pos:end="67:13">if <condition pos:start="61:16" pos:end="61:54">(<expr pos:start="61:17" pos:end="61:53"><call pos:start="61:17" pos:end="61:53"><name pos:start="61:17" pos:end="61:28">put_user_u32</name><argument_list pos:start="61:29" pos:end="61:53">(<argument pos:start="61:30" pos:end="61:36"><expr pos:start="61:30" pos:end="61:36"><name pos:start="61:30" pos:end="61:36">addrlen</name></expr></argument>, <argument pos:start="61:39" pos:end="61:52"><expr pos:start="61:39" pos:end="61:52"><name pos:start="61:39" pos:end="61:52">target_addrlen</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:56" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:26">

                <expr_stmt pos:start="63:17" pos:end="63:37"><expr pos:start="63:17" pos:end="63:36"><name pos:start="63:17" pos:end="63:19">ret</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <operator pos:start="63:23" pos:end="63:23">-</operator><name pos:start="63:24" pos:end="63:36">TARGET_EFAULT</name></expr>;</expr_stmt>

                <goto pos:start="65:17" pos:end="65:26">goto <name pos:start="65:22" pos:end="65:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:40"><expr pos:start="71:9" pos:end="71:39"><call pos:start="71:9" pos:end="71:39"><name pos:start="71:9" pos:end="71:19">unlock_user</name><argument_list pos:start="71:20" pos:end="71:39">(<argument pos:start="71:21" pos:end="71:28"><expr pos:start="71:21" pos:end="71:28"><name pos:start="71:21" pos:end="71:28">host_msg</name></expr></argument>, <argument pos:start="71:31" pos:end="71:33"><expr pos:start="71:31" pos:end="71:33"><name pos:start="71:31" pos:end="71:33">msg</name></expr></argument>, <argument pos:start="71:36" pos:end="71:38"><expr pos:start="71:36" pos:end="71:38"><name pos:start="71:36" pos:end="71:38">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="73:7" pos:end="79:5">else <block pos:start="73:12" pos:end="79:5">{<block_content pos:start="75:1" pos:end="77:38">

<label pos:start="75:1" pos:end="75:5"><name pos:start="75:1" pos:end="75:4">fail</name>:</label>

        <expr_stmt pos:start="77:9" pos:end="77:38"><expr pos:start="77:9" pos:end="77:37"><call pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:19">unlock_user</name><argument_list pos:start="77:20" pos:end="77:37">(<argument pos:start="77:21" pos:end="77:28"><expr pos:start="77:21" pos:end="77:28"><name pos:start="77:21" pos:end="77:28">host_msg</name></expr></argument>, <argument pos:start="77:31" pos:end="77:33"><expr pos:start="77:31" pos:end="77:33"><name pos:start="77:31" pos:end="77:33">msg</name></expr></argument>, <argument pos:start="77:36" pos:end="77:36"><expr pos:start="77:36" pos:end="77:36"><literal type="number" pos:start="77:36" pos:end="77:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="81:5" pos:end="81:15">return <expr pos:start="81:12" pos:end="81:14"><name pos:start="81:12" pos:end="81:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
