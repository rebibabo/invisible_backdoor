<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13084.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">qsv_transcode_init</name><parameter_list pos:start="1:23" pos:end="1:41">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:35">OutputStream</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">ost</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="169:1">{<block_content pos:start="5:5" pos:end="167:27">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">InputStream</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">ist</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:30"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:28"><name pos:start="7:11" pos:end="7:14">enum</name> <name pos:start="7:16" pos:end="7:28">AVPixelFormat</name></name> <modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:37">pix_fmt</name></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">AVDictionaryEntry</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:24">e</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:20"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:18">AVOption</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:23">opt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">flags</name> <init pos:start="15:15" pos:end="15:17">= <expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:15"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">err</name></decl>, <decl pos:start="19:14" pos:end="19:14"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:14" pos:end="19:14">i</name></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="23:27"><decl pos:start="23:5" pos:end="23:26"><type pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:14">QSVContext</name> <modifier pos:start="23:16" pos:end="23:16">*</modifier></type><name pos:start="23:17" pos:end="23:19">qsv</name> <init pos:start="23:21" pos:end="23:26">= <expr pos:start="23:23" pos:end="23:26"><name pos:start="23:23" pos:end="23:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:31"><decl pos:start="25:5" pos:end="25:30"><type pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:16">AVQSVContext</name> <modifier pos:start="25:18" pos:end="25:18">*</modifier></type><name pos:start="25:19" pos:end="25:23">hwctx</name> <init pos:start="25:25" pos:end="25:30">= <expr pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:17"><decl pos:start="27:5" pos:end="27:16"><type pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:11">mfxIMPL</name></type> <name pos:start="27:13" pos:end="27:16">impl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:34"><decl pos:start="29:5" pos:end="29:33"><type pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:14">mfxVersion</name></type> <name pos:start="29:16" pos:end="29:18">ver</name> <init pos:start="29:20" pos:end="29:33">= <expr pos:start="29:22" pos:end="29:33"><block pos:start="29:22" pos:end="29:33">{ <expr pos:start="29:24" pos:end="29:31"><block pos:start="29:24" pos:end="29:31">{ <expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">3</literal></expr>, <expr pos:start="29:29" pos:end="29:29"><literal type="number" pos:start="29:29" pos:end="29:29">1</literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:43">/* check if the encoder supports QSV */</comment>

    <if_stmt pos:start="35:5" pos:end="37:17"><if pos:start="35:5" pos:end="37:17">if <condition pos:start="35:8" pos:end="35:28">(<expr pos:start="35:9" pos:end="35:27"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:27"><name pos:start="35:10" pos:end="35:12">ost</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:17">enc</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:27">pix_fmts</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:17"><block_content pos:start="37:9" pos:end="37:17">

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="39:5" pos:end="43:18">for <control pos:start="39:9" pos:end="39:78">(<init pos:start="39:10" pos:end="39:38"><expr pos:start="39:10" pos:end="39:37"><name pos:start="39:10" pos:end="39:16">pix_fmt</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <name pos:start="39:20" pos:end="39:37"><name pos:start="39:20" pos:end="39:22">ost</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:27">enc</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:37">pix_fmts</name></name></expr>;</init> <condition pos:start="39:40" pos:end="39:67"><expr pos:start="39:40" pos:end="39:66"><operator pos:start="39:40" pos:end="39:40">*</operator><name pos:start="39:41" pos:end="39:47">pix_fmt</name> <operator pos:start="39:49" pos:end="39:50">!=</operator> <name pos:start="39:52" pos:end="39:66">AV_PIX_FMT_NONE</name></expr>;</condition> <incr pos:start="39:69" pos:end="39:77"><expr pos:start="39:69" pos:end="39:77"><name pos:start="39:69" pos:end="39:75">pix_fmt</name><operator pos:start="39:76" pos:end="39:77">++</operator></expr></incr>)</control><block type="pseudo" pos:start="41:9" pos:end="43:18"><block_content pos:start="41:9" pos:end="43:18">

        <if_stmt pos:start="41:9" pos:end="43:18"><if pos:start="41:9" pos:end="43:18">if <condition pos:start="41:12" pos:end="41:39">(<expr pos:start="41:13" pos:end="41:38"><operator pos:start="41:13" pos:end="41:13">*</operator><name pos:start="41:14" pos:end="41:20">pix_fmt</name> <operator pos:start="41:22" pos:end="41:23">==</operator> <name pos:start="41:25" pos:end="41:38">AV_PIX_FMT_QSV</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:18"><block_content pos:start="43:13" pos:end="43:18">

            <break pos:start="43:13" pos:end="43:18">break;</break></block_content></block></if></if_stmt></block_content></block></for>

    <if_stmt pos:start="45:5" pos:end="47:17"><if pos:start="45:5" pos:end="47:17">if <condition pos:start="45:8" pos:end="45:36">(<expr pos:start="45:9" pos:end="45:35"><operator pos:start="45:9" pos:end="45:9">*</operator><name pos:start="45:10" pos:end="45:16">pix_fmt</name> <operator pos:start="45:18" pos:end="45:19">==</operator> <name pos:start="45:21" pos:end="45:35">AV_PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:17"><block_content pos:start="47:9" pos:end="47:17">

        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="53:17"><if pos:start="51:5" pos:end="53:17">if <condition pos:start="51:8" pos:end="51:63">(<expr pos:start="51:9" pos:end="51:62"><call pos:start="51:9" pos:end="51:37"><name pos:start="51:9" pos:end="51:14">strcmp</name><argument_list pos:start="51:15" pos:end="51:37">(<argument pos:start="51:16" pos:end="51:28"><expr pos:start="51:16" pos:end="51:28"><name pos:start="51:16" pos:end="51:28"><name pos:start="51:16" pos:end="51:18">ost</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:28">avfilter</name></name></expr></argument>, <argument pos:start="51:31" pos:end="51:36"><expr pos:start="51:31" pos:end="51:36"><literal type="string" pos:start="51:31" pos:end="51:36">"null"</literal></expr></argument>)</argument_list></call> <operator pos:start="51:39" pos:end="51:40">||</operator> <name pos:start="51:42" pos:end="51:58"><name pos:start="51:42" pos:end="51:44">ost</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:58">source_index</name></name> <operator pos:start="51:60" pos:end="51:60">&lt;</operator> <literal type="number" pos:start="51:62" pos:end="51:62">0</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:17"><block_content pos:start="53:9" pos:end="53:17">

        <return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:83">/* check if the decoder supports QSV and the output only goes to this stream */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:43"><expr pos:start="59:5" pos:end="59:42"><name pos:start="59:5" pos:end="59:7">ist</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <name pos:start="59:11" pos:end="59:42"><name pos:start="59:11" pos:end="59:23">input_streams</name><index pos:start="59:24" pos:end="59:42">[<expr pos:start="59:25" pos:end="59:41"><name pos:start="59:25" pos:end="59:41"><name pos:start="59:25" pos:end="59:27">ost</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:41">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="63:17"><if pos:start="61:5" pos:end="63:17">if <condition pos:start="61:8" pos:end="61:75">(<expr pos:start="61:9" pos:end="61:74"><name pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:11">ist</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:23">hwaccel_id</name></name> <operator pos:start="61:25" pos:end="61:26">!=</operator> <name pos:start="61:28" pos:end="61:38">HWACCEL_QSV</name> <operator pos:start="61:40" pos:end="61:41">||</operator> <operator pos:start="61:43" pos:end="61:43">!</operator><name pos:start="61:44" pos:end="61:51"><name pos:start="61:44" pos:end="61:46">ist</name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator><name pos:start="61:49" pos:end="61:51">dec</name></name> <operator pos:start="61:53" pos:end="61:54">||</operator> <operator pos:start="61:56" pos:end="61:56">!</operator><name pos:start="61:57" pos:end="61:74"><name pos:start="61:57" pos:end="61:59">ist</name><operator pos:start="61:60" pos:end="61:61">-&gt;</operator><name pos:start="61:62" pos:end="61:64">dec</name><operator pos:start="61:65" pos:end="61:66">-&gt;</operator><name pos:start="61:67" pos:end="61:74">pix_fmts</name></name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:17"><block_content pos:start="63:9" pos:end="63:17">

        <return pos:start="63:9" pos:end="63:17">return <expr pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="65:5" pos:end="69:18">for <control pos:start="65:9" pos:end="65:78">(<init pos:start="65:10" pos:end="65:38"><expr pos:start="65:10" pos:end="65:37"><name pos:start="65:10" pos:end="65:16">pix_fmt</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <name pos:start="65:20" pos:end="65:37"><name pos:start="65:20" pos:end="65:22">ist</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:27">dec</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:37">pix_fmts</name></name></expr>;</init> <condition pos:start="65:40" pos:end="65:67"><expr pos:start="65:40" pos:end="65:66"><operator pos:start="65:40" pos:end="65:40">*</operator><name pos:start="65:41" pos:end="65:47">pix_fmt</name> <operator pos:start="65:49" pos:end="65:50">!=</operator> <name pos:start="65:52" pos:end="65:66">AV_PIX_FMT_NONE</name></expr>;</condition> <incr pos:start="65:69" pos:end="65:77"><expr pos:start="65:69" pos:end="65:77"><name pos:start="65:69" pos:end="65:75">pix_fmt</name><operator pos:start="65:76" pos:end="65:77">++</operator></expr></incr>)</control><block type="pseudo" pos:start="67:9" pos:end="69:18"><block_content pos:start="67:9" pos:end="69:18">

        <if_stmt pos:start="67:9" pos:end="69:18"><if pos:start="67:9" pos:end="69:18">if <condition pos:start="67:12" pos:end="67:39">(<expr pos:start="67:13" pos:end="67:38"><operator pos:start="67:13" pos:end="67:13">*</operator><name pos:start="67:14" pos:end="67:20">pix_fmt</name> <operator pos:start="67:22" pos:end="67:23">==</operator> <name pos:start="67:25" pos:end="67:38">AV_PIX_FMT_QSV</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:18"><block_content pos:start="69:13" pos:end="69:18">

            <break pos:start="69:13" pos:end="69:18">break;</break></block_content></block></if></if_stmt></block_content></block></for>

    <if_stmt pos:start="71:5" pos:end="73:17"><if pos:start="71:5" pos:end="73:17">if <condition pos:start="71:8" pos:end="71:36">(<expr pos:start="71:9" pos:end="71:35"><operator pos:start="71:9" pos:end="71:9">*</operator><name pos:start="71:10" pos:end="71:16">pix_fmt</name> <operator pos:start="71:18" pos:end="71:19">==</operator> <name pos:start="71:21" pos:end="71:35">AV_PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:17"><block_content pos:start="73:9" pos:end="73:17">

        <return pos:start="73:9" pos:end="73:17">return <expr pos:start="73:16" pos:end="73:16"><literal type="number" pos:start="73:16" pos:end="73:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="77:5" pos:end="83:21">for <control pos:start="77:9" pos:end="77:43">(<init pos:start="77:10" pos:end="77:15"><expr pos:start="77:10" pos:end="77:14"><name pos:start="77:10" pos:end="77:10">i</name> <operator pos:start="77:12" pos:end="77:12">=</operator> <literal type="number" pos:start="77:14" pos:end="77:14">0</literal></expr>;</init> <condition pos:start="77:17" pos:end="77:38"><expr pos:start="77:17" pos:end="77:37"><name pos:start="77:17" pos:end="77:17">i</name> <operator pos:start="77:19" pos:end="77:19">&lt;</operator> <name pos:start="77:21" pos:end="77:37">nb_output_streams</name></expr>;</condition> <incr pos:start="77:40" pos:end="77:42"><expr pos:start="77:40" pos:end="77:42"><name pos:start="77:40" pos:end="77:40">i</name><operator pos:start="77:41" pos:end="77:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="79:9" pos:end="83:21"><block_content pos:start="79:9" pos:end="83:21">

        <if_stmt pos:start="79:9" pos:end="83:21"><if pos:start="79:9" pos:end="83:21">if <condition pos:start="79:12" pos:end="81:65">(<expr pos:start="79:13" pos:end="81:64"><name pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:26">output_streams</name><index pos:start="79:27" pos:end="79:29">[<expr pos:start="79:28" pos:end="79:28"><name pos:start="79:28" pos:end="79:28">i</name></expr>]</index></name> <operator pos:start="79:31" pos:end="79:32">!=</operator> <name pos:start="79:34" pos:end="79:36">ost</name> <operator pos:start="79:38" pos:end="79:39">&amp;&amp;</operator>

            <name pos:start="81:13" pos:end="81:29"><name pos:start="81:13" pos:end="81:26">output_streams</name><index pos:start="81:27" pos:end="81:29">[<expr pos:start="81:28" pos:end="81:28"><name pos:start="81:28" pos:end="81:28">i</name></expr>]</index></name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:43">source_index</name> <operator pos:start="81:45" pos:end="81:46">==</operator> <name pos:start="81:48" pos:end="81:64"><name pos:start="81:48" pos:end="81:50">ost</name><operator pos:start="81:51" pos:end="81:52">-&gt;</operator><name pos:start="81:53" pos:end="81:64">source_index</name></name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:21"><block_content pos:start="83:13" pos:end="83:21">

            <return pos:start="83:13" pos:end="83:21">return <expr pos:start="83:20" pos:end="83:20"><literal type="number" pos:start="83:20" pos:end="83:20">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="87:5" pos:end="87:65"><expr pos:start="87:5" pos:end="87:64"><call pos:start="87:5" pos:end="87:64"><name pos:start="87:5" pos:end="87:10">av_log</name><argument_list pos:start="87:11" pos:end="87:64">(<argument pos:start="87:12" pos:end="87:15"><expr pos:start="87:12" pos:end="87:15"><name pos:start="87:12" pos:end="87:15">NULL</name></expr></argument>, <argument pos:start="87:18" pos:end="87:31"><expr pos:start="87:18" pos:end="87:31"><name pos:start="87:18" pos:end="87:31">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="87:34" pos:end="87:63"><expr pos:start="87:34" pos:end="87:63"><literal type="string" pos:start="87:34" pos:end="87:63">"Setting up QSV transcoding\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:37"><expr pos:start="91:5" pos:end="91:36"><name pos:start="91:5" pos:end="91:7">qsv</name>   <operator pos:start="91:11" pos:end="91:11">=</operator> <call pos:start="91:13" pos:end="91:36"><name pos:start="91:13" pos:end="91:22">av_mallocz</name><argument_list pos:start="91:23" pos:end="91:36">(<argument pos:start="91:24" pos:end="91:35"><expr pos:start="91:24" pos:end="91:35"><sizeof pos:start="91:24" pos:end="91:35">sizeof<argument_list pos:start="91:30" pos:end="91:35">(<argument pos:start="91:31" pos:end="91:34"><expr pos:start="91:31" pos:end="91:34"><operator pos:start="91:31" pos:end="91:31">*</operator><name pos:start="91:32" pos:end="91:34">qsv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:35"><expr pos:start="93:5" pos:end="93:34"><name pos:start="93:5" pos:end="93:9">hwctx</name> <operator pos:start="93:11" pos:end="93:11">=</operator> <call pos:start="93:13" pos:end="93:34"><name pos:start="93:13" pos:end="93:32">av_qsv_alloc_context</name><argument_list pos:start="93:33" pos:end="93:34">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="97:18"><if pos:start="95:5" pos:end="97:18">if <condition pos:start="95:8" pos:end="95:23">(<expr pos:start="95:9" pos:end="95:22"><operator pos:start="95:9" pos:end="95:9">!</operator><name pos:start="95:10" pos:end="95:12">qsv</name> <operator pos:start="95:14" pos:end="95:15">||</operator> <operator pos:start="95:17" pos:end="95:17">!</operator><name pos:start="95:18" pos:end="95:22">hwctx</name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:18"><block_content pos:start="97:9" pos:end="97:18">

        <goto pos:start="97:9" pos:end="97:18">goto <name pos:start="97:14" pos:end="97:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:38"><expr pos:start="101:5" pos:end="101:37"><name pos:start="101:5" pos:end="101:8">impl</name> <operator pos:start="101:10" pos:end="101:10">=</operator> <call pos:start="101:12" pos:end="101:37"><name pos:start="101:12" pos:end="101:32">choose_implementation</name><argument_list pos:start="101:33" pos:end="101:37">(<argument pos:start="101:34" pos:end="101:36"><expr pos:start="101:34" pos:end="101:36"><name pos:start="101:34" pos:end="101:36">ist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:45"><expr pos:start="105:5" pos:end="105:44"><name pos:start="105:5" pos:end="105:7">err</name> <operator pos:start="105:9" pos:end="105:9">=</operator> <call pos:start="105:11" pos:end="105:44"><name pos:start="105:11" pos:end="105:17">MFXInit</name><argument_list pos:start="105:18" pos:end="105:44">(<argument pos:start="105:19" pos:end="105:22"><expr pos:start="105:19" pos:end="105:22"><name pos:start="105:19" pos:end="105:22">impl</name></expr></argument>, <argument pos:start="105:25" pos:end="105:28"><expr pos:start="105:25" pos:end="105:28"><operator pos:start="105:25" pos:end="105:25">&amp;</operator><name pos:start="105:26" pos:end="105:28">ver</name></expr></argument>, <argument pos:start="105:31" pos:end="105:43"><expr pos:start="105:31" pos:end="105:43"><operator pos:start="105:31" pos:end="105:31">&amp;</operator><name pos:start="105:32" pos:end="105:43"><name pos:start="105:32" pos:end="105:34">qsv</name><operator pos:start="105:35" pos:end="105:36">-&gt;</operator><name pos:start="105:37" pos:end="105:43">session</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="113:5"><if pos:start="107:5" pos:end="113:5">if <condition pos:start="107:8" pos:end="107:28">(<expr pos:start="107:9" pos:end="107:27"><name pos:start="107:9" pos:end="107:11">err</name> <operator pos:start="107:13" pos:end="107:14">!=</operator> <name pos:start="107:16" pos:end="107:27">MFX_ERR_NONE</name></expr>)</condition> <block pos:start="107:30" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:18">

        <expr_stmt pos:start="109:9" pos:end="109:83"><expr pos:start="109:9" pos:end="109:82"><call pos:start="109:9" pos:end="109:82"><name pos:start="109:9" pos:end="109:14">av_log</name><argument_list pos:start="109:15" pos:end="109:82">(<argument pos:start="109:16" pos:end="109:19"><expr pos:start="109:16" pos:end="109:19"><name pos:start="109:16" pos:end="109:19">NULL</name></expr></argument>, <argument pos:start="109:22" pos:end="109:33"><expr pos:start="109:22" pos:end="109:33"><name pos:start="109:22" pos:end="109:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="109:36" pos:end="109:76"><expr pos:start="109:36" pos:end="109:76"><literal type="string" pos:start="109:36" pos:end="109:76">"Error initializing an MFX session: %d\n"</literal></expr></argument>, <argument pos:start="109:79" pos:end="109:81"><expr pos:start="109:79" pos:end="109:81"><name pos:start="109:79" pos:end="109:81">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="111:9" pos:end="111:18">goto <name pos:start="111:14" pos:end="111:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:57"><expr pos:start="117:5" pos:end="117:56"><name pos:start="117:5" pos:end="117:5">e</name> <operator pos:start="117:7" pos:end="117:7">=</operator> <call pos:start="117:9" pos:end="117:56"><name pos:start="117:9" pos:end="117:19">av_dict_get</name><argument_list pos:start="117:20" pos:end="117:56">(<argument pos:start="117:21" pos:end="117:37"><expr pos:start="117:21" pos:end="117:37"><name pos:start="117:21" pos:end="117:37"><name pos:start="117:21" pos:end="117:23">ost</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:37">encoder_opts</name></name></expr></argument>, <argument pos:start="117:40" pos:end="117:46"><expr pos:start="117:40" pos:end="117:46"><literal type="string" pos:start="117:40" pos:end="117:46">"flags"</literal></expr></argument>, <argument pos:start="117:49" pos:end="117:52"><expr pos:start="117:49" pos:end="117:52"><name pos:start="117:49" pos:end="117:52">NULL</name></expr></argument>, <argument pos:start="117:55" pos:end="117:55"><expr pos:start="117:55" pos:end="117:55"><literal type="number" pos:start="117:55" pos:end="117:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:57"><expr pos:start="119:5" pos:end="119:56"><name pos:start="119:5" pos:end="119:7">opt</name> <operator pos:start="119:9" pos:end="119:9">=</operator> <call pos:start="119:11" pos:end="119:56"><name pos:start="119:11" pos:end="119:21">av_opt_find</name><argument_list pos:start="119:22" pos:end="119:56">(<argument pos:start="119:23" pos:end="119:34"><expr pos:start="119:23" pos:end="119:34"><name pos:start="119:23" pos:end="119:34"><name pos:start="119:23" pos:end="119:25">ost</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:34">enc_ctx</name></name></expr></argument>, <argument pos:start="119:37" pos:end="119:43"><expr pos:start="119:37" pos:end="119:43"><literal type="string" pos:start="119:37" pos:end="119:43">"flags"</literal></expr></argument>, <argument pos:start="119:46" pos:end="119:49"><expr pos:start="119:46" pos:end="119:49"><name pos:start="119:46" pos:end="119:49">NULL</name></expr></argument>, <argument pos:start="119:52" pos:end="119:52"><expr pos:start="119:52" pos:end="119:52"><literal type="number" pos:start="119:52" pos:end="119:52">0</literal></expr></argument>, <argument pos:start="119:55" pos:end="119:55"><expr pos:start="119:55" pos:end="119:55"><literal type="number" pos:start="119:55" pos:end="119:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="123:63"><if pos:start="121:5" pos:end="123:63">if <condition pos:start="121:8" pos:end="121:17">(<expr pos:start="121:9" pos:end="121:16"><name pos:start="121:9" pos:end="121:9">e</name> <operator pos:start="121:11" pos:end="121:12">&amp;&amp;</operator> <name pos:start="121:14" pos:end="121:16">opt</name></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:63"><block_content pos:start="123:9" pos:end="123:63">

        <expr_stmt pos:start="123:9" pos:end="123:63"><expr pos:start="123:9" pos:end="123:62"><call pos:start="123:9" pos:end="123:62"><name pos:start="123:9" pos:end="123:25">av_opt_eval_flags</name><argument_list pos:start="123:26" pos:end="123:62">(<argument pos:start="123:27" pos:end="123:38"><expr pos:start="123:27" pos:end="123:38"><name pos:start="123:27" pos:end="123:38"><name pos:start="123:27" pos:end="123:29">ost</name><operator pos:start="123:30" pos:end="123:31">-&gt;</operator><name pos:start="123:32" pos:end="123:38">enc_ctx</name></name></expr></argument>, <argument pos:start="123:41" pos:end="123:43"><expr pos:start="123:41" pos:end="123:43"><name pos:start="123:41" pos:end="123:43">opt</name></expr></argument>, <argument pos:start="123:46" pos:end="123:53"><expr pos:start="123:46" pos:end="123:53"><name pos:start="123:46" pos:end="123:53"><name pos:start="123:46" pos:end="123:46">e</name><operator pos:start="123:47" pos:end="123:48">-&gt;</operator><name pos:start="123:49" pos:end="123:53">value</name></name></expr></argument>, <argument pos:start="123:56" pos:end="123:61"><expr pos:start="123:56" pos:end="123:61"><operator pos:start="123:56" pos:end="123:56">&amp;</operator><name pos:start="123:57" pos:end="123:61">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:19"><expr pos:start="127:5" pos:end="127:18"><name pos:start="127:5" pos:end="127:12"><name pos:start="127:5" pos:end="127:7">qsv</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:12">ost</name></name> <operator pos:start="127:14" pos:end="127:14">=</operator> <name pos:start="127:16" pos:end="127:18">ost</name></expr>;</expr_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:49"><expr pos:start="131:5" pos:end="131:48"><name pos:start="131:5" pos:end="131:18"><name pos:start="131:5" pos:end="131:9">hwctx</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:18">session</name></name>                <operator pos:start="131:35" pos:end="131:35">=</operator> <name pos:start="131:37" pos:end="131:48"><name pos:start="131:37" pos:end="131:39">qsv</name><operator pos:start="131:40" pos:end="131:41">-&gt;</operator><name pos:start="131:42" pos:end="131:48">session</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:67"><expr pos:start="133:5" pos:end="133:66"><name pos:start="133:5" pos:end="133:20"><name pos:start="133:5" pos:end="133:9">hwctx</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:20">iopattern</name></name>              <operator pos:start="133:35" pos:end="133:35">=</operator> <name pos:start="133:37" pos:end="133:66">MFX_IOPATTERN_IN_OPAQUE_MEMORY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:38"><expr pos:start="135:5" pos:end="135:37"><name pos:start="135:5" pos:end="135:23"><name pos:start="135:5" pos:end="135:9">hwctx</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:23">opaque_alloc</name></name>           <operator pos:start="135:35" pos:end="135:35">=</operator> <literal type="number" pos:start="135:37" pos:end="135:37">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:39"><expr pos:start="137:5" pos:end="137:38"><name pos:start="137:5" pos:end="137:29"><name pos:start="137:5" pos:end="137:9">hwctx</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:29">nb_opaque_surfaces</name></name>     <operator pos:start="137:35" pos:end="137:35">=</operator> <literal type="number" pos:start="137:37" pos:end="137:38">16</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:40"><expr pos:start="141:5" pos:end="141:39"><name pos:start="141:5" pos:end="141:20"><name pos:start="141:5" pos:end="141:7">ost</name><operator pos:start="141:8" pos:end="141:9">-&gt;</operator><name pos:start="141:10" pos:end="141:20">hwaccel_ctx</name></name>              <operator pos:start="141:35" pos:end="141:35">=</operator> <name pos:start="141:37" pos:end="141:39">qsv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:42"><expr pos:start="143:5" pos:end="143:41"><name pos:start="143:5" pos:end="143:33"><name pos:start="143:5" pos:end="143:7">ost</name><operator pos:start="143:8" pos:end="143:9">-&gt;</operator><name pos:start="143:10" pos:end="143:16">enc_ctx</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:33">hwaccel_context</name></name> <operator pos:start="143:35" pos:end="143:35">=</operator> <name pos:start="143:37" pos:end="143:41">hwctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:51"><expr pos:start="145:5" pos:end="145:50"><name pos:start="145:5" pos:end="145:25"><name pos:start="145:5" pos:end="145:7">ost</name><operator pos:start="145:8" pos:end="145:9">-&gt;</operator><name pos:start="145:10" pos:end="145:16">enc_ctx</name><operator pos:start="145:17" pos:end="145:18">-&gt;</operator><name pos:start="145:19" pos:end="145:25">pix_fmt</name></name>         <operator pos:start="145:35" pos:end="145:35">=</operator> <name pos:start="145:37" pos:end="145:50">AV_PIX_FMT_QSV</name></expr>;</expr_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:40"><expr pos:start="149:5" pos:end="149:39"><name pos:start="149:5" pos:end="149:20"><name pos:start="149:5" pos:end="149:7">ist</name><operator pos:start="149:8" pos:end="149:9">-&gt;</operator><name pos:start="149:10" pos:end="149:20">hwaccel_ctx</name></name>              <operator pos:start="149:35" pos:end="149:35">=</operator> <name pos:start="149:37" pos:end="149:39">qsv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:51"><expr pos:start="151:5" pos:end="151:50"><name pos:start="151:5" pos:end="151:25"><name pos:start="151:5" pos:end="151:7">ist</name><operator pos:start="151:8" pos:end="151:9">-&gt;</operator><name pos:start="151:10" pos:end="151:16">dec_ctx</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:25">pix_fmt</name></name>         <operator pos:start="151:35" pos:end="151:35">=</operator> <name pos:start="151:37" pos:end="151:50">AV_PIX_FMT_QSV</name></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:51"><expr pos:start="153:5" pos:end="153:50"><name pos:start="153:5" pos:end="153:25"><name pos:start="153:5" pos:end="153:7">ist</name><operator pos:start="153:8" pos:end="153:9">-&gt;</operator><name pos:start="153:10" pos:end="153:25">resample_pix_fmt</name></name>         <operator pos:start="153:35" pos:end="153:35">=</operator> <name pos:start="153:37" pos:end="153:50">AV_PIX_FMT_QSV</name></expr>;</expr_stmt>



    <return pos:start="157:5" pos:end="157:13">return <expr pos:start="157:12" pos:end="157:12"><literal type="number" pos:start="157:12" pos:end="157:12">0</literal></expr>;</return>



<label pos:start="161:1" pos:end="161:5"><name pos:start="161:1" pos:end="161:4">fail</name>:</label>

    <expr_stmt pos:start="163:5" pos:end="163:21"><expr pos:start="163:5" pos:end="163:20"><call pos:start="163:5" pos:end="163:20"><name pos:start="163:5" pos:end="163:12">av_freep</name><argument_list pos:start="163:13" pos:end="163:20">(<argument pos:start="163:14" pos:end="163:19"><expr pos:start="163:14" pos:end="163:19"><operator pos:start="163:14" pos:end="163:14">&amp;</operator><name pos:start="163:15" pos:end="163:19">hwctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:19"><expr pos:start="165:5" pos:end="165:18"><call pos:start="165:5" pos:end="165:18"><name pos:start="165:5" pos:end="165:12">av_freep</name><argument_list pos:start="165:13" pos:end="165:18">(<argument pos:start="165:14" pos:end="165:17"><expr pos:start="165:14" pos:end="165:17"><operator pos:start="165:14" pos:end="165:14">&amp;</operator><name pos:start="165:15" pos:end="165:17">qsv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="167:5" pos:end="167:27">return <expr pos:start="167:12" pos:end="167:26"><name pos:start="167:12" pos:end="167:26">AVERROR_UNKNOWN</name></expr>;</return>

</block_content>}</block></function>
</unit>
