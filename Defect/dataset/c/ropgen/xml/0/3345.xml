<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3345.c" pos:tabs="8"><function pos:start="1:1" pos:end="511:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">gen_compute_branch</name> <parameter_list pos:start="1:32" pos:end="5:63">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:44">DisasContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">ctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:59">uint32_t</name></type> <name pos:start="1:61" pos:end="1:63">opc</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:46"><decl pos:start="3:33" pos:end="3:46"><type pos:start="3:33" pos:end="3:46"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:46">insn_bytes</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:38"><decl pos:start="5:33" pos:end="5:38"><type pos:start="5:33" pos:end="5:38"><name pos:start="5:33" pos:end="5:35">int</name></type> <name pos:start="5:37" pos:end="5:38">rs</name></decl></parameter>, <parameter pos:start="5:41" pos:end="5:46"><decl pos:start="5:41" pos:end="5:46"><type pos:start="5:41" pos:end="5:46"><name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:46">rt</name></decl></parameter>, <parameter pos:start="5:49" pos:end="5:62"><decl pos:start="5:49" pos:end="5:62"><type pos:start="5:49" pos:end="5:62"><name pos:start="5:49" pos:end="5:55">int32_t</name></type> <name pos:start="5:57" pos:end="5:62">offset</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="511:1">{<block_content pos:start="9:5" pos:end="509:22">

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:21">btgt</name> <init pos:start="9:23" pos:end="9:26">= <expr pos:start="9:25" pos:end="9:26"><operator pos:start="9:25" pos:end="9:25">-</operator><literal type="number" pos:start="9:26" pos:end="9:26">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">blink</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:21">bcond_compute</name> <init pos:start="13:23" pos:end="13:25">= <expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">TCGv</name></type> <name pos:start="15:10" pos:end="15:11">t0</name> <init pos:start="15:13" pos:end="15:28">= <expr pos:start="15:15" pos:end="15:28"><call pos:start="15:15" pos:end="15:28"><name pos:start="15:15" pos:end="15:26">tcg_temp_new</name><argument_list pos:start="15:27" pos:end="15:28">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">TCGv</name></type> <name pos:start="17:10" pos:end="17:11">t1</name> <init pos:start="17:13" pos:end="17:28">= <expr pos:start="17:15" pos:end="17:28"><call pos:start="17:15" pos:end="17:28"><name pos:start="17:15" pos:end="17:26">tcg_temp_new</name><argument_list pos:start="17:27" pos:end="17:28">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="33:5"><if pos:start="21:5" pos:end="33:5">if <condition pos:start="21:8" pos:end="21:39">(<expr pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:11">ctx</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:19">hflags</name></name> <operator pos:start="21:21" pos:end="21:21">&amp;</operator> <name pos:start="21:23" pos:end="21:38">MIPS_HFLAG_BMASK</name></expr>)</condition> <block pos:start="21:41" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:17">

<cpp:ifdef pos:start="23:1" pos:end="23:23">#<cpp:directive pos:start="23:2" pos:end="23:6">ifdef</cpp:directive> <name pos:start="23:8" pos:end="23:23">MIPS_DEBUG_DISAS</name></cpp:ifdef>

        <expr_stmt pos:start="25:9" pos:end="28:0"><expr pos:start="25:9" pos:end="25:78"><call pos:start="25:9" pos:end="25:78"><name pos:start="25:9" pos:end="25:17">LOG_DISAS</name><argument_list pos:start="25:18" pos:end="25:78">(<argument pos:start="25:19" pos:end="25:68"><expr pos:start="25:19" pos:end="25:68"><literal type="string" pos:start="25:19" pos:end="25:49">"Branch in delay slot at PC 0x"</literal> <name pos:start="25:51" pos:end="25:63">TARGET_FMT_lx</name> <literal type="string" pos:start="25:65" pos:end="25:68">"\n"</literal></expr></argument>, <argument pos:start="25:71" pos:end="25:77"><expr pos:start="25:71" pos:end="25:77"><name pos:start="25:71" pos:end="25:77"><name pos:start="25:71" pos:end="25:73">ctx</name><operator pos:start="25:74" pos:end="25:75">-&gt;</operator><name pos:start="25:76" pos:end="25:77">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="29:9" pos:end="29:41"><expr pos:start="29:9" pos:end="29:40"><call pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:26">generate_exception</name><argument_list pos:start="29:27" pos:end="29:40">(<argument pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:30">ctx</name></expr></argument>, <argument pos:start="29:33" pos:end="29:39"><expr pos:start="29:33" pos:end="29:39"><name pos:start="29:33" pos:end="29:39">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="31:9" pos:end="31:17">goto <name pos:start="31:14" pos:end="31:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:30">/* Load needed operands */</comment>

    <switch pos:start="39:5" pos:end="149:5">switch <condition pos:start="39:12" pos:end="39:16">(<expr pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">opc</name></expr>)</condition> <block pos:start="39:18" pos:end="149:5">{<block_content pos:start="41:5" pos:end="147:17">

    <case pos:start="41:5" pos:end="41:17">case <expr pos:start="41:10" pos:end="41:16"><name pos:start="41:10" pos:end="41:16">OPC_BEQ</name></expr>:</case>

    <case pos:start="43:5" pos:end="43:18">case <expr pos:start="43:10" pos:end="43:17"><name pos:start="43:10" pos:end="43:17">OPC_BEQL</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:17">case <expr pos:start="45:10" pos:end="45:16"><name pos:start="45:10" pos:end="45:16">OPC_BNE</name></expr>:</case>

    <case pos:start="47:5" pos:end="47:18">case <expr pos:start="47:10" pos:end="47:17"><name pos:start="47:10" pos:end="47:17">OPC_BNEL</name></expr>:</case>

        <comment type="block" pos:start="49:9" pos:end="49:35">/* Compare two registers */</comment>

        <if_stmt pos:start="51:9" pos:end="59:9"><if pos:start="51:9" pos:end="59:9">if <condition pos:start="51:12" pos:end="51:21">(<expr pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:14">rs</name> <operator pos:start="51:16" pos:end="51:17">!=</operator> <name pos:start="51:19" pos:end="51:20">rt</name></expr>)</condition> <block pos:start="51:23" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:30">

            <expr_stmt pos:start="53:13" pos:end="53:33"><expr pos:start="53:13" pos:end="53:32"><call pos:start="53:13" pos:end="53:32"><name pos:start="53:13" pos:end="53:24">gen_load_gpr</name><argument_list pos:start="53:25" pos:end="53:32">(<argument pos:start="53:26" pos:end="53:27"><expr pos:start="53:26" pos:end="53:27"><name pos:start="53:26" pos:end="53:27">t0</name></expr></argument>, <argument pos:start="53:30" pos:end="53:31"><expr pos:start="53:30" pos:end="53:31"><name pos:start="53:30" pos:end="53:31">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:33"><expr pos:start="55:13" pos:end="55:32"><call pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:24">gen_load_gpr</name><argument_list pos:start="55:25" pos:end="55:32">(<argument pos:start="55:26" pos:end="55:27"><expr pos:start="55:26" pos:end="55:27"><name pos:start="55:26" pos:end="55:27">t1</name></expr></argument>, <argument pos:start="55:30" pos:end="55:31"><expr pos:start="55:30" pos:end="55:31"><name pos:start="55:30" pos:end="55:31">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:30"><expr pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:25">bcond_compute</name> <operator pos:start="57:27" pos:end="57:27">=</operator> <literal type="number" pos:start="57:29" pos:end="57:29">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:45"><expr pos:start="61:9" pos:end="61:44"><name pos:start="61:9" pos:end="61:12">btgt</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:22"><name pos:start="61:16" pos:end="61:18">ctx</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:22">pc</name></name> <operator pos:start="61:24" pos:end="61:24">+</operator> <name pos:start="61:26" pos:end="61:35">insn_bytes</name> <operator pos:start="61:37" pos:end="61:37">+</operator> <name pos:start="61:39" pos:end="61:44">offset</name></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:18">case <expr pos:start="65:10" pos:end="65:17"><name pos:start="65:10" pos:end="65:17">OPC_BGEZ</name></expr>:</case>

    <case pos:start="67:5" pos:end="67:20">case <expr pos:start="67:10" pos:end="67:19"><name pos:start="67:10" pos:end="67:19">OPC_BGEZAL</name></expr>:</case>

    <case pos:start="69:5" pos:end="69:21">case <expr pos:start="69:10" pos:end="69:20"><name pos:start="69:10" pos:end="69:20">OPC_BGEZALL</name></expr>:</case>

    <case pos:start="71:5" pos:end="71:19">case <expr pos:start="71:10" pos:end="71:18"><name pos:start="71:10" pos:end="71:18">OPC_BGEZL</name></expr>:</case>

    <case pos:start="73:5" pos:end="73:18">case <expr pos:start="73:10" pos:end="73:17"><name pos:start="73:10" pos:end="73:17">OPC_BGTZ</name></expr>:</case>

    <case pos:start="75:5" pos:end="75:19">case <expr pos:start="75:10" pos:end="75:18"><name pos:start="75:10" pos:end="75:18">OPC_BGTZL</name></expr>:</case>

    <case pos:start="77:5" pos:end="77:18">case <expr pos:start="77:10" pos:end="77:17"><name pos:start="77:10" pos:end="77:17">OPC_BLEZ</name></expr>:</case>

    <case pos:start="79:5" pos:end="79:19">case <expr pos:start="79:10" pos:end="79:18"><name pos:start="79:10" pos:end="79:18">OPC_BLEZL</name></expr>:</case>

    <case pos:start="81:5" pos:end="81:18">case <expr pos:start="81:10" pos:end="81:17"><name pos:start="81:10" pos:end="81:17">OPC_BLTZ</name></expr>:</case>

    <case pos:start="83:5" pos:end="83:20">case <expr pos:start="83:10" pos:end="83:19"><name pos:start="83:10" pos:end="83:19">OPC_BLTZAL</name></expr>:</case>

    <case pos:start="85:5" pos:end="85:21">case <expr pos:start="85:10" pos:end="85:20"><name pos:start="85:10" pos:end="85:20">OPC_BLTZALL</name></expr>:</case>

    <case pos:start="87:5" pos:end="87:19">case <expr pos:start="87:10" pos:end="87:18"><name pos:start="87:10" pos:end="87:18">OPC_BLTZL</name></expr>:</case>

        <comment type="block" pos:start="89:9" pos:end="89:29">/* Compare to zero */</comment>

        <if_stmt pos:start="91:9" pos:end="97:9"><if pos:start="91:9" pos:end="97:9">if <condition pos:start="91:12" pos:end="91:20">(<expr pos:start="91:13" pos:end="91:19"><name pos:start="91:13" pos:end="91:14">rs</name> <operator pos:start="91:16" pos:end="91:17">!=</operator> <literal type="number" pos:start="91:19" pos:end="91:19">0</literal></expr>)</condition> <block pos:start="91:22" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:30">

            <expr_stmt pos:start="93:13" pos:end="93:33"><expr pos:start="93:13" pos:end="93:32"><call pos:start="93:13" pos:end="93:32"><name pos:start="93:13" pos:end="93:24">gen_load_gpr</name><argument_list pos:start="93:25" pos:end="93:32">(<argument pos:start="93:26" pos:end="93:27"><expr pos:start="93:26" pos:end="93:27"><name pos:start="93:26" pos:end="93:27">t0</name></expr></argument>, <argument pos:start="93:30" pos:end="93:31"><expr pos:start="93:30" pos:end="93:31"><name pos:start="93:30" pos:end="93:31">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:30"><expr pos:start="95:13" pos:end="95:29"><name pos:start="95:13" pos:end="95:25">bcond_compute</name> <operator pos:start="95:27" pos:end="95:27">=</operator> <literal type="number" pos:start="95:29" pos:end="95:29">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:45"><expr pos:start="99:9" pos:end="99:44"><name pos:start="99:9" pos:end="99:12">btgt</name> <operator pos:start="99:14" pos:end="99:14">=</operator> <name pos:start="99:16" pos:end="99:22"><name pos:start="99:16" pos:end="99:18">ctx</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:22">pc</name></name> <operator pos:start="99:24" pos:end="99:24">+</operator> <name pos:start="99:26" pos:end="99:35">insn_bytes</name> <operator pos:start="99:37" pos:end="99:37">+</operator> <name pos:start="99:39" pos:end="99:44">offset</name></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:15">case <expr pos:start="103:10" pos:end="103:14"><name pos:start="103:10" pos:end="103:14">OPC_J</name></expr>:</case>

    <case pos:start="105:5" pos:end="105:17">case <expr pos:start="105:10" pos:end="105:16"><name pos:start="105:10" pos:end="105:16">OPC_JAL</name></expr>:</case>

    <case pos:start="107:5" pos:end="107:18">case <expr pos:start="107:10" pos:end="107:17"><name pos:start="107:10" pos:end="107:17">OPC_JALX</name></expr>:</case>

        <comment type="block" pos:start="109:9" pos:end="109:31">/* Jump to immediate */</comment>

        <expr_stmt pos:start="111:9" pos:end="111:81"><expr pos:start="111:9" pos:end="111:80"><name pos:start="111:9" pos:end="111:12">btgt</name> <operator pos:start="111:14" pos:end="111:14">=</operator> <operator pos:start="111:16" pos:end="111:16">(</operator><operator pos:start="111:17" pos:end="111:17">(</operator><name pos:start="111:18" pos:end="111:24"><name pos:start="111:18" pos:end="111:20">ctx</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:24">pc</name></name> <operator pos:start="111:26" pos:end="111:26">+</operator> <name pos:start="111:28" pos:end="111:37">insn_bytes</name><operator pos:start="111:38" pos:end="111:38">)</operator> <operator pos:start="111:40" pos:end="111:40">&amp;</operator> <operator pos:start="111:42" pos:end="111:42">(</operator><name pos:start="111:43" pos:end="111:49">int32_t</name><operator pos:start="111:50" pos:end="111:50">)</operator><literal type="number" pos:start="111:51" pos:end="111:60">0xF0000000</literal><operator pos:start="111:61" pos:end="111:61">)</operator> <operator pos:start="111:63" pos:end="111:63">|</operator> <operator pos:start="111:65" pos:end="111:65">(</operator><name pos:start="111:66" pos:end="111:73">uint32_t</name><operator pos:start="111:74" pos:end="111:74">)</operator><name pos:start="111:75" pos:end="111:80">offset</name></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:16">case <expr pos:start="115:10" pos:end="115:15"><name pos:start="115:10" pos:end="115:15">OPC_JR</name></expr>:</case>

    <case pos:start="117:5" pos:end="117:18">case <expr pos:start="117:10" pos:end="117:17"><name pos:start="117:10" pos:end="117:17">OPC_JALR</name></expr>:</case>

    <case pos:start="119:5" pos:end="119:19">case <expr pos:start="119:10" pos:end="119:18"><name pos:start="119:10" pos:end="119:18">OPC_JALRC</name></expr>:</case>

        <comment type="block" pos:start="121:9" pos:end="121:30">/* Jump to register */</comment>

        <if_stmt pos:start="123:9" pos:end="135:9"><if pos:start="123:9" pos:end="135:9">if <condition pos:start="123:12" pos:end="123:40">(<expr pos:start="123:13" pos:end="123:39"><name pos:start="123:13" pos:end="123:18">offset</name> <operator pos:start="123:20" pos:end="123:21">!=</operator> <literal type="number" pos:start="123:23" pos:end="123:23">0</literal> <operator pos:start="123:25" pos:end="123:26">&amp;&amp;</operator> <name pos:start="123:28" pos:end="123:33">offset</name> <operator pos:start="123:35" pos:end="123:36">!=</operator> <literal type="number" pos:start="123:38" pos:end="123:39">16</literal></expr>)</condition> <block pos:start="123:42" pos:end="135:9">{<block_content pos:start="129:13" pos:end="133:21">

            <comment type="block" pos:start="125:13" pos:end="127:38">/* Hint = 0 is JR/JALR, hint 16 is JR.HB/JALR.HB, the

               others are reserved. */</comment>

            <expr_stmt pos:start="129:13" pos:end="129:36"><expr pos:start="129:13" pos:end="129:35"><call pos:start="129:13" pos:end="129:35"><name pos:start="129:13" pos:end="129:22">MIPS_INVAL</name><argument_list pos:start="129:23" pos:end="129:35">(<argument pos:start="129:24" pos:end="129:34"><expr pos:start="129:24" pos:end="129:34"><literal type="string" pos:start="129:24" pos:end="129:34">"jump hint"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:45"><expr pos:start="131:13" pos:end="131:44"><call pos:start="131:13" pos:end="131:44"><name pos:start="131:13" pos:end="131:30">generate_exception</name><argument_list pos:start="131:31" pos:end="131:44">(<argument pos:start="131:32" pos:end="131:34"><expr pos:start="131:32" pos:end="131:34"><name pos:start="131:32" pos:end="131:34">ctx</name></expr></argument>, <argument pos:start="131:37" pos:end="131:43"><expr pos:start="131:37" pos:end="131:43"><name pos:start="131:37" pos:end="131:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="133:13" pos:end="133:21">goto <name pos:start="133:18" pos:end="133:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:34"><expr pos:start="137:9" pos:end="137:33"><call pos:start="137:9" pos:end="137:33"><name pos:start="137:9" pos:end="137:20">gen_load_gpr</name><argument_list pos:start="137:21" pos:end="137:33">(<argument pos:start="137:22" pos:end="137:28"><expr pos:start="137:22" pos:end="137:28"><name pos:start="137:22" pos:end="137:28">btarget</name></expr></argument>, <argument pos:start="137:31" pos:end="137:32"><expr pos:start="137:31" pos:end="137:32"><name pos:start="137:31" pos:end="137:32">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    <default pos:start="141:5" pos:end="141:12">default:</default>

        <expr_stmt pos:start="143:9" pos:end="143:34"><expr pos:start="143:9" pos:end="143:33"><call pos:start="143:9" pos:end="143:33"><name pos:start="143:9" pos:end="143:18">MIPS_INVAL</name><argument_list pos:start="143:19" pos:end="143:33">(<argument pos:start="143:20" pos:end="143:32"><expr pos:start="143:20" pos:end="143:32"><literal type="string" pos:start="143:20" pos:end="143:32">"branch/jump"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:41"><expr pos:start="145:9" pos:end="145:40"><call pos:start="145:9" pos:end="145:40"><name pos:start="145:9" pos:end="145:26">generate_exception</name><argument_list pos:start="145:27" pos:end="145:40">(<argument pos:start="145:28" pos:end="145:30"><expr pos:start="145:28" pos:end="145:30"><name pos:start="145:28" pos:end="145:30">ctx</name></expr></argument>, <argument pos:start="145:33" pos:end="145:39"><expr pos:start="145:33" pos:end="145:39"><name pos:start="145:33" pos:end="145:39">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="147:9" pos:end="147:17">goto <name pos:start="147:14" pos:end="147:16">out</name>;</goto>

    </block_content>}</block></switch>

    <if_stmt pos:start="151:5" pos:end="471:5"><if pos:start="151:5" pos:end="305:5">if <condition pos:start="151:8" pos:end="151:27">(<expr pos:start="151:9" pos:end="151:26"><name pos:start="151:9" pos:end="151:21">bcond_compute</name> <operator pos:start="151:23" pos:end="151:24">==</operator> <literal type="number" pos:start="151:26" pos:end="151:26">0</literal></expr>)</condition> <block pos:start="151:29" pos:end="305:5">{<block_content pos:start="155:9" pos:end="303:9">

        <comment type="block" pos:start="153:9" pos:end="153:41">/* No condition to be computed */</comment>

        <switch pos:start="155:9" pos:end="303:9">switch <condition pos:start="155:16" pos:end="155:20">(<expr pos:start="155:17" pos:end="155:19"><name pos:start="155:17" pos:end="155:19">opc</name></expr>)</condition> <block pos:start="155:22" pos:end="303:9">{<block_content pos:start="157:9" pos:end="301:21">

        <case pos:start="157:9" pos:end="157:21">case <expr pos:start="157:14" pos:end="157:20"><name pos:start="157:14" pos:end="157:20">OPC_BEQ</name></expr>:</case>     <comment type="block" pos:start="157:27" pos:end="157:47">/* rx == rx        */</comment>

        <case pos:start="159:9" pos:end="159:22">case <expr pos:start="159:14" pos:end="159:21"><name pos:start="159:14" pos:end="159:21">OPC_BEQL</name></expr>:</case>    <comment type="block" pos:start="159:27" pos:end="159:47">/* rx == rx likely */</comment>

        <case pos:start="161:9" pos:end="161:22">case <expr pos:start="161:14" pos:end="161:21"><name pos:start="161:14" pos:end="161:21">OPC_BGEZ</name></expr>:</case>    <comment type="block" pos:start="161:27" pos:end="161:47">/* 0 &gt;= 0          */</comment>

        <case pos:start="163:9" pos:end="163:23">case <expr pos:start="163:14" pos:end="163:22"><name pos:start="163:14" pos:end="163:22">OPC_BGEZL</name></expr>:</case>   <comment type="block" pos:start="163:27" pos:end="163:47">/* 0 &gt;= 0 likely   */</comment>

        <case pos:start="165:9" pos:end="165:22">case <expr pos:start="165:14" pos:end="165:21"><name pos:start="165:14" pos:end="165:21">OPC_BLEZ</name></expr>:</case>    <comment type="block" pos:start="165:27" pos:end="165:47">/* 0 &lt;= 0          */</comment>

        <case pos:start="167:9" pos:end="167:23">case <expr pos:start="167:14" pos:end="167:22"><name pos:start="167:14" pos:end="167:22">OPC_BLEZL</name></expr>:</case>   <comment type="block" pos:start="167:27" pos:end="167:47">/* 0 &lt;= 0 likely   */</comment>

            <comment type="block" pos:start="169:13" pos:end="169:29">/* Always take */</comment>

            <expr_stmt pos:start="171:13" pos:end="171:40"><expr pos:start="171:13" pos:end="171:39"><name pos:start="171:13" pos:end="171:23"><name pos:start="171:13" pos:end="171:15">ctx</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:23">hflags</name></name> <operator pos:start="171:25" pos:end="171:26">|=</operator> <name pos:start="171:28" pos:end="171:39">MIPS_HFLAG_B</name></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:34"><expr pos:start="173:13" pos:end="173:33"><call pos:start="173:13" pos:end="173:33"><name pos:start="173:13" pos:end="173:22">MIPS_DEBUG</name><argument_list pos:start="173:23" pos:end="173:33">(<argument pos:start="173:24" pos:end="173:32"><expr pos:start="173:24" pos:end="173:32"><literal type="string" pos:start="173:24" pos:end="173:32">"balways"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="175:13" pos:end="175:18">break;</break>

        <case pos:start="177:9" pos:end="177:24">case <expr pos:start="177:14" pos:end="177:23"><name pos:start="177:14" pos:end="177:23">OPC_BGEZAL</name></expr>:</case>  <comment type="block" pos:start="177:27" pos:end="177:47">/* 0 &gt;= 0          */</comment>

        <case pos:start="179:9" pos:end="179:25">case <expr pos:start="179:14" pos:end="179:24"><name pos:start="179:14" pos:end="179:24">OPC_BGEZALL</name></expr>:</case> <comment type="block" pos:start="179:27" pos:end="179:47">/* 0 &gt;= 0 likely   */</comment>

            <comment type="block" pos:start="181:13" pos:end="181:38">/* Always take and link */</comment>

            <expr_stmt pos:start="183:13" pos:end="183:23"><expr pos:start="183:13" pos:end="183:22"><name pos:start="183:13" pos:end="183:17">blink</name> <operator pos:start="183:19" pos:end="183:19">=</operator> <literal type="number" pos:start="183:21" pos:end="183:22">31</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:40"><expr pos:start="185:13" pos:end="185:39"><name pos:start="185:13" pos:end="185:23"><name pos:start="185:13" pos:end="185:15">ctx</name><operator pos:start="185:16" pos:end="185:17">-&gt;</operator><name pos:start="185:18" pos:end="185:23">hflags</name></name> <operator pos:start="185:25" pos:end="185:26">|=</operator> <name pos:start="185:28" pos:end="185:39">MIPS_HFLAG_B</name></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:43"><expr pos:start="187:13" pos:end="187:42"><call pos:start="187:13" pos:end="187:42"><name pos:start="187:13" pos:end="187:22">MIPS_DEBUG</name><argument_list pos:start="187:23" pos:end="187:42">(<argument pos:start="187:24" pos:end="187:41"><expr pos:start="187:24" pos:end="187:41"><literal type="string" pos:start="187:24" pos:end="187:41">"balways and link"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="189:13" pos:end="189:18">break;</break>

        <case pos:start="191:9" pos:end="191:21">case <expr pos:start="191:14" pos:end="191:20"><name pos:start="191:14" pos:end="191:20">OPC_BNE</name></expr>:</case>     <comment type="block" pos:start="191:27" pos:end="191:47">/* rx != rx        */</comment>

        <case pos:start="193:9" pos:end="193:22">case <expr pos:start="193:14" pos:end="193:21"><name pos:start="193:14" pos:end="193:21">OPC_BGTZ</name></expr>:</case>    <comment type="block" pos:start="193:27" pos:end="193:47">/* 0 &gt; 0           */</comment>

        <case pos:start="195:9" pos:end="195:22">case <expr pos:start="195:14" pos:end="195:21"><name pos:start="195:14" pos:end="195:21">OPC_BLTZ</name></expr>:</case>    <comment type="block" pos:start="195:27" pos:end="195:47">/* 0 &lt; 0           */</comment>

            <comment type="block" pos:start="197:13" pos:end="197:31">/* Treat as NOP. */</comment>

            <expr_stmt pos:start="199:13" pos:end="199:39"><expr pos:start="199:13" pos:end="199:38"><call pos:start="199:13" pos:end="199:38"><name pos:start="199:13" pos:end="199:22">MIPS_DEBUG</name><argument_list pos:start="199:23" pos:end="199:38">(<argument pos:start="199:24" pos:end="199:37"><expr pos:start="199:24" pos:end="199:37"><literal type="string" pos:start="199:24" pos:end="199:37">"bnever (NOP)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="201:13" pos:end="201:21">goto <name pos:start="201:18" pos:end="201:20">out</name>;</goto>

        <case pos:start="203:9" pos:end="203:24">case <expr pos:start="203:14" pos:end="203:23"><name pos:start="203:14" pos:end="203:23">OPC_BLTZAL</name></expr>:</case>  <comment type="block" pos:start="203:27" pos:end="203:47">/* 0 &lt; 0           */</comment>

            <expr_stmt pos:start="205:13" pos:end="205:54"><expr pos:start="205:13" pos:end="205:53"><call pos:start="205:13" pos:end="205:53"><name pos:start="205:13" pos:end="205:27">tcg_gen_movi_tl</name><argument_list pos:start="205:28" pos:end="205:53">(<argument pos:start="205:29" pos:end="205:39"><expr pos:start="205:29" pos:end="205:39"><name pos:start="205:29" pos:end="205:39"><name pos:start="205:29" pos:end="205:35">cpu_gpr</name><index pos:start="205:36" pos:end="205:39">[<expr pos:start="205:37" pos:end="205:38"><literal type="number" pos:start="205:37" pos:end="205:38">31</literal></expr>]</index></name></expr></argument>, <argument pos:start="205:42" pos:end="205:52"><expr pos:start="205:42" pos:end="205:52"><name pos:start="205:42" pos:end="205:48"><name pos:start="205:42" pos:end="205:44">ctx</name><operator pos:start="205:45" pos:end="205:46">-&gt;</operator><name pos:start="205:47" pos:end="205:48">pc</name></name> <operator pos:start="205:50" pos:end="205:50">+</operator> <literal type="number" pos:start="205:52" pos:end="205:52">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:42"><expr pos:start="207:13" pos:end="207:41"><call pos:start="207:13" pos:end="207:41"><name pos:start="207:13" pos:end="207:22">MIPS_DEBUG</name><argument_list pos:start="207:23" pos:end="207:41">(<argument pos:start="207:24" pos:end="207:40"><expr pos:start="207:24" pos:end="207:40"><literal type="string" pos:start="207:24" pos:end="207:40">"bnever and link"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="209:13" pos:end="209:21">goto <name pos:start="209:18" pos:end="209:20">out</name>;</goto>

        <case pos:start="211:9" pos:end="211:25">case <expr pos:start="211:14" pos:end="211:24"><name pos:start="211:14" pos:end="211:24">OPC_BLTZALL</name></expr>:</case> <comment type="block" pos:start="211:27" pos:end="211:44">/* 0 &lt; 0 likely */</comment>

            <expr_stmt pos:start="213:13" pos:end="213:54"><expr pos:start="213:13" pos:end="213:53"><call pos:start="213:13" pos:end="213:53"><name pos:start="213:13" pos:end="213:27">tcg_gen_movi_tl</name><argument_list pos:start="213:28" pos:end="213:53">(<argument pos:start="213:29" pos:end="213:39"><expr pos:start="213:29" pos:end="213:39"><name pos:start="213:29" pos:end="213:39"><name pos:start="213:29" pos:end="213:35">cpu_gpr</name><index pos:start="213:36" pos:end="213:39">[<expr pos:start="213:37" pos:end="213:38"><literal type="number" pos:start="213:37" pos:end="213:38">31</literal></expr>]</index></name></expr></argument>, <argument pos:start="213:42" pos:end="213:52"><expr pos:start="213:42" pos:end="213:52"><name pos:start="213:42" pos:end="213:48"><name pos:start="213:42" pos:end="213:44">ctx</name><operator pos:start="213:45" pos:end="213:46">-&gt;</operator><name pos:start="213:47" pos:end="213:48">pc</name></name> <operator pos:start="213:50" pos:end="213:50">+</operator> <literal type="number" pos:start="213:52" pos:end="213:52">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="215:13" pos:end="215:56">/* Skip the instruction in the delay slot */</comment>

            <expr_stmt pos:start="217:13" pos:end="217:48"><expr pos:start="217:13" pos:end="217:47"><call pos:start="217:13" pos:end="217:47"><name pos:start="217:13" pos:end="217:22">MIPS_DEBUG</name><argument_list pos:start="217:23" pos:end="217:47">(<argument pos:start="217:24" pos:end="217:46"><expr pos:start="217:24" pos:end="217:46"><literal type="string" pos:start="217:24" pos:end="217:46">"bnever, link and skip"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:25"><expr pos:start="219:13" pos:end="219:24"><name pos:start="219:13" pos:end="219:19"><name pos:start="219:13" pos:end="219:15">ctx</name><operator pos:start="219:16" pos:end="219:17">-&gt;</operator><name pos:start="219:18" pos:end="219:19">pc</name></name> <operator pos:start="219:21" pos:end="219:22">+=</operator> <literal type="number" pos:start="219:24" pos:end="219:24">4</literal></expr>;</expr_stmt>

            <goto pos:start="221:13" pos:end="221:21">goto <name pos:start="221:18" pos:end="221:20">out</name>;</goto>

        <case pos:start="223:9" pos:end="223:22">case <expr pos:start="223:14" pos:end="223:21"><name pos:start="223:14" pos:end="223:21">OPC_BNEL</name></expr>:</case>    <comment type="block" pos:start="223:27" pos:end="223:47">/* rx != rx likely */</comment>

        <case pos:start="225:9" pos:end="225:23">case <expr pos:start="225:14" pos:end="225:22"><name pos:start="225:14" pos:end="225:22">OPC_BGTZL</name></expr>:</case>   <comment type="block" pos:start="225:27" pos:end="225:44">/* 0 &gt; 0 likely */</comment>

        <case pos:start="227:9" pos:end="227:23">case <expr pos:start="227:14" pos:end="227:22"><name pos:start="227:14" pos:end="227:22">OPC_BLTZL</name></expr>:</case>   <comment type="block" pos:start="227:27" pos:end="227:44">/* 0 &lt; 0 likely */</comment>

            <comment type="block" pos:start="229:13" pos:end="229:56">/* Skip the instruction in the delay slot */</comment>

            <expr_stmt pos:start="231:13" pos:end="231:42"><expr pos:start="231:13" pos:end="231:41"><call pos:start="231:13" pos:end="231:41"><name pos:start="231:13" pos:end="231:22">MIPS_DEBUG</name><argument_list pos:start="231:23" pos:end="231:41">(<argument pos:start="231:24" pos:end="231:40"><expr pos:start="231:24" pos:end="231:40"><literal type="string" pos:start="231:24" pos:end="231:40">"bnever and skip"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:25"><expr pos:start="233:13" pos:end="233:24"><name pos:start="233:13" pos:end="233:19"><name pos:start="233:13" pos:end="233:15">ctx</name><operator pos:start="233:16" pos:end="233:17">-&gt;</operator><name pos:start="233:18" pos:end="233:19">pc</name></name> <operator pos:start="233:21" pos:end="233:22">+=</operator> <literal type="number" pos:start="233:24" pos:end="233:24">4</literal></expr>;</expr_stmt>

            <goto pos:start="235:13" pos:end="235:21">goto <name pos:start="235:18" pos:end="235:20">out</name>;</goto>

        <case pos:start="237:9" pos:end="237:19">case <expr pos:start="237:14" pos:end="237:18"><name pos:start="237:14" pos:end="237:18">OPC_J</name></expr>:</case>

            <expr_stmt pos:start="239:13" pos:end="239:40"><expr pos:start="239:13" pos:end="239:39"><name pos:start="239:13" pos:end="239:23"><name pos:start="239:13" pos:end="239:15">ctx</name><operator pos:start="239:16" pos:end="239:17">-&gt;</operator><name pos:start="239:18" pos:end="239:23">hflags</name></name> <operator pos:start="239:25" pos:end="239:26">|=</operator> <name pos:start="239:28" pos:end="239:39">MIPS_HFLAG_B</name></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:49"><expr pos:start="241:13" pos:end="241:48"><call pos:start="241:13" pos:end="241:48"><name pos:start="241:13" pos:end="241:22">MIPS_DEBUG</name><argument_list pos:start="241:23" pos:end="241:48">(<argument pos:start="241:24" pos:end="241:41"><expr pos:start="241:24" pos:end="241:41"><literal type="string" pos:start="241:24" pos:end="241:27">"j "</literal> <name pos:start="241:29" pos:end="241:41">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="241:44" pos:end="241:47"><expr pos:start="241:44" pos:end="241:47"><name pos:start="241:44" pos:end="241:47">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="243:13" pos:end="243:18">break;</break>

        <case pos:start="245:9" pos:end="245:22">case <expr pos:start="245:14" pos:end="245:21"><name pos:start="245:14" pos:end="245:21">OPC_JALX</name></expr>:</case>

            <expr_stmt pos:start="247:13" pos:end="247:41"><expr pos:start="247:13" pos:end="247:40"><name pos:start="247:13" pos:end="247:23"><name pos:start="247:13" pos:end="247:15">ctx</name><operator pos:start="247:16" pos:end="247:17">-&gt;</operator><name pos:start="247:18" pos:end="247:23">hflags</name></name> <operator pos:start="247:25" pos:end="247:26">|=</operator> <name pos:start="247:28" pos:end="247:40">MIPS_HFLAG_BX</name></expr>;</expr_stmt>

            <comment type="block" pos:start="249:13" pos:end="249:29">/* Fallthrough */</comment>

        <case pos:start="251:9" pos:end="251:21">case <expr pos:start="251:14" pos:end="251:20"><name pos:start="251:14" pos:end="251:20">OPC_JAL</name></expr>:</case>

            <expr_stmt pos:start="253:13" pos:end="253:23"><expr pos:start="253:13" pos:end="253:22"><name pos:start="253:13" pos:end="253:17">blink</name> <operator pos:start="253:19" pos:end="253:19">=</operator> <literal type="number" pos:start="253:21" pos:end="253:22">31</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:40"><expr pos:start="255:13" pos:end="255:39"><name pos:start="255:13" pos:end="255:23"><name pos:start="255:13" pos:end="255:15">ctx</name><operator pos:start="255:16" pos:end="255:17">-&gt;</operator><name pos:start="255:18" pos:end="255:23">hflags</name></name> <operator pos:start="255:25" pos:end="255:26">|=</operator> <name pos:start="255:28" pos:end="255:39">MIPS_HFLAG_B</name></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="261:48"><expr pos:start="257:13" pos:end="261:47"><name pos:start="257:13" pos:end="257:23"><name pos:start="257:13" pos:end="257:15">ctx</name><operator pos:start="257:16" pos:end="257:17">-&gt;</operator><name pos:start="257:18" pos:end="257:23">hflags</name></name> <operator pos:start="257:25" pos:end="257:26">|=</operator> <operator pos:start="257:28" pos:end="257:28">(</operator><ternary pos:start="257:29" pos:end="261:46"><condition pos:start="257:29" pos:end="259:29"><expr pos:start="257:29" pos:end="257:56"><name pos:start="257:29" pos:end="257:39"><name pos:start="257:29" pos:end="257:31">ctx</name><operator pos:start="257:32" pos:end="257:33">-&gt;</operator><name pos:start="257:34" pos:end="257:39">hflags</name></name> <operator pos:start="257:41" pos:end="257:41">&amp;</operator> <name pos:start="257:43" pos:end="257:56">MIPS_HFLAG_M16</name></expr>

                            ?</condition><then pos:start="259:31" pos:end="259:46"> <expr pos:start="259:31" pos:end="259:46"><name pos:start="259:31" pos:end="259:46">MIPS_HFLAG_BDS16</name></expr>

                            </then><else pos:start="261:29" pos:end="261:46">: <expr pos:start="261:31" pos:end="261:46"><name pos:start="261:31" pos:end="261:46">MIPS_HFLAG_BDS32</name></expr></else></ternary><operator pos:start="261:47" pos:end="261:47">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:51"><expr pos:start="263:13" pos:end="263:50"><call pos:start="263:13" pos:end="263:50"><name pos:start="263:13" pos:end="263:22">MIPS_DEBUG</name><argument_list pos:start="263:23" pos:end="263:50">(<argument pos:start="263:24" pos:end="263:43"><expr pos:start="263:24" pos:end="263:43"><literal type="string" pos:start="263:24" pos:end="263:29">"jal "</literal> <name pos:start="263:31" pos:end="263:43">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="263:46" pos:end="263:49"><expr pos:start="263:46" pos:end="263:49"><name pos:start="263:46" pos:end="263:49">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="265:13" pos:end="265:18">break;</break>

        <case pos:start="267:9" pos:end="267:20">case <expr pos:start="267:14" pos:end="267:19"><name pos:start="267:14" pos:end="267:19">OPC_JR</name></expr>:</case>

            <expr_stmt pos:start="269:13" pos:end="269:41"><expr pos:start="269:13" pos:end="269:40"><name pos:start="269:13" pos:end="269:23"><name pos:start="269:13" pos:end="269:15">ctx</name><operator pos:start="269:16" pos:end="269:17">-&gt;</operator><name pos:start="269:18" pos:end="269:23">hflags</name></name> <operator pos:start="269:25" pos:end="269:26">|=</operator> <name pos:start="269:28" pos:end="269:40">MIPS_HFLAG_BR</name></expr>;</expr_stmt>

            <if_stmt pos:start="271:13" pos:end="273:48"><if pos:start="271:13" pos:end="273:48">if <condition pos:start="271:16" pos:end="271:45">(<expr pos:start="271:17" pos:end="271:44"><name pos:start="271:17" pos:end="271:27"><name pos:start="271:17" pos:end="271:19">ctx</name><operator pos:start="271:20" pos:end="271:21">-&gt;</operator><name pos:start="271:22" pos:end="271:27">hflags</name></name> <operator pos:start="271:29" pos:end="271:29">&amp;</operator> <name pos:start="271:31" pos:end="271:44">MIPS_HFLAG_M16</name></expr>)</condition><block type="pseudo" pos:start="273:17" pos:end="273:48"><block_content pos:start="273:17" pos:end="273:48">

                <expr_stmt pos:start="273:17" pos:end="273:48"><expr pos:start="273:17" pos:end="273:47"><name pos:start="273:17" pos:end="273:27"><name pos:start="273:17" pos:end="273:19">ctx</name><operator pos:start="273:20" pos:end="273:21">-&gt;</operator><name pos:start="273:22" pos:end="273:27">hflags</name></name> <operator pos:start="273:29" pos:end="273:30">|=</operator> <name pos:start="273:32" pos:end="273:47">MIPS_HFLAG_BDS16</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:46"><expr pos:start="275:13" pos:end="275:45"><call pos:start="275:13" pos:end="275:45"><name pos:start="275:13" pos:end="275:22">MIPS_DEBUG</name><argument_list pos:start="275:23" pos:end="275:45">(<argument pos:start="275:24" pos:end="275:30"><expr pos:start="275:24" pos:end="275:30"><literal type="string" pos:start="275:24" pos:end="275:30">"jr %s"</literal></expr></argument>, <argument pos:start="275:33" pos:end="275:44"><expr pos:start="275:33" pos:end="275:44"><name pos:start="275:33" pos:end="275:44"><name pos:start="275:33" pos:end="275:40">regnames</name><index pos:start="275:41" pos:end="275:44">[<expr pos:start="275:42" pos:end="275:43"><name pos:start="275:42" pos:end="275:43">rs</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="277:13" pos:end="277:18">break;</break>

        <case pos:start="279:9" pos:end="279:22">case <expr pos:start="279:14" pos:end="279:21"><name pos:start="279:14" pos:end="279:21">OPC_JALR</name></expr>:</case>

        <case pos:start="281:9" pos:end="281:23">case <expr pos:start="281:14" pos:end="281:22"><name pos:start="281:14" pos:end="281:22">OPC_JALRC</name></expr>:</case>

            <expr_stmt pos:start="283:13" pos:end="283:23"><expr pos:start="283:13" pos:end="283:22"><name pos:start="283:13" pos:end="283:17">blink</name> <operator pos:start="283:19" pos:end="283:19">=</operator> <name pos:start="283:21" pos:end="283:22">rt</name></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:41"><expr pos:start="285:13" pos:end="285:40"><name pos:start="285:13" pos:end="285:23"><name pos:start="285:13" pos:end="285:15">ctx</name><operator pos:start="285:16" pos:end="285:17">-&gt;</operator><name pos:start="285:18" pos:end="285:23">hflags</name></name> <operator pos:start="285:25" pos:end="285:26">|=</operator> <name pos:start="285:28" pos:end="285:40">MIPS_HFLAG_BR</name></expr>;</expr_stmt>

            <if_stmt pos:start="287:13" pos:end="289:48"><if pos:start="287:13" pos:end="289:48">if <condition pos:start="287:16" pos:end="287:45">(<expr pos:start="287:17" pos:end="287:44"><name pos:start="287:17" pos:end="287:27"><name pos:start="287:17" pos:end="287:19">ctx</name><operator pos:start="287:20" pos:end="287:21">-&gt;</operator><name pos:start="287:22" pos:end="287:27">hflags</name></name> <operator pos:start="287:29" pos:end="287:29">&amp;</operator> <name pos:start="287:31" pos:end="287:44">MIPS_HFLAG_M16</name></expr>)</condition><block type="pseudo" pos:start="289:17" pos:end="289:48"><block_content pos:start="289:17" pos:end="289:48">

                <expr_stmt pos:start="289:17" pos:end="289:48"><expr pos:start="289:17" pos:end="289:47"><name pos:start="289:17" pos:end="289:27"><name pos:start="289:17" pos:end="289:19">ctx</name><operator pos:start="289:20" pos:end="289:21">-&gt;</operator><name pos:start="289:22" pos:end="289:27">hflags</name></name> <operator pos:start="289:29" pos:end="289:30">|=</operator> <name pos:start="289:32" pos:end="289:47">MIPS_HFLAG_BDS16</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:66"><expr pos:start="291:13" pos:end="291:65"><call pos:start="291:13" pos:end="291:65"><name pos:start="291:13" pos:end="291:22">MIPS_DEBUG</name><argument_list pos:start="291:23" pos:end="291:65">(<argument pos:start="291:24" pos:end="291:36"><expr pos:start="291:24" pos:end="291:36"><literal type="string" pos:start="291:24" pos:end="291:36">"jalr %s, %s"</literal></expr></argument>, <argument pos:start="291:39" pos:end="291:50"><expr pos:start="291:39" pos:end="291:50"><name pos:start="291:39" pos:end="291:50"><name pos:start="291:39" pos:end="291:46">regnames</name><index pos:start="291:47" pos:end="291:50">[<expr pos:start="291:48" pos:end="291:49"><name pos:start="291:48" pos:end="291:49">rt</name></expr>]</index></name></expr></argument>, <argument pos:start="291:53" pos:end="291:64"><expr pos:start="291:53" pos:end="291:64"><name pos:start="291:53" pos:end="291:64"><name pos:start="291:53" pos:end="291:60">regnames</name><index pos:start="291:61" pos:end="291:64">[<expr pos:start="291:62" pos:end="291:63"><name pos:start="291:62" pos:end="291:63">rs</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="293:13" pos:end="293:18">break;</break>

        <default pos:start="295:9" pos:end="295:16">default:</default>

            <expr_stmt pos:start="297:13" pos:end="297:38"><expr pos:start="297:13" pos:end="297:37"><call pos:start="297:13" pos:end="297:37"><name pos:start="297:13" pos:end="297:22">MIPS_INVAL</name><argument_list pos:start="297:23" pos:end="297:37">(<argument pos:start="297:24" pos:end="297:36"><expr pos:start="297:24" pos:end="297:36"><literal type="string" pos:start="297:24" pos:end="297:36">"branch/jump"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:45"><expr pos:start="299:13" pos:end="299:44"><call pos:start="299:13" pos:end="299:44"><name pos:start="299:13" pos:end="299:30">generate_exception</name><argument_list pos:start="299:31" pos:end="299:44">(<argument pos:start="299:32" pos:end="299:34"><expr pos:start="299:32" pos:end="299:34"><name pos:start="299:32" pos:end="299:34">ctx</name></expr></argument>, <argument pos:start="299:37" pos:end="299:43"><expr pos:start="299:37" pos:end="299:43"><name pos:start="299:37" pos:end="299:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="301:13" pos:end="301:21">goto <name pos:start="301:18" pos:end="301:20">out</name>;</goto>

        </block_content>}</block></switch>

    </block_content>}</block></if> <else pos:start="305:7" pos:end="471:5">else <block pos:start="305:12" pos:end="471:5">{<block_content pos:start="307:9" pos:end="469:9">

        <switch pos:start="307:9" pos:end="469:9">switch <condition pos:start="307:16" pos:end="307:20">(<expr pos:start="307:17" pos:end="307:19"><name pos:start="307:17" pos:end="307:19">opc</name></expr>)</condition> <block pos:start="307:22" pos:end="469:9">{<block_content pos:start="309:9" pos:end="467:21">

        <case pos:start="309:9" pos:end="309:21">case <expr pos:start="309:14" pos:end="309:20"><name pos:start="309:14" pos:end="309:20">OPC_BEQ</name></expr>:</case>

            <expr_stmt pos:start="311:13" pos:end="311:59"><expr pos:start="311:13" pos:end="311:58"><call pos:start="311:13" pos:end="311:58"><name pos:start="311:13" pos:end="311:30">tcg_gen_setcond_tl</name><argument_list pos:start="311:31" pos:end="311:58">(<argument pos:start="311:32" pos:end="311:42"><expr pos:start="311:32" pos:end="311:42"><name pos:start="311:32" pos:end="311:42">TCG_COND_EQ</name></expr></argument>, <argument pos:start="311:45" pos:end="311:49"><expr pos:start="311:45" pos:end="311:49"><name pos:start="311:45" pos:end="311:49">bcond</name></expr></argument>, <argument pos:start="311:52" pos:end="311:53"><expr pos:start="311:52" pos:end="311:53"><name pos:start="311:52" pos:end="311:53">t0</name></expr></argument>, <argument pos:start="311:56" pos:end="311:57"><expr pos:start="311:56" pos:end="311:57"><name pos:start="311:56" pos:end="311:57">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="313:13" pos:end="315:57"><expr pos:start="313:13" pos:end="315:56"><call pos:start="313:13" pos:end="315:56"><name pos:start="313:13" pos:end="313:22">MIPS_DEBUG</name><argument_list pos:start="313:23" pos:end="315:56">(<argument pos:start="313:24" pos:end="313:51"><expr pos:start="313:24" pos:end="313:51"><literal type="string" pos:start="313:24" pos:end="313:37">"beq %s, %s, "</literal> <name pos:start="313:39" pos:end="313:51">TARGET_FMT_lx</name></expr></argument>,

                       <argument pos:start="315:24" pos:end="315:35"><expr pos:start="315:24" pos:end="315:35"><name pos:start="315:24" pos:end="315:35"><name pos:start="315:24" pos:end="315:31">regnames</name><index pos:start="315:32" pos:end="315:35">[<expr pos:start="315:33" pos:end="315:34"><name pos:start="315:33" pos:end="315:34">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="315:38" pos:end="315:49"><expr pos:start="315:38" pos:end="315:49"><name pos:start="315:38" pos:end="315:49"><name pos:start="315:38" pos:end="315:45">regnames</name><index pos:start="315:46" pos:end="315:49">[<expr pos:start="315:47" pos:end="315:48"><name pos:start="315:47" pos:end="315:48">rt</name></expr>]</index></name></expr></argument>, <argument pos:start="315:52" pos:end="315:55"><expr pos:start="315:52" pos:end="315:55"><name pos:start="315:52" pos:end="315:55">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="317:13" pos:end="317:28">goto <name pos:start="317:18" pos:end="317:27">not_likely</name>;</goto>

        <case pos:start="319:9" pos:end="319:22">case <expr pos:start="319:14" pos:end="319:21"><name pos:start="319:14" pos:end="319:21">OPC_BEQL</name></expr>:</case>

            <expr_stmt pos:start="321:13" pos:end="321:59"><expr pos:start="321:13" pos:end="321:58"><call pos:start="321:13" pos:end="321:58"><name pos:start="321:13" pos:end="321:30">tcg_gen_setcond_tl</name><argument_list pos:start="321:31" pos:end="321:58">(<argument pos:start="321:32" pos:end="321:42"><expr pos:start="321:32" pos:end="321:42"><name pos:start="321:32" pos:end="321:42">TCG_COND_EQ</name></expr></argument>, <argument pos:start="321:45" pos:end="321:49"><expr pos:start="321:45" pos:end="321:49"><name pos:start="321:45" pos:end="321:49">bcond</name></expr></argument>, <argument pos:start="321:52" pos:end="321:53"><expr pos:start="321:52" pos:end="321:53"><name pos:start="321:52" pos:end="321:53">t0</name></expr></argument>, <argument pos:start="321:56" pos:end="321:57"><expr pos:start="321:56" pos:end="321:57"><name pos:start="321:56" pos:end="321:57">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="325:57"><expr pos:start="323:13" pos:end="325:56"><call pos:start="323:13" pos:end="325:56"><name pos:start="323:13" pos:end="323:22">MIPS_DEBUG</name><argument_list pos:start="323:23" pos:end="325:56">(<argument pos:start="323:24" pos:end="323:52"><expr pos:start="323:24" pos:end="323:52"><literal type="string" pos:start="323:24" pos:end="323:38">"beql %s, %s, "</literal> <name pos:start="323:40" pos:end="323:52">TARGET_FMT_lx</name></expr></argument>,

                       <argument pos:start="325:24" pos:end="325:35"><expr pos:start="325:24" pos:end="325:35"><name pos:start="325:24" pos:end="325:35"><name pos:start="325:24" pos:end="325:31">regnames</name><index pos:start="325:32" pos:end="325:35">[<expr pos:start="325:33" pos:end="325:34"><name pos:start="325:33" pos:end="325:34">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="325:38" pos:end="325:49"><expr pos:start="325:38" pos:end="325:49"><name pos:start="325:38" pos:end="325:49"><name pos:start="325:38" pos:end="325:45">regnames</name><index pos:start="325:46" pos:end="325:49">[<expr pos:start="325:47" pos:end="325:48"><name pos:start="325:47" pos:end="325:48">rt</name></expr>]</index></name></expr></argument>, <argument pos:start="325:52" pos:end="325:55"><expr pos:start="325:52" pos:end="325:55"><name pos:start="325:52" pos:end="325:55">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="327:13" pos:end="327:24">goto <name pos:start="327:18" pos:end="327:23">likely</name>;</goto>

        <case pos:start="329:9" pos:end="329:21">case <expr pos:start="329:14" pos:end="329:20"><name pos:start="329:14" pos:end="329:20">OPC_BNE</name></expr>:</case>

            <expr_stmt pos:start="331:13" pos:end="331:59"><expr pos:start="331:13" pos:end="331:58"><call pos:start="331:13" pos:end="331:58"><name pos:start="331:13" pos:end="331:30">tcg_gen_setcond_tl</name><argument_list pos:start="331:31" pos:end="331:58">(<argument pos:start="331:32" pos:end="331:42"><expr pos:start="331:32" pos:end="331:42"><name pos:start="331:32" pos:end="331:42">TCG_COND_NE</name></expr></argument>, <argument pos:start="331:45" pos:end="331:49"><expr pos:start="331:45" pos:end="331:49"><name pos:start="331:45" pos:end="331:49">bcond</name></expr></argument>, <argument pos:start="331:52" pos:end="331:53"><expr pos:start="331:52" pos:end="331:53"><name pos:start="331:52" pos:end="331:53">t0</name></expr></argument>, <argument pos:start="331:56" pos:end="331:57"><expr pos:start="331:56" pos:end="331:57"><name pos:start="331:56" pos:end="331:57">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="335:57"><expr pos:start="333:13" pos:end="335:56"><call pos:start="333:13" pos:end="335:56"><name pos:start="333:13" pos:end="333:22">MIPS_DEBUG</name><argument_list pos:start="333:23" pos:end="335:56">(<argument pos:start="333:24" pos:end="333:51"><expr pos:start="333:24" pos:end="333:51"><literal type="string" pos:start="333:24" pos:end="333:37">"bne %s, %s, "</literal> <name pos:start="333:39" pos:end="333:51">TARGET_FMT_lx</name></expr></argument>,

                       <argument pos:start="335:24" pos:end="335:35"><expr pos:start="335:24" pos:end="335:35"><name pos:start="335:24" pos:end="335:35"><name pos:start="335:24" pos:end="335:31">regnames</name><index pos:start="335:32" pos:end="335:35">[<expr pos:start="335:33" pos:end="335:34"><name pos:start="335:33" pos:end="335:34">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="335:38" pos:end="335:49"><expr pos:start="335:38" pos:end="335:49"><name pos:start="335:38" pos:end="335:49"><name pos:start="335:38" pos:end="335:45">regnames</name><index pos:start="335:46" pos:end="335:49">[<expr pos:start="335:47" pos:end="335:48"><name pos:start="335:47" pos:end="335:48">rt</name></expr>]</index></name></expr></argument>, <argument pos:start="335:52" pos:end="335:55"><expr pos:start="335:52" pos:end="335:55"><name pos:start="335:52" pos:end="335:55">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="337:13" pos:end="337:28">goto <name pos:start="337:18" pos:end="337:27">not_likely</name>;</goto>

        <case pos:start="339:9" pos:end="339:22">case <expr pos:start="339:14" pos:end="339:21"><name pos:start="339:14" pos:end="339:21">OPC_BNEL</name></expr>:</case>

            <expr_stmt pos:start="341:13" pos:end="341:59"><expr pos:start="341:13" pos:end="341:58"><call pos:start="341:13" pos:end="341:58"><name pos:start="341:13" pos:end="341:30">tcg_gen_setcond_tl</name><argument_list pos:start="341:31" pos:end="341:58">(<argument pos:start="341:32" pos:end="341:42"><expr pos:start="341:32" pos:end="341:42"><name pos:start="341:32" pos:end="341:42">TCG_COND_NE</name></expr></argument>, <argument pos:start="341:45" pos:end="341:49"><expr pos:start="341:45" pos:end="341:49"><name pos:start="341:45" pos:end="341:49">bcond</name></expr></argument>, <argument pos:start="341:52" pos:end="341:53"><expr pos:start="341:52" pos:end="341:53"><name pos:start="341:52" pos:end="341:53">t0</name></expr></argument>, <argument pos:start="341:56" pos:end="341:57"><expr pos:start="341:56" pos:end="341:57"><name pos:start="341:56" pos:end="341:57">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="345:57"><expr pos:start="343:13" pos:end="345:56"><call pos:start="343:13" pos:end="345:56"><name pos:start="343:13" pos:end="343:22">MIPS_DEBUG</name><argument_list pos:start="343:23" pos:end="345:56">(<argument pos:start="343:24" pos:end="343:52"><expr pos:start="343:24" pos:end="343:52"><literal type="string" pos:start="343:24" pos:end="343:38">"bnel %s, %s, "</literal> <name pos:start="343:40" pos:end="343:52">TARGET_FMT_lx</name></expr></argument>,

                       <argument pos:start="345:24" pos:end="345:35"><expr pos:start="345:24" pos:end="345:35"><name pos:start="345:24" pos:end="345:35"><name pos:start="345:24" pos:end="345:31">regnames</name><index pos:start="345:32" pos:end="345:35">[<expr pos:start="345:33" pos:end="345:34"><name pos:start="345:33" pos:end="345:34">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="345:38" pos:end="345:49"><expr pos:start="345:38" pos:end="345:49"><name pos:start="345:38" pos:end="345:49"><name pos:start="345:38" pos:end="345:45">regnames</name><index pos:start="345:46" pos:end="345:49">[<expr pos:start="345:47" pos:end="345:48"><name pos:start="345:47" pos:end="345:48">rt</name></expr>]</index></name></expr></argument>, <argument pos:start="345:52" pos:end="345:55"><expr pos:start="345:52" pos:end="345:55"><name pos:start="345:52" pos:end="345:55">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="347:13" pos:end="347:24">goto <name pos:start="347:18" pos:end="347:23">likely</name>;</goto>

        <case pos:start="349:9" pos:end="349:22">case <expr pos:start="349:14" pos:end="349:21"><name pos:start="349:14" pos:end="349:21">OPC_BGEZ</name></expr>:</case>

            <expr_stmt pos:start="351:13" pos:end="351:59"><expr pos:start="351:13" pos:end="351:58"><call pos:start="351:13" pos:end="351:58"><name pos:start="351:13" pos:end="351:31">tcg_gen_setcondi_tl</name><argument_list pos:start="351:32" pos:end="351:58">(<argument pos:start="351:33" pos:end="351:43"><expr pos:start="351:33" pos:end="351:43"><name pos:start="351:33" pos:end="351:43">TCG_COND_GE</name></expr></argument>, <argument pos:start="351:46" pos:end="351:50"><expr pos:start="351:46" pos:end="351:50"><name pos:start="351:46" pos:end="351:50">bcond</name></expr></argument>, <argument pos:start="351:53" pos:end="351:54"><expr pos:start="351:53" pos:end="351:54"><name pos:start="351:53" pos:end="351:54">t0</name></expr></argument>, <argument pos:start="351:57" pos:end="351:57"><expr pos:start="351:57" pos:end="351:57"><literal type="number" pos:start="351:57" pos:end="351:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:70"><expr pos:start="353:13" pos:end="353:69"><call pos:start="353:13" pos:end="353:69"><name pos:start="353:13" pos:end="353:22">MIPS_DEBUG</name><argument_list pos:start="353:23" pos:end="353:69">(<argument pos:start="353:24" pos:end="353:48"><expr pos:start="353:24" pos:end="353:48"><literal type="string" pos:start="353:24" pos:end="353:34">"bgez %s, "</literal> <name pos:start="353:36" pos:end="353:48">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="353:51" pos:end="353:62"><expr pos:start="353:51" pos:end="353:62"><name pos:start="353:51" pos:end="353:62"><name pos:start="353:51" pos:end="353:58">regnames</name><index pos:start="353:59" pos:end="353:62">[<expr pos:start="353:60" pos:end="353:61"><name pos:start="353:60" pos:end="353:61">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="353:65" pos:end="353:68"><expr pos:start="353:65" pos:end="353:68"><name pos:start="353:65" pos:end="353:68">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="355:13" pos:end="355:28">goto <name pos:start="355:18" pos:end="355:27">not_likely</name>;</goto>

        <case pos:start="357:9" pos:end="357:23">case <expr pos:start="357:14" pos:end="357:22"><name pos:start="357:14" pos:end="357:22">OPC_BGEZL</name></expr>:</case>

            <expr_stmt pos:start="359:13" pos:end="359:59"><expr pos:start="359:13" pos:end="359:58"><call pos:start="359:13" pos:end="359:58"><name pos:start="359:13" pos:end="359:31">tcg_gen_setcondi_tl</name><argument_list pos:start="359:32" pos:end="359:58">(<argument pos:start="359:33" pos:end="359:43"><expr pos:start="359:33" pos:end="359:43"><name pos:start="359:33" pos:end="359:43">TCG_COND_GE</name></expr></argument>, <argument pos:start="359:46" pos:end="359:50"><expr pos:start="359:46" pos:end="359:50"><name pos:start="359:46" pos:end="359:50">bcond</name></expr></argument>, <argument pos:start="359:53" pos:end="359:54"><expr pos:start="359:53" pos:end="359:54"><name pos:start="359:53" pos:end="359:54">t0</name></expr></argument>, <argument pos:start="359:57" pos:end="359:57"><expr pos:start="359:57" pos:end="359:57"><literal type="number" pos:start="359:57" pos:end="359:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:71"><expr pos:start="361:13" pos:end="361:70"><call pos:start="361:13" pos:end="361:70"><name pos:start="361:13" pos:end="361:22">MIPS_DEBUG</name><argument_list pos:start="361:23" pos:end="361:70">(<argument pos:start="361:24" pos:end="361:49"><expr pos:start="361:24" pos:end="361:49"><literal type="string" pos:start="361:24" pos:end="361:35">"bgezl %s, "</literal> <name pos:start="361:37" pos:end="361:49">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="361:52" pos:end="361:63"><expr pos:start="361:52" pos:end="361:63"><name pos:start="361:52" pos:end="361:63"><name pos:start="361:52" pos:end="361:59">regnames</name><index pos:start="361:60" pos:end="361:63">[<expr pos:start="361:61" pos:end="361:62"><name pos:start="361:61" pos:end="361:62">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="361:66" pos:end="361:69"><expr pos:start="361:66" pos:end="361:69"><name pos:start="361:66" pos:end="361:69">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="363:13" pos:end="363:24">goto <name pos:start="363:18" pos:end="363:23">likely</name>;</goto>

        <case pos:start="365:9" pos:end="365:24">case <expr pos:start="365:14" pos:end="365:23"><name pos:start="365:14" pos:end="365:23">OPC_BGEZAL</name></expr>:</case>

            <expr_stmt pos:start="367:13" pos:end="367:59"><expr pos:start="367:13" pos:end="367:58"><call pos:start="367:13" pos:end="367:58"><name pos:start="367:13" pos:end="367:31">tcg_gen_setcondi_tl</name><argument_list pos:start="367:32" pos:end="367:58">(<argument pos:start="367:33" pos:end="367:43"><expr pos:start="367:33" pos:end="367:43"><name pos:start="367:33" pos:end="367:43">TCG_COND_GE</name></expr></argument>, <argument pos:start="367:46" pos:end="367:50"><expr pos:start="367:46" pos:end="367:50"><name pos:start="367:46" pos:end="367:50">bcond</name></expr></argument>, <argument pos:start="367:53" pos:end="367:54"><expr pos:start="367:53" pos:end="367:54"><name pos:start="367:53" pos:end="367:54">t0</name></expr></argument>, <argument pos:start="367:57" pos:end="367:57"><expr pos:start="367:57" pos:end="367:57"><literal type="number" pos:start="367:57" pos:end="367:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:72"><expr pos:start="369:13" pos:end="369:71"><call pos:start="369:13" pos:end="369:71"><name pos:start="369:13" pos:end="369:22">MIPS_DEBUG</name><argument_list pos:start="369:23" pos:end="369:71">(<argument pos:start="369:24" pos:end="369:50"><expr pos:start="369:24" pos:end="369:50"><literal type="string" pos:start="369:24" pos:end="369:36">"bgezal %s, "</literal> <name pos:start="369:38" pos:end="369:50">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="369:53" pos:end="369:64"><expr pos:start="369:53" pos:end="369:64"><name pos:start="369:53" pos:end="369:64"><name pos:start="369:53" pos:end="369:60">regnames</name><index pos:start="369:61" pos:end="369:64">[<expr pos:start="369:62" pos:end="369:63"><name pos:start="369:62" pos:end="369:63">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="369:67" pos:end="369:70"><expr pos:start="369:67" pos:end="369:70"><name pos:start="369:67" pos:end="369:70">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:23"><expr pos:start="371:13" pos:end="371:22"><name pos:start="371:13" pos:end="371:17">blink</name> <operator pos:start="371:19" pos:end="371:19">=</operator> <literal type="number" pos:start="371:21" pos:end="371:22">31</literal></expr>;</expr_stmt>

            <goto pos:start="373:13" pos:end="373:28">goto <name pos:start="373:18" pos:end="373:27">not_likely</name>;</goto>

        <case pos:start="375:9" pos:end="375:25">case <expr pos:start="375:14" pos:end="375:24"><name pos:start="375:14" pos:end="375:24">OPC_BGEZALL</name></expr>:</case>

            <expr_stmt pos:start="377:13" pos:end="377:59"><expr pos:start="377:13" pos:end="377:58"><call pos:start="377:13" pos:end="377:58"><name pos:start="377:13" pos:end="377:31">tcg_gen_setcondi_tl</name><argument_list pos:start="377:32" pos:end="377:58">(<argument pos:start="377:33" pos:end="377:43"><expr pos:start="377:33" pos:end="377:43"><name pos:start="377:33" pos:end="377:43">TCG_COND_GE</name></expr></argument>, <argument pos:start="377:46" pos:end="377:50"><expr pos:start="377:46" pos:end="377:50"><name pos:start="377:46" pos:end="377:50">bcond</name></expr></argument>, <argument pos:start="377:53" pos:end="377:54"><expr pos:start="377:53" pos:end="377:54"><name pos:start="377:53" pos:end="377:54">t0</name></expr></argument>, <argument pos:start="377:57" pos:end="377:57"><expr pos:start="377:57" pos:end="377:57"><literal type="number" pos:start="377:57" pos:end="377:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="379:13" pos:end="379:23"><expr pos:start="379:13" pos:end="379:22"><name pos:start="379:13" pos:end="379:17">blink</name> <operator pos:start="379:19" pos:end="379:19">=</operator> <literal type="number" pos:start="379:21" pos:end="379:22">31</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="381:13" pos:end="381:73"><expr pos:start="381:13" pos:end="381:72"><call pos:start="381:13" pos:end="381:72"><name pos:start="381:13" pos:end="381:22">MIPS_DEBUG</name><argument_list pos:start="381:23" pos:end="381:72">(<argument pos:start="381:24" pos:end="381:51"><expr pos:start="381:24" pos:end="381:51"><literal type="string" pos:start="381:24" pos:end="381:37">"bgezall %s, "</literal> <name pos:start="381:39" pos:end="381:51">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="381:54" pos:end="381:65"><expr pos:start="381:54" pos:end="381:65"><name pos:start="381:54" pos:end="381:65"><name pos:start="381:54" pos:end="381:61">regnames</name><index pos:start="381:62" pos:end="381:65">[<expr pos:start="381:63" pos:end="381:64"><name pos:start="381:63" pos:end="381:64">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="381:68" pos:end="381:71"><expr pos:start="381:68" pos:end="381:71"><name pos:start="381:68" pos:end="381:71">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="383:13" pos:end="383:24">goto <name pos:start="383:18" pos:end="383:23">likely</name>;</goto>

        <case pos:start="385:9" pos:end="385:22">case <expr pos:start="385:14" pos:end="385:21"><name pos:start="385:14" pos:end="385:21">OPC_BGTZ</name></expr>:</case>

            <expr_stmt pos:start="387:13" pos:end="387:59"><expr pos:start="387:13" pos:end="387:58"><call pos:start="387:13" pos:end="387:58"><name pos:start="387:13" pos:end="387:31">tcg_gen_setcondi_tl</name><argument_list pos:start="387:32" pos:end="387:58">(<argument pos:start="387:33" pos:end="387:43"><expr pos:start="387:33" pos:end="387:43"><name pos:start="387:33" pos:end="387:43">TCG_COND_GT</name></expr></argument>, <argument pos:start="387:46" pos:end="387:50"><expr pos:start="387:46" pos:end="387:50"><name pos:start="387:46" pos:end="387:50">bcond</name></expr></argument>, <argument pos:start="387:53" pos:end="387:54"><expr pos:start="387:53" pos:end="387:54"><name pos:start="387:53" pos:end="387:54">t0</name></expr></argument>, <argument pos:start="387:57" pos:end="387:57"><expr pos:start="387:57" pos:end="387:57"><literal type="number" pos:start="387:57" pos:end="387:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="389:13" pos:end="389:70"><expr pos:start="389:13" pos:end="389:69"><call pos:start="389:13" pos:end="389:69"><name pos:start="389:13" pos:end="389:22">MIPS_DEBUG</name><argument_list pos:start="389:23" pos:end="389:69">(<argument pos:start="389:24" pos:end="389:48"><expr pos:start="389:24" pos:end="389:48"><literal type="string" pos:start="389:24" pos:end="389:34">"bgtz %s, "</literal> <name pos:start="389:36" pos:end="389:48">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="389:51" pos:end="389:62"><expr pos:start="389:51" pos:end="389:62"><name pos:start="389:51" pos:end="389:62"><name pos:start="389:51" pos:end="389:58">regnames</name><index pos:start="389:59" pos:end="389:62">[<expr pos:start="389:60" pos:end="389:61"><name pos:start="389:60" pos:end="389:61">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="389:65" pos:end="389:68"><expr pos:start="389:65" pos:end="389:68"><name pos:start="389:65" pos:end="389:68">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="391:13" pos:end="391:28">goto <name pos:start="391:18" pos:end="391:27">not_likely</name>;</goto>

        <case pos:start="393:9" pos:end="393:23">case <expr pos:start="393:14" pos:end="393:22"><name pos:start="393:14" pos:end="393:22">OPC_BGTZL</name></expr>:</case>

            <expr_stmt pos:start="395:13" pos:end="395:59"><expr pos:start="395:13" pos:end="395:58"><call pos:start="395:13" pos:end="395:58"><name pos:start="395:13" pos:end="395:31">tcg_gen_setcondi_tl</name><argument_list pos:start="395:32" pos:end="395:58">(<argument pos:start="395:33" pos:end="395:43"><expr pos:start="395:33" pos:end="395:43"><name pos:start="395:33" pos:end="395:43">TCG_COND_GT</name></expr></argument>, <argument pos:start="395:46" pos:end="395:50"><expr pos:start="395:46" pos:end="395:50"><name pos:start="395:46" pos:end="395:50">bcond</name></expr></argument>, <argument pos:start="395:53" pos:end="395:54"><expr pos:start="395:53" pos:end="395:54"><name pos:start="395:53" pos:end="395:54">t0</name></expr></argument>, <argument pos:start="395:57" pos:end="395:57"><expr pos:start="395:57" pos:end="395:57"><literal type="number" pos:start="395:57" pos:end="395:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="397:13" pos:end="397:71"><expr pos:start="397:13" pos:end="397:70"><call pos:start="397:13" pos:end="397:70"><name pos:start="397:13" pos:end="397:22">MIPS_DEBUG</name><argument_list pos:start="397:23" pos:end="397:70">(<argument pos:start="397:24" pos:end="397:49"><expr pos:start="397:24" pos:end="397:49"><literal type="string" pos:start="397:24" pos:end="397:35">"bgtzl %s, "</literal> <name pos:start="397:37" pos:end="397:49">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="397:52" pos:end="397:63"><expr pos:start="397:52" pos:end="397:63"><name pos:start="397:52" pos:end="397:63"><name pos:start="397:52" pos:end="397:59">regnames</name><index pos:start="397:60" pos:end="397:63">[<expr pos:start="397:61" pos:end="397:62"><name pos:start="397:61" pos:end="397:62">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="397:66" pos:end="397:69"><expr pos:start="397:66" pos:end="397:69"><name pos:start="397:66" pos:end="397:69">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="399:13" pos:end="399:24">goto <name pos:start="399:18" pos:end="399:23">likely</name>;</goto>

        <case pos:start="401:9" pos:end="401:22">case <expr pos:start="401:14" pos:end="401:21"><name pos:start="401:14" pos:end="401:21">OPC_BLEZ</name></expr>:</case>

            <expr_stmt pos:start="403:13" pos:end="403:59"><expr pos:start="403:13" pos:end="403:58"><call pos:start="403:13" pos:end="403:58"><name pos:start="403:13" pos:end="403:31">tcg_gen_setcondi_tl</name><argument_list pos:start="403:32" pos:end="403:58">(<argument pos:start="403:33" pos:end="403:43"><expr pos:start="403:33" pos:end="403:43"><name pos:start="403:33" pos:end="403:43">TCG_COND_LE</name></expr></argument>, <argument pos:start="403:46" pos:end="403:50"><expr pos:start="403:46" pos:end="403:50"><name pos:start="403:46" pos:end="403:50">bcond</name></expr></argument>, <argument pos:start="403:53" pos:end="403:54"><expr pos:start="403:53" pos:end="403:54"><name pos:start="403:53" pos:end="403:54">t0</name></expr></argument>, <argument pos:start="403:57" pos:end="403:57"><expr pos:start="403:57" pos:end="403:57"><literal type="number" pos:start="403:57" pos:end="403:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="405:13" pos:end="405:70"><expr pos:start="405:13" pos:end="405:69"><call pos:start="405:13" pos:end="405:69"><name pos:start="405:13" pos:end="405:22">MIPS_DEBUG</name><argument_list pos:start="405:23" pos:end="405:69">(<argument pos:start="405:24" pos:end="405:48"><expr pos:start="405:24" pos:end="405:48"><literal type="string" pos:start="405:24" pos:end="405:34">"blez %s, "</literal> <name pos:start="405:36" pos:end="405:48">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="405:51" pos:end="405:62"><expr pos:start="405:51" pos:end="405:62"><name pos:start="405:51" pos:end="405:62"><name pos:start="405:51" pos:end="405:58">regnames</name><index pos:start="405:59" pos:end="405:62">[<expr pos:start="405:60" pos:end="405:61"><name pos:start="405:60" pos:end="405:61">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="405:65" pos:end="405:68"><expr pos:start="405:65" pos:end="405:68"><name pos:start="405:65" pos:end="405:68">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="407:13" pos:end="407:28">goto <name pos:start="407:18" pos:end="407:27">not_likely</name>;</goto>

        <case pos:start="409:9" pos:end="409:23">case <expr pos:start="409:14" pos:end="409:22"><name pos:start="409:14" pos:end="409:22">OPC_BLEZL</name></expr>:</case>

            <expr_stmt pos:start="411:13" pos:end="411:59"><expr pos:start="411:13" pos:end="411:58"><call pos:start="411:13" pos:end="411:58"><name pos:start="411:13" pos:end="411:31">tcg_gen_setcondi_tl</name><argument_list pos:start="411:32" pos:end="411:58">(<argument pos:start="411:33" pos:end="411:43"><expr pos:start="411:33" pos:end="411:43"><name pos:start="411:33" pos:end="411:43">TCG_COND_LE</name></expr></argument>, <argument pos:start="411:46" pos:end="411:50"><expr pos:start="411:46" pos:end="411:50"><name pos:start="411:46" pos:end="411:50">bcond</name></expr></argument>, <argument pos:start="411:53" pos:end="411:54"><expr pos:start="411:53" pos:end="411:54"><name pos:start="411:53" pos:end="411:54">t0</name></expr></argument>, <argument pos:start="411:57" pos:end="411:57"><expr pos:start="411:57" pos:end="411:57"><literal type="number" pos:start="411:57" pos:end="411:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="413:13" pos:end="413:71"><expr pos:start="413:13" pos:end="413:70"><call pos:start="413:13" pos:end="413:70"><name pos:start="413:13" pos:end="413:22">MIPS_DEBUG</name><argument_list pos:start="413:23" pos:end="413:70">(<argument pos:start="413:24" pos:end="413:49"><expr pos:start="413:24" pos:end="413:49"><literal type="string" pos:start="413:24" pos:end="413:35">"blezl %s, "</literal> <name pos:start="413:37" pos:end="413:49">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="413:52" pos:end="413:63"><expr pos:start="413:52" pos:end="413:63"><name pos:start="413:52" pos:end="413:63"><name pos:start="413:52" pos:end="413:59">regnames</name><index pos:start="413:60" pos:end="413:63">[<expr pos:start="413:61" pos:end="413:62"><name pos:start="413:61" pos:end="413:62">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="413:66" pos:end="413:69"><expr pos:start="413:66" pos:end="413:69"><name pos:start="413:66" pos:end="413:69">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="415:13" pos:end="415:24">goto <name pos:start="415:18" pos:end="415:23">likely</name>;</goto>

        <case pos:start="417:9" pos:end="417:22">case <expr pos:start="417:14" pos:end="417:21"><name pos:start="417:14" pos:end="417:21">OPC_BLTZ</name></expr>:</case>

            <expr_stmt pos:start="419:13" pos:end="419:59"><expr pos:start="419:13" pos:end="419:58"><call pos:start="419:13" pos:end="419:58"><name pos:start="419:13" pos:end="419:31">tcg_gen_setcondi_tl</name><argument_list pos:start="419:32" pos:end="419:58">(<argument pos:start="419:33" pos:end="419:43"><expr pos:start="419:33" pos:end="419:43"><name pos:start="419:33" pos:end="419:43">TCG_COND_LT</name></expr></argument>, <argument pos:start="419:46" pos:end="419:50"><expr pos:start="419:46" pos:end="419:50"><name pos:start="419:46" pos:end="419:50">bcond</name></expr></argument>, <argument pos:start="419:53" pos:end="419:54"><expr pos:start="419:53" pos:end="419:54"><name pos:start="419:53" pos:end="419:54">t0</name></expr></argument>, <argument pos:start="419:57" pos:end="419:57"><expr pos:start="419:57" pos:end="419:57"><literal type="number" pos:start="419:57" pos:end="419:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:70"><expr pos:start="421:13" pos:end="421:69"><call pos:start="421:13" pos:end="421:69"><name pos:start="421:13" pos:end="421:22">MIPS_DEBUG</name><argument_list pos:start="421:23" pos:end="421:69">(<argument pos:start="421:24" pos:end="421:48"><expr pos:start="421:24" pos:end="421:48"><literal type="string" pos:start="421:24" pos:end="421:34">"bltz %s, "</literal> <name pos:start="421:36" pos:end="421:48">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="421:51" pos:end="421:62"><expr pos:start="421:51" pos:end="421:62"><name pos:start="421:51" pos:end="421:62"><name pos:start="421:51" pos:end="421:58">regnames</name><index pos:start="421:59" pos:end="421:62">[<expr pos:start="421:60" pos:end="421:61"><name pos:start="421:60" pos:end="421:61">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="421:65" pos:end="421:68"><expr pos:start="421:65" pos:end="421:68"><name pos:start="421:65" pos:end="421:68">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="423:13" pos:end="423:28">goto <name pos:start="423:18" pos:end="423:27">not_likely</name>;</goto>

        <case pos:start="425:9" pos:end="425:23">case <expr pos:start="425:14" pos:end="425:22"><name pos:start="425:14" pos:end="425:22">OPC_BLTZL</name></expr>:</case>

            <expr_stmt pos:start="427:13" pos:end="427:59"><expr pos:start="427:13" pos:end="427:58"><call pos:start="427:13" pos:end="427:58"><name pos:start="427:13" pos:end="427:31">tcg_gen_setcondi_tl</name><argument_list pos:start="427:32" pos:end="427:58">(<argument pos:start="427:33" pos:end="427:43"><expr pos:start="427:33" pos:end="427:43"><name pos:start="427:33" pos:end="427:43">TCG_COND_LT</name></expr></argument>, <argument pos:start="427:46" pos:end="427:50"><expr pos:start="427:46" pos:end="427:50"><name pos:start="427:46" pos:end="427:50">bcond</name></expr></argument>, <argument pos:start="427:53" pos:end="427:54"><expr pos:start="427:53" pos:end="427:54"><name pos:start="427:53" pos:end="427:54">t0</name></expr></argument>, <argument pos:start="427:57" pos:end="427:57"><expr pos:start="427:57" pos:end="427:57"><literal type="number" pos:start="427:57" pos:end="427:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="429:13" pos:end="429:71"><expr pos:start="429:13" pos:end="429:70"><call pos:start="429:13" pos:end="429:70"><name pos:start="429:13" pos:end="429:22">MIPS_DEBUG</name><argument_list pos:start="429:23" pos:end="429:70">(<argument pos:start="429:24" pos:end="429:49"><expr pos:start="429:24" pos:end="429:49"><literal type="string" pos:start="429:24" pos:end="429:35">"bltzl %s, "</literal> <name pos:start="429:37" pos:end="429:49">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="429:52" pos:end="429:63"><expr pos:start="429:52" pos:end="429:63"><name pos:start="429:52" pos:end="429:63"><name pos:start="429:52" pos:end="429:59">regnames</name><index pos:start="429:60" pos:end="429:63">[<expr pos:start="429:61" pos:end="429:62"><name pos:start="429:61" pos:end="429:62">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="429:66" pos:end="429:69"><expr pos:start="429:66" pos:end="429:69"><name pos:start="429:66" pos:end="429:69">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="431:13" pos:end="431:24">goto <name pos:start="431:18" pos:end="431:23">likely</name>;</goto>

        <case pos:start="433:9" pos:end="433:24">case <expr pos:start="433:14" pos:end="433:23"><name pos:start="433:14" pos:end="433:23">OPC_BLTZAL</name></expr>:</case>

            <expr_stmt pos:start="435:13" pos:end="435:59"><expr pos:start="435:13" pos:end="435:58"><call pos:start="435:13" pos:end="435:58"><name pos:start="435:13" pos:end="435:31">tcg_gen_setcondi_tl</name><argument_list pos:start="435:32" pos:end="435:58">(<argument pos:start="435:33" pos:end="435:43"><expr pos:start="435:33" pos:end="435:43"><name pos:start="435:33" pos:end="435:43">TCG_COND_LT</name></expr></argument>, <argument pos:start="435:46" pos:end="435:50"><expr pos:start="435:46" pos:end="435:50"><name pos:start="435:46" pos:end="435:50">bcond</name></expr></argument>, <argument pos:start="435:53" pos:end="435:54"><expr pos:start="435:53" pos:end="435:54"><name pos:start="435:53" pos:end="435:54">t0</name></expr></argument>, <argument pos:start="435:57" pos:end="435:57"><expr pos:start="435:57" pos:end="435:57"><literal type="number" pos:start="435:57" pos:end="435:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="437:13" pos:end="437:23"><expr pos:start="437:13" pos:end="437:22"><name pos:start="437:13" pos:end="437:17">blink</name> <operator pos:start="437:19" pos:end="437:19">=</operator> <literal type="number" pos:start="437:21" pos:end="437:22">31</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="439:13" pos:end="439:72"><expr pos:start="439:13" pos:end="439:71"><call pos:start="439:13" pos:end="439:71"><name pos:start="439:13" pos:end="439:22">MIPS_DEBUG</name><argument_list pos:start="439:23" pos:end="439:71">(<argument pos:start="439:24" pos:end="439:50"><expr pos:start="439:24" pos:end="439:50"><literal type="string" pos:start="439:24" pos:end="439:36">"bltzal %s, "</literal> <name pos:start="439:38" pos:end="439:50">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="439:53" pos:end="439:64"><expr pos:start="439:53" pos:end="439:64"><name pos:start="439:53" pos:end="439:64"><name pos:start="439:53" pos:end="439:60">regnames</name><index pos:start="439:61" pos:end="439:64">[<expr pos:start="439:62" pos:end="439:63"><name pos:start="439:62" pos:end="439:63">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="439:67" pos:end="439:70"><expr pos:start="439:67" pos:end="439:70"><name pos:start="439:67" pos:end="439:70">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <label pos:start="441:9" pos:end="441:19"><name pos:start="441:9" pos:end="441:18">not_likely</name>:</label>

            <expr_stmt pos:start="443:13" pos:end="443:41"><expr pos:start="443:13" pos:end="443:40"><name pos:start="443:13" pos:end="443:23"><name pos:start="443:13" pos:end="443:15">ctx</name><operator pos:start="443:16" pos:end="443:17">-&gt;</operator><name pos:start="443:18" pos:end="443:23">hflags</name></name> <operator pos:start="443:25" pos:end="443:26">|=</operator> <name pos:start="443:28" pos:end="443:40">MIPS_HFLAG_BC</name></expr>;</expr_stmt>

            <break pos:start="445:13" pos:end="445:18">break;</break>

        <case pos:start="447:9" pos:end="447:25">case <expr pos:start="447:14" pos:end="447:24"><name pos:start="447:14" pos:end="447:24">OPC_BLTZALL</name></expr>:</case>

            <expr_stmt pos:start="449:13" pos:end="449:59"><expr pos:start="449:13" pos:end="449:58"><call pos:start="449:13" pos:end="449:58"><name pos:start="449:13" pos:end="449:31">tcg_gen_setcondi_tl</name><argument_list pos:start="449:32" pos:end="449:58">(<argument pos:start="449:33" pos:end="449:43"><expr pos:start="449:33" pos:end="449:43"><name pos:start="449:33" pos:end="449:43">TCG_COND_LT</name></expr></argument>, <argument pos:start="449:46" pos:end="449:50"><expr pos:start="449:46" pos:end="449:50"><name pos:start="449:46" pos:end="449:50">bcond</name></expr></argument>, <argument pos:start="449:53" pos:end="449:54"><expr pos:start="449:53" pos:end="449:54"><name pos:start="449:53" pos:end="449:54">t0</name></expr></argument>, <argument pos:start="449:57" pos:end="449:57"><expr pos:start="449:57" pos:end="449:57"><literal type="number" pos:start="449:57" pos:end="449:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="451:13" pos:end="451:23"><expr pos:start="451:13" pos:end="451:22"><name pos:start="451:13" pos:end="451:17">blink</name> <operator pos:start="451:19" pos:end="451:19">=</operator> <literal type="number" pos:start="451:21" pos:end="451:22">31</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="453:13" pos:end="453:73"><expr pos:start="453:13" pos:end="453:72"><call pos:start="453:13" pos:end="453:72"><name pos:start="453:13" pos:end="453:22">MIPS_DEBUG</name><argument_list pos:start="453:23" pos:end="453:72">(<argument pos:start="453:24" pos:end="453:51"><expr pos:start="453:24" pos:end="453:51"><literal type="string" pos:start="453:24" pos:end="453:37">"bltzall %s, "</literal> <name pos:start="453:39" pos:end="453:51">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="453:54" pos:end="453:65"><expr pos:start="453:54" pos:end="453:65"><name pos:start="453:54" pos:end="453:65"><name pos:start="453:54" pos:end="453:61">regnames</name><index pos:start="453:62" pos:end="453:65">[<expr pos:start="453:63" pos:end="453:64"><name pos:start="453:63" pos:end="453:64">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="453:68" pos:end="453:71"><expr pos:start="453:68" pos:end="453:71"><name pos:start="453:68" pos:end="453:71">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <label pos:start="455:9" pos:end="455:15"><name pos:start="455:9" pos:end="455:14">likely</name>:</label>

            <expr_stmt pos:start="457:13" pos:end="457:41"><expr pos:start="457:13" pos:end="457:40"><name pos:start="457:13" pos:end="457:23"><name pos:start="457:13" pos:end="457:15">ctx</name><operator pos:start="457:16" pos:end="457:17">-&gt;</operator><name pos:start="457:18" pos:end="457:23">hflags</name></name> <operator pos:start="457:25" pos:end="457:26">|=</operator> <name pos:start="457:28" pos:end="457:40">MIPS_HFLAG_BL</name></expr>;</expr_stmt>

            <break pos:start="459:13" pos:end="459:18">break;</break>

        <default pos:start="461:9" pos:end="461:16">default:</default>

            <expr_stmt pos:start="463:13" pos:end="463:50"><expr pos:start="463:13" pos:end="463:49"><call pos:start="463:13" pos:end="463:49"><name pos:start="463:13" pos:end="463:22">MIPS_INVAL</name><argument_list pos:start="463:23" pos:end="463:49">(<argument pos:start="463:24" pos:end="463:48"><expr pos:start="463:24" pos:end="463:48"><literal type="string" pos:start="463:24" pos:end="463:48">"conditional branch/jump"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="465:13" pos:end="465:45"><expr pos:start="465:13" pos:end="465:44"><call pos:start="465:13" pos:end="465:44"><name pos:start="465:13" pos:end="465:30">generate_exception</name><argument_list pos:start="465:31" pos:end="465:44">(<argument pos:start="465:32" pos:end="465:34"><expr pos:start="465:32" pos:end="465:34"><name pos:start="465:32" pos:end="465:34">ctx</name></expr></argument>, <argument pos:start="465:37" pos:end="465:43"><expr pos:start="465:37" pos:end="465:43"><name pos:start="465:37" pos:end="465:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="467:13" pos:end="467:21">goto <name pos:start="467:18" pos:end="467:20">out</name>;</goto>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="473:5" pos:end="475:41"><expr pos:start="473:5" pos:end="475:40"><call pos:start="473:5" pos:end="475:40"><name pos:start="473:5" pos:end="473:14">MIPS_DEBUG</name><argument_list pos:start="473:15" pos:end="475:40">(<argument pos:start="473:16" pos:end="473:66"><expr pos:start="473:16" pos:end="473:66"><literal type="string" pos:start="473:16" pos:end="473:52">"enter ds: link %d cond %02x target "</literal> <name pos:start="473:54" pos:end="473:66">TARGET_FMT_lx</name></expr></argument>,

               <argument pos:start="475:16" pos:end="475:20"><expr pos:start="475:16" pos:end="475:20"><name pos:start="475:16" pos:end="475:20">blink</name></expr></argument>, <argument pos:start="475:23" pos:end="475:33"><expr pos:start="475:23" pos:end="475:33"><name pos:start="475:23" pos:end="475:33"><name pos:start="475:23" pos:end="475:25">ctx</name><operator pos:start="475:26" pos:end="475:27">-&gt;</operator><name pos:start="475:28" pos:end="475:33">hflags</name></name></expr></argument>, <argument pos:start="475:36" pos:end="475:39"><expr pos:start="475:36" pos:end="475:39"><name pos:start="475:36" pos:end="475:39">btgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="479:5" pos:end="479:24"><expr pos:start="479:5" pos:end="479:23"><name pos:start="479:5" pos:end="479:16"><name pos:start="479:5" pos:end="479:7">ctx</name><operator pos:start="479:8" pos:end="479:9">-&gt;</operator><name pos:start="479:10" pos:end="479:16">btarget</name></name> <operator pos:start="479:18" pos:end="479:18">=</operator> <name pos:start="479:20" pos:end="479:23">btgt</name></expr>;</expr_stmt>

    <if_stmt pos:start="481:5" pos:end="497:5"><if pos:start="481:5" pos:end="497:5">if <condition pos:start="481:8" pos:end="481:18">(<expr pos:start="481:9" pos:end="481:17"><name pos:start="481:9" pos:end="481:13">blink</name> <operator pos:start="481:15" pos:end="481:15">&gt;</operator> <literal type="number" pos:start="481:17" pos:end="481:17">0</literal></expr>)</condition> <block pos:start="481:20" pos:end="497:5">{<block_content pos:start="483:9" pos:end="495:71">

        <decl_stmt pos:start="483:9" pos:end="483:36"><decl pos:start="483:9" pos:end="483:35"><type pos:start="483:9" pos:end="483:11"><name pos:start="483:9" pos:end="483:11">int</name></type> <name pos:start="483:13" pos:end="483:22">post_delay</name> <init pos:start="483:24" pos:end="483:35">= <expr pos:start="483:26" pos:end="483:35"><name pos:start="483:26" pos:end="483:35">insn_bytes</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="485:9" pos:end="485:54"><decl pos:start="485:9" pos:end="485:53"><type pos:start="485:9" pos:end="485:11"><name pos:start="485:9" pos:end="485:11">int</name></type> <name pos:start="485:13" pos:end="485:18">lowbit</name> <init pos:start="485:20" pos:end="485:53">= <expr pos:start="485:22" pos:end="485:53"><operator pos:start="485:22" pos:end="485:22">!</operator><operator pos:start="485:23" pos:end="485:23">!</operator><operator pos:start="485:24" pos:end="485:24">(</operator><name pos:start="485:25" pos:end="485:35"><name pos:start="485:25" pos:end="485:27">ctx</name><operator pos:start="485:28" pos:end="485:29">-&gt;</operator><name pos:start="485:30" pos:end="485:35">hflags</name></name> <operator pos:start="485:37" pos:end="485:37">&amp;</operator> <name pos:start="485:39" pos:end="485:52">MIPS_HFLAG_M16</name><operator pos:start="485:53" pos:end="485:53">)</operator></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="489:9" pos:end="491:69"><if pos:start="489:9" pos:end="491:69">if <condition pos:start="489:12" pos:end="489:29">(<expr pos:start="489:13" pos:end="489:28"><name pos:start="489:13" pos:end="489:15">opc</name> <operator pos:start="489:17" pos:end="489:18">!=</operator> <name pos:start="489:20" pos:end="489:28">OPC_JALRC</name></expr>)</condition><block type="pseudo" pos:start="491:13" pos:end="491:69"><block_content pos:start="491:13" pos:end="491:69">

            <expr_stmt pos:start="491:13" pos:end="491:69"><expr pos:start="491:13" pos:end="491:68"><name pos:start="491:13" pos:end="491:22">post_delay</name> <operator pos:start="491:24" pos:end="491:25">+=</operator> <operator pos:start="491:27" pos:end="491:27">(</operator><ternary pos:start="491:28" pos:end="491:67"><condition pos:start="491:28" pos:end="491:61"><expr pos:start="491:28" pos:end="491:59"><operator pos:start="491:28" pos:end="491:28">(</operator><name pos:start="491:29" pos:end="491:39"><name pos:start="491:29" pos:end="491:31">ctx</name><operator pos:start="491:32" pos:end="491:33">-&gt;</operator><name pos:start="491:34" pos:end="491:39">hflags</name></name> <operator pos:start="491:41" pos:end="491:41">&amp;</operator> <name pos:start="491:43" pos:end="491:58">MIPS_HFLAG_BDS16</name><operator pos:start="491:59" pos:end="491:59">)</operator></expr> ?</condition><then pos:start="491:63" pos:end="491:63"> <expr pos:start="491:63" pos:end="491:63"><literal type="number" pos:start="491:63" pos:end="491:63">2</literal></expr> </then><else pos:start="491:65" pos:end="491:67">: <expr pos:start="491:67" pos:end="491:67"><literal type="number" pos:start="491:67" pos:end="491:67">4</literal></expr></else></ternary><operator pos:start="491:68" pos:end="491:68">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="495:9" pos:end="495:71"><expr pos:start="495:9" pos:end="495:70"><call pos:start="495:9" pos:end="495:70"><name pos:start="495:9" pos:end="495:23">tcg_gen_movi_tl</name><argument_list pos:start="495:24" pos:end="495:70">(<argument pos:start="495:25" pos:end="495:38"><expr pos:start="495:25" pos:end="495:38"><name pos:start="495:25" pos:end="495:38"><name pos:start="495:25" pos:end="495:31">cpu_gpr</name><index pos:start="495:32" pos:end="495:38">[<expr pos:start="495:33" pos:end="495:37"><name pos:start="495:33" pos:end="495:37">blink</name></expr>]</index></name></expr></argument>, <argument pos:start="495:41" pos:end="495:69"><expr pos:start="495:41" pos:end="495:69"><name pos:start="495:41" pos:end="495:47"><name pos:start="495:41" pos:end="495:43">ctx</name><operator pos:start="495:44" pos:end="495:45">-&gt;</operator><name pos:start="495:46" pos:end="495:47">pc</name></name> <operator pos:start="495:49" pos:end="495:49">+</operator> <name pos:start="495:51" pos:end="495:60">post_delay</name> <operator pos:start="495:62" pos:end="495:62">+</operator> <name pos:start="495:64" pos:end="495:69">lowbit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



 <label pos:start="501:2" pos:end="501:5"><name pos:start="501:2" pos:end="501:4">out</name>:</label>

    <if_stmt pos:start="503:5" pos:end="505:38"><if pos:start="503:5" pos:end="505:38">if <condition pos:start="503:8" pos:end="503:24">(<expr pos:start="503:9" pos:end="503:23"><name pos:start="503:9" pos:end="503:18">insn_bytes</name> <operator pos:start="503:20" pos:end="503:21">==</operator> <literal type="number" pos:start="503:23" pos:end="503:23">2</literal></expr>)</condition><block type="pseudo" pos:start="505:9" pos:end="505:38"><block_content pos:start="505:9" pos:end="505:38">

        <expr_stmt pos:start="505:9" pos:end="505:38"><expr pos:start="505:9" pos:end="505:37"><name pos:start="505:9" pos:end="505:19"><name pos:start="505:9" pos:end="505:11">ctx</name><operator pos:start="505:12" pos:end="505:13">-&gt;</operator><name pos:start="505:14" pos:end="505:19">hflags</name></name> <operator pos:start="505:21" pos:end="505:22">|=</operator> <name pos:start="505:24" pos:end="505:37">MIPS_HFLAG_B16</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="507:5" pos:end="507:22"><expr pos:start="507:5" pos:end="507:21"><call pos:start="507:5" pos:end="507:21"><name pos:start="507:5" pos:end="507:17">tcg_temp_free</name><argument_list pos:start="507:18" pos:end="507:21">(<argument pos:start="507:19" pos:end="507:20"><expr pos:start="507:19" pos:end="507:20"><name pos:start="507:19" pos:end="507:20">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="509:5" pos:end="509:22"><expr pos:start="509:5" pos:end="509:21"><call pos:start="509:5" pos:end="509:21"><name pos:start="509:5" pos:end="509:17">tcg_temp_free</name><argument_list pos:start="509:18" pos:end="509:21">(<argument pos:start="509:19" pos:end="509:20"><expr pos:start="509:19" pos:end="509:20"><name pos:start="509:19" pos:end="509:20">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
