<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5557.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:54"><name pos:start="1:1" pos:end="1:14">build_dmar_q35</name><argument_list pos:start="1:15" pos:end="1:54">(<argument pos:start="1:16" pos:end="1:33">GArray *table_data</argument>, <argument pos:start="1:36" pos:end="1:53">BIOSLinker *linker</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:70">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">dmar_start</name> <init pos:start="5:20" pos:end="5:36">= <expr pos:start="5:22" pos:end="5:36"><name pos:start="5:22" pos:end="5:36"><name pos:start="5:22" pos:end="5:31">table_data</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:36">len</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">AcpiTableDmar</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:23">dmar</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:24">AcpiDmarHardwareUnit</name> <modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:30">drhd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:23">AcpiDmarRootPortATS</name> <modifier pos:start="13:25" pos:end="13:25">*</modifier></type><name pos:start="13:26" pos:end="13:29">atsr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:22">dmar_flags</name> <init pos:start="15:24" pos:end="15:26">= <expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:51"><decl pos:start="17:5" pos:end="17:50"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:17">X86IOMMUState</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:24">iommu</name> <init pos:start="17:26" pos:end="17:50">= <expr pos:start="17:28" pos:end="17:50"><call pos:start="17:28" pos:end="17:50"><name pos:start="17:28" pos:end="17:48">x86_iommu_get_default</name><argument_list pos:start="17:49" pos:end="17:50">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:38"><decl pos:start="19:5" pos:end="19:37"><type pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:23">AcpiDmarDeviceScope</name> <modifier pos:start="19:25" pos:end="19:25">*</modifier></type><name pos:start="19:26" pos:end="19:30">scope</name> <init pos:start="19:32" pos:end="19:37">= <expr pos:start="19:34" pos:end="19:37"><name pos:start="19:34" pos:end="19:37">NULL</name></expr></init></decl>;</decl_stmt>

    <comment type="block" pos:start="21:5" pos:end="21:50">/* Root complex IOAPIC use one path[0] only */</comment>

    <decl_stmt pos:start="23:5" pos:end="23:71"><decl pos:start="23:5" pos:end="23:70"><type pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:10">size_t</name></type> <name pos:start="23:12" pos:end="23:28">ioapic_scope_size</name> <init pos:start="23:30" pos:end="23:70">= <expr pos:start="23:32" pos:end="23:70"><sizeof pos:start="23:32" pos:end="23:45">sizeof<argument_list pos:start="23:38" pos:end="23:45">(<argument pos:start="23:39" pos:end="23:44"><expr pos:start="23:39" pos:end="23:44"><operator pos:start="23:39" pos:end="23:39">*</operator><name pos:start="23:40" pos:end="23:44">scope</name></expr></argument>)</argument_list></sizeof> <operator pos:start="23:47" pos:end="23:47">+</operator> <sizeof pos:start="23:49" pos:end="23:70">sizeof<argument_list pos:start="23:55" pos:end="23:70">(<argument pos:start="23:56" pos:end="23:69"><expr pos:start="23:56" pos:end="23:69"><name pos:start="23:56" pos:end="23:69"><name pos:start="23:56" pos:end="23:60">scope</name><operator pos:start="23:61" pos:end="23:62">-&gt;</operator><name pos:start="23:63" pos:end="23:66">path</name><index pos:start="23:67" pos:end="23:69">[<expr pos:start="23:68" pos:end="23:68"><literal type="number" pos:start="23:68" pos:end="23:68">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:18"><expr pos:start="27:5" pos:end="27:17"><call pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:10">assert</name><argument_list pos:start="27:11" pos:end="27:17">(<argument pos:start="27:12" pos:end="27:16"><expr pos:start="27:12" pos:end="27:16"><name pos:start="27:12" pos:end="27:16">iommu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:30">(<expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:13">iommu</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:29">intr_supported</name></name></expr>)</condition> <block pos:start="29:32" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:26">

        <expr_stmt pos:start="31:9" pos:end="31:26"><expr pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:18">dmar_flags</name> <operator pos:start="31:20" pos:end="31:21">|=</operator> <literal type="number" pos:start="31:23" pos:end="31:25">0x1</literal></expr>;</expr_stmt>      <comment type="block" pos:start="31:33" pos:end="31:59">/* Flags: 0x1: INT_REMAP */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:53"><expr pos:start="37:5" pos:end="37:52"><name pos:start="37:5" pos:end="37:8">dmar</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:52"><name pos:start="37:12" pos:end="37:25">acpi_data_push</name><argument_list pos:start="37:26" pos:end="37:52">(<argument pos:start="37:27" pos:end="37:36"><expr pos:start="37:27" pos:end="37:36"><name pos:start="37:27" pos:end="37:36">table_data</name></expr></argument>, <argument pos:start="37:39" pos:end="37:51"><expr pos:start="37:39" pos:end="37:51"><sizeof pos:start="37:39" pos:end="37:51">sizeof<argument_list pos:start="37:45" pos:end="37:51">(<argument pos:start="37:46" pos:end="37:50"><expr pos:start="37:46" pos:end="37:50"><operator pos:start="37:46" pos:end="37:46">*</operator><name pos:start="37:47" pos:end="37:50">dmar</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:58"><expr pos:start="39:5" pos:end="39:57"><name pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:8">dmar</name><operator pos:start="39:9" pos:end="39:10">-&gt;</operator><name pos:start="39:11" pos:end="39:28">host_address_width</name></name> <operator pos:start="39:30" pos:end="39:30">=</operator> <name pos:start="39:32" pos:end="39:53">VTD_HOST_ADDRESS_WIDTH</name> <operator pos:start="39:55" pos:end="39:55">-</operator> <literal type="number" pos:start="39:57" pos:end="39:57">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:29"><expr pos:start="41:5" pos:end="41:28"><name pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:8">dmar</name><operator pos:start="41:9" pos:end="41:10">-&gt;</operator><name pos:start="41:11" pos:end="41:15">flags</name></name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:28">dmar_flags</name></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:59">/* DMAR Remapping Hardware Unit Definition structure */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:73"><expr pos:start="47:5" pos:end="47:72"><name pos:start="47:5" pos:end="47:8">drhd</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <call pos:start="47:12" pos:end="47:72"><name pos:start="47:12" pos:end="47:25">acpi_data_push</name><argument_list pos:start="47:26" pos:end="47:72">(<argument pos:start="47:27" pos:end="47:36"><expr pos:start="47:27" pos:end="47:36"><name pos:start="47:27" pos:end="47:36">table_data</name></expr></argument>, <argument pos:start="47:39" pos:end="47:71"><expr pos:start="47:39" pos:end="47:71"><sizeof pos:start="47:39" pos:end="47:51">sizeof<argument_list pos:start="47:45" pos:end="47:51">(<argument pos:start="47:46" pos:end="47:50"><expr pos:start="47:46" pos:end="47:50"><operator pos:start="47:46" pos:end="47:46">*</operator><name pos:start="47:47" pos:end="47:50">drhd</name></expr></argument>)</argument_list></sizeof> <operator pos:start="47:53" pos:end="47:53">+</operator> <name pos:start="47:55" pos:end="47:71">ioapic_scope_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:59"><expr pos:start="49:5" pos:end="49:58"><name pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:8">drhd</name><operator pos:start="49:9" pos:end="49:10">-&gt;</operator><name pos:start="49:11" pos:end="49:14">type</name></name> <operator pos:start="49:16" pos:end="49:16">=</operator> <call pos:start="49:18" pos:end="49:58"><name pos:start="49:18" pos:end="49:28">cpu_to_le16</name><argument_list pos:start="49:29" pos:end="49:58">(<argument pos:start="49:30" pos:end="49:57"><expr pos:start="49:30" pos:end="49:57"><name pos:start="49:30" pos:end="49:57">ACPI_DMAR_TYPE_HARDWARE_UNIT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:66"><expr pos:start="51:5" pos:end="51:65"><name pos:start="51:5" pos:end="51:16"><name pos:start="51:5" pos:end="51:8">drhd</name><operator pos:start="51:9" pos:end="51:10">-&gt;</operator><name pos:start="51:11" pos:end="51:16">length</name></name> <operator pos:start="51:18" pos:end="51:18">=</operator> <call pos:start="51:20" pos:end="51:65"><name pos:start="51:20" pos:end="51:30">cpu_to_le16</name><argument_list pos:start="51:31" pos:end="51:65">(<argument pos:start="51:32" pos:end="51:64"><expr pos:start="51:32" pos:end="51:64"><sizeof pos:start="51:32" pos:end="51:44">sizeof<argument_list pos:start="51:38" pos:end="51:44">(<argument pos:start="51:39" pos:end="51:43"><expr pos:start="51:39" pos:end="51:43"><operator pos:start="51:39" pos:end="51:39">*</operator><name pos:start="51:40" pos:end="51:43">drhd</name></expr></argument>)</argument_list></sizeof> <operator pos:start="51:46" pos:end="51:46">+</operator> <name pos:start="51:48" pos:end="51:64">ioapic_scope_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:44"><expr pos:start="53:5" pos:end="53:43"><name pos:start="53:5" pos:end="53:15"><name pos:start="53:5" pos:end="53:8">drhd</name><operator pos:start="53:9" pos:end="53:10">-&gt;</operator><name pos:start="53:11" pos:end="53:15">flags</name></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:43">ACPI_DMAR_INCLUDE_PCI_ALL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:39"><expr pos:start="55:5" pos:end="55:38"><name pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:8">drhd</name><operator pos:start="55:9" pos:end="55:10">-&gt;</operator><name pos:start="55:11" pos:end="55:21">pci_segment</name></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <call pos:start="55:25" pos:end="55:38"><name pos:start="55:25" pos:end="55:35">cpu_to_le16</name><argument_list pos:start="55:36" pos:end="55:38">(<argument pos:start="55:37" pos:end="55:37"><expr pos:start="55:37" pos:end="55:37"><literal type="number" pos:start="55:37" pos:end="55:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:60"><expr pos:start="57:5" pos:end="57:59"><name pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:8">drhd</name><operator pos:start="57:9" pos:end="57:10">-&gt;</operator><name pos:start="57:11" pos:end="57:17">address</name></name> <operator pos:start="57:19" pos:end="57:19">=</operator> <call pos:start="57:21" pos:end="57:59"><name pos:start="57:21" pos:end="57:31">cpu_to_le64</name><argument_list pos:start="57:32" pos:end="57:59">(<argument pos:start="57:33" pos:end="57:58"><expr pos:start="57:33" pos:end="57:58"><name pos:start="57:33" pos:end="57:58">Q35_HOST_BRIDGE_IOMMU_ADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="63:45">/* Scope definition for the root-complex IOAPIC. See VT-d spec

     * 8.3.1 (version Oct. 2014 or later). */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:28"><expr pos:start="65:5" pos:end="65:27"><name pos:start="65:5" pos:end="65:9">scope</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <operator pos:start="65:13" pos:end="65:13">&amp;</operator><name pos:start="65:14" pos:end="65:27"><name pos:start="65:14" pos:end="65:17">drhd</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:24">scope</name><index pos:start="65:25" pos:end="65:27">[<expr pos:start="65:26" pos:end="65:26"><literal type="number" pos:start="65:26" pos:end="65:26">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:29"><expr pos:start="67:5" pos:end="67:28"><name pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:9">scope</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:21">entry_type</name></name> <operator pos:start="67:23" pos:end="67:23">=</operator> <literal type="number" pos:start="67:25" pos:end="67:28">0x03</literal></expr>;</expr_stmt>   <comment type="block" pos:start="67:33" pos:end="67:59">/* Type: 0x03 for IOAPIC */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:38"><expr pos:start="69:5" pos:end="69:37"><name pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:9">scope</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:17">length</name></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:37">ioapic_scope_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:49"><expr pos:start="71:5" pos:end="71:48"><name pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:9">scope</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:25">enumeration_id</name></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <name pos:start="71:29" pos:end="71:48">ACPI_BUILD_IOAPIC_ID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:41"><expr pos:start="73:5" pos:end="73:40"><name pos:start="73:5" pos:end="73:14"><name pos:start="73:5" pos:end="73:9">scope</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:14">bus</name></name> <operator pos:start="73:16" pos:end="73:16">=</operator> <name pos:start="73:18" pos:end="73:40">Q35_PSEUDO_BUS_PLATFORM</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:62"><expr pos:start="75:5" pos:end="75:61"><name pos:start="75:5" pos:end="75:18"><name pos:start="75:5" pos:end="75:9">scope</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:15">path</name><index pos:start="75:16" pos:end="75:18">[<expr pos:start="75:17" pos:end="75:17"><literal type="number" pos:start="75:17" pos:end="75:17">0</literal></expr>]</index></name><operator pos:start="75:19" pos:end="75:19">.</operator><name pos:start="75:20" pos:end="75:25">device</name> <operator pos:start="75:27" pos:end="75:27">=</operator> <call pos:start="75:29" pos:end="75:61"><name pos:start="75:29" pos:end="75:36">PCI_SLOT</name><argument_list pos:start="75:37" pos:end="75:61">(<argument pos:start="75:38" pos:end="75:60"><expr pos:start="75:38" pos:end="75:60"><name pos:start="75:38" pos:end="75:60">Q35_PSEUDO_DEVFN_IOAPIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:64"><expr pos:start="77:5" pos:end="77:63"><name pos:start="77:5" pos:end="77:18"><name pos:start="77:5" pos:end="77:9">scope</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:15">path</name><index pos:start="77:16" pos:end="77:18">[<expr pos:start="77:17" pos:end="77:17"><literal type="number" pos:start="77:17" pos:end="77:17">0</literal></expr>]</index></name><operator pos:start="77:19" pos:end="77:19">.</operator><name pos:start="77:20" pos:end="77:27">function</name> <operator pos:start="77:29" pos:end="77:29">=</operator> <call pos:start="77:31" pos:end="77:63"><name pos:start="77:31" pos:end="77:38">PCI_FUNC</name><argument_list pos:start="77:39" pos:end="77:63">(<argument pos:start="77:40" pos:end="77:62"><expr pos:start="77:40" pos:end="77:62"><name pos:start="77:40" pos:end="77:62">Q35_PSEUDO_DEVFN_IOAPIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="93:5"><if pos:start="81:5" pos:end="93:5">if <condition pos:start="81:8" pos:end="81:28">(<expr pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:13">iommu</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:27">dt_supported</name></name></expr>)</condition> <block pos:start="81:30" pos:end="93:5">{<block_content pos:start="83:9" pos:end="91:43">

        <expr_stmt pos:start="83:9" pos:end="83:57"><expr pos:start="83:9" pos:end="83:56"><name pos:start="83:9" pos:end="83:12">atsr</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <call pos:start="83:16" pos:end="83:56"><name pos:start="83:16" pos:end="83:29">acpi_data_push</name><argument_list pos:start="83:30" pos:end="83:56">(<argument pos:start="83:31" pos:end="83:40"><expr pos:start="83:31" pos:end="83:40"><name pos:start="83:31" pos:end="83:40">table_data</name></expr></argument>, <argument pos:start="83:43" pos:end="83:55"><expr pos:start="83:43" pos:end="83:55"><sizeof pos:start="83:43" pos:end="83:55">sizeof<argument_list pos:start="83:49" pos:end="83:55">(<argument pos:start="83:50" pos:end="83:54"><expr pos:start="83:50" pos:end="83:54"><operator pos:start="83:50" pos:end="83:50">*</operator><name pos:start="83:51" pos:end="83:54">atsr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:54"><expr pos:start="85:9" pos:end="85:53"><name pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:12">atsr</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:18">type</name></name> <operator pos:start="85:20" pos:end="85:20">=</operator> <call pos:start="85:22" pos:end="85:53"><name pos:start="85:22" pos:end="85:32">cpu_to_le16</name><argument_list pos:start="85:33" pos:end="85:53">(<argument pos:start="85:34" pos:end="85:52"><expr pos:start="85:34" pos:end="85:52"><name pos:start="85:34" pos:end="85:52">ACPI_DMAR_TYPE_ATSR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:50"><expr pos:start="87:9" pos:end="87:49"><name pos:start="87:9" pos:end="87:20"><name pos:start="87:9" pos:end="87:12">atsr</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:20">length</name></name> <operator pos:start="87:22" pos:end="87:22">=</operator> <call pos:start="87:24" pos:end="87:49"><name pos:start="87:24" pos:end="87:34">cpu_to_le16</name><argument_list pos:start="87:35" pos:end="87:49">(<argument pos:start="87:36" pos:end="87:48"><expr pos:start="87:36" pos:end="87:48"><sizeof pos:start="87:36" pos:end="87:48">sizeof<argument_list pos:start="87:42" pos:end="87:48">(<argument pos:start="87:43" pos:end="87:47"><expr pos:start="87:43" pos:end="87:47"><operator pos:start="87:43" pos:end="87:43">*</operator><name pos:start="87:44" pos:end="87:47">atsr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:47"><expr pos:start="89:9" pos:end="89:46"><name pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:12">atsr</name><operator pos:start="89:13" pos:end="89:14">-&gt;</operator><name pos:start="89:15" pos:end="89:19">flags</name></name> <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:46">ACPI_DMAR_ATSR_ALL_PORTS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:43"><expr pos:start="91:9" pos:end="91:42"><name pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:12">atsr</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:25">pci_segment</name></name> <operator pos:start="91:27" pos:end="91:27">=</operator> <call pos:start="91:29" pos:end="91:42"><name pos:start="91:29" pos:end="91:39">cpu_to_le16</name><argument_list pos:start="91:40" pos:end="91:42">(<argument pos:start="91:41" pos:end="91:41"><expr pos:start="91:41" pos:end="91:41"><literal type="number" pos:start="91:41" pos:end="91:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="99:70"><expr pos:start="97:5" pos:end="99:69"><call pos:start="97:5" pos:end="99:69"><name pos:start="97:5" pos:end="97:16">build_header</name><argument_list pos:start="97:17" pos:end="99:69">(<argument pos:start="97:18" pos:end="97:23"><expr pos:start="97:18" pos:end="97:23"><name pos:start="97:18" pos:end="97:23">linker</name></expr></argument>, <argument pos:start="97:26" pos:end="97:35"><expr pos:start="97:26" pos:end="97:35"><name pos:start="97:26" pos:end="97:35">table_data</name></expr></argument>, <argument pos:start="97:38" pos:end="97:76"><expr pos:start="97:38" pos:end="97:76"><operator pos:start="97:38" pos:end="97:38">(</operator><name pos:start="97:39" pos:end="97:42">void</name> <operator pos:start="97:44" pos:end="97:44">*</operator><operator pos:start="97:45" pos:end="97:45">)</operator><operator pos:start="97:46" pos:end="97:46">(</operator><name pos:start="97:47" pos:end="97:62"><name pos:start="97:47" pos:end="97:56">table_data</name><operator pos:start="97:57" pos:end="97:58">-&gt;</operator><name pos:start="97:59" pos:end="97:62">data</name></name> <operator pos:start="97:64" pos:end="97:64">+</operator> <name pos:start="97:66" pos:end="97:75">dmar_start</name><operator pos:start="97:76" pos:end="97:76">)</operator></expr></argument>,

                 <argument pos:start="99:18" pos:end="99:23"><expr pos:start="99:18" pos:end="99:23"><literal type="string" pos:start="99:18" pos:end="99:23">"DMAR"</literal></expr></argument>, <argument pos:start="99:26" pos:end="99:53"><expr pos:start="99:26" pos:end="99:53"><name pos:start="99:26" pos:end="99:40"><name pos:start="99:26" pos:end="99:35">table_data</name><operator pos:start="99:36" pos:end="99:37">-&gt;</operator><name pos:start="99:38" pos:end="99:40">len</name></name> <operator pos:start="99:42" pos:end="99:42">-</operator> <name pos:start="99:44" pos:end="99:53">dmar_start</name></expr></argument>, <argument pos:start="99:56" pos:end="99:56"><expr pos:start="99:56" pos:end="99:56"><literal type="number" pos:start="99:56" pos:end="99:56">1</literal></expr></argument>, <argument pos:start="99:59" pos:end="99:62"><expr pos:start="99:59" pos:end="99:62"><name pos:start="99:59" pos:end="99:62">NULL</name></expr></argument>, <argument pos:start="99:65" pos:end="99:68"><expr pos:start="99:65" pos:end="99:68"><name pos:start="99:65" pos:end="99:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
