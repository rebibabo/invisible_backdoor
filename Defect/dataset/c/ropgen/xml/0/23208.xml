<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23208.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:37">pulse_write_header</name><parameter_list pos:start="1:38" pos:end="1:57">(<parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:55"><name pos:start="1:39" pos:end="1:53">AVFormatContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PulseData</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:31">= <expr pos:start="5:20" pos:end="5:31"><name pos:start="5:20" pos:end="5:31"><name pos:start="5:20" pos:end="5:20">h</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:31">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:18">pa_sample_spec</name></type> <name pos:start="13:20" pos:end="13:21">ss</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:49"><decl pos:start="15:5" pos:end="15:48"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:18">pa_buffer_attr</name></type> <name pos:start="15:20" pos:end="15:23">attr</name> <init pos:start="15:25" pos:end="15:48">= <expr pos:start="15:27" pos:end="15:48"><block pos:start="15:27" pos:end="15:48">{ <expr pos:start="15:29" pos:end="15:30"><operator pos:start="15:29" pos:end="15:29">-</operator><literal type="number" pos:start="15:30" pos:end="15:30">1</literal></expr>, <expr pos:start="15:33" pos:end="15:34"><operator pos:start="15:33" pos:end="15:33">-</operator><literal type="number" pos:start="15:34" pos:end="15:34">1</literal></expr>, <expr pos:start="15:37" pos:end="15:38"><operator pos:start="15:37" pos:end="15:37">-</operator><literal type="number" pos:start="15:38" pos:end="15:38">1</literal></expr>, <expr pos:start="15:41" pos:end="15:42"><operator pos:start="15:41" pos:end="15:41">-</operator><literal type="number" pos:start="15:42" pos:end="15:42">1</literal></expr>, <expr pos:start="15:45" pos:end="15:46"><operator pos:start="15:45" pos:end="15:45">-</operator><literal type="number" pos:start="15:46" pos:end="15:46">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:45"><decl pos:start="17:5" pos:end="17:44"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:27">stream_name</name> <init pos:start="17:29" pos:end="17:44">= <expr pos:start="17:31" pos:end="17:44"><name pos:start="17:31" pos:end="17:44"><name pos:start="17:31" pos:end="17:31">s</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:44">stream_name</name></name></expr></init></decl>;</decl_stmt>



    <for pos:start="21:5" pos:end="33:5">for <control pos:start="21:9" pos:end="21:39">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:34"><expr pos:start="21:17" pos:end="21:33"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:33"><name pos:start="21:21" pos:end="21:21">h</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:33">nb_streams</name></name></expr>;</condition> <incr pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:36">i</name><operator pos:start="21:37" pos:end="21:38">++</operator></expr></incr>)</control> <block pos:start="21:41" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:9">

        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="31:9">if <condition pos:start="23:12" pos:end="23:67">(<expr pos:start="23:13" pos:end="23:66"><name pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:13">h</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:22">streams</name><index pos:start="23:23" pos:end="23:25">[<expr pos:start="23:24" pos:end="23:24"><name pos:start="23:24" pos:end="23:24">i</name></expr>]</index></name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:44"><name pos:start="23:28" pos:end="23:32">codec</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:44">codec_type</name></name> <operator pos:start="23:46" pos:end="23:47">==</operator> <name pos:start="23:49" pos:end="23:66">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="23:69" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:18">

            <expr_stmt pos:start="25:13" pos:end="25:31"><expr pos:start="25:13" pos:end="25:30"><name pos:start="25:13" pos:end="25:14">st</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:30"><name pos:start="25:18" pos:end="25:18">h</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:27">streams</name><index pos:start="25:28" pos:end="25:30">[<expr pos:start="25:29" pos:end="25:29"><name pos:start="25:29" pos:end="25:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:32"><expr pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:27">stream_index</name></name> <operator pos:start="27:29" pos:end="27:29">=</operator> <name pos:start="27:31" pos:end="27:31">i</name></expr>;</expr_stmt>

            <break pos:start="29:13" pos:end="29:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:12">(<expr pos:start="37:9" pos:end="37:11"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:11">st</name></expr>)</condition> <block pos:start="37:14" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:31">

        <expr_stmt pos:start="39:9" pos:end="39:60"><expr pos:start="39:9" pos:end="39:59"><call pos:start="39:9" pos:end="39:59"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:59">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">s</name></expr></argument>, <argument pos:start="39:19" pos:end="39:30"><expr pos:start="39:19" pos:end="39:30"><name pos:start="39:19" pos:end="39:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:33" pos:end="39:58"><expr pos:start="39:33" pos:end="39:58"><literal type="string" pos:start="39:33" pos:end="39:58">"No audio stream found.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:31">return <expr pos:start="41:16" pos:end="41:30"><call pos:start="41:16" pos:end="41:30"><name pos:start="41:16" pos:end="41:22">AVERROR</name><argument_list pos:start="41:23" pos:end="41:30">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="57:5"><if pos:start="47:5" pos:end="57:5">if <condition pos:start="47:8" pos:end="47:21">(<expr pos:start="47:9" pos:end="47:20"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:20">stream_name</name></expr>)</condition> <block pos:start="47:23" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:37">

        <if_stmt pos:start="49:9" pos:end="55:37"><if pos:start="49:9" pos:end="51:38">if <condition pos:start="49:12" pos:end="49:27">(<expr pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:13">h</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:23">filename</name><index pos:start="49:24" pos:end="49:26">[<expr pos:start="49:25" pos:end="49:25"><literal type="number" pos:start="49:25" pos:end="49:25">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:38"><block_content pos:start="51:13" pos:end="51:38">

            <expr_stmt pos:start="51:13" pos:end="51:38"><expr pos:start="51:13" pos:end="51:37"><name pos:start="51:13" pos:end="51:23">stream_name</name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:37"><name pos:start="51:27" pos:end="51:27">h</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:37">filename</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="53:9" pos:end="55:37">else<block type="pseudo" pos:start="55:13" pos:end="55:37"><block_content pos:start="55:13" pos:end="55:37">

            <expr_stmt pos:start="55:13" pos:end="55:37"><expr pos:start="55:13" pos:end="55:36"><name pos:start="55:13" pos:end="55:23">stream_name</name> <operator pos:start="55:25" pos:end="55:25">=</operator> <literal type="string" pos:start="55:27" pos:end="55:36">"Playback"</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:62"><expr pos:start="61:5" pos:end="61:61"><name pos:start="61:5" pos:end="61:13"><name pos:start="61:5" pos:end="61:6">ss</name><operator pos:start="61:7" pos:end="61:7">.</operator><name pos:start="61:8" pos:end="61:13">format</name></name> <operator pos:start="61:15" pos:end="61:15">=</operator> <call pos:start="61:17" pos:end="61:61"><name pos:start="61:17" pos:end="61:40">codec_id_to_pulse_format</name><argument_list pos:start="61:41" pos:end="61:61">(<argument pos:start="61:42" pos:end="61:60"><expr pos:start="61:42" pos:end="61:60"><name pos:start="61:42" pos:end="61:60"><name pos:start="61:42" pos:end="61:43">st</name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:50">codec</name><operator pos:start="61:51" pos:end="61:52">-&gt;</operator><name pos:start="61:53" pos:end="61:60">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:37"><expr pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:11"><name pos:start="63:5" pos:end="63:6">ss</name><operator pos:start="63:7" pos:end="63:7">.</operator><name pos:start="63:8" pos:end="63:11">rate</name></name> <operator pos:start="63:13" pos:end="63:13">=</operator> <name pos:start="63:15" pos:end="63:36"><name pos:start="63:15" pos:end="63:16">st</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:23">codec</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:36">sample_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:38"><expr pos:start="65:5" pos:end="65:37"><name pos:start="65:5" pos:end="65:15"><name pos:start="65:5" pos:end="65:6">ss</name><operator pos:start="65:7" pos:end="65:7">.</operator><name pos:start="65:8" pos:end="65:15">channels</name></name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:37"><name pos:start="65:19" pos:end="65:20">st</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:27">codec</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:37">channels</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="85:32"><expr pos:start="69:5" pos:end="85:31"><name pos:start="69:5" pos:end="69:9"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:9">pa</name></name> <operator pos:start="69:11" pos:end="69:11">=</operator> <call pos:start="69:13" pos:end="85:31"><name pos:start="69:13" pos:end="69:25">pa_simple_new</name><argument_list pos:start="69:26" pos:end="85:31">(<argument pos:start="69:27" pos:end="69:35"><expr pos:start="69:27" pos:end="69:35"><name pos:start="69:27" pos:end="69:35"><name pos:start="69:27" pos:end="69:27">s</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:35">server</name></name></expr></argument>,                 <comment type="line" pos:start="69:54" pos:end="69:62">// Server</comment>

                          <argument pos:start="71:27" pos:end="71:33"><expr pos:start="71:27" pos:end="71:33"><name pos:start="71:27" pos:end="71:33"><name pos:start="71:27" pos:end="71:27">s</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:33">name</name></name></expr></argument>,                   <comment type="line" pos:start="71:54" pos:end="71:72">// Application name</comment>

                          <argument pos:start="73:27" pos:end="73:44"><expr pos:start="73:27" pos:end="73:44"><name pos:start="73:27" pos:end="73:44">PA_STREAM_PLAYBACK</name></expr></argument>,

                          <argument pos:start="75:27" pos:end="75:35"><expr pos:start="75:27" pos:end="75:35"><name pos:start="75:27" pos:end="75:35"><name pos:start="75:27" pos:end="75:27">s</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:35">device</name></name></expr></argument>,                 <comment type="line" pos:start="75:54" pos:end="75:62">// Device</comment>

                          <argument pos:start="77:27" pos:end="77:37"><expr pos:start="77:27" pos:end="77:37"><name pos:start="77:27" pos:end="77:37">stream_name</name></expr></argument>,               <comment type="line" pos:start="77:54" pos:end="77:79">// Description of a stream</comment>

                          <argument pos:start="79:27" pos:end="79:29"><expr pos:start="79:27" pos:end="79:29"><operator pos:start="79:27" pos:end="79:27">&amp;</operator><name pos:start="79:28" pos:end="79:29">ss</name></expr></argument>,                       <comment type="line" pos:start="79:54" pos:end="79:69">// Sample format</comment>

                          <argument pos:start="81:27" pos:end="81:30"><expr pos:start="81:27" pos:end="81:30"><name pos:start="81:27" pos:end="81:30">NULL</name></expr></argument>,                      <comment type="line" pos:start="81:54" pos:end="81:79">// Use default channel map</comment>

                          <argument pos:start="83:27" pos:end="83:31"><expr pos:start="83:27" pos:end="83:31"><operator pos:start="83:27" pos:end="83:27">&amp;</operator><name pos:start="83:28" pos:end="83:31">attr</name></expr></argument>,                     <comment type="line" pos:start="83:54" pos:end="83:76">// Buffering attributes</comment>

                          <argument pos:start="85:27" pos:end="85:30"><expr pos:start="85:27" pos:end="85:30"><operator pos:start="85:27" pos:end="85:27">&amp;</operator><name pos:start="85:28" pos:end="85:30">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                     <comment type="line" pos:start="85:54" pos:end="85:62">// Result</comment>



    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:15">(<expr pos:start="89:9" pos:end="89:14"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:10">s</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:14">pa</name></name></expr>)</condition> <block pos:start="89:17" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:28">

        <expr_stmt pos:start="91:9" pos:end="91:80"><expr pos:start="91:9" pos:end="91:79"><call pos:start="91:9" pos:end="91:79"><name pos:start="91:9" pos:end="91:14">av_log</name><argument_list pos:start="91:15" pos:end="91:79">(<argument pos:start="91:16" pos:end="91:16"><expr pos:start="91:16" pos:end="91:16"><name pos:start="91:16" pos:end="91:16">s</name></expr></argument>, <argument pos:start="91:19" pos:end="91:30"><expr pos:start="91:19" pos:end="91:30"><name pos:start="91:19" pos:end="91:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:33" pos:end="91:60"><expr pos:start="91:33" pos:end="91:60"><literal type="string" pos:start="91:33" pos:end="91:60">"pa_simple_new failed: %s\n"</literal></expr></argument>, <argument pos:start="91:63" pos:end="91:78"><expr pos:start="91:63" pos:end="91:78"><call pos:start="91:63" pos:end="91:78"><name pos:start="91:63" pos:end="91:73">pa_strerror</name><argument_list pos:start="91:74" pos:end="91:78">(<argument pos:start="91:75" pos:end="91:77"><expr pos:start="91:75" pos:end="91:77"><name pos:start="91:75" pos:end="91:77">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:28">return <expr pos:start="93:16" pos:end="93:27"><call pos:start="93:16" pos:end="93:27"><name pos:start="93:16" pos:end="93:22">AVERROR</name><argument_list pos:start="93:23" pos:end="93:27">(<argument pos:start="93:24" pos:end="93:26"><expr pos:start="93:24" pos:end="93:26"><name pos:start="93:24" pos:end="93:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:44"><expr pos:start="99:5" pos:end="99:43"><call pos:start="99:5" pos:end="99:43"><name pos:start="99:5" pos:end="99:23">avpriv_set_pts_info</name><argument_list pos:start="99:24" pos:end="99:43">(<argument pos:start="99:25" pos:end="99:26"><expr pos:start="99:25" pos:end="99:26"><name pos:start="99:25" pos:end="99:26">st</name></expr></argument>, <argument pos:start="99:29" pos:end="99:30"><expr pos:start="99:29" pos:end="99:30"><literal type="number" pos:start="99:29" pos:end="99:30">64</literal></expr></argument>, <argument pos:start="99:33" pos:end="99:33"><expr pos:start="99:33" pos:end="99:33"><literal type="number" pos:start="99:33" pos:end="99:33">1</literal></expr></argument>, <argument pos:start="99:36" pos:end="99:42"><expr pos:start="99:36" pos:end="99:42"><literal type="number" pos:start="99:36" pos:end="99:42">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="99:47" pos:end="99:69">/* 64 bits pts in us */</comment>



    <return pos:start="103:5" pos:end="103:13">return <expr pos:start="103:12" pos:end="103:12"><literal type="number" pos:start="103:12" pos:end="103:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
