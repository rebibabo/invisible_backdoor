<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19582.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">unsigned</name> <name pos:start="1:17" pos:end="1:19">int</name></type> <name pos:start="1:21" pos:end="1:32">dec_movem_rm</name><parameter_list pos:start="1:33" pos:end="1:50">(<parameter pos:start="1:34" pos:end="1:49"><decl pos:start="1:34" pos:end="1:49"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:45">DisasContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:9" pos:end="53:17">

	<decl_stmt pos:start="5:9" pos:end="5:17"><decl pos:start="5:9" pos:end="5:16"><type pos:start="5:9" pos:end="5:12"><name pos:start="5:9" pos:end="5:12">TCGv</name></type> <name pos:start="5:14" pos:end="5:16">tmp</name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:18"><decl pos:start="7:9" pos:end="7:17"><type pos:start="7:9" pos:end="7:12"><name pos:start="7:9" pos:end="7:12">TCGv</name></type> <name pos:start="7:14" pos:end="7:17">addr</name></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:14"><decl pos:start="9:9" pos:end="9:13"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">i</name></decl>;</decl_stmt>



	<expr_stmt pos:start="13:9" pos:end="15:48"><expr pos:start="13:9" pos:end="15:47"><call pos:start="13:9" pos:end="15:47"><name pos:start="13:9" pos:end="13:11">DIS</name><argument_list pos:start="13:12" pos:end="15:47">(<argument pos:start="13:13" pos:end="15:46"><expr pos:start="13:13" pos:end="15:46"><call pos:start="13:13" pos:end="15:46"><name pos:start="13:13" pos:end="13:19">fprintf</name> <argument_list pos:start="13:21" pos:end="15:46">(<argument pos:start="13:22" pos:end="13:28"><expr pos:start="13:22" pos:end="13:28"><name pos:start="13:22" pos:end="13:28">logfile</name></expr></argument>, <argument pos:start="13:31" pos:end="13:53"><expr pos:start="13:31" pos:end="13:53"><literal type="string" pos:start="13:31" pos:end="13:53">"movem $r%u, [$r%u%s\n"</literal></expr></argument>, <argument pos:start="13:56" pos:end="13:62"><expr pos:start="13:56" pos:end="13:62"><name pos:start="13:56" pos:end="13:62"><name pos:start="13:56" pos:end="13:57">dc</name><operator pos:start="13:58" pos:end="13:59">-&gt;</operator><name pos:start="13:60" pos:end="13:62">op2</name></name></expr></argument>, <argument pos:start="13:65" pos:end="13:71"><expr pos:start="13:65" pos:end="13:71"><name pos:start="13:65" pos:end="13:71"><name pos:start="13:65" pos:end="13:66">dc</name><operator pos:start="13:67" pos:end="13:68">-&gt;</operator><name pos:start="13:69" pos:end="13:71">op1</name></name></expr></argument>,

		     <argument pos:start="15:22" pos:end="15:45"><expr pos:start="15:22" pos:end="15:45"><ternary pos:start="15:22" pos:end="15:45"><condition pos:start="15:22" pos:end="15:34"><expr pos:start="15:22" pos:end="15:32"><name pos:start="15:22" pos:end="15:32"><name pos:start="15:22" pos:end="15:23">dc</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:32">postinc</name></name></expr> ?</condition><then pos:start="15:36" pos:end="15:39"> <expr pos:start="15:36" pos:end="15:39"><literal type="string" pos:start="15:36" pos:end="15:39">"+]"</literal></expr> </then><else pos:start="15:41" pos:end="15:45">: <expr pos:start="15:43" pos:end="15:45"><literal type="string" pos:start="15:43" pos:end="15:45">"]"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="19:9" pos:end="19:32"><expr pos:start="19:9" pos:end="19:31"><call pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:27">cris_flush_cc_state</name><argument_list pos:start="19:28" pos:end="19:31">(<argument pos:start="19:29" pos:end="19:30"><expr pos:start="19:29" pos:end="19:30"><name pos:start="19:29" pos:end="19:30">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:11">tmp</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:39"><name pos:start="23:15" pos:end="23:26">tcg_temp_new</name><argument_list pos:start="23:27" pos:end="23:39">(<argument pos:start="23:28" pos:end="23:38"><expr pos:start="23:28" pos:end="23:38"><name pos:start="23:28" pos:end="23:38">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="25:9" pos:end="25:41"><expr pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:12">addr</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:40"><name pos:start="25:16" pos:end="25:27">tcg_temp_new</name><argument_list pos:start="25:28" pos:end="25:40">(<argument pos:start="25:29" pos:end="25:39"><expr pos:start="25:29" pos:end="25:39"><name pos:start="25:29" pos:end="25:39">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="27:9" pos:end="27:32"><expr pos:start="27:9" pos:end="27:31"><call pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:23">tcg_gen_movi_tl</name><argument_list pos:start="27:24" pos:end="27:31">(<argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">tmp</name></expr></argument>, <argument pos:start="27:30" pos:end="27:30"><expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="29:9" pos:end="29:45"><expr pos:start="29:9" pos:end="29:44"><call pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:22">tcg_gen_mov_tl</name><argument_list pos:start="29:23" pos:end="29:44">(<argument pos:start="29:24" pos:end="29:27"><expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:27">addr</name></expr></argument>, <argument pos:start="29:30" pos:end="29:43"><expr pos:start="29:30" pos:end="29:43"><name pos:start="29:30" pos:end="29:43"><name pos:start="29:30" pos:end="29:34">cpu_R</name><index pos:start="29:35" pos:end="29:43">[<expr pos:start="29:36" pos:end="29:42"><name pos:start="29:36" pos:end="29:42"><name pos:start="29:36" pos:end="29:37">dc</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:42">op1</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for pos:start="31:9" pos:end="41:9">for <control pos:start="31:13" pos:end="31:38">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">i</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:33"><expr pos:start="31:21" pos:end="31:32"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:24">&lt;=</operator> <name pos:start="31:26" pos:end="31:32"><name pos:start="31:26" pos:end="31:27">dc</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:32">op2</name></name></expr>;</condition> <incr pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:35">i</name><operator pos:start="31:36" pos:end="31:37">++</operator></expr></incr>)</control> <block pos:start="31:40" pos:end="41:9">{<block_content pos:start="37:17" pos:end="39:48">

		<comment type="block" pos:start="33:17" pos:end="33:37">/* Displace addr.  */</comment>

		<comment type="block" pos:start="35:17" pos:end="35:41">/* Perform the store.  */</comment>

		<expr_stmt pos:start="37:17" pos:end="37:49"><expr pos:start="37:17" pos:end="37:48"><call pos:start="37:17" pos:end="37:48"><name pos:start="37:17" pos:end="37:25">gen_store</name><argument_list pos:start="37:26" pos:end="37:48">(<argument pos:start="37:27" pos:end="37:28"><expr pos:start="37:27" pos:end="37:28"><name pos:start="37:27" pos:end="37:28">dc</name></expr></argument>, <argument pos:start="37:31" pos:end="37:34"><expr pos:start="37:31" pos:end="37:34"><name pos:start="37:31" pos:end="37:34">addr</name></expr></argument>, <argument pos:start="37:37" pos:end="37:44"><expr pos:start="37:37" pos:end="37:44"><name pos:start="37:37" pos:end="37:44"><name pos:start="37:37" pos:end="37:41">cpu_R</name><index pos:start="37:42" pos:end="37:44">[<expr pos:start="37:43" pos:end="37:43"><name pos:start="37:43" pos:end="37:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="37:47" pos:end="37:47"><expr pos:start="37:47" pos:end="37:47"><literal type="number" pos:start="37:47" pos:end="37:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="39:17" pos:end="39:48"><expr pos:start="39:17" pos:end="39:47"><call pos:start="39:17" pos:end="39:47"><name pos:start="39:17" pos:end="39:30">tcg_gen_add_tl</name><argument_list pos:start="39:31" pos:end="39:47">(<argument pos:start="39:32" pos:end="39:35"><expr pos:start="39:32" pos:end="39:35"><name pos:start="39:32" pos:end="39:35">addr</name></expr></argument>, <argument pos:start="39:38" pos:end="39:41"><expr pos:start="39:38" pos:end="39:41"><name pos:start="39:38" pos:end="39:41">addr</name></expr></argument>, <argument pos:start="39:44" pos:end="39:46"><expr pos:start="39:44" pos:end="39:46"><name pos:start="39:44" pos:end="39:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></for>

	<if_stmt pos:start="43:9" pos:end="45:53"><if pos:start="43:9" pos:end="45:53">if <condition pos:start="43:12" pos:end="43:24">(<expr pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:14">dc</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:23">postinc</name></name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:53"><block_content pos:start="45:17" pos:end="45:53">

		<expr_stmt pos:start="45:17" pos:end="45:53"><expr pos:start="45:17" pos:end="45:52"><call pos:start="45:17" pos:end="45:52"><name pos:start="45:17" pos:end="45:30">tcg_gen_mov_tl</name><argument_list pos:start="45:31" pos:end="45:52">(<argument pos:start="45:32" pos:end="45:45"><expr pos:start="45:32" pos:end="45:45"><name pos:start="45:32" pos:end="45:45"><name pos:start="45:32" pos:end="45:36">cpu_R</name><index pos:start="45:37" pos:end="45:45">[<expr pos:start="45:38" pos:end="45:44"><name pos:start="45:38" pos:end="45:44"><name pos:start="45:38" pos:end="45:39">dc</name><operator pos:start="45:40" pos:end="45:41">-&gt;</operator><name pos:start="45:42" pos:end="45:44">op1</name></name></expr>]</index></name></expr></argument>, <argument pos:start="45:48" pos:end="45:51"><expr pos:start="45:48" pos:end="45:51"><name pos:start="45:48" pos:end="45:51">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt pos:start="47:9" pos:end="47:28"><expr pos:start="47:9" pos:end="47:27"><call pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:20">cris_cc_mask</name><argument_list pos:start="47:21" pos:end="47:27">(<argument pos:start="47:22" pos:end="47:23"><expr pos:start="47:22" pos:end="47:23"><name pos:start="47:22" pos:end="47:23">dc</name></expr></argument>, <argument pos:start="47:26" pos:end="47:26"><expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="49:9" pos:end="49:27"><expr pos:start="49:9" pos:end="49:26"><call pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:21">tcg_temp_free</name><argument_list pos:start="49:22" pos:end="49:26">(<argument pos:start="49:23" pos:end="49:25"><expr pos:start="49:23" pos:end="49:25"><name pos:start="49:23" pos:end="49:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="51:9" pos:end="51:28"><expr pos:start="51:9" pos:end="51:27"><call pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:21">tcg_temp_free</name><argument_list pos:start="51:22" pos:end="51:27">(<argument pos:start="51:23" pos:end="51:26"><expr pos:start="51:23" pos:end="51:26"><name pos:start="51:23" pos:end="51:26">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">2</literal></expr>;</return>

</block_content>}</block></function>
</unit>
