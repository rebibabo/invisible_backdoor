<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23498.c" pos:tabs="8"><function pos:start="1:1" pos:end="297:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">TCGArg</name></type> <name pos:start="1:15" pos:end="1:35">do_constant_folding_2</name><parameter_list pos:start="1:36" pos:end="1:63">(<parameter pos:start="1:37" pos:end="1:42"><decl pos:start="1:37" pos:end="1:42"><type pos:start="1:37" pos:end="1:42"><name pos:start="1:37" pos:end="1:39">int</name></type> <name pos:start="1:41" pos:end="1:42">op</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:52"><decl pos:start="1:45" pos:end="1:52"><type pos:start="1:45" pos:end="1:52"><name pos:start="1:45" pos:end="1:50">TCGArg</name></type> <name pos:start="1:52" pos:end="1:52">x</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:62"><decl pos:start="1:55" pos:end="1:62"><type pos:start="1:55" pos:end="1:62"><name pos:start="1:55" pos:end="1:60">TCGArg</name></type> <name pos:start="1:62" pos:end="1:62">y</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="297:1">{<block_content pos:start="5:5" pos:end="295:5">

    <switch pos:start="5:5" pos:end="295:5">switch <condition pos:start="5:12" pos:end="5:15">(<expr pos:start="5:13" pos:end="5:14"><name pos:start="5:13" pos:end="5:14">op</name></expr>)</condition> <block pos:start="5:17" pos:end="295:5">{<block_content pos:start="7:5" pos:end="293:20">

    <expr_stmt pos:start="7:5" pos:end="7:23"><expr pos:start="7:5" pos:end="7:23"><call pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:17">CASE_OP_32_64</name><argument_list pos:start="7:18" pos:end="7:22">(<argument pos:start="7:19" pos:end="7:21"><expr pos:start="7:19" pos:end="7:21"><name pos:start="7:19" pos:end="7:21">add</name></expr></argument>)</argument_list></call><operator pos:start="7:23" pos:end="7:23">:</operator></expr></expr_stmt>

        <return pos:start="9:9" pos:end="9:21">return <expr pos:start="9:16" pos:end="9:20"><name pos:start="9:16" pos:end="9:16">x</name> <operator pos:start="9:18" pos:end="9:18">+</operator> <name pos:start="9:20" pos:end="9:20">y</name></expr>;</return>



    <expr_stmt pos:start="13:5" pos:end="13:23"><expr pos:start="13:5" pos:end="13:23"><call pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:17">CASE_OP_32_64</name><argument_list pos:start="13:18" pos:end="13:22">(<argument pos:start="13:19" pos:end="13:21"><expr pos:start="13:19" pos:end="13:21"><name pos:start="13:19" pos:end="13:21">sub</name></expr></argument>)</argument_list></call><operator pos:start="13:23" pos:end="13:23">:</operator></expr></expr_stmt>

        <return pos:start="15:9" pos:end="15:21">return <expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:16">x</name> <operator pos:start="15:18" pos:end="15:18">-</operator> <name pos:start="15:20" pos:end="15:20">y</name></expr>;</return>



    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:23"><call pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:17">CASE_OP_32_64</name><argument_list pos:start="19:18" pos:end="19:22">(<argument pos:start="19:19" pos:end="19:21"><expr pos:start="19:19" pos:end="19:21"><name pos:start="19:19" pos:end="19:21">mul</name></expr></argument>)</argument_list></call><operator pos:start="19:23" pos:end="19:23">:</operator></expr></expr_stmt>

        <return pos:start="21:9" pos:end="21:21">return <expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:16">x</name> <operator pos:start="21:18" pos:end="21:18">*</operator> <name pos:start="21:20" pos:end="21:20">y</name></expr>;</return>



    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:23"><call pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:17">CASE_OP_32_64</name><argument_list pos:start="25:18" pos:end="25:22">(<argument pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:21">and</name></expr></argument>)</argument_list></call><operator pos:start="25:23" pos:end="25:23">:</operator></expr></expr_stmt>

        <return pos:start="27:9" pos:end="27:21">return <expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:16">x</name> <operator pos:start="27:18" pos:end="27:18">&amp;</operator> <name pos:start="27:20" pos:end="27:20">y</name></expr>;</return>



    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:22"><call pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:17">CASE_OP_32_64</name><argument_list pos:start="31:18" pos:end="31:21">(<argument pos:start="31:19" pos:end="31:20"><expr pos:start="31:19" pos:end="31:20"><name pos:start="31:19" pos:end="31:20">or</name></expr></argument>)</argument_list></call><operator pos:start="31:22" pos:end="31:22">:</operator></expr></expr_stmt>

        <return pos:start="33:9" pos:end="33:21">return <expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:16">x</name> <operator pos:start="33:18" pos:end="33:18">|</operator> <name pos:start="33:20" pos:end="33:20">y</name></expr>;</return>



    <expr_stmt pos:start="37:5" pos:end="37:23"><expr pos:start="37:5" pos:end="37:23"><call pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:17">CASE_OP_32_64</name><argument_list pos:start="37:18" pos:end="37:22">(<argument pos:start="37:19" pos:end="37:21"><expr pos:start="37:19" pos:end="37:21"><name pos:start="37:19" pos:end="37:21">xor</name></expr></argument>)</argument_list></call><operator pos:start="37:23" pos:end="37:23">:</operator></expr></expr_stmt>

        <return pos:start="39:9" pos:end="39:21">return <expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:16">x</name> <operator pos:start="39:18" pos:end="39:18">^</operator> <name pos:start="39:20" pos:end="39:20">y</name></expr>;</return>



    <case pos:start="43:5" pos:end="43:26">case <expr pos:start="43:10" pos:end="43:25"><name pos:start="43:10" pos:end="43:25">INDEX_op_shl_i32</name></expr>:</case>

        <return pos:start="45:9" pos:end="50:0">return <expr pos:start="45:16" pos:end="45:41"><operator pos:start="45:16" pos:end="45:16">(</operator><name pos:start="45:17" pos:end="45:24">uint32_t</name><operator pos:start="45:25" pos:end="45:25">)</operator><name pos:start="45:26" pos:end="45:26">x</name> <operator pos:start="45:28" pos:end="45:29">&lt;&lt;</operator> <operator pos:start="45:31" pos:end="45:31">(</operator><name pos:start="45:32" pos:end="45:39">uint32_t</name><operator pos:start="45:40" pos:end="45:40">)</operator><name pos:start="45:41" pos:end="45:41">y</name></expr>;</return>



<cpp:if pos:start="49:1" pos:end="49:29">#<cpp:directive pos:start="49:2" pos:end="49:3">if</cpp:directive> <expr pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:23">TCG_TARGET_REG_BITS</name> <operator pos:start="49:25" pos:end="49:26">==</operator> <literal type="number" pos:start="49:28" pos:end="49:29">64</literal></expr></cpp:if>

    <case pos:start="51:5" pos:end="51:26">case <expr pos:start="51:10" pos:end="51:25"><name pos:start="51:10" pos:end="51:25">INDEX_op_shl_i64</name></expr>:</case>

        <return pos:start="53:9" pos:end="56:0">return <expr pos:start="53:16" pos:end="53:41"><operator pos:start="53:16" pos:end="53:16">(</operator><name pos:start="53:17" pos:end="53:24">uint64_t</name><operator pos:start="53:25" pos:end="53:25">)</operator><name pos:start="53:26" pos:end="53:26">x</name> <operator pos:start="53:28" pos:end="53:29">&lt;&lt;</operator> <operator pos:start="53:31" pos:end="53:31">(</operator><name pos:start="53:32" pos:end="53:39">uint64_t</name><operator pos:start="53:40" pos:end="53:40">)</operator><name pos:start="53:41" pos:end="53:41">y</name></expr>;</return>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>



    <case pos:start="59:5" pos:end="59:26">case <expr pos:start="59:10" pos:end="59:25"><name pos:start="59:10" pos:end="59:25">INDEX_op_shr_i32</name></expr>:</case>

        <return pos:start="61:9" pos:end="66:0">return <expr pos:start="61:16" pos:end="61:41"><operator pos:start="61:16" pos:end="61:16">(</operator><name pos:start="61:17" pos:end="61:24">uint32_t</name><operator pos:start="61:25" pos:end="61:25">)</operator><name pos:start="61:26" pos:end="61:26">x</name> <operator pos:start="61:28" pos:end="61:29">&gt;&gt;</operator> <operator pos:start="61:31" pos:end="61:31">(</operator><name pos:start="61:32" pos:end="61:39">uint32_t</name><operator pos:start="61:40" pos:end="61:40">)</operator><name pos:start="61:41" pos:end="61:41">y</name></expr>;</return>



<cpp:if pos:start="65:1" pos:end="65:29">#<cpp:directive pos:start="65:2" pos:end="65:3">if</cpp:directive> <expr pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:23">TCG_TARGET_REG_BITS</name> <operator pos:start="65:25" pos:end="65:26">==</operator> <literal type="number" pos:start="65:28" pos:end="65:29">64</literal></expr></cpp:if>

    <case pos:start="67:5" pos:end="67:26">case <expr pos:start="67:10" pos:end="67:25"><name pos:start="67:10" pos:end="67:25">INDEX_op_shr_i64</name></expr>:</case>

        <return pos:start="69:9" pos:end="72:0">return <expr pos:start="69:16" pos:end="69:41"><operator pos:start="69:16" pos:end="69:16">(</operator><name pos:start="69:17" pos:end="69:24">uint64_t</name><operator pos:start="69:25" pos:end="69:25">)</operator><name pos:start="69:26" pos:end="69:26">x</name> <operator pos:start="69:28" pos:end="69:29">&gt;&gt;</operator> <operator pos:start="69:31" pos:end="69:31">(</operator><name pos:start="69:32" pos:end="69:39">uint64_t</name><operator pos:start="69:40" pos:end="69:40">)</operator><name pos:start="69:41" pos:end="69:41">y</name></expr>;</return>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>



    <case pos:start="75:5" pos:end="75:26">case <expr pos:start="75:10" pos:end="75:25"><name pos:start="75:10" pos:end="75:25">INDEX_op_sar_i32</name></expr>:</case>

        <return pos:start="77:9" pos:end="82:0">return <expr pos:start="77:16" pos:end="77:39"><operator pos:start="77:16" pos:end="77:16">(</operator><name pos:start="77:17" pos:end="77:23">int32_t</name><operator pos:start="77:24" pos:end="77:24">)</operator><name pos:start="77:25" pos:end="77:25">x</name> <operator pos:start="77:27" pos:end="77:28">&gt;&gt;</operator> <operator pos:start="77:30" pos:end="77:30">(</operator><name pos:start="77:31" pos:end="77:37">int32_t</name><operator pos:start="77:38" pos:end="77:38">)</operator><name pos:start="77:39" pos:end="77:39">y</name></expr>;</return>



<cpp:if pos:start="81:1" pos:end="81:29">#<cpp:directive pos:start="81:2" pos:end="81:3">if</cpp:directive> <expr pos:start="81:5" pos:end="81:29"><name pos:start="81:5" pos:end="81:23">TCG_TARGET_REG_BITS</name> <operator pos:start="81:25" pos:end="81:26">==</operator> <literal type="number" pos:start="81:28" pos:end="81:29">64</literal></expr></cpp:if>

    <case pos:start="83:5" pos:end="83:26">case <expr pos:start="83:10" pos:end="83:25"><name pos:start="83:10" pos:end="83:25">INDEX_op_sar_i64</name></expr>:</case>

        <return pos:start="85:9" pos:end="92:0">return <expr pos:start="85:16" pos:end="85:39"><operator pos:start="85:16" pos:end="85:16">(</operator><name pos:start="85:17" pos:end="85:23">int64_t</name><operator pos:start="85:24" pos:end="85:24">)</operator><name pos:start="85:25" pos:end="85:25">x</name> <operator pos:start="85:27" pos:end="85:28">&gt;&gt;</operator> <operator pos:start="85:30" pos:end="85:30">(</operator><name pos:start="85:31" pos:end="85:37">int64_t</name><operator pos:start="85:38" pos:end="85:38">)</operator><name pos:start="85:39" pos:end="85:39">y</name></expr>;</return>

<cpp:endif pos:start="87:1" pos:end="87:6">#<cpp:directive pos:start="87:2" pos:end="87:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="91:1" pos:end="91:29">#<cpp:directive pos:start="91:2" pos:end="91:6">ifdef</cpp:directive> <name pos:start="91:8" pos:end="91:29">TCG_TARGET_HAS_rot_i32</name></cpp:ifdef>

    <case pos:start="93:5" pos:end="96:0">case <expr pos:start="93:10" pos:end="93:26"><name pos:start="93:10" pos:end="93:26">INDEX_op_rotr_i32</name></expr>:</case>

<cpp:if pos:start="95:1" pos:end="95:29">#<cpp:directive pos:start="95:2" pos:end="95:3">if</cpp:directive> <expr pos:start="95:5" pos:end="95:29"><name pos:start="95:5" pos:end="95:23">TCG_TARGET_REG_BITS</name> <operator pos:start="95:25" pos:end="95:26">==</operator> <literal type="number" pos:start="95:28" pos:end="95:29">64</literal></expr></cpp:if>

        <expr_stmt pos:start="97:9" pos:end="97:24"><expr pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:9">x</name> <operator pos:start="97:11" pos:end="97:12">&amp;=</operator> <literal type="number" pos:start="97:14" pos:end="97:23">0xffffffff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="102:0"><expr pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:9">y</name> <operator pos:start="99:11" pos:end="99:12">&amp;=</operator> <literal type="number" pos:start="99:14" pos:end="99:23">0xffffffff</literal></expr>;</expr_stmt>

<cpp:endif pos:start="101:1" pos:end="101:6">#<cpp:directive pos:start="101:2" pos:end="101:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="103:9" pos:end="103:39"><expr pos:start="103:9" pos:end="103:38"><name pos:start="103:9" pos:end="103:9">x</name> <operator pos:start="103:11" pos:end="103:11">=</operator> <operator pos:start="103:13" pos:end="103:13">(</operator><name pos:start="103:14" pos:end="103:14">x</name> <operator pos:start="103:16" pos:end="103:17">&lt;&lt;</operator> <operator pos:start="103:19" pos:end="103:19">(</operator><literal type="number" pos:start="103:20" pos:end="103:23">32</literal> <operator pos:start="103:23" pos:end="103:23">-</operator> <name pos:start="103:25" pos:end="103:25">y</name><operator pos:start="103:26" pos:end="103:26">)</operator><operator pos:start="103:27" pos:end="103:27">)</operator> <operator pos:start="103:29" pos:end="103:29">|</operator> <operator pos:start="103:31" pos:end="103:31">(</operator><name pos:start="103:32" pos:end="103:32">x</name> <operator pos:start="103:34" pos:end="103:35">&gt;&gt;</operator> <name pos:start="103:37" pos:end="103:37">y</name><operator pos:start="103:38" pos:end="103:38">)</operator></expr>;</expr_stmt>

        <return pos:start="105:9" pos:end="114:0">return <expr pos:start="105:16" pos:end="105:16"><name pos:start="105:16" pos:end="105:16">x</name></expr>;</return>

<cpp:endif pos:start="107:1" pos:end="107:6">#<cpp:directive pos:start="107:2" pos:end="107:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="111:1" pos:end="111:29">#<cpp:directive pos:start="111:2" pos:end="111:6">ifdef</cpp:directive> <name pos:start="111:8" pos:end="111:29">TCG_TARGET_HAS_rot_i64</name></cpp:ifdef>

<cpp:if pos:start="113:1" pos:end="113:29">#<cpp:directive pos:start="113:2" pos:end="113:3">if</cpp:directive> <expr pos:start="113:5" pos:end="113:29"><name pos:start="113:5" pos:end="113:23">TCG_TARGET_REG_BITS</name> <operator pos:start="113:25" pos:end="113:26">==</operator> <literal type="number" pos:start="113:28" pos:end="113:29">64</literal></expr></cpp:if>

    <case pos:start="115:5" pos:end="115:27">case <expr pos:start="115:10" pos:end="115:26"><name pos:start="115:10" pos:end="115:26">INDEX_op_rotr_i64</name></expr>:</case>

        <expr_stmt pos:start="117:9" pos:end="117:39"><expr pos:start="117:9" pos:end="117:38"><name pos:start="117:9" pos:end="117:9">x</name> <operator pos:start="117:11" pos:end="117:11">=</operator> <operator pos:start="117:13" pos:end="117:13">(</operator><name pos:start="117:14" pos:end="117:14">x</name> <operator pos:start="117:16" pos:end="117:17">&lt;&lt;</operator> <operator pos:start="117:19" pos:end="117:19">(</operator><literal type="number" pos:start="117:20" pos:end="117:23">64</literal> <operator pos:start="117:23" pos:end="117:23">-</operator> <name pos:start="117:25" pos:end="117:25">y</name><operator pos:start="117:26" pos:end="117:26">)</operator><operator pos:start="117:27" pos:end="117:27">)</operator> <operator pos:start="117:29" pos:end="117:29">|</operator> <operator pos:start="117:31" pos:end="117:31">(</operator><name pos:start="117:32" pos:end="117:32">x</name> <operator pos:start="117:34" pos:end="117:35">&gt;&gt;</operator> <name pos:start="117:37" pos:end="117:37">y</name><operator pos:start="117:38" pos:end="117:38">)</operator></expr>;</expr_stmt>

        <return pos:start="119:9" pos:end="128:0">return <expr pos:start="119:16" pos:end="119:16"><name pos:start="119:16" pos:end="119:16">x</name></expr>;</return>

<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="123:1" pos:end="123:6">#<cpp:directive pos:start="123:2" pos:end="123:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="127:1" pos:end="127:29">#<cpp:directive pos:start="127:2" pos:end="127:6">ifdef</cpp:directive> <name pos:start="127:8" pos:end="127:29">TCG_TARGET_HAS_rot_i32</name></cpp:ifdef>

    <case pos:start="129:5" pos:end="132:0">case <expr pos:start="129:10" pos:end="129:26"><name pos:start="129:10" pos:end="129:26">INDEX_op_rotl_i32</name></expr>:</case>

<cpp:if pos:start="131:1" pos:end="131:29">#<cpp:directive pos:start="131:2" pos:end="131:3">if</cpp:directive> <expr pos:start="131:5" pos:end="131:29"><name pos:start="131:5" pos:end="131:23">TCG_TARGET_REG_BITS</name> <operator pos:start="131:25" pos:end="131:26">==</operator> <literal type="number" pos:start="131:28" pos:end="131:29">64</literal></expr></cpp:if>

        <expr_stmt pos:start="133:9" pos:end="133:24"><expr pos:start="133:9" pos:end="133:23"><name pos:start="133:9" pos:end="133:9">x</name> <operator pos:start="133:11" pos:end="133:12">&amp;=</operator> <literal type="number" pos:start="133:14" pos:end="133:23">0xffffffff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="138:0"><expr pos:start="135:9" pos:end="135:23"><name pos:start="135:9" pos:end="135:9">y</name> <operator pos:start="135:11" pos:end="135:12">&amp;=</operator> <literal type="number" pos:start="135:14" pos:end="135:23">0xffffffff</literal></expr>;</expr_stmt>

<cpp:endif pos:start="137:1" pos:end="137:6">#<cpp:directive pos:start="137:2" pos:end="137:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="139:9" pos:end="139:39"><expr pos:start="139:9" pos:end="139:38"><name pos:start="139:9" pos:end="139:9">x</name> <operator pos:start="139:11" pos:end="139:11">=</operator> <operator pos:start="139:13" pos:end="139:13">(</operator><name pos:start="139:14" pos:end="139:14">x</name> <operator pos:start="139:16" pos:end="139:17">&lt;&lt;</operator> <name pos:start="139:19" pos:end="139:19">y</name><operator pos:start="139:20" pos:end="139:20">)</operator> <operator pos:start="139:22" pos:end="139:22">|</operator> <operator pos:start="139:24" pos:end="139:24">(</operator><name pos:start="139:25" pos:end="139:25">x</name> <operator pos:start="139:27" pos:end="139:28">&gt;&gt;</operator> <operator pos:start="139:30" pos:end="139:30">(</operator><literal type="number" pos:start="139:31" pos:end="139:34">32</literal> <operator pos:start="139:34" pos:end="139:34">-</operator> <name pos:start="139:36" pos:end="139:36">y</name><operator pos:start="139:37" pos:end="139:37">)</operator><operator pos:start="139:38" pos:end="139:38">)</operator></expr>;</expr_stmt>

        <return pos:start="141:9" pos:end="150:0">return <expr pos:start="141:16" pos:end="141:16"><name pos:start="141:16" pos:end="141:16">x</name></expr>;</return>

<cpp:endif pos:start="143:1" pos:end="143:6">#<cpp:directive pos:start="143:2" pos:end="143:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="147:1" pos:end="147:29">#<cpp:directive pos:start="147:2" pos:end="147:6">ifdef</cpp:directive> <name pos:start="147:8" pos:end="147:29">TCG_TARGET_HAS_rot_i64</name></cpp:ifdef>

<cpp:if pos:start="149:1" pos:end="149:29">#<cpp:directive pos:start="149:2" pos:end="149:3">if</cpp:directive> <expr pos:start="149:5" pos:end="149:29"><name pos:start="149:5" pos:end="149:23">TCG_TARGET_REG_BITS</name> <operator pos:start="149:25" pos:end="149:26">==</operator> <literal type="number" pos:start="149:28" pos:end="149:29">64</literal></expr></cpp:if>

    <case pos:start="151:5" pos:end="151:27">case <expr pos:start="151:10" pos:end="151:26"><name pos:start="151:10" pos:end="151:26">INDEX_op_rotl_i64</name></expr>:</case>

        <expr_stmt pos:start="153:9" pos:end="153:39"><expr pos:start="153:9" pos:end="153:38"><name pos:start="153:9" pos:end="153:9">x</name> <operator pos:start="153:11" pos:end="153:11">=</operator> <operator pos:start="153:13" pos:end="153:13">(</operator><name pos:start="153:14" pos:end="153:14">x</name> <operator pos:start="153:16" pos:end="153:17">&lt;&lt;</operator> <name pos:start="153:19" pos:end="153:19">y</name><operator pos:start="153:20" pos:end="153:20">)</operator> <operator pos:start="153:22" pos:end="153:22">|</operator> <operator pos:start="153:24" pos:end="153:24">(</operator><name pos:start="153:25" pos:end="153:25">x</name> <operator pos:start="153:27" pos:end="153:28">&gt;&gt;</operator> <operator pos:start="153:30" pos:end="153:30">(</operator><literal type="number" pos:start="153:31" pos:end="153:34">64</literal> <operator pos:start="153:34" pos:end="153:34">-</operator> <name pos:start="153:36" pos:end="153:36">y</name><operator pos:start="153:37" pos:end="153:37">)</operator><operator pos:start="153:38" pos:end="153:38">)</operator></expr>;</expr_stmt>

        <return pos:start="155:9" pos:end="166:0">return <expr pos:start="155:16" pos:end="155:16"><name pos:start="155:16" pos:end="155:16">x</name></expr>;</return>

<cpp:endif pos:start="157:1" pos:end="157:6">#<cpp:directive pos:start="157:2" pos:end="157:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="159:1" pos:end="159:6">#<cpp:directive pos:start="159:2" pos:end="159:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="163:1" pos:end="163:70">#<cpp:directive pos:start="163:2" pos:end="163:3">if</cpp:directive> <expr pos:start="163:5" pos:end="163:70"><call pos:start="163:5" pos:end="163:35"><name pos:start="163:5" pos:end="163:11">defined</name><argument_list pos:start="163:12" pos:end="163:35">(<argument pos:start="163:13" pos:end="163:34"><expr pos:start="163:13" pos:end="163:34"><name pos:start="163:13" pos:end="163:34">TCG_TARGET_HAS_not_i32</name></expr></argument>)</argument_list></call> <operator pos:start="163:37" pos:end="163:38">||</operator> <call pos:start="163:40" pos:end="163:70"><name pos:start="163:40" pos:end="163:46">defined</name><argument_list pos:start="163:47" pos:end="163:70">(<argument pos:start="163:48" pos:end="163:69"><expr pos:start="163:48" pos:end="163:69"><name pos:start="163:48" pos:end="163:69">TCG_TARGET_HAS_not_i64</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:ifdef pos:start="165:1" pos:end="165:29">#<cpp:directive pos:start="165:2" pos:end="165:6">ifdef</cpp:directive> <name pos:start="165:8" pos:end="165:29">TCG_TARGET_HAS_not_i32</name></cpp:ifdef>

    <case pos:start="167:5" pos:end="172:0">case <expr pos:start="167:10" pos:end="167:25"><name pos:start="167:10" pos:end="167:25">INDEX_op_not_i32</name></expr>:</case>

<cpp:endif pos:start="169:1" pos:end="169:6">#<cpp:directive pos:start="169:2" pos:end="169:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="171:1" pos:end="171:29">#<cpp:directive pos:start="171:2" pos:end="171:6">ifdef</cpp:directive> <name pos:start="171:8" pos:end="171:29">TCG_TARGET_HAS_not_i64</name></cpp:ifdef>

    <case pos:start="173:5" pos:end="176:0">case <expr pos:start="173:10" pos:end="173:25"><name pos:start="173:10" pos:end="173:25">INDEX_op_not_i64</name></expr>:</case>

<cpp:endif pos:start="175:1" pos:end="175:6">#<cpp:directive pos:start="175:2" pos:end="175:6">endif</cpp:directive></cpp:endif>

        <return pos:start="177:9" pos:end="186:0">return <expr pos:start="177:16" pos:end="177:17"><operator pos:start="177:16" pos:end="177:16">~</operator><name pos:start="177:17" pos:end="177:17">x</name></expr>;</return>

<cpp:endif pos:start="179:1" pos:end="179:6">#<cpp:directive pos:start="179:2" pos:end="179:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="183:1" pos:end="183:74">#<cpp:directive pos:start="183:2" pos:end="183:3">if</cpp:directive> <expr pos:start="183:5" pos:end="183:74"><call pos:start="183:5" pos:end="183:37"><name pos:start="183:5" pos:end="183:11">defined</name><argument_list pos:start="183:12" pos:end="183:37">(<argument pos:start="183:13" pos:end="183:36"><expr pos:start="183:13" pos:end="183:36"><name pos:start="183:13" pos:end="183:36">TCG_TARGET_HAS_ext8s_i32</name></expr></argument>)</argument_list></call> <operator pos:start="183:39" pos:end="183:40">||</operator> <call pos:start="183:42" pos:end="183:74"><name pos:start="183:42" pos:end="183:48">defined</name><argument_list pos:start="183:49" pos:end="183:74">(<argument pos:start="183:50" pos:end="183:73"><expr pos:start="183:50" pos:end="183:73"><name pos:start="183:50" pos:end="183:73">TCG_TARGET_HAS_ext8s_i64</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:ifdef pos:start="185:1" pos:end="185:31">#<cpp:directive pos:start="185:2" pos:end="185:6">ifdef</cpp:directive> <name pos:start="185:8" pos:end="185:31">TCG_TARGET_HAS_ext8s_i32</name></cpp:ifdef>

    <case pos:start="187:5" pos:end="192:0">case <expr pos:start="187:10" pos:end="187:27"><name pos:start="187:10" pos:end="187:27">INDEX_op_ext8s_i32</name></expr>:</case>

<cpp:endif pos:start="189:1" pos:end="189:6">#<cpp:directive pos:start="189:2" pos:end="189:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="191:1" pos:end="191:31">#<cpp:directive pos:start="191:2" pos:end="191:6">ifdef</cpp:directive> <name pos:start="191:8" pos:end="191:31">TCG_TARGET_HAS_ext8s_i64</name></cpp:ifdef>

    <case pos:start="193:5" pos:end="196:0">case <expr pos:start="193:10" pos:end="193:27"><name pos:start="193:10" pos:end="193:27">INDEX_op_ext8s_i64</name></expr>:</case>

<cpp:endif pos:start="195:1" pos:end="195:6">#<cpp:directive pos:start="195:2" pos:end="195:6">endif</cpp:directive></cpp:endif>

        <return pos:start="197:9" pos:end="206:0">return <expr pos:start="197:16" pos:end="197:24"><operator pos:start="197:16" pos:end="197:16">(</operator><name pos:start="197:17" pos:end="197:22">int8_t</name><operator pos:start="197:23" pos:end="197:23">)</operator><name pos:start="197:24" pos:end="197:24">x</name></expr>;</return>

<cpp:endif pos:start="199:1" pos:end="199:6">#<cpp:directive pos:start="199:2" pos:end="199:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="203:1" pos:end="203:76">#<cpp:directive pos:start="203:2" pos:end="203:3">if</cpp:directive> <expr pos:start="203:5" pos:end="203:76"><call pos:start="203:5" pos:end="203:38"><name pos:start="203:5" pos:end="203:11">defined</name><argument_list pos:start="203:12" pos:end="203:38">(<argument pos:start="203:13" pos:end="203:37"><expr pos:start="203:13" pos:end="203:37"><name pos:start="203:13" pos:end="203:37">TCG_TARGET_HAS_ext16s_i32</name></expr></argument>)</argument_list></call> <operator pos:start="203:40" pos:end="203:41">||</operator> <call pos:start="203:43" pos:end="203:76"><name pos:start="203:43" pos:end="203:49">defined</name><argument_list pos:start="203:50" pos:end="203:76">(<argument pos:start="203:51" pos:end="203:75"><expr pos:start="203:51" pos:end="203:75"><name pos:start="203:51" pos:end="203:75">TCG_TARGET_HAS_ext16s_i64</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:ifdef pos:start="205:1" pos:end="205:32">#<cpp:directive pos:start="205:2" pos:end="205:6">ifdef</cpp:directive> <name pos:start="205:8" pos:end="205:32">TCG_TARGET_HAS_ext16s_i32</name></cpp:ifdef>

    <case pos:start="207:5" pos:end="212:0">case <expr pos:start="207:10" pos:end="207:28"><name pos:start="207:10" pos:end="207:28">INDEX_op_ext16s_i32</name></expr>:</case>

<cpp:endif pos:start="209:1" pos:end="209:6">#<cpp:directive pos:start="209:2" pos:end="209:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="211:1" pos:end="211:32">#<cpp:directive pos:start="211:2" pos:end="211:6">ifdef</cpp:directive> <name pos:start="211:8" pos:end="211:32">TCG_TARGET_HAS_ext16s_i64</name></cpp:ifdef>

    <case pos:start="213:5" pos:end="216:0">case <expr pos:start="213:10" pos:end="213:28"><name pos:start="213:10" pos:end="213:28">INDEX_op_ext16s_i64</name></expr>:</case>

<cpp:endif pos:start="215:1" pos:end="215:6">#<cpp:directive pos:start="215:2" pos:end="215:6">endif</cpp:directive></cpp:endif>

        <return pos:start="217:9" pos:end="226:0">return <expr pos:start="217:16" pos:end="217:25"><operator pos:start="217:16" pos:end="217:16">(</operator><name pos:start="217:17" pos:end="217:23">int16_t</name><operator pos:start="217:24" pos:end="217:24">)</operator><name pos:start="217:25" pos:end="217:25">x</name></expr>;</return>

<cpp:endif pos:start="219:1" pos:end="219:6">#<cpp:directive pos:start="219:2" pos:end="219:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="223:1" pos:end="223:74">#<cpp:directive pos:start="223:2" pos:end="223:3">if</cpp:directive> <expr pos:start="223:5" pos:end="223:74"><call pos:start="223:5" pos:end="223:37"><name pos:start="223:5" pos:end="223:11">defined</name><argument_list pos:start="223:12" pos:end="223:37">(<argument pos:start="223:13" pos:end="223:36"><expr pos:start="223:13" pos:end="223:36"><name pos:start="223:13" pos:end="223:36">TCG_TARGET_HAS_ext8u_i32</name></expr></argument>)</argument_list></call> <operator pos:start="223:39" pos:end="223:40">||</operator> <call pos:start="223:42" pos:end="223:74"><name pos:start="223:42" pos:end="223:48">defined</name><argument_list pos:start="223:49" pos:end="223:74">(<argument pos:start="223:50" pos:end="223:73"><expr pos:start="223:50" pos:end="223:73"><name pos:start="223:50" pos:end="223:73">TCG_TARGET_HAS_ext8u_i64</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:ifdef pos:start="225:1" pos:end="225:31">#<cpp:directive pos:start="225:2" pos:end="225:6">ifdef</cpp:directive> <name pos:start="225:8" pos:end="225:31">TCG_TARGET_HAS_ext8u_i32</name></cpp:ifdef>

    <case pos:start="227:5" pos:end="232:0">case <expr pos:start="227:10" pos:end="227:27"><name pos:start="227:10" pos:end="227:27">INDEX_op_ext8u_i32</name></expr>:</case>

<cpp:endif pos:start="229:1" pos:end="229:6">#<cpp:directive pos:start="229:2" pos:end="229:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="231:1" pos:end="231:31">#<cpp:directive pos:start="231:2" pos:end="231:6">ifdef</cpp:directive> <name pos:start="231:8" pos:end="231:31">TCG_TARGET_HAS_ext8u_i64</name></cpp:ifdef>

    <case pos:start="233:5" pos:end="236:0">case <expr pos:start="233:10" pos:end="233:27"><name pos:start="233:10" pos:end="233:27">INDEX_op_ext8u_i64</name></expr>:</case>

<cpp:endif pos:start="235:1" pos:end="235:6">#<cpp:directive pos:start="235:2" pos:end="235:6">endif</cpp:directive></cpp:endif>

        <return pos:start="237:9" pos:end="246:0">return <expr pos:start="237:16" pos:end="237:25"><operator pos:start="237:16" pos:end="237:16">(</operator><name pos:start="237:17" pos:end="237:23">uint8_t</name><operator pos:start="237:24" pos:end="237:24">)</operator><name pos:start="237:25" pos:end="237:25">x</name></expr>;</return>

<cpp:endif pos:start="239:1" pos:end="239:6">#<cpp:directive pos:start="239:2" pos:end="239:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="243:1" pos:end="243:76">#<cpp:directive pos:start="243:2" pos:end="243:3">if</cpp:directive> <expr pos:start="243:5" pos:end="243:76"><call pos:start="243:5" pos:end="243:38"><name pos:start="243:5" pos:end="243:11">defined</name><argument_list pos:start="243:12" pos:end="243:38">(<argument pos:start="243:13" pos:end="243:37"><expr pos:start="243:13" pos:end="243:37"><name pos:start="243:13" pos:end="243:37">TCG_TARGET_HAS_ext16u_i32</name></expr></argument>)</argument_list></call> <operator pos:start="243:40" pos:end="243:41">||</operator> <call pos:start="243:43" pos:end="243:76"><name pos:start="243:43" pos:end="243:49">defined</name><argument_list pos:start="243:50" pos:end="243:76">(<argument pos:start="243:51" pos:end="243:75"><expr pos:start="243:51" pos:end="243:75"><name pos:start="243:51" pos:end="243:75">TCG_TARGET_HAS_ext16u_i64</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:ifdef pos:start="245:1" pos:end="245:32">#<cpp:directive pos:start="245:2" pos:end="245:6">ifdef</cpp:directive> <name pos:start="245:8" pos:end="245:32">TCG_TARGET_HAS_ext16u_i32</name></cpp:ifdef>

    <case pos:start="247:5" pos:end="252:0">case <expr pos:start="247:10" pos:end="247:28"><name pos:start="247:10" pos:end="247:28">INDEX_op_ext16u_i32</name></expr>:</case>

<cpp:endif pos:start="249:1" pos:end="249:6">#<cpp:directive pos:start="249:2" pos:end="249:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="251:1" pos:end="251:32">#<cpp:directive pos:start="251:2" pos:end="251:6">ifdef</cpp:directive> <name pos:start="251:8" pos:end="251:32">TCG_TARGET_HAS_ext16u_i64</name></cpp:ifdef>

    <case pos:start="253:5" pos:end="256:0">case <expr pos:start="253:10" pos:end="253:28"><name pos:start="253:10" pos:end="253:28">INDEX_op_ext16u_i64</name></expr>:</case>

<cpp:endif pos:start="255:1" pos:end="255:6">#<cpp:directive pos:start="255:2" pos:end="255:6">endif</cpp:directive></cpp:endif>

        <return pos:start="257:9" pos:end="266:0">return <expr pos:start="257:16" pos:end="257:26"><operator pos:start="257:16" pos:end="257:16">(</operator><name pos:start="257:17" pos:end="257:24">uint16_t</name><operator pos:start="257:25" pos:end="257:25">)</operator><name pos:start="257:26" pos:end="257:26">x</name></expr>;</return>

<cpp:endif pos:start="259:1" pos:end="259:6">#<cpp:directive pos:start="259:2" pos:end="259:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="263:1" pos:end="263:29">#<cpp:directive pos:start="263:2" pos:end="263:3">if</cpp:directive> <expr pos:start="263:5" pos:end="263:29"><name pos:start="263:5" pos:end="263:23">TCG_TARGET_REG_BITS</name> <operator pos:start="263:25" pos:end="263:26">==</operator> <literal type="number" pos:start="263:28" pos:end="263:29">64</literal></expr></cpp:if>

<cpp:ifdef pos:start="265:1" pos:end="265:32">#<cpp:directive pos:start="265:2" pos:end="265:6">ifdef</cpp:directive> <name pos:start="265:8" pos:end="265:32">TCG_TARGET_HAS_ext32s_i64</name></cpp:ifdef>

    <case pos:start="267:5" pos:end="267:29">case <expr pos:start="267:10" pos:end="267:28"><name pos:start="267:10" pos:end="267:28">INDEX_op_ext32s_i64</name></expr>:</case>

        <return pos:start="269:9" pos:end="276:0">return <expr pos:start="269:16" pos:end="269:25"><operator pos:start="269:16" pos:end="269:16">(</operator><name pos:start="269:17" pos:end="269:23">int32_t</name><operator pos:start="269:24" pos:end="269:24">)</operator><name pos:start="269:25" pos:end="269:25">x</name></expr>;</return>

<cpp:endif pos:start="271:1" pos:end="271:6">#<cpp:directive pos:start="271:2" pos:end="271:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="275:1" pos:end="275:32">#<cpp:directive pos:start="275:2" pos:end="275:6">ifdef</cpp:directive> <name pos:start="275:8" pos:end="275:32">TCG_TARGET_HAS_ext32u_i64</name></cpp:ifdef>

    <case pos:start="277:5" pos:end="277:29">case <expr pos:start="277:10" pos:end="277:28"><name pos:start="277:10" pos:end="277:28">INDEX_op_ext32u_i64</name></expr>:</case>

        <return pos:start="279:9" pos:end="284:0">return <expr pos:start="279:16" pos:end="279:26"><operator pos:start="279:16" pos:end="279:16">(</operator><name pos:start="279:17" pos:end="279:24">uint32_t</name><operator pos:start="279:25" pos:end="279:25">)</operator><name pos:start="279:26" pos:end="279:26">x</name></expr>;</return>

<cpp:endif pos:start="281:1" pos:end="281:6">#<cpp:directive pos:start="281:2" pos:end="281:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="283:1" pos:end="283:6">#<cpp:directive pos:start="283:2" pos:end="283:6">endif</cpp:directive></cpp:endif>



    <default pos:start="287:5" pos:end="287:12">default:</default>

        <expr_stmt pos:start="289:9" pos:end="291:75"><expr pos:start="289:9" pos:end="291:74"><call pos:start="289:9" pos:end="291:74"><name pos:start="289:9" pos:end="289:15">fprintf</name><argument_list pos:start="289:16" pos:end="291:74">(<argument pos:start="289:17" pos:end="289:22"><expr pos:start="289:17" pos:end="289:22"><name pos:start="289:17" pos:end="289:22">stderr</name></expr></argument>,

                <argument pos:start="291:17" pos:end="291:69"><expr pos:start="291:17" pos:end="291:69"><literal type="string" pos:start="291:17" pos:end="291:69">"Unrecognized operation %d in do_constant_folding.\n"</literal></expr></argument>, <argument pos:start="291:72" pos:end="291:73"><expr pos:start="291:72" pos:end="291:73"><name pos:start="291:72" pos:end="291:73">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:20"><expr pos:start="293:9" pos:end="293:19"><call pos:start="293:9" pos:end="293:19"><name pos:start="293:9" pos:end="293:17">tcg_abort</name><argument_list pos:start="293:18" pos:end="293:19">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
