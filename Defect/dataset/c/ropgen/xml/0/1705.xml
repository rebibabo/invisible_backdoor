<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1705.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">vhdx_log_write_and_flush</name><parameter_list pos:start="1:29" pos:end="3:74">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:45">BlockDriverState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">bs</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:67"><decl pos:start="1:52" pos:end="1:67"><type pos:start="1:52" pos:end="1:67"><name pos:start="1:52" pos:end="1:64">BDRVVHDXState</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:67">s</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:33">void</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">data</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:56"><decl pos:start="3:42" pos:end="3:56"><type pos:start="3:42" pos:end="3:56"><name pos:start="3:42" pos:end="3:49">uint32_t</name></type> <name pos:start="3:51" pos:end="3:56">length</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:73"><decl pos:start="3:59" pos:end="3:73"><type pos:start="3:59" pos:end="3:73"><name pos:start="3:59" pos:end="3:66">uint64_t</name></type> <name pos:start="3:68" pos:end="3:73">offset</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:15">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="13:44"><decl pos:start="9:5" pos:end="13:43"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:19">VHDXLogSequence</name></type> <name pos:start="9:21" pos:end="9:24">logs</name> <init pos:start="9:26" pos:end="13:43">= <expr pos:start="9:28" pos:end="13:43"><block pos:start="9:28" pos:end="13:43">{ <expr pos:start="9:30" pos:end="9:42"><operator pos:start="9:30" pos:end="9:30">.</operator><name pos:start="9:31" pos:end="9:35">valid</name> <operator pos:start="9:37" pos:end="9:37">=</operator> <name pos:start="9:39" pos:end="9:42">true</name></expr>,

                             <expr pos:start="11:30" pos:end="11:39"><operator pos:start="11:30" pos:end="11:30">.</operator><name pos:start="11:31" pos:end="11:35">count</name> <operator pos:start="11:37" pos:end="11:37">=</operator> <literal type="number" pos:start="11:39" pos:end="11:39">1</literal></expr>,

                             <expr pos:start="13:30" pos:end="13:41"><operator pos:start="13:30" pos:end="13:30">.</operator><name pos:start="13:31" pos:end="13:33">hdr</name> <operator pos:start="13:35" pos:end="13:35">=</operator> <block pos:start="13:37" pos:end="13:41">{ <expr pos:start="13:39" pos:end="13:39"><literal type="number" pos:start="13:39" pos:end="13:39">0</literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>





    <comment type="block" pos:start="19:5" pos:end="21:44">/* Make sure data written (new and/or changed blocks) is stable

     * on disk, before creating log entry */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><call pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:14">bdrv_flush</name><argument_list pos:start="23:15" pos:end="23:18">(<argument pos:start="23:16" pos:end="23:17"><expr pos:start="23:16" pos:end="23:17"><name pos:start="23:16" pos:end="23:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:54"><expr pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:53"><name pos:start="25:11" pos:end="25:24">vhdx_log_write</name><argument_list pos:start="25:25" pos:end="25:53">(<argument pos:start="25:26" pos:end="25:27"><expr pos:start="25:26" pos:end="25:27"><name pos:start="25:26" pos:end="25:27">bs</name></expr></argument>, <argument pos:start="25:30" pos:end="25:30"><expr pos:start="25:30" pos:end="25:30"><name pos:start="25:30" pos:end="25:30">s</name></expr></argument>, <argument pos:start="25:33" pos:end="25:36"><expr pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:36">data</name></expr></argument>, <argument pos:start="25:39" pos:end="25:44"><expr pos:start="25:39" pos:end="25:44"><name pos:start="25:39" pos:end="25:44">length</name></expr></argument>, <argument pos:start="25:47" pos:end="25:52"><expr pos:start="25:47" pos:end="25:52"><name pos:start="25:47" pos:end="25:52">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">&lt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>)</condition> <block pos:start="27:18" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:18">

        <goto pos:start="29:9" pos:end="29:18">goto <name pos:start="29:14" pos:end="29:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:22"><expr pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:8">logs</name><operator pos:start="33:9" pos:end="33:9">.</operator><name pos:start="33:10" pos:end="33:12">log</name></name> <operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:21"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:21">log</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:41">/* Make sure log is stable on disk */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><call pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:14">bdrv_flush</name><argument_list pos:start="39:15" pos:end="39:18">(<argument pos:start="39:16" pos:end="39:17"><expr pos:start="39:16" pos:end="39:17"><name pos:start="39:16" pos:end="39:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:39"><expr pos:start="41:5" pos:end="41:38"><name pos:start="41:5" pos:end="41:7">ret</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:38"><name pos:start="41:11" pos:end="41:24">vhdx_log_flush</name><argument_list pos:start="41:25" pos:end="41:38">(<argument pos:start="41:26" pos:end="41:27"><expr pos:start="41:26" pos:end="41:27"><name pos:start="41:26" pos:end="41:27">bs</name></expr></argument>, <argument pos:start="41:30" pos:end="41:30"><expr pos:start="41:30" pos:end="41:30"><name pos:start="41:30" pos:end="41:30">s</name></expr></argument>, <argument pos:start="41:33" pos:end="41:37"><expr pos:start="41:33" pos:end="41:37"><operator pos:start="41:33" pos:end="41:33">&amp;</operator><name pos:start="41:34" pos:end="41:37">logs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:16">(<expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">&lt;</operator> <literal type="number" pos:start="43:15" pos:end="43:15">0</literal></expr>)</condition> <block pos:start="43:18" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:18">

        <goto pos:start="45:9" pos:end="45:18">goto <name pos:start="45:14" pos:end="45:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:22"><expr pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:10"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:10">log</name></name> <operator pos:start="51:12" pos:end="51:12">=</operator> <name pos:start="51:14" pos:end="51:21"><name pos:start="51:14" pos:end="51:17">logs</name><operator pos:start="51:18" pos:end="51:18">.</operator><name pos:start="51:19" pos:end="51:21">log</name></name></expr>;</expr_stmt>



<label pos:start="55:1" pos:end="55:5"><name pos:start="55:1" pos:end="55:4">exit</name>:</label>

    <return pos:start="57:5" pos:end="57:15">return <expr pos:start="57:12" pos:end="57:14"><name pos:start="57:12" pos:end="57:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
