<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5336.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">write_packet</name><parameter_list pos:start="1:25" pos:end="1:78">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">AVPacket</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">pkt</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:77"><decl pos:start="1:61" pos:end="1:77"><type pos:start="1:61" pos:end="1:77"><name pos:start="1:61" pos:end="1:72">OutputStream</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:77">ost</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:5">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name> <init pos:start="5:18" pos:end="5:26">= <expr pos:start="5:20" pos:end="5:26"><name pos:start="5:20" pos:end="5:26"><name pos:start="5:20" pos:end="5:22">ost</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:26">st</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="23:7">/*

     * Audio encoders may split the packets --  #frames in != #packets out.

     * But there is no reordering, so we can limit the number of output packets

     * by simply dropping them here.

     * Counting encoded video frames needs to be done separately because of

     * reordering, see do_video_out()

     */</comment>

    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:82">(<expr pos:start="25:9" pos:end="25:81"><operator pos:start="25:9" pos:end="25:9">!</operator><operator pos:start="25:10" pos:end="25:10">(</operator><name pos:start="25:11" pos:end="25:34"><name pos:start="25:11" pos:end="25:12">st</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:22">codecpar</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:34">codec_type</name></name> <operator pos:start="25:36" pos:end="25:37">==</operator> <name pos:start="25:39" pos:end="25:56">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="25:58" pos:end="25:59">&amp;&amp;</operator> <name pos:start="25:61" pos:end="25:80"><name pos:start="25:61" pos:end="25:63">ost</name><operator pos:start="25:64" pos:end="25:65">-&gt;</operator><name pos:start="25:66" pos:end="25:80">encoding_needed</name></name><operator pos:start="25:81" pos:end="25:81">)</operator></expr>)</condition> <block pos:start="25:84" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:28">

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:49">(<expr pos:start="27:13" pos:end="27:48"><name pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:15">ost</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:29">frame_number</name></name> <operator pos:start="27:31" pos:end="27:32">&gt;=</operator> <name pos:start="27:34" pos:end="27:48"><name pos:start="27:34" pos:end="27:36">ost</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:48">max_frames</name></name></expr>)</condition> <block pos:start="27:51" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:19">

            <expr_stmt pos:start="29:13" pos:end="29:33"><expr pos:start="29:13" pos:end="29:32"><call pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:27">av_packet_unref</name><argument_list pos:start="29:28" pos:end="29:32">(<argument pos:start="29:29" pos:end="29:31"><expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:28"><expr pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:11">ost</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:25">frame_number</name></name><operator pos:start="35:26" pos:end="35:27">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="57:5"><if pos:start="39:5" pos:end="57:5">if <condition pos:start="39:8" pos:end="39:55">(<expr pos:start="39:9" pos:end="39:54"><name pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:10">st</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:20">codecpar</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:32">codec_type</name></name> <operator pos:start="39:34" pos:end="39:35">==</operator> <name pos:start="39:37" pos:end="39:54">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="39:57" pos:end="57:5">{<block_content pos:start="41:9" pos:end="55:9">

        <decl_stmt pos:start="41:9" pos:end="43:52"><decl pos:start="41:9" pos:end="43:51"><type pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:15">uint8_t</name> <modifier pos:start="41:17" pos:end="41:17">*</modifier></type><name pos:start="41:18" pos:end="41:19">sd</name> <init pos:start="41:21" pos:end="43:51">= <expr pos:start="41:23" pos:end="43:51"><call pos:start="41:23" pos:end="43:51"><name pos:start="41:23" pos:end="41:45">av_packet_get_side_data</name><argument_list pos:start="41:46" pos:end="43:51">(<argument pos:start="41:47" pos:end="41:49"><expr pos:start="41:47" pos:end="41:49"><name pos:start="41:47" pos:end="41:49">pkt</name></expr></argument>, <argument pos:start="41:52" pos:end="41:77"><expr pos:start="41:52" pos:end="41:77"><name pos:start="41:52" pos:end="41:77">AV_PKT_DATA_QUALITY_FACTOR</name></expr></argument>,

                                              <argument pos:start="43:47" pos:end="43:50"><expr pos:start="43:47" pos:end="43:50"><name pos:start="43:47" pos:end="43:50">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:44"><expr pos:start="45:9" pos:end="45:43"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:11">ost</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:20">quality</name></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <ternary pos:start="45:24" pos:end="45:43"><condition pos:start="45:24" pos:end="45:27"><expr pos:start="45:24" pos:end="45:25"><name pos:start="45:24" pos:end="45:25">sd</name></expr> ?</condition><then pos:start="45:29" pos:end="45:38"> <expr pos:start="45:29" pos:end="45:38"><operator pos:start="45:29" pos:end="45:29">*</operator><operator pos:start="45:30" pos:end="45:30">(</operator><name pos:start="45:31" pos:end="45:33">int</name> <operator pos:start="45:35" pos:end="45:35">*</operator><operator pos:start="45:36" pos:end="45:36">)</operator><name pos:start="45:37" pos:end="45:38">sd</name></expr> </then><else pos:start="45:40" pos:end="45:43">: <expr pos:start="45:42" pos:end="45:43"><operator pos:start="45:42" pos:end="45:42">-</operator><literal type="number" pos:start="45:43" pos:end="45:43">1</literal></expr></else></ternary></expr>;</expr_stmt>



        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:32">(<expr pos:start="49:13" pos:end="49:31"><name pos:start="49:13" pos:end="49:31"><name pos:start="49:13" pos:end="49:15">ost</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:27">frame_rate</name><operator pos:start="49:28" pos:end="49:28">.</operator><name pos:start="49:29" pos:end="49:31">num</name></name></expr>)</condition> <block pos:start="49:34" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:61">

            <expr_stmt pos:start="51:13" pos:end="53:61"><expr pos:start="51:13" pos:end="53:60"><name pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:15">pkt</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:25">duration</name></name> <operator pos:start="51:27" pos:end="51:27">=</operator> <call pos:start="51:29" pos:end="53:60"><name pos:start="51:29" pos:end="51:40">av_rescale_q</name><argument_list pos:start="51:41" pos:end="53:60">(<argument pos:start="51:42" pos:end="51:42"><expr pos:start="51:42" pos:end="51:42"><literal type="number" pos:start="51:42" pos:end="51:42">1</literal></expr></argument>, <argument pos:start="51:45" pos:end="51:69"><expr pos:start="51:45" pos:end="51:69"><call pos:start="51:45" pos:end="51:69"><name pos:start="51:45" pos:end="51:52">av_inv_q</name><argument_list pos:start="51:53" pos:end="51:69">(<argument pos:start="51:54" pos:end="51:68"><expr pos:start="51:54" pos:end="51:68"><name pos:start="51:54" pos:end="51:68"><name pos:start="51:54" pos:end="51:56">ost</name><operator pos:start="51:57" pos:end="51:58">-&gt;</operator><name pos:start="51:59" pos:end="51:68">frame_rate</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                         <argument pos:start="53:42" pos:end="53:59"><expr pos:start="53:42" pos:end="53:59"><name pos:start="53:42" pos:end="53:59"><name pos:start="53:42" pos:end="53:44">ost</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:48">st</name><operator pos:start="53:49" pos:end="53:50">-&gt;</operator><name pos:start="53:51" pos:end="53:59">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="93:5"><if pos:start="61:5" pos:end="93:5">if <condition pos:start="61:8" pos:end="65:81">(<expr pos:start="61:9" pos:end="65:80"><operator pos:start="61:9" pos:end="61:9">!</operator><operator pos:start="61:10" pos:end="61:10">(</operator><name pos:start="61:11" pos:end="61:27"><name pos:start="61:11" pos:end="61:11">s</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:20">oformat</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:27">flags</name></name> <operator pos:start="61:29" pos:end="61:29">&amp;</operator> <name pos:start="61:31" pos:end="61:48">AVFMT_NOTIMESTAMPS</name><operator pos:start="61:49" pos:end="61:49">)</operator> <operator pos:start="61:51" pos:end="61:52">&amp;&amp;</operator>

        <name pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:11">ost</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:25">last_mux_dts</name></name> <operator pos:start="63:27" pos:end="63:28">!=</operator> <name pos:start="63:30" pos:end="63:43">AV_NOPTS_VALUE</name> <operator pos:start="63:45" pos:end="63:46">&amp;&amp;</operator>

        <name pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:11">pkt</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:16">dts</name></name> <operator pos:start="65:18" pos:end="65:18">&lt;</operator> <name pos:start="65:20" pos:end="65:36"><name pos:start="65:20" pos:end="65:22">ost</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:36">last_mux_dts</name></name> <operator pos:start="65:38" pos:end="65:38">+</operator> <operator pos:start="65:40" pos:end="65:40">!</operator><operator pos:start="65:41" pos:end="65:41">(</operator><name pos:start="65:42" pos:end="65:58"><name pos:start="65:42" pos:end="65:42">s</name><operator pos:start="65:43" pos:end="65:44">-&gt;</operator><name pos:start="65:45" pos:end="65:51">oformat</name><operator pos:start="65:52" pos:end="65:53">-&gt;</operator><name pos:start="65:54" pos:end="65:58">flags</name></name> <operator pos:start="65:60" pos:end="65:60">&amp;</operator> <name pos:start="65:62" pos:end="65:79">AVFMT_TS_NONSTRICT</name><operator pos:start="65:80" pos:end="65:80">)</operator></expr>)</condition> <block pos:start="65:83" pos:end="93:5">{<block_content pos:start="67:9" pos:end="91:49">

        <expr_stmt pos:start="67:9" pos:end="71:77"><expr pos:start="67:9" pos:end="71:76"><call pos:start="67:9" pos:end="71:76"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="71:76">(<argument pos:start="67:16" pos:end="67:19"><expr pos:start="67:16" pos:end="67:19"><name pos:start="67:16" pos:end="67:19">NULL</name></expr></argument>, <argument pos:start="67:22" pos:end="67:35"><expr pos:start="67:22" pos:end="67:35"><name pos:start="67:22" pos:end="67:35">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="67:38" pos:end="69:65"><expr pos:start="67:38" pos:end="69:65"><literal type="string" pos:start="67:38" pos:end="67:75">"Non-monotonous DTS in output stream "</literal>

               <literal type="string" pos:start="69:16" pos:end="69:35">"%d:%d; previous: %"</literal><name pos:start="69:36" pos:end="69:41">PRId64</name><literal type="string" pos:start="69:42" pos:end="69:55">", current: %"</literal><name pos:start="69:56" pos:end="69:61">PRId64</name><literal type="string" pos:start="69:62" pos:end="69:65">"; "</literal></expr></argument>,

               <argument pos:start="71:16" pos:end="71:30"><expr pos:start="71:16" pos:end="71:30"><name pos:start="71:16" pos:end="71:30"><name pos:start="71:16" pos:end="71:18">ost</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:30">file_index</name></name></expr></argument>, <argument pos:start="71:33" pos:end="71:46"><expr pos:start="71:33" pos:end="71:46"><name pos:start="71:33" pos:end="71:46"><name pos:start="71:33" pos:end="71:35">ost</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:39">st</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:46">index</name></name></expr></argument>, <argument pos:start="71:49" pos:end="71:65"><expr pos:start="71:49" pos:end="71:65"><name pos:start="71:49" pos:end="71:65"><name pos:start="71:49" pos:end="71:51">ost</name><operator pos:start="71:52" pos:end="71:53">-&gt;</operator><name pos:start="71:54" pos:end="71:65">last_mux_dts</name></name></expr></argument>, <argument pos:start="71:68" pos:end="71:75"><expr pos:start="71:68" pos:end="71:75"><name pos:start="71:68" pos:end="71:75"><name pos:start="71:68" pos:end="71:70">pkt</name><operator pos:start="71:71" pos:end="71:72">-&gt;</operator><name pos:start="71:73" pos:end="71:75">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="79:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:26">(<expr pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:25">exit_on_error</name></expr>)</condition> <block pos:start="73:28" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:28">

            <expr_stmt pos:start="75:13" pos:end="75:54"><expr pos:start="75:13" pos:end="75:53"><call pos:start="75:13" pos:end="75:53"><name pos:start="75:13" pos:end="75:18">av_log</name><argument_list pos:start="75:19" pos:end="75:53">(<argument pos:start="75:20" pos:end="75:23"><expr pos:start="75:20" pos:end="75:23"><name pos:start="75:20" pos:end="75:23">NULL</name></expr></argument>, <argument pos:start="75:26" pos:end="75:37"><expr pos:start="75:26" pos:end="75:37"><name pos:start="75:26" pos:end="75:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="75:40" pos:end="75:52"><expr pos:start="75:40" pos:end="75:52"><literal type="string" pos:start="75:40" pos:end="75:52">"aborting.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:28"><expr pos:start="77:13" pos:end="77:27"><call pos:start="77:13" pos:end="77:27"><name pos:start="77:13" pos:end="77:24">exit_program</name><argument_list pos:start="77:25" pos:end="77:27">(<argument pos:start="77:26" pos:end="77:26"><expr pos:start="77:26" pos:end="77:26"><literal type="number" pos:start="77:26" pos:end="77:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="85:38"><expr pos:start="81:9" pos:end="85:37"><call pos:start="81:9" pos:end="85:37"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="85:37">(<argument pos:start="81:16" pos:end="81:19"><expr pos:start="81:16" pos:end="81:19"><name pos:start="81:16" pos:end="81:19">NULL</name></expr></argument>, <argument pos:start="81:22" pos:end="81:35"><expr pos:start="81:22" pos:end="81:35"><name pos:start="81:22" pos:end="81:35">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="81:38" pos:end="83:62"><expr pos:start="81:38" pos:end="83:62"><literal type="string" pos:start="81:38" pos:end="81:52">"changing to %"</literal><name pos:start="81:53" pos:end="81:58">PRId64</name><literal type="string" pos:start="81:59" pos:end="81:78">". This may result "</literal>

               <literal type="string" pos:start="83:16" pos:end="83:62">"in incorrect timestamps in the output file.\n"</literal></expr></argument>,

               <argument pos:start="85:16" pos:end="85:36"><expr pos:start="85:16" pos:end="85:36"><name pos:start="85:16" pos:end="85:32"><name pos:start="85:16" pos:end="85:18">ost</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:32">last_mux_dts</name></name> <operator pos:start="85:34" pos:end="85:34">+</operator> <literal type="number" pos:start="85:36" pos:end="85:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:41"><expr pos:start="87:9" pos:end="87:40"><name pos:start="87:9" pos:end="87:16"><name pos:start="87:9" pos:end="87:11">pkt</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:16">dts</name></name> <operator pos:start="87:18" pos:end="87:18">=</operator> <name pos:start="87:20" pos:end="87:36"><name pos:start="87:20" pos:end="87:22">ost</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:36">last_mux_dts</name></name> <operator pos:start="87:38" pos:end="87:38">+</operator> <literal type="number" pos:start="87:40" pos:end="87:40">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="91:49"><if pos:start="89:9" pos:end="91:49">if <condition pos:start="89:12" pos:end="89:39">(<expr pos:start="89:13" pos:end="89:38"><name pos:start="89:13" pos:end="89:20"><name pos:start="89:13" pos:end="89:15">pkt</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:20">pts</name></name> <operator pos:start="89:22" pos:end="89:23">!=</operator> <name pos:start="89:25" pos:end="89:38">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:49"><block_content pos:start="91:13" pos:end="91:49">

            <expr_stmt pos:start="91:13" pos:end="91:49"><expr pos:start="91:13" pos:end="91:48"><name pos:start="91:13" pos:end="91:20"><name pos:start="91:13" pos:end="91:15">pkt</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:20">pts</name></name> <operator pos:start="91:22" pos:end="91:22">=</operator> <call pos:start="91:24" pos:end="91:48"><name pos:start="91:24" pos:end="91:28">FFMAX</name><argument_list pos:start="91:29" pos:end="91:48">(<argument pos:start="91:30" pos:end="91:37"><expr pos:start="91:30" pos:end="91:37"><name pos:start="91:30" pos:end="91:37"><name pos:start="91:30" pos:end="91:32">pkt</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:37">pts</name></name></expr></argument>, <argument pos:start="91:40" pos:end="91:47"><expr pos:start="91:40" pos:end="91:47"><name pos:start="91:40" pos:end="91:47"><name pos:start="91:40" pos:end="91:42">pkt</name><operator pos:start="91:43" pos:end="91:44">-&gt;</operator><name pos:start="91:45" pos:end="91:47">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:33"><expr pos:start="95:5" pos:end="95:32"><name pos:start="95:5" pos:end="95:21"><name pos:start="95:5" pos:end="95:7">ost</name><operator pos:start="95:8" pos:end="95:9">-&gt;</operator><name pos:start="95:10" pos:end="95:21">last_mux_dts</name></name> <operator pos:start="95:23" pos:end="95:23">=</operator> <name pos:start="95:25" pos:end="95:32"><name pos:start="95:25" pos:end="95:27">pkt</name><operator pos:start="95:28" pos:end="95:29">-&gt;</operator><name pos:start="95:30" pos:end="95:32">dts</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:32"><expr pos:start="99:5" pos:end="99:31"><name pos:start="99:5" pos:end="99:18"><name pos:start="99:5" pos:end="99:7">ost</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:18">data_size</name></name> <operator pos:start="99:20" pos:end="99:21">+=</operator> <name pos:start="99:23" pos:end="99:31"><name pos:start="99:23" pos:end="99:25">pkt</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:31">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:27"><expr pos:start="101:5" pos:end="101:26"><name pos:start="101:5" pos:end="101:24"><name pos:start="101:5" pos:end="101:7">ost</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:24">packets_written</name></name><operator pos:start="101:25" pos:end="101:26">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:35"><expr pos:start="105:5" pos:end="105:34"><name pos:start="105:5" pos:end="105:21"><name pos:start="105:5" pos:end="105:7">pkt</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:21">stream_index</name></name> <operator pos:start="105:23" pos:end="105:23">=</operator> <name pos:start="105:25" pos:end="105:34"><name pos:start="105:25" pos:end="105:27">ost</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:34">index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:45"><expr pos:start="107:5" pos:end="107:44"><name pos:start="107:5" pos:end="107:7">ret</name> <operator pos:start="107:9" pos:end="107:9">=</operator> <call pos:start="107:11" pos:end="107:44"><name pos:start="107:11" pos:end="107:36">av_interleaved_write_frame</name><argument_list pos:start="107:37" pos:end="107:44">(<argument pos:start="107:38" pos:end="107:38"><expr pos:start="107:38" pos:end="107:38"><name pos:start="107:38" pos:end="107:38">s</name></expr></argument>, <argument pos:start="107:41" pos:end="107:43"><expr pos:start="107:41" pos:end="107:43"><name pos:start="107:41" pos:end="107:43">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:16">(<expr pos:start="109:9" pos:end="109:15"><name pos:start="109:9" pos:end="109:11">ret</name> <operator pos:start="109:13" pos:end="109:13">&lt;</operator> <literal type="number" pos:start="109:15" pos:end="109:15">0</literal></expr>)</condition> <block pos:start="109:18" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:24">

        <expr_stmt pos:start="111:9" pos:end="111:57"><expr pos:start="111:9" pos:end="111:56"><call pos:start="111:9" pos:end="111:56"><name pos:start="111:9" pos:end="111:19">print_error</name><argument_list pos:start="111:20" pos:end="111:56">(<argument pos:start="111:21" pos:end="111:50"><expr pos:start="111:21" pos:end="111:50"><literal type="string" pos:start="111:21" pos:end="111:50">"av_interleaved_write_frame()"</literal></expr></argument>, <argument pos:start="111:53" pos:end="111:55"><expr pos:start="111:53" pos:end="111:55"><name pos:start="111:53" pos:end="111:55">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:24"><expr pos:start="113:9" pos:end="113:23"><call pos:start="113:9" pos:end="113:23"><name pos:start="113:9" pos:end="113:20">exit_program</name><argument_list pos:start="113:21" pos:end="113:23">(<argument pos:start="113:22" pos:end="113:22"><expr pos:start="113:22" pos:end="113:22"><literal type="number" pos:start="113:22" pos:end="113:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
