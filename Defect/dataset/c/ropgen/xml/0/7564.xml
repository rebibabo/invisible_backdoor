<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7564.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">ssize_t</name></type> <name pos:start="1:9" pos:end="1:24">qemu_paio_return</name><parameter_list pos:start="1:25" pos:end="1:51">(<parameter pos:start="1:26" pos:end="1:50"><decl pos:start="1:26" pos:end="1:50"><type pos:start="1:26" pos:end="1:50"><name pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:31">struct</name> <name pos:start="1:33" pos:end="1:43">qemu_paiocb</name></name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">aiocb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">ssize_t</name></type> <name pos:start="5:13" pos:end="5:15">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:30"><expr pos:start="9:5" pos:end="9:29"><call pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:22">pthread_mutex_lock</name><argument_list pos:start="9:23" pos:end="9:29">(<argument pos:start="9:24" pos:end="9:28"><expr pos:start="9:24" pos:end="9:28"><operator pos:start="9:24" pos:end="9:24">&amp;</operator><name pos:start="9:25" pos:end="9:28">lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:7">ret</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <name pos:start="11:11" pos:end="11:20"><name pos:start="11:11" pos:end="11:15">aiocb</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:20">ret</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:32"><expr pos:start="13:5" pos:end="13:31"><call pos:start="13:5" pos:end="13:31"><name pos:start="13:5" pos:end="13:24">pthread_mutex_unlock</name><argument_list pos:start="13:25" pos:end="13:31">(<argument pos:start="13:26" pos:end="13:30"><expr pos:start="13:26" pos:end="13:30"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:30">lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="17:5" pos:end="17:15">return <expr pos:start="17:12" pos:end="17:14"><name pos:start="17:12" pos:end="17:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
