<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15506.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:30">swri_rematrix_init</name><parameter_list pos:start="1:31" pos:end="1:45">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:41">SwrContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list><block pos:start="1:46" pos:end="139:1">{<block_content pos:start="3:5" pos:end="137:13">

    <decl_stmt pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:68"><decl pos:start="5:5" pos:end="5:67"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">nb_in</name>  <init pos:start="5:16" pos:end="5:67">= <expr pos:start="5:18" pos:end="5:67"><call pos:start="5:18" pos:end="5:67"><name pos:start="5:18" pos:end="5:50">av_get_channel_layout_nb_channels</name><argument_list pos:start="5:51" pos:end="5:67">(<argument pos:start="5:52" pos:end="5:66"><expr pos:start="5:52" pos:end="5:66"><name pos:start="5:52" pos:end="5:66"><name pos:start="5:52" pos:end="5:52">s</name><operator pos:start="5:53" pos:end="5:54">-&gt;</operator><name pos:start="5:55" pos:end="5:66">in_ch_layout</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:69"><decl pos:start="7:5" pos:end="7:68"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">nb_out</name> <init pos:start="7:16" pos:end="7:68">= <expr pos:start="7:18" pos:end="7:68"><call pos:start="7:18" pos:end="7:68"><name pos:start="7:18" pos:end="7:50">av_get_channel_layout_nb_channels</name><argument_list pos:start="7:51" pos:end="7:68">(<argument pos:start="7:52" pos:end="7:67"><expr pos:start="7:52" pos:end="7:67"><name pos:start="7:52" pos:end="7:67"><name pos:start="7:52" pos:end="7:52">s</name><operator pos:start="7:53" pos:end="7:54">-&gt;</operator><name pos:start="7:55" pos:end="7:67">out_ch_layout</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:16">mix_any_f</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:23">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:28">(<expr pos:start="15:9" pos:end="15:27"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:27"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:27">rematrix_custom</name></name></expr>)</condition> <block pos:start="15:30" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:21">

        <decl_stmt pos:start="17:9" pos:end="17:31"><decl pos:start="17:9" pos:end="17:30"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">r</name> <init pos:start="17:15" pos:end="17:30">= <expr pos:start="17:17" pos:end="17:30"><call pos:start="17:17" pos:end="17:30"><name pos:start="17:17" pos:end="17:27">auto_matrix</name><argument_list pos:start="17:28" pos:end="17:30">(<argument pos:start="17:29" pos:end="17:29"><expr pos:start="17:29" pos:end="17:29"><name pos:start="17:29" pos:end="17:29">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="19:9" pos:end="21:21"><if pos:start="19:9" pos:end="21:21">if <condition pos:start="19:12" pos:end="19:14">(<expr pos:start="19:13" pos:end="19:13"><name pos:start="19:13" pos:end="19:13">r</name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:21"><block_content pos:start="21:13" pos:end="21:21">

            <return pos:start="21:13" pos:end="21:21">return <expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">r</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="109:22"><if pos:start="25:5" pos:end="45:5">if <condition pos:start="25:8" pos:end="25:44">(<expr pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:17">midbuf</name><operator pos:start="25:18" pos:end="25:18">.</operator><name pos:start="25:19" pos:end="25:21">fmt</name></name> <operator pos:start="25:23" pos:end="25:24">==</operator> <name pos:start="25:26" pos:end="25:43">AV_SAMPLE_FMT_S16P</name></expr>)</condition><block pos:start="25:45" pos:end="45:5">{<block_content pos:start="27:9" pos:end="43:67">

        <expr_stmt pos:start="27:9" pos:end="27:66"><expr pos:start="27:9" pos:end="27:65"><name pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:24">native_matrix</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <call pos:start="27:28" pos:end="27:65"><name pos:start="27:28" pos:end="27:36">av_calloc</name><argument_list pos:start="27:37" pos:end="27:65">(<argument pos:start="27:38" pos:end="27:51"><expr pos:start="27:38" pos:end="27:51"><name pos:start="27:38" pos:end="27:42">nb_in</name> <operator pos:start="27:44" pos:end="27:44">*</operator> <name pos:start="27:46" pos:end="27:51">nb_out</name></expr></argument>, <argument pos:start="27:54" pos:end="27:64"><expr pos:start="27:54" pos:end="27:64"><sizeof pos:start="27:54" pos:end="27:64">sizeof<argument_list pos:start="27:60" pos:end="27:64">(<argument pos:start="27:61" pos:end="27:63"><expr pos:start="27:61" pos:end="27:63"><name pos:start="27:61" pos:end="27:63">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:51"><expr pos:start="29:9" pos:end="29:50"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:21">native_one</name></name>    <operator pos:start="29:26" pos:end="29:26">=</operator> <call pos:start="29:28" pos:end="29:50"><name pos:start="29:28" pos:end="29:37">av_mallocz</name><argument_list pos:start="29:38" pos:end="29:50">(<argument pos:start="29:39" pos:end="29:49"><expr pos:start="29:39" pos:end="29:49"><sizeof pos:start="29:39" pos:end="29:49">sizeof<argument_list pos:start="29:45" pos:end="29:49">(<argument pos:start="29:46" pos:end="29:48"><expr pos:start="29:46" pos:end="29:48"><name pos:start="29:46" pos:end="29:48">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="31:9" pos:end="35:90">for <control pos:start="31:13" pos:end="31:36">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">i</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:31"><expr pos:start="31:21" pos:end="31:30"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <name pos:start="31:25" pos:end="31:30">nb_out</name></expr>;</condition> <incr pos:start="31:33" pos:end="31:35"><expr pos:start="31:33" pos:end="31:35"><name pos:start="31:33" pos:end="31:33">i</name><operator pos:start="31:34" pos:end="31:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:13" pos:end="35:90"><block_content pos:start="33:13" pos:end="35:90">

            <for pos:start="33:13" pos:end="35:90">for <control pos:start="33:17" pos:end="33:39">(<init pos:start="33:18" pos:end="33:23"><expr pos:start="33:18" pos:end="33:22"><name pos:start="33:18" pos:end="33:18">j</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <literal type="number" pos:start="33:22" pos:end="33:22">0</literal></expr>;</init> <condition pos:start="33:25" pos:end="33:34"><expr pos:start="33:25" pos:end="33:33"><name pos:start="33:25" pos:end="33:25">j</name> <operator pos:start="33:27" pos:end="33:27">&lt;</operator> <name pos:start="33:29" pos:end="33:33">nb_in</name></expr>;</condition> <incr pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><name pos:start="33:36" pos:end="33:36">j</name><operator pos:start="33:37" pos:end="33:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:17" pos:end="35:90"><block_content pos:start="35:17" pos:end="35:90">

                <expr_stmt pos:start="35:17" pos:end="35:90"><expr pos:start="35:17" pos:end="35:89"><operator pos:start="35:17" pos:end="35:17">(</operator><operator pos:start="35:18" pos:end="35:18">(</operator><name pos:start="35:19" pos:end="35:21">int</name><operator pos:start="35:22" pos:end="35:22">*</operator><operator pos:start="35:23" pos:end="35:23">)</operator><name pos:start="35:24" pos:end="35:39"><name pos:start="35:24" pos:end="35:24">s</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:39">native_matrix</name></name><operator pos:start="35:40" pos:end="35:40">)</operator><index pos:start="35:41" pos:end="35:55">[<expr pos:start="35:42" pos:end="35:54"><name pos:start="35:42" pos:end="35:42">i</name> <operator pos:start="35:44" pos:end="35:44">*</operator> <name pos:start="35:46" pos:end="35:50">nb_in</name> <operator pos:start="35:52" pos:end="35:52">+</operator> <name pos:start="35:54" pos:end="35:54">j</name></expr>]</index> <operator pos:start="35:57" pos:end="35:57">=</operator> <call pos:start="35:59" pos:end="35:89"><name pos:start="35:59" pos:end="35:64">lrintf</name><argument_list pos:start="35:65" pos:end="35:89">(<argument pos:start="35:66" pos:end="35:88"><expr pos:start="35:66" pos:end="35:88"><name pos:start="35:66" pos:end="35:80"><name pos:start="35:66" pos:end="35:66">s</name><operator pos:start="35:67" pos:end="35:68">-&gt;</operator><name pos:start="35:69" pos:end="35:74">matrix</name><index pos:start="35:75" pos:end="35:77">[<expr pos:start="35:76" pos:end="35:76"><name pos:start="35:76" pos:end="35:76">i</name></expr>]</index><index pos:start="35:78" pos:end="35:80">[<expr pos:start="35:79" pos:end="35:79"><name pos:start="35:79" pos:end="35:79">j</name></expr>]</index></name> <operator pos:start="35:82" pos:end="35:82">*</operator> <literal type="number" pos:start="35:84" pos:end="35:88">32768</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        <expr_stmt pos:start="37:9" pos:end="37:39"><expr pos:start="37:9" pos:end="37:38"><operator pos:start="37:9" pos:end="37:9">*</operator><operator pos:start="37:10" pos:end="37:10">(</operator><operator pos:start="37:11" pos:end="37:11">(</operator><name pos:start="37:12" pos:end="37:14">int</name><operator pos:start="37:15" pos:end="37:15">*</operator><operator pos:start="37:16" pos:end="37:16">)</operator><name pos:start="37:17" pos:end="37:29"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:29">native_one</name></name><operator pos:start="37:30" pos:end="37:30">)</operator> <operator pos:start="37:32" pos:end="37:32">=</operator> <literal type="number" pos:start="37:34" pos:end="37:38">32768</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:20">mix_1_1_f</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <operator pos:start="39:24" pos:end="39:24">(</operator><name pos:start="39:25" pos:end="39:41">mix_1_1_func_type</name><operator pos:start="39:42" pos:end="39:42">*</operator><operator pos:start="39:43" pos:end="39:43">)</operator><name pos:start="39:44" pos:end="39:51">copy_s16</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:52"><expr pos:start="41:9" pos:end="41:51"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:20">mix_2_1_f</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <operator pos:start="41:24" pos:end="41:24">(</operator><name pos:start="41:25" pos:end="41:41">mix_2_1_func_type</name><operator pos:start="41:42" pos:end="41:42">*</operator><operator pos:start="41:43" pos:end="41:43">)</operator><name pos:start="41:44" pos:end="41:51">sum2_s16</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:67"><expr pos:start="43:9" pos:end="43:66"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:20">mix_any_f</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <operator pos:start="43:24" pos:end="43:24">(</operator><name pos:start="43:25" pos:end="43:41">mix_any_func_type</name><operator pos:start="43:42" pos:end="43:42">*</operator><operator pos:start="43:43" pos:end="43:43">)</operator><call pos:start="43:44" pos:end="43:66"><name pos:start="43:44" pos:end="43:63">get_mix_any_func_s16</name><argument_list pos:start="43:64" pos:end="43:66">(<argument pos:start="43:65" pos:end="43:65"><expr pos:start="43:65" pos:end="43:65"><name pos:start="43:65" pos:end="43:65">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="45:6" pos:end="65:5">else if<condition pos:start="45:13" pos:end="45:49">(<expr pos:start="45:14" pos:end="45:48"><name pos:start="45:14" pos:end="45:26"><name pos:start="45:14" pos:end="45:14">s</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:22">midbuf</name><operator pos:start="45:23" pos:end="45:23">.</operator><name pos:start="45:24" pos:end="45:26">fmt</name></name> <operator pos:start="45:28" pos:end="45:29">==</operator> <name pos:start="45:31" pos:end="45:48">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block pos:start="45:50" pos:end="65:5">{<block_content pos:start="47:9" pos:end="63:69">

        <expr_stmt pos:start="47:9" pos:end="47:68"><expr pos:start="47:9" pos:end="47:67"><name pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:24">native_matrix</name></name> <operator pos:start="47:26" pos:end="47:26">=</operator> <call pos:start="47:28" pos:end="47:67"><name pos:start="47:28" pos:end="47:36">av_calloc</name><argument_list pos:start="47:37" pos:end="47:67">(<argument pos:start="47:38" pos:end="47:51"><expr pos:start="47:38" pos:end="47:51"><name pos:start="47:38" pos:end="47:42">nb_in</name> <operator pos:start="47:44" pos:end="47:44">*</operator> <name pos:start="47:46" pos:end="47:51">nb_out</name></expr></argument>, <argument pos:start="47:54" pos:end="47:66"><expr pos:start="47:54" pos:end="47:66"><sizeof pos:start="47:54" pos:end="47:66">sizeof<argument_list pos:start="47:60" pos:end="47:66">(<argument pos:start="47:61" pos:end="47:65"><expr pos:start="47:61" pos:end="47:65"><name pos:start="47:61" pos:end="47:65">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:53"><expr pos:start="49:9" pos:end="49:52"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:21">native_one</name></name>    <operator pos:start="49:26" pos:end="49:26">=</operator> <call pos:start="49:28" pos:end="49:52"><name pos:start="49:28" pos:end="49:37">av_mallocz</name><argument_list pos:start="49:38" pos:end="49:52">(<argument pos:start="49:39" pos:end="49:51"><expr pos:start="49:39" pos:end="49:51"><sizeof pos:start="49:39" pos:end="49:51">sizeof<argument_list pos:start="49:45" pos:end="49:51">(<argument pos:start="49:46" pos:end="49:50"><expr pos:start="49:46" pos:end="49:50"><name pos:start="49:46" pos:end="49:50">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="51:9" pos:end="55:76">for <control pos:start="51:13" pos:end="51:36">(<init pos:start="51:14" pos:end="51:19"><expr pos:start="51:14" pos:end="51:18"><name pos:start="51:14" pos:end="51:14">i</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>;</init> <condition pos:start="51:21" pos:end="51:31"><expr pos:start="51:21" pos:end="51:30"><name pos:start="51:21" pos:end="51:21">i</name> <operator pos:start="51:23" pos:end="51:23">&lt;</operator> <name pos:start="51:25" pos:end="51:30">nb_out</name></expr>;</condition> <incr pos:start="51:33" pos:end="51:35"><expr pos:start="51:33" pos:end="51:35"><name pos:start="51:33" pos:end="51:33">i</name><operator pos:start="51:34" pos:end="51:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="53:13" pos:end="55:76"><block_content pos:start="53:13" pos:end="55:76">

            <for pos:start="53:13" pos:end="55:76">for <control pos:start="53:17" pos:end="53:39">(<init pos:start="53:18" pos:end="53:23"><expr pos:start="53:18" pos:end="53:22"><name pos:start="53:18" pos:end="53:18">j</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <literal type="number" pos:start="53:22" pos:end="53:22">0</literal></expr>;</init> <condition pos:start="53:25" pos:end="53:34"><expr pos:start="53:25" pos:end="53:33"><name pos:start="53:25" pos:end="53:25">j</name> <operator pos:start="53:27" pos:end="53:27">&lt;</operator> <name pos:start="53:29" pos:end="53:33">nb_in</name></expr>;</condition> <incr pos:start="53:36" pos:end="53:38"><expr pos:start="53:36" pos:end="53:38"><name pos:start="53:36" pos:end="53:36">j</name><operator pos:start="53:37" pos:end="53:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="55:17" pos:end="55:76"><block_content pos:start="55:17" pos:end="55:76">

                <expr_stmt pos:start="55:17" pos:end="55:76"><expr pos:start="55:17" pos:end="55:75"><operator pos:start="55:17" pos:end="55:17">(</operator><operator pos:start="55:18" pos:end="55:18">(</operator><name pos:start="55:19" pos:end="55:23">float</name><operator pos:start="55:24" pos:end="55:24">*</operator><operator pos:start="55:25" pos:end="55:25">)</operator><name pos:start="55:26" pos:end="55:41"><name pos:start="55:26" pos:end="55:26">s</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:41">native_matrix</name></name><operator pos:start="55:42" pos:end="55:42">)</operator><index pos:start="55:43" pos:end="55:57">[<expr pos:start="55:44" pos:end="55:56"><name pos:start="55:44" pos:end="55:44">i</name> <operator pos:start="55:46" pos:end="55:46">*</operator> <name pos:start="55:48" pos:end="55:52">nb_in</name> <operator pos:start="55:54" pos:end="55:54">+</operator> <name pos:start="55:56" pos:end="55:56">j</name></expr>]</index> <operator pos:start="55:59" pos:end="55:59">=</operator> <name pos:start="55:61" pos:end="55:75"><name pos:start="55:61" pos:end="55:61">s</name><operator pos:start="55:62" pos:end="55:63">-&gt;</operator><name pos:start="55:64" pos:end="55:69">matrix</name><index pos:start="55:70" pos:end="55:72">[<expr pos:start="55:71" pos:end="55:71"><name pos:start="55:71" pos:end="55:71">i</name></expr>]</index><index pos:start="55:73" pos:end="55:75">[<expr pos:start="55:74" pos:end="55:74"><name pos:start="55:74" pos:end="55:74">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        <expr_stmt pos:start="57:9" pos:end="57:39"><expr pos:start="57:9" pos:end="57:38"><operator pos:start="57:9" pos:end="57:9">*</operator><operator pos:start="57:10" pos:end="57:10">(</operator><operator pos:start="57:11" pos:end="57:11">(</operator><name pos:start="57:12" pos:end="57:16">float</name><operator pos:start="57:17" pos:end="57:17">*</operator><operator pos:start="57:18" pos:end="57:18">)</operator><name pos:start="57:19" pos:end="57:31"><name pos:start="57:19" pos:end="57:19">s</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:31">native_one</name></name><operator pos:start="57:32" pos:end="57:32">)</operator> <operator pos:start="57:34" pos:end="57:34">=</operator> <literal type="number" pos:start="57:36" pos:end="57:38">1.0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:54"><expr pos:start="59:9" pos:end="59:53"><name pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:20">mix_1_1_f</name></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <operator pos:start="59:24" pos:end="59:24">(</operator><name pos:start="59:25" pos:end="59:41">mix_1_1_func_type</name><operator pos:start="59:42" pos:end="59:42">*</operator><operator pos:start="59:43" pos:end="59:43">)</operator><name pos:start="59:44" pos:end="59:53">copy_float</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:54"><expr pos:start="61:9" pos:end="61:53"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:20">mix_2_1_f</name></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <operator pos:start="61:24" pos:end="61:24">(</operator><name pos:start="61:25" pos:end="61:41">mix_2_1_func_type</name><operator pos:start="61:42" pos:end="61:42">*</operator><operator pos:start="61:43" pos:end="61:43">)</operator><name pos:start="61:44" pos:end="61:53">sum2_float</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:69"><expr pos:start="63:9" pos:end="63:68"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:20">mix_any_f</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <operator pos:start="63:24" pos:end="63:24">(</operator><name pos:start="63:25" pos:end="63:41">mix_any_func_type</name><operator pos:start="63:42" pos:end="63:42">*</operator><operator pos:start="63:43" pos:end="63:43">)</operator><call pos:start="63:44" pos:end="63:68"><name pos:start="63:44" pos:end="63:65">get_mix_any_func_float</name><argument_list pos:start="63:66" pos:end="63:68">(<argument pos:start="63:67" pos:end="63:67"><expr pos:start="63:67" pos:end="63:67"><name pos:start="63:67" pos:end="63:67">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="65:6" pos:end="85:5">else if<condition pos:start="65:13" pos:end="65:49">(<expr pos:start="65:14" pos:end="65:48"><name pos:start="65:14" pos:end="65:26"><name pos:start="65:14" pos:end="65:14">s</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:22">midbuf</name><operator pos:start="65:23" pos:end="65:23">.</operator><name pos:start="65:24" pos:end="65:26">fmt</name></name> <operator pos:start="65:28" pos:end="65:29">==</operator> <name pos:start="65:31" pos:end="65:48">AV_SAMPLE_FMT_DBLP</name></expr>)</condition><block pos:start="65:50" pos:end="85:5">{<block_content pos:start="67:9" pos:end="83:70">

        <expr_stmt pos:start="67:9" pos:end="67:69"><expr pos:start="67:9" pos:end="67:68"><name pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:24">native_matrix</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <call pos:start="67:28" pos:end="67:68"><name pos:start="67:28" pos:end="67:36">av_calloc</name><argument_list pos:start="67:37" pos:end="67:68">(<argument pos:start="67:38" pos:end="67:51"><expr pos:start="67:38" pos:end="67:51"><name pos:start="67:38" pos:end="67:42">nb_in</name> <operator pos:start="67:44" pos:end="67:44">*</operator> <name pos:start="67:46" pos:end="67:51">nb_out</name></expr></argument>, <argument pos:start="67:54" pos:end="67:67"><expr pos:start="67:54" pos:end="67:67"><sizeof pos:start="67:54" pos:end="67:67">sizeof<argument_list pos:start="67:60" pos:end="67:67">(<argument pos:start="67:61" pos:end="67:66"><expr pos:start="67:61" pos:end="67:66"><name pos:start="67:61" pos:end="67:66">double</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:54"><expr pos:start="69:9" pos:end="69:53"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:21">native_one</name></name>    <operator pos:start="69:26" pos:end="69:26">=</operator> <call pos:start="69:28" pos:end="69:53"><name pos:start="69:28" pos:end="69:37">av_mallocz</name><argument_list pos:start="69:38" pos:end="69:53">(<argument pos:start="69:39" pos:end="69:52"><expr pos:start="69:39" pos:end="69:52"><sizeof pos:start="69:39" pos:end="69:52">sizeof<argument_list pos:start="69:45" pos:end="69:52">(<argument pos:start="69:46" pos:end="69:51"><expr pos:start="69:46" pos:end="69:51"><name pos:start="69:46" pos:end="69:51">double</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="71:9" pos:end="75:77">for <control pos:start="71:13" pos:end="71:36">(<init pos:start="71:14" pos:end="71:19"><expr pos:start="71:14" pos:end="71:18"><name pos:start="71:14" pos:end="71:14">i</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:18">0</literal></expr>;</init> <condition pos:start="71:21" pos:end="71:31"><expr pos:start="71:21" pos:end="71:30"><name pos:start="71:21" pos:end="71:21">i</name> <operator pos:start="71:23" pos:end="71:23">&lt;</operator> <name pos:start="71:25" pos:end="71:30">nb_out</name></expr>;</condition> <incr pos:start="71:33" pos:end="71:35"><expr pos:start="71:33" pos:end="71:35"><name pos:start="71:33" pos:end="71:33">i</name><operator pos:start="71:34" pos:end="71:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="73:13" pos:end="75:77"><block_content pos:start="73:13" pos:end="75:77">

            <for pos:start="73:13" pos:end="75:77">for <control pos:start="73:17" pos:end="73:39">(<init pos:start="73:18" pos:end="73:23"><expr pos:start="73:18" pos:end="73:22"><name pos:start="73:18" pos:end="73:18">j</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <literal type="number" pos:start="73:22" pos:end="73:22">0</literal></expr>;</init> <condition pos:start="73:25" pos:end="73:34"><expr pos:start="73:25" pos:end="73:33"><name pos:start="73:25" pos:end="73:25">j</name> <operator pos:start="73:27" pos:end="73:27">&lt;</operator> <name pos:start="73:29" pos:end="73:33">nb_in</name></expr>;</condition> <incr pos:start="73:36" pos:end="73:38"><expr pos:start="73:36" pos:end="73:38"><name pos:start="73:36" pos:end="73:36">j</name><operator pos:start="73:37" pos:end="73:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="75:17" pos:end="75:77"><block_content pos:start="75:17" pos:end="75:77">

                <expr_stmt pos:start="75:17" pos:end="75:77"><expr pos:start="75:17" pos:end="75:76"><operator pos:start="75:17" pos:end="75:17">(</operator><operator pos:start="75:18" pos:end="75:18">(</operator><name pos:start="75:19" pos:end="75:24">double</name><operator pos:start="75:25" pos:end="75:25">*</operator><operator pos:start="75:26" pos:end="75:26">)</operator><name pos:start="75:27" pos:end="75:42"><name pos:start="75:27" pos:end="75:27">s</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:42">native_matrix</name></name><operator pos:start="75:43" pos:end="75:43">)</operator><index pos:start="75:44" pos:end="75:58">[<expr pos:start="75:45" pos:end="75:57"><name pos:start="75:45" pos:end="75:45">i</name> <operator pos:start="75:47" pos:end="75:47">*</operator> <name pos:start="75:49" pos:end="75:53">nb_in</name> <operator pos:start="75:55" pos:end="75:55">+</operator> <name pos:start="75:57" pos:end="75:57">j</name></expr>]</index> <operator pos:start="75:60" pos:end="75:60">=</operator> <name pos:start="75:62" pos:end="75:76"><name pos:start="75:62" pos:end="75:62">s</name><operator pos:start="75:63" pos:end="75:64">-&gt;</operator><name pos:start="75:65" pos:end="75:70">matrix</name><index pos:start="75:71" pos:end="75:73">[<expr pos:start="75:72" pos:end="75:72"><name pos:start="75:72" pos:end="75:72">i</name></expr>]</index><index pos:start="75:74" pos:end="75:76">[<expr pos:start="75:75" pos:end="75:75"><name pos:start="75:75" pos:end="75:75">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        <expr_stmt pos:start="77:9" pos:end="77:40"><expr pos:start="77:9" pos:end="77:39"><operator pos:start="77:9" pos:end="77:9">*</operator><operator pos:start="77:10" pos:end="77:10">(</operator><operator pos:start="77:11" pos:end="77:11">(</operator><name pos:start="77:12" pos:end="77:17">double</name><operator pos:start="77:18" pos:end="77:18">*</operator><operator pos:start="77:19" pos:end="77:19">)</operator><name pos:start="77:20" pos:end="77:32"><name pos:start="77:20" pos:end="77:20">s</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:32">native_one</name></name><operator pos:start="77:33" pos:end="77:33">)</operator> <operator pos:start="77:35" pos:end="77:35">=</operator> <literal type="number" pos:start="77:37" pos:end="77:39">1.0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:55"><expr pos:start="79:9" pos:end="79:54"><name pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:20">mix_1_1_f</name></name> <operator pos:start="79:22" pos:end="79:22">=</operator> <operator pos:start="79:24" pos:end="79:24">(</operator><name pos:start="79:25" pos:end="79:41">mix_1_1_func_type</name><operator pos:start="79:42" pos:end="79:42">*</operator><operator pos:start="79:43" pos:end="79:43">)</operator><name pos:start="79:44" pos:end="79:54">copy_double</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:55"><expr pos:start="81:9" pos:end="81:54"><name pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:20">mix_2_1_f</name></name> <operator pos:start="81:22" pos:end="81:22">=</operator> <operator pos:start="81:24" pos:end="81:24">(</operator><name pos:start="81:25" pos:end="81:41">mix_2_1_func_type</name><operator pos:start="81:42" pos:end="81:42">*</operator><operator pos:start="81:43" pos:end="81:43">)</operator><name pos:start="81:44" pos:end="81:54">sum2_double</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:70"><expr pos:start="83:9" pos:end="83:69"><name pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:20">mix_any_f</name></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <operator pos:start="83:24" pos:end="83:24">(</operator><name pos:start="83:25" pos:end="83:41">mix_any_func_type</name><operator pos:start="83:42" pos:end="83:42">*</operator><operator pos:start="83:43" pos:end="83:43">)</operator><call pos:start="83:44" pos:end="83:69"><name pos:start="83:44" pos:end="83:66">get_mix_any_func_double</name><argument_list pos:start="83:67" pos:end="83:69">(<argument pos:start="83:68" pos:end="83:68"><expr pos:start="83:68" pos:end="83:68"><name pos:start="83:68" pos:end="83:68">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="85:6" pos:end="107:5">else if<condition pos:start="85:13" pos:end="85:49">(<expr pos:start="85:14" pos:end="85:48"><name pos:start="85:14" pos:end="85:26"><name pos:start="85:14" pos:end="85:14">s</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:22">midbuf</name><operator pos:start="85:23" pos:end="85:23">.</operator><name pos:start="85:24" pos:end="85:26">fmt</name></name> <operator pos:start="85:28" pos:end="85:29">==</operator> <name pos:start="85:31" pos:end="85:48">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block pos:start="85:50" pos:end="107:5">{<block_content pos:start="91:9" pos:end="105:67">

        <comment type="line" pos:start="87:9" pos:end="87:39">// Only for dithering currently</comment>

<comment type="line" pos:start="89:1" pos:end="89:72">//         s-&gt;native_matrix = av_calloc(nb_in * nb_out, sizeof(double));</comment>

        <expr_stmt pos:start="91:9" pos:end="91:51"><expr pos:start="91:9" pos:end="91:50"><name pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:21">native_one</name></name>    <operator pos:start="91:26" pos:end="91:26">=</operator> <call pos:start="91:28" pos:end="91:50"><name pos:start="91:28" pos:end="91:37">av_mallocz</name><argument_list pos:start="91:38" pos:end="91:50">(<argument pos:start="91:39" pos:end="91:49"><expr pos:start="91:39" pos:end="91:49"><sizeof pos:start="91:39" pos:end="91:49">sizeof<argument_list pos:start="91:45" pos:end="91:49">(<argument pos:start="91:46" pos:end="91:48"><expr pos:start="91:46" pos:end="91:48"><name pos:start="91:46" pos:end="91:48">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="93:1" pos:end="93:39">//         for (i = 0; i &lt; nb_out; i++)</comment>

<comment type="line" pos:start="95:1" pos:end="95:42">//             for (j = 0; j &lt; nb_in; j++)</comment>

<comment type="line" pos:start="97:1" pos:end="97:80">//                 ((double*)s-&gt;native_matrix)[i * nb_in + j] = s-&gt;matrix[i][j];</comment>

        <expr_stmt pos:start="99:9" pos:end="99:39"><expr pos:start="99:9" pos:end="99:38"><operator pos:start="99:9" pos:end="99:9">*</operator><operator pos:start="99:10" pos:end="99:10">(</operator><operator pos:start="99:11" pos:end="99:11">(</operator><name pos:start="99:12" pos:end="99:14">int</name><operator pos:start="99:15" pos:end="99:15">*</operator><operator pos:start="99:16" pos:end="99:16">)</operator><name pos:start="99:17" pos:end="99:29"><name pos:start="99:17" pos:end="99:17">s</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:29">native_one</name></name><operator pos:start="99:30" pos:end="99:30">)</operator> <operator pos:start="99:32" pos:end="99:32">=</operator> <literal type="number" pos:start="99:34" pos:end="99:38">32768</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:52"><expr pos:start="101:9" pos:end="101:51"><name pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:20">mix_1_1_f</name></name> <operator pos:start="101:22" pos:end="101:22">=</operator> <operator pos:start="101:24" pos:end="101:24">(</operator><name pos:start="101:25" pos:end="101:41">mix_1_1_func_type</name><operator pos:start="101:42" pos:end="101:42">*</operator><operator pos:start="101:43" pos:end="101:43">)</operator><name pos:start="101:44" pos:end="101:51">copy_s32</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:52"><expr pos:start="103:9" pos:end="103:51"><name pos:start="103:9" pos:end="103:20"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:20">mix_2_1_f</name></name> <operator pos:start="103:22" pos:end="103:22">=</operator> <operator pos:start="103:24" pos:end="103:24">(</operator><name pos:start="103:25" pos:end="103:41">mix_2_1_func_type</name><operator pos:start="103:42" pos:end="103:42">*</operator><operator pos:start="103:43" pos:end="103:43">)</operator><name pos:start="103:44" pos:end="103:51">sum2_s32</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:67"><expr pos:start="105:9" pos:end="105:66"><name pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:20">mix_any_f</name></name> <operator pos:start="105:22" pos:end="105:22">=</operator> <operator pos:start="105:24" pos:end="105:24">(</operator><name pos:start="105:25" pos:end="105:41">mix_any_func_type</name><operator pos:start="105:42" pos:end="105:42">*</operator><operator pos:start="105:43" pos:end="105:43">)</operator><call pos:start="105:44" pos:end="105:66"><name pos:start="105:44" pos:end="105:63">get_mix_any_func_s32</name><argument_list pos:start="105:64" pos:end="105:66">(<argument pos:start="105:65" pos:end="105:65"><expr pos:start="105:65" pos:end="105:65"><name pos:start="105:65" pos:end="105:65">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="107:6" pos:end="109:22">else<block type="pseudo" pos:start="109:9" pos:end="109:22"><block_content pos:start="109:9" pos:end="109:22">

        <expr_stmt pos:start="109:9" pos:end="109:22"><expr pos:start="109:9" pos:end="109:21"><call pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:18">av_assert0</name><argument_list pos:start="109:19" pos:end="109:21">(<argument pos:start="109:20" pos:end="109:20"><expr pos:start="109:20" pos:end="109:20"><literal type="number" pos:start="109:20" pos:end="109:20">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <comment type="line" pos:start="111:5" pos:end="111:34">//FIXME quantize for integeres</comment>

    <for pos:start="113:5" pos:end="129:5">for <control pos:start="113:9" pos:end="113:36">(<init pos:start="113:10" pos:end="113:15"><expr pos:start="113:10" pos:end="113:14"><name pos:start="113:10" pos:end="113:10">i</name> <operator pos:start="113:12" pos:end="113:12">=</operator> <literal type="number" pos:start="113:14" pos:end="113:14">0</literal></expr>;</init> <condition pos:start="113:17" pos:end="113:31"><expr pos:start="113:17" pos:end="113:30"><name pos:start="113:17" pos:end="113:17">i</name> <operator pos:start="113:19" pos:end="113:19">&lt;</operator> <name pos:start="113:21" pos:end="113:30">SWR_CH_MAX</name></expr>;</condition> <incr pos:start="113:33" pos:end="113:35"><expr pos:start="113:33" pos:end="113:35"><name pos:start="113:33" pos:end="113:33">i</name><operator pos:start="113:34" pos:end="113:35">++</operator></expr></incr>)</control> <block pos:start="113:38" pos:end="129:5">{<block_content pos:start="115:9" pos:end="127:34">

        <decl_stmt pos:start="115:9" pos:end="115:20"><decl pos:start="115:9" pos:end="115:19"><type pos:start="115:9" pos:end="115:11"><name pos:start="115:9" pos:end="115:11">int</name></type> <name pos:start="115:13" pos:end="115:17">ch_in</name><init pos:start="115:18" pos:end="115:19">=<expr pos:start="115:19" pos:end="115:19"><literal type="number" pos:start="115:19" pos:end="115:19">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="117:9" pos:end="125:9">for <control pos:start="117:13" pos:end="117:40">(<init pos:start="117:14" pos:end="117:19"><expr pos:start="117:14" pos:end="117:18"><name pos:start="117:14" pos:end="117:14">j</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <literal type="number" pos:start="117:18" pos:end="117:18">0</literal></expr>;</init> <condition pos:start="117:21" pos:end="117:35"><expr pos:start="117:21" pos:end="117:34"><name pos:start="117:21" pos:end="117:21">j</name> <operator pos:start="117:23" pos:end="117:23">&lt;</operator> <name pos:start="117:25" pos:end="117:34">SWR_CH_MAX</name></expr>;</condition> <incr pos:start="117:37" pos:end="117:39"><expr pos:start="117:37" pos:end="117:39"><name pos:start="117:37" pos:end="117:37">j</name><operator pos:start="117:38" pos:end="117:39">++</operator></expr></incr>)</control> <block pos:start="117:42" pos:end="125:9">{<block_content pos:start="119:13" pos:end="123:44">

            <expr_stmt pos:start="119:13" pos:end="119:63"><expr pos:start="119:13" pos:end="119:62"><name pos:start="119:13" pos:end="119:29"><name pos:start="119:13" pos:end="119:13">s</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:23">matrix32</name><index pos:start="119:24" pos:end="119:26">[<expr pos:start="119:25" pos:end="119:25"><name pos:start="119:25" pos:end="119:25">i</name></expr>]</index><index pos:start="119:27" pos:end="119:29">[<expr pos:start="119:28" pos:end="119:28"><name pos:start="119:28" pos:end="119:28">j</name></expr>]</index></name><operator pos:start="119:30" pos:end="119:30">=</operator> <call pos:start="119:32" pos:end="119:62"><name pos:start="119:32" pos:end="119:37">lrintf</name><argument_list pos:start="119:38" pos:end="119:62">(<argument pos:start="119:39" pos:end="119:61"><expr pos:start="119:39" pos:end="119:61"><name pos:start="119:39" pos:end="119:53"><name pos:start="119:39" pos:end="119:39">s</name><operator pos:start="119:40" pos:end="119:41">-&gt;</operator><name pos:start="119:42" pos:end="119:47">matrix</name><index pos:start="119:48" pos:end="119:50">[<expr pos:start="119:49" pos:end="119:49"><name pos:start="119:49" pos:end="119:49">i</name></expr>]</index><index pos:start="119:51" pos:end="119:53">[<expr pos:start="119:52" pos:end="119:52"><name pos:start="119:52" pos:end="119:52">j</name></expr>]</index></name> <operator pos:start="119:55" pos:end="119:55">*</operator> <literal type="number" pos:start="119:57" pos:end="119:61">32768</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="121:13" pos:end="123:44"><if pos:start="121:13" pos:end="123:44">if<condition pos:start="121:15" pos:end="121:31">(<expr pos:start="121:16" pos:end="121:30"><name pos:start="121:16" pos:end="121:30"><name pos:start="121:16" pos:end="121:16">s</name><operator pos:start="121:17" pos:end="121:18">-&gt;</operator><name pos:start="121:19" pos:end="121:24">matrix</name><index pos:start="121:25" pos:end="121:27">[<expr pos:start="121:26" pos:end="121:26"><name pos:start="121:26" pos:end="121:26">i</name></expr>]</index><index pos:start="121:28" pos:end="121:30">[<expr pos:start="121:29" pos:end="121:29"><name pos:start="121:29" pos:end="121:29">j</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:44"><block_content pos:start="123:17" pos:end="123:44">

                <expr_stmt pos:start="123:17" pos:end="123:44"><expr pos:start="123:17" pos:end="123:43"><name pos:start="123:17" pos:end="123:40"><name pos:start="123:17" pos:end="123:17">s</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:28">matrix_ch</name><index pos:start="123:29" pos:end="123:31">[<expr pos:start="123:30" pos:end="123:30"><name pos:start="123:30" pos:end="123:30">i</name></expr>]</index><index pos:start="123:32" pos:end="123:40">[<expr pos:start="123:33" pos:end="123:39"><operator pos:start="123:33" pos:end="123:34">++</operator><name pos:start="123:35" pos:end="123:39">ch_in</name></expr>]</index></name><operator pos:start="123:41" pos:end="123:41">=</operator> <name pos:start="123:43" pos:end="123:43">j</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="127:9" pos:end="127:34"><expr pos:start="127:9" pos:end="127:33"><name pos:start="127:9" pos:end="127:26"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:20">matrix_ch</name><index pos:start="127:21" pos:end="127:23">[<expr pos:start="127:22" pos:end="127:22"><name pos:start="127:22" pos:end="127:22">i</name></expr>]</index><index pos:start="127:24" pos:end="127:26">[<expr pos:start="127:25" pos:end="127:25"><literal type="number" pos:start="127:25" pos:end="127:25">0</literal></expr>]</index></name><operator pos:start="127:27" pos:end="127:27">=</operator> <name pos:start="127:29" pos:end="127:33">ch_in</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="133:5" pos:end="133:56"><if pos:start="133:5" pos:end="133:56">if<condition pos:start="133:7" pos:end="133:29">(<expr pos:start="133:8" pos:end="133:28"><name pos:start="133:8" pos:end="133:16">HAVE_YASM</name> <operator pos:start="133:18" pos:end="133:19">&amp;&amp;</operator> <name pos:start="133:21" pos:end="133:28">HAVE_MMX</name></expr>)</condition><block type="pseudo" pos:start="133:31" pos:end="133:56"><block_content pos:start="133:31" pos:end="133:56"> <expr_stmt pos:start="133:31" pos:end="133:56"><expr pos:start="133:31" pos:end="133:55"><call pos:start="133:31" pos:end="133:55"><name pos:start="133:31" pos:end="133:52">swri_rematrix_init_x86</name><argument_list pos:start="133:53" pos:end="133:55">(<argument pos:start="133:54" pos:end="133:54"><expr pos:start="133:54" pos:end="133:54"><name pos:start="133:54" pos:end="133:54">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="137:5" pos:end="137:13">return <expr pos:start="137:12" pos:end="137:12"><literal type="number" pos:start="137:12" pos:end="137:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
