<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15511.c" pos:tabs="8"><function pos:start="1:1" pos:end="639:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:33">parse_nal_units</name><parameter_list pos:start="1:34" pos:end="5:74">(<parameter pos:start="1:35" pos:end="1:57"><decl pos:start="1:35" pos:end="1:57"><type pos:start="1:35" pos:end="1:57"><name pos:start="1:35" pos:end="1:54">AVCodecParserContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:55"><decl pos:start="3:35" pos:end="3:55"><type pos:start="3:35" pos:end="3:55"><name pos:start="3:35" pos:end="3:48">AVCodecContext</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:55">avctx</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:59"><decl pos:start="5:35" pos:end="5:59"><type pos:start="5:35" pos:end="5:59"><specifier pos:start="5:35" pos:end="5:39">const</specifier> <name pos:start="5:41" pos:end="5:47">uint8_t</name> <modifier pos:start="5:49" pos:end="5:49">*</modifier> <specifier pos:start="5:51" pos:end="5:55">const</specifier></type> <name pos:start="5:57" pos:end="5:59">buf</name></decl></parameter>, <parameter pos:start="5:62" pos:end="5:73"><decl pos:start="5:62" pos:end="5:73"><type pos:start="5:62" pos:end="5:73"><name pos:start="5:62" pos:end="5:64">int</name></type> <name pos:start="5:66" pos:end="5:73">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="639:1">{<block_content pos:start="9:5" pos:end="637:14">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">H264ParseContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:23">p</name> <init pos:start="9:25" pos:end="9:38">= <expr pos:start="9:27" pos:end="9:38"><name pos:start="9:27" pos:end="9:38"><name pos:start="9:27" pos:end="9:27">s</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">H2645NAL</name></type> <name pos:start="11:14" pos:end="11:16">nal</name> <init pos:start="11:18" pos:end="11:27">= <expr pos:start="11:20" pos:end="11:27"><block pos:start="11:20" pos:end="11:27">{ <expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">buf_index</name></decl>, <decl pos:start="13:20" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:27">next_avc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:23">pps_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:27">slice_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:34"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:13">state</name> <init pos:start="19:15" pos:end="19:18">= <expr pos:start="19:17" pos:end="19:18"><operator pos:start="19:17" pos:end="19:17">-</operator><literal type="number" pos:start="19:18" pos:end="19:18">1</literal></expr></init></decl>, <decl pos:start="19:21" pos:end="19:33"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:21" pos:end="19:29">got_reset</name> <init pos:start="19:31" pos:end="19:33">= <expr pos:start="19:33" pos:end="19:33"><literal type="number" pos:start="19:33" pos:end="19:33">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:55"><decl pos:start="21:5" pos:end="21:54"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:12">q264</name> <init pos:start="21:14" pos:end="21:54">= <expr pos:start="21:16" pos:end="21:54"><name pos:start="21:16" pos:end="21:23">buf_size</name> <operator pos:start="21:25" pos:end="21:26">&gt;=</operator><literal type="number" pos:start="21:27" pos:end="21:27">4</literal> <operator pos:start="21:29" pos:end="21:30">&amp;&amp;</operator> <operator pos:start="21:32" pos:end="21:32">!</operator><call pos:start="21:33" pos:end="21:54"><name pos:start="21:33" pos:end="21:38">memcmp</name><argument_list pos:start="21:39" pos:end="21:54">(<argument pos:start="21:40" pos:end="21:45"><expr pos:start="21:40" pos:end="21:45"><literal type="string" pos:start="21:40" pos:end="21:45">"Q264"</literal></expr></argument>, <argument pos:start="21:48" pos:end="21:50"><expr pos:start="21:48" pos:end="21:50"><name pos:start="21:48" pos:end="21:50">buf</name></expr></argument>, <argument pos:start="21:53" pos:end="21:53"><expr pos:start="21:53" pos:end="21:53"><literal type="number" pos:start="21:53" pos:end="21:53">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:17">field_poc</name><index pos:start="23:18" pos:end="23:20">[<expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:12"><decl pos:start="25:5" pos:end="25:11"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:38">/* set some sane default values */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:45"><expr pos:start="31:5" pos:end="31:44"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:16">pict_type</name></name>         <operator pos:start="31:26" pos:end="31:26">=</operator> <name pos:start="31:28" pos:end="31:44">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:16">key_frame</name></name>         <operator pos:start="33:26" pos:end="33:26">=</operator> <literal type="number" pos:start="33:28" pos:end="33:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:56"><expr pos:start="35:5" pos:end="35:55"><name pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:24">picture_structure</name></name> <operator pos:start="35:26" pos:end="35:26">=</operator> <name pos:start="35:28" pos:end="35:55">AV_PICTURE_STRUCTURE_UNKNOWN</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:32"><expr pos:start="39:5" pos:end="39:31"><call pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:22">ff_h264_sei_uninit</name><argument_list pos:start="39:23" pos:end="39:31">(<argument pos:start="39:24" pos:end="39:30"><expr pos:start="39:24" pos:end="39:30"><operator pos:start="39:24" pos:end="39:24">&amp;</operator><name pos:start="39:25" pos:end="39:30"><name pos:start="39:25" pos:end="39:25">p</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:30">sei</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:68"><expr pos:start="41:5" pos:end="41:67"><name pos:start="41:5" pos:end="41:62"><name pos:start="41:5" pos:end="41:5">p</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:10">sei</name><operator pos:start="41:11" pos:end="41:11">.</operator><name pos:start="41:12" pos:end="41:24">frame_packing</name><operator pos:start="41:25" pos:end="41:25">.</operator><name pos:start="41:26" pos:end="41:62">frame_packing_arrangement_cancel_flag</name></name> <operator pos:start="41:64" pos:end="41:64">=</operator> <operator pos:start="41:66" pos:end="41:66">-</operator><literal type="number" pos:start="41:67" pos:end="41:67">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="47:17"><if pos:start="45:5" pos:end="47:17">if <condition pos:start="45:8" pos:end="45:18">(<expr pos:start="45:9" pos:end="45:17"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:17">buf_size</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:17"><block_content pos:start="47:9" pos:end="47:17">

        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:22"><expr pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:13">buf_index</name>     <operator pos:start="51:19" pos:end="51:19">=</operator> <literal type="number" pos:start="51:21" pos:end="51:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:12">next_avc</name>      <operator pos:start="53:19" pos:end="53:19">=</operator> <ternary pos:start="53:21" pos:end="53:44"><condition pos:start="53:21" pos:end="53:31"><expr pos:start="53:21" pos:end="53:29"><name pos:start="53:21" pos:end="53:29"><name pos:start="53:21" pos:end="53:21">p</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:29">is_avc</name></name></expr> ?</condition><then pos:start="53:33" pos:end="53:33"> <expr pos:start="53:33" pos:end="53:33"><literal type="number" pos:start="53:33" pos:end="53:33">0</literal></expr> </then><else pos:start="53:35" pos:end="53:44">: <expr pos:start="53:37" pos:end="53:44"><name pos:start="53:37" pos:end="53:44">buf_size</name></expr></else></ternary></expr>;</expr_stmt>

    <for pos:start="55:5" pos:end="619:5">for <control pos:start="55:9" pos:end="55:12">(<init pos:start="55:10" pos:end="55:10">;</init><condition pos:start="55:11" pos:end="55:11">;</condition><incr/>)</control> <block pos:start="55:14" pos:end="619:5">{<block_content pos:start="57:9" pos:end="617:9">

        <decl_stmt pos:start="57:9" pos:end="57:23"><decl pos:start="57:9" pos:end="57:22"><type pos:start="57:9" pos:end="57:19"><specifier pos:start="57:9" pos:end="57:13">const</specifier> <name pos:start="57:15" pos:end="57:17">SPS</name> <modifier pos:start="57:19" pos:end="57:19">*</modifier></type><name pos:start="57:20" pos:end="57:22">sps</name></decl>;</decl_stmt>

        <decl_stmt pos:start="59:9" pos:end="59:46"><decl pos:start="59:9" pos:end="59:22"><type pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">int</name></type> <name pos:start="59:13" pos:end="59:22">src_length</name></decl>, <decl pos:start="59:25" pos:end="59:32"><type ref="prev" pos:start="59:9" pos:end="59:11"/><name pos:start="59:25" pos:end="59:32">consumed</name></decl>, <decl pos:start="59:35" pos:end="59:45"><type ref="prev" pos:start="59:9" pos:end="59:11"/><name pos:start="59:35" pos:end="59:41">nalsize</name> <init pos:start="59:43" pos:end="59:45">= <expr pos:start="59:45" pos:end="59:45"><literal type="number" pos:start="59:45" pos:end="59:45">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="63:9" pos:end="85:9"><if pos:start="63:9" pos:end="73:9">if <condition pos:start="63:12" pos:end="63:34">(<expr pos:start="63:13" pos:end="63:33"><name pos:start="63:13" pos:end="63:21">buf_index</name> <operator pos:start="63:23" pos:end="63:24">&gt;=</operator> <name pos:start="63:26" pos:end="63:33">next_avc</name></expr>)</condition> <block pos:start="63:36" pos:end="73:9">{<block_content pos:start="65:13" pos:end="71:43">

            <expr_stmt pos:start="65:13" pos:end="65:88"><expr pos:start="65:13" pos:end="65:87"><name pos:start="65:13" pos:end="65:19">nalsize</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <call pos:start="65:23" pos:end="65:87"><name pos:start="65:23" pos:end="65:33">get_nalsize</name><argument_list pos:start="65:34" pos:end="65:87">(<argument pos:start="65:35" pos:end="65:52"><expr pos:start="65:35" pos:end="65:52"><name pos:start="65:35" pos:end="65:52"><name pos:start="65:35" pos:end="65:35">p</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:52">nal_length_size</name></name></expr></argument>, <argument pos:start="65:55" pos:end="65:57"><expr pos:start="65:55" pos:end="65:57"><name pos:start="65:55" pos:end="65:57">buf</name></expr></argument>, <argument pos:start="65:60" pos:end="65:67"><expr pos:start="65:60" pos:end="65:67"><name pos:start="65:60" pos:end="65:67">buf_size</name></expr></argument>, <argument pos:start="65:70" pos:end="65:79"><expr pos:start="65:70" pos:end="65:79"><operator pos:start="65:70" pos:end="65:70">&amp;</operator><name pos:start="65:71" pos:end="65:79">buf_index</name></expr></argument>, <argument pos:start="65:82" pos:end="65:86"><expr pos:start="65:82" pos:end="65:86"><name pos:start="65:82" pos:end="65:86">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="67:13" pos:end="69:22"><if pos:start="67:13" pos:end="69:22">if <condition pos:start="67:16" pos:end="67:28">(<expr pos:start="67:17" pos:end="67:27"><name pos:start="67:17" pos:end="67:23">nalsize</name> <operator pos:start="67:25" pos:end="67:25">&lt;</operator> <literal type="number" pos:start="67:27" pos:end="67:27">0</literal></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:22"><block_content pos:start="69:17" pos:end="69:22">

                <break pos:start="69:17" pos:end="69:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:43"><expr pos:start="71:13" pos:end="71:42"><name pos:start="71:13" pos:end="71:20">next_avc</name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:32">buf_index</name> <operator pos:start="71:34" pos:end="71:34">+</operator> <name pos:start="71:36" pos:end="71:42">nalsize</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="73:11" pos:end="85:9">else <block pos:start="73:16" pos:end="85:9">{<block_content pos:start="75:13" pos:end="83:25">

            <expr_stmt pos:start="75:13" pos:end="75:76"><expr pos:start="75:13" pos:end="75:75"><name pos:start="75:13" pos:end="75:21">buf_index</name> <operator pos:start="75:23" pos:end="75:23">=</operator> <call pos:start="75:25" pos:end="75:75"><name pos:start="75:25" pos:end="75:39">find_start_code</name><argument_list pos:start="75:40" pos:end="75:75">(<argument pos:start="75:41" pos:end="75:43"><expr pos:start="75:41" pos:end="75:43"><name pos:start="75:41" pos:end="75:43">buf</name></expr></argument>, <argument pos:start="75:46" pos:end="75:53"><expr pos:start="75:46" pos:end="75:53"><name pos:start="75:46" pos:end="75:53">buf_size</name></expr></argument>, <argument pos:start="75:56" pos:end="75:64"><expr pos:start="75:56" pos:end="75:64"><name pos:start="75:56" pos:end="75:64">buf_index</name></expr></argument>, <argument pos:start="75:67" pos:end="75:74"><expr pos:start="75:67" pos:end="75:74"><name pos:start="75:67" pos:end="75:74">next_avc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="77:13" pos:end="79:22"><if pos:start="77:13" pos:end="79:22">if <condition pos:start="77:16" pos:end="77:38">(<expr pos:start="77:17" pos:end="77:37"><name pos:start="77:17" pos:end="77:25">buf_index</name> <operator pos:start="77:27" pos:end="77:28">&gt;=</operator> <name pos:start="77:30" pos:end="77:37">buf_size</name></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:22"><block_content pos:start="79:17" pos:end="79:22">

                <break pos:start="79:17" pos:end="79:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="81:13" pos:end="83:25"><if pos:start="81:13" pos:end="83:25">if <condition pos:start="81:16" pos:end="81:38">(<expr pos:start="81:17" pos:end="81:37"><name pos:start="81:17" pos:end="81:25">buf_index</name> <operator pos:start="81:27" pos:end="81:28">&gt;=</operator> <name pos:start="81:30" pos:end="81:37">next_avc</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:25"><block_content pos:start="83:17" pos:end="83:25">

                <continue pos:start="83:17" pos:end="83:25">continue;</continue></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:42"><expr pos:start="87:9" pos:end="87:41"><name pos:start="87:9" pos:end="87:18">src_length</name> <operator pos:start="87:20" pos:end="87:20">=</operator> <name pos:start="87:22" pos:end="87:29">next_avc</name> <operator pos:start="87:31" pos:end="87:31">-</operator> <name pos:start="87:33" pos:end="87:41">buf_index</name></expr>;</expr_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:31"><expr pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:13">state</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <name pos:start="91:17" pos:end="91:30"><name pos:start="91:17" pos:end="91:19">buf</name><index pos:start="91:20" pos:end="91:30">[<expr pos:start="91:21" pos:end="91:29"><name pos:start="91:21" pos:end="91:29">buf_index</name></expr>]</index></name></expr>;</expr_stmt>

        <switch pos:start="93:9" pos:end="123:9">switch <condition pos:start="93:16" pos:end="93:29">(<expr pos:start="93:17" pos:end="93:28"><name pos:start="93:17" pos:end="93:21">state</name> <operator pos:start="93:23" pos:end="93:23">&amp;</operator> <literal type="number" pos:start="93:25" pos:end="93:28">0x1f</literal></expr>)</condition> <block pos:start="93:31" pos:end="123:9">{<block_content pos:start="95:9" pos:end="121:18">

        <case pos:start="95:9" pos:end="95:28">case <expr pos:start="95:14" pos:end="95:27"><name pos:start="95:14" pos:end="95:27">H264_NAL_SLICE</name></expr>:</case>

        <case pos:start="97:9" pos:end="97:32">case <expr pos:start="97:14" pos:end="97:31"><name pos:start="97:14" pos:end="97:31">H264_NAL_IDR_SLICE</name></expr>:</case>

            <comment type="line" pos:start="99:13" pos:end="99:71">// Do not walk the whole buffer just to decode slice header</comment>

            <if_stmt pos:start="101:13" pos:end="119:13"><if pos:start="101:13" pos:end="111:13">if <condition pos:start="101:16" pos:end="101:82">(<expr pos:start="101:17" pos:end="101:81"><operator pos:start="101:17" pos:end="101:17">(</operator><name pos:start="101:18" pos:end="101:22">state</name> <operator pos:start="101:24" pos:end="101:24">&amp;</operator> <literal type="number" pos:start="101:26" pos:end="101:29">0x1f</literal><operator pos:start="101:30" pos:end="101:30">)</operator> <operator pos:start="101:32" pos:end="101:33">==</operator> <name pos:start="101:35" pos:end="101:52">H264_NAL_IDR_SLICE</name> <operator pos:start="101:54" pos:end="101:55">||</operator> <operator pos:start="101:57" pos:end="101:57">(</operator><operator pos:start="101:58" pos:end="101:58">(</operator><name pos:start="101:59" pos:end="101:63">state</name> <operator pos:start="101:65" pos:end="101:66">&gt;&gt;</operator> <literal type="number" pos:start="101:68" pos:end="101:68">5</literal><operator pos:start="101:69" pos:end="101:69">)</operator> <operator pos:start="101:71" pos:end="101:71">&amp;</operator> <literal type="number" pos:start="101:73" pos:end="101:75">0x3</literal><operator pos:start="101:76" pos:end="101:76">)</operator> <operator pos:start="101:78" pos:end="101:79">==</operator> <literal type="number" pos:start="101:81" pos:end="101:81">0</literal></expr>)</condition> <block pos:start="101:84" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:36">

                <comment type="block" pos:start="103:17" pos:end="105:86">/* IDR or disposable slice

                 * No need to decode many bytes because MMCOs shall not be present. */</comment>

                <if_stmt pos:start="107:17" pos:end="109:36"><if pos:start="107:17" pos:end="109:36">if <condition pos:start="107:20" pos:end="107:36">(<expr pos:start="107:21" pos:end="107:35"><name pos:start="107:21" pos:end="107:30">src_length</name> <operator pos:start="107:32" pos:end="107:32">&gt;</operator> <literal type="number" pos:start="107:34" pos:end="107:35">60</literal></expr>)</condition><block type="pseudo" pos:start="109:21" pos:end="109:36"><block_content pos:start="109:21" pos:end="109:36">

                    <expr_stmt pos:start="109:21" pos:end="109:36"><expr pos:start="109:21" pos:end="109:35"><name pos:start="109:21" pos:end="109:30">src_length</name> <operator pos:start="109:32" pos:end="109:32">=</operator> <literal type="number" pos:start="109:34" pos:end="109:35">60</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="111:15" pos:end="119:13">else <block pos:start="111:20" pos:end="119:13">{<block_content pos:start="115:17" pos:end="117:38">

                <comment type="block" pos:start="113:17" pos:end="113:43">/* To decode up to MMCOs */</comment>

                <if_stmt pos:start="115:17" pos:end="117:38"><if pos:start="115:17" pos:end="117:38">if <condition pos:start="115:20" pos:end="115:38">(<expr pos:start="115:21" pos:end="115:37"><name pos:start="115:21" pos:end="115:30">src_length</name> <operator pos:start="115:32" pos:end="115:32">&gt;</operator> <literal type="number" pos:start="115:34" pos:end="115:37">1000</literal></expr>)</condition><block type="pseudo" pos:start="117:21" pos:end="117:38"><block_content pos:start="117:21" pos:end="117:38">

                    <expr_stmt pos:start="117:21" pos:end="117:38"><expr pos:start="117:21" pos:end="117:37"><name pos:start="117:21" pos:end="117:30">src_length</name> <operator pos:start="117:32" pos:end="117:32">=</operator> <literal type="number" pos:start="117:34" pos:end="117:37">1000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="125:9" pos:end="125:79"><expr pos:start="125:9" pos:end="125:78"><name pos:start="125:9" pos:end="125:16">consumed</name> <operator pos:start="125:18" pos:end="125:18">=</operator> <call pos:start="125:20" pos:end="125:78"><name pos:start="125:20" pos:end="125:40">ff_h2645_extract_rbsp</name><argument_list pos:start="125:41" pos:end="125:78">(<argument pos:start="125:42" pos:end="125:56"><expr pos:start="125:42" pos:end="125:56"><name pos:start="125:42" pos:end="125:44">buf</name> <operator pos:start="125:46" pos:end="125:46">+</operator> <name pos:start="125:48" pos:end="125:56">buf_index</name></expr></argument>, <argument pos:start="125:59" pos:end="125:68"><expr pos:start="125:59" pos:end="125:68"><name pos:start="125:59" pos:end="125:68">src_length</name></expr></argument>, <argument pos:start="125:71" pos:end="125:74"><expr pos:start="125:71" pos:end="125:74"><operator pos:start="125:71" pos:end="125:71">&amp;</operator><name pos:start="125:72" pos:end="125:74">nal</name></expr></argument>, <argument pos:start="125:77" pos:end="125:77"><expr pos:start="125:77" pos:end="125:77"><literal type="number" pos:start="125:77" pos:end="125:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="129:18"><if pos:start="127:9" pos:end="129:18">if <condition pos:start="127:12" pos:end="127:25">(<expr pos:start="127:13" pos:end="127:24"><name pos:start="127:13" pos:end="127:20">consumed</name> <operator pos:start="127:22" pos:end="127:22">&lt;</operator> <literal type="number" pos:start="127:24" pos:end="127:24">0</literal></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:18"><block_content pos:start="129:13" pos:end="129:18">

            <break pos:start="129:13" pos:end="129:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:30"><expr pos:start="133:9" pos:end="133:29"><name pos:start="133:9" pos:end="133:17">buf_index</name> <operator pos:start="133:19" pos:end="133:20">+=</operator> <name pos:start="133:22" pos:end="133:29">consumed</name></expr>;</expr_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:58"><expr pos:start="137:9" pos:end="137:57"><name pos:start="137:9" pos:end="137:11">ret</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <call pos:start="137:15" pos:end="137:57"><name pos:start="137:15" pos:end="137:28">init_get_bits8</name><argument_list pos:start="137:29" pos:end="137:57">(<argument pos:start="137:30" pos:end="137:36"><expr pos:start="137:30" pos:end="137:36"><operator pos:start="137:30" pos:end="137:30">&amp;</operator><name pos:start="137:31" pos:end="137:36"><name pos:start="137:31" pos:end="137:33">nal</name><operator pos:start="137:34" pos:end="137:34">.</operator><name pos:start="137:35" pos:end="137:36">gb</name></name></expr></argument>, <argument pos:start="137:39" pos:end="137:46"><expr pos:start="137:39" pos:end="137:46"><name pos:start="137:39" pos:end="137:46"><name pos:start="137:39" pos:end="137:41">nal</name><operator pos:start="137:42" pos:end="137:42">.</operator><name pos:start="137:43" pos:end="137:46">data</name></name></expr></argument>, <argument pos:start="137:49" pos:end="137:56"><expr pos:start="137:49" pos:end="137:56"><name pos:start="137:49" pos:end="137:56"><name pos:start="137:49" pos:end="137:51">nal</name><operator pos:start="137:52" pos:end="137:52">.</operator><name pos:start="137:53" pos:end="137:56">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="141:22"><if pos:start="139:9" pos:end="141:22">if <condition pos:start="139:12" pos:end="139:20">(<expr pos:start="139:13" pos:end="139:19"><name pos:start="139:13" pos:end="139:15">ret</name> <operator pos:start="139:17" pos:end="139:17">&lt;</operator> <literal type="number" pos:start="139:19" pos:end="139:19">0</literal></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:22"><block_content pos:start="141:13" pos:end="141:22">

            <goto pos:start="141:13" pos:end="141:22">goto <name pos:start="141:18" pos:end="141:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:27"><expr pos:start="143:9" pos:end="143:26"><call pos:start="143:9" pos:end="143:26"><name pos:start="143:9" pos:end="143:17">get_bits1</name><argument_list pos:start="143:18" pos:end="143:26">(<argument pos:start="143:19" pos:end="143:25"><expr pos:start="143:19" pos:end="143:25"><operator pos:start="143:19" pos:end="143:19">&amp;</operator><name pos:start="143:20" pos:end="143:25"><name pos:start="143:20" pos:end="143:22">nal</name><operator pos:start="143:23" pos:end="143:23">.</operator><name pos:start="143:24" pos:end="143:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:43"><expr pos:start="145:9" pos:end="145:42"><name pos:start="145:9" pos:end="145:19"><name pos:start="145:9" pos:end="145:11">nal</name><operator pos:start="145:12" pos:end="145:12">.</operator><name pos:start="145:13" pos:end="145:19">ref_idc</name></name> <operator pos:start="145:21" pos:end="145:21">=</operator> <call pos:start="145:23" pos:end="145:42"><name pos:start="145:23" pos:end="145:30">get_bits</name><argument_list pos:start="145:31" pos:end="145:42">(<argument pos:start="145:32" pos:end="145:38"><expr pos:start="145:32" pos:end="145:38"><operator pos:start="145:32" pos:end="145:32">&amp;</operator><name pos:start="145:33" pos:end="145:38"><name pos:start="145:33" pos:end="145:35">nal</name><operator pos:start="145:36" pos:end="145:36">.</operator><name pos:start="145:37" pos:end="145:38">gb</name></name></expr></argument>, <argument pos:start="145:41" pos:end="145:41"><expr pos:start="145:41" pos:end="145:41"><literal type="number" pos:start="145:41" pos:end="145:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:43"><expr pos:start="147:9" pos:end="147:42"><name pos:start="147:9" pos:end="147:16"><name pos:start="147:9" pos:end="147:11">nal</name><operator pos:start="147:12" pos:end="147:12">.</operator><name pos:start="147:13" pos:end="147:16">type</name></name>    <operator pos:start="147:21" pos:end="147:21">=</operator> <call pos:start="147:23" pos:end="147:42"><name pos:start="147:23" pos:end="147:30">get_bits</name><argument_list pos:start="147:31" pos:end="147:42">(<argument pos:start="147:32" pos:end="147:38"><expr pos:start="147:32" pos:end="147:38"><operator pos:start="147:32" pos:end="147:32">&amp;</operator><name pos:start="147:33" pos:end="147:38"><name pos:start="147:33" pos:end="147:35">nal</name><operator pos:start="147:36" pos:end="147:36">.</operator><name pos:start="147:37" pos:end="147:38">gb</name></name></expr></argument>, <argument pos:start="147:41" pos:end="147:41"><expr pos:start="147:41" pos:end="147:41"><literal type="number" pos:start="147:41" pos:end="147:41">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="151:9" pos:end="617:9">switch <condition pos:start="151:16" pos:end="151:25">(<expr pos:start="151:17" pos:end="151:24"><name pos:start="151:17" pos:end="151:24"><name pos:start="151:17" pos:end="151:19">nal</name><operator pos:start="151:20" pos:end="151:20">.</operator><name pos:start="151:21" pos:end="151:24">type</name></name></expr>)</condition> <block pos:start="151:27" pos:end="617:9">{<block_content pos:start="153:9" pos:end="615:21">

        <case pos:start="153:9" pos:end="153:26">case <expr pos:start="153:14" pos:end="153:25"><name pos:start="153:14" pos:end="153:25">H264_NAL_SPS</name></expr>:</case>

            <expr_stmt pos:start="155:13" pos:end="155:72"><expr pos:start="155:13" pos:end="155:71"><call pos:start="155:13" pos:end="155:71"><name pos:start="155:13" pos:end="155:44">ff_h264_decode_seq_parameter_set</name><argument_list pos:start="155:45" pos:end="155:71">(<argument pos:start="155:46" pos:end="155:52"><expr pos:start="155:46" pos:end="155:52"><operator pos:start="155:46" pos:end="155:46">&amp;</operator><name pos:start="155:47" pos:end="155:52"><name pos:start="155:47" pos:end="155:49">nal</name><operator pos:start="155:50" pos:end="155:50">.</operator><name pos:start="155:51" pos:end="155:52">gb</name></name></expr></argument>, <argument pos:start="155:55" pos:end="155:59"><expr pos:start="155:55" pos:end="155:59"><name pos:start="155:55" pos:end="155:59">avctx</name></expr></argument>, <argument pos:start="155:62" pos:end="155:67"><expr pos:start="155:62" pos:end="155:67"><operator pos:start="155:62" pos:end="155:62">&amp;</operator><name pos:start="155:63" pos:end="155:67"><name pos:start="155:63" pos:end="155:63">p</name><operator pos:start="155:64" pos:end="155:65">-&gt;</operator><name pos:start="155:66" pos:end="155:67">ps</name></name></expr></argument>, <argument pos:start="155:70" pos:end="155:70"><expr pos:start="155:70" pos:end="155:70"><literal type="number" pos:start="155:70" pos:end="155:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="157:13" pos:end="157:18">break;</break>

        <case pos:start="159:9" pos:end="159:26">case <expr pos:start="159:14" pos:end="159:25"><name pos:start="159:14" pos:end="159:25">H264_NAL_PPS</name></expr>:</case>

            <expr_stmt pos:start="161:13" pos:end="163:64"><expr pos:start="161:13" pos:end="163:63"><call pos:start="161:13" pos:end="163:63"><name pos:start="161:13" pos:end="161:48">ff_h264_decode_picture_parameter_set</name><argument_list pos:start="161:49" pos:end="163:63">(<argument pos:start="161:50" pos:end="161:56"><expr pos:start="161:50" pos:end="161:56"><operator pos:start="161:50" pos:end="161:50">&amp;</operator><name pos:start="161:51" pos:end="161:56"><name pos:start="161:51" pos:end="161:53">nal</name><operator pos:start="161:54" pos:end="161:54">.</operator><name pos:start="161:55" pos:end="161:56">gb</name></name></expr></argument>, <argument pos:start="161:59" pos:end="161:63"><expr pos:start="161:59" pos:end="161:63"><name pos:start="161:59" pos:end="161:63">avctx</name></expr></argument>, <argument pos:start="161:66" pos:end="161:71"><expr pos:start="161:66" pos:end="161:71"><operator pos:start="161:66" pos:end="161:66">&amp;</operator><name pos:start="161:67" pos:end="161:71"><name pos:start="161:67" pos:end="161:67">p</name><operator pos:start="161:68" pos:end="161:69">-&gt;</operator><name pos:start="161:70" pos:end="161:71">ps</name></name></expr></argument>,

                                                 <argument pos:start="163:50" pos:end="163:62"><expr pos:start="163:50" pos:end="163:62"><name pos:start="163:50" pos:end="163:62"><name pos:start="163:50" pos:end="163:52">nal</name><operator pos:start="163:53" pos:end="163:53">.</operator><name pos:start="163:54" pos:end="163:62">size_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="165:13" pos:end="165:18">break;</break>

        <case pos:start="167:9" pos:end="167:26">case <expr pos:start="167:14" pos:end="167:25"><name pos:start="167:14" pos:end="167:25">H264_NAL_SEI</name></expr>:</case>

            <expr_stmt pos:start="169:13" pos:end="169:64"><expr pos:start="169:13" pos:end="169:63"><call pos:start="169:13" pos:end="169:63"><name pos:start="169:13" pos:end="169:30">ff_h264_sei_decode</name><argument_list pos:start="169:31" pos:end="169:63">(<argument pos:start="169:32" pos:end="169:38"><expr pos:start="169:32" pos:end="169:38"><operator pos:start="169:32" pos:end="169:32">&amp;</operator><name pos:start="169:33" pos:end="169:38"><name pos:start="169:33" pos:end="169:33">p</name><operator pos:start="169:34" pos:end="169:35">-&gt;</operator><name pos:start="169:36" pos:end="169:38">sei</name></name></expr></argument>, <argument pos:start="169:41" pos:end="169:47"><expr pos:start="169:41" pos:end="169:47"><operator pos:start="169:41" pos:end="169:41">&amp;</operator><name pos:start="169:42" pos:end="169:47"><name pos:start="169:42" pos:end="169:44">nal</name><operator pos:start="169:45" pos:end="169:45">.</operator><name pos:start="169:46" pos:end="169:47">gb</name></name></expr></argument>, <argument pos:start="169:50" pos:end="169:55"><expr pos:start="169:50" pos:end="169:55"><operator pos:start="169:50" pos:end="169:50">&amp;</operator><name pos:start="169:51" pos:end="169:55"><name pos:start="169:51" pos:end="169:51">p</name><operator pos:start="169:52" pos:end="169:53">-&gt;</operator><name pos:start="169:54" pos:end="169:55">ps</name></name></expr></argument>, <argument pos:start="169:58" pos:end="169:62"><expr pos:start="169:58" pos:end="169:62"><name pos:start="169:58" pos:end="169:62">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="171:13" pos:end="171:18">break;</break>

        <case pos:start="173:9" pos:end="173:32">case <expr pos:start="173:14" pos:end="173:31"><name pos:start="173:14" pos:end="173:31">H264_NAL_IDR_SLICE</name></expr>:</case>

            <expr_stmt pos:start="175:13" pos:end="175:29"><expr pos:start="175:13" pos:end="175:28"><name pos:start="175:13" pos:end="175:24"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:24">key_frame</name></name> <operator pos:start="175:26" pos:end="175:26">=</operator> <literal type="number" pos:start="175:28" pos:end="175:28">1</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="179:13" pos:end="179:45"><expr pos:start="179:13" pos:end="179:44"><name pos:start="179:13" pos:end="179:33"><name pos:start="179:13" pos:end="179:13">p</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:18">poc</name><operator pos:start="179:19" pos:end="179:19">.</operator><name pos:start="179:20" pos:end="179:33">prev_frame_num</name></name>        <operator pos:start="179:42" pos:end="179:42">=</operator> <literal type="number" pos:start="179:44" pos:end="179:44">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:45"><expr pos:start="181:13" pos:end="181:44"><name pos:start="181:13" pos:end="181:40"><name pos:start="181:13" pos:end="181:13">p</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:18">poc</name><operator pos:start="181:19" pos:end="181:19">.</operator><name pos:start="181:20" pos:end="181:40">prev_frame_num_offset</name></name> <operator pos:start="181:42" pos:end="181:42">=</operator> <literal type="number" pos:start="181:44" pos:end="181:44">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="185:45"><expr pos:start="183:13" pos:end="185:44"><name pos:start="183:13" pos:end="183:31"><name pos:start="183:13" pos:end="183:13">p</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:18">poc</name><operator pos:start="183:19" pos:end="183:19">.</operator><name pos:start="183:20" pos:end="183:31">prev_poc_msb</name></name>          <operator pos:start="183:42" pos:end="183:42">=</operator>

            <name pos:start="185:13" pos:end="185:31"><name pos:start="185:13" pos:end="185:13">p</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:18">poc</name><operator pos:start="185:19" pos:end="185:19">.</operator><name pos:start="185:20" pos:end="185:31">prev_poc_lsb</name></name>          <operator pos:start="185:42" pos:end="185:42">=</operator> <literal type="number" pos:start="185:44" pos:end="185:44">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="187:9" pos:end="187:26">/* fall through */</comment>

        <case pos:start="189:9" pos:end="189:28">case <expr pos:start="189:14" pos:end="189:27"><name pos:start="189:14" pos:end="189:27">H264_NAL_SLICE</name></expr>:</case>

            <expr_stmt pos:start="191:13" pos:end="191:40"><expr pos:start="191:13" pos:end="191:39"><call pos:start="191:13" pos:end="191:39"><name pos:start="191:13" pos:end="191:30">get_ue_golomb_long</name><argument_list pos:start="191:31" pos:end="191:39">(<argument pos:start="191:32" pos:end="191:38"><expr pos:start="191:32" pos:end="191:38"><operator pos:start="191:32" pos:end="191:32">&amp;</operator><name pos:start="191:33" pos:end="191:38"><name pos:start="191:33" pos:end="191:35">nal</name><operator pos:start="191:36" pos:end="191:36">.</operator><name pos:start="191:37" pos:end="191:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="191:43" pos:end="191:67">// skip first_mb_in_slice</comment>

            <expr_stmt pos:start="193:13" pos:end="193:53"><expr pos:start="193:13" pos:end="193:52"><name pos:start="193:13" pos:end="193:22">slice_type</name>   <operator pos:start="193:26" pos:end="193:26">=</operator> <call pos:start="193:28" pos:end="193:52"><name pos:start="193:28" pos:end="193:43">get_ue_golomb_31</name><argument_list pos:start="193:44" pos:end="193:52">(<argument pos:start="193:45" pos:end="193:51"><expr pos:start="193:45" pos:end="193:51"><operator pos:start="193:45" pos:end="193:45">&amp;</operator><name pos:start="193:46" pos:end="193:51"><name pos:start="193:46" pos:end="193:48">nal</name><operator pos:start="193:49" pos:end="193:49">.</operator><name pos:start="193:50" pos:end="193:51">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:71"><expr pos:start="195:13" pos:end="195:70"><name pos:start="195:13" pos:end="195:24"><name pos:start="195:13" pos:end="195:13">s</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:24">pict_type</name></name> <operator pos:start="195:26" pos:end="195:26">=</operator> <name pos:start="195:28" pos:end="195:70"><name pos:start="195:28" pos:end="195:54">ff_h264_golomb_to_pict_type</name><index pos:start="195:55" pos:end="195:70">[<expr pos:start="195:56" pos:end="195:69"><name pos:start="195:56" pos:end="195:65">slice_type</name> <operator pos:start="195:67" pos:end="195:67">%</operator> <literal type="number" pos:start="195:69" pos:end="195:69">5</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="197:13" pos:end="203:13"><if pos:start="197:13" pos:end="203:13">if <condition pos:start="197:16" pos:end="197:62">(<expr pos:start="197:17" pos:end="197:61"><name pos:start="197:17" pos:end="197:56"><name pos:start="197:17" pos:end="197:17">p</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:22">sei</name><operator pos:start="197:23" pos:end="197:23">.</operator><name pos:start="197:24" pos:end="197:37">recovery_point</name><operator pos:start="197:38" pos:end="197:38">.</operator><name pos:start="197:39" pos:end="197:56">recovery_frame_cnt</name></name> <operator pos:start="197:58" pos:end="197:59">&gt;=</operator> <literal type="number" pos:start="197:61" pos:end="197:61">0</literal></expr>)</condition> <block pos:start="197:64" pos:end="203:13">{<block_content pos:start="201:17" pos:end="201:33">

                <comment type="block" pos:start="199:17" pos:end="199:64">/* key frame, since recovery_frame_cnt is set */</comment>

                <expr_stmt pos:start="201:17" pos:end="201:33"><expr pos:start="201:17" pos:end="201:32"><name pos:start="201:17" pos:end="201:28"><name pos:start="201:17" pos:end="201:17">s</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:28">key_frame</name></name> <operator pos:start="201:30" pos:end="201:30">=</operator> <literal type="number" pos:start="201:32" pos:end="201:32">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:44"><expr pos:start="205:13" pos:end="205:43"><name pos:start="205:13" pos:end="205:18">pps_id</name> <operator pos:start="205:20" pos:end="205:20">=</operator> <call pos:start="205:22" pos:end="205:43"><name pos:start="205:22" pos:end="205:34">get_ue_golomb</name><argument_list pos:start="205:35" pos:end="205:43">(<argument pos:start="205:36" pos:end="205:42"><expr pos:start="205:36" pos:end="205:42"><operator pos:start="205:36" pos:end="205:36">&amp;</operator><name pos:start="205:37" pos:end="205:42"><name pos:start="205:37" pos:end="205:39">nal</name><operator pos:start="205:40" pos:end="205:40">.</operator><name pos:start="205:41" pos:end="205:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="207:13" pos:end="215:13"><if pos:start="207:13" pos:end="215:13">if <condition pos:start="207:16" pos:end="207:40">(<expr pos:start="207:17" pos:end="207:39"><name pos:start="207:17" pos:end="207:22">pps_id</name> <operator pos:start="207:24" pos:end="207:25">&gt;=</operator> <name pos:start="207:27" pos:end="207:39">MAX_PPS_COUNT</name></expr>)</condition> <block pos:start="207:42" pos:end="215:13">{<block_content pos:start="209:17" pos:end="213:26">

                <expr_stmt pos:start="209:17" pos:end="211:59"><expr pos:start="209:17" pos:end="211:58"><call pos:start="209:17" pos:end="211:58"><name pos:start="209:17" pos:end="209:22">av_log</name><argument_list pos:start="209:23" pos:end="211:58">(<argument pos:start="209:24" pos:end="209:28"><expr pos:start="209:24" pos:end="209:28"><name pos:start="209:24" pos:end="209:28">avctx</name></expr></argument>, <argument pos:start="209:31" pos:end="209:42"><expr pos:start="209:31" pos:end="209:42"><name pos:start="209:31" pos:end="209:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="211:24" pos:end="211:49"><expr pos:start="211:24" pos:end="211:49"><literal type="string" pos:start="211:24" pos:end="211:49">"pps_id %u out of range\n"</literal></expr></argument>, <argument pos:start="211:52" pos:end="211:57"><expr pos:start="211:52" pos:end="211:57"><name pos:start="211:52" pos:end="211:57">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="213:17" pos:end="213:26">goto <name pos:start="213:22" pos:end="213:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="217:13" pos:end="225:13"><if pos:start="217:13" pos:end="225:13">if <condition pos:start="217:16" pos:end="217:40">(<expr pos:start="217:17" pos:end="217:39"><operator pos:start="217:17" pos:end="217:17">!</operator><name pos:start="217:18" pos:end="217:39"><name pos:start="217:18" pos:end="217:18">p</name><operator pos:start="217:19" pos:end="217:20">-&gt;</operator><name pos:start="217:21" pos:end="217:22">ps</name><operator pos:start="217:23" pos:end="217:23">.</operator><name pos:start="217:24" pos:end="217:31">pps_list</name><index pos:start="217:32" pos:end="217:39">[<expr pos:start="217:33" pos:end="217:38"><name pos:start="217:33" pos:end="217:38">pps_id</name></expr>]</index></name></expr>)</condition> <block pos:start="217:42" pos:end="225:13">{<block_content pos:start="219:17" pos:end="223:26">

                <expr_stmt pos:start="219:17" pos:end="221:67"><expr pos:start="219:17" pos:end="221:66"><call pos:start="219:17" pos:end="221:66"><name pos:start="219:17" pos:end="219:22">av_log</name><argument_list pos:start="219:23" pos:end="221:66">(<argument pos:start="219:24" pos:end="219:28"><expr pos:start="219:24" pos:end="219:28"><name pos:start="219:24" pos:end="219:28">avctx</name></expr></argument>, <argument pos:start="219:31" pos:end="219:42"><expr pos:start="219:31" pos:end="219:42"><name pos:start="219:31" pos:end="219:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="221:24" pos:end="221:57"><expr pos:start="221:24" pos:end="221:57"><literal type="string" pos:start="221:24" pos:end="221:57">"non-existing PPS %u referenced\n"</literal></expr></argument>, <argument pos:start="221:60" pos:end="221:65"><expr pos:start="221:60" pos:end="221:65"><name pos:start="221:60" pos:end="221:65">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="223:17" pos:end="223:26">goto <name pos:start="223:22" pos:end="223:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="229:13" pos:end="229:44"><expr pos:start="229:13" pos:end="229:43"><call pos:start="229:13" pos:end="229:43"><name pos:start="229:13" pos:end="229:27">av_buffer_unref</name><argument_list pos:start="229:28" pos:end="229:43">(<argument pos:start="229:29" pos:end="229:42"><expr pos:start="229:29" pos:end="229:42"><operator pos:start="229:29" pos:end="229:29">&amp;</operator><name pos:start="229:30" pos:end="229:42"><name pos:start="229:30" pos:end="229:30">p</name><operator pos:start="229:31" pos:end="229:32">-&gt;</operator><name pos:start="229:33" pos:end="229:34">ps</name><operator pos:start="229:35" pos:end="229:35">.</operator><name pos:start="229:36" pos:end="229:42">pps_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:44"><expr pos:start="231:13" pos:end="231:43"><call pos:start="231:13" pos:end="231:43"><name pos:start="231:13" pos:end="231:27">av_buffer_unref</name><argument_list pos:start="231:28" pos:end="231:43">(<argument pos:start="231:29" pos:end="231:42"><expr pos:start="231:29" pos:end="231:42"><operator pos:start="231:29" pos:end="231:29">&amp;</operator><name pos:start="231:30" pos:end="231:42"><name pos:start="231:30" pos:end="231:30">p</name><operator pos:start="231:31" pos:end="231:32">-&gt;</operator><name pos:start="231:33" pos:end="231:34">ps</name><operator pos:start="231:35" pos:end="231:35">.</operator><name pos:start="231:36" pos:end="231:42">sps_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:29"><expr pos:start="233:13" pos:end="233:28"><name pos:start="233:13" pos:end="233:21"><name pos:start="233:13" pos:end="233:13">p</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:17">ps</name><operator pos:start="233:18" pos:end="233:18">.</operator><name pos:start="233:19" pos:end="233:21">pps</name></name> <operator pos:start="233:23" pos:end="233:23">=</operator> <name pos:start="233:25" pos:end="233:28">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:29"><expr pos:start="235:13" pos:end="235:28"><name pos:start="235:13" pos:end="235:21"><name pos:start="235:13" pos:end="235:13">p</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:17">ps</name><operator pos:start="235:18" pos:end="235:18">.</operator><name pos:start="235:19" pos:end="235:21">sps</name></name> <operator pos:start="235:23" pos:end="235:23">=</operator> <name pos:start="235:25" pos:end="235:28">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:66"><expr pos:start="237:13" pos:end="237:65"><name pos:start="237:13" pos:end="237:25"><name pos:start="237:13" pos:end="237:13">p</name><operator pos:start="237:14" pos:end="237:15">-&gt;</operator><name pos:start="237:16" pos:end="237:17">ps</name><operator pos:start="237:18" pos:end="237:18">.</operator><name pos:start="237:19" pos:end="237:25">pps_ref</name></name> <operator pos:start="237:27" pos:end="237:27">=</operator> <call pos:start="237:29" pos:end="237:65"><name pos:start="237:29" pos:end="237:41">av_buffer_ref</name><argument_list pos:start="237:42" pos:end="237:65">(<argument pos:start="237:43" pos:end="237:64"><expr pos:start="237:43" pos:end="237:64"><name pos:start="237:43" pos:end="237:64"><name pos:start="237:43" pos:end="237:43">p</name><operator pos:start="237:44" pos:end="237:45">-&gt;</operator><name pos:start="237:46" pos:end="237:47">ps</name><operator pos:start="237:48" pos:end="237:48">.</operator><name pos:start="237:49" pos:end="237:56">pps_list</name><index pos:start="237:57" pos:end="237:64">[<expr pos:start="237:58" pos:end="237:63"><name pos:start="237:58" pos:end="237:63">pps_id</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="239:13" pos:end="241:26"><if pos:start="239:13" pos:end="241:26">if <condition pos:start="239:16" pos:end="239:31">(<expr pos:start="239:17" pos:end="239:30"><operator pos:start="239:17" pos:end="239:17">!</operator><name pos:start="239:18" pos:end="239:30"><name pos:start="239:18" pos:end="239:18">p</name><operator pos:start="239:19" pos:end="239:20">-&gt;</operator><name pos:start="239:21" pos:end="239:22">ps</name><operator pos:start="239:23" pos:end="239:23">.</operator><name pos:start="239:24" pos:end="239:30">pps_ref</name></name></expr>)</condition><block type="pseudo" pos:start="241:17" pos:end="241:26"><block_content pos:start="241:17" pos:end="241:26">

                <goto pos:start="241:17" pos:end="241:26">goto <name pos:start="241:22" pos:end="241:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:56"><expr pos:start="243:13" pos:end="243:55"><name pos:start="243:13" pos:end="243:21"><name pos:start="243:13" pos:end="243:13">p</name><operator pos:start="243:14" pos:end="243:15">-&gt;</operator><name pos:start="243:16" pos:end="243:17">ps</name><operator pos:start="243:18" pos:end="243:18">.</operator><name pos:start="243:19" pos:end="243:21">pps</name></name> <operator pos:start="243:23" pos:end="243:23">=</operator> <operator pos:start="243:25" pos:end="243:25">(</operator><specifier pos:start="243:26" pos:end="243:30">const</specifier> <name pos:start="243:32" pos:end="243:34">PPS</name><operator pos:start="243:35" pos:end="243:35">*</operator><operator pos:start="243:36" pos:end="243:36">)</operator><name pos:start="243:37" pos:end="243:55"><name pos:start="243:37" pos:end="243:37">p</name><operator pos:start="243:38" pos:end="243:39">-&gt;</operator><name pos:start="243:40" pos:end="243:41">ps</name><operator pos:start="243:42" pos:end="243:42">.</operator><name pos:start="243:43" pos:end="243:49">pps_ref</name><operator pos:start="243:50" pos:end="243:51">-&gt;</operator><name pos:start="243:52" pos:end="243:55">data</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="247:13" pos:end="255:13"><if pos:start="247:13" pos:end="255:13">if <condition pos:start="247:16" pos:end="247:51">(<expr pos:start="247:17" pos:end="247:50"><operator pos:start="247:17" pos:end="247:17">!</operator><name pos:start="247:18" pos:end="247:50"><name pos:start="247:18" pos:end="247:18">p</name><operator pos:start="247:19" pos:end="247:20">-&gt;</operator><name pos:start="247:21" pos:end="247:22">ps</name><operator pos:start="247:23" pos:end="247:23">.</operator><name pos:start="247:24" pos:end="247:31">sps_list</name><index pos:start="247:32" pos:end="247:50">[<expr pos:start="247:33" pos:end="247:49"><name pos:start="247:33" pos:end="247:49"><name pos:start="247:33" pos:end="247:33">p</name><operator pos:start="247:34" pos:end="247:35">-&gt;</operator><name pos:start="247:36" pos:end="247:37">ps</name><operator pos:start="247:38" pos:end="247:38">.</operator><name pos:start="247:39" pos:end="247:41">pps</name><operator pos:start="247:42" pos:end="247:43">-&gt;</operator><name pos:start="247:44" pos:end="247:49">sps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="247:53" pos:end="255:13">{<block_content pos:start="249:17" pos:end="253:26">

                <expr_stmt pos:start="249:17" pos:end="251:78"><expr pos:start="249:17" pos:end="251:77"><call pos:start="249:17" pos:end="251:77"><name pos:start="249:17" pos:end="249:22">av_log</name><argument_list pos:start="249:23" pos:end="251:77">(<argument pos:start="249:24" pos:end="249:28"><expr pos:start="249:24" pos:end="249:28"><name pos:start="249:24" pos:end="249:28">avctx</name></expr></argument>, <argument pos:start="249:31" pos:end="249:42"><expr pos:start="249:31" pos:end="249:42"><name pos:start="249:31" pos:end="249:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="251:24" pos:end="251:57"><expr pos:start="251:24" pos:end="251:57"><literal type="string" pos:start="251:24" pos:end="251:57">"non-existing SPS %u referenced\n"</literal></expr></argument>, <argument pos:start="251:60" pos:end="251:76"><expr pos:start="251:60" pos:end="251:76"><name pos:start="251:60" pos:end="251:76"><name pos:start="251:60" pos:end="251:60">p</name><operator pos:start="251:61" pos:end="251:62">-&gt;</operator><name pos:start="251:63" pos:end="251:64">ps</name><operator pos:start="251:65" pos:end="251:65">.</operator><name pos:start="251:66" pos:end="251:68">pps</name><operator pos:start="251:69" pos:end="251:70">-&gt;</operator><name pos:start="251:71" pos:end="251:76">sps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="253:17" pos:end="253:26">goto <name pos:start="253:22" pos:end="253:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="259:13" pos:end="259:77"><expr pos:start="259:13" pos:end="259:76"><name pos:start="259:13" pos:end="259:25"><name pos:start="259:13" pos:end="259:13">p</name><operator pos:start="259:14" pos:end="259:15">-&gt;</operator><name pos:start="259:16" pos:end="259:17">ps</name><operator pos:start="259:18" pos:end="259:18">.</operator><name pos:start="259:19" pos:end="259:25">sps_ref</name></name> <operator pos:start="259:27" pos:end="259:27">=</operator> <call pos:start="259:29" pos:end="259:76"><name pos:start="259:29" pos:end="259:41">av_buffer_ref</name><argument_list pos:start="259:42" pos:end="259:76">(<argument pos:start="259:43" pos:end="259:75"><expr pos:start="259:43" pos:end="259:75"><name pos:start="259:43" pos:end="259:75"><name pos:start="259:43" pos:end="259:43">p</name><operator pos:start="259:44" pos:end="259:45">-&gt;</operator><name pos:start="259:46" pos:end="259:47">ps</name><operator pos:start="259:48" pos:end="259:48">.</operator><name pos:start="259:49" pos:end="259:56">sps_list</name><index pos:start="259:57" pos:end="259:75">[<expr pos:start="259:58" pos:end="259:74"><name pos:start="259:58" pos:end="259:74"><name pos:start="259:58" pos:end="259:58">p</name><operator pos:start="259:59" pos:end="259:60">-&gt;</operator><name pos:start="259:61" pos:end="259:62">ps</name><operator pos:start="259:63" pos:end="259:63">.</operator><name pos:start="259:64" pos:end="259:66">pps</name><operator pos:start="259:67" pos:end="259:68">-&gt;</operator><name pos:start="259:69" pos:end="259:74">sps_id</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="261:13" pos:end="263:26"><if pos:start="261:13" pos:end="263:26">if <condition pos:start="261:16" pos:end="261:31">(<expr pos:start="261:17" pos:end="261:30"><operator pos:start="261:17" pos:end="261:17">!</operator><name pos:start="261:18" pos:end="261:30"><name pos:start="261:18" pos:end="261:18">p</name><operator pos:start="261:19" pos:end="261:20">-&gt;</operator><name pos:start="261:21" pos:end="261:22">ps</name><operator pos:start="261:23" pos:end="261:23">.</operator><name pos:start="261:24" pos:end="261:30">sps_ref</name></name></expr>)</condition><block type="pseudo" pos:start="263:17" pos:end="263:26"><block_content pos:start="263:17" pos:end="263:26">

                <goto pos:start="263:17" pos:end="263:26">goto <name pos:start="263:22" pos:end="263:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:56"><expr pos:start="265:13" pos:end="265:55"><name pos:start="265:13" pos:end="265:21"><name pos:start="265:13" pos:end="265:13">p</name><operator pos:start="265:14" pos:end="265:15">-&gt;</operator><name pos:start="265:16" pos:end="265:17">ps</name><operator pos:start="265:18" pos:end="265:18">.</operator><name pos:start="265:19" pos:end="265:21">sps</name></name> <operator pos:start="265:23" pos:end="265:23">=</operator> <operator pos:start="265:25" pos:end="265:25">(</operator><specifier pos:start="265:26" pos:end="265:30">const</specifier> <name pos:start="265:32" pos:end="265:34">SPS</name><operator pos:start="265:35" pos:end="265:35">*</operator><operator pos:start="265:36" pos:end="265:36">)</operator><name pos:start="265:37" pos:end="265:55"><name pos:start="265:37" pos:end="265:37">p</name><operator pos:start="265:38" pos:end="265:39">-&gt;</operator><name pos:start="265:40" pos:end="265:41">ps</name><operator pos:start="265:42" pos:end="265:42">.</operator><name pos:start="265:43" pos:end="265:49">sps_ref</name><operator pos:start="265:50" pos:end="265:51">-&gt;</operator><name pos:start="265:52" pos:end="265:55">data</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="269:13" pos:end="269:28"><expr pos:start="269:13" pos:end="269:27"><name pos:start="269:13" pos:end="269:15">sps</name> <operator pos:start="269:17" pos:end="269:17">=</operator> <name pos:start="269:19" pos:end="269:27"><name pos:start="269:19" pos:end="269:19">p</name><operator pos:start="269:20" pos:end="269:21">-&gt;</operator><name pos:start="269:22" pos:end="269:23">ps</name><operator pos:start="269:24" pos:end="269:24">.</operator><name pos:start="269:25" pos:end="269:27">sps</name></name></expr>;</expr_stmt>



            <comment type="line" pos:start="273:13" pos:end="273:55">// heuristic to detect non marked keyframes</comment>

            <if_stmt pos:start="275:13" pos:end="277:33"><if pos:start="275:13" pos:end="277:33">if <condition pos:start="275:16" pos:end="275:117">(<expr pos:start="275:17" pos:end="275:116"><name pos:start="275:17" pos:end="275:42"><name pos:start="275:17" pos:end="275:17">p</name><operator pos:start="275:18" pos:end="275:19">-&gt;</operator><name pos:start="275:20" pos:end="275:21">ps</name><operator pos:start="275:22" pos:end="275:22">.</operator><name pos:start="275:23" pos:end="275:25">sps</name><operator pos:start="275:26" pos:end="275:27">-&gt;</operator><name pos:start="275:28" pos:end="275:42">ref_frame_count</name></name> <operator pos:start="275:44" pos:end="275:45">&lt;=</operator> <literal type="number" pos:start="275:47" pos:end="275:47">1</literal> <operator pos:start="275:49" pos:end="275:50">&amp;&amp;</operator> <name pos:start="275:52" pos:end="275:74"><name pos:start="275:52" pos:end="275:52">p</name><operator pos:start="275:53" pos:end="275:54">-&gt;</operator><name pos:start="275:55" pos:end="275:56">ps</name><operator pos:start="275:57" pos:end="275:57">.</operator><name pos:start="275:58" pos:end="275:60">pps</name><operator pos:start="275:61" pos:end="275:62">-&gt;</operator><name pos:start="275:63" pos:end="275:71">ref_count</name><index pos:start="275:72" pos:end="275:74">[<expr pos:start="275:73" pos:end="275:73"><literal type="number" pos:start="275:73" pos:end="275:73">0</literal></expr>]</index></name> <operator pos:start="275:76" pos:end="275:77">&lt;=</operator> <literal type="number" pos:start="275:79" pos:end="275:79">1</literal> <operator pos:start="275:81" pos:end="275:82">&amp;&amp;</operator> <name pos:start="275:84" pos:end="275:95"><name pos:start="275:84" pos:end="275:84">s</name><operator pos:start="275:85" pos:end="275:86">-&gt;</operator><name pos:start="275:87" pos:end="275:95">pict_type</name></name> <operator pos:start="275:97" pos:end="275:98">==</operator> <name pos:start="275:100" pos:end="275:116">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="277:17" pos:end="277:33"><block_content pos:start="277:17" pos:end="277:33">

                <expr_stmt pos:start="277:17" pos:end="277:33"><expr pos:start="277:17" pos:end="277:32"><name pos:start="277:17" pos:end="277:28"><name pos:start="277:17" pos:end="277:17">s</name><operator pos:start="277:18" pos:end="277:19">-&gt;</operator><name pos:start="277:20" pos:end="277:28">key_frame</name></name> <operator pos:start="277:30" pos:end="277:30">=</operator> <literal type="number" pos:start="277:32" pos:end="277:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="281:13" pos:end="281:74"><expr pos:start="281:13" pos:end="281:73"><name pos:start="281:13" pos:end="281:28"><name pos:start="281:13" pos:end="281:13">p</name><operator pos:start="281:14" pos:end="281:15">-&gt;</operator><name pos:start="281:16" pos:end="281:18">poc</name><operator pos:start="281:19" pos:end="281:19">.</operator><name pos:start="281:20" pos:end="281:28">frame_num</name></name> <operator pos:start="281:30" pos:end="281:30">=</operator> <call pos:start="281:32" pos:end="281:73"><name pos:start="281:32" pos:end="281:39">get_bits</name><argument_list pos:start="281:40" pos:end="281:73">(<argument pos:start="281:41" pos:end="281:47"><expr pos:start="281:41" pos:end="281:47"><operator pos:start="281:41" pos:end="281:41">&amp;</operator><name pos:start="281:42" pos:end="281:47"><name pos:start="281:42" pos:end="281:44">nal</name><operator pos:start="281:45" pos:end="281:45">.</operator><name pos:start="281:46" pos:end="281:47">gb</name></name></expr></argument>, <argument pos:start="281:50" pos:end="281:72"><expr pos:start="281:50" pos:end="281:72"><name pos:start="281:50" pos:end="281:72"><name pos:start="281:50" pos:end="281:52">sps</name><operator pos:start="281:53" pos:end="281:54">-&gt;</operator><name pos:start="281:55" pos:end="281:72">log2_max_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="285:13" pos:end="285:49"><expr pos:start="285:13" pos:end="285:48"><name pos:start="285:13" pos:end="285:26"><name pos:start="285:13" pos:end="285:13">s</name><operator pos:start="285:14" pos:end="285:15">-&gt;</operator><name pos:start="285:16" pos:end="285:26">coded_width</name></name>  <operator pos:start="285:29" pos:end="285:29">=</operator> <literal type="number" pos:start="285:31" pos:end="285:32">16</literal> <operator pos:start="285:34" pos:end="285:34">*</operator> <name pos:start="285:36" pos:end="285:48"><name pos:start="285:36" pos:end="285:38">sps</name><operator pos:start="285:39" pos:end="285:40">-&gt;</operator><name pos:start="285:41" pos:end="285:48">mb_width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:50"><expr pos:start="287:13" pos:end="287:49"><name pos:start="287:13" pos:end="287:27"><name pos:start="287:13" pos:end="287:13">s</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:27">coded_height</name></name> <operator pos:start="287:29" pos:end="287:29">=</operator> <literal type="number" pos:start="287:31" pos:end="287:32">16</literal> <operator pos:start="287:34" pos:end="287:34">*</operator> <name pos:start="287:36" pos:end="287:49"><name pos:start="287:36" pos:end="287:38">sps</name><operator pos:start="287:39" pos:end="287:40">-&gt;</operator><name pos:start="287:41" pos:end="287:49">mb_height</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="289:83"><expr pos:start="289:13" pos:end="289:82"><name pos:start="289:13" pos:end="289:20"><name pos:start="289:13" pos:end="289:13">s</name><operator pos:start="289:14" pos:end="289:15">-&gt;</operator><name pos:start="289:16" pos:end="289:20">width</name></name>        <operator pos:start="289:29" pos:end="289:29">=</operator> <name pos:start="289:31" pos:end="289:44"><name pos:start="289:31" pos:end="289:31">s</name><operator pos:start="289:32" pos:end="289:33">-&gt;</operator><name pos:start="289:34" pos:end="289:44">coded_width</name></name>  <operator pos:start="289:47" pos:end="289:47">-</operator> <operator pos:start="289:49" pos:end="289:49">(</operator><name pos:start="289:50" pos:end="289:64"><name pos:start="289:50" pos:end="289:52">sps</name><operator pos:start="289:53" pos:end="289:54">-&gt;</operator><name pos:start="289:55" pos:end="289:64">crop_right</name></name> <operator pos:start="289:66" pos:end="289:66">+</operator> <name pos:start="289:68" pos:end="289:81"><name pos:start="289:68" pos:end="289:70">sps</name><operator pos:start="289:71" pos:end="289:72">-&gt;</operator><name pos:start="289:73" pos:end="289:81">crop_left</name></name><operator pos:start="289:82" pos:end="289:82">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:85"><expr pos:start="291:13" pos:end="291:84"><name pos:start="291:13" pos:end="291:21"><name pos:start="291:13" pos:end="291:13">s</name><operator pos:start="291:14" pos:end="291:15">-&gt;</operator><name pos:start="291:16" pos:end="291:21">height</name></name>       <operator pos:start="291:29" pos:end="291:29">=</operator> <name pos:start="291:31" pos:end="291:45"><name pos:start="291:31" pos:end="291:31">s</name><operator pos:start="291:32" pos:end="291:33">-&gt;</operator><name pos:start="291:34" pos:end="291:45">coded_height</name></name> <operator pos:start="291:47" pos:end="291:47">-</operator> <operator pos:start="291:49" pos:end="291:49">(</operator><name pos:start="291:50" pos:end="291:62"><name pos:start="291:50" pos:end="291:52">sps</name><operator pos:start="291:53" pos:end="291:54">-&gt;</operator><name pos:start="291:55" pos:end="291:62">crop_top</name></name>   <operator pos:start="291:66" pos:end="291:66">+</operator> <name pos:start="291:68" pos:end="291:83"><name pos:start="291:68" pos:end="291:70">sps</name><operator pos:start="291:71" pos:end="291:72">-&gt;</operator><name pos:start="291:73" pos:end="291:83">crop_bottom</name></name><operator pos:start="291:84" pos:end="291:84">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="293:13" pos:end="299:13"><if pos:start="293:13" pos:end="299:13">if <condition pos:start="293:16" pos:end="293:48">(<expr pos:start="293:17" pos:end="293:47"><name pos:start="293:17" pos:end="293:24"><name pos:start="293:17" pos:end="293:17">s</name><operator pos:start="293:18" pos:end="293:19">-&gt;</operator><name pos:start="293:20" pos:end="293:24">width</name></name> <operator pos:start="293:26" pos:end="293:27">&lt;=</operator> <literal type="number" pos:start="293:29" pos:end="293:29">0</literal> <operator pos:start="293:31" pos:end="293:32">||</operator> <name pos:start="293:34" pos:end="293:42"><name pos:start="293:34" pos:end="293:34">s</name><operator pos:start="293:35" pos:end="293:36">-&gt;</operator><name pos:start="293:37" pos:end="293:42">height</name></name> <operator pos:start="293:44" pos:end="293:45">&lt;=</operator> <literal type="number" pos:start="293:47" pos:end="293:47">0</literal></expr>)</condition> <block pos:start="293:50" pos:end="299:13">{<block_content pos:start="295:17" pos:end="297:44">

                <expr_stmt pos:start="295:17" pos:end="295:43"><expr pos:start="295:17" pos:end="295:42"><name pos:start="295:17" pos:end="295:24"><name pos:start="295:17" pos:end="295:17">s</name><operator pos:start="295:18" pos:end="295:19">-&gt;</operator><name pos:start="295:20" pos:end="295:24">width</name></name>  <operator pos:start="295:27" pos:end="295:27">=</operator> <name pos:start="295:29" pos:end="295:42"><name pos:start="295:29" pos:end="295:29">s</name><operator pos:start="295:30" pos:end="295:31">-&gt;</operator><name pos:start="295:32" pos:end="295:42">coded_width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="297:17" pos:end="297:44"><expr pos:start="297:17" pos:end="297:43"><name pos:start="297:17" pos:end="297:25"><name pos:start="297:17" pos:end="297:17">s</name><operator pos:start="297:18" pos:end="297:19">-&gt;</operator><name pos:start="297:20" pos:end="297:25">height</name></name> <operator pos:start="297:27" pos:end="297:27">=</operator> <name pos:start="297:29" pos:end="297:43"><name pos:start="297:29" pos:end="297:29">s</name><operator pos:start="297:30" pos:end="297:31">-&gt;</operator><name pos:start="297:32" pos:end="297:43">coded_height</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <switch pos:start="303:13" pos:end="339:13">switch <condition pos:start="303:20" pos:end="303:40">(<expr pos:start="303:21" pos:end="303:39"><name pos:start="303:21" pos:end="303:39"><name pos:start="303:21" pos:end="303:23">sps</name><operator pos:start="303:24" pos:end="303:25">-&gt;</operator><name pos:start="303:26" pos:end="303:39">bit_depth_luma</name></name></expr>)</condition> <block pos:start="303:42" pos:end="339:13">{<block_content pos:start="305:13" pos:end="337:44">

            <case pos:start="305:13" pos:end="305:19">case <expr pos:start="305:18" pos:end="305:18"><literal type="number" pos:start="305:18" pos:end="305:18">9</literal></expr>:</case>

                <if_stmt pos:start="307:17" pos:end="311:86"><if pos:start="307:17" pos:end="307:86">if <condition pos:start="307:20" pos:end="307:48">(<expr pos:start="307:21" pos:end="307:47"><name pos:start="307:21" pos:end="307:42"><name pos:start="307:21" pos:end="307:23">sps</name><operator pos:start="307:24" pos:end="307:25">-&gt;</operator><name pos:start="307:26" pos:end="307:42">chroma_format_idc</name></name> <operator pos:start="307:44" pos:end="307:45">==</operator> <literal type="number" pos:start="307:47" pos:end="307:47">3</literal></expr>)</condition><block type="pseudo" pos:start="307:55" pos:end="307:86"><block_content pos:start="307:55" pos:end="307:86">      <expr_stmt pos:start="307:55" pos:end="307:86"><expr pos:start="307:55" pos:end="307:85"><name pos:start="307:55" pos:end="307:63"><name pos:start="307:55" pos:end="307:55">s</name><operator pos:start="307:56" pos:end="307:57">-&gt;</operator><name pos:start="307:58" pos:end="307:63">format</name></name> <operator pos:start="307:65" pos:end="307:65">=</operator> <name pos:start="307:67" pos:end="307:85">AV_PIX_FMT_YUV444P9</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="309:17" pos:end="309:86">else if <condition pos:start="309:25" pos:end="309:53">(<expr pos:start="309:26" pos:end="309:52"><name pos:start="309:26" pos:end="309:47"><name pos:start="309:26" pos:end="309:28">sps</name><operator pos:start="309:29" pos:end="309:30">-&gt;</operator><name pos:start="309:31" pos:end="309:47">chroma_format_idc</name></name> <operator pos:start="309:49" pos:end="309:50">==</operator> <literal type="number" pos:start="309:52" pos:end="309:52">2</literal></expr>)</condition><block type="pseudo" pos:start="309:55" pos:end="309:86"><block_content pos:start="309:55" pos:end="309:86"> <expr_stmt pos:start="309:55" pos:end="309:86"><expr pos:start="309:55" pos:end="309:85"><name pos:start="309:55" pos:end="309:63"><name pos:start="309:55" pos:end="309:55">s</name><operator pos:start="309:56" pos:end="309:57">-&gt;</operator><name pos:start="309:58" pos:end="309:63">format</name></name> <operator pos:start="309:65" pos:end="309:65">=</operator> <name pos:start="309:67" pos:end="309:85">AV_PIX_FMT_YUV422P9</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="311:17" pos:end="311:86">else<block type="pseudo" pos:start="311:55" pos:end="311:86"><block_content pos:start="311:55" pos:end="311:86">                                  <expr_stmt pos:start="311:55" pos:end="311:86"><expr pos:start="311:55" pos:end="311:85"><name pos:start="311:55" pos:end="311:63"><name pos:start="311:55" pos:end="311:55">s</name><operator pos:start="311:56" pos:end="311:57">-&gt;</operator><name pos:start="311:58" pos:end="311:63">format</name></name> <operator pos:start="311:65" pos:end="311:65">=</operator> <name pos:start="311:67" pos:end="311:85">AV_PIX_FMT_YUV420P9</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <break pos:start="313:17" pos:end="313:22">break;</break>

            <case pos:start="315:13" pos:end="315:20">case <expr pos:start="315:18" pos:end="315:19"><literal type="number" pos:start="315:18" pos:end="315:19">10</literal></expr>:</case>

                <if_stmt pos:start="317:17" pos:end="321:87"><if pos:start="317:17" pos:end="317:87">if <condition pos:start="317:20" pos:end="317:48">(<expr pos:start="317:21" pos:end="317:47"><name pos:start="317:21" pos:end="317:42"><name pos:start="317:21" pos:end="317:23">sps</name><operator pos:start="317:24" pos:end="317:25">-&gt;</operator><name pos:start="317:26" pos:end="317:42">chroma_format_idc</name></name> <operator pos:start="317:44" pos:end="317:45">==</operator> <literal type="number" pos:start="317:47" pos:end="317:47">3</literal></expr>)</condition><block type="pseudo" pos:start="317:55" pos:end="317:87"><block_content pos:start="317:55" pos:end="317:87">      <expr_stmt pos:start="317:55" pos:end="317:87"><expr pos:start="317:55" pos:end="317:86"><name pos:start="317:55" pos:end="317:63"><name pos:start="317:55" pos:end="317:55">s</name><operator pos:start="317:56" pos:end="317:57">-&gt;</operator><name pos:start="317:58" pos:end="317:63">format</name></name> <operator pos:start="317:65" pos:end="317:65">=</operator> <name pos:start="317:67" pos:end="317:86">AV_PIX_FMT_YUV444P10</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="319:17" pos:end="319:87">else if <condition pos:start="319:25" pos:end="319:53">(<expr pos:start="319:26" pos:end="319:52"><name pos:start="319:26" pos:end="319:47"><name pos:start="319:26" pos:end="319:28">sps</name><operator pos:start="319:29" pos:end="319:30">-&gt;</operator><name pos:start="319:31" pos:end="319:47">chroma_format_idc</name></name> <operator pos:start="319:49" pos:end="319:50">==</operator> <literal type="number" pos:start="319:52" pos:end="319:52">2</literal></expr>)</condition><block type="pseudo" pos:start="319:55" pos:end="319:87"><block_content pos:start="319:55" pos:end="319:87"> <expr_stmt pos:start="319:55" pos:end="319:87"><expr pos:start="319:55" pos:end="319:86"><name pos:start="319:55" pos:end="319:63"><name pos:start="319:55" pos:end="319:55">s</name><operator pos:start="319:56" pos:end="319:57">-&gt;</operator><name pos:start="319:58" pos:end="319:63">format</name></name> <operator pos:start="319:65" pos:end="319:65">=</operator> <name pos:start="319:67" pos:end="319:86">AV_PIX_FMT_YUV422P10</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="321:17" pos:end="321:87">else<block type="pseudo" pos:start="321:55" pos:end="321:87"><block_content pos:start="321:55" pos:end="321:87">                                  <expr_stmt pos:start="321:55" pos:end="321:87"><expr pos:start="321:55" pos:end="321:86"><name pos:start="321:55" pos:end="321:63"><name pos:start="321:55" pos:end="321:55">s</name><operator pos:start="321:56" pos:end="321:57">-&gt;</operator><name pos:start="321:58" pos:end="321:63">format</name></name> <operator pos:start="321:65" pos:end="321:65">=</operator> <name pos:start="321:67" pos:end="321:86">AV_PIX_FMT_YUV420P10</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <break pos:start="323:17" pos:end="323:22">break;</break>

            <case pos:start="325:13" pos:end="325:19">case <expr pos:start="325:18" pos:end="325:18"><literal type="number" pos:start="325:18" pos:end="325:18">8</literal></expr>:</case>

                <if_stmt pos:start="327:17" pos:end="331:85"><if pos:start="327:17" pos:end="327:85">if <condition pos:start="327:20" pos:end="327:48">(<expr pos:start="327:21" pos:end="327:47"><name pos:start="327:21" pos:end="327:42"><name pos:start="327:21" pos:end="327:23">sps</name><operator pos:start="327:24" pos:end="327:25">-&gt;</operator><name pos:start="327:26" pos:end="327:42">chroma_format_idc</name></name> <operator pos:start="327:44" pos:end="327:45">==</operator> <literal type="number" pos:start="327:47" pos:end="327:47">3</literal></expr>)</condition><block type="pseudo" pos:start="327:55" pos:end="327:85"><block_content pos:start="327:55" pos:end="327:85">      <expr_stmt pos:start="327:55" pos:end="327:85"><expr pos:start="327:55" pos:end="327:84"><name pos:start="327:55" pos:end="327:63"><name pos:start="327:55" pos:end="327:55">s</name><operator pos:start="327:56" pos:end="327:57">-&gt;</operator><name pos:start="327:58" pos:end="327:63">format</name></name> <operator pos:start="327:65" pos:end="327:65">=</operator> <name pos:start="327:67" pos:end="327:84">AV_PIX_FMT_YUV444P</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="329:17" pos:end="329:85">else if <condition pos:start="329:25" pos:end="329:53">(<expr pos:start="329:26" pos:end="329:52"><name pos:start="329:26" pos:end="329:47"><name pos:start="329:26" pos:end="329:28">sps</name><operator pos:start="329:29" pos:end="329:30">-&gt;</operator><name pos:start="329:31" pos:end="329:47">chroma_format_idc</name></name> <operator pos:start="329:49" pos:end="329:50">==</operator> <literal type="number" pos:start="329:52" pos:end="329:52">2</literal></expr>)</condition><block type="pseudo" pos:start="329:55" pos:end="329:85"><block_content pos:start="329:55" pos:end="329:85"> <expr_stmt pos:start="329:55" pos:end="329:85"><expr pos:start="329:55" pos:end="329:84"><name pos:start="329:55" pos:end="329:63"><name pos:start="329:55" pos:end="329:55">s</name><operator pos:start="329:56" pos:end="329:57">-&gt;</operator><name pos:start="329:58" pos:end="329:63">format</name></name> <operator pos:start="329:65" pos:end="329:65">=</operator> <name pos:start="329:67" pos:end="329:84">AV_PIX_FMT_YUV422P</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="331:17" pos:end="331:85">else<block type="pseudo" pos:start="331:55" pos:end="331:85"><block_content pos:start="331:55" pos:end="331:85">                                  <expr_stmt pos:start="331:55" pos:end="331:85"><expr pos:start="331:55" pos:end="331:84"><name pos:start="331:55" pos:end="331:63"><name pos:start="331:55" pos:end="331:55">s</name><operator pos:start="331:56" pos:end="331:57">-&gt;</operator><name pos:start="331:58" pos:end="331:63">format</name></name> <operator pos:start="331:65" pos:end="331:65">=</operator> <name pos:start="331:67" pos:end="331:84">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <break pos:start="333:17" pos:end="333:22">break;</break>

            <default pos:start="335:13" pos:end="335:20">default:</default>

                <expr_stmt pos:start="337:17" pos:end="337:44"><expr pos:start="337:17" pos:end="337:43"><name pos:start="337:17" pos:end="337:25"><name pos:start="337:17" pos:end="337:17">s</name><operator pos:start="337:18" pos:end="337:19">-&gt;</operator><name pos:start="337:20" pos:end="337:25">format</name></name> <operator pos:start="337:27" pos:end="337:27">=</operator> <name pos:start="337:29" pos:end="337:43">AV_PIX_FMT_NONE</name></expr>;</expr_stmt>

            </block_content>}</block></switch>



            <expr_stmt pos:start="343:13" pos:end="343:54"><expr pos:start="343:13" pos:end="343:53"><name pos:start="343:13" pos:end="343:26"><name pos:start="343:13" pos:end="343:17">avctx</name><operator pos:start="343:18" pos:end="343:19">-&gt;</operator><name pos:start="343:20" pos:end="343:26">profile</name></name> <operator pos:start="343:28" pos:end="343:28">=</operator> <call pos:start="343:30" pos:end="343:53"><name pos:start="343:30" pos:end="343:48">ff_h264_get_profile</name><argument_list pos:start="343:49" pos:end="343:53">(<argument pos:start="343:50" pos:end="343:52"><expr pos:start="343:50" pos:end="343:52"><name pos:start="343:50" pos:end="343:52">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:44"><expr pos:start="345:13" pos:end="345:43"><name pos:start="345:13" pos:end="345:24"><name pos:start="345:13" pos:end="345:17">avctx</name><operator pos:start="345:18" pos:end="345:19">-&gt;</operator><name pos:start="345:20" pos:end="345:24">level</name></name>   <operator pos:start="345:28" pos:end="345:28">=</operator> <name pos:start="345:30" pos:end="345:43"><name pos:start="345:30" pos:end="345:32">sps</name><operator pos:start="345:33" pos:end="345:34">-&gt;</operator><name pos:start="345:35" pos:end="345:43">level_idc</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="349:13" pos:end="365:13"><if pos:start="349:13" pos:end="353:13">if <condition pos:start="349:16" pos:end="349:41">(<expr pos:start="349:17" pos:end="349:40"><name pos:start="349:17" pos:end="349:40"><name pos:start="349:17" pos:end="349:19">sps</name><operator pos:start="349:20" pos:end="349:21">-&gt;</operator><name pos:start="349:22" pos:end="349:40">frame_mbs_only_flag</name></name></expr>)</condition> <block pos:start="349:43" pos:end="353:13">{<block_content pos:start="351:17" pos:end="351:50">

                <expr_stmt pos:start="351:17" pos:end="351:50"><expr pos:start="351:17" pos:end="351:49"><name pos:start="351:17" pos:end="351:36"><name pos:start="351:17" pos:end="351:17">p</name><operator pos:start="351:18" pos:end="351:19">-&gt;</operator><name pos:start="351:20" pos:end="351:36">picture_structure</name></name> <operator pos:start="351:38" pos:end="351:38">=</operator> <name pos:start="351:40" pos:end="351:49">PICT_FRAME</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="353:15" pos:end="365:13">else <block pos:start="353:20" pos:end="365:13">{<block_content pos:start="355:17" pos:end="363:17">

                <if_stmt pos:start="355:17" pos:end="363:17"><if pos:start="355:17" pos:end="359:17">if <condition pos:start="355:20" pos:end="355:39">(<expr pos:start="355:21" pos:end="355:38"><call pos:start="355:21" pos:end="355:38"><name pos:start="355:21" pos:end="355:29">get_bits1</name><argument_list pos:start="355:30" pos:end="355:38">(<argument pos:start="355:31" pos:end="355:37"><expr pos:start="355:31" pos:end="355:37"><operator pos:start="355:31" pos:end="355:31">&amp;</operator><name pos:start="355:32" pos:end="355:37"><name pos:start="355:32" pos:end="355:34">nal</name><operator pos:start="355:35" pos:end="355:35">.</operator><name pos:start="355:36" pos:end="355:37">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="355:41" pos:end="359:17">{<block_content pos:start="357:21" pos:end="357:79"> <comment type="line" pos:start="355:43" pos:end="355:59">// field_pic_flag</comment>

                    <expr_stmt pos:start="357:21" pos:end="357:79"><expr pos:start="357:21" pos:end="357:78"><name pos:start="357:21" pos:end="357:40"><name pos:start="357:21" pos:end="357:21">p</name><operator pos:start="357:22" pos:end="357:23">-&gt;</operator><name pos:start="357:24" pos:end="357:40">picture_structure</name></name> <operator pos:start="357:42" pos:end="357:42">=</operator> <name pos:start="357:44" pos:end="357:57">PICT_TOP_FIELD</name> <operator pos:start="357:59" pos:end="357:59">+</operator> <call pos:start="357:61" pos:end="357:78"><name pos:start="357:61" pos:end="357:69">get_bits1</name><argument_list pos:start="357:70" pos:end="357:78">(<argument pos:start="357:71" pos:end="357:77"><expr pos:start="357:71" pos:end="357:77"><operator pos:start="357:71" pos:end="357:71">&amp;</operator><name pos:start="357:72" pos:end="357:77"><name pos:start="357:72" pos:end="357:74">nal</name><operator pos:start="357:75" pos:end="357:75">.</operator><name pos:start="357:76" pos:end="357:77">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="357:81" pos:end="357:100">// bottom_field_flag</comment>

                </block_content>}</block></if> <else pos:start="359:19" pos:end="363:17">else <block pos:start="359:24" pos:end="363:17">{<block_content pos:start="361:21" pos:end="361:54">

                    <expr_stmt pos:start="361:21" pos:end="361:54"><expr pos:start="361:21" pos:end="361:53"><name pos:start="361:21" pos:end="361:40"><name pos:start="361:21" pos:end="361:21">p</name><operator pos:start="361:22" pos:end="361:23">-&gt;</operator><name pos:start="361:24" pos:end="361:40">picture_structure</name></name> <operator pos:start="361:42" pos:end="361:42">=</operator> <name pos:start="361:44" pos:end="361:53">PICT_FRAME</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="369:13" pos:end="371:44"><if pos:start="369:13" pos:end="371:44">if <condition pos:start="369:16" pos:end="369:47">(<expr pos:start="369:17" pos:end="369:46"><name pos:start="369:17" pos:end="369:24"><name pos:start="369:17" pos:end="369:19">nal</name><operator pos:start="369:20" pos:end="369:20">.</operator><name pos:start="369:21" pos:end="369:24">type</name></name> <operator pos:start="369:26" pos:end="369:27">==</operator> <name pos:start="369:29" pos:end="369:46">H264_NAL_IDR_SLICE</name></expr>)</condition><block type="pseudo" pos:start="371:17" pos:end="371:44"><block_content pos:start="371:17" pos:end="371:44">

                <expr_stmt pos:start="371:17" pos:end="371:44"><expr pos:start="371:17" pos:end="371:43"><call pos:start="371:17" pos:end="371:43"><name pos:start="371:17" pos:end="371:34">get_ue_golomb_long</name><argument_list pos:start="371:35" pos:end="371:43">(<argument pos:start="371:36" pos:end="371:42"><expr pos:start="371:36" pos:end="371:42"><operator pos:start="371:36" pos:end="371:36">&amp;</operator><name pos:start="371:37" pos:end="371:42"><name pos:start="371:37" pos:end="371:39">nal</name><operator pos:start="371:40" pos:end="371:40">.</operator><name pos:start="371:41" pos:end="371:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="371:46" pos:end="371:61">/* idr_pic_id */</comment>

            <if_stmt pos:start="373:13" pos:end="385:13"><if pos:start="373:13" pos:end="385:13">if <condition pos:start="373:16" pos:end="373:35">(<expr pos:start="373:17" pos:end="373:34"><name pos:start="373:17" pos:end="373:29"><name pos:start="373:17" pos:end="373:19">sps</name><operator pos:start="373:20" pos:end="373:21">-&gt;</operator><name pos:start="373:22" pos:end="373:29">poc_type</name></name> <operator pos:start="373:31" pos:end="373:32">==</operator> <literal type="number" pos:start="373:34" pos:end="373:34">0</literal></expr>)</condition> <block pos:start="373:37" pos:end="385:13">{<block_content pos:start="375:17" pos:end="383:69">

                <expr_stmt pos:start="375:17" pos:end="375:74"><expr pos:start="375:17" pos:end="375:73"><name pos:start="375:17" pos:end="375:30"><name pos:start="375:17" pos:end="375:17">p</name><operator pos:start="375:18" pos:end="375:19">-&gt;</operator><name pos:start="375:20" pos:end="375:22">poc</name><operator pos:start="375:23" pos:end="375:23">.</operator><name pos:start="375:24" pos:end="375:30">poc_lsb</name></name> <operator pos:start="375:32" pos:end="375:32">=</operator> <call pos:start="375:34" pos:end="375:73"><name pos:start="375:34" pos:end="375:41">get_bits</name><argument_list pos:start="375:42" pos:end="375:73">(<argument pos:start="375:43" pos:end="375:49"><expr pos:start="375:43" pos:end="375:49"><operator pos:start="375:43" pos:end="375:43">&amp;</operator><name pos:start="375:44" pos:end="375:49"><name pos:start="375:44" pos:end="375:46">nal</name><operator pos:start="375:47" pos:end="375:47">.</operator><name pos:start="375:48" pos:end="375:49">gb</name></name></expr></argument>, <argument pos:start="375:52" pos:end="375:72"><expr pos:start="375:52" pos:end="375:72"><name pos:start="375:52" pos:end="375:72"><name pos:start="375:52" pos:end="375:54">sps</name><operator pos:start="375:55" pos:end="375:56">-&gt;</operator><name pos:start="375:57" pos:end="375:72">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="379:17" pos:end="383:69"><if pos:start="379:17" pos:end="383:69">if <condition pos:start="379:20" pos:end="381:55">(<expr pos:start="379:21" pos:end="381:54"><name pos:start="379:21" pos:end="379:48"><name pos:start="379:21" pos:end="379:21">p</name><operator pos:start="379:22" pos:end="379:23">-&gt;</operator><name pos:start="379:24" pos:end="379:25">ps</name><operator pos:start="379:26" pos:end="379:26">.</operator><name pos:start="379:27" pos:end="379:29">pps</name><operator pos:start="379:30" pos:end="379:31">-&gt;</operator><name pos:start="379:32" pos:end="379:48">pic_order_present</name></name> <operator pos:start="379:50" pos:end="379:51">==</operator> <literal type="number" pos:start="379:53" pos:end="379:53">1</literal> <operator pos:start="379:55" pos:end="379:56">&amp;&amp;</operator>

                    <name pos:start="381:21" pos:end="381:40"><name pos:start="381:21" pos:end="381:21">p</name><operator pos:start="381:22" pos:end="381:23">-&gt;</operator><name pos:start="381:24" pos:end="381:40">picture_structure</name></name> <operator pos:start="381:42" pos:end="381:43">==</operator> <name pos:start="381:45" pos:end="381:54">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="383:21" pos:end="383:69"><block_content pos:start="383:21" pos:end="383:69">

                    <expr_stmt pos:start="383:21" pos:end="383:69"><expr pos:start="383:21" pos:end="383:68"><name pos:start="383:21" pos:end="383:43"><name pos:start="383:21" pos:end="383:21">p</name><operator pos:start="383:22" pos:end="383:23">-&gt;</operator><name pos:start="383:24" pos:end="383:26">poc</name><operator pos:start="383:27" pos:end="383:27">.</operator><name pos:start="383:28" pos:end="383:43">delta_poc_bottom</name></name> <operator pos:start="383:45" pos:end="383:45">=</operator> <call pos:start="383:47" pos:end="383:68"><name pos:start="383:47" pos:end="383:59">get_se_golomb</name><argument_list pos:start="383:60" pos:end="383:68">(<argument pos:start="383:61" pos:end="383:67"><expr pos:start="383:61" pos:end="383:67"><operator pos:start="383:61" pos:end="383:61">&amp;</operator><name pos:start="383:62" pos:end="383:67"><name pos:start="383:62" pos:end="383:64">nal</name><operator pos:start="383:65" pos:end="383:65">.</operator><name pos:start="383:66" pos:end="383:67">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="389:13" pos:end="403:13"><if pos:start="389:13" pos:end="403:13">if <condition pos:start="389:16" pos:end="391:55">(<expr pos:start="389:17" pos:end="391:54"><name pos:start="389:17" pos:end="389:29"><name pos:start="389:17" pos:end="389:19">sps</name><operator pos:start="389:20" pos:end="389:21">-&gt;</operator><name pos:start="389:22" pos:end="389:29">poc_type</name></name> <operator pos:start="389:31" pos:end="389:32">==</operator> <literal type="number" pos:start="389:34" pos:end="389:34">1</literal> <operator pos:start="389:36" pos:end="389:37">&amp;&amp;</operator>

                <operator pos:start="391:17" pos:end="391:17">!</operator><name pos:start="391:18" pos:end="391:54"><name pos:start="391:18" pos:end="391:20">sps</name><operator pos:start="391:21" pos:end="391:22">-&gt;</operator><name pos:start="391:23" pos:end="391:54">delta_pic_order_always_zero_flag</name></name></expr>)</condition> <block pos:start="391:57" pos:end="403:13">{<block_content pos:start="393:17" pos:end="401:65">

                <expr_stmt pos:start="393:17" pos:end="393:61"><expr pos:start="393:17" pos:end="393:60"><name pos:start="393:17" pos:end="393:35"><name pos:start="393:17" pos:end="393:17">p</name><operator pos:start="393:18" pos:end="393:19">-&gt;</operator><name pos:start="393:20" pos:end="393:22">poc</name><operator pos:start="393:23" pos:end="393:23">.</operator><name pos:start="393:24" pos:end="393:32">delta_poc</name><index pos:start="393:33" pos:end="393:35">[<expr pos:start="393:34" pos:end="393:34"><literal type="number" pos:start="393:34" pos:end="393:34">0</literal></expr>]</index></name> <operator pos:start="393:37" pos:end="393:37">=</operator> <call pos:start="393:39" pos:end="393:60"><name pos:start="393:39" pos:end="393:51">get_se_golomb</name><argument_list pos:start="393:52" pos:end="393:60">(<argument pos:start="393:53" pos:end="393:59"><expr pos:start="393:53" pos:end="393:59"><operator pos:start="393:53" pos:end="393:53">&amp;</operator><name pos:start="393:54" pos:end="393:59"><name pos:start="393:54" pos:end="393:56">nal</name><operator pos:start="393:57" pos:end="393:57">.</operator><name pos:start="393:58" pos:end="393:59">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="397:17" pos:end="401:65"><if pos:start="397:17" pos:end="401:65">if <condition pos:start="397:20" pos:end="399:55">(<expr pos:start="397:21" pos:end="399:54"><name pos:start="397:21" pos:end="397:48"><name pos:start="397:21" pos:end="397:21">p</name><operator pos:start="397:22" pos:end="397:23">-&gt;</operator><name pos:start="397:24" pos:end="397:25">ps</name><operator pos:start="397:26" pos:end="397:26">.</operator><name pos:start="397:27" pos:end="397:29">pps</name><operator pos:start="397:30" pos:end="397:31">-&gt;</operator><name pos:start="397:32" pos:end="397:48">pic_order_present</name></name> <operator pos:start="397:50" pos:end="397:51">==</operator> <literal type="number" pos:start="397:53" pos:end="397:53">1</literal> <operator pos:start="397:55" pos:end="397:56">&amp;&amp;</operator>

                    <name pos:start="399:21" pos:end="399:40"><name pos:start="399:21" pos:end="399:21">p</name><operator pos:start="399:22" pos:end="399:23">-&gt;</operator><name pos:start="399:24" pos:end="399:40">picture_structure</name></name> <operator pos:start="399:42" pos:end="399:43">==</operator> <name pos:start="399:45" pos:end="399:54">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="401:21" pos:end="401:65"><block_content pos:start="401:21" pos:end="401:65">

                    <expr_stmt pos:start="401:21" pos:end="401:65"><expr pos:start="401:21" pos:end="401:64"><name pos:start="401:21" pos:end="401:39"><name pos:start="401:21" pos:end="401:21">p</name><operator pos:start="401:22" pos:end="401:23">-&gt;</operator><name pos:start="401:24" pos:end="401:26">poc</name><operator pos:start="401:27" pos:end="401:27">.</operator><name pos:start="401:28" pos:end="401:36">delta_poc</name><index pos:start="401:37" pos:end="401:39">[<expr pos:start="401:38" pos:end="401:38"><literal type="number" pos:start="401:38" pos:end="401:38">1</literal></expr>]</index></name> <operator pos:start="401:41" pos:end="401:41">=</operator> <call pos:start="401:43" pos:end="401:64"><name pos:start="401:43" pos:end="401:55">get_se_golomb</name><argument_list pos:start="401:56" pos:end="401:64">(<argument pos:start="401:57" pos:end="401:63"><expr pos:start="401:57" pos:end="401:63"><operator pos:start="401:57" pos:end="401:57">&amp;</operator><name pos:start="401:58" pos:end="401:63"><name pos:start="401:58" pos:end="401:60">nal</name><operator pos:start="401:61" pos:end="401:61">.</operator><name pos:start="401:62" pos:end="401:63">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="407:13" pos:end="409:96">/* Decode POC of this picture.

             * The prev_ values needed for decoding POC of the next picture are not set here. */</comment>

            <expr_stmt pos:start="411:13" pos:end="411:50"><expr pos:start="411:13" pos:end="411:49"><name pos:start="411:13" pos:end="411:24"><name pos:start="411:13" pos:end="411:21">field_poc</name><index pos:start="411:22" pos:end="411:24">[<expr pos:start="411:23" pos:end="411:23"><literal type="number" pos:start="411:23" pos:end="411:23">0</literal></expr>]</index></name> <operator pos:start="411:26" pos:end="411:26">=</operator> <name pos:start="411:28" pos:end="411:39"><name pos:start="411:28" pos:end="411:36">field_poc</name><index pos:start="411:37" pos:end="411:39">[<expr pos:start="411:38" pos:end="411:38"><literal type="number" pos:start="411:38" pos:end="411:38">1</literal></expr>]</index></name> <operator pos:start="411:41" pos:end="411:41">=</operator> <name pos:start="411:43" pos:end="411:49">INT_MAX</name></expr>;</expr_stmt>

            <expr_stmt pos:start="413:13" pos:end="415:73"><expr pos:start="413:13" pos:end="415:72"><call pos:start="413:13" pos:end="415:72"><name pos:start="413:13" pos:end="413:28">ff_h264_init_poc</name><argument_list pos:start="413:29" pos:end="415:72">(<argument pos:start="413:30" pos:end="413:38"><expr pos:start="413:30" pos:end="413:38"><name pos:start="413:30" pos:end="413:38">field_poc</name></expr></argument>, <argument pos:start="413:41" pos:end="413:65"><expr pos:start="413:41" pos:end="413:65"><operator pos:start="413:41" pos:end="413:41">&amp;</operator><name pos:start="413:42" pos:end="413:65"><name pos:start="413:42" pos:end="413:42">s</name><operator pos:start="413:43" pos:end="413:44">-&gt;</operator><name pos:start="413:45" pos:end="413:65">output_picture_number</name></name></expr></argument>, <argument pos:start="413:68" pos:end="413:70"><expr pos:start="413:68" pos:end="413:70"><name pos:start="413:68" pos:end="413:70">sps</name></expr></argument>,

                             <argument pos:start="415:30" pos:end="415:36"><expr pos:start="415:30" pos:end="415:36"><operator pos:start="415:30" pos:end="415:30">&amp;</operator><name pos:start="415:31" pos:end="415:36"><name pos:start="415:31" pos:end="415:31">p</name><operator pos:start="415:32" pos:end="415:33">-&gt;</operator><name pos:start="415:34" pos:end="415:36">poc</name></name></expr></argument>, <argument pos:start="415:39" pos:end="415:58"><expr pos:start="415:39" pos:end="415:58"><name pos:start="415:39" pos:end="415:58"><name pos:start="415:39" pos:end="415:39">p</name><operator pos:start="415:40" pos:end="415:41">-&gt;</operator><name pos:start="415:42" pos:end="415:58">picture_structure</name></name></expr></argument>, <argument pos:start="415:61" pos:end="415:71"><expr pos:start="415:61" pos:end="415:71"><name pos:start="415:61" pos:end="415:71"><name pos:start="415:61" pos:end="415:63">nal</name><operator pos:start="415:64" pos:end="415:64">.</operator><name pos:start="415:65" pos:end="415:71">ref_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="419:13" pos:end="425:80">/* Continue parsing to check if MMCO_RESET is present.

             * FIXME: MMCO_RESET could appear in non-first slice.

             *        Maybe, we should parse all undisposable non-IDR slice of this

             *        picture until encountering MMCO_RESET in a slice of it. */</comment>

            <if_stmt pos:start="427:13" pos:end="435:13"><if pos:start="427:13" pos:end="435:13">if <condition pos:start="427:16" pos:end="427:62">(<expr pos:start="427:17" pos:end="427:61"><name pos:start="427:17" pos:end="427:27"><name pos:start="427:17" pos:end="427:19">nal</name><operator pos:start="427:20" pos:end="427:20">.</operator><name pos:start="427:21" pos:end="427:27">ref_idc</name></name> <operator pos:start="427:29" pos:end="427:30">&amp;&amp;</operator> <name pos:start="427:32" pos:end="427:39"><name pos:start="427:32" pos:end="427:34">nal</name><operator pos:start="427:35" pos:end="427:35">.</operator><name pos:start="427:36" pos:end="427:39">type</name></name> <operator pos:start="427:41" pos:end="427:42">!=</operator> <name pos:start="427:44" pos:end="427:61">H264_NAL_IDR_SLICE</name></expr>)</condition> <block pos:start="427:64" pos:end="435:13">{<block_content pos:start="429:17" pos:end="433:30">

                <expr_stmt pos:start="429:17" pos:end="429:63"><expr pos:start="429:17" pos:end="429:62"><name pos:start="429:17" pos:end="429:25">got_reset</name> <operator pos:start="429:27" pos:end="429:27">=</operator> <call pos:start="429:29" pos:end="429:62"><name pos:start="429:29" pos:end="429:43">scan_mmco_reset</name><argument_list pos:start="429:44" pos:end="429:62">(<argument pos:start="429:45" pos:end="429:45"><expr pos:start="429:45" pos:end="429:45"><name pos:start="429:45" pos:end="429:45">s</name></expr></argument>, <argument pos:start="429:48" pos:end="429:54"><expr pos:start="429:48" pos:end="429:54"><operator pos:start="429:48" pos:end="429:48">&amp;</operator><name pos:start="429:49" pos:end="429:54"><name pos:start="429:49" pos:end="429:51">nal</name><operator pos:start="429:52" pos:end="429:52">.</operator><name pos:start="429:53" pos:end="429:54">gb</name></name></expr></argument>, <argument pos:start="429:57" pos:end="429:61"><expr pos:start="429:57" pos:end="429:61"><name pos:start="429:57" pos:end="429:61">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="431:17" pos:end="433:30"><if pos:start="431:17" pos:end="433:30">if <condition pos:start="431:20" pos:end="431:34">(<expr pos:start="431:21" pos:end="431:33"><name pos:start="431:21" pos:end="431:29">got_reset</name> <operator pos:start="431:31" pos:end="431:31">&lt;</operator> <literal type="number" pos:start="431:33" pos:end="431:33">0</literal></expr>)</condition><block type="pseudo" pos:start="433:21" pos:end="433:30"><block_content pos:start="433:21" pos:end="433:30">

                    <goto pos:start="433:21" pos:end="433:30">goto <name pos:start="433:26" pos:end="433:29">fail</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="439:13" pos:end="439:79">/* Set up the prev_ values for decoding POC of the next picture. */</comment>

            <expr_stmt pos:start="441:13" pos:end="441:76"><expr pos:start="441:13" pos:end="441:75"><name pos:start="441:13" pos:end="441:33"><name pos:start="441:13" pos:end="441:13">p</name><operator pos:start="441:14" pos:end="441:15">-&gt;</operator><name pos:start="441:16" pos:end="441:18">poc</name><operator pos:start="441:19" pos:end="441:19">.</operator><name pos:start="441:20" pos:end="441:33">prev_frame_num</name></name>        <operator pos:start="441:42" pos:end="441:42">=</operator> <ternary pos:start="441:44" pos:end="441:75"><condition pos:start="441:44" pos:end="441:54"><expr pos:start="441:44" pos:end="441:52"><name pos:start="441:44" pos:end="441:52">got_reset</name></expr> ?</condition><then pos:start="441:56" pos:end="441:56"> <expr pos:start="441:56" pos:end="441:56"><literal type="number" pos:start="441:56" pos:end="441:56">0</literal></expr> </then><else pos:start="441:58" pos:end="441:75">: <expr pos:start="441:60" pos:end="441:75"><name pos:start="441:60" pos:end="441:75"><name pos:start="441:60" pos:end="441:60">p</name><operator pos:start="441:61" pos:end="441:62">-&gt;</operator><name pos:start="441:63" pos:end="441:65">poc</name><operator pos:start="441:66" pos:end="441:66">.</operator><name pos:start="441:67" pos:end="441:75">frame_num</name></name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="443:13" pos:end="443:83"><expr pos:start="443:13" pos:end="443:82"><name pos:start="443:13" pos:end="443:40"><name pos:start="443:13" pos:end="443:13">p</name><operator pos:start="443:14" pos:end="443:15">-&gt;</operator><name pos:start="443:16" pos:end="443:18">poc</name><operator pos:start="443:19" pos:end="443:19">.</operator><name pos:start="443:20" pos:end="443:40">prev_frame_num_offset</name></name> <operator pos:start="443:42" pos:end="443:42">=</operator> <ternary pos:start="443:44" pos:end="443:82"><condition pos:start="443:44" pos:end="443:54"><expr pos:start="443:44" pos:end="443:52"><name pos:start="443:44" pos:end="443:52">got_reset</name></expr> ?</condition><then pos:start="443:56" pos:end="443:56"> <expr pos:start="443:56" pos:end="443:56"><literal type="number" pos:start="443:56" pos:end="443:56">0</literal></expr> </then><else pos:start="443:58" pos:end="443:82">: <expr pos:start="443:60" pos:end="443:82"><name pos:start="443:60" pos:end="443:82"><name pos:start="443:60" pos:end="443:60">p</name><operator pos:start="443:61" pos:end="443:62">-&gt;</operator><name pos:start="443:63" pos:end="443:65">poc</name><operator pos:start="443:66" pos:end="443:66">.</operator><name pos:start="443:67" pos:end="443:82">frame_num_offset</name></name></expr></else></ternary></expr>;</expr_stmt>

            <if_stmt pos:start="445:13" pos:end="463:13"><if pos:start="445:13" pos:end="463:13">if <condition pos:start="445:16" pos:end="445:33">(<expr pos:start="445:17" pos:end="445:32"><name pos:start="445:17" pos:end="445:27"><name pos:start="445:17" pos:end="445:19">nal</name><operator pos:start="445:20" pos:end="445:20">.</operator><name pos:start="445:21" pos:end="445:27">ref_idc</name></name> <operator pos:start="445:29" pos:end="445:30">!=</operator> <literal type="number" pos:start="445:32" pos:end="445:32">0</literal></expr>)</condition> <block pos:start="445:35" pos:end="463:13">{<block_content pos:start="447:17" pos:end="461:17">

                <if_stmt pos:start="447:17" pos:end="461:17"><if pos:start="447:17" pos:end="453:17">if <condition pos:start="447:20" pos:end="447:31">(<expr pos:start="447:21" pos:end="447:30"><operator pos:start="447:21" pos:end="447:21">!</operator><name pos:start="447:22" pos:end="447:30">got_reset</name></expr>)</condition> <block pos:start="447:33" pos:end="453:17">{<block_content pos:start="449:21" pos:end="451:57">

                    <expr_stmt pos:start="449:21" pos:end="449:57"><expr pos:start="449:21" pos:end="449:56"><name pos:start="449:21" pos:end="449:39"><name pos:start="449:21" pos:end="449:21">p</name><operator pos:start="449:22" pos:end="449:23">-&gt;</operator><name pos:start="449:24" pos:end="449:26">poc</name><operator pos:start="449:27" pos:end="449:27">.</operator><name pos:start="449:28" pos:end="449:39">prev_poc_msb</name></name> <operator pos:start="449:41" pos:end="449:41">=</operator> <name pos:start="449:43" pos:end="449:56"><name pos:start="449:43" pos:end="449:43">p</name><operator pos:start="449:44" pos:end="449:45">-&gt;</operator><name pos:start="449:46" pos:end="449:48">poc</name><operator pos:start="449:49" pos:end="449:49">.</operator><name pos:start="449:50" pos:end="449:56">poc_msb</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="451:21" pos:end="451:57"><expr pos:start="451:21" pos:end="451:56"><name pos:start="451:21" pos:end="451:39"><name pos:start="451:21" pos:end="451:21">p</name><operator pos:start="451:22" pos:end="451:23">-&gt;</operator><name pos:start="451:24" pos:end="451:26">poc</name><operator pos:start="451:27" pos:end="451:27">.</operator><name pos:start="451:28" pos:end="451:39">prev_poc_lsb</name></name> <operator pos:start="451:41" pos:end="451:41">=</operator> <name pos:start="451:43" pos:end="451:56"><name pos:start="451:43" pos:end="451:43">p</name><operator pos:start="451:44" pos:end="451:45">-&gt;</operator><name pos:start="451:46" pos:end="451:48">poc</name><operator pos:start="451:49" pos:end="451:49">.</operator><name pos:start="451:50" pos:end="451:56">poc_lsb</name></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="453:19" pos:end="461:17">else <block pos:start="453:24" pos:end="461:17">{<block_content pos:start="455:21" pos:end="459:85">

                    <expr_stmt pos:start="455:21" pos:end="455:44"><expr pos:start="455:21" pos:end="455:43"><name pos:start="455:21" pos:end="455:39"><name pos:start="455:21" pos:end="455:21">p</name><operator pos:start="455:22" pos:end="455:23">-&gt;</operator><name pos:start="455:24" pos:end="455:26">poc</name><operator pos:start="455:27" pos:end="455:27">.</operator><name pos:start="455:28" pos:end="455:39">prev_poc_msb</name></name> <operator pos:start="455:41" pos:end="455:41">=</operator> <literal type="number" pos:start="455:43" pos:end="455:43">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="457:21" pos:end="459:85"><expr pos:start="457:21" pos:end="459:84"><name pos:start="457:21" pos:end="457:39"><name pos:start="457:21" pos:end="457:21">p</name><operator pos:start="457:22" pos:end="457:23">-&gt;</operator><name pos:start="457:24" pos:end="457:26">poc</name><operator pos:start="457:27" pos:end="457:27">.</operator><name pos:start="457:28" pos:end="457:39">prev_poc_lsb</name></name> <operator pos:start="457:41" pos:end="457:41">=</operator>

                        <ternary pos:start="459:25" pos:end="459:84"><condition pos:start="459:25" pos:end="459:67"><expr pos:start="459:25" pos:end="459:65"><name pos:start="459:25" pos:end="459:44"><name pos:start="459:25" pos:end="459:25">p</name><operator pos:start="459:26" pos:end="459:27">-&gt;</operator><name pos:start="459:28" pos:end="459:44">picture_structure</name></name> <operator pos:start="459:46" pos:end="459:47">==</operator> <name pos:start="459:49" pos:end="459:65">PICT_BOTTOM_FIELD</name></expr> ?</condition><then pos:start="459:69" pos:end="459:69"> <expr pos:start="459:69" pos:end="459:69"><literal type="number" pos:start="459:69" pos:end="459:69">0</literal></expr> </then><else pos:start="459:71" pos:end="459:84">: <expr pos:start="459:73" pos:end="459:84"><name pos:start="459:73" pos:end="459:84"><name pos:start="459:73" pos:end="459:81">field_poc</name><index pos:start="459:82" pos:end="459:84">[<expr pos:start="459:83" pos:end="459:83"><literal type="number" pos:start="459:83" pos:end="459:83">0</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="467:13" pos:end="521:13"><if pos:start="467:13" pos:end="517:13">if <condition pos:start="467:16" pos:end="467:45">(<expr pos:start="467:17" pos:end="467:44"><name pos:start="467:17" pos:end="467:44"><name pos:start="467:17" pos:end="467:19">sps</name><operator pos:start="467:20" pos:end="467:21">-&gt;</operator><name pos:start="467:22" pos:end="467:44">pic_struct_present_flag</name></name></expr>)</condition> <block pos:start="467:47" pos:end="517:13">{<block_content pos:start="469:17" pos:end="515:17">

                <switch pos:start="469:17" pos:end="515:17">switch <condition pos:start="469:24" pos:end="469:57">(<expr pos:start="469:25" pos:end="469:56"><name pos:start="469:25" pos:end="469:56"><name pos:start="469:25" pos:end="469:25">p</name><operator pos:start="469:26" pos:end="469:27">-&gt;</operator><name pos:start="469:28" pos:end="469:30">sei</name><operator pos:start="469:31" pos:end="469:31">.</operator><name pos:start="469:32" pos:end="469:45">picture_timing</name><operator pos:start="469:46" pos:end="469:46">.</operator><name pos:start="469:47" pos:end="469:56">pic_struct</name></name></expr>)</condition> <block pos:start="469:59" pos:end="515:17">{<block_content pos:start="471:17" pos:end="513:26">

                <case pos:start="471:17" pos:end="471:46">case <expr pos:start="471:22" pos:end="471:45"><name pos:start="471:22" pos:end="471:45">SEI_PIC_STRUCT_TOP_FIELD</name></expr>:</case>

                <case pos:start="473:17" pos:end="473:49">case <expr pos:start="473:22" pos:end="473:48"><name pos:start="473:22" pos:end="473:48">SEI_PIC_STRUCT_BOTTOM_FIELD</name></expr>:</case>

                    <expr_stmt pos:start="475:21" pos:end="475:39"><expr pos:start="475:21" pos:end="475:38"><name pos:start="475:21" pos:end="475:34"><name pos:start="475:21" pos:end="475:21">s</name><operator pos:start="475:22" pos:end="475:23">-&gt;</operator><name pos:start="475:24" pos:end="475:34">repeat_pict</name></name> <operator pos:start="475:36" pos:end="475:36">=</operator> <literal type="number" pos:start="475:38" pos:end="475:38">0</literal></expr>;</expr_stmt>

                    <break pos:start="477:21" pos:end="477:26">break;</break>

                <case pos:start="479:17" pos:end="479:42">case <expr pos:start="479:22" pos:end="479:41"><name pos:start="479:22" pos:end="479:41">SEI_PIC_STRUCT_FRAME</name></expr>:</case>

                <case pos:start="481:17" pos:end="481:47">case <expr pos:start="481:22" pos:end="481:46"><name pos:start="481:22" pos:end="481:46">SEI_PIC_STRUCT_TOP_BOTTOM</name></expr>:</case>

                <case pos:start="483:17" pos:end="483:47">case <expr pos:start="483:22" pos:end="483:46"><name pos:start="483:22" pos:end="483:46">SEI_PIC_STRUCT_BOTTOM_TOP</name></expr>:</case>

                    <expr_stmt pos:start="485:21" pos:end="485:39"><expr pos:start="485:21" pos:end="485:38"><name pos:start="485:21" pos:end="485:34"><name pos:start="485:21" pos:end="485:21">s</name><operator pos:start="485:22" pos:end="485:23">-&gt;</operator><name pos:start="485:24" pos:end="485:34">repeat_pict</name></name> <operator pos:start="485:36" pos:end="485:36">=</operator> <literal type="number" pos:start="485:38" pos:end="485:38">1</literal></expr>;</expr_stmt>

                    <break pos:start="487:21" pos:end="487:26">break;</break>

                <case pos:start="489:17" pos:end="489:51">case <expr pos:start="489:22" pos:end="489:50"><name pos:start="489:22" pos:end="489:50">SEI_PIC_STRUCT_TOP_BOTTOM_TOP</name></expr>:</case>

                <case pos:start="491:17" pos:end="491:54">case <expr pos:start="491:22" pos:end="491:53"><name pos:start="491:22" pos:end="491:53">SEI_PIC_STRUCT_BOTTOM_TOP_BOTTOM</name></expr>:</case>

                    <expr_stmt pos:start="493:21" pos:end="493:39"><expr pos:start="493:21" pos:end="493:38"><name pos:start="493:21" pos:end="493:34"><name pos:start="493:21" pos:end="493:21">s</name><operator pos:start="493:22" pos:end="493:23">-&gt;</operator><name pos:start="493:24" pos:end="493:34">repeat_pict</name></name> <operator pos:start="493:36" pos:end="493:36">=</operator> <literal type="number" pos:start="493:38" pos:end="493:38">2</literal></expr>;</expr_stmt>

                    <break pos:start="495:21" pos:end="495:26">break;</break>

                <case pos:start="497:17" pos:end="497:51">case <expr pos:start="497:22" pos:end="497:50"><name pos:start="497:22" pos:end="497:50">SEI_PIC_STRUCT_FRAME_DOUBLING</name></expr>:</case>

                    <expr_stmt pos:start="499:21" pos:end="499:39"><expr pos:start="499:21" pos:end="499:38"><name pos:start="499:21" pos:end="499:34"><name pos:start="499:21" pos:end="499:21">s</name><operator pos:start="499:22" pos:end="499:23">-&gt;</operator><name pos:start="499:24" pos:end="499:34">repeat_pict</name></name> <operator pos:start="499:36" pos:end="499:36">=</operator> <literal type="number" pos:start="499:38" pos:end="499:38">3</literal></expr>;</expr_stmt>

                    <break pos:start="501:21" pos:end="501:26">break;</break>

                <case pos:start="503:17" pos:end="503:51">case <expr pos:start="503:22" pos:end="503:50"><name pos:start="503:22" pos:end="503:50">SEI_PIC_STRUCT_FRAME_TRIPLING</name></expr>:</case>

                    <expr_stmt pos:start="505:21" pos:end="505:39"><expr pos:start="505:21" pos:end="505:38"><name pos:start="505:21" pos:end="505:34"><name pos:start="505:21" pos:end="505:21">s</name><operator pos:start="505:22" pos:end="505:23">-&gt;</operator><name pos:start="505:24" pos:end="505:34">repeat_pict</name></name> <operator pos:start="505:36" pos:end="505:36">=</operator> <literal type="number" pos:start="505:38" pos:end="505:38">5</literal></expr>;</expr_stmt>

                    <break pos:start="507:21" pos:end="507:26">break;</break>

                <default pos:start="509:17" pos:end="509:24">default:</default>

                    <expr_stmt pos:start="511:21" pos:end="511:80"><expr pos:start="511:21" pos:end="511:79"><name pos:start="511:21" pos:end="511:34"><name pos:start="511:21" pos:end="511:21">s</name><operator pos:start="511:22" pos:end="511:23">-&gt;</operator><name pos:start="511:24" pos:end="511:34">repeat_pict</name></name> <operator pos:start="511:36" pos:end="511:36">=</operator> <ternary pos:start="511:38" pos:end="511:79"><condition pos:start="511:38" pos:end="511:73"><expr pos:start="511:38" pos:end="511:71"><name pos:start="511:38" pos:end="511:57"><name pos:start="511:38" pos:end="511:38">p</name><operator pos:start="511:39" pos:end="511:40">-&gt;</operator><name pos:start="511:41" pos:end="511:57">picture_structure</name></name> <operator pos:start="511:59" pos:end="511:60">==</operator> <name pos:start="511:62" pos:end="511:71">PICT_FRAME</name></expr> ?</condition><then pos:start="511:75" pos:end="511:75"> <expr pos:start="511:75" pos:end="511:75"><literal type="number" pos:start="511:75" pos:end="511:75">1</literal></expr> </then><else pos:start="511:77" pos:end="511:79">: <expr pos:start="511:79" pos:end="511:79"><literal type="number" pos:start="511:79" pos:end="511:79">0</literal></expr></else></ternary></expr>;</expr_stmt>

                    <break pos:start="513:21" pos:end="513:26">break;</break>

                </block_content>}</block></switch>

            </block_content>}</block></if> <else pos:start="517:15" pos:end="521:13">else <block pos:start="517:20" pos:end="521:13">{<block_content pos:start="519:17" pos:end="519:76">

                <expr_stmt pos:start="519:17" pos:end="519:76"><expr pos:start="519:17" pos:end="519:75"><name pos:start="519:17" pos:end="519:30"><name pos:start="519:17" pos:end="519:17">s</name><operator pos:start="519:18" pos:end="519:19">-&gt;</operator><name pos:start="519:20" pos:end="519:30">repeat_pict</name></name> <operator pos:start="519:32" pos:end="519:32">=</operator> <ternary pos:start="519:34" pos:end="519:75"><condition pos:start="519:34" pos:end="519:69"><expr pos:start="519:34" pos:end="519:67"><name pos:start="519:34" pos:end="519:53"><name pos:start="519:34" pos:end="519:34">p</name><operator pos:start="519:35" pos:end="519:36">-&gt;</operator><name pos:start="519:37" pos:end="519:53">picture_structure</name></name> <operator pos:start="519:55" pos:end="519:56">==</operator> <name pos:start="519:58" pos:end="519:67">PICT_FRAME</name></expr> ?</condition><then pos:start="519:71" pos:end="519:71"> <expr pos:start="519:71" pos:end="519:71"><literal type="number" pos:start="519:71" pos:end="519:71">1</literal></expr> </then><else pos:start="519:73" pos:end="519:75">: <expr pos:start="519:75" pos:end="519:75"><literal type="number" pos:start="519:75" pos:end="519:75">0</literal></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="525:13" pos:end="609:13"><if pos:start="525:13" pos:end="573:13">if <condition pos:start="525:16" pos:end="525:51">(<expr pos:start="525:17" pos:end="525:50"><name pos:start="525:17" pos:end="525:36"><name pos:start="525:17" pos:end="525:17">p</name><operator pos:start="525:18" pos:end="525:19">-&gt;</operator><name pos:start="525:20" pos:end="525:36">picture_structure</name></name> <operator pos:start="525:38" pos:end="525:39">==</operator> <name pos:start="525:41" pos:end="525:50">PICT_FRAME</name></expr>)</condition> <block pos:start="525:53" pos:end="573:13">{<block_content pos:start="527:17" pos:end="571:17">

                <expr_stmt pos:start="527:17" pos:end="527:66"><expr pos:start="527:17" pos:end="527:65"><name pos:start="527:17" pos:end="527:36"><name pos:start="527:17" pos:end="527:17">s</name><operator pos:start="527:18" pos:end="527:19">-&gt;</operator><name pos:start="527:20" pos:end="527:36">picture_structure</name></name> <operator pos:start="527:38" pos:end="527:38">=</operator> <name pos:start="527:40" pos:end="527:65">AV_PICTURE_STRUCTURE_FRAME</name></expr>;</expr_stmt>

                <if_stmt pos:start="529:17" pos:end="571:17"><if pos:start="529:17" pos:end="557:17">if <condition pos:start="529:20" pos:end="529:49">(<expr pos:start="529:21" pos:end="529:48"><name pos:start="529:21" pos:end="529:48"><name pos:start="529:21" pos:end="529:23">sps</name><operator pos:start="529:24" pos:end="529:25">-&gt;</operator><name pos:start="529:26" pos:end="529:48">pic_struct_present_flag</name></name></expr>)</condition> <block pos:start="529:51" pos:end="557:17">{<block_content pos:start="531:21" pos:end="555:21">

                    <switch pos:start="531:21" pos:end="555:21">switch <condition pos:start="531:28" pos:end="531:61">(<expr pos:start="531:29" pos:end="531:60"><name pos:start="531:29" pos:end="531:60"><name pos:start="531:29" pos:end="531:29">p</name><operator pos:start="531:30" pos:end="531:31">-&gt;</operator><name pos:start="531:32" pos:end="531:34">sei</name><operator pos:start="531:35" pos:end="531:35">.</operator><name pos:start="531:36" pos:end="531:49">picture_timing</name><operator pos:start="531:50" pos:end="531:50">.</operator><name pos:start="531:51" pos:end="531:60">pic_struct</name></name></expr>)</condition> <block pos:start="531:63" pos:end="555:21">{<block_content pos:start="533:21" pos:end="553:30">

                    <case pos:start="533:21" pos:end="533:51">case <expr pos:start="533:26" pos:end="533:50"><name pos:start="533:26" pos:end="533:50">SEI_PIC_STRUCT_TOP_BOTTOM</name></expr>:</case>

                    <case pos:start="535:21" pos:end="535:55">case <expr pos:start="535:26" pos:end="535:54"><name pos:start="535:26" pos:end="535:54">SEI_PIC_STRUCT_TOP_BOTTOM_TOP</name></expr>:</case>

                        <expr_stmt pos:start="537:25" pos:end="537:53"><expr pos:start="537:25" pos:end="537:52"><name pos:start="537:25" pos:end="537:38"><name pos:start="537:25" pos:end="537:25">s</name><operator pos:start="537:26" pos:end="537:27">-&gt;</operator><name pos:start="537:28" pos:end="537:38">field_order</name></name> <operator pos:start="537:40" pos:end="537:40">=</operator> <name pos:start="537:42" pos:end="537:52">AV_FIELD_TT</name></expr>;</expr_stmt>

                        <break pos:start="539:25" pos:end="539:30">break;</break>

                    <case pos:start="541:21" pos:end="541:51">case <expr pos:start="541:26" pos:end="541:50"><name pos:start="541:26" pos:end="541:50">SEI_PIC_STRUCT_BOTTOM_TOP</name></expr>:</case>

                    <case pos:start="543:21" pos:end="543:58">case <expr pos:start="543:26" pos:end="543:57"><name pos:start="543:26" pos:end="543:57">SEI_PIC_STRUCT_BOTTOM_TOP_BOTTOM</name></expr>:</case>

                        <expr_stmt pos:start="545:25" pos:end="545:53"><expr pos:start="545:25" pos:end="545:52"><name pos:start="545:25" pos:end="545:38"><name pos:start="545:25" pos:end="545:25">s</name><operator pos:start="545:26" pos:end="545:27">-&gt;</operator><name pos:start="545:28" pos:end="545:38">field_order</name></name> <operator pos:start="545:40" pos:end="545:40">=</operator> <name pos:start="545:42" pos:end="545:52">AV_FIELD_BB</name></expr>;</expr_stmt>

                        <break pos:start="547:25" pos:end="547:30">break;</break>

                    <default pos:start="549:21" pos:end="549:28">default:</default>

                        <expr_stmt pos:start="551:25" pos:end="551:62"><expr pos:start="551:25" pos:end="551:61"><name pos:start="551:25" pos:end="551:38"><name pos:start="551:25" pos:end="551:25">s</name><operator pos:start="551:26" pos:end="551:27">-&gt;</operator><name pos:start="551:28" pos:end="551:38">field_order</name></name> <operator pos:start="551:40" pos:end="551:40">=</operator> <name pos:start="551:42" pos:end="551:61">AV_FIELD_PROGRESSIVE</name></expr>;</expr_stmt>

                        <break pos:start="553:25" pos:end="553:30">break;</break>

                    </block_content>}</block></switch>

                </block_content>}</block></if> <else pos:start="557:19" pos:end="571:17">else <block pos:start="557:24" pos:end="571:17">{<block_content pos:start="559:21" pos:end="569:62">

                    <if_stmt pos:start="559:21" pos:end="569:62"><if pos:start="559:21" pos:end="561:53">if <condition pos:start="559:24" pos:end="559:52">(<expr pos:start="559:25" pos:end="559:51"><name pos:start="559:25" pos:end="559:36"><name pos:start="559:25" pos:end="559:33">field_poc</name><index pos:start="559:34" pos:end="559:36">[<expr pos:start="559:35" pos:end="559:35"><literal type="number" pos:start="559:35" pos:end="559:35">0</literal></expr>]</index></name> <operator pos:start="559:38" pos:end="559:38">&lt;</operator> <name pos:start="559:40" pos:end="559:51"><name pos:start="559:40" pos:end="559:48">field_poc</name><index pos:start="559:49" pos:end="559:51">[<expr pos:start="559:50" pos:end="559:50"><literal type="number" pos:start="559:50" pos:end="559:50">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="561:25" pos:end="561:53"><block_content pos:start="561:25" pos:end="561:53">

                        <expr_stmt pos:start="561:25" pos:end="561:53"><expr pos:start="561:25" pos:end="561:52"><name pos:start="561:25" pos:end="561:38"><name pos:start="561:25" pos:end="561:25">s</name><operator pos:start="561:26" pos:end="561:27">-&gt;</operator><name pos:start="561:28" pos:end="561:38">field_order</name></name> <operator pos:start="561:40" pos:end="561:40">=</operator> <name pos:start="561:42" pos:end="561:52">AV_FIELD_TT</name></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="563:21" pos:end="565:53">else if <condition pos:start="563:29" pos:end="563:57">(<expr pos:start="563:30" pos:end="563:56"><name pos:start="563:30" pos:end="563:41"><name pos:start="563:30" pos:end="563:38">field_poc</name><index pos:start="563:39" pos:end="563:41">[<expr pos:start="563:40" pos:end="563:40"><literal type="number" pos:start="563:40" pos:end="563:40">0</literal></expr>]</index></name> <operator pos:start="563:43" pos:end="563:43">&gt;</operator> <name pos:start="563:45" pos:end="563:56"><name pos:start="563:45" pos:end="563:53">field_poc</name><index pos:start="563:54" pos:end="563:56">[<expr pos:start="563:55" pos:end="563:55"><literal type="number" pos:start="563:55" pos:end="563:55">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="565:25" pos:end="565:53"><block_content pos:start="565:25" pos:end="565:53">

                        <expr_stmt pos:start="565:25" pos:end="565:53"><expr pos:start="565:25" pos:end="565:52"><name pos:start="565:25" pos:end="565:38"><name pos:start="565:25" pos:end="565:25">s</name><operator pos:start="565:26" pos:end="565:27">-&gt;</operator><name pos:start="565:28" pos:end="565:38">field_order</name></name> <operator pos:start="565:40" pos:end="565:40">=</operator> <name pos:start="565:42" pos:end="565:52">AV_FIELD_BB</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="567:21" pos:end="569:62">else<block type="pseudo" pos:start="569:25" pos:end="569:62"><block_content pos:start="569:25" pos:end="569:62">

                        <expr_stmt pos:start="569:25" pos:end="569:62"><expr pos:start="569:25" pos:end="569:61"><name pos:start="569:25" pos:end="569:38"><name pos:start="569:25" pos:end="569:25">s</name><operator pos:start="569:26" pos:end="569:27">-&gt;</operator><name pos:start="569:28" pos:end="569:38">field_order</name></name> <operator pos:start="569:40" pos:end="569:40">=</operator> <name pos:start="569:42" pos:end="569:61">AV_FIELD_PROGRESSIVE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="573:15" pos:end="609:13">else <block pos:start="573:20" pos:end="609:13">{<block_content pos:start="575:17" pos:end="607:53">

                <if_stmt pos:start="575:17" pos:end="581:77"><if pos:start="575:17" pos:end="577:74">if <condition pos:start="575:20" pos:end="575:59">(<expr pos:start="575:21" pos:end="575:58"><name pos:start="575:21" pos:end="575:40"><name pos:start="575:21" pos:end="575:21">p</name><operator pos:start="575:22" pos:end="575:23">-&gt;</operator><name pos:start="575:24" pos:end="575:40">picture_structure</name></name> <operator pos:start="575:42" pos:end="575:43">==</operator> <name pos:start="575:45" pos:end="575:58">PICT_TOP_FIELD</name></expr>)</condition><block type="pseudo" pos:start="577:21" pos:end="577:74"><block_content pos:start="577:21" pos:end="577:74">

                    <expr_stmt pos:start="577:21" pos:end="577:74"><expr pos:start="577:21" pos:end="577:73"><name pos:start="577:21" pos:end="577:40"><name pos:start="577:21" pos:end="577:21">s</name><operator pos:start="577:22" pos:end="577:23">-&gt;</operator><name pos:start="577:24" pos:end="577:40">picture_structure</name></name> <operator pos:start="577:42" pos:end="577:42">=</operator> <name pos:start="577:44" pos:end="577:73">AV_PICTURE_STRUCTURE_TOP_FIELD</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="579:17" pos:end="581:77">else<block type="pseudo" pos:start="581:21" pos:end="581:77"><block_content pos:start="581:21" pos:end="581:77">

                    <expr_stmt pos:start="581:21" pos:end="581:77"><expr pos:start="581:21" pos:end="581:76"><name pos:start="581:21" pos:end="581:40"><name pos:start="581:21" pos:end="581:21">s</name><operator pos:start="581:22" pos:end="581:23">-&gt;</operator><name pos:start="581:24" pos:end="581:40">picture_structure</name></name> <operator pos:start="581:42" pos:end="581:42">=</operator> <name pos:start="581:44" pos:end="581:76">AV_PICTURE_STRUCTURE_BOTTOM_FIELD</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <if_stmt pos:start="583:17" pos:end="603:17"><if pos:start="583:17" pos:end="599:17">if <condition pos:start="583:20" pos:end="589:70">(<expr pos:start="583:21" pos:end="589:69"><name pos:start="583:21" pos:end="583:36"><name pos:start="583:21" pos:end="583:21">p</name><operator pos:start="583:22" pos:end="583:23">-&gt;</operator><name pos:start="583:24" pos:end="583:26">poc</name><operator pos:start="583:27" pos:end="583:27">.</operator><name pos:start="583:28" pos:end="583:36">frame_num</name></name> <operator pos:start="583:38" pos:end="583:39">==</operator> <name pos:start="583:41" pos:end="583:57"><name pos:start="583:41" pos:end="583:41">p</name><operator pos:start="583:42" pos:end="583:43">-&gt;</operator><name pos:start="583:44" pos:end="583:57">last_frame_num</name></name> <operator pos:start="583:59" pos:end="583:60">&amp;&amp;</operator>

                    <name pos:start="585:21" pos:end="585:45"><name pos:start="585:21" pos:end="585:21">p</name><operator pos:start="585:22" pos:end="585:23">-&gt;</operator><name pos:start="585:24" pos:end="585:45">last_picture_structure</name></name> <operator pos:start="585:47" pos:end="585:48">!=</operator> <name pos:start="585:50" pos:end="585:77">AV_PICTURE_STRUCTURE_UNKNOWN</name> <operator pos:start="585:79" pos:end="585:80">&amp;&amp;</operator>

                    <name pos:start="587:21" pos:end="587:45"><name pos:start="587:21" pos:end="587:21">p</name><operator pos:start="587:22" pos:end="587:23">-&gt;</operator><name pos:start="587:24" pos:end="587:45">last_picture_structure</name></name> <operator pos:start="587:47" pos:end="587:48">!=</operator> <name pos:start="587:50" pos:end="587:75">AV_PICTURE_STRUCTURE_FRAME</name> <operator pos:start="587:77" pos:end="587:78">&amp;&amp;</operator>

                    <name pos:start="589:21" pos:end="589:45"><name pos:start="589:21" pos:end="589:21">p</name><operator pos:start="589:22" pos:end="589:23">-&gt;</operator><name pos:start="589:24" pos:end="589:45">last_picture_structure</name></name> <operator pos:start="589:47" pos:end="589:48">!=</operator> <name pos:start="589:50" pos:end="589:69"><name pos:start="589:50" pos:end="589:50">s</name><operator pos:start="589:51" pos:end="589:52">-&gt;</operator><name pos:start="589:53" pos:end="589:69">picture_structure</name></name></expr>)</condition> <block pos:start="589:72" pos:end="599:17">{<block_content pos:start="591:21" pos:end="597:53">

                    <if_stmt pos:start="591:21" pos:end="597:53"><if pos:start="591:21" pos:end="593:53">if <condition pos:start="591:24" pos:end="591:84">(<expr pos:start="591:25" pos:end="591:83"><name pos:start="591:25" pos:end="591:49"><name pos:start="591:25" pos:end="591:25">p</name><operator pos:start="591:26" pos:end="591:27">-&gt;</operator><name pos:start="591:28" pos:end="591:49">last_picture_structure</name></name> <operator pos:start="591:51" pos:end="591:52">==</operator> <name pos:start="591:54" pos:end="591:83">AV_PICTURE_STRUCTURE_TOP_FIELD</name></expr>)</condition><block type="pseudo" pos:start="593:25" pos:end="593:53"><block_content pos:start="593:25" pos:end="593:53">

                        <expr_stmt pos:start="593:25" pos:end="593:53"><expr pos:start="593:25" pos:end="593:52"><name pos:start="593:25" pos:end="593:38"><name pos:start="593:25" pos:end="593:25">s</name><operator pos:start="593:26" pos:end="593:27">-&gt;</operator><name pos:start="593:28" pos:end="593:38">field_order</name></name> <operator pos:start="593:40" pos:end="593:40">=</operator> <name pos:start="593:42" pos:end="593:52">AV_FIELD_TT</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="595:21" pos:end="597:53">else<block type="pseudo" pos:start="597:25" pos:end="597:53"><block_content pos:start="597:25" pos:end="597:53">

                        <expr_stmt pos:start="597:25" pos:end="597:53"><expr pos:start="597:25" pos:end="597:52"><name pos:start="597:25" pos:end="597:38"><name pos:start="597:25" pos:end="597:25">s</name><operator pos:start="597:26" pos:end="597:27">-&gt;</operator><name pos:start="597:28" pos:end="597:38">field_order</name></name> <operator pos:start="597:40" pos:end="597:40">=</operator> <name pos:start="597:42" pos:end="597:52">AV_FIELD_BB</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="599:19" pos:end="603:17">else <block pos:start="599:24" pos:end="603:17">{<block_content pos:start="601:21" pos:end="601:54">

                    <expr_stmt pos:start="601:21" pos:end="601:54"><expr pos:start="601:21" pos:end="601:53"><name pos:start="601:21" pos:end="601:34"><name pos:start="601:21" pos:end="601:21">s</name><operator pos:start="601:22" pos:end="601:23">-&gt;</operator><name pos:start="601:24" pos:end="601:34">field_order</name></name> <operator pos:start="601:36" pos:end="601:36">=</operator> <name pos:start="601:38" pos:end="601:53">AV_FIELD_UNKNOWN</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="605:17" pos:end="605:65"><expr pos:start="605:17" pos:end="605:64"><name pos:start="605:17" pos:end="605:41"><name pos:start="605:17" pos:end="605:17">p</name><operator pos:start="605:18" pos:end="605:19">-&gt;</operator><name pos:start="605:20" pos:end="605:41">last_picture_structure</name></name> <operator pos:start="605:43" pos:end="605:43">=</operator> <name pos:start="605:45" pos:end="605:64"><name pos:start="605:45" pos:end="605:45">s</name><operator pos:start="605:46" pos:end="605:47">-&gt;</operator><name pos:start="605:48" pos:end="605:64">picture_structure</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="607:17" pos:end="607:53"><expr pos:start="607:17" pos:end="607:52"><name pos:start="607:17" pos:end="607:33"><name pos:start="607:17" pos:end="607:17">p</name><operator pos:start="607:18" pos:end="607:19">-&gt;</operator><name pos:start="607:20" pos:end="607:33">last_frame_num</name></name> <operator pos:start="607:35" pos:end="607:35">=</operator> <name pos:start="607:37" pos:end="607:52"><name pos:start="607:37" pos:end="607:37">p</name><operator pos:start="607:38" pos:end="607:39">-&gt;</operator><name pos:start="607:40" pos:end="607:42">poc</name><operator pos:start="607:43" pos:end="607:43">.</operator><name pos:start="607:44" pos:end="607:52">frame_num</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="613:13" pos:end="613:39"><expr pos:start="613:13" pos:end="613:38"><call pos:start="613:13" pos:end="613:38"><name pos:start="613:13" pos:end="613:20">av_freep</name><argument_list pos:start="613:21" pos:end="613:38">(<argument pos:start="613:22" pos:end="613:37"><expr pos:start="613:22" pos:end="613:37"><operator pos:start="613:22" pos:end="613:22">&amp;</operator><name pos:start="613:23" pos:end="613:37"><name pos:start="613:23" pos:end="613:25">nal</name><operator pos:start="613:26" pos:end="613:26">.</operator><name pos:start="613:27" pos:end="613:37">rbsp_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="615:13" pos:end="615:21">return <expr pos:start="615:20" pos:end="615:20"><literal type="number" pos:start="615:20" pos:end="615:20">0</literal></expr>;</return> <comment type="block" pos:start="615:23" pos:end="615:56">/* no need to evaluate the rest */</comment>

        </block_content>}</block></switch>

    </block_content>}</block></for>

    <if_stmt pos:start="621:5" pos:end="627:5"><if pos:start="621:5" pos:end="627:5">if <condition pos:start="621:8" pos:end="621:13">(<expr pos:start="621:9" pos:end="621:12"><name pos:start="621:9" pos:end="621:12">q264</name></expr>)</condition> <block pos:start="621:15" pos:end="627:5">{<block_content pos:start="623:9" pos:end="625:17">

        <expr_stmt pos:start="623:9" pos:end="623:35"><expr pos:start="623:9" pos:end="623:34"><call pos:start="623:9" pos:end="623:34"><name pos:start="623:9" pos:end="623:16">av_freep</name><argument_list pos:start="623:17" pos:end="623:34">(<argument pos:start="623:18" pos:end="623:33"><expr pos:start="623:18" pos:end="623:33"><operator pos:start="623:18" pos:end="623:18">&amp;</operator><name pos:start="623:19" pos:end="623:33"><name pos:start="623:19" pos:end="623:21">nal</name><operator pos:start="623:22" pos:end="623:22">.</operator><name pos:start="623:23" pos:end="623:33">rbsp_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="625:9" pos:end="625:17">return <expr pos:start="625:16" pos:end="625:16"><literal type="number" pos:start="625:16" pos:end="625:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="629:5" pos:end="629:32">/* didn't find a picture! */</comment>

    <expr_stmt pos:start="631:5" pos:end="631:91"><expr pos:start="631:5" pos:end="631:90"><call pos:start="631:5" pos:end="631:90"><name pos:start="631:5" pos:end="631:10">av_log</name><argument_list pos:start="631:11" pos:end="631:90">(<argument pos:start="631:12" pos:end="631:16"><expr pos:start="631:12" pos:end="631:16"><name pos:start="631:12" pos:end="631:16">avctx</name></expr></argument>, <argument pos:start="631:19" pos:end="631:30"><expr pos:start="631:19" pos:end="631:30"><name pos:start="631:19" pos:end="631:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="631:33" pos:end="631:79"><expr pos:start="631:33" pos:end="631:79"><literal type="string" pos:start="631:33" pos:end="631:79">"missing picture in access unit with size %d\n"</literal></expr></argument>, <argument pos:start="631:82" pos:end="631:89"><expr pos:start="631:82" pos:end="631:89"><name pos:start="631:82" pos:end="631:89">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="633:1" pos:end="633:5"><name pos:start="633:1" pos:end="633:4">fail</name>:</label>

    <expr_stmt pos:start="635:5" pos:end="635:31"><expr pos:start="635:5" pos:end="635:30"><call pos:start="635:5" pos:end="635:30"><name pos:start="635:5" pos:end="635:12">av_freep</name><argument_list pos:start="635:13" pos:end="635:30">(<argument pos:start="635:14" pos:end="635:29"><expr pos:start="635:14" pos:end="635:29"><operator pos:start="635:14" pos:end="635:14">&amp;</operator><name pos:start="635:15" pos:end="635:29"><name pos:start="635:15" pos:end="635:17">nal</name><operator pos:start="635:18" pos:end="635:18">.</operator><name pos:start="635:19" pos:end="635:29">rbsp_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="637:5" pos:end="637:14">return <expr pos:start="637:12" pos:end="637:13"><operator pos:start="637:12" pos:end="637:12">-</operator><literal type="number" pos:start="637:13" pos:end="637:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
