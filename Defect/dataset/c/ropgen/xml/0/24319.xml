<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24319.c" pos:tabs="8"><function pos:start="1:1" pos:end="1267:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">gen_dmtc0</name><parameter_list pos:start="1:22" pos:end="1:68">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:34">DisasContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">ctx</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:49"><decl pos:start="1:42" pos:end="1:49"><type pos:start="1:42" pos:end="1:49"><name pos:start="1:42" pos:end="1:45">TCGv</name></type> <name pos:start="1:47" pos:end="1:49">arg</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:58"><decl pos:start="1:52" pos:end="1:58"><type pos:start="1:52" pos:end="1:58"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:58">reg</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:67"><decl pos:start="1:61" pos:end="1:67"><type pos:start="1:61" pos:end="1:67"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:67">sel</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1267:1">{<block_content pos:start="5:5" pos:end="1265:58">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">rn</name> <init pos:start="5:20" pos:end="5:30">= <expr pos:start="5:22" pos:end="5:30"><literal type="string" pos:start="5:22" pos:end="5:30">"invalid"</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:36"><if pos:start="9:5" pos:end="11:36">if <condition pos:start="9:8" pos:end="9:17">(<expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:11">sel</name> <operator pos:start="9:13" pos:end="9:14">!=</operator> <literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:36"><block_content pos:start="11:9" pos:end="11:36">

        <expr_stmt pos:start="11:9" pos:end="11:36"><expr pos:start="11:9" pos:end="11:35"><call pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:18">check_insn</name><argument_list pos:start="11:19" pos:end="11:35">(<argument pos:start="11:20" pos:end="11:22"><expr pos:start="11:20" pos:end="11:22"><name pos:start="11:20" pos:end="11:22">ctx</name></expr></argument>, <argument pos:start="11:25" pos:end="11:34"><expr pos:start="11:25" pos:end="11:34"><name pos:start="11:25" pos:end="11:34">ISA_MIPS64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="17:23"><if pos:start="15:5" pos:end="17:23">if <condition pos:start="15:8" pos:end="15:19">(<expr pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:18">use_icount</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:23"><block_content pos:start="17:9" pos:end="17:23">

        <expr_stmt pos:start="17:9" pos:end="17:23"><expr pos:start="17:9" pos:end="17:22"><call pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:20">gen_io_start</name><argument_list pos:start="17:21" pos:end="17:22">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="21:5" pos:end="1243:5">switch <condition pos:start="21:12" pos:end="21:16">(<expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">reg</name></expr>)</condition> <block pos:start="21:18" pos:end="1243:5">{<block_content pos:start="23:5" pos:end="1241:31">

    <case pos:start="23:5" pos:end="23:11">case <expr pos:start="23:10" pos:end="23:10"><literal type="number" pos:start="23:10" pos:end="23:10">0</literal></expr>:</case>

        <switch pos:start="25:9" pos:end="69:9">switch <condition pos:start="25:16" pos:end="25:20">(<expr pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">sel</name></expr>)</condition> <block pos:start="25:22" pos:end="69:9">{<block_content pos:start="27:9" pos:end="67:35">

        <case pos:start="27:9" pos:end="27:15">case <expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:48"><expr pos:start="29:13" pos:end="29:47"><call pos:start="29:13" pos:end="29:47"><name pos:start="29:13" pos:end="29:33">gen_helper_mtc0_index</name><argument_list pos:start="29:34" pos:end="29:47">(<argument pos:start="29:35" pos:end="29:41"><expr pos:start="29:35" pos:end="29:41"><name pos:start="29:35" pos:end="29:41">cpu_env</name></expr></argument>, <argument pos:start="29:44" pos:end="29:46"><expr pos:start="29:44" pos:end="29:46"><name pos:start="29:44" pos:end="29:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:25"><expr pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:14">rn</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="string" pos:start="31:18" pos:end="31:24">"Index"</literal></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        <case pos:start="35:9" pos:end="35:15">case <expr pos:start="35:14" pos:end="35:14"><literal type="number" pos:start="35:14" pos:end="35:14">1</literal></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:48"><expr pos:start="37:13" pos:end="37:47"><call pos:start="37:13" pos:end="37:47"><name pos:start="37:13" pos:end="37:21">CP0_CHECK</name><argument_list pos:start="37:22" pos:end="37:47">(<argument pos:start="37:23" pos:end="37:46"><expr pos:start="37:23" pos:end="37:46"><name pos:start="37:23" pos:end="37:37"><name pos:start="37:23" pos:end="37:25">ctx</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:37">insn_flags</name></name> <operator pos:start="37:39" pos:end="37:39">&amp;</operator> <name pos:start="37:41" pos:end="37:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:53"><expr pos:start="39:13" pos:end="39:52"><call pos:start="39:13" pos:end="39:52"><name pos:start="39:13" pos:end="39:38">gen_helper_mtc0_mvpcontrol</name><argument_list pos:start="39:39" pos:end="39:52">(<argument pos:start="39:40" pos:end="39:46"><expr pos:start="39:40" pos:end="39:46"><name pos:start="39:40" pos:end="39:46">cpu_env</name></expr></argument>, <argument pos:start="39:49" pos:end="39:51"><expr pos:start="39:49" pos:end="39:51"><name pos:start="39:49" pos:end="39:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:30"><expr pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:14">rn</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="string" pos:start="41:18" pos:end="41:29">"MVPControl"</literal></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:15">case <expr pos:start="45:14" pos:end="45:14"><literal type="number" pos:start="45:14" pos:end="45:14">2</literal></expr>:</case>

            <expr_stmt pos:start="47:13" pos:end="47:48"><expr pos:start="47:13" pos:end="47:47"><call pos:start="47:13" pos:end="47:47"><name pos:start="47:13" pos:end="47:21">CP0_CHECK</name><argument_list pos:start="47:22" pos:end="47:47">(<argument pos:start="47:23" pos:end="47:46"><expr pos:start="47:23" pos:end="47:46"><name pos:start="47:23" pos:end="47:37"><name pos:start="47:23" pos:end="47:25">ctx</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:37">insn_flags</name></name> <operator pos:start="47:39" pos:end="47:39">&amp;</operator> <name pos:start="47:41" pos:end="47:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="49:13" pos:end="49:25">/* ignored */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:28"><expr pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:14">rn</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <literal type="string" pos:start="51:18" pos:end="51:27">"MVPConf0"</literal></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        <case pos:start="55:9" pos:end="55:15">case <expr pos:start="55:14" pos:end="55:14"><literal type="number" pos:start="55:14" pos:end="55:14">3</literal></expr>:</case>

            <expr_stmt pos:start="57:13" pos:end="57:48"><expr pos:start="57:13" pos:end="57:47"><call pos:start="57:13" pos:end="57:47"><name pos:start="57:13" pos:end="57:21">CP0_CHECK</name><argument_list pos:start="57:22" pos:end="57:47">(<argument pos:start="57:23" pos:end="57:46"><expr pos:start="57:23" pos:end="57:46"><name pos:start="57:23" pos:end="57:37"><name pos:start="57:23" pos:end="57:25">ctx</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:37">insn_flags</name></name> <operator pos:start="57:39" pos:end="57:39">&amp;</operator> <name pos:start="57:41" pos:end="57:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="59:13" pos:end="59:25">/* ignored */</comment>

            <expr_stmt pos:start="61:13" pos:end="61:28"><expr pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:14">rn</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="string" pos:start="61:18" pos:end="61:27">"MVPConf1"</literal></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <default pos:start="65:9" pos:end="65:16">default:</default>

            <goto pos:start="67:13" pos:end="67:35">goto <name pos:start="67:18" pos:end="67:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:11">case <expr pos:start="73:10" pos:end="73:10"><literal type="number" pos:start="73:10" pos:end="73:10">1</literal></expr>:</case>

        <switch pos:start="75:9" pos:end="159:9">switch <condition pos:start="75:16" pos:end="75:20">(<expr pos:start="75:17" pos:end="75:19"><name pos:start="75:17" pos:end="75:19">sel</name></expr>)</condition> <block pos:start="75:22" pos:end="159:9">{<block_content pos:start="77:9" pos:end="157:35">

        <case pos:start="77:9" pos:end="77:15">case <expr pos:start="77:14" pos:end="77:14"><literal type="number" pos:start="77:14" pos:end="77:14">0</literal></expr>:</case>

            <comment type="block" pos:start="79:13" pos:end="79:25">/* ignored */</comment>

            <expr_stmt pos:start="81:13" pos:end="81:26"><expr pos:start="81:13" pos:end="81:25"><name pos:start="81:13" pos:end="81:14">rn</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="string" pos:start="81:18" pos:end="81:25">"Random"</literal></expr>;</expr_stmt>

            <break pos:start="83:13" pos:end="83:18">break;</break>

        <case pos:start="85:9" pos:end="85:15">case <expr pos:start="85:14" pos:end="85:14"><literal type="number" pos:start="85:14" pos:end="85:14">1</literal></expr>:</case>

            <expr_stmt pos:start="87:13" pos:end="87:48"><expr pos:start="87:13" pos:end="87:47"><call pos:start="87:13" pos:end="87:47"><name pos:start="87:13" pos:end="87:21">CP0_CHECK</name><argument_list pos:start="87:22" pos:end="87:47">(<argument pos:start="87:23" pos:end="87:46"><expr pos:start="87:23" pos:end="87:46"><name pos:start="87:23" pos:end="87:37"><name pos:start="87:23" pos:end="87:25">ctx</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:37">insn_flags</name></name> <operator pos:start="87:39" pos:end="87:39">&amp;</operator> <name pos:start="87:41" pos:end="87:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:53"><expr pos:start="89:13" pos:end="89:52"><call pos:start="89:13" pos:end="89:52"><name pos:start="89:13" pos:end="89:38">gen_helper_mtc0_vpecontrol</name><argument_list pos:start="89:39" pos:end="89:52">(<argument pos:start="89:40" pos:end="89:46"><expr pos:start="89:40" pos:end="89:46"><name pos:start="89:40" pos:end="89:46">cpu_env</name></expr></argument>, <argument pos:start="89:49" pos:end="89:51"><expr pos:start="89:49" pos:end="89:51"><name pos:start="89:49" pos:end="89:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:30"><expr pos:start="91:13" pos:end="91:29"><name pos:start="91:13" pos:end="91:14">rn</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="string" pos:start="91:18" pos:end="91:29">"VPEControl"</literal></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:15">case <expr pos:start="95:14" pos:end="95:14"><literal type="number" pos:start="95:14" pos:end="95:14">2</literal></expr>:</case>

            <expr_stmt pos:start="97:13" pos:end="97:48"><expr pos:start="97:13" pos:end="97:47"><call pos:start="97:13" pos:end="97:47"><name pos:start="97:13" pos:end="97:21">CP0_CHECK</name><argument_list pos:start="97:22" pos:end="97:47">(<argument pos:start="97:23" pos:end="97:46"><expr pos:start="97:23" pos:end="97:46"><name pos:start="97:23" pos:end="97:37"><name pos:start="97:23" pos:end="97:25">ctx</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:37">insn_flags</name></name> <operator pos:start="97:39" pos:end="97:39">&amp;</operator> <name pos:start="97:41" pos:end="97:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:51"><expr pos:start="99:13" pos:end="99:50"><call pos:start="99:13" pos:end="99:50"><name pos:start="99:13" pos:end="99:36">gen_helper_mtc0_vpeconf0</name><argument_list pos:start="99:37" pos:end="99:50">(<argument pos:start="99:38" pos:end="99:44"><expr pos:start="99:38" pos:end="99:44"><name pos:start="99:38" pos:end="99:44">cpu_env</name></expr></argument>, <argument pos:start="99:47" pos:end="99:49"><expr pos:start="99:47" pos:end="99:49"><name pos:start="99:47" pos:end="99:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:28"><expr pos:start="101:13" pos:end="101:27"><name pos:start="101:13" pos:end="101:14">rn</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <literal type="string" pos:start="101:18" pos:end="101:27">"VPEConf0"</literal></expr>;</expr_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        <case pos:start="105:9" pos:end="105:15">case <expr pos:start="105:14" pos:end="105:14"><literal type="number" pos:start="105:14" pos:end="105:14">3</literal></expr>:</case>

            <expr_stmt pos:start="107:13" pos:end="107:48"><expr pos:start="107:13" pos:end="107:47"><call pos:start="107:13" pos:end="107:47"><name pos:start="107:13" pos:end="107:21">CP0_CHECK</name><argument_list pos:start="107:22" pos:end="107:47">(<argument pos:start="107:23" pos:end="107:46"><expr pos:start="107:23" pos:end="107:46"><name pos:start="107:23" pos:end="107:37"><name pos:start="107:23" pos:end="107:25">ctx</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:37">insn_flags</name></name> <operator pos:start="107:39" pos:end="107:39">&amp;</operator> <name pos:start="107:41" pos:end="107:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:51"><expr pos:start="109:13" pos:end="109:50"><call pos:start="109:13" pos:end="109:50"><name pos:start="109:13" pos:end="109:36">gen_helper_mtc0_vpeconf1</name><argument_list pos:start="109:37" pos:end="109:50">(<argument pos:start="109:38" pos:end="109:44"><expr pos:start="109:38" pos:end="109:44"><name pos:start="109:38" pos:end="109:44">cpu_env</name></expr></argument>, <argument pos:start="109:47" pos:end="109:49"><expr pos:start="109:47" pos:end="109:49"><name pos:start="109:47" pos:end="109:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:28"><expr pos:start="111:13" pos:end="111:27"><name pos:start="111:13" pos:end="111:14">rn</name> <operator pos:start="111:16" pos:end="111:16">=</operator> <literal type="string" pos:start="111:18" pos:end="111:27">"VPEConf1"</literal></expr>;</expr_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>

        <case pos:start="115:9" pos:end="115:15">case <expr pos:start="115:14" pos:end="115:14"><literal type="number" pos:start="115:14" pos:end="115:14">4</literal></expr>:</case>

            <expr_stmt pos:start="117:13" pos:end="117:48"><expr pos:start="117:13" pos:end="117:47"><call pos:start="117:13" pos:end="117:47"><name pos:start="117:13" pos:end="117:21">CP0_CHECK</name><argument_list pos:start="117:22" pos:end="117:47">(<argument pos:start="117:23" pos:end="117:46"><expr pos:start="117:23" pos:end="117:46"><name pos:start="117:23" pos:end="117:37"><name pos:start="117:23" pos:end="117:25">ctx</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:37">insn_flags</name></name> <operator pos:start="117:39" pos:end="117:39">&amp;</operator> <name pos:start="117:41" pos:end="117:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:49"><expr pos:start="119:13" pos:end="119:48"><call pos:start="119:13" pos:end="119:48"><name pos:start="119:13" pos:end="119:34">gen_helper_mtc0_yqmask</name><argument_list pos:start="119:35" pos:end="119:48">(<argument pos:start="119:36" pos:end="119:42"><expr pos:start="119:36" pos:end="119:42"><name pos:start="119:36" pos:end="119:42">cpu_env</name></expr></argument>, <argument pos:start="119:45" pos:end="119:47"><expr pos:start="119:45" pos:end="119:47"><name pos:start="119:45" pos:end="119:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:26"><expr pos:start="121:13" pos:end="121:25"><name pos:start="121:13" pos:end="121:14">rn</name> <operator pos:start="121:16" pos:end="121:16">=</operator> <literal type="string" pos:start="121:18" pos:end="121:25">"YQMask"</literal></expr>;</expr_stmt>

            <break pos:start="123:13" pos:end="123:18">break;</break>

        <case pos:start="125:9" pos:end="125:15">case <expr pos:start="125:14" pos:end="125:14"><literal type="number" pos:start="125:14" pos:end="125:14">5</literal></expr>:</case>

            <expr_stmt pos:start="127:13" pos:end="127:48"><expr pos:start="127:13" pos:end="127:47"><call pos:start="127:13" pos:end="127:47"><name pos:start="127:13" pos:end="127:21">CP0_CHECK</name><argument_list pos:start="127:22" pos:end="127:47">(<argument pos:start="127:23" pos:end="127:46"><expr pos:start="127:23" pos:end="127:46"><name pos:start="127:23" pos:end="127:37"><name pos:start="127:23" pos:end="127:25">ctx</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:37">insn_flags</name></name> <operator pos:start="127:39" pos:end="127:39">&amp;</operator> <name pos:start="127:41" pos:end="127:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:81"><expr pos:start="129:13" pos:end="129:80"><call pos:start="129:13" pos:end="129:80"><name pos:start="129:13" pos:end="129:25">tcg_gen_st_tl</name><argument_list pos:start="129:26" pos:end="129:80">(<argument pos:start="129:27" pos:end="129:29"><expr pos:start="129:27" pos:end="129:29"><name pos:start="129:27" pos:end="129:29">arg</name></expr></argument>, <argument pos:start="129:32" pos:end="129:38"><expr pos:start="129:32" pos:end="129:38"><name pos:start="129:32" pos:end="129:38">cpu_env</name></expr></argument>, <argument pos:start="129:41" pos:end="129:79"><expr pos:start="129:41" pos:end="129:79"><call pos:start="129:41" pos:end="129:79"><name pos:start="129:41" pos:end="129:48">offsetof</name><argument_list pos:start="129:49" pos:end="129:79">(<argument pos:start="129:50" pos:end="129:61"><expr pos:start="129:50" pos:end="129:61"><name pos:start="129:50" pos:end="129:61">CPUMIPSState</name></expr></argument>, <argument pos:start="129:64" pos:end="129:78"><expr pos:start="129:64" pos:end="129:78"><name pos:start="129:64" pos:end="129:78">CP0_VPESchedule</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:31"><expr pos:start="131:13" pos:end="131:30"><name pos:start="131:13" pos:end="131:14">rn</name> <operator pos:start="131:16" pos:end="131:16">=</operator> <literal type="string" pos:start="131:18" pos:end="131:30">"VPESchedule"</literal></expr>;</expr_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        <case pos:start="135:9" pos:end="135:15">case <expr pos:start="135:14" pos:end="135:14"><literal type="number" pos:start="135:14" pos:end="135:14">6</literal></expr>:</case>

            <expr_stmt pos:start="137:13" pos:end="137:48"><expr pos:start="137:13" pos:end="137:47"><call pos:start="137:13" pos:end="137:47"><name pos:start="137:13" pos:end="137:21">CP0_CHECK</name><argument_list pos:start="137:22" pos:end="137:47">(<argument pos:start="137:23" pos:end="137:46"><expr pos:start="137:23" pos:end="137:46"><name pos:start="137:23" pos:end="137:37"><name pos:start="137:23" pos:end="137:25">ctx</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:37">insn_flags</name></name> <operator pos:start="137:39" pos:end="137:39">&amp;</operator> <name pos:start="137:41" pos:end="137:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:82"><expr pos:start="139:13" pos:end="139:81"><call pos:start="139:13" pos:end="139:81"><name pos:start="139:13" pos:end="139:25">tcg_gen_st_tl</name><argument_list pos:start="139:26" pos:end="139:81">(<argument pos:start="139:27" pos:end="139:29"><expr pos:start="139:27" pos:end="139:29"><name pos:start="139:27" pos:end="139:29">arg</name></expr></argument>, <argument pos:start="139:32" pos:end="139:38"><expr pos:start="139:32" pos:end="139:38"><name pos:start="139:32" pos:end="139:38">cpu_env</name></expr></argument>, <argument pos:start="139:41" pos:end="139:80"><expr pos:start="139:41" pos:end="139:80"><call pos:start="139:41" pos:end="139:80"><name pos:start="139:41" pos:end="139:48">offsetof</name><argument_list pos:start="139:49" pos:end="139:80">(<argument pos:start="139:50" pos:end="139:61"><expr pos:start="139:50" pos:end="139:61"><name pos:start="139:50" pos:end="139:61">CPUMIPSState</name></expr></argument>, <argument pos:start="139:64" pos:end="139:79"><expr pos:start="139:64" pos:end="139:79"><name pos:start="139:64" pos:end="139:79">CP0_VPEScheFBack</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:32"><expr pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:14">rn</name> <operator pos:start="141:16" pos:end="141:16">=</operator> <literal type="string" pos:start="141:18" pos:end="141:31">"VPEScheFBack"</literal></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        <case pos:start="145:9" pos:end="145:15">case <expr pos:start="145:14" pos:end="145:14"><literal type="number" pos:start="145:14" pos:end="145:14">7</literal></expr>:</case>

            <expr_stmt pos:start="147:13" pos:end="147:48"><expr pos:start="147:13" pos:end="147:47"><call pos:start="147:13" pos:end="147:47"><name pos:start="147:13" pos:end="147:21">CP0_CHECK</name><argument_list pos:start="147:22" pos:end="147:47">(<argument pos:start="147:23" pos:end="147:46"><expr pos:start="147:23" pos:end="147:46"><name pos:start="147:23" pos:end="147:37"><name pos:start="147:23" pos:end="147:25">ctx</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:37">insn_flags</name></name> <operator pos:start="147:39" pos:end="147:39">&amp;</operator> <name pos:start="147:41" pos:end="147:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:49"><expr pos:start="149:13" pos:end="149:48"><call pos:start="149:13" pos:end="149:48"><name pos:start="149:13" pos:end="149:34">gen_helper_mtc0_vpeopt</name><argument_list pos:start="149:35" pos:end="149:48">(<argument pos:start="149:36" pos:end="149:42"><expr pos:start="149:36" pos:end="149:42"><name pos:start="149:36" pos:end="149:42">cpu_env</name></expr></argument>, <argument pos:start="149:45" pos:end="149:47"><expr pos:start="149:45" pos:end="149:47"><name pos:start="149:45" pos:end="149:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:26"><expr pos:start="151:13" pos:end="151:25"><name pos:start="151:13" pos:end="151:14">rn</name> <operator pos:start="151:16" pos:end="151:16">=</operator> <literal type="string" pos:start="151:18" pos:end="151:25">"VPEOpt"</literal></expr>;</expr_stmt>

            <break pos:start="153:13" pos:end="153:18">break;</break>

        <default pos:start="155:9" pos:end="155:16">default:</default>

            <goto pos:start="157:13" pos:end="157:35">goto <name pos:start="157:18" pos:end="157:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    <case pos:start="163:5" pos:end="163:11">case <expr pos:start="163:10" pos:end="163:10"><literal type="number" pos:start="163:10" pos:end="163:10">2</literal></expr>:</case>

        <switch pos:start="165:9" pos:end="249:9">switch <condition pos:start="165:16" pos:end="165:20">(<expr pos:start="165:17" pos:end="165:19"><name pos:start="165:17" pos:end="165:19">sel</name></expr>)</condition> <block pos:start="165:22" pos:end="249:9">{<block_content pos:start="167:9" pos:end="247:35">

        <case pos:start="167:9" pos:end="167:15">case <expr pos:start="167:14" pos:end="167:14"><literal type="number" pos:start="167:14" pos:end="167:14">0</literal></expr>:</case>

            <expr_stmt pos:start="169:13" pos:end="169:52"><expr pos:start="169:13" pos:end="169:51"><call pos:start="169:13" pos:end="169:51"><name pos:start="169:13" pos:end="169:37">gen_helper_dmtc0_entrylo0</name><argument_list pos:start="169:38" pos:end="169:51">(<argument pos:start="169:39" pos:end="169:45"><expr pos:start="169:39" pos:end="169:45"><name pos:start="169:39" pos:end="169:45">cpu_env</name></expr></argument>, <argument pos:start="169:48" pos:end="169:50"><expr pos:start="169:48" pos:end="169:50"><name pos:start="169:48" pos:end="169:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:28"><expr pos:start="171:13" pos:end="171:27"><name pos:start="171:13" pos:end="171:14">rn</name> <operator pos:start="171:16" pos:end="171:16">=</operator> <literal type="string" pos:start="171:18" pos:end="171:27">"EntryLo0"</literal></expr>;</expr_stmt>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        <case pos:start="175:9" pos:end="175:15">case <expr pos:start="175:14" pos:end="175:14"><literal type="number" pos:start="175:14" pos:end="175:14">1</literal></expr>:</case>

            <expr_stmt pos:start="177:13" pos:end="177:48"><expr pos:start="177:13" pos:end="177:47"><call pos:start="177:13" pos:end="177:47"><name pos:start="177:13" pos:end="177:21">CP0_CHECK</name><argument_list pos:start="177:22" pos:end="177:47">(<argument pos:start="177:23" pos:end="177:46"><expr pos:start="177:23" pos:end="177:46"><name pos:start="177:23" pos:end="177:37"><name pos:start="177:23" pos:end="177:25">ctx</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:37">insn_flags</name></name> <operator pos:start="177:39" pos:end="177:39">&amp;</operator> <name pos:start="177:41" pos:end="177:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:51"><expr pos:start="179:13" pos:end="179:50"><call pos:start="179:13" pos:end="179:50"><name pos:start="179:13" pos:end="179:36">gen_helper_mtc0_tcstatus</name><argument_list pos:start="179:37" pos:end="179:50">(<argument pos:start="179:38" pos:end="179:44"><expr pos:start="179:38" pos:end="179:44"><name pos:start="179:38" pos:end="179:44">cpu_env</name></expr></argument>, <argument pos:start="179:47" pos:end="179:49"><expr pos:start="179:47" pos:end="179:49"><name pos:start="179:47" pos:end="179:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:28"><expr pos:start="181:13" pos:end="181:27"><name pos:start="181:13" pos:end="181:14">rn</name> <operator pos:start="181:16" pos:end="181:16">=</operator> <literal type="string" pos:start="181:18" pos:end="181:27">"TCStatus"</literal></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>

        <case pos:start="185:9" pos:end="185:15">case <expr pos:start="185:14" pos:end="185:14"><literal type="number" pos:start="185:14" pos:end="185:14">2</literal></expr>:</case>

            <expr_stmt pos:start="187:13" pos:end="187:48"><expr pos:start="187:13" pos:end="187:47"><call pos:start="187:13" pos:end="187:47"><name pos:start="187:13" pos:end="187:21">CP0_CHECK</name><argument_list pos:start="187:22" pos:end="187:47">(<argument pos:start="187:23" pos:end="187:46"><expr pos:start="187:23" pos:end="187:46"><name pos:start="187:23" pos:end="187:37"><name pos:start="187:23" pos:end="187:25">ctx</name><operator pos:start="187:26" pos:end="187:27">-&gt;</operator><name pos:start="187:28" pos:end="187:37">insn_flags</name></name> <operator pos:start="187:39" pos:end="187:39">&amp;</operator> <name pos:start="187:41" pos:end="187:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:49"><expr pos:start="189:13" pos:end="189:48"><call pos:start="189:13" pos:end="189:48"><name pos:start="189:13" pos:end="189:34">gen_helper_mtc0_tcbind</name><argument_list pos:start="189:35" pos:end="189:48">(<argument pos:start="189:36" pos:end="189:42"><expr pos:start="189:36" pos:end="189:42"><name pos:start="189:36" pos:end="189:42">cpu_env</name></expr></argument>, <argument pos:start="189:45" pos:end="189:47"><expr pos:start="189:45" pos:end="189:47"><name pos:start="189:45" pos:end="189:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:26"><expr pos:start="191:13" pos:end="191:25"><name pos:start="191:13" pos:end="191:14">rn</name> <operator pos:start="191:16" pos:end="191:16">=</operator> <literal type="string" pos:start="191:18" pos:end="191:25">"TCBind"</literal></expr>;</expr_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        <case pos:start="195:9" pos:end="195:15">case <expr pos:start="195:14" pos:end="195:14"><literal type="number" pos:start="195:14" pos:end="195:14">3</literal></expr>:</case>

            <expr_stmt pos:start="197:13" pos:end="197:48"><expr pos:start="197:13" pos:end="197:47"><call pos:start="197:13" pos:end="197:47"><name pos:start="197:13" pos:end="197:21">CP0_CHECK</name><argument_list pos:start="197:22" pos:end="197:47">(<argument pos:start="197:23" pos:end="197:46"><expr pos:start="197:23" pos:end="197:46"><name pos:start="197:23" pos:end="197:37"><name pos:start="197:23" pos:end="197:25">ctx</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:37">insn_flags</name></name> <operator pos:start="197:39" pos:end="197:39">&amp;</operator> <name pos:start="197:41" pos:end="197:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:52"><expr pos:start="199:13" pos:end="199:51"><call pos:start="199:13" pos:end="199:51"><name pos:start="199:13" pos:end="199:37">gen_helper_mtc0_tcrestart</name><argument_list pos:start="199:38" pos:end="199:51">(<argument pos:start="199:39" pos:end="199:45"><expr pos:start="199:39" pos:end="199:45"><name pos:start="199:39" pos:end="199:45">cpu_env</name></expr></argument>, <argument pos:start="199:48" pos:end="199:50"><expr pos:start="199:48" pos:end="199:50"><name pos:start="199:48" pos:end="199:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:29"><expr pos:start="201:13" pos:end="201:28"><name pos:start="201:13" pos:end="201:14">rn</name> <operator pos:start="201:16" pos:end="201:16">=</operator> <literal type="string" pos:start="201:18" pos:end="201:28">"TCRestart"</literal></expr>;</expr_stmt>

            <break pos:start="203:13" pos:end="203:18">break;</break>

        <case pos:start="205:9" pos:end="205:15">case <expr pos:start="205:14" pos:end="205:14"><literal type="number" pos:start="205:14" pos:end="205:14">4</literal></expr>:</case>

            <expr_stmt pos:start="207:13" pos:end="207:48"><expr pos:start="207:13" pos:end="207:47"><call pos:start="207:13" pos:end="207:47"><name pos:start="207:13" pos:end="207:21">CP0_CHECK</name><argument_list pos:start="207:22" pos:end="207:47">(<argument pos:start="207:23" pos:end="207:46"><expr pos:start="207:23" pos:end="207:46"><name pos:start="207:23" pos:end="207:37"><name pos:start="207:23" pos:end="207:25">ctx</name><operator pos:start="207:26" pos:end="207:27">-&gt;</operator><name pos:start="207:28" pos:end="207:37">insn_flags</name></name> <operator pos:start="207:39" pos:end="207:39">&amp;</operator> <name pos:start="207:41" pos:end="207:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:49"><expr pos:start="209:13" pos:end="209:48"><call pos:start="209:13" pos:end="209:48"><name pos:start="209:13" pos:end="209:34">gen_helper_mtc0_tchalt</name><argument_list pos:start="209:35" pos:end="209:48">(<argument pos:start="209:36" pos:end="209:42"><expr pos:start="209:36" pos:end="209:42"><name pos:start="209:36" pos:end="209:42">cpu_env</name></expr></argument>, <argument pos:start="209:45" pos:end="209:47"><expr pos:start="209:45" pos:end="209:47"><name pos:start="209:45" pos:end="209:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:26"><expr pos:start="211:13" pos:end="211:25"><name pos:start="211:13" pos:end="211:14">rn</name> <operator pos:start="211:16" pos:end="211:16">=</operator> <literal type="string" pos:start="211:18" pos:end="211:25">"TCHalt"</literal></expr>;</expr_stmt>

            <break pos:start="213:13" pos:end="213:18">break;</break>

        <case pos:start="215:9" pos:end="215:15">case <expr pos:start="215:14" pos:end="215:14"><literal type="number" pos:start="215:14" pos:end="215:14">5</literal></expr>:</case>

            <expr_stmt pos:start="217:13" pos:end="217:48"><expr pos:start="217:13" pos:end="217:47"><call pos:start="217:13" pos:end="217:47"><name pos:start="217:13" pos:end="217:21">CP0_CHECK</name><argument_list pos:start="217:22" pos:end="217:47">(<argument pos:start="217:23" pos:end="217:46"><expr pos:start="217:23" pos:end="217:46"><name pos:start="217:23" pos:end="217:37"><name pos:start="217:23" pos:end="217:25">ctx</name><operator pos:start="217:26" pos:end="217:27">-&gt;</operator><name pos:start="217:28" pos:end="217:37">insn_flags</name></name> <operator pos:start="217:39" pos:end="217:39">&amp;</operator> <name pos:start="217:41" pos:end="217:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:52"><expr pos:start="219:13" pos:end="219:51"><call pos:start="219:13" pos:end="219:51"><name pos:start="219:13" pos:end="219:37">gen_helper_mtc0_tccontext</name><argument_list pos:start="219:38" pos:end="219:51">(<argument pos:start="219:39" pos:end="219:45"><expr pos:start="219:39" pos:end="219:45"><name pos:start="219:39" pos:end="219:45">cpu_env</name></expr></argument>, <argument pos:start="219:48" pos:end="219:50"><expr pos:start="219:48" pos:end="219:50"><name pos:start="219:48" pos:end="219:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:29"><expr pos:start="221:13" pos:end="221:28"><name pos:start="221:13" pos:end="221:14">rn</name> <operator pos:start="221:16" pos:end="221:16">=</operator> <literal type="string" pos:start="221:18" pos:end="221:28">"TCContext"</literal></expr>;</expr_stmt>

            <break pos:start="223:13" pos:end="223:18">break;</break>

        <case pos:start="225:9" pos:end="225:15">case <expr pos:start="225:14" pos:end="225:14"><literal type="number" pos:start="225:14" pos:end="225:14">6</literal></expr>:</case>

            <expr_stmt pos:start="227:13" pos:end="227:48"><expr pos:start="227:13" pos:end="227:47"><call pos:start="227:13" pos:end="227:47"><name pos:start="227:13" pos:end="227:21">CP0_CHECK</name><argument_list pos:start="227:22" pos:end="227:47">(<argument pos:start="227:23" pos:end="227:46"><expr pos:start="227:23" pos:end="227:46"><name pos:start="227:23" pos:end="227:37"><name pos:start="227:23" pos:end="227:25">ctx</name><operator pos:start="227:26" pos:end="227:27">-&gt;</operator><name pos:start="227:28" pos:end="227:37">insn_flags</name></name> <operator pos:start="227:39" pos:end="227:39">&amp;</operator> <name pos:start="227:41" pos:end="227:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:53"><expr pos:start="229:13" pos:end="229:52"><call pos:start="229:13" pos:end="229:52"><name pos:start="229:13" pos:end="229:38">gen_helper_mtc0_tcschedule</name><argument_list pos:start="229:39" pos:end="229:52">(<argument pos:start="229:40" pos:end="229:46"><expr pos:start="229:40" pos:end="229:46"><name pos:start="229:40" pos:end="229:46">cpu_env</name></expr></argument>, <argument pos:start="229:49" pos:end="229:51"><expr pos:start="229:49" pos:end="229:51"><name pos:start="229:49" pos:end="229:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:30"><expr pos:start="231:13" pos:end="231:29"><name pos:start="231:13" pos:end="231:14">rn</name> <operator pos:start="231:16" pos:end="231:16">=</operator> <literal type="string" pos:start="231:18" pos:end="231:29">"TCSchedule"</literal></expr>;</expr_stmt>

            <break pos:start="233:13" pos:end="233:18">break;</break>

        <case pos:start="235:9" pos:end="235:15">case <expr pos:start="235:14" pos:end="235:14"><literal type="number" pos:start="235:14" pos:end="235:14">7</literal></expr>:</case>

            <expr_stmt pos:start="237:13" pos:end="237:48"><expr pos:start="237:13" pos:end="237:47"><call pos:start="237:13" pos:end="237:47"><name pos:start="237:13" pos:end="237:21">CP0_CHECK</name><argument_list pos:start="237:22" pos:end="237:47">(<argument pos:start="237:23" pos:end="237:46"><expr pos:start="237:23" pos:end="237:46"><name pos:start="237:23" pos:end="237:37"><name pos:start="237:23" pos:end="237:25">ctx</name><operator pos:start="237:26" pos:end="237:27">-&gt;</operator><name pos:start="237:28" pos:end="237:37">insn_flags</name></name> <operator pos:start="237:39" pos:end="237:39">&amp;</operator> <name pos:start="237:41" pos:end="237:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:54"><expr pos:start="239:13" pos:end="239:53"><call pos:start="239:13" pos:end="239:53"><name pos:start="239:13" pos:end="239:39">gen_helper_mtc0_tcschefback</name><argument_list pos:start="239:40" pos:end="239:53">(<argument pos:start="239:41" pos:end="239:47"><expr pos:start="239:41" pos:end="239:47"><name pos:start="239:41" pos:end="239:47">cpu_env</name></expr></argument>, <argument pos:start="239:50" pos:end="239:52"><expr pos:start="239:50" pos:end="239:52"><name pos:start="239:50" pos:end="239:52">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:31"><expr pos:start="241:13" pos:end="241:30"><name pos:start="241:13" pos:end="241:14">rn</name> <operator pos:start="241:16" pos:end="241:16">=</operator> <literal type="string" pos:start="241:18" pos:end="241:30">"TCScheFBack"</literal></expr>;</expr_stmt>

            <break pos:start="243:13" pos:end="243:18">break;</break>

        <default pos:start="245:9" pos:end="245:16">default:</default>

            <goto pos:start="247:13" pos:end="247:35">goto <name pos:start="247:18" pos:end="247:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="251:9" pos:end="251:14">break;</break>

    <case pos:start="253:5" pos:end="253:11">case <expr pos:start="253:10" pos:end="253:10"><literal type="number" pos:start="253:10" pos:end="253:10">3</literal></expr>:</case>

        <switch pos:start="255:9" pos:end="269:9">switch <condition pos:start="255:16" pos:end="255:20">(<expr pos:start="255:17" pos:end="255:19"><name pos:start="255:17" pos:end="255:19">sel</name></expr>)</condition> <block pos:start="255:22" pos:end="269:9">{<block_content pos:start="257:9" pos:end="267:35">

        <case pos:start="257:9" pos:end="257:15">case <expr pos:start="257:14" pos:end="257:14"><literal type="number" pos:start="257:14" pos:end="257:14">0</literal></expr>:</case>

            <expr_stmt pos:start="259:13" pos:end="259:52"><expr pos:start="259:13" pos:end="259:51"><call pos:start="259:13" pos:end="259:51"><name pos:start="259:13" pos:end="259:37">gen_helper_dmtc0_entrylo1</name><argument_list pos:start="259:38" pos:end="259:51">(<argument pos:start="259:39" pos:end="259:45"><expr pos:start="259:39" pos:end="259:45"><name pos:start="259:39" pos:end="259:45">cpu_env</name></expr></argument>, <argument pos:start="259:48" pos:end="259:50"><expr pos:start="259:48" pos:end="259:50"><name pos:start="259:48" pos:end="259:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:28"><expr pos:start="261:13" pos:end="261:27"><name pos:start="261:13" pos:end="261:14">rn</name> <operator pos:start="261:16" pos:end="261:16">=</operator> <literal type="string" pos:start="261:18" pos:end="261:27">"EntryLo1"</literal></expr>;</expr_stmt>

            <break pos:start="263:13" pos:end="263:18">break;</break>

        <default pos:start="265:9" pos:end="265:16">default:</default>

            <goto pos:start="267:13" pos:end="267:35">goto <name pos:start="267:18" pos:end="267:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="271:9" pos:end="271:14">break;</break>

    <case pos:start="273:5" pos:end="273:11">case <expr pos:start="273:10" pos:end="273:10"><literal type="number" pos:start="273:10" pos:end="273:10">4</literal></expr>:</case>

        <switch pos:start="275:9" pos:end="311:9">switch <condition pos:start="275:16" pos:end="275:20">(<expr pos:start="275:17" pos:end="275:19"><name pos:start="275:17" pos:end="275:19">sel</name></expr>)</condition> <block pos:start="275:22" pos:end="311:9">{<block_content pos:start="277:9" pos:end="309:35">

        <case pos:start="277:9" pos:end="277:15">case <expr pos:start="277:14" pos:end="277:14"><literal type="number" pos:start="277:14" pos:end="277:14">0</literal></expr>:</case>

            <expr_stmt pos:start="279:13" pos:end="279:50"><expr pos:start="279:13" pos:end="279:49"><call pos:start="279:13" pos:end="279:49"><name pos:start="279:13" pos:end="279:35">gen_helper_mtc0_context</name><argument_list pos:start="279:36" pos:end="279:49">(<argument pos:start="279:37" pos:end="279:43"><expr pos:start="279:37" pos:end="279:43"><name pos:start="279:37" pos:end="279:43">cpu_env</name></expr></argument>, <argument pos:start="279:46" pos:end="279:48"><expr pos:start="279:46" pos:end="279:48"><name pos:start="279:46" pos:end="279:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:27"><expr pos:start="281:13" pos:end="281:26"><name pos:start="281:13" pos:end="281:14">rn</name> <operator pos:start="281:16" pos:end="281:16">=</operator> <literal type="string" pos:start="281:18" pos:end="281:26">"Context"</literal></expr>;</expr_stmt>

            <break pos:start="283:13" pos:end="283:18">break;</break>

        <case pos:start="285:9" pos:end="285:15">case <expr pos:start="285:14" pos:end="285:14"><literal type="number" pos:start="285:14" pos:end="285:14">1</literal></expr>:</case>

<comment type="line" pos:start="287:1" pos:end="287:77">//           gen_helper_mtc0_contextconfig(cpu_env, arg); /* SmartMIPS ASE */</comment>

            <expr_stmt pos:start="289:13" pos:end="289:33"><expr pos:start="289:13" pos:end="289:32"><name pos:start="289:13" pos:end="289:14">rn</name> <operator pos:start="289:16" pos:end="289:16">=</operator> <literal type="string" pos:start="289:18" pos:end="289:32">"ContextConfig"</literal></expr>;</expr_stmt>

            <goto pos:start="291:13" pos:end="291:35">goto <name pos:start="291:18" pos:end="291:34">cp0_unimplemented</name>;</goto>

<comment type="line" pos:start="293:1" pos:end="293:19">//           break;</comment>

        <case pos:start="295:9" pos:end="295:15">case <expr pos:start="295:14" pos:end="295:14"><literal type="number" pos:start="295:14" pos:end="295:14">2</literal></expr>:</case>

            <expr_stmt pos:start="297:13" pos:end="297:33"><expr pos:start="297:13" pos:end="297:32"><call pos:start="297:13" pos:end="297:32"><name pos:start="297:13" pos:end="297:21">CP0_CHECK</name><argument_list pos:start="297:22" pos:end="297:32">(<argument pos:start="297:23" pos:end="297:31"><expr pos:start="297:23" pos:end="297:31"><name pos:start="297:23" pos:end="297:31"><name pos:start="297:23" pos:end="297:25">ctx</name><operator pos:start="297:26" pos:end="297:27">-&gt;</operator><name pos:start="297:28" pos:end="297:31">ulri</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="301:75"><expr pos:start="299:13" pos:end="301:74"><call pos:start="299:13" pos:end="301:74"><name pos:start="299:13" pos:end="299:25">tcg_gen_st_tl</name><argument_list pos:start="299:26" pos:end="301:74">(<argument pos:start="299:27" pos:end="299:29"><expr pos:start="299:27" pos:end="299:29"><name pos:start="299:27" pos:end="299:29">arg</name></expr></argument>, <argument pos:start="299:32" pos:end="299:38"><expr pos:start="299:32" pos:end="299:38"><name pos:start="299:32" pos:end="299:38">cpu_env</name></expr></argument>,

                          <argument pos:start="301:27" pos:end="301:73"><expr pos:start="301:27" pos:end="301:73"><call pos:start="301:27" pos:end="301:73"><name pos:start="301:27" pos:end="301:34">offsetof</name><argument_list pos:start="301:35" pos:end="301:73">(<argument pos:start="301:36" pos:end="301:47"><expr pos:start="301:36" pos:end="301:47"><name pos:start="301:36" pos:end="301:47">CPUMIPSState</name></expr></argument>, <argument pos:start="301:50" pos:end="301:72"><expr pos:start="301:50" pos:end="301:72"><name pos:start="301:50" pos:end="301:72"><name pos:start="301:50" pos:end="301:58">active_tc</name><operator pos:start="301:59" pos:end="301:59">.</operator><name pos:start="301:60" pos:end="301:72">CP0_UserLocal</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:29"><expr pos:start="303:13" pos:end="303:28"><name pos:start="303:13" pos:end="303:14">rn</name> <operator pos:start="303:16" pos:end="303:16">=</operator> <literal type="string" pos:start="303:18" pos:end="303:28">"UserLocal"</literal></expr>;</expr_stmt>

            <break pos:start="305:13" pos:end="305:18">break;</break>

        <default pos:start="307:9" pos:end="307:16">default:</default>

            <goto pos:start="309:13" pos:end="309:35">goto <name pos:start="309:18" pos:end="309:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="313:9" pos:end="313:14">break;</break>

    <case pos:start="315:5" pos:end="315:11">case <expr pos:start="315:10" pos:end="315:10"><literal type="number" pos:start="315:10" pos:end="315:10">5</literal></expr>:</case>

        <switch pos:start="317:9" pos:end="341:9">switch <condition pos:start="317:16" pos:end="317:20">(<expr pos:start="317:17" pos:end="317:19"><name pos:start="317:17" pos:end="317:19">sel</name></expr>)</condition> <block pos:start="317:22" pos:end="341:9">{<block_content pos:start="319:9" pos:end="339:35">

        <case pos:start="319:9" pos:end="319:15">case <expr pos:start="319:14" pos:end="319:14"><literal type="number" pos:start="319:14" pos:end="319:14">0</literal></expr>:</case>

            <expr_stmt pos:start="321:13" pos:end="321:51"><expr pos:start="321:13" pos:end="321:50"><call pos:start="321:13" pos:end="321:50"><name pos:start="321:13" pos:end="321:36">gen_helper_mtc0_pagemask</name><argument_list pos:start="321:37" pos:end="321:50">(<argument pos:start="321:38" pos:end="321:44"><expr pos:start="321:38" pos:end="321:44"><name pos:start="321:38" pos:end="321:44">cpu_env</name></expr></argument>, <argument pos:start="321:47" pos:end="321:49"><expr pos:start="321:47" pos:end="321:49"><name pos:start="321:47" pos:end="321:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:28"><expr pos:start="323:13" pos:end="323:27"><name pos:start="323:13" pos:end="323:14">rn</name> <operator pos:start="323:16" pos:end="323:16">=</operator> <literal type="string" pos:start="323:18" pos:end="323:27">"PageMask"</literal></expr>;</expr_stmt>

            <break pos:start="325:13" pos:end="325:18">break;</break>

        <case pos:start="327:9" pos:end="327:15">case <expr pos:start="327:14" pos:end="327:14"><literal type="number" pos:start="327:14" pos:end="327:14">1</literal></expr>:</case>

            <expr_stmt pos:start="329:13" pos:end="329:42"><expr pos:start="329:13" pos:end="329:41"><call pos:start="329:13" pos:end="329:41"><name pos:start="329:13" pos:end="329:22">check_insn</name><argument_list pos:start="329:23" pos:end="329:41">(<argument pos:start="329:24" pos:end="329:26"><expr pos:start="329:24" pos:end="329:26"><name pos:start="329:24" pos:end="329:26">ctx</name></expr></argument>, <argument pos:start="329:29" pos:end="329:40"><expr pos:start="329:29" pos:end="329:40"><name pos:start="329:29" pos:end="329:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:52"><expr pos:start="331:13" pos:end="331:51"><call pos:start="331:13" pos:end="331:51"><name pos:start="331:13" pos:end="331:37">gen_helper_mtc0_pagegrain</name><argument_list pos:start="331:38" pos:end="331:51">(<argument pos:start="331:39" pos:end="331:45"><expr pos:start="331:39" pos:end="331:45"><name pos:start="331:39" pos:end="331:45">cpu_env</name></expr></argument>, <argument pos:start="331:48" pos:end="331:50"><expr pos:start="331:48" pos:end="331:50"><name pos:start="331:48" pos:end="331:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:29"><expr pos:start="333:13" pos:end="333:28"><name pos:start="333:13" pos:end="333:14">rn</name> <operator pos:start="333:16" pos:end="333:16">=</operator> <literal type="string" pos:start="333:18" pos:end="333:28">"PageGrain"</literal></expr>;</expr_stmt>

            <break pos:start="335:13" pos:end="335:18">break;</break>

        <default pos:start="337:9" pos:end="337:16">default:</default>

            <goto pos:start="339:13" pos:end="339:35">goto <name pos:start="339:18" pos:end="339:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="343:9" pos:end="343:14">break;</break>

    <case pos:start="345:5" pos:end="345:11">case <expr pos:start="345:10" pos:end="345:10"><literal type="number" pos:start="345:10" pos:end="345:10">6</literal></expr>:</case>

        <switch pos:start="347:9" pos:end="411:9">switch <condition pos:start="347:16" pos:end="347:20">(<expr pos:start="347:17" pos:end="347:19"><name pos:start="347:17" pos:end="347:19">sel</name></expr>)</condition> <block pos:start="347:22" pos:end="411:9">{<block_content pos:start="349:9" pos:end="409:35">

        <case pos:start="349:9" pos:end="349:15">case <expr pos:start="349:14" pos:end="349:14"><literal type="number" pos:start="349:14" pos:end="349:14">0</literal></expr>:</case>

            <expr_stmt pos:start="351:13" pos:end="351:48"><expr pos:start="351:13" pos:end="351:47"><call pos:start="351:13" pos:end="351:47"><name pos:start="351:13" pos:end="351:33">gen_helper_mtc0_wired</name><argument_list pos:start="351:34" pos:end="351:47">(<argument pos:start="351:35" pos:end="351:41"><expr pos:start="351:35" pos:end="351:41"><name pos:start="351:35" pos:end="351:41">cpu_env</name></expr></argument>, <argument pos:start="351:44" pos:end="351:46"><expr pos:start="351:44" pos:end="351:46"><name pos:start="351:44" pos:end="351:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:25"><expr pos:start="353:13" pos:end="353:24"><name pos:start="353:13" pos:end="353:14">rn</name> <operator pos:start="353:16" pos:end="353:16">=</operator> <literal type="string" pos:start="353:18" pos:end="353:24">"Wired"</literal></expr>;</expr_stmt>

            <break pos:start="355:13" pos:end="355:18">break;</break>

        <case pos:start="357:9" pos:end="357:15">case <expr pos:start="357:14" pos:end="357:14"><literal type="number" pos:start="357:14" pos:end="357:14">1</literal></expr>:</case>

            <expr_stmt pos:start="359:13" pos:end="359:42"><expr pos:start="359:13" pos:end="359:41"><call pos:start="359:13" pos:end="359:41"><name pos:start="359:13" pos:end="359:22">check_insn</name><argument_list pos:start="359:23" pos:end="359:41">(<argument pos:start="359:24" pos:end="359:26"><expr pos:start="359:24" pos:end="359:26"><name pos:start="359:24" pos:end="359:26">ctx</name></expr></argument>, <argument pos:start="359:29" pos:end="359:40"><expr pos:start="359:29" pos:end="359:40"><name pos:start="359:29" pos:end="359:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:51"><expr pos:start="361:13" pos:end="361:50"><call pos:start="361:13" pos:end="361:50"><name pos:start="361:13" pos:end="361:36">gen_helper_mtc0_srsconf0</name><argument_list pos:start="361:37" pos:end="361:50">(<argument pos:start="361:38" pos:end="361:44"><expr pos:start="361:38" pos:end="361:44"><name pos:start="361:38" pos:end="361:44">cpu_env</name></expr></argument>, <argument pos:start="361:47" pos:end="361:49"><expr pos:start="361:47" pos:end="361:49"><name pos:start="361:47" pos:end="361:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:28"><expr pos:start="363:13" pos:end="363:27"><name pos:start="363:13" pos:end="363:14">rn</name> <operator pos:start="363:16" pos:end="363:16">=</operator> <literal type="string" pos:start="363:18" pos:end="363:27">"SRSConf0"</literal></expr>;</expr_stmt>

            <break pos:start="365:13" pos:end="365:18">break;</break>

        <case pos:start="367:9" pos:end="367:15">case <expr pos:start="367:14" pos:end="367:14"><literal type="number" pos:start="367:14" pos:end="367:14">2</literal></expr>:</case>

            <expr_stmt pos:start="369:13" pos:end="369:42"><expr pos:start="369:13" pos:end="369:41"><call pos:start="369:13" pos:end="369:41"><name pos:start="369:13" pos:end="369:22">check_insn</name><argument_list pos:start="369:23" pos:end="369:41">(<argument pos:start="369:24" pos:end="369:26"><expr pos:start="369:24" pos:end="369:26"><name pos:start="369:24" pos:end="369:26">ctx</name></expr></argument>, <argument pos:start="369:29" pos:end="369:40"><expr pos:start="369:29" pos:end="369:40"><name pos:start="369:29" pos:end="369:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:51"><expr pos:start="371:13" pos:end="371:50"><call pos:start="371:13" pos:end="371:50"><name pos:start="371:13" pos:end="371:36">gen_helper_mtc0_srsconf1</name><argument_list pos:start="371:37" pos:end="371:50">(<argument pos:start="371:38" pos:end="371:44"><expr pos:start="371:38" pos:end="371:44"><name pos:start="371:38" pos:end="371:44">cpu_env</name></expr></argument>, <argument pos:start="371:47" pos:end="371:49"><expr pos:start="371:47" pos:end="371:49"><name pos:start="371:47" pos:end="371:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:28"><expr pos:start="373:13" pos:end="373:27"><name pos:start="373:13" pos:end="373:14">rn</name> <operator pos:start="373:16" pos:end="373:16">=</operator> <literal type="string" pos:start="373:18" pos:end="373:27">"SRSConf1"</literal></expr>;</expr_stmt>

            <break pos:start="375:13" pos:end="375:18">break;</break>

        <case pos:start="377:9" pos:end="377:15">case <expr pos:start="377:14" pos:end="377:14"><literal type="number" pos:start="377:14" pos:end="377:14">3</literal></expr>:</case>

            <expr_stmt pos:start="379:13" pos:end="379:42"><expr pos:start="379:13" pos:end="379:41"><call pos:start="379:13" pos:end="379:41"><name pos:start="379:13" pos:end="379:22">check_insn</name><argument_list pos:start="379:23" pos:end="379:41">(<argument pos:start="379:24" pos:end="379:26"><expr pos:start="379:24" pos:end="379:26"><name pos:start="379:24" pos:end="379:26">ctx</name></expr></argument>, <argument pos:start="379:29" pos:end="379:40"><expr pos:start="379:29" pos:end="379:40"><name pos:start="379:29" pos:end="379:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="381:13" pos:end="381:51"><expr pos:start="381:13" pos:end="381:50"><call pos:start="381:13" pos:end="381:50"><name pos:start="381:13" pos:end="381:36">gen_helper_mtc0_srsconf2</name><argument_list pos:start="381:37" pos:end="381:50">(<argument pos:start="381:38" pos:end="381:44"><expr pos:start="381:38" pos:end="381:44"><name pos:start="381:38" pos:end="381:44">cpu_env</name></expr></argument>, <argument pos:start="381:47" pos:end="381:49"><expr pos:start="381:47" pos:end="381:49"><name pos:start="381:47" pos:end="381:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="383:13" pos:end="383:28"><expr pos:start="383:13" pos:end="383:27"><name pos:start="383:13" pos:end="383:14">rn</name> <operator pos:start="383:16" pos:end="383:16">=</operator> <literal type="string" pos:start="383:18" pos:end="383:27">"SRSConf2"</literal></expr>;</expr_stmt>

            <break pos:start="385:13" pos:end="385:18">break;</break>

        <case pos:start="387:9" pos:end="387:15">case <expr pos:start="387:14" pos:end="387:14"><literal type="number" pos:start="387:14" pos:end="387:14">4</literal></expr>:</case>

            <expr_stmt pos:start="389:13" pos:end="389:42"><expr pos:start="389:13" pos:end="389:41"><call pos:start="389:13" pos:end="389:41"><name pos:start="389:13" pos:end="389:22">check_insn</name><argument_list pos:start="389:23" pos:end="389:41">(<argument pos:start="389:24" pos:end="389:26"><expr pos:start="389:24" pos:end="389:26"><name pos:start="389:24" pos:end="389:26">ctx</name></expr></argument>, <argument pos:start="389:29" pos:end="389:40"><expr pos:start="389:29" pos:end="389:40"><name pos:start="389:29" pos:end="389:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="391:13" pos:end="391:51"><expr pos:start="391:13" pos:end="391:50"><call pos:start="391:13" pos:end="391:50"><name pos:start="391:13" pos:end="391:36">gen_helper_mtc0_srsconf3</name><argument_list pos:start="391:37" pos:end="391:50">(<argument pos:start="391:38" pos:end="391:44"><expr pos:start="391:38" pos:end="391:44"><name pos:start="391:38" pos:end="391:44">cpu_env</name></expr></argument>, <argument pos:start="391:47" pos:end="391:49"><expr pos:start="391:47" pos:end="391:49"><name pos:start="391:47" pos:end="391:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:28"><expr pos:start="393:13" pos:end="393:27"><name pos:start="393:13" pos:end="393:14">rn</name> <operator pos:start="393:16" pos:end="393:16">=</operator> <literal type="string" pos:start="393:18" pos:end="393:27">"SRSConf3"</literal></expr>;</expr_stmt>

            <break pos:start="395:13" pos:end="395:18">break;</break>

        <case pos:start="397:9" pos:end="397:15">case <expr pos:start="397:14" pos:end="397:14"><literal type="number" pos:start="397:14" pos:end="397:14">5</literal></expr>:</case>

            <expr_stmt pos:start="399:13" pos:end="399:42"><expr pos:start="399:13" pos:end="399:41"><call pos:start="399:13" pos:end="399:41"><name pos:start="399:13" pos:end="399:22">check_insn</name><argument_list pos:start="399:23" pos:end="399:41">(<argument pos:start="399:24" pos:end="399:26"><expr pos:start="399:24" pos:end="399:26"><name pos:start="399:24" pos:end="399:26">ctx</name></expr></argument>, <argument pos:start="399:29" pos:end="399:40"><expr pos:start="399:29" pos:end="399:40"><name pos:start="399:29" pos:end="399:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="401:13" pos:end="401:51"><expr pos:start="401:13" pos:end="401:50"><call pos:start="401:13" pos:end="401:50"><name pos:start="401:13" pos:end="401:36">gen_helper_mtc0_srsconf4</name><argument_list pos:start="401:37" pos:end="401:50">(<argument pos:start="401:38" pos:end="401:44"><expr pos:start="401:38" pos:end="401:44"><name pos:start="401:38" pos:end="401:44">cpu_env</name></expr></argument>, <argument pos:start="401:47" pos:end="401:49"><expr pos:start="401:47" pos:end="401:49"><name pos:start="401:47" pos:end="401:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="403:13" pos:end="403:28"><expr pos:start="403:13" pos:end="403:27"><name pos:start="403:13" pos:end="403:14">rn</name> <operator pos:start="403:16" pos:end="403:16">=</operator> <literal type="string" pos:start="403:18" pos:end="403:27">"SRSConf4"</literal></expr>;</expr_stmt>

            <break pos:start="405:13" pos:end="405:18">break;</break>

        <default pos:start="407:9" pos:end="407:16">default:</default>

            <goto pos:start="409:13" pos:end="409:35">goto <name pos:start="409:18" pos:end="409:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="413:9" pos:end="413:14">break;</break>

    <case pos:start="415:5" pos:end="415:11">case <expr pos:start="415:10" pos:end="415:10"><literal type="number" pos:start="415:10" pos:end="415:10">7</literal></expr>:</case>

        <switch pos:start="417:9" pos:end="435:9">switch <condition pos:start="417:16" pos:end="417:20">(<expr pos:start="417:17" pos:end="417:19"><name pos:start="417:17" pos:end="417:19">sel</name></expr>)</condition> <block pos:start="417:22" pos:end="435:9">{<block_content pos:start="419:9" pos:end="433:35">

        <case pos:start="419:9" pos:end="419:15">case <expr pos:start="419:14" pos:end="419:14"><literal type="number" pos:start="419:14" pos:end="419:14">0</literal></expr>:</case>

            <expr_stmt pos:start="421:13" pos:end="421:42"><expr pos:start="421:13" pos:end="421:41"><call pos:start="421:13" pos:end="421:41"><name pos:start="421:13" pos:end="421:22">check_insn</name><argument_list pos:start="421:23" pos:end="421:41">(<argument pos:start="421:24" pos:end="421:26"><expr pos:start="421:24" pos:end="421:26"><name pos:start="421:24" pos:end="421:26">ctx</name></expr></argument>, <argument pos:start="421:29" pos:end="421:40"><expr pos:start="421:29" pos:end="421:40"><name pos:start="421:29" pos:end="421:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="423:13" pos:end="423:49"><expr pos:start="423:13" pos:end="423:48"><call pos:start="423:13" pos:end="423:48"><name pos:start="423:13" pos:end="423:34">gen_helper_mtc0_hwrena</name><argument_list pos:start="423:35" pos:end="423:48">(<argument pos:start="423:36" pos:end="423:42"><expr pos:start="423:36" pos:end="423:42"><name pos:start="423:36" pos:end="423:42">cpu_env</name></expr></argument>, <argument pos:start="423:45" pos:end="423:47"><expr pos:start="423:45" pos:end="423:47"><name pos:start="423:45" pos:end="423:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:34"><expr pos:start="425:13" pos:end="425:33"><name pos:start="425:13" pos:end="425:23"><name pos:start="425:13" pos:end="425:15">ctx</name><operator pos:start="425:16" pos:end="425:17">-&gt;</operator><name pos:start="425:18" pos:end="425:23">bstate</name></name> <operator pos:start="425:25" pos:end="425:25">=</operator> <name pos:start="425:27" pos:end="425:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:26"><expr pos:start="427:13" pos:end="427:25"><name pos:start="427:13" pos:end="427:14">rn</name> <operator pos:start="427:16" pos:end="427:16">=</operator> <literal type="string" pos:start="427:18" pos:end="427:25">"HWREna"</literal></expr>;</expr_stmt>

            <break pos:start="429:13" pos:end="429:18">break;</break>

        <default pos:start="431:9" pos:end="431:16">default:</default>

            <goto pos:start="433:13" pos:end="433:35">goto <name pos:start="433:18" pos:end="433:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="437:9" pos:end="437:14">break;</break>

    <case pos:start="439:5" pos:end="439:11">case <expr pos:start="439:10" pos:end="439:10"><literal type="number" pos:start="439:10" pos:end="439:10">8</literal></expr>:</case>

        <switch pos:start="441:9" pos:end="471:9">switch <condition pos:start="441:16" pos:end="441:20">(<expr pos:start="441:17" pos:end="441:19"><name pos:start="441:17" pos:end="441:19">sel</name></expr>)</condition> <block pos:start="441:22" pos:end="471:9">{<block_content pos:start="443:9" pos:end="469:35">

        <case pos:start="443:9" pos:end="443:15">case <expr pos:start="443:14" pos:end="443:14"><literal type="number" pos:start="443:14" pos:end="443:14">0</literal></expr>:</case>

            <comment type="block" pos:start="445:13" pos:end="445:25">/* ignored */</comment>

            <expr_stmt pos:start="447:13" pos:end="447:28"><expr pos:start="447:13" pos:end="447:27"><name pos:start="447:13" pos:end="447:14">rn</name> <operator pos:start="447:16" pos:end="447:16">=</operator> <literal type="string" pos:start="447:18" pos:end="447:27">"BadVAddr"</literal></expr>;</expr_stmt>

            <break pos:start="449:13" pos:end="449:18">break;</break>

        <case pos:start="451:9" pos:end="451:15">case <expr pos:start="451:14" pos:end="451:14"><literal type="number" pos:start="451:14" pos:end="451:14">1</literal></expr>:</case>

            <comment type="block" pos:start="453:13" pos:end="453:25">/* ignored */</comment>

            <expr_stmt pos:start="455:13" pos:end="455:28"><expr pos:start="455:13" pos:end="455:27"><name pos:start="455:13" pos:end="455:14">rn</name> <operator pos:start="455:16" pos:end="455:16">=</operator> <literal type="string" pos:start="455:18" pos:end="455:27">"BadInstr"</literal></expr>;</expr_stmt>

            <break pos:start="457:13" pos:end="457:18">break;</break>

        <case pos:start="459:9" pos:end="459:15">case <expr pos:start="459:14" pos:end="459:14"><literal type="number" pos:start="459:14" pos:end="459:14">2</literal></expr>:</case>

            <comment type="block" pos:start="461:13" pos:end="461:25">/* ignored */</comment>

            <expr_stmt pos:start="463:13" pos:end="463:29"><expr pos:start="463:13" pos:end="463:28"><name pos:start="463:13" pos:end="463:14">rn</name> <operator pos:start="463:16" pos:end="463:16">=</operator> <literal type="string" pos:start="463:18" pos:end="463:28">"BadInstrP"</literal></expr>;</expr_stmt>

            <break pos:start="465:13" pos:end="465:18">break;</break>

        <default pos:start="467:9" pos:end="467:16">default:</default>

            <goto pos:start="469:13" pos:end="469:35">goto <name pos:start="469:18" pos:end="469:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="473:9" pos:end="473:14">break;</break>

    <case pos:start="475:5" pos:end="475:11">case <expr pos:start="475:10" pos:end="475:10"><literal type="number" pos:start="475:10" pos:end="475:10">9</literal></expr>:</case>

        <switch pos:start="477:9" pos:end="493:9">switch <condition pos:start="477:16" pos:end="477:20">(<expr pos:start="477:17" pos:end="477:19"><name pos:start="477:17" pos:end="477:19">sel</name></expr>)</condition> <block pos:start="477:22" pos:end="493:9">{<block_content pos:start="479:9" pos:end="491:35">

        <case pos:start="479:9" pos:end="479:15">case <expr pos:start="479:14" pos:end="479:14"><literal type="number" pos:start="479:14" pos:end="479:14">0</literal></expr>:</case>

            <expr_stmt pos:start="481:13" pos:end="481:48"><expr pos:start="481:13" pos:end="481:47"><call pos:start="481:13" pos:end="481:47"><name pos:start="481:13" pos:end="481:33">gen_helper_mtc0_count</name><argument_list pos:start="481:34" pos:end="481:47">(<argument pos:start="481:35" pos:end="481:41"><expr pos:start="481:35" pos:end="481:41"><name pos:start="481:35" pos:end="481:41">cpu_env</name></expr></argument>, <argument pos:start="481:44" pos:end="481:46"><expr pos:start="481:44" pos:end="481:46"><name pos:start="481:44" pos:end="481:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="483:13" pos:end="483:25"><expr pos:start="483:13" pos:end="483:24"><name pos:start="483:13" pos:end="483:14">rn</name> <operator pos:start="483:16" pos:end="483:16">=</operator> <literal type="string" pos:start="483:18" pos:end="483:24">"Count"</literal></expr>;</expr_stmt>

            <break pos:start="485:13" pos:end="485:18">break;</break>

        <comment type="block" pos:start="487:9" pos:end="487:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="489:9" pos:end="489:16">default:</default>

            <goto pos:start="491:13" pos:end="491:35">goto <name pos:start="491:18" pos:end="491:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <comment type="block" pos:start="495:9" pos:end="495:73">/* Stop translation as we may have switched the execution mode */</comment>

        <expr_stmt pos:start="497:9" pos:end="497:30"><expr pos:start="497:9" pos:end="497:29"><name pos:start="497:9" pos:end="497:19"><name pos:start="497:9" pos:end="497:11">ctx</name><operator pos:start="497:12" pos:end="497:13">-&gt;</operator><name pos:start="497:14" pos:end="497:19">bstate</name></name> <operator pos:start="497:21" pos:end="497:21">=</operator> <name pos:start="497:23" pos:end="497:29">BS_STOP</name></expr>;</expr_stmt>

        <break pos:start="499:9" pos:end="499:14">break;</break>

    <case pos:start="501:5" pos:end="501:12">case <expr pos:start="501:10" pos:end="501:11"><literal type="number" pos:start="501:10" pos:end="501:11">10</literal></expr>:</case>

        <switch pos:start="503:9" pos:end="517:9">switch <condition pos:start="503:16" pos:end="503:20">(<expr pos:start="503:17" pos:end="503:19"><name pos:start="503:17" pos:end="503:19">sel</name></expr>)</condition> <block pos:start="503:22" pos:end="517:9">{<block_content pos:start="505:9" pos:end="515:35">

        <case pos:start="505:9" pos:end="505:15">case <expr pos:start="505:14" pos:end="505:14"><literal type="number" pos:start="505:14" pos:end="505:14">0</literal></expr>:</case>

            <expr_stmt pos:start="507:13" pos:end="507:50"><expr pos:start="507:13" pos:end="507:49"><call pos:start="507:13" pos:end="507:49"><name pos:start="507:13" pos:end="507:35">gen_helper_mtc0_entryhi</name><argument_list pos:start="507:36" pos:end="507:49">(<argument pos:start="507:37" pos:end="507:43"><expr pos:start="507:37" pos:end="507:43"><name pos:start="507:37" pos:end="507:43">cpu_env</name></expr></argument>, <argument pos:start="507:46" pos:end="507:48"><expr pos:start="507:46" pos:end="507:48"><name pos:start="507:46" pos:end="507:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="509:13" pos:end="509:27"><expr pos:start="509:13" pos:end="509:26"><name pos:start="509:13" pos:end="509:14">rn</name> <operator pos:start="509:16" pos:end="509:16">=</operator> <literal type="string" pos:start="509:18" pos:end="509:26">"EntryHi"</literal></expr>;</expr_stmt>

            <break pos:start="511:13" pos:end="511:18">break;</break>

        <default pos:start="513:9" pos:end="513:16">default:</default>

            <goto pos:start="515:13" pos:end="515:35">goto <name pos:start="515:18" pos:end="515:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="519:9" pos:end="519:14">break;</break>

    <case pos:start="521:5" pos:end="521:12">case <expr pos:start="521:10" pos:end="521:11"><literal type="number" pos:start="521:10" pos:end="521:11">11</literal></expr>:</case>

        <switch pos:start="523:9" pos:end="539:9">switch <condition pos:start="523:16" pos:end="523:20">(<expr pos:start="523:17" pos:end="523:19"><name pos:start="523:17" pos:end="523:19">sel</name></expr>)</condition> <block pos:start="523:22" pos:end="539:9">{<block_content pos:start="525:9" pos:end="537:35">

        <case pos:start="525:9" pos:end="525:15">case <expr pos:start="525:14" pos:end="525:14"><literal type="number" pos:start="525:14" pos:end="525:14">0</literal></expr>:</case>

            <expr_stmt pos:start="527:13" pos:end="527:50"><expr pos:start="527:13" pos:end="527:49"><call pos:start="527:13" pos:end="527:49"><name pos:start="527:13" pos:end="527:35">gen_helper_mtc0_compare</name><argument_list pos:start="527:36" pos:end="527:49">(<argument pos:start="527:37" pos:end="527:43"><expr pos:start="527:37" pos:end="527:43"><name pos:start="527:37" pos:end="527:43">cpu_env</name></expr></argument>, <argument pos:start="527:46" pos:end="527:48"><expr pos:start="527:46" pos:end="527:48"><name pos:start="527:46" pos:end="527:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="529:13" pos:end="529:27"><expr pos:start="529:13" pos:end="529:26"><name pos:start="529:13" pos:end="529:14">rn</name> <operator pos:start="529:16" pos:end="529:16">=</operator> <literal type="string" pos:start="529:18" pos:end="529:26">"Compare"</literal></expr>;</expr_stmt>

            <break pos:start="531:13" pos:end="531:18">break;</break>

        <comment type="block" pos:start="533:9" pos:end="533:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="535:9" pos:end="535:16">default:</default>

            <goto pos:start="537:13" pos:end="537:35">goto <name pos:start="537:18" pos:end="537:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <comment type="block" pos:start="541:9" pos:end="541:73">/* Stop translation as we may have switched the execution mode */</comment>

        <expr_stmt pos:start="543:9" pos:end="543:30"><expr pos:start="543:9" pos:end="543:29"><name pos:start="543:9" pos:end="543:19"><name pos:start="543:9" pos:end="543:11">ctx</name><operator pos:start="543:12" pos:end="543:13">-&gt;</operator><name pos:start="543:14" pos:end="543:19">bstate</name></name> <operator pos:start="543:21" pos:end="543:21">=</operator> <name pos:start="543:23" pos:end="543:29">BS_STOP</name></expr>;</expr_stmt>

        <break pos:start="545:9" pos:end="545:14">break;</break>

    <case pos:start="547:5" pos:end="547:12">case <expr pos:start="547:10" pos:end="547:11"><literal type="number" pos:start="547:10" pos:end="547:11">12</literal></expr>:</case>

        <switch pos:start="549:9" pos:end="613:9">switch <condition pos:start="549:16" pos:end="549:20">(<expr pos:start="549:17" pos:end="549:19"><name pos:start="549:17" pos:end="549:19">sel</name></expr>)</condition> <block pos:start="549:22" pos:end="613:9">{<block_content pos:start="551:9" pos:end="611:35">

        <case pos:start="551:9" pos:end="551:15">case <expr pos:start="551:14" pos:end="551:14"><literal type="number" pos:start="551:14" pos:end="551:14">0</literal></expr>:</case>

            <expr_stmt pos:start="553:13" pos:end="553:35"><expr pos:start="553:13" pos:end="553:34"><call pos:start="553:13" pos:end="553:34"><name pos:start="553:13" pos:end="553:26">save_cpu_state</name><argument_list pos:start="553:27" pos:end="553:34">(<argument pos:start="553:28" pos:end="553:30"><expr pos:start="553:28" pos:end="553:30"><name pos:start="553:28" pos:end="553:30">ctx</name></expr></argument>, <argument pos:start="553:33" pos:end="553:33"><expr pos:start="553:33" pos:end="553:33"><literal type="number" pos:start="553:33" pos:end="553:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="555:13" pos:end="555:49"><expr pos:start="555:13" pos:end="555:48"><call pos:start="555:13" pos:end="555:48"><name pos:start="555:13" pos:end="555:34">gen_helper_mtc0_status</name><argument_list pos:start="555:35" pos:end="555:48">(<argument pos:start="555:36" pos:end="555:42"><expr pos:start="555:36" pos:end="555:42"><name pos:start="555:36" pos:end="555:42">cpu_env</name></expr></argument>, <argument pos:start="555:45" pos:end="555:47"><expr pos:start="555:45" pos:end="555:47"><name pos:start="555:45" pos:end="555:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="557:13" pos:end="557:74">/* BS_STOP isn't good enough here, hflags may have changed. */</comment>

            <expr_stmt pos:start="559:13" pos:end="559:37"><expr pos:start="559:13" pos:end="559:36"><call pos:start="559:13" pos:end="559:36"><name pos:start="559:13" pos:end="559:23">gen_save_pc</name><argument_list pos:start="559:24" pos:end="559:36">(<argument pos:start="559:25" pos:end="559:35"><expr pos:start="559:25" pos:end="559:35"><name pos:start="559:25" pos:end="559:31"><name pos:start="559:25" pos:end="559:27">ctx</name><operator pos:start="559:28" pos:end="559:29">-&gt;</operator><name pos:start="559:30" pos:end="559:31">pc</name></name> <operator pos:start="559:33" pos:end="559:33">+</operator> <literal type="number" pos:start="559:35" pos:end="559:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="561:13" pos:end="561:34"><expr pos:start="561:13" pos:end="561:33"><name pos:start="561:13" pos:end="561:23"><name pos:start="561:13" pos:end="561:15">ctx</name><operator pos:start="561:16" pos:end="561:17">-&gt;</operator><name pos:start="561:18" pos:end="561:23">bstate</name></name> <operator pos:start="561:25" pos:end="561:25">=</operator> <name pos:start="561:27" pos:end="561:33">BS_EXCP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="563:13" pos:end="563:26"><expr pos:start="563:13" pos:end="563:25"><name pos:start="563:13" pos:end="563:14">rn</name> <operator pos:start="563:16" pos:end="563:16">=</operator> <literal type="string" pos:start="563:18" pos:end="563:25">"Status"</literal></expr>;</expr_stmt>

            <break pos:start="565:13" pos:end="565:18">break;</break>

        <case pos:start="567:9" pos:end="567:15">case <expr pos:start="567:14" pos:end="567:14"><literal type="number" pos:start="567:14" pos:end="567:14">1</literal></expr>:</case>

            <expr_stmt pos:start="569:13" pos:end="569:42"><expr pos:start="569:13" pos:end="569:41"><call pos:start="569:13" pos:end="569:41"><name pos:start="569:13" pos:end="569:22">check_insn</name><argument_list pos:start="569:23" pos:end="569:41">(<argument pos:start="569:24" pos:end="569:26"><expr pos:start="569:24" pos:end="569:26"><name pos:start="569:24" pos:end="569:26">ctx</name></expr></argument>, <argument pos:start="569:29" pos:end="569:40"><expr pos:start="569:29" pos:end="569:40"><name pos:start="569:29" pos:end="569:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="571:13" pos:end="571:49"><expr pos:start="571:13" pos:end="571:48"><call pos:start="571:13" pos:end="571:48"><name pos:start="571:13" pos:end="571:34">gen_helper_mtc0_intctl</name><argument_list pos:start="571:35" pos:end="571:48">(<argument pos:start="571:36" pos:end="571:42"><expr pos:start="571:36" pos:end="571:42"><name pos:start="571:36" pos:end="571:42">cpu_env</name></expr></argument>, <argument pos:start="571:45" pos:end="571:47"><expr pos:start="571:45" pos:end="571:47"><name pos:start="571:45" pos:end="571:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="573:13" pos:end="573:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="575:13" pos:end="575:34"><expr pos:start="575:13" pos:end="575:33"><name pos:start="575:13" pos:end="575:23"><name pos:start="575:13" pos:end="575:15">ctx</name><operator pos:start="575:16" pos:end="575:17">-&gt;</operator><name pos:start="575:18" pos:end="575:23">bstate</name></name> <operator pos:start="575:25" pos:end="575:25">=</operator> <name pos:start="575:27" pos:end="575:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="577:13" pos:end="577:26"><expr pos:start="577:13" pos:end="577:25"><name pos:start="577:13" pos:end="577:14">rn</name> <operator pos:start="577:16" pos:end="577:16">=</operator> <literal type="string" pos:start="577:18" pos:end="577:25">"IntCtl"</literal></expr>;</expr_stmt>

            <break pos:start="579:13" pos:end="579:18">break;</break>

        <case pos:start="581:9" pos:end="581:15">case <expr pos:start="581:14" pos:end="581:14"><literal type="number" pos:start="581:14" pos:end="581:14">2</literal></expr>:</case>

            <expr_stmt pos:start="583:13" pos:end="583:42"><expr pos:start="583:13" pos:end="583:41"><call pos:start="583:13" pos:end="583:41"><name pos:start="583:13" pos:end="583:22">check_insn</name><argument_list pos:start="583:23" pos:end="583:41">(<argument pos:start="583:24" pos:end="583:26"><expr pos:start="583:24" pos:end="583:26"><name pos:start="583:24" pos:end="583:26">ctx</name></expr></argument>, <argument pos:start="583:29" pos:end="583:40"><expr pos:start="583:29" pos:end="583:40"><name pos:start="583:29" pos:end="583:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="585:13" pos:end="585:49"><expr pos:start="585:13" pos:end="585:48"><call pos:start="585:13" pos:end="585:48"><name pos:start="585:13" pos:end="585:34">gen_helper_mtc0_srsctl</name><argument_list pos:start="585:35" pos:end="585:48">(<argument pos:start="585:36" pos:end="585:42"><expr pos:start="585:36" pos:end="585:42"><name pos:start="585:36" pos:end="585:42">cpu_env</name></expr></argument>, <argument pos:start="585:45" pos:end="585:47"><expr pos:start="585:45" pos:end="585:47"><name pos:start="585:45" pos:end="585:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="587:13" pos:end="587:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="589:13" pos:end="589:34"><expr pos:start="589:13" pos:end="589:33"><name pos:start="589:13" pos:end="589:23"><name pos:start="589:13" pos:end="589:15">ctx</name><operator pos:start="589:16" pos:end="589:17">-&gt;</operator><name pos:start="589:18" pos:end="589:23">bstate</name></name> <operator pos:start="589:25" pos:end="589:25">=</operator> <name pos:start="589:27" pos:end="589:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="591:13" pos:end="591:26"><expr pos:start="591:13" pos:end="591:25"><name pos:start="591:13" pos:end="591:14">rn</name> <operator pos:start="591:16" pos:end="591:16">=</operator> <literal type="string" pos:start="591:18" pos:end="591:25">"SRSCtl"</literal></expr>;</expr_stmt>

            <break pos:start="593:13" pos:end="593:18">break;</break>

        <case pos:start="595:9" pos:end="595:15">case <expr pos:start="595:14" pos:end="595:14"><literal type="number" pos:start="595:14" pos:end="595:14">3</literal></expr>:</case>

            <expr_stmt pos:start="597:13" pos:end="597:42"><expr pos:start="597:13" pos:end="597:41"><call pos:start="597:13" pos:end="597:41"><name pos:start="597:13" pos:end="597:22">check_insn</name><argument_list pos:start="597:23" pos:end="597:41">(<argument pos:start="597:24" pos:end="597:26"><expr pos:start="597:24" pos:end="597:26"><name pos:start="597:24" pos:end="597:26">ctx</name></expr></argument>, <argument pos:start="597:29" pos:end="597:40"><expr pos:start="597:29" pos:end="597:40"><name pos:start="597:29" pos:end="597:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="599:13" pos:end="599:70"><expr pos:start="599:13" pos:end="599:69"><call pos:start="599:13" pos:end="599:69"><name pos:start="599:13" pos:end="599:28">gen_mtc0_store32</name><argument_list pos:start="599:29" pos:end="599:69">(<argument pos:start="599:30" pos:end="599:32"><expr pos:start="599:30" pos:end="599:32"><name pos:start="599:30" pos:end="599:32">arg</name></expr></argument>, <argument pos:start="599:35" pos:end="599:68"><expr pos:start="599:35" pos:end="599:68"><call pos:start="599:35" pos:end="599:68"><name pos:start="599:35" pos:end="599:42">offsetof</name><argument_list pos:start="599:43" pos:end="599:68">(<argument pos:start="599:44" pos:end="599:55"><expr pos:start="599:44" pos:end="599:55"><name pos:start="599:44" pos:end="599:55">CPUMIPSState</name></expr></argument>, <argument pos:start="599:58" pos:end="599:67"><expr pos:start="599:58" pos:end="599:67"><name pos:start="599:58" pos:end="599:67">CP0_SRSMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="601:13" pos:end="601:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="603:13" pos:end="603:34"><expr pos:start="603:13" pos:end="603:33"><name pos:start="603:13" pos:end="603:23"><name pos:start="603:13" pos:end="603:15">ctx</name><operator pos:start="603:16" pos:end="603:17">-&gt;</operator><name pos:start="603:18" pos:end="603:23">bstate</name></name> <operator pos:start="603:25" pos:end="603:25">=</operator> <name pos:start="603:27" pos:end="603:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="605:13" pos:end="605:26"><expr pos:start="605:13" pos:end="605:25"><name pos:start="605:13" pos:end="605:14">rn</name> <operator pos:start="605:16" pos:end="605:16">=</operator> <literal type="string" pos:start="605:18" pos:end="605:25">"SRSMap"</literal></expr>;</expr_stmt>

            <break pos:start="607:13" pos:end="607:18">break;</break>

        <default pos:start="609:9" pos:end="609:16">default:</default>

            <goto pos:start="611:13" pos:end="611:35">goto <name pos:start="611:18" pos:end="611:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="615:9" pos:end="615:14">break;</break>

    <case pos:start="617:5" pos:end="617:12">case <expr pos:start="617:10" pos:end="617:11"><literal type="number" pos:start="617:10" pos:end="617:11">13</literal></expr>:</case>

        <switch pos:start="619:9" pos:end="655:9">switch <condition pos:start="619:16" pos:end="619:20">(<expr pos:start="619:17" pos:end="619:19"><name pos:start="619:17" pos:end="619:19">sel</name></expr>)</condition> <block pos:start="619:22" pos:end="655:9">{<block_content pos:start="621:9" pos:end="653:35">

        <case pos:start="621:9" pos:end="621:15">case <expr pos:start="621:14" pos:end="621:14"><literal type="number" pos:start="621:14" pos:end="621:14">0</literal></expr>:</case>

            <expr_stmt pos:start="623:13" pos:end="623:35"><expr pos:start="623:13" pos:end="623:34"><call pos:start="623:13" pos:end="623:34"><name pos:start="623:13" pos:end="623:26">save_cpu_state</name><argument_list pos:start="623:27" pos:end="623:34">(<argument pos:start="623:28" pos:end="623:30"><expr pos:start="623:28" pos:end="623:30"><name pos:start="623:28" pos:end="623:30">ctx</name></expr></argument>, <argument pos:start="623:33" pos:end="623:33"><expr pos:start="623:33" pos:end="623:33"><literal type="number" pos:start="623:33" pos:end="623:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="625:13" pos:end="627:29">/* Mark as an IO operation because we may trigger a software

               interrupt.  */</comment>

            <if_stmt pos:start="629:13" pos:end="633:13"><if pos:start="629:13" pos:end="633:13">if <condition pos:start="629:16" pos:end="629:27">(<expr pos:start="629:17" pos:end="629:26"><name pos:start="629:17" pos:end="629:26">use_icount</name></expr>)</condition> <block pos:start="629:29" pos:end="633:13">{<block_content pos:start="631:17" pos:end="631:31">

                <expr_stmt pos:start="631:17" pos:end="631:31"><expr pos:start="631:17" pos:end="631:30"><call pos:start="631:17" pos:end="631:30"><name pos:start="631:17" pos:end="631:28">gen_io_start</name><argument_list pos:start="631:29" pos:end="631:30">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="635:13" pos:end="635:48"><expr pos:start="635:13" pos:end="635:47"><call pos:start="635:13" pos:end="635:47"><name pos:start="635:13" pos:end="635:33">gen_helper_mtc0_cause</name><argument_list pos:start="635:34" pos:end="635:47">(<argument pos:start="635:35" pos:end="635:41"><expr pos:start="635:35" pos:end="635:41"><name pos:start="635:35" pos:end="635:41">cpu_env</name></expr></argument>, <argument pos:start="635:44" pos:end="635:46"><expr pos:start="635:44" pos:end="635:46"><name pos:start="635:44" pos:end="635:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="637:13" pos:end="641:13"><if pos:start="637:13" pos:end="641:13">if <condition pos:start="637:16" pos:end="637:27">(<expr pos:start="637:17" pos:end="637:26"><name pos:start="637:17" pos:end="637:26">use_icount</name></expr>)</condition> <block pos:start="637:29" pos:end="641:13">{<block_content pos:start="639:17" pos:end="639:29">

                <expr_stmt pos:start="639:17" pos:end="639:29"><expr pos:start="639:17" pos:end="639:28"><call pos:start="639:17" pos:end="639:28"><name pos:start="639:17" pos:end="639:26">gen_io_end</name><argument_list pos:start="639:27" pos:end="639:28">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="643:13" pos:end="643:72">/* Stop translation as we may have triggered an intetrupt */</comment>

            <expr_stmt pos:start="645:13" pos:end="645:34"><expr pos:start="645:13" pos:end="645:33"><name pos:start="645:13" pos:end="645:23"><name pos:start="645:13" pos:end="645:15">ctx</name><operator pos:start="645:16" pos:end="645:17">-&gt;</operator><name pos:start="645:18" pos:end="645:23">bstate</name></name> <operator pos:start="645:25" pos:end="645:25">=</operator> <name pos:start="645:27" pos:end="645:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="647:13" pos:end="647:25"><expr pos:start="647:13" pos:end="647:24"><name pos:start="647:13" pos:end="647:14">rn</name> <operator pos:start="647:16" pos:end="647:16">=</operator> <literal type="string" pos:start="647:18" pos:end="647:24">"Cause"</literal></expr>;</expr_stmt>

            <break pos:start="649:13" pos:end="649:18">break;</break>

        <default pos:start="651:9" pos:end="651:16">default:</default>

            <goto pos:start="653:13" pos:end="653:35">goto <name pos:start="653:18" pos:end="653:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="657:9" pos:end="657:14">break;</break>

    <case pos:start="659:5" pos:end="659:12">case <expr pos:start="659:10" pos:end="659:11"><literal type="number" pos:start="659:10" pos:end="659:11">14</literal></expr>:</case>

        <switch pos:start="661:9" pos:end="675:9">switch <condition pos:start="661:16" pos:end="661:20">(<expr pos:start="661:17" pos:end="661:19"><name pos:start="661:17" pos:end="661:19">sel</name></expr>)</condition> <block pos:start="661:22" pos:end="675:9">{<block_content pos:start="663:9" pos:end="673:35">

        <case pos:start="663:9" pos:end="663:15">case <expr pos:start="663:14" pos:end="663:14"><literal type="number" pos:start="663:14" pos:end="663:14">0</literal></expr>:</case>

            <expr_stmt pos:start="665:13" pos:end="665:73"><expr pos:start="665:13" pos:end="665:72"><call pos:start="665:13" pos:end="665:72"><name pos:start="665:13" pos:end="665:25">tcg_gen_st_tl</name><argument_list pos:start="665:26" pos:end="665:72">(<argument pos:start="665:27" pos:end="665:29"><expr pos:start="665:27" pos:end="665:29"><name pos:start="665:27" pos:end="665:29">arg</name></expr></argument>, <argument pos:start="665:32" pos:end="665:38"><expr pos:start="665:32" pos:end="665:38"><name pos:start="665:32" pos:end="665:38">cpu_env</name></expr></argument>, <argument pos:start="665:41" pos:end="665:71"><expr pos:start="665:41" pos:end="665:71"><call pos:start="665:41" pos:end="665:71"><name pos:start="665:41" pos:end="665:48">offsetof</name><argument_list pos:start="665:49" pos:end="665:71">(<argument pos:start="665:50" pos:end="665:61"><expr pos:start="665:50" pos:end="665:61"><name pos:start="665:50" pos:end="665:61">CPUMIPSState</name></expr></argument>, <argument pos:start="665:64" pos:end="665:70"><expr pos:start="665:64" pos:end="665:70"><name pos:start="665:64" pos:end="665:70">CP0_EPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="667:13" pos:end="667:23"><expr pos:start="667:13" pos:end="667:22"><name pos:start="667:13" pos:end="667:14">rn</name> <operator pos:start="667:16" pos:end="667:16">=</operator> <literal type="string" pos:start="667:18" pos:end="667:22">"EPC"</literal></expr>;</expr_stmt>

            <break pos:start="669:13" pos:end="669:18">break;</break>

        <default pos:start="671:9" pos:end="671:16">default:</default>

            <goto pos:start="673:13" pos:end="673:35">goto <name pos:start="673:18" pos:end="673:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="677:9" pos:end="677:14">break;</break>

    <case pos:start="679:5" pos:end="679:12">case <expr pos:start="679:10" pos:end="679:11"><literal type="number" pos:start="679:10" pos:end="679:11">15</literal></expr>:</case>

        <switch pos:start="681:9" pos:end="705:9">switch <condition pos:start="681:16" pos:end="681:20">(<expr pos:start="681:17" pos:end="681:19"><name pos:start="681:17" pos:end="681:19">sel</name></expr>)</condition> <block pos:start="681:22" pos:end="705:9">{<block_content pos:start="683:9" pos:end="703:35">

        <case pos:start="683:9" pos:end="683:15">case <expr pos:start="683:14" pos:end="683:14"><literal type="number" pos:start="683:14" pos:end="683:14">0</literal></expr>:</case>

            <comment type="block" pos:start="685:13" pos:end="685:25">/* ignored */</comment>

            <expr_stmt pos:start="687:13" pos:end="687:24"><expr pos:start="687:13" pos:end="687:23"><name pos:start="687:13" pos:end="687:14">rn</name> <operator pos:start="687:16" pos:end="687:16">=</operator> <literal type="string" pos:start="687:18" pos:end="687:23">"PRid"</literal></expr>;</expr_stmt>

            <break pos:start="689:13" pos:end="689:18">break;</break>

        <case pos:start="691:9" pos:end="691:15">case <expr pos:start="691:14" pos:end="691:14"><literal type="number" pos:start="691:14" pos:end="691:14">1</literal></expr>:</case>

            <expr_stmt pos:start="693:13" pos:end="693:42"><expr pos:start="693:13" pos:end="693:41"><call pos:start="693:13" pos:end="693:41"><name pos:start="693:13" pos:end="693:22">check_insn</name><argument_list pos:start="693:23" pos:end="693:41">(<argument pos:start="693:24" pos:end="693:26"><expr pos:start="693:24" pos:end="693:26"><name pos:start="693:24" pos:end="693:26">ctx</name></expr></argument>, <argument pos:start="693:29" pos:end="693:40"><expr pos:start="693:29" pos:end="693:40"><name pos:start="693:29" pos:end="693:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="695:13" pos:end="695:48"><expr pos:start="695:13" pos:end="695:47"><call pos:start="695:13" pos:end="695:47"><name pos:start="695:13" pos:end="695:33">gen_helper_mtc0_ebase</name><argument_list pos:start="695:34" pos:end="695:47">(<argument pos:start="695:35" pos:end="695:41"><expr pos:start="695:35" pos:end="695:41"><name pos:start="695:35" pos:end="695:41">cpu_env</name></expr></argument>, <argument pos:start="695:44" pos:end="695:46"><expr pos:start="695:44" pos:end="695:46"><name pos:start="695:44" pos:end="695:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="697:13" pos:end="697:25"><expr pos:start="697:13" pos:end="697:24"><name pos:start="697:13" pos:end="697:14">rn</name> <operator pos:start="697:16" pos:end="697:16">=</operator> <literal type="string" pos:start="697:18" pos:end="697:24">"EBase"</literal></expr>;</expr_stmt>

            <break pos:start="699:13" pos:end="699:18">break;</break>

        <default pos:start="701:9" pos:end="701:16">default:</default>

            <goto pos:start="703:13" pos:end="703:35">goto <name pos:start="703:18" pos:end="703:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="707:9" pos:end="707:14">break;</break>

    <case pos:start="709:5" pos:end="709:12">case <expr pos:start="709:10" pos:end="709:11"><literal type="number" pos:start="709:10" pos:end="709:11">16</literal></expr>:</case>

        <switch pos:start="711:9" pos:end="781:9">switch <condition pos:start="711:16" pos:end="711:20">(<expr pos:start="711:17" pos:end="711:19"><name pos:start="711:17" pos:end="711:19">sel</name></expr>)</condition> <block pos:start="711:22" pos:end="781:9">{<block_content pos:start="713:9" pos:end="779:35">

        <case pos:start="713:9" pos:end="713:15">case <expr pos:start="713:14" pos:end="713:14"><literal type="number" pos:start="713:14" pos:end="713:14">0</literal></expr>:</case>

            <expr_stmt pos:start="715:13" pos:end="715:50"><expr pos:start="715:13" pos:end="715:49"><call pos:start="715:13" pos:end="715:49"><name pos:start="715:13" pos:end="715:35">gen_helper_mtc0_config0</name><argument_list pos:start="715:36" pos:end="715:49">(<argument pos:start="715:37" pos:end="715:43"><expr pos:start="715:37" pos:end="715:43"><name pos:start="715:37" pos:end="715:43">cpu_env</name></expr></argument>, <argument pos:start="715:46" pos:end="715:48"><expr pos:start="715:46" pos:end="715:48"><name pos:start="715:46" pos:end="715:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="717:13" pos:end="717:26"><expr pos:start="717:13" pos:end="717:25"><name pos:start="717:13" pos:end="717:14">rn</name> <operator pos:start="717:16" pos:end="717:16">=</operator> <literal type="string" pos:start="717:18" pos:end="717:25">"Config"</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="719:13" pos:end="719:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="721:13" pos:end="721:34"><expr pos:start="721:13" pos:end="721:33"><name pos:start="721:13" pos:end="721:23"><name pos:start="721:13" pos:end="721:15">ctx</name><operator pos:start="721:16" pos:end="721:17">-&gt;</operator><name pos:start="721:18" pos:end="721:23">bstate</name></name> <operator pos:start="721:25" pos:end="721:25">=</operator> <name pos:start="721:27" pos:end="721:33">BS_STOP</name></expr>;</expr_stmt>

            <break pos:start="723:13" pos:end="723:18">break;</break>

        <case pos:start="725:9" pos:end="725:15">case <expr pos:start="725:14" pos:end="725:14"><literal type="number" pos:start="725:14" pos:end="725:14">1</literal></expr>:</case>

            <comment type="block" pos:start="727:13" pos:end="727:36">/* ignored, read only */</comment>

            <expr_stmt pos:start="729:13" pos:end="729:27"><expr pos:start="729:13" pos:end="729:26"><name pos:start="729:13" pos:end="729:14">rn</name> <operator pos:start="729:16" pos:end="729:16">=</operator> <literal type="string" pos:start="729:18" pos:end="729:26">"Config1"</literal></expr>;</expr_stmt>

            <break pos:start="731:13" pos:end="731:18">break;</break>

        <case pos:start="733:9" pos:end="733:15">case <expr pos:start="733:14" pos:end="733:14"><literal type="number" pos:start="733:14" pos:end="733:14">2</literal></expr>:</case>

            <expr_stmt pos:start="735:13" pos:end="735:50"><expr pos:start="735:13" pos:end="735:49"><call pos:start="735:13" pos:end="735:49"><name pos:start="735:13" pos:end="735:35">gen_helper_mtc0_config2</name><argument_list pos:start="735:36" pos:end="735:49">(<argument pos:start="735:37" pos:end="735:43"><expr pos:start="735:37" pos:end="735:43"><name pos:start="735:37" pos:end="735:43">cpu_env</name></expr></argument>, <argument pos:start="735:46" pos:end="735:48"><expr pos:start="735:46" pos:end="735:48"><name pos:start="735:46" pos:end="735:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="737:13" pos:end="737:27"><expr pos:start="737:13" pos:end="737:26"><name pos:start="737:13" pos:end="737:14">rn</name> <operator pos:start="737:16" pos:end="737:16">=</operator> <literal type="string" pos:start="737:18" pos:end="737:26">"Config2"</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="739:13" pos:end="739:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="741:13" pos:end="741:34"><expr pos:start="741:13" pos:end="741:33"><name pos:start="741:13" pos:end="741:23"><name pos:start="741:13" pos:end="741:15">ctx</name><operator pos:start="741:16" pos:end="741:17">-&gt;</operator><name pos:start="741:18" pos:end="741:23">bstate</name></name> <operator pos:start="741:25" pos:end="741:25">=</operator> <name pos:start="741:27" pos:end="741:33">BS_STOP</name></expr>;</expr_stmt>

            <break pos:start="743:13" pos:end="743:18">break;</break>

        <case pos:start="745:9" pos:end="745:15">case <expr pos:start="745:14" pos:end="745:14"><literal type="number" pos:start="745:14" pos:end="745:14">3</literal></expr>:</case>

            <comment type="block" pos:start="747:13" pos:end="747:25">/* ignored */</comment>

            <expr_stmt pos:start="749:13" pos:end="749:27"><expr pos:start="749:13" pos:end="749:26"><name pos:start="749:13" pos:end="749:14">rn</name> <operator pos:start="749:16" pos:end="749:16">=</operator> <literal type="string" pos:start="749:18" pos:end="749:26">"Config3"</literal></expr>;</expr_stmt>

            <break pos:start="751:13" pos:end="751:18">break;</break>

        <case pos:start="753:9" pos:end="753:15">case <expr pos:start="753:14" pos:end="753:14"><literal type="number" pos:start="753:14" pos:end="753:14">4</literal></expr>:</case>

            <comment type="block" pos:start="755:13" pos:end="755:35">/* currently ignored */</comment>

            <expr_stmt pos:start="757:13" pos:end="757:27"><expr pos:start="757:13" pos:end="757:26"><name pos:start="757:13" pos:end="757:14">rn</name> <operator pos:start="757:16" pos:end="757:16">=</operator> <literal type="string" pos:start="757:18" pos:end="757:26">"Config4"</literal></expr>;</expr_stmt>

            <break pos:start="759:13" pos:end="759:18">break;</break>

        <case pos:start="761:9" pos:end="761:15">case <expr pos:start="761:14" pos:end="761:14"><literal type="number" pos:start="761:14" pos:end="761:14">5</literal></expr>:</case>

            <expr_stmt pos:start="763:13" pos:end="763:50"><expr pos:start="763:13" pos:end="763:49"><call pos:start="763:13" pos:end="763:49"><name pos:start="763:13" pos:end="763:35">gen_helper_mtc0_config5</name><argument_list pos:start="763:36" pos:end="763:49">(<argument pos:start="763:37" pos:end="763:43"><expr pos:start="763:37" pos:end="763:43"><name pos:start="763:37" pos:end="763:43">cpu_env</name></expr></argument>, <argument pos:start="763:46" pos:end="763:48"><expr pos:start="763:46" pos:end="763:48"><name pos:start="763:46" pos:end="763:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="765:13" pos:end="765:27"><expr pos:start="765:13" pos:end="765:26"><name pos:start="765:13" pos:end="765:14">rn</name> <operator pos:start="765:16" pos:end="765:16">=</operator> <literal type="string" pos:start="765:18" pos:end="765:26">"Config5"</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="767:13" pos:end="767:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="769:13" pos:end="769:34"><expr pos:start="769:13" pos:end="769:33"><name pos:start="769:13" pos:end="769:23"><name pos:start="769:13" pos:end="769:15">ctx</name><operator pos:start="769:16" pos:end="769:17">-&gt;</operator><name pos:start="769:18" pos:end="769:23">bstate</name></name> <operator pos:start="769:25" pos:end="769:25">=</operator> <name pos:start="769:27" pos:end="769:33">BS_STOP</name></expr>;</expr_stmt>

            <break pos:start="771:13" pos:end="771:18">break;</break>

        <comment type="block" pos:start="773:9" pos:end="773:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="775:9" pos:end="775:16">default:</default>

            <expr_stmt pos:start="777:13" pos:end="777:43"><expr pos:start="777:13" pos:end="777:42"><name pos:start="777:13" pos:end="777:14">rn</name> <operator pos:start="777:16" pos:end="777:16">=</operator> <literal type="string" pos:start="777:18" pos:end="777:42">"Invalid config selector"</literal></expr>;</expr_stmt>

            <goto pos:start="779:13" pos:end="779:35">goto <name pos:start="779:18" pos:end="779:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="783:9" pos:end="783:14">break;</break>

    <case pos:start="785:5" pos:end="785:12">case <expr pos:start="785:10" pos:end="785:11"><literal type="number" pos:start="785:10" pos:end="785:11">17</literal></expr>:</case>

        <switch pos:start="787:9" pos:end="801:9">switch <condition pos:start="787:16" pos:end="787:20">(<expr pos:start="787:17" pos:end="787:19"><name pos:start="787:17" pos:end="787:19">sel</name></expr>)</condition> <block pos:start="787:22" pos:end="801:9">{<block_content pos:start="789:9" pos:end="799:35">

        <case pos:start="789:9" pos:end="789:15">case <expr pos:start="789:14" pos:end="789:14"><literal type="number" pos:start="789:14" pos:end="789:14">0</literal></expr>:</case>

            <expr_stmt pos:start="791:13" pos:end="791:49"><expr pos:start="791:13" pos:end="791:48"><call pos:start="791:13" pos:end="791:48"><name pos:start="791:13" pos:end="791:34">gen_helper_mtc0_lladdr</name><argument_list pos:start="791:35" pos:end="791:48">(<argument pos:start="791:36" pos:end="791:42"><expr pos:start="791:36" pos:end="791:42"><name pos:start="791:36" pos:end="791:42">cpu_env</name></expr></argument>, <argument pos:start="791:45" pos:end="791:47"><expr pos:start="791:45" pos:end="791:47"><name pos:start="791:45" pos:end="791:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="793:13" pos:end="793:26"><expr pos:start="793:13" pos:end="793:25"><name pos:start="793:13" pos:end="793:14">rn</name> <operator pos:start="793:16" pos:end="793:16">=</operator> <literal type="string" pos:start="793:18" pos:end="793:25">"LLAddr"</literal></expr>;</expr_stmt>

            <break pos:start="795:13" pos:end="795:18">break;</break>

        <default pos:start="797:9" pos:end="797:16">default:</default>

            <goto pos:start="799:13" pos:end="799:35">goto <name pos:start="799:18" pos:end="799:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="803:9" pos:end="803:14">break;</break>

    <case pos:start="805:5" pos:end="805:12">case <expr pos:start="805:10" pos:end="805:11"><literal type="number" pos:start="805:10" pos:end="805:11">18</literal></expr>:</case>

        <switch pos:start="807:9" pos:end="821:9">switch <condition pos:start="807:16" pos:end="807:20">(<expr pos:start="807:17" pos:end="807:19"><name pos:start="807:17" pos:end="807:19">sel</name></expr>)</condition> <block pos:start="807:22" pos:end="821:9">{<block_content pos:start="809:9" pos:end="819:35">

        <case pos:start="809:9" pos:end="809:21">case <expr pos:start="809:14" pos:end="809:20"><literal type="number" pos:start="809:14" pos:end="809:14">0</literal> <operator pos:start="809:16" pos:end="809:18">...</operator> <literal type="number" pos:start="809:20" pos:end="809:20">7</literal></expr>:</case>

            <expr_stmt pos:start="811:13" pos:end="811:52"><expr pos:start="811:13" pos:end="811:51"><call pos:start="811:13" pos:end="811:51"><name pos:start="811:13" pos:end="811:27">gen_helper_0e1i</name><argument_list pos:start="811:28" pos:end="811:51">(<argument pos:start="811:29" pos:end="811:40"><expr pos:start="811:29" pos:end="811:40"><name pos:start="811:29" pos:end="811:40">mtc0_watchlo</name></expr></argument>, <argument pos:start="811:43" pos:end="811:45"><expr pos:start="811:43" pos:end="811:45"><name pos:start="811:43" pos:end="811:45">arg</name></expr></argument>, <argument pos:start="811:48" pos:end="811:50"><expr pos:start="811:48" pos:end="811:50"><name pos:start="811:48" pos:end="811:50">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="813:13" pos:end="813:27"><expr pos:start="813:13" pos:end="813:26"><name pos:start="813:13" pos:end="813:14">rn</name> <operator pos:start="813:16" pos:end="813:16">=</operator> <literal type="string" pos:start="813:18" pos:end="813:26">"WatchLo"</literal></expr>;</expr_stmt>

            <break pos:start="815:13" pos:end="815:18">break;</break>

        <default pos:start="817:9" pos:end="817:16">default:</default>

            <goto pos:start="819:13" pos:end="819:35">goto <name pos:start="819:18" pos:end="819:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="823:9" pos:end="823:14">break;</break>

    <case pos:start="825:5" pos:end="825:12">case <expr pos:start="825:10" pos:end="825:11"><literal type="number" pos:start="825:10" pos:end="825:11">19</literal></expr>:</case>

        <switch pos:start="827:9" pos:end="841:9">switch <condition pos:start="827:16" pos:end="827:20">(<expr pos:start="827:17" pos:end="827:19"><name pos:start="827:17" pos:end="827:19">sel</name></expr>)</condition> <block pos:start="827:22" pos:end="841:9">{<block_content pos:start="829:9" pos:end="839:35">

        <case pos:start="829:9" pos:end="829:21">case <expr pos:start="829:14" pos:end="829:20"><literal type="number" pos:start="829:14" pos:end="829:14">0</literal> <operator pos:start="829:16" pos:end="829:18">...</operator> <literal type="number" pos:start="829:20" pos:end="829:20">7</literal></expr>:</case>

            <expr_stmt pos:start="831:13" pos:end="831:52"><expr pos:start="831:13" pos:end="831:51"><call pos:start="831:13" pos:end="831:51"><name pos:start="831:13" pos:end="831:27">gen_helper_0e1i</name><argument_list pos:start="831:28" pos:end="831:51">(<argument pos:start="831:29" pos:end="831:40"><expr pos:start="831:29" pos:end="831:40"><name pos:start="831:29" pos:end="831:40">mtc0_watchhi</name></expr></argument>, <argument pos:start="831:43" pos:end="831:45"><expr pos:start="831:43" pos:end="831:45"><name pos:start="831:43" pos:end="831:45">arg</name></expr></argument>, <argument pos:start="831:48" pos:end="831:50"><expr pos:start="831:48" pos:end="831:50"><name pos:start="831:48" pos:end="831:50">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="833:13" pos:end="833:27"><expr pos:start="833:13" pos:end="833:26"><name pos:start="833:13" pos:end="833:14">rn</name> <operator pos:start="833:16" pos:end="833:16">=</operator> <literal type="string" pos:start="833:18" pos:end="833:26">"WatchHi"</literal></expr>;</expr_stmt>

            <break pos:start="835:13" pos:end="835:18">break;</break>

        <default pos:start="837:9" pos:end="837:16">default:</default>

            <goto pos:start="839:13" pos:end="839:35">goto <name pos:start="839:18" pos:end="839:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="843:9" pos:end="843:14">break;</break>

    <case pos:start="845:5" pos:end="845:12">case <expr pos:start="845:10" pos:end="845:11"><literal type="number" pos:start="845:10" pos:end="845:11">20</literal></expr>:</case>

        <switch pos:start="847:9" pos:end="863:9">switch <condition pos:start="847:16" pos:end="847:20">(<expr pos:start="847:17" pos:end="847:19"><name pos:start="847:17" pos:end="847:19">sel</name></expr>)</condition> <block pos:start="847:22" pos:end="863:9">{<block_content pos:start="849:9" pos:end="861:35">

        <case pos:start="849:9" pos:end="849:15">case <expr pos:start="849:14" pos:end="849:14"><literal type="number" pos:start="849:14" pos:end="849:14">0</literal></expr>:</case>

            <expr_stmt pos:start="851:13" pos:end="851:39"><expr pos:start="851:13" pos:end="851:38"><call pos:start="851:13" pos:end="851:38"><name pos:start="851:13" pos:end="851:22">check_insn</name><argument_list pos:start="851:23" pos:end="851:38">(<argument pos:start="851:24" pos:end="851:26"><expr pos:start="851:24" pos:end="851:26"><name pos:start="851:24" pos:end="851:26">ctx</name></expr></argument>, <argument pos:start="851:29" pos:end="851:37"><expr pos:start="851:29" pos:end="851:37"><name pos:start="851:29" pos:end="851:37">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="853:13" pos:end="853:51"><expr pos:start="853:13" pos:end="853:50"><call pos:start="853:13" pos:end="853:50"><name pos:start="853:13" pos:end="853:36">gen_helper_mtc0_xcontext</name><argument_list pos:start="853:37" pos:end="853:50">(<argument pos:start="853:38" pos:end="853:44"><expr pos:start="853:38" pos:end="853:44"><name pos:start="853:38" pos:end="853:44">cpu_env</name></expr></argument>, <argument pos:start="853:47" pos:end="853:49"><expr pos:start="853:47" pos:end="853:49"><name pos:start="853:47" pos:end="853:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="855:13" pos:end="855:28"><expr pos:start="855:13" pos:end="855:27"><name pos:start="855:13" pos:end="855:14">rn</name> <operator pos:start="855:16" pos:end="855:16">=</operator> <literal type="string" pos:start="855:18" pos:end="855:27">"XContext"</literal></expr>;</expr_stmt>

            <break pos:start="857:13" pos:end="857:18">break;</break>

        <default pos:start="859:9" pos:end="859:16">default:</default>

            <goto pos:start="861:13" pos:end="861:35">goto <name pos:start="861:18" pos:end="861:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="865:9" pos:end="865:14">break;</break>

    <case pos:start="867:5" pos:end="867:12">case <expr pos:start="867:10" pos:end="867:11"><literal type="number" pos:start="867:10" pos:end="867:11">21</literal></expr>:</case>

       <comment type="block" pos:start="869:8" pos:end="869:72">/* Officially reserved, but sel 0 is used for R1x000 framemask */</comment>

        <expr_stmt pos:start="871:9" pos:end="871:53"><expr pos:start="871:9" pos:end="871:52"><call pos:start="871:9" pos:end="871:52"><name pos:start="871:9" pos:end="871:17">CP0_CHECK</name><argument_list pos:start="871:18" pos:end="871:52">(<argument pos:start="871:19" pos:end="871:51"><expr pos:start="871:19" pos:end="871:51"><operator pos:start="871:19" pos:end="871:19">!</operator><operator pos:start="871:20" pos:end="871:20">(</operator><name pos:start="871:21" pos:end="871:35"><name pos:start="871:21" pos:end="871:23">ctx</name><operator pos:start="871:24" pos:end="871:25">-&gt;</operator><name pos:start="871:26" pos:end="871:35">insn_flags</name></name> <operator pos:start="871:37" pos:end="871:37">&amp;</operator> <name pos:start="871:39" pos:end="871:50">ISA_MIPS32R6</name><operator pos:start="871:51" pos:end="871:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="873:9" pos:end="887:9">switch <condition pos:start="873:16" pos:end="873:20">(<expr pos:start="873:17" pos:end="873:19"><name pos:start="873:17" pos:end="873:19">sel</name></expr>)</condition> <block pos:start="873:22" pos:end="887:9">{<block_content pos:start="875:9" pos:end="885:35">

        <case pos:start="875:9" pos:end="875:15">case <expr pos:start="875:14" pos:end="875:14"><literal type="number" pos:start="875:14" pos:end="875:14">0</literal></expr>:</case>

            <expr_stmt pos:start="877:13" pos:end="877:52"><expr pos:start="877:13" pos:end="877:51"><call pos:start="877:13" pos:end="877:51"><name pos:start="877:13" pos:end="877:37">gen_helper_mtc0_framemask</name><argument_list pos:start="877:38" pos:end="877:51">(<argument pos:start="877:39" pos:end="877:45"><expr pos:start="877:39" pos:end="877:45"><name pos:start="877:39" pos:end="877:45">cpu_env</name></expr></argument>, <argument pos:start="877:48" pos:end="877:50"><expr pos:start="877:48" pos:end="877:50"><name pos:start="877:48" pos:end="877:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="879:13" pos:end="879:29"><expr pos:start="879:13" pos:end="879:28"><name pos:start="879:13" pos:end="879:14">rn</name> <operator pos:start="879:16" pos:end="879:16">=</operator> <literal type="string" pos:start="879:18" pos:end="879:28">"Framemask"</literal></expr>;</expr_stmt>

            <break pos:start="881:13" pos:end="881:18">break;</break>

        <default pos:start="883:9" pos:end="883:16">default:</default>

            <goto pos:start="885:13" pos:end="885:35">goto <name pos:start="885:18" pos:end="885:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="889:9" pos:end="889:14">break;</break>

    <case pos:start="891:5" pos:end="891:12">case <expr pos:start="891:10" pos:end="891:11"><literal type="number" pos:start="891:10" pos:end="891:11">22</literal></expr>:</case>

        <comment type="block" pos:start="893:9" pos:end="893:21">/* ignored */</comment>

        <expr_stmt pos:start="895:9" pos:end="895:26"><expr pos:start="895:9" pos:end="895:25"><name pos:start="895:9" pos:end="895:10">rn</name> <operator pos:start="895:12" pos:end="895:12">=</operator> <literal type="string" pos:start="895:14" pos:end="895:25">"Diagnostic"</literal></expr>;</expr_stmt> <comment type="block" pos:start="895:28" pos:end="895:57">/* implementation dependent */</comment>

        <break pos:start="897:9" pos:end="897:14">break;</break>

    <case pos:start="899:5" pos:end="899:12">case <expr pos:start="899:10" pos:end="899:11"><literal type="number" pos:start="899:10" pos:end="899:11">23</literal></expr>:</case>

        <switch pos:start="901:9" pos:end="969:9">switch <condition pos:start="901:16" pos:end="901:20">(<expr pos:start="901:17" pos:end="901:19"><name pos:start="901:17" pos:end="901:19">sel</name></expr>)</condition> <block pos:start="901:22" pos:end="969:9">{<block_content pos:start="903:9" pos:end="967:35">

        <case pos:start="903:9" pos:end="903:15">case <expr pos:start="903:14" pos:end="903:14"><literal type="number" pos:start="903:14" pos:end="903:14">0</literal></expr>:</case>

            <expr_stmt pos:start="905:13" pos:end="905:48"><expr pos:start="905:13" pos:end="905:47"><call pos:start="905:13" pos:end="905:47"><name pos:start="905:13" pos:end="905:33">gen_helper_mtc0_debug</name><argument_list pos:start="905:34" pos:end="905:47">(<argument pos:start="905:35" pos:end="905:41"><expr pos:start="905:35" pos:end="905:41"><name pos:start="905:35" pos:end="905:41">cpu_env</name></expr></argument>, <argument pos:start="905:44" pos:end="905:46"><expr pos:start="905:44" pos:end="905:46"><name pos:start="905:44" pos:end="905:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="905:50" pos:end="905:68">/* EJTAG support */</comment>

            <comment type="block" pos:start="907:13" pos:end="907:74">/* BS_STOP isn't good enough here, hflags may have changed. */</comment>

            <expr_stmt pos:start="909:13" pos:end="909:37"><expr pos:start="909:13" pos:end="909:36"><call pos:start="909:13" pos:end="909:36"><name pos:start="909:13" pos:end="909:23">gen_save_pc</name><argument_list pos:start="909:24" pos:end="909:36">(<argument pos:start="909:25" pos:end="909:35"><expr pos:start="909:25" pos:end="909:35"><name pos:start="909:25" pos:end="909:31"><name pos:start="909:25" pos:end="909:27">ctx</name><operator pos:start="909:28" pos:end="909:29">-&gt;</operator><name pos:start="909:30" pos:end="909:31">pc</name></name> <operator pos:start="909:33" pos:end="909:33">+</operator> <literal type="number" pos:start="909:35" pos:end="909:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="911:13" pos:end="911:34"><expr pos:start="911:13" pos:end="911:33"><name pos:start="911:13" pos:end="911:23"><name pos:start="911:13" pos:end="911:15">ctx</name><operator pos:start="911:16" pos:end="911:17">-&gt;</operator><name pos:start="911:18" pos:end="911:23">bstate</name></name> <operator pos:start="911:25" pos:end="911:25">=</operator> <name pos:start="911:27" pos:end="911:33">BS_EXCP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="913:13" pos:end="913:25"><expr pos:start="913:13" pos:end="913:24"><name pos:start="913:13" pos:end="913:14">rn</name> <operator pos:start="913:16" pos:end="913:16">=</operator> <literal type="string" pos:start="913:18" pos:end="913:24">"Debug"</literal></expr>;</expr_stmt>

            <break pos:start="915:13" pos:end="915:18">break;</break>

        <case pos:start="917:9" pos:end="917:15">case <expr pos:start="917:14" pos:end="917:14"><literal type="number" pos:start="917:14" pos:end="917:14">1</literal></expr>:</case>

<comment type="line" pos:start="919:1" pos:end="919:79">//            gen_helper_mtc0_tracecontrol(cpu_env, arg); /* PDtrace support */</comment>

            <comment type="block" pos:start="921:13" pos:end="921:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="923:13" pos:end="923:34"><expr pos:start="923:13" pos:end="923:33"><name pos:start="923:13" pos:end="923:23"><name pos:start="923:13" pos:end="923:15">ctx</name><operator pos:start="923:16" pos:end="923:17">-&gt;</operator><name pos:start="923:18" pos:end="923:23">bstate</name></name> <operator pos:start="923:25" pos:end="923:25">=</operator> <name pos:start="923:27" pos:end="923:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="925:13" pos:end="925:32"><expr pos:start="925:13" pos:end="925:31"><name pos:start="925:13" pos:end="925:14">rn</name> <operator pos:start="925:16" pos:end="925:16">=</operator> <literal type="string" pos:start="925:18" pos:end="925:31">"TraceControl"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="927:1" pos:end="927:20">//            break;</comment>

        <case pos:start="929:9" pos:end="929:15">case <expr pos:start="929:14" pos:end="929:14"><literal type="number" pos:start="929:14" pos:end="929:14">2</literal></expr>:</case>

<comment type="line" pos:start="931:1" pos:end="931:80">//            gen_helper_mtc0_tracecontrol2(cpu_env, arg); /* PDtrace support */</comment>

            <comment type="block" pos:start="933:13" pos:end="933:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="935:13" pos:end="935:34"><expr pos:start="935:13" pos:end="935:33"><name pos:start="935:13" pos:end="935:23"><name pos:start="935:13" pos:end="935:15">ctx</name><operator pos:start="935:16" pos:end="935:17">-&gt;</operator><name pos:start="935:18" pos:end="935:23">bstate</name></name> <operator pos:start="935:25" pos:end="935:25">=</operator> <name pos:start="935:27" pos:end="935:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="937:13" pos:end="937:33"><expr pos:start="937:13" pos:end="937:32"><name pos:start="937:13" pos:end="937:14">rn</name> <operator pos:start="937:16" pos:end="937:16">=</operator> <literal type="string" pos:start="937:18" pos:end="937:32">"TraceControl2"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="939:1" pos:end="939:20">//            break;</comment>

        <case pos:start="941:9" pos:end="941:15">case <expr pos:start="941:14" pos:end="941:14"><literal type="number" pos:start="941:14" pos:end="941:14">3</literal></expr>:</case>

<comment type="line" pos:start="943:1" pos:end="943:80">//            gen_helper_mtc0_usertracedata(cpu_env, arg); /* PDtrace support */</comment>

            <comment type="block" pos:start="945:13" pos:end="945:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="947:13" pos:end="947:34"><expr pos:start="947:13" pos:end="947:33"><name pos:start="947:13" pos:end="947:23"><name pos:start="947:13" pos:end="947:15">ctx</name><operator pos:start="947:16" pos:end="947:17">-&gt;</operator><name pos:start="947:18" pos:end="947:23">bstate</name></name> <operator pos:start="947:25" pos:end="947:25">=</operator> <name pos:start="947:27" pos:end="947:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="949:13" pos:end="949:33"><expr pos:start="949:13" pos:end="949:32"><name pos:start="949:13" pos:end="949:14">rn</name> <operator pos:start="949:16" pos:end="949:16">=</operator> <literal type="string" pos:start="949:18" pos:end="949:32">"UserTraceData"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="951:1" pos:end="951:20">//            break;</comment>

        <case pos:start="953:9" pos:end="953:15">case <expr pos:start="953:14" pos:end="953:14"><literal type="number" pos:start="953:14" pos:end="953:14">4</literal></expr>:</case>

<comment type="line" pos:start="955:1" pos:end="955:75">//            gen_helper_mtc0_tracebpc(cpu_env, arg); /* PDtrace support */</comment>

            <comment type="block" pos:start="957:13" pos:end="957:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="959:13" pos:end="959:34"><expr pos:start="959:13" pos:end="959:33"><name pos:start="959:13" pos:end="959:23"><name pos:start="959:13" pos:end="959:15">ctx</name><operator pos:start="959:16" pos:end="959:17">-&gt;</operator><name pos:start="959:18" pos:end="959:23">bstate</name></name> <operator pos:start="959:25" pos:end="959:25">=</operator> <name pos:start="959:27" pos:end="959:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="961:13" pos:end="961:28"><expr pos:start="961:13" pos:end="961:27"><name pos:start="961:13" pos:end="961:14">rn</name> <operator pos:start="961:16" pos:end="961:16">=</operator> <literal type="string" pos:start="961:18" pos:end="961:27">"TraceBPC"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="963:1" pos:end="963:20">//            break;</comment>

        <default pos:start="965:9" pos:end="965:16">default:</default>

            <goto pos:start="967:13" pos:end="967:35">goto <name pos:start="967:18" pos:end="967:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="971:9" pos:end="971:14">break;</break>

    <case pos:start="973:5" pos:end="973:12">case <expr pos:start="973:10" pos:end="973:11"><literal type="number" pos:start="973:10" pos:end="973:11">24</literal></expr>:</case>

        <switch pos:start="975:9" pos:end="991:9">switch <condition pos:start="975:16" pos:end="975:20">(<expr pos:start="975:17" pos:end="975:19"><name pos:start="975:17" pos:end="975:19">sel</name></expr>)</condition> <block pos:start="975:22" pos:end="991:9">{<block_content pos:start="977:9" pos:end="989:35">

        <case pos:start="977:9" pos:end="977:15">case <expr pos:start="977:14" pos:end="977:14"><literal type="number" pos:start="977:14" pos:end="977:14">0</literal></expr>:</case>

            <comment type="block" pos:start="979:13" pos:end="979:31">/* EJTAG support */</comment>

            <expr_stmt pos:start="981:13" pos:end="981:74"><expr pos:start="981:13" pos:end="981:73"><call pos:start="981:13" pos:end="981:73"><name pos:start="981:13" pos:end="981:25">tcg_gen_st_tl</name><argument_list pos:start="981:26" pos:end="981:73">(<argument pos:start="981:27" pos:end="981:29"><expr pos:start="981:27" pos:end="981:29"><name pos:start="981:27" pos:end="981:29">arg</name></expr></argument>, <argument pos:start="981:32" pos:end="981:38"><expr pos:start="981:32" pos:end="981:38"><name pos:start="981:32" pos:end="981:38">cpu_env</name></expr></argument>, <argument pos:start="981:41" pos:end="981:72"><expr pos:start="981:41" pos:end="981:72"><call pos:start="981:41" pos:end="981:72"><name pos:start="981:41" pos:end="981:48">offsetof</name><argument_list pos:start="981:49" pos:end="981:72">(<argument pos:start="981:50" pos:end="981:61"><expr pos:start="981:50" pos:end="981:61"><name pos:start="981:50" pos:end="981:61">CPUMIPSState</name></expr></argument>, <argument pos:start="981:64" pos:end="981:71"><expr pos:start="981:64" pos:end="981:71"><name pos:start="981:64" pos:end="981:71">CP0_DEPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="983:13" pos:end="983:24"><expr pos:start="983:13" pos:end="983:23"><name pos:start="983:13" pos:end="983:14">rn</name> <operator pos:start="983:16" pos:end="983:16">=</operator> <literal type="string" pos:start="983:18" pos:end="983:23">"DEPC"</literal></expr>;</expr_stmt>

            <break pos:start="985:13" pos:end="985:18">break;</break>

        <default pos:start="987:9" pos:end="987:16">default:</default>

            <goto pos:start="989:13" pos:end="989:35">goto <name pos:start="989:18" pos:end="989:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="993:9" pos:end="993:14">break;</break>

    <case pos:start="995:5" pos:end="995:12">case <expr pos:start="995:10" pos:end="995:11"><literal type="number" pos:start="995:10" pos:end="995:11">25</literal></expr>:</case>

        <switch pos:start="997:9" pos:end="1067:9">switch <condition pos:start="997:16" pos:end="997:20">(<expr pos:start="997:17" pos:end="997:19"><name pos:start="997:17" pos:end="997:19">sel</name></expr>)</condition> <block pos:start="997:22" pos:end="1067:9">{<block_content pos:start="999:9" pos:end="1065:35">

        <case pos:start="999:9" pos:end="999:15">case <expr pos:start="999:14" pos:end="999:14"><literal type="number" pos:start="999:14" pos:end="999:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1001:13" pos:end="1001:55"><expr pos:start="1001:13" pos:end="1001:54"><call pos:start="1001:13" pos:end="1001:54"><name pos:start="1001:13" pos:end="1001:40">gen_helper_mtc0_performance0</name><argument_list pos:start="1001:41" pos:end="1001:54">(<argument pos:start="1001:42" pos:end="1001:48"><expr pos:start="1001:42" pos:end="1001:48"><name pos:start="1001:42" pos:end="1001:48">cpu_env</name></expr></argument>, <argument pos:start="1001:51" pos:end="1001:53"><expr pos:start="1001:51" pos:end="1001:53"><name pos:start="1001:51" pos:end="1001:53">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1003:13" pos:end="1003:32"><expr pos:start="1003:13" pos:end="1003:31"><name pos:start="1003:13" pos:end="1003:14">rn</name> <operator pos:start="1003:16" pos:end="1003:16">=</operator> <literal type="string" pos:start="1003:18" pos:end="1003:31">"Performance0"</literal></expr>;</expr_stmt>

            <break pos:start="1005:13" pos:end="1005:18">break;</break>

        <case pos:start="1007:9" pos:end="1007:15">case <expr pos:start="1007:14" pos:end="1007:14"><literal type="number" pos:start="1007:14" pos:end="1007:14">1</literal></expr>:</case>

<comment type="line" pos:start="1009:1" pos:end="1009:57">//            gen_helper_mtc0_performance1(cpu_env, arg);</comment>

            <expr_stmt pos:start="1011:13" pos:end="1011:32"><expr pos:start="1011:13" pos:end="1011:31"><name pos:start="1011:13" pos:end="1011:14">rn</name> <operator pos:start="1011:16" pos:end="1011:16">=</operator> <literal type="string" pos:start="1011:18" pos:end="1011:31">"Performance1"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1013:1" pos:end="1013:20">//            break;</comment>

        <case pos:start="1015:9" pos:end="1015:15">case <expr pos:start="1015:14" pos:end="1015:14"><literal type="number" pos:start="1015:14" pos:end="1015:14">2</literal></expr>:</case>

<comment type="line" pos:start="1017:1" pos:end="1017:57">//            gen_helper_mtc0_performance2(cpu_env, arg);</comment>

            <expr_stmt pos:start="1019:13" pos:end="1019:32"><expr pos:start="1019:13" pos:end="1019:31"><name pos:start="1019:13" pos:end="1019:14">rn</name> <operator pos:start="1019:16" pos:end="1019:16">=</operator> <literal type="string" pos:start="1019:18" pos:end="1019:31">"Performance2"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1021:1" pos:end="1021:20">//            break;</comment>

        <case pos:start="1023:9" pos:end="1023:15">case <expr pos:start="1023:14" pos:end="1023:14"><literal type="number" pos:start="1023:14" pos:end="1023:14">3</literal></expr>:</case>

<comment type="line" pos:start="1025:1" pos:end="1025:57">//            gen_helper_mtc0_performance3(cpu_env, arg);</comment>

            <expr_stmt pos:start="1027:13" pos:end="1027:32"><expr pos:start="1027:13" pos:end="1027:31"><name pos:start="1027:13" pos:end="1027:14">rn</name> <operator pos:start="1027:16" pos:end="1027:16">=</operator> <literal type="string" pos:start="1027:18" pos:end="1027:31">"Performance3"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1029:1" pos:end="1029:20">//            break;</comment>

        <case pos:start="1031:9" pos:end="1031:15">case <expr pos:start="1031:14" pos:end="1031:14"><literal type="number" pos:start="1031:14" pos:end="1031:14">4</literal></expr>:</case>

<comment type="line" pos:start="1033:1" pos:end="1033:57">//            gen_helper_mtc0_performance4(cpu_env, arg);</comment>

            <expr_stmt pos:start="1035:13" pos:end="1035:32"><expr pos:start="1035:13" pos:end="1035:31"><name pos:start="1035:13" pos:end="1035:14">rn</name> <operator pos:start="1035:16" pos:end="1035:16">=</operator> <literal type="string" pos:start="1035:18" pos:end="1035:31">"Performance4"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1037:1" pos:end="1037:20">//            break;</comment>

        <case pos:start="1039:9" pos:end="1039:15">case <expr pos:start="1039:14" pos:end="1039:14"><literal type="number" pos:start="1039:14" pos:end="1039:14">5</literal></expr>:</case>

<comment type="line" pos:start="1041:1" pos:end="1041:57">//            gen_helper_mtc0_performance5(cpu_env, arg);</comment>

            <expr_stmt pos:start="1043:13" pos:end="1043:32"><expr pos:start="1043:13" pos:end="1043:31"><name pos:start="1043:13" pos:end="1043:14">rn</name> <operator pos:start="1043:16" pos:end="1043:16">=</operator> <literal type="string" pos:start="1043:18" pos:end="1043:31">"Performance5"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1045:1" pos:end="1045:20">//            break;</comment>

        <case pos:start="1047:9" pos:end="1047:15">case <expr pos:start="1047:14" pos:end="1047:14"><literal type="number" pos:start="1047:14" pos:end="1047:14">6</literal></expr>:</case>

<comment type="line" pos:start="1049:1" pos:end="1049:57">//            gen_helper_mtc0_performance6(cpu_env, arg);</comment>

            <expr_stmt pos:start="1051:13" pos:end="1051:32"><expr pos:start="1051:13" pos:end="1051:31"><name pos:start="1051:13" pos:end="1051:14">rn</name> <operator pos:start="1051:16" pos:end="1051:16">=</operator> <literal type="string" pos:start="1051:18" pos:end="1051:31">"Performance6"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1053:1" pos:end="1053:20">//            break;</comment>

        <case pos:start="1055:9" pos:end="1055:15">case <expr pos:start="1055:14" pos:end="1055:14"><literal type="number" pos:start="1055:14" pos:end="1055:14">7</literal></expr>:</case>

<comment type="line" pos:start="1057:1" pos:end="1057:57">//            gen_helper_mtc0_performance7(cpu_env, arg);</comment>

            <expr_stmt pos:start="1059:13" pos:end="1059:32"><expr pos:start="1059:13" pos:end="1059:31"><name pos:start="1059:13" pos:end="1059:14">rn</name> <operator pos:start="1059:16" pos:end="1059:16">=</operator> <literal type="string" pos:start="1059:18" pos:end="1059:31">"Performance7"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1061:1" pos:end="1061:20">//            break;</comment>

        <default pos:start="1063:9" pos:end="1063:16">default:</default>

            <goto pos:start="1065:13" pos:end="1065:35">goto <name pos:start="1065:18" pos:end="1065:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1069:9" pos:end="1069:14">break;</break>

    <case pos:start="1071:5" pos:end="1071:12">case <expr pos:start="1071:10" pos:end="1071:11"><literal type="number" pos:start="1071:10" pos:end="1071:11">26</literal></expr>:</case>

        <comment type="block" pos:start="1073:9" pos:end="1073:21">/* ignored */</comment>

        <expr_stmt pos:start="1075:9" pos:end="1075:19"><expr pos:start="1075:9" pos:end="1075:18"><name pos:start="1075:9" pos:end="1075:10">rn</name> <operator pos:start="1075:12" pos:end="1075:12">=</operator> <literal type="string" pos:start="1075:14" pos:end="1075:18">"ECC"</literal></expr>;</expr_stmt>

        <break pos:start="1077:9" pos:end="1077:14">break;</break>

    <case pos:start="1079:5" pos:end="1079:12">case <expr pos:start="1079:10" pos:end="1079:11"><literal type="number" pos:start="1079:10" pos:end="1079:11">27</literal></expr>:</case>

        <switch pos:start="1081:9" pos:end="1095:9">switch <condition pos:start="1081:16" pos:end="1081:20">(<expr pos:start="1081:17" pos:end="1081:19"><name pos:start="1081:17" pos:end="1081:19">sel</name></expr>)</condition> <block pos:start="1081:22" pos:end="1095:9">{<block_content pos:start="1083:9" pos:end="1093:35">

        <case pos:start="1083:9" pos:end="1083:21">case <expr pos:start="1083:14" pos:end="1083:20"><literal type="number" pos:start="1083:14" pos:end="1083:14">0</literal> <operator pos:start="1083:16" pos:end="1083:18">...</operator> <literal type="number" pos:start="1083:20" pos:end="1083:20">3</literal></expr>:</case>

            <comment type="block" pos:start="1085:13" pos:end="1085:25">/* ignored */</comment>

            <expr_stmt pos:start="1087:13" pos:end="1087:28"><expr pos:start="1087:13" pos:end="1087:27"><name pos:start="1087:13" pos:end="1087:14">rn</name> <operator pos:start="1087:16" pos:end="1087:16">=</operator> <literal type="string" pos:start="1087:18" pos:end="1087:27">"CacheErr"</literal></expr>;</expr_stmt>

            <break pos:start="1089:13" pos:end="1089:18">break;</break>

        <default pos:start="1091:9" pos:end="1091:16">default:</default>

            <goto pos:start="1093:13" pos:end="1093:35">goto <name pos:start="1093:18" pos:end="1093:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1097:9" pos:end="1097:14">break;</break>

    <case pos:start="1099:5" pos:end="1099:12">case <expr pos:start="1099:10" pos:end="1099:11"><literal type="number" pos:start="1099:10" pos:end="1099:11">28</literal></expr>:</case>

        <switch pos:start="1101:9" pos:end="1135:9">switch <condition pos:start="1101:16" pos:end="1101:20">(<expr pos:start="1101:17" pos:end="1101:19"><name pos:start="1101:17" pos:end="1101:19">sel</name></expr>)</condition> <block pos:start="1101:22" pos:end="1135:9">{<block_content pos:start="1103:9" pos:end="1133:35">

        <case pos:start="1103:9" pos:end="1103:15">case <expr pos:start="1103:14" pos:end="1103:14"><literal type="number" pos:start="1103:14" pos:end="1103:14">0</literal></expr>:</case>

        <case pos:start="1105:9" pos:end="1105:15">case <expr pos:start="1105:14" pos:end="1105:14"><literal type="number" pos:start="1105:14" pos:end="1105:14">2</literal></expr>:</case>

        <case pos:start="1107:9" pos:end="1107:15">case <expr pos:start="1107:14" pos:end="1107:14"><literal type="number" pos:start="1107:14" pos:end="1107:14">4</literal></expr>:</case>

        <case pos:start="1109:9" pos:end="1109:15">case <expr pos:start="1109:14" pos:end="1109:14"><literal type="number" pos:start="1109:14" pos:end="1109:14">6</literal></expr>:</case>

            <expr_stmt pos:start="1111:13" pos:end="1111:48"><expr pos:start="1111:13" pos:end="1111:47"><call pos:start="1111:13" pos:end="1111:47"><name pos:start="1111:13" pos:end="1111:33">gen_helper_mtc0_taglo</name><argument_list pos:start="1111:34" pos:end="1111:47">(<argument pos:start="1111:35" pos:end="1111:41"><expr pos:start="1111:35" pos:end="1111:41"><name pos:start="1111:35" pos:end="1111:41">cpu_env</name></expr></argument>, <argument pos:start="1111:44" pos:end="1111:46"><expr pos:start="1111:44" pos:end="1111:46"><name pos:start="1111:44" pos:end="1111:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1113:13" pos:end="1113:25"><expr pos:start="1113:13" pos:end="1113:24"><name pos:start="1113:13" pos:end="1113:14">rn</name> <operator pos:start="1113:16" pos:end="1113:16">=</operator> <literal type="string" pos:start="1113:18" pos:end="1113:24">"TagLo"</literal></expr>;</expr_stmt>

            <break pos:start="1115:13" pos:end="1115:18">break;</break>

        <case pos:start="1117:9" pos:end="1117:15">case <expr pos:start="1117:14" pos:end="1117:14"><literal type="number" pos:start="1117:14" pos:end="1117:14">1</literal></expr>:</case>

        <case pos:start="1119:9" pos:end="1119:15">case <expr pos:start="1119:14" pos:end="1119:14"><literal type="number" pos:start="1119:14" pos:end="1119:14">3</literal></expr>:</case>

        <case pos:start="1121:9" pos:end="1121:15">case <expr pos:start="1121:14" pos:end="1121:14"><literal type="number" pos:start="1121:14" pos:end="1121:14">5</literal></expr>:</case>

        <case pos:start="1123:9" pos:end="1123:15">case <expr pos:start="1123:14" pos:end="1123:14"><literal type="number" pos:start="1123:14" pos:end="1123:14">7</literal></expr>:</case>

            <expr_stmt pos:start="1125:13" pos:end="1125:49"><expr pos:start="1125:13" pos:end="1125:48"><call pos:start="1125:13" pos:end="1125:48"><name pos:start="1125:13" pos:end="1125:34">gen_helper_mtc0_datalo</name><argument_list pos:start="1125:35" pos:end="1125:48">(<argument pos:start="1125:36" pos:end="1125:42"><expr pos:start="1125:36" pos:end="1125:42"><name pos:start="1125:36" pos:end="1125:42">cpu_env</name></expr></argument>, <argument pos:start="1125:45" pos:end="1125:47"><expr pos:start="1125:45" pos:end="1125:47"><name pos:start="1125:45" pos:end="1125:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1127:13" pos:end="1127:26"><expr pos:start="1127:13" pos:end="1127:25"><name pos:start="1127:13" pos:end="1127:14">rn</name> <operator pos:start="1127:16" pos:end="1127:16">=</operator> <literal type="string" pos:start="1127:18" pos:end="1127:25">"DataLo"</literal></expr>;</expr_stmt>

            <break pos:start="1129:13" pos:end="1129:18">break;</break>

        <default pos:start="1131:9" pos:end="1131:16">default:</default>

            <goto pos:start="1133:13" pos:end="1133:35">goto <name pos:start="1133:18" pos:end="1133:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1137:9" pos:end="1137:14">break;</break>

    <case pos:start="1139:5" pos:end="1139:12">case <expr pos:start="1139:10" pos:end="1139:11"><literal type="number" pos:start="1139:10" pos:end="1139:11">29</literal></expr>:</case>

        <switch pos:start="1141:9" pos:end="1177:9">switch <condition pos:start="1141:16" pos:end="1141:20">(<expr pos:start="1141:17" pos:end="1141:19"><name pos:start="1141:17" pos:end="1141:19">sel</name></expr>)</condition> <block pos:start="1141:22" pos:end="1177:9">{<block_content pos:start="1143:9" pos:end="1175:35">

        <case pos:start="1143:9" pos:end="1143:15">case <expr pos:start="1143:14" pos:end="1143:14"><literal type="number" pos:start="1143:14" pos:end="1143:14">0</literal></expr>:</case>

        <case pos:start="1145:9" pos:end="1145:15">case <expr pos:start="1145:14" pos:end="1145:14"><literal type="number" pos:start="1145:14" pos:end="1145:14">2</literal></expr>:</case>

        <case pos:start="1147:9" pos:end="1147:15">case <expr pos:start="1147:14" pos:end="1147:14"><literal type="number" pos:start="1147:14" pos:end="1147:14">4</literal></expr>:</case>

        <case pos:start="1149:9" pos:end="1149:15">case <expr pos:start="1149:14" pos:end="1149:14"><literal type="number" pos:start="1149:14" pos:end="1149:14">6</literal></expr>:</case>

            <expr_stmt pos:start="1151:13" pos:end="1151:48"><expr pos:start="1151:13" pos:end="1151:47"><call pos:start="1151:13" pos:end="1151:47"><name pos:start="1151:13" pos:end="1151:33">gen_helper_mtc0_taghi</name><argument_list pos:start="1151:34" pos:end="1151:47">(<argument pos:start="1151:35" pos:end="1151:41"><expr pos:start="1151:35" pos:end="1151:41"><name pos:start="1151:35" pos:end="1151:41">cpu_env</name></expr></argument>, <argument pos:start="1151:44" pos:end="1151:46"><expr pos:start="1151:44" pos:end="1151:46"><name pos:start="1151:44" pos:end="1151:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1153:13" pos:end="1153:25"><expr pos:start="1153:13" pos:end="1153:24"><name pos:start="1153:13" pos:end="1153:14">rn</name> <operator pos:start="1153:16" pos:end="1153:16">=</operator> <literal type="string" pos:start="1153:18" pos:end="1153:24">"TagHi"</literal></expr>;</expr_stmt>

            <break pos:start="1155:13" pos:end="1155:18">break;</break>

        <case pos:start="1157:9" pos:end="1157:15">case <expr pos:start="1157:14" pos:end="1157:14"><literal type="number" pos:start="1157:14" pos:end="1157:14">1</literal></expr>:</case>

        <case pos:start="1159:9" pos:end="1159:15">case <expr pos:start="1159:14" pos:end="1159:14"><literal type="number" pos:start="1159:14" pos:end="1159:14">3</literal></expr>:</case>

        <case pos:start="1161:9" pos:end="1161:15">case <expr pos:start="1161:14" pos:end="1161:14"><literal type="number" pos:start="1161:14" pos:end="1161:14">5</literal></expr>:</case>

        <case pos:start="1163:9" pos:end="1163:15">case <expr pos:start="1163:14" pos:end="1163:14"><literal type="number" pos:start="1163:14" pos:end="1163:14">7</literal></expr>:</case>

            <expr_stmt pos:start="1165:13" pos:end="1165:49"><expr pos:start="1165:13" pos:end="1165:48"><call pos:start="1165:13" pos:end="1165:48"><name pos:start="1165:13" pos:end="1165:34">gen_helper_mtc0_datahi</name><argument_list pos:start="1165:35" pos:end="1165:48">(<argument pos:start="1165:36" pos:end="1165:42"><expr pos:start="1165:36" pos:end="1165:42"><name pos:start="1165:36" pos:end="1165:42">cpu_env</name></expr></argument>, <argument pos:start="1165:45" pos:end="1165:47"><expr pos:start="1165:45" pos:end="1165:47"><name pos:start="1165:45" pos:end="1165:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1167:13" pos:end="1167:26"><expr pos:start="1167:13" pos:end="1167:25"><name pos:start="1167:13" pos:end="1167:14">rn</name> <operator pos:start="1167:16" pos:end="1167:16">=</operator> <literal type="string" pos:start="1167:18" pos:end="1167:25">"DataHi"</literal></expr>;</expr_stmt>

            <break pos:start="1169:13" pos:end="1169:18">break;</break>

        <default pos:start="1171:9" pos:end="1171:16">default:</default>

            <expr_stmt pos:start="1173:13" pos:end="1173:31"><expr pos:start="1173:13" pos:end="1173:30"><name pos:start="1173:13" pos:end="1173:14">rn</name> <operator pos:start="1173:16" pos:end="1173:16">=</operator> <literal type="string" pos:start="1173:18" pos:end="1173:30">"invalid sel"</literal></expr>;</expr_stmt>

            <goto pos:start="1175:13" pos:end="1175:35">goto <name pos:start="1175:18" pos:end="1175:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1179:9" pos:end="1179:14">break;</break>

    <case pos:start="1181:5" pos:end="1181:12">case <expr pos:start="1181:10" pos:end="1181:11"><literal type="number" pos:start="1181:10" pos:end="1181:11">30</literal></expr>:</case>

        <switch pos:start="1183:9" pos:end="1197:9">switch <condition pos:start="1183:16" pos:end="1183:20">(<expr pos:start="1183:17" pos:end="1183:19"><name pos:start="1183:17" pos:end="1183:19">sel</name></expr>)</condition> <block pos:start="1183:22" pos:end="1197:9">{<block_content pos:start="1185:9" pos:end="1195:35">

        <case pos:start="1185:9" pos:end="1185:15">case <expr pos:start="1185:14" pos:end="1185:14"><literal type="number" pos:start="1185:14" pos:end="1185:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1187:13" pos:end="1187:78"><expr pos:start="1187:13" pos:end="1187:77"><call pos:start="1187:13" pos:end="1187:77"><name pos:start="1187:13" pos:end="1187:25">tcg_gen_st_tl</name><argument_list pos:start="1187:26" pos:end="1187:77">(<argument pos:start="1187:27" pos:end="1187:29"><expr pos:start="1187:27" pos:end="1187:29"><name pos:start="1187:27" pos:end="1187:29">arg</name></expr></argument>, <argument pos:start="1187:32" pos:end="1187:38"><expr pos:start="1187:32" pos:end="1187:38"><name pos:start="1187:32" pos:end="1187:38">cpu_env</name></expr></argument>, <argument pos:start="1187:41" pos:end="1187:76"><expr pos:start="1187:41" pos:end="1187:76"><call pos:start="1187:41" pos:end="1187:76"><name pos:start="1187:41" pos:end="1187:48">offsetof</name><argument_list pos:start="1187:49" pos:end="1187:76">(<argument pos:start="1187:50" pos:end="1187:61"><expr pos:start="1187:50" pos:end="1187:61"><name pos:start="1187:50" pos:end="1187:61">CPUMIPSState</name></expr></argument>, <argument pos:start="1187:64" pos:end="1187:75"><expr pos:start="1187:64" pos:end="1187:75"><name pos:start="1187:64" pos:end="1187:75">CP0_ErrorEPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1189:13" pos:end="1189:28"><expr pos:start="1189:13" pos:end="1189:27"><name pos:start="1189:13" pos:end="1189:14">rn</name> <operator pos:start="1189:16" pos:end="1189:16">=</operator> <literal type="string" pos:start="1189:18" pos:end="1189:27">"ErrorEPC"</literal></expr>;</expr_stmt>

            <break pos:start="1191:13" pos:end="1191:18">break;</break>

        <default pos:start="1193:9" pos:end="1193:16">default:</default>

            <goto pos:start="1195:13" pos:end="1195:35">goto <name pos:start="1195:18" pos:end="1195:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1199:9" pos:end="1199:14">break;</break>

    <case pos:start="1201:5" pos:end="1201:12">case <expr pos:start="1201:10" pos:end="1201:11"><literal type="number" pos:start="1201:10" pos:end="1201:11">31</literal></expr>:</case>

        <switch pos:start="1203:9" pos:end="1231:9">switch <condition pos:start="1203:16" pos:end="1203:20">(<expr pos:start="1203:17" pos:end="1203:19"><name pos:start="1203:17" pos:end="1203:19">sel</name></expr>)</condition> <block pos:start="1203:22" pos:end="1231:9">{<block_content pos:start="1205:9" pos:end="1229:35">

        <case pos:start="1205:9" pos:end="1205:15">case <expr pos:start="1205:14" pos:end="1205:14"><literal type="number" pos:start="1205:14" pos:end="1205:14">0</literal></expr>:</case>

            <comment type="block" pos:start="1207:13" pos:end="1207:31">/* EJTAG support */</comment>

            <expr_stmt pos:start="1209:13" pos:end="1209:70"><expr pos:start="1209:13" pos:end="1209:69"><call pos:start="1209:13" pos:end="1209:69"><name pos:start="1209:13" pos:end="1209:28">gen_mtc0_store32</name><argument_list pos:start="1209:29" pos:end="1209:69">(<argument pos:start="1209:30" pos:end="1209:32"><expr pos:start="1209:30" pos:end="1209:32"><name pos:start="1209:30" pos:end="1209:32">arg</name></expr></argument>, <argument pos:start="1209:35" pos:end="1209:68"><expr pos:start="1209:35" pos:end="1209:68"><call pos:start="1209:35" pos:end="1209:68"><name pos:start="1209:35" pos:end="1209:42">offsetof</name><argument_list pos:start="1209:43" pos:end="1209:68">(<argument pos:start="1209:44" pos:end="1209:55"><expr pos:start="1209:44" pos:end="1209:55"><name pos:start="1209:44" pos:end="1209:55">CPUMIPSState</name></expr></argument>, <argument pos:start="1209:58" pos:end="1209:67"><expr pos:start="1209:58" pos:end="1209:67"><name pos:start="1209:58" pos:end="1209:67">CP0_DESAVE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1211:13" pos:end="1211:26"><expr pos:start="1211:13" pos:end="1211:25"><name pos:start="1211:13" pos:end="1211:14">rn</name> <operator pos:start="1211:16" pos:end="1211:16">=</operator> <literal type="string" pos:start="1211:18" pos:end="1211:25">"DESAVE"</literal></expr>;</expr_stmt>

            <break pos:start="1213:13" pos:end="1213:18">break;</break>

        <case pos:start="1215:9" pos:end="1215:21">case <expr pos:start="1215:14" pos:end="1215:20"><literal type="number" pos:start="1215:14" pos:end="1215:14">2</literal> <operator pos:start="1215:16" pos:end="1215:18">...</operator> <literal type="number" pos:start="1215:20" pos:end="1215:20">7</literal></expr>:</case>

            <expr_stmt pos:start="1217:13" pos:end="1217:51"><expr pos:start="1217:13" pos:end="1217:50"><call pos:start="1217:13" pos:end="1217:50"><name pos:start="1217:13" pos:end="1217:21">CP0_CHECK</name><argument_list pos:start="1217:22" pos:end="1217:50">(<argument pos:start="1217:23" pos:end="1217:49"><expr pos:start="1217:23" pos:end="1217:49"><name pos:start="1217:23" pos:end="1217:36"><name pos:start="1217:23" pos:end="1217:25">ctx</name><operator pos:start="1217:26" pos:end="1217:27">-&gt;</operator><name pos:start="1217:28" pos:end="1217:36">kscrexist</name></name> <operator pos:start="1217:38" pos:end="1217:38">&amp;</operator> <operator pos:start="1217:40" pos:end="1217:40">(</operator><literal type="number" pos:start="1217:41" pos:end="1217:41">1</literal> <operator pos:start="1217:43" pos:end="1217:44">&lt;&lt;</operator> <name pos:start="1217:46" pos:end="1217:48">sel</name><operator pos:start="1217:49" pos:end="1217:49">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1219:13" pos:end="1221:71"><expr pos:start="1219:13" pos:end="1221:70"><call pos:start="1219:13" pos:end="1221:70"><name pos:start="1219:13" pos:end="1219:25">tcg_gen_st_tl</name><argument_list pos:start="1219:26" pos:end="1221:70">(<argument pos:start="1219:27" pos:end="1219:29"><expr pos:start="1219:27" pos:end="1219:29"><name pos:start="1219:27" pos:end="1219:29">arg</name></expr></argument>, <argument pos:start="1219:32" pos:end="1219:38"><expr pos:start="1219:32" pos:end="1219:38"><name pos:start="1219:32" pos:end="1219:38">cpu_env</name></expr></argument>,

                          <argument pos:start="1221:27" pos:end="1221:69"><expr pos:start="1221:27" pos:end="1221:69"><call pos:start="1221:27" pos:end="1221:69"><name pos:start="1221:27" pos:end="1221:34">offsetof</name><argument_list pos:start="1221:35" pos:end="1221:69">(<argument pos:start="1221:36" pos:end="1221:47"><expr pos:start="1221:36" pos:end="1221:47"><name pos:start="1221:36" pos:end="1221:47">CPUMIPSState</name></expr></argument>, <argument pos:start="1221:50" pos:end="1221:68"><expr pos:start="1221:50" pos:end="1221:68"><name pos:start="1221:50" pos:end="1221:68"><name pos:start="1221:50" pos:end="1221:61">CP0_KScratch</name><index pos:start="1221:62" pos:end="1221:68">[<expr pos:start="1221:63" pos:end="1221:67"><name pos:start="1221:63" pos:end="1221:65">sel</name><operator pos:start="1221:66" pos:end="1221:66">-</operator><literal type="number" pos:start="1221:67" pos:end="1221:67">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1223:13" pos:end="1223:28"><expr pos:start="1223:13" pos:end="1223:27"><name pos:start="1223:13" pos:end="1223:14">rn</name> <operator pos:start="1223:16" pos:end="1223:16">=</operator> <literal type="string" pos:start="1223:18" pos:end="1223:27">"KScratch"</literal></expr>;</expr_stmt>

            <break pos:start="1225:13" pos:end="1225:18">break;</break>

        <default pos:start="1227:9" pos:end="1227:16">default:</default>

            <goto pos:start="1229:13" pos:end="1229:35">goto <name pos:start="1229:18" pos:end="1229:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <comment type="block" pos:start="1233:9" pos:end="1233:73">/* Stop translation as we may have switched the execution mode */</comment>

        <expr_stmt pos:start="1235:9" pos:end="1235:30"><expr pos:start="1235:9" pos:end="1235:29"><name pos:start="1235:9" pos:end="1235:19"><name pos:start="1235:9" pos:end="1235:11">ctx</name><operator pos:start="1235:12" pos:end="1235:13">-&gt;</operator><name pos:start="1235:14" pos:end="1235:19">bstate</name></name> <operator pos:start="1235:21" pos:end="1235:21">=</operator> <name pos:start="1235:23" pos:end="1235:29">BS_STOP</name></expr>;</expr_stmt>

        <break pos:start="1237:9" pos:end="1237:14">break;</break>

    <default pos:start="1239:5" pos:end="1239:12">default:</default>

        <goto pos:start="1241:9" pos:end="1241:31">goto <name pos:start="1241:14" pos:end="1241:30">cp0_unimplemented</name>;</goto>

    </block_content>}</block></switch>

    <expr_stmt pos:start="1245:5" pos:end="1245:13"><expr pos:start="1245:5" pos:end="1245:12"><operator pos:start="1245:5" pos:end="1245:5">(</operator><name pos:start="1245:6" pos:end="1245:9">void</name><operator pos:start="1245:10" pos:end="1245:10">)</operator><name pos:start="1245:11" pos:end="1245:12">rn</name></expr>;</expr_stmt> <comment type="block" pos:start="1245:15" pos:end="1245:44">/* avoid a compiler warning */</comment>

    <expr_stmt pos:start="1247:5" pos:end="1247:58"><expr pos:start="1247:5" pos:end="1247:57"><call pos:start="1247:5" pos:end="1247:57"><name pos:start="1247:5" pos:end="1247:13">LOG_DISAS</name><argument_list pos:start="1247:14" pos:end="1247:57">(<argument pos:start="1247:15" pos:end="1247:42"><expr pos:start="1247:15" pos:end="1247:42"><literal type="string" pos:start="1247:15" pos:end="1247:42">"dmtc0 %s (reg %d sel %d)\n"</literal></expr></argument>, <argument pos:start="1247:45" pos:end="1247:46"><expr pos:start="1247:45" pos:end="1247:46"><name pos:start="1247:45" pos:end="1247:46">rn</name></expr></argument>, <argument pos:start="1247:49" pos:end="1247:51"><expr pos:start="1247:49" pos:end="1247:51"><name pos:start="1247:49" pos:end="1247:51">reg</name></expr></argument>, <argument pos:start="1247:54" pos:end="1247:56"><expr pos:start="1247:54" pos:end="1247:56"><name pos:start="1247:54" pos:end="1247:56">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="1249:5" pos:end="1249:70">/* For simplicity assume that all writes can cause interrupts.  */</comment>

    <if_stmt pos:start="1251:5" pos:end="1257:5"><if pos:start="1251:5" pos:end="1257:5">if <condition pos:start="1251:8" pos:end="1251:19">(<expr pos:start="1251:9" pos:end="1251:18"><name pos:start="1251:9" pos:end="1251:18">use_icount</name></expr>)</condition> <block pos:start="1251:21" pos:end="1257:5">{<block_content pos:start="1253:9" pos:end="1255:30">

        <expr_stmt pos:start="1253:9" pos:end="1253:21"><expr pos:start="1253:9" pos:end="1253:20"><call pos:start="1253:9" pos:end="1253:20"><name pos:start="1253:9" pos:end="1253:18">gen_io_end</name><argument_list pos:start="1253:19" pos:end="1253:20">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1255:9" pos:end="1255:30"><expr pos:start="1255:9" pos:end="1255:29"><name pos:start="1255:9" pos:end="1255:19"><name pos:start="1255:9" pos:end="1255:11">ctx</name><operator pos:start="1255:12" pos:end="1255:13">-&gt;</operator><name pos:start="1255:14" pos:end="1255:19">bstate</name></name> <operator pos:start="1255:21" pos:end="1255:21">=</operator> <name pos:start="1255:23" pos:end="1255:29">BS_STOP</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="1259:5" pos:end="1259:11">return;</return>



<label pos:start="1263:1" pos:end="1263:18"><name pos:start="1263:1" pos:end="1263:17">cp0_unimplemented</name>:</label>

    <expr_stmt pos:start="1265:5" pos:end="1265:58"><expr pos:start="1265:5" pos:end="1265:57"><call pos:start="1265:5" pos:end="1265:57"><name pos:start="1265:5" pos:end="1265:13">LOG_DISAS</name><argument_list pos:start="1265:14" pos:end="1265:57">(<argument pos:start="1265:15" pos:end="1265:42"><expr pos:start="1265:15" pos:end="1265:42"><literal type="string" pos:start="1265:15" pos:end="1265:42">"dmtc0 %s (reg %d sel %d)\n"</literal></expr></argument>, <argument pos:start="1265:45" pos:end="1265:46"><expr pos:start="1265:45" pos:end="1265:46"><name pos:start="1265:45" pos:end="1265:46">rn</name></expr></argument>, <argument pos:start="1265:49" pos:end="1265:51"><expr pos:start="1265:49" pos:end="1265:51"><name pos:start="1265:49" pos:end="1265:51">reg</name></expr></argument>, <argument pos:start="1265:54" pos:end="1265:56"><expr pos:start="1265:54" pos:end="1265:56"><name pos:start="1265:54" pos:end="1265:56">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
