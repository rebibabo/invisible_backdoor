<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/189.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">libopus_write_header</name><parameter_list pos:start="1:33" pos:end="5:64">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:72"><decl pos:start="1:57" pos:end="1:72"><type pos:start="1:57" pos:end="1:72"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:72">stream_count</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:57"><decl pos:start="3:34" pos:end="3:57"><type pos:start="3:34" pos:end="3:57"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:57">coupled_stream_count</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:63"><decl pos:start="5:34" pos:end="5:63"><type pos:start="5:34" pos:end="5:63"><specifier pos:start="5:34" pos:end="5:38">const</specifier> <name pos:start="5:40" pos:end="5:46">uint8_t</name> <modifier pos:start="5:48" pos:end="5:48">*</modifier></type><name pos:start="5:49" pos:end="5:63">channel_mapping</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="47:1">{<block_content pos:start="9:5" pos:end="45:5">

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">p</name>   <init pos:start="9:18" pos:end="9:35">= <expr pos:start="9:20" pos:end="9:35"><name pos:start="9:20" pos:end="9:35"><name pos:start="9:20" pos:end="9:24">avctx</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:35">extradata</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">channels</name> <init pos:start="11:18" pos:end="11:34">= <expr pos:start="11:20" pos:end="11:34"><name pos:start="11:20" pos:end="11:34"><name pos:start="11:20" pos:end="11:24">avctx</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:34">channels</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><call pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:25">bytestream_put_buffer</name><argument_list pos:start="15:26" pos:end="15:44">(<argument pos:start="15:27" pos:end="15:28"><expr pos:start="15:27" pos:end="15:28"><operator pos:start="15:27" pos:end="15:27">&amp;</operator><name pos:start="15:28" pos:end="15:28">p</name></expr></argument>, <argument pos:start="15:31" pos:end="15:40"><expr pos:start="15:31" pos:end="15:40"><literal type="string" pos:start="15:31" pos:end="15:40">"OpusHead"</literal></expr></argument>, <argument pos:start="15:43" pos:end="15:43"><expr pos:start="15:43" pos:end="15:43"><literal type="number" pos:start="15:43" pos:end="15:43">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><call pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:23">bytestream_put_byte</name><argument_list pos:start="17:24" pos:end="17:30">(<argument pos:start="17:25" pos:end="17:26"><expr pos:start="17:25" pos:end="17:26"><operator pos:start="17:25" pos:end="17:25">&amp;</operator><name pos:start="17:26" pos:end="17:26">p</name></expr></argument>, <argument pos:start="17:29" pos:end="17:29"><expr pos:start="17:29" pos:end="17:29"><literal type="number" pos:start="17:29" pos:end="17:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="17:33" pos:end="17:45">/* Version */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><call pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:23">bytestream_put_byte</name><argument_list pos:start="19:24" pos:end="19:37">(<argument pos:start="19:25" pos:end="19:26"><expr pos:start="19:25" pos:end="19:26"><operator pos:start="19:25" pos:end="19:25">&amp;</operator><name pos:start="19:26" pos:end="19:26">p</name></expr></argument>, <argument pos:start="19:29" pos:end="19:36"><expr pos:start="19:29" pos:end="19:36"><name pos:start="19:29" pos:end="19:36">channels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><call pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:23">bytestream_put_le16</name><argument_list pos:start="21:24" pos:end="21:41">(<argument pos:start="21:25" pos:end="21:26"><expr pos:start="21:25" pos:end="21:26"><operator pos:start="21:25" pos:end="21:25">&amp;</operator><name pos:start="21:26" pos:end="21:26">p</name></expr></argument>, <argument pos:start="21:29" pos:end="21:40"><expr pos:start="21:29" pos:end="21:40"><name pos:start="21:29" pos:end="21:40"><name pos:start="21:29" pos:end="21:33">avctx</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:40">delay</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="21:44" pos:end="21:75">/* Lookahead samples at 48kHz */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:48"><expr pos:start="23:5" pos:end="23:47"><call pos:start="23:5" pos:end="23:47"><name pos:start="23:5" pos:end="23:23">bytestream_put_le32</name><argument_list pos:start="23:24" pos:end="23:47">(<argument pos:start="23:25" pos:end="23:26"><expr pos:start="23:25" pos:end="23:26"><operator pos:start="23:25" pos:end="23:25">&amp;</operator><name pos:start="23:26" pos:end="23:26">p</name></expr></argument>, <argument pos:start="23:29" pos:end="23:46"><expr pos:start="23:29" pos:end="23:46"><name pos:start="23:29" pos:end="23:46"><name pos:start="23:29" pos:end="23:33">avctx</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:46">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:50" pos:end="23:75">/* Original sample rate */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><call pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:23">bytestream_put_le16</name><argument_list pos:start="25:24" pos:end="25:30">(<argument pos:start="25:25" pos:end="25:26"><expr pos:start="25:25" pos:end="25:26"><operator pos:start="25:25" pos:end="25:25">&amp;</operator><name pos:start="25:26" pos:end="25:26">p</name></expr></argument>, <argument pos:start="25:29" pos:end="25:29"><expr pos:start="25:29" pos:end="25:29"><literal type="number" pos:start="25:29" pos:end="25:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:33" pos:end="25:65">/* Gain of 0dB is recommended. */</comment>



    <comment type="block" pos:start="29:5" pos:end="29:25">/* Channel mapping */</comment>

    <if_stmt pos:start="31:5" pos:end="45:5"><if pos:start="31:5" pos:end="41:5">if <condition pos:start="31:8" pos:end="31:21">(<expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:16">channels</name> <operator pos:start="31:18" pos:end="31:18">&gt;</operator> <literal type="number" pos:start="31:20" pos:end="31:20">2</literal></expr>)</condition> <block pos:start="31:23" pos:end="41:5">{<block_content pos:start="33:9" pos:end="39:61">

        <expr_stmt pos:start="33:9" pos:end="33:57"><expr pos:start="33:9" pos:end="33:56"><call pos:start="33:9" pos:end="33:56"><name pos:start="33:9" pos:end="33:27">bytestream_put_byte</name><argument_list pos:start="33:28" pos:end="33:56">(<argument pos:start="33:29" pos:end="33:30"><expr pos:start="33:29" pos:end="33:30"><operator pos:start="33:29" pos:end="33:29">&amp;</operator><name pos:start="33:30" pos:end="33:30">p</name></expr></argument>, <argument pos:start="33:33" pos:end="33:55"><expr pos:start="33:33" pos:end="33:55"><ternary pos:start="33:33" pos:end="33:55"><condition pos:start="33:33" pos:end="33:47"><expr pos:start="33:33" pos:end="33:45"><name pos:start="33:33" pos:end="33:40">channels</name> <operator pos:start="33:42" pos:end="33:43">&lt;=</operator> <literal type="number" pos:start="33:45" pos:end="33:45">8</literal></expr> ?</condition><then pos:start="33:49" pos:end="33:49"> <expr pos:start="33:49" pos:end="33:49"><literal type="number" pos:start="33:49" pos:end="33:49">1</literal></expr> </then><else pos:start="33:51" pos:end="33:55">: <expr pos:start="33:53" pos:end="33:55"><literal type="number" pos:start="33:53" pos:end="33:55">255</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:46"><expr pos:start="35:9" pos:end="35:45"><call pos:start="35:9" pos:end="35:45"><name pos:start="35:9" pos:end="35:27">bytestream_put_byte</name><argument_list pos:start="35:28" pos:end="35:45">(<argument pos:start="35:29" pos:end="35:30"><expr pos:start="35:29" pos:end="35:30"><operator pos:start="35:29" pos:end="35:29">&amp;</operator><name pos:start="35:30" pos:end="35:30">p</name></expr></argument>, <argument pos:start="35:33" pos:end="35:44"><expr pos:start="35:33" pos:end="35:44"><name pos:start="35:33" pos:end="35:44">stream_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:54"><expr pos:start="37:9" pos:end="37:53"><call pos:start="37:9" pos:end="37:53"><name pos:start="37:9" pos:end="37:27">bytestream_put_byte</name><argument_list pos:start="37:28" pos:end="37:53">(<argument pos:start="37:29" pos:end="37:30"><expr pos:start="37:29" pos:end="37:30"><operator pos:start="37:29" pos:end="37:29">&amp;</operator><name pos:start="37:30" pos:end="37:30">p</name></expr></argument>, <argument pos:start="37:33" pos:end="37:52"><expr pos:start="37:33" pos:end="37:52"><name pos:start="37:33" pos:end="37:52">coupled_stream_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:61"><expr pos:start="39:9" pos:end="39:60"><call pos:start="39:9" pos:end="39:60"><name pos:start="39:9" pos:end="39:29">bytestream_put_buffer</name><argument_list pos:start="39:30" pos:end="39:60">(<argument pos:start="39:31" pos:end="39:32"><expr pos:start="39:31" pos:end="39:32"><operator pos:start="39:31" pos:end="39:31">&amp;</operator><name pos:start="39:32" pos:end="39:32">p</name></expr></argument>, <argument pos:start="39:35" pos:end="39:49"><expr pos:start="39:35" pos:end="39:49"><name pos:start="39:35" pos:end="39:49">channel_mapping</name></expr></argument>, <argument pos:start="39:52" pos:end="39:59"><expr pos:start="39:52" pos:end="39:59"><name pos:start="39:52" pos:end="39:59">channels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="45:5">else <block pos:start="41:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:35">

        <expr_stmt pos:start="43:9" pos:end="43:35"><expr pos:start="43:9" pos:end="43:34"><call pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:27">bytestream_put_byte</name><argument_list pos:start="43:28" pos:end="43:34">(<argument pos:start="43:29" pos:end="43:30"><expr pos:start="43:29" pos:end="43:30"><operator pos:start="43:29" pos:end="43:29">&amp;</operator><name pos:start="43:30" pos:end="43:30">p</name></expr></argument>, <argument pos:start="43:33" pos:end="43:33"><expr pos:start="43:33" pos:end="43:33"><literal type="number" pos:start="43:33" pos:end="43:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
