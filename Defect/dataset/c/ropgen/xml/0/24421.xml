<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24421.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">vorbis_parse_id_hdr</name><parameter_list pos:start="1:31" pos:end="1:50">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">vorbis_context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">vc</name></decl></parameter>)</parameter_list><block pos:start="1:51" pos:end="145:1">{<block_content pos:start="3:5" pos:end="143:13">

    <decl_stmt pos:start="3:5" pos:end="3:30"><decl pos:start="3:5" pos:end="3:29"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:17">GetBitContext</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:21">gb</name><init pos:start="3:22" pos:end="3:29">=<expr pos:start="3:23" pos:end="3:29"><operator pos:start="3:23" pos:end="3:23">&amp;</operator><name pos:start="3:24" pos:end="3:29"><name pos:start="3:24" pos:end="3:25">vc</name><operator pos:start="3:26" pos:end="3:27">-&gt;</operator><name pos:start="3:28" pos:end="3:29">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:16">uint_fast8_t</name></type> <name pos:start="5:18" pos:end="5:20">bl0</name></decl>, <decl pos:start="5:23" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:23" pos:end="5:25">bl1</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="19:5"><if pos:start="9:5" pos:end="19:5">if <condition pos:start="9:8" pos:end="13:53">(<expr pos:start="9:9" pos:end="13:52"><operator pos:start="9:9" pos:end="9:9">(</operator><call pos:start="9:10" pos:end="9:24"><name pos:start="9:10" pos:end="9:17">get_bits</name><argument_list pos:start="9:18" pos:end="9:24">(<argument pos:start="9:19" pos:end="9:20"><expr pos:start="9:19" pos:end="9:20"><name pos:start="9:19" pos:end="9:20">gb</name></expr></argument>, <argument pos:start="9:23" pos:end="9:23"><expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">8</literal></expr></argument>)</argument_list></call><operator pos:start="9:25" pos:end="9:26">!=</operator><literal type="char" pos:start="9:27" pos:end="9:29">'v'</literal><operator pos:start="9:30" pos:end="9:30">)</operator> <operator pos:start="9:32" pos:end="9:33">||</operator> <operator pos:start="9:35" pos:end="9:35">(</operator><call pos:start="9:36" pos:end="9:50"><name pos:start="9:36" pos:end="9:43">get_bits</name><argument_list pos:start="9:44" pos:end="9:50">(<argument pos:start="9:45" pos:end="9:46"><expr pos:start="9:45" pos:end="9:46"><name pos:start="9:45" pos:end="9:46">gb</name></expr></argument>, <argument pos:start="9:49" pos:end="9:49"><expr pos:start="9:49" pos:end="9:49"><literal type="number" pos:start="9:49" pos:end="9:49">8</literal></expr></argument>)</argument_list></call><operator pos:start="9:51" pos:end="9:52">!=</operator><literal type="char" pos:start="9:53" pos:end="9:55">'o'</literal><operator pos:start="9:56" pos:end="9:56">)</operator> <operator pos:start="9:58" pos:end="9:59">||</operator>

    <operator pos:start="11:5" pos:end="11:5">(</operator><call pos:start="11:6" pos:end="11:20"><name pos:start="11:6" pos:end="11:13">get_bits</name><argument_list pos:start="11:14" pos:end="11:20">(<argument pos:start="11:15" pos:end="11:16"><expr pos:start="11:15" pos:end="11:16"><name pos:start="11:15" pos:end="11:16">gb</name></expr></argument>, <argument pos:start="11:19" pos:end="11:19"><expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">8</literal></expr></argument>)</argument_list></call><operator pos:start="11:21" pos:end="11:22">!=</operator><literal type="char" pos:start="11:23" pos:end="11:25">'r'</literal><operator pos:start="11:26" pos:end="11:26">)</operator> <operator pos:start="11:28" pos:end="11:29">||</operator> <operator pos:start="11:31" pos:end="11:31">(</operator><call pos:start="11:32" pos:end="11:46"><name pos:start="11:32" pos:end="11:39">get_bits</name><argument_list pos:start="11:40" pos:end="11:46">(<argument pos:start="11:41" pos:end="11:42"><expr pos:start="11:41" pos:end="11:42"><name pos:start="11:41" pos:end="11:42">gb</name></expr></argument>, <argument pos:start="11:45" pos:end="11:45"><expr pos:start="11:45" pos:end="11:45"><literal type="number" pos:start="11:45" pos:end="11:45">8</literal></expr></argument>)</argument_list></call><operator pos:start="11:47" pos:end="11:48">!=</operator><literal type="char" pos:start="11:49" pos:end="11:51">'b'</literal><operator pos:start="11:52" pos:end="11:52">)</operator> <operator pos:start="11:54" pos:end="11:55">||</operator>

    <operator pos:start="13:5" pos:end="13:5">(</operator><call pos:start="13:6" pos:end="13:20"><name pos:start="13:6" pos:end="13:13">get_bits</name><argument_list pos:start="13:14" pos:end="13:20">(<argument pos:start="13:15" pos:end="13:16"><expr pos:start="13:15" pos:end="13:16"><name pos:start="13:15" pos:end="13:16">gb</name></expr></argument>, <argument pos:start="13:19" pos:end="13:19"><expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">8</literal></expr></argument>)</argument_list></call><operator pos:start="13:21" pos:end="13:22">!=</operator><literal type="char" pos:start="13:23" pos:end="13:25">'i'</literal><operator pos:start="13:26" pos:end="13:26">)</operator> <operator pos:start="13:28" pos:end="13:29">||</operator> <operator pos:start="13:31" pos:end="13:31">(</operator><call pos:start="13:32" pos:end="13:46"><name pos:start="13:32" pos:end="13:39">get_bits</name><argument_list pos:start="13:40" pos:end="13:46">(<argument pos:start="13:41" pos:end="13:42"><expr pos:start="13:41" pos:end="13:42"><name pos:start="13:41" pos:end="13:42">gb</name></expr></argument>, <argument pos:start="13:45" pos:end="13:45"><expr pos:start="13:45" pos:end="13:45"><literal type="number" pos:start="13:45" pos:end="13:45">8</literal></expr></argument>)</argument_list></call><operator pos:start="13:47" pos:end="13:48">!=</operator><literal type="char" pos:start="13:49" pos:end="13:51">'s'</literal><operator pos:start="13:52" pos:end="13:52">)</operator></expr>)</condition> <block pos:start="13:55" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:17">

        <expr_stmt pos:start="15:9" pos:end="15:107"><expr pos:start="15:9" pos:end="15:106"><call pos:start="15:9" pos:end="15:106"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:106">(<argument pos:start="15:16" pos:end="15:29"><expr pos:start="15:16" pos:end="15:29"><name pos:start="15:16" pos:end="15:29"><name pos:start="15:16" pos:end="15:17">vc</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:29">avccontext</name></name></expr></argument>, <argument pos:start="15:32" pos:end="15:43"><expr pos:start="15:32" pos:end="15:43"><name pos:start="15:32" pos:end="15:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:46" pos:end="15:105"><expr pos:start="15:46" pos:end="15:105"><literal type="string" pos:start="15:46" pos:end="15:105">" Vorbis id header packet corrupt (no vorbis signature). \n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:6">vc</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:15">version</name></name><operator pos:start="23:16" pos:end="23:16">=</operator><call pos:start="23:17" pos:end="23:37"><name pos:start="23:17" pos:end="23:29">get_bits_long</name><argument_list pos:start="23:30" pos:end="23:37">(<argument pos:start="23:31" pos:end="23:32"><expr pos:start="23:31" pos:end="23:32"><name pos:start="23:31" pos:end="23:32">gb</name></expr></argument>, <argument pos:start="23:35" pos:end="23:36"><expr pos:start="23:35" pos:end="23:36"><literal type="number" pos:start="23:35" pos:end="23:36">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="line" pos:start="23:43" pos:end="23:57">//FIXME check 0</comment>

    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:6">vc</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:22">audio_channels</name></name><operator pos:start="25:23" pos:end="25:23">=</operator><call pos:start="25:24" pos:end="25:38"><name pos:start="25:24" pos:end="25:31">get_bits</name><argument_list pos:start="25:32" pos:end="25:38">(<argument pos:start="25:33" pos:end="25:34"><expr pos:start="25:33" pos:end="25:34"><name pos:start="25:33" pos:end="25:34">gb</name></expr></argument>, <argument pos:start="25:37" pos:end="25:37"><expr pos:start="25:37" pos:end="25:37"><literal type="number" pos:start="25:37" pos:end="25:37">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="25:43" pos:end="25:58">//FIXME check &gt;0</comment>

    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:6">vc</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:24">audio_samplerate</name></name><operator pos:start="27:25" pos:end="27:25">=</operator><call pos:start="27:26" pos:end="27:46"><name pos:start="27:26" pos:end="27:38">get_bits_long</name><argument_list pos:start="27:39" pos:end="27:46">(<argument pos:start="27:40" pos:end="27:41"><expr pos:start="27:40" pos:end="27:41"><name pos:start="27:40" pos:end="27:41">gb</name></expr></argument>, <argument pos:start="27:44" pos:end="27:45"><expr pos:start="27:44" pos:end="27:45"><literal type="number" pos:start="27:44" pos:end="27:45">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="27:51" pos:end="27:66">//FIXME check &gt;0</comment>

    <expr_stmt pos:start="29:5" pos:end="29:46"><expr pos:start="29:5" pos:end="29:45"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:6">vc</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:23">bitrate_maximum</name></name><operator pos:start="29:24" pos:end="29:24">=</operator><call pos:start="29:25" pos:end="29:45"><name pos:start="29:25" pos:end="29:37">get_bits_long</name><argument_list pos:start="29:38" pos:end="29:45">(<argument pos:start="29:39" pos:end="29:40"><expr pos:start="29:39" pos:end="29:40"><name pos:start="29:39" pos:end="29:40">gb</name></expr></argument>, <argument pos:start="29:43" pos:end="29:44"><expr pos:start="29:43" pos:end="29:44"><literal type="number" pos:start="29:43" pos:end="29:44">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:6">vc</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:23">bitrate_nominal</name></name><operator pos:start="31:24" pos:end="31:24">=</operator><call pos:start="31:25" pos:end="31:45"><name pos:start="31:25" pos:end="31:37">get_bits_long</name><argument_list pos:start="31:38" pos:end="31:45">(<argument pos:start="31:39" pos:end="31:40"><expr pos:start="31:39" pos:end="31:40"><name pos:start="31:39" pos:end="31:40">gb</name></expr></argument>, <argument pos:start="31:43" pos:end="31:44"><expr pos:start="31:43" pos:end="31:44"><literal type="number" pos:start="31:43" pos:end="31:44">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:6">vc</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:23">bitrate_minimum</name></name><operator pos:start="33:24" pos:end="33:24">=</operator><call pos:start="33:25" pos:end="33:45"><name pos:start="33:25" pos:end="33:37">get_bits_long</name><argument_list pos:start="33:38" pos:end="33:45">(<argument pos:start="33:39" pos:end="33:40"><expr pos:start="33:39" pos:end="33:40"><name pos:start="33:39" pos:end="33:40">gb</name></expr></argument>, <argument pos:start="33:43" pos:end="33:44"><expr pos:start="33:43" pos:end="33:44"><literal type="number" pos:start="33:43" pos:end="33:44">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:7">bl0</name><operator pos:start="35:8" pos:end="35:8">=</operator><call pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:16">get_bits</name><argument_list pos:start="35:17" pos:end="35:23">(<argument pos:start="35:18" pos:end="35:19"><expr pos:start="35:18" pos:end="35:19"><name pos:start="35:18" pos:end="35:19">gb</name></expr></argument>, <argument pos:start="35:22" pos:end="35:22"><expr pos:start="35:22" pos:end="35:22"><literal type="number" pos:start="35:22" pos:end="35:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:24"><expr pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:7">bl1</name><operator pos:start="37:8" pos:end="37:8">=</operator><call pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:16">get_bits</name><argument_list pos:start="37:17" pos:end="37:23">(<argument pos:start="37:18" pos:end="37:19"><expr pos:start="37:18" pos:end="37:19"><name pos:start="37:18" pos:end="37:19">gb</name></expr></argument>, <argument pos:start="37:22" pos:end="37:22"><expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:30"><expr pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:6">vc</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:17">blocksize</name><index pos:start="39:18" pos:end="39:20">[<expr pos:start="39:19" pos:end="39:19"><literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>]</index></name><operator pos:start="39:21" pos:end="39:21">=</operator><operator pos:start="39:22" pos:end="39:22">(</operator><literal type="number" pos:start="39:23" pos:end="39:23">1</literal><operator pos:start="39:24" pos:end="39:25">&lt;&lt;</operator><name pos:start="39:26" pos:end="39:28">bl0</name><operator pos:start="39:29" pos:end="39:29">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:6">vc</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:17">blocksize</name><index pos:start="41:18" pos:end="41:20">[<expr pos:start="41:19" pos:end="41:19"><literal type="number" pos:start="41:19" pos:end="41:19">1</literal></expr>]</index></name><operator pos:start="41:21" pos:end="41:21">=</operator><operator pos:start="41:22" pos:end="41:22">(</operator><literal type="number" pos:start="41:23" pos:end="41:23">1</literal><operator pos:start="41:24" pos:end="41:25">&lt;&lt;</operator><name pos:start="41:26" pos:end="41:28">bl1</name><operator pos:start="41:29" pos:end="41:29">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:54">(<expr pos:start="43:9" pos:end="43:53"><name pos:start="43:9" pos:end="43:11">bl0</name><operator pos:start="43:12" pos:end="43:12">&gt;</operator><literal type="number" pos:start="43:13" pos:end="43:14">13</literal> <operator pos:start="43:16" pos:end="43:17">||</operator> <name pos:start="43:19" pos:end="43:31"><name pos:start="43:19" pos:end="43:21">bl0</name><argument_list type="generic" pos:start="43:22" pos:end="43:31">&lt;<argument pos:start="43:23" pos:end="43:30"><expr pos:start="43:23" pos:end="43:30"><literal type="number" pos:start="43:23" pos:end="43:23">6</literal> <operator pos:start="43:25" pos:end="43:26">||</operator> <name pos:start="43:28" pos:end="43:30">bl1</name></expr></argument>&gt;</argument_list></name><literal type="number" pos:start="43:32" pos:end="43:33">13</literal> <operator pos:start="43:35" pos:end="43:36">||</operator> <name pos:start="43:38" pos:end="43:40">bl1</name><operator pos:start="43:41" pos:end="43:41">&lt;</operator><literal type="number" pos:start="43:42" pos:end="43:42">6</literal> <operator pos:start="43:44" pos:end="43:45">||</operator> <name pos:start="43:47" pos:end="43:49">bl1</name><operator pos:start="43:50" pos:end="43:50">&lt;</operator><name pos:start="43:51" pos:end="43:53">bl0</name></expr>)</condition> <block pos:start="43:56" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:17">

        <expr_stmt pos:start="45:9" pos:end="45:105"><expr pos:start="45:9" pos:end="45:104"><call pos:start="45:9" pos:end="45:104"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:104">(<argument pos:start="45:16" pos:end="45:29"><expr pos:start="45:16" pos:end="45:29"><name pos:start="45:16" pos:end="45:29"><name pos:start="45:16" pos:end="45:17">vc</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:29">avccontext</name></name></expr></argument>, <argument pos:start="45:32" pos:end="45:43"><expr pos:start="45:32" pos:end="45:43"><name pos:start="45:32" pos:end="45:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:46" pos:end="45:103"><expr pos:start="45:46" pos:end="45:103"><literal type="string" pos:start="45:46" pos:end="45:103">" Vorbis id header packet corrupt (illegal blocksize). \n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">3</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="51:5" pos:end="51:26">// output format int16</comment>

    <if_stmt pos:start="53:5" pos:end="63:5"><if pos:start="53:5" pos:end="63:5">if <condition pos:start="53:8" pos:end="55:74">(<expr pos:start="53:9" pos:end="55:73"><name pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:10">vc</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:21">blocksize</name><index pos:start="53:22" pos:end="53:24">[<expr pos:start="53:23" pos:end="53:23"><literal type="number" pos:start="53:23" pos:end="53:23">1</literal></expr>]</index></name><operator pos:start="53:25" pos:end="53:25">/</operator><literal type="number" pos:start="53:26" pos:end="53:26">2</literal> <operator pos:start="53:28" pos:end="53:28">*</operator> <name pos:start="53:30" pos:end="53:47"><name pos:start="53:30" pos:end="53:31">vc</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:47">audio_channels</name></name> <operator pos:start="53:49" pos:end="53:49">*</operator> <literal type="number" pos:start="53:51" pos:end="53:51">2</literal> <operator pos:start="53:53" pos:end="53:53">&gt;</operator>

                                             <name pos:start="55:46" pos:end="55:73">AVCODEC_MAX_AUDIO_FRAME_SIZE</name></expr>)</condition> <block pos:start="55:76" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:17">

        <expr_stmt pos:start="57:9" pos:end="59:46"><expr pos:start="57:9" pos:end="59:45"><call pos:start="57:9" pos:end="59:45"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="59:45">(<argument pos:start="57:16" pos:end="57:29"><expr pos:start="57:16" pos:end="57:29"><name pos:start="57:16" pos:end="57:29"><name pos:start="57:16" pos:end="57:17">vc</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:29">avccontext</name></name></expr></argument>, <argument pos:start="57:32" pos:end="57:43"><expr pos:start="57:32" pos:end="57:43"><name pos:start="57:32" pos:end="57:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:46" pos:end="59:44"><expr pos:start="57:46" pos:end="59:44"><literal type="string" pos:start="57:46" pos:end="57:74">"Vorbis channel count makes "</literal>

               <literal type="string" pos:start="59:16" pos:end="59:44">"output packets too large.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:17">return <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">4</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:37"><expr pos:start="65:5" pos:end="65:36"><name pos:start="65:5" pos:end="65:14"><name pos:start="65:5" pos:end="65:6">vc</name><operator pos:start="65:7" pos:end="65:8">-&gt;</operator><name pos:start="65:9" pos:end="65:11">win</name><index pos:start="65:12" pos:end="65:14">[<expr pos:start="65:13" pos:end="65:13"><literal type="number" pos:start="65:13" pos:end="65:13">0</literal></expr>]</index></name><operator pos:start="65:15" pos:end="65:15">=</operator><name pos:start="65:16" pos:end="65:36"><name pos:start="65:16" pos:end="65:29">ff_vorbis_vwin</name><index pos:start="65:30" pos:end="65:36">[<expr pos:start="65:31" pos:end="65:35"><name pos:start="65:31" pos:end="65:33">bl0</name><operator pos:start="65:34" pos:end="65:34">-</operator><literal type="number" pos:start="65:35" pos:end="65:35">6</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:37"><expr pos:start="67:5" pos:end="67:36"><name pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:6">vc</name><operator pos:start="67:7" pos:end="67:8">-&gt;</operator><name pos:start="67:9" pos:end="67:11">win</name><index pos:start="67:12" pos:end="67:14">[<expr pos:start="67:13" pos:end="67:13"><literal type="number" pos:start="67:13" pos:end="67:13">1</literal></expr>]</index></name><operator pos:start="67:15" pos:end="67:15">=</operator><name pos:start="67:16" pos:end="67:36"><name pos:start="67:16" pos:end="67:29">ff_vorbis_vwin</name><index pos:start="67:30" pos:end="67:36">[<expr pos:start="67:31" pos:end="67:35"><name pos:start="67:31" pos:end="67:33">bl1</name><operator pos:start="67:34" pos:end="67:34">-</operator><literal type="number" pos:start="67:35" pos:end="67:35">6</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="71:5" pos:end="87:5"><if pos:start="71:5" pos:end="87:5">if<condition pos:start="71:7" pos:end="71:20">(<expr pos:start="71:8" pos:end="71:19"><name pos:start="71:8" pos:end="71:19"><name pos:start="71:8" pos:end="71:9">vc</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:19">exp_bias</name></name></expr>)</condition><block pos:start="71:21" pos:end="87:5">{<block_content pos:start="73:9" pos:end="85:9">

        <decl_stmt pos:start="73:9" pos:end="73:17"><decl pos:start="73:9" pos:end="73:13"><type pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">int</name></type> <name pos:start="73:13" pos:end="73:13">i</name></decl>, <decl pos:start="73:16" pos:end="73:16"><type ref="prev" pos:start="73:9" pos:end="73:11"/><name pos:start="73:16" pos:end="73:16">j</name></decl>;</decl_stmt>

        <for pos:start="75:9" pos:end="85:9">for<control pos:start="75:12" pos:end="75:26">(<init pos:start="75:13" pos:end="75:16"><expr pos:start="75:13" pos:end="75:15"><name pos:start="75:13" pos:end="75:13">j</name><operator pos:start="75:14" pos:end="75:14">=</operator><literal type="number" pos:start="75:15" pos:end="75:15">0</literal></expr>;</init> <condition pos:start="75:18" pos:end="75:21"><expr pos:start="75:18" pos:end="75:20"><name pos:start="75:18" pos:end="75:18">j</name><operator pos:start="75:19" pos:end="75:19">&lt;</operator><literal type="number" pos:start="75:20" pos:end="75:20">2</literal></expr>;</condition> <incr pos:start="75:23" pos:end="75:25"><expr pos:start="75:23" pos:end="75:25"><name pos:start="75:23" pos:end="75:23">j</name><operator pos:start="75:24" pos:end="75:25">++</operator></expr></incr>)</control><block pos:start="75:27" pos:end="85:9">{<block_content pos:start="77:13" pos:end="83:29">

            <decl_stmt pos:start="77:13" pos:end="77:71"><decl pos:start="77:13" pos:end="77:70"><type pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:17">float</name> <modifier pos:start="77:19" pos:end="77:19">*</modifier></type><name pos:start="77:20" pos:end="77:22">win</name> <init pos:start="77:24" pos:end="77:70">= <expr pos:start="77:26" pos:end="77:70"><call pos:start="77:26" pos:end="77:70"><name pos:start="77:26" pos:end="77:34">av_malloc</name><argument_list pos:start="77:35" pos:end="77:70">(<argument pos:start="77:36" pos:end="77:69"><expr pos:start="77:36" pos:end="77:69"><name pos:start="77:36" pos:end="77:51"><name pos:start="77:36" pos:end="77:37">vc</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:48">blocksize</name><index pos:start="77:49" pos:end="77:51">[<expr pos:start="77:50" pos:end="77:50"><name pos:start="77:50" pos:end="77:50">j</name></expr>]</index></name><operator pos:start="77:52" pos:end="77:52">/</operator><literal type="number" pos:start="77:53" pos:end="77:53">2</literal> <operator pos:start="77:55" pos:end="77:55">*</operator> <sizeof pos:start="77:57" pos:end="77:69">sizeof<argument_list pos:start="77:63" pos:end="77:69">(<argument pos:start="77:64" pos:end="77:68"><expr pos:start="77:64" pos:end="77:68"><name pos:start="77:64" pos:end="77:68">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <for pos:start="79:13" pos:end="81:49">for<control pos:start="79:16" pos:end="79:47">(<init pos:start="79:17" pos:end="79:20"><expr pos:start="79:17" pos:end="79:19"><name pos:start="79:17" pos:end="79:17">i</name><operator pos:start="79:18" pos:end="79:18">=</operator><literal type="number" pos:start="79:19" pos:end="79:19">0</literal></expr>;</init> <condition pos:start="79:22" pos:end="79:42"><expr pos:start="79:22" pos:end="79:41"><name pos:start="79:22" pos:end="79:22">i</name><operator pos:start="79:23" pos:end="79:23">&lt;</operator><name pos:start="79:24" pos:end="79:39"><name pos:start="79:24" pos:end="79:25">vc</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:36">blocksize</name><index pos:start="79:37" pos:end="79:39">[<expr pos:start="79:38" pos:end="79:38"><name pos:start="79:38" pos:end="79:38">j</name></expr>]</index></name><operator pos:start="79:40" pos:end="79:40">/</operator><literal type="number" pos:start="79:41" pos:end="79:41">2</literal></expr>;</condition> <incr pos:start="79:44" pos:end="79:46"><expr pos:start="79:44" pos:end="79:46"><name pos:start="79:44" pos:end="79:44">i</name><operator pos:start="79:45" pos:end="79:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="81:17" pos:end="81:49"><block_content pos:start="81:17" pos:end="81:49">

                <expr_stmt pos:start="81:17" pos:end="81:49"><expr pos:start="81:17" pos:end="81:48"><name pos:start="81:17" pos:end="81:22"><name pos:start="81:17" pos:end="81:19">win</name><index pos:start="81:20" pos:end="81:22">[<expr pos:start="81:21" pos:end="81:21"><name pos:start="81:21" pos:end="81:21">i</name></expr>]</index></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <name pos:start="81:26" pos:end="81:38"><name pos:start="81:26" pos:end="81:27">vc</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:32">win</name><index pos:start="81:33" pos:end="81:35">[<expr pos:start="81:34" pos:end="81:34"><name pos:start="81:34" pos:end="81:34">j</name></expr>]</index><index pos:start="81:36" pos:end="81:38">[<expr pos:start="81:37" pos:end="81:37"><name pos:start="81:37" pos:end="81:37">i</name></expr>]</index></name> <operator pos:start="81:40" pos:end="81:40">*</operator> <operator pos:start="81:42" pos:end="81:42">(</operator><literal type="number" pos:start="81:43" pos:end="81:43">1</literal><operator pos:start="81:44" pos:end="81:45">&lt;&lt;</operator><literal type="number" pos:start="81:46" pos:end="81:47">15</literal><operator pos:start="81:48" pos:end="81:48">)</operator></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="83:13" pos:end="83:29"><expr pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:22"><name pos:start="83:13" pos:end="83:14">vc</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:19">win</name><index pos:start="83:20" pos:end="83:22">[<expr pos:start="83:21" pos:end="83:21"><name pos:start="83:21" pos:end="83:21">j</name></expr>]</index></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <name pos:start="83:26" pos:end="83:28">win</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:29">(<expr pos:start="91:9" pos:end="91:28"><operator pos:start="91:9" pos:end="91:9">(</operator><call pos:start="91:10" pos:end="91:22"><name pos:start="91:10" pos:end="91:18">get_bits1</name><argument_list pos:start="91:19" pos:end="91:22">(<argument pos:start="91:20" pos:end="91:21"><expr pos:start="91:20" pos:end="91:21"><name pos:start="91:20" pos:end="91:21">gb</name></expr></argument>)</argument_list></call><operator pos:start="91:23" pos:end="91:23">)</operator> <operator pos:start="91:25" pos:end="91:26">==</operator> <literal type="number" pos:start="91:28" pos:end="91:28">0</literal></expr>)</condition> <block pos:start="91:31" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:17">

        <expr_stmt pos:start="93:9" pos:end="93:108"><expr pos:start="93:9" pos:end="93:107"><call pos:start="93:9" pos:end="93:107"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:107">(<argument pos:start="93:16" pos:end="93:29"><expr pos:start="93:16" pos:end="93:29"><name pos:start="93:16" pos:end="93:29"><name pos:start="93:16" pos:end="93:17">vc</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:29">avccontext</name></name></expr></argument>, <argument pos:start="93:32" pos:end="93:43"><expr pos:start="93:32" pos:end="93:43"><name pos:start="93:32" pos:end="93:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:46" pos:end="93:106"><expr pos:start="93:46" pos:end="93:106"><literal type="string" pos:start="93:46" pos:end="93:106">" Vorbis id header packet corrupt (framing flag not set). \n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:17">return <expr pos:start="95:16" pos:end="95:16"><literal type="number" pos:start="95:16" pos:end="95:16">2</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:101"><expr pos:start="101:5" pos:end="101:100"><name pos:start="101:5" pos:end="101:24"><name pos:start="101:5" pos:end="101:6">vc</name><operator pos:start="101:7" pos:end="101:8">-&gt;</operator><name pos:start="101:9" pos:end="101:24">channel_residues</name></name><operator pos:start="101:25" pos:end="101:25">=</operator><operator pos:start="101:26" pos:end="101:26">(</operator><name pos:start="101:27" pos:end="101:31">float</name> <operator pos:start="101:33" pos:end="101:33">*</operator><operator pos:start="101:34" pos:end="101:34">)</operator><call pos:start="101:35" pos:end="101:100"><name pos:start="101:35" pos:end="101:43">av_malloc</name><argument_list pos:start="101:44" pos:end="101:100">(<argument pos:start="101:45" pos:end="101:99"><expr pos:start="101:45" pos:end="101:99"><operator pos:start="101:45" pos:end="101:45">(</operator><name pos:start="101:46" pos:end="101:61"><name pos:start="101:46" pos:end="101:47">vc</name><operator pos:start="101:48" pos:end="101:49">-&gt;</operator><name pos:start="101:50" pos:end="101:58">blocksize</name><index pos:start="101:59" pos:end="101:61">[<expr pos:start="101:60" pos:end="101:60"><literal type="number" pos:start="101:60" pos:end="101:60">1</literal></expr>]</index></name><operator pos:start="101:62" pos:end="101:62">/</operator><literal type="number" pos:start="101:63" pos:end="101:63">2</literal><operator pos:start="101:64" pos:end="101:64">)</operator><operator pos:start="101:65" pos:end="101:65">*</operator><name pos:start="101:66" pos:end="101:83"><name pos:start="101:66" pos:end="101:67">vc</name><operator pos:start="101:68" pos:end="101:69">-&gt;</operator><name pos:start="101:70" pos:end="101:83">audio_channels</name></name> <operator pos:start="101:85" pos:end="101:85">*</operator> <sizeof pos:start="101:87" pos:end="101:99">sizeof<argument_list pos:start="101:93" pos:end="101:99">(<argument pos:start="101:94" pos:end="101:98"><expr pos:start="101:94" pos:end="101:98"><name pos:start="101:94" pos:end="101:98">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:99"><expr pos:start="103:5" pos:end="103:98"><name pos:start="103:5" pos:end="103:22"><name pos:start="103:5" pos:end="103:6">vc</name><operator pos:start="103:7" pos:end="103:8">-&gt;</operator><name pos:start="103:9" pos:end="103:22">channel_floors</name></name><operator pos:start="103:23" pos:end="103:23">=</operator><operator pos:start="103:24" pos:end="103:24">(</operator><name pos:start="103:25" pos:end="103:29">float</name> <operator pos:start="103:31" pos:end="103:31">*</operator><operator pos:start="103:32" pos:end="103:32">)</operator><call pos:start="103:33" pos:end="103:98"><name pos:start="103:33" pos:end="103:41">av_malloc</name><argument_list pos:start="103:42" pos:end="103:98">(<argument pos:start="103:43" pos:end="103:97"><expr pos:start="103:43" pos:end="103:97"><operator pos:start="103:43" pos:end="103:43">(</operator><name pos:start="103:44" pos:end="103:59"><name pos:start="103:44" pos:end="103:45">vc</name><operator pos:start="103:46" pos:end="103:47">-&gt;</operator><name pos:start="103:48" pos:end="103:56">blocksize</name><index pos:start="103:57" pos:end="103:59">[<expr pos:start="103:58" pos:end="103:58"><literal type="number" pos:start="103:58" pos:end="103:58">1</literal></expr>]</index></name><operator pos:start="103:60" pos:end="103:60">/</operator><literal type="number" pos:start="103:61" pos:end="103:61">2</literal><operator pos:start="103:62" pos:end="103:62">)</operator><operator pos:start="103:63" pos:end="103:63">*</operator><name pos:start="103:64" pos:end="103:81"><name pos:start="103:64" pos:end="103:65">vc</name><operator pos:start="103:66" pos:end="103:67">-&gt;</operator><name pos:start="103:68" pos:end="103:81">audio_channels</name></name> <operator pos:start="103:83" pos:end="103:83">*</operator> <sizeof pos:start="103:85" pos:end="103:97">sizeof<argument_list pos:start="103:91" pos:end="103:97">(<argument pos:start="103:92" pos:end="103:96"><expr pos:start="103:92" pos:end="103:96"><name pos:start="103:92" pos:end="103:96">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:90"><expr pos:start="105:5" pos:end="105:89"><name pos:start="105:5" pos:end="105:13"><name pos:start="105:5" pos:end="105:6">vc</name><operator pos:start="105:7" pos:end="105:8">-&gt;</operator><name pos:start="105:9" pos:end="105:13">saved</name></name><operator pos:start="105:14" pos:end="105:14">=</operator><operator pos:start="105:15" pos:end="105:15">(</operator><name pos:start="105:16" pos:end="105:20">float</name> <operator pos:start="105:22" pos:end="105:22">*</operator><operator pos:start="105:23" pos:end="105:23">)</operator><call pos:start="105:24" pos:end="105:89"><name pos:start="105:24" pos:end="105:32">av_malloc</name><argument_list pos:start="105:33" pos:end="105:89">(<argument pos:start="105:34" pos:end="105:88"><expr pos:start="105:34" pos:end="105:88"><operator pos:start="105:34" pos:end="105:34">(</operator><name pos:start="105:35" pos:end="105:50"><name pos:start="105:35" pos:end="105:36">vc</name><operator pos:start="105:37" pos:end="105:38">-&gt;</operator><name pos:start="105:39" pos:end="105:47">blocksize</name><index pos:start="105:48" pos:end="105:50">[<expr pos:start="105:49" pos:end="105:49"><literal type="number" pos:start="105:49" pos:end="105:49">1</literal></expr>]</index></name><operator pos:start="105:51" pos:end="105:51">/</operator><literal type="number" pos:start="105:52" pos:end="105:52">2</literal><operator pos:start="105:53" pos:end="105:53">)</operator><operator pos:start="105:54" pos:end="105:54">*</operator><name pos:start="105:55" pos:end="105:72"><name pos:start="105:55" pos:end="105:56">vc</name><operator pos:start="105:57" pos:end="105:58">-&gt;</operator><name pos:start="105:59" pos:end="105:72">audio_channels</name></name> <operator pos:start="105:74" pos:end="105:74">*</operator> <sizeof pos:start="105:76" pos:end="105:88">sizeof<argument_list pos:start="105:82" pos:end="105:88">(<argument pos:start="105:83" pos:end="105:87"><expr pos:start="105:83" pos:end="105:87"><name pos:start="105:83" pos:end="105:87">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:88"><expr pos:start="107:5" pos:end="107:87"><name pos:start="107:5" pos:end="107:11"><name pos:start="107:5" pos:end="107:6">vc</name><operator pos:start="107:7" pos:end="107:8">-&gt;</operator><name pos:start="107:9" pos:end="107:11">ret</name></name><operator pos:start="107:12" pos:end="107:12">=</operator><operator pos:start="107:13" pos:end="107:13">(</operator><name pos:start="107:14" pos:end="107:18">float</name> <operator pos:start="107:20" pos:end="107:20">*</operator><operator pos:start="107:21" pos:end="107:21">)</operator><call pos:start="107:22" pos:end="107:87"><name pos:start="107:22" pos:end="107:30">av_malloc</name><argument_list pos:start="107:31" pos:end="107:87">(<argument pos:start="107:32" pos:end="107:86"><expr pos:start="107:32" pos:end="107:86"><operator pos:start="107:32" pos:end="107:32">(</operator><name pos:start="107:33" pos:end="107:48"><name pos:start="107:33" pos:end="107:34">vc</name><operator pos:start="107:35" pos:end="107:36">-&gt;</operator><name pos:start="107:37" pos:end="107:45">blocksize</name><index pos:start="107:46" pos:end="107:48">[<expr pos:start="107:47" pos:end="107:47"><literal type="number" pos:start="107:47" pos:end="107:47">1</literal></expr>]</index></name><operator pos:start="107:49" pos:end="107:49">/</operator><literal type="number" pos:start="107:50" pos:end="107:50">2</literal><operator pos:start="107:51" pos:end="107:51">)</operator><operator pos:start="107:52" pos:end="107:52">*</operator><name pos:start="107:53" pos:end="107:70"><name pos:start="107:53" pos:end="107:54">vc</name><operator pos:start="107:55" pos:end="107:56">-&gt;</operator><name pos:start="107:57" pos:end="107:70">audio_channels</name></name> <operator pos:start="107:72" pos:end="107:72">*</operator> <sizeof pos:start="107:74" pos:end="107:86">sizeof<argument_list pos:start="107:80" pos:end="107:86">(<argument pos:start="107:81" pos:end="107:85"><expr pos:start="107:81" pos:end="107:85"><name pos:start="107:81" pos:end="107:85">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:65"><expr pos:start="109:5" pos:end="109:64"><name pos:start="109:5" pos:end="109:11"><name pos:start="109:5" pos:end="109:6">vc</name><operator pos:start="109:7" pos:end="109:8">-&gt;</operator><name pos:start="109:9" pos:end="109:11">buf</name></name><operator pos:start="109:12" pos:end="109:12">=</operator><operator pos:start="109:13" pos:end="109:13">(</operator><name pos:start="109:14" pos:end="109:18">float</name> <operator pos:start="109:20" pos:end="109:20">*</operator><operator pos:start="109:21" pos:end="109:21">)</operator><call pos:start="109:22" pos:end="109:64"><name pos:start="109:22" pos:end="109:30">av_malloc</name><argument_list pos:start="109:31" pos:end="109:64">(<argument pos:start="109:32" pos:end="109:63"><expr pos:start="109:32" pos:end="109:63"><name pos:start="109:32" pos:end="109:47"><name pos:start="109:32" pos:end="109:33">vc</name><operator pos:start="109:34" pos:end="109:35">-&gt;</operator><name pos:start="109:36" pos:end="109:44">blocksize</name><index pos:start="109:45" pos:end="109:47">[<expr pos:start="109:46" pos:end="109:46"><literal type="number" pos:start="109:46" pos:end="109:46">1</literal></expr>]</index></name> <operator pos:start="109:49" pos:end="109:49">*</operator> <sizeof pos:start="109:51" pos:end="109:63">sizeof<argument_list pos:start="109:57" pos:end="109:63">(<argument pos:start="109:58" pos:end="109:62"><expr pos:start="109:58" pos:end="109:62"><name pos:start="109:58" pos:end="109:62">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:69"><expr pos:start="111:5" pos:end="111:68"><name pos:start="111:5" pos:end="111:15"><name pos:start="111:5" pos:end="111:6">vc</name><operator pos:start="111:7" pos:end="111:8">-&gt;</operator><name pos:start="111:9" pos:end="111:15">buf_tmp</name></name><operator pos:start="111:16" pos:end="111:16">=</operator><operator pos:start="111:17" pos:end="111:17">(</operator><name pos:start="111:18" pos:end="111:22">float</name> <operator pos:start="111:24" pos:end="111:24">*</operator><operator pos:start="111:25" pos:end="111:25">)</operator><call pos:start="111:26" pos:end="111:68"><name pos:start="111:26" pos:end="111:34">av_malloc</name><argument_list pos:start="111:35" pos:end="111:68">(<argument pos:start="111:36" pos:end="111:67"><expr pos:start="111:36" pos:end="111:67"><name pos:start="111:36" pos:end="111:51"><name pos:start="111:36" pos:end="111:37">vc</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:48">blocksize</name><index pos:start="111:49" pos:end="111:51">[<expr pos:start="111:50" pos:end="111:50"><literal type="number" pos:start="111:50" pos:end="111:50">1</literal></expr>]</index></name> <operator pos:start="111:53" pos:end="111:53">*</operator> <sizeof pos:start="111:55" pos:end="111:67">sizeof<argument_list pos:start="111:61" pos:end="111:67">(<argument pos:start="111:62" pos:end="111:66"><expr pos:start="111:62" pos:end="111:66"><name pos:start="111:62" pos:end="111:66">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:22"><expr pos:start="113:5" pos:end="113:21"><name pos:start="113:5" pos:end="113:19"><name pos:start="113:5" pos:end="113:6">vc</name><operator pos:start="113:7" pos:end="113:8">-&gt;</operator><name pos:start="113:9" pos:end="113:19">saved_start</name></name><operator pos:start="113:20" pos:end="113:20">=</operator><literal type="number" pos:start="113:21" pos:end="113:21">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:39"><expr pos:start="117:5" pos:end="117:38"><call pos:start="117:5" pos:end="117:38"><name pos:start="117:5" pos:end="117:16">ff_mdct_init</name><argument_list pos:start="117:17" pos:end="117:38">(<argument pos:start="117:18" pos:end="117:29"><expr pos:start="117:18" pos:end="117:29"><operator pos:start="117:18" pos:end="117:18">&amp;</operator><name pos:start="117:19" pos:end="117:29"><name pos:start="117:19" pos:end="117:20">vc</name><operator pos:start="117:21" pos:end="117:22">-&gt;</operator><name pos:start="117:23" pos:end="117:26">mdct</name><index pos:start="117:27" pos:end="117:29">[<expr pos:start="117:28" pos:end="117:28"><literal type="number" pos:start="117:28" pos:end="117:28">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="117:32" pos:end="117:34"><expr pos:start="117:32" pos:end="117:34"><name pos:start="117:32" pos:end="117:34">bl0</name></expr></argument>, <argument pos:start="117:37" pos:end="117:37"><expr pos:start="117:37" pos:end="117:37"><literal type="number" pos:start="117:37" pos:end="117:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:39"><expr pos:start="119:5" pos:end="119:38"><call pos:start="119:5" pos:end="119:38"><name pos:start="119:5" pos:end="119:16">ff_mdct_init</name><argument_list pos:start="119:17" pos:end="119:38">(<argument pos:start="119:18" pos:end="119:29"><expr pos:start="119:18" pos:end="119:29"><operator pos:start="119:18" pos:end="119:18">&amp;</operator><name pos:start="119:19" pos:end="119:29"><name pos:start="119:19" pos:end="119:20">vc</name><operator pos:start="119:21" pos:end="119:22">-&gt;</operator><name pos:start="119:23" pos:end="119:26">mdct</name><index pos:start="119:27" pos:end="119:29">[<expr pos:start="119:28" pos:end="119:28"><literal type="number" pos:start="119:28" pos:end="119:28">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:32" pos:end="119:34"><expr pos:start="119:32" pos:end="119:34"><name pos:start="119:32" pos:end="119:34">bl1</name></expr></argument>, <argument pos:start="119:37" pos:end="119:37"><expr pos:start="119:37" pos:end="119:37"><literal type="number" pos:start="119:37" pos:end="119:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="125:166"><expr pos:start="123:5" pos:end="125:165"><call pos:start="123:5" pos:end="125:165"><name pos:start="123:5" pos:end="123:12">AV_DEBUG</name><argument_list pos:start="123:13" pos:end="125:165">(<argument pos:start="123:14" pos:end="123:156"><expr pos:start="123:14" pos:end="123:156"><literal type="string" pos:start="123:14" pos:end="123:156">" vorbis version %d \n audio_channels %d \n audio_samplerate %d \n bitrate_max %d \n bitrate_nom %d \n bitrate_min %d \n blk_0 %d blk_1 %d \n "</literal></expr></argument>,

            <argument pos:start="125:13" pos:end="125:23"><expr pos:start="125:13" pos:end="125:23"><name pos:start="125:13" pos:end="125:23"><name pos:start="125:13" pos:end="125:14">vc</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:23">version</name></name></expr></argument>, <argument pos:start="125:26" pos:end="125:43"><expr pos:start="125:26" pos:end="125:43"><name pos:start="125:26" pos:end="125:43"><name pos:start="125:26" pos:end="125:27">vc</name><operator pos:start="125:28" pos:end="125:29">-&gt;</operator><name pos:start="125:30" pos:end="125:43">audio_channels</name></name></expr></argument>, <argument pos:start="125:46" pos:end="125:65"><expr pos:start="125:46" pos:end="125:65"><name pos:start="125:46" pos:end="125:65"><name pos:start="125:46" pos:end="125:47">vc</name><operator pos:start="125:48" pos:end="125:49">-&gt;</operator><name pos:start="125:50" pos:end="125:65">audio_samplerate</name></name></expr></argument>, <argument pos:start="125:68" pos:end="125:86"><expr pos:start="125:68" pos:end="125:86"><name pos:start="125:68" pos:end="125:86"><name pos:start="125:68" pos:end="125:69">vc</name><operator pos:start="125:70" pos:end="125:71">-&gt;</operator><name pos:start="125:72" pos:end="125:86">bitrate_maximum</name></name></expr></argument>, <argument pos:start="125:89" pos:end="125:107"><expr pos:start="125:89" pos:end="125:107"><name pos:start="125:89" pos:end="125:107"><name pos:start="125:89" pos:end="125:90">vc</name><operator pos:start="125:91" pos:end="125:92">-&gt;</operator><name pos:start="125:93" pos:end="125:107">bitrate_nominal</name></name></expr></argument>, <argument pos:start="125:110" pos:end="125:128"><expr pos:start="125:110" pos:end="125:128"><name pos:start="125:110" pos:end="125:128"><name pos:start="125:110" pos:end="125:111">vc</name><operator pos:start="125:112" pos:end="125:113">-&gt;</operator><name pos:start="125:114" pos:end="125:128">bitrate_minimum</name></name></expr></argument>, <argument pos:start="125:131" pos:end="125:146"><expr pos:start="125:131" pos:end="125:146"><name pos:start="125:131" pos:end="125:146"><name pos:start="125:131" pos:end="125:132">vc</name><operator pos:start="125:133" pos:end="125:134">-&gt;</operator><name pos:start="125:135" pos:end="125:143">blocksize</name><index pos:start="125:144" pos:end="125:146">[<expr pos:start="125:145" pos:end="125:145"><literal type="number" pos:start="125:145" pos:end="125:145">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="125:149" pos:end="125:164"><expr pos:start="125:149" pos:end="125:164"><name pos:start="125:149" pos:end="125:164"><name pos:start="125:149" pos:end="125:150">vc</name><operator pos:start="125:151" pos:end="125:152">-&gt;</operator><name pos:start="125:153" pos:end="125:161">blocksize</name><index pos:start="125:162" pos:end="125:164">[<expr pos:start="125:163" pos:end="125:163"><literal type="number" pos:start="125:163" pos:end="125:163">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<comment type="block" pos:start="129:1" pos:end="139:2">/*

    BLK=vc-&gt;blocksize[0];

    for(i=0;i&lt;BLK/2;++i) {

        vc-&gt;win[0][i]=sin(0.5*3.14159265358*(sin(((float)i+0.5)/(float)BLK*3.14159265358))*(sin(((float)i+0.5)/(float)BLK*3.14159265358)));

    }

*/</comment>



    <return pos:start="143:5" pos:end="143:13">return <expr pos:start="143:12" pos:end="143:12"><literal type="number" pos:start="143:12" pos:end="143:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
