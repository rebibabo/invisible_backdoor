<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11226.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">OSStatus</name></type> <name pos:start="1:17" pos:end="1:36">ffat_encode_callback</name><parameter_list pos:start="1:37" pos:end="7:49">(<parameter pos:start="1:38" pos:end="1:64"><decl pos:start="1:38" pos:end="1:64"><type pos:start="1:38" pos:end="1:64"><name pos:start="1:38" pos:end="1:54">AudioConverterRef</name></type> <name pos:start="1:56" pos:end="1:64">converter</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:84"><decl pos:start="1:67" pos:end="1:84"><type pos:start="1:67" pos:end="1:84"><name pos:start="1:67" pos:end="1:72">UInt32</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:84">nb_packets</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:58"><decl pos:start="3:38" pos:end="3:58"><type pos:start="3:38" pos:end="3:58"><name pos:start="3:38" pos:end="3:52">AudioBufferList</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:58">data</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:75"><decl pos:start="5:38" pos:end="5:75"><type pos:start="5:38" pos:end="5:75"><name pos:start="5:38" pos:end="5:65">AudioStreamPacketDescription</name> <modifier pos:start="5:67" pos:end="5:67">*</modifier><modifier pos:start="5:68" pos:end="5:68">*</modifier></type><name pos:start="5:69" pos:end="5:75">packets</name></decl></parameter>,

                                     <parameter pos:start="7:38" pos:end="7:48"><decl pos:start="7:38" pos:end="7:48"><type pos:start="7:38" pos:end="7:48"><name pos:start="7:38" pos:end="7:41">void</name> <modifier pos:start="7:43" pos:end="7:43">*</modifier></type><name pos:start="7:44" pos:end="7:48">inctx</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="63:1">{<block_content pos:start="11:5" pos:end="61:13">

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVCodecContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:25">avctx</name> <init pos:start="11:27" pos:end="11:33">= <expr pos:start="11:29" pos:end="11:33"><name pos:start="11:29" pos:end="11:33">inctx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:19">ATDecodeContext</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:23">at</name> <init pos:start="13:25" pos:end="13:42">= <expr pos:start="13:27" pos:end="13:42"><name pos:start="13:27" pos:end="13:42"><name pos:start="13:27" pos:end="13:31">avctx</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:42">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:10">at</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:15">eof</name></name></expr>)</condition> <block pos:start="17:18" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:17">

        <expr_stmt pos:start="19:9" pos:end="19:24"><expr pos:start="19:9" pos:end="19:23"><operator pos:start="19:9" pos:end="19:9">*</operator><name pos:start="19:10" pos:end="19:19">nb_packets</name> <operator pos:start="19:21" pos:end="19:21">=</operator> <literal type="number" pos:start="19:23" pos:end="19:23">0</literal></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><call pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:18">av_frame_unref</name><argument_list pos:start="27:19" pos:end="27:33">(<argument pos:start="27:20" pos:end="27:32"><expr pos:start="27:20" pos:end="27:32"><operator pos:start="27:20" pos:end="27:20">&amp;</operator><name pos:start="27:21" pos:end="27:32"><name pos:start="27:21" pos:end="27:22">at</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:32">in_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:56"><expr pos:start="29:5" pos:end="29:55"><call pos:start="29:5" pos:end="29:55"><name pos:start="29:5" pos:end="29:21">av_frame_move_ref</name><argument_list pos:start="29:22" pos:end="29:55">(<argument pos:start="29:23" pos:end="29:35"><expr pos:start="29:23" pos:end="29:35"><operator pos:start="29:23" pos:end="29:23">&amp;</operator><name pos:start="29:24" pos:end="29:35"><name pos:start="29:24" pos:end="29:25">at</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:35">in_frame</name></name></expr></argument>, <argument pos:start="29:38" pos:end="29:54"><expr pos:start="29:38" pos:end="29:54"><operator pos:start="29:38" pos:end="29:38">&amp;</operator><name pos:start="29:39" pos:end="29:54"><name pos:start="29:39" pos:end="29:40">at</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:54">new_in_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:30">(<expr pos:start="33:9" pos:end="33:29"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:29"><name pos:start="33:10" pos:end="33:11">at</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:21">in_frame</name><operator pos:start="33:22" pos:end="33:22">.</operator><name pos:start="33:23" pos:end="33:26">data</name><index pos:start="33:27" pos:end="33:29">[<expr pos:start="33:28" pos:end="33:28"><literal type="number" pos:start="33:28" pos:end="33:28">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="33:32" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:17">

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><operator pos:start="35:9" pos:end="35:9">*</operator><name pos:start="35:10" pos:end="35:19">nb_packets</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:42"><expr pos:start="43:5" pos:end="43:41"><name pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:8">data</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:24">mNumberBuffers</name></name>              <operator pos:start="43:39" pos:end="43:39">=</operator> <literal type="number" pos:start="43:41" pos:end="43:41">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:56"><expr pos:start="45:5" pos:end="45:55"><name pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:8">data</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:18">mBuffers</name><index pos:start="45:19" pos:end="45:21">[<expr pos:start="45:20" pos:end="45:20"><literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>]</index></name><operator pos:start="45:22" pos:end="45:22">.</operator><name pos:start="45:23" pos:end="45:37">mNumberChannels</name> <operator pos:start="45:39" pos:end="45:39">=</operator> <name pos:start="45:41" pos:end="45:55"><name pos:start="45:41" pos:end="45:45">avctx</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:55">channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="51:56"><expr pos:start="47:5" pos:end="51:55"><name pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:8">data</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:18">mBuffers</name><index pos:start="47:19" pos:end="47:21">[<expr pos:start="47:20" pos:end="47:20"><literal type="number" pos:start="47:20" pos:end="47:20">0</literal></expr>]</index></name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:35">mDataByteSize</name>   <operator pos:start="47:39" pos:end="47:39">=</operator> <name pos:start="47:41" pos:end="47:63"><name pos:start="47:41" pos:end="47:42">at</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:52">in_frame</name><operator pos:start="47:53" pos:end="47:53">.</operator><name pos:start="47:54" pos:end="47:63">nb_samples</name></name> <operator pos:start="47:65" pos:end="47:65">*</operator>

                                        <call pos:start="49:41" pos:end="49:82"><name pos:start="49:41" pos:end="49:63">av_get_bytes_per_sample</name><argument_list pos:start="49:64" pos:end="49:82">(<argument pos:start="49:65" pos:end="49:81"><expr pos:start="49:65" pos:end="49:81"><name pos:start="49:65" pos:end="49:81"><name pos:start="49:65" pos:end="49:69">avctx</name><operator pos:start="49:70" pos:end="49:71">-&gt;</operator><name pos:start="49:72" pos:end="49:81">sample_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="49:84" pos:end="49:84">*</operator>

                                        <name pos:start="51:41" pos:end="51:55"><name pos:start="51:41" pos:end="51:45">avctx</name><operator pos:start="51:46" pos:end="51:47">-&gt;</operator><name pos:start="51:48" pos:end="51:55">channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:61"><expr pos:start="53:5" pos:end="53:60"><name pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:8">data</name><operator pos:start="53:9" pos:end="53:10">-&gt;</operator><name pos:start="53:11" pos:end="53:18">mBuffers</name><index pos:start="53:19" pos:end="53:21">[<expr pos:start="53:20" pos:end="53:20"><literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>]</index></name><operator pos:start="53:22" pos:end="53:22">.</operator><name pos:start="53:23" pos:end="53:27">mData</name>           <operator pos:start="53:39" pos:end="53:39">=</operator> <name pos:start="53:41" pos:end="53:60"><name pos:start="53:41" pos:end="53:42">at</name><operator pos:start="53:43" pos:end="53:44">-&gt;</operator><name pos:start="53:45" pos:end="53:52">in_frame</name><operator pos:start="53:53" pos:end="53:53">.</operator><name pos:start="53:54" pos:end="53:57">data</name><index pos:start="53:58" pos:end="53:60">[<expr pos:start="53:59" pos:end="53:59"><literal type="number" pos:start="53:59" pos:end="53:59">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="57:46"><if pos:start="55:5" pos:end="57:46">if <condition pos:start="55:8" pos:end="55:46">(<expr pos:start="55:9" pos:end="55:45"><operator pos:start="55:9" pos:end="55:9">*</operator><name pos:start="55:10" pos:end="55:19">nb_packets</name> <operator pos:start="55:21" pos:end="55:21">&gt;</operator> <name pos:start="55:23" pos:end="55:45"><name pos:start="55:23" pos:end="55:24">at</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:34">in_frame</name><operator pos:start="55:35" pos:end="55:35">.</operator><name pos:start="55:36" pos:end="55:45">nb_samples</name></name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:46"><block_content pos:start="57:9" pos:end="57:46">

        <expr_stmt pos:start="57:9" pos:end="57:46"><expr pos:start="57:9" pos:end="57:45"><operator pos:start="57:9" pos:end="57:9">*</operator><name pos:start="57:10" pos:end="57:19">nb_packets</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:45"><name pos:start="57:23" pos:end="57:24">at</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:34">in_frame</name><operator pos:start="57:35" pos:end="57:35">.</operator><name pos:start="57:36" pos:end="57:45">nb_samples</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
