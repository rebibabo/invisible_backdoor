<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21539.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">check_file_fixed_eof_mmaps</name><parameter_list pos:start="1:32" pos:end="1:37">(<parameter pos:start="1:33" pos:end="1:36"><decl pos:start="1:33" pos:end="1:36"><type pos:start="1:33" pos:end="1:36"><name pos:start="1:33" pos:end="1:36">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:9" pos:end="83:38">

	<decl_stmt pos:start="5:9" pos:end="5:19"><decl pos:start="5:9" pos:end="5:18"><type pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:12">char</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">addr</name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:17"><decl pos:start="7:9" pos:end="7:16"><type pos:start="7:9" pos:end="7:14"><name pos:start="7:9" pos:end="7:12">char</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cp</name></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:25"><decl pos:start="9:9" pos:end="9:24"><type pos:start="9:9" pos:end="9:22"><name pos:start="9:9" pos:end="9:16">unsigned</name> <name pos:start="9:18" pos:end="9:20">int</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">p1</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:20"><decl pos:start="11:9" pos:end="11:19"><type pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:17">uintptr_t</name></type> <name pos:start="11:19" pos:end="11:19">p</name></decl>;</decl_stmt>

	<decl_stmt pos:start="13:9" pos:end="13:14"><decl pos:start="13:9" pos:end="13:13"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name></decl>;</decl_stmt>



	<comment type="block" pos:start="17:9" pos:end="17:53">/* Find a suitable address to start with.  */</comment>

	<expr_stmt pos:start="19:9" pos:end="23:27"><expr pos:start="19:9" pos:end="23:26"><name pos:start="19:9" pos:end="19:12">addr</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="23:26"><name pos:start="19:16" pos:end="19:19">mmap</name><argument_list pos:start="19:20" pos:end="23:26">(<argument pos:start="19:21" pos:end="19:24"><expr pos:start="19:21" pos:end="19:24"><name pos:start="19:21" pos:end="19:24">NULL</name></expr></argument>, <argument pos:start="19:27" pos:end="19:39"><expr pos:start="19:27" pos:end="19:39"><name pos:start="19:27" pos:end="19:34">pagesize</name> <operator pos:start="19:36" pos:end="19:36">*</operator> <literal type="number" pos:start="19:38" pos:end="19:39">44</literal></expr></argument>, <argument pos:start="19:42" pos:end="19:50"><expr pos:start="19:42" pos:end="19:50"><name pos:start="19:42" pos:end="19:50">PROT_READ</name></expr></argument>, 

		    <argument pos:start="21:21" pos:end="21:47"><expr pos:start="21:21" pos:end="21:47"><name pos:start="21:21" pos:end="21:31">MAP_PRIVATE</name> <operator pos:start="21:33" pos:end="21:33">|</operator> <name pos:start="21:35" pos:end="21:47">MAP_ANONYMOUS</name></expr></argument>,

		    <argument pos:start="23:21" pos:end="23:22"><expr pos:start="23:21" pos:end="23:22"><operator pos:start="23:21" pos:end="23:21">-</operator><literal type="number" pos:start="23:22" pos:end="23:22">1</literal></expr></argument>, <argument pos:start="23:25" pos:end="23:25"><expr pos:start="23:25" pos:end="23:25"><literal type="number" pos:start="23:25" pos:end="23:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="27:9" pos:end="27:63"><expr pos:start="27:9" pos:end="27:62"><call pos:start="27:9" pos:end="27:62"><name pos:start="27:9" pos:end="27:15">fprintf</name> <argument_list pos:start="27:17" pos:end="27:62">(<argument pos:start="27:18" pos:end="27:23"><expr pos:start="27:18" pos:end="27:23"><name pos:start="27:18" pos:end="27:23">stderr</name></expr></argument>, <argument pos:start="27:26" pos:end="27:37"><expr pos:start="27:26" pos:end="27:37"><literal type="string" pos:start="27:26" pos:end="27:37">"%s addr=%p"</literal></expr></argument>, <argument pos:start="27:40" pos:end="27:47"><expr pos:start="27:40" pos:end="27:47"><name pos:start="27:40" pos:end="27:47">__func__</name></expr></argument>, <argument pos:start="27:50" pos:end="27:61"><expr pos:start="27:50" pos:end="27:61"><operator pos:start="27:50" pos:end="27:50">(</operator><name pos:start="27:51" pos:end="27:54">void</name> <operator pos:start="27:56" pos:end="27:56">*</operator><operator pos:start="27:57" pos:end="27:57">)</operator><name pos:start="27:58" pos:end="27:61">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="29:9" pos:end="29:41"><expr pos:start="29:9" pos:end="29:40"><call pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:19">fail_unless</name> <argument_list pos:start="29:21" pos:end="29:40">(<argument pos:start="29:22" pos:end="29:39"><expr pos:start="29:22" pos:end="29:39"><name pos:start="29:22" pos:end="29:25">addr</name> <operator pos:start="29:27" pos:end="29:28">!=</operator> <name pos:start="29:30" pos:end="29:39">MAP_FAILED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<for pos:start="33:9" pos:end="81:9">for <control pos:start="33:13" pos:end="33:34">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">i</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:29"><expr pos:start="33:21" pos:end="33:28"><name pos:start="33:21" pos:end="33:21">i</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <literal type="number" pos:start="33:25" pos:end="33:28">0x10</literal></expr>;</condition> <incr pos:start="33:31" pos:end="33:33"><expr pos:start="33:31" pos:end="33:33"><name pos:start="33:31" pos:end="33:31">i</name><operator pos:start="33:32" pos:end="33:33">++</operator></expr></incr>)</control>

	<block pos:start="35:9" pos:end="81:9">{<block_content pos:start="39:17" pos:end="79:33">

		<comment type="block" pos:start="37:17" pos:end="37:61">/* Create submaps within our unfixed map.  */</comment>

		<expr_stmt pos:start="39:17" pos:end="45:65"><expr pos:start="39:17" pos:end="45:64"><name pos:start="39:17" pos:end="39:18">p1</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <call pos:start="39:22" pos:end="45:64"><name pos:start="39:22" pos:end="39:25">mmap</name><argument_list pos:start="39:26" pos:end="45:64">(<argument pos:start="39:27" pos:end="39:30"><expr pos:start="39:27" pos:end="39:30"><name pos:start="39:27" pos:end="39:30">addr</name></expr></argument>, <argument pos:start="39:33" pos:end="39:40"><expr pos:start="39:33" pos:end="39:40"><name pos:start="39:33" pos:end="39:40">pagesize</name></expr></argument>, <argument pos:start="39:43" pos:end="39:51"><expr pos:start="39:43" pos:end="39:51"><name pos:start="39:43" pos:end="39:51">PROT_READ</name></expr></argument>, 

			  <argument pos:start="41:27" pos:end="41:49"><expr pos:start="41:27" pos:end="41:49"><name pos:start="41:27" pos:end="41:37">MAP_PRIVATE</name> <operator pos:start="41:39" pos:end="41:39">|</operator> <name pos:start="41:41" pos:end="41:49">MAP_FIXED</name></expr></argument>, 

			  <argument pos:start="43:27" pos:end="43:33"><expr pos:start="43:27" pos:end="43:33"><name pos:start="43:27" pos:end="43:33">test_fd</name></expr></argument>, 

			  <argument pos:start="45:27" pos:end="45:63"><expr pos:start="45:27" pos:end="45:63"><operator pos:start="45:27" pos:end="45:27">(</operator><name pos:start="45:28" pos:end="45:37">test_fsize</name> <operator pos:start="45:39" pos:end="45:39">-</operator> <sizeof pos:start="45:41" pos:end="45:46">sizeof <name/></sizeof>*<name pos:start="45:49" pos:end="45:50">p1</name><operator pos:start="45:51" pos:end="45:51">)</operator> <operator pos:start="45:53" pos:end="45:53">&amp;</operator> <operator pos:start="45:55" pos:end="45:55">~</operator><name pos:start="45:56" pos:end="45:63">pagemask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



		<expr_stmt pos:start="49:17" pos:end="49:47"><expr pos:start="49:17" pos:end="49:46"><call pos:start="49:17" pos:end="49:46"><name pos:start="49:17" pos:end="49:27">fail_unless</name> <argument_list pos:start="49:29" pos:end="49:46">(<argument pos:start="49:30" pos:end="49:45"><expr pos:start="49:30" pos:end="49:45"><name pos:start="49:30" pos:end="49:31">p1</name> <operator pos:start="49:33" pos:end="49:34">!=</operator> <name pos:start="49:36" pos:end="49:45">MAP_FAILED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



		<comment type="block" pos:start="53:17" pos:end="55:43">/* Make sure we get pages aligned with the pagesize. The

		   target expects this.  */</comment>

		<expr_stmt pos:start="57:17" pos:end="57:35"><expr pos:start="57:17" pos:end="57:34"><name pos:start="57:17" pos:end="57:17">p</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <operator pos:start="57:21" pos:end="57:21">(</operator><name pos:start="57:22" pos:end="57:30">uintptr_t</name><operator pos:start="57:31" pos:end="57:31">)</operator> <name pos:start="57:33" pos:end="57:34">p1</name></expr>;</expr_stmt>

		<expr_stmt pos:start="59:17" pos:end="59:50"><expr pos:start="59:17" pos:end="59:49"><call pos:start="59:17" pos:end="59:49"><name pos:start="59:17" pos:end="59:27">fail_unless</name> <argument_list pos:start="59:29" pos:end="59:49">(<argument pos:start="59:30" pos:end="59:48"><expr pos:start="59:30" pos:end="59:48"><operator pos:start="59:30" pos:end="59:30">(</operator><name pos:start="59:31" pos:end="59:31">p</name> <operator pos:start="59:33" pos:end="59:33">&amp;</operator> <name pos:start="59:35" pos:end="59:42">pagemask</name><operator pos:start="59:43" pos:end="59:43">)</operator> <operator pos:start="59:45" pos:end="59:46">==</operator> <literal type="number" pos:start="59:48" pos:end="59:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



		<comment type="block" pos:start="63:17" pos:end="63:68">/* Verify that the file maps was made correctly.  */</comment>

		<expr_stmt pos:start="65:17" pos:end="67:74"><expr pos:start="65:17" pos:end="67:73"><call pos:start="65:17" pos:end="67:73"><name pos:start="65:17" pos:end="65:27">fail_unless</name> <argument_list pos:start="65:29" pos:end="67:73">(<argument pos:start="65:30" pos:end="67:72"><expr pos:start="65:30" pos:end="67:72"><name pos:start="65:30" pos:end="65:64"><name pos:start="65:30" pos:end="65:31">p1</name><index pos:start="65:32" pos:end="65:64">[<expr pos:start="65:33" pos:end="65:64"><operator pos:start="65:33" pos:end="65:33">(</operator><name pos:start="65:34" pos:end="65:43">test_fsize</name> <operator pos:start="65:45" pos:end="65:45">&amp;</operator> <name pos:start="65:47" pos:end="65:54">pagemask</name><operator pos:start="65:55" pos:end="65:55">)</operator> <operator pos:start="65:57" pos:end="65:57">/</operator> <sizeof pos:start="65:59" pos:end="65:64">sizeof <name/></sizeof></expr></index></name>*<name pos:start="65:67" pos:end="65:68">p1</name> <operator pos:start="65:70" pos:end="65:70">-</operator> <literal type="number" pos:start="65:72" pos:end="65:72">1</literal>]

			     <operator pos:start="67:30" pos:end="67:31">==</operator> <operator pos:start="67:33" pos:end="67:33">(</operator><operator pos:start="67:34" pos:end="67:34">(</operator><name pos:start="67:35" pos:end="67:44">test_fsize</name> <operator pos:start="67:46" pos:end="67:46">-</operator> <sizeof pos:start="67:48" pos:end="67:53">sizeof <name/></sizeof>*<name pos:start="67:56" pos:end="67:57">p1</name><operator pos:start="67:58" pos:end="67:58">)</operator> <operator pos:start="67:60" pos:end="67:60">/</operator> <sizeof pos:start="67:62" pos:end="67:67">sizeof <name/></sizeof>*<name pos:start="67:70" pos:end="67:71">p1</name><operator pos:start="67:72" pos:end="67:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



		<comment type="block" pos:start="71:17" pos:end="71:76">/* Verify that the end of page is accessable and zeroed.  */</comment>

		<expr_stmt pos:start="73:17" pos:end="73:32"><expr pos:start="73:17" pos:end="73:31"><name pos:start="73:17" pos:end="73:18">cp</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <operator pos:start="73:22" pos:end="73:22">(</operator><name pos:start="73:23" pos:end="73:26">void</name> <operator pos:start="73:28" pos:end="73:28">*</operator><operator pos:start="73:29" pos:end="73:29">)</operator><name pos:start="73:30" pos:end="73:31">p1</name></expr>;</expr_stmt>

		<expr_stmt pos:start="75:17" pos:end="75:52"><expr pos:start="75:17" pos:end="75:51"><call pos:start="75:17" pos:end="75:51"><name pos:start="75:17" pos:end="75:27">fail_unless</name> <argument_list pos:start="75:29" pos:end="75:51">(<argument pos:start="75:30" pos:end="75:50"><expr pos:start="75:30" pos:end="75:50"><name pos:start="75:30" pos:end="75:45"><name pos:start="75:30" pos:end="75:31">cp</name><index pos:start="75:32" pos:end="75:45">[<expr pos:start="75:33" pos:end="75:44"><name pos:start="75:33" pos:end="75:40">pagesize</name> <operator pos:start="75:42" pos:end="75:42">-</operator> <literal type="number" pos:start="75:44" pos:end="75:44">4</literal></expr>]</index></name> <operator pos:start="75:47" pos:end="75:48">==</operator> <literal type="number" pos:start="75:50" pos:end="75:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="77:17" pos:end="77:38"><expr pos:start="77:17" pos:end="77:37"><call pos:start="77:17" pos:end="77:37"><name pos:start="77:17" pos:end="77:22">munmap</name> <argument_list pos:start="77:24" pos:end="77:37">(<argument pos:start="77:25" pos:end="77:26"><expr pos:start="77:25" pos:end="77:26"><name pos:start="77:25" pos:end="77:26">p1</name></expr></argument>, <argument pos:start="77:29" pos:end="77:36"><expr pos:start="77:29" pos:end="77:36"><name pos:start="77:29" pos:end="77:36">pagesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="79:17" pos:end="79:33"><expr pos:start="79:17" pos:end="79:32"><name pos:start="79:17" pos:end="79:20">addr</name> <operator pos:start="79:22" pos:end="79:23">+=</operator> <name pos:start="79:25" pos:end="79:32">pagesize</name></expr>;</expr_stmt>

	</block_content>}</block></for>

	<expr_stmt pos:start="83:9" pos:end="83:38"><expr pos:start="83:9" pos:end="83:37"><call pos:start="83:9" pos:end="83:37"><name pos:start="83:9" pos:end="83:15">fprintf</name> <argument_list pos:start="83:17" pos:end="83:37">(<argument pos:start="83:18" pos:end="83:23"><expr pos:start="83:18" pos:end="83:23"><name pos:start="83:18" pos:end="83:23">stderr</name></expr></argument>, <argument pos:start="83:26" pos:end="83:36"><expr pos:start="83:26" pos:end="83:36"><literal type="string" pos:start="83:26" pos:end="83:36">" passed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
