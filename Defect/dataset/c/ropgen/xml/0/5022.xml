<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5022.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:17"><name pos:start="1:1" pos:end="1:15">CharDriverState</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:39">qemu_chr_new_from_opts</name><parameter_list pos:start="1:40" pos:end="5:49">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:48">QemuOpts</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">opts</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:75"><function_decl pos:start="3:37" pos:end="3:75"><type pos:start="3:37" pos:end="3:40"><name pos:start="3:37" pos:end="3:40">void</name></type> (<modifier pos:start="3:43" pos:end="3:43">*</modifier><name pos:start="3:44" pos:end="3:47">init</name>)<parameter_list pos:start="3:49" pos:end="3:75">(<parameter pos:start="3:50" pos:end="3:74"><decl pos:start="3:50" pos:end="3:74"><type pos:start="3:50" pos:end="3:74"><name pos:start="3:50" pos:end="3:71"><name pos:start="3:50" pos:end="3:55">struct</name> <name pos:start="3:57" pos:end="3:71">CharDriverState</name></name> <modifier pos:start="3:73" pos:end="3:73">*</modifier></type><name pos:start="3:74" pos:end="3:74">s</name></decl></parameter>)</parameter_list></function_decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:48"><decl pos:start="5:37" pos:end="5:48"><type pos:start="5:37" pos:end="5:48"><name pos:start="5:37" pos:end="5:41">Error</name> <modifier pos:start="5:43" pos:end="5:43">*</modifier><modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:48">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="169:1">{<block_content pos:start="9:5" pos:end="167:16">

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">CharDriver</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:18">cd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:19">CharDriverState</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:24">chr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:10">GSList</name> <modifier pos:start="15:12" pos:end="15:12">*</modifier></type><name pos:start="15:13" pos:end="15:13">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:17">ChardevReturn</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:22">ret</name> <init pos:start="17:24" pos:end="17:29">= <expr pos:start="17:26" pos:end="17:29"><name pos:start="17:26" pos:end="17:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:18">ChardevBackend</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:27">backend</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:40"><decl pos:start="21:5" pos:end="21:39"><type pos:start="21:5" pos:end="21:16"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:14">char</name> <modifier pos:start="21:16" pos:end="21:16">*</modifier></type><name pos:start="21:17" pos:end="21:18">id</name> <init pos:start="21:20" pos:end="21:39">= <expr pos:start="21:22" pos:end="21:39"><call pos:start="21:22" pos:end="21:39"><name pos:start="21:22" pos:end="21:33">qemu_opts_id</name><argument_list pos:start="21:34" pos:end="21:39">(<argument pos:start="21:35" pos:end="21:38"><expr pos:start="21:35" pos:end="21:38"><name pos:start="21:35" pos:end="21:38">opts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:8">char</name> <modifier pos:start="23:10" pos:end="23:10">*</modifier></type><name pos:start="23:11" pos:end="23:13">bid</name> <init pos:start="23:15" pos:end="23:20">= <expr pos:start="23:17" pos:end="23:20"><name pos:start="23:17" pos:end="23:20">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:19">(<expr pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:10">id</name> <operator pos:start="27:12" pos:end="27:13">==</operator> <name pos:start="27:15" pos:end="27:18">NULL</name></expr>)</condition> <block pos:start="27:21" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:17">

        <expr_stmt pos:start="29:9" pos:end="29:53"><expr pos:start="29:9" pos:end="29:52"><call pos:start="29:9" pos:end="29:52"><name pos:start="29:9" pos:end="29:18">error_setg</name><argument_list pos:start="29:19" pos:end="29:52">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">errp</name></expr></argument>, <argument pos:start="29:26" pos:end="29:51"><expr pos:start="29:26" pos:end="29:51"><literal type="string" pos:start="29:26" pos:end="29:51">"chardev: no id specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="31:9" pos:end="31:17">goto <name pos:start="31:14" pos:end="31:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:46">(<expr pos:start="37:9" pos:end="37:45"><call pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:20">qemu_opt_get</name><argument_list pos:start="37:21" pos:end="37:37">(<argument pos:start="37:22" pos:end="37:25"><expr pos:start="37:22" pos:end="37:25"><name pos:start="37:22" pos:end="37:25">opts</name></expr></argument>, <argument pos:start="37:28" pos:end="37:36"><expr pos:start="37:28" pos:end="37:36"><literal type="string" pos:start="37:28" pos:end="37:36">"backend"</literal></expr></argument>)</argument_list></call> <operator pos:start="37:39" pos:end="37:40">==</operator> <name pos:start="37:42" pos:end="37:45">NULL</name></expr>)</condition> <block pos:start="37:48" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:17">

        <expr_stmt pos:start="39:9" pos:end="41:39"><expr pos:start="39:9" pos:end="41:38"><call pos:start="39:9" pos:end="41:38"><name pos:start="39:9" pos:end="39:18">error_setg</name><argument_list pos:start="39:19" pos:end="41:38">(<argument pos:start="39:20" pos:end="39:23"><expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:23">errp</name></expr></argument>, <argument pos:start="39:26" pos:end="39:58"><expr pos:start="39:26" pos:end="39:58"><literal type="string" pos:start="39:26" pos:end="39:58">"chardev: \"%s\" missing backend"</literal></expr></argument>,

                   <argument pos:start="41:20" pos:end="41:37"><expr pos:start="41:20" pos:end="41:37"><call pos:start="41:20" pos:end="41:37"><name pos:start="41:20" pos:end="41:31">qemu_opts_id</name><argument_list pos:start="41:32" pos:end="41:37">(<argument pos:start="41:33" pos:end="41:36"><expr pos:start="41:33" pos:end="41:36"><name pos:start="41:33" pos:end="41:36">opts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:17">goto <name pos:start="43:14" pos:end="43:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <for pos:start="47:5" pos:end="59:5">for <control pos:start="47:9" pos:end="47:38">(<init pos:start="47:10" pos:end="47:22"><expr pos:start="47:10" pos:end="47:21"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <name pos:start="47:14" pos:end="47:21">backends</name></expr>;</init> <condition pos:start="47:24" pos:end="47:25"><expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">i</name></expr>;</condition> <incr pos:start="47:27" pos:end="47:37"><expr pos:start="47:27" pos:end="47:37"><name pos:start="47:27" pos:end="47:27">i</name> <operator pos:start="47:29" pos:end="47:29">=</operator> <name pos:start="47:31" pos:end="47:37"><name pos:start="47:31" pos:end="47:31">i</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:37">next</name></name></expr></incr>)</control> <block pos:start="47:40" pos:end="59:5">{<block_content pos:start="49:9" pos:end="57:9">

        <expr_stmt pos:start="49:9" pos:end="49:21"><expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:10">cd</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <name pos:start="49:14" pos:end="49:20"><name pos:start="49:14" pos:end="49:14">i</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:20">data</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:65">(<expr pos:start="53:13" pos:end="53:64"><call pos:start="53:13" pos:end="53:59"><name pos:start="53:13" pos:end="53:18">strcmp</name><argument_list pos:start="53:19" pos:end="53:59">(<argument pos:start="53:20" pos:end="53:27"><expr pos:start="53:20" pos:end="53:27"><name pos:start="53:20" pos:end="53:27"><name pos:start="53:20" pos:end="53:21">cd</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:27">name</name></name></expr></argument>, <argument pos:start="53:30" pos:end="53:58"><expr pos:start="53:30" pos:end="53:58"><call pos:start="53:30" pos:end="53:58"><name pos:start="53:30" pos:end="53:41">qemu_opt_get</name><argument_list pos:start="53:42" pos:end="53:58">(<argument pos:start="53:43" pos:end="53:46"><expr pos:start="53:43" pos:end="53:46"><name pos:start="53:43" pos:end="53:46">opts</name></expr></argument>, <argument pos:start="53:49" pos:end="53:57"><expr pos:start="53:49" pos:end="53:57"><literal type="string" pos:start="53:49" pos:end="53:57">"backend"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="53:61" pos:end="53:62">==</operator> <literal type="number" pos:start="53:64" pos:end="53:64">0</literal></expr>)</condition> <block pos:start="53:67" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:18">

            <break pos:start="55:13" pos:end="55:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="61:5" pos:end="69:5"><if pos:start="61:5" pos:end="69:5">if <condition pos:start="61:8" pos:end="61:18">(<expr pos:start="61:9" pos:end="61:17"><name pos:start="61:9" pos:end="61:9">i</name> <operator pos:start="61:11" pos:end="61:12">==</operator> <name pos:start="61:14" pos:end="61:17">NULL</name></expr>)</condition> <block pos:start="61:20" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:17">

        <expr_stmt pos:start="63:9" pos:end="65:50"><expr pos:start="63:9" pos:end="65:49"><call pos:start="63:9" pos:end="65:49"><name pos:start="63:9" pos:end="63:18">error_setg</name><argument_list pos:start="63:19" pos:end="65:49">(<argument pos:start="63:20" pos:end="63:23"><expr pos:start="63:20" pos:end="63:23"><name pos:start="63:20" pos:end="63:23">errp</name></expr></argument>, <argument pos:start="63:26" pos:end="63:60"><expr pos:start="63:26" pos:end="63:60"><literal type="string" pos:start="63:26" pos:end="63:60">"chardev: backend \"%s\" not found"</literal></expr></argument>,

                   <argument pos:start="65:20" pos:end="65:48"><expr pos:start="65:20" pos:end="65:48"><call pos:start="65:20" pos:end="65:48"><name pos:start="65:20" pos:end="65:31">qemu_opt_get</name><argument_list pos:start="65:32" pos:end="65:48">(<argument pos:start="65:33" pos:end="65:36"><expr pos:start="65:33" pos:end="65:36"><name pos:start="65:33" pos:end="65:36">opts</name></expr></argument>, <argument pos:start="65:39" pos:end="65:47"><expr pos:start="65:39" pos:end="65:47"><literal type="string" pos:start="65:39" pos:end="65:47">"backend"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="67:9" pos:end="67:17">goto <name pos:start="67:14" pos:end="67:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:40"><expr pos:start="73:5" pos:end="73:39"><name pos:start="73:5" pos:end="73:11">backend</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:39"><name pos:start="73:15" pos:end="73:20">g_new0</name><argument_list pos:start="73:21" pos:end="73:39">(<argument pos:start="73:22" pos:end="73:35"><expr pos:start="73:22" pos:end="73:35"><name pos:start="73:22" pos:end="73:35">ChardevBackend</name></expr></argument>, <argument pos:start="73:38" pos:end="73:38"><expr pos:start="73:38" pos:end="73:38"><literal type="number" pos:start="73:38" pos:end="73:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:42">(<expr pos:start="77:9" pos:end="77:41"><call pos:start="77:9" pos:end="77:41"><name pos:start="77:9" pos:end="77:25">qemu_opt_get_bool</name><argument_list pos:start="77:26" pos:end="77:41">(<argument pos:start="77:27" pos:end="77:30"><expr pos:start="77:27" pos:end="77:30"><name pos:start="77:27" pos:end="77:30">opts</name></expr></argument>, <argument pos:start="77:33" pos:end="77:37"><expr pos:start="77:33" pos:end="77:37"><literal type="string" pos:start="77:33" pos:end="77:37">"mux"</literal></expr></argument>, <argument pos:start="77:40" pos:end="77:40"><expr pos:start="77:40" pos:end="77:40"><literal type="number" pos:start="77:40" pos:end="77:40">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:44" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:45">

        <expr_stmt pos:start="79:9" pos:end="79:45"><expr pos:start="79:9" pos:end="79:44"><name pos:start="79:9" pos:end="79:11">bid</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:44"><name pos:start="79:15" pos:end="79:29">g_strdup_printf</name><argument_list pos:start="79:30" pos:end="79:44">(<argument pos:start="79:31" pos:end="79:39"><expr pos:start="79:31" pos:end="79:39"><literal type="string" pos:start="79:31" pos:end="79:39">"%s-base"</literal></expr></argument>, <argument pos:start="79:42" pos:end="79:43"><expr pos:start="79:42" pos:end="79:43"><name pos:start="79:42" pos:end="79:43">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:15"><expr pos:start="85:5" pos:end="85:14"><name pos:start="85:5" pos:end="85:7">chr</name> <operator pos:start="85:9" pos:end="85:9">=</operator> <name pos:start="85:11" pos:end="85:14">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:29"><expr pos:start="87:5" pos:end="87:28"><name pos:start="87:5" pos:end="87:17"><name pos:start="87:5" pos:end="87:11">backend</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:17">kind</name></name> <operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:28"><name pos:start="87:21" pos:end="87:22">cd</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:28">kind</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="101:5"><if pos:start="89:5" pos:end="101:5">if <condition pos:start="89:8" pos:end="89:18">(<expr pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:10">cd</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:17">parse</name></name></expr>)</condition> <block pos:start="89:20" pos:end="101:5">{<block_content pos:start="91:9" pos:end="99:9">

        <expr_stmt pos:start="91:9" pos:end="91:45"><expr pos:start="91:9" pos:end="91:44"><call pos:start="91:9" pos:end="91:44"><name pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:10">cd</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:17">parse</name></name><argument_list pos:start="91:18" pos:end="91:44">(<argument pos:start="91:19" pos:end="91:22"><expr pos:start="91:19" pos:end="91:22"><name pos:start="91:19" pos:end="91:22">opts</name></expr></argument>, <argument pos:start="91:25" pos:end="91:31"><expr pos:start="91:25" pos:end="91:31"><name pos:start="91:25" pos:end="91:31">backend</name></expr></argument>, <argument pos:start="91:34" pos:end="91:43"><expr pos:start="91:34" pos:end="91:43"><operator pos:start="91:34" pos:end="91:34">&amp;</operator><name pos:start="91:35" pos:end="91:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="99:9"><if pos:start="93:9" pos:end="99:9">if <condition pos:start="93:12" pos:end="93:22">(<expr pos:start="93:13" pos:end="93:21"><name pos:start="93:13" pos:end="93:21">local_err</name></expr>)</condition> <block pos:start="93:24" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:26">

            <expr_stmt pos:start="95:13" pos:end="95:45"><expr pos:start="95:13" pos:end="95:44"><call pos:start="95:13" pos:end="95:44"><name pos:start="95:13" pos:end="95:27">error_propagate</name><argument_list pos:start="95:28" pos:end="95:44">(<argument pos:start="95:29" pos:end="95:32"><expr pos:start="95:29" pos:end="95:32"><name pos:start="95:29" pos:end="95:32">errp</name></expr></argument>, <argument pos:start="95:35" pos:end="95:43"><expr pos:start="95:35" pos:end="95:43"><name pos:start="95:35" pos:end="95:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="97:13" pos:end="97:26">goto <name pos:start="97:18" pos:end="97:25">qapi_out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:57"><expr pos:start="103:5" pos:end="103:56"><name pos:start="103:5" pos:end="103:7">ret</name> <operator pos:start="103:9" pos:end="103:9">=</operator> <call pos:start="103:11" pos:end="103:56"><name pos:start="103:11" pos:end="103:25">qmp_chardev_add</name><argument_list pos:start="103:26" pos:end="103:56">(<argument pos:start="103:27" pos:end="103:40"><expr pos:start="103:27" pos:end="103:40"><ternary pos:start="103:27" pos:end="103:40"><condition pos:start="103:27" pos:end="103:31"><expr pos:start="103:27" pos:end="103:29"><name pos:start="103:27" pos:end="103:29">bid</name></expr> ?</condition><then pos:start="103:33" pos:end="103:35"> <expr pos:start="103:33" pos:end="103:35"><name pos:start="103:33" pos:end="103:35">bid</name></expr> </then><else pos:start="103:37" pos:end="103:40">: <expr pos:start="103:39" pos:end="103:40"><name pos:start="103:39" pos:end="103:40">id</name></expr></else></ternary></expr></argument>, <argument pos:start="103:43" pos:end="103:49"><expr pos:start="103:43" pos:end="103:49"><name pos:start="103:43" pos:end="103:49">backend</name></expr></argument>, <argument pos:start="103:52" pos:end="103:55"><expr pos:start="103:52" pos:end="103:55"><name pos:start="103:52" pos:end="103:55">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="109:5"><if pos:start="105:5" pos:end="109:5">if <condition pos:start="105:8" pos:end="105:13">(<expr pos:start="105:9" pos:end="105:12"><operator pos:start="105:9" pos:end="105:9">!</operator><name pos:start="105:10" pos:end="105:12">ret</name></expr>)</condition> <block pos:start="105:15" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:22">

        <goto pos:start="107:9" pos:end="107:22">goto <name pos:start="107:14" pos:end="107:21">qapi_out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="141:5"><if pos:start="113:5" pos:end="141:5">if <condition pos:start="113:8" pos:end="113:12">(<expr pos:start="113:9" pos:end="113:11"><name pos:start="113:9" pos:end="113:11">bid</name></expr>)</condition> <block pos:start="113:14" pos:end="141:5">{<block_content pos:start="115:9" pos:end="139:9">

        <expr_stmt pos:start="115:9" pos:end="115:42"><expr pos:start="115:9" pos:end="115:41"><call pos:start="115:9" pos:end="115:41"><name pos:start="115:9" pos:end="115:32">qapi_free_ChardevBackend</name><argument_list pos:start="115:33" pos:end="115:41">(<argument pos:start="115:34" pos:end="115:40"><expr pos:start="115:34" pos:end="115:40"><name pos:start="115:34" pos:end="115:40">backend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:37"><expr pos:start="117:9" pos:end="117:36"><call pos:start="117:9" pos:end="117:36"><name pos:start="117:9" pos:end="117:31">qapi_free_ChardevReturn</name><argument_list pos:start="117:32" pos:end="117:36">(<argument pos:start="117:33" pos:end="117:35"><expr pos:start="117:33" pos:end="117:35"><name pos:start="117:33" pos:end="117:35">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:44"><expr pos:start="119:9" pos:end="119:43"><name pos:start="119:9" pos:end="119:15">backend</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <call pos:start="119:19" pos:end="119:43"><name pos:start="119:19" pos:end="119:24">g_new0</name><argument_list pos:start="119:25" pos:end="119:43">(<argument pos:start="119:26" pos:end="119:39"><expr pos:start="119:26" pos:end="119:39"><name pos:start="119:26" pos:end="119:39">ChardevBackend</name></expr></argument>, <argument pos:start="119:42" pos:end="119:42"><expr pos:start="119:42" pos:end="119:42"><literal type="number" pos:start="119:42" pos:end="119:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:45"><expr pos:start="121:9" pos:end="121:44"><name pos:start="121:9" pos:end="121:20"><name pos:start="121:9" pos:end="121:15">backend</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:20">mux</name></name> <operator pos:start="121:22" pos:end="121:22">=</operator> <call pos:start="121:24" pos:end="121:44"><name pos:start="121:24" pos:end="121:29">g_new0</name><argument_list pos:start="121:30" pos:end="121:44">(<argument pos:start="121:31" pos:end="121:40"><expr pos:start="121:31" pos:end="121:40"><name pos:start="121:31" pos:end="121:40">ChardevMux</name></expr></argument>, <argument pos:start="121:43" pos:end="121:43"><expr pos:start="121:43" pos:end="121:43"><literal type="number" pos:start="121:43" pos:end="121:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:49"><expr pos:start="123:9" pos:end="123:48"><name pos:start="123:9" pos:end="123:21"><name pos:start="123:9" pos:end="123:15">backend</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:21">kind</name></name> <operator pos:start="123:23" pos:end="123:23">=</operator> <name pos:start="123:25" pos:end="123:48">CHARDEV_BACKEND_KIND_MUX</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:46"><expr pos:start="125:9" pos:end="125:45"><name pos:start="125:9" pos:end="125:29"><name pos:start="125:9" pos:end="125:15">backend</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:20">mux</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:29">chardev</name></name> <operator pos:start="125:31" pos:end="125:31">=</operator> <call pos:start="125:33" pos:end="125:45"><name pos:start="125:33" pos:end="125:40">g_strdup</name><argument_list pos:start="125:41" pos:end="125:45">(<argument pos:start="125:42" pos:end="125:44"><expr pos:start="125:42" pos:end="125:44"><name pos:start="125:42" pos:end="125:44">bid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:49"><expr pos:start="127:9" pos:end="127:48"><name pos:start="127:9" pos:end="127:11">ret</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <call pos:start="127:15" pos:end="127:48"><name pos:start="127:15" pos:end="127:29">qmp_chardev_add</name><argument_list pos:start="127:30" pos:end="127:48">(<argument pos:start="127:31" pos:end="127:32"><expr pos:start="127:31" pos:end="127:32"><name pos:start="127:31" pos:end="127:32">id</name></expr></argument>, <argument pos:start="127:35" pos:end="127:41"><expr pos:start="127:35" pos:end="127:41"><name pos:start="127:35" pos:end="127:41">backend</name></expr></argument>, <argument pos:start="127:44" pos:end="127:47"><expr pos:start="127:44" pos:end="127:47"><name pos:start="127:44" pos:end="127:47">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="139:9"><if pos:start="129:9" pos:end="139:9">if <condition pos:start="129:12" pos:end="129:17">(<expr pos:start="129:13" pos:end="129:16"><operator pos:start="129:13" pos:end="129:13">!</operator><name pos:start="129:14" pos:end="129:16">ret</name></expr>)</condition> <block pos:start="129:19" pos:end="139:9">{<block_content pos:start="131:13" pos:end="137:26">

            <expr_stmt pos:start="131:13" pos:end="131:37"><expr pos:start="131:13" pos:end="131:36"><name pos:start="131:13" pos:end="131:15">chr</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <call pos:start="131:19" pos:end="131:36"><name pos:start="131:19" pos:end="131:31">qemu_chr_find</name><argument_list pos:start="131:32" pos:end="131:36">(<argument pos:start="131:33" pos:end="131:35"><expr pos:start="131:33" pos:end="131:35"><name pos:start="131:33" pos:end="131:35">bid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:33"><expr pos:start="133:13" pos:end="133:32"><call pos:start="133:13" pos:end="133:32"><name pos:start="133:13" pos:end="133:27">qemu_chr_delete</name><argument_list pos:start="133:28" pos:end="133:32">(<argument pos:start="133:29" pos:end="133:31"><expr pos:start="133:29" pos:end="133:31"><name pos:start="133:29" pos:end="133:31">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:23"><expr pos:start="135:13" pos:end="135:22"><name pos:start="135:13" pos:end="135:15">chr</name> <operator pos:start="135:17" pos:end="135:17">=</operator> <name pos:start="135:19" pos:end="135:22">NULL</name></expr>;</expr_stmt>

            <goto pos:start="137:13" pos:end="137:26">goto <name pos:start="137:18" pos:end="137:25">qapi_out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:28"><expr pos:start="145:5" pos:end="145:27"><name pos:start="145:5" pos:end="145:7">chr</name> <operator pos:start="145:9" pos:end="145:9">=</operator> <call pos:start="145:11" pos:end="145:27"><name pos:start="145:11" pos:end="145:23">qemu_chr_find</name><argument_list pos:start="145:24" pos:end="145:27">(<argument pos:start="145:25" pos:end="145:26"><expr pos:start="145:25" pos:end="145:26"><name pos:start="145:25" pos:end="145:26">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:21"><expr pos:start="147:5" pos:end="147:20"><name pos:start="147:5" pos:end="147:13"><name pos:start="147:5" pos:end="147:7">chr</name><operator pos:start="147:8" pos:end="147:9">-&gt;</operator><name pos:start="147:10" pos:end="147:13">opts</name></name> <operator pos:start="147:15" pos:end="147:15">=</operator> <name pos:start="147:17" pos:end="147:20">opts</name></expr>;</expr_stmt>



<label pos:start="151:1" pos:end="151:9"><name pos:start="151:1" pos:end="151:8">qapi_out</name>:</label>

    <expr_stmt pos:start="153:5" pos:end="153:38"><expr pos:start="153:5" pos:end="153:37"><call pos:start="153:5" pos:end="153:37"><name pos:start="153:5" pos:end="153:28">qapi_free_ChardevBackend</name><argument_list pos:start="153:29" pos:end="153:37">(<argument pos:start="153:30" pos:end="153:36"><expr pos:start="153:30" pos:end="153:36"><name pos:start="153:30" pos:end="153:36">backend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:33"><expr pos:start="155:5" pos:end="155:32"><call pos:start="155:5" pos:end="155:32"><name pos:start="155:5" pos:end="155:27">qapi_free_ChardevReturn</name><argument_list pos:start="155:28" pos:end="155:32">(<argument pos:start="155:29" pos:end="155:31"><expr pos:start="155:29" pos:end="155:31"><name pos:start="155:29" pos:end="155:31">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:16"><expr pos:start="157:5" pos:end="157:15"><call pos:start="157:5" pos:end="157:15"><name pos:start="157:5" pos:end="157:10">g_free</name><argument_list pos:start="157:11" pos:end="157:15">(<argument pos:start="157:12" pos:end="157:14"><expr pos:start="157:12" pos:end="157:14"><name pos:start="157:12" pos:end="157:14">bid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="159:5" pos:end="159:15">return <expr pos:start="159:12" pos:end="159:14"><name pos:start="159:12" pos:end="159:14">chr</name></expr>;</return>



<label pos:start="163:1" pos:end="163:4"><name pos:start="163:1" pos:end="163:3">err</name>:</label>

    <expr_stmt pos:start="165:5" pos:end="165:24"><expr pos:start="165:5" pos:end="165:23"><call pos:start="165:5" pos:end="165:23"><name pos:start="165:5" pos:end="165:17">qemu_opts_del</name><argument_list pos:start="165:18" pos:end="165:23">(<argument pos:start="165:19" pos:end="165:22"><expr pos:start="165:19" pos:end="165:22"><name pos:start="165:19" pos:end="165:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="167:5" pos:end="167:16">return <expr pos:start="167:12" pos:end="167:15"><name pos:start="167:12" pos:end="167:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
