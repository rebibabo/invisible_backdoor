<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10197.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:73"><name pos:start="1:1" pos:end="1:15">ioapic_mem_read</name><argument_list pos:start="1:16" pos:end="1:73">(<argument pos:start="1:17" pos:end="1:28">void *opaque</argument>, <argument pos:start="1:31" pos:end="1:53">target_phys_addr_t addr</argument>, <argument pos:start="1:56" pos:end="1:72">unsigned int size</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:15">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">IOAPICCommonState</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:33">= <expr pos:start="5:28" pos:end="5:33"><name pos:start="5:28" pos:end="5:33">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">val</name> <init pos:start="9:18" pos:end="9:20">= <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="75:5">switch <condition pos:start="13:12" pos:end="13:24">(<expr pos:start="13:13" pos:end="13:23"><name pos:start="13:13" pos:end="13:16">addr</name> <operator pos:start="13:18" pos:end="13:18">&amp;</operator> <literal type="number" pos:start="13:20" pos:end="13:23">0xff</literal></expr>)</condition> <block pos:start="13:26" pos:end="75:5">{<block_content pos:start="15:5" pos:end="73:14">

    <case pos:start="15:5" pos:end="15:25">case <expr pos:start="15:10" pos:end="15:24"><name pos:start="15:10" pos:end="15:24">IOAPIC_IOREGSEL</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:26"><expr pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:11">val</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:25"><name pos:start="17:15" pos:end="17:15">s</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:25">ioregsel</name></name></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:22">case <expr pos:start="21:10" pos:end="21:21"><name pos:start="21:10" pos:end="21:21">IOAPIC_IOWIN</name></expr>:</case>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:22">(<expr pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:16">size</name> <operator pos:start="23:18" pos:end="23:19">!=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">4</literal></expr>)</condition> <block pos:start="23:24" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:18">

            <break pos:start="25:13" pos:end="25:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="29:9" pos:end="69:9">switch <condition pos:start="29:16" pos:end="29:28">(<expr pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:27">ioregsel</name></name></expr>)</condition> <block pos:start="29:30" pos:end="69:9">{<block_content pos:start="31:9" pos:end="67:13">

        <case pos:start="31:9" pos:end="31:27">case <expr pos:start="31:14" pos:end="31:26"><name pos:start="31:14" pos:end="31:26">IOAPIC_REG_ID</name></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="33:43"><expr pos:start="33:13" pos:end="33:42"><name pos:start="33:13" pos:end="33:15">val</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:23"><name pos:start="33:19" pos:end="33:19">s</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:23">id</name></name> <operator pos:start="33:25" pos:end="33:26">&lt;&lt;</operator> <name pos:start="33:28" pos:end="33:42">IOAPIC_ID_SHIFT</name></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <case pos:start="37:9" pos:end="37:28">case <expr pos:start="37:14" pos:end="37:27"><name pos:start="37:14" pos:end="37:27">IOAPIC_REG_VER</name></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="41:68"><expr pos:start="39:13" pos:end="41:67"><name pos:start="39:13" pos:end="39:15">val</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:32">IOAPIC_VERSION</name> <operator pos:start="39:34" pos:end="39:34">|</operator>

                <operator pos:start="41:17" pos:end="41:17">(</operator><operator pos:start="41:18" pos:end="41:18">(</operator><name pos:start="41:19" pos:end="41:33">IOAPIC_NUM_PINS</name> <operator pos:start="41:35" pos:end="41:35">-</operator> <literal type="number" pos:start="41:37" pos:end="41:37">1</literal><operator pos:start="41:38" pos:end="41:38">)</operator> <operator pos:start="41:40" pos:end="41:41">&lt;&lt;</operator> <name pos:start="41:43" pos:end="41:66">IOAPIC_VER_ENTRIES_SHIFT</name><operator pos:start="41:67" pos:end="41:67">)</operator></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:28">case <expr pos:start="45:14" pos:end="45:27"><name pos:start="45:14" pos:end="45:27">IOAPIC_REG_ARB</name></expr>:</case>

            <expr_stmt pos:start="47:13" pos:end="47:20"><expr pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:15">val</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <literal type="number" pos:start="47:19" pos:end="47:19">0</literal></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        <default pos:start="51:9" pos:end="51:16">default:</default>

            <expr_stmt pos:start="53:13" pos:end="53:64"><expr pos:start="53:13" pos:end="53:63"><name pos:start="53:13" pos:end="53:17">index</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <operator pos:start="53:21" pos:end="53:21">(</operator><name pos:start="53:22" pos:end="53:32"><name pos:start="53:22" pos:end="53:22">s</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:32">ioregsel</name></name> <operator pos:start="53:34" pos:end="53:34">-</operator> <name pos:start="53:36" pos:end="53:57">IOAPIC_REG_REDTBL_BASE</name><operator pos:start="53:58" pos:end="53:58">)</operator> <operator pos:start="53:60" pos:end="53:61">&gt;&gt;</operator> <literal type="number" pos:start="53:63" pos:end="53:63">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="67:13"><if pos:start="55:13" pos:end="67:13">if <condition pos:start="55:16" pos:end="55:54">(<expr pos:start="55:17" pos:end="55:53"><name pos:start="55:17" pos:end="55:21">index</name> <operator pos:start="55:23" pos:end="55:24">&gt;=</operator> <literal type="number" pos:start="55:26" pos:end="55:26">0</literal> <operator pos:start="55:28" pos:end="55:29">&amp;&amp;</operator> <name pos:start="55:31" pos:end="55:35">index</name> <operator pos:start="55:37" pos:end="55:37">&lt;</operator> <name pos:start="55:39" pos:end="55:53">IOAPIC_NUM_PINS</name></expr>)</condition> <block pos:start="55:56" pos:end="67:13">{<block_content pos:start="57:17" pos:end="65:17">

                <if_stmt pos:start="57:17" pos:end="65:17"><if pos:start="57:17" pos:end="61:17">if <condition pos:start="57:20" pos:end="57:36">(<expr pos:start="57:21" pos:end="57:35"><name pos:start="57:21" pos:end="57:31"><name pos:start="57:21" pos:end="57:21">s</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:31">ioregsel</name></name> <operator pos:start="57:33" pos:end="57:33">&amp;</operator> <literal type="number" pos:start="57:35" pos:end="57:35">1</literal></expr>)</condition> <block pos:start="57:38" pos:end="61:17">{<block_content pos:start="59:21" pos:end="59:51">

                    <expr_stmt pos:start="59:21" pos:end="59:51"><expr pos:start="59:21" pos:end="59:50"><name pos:start="59:21" pos:end="59:23">val</name> <operator pos:start="59:25" pos:end="59:25">=</operator> <name pos:start="59:27" pos:end="59:44"><name pos:start="59:27" pos:end="59:27">s</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:37">ioredtbl</name><index pos:start="59:38" pos:end="59:44">[<expr pos:start="59:39" pos:end="59:43"><name pos:start="59:39" pos:end="59:43">index</name></expr>]</index></name> <operator pos:start="59:46" pos:end="59:47">&gt;&gt;</operator> <literal type="number" pos:start="59:49" pos:end="59:50">32</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="61:19" pos:end="65:17">else <block pos:start="61:24" pos:end="65:17">{<block_content pos:start="63:21" pos:end="63:58">

                    <expr_stmt pos:start="63:21" pos:end="63:58"><expr pos:start="63:21" pos:end="63:57"><name pos:start="63:21" pos:end="63:23">val</name> <operator pos:start="63:25" pos:end="63:25">=</operator> <name pos:start="63:27" pos:end="63:44"><name pos:start="63:27" pos:end="63:27">s</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:37">ioredtbl</name><index pos:start="63:38" pos:end="63:44">[<expr pos:start="63:39" pos:end="63:43"><name pos:start="63:39" pos:end="63:43">index</name></expr>]</index></name> <operator pos:start="63:46" pos:end="63:46">&amp;</operator> <literal type="number" pos:start="63:48" pos:end="63:57">0xffffffff</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="71:9" pos:end="71:57"><expr pos:start="71:9" pos:end="71:56"><call pos:start="71:9" pos:end="71:56"><name pos:start="71:9" pos:end="71:15">DPRINTF</name><argument_list pos:start="71:16" pos:end="71:56">(<argument pos:start="71:17" pos:end="71:37"><expr pos:start="71:17" pos:end="71:37"><literal type="string" pos:start="71:17" pos:end="71:37">"read: %08x = %08x\n"</literal></expr></argument>, <argument pos:start="71:40" pos:end="71:50"><expr pos:start="71:40" pos:end="71:50"><name pos:start="71:40" pos:end="71:50"><name pos:start="71:40" pos:end="71:40">s</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:50">ioregsel</name></name></expr></argument>, <argument pos:start="71:53" pos:end="71:55"><expr pos:start="71:53" pos:end="71:55"><name pos:start="71:53" pos:end="71:55">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="77:5" pos:end="77:15">return <expr pos:start="77:12" pos:end="77:14"><name pos:start="77:12" pos:end="77:14">val</name></expr>;</return>

</block_content>}</block>
</unit>
