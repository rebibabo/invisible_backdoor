<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26897.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:27">select_accel_fn</name><parameter_list pos:start="1:28" pos:end="1:56">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">buf</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:55"><decl pos:start="1:46" pos:end="1:55"><type pos:start="1:46" pos:end="1:55"><name pos:start="1:46" pos:end="1:51">size_t</name></type> <name pos:start="1:53" pos:end="1:55">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:37">

    <decl_stmt pos:start="5:5" pos:end="8:0"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">uintptr_t</name></type> <name pos:start="5:15" pos:end="5:18">ibuf</name> <init pos:start="5:20" pos:end="5:35">= <expr pos:start="5:22" pos:end="5:35"><operator pos:start="5:22" pos:end="5:22">(</operator><name pos:start="5:23" pos:end="5:31">uintptr_t</name><operator pos:start="5:32" pos:end="5:32">)</operator><name pos:start="5:33" pos:end="5:35">buf</name></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:start="7:1" pos:end="7:22">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:22">CONFIG_AVX2_OPT</name></cpp:ifdef>

    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:71">(<expr pos:start="9:9" pos:end="9:70"><name pos:start="9:9" pos:end="9:11">len</name> <operator pos:start="9:13" pos:end="9:13">%</operator> <literal type="number" pos:start="9:15" pos:end="9:17">128</literal> <operator pos:start="9:19" pos:end="9:20">==</operator> <literal type="number" pos:start="9:22" pos:end="9:22">0</literal> <operator pos:start="9:24" pos:end="9:25">&amp;&amp;</operator> <name pos:start="9:27" pos:end="9:30">ibuf</name> <operator pos:start="9:32" pos:end="9:32">%</operator> <literal type="number" pos:start="9:34" pos:end="9:35">32</literal> <operator pos:start="9:37" pos:end="9:38">==</operator> <literal type="number" pos:start="9:40" pos:end="9:40">0</literal> <operator pos:start="9:42" pos:end="9:43">&amp;&amp;</operator> <operator pos:start="9:45" pos:end="9:45">(</operator><name pos:start="9:46" pos:end="9:56">cpuid_cache</name> <operator pos:start="9:58" pos:end="9:58">&amp;</operator> <name pos:start="9:60" pos:end="9:69">CACHE_AVX2</name><operator pos:start="9:70" pos:end="9:70">)</operator></expr>)</condition> <block pos:start="9:73" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:42">

        <return pos:start="11:9" pos:end="11:42">return <expr pos:start="11:16" pos:end="11:41"><call pos:start="11:16" pos:end="11:41"><name pos:start="11:16" pos:end="11:31">buffer_zero_avx2</name><argument_list pos:start="11:32" pos:end="11:41">(<argument pos:start="11:33" pos:end="11:35"><expr pos:start="11:33" pos:end="11:35"><name pos:start="11:33" pos:end="11:35">buf</name></expr></argument>, <argument pos:start="11:38" pos:end="11:40"><expr pos:start="11:38" pos:end="11:40"><name pos:start="11:38" pos:end="11:40">len</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="22:0"><if pos:start="15:5" pos:end="22:0">if <condition pos:start="15:8" pos:end="15:70">(<expr pos:start="15:9" pos:end="15:69"><name pos:start="15:9" pos:end="15:11">len</name> <operator pos:start="15:13" pos:end="15:13">%</operator> <literal type="number" pos:start="15:15" pos:end="15:16">64</literal> <operator pos:start="15:18" pos:end="15:19">==</operator> <literal type="number" pos:start="15:21" pos:end="15:21">0</literal> <operator pos:start="15:23" pos:end="15:24">&amp;&amp;</operator> <name pos:start="15:26" pos:end="15:29">ibuf</name> <operator pos:start="15:31" pos:end="15:31">%</operator> <literal type="number" pos:start="15:33" pos:end="15:34">16</literal> <operator pos:start="15:36" pos:end="15:37">==</operator> <literal type="number" pos:start="15:39" pos:end="15:39">0</literal> <operator pos:start="15:41" pos:end="15:42">&amp;&amp;</operator> <operator pos:start="15:44" pos:end="15:44">(</operator><name pos:start="15:45" pos:end="15:55">cpuid_cache</name> <operator pos:start="15:57" pos:end="15:57">&amp;</operator> <name pos:start="15:59" pos:end="15:68">CACHE_SSE4</name><operator pos:start="15:69" pos:end="15:69">)</operator></expr>)</condition> <block pos:start="15:72" pos:end="22:0">{<block_content pos:start="17:9" pos:end="17:42">

        <return pos:start="17:9" pos:end="17:42">return <expr pos:start="17:16" pos:end="17:41"><call pos:start="17:16" pos:end="17:41"><name pos:start="17:16" pos:end="17:31">buffer_zero_sse4</name><argument_list pos:start="17:32" pos:end="17:41">(<argument pos:start="17:33" pos:end="17:35"><expr pos:start="17:33" pos:end="17:35"><name pos:start="17:33" pos:end="17:35">buf</name></expr></argument>, <argument pos:start="17:38" pos:end="17:40"><expr pos:start="17:38" pos:end="17:40"><name pos:start="17:38" pos:end="17:40">len</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:70">(<expr pos:start="23:9" pos:end="23:69"><name pos:start="23:9" pos:end="23:11">len</name> <operator pos:start="23:13" pos:end="23:13">%</operator> <literal type="number" pos:start="23:15" pos:end="23:16">64</literal> <operator pos:start="23:18" pos:end="23:19">==</operator> <literal type="number" pos:start="23:21" pos:end="23:21">0</literal> <operator pos:start="23:23" pos:end="23:24">&amp;&amp;</operator> <name pos:start="23:26" pos:end="23:29">ibuf</name> <operator pos:start="23:31" pos:end="23:31">%</operator> <literal type="number" pos:start="23:33" pos:end="23:34">16</literal> <operator pos:start="23:36" pos:end="23:37">==</operator> <literal type="number" pos:start="23:39" pos:end="23:39">0</literal> <operator pos:start="23:41" pos:end="23:42">&amp;&amp;</operator> <operator pos:start="23:44" pos:end="23:44">(</operator><name pos:start="23:45" pos:end="23:55">cpuid_cache</name> <operator pos:start="23:57" pos:end="23:57">&amp;</operator> <name pos:start="23:59" pos:end="23:68">CACHE_SSE2</name><operator pos:start="23:69" pos:end="23:69">)</operator></expr>)</condition> <block pos:start="23:72" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:42">

        <return pos:start="25:9" pos:end="25:42">return <expr pos:start="25:16" pos:end="25:41"><call pos:start="25:16" pos:end="25:41"><name pos:start="25:16" pos:end="25:31">buffer_zero_sse2</name><argument_list pos:start="25:32" pos:end="25:41">(<argument pos:start="25:33" pos:end="25:35"><expr pos:start="25:33" pos:end="25:35"><name pos:start="25:33" pos:end="25:35">buf</name></expr></argument>, <argument pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:40">len</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="29:5" pos:end="29:37">return <expr pos:start="29:12" pos:end="29:36"><call pos:start="29:12" pos:end="29:36"><name pos:start="29:12" pos:end="29:26">buffer_zero_int</name><argument_list pos:start="29:27" pos:end="29:36">(<argument pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:30">buf</name></expr></argument>, <argument pos:start="29:33" pos:end="29:35"><expr pos:start="29:33" pos:end="29:35"><name pos:start="29:33" pos:end="29:35">len</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
