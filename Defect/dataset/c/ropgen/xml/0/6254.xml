<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6254.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:60"><name pos:start="1:1" pos:end="1:19">build_append_notify</name><argument_list pos:start="1:20" pos:end="3:60">(<argument pos:start="1:21" pos:end="1:34">GArray *device</argument>, <argument pos:start="1:37" pos:end="1:52">const char *name</argument>,

                    <argument pos:start="3:21" pos:end="3:38">const char *format</argument>, <argument pos:start="3:41" pos:end="3:48">int skip</argument>, <argument pos:start="3:51" pos:end="3:59">int count</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:29">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">GArray</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:18">method</name> <init pos:start="9:20" pos:end="9:40">= <expr pos:start="9:22" pos:end="9:40"><call pos:start="9:22" pos:end="9:40"><name pos:start="9:22" pos:end="9:38">build_alloc_array</name><argument_list pos:start="9:39" pos:end="9:40">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:14">op</name> <init pos:start="11:16" pos:end="11:21">= <expr pos:start="11:18" pos:end="11:21"><literal type="number" pos:start="11:18" pos:end="11:21">0x14</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="11:24" pos:end="11:37">/* MethodOp */</comment>



    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><call pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:24">build_append_nameseg</name><argument_list pos:start="15:25" pos:end="15:44">(<argument pos:start="15:26" pos:end="15:31"><expr pos:start="15:26" pos:end="15:31"><name pos:start="15:26" pos:end="15:31">method</name></expr></argument>, <argument pos:start="15:34" pos:end="15:37"><expr pos:start="15:34" pos:end="15:37"><literal type="string" pos:start="15:34" pos:end="15:37">"%s"</literal></expr></argument>, <argument pos:start="15:40" pos:end="15:43"><expr pos:start="15:40" pos:end="15:43"><name pos:start="15:40" pos:end="15:43">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><call pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:21">build_append_byte</name><argument_list pos:start="17:22" pos:end="17:35">(<argument pos:start="17:23" pos:end="17:28"><expr pos:start="17:23" pos:end="17:28"><name pos:start="17:23" pos:end="17:28">method</name></expr></argument>, <argument pos:start="17:31" pos:end="17:34"><expr pos:start="17:31" pos:end="17:34"><literal type="number" pos:start="17:31" pos:end="17:34">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="17:38" pos:end="17:64">/* MethodFlags: ArgCount */</comment>

    <for pos:start="19:5" pos:end="31:5">for <control pos:start="19:9" pos:end="19:34">(<init pos:start="19:10" pos:end="19:18"><expr pos:start="19:10" pos:end="19:17"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:17">skip</name></expr>;</init> <condition pos:start="19:20" pos:end="19:29"><expr pos:start="19:20" pos:end="19:28"><name pos:start="19:20" pos:end="19:20">i</name> <operator pos:start="19:22" pos:end="19:22">&lt;</operator> <name pos:start="19:24" pos:end="19:28">count</name></expr>;</condition> <incr pos:start="19:31" pos:end="19:33"><expr pos:start="19:31" pos:end="19:33"><name pos:start="19:31" pos:end="19:31">i</name><operator pos:start="19:32" pos:end="19:33">++</operator></expr></incr>)</control> <block pos:start="19:36" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:33">

        <decl_stmt pos:start="21:9" pos:end="21:45"><decl pos:start="21:9" pos:end="21:44"><type pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:14">GArray</name> <modifier pos:start="21:16" pos:end="21:16">*</modifier></type><name pos:start="21:17" pos:end="21:22">target</name> <init pos:start="21:24" pos:end="21:44">= <expr pos:start="21:26" pos:end="21:44"><call pos:start="21:26" pos:end="21:44"><name pos:start="21:26" pos:end="21:42">build_alloc_array</name><argument_list pos:start="21:43" pos:end="21:44">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:48"><expr pos:start="23:9" pos:end="23:47"><call pos:start="23:9" pos:end="23:47"><name pos:start="23:9" pos:end="23:28">build_append_nameseg</name><argument_list pos:start="23:29" pos:end="23:47">(<argument pos:start="23:30" pos:end="23:35"><expr pos:start="23:30" pos:end="23:35"><name pos:start="23:30" pos:end="23:35">target</name></expr></argument>, <argument pos:start="23:38" pos:end="23:43"><expr pos:start="23:38" pos:end="23:43"><name pos:start="23:38" pos:end="23:43">format</name></expr></argument>, <argument pos:start="23:46" pos:end="23:46"><expr pos:start="23:46" pos:end="23:46"><name pos:start="23:46" pos:end="23:46">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><call pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:14">assert</name><argument_list pos:start="25:15" pos:end="25:23">(<argument pos:start="25:16" pos:end="25:22"><expr pos:start="25:16" pos:end="25:22"><name pos:start="25:16" pos:end="25:16">i</name> <operator pos:start="25:18" pos:end="25:18">&lt;</operator> <literal type="number" pos:start="25:20" pos:end="25:22">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:26" pos:end="25:45">/* Fits in 1 byte */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:57"><expr pos:start="27:9" pos:end="27:56"><call pos:start="27:9" pos:end="27:56"><name pos:start="27:9" pos:end="27:34">build_append_notify_target</name><argument_list pos:start="27:35" pos:end="27:56">(<argument pos:start="27:36" pos:end="27:41"><expr pos:start="27:36" pos:end="27:41"><name pos:start="27:36" pos:end="27:41">method</name></expr></argument>, <argument pos:start="27:44" pos:end="27:49"><expr pos:start="27:44" pos:end="27:49"><name pos:start="27:44" pos:end="27:49">target</name></expr></argument>, <argument pos:start="27:52" pos:end="27:52"><expr pos:start="27:52" pos:end="27:52"><name pos:start="27:52" pos:end="27:52">i</name></expr></argument>, <argument pos:start="27:55" pos:end="27:55"><expr pos:start="27:55" pos:end="27:55"><literal type="number" pos:start="27:55" pos:end="27:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:33"><expr pos:start="29:9" pos:end="29:32"><call pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:24">build_free_array</name><argument_list pos:start="29:25" pos:end="29:32">(<argument pos:start="29:26" pos:end="29:31"><expr pos:start="29:26" pos:end="29:31"><name pos:start="29:26" pos:end="29:31">target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><call pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:17">build_package</name><argument_list pos:start="33:18" pos:end="33:32">(<argument pos:start="33:19" pos:end="33:24"><expr pos:start="33:19" pos:end="33:24"><name pos:start="33:19" pos:end="33:24">method</name></expr></argument>, <argument pos:start="33:27" pos:end="33:28"><expr pos:start="33:27" pos:end="33:28"><name pos:start="33:27" pos:end="33:28">op</name></expr></argument>, <argument pos:start="33:31" pos:end="33:31"><expr pos:start="33:31" pos:end="33:31"><literal type="number" pos:start="33:31" pos:end="33:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:39"><expr pos:start="37:5" pos:end="37:38"><call pos:start="37:5" pos:end="37:38"><name pos:start="37:5" pos:end="37:22">build_append_array</name><argument_list pos:start="37:23" pos:end="37:38">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">device</name></expr></argument>, <argument pos:start="37:32" pos:end="37:37"><expr pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:37">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><call pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:20">build_free_array</name><argument_list pos:start="39:21" pos:end="39:28">(<argument pos:start="39:22" pos:end="39:27"><expr pos:start="39:22" pos:end="39:27"><name pos:start="39:22" pos:end="39:27">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
