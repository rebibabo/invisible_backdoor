<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12866.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">BlockBackend</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:29">img_open</name><parameter_list pos:start="1:30" pos:end="5:58">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><specifier pos:start="1:31" pos:end="1:35">const</specifier> <name pos:start="1:37" pos:end="1:40">char</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">id</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:66"><decl pos:start="1:47" pos:end="1:66"><type pos:start="1:47" pos:end="1:66"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:66">filename</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:45"><decl pos:start="3:31" pos:end="3:45"><type pos:start="3:31" pos:end="3:45"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:40">char</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">fmt</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:56"><decl pos:start="3:48" pos:end="3:56"><type pos:start="3:48" pos:end="3:56"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:56">flags</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:45"><decl pos:start="5:31" pos:end="5:45"><type pos:start="5:31" pos:end="5:45"><name pos:start="5:31" pos:end="5:34">bool</name></type> <name pos:start="5:36" pos:end="5:45">require_io</name></decl></parameter>, <parameter pos:start="5:48" pos:end="5:57"><decl pos:start="5:48" pos:end="5:57"><type pos:start="5:48" pos:end="5:57"><name pos:start="5:48" pos:end="5:51">bool</name></type> <name pos:start="5:53" pos:end="5:57">quiet</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="79:1">{<block_content pos:start="9:5" pos:end="77:16">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">BlockBackend</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">blk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">BlockDriverState</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:22"><name pos:start="13:10" pos:end="13:17">password</name><index pos:start="13:18" pos:end="13:22">[<expr pos:start="13:19" pos:end="13:21"><literal type="number" pos:start="13:19" pos:end="13:21">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:20">local_err</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">QDict</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:18">options</name> <init pos:start="17:20" pos:end="17:25">= <expr pos:start="17:22" pos:end="17:25"><name pos:start="17:22" pos:end="17:25">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">fmt</name></expr>)</condition> <block pos:start="21:14" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:60">

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:15">options</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:29"><name pos:start="23:19" pos:end="23:27">qdict_new</name><argument_list pos:start="23:28" pos:end="23:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:60"><expr pos:start="25:9" pos:end="25:59"><call pos:start="25:9" pos:end="25:59"><name pos:start="25:9" pos:end="25:17">qdict_put</name><argument_list pos:start="25:18" pos:end="25:59">(<argument pos:start="25:19" pos:end="25:25"><expr pos:start="25:19" pos:end="25:25"><name pos:start="25:19" pos:end="25:25">options</name></expr></argument>, <argument pos:start="25:28" pos:end="25:35"><expr pos:start="25:28" pos:end="25:35"><literal type="string" pos:start="25:28" pos:end="25:35">"driver"</literal></expr></argument>, <argument pos:start="25:38" pos:end="25:58"><expr pos:start="25:38" pos:end="25:58"><call pos:start="25:38" pos:end="25:58"><name pos:start="25:38" pos:end="25:53">qstring_from_str</name><argument_list pos:start="25:54" pos:end="25:58">(<argument pos:start="25:55" pos:end="25:57"><expr pos:start="25:55" pos:end="25:57"><name pos:start="25:55" pos:end="25:57">fmt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:71"><expr pos:start="31:5" pos:end="31:70"><name pos:start="31:5" pos:end="31:7">blk</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:70"><name pos:start="31:11" pos:end="31:22">blk_new_open</name><argument_list pos:start="31:23" pos:end="31:70">(<argument pos:start="31:24" pos:end="31:25"><expr pos:start="31:24" pos:end="31:25"><name pos:start="31:24" pos:end="31:25">id</name></expr></argument>, <argument pos:start="31:28" pos:end="31:35"><expr pos:start="31:28" pos:end="31:35"><name pos:start="31:28" pos:end="31:35">filename</name></expr></argument>, <argument pos:start="31:38" pos:end="31:41"><expr pos:start="31:38" pos:end="31:41"><name pos:start="31:38" pos:end="31:41">NULL</name></expr></argument>, <argument pos:start="31:44" pos:end="31:50"><expr pos:start="31:44" pos:end="31:50"><name pos:start="31:44" pos:end="31:50">options</name></expr></argument>, <argument pos:start="31:53" pos:end="31:57"><expr pos:start="31:53" pos:end="31:57"><name pos:start="31:53" pos:end="31:57">flags</name></expr></argument>, <argument pos:start="31:60" pos:end="31:69"><expr pos:start="31:60" pos:end="31:69"><operator pos:start="31:60" pos:end="31:60">&amp;</operator><name pos:start="31:61" pos:end="31:69">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="33:13">(<expr pos:start="33:9" pos:end="33:12"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:12">blk</name></expr>)</condition> <block pos:start="33:15" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:18">

        <expr_stmt pos:start="35:9" pos:end="37:50"><expr pos:start="35:9" pos:end="37:49"><call pos:start="35:9" pos:end="37:49"><name pos:start="35:9" pos:end="35:20">error_report</name><argument_list pos:start="35:21" pos:end="37:49">(<argument pos:start="35:22" pos:end="35:46"><expr pos:start="35:22" pos:end="35:46"><literal type="string" pos:start="35:22" pos:end="35:46">"Could not open '%s': %s"</literal></expr></argument>, <argument pos:start="35:49" pos:end="35:56"><expr pos:start="35:49" pos:end="35:56"><name pos:start="35:49" pos:end="35:56">filename</name></expr></argument>,

                     <argument pos:start="37:22" pos:end="37:48"><expr pos:start="37:22" pos:end="37:48"><call pos:start="37:22" pos:end="37:48"><name pos:start="37:22" pos:end="37:37">error_get_pretty</name><argument_list pos:start="37:38" pos:end="37:48">(<argument pos:start="37:39" pos:end="37:47"><expr pos:start="37:39" pos:end="37:47"><name pos:start="37:39" pos:end="37:47">local_err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><call pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:18">error_free</name><argument_list pos:start="39:19" pos:end="39:29">(<argument pos:start="39:20" pos:end="39:28"><expr pos:start="39:20" pos:end="39:28"><name pos:start="39:20" pos:end="39:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="41:9" pos:end="41:18">goto <name pos:start="41:14" pos:end="41:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:21"><expr pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:6">bs</name> <operator pos:start="47:8" pos:end="47:8">=</operator> <call pos:start="47:10" pos:end="47:20"><name pos:start="47:10" pos:end="47:15">blk_bs</name><argument_list pos:start="47:16" pos:end="47:20">(<argument pos:start="47:17" pos:end="47:19"><expr pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:19">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="69:5"><if pos:start="49:5" pos:end="69:5">if <condition pos:start="49:8" pos:end="49:44">(<expr pos:start="49:9" pos:end="49:43"><call pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:25">bdrv_is_encrypted</name><argument_list pos:start="49:26" pos:end="49:29">(<argument pos:start="49:27" pos:end="49:28"><expr pos:start="49:27" pos:end="49:28"><name pos:start="49:27" pos:end="49:28">bs</name></expr></argument>)</argument_list></call> <operator pos:start="49:31" pos:end="49:32">&amp;&amp;</operator> <name pos:start="49:34" pos:end="49:43">require_io</name></expr>)</condition> <block pos:start="49:46" pos:end="69:5">{<block_content pos:start="51:9" pos:end="67:9">

        <expr_stmt pos:start="51:9" pos:end="51:68"><expr pos:start="51:9" pos:end="51:67"><call pos:start="51:9" pos:end="51:67"><name pos:start="51:9" pos:end="51:15">qprintf</name><argument_list pos:start="51:16" pos:end="51:67">(<argument pos:start="51:17" pos:end="51:21"><expr pos:start="51:17" pos:end="51:21"><name pos:start="51:17" pos:end="51:21">quiet</name></expr></argument>, <argument pos:start="51:24" pos:end="51:56"><expr pos:start="51:24" pos:end="51:56"><literal type="string" pos:start="51:24" pos:end="51:56">"Disk image '%s' is encrypted.\n"</literal></expr></argument>, <argument pos:start="51:59" pos:end="51:66"><expr pos:start="51:59" pos:end="51:66"><name pos:start="51:59" pos:end="51:66">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:58">(<expr pos:start="53:13" pos:end="53:57"><call pos:start="53:13" pos:end="53:53"><name pos:start="53:13" pos:end="53:25">read_password</name><argument_list pos:start="53:26" pos:end="53:53">(<argument pos:start="53:27" pos:end="53:34"><expr pos:start="53:27" pos:end="53:34"><name pos:start="53:27" pos:end="53:34">password</name></expr></argument>, <argument pos:start="53:37" pos:end="53:52"><expr pos:start="53:37" pos:end="53:52"><sizeof pos:start="53:37" pos:end="53:52">sizeof<argument_list pos:start="53:43" pos:end="53:52">(<argument pos:start="53:44" pos:end="53:51"><expr pos:start="53:44" pos:end="53:51"><name pos:start="53:44" pos:end="53:51">password</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="53:55" pos:end="53:55">&lt;</operator> <literal type="number" pos:start="53:57" pos:end="53:57">0</literal></expr>)</condition> <block pos:start="53:60" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:22">

            <expr_stmt pos:start="55:13" pos:end="55:46"><expr pos:start="55:13" pos:end="55:45"><call pos:start="55:13" pos:end="55:45"><name pos:start="55:13" pos:end="55:24">error_report</name><argument_list pos:start="55:25" pos:end="55:45">(<argument pos:start="55:26" pos:end="55:44"><expr pos:start="55:26" pos:end="55:44"><literal type="string" pos:start="55:26" pos:end="55:44">"No password given"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="57:13" pos:end="57:22">goto <name pos:start="57:18" pos:end="57:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:43">(<expr pos:start="61:13" pos:end="61:42"><call pos:start="61:13" pos:end="61:38"><name pos:start="61:13" pos:end="61:24">bdrv_set_key</name><argument_list pos:start="61:25" pos:end="61:38">(<argument pos:start="61:26" pos:end="61:27"><expr pos:start="61:26" pos:end="61:27"><name pos:start="61:26" pos:end="61:27">bs</name></expr></argument>, <argument pos:start="61:30" pos:end="61:37"><expr pos:start="61:30" pos:end="61:37"><name pos:start="61:30" pos:end="61:37">password</name></expr></argument>)</argument_list></call> <operator pos:start="61:40" pos:end="61:40">&lt;</operator> <literal type="number" pos:start="61:42" pos:end="61:42">0</literal></expr>)</condition> <block pos:start="61:45" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:22">

            <expr_stmt pos:start="63:13" pos:end="63:45"><expr pos:start="63:13" pos:end="63:44"><call pos:start="63:13" pos:end="63:44"><name pos:start="63:13" pos:end="63:24">error_report</name><argument_list pos:start="63:25" pos:end="63:44">(<argument pos:start="63:26" pos:end="63:43"><expr pos:start="63:26" pos:end="63:43"><literal type="string" pos:start="63:26" pos:end="63:43">"invalid password"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="65:13" pos:end="65:22">goto <name pos:start="65:18" pos:end="65:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="71:5" pos:end="71:15">return <expr pos:start="71:12" pos:end="71:14"><name pos:start="71:12" pos:end="71:14">blk</name></expr>;</return>

<label pos:start="73:1" pos:end="73:5"><name pos:start="73:1" pos:end="73:4">fail</name>:</label>

    <expr_stmt pos:start="75:5" pos:end="75:19"><expr pos:start="75:5" pos:end="75:18"><call pos:start="75:5" pos:end="75:18"><name pos:start="75:5" pos:end="75:13">blk_unref</name><argument_list pos:start="75:14" pos:end="75:18">(<argument pos:start="75:15" pos:end="75:17"><expr pos:start="75:15" pos:end="75:17"><name pos:start="75:15" pos:end="75:17">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="77:5" pos:end="77:16">return <expr pos:start="77:12" pos:end="77:15"><name pos:start="77:12" pos:end="77:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
