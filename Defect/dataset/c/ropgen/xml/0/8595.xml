<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8595.c" pos:tabs="8"><function pos:start="1:1" pos:end="243:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">scan_file</name><parameter_list pos:start="1:21" pos:end="1:84">(<parameter pos:start="1:22" pos:end="1:43"><decl pos:start="1:22" pos:end="1:43"><type pos:start="1:22" pos:end="1:43"><name pos:start="1:22" pos:end="1:36">AVFormatContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:43">avctx</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">AVStream</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">vst</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:73"><decl pos:start="1:61" pos:end="1:73"><type pos:start="1:61" pos:end="1:73"><name pos:start="1:61" pos:end="1:68">AVStream</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">ast</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:83"><decl pos:start="1:76" pos:end="1:83"><type pos:start="1:76" pos:end="1:83"><name pos:start="1:76" pos:end="1:78">int</name></type> <name pos:start="1:80" pos:end="1:83">file</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="243:1">{<block_content pos:start="5:5" pos:end="241:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MlvContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mlv</name> <init pos:start="5:21" pos:end="5:38">= <expr pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:27">avctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:35">= <expr pos:start="7:23" pos:end="7:35"><name pos:start="7:23" pos:end="7:35"><name pos:start="7:23" pos:end="7:25">mlv</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:29">pb</name><index pos:start="7:30" pos:end="7:35">[<expr pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:34">file</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <while pos:start="11:5" pos:end="239:5">while <condition pos:start="11:11" pos:end="11:26">(<expr pos:start="11:12" pos:end="11:25"><operator pos:start="11:12" pos:end="11:12">!</operator><call pos:start="11:13" pos:end="11:25"><name pos:start="11:13" pos:end="11:21">avio_feof</name><argument_list pos:start="11:22" pos:end="11:25">(<argument pos:start="11:23" pos:end="11:24"><expr pos:start="11:23" pos:end="11:24"><name pos:start="11:23" pos:end="11:24">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:28" pos:end="239:5">{<block_content pos:start="13:9" pos:end="237:28">

        <decl_stmt pos:start="13:9" pos:end="13:17"><decl pos:start="13:9" pos:end="13:16"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:16">type</name></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:26"><decl pos:start="15:9" pos:end="15:25"><type pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:16">unsigned</name> <name pos:start="15:18" pos:end="15:20">int</name></type> <name pos:start="15:22" pos:end="15:25">size</name></decl>;</decl_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:29"><expr pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:12">type</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:28"><name pos:start="17:16" pos:end="17:24">avio_rl32</name><argument_list pos:start="17:25" pos:end="17:28">(<argument pos:start="17:26" pos:end="17:27"><expr pos:start="17:26" pos:end="17:27"><name pos:start="17:26" pos:end="17:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:12">size</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:24">avio_rl32</name><argument_list pos:start="19:25" pos:end="19:28">(<argument pos:start="19:26" pos:end="19:27"><expr pos:start="19:26" pos:end="19:27"><name pos:start="19:26" pos:end="19:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:25"><expr pos:start="21:9" pos:end="21:24"><call pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:17">avio_skip</name><argument_list pos:start="21:18" pos:end="21:24">(<argument pos:start="21:19" pos:end="21:20"><expr pos:start="21:19" pos:end="21:20"><name pos:start="21:19" pos:end="21:20">pb</name></expr></argument>, <argument pos:start="21:23" pos:end="21:23"><expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="21:27" pos:end="21:37">//timestamp</comment>

        <if_stmt pos:start="23:9" pos:end="25:18"><if pos:start="23:9" pos:end="25:18">if <condition pos:start="23:12" pos:end="23:22">(<expr pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:16">size</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <literal type="number" pos:start="23:20" pos:end="23:21">16</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:18"><block_content pos:start="25:13" pos:end="25:18">

            <break pos:start="25:13" pos:end="25:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:19"><expr pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:12">size</name> <operator pos:start="27:14" pos:end="27:15">-=</operator> <literal type="number" pos:start="27:17" pos:end="27:18">16</literal></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="235:9"><if pos:start="29:9" pos:end="57:9">if <condition pos:start="29:12" pos:end="29:65">(<expr pos:start="29:13" pos:end="29:64"><name pos:start="29:13" pos:end="29:15">vst</name> <operator pos:start="29:17" pos:end="29:18">&amp;&amp;</operator> <name pos:start="29:20" pos:end="29:23">type</name> <operator pos:start="29:25" pos:end="29:26">==</operator> <call pos:start="29:28" pos:end="29:49"><name pos:start="29:28" pos:end="29:32">MKTAG</name><argument_list pos:start="29:33" pos:end="29:49">(<argument pos:start="29:34" pos:end="29:36"><expr pos:start="29:34" pos:end="29:36"><literal type="char" pos:start="29:34" pos:end="29:36">'R'</literal></expr></argument>,<argument pos:start="29:38" pos:end="29:40"><expr pos:start="29:38" pos:end="29:40"><literal type="char" pos:start="29:38" pos:end="29:40">'A'</literal></expr></argument>,<argument pos:start="29:42" pos:end="29:44"><expr pos:start="29:42" pos:end="29:44"><literal type="char" pos:start="29:42" pos:end="29:44">'W'</literal></expr></argument>,<argument pos:start="29:46" pos:end="29:48"><expr pos:start="29:46" pos:end="29:48"><literal type="char" pos:start="29:46" pos:end="29:48">'I'</literal></expr></argument>)</argument_list></call> <operator pos:start="29:51" pos:end="29:52">&amp;&amp;</operator> <name pos:start="29:54" pos:end="29:57">size</name> <operator pos:start="29:59" pos:end="29:60">&gt;=</operator> <literal type="number" pos:start="29:62" pos:end="29:64">164</literal></expr>)</condition> <block pos:start="29:67" pos:end="57:9">{<block_content pos:start="31:13" pos:end="55:24">

            <expr_stmt pos:start="31:13" pos:end="31:47"><expr pos:start="31:13" pos:end="31:46"><name pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:15">vst</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:22">codec</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:29">width</name></name>  <operator pos:start="31:32" pos:end="31:32">=</operator> <call pos:start="31:34" pos:end="31:46"><name pos:start="31:34" pos:end="31:42">avio_rl16</name><argument_list pos:start="31:43" pos:end="31:46">(<argument pos:start="31:44" pos:end="31:45"><expr pos:start="31:44" pos:end="31:45"><name pos:start="31:44" pos:end="31:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:47"><expr pos:start="33:13" pos:end="33:46"><name pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:15">vst</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:22">codec</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:30">height</name></name> <operator pos:start="33:32" pos:end="33:32">=</operator> <call pos:start="33:34" pos:end="33:46"><name pos:start="33:34" pos:end="33:42">avio_rl16</name><argument_list pos:start="33:43" pos:end="33:46">(<argument pos:start="33:44" pos:end="33:45"><expr pos:start="33:44" pos:end="33:45"><name pos:start="33:44" pos:end="33:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="37:64"><if pos:start="35:13" pos:end="37:64">if <condition pos:start="35:16" pos:end="35:35">(<expr pos:start="35:17" pos:end="35:34"><call pos:start="35:17" pos:end="35:29"><name pos:start="35:17" pos:end="35:25">avio_rl32</name><argument_list pos:start="35:26" pos:end="35:29">(<argument pos:start="35:27" pos:end="35:28"><expr pos:start="35:27" pos:end="35:28"><name pos:start="35:27" pos:end="35:28">pb</name></expr></argument>)</argument_list></call> <operator pos:start="35:31" pos:end="35:32">!=</operator> <literal type="number" pos:start="35:34" pos:end="35:34">1</literal></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:64"><block_content pos:start="37:17" pos:end="37:64">

                <expr_stmt pos:start="37:17" pos:end="37:64"><expr pos:start="37:17" pos:end="37:63"><call pos:start="37:17" pos:end="37:63"><name pos:start="37:17" pos:end="37:37">avpriv_request_sample</name><argument_list pos:start="37:38" pos:end="37:63">(<argument pos:start="37:39" pos:end="37:43"><expr pos:start="37:39" pos:end="37:43"><name pos:start="37:39" pos:end="37:43">avctx</name></expr></argument>, <argument pos:start="37:46" pos:end="37:62"><expr pos:start="37:46" pos:end="37:62"><literal type="string" pos:start="37:46" pos:end="37:62">"raw api version"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:30"><expr pos:start="39:13" pos:end="39:29"><call pos:start="39:13" pos:end="39:29"><name pos:start="39:13" pos:end="39:21">avio_skip</name><argument_list pos:start="39:22" pos:end="39:29">(<argument pos:start="39:23" pos:end="39:24"><expr pos:start="39:23" pos:end="39:24"><name pos:start="39:23" pos:end="39:24">pb</name></expr></argument>, <argument pos:start="39:27" pos:end="39:28"><expr pos:start="39:27" pos:end="39:28"><literal type="number" pos:start="39:27" pos:end="39:28">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="39:32" pos:end="39:75">// pointer, width, height, pitch, frame_size</comment>

            <expr_stmt pos:start="41:13" pos:end="41:62"><expr pos:start="41:13" pos:end="41:61"><name pos:start="41:13" pos:end="41:45"><name pos:start="41:13" pos:end="41:15">vst</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:22">codec</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:45">bits_per_coded_sample</name></name> <operator pos:start="41:47" pos:end="41:47">=</operator> <call pos:start="41:49" pos:end="41:61"><name pos:start="41:49" pos:end="41:57">avio_rl32</name><argument_list pos:start="41:58" pos:end="41:61">(<argument pos:start="41:59" pos:end="41:60"><expr pos:start="41:59" pos:end="41:60"><name pos:start="41:59" pos:end="41:60">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:39"><expr pos:start="43:13" pos:end="43:38"><call pos:start="43:13" pos:end="43:38"><name pos:start="43:13" pos:end="43:21">avio_skip</name><argument_list pos:start="43:22" pos:end="43:38">(<argument pos:start="43:23" pos:end="43:24"><expr pos:start="43:23" pos:end="43:24"><name pos:start="43:23" pos:end="43:24">pb</name></expr></argument>, <argument pos:start="43:27" pos:end="43:37"><expr pos:start="43:27" pos:end="43:37"><literal type="number" pos:start="43:27" pos:end="43:29">8</literal> <operator pos:start="43:29" pos:end="43:29">+</operator> <literal type="number" pos:start="43:31" pos:end="43:34">16</literal> <operator pos:start="43:34" pos:end="43:34">+</operator> <literal type="number" pos:start="43:36" pos:end="43:37">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="43:41" pos:end="43:101">// black_level, white_level, xywh, active_area, exposure_bias</comment>

            <if_stmt pos:start="45:13" pos:end="47:60"><if pos:start="45:13" pos:end="47:60">if <condition pos:start="45:16" pos:end="45:43">(<expr pos:start="45:17" pos:end="45:42"><call pos:start="45:17" pos:end="45:29"><name pos:start="45:17" pos:end="45:25">avio_rl32</name><argument_list pos:start="45:26" pos:end="45:29">(<argument pos:start="45:27" pos:end="45:28"><expr pos:start="45:27" pos:end="45:28"><name pos:start="45:27" pos:end="45:28">pb</name></expr></argument>)</argument_list></call> <operator pos:start="45:31" pos:end="45:32">!=</operator> <literal type="number" pos:start="45:34" pos:end="45:42">0x2010100</literal></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:60"><block_content pos:start="47:17" pos:end="47:60"> <comment type="block" pos:start="45:45" pos:end="45:54">/* RGGB */</comment>

                <expr_stmt pos:start="47:17" pos:end="47:60"><expr pos:start="47:17" pos:end="47:59"><call pos:start="47:17" pos:end="47:59"><name pos:start="47:17" pos:end="47:37">avpriv_request_sample</name><argument_list pos:start="47:38" pos:end="47:59">(<argument pos:start="47:39" pos:end="47:43"><expr pos:start="47:39" pos:end="47:43"><name pos:start="47:39" pos:end="47:43">avctx</name></expr></argument>, <argument pos:start="47:46" pos:end="47:58"><expr pos:start="47:46" pos:end="47:58"><literal type="string" pos:start="47:46" pos:end="47:58">"cfa_pattern"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:30"><expr pos:start="49:13" pos:end="49:29"><call pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:21">avio_skip</name><argument_list pos:start="49:22" pos:end="49:29">(<argument pos:start="49:23" pos:end="49:24"><expr pos:start="49:23" pos:end="49:24"><name pos:start="49:23" pos:end="49:24">pb</name></expr></argument>, <argument pos:start="49:27" pos:end="49:28"><expr pos:start="49:27" pos:end="49:28"><literal type="number" pos:start="49:27" pos:end="49:28">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="49:32" pos:end="49:87">// calibration_illuminant1, color_matrix1, dynamic_range</comment>

            <expr_stmt pos:start="51:13" pos:end="51:61"><expr pos:start="51:13" pos:end="51:60"><name pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:15">vst</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:22">codec</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:31">pix_fmt</name></name>  <operator pos:start="51:34" pos:end="51:34">=</operator> <name pos:start="51:36" pos:end="51:60">AV_PIX_FMT_BAYER_RGGB16LE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:61"><expr pos:start="53:13" pos:end="53:60"><name pos:start="53:13" pos:end="53:33"><name pos:start="53:13" pos:end="53:15">vst</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:22">codec</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:33">codec_tag</name></name> <operator pos:start="53:35" pos:end="53:35">=</operator> <call pos:start="53:37" pos:end="53:60"><name pos:start="53:37" pos:end="53:41">MKTAG</name><argument_list pos:start="53:42" pos:end="53:60">(<argument pos:start="53:43" pos:end="53:45"><expr pos:start="53:43" pos:end="53:45"><literal type="char" pos:start="53:43" pos:end="53:45">'B'</literal></expr></argument>, <argument pos:start="53:48" pos:end="53:50"><expr pos:start="53:48" pos:end="53:50"><literal type="char" pos:start="53:48" pos:end="53:50">'I'</literal></expr></argument>, <argument pos:start="53:53" pos:end="53:55"><expr pos:start="53:53" pos:end="53:55"><literal type="char" pos:start="53:53" pos:end="53:55">'T'</literal></expr></argument>, <argument pos:start="53:58" pos:end="53:59"><expr pos:start="53:58" pos:end="53:59"><literal type="number" pos:start="53:58" pos:end="53:59">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:24"><expr pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:16">size</name> <operator pos:start="55:18" pos:end="55:19">-=</operator> <literal type="number" pos:start="55:21" pos:end="55:23">164</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="57:11" pos:end="67:9">else if <condition pos:start="57:19" pos:end="57:74">(<expr pos:start="57:20" pos:end="57:73"><name pos:start="57:20" pos:end="57:22">ast</name> <operator pos:start="57:24" pos:end="57:25">&amp;&amp;</operator> <name pos:start="57:27" pos:end="57:30">type</name> <operator pos:start="57:32" pos:end="57:33">==</operator> <call pos:start="57:35" pos:end="57:59"><name pos:start="57:35" pos:end="57:39">MKTAG</name><argument_list pos:start="57:40" pos:end="57:59">(<argument pos:start="57:41" pos:end="57:43"><expr pos:start="57:41" pos:end="57:43"><literal type="char" pos:start="57:41" pos:end="57:43">'W'</literal></expr></argument>, <argument pos:start="57:46" pos:end="57:48"><expr pos:start="57:46" pos:end="57:48"><literal type="char" pos:start="57:46" pos:end="57:48">'A'</literal></expr></argument>, <argument pos:start="57:51" pos:end="57:53"><expr pos:start="57:51" pos:end="57:53"><literal type="char" pos:start="57:51" pos:end="57:53">'V'</literal></expr></argument>, <argument pos:start="57:56" pos:end="57:58"><expr pos:start="57:56" pos:end="57:58"><literal type="char" pos:start="57:56" pos:end="57:58">'I'</literal></expr></argument>)</argument_list></call> <operator pos:start="57:61" pos:end="57:62">&amp;&amp;</operator> <name pos:start="57:64" pos:end="57:67">size</name> <operator pos:start="57:69" pos:end="57:70">&gt;=</operator> <literal type="number" pos:start="57:72" pos:end="57:73">16</literal></expr>)</condition> <block pos:start="57:76" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:23">

            <expr_stmt pos:start="59:13" pos:end="59:56"><expr pos:start="59:13" pos:end="59:55"><name pos:start="59:13" pos:end="59:15">ret</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <call pos:start="59:19" pos:end="59:55"><name pos:start="59:19" pos:end="59:35">ff_get_wav_header</name><argument_list pos:start="59:36" pos:end="59:55">(<argument pos:start="59:37" pos:end="59:38"><expr pos:start="59:37" pos:end="59:38"><name pos:start="59:37" pos:end="59:38">pb</name></expr></argument>, <argument pos:start="59:41" pos:end="59:50"><expr pos:start="59:41" pos:end="59:50"><name pos:start="59:41" pos:end="59:50"><name pos:start="59:41" pos:end="59:43">ast</name><operator pos:start="59:44" pos:end="59:45">-&gt;</operator><name pos:start="59:46" pos:end="59:50">codec</name></name></expr></argument>, <argument pos:start="59:53" pos:end="59:54"><expr pos:start="59:53" pos:end="59:54"><literal type="number" pos:start="59:53" pos:end="59:54">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="61:13" pos:end="63:27"><if pos:start="61:13" pos:end="63:27">if <condition pos:start="61:16" pos:end="61:24">(<expr pos:start="61:17" pos:end="61:23"><name pos:start="61:17" pos:end="61:19">ret</name> <operator pos:start="61:21" pos:end="61:21">&lt;</operator> <literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:27"><block_content pos:start="63:17" pos:end="63:27">

                <return pos:start="63:17" pos:end="63:27">return <expr pos:start="63:24" pos:end="63:26"><name pos:start="63:24" pos:end="63:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:23"><expr pos:start="65:13" pos:end="65:22"><name pos:start="65:13" pos:end="65:16">size</name> <operator pos:start="65:18" pos:end="65:19">-=</operator> <literal type="number" pos:start="65:21" pos:end="65:22">16</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="67:11" pos:end="75:9">else if <condition pos:start="67:19" pos:end="67:50">(<expr pos:start="67:20" pos:end="67:49"><name pos:start="67:20" pos:end="67:23">type</name> <operator pos:start="67:25" pos:end="67:26">==</operator> <call pos:start="67:28" pos:end="67:49"><name pos:start="67:28" pos:end="67:32">MKTAG</name><argument_list pos:start="67:33" pos:end="67:49">(<argument pos:start="67:34" pos:end="67:36"><expr pos:start="67:34" pos:end="67:36"><literal type="char" pos:start="67:34" pos:end="67:36">'I'</literal></expr></argument>,<argument pos:start="67:38" pos:end="67:40"><expr pos:start="67:38" pos:end="67:40"><literal type="char" pos:start="67:38" pos:end="67:40">'N'</literal></expr></argument>,<argument pos:start="67:42" pos:end="67:44"><expr pos:start="67:42" pos:end="67:44"><literal type="char" pos:start="67:42" pos:end="67:44">'F'</literal></expr></argument>,<argument pos:start="67:46" pos:end="67:48"><expr pos:start="67:46" pos:end="67:48"><literal type="char" pos:start="67:46" pos:end="67:48">'O'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:52" pos:end="75:9">{<block_content pos:start="69:13" pos:end="73:21">

            <if_stmt pos:start="69:13" pos:end="71:53"><if pos:start="69:13" pos:end="71:53">if <condition pos:start="69:16" pos:end="69:25">(<expr pos:start="69:17" pos:end="69:24"><name pos:start="69:17" pos:end="69:20">size</name> <operator pos:start="69:22" pos:end="69:22">&gt;</operator> <literal type="number" pos:start="69:24" pos:end="69:24">0</literal></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:53"><block_content pos:start="71:17" pos:end="71:53">

                <expr_stmt pos:start="71:17" pos:end="71:53"><expr pos:start="71:17" pos:end="71:52"><call pos:start="71:17" pos:end="71:52"><name pos:start="71:17" pos:end="71:27">read_string</name><argument_list pos:start="71:28" pos:end="71:52">(<argument pos:start="71:29" pos:end="71:33"><expr pos:start="71:29" pos:end="71:33"><name pos:start="71:29" pos:end="71:33">avctx</name></expr></argument>, <argument pos:start="71:36" pos:end="71:37"><expr pos:start="71:36" pos:end="71:37"><name pos:start="71:36" pos:end="71:37">pb</name></expr></argument>, <argument pos:start="71:40" pos:end="71:45"><expr pos:start="71:40" pos:end="71:45"><literal type="string" pos:start="71:40" pos:end="71:45">"info"</literal></expr></argument>, <argument pos:start="71:48" pos:end="71:51"><expr pos:start="71:48" pos:end="71:51"><name pos:start="71:48" pos:end="71:51">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <continue pos:start="73:13" pos:end="73:21">continue;</continue>

        </block_content>}</block></if> <if type="elseif" pos:start="75:11" pos:end="91:9">else if <condition pos:start="75:19" pos:end="75:64">(<expr pos:start="75:20" pos:end="75:63"><name pos:start="75:20" pos:end="75:23">type</name> <operator pos:start="75:25" pos:end="75:26">==</operator> <call pos:start="75:28" pos:end="75:49"><name pos:start="75:28" pos:end="75:32">MKTAG</name><argument_list pos:start="75:33" pos:end="75:49">(<argument pos:start="75:34" pos:end="75:36"><expr pos:start="75:34" pos:end="75:36"><literal type="char" pos:start="75:34" pos:end="75:36">'I'</literal></expr></argument>,<argument pos:start="75:38" pos:end="75:40"><expr pos:start="75:38" pos:end="75:40"><literal type="char" pos:start="75:38" pos:end="75:40">'D'</literal></expr></argument>,<argument pos:start="75:42" pos:end="75:44"><expr pos:start="75:42" pos:end="75:44"><literal type="char" pos:start="75:42" pos:end="75:44">'N'</literal></expr></argument>,<argument pos:start="75:46" pos:end="75:48"><expr pos:start="75:46" pos:end="75:48"><literal type="char" pos:start="75:46" pos:end="75:48">'T'</literal></expr></argument>)</argument_list></call> <operator pos:start="75:51" pos:end="75:52">&amp;&amp;</operator> <name pos:start="75:54" pos:end="75:57">size</name> <operator pos:start="75:59" pos:end="75:60">&gt;=</operator> <literal type="number" pos:start="75:62" pos:end="75:63">36</literal></expr>)</condition> <block pos:start="75:66" pos:end="91:9">{<block_content pos:start="77:13" pos:end="89:13">

            <expr_stmt pos:start="77:13" pos:end="77:53"><expr pos:start="77:13" pos:end="77:52"><call pos:start="77:13" pos:end="77:52"><name pos:start="77:13" pos:end="77:23">read_string</name><argument_list pos:start="77:24" pos:end="77:52">(<argument pos:start="77:25" pos:end="77:29"><expr pos:start="77:25" pos:end="77:29"><name pos:start="77:25" pos:end="77:29">avctx</name></expr></argument>, <argument pos:start="77:32" pos:end="77:33"><expr pos:start="77:32" pos:end="77:33"><name pos:start="77:32" pos:end="77:33">pb</name></expr></argument>, <argument pos:start="77:36" pos:end="77:47"><expr pos:start="77:36" pos:end="77:47"><literal type="string" pos:start="77:36" pos:end="77:47">"cameraName"</literal></expr></argument>, <argument pos:start="77:50" pos:end="77:51"><expr pos:start="77:50" pos:end="77:51"><literal type="number" pos:start="77:50" pos:end="77:51">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:63"><expr pos:start="79:13" pos:end="79:62"><call pos:start="79:13" pos:end="79:62"><name pos:start="79:13" pos:end="79:23">read_uint32</name><argument_list pos:start="79:24" pos:end="79:62">(<argument pos:start="79:25" pos:end="79:29"><expr pos:start="79:25" pos:end="79:29"><name pos:start="79:25" pos:end="79:29">avctx</name></expr></argument>, <argument pos:start="79:32" pos:end="79:33"><expr pos:start="79:32" pos:end="79:33"><name pos:start="79:32" pos:end="79:33">pb</name></expr></argument>, <argument pos:start="79:36" pos:end="79:48"><expr pos:start="79:36" pos:end="79:48"><literal type="string" pos:start="79:36" pos:end="79:48">"cameraModel"</literal></expr></argument>, <argument pos:start="79:51" pos:end="79:61"><expr pos:start="79:51" pos:end="79:61"><literal type="string" pos:start="79:51" pos:end="79:55">"0x%"</literal><name pos:start="79:56" pos:end="79:61">PRIx32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:23"><expr pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:16">size</name> <operator pos:start="81:18" pos:end="81:19">-=</operator> <literal type="number" pos:start="81:21" pos:end="81:22">36</literal></expr>;</expr_stmt>

            <if_stmt pos:start="83:13" pos:end="89:13"><if pos:start="83:13" pos:end="89:13">if <condition pos:start="83:16" pos:end="83:27">(<expr pos:start="83:17" pos:end="83:26"><name pos:start="83:17" pos:end="83:20">size</name> <operator pos:start="83:22" pos:end="83:23">&gt;=</operator> <literal type="number" pos:start="83:25" pos:end="83:26">32</literal></expr>)</condition> <block pos:start="83:29" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:27">

                <expr_stmt pos:start="85:17" pos:end="85:59"><expr pos:start="85:17" pos:end="85:58"><call pos:start="85:17" pos:end="85:58"><name pos:start="85:17" pos:end="85:27">read_string</name><argument_list pos:start="85:28" pos:end="85:58">(<argument pos:start="85:29" pos:end="85:33"><expr pos:start="85:29" pos:end="85:33"><name pos:start="85:29" pos:end="85:33">avctx</name></expr></argument>, <argument pos:start="85:36" pos:end="85:37"><expr pos:start="85:36" pos:end="85:37"><name pos:start="85:36" pos:end="85:37">pb</name></expr></argument>, <argument pos:start="85:40" pos:end="85:53"><expr pos:start="85:40" pos:end="85:53"><literal type="string" pos:start="85:40" pos:end="85:53">"cameraSerial"</literal></expr></argument>, <argument pos:start="85:56" pos:end="85:57"><expr pos:start="85:56" pos:end="85:57"><literal type="number" pos:start="85:56" pos:end="85:57">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:27"><expr pos:start="87:17" pos:end="87:26"><name pos:start="87:17" pos:end="87:20">size</name> <operator pos:start="87:22" pos:end="87:23">-=</operator> <literal type="number" pos:start="87:25" pos:end="87:26">32</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="91:11" pos:end="119:9">else if <condition pos:start="91:19" pos:end="91:64">(<expr pos:start="91:20" pos:end="91:63"><name pos:start="91:20" pos:end="91:23">type</name> <operator pos:start="91:25" pos:end="91:26">==</operator> <call pos:start="91:28" pos:end="91:49"><name pos:start="91:28" pos:end="91:32">MKTAG</name><argument_list pos:start="91:33" pos:end="91:49">(<argument pos:start="91:34" pos:end="91:36"><expr pos:start="91:34" pos:end="91:36"><literal type="char" pos:start="91:34" pos:end="91:36">'L'</literal></expr></argument>,<argument pos:start="91:38" pos:end="91:40"><expr pos:start="91:38" pos:end="91:40"><literal type="char" pos:start="91:38" pos:end="91:40">'E'</literal></expr></argument>,<argument pos:start="91:42" pos:end="91:44"><expr pos:start="91:42" pos:end="91:44"><literal type="char" pos:start="91:42" pos:end="91:44">'N'</literal></expr></argument>,<argument pos:start="91:46" pos:end="91:48"><expr pos:start="91:46" pos:end="91:48"><literal type="char" pos:start="91:46" pos:end="91:48">'S'</literal></expr></argument>)</argument_list></call> <operator pos:start="91:51" pos:end="91:52">&amp;&amp;</operator> <name pos:start="91:54" pos:end="91:57">size</name> <operator pos:start="91:59" pos:end="91:60">&gt;=</operator> <literal type="number" pos:start="91:62" pos:end="91:63">48</literal></expr>)</condition> <block pos:start="91:66" pos:end="119:9">{<block_content pos:start="93:13" pos:end="117:13">

            <expr_stmt pos:start="93:13" pos:end="93:56"><expr pos:start="93:13" pos:end="93:55"><call pos:start="93:13" pos:end="93:55"><name pos:start="93:13" pos:end="93:23">read_uint16</name><argument_list pos:start="93:24" pos:end="93:55">(<argument pos:start="93:25" pos:end="93:29"><expr pos:start="93:25" pos:end="93:29"><name pos:start="93:25" pos:end="93:29">avctx</name></expr></argument>, <argument pos:start="93:32" pos:end="93:33"><expr pos:start="93:32" pos:end="93:33"><name pos:start="93:32" pos:end="93:33">pb</name></expr></argument>, <argument pos:start="93:36" pos:end="93:48"><expr pos:start="93:36" pos:end="93:48"><literal type="string" pos:start="93:36" pos:end="93:48">"focalLength"</literal></expr></argument>, <argument pos:start="93:51" pos:end="93:54"><expr pos:start="93:51" pos:end="93:54"><literal type="string" pos:start="93:51" pos:end="93:54">"%i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:54"><expr pos:start="95:13" pos:end="95:53"><call pos:start="95:13" pos:end="95:53"><name pos:start="95:13" pos:end="95:23">read_uint16</name><argument_list pos:start="95:24" pos:end="95:53">(<argument pos:start="95:25" pos:end="95:29"><expr pos:start="95:25" pos:end="95:29"><name pos:start="95:25" pos:end="95:29">avctx</name></expr></argument>, <argument pos:start="95:32" pos:end="95:33"><expr pos:start="95:32" pos:end="95:33"><name pos:start="95:32" pos:end="95:33">pb</name></expr></argument>, <argument pos:start="95:36" pos:end="95:46"><expr pos:start="95:36" pos:end="95:46"><literal type="string" pos:start="95:36" pos:end="95:46">"focalDist"</literal></expr></argument>, <argument pos:start="95:49" pos:end="95:52"><expr pos:start="95:49" pos:end="95:52"><literal type="string" pos:start="95:49" pos:end="95:52">"%i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:53"><expr pos:start="97:13" pos:end="97:52"><call pos:start="97:13" pos:end="97:52"><name pos:start="97:13" pos:end="97:23">read_uint16</name><argument_list pos:start="97:24" pos:end="97:52">(<argument pos:start="97:25" pos:end="97:29"><expr pos:start="97:25" pos:end="97:29"><name pos:start="97:25" pos:end="97:29">avctx</name></expr></argument>, <argument pos:start="97:32" pos:end="97:33"><expr pos:start="97:32" pos:end="97:33"><name pos:start="97:32" pos:end="97:33">pb</name></expr></argument>, <argument pos:start="97:36" pos:end="97:45"><expr pos:start="97:36" pos:end="97:45"><literal type="string" pos:start="97:36" pos:end="97:45">"aperture"</literal></expr></argument>, <argument pos:start="97:48" pos:end="97:51"><expr pos:start="97:48" pos:end="97:51"><literal type="string" pos:start="97:48" pos:end="97:51">"%i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:58"><expr pos:start="99:13" pos:end="99:57"><call pos:start="99:13" pos:end="99:57"><name pos:start="99:13" pos:end="99:22">read_uint8</name><argument_list pos:start="99:23" pos:end="99:57">(<argument pos:start="99:24" pos:end="99:28"><expr pos:start="99:24" pos:end="99:28"><name pos:start="99:24" pos:end="99:28">avctx</name></expr></argument>, <argument pos:start="99:31" pos:end="99:32"><expr pos:start="99:31" pos:end="99:32"><name pos:start="99:31" pos:end="99:32">pb</name></expr></argument>, <argument pos:start="99:35" pos:end="99:50"><expr pos:start="99:35" pos:end="99:50"><literal type="string" pos:start="99:35" pos:end="99:50">"stabilizerMode"</literal></expr></argument>, <argument pos:start="99:53" pos:end="99:56"><expr pos:start="99:53" pos:end="99:56"><literal type="string" pos:start="99:53" pos:end="99:56">"%i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:57"><expr pos:start="101:13" pos:end="101:56"><call pos:start="101:13" pos:end="101:56"><name pos:start="101:13" pos:end="101:22">read_uint8</name><argument_list pos:start="101:23" pos:end="101:56">(<argument pos:start="101:24" pos:end="101:28"><expr pos:start="101:24" pos:end="101:28"><name pos:start="101:24" pos:end="101:28">avctx</name></expr></argument>, <argument pos:start="101:31" pos:end="101:32"><expr pos:start="101:31" pos:end="101:32"><name pos:start="101:31" pos:end="101:32">pb</name></expr></argument>, <argument pos:start="101:35" pos:end="101:49"><expr pos:start="101:35" pos:end="101:49"><literal type="string" pos:start="101:35" pos:end="101:49">"autofocusMode"</literal></expr></argument>, <argument pos:start="101:52" pos:end="101:55"><expr pos:start="101:52" pos:end="101:55"><literal type="string" pos:start="101:52" pos:end="101:55">"%i"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:57"><expr pos:start="103:13" pos:end="103:56"><call pos:start="103:13" pos:end="103:56"><name pos:start="103:13" pos:end="103:23">read_uint32</name><argument_list pos:start="103:24" pos:end="103:56">(<argument pos:start="103:25" pos:end="103:29"><expr pos:start="103:25" pos:end="103:29"><name pos:start="103:25" pos:end="103:29">avctx</name></expr></argument>, <argument pos:start="103:32" pos:end="103:33"><expr pos:start="103:32" pos:end="103:33"><name pos:start="103:32" pos:end="103:33">pb</name></expr></argument>, <argument pos:start="103:36" pos:end="103:42"><expr pos:start="103:36" pos:end="103:42"><literal type="string" pos:start="103:36" pos:end="103:42">"flags"</literal></expr></argument>, <argument pos:start="103:45" pos:end="103:55"><expr pos:start="103:45" pos:end="103:55"><literal type="string" pos:start="103:45" pos:end="103:49">"0x%"</literal><name pos:start="103:50" pos:end="103:55">PRIx32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:56"><expr pos:start="105:13" pos:end="105:55"><call pos:start="105:13" pos:end="105:55"><name pos:start="105:13" pos:end="105:23">read_uint32</name><argument_list pos:start="105:24" pos:end="105:55">(<argument pos:start="105:25" pos:end="105:29"><expr pos:start="105:25" pos:end="105:29"><name pos:start="105:25" pos:end="105:29">avctx</name></expr></argument>, <argument pos:start="105:32" pos:end="105:33"><expr pos:start="105:32" pos:end="105:33"><name pos:start="105:32" pos:end="105:33">pb</name></expr></argument>, <argument pos:start="105:36" pos:end="105:43"><expr pos:start="105:36" pos:end="105:43"><literal type="string" pos:start="105:36" pos:end="105:43">"lensID"</literal></expr></argument>, <argument pos:start="105:46" pos:end="105:54"><expr pos:start="105:46" pos:end="105:54"><literal type="string" pos:start="105:46" pos:end="105:48">"%"</literal><name pos:start="105:49" pos:end="105:54">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:51"><expr pos:start="107:13" pos:end="107:50"><call pos:start="107:13" pos:end="107:50"><name pos:start="107:13" pos:end="107:23">read_string</name><argument_list pos:start="107:24" pos:end="107:50">(<argument pos:start="107:25" pos:end="107:29"><expr pos:start="107:25" pos:end="107:29"><name pos:start="107:25" pos:end="107:29">avctx</name></expr></argument>, <argument pos:start="107:32" pos:end="107:33"><expr pos:start="107:32" pos:end="107:33"><name pos:start="107:32" pos:end="107:33">pb</name></expr></argument>, <argument pos:start="107:36" pos:end="107:45"><expr pos:start="107:36" pos:end="107:45"><literal type="string" pos:start="107:36" pos:end="107:45">"lensName"</literal></expr></argument>, <argument pos:start="107:48" pos:end="107:49"><expr pos:start="107:48" pos:end="107:49"><literal type="number" pos:start="107:48" pos:end="107:49">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:23"><expr pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:16">size</name> <operator pos:start="109:18" pos:end="109:19">-=</operator> <literal type="number" pos:start="109:21" pos:end="109:22">48</literal></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="117:13"><if pos:start="111:13" pos:end="117:13">if <condition pos:start="111:16" pos:end="111:27">(<expr pos:start="111:17" pos:end="111:26"><name pos:start="111:17" pos:end="111:20">size</name> <operator pos:start="111:22" pos:end="111:23">&gt;=</operator> <literal type="number" pos:start="111:25" pos:end="111:26">32</literal></expr>)</condition> <block pos:start="111:29" pos:end="117:13">{<block_content pos:start="113:17" pos:end="115:27">

                <expr_stmt pos:start="113:17" pos:end="113:57"><expr pos:start="113:17" pos:end="113:56"><call pos:start="113:17" pos:end="113:56"><name pos:start="113:17" pos:end="113:27">read_string</name><argument_list pos:start="113:28" pos:end="113:56">(<argument pos:start="113:29" pos:end="113:33"><expr pos:start="113:29" pos:end="113:33"><name pos:start="113:29" pos:end="113:33">avctx</name></expr></argument>, <argument pos:start="113:36" pos:end="113:37"><expr pos:start="113:36" pos:end="113:37"><name pos:start="113:36" pos:end="113:37">pb</name></expr></argument>, <argument pos:start="113:40" pos:end="113:51"><expr pos:start="113:40" pos:end="113:51"><literal type="string" pos:start="113:40" pos:end="113:51">"lensSerial"</literal></expr></argument>, <argument pos:start="113:54" pos:end="113:55"><expr pos:start="113:54" pos:end="113:55"><literal type="number" pos:start="113:54" pos:end="113:55">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:27"><expr pos:start="115:17" pos:end="115:26"><name pos:start="115:17" pos:end="115:20">size</name> <operator pos:start="115:22" pos:end="115:23">-=</operator> <literal type="number" pos:start="115:25" pos:end="115:26">32</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="119:11" pos:end="129:9">else if <condition pos:start="119:19" pos:end="119:73">(<expr pos:start="119:20" pos:end="119:72"><name pos:start="119:20" pos:end="119:22">vst</name> <operator pos:start="119:24" pos:end="119:25">&amp;&amp;</operator> <name pos:start="119:27" pos:end="119:30">type</name> <operator pos:start="119:32" pos:end="119:33">==</operator> <call pos:start="119:35" pos:end="119:59"><name pos:start="119:35" pos:end="119:39">MKTAG</name><argument_list pos:start="119:40" pos:end="119:59">(<argument pos:start="119:41" pos:end="119:43"><expr pos:start="119:41" pos:end="119:43"><literal type="char" pos:start="119:41" pos:end="119:43">'V'</literal></expr></argument>, <argument pos:start="119:46" pos:end="119:48"><expr pos:start="119:46" pos:end="119:48"><literal type="char" pos:start="119:46" pos:end="119:48">'I'</literal></expr></argument>, <argument pos:start="119:51" pos:end="119:53"><expr pos:start="119:51" pos:end="119:53"><literal type="char" pos:start="119:51" pos:end="119:53">'D'</literal></expr></argument>, <argument pos:start="119:56" pos:end="119:58"><expr pos:start="119:56" pos:end="119:58"><literal type="char" pos:start="119:56" pos:end="119:58">'F'</literal></expr></argument>)</argument_list></call> <operator pos:start="119:61" pos:end="119:62">&amp;&amp;</operator> <name pos:start="119:64" pos:end="119:67">size</name> <operator pos:start="119:69" pos:end="119:70">&gt;=</operator> <literal type="number" pos:start="119:72" pos:end="119:72">4</literal></expr>)</condition> <block pos:start="119:75" pos:end="129:9">{<block_content pos:start="121:13" pos:end="127:22">

            <decl_stmt pos:start="121:13" pos:end="121:41"><decl pos:start="121:13" pos:end="121:40"><type pos:start="121:13" pos:end="121:20"><name pos:start="121:13" pos:end="121:20">uint64_t</name></type> <name pos:start="121:22" pos:end="121:24">pts</name> <init pos:start="121:26" pos:end="121:40">= <expr pos:start="121:28" pos:end="121:40"><call pos:start="121:28" pos:end="121:40"><name pos:start="121:28" pos:end="121:36">avio_rl32</name><argument_list pos:start="121:37" pos:end="121:40">(<argument pos:start="121:38" pos:end="121:39"><expr pos:start="121:38" pos:end="121:39"><name pos:start="121:38" pos:end="121:39">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="123:13" pos:end="125:83"><expr pos:start="123:13" pos:end="125:82"><call pos:start="123:13" pos:end="125:82"><name pos:start="123:13" pos:end="123:30">ff_add_index_entry</name><argument_list pos:start="123:31" pos:end="125:82">(<argument pos:start="123:32" pos:end="123:50"><expr pos:start="123:32" pos:end="123:50"><operator pos:start="123:32" pos:end="123:32">&amp;</operator><name pos:start="123:33" pos:end="123:50"><name pos:start="123:33" pos:end="123:35">vst</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:50">index_entries</name></name></expr></argument>, <argument pos:start="123:53" pos:end="123:74"><expr pos:start="123:53" pos:end="123:74"><operator pos:start="123:53" pos:end="123:53">&amp;</operator><name pos:start="123:54" pos:end="123:74"><name pos:start="123:54" pos:end="123:56">vst</name><operator pos:start="123:57" pos:end="123:58">-&gt;</operator><name pos:start="123:59" pos:end="123:74">nb_index_entries</name></name></expr></argument>, <argument pos:start="123:77" pos:end="123:110"><expr pos:start="123:77" pos:end="123:110"><operator pos:start="123:77" pos:end="123:77">&amp;</operator><name pos:start="123:78" pos:end="123:110"><name pos:start="123:78" pos:end="123:80">vst</name><operator pos:start="123:81" pos:end="123:82">-&gt;</operator><name pos:start="123:83" pos:end="123:110">index_entries_allocated_size</name></name></expr></argument>,

                               <argument pos:start="125:32" pos:end="125:49"><expr pos:start="125:32" pos:end="125:49"><call pos:start="125:32" pos:end="125:44"><name pos:start="125:32" pos:end="125:40">avio_tell</name><argument_list pos:start="125:41" pos:end="125:44">(<argument pos:start="125:42" pos:end="125:43"><expr pos:start="125:42" pos:end="125:43"><name pos:start="125:42" pos:end="125:43">pb</name></expr></argument>)</argument_list></call> <operator pos:start="125:46" pos:end="125:46">-</operator> <literal type="number" pos:start="125:48" pos:end="125:49">20</literal></expr></argument>, <argument pos:start="125:52" pos:end="125:54"><expr pos:start="125:52" pos:end="125:54"><name pos:start="125:52" pos:end="125:54">pts</name></expr></argument>, <argument pos:start="125:57" pos:end="125:60"><expr pos:start="125:57" pos:end="125:60"><name pos:start="125:57" pos:end="125:60">file</name></expr></argument>, <argument pos:start="125:63" pos:end="125:63"><expr pos:start="125:63" pos:end="125:63"><literal type="number" pos:start="125:63" pos:end="125:63">0</literal></expr></argument>, <argument pos:start="125:66" pos:end="125:81"><expr pos:start="125:66" pos:end="125:81"><name pos:start="125:66" pos:end="125:81">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:22"><expr pos:start="127:13" pos:end="127:21"><name pos:start="127:13" pos:end="127:16">size</name> <operator pos:start="127:18" pos:end="127:19">-=</operator> <literal type="number" pos:start="127:21" pos:end="127:21">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="129:11" pos:end="139:9">else if <condition pos:start="129:19" pos:end="129:73">(<expr pos:start="129:20" pos:end="129:72"><name pos:start="129:20" pos:end="129:22">ast</name> <operator pos:start="129:24" pos:end="129:25">&amp;&amp;</operator> <name pos:start="129:27" pos:end="129:30">type</name> <operator pos:start="129:32" pos:end="129:33">==</operator> <call pos:start="129:35" pos:end="129:59"><name pos:start="129:35" pos:end="129:39">MKTAG</name><argument_list pos:start="129:40" pos:end="129:59">(<argument pos:start="129:41" pos:end="129:43"><expr pos:start="129:41" pos:end="129:43"><literal type="char" pos:start="129:41" pos:end="129:43">'A'</literal></expr></argument>, <argument pos:start="129:46" pos:end="129:48"><expr pos:start="129:46" pos:end="129:48"><literal type="char" pos:start="129:46" pos:end="129:48">'U'</literal></expr></argument>, <argument pos:start="129:51" pos:end="129:53"><expr pos:start="129:51" pos:end="129:53"><literal type="char" pos:start="129:51" pos:end="129:53">'D'</literal></expr></argument>, <argument pos:start="129:56" pos:end="129:58"><expr pos:start="129:56" pos:end="129:58"><literal type="char" pos:start="129:56" pos:end="129:58">'F'</literal></expr></argument>)</argument_list></call> <operator pos:start="129:61" pos:end="129:62">&amp;&amp;</operator> <name pos:start="129:64" pos:end="129:67">size</name> <operator pos:start="129:69" pos:end="129:70">&gt;=</operator> <literal type="number" pos:start="129:72" pos:end="129:72">4</literal></expr>)</condition> <block pos:start="129:75" pos:end="139:9">{<block_content pos:start="131:13" pos:end="137:22">

            <decl_stmt pos:start="131:13" pos:end="131:41"><decl pos:start="131:13" pos:end="131:40"><type pos:start="131:13" pos:end="131:20"><name pos:start="131:13" pos:end="131:20">uint64_t</name></type> <name pos:start="131:22" pos:end="131:24">pts</name> <init pos:start="131:26" pos:end="131:40">= <expr pos:start="131:28" pos:end="131:40"><call pos:start="131:28" pos:end="131:40"><name pos:start="131:28" pos:end="131:36">avio_rl32</name><argument_list pos:start="131:37" pos:end="131:40">(<argument pos:start="131:38" pos:end="131:39"><expr pos:start="131:38" pos:end="131:39"><name pos:start="131:38" pos:end="131:39">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="133:13" pos:end="135:83"><expr pos:start="133:13" pos:end="135:82"><call pos:start="133:13" pos:end="135:82"><name pos:start="133:13" pos:end="133:30">ff_add_index_entry</name><argument_list pos:start="133:31" pos:end="135:82">(<argument pos:start="133:32" pos:end="133:50"><expr pos:start="133:32" pos:end="133:50"><operator pos:start="133:32" pos:end="133:32">&amp;</operator><name pos:start="133:33" pos:end="133:50"><name pos:start="133:33" pos:end="133:35">ast</name><operator pos:start="133:36" pos:end="133:37">-&gt;</operator><name pos:start="133:38" pos:end="133:50">index_entries</name></name></expr></argument>, <argument pos:start="133:53" pos:end="133:74"><expr pos:start="133:53" pos:end="133:74"><operator pos:start="133:53" pos:end="133:53">&amp;</operator><name pos:start="133:54" pos:end="133:74"><name pos:start="133:54" pos:end="133:56">ast</name><operator pos:start="133:57" pos:end="133:58">-&gt;</operator><name pos:start="133:59" pos:end="133:74">nb_index_entries</name></name></expr></argument>, <argument pos:start="133:77" pos:end="133:110"><expr pos:start="133:77" pos:end="133:110"><operator pos:start="133:77" pos:end="133:77">&amp;</operator><name pos:start="133:78" pos:end="133:110"><name pos:start="133:78" pos:end="133:80">ast</name><operator pos:start="133:81" pos:end="133:82">-&gt;</operator><name pos:start="133:83" pos:end="133:110">index_entries_allocated_size</name></name></expr></argument>,

                               <argument pos:start="135:32" pos:end="135:49"><expr pos:start="135:32" pos:end="135:49"><call pos:start="135:32" pos:end="135:44"><name pos:start="135:32" pos:end="135:40">avio_tell</name><argument_list pos:start="135:41" pos:end="135:44">(<argument pos:start="135:42" pos:end="135:43"><expr pos:start="135:42" pos:end="135:43"><name pos:start="135:42" pos:end="135:43">pb</name></expr></argument>)</argument_list></call> <operator pos:start="135:46" pos:end="135:46">-</operator> <literal type="number" pos:start="135:48" pos:end="135:49">20</literal></expr></argument>, <argument pos:start="135:52" pos:end="135:54"><expr pos:start="135:52" pos:end="135:54"><name pos:start="135:52" pos:end="135:54">pts</name></expr></argument>, <argument pos:start="135:57" pos:end="135:60"><expr pos:start="135:57" pos:end="135:60"><name pos:start="135:57" pos:end="135:60">file</name></expr></argument>, <argument pos:start="135:63" pos:end="135:63"><expr pos:start="135:63" pos:end="135:63"><literal type="number" pos:start="135:63" pos:end="135:63">0</literal></expr></argument>, <argument pos:start="135:66" pos:end="135:81"><expr pos:start="135:66" pos:end="135:81"><name pos:start="135:66" pos:end="135:81">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:22"><expr pos:start="137:13" pos:end="137:21"><name pos:start="137:13" pos:end="137:16">size</name> <operator pos:start="137:18" pos:end="137:19">-=</operator> <literal type="number" pos:start="137:21" pos:end="137:21">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="139:11" pos:end="157:9">else if <condition pos:start="139:19" pos:end="139:71">(<expr pos:start="139:20" pos:end="139:70"><name pos:start="139:20" pos:end="139:22">vst</name> <operator pos:start="139:24" pos:end="139:25">&amp;&amp;</operator> <name pos:start="139:27" pos:end="139:30">type</name> <operator pos:start="139:32" pos:end="139:33">==</operator> <call pos:start="139:35" pos:end="139:56"><name pos:start="139:35" pos:end="139:39">MKTAG</name><argument_list pos:start="139:40" pos:end="139:56">(<argument pos:start="139:41" pos:end="139:43"><expr pos:start="139:41" pos:end="139:43"><literal type="char" pos:start="139:41" pos:end="139:43">'W'</literal></expr></argument>,<argument pos:start="139:45" pos:end="139:47"><expr pos:start="139:45" pos:end="139:47"><literal type="char" pos:start="139:45" pos:end="139:47">'B'</literal></expr></argument>,<argument pos:start="139:49" pos:end="139:51"><expr pos:start="139:49" pos:end="139:51"><literal type="char" pos:start="139:49" pos:end="139:51">'A'</literal></expr></argument>,<argument pos:start="139:53" pos:end="139:55"><expr pos:start="139:53" pos:end="139:55"><literal type="char" pos:start="139:53" pos:end="139:55">'L'</literal></expr></argument>)</argument_list></call> <operator pos:start="139:58" pos:end="139:59">&amp;&amp;</operator> <name pos:start="139:61" pos:end="139:64">size</name> <operator pos:start="139:66" pos:end="139:67">&gt;=</operator> <literal type="number" pos:start="139:69" pos:end="139:70">28</literal></expr>)</condition> <block pos:start="139:73" pos:end="157:9">{<block_content pos:start="141:13" pos:end="155:23">

            <expr_stmt pos:start="141:13" pos:end="141:57"><expr pos:start="141:13" pos:end="141:56"><call pos:start="141:13" pos:end="141:56"><name pos:start="141:13" pos:end="141:23">read_uint32</name><argument_list pos:start="141:24" pos:end="141:56">(<argument pos:start="141:25" pos:end="141:29"><expr pos:start="141:25" pos:end="141:29"><name pos:start="141:25" pos:end="141:29">avctx</name></expr></argument>, <argument pos:start="141:32" pos:end="141:33"><expr pos:start="141:32" pos:end="141:33"><name pos:start="141:32" pos:end="141:33">pb</name></expr></argument>, <argument pos:start="141:36" pos:end="141:44"><expr pos:start="141:36" pos:end="141:44"><literal type="string" pos:start="141:36" pos:end="141:44">"wb_mode"</literal></expr></argument>, <argument pos:start="141:47" pos:end="141:55"><expr pos:start="141:47" pos:end="141:55"><literal type="string" pos:start="141:47" pos:end="141:49">"%"</literal><name pos:start="141:50" pos:end="141:55">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:56"><expr pos:start="143:13" pos:end="143:55"><call pos:start="143:13" pos:end="143:55"><name pos:start="143:13" pos:end="143:23">read_uint32</name><argument_list pos:start="143:24" pos:end="143:55">(<argument pos:start="143:25" pos:end="143:29"><expr pos:start="143:25" pos:end="143:29"><name pos:start="143:25" pos:end="143:29">avctx</name></expr></argument>, <argument pos:start="143:32" pos:end="143:33"><expr pos:start="143:32" pos:end="143:33"><name pos:start="143:32" pos:end="143:33">pb</name></expr></argument>, <argument pos:start="143:36" pos:end="143:43"><expr pos:start="143:36" pos:end="143:43"><literal type="string" pos:start="143:36" pos:end="143:43">"kelvin"</literal></expr></argument>, <argument pos:start="143:46" pos:end="143:54"><expr pos:start="143:46" pos:end="143:54"><literal type="string" pos:start="143:46" pos:end="143:48">"%"</literal><name pos:start="143:49" pos:end="143:54">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:58"><expr pos:start="145:13" pos:end="145:57"><call pos:start="145:13" pos:end="145:57"><name pos:start="145:13" pos:end="145:23">read_uint32</name><argument_list pos:start="145:24" pos:end="145:57">(<argument pos:start="145:25" pos:end="145:29"><expr pos:start="145:25" pos:end="145:29"><name pos:start="145:25" pos:end="145:29">avctx</name></expr></argument>, <argument pos:start="145:32" pos:end="145:33"><expr pos:start="145:32" pos:end="145:33"><name pos:start="145:32" pos:end="145:33">pb</name></expr></argument>, <argument pos:start="145:36" pos:end="145:45"><expr pos:start="145:36" pos:end="145:45"><literal type="string" pos:start="145:36" pos:end="145:45">"wbgain_r"</literal></expr></argument>, <argument pos:start="145:48" pos:end="145:56"><expr pos:start="145:48" pos:end="145:56"><literal type="string" pos:start="145:48" pos:end="145:50">"%"</literal><name pos:start="145:51" pos:end="145:56">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:58"><expr pos:start="147:13" pos:end="147:57"><call pos:start="147:13" pos:end="147:57"><name pos:start="147:13" pos:end="147:23">read_uint32</name><argument_list pos:start="147:24" pos:end="147:57">(<argument pos:start="147:25" pos:end="147:29"><expr pos:start="147:25" pos:end="147:29"><name pos:start="147:25" pos:end="147:29">avctx</name></expr></argument>, <argument pos:start="147:32" pos:end="147:33"><expr pos:start="147:32" pos:end="147:33"><name pos:start="147:32" pos:end="147:33">pb</name></expr></argument>, <argument pos:start="147:36" pos:end="147:45"><expr pos:start="147:36" pos:end="147:45"><literal type="string" pos:start="147:36" pos:end="147:45">"wbgain_g"</literal></expr></argument>, <argument pos:start="147:48" pos:end="147:56"><expr pos:start="147:48" pos:end="147:56"><literal type="string" pos:start="147:48" pos:end="147:50">"%"</literal><name pos:start="147:51" pos:end="147:56">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:58"><expr pos:start="149:13" pos:end="149:57"><call pos:start="149:13" pos:end="149:57"><name pos:start="149:13" pos:end="149:23">read_uint32</name><argument_list pos:start="149:24" pos:end="149:57">(<argument pos:start="149:25" pos:end="149:29"><expr pos:start="149:25" pos:end="149:29"><name pos:start="149:25" pos:end="149:29">avctx</name></expr></argument>, <argument pos:start="149:32" pos:end="149:33"><expr pos:start="149:32" pos:end="149:33"><name pos:start="149:32" pos:end="149:33">pb</name></expr></argument>, <argument pos:start="149:36" pos:end="149:45"><expr pos:start="149:36" pos:end="149:45"><literal type="string" pos:start="149:36" pos:end="149:45">"wbgain_b"</literal></expr></argument>, <argument pos:start="149:48" pos:end="149:56"><expr pos:start="149:48" pos:end="149:56"><literal type="string" pos:start="149:48" pos:end="149:50">"%"</literal><name pos:start="149:51" pos:end="149:56">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:56"><expr pos:start="151:13" pos:end="151:55"><call pos:start="151:13" pos:end="151:55"><name pos:start="151:13" pos:end="151:23">read_uint32</name><argument_list pos:start="151:24" pos:end="151:55">(<argument pos:start="151:25" pos:end="151:29"><expr pos:start="151:25" pos:end="151:29"><name pos:start="151:25" pos:end="151:29">avctx</name></expr></argument>, <argument pos:start="151:32" pos:end="151:33"><expr pos:start="151:32" pos:end="151:33"><name pos:start="151:32" pos:end="151:33">pb</name></expr></argument>, <argument pos:start="151:36" pos:end="151:43"><expr pos:start="151:36" pos:end="151:43"><literal type="string" pos:start="151:36" pos:end="151:43">"wbs_gm"</literal></expr></argument>, <argument pos:start="151:46" pos:end="151:54"><expr pos:start="151:46" pos:end="151:54"><literal type="string" pos:start="151:46" pos:end="151:48">"%"</literal><name pos:start="151:49" pos:end="151:54">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:56"><expr pos:start="153:13" pos:end="153:55"><call pos:start="153:13" pos:end="153:55"><name pos:start="153:13" pos:end="153:23">read_uint32</name><argument_list pos:start="153:24" pos:end="153:55">(<argument pos:start="153:25" pos:end="153:29"><expr pos:start="153:25" pos:end="153:29"><name pos:start="153:25" pos:end="153:29">avctx</name></expr></argument>, <argument pos:start="153:32" pos:end="153:33"><expr pos:start="153:32" pos:end="153:33"><name pos:start="153:32" pos:end="153:33">pb</name></expr></argument>, <argument pos:start="153:36" pos:end="153:43"><expr pos:start="153:36" pos:end="153:43"><literal type="string" pos:start="153:36" pos:end="153:43">"wbs_ba"</literal></expr></argument>, <argument pos:start="153:46" pos:end="153:54"><expr pos:start="153:46" pos:end="153:54"><literal type="string" pos:start="153:46" pos:end="153:48">"%"</literal><name pos:start="153:49" pos:end="153:54">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:23"><expr pos:start="155:13" pos:end="155:22"><name pos:start="155:13" pos:end="155:16">size</name> <operator pos:start="155:18" pos:end="155:19">-=</operator> <literal type="number" pos:start="155:21" pos:end="155:22">28</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="157:11" pos:end="189:9">else if <condition pos:start="157:19" pos:end="157:64">(<expr pos:start="157:20" pos:end="157:63"><name pos:start="157:20" pos:end="157:23">type</name> <operator pos:start="157:25" pos:end="157:26">==</operator> <call pos:start="157:28" pos:end="157:49"><name pos:start="157:28" pos:end="157:32">MKTAG</name><argument_list pos:start="157:33" pos:end="157:49">(<argument pos:start="157:34" pos:end="157:36"><expr pos:start="157:34" pos:end="157:36"><literal type="char" pos:start="157:34" pos:end="157:36">'R'</literal></expr></argument>,<argument pos:start="157:38" pos:end="157:40"><expr pos:start="157:38" pos:end="157:40"><literal type="char" pos:start="157:38" pos:end="157:40">'T'</literal></expr></argument>,<argument pos:start="157:42" pos:end="157:44"><expr pos:start="157:42" pos:end="157:44"><literal type="char" pos:start="157:42" pos:end="157:44">'C'</literal></expr></argument>,<argument pos:start="157:46" pos:end="157:48"><expr pos:start="157:46" pos:end="157:48"><literal type="char" pos:start="157:46" pos:end="157:48">'I'</literal></expr></argument>)</argument_list></call> <operator pos:start="157:51" pos:end="157:52">&amp;&amp;</operator> <name pos:start="157:54" pos:end="157:57">size</name> <operator pos:start="157:59" pos:end="157:60">&gt;=</operator> <literal type="number" pos:start="157:62" pos:end="157:63">20</literal></expr>)</condition> <block pos:start="157:66" pos:end="189:9">{<block_content pos:start="159:13" pos:end="187:23">

            <decl_stmt pos:start="159:13" pos:end="159:25"><decl pos:start="159:13" pos:end="159:24"><type pos:start="159:13" pos:end="159:16"><name pos:start="159:13" pos:end="159:16">char</name></type> <name pos:start="159:18" pos:end="159:24"><name pos:start="159:18" pos:end="159:20">str</name><index pos:start="159:21" pos:end="159:24">[<expr pos:start="159:22" pos:end="159:23"><literal type="number" pos:start="159:22" pos:end="159:23">32</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="161:13" pos:end="161:35"><decl pos:start="161:13" pos:end="161:34"><type pos:start="161:13" pos:end="161:21"><name pos:start="161:13" pos:end="161:21"><name pos:start="161:13" pos:end="161:18">struct</name> <name pos:start="161:20" pos:end="161:21">tm</name></name></type> <name pos:start="161:23" pos:end="161:26">time</name> <init pos:start="161:28" pos:end="161:34">= <expr pos:start="161:30" pos:end="161:34"><block pos:start="161:30" pos:end="161:34">{ <expr pos:start="161:32" pos:end="161:32"><literal type="number" pos:start="161:32" pos:end="161:32">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:43"><expr pos:start="163:13" pos:end="163:42"><name pos:start="163:13" pos:end="163:23"><name pos:start="163:13" pos:end="163:16">time</name><operator pos:start="163:17" pos:end="163:17">.</operator><name pos:start="163:18" pos:end="163:23">tm_sec</name></name>    <operator pos:start="163:28" pos:end="163:28">=</operator> <call pos:start="163:30" pos:end="163:42"><name pos:start="163:30" pos:end="163:38">avio_rl16</name><argument_list pos:start="163:39" pos:end="163:42">(<argument pos:start="163:40" pos:end="163:41"><expr pos:start="163:40" pos:end="163:41"><name pos:start="163:40" pos:end="163:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:43"><expr pos:start="165:13" pos:end="165:42"><name pos:start="165:13" pos:end="165:23"><name pos:start="165:13" pos:end="165:16">time</name><operator pos:start="165:17" pos:end="165:17">.</operator><name pos:start="165:18" pos:end="165:23">tm_min</name></name>    <operator pos:start="165:28" pos:end="165:28">=</operator> <call pos:start="165:30" pos:end="165:42"><name pos:start="165:30" pos:end="165:38">avio_rl16</name><argument_list pos:start="165:39" pos:end="165:42">(<argument pos:start="165:40" pos:end="165:41"><expr pos:start="165:40" pos:end="165:41"><name pos:start="165:40" pos:end="165:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:43"><expr pos:start="167:13" pos:end="167:42"><name pos:start="167:13" pos:end="167:24"><name pos:start="167:13" pos:end="167:16">time</name><operator pos:start="167:17" pos:end="167:17">.</operator><name pos:start="167:18" pos:end="167:24">tm_hour</name></name>   <operator pos:start="167:28" pos:end="167:28">=</operator> <call pos:start="167:30" pos:end="167:42"><name pos:start="167:30" pos:end="167:38">avio_rl16</name><argument_list pos:start="167:39" pos:end="167:42">(<argument pos:start="167:40" pos:end="167:41"><expr pos:start="167:40" pos:end="167:41"><name pos:start="167:40" pos:end="167:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:43"><expr pos:start="169:13" pos:end="169:42"><name pos:start="169:13" pos:end="169:24"><name pos:start="169:13" pos:end="169:16">time</name><operator pos:start="169:17" pos:end="169:17">.</operator><name pos:start="169:18" pos:end="169:24">tm_mday</name></name>   <operator pos:start="169:28" pos:end="169:28">=</operator> <call pos:start="169:30" pos:end="169:42"><name pos:start="169:30" pos:end="169:38">avio_rl16</name><argument_list pos:start="169:39" pos:end="169:42">(<argument pos:start="169:40" pos:end="169:41"><expr pos:start="169:40" pos:end="169:41"><name pos:start="169:40" pos:end="169:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:43"><expr pos:start="171:13" pos:end="171:42"><name pos:start="171:13" pos:end="171:23"><name pos:start="171:13" pos:end="171:16">time</name><operator pos:start="171:17" pos:end="171:17">.</operator><name pos:start="171:18" pos:end="171:23">tm_mon</name></name>    <operator pos:start="171:28" pos:end="171:28">=</operator> <call pos:start="171:30" pos:end="171:42"><name pos:start="171:30" pos:end="171:38">avio_rl16</name><argument_list pos:start="171:39" pos:end="171:42">(<argument pos:start="171:40" pos:end="171:41"><expr pos:start="171:40" pos:end="171:41"><name pos:start="171:40" pos:end="171:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:43"><expr pos:start="173:13" pos:end="173:42"><name pos:start="173:13" pos:end="173:24"><name pos:start="173:13" pos:end="173:16">time</name><operator pos:start="173:17" pos:end="173:17">.</operator><name pos:start="173:18" pos:end="173:24">tm_year</name></name>   <operator pos:start="173:28" pos:end="173:28">=</operator> <call pos:start="173:30" pos:end="173:42"><name pos:start="173:30" pos:end="173:38">avio_rl16</name><argument_list pos:start="173:39" pos:end="173:42">(<argument pos:start="173:40" pos:end="173:41"><expr pos:start="173:40" pos:end="173:41"><name pos:start="173:40" pos:end="173:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:43"><expr pos:start="175:13" pos:end="175:42"><name pos:start="175:13" pos:end="175:24"><name pos:start="175:13" pos:end="175:16">time</name><operator pos:start="175:17" pos:end="175:17">.</operator><name pos:start="175:18" pos:end="175:24">tm_wday</name></name>   <operator pos:start="175:28" pos:end="175:28">=</operator> <call pos:start="175:30" pos:end="175:42"><name pos:start="175:30" pos:end="175:38">avio_rl16</name><argument_list pos:start="175:39" pos:end="175:42">(<argument pos:start="175:40" pos:end="175:41"><expr pos:start="175:40" pos:end="175:41"><name pos:start="175:40" pos:end="175:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:43"><expr pos:start="177:13" pos:end="177:42"><name pos:start="177:13" pos:end="177:24"><name pos:start="177:13" pos:end="177:16">time</name><operator pos:start="177:17" pos:end="177:17">.</operator><name pos:start="177:18" pos:end="177:24">tm_yday</name></name>   <operator pos:start="177:28" pos:end="177:28">=</operator> <call pos:start="177:30" pos:end="177:42"><name pos:start="177:30" pos:end="177:38">avio_rl16</name><argument_list pos:start="177:39" pos:end="177:42">(<argument pos:start="177:40" pos:end="177:41"><expr pos:start="177:40" pos:end="177:41"><name pos:start="177:40" pos:end="177:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:43"><expr pos:start="179:13" pos:end="179:42"><name pos:start="179:13" pos:end="179:25"><name pos:start="179:13" pos:end="179:16">time</name><operator pos:start="179:17" pos:end="179:17">.</operator><name pos:start="179:18" pos:end="179:25">tm_isdst</name></name>  <operator pos:start="179:28" pos:end="179:28">=</operator> <call pos:start="179:30" pos:end="179:42"><name pos:start="179:30" pos:end="179:38">avio_rl16</name><argument_list pos:start="179:39" pos:end="179:42">(<argument pos:start="179:40" pos:end="179:41"><expr pos:start="179:40" pos:end="179:41"><name pos:start="179:40" pos:end="179:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:29"><expr pos:start="181:13" pos:end="181:28"><call pos:start="181:13" pos:end="181:28"><name pos:start="181:13" pos:end="181:21">avio_skip</name><argument_list pos:start="181:22" pos:end="181:28">(<argument pos:start="181:23" pos:end="181:24"><expr pos:start="181:23" pos:end="181:24"><name pos:start="181:23" pos:end="181:24">pb</name></expr></argument>, <argument pos:start="181:27" pos:end="181:27"><expr pos:start="181:27" pos:end="181:27"><literal type="number" pos:start="181:27" pos:end="181:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:67"><expr pos:start="183:13" pos:end="183:66"><call pos:start="183:13" pos:end="183:66"><name pos:start="183:13" pos:end="183:20">strftime</name><argument_list pos:start="183:21" pos:end="183:66">(<argument pos:start="183:22" pos:end="183:24"><expr pos:start="183:22" pos:end="183:24"><name pos:start="183:22" pos:end="183:24">str</name></expr></argument>, <argument pos:start="183:27" pos:end="183:37"><expr pos:start="183:27" pos:end="183:37"><sizeof pos:start="183:27" pos:end="183:37">sizeof<argument_list pos:start="183:33" pos:end="183:37">(<argument pos:start="183:34" pos:end="183:36"><expr pos:start="183:34" pos:end="183:36"><name pos:start="183:34" pos:end="183:36">str</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="183:40" pos:end="183:58"><expr pos:start="183:40" pos:end="183:58"><literal type="string" pos:start="183:40" pos:end="183:58">"%Y-%m-%d %H:%M:%S"</literal></expr></argument>, <argument pos:start="183:61" pos:end="183:65"><expr pos:start="183:61" pos:end="183:65"><operator pos:start="183:61" pos:end="183:61">&amp;</operator><name pos:start="183:62" pos:end="183:65">time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:58"><expr pos:start="185:13" pos:end="185:57"><call pos:start="185:13" pos:end="185:57"><name pos:start="185:13" pos:end="185:23">av_dict_set</name><argument_list pos:start="185:24" pos:end="185:57">(<argument pos:start="185:25" pos:end="185:40"><expr pos:start="185:25" pos:end="185:40"><operator pos:start="185:25" pos:end="185:25">&amp;</operator><name pos:start="185:26" pos:end="185:40"><name pos:start="185:26" pos:end="185:30">avctx</name><operator pos:start="185:31" pos:end="185:32">-&gt;</operator><name pos:start="185:33" pos:end="185:40">metadata</name></name></expr></argument>, <argument pos:start="185:43" pos:end="185:48"><expr pos:start="185:43" pos:end="185:48"><literal type="string" pos:start="185:43" pos:end="185:48">"time"</literal></expr></argument>, <argument pos:start="185:51" pos:end="185:53"><expr pos:start="185:51" pos:end="185:53"><name pos:start="185:51" pos:end="185:53">str</name></expr></argument>, <argument pos:start="185:56" pos:end="185:56"><expr pos:start="185:56" pos:end="185:56"><literal type="number" pos:start="185:56" pos:end="185:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:23"><expr pos:start="187:13" pos:end="187:22"><name pos:start="187:13" pos:end="187:16">size</name> <operator pos:start="187:18" pos:end="187:19">-=</operator> <literal type="number" pos:start="187:21" pos:end="187:22">20</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="189:11" pos:end="209:9">else if <condition pos:start="189:19" pos:end="189:64">(<expr pos:start="189:20" pos:end="189:63"><name pos:start="189:20" pos:end="189:23">type</name> <operator pos:start="189:25" pos:end="189:26">==</operator> <call pos:start="189:28" pos:end="189:49"><name pos:start="189:28" pos:end="189:32">MKTAG</name><argument_list pos:start="189:33" pos:end="189:49">(<argument pos:start="189:34" pos:end="189:36"><expr pos:start="189:34" pos:end="189:36"><literal type="char" pos:start="189:34" pos:end="189:36">'E'</literal></expr></argument>,<argument pos:start="189:38" pos:end="189:40"><expr pos:start="189:38" pos:end="189:40"><literal type="char" pos:start="189:38" pos:end="189:40">'X'</literal></expr></argument>,<argument pos:start="189:42" pos:end="189:44"><expr pos:start="189:42" pos:end="189:44"><literal type="char" pos:start="189:42" pos:end="189:44">'P'</literal></expr></argument>,<argument pos:start="189:46" pos:end="189:48"><expr pos:start="189:46" pos:end="189:48"><literal type="char" pos:start="189:46" pos:end="189:48">'O'</literal></expr></argument>)</argument_list></call> <operator pos:start="189:51" pos:end="189:52">&amp;&amp;</operator> <name pos:start="189:54" pos:end="189:57">size</name> <operator pos:start="189:59" pos:end="189:60">&gt;=</operator> <literal type="number" pos:start="189:62" pos:end="189:63">16</literal></expr>)</condition> <block pos:start="189:66" pos:end="209:9">{<block_content pos:start="191:13" pos:end="207:13">

            <expr_stmt pos:start="191:13" pos:end="191:91"><expr pos:start="191:13" pos:end="191:90"><call pos:start="191:13" pos:end="191:90"><name pos:start="191:13" pos:end="191:23">av_dict_set</name><argument_list pos:start="191:24" pos:end="191:90">(<argument pos:start="191:25" pos:end="191:40"><expr pos:start="191:25" pos:end="191:40"><operator pos:start="191:25" pos:end="191:25">&amp;</operator><name pos:start="191:26" pos:end="191:40"><name pos:start="191:26" pos:end="191:30">avctx</name><operator pos:start="191:31" pos:end="191:32">-&gt;</operator><name pos:start="191:33" pos:end="191:40">metadata</name></name></expr></argument>, <argument pos:start="191:43" pos:end="191:51"><expr pos:start="191:43" pos:end="191:51"><literal type="string" pos:start="191:43" pos:end="191:51">"isoMode"</literal></expr></argument>, <argument pos:start="191:54" pos:end="191:86"><expr pos:start="191:54" pos:end="191:86"><ternary pos:start="191:54" pos:end="191:86"><condition pos:start="191:54" pos:end="191:68"><expr pos:start="191:54" pos:end="191:66"><call pos:start="191:54" pos:end="191:66"><name pos:start="191:54" pos:end="191:62">avio_rl32</name><argument_list pos:start="191:63" pos:end="191:66">(<argument pos:start="191:64" pos:end="191:65"><expr pos:start="191:64" pos:end="191:65"><name pos:start="191:64" pos:end="191:65">pb</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="191:70" pos:end="191:75"> <expr pos:start="191:70" pos:end="191:75"><literal type="string" pos:start="191:70" pos:end="191:75">"auto"</literal></expr> </then><else pos:start="191:77" pos:end="191:86">: <expr pos:start="191:79" pos:end="191:86"><literal type="string" pos:start="191:79" pos:end="191:86">"manual"</literal></expr></else></ternary></expr></argument>, <argument pos:start="191:89" pos:end="191:89"><expr pos:start="191:89" pos:end="191:89"><literal type="number" pos:start="191:89" pos:end="191:89">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:58"><expr pos:start="193:13" pos:end="193:57"><call pos:start="193:13" pos:end="193:57"><name pos:start="193:13" pos:end="193:23">read_uint32</name><argument_list pos:start="193:24" pos:end="193:57">(<argument pos:start="193:25" pos:end="193:29"><expr pos:start="193:25" pos:end="193:29"><name pos:start="193:25" pos:end="193:29">avctx</name></expr></argument>, <argument pos:start="193:32" pos:end="193:33"><expr pos:start="193:32" pos:end="193:33"><name pos:start="193:32" pos:end="193:33">pb</name></expr></argument>, <argument pos:start="193:36" pos:end="193:45"><expr pos:start="193:36" pos:end="193:45"><literal type="string" pos:start="193:36" pos:end="193:45">"isoValue"</literal></expr></argument>, <argument pos:start="193:48" pos:end="193:56"><expr pos:start="193:48" pos:end="193:56"><literal type="string" pos:start="193:48" pos:end="193:50">"%"</literal><name pos:start="193:51" pos:end="193:56">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:59"><expr pos:start="195:13" pos:end="195:58"><call pos:start="195:13" pos:end="195:58"><name pos:start="195:13" pos:end="195:23">read_uint32</name><argument_list pos:start="195:24" pos:end="195:58">(<argument pos:start="195:25" pos:end="195:29"><expr pos:start="195:25" pos:end="195:29"><name pos:start="195:25" pos:end="195:29">avctx</name></expr></argument>, <argument pos:start="195:32" pos:end="195:33"><expr pos:start="195:32" pos:end="195:33"><name pos:start="195:32" pos:end="195:33">pb</name></expr></argument>, <argument pos:start="195:36" pos:end="195:46"><expr pos:start="195:36" pos:end="195:46"><literal type="string" pos:start="195:36" pos:end="195:46">"isoAnalog"</literal></expr></argument>, <argument pos:start="195:49" pos:end="195:57"><expr pos:start="195:49" pos:end="195:57"><literal type="string" pos:start="195:49" pos:end="195:51">"%"</literal><name pos:start="195:52" pos:end="195:57">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:61"><expr pos:start="197:13" pos:end="197:60"><call pos:start="197:13" pos:end="197:60"><name pos:start="197:13" pos:end="197:23">read_uint32</name><argument_list pos:start="197:24" pos:end="197:60">(<argument pos:start="197:25" pos:end="197:29"><expr pos:start="197:25" pos:end="197:29"><name pos:start="197:25" pos:end="197:29">avctx</name></expr></argument>, <argument pos:start="197:32" pos:end="197:33"><expr pos:start="197:32" pos:end="197:33"><name pos:start="197:32" pos:end="197:33">pb</name></expr></argument>, <argument pos:start="197:36" pos:end="197:48"><expr pos:start="197:36" pos:end="197:48"><literal type="string" pos:start="197:36" pos:end="197:48">"digitalGain"</literal></expr></argument>, <argument pos:start="197:51" pos:end="197:59"><expr pos:start="197:51" pos:end="197:59"><literal type="string" pos:start="197:51" pos:end="197:53">"%"</literal><name pos:start="197:54" pos:end="197:59">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:23"><expr pos:start="199:13" pos:end="199:22"><name pos:start="199:13" pos:end="199:16">size</name> <operator pos:start="199:18" pos:end="199:19">-=</operator> <literal type="number" pos:start="199:21" pos:end="199:22">16</literal></expr>;</expr_stmt>

            <if_stmt pos:start="201:13" pos:end="207:13"><if pos:start="201:13" pos:end="207:13">if <condition pos:start="201:16" pos:end="201:26">(<expr pos:start="201:17" pos:end="201:25"><name pos:start="201:17" pos:end="201:20">size</name> <operator pos:start="201:22" pos:end="201:23">&gt;=</operator> <literal type="number" pos:start="201:25" pos:end="201:25">8</literal></expr>)</condition> <block pos:start="201:28" pos:end="207:13">{<block_content pos:start="203:17" pos:end="205:26">

                <expr_stmt pos:start="203:17" pos:end="203:66"><expr pos:start="203:17" pos:end="203:65"><call pos:start="203:17" pos:end="203:65"><name pos:start="203:17" pos:end="203:27">read_uint64</name><argument_list pos:start="203:28" pos:end="203:65">(<argument pos:start="203:29" pos:end="203:33"><expr pos:start="203:29" pos:end="203:33"><name pos:start="203:29" pos:end="203:33">avctx</name></expr></argument>, <argument pos:start="203:36" pos:end="203:37"><expr pos:start="203:36" pos:end="203:37"><name pos:start="203:36" pos:end="203:37">pb</name></expr></argument>, <argument pos:start="203:40" pos:end="203:53"><expr pos:start="203:40" pos:end="203:53"><literal type="string" pos:start="203:40" pos:end="203:53">"shutterValue"</literal></expr></argument>, <argument pos:start="203:56" pos:end="203:64"><expr pos:start="203:56" pos:end="203:64"><literal type="string" pos:start="203:56" pos:end="203:58">"%"</literal><name pos:start="203:59" pos:end="203:64">PRIi64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:26"><expr pos:start="205:17" pos:end="205:25"><name pos:start="205:17" pos:end="205:20">size</name> <operator pos:start="205:22" pos:end="205:23">-=</operator> <literal type="number" pos:start="205:25" pos:end="205:25">8</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="209:11" pos:end="225:9">else if <condition pos:start="209:19" pos:end="209:64">(<expr pos:start="209:20" pos:end="209:63"><name pos:start="209:20" pos:end="209:23">type</name> <operator pos:start="209:25" pos:end="209:26">==</operator> <call pos:start="209:28" pos:end="209:49"><name pos:start="209:28" pos:end="209:32">MKTAG</name><argument_list pos:start="209:33" pos:end="209:49">(<argument pos:start="209:34" pos:end="209:36"><expr pos:start="209:34" pos:end="209:36"><literal type="char" pos:start="209:34" pos:end="209:36">'S'</literal></expr></argument>,<argument pos:start="209:38" pos:end="209:40"><expr pos:start="209:38" pos:end="209:40"><literal type="char" pos:start="209:38" pos:end="209:40">'T'</literal></expr></argument>,<argument pos:start="209:42" pos:end="209:44"><expr pos:start="209:42" pos:end="209:44"><literal type="char" pos:start="209:42" pos:end="209:44">'Y'</literal></expr></argument>,<argument pos:start="209:46" pos:end="209:48"><expr pos:start="209:46" pos:end="209:48"><literal type="char" pos:start="209:46" pos:end="209:48">'L'</literal></expr></argument>)</argument_list></call> <operator pos:start="209:51" pos:end="209:52">&amp;&amp;</operator> <name pos:start="209:54" pos:end="209:57">size</name> <operator pos:start="209:59" pos:end="209:60">&gt;=</operator> <literal type="number" pos:start="209:62" pos:end="209:63">36</literal></expr>)</condition> <block pos:start="209:66" pos:end="225:9">{<block_content pos:start="211:13" pos:end="223:23">

            <expr_stmt pos:start="211:13" pos:end="211:60"><expr pos:start="211:13" pos:end="211:59"><call pos:start="211:13" pos:end="211:59"><name pos:start="211:13" pos:end="211:23">read_uint32</name><argument_list pos:start="211:24" pos:end="211:59">(<argument pos:start="211:25" pos:end="211:29"><expr pos:start="211:25" pos:end="211:29"><name pos:start="211:25" pos:end="211:29">avctx</name></expr></argument>, <argument pos:start="211:32" pos:end="211:33"><expr pos:start="211:32" pos:end="211:33"><name pos:start="211:32" pos:end="211:33">pb</name></expr></argument>, <argument pos:start="211:36" pos:end="211:47"><expr pos:start="211:36" pos:end="211:47"><literal type="string" pos:start="211:36" pos:end="211:47">"picStyleId"</literal></expr></argument>, <argument pos:start="211:50" pos:end="211:58"><expr pos:start="211:50" pos:end="211:58"><literal type="string" pos:start="211:50" pos:end="211:52">"%"</literal><name pos:start="211:53" pos:end="211:58">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:58"><expr pos:start="213:13" pos:end="213:57"><call pos:start="213:13" pos:end="213:57"><name pos:start="213:13" pos:end="213:23">read_uint32</name><argument_list pos:start="213:24" pos:end="213:57">(<argument pos:start="213:25" pos:end="213:29"><expr pos:start="213:25" pos:end="213:29"><name pos:start="213:25" pos:end="213:29">avctx</name></expr></argument>, <argument pos:start="213:32" pos:end="213:33"><expr pos:start="213:32" pos:end="213:33"><name pos:start="213:32" pos:end="213:33">pb</name></expr></argument>, <argument pos:start="213:36" pos:end="213:45"><expr pos:start="213:36" pos:end="213:45"><literal type="string" pos:start="213:36" pos:end="213:45">"contrast"</literal></expr></argument>, <argument pos:start="213:48" pos:end="213:56"><expr pos:start="213:48" pos:end="213:56"><literal type="string" pos:start="213:48" pos:end="213:50">"%"</literal><name pos:start="213:51" pos:end="213:56">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:59"><expr pos:start="215:13" pos:end="215:58"><call pos:start="215:13" pos:end="215:58"><name pos:start="215:13" pos:end="215:23">read_uint32</name><argument_list pos:start="215:24" pos:end="215:58">(<argument pos:start="215:25" pos:end="215:29"><expr pos:start="215:25" pos:end="215:29"><name pos:start="215:25" pos:end="215:29">avctx</name></expr></argument>, <argument pos:start="215:32" pos:end="215:33"><expr pos:start="215:32" pos:end="215:33"><name pos:start="215:32" pos:end="215:33">pb</name></expr></argument>, <argument pos:start="215:36" pos:end="215:46"><expr pos:start="215:36" pos:end="215:46"><literal type="string" pos:start="215:36" pos:end="215:46">"sharpness"</literal></expr></argument>, <argument pos:start="215:49" pos:end="215:57"><expr pos:start="215:49" pos:end="215:57"><literal type="string" pos:start="215:49" pos:end="215:51">"%"</literal><name pos:start="215:52" pos:end="215:57">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:60"><expr pos:start="217:13" pos:end="217:59"><call pos:start="217:13" pos:end="217:59"><name pos:start="217:13" pos:end="217:23">read_uint32</name><argument_list pos:start="217:24" pos:end="217:59">(<argument pos:start="217:25" pos:end="217:29"><expr pos:start="217:25" pos:end="217:29"><name pos:start="217:25" pos:end="217:29">avctx</name></expr></argument>, <argument pos:start="217:32" pos:end="217:33"><expr pos:start="217:32" pos:end="217:33"><name pos:start="217:32" pos:end="217:33">pb</name></expr></argument>, <argument pos:start="217:36" pos:end="217:47"><expr pos:start="217:36" pos:end="217:47"><literal type="string" pos:start="217:36" pos:end="217:47">"saturation"</literal></expr></argument>, <argument pos:start="217:50" pos:end="217:58"><expr pos:start="217:50" pos:end="217:58"><literal type="string" pos:start="217:50" pos:end="217:52">"%"</literal><name pos:start="217:53" pos:end="217:58">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:59"><expr pos:start="219:13" pos:end="219:58"><call pos:start="219:13" pos:end="219:58"><name pos:start="219:13" pos:end="219:23">read_uint32</name><argument_list pos:start="219:24" pos:end="219:58">(<argument pos:start="219:25" pos:end="219:29"><expr pos:start="219:25" pos:end="219:29"><name pos:start="219:25" pos:end="219:29">avctx</name></expr></argument>, <argument pos:start="219:32" pos:end="219:33"><expr pos:start="219:32" pos:end="219:33"><name pos:start="219:32" pos:end="219:33">pb</name></expr></argument>, <argument pos:start="219:36" pos:end="219:46"><expr pos:start="219:36" pos:end="219:46"><literal type="string" pos:start="219:36" pos:end="219:46">"colortone"</literal></expr></argument>, <argument pos:start="219:49" pos:end="219:57"><expr pos:start="219:49" pos:end="219:57"><literal type="string" pos:start="219:49" pos:end="219:51">"%"</literal><name pos:start="219:52" pos:end="219:57">PRIi32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:55"><expr pos:start="221:13" pos:end="221:54"><call pos:start="221:13" pos:end="221:54"><name pos:start="221:13" pos:end="221:23">read_string</name><argument_list pos:start="221:24" pos:end="221:54">(<argument pos:start="221:25" pos:end="221:29"><expr pos:start="221:25" pos:end="221:29"><name pos:start="221:25" pos:end="221:29">avctx</name></expr></argument>, <argument pos:start="221:32" pos:end="221:33"><expr pos:start="221:32" pos:end="221:33"><name pos:start="221:32" pos:end="221:33">pb</name></expr></argument>, <argument pos:start="221:36" pos:end="221:49"><expr pos:start="221:36" pos:end="221:49"><literal type="string" pos:start="221:36" pos:end="221:49">"picStyleName"</literal></expr></argument>, <argument pos:start="221:52" pos:end="221:53"><expr pos:start="221:52" pos:end="221:53"><literal type="number" pos:start="221:52" pos:end="221:53">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:23"><expr pos:start="223:13" pos:end="223:22"><name pos:start="223:13" pos:end="223:16">size</name> <operator pos:start="223:18" pos:end="223:19">-=</operator> <literal type="number" pos:start="223:21" pos:end="223:22">36</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="225:11" pos:end="227:9">else if <condition pos:start="225:19" pos:end="225:50">(<expr pos:start="225:20" pos:end="225:49"><name pos:start="225:20" pos:end="225:23">type</name> <operator pos:start="225:25" pos:end="225:26">==</operator> <call pos:start="225:28" pos:end="225:49"><name pos:start="225:28" pos:end="225:32">MKTAG</name><argument_list pos:start="225:33" pos:end="225:49">(<argument pos:start="225:34" pos:end="225:36"><expr pos:start="225:34" pos:end="225:36"><literal type="char" pos:start="225:34" pos:end="225:36">'M'</literal></expr></argument>,<argument pos:start="225:38" pos:end="225:40"><expr pos:start="225:38" pos:end="225:40"><literal type="char" pos:start="225:38" pos:end="225:40">'A'</literal></expr></argument>,<argument pos:start="225:42" pos:end="225:44"><expr pos:start="225:42" pos:end="225:44"><literal type="char" pos:start="225:42" pos:end="225:44">'R'</literal></expr></argument>,<argument pos:start="225:46" pos:end="225:48"><expr pos:start="225:46" pos:end="225:48"><literal type="char" pos:start="225:46" pos:end="225:48">'K'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="225:52" pos:end="227:9">{<block_content>

        </block_content>}</block></if> <if type="elseif" pos:start="227:11" pos:end="229:9">else if <condition pos:start="227:19" pos:end="227:50">(<expr pos:start="227:20" pos:end="227:49"><name pos:start="227:20" pos:end="227:23">type</name> <operator pos:start="227:25" pos:end="227:26">==</operator> <call pos:start="227:28" pos:end="227:49"><name pos:start="227:28" pos:end="227:32">MKTAG</name><argument_list pos:start="227:33" pos:end="227:49">(<argument pos:start="227:34" pos:end="227:36"><expr pos:start="227:34" pos:end="227:36"><literal type="char" pos:start="227:34" pos:end="227:36">'N'</literal></expr></argument>,<argument pos:start="227:38" pos:end="227:40"><expr pos:start="227:38" pos:end="227:40"><literal type="char" pos:start="227:38" pos:end="227:40">'U'</literal></expr></argument>,<argument pos:start="227:42" pos:end="227:44"><expr pos:start="227:42" pos:end="227:44"><literal type="char" pos:start="227:42" pos:end="227:44">'L'</literal></expr></argument>,<argument pos:start="227:46" pos:end="227:48"><expr pos:start="227:46" pos:end="227:48"><literal type="char" pos:start="227:46" pos:end="227:48">'L'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="227:52" pos:end="229:9">{<block_content>

        </block_content>}</block></if> <if type="elseif" pos:start="229:11" pos:end="231:9">else if <condition pos:start="229:19" pos:end="229:50">(<expr pos:start="229:20" pos:end="229:49"><name pos:start="229:20" pos:end="229:23">type</name> <operator pos:start="229:25" pos:end="229:26">==</operator> <call pos:start="229:28" pos:end="229:49"><name pos:start="229:28" pos:end="229:32">MKTAG</name><argument_list pos:start="229:33" pos:end="229:49">(<argument pos:start="229:34" pos:end="229:36"><expr pos:start="229:34" pos:end="229:36"><literal type="char" pos:start="229:34" pos:end="229:36">'M'</literal></expr></argument>,<argument pos:start="229:38" pos:end="229:40"><expr pos:start="229:38" pos:end="229:40"><literal type="char" pos:start="229:38" pos:end="229:40">'L'</literal></expr></argument>,<argument pos:start="229:42" pos:end="229:44"><expr pos:start="229:42" pos:end="229:44"><literal type="char" pos:start="229:42" pos:end="229:44">'V'</literal></expr></argument>,<argument pos:start="229:46" pos:end="229:48"><expr pos:start="229:46" pos:end="229:48"><literal type="char" pos:start="229:46" pos:end="229:48">'I'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="229:52" pos:end="231:9">{<block_content> <comment type="block" pos:start="229:54" pos:end="229:105">/* occurs when MLV and Mnn files are concatenated */</comment>

        </block_content>}</block></if> <else pos:start="231:11" pos:end="235:9">else <block pos:start="231:16" pos:end="235:9">{<block_content pos:start="233:13" pos:end="233:145">

            <expr_stmt pos:start="233:13" pos:end="233:145"><expr pos:start="233:13" pos:end="233:144"><call pos:start="233:13" pos:end="233:144"><name pos:start="233:13" pos:end="233:18">av_log</name><argument_list pos:start="233:19" pos:end="233:144">(<argument pos:start="233:20" pos:end="233:24"><expr pos:start="233:20" pos:end="233:24"><name pos:start="233:20" pos:end="233:24">avctx</name></expr></argument>, <argument pos:start="233:27" pos:end="233:37"><expr pos:start="233:27" pos:end="233:37"><name pos:start="233:27" pos:end="233:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="233:40" pos:end="233:76"><expr pos:start="233:40" pos:end="233:76"><literal type="string" pos:start="233:40" pos:end="233:76">"unsupported tag %c%c%c%c, size %u\n"</literal></expr></argument>, <argument pos:start="233:79" pos:end="233:87"><expr pos:start="233:79" pos:end="233:87"><name pos:start="233:79" pos:end="233:82">type</name><operator pos:start="233:83" pos:end="233:83">&amp;</operator><literal type="number" pos:start="233:84" pos:end="233:87">0xFF</literal></expr></argument>, <argument pos:start="233:90" pos:end="233:103"><expr pos:start="233:90" pos:end="233:103"><operator pos:start="233:90" pos:end="233:90">(</operator><name pos:start="233:91" pos:end="233:94">type</name><operator pos:start="233:95" pos:end="233:96">&gt;&gt;</operator><literal type="number" pos:start="233:97" pos:end="233:97">8</literal><operator pos:start="233:98" pos:end="233:98">)</operator><operator pos:start="233:99" pos:end="233:99">&amp;</operator><literal type="number" pos:start="233:100" pos:end="233:103">0xFF</literal></expr></argument>, <argument pos:start="233:106" pos:end="233:120"><expr pos:start="233:106" pos:end="233:120"><operator pos:start="233:106" pos:end="233:106">(</operator><name pos:start="233:107" pos:end="233:110">type</name><operator pos:start="233:111" pos:end="233:112">&gt;&gt;</operator><literal type="number" pos:start="233:113" pos:end="233:114">16</literal><operator pos:start="233:115" pos:end="233:115">)</operator><operator pos:start="233:116" pos:end="233:116">&amp;</operator><literal type="number" pos:start="233:117" pos:end="233:120">0xFF</literal></expr></argument>, <argument pos:start="233:123" pos:end="233:137"><expr pos:start="233:123" pos:end="233:137"><operator pos:start="233:123" pos:end="233:123">(</operator><name pos:start="233:124" pos:end="233:127">type</name><operator pos:start="233:128" pos:end="233:129">&gt;&gt;</operator><literal type="number" pos:start="233:130" pos:end="233:131">24</literal><operator pos:start="233:132" pos:end="233:132">)</operator><operator pos:start="233:133" pos:end="233:133">&amp;</operator><literal type="number" pos:start="233:134" pos:end="233:137">0xFF</literal></expr></argument>, <argument pos:start="233:140" pos:end="233:143"><expr pos:start="233:140" pos:end="233:143"><name pos:start="233:140" pos:end="233:143">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:28"><expr pos:start="237:9" pos:end="237:27"><call pos:start="237:9" pos:end="237:27"><name pos:start="237:9" pos:end="237:17">avio_skip</name><argument_list pos:start="237:18" pos:end="237:27">(<argument pos:start="237:19" pos:end="237:20"><expr pos:start="237:19" pos:end="237:20"><name pos:start="237:19" pos:end="237:20">pb</name></expr></argument>, <argument pos:start="237:23" pos:end="237:26"><expr pos:start="237:23" pos:end="237:26"><name pos:start="237:23" pos:end="237:26">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="241:5" pos:end="241:13">return <expr pos:start="241:12" pos:end="241:12"><literal type="number" pos:start="241:12" pos:end="241:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
