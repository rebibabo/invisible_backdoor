<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12552.c" pos:tabs="8"><function pos:start="1:1" pos:end="305:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">render_fragments</name><parameter_list pos:start="1:29" pos:end="9:65">(<parameter pos:start="1:30" pos:end="1:48"><decl pos:start="1:30" pos:end="1:48"><type pos:start="1:30" pos:end="1:48"><name pos:start="1:30" pos:end="1:45">Vp3DecodeContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:47">first_fragment</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:38"><decl pos:start="5:30" pos:end="5:38"><type pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:32">int</name></type> <name pos:start="5:34" pos:end="5:38">width</name></decl></parameter>,

                             <parameter pos:start="7:30" pos:end="7:39"><decl pos:start="7:30" pos:end="7:39"><type pos:start="7:30" pos:end="7:39"><name pos:start="7:30" pos:end="7:32">int</name></type> <name pos:start="7:34" pos:end="7:39">height</name></decl></parameter>,

                             <parameter pos:start="9:30" pos:end="9:38"><decl pos:start="9:30" pos:end="9:38"><type pos:start="9:30" pos:end="9:38"><name pos:start="9:30" pos:end="9:32">int</name></type> <name pos:start="9:34" pos:end="9:38">plane</name></decl></parameter> <comment type="block" pos:start="9:40" pos:end="9:64">/* 0 = Y, 1 = U, 2 = V */</comment>)</parameter_list> 

<block pos:start="11:1" pos:end="305:1">{<block_content pos:start="13:5" pos:end="301:13">

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">x</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">m</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name> <init pos:start="17:11" pos:end="17:26">= <expr pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:26">first_fragment</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:24"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">int16_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:24">dequantizer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:30"><decl pos:start="23:5" pos:end="23:29"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">DCTELEM</name></type> <name pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:25">dequant_block</name><index pos:start="23:26" pos:end="23:29">[<expr pos:start="23:27" pos:end="23:28"><literal type="number" pos:start="23:27" pos:end="23:28">64</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:32"><decl pos:start="25:5" pos:end="25:31"><type pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:12">unsigned</name> <name pos:start="25:14" pos:end="25:17">char</name> <modifier pos:start="25:19" pos:end="25:19">*</modifier></type><name pos:start="25:20" pos:end="25:31">output_plane</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:30"><decl pos:start="27:5" pos:end="27:29"><type pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:12">unsigned</name> <name pos:start="27:14" pos:end="27:17">char</name> <modifier pos:start="27:19" pos:end="27:19">*</modifier></type><name pos:start="27:20" pos:end="27:29">last_plane</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:32"><decl pos:start="29:5" pos:end="29:31"><type pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:12">unsigned</name> <name pos:start="29:14" pos:end="29:17">char</name> <modifier pos:start="29:19" pos:end="29:19">*</modifier></type><name pos:start="29:20" pos:end="29:31">golden_plane</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:15"><decl pos:start="31:5" pos:end="31:14"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:14">stride</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:27"><decl pos:start="33:5" pos:end="33:16"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:16">motion_x</name></decl>, <decl pos:start="33:19" pos:end="33:26"><type ref="prev" pos:start="33:5" pos:end="33:7"/><name pos:start="33:19" pos:end="33:26">motion_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:39"><decl pos:start="35:5" pos:end="35:22"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:22">motion_x_limit</name></decl>, <decl pos:start="35:25" pos:end="35:38"><type ref="prev" pos:start="35:5" pos:end="35:7"/><name pos:start="35:25" pos:end="35:38">motion_y_limit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:29"><decl pos:start="37:5" pos:end="37:28"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:28">motion_halfpel_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:31"><decl pos:start="39:5" pos:end="39:30"><type pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:12">unsigned</name> <name pos:start="39:14" pos:end="39:16">int</name></type> <name pos:start="39:18" pos:end="39:30">motion_source</name></decl>;</decl_stmt>



    <expr_stmt pos:start="43:5" pos:end="45:73"><expr pos:start="43:5" pos:end="45:72"><call pos:start="43:5" pos:end="45:72"><name pos:start="43:5" pos:end="43:13">debug_vp3</name><argument_list pos:start="43:14" pos:end="45:72">(<argument pos:start="43:15" pos:end="43:57"><expr pos:start="43:15" pos:end="43:57"><literal type="string" pos:start="43:15" pos:end="43:57">"  vp3: rendering final fragments for %s\n"</literal></expr></argument>,

        <argument pos:start="45:9" pos:end="45:71"><expr pos:start="45:9" pos:end="45:71"><ternary pos:start="45:9" pos:end="45:71"><condition pos:start="45:9" pos:end="45:22"><expr pos:start="45:9" pos:end="45:20"><operator pos:start="45:9" pos:end="45:9">(</operator><name pos:start="45:10" pos:end="45:14">plane</name> <operator pos:start="45:16" pos:end="45:17">==</operator> <literal type="number" pos:start="45:19" pos:end="45:19">0</literal><operator pos:start="45:20" pos:end="45:20">)</operator></expr> ?</condition><then pos:start="45:24" pos:end="45:32"> <expr pos:start="45:24" pos:end="45:32"><literal type="string" pos:start="45:24" pos:end="45:32">"Y plane"</literal></expr> </then><else pos:start="45:34" pos:end="45:71">: <expr pos:start="45:36" pos:end="45:71"><ternary pos:start="45:36" pos:end="45:71"><condition pos:start="45:36" pos:end="45:49"><expr pos:start="45:36" pos:end="45:47"><operator pos:start="45:36" pos:end="45:36">(</operator><name pos:start="45:37" pos:end="45:41">plane</name> <operator pos:start="45:43" pos:end="45:44">==</operator> <literal type="number" pos:start="45:46" pos:end="45:46">1</literal><operator pos:start="45:47" pos:end="45:47">)</operator></expr> ?</condition><then pos:start="45:51" pos:end="45:59"> <expr pos:start="45:51" pos:end="45:59"><literal type="string" pos:start="45:51" pos:end="45:59">"U plane"</literal></expr> </then><else pos:start="45:61" pos:end="45:71">: <expr pos:start="45:63" pos:end="45:71"><literal type="string" pos:start="45:63" pos:end="45:71">"V plane"</literal></expr></else></ternary></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:42">/* set up plane-specific parameters */</comment>

    <if_stmt pos:start="51:5" pos:end="87:5"><if pos:start="51:5" pos:end="63:5">if <condition pos:start="51:8" pos:end="51:19">(<expr pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:13">plane</name> <operator pos:start="51:15" pos:end="51:16">==</operator> <literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>)</condition> <block pos:start="51:21" pos:end="63:5">{<block_content pos:start="53:9" pos:end="61:47">

        <expr_stmt pos:start="53:9" pos:end="53:41"><expr pos:start="53:9" pos:end="53:40"><name pos:start="53:9" pos:end="53:19">dequantizer</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <name pos:start="53:23" pos:end="53:40"><name pos:start="53:23" pos:end="53:23">s</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:40">intra_y_dequant</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:48"><expr pos:start="55:9" pos:end="55:47"><name pos:start="55:9" pos:end="55:20">output_plane</name> <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:47"><name pos:start="55:24" pos:end="55:24">s</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:39">current_frame</name><operator pos:start="55:40" pos:end="55:40">.</operator><name pos:start="55:41" pos:end="55:44">data</name><index pos:start="55:45" pos:end="55:47">[<expr pos:start="55:46" pos:end="55:46"><literal type="number" pos:start="55:46" pos:end="55:46">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:43"><expr pos:start="57:9" pos:end="57:42"><name pos:start="57:9" pos:end="57:18">last_plane</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:42"><name pos:start="57:22" pos:end="57:22">s</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:34">last_frame</name><operator pos:start="57:35" pos:end="57:35">.</operator><name pos:start="57:36" pos:end="57:39">data</name><index pos:start="57:40" pos:end="57:42">[<expr pos:start="57:41" pos:end="57:41"><literal type="number" pos:start="57:41" pos:end="57:41">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:47"><expr pos:start="59:9" pos:end="59:46"><name pos:start="59:9" pos:end="59:20">golden_plane</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:46"><name pos:start="59:24" pos:end="59:24">s</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:38">golden_frame</name><operator pos:start="59:39" pos:end="59:39">.</operator><name pos:start="59:40" pos:end="59:43">data</name><index pos:start="59:44" pos:end="59:46">[<expr pos:start="59:45" pos:end="59:45"><literal type="number" pos:start="59:45" pos:end="59:45">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:47"><expr pos:start="61:9" pos:end="61:46"><name pos:start="61:9" pos:end="61:14">stride</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <operator pos:start="61:18" pos:end="61:18">-</operator><name pos:start="61:19" pos:end="61:46"><name pos:start="61:19" pos:end="61:19">s</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:34">current_frame</name><operator pos:start="61:35" pos:end="61:35">.</operator><name pos:start="61:36" pos:end="61:43">linesize</name><index pos:start="61:44" pos:end="61:46">[<expr pos:start="61:45" pos:end="61:45"><literal type="number" pos:start="61:45" pos:end="61:45">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="63:7" pos:end="75:5">else if <condition pos:start="63:15" pos:end="63:26">(<expr pos:start="63:16" pos:end="63:25"><name pos:start="63:16" pos:end="63:20">plane</name> <operator pos:start="63:22" pos:end="63:23">==</operator> <literal type="number" pos:start="63:25" pos:end="63:25">1</literal></expr>)</condition> <block pos:start="63:28" pos:end="75:5">{<block_content pos:start="65:9" pos:end="73:47">

        <expr_stmt pos:start="65:9" pos:end="65:41"><expr pos:start="65:9" pos:end="65:40"><name pos:start="65:9" pos:end="65:19">dequantizer</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:40"><name pos:start="65:23" pos:end="65:23">s</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:40">intra_c_dequant</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:48"><expr pos:start="67:9" pos:end="67:47"><name pos:start="67:9" pos:end="67:20">output_plane</name> <operator pos:start="67:22" pos:end="67:22">=</operator> <name pos:start="67:24" pos:end="67:47"><name pos:start="67:24" pos:end="67:24">s</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:39">current_frame</name><operator pos:start="67:40" pos:end="67:40">.</operator><name pos:start="67:41" pos:end="67:44">data</name><index pos:start="67:45" pos:end="67:47">[<expr pos:start="67:46" pos:end="67:46"><literal type="number" pos:start="67:46" pos:end="67:46">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:43"><expr pos:start="69:9" pos:end="69:42"><name pos:start="69:9" pos:end="69:18">last_plane</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:42"><name pos:start="69:22" pos:end="69:22">s</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:34">last_frame</name><operator pos:start="69:35" pos:end="69:35">.</operator><name pos:start="69:36" pos:end="69:39">data</name><index pos:start="69:40" pos:end="69:42">[<expr pos:start="69:41" pos:end="69:41"><literal type="number" pos:start="69:41" pos:end="69:41">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:47"><expr pos:start="71:9" pos:end="71:46"><name pos:start="71:9" pos:end="71:20">golden_plane</name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:46"><name pos:start="71:24" pos:end="71:24">s</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:38">golden_frame</name><operator pos:start="71:39" pos:end="71:39">.</operator><name pos:start="71:40" pos:end="71:43">data</name><index pos:start="71:44" pos:end="71:46">[<expr pos:start="71:45" pos:end="71:45"><literal type="number" pos:start="71:45" pos:end="71:45">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:47"><expr pos:start="73:9" pos:end="73:46"><name pos:start="73:9" pos:end="73:14">stride</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <operator pos:start="73:18" pos:end="73:18">-</operator><name pos:start="73:19" pos:end="73:46"><name pos:start="73:19" pos:end="73:19">s</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:34">current_frame</name><operator pos:start="73:35" pos:end="73:35">.</operator><name pos:start="73:36" pos:end="73:43">linesize</name><index pos:start="73:44" pos:end="73:46">[<expr pos:start="73:45" pos:end="73:45"><literal type="number" pos:start="73:45" pos:end="73:45">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="75:7" pos:end="87:5">else <block pos:start="75:12" pos:end="87:5">{<block_content pos:start="77:9" pos:end="85:47">

        <expr_stmt pos:start="77:9" pos:end="77:41"><expr pos:start="77:9" pos:end="77:40"><name pos:start="77:9" pos:end="77:19">dequantizer</name> <operator pos:start="77:21" pos:end="77:21">=</operator> <name pos:start="77:23" pos:end="77:40"><name pos:start="77:23" pos:end="77:23">s</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:40">intra_c_dequant</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:48"><expr pos:start="79:9" pos:end="79:47"><name pos:start="79:9" pos:end="79:20">output_plane</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:47"><name pos:start="79:24" pos:end="79:24">s</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:39">current_frame</name><operator pos:start="79:40" pos:end="79:40">.</operator><name pos:start="79:41" pos:end="79:44">data</name><index pos:start="79:45" pos:end="79:47">[<expr pos:start="79:46" pos:end="79:46"><literal type="number" pos:start="79:46" pos:end="79:46">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:43"><expr pos:start="81:9" pos:end="81:42"><name pos:start="81:9" pos:end="81:18">last_plane</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:42"><name pos:start="81:22" pos:end="81:22">s</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:34">last_frame</name><operator pos:start="81:35" pos:end="81:35">.</operator><name pos:start="81:36" pos:end="81:39">data</name><index pos:start="81:40" pos:end="81:42">[<expr pos:start="81:41" pos:end="81:41"><literal type="number" pos:start="81:41" pos:end="81:41">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:47"><expr pos:start="83:9" pos:end="83:46"><name pos:start="83:9" pos:end="83:20">golden_plane</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:46"><name pos:start="83:24" pos:end="83:24">s</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:38">golden_frame</name><operator pos:start="83:39" pos:end="83:39">.</operator><name pos:start="83:40" pos:end="83:43">data</name><index pos:start="83:44" pos:end="83:46">[<expr pos:start="83:45" pos:end="83:45"><literal type="number" pos:start="83:45" pos:end="83:45">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:47"><expr pos:start="85:9" pos:end="85:46"><name pos:start="85:9" pos:end="85:14">stride</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <operator pos:start="85:18" pos:end="85:18">-</operator><name pos:start="85:19" pos:end="85:46"><name pos:start="85:19" pos:end="85:19">s</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:34">current_frame</name><operator pos:start="85:35" pos:end="85:35">.</operator><name pos:start="85:36" pos:end="85:43">linesize</name><index pos:start="85:44" pos:end="85:46">[<expr pos:start="85:45" pos:end="85:45"><literal type="number" pos:start="85:45" pos:end="85:45">2</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:31"><expr pos:start="91:5" pos:end="91:30"><name pos:start="91:5" pos:end="91:18">motion_x_limit</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:26">width</name> <operator pos:start="91:28" pos:end="91:28">-</operator> <literal type="number" pos:start="91:30" pos:end="91:30">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:32"><expr pos:start="93:5" pos:end="93:31"><name pos:start="93:5" pos:end="93:18">motion_y_limit</name> <operator pos:start="93:20" pos:end="93:20">=</operator> <name pos:start="93:22" pos:end="93:27">height</name> <operator pos:start="93:29" pos:end="93:29">-</operator> <literal type="number" pos:start="93:31" pos:end="93:31">8</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:34">/* for each fragment row... */</comment>

    <for pos:start="99:5" pos:end="297:5">for <control pos:start="99:9" pos:end="99:35">(<init pos:start="99:10" pos:end="99:15"><expr pos:start="99:10" pos:end="99:14"><name pos:start="99:10" pos:end="99:10">y</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <literal type="number" pos:start="99:14" pos:end="99:14">0</literal></expr>;</init> <condition pos:start="99:17" pos:end="99:27"><expr pos:start="99:17" pos:end="99:26"><name pos:start="99:17" pos:end="99:17">y</name> <operator pos:start="99:19" pos:end="99:19">&lt;</operator> <name pos:start="99:21" pos:end="99:26">height</name></expr>;</condition> <incr pos:start="99:29" pos:end="99:34"><expr pos:start="99:29" pos:end="99:34"><name pos:start="99:29" pos:end="99:29">y</name> <operator pos:start="99:31" pos:end="99:32">+=</operator> <literal type="number" pos:start="99:34" pos:end="99:34">8</literal></expr></incr>)</control> <block pos:start="99:37" pos:end="297:5">{<block_content pos:start="105:9" pos:end="295:9">



        <comment type="block" pos:start="103:9" pos:end="103:43">/* for each fragment in a row... */</comment>

        <for pos:start="105:9" pos:end="295:9">for <control pos:start="105:13" pos:end="105:43">(<init pos:start="105:14" pos:end="105:19"><expr pos:start="105:14" pos:end="105:18"><name pos:start="105:14" pos:end="105:14">x</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <literal type="number" pos:start="105:18" pos:end="105:18">0</literal></expr>;</init> <condition pos:start="105:21" pos:end="105:30"><expr pos:start="105:21" pos:end="105:29"><name pos:start="105:21" pos:end="105:21">x</name> <operator pos:start="105:23" pos:end="105:23">&lt;</operator> <name pos:start="105:25" pos:end="105:29">width</name></expr>;</condition> <incr pos:start="105:32" pos:end="105:42"><expr pos:start="105:32" pos:end="105:37"><name pos:start="105:32" pos:end="105:32">x</name> <operator pos:start="105:34" pos:end="105:35">+=</operator> <literal type="number" pos:start="105:37" pos:end="105:37">8</literal></expr><operator pos:start="105:38" pos:end="105:38">,</operator> <expr pos:start="105:40" pos:end="105:42"><name pos:start="105:40" pos:end="105:40">i</name><operator pos:start="105:41" pos:end="105:42">++</operator></expr></incr>)</control> <block pos:start="105:45" pos:end="295:9">{<block_content pos:start="111:13" pos:end="293:13">



            <comment type="block" pos:start="109:13" pos:end="109:51">/* transform if this block was coded */</comment>

            <if_stmt pos:start="111:13" pos:end="293:13"><if pos:start="111:13" pos:end="277:13">if <condition pos:start="111:16" pos:end="111:63">(<expr pos:start="111:17" pos:end="111:62"><name pos:start="111:17" pos:end="111:35"><name pos:start="111:17" pos:end="111:17">s</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:32">all_fragments</name><index pos:start="111:33" pos:end="111:35">[<expr pos:start="111:34" pos:end="111:34"><name pos:start="111:34" pos:end="111:34">i</name></expr>]</index></name><operator pos:start="111:36" pos:end="111:36">.</operator><name pos:start="111:37" pos:end="111:49">coding_method</name> <operator pos:start="111:51" pos:end="111:52">!=</operator> <name pos:start="111:54" pos:end="111:62">MODE_COPY</name></expr>)</condition> <block pos:start="111:65" pos:end="277:13">{<block_content pos:start="117:17" pos:end="273:33">



                <comment type="block" pos:start="115:17" pos:end="115:48">/* sort out the motion vector */</comment>

                <expr_stmt pos:start="117:17" pos:end="117:56"><expr pos:start="117:17" pos:end="117:55"><name pos:start="117:17" pos:end="117:24">motion_x</name> <operator pos:start="117:26" pos:end="117:26">=</operator> <name pos:start="117:28" pos:end="117:46"><name pos:start="117:28" pos:end="117:28">s</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:43">all_fragments</name><index pos:start="117:44" pos:end="117:46">[<expr pos:start="117:45" pos:end="117:45"><name pos:start="117:45" pos:end="117:45">i</name></expr>]</index></name><operator pos:start="117:47" pos:end="117:47">.</operator><name pos:start="117:48" pos:end="117:55">motion_x</name></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:56"><expr pos:start="119:17" pos:end="119:55"><name pos:start="119:17" pos:end="119:24">motion_y</name> <operator pos:start="119:26" pos:end="119:26">=</operator> <name pos:start="119:28" pos:end="119:46"><name pos:start="119:28" pos:end="119:28">s</name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:43">all_fragments</name><index pos:start="119:44" pos:end="119:46">[<expr pos:start="119:45" pos:end="119:45"><name pos:start="119:45" pos:end="119:45">i</name></expr>]</index></name><operator pos:start="119:47" pos:end="119:47">.</operator><name pos:start="119:48" pos:end="119:55">motion_y</name></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:80"><expr pos:start="121:17" pos:end="121:79"><name pos:start="121:17" pos:end="121:36">motion_halfpel_index</name> <operator pos:start="121:38" pos:end="121:38">=</operator> <name pos:start="121:40" pos:end="121:58"><name pos:start="121:40" pos:end="121:40">s</name><operator pos:start="121:41" pos:end="121:42">-&gt;</operator><name pos:start="121:43" pos:end="121:55">all_fragments</name><index pos:start="121:56" pos:end="121:58">[<expr pos:start="121:57" pos:end="121:57"><name pos:start="121:57" pos:end="121:57">i</name></expr>]</index></name><operator pos:start="121:59" pos:end="121:59">.</operator><name pos:start="121:60" pos:end="121:79">motion_halfpel_index</name></expr>;</expr_stmt>

<comment type="block" pos:start="123:1" pos:end="143:2">/*



                if (motion_x &lt; 0)

                    motion_x = 0;

                if (motion_y &lt; 0)

                    motion_y = 0;

                if (motion_x &gt; motion_x_limit)

                    motion_x = motion_x_limit;

                if (motion_y &gt; motion_y_limit)

                    motion_y = motion_y_limit;

*/</comment>

                <expr_stmt pos:start="145:17" pos:end="145:64"><expr pos:start="145:17" pos:end="145:63"><name pos:start="145:17" pos:end="145:29">motion_source</name> <operator pos:start="145:31" pos:end="145:31">=</operator> <name pos:start="145:33" pos:end="145:51"><name pos:start="145:33" pos:end="145:33">s</name><operator pos:start="145:34" pos:end="145:35">-&gt;</operator><name pos:start="145:36" pos:end="145:48">all_fragments</name><index pos:start="145:49" pos:end="145:51">[<expr pos:start="145:50" pos:end="145:50"><name pos:start="145:50" pos:end="145:50">i</name></expr>]</index></name><operator pos:start="145:52" pos:end="145:52">.</operator><name pos:start="145:53" pos:end="145:63">first_pixel</name></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:42"><expr pos:start="147:17" pos:end="147:41"><name pos:start="147:17" pos:end="147:29">motion_source</name> <operator pos:start="147:31" pos:end="147:32">+=</operator> <name pos:start="147:34" pos:end="147:41">motion_x</name></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:53"><expr pos:start="149:17" pos:end="149:52"><name pos:start="149:17" pos:end="149:29">motion_source</name> <operator pos:start="149:31" pos:end="149:32">+=</operator> <operator pos:start="149:34" pos:end="149:34">(</operator><name pos:start="149:35" pos:end="149:42">motion_y</name> <operator pos:start="149:44" pos:end="149:44">*</operator> <name pos:start="149:46" pos:end="149:51">stride</name><operator pos:start="149:52" pos:end="149:52">)</operator></expr>;</expr_stmt>



                <comment type="block" pos:start="153:17" pos:end="155:50">/* first, take care of copying a block from either the

                 * previous or the golden frame */</comment>

                <if_stmt pos:start="157:17" pos:end="187:17"><if pos:start="157:17" pos:end="173:17">if <condition pos:start="157:20" pos:end="159:74">(<expr pos:start="157:21" pos:end="159:73"><operator pos:start="157:21" pos:end="157:21">(</operator><name pos:start="157:22" pos:end="157:40"><name pos:start="157:22" pos:end="157:22">s</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:37">all_fragments</name><index pos:start="157:38" pos:end="157:40">[<expr pos:start="157:39" pos:end="157:39"><name pos:start="157:39" pos:end="157:39">i</name></expr>]</index></name><operator pos:start="157:41" pos:end="157:41">.</operator><name pos:start="157:42" pos:end="157:54">coding_method</name> <operator pos:start="157:56" pos:end="157:57">==</operator> <name pos:start="157:59" pos:end="157:75">MODE_USING_GOLDEN</name><operator pos:start="157:76" pos:end="157:76">)</operator> <operator pos:start="157:78" pos:end="157:79">||</operator>

                    <operator pos:start="159:21" pos:end="159:21">(</operator><name pos:start="159:22" pos:end="159:40"><name pos:start="159:22" pos:end="159:22">s</name><operator pos:start="159:23" pos:end="159:24">-&gt;</operator><name pos:start="159:25" pos:end="159:37">all_fragments</name><index pos:start="159:38" pos:end="159:40">[<expr pos:start="159:39" pos:end="159:39"><name pos:start="159:39" pos:end="159:39">i</name></expr>]</index></name><operator pos:start="159:41" pos:end="159:41">.</operator><name pos:start="159:42" pos:end="159:54">coding_method</name> <operator pos:start="159:56" pos:end="159:57">==</operator> <name pos:start="159:59" pos:end="159:72">MODE_GOLDEN_MV</name><operator pos:start="159:73" pos:end="159:73">)</operator></expr>)</condition> <block pos:start="159:76" pos:end="173:17">{<block_content pos:start="163:21" pos:end="169:35">



                    <expr_stmt pos:start="163:21" pos:end="169:35"><expr pos:start="163:21" pos:end="169:34"><name pos:start="163:21" pos:end="163:66"><name pos:start="163:21" pos:end="163:21">s</name><operator pos:start="163:22" pos:end="163:23">-&gt;</operator><name pos:start="163:24" pos:end="163:26">dsp</name><operator pos:start="163:27" pos:end="163:27">.</operator><name pos:start="163:28" pos:end="163:41">put_pixels_tab</name><index pos:start="163:42" pos:end="163:44">[<expr pos:start="163:43" pos:end="163:43"><literal type="number" pos:start="163:43" pos:end="163:43">1</literal></expr>]</index><index pos:start="163:45" pos:end="163:66">[<expr pos:start="163:46" pos:end="163:65"><name pos:start="163:46" pos:end="163:65">motion_halfpel_index</name></expr>]</index></name><operator pos:start="163:67" pos:end="163:67">(</operator>

                        <name pos:start="165:25" pos:end="165:36">output_plane</name> <operator pos:start="165:38" pos:end="165:38">+</operator> <name pos:start="165:40" pos:end="165:58"><name pos:start="165:40" pos:end="165:40">s</name><operator pos:start="165:41" pos:end="165:42">-&gt;</operator><name pos:start="165:43" pos:end="165:55">all_fragments</name><index pos:start="165:56" pos:end="165:58">[<expr pos:start="165:57" pos:end="165:57"><name pos:start="165:57" pos:end="165:57">i</name></expr>]</index></name><operator pos:start="165:59" pos:end="165:59">.</operator><name pos:start="165:60" pos:end="165:70">first_pixel</name><operator pos:start="165:71" pos:end="165:71">,</operator>

                        <name pos:start="167:25" pos:end="167:36">golden_plane</name> <operator pos:start="167:38" pos:end="167:38">+</operator> <name pos:start="167:40" pos:end="167:52">motion_source</name><operator pos:start="167:53" pos:end="167:53">,</operator>

                        <name pos:start="169:25" pos:end="169:30">stride</name><operator pos:start="169:31" pos:end="169:31">,</operator> <literal type="number" pos:start="169:33" pos:end="169:33">8</literal><operator pos:start="169:34" pos:end="169:34">)</operator></expr>;</expr_stmt>



                </block_content>}</block></if> <if type="elseif" pos:start="173:19" pos:end="187:17">else 

                if <condition pos:start="175:20" pos:end="175:68">(<expr pos:start="175:21" pos:end="175:67"><name pos:start="175:21" pos:end="175:39"><name pos:start="175:21" pos:end="175:21">s</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:36">all_fragments</name><index pos:start="175:37" pos:end="175:39">[<expr pos:start="175:38" pos:end="175:38"><name pos:start="175:38" pos:end="175:38">i</name></expr>]</index></name><operator pos:start="175:40" pos:end="175:40">.</operator><name pos:start="175:41" pos:end="175:53">coding_method</name> <operator pos:start="175:55" pos:end="175:56">!=</operator> <name pos:start="175:58" pos:end="175:67">MODE_INTRA</name></expr>)</condition> <block pos:start="175:70" pos:end="187:17">{<block_content pos:start="179:21" pos:end="185:35">



                    <expr_stmt pos:start="179:21" pos:end="185:35"><expr pos:start="179:21" pos:end="185:34"><name pos:start="179:21" pos:end="179:66"><name pos:start="179:21" pos:end="179:21">s</name><operator pos:start="179:22" pos:end="179:23">-&gt;</operator><name pos:start="179:24" pos:end="179:26">dsp</name><operator pos:start="179:27" pos:end="179:27">.</operator><name pos:start="179:28" pos:end="179:41">put_pixels_tab</name><index pos:start="179:42" pos:end="179:44">[<expr pos:start="179:43" pos:end="179:43"><literal type="number" pos:start="179:43" pos:end="179:43">1</literal></expr>]</index><index pos:start="179:45" pos:end="179:66">[<expr pos:start="179:46" pos:end="179:65"><name pos:start="179:46" pos:end="179:65">motion_halfpel_index</name></expr>]</index></name><operator pos:start="179:67" pos:end="179:67">(</operator>

                        <name pos:start="181:25" pos:end="181:36">output_plane</name> <operator pos:start="181:38" pos:end="181:38">+</operator> <name pos:start="181:40" pos:end="181:58"><name pos:start="181:40" pos:end="181:40">s</name><operator pos:start="181:41" pos:end="181:42">-&gt;</operator><name pos:start="181:43" pos:end="181:55">all_fragments</name><index pos:start="181:56" pos:end="181:58">[<expr pos:start="181:57" pos:end="181:57"><name pos:start="181:57" pos:end="181:57">i</name></expr>]</index></name><operator pos:start="181:59" pos:end="181:59">.</operator><name pos:start="181:60" pos:end="181:70">first_pixel</name><operator pos:start="181:71" pos:end="181:71">,</operator>

                        <name pos:start="183:25" pos:end="183:34">last_plane</name> <operator pos:start="183:36" pos:end="183:36">+</operator> <name pos:start="183:38" pos:end="183:50">motion_source</name><operator pos:start="183:51" pos:end="183:51">,</operator>

                        <name pos:start="185:25" pos:end="185:30">stride</name><operator pos:start="185:31" pos:end="185:31">,</operator> <literal type="number" pos:start="185:33" pos:end="185:33">8</literal><operator pos:start="185:34" pos:end="185:34">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="191:17" pos:end="191:53">/* dequantize the DCT coefficients */</comment>

                <expr_stmt pos:start="193:17" pos:end="197:67"><expr pos:start="193:17" pos:end="197:66"><call pos:start="193:17" pos:end="197:66"><name pos:start="193:17" pos:end="193:26">debug_idct</name><argument_list pos:start="193:27" pos:end="197:66">(<argument pos:start="193:28" pos:end="193:82"><expr pos:start="193:28" pos:end="193:82"><literal type="string" pos:start="193:28" pos:end="193:82">"fragment %d, coding mode %d, DC = %d, dequant = %d:\n"</literal></expr></argument>, 

                    <argument pos:start="195:21" pos:end="195:21"><expr pos:start="195:21" pos:end="195:21"><name pos:start="195:21" pos:end="195:21">i</name></expr></argument>, <argument pos:start="195:24" pos:end="195:56"><expr pos:start="195:24" pos:end="195:56"><name pos:start="195:24" pos:end="195:42"><name pos:start="195:24" pos:end="195:24">s</name><operator pos:start="195:25" pos:end="195:26">-&gt;</operator><name pos:start="195:27" pos:end="195:39">all_fragments</name><index pos:start="195:40" pos:end="195:42">[<expr pos:start="195:41" pos:end="195:41"><name pos:start="195:41" pos:end="195:41">i</name></expr>]</index></name><operator pos:start="195:43" pos:end="195:43">.</operator><name pos:start="195:44" pos:end="195:56">coding_method</name></expr></argument>, 

                    <argument pos:start="197:21" pos:end="197:49"><expr pos:start="197:21" pos:end="197:49"><name pos:start="197:21" pos:end="197:39"><name pos:start="197:21" pos:end="197:21">s</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:36">all_fragments</name><index pos:start="197:37" pos:end="197:39">[<expr pos:start="197:38" pos:end="197:38"><name pos:start="197:38" pos:end="197:38">i</name></expr>]</index></name><operator pos:start="197:40" pos:end="197:40">.</operator><name pos:start="197:41" pos:end="197:49"><name pos:start="197:41" pos:end="197:46">coeffs</name><index pos:start="197:47" pos:end="197:49">[<expr pos:start="197:48" pos:end="197:48"><literal type="number" pos:start="197:48" pos:end="197:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="197:52" pos:end="197:65"><expr pos:start="197:52" pos:end="197:65"><name pos:start="197:52" pos:end="197:65"><name pos:start="197:52" pos:end="197:62">dequantizer</name><index pos:start="197:63" pos:end="197:65">[<expr pos:start="197:64" pos:end="197:64"><literal type="number" pos:start="197:64" pos:end="197:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="199:17" pos:end="205:39">for <control pos:start="199:21" pos:end="199:40">(<init pos:start="199:22" pos:end="199:27"><expr pos:start="199:22" pos:end="199:26"><name pos:start="199:22" pos:end="199:22">j</name> <operator pos:start="199:24" pos:end="199:24">=</operator> <literal type="number" pos:start="199:26" pos:end="199:26">0</literal></expr>;</init> <condition pos:start="199:29" pos:end="199:35"><expr pos:start="199:29" pos:end="199:34"><name pos:start="199:29" pos:end="199:29">j</name> <operator pos:start="199:31" pos:end="199:31">&lt;</operator> <literal type="number" pos:start="199:33" pos:end="199:34">64</literal></expr>;</condition> <incr pos:start="199:37" pos:end="199:39"><expr pos:start="199:37" pos:end="199:39"><name pos:start="199:37" pos:end="199:37">j</name><operator pos:start="199:38" pos:end="199:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="201:21" pos:end="205:39"><block_content pos:start="201:21" pos:end="205:39">

                    <expr_stmt pos:start="201:21" pos:end="205:39"><expr pos:start="201:21" pos:end="205:38"><name pos:start="201:21" pos:end="201:51"><name pos:start="201:21" pos:end="201:33">dequant_block</name><index pos:start="201:34" pos:end="201:51">[<expr pos:start="201:35" pos:end="201:50"><name pos:start="201:35" pos:end="201:50"><name pos:start="201:35" pos:end="201:47">dequant_index</name><index pos:start="201:48" pos:end="201:50">[<expr pos:start="201:49" pos:end="201:49"><name pos:start="201:49" pos:end="201:49">j</name></expr>]</index></name></expr>]</index></name> <operator pos:start="201:53" pos:end="201:53">=</operator>

                        <name pos:start="203:25" pos:end="203:43"><name pos:start="203:25" pos:end="203:25">s</name><operator pos:start="203:26" pos:end="203:27">-&gt;</operator><name pos:start="203:28" pos:end="203:40">all_fragments</name><index pos:start="203:41" pos:end="203:43">[<expr pos:start="203:42" pos:end="203:42"><name pos:start="203:42" pos:end="203:42">i</name></expr>]</index></name><operator pos:start="203:44" pos:end="203:44">.</operator><name pos:start="203:45" pos:end="203:53"><name pos:start="203:45" pos:end="203:50">coeffs</name><index pos:start="203:51" pos:end="203:53">[<expr pos:start="203:52" pos:end="203:52"><name pos:start="203:52" pos:end="203:52">j</name></expr>]</index></name> <operator pos:start="203:55" pos:end="203:55">*</operator>

                        <name pos:start="205:25" pos:end="205:38"><name pos:start="205:25" pos:end="205:35">dequantizer</name><index pos:start="205:36" pos:end="205:38">[<expr pos:start="205:37" pos:end="205:37"><name pos:start="205:37" pos:end="205:37">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



                <expr_stmt pos:start="209:17" pos:end="209:51"><expr pos:start="209:17" pos:end="209:50"><call pos:start="209:17" pos:end="209:50"><name pos:start="209:17" pos:end="209:26">debug_idct</name><argument_list pos:start="209:27" pos:end="209:50">(<argument pos:start="209:28" pos:end="209:49"><expr pos:start="209:28" pos:end="209:49"><literal type="string" pos:start="209:28" pos:end="209:49">"dequantized block:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="211:17" pos:end="221:17">for <control pos:start="211:21" pos:end="211:39">(<init pos:start="211:22" pos:end="211:27"><expr pos:start="211:22" pos:end="211:26"><name pos:start="211:22" pos:end="211:22">m</name> <operator pos:start="211:24" pos:end="211:24">=</operator> <literal type="number" pos:start="211:26" pos:end="211:26">0</literal></expr>;</init> <condition pos:start="211:29" pos:end="211:34"><expr pos:start="211:29" pos:end="211:33"><name pos:start="211:29" pos:end="211:29">m</name> <operator pos:start="211:31" pos:end="211:31">&lt;</operator> <literal type="number" pos:start="211:33" pos:end="211:33">8</literal></expr>;</condition> <incr pos:start="211:36" pos:end="211:38"><expr pos:start="211:36" pos:end="211:38"><name pos:start="211:36" pos:end="211:36">m</name><operator pos:start="211:37" pos:end="211:38">++</operator></expr></incr>)</control> <block pos:start="211:41" pos:end="221:17">{<block_content pos:start="213:21" pos:end="219:37">

                    <for pos:start="213:21" pos:end="217:21">for <control pos:start="213:25" pos:end="213:43">(<init pos:start="213:26" pos:end="213:31"><expr pos:start="213:26" pos:end="213:30"><name pos:start="213:26" pos:end="213:26">n</name> <operator pos:start="213:28" pos:end="213:28">=</operator> <literal type="number" pos:start="213:30" pos:end="213:30">0</literal></expr>;</init> <condition pos:start="213:33" pos:end="213:38"><expr pos:start="213:33" pos:end="213:37"><name pos:start="213:33" pos:end="213:33">n</name> <operator pos:start="213:35" pos:end="213:35">&lt;</operator> <literal type="number" pos:start="213:37" pos:end="213:37">8</literal></expr>;</condition> <incr pos:start="213:40" pos:end="213:42"><expr pos:start="213:40" pos:end="213:42"><name pos:start="213:40" pos:end="213:40">n</name><operator pos:start="213:41" pos:end="213:42">++</operator></expr></incr>)</control> <block pos:start="213:45" pos:end="217:21">{<block_content pos:start="215:25" pos:end="215:69">

                        <expr_stmt pos:start="215:25" pos:end="215:69"><expr pos:start="215:25" pos:end="215:68"><call pos:start="215:25" pos:end="215:68"><name pos:start="215:25" pos:end="215:34">debug_idct</name><argument_list pos:start="215:35" pos:end="215:68">(<argument pos:start="215:36" pos:end="215:41"><expr pos:start="215:36" pos:end="215:41"><literal type="string" pos:start="215:36" pos:end="215:41">" %5d"</literal></expr></argument>, <argument pos:start="215:44" pos:end="215:67"><expr pos:start="215:44" pos:end="215:67"><name pos:start="215:44" pos:end="215:67"><name pos:start="215:44" pos:end="215:56">dequant_block</name><index pos:start="215:57" pos:end="215:67">[<expr pos:start="215:58" pos:end="215:66"><name pos:start="215:58" pos:end="215:58">m</name> <operator pos:start="215:60" pos:end="215:60">*</operator> <literal type="number" pos:start="215:62" pos:end="215:64">8</literal> <operator pos:start="215:64" pos:end="215:64">+</operator> <name pos:start="215:66" pos:end="215:66">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="219:21" pos:end="219:37"><expr pos:start="219:21" pos:end="219:36"><call pos:start="219:21" pos:end="219:36"><name pos:start="219:21" pos:end="219:30">debug_idct</name><argument_list pos:start="219:31" pos:end="219:36">(<argument pos:start="219:32" pos:end="219:35"><expr pos:start="219:32" pos:end="219:35"><literal type="string" pos:start="219:32" pos:end="219:35">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="223:17" pos:end="223:33"><expr pos:start="223:17" pos:end="223:32"><call pos:start="223:17" pos:end="223:32"><name pos:start="223:17" pos:end="223:26">debug_idct</name><argument_list pos:start="223:27" pos:end="223:32">(<argument pos:start="223:28" pos:end="223:31"><expr pos:start="223:28" pos:end="223:31"><literal type="string" pos:start="223:28" pos:end="223:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="227:17" pos:end="227:67">/* invert DCT and place (or add) in final output */</comment>



                <if_stmt pos:start="231:17" pos:end="249:17"><if pos:start="231:17" pos:end="241:17">if <condition pos:start="231:20" pos:end="231:68">(<expr pos:start="231:21" pos:end="231:67"><name pos:start="231:21" pos:end="231:39"><name pos:start="231:21" pos:end="231:21">s</name><operator pos:start="231:22" pos:end="231:23">-&gt;</operator><name pos:start="231:24" pos:end="231:36">all_fragments</name><index pos:start="231:37" pos:end="231:39">[<expr pos:start="231:38" pos:end="231:38"><name pos:start="231:38" pos:end="231:38">i</name></expr>]</index></name><operator pos:start="231:40" pos:end="231:40">.</operator><name pos:start="231:41" pos:end="231:53">coding_method</name> <operator pos:start="231:55" pos:end="231:56">==</operator> <name pos:start="231:58" pos:end="231:67">MODE_INTRA</name></expr>)</condition> <block pos:start="231:70" pos:end="241:17">{<block_content pos:start="233:21" pos:end="239:47">

                    <expr_stmt pos:start="233:21" pos:end="233:45"><expr pos:start="233:21" pos:end="233:44"><name pos:start="233:21" pos:end="233:36"><name pos:start="233:21" pos:end="233:33">dequant_block</name><index pos:start="233:34" pos:end="233:36">[<expr pos:start="233:35" pos:end="233:35"><literal type="number" pos:start="233:35" pos:end="233:35">0</literal></expr>]</index></name> <operator pos:start="233:38" pos:end="233:39">+=</operator> <literal type="number" pos:start="233:41" pos:end="233:44">1024</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="235:21" pos:end="239:47"><expr pos:start="235:21" pos:end="239:46"><call pos:start="235:21" pos:end="239:46"><name pos:start="235:21" pos:end="235:35"><name pos:start="235:21" pos:end="235:21">s</name><operator pos:start="235:22" pos:end="235:23">-&gt;</operator><name pos:start="235:24" pos:end="235:26">dsp</name><operator pos:start="235:27" pos:end="235:27">.</operator><name pos:start="235:28" pos:end="235:35">idct_put</name></name><argument_list pos:start="235:36" pos:end="239:46">(

                        <argument pos:start="237:25" pos:end="237:70"><expr pos:start="237:25" pos:end="237:70"><name pos:start="237:25" pos:end="237:36">output_plane</name> <operator pos:start="237:38" pos:end="237:38">+</operator> <name pos:start="237:40" pos:end="237:58"><name pos:start="237:40" pos:end="237:40">s</name><operator pos:start="237:41" pos:end="237:42">-&gt;</operator><name pos:start="237:43" pos:end="237:55">all_fragments</name><index pos:start="237:56" pos:end="237:58">[<expr pos:start="237:57" pos:end="237:57"><name pos:start="237:57" pos:end="237:57">i</name></expr>]</index></name><operator pos:start="237:59" pos:end="237:59">.</operator><name pos:start="237:60" pos:end="237:70">first_pixel</name></expr></argument>,

                        <argument pos:start="239:25" pos:end="239:30"><expr pos:start="239:25" pos:end="239:30"><name pos:start="239:25" pos:end="239:30">stride</name></expr></argument>, <argument pos:start="239:33" pos:end="239:45"><expr pos:start="239:33" pos:end="239:45"><name pos:start="239:33" pos:end="239:45">dequant_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="241:19" pos:end="249:17">else <block pos:start="241:24" pos:end="249:17">{<block_content pos:start="243:21" pos:end="247:47">

                    <expr_stmt pos:start="243:21" pos:end="247:47"><expr pos:start="243:21" pos:end="247:46"><call pos:start="243:21" pos:end="247:46"><name pos:start="243:21" pos:end="243:35"><name pos:start="243:21" pos:end="243:21">s</name><operator pos:start="243:22" pos:end="243:23">-&gt;</operator><name pos:start="243:24" pos:end="243:26">dsp</name><operator pos:start="243:27" pos:end="243:27">.</operator><name pos:start="243:28" pos:end="243:35">idct_add</name></name><argument_list pos:start="243:36" pos:end="247:46">(

                        <argument pos:start="245:25" pos:end="245:70"><expr pos:start="245:25" pos:end="245:70"><name pos:start="245:25" pos:end="245:36">output_plane</name> <operator pos:start="245:38" pos:end="245:38">+</operator> <name pos:start="245:40" pos:end="245:58"><name pos:start="245:40" pos:end="245:40">s</name><operator pos:start="245:41" pos:end="245:42">-&gt;</operator><name pos:start="245:43" pos:end="245:55">all_fragments</name><index pos:start="245:56" pos:end="245:58">[<expr pos:start="245:57" pos:end="245:57"><name pos:start="245:57" pos:end="245:57">i</name></expr>]</index></name><operator pos:start="245:59" pos:end="245:59">.</operator><name pos:start="245:60" pos:end="245:70">first_pixel</name></expr></argument>,

                        <argument pos:start="247:25" pos:end="247:30"><expr pos:start="247:25" pos:end="247:30"><name pos:start="247:25" pos:end="247:30">stride</name></expr></argument>, <argument pos:start="247:33" pos:end="247:45"><expr pos:start="247:33" pos:end="247:45"><name pos:start="247:33" pos:end="247:45">dequant_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="253:17" pos:end="257:35"><expr pos:start="253:17" pos:end="257:34"><call pos:start="253:17" pos:end="257:34"><name pos:start="253:17" pos:end="253:26">debug_idct</name><argument_list pos:start="253:27" pos:end="257:34">(<argument pos:start="253:28" pos:end="253:53"><expr pos:start="253:28" pos:end="253:53"><literal type="string" pos:start="253:28" pos:end="253:53">"block after idct_%s():\n"</literal></expr></argument>,

                    <argument pos:start="255:21" pos:end="257:33"><expr pos:start="255:21" pos:end="257:33"><ternary pos:start="255:21" pos:end="257:33"><condition pos:start="255:21" pos:end="255:70"><expr pos:start="255:21" pos:end="255:69"><operator pos:start="255:21" pos:end="255:21">(</operator><name pos:start="255:22" pos:end="255:40"><name pos:start="255:22" pos:end="255:22">s</name><operator pos:start="255:23" pos:end="255:24">-&gt;</operator><name pos:start="255:25" pos:end="255:37">all_fragments</name><index pos:start="255:38" pos:end="255:40">[<expr pos:start="255:39" pos:end="255:39"><name pos:start="255:39" pos:end="255:39">i</name></expr>]</index></name><operator pos:start="255:41" pos:end="255:41">.</operator><name pos:start="255:42" pos:end="255:54">coding_method</name> <operator pos:start="255:56" pos:end="255:57">==</operator> <name pos:start="255:59" pos:end="255:68">MODE_INTRA</name><operator pos:start="255:69" pos:end="255:69">)</operator></expr>?</condition><then pos:start="257:21" pos:end="257:25">

                    <expr pos:start="257:21" pos:end="257:25"><literal type="string" pos:start="257:21" pos:end="257:25">"put"</literal></expr> </then><else pos:start="257:27" pos:end="257:33">: <expr pos:start="257:29" pos:end="257:33"><literal type="string" pos:start="257:29" pos:end="257:33">"add"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="259:17" pos:end="271:17">for <control pos:start="259:21" pos:end="259:39">(<init pos:start="259:22" pos:end="259:27"><expr pos:start="259:22" pos:end="259:26"><name pos:start="259:22" pos:end="259:22">m</name> <operator pos:start="259:24" pos:end="259:24">=</operator> <literal type="number" pos:start="259:26" pos:end="259:26">0</literal></expr>;</init> <condition pos:start="259:29" pos:end="259:34"><expr pos:start="259:29" pos:end="259:33"><name pos:start="259:29" pos:end="259:29">m</name> <operator pos:start="259:31" pos:end="259:31">&lt;</operator> <literal type="number" pos:start="259:33" pos:end="259:33">8</literal></expr>;</condition> <incr pos:start="259:36" pos:end="259:38"><expr pos:start="259:36" pos:end="259:38"><name pos:start="259:36" pos:end="259:36">m</name><operator pos:start="259:37" pos:end="259:38">++</operator></expr></incr>)</control> <block pos:start="259:41" pos:end="271:17">{<block_content pos:start="261:21" pos:end="269:37">

                    <for pos:start="261:21" pos:end="267:21">for <control pos:start="261:25" pos:end="261:43">(<init pos:start="261:26" pos:end="261:31"><expr pos:start="261:26" pos:end="261:30"><name pos:start="261:26" pos:end="261:26">n</name> <operator pos:start="261:28" pos:end="261:28">=</operator> <literal type="number" pos:start="261:30" pos:end="261:30">0</literal></expr>;</init> <condition pos:start="261:33" pos:end="261:38"><expr pos:start="261:33" pos:end="261:37"><name pos:start="261:33" pos:end="261:33">n</name> <operator pos:start="261:35" pos:end="261:35">&lt;</operator> <literal type="number" pos:start="261:37" pos:end="261:37">8</literal></expr>;</condition> <incr pos:start="261:40" pos:end="261:42"><expr pos:start="261:40" pos:end="261:42"><name pos:start="261:40" pos:end="261:40">n</name><operator pos:start="261:41" pos:end="261:42">++</operator></expr></incr>)</control> <block pos:start="261:45" pos:end="267:21">{<block_content pos:start="263:25" pos:end="265:81">

                        <expr_stmt pos:start="263:25" pos:end="265:81"><expr pos:start="263:25" pos:end="265:80"><call pos:start="263:25" pos:end="265:80"><name pos:start="263:25" pos:end="263:34">debug_idct</name><argument_list pos:start="263:35" pos:end="265:80">(<argument pos:start="263:36" pos:end="263:41"><expr pos:start="263:36" pos:end="263:41"><literal type="string" pos:start="263:36" pos:end="263:41">" %3d"</literal></expr></argument>, <argument pos:start="263:44" pos:end="265:79"><expr pos:start="263:44" pos:end="265:79"><operator pos:start="263:44" pos:end="263:44">*</operator><operator pos:start="263:45" pos:end="263:45">(</operator><name pos:start="263:46" pos:end="263:57">output_plane</name> <operator pos:start="263:59" pos:end="263:59">+</operator> 

                            <name pos:start="265:29" pos:end="265:47"><name pos:start="265:29" pos:end="265:29">s</name><operator pos:start="265:30" pos:end="265:31">-&gt;</operator><name pos:start="265:32" pos:end="265:44">all_fragments</name><index pos:start="265:45" pos:end="265:47">[<expr pos:start="265:46" pos:end="265:46"><name pos:start="265:46" pos:end="265:46">i</name></expr>]</index></name><operator pos:start="265:48" pos:end="265:48">.</operator><name pos:start="265:49" pos:end="265:59">first_pixel</name> <operator pos:start="265:61" pos:end="265:61">+</operator> <operator pos:start="265:63" pos:end="265:63">(</operator><name pos:start="265:64" pos:end="265:64">m</name> <operator pos:start="265:66" pos:end="265:66">*</operator> <name pos:start="265:68" pos:end="265:73">stride</name> <operator pos:start="265:75" pos:end="265:75">+</operator> <name pos:start="265:77" pos:end="265:77">n</name><operator pos:start="265:78" pos:end="265:78">)</operator><operator pos:start="265:79" pos:end="265:79">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="269:21" pos:end="269:37"><expr pos:start="269:21" pos:end="269:36"><call pos:start="269:21" pos:end="269:36"><name pos:start="269:21" pos:end="269:30">debug_idct</name><argument_list pos:start="269:31" pos:end="269:36">(<argument pos:start="269:32" pos:end="269:35"><expr pos:start="269:32" pos:end="269:35"><literal type="string" pos:start="269:32" pos:end="269:35">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="273:17" pos:end="273:33"><expr pos:start="273:17" pos:end="273:32"><call pos:start="273:17" pos:end="273:32"><name pos:start="273:17" pos:end="273:26">debug_idct</name><argument_list pos:start="273:27" pos:end="273:32">(<argument pos:start="273:28" pos:end="273:31"><expr pos:start="273:28" pos:end="273:31"><literal type="string" pos:start="273:28" pos:end="273:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            </block_content>}</block></if> <else pos:start="277:15" pos:end="293:13">else <block pos:start="277:20" pos:end="293:13">{<block_content pos:start="283:17" pos:end="289:31">



                <comment type="block" pos:start="281:17" pos:end="281:59">/* copy directly from the previous frame */</comment>

                <expr_stmt pos:start="283:17" pos:end="289:31"><expr pos:start="283:17" pos:end="289:30"><name pos:start="283:17" pos:end="283:43"><name pos:start="283:17" pos:end="283:17">s</name><operator pos:start="283:18" pos:end="283:19">-&gt;</operator><name pos:start="283:20" pos:end="283:22">dsp</name><operator pos:start="283:23" pos:end="283:23">.</operator><name pos:start="283:24" pos:end="283:37">put_pixels_tab</name><index pos:start="283:38" pos:end="283:40">[<expr pos:start="283:39" pos:end="283:39"><literal type="number" pos:start="283:39" pos:end="283:39">1</literal></expr>]</index><index pos:start="283:41" pos:end="283:43">[<expr pos:start="283:42" pos:end="283:42"><literal type="number" pos:start="283:42" pos:end="283:42">0</literal></expr>]</index></name><operator pos:start="283:44" pos:end="283:44">(</operator>

                    <name pos:start="285:21" pos:end="285:32">output_plane</name> <operator pos:start="285:34" pos:end="285:34">+</operator> <name pos:start="285:36" pos:end="285:54"><name pos:start="285:36" pos:end="285:36">s</name><operator pos:start="285:37" pos:end="285:38">-&gt;</operator><name pos:start="285:39" pos:end="285:51">all_fragments</name><index pos:start="285:52" pos:end="285:54">[<expr pos:start="285:53" pos:end="285:53"><name pos:start="285:53" pos:end="285:53">i</name></expr>]</index></name><operator pos:start="285:55" pos:end="285:55">.</operator><name pos:start="285:56" pos:end="285:66">first_pixel</name><operator pos:start="285:67" pos:end="285:67">,</operator>

                    <name pos:start="287:21" pos:end="287:30">last_plane</name> <operator pos:start="287:32" pos:end="287:32">+</operator> <name pos:start="287:34" pos:end="287:52"><name pos:start="287:34" pos:end="287:34">s</name><operator pos:start="287:35" pos:end="287:36">-&gt;</operator><name pos:start="287:37" pos:end="287:49">all_fragments</name><index pos:start="287:50" pos:end="287:52">[<expr pos:start="287:51" pos:end="287:51"><name pos:start="287:51" pos:end="287:51">i</name></expr>]</index></name><operator pos:start="287:53" pos:end="287:53">.</operator><name pos:start="287:54" pos:end="287:64">first_pixel</name><operator pos:start="287:65" pos:end="287:65">,</operator>

                    <name pos:start="289:21" pos:end="289:26">stride</name><operator pos:start="289:27" pos:end="289:27">,</operator> <literal type="number" pos:start="289:29" pos:end="289:29">8</literal><operator pos:start="289:30" pos:end="289:30">)</operator></expr>;</expr_stmt>



            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="301:5" pos:end="301:13"><expr pos:start="301:5" pos:end="301:12"><call pos:start="301:5" pos:end="301:12"><name pos:start="301:5" pos:end="301:10">emms_c</name><argument_list pos:start="301:11" pos:end="301:12">()</argument_list></call></expr>;</expr_stmt>



</block_content>}</block></function>
</unit>
