<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2514.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">rv10_decode_init</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:1">{<block_content pos:start="5:5" pos:end="137:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:16">RVDecContext</name>  <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">rv</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:27">rv</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:30">m</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:14"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <name pos:start="9:12" pos:end="9:14">int</name></type> <name pos:start="9:16" pos:end="9:19">done</name><init pos:start="9:20" pos:end="9:21">=<expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">major_ver</name></decl>, <decl pos:start="11:20" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:28">minor_ver</name></decl>, <decl pos:start="11:31" pos:end="11:39"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:31" pos:end="11:39">micro_ver</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:34">(<expr pos:start="15:9" pos:end="15:33"><name pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:13">avctx</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:29">extradata_size</name></name> <operator pos:start="15:31" pos:end="15:31">&lt;</operator> <literal type="number" pos:start="15:33" pos:end="15:33">8</literal></expr>)</condition> <block pos:start="15:36" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:18">

        <expr_stmt pos:start="17:9" pos:end="17:65"><expr pos:start="17:9" pos:end="17:64"><call pos:start="17:9" pos:end="17:64"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="17:64">(<argument pos:start="17:16" pos:end="17:20"><expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:20">avctx</name></expr></argument>, <argument pos:start="17:23" pos:end="17:34"><expr pos:start="17:23" pos:end="17:34"><name pos:start="17:23" pos:end="17:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="17:37" pos:end="17:63"><expr pos:start="17:37" pos:end="17:63"><literal type="string" pos:start="17:37" pos:end="17:63">"Extradata is too small.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><call pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:26">ff_MPV_decode_defaults</name><argument_list pos:start="25:27" pos:end="25:29">(<argument pos:start="25:28" pos:end="25:28"><expr pos:start="25:28" pos:end="25:28"><name pos:start="25:28" pos:end="25:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:20"><expr pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:12">avctx</name></name><operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:19">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:17">out_format</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:28">FMT_H263</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:15">codec_id</name></name><operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:32"><name pos:start="33:18" pos:end="33:22">avctx</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:32">codec_id</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:51"><expr pos:start="37:5" pos:end="37:50"><name pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:17">orig_width</name></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <name pos:start="37:21" pos:end="37:28"><name pos:start="37:21" pos:end="37:21">s</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:28">width</name></name>  <operator pos:start="37:31" pos:end="37:31">=</operator> <name pos:start="37:33" pos:end="37:50"><name pos:start="37:33" pos:end="37:37">avctx</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:50">coded_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:52"><expr pos:start="39:5" pos:end="39:51"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:18">orig_height</name></name><operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:29"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:29">height</name></name> <operator pos:start="39:31" pos:end="39:31">=</operator> <name pos:start="39:33" pos:end="39:51"><name pos:start="39:33" pos:end="39:37">avctx</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:51">coded_height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:62"><expr pos:start="43:5" pos:end="43:61"><name pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:24">h263_long_vectors</name></name><operator pos:start="43:25" pos:end="43:25">=</operator> <operator pos:start="43:27" pos:end="43:27">(</operator><operator pos:start="43:28" pos:end="43:28">(</operator><name pos:start="43:29" pos:end="43:35">uint8_t</name><operator pos:start="43:36" pos:end="43:36">*</operator><operator pos:start="43:37" pos:end="43:37">)</operator><name pos:start="43:38" pos:end="43:53"><name pos:start="43:38" pos:end="43:42">avctx</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:53">extradata</name></name><operator pos:start="43:54" pos:end="43:54">)</operator><index pos:start="43:55" pos:end="43:57">[<expr pos:start="43:56" pos:end="43:56"><literal type="number" pos:start="43:56" pos:end="43:56">3</literal></expr>]</index> <operator pos:start="43:59" pos:end="43:59">&amp;</operator> <literal type="number" pos:start="43:61" pos:end="43:61">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:57"><expr pos:start="45:5" pos:end="45:56"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:6">rv</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:14">sub_id</name></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:56"><name pos:start="45:18" pos:end="45:24">AV_RB32</name><argument_list pos:start="45:25" pos:end="45:56">(<argument pos:start="45:26" pos:end="45:55"><expr pos:start="45:26" pos:end="45:55"><operator pos:start="45:26" pos:end="45:26">(</operator><name pos:start="45:27" pos:end="45:33">uint8_t</name><operator pos:start="45:34" pos:end="45:34">*</operator><operator pos:start="45:35" pos:end="45:35">)</operator><name pos:start="45:36" pos:end="45:51"><name pos:start="45:36" pos:end="45:40">avctx</name><operator pos:start="45:41" pos:end="45:42">-&gt;</operator><name pos:start="45:43" pos:end="45:51">extradata</name></name> <operator pos:start="45:53" pos:end="45:53">+</operator> <literal type="number" pos:start="45:55" pos:end="45:55">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:13">major_ver</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <call pos:start="49:17" pos:end="49:44"><name pos:start="49:17" pos:end="49:32">RV_GET_MAJOR_VER</name><argument_list pos:start="49:33" pos:end="49:44">(<argument pos:start="49:34" pos:end="49:43"><expr pos:start="49:34" pos:end="49:43"><name pos:start="49:34" pos:end="49:43"><name pos:start="49:34" pos:end="49:35">rv</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:43">sub_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:45"><expr pos:start="51:5" pos:end="51:44"><name pos:start="51:5" pos:end="51:13">minor_ver</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <call pos:start="51:17" pos:end="51:44"><name pos:start="51:17" pos:end="51:32">RV_GET_MINOR_VER</name><argument_list pos:start="51:33" pos:end="51:44">(<argument pos:start="51:34" pos:end="51:43"><expr pos:start="51:34" pos:end="51:43"><name pos:start="51:34" pos:end="51:43"><name pos:start="51:34" pos:end="51:35">rv</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:43">sub_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:13">micro_ver</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:44"><name pos:start="53:17" pos:end="53:32">RV_GET_MICRO_VER</name><argument_list pos:start="53:33" pos:end="53:44">(<argument pos:start="53:34" pos:end="53:43"><expr pos:start="53:34" pos:end="53:43"><name pos:start="53:34" pos:end="53:43"><name pos:start="53:34" pos:end="53:35">rv</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:43">sub_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:21"><expr pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:16"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:16">low_delay</name></name> <operator pos:start="57:18" pos:end="57:18">=</operator> <literal type="number" pos:start="57:20" pos:end="57:20">1</literal></expr>;</expr_stmt>

    <switch pos:start="59:5" pos:end="89:5">switch <condition pos:start="59:12" pos:end="59:22">(<expr pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:21">major_ver</name></expr>)</condition> <block pos:start="59:24" pos:end="89:5">{<block_content pos:start="61:5" pos:end="87:36">

    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">1</literal></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:44"><expr pos:start="63:9" pos:end="63:43"><name pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:23">rv10_version</name></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <ternary pos:start="63:27" pos:end="63:43"><condition pos:start="63:27" pos:end="63:37"><expr pos:start="63:27" pos:end="63:35"><name pos:start="63:27" pos:end="63:35">micro_ver</name></expr> ?</condition><then pos:start="63:39" pos:end="63:39"> <expr pos:start="63:39" pos:end="63:39"><literal type="number" pos:start="63:39" pos:end="63:39">3</literal></expr> </then><else pos:start="63:41" pos:end="63:43">: <expr pos:start="63:43" pos:end="63:43"><literal type="number" pos:start="63:43" pos:end="63:43">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:33"><expr pos:start="65:9" pos:end="65:32"><name pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:15">obmc</name></name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:27">micro_ver</name> <operator pos:start="65:29" pos:end="65:30">==</operator> <literal type="number" pos:start="65:32" pos:end="65:32">2</literal></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:11">case <expr pos:start="69:10" pos:end="69:10"><literal type="number" pos:start="69:10" pos:end="69:10">2</literal></expr>:</case>

        <if_stmt pos:start="71:9" pos:end="77:9"><if pos:start="71:9" pos:end="77:9">if <condition pos:start="71:12" pos:end="71:27">(<expr pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:21">minor_ver</name> <operator pos:start="71:23" pos:end="71:24">&gt;=</operator> <literal type="number" pos:start="71:26" pos:end="71:26">2</literal></expr>)</condition> <block pos:start="71:29" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:39">

            <expr_stmt pos:start="73:13" pos:end="73:29"><expr pos:start="73:13" pos:end="73:28"><name pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:24">low_delay</name></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <literal type="number" pos:start="73:28" pos:end="73:28">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:39"><expr pos:start="75:13" pos:end="75:38"><name pos:start="75:13" pos:end="75:34"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:20">avctx</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:34">has_b_frames</name></name> <operator pos:start="75:36" pos:end="75:36">=</operator> <literal type="number" pos:start="75:38" pos:end="75:38">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <default pos:start="81:5" pos:end="81:12">default:</default>

        <expr_stmt pos:start="83:9" pos:end="83:74"><expr pos:start="83:9" pos:end="83:73"><call pos:start="83:9" pos:end="83:73"><name pos:start="83:9" pos:end="83:14">av_log</name><argument_list pos:start="83:15" pos:end="83:73">(<argument pos:start="83:16" pos:end="83:23"><expr pos:start="83:16" pos:end="83:23"><name pos:start="83:16" pos:end="83:23"><name pos:start="83:16" pos:end="83:16">s</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:23">avctx</name></name></expr></argument>, <argument pos:start="83:26" pos:end="83:37"><expr pos:start="83:26" pos:end="83:37"><name pos:start="83:26" pos:end="83:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:40" pos:end="83:60"><expr pos:start="83:40" pos:end="83:60"><literal type="string" pos:start="83:40" pos:end="83:60">"unknown header %X\n"</literal></expr></argument>, <argument pos:start="83:63" pos:end="83:72"><expr pos:start="83:63" pos:end="83:72"><name pos:start="83:63" pos:end="83:72"><name pos:start="83:63" pos:end="83:64">rv</name><operator pos:start="83:65" pos:end="83:66">-&gt;</operator><name pos:start="83:67" pos:end="83:72">sub_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:58"><expr pos:start="85:9" pos:end="85:57"><call pos:start="85:9" pos:end="85:57"><name pos:start="85:9" pos:end="85:30">av_log_missing_feature</name><argument_list pos:start="85:31" pos:end="85:57">(<argument pos:start="85:32" pos:end="85:36"><expr pos:start="85:32" pos:end="85:36"><name pos:start="85:32" pos:end="85:36">avctx</name></expr></argument>, <argument pos:start="85:39" pos:end="85:53"><expr pos:start="85:39" pos:end="85:53"><literal type="string" pos:start="85:39" pos:end="85:53">"RV1/2 version"</literal></expr></argument>, <argument pos:start="85:56" pos:end="85:56"><expr pos:start="85:56" pos:end="85:56"><literal type="number" pos:start="85:56" pos:end="85:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:36">return <expr pos:start="87:16" pos:end="87:35"><name pos:start="87:16" pos:end="87:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="93:5" pos:end="97:5"><if pos:start="93:5" pos:end="97:5">if<condition pos:start="93:7" pos:end="93:41">(<expr pos:start="93:8" pos:end="93:40"><name pos:start="93:8" pos:end="93:19"><name pos:start="93:8" pos:end="93:12">avctx</name><operator pos:start="93:13" pos:end="93:14">-&gt;</operator><name pos:start="93:15" pos:end="93:19">debug</name></name> <operator pos:start="93:21" pos:end="93:21">&amp;</operator> <name pos:start="93:23" pos:end="93:40">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="93:42" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:136">

        <expr_stmt pos:start="95:9" pos:end="95:136"><expr pos:start="95:9" pos:end="95:135"><call pos:start="95:9" pos:end="95:135"><name pos:start="95:9" pos:end="95:14">av_log</name><argument_list pos:start="95:15" pos:end="95:135">(<argument pos:start="95:16" pos:end="95:20"><expr pos:start="95:16" pos:end="95:20"><name pos:start="95:16" pos:end="95:20">avctx</name></expr></argument>, <argument pos:start="95:23" pos:end="95:34"><expr pos:start="95:23" pos:end="95:34"><name pos:start="95:23" pos:end="95:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="95:37" pos:end="95:54"><expr pos:start="95:37" pos:end="95:54"><literal type="string" pos:start="95:37" pos:end="95:54">"ver:%X ver0:%X\n"</literal></expr></argument>, <argument pos:start="95:57" pos:end="95:66"><expr pos:start="95:57" pos:end="95:66"><name pos:start="95:57" pos:end="95:66"><name pos:start="95:57" pos:end="95:58">rv</name><operator pos:start="95:59" pos:end="95:60">-&gt;</operator><name pos:start="95:61" pos:end="95:66">sub_id</name></name></expr></argument>, <argument pos:start="95:69" pos:end="95:134"><expr pos:start="95:69" pos:end="95:134"><ternary pos:start="95:69" pos:end="95:134"><condition pos:start="95:69" pos:end="95:96"><expr pos:start="95:69" pos:end="95:94"><name pos:start="95:69" pos:end="95:89"><name pos:start="95:69" pos:end="95:73">avctx</name><operator pos:start="95:74" pos:end="95:75">-&gt;</operator><name pos:start="95:76" pos:end="95:89">extradata_size</name></name> <operator pos:start="95:91" pos:end="95:92">&gt;=</operator> <literal type="number" pos:start="95:94" pos:end="95:94">4</literal></expr> ?</condition><then pos:start="95:98" pos:end="95:129"> <expr pos:start="95:98" pos:end="95:129"><operator pos:start="95:98" pos:end="95:98">(</operator><operator pos:start="95:99" pos:end="95:99">(</operator><name pos:start="95:100" pos:end="95:107">uint32_t</name><operator pos:start="95:108" pos:end="95:108">*</operator><operator pos:start="95:109" pos:end="95:109">)</operator><name pos:start="95:110" pos:end="95:125"><name pos:start="95:110" pos:end="95:114">avctx</name><operator pos:start="95:115" pos:end="95:116">-&gt;</operator><name pos:start="95:117" pos:end="95:125">extradata</name></name><operator pos:start="95:126" pos:end="95:126">)</operator><index pos:start="95:127" pos:end="95:129">[<expr pos:start="95:128" pos:end="95:128"><literal type="number" pos:start="95:128" pos:end="95:128">0</literal></expr>]</index></expr> </then><else pos:start="95:131" pos:end="95:134">: <expr pos:start="95:133" pos:end="95:134"><operator pos:start="95:133" pos:end="95:133">-</operator><literal type="number" pos:start="95:134" pos:end="95:134">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:40"><expr pos:start="101:5" pos:end="101:39"><name pos:start="101:5" pos:end="101:18"><name pos:start="101:5" pos:end="101:9">avctx</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:18">pix_fmt</name></name> <operator pos:start="101:20" pos:end="101:20">=</operator> <name pos:start="101:22" pos:end="101:39">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>



    <if_stmt pos:start="105:5" pos:end="107:18"><if pos:start="105:5" pos:end="107:18">if <condition pos:start="105:8" pos:end="105:34">(<expr pos:start="105:9" pos:end="105:33"><call pos:start="105:9" pos:end="105:29"><name pos:start="105:9" pos:end="105:26">ff_MPV_common_init</name><argument_list pos:start="105:27" pos:end="105:29">(<argument pos:start="105:28" pos:end="105:28"><expr pos:start="105:28" pos:end="105:28"><name pos:start="105:28" pos:end="105:28">s</name></expr></argument>)</argument_list></call> <operator pos:start="105:31" pos:end="105:31">&lt;</operator> <literal type="number" pos:start="105:33" pos:end="105:33">0</literal></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:18"><block_content pos:start="107:9" pos:end="107:18">

        <return pos:start="107:9" pos:end="107:18">return <expr pos:start="107:16" pos:end="107:17"><operator pos:start="107:16" pos:end="107:16">-</operator><literal type="number" pos:start="107:17" pos:end="107:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:30"><expr pos:start="111:5" pos:end="111:29"><call pos:start="111:5" pos:end="111:29"><name pos:start="111:5" pos:end="111:27">ff_h263_decode_init_vlc</name><argument_list pos:start="111:28" pos:end="111:29">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="115:5" pos:end="115:21">/* init rv vlc */</comment>

    <if_stmt pos:start="117:5" pos:end="133:5"><if pos:start="117:5" pos:end="133:5">if <condition pos:start="117:8" pos:end="117:14">(<expr pos:start="117:9" pos:end="117:13"><operator pos:start="117:9" pos:end="117:9">!</operator><name pos:start="117:10" pos:end="117:13">done</name></expr>)</condition> <block pos:start="117:16" pos:end="133:5">{<block_content pos:start="119:9" pos:end="131:17">

        <expr_stmt pos:start="119:9" pos:end="123:43"><expr pos:start="119:9" pos:end="123:42"><call pos:start="119:9" pos:end="123:42"><name pos:start="119:9" pos:end="119:23">INIT_VLC_STATIC</name><argument_list pos:start="119:24" pos:end="123:42">(<argument pos:start="119:25" pos:end="119:34"><expr pos:start="119:25" pos:end="119:34"><operator pos:start="119:25" pos:end="119:25">&amp;</operator><name pos:start="119:26" pos:end="119:34">rv_dc_lum</name></expr></argument>, <argument pos:start="119:37" pos:end="119:47"><expr pos:start="119:37" pos:end="119:47"><name pos:start="119:37" pos:end="119:47">DC_VLC_BITS</name></expr></argument>, <argument pos:start="119:50" pos:end="119:52"><expr pos:start="119:50" pos:end="119:52"><literal type="number" pos:start="119:50" pos:end="119:52">256</literal></expr></argument>,

                 <argument pos:start="121:18" pos:end="121:28"><expr pos:start="121:18" pos:end="121:28"><name pos:start="121:18" pos:end="121:28">rv_lum_bits</name></expr></argument>, <argument pos:start="121:31" pos:end="121:31"><expr pos:start="121:31" pos:end="121:31"><literal type="number" pos:start="121:31" pos:end="121:31">1</literal></expr></argument>, <argument pos:start="121:34" pos:end="121:34"><expr pos:start="121:34" pos:end="121:34"><literal type="number" pos:start="121:34" pos:end="121:34">1</literal></expr></argument>,

                 <argument pos:start="123:18" pos:end="123:28"><expr pos:start="123:18" pos:end="123:28"><name pos:start="123:18" pos:end="123:28">rv_lum_code</name></expr></argument>, <argument pos:start="123:31" pos:end="123:31"><expr pos:start="123:31" pos:end="123:31"><literal type="number" pos:start="123:31" pos:end="123:31">2</literal></expr></argument>, <argument pos:start="123:34" pos:end="123:34"><expr pos:start="123:34" pos:end="123:34"><literal type="number" pos:start="123:34" pos:end="123:34">2</literal></expr></argument>, <argument pos:start="123:37" pos:end="123:41"><expr pos:start="123:37" pos:end="123:41"><literal type="number" pos:start="123:37" pos:end="123:41">16384</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="129:45"><expr pos:start="125:9" pos:end="129:44"><call pos:start="125:9" pos:end="129:44"><name pos:start="125:9" pos:end="125:23">INIT_VLC_STATIC</name><argument_list pos:start="125:24" pos:end="129:44">(<argument pos:start="125:25" pos:end="125:36"><expr pos:start="125:25" pos:end="125:36"><operator pos:start="125:25" pos:end="125:25">&amp;</operator><name pos:start="125:26" pos:end="125:36">rv_dc_chrom</name></expr></argument>, <argument pos:start="125:39" pos:end="125:49"><expr pos:start="125:39" pos:end="125:49"><name pos:start="125:39" pos:end="125:49">DC_VLC_BITS</name></expr></argument>, <argument pos:start="125:52" pos:end="125:54"><expr pos:start="125:52" pos:end="125:54"><literal type="number" pos:start="125:52" pos:end="125:54">256</literal></expr></argument>,

                 <argument pos:start="127:18" pos:end="127:30"><expr pos:start="127:18" pos:end="127:30"><name pos:start="127:18" pos:end="127:30">rv_chrom_bits</name></expr></argument>, <argument pos:start="127:33" pos:end="127:33"><expr pos:start="127:33" pos:end="127:33"><literal type="number" pos:start="127:33" pos:end="127:33">1</literal></expr></argument>, <argument pos:start="127:36" pos:end="127:36"><expr pos:start="127:36" pos:end="127:36"><literal type="number" pos:start="127:36" pos:end="127:36">1</literal></expr></argument>,

                 <argument pos:start="129:18" pos:end="129:30"><expr pos:start="129:18" pos:end="129:30"><name pos:start="129:18" pos:end="129:30">rv_chrom_code</name></expr></argument>, <argument pos:start="129:33" pos:end="129:33"><expr pos:start="129:33" pos:end="129:33"><literal type="number" pos:start="129:33" pos:end="129:33">2</literal></expr></argument>, <argument pos:start="129:36" pos:end="129:36"><expr pos:start="129:36" pos:end="129:36"><literal type="number" pos:start="129:36" pos:end="129:36">2</literal></expr></argument>, <argument pos:start="129:39" pos:end="129:43"><expr pos:start="129:39" pos:end="129:43"><literal type="number" pos:start="129:39" pos:end="129:43">16388</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:17"><expr pos:start="131:9" pos:end="131:16"><name pos:start="131:9" pos:end="131:12">done</name> <operator pos:start="131:14" pos:end="131:14">=</operator> <literal type="number" pos:start="131:16" pos:end="131:16">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="137:5" pos:end="137:13">return <expr pos:start="137:12" pos:end="137:12"><literal type="number" pos:start="137:12" pos:end="137:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
