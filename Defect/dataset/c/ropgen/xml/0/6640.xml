<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6640.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">hq_decode_block</name><parameter_list pos:start="1:27" pos:end="3:63">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:36">HQContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">c</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:58"><decl pos:start="1:42" pos:end="1:58"><type pos:start="1:42" pos:end="1:58"><name pos:start="1:42" pos:end="1:54">GetBitContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">gb</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:77"><decl pos:start="1:61" pos:end="1:77"><type pos:start="1:61" pos:end="1:73"><name pos:start="1:61" pos:end="1:67">int16_t</name></type> <name pos:start="1:69" pos:end="1:77"><name pos:start="1:69" pos:end="1:73">block</name><index pos:start="1:74" pos:end="1:77">[<expr pos:start="1:75" pos:end="1:76"><literal type="number" pos:start="1:75" pos:end="1:76">64</literal></expr>]</index></name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:35"><decl pos:start="3:28" pos:end="3:35"><type pos:start="3:28" pos:end="3:35"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:35">qsel</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:50"><decl pos:start="3:38" pos:end="3:50"><type pos:start="3:38" pos:end="3:50"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:50">is_chroma</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:62"><decl pos:start="3:53" pos:end="3:62"><type pos:start="3:53" pos:end="3:62"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:62">is_hqa</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:13">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">int32_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">val</name></decl>, <decl pos:start="9:14" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:16">pos</name> <init pos:start="9:18" pos:end="9:20">= <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:42"><expr pos:start="13:5" pos:end="13:41"><call pos:start="13:5" pos:end="13:41"><name pos:start="13:5" pos:end="13:10">memset</name><argument_list pos:start="13:11" pos:end="13:41">(<argument pos:start="13:12" pos:end="13:16"><expr pos:start="13:12" pos:end="13:16"><name pos:start="13:12" pos:end="13:16">block</name></expr></argument>, <argument pos:start="13:19" pos:end="13:19"><expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr></argument>, <argument pos:start="13:22" pos:end="13:40"><expr pos:start="13:22" pos:end="13:40"><literal type="number" pos:start="13:22" pos:end="13:23">64</literal> <operator pos:start="13:25" pos:end="13:25">*</operator> <sizeof pos:start="13:27" pos:end="13:40">sizeof<argument_list pos:start="13:33" pos:end="13:40">(<argument pos:start="13:34" pos:end="13:39"><expr pos:start="13:34" pos:end="13:39"><operator pos:start="13:34" pos:end="13:34">*</operator><name pos:start="13:35" pos:end="13:39">block</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="29:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:15">is_hqa</name></expr>)</condition> <block pos:start="17:18" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:59">

        <expr_stmt pos:start="19:9" pos:end="19:41"><expr pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:13">block</name><index pos:start="19:14" pos:end="19:16">[<expr pos:start="19:15" pos:end="19:15"><literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>]</index></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <call pos:start="19:20" pos:end="19:35"><name pos:start="19:20" pos:end="19:28">get_sbits</name><argument_list pos:start="19:29" pos:end="19:35">(<argument pos:start="19:30" pos:end="19:31"><expr pos:start="19:30" pos:end="19:31"><name pos:start="19:30" pos:end="19:31">gb</name></expr></argument>, <argument pos:start="19:34" pos:end="19:34"><expr pos:start="19:34" pos:end="19:34"><literal type="number" pos:start="19:34" pos:end="19:34">9</literal></expr></argument>)</argument_list></call> <operator pos:start="19:37" pos:end="19:38">&lt;&lt;</operator> <literal type="number" pos:start="19:40" pos:end="19:40">6</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:59"><expr pos:start="21:9" pos:end="21:58"><name pos:start="21:9" pos:end="21:9">q</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:58"><name pos:start="21:13" pos:end="21:24">ff_hq_quants</name><index pos:start="21:25" pos:end="21:30">[<expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">qsel</name></expr>]</index><index pos:start="21:31" pos:end="21:41">[<expr pos:start="21:32" pos:end="21:40"><name pos:start="21:32" pos:end="21:40">is_chroma</name></expr>]</index><index pos:start="21:42" pos:end="21:58">[<expr pos:start="21:43" pos:end="21:57"><call pos:start="21:43" pos:end="21:57"><name pos:start="21:43" pos:end="21:50">get_bits</name><argument_list pos:start="21:51" pos:end="21:57">(<argument pos:start="21:52" pos:end="21:53"><expr pos:start="21:52" pos:end="21:53"><name pos:start="21:52" pos:end="21:53">gb</name></expr></argument>, <argument pos:start="21:56" pos:end="21:56"><expr pos:start="21:56" pos:end="21:56"><literal type="number" pos:start="21:56" pos:end="21:56">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="29:5">else <block pos:start="23:12" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:41">

        <expr_stmt pos:start="25:9" pos:end="25:59"><expr pos:start="25:9" pos:end="25:58"><name pos:start="25:9" pos:end="25:9">q</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <name pos:start="25:13" pos:end="25:58"><name pos:start="25:13" pos:end="25:24">ff_hq_quants</name><index pos:start="25:25" pos:end="25:30">[<expr pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:29">qsel</name></expr>]</index><index pos:start="25:31" pos:end="25:41">[<expr pos:start="25:32" pos:end="25:40"><name pos:start="25:32" pos:end="25:40">is_chroma</name></expr>]</index><index pos:start="25:42" pos:end="25:58">[<expr pos:start="25:43" pos:end="25:57"><call pos:start="25:43" pos:end="25:57"><name pos:start="25:43" pos:end="25:50">get_bits</name><argument_list pos:start="25:51" pos:end="25:57">(<argument pos:start="25:52" pos:end="25:53"><expr pos:start="25:52" pos:end="25:53"><name pos:start="25:52" pos:end="25:53">gb</name></expr></argument>, <argument pos:start="25:56" pos:end="25:56"><expr pos:start="25:56" pos:end="25:56"><literal type="number" pos:start="25:56" pos:end="25:56">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:41"><expr pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:13">block</name><index pos:start="27:14" pos:end="27:16">[<expr pos:start="27:15" pos:end="27:15"><literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>]</index></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:35"><name pos:start="27:20" pos:end="27:28">get_sbits</name><argument_list pos:start="27:29" pos:end="27:35">(<argument pos:start="27:30" pos:end="27:31"><expr pos:start="27:30" pos:end="27:31"><name pos:start="27:30" pos:end="27:31">gb</name></expr></argument>, <argument pos:start="27:34" pos:end="27:34"><expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">9</literal></expr></argument>)</argument_list></call> <operator pos:start="27:37" pos:end="27:38">&lt;&lt;</operator> <literal type="number" pos:start="27:40" pos:end="27:40">6</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="33:5" pos:end="47:5">for <control pos:start="33:9" pos:end="33:12">(<init pos:start="33:10" pos:end="33:10">;</init><condition pos:start="33:11" pos:end="33:11">;</condition><incr/>)</control> <block pos:start="33:14" pos:end="47:5">{<block_content pos:start="35:9" pos:end="45:14">

        <expr_stmt pos:start="35:9" pos:end="35:54"><expr pos:start="35:9" pos:end="35:53"><name pos:start="35:9" pos:end="35:11">val</name>  <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:53"><name pos:start="35:16" pos:end="35:23">get_vlc2</name><argument_list pos:start="35:24" pos:end="35:53">(<argument pos:start="35:25" pos:end="35:26"><expr pos:start="35:25" pos:end="35:26"><name pos:start="35:25" pos:end="35:26">gb</name></expr></argument>, <argument pos:start="35:29" pos:end="35:46"><expr pos:start="35:29" pos:end="35:46"><name pos:start="35:29" pos:end="35:46"><name pos:start="35:29" pos:end="35:29">c</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:40">hq_ac_vlc</name><operator pos:start="35:41" pos:end="35:41">.</operator><name pos:start="35:42" pos:end="35:46">table</name></name></expr></argument>, <argument pos:start="35:49" pos:end="35:49"><expr pos:start="35:49" pos:end="35:49"><literal type="number" pos:start="35:49" pos:end="35:49">9</literal></expr></argument>, <argument pos:start="35:52" pos:end="35:52"><expr pos:start="35:52" pos:end="35:52"><literal type="number" pos:start="35:52" pos:end="35:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:11">pos</name> <operator pos:start="37:13" pos:end="37:14">+=</operator> <name pos:start="37:16" pos:end="37:34"><name pos:start="37:16" pos:end="37:29">ff_hq_ac_skips</name><index pos:start="37:30" pos:end="37:34">[<expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:33">val</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:18"><if pos:start="39:9" pos:end="41:18">if <condition pos:start="39:12" pos:end="39:22">(<expr pos:start="39:13" pos:end="39:21"><name pos:start="39:13" pos:end="39:15">pos</name> <operator pos:start="39:17" pos:end="39:18">&gt;=</operator> <literal type="number" pos:start="39:20" pos:end="39:21">64</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:18"><block_content pos:start="41:13" pos:end="41:18">

            <break pos:start="41:13" pos:end="41:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:75"><expr pos:start="43:9" pos:end="43:74"><name pos:start="43:9" pos:end="43:36"><name pos:start="43:9" pos:end="43:13">block</name><index pos:start="43:14" pos:end="43:36">[<expr pos:start="43:15" pos:end="43:35"><name pos:start="43:15" pos:end="43:35"><name pos:start="43:15" pos:end="43:30">ff_zigzag_direct</name><index pos:start="43:31" pos:end="43:35">[<expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:34">pos</name></expr>]</index></name></expr>]</index></name> <operator pos:start="43:38" pos:end="43:38">=</operator> <operator pos:start="43:40" pos:end="43:40">(</operator><name pos:start="43:41" pos:end="43:58"><name pos:start="43:41" pos:end="43:53">ff_hq_ac_syms</name><index pos:start="43:54" pos:end="43:58">[<expr pos:start="43:55" pos:end="43:57"><name pos:start="43:55" pos:end="43:57">val</name></expr>]</index></name> <operator pos:start="43:60" pos:end="43:60">*</operator> <name pos:start="43:62" pos:end="43:67"><name pos:start="43:62" pos:end="43:62">q</name><index pos:start="43:63" pos:end="43:67">[<expr pos:start="43:64" pos:end="43:66"><name pos:start="43:64" pos:end="43:66">pos</name></expr>]</index></name><operator pos:start="43:68" pos:end="43:68">)</operator> <operator pos:start="43:70" pos:end="43:71">&gt;&gt;</operator> <literal type="number" pos:start="43:73" pos:end="43:74">12</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:14"><expr pos:start="45:9" pos:end="45:13"><name pos:start="45:9" pos:end="45:11">pos</name><operator pos:start="45:12" pos:end="45:13">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="51:5" pos:end="51:13">return <expr pos:start="51:12" pos:end="51:12"><literal type="number" pos:start="51:12" pos:end="51:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
