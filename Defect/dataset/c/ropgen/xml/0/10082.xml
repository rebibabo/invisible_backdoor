<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10082.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:26">gen_ins</name><parameter_list pos:start="1:27" pos:end="1:56">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:39">DisasContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:52">TCGMemOp</name></type> <name pos:start="1:54" pos:end="1:55">ot</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:21">

    <if_stmt pos:start="5:5" pos:end="7:23"><if pos:start="5:5" pos:end="7:23">if <condition pos:start="5:8" pos:end="5:19">(<expr pos:start="5:9" pos:end="5:18"><name pos:start="5:9" pos:end="5:18">use_icount</name></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:23"><block_content pos:start="7:9" pos:end="7:23">

        <expr_stmt pos:start="7:9" pos:end="7:23"><expr pos:start="7:9" pos:end="7:22"><call pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:20">gen_io_start</name><argument_list pos:start="7:21" pos:end="7:22">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:30"><expr pos:start="9:5" pos:end="9:29"><call pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:26">gen_string_movl_A0_EDI</name><argument_list pos:start="9:27" pos:end="9:29">(<argument pos:start="9:28" pos:end="9:28"><expr pos:start="9:28" pos:end="9:28"><name pos:start="9:28" pos:end="9:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="11:5" pos:end="13:29">/* Note: we must do this dummy write first to be restartable in

       case of page fault. */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><call pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:19">tcg_gen_movi_tl</name><argument_list pos:start="15:20" pos:end="15:32">(<argument pos:start="15:21" pos:end="15:28"><expr pos:start="15:21" pos:end="15:28"><name pos:start="15:21" pos:end="15:28"><name pos:start="15:21" pos:end="15:25">cpu_T</name><index pos:start="15:26" pos:end="15:28">[<expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="15:31" pos:end="15:31"><expr pos:start="15:31" pos:end="15:31"><literal type="number" pos:start="15:31" pos:end="15:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><call pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:15">gen_op_st_v</name><argument_list pos:start="17:16" pos:end="17:40">(<argument pos:start="17:17" pos:end="17:17"><expr pos:start="17:17" pos:end="17:17"><name pos:start="17:17" pos:end="17:17">s</name></expr></argument>, <argument pos:start="17:20" pos:end="17:21"><expr pos:start="17:20" pos:end="17:21"><name pos:start="17:20" pos:end="17:21">ot</name></expr></argument>, <argument pos:start="17:24" pos:end="17:31"><expr pos:start="17:24" pos:end="17:31"><name pos:start="17:24" pos:end="17:31"><name pos:start="17:24" pos:end="17:28">cpu_T</name><index pos:start="17:29" pos:end="17:31">[<expr pos:start="17:30" pos:end="17:30"><literal type="number" pos:start="17:30" pos:end="17:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="17:34" pos:end="17:39"><expr pos:start="17:34" pos:end="17:39"><name pos:start="17:34" pos:end="17:39">cpu_A0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:56"><expr pos:start="19:5" pos:end="19:55"><call pos:start="19:5" pos:end="19:55"><name pos:start="19:5" pos:end="19:24">tcg_gen_trunc_tl_i32</name><argument_list pos:start="19:25" pos:end="19:55">(<argument pos:start="19:26" pos:end="19:37"><expr pos:start="19:26" pos:end="19:37"><name pos:start="19:26" pos:end="19:37">cpu_tmp2_i32</name></expr></argument>, <argument pos:start="19:40" pos:end="19:54"><expr pos:start="19:40" pos:end="19:54"><name pos:start="19:40" pos:end="19:54"><name pos:start="19:40" pos:end="19:47">cpu_regs</name><index pos:start="19:48" pos:end="19:54">[<expr pos:start="19:49" pos:end="19:53"><name pos:start="19:49" pos:end="19:53">R_EDX</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:57"><expr pos:start="21:5" pos:end="21:56"><call pos:start="21:5" pos:end="21:56"><name pos:start="21:5" pos:end="21:20">tcg_gen_andi_i32</name><argument_list pos:start="21:21" pos:end="21:56">(<argument pos:start="21:22" pos:end="21:33"><expr pos:start="21:22" pos:end="21:33"><name pos:start="21:22" pos:end="21:33">cpu_tmp2_i32</name></expr></argument>, <argument pos:start="21:36" pos:end="21:47"><expr pos:start="21:36" pos:end="21:47"><name pos:start="21:36" pos:end="21:47">cpu_tmp2_i32</name></expr></argument>, <argument pos:start="21:50" pos:end="21:55"><expr pos:start="21:50" pos:end="21:55"><literal type="number" pos:start="21:50" pos:end="21:55">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><call pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:22">gen_helper_in_func</name><argument_list pos:start="23:23" pos:end="23:50">(<argument pos:start="23:24" pos:end="23:25"><expr pos:start="23:24" pos:end="23:25"><name pos:start="23:24" pos:end="23:25">ot</name></expr></argument>, <argument pos:start="23:28" pos:end="23:35"><expr pos:start="23:28" pos:end="23:35"><name pos:start="23:28" pos:end="23:35"><name pos:start="23:28" pos:end="23:32">cpu_T</name><index pos:start="23:33" pos:end="23:35">[<expr pos:start="23:34" pos:end="23:34"><literal type="number" pos:start="23:34" pos:end="23:34">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="23:38" pos:end="23:49"><expr pos:start="23:38" pos:end="23:49"><name pos:start="23:38" pos:end="23:49">cpu_tmp2_i32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><call pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:15">gen_op_st_v</name><argument_list pos:start="25:16" pos:end="25:40">(<argument pos:start="25:17" pos:end="25:17"><expr pos:start="25:17" pos:end="25:17"><name pos:start="25:17" pos:end="25:17">s</name></expr></argument>, <argument pos:start="25:20" pos:end="25:21"><expr pos:start="25:20" pos:end="25:21"><name pos:start="25:20" pos:end="25:21">ot</name></expr></argument>, <argument pos:start="25:24" pos:end="25:31"><expr pos:start="25:24" pos:end="25:31"><name pos:start="25:24" pos:end="25:31"><name pos:start="25:24" pos:end="25:28">cpu_T</name><index pos:start="25:29" pos:end="25:31">[<expr pos:start="25:30" pos:end="25:30"><literal type="number" pos:start="25:30" pos:end="25:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:34" pos:end="25:39"><expr pos:start="25:34" pos:end="25:39"><name pos:start="25:34" pos:end="25:39">cpu_A0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><call pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:25">gen_op_movl_T0_Dshift</name><argument_list pos:start="27:26" pos:end="27:29">(<argument pos:start="27:27" pos:end="27:28"><expr pos:start="27:27" pos:end="27:28"><name pos:start="27:27" pos:end="27:28">ot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><call pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:21">gen_op_add_reg_T0</name><argument_list pos:start="29:22" pos:end="29:38">(<argument pos:start="29:23" pos:end="29:30"><expr pos:start="29:23" pos:end="29:30"><name pos:start="29:23" pos:end="29:30"><name pos:start="29:23" pos:end="29:23">s</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:30">aflag</name></name></expr></argument>, <argument pos:start="29:33" pos:end="29:37"><expr pos:start="29:33" pos:end="29:37"><name pos:start="29:33" pos:end="29:37">R_EDI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="33:21"><if pos:start="31:5" pos:end="33:21">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:18">use_icount</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:21"><block_content pos:start="33:9" pos:end="33:21">

        <expr_stmt pos:start="33:9" pos:end="33:21"><expr pos:start="33:9" pos:end="33:20"><call pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:18">gen_io_end</name><argument_list pos:start="33:19" pos:end="33:20">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
