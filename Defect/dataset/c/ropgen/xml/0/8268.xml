<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8268.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">gem_write</name><parameter_list pos:start="1:22" pos:end="3:22">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:34"><name pos:start="1:23" pos:end="1:26">void</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:34">opaque</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:49"><decl pos:start="1:37" pos:end="1:49"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:42">hwaddr</name></type> <name pos:start="1:44" pos:end="1:49">offset</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:59">uint64_t</name></type> <name pos:start="1:61" pos:end="1:63">val</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:21"><decl pos:start="3:9" pos:end="3:21"><type pos:start="3:9" pos:end="3:21"><name pos:start="3:9" pos:end="3:16">unsigned</name></type> <name pos:start="3:18" pos:end="3:21">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="169:1">{<block_content pos:start="7:5" pos:end="167:50">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">GemState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:36">= <expr pos:start="7:19" pos:end="7:36"><operator pos:start="7:19" pos:end="7:19">(</operator><name pos:start="7:20" pos:end="7:27">GemState</name> <operator pos:start="7:29" pos:end="7:29">*</operator><operator pos:start="7:30" pos:end="7:30">)</operator><name pos:start="7:31" pos:end="7:36">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:21">readonly</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:79"><expr pos:start="13:5" pos:end="13:78"><call pos:start="13:5" pos:end="13:78"><name pos:start="13:5" pos:end="13:12">DB_PRINT</name><argument_list pos:start="13:13" pos:end="13:78">(<argument pos:start="13:14" pos:end="13:44"><expr pos:start="13:14" pos:end="13:44"><literal type="string" pos:start="13:14" pos:end="13:44">"offset: 0x%04x write: 0x%08x "</literal></expr></argument>, <argument pos:start="13:47" pos:end="13:62"><expr pos:start="13:47" pos:end="13:62"><operator pos:start="13:47" pos:end="13:47">(</operator><name pos:start="13:48" pos:end="13:55">unsigned</name><operator pos:start="13:56" pos:end="13:56">)</operator><name pos:start="13:57" pos:end="13:62">offset</name></expr></argument>, <argument pos:start="13:65" pos:end="13:77"><expr pos:start="13:65" pos:end="13:77"><operator pos:start="13:65" pos:end="13:65">(</operator><name pos:start="13:66" pos:end="13:73">unsigned</name><operator pos:start="13:74" pos:end="13:74">)</operator><name pos:start="13:75" pos:end="13:77">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:17"><expr pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:10">offset</name> <operator pos:start="15:12" pos:end="15:14">&gt;&gt;=</operator> <literal type="number" pos:start="15:16" pos:end="15:16">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:56">/* Squash bits which are read only in write value */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:7">val</name> <operator pos:start="21:9" pos:end="21:10">&amp;=</operator> <operator pos:start="21:12" pos:end="21:12">~</operator><operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:31"><name pos:start="21:14" pos:end="21:14">s</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:23">regs_ro</name><index pos:start="21:24" pos:end="21:31">[<expr pos:start="21:25" pos:end="21:30"><name pos:start="21:25" pos:end="21:30">offset</name></expr>]</index></name><operator pos:start="21:32" pos:end="21:32">)</operator></expr>;</expr_stmt>

    <comment type="block" pos:start="23:5" pos:end="23:70">/* Preserve (only) bits which are read only and wtc in register */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:76"><expr pos:start="25:5" pos:end="25:75"><name pos:start="25:5" pos:end="25:12">readonly</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:22">regs</name><index pos:start="25:23" pos:end="25:30">[<expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">offset</name></expr>]</index></name> <operator pos:start="25:32" pos:end="25:32">&amp;</operator> <operator pos:start="25:34" pos:end="25:34">(</operator><name pos:start="25:35" pos:end="25:52"><name pos:start="25:35" pos:end="25:35">s</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:44">regs_ro</name><index pos:start="25:45" pos:end="25:52">[<expr pos:start="25:46" pos:end="25:51"><name pos:start="25:46" pos:end="25:51">offset</name></expr>]</index></name> <operator pos:start="25:54" pos:end="25:54">|</operator> <name pos:start="25:56" pos:end="25:74"><name pos:start="25:56" pos:end="25:56">s</name><operator pos:start="25:57" pos:end="25:58">-&gt;</operator><name pos:start="25:59" pos:end="25:66">regs_w1c</name><index pos:start="25:67" pos:end="25:74">[<expr pos:start="25:68" pos:end="25:73"><name pos:start="25:68" pos:end="25:73">offset</name></expr>]</index></name><operator pos:start="25:75" pos:end="25:75">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:46">/* Copy register write to backing store */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:62"><expr pos:start="31:5" pos:end="31:61"><name pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:11">regs</name><index pos:start="31:12" pos:end="31:19">[<expr pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:18">offset</name></expr>]</index></name> <operator pos:start="31:21" pos:end="31:21">=</operator> <operator pos:start="31:23" pos:end="31:23">(</operator><name pos:start="31:24" pos:end="31:26">val</name> <operator pos:start="31:28" pos:end="31:28">&amp;</operator> <operator pos:start="31:30" pos:end="31:30">~</operator><name pos:start="31:31" pos:end="31:49"><name pos:start="31:31" pos:end="31:31">s</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:41">regs_w1c</name><index pos:start="31:42" pos:end="31:49">[<expr pos:start="31:43" pos:end="31:48"><name pos:start="31:43" pos:end="31:48">offset</name></expr>]</index></name><operator pos:start="31:50" pos:end="31:50">)</operator> <operator pos:start="31:52" pos:end="31:52">|</operator> <name pos:start="31:54" pos:end="31:61">readonly</name></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:16">/* do w1c */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:52"><expr pos:start="37:5" pos:end="37:51"><name pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:11">regs</name><index pos:start="37:12" pos:end="37:19">[<expr pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:18">offset</name></expr>]</index></name> <operator pos:start="37:21" pos:end="37:22">&amp;=</operator> <operator pos:start="37:24" pos:end="37:24">~</operator><operator pos:start="37:25" pos:end="37:25">(</operator><name pos:start="37:26" pos:end="37:44"><name pos:start="37:26" pos:end="37:26">s</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:36">regs_w1c</name><index pos:start="37:37" pos:end="37:44">[<expr pos:start="37:38" pos:end="37:43"><name pos:start="37:38" pos:end="37:43">offset</name></expr>]</index></name> <operator pos:start="37:46" pos:end="37:46">&amp;</operator> <name pos:start="37:48" pos:end="37:50">val</name><operator pos:start="37:51" pos:end="37:51">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:44">/* Handle register write side effects */</comment>

    <switch pos:start="43:5" pos:end="163:5">switch <condition pos:start="43:12" pos:end="43:19">(<expr pos:start="43:13" pos:end="43:18"><name pos:start="43:13" pos:end="43:18">offset</name></expr>)</condition> <block pos:start="43:21" pos:end="163:5">{<block_content pos:start="45:5" pos:end="161:14">

    <case pos:start="45:5" pos:end="45:20">case <expr pos:start="45:10" pos:end="45:19"><name pos:start="45:10" pos:end="45:19">GEM_NWCTRL</name></expr>:</case>

        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:35">(<expr pos:start="47:13" pos:end="47:34"><name pos:start="47:13" pos:end="47:15">val</name> <operator pos:start="47:17" pos:end="47:17">&amp;</operator> <name pos:start="47:19" pos:end="47:34">GEM_NWCTRL_RXENA</name></expr>)</condition> <block pos:start="47:37" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:31">

            <expr_stmt pos:start="49:13" pos:end="49:31"><expr pos:start="49:13" pos:end="49:30"><call pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:27">gem_get_rx_desc</name><argument_list pos:start="49:28" pos:end="49:30">(<argument pos:start="49:29" pos:end="49:29"><expr pos:start="49:29" pos:end="49:29"><name pos:start="49:29" pos:end="49:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:37">(<expr pos:start="53:13" pos:end="53:36"><name pos:start="53:13" pos:end="53:15">val</name> <operator pos:start="53:17" pos:end="53:17">&amp;</operator> <name pos:start="53:19" pos:end="53:36">GEM_NWCTRL_TXSTART</name></expr>)</condition> <block pos:start="53:39" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:28">

            <expr_stmt pos:start="55:13" pos:end="55:28"><expr pos:start="55:13" pos:end="55:27"><call pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:24">gem_transmit</name><argument_list pos:start="55:25" pos:end="55:27">(<argument pos:start="55:26" pos:end="55:26"><expr pos:start="55:26" pos:end="55:26"><name pos:start="55:26" pos:end="55:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:38">(<expr pos:start="59:13" pos:end="59:37"><operator pos:start="59:13" pos:end="59:13">!</operator><operator pos:start="59:14" pos:end="59:14">(</operator><name pos:start="59:15" pos:end="59:17">val</name> <operator pos:start="59:19" pos:end="59:19">&amp;</operator> <name pos:start="59:21" pos:end="59:36">GEM_NWCTRL_TXENA</name><operator pos:start="59:37" pos:end="59:37">)</operator></expr>)</condition> <block pos:start="59:40" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:51">

            <comment type="block" pos:start="61:13" pos:end="61:61">/* Reset to start of Q when transmit disabled. */</comment>

            <expr_stmt pos:start="63:13" pos:end="63:51"><expr pos:start="63:13" pos:end="63:50"><name pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:27">tx_desc_addr</name></name> <operator pos:start="63:29" pos:end="63:29">=</operator> <name pos:start="63:31" pos:end="63:50"><name pos:start="63:31" pos:end="63:31">s</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:37">regs</name><index pos:start="63:38" pos:end="63:50">[<expr pos:start="63:39" pos:end="63:49"><name pos:start="63:39" pos:end="63:49">GEM_TXQBASE</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="67:9" pos:end="71:9"><if pos:start="67:9" pos:end="71:9">if <condition pos:start="67:12" pos:end="67:35">(<expr pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:15">val</name> <operator pos:start="67:17" pos:end="67:17">&amp;</operator> <name pos:start="67:19" pos:end="67:34">GEM_NWCTRL_RXENA</name></expr>)</condition> <block pos:start="67:37" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:62">

            <expr_stmt pos:start="69:13" pos:end="69:62"><expr pos:start="69:13" pos:end="69:61"><call pos:start="69:13" pos:end="69:61"><name pos:start="69:13" pos:end="69:37">qemu_flush_queued_packets</name><argument_list pos:start="69:38" pos:end="69:61">(<argument pos:start="69:39" pos:end="69:60"><expr pos:start="69:39" pos:end="69:60"><call pos:start="69:39" pos:end="69:60"><name pos:start="69:39" pos:end="69:52">qemu_get_queue</name><argument_list pos:start="69:53" pos:end="69:60">(<argument pos:start="69:54" pos:end="69:59"><expr pos:start="69:54" pos:end="69:59"><name pos:start="69:54" pos:end="69:59"><name pos:start="69:54" pos:end="69:54">s</name><operator pos:start="69:55" pos:end="69:56">-&gt;</operator><name pos:start="69:57" pos:end="69:59">nic</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>



    <case pos:start="77:5" pos:end="77:22">case <expr pos:start="77:10" pos:end="77:21"><name pos:start="77:10" pos:end="77:21">GEM_TXSTATUS</name></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:33"><expr pos:start="79:9" pos:end="79:32"><call pos:start="79:9" pos:end="79:32"><name pos:start="79:9" pos:end="79:29">gem_update_int_status</name><argument_list pos:start="79:30" pos:end="79:32">(<argument pos:start="79:31" pos:end="79:31"><expr pos:start="79:31" pos:end="79:31"><name pos:start="79:31" pos:end="79:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    <case pos:start="83:5" pos:end="83:21">case <expr pos:start="83:10" pos:end="83:20"><name pos:start="83:10" pos:end="83:20">GEM_RXQBASE</name></expr>:</case>

        <expr_stmt pos:start="85:9" pos:end="85:30"><expr pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:23">rx_desc_addr</name></name> <operator pos:start="85:25" pos:end="85:25">=</operator> <name pos:start="85:27" pos:end="85:29">val</name></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:21">case <expr pos:start="89:10" pos:end="89:20"><name pos:start="89:10" pos:end="89:20">GEM_TXQBASE</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:30"><expr pos:start="91:9" pos:end="91:29"><name pos:start="91:9" pos:end="91:23"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:23">tx_desc_addr</name></name> <operator pos:start="91:25" pos:end="91:25">=</operator> <name pos:start="91:27" pos:end="91:29">val</name></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:22">case <expr pos:start="95:10" pos:end="95:21"><name pos:start="95:10" pos:end="95:21">GEM_RXSTATUS</name></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:33"><expr pos:start="97:9" pos:end="97:32"><call pos:start="97:9" pos:end="97:32"><name pos:start="97:9" pos:end="97:29">gem_update_int_status</name><argument_list pos:start="97:30" pos:end="97:32">(<argument pos:start="97:31" pos:end="97:31"><expr pos:start="97:31" pos:end="97:31"><name pos:start="97:31" pos:end="97:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:17">case <expr pos:start="101:10" pos:end="101:16"><name pos:start="101:10" pos:end="101:16">GEM_IER</name></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:33"><expr pos:start="103:9" pos:end="103:32"><name pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:15">regs</name><index pos:start="103:16" pos:end="103:24">[<expr pos:start="103:17" pos:end="103:23"><name pos:start="103:17" pos:end="103:23">GEM_IMR</name></expr>]</index></name> <operator pos:start="103:26" pos:end="103:27">&amp;=</operator> <operator pos:start="103:29" pos:end="103:29">~</operator><name pos:start="103:30" pos:end="103:32">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:33"><expr pos:start="105:9" pos:end="105:32"><call pos:start="105:9" pos:end="105:32"><name pos:start="105:9" pos:end="105:29">gem_update_int_status</name><argument_list pos:start="105:30" pos:end="105:32">(<argument pos:start="105:31" pos:end="105:31"><expr pos:start="105:31" pos:end="105:31"><name pos:start="105:31" pos:end="105:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    <case pos:start="109:5" pos:end="109:17">case <expr pos:start="109:10" pos:end="109:16"><name pos:start="109:10" pos:end="109:16">GEM_IDR</name></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:32"><expr pos:start="111:9" pos:end="111:31"><name pos:start="111:9" pos:end="111:24"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:15">regs</name><index pos:start="111:16" pos:end="111:24">[<expr pos:start="111:17" pos:end="111:23"><name pos:start="111:17" pos:end="111:23">GEM_IMR</name></expr>]</index></name> <operator pos:start="111:26" pos:end="111:27">|=</operator> <name pos:start="111:29" pos:end="111:31">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:33"><expr pos:start="113:9" pos:end="113:32"><call pos:start="113:9" pos:end="113:32"><name pos:start="113:9" pos:end="113:29">gem_update_int_status</name><argument_list pos:start="113:30" pos:end="113:32">(<argument pos:start="113:31" pos:end="113:31"><expr pos:start="113:31" pos:end="113:31"><name pos:start="113:31" pos:end="113:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:23">case <expr pos:start="117:10" pos:end="117:22"><name pos:start="117:10" pos:end="117:22">GEM_SPADDR1LO</name></expr>:</case>

    <case pos:start="119:5" pos:end="119:23">case <expr pos:start="119:10" pos:end="119:22"><name pos:start="119:10" pos:end="119:22">GEM_SPADDR2LO</name></expr>:</case>

    <case pos:start="121:5" pos:end="121:23">case <expr pos:start="121:10" pos:end="121:22"><name pos:start="121:10" pos:end="121:22">GEM_SPADDR3LO</name></expr>:</case>

    <case pos:start="123:5" pos:end="123:23">case <expr pos:start="123:10" pos:end="123:22"><name pos:start="123:10" pos:end="123:22">GEM_SPADDR4LO</name></expr>:</case>

        <expr_stmt pos:start="125:9" pos:end="125:60"><expr pos:start="125:9" pos:end="125:59"><name pos:start="125:9" pos:end="125:51"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:21">sar_active</name><index pos:start="125:22" pos:end="125:51">[<expr pos:start="125:23" pos:end="125:50"><operator pos:start="125:23" pos:end="125:23">(</operator><name pos:start="125:24" pos:end="125:29">offset</name> <operator pos:start="125:31" pos:end="125:31">-</operator> <name pos:start="125:33" pos:end="125:45">GEM_SPADDR1LO</name><operator pos:start="125:46" pos:end="125:46">)</operator> <operator pos:start="125:48" pos:end="125:48">/</operator> <literal type="number" pos:start="125:50" pos:end="125:50">2</literal></expr>]</index></name> <operator pos:start="125:53" pos:end="125:53">=</operator> <name pos:start="125:55" pos:end="125:59">false</name></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>

    <case pos:start="129:5" pos:end="129:23">case <expr pos:start="129:10" pos:end="129:22"><name pos:start="129:10" pos:end="129:22">GEM_SPADDR1HI</name></expr>:</case>

    <case pos:start="131:5" pos:end="131:23">case <expr pos:start="131:10" pos:end="131:22"><name pos:start="131:10" pos:end="131:22">GEM_SPADDR2HI</name></expr>:</case>

    <case pos:start="133:5" pos:end="133:23">case <expr pos:start="133:10" pos:end="133:22"><name pos:start="133:10" pos:end="133:22">GEM_SPADDR3HI</name></expr>:</case>

    <case pos:start="135:5" pos:end="135:23">case <expr pos:start="135:10" pos:end="135:22"><name pos:start="135:10" pos:end="135:22">GEM_SPADDR4HI</name></expr>:</case>

        <expr_stmt pos:start="137:9" pos:end="137:59"><expr pos:start="137:9" pos:end="137:58"><name pos:start="137:9" pos:end="137:51"><name pos:start="137:9" pos:end="137:9">s</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:21">sar_active</name><index pos:start="137:22" pos:end="137:51">[<expr pos:start="137:23" pos:end="137:50"><operator pos:start="137:23" pos:end="137:23">(</operator><name pos:start="137:24" pos:end="137:29">offset</name> <operator pos:start="137:31" pos:end="137:31">-</operator> <name pos:start="137:33" pos:end="137:45">GEM_SPADDR1HI</name><operator pos:start="137:46" pos:end="137:46">)</operator> <operator pos:start="137:48" pos:end="137:48">/</operator> <literal type="number" pos:start="137:50" pos:end="137:50">2</literal></expr>]</index></name> <operator pos:start="137:53" pos:end="137:53">=</operator> <name pos:start="137:55" pos:end="137:58">true</name></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    <case pos:start="141:5" pos:end="141:22">case <expr pos:start="141:10" pos:end="141:21"><name pos:start="141:10" pos:end="141:21">GEM_PHYMNTNC</name></expr>:</case>

        <if_stmt pos:start="143:9" pos:end="159:9"><if pos:start="143:9" pos:end="159:9">if <condition pos:start="143:12" pos:end="143:36">(<expr pos:start="143:13" pos:end="143:35"><name pos:start="143:13" pos:end="143:15">val</name> <operator pos:start="143:17" pos:end="143:17">&amp;</operator> <name pos:start="143:19" pos:end="143:35">GEM_PHYMNTNC_OP_W</name></expr>)</condition> <block pos:start="143:38" pos:end="159:9">{<block_content pos:start="145:13" pos:end="157:13">

            <decl_stmt pos:start="145:13" pos:end="145:39"><decl pos:start="145:13" pos:end="145:29"><type pos:start="145:13" pos:end="145:20"><name pos:start="145:13" pos:end="145:20">uint32_t</name></type> <name pos:start="145:22" pos:end="145:29">phy_addr</name></decl>, <decl pos:start="145:32" pos:end="145:38"><type ref="prev" pos:start="145:13" pos:end="145:20"/><name pos:start="145:32" pos:end="145:38">reg_num</name></decl>;</decl_stmt>



            <expr_stmt pos:start="149:13" pos:end="149:75"><expr pos:start="149:13" pos:end="149:74"><name pos:start="149:13" pos:end="149:20">phy_addr</name> <operator pos:start="149:22" pos:end="149:22">=</operator> <operator pos:start="149:24" pos:end="149:24">(</operator><name pos:start="149:25" pos:end="149:27">val</name> <operator pos:start="149:29" pos:end="149:29">&amp;</operator> <name pos:start="149:31" pos:end="149:47">GEM_PHYMNTNC_ADDR</name><operator pos:start="149:48" pos:end="149:48">)</operator> <operator pos:start="149:50" pos:end="149:51">&gt;&gt;</operator> <name pos:start="149:53" pos:end="149:74">GEM_PHYMNTNC_ADDR_SHFT</name></expr>;</expr_stmt>

            <if_stmt pos:start="151:13" pos:end="157:13"><if pos:start="151:13" pos:end="157:13">if <condition pos:start="151:16" pos:end="151:46">(<expr pos:start="151:17" pos:end="151:45"><name pos:start="151:17" pos:end="151:24">phy_addr</name> <operator pos:start="151:26" pos:end="151:27">==</operator> <name pos:start="151:29" pos:end="151:45">BOARD_PHY_ADDRESS</name></expr>)</condition> <block pos:start="151:48" pos:end="157:13">{<block_content pos:start="153:17" pos:end="155:47">

                <expr_stmt pos:start="153:17" pos:end="153:77"><expr pos:start="153:17" pos:end="153:76"><name pos:start="153:17" pos:end="153:23">reg_num</name> <operator pos:start="153:25" pos:end="153:25">=</operator> <operator pos:start="153:27" pos:end="153:27">(</operator><name pos:start="153:28" pos:end="153:30">val</name> <operator pos:start="153:32" pos:end="153:32">&amp;</operator> <name pos:start="153:34" pos:end="153:49">GEM_PHYMNTNC_REG</name><operator pos:start="153:50" pos:end="153:50">)</operator> <operator pos:start="153:52" pos:end="153:53">&gt;&gt;</operator> <name pos:start="153:55" pos:end="153:76">GEM_PHYMNTNC_REG_SHIFT</name></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:47"><expr pos:start="155:17" pos:end="155:46"><call pos:start="155:17" pos:end="155:46"><name pos:start="155:17" pos:end="155:29">gem_phy_write</name><argument_list pos:start="155:30" pos:end="155:46">(<argument pos:start="155:31" pos:end="155:31"><expr pos:start="155:31" pos:end="155:31"><name pos:start="155:31" pos:end="155:31">s</name></expr></argument>, <argument pos:start="155:34" pos:end="155:40"><expr pos:start="155:34" pos:end="155:40"><name pos:start="155:34" pos:end="155:40">reg_num</name></expr></argument>, <argument pos:start="155:43" pos:end="155:45"><expr pos:start="155:43" pos:end="155:45"><name pos:start="155:43" pos:end="155:45">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="167:5" pos:end="167:50"><expr pos:start="167:5" pos:end="167:49"><call pos:start="167:5" pos:end="167:49"><name pos:start="167:5" pos:end="167:12">DB_PRINT</name><argument_list pos:start="167:13" pos:end="167:49">(<argument pos:start="167:14" pos:end="167:31"><expr pos:start="167:14" pos:end="167:31"><literal type="string" pos:start="167:14" pos:end="167:31">"newval: 0x%08x\n"</literal></expr></argument>, <argument pos:start="167:34" pos:end="167:48"><expr pos:start="167:34" pos:end="167:48"><name pos:start="167:34" pos:end="167:48"><name pos:start="167:34" pos:end="167:34">s</name><operator pos:start="167:35" pos:end="167:36">-&gt;</operator><name pos:start="167:37" pos:end="167:40">regs</name><index pos:start="167:41" pos:end="167:48">[<expr pos:start="167:42" pos:end="167:47"><name pos:start="167:42" pos:end="167:47">offset</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
