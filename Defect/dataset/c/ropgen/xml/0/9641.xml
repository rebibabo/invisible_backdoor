<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9641.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">vfio_mmap_bar</name><parameter_list pos:start="1:25" pos:end="5:42">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:32">VFIOBAR</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">bar</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:51">MemoryRegion</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">mem</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:78"><decl pos:start="1:59" pos:end="1:78"><type pos:start="1:59" pos:end="1:78"><name pos:start="1:59" pos:end="1:70">MemoryRegion</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:78">submem</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:35"><decl pos:start="3:26" pos:end="3:35"><type pos:start="3:26" pos:end="3:35"><name pos:start="3:26" pos:end="3:29">void</name> <modifier pos:start="3:31" pos:end="3:31">*</modifier><modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:35">map</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:48"><decl pos:start="3:38" pos:end="3:48"><type pos:start="3:38" pos:end="3:48"><name pos:start="3:38" pos:end="3:43">size_t</name></type> <name pos:start="3:45" pos:end="3:48">size</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:62"><decl pos:start="3:51" pos:end="3:62"><type pos:start="3:51" pos:end="3:62"><name pos:start="3:51" pos:end="3:55">off_t</name></type> <name pos:start="3:57" pos:end="3:62">offset</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:41"><decl pos:start="5:26" pos:end="5:41"><type pos:start="5:26" pos:end="5:41"><specifier pos:start="5:26" pos:end="5:30">const</specifier> <name pos:start="5:32" pos:end="5:35">char</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:41">name</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="71:1">{<block_content pos:start="9:5" pos:end="69:15">

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="61:5"><if pos:start="13:5" pos:end="53:5">if <condition pos:start="13:8" pos:end="13:56">(<expr pos:start="13:9" pos:end="13:55"><name pos:start="13:9" pos:end="13:12">size</name> <operator pos:start="13:14" pos:end="13:15">&amp;&amp;</operator> <name pos:start="13:17" pos:end="13:26"><name pos:start="13:17" pos:end="13:19">bar</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:26">flags</name></name> <operator pos:start="13:28" pos:end="13:28">&amp;</operator> <name pos:start="13:30" pos:end="13:55">VFIO_REGION_INFO_FLAG_MMAP</name></expr>)</condition> <block pos:start="13:58" pos:end="53:5">{<block_content pos:start="15:9" pos:end="51:61">

        <decl_stmt pos:start="15:9" pos:end="15:21"><decl pos:start="15:9" pos:end="15:20"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:16">prot</name> <init pos:start="15:18" pos:end="15:20">= <expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:52">(<expr pos:start="19:13" pos:end="19:51"><name pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:15">bar</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:22">flags</name></name> <operator pos:start="19:24" pos:end="19:24">&amp;</operator> <name pos:start="19:26" pos:end="19:51">VFIO_REGION_INFO_FLAG_READ</name></expr>)</condition> <block pos:start="19:54" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:30">

            <expr_stmt pos:start="21:13" pos:end="21:30"><expr pos:start="21:13" pos:end="21:29"><name pos:start="21:13" pos:end="21:16">prot</name> <operator pos:start="21:18" pos:end="21:19">|=</operator> <name pos:start="21:21" pos:end="21:29">PROT_READ</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:53">(<expr pos:start="27:13" pos:end="27:52"><name pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:15">bar</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:22">flags</name></name> <operator pos:start="27:24" pos:end="27:24">&amp;</operator> <name pos:start="27:26" pos:end="27:52">VFIO_REGION_INFO_FLAG_WRITE</name></expr>)</condition> <block pos:start="27:55" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:31">

            <expr_stmt pos:start="29:13" pos:end="29:31"><expr pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:16">prot</name> <operator pos:start="29:18" pos:end="29:19">|=</operator> <name pos:start="29:21" pos:end="29:30">PROT_WRITE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="37:54"><expr pos:start="35:9" pos:end="37:53"><operator pos:start="35:9" pos:end="35:9">*</operator><name pos:start="35:10" pos:end="35:12">map</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="37:53"><name pos:start="35:16" pos:end="35:19">mmap</name><argument_list pos:start="35:20" pos:end="37:53">(<argument pos:start="35:21" pos:end="35:24"><expr pos:start="35:21" pos:end="35:24"><name pos:start="35:21" pos:end="35:24">NULL</name></expr></argument>, <argument pos:start="35:27" pos:end="35:30"><expr pos:start="35:27" pos:end="35:30"><name pos:start="35:27" pos:end="35:30">size</name></expr></argument>, <argument pos:start="35:33" pos:end="35:36"><expr pos:start="35:33" pos:end="35:36"><name pos:start="35:33" pos:end="35:36">prot</name></expr></argument>, <argument pos:start="35:39" pos:end="35:48"><expr pos:start="35:39" pos:end="35:48"><name pos:start="35:39" pos:end="35:48">MAP_SHARED</name></expr></argument>,

                    <argument pos:start="37:21" pos:end="37:27"><expr pos:start="37:21" pos:end="37:27"><name pos:start="37:21" pos:end="37:27"><name pos:start="37:21" pos:end="37:23">bar</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:27">fd</name></name></expr></argument>, <argument pos:start="37:30" pos:end="37:52"><expr pos:start="37:30" pos:end="37:52"><name pos:start="37:30" pos:end="37:43"><name pos:start="37:30" pos:end="37:32">bar</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:43">fd_offset</name></name> <operator pos:start="37:45" pos:end="37:45">+</operator> <name pos:start="37:47" pos:end="37:52">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="47:9">if <condition pos:start="39:12" pos:end="39:31">(<expr pos:start="39:13" pos:end="39:30"><operator pos:start="39:13" pos:end="39:13">*</operator><name pos:start="39:14" pos:end="39:16">map</name> <operator pos:start="39:18" pos:end="39:19">==</operator> <name pos:start="39:21" pos:end="39:30">MAP_FAILED</name></expr>)</condition> <block pos:start="39:33" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:30">

            <expr_stmt pos:start="41:13" pos:end="41:24"><expr pos:start="41:13" pos:end="41:23"><operator pos:start="41:13" pos:end="41:13">*</operator><name pos:start="41:14" pos:end="41:16">map</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <name pos:start="41:20" pos:end="41:23">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:25"><expr pos:start="43:13" pos:end="43:24"><name pos:start="43:13" pos:end="43:15">ret</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <operator pos:start="43:19" pos:end="43:19">-</operator><name pos:start="43:20" pos:end="43:24">errno</name></expr>;</expr_stmt>

            <goto pos:start="45:13" pos:end="45:30">goto <name pos:start="45:18" pos:end="45:29">empty_region</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:61"><expr pos:start="51:9" pos:end="51:60"><call pos:start="51:9" pos:end="51:60"><name pos:start="51:9" pos:end="51:34">memory_region_init_ram_ptr</name><argument_list pos:start="51:35" pos:end="51:60">(<argument pos:start="51:36" pos:end="51:41"><expr pos:start="51:36" pos:end="51:41"><name pos:start="51:36" pos:end="51:41">submem</name></expr></argument>, <argument pos:start="51:44" pos:end="51:47"><expr pos:start="51:44" pos:end="51:47"><name pos:start="51:44" pos:end="51:47">name</name></expr></argument>, <argument pos:start="51:50" pos:end="51:53"><expr pos:start="51:50" pos:end="51:53"><name pos:start="51:50" pos:end="51:53">size</name></expr></argument>, <argument pos:start="51:56" pos:end="51:59"><expr pos:start="51:56" pos:end="51:59"><operator pos:start="51:56" pos:end="51:56">*</operator><name pos:start="51:57" pos:end="51:59">map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="61:5">else <block pos:start="53:12" pos:end="61:5">{<block_content pos:start="55:1" pos:end="59:44">

<label pos:start="55:1" pos:end="55:13"><name pos:start="55:1" pos:end="55:12">empty_region</name>:</label>

        <comment type="block" pos:start="57:9" pos:end="57:66">/* Create a zero sized sub-region to make cleanup easy. */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:44"><expr pos:start="59:9" pos:end="59:43"><call pos:start="59:9" pos:end="59:43"><name pos:start="59:9" pos:end="59:26">memory_region_init</name><argument_list pos:start="59:27" pos:end="59:43">(<argument pos:start="59:28" pos:end="59:33"><expr pos:start="59:28" pos:end="59:33"><name pos:start="59:28" pos:end="59:33">submem</name></expr></argument>, <argument pos:start="59:36" pos:end="59:39"><expr pos:start="59:36" pos:end="59:39"><name pos:start="59:36" pos:end="59:39">name</name></expr></argument>, <argument pos:start="59:42" pos:end="59:42"><expr pos:start="59:42" pos:end="59:42"><literal type="number" pos:start="59:42" pos:end="59:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:53"><expr pos:start="65:5" pos:end="65:52"><call pos:start="65:5" pos:end="65:52"><name pos:start="65:5" pos:end="65:31">memory_region_add_subregion</name><argument_list pos:start="65:32" pos:end="65:52">(<argument pos:start="65:33" pos:end="65:35"><expr pos:start="65:33" pos:end="65:35"><name pos:start="65:33" pos:end="65:35">mem</name></expr></argument>, <argument pos:start="65:38" pos:end="65:43"><expr pos:start="65:38" pos:end="65:43"><name pos:start="65:38" pos:end="65:43">offset</name></expr></argument>, <argument pos:start="65:46" pos:end="65:51"><expr pos:start="65:46" pos:end="65:51"><name pos:start="65:46" pos:end="65:51">submem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="69:5" pos:end="69:15">return <expr pos:start="69:12" pos:end="69:14"><name pos:start="69:12" pos:end="69:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
