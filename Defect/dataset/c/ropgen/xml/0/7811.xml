<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7811.c" pos:tabs="8"><function pos:start="1:1" pos:end="289:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">mkv_write_track</name><parameter_list pos:start="1:27" pos:end="3:50">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:70"><decl pos:start="1:48" pos:end="1:70"><type pos:start="1:48" pos:end="1:70"><name pos:start="1:48" pos:end="1:65">MatroskaMuxContext</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">mkv</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:32"><decl pos:start="3:28" pos:end="3:32"><type pos:start="3:28" pos:end="3:32"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:32">i</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:49"><decl pos:start="3:35" pos:end="3:49"><type pos:start="3:35" pos:end="3:49"><name pos:start="3:35" pos:end="3:45">AVIOContext</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:49">pb</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="289:1">{<block_content pos:start="7:5" pos:end="287:13">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:32">= <expr pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:20">s</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:29">streams</name><index pos:start="7:30" pos:end="7:32">[<expr pos:start="7:31" pos:end="7:31"><name pos:start="7:31" pos:end="7:31">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">codec</name> <init pos:start="9:27" pos:end="9:37">= <expr pos:start="9:29" pos:end="9:37"><name pos:start="9:29" pos:end="9:37"><name pos:start="9:29" pos:end="9:30">st</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:37">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15">ebml_master</name></type> <name pos:start="11:17" pos:end="11:23">subinfo</name></decl>, <decl pos:start="11:26" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:15"/><name pos:start="11:26" pos:end="11:30">track</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">native_id</name> <init pos:start="13:19" pos:end="13:21">= <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">qt_id</name> <init pos:start="15:15" pos:end="15:17">= <expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:60"><decl pos:start="17:5" pos:end="17:59"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">bit_depth</name> <init pos:start="17:19" pos:end="17:59">= <expr pos:start="17:21" pos:end="17:59"><call pos:start="17:21" pos:end="17:59"><name pos:start="17:21" pos:end="17:42">av_get_bits_per_sample</name><argument_list pos:start="17:43" pos:end="17:59">(<argument pos:start="17:44" pos:end="17:58"><expr pos:start="17:44" pos:end="17:58"><name pos:start="17:44" pos:end="17:58"><name pos:start="17:44" pos:end="17:48">codec</name><operator pos:start="17:49" pos:end="17:50">-&gt;</operator><name pos:start="17:51" pos:end="17:58">codec_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:41"><decl pos:start="19:5" pos:end="19:40"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:19">sample_rate</name> <init pos:start="19:21" pos:end="19:40">= <expr pos:start="19:23" pos:end="19:40"><name pos:start="19:23" pos:end="19:40"><name pos:start="19:23" pos:end="19:27">codec</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:40">sample_rate</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:31"><decl pos:start="21:5" pos:end="21:30"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:26">output_sample_rate</name> <init pos:start="21:28" pos:end="21:30">= <expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:15"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">j</name></decl>, <decl pos:start="23:12" pos:end="23:14"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:27"><decl pos:start="25:5" pos:end="25:26"><type pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:21">AVDictionaryEntry</name> <modifier pos:start="25:23" pos:end="25:23">*</modifier></type><name pos:start="25:24" pos:end="25:26">tag</name></decl>;</decl_stmt>



    <comment type="line" pos:start="29:5" pos:end="29:68">// ms precision is the de-facto standard timescale for mkv files</comment>

    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><call pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:23">avpriv_set_pts_info</name><argument_list pos:start="31:24" pos:end="31:40">(<argument pos:start="31:25" pos:end="31:26"><expr pos:start="31:25" pos:end="31:26"><name pos:start="31:25" pos:end="31:26">st</name></expr></argument>, <argument pos:start="31:29" pos:end="31:30"><expr pos:start="31:29" pos:end="31:30"><literal type="number" pos:start="31:29" pos:end="31:30">64</literal></expr></argument>, <argument pos:start="31:33" pos:end="31:33"><expr pos:start="31:33" pos:end="31:33"><literal type="number" pos:start="31:33" pos:end="31:33">1</literal></expr></argument>, <argument pos:start="31:36" pos:end="31:39"><expr pos:start="31:36" pos:end="31:39"><literal type="number" pos:start="31:36" pos:end="31:39">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:53">(<expr pos:start="35:9" pos:end="35:52"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:13">codec</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:25">codec_type</name></name> <operator pos:start="35:27" pos:end="35:28">==</operator> <name pos:start="35:30" pos:end="35:52">AVMEDIA_TYPE_ATTACHMENT</name></expr>)</condition> <block pos:start="35:55" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:17">

        <expr_stmt pos:start="37:9" pos:end="37:34"><expr pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:11">mkv</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:29">have_attachments</name></name> <operator pos:start="37:31" pos:end="37:31">=</operator> <literal type="number" pos:start="37:33" pos:end="37:33">1</literal></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="47:68"><if pos:start="45:5" pos:end="47:68">if <condition pos:start="45:8" pos:end="45:19">(<expr pos:start="45:9" pos:end="45:18"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:18">bit_depth</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:68"><block_content pos:start="47:9" pos:end="47:68">

        <expr_stmt pos:start="47:9" pos:end="47:68"><expr pos:start="47:9" pos:end="47:67"><name pos:start="47:9" pos:end="47:17">bit_depth</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <call pos:start="47:21" pos:end="47:62"><name pos:start="47:21" pos:end="47:43">av_get_bytes_per_sample</name><argument_list pos:start="47:44" pos:end="47:62">(<argument pos:start="47:45" pos:end="47:61"><expr pos:start="47:45" pos:end="47:61"><name pos:start="47:45" pos:end="47:61"><name pos:start="47:45" pos:end="47:49">codec</name><operator pos:start="47:50" pos:end="47:51">-&gt;</operator><name pos:start="47:52" pos:end="47:61">sample_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="47:64" pos:end="47:65">&lt;&lt;</operator> <literal type="number" pos:start="47:67" pos:end="47:67">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="53:74"><if pos:start="51:5" pos:end="53:74">if <condition pos:start="51:8" pos:end="51:43">(<expr pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:13">codec</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:23">codec_id</name></name> <operator pos:start="51:25" pos:end="51:26">==</operator> <name pos:start="51:28" pos:end="51:42">AV_CODEC_ID_AAC</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:74"><block_content pos:start="53:9" pos:end="53:74">

        <expr_stmt pos:start="53:9" pos:end="53:74"><expr pos:start="53:9" pos:end="53:73"><call pos:start="53:9" pos:end="53:73"><name pos:start="53:9" pos:end="53:28">get_aac_sample_rates</name><argument_list pos:start="53:29" pos:end="53:73">(<argument pos:start="53:30" pos:end="53:30"><expr pos:start="53:30" pos:end="53:30"><name pos:start="53:30" pos:end="53:30">s</name></expr></argument>, <argument pos:start="53:33" pos:end="53:37"><expr pos:start="53:33" pos:end="53:37"><name pos:start="53:33" pos:end="53:37">codec</name></expr></argument>, <argument pos:start="53:40" pos:end="53:51"><expr pos:start="53:40" pos:end="53:51"><operator pos:start="53:40" pos:end="53:40">&amp;</operator><name pos:start="53:41" pos:end="53:51">sample_rate</name></expr></argument>, <argument pos:start="53:54" pos:end="53:72"><expr pos:start="53:54" pos:end="53:72"><operator pos:start="53:54" pos:end="53:54">&amp;</operator><name pos:start="53:55" pos:end="53:72">output_sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:61"><expr pos:start="57:5" pos:end="57:60"><name pos:start="57:5" pos:end="57:9">track</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <call pos:start="57:13" pos:end="57:60"><name pos:start="57:13" pos:end="57:29">start_ebml_master</name><argument_list pos:start="57:30" pos:end="57:60">(<argument pos:start="57:31" pos:end="57:32"><expr pos:start="57:31" pos:end="57:32"><name pos:start="57:31" pos:end="57:32">pb</name></expr></argument>, <argument pos:start="57:35" pos:end="57:56"><expr pos:start="57:35" pos:end="57:56"><name pos:start="57:35" pos:end="57:56">MATROSKA_ID_TRACKENTRY</name></expr></argument>, <argument pos:start="57:59" pos:end="57:59"><expr pos:start="57:59" pos:end="57:59"><literal type="number" pos:start="57:59" pos:end="57:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:60"><expr pos:start="59:5" pos:end="59:59"><call pos:start="59:5" pos:end="59:59"><name pos:start="59:5" pos:end="59:17">put_ebml_uint</name> <argument_list pos:start="59:19" pos:end="59:59">(<argument pos:start="59:20" pos:end="59:21"><expr pos:start="59:20" pos:end="59:21"><name pos:start="59:20" pos:end="59:21">pb</name></expr></argument>, <argument pos:start="59:24" pos:end="59:46"><expr pos:start="59:24" pos:end="59:46"><name pos:start="59:24" pos:end="59:46">MATROSKA_ID_TRACKNUMBER</name></expr></argument>     , <argument pos:start="59:54" pos:end="59:58"><expr pos:start="59:54" pos:end="59:58"><name pos:start="59:54" pos:end="59:54">i</name> <operator pos:start="59:56" pos:end="59:56">+</operator> <literal type="number" pos:start="59:58" pos:end="59:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:60"><expr pos:start="61:5" pos:end="61:59"><call pos:start="61:5" pos:end="61:59"><name pos:start="61:5" pos:end="61:17">put_ebml_uint</name> <argument_list pos:start="61:19" pos:end="61:59">(<argument pos:start="61:20" pos:end="61:21"><expr pos:start="61:20" pos:end="61:21"><name pos:start="61:20" pos:end="61:21">pb</name></expr></argument>, <argument pos:start="61:24" pos:end="61:43"><expr pos:start="61:24" pos:end="61:43"><name pos:start="61:24" pos:end="61:43">MATROSKA_ID_TRACKUID</name></expr></argument>        , <argument pos:start="61:54" pos:end="61:58"><expr pos:start="61:54" pos:end="61:58"><name pos:start="61:54" pos:end="61:54">i</name> <operator pos:start="61:56" pos:end="61:56">+</operator> <literal type="number" pos:start="61:58" pos:end="61:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:56"><expr pos:start="63:5" pos:end="63:55"><call pos:start="63:5" pos:end="63:55"><name pos:start="63:5" pos:end="63:17">put_ebml_uint</name> <argument_list pos:start="63:19" pos:end="63:55">(<argument pos:start="63:20" pos:end="63:21"><expr pos:start="63:20" pos:end="63:21"><name pos:start="63:20" pos:end="63:21">pb</name></expr></argument>, <argument pos:start="63:24" pos:end="63:50"><expr pos:start="63:24" pos:end="63:50"><name pos:start="63:24" pos:end="63:50">MATROSKA_ID_TRACKFLAGLACING</name></expr></argument> , <argument pos:start="63:54" pos:end="63:54"><expr pos:start="63:54" pos:end="63:54"><literal type="number" pos:start="63:54" pos:end="63:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="line" pos:start="63:61" pos:end="63:78">// no lacing (yet)</comment>



    <if_stmt pos:start="67:5" pos:end="69:63"><if pos:start="67:5" pos:end="69:63">if <condition pos:start="67:8" pos:end="67:60">(<expr pos:start="67:9" pos:end="67:59"><operator pos:start="67:9" pos:end="67:9">(</operator><name pos:start="67:10" pos:end="67:12">tag</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <call pos:start="67:16" pos:end="67:58"><name pos:start="67:16" pos:end="67:26">av_dict_get</name><argument_list pos:start="67:27" pos:end="67:58">(<argument pos:start="67:28" pos:end="67:39"><expr pos:start="67:28" pos:end="67:39"><name pos:start="67:28" pos:end="67:39"><name pos:start="67:28" pos:end="67:29">st</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:39">metadata</name></name></expr></argument>, <argument pos:start="67:42" pos:end="67:48"><expr pos:start="67:42" pos:end="67:48"><literal type="string" pos:start="67:42" pos:end="67:48">"title"</literal></expr></argument>, <argument pos:start="67:51" pos:end="67:54"><expr pos:start="67:51" pos:end="67:54"><name pos:start="67:51" pos:end="67:54">NULL</name></expr></argument>, <argument pos:start="67:57" pos:end="67:57"><expr pos:start="67:57" pos:end="67:57"><literal type="number" pos:start="67:57" pos:end="67:57">0</literal></expr></argument>)</argument_list></call><operator pos:start="67:59" pos:end="67:59">)</operator></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:63"><block_content pos:start="69:9" pos:end="69:63">

        <expr_stmt pos:start="69:9" pos:end="69:63"><expr pos:start="69:9" pos:end="69:62"><call pos:start="69:9" pos:end="69:62"><name pos:start="69:9" pos:end="69:23">put_ebml_string</name><argument_list pos:start="69:24" pos:end="69:62">(<argument pos:start="69:25" pos:end="69:26"><expr pos:start="69:25" pos:end="69:26"><name pos:start="69:25" pos:end="69:26">pb</name></expr></argument>, <argument pos:start="69:29" pos:end="69:49"><expr pos:start="69:29" pos:end="69:49"><name pos:start="69:29" pos:end="69:49">MATROSKA_ID_TRACKNAME</name></expr></argument>, <argument pos:start="69:52" pos:end="69:61"><expr pos:start="69:52" pos:end="69:61"><name pos:start="69:52" pos:end="69:61"><name pos:start="69:52" pos:end="69:54">tag</name><operator pos:start="69:55" pos:end="69:56">-&gt;</operator><name pos:start="69:57" pos:end="69:61">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:57"><expr pos:start="71:5" pos:end="71:56"><name pos:start="71:5" pos:end="71:7">tag</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <call pos:start="71:11" pos:end="71:56"><name pos:start="71:11" pos:end="71:21">av_dict_get</name><argument_list pos:start="71:22" pos:end="71:56">(<argument pos:start="71:23" pos:end="71:34"><expr pos:start="71:23" pos:end="71:34"><name pos:start="71:23" pos:end="71:34"><name pos:start="71:23" pos:end="71:24">st</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:34">metadata</name></name></expr></argument>, <argument pos:start="71:37" pos:end="71:46"><expr pos:start="71:37" pos:end="71:46"><literal type="string" pos:start="71:37" pos:end="71:46">"language"</literal></expr></argument>, <argument pos:start="71:49" pos:end="71:52"><expr pos:start="71:49" pos:end="71:52"><name pos:start="71:49" pos:end="71:52">NULL</name></expr></argument>, <argument pos:start="71:55" pos:end="71:55"><expr pos:start="71:55" pos:end="71:55"><literal type="number" pos:start="71:55" pos:end="71:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:75"><expr pos:start="73:5" pos:end="73:74"><call pos:start="73:5" pos:end="73:74"><name pos:start="73:5" pos:end="73:19">put_ebml_string</name><argument_list pos:start="73:20" pos:end="73:74">(<argument pos:start="73:21" pos:end="73:22"><expr pos:start="73:21" pos:end="73:22"><name pos:start="73:21" pos:end="73:22">pb</name></expr></argument>, <argument pos:start="73:25" pos:end="73:49"><expr pos:start="73:25" pos:end="73:49"><name pos:start="73:25" pos:end="73:49">MATROSKA_ID_TRACKLANGUAGE</name></expr></argument>, <argument pos:start="73:52" pos:end="73:73"><expr pos:start="73:52" pos:end="73:73"><ternary pos:start="73:52" pos:end="73:73"><condition pos:start="73:52" pos:end="73:56"><expr pos:start="73:52" pos:end="73:54"><name pos:start="73:52" pos:end="73:54">tag</name></expr> ?</condition><then pos:start="73:58" pos:end="73:67"> <expr pos:start="73:58" pos:end="73:67"><name pos:start="73:58" pos:end="73:67"><name pos:start="73:58" pos:end="73:60">tag</name><operator pos:start="73:61" pos:end="73:62">-&gt;</operator><name pos:start="73:63" pos:end="73:67">value</name></name></expr></then><else pos:start="73:68" pos:end="73:73">:<expr pos:start="73:69" pos:end="73:73"><literal type="string" pos:start="73:69" pos:end="73:73">"und"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="77:5" pos:end="77:66">// The default value for TRACKFLAGDEFAULT is 1, so add element</comment>

    <comment type="line" pos:start="79:5" pos:end="79:30">// if we need to clear it.</comment>

    <if_stmt pos:start="81:5" pos:end="83:102"><if pos:start="81:5" pos:end="83:102">if <condition pos:start="81:8" pos:end="81:52">(<expr pos:start="81:9" pos:end="81:51"><operator pos:start="81:9" pos:end="81:9">!</operator><operator pos:start="81:10" pos:end="81:10">(</operator><name pos:start="81:11" pos:end="81:25"><name pos:start="81:11" pos:end="81:12">st</name><operator pos:start="81:13" pos:end="81:14">-&gt;</operator><name pos:start="81:15" pos:end="81:25">disposition</name></name> <operator pos:start="81:27" pos:end="81:27">&amp;</operator> <name pos:start="81:29" pos:end="81:50">AV_DISPOSITION_DEFAULT</name><operator pos:start="81:51" pos:end="81:51">)</operator></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:102"><block_content pos:start="83:9" pos:end="83:102">

        <expr_stmt pos:start="83:9" pos:end="83:102"><expr pos:start="83:9" pos:end="83:101"><call pos:start="83:9" pos:end="83:101"><name pos:start="83:9" pos:end="83:21">put_ebml_uint</name><argument_list pos:start="83:22" pos:end="83:101">(<argument pos:start="83:23" pos:end="83:24"><expr pos:start="83:23" pos:end="83:24"><name pos:start="83:23" pos:end="83:24">pb</name></expr></argument>, <argument pos:start="83:27" pos:end="83:54"><expr pos:start="83:27" pos:end="83:54"><name pos:start="83:27" pos:end="83:54">MATROSKA_ID_TRACKFLAGDEFAULT</name></expr></argument>, <argument pos:start="83:57" pos:end="83:100"><expr pos:start="83:57" pos:end="83:100"><operator pos:start="83:57" pos:end="83:57">!</operator><operator pos:start="83:58" pos:end="83:58">!</operator><operator pos:start="83:59" pos:end="83:59">(</operator><name pos:start="83:60" pos:end="83:74"><name pos:start="83:60" pos:end="83:61">st</name><operator pos:start="83:62" pos:end="83:63">-&gt;</operator><name pos:start="83:64" pos:end="83:74">disposition</name></name> <operator pos:start="83:76" pos:end="83:76">&amp;</operator> <name pos:start="83:78" pos:end="83:99">AV_DISPOSITION_DEFAULT</name><operator pos:start="83:100" pos:end="83:100">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="105:5"><if pos:start="87:5" pos:end="105:5">if <condition pos:start="87:8" pos:end="87:74">(<expr pos:start="87:9" pos:end="87:73"><name pos:start="87:9" pos:end="87:25"><name pos:start="87:9" pos:end="87:13">codec</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:25">codec_type</name></name> <operator pos:start="87:27" pos:end="87:28">==</operator> <name pos:start="87:30" pos:end="87:47">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="87:49" pos:end="87:50">&amp;&amp;</operator> <name pos:start="87:52" pos:end="87:73"><name pos:start="87:52" pos:end="87:56">codec</name><operator pos:start="87:57" pos:end="87:58">-&gt;</operator><name pos:start="87:59" pos:end="87:73">initial_padding</name></name></expr>)</condition> <block pos:start="87:76" pos:end="105:5">{<block_content pos:start="89:9" pos:end="103:67">

        <expr_stmt pos:start="89:9" pos:end="93:63"><expr pos:start="89:9" pos:end="93:62"><name pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:11">mkv</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:19">tracks</name><index pos:start="89:20" pos:end="89:22">[<expr pos:start="89:21" pos:end="89:21"><name pos:start="89:21" pos:end="89:21">i</name></expr>]</index></name><operator pos:start="89:23" pos:end="89:23">.</operator><name pos:start="89:24" pos:end="89:32">ts_offset</name> <operator pos:start="89:34" pos:end="89:34">=</operator> <macro pos:start="89:36" pos:end="93:62"><name pos:start="89:36" pos:end="89:47">av_rescale_q</name><argument_list pos:start="89:48" pos:end="93:62">(<argument pos:start="89:49" pos:end="89:70">codec-&gt;initial_padding</argument>,

                                                <argument pos:start="91:49" pos:end="91:63">(AVRational){ <literal type="number" pos:start="91:63" pos:end="91:63">1</literal></argument>, <argument pos:start="91:66" pos:end="91:85">codec-&gt;sample_rate }</argument>,

                                                <argument pos:start="93:49" pos:end="93:61">st-&gt;time_base</argument>)</argument_list></macro></expr>;</expr_stmt>



        <macro pos:start="97:9" pos:end="103:66"><name pos:start="97:9" pos:end="97:21">put_ebml_uint</name><argument_list pos:start="97:22" pos:end="103:66">(<argument pos:start="97:23" pos:end="97:24">pb</argument>, <argument pos:start="97:27" pos:end="97:48">MATROSKA_ID_CODECDELAY</argument>,

                      <argument pos:start="99:23" pos:end="103:65">av_rescale_q(codec-&gt;initial_padding,

                                   (AVRational){ <literal type="number" pos:start="101:50" pos:end="101:50">1</literal>, codec-&gt;sample_rate },

                                   (AVRational){ <literal type="number" pos:start="103:50" pos:end="103:50">1</literal>, <literal type="number" pos:start="103:53" pos:end="103:62">1000000000</literal> })</argument>)</argument_list></macro><empty_stmt pos:start="103:67" pos:end="103:67">;</empty_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="109:5" pos:end="109:57">// look for a codec ID string specific to mkv to use,</comment>

    <comment type="line" pos:start="111:5" pos:end="111:39">// if none are found, use AVI codes</comment>

    <for pos:start="113:5" pos:end="125:5">for <control pos:start="113:9" pos:end="113:65">(<init pos:start="113:10" pos:end="113:15"><expr pos:start="113:10" pos:end="113:14"><name pos:start="113:10" pos:end="113:10">j</name> <operator pos:start="113:12" pos:end="113:12">=</operator> <literal type="number" pos:start="113:14" pos:end="113:14">0</literal></expr>;</init> <condition pos:start="113:17" pos:end="113:60"><expr pos:start="113:17" pos:end="113:59"><name pos:start="113:17" pos:end="113:36"><name pos:start="113:17" pos:end="113:33">ff_mkv_codec_tags</name><index pos:start="113:34" pos:end="113:36">[<expr pos:start="113:35" pos:end="113:35"><name pos:start="113:35" pos:end="113:35">j</name></expr>]</index></name><operator pos:start="113:37" pos:end="113:37">.</operator><name pos:start="113:38" pos:end="113:39">id</name> <operator pos:start="113:41" pos:end="113:42">!=</operator> <name pos:start="113:44" pos:end="113:59">AV_CODEC_ID_NONE</name></expr>;</condition> <incr pos:start="113:62" pos:end="113:64"><expr pos:start="113:62" pos:end="113:64"><name pos:start="113:62" pos:end="113:62">j</name><operator pos:start="113:63" pos:end="113:64">++</operator></expr></incr>)</control> <block pos:start="113:67" pos:end="125:5">{<block_content pos:start="115:9" pos:end="123:9">

        <if_stmt pos:start="115:9" pos:end="123:9"><if pos:start="115:9" pos:end="123:9">if <condition pos:start="115:12" pos:end="115:55">(<expr pos:start="115:13" pos:end="115:54"><name pos:start="115:13" pos:end="115:32"><name pos:start="115:13" pos:end="115:29">ff_mkv_codec_tags</name><index pos:start="115:30" pos:end="115:32">[<expr pos:start="115:31" pos:end="115:31"><name pos:start="115:31" pos:end="115:31">j</name></expr>]</index></name><operator pos:start="115:33" pos:end="115:33">.</operator><name pos:start="115:34" pos:end="115:35">id</name> <operator pos:start="115:37" pos:end="115:38">==</operator> <name pos:start="115:40" pos:end="115:54"><name pos:start="115:40" pos:end="115:44">codec</name><operator pos:start="115:45" pos:end="115:46">-&gt;</operator><name pos:start="115:47" pos:end="115:54">codec_id</name></name></expr>)</condition> <block pos:start="115:57" pos:end="123:9">{<block_content pos:start="117:13" pos:end="121:18">

            <expr_stmt pos:start="117:13" pos:end="117:79"><expr pos:start="117:13" pos:end="117:78"><call pos:start="117:13" pos:end="117:78"><name pos:start="117:13" pos:end="117:27">put_ebml_string</name><argument_list pos:start="117:28" pos:end="117:78">(<argument pos:start="117:29" pos:end="117:30"><expr pos:start="117:29" pos:end="117:30"><name pos:start="117:29" pos:end="117:30">pb</name></expr></argument>, <argument pos:start="117:33" pos:end="117:51"><expr pos:start="117:33" pos:end="117:51"><name pos:start="117:33" pos:end="117:51">MATROSKA_ID_CODECID</name></expr></argument>, <argument pos:start="117:54" pos:end="117:77"><expr pos:start="117:54" pos:end="117:77"><name pos:start="117:54" pos:end="117:73"><name pos:start="117:54" pos:end="117:70">ff_mkv_codec_tags</name><index pos:start="117:71" pos:end="117:73">[<expr pos:start="117:72" pos:end="117:72"><name pos:start="117:72" pos:end="117:72">j</name></expr>]</index></name><operator pos:start="117:74" pos:end="117:74">.</operator><name pos:start="117:75" pos:end="117:77">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:26"><expr pos:start="119:13" pos:end="119:25"><name pos:start="119:13" pos:end="119:21">native_id</name> <operator pos:start="119:23" pos:end="119:23">=</operator> <literal type="number" pos:start="119:25" pos:end="119:25">1</literal></expr>;</expr_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="129:5" pos:end="143:5"><if pos:start="129:5" pos:end="143:5">if <condition pos:start="129:8" pos:end="135:75">(<expr pos:start="129:9" pos:end="135:74"><name pos:start="129:9" pos:end="129:17"><name pos:start="129:9" pos:end="129:11">mkv</name><operator pos:start="129:12" pos:end="129:13">-&gt;</operator><name pos:start="129:14" pos:end="129:17">mode</name></name> <operator pos:start="129:19" pos:end="129:20">==</operator> <name pos:start="129:22" pos:end="129:30">MODE_WEBM</name> <operator pos:start="129:32" pos:end="129:33">&amp;&amp;</operator> <operator pos:start="129:35" pos:end="129:35">!</operator><operator pos:start="129:36" pos:end="129:36">(</operator><name pos:start="129:37" pos:end="129:51"><name pos:start="129:37" pos:end="129:41">codec</name><operator pos:start="129:42" pos:end="129:43">-&gt;</operator><name pos:start="129:44" pos:end="129:51">codec_id</name></name> <operator pos:start="129:53" pos:end="129:54">==</operator> <name pos:start="129:56" pos:end="129:70">AV_CODEC_ID_VP8</name> <operator pos:start="129:72" pos:end="129:73">||</operator>

                                    <name pos:start="131:37" pos:end="131:51"><name pos:start="131:37" pos:end="131:41">codec</name><operator pos:start="131:42" pos:end="131:43">-&gt;</operator><name pos:start="131:44" pos:end="131:51">codec_id</name></name> <operator pos:start="131:53" pos:end="131:54">==</operator> <name pos:start="131:56" pos:end="131:70">AV_CODEC_ID_VP9</name> <operator pos:start="131:72" pos:end="131:73">||</operator>

                                    <name pos:start="133:37" pos:end="133:51"><name pos:start="133:37" pos:end="133:41">codec</name><operator pos:start="133:42" pos:end="133:43">-&gt;</operator><name pos:start="133:44" pos:end="133:51">codec_id</name></name> <operator pos:start="133:53" pos:end="133:54">==</operator> <name pos:start="133:56" pos:end="133:71">AV_CODEC_ID_OPUS</name> <operator pos:start="133:73" pos:end="133:74">||</operator>

                                    <name pos:start="135:37" pos:end="135:51"><name pos:start="135:37" pos:end="135:41">codec</name><operator pos:start="135:42" pos:end="135:43">-&gt;</operator><name pos:start="135:44" pos:end="135:51">codec_id</name></name> <operator pos:start="135:53" pos:end="135:54">==</operator> <name pos:start="135:56" pos:end="135:73">AV_CODEC_ID_VORBIS</name><operator pos:start="135:74" pos:end="135:74">)</operator></expr>)</condition> <block pos:start="135:77" pos:end="143:5">{<block_content pos:start="137:9" pos:end="141:31">

        <expr_stmt pos:start="137:9" pos:end="139:91"><expr pos:start="137:9" pos:end="139:90"><call pos:start="137:9" pos:end="139:90"><name pos:start="137:9" pos:end="137:14">av_log</name><argument_list pos:start="137:15" pos:end="139:90">(<argument pos:start="137:16" pos:end="137:16"><expr pos:start="137:16" pos:end="137:16"><name pos:start="137:16" pos:end="137:16">s</name></expr></argument>, <argument pos:start="137:19" pos:end="137:30"><expr pos:start="137:19" pos:end="137:30"><name pos:start="137:19" pos:end="137:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="139:16" pos:end="139:89"><expr pos:start="139:16" pos:end="139:89"><literal type="string" pos:start="139:16" pos:end="139:89">"Only VP8 or VP9 video and Vorbis or Opus audio are supported for WebM.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="141:9" pos:end="141:31">return <expr pos:start="141:16" pos:end="141:30"><call pos:start="141:16" pos:end="141:30"><name pos:start="141:16" pos:end="141:22">AVERROR</name><argument_list pos:start="141:23" pos:end="141:30">(<argument pos:start="141:24" pos:end="141:29"><expr pos:start="141:24" pos:end="141:29"><name pos:start="141:24" pos:end="141:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="147:5" pos:end="273:5">switch <condition pos:start="147:12" pos:end="147:30">(<expr pos:start="147:13" pos:end="147:29"><name pos:start="147:13" pos:end="147:29"><name pos:start="147:13" pos:end="147:17">codec</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:29">codec_type</name></name></expr>)</condition> <block pos:start="147:32" pos:end="273:5">{<block_content pos:start="149:5" pos:end="271:14">

    <case pos:start="149:5" pos:end="149:28">case <expr pos:start="149:10" pos:end="149:27"><name pos:start="149:10" pos:end="149:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

        <expr_stmt pos:start="151:9" pos:end="151:76"><expr pos:start="151:9" pos:end="151:75"><call pos:start="151:9" pos:end="151:75"><name pos:start="151:9" pos:end="151:21">put_ebml_uint</name><argument_list pos:start="151:22" pos:end="151:75">(<argument pos:start="151:23" pos:end="151:24"><expr pos:start="151:23" pos:end="151:24"><name pos:start="151:23" pos:end="151:24">pb</name></expr></argument>, <argument pos:start="151:27" pos:end="151:47"><expr pos:start="151:27" pos:end="151:47"><name pos:start="151:27" pos:end="151:47">MATROSKA_ID_TRACKTYPE</name></expr></argument>, <argument pos:start="151:50" pos:end="151:74"><expr pos:start="151:50" pos:end="151:74"><name pos:start="151:50" pos:end="151:74">MATROSKA_TRACK_TYPE_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="153:9" pos:end="155:98"><if pos:start="153:9" pos:end="155:98">if <condition pos:start="153:12" pos:end="153:69">(<expr pos:start="153:13" pos:end="153:68"><name pos:start="153:13" pos:end="153:34"><name pos:start="153:13" pos:end="153:14">st</name><operator pos:start="153:15" pos:end="153:16">-&gt;</operator><name pos:start="153:17" pos:end="153:30">avg_frame_rate</name><operator pos:start="153:31" pos:end="153:31">.</operator><name pos:start="153:32" pos:end="153:34">num</name></name> <operator pos:start="153:36" pos:end="153:36">&gt;</operator> <literal type="number" pos:start="153:38" pos:end="153:38">0</literal> <operator pos:start="153:40" pos:end="153:41">&amp;&amp;</operator> <name pos:start="153:43" pos:end="153:64"><name pos:start="153:43" pos:end="153:44">st</name><operator pos:start="153:45" pos:end="153:46">-&gt;</operator><name pos:start="153:47" pos:end="153:60">avg_frame_rate</name><operator pos:start="153:61" pos:end="153:61">.</operator><name pos:start="153:62" pos:end="153:64">den</name></name> <operator pos:start="153:66" pos:end="153:66">&gt;</operator> <literal type="number" pos:start="153:68" pos:end="153:68">0</literal></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="155:98"><block_content pos:start="155:13" pos:end="155:98">

            <expr_stmt pos:start="155:13" pos:end="155:98"><expr pos:start="155:13" pos:end="155:97"><call pos:start="155:13" pos:end="155:97"><name pos:start="155:13" pos:end="155:25">put_ebml_uint</name><argument_list pos:start="155:26" pos:end="155:97">(<argument pos:start="155:27" pos:end="155:28"><expr pos:start="155:27" pos:end="155:28"><name pos:start="155:27" pos:end="155:28">pb</name></expr></argument>, <argument pos:start="155:31" pos:end="155:62"><expr pos:start="155:31" pos:end="155:62"><name pos:start="155:31" pos:end="155:62">MATROSKA_ID_TRACKDEFAULTDURATION</name></expr></argument>, <argument pos:start="155:65" pos:end="155:96"><expr pos:start="155:65" pos:end="155:96"><literal type="number" pos:start="155:65" pos:end="155:67">1E9</literal> <operator pos:start="155:69" pos:end="155:69">/</operator> <call pos:start="155:71" pos:end="155:96"><name pos:start="155:71" pos:end="155:76">av_q2d</name><argument_list pos:start="155:77" pos:end="155:96">(<argument pos:start="155:78" pos:end="155:95"><expr pos:start="155:78" pos:end="155:95"><name pos:start="155:78" pos:end="155:95"><name pos:start="155:78" pos:end="155:79">st</name><operator pos:start="155:80" pos:end="155:81">-&gt;</operator><name pos:start="155:82" pos:end="155:95">avg_frame_rate</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="159:9" pos:end="171:22"><if pos:start="159:9" pos:end="171:22">if <condition pos:start="159:12" pos:end="169:53">(<expr pos:start="159:13" pos:end="169:52"><operator pos:start="159:13" pos:end="159:13">!</operator><name pos:start="159:14" pos:end="159:22">native_id</name> <operator pos:start="159:24" pos:end="159:25">&amp;&amp;</operator>

            <call pos:start="161:13" pos:end="161:69"><name pos:start="161:13" pos:end="161:28">ff_codec_get_tag</name><argument_list pos:start="161:29" pos:end="161:69">(<argument pos:start="161:30" pos:end="161:51"><expr pos:start="161:30" pos:end="161:51"><name pos:start="161:30" pos:end="161:51">ff_codec_movvideo_tags</name></expr></argument>, <argument pos:start="161:54" pos:end="161:68"><expr pos:start="161:54" pos:end="161:68"><name pos:start="161:54" pos:end="161:68"><name pos:start="161:54" pos:end="161:58">codec</name><operator pos:start="161:59" pos:end="161:60">-&gt;</operator><name pos:start="161:61" pos:end="161:68">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="161:71" pos:end="161:72">&amp;&amp;</operator>

            <operator pos:start="163:13" pos:end="163:13">(</operator><operator pos:start="163:14" pos:end="163:14">!</operator><call pos:start="163:15" pos:end="163:68"><name pos:start="163:15" pos:end="163:30">ff_codec_get_tag</name><argument_list pos:start="163:31" pos:end="163:68">(<argument pos:start="163:32" pos:end="163:48"><expr pos:start="163:32" pos:end="163:48"><name pos:start="163:32" pos:end="163:48">ff_codec_bmp_tags</name></expr></argument>,   <argument pos:start="163:53" pos:end="163:67"><expr pos:start="163:53" pos:end="163:67"><name pos:start="163:53" pos:end="163:67"><name pos:start="163:53" pos:end="163:57">codec</name><operator pos:start="163:58" pos:end="163:59">-&gt;</operator><name pos:start="163:60" pos:end="163:67">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="163:70" pos:end="163:71">||</operator>

             <name pos:start="165:14" pos:end="165:28"><name pos:start="165:14" pos:end="165:18">codec</name><operator pos:start="165:19" pos:end="165:20">-&gt;</operator><name pos:start="165:21" pos:end="165:28">codec_id</name></name> <operator pos:start="165:30" pos:end="165:31">==</operator> <name pos:start="165:33" pos:end="165:48">AV_CODEC_ID_SVQ1</name> <operator pos:start="165:50" pos:end="165:51">||</operator>

             <name pos:start="167:14" pos:end="167:28"><name pos:start="167:14" pos:end="167:18">codec</name><operator pos:start="167:19" pos:end="167:20">-&gt;</operator><name pos:start="167:21" pos:end="167:28">codec_id</name></name> <operator pos:start="167:30" pos:end="167:31">==</operator> <name pos:start="167:33" pos:end="167:48">AV_CODEC_ID_SVQ3</name> <operator pos:start="167:50" pos:end="167:51">||</operator>

             <name pos:start="169:14" pos:end="169:28"><name pos:start="169:14" pos:end="169:18">codec</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:28">codec_id</name></name> <operator pos:start="169:30" pos:end="169:31">==</operator> <name pos:start="169:33" pos:end="169:51">AV_CODEC_ID_CINEPAK</name><operator pos:start="169:52" pos:end="169:52">)</operator></expr>)</condition><block type="pseudo" pos:start="171:13" pos:end="171:22"><block_content pos:start="171:13" pos:end="171:22">

            <expr_stmt pos:start="171:13" pos:end="171:22"><expr pos:start="171:13" pos:end="171:21"><name pos:start="171:13" pos:end="171:17">qt_id</name> <operator pos:start="171:19" pos:end="171:19">=</operator> <literal type="number" pos:start="171:21" pos:end="171:21">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="175:9" pos:end="187:9"><if pos:start="175:9" pos:end="177:68">if <condition pos:start="175:12" pos:end="175:18">(<expr pos:start="175:13" pos:end="175:17"><name pos:start="175:13" pos:end="175:17">qt_id</name></expr>)</condition><block type="pseudo" pos:start="177:13" pos:end="177:68"><block_content pos:start="177:13" pos:end="177:68">

            <expr_stmt pos:start="177:13" pos:end="177:68"><expr pos:start="177:13" pos:end="177:67"><call pos:start="177:13" pos:end="177:67"><name pos:start="177:13" pos:end="177:27">put_ebml_string</name><argument_list pos:start="177:28" pos:end="177:67">(<argument pos:start="177:29" pos:end="177:30"><expr pos:start="177:29" pos:end="177:30"><name pos:start="177:29" pos:end="177:30">pb</name></expr></argument>, <argument pos:start="177:33" pos:end="177:51"><expr pos:start="177:33" pos:end="177:51"><name pos:start="177:33" pos:end="177:51">MATROSKA_ID_CODECID</name></expr></argument>, <argument pos:start="177:54" pos:end="177:66"><expr pos:start="177:54" pos:end="177:66"><literal type="string" pos:start="177:54" pos:end="177:66">"V_QUICKTIME"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="179:9" pos:end="187:9">else if <condition pos:start="179:17" pos:end="179:28">(<expr pos:start="179:18" pos:end="179:27"><operator pos:start="179:18" pos:end="179:18">!</operator><name pos:start="179:19" pos:end="179:27">native_id</name></expr>)</condition> <block pos:start="179:30" pos:end="187:9">{<block_content pos:start="183:13" pos:end="185:41">

            <comment type="line" pos:start="181:13" pos:end="181:65">// if there is no mkv-specific codec ID, use VFW mode</comment>

            <expr_stmt pos:start="183:13" pos:end="183:72"><expr pos:start="183:13" pos:end="183:71"><call pos:start="183:13" pos:end="183:71"><name pos:start="183:13" pos:end="183:27">put_ebml_string</name><argument_list pos:start="183:28" pos:end="183:71">(<argument pos:start="183:29" pos:end="183:30"><expr pos:start="183:29" pos:end="183:30"><name pos:start="183:29" pos:end="183:30">pb</name></expr></argument>, <argument pos:start="183:33" pos:end="183:51"><expr pos:start="183:33" pos:end="183:51"><name pos:start="183:33" pos:end="183:51">MATROSKA_ID_CODECID</name></expr></argument>, <argument pos:start="183:54" pos:end="183:70"><expr pos:start="183:54" pos:end="183:70"><literal type="string" pos:start="183:54" pos:end="183:70">"V_MS/VFW/FOURCC"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:41"><expr pos:start="185:13" pos:end="185:40"><name pos:start="185:13" pos:end="185:26"><name pos:start="185:13" pos:end="185:15">mkv</name><operator pos:start="185:16" pos:end="185:17">-&gt;</operator><name pos:start="185:18" pos:end="185:23">tracks</name><index pos:start="185:24" pos:end="185:26">[<expr pos:start="185:25" pos:end="185:25"><name pos:start="185:25" pos:end="185:25">i</name></expr>]</index></name><operator pos:start="185:27" pos:end="185:27">.</operator><name pos:start="185:28" pos:end="185:36">write_dts</name> <operator pos:start="185:38" pos:end="185:38">=</operator> <literal type="number" pos:start="185:40" pos:end="185:40">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="191:9" pos:end="191:67"><expr pos:start="191:9" pos:end="191:66"><name pos:start="191:9" pos:end="191:15">subinfo</name> <operator pos:start="191:17" pos:end="191:17">=</operator> <call pos:start="191:19" pos:end="191:66"><name pos:start="191:19" pos:end="191:35">start_ebml_master</name><argument_list pos:start="191:36" pos:end="191:66">(<argument pos:start="191:37" pos:end="191:38"><expr pos:start="191:37" pos:end="191:38"><name pos:start="191:37" pos:end="191:38">pb</name></expr></argument>, <argument pos:start="191:41" pos:end="191:62"><expr pos:start="191:41" pos:end="191:62"><name pos:start="191:41" pos:end="191:62">MATROSKA_ID_TRACKVIDEO</name></expr></argument>, <argument pos:start="191:65" pos:end="191:65"><expr pos:start="191:65" pos:end="191:65"><literal type="number" pos:start="191:65" pos:end="191:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="193:9" pos:end="193:31">// XXX: interlace flag?</comment>

        <expr_stmt pos:start="195:9" pos:end="195:71"><expr pos:start="195:9" pos:end="195:70"><call pos:start="195:9" pos:end="195:70"><name pos:start="195:9" pos:end="195:21">put_ebml_uint</name> <argument_list pos:start="195:23" pos:end="195:70">(<argument pos:start="195:24" pos:end="195:25"><expr pos:start="195:24" pos:end="195:25"><name pos:start="195:24" pos:end="195:25">pb</name></expr></argument>, <argument pos:start="195:28" pos:end="195:54"><expr pos:start="195:28" pos:end="195:54"><name pos:start="195:28" pos:end="195:54">MATROSKA_ID_VIDEOPIXELWIDTH</name></expr></argument> , <argument pos:start="195:58" pos:end="195:69"><expr pos:start="195:58" pos:end="195:69"><name pos:start="195:58" pos:end="195:69"><name pos:start="195:58" pos:end="195:62">codec</name><operator pos:start="195:63" pos:end="195:64">-&gt;</operator><name pos:start="195:65" pos:end="195:69">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:72"><expr pos:start="197:9" pos:end="197:71"><call pos:start="197:9" pos:end="197:71"><name pos:start="197:9" pos:end="197:21">put_ebml_uint</name> <argument_list pos:start="197:23" pos:end="197:71">(<argument pos:start="197:24" pos:end="197:25"><expr pos:start="197:24" pos:end="197:25"><name pos:start="197:24" pos:end="197:25">pb</name></expr></argument>, <argument pos:start="197:28" pos:end="197:55"><expr pos:start="197:28" pos:end="197:55"><name pos:start="197:28" pos:end="197:55">MATROSKA_ID_VIDEOPIXELHEIGHT</name></expr></argument>, <argument pos:start="197:58" pos:end="197:70"><expr pos:start="197:58" pos:end="197:70"><name pos:start="197:58" pos:end="197:70"><name pos:start="197:58" pos:end="197:62">codec</name><operator pos:start="197:63" pos:end="197:64">-&gt;</operator><name pos:start="197:65" pos:end="197:70">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="201:9" pos:end="201:68">// check both side data and metadata for stereo information,</comment>

        <comment type="line" pos:start="203:9" pos:end="203:60">// write the result to the bitstream if any is found</comment>

        <expr_stmt pos:start="205:9" pos:end="205:58"><expr pos:start="205:9" pos:end="205:57"><name pos:start="205:9" pos:end="205:11">ret</name> <operator pos:start="205:13" pos:end="205:13">=</operator> <call pos:start="205:15" pos:end="205:57"><name pos:start="205:15" pos:end="205:35">mkv_write_stereo_mode</name><argument_list pos:start="205:36" pos:end="205:57">(<argument pos:start="205:37" pos:end="205:37"><expr pos:start="205:37" pos:end="205:37"><name pos:start="205:37" pos:end="205:37">s</name></expr></argument>, <argument pos:start="205:40" pos:end="205:41"><expr pos:start="205:40" pos:end="205:41"><name pos:start="205:40" pos:end="205:41">pb</name></expr></argument>, <argument pos:start="205:44" pos:end="205:45"><expr pos:start="205:44" pos:end="205:45"><name pos:start="205:44" pos:end="205:45">st</name></expr></argument>, <argument pos:start="205:48" pos:end="205:56"><expr pos:start="205:48" pos:end="205:56"><name pos:start="205:48" pos:end="205:56"><name pos:start="205:48" pos:end="205:50">mkv</name><operator pos:start="205:51" pos:end="205:52">-&gt;</operator><name pos:start="205:53" pos:end="205:56">mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="207:9" pos:end="209:23"><if pos:start="207:9" pos:end="209:23">if <condition pos:start="207:12" pos:end="207:20">(<expr pos:start="207:13" pos:end="207:19"><name pos:start="207:13" pos:end="207:15">ret</name> <operator pos:start="207:17" pos:end="207:17">&lt;</operator> <literal type="number" pos:start="207:19" pos:end="207:19">0</literal></expr>)</condition><block type="pseudo" pos:start="209:13" pos:end="209:23"><block_content pos:start="209:13" pos:end="209:23">

            <return pos:start="209:13" pos:end="209:23">return <expr pos:start="209:20" pos:end="209:22"><name pos:start="209:20" pos:end="209:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="213:9" pos:end="213:37"><expr pos:start="213:9" pos:end="213:36"><call pos:start="213:9" pos:end="213:36"><name pos:start="213:9" pos:end="213:23">end_ebml_master</name><argument_list pos:start="213:24" pos:end="213:36">(<argument pos:start="213:25" pos:end="213:26"><expr pos:start="213:25" pos:end="213:26"><name pos:start="213:25" pos:end="213:26">pb</name></expr></argument>, <argument pos:start="213:29" pos:end="213:35"><expr pos:start="213:29" pos:end="213:35"><name pos:start="213:29" pos:end="213:35">subinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>



    <case pos:start="219:5" pos:end="219:28">case <expr pos:start="219:10" pos:end="219:27"><name pos:start="219:10" pos:end="219:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

        <expr_stmt pos:start="221:9" pos:end="221:76"><expr pos:start="221:9" pos:end="221:75"><call pos:start="221:9" pos:end="221:75"><name pos:start="221:9" pos:end="221:21">put_ebml_uint</name><argument_list pos:start="221:22" pos:end="221:75">(<argument pos:start="221:23" pos:end="221:24"><expr pos:start="221:23" pos:end="221:24"><name pos:start="221:23" pos:end="221:24">pb</name></expr></argument>, <argument pos:start="221:27" pos:end="221:47"><expr pos:start="221:27" pos:end="221:47"><name pos:start="221:27" pos:end="221:47">MATROSKA_ID_TRACKTYPE</name></expr></argument>, <argument pos:start="221:50" pos:end="221:74"><expr pos:start="221:50" pos:end="221:74"><name pos:start="221:50" pos:end="221:74">MATROSKA_TRACK_TYPE_AUDIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="225:9" pos:end="229:65"><if pos:start="225:9" pos:end="229:65">if <condition pos:start="225:12" pos:end="225:23">(<expr pos:start="225:13" pos:end="225:22"><operator pos:start="225:13" pos:end="225:13">!</operator><name pos:start="225:14" pos:end="225:22">native_id</name></expr>)</condition><block type="pseudo" pos:start="229:13" pos:end="229:65"><block_content pos:start="229:13" pos:end="229:65">

            <comment type="line" pos:start="227:13" pos:end="227:47">// no mkv-specific ID, use ACM mode</comment>

            <expr_stmt pos:start="229:13" pos:end="229:65"><expr pos:start="229:13" pos:end="229:64"><call pos:start="229:13" pos:end="229:64"><name pos:start="229:13" pos:end="229:27">put_ebml_string</name><argument_list pos:start="229:28" pos:end="229:64">(<argument pos:start="229:29" pos:end="229:30"><expr pos:start="229:29" pos:end="229:30"><name pos:start="229:29" pos:end="229:30">pb</name></expr></argument>, <argument pos:start="229:33" pos:end="229:51"><expr pos:start="229:33" pos:end="229:51"><name pos:start="229:33" pos:end="229:51">MATROSKA_ID_CODECID</name></expr></argument>, <argument pos:start="229:54" pos:end="229:63"><expr pos:start="229:54" pos:end="229:63"><literal type="string" pos:start="229:54" pos:end="229:63">"A_MS/ACM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="233:9" pos:end="233:67"><expr pos:start="233:9" pos:end="233:66"><name pos:start="233:9" pos:end="233:15">subinfo</name> <operator pos:start="233:17" pos:end="233:17">=</operator> <call pos:start="233:19" pos:end="233:66"><name pos:start="233:19" pos:end="233:35">start_ebml_master</name><argument_list pos:start="233:36" pos:end="233:66">(<argument pos:start="233:37" pos:end="233:38"><expr pos:start="233:37" pos:end="233:38"><name pos:start="233:37" pos:end="233:38">pb</name></expr></argument>, <argument pos:start="233:41" pos:end="233:62"><expr pos:start="233:41" pos:end="233:62"><name pos:start="233:41" pos:end="233:62">MATROSKA_ID_TRACKAUDIO</name></expr></argument>, <argument pos:start="233:65" pos:end="233:65"><expr pos:start="233:65" pos:end="233:65"><literal type="number" pos:start="233:65" pos:end="233:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:76"><expr pos:start="235:9" pos:end="235:75"><call pos:start="235:9" pos:end="235:75"><name pos:start="235:9" pos:end="235:21">put_ebml_uint</name>  <argument_list pos:start="235:24" pos:end="235:75">(<argument pos:start="235:25" pos:end="235:26"><expr pos:start="235:25" pos:end="235:26"><name pos:start="235:25" pos:end="235:26">pb</name></expr></argument>, <argument pos:start="235:29" pos:end="235:53"><expr pos:start="235:29" pos:end="235:53"><name pos:start="235:29" pos:end="235:53">MATROSKA_ID_AUDIOCHANNELS</name></expr></argument>    , <argument pos:start="235:60" pos:end="235:74"><expr pos:start="235:60" pos:end="235:74"><name pos:start="235:60" pos:end="235:74"><name pos:start="235:60" pos:end="235:64">codec</name><operator pos:start="235:65" pos:end="235:66">-&gt;</operator><name pos:start="235:67" pos:end="235:74">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:72"><expr pos:start="237:9" pos:end="237:71"><call pos:start="237:9" pos:end="237:71"><name pos:start="237:9" pos:end="237:22">put_ebml_float</name> <argument_list pos:start="237:24" pos:end="237:71">(<argument pos:start="237:25" pos:end="237:26"><expr pos:start="237:25" pos:end="237:26"><name pos:start="237:25" pos:end="237:26">pb</name></expr></argument>, <argument pos:start="237:29" pos:end="237:57"><expr pos:start="237:29" pos:end="237:57"><name pos:start="237:29" pos:end="237:57">MATROSKA_ID_AUDIOSAMPLINGFREQ</name></expr></argument>, <argument pos:start="237:60" pos:end="237:70"><expr pos:start="237:60" pos:end="237:70"><name pos:start="237:60" pos:end="237:70">sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="239:9" pos:end="241:85"><if pos:start="239:9" pos:end="241:85">if <condition pos:start="239:12" pos:end="239:31">(<expr pos:start="239:13" pos:end="239:30"><name pos:start="239:13" pos:end="239:30">output_sample_rate</name></expr>)</condition><block type="pseudo" pos:start="241:13" pos:end="241:85"><block_content pos:start="241:13" pos:end="241:85">

            <expr_stmt pos:start="241:13" pos:end="241:85"><expr pos:start="241:13" pos:end="241:84"><call pos:start="241:13" pos:end="241:84"><name pos:start="241:13" pos:end="241:26">put_ebml_float</name><argument_list pos:start="241:27" pos:end="241:84">(<argument pos:start="241:28" pos:end="241:29"><expr pos:start="241:28" pos:end="241:29"><name pos:start="241:28" pos:end="241:29">pb</name></expr></argument>, <argument pos:start="241:32" pos:end="241:63"><expr pos:start="241:32" pos:end="241:63"><name pos:start="241:32" pos:end="241:63">MATROSKA_ID_AUDIOOUTSAMPLINGFREQ</name></expr></argument>, <argument pos:start="241:66" pos:end="241:83"><expr pos:start="241:66" pos:end="241:83"><name pos:start="241:66" pos:end="241:83">output_sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="243:9" pos:end="245:68"><if pos:start="243:9" pos:end="245:68">if <condition pos:start="243:12" pos:end="243:22">(<expr pos:start="243:13" pos:end="243:21"><name pos:start="243:13" pos:end="243:21">bit_depth</name></expr>)</condition><block type="pseudo" pos:start="245:13" pos:end="245:68"><block_content pos:start="245:13" pos:end="245:68">

            <expr_stmt pos:start="245:13" pos:end="245:68"><expr pos:start="245:13" pos:end="245:67"><call pos:start="245:13" pos:end="245:67"><name pos:start="245:13" pos:end="245:25">put_ebml_uint</name><argument_list pos:start="245:26" pos:end="245:67">(<argument pos:start="245:27" pos:end="245:28"><expr pos:start="245:27" pos:end="245:28"><name pos:start="245:27" pos:end="245:28">pb</name></expr></argument>, <argument pos:start="245:31" pos:end="245:55"><expr pos:start="245:31" pos:end="245:55"><name pos:start="245:31" pos:end="245:55">MATROSKA_ID_AUDIOBITDEPTH</name></expr></argument>, <argument pos:start="245:58" pos:end="245:66"><expr pos:start="245:58" pos:end="245:66"><name pos:start="245:58" pos:end="245:66">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:37"><expr pos:start="247:9" pos:end="247:36"><call pos:start="247:9" pos:end="247:36"><name pos:start="247:9" pos:end="247:23">end_ebml_master</name><argument_list pos:start="247:24" pos:end="247:36">(<argument pos:start="247:25" pos:end="247:26"><expr pos:start="247:25" pos:end="247:26"><name pos:start="247:25" pos:end="247:26">pb</name></expr></argument>, <argument pos:start="247:29" pos:end="247:35"><expr pos:start="247:29" pos:end="247:35"><name pos:start="247:29" pos:end="247:35">subinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="249:9" pos:end="249:14">break;</break>



    <case pos:start="253:5" pos:end="253:31">case <expr pos:start="253:10" pos:end="253:30"><name pos:start="253:10" pos:end="253:30">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

        <expr_stmt pos:start="255:9" pos:end="255:79"><expr pos:start="255:9" pos:end="255:78"><call pos:start="255:9" pos:end="255:78"><name pos:start="255:9" pos:end="255:21">put_ebml_uint</name><argument_list pos:start="255:22" pos:end="255:78">(<argument pos:start="255:23" pos:end="255:24"><expr pos:start="255:23" pos:end="255:24"><name pos:start="255:23" pos:end="255:24">pb</name></expr></argument>, <argument pos:start="255:27" pos:end="255:47"><expr pos:start="255:27" pos:end="255:47"><name pos:start="255:27" pos:end="255:47">MATROSKA_ID_TRACKTYPE</name></expr></argument>, <argument pos:start="255:50" pos:end="255:77"><expr pos:start="255:50" pos:end="255:77"><name pos:start="255:50" pos:end="255:77">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="257:9" pos:end="263:9"><if pos:start="257:9" pos:end="263:9">if <condition pos:start="257:12" pos:end="257:23">(<expr pos:start="257:13" pos:end="257:22"><operator pos:start="257:13" pos:end="257:13">!</operator><name pos:start="257:14" pos:end="257:22">native_id</name></expr>)</condition> <block pos:start="257:25" pos:end="263:9">{<block_content pos:start="259:13" pos:end="261:35">

            <expr_stmt pos:start="259:13" pos:end="259:94"><expr pos:start="259:13" pos:end="259:93"><call pos:start="259:13" pos:end="259:93"><name pos:start="259:13" pos:end="259:18">av_log</name><argument_list pos:start="259:19" pos:end="259:93">(<argument pos:start="259:20" pos:end="259:20"><expr pos:start="259:20" pos:end="259:20"><name pos:start="259:20" pos:end="259:20">s</name></expr></argument>, <argument pos:start="259:23" pos:end="259:34"><expr pos:start="259:23" pos:end="259:34"><name pos:start="259:23" pos:end="259:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="259:37" pos:end="259:75"><expr pos:start="259:37" pos:end="259:75"><literal type="string" pos:start="259:37" pos:end="259:75">"Subtitle codec %d is not supported.\n"</literal></expr></argument>, <argument pos:start="259:78" pos:end="259:92"><expr pos:start="259:78" pos:end="259:92"><name pos:start="259:78" pos:end="259:92"><name pos:start="259:78" pos:end="259:82">codec</name><operator pos:start="259:83" pos:end="259:84">-&gt;</operator><name pos:start="259:85" pos:end="259:92">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="261:13" pos:end="261:35">return <expr pos:start="261:20" pos:end="261:34"><call pos:start="261:20" pos:end="261:34"><name pos:start="261:20" pos:end="261:26">AVERROR</name><argument_list pos:start="261:27" pos:end="261:34">(<argument pos:start="261:28" pos:end="261:33"><expr pos:start="261:28" pos:end="261:33"><name pos:start="261:28" pos:end="261:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="265:9" pos:end="265:14">break;</break>

    <default pos:start="267:5" pos:end="267:12">default:</default>

        <expr_stmt pos:start="269:9" pos:end="269:98"><expr pos:start="269:9" pos:end="269:97"><call pos:start="269:9" pos:end="269:97"><name pos:start="269:9" pos:end="269:14">av_log</name><argument_list pos:start="269:15" pos:end="269:97">(<argument pos:start="269:16" pos:end="269:16"><expr pos:start="269:16" pos:end="269:16"><name pos:start="269:16" pos:end="269:16">s</name></expr></argument>, <argument pos:start="269:19" pos:end="269:30"><expr pos:start="269:19" pos:end="269:30"><name pos:start="269:19" pos:end="269:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="269:33" pos:end="269:96"><expr pos:start="269:33" pos:end="269:96"><literal type="string" pos:start="269:33" pos:end="269:96">"Only audio, video, and subtitles are supported for Matroska.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="271:9" pos:end="271:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="275:5" pos:end="275:65"><expr pos:start="275:5" pos:end="275:64"><name pos:start="275:5" pos:end="275:7">ret</name> <operator pos:start="275:9" pos:end="275:9">=</operator> <call pos:start="275:11" pos:end="275:64"><name pos:start="275:11" pos:end="275:32">mkv_write_codecprivate</name><argument_list pos:start="275:33" pos:end="275:64">(<argument pos:start="275:34" pos:end="275:34"><expr pos:start="275:34" pos:end="275:34"><name pos:start="275:34" pos:end="275:34">s</name></expr></argument>, <argument pos:start="275:37" pos:end="275:38"><expr pos:start="275:37" pos:end="275:38"><name pos:start="275:37" pos:end="275:38">pb</name></expr></argument>, <argument pos:start="275:41" pos:end="275:45"><expr pos:start="275:41" pos:end="275:45"><name pos:start="275:41" pos:end="275:45">codec</name></expr></argument>, <argument pos:start="275:48" pos:end="275:56"><expr pos:start="275:48" pos:end="275:56"><name pos:start="275:48" pos:end="275:56">native_id</name></expr></argument>, <argument pos:start="275:59" pos:end="275:63"><expr pos:start="275:59" pos:end="275:63"><name pos:start="275:59" pos:end="275:63">qt_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="277:5" pos:end="279:19"><if pos:start="277:5" pos:end="279:19">if <condition pos:start="277:8" pos:end="277:16">(<expr pos:start="277:9" pos:end="277:15"><name pos:start="277:9" pos:end="277:11">ret</name> <operator pos:start="277:13" pos:end="277:13">&lt;</operator> <literal type="number" pos:start="277:15" pos:end="277:15">0</literal></expr>)</condition><block type="pseudo" pos:start="279:9" pos:end="279:19"><block_content pos:start="279:9" pos:end="279:19">

        <return pos:start="279:9" pos:end="279:19">return <expr pos:start="279:16" pos:end="279:18"><name pos:start="279:16" pos:end="279:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="283:5" pos:end="283:31"><expr pos:start="283:5" pos:end="283:30"><call pos:start="283:5" pos:end="283:30"><name pos:start="283:5" pos:end="283:19">end_ebml_master</name><argument_list pos:start="283:20" pos:end="283:30">(<argument pos:start="283:21" pos:end="283:22"><expr pos:start="283:21" pos:end="283:22"><name pos:start="283:21" pos:end="283:22">pb</name></expr></argument>, <argument pos:start="283:25" pos:end="283:29"><expr pos:start="283:25" pos:end="283:29"><name pos:start="283:25" pos:end="283:29">track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="287:5" pos:end="287:13">return <expr pos:start="287:12" pos:end="287:12"><literal type="number" pos:start="287:12" pos:end="287:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
