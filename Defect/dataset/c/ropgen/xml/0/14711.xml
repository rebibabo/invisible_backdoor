<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14711.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">swri_realloc_audio</name><parameter_list pos:start="1:23" pos:end="1:47">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:32">AudioData</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">a</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:46"><decl pos:start="1:38" pos:end="1:46"><type pos:start="1:38" pos:end="1:46"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:46">count</name></decl></parameter>)</parameter_list><block pos:start="1:48" pos:end="61:1">{<block_content pos:start="3:5" pos:end="59:13">

    <decl_stmt pos:start="3:5" pos:end="3:18"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:17"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:17">countb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">AudioData</name></type> <name pos:start="5:15" pos:end="5:17">old</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:31"><if pos:start="9:5" pos:end="11:31">if<condition pos:start="9:7" pos:end="9:57">(<expr pos:start="9:8" pos:end="9:56"><name pos:start="9:8" pos:end="9:27"><name pos:start="9:8" pos:end="9:12">count</name> <argument_list type="generic" pos:start="9:14" pos:end="9:27">&lt; <argument pos:start="9:16" pos:end="9:25"><expr pos:start="9:16" pos:end="9:25"><literal type="number" pos:start="9:16" pos:end="9:16">0</literal> <operator pos:start="9:18" pos:end="9:19">||</operator> <name pos:start="9:21" pos:end="9:25">count</name></expr></argument> &gt;</argument_list></name> <name pos:start="9:29" pos:end="9:35">INT_MAX</name><operator pos:start="9:36" pos:end="9:36">/</operator><literal type="number" pos:start="9:37" pos:end="9:37">2</literal><operator pos:start="9:38" pos:end="9:38">/</operator><name pos:start="9:39" pos:end="9:44"><name pos:start="9:39" pos:end="9:39">a</name><operator pos:start="9:40" pos:end="9:41">-&gt;</operator><name pos:start="9:42" pos:end="9:44">bps</name></name><operator pos:start="9:45" pos:end="9:45">/</operator><name pos:start="9:46" pos:end="9:56"><name pos:start="9:46" pos:end="9:46">a</name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:56">ch_count</name></name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:31"><block_content pos:start="11:9" pos:end="11:31">

        <return pos:start="11:9" pos:end="11:31">return <expr pos:start="11:16" pos:end="11:30"><call pos:start="11:16" pos:end="11:30"><name pos:start="11:16" pos:end="11:22">AVERROR</name><argument_list pos:start="11:23" pos:end="11:30">(<argument pos:start="11:24" pos:end="11:29"><expr pos:start="11:24" pos:end="11:29"><name pos:start="11:24" pos:end="11:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if<condition pos:start="15:7" pos:end="15:25">(<expr pos:start="15:8" pos:end="15:24"><name pos:start="15:8" pos:end="15:15"><name pos:start="15:8" pos:end="15:8">a</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:15">count</name></name> <operator pos:start="15:17" pos:end="15:18">&gt;=</operator> <name pos:start="15:20" pos:end="15:24">count</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:13"><expr pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:9">count</name><operator pos:start="21:10" pos:end="21:11">*=</operator><literal type="number" pos:start="21:12" pos:end="21:12">2</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:10">countb</name><operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:40"><name pos:start="25:13" pos:end="25:19">FFALIGN</name><argument_list pos:start="25:20" pos:end="25:40">(<argument pos:start="25:21" pos:end="25:32"><expr pos:start="25:21" pos:end="25:32"><name pos:start="25:21" pos:end="25:25">count</name><operator pos:start="25:26" pos:end="25:26">*</operator><name pos:start="25:27" pos:end="25:32"><name pos:start="25:27" pos:end="25:27">a</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:32">bps</name></name></expr></argument>, <argument pos:start="25:35" pos:end="25:39"><expr pos:start="25:35" pos:end="25:39"><name pos:start="25:35" pos:end="25:39">ALIGN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:12"><expr pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:7">old</name><operator pos:start="27:8" pos:end="27:8">=</operator> <operator pos:start="27:10" pos:end="27:10">*</operator><name pos:start="27:11" pos:end="27:11">a</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><call pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:14">av_assert0</name><argument_list pos:start="31:15" pos:end="31:22">(<argument pos:start="31:16" pos:end="31:21"><expr pos:start="31:16" pos:end="31:21"><name pos:start="31:16" pos:end="31:21"><name pos:start="31:16" pos:end="31:16">a</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:21">bps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><call pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:14">av_assert0</name><argument_list pos:start="33:15" pos:end="33:27">(<argument pos:start="33:16" pos:end="33:26"><expr pos:start="33:16" pos:end="33:26"><name pos:start="33:16" pos:end="33:26"><name pos:start="33:16" pos:end="33:16">a</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:26">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:51"><expr pos:start="37:5" pos:end="37:50"><name pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:5">a</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:11">data</name></name><operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="37:50"><name pos:start="37:14" pos:end="37:29">av_mallocz_array</name><argument_list pos:start="37:30" pos:end="37:50">(<argument pos:start="37:31" pos:end="37:36"><expr pos:start="37:31" pos:end="37:36"><name pos:start="37:31" pos:end="37:36">countb</name></expr></argument>, <argument pos:start="37:39" pos:end="37:49"><expr pos:start="37:39" pos:end="37:49"><name pos:start="37:39" pos:end="37:49"><name pos:start="37:39" pos:end="37:39">a</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:49">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:31"><if pos:start="39:5" pos:end="41:31">if<condition pos:start="39:7" pos:end="39:16">(<expr pos:start="39:8" pos:end="39:15"><operator pos:start="39:8" pos:end="39:8">!</operator><name pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:9">a</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:15">data</name></name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:31"><block_content pos:start="41:9" pos:end="41:31">

        <return pos:start="41:9" pos:end="41:31">return <expr pos:start="41:16" pos:end="41:30"><call pos:start="41:16" pos:end="41:30"><name pos:start="41:16" pos:end="41:22">AVERROR</name><argument_list pos:start="41:23" pos:end="41:30">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="43:5" pos:end="49:5">for<control pos:start="43:8" pos:end="43:32">(<init pos:start="43:9" pos:end="43:12"><expr pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:9">i</name><operator pos:start="43:10" pos:end="43:10">=</operator><literal type="number" pos:start="43:11" pos:end="43:11">0</literal></expr>;</init> <condition pos:start="43:14" pos:end="43:27"><expr pos:start="43:14" pos:end="43:26"><name pos:start="43:14" pos:end="43:14">i</name><operator pos:start="43:15" pos:end="43:15">&lt;</operator><name pos:start="43:16" pos:end="43:26"><name pos:start="43:16" pos:end="43:16">a</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:26">ch_count</name></name></expr>;</condition> <incr pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><name pos:start="43:29" pos:end="43:29">i</name><operator pos:start="43:30" pos:end="43:31">++</operator></expr></incr>)</control><block pos:start="43:33" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:67">

        <expr_stmt pos:start="45:9" pos:end="45:60"><expr pos:start="45:9" pos:end="45:59"><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:9">a</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:13">ch</name><index pos:start="45:14" pos:end="45:16">[<expr pos:start="45:15" pos:end="45:15"><name pos:start="45:15" pos:end="45:15">i</name></expr>]</index></name><operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:25"><name pos:start="45:19" pos:end="45:19">a</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:25">data</name></name> <operator pos:start="45:27" pos:end="45:27">+</operator> <name pos:start="45:29" pos:end="45:29">i</name><operator pos:start="45:30" pos:end="45:30">*</operator><operator pos:start="45:31" pos:end="45:31">(</operator><ternary pos:start="45:32" pos:end="45:58"><condition pos:start="45:32" pos:end="45:42"><expr pos:start="45:32" pos:end="45:40"><name pos:start="45:32" pos:end="45:40"><name pos:start="45:32" pos:end="45:32">a</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:40">planar</name></name></expr> ?</condition><then pos:start="45:44" pos:end="45:49"> <expr pos:start="45:44" pos:end="45:49"><name pos:start="45:44" pos:end="45:49">countb</name></expr> </then><else pos:start="45:51" pos:end="45:58">: <expr pos:start="45:53" pos:end="45:58"><name pos:start="45:53" pos:end="45:58"><name pos:start="45:53" pos:end="45:53">a</name><operator pos:start="45:54" pos:end="45:55">-&gt;</operator><name pos:start="45:56" pos:end="45:58">bps</name></name></expr></else></ternary><operator pos:start="45:59" pos:end="45:59">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="47:67"><if pos:start="47:9" pos:end="47:67">if<condition pos:start="47:11" pos:end="47:21">(<expr pos:start="47:12" pos:end="47:20"><name pos:start="47:12" pos:end="47:20"><name pos:start="47:12" pos:end="47:12">a</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:20">planar</name></name></expr>)</condition><block type="pseudo" pos:start="47:23" pos:end="47:67"><block_content pos:start="47:23" pos:end="47:67"> <expr_stmt pos:start="47:23" pos:end="47:67"><expr pos:start="47:23" pos:end="47:66"><call pos:start="47:23" pos:end="47:66"><name pos:start="47:23" pos:end="47:28">memcpy</name><argument_list pos:start="47:29" pos:end="47:66">(<argument pos:start="47:30" pos:end="47:37"><expr pos:start="47:30" pos:end="47:37"><name pos:start="47:30" pos:end="47:37"><name pos:start="47:30" pos:end="47:30">a</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:34">ch</name><index pos:start="47:35" pos:end="47:37">[<expr pos:start="47:36" pos:end="47:36"><name pos:start="47:36" pos:end="47:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="47:40" pos:end="47:48"><expr pos:start="47:40" pos:end="47:48"><name pos:start="47:40" pos:end="47:48"><name pos:start="47:40" pos:end="47:42">old</name><operator pos:start="47:43" pos:end="47:43">.</operator><name pos:start="47:44" pos:end="47:45">ch</name><index pos:start="47:46" pos:end="47:48">[<expr pos:start="47:47" pos:end="47:47"><name pos:start="47:47" pos:end="47:47">i</name></expr>]</index></name></expr></argument>, <argument pos:start="47:51" pos:end="47:65"><expr pos:start="47:51" pos:end="47:65"><name pos:start="47:51" pos:end="47:58"><name pos:start="47:51" pos:end="47:51">a</name><operator pos:start="47:52" pos:end="47:53">-&gt;</operator><name pos:start="47:54" pos:end="47:58">count</name></name><operator pos:start="47:59" pos:end="47:59">*</operator><name pos:start="47:60" pos:end="47:65"><name pos:start="47:60" pos:end="47:60">a</name><operator pos:start="47:61" pos:end="47:62">-&gt;</operator><name pos:start="47:63" pos:end="47:65">bps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="51:5" pos:end="51:76"><if pos:start="51:5" pos:end="51:76">if<condition pos:start="51:7" pos:end="51:18">(<expr pos:start="51:8" pos:end="51:17"><operator pos:start="51:8" pos:end="51:8">!</operator><name pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:9">a</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:17">planar</name></name></expr>)</condition><block type="pseudo" pos:start="51:20" pos:end="51:76"><block_content pos:start="51:20" pos:end="51:76"> <expr_stmt pos:start="51:20" pos:end="51:76"><expr pos:start="51:20" pos:end="51:75"><call pos:start="51:20" pos:end="51:75"><name pos:start="51:20" pos:end="51:25">memcpy</name><argument_list pos:start="51:26" pos:end="51:75">(<argument pos:start="51:27" pos:end="51:34"><expr pos:start="51:27" pos:end="51:34"><name pos:start="51:27" pos:end="51:34"><name pos:start="51:27" pos:end="51:27">a</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:31">ch</name><index pos:start="51:32" pos:end="51:34">[<expr pos:start="51:33" pos:end="51:33"><literal type="number" pos:start="51:33" pos:end="51:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:37" pos:end="51:45"><expr pos:start="51:37" pos:end="51:45"><name pos:start="51:37" pos:end="51:45"><name pos:start="51:37" pos:end="51:39">old</name><operator pos:start="51:40" pos:end="51:40">.</operator><name pos:start="51:41" pos:end="51:42">ch</name><index pos:start="51:43" pos:end="51:45">[<expr pos:start="51:44" pos:end="51:44"><literal type="number" pos:start="51:44" pos:end="51:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:48" pos:end="51:74"><expr pos:start="51:48" pos:end="51:74"><name pos:start="51:48" pos:end="51:55"><name pos:start="51:48" pos:end="51:48">a</name><operator pos:start="51:49" pos:end="51:50">-&gt;</operator><name pos:start="51:51" pos:end="51:55">count</name></name><operator pos:start="51:56" pos:end="51:56">*</operator><name pos:start="51:57" pos:end="51:67"><name pos:start="51:57" pos:end="51:57">a</name><operator pos:start="51:58" pos:end="51:59">-&gt;</operator><name pos:start="51:60" pos:end="51:67">ch_count</name></name><operator pos:start="51:68" pos:end="51:68">*</operator><name pos:start="51:69" pos:end="51:74"><name pos:start="51:69" pos:end="51:69">a</name><operator pos:start="51:70" pos:end="51:71">-&gt;</operator><name pos:start="51:72" pos:end="51:74">bps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:24"><expr pos:start="53:5" pos:end="53:23"><call pos:start="53:5" pos:end="53:23"><name pos:start="53:5" pos:end="53:12">av_freep</name><argument_list pos:start="53:13" pos:end="53:23">(<argument pos:start="53:14" pos:end="53:22"><expr pos:start="53:14" pos:end="53:22"><operator pos:start="53:14" pos:end="53:14">&amp;</operator><name pos:start="53:15" pos:end="53:22"><name pos:start="53:15" pos:end="53:17">old</name><operator pos:start="53:18" pos:end="53:18">.</operator><name pos:start="53:19" pos:end="53:22">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:20"><expr pos:start="55:5" pos:end="55:19"><name pos:start="55:5" pos:end="55:12"><name pos:start="55:5" pos:end="55:5">a</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:12">count</name></name><operator pos:start="55:13" pos:end="55:13">=</operator> <name pos:start="55:15" pos:end="55:19">count</name></expr>;</expr_stmt>



    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
