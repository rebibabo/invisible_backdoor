<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23147.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">idcin_probe</name><parameter_list pos:start="1:23" pos:end="1:38">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:34">AVProbeData</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:33">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:23">number</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="27:7">/*

     * This is what you could call a "probabilistic" file check: Id CIN

     * files don't have a definite file signature. In lieu of such a marker,

     * perform sanity checks on the 5 32-bit header fields:

     *  width, height: greater than 0, less than or equal to 1024

     * audio sample rate: greater than or equal to 8000, less than or

     *  equal to 48000, or 0 for no audio

     * audio sample width (bytes/sample): 0 for no audio, or 1 or 2

     * audio channels: 0 for no audio, or 1 or 2

     */</comment>



    <comment type="block" pos:start="31:5" pos:end="31:41">/* cannot proceed without 20 bytes */</comment>

    <if_stmt pos:start="33:5" pos:end="35:17"><if pos:start="33:5" pos:end="35:17">if <condition pos:start="33:8" pos:end="33:25">(<expr pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:9">p</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:19">buf_size</name></name> <operator pos:start="33:21" pos:end="33:21">&lt;</operator> <literal type="number" pos:start="33:23" pos:end="33:24">20</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:17"><block_content pos:start="35:9" pos:end="35:17">

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:31">/* check the video width */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:10">number</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:32"><name pos:start="41:14" pos:end="41:20">AV_RL32</name><argument_list pos:start="41:21" pos:end="41:32">(<argument pos:start="41:22" pos:end="41:31"><expr pos:start="41:22" pos:end="41:31"><operator pos:start="41:22" pos:end="41:22">&amp;</operator><name pos:start="41:23" pos:end="41:31"><name pos:start="41:23" pos:end="41:23">p</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:28">buf</name><index pos:start="41:29" pos:end="41:31">[<expr pos:start="41:30" pos:end="41:30"><literal type="number" pos:start="41:30" pos:end="41:30">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:16"><if pos:start="43:5" pos:end="45:16">if <condition pos:start="43:8" pos:end="43:41">(<expr pos:start="43:9" pos:end="43:40"><operator pos:start="43:9" pos:end="43:9">(</operator><name pos:start="43:10" pos:end="43:15">number</name> <operator pos:start="43:17" pos:end="43:18">==</operator> <literal type="number" pos:start="43:20" pos:end="43:20">0</literal><operator pos:start="43:21" pos:end="43:21">)</operator> <operator pos:start="43:23" pos:end="43:24">||</operator> <operator pos:start="43:26" pos:end="43:26">(</operator><name pos:start="43:27" pos:end="43:32">number</name> <operator pos:start="43:34" pos:end="43:34">&gt;</operator> <literal type="number" pos:start="43:36" pos:end="43:39">1024</literal><operator pos:start="43:40" pos:end="43:40">)</operator></expr>)</condition><block type="pseudo" pos:start="45:8" pos:end="45:16"><block_content pos:start="45:8" pos:end="45:16">

       <return pos:start="45:8" pos:end="45:16">return <expr pos:start="45:15" pos:end="45:15"><literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:32">/* check the video height */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:33"><expr pos:start="51:5" pos:end="51:32"><name pos:start="51:5" pos:end="51:10">number</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <call pos:start="51:14" pos:end="51:32"><name pos:start="51:14" pos:end="51:20">AV_RL32</name><argument_list pos:start="51:21" pos:end="51:32">(<argument pos:start="51:22" pos:end="51:31"><expr pos:start="51:22" pos:end="51:31"><operator pos:start="51:22" pos:end="51:22">&amp;</operator><name pos:start="51:23" pos:end="51:31"><name pos:start="51:23" pos:end="51:23">p</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:28">buf</name><index pos:start="51:29" pos:end="51:31">[<expr pos:start="51:30" pos:end="51:30"><literal type="number" pos:start="51:30" pos:end="51:30">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:16"><if pos:start="53:5" pos:end="55:16">if <condition pos:start="53:8" pos:end="53:41">(<expr pos:start="53:9" pos:end="53:40"><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:15">number</name> <operator pos:start="53:17" pos:end="53:18">==</operator> <literal type="number" pos:start="53:20" pos:end="53:20">0</literal><operator pos:start="53:21" pos:end="53:21">)</operator> <operator pos:start="53:23" pos:end="53:24">||</operator> <operator pos:start="53:26" pos:end="53:26">(</operator><name pos:start="53:27" pos:end="53:32">number</name> <operator pos:start="53:34" pos:end="53:34">&gt;</operator> <literal type="number" pos:start="53:36" pos:end="53:39">1024</literal><operator pos:start="53:40" pos:end="53:40">)</operator></expr>)</condition><block type="pseudo" pos:start="55:8" pos:end="55:16"><block_content pos:start="55:8" pos:end="55:16">

       <return pos:start="55:8" pos:end="55:16">return <expr pos:start="55:15" pos:end="55:15"><literal type="number" pos:start="55:15" pos:end="55:15">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:37">/* check the audio sample rate */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:33"><expr pos:start="61:5" pos:end="61:32"><name pos:start="61:5" pos:end="61:10">number</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <call pos:start="61:14" pos:end="61:32"><name pos:start="61:14" pos:end="61:20">AV_RL32</name><argument_list pos:start="61:21" pos:end="61:32">(<argument pos:start="61:22" pos:end="61:31"><expr pos:start="61:22" pos:end="61:31"><operator pos:start="61:22" pos:end="61:22">&amp;</operator><name pos:start="61:23" pos:end="61:31"><name pos:start="61:23" pos:end="61:23">p</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:28">buf</name><index pos:start="61:29" pos:end="61:31">[<expr pos:start="61:30" pos:end="61:30"><literal type="number" pos:start="61:30" pos:end="61:30">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="65:17"><if pos:start="63:5" pos:end="65:17">if <condition pos:start="63:8" pos:end="63:62">(<expr pos:start="63:9" pos:end="63:61"><operator pos:start="63:9" pos:end="63:9">(</operator><name pos:start="63:10" pos:end="63:15">number</name> <operator pos:start="63:17" pos:end="63:18">!=</operator> <literal type="number" pos:start="63:20" pos:end="63:20">0</literal><operator pos:start="63:21" pos:end="63:21">)</operator> <operator pos:start="63:23" pos:end="63:24">&amp;&amp;</operator> <operator pos:start="63:26" pos:end="63:26">(</operator><operator pos:start="63:27" pos:end="63:27">(</operator><name pos:start="63:28" pos:end="63:33">number</name> <operator pos:start="63:35" pos:end="63:35">&lt;</operator> <literal type="number" pos:start="63:37" pos:end="63:40">8000</literal><operator pos:start="63:41" pos:end="63:41">)</operator> <operator pos:start="63:43" pos:end="63:43">|</operator> <operator pos:start="63:45" pos:end="63:45">(</operator><name pos:start="63:46" pos:end="63:51">number</name> <operator pos:start="63:53" pos:end="63:53">&gt;</operator> <literal type="number" pos:start="63:55" pos:end="63:59">48000</literal><operator pos:start="63:60" pos:end="63:60">)</operator><operator pos:start="63:61" pos:end="63:61">)</operator></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:17"><block_content pos:start="65:9" pos:end="65:17">

        <return pos:start="65:9" pos:end="65:17">return <expr pos:start="65:16" pos:end="65:16"><literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:38">/* check the audio bytes/sample */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:34"><expr pos:start="71:5" pos:end="71:33"><name pos:start="71:5" pos:end="71:10">number</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <call pos:start="71:14" pos:end="71:33"><name pos:start="71:14" pos:end="71:20">AV_RL32</name><argument_list pos:start="71:21" pos:end="71:33">(<argument pos:start="71:22" pos:end="71:32"><expr pos:start="71:22" pos:end="71:32"><operator pos:start="71:22" pos:end="71:22">&amp;</operator><name pos:start="71:23" pos:end="71:32"><name pos:start="71:23" pos:end="71:23">p</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:28">buf</name><index pos:start="71:29" pos:end="71:32">[<expr pos:start="71:30" pos:end="71:31"><literal type="number" pos:start="71:30" pos:end="71:31">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="75:17"><if pos:start="73:5" pos:end="75:17">if <condition pos:start="73:8" pos:end="73:19">(<expr pos:start="73:9" pos:end="73:18"><name pos:start="73:9" pos:end="73:14">number</name> <operator pos:start="73:16" pos:end="73:16">&gt;</operator> <literal type="number" pos:start="73:18" pos:end="73:18">2</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:17"><block_content pos:start="75:9" pos:end="75:17">

        <return pos:start="75:9" pos:end="75:17">return <expr pos:start="75:16" pos:end="75:16"><literal type="number" pos:start="75:16" pos:end="75:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:34">/* check the audio channels */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:34"><expr pos:start="81:5" pos:end="81:33"><name pos:start="81:5" pos:end="81:10">number</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <call pos:start="81:14" pos:end="81:33"><name pos:start="81:14" pos:end="81:20">AV_RL32</name><argument_list pos:start="81:21" pos:end="81:33">(<argument pos:start="81:22" pos:end="81:32"><expr pos:start="81:22" pos:end="81:32"><operator pos:start="81:22" pos:end="81:22">&amp;</operator><name pos:start="81:23" pos:end="81:32"><name pos:start="81:23" pos:end="81:23">p</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:28">buf</name><index pos:start="81:29" pos:end="81:32">[<expr pos:start="81:30" pos:end="81:31"><literal type="number" pos:start="81:30" pos:end="81:31">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="85:17"><if pos:start="83:5" pos:end="85:17">if <condition pos:start="83:8" pos:end="83:19">(<expr pos:start="83:9" pos:end="83:18"><name pos:start="83:9" pos:end="83:14">number</name> <operator pos:start="83:16" pos:end="83:16">&gt;</operator> <literal type="number" pos:start="83:18" pos:end="83:18">2</literal></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:17"><block_content pos:start="85:9" pos:end="85:17">

        <return pos:start="85:9" pos:end="85:17">return <expr pos:start="85:16" pos:end="85:16"><literal type="number" pos:start="85:16" pos:end="85:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:65">/* return half certainly since this check is a bit sketchy */</comment>

    <return pos:start="91:5" pos:end="91:33">return <expr pos:start="91:12" pos:end="91:32"><name pos:start="91:12" pos:end="91:28">AVPROBE_SCORE_MAX</name> <operator pos:start="91:30" pos:end="91:30">/</operator> <literal type="number" pos:start="91:32" pos:end="91:32">2</literal></expr>;</return>

</block_content>}</block></function>
</unit>
