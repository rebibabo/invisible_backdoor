<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9372.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">input_linux_complete</name><parameter_list pos:start="1:33" pos:end="1:65">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:46">UserCreatable</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">uc</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:57">Error</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier><modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="141:1">{<block_content pos:start="5:5" pos:end="139:11">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">InputLinux</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">il</name> <init pos:start="5:20" pos:end="5:36">= <expr pos:start="5:22" pos:end="5:36"><call pos:start="5:22" pos:end="5:36"><name pos:start="5:22" pos:end="5:32">INPUT_LINUX</name><argument_list pos:start="5:33" pos:end="5:36">(<argument pos:start="5:34" pos:end="5:35"><expr pos:start="5:34" pos:end="5:35"><name pos:start="5:34" pos:end="5:35">uc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:18">evtmap</name></decl>, <decl pos:start="7:21" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:21" pos:end="7:26">relmap</name></decl>, <decl pos:start="7:29" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:29" pos:end="7:34">absmap</name></decl>, <decl pos:start="7:37" pos:end="7:55"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:37" pos:end="7:55"><name pos:start="7:37" pos:end="7:42">keymap</name><index pos:start="7:43" pos:end="7:55">[<expr pos:start="7:44" pos:end="7:54"><name pos:start="7:44" pos:end="7:50">KEY_CNT</name> <operator pos:start="7:52" pos:end="7:52">/</operator> <literal type="number" pos:start="7:54" pos:end="7:54">8</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">rc</name></decl>, <decl pos:start="11:13" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:15">ver</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:19">(<expr pos:start="15:9" pos:end="15:18"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:18"><name pos:start="15:10" pos:end="15:11">il</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:18">evdev</name></name></expr>)</condition> <block pos:start="15:21" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:54"><expr pos:start="17:9" pos:end="17:53"><call pos:start="17:9" pos:end="17:53"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="17:53">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">errp</name></expr></argument>, <argument pos:start="17:26" pos:end="17:52"><expr pos:start="17:26" pos:end="17:52"><literal type="string" pos:start="17:26" pos:end="17:52">"no input device specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:6">il</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:10">fd</name></name> <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:36"><name pos:start="25:14" pos:end="25:17">open</name><argument_list pos:start="25:18" pos:end="25:36">(<argument pos:start="25:19" pos:end="25:27"><expr pos:start="25:19" pos:end="25:27"><name pos:start="25:19" pos:end="25:27"><name pos:start="25:19" pos:end="25:20">il</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:27">evdev</name></name></expr></argument>, <argument pos:start="25:30" pos:end="25:35"><expr pos:start="25:30" pos:end="25:35"><name pos:start="25:30" pos:end="25:35">O_RDWR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:19">(<expr pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:10">il</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:14">fd</name></name> <operator pos:start="27:16" pos:end="27:16">&lt;</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>)</condition>  <block pos:start="27:22" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:15">

        <expr_stmt pos:start="29:9" pos:end="29:53"><expr pos:start="29:9" pos:end="29:52"><call pos:start="29:9" pos:end="29:52"><name pos:start="29:9" pos:end="29:28">error_setg_file_open</name><argument_list pos:start="29:29" pos:end="29:52">(<argument pos:start="29:30" pos:end="29:33"><expr pos:start="29:30" pos:end="29:33"><name pos:start="29:30" pos:end="29:33">errp</name></expr></argument>, <argument pos:start="29:36" pos:end="29:40"><expr pos:start="29:36" pos:end="29:40"><name pos:start="29:36" pos:end="29:40">errno</name></expr></argument>, <argument pos:start="29:43" pos:end="29:51"><expr pos:start="29:43" pos:end="29:51"><name pos:start="29:43" pos:end="29:51"><name pos:start="29:43" pos:end="29:44">il</name><operator pos:start="29:45" pos:end="29:46">-&gt;</operator><name pos:start="29:47" pos:end="29:51">evdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><call pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:21">qemu_set_nonblock</name><argument_list pos:start="35:22" pos:end="35:29">(<argument pos:start="35:23" pos:end="35:28"><expr pos:start="35:23" pos:end="35:28"><name pos:start="35:23" pos:end="35:28"><name pos:start="35:23" pos:end="35:24">il</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:28">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:44"><expr pos:start="39:5" pos:end="39:43"><name pos:start="39:5" pos:end="39:6">rc</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <call pos:start="39:10" pos:end="39:43"><name pos:start="39:10" pos:end="39:14">ioctl</name><argument_list pos:start="39:15" pos:end="39:43">(<argument pos:start="39:16" pos:end="39:21"><expr pos:start="39:16" pos:end="39:21"><name pos:start="39:16" pos:end="39:21"><name pos:start="39:16" pos:end="39:17">il</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:21">fd</name></name></expr></argument>, <argument pos:start="39:24" pos:end="39:36"><expr pos:start="39:24" pos:end="39:36"><name pos:start="39:24" pos:end="39:36">EVIOCGVERSION</name></expr></argument>, <argument pos:start="39:39" pos:end="39:42"><expr pos:start="39:39" pos:end="39:42"><operator pos:start="39:39" pos:end="39:39">&amp;</operator><name pos:start="39:40" pos:end="39:42">ver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:15">(<expr pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:10">rc</name> <operator pos:start="41:12" pos:end="41:12">&lt;</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>)</condition> <block pos:start="41:17" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:23">

        <expr_stmt pos:start="43:9" pos:end="43:66"><expr pos:start="43:9" pos:end="43:65"><call pos:start="43:9" pos:end="43:65"><name pos:start="43:9" pos:end="43:18">error_setg</name><argument_list pos:start="43:19" pos:end="43:65">(<argument pos:start="43:20" pos:end="43:23"><expr pos:start="43:20" pos:end="43:23"><name pos:start="43:20" pos:end="43:23">errp</name></expr></argument>, <argument pos:start="43:26" pos:end="43:53"><expr pos:start="43:26" pos:end="43:53"><literal type="string" pos:start="43:26" pos:end="43:53">"%s: is not an evdev device"</literal></expr></argument>, <argument pos:start="43:56" pos:end="43:64"><expr pos:start="43:56" pos:end="43:64"><name pos:start="43:56" pos:end="43:64"><name pos:start="43:56" pos:end="43:57">il</name><operator pos:start="43:58" pos:end="43:59">-&gt;</operator><name pos:start="43:60" pos:end="43:64">evdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:23">goto <name pos:start="45:14" pos:end="45:22">err_close</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:62"><expr pos:start="51:5" pos:end="51:61"><name pos:start="51:5" pos:end="51:6">rc</name> <operator pos:start="51:8" pos:end="51:8">=</operator> <call pos:start="51:10" pos:end="51:61"><name pos:start="51:10" pos:end="51:14">ioctl</name><argument_list pos:start="51:15" pos:end="51:61">(<argument pos:start="51:16" pos:end="51:21"><expr pos:start="51:16" pos:end="51:21"><name pos:start="51:16" pos:end="51:21"><name pos:start="51:16" pos:end="51:17">il</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:21">fd</name></name></expr></argument>, <argument pos:start="51:24" pos:end="51:51"><expr pos:start="51:24" pos:end="51:51"><call pos:start="51:24" pos:end="51:51"><name pos:start="51:24" pos:end="51:32">EVIOCGBIT</name><argument_list pos:start="51:33" pos:end="51:51">(<argument pos:start="51:34" pos:end="51:34"><expr pos:start="51:34" pos:end="51:34"><literal type="number" pos:start="51:34" pos:end="51:34">0</literal></expr></argument>, <argument pos:start="51:37" pos:end="51:50"><expr pos:start="51:37" pos:end="51:50"><sizeof pos:start="51:37" pos:end="51:50">sizeof<argument_list pos:start="51:43" pos:end="51:50">(<argument pos:start="51:44" pos:end="51:49"><expr pos:start="51:44" pos:end="51:49"><name pos:start="51:44" pos:end="51:49">evtmap</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:54" pos:end="51:60"><expr pos:start="51:54" pos:end="51:60"><operator pos:start="51:54" pos:end="51:54">&amp;</operator><name pos:start="51:55" pos:end="51:60">evtmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:15">(<expr pos:start="53:9" pos:end="53:14"><name pos:start="53:9" pos:end="53:10">rc</name> <operator pos:start="53:12" pos:end="53:12">&lt;</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>)</condition> <block pos:start="53:17" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:23">

        <expr_stmt pos:start="55:9" pos:end="55:69"><expr pos:start="55:9" pos:end="55:68"><call pos:start="55:9" pos:end="55:68"><name pos:start="55:9" pos:end="55:18">error_setg</name><argument_list pos:start="55:19" pos:end="55:68">(<argument pos:start="55:20" pos:end="55:23"><expr pos:start="55:20" pos:end="55:23"><name pos:start="55:20" pos:end="55:23">errp</name></expr></argument>, <argument pos:start="55:26" pos:end="55:56"><expr pos:start="55:26" pos:end="55:56"><literal type="string" pos:start="55:26" pos:end="55:56">"%s: failed to read event bits"</literal></expr></argument>, <argument pos:start="55:59" pos:end="55:67"><expr pos:start="55:59" pos:end="55:67"><name pos:start="55:59" pos:end="55:67"><name pos:start="55:59" pos:end="55:60">il</name><operator pos:start="55:61" pos:end="55:62">-&gt;</operator><name pos:start="55:63" pos:end="55:67">evdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:23">goto <name pos:start="57:14" pos:end="57:22">err_close</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="75:5"><if pos:start="63:5" pos:end="75:5">if <condition pos:start="63:8" pos:end="63:31">(<expr pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:14">evtmap</name> <operator pos:start="63:16" pos:end="63:16">&amp;</operator> <operator pos:start="63:18" pos:end="63:18">(</operator><literal type="number" pos:start="63:19" pos:end="63:19">1</literal> <operator pos:start="63:21" pos:end="63:22">&lt;&lt;</operator> <name pos:start="63:24" pos:end="63:29">EV_REL</name><operator pos:start="63:30" pos:end="63:30">)</operator></expr>)</condition> <block pos:start="63:33" pos:end="75:5">{<block_content pos:start="65:9" pos:end="73:9">

        <expr_stmt pos:start="65:9" pos:end="65:19"><expr pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:14">relmap</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <literal type="number" pos:start="65:18" pos:end="65:18">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:71"><expr pos:start="67:9" pos:end="67:70"><name pos:start="67:9" pos:end="67:10">rc</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <call pos:start="67:14" pos:end="67:70"><name pos:start="67:14" pos:end="67:18">ioctl</name><argument_list pos:start="67:19" pos:end="67:70">(<argument pos:start="67:20" pos:end="67:25"><expr pos:start="67:20" pos:end="67:25"><name pos:start="67:20" pos:end="67:25"><name pos:start="67:20" pos:end="67:21">il</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:25">fd</name></name></expr></argument>, <argument pos:start="67:28" pos:end="67:60"><expr pos:start="67:28" pos:end="67:60"><call pos:start="67:28" pos:end="67:60"><name pos:start="67:28" pos:end="67:36">EVIOCGBIT</name><argument_list pos:start="67:37" pos:end="67:60">(<argument pos:start="67:38" pos:end="67:43"><expr pos:start="67:38" pos:end="67:43"><name pos:start="67:38" pos:end="67:43">EV_REL</name></expr></argument>, <argument pos:start="67:46" pos:end="67:59"><expr pos:start="67:46" pos:end="67:59"><sizeof pos:start="67:46" pos:end="67:59">sizeof<argument_list pos:start="67:52" pos:end="67:59">(<argument pos:start="67:53" pos:end="67:58"><expr pos:start="67:53" pos:end="67:58"><name pos:start="67:53" pos:end="67:58">relmap</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="67:63" pos:end="67:69"><expr pos:start="67:63" pos:end="67:69"><operator pos:start="67:63" pos:end="67:63">&amp;</operator><name pos:start="67:64" pos:end="67:69">relmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:34">(<expr pos:start="69:13" pos:end="69:33"><name pos:start="69:13" pos:end="69:18">relmap</name> <operator pos:start="69:20" pos:end="69:20">&amp;</operator> <operator pos:start="69:22" pos:end="69:22">(</operator><literal type="number" pos:start="69:23" pos:end="69:23">1</literal> <operator pos:start="69:25" pos:end="69:26">&lt;&lt;</operator> <name pos:start="69:28" pos:end="69:32">REL_X</name><operator pos:start="69:33" pos:end="69:33">)</operator></expr>)</condition> <block pos:start="69:36" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:33">

            <expr_stmt pos:start="71:13" pos:end="71:33"><expr pos:start="71:13" pos:end="71:32"><name pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:14">il</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:25">has_rel_x</name></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <name pos:start="71:29" pos:end="71:32">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="91:5"><if pos:start="79:5" pos:end="91:5">if <condition pos:start="79:8" pos:end="79:31">(<expr pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:14">evtmap</name> <operator pos:start="79:16" pos:end="79:16">&amp;</operator> <operator pos:start="79:18" pos:end="79:18">(</operator><literal type="number" pos:start="79:19" pos:end="79:19">1</literal> <operator pos:start="79:21" pos:end="79:22">&lt;&lt;</operator> <name pos:start="79:24" pos:end="79:29">EV_ABS</name><operator pos:start="79:30" pos:end="79:30">)</operator></expr>)</condition> <block pos:start="79:33" pos:end="91:5">{<block_content pos:start="81:9" pos:end="89:9">

        <expr_stmt pos:start="81:9" pos:end="81:19"><expr pos:start="81:9" pos:end="81:18"><name pos:start="81:9" pos:end="81:14">absmap</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:71"><expr pos:start="83:9" pos:end="83:70"><name pos:start="83:9" pos:end="83:10">rc</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <call pos:start="83:14" pos:end="83:70"><name pos:start="83:14" pos:end="83:18">ioctl</name><argument_list pos:start="83:19" pos:end="83:70">(<argument pos:start="83:20" pos:end="83:25"><expr pos:start="83:20" pos:end="83:25"><name pos:start="83:20" pos:end="83:25"><name pos:start="83:20" pos:end="83:21">il</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:25">fd</name></name></expr></argument>, <argument pos:start="83:28" pos:end="83:60"><expr pos:start="83:28" pos:end="83:60"><call pos:start="83:28" pos:end="83:60"><name pos:start="83:28" pos:end="83:36">EVIOCGBIT</name><argument_list pos:start="83:37" pos:end="83:60">(<argument pos:start="83:38" pos:end="83:43"><expr pos:start="83:38" pos:end="83:43"><name pos:start="83:38" pos:end="83:43">EV_ABS</name></expr></argument>, <argument pos:start="83:46" pos:end="83:59"><expr pos:start="83:46" pos:end="83:59"><sizeof pos:start="83:46" pos:end="83:59">sizeof<argument_list pos:start="83:52" pos:end="83:59">(<argument pos:start="83:53" pos:end="83:58"><expr pos:start="83:53" pos:end="83:58"><name pos:start="83:53" pos:end="83:58">absmap</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="83:63" pos:end="83:69"><expr pos:start="83:63" pos:end="83:69"><operator pos:start="83:63" pos:end="83:63">&amp;</operator><name pos:start="83:64" pos:end="83:69">absmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="89:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:34">(<expr pos:start="85:13" pos:end="85:33"><name pos:start="85:13" pos:end="85:18">absmap</name> <operator pos:start="85:20" pos:end="85:20">&amp;</operator> <operator pos:start="85:22" pos:end="85:22">(</operator><literal type="number" pos:start="85:23" pos:end="85:23">1</literal> <operator pos:start="85:25" pos:end="85:26">&lt;&lt;</operator> <name pos:start="85:28" pos:end="85:32">ABS_X</name><operator pos:start="85:33" pos:end="85:33">)</operator></expr>)</condition> <block pos:start="85:36" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:33">

            <expr_stmt pos:start="87:13" pos:end="87:33"><expr pos:start="87:13" pos:end="87:32"><name pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:14">il</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:25">has_abs_x</name></name> <operator pos:start="87:27" pos:end="87:27">=</operator> <name pos:start="87:29" pos:end="87:32">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="95:5" pos:end="119:5"><if pos:start="95:5" pos:end="119:5">if <condition pos:start="95:8" pos:end="95:31">(<expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:14">evtmap</name> <operator pos:start="95:16" pos:end="95:16">&amp;</operator> <operator pos:start="95:18" pos:end="95:18">(</operator><literal type="number" pos:start="95:19" pos:end="95:19">1</literal> <operator pos:start="95:21" pos:end="95:22">&lt;&lt;</operator> <name pos:start="95:24" pos:end="95:29">EV_KEY</name><operator pos:start="95:30" pos:end="95:30">)</operator></expr>)</condition> <block pos:start="95:33" pos:end="119:5">{<block_content pos:start="97:9" pos:end="117:9">

        <expr_stmt pos:start="97:9" pos:end="97:42"><expr pos:start="97:9" pos:end="97:41"><call pos:start="97:9" pos:end="97:41"><name pos:start="97:9" pos:end="97:14">memset</name><argument_list pos:start="97:15" pos:end="97:41">(<argument pos:start="97:16" pos:end="97:21"><expr pos:start="97:16" pos:end="97:21"><name pos:start="97:16" pos:end="97:21">keymap</name></expr></argument>, <argument pos:start="97:24" pos:end="97:24"><expr pos:start="97:24" pos:end="97:24"><literal type="number" pos:start="97:24" pos:end="97:24">0</literal></expr></argument>, <argument pos:start="97:27" pos:end="97:40"><expr pos:start="97:27" pos:end="97:40"><sizeof pos:start="97:27" pos:end="97:40">sizeof<argument_list pos:start="97:33" pos:end="97:40">(<argument pos:start="97:34" pos:end="97:39"><expr pos:start="97:34" pos:end="97:39"><name pos:start="97:34" pos:end="97:39">keymap</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:70"><expr pos:start="99:9" pos:end="99:69"><name pos:start="99:9" pos:end="99:10">rc</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <call pos:start="99:14" pos:end="99:69"><name pos:start="99:14" pos:end="99:18">ioctl</name><argument_list pos:start="99:19" pos:end="99:69">(<argument pos:start="99:20" pos:end="99:25"><expr pos:start="99:20" pos:end="99:25"><name pos:start="99:20" pos:end="99:25"><name pos:start="99:20" pos:end="99:21">il</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:25">fd</name></name></expr></argument>, <argument pos:start="99:28" pos:end="99:60"><expr pos:start="99:28" pos:end="99:60"><call pos:start="99:28" pos:end="99:60"><name pos:start="99:28" pos:end="99:36">EVIOCGBIT</name><argument_list pos:start="99:37" pos:end="99:60">(<argument pos:start="99:38" pos:end="99:43"><expr pos:start="99:38" pos:end="99:43"><name pos:start="99:38" pos:end="99:43">EV_KEY</name></expr></argument>, <argument pos:start="99:46" pos:end="99:59"><expr pos:start="99:46" pos:end="99:59"><sizeof pos:start="99:46" pos:end="99:59">sizeof<argument_list pos:start="99:52" pos:end="99:59">(<argument pos:start="99:53" pos:end="99:58"><expr pos:start="99:53" pos:end="99:58"><name pos:start="99:53" pos:end="99:58">keymap</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:63" pos:end="99:68"><expr pos:start="99:63" pos:end="99:68"><name pos:start="99:63" pos:end="99:68">keymap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="101:9" pos:end="117:9">for <control pos:start="101:13" pos:end="101:37">(<init pos:start="101:14" pos:end="101:19"><expr pos:start="101:14" pos:end="101:18"><name pos:start="101:14" pos:end="101:14">i</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <literal type="number" pos:start="101:18" pos:end="101:18">0</literal></expr>;</init> <condition pos:start="101:21" pos:end="101:32"><expr pos:start="101:21" pos:end="101:31"><name pos:start="101:21" pos:end="101:21">i</name> <operator pos:start="101:23" pos:end="101:23">&lt;</operator> <name pos:start="101:25" pos:end="101:31">KEY_CNT</name></expr>;</condition> <incr pos:start="101:34" pos:end="101:36"><expr pos:start="101:34" pos:end="101:36"><name pos:start="101:34" pos:end="101:34">i</name><operator pos:start="101:35" pos:end="101:36">++</operator></expr></incr>)</control> <block pos:start="101:39" pos:end="117:9">{<block_content pos:start="103:13" pos:end="115:13">

            <if_stmt pos:start="103:13" pos:end="115:13"><if pos:start="103:13" pos:end="115:13">if <condition pos:start="103:16" pos:end="103:47">(<expr pos:start="103:17" pos:end="103:46"><name pos:start="103:17" pos:end="103:29"><name pos:start="103:17" pos:end="103:22">keymap</name><index pos:start="103:23" pos:end="103:29">[<expr pos:start="103:24" pos:end="103:28"><name pos:start="103:24" pos:end="103:24">i</name> <operator pos:start="103:26" pos:end="103:26">/</operator> <literal type="number" pos:start="103:28" pos:end="103:28">8</literal></expr>]</index></name> <operator pos:start="103:31" pos:end="103:31">&amp;</operator> <operator pos:start="103:33" pos:end="103:33">(</operator><literal type="number" pos:start="103:34" pos:end="103:34">1</literal> <operator pos:start="103:36" pos:end="103:37">&lt;&lt;</operator> <operator pos:start="103:39" pos:end="103:39">(</operator><name pos:start="103:40" pos:end="103:40">i</name> <operator pos:start="103:42" pos:end="103:42">%</operator> <literal type="number" pos:start="103:44" pos:end="103:44">8</literal><operator pos:start="103:45" pos:end="103:45">)</operator><operator pos:start="103:46" pos:end="103:46">)</operator></expr>)</condition> <block pos:start="103:49" pos:end="115:13">{<block_content pos:start="105:17" pos:end="113:17">

                <if_stmt pos:start="105:17" pos:end="113:17"><if pos:start="105:17" pos:end="109:17">if <condition pos:start="105:20" pos:end="105:39">(<expr pos:start="105:21" pos:end="105:38"><call pos:start="105:21" pos:end="105:38"><name pos:start="105:21" pos:end="105:35">linux_is_button</name><argument_list pos:start="105:36" pos:end="105:38">(<argument pos:start="105:37" pos:end="105:37"><expr pos:start="105:37" pos:end="105:37"><name pos:start="105:37" pos:end="105:37">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="105:41" pos:end="109:17">{<block_content pos:start="107:21" pos:end="107:35">

                    <expr_stmt pos:start="107:21" pos:end="107:35"><expr pos:start="107:21" pos:end="107:34"><name pos:start="107:21" pos:end="107:32"><name pos:start="107:21" pos:end="107:22">il</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:32">num_btns</name></name><operator pos:start="107:33" pos:end="107:34">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="109:19" pos:end="113:17">else <block pos:start="109:24" pos:end="113:17">{<block_content pos:start="111:21" pos:end="111:35">

                    <expr_stmt pos:start="111:21" pos:end="111:35"><expr pos:start="111:21" pos:end="111:34"><name pos:start="111:21" pos:end="111:32"><name pos:start="111:21" pos:end="111:22">il</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:32">num_keys</name></name><operator pos:start="111:33" pos:end="111:34">++</operator></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:61"><expr pos:start="123:5" pos:end="123:60"><call pos:start="123:5" pos:end="123:60"><name pos:start="123:5" pos:end="123:23">qemu_set_fd_handler</name><argument_list pos:start="123:24" pos:end="123:60">(<argument pos:start="123:25" pos:end="123:30"><expr pos:start="123:25" pos:end="123:30"><name pos:start="123:25" pos:end="123:30"><name pos:start="123:25" pos:end="123:26">il</name><operator pos:start="123:27" pos:end="123:28">-&gt;</operator><name pos:start="123:29" pos:end="123:30">fd</name></name></expr></argument>, <argument pos:start="123:33" pos:end="123:49"><expr pos:start="123:33" pos:end="123:49"><name pos:start="123:33" pos:end="123:49">input_linux_event</name></expr></argument>, <argument pos:start="123:52" pos:end="123:55"><expr pos:start="123:52" pos:end="123:55"><name pos:start="123:52" pos:end="123:55">NULL</name></expr></argument>, <argument pos:start="123:58" pos:end="123:59"><expr pos:start="123:58" pos:end="123:59"><name pos:start="123:58" pos:end="123:59">il</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:32"><expr pos:start="125:5" pos:end="125:31"><call pos:start="125:5" pos:end="125:31"><name pos:start="125:5" pos:end="125:27">input_linux_toggle_grab</name><argument_list pos:start="125:28" pos:end="125:31">(<argument pos:start="125:29" pos:end="125:30"><expr pos:start="125:29" pos:end="125:30"><name pos:start="125:29" pos:end="125:30">il</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:42"><expr pos:start="127:5" pos:end="127:41"><call pos:start="127:5" pos:end="127:41"><name pos:start="127:5" pos:end="127:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="127:23" pos:end="127:41">(<argument pos:start="127:24" pos:end="127:30"><expr pos:start="127:24" pos:end="127:30"><operator pos:start="127:24" pos:end="127:24">&amp;</operator><name pos:start="127:25" pos:end="127:30">inputs</name></expr></argument>, <argument pos:start="127:33" pos:end="127:34"><expr pos:start="127:33" pos:end="127:34"><name pos:start="127:33" pos:end="127:34">il</name></expr></argument>, <argument pos:start="127:37" pos:end="127:40"><expr pos:start="127:37" pos:end="127:40"><name pos:start="127:37" pos:end="127:40">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:27"><expr pos:start="129:5" pos:end="129:26"><name pos:start="129:5" pos:end="129:19"><name pos:start="129:5" pos:end="129:6">il</name><operator pos:start="129:7" pos:end="129:8">-&gt;</operator><name pos:start="129:9" pos:end="129:19">initialized</name></name> <operator pos:start="129:21" pos:end="129:21">=</operator> <name pos:start="129:23" pos:end="129:26">true</name></expr>;</expr_stmt>

    <return pos:start="131:5" pos:end="131:11">return;</return>



<label pos:start="135:1" pos:end="135:10"><name pos:start="135:1" pos:end="135:9">err_close</name>:</label>

    <expr_stmt pos:start="137:5" pos:end="137:18"><expr pos:start="137:5" pos:end="137:17"><call pos:start="137:5" pos:end="137:17"><name pos:start="137:5" pos:end="137:9">close</name><argument_list pos:start="137:10" pos:end="137:17">(<argument pos:start="137:11" pos:end="137:16"><expr pos:start="137:11" pos:end="137:16"><name pos:start="137:11" pos:end="137:16"><name pos:start="137:11" pos:end="137:12">il</name><operator pos:start="137:13" pos:end="137:14">-&gt;</operator><name pos:start="137:15" pos:end="137:16">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="139:5" pos:end="139:11">return;</return>

</block_content>}</block></function>
</unit>
