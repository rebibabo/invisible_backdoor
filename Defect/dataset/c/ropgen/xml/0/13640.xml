<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13640.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:32">calc_rice_params</name><parameter_list pos:start="1:33" pos:end="3:70">(<parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:48"><name pos:start="1:34" pos:end="1:44">RiceContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">rc</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:58"><decl pos:start="1:51" pos:end="1:58"><type pos:start="1:51" pos:end="1:58"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:58">pmin</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:68"><decl pos:start="1:61" pos:end="1:68"><type pos:start="1:61" pos:end="1:68"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:68">pmax</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:46"><decl pos:start="3:34" pos:end="3:46"><type pos:start="3:34" pos:end="3:46"><name pos:start="3:34" pos:end="3:40">int32_t</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:46">data</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:53"><decl pos:start="3:49" pos:end="3:53"><type pos:start="3:49" pos:end="3:53"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:53">n</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:69"><decl pos:start="3:56" pos:end="3:69"><type pos:start="3:56" pos:end="3:69"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:69">pred_order</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:28">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:40"><name pos:start="9:14" pos:end="9:17">bits</name><index pos:start="9:18" pos:end="9:40">[<expr pos:start="9:19" pos:end="9:39"><name pos:start="9:19" pos:end="9:37">MAX_PARTITION_ORDER</name><operator pos:start="9:38" pos:end="9:38">+</operator><literal type="number" pos:start="9:39" pos:end="9:39">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">opt_porder</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">RiceContext</name></type> <name pos:start="13:17" pos:end="13:22">tmp_rc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">uint32_t</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:19">udata</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:71"><decl pos:start="17:5" pos:end="17:70"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:58"><name pos:start="17:14" pos:end="17:17">sums</name><index pos:start="17:18" pos:end="17:42">[<expr pos:start="17:19" pos:end="17:41"><name pos:start="17:19" pos:end="17:37">MAX_PARTITION_ORDER</name> <operator pos:start="17:39" pos:end="17:39">+</operator> <literal type="number" pos:start="17:41" pos:end="17:41">1</literal></expr>]</index><index pos:start="17:43" pos:end="17:58">[<expr pos:start="17:44" pos:end="17:57"><name pos:start="17:44" pos:end="17:57">MAX_PARTITIONS</name></expr>]</index></name> <init pos:start="17:60" pos:end="17:70">= <expr pos:start="17:62" pos:end="17:70"><block pos:start="17:62" pos:end="17:70">{ <expr pos:start="17:64" pos:end="17:68"><block pos:start="17:64" pos:end="17:68">{ <expr pos:start="17:66" pos:end="17:66"><literal type="number" pos:start="17:66" pos:end="17:66">0</literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:53"><expr pos:start="21:5" pos:end="21:52"><call pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:10">assert</name><argument_list pos:start="21:11" pos:end="21:52">(<argument pos:start="21:12" pos:end="21:51"><expr pos:start="21:12" pos:end="21:51"><name pos:start="21:12" pos:end="21:15">pmin</name> <operator pos:start="21:17" pos:end="21:18">&gt;=</operator> <literal type="number" pos:start="21:20" pos:end="21:20">0</literal> <operator pos:start="21:22" pos:end="21:23">&amp;&amp;</operator> <name pos:start="21:25" pos:end="21:28">pmin</name> <operator pos:start="21:30" pos:end="21:31">&lt;=</operator> <name pos:start="21:33" pos:end="21:51">MAX_PARTITION_ORDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:53"><expr pos:start="23:5" pos:end="23:52"><call pos:start="23:5" pos:end="23:52"><name pos:start="23:5" pos:end="23:10">assert</name><argument_list pos:start="23:11" pos:end="23:52">(<argument pos:start="23:12" pos:end="23:51"><expr pos:start="23:12" pos:end="23:51"><name pos:start="23:12" pos:end="23:15">pmax</name> <operator pos:start="23:17" pos:end="23:18">&gt;=</operator> <literal type="number" pos:start="23:20" pos:end="23:20">0</literal> <operator pos:start="23:22" pos:end="23:23">&amp;&amp;</operator> <name pos:start="23:25" pos:end="23:28">pmax</name> <operator pos:start="23:30" pos:end="23:31">&lt;=</operator> <name pos:start="23:33" pos:end="23:51">MAX_PARTITION_ORDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><call pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:10">assert</name><argument_list pos:start="25:11" pos:end="25:24">(<argument pos:start="25:12" pos:end="25:23"><expr pos:start="25:12" pos:end="25:23"><name pos:start="25:12" pos:end="25:15">pmin</name> <operator pos:start="25:17" pos:end="25:18">&lt;=</operator> <name pos:start="25:20" pos:end="25:23">pmax</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:41"><expr pos:start="29:5" pos:end="29:40"><name pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:10">tmp_rc</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:22">coding_mode</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:40"><name pos:start="29:26" pos:end="29:27">rc</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:40">coding_mode</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:44"><expr pos:start="33:5" pos:end="33:43"><name pos:start="33:5" pos:end="33:9">udata</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <call pos:start="33:13" pos:end="33:43"><name pos:start="33:13" pos:end="33:21">av_malloc</name><argument_list pos:start="33:22" pos:end="33:43">(<argument pos:start="33:23" pos:end="33:42"><expr pos:start="33:23" pos:end="33:42"><name pos:start="33:23" pos:end="33:23">n</name> <operator pos:start="33:25" pos:end="33:25">*</operator> <sizeof pos:start="33:27" pos:end="33:42">sizeof<argument_list pos:start="33:33" pos:end="33:42">(<argument pos:start="33:34" pos:end="33:41"><expr pos:start="33:34" pos:end="33:41"><name pos:start="33:34" pos:end="33:41">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="37:47">for <control pos:start="35:9" pos:end="35:27">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:21">n</name></expr>;</condition> <incr pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:24">i</name><operator pos:start="35:25" pos:end="35:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:9" pos:end="37:47"><block_content pos:start="37:9" pos:end="37:47">

        <expr_stmt pos:start="37:9" pos:end="37:47"><expr pos:start="37:9" pos:end="37:46"><name pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:13">udata</name><index pos:start="37:14" pos:end="37:16">[<expr pos:start="37:15" pos:end="37:15"><name pos:start="37:15" pos:end="37:15">i</name></expr>]</index></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <operator pos:start="37:20" pos:end="37:20">(</operator><literal type="number" pos:start="37:21" pos:end="37:21">2</literal><operator pos:start="37:22" pos:end="37:22">*</operator><name pos:start="37:23" pos:end="37:29"><name pos:start="37:23" pos:end="37:26">data</name><index pos:start="37:27" pos:end="37:29">[<expr pos:start="37:28" pos:end="37:28"><name pos:start="37:28" pos:end="37:28">i</name></expr>]</index></name><operator pos:start="37:30" pos:end="37:30">)</operator> <operator pos:start="37:32" pos:end="37:32">^</operator> <operator pos:start="37:34" pos:end="37:34">(</operator><name pos:start="37:35" pos:end="37:41"><name pos:start="37:35" pos:end="37:38">data</name><index pos:start="37:39" pos:end="37:41">[<expr pos:start="37:40" pos:end="37:40"><name pos:start="37:40" pos:end="37:40">i</name></expr>]</index></name><operator pos:start="37:42" pos:end="37:43">&gt;&gt;</operator><literal type="number" pos:start="37:44" pos:end="37:45">31</literal><operator pos:start="37:46" pos:end="37:46">)</operator></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="41:5" pos:end="41:54"><expr pos:start="41:5" pos:end="41:53"><call pos:start="41:5" pos:end="41:53"><name pos:start="41:5" pos:end="41:13">calc_sums</name><argument_list pos:start="41:14" pos:end="41:53">(<argument pos:start="41:15" pos:end="41:18"><expr pos:start="41:15" pos:end="41:18"><name pos:start="41:15" pos:end="41:18">pmin</name></expr></argument>, <argument pos:start="41:21" pos:end="41:24"><expr pos:start="41:21" pos:end="41:24"><name pos:start="41:21" pos:end="41:24">pmax</name></expr></argument>, <argument pos:start="41:27" pos:end="41:31"><expr pos:start="41:27" pos:end="41:31"><name pos:start="41:27" pos:end="41:31">udata</name></expr></argument>, <argument pos:start="41:34" pos:end="41:34"><expr pos:start="41:34" pos:end="41:34"><name pos:start="41:34" pos:end="41:34">n</name></expr></argument>, <argument pos:start="41:37" pos:end="41:46"><expr pos:start="41:37" pos:end="41:46"><name pos:start="41:37" pos:end="41:46">pred_order</name></expr></argument>, <argument pos:start="41:49" pos:end="41:52"><expr pos:start="41:49" pos:end="41:52"><name pos:start="41:49" pos:end="41:52">sums</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:22"><expr pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:14">opt_porder</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:21">pmin</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:28"><expr pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:8">bits</name><index pos:start="47:9" pos:end="47:14">[<expr pos:start="47:10" pos:end="47:13"><name pos:start="47:10" pos:end="47:13">pmin</name></expr>]</index></name> <operator pos:start="47:16" pos:end="47:16">=</operator> <name pos:start="47:18" pos:end="47:27">UINT32_MAX</name></expr>;</expr_stmt>

    <for pos:start="49:5" pos:end="61:5">for <control pos:start="49:9" pos:end="49:34">(<init pos:start="49:10" pos:end="49:18"><expr pos:start="49:10" pos:end="49:17"><name pos:start="49:10" pos:end="49:10">i</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <name pos:start="49:14" pos:end="49:17">pmin</name></expr>;</init> <condition pos:start="49:20" pos:end="49:29"><expr pos:start="49:20" pos:end="49:28"><name pos:start="49:20" pos:end="49:20">i</name> <operator pos:start="49:22" pos:end="49:23">&lt;=</operator> <name pos:start="49:25" pos:end="49:28">pmax</name></expr>;</condition> <incr pos:start="49:31" pos:end="49:33"><expr pos:start="49:31" pos:end="49:33"><name pos:start="49:31" pos:end="49:31">i</name><operator pos:start="49:32" pos:end="49:33">++</operator></expr></incr>)</control> <block pos:start="49:36" pos:end="61:5">{<block_content pos:start="51:9" pos:end="59:9">

        <expr_stmt pos:start="51:9" pos:end="51:79"><expr pos:start="51:9" pos:end="51:78"><name pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:12">bits</name><index pos:start="51:13" pos:end="51:15">[<expr pos:start="51:14" pos:end="51:14"><name pos:start="51:14" pos:end="51:14">i</name></expr>]</index></name> <operator pos:start="51:17" pos:end="51:17">=</operator> <call pos:start="51:19" pos:end="51:78"><name pos:start="51:19" pos:end="51:42">calc_optimal_rice_params</name><argument_list pos:start="51:43" pos:end="51:78">(<argument pos:start="51:44" pos:end="51:50"><expr pos:start="51:44" pos:end="51:50"><operator pos:start="51:44" pos:end="51:44">&amp;</operator><name pos:start="51:45" pos:end="51:50">tmp_rc</name></expr></argument>, <argument pos:start="51:53" pos:end="51:53"><expr pos:start="51:53" pos:end="51:53"><name pos:start="51:53" pos:end="51:53">i</name></expr></argument>, <argument pos:start="51:56" pos:end="51:62"><expr pos:start="51:56" pos:end="51:62"><name pos:start="51:56" pos:end="51:62"><name pos:start="51:56" pos:end="51:59">sums</name><index pos:start="51:60" pos:end="51:62">[<expr pos:start="51:61" pos:end="51:61"><name pos:start="51:61" pos:end="51:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="51:65" pos:end="51:65"><expr pos:start="51:65" pos:end="51:65"><name pos:start="51:65" pos:end="51:65">n</name></expr></argument>, <argument pos:start="51:68" pos:end="51:77"><expr pos:start="51:68" pos:end="51:77"><name pos:start="51:68" pos:end="51:77">pred_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:40">(<expr pos:start="53:13" pos:end="53:39"><name pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:16">bits</name><index pos:start="53:17" pos:end="53:19">[<expr pos:start="53:18" pos:end="53:18"><name pos:start="53:18" pos:end="53:18">i</name></expr>]</index></name> <operator pos:start="53:21" pos:end="53:22">&lt;=</operator> <name pos:start="53:24" pos:end="53:39"><name pos:start="53:24" pos:end="53:27">bits</name><index pos:start="53:28" pos:end="53:39">[<expr pos:start="53:29" pos:end="53:38"><name pos:start="53:29" pos:end="53:38">opt_porder</name></expr>]</index></name></expr>)</condition> <block pos:start="53:42" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:25">

            <expr_stmt pos:start="55:13" pos:end="55:27"><expr pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:22">opt_porder</name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:26">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:25"><expr pos:start="57:13" pos:end="57:24"><operator pos:start="57:13" pos:end="57:13">*</operator><name pos:start="57:14" pos:end="57:15">rc</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:24">tmp_rc</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="65:5" pos:end="65:21"><expr pos:start="65:5" pos:end="65:20"><call pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:12">av_freep</name><argument_list pos:start="65:13" pos:end="65:20">(<argument pos:start="65:14" pos:end="65:19"><expr pos:start="65:14" pos:end="65:19"><operator pos:start="65:14" pos:end="65:14">&amp;</operator><name pos:start="65:15" pos:end="65:19">udata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="67:5" pos:end="67:28">return <expr pos:start="67:12" pos:end="67:27"><name pos:start="67:12" pos:end="67:27"><name pos:start="67:12" pos:end="67:15">bits</name><index pos:start="67:16" pos:end="67:27">[<expr pos:start="67:17" pos:end="67:26"><name pos:start="67:17" pos:end="67:26">opt_porder</name></expr>]</index></name></expr>;</return>

</block_content>}</block></function>
</unit>
