<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2919.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">esp_reg_write</name><parameter_list pos:start="1:19" pos:end="1:61">(<parameter pos:start="1:20" pos:end="1:30"><decl pos:start="1:20" pos:end="1:30"><type pos:start="1:20" pos:end="1:30"><name pos:start="1:20" pos:end="1:27">ESPState</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:30">s</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:46"><decl pos:start="1:33" pos:end="1:46"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:40">uint32_t</name></type> <name pos:start="1:42" pos:end="1:46">saddr</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:56">uint64_t</name></type> <name pos:start="1:58" pos:end="1:60">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="253:1">{<block_content pos:start="5:5" pos:end="251:26">

    <expr_stmt pos:start="5:5" pos:end="5:54"><expr pos:start="5:5" pos:end="5:53"><call pos:start="5:5" pos:end="5:53"><name pos:start="5:5" pos:end="5:24">trace_esp_mem_writeb</name><argument_list pos:start="5:25" pos:end="5:53">(<argument pos:start="5:26" pos:end="5:30"><expr pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:30">saddr</name></expr></argument>, <argument pos:start="5:33" pos:end="5:47"><expr pos:start="5:33" pos:end="5:47"><name pos:start="5:33" pos:end="5:47"><name pos:start="5:33" pos:end="5:33">s</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:40">wregs</name><index pos:start="5:41" pos:end="5:47">[<expr pos:start="5:42" pos:end="5:46"><name pos:start="5:42" pos:end="5:46">saddr</name></expr>]</index></name></expr></argument>, <argument pos:start="5:50" pos:end="5:52"><expr pos:start="5:50" pos:end="5:52"><name pos:start="5:50" pos:end="5:52">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="7:5" pos:end="249:5">switch <condition pos:start="7:12" pos:end="7:18">(<expr pos:start="7:13" pos:end="7:17"><name pos:start="7:13" pos:end="7:17">saddr</name></expr>)</condition> <block pos:start="7:20" pos:end="249:5">{<block_content pos:start="9:5" pos:end="247:15">

    <case pos:start="9:5" pos:end="9:18">case <expr pos:start="9:10" pos:end="9:17"><name pos:start="9:10" pos:end="9:17">ESP_TCHI</name></expr>:</case>

        <expr_stmt pos:start="11:9" pos:end="11:31"><expr pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:23">tchi_written</name></name> <operator pos:start="11:25" pos:end="11:25">=</operator> <name pos:start="11:27" pos:end="11:30">true</name></expr>;</expr_stmt>

        <comment type="block" pos:start="13:9" pos:end="13:26">/* fall through */</comment>

    <case pos:start="15:5" pos:end="15:18">case <expr pos:start="15:10" pos:end="15:17"><name pos:start="15:10" pos:end="15:17">ESP_TCLO</name></expr>:</case>

    <case pos:start="17:5" pos:end="17:19">case <expr pos:start="17:10" pos:end="17:18"><name pos:start="17:10" pos:end="17:18">ESP_TCMID</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:40"><expr pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:16">rregs</name><index pos:start="19:17" pos:end="19:27">[<expr pos:start="19:18" pos:end="19:26"><name pos:start="19:18" pos:end="19:26">ESP_RSTAT</name></expr>]</index></name> <operator pos:start="19:29" pos:end="19:30">&amp;=</operator> <operator pos:start="19:32" pos:end="19:32">~</operator><name pos:start="19:33" pos:end="19:39">STAT_TC</name></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:18">case <expr pos:start="23:10" pos:end="23:17"><name pos:start="23:10" pos:end="23:17">ESP_FIFO</name></expr>:</case>

        <if_stmt pos:start="25:9" pos:end="47:9"><if pos:start="25:9" pos:end="37:9">if <condition pos:start="25:12" pos:end="25:22">(<expr pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:21">do_cmd</name></name></expr>)</condition> <block pos:start="25:24" pos:end="37:9">{<block_content pos:start="27:13" pos:end="35:13">

            <if_stmt pos:start="27:13" pos:end="35:13"><if pos:start="27:13" pos:end="31:13">if <condition pos:start="27:16" pos:end="27:37">(<expr pos:start="27:17" pos:end="27:36"><name pos:start="27:17" pos:end="27:25"><name pos:start="27:17" pos:end="27:17">s</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:25">cmdlen</name></name> <operator pos:start="27:27" pos:end="27:27">&lt;</operator> <name pos:start="27:29" pos:end="27:36">TI_BUFSZ</name></expr>)</condition> <block pos:start="27:39" pos:end="31:13">{<block_content pos:start="29:17" pos:end="29:52">

                <expr_stmt pos:start="29:17" pos:end="29:52"><expr pos:start="29:17" pos:end="29:51"><name pos:start="29:17" pos:end="29:38"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:25">cmdbuf</name><index pos:start="29:26" pos:end="29:38">[<expr pos:start="29:27" pos:end="29:37"><name pos:start="29:27" pos:end="29:35"><name pos:start="29:27" pos:end="29:27">s</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:35">cmdlen</name></name><operator pos:start="29:36" pos:end="29:37">++</operator></expr>]</index></name> <operator pos:start="29:40" pos:end="29:40">=</operator> <name pos:start="29:42" pos:end="29:44">val</name> <operator pos:start="29:46" pos:end="29:46">&amp;</operator> <literal type="number" pos:start="29:48" pos:end="29:51">0xff</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="31:15" pos:end="35:13">else <block pos:start="31:20" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:47">

                <expr_stmt pos:start="33:17" pos:end="33:47"><expr pos:start="33:17" pos:end="33:46"><call pos:start="33:17" pos:end="33:46"><name pos:start="33:17" pos:end="33:44">trace_esp_error_fifo_overrun</name><argument_list pos:start="33:45" pos:end="33:46">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="37:11" pos:end="41:9">else if <condition pos:start="37:19" pos:end="37:46">(<expr pos:start="37:20" pos:end="37:45"><name pos:start="37:20" pos:end="37:29"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:29">ti_size</name></name> <operator pos:start="37:31" pos:end="37:32">==</operator> <name pos:start="37:34" pos:end="37:41">TI_BUFSZ</name> <operator pos:start="37:43" pos:end="37:43">-</operator> <literal type="number" pos:start="37:45" pos:end="37:45">1</literal></expr>)</condition> <block pos:start="37:48" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:43">

            <expr_stmt pos:start="39:13" pos:end="39:43"><expr pos:start="39:13" pos:end="39:42"><call pos:start="39:13" pos:end="39:42"><name pos:start="39:13" pos:end="39:40">trace_esp_error_fifo_overrun</name><argument_list pos:start="39:41" pos:end="39:42">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="47:9">else <block pos:start="41:16" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:49">

            <expr_stmt pos:start="43:13" pos:end="43:25"><expr pos:start="43:13" pos:end="43:24"><name pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:22">ti_size</name></name><operator pos:start="43:23" pos:end="43:24">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:49"><expr pos:start="45:13" pos:end="45:48"><name pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:21">ti_buf</name><index pos:start="45:22" pos:end="45:35">[<expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:32"><name pos:start="45:23" pos:end="45:23">s</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:32">ti_wptr</name></name><operator pos:start="45:33" pos:end="45:34">++</operator></expr>]</index></name> <operator pos:start="45:37" pos:end="45:37">=</operator> <name pos:start="45:39" pos:end="45:41">val</name> <operator pos:start="45:43" pos:end="45:43">&amp;</operator> <literal type="number" pos:start="45:45" pos:end="45:48">0xff</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:17">case <expr pos:start="51:10" pos:end="51:16"><name pos:start="51:10" pos:end="51:16">ESP_CMD</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:16">rregs</name><index pos:start="53:17" pos:end="53:23">[<expr pos:start="53:18" pos:end="53:22"><name pos:start="53:18" pos:end="53:22">saddr</name></expr>]</index></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:29">val</name></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="71:9"><if pos:start="55:9" pos:end="67:9">if <condition pos:start="55:12" pos:end="55:26">(<expr pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:15">val</name> <operator pos:start="55:17" pos:end="55:17">&amp;</operator> <name pos:start="55:19" pos:end="55:25">CMD_DMA</name></expr>)</condition> <block pos:start="55:28" pos:end="67:9">{<block_content pos:start="57:13" pos:end="65:52">

            <expr_stmt pos:start="57:13" pos:end="57:23"><expr pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:18"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:18">dma</name></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:22">1</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="59:13" pos:end="59:38">/* Reload DMA counter.  */</comment>

            <expr_stmt pos:start="61:13" pos:end="61:52"><expr pos:start="61:13" pos:end="61:51"><name pos:start="61:13" pos:end="61:30"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:20">rregs</name><index pos:start="61:21" pos:end="61:30">[<expr pos:start="61:22" pos:end="61:29"><name pos:start="61:22" pos:end="61:29">ESP_TCLO</name></expr>]</index></name> <operator pos:start="61:32" pos:end="61:32">=</operator> <name pos:start="61:34" pos:end="61:51"><name pos:start="61:34" pos:end="61:34">s</name><operator pos:start="61:35" pos:end="61:36">-&gt;</operator><name pos:start="61:37" pos:end="61:41">wregs</name><index pos:start="61:42" pos:end="61:51">[<expr pos:start="61:43" pos:end="61:50"><name pos:start="61:43" pos:end="61:50">ESP_TCLO</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:54"><expr pos:start="63:13" pos:end="63:53"><name pos:start="63:13" pos:end="63:31"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:20">rregs</name><index pos:start="63:21" pos:end="63:31">[<expr pos:start="63:22" pos:end="63:30"><name pos:start="63:22" pos:end="63:30">ESP_TCMID</name></expr>]</index></name> <operator pos:start="63:33" pos:end="63:33">=</operator> <name pos:start="63:35" pos:end="63:53"><name pos:start="63:35" pos:end="63:35">s</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:42">wregs</name><index pos:start="63:43" pos:end="63:53">[<expr pos:start="63:44" pos:end="63:52"><name pos:start="63:44" pos:end="63:52">ESP_TCMID</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:52"><expr pos:start="65:13" pos:end="65:51"><name pos:start="65:13" pos:end="65:30"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:20">rregs</name><index pos:start="65:21" pos:end="65:30">[<expr pos:start="65:22" pos:end="65:29"><name pos:start="65:22" pos:end="65:29">ESP_TCHI</name></expr>]</index></name> <operator pos:start="65:32" pos:end="65:32">=</operator> <name pos:start="65:34" pos:end="65:51"><name pos:start="65:34" pos:end="65:34">s</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:41">wregs</name><index pos:start="65:42" pos:end="65:51">[<expr pos:start="65:43" pos:end="65:50"><name pos:start="65:43" pos:end="65:50">ESP_TCHI</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="67:11" pos:end="71:9">else <block pos:start="67:16" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:23">

            <expr_stmt pos:start="69:13" pos:end="69:23"><expr pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:18"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:18">dma</name></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <literal type="number" pos:start="69:22" pos:end="69:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <switch pos:start="73:9" pos:end="221:9">switch<condition pos:start="73:15" pos:end="73:29">(<expr pos:start="73:16" pos:end="73:28"><name pos:start="73:16" pos:end="73:18">val</name> <operator pos:start="73:20" pos:end="73:20">&amp;</operator> <name pos:start="73:22" pos:end="73:28">CMD_CMD</name></expr>)</condition> <block pos:start="73:31" pos:end="221:9">{<block_content pos:start="75:9" pos:end="219:18">

        <case pos:start="75:9" pos:end="75:21">case <expr pos:start="75:14" pos:end="75:20"><name pos:start="75:14" pos:end="75:20">CMD_NOP</name></expr>:</case>

            <expr_stmt pos:start="77:13" pos:end="77:46"><expr pos:start="77:13" pos:end="77:45"><call pos:start="77:13" pos:end="77:45"><name pos:start="77:13" pos:end="77:40">trace_esp_mem_writeb_cmd_nop</name><argument_list pos:start="77:41" pos:end="77:45">(<argument pos:start="77:42" pos:end="77:44"><expr pos:start="77:42" pos:end="77:44"><name pos:start="77:42" pos:end="77:44">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        <case pos:start="81:9" pos:end="81:23">case <expr pos:start="81:14" pos:end="81:22"><name pos:start="81:14" pos:end="81:22">CMD_FLUSH</name></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:48"><expr pos:start="83:13" pos:end="83:47"><call pos:start="83:13" pos:end="83:47"><name pos:start="83:13" pos:end="83:42">trace_esp_mem_writeb_cmd_flush</name><argument_list pos:start="83:43" pos:end="83:47">(<argument pos:start="83:44" pos:end="83:46"><expr pos:start="83:44" pos:end="83:46"><name pos:start="83:44" pos:end="83:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="85:13" pos:end="85:29">//s-&gt;ti_size = 0;</comment>

            <expr_stmt pos:start="87:13" pos:end="87:42"><expr pos:start="87:13" pos:end="87:41"><name pos:start="87:13" pos:end="87:31"><name pos:start="87:13" pos:end="87:13">s</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:20">rregs</name><index pos:start="87:21" pos:end="87:31">[<expr pos:start="87:22" pos:end="87:30"><name pos:start="87:22" pos:end="87:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="87:33" pos:end="87:33">=</operator> <name pos:start="87:35" pos:end="87:41">INTR_FC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:35"><expr pos:start="89:13" pos:end="89:34"><name pos:start="89:13" pos:end="89:30"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:20">rregs</name><index pos:start="89:21" pos:end="89:30">[<expr pos:start="89:22" pos:end="89:29"><name pos:start="89:22" pos:end="89:29">ESP_RSEQ</name></expr>]</index></name> <operator pos:start="89:32" pos:end="89:32">=</operator> <literal type="number" pos:start="89:34" pos:end="89:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:37"><expr pos:start="91:13" pos:end="91:36"><name pos:start="91:13" pos:end="91:32"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:20">rregs</name><index pos:start="91:21" pos:end="91:32">[<expr pos:start="91:22" pos:end="91:31"><name pos:start="91:22" pos:end="91:31">ESP_RFLAGS</name></expr>]</index></name> <operator pos:start="91:34" pos:end="91:34">=</operator> <literal type="number" pos:start="91:36" pos:end="91:36">0</literal></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:23">case <expr pos:start="95:14" pos:end="95:22"><name pos:start="95:14" pos:end="95:22">CMD_RESET</name></expr>:</case>

            <expr_stmt pos:start="97:13" pos:end="97:48"><expr pos:start="97:13" pos:end="97:47"><call pos:start="97:13" pos:end="97:47"><name pos:start="97:13" pos:end="97:42">trace_esp_mem_writeb_cmd_reset</name><argument_list pos:start="97:43" pos:end="97:47">(<argument pos:start="97:44" pos:end="97:46"><expr pos:start="97:44" pos:end="97:46"><name pos:start="97:44" pos:end="97:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:30"><expr pos:start="99:13" pos:end="99:29"><call pos:start="99:13" pos:end="99:29"><name pos:start="99:13" pos:end="99:26">esp_soft_reset</name><argument_list pos:start="99:27" pos:end="99:29">(<argument pos:start="99:28" pos:end="99:28"><expr pos:start="99:28" pos:end="99:28"><name pos:start="99:28" pos:end="99:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="101:13" pos:end="101:18">break;</break>

        <case pos:start="103:9" pos:end="103:26">case <expr pos:start="103:14" pos:end="103:25"><name pos:start="103:14" pos:end="103:25">CMD_BUSRESET</name></expr>:</case>

            <expr_stmt pos:start="105:13" pos:end="105:52"><expr pos:start="105:13" pos:end="105:51"><call pos:start="105:13" pos:end="105:51"><name pos:start="105:13" pos:end="105:46">trace_esp_mem_writeb_cmd_bus_reset</name><argument_list pos:start="105:47" pos:end="105:51">(<argument pos:start="105:48" pos:end="105:50"><expr pos:start="105:48" pos:end="105:50"><name pos:start="105:48" pos:end="105:50">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:43"><expr pos:start="107:13" pos:end="107:42"><name pos:start="107:13" pos:end="107:31"><name pos:start="107:13" pos:end="107:13">s</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:20">rregs</name><index pos:start="107:21" pos:end="107:31">[<expr pos:start="107:22" pos:end="107:30"><name pos:start="107:22" pos:end="107:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="107:33" pos:end="107:33">=</operator> <name pos:start="107:35" pos:end="107:42">INTR_RST</name></expr>;</expr_stmt>

            <if_stmt pos:start="109:13" pos:end="113:13"><if pos:start="109:13" pos:end="113:13">if <condition pos:start="109:16" pos:end="109:53">(<expr pos:start="109:17" pos:end="109:52"><operator pos:start="109:17" pos:end="109:17">!</operator><operator pos:start="109:18" pos:end="109:18">(</operator><name pos:start="109:19" pos:end="109:36"><name pos:start="109:19" pos:end="109:19">s</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:26">wregs</name><index pos:start="109:27" pos:end="109:36">[<expr pos:start="109:28" pos:end="109:35"><name pos:start="109:28" pos:end="109:35">ESP_CFG1</name></expr>]</index></name> <operator pos:start="109:38" pos:end="109:38">&amp;</operator> <name pos:start="109:40" pos:end="109:51">CFG1_RESREPT</name><operator pos:start="109:52" pos:end="109:52">)</operator></expr>)</condition> <block pos:start="109:55" pos:end="113:13">{<block_content pos:start="111:17" pos:end="111:33">

                <expr_stmt pos:start="111:17" pos:end="111:33"><expr pos:start="111:17" pos:end="111:32"><call pos:start="111:17" pos:end="111:32"><name pos:start="111:17" pos:end="111:29">esp_raise_irq</name><argument_list pos:start="111:30" pos:end="111:32">(<argument pos:start="111:31" pos:end="111:31"><expr pos:start="111:31" pos:end="111:31"><name pos:start="111:31" pos:end="111:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        <case pos:start="117:9" pos:end="117:20">case <expr pos:start="117:14" pos:end="117:19"><name pos:start="117:14" pos:end="117:19">CMD_TI</name></expr>:</case>

            <expr_stmt pos:start="119:13" pos:end="119:25"><expr pos:start="119:13" pos:end="119:24"><call pos:start="119:13" pos:end="119:24"><name pos:start="119:13" pos:end="119:21">handle_ti</name><argument_list pos:start="119:22" pos:end="119:24">(<argument pos:start="119:23" pos:end="119:23"><expr pos:start="119:23" pos:end="119:23"><name pos:start="119:23" pos:end="119:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        <case pos:start="123:9" pos:end="123:22">case <expr pos:start="123:14" pos:end="123:21"><name pos:start="123:14" pos:end="123:21">CMD_ICCS</name></expr>:</case>

            <expr_stmt pos:start="125:13" pos:end="125:47"><expr pos:start="125:13" pos:end="125:46"><call pos:start="125:13" pos:end="125:46"><name pos:start="125:13" pos:end="125:41">trace_esp_mem_writeb_cmd_iccs</name><argument_list pos:start="125:42" pos:end="125:46">(<argument pos:start="125:43" pos:end="125:45"><expr pos:start="125:43" pos:end="125:45"><name pos:start="125:43" pos:end="125:45">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:30"><expr pos:start="127:13" pos:end="127:29"><call pos:start="127:13" pos:end="127:29"><name pos:start="127:13" pos:end="127:26">write_response</name><argument_list pos:start="127:27" pos:end="127:29">(<argument pos:start="127:28" pos:end="127:28"><expr pos:start="127:28" pos:end="127:28"><name pos:start="127:28" pos:end="127:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:42"><expr pos:start="129:13" pos:end="129:41"><name pos:start="129:13" pos:end="129:31"><name pos:start="129:13" pos:end="129:13">s</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:20">rregs</name><index pos:start="129:21" pos:end="129:31">[<expr pos:start="129:22" pos:end="129:30"><name pos:start="129:22" pos:end="129:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="129:33" pos:end="129:33">=</operator> <name pos:start="129:35" pos:end="129:41">INTR_FC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:43"><expr pos:start="131:13" pos:end="131:42"><name pos:start="131:13" pos:end="131:31"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:20">rregs</name><index pos:start="131:21" pos:end="131:31">[<expr pos:start="131:22" pos:end="131:30"><name pos:start="131:22" pos:end="131:30">ESP_RSTAT</name></expr>]</index></name> <operator pos:start="131:33" pos:end="131:34">|=</operator> <name pos:start="131:36" pos:end="131:42">STAT_MI</name></expr>;</expr_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        <case pos:start="135:9" pos:end="135:24">case <expr pos:start="135:14" pos:end="135:23"><name pos:start="135:14" pos:end="135:23">CMD_MSGACC</name></expr>:</case>

            <expr_stmt pos:start="137:13" pos:end="137:49"><expr pos:start="137:13" pos:end="137:48"><call pos:start="137:13" pos:end="137:48"><name pos:start="137:13" pos:end="137:43">trace_esp_mem_writeb_cmd_msgacc</name><argument_list pos:start="137:44" pos:end="137:48">(<argument pos:start="137:45" pos:end="137:47"><expr pos:start="137:45" pos:end="137:47"><name pos:start="137:45" pos:end="137:47">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:42"><expr pos:start="139:13" pos:end="139:41"><name pos:start="139:13" pos:end="139:31"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:20">rregs</name><index pos:start="139:21" pos:end="139:31">[<expr pos:start="139:22" pos:end="139:30"><name pos:start="139:22" pos:end="139:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="139:33" pos:end="139:33">=</operator> <name pos:start="139:35" pos:end="139:41">INTR_DC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:35"><expr pos:start="141:13" pos:end="141:34"><name pos:start="141:13" pos:end="141:30"><name pos:start="141:13" pos:end="141:13">s</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:20">rregs</name><index pos:start="141:21" pos:end="141:30">[<expr pos:start="141:22" pos:end="141:29"><name pos:start="141:22" pos:end="141:29">ESP_RSEQ</name></expr>]</index></name> <operator pos:start="141:32" pos:end="141:32">=</operator> <literal type="number" pos:start="141:34" pos:end="141:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:37"><expr pos:start="143:13" pos:end="143:36"><name pos:start="143:13" pos:end="143:32"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:20">rregs</name><index pos:start="143:21" pos:end="143:32">[<expr pos:start="143:22" pos:end="143:31"><name pos:start="143:22" pos:end="143:31">ESP_RFLAGS</name></expr>]</index></name> <operator pos:start="143:34" pos:end="143:34">=</operator> <literal type="number" pos:start="143:36" pos:end="143:36">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:29"><expr pos:start="145:13" pos:end="145:28"><call pos:start="145:13" pos:end="145:28"><name pos:start="145:13" pos:end="145:25">esp_raise_irq</name><argument_list pos:start="145:26" pos:end="145:28">(<argument pos:start="145:27" pos:end="145:27"><expr pos:start="145:27" pos:end="145:27"><name pos:start="145:27" pos:end="145:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        <case pos:start="149:9" pos:end="149:21">case <expr pos:start="149:14" pos:end="149:20"><name pos:start="149:14" pos:end="149:20">CMD_PAD</name></expr>:</case>

            <expr_stmt pos:start="151:13" pos:end="151:46"><expr pos:start="151:13" pos:end="151:45"><call pos:start="151:13" pos:end="151:45"><name pos:start="151:13" pos:end="151:40">trace_esp_mem_writeb_cmd_pad</name><argument_list pos:start="151:41" pos:end="151:45">(<argument pos:start="151:42" pos:end="151:44"><expr pos:start="151:42" pos:end="151:44"><name pos:start="151:42" pos:end="151:44">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:42"><expr pos:start="153:13" pos:end="153:41"><name pos:start="153:13" pos:end="153:31"><name pos:start="153:13" pos:end="153:13">s</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:20">rregs</name><index pos:start="153:21" pos:end="153:31">[<expr pos:start="153:22" pos:end="153:30"><name pos:start="153:22" pos:end="153:30">ESP_RSTAT</name></expr>]</index></name> <operator pos:start="153:33" pos:end="153:33">=</operator> <name pos:start="153:35" pos:end="153:41">STAT_TC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:42"><expr pos:start="155:13" pos:end="155:41"><name pos:start="155:13" pos:end="155:31"><name pos:start="155:13" pos:end="155:13">s</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:20">rregs</name><index pos:start="155:21" pos:end="155:31">[<expr pos:start="155:22" pos:end="155:30"><name pos:start="155:22" pos:end="155:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="155:33" pos:end="155:33">=</operator> <name pos:start="155:35" pos:end="155:41">INTR_FC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:35"><expr pos:start="157:13" pos:end="157:34"><name pos:start="157:13" pos:end="157:30"><name pos:start="157:13" pos:end="157:13">s</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:20">rregs</name><index pos:start="157:21" pos:end="157:30">[<expr pos:start="157:22" pos:end="157:29"><name pos:start="157:22" pos:end="157:29">ESP_RSEQ</name></expr>]</index></name> <operator pos:start="157:32" pos:end="157:32">=</operator> <literal type="number" pos:start="157:34" pos:end="157:34">0</literal></expr>;</expr_stmt>

            <break pos:start="159:13" pos:end="159:18">break;</break>

        <case pos:start="161:9" pos:end="161:22">case <expr pos:start="161:14" pos:end="161:21"><name pos:start="161:14" pos:end="161:21">CMD_SATN</name></expr>:</case>

            <expr_stmt pos:start="163:13" pos:end="163:47"><expr pos:start="163:13" pos:end="163:46"><call pos:start="163:13" pos:end="163:46"><name pos:start="163:13" pos:end="163:41">trace_esp_mem_writeb_cmd_satn</name><argument_list pos:start="163:42" pos:end="163:46">(<argument pos:start="163:43" pos:end="163:45"><expr pos:start="163:43" pos:end="163:45"><name pos:start="163:43" pos:end="163:45">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="165:13" pos:end="165:18">break;</break>

        <case pos:start="167:9" pos:end="167:24">case <expr pos:start="167:14" pos:end="167:23"><name pos:start="167:14" pos:end="167:23">CMD_RSTATN</name></expr>:</case>

            <expr_stmt pos:start="169:13" pos:end="169:49"><expr pos:start="169:13" pos:end="169:48"><call pos:start="169:13" pos:end="169:48"><name pos:start="169:13" pos:end="169:43">trace_esp_mem_writeb_cmd_rstatn</name><argument_list pos:start="169:44" pos:end="169:48">(<argument pos:start="169:45" pos:end="169:47"><expr pos:start="169:45" pos:end="169:47"><name pos:start="169:45" pos:end="169:47">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="171:13" pos:end="171:18">break;</break>

        <case pos:start="173:9" pos:end="173:21">case <expr pos:start="173:14" pos:end="173:20"><name pos:start="173:14" pos:end="173:20">CMD_SEL</name></expr>:</case>

            <expr_stmt pos:start="175:13" pos:end="175:46"><expr pos:start="175:13" pos:end="175:45"><call pos:start="175:13" pos:end="175:45"><name pos:start="175:13" pos:end="175:40">trace_esp_mem_writeb_cmd_sel</name><argument_list pos:start="175:41" pos:end="175:45">(<argument pos:start="175:42" pos:end="175:44"><expr pos:start="175:42" pos:end="175:44"><name pos:start="175:42" pos:end="175:44">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:36"><expr pos:start="177:13" pos:end="177:35"><call pos:start="177:13" pos:end="177:35"><name pos:start="177:13" pos:end="177:32">handle_s_without_atn</name><argument_list pos:start="177:33" pos:end="177:35">(<argument pos:start="177:34" pos:end="177:34"><expr pos:start="177:34" pos:end="177:34"><name pos:start="177:34" pos:end="177:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="179:13" pos:end="179:18">break;</break>

        <case pos:start="181:9" pos:end="181:24">case <expr pos:start="181:14" pos:end="181:23"><name pos:start="181:14" pos:end="181:23">CMD_SELATN</name></expr>:</case>

            <expr_stmt pos:start="183:13" pos:end="183:49"><expr pos:start="183:13" pos:end="183:48"><call pos:start="183:13" pos:end="183:48"><name pos:start="183:13" pos:end="183:43">trace_esp_mem_writeb_cmd_selatn</name><argument_list pos:start="183:44" pos:end="183:48">(<argument pos:start="183:45" pos:end="183:47"><expr pos:start="183:45" pos:end="183:47"><name pos:start="183:45" pos:end="183:47">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:27"><expr pos:start="185:13" pos:end="185:26"><call pos:start="185:13" pos:end="185:26"><name pos:start="185:13" pos:end="185:23">handle_satn</name><argument_list pos:start="185:24" pos:end="185:26">(<argument pos:start="185:25" pos:end="185:25"><expr pos:start="185:25" pos:end="185:25"><name pos:start="185:25" pos:end="185:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="187:13" pos:end="187:18">break;</break>

        <case pos:start="189:9" pos:end="189:25">case <expr pos:start="189:14" pos:end="189:24"><name pos:start="189:14" pos:end="189:24">CMD_SELATNS</name></expr>:</case>

            <expr_stmt pos:start="191:13" pos:end="191:50"><expr pos:start="191:13" pos:end="191:49"><call pos:start="191:13" pos:end="191:49"><name pos:start="191:13" pos:end="191:44">trace_esp_mem_writeb_cmd_selatns</name><argument_list pos:start="191:45" pos:end="191:49">(<argument pos:start="191:46" pos:end="191:48"><expr pos:start="191:46" pos:end="191:48"><name pos:start="191:46" pos:end="191:48">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:32"><expr pos:start="193:13" pos:end="193:31"><call pos:start="193:13" pos:end="193:31"><name pos:start="193:13" pos:end="193:28">handle_satn_stop</name><argument_list pos:start="193:29" pos:end="193:31">(<argument pos:start="193:30" pos:end="193:30"><expr pos:start="193:30" pos:end="193:30"><name pos:start="193:30" pos:end="193:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        <case pos:start="197:9" pos:end="197:23">case <expr pos:start="197:14" pos:end="197:22"><name pos:start="197:14" pos:end="197:22">CMD_ENSEL</name></expr>:</case>

            <expr_stmt pos:start="199:13" pos:end="199:48"><expr pos:start="199:13" pos:end="199:47"><call pos:start="199:13" pos:end="199:47"><name pos:start="199:13" pos:end="199:42">trace_esp_mem_writeb_cmd_ensel</name><argument_list pos:start="199:43" pos:end="199:47">(<argument pos:start="199:44" pos:end="199:46"><expr pos:start="199:44" pos:end="199:46"><name pos:start="199:44" pos:end="199:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:36"><expr pos:start="201:13" pos:end="201:35"><name pos:start="201:13" pos:end="201:31"><name pos:start="201:13" pos:end="201:13">s</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:20">rregs</name><index pos:start="201:21" pos:end="201:31">[<expr pos:start="201:22" pos:end="201:30"><name pos:start="201:22" pos:end="201:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="201:33" pos:end="201:33">=</operator> <literal type="number" pos:start="201:35" pos:end="201:35">0</literal></expr>;</expr_stmt>

            <break pos:start="203:13" pos:end="203:18">break;</break>

        <case pos:start="205:9" pos:end="205:24">case <expr pos:start="205:14" pos:end="205:23"><name pos:start="205:14" pos:end="205:23">CMD_DISSEL</name></expr>:</case>

            <expr_stmt pos:start="207:13" pos:end="207:49"><expr pos:start="207:13" pos:end="207:48"><call pos:start="207:13" pos:end="207:48"><name pos:start="207:13" pos:end="207:43">trace_esp_mem_writeb_cmd_dissel</name><argument_list pos:start="207:44" pos:end="207:48">(<argument pos:start="207:45" pos:end="207:47"><expr pos:start="207:45" pos:end="207:47"><name pos:start="207:45" pos:end="207:47">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:36"><expr pos:start="209:13" pos:end="209:35"><name pos:start="209:13" pos:end="209:31"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:20">rregs</name><index pos:start="209:21" pos:end="209:31">[<expr pos:start="209:22" pos:end="209:30"><name pos:start="209:22" pos:end="209:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="209:33" pos:end="209:33">=</operator> <literal type="number" pos:start="209:35" pos:end="209:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:29"><expr pos:start="211:13" pos:end="211:28"><call pos:start="211:13" pos:end="211:28"><name pos:start="211:13" pos:end="211:25">esp_raise_irq</name><argument_list pos:start="211:26" pos:end="211:28">(<argument pos:start="211:27" pos:end="211:27"><expr pos:start="211:27" pos:end="211:27"><name pos:start="211:27" pos:end="211:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="213:13" pos:end="213:18">break;</break>

        <default pos:start="215:9" pos:end="215:16">default:</default>

            <expr_stmt pos:start="217:13" pos:end="217:51"><expr pos:start="217:13" pos:end="217:50"><call pos:start="217:13" pos:end="217:50"><name pos:start="217:13" pos:end="217:45">trace_esp_error_unhandled_command</name><argument_list pos:start="217:46" pos:end="217:50">(<argument pos:start="217:47" pos:end="217:49"><expr pos:start="217:47" pos:end="217:49"><name pos:start="217:47" pos:end="217:49">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="219:13" pos:end="219:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="223:9" pos:end="223:14">break;</break>

    <case pos:start="225:5" pos:end="225:34">case <expr pos:start="225:10" pos:end="225:33"><name pos:start="225:10" pos:end="225:19">ESP_WBUSID</name> <operator pos:start="225:21" pos:end="225:23">...</operator> <name pos:start="225:25" pos:end="225:33">ESP_WSYNO</name></expr>:</case>

        <break pos:start="227:9" pos:end="227:14">break;</break>

    <case pos:start="229:5" pos:end="229:18">case <expr pos:start="229:10" pos:end="229:17"><name pos:start="229:10" pos:end="229:17">ESP_CFG1</name></expr>:</case>

    <case pos:start="231:5" pos:end="231:18">case <expr pos:start="231:10" pos:end="231:17"><name pos:start="231:10" pos:end="231:17">ESP_CFG2</name></expr>:</case> <case pos:start="231:20" pos:end="231:33">case <expr pos:start="231:25" pos:end="231:32"><name pos:start="231:25" pos:end="231:32">ESP_CFG3</name></expr>:</case>

    <case pos:start="233:5" pos:end="233:18">case <expr pos:start="233:10" pos:end="233:17"><name pos:start="233:10" pos:end="233:17">ESP_RES3</name></expr>:</case> <case pos:start="233:20" pos:end="233:33">case <expr pos:start="233:25" pos:end="233:32"><name pos:start="233:25" pos:end="233:32">ESP_RES4</name></expr>:</case>

        <expr_stmt pos:start="235:9" pos:end="235:30"><expr pos:start="235:9" pos:end="235:29"><name pos:start="235:9" pos:end="235:23"><name pos:start="235:9" pos:end="235:9">s</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:16">rregs</name><index pos:start="235:17" pos:end="235:23">[<expr pos:start="235:18" pos:end="235:22"><name pos:start="235:18" pos:end="235:22">saddr</name></expr>]</index></name> <operator pos:start="235:25" pos:end="235:25">=</operator> <name pos:start="235:27" pos:end="235:29">val</name></expr>;</expr_stmt>

        <break pos:start="237:9" pos:end="237:14">break;</break>

    <case pos:start="239:5" pos:end="239:32">case <expr pos:start="239:10" pos:end="239:31"><name pos:start="239:10" pos:end="239:17">ESP_WCCF</name> <operator pos:start="239:19" pos:end="239:21">...</operator> <name pos:start="239:23" pos:end="239:31">ESP_WTEST</name></expr>:</case>

        <break pos:start="241:9" pos:end="241:14">break;</break>

    <default pos:start="243:5" pos:end="243:12">default:</default>

        <expr_stmt pos:start="245:9" pos:end="245:50"><expr pos:start="245:9" pos:end="245:49"><call pos:start="245:9" pos:end="245:49"><name pos:start="245:9" pos:end="245:37">trace_esp_error_invalid_write</name><argument_list pos:start="245:38" pos:end="245:49">(<argument pos:start="245:39" pos:end="245:41"><expr pos:start="245:39" pos:end="245:41"><name pos:start="245:39" pos:end="245:41">val</name></expr></argument>, <argument pos:start="245:44" pos:end="245:48"><expr pos:start="245:44" pos:end="245:48"><name pos:start="245:44" pos:end="245:48">saddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="247:9" pos:end="247:15">return;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="251:5" pos:end="251:26"><expr pos:start="251:5" pos:end="251:25"><name pos:start="251:5" pos:end="251:19"><name pos:start="251:5" pos:end="251:5">s</name><operator pos:start="251:6" pos:end="251:7">-&gt;</operator><name pos:start="251:8" pos:end="251:12">wregs</name><index pos:start="251:13" pos:end="251:19">[<expr pos:start="251:14" pos:end="251:18"><name pos:start="251:14" pos:end="251:18">saddr</name></expr>]</index></name> <operator pos:start="251:21" pos:end="251:21">=</operator> <name pos:start="251:23" pos:end="251:25">val</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
