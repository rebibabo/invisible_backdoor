<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22240.c" pos:tabs="8"><function pos:start="1:1" pos:end="267:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">decode_pic</name><parameter_list pos:start="1:22" pos:end="1:36">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:34"><name pos:start="1:23" pos:end="1:32">AVSContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">h</name></decl></parameter>)</parameter_list> <block pos:start="1:38" pos:end="267:1">{<block_content pos:start="3:5" pos:end="265:13">

    <decl_stmt pos:start="3:5" pos:end="3:30"><decl pos:start="3:5" pos:end="3:29"><type pos:start="3:5" pos:end="3:20"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:21">s</name> <init pos:start="3:23" pos:end="3:29">= <expr pos:start="3:25" pos:end="3:29"><operator pos:start="3:25" pos:end="3:25">&amp;</operator><name pos:start="3:26" pos:end="3:29"><name pos:start="3:26" pos:end="3:26">h</name><operator pos:start="3:27" pos:end="3:28">-&gt;</operator><name pos:start="3:29" pos:end="3:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">skip_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:8">enum</name> <name pos:start="7:10" pos:end="7:16">cavs_mb</name></name></type> <name pos:start="7:18" pos:end="7:24">mb_type</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="21:5"><if pos:start="11:5" pos:end="21:5">if <condition pos:start="11:8" pos:end="11:32">(<expr pos:start="11:9" pos:end="11:31"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:31"><name pos:start="11:10" pos:end="11:10">s</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:31">context_initialized</name></name></expr>)</condition> <block pos:start="11:34" pos:end="21:5">{<block_content pos:start="13:9" pos:end="19:82">

        <expr_stmt pos:start="13:9" pos:end="13:43"><expr pos:start="13:9" pos:end="13:42"><name pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:16">avctx</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:27">idct_algo</name></name> <operator pos:start="13:29" pos:end="13:29">=</operator> <name pos:start="13:31" pos:end="13:42">FF_IDCT_CAVS</name></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="17:22"><if pos:start="15:9" pos:end="17:22">if <condition pos:start="15:12" pos:end="15:35">(<expr pos:start="15:13" pos:end="15:34"><call pos:start="15:13" pos:end="15:30"><name pos:start="15:13" pos:end="15:27">MPV_common_init</name><argument_list pos:start="15:28" pos:end="15:30">(<argument pos:start="15:29" pos:end="15:29"><expr pos:start="15:29" pos:end="15:29"><name pos:start="15:29" pos:end="15:29">s</name></expr></argument>)</argument_list></call> <operator pos:start="15:32" pos:end="15:32">&lt;</operator> <literal type="number" pos:start="15:34" pos:end="15:34">0</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:22"><block_content pos:start="17:13" pos:end="17:22">

            <return pos:start="17:13" pos:end="17:22">return <expr pos:start="17:20" pos:end="17:21"><operator pos:start="17:20" pos:end="17:20">-</operator><literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:82"><expr pos:start="19:9" pos:end="19:81"><call pos:start="19:9" pos:end="19:81"><name pos:start="19:9" pos:end="19:25">ff_init_scantable</name><argument_list pos:start="19:26" pos:end="19:81">(<argument pos:start="19:27" pos:end="19:49"><expr pos:start="19:27" pos:end="19:49"><name pos:start="19:27" pos:end="19:49"><name pos:start="19:27" pos:end="19:27">s</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:32">dsp</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:49">idct_permutation</name></name></expr></argument>,<argument pos:start="19:51" pos:end="19:63"><expr pos:start="19:51" pos:end="19:63"><operator pos:start="19:51" pos:end="19:51">&amp;</operator><name pos:start="19:52" pos:end="19:63"><name pos:start="19:52" pos:end="19:52">h</name><operator pos:start="19:53" pos:end="19:54">-&gt;</operator><name pos:start="19:55" pos:end="19:63">scantable</name></name></expr></argument>,<argument pos:start="19:65" pos:end="19:80"><expr pos:start="19:65" pos:end="19:80"><name pos:start="19:65" pos:end="19:80">ff_zigzag_direct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><call pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:13">skip_bits</name><argument_list pos:start="23:14" pos:end="23:24">(<argument pos:start="23:15" pos:end="23:20"><expr pos:start="23:15" pos:end="23:20"><operator pos:start="23:15" pos:end="23:15">&amp;</operator><name pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:16">s</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:20">gb</name></name></expr></argument>,<argument pos:start="23:22" pos:end="23:23"><expr pos:start="23:22" pos:end="23:23"><literal type="number" pos:start="23:22" pos:end="23:23">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><comment type="line" pos:start="23:26" pos:end="23:36">//bbv_dwlay</comment>

    <if_stmt pos:start="25:5" pos:end="53:5"><if pos:start="25:5" pos:end="45:5">if<condition pos:start="25:7" pos:end="25:35">(<expr pos:start="25:8" pos:end="25:34"><name pos:start="25:8" pos:end="25:13"><name pos:start="25:8" pos:end="25:8">h</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:13">stc</name></name> <operator pos:start="25:15" pos:end="25:16">==</operator> <name pos:start="25:18" pos:end="25:34">PIC_PB_START_CODE</name></expr>)</condition> <block pos:start="25:37" pos:end="45:5">{<block_content pos:start="27:9" pos:end="43:22">

        <expr_stmt pos:start="27:9" pos:end="27:53"><expr pos:start="27:9" pos:end="27:52"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:9">h</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:19">pic_type</name></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <call pos:start="27:23" pos:end="27:40"><name pos:start="27:23" pos:end="27:30">get_bits</name><argument_list pos:start="27:31" pos:end="27:40">(<argument pos:start="27:32" pos:end="27:37"><expr pos:start="27:32" pos:end="27:37"><operator pos:start="27:32" pos:end="27:32">&amp;</operator><name pos:start="27:33" pos:end="27:37"><name pos:start="27:33" pos:end="27:33">s</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:37">gb</name></name></expr></argument>,<argument pos:start="27:39" pos:end="27:39"><expr pos:start="27:39" pos:end="27:39"><literal type="number" pos:start="27:39" pos:end="27:39">2</literal></expr></argument>)</argument_list></call> <operator pos:start="27:42" pos:end="27:42">+</operator> <name pos:start="27:44" pos:end="27:52">FF_I_TYPE</name></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if<condition pos:start="29:11" pos:end="29:35">(<expr pos:start="29:12" pos:end="29:34"><name pos:start="29:12" pos:end="29:22"><name pos:start="29:12" pos:end="29:12">h</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:22">pic_type</name></name> <operator pos:start="29:24" pos:end="29:24">&gt;</operator> <name pos:start="29:26" pos:end="29:34">FF_B_TYPE</name></expr>)</condition> <block pos:start="29:37" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:22">

            <expr_stmt pos:start="31:13" pos:end="31:69"><expr pos:start="31:13" pos:end="31:68"><call pos:start="31:13" pos:end="31:68"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="31:68">(<argument pos:start="31:20" pos:end="31:27"><expr pos:start="31:20" pos:end="31:27"><name pos:start="31:20" pos:end="31:27"><name pos:start="31:20" pos:end="31:20">s</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:27">avctx</name></name></expr></argument>, <argument pos:start="31:30" pos:end="31:41"><expr pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:44" pos:end="31:67"><expr pos:start="31:44" pos:end="31:67"><literal type="string" pos:start="31:44" pos:end="31:67">"illegal picture type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="37:9" pos:end="37:60">/* make sure we have the reference frames we need */</comment>

        <if_stmt pos:start="39:9" pos:end="43:22"><if pos:start="39:9" pos:end="43:22">if<condition pos:start="39:11" pos:end="41:59">(<expr pos:start="39:12" pos:end="41:58"><operator pos:start="39:12" pos:end="39:12">!</operator><name pos:start="39:13" pos:end="39:21"><name pos:start="39:13" pos:end="39:13">h</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:18">DPB</name><index pos:start="39:19" pos:end="39:21">[<expr pos:start="39:20" pos:end="39:20"><literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr>]</index></name><operator pos:start="39:22" pos:end="39:22">.</operator><name pos:start="39:23" pos:end="39:29"><name pos:start="39:23" pos:end="39:26">data</name><index pos:start="39:27" pos:end="39:29">[<expr pos:start="39:28" pos:end="39:28"><literal type="number" pos:start="39:28" pos:end="39:28">0</literal></expr>]</index></name> <operator pos:start="39:31" pos:end="39:32">||</operator>

          <operator pos:start="41:11" pos:end="41:11">(</operator><operator pos:start="41:12" pos:end="41:12">!</operator><name pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:13">h</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:18">DPB</name><index pos:start="41:19" pos:end="41:21">[<expr pos:start="41:20" pos:end="41:20"><literal type="number" pos:start="41:20" pos:end="41:20">1</literal></expr>]</index></name><operator pos:start="41:22" pos:end="41:22">.</operator><name pos:start="41:23" pos:end="41:29"><name pos:start="41:23" pos:end="41:26">data</name><index pos:start="41:27" pos:end="41:29">[<expr pos:start="41:28" pos:end="41:28"><literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr>]</index></name> <operator pos:start="41:31" pos:end="41:32">&amp;&amp;</operator> <name pos:start="41:34" pos:end="41:44"><name pos:start="41:34" pos:end="41:34">h</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:44">pic_type</name></name> <operator pos:start="41:46" pos:end="41:47">==</operator> <name pos:start="41:49" pos:end="41:57">FF_B_TYPE</name><operator pos:start="41:58" pos:end="41:58">)</operator></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:22"><block_content pos:start="43:13" pos:end="43:22">

            <return pos:start="43:13" pos:end="43:22">return <expr pos:start="43:20" pos:end="43:21"><operator pos:start="43:20" pos:end="43:20">-</operator><literal type="number" pos:start="43:21" pos:end="43:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="53:5">else <block pos:start="45:12" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:33">

        <expr_stmt pos:start="47:9" pos:end="47:32"><expr pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:9">h</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:19">pic_type</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:31">FF_I_TYPE</name></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="51:33"><if pos:start="49:9" pos:end="51:33">if<condition pos:start="49:11" pos:end="49:29">(<expr pos:start="49:12" pos:end="49:28"><call pos:start="49:12" pos:end="49:28"><name pos:start="49:12" pos:end="49:20">get_bits1</name><argument_list pos:start="49:21" pos:end="49:28">(<argument pos:start="49:22" pos:end="49:27"><expr pos:start="49:22" pos:end="49:27"><operator pos:start="49:22" pos:end="49:22">&amp;</operator><name pos:start="49:23" pos:end="49:27"><name pos:start="49:23" pos:end="49:23">s</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:27">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:33"><block_content pos:start="51:13" pos:end="51:33">

            <expr_stmt pos:start="51:13" pos:end="51:33"><expr pos:start="51:13" pos:end="51:32"><call pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:21">skip_bits</name><argument_list pos:start="51:22" pos:end="51:32">(<argument pos:start="51:23" pos:end="51:28"><expr pos:start="51:23" pos:end="51:28"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:28"><name pos:start="51:24" pos:end="51:24">s</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:28">gb</name></name></expr></argument>,<argument pos:start="51:30" pos:end="51:31"><expr pos:start="51:30" pos:end="51:31"><literal type="number" pos:start="51:30" pos:end="51:31">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt><comment type="line" pos:start="51:34" pos:end="51:44">//time_code</comment>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="55:5" pos:end="55:30">/* release last B frame */</comment>

    <if_stmt pos:start="57:5" pos:end="59:67"><if pos:start="57:5" pos:end="59:67">if<condition pos:start="57:7" pos:end="57:26">(<expr pos:start="57:8" pos:end="57:25"><name pos:start="57:8" pos:end="57:25"><name pos:start="57:8" pos:end="57:8">h</name><operator pos:start="57:9" pos:end="57:10">-&gt;</operator><name pos:start="57:11" pos:end="57:17">picture</name><operator pos:start="57:18" pos:end="57:18">.</operator><name pos:start="57:19" pos:end="57:22">data</name><index pos:start="57:23" pos:end="57:25">[<expr pos:start="57:24" pos:end="57:24"><literal type="number" pos:start="57:24" pos:end="57:24">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:67"><block_content pos:start="59:9" pos:end="59:67">

        <expr_stmt pos:start="59:9" pos:end="59:67"><expr pos:start="59:9" pos:end="59:66"><call pos:start="59:9" pos:end="59:66"><name pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:16">avctx</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:32">release_buffer</name></name><argument_list pos:start="59:33" pos:end="59:66">(<argument pos:start="59:34" pos:end="59:41"><expr pos:start="59:34" pos:end="59:41"><name pos:start="59:34" pos:end="59:41"><name pos:start="59:34" pos:end="59:34">s</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:41">avctx</name></name></expr></argument>, <argument pos:start="59:44" pos:end="59:65"><expr pos:start="59:44" pos:end="59:65"><operator pos:start="59:44" pos:end="59:44">(</operator><name pos:start="59:45" pos:end="59:51">AVFrame</name> <operator pos:start="59:53" pos:end="59:53">*</operator><operator pos:start="59:54" pos:end="59:54">)</operator><operator pos:start="59:55" pos:end="59:55">&amp;</operator><name pos:start="59:56" pos:end="59:65"><name pos:start="59:56" pos:end="59:56">h</name><operator pos:start="59:57" pos:end="59:58">-&gt;</operator><name pos:start="59:59" pos:end="59:65">picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:59"><expr pos:start="63:5" pos:end="63:58"><call pos:start="63:5" pos:end="63:58"><name pos:start="63:5" pos:end="63:24"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:12">avctx</name><operator pos:start="63:13" pos:end="63:14">-&gt;</operator><name pos:start="63:15" pos:end="63:24">get_buffer</name></name><argument_list pos:start="63:25" pos:end="63:58">(<argument pos:start="63:26" pos:end="63:33"><expr pos:start="63:26" pos:end="63:33"><name pos:start="63:26" pos:end="63:33"><name pos:start="63:26" pos:end="63:26">s</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:33">avctx</name></name></expr></argument>, <argument pos:start="63:36" pos:end="63:57"><expr pos:start="63:36" pos:end="63:57"><operator pos:start="63:36" pos:end="63:36">(</operator><name pos:start="63:37" pos:end="63:43">AVFrame</name> <operator pos:start="63:45" pos:end="63:45">*</operator><operator pos:start="63:46" pos:end="63:46">)</operator><operator pos:start="63:47" pos:end="63:47">&amp;</operator><name pos:start="63:48" pos:end="63:57"><name pos:start="63:48" pos:end="63:48">h</name><operator pos:start="63:49" pos:end="63:50">-&gt;</operator><name pos:start="63:51" pos:end="63:57">picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:24"><expr pos:start="65:5" pos:end="65:23"><call pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:20">ff_cavs_init_pic</name><argument_list pos:start="65:21" pos:end="65:23">(<argument pos:start="65:22" pos:end="65:22"><expr pos:start="65:22" pos:end="65:22"><name pos:start="65:22" pos:end="65:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:42"><expr pos:start="67:5" pos:end="67:41"><name pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:5">h</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:14">picture</name><operator pos:start="67:15" pos:end="67:15">.</operator><name pos:start="67:16" pos:end="67:18">poc</name></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <call pos:start="67:22" pos:end="67:39"><name pos:start="67:22" pos:end="67:29">get_bits</name><argument_list pos:start="67:30" pos:end="67:39">(<argument pos:start="67:31" pos:end="67:36"><expr pos:start="67:31" pos:end="67:36"><operator pos:start="67:31" pos:end="67:31">&amp;</operator><name pos:start="67:32" pos:end="67:36"><name pos:start="67:32" pos:end="67:32">s</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:36">gb</name></name></expr></argument>,<argument pos:start="67:38" pos:end="67:38"><expr pos:start="67:38" pos:end="67:38"><literal type="number" pos:start="67:38" pos:end="67:38">8</literal></expr></argument>)</argument_list></call><operator pos:start="67:40" pos:end="67:40">*</operator><literal type="number" pos:start="67:41" pos:end="67:41">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:55">/* get temporal distances and MV scaling factors */</comment>

    <if_stmt pos:start="73:5" pos:end="81:5"><if pos:start="73:5" pos:end="77:5">if<condition pos:start="73:7" pos:end="73:32">(<expr pos:start="73:8" pos:end="73:31"><name pos:start="73:8" pos:end="73:18"><name pos:start="73:8" pos:end="73:8">h</name><operator pos:start="73:9" pos:end="73:10">-&gt;</operator><name pos:start="73:11" pos:end="73:18">pic_type</name></name> <operator pos:start="73:20" pos:end="73:21">!=</operator> <name pos:start="73:23" pos:end="73:31">FF_B_TYPE</name></expr>)</condition> <block pos:start="73:34" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:67">

        <expr_stmt pos:start="75:9" pos:end="75:67"><expr pos:start="75:9" pos:end="75:66"><name pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:9">h</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:15">dist</name><index pos:start="75:16" pos:end="75:18">[<expr pos:start="75:17" pos:end="75:17"><literal type="number" pos:start="75:17" pos:end="75:17">0</literal></expr>]</index></name> <operator pos:start="75:20" pos:end="75:20">=</operator> <operator pos:start="75:22" pos:end="75:22">(</operator><name pos:start="75:23" pos:end="75:36"><name pos:start="75:23" pos:end="75:23">h</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:32">picture</name><operator pos:start="75:33" pos:end="75:33">.</operator><name pos:start="75:34" pos:end="75:36">poc</name></name> <operator pos:start="75:38" pos:end="75:38">-</operator> <name pos:start="75:40" pos:end="75:48"><name pos:start="75:40" pos:end="75:40">h</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:45">DPB</name><index pos:start="75:46" pos:end="75:48">[<expr pos:start="75:47" pos:end="75:47"><literal type="number" pos:start="75:47" pos:end="75:47">0</literal></expr>]</index></name><operator pos:start="75:49" pos:end="75:49">.</operator><name pos:start="75:50" pos:end="75:52">poc</name>  <operator pos:start="75:55" pos:end="75:55">+</operator> <literal type="number" pos:start="75:57" pos:end="75:59">512</literal><operator pos:start="75:60" pos:end="75:60">)</operator> <operator pos:start="75:62" pos:end="75:62">%</operator> <literal type="number" pos:start="75:64" pos:end="75:66">512</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="81:5">else <block pos:start="77:12" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:67">

        <expr_stmt pos:start="79:9" pos:end="79:67"><expr pos:start="79:9" pos:end="79:66"><name pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:9">h</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:15">dist</name><index pos:start="79:16" pos:end="79:18">[<expr pos:start="79:17" pos:end="79:17"><literal type="number" pos:start="79:17" pos:end="79:17">0</literal></expr>]</index></name> <operator pos:start="79:20" pos:end="79:20">=</operator> <operator pos:start="79:22" pos:end="79:22">(</operator><name pos:start="79:23" pos:end="79:31"><name pos:start="79:23" pos:end="79:23">h</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:28">DPB</name><index pos:start="79:29" pos:end="79:31">[<expr pos:start="79:30" pos:end="79:30"><literal type="number" pos:start="79:30" pos:end="79:30">0</literal></expr>]</index></name><operator pos:start="79:32" pos:end="79:32">.</operator><name pos:start="79:33" pos:end="79:35">poc</name>  <operator pos:start="79:38" pos:end="79:38">-</operator> <name pos:start="79:40" pos:end="79:53"><name pos:start="79:40" pos:end="79:40">h</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:49">picture</name><operator pos:start="79:50" pos:end="79:50">.</operator><name pos:start="79:51" pos:end="79:53">poc</name></name> <operator pos:start="79:55" pos:end="79:55">+</operator> <literal type="number" pos:start="79:57" pos:end="79:59">512</literal><operator pos:start="79:60" pos:end="79:60">)</operator> <operator pos:start="79:62" pos:end="79:62">%</operator> <literal type="number" pos:start="79:64" pos:end="79:66">512</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:63"><expr pos:start="83:5" pos:end="83:62"><name pos:start="83:5" pos:end="83:14"><name pos:start="83:5" pos:end="83:5">h</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:11">dist</name><index pos:start="83:12" pos:end="83:14">[<expr pos:start="83:13" pos:end="83:13"><literal type="number" pos:start="83:13" pos:end="83:13">1</literal></expr>]</index></name> <operator pos:start="83:16" pos:end="83:16">=</operator> <operator pos:start="83:18" pos:end="83:18">(</operator><name pos:start="83:19" pos:end="83:32"><name pos:start="83:19" pos:end="83:19">h</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:28">picture</name><operator pos:start="83:29" pos:end="83:29">.</operator><name pos:start="83:30" pos:end="83:32">poc</name></name> <operator pos:start="83:34" pos:end="83:34">-</operator> <name pos:start="83:36" pos:end="83:44"><name pos:start="83:36" pos:end="83:36">h</name><operator pos:start="83:37" pos:end="83:38">-&gt;</operator><name pos:start="83:39" pos:end="83:41">DPB</name><index pos:start="83:42" pos:end="83:44">[<expr pos:start="83:43" pos:end="83:43"><literal type="number" pos:start="83:43" pos:end="83:43">1</literal></expr>]</index></name><operator pos:start="83:45" pos:end="83:45">.</operator><name pos:start="83:46" pos:end="83:48">poc</name>  <operator pos:start="83:51" pos:end="83:51">+</operator> <literal type="number" pos:start="83:53" pos:end="83:55">512</literal><operator pos:start="83:56" pos:end="83:56">)</operator> <operator pos:start="83:58" pos:end="83:58">%</operator> <literal type="number" pos:start="83:60" pos:end="83:62">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:54"><expr pos:start="85:5" pos:end="85:53"><name pos:start="85:5" pos:end="85:19"><name pos:start="85:5" pos:end="85:5">h</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:16">scale_den</name><index pos:start="85:17" pos:end="85:19">[<expr pos:start="85:18" pos:end="85:18"><literal type="number" pos:start="85:18" pos:end="85:18">0</literal></expr>]</index></name> <operator pos:start="85:21" pos:end="85:21">=</operator> <ternary pos:start="85:23" pos:end="85:53"><condition pos:start="85:23" pos:end="85:34"><expr pos:start="85:23" pos:end="85:32"><name pos:start="85:23" pos:end="85:32"><name pos:start="85:23" pos:end="85:23">h</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:29">dist</name><index pos:start="85:30" pos:end="85:32">[<expr pos:start="85:31" pos:end="85:31"><literal type="number" pos:start="85:31" pos:end="85:31">0</literal></expr>]</index></name></expr> ?</condition><then pos:start="85:36" pos:end="85:49"> <expr pos:start="85:36" pos:end="85:49"><literal type="number" pos:start="85:36" pos:end="85:38">512</literal><operator pos:start="85:39" pos:end="85:39">/</operator><name pos:start="85:40" pos:end="85:49"><name pos:start="85:40" pos:end="85:40">h</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:46">dist</name><index pos:start="85:47" pos:end="85:49">[<expr pos:start="85:48" pos:end="85:48"><literal type="number" pos:start="85:48" pos:end="85:48">0</literal></expr>]</index></name></expr> </then><else pos:start="85:51" pos:end="85:53">: <expr pos:start="85:53" pos:end="85:53"><literal type="number" pos:start="85:53" pos:end="85:53">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:54"><expr pos:start="87:5" pos:end="87:53"><name pos:start="87:5" pos:end="87:19"><name pos:start="87:5" pos:end="87:5">h</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:16">scale_den</name><index pos:start="87:17" pos:end="87:19">[<expr pos:start="87:18" pos:end="87:18"><literal type="number" pos:start="87:18" pos:end="87:18">1</literal></expr>]</index></name> <operator pos:start="87:21" pos:end="87:21">=</operator> <ternary pos:start="87:23" pos:end="87:53"><condition pos:start="87:23" pos:end="87:34"><expr pos:start="87:23" pos:end="87:32"><name pos:start="87:23" pos:end="87:32"><name pos:start="87:23" pos:end="87:23">h</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:29">dist</name><index pos:start="87:30" pos:end="87:32">[<expr pos:start="87:31" pos:end="87:31"><literal type="number" pos:start="87:31" pos:end="87:31">1</literal></expr>]</index></name></expr> ?</condition><then pos:start="87:36" pos:end="87:49"> <expr pos:start="87:36" pos:end="87:49"><literal type="number" pos:start="87:36" pos:end="87:38">512</literal><operator pos:start="87:39" pos:end="87:39">/</operator><name pos:start="87:40" pos:end="87:49"><name pos:start="87:40" pos:end="87:40">h</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:46">dist</name><index pos:start="87:47" pos:end="87:49">[<expr pos:start="87:48" pos:end="87:48"><literal type="number" pos:start="87:48" pos:end="87:48">1</literal></expr>]</index></name></expr> </then><else pos:start="87:51" pos:end="87:53">: <expr pos:start="87:53" pos:end="87:53"><literal type="number" pos:start="87:53" pos:end="87:53">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="99:5"><if pos:start="89:5" pos:end="93:5">if<condition pos:start="89:7" pos:end="89:32">(<expr pos:start="89:8" pos:end="89:31"><name pos:start="89:8" pos:end="89:18"><name pos:start="89:8" pos:end="89:8">h</name><operator pos:start="89:9" pos:end="89:10">-&gt;</operator><name pos:start="89:11" pos:end="89:18">pic_type</name></name> <operator pos:start="89:20" pos:end="89:21">==</operator> <name pos:start="89:23" pos:end="89:31">FF_B_TYPE</name></expr>)</condition> <block pos:start="89:34" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:51">

        <expr_stmt pos:start="91:9" pos:end="91:51"><expr pos:start="91:9" pos:end="91:50"><name pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:9">h</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:21">sym_factor</name></name> <operator pos:start="91:23" pos:end="91:23">=</operator> <name pos:start="91:25" pos:end="91:34"><name pos:start="91:25" pos:end="91:25">h</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:31">dist</name><index pos:start="91:32" pos:end="91:34">[<expr pos:start="91:33" pos:end="91:33"><literal type="number" pos:start="91:33" pos:end="91:33">0</literal></expr>]</index></name><operator pos:start="91:35" pos:end="91:35">*</operator><name pos:start="91:36" pos:end="91:50"><name pos:start="91:36" pos:end="91:36">h</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:47">scale_den</name><index pos:start="91:48" pos:end="91:50">[<expr pos:start="91:49" pos:end="91:49"><literal type="number" pos:start="91:49" pos:end="91:49">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="99:5">else <block pos:start="93:12" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:61">

        <expr_stmt pos:start="95:9" pos:end="95:61"><expr pos:start="95:9" pos:end="95:60"><name pos:start="95:9" pos:end="95:24"><name pos:start="95:9" pos:end="95:9">h</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:21">direct_den</name><index pos:start="95:22" pos:end="95:24">[<expr pos:start="95:23" pos:end="95:23"><literal type="number" pos:start="95:23" pos:end="95:23">0</literal></expr>]</index></name> <operator pos:start="95:26" pos:end="95:26">=</operator> <ternary pos:start="95:28" pos:end="95:60"><condition pos:start="95:28" pos:end="95:39"><expr pos:start="95:28" pos:end="95:37"><name pos:start="95:28" pos:end="95:37"><name pos:start="95:28" pos:end="95:28">h</name><operator pos:start="95:29" pos:end="95:30">-&gt;</operator><name pos:start="95:31" pos:end="95:34">dist</name><index pos:start="95:35" pos:end="95:37">[<expr pos:start="95:36" pos:end="95:36"><literal type="number" pos:start="95:36" pos:end="95:36">0</literal></expr>]</index></name></expr> ?</condition><then pos:start="95:41" pos:end="95:56"> <expr pos:start="95:41" pos:end="95:56"><literal type="number" pos:start="95:41" pos:end="95:45">16384</literal><operator pos:start="95:46" pos:end="95:46">/</operator><name pos:start="95:47" pos:end="95:56"><name pos:start="95:47" pos:end="95:47">h</name><operator pos:start="95:48" pos:end="95:49">-&gt;</operator><name pos:start="95:50" pos:end="95:53">dist</name><index pos:start="95:54" pos:end="95:56">[<expr pos:start="95:55" pos:end="95:55"><literal type="number" pos:start="95:55" pos:end="95:55">0</literal></expr>]</index></name></expr> </then><else pos:start="95:58" pos:end="95:60">: <expr pos:start="95:60" pos:end="95:60"><literal type="number" pos:start="95:60" pos:end="95:60">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:61"><expr pos:start="97:9" pos:end="97:60"><name pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:9">h</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:21">direct_den</name><index pos:start="97:22" pos:end="97:24">[<expr pos:start="97:23" pos:end="97:23"><literal type="number" pos:start="97:23" pos:end="97:23">1</literal></expr>]</index></name> <operator pos:start="97:26" pos:end="97:26">=</operator> <ternary pos:start="97:28" pos:end="97:60"><condition pos:start="97:28" pos:end="97:39"><expr pos:start="97:28" pos:end="97:37"><name pos:start="97:28" pos:end="97:37"><name pos:start="97:28" pos:end="97:28">h</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:34">dist</name><index pos:start="97:35" pos:end="97:37">[<expr pos:start="97:36" pos:end="97:36"><literal type="number" pos:start="97:36" pos:end="97:36">1</literal></expr>]</index></name></expr> ?</condition><then pos:start="97:41" pos:end="97:56"> <expr pos:start="97:41" pos:end="97:56"><literal type="number" pos:start="97:41" pos:end="97:45">16384</literal><operator pos:start="97:46" pos:end="97:46">/</operator><name pos:start="97:47" pos:end="97:56"><name pos:start="97:47" pos:end="97:47">h</name><operator pos:start="97:48" pos:end="97:49">-&gt;</operator><name pos:start="97:50" pos:end="97:53">dist</name><index pos:start="97:54" pos:end="97:56">[<expr pos:start="97:55" pos:end="97:55"><literal type="number" pos:start="97:55" pos:end="97:55">1</literal></expr>]</index></name></expr> </then><else pos:start="97:58" pos:end="97:60">: <expr pos:start="97:60" pos:end="97:60"><literal type="number" pos:start="97:60" pos:end="97:60">0</literal></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="103:5" pos:end="105:30"><if pos:start="103:5" pos:end="105:30">if<condition pos:start="103:7" pos:end="103:20">(<expr pos:start="103:8" pos:end="103:19"><name pos:start="103:8" pos:end="103:19"><name pos:start="103:8" pos:end="103:8">s</name><operator pos:start="103:9" pos:end="103:10">-&gt;</operator><name pos:start="103:11" pos:end="103:19">low_delay</name></name></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:30"><block_content pos:start="105:9" pos:end="105:30">

        <expr_stmt pos:start="105:9" pos:end="105:30"><expr pos:start="105:9" pos:end="105:29"><call pos:start="105:9" pos:end="105:29"><name pos:start="105:9" pos:end="105:21">get_ue_golomb</name><argument_list pos:start="105:22" pos:end="105:29">(<argument pos:start="105:23" pos:end="105:28"><expr pos:start="105:23" pos:end="105:28"><operator pos:start="105:23" pos:end="105:23">&amp;</operator><name pos:start="105:24" pos:end="105:28"><name pos:start="105:24" pos:end="105:24">s</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="105:32" pos:end="105:48">//bbv_check_times</comment>

    <expr_stmt pos:start="107:5" pos:end="107:51"><expr pos:start="107:5" pos:end="107:50"><name pos:start="107:5" pos:end="107:18"><name pos:start="107:5" pos:end="107:5">h</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:18">progressive</name></name>             <operator pos:start="107:32" pos:end="107:32">=</operator> <call pos:start="107:34" pos:end="107:50"><name pos:start="107:34" pos:end="107:42">get_bits1</name><argument_list pos:start="107:43" pos:end="107:50">(<argument pos:start="107:44" pos:end="107:49"><expr pos:start="107:44" pos:end="107:49"><operator pos:start="107:44" pos:end="107:44">&amp;</operator><name pos:start="107:45" pos:end="107:49"><name pos:start="107:45" pos:end="107:45">s</name><operator pos:start="107:46" pos:end="107:47">-&gt;</operator><name pos:start="107:48" pos:end="107:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:25"><expr pos:start="109:5" pos:end="109:24"><name pos:start="109:5" pos:end="109:20"><name pos:start="109:5" pos:end="109:5">h</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:20">pic_structure</name></name> <operator pos:start="109:22" pos:end="109:22">=</operator> <literal type="number" pos:start="109:24" pos:end="109:24">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="113:45"><if pos:start="111:5" pos:end="113:45">if<condition pos:start="111:7" pos:end="111:23">(<expr pos:start="111:8" pos:end="111:22"><operator pos:start="111:8" pos:end="111:8">!</operator><name pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:9">h</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:22">progressive</name></name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:45"><block_content pos:start="113:9" pos:end="113:45">

        <expr_stmt pos:start="113:9" pos:end="113:45"><expr pos:start="113:9" pos:end="113:44"><name pos:start="113:9" pos:end="113:24"><name pos:start="113:9" pos:end="113:9">h</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:24">pic_structure</name></name> <operator pos:start="113:26" pos:end="113:26">=</operator> <call pos:start="113:28" pos:end="113:44"><name pos:start="113:28" pos:end="113:36">get_bits1</name><argument_list pos:start="113:37" pos:end="113:44">(<argument pos:start="113:38" pos:end="113:43"><expr pos:start="113:38" pos:end="113:43"><operator pos:start="113:38" pos:end="113:38">&amp;</operator><name pos:start="113:39" pos:end="113:43"><name pos:start="113:39" pos:end="113:39">s</name><operator pos:start="113:40" pos:end="113:41">-&gt;</operator><name pos:start="113:42" pos:end="113:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="117:27"><if pos:start="115:5" pos:end="117:27">if<condition pos:start="115:7" pos:end="115:56">(<expr pos:start="115:8" pos:end="115:55"><operator pos:start="115:8" pos:end="115:8">!</operator><name pos:start="115:9" pos:end="115:24"><name pos:start="115:9" pos:end="115:9">h</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:24">pic_structure</name></name> <operator pos:start="115:26" pos:end="115:27">&amp;&amp;</operator> <name pos:start="115:29" pos:end="115:34"><name pos:start="115:29" pos:end="115:29">h</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:34">stc</name></name> <operator pos:start="115:36" pos:end="115:37">==</operator> <name pos:start="115:39" pos:end="115:55">PIC_PB_START_CODE</name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:27"><block_content pos:start="117:9" pos:end="117:27">

        <expr_stmt pos:start="117:9" pos:end="117:27"><expr pos:start="117:9" pos:end="117:26"><call pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:18">skip_bits1</name><argument_list pos:start="117:19" pos:end="117:26">(<argument pos:start="117:20" pos:end="117:25"><expr pos:start="117:20" pos:end="117:25"><operator pos:start="117:20" pos:end="117:20">&amp;</operator><name pos:start="117:21" pos:end="117:25"><name pos:start="117:21" pos:end="117:21">s</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>     <comment type="line" pos:start="117:33" pos:end="117:60">//advanced_pred_mode_disable</comment>

    <expr_stmt pos:start="119:5" pos:end="119:23"><expr pos:start="119:5" pos:end="119:22"><call pos:start="119:5" pos:end="119:22"><name pos:start="119:5" pos:end="119:14">skip_bits1</name><argument_list pos:start="119:15" pos:end="119:22">(<argument pos:start="119:16" pos:end="119:21"><expr pos:start="119:16" pos:end="119:21"><operator pos:start="119:16" pos:end="119:16">&amp;</operator><name pos:start="119:17" pos:end="119:21"><name pos:start="119:17" pos:end="119:17">s</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>        <comment type="line" pos:start="119:32" pos:end="119:48">//top_field_first</comment>

    <expr_stmt pos:start="121:5" pos:end="121:23"><expr pos:start="121:5" pos:end="121:22"><call pos:start="121:5" pos:end="121:22"><name pos:start="121:5" pos:end="121:14">skip_bits1</name><argument_list pos:start="121:15" pos:end="121:22">(<argument pos:start="121:16" pos:end="121:21"><expr pos:start="121:16" pos:end="121:21"><operator pos:start="121:16" pos:end="121:16">&amp;</operator><name pos:start="121:17" pos:end="121:21"><name pos:start="121:17" pos:end="121:17">s</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>        <comment type="line" pos:start="121:32" pos:end="121:51">//repeat_first_field</comment>

    <expr_stmt pos:start="123:5" pos:end="123:51"><expr pos:start="123:5" pos:end="123:50"><name pos:start="123:5" pos:end="123:15"><name pos:start="123:5" pos:end="123:5">h</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:15">qp_fixed</name></name>                <operator pos:start="123:32" pos:end="123:32">=</operator> <call pos:start="123:34" pos:end="123:50"><name pos:start="123:34" pos:end="123:42">get_bits1</name><argument_list pos:start="123:43" pos:end="123:50">(<argument pos:start="123:44" pos:end="123:49"><expr pos:start="123:44" pos:end="123:49"><operator pos:start="123:44" pos:end="123:44">&amp;</operator><name pos:start="123:45" pos:end="123:49"><name pos:start="123:45" pos:end="123:45">s</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:52"><expr pos:start="125:5" pos:end="125:51"><name pos:start="125:5" pos:end="125:9"><name pos:start="125:5" pos:end="125:5">h</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:9">qp</name></name>                      <operator pos:start="125:32" pos:end="125:32">=</operator> <call pos:start="125:34" pos:end="125:51"><name pos:start="125:34" pos:end="125:41">get_bits</name><argument_list pos:start="125:42" pos:end="125:51">(<argument pos:start="125:43" pos:end="125:48"><expr pos:start="125:43" pos:end="125:48"><operator pos:start="125:43" pos:end="125:43">&amp;</operator><name pos:start="125:44" pos:end="125:48"><name pos:start="125:44" pos:end="125:44">s</name><operator pos:start="125:45" pos:end="125:46">-&gt;</operator><name pos:start="125:47" pos:end="125:48">gb</name></name></expr></argument>,<argument pos:start="125:50" pos:end="125:50"><expr pos:start="125:50" pos:end="125:50"><literal type="number" pos:start="125:50" pos:end="125:50">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="127:5" pos:end="145:5"><if pos:start="127:5" pos:end="135:5">if<condition pos:start="127:7" pos:end="127:32">(<expr pos:start="127:8" pos:end="127:31"><name pos:start="127:8" pos:end="127:18"><name pos:start="127:8" pos:end="127:8">h</name><operator pos:start="127:9" pos:end="127:10">-&gt;</operator><name pos:start="127:11" pos:end="127:18">pic_type</name></name> <operator pos:start="127:20" pos:end="127:21">==</operator> <name pos:start="127:23" pos:end="127:31">FF_I_TYPE</name></expr>)</condition> <block pos:start="127:34" pos:end="135:5">{<block_content pos:start="129:9" pos:end="133:28">

        <if_stmt pos:start="129:9" pos:end="131:31"><if pos:start="129:9" pos:end="131:31">if<condition pos:start="129:11" pos:end="129:48">(<expr pos:start="129:12" pos:end="129:47"><operator pos:start="129:12" pos:end="129:12">!</operator><name pos:start="129:13" pos:end="129:26"><name pos:start="129:13" pos:end="129:13">h</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:26">progressive</name></name> <operator pos:start="129:28" pos:end="129:29">&amp;&amp;</operator> <operator pos:start="129:31" pos:end="129:31">!</operator><name pos:start="129:32" pos:end="129:47"><name pos:start="129:32" pos:end="129:32">h</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:47">pic_structure</name></name></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:31"><block_content pos:start="131:13" pos:end="131:31">

            <expr_stmt pos:start="131:13" pos:end="131:31"><expr pos:start="131:13" pos:end="131:30"><call pos:start="131:13" pos:end="131:30"><name pos:start="131:13" pos:end="131:22">skip_bits1</name><argument_list pos:start="131:23" pos:end="131:30">(<argument pos:start="131:24" pos:end="131:29"><expr pos:start="131:24" pos:end="131:29"><operator pos:start="131:24" pos:end="131:24">&amp;</operator><name pos:start="131:25" pos:end="131:29"><name pos:start="131:25" pos:end="131:25">s</name><operator pos:start="131:26" pos:end="131:27">-&gt;</operator><name pos:start="131:28" pos:end="131:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt><comment type="line" pos:start="131:32" pos:end="131:46">//what is this?</comment>

        <expr_stmt pos:start="133:9" pos:end="133:28"><expr pos:start="133:9" pos:end="133:27"><call pos:start="133:9" pos:end="133:27"><name pos:start="133:9" pos:end="133:17">skip_bits</name><argument_list pos:start="133:18" pos:end="133:27">(<argument pos:start="133:19" pos:end="133:24"><expr pos:start="133:19" pos:end="133:24"><operator pos:start="133:19" pos:end="133:19">&amp;</operator><name pos:start="133:20" pos:end="133:24"><name pos:start="133:20" pos:end="133:20">s</name><operator pos:start="133:21" pos:end="133:22">-&gt;</operator><name pos:start="133:23" pos:end="133:24">gb</name></name></expr></argument>,<argument pos:start="133:26" pos:end="133:26"><expr pos:start="133:26" pos:end="133:26"><literal type="number" pos:start="133:26" pos:end="133:26">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="133:32" pos:end="133:46">//reserved bits</comment>

    </block_content>}</block></if> <else pos:start="135:7" pos:end="145:5">else <block pos:start="135:12" pos:end="145:5">{<block_content pos:start="137:9" pos:end="143:51">

        <if_stmt pos:start="137:9" pos:end="139:51"><if pos:start="137:9" pos:end="139:51">if<condition pos:start="137:11" pos:end="137:64">(<expr pos:start="137:12" pos:end="137:63"><operator pos:start="137:12" pos:end="137:12">!</operator><operator pos:start="137:13" pos:end="137:13">(</operator><name pos:start="137:14" pos:end="137:24"><name pos:start="137:14" pos:end="137:14">h</name><operator pos:start="137:15" pos:end="137:16">-&gt;</operator><name pos:start="137:17" pos:end="137:24">pic_type</name></name> <operator pos:start="137:26" pos:end="137:27">==</operator> <name pos:start="137:29" pos:end="137:37">FF_B_TYPE</name> <operator pos:start="137:39" pos:end="137:40">&amp;&amp;</operator> <name pos:start="137:42" pos:end="137:57"><name pos:start="137:42" pos:end="137:42">h</name><operator pos:start="137:43" pos:end="137:44">-&gt;</operator><name pos:start="137:45" pos:end="137:57">pic_structure</name></name> <operator pos:start="137:59" pos:end="137:60">==</operator> <literal type="number" pos:start="137:62" pos:end="137:62">1</literal><operator pos:start="137:63" pos:end="137:63">)</operator></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:51"><block_content pos:start="139:13" pos:end="139:51">

            <expr_stmt pos:start="139:13" pos:end="139:51"><expr pos:start="139:13" pos:end="139:50"><name pos:start="139:13" pos:end="139:23"><name pos:start="139:13" pos:end="139:13">h</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:23">ref_flag</name></name>        <operator pos:start="139:32" pos:end="139:32">=</operator> <call pos:start="139:34" pos:end="139:50"><name pos:start="139:34" pos:end="139:42">get_bits1</name><argument_list pos:start="139:43" pos:end="139:50">(<argument pos:start="139:44" pos:end="139:49"><expr pos:start="139:44" pos:end="139:49"><operator pos:start="139:44" pos:end="139:44">&amp;</operator><name pos:start="139:45" pos:end="139:49"><name pos:start="139:45" pos:end="139:45">s</name><operator pos:start="139:46" pos:end="139:47">-&gt;</operator><name pos:start="139:48" pos:end="139:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:28"><expr pos:start="141:9" pos:end="141:27"><call pos:start="141:9" pos:end="141:27"><name pos:start="141:9" pos:end="141:17">skip_bits</name><argument_list pos:start="141:18" pos:end="141:27">(<argument pos:start="141:19" pos:end="141:24"><expr pos:start="141:19" pos:end="141:24"><operator pos:start="141:19" pos:end="141:19">&amp;</operator><name pos:start="141:20" pos:end="141:24"><name pos:start="141:20" pos:end="141:20">s</name><operator pos:start="141:21" pos:end="141:22">-&gt;</operator><name pos:start="141:23" pos:end="141:24">gb</name></name></expr></argument>,<argument pos:start="141:26" pos:end="141:26"><expr pos:start="141:26" pos:end="141:26"><literal type="number" pos:start="141:26" pos:end="141:26">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="141:32" pos:end="141:46">//reserved bits</comment>

        <expr_stmt pos:start="143:9" pos:end="143:51"><expr pos:start="143:9" pos:end="143:50"><name pos:start="143:9" pos:end="143:25"><name pos:start="143:9" pos:end="143:9">h</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:25">skip_mode_flag</name></name>      <operator pos:start="143:32" pos:end="143:32">=</operator> <call pos:start="143:34" pos:end="143:50"><name pos:start="143:34" pos:end="143:42">get_bits1</name><argument_list pos:start="143:43" pos:end="143:50">(<argument pos:start="143:44" pos:end="143:49"><expr pos:start="143:44" pos:end="143:49"><operator pos:start="143:44" pos:end="143:44">&amp;</operator><name pos:start="143:45" pos:end="143:49"><name pos:start="143:45" pos:end="143:45">s</name><operator pos:start="143:46" pos:end="143:47">-&gt;</operator><name pos:start="143:48" pos:end="143:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:51"><expr pos:start="147:5" pos:end="147:50"><name pos:start="147:5" pos:end="147:26"><name pos:start="147:5" pos:end="147:5">h</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:26">loop_filter_disable</name></name>     <operator pos:start="147:32" pos:end="147:32">=</operator> <call pos:start="147:34" pos:end="147:50"><name pos:start="147:34" pos:end="147:42">get_bits1</name><argument_list pos:start="147:43" pos:end="147:50">(<argument pos:start="147:44" pos:end="147:49"><expr pos:start="147:44" pos:end="147:49"><operator pos:start="147:44" pos:end="147:44">&amp;</operator><name pos:start="147:45" pos:end="147:49"><name pos:start="147:45" pos:end="147:45">s</name><operator pos:start="147:46" pos:end="147:47">-&gt;</operator><name pos:start="147:48" pos:end="147:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="149:5" pos:end="159:5"><if pos:start="149:5" pos:end="155:5">if<condition pos:start="149:7" pos:end="149:52">(<expr pos:start="149:8" pos:end="149:51"><operator pos:start="149:8" pos:end="149:8">!</operator><name pos:start="149:9" pos:end="149:30"><name pos:start="149:9" pos:end="149:9">h</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:30">loop_filter_disable</name></name> <operator pos:start="149:32" pos:end="149:33">&amp;&amp;</operator> <call pos:start="149:35" pos:end="149:51"><name pos:start="149:35" pos:end="149:43">get_bits1</name><argument_list pos:start="149:44" pos:end="149:51">(<argument pos:start="149:45" pos:end="149:50"><expr pos:start="149:45" pos:end="149:50"><operator pos:start="149:45" pos:end="149:45">&amp;</operator><name pos:start="149:46" pos:end="149:50"><name pos:start="149:46" pos:end="149:46">s</name><operator pos:start="149:47" pos:end="149:48">-&gt;</operator><name pos:start="149:49" pos:end="149:50">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="149:54" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:55">

        <expr_stmt pos:start="151:9" pos:end="151:55"><expr pos:start="151:9" pos:end="151:54"><name pos:start="151:9" pos:end="151:23"><name pos:start="151:9" pos:end="151:9">h</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:23">alpha_offset</name></name>        <operator pos:start="151:32" pos:end="151:32">=</operator> <call pos:start="151:34" pos:end="151:54"><name pos:start="151:34" pos:end="151:46">get_se_golomb</name><argument_list pos:start="151:47" pos:end="151:54">(<argument pos:start="151:48" pos:end="151:53"><expr pos:start="151:48" pos:end="151:53"><operator pos:start="151:48" pos:end="151:48">&amp;</operator><name pos:start="151:49" pos:end="151:53"><name pos:start="151:49" pos:end="151:49">s</name><operator pos:start="151:50" pos:end="151:51">-&gt;</operator><name pos:start="151:52" pos:end="151:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:55"><expr pos:start="153:9" pos:end="153:54"><name pos:start="153:9" pos:end="153:22"><name pos:start="153:9" pos:end="153:9">h</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:22">beta_offset</name></name>         <operator pos:start="153:32" pos:end="153:32">=</operator> <call pos:start="153:34" pos:end="153:54"><name pos:start="153:34" pos:end="153:46">get_se_golomb</name><argument_list pos:start="153:47" pos:end="153:54">(<argument pos:start="153:48" pos:end="153:53"><expr pos:start="153:48" pos:end="153:53"><operator pos:start="153:48" pos:end="153:48">&amp;</operator><name pos:start="153:49" pos:end="153:53"><name pos:start="153:49" pos:end="153:49">s</name><operator pos:start="153:50" pos:end="153:51">-&gt;</operator><name pos:start="153:52" pos:end="153:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="155:7" pos:end="159:5">else <block pos:start="155:12" pos:end="159:5">{<block_content pos:start="157:9" pos:end="157:46">

        <expr_stmt pos:start="157:9" pos:end="157:46"><expr pos:start="157:9" pos:end="157:45"><name pos:start="157:9" pos:end="157:23"><name pos:start="157:9" pos:end="157:9">h</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:23">alpha_offset</name></name> <operator pos:start="157:25" pos:end="157:25">=</operator> <name pos:start="157:27" pos:end="157:40"><name pos:start="157:27" pos:end="157:27">h</name><operator pos:start="157:28" pos:end="157:29">-&gt;</operator><name pos:start="157:30" pos:end="157:40">beta_offset</name></name>  <operator pos:start="157:43" pos:end="157:43">=</operator> <literal type="number" pos:start="157:45" pos:end="157:45">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="161:5" pos:end="247:5"><if pos:start="161:5" pos:end="171:5">if<condition pos:start="161:7" pos:end="161:32">(<expr pos:start="161:8" pos:end="161:31"><name pos:start="161:8" pos:end="161:18"><name pos:start="161:8" pos:end="161:8">h</name><operator pos:start="161:9" pos:end="161:10">-&gt;</operator><name pos:start="161:11" pos:end="161:18">pic_type</name></name> <operator pos:start="161:20" pos:end="161:21">==</operator> <name pos:start="161:23" pos:end="161:31">FF_I_TYPE</name></expr>)</condition> <block pos:start="161:34" pos:end="171:5">{<block_content pos:start="163:9" pos:end="169:36">

        <do pos:start="163:9" pos:end="169:36">do <block pos:start="163:12" pos:end="169:9">{<block_content pos:start="165:13" pos:end="167:30">

            <expr_stmt pos:start="165:13" pos:end="165:31"><expr pos:start="165:13" pos:end="165:30"><call pos:start="165:13" pos:end="165:30"><name pos:start="165:13" pos:end="165:27">check_for_slice</name><argument_list pos:start="165:28" pos:end="165:30">(<argument pos:start="165:29" pos:end="165:29"><expr pos:start="165:29" pos:end="165:29"><name pos:start="165:29" pos:end="165:29">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:30"><expr pos:start="167:13" pos:end="167:29"><call pos:start="167:13" pos:end="167:29"><name pos:start="167:13" pos:end="167:23">decode_mb_i</name><argument_list pos:start="167:24" pos:end="167:29">(<argument pos:start="167:25" pos:end="167:25"><expr pos:start="167:25" pos:end="167:25"><name pos:start="167:25" pos:end="167:25">h</name></expr></argument>, <argument pos:start="167:28" pos:end="167:28"><expr pos:start="167:28" pos:end="167:28"><literal type="number" pos:start="167:28" pos:end="167:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while<condition pos:start="169:16" pos:end="169:35">(<expr pos:start="169:17" pos:end="169:34"><call pos:start="169:17" pos:end="169:34"><name pos:start="169:17" pos:end="169:31">ff_cavs_next_mb</name><argument_list pos:start="169:32" pos:end="169:34">(<argument pos:start="169:33" pos:end="169:33"><expr pos:start="169:33" pos:end="169:33"><name pos:start="169:33" pos:end="169:33">h</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>

    </block_content>}</block></if> <if type="elseif" pos:start="171:7" pos:end="209:5">else if<condition pos:start="171:14" pos:end="171:39">(<expr pos:start="171:15" pos:end="171:38"><name pos:start="171:15" pos:end="171:25"><name pos:start="171:15" pos:end="171:15">h</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:25">pic_type</name></name> <operator pos:start="171:27" pos:end="171:28">==</operator> <name pos:start="171:30" pos:end="171:38">FF_P_TYPE</name></expr>)</condition> <block pos:start="171:41" pos:end="209:5">{<block_content pos:start="173:9" pos:end="207:36">

        <do pos:start="173:9" pos:end="207:36">do <block pos:start="173:12" pos:end="207:9">{<block_content pos:start="175:13" pos:end="205:39">

            <expr_stmt pos:start="175:13" pos:end="175:31"><expr pos:start="175:13" pos:end="175:30"><call pos:start="175:13" pos:end="175:30"><name pos:start="175:13" pos:end="175:27">check_for_slice</name><argument_list pos:start="175:28" pos:end="175:30">(<argument pos:start="175:29" pos:end="175:29"><expr pos:start="175:29" pos:end="175:29"><name pos:start="175:29" pos:end="175:29">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="177:13" pos:end="197:57"><if pos:start="177:13" pos:end="195:13">if<condition pos:start="177:15" pos:end="177:33">(<expr pos:start="177:16" pos:end="177:32"><name pos:start="177:16" pos:end="177:32"><name pos:start="177:16" pos:end="177:16">h</name><operator pos:start="177:17" pos:end="177:18">-&gt;</operator><name pos:start="177:19" pos:end="177:32">skip_mode_flag</name></name></expr>)</condition> <block pos:start="177:35" pos:end="195:13">{<block_content pos:start="179:17" pos:end="193:58">

                <expr_stmt pos:start="179:17" pos:end="179:51"><expr pos:start="179:17" pos:end="179:50"><name pos:start="179:17" pos:end="179:26">skip_count</name> <operator pos:start="179:28" pos:end="179:28">=</operator> <call pos:start="179:30" pos:end="179:50"><name pos:start="179:30" pos:end="179:42">get_ue_golomb</name><argument_list pos:start="179:43" pos:end="179:50">(<argument pos:start="179:44" pos:end="179:49"><expr pos:start="179:44" pos:end="179:49"><operator pos:start="179:44" pos:end="179:44">&amp;</operator><name pos:start="179:45" pos:end="179:49"><name pos:start="179:45" pos:end="179:45">s</name><operator pos:start="179:46" pos:end="179:47">-&gt;</operator><name pos:start="179:48" pos:end="179:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <while pos:start="181:17" pos:end="189:17">while<condition pos:start="181:22" pos:end="181:35">(<expr pos:start="181:23" pos:end="181:34"><name pos:start="181:23" pos:end="181:32">skip_count</name><operator pos:start="181:33" pos:end="181:34">--</operator></expr>)</condition> <block pos:start="181:37" pos:end="189:17">{<block_content pos:start="183:21" pos:end="187:34">

                    <expr_stmt pos:start="183:21" pos:end="183:42"><expr pos:start="183:21" pos:end="183:41"><call pos:start="183:21" pos:end="183:41"><name pos:start="183:21" pos:end="183:31">decode_mb_p</name><argument_list pos:start="183:32" pos:end="183:41">(<argument pos:start="183:33" pos:end="183:33"><expr pos:start="183:33" pos:end="183:33"><name pos:start="183:33" pos:end="183:33">h</name></expr></argument>,<argument pos:start="183:35" pos:end="183:40"><expr pos:start="183:35" pos:end="183:40"><name pos:start="183:35" pos:end="183:40">P_SKIP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="185:21" pos:end="187:34"><if pos:start="185:21" pos:end="187:34">if<condition pos:start="185:23" pos:end="185:43">(<expr pos:start="185:24" pos:end="185:42"><operator pos:start="185:24" pos:end="185:24">!</operator><call pos:start="185:25" pos:end="185:42"><name pos:start="185:25" pos:end="185:39">ff_cavs_next_mb</name><argument_list pos:start="185:40" pos:end="185:42">(<argument pos:start="185:41" pos:end="185:41"><expr pos:start="185:41" pos:end="185:41"><name pos:start="185:41" pos:end="185:41">h</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="187:25" pos:end="187:34"><block_content pos:start="187:25" pos:end="187:34">

                        <goto pos:start="187:25" pos:end="187:34">goto <name pos:start="187:30" pos:end="187:33">done</name>;</goto></block_content></block></if></if_stmt>

                </block_content>}</block></while>

                <expr_stmt pos:start="191:17" pos:end="191:35"><expr pos:start="191:17" pos:end="191:34"><call pos:start="191:17" pos:end="191:34"><name pos:start="191:17" pos:end="191:31">check_for_slice</name><argument_list pos:start="191:32" pos:end="191:34">(<argument pos:start="191:33" pos:end="191:33"><expr pos:start="191:33" pos:end="191:33"><name pos:start="191:33" pos:end="191:33">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:58"><expr pos:start="193:17" pos:end="193:57"><name pos:start="193:17" pos:end="193:23">mb_type</name> <operator pos:start="193:25" pos:end="193:25">=</operator> <call pos:start="193:27" pos:end="193:47"><name pos:start="193:27" pos:end="193:39">get_ue_golomb</name><argument_list pos:start="193:40" pos:end="193:47">(<argument pos:start="193:41" pos:end="193:46"><expr pos:start="193:41" pos:end="193:46"><operator pos:start="193:41" pos:end="193:41">&amp;</operator><name pos:start="193:42" pos:end="193:46"><name pos:start="193:42" pos:end="193:42">s</name><operator pos:start="193:43" pos:end="193:44">-&gt;</operator><name pos:start="193:45" pos:end="193:46">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="193:49" pos:end="193:49">+</operator> <name pos:start="193:51" pos:end="193:57">P_16X16</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="195:15" pos:end="197:57">else<block type="pseudo" pos:start="197:17" pos:end="197:57"><block_content pos:start="197:17" pos:end="197:57">

                <expr_stmt pos:start="197:17" pos:end="197:57"><expr pos:start="197:17" pos:end="197:56"><name pos:start="197:17" pos:end="197:23">mb_type</name> <operator pos:start="197:25" pos:end="197:25">=</operator> <call pos:start="197:27" pos:end="197:47"><name pos:start="197:27" pos:end="197:39">get_ue_golomb</name><argument_list pos:start="197:40" pos:end="197:47">(<argument pos:start="197:41" pos:end="197:46"><expr pos:start="197:41" pos:end="197:46"><operator pos:start="197:41" pos:end="197:41">&amp;</operator><name pos:start="197:42" pos:end="197:46"><name pos:start="197:42" pos:end="197:42">s</name><operator pos:start="197:43" pos:end="197:44">-&gt;</operator><name pos:start="197:45" pos:end="197:46">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="197:49" pos:end="197:49">+</operator> <name pos:start="197:51" pos:end="197:56">P_SKIP</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="199:13" pos:end="205:39"><if pos:start="199:13" pos:end="203:13">if<condition pos:start="199:15" pos:end="199:31">(<expr pos:start="199:16" pos:end="199:30"><name pos:start="199:16" pos:end="199:22">mb_type</name> <operator pos:start="199:24" pos:end="199:24">&gt;</operator> <name pos:start="199:26" pos:end="199:30">P_8X8</name></expr>)</condition> <block pos:start="199:33" pos:end="203:13">{<block_content pos:start="201:17" pos:end="201:52">

                <expr_stmt pos:start="201:17" pos:end="201:52"><expr pos:start="201:17" pos:end="201:51"><call pos:start="201:17" pos:end="201:51"><name pos:start="201:17" pos:end="201:27">decode_mb_i</name><argument_list pos:start="201:28" pos:end="201:51">(<argument pos:start="201:29" pos:end="201:29"><expr pos:start="201:29" pos:end="201:29"><name pos:start="201:29" pos:end="201:29">h</name></expr></argument>, <argument pos:start="201:32" pos:end="201:50"><expr pos:start="201:32" pos:end="201:50"><name pos:start="201:32" pos:end="201:38">mb_type</name> <operator pos:start="201:40" pos:end="201:40">-</operator> <name pos:start="201:42" pos:end="201:46">P_8X8</name> <operator pos:start="201:48" pos:end="201:48">-</operator> <literal type="number" pos:start="201:50" pos:end="201:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="203:15" pos:end="205:39">else<block type="pseudo" pos:start="205:17" pos:end="205:39"><block_content pos:start="205:17" pos:end="205:39">

                <expr_stmt pos:start="205:17" pos:end="205:39"><expr pos:start="205:17" pos:end="205:38"><call pos:start="205:17" pos:end="205:38"><name pos:start="205:17" pos:end="205:27">decode_mb_p</name><argument_list pos:start="205:28" pos:end="205:38">(<argument pos:start="205:29" pos:end="205:29"><expr pos:start="205:29" pos:end="205:29"><name pos:start="205:29" pos:end="205:29">h</name></expr></argument>,<argument pos:start="205:31" pos:end="205:37"><expr pos:start="205:31" pos:end="205:37"><name pos:start="205:31" pos:end="205:37">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block> while<condition pos:start="207:16" pos:end="207:35">(<expr pos:start="207:17" pos:end="207:34"><call pos:start="207:17" pos:end="207:34"><name pos:start="207:17" pos:end="207:31">ff_cavs_next_mb</name><argument_list pos:start="207:32" pos:end="207:34">(<argument pos:start="207:33" pos:end="207:33"><expr pos:start="207:33" pos:end="207:33"><name pos:start="207:33" pos:end="207:33">h</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>

    </block_content>}</block></if> <else pos:start="209:7" pos:end="247:5">else <block pos:start="209:12" pos:end="247:5">{<block_content pos:start="211:9" pos:end="245:36"> <comment type="block" pos:start="209:14" pos:end="209:28">/* FF_B_TYPE */</comment>

        <do pos:start="211:9" pos:end="245:36">do <block pos:start="211:12" pos:end="245:9">{<block_content pos:start="213:13" pos:end="243:39">

            <expr_stmt pos:start="213:13" pos:end="213:31"><expr pos:start="213:13" pos:end="213:30"><call pos:start="213:13" pos:end="213:30"><name pos:start="213:13" pos:end="213:27">check_for_slice</name><argument_list pos:start="213:28" pos:end="213:30">(<argument pos:start="213:29" pos:end="213:29"><expr pos:start="213:29" pos:end="213:29"><name pos:start="213:29" pos:end="213:29">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="215:13" pos:end="235:57"><if pos:start="215:13" pos:end="233:13">if<condition pos:start="215:15" pos:end="215:33">(<expr pos:start="215:16" pos:end="215:32"><name pos:start="215:16" pos:end="215:32"><name pos:start="215:16" pos:end="215:16">h</name><operator pos:start="215:17" pos:end="215:18">-&gt;</operator><name pos:start="215:19" pos:end="215:32">skip_mode_flag</name></name></expr>)</condition> <block pos:start="215:35" pos:end="233:13">{<block_content pos:start="217:17" pos:end="231:59">

                <expr_stmt pos:start="217:17" pos:end="217:51"><expr pos:start="217:17" pos:end="217:50"><name pos:start="217:17" pos:end="217:26">skip_count</name> <operator pos:start="217:28" pos:end="217:28">=</operator> <call pos:start="217:30" pos:end="217:50"><name pos:start="217:30" pos:end="217:42">get_ue_golomb</name><argument_list pos:start="217:43" pos:end="217:50">(<argument pos:start="217:44" pos:end="217:49"><expr pos:start="217:44" pos:end="217:49"><operator pos:start="217:44" pos:end="217:44">&amp;</operator><name pos:start="217:45" pos:end="217:49"><name pos:start="217:45" pos:end="217:45">s</name><operator pos:start="217:46" pos:end="217:47">-&gt;</operator><name pos:start="217:48" pos:end="217:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <while pos:start="219:17" pos:end="227:17">while<condition pos:start="219:22" pos:end="219:35">(<expr pos:start="219:23" pos:end="219:34"><name pos:start="219:23" pos:end="219:32">skip_count</name><operator pos:start="219:33" pos:end="219:34">--</operator></expr>)</condition> <block pos:start="219:37" pos:end="227:17">{<block_content pos:start="221:21" pos:end="225:34">

                    <expr_stmt pos:start="221:21" pos:end="221:42"><expr pos:start="221:21" pos:end="221:41"><call pos:start="221:21" pos:end="221:41"><name pos:start="221:21" pos:end="221:31">decode_mb_b</name><argument_list pos:start="221:32" pos:end="221:41">(<argument pos:start="221:33" pos:end="221:33"><expr pos:start="221:33" pos:end="221:33"><name pos:start="221:33" pos:end="221:33">h</name></expr></argument>,<argument pos:start="221:35" pos:end="221:40"><expr pos:start="221:35" pos:end="221:40"><name pos:start="221:35" pos:end="221:40">B_SKIP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="223:21" pos:end="225:34"><if pos:start="223:21" pos:end="225:34">if<condition pos:start="223:23" pos:end="223:43">(<expr pos:start="223:24" pos:end="223:42"><operator pos:start="223:24" pos:end="223:24">!</operator><call pos:start="223:25" pos:end="223:42"><name pos:start="223:25" pos:end="223:39">ff_cavs_next_mb</name><argument_list pos:start="223:40" pos:end="223:42">(<argument pos:start="223:41" pos:end="223:41"><expr pos:start="223:41" pos:end="223:41"><name pos:start="223:41" pos:end="223:41">h</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="225:25" pos:end="225:34"><block_content pos:start="225:25" pos:end="225:34">

                        <goto pos:start="225:25" pos:end="225:34">goto <name pos:start="225:30" pos:end="225:33">done</name>;</goto></block_content></block></if></if_stmt>

                </block_content>}</block></while>

                <expr_stmt pos:start="229:17" pos:end="229:35"><expr pos:start="229:17" pos:end="229:34"><call pos:start="229:17" pos:end="229:34"><name pos:start="229:17" pos:end="229:31">check_for_slice</name><argument_list pos:start="229:32" pos:end="229:34">(<argument pos:start="229:33" pos:end="229:33"><expr pos:start="229:33" pos:end="229:33"><name pos:start="229:33" pos:end="229:33">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:59"><expr pos:start="231:17" pos:end="231:58"><name pos:start="231:17" pos:end="231:23">mb_type</name> <operator pos:start="231:25" pos:end="231:25">=</operator> <call pos:start="231:27" pos:end="231:47"><name pos:start="231:27" pos:end="231:39">get_ue_golomb</name><argument_list pos:start="231:40" pos:end="231:47">(<argument pos:start="231:41" pos:end="231:46"><expr pos:start="231:41" pos:end="231:46"><operator pos:start="231:41" pos:end="231:41">&amp;</operator><name pos:start="231:42" pos:end="231:46"><name pos:start="231:42" pos:end="231:42">s</name><operator pos:start="231:43" pos:end="231:44">-&gt;</operator><name pos:start="231:45" pos:end="231:46">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="231:49" pos:end="231:49">+</operator> <name pos:start="231:51" pos:end="231:58">B_DIRECT</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="233:15" pos:end="235:57">else<block type="pseudo" pos:start="235:17" pos:end="235:57"><block_content pos:start="235:17" pos:end="235:57">

                <expr_stmt pos:start="235:17" pos:end="235:57"><expr pos:start="235:17" pos:end="235:56"><name pos:start="235:17" pos:end="235:23">mb_type</name> <operator pos:start="235:25" pos:end="235:25">=</operator> <call pos:start="235:27" pos:end="235:47"><name pos:start="235:27" pos:end="235:39">get_ue_golomb</name><argument_list pos:start="235:40" pos:end="235:47">(<argument pos:start="235:41" pos:end="235:46"><expr pos:start="235:41" pos:end="235:46"><operator pos:start="235:41" pos:end="235:41">&amp;</operator><name pos:start="235:42" pos:end="235:46"><name pos:start="235:42" pos:end="235:42">s</name><operator pos:start="235:43" pos:end="235:44">-&gt;</operator><name pos:start="235:45" pos:end="235:46">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="235:49" pos:end="235:49">+</operator> <name pos:start="235:51" pos:end="235:56">B_SKIP</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="237:13" pos:end="243:39"><if pos:start="237:13" pos:end="241:13">if<condition pos:start="237:15" pos:end="237:31">(<expr pos:start="237:16" pos:end="237:30"><name pos:start="237:16" pos:end="237:22">mb_type</name> <operator pos:start="237:24" pos:end="237:24">&gt;</operator> <name pos:start="237:26" pos:end="237:30">B_8X8</name></expr>)</condition> <block pos:start="237:33" pos:end="241:13">{<block_content pos:start="239:17" pos:end="239:52">

                <expr_stmt pos:start="239:17" pos:end="239:52"><expr pos:start="239:17" pos:end="239:51"><call pos:start="239:17" pos:end="239:51"><name pos:start="239:17" pos:end="239:27">decode_mb_i</name><argument_list pos:start="239:28" pos:end="239:51">(<argument pos:start="239:29" pos:end="239:29"><expr pos:start="239:29" pos:end="239:29"><name pos:start="239:29" pos:end="239:29">h</name></expr></argument>, <argument pos:start="239:32" pos:end="239:50"><expr pos:start="239:32" pos:end="239:50"><name pos:start="239:32" pos:end="239:38">mb_type</name> <operator pos:start="239:40" pos:end="239:40">-</operator> <name pos:start="239:42" pos:end="239:46">B_8X8</name> <operator pos:start="239:48" pos:end="239:48">-</operator> <literal type="number" pos:start="239:50" pos:end="239:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="241:15" pos:end="243:39">else<block type="pseudo" pos:start="243:17" pos:end="243:39"><block_content pos:start="243:17" pos:end="243:39">

                <expr_stmt pos:start="243:17" pos:end="243:39"><expr pos:start="243:17" pos:end="243:38"><call pos:start="243:17" pos:end="243:38"><name pos:start="243:17" pos:end="243:27">decode_mb_b</name><argument_list pos:start="243:28" pos:end="243:38">(<argument pos:start="243:29" pos:end="243:29"><expr pos:start="243:29" pos:end="243:29"><name pos:start="243:29" pos:end="243:29">h</name></expr></argument>,<argument pos:start="243:31" pos:end="243:37"><expr pos:start="243:31" pos:end="243:37"><name pos:start="243:31" pos:end="243:37">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block> while<condition pos:start="245:16" pos:end="245:35">(<expr pos:start="245:17" pos:end="245:34"><call pos:start="245:17" pos:end="245:34"><name pos:start="245:17" pos:end="245:31">ff_cavs_next_mb</name><argument_list pos:start="245:32" pos:end="245:34">(<argument pos:start="245:33" pos:end="245:33"><expr pos:start="245:33" pos:end="245:33"><name pos:start="245:33" pos:end="245:33">h</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>

    </block_content>}</block></else></if_stmt>

 <label pos:start="249:2" pos:end="249:6"><name pos:start="249:2" pos:end="249:5">done</name>:</label>

    <if_stmt pos:start="251:5" pos:end="263:5"><if pos:start="251:5" pos:end="263:5">if<condition pos:start="251:7" pos:end="251:32">(<expr pos:start="251:8" pos:end="251:31"><name pos:start="251:8" pos:end="251:18"><name pos:start="251:8" pos:end="251:8">h</name><operator pos:start="251:9" pos:end="251:10">-&gt;</operator><name pos:start="251:11" pos:end="251:18">pic_type</name></name> <operator pos:start="251:20" pos:end="251:21">!=</operator> <name pos:start="251:23" pos:end="251:31">FF_B_TYPE</name></expr>)</condition> <block pos:start="251:34" pos:end="263:5">{<block_content pos:start="253:9" pos:end="261:46">

        <if_stmt pos:start="253:9" pos:end="255:70"><if pos:start="253:9" pos:end="255:70">if<condition pos:start="253:11" pos:end="253:29">(<expr pos:start="253:12" pos:end="253:28"><name pos:start="253:12" pos:end="253:20"><name pos:start="253:12" pos:end="253:12">h</name><operator pos:start="253:13" pos:end="253:14">-&gt;</operator><name pos:start="253:15" pos:end="253:17">DPB</name><index pos:start="253:18" pos:end="253:20">[<expr pos:start="253:19" pos:end="253:19"><literal type="number" pos:start="253:19" pos:end="253:19">1</literal></expr>]</index></name><operator pos:start="253:21" pos:end="253:21">.</operator><name pos:start="253:22" pos:end="253:28"><name pos:start="253:22" pos:end="253:25">data</name><index pos:start="253:26" pos:end="253:28">[<expr pos:start="253:27" pos:end="253:27"><literal type="number" pos:start="253:27" pos:end="253:27">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="255:13" pos:end="255:70"><block_content pos:start="255:13" pos:end="255:70">

            <expr_stmt pos:start="255:13" pos:end="255:70"><expr pos:start="255:13" pos:end="255:69"><call pos:start="255:13" pos:end="255:69"><name pos:start="255:13" pos:end="255:36"><name pos:start="255:13" pos:end="255:13">s</name><operator pos:start="255:14" pos:end="255:15">-&gt;</operator><name pos:start="255:16" pos:end="255:20">avctx</name><operator pos:start="255:21" pos:end="255:22">-&gt;</operator><name pos:start="255:23" pos:end="255:36">release_buffer</name></name><argument_list pos:start="255:37" pos:end="255:69">(<argument pos:start="255:38" pos:end="255:45"><expr pos:start="255:38" pos:end="255:45"><name pos:start="255:38" pos:end="255:45"><name pos:start="255:38" pos:end="255:38">s</name><operator pos:start="255:39" pos:end="255:40">-&gt;</operator><name pos:start="255:41" pos:end="255:45">avctx</name></name></expr></argument>, <argument pos:start="255:48" pos:end="255:68"><expr pos:start="255:48" pos:end="255:68"><operator pos:start="255:48" pos:end="255:48">(</operator><name pos:start="255:49" pos:end="255:55">AVFrame</name> <operator pos:start="255:57" pos:end="255:57">*</operator><operator pos:start="255:58" pos:end="255:58">)</operator><operator pos:start="255:59" pos:end="255:59">&amp;</operator><name pos:start="255:60" pos:end="255:68"><name pos:start="255:60" pos:end="255:60">h</name><operator pos:start="255:61" pos:end="255:62">-&gt;</operator><name pos:start="255:63" pos:end="255:65">DPB</name><index pos:start="255:66" pos:end="255:68">[<expr pos:start="255:67" pos:end="255:67"><literal type="number" pos:start="255:67" pos:end="255:67">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:30"><expr pos:start="257:9" pos:end="257:29"><name pos:start="257:9" pos:end="257:17"><name pos:start="257:9" pos:end="257:9">h</name><operator pos:start="257:10" pos:end="257:11">-&gt;</operator><name pos:start="257:12" pos:end="257:14">DPB</name><index pos:start="257:15" pos:end="257:17">[<expr pos:start="257:16" pos:end="257:16"><literal type="number" pos:start="257:16" pos:end="257:16">1</literal></expr>]</index></name> <operator pos:start="257:19" pos:end="257:19">=</operator> <name pos:start="257:21" pos:end="257:29"><name pos:start="257:21" pos:end="257:21">h</name><operator pos:start="257:22" pos:end="257:23">-&gt;</operator><name pos:start="257:24" pos:end="257:26">DPB</name><index pos:start="257:27" pos:end="257:29">[<expr pos:start="257:28" pos:end="257:28"><literal type="number" pos:start="257:28" pos:end="257:28">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:31"><expr pos:start="259:9" pos:end="259:30"><name pos:start="259:9" pos:end="259:17"><name pos:start="259:9" pos:end="259:9">h</name><operator pos:start="259:10" pos:end="259:11">-&gt;</operator><name pos:start="259:12" pos:end="259:14">DPB</name><index pos:start="259:15" pos:end="259:17">[<expr pos:start="259:16" pos:end="259:16"><literal type="number" pos:start="259:16" pos:end="259:16">0</literal></expr>]</index></name> <operator pos:start="259:19" pos:end="259:19">=</operator> <name pos:start="259:21" pos:end="259:30"><name pos:start="259:21" pos:end="259:21">h</name><operator pos:start="259:22" pos:end="259:23">-&gt;</operator><name pos:start="259:24" pos:end="259:30">picture</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="261:9" pos:end="261:46"><expr pos:start="261:9" pos:end="261:45"><call pos:start="261:9" pos:end="261:45"><name pos:start="261:9" pos:end="261:14">memset</name><argument_list pos:start="261:15" pos:end="261:45">(<argument pos:start="261:16" pos:end="261:26"><expr pos:start="261:16" pos:end="261:26"><operator pos:start="261:16" pos:end="261:16">&amp;</operator><name pos:start="261:17" pos:end="261:26"><name pos:start="261:17" pos:end="261:17">h</name><operator pos:start="261:18" pos:end="261:19">-&gt;</operator><name pos:start="261:20" pos:end="261:26">picture</name></name></expr></argument>,<argument pos:start="261:28" pos:end="261:28"><expr pos:start="261:28" pos:end="261:28"><literal type="number" pos:start="261:28" pos:end="261:28">0</literal></expr></argument>,<argument pos:start="261:30" pos:end="261:44"><expr pos:start="261:30" pos:end="261:44"><sizeof pos:start="261:30" pos:end="261:44">sizeof<argument_list pos:start="261:36" pos:end="261:44">(<argument pos:start="261:37" pos:end="261:43"><expr pos:start="261:37" pos:end="261:43"><name pos:start="261:37" pos:end="261:43">Picture</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="265:5" pos:end="265:13">return <expr pos:start="265:12" pos:end="265:12"><literal type="number" pos:start="265:12" pos:end="265:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
