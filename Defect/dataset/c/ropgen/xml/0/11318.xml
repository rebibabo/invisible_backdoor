<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11318.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">qcrypto_pbkdf2</name><parameter_list pos:start="1:19" pos:end="11:32">(<parameter pos:start="1:20" pos:end="1:44"><decl pos:start="1:20" pos:end="1:44"><type pos:start="1:20" pos:end="1:44"><name pos:start="1:20" pos:end="1:39">QCryptoHashAlgorithm</name></type> <name pos:start="1:41" pos:end="1:44">hash</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:37"><decl pos:start="3:20" pos:end="3:37"><type pos:start="3:20" pos:end="3:37"><specifier pos:start="3:20" pos:end="3:24">const</specifier> <name pos:start="3:26" pos:end="3:32">uint8_t</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:37">key</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:50"><decl pos:start="3:40" pos:end="3:50"><type pos:start="3:40" pos:end="3:50"><name pos:start="3:40" pos:end="3:45">size_t</name></type> <name pos:start="3:47" pos:end="3:50">nkey</name></decl></parameter>,

                   <parameter pos:start="5:20" pos:end="5:38"><decl pos:start="5:20" pos:end="5:38"><type pos:start="5:20" pos:end="5:38"><specifier pos:start="5:20" pos:end="5:24">const</specifier> <name pos:start="5:26" pos:end="5:32">uint8_t</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:38">salt</name></decl></parameter>, <parameter pos:start="5:41" pos:end="5:52"><decl pos:start="5:41" pos:end="5:52"><type pos:start="5:41" pos:end="5:52"><name pos:start="5:41" pos:end="5:46">size_t</name></type> <name pos:start="5:48" pos:end="5:52">nsalt</name></decl></parameter>,

                   <parameter pos:start="7:20" pos:end="7:42"><decl pos:start="7:20" pos:end="7:42"><type pos:start="7:20" pos:end="7:42"><name pos:start="7:20" pos:end="7:27">unsigned</name> <name pos:start="7:29" pos:end="7:31">int</name></type> <name pos:start="7:33" pos:end="7:42">iterations</name></decl></parameter>,

                   <parameter pos:start="9:20" pos:end="9:31"><decl pos:start="9:20" pos:end="9:31"><type pos:start="9:20" pos:end="9:31"><name pos:start="9:20" pos:end="9:26">uint8_t</name> <modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:31">out</name></decl></parameter>, <parameter pos:start="9:34" pos:end="9:44"><decl pos:start="9:34" pos:end="9:44"><type pos:start="9:34" pos:end="9:44"><name pos:start="9:34" pos:end="9:39">size_t</name></type> <name pos:start="9:41" pos:end="9:44">nout</name></decl></parameter>,

                   <parameter pos:start="11:20" pos:end="11:31"><decl pos:start="11:20" pos:end="11:31"><type pos:start="11:20" pos:end="11:31"><name pos:start="11:20" pos:end="11:24">Error</name> <modifier pos:start="11:26" pos:end="11:26">*</modifier><modifier pos:start="11:27" pos:end="11:27">*</modifier></type><name pos:start="11:28" pos:end="11:31">errp</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="63:1">{<block_content pos:start="15:5" pos:end="61:13">

    <decl_stmt pos:start="15:5" pos:end="23:6"><decl pos:start="15:5" pos:end="23:5"><type pos:start="15:5" pos:end="15:20"><specifier pos:start="15:5" pos:end="15:10">static</specifier> <specifier pos:start="15:12" pos:end="15:16">const</specifier> <name pos:start="15:18" pos:end="15:20">int</name></type> <name pos:start="15:22" pos:end="15:52"><name pos:start="15:22" pos:end="15:29">hash_map</name><index pos:start="15:30" pos:end="15:52">[<expr pos:start="15:31" pos:end="15:51"><name pos:start="15:31" pos:end="15:51">QCRYPTO_HASH_ALG__MAX</name></expr>]</index></name> <init pos:start="15:54" pos:end="23:5">= <expr pos:start="15:56" pos:end="23:5"><block pos:start="15:56" pos:end="23:5">{

        <expr pos:start="17:9" pos:end="17:44"><index pos:start="17:9" pos:end="17:30">[<expr pos:start="17:10" pos:end="17:29"><name pos:start="17:10" pos:end="17:29">QCRYPTO_HASH_ALG_MD5</name></expr>]</index> <operator pos:start="17:32" pos:end="17:32">=</operator> <name pos:start="17:34" pos:end="17:44">GCRY_MD_MD5</name></expr>,

        <expr pos:start="19:9" pos:end="19:46"><index pos:start="19:9" pos:end="19:31">[<expr pos:start="19:10" pos:end="19:30"><name pos:start="19:10" pos:end="19:30">QCRYPTO_HASH_ALG_SHA1</name></expr>]</index> <operator pos:start="19:33" pos:end="19:33">=</operator> <name pos:start="19:35" pos:end="19:46">GCRY_MD_SHA1</name></expr>,

        <expr pos:start="21:9" pos:end="21:50"><index pos:start="21:9" pos:end="21:33">[<expr pos:start="21:10" pos:end="21:32"><name pos:start="21:10" pos:end="21:32">QCRYPTO_HASH_ALG_SHA256</name></expr>]</index> <operator pos:start="21:35" pos:end="21:35">=</operator> <name pos:start="21:37" pos:end="21:50">GCRY_MD_SHA256</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:12"><decl pos:start="25:5" pos:end="25:11"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="31:39">(<expr pos:start="29:9" pos:end="31:38"><name pos:start="29:9" pos:end="29:12">hash</name> <operator pos:start="29:14" pos:end="29:15">&gt;=</operator> <call pos:start="29:17" pos:end="29:38"><name pos:start="29:17" pos:end="29:28">G_N_ELEMENTS</name><argument_list pos:start="29:29" pos:end="29:38">(<argument pos:start="29:30" pos:end="29:37"><expr pos:start="29:30" pos:end="29:37"><name pos:start="29:30" pos:end="29:37">hash_map</name></expr></argument>)</argument_list></call> <operator pos:start="29:40" pos:end="29:41">||</operator>

        <name pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:16">hash_map</name><index pos:start="31:17" pos:end="31:22">[<expr pos:start="31:18" pos:end="31:21"><name pos:start="31:18" pos:end="31:21">hash</name></expr>]</index></name> <operator pos:start="31:24" pos:end="31:25">==</operator> <name pos:start="31:27" pos:end="31:38">GCRY_MD_NONE</name></expr>)</condition> <block pos:start="31:41" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:18">

        <expr_stmt pos:start="33:9" pos:end="33:63"><expr pos:start="33:9" pos:end="33:62"><call pos:start="33:9" pos:end="33:62"><name pos:start="33:9" pos:end="33:18">error_setg</name><argument_list pos:start="33:19" pos:end="33:62">(<argument pos:start="33:20" pos:end="33:23"><expr pos:start="33:20" pos:end="33:23"><name pos:start="33:20" pos:end="33:23">errp</name></expr></argument>, <argument pos:start="33:26" pos:end="33:55"><expr pos:start="33:26" pos:end="33:55"><literal type="string" pos:start="33:26" pos:end="33:55">"Unexpected hash algorithm %d"</literal></expr></argument>, <argument pos:start="33:58" pos:end="33:61"><expr pos:start="33:58" pos:end="33:61"><name pos:start="33:58" pos:end="33:61">hash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="47:37"><expr pos:start="41:5" pos:end="47:36"><name pos:start="41:5" pos:end="41:7">ret</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="47:36"><name pos:start="41:11" pos:end="41:25">gcry_kdf_derive</name><argument_list pos:start="41:26" pos:end="47:36">(<argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><name pos:start="41:27" pos:end="41:29">key</name></expr></argument>, <argument pos:start="41:32" pos:end="41:35"><expr pos:start="41:32" pos:end="41:35"><name pos:start="41:32" pos:end="41:35">nkey</name></expr></argument>, <argument pos:start="41:38" pos:end="41:52"><expr pos:start="41:38" pos:end="41:52"><name pos:start="41:38" pos:end="41:52">GCRY_KDF_PBKDF2</name></expr></argument>,

                          <argument pos:start="43:27" pos:end="43:40"><expr pos:start="43:27" pos:end="43:40"><name pos:start="43:27" pos:end="43:40"><name pos:start="43:27" pos:end="43:34">hash_map</name><index pos:start="43:35" pos:end="43:40">[<expr pos:start="43:36" pos:end="43:39"><name pos:start="43:36" pos:end="43:39">hash</name></expr>]</index></name></expr></argument>,

                          <argument pos:start="45:27" pos:end="45:30"><expr pos:start="45:27" pos:end="45:30"><name pos:start="45:27" pos:end="45:30">salt</name></expr></argument>, <argument pos:start="45:33" pos:end="45:37"><expr pos:start="45:33" pos:end="45:37"><name pos:start="45:33" pos:end="45:37">nsalt</name></expr></argument>, <argument pos:start="45:40" pos:end="45:49"><expr pos:start="45:40" pos:end="45:49"><name pos:start="45:40" pos:end="45:49">iterations</name></expr></argument>,

                          <argument pos:start="47:27" pos:end="47:30"><expr pos:start="47:27" pos:end="47:30"><name pos:start="47:27" pos:end="47:30">nout</name></expr></argument>, <argument pos:start="47:33" pos:end="47:35"><expr pos:start="47:33" pos:end="47:35"><name pos:start="47:33" pos:end="47:35">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="57:5">if <condition pos:start="49:8" pos:end="49:17">(<expr pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:14">!=</operator> <literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>)</condition> <block pos:start="49:19" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:18">

        <expr_stmt pos:start="51:9" pos:end="53:39"><expr pos:start="51:9" pos:end="53:38"><call pos:start="51:9" pos:end="53:38"><name pos:start="51:9" pos:end="51:18">error_setg</name><argument_list pos:start="51:19" pos:end="53:38">(<argument pos:start="51:20" pos:end="51:23"><expr pos:start="51:20" pos:end="51:23"><name pos:start="51:20" pos:end="51:23">errp</name></expr></argument>, <argument pos:start="51:26" pos:end="51:53"><expr pos:start="51:26" pos:end="51:53"><literal type="string" pos:start="51:26" pos:end="51:53">"Cannot derive password: %s"</literal></expr></argument>,

                   <argument pos:start="53:20" pos:end="53:37"><expr pos:start="53:20" pos:end="53:37"><call pos:start="53:20" pos:end="53:37"><name pos:start="53:20" pos:end="53:32">gcry_strerror</name><argument_list pos:start="53:33" pos:end="53:37">(<argument pos:start="53:34" pos:end="53:36"><expr pos:start="53:34" pos:end="53:36"><name pos:start="53:34" pos:end="53:36">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:18">return <expr pos:start="55:16" pos:end="55:17"><operator pos:start="55:16" pos:end="55:16">-</operator><literal type="number" pos:start="55:17" pos:end="55:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
