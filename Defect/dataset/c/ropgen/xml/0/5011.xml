<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5011.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">pcibus_dev_print</name><parameter_list pos:start="1:29" pos:end="1:72">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:36">Monitor</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">mon</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:59"><decl pos:start="1:44" pos:end="1:59"><type pos:start="1:44" pos:end="1:59"><name pos:start="1:44" pos:end="1:54">DeviceState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">dev</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:71"><decl pos:start="1:62" pos:end="1:71"><type pos:start="1:62" pos:end="1:71"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:71">indent</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:5">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">d</name> <init pos:start="5:18" pos:end="5:35">= <expr pos:start="5:20" pos:end="5:35"><operator pos:start="5:20" pos:end="5:20">(</operator><name pos:start="5:21" pos:end="5:29">PCIDevice</name> <operator pos:start="5:31" pos:end="5:31">*</operator><operator pos:start="5:32" pos:end="5:32">)</operator><name pos:start="5:33" pos:end="5:35">dev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:26"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:24">pci_class_desc</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:30">desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:17"><name pos:start="9:10" pos:end="9:13">ctxt</name><index pos:start="9:14" pos:end="9:17">[<expr pos:start="9:15" pos:end="9:16"><literal type="number" pos:start="9:15" pos:end="9:16">64</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">PCIIORegion</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:16"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:16">class</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:55"><expr pos:start="17:5" pos:end="17:54"><name pos:start="17:5" pos:end="17:9">class</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:54"><name pos:start="17:13" pos:end="17:24">pci_get_word</name><argument_list pos:start="17:25" pos:end="17:54">(<argument pos:start="17:26" pos:end="17:53"><expr pos:start="17:26" pos:end="17:53"><name pos:start="17:26" pos:end="17:34"><name pos:start="17:26" pos:end="17:26">d</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:34">config</name></name> <operator pos:start="17:36" pos:end="17:36">+</operator> <name pos:start="17:38" pos:end="17:53">PCI_CLASS_DEVICE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:8">desc</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <name pos:start="19:12" pos:end="19:33">pci_class_descriptions</name></expr>;</expr_stmt>

    <while pos:start="21:5" pos:end="23:15">while <condition pos:start="21:11" pos:end="21:46">(<expr pos:start="21:12" pos:end="21:45"><name pos:start="21:12" pos:end="21:21"><name pos:start="21:12" pos:end="21:15">desc</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:21">desc</name></name> <operator pos:start="21:23" pos:end="21:24">&amp;&amp;</operator> <name pos:start="21:26" pos:end="21:30">class</name> <operator pos:start="21:32" pos:end="21:33">!=</operator> <name pos:start="21:35" pos:end="21:45"><name pos:start="21:35" pos:end="21:38">desc</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:45">class</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:15"><block_content pos:start="23:9" pos:end="23:15">

        <expr_stmt pos:start="23:9" pos:end="23:15"><expr pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:12">desc</name><operator pos:start="23:13" pos:end="23:14">++</operator></expr>;</expr_stmt></block_content></block></while>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:19">(<expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:12">desc</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:18">desc</name></name></expr>)</condition> <block pos:start="25:21" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:55">

        <expr_stmt pos:start="27:9" pos:end="27:55"><expr pos:start="27:9" pos:end="27:54"><call pos:start="27:9" pos:end="27:54"><name pos:start="27:9" pos:end="27:16">snprintf</name><argument_list pos:start="27:17" pos:end="27:54">(<argument pos:start="27:18" pos:end="27:21"><expr pos:start="27:18" pos:end="27:21"><name pos:start="27:18" pos:end="27:21">ctxt</name></expr></argument>, <argument pos:start="27:24" pos:end="27:35"><expr pos:start="27:24" pos:end="27:35"><sizeof pos:start="27:24" pos:end="27:35">sizeof<argument_list pos:start="27:30" pos:end="27:35">(<argument pos:start="27:31" pos:end="27:34"><expr pos:start="27:31" pos:end="27:34"><name pos:start="27:31" pos:end="27:34">ctxt</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:38" pos:end="27:41"><expr pos:start="27:38" pos:end="27:41"><literal type="string" pos:start="27:38" pos:end="27:41">"%s"</literal></expr></argument>, <argument pos:start="27:44" pos:end="27:53"><expr pos:start="27:44" pos:end="27:53"><name pos:start="27:44" pos:end="27:53"><name pos:start="27:44" pos:end="27:47">desc</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:53">desc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="33:5">else <block pos:start="29:12" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:58">

        <expr_stmt pos:start="31:9" pos:end="31:58"><expr pos:start="31:9" pos:end="31:57"><call pos:start="31:9" pos:end="31:57"><name pos:start="31:9" pos:end="31:16">snprintf</name><argument_list pos:start="31:17" pos:end="31:57">(<argument pos:start="31:18" pos:end="31:21"><expr pos:start="31:18" pos:end="31:21"><name pos:start="31:18" pos:end="31:21">ctxt</name></expr></argument>, <argument pos:start="31:24" pos:end="31:35"><expr pos:start="31:24" pos:end="31:35"><sizeof pos:start="31:24" pos:end="31:35">sizeof<argument_list pos:start="31:30" pos:end="31:35">(<argument pos:start="31:31" pos:end="31:34"><expr pos:start="31:31" pos:end="31:34"><name pos:start="31:31" pos:end="31:34">ctxt</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="31:38" pos:end="31:49"><expr pos:start="31:38" pos:end="31:49"><literal type="string" pos:start="31:38" pos:end="31:49">"Class %04x"</literal></expr></argument>, <argument pos:start="31:52" pos:end="31:56"><expr pos:start="31:52" pos:end="31:56"><name pos:start="31:52" pos:end="31:56">class</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="51:63"><expr pos:start="37:5" pos:end="51:62"><call pos:start="37:5" pos:end="51:62"><name pos:start="37:5" pos:end="37:18">monitor_printf</name><argument_list pos:start="37:19" pos:end="51:62">(<argument pos:start="37:20" pos:end="37:22"><expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">mon</name></expr></argument>, <argument pos:start="37:25" pos:end="39:55"><expr pos:start="37:25" pos:end="39:55"><literal type="string" pos:start="37:25" pos:end="37:58">"%*sclass %s, addr %02x:%02x.%x, "</literal>

                   <literal type="string" pos:start="39:20" pos:end="39:55">"pci id %04x:%04x (sub %04x:%04x)\n"</literal></expr></argument>,

                   <argument pos:start="41:20" pos:end="41:25"><expr pos:start="41:20" pos:end="41:25"><name pos:start="41:20" pos:end="41:25">indent</name></expr></argument>, <argument pos:start="41:28" pos:end="41:29"><expr pos:start="41:28" pos:end="41:29"><literal type="string" pos:start="41:28" pos:end="41:29">""</literal></expr></argument>, <argument pos:start="41:32" pos:end="41:35"><expr pos:start="41:32" pos:end="41:35"><name pos:start="41:32" pos:end="41:35">ctxt</name></expr></argument>, <argument pos:start="41:38" pos:end="41:56"><expr pos:start="41:38" pos:end="41:56"><call pos:start="41:38" pos:end="41:56"><name pos:start="41:38" pos:end="41:48">pci_bus_num</name><argument_list pos:start="41:49" pos:end="41:56">(<argument pos:start="41:50" pos:end="41:55"><expr pos:start="41:50" pos:end="41:55"><name pos:start="41:50" pos:end="41:55"><name pos:start="41:50" pos:end="41:50">d</name><operator pos:start="41:51" pos:end="41:52">-&gt;</operator><name pos:start="41:53" pos:end="41:55">bus</name></name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="43:20" pos:end="43:37"><expr pos:start="43:20" pos:end="43:37"><call pos:start="43:20" pos:end="43:37"><name pos:start="43:20" pos:end="43:27">PCI_SLOT</name><argument_list pos:start="43:28" pos:end="43:37">(<argument pos:start="43:29" pos:end="43:36"><expr pos:start="43:29" pos:end="43:36"><name pos:start="43:29" pos:end="43:36"><name pos:start="43:29" pos:end="43:29">d</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:36">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:40" pos:end="43:57"><expr pos:start="43:40" pos:end="43:57"><call pos:start="43:40" pos:end="43:57"><name pos:start="43:40" pos:end="43:47">PCI_FUNC</name><argument_list pos:start="43:48" pos:end="43:57">(<argument pos:start="43:49" pos:end="43:56"><expr pos:start="43:49" pos:end="43:56"><name pos:start="43:49" pos:end="43:56"><name pos:start="43:49" pos:end="43:49">d</name><operator pos:start="43:50" pos:end="43:51">-&gt;</operator><name pos:start="43:52" pos:end="43:56">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="45:20" pos:end="45:58"><expr pos:start="45:20" pos:end="45:58"><call pos:start="45:20" pos:end="45:58"><name pos:start="45:20" pos:end="45:31">pci_get_word</name><argument_list pos:start="45:32" pos:end="45:58">(<argument pos:start="45:33" pos:end="45:57"><expr pos:start="45:33" pos:end="45:57"><name pos:start="45:33" pos:end="45:41"><name pos:start="45:33" pos:end="45:33">d</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:41">config</name></name> <operator pos:start="45:43" pos:end="45:43">+</operator> <name pos:start="45:45" pos:end="45:57">PCI_VENDOR_ID</name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="47:20" pos:end="47:58"><expr pos:start="47:20" pos:end="47:58"><call pos:start="47:20" pos:end="47:58"><name pos:start="47:20" pos:end="47:31">pci_get_word</name><argument_list pos:start="47:32" pos:end="47:58">(<argument pos:start="47:33" pos:end="47:57"><expr pos:start="47:33" pos:end="47:57"><name pos:start="47:33" pos:end="47:41"><name pos:start="47:33" pos:end="47:33">d</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:41">config</name></name> <operator pos:start="47:43" pos:end="47:43">+</operator> <name pos:start="47:45" pos:end="47:57">PCI_DEVICE_ID</name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="49:20" pos:end="49:68"><expr pos:start="49:20" pos:end="49:68"><call pos:start="49:20" pos:end="49:68"><name pos:start="49:20" pos:end="49:31">pci_get_word</name><argument_list pos:start="49:32" pos:end="49:68">(<argument pos:start="49:33" pos:end="49:67"><expr pos:start="49:33" pos:end="49:67"><name pos:start="49:33" pos:end="49:41"><name pos:start="49:33" pos:end="49:33">d</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:41">config</name></name> <operator pos:start="49:43" pos:end="49:43">+</operator> <name pos:start="49:45" pos:end="49:67">PCI_SUBSYSTEM_VENDOR_ID</name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="51:20" pos:end="51:61"><expr pos:start="51:20" pos:end="51:61"><call pos:start="51:20" pos:end="51:61"><name pos:start="51:20" pos:end="51:31">pci_get_word</name><argument_list pos:start="51:32" pos:end="51:61">(<argument pos:start="51:33" pos:end="51:60"><expr pos:start="51:33" pos:end="51:60"><name pos:start="51:33" pos:end="51:41"><name pos:start="51:33" pos:end="51:33">d</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:41">config</name></name> <operator pos:start="51:43" pos:end="51:43">+</operator> <name pos:start="51:45" pos:end="51:60">PCI_SUBSYSTEM_ID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="53:5" pos:end="71:5">for <control pos:start="53:9" pos:end="53:41">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:36"><expr pos:start="53:17" pos:end="53:35"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:35">PCI_NUM_REGIONS</name></expr>;</condition> <incr pos:start="53:38" pos:end="53:40"><expr pos:start="53:38" pos:end="53:40"><name pos:start="53:38" pos:end="53:38">i</name><operator pos:start="53:39" pos:end="53:40">++</operator></expr></incr>)</control> <block pos:start="53:43" pos:end="71:5">{<block_content pos:start="55:9" pos:end="69:55">

        <expr_stmt pos:start="55:9" pos:end="55:30"><expr pos:start="55:9" pos:end="55:29"><name pos:start="55:9" pos:end="55:9">r</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <operator pos:start="55:13" pos:end="55:13">&amp;</operator><name pos:start="55:14" pos:end="55:29"><name pos:start="55:14" pos:end="55:14">d</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:26">io_regions</name><index pos:start="55:27" pos:end="55:29">[<expr pos:start="55:28" pos:end="55:28"><name pos:start="55:28" pos:end="55:28">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="59:21"><if pos:start="57:9" pos:end="59:21">if <condition pos:start="57:12" pos:end="57:21">(<expr pos:start="57:13" pos:end="57:20"><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:20"><name pos:start="57:14" pos:end="57:14">r</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:20">size</name></name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:21"><block_content pos:start="59:13" pos:end="59:21">

            <continue pos:start="59:13" pos:end="59:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="69:55"><expr pos:start="61:9" pos:end="69:54"><call pos:start="61:9" pos:end="69:54"><name pos:start="61:9" pos:end="61:22">monitor_printf</name><argument_list pos:start="61:23" pos:end="69:54">(<argument pos:start="61:24" pos:end="61:26"><expr pos:start="61:24" pos:end="61:26"><name pos:start="61:24" pos:end="61:26">mon</name></expr></argument>, <argument pos:start="61:29" pos:end="63:45"><expr pos:start="61:29" pos:end="63:45"><literal type="string" pos:start="61:29" pos:end="61:50">"%*sbar %d: %s at 0x%"</literal><name pos:start="61:51" pos:end="61:60">FMT_PCIBUS</name>

                       <literal type="string" pos:start="63:24" pos:end="63:30">" [0x%"</literal><name pos:start="63:31" pos:end="63:40">FMT_PCIBUS</name><literal type="string" pos:start="63:41" pos:end="63:45">"]\n"</literal></expr></argument>,

                       <argument pos:start="65:24" pos:end="65:29"><expr pos:start="65:24" pos:end="65:29"><name pos:start="65:24" pos:end="65:29">indent</name></expr></argument>, <argument pos:start="65:32" pos:end="65:33"><expr pos:start="65:32" pos:end="65:33"><literal type="string" pos:start="65:32" pos:end="65:33">""</literal></expr></argument>,

                       <argument pos:start="67:24" pos:end="67:24"><expr pos:start="67:24" pos:end="67:24"><name pos:start="67:24" pos:end="67:24">i</name></expr></argument>, <argument pos:start="67:27" pos:end="67:77"><expr pos:start="67:27" pos:end="67:77"><ternary pos:start="67:27" pos:end="67:77"><condition pos:start="67:27" pos:end="67:63"><expr pos:start="67:27" pos:end="67:61"><name pos:start="67:27" pos:end="67:33"><name pos:start="67:27" pos:end="67:27">r</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:33">type</name></name> <operator pos:start="67:35" pos:end="67:35">&amp;</operator> <name pos:start="67:37" pos:end="67:61">PCI_BASE_ADDRESS_SPACE_IO</name></expr> ?</condition><then pos:start="67:65" pos:end="67:69"> <expr pos:start="67:65" pos:end="67:69"><literal type="string" pos:start="67:65" pos:end="67:69">"i/o"</literal></expr> </then><else pos:start="67:71" pos:end="67:77">: <expr pos:start="67:73" pos:end="67:77"><literal type="string" pos:start="67:73" pos:end="67:77">"mem"</literal></expr></else></ternary></expr></argument>,

                       <argument pos:start="69:24" pos:end="69:30"><expr pos:start="69:24" pos:end="69:30"><name pos:start="69:24" pos:end="69:30"><name pos:start="69:24" pos:end="69:24">r</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:30">addr</name></name></expr></argument>, <argument pos:start="69:33" pos:end="69:53"><expr pos:start="69:33" pos:end="69:53"><name pos:start="69:33" pos:end="69:39"><name pos:start="69:33" pos:end="69:33">r</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:39">addr</name></name> <operator pos:start="69:41" pos:end="69:41">+</operator> <name pos:start="69:43" pos:end="69:49"><name pos:start="69:43" pos:end="69:43">r</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:49">size</name></name> <operator pos:start="69:51" pos:end="69:51">-</operator> <literal type="number" pos:start="69:53" pos:end="69:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
