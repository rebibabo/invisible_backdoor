<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3640.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">setup_rt_frame</name><parameter_list pos:start="1:27" pos:end="5:67">(<parameter pos:start="1:28" pos:end="1:34"><decl pos:start="1:28" pos:end="1:34"><type pos:start="1:28" pos:end="1:34"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:34">sig</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:63"><decl pos:start="1:37" pos:end="1:63"><type pos:start="1:37" pos:end="1:63"><name pos:start="1:37" pos:end="1:59"><name pos:start="1:37" pos:end="1:42">struct</name> <name pos:start="1:44" pos:end="1:59">target_sigaction</name></name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">ka</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:49"><decl pos:start="3:28" pos:end="3:49"><type pos:start="3:28" pos:end="3:49"><name pos:start="3:28" pos:end="3:43">target_siginfo_t</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">info</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:47"><decl pos:start="5:28" pos:end="5:47"><type pos:start="5:28" pos:end="5:47"><name pos:start="5:28" pos:end="5:42">target_sigset_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:47">set</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:66"><decl pos:start="5:50" pos:end="5:66"><type pos:start="5:50" pos:end="5:66"><name pos:start="5:50" pos:end="5:60">CPUSH4State</name> <modifier pos:start="5:62" pos:end="5:62">*</modifier></type><name pos:start="5:63" pos:end="5:66">regs</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="123:1">{<block_content pos:start="9:5" pos:end="121:30">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:29">target_rt_sigframe</name></name> <modifier pos:start="9:31" pos:end="9:31">*</modifier></type><name pos:start="9:32" pos:end="9:36">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">abi_ulong</name></type> <name pos:start="11:15" pos:end="11:24">frame_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">err</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">signal</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:67"><expr pos:start="21:5" pos:end="21:66"><name pos:start="21:5" pos:end="21:14">frame_addr</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:66"><name pos:start="21:18" pos:end="21:29">get_sigframe</name><argument_list pos:start="21:30" pos:end="21:66">(<argument pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:32"><name pos:start="21:31" pos:end="21:32">ka</name></expr></argument>, <argument pos:start="21:35" pos:end="21:49"><expr pos:start="21:35" pos:end="21:49"><name pos:start="21:35" pos:end="21:49"><name pos:start="21:35" pos:end="21:38">regs</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:45">gregs</name><index pos:start="21:46" pos:end="21:49">[<expr pos:start="21:47" pos:end="21:48"><literal type="number" pos:start="21:47" pos:end="21:48">15</literal></expr>]</index></name></expr></argument>, <argument pos:start="21:52" pos:end="21:65"><expr pos:start="21:52" pos:end="21:65"><sizeof pos:start="21:52" pos:end="21:65">sizeof<argument_list pos:start="21:58" pos:end="21:65">(<argument pos:start="21:59" pos:end="21:64"><expr pos:start="21:59" pos:end="21:64"><operator pos:start="21:59" pos:end="21:59">*</operator><name pos:start="21:60" pos:end="21:64">frame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:26"><if pos:start="23:5" pos:end="25:26">if <condition pos:start="23:8" pos:end="23:62">(<expr pos:start="23:9" pos:end="23:61"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:61"><name pos:start="23:10" pos:end="23:25">lock_user_struct</name><argument_list pos:start="23:26" pos:end="23:61">(<argument pos:start="23:27" pos:end="23:38"><expr pos:start="23:27" pos:end="23:38"><name pos:start="23:27" pos:end="23:38">VERIFY_WRITE</name></expr></argument>, <argument pos:start="23:41" pos:end="23:45"><expr pos:start="23:41" pos:end="23:45"><name pos:start="23:41" pos:end="23:45">frame</name></expr></argument>, <argument pos:start="23:48" pos:end="23:57"><expr pos:start="23:48" pos:end="23:57"><name pos:start="23:48" pos:end="23:57">frame_addr</name></expr></argument>, <argument pos:start="23:60" pos:end="23:60"><expr pos:start="23:60" pos:end="23:60"><literal type="number" pos:start="23:60" pos:end="23:60">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:26"><block_content pos:start="25:9" pos:end="25:26">

	<goto pos:start="25:9" pos:end="25:26">goto <name pos:start="25:14" pos:end="25:25">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:10">signal</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:41"><name pos:start="29:14" pos:end="29:36">current_exec_domain_sig</name><argument_list pos:start="29:37" pos:end="29:41">(<argument pos:start="29:38" pos:end="29:40"><expr pos:start="29:38" pos:end="29:40"><name pos:start="29:38" pos:end="29:40">sig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:52"><expr pos:start="33:5" pos:end="33:51"><name pos:start="33:5" pos:end="33:7">err</name> <operator pos:start="33:9" pos:end="33:10">|=</operator> <call pos:start="33:12" pos:end="33:51"><name pos:start="33:12" pos:end="33:31">copy_siginfo_to_user</name><argument_list pos:start="33:32" pos:end="33:51">(<argument pos:start="33:33" pos:end="33:44"><expr pos:start="33:33" pos:end="33:44"><operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:44"><name pos:start="33:34" pos:end="33:38">frame</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:44">info</name></name></expr></argument>, <argument pos:start="33:47" pos:end="33:50"><expr pos:start="33:47" pos:end="33:50"><name pos:start="33:47" pos:end="33:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:31">/* Create the ucontext.  */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><call pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:14">__put_user</name><argument_list pos:start="39:15" pos:end="39:39">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr></argument>, <argument pos:start="39:19" pos:end="39:38"><expr pos:start="39:19" pos:end="39:38"><operator pos:start="39:19" pos:end="39:19">&amp;</operator><name pos:start="39:20" pos:end="39:38"><name pos:start="39:20" pos:end="39:24">frame</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:28">uc</name><operator pos:start="39:29" pos:end="39:29">.</operator><name pos:start="39:30" pos:end="39:38">tuc_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:56"><expr pos:start="41:5" pos:end="41:55"><call pos:start="41:5" pos:end="41:55"><name pos:start="41:5" pos:end="41:14">__put_user</name><argument_list pos:start="41:15" pos:end="41:55">(<argument pos:start="41:16" pos:end="41:16"><expr pos:start="41:16" pos:end="41:16"><literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr></argument>, <argument pos:start="41:19" pos:end="41:54"><expr pos:start="41:19" pos:end="41:54"><operator pos:start="41:19" pos:end="41:19">(</operator><name pos:start="41:20" pos:end="41:27">unsigned</name> <name pos:start="41:29" pos:end="41:32">long</name> <operator pos:start="41:34" pos:end="41:34">*</operator><operator pos:start="41:35" pos:end="41:35">)</operator><operator pos:start="41:36" pos:end="41:36">&amp;</operator><name pos:start="41:37" pos:end="41:54"><name pos:start="41:37" pos:end="41:41">frame</name><operator pos:start="41:42" pos:end="41:43">-&gt;</operator><name pos:start="41:44" pos:end="41:45">uc</name><operator pos:start="41:46" pos:end="41:46">.</operator><name pos:start="41:47" pos:end="41:54">tuc_link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:43"><expr pos:start="43:5" pos:end="45:42"><call pos:start="43:5" pos:end="45:42"><name pos:start="43:5" pos:end="43:14">__put_user</name><argument_list pos:start="43:15" pos:end="45:42">(<argument pos:start="43:16" pos:end="43:59"><expr pos:start="43:16" pos:end="43:59"><operator pos:start="43:16" pos:end="43:16">(</operator><name pos:start="43:17" pos:end="43:24">unsigned</name> <name pos:start="43:26" pos:end="43:29">long</name><operator pos:start="43:30" pos:end="43:30">)</operator><name pos:start="43:31" pos:end="43:59"><name pos:start="43:31" pos:end="43:53">target_sigaltstack_used</name><operator pos:start="43:54" pos:end="43:54">.</operator><name pos:start="43:55" pos:end="43:59">ss_sp</name></name></expr></argument>,

               <argument pos:start="45:16" pos:end="45:41"><expr pos:start="45:16" pos:end="45:41"><operator pos:start="45:16" pos:end="45:16">&amp;</operator><name pos:start="45:17" pos:end="45:41"><name pos:start="45:17" pos:end="45:21">frame</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:25">uc</name><operator pos:start="45:26" pos:end="45:26">.</operator><name pos:start="45:27" pos:end="45:35">tuc_stack</name><operator pos:start="45:36" pos:end="45:36">.</operator><name pos:start="45:37" pos:end="45:41">ss_sp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="49:46"><expr pos:start="47:5" pos:end="49:45"><call pos:start="47:5" pos:end="49:45"><name pos:start="47:5" pos:end="47:14">__put_user</name><argument_list pos:start="47:15" pos:end="49:45">(<argument pos:start="47:16" pos:end="47:44"><expr pos:start="47:16" pos:end="47:44"><call pos:start="47:16" pos:end="47:44"><name pos:start="47:16" pos:end="47:27">sas_ss_flags</name><argument_list pos:start="47:28" pos:end="47:44">(<argument pos:start="47:29" pos:end="47:43"><expr pos:start="47:29" pos:end="47:43"><name pos:start="47:29" pos:end="47:43"><name pos:start="47:29" pos:end="47:32">regs</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:39">gregs</name><index pos:start="47:40" pos:end="47:43">[<expr pos:start="47:41" pos:end="47:42"><literal type="number" pos:start="47:41" pos:end="47:42">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="49:16" pos:end="49:44"><expr pos:start="49:16" pos:end="49:44"><operator pos:start="49:16" pos:end="49:16">&amp;</operator><name pos:start="49:17" pos:end="49:44"><name pos:start="49:17" pos:end="49:21">frame</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:25">uc</name><operator pos:start="49:26" pos:end="49:26">.</operator><name pos:start="49:27" pos:end="49:35">tuc_stack</name><operator pos:start="49:36" pos:end="49:36">.</operator><name pos:start="49:37" pos:end="49:44">ss_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="53:45"><expr pos:start="51:5" pos:end="53:44"><call pos:start="51:5" pos:end="53:44"><name pos:start="51:5" pos:end="51:14">__put_user</name><argument_list pos:start="51:15" pos:end="53:44">(<argument pos:start="51:16" pos:end="51:46"><expr pos:start="51:16" pos:end="51:46"><name pos:start="51:16" pos:end="51:46"><name pos:start="51:16" pos:end="51:38">target_sigaltstack_used</name><operator pos:start="51:39" pos:end="51:39">.</operator><name pos:start="51:40" pos:end="51:46">ss_size</name></name></expr></argument>,

               <argument pos:start="53:16" pos:end="53:43"><expr pos:start="53:16" pos:end="53:43"><operator pos:start="53:16" pos:end="53:16">&amp;</operator><name pos:start="53:17" pos:end="53:43"><name pos:start="53:17" pos:end="53:21">frame</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:25">uc</name><operator pos:start="53:26" pos:end="53:26">.</operator><name pos:start="53:27" pos:end="53:35">tuc_stack</name><operator pos:start="53:36" pos:end="53:36">.</operator><name pos:start="53:37" pos:end="53:43">ss_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="57:47"><expr pos:start="55:5" pos:end="57:46"><call pos:start="55:5" pos:end="57:46"><name pos:start="55:5" pos:end="55:20">setup_sigcontext</name><argument_list pos:start="55:21" pos:end="57:46">(<argument pos:start="55:22" pos:end="55:44"><expr pos:start="55:22" pos:end="55:44"><operator pos:start="55:22" pos:end="55:22">&amp;</operator><name pos:start="55:23" pos:end="55:44"><name pos:start="55:23" pos:end="55:27">frame</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:31">uc</name><operator pos:start="55:32" pos:end="55:32">.</operator><name pos:start="55:33" pos:end="55:44">tuc_mcontext</name></name></expr></argument>,

			    <argument pos:start="57:29" pos:end="57:32"><expr pos:start="57:29" pos:end="57:32"><name pos:start="57:29" pos:end="57:32">regs</name></expr></argument>, <argument pos:start="57:35" pos:end="57:45"><expr pos:start="57:35" pos:end="57:45"><name pos:start="57:35" pos:end="57:45"><name pos:start="57:35" pos:end="57:37">set</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:42">sig</name><index pos:start="57:43" pos:end="57:45">[<expr pos:start="57:44" pos:end="57:44"><literal type="number" pos:start="57:44" pos:end="57:44">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="59:5" pos:end="63:5">for<control pos:start="59:8" pos:end="59:42">(<init pos:start="59:9" pos:end="59:14"><expr pos:start="59:9" pos:end="59:13"><name pos:start="59:9" pos:end="59:9">i</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <literal type="number" pos:start="59:13" pos:end="59:13">0</literal></expr>;</init> <condition pos:start="59:16" pos:end="59:37"><expr pos:start="59:16" pos:end="59:36"><name pos:start="59:16" pos:end="59:16">i</name> <operator pos:start="59:18" pos:end="59:18">&lt;</operator> <name pos:start="59:20" pos:end="59:36">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="59:39" pos:end="59:41"><expr pos:start="59:39" pos:end="59:41"><name pos:start="59:39" pos:end="59:39">i</name><operator pos:start="59:40" pos:end="59:41">++</operator></expr></incr>)</control> <block pos:start="59:44" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:63">

        <expr_stmt pos:start="61:9" pos:end="61:63"><expr pos:start="61:9" pos:end="61:62"><call pos:start="61:9" pos:end="61:62"><name pos:start="61:9" pos:end="61:18">__put_user</name><argument_list pos:start="61:19" pos:end="61:62">(<argument pos:start="61:20" pos:end="61:30"><expr pos:start="61:20" pos:end="61:30"><name pos:start="61:20" pos:end="61:30"><name pos:start="61:20" pos:end="61:22">set</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:27">sig</name><index pos:start="61:28" pos:end="61:30">[<expr pos:start="61:29" pos:end="61:29"><name pos:start="61:29" pos:end="61:29">i</name></expr>]</index></name></expr></argument>, <argument pos:start="61:33" pos:end="61:61"><expr pos:start="61:33" pos:end="61:61"><operator pos:start="61:33" pos:end="61:33">&amp;</operator><name pos:start="61:34" pos:end="61:61"><name pos:start="61:34" pos:end="61:38">frame</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:42">uc</name><operator pos:start="61:43" pos:end="61:43">.</operator><name pos:start="61:44" pos:end="61:54">tuc_sigmask</name><operator pos:start="61:55" pos:end="61:55">.</operator><name pos:start="61:56" pos:end="61:58">sig</name><index pos:start="61:59" pos:end="61:61">[<expr pos:start="61:60" pos:end="61:60"><name pos:start="61:60" pos:end="61:60">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="67:5" pos:end="69:32">/* Set up to return from userspace.  If provided, use a stub

       already in userspace.  */</comment>

    <if_stmt pos:start="71:5" pos:end="87:5"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:42">(<expr pos:start="71:9" pos:end="71:41"><name pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:10">ka</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:20">sa_flags</name></name> <operator pos:start="71:22" pos:end="71:22">&amp;</operator> <name pos:start="71:24" pos:end="71:41">TARGET_SA_RESTORER</name></expr>)</condition> <block pos:start="71:44" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:51">

        <expr_stmt pos:start="73:9" pos:end="73:51"><expr pos:start="73:9" pos:end="73:50"><name pos:start="73:9" pos:end="73:16"><name pos:start="73:9" pos:end="73:12">regs</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:16">pr</name></name> <operator pos:start="73:18" pos:end="73:18">=</operator> <operator pos:start="73:20" pos:end="73:20">(</operator><name pos:start="73:21" pos:end="73:28">unsigned</name> <name pos:start="73:30" pos:end="73:33">long</name><operator pos:start="73:34" pos:end="73:34">)</operator> <name pos:start="73:36" pos:end="73:50"><name pos:start="73:36" pos:end="73:37">ka</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:50">sa_restorer</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="75:7" pos:end="87:5">else <block pos:start="75:12" pos:end="87:5">{<block_content pos:start="79:9" pos:end="85:50">

        <comment type="block" pos:start="77:9" pos:end="77:61">/* Generate return code (system call to sigreturn) */</comment>

        <expr_stmt pos:start="79:9" pos:end="79:48"><expr pos:start="79:9" pos:end="79:47"><call pos:start="79:9" pos:end="79:47"><name pos:start="79:9" pos:end="79:18">__put_user</name><argument_list pos:start="79:19" pos:end="79:47">(<argument pos:start="79:20" pos:end="79:26"><expr pos:start="79:20" pos:end="79:26"><call pos:start="79:20" pos:end="79:26"><name pos:start="79:20" pos:end="79:23">MOVW</name><argument_list pos:start="79:24" pos:end="79:26">(<argument pos:start="79:25" pos:end="79:25"><expr pos:start="79:25" pos:end="79:25"><literal type="number" pos:start="79:25" pos:end="79:25">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:29" pos:end="79:46"><expr pos:start="79:29" pos:end="79:46"><operator pos:start="79:29" pos:end="79:29">&amp;</operator><name pos:start="79:30" pos:end="79:46"><name pos:start="79:30" pos:end="79:34">frame</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:43">retcode</name><index pos:start="79:44" pos:end="79:46">[<expr pos:start="79:45" pos:end="79:45"><literal type="number" pos:start="79:45" pos:end="79:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:51"><expr pos:start="81:9" pos:end="81:50"><call pos:start="81:9" pos:end="81:50"><name pos:start="81:9" pos:end="81:18">__put_user</name><argument_list pos:start="81:19" pos:end="81:50">(<argument pos:start="81:20" pos:end="81:29"><expr pos:start="81:20" pos:end="81:29"><name pos:start="81:20" pos:end="81:29">TRAP_NOARG</name></expr></argument>, <argument pos:start="81:32" pos:end="81:49"><expr pos:start="81:32" pos:end="81:49"><operator pos:start="81:32" pos:end="81:32">&amp;</operator><name pos:start="81:33" pos:end="81:49"><name pos:start="81:33" pos:end="81:37">frame</name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:46">retcode</name><index pos:start="81:47" pos:end="81:49">[<expr pos:start="81:48" pos:end="81:48"><literal type="number" pos:start="81:48" pos:end="81:48">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:65"><expr pos:start="83:9" pos:end="83:64"><call pos:start="83:9" pos:end="83:64"><name pos:start="83:9" pos:end="83:18">__put_user</name><argument_list pos:start="83:19" pos:end="83:64">(<argument pos:start="83:20" pos:end="83:43"><expr pos:start="83:20" pos:end="83:43"><operator pos:start="83:20" pos:end="83:20">(</operator><name pos:start="83:21" pos:end="83:42">TARGET_NR_rt_sigreturn</name><operator pos:start="83:43" pos:end="83:43">)</operator></expr></argument>, <argument pos:start="83:46" pos:end="83:63"><expr pos:start="83:46" pos:end="83:63"><operator pos:start="83:46" pos:end="83:46">&amp;</operator><name pos:start="83:47" pos:end="83:63"><name pos:start="83:47" pos:end="83:51">frame</name><operator pos:start="83:52" pos:end="83:53">-&gt;</operator><name pos:start="83:54" pos:end="83:60">retcode</name><index pos:start="83:61" pos:end="83:63">[<expr pos:start="83:62" pos:end="83:62"><literal type="number" pos:start="83:62" pos:end="83:62">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:50"><expr pos:start="85:9" pos:end="85:49"><name pos:start="85:9" pos:end="85:16"><name pos:start="85:9" pos:end="85:12">regs</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:16">pr</name></name> <operator pos:start="85:18" pos:end="85:18">=</operator> <operator pos:start="85:20" pos:end="85:20">(</operator><name pos:start="85:21" pos:end="85:28">unsigned</name> <name pos:start="85:30" pos:end="85:33">long</name><operator pos:start="85:34" pos:end="85:34">)</operator> <name pos:start="85:36" pos:end="85:49"><name pos:start="85:36" pos:end="85:40">frame</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:49">retcode</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="91:5" pos:end="93:26"><if pos:start="91:5" pos:end="93:26">if <condition pos:start="91:8" pos:end="91:12">(<expr pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:11">err</name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:26"><block_content pos:start="93:9" pos:end="93:26">

        <goto pos:start="93:9" pos:end="93:26">goto <name pos:start="93:14" pos:end="93:25">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:45">/* Set up registers for signal handler */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:33"><expr pos:start="99:5" pos:end="99:32"><name pos:start="99:5" pos:end="99:19"><name pos:start="99:5" pos:end="99:8">regs</name><operator pos:start="99:9" pos:end="99:10">-&gt;</operator><name pos:start="99:11" pos:end="99:15">gregs</name><index pos:start="99:16" pos:end="99:19">[<expr pos:start="99:17" pos:end="99:18"><literal type="number" pos:start="99:17" pos:end="99:18">15</literal></expr>]</index></name> <operator pos:start="99:21" pos:end="99:21">=</operator> <name pos:start="99:23" pos:end="99:32">frame_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:28"><expr pos:start="101:5" pos:end="101:27"><name pos:start="101:5" pos:end="101:18"><name pos:start="101:5" pos:end="101:8">regs</name><operator pos:start="101:9" pos:end="101:10">-&gt;</operator><name pos:start="101:11" pos:end="101:15">gregs</name><index pos:start="101:16" pos:end="101:18">[<expr pos:start="101:17" pos:end="101:17"><literal type="number" pos:start="101:17" pos:end="101:17">4</literal></expr>]</index></name> <operator pos:start="101:20" pos:end="101:20">=</operator> <name pos:start="101:22" pos:end="101:27">signal</name></expr>;</expr_stmt> <comment type="block" pos:start="101:30" pos:end="101:57">/* Arg for signal handler */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:65"><expr pos:start="103:5" pos:end="103:64"><name pos:start="103:5" pos:end="103:18"><name pos:start="103:5" pos:end="103:8">regs</name><operator pos:start="103:9" pos:end="103:10">-&gt;</operator><name pos:start="103:11" pos:end="103:15">gregs</name><index pos:start="103:16" pos:end="103:18">[<expr pos:start="103:17" pos:end="103:17"><literal type="number" pos:start="103:17" pos:end="103:17">5</literal></expr>]</index></name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:31">frame_addr</name> <operator pos:start="103:33" pos:end="103:33">+</operator> <call pos:start="103:35" pos:end="103:64"><name pos:start="103:35" pos:end="103:42">offsetof</name><argument_list pos:start="103:43" pos:end="103:64">(<argument pos:start="103:44" pos:end="103:57"><expr pos:start="103:44" pos:end="103:57"><call pos:start="103:44" pos:end="103:57"><name pos:start="103:44" pos:end="103:49">typeof</name><argument_list pos:start="103:50" pos:end="103:57">(<argument pos:start="103:51" pos:end="103:56"><expr pos:start="103:51" pos:end="103:56"><operator pos:start="103:51" pos:end="103:51">*</operator><name pos:start="103:52" pos:end="103:56">frame</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="103:60" pos:end="103:63"><expr pos:start="103:60" pos:end="103:63"><name pos:start="103:60" pos:end="103:63">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:63"><expr pos:start="105:5" pos:end="105:62"><name pos:start="105:5" pos:end="105:18"><name pos:start="105:5" pos:end="105:8">regs</name><operator pos:start="105:9" pos:end="105:10">-&gt;</operator><name pos:start="105:11" pos:end="105:15">gregs</name><index pos:start="105:16" pos:end="105:18">[<expr pos:start="105:17" pos:end="105:17"><literal type="number" pos:start="105:17" pos:end="105:17">6</literal></expr>]</index></name> <operator pos:start="105:20" pos:end="105:20">=</operator> <name pos:start="105:22" pos:end="105:31">frame_addr</name> <operator pos:start="105:33" pos:end="105:33">+</operator> <call pos:start="105:35" pos:end="105:62"><name pos:start="105:35" pos:end="105:42">offsetof</name><argument_list pos:start="105:43" pos:end="105:62">(<argument pos:start="105:44" pos:end="105:57"><expr pos:start="105:44" pos:end="105:57"><call pos:start="105:44" pos:end="105:57"><name pos:start="105:44" pos:end="105:49">typeof</name><argument_list pos:start="105:50" pos:end="105:57">(<argument pos:start="105:51" pos:end="105:56"><expr pos:start="105:51" pos:end="105:56"><operator pos:start="105:51" pos:end="105:51">*</operator><name pos:start="105:52" pos:end="105:56">frame</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="105:60" pos:end="105:61"><expr pos:start="105:60" pos:end="105:61"><name pos:start="105:60" pos:end="105:61">uc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:47"><expr pos:start="107:5" pos:end="107:46"><name pos:start="107:5" pos:end="107:12"><name pos:start="107:5" pos:end="107:8">regs</name><operator pos:start="107:9" pos:end="107:10">-&gt;</operator><name pos:start="107:11" pos:end="107:12">pc</name></name> <operator pos:start="107:14" pos:end="107:14">=</operator> <operator pos:start="107:16" pos:end="107:16">(</operator><name pos:start="107:17" pos:end="107:24">unsigned</name> <name pos:start="107:26" pos:end="107:29">long</name><operator pos:start="107:30" pos:end="107:30">)</operator> <name pos:start="107:32" pos:end="107:46"><name pos:start="107:32" pos:end="107:33">ka</name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:46">_sa_handler</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:45"><expr pos:start="111:5" pos:end="111:44"><call pos:start="111:5" pos:end="111:44"><name pos:start="111:5" pos:end="111:22">unlock_user_struct</name><argument_list pos:start="111:23" pos:end="111:44">(<argument pos:start="111:24" pos:end="111:28"><expr pos:start="111:24" pos:end="111:28"><name pos:start="111:24" pos:end="111:28">frame</name></expr></argument>, <argument pos:start="111:31" pos:end="111:40"><expr pos:start="111:31" pos:end="111:40"><name pos:start="111:31" pos:end="111:40">frame_addr</name></expr></argument>, <argument pos:start="111:43" pos:end="111:43"><expr pos:start="111:43" pos:end="111:43"><literal type="number" pos:start="111:43" pos:end="111:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="113:5" pos:end="113:11">return;</return>



<label pos:start="117:1" pos:end="117:13"><name pos:start="117:1" pos:end="117:12">give_sigsegv</name>:</label>

    <expr_stmt pos:start="119:5" pos:end="119:45"><expr pos:start="119:5" pos:end="119:44"><call pos:start="119:5" pos:end="119:44"><name pos:start="119:5" pos:end="119:22">unlock_user_struct</name><argument_list pos:start="119:23" pos:end="119:44">(<argument pos:start="119:24" pos:end="119:28"><expr pos:start="119:24" pos:end="119:28"><name pos:start="119:24" pos:end="119:28">frame</name></expr></argument>, <argument pos:start="119:31" pos:end="119:40"><expr pos:start="119:31" pos:end="119:40"><name pos:start="119:31" pos:end="119:40">frame_addr</name></expr></argument>, <argument pos:start="119:43" pos:end="119:43"><expr pos:start="119:43" pos:end="119:43"><literal type="number" pos:start="119:43" pos:end="119:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:30"><expr pos:start="121:5" pos:end="121:29"><call pos:start="121:5" pos:end="121:29"><name pos:start="121:5" pos:end="121:13">force_sig</name><argument_list pos:start="121:14" pos:end="121:29">(<argument pos:start="121:15" pos:end="121:28"><expr pos:start="121:15" pos:end="121:28"><name pos:start="121:15" pos:end="121:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
