<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14510.c" pos:tabs="8"><function pos:start="1:1" pos:end="281:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">load_input_picture</name><parameter_list pos:start="1:30" pos:end="1:72">(<parameter pos:start="1:31" pos:end="1:47"><decl pos:start="1:31" pos:end="1:47"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:44">MpegEncContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:71"><decl pos:start="1:50" pos:end="1:71"><type pos:start="1:50" pos:end="1:71"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:62">AVFrame</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:71">pic_arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="281:1">{<block_content pos:start="5:5" pos:end="279:13">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">Picture</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">pic</name> <init pos:start="5:18" pos:end="5:23">= <expr pos:start="5:20" pos:end="5:23"><name pos:start="5:20" pos:end="5:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">pts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:33">display_picture_number</name> <init pos:start="9:35" pos:end="9:37">= <expr pos:start="9:37" pos:end="9:37"><literal type="number" pos:start="9:37" pos:end="9:37">0</literal></expr></init></decl>, <decl pos:start="9:40" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:40" pos:end="9:42">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="13:72"><decl pos:start="11:5" pos:end="13:71"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:28">encoding_delay</name> <init pos:start="11:30" pos:end="13:71">= <expr pos:start="11:32" pos:end="13:71"><ternary pos:start="11:32" pos:end="13:71"><condition pos:start="11:32" pos:end="11:48"><expr pos:start="11:32" pos:end="11:46"><name pos:start="11:32" pos:end="11:46"><name pos:start="11:32" pos:end="11:32">s</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:46">max_b_frames</name></name></expr> ?</condition><then pos:start="11:50" pos:end="11:64"> <expr pos:start="11:50" pos:end="11:64"><name pos:start="11:50" pos:end="11:64"><name pos:start="11:50" pos:end="11:50">s</name><operator pos:start="11:51" pos:end="11:52">-&gt;</operator><name pos:start="11:53" pos:end="11:64">max_b_frames</name></name></expr> </then><else pos:start="11:66" pos:end="13:71">:

                                                 <expr pos:start="13:50" pos:end="13:71"><operator pos:start="13:50" pos:end="13:50">(</operator><ternary pos:start="13:51" pos:end="13:70"><condition pos:start="13:51" pos:end="13:64"><expr pos:start="13:51" pos:end="13:62"><name pos:start="13:51" pos:end="13:62"><name pos:start="13:51" pos:end="13:51">s</name><operator pos:start="13:52" pos:end="13:53">-&gt;</operator><name pos:start="13:54" pos:end="13:62">low_delay</name></name></expr> ?</condition><then pos:start="13:66" pos:end="13:66"> <expr pos:start="13:66" pos:end="13:66"><literal type="number" pos:start="13:66" pos:end="13:66">0</literal></expr> </then><else pos:start="13:68" pos:end="13:70">: <expr pos:start="13:70" pos:end="13:70"><literal type="number" pos:start="13:70" pos:end="13:70">1</literal></expr></else></ternary><operator pos:start="13:71" pos:end="13:71">)</operator></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">direct</name> <init pos:start="15:16" pos:end="15:18">= <expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="81:5"><if pos:start="19:5" pos:end="81:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:15">pic_arg</name></expr>)</condition> <block pos:start="19:18" pos:end="81:5">{<block_content pos:start="21:9" pos:end="79:9">

        <expr_stmt pos:start="21:9" pos:end="21:27"><expr pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:11">pts</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:26"><name pos:start="21:15" pos:end="21:21">pic_arg</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:26">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:59"><expr pos:start="23:9" pos:end="23:58"><name pos:start="23:9" pos:end="23:30">display_picture_number</name> <operator pos:start="23:32" pos:end="23:32">=</operator> <name pos:start="23:34" pos:end="23:56"><name pos:start="23:34" pos:end="23:34">s</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:56">input_picture_number</name></name><operator pos:start="23:57" pos:end="23:58">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="27:9" pos:end="79:9"><if pos:start="27:9" pos:end="59:9">if <condition pos:start="27:12" pos:end="27:34">(<expr pos:start="27:13" pos:end="27:33"><name pos:start="27:13" pos:end="27:15">pts</name> <operator pos:start="27:17" pos:end="27:18">!=</operator> <name pos:start="27:20" pos:end="27:33">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="27:36" pos:end="59:9">{<block_content pos:start="29:13" pos:end="57:40">

            <if_stmt pos:start="29:13" pos:end="55:13"><if pos:start="29:13" pos:end="55:13">if <condition pos:start="29:16" pos:end="29:56">(<expr pos:start="29:17" pos:end="29:55"><name pos:start="29:17" pos:end="29:37"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:37">user_specified_pts</name></name> <operator pos:start="29:39" pos:end="29:40">!=</operator> <name pos:start="29:42" pos:end="29:55">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="29:58" pos:end="55:13">{<block_content pos:start="31:17" pos:end="53:47">

                <decl_stmt pos:start="31:17" pos:end="31:35"><decl pos:start="31:17" pos:end="31:34"><type pos:start="31:17" pos:end="31:23"><name pos:start="31:17" pos:end="31:23">int64_t</name></type> <name pos:start="31:25" pos:end="31:28">time</name> <init pos:start="31:30" pos:end="31:34">= <expr pos:start="31:32" pos:end="31:34"><name pos:start="31:32" pos:end="31:34">pts</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="33:17" pos:end="33:53"><decl pos:start="33:17" pos:end="33:52"><type pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:23">int64_t</name></type> <name pos:start="33:25" pos:end="33:28">last</name> <init pos:start="33:30" pos:end="33:52">= <expr pos:start="33:32" pos:end="33:52"><name pos:start="33:32" pos:end="33:52"><name pos:start="33:32" pos:end="33:32">s</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:52">user_specified_pts</name></name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="37:17" pos:end="47:17"><if pos:start="37:17" pos:end="47:17">if <condition pos:start="37:20" pos:end="37:33">(<expr pos:start="37:21" pos:end="37:32"><name pos:start="37:21" pos:end="37:24">time</name> <operator pos:start="37:26" pos:end="37:27">&lt;=</operator> <name pos:start="37:29" pos:end="37:32">last</name></expr>)</condition> <block pos:start="37:35" pos:end="47:17">{<block_content pos:start="39:21" pos:end="45:30">

                    <expr_stmt pos:start="39:21" pos:end="43:75"><expr pos:start="39:21" pos:end="43:74"><call pos:start="39:21" pos:end="43:74"><name pos:start="39:21" pos:end="39:26">av_log</name><argument_list pos:start="39:27" pos:end="43:74">(<argument pos:start="39:28" pos:end="39:35"><expr pos:start="39:28" pos:end="39:35"><name pos:start="39:28" pos:end="39:35"><name pos:start="39:28" pos:end="39:28">s</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:35">avctx</name></name></expr></argument>, <argument pos:start="39:38" pos:end="39:49"><expr pos:start="39:38" pos:end="39:49"><name pos:start="39:38" pos:end="39:49">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="41:28" pos:end="43:45"><expr pos:start="41:28" pos:end="43:45"><literal type="string" pos:start="41:28" pos:end="41:55">"Error, Invalid timestamp=%"</literal><name pos:start="41:56" pos:end="41:61">PRId64</name><literal type="string" pos:start="41:62" pos:end="41:65">", "</literal>

                           <literal type="string" pos:start="43:28" pos:end="43:35">"last=%"</literal><name pos:start="43:36" pos:end="43:41">PRId64</name><literal type="string" pos:start="43:42" pos:end="43:45">"\n"</literal></expr></argument>, <argument pos:start="43:48" pos:end="43:50"><expr pos:start="43:48" pos:end="43:50"><name pos:start="43:48" pos:end="43:50">pts</name></expr></argument>, <argument pos:start="43:53" pos:end="43:73"><expr pos:start="43:53" pos:end="43:73"><name pos:start="43:53" pos:end="43:73"><name pos:start="43:53" pos:end="43:53">s</name><operator pos:start="43:54" pos:end="43:55">-&gt;</operator><name pos:start="43:56" pos:end="43:73">user_specified_pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="45:21" pos:end="45:30">return <expr pos:start="45:28" pos:end="45:29"><operator pos:start="45:28" pos:end="45:28">-</operator><literal type="number" pos:start="45:29" pos:end="45:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="51:17" pos:end="53:47"><if pos:start="51:17" pos:end="53:47">if <condition pos:start="51:20" pos:end="51:65">(<expr pos:start="51:21" pos:end="51:64"><operator pos:start="51:21" pos:end="51:21">!</operator><name pos:start="51:22" pos:end="51:33"><name pos:start="51:22" pos:end="51:22">s</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:33">low_delay</name></name> <operator pos:start="51:35" pos:end="51:36">&amp;&amp;</operator> <name pos:start="51:38" pos:end="51:59">display_picture_number</name> <operator pos:start="51:61" pos:end="51:62">==</operator> <literal type="number" pos:start="51:64" pos:end="51:64">1</literal></expr>)</condition><block type="pseudo" pos:start="53:21" pos:end="53:47"><block_content pos:start="53:21" pos:end="53:47">

                    <expr_stmt pos:start="53:21" pos:end="53:47"><expr pos:start="53:21" pos:end="53:46"><name pos:start="53:21" pos:end="53:32"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:32">dts_delta</name></name> <operator pos:start="53:34" pos:end="53:34">=</operator> <name pos:start="53:36" pos:end="53:39">time</name> <operator pos:start="53:41" pos:end="53:41">-</operator> <name pos:start="53:43" pos:end="53:46">last</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:40"><expr pos:start="57:13" pos:end="57:39"><name pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:33">user_specified_pts</name></name> <operator pos:start="57:35" pos:end="57:35">=</operator> <name pos:start="57:37" pos:end="57:39">pts</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="79:9">else <block pos:start="59:16" pos:end="79:9">{<block_content pos:start="61:13" pos:end="77:13">

            <if_stmt pos:start="61:13" pos:end="77:13"><if pos:start="61:13" pos:end="73:13">if <condition pos:start="61:16" pos:end="61:56">(<expr pos:start="61:17" pos:end="61:55"><name pos:start="61:17" pos:end="61:37"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:37">user_specified_pts</name></name> <operator pos:start="61:39" pos:end="61:40">!=</operator> <name pos:start="61:42" pos:end="61:55">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="61:58" pos:end="73:13">{<block_content pos:start="63:17" pos:end="71:28">

                <expr_stmt pos:start="63:17" pos:end="65:48"><expr pos:start="63:17" pos:end="65:47"><name pos:start="63:17" pos:end="63:37"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:37">user_specified_pts</name></name> <operator pos:start="63:39" pos:end="63:39">=</operator>

                <name pos:start="65:17" pos:end="65:19">pts</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:43"><name pos:start="65:23" pos:end="65:23">s</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:43">user_specified_pts</name></name> <operator pos:start="65:45" pos:end="65:45">+</operator> <literal type="number" pos:start="65:47" pos:end="65:47">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="71:28"><expr pos:start="67:17" pos:end="71:27"><call pos:start="67:17" pos:end="71:27"><name pos:start="67:17" pos:end="67:22">av_log</name><argument_list pos:start="67:23" pos:end="71:27">(<argument pos:start="67:24" pos:end="67:31"><expr pos:start="67:24" pos:end="67:31"><name pos:start="67:24" pos:end="67:31"><name pos:start="67:24" pos:end="67:24">s</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:31">avctx</name></name></expr></argument>, <argument pos:start="67:34" pos:end="67:44"><expr pos:start="67:34" pos:end="67:44"><name pos:start="67:34" pos:end="67:44">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="69:24" pos:end="69:77"><expr pos:start="69:24" pos:end="69:77"><literal type="string" pos:start="69:24" pos:end="69:66">"Warning: AVFrame.pts=? trying to guess (%"</literal><name pos:start="69:67" pos:end="69:72">PRId64</name><literal type="string" pos:start="69:73" pos:end="69:77">")\n"</literal></expr></argument>,

                       <argument pos:start="71:24" pos:end="71:26"><expr pos:start="71:24" pos:end="71:26"><name pos:start="71:24" pos:end="71:26">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="73:15" pos:end="77:13">else <block pos:start="73:20" pos:end="77:13">{<block_content pos:start="75:17" pos:end="75:45">

                <expr_stmt pos:start="75:17" pos:end="75:45"><expr pos:start="75:17" pos:end="75:44"><name pos:start="75:17" pos:end="75:19">pts</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <name pos:start="75:23" pos:end="75:44">display_picture_number</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="263:5"><if pos:start="85:5" pos:end="263:5">if <condition pos:start="85:8" pos:end="85:16">(<expr pos:start="85:9" pos:end="85:15"><name pos:start="85:9" pos:end="85:15">pic_arg</name></expr>)</condition> <block pos:start="85:18" pos:end="263:5">{<block_content pos:start="87:9" pos:end="261:25">

        <if_stmt pos:start="87:9" pos:end="89:23"><if pos:start="87:9" pos:end="89:23">if <condition pos:start="87:12" pos:end="87:29">(<expr pos:start="87:13" pos:end="87:28"><operator pos:start="87:13" pos:end="87:13">!</operator><name pos:start="87:14" pos:end="87:28"><name pos:start="87:14" pos:end="87:20">pic_arg</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:25">buf</name><index pos:start="87:26" pos:end="87:28">[<expr pos:start="87:27" pos:end="87:27"><literal type="number" pos:start="87:27" pos:end="87:27">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:23"><block_content pos:start="89:13" pos:end="89:23">

            <expr_stmt pos:start="89:13" pos:end="89:23"><expr pos:start="89:13" pos:end="89:22"><name pos:start="89:13" pos:end="89:18">direct</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <literal type="number" pos:start="89:22" pos:end="89:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="91:9" pos:end="93:23"><if pos:start="91:9" pos:end="93:23">if <condition pos:start="91:12" pos:end="91:48">(<expr pos:start="91:13" pos:end="91:47"><name pos:start="91:13" pos:end="91:32"><name pos:start="91:13" pos:end="91:19">pic_arg</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:29">linesize</name><index pos:start="91:30" pos:end="91:32">[<expr pos:start="91:31" pos:end="91:31"><literal type="number" pos:start="91:31" pos:end="91:31">0</literal></expr>]</index></name> <operator pos:start="91:34" pos:end="91:35">!=</operator> <name pos:start="91:37" pos:end="91:47"><name pos:start="91:37" pos:end="91:37">s</name><operator pos:start="91:38" pos:end="91:39">-&gt;</operator><name pos:start="91:40" pos:end="91:47">linesize</name></name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:23"><block_content pos:start="93:13" pos:end="93:23">

            <expr_stmt pos:start="93:13" pos:end="93:23"><expr pos:start="93:13" pos:end="93:22"><name pos:start="93:13" pos:end="93:18">direct</name> <operator pos:start="93:20" pos:end="93:20">=</operator> <literal type="number" pos:start="93:22" pos:end="93:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="95:9" pos:end="97:23"><if pos:start="95:9" pos:end="97:23">if <condition pos:start="95:12" pos:end="95:50">(<expr pos:start="95:13" pos:end="95:49"><name pos:start="95:13" pos:end="95:32"><name pos:start="95:13" pos:end="95:19">pic_arg</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:29">linesize</name><index pos:start="95:30" pos:end="95:32">[<expr pos:start="95:31" pos:end="95:31"><literal type="number" pos:start="95:31" pos:end="95:31">1</literal></expr>]</index></name> <operator pos:start="95:34" pos:end="95:35">!=</operator> <name pos:start="95:37" pos:end="95:49"><name pos:start="95:37" pos:end="95:37">s</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:49">uvlinesize</name></name></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:23"><block_content pos:start="97:13" pos:end="97:23">

            <expr_stmt pos:start="97:13" pos:end="97:23"><expr pos:start="97:13" pos:end="97:22"><name pos:start="97:13" pos:end="97:18">direct</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <literal type="number" pos:start="97:22" pos:end="97:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="99:9" pos:end="101:23"><if pos:start="99:9" pos:end="101:23">if <condition pos:start="99:12" pos:end="99:50">(<expr pos:start="99:13" pos:end="99:49"><name pos:start="99:13" pos:end="99:32"><name pos:start="99:13" pos:end="99:19">pic_arg</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:29">linesize</name><index pos:start="99:30" pos:end="99:32">[<expr pos:start="99:31" pos:end="99:31"><literal type="number" pos:start="99:31" pos:end="99:31">2</literal></expr>]</index></name> <operator pos:start="99:34" pos:end="99:35">!=</operator> <name pos:start="99:37" pos:end="99:49"><name pos:start="99:37" pos:end="99:37">s</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:49">uvlinesize</name></name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:23"><block_content pos:start="101:13" pos:end="101:23">

            <expr_stmt pos:start="101:13" pos:end="101:23"><expr pos:start="101:13" pos:end="101:22"><name pos:start="101:13" pos:end="101:18">direct</name> <operator pos:start="101:20" pos:end="101:20">=</operator> <literal type="number" pos:start="101:22" pos:end="101:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="105:9" pos:end="107:66"><expr pos:start="105:9" pos:end="107:65"><call pos:start="105:9" pos:end="107:65"><name pos:start="105:9" pos:end="105:15">av_dlog</name><argument_list pos:start="105:16" pos:end="107:65">(<argument pos:start="105:17" pos:end="105:24"><expr pos:start="105:17" pos:end="105:24"><name pos:start="105:17" pos:end="105:24"><name pos:start="105:17" pos:end="105:17">s</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:24">avctx</name></name></expr></argument>, <argument pos:start="105:27" pos:end="105:41"><expr pos:start="105:27" pos:end="105:41"><literal type="string" pos:start="105:27" pos:end="105:41">"%d %d %d %d\n"</literal></expr></argument>, <argument pos:start="105:44" pos:end="105:63"><expr pos:start="105:44" pos:end="105:63"><name pos:start="105:44" pos:end="105:63"><name pos:start="105:44" pos:end="105:50">pic_arg</name><operator pos:start="105:51" pos:end="105:52">-&gt;</operator><name pos:start="105:53" pos:end="105:60">linesize</name><index pos:start="105:61" pos:end="105:63">[<expr pos:start="105:62" pos:end="105:62"><literal type="number" pos:start="105:62" pos:end="105:62">0</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="107:17" pos:end="107:36"><expr pos:start="107:17" pos:end="107:36"><name pos:start="107:17" pos:end="107:36"><name pos:start="107:17" pos:end="107:23">pic_arg</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:33">linesize</name><index pos:start="107:34" pos:end="107:36">[<expr pos:start="107:35" pos:end="107:35"><literal type="number" pos:start="107:35" pos:end="107:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="107:39" pos:end="107:49"><expr pos:start="107:39" pos:end="107:49"><name pos:start="107:39" pos:end="107:49"><name pos:start="107:39" pos:end="107:39">s</name><operator pos:start="107:40" pos:end="107:41">-&gt;</operator><name pos:start="107:42" pos:end="107:49">linesize</name></name></expr></argument>, <argument pos:start="107:52" pos:end="107:64"><expr pos:start="107:52" pos:end="107:64"><name pos:start="107:52" pos:end="107:64"><name pos:start="107:52" pos:end="107:52">s</name><operator pos:start="107:53" pos:end="107:54">-&gt;</operator><name pos:start="107:55" pos:end="107:64">uvlinesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="111:9" pos:end="255:9"><if pos:start="111:9" pos:end="137:9">if <condition pos:start="111:12" pos:end="111:19">(<expr pos:start="111:13" pos:end="111:18"><name pos:start="111:13" pos:end="111:18">direct</name></expr>)</condition> <block pos:start="111:21" pos:end="137:9">{<block_content pos:start="113:13" pos:end="135:13">

            <expr_stmt pos:start="113:13" pos:end="113:45"><expr pos:start="113:13" pos:end="113:44"><name pos:start="113:13" pos:end="113:13">i</name> <operator pos:start="113:15" pos:end="113:15">=</operator> <call pos:start="113:17" pos:end="113:44"><name pos:start="113:17" pos:end="113:38">ff_find_unused_picture</name><argument_list pos:start="113:39" pos:end="113:44">(<argument pos:start="113:40" pos:end="113:40"><expr pos:start="113:40" pos:end="113:40"><name pos:start="113:40" pos:end="113:40">s</name></expr></argument>, <argument pos:start="113:43" pos:end="113:43"><expr pos:start="113:43" pos:end="113:43"><literal type="number" pos:start="113:43" pos:end="113:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="117:25"><if pos:start="115:13" pos:end="117:25">if <condition pos:start="115:16" pos:end="115:22">(<expr pos:start="115:17" pos:end="115:21"><name pos:start="115:17" pos:end="115:17">i</name> <operator pos:start="115:19" pos:end="115:19">&lt;</operator> <literal type="number" pos:start="115:21" pos:end="115:21">0</literal></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:25"><block_content pos:start="117:17" pos:end="117:25">

                <return pos:start="117:17" pos:end="117:25">return <expr pos:start="117:24" pos:end="117:24"><name pos:start="117:24" pos:end="117:24">i</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="121:13" pos:end="121:33"><expr pos:start="121:13" pos:end="121:32"><name pos:start="121:13" pos:end="121:15">pic</name> <operator pos:start="121:17" pos:end="121:17">=</operator> <operator pos:start="121:19" pos:end="121:19">&amp;</operator><name pos:start="121:20" pos:end="121:32"><name pos:start="121:20" pos:end="121:20">s</name><operator pos:start="121:21" pos:end="121:22">-&gt;</operator><name pos:start="121:23" pos:end="121:29">picture</name><index pos:start="121:30" pos:end="121:32">[<expr pos:start="121:31" pos:end="121:31"><name pos:start="121:31" pos:end="121:31">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:31"><expr pos:start="123:13" pos:end="123:30"><name pos:start="123:13" pos:end="123:26"><name pos:start="123:13" pos:end="123:15">pic</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:26">reference</name></name> <operator pos:start="123:28" pos:end="123:28">=</operator> <literal type="number" pos:start="123:30" pos:end="123:30">3</literal></expr>;</expr_stmt>



            <if_stmt pos:start="127:13" pos:end="129:27"><if pos:start="127:13" pos:end="129:27">if <condition pos:start="127:16" pos:end="127:59">(<expr pos:start="127:17" pos:end="127:58"><operator pos:start="127:17" pos:end="127:17">(</operator><name pos:start="127:18" pos:end="127:20">ret</name> <operator pos:start="127:22" pos:end="127:22">=</operator> <call pos:start="127:24" pos:end="127:53"><name pos:start="127:24" pos:end="127:35">av_frame_ref</name><argument_list pos:start="127:36" pos:end="127:53">(<argument pos:start="127:37" pos:end="127:43"><expr pos:start="127:37" pos:end="127:43"><operator pos:start="127:37" pos:end="127:37">&amp;</operator><name pos:start="127:38" pos:end="127:43"><name pos:start="127:38" pos:end="127:40">pic</name><operator pos:start="127:41" pos:end="127:42">-&gt;</operator><name pos:start="127:43" pos:end="127:43">f</name></name></expr></argument>, <argument pos:start="127:46" pos:end="127:52"><expr pos:start="127:46" pos:end="127:52"><name pos:start="127:46" pos:end="127:52">pic_arg</name></expr></argument>)</argument_list></call><operator pos:start="127:54" pos:end="127:54">)</operator> <operator pos:start="127:56" pos:end="127:56">&lt;</operator> <literal type="number" pos:start="127:58" pos:end="127:58">0</literal></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:27"><block_content pos:start="129:17" pos:end="129:27">

                <return pos:start="129:17" pos:end="129:27">return <expr pos:start="129:24" pos:end="129:26"><name pos:start="129:24" pos:end="129:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="131:13" pos:end="135:13"><if pos:start="131:13" pos:end="135:13">if <condition pos:start="131:16" pos:end="131:48">(<expr pos:start="131:17" pos:end="131:47"><call pos:start="131:17" pos:end="131:43"><name pos:start="131:17" pos:end="131:32">ff_alloc_picture</name><argument_list pos:start="131:33" pos:end="131:43">(<argument pos:start="131:34" pos:end="131:34"><expr pos:start="131:34" pos:end="131:34"><name pos:start="131:34" pos:end="131:34">s</name></expr></argument>, <argument pos:start="131:37" pos:end="131:39"><expr pos:start="131:37" pos:end="131:39"><name pos:start="131:37" pos:end="131:39">pic</name></expr></argument>, <argument pos:start="131:42" pos:end="131:42"><expr pos:start="131:42" pos:end="131:42"><literal type="number" pos:start="131:42" pos:end="131:42">1</literal></expr></argument>)</argument_list></call> <operator pos:start="131:45" pos:end="131:45">&lt;</operator> <literal type="number" pos:start="131:47" pos:end="131:47">0</literal></expr>)</condition> <block pos:start="131:50" pos:end="135:13">{<block_content pos:start="133:17" pos:end="133:26">

                <return pos:start="133:17" pos:end="133:26">return <expr pos:start="133:24" pos:end="133:25"><operator pos:start="133:24" pos:end="133:24">-</operator><literal type="number" pos:start="133:25" pos:end="133:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="137:11" pos:end="255:9">else <block pos:start="137:16" pos:end="255:9">{<block_content pos:start="139:13" pos:end="253:13">

            <expr_stmt pos:start="139:13" pos:end="139:45"><expr pos:start="139:13" pos:end="139:44"><name pos:start="139:13" pos:end="139:13">i</name> <operator pos:start="139:15" pos:end="139:15">=</operator> <call pos:start="139:17" pos:end="139:44"><name pos:start="139:17" pos:end="139:38">ff_find_unused_picture</name><argument_list pos:start="139:39" pos:end="139:44">(<argument pos:start="139:40" pos:end="139:40"><expr pos:start="139:40" pos:end="139:40"><name pos:start="139:40" pos:end="139:40">s</name></expr></argument>, <argument pos:start="139:43" pos:end="139:43"><expr pos:start="139:43" pos:end="139:43"><literal type="number" pos:start="139:43" pos:end="139:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="141:13" pos:end="143:25"><if pos:start="141:13" pos:end="143:25">if <condition pos:start="141:16" pos:end="141:22">(<expr pos:start="141:17" pos:end="141:21"><name pos:start="141:17" pos:end="141:17">i</name> <operator pos:start="141:19" pos:end="141:19">&lt;</operator> <literal type="number" pos:start="141:21" pos:end="141:21">0</literal></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="143:25"><block_content pos:start="143:17" pos:end="143:25">

                <return pos:start="143:17" pos:end="143:25">return <expr pos:start="143:24" pos:end="143:24"><name pos:start="143:24" pos:end="143:24">i</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="147:13" pos:end="147:33"><expr pos:start="147:13" pos:end="147:32"><name pos:start="147:13" pos:end="147:15">pic</name> <operator pos:start="147:17" pos:end="147:17">=</operator> <operator pos:start="147:19" pos:end="147:19">&amp;</operator><name pos:start="147:20" pos:end="147:32"><name pos:start="147:20" pos:end="147:20">s</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:29">picture</name><index pos:start="147:30" pos:end="147:32">[<expr pos:start="147:31" pos:end="147:31"><name pos:start="147:31" pos:end="147:31">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:31"><expr pos:start="149:13" pos:end="149:30"><name pos:start="149:13" pos:end="149:26"><name pos:start="149:13" pos:end="149:15">pic</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:26">reference</name></name> <operator pos:start="149:28" pos:end="149:28">=</operator> <literal type="number" pos:start="149:30" pos:end="149:30">3</literal></expr>;</expr_stmt>



            <if_stmt pos:start="153:13" pos:end="157:13"><if pos:start="153:13" pos:end="157:13">if <condition pos:start="153:16" pos:end="153:48">(<expr pos:start="153:17" pos:end="153:47"><call pos:start="153:17" pos:end="153:43"><name pos:start="153:17" pos:end="153:32">ff_alloc_picture</name><argument_list pos:start="153:33" pos:end="153:43">(<argument pos:start="153:34" pos:end="153:34"><expr pos:start="153:34" pos:end="153:34"><name pos:start="153:34" pos:end="153:34">s</name></expr></argument>, <argument pos:start="153:37" pos:end="153:39"><expr pos:start="153:37" pos:end="153:39"><name pos:start="153:37" pos:end="153:39">pic</name></expr></argument>, <argument pos:start="153:42" pos:end="153:42"><expr pos:start="153:42" pos:end="153:42"><literal type="number" pos:start="153:42" pos:end="153:42">0</literal></expr></argument>)</argument_list></call> <operator pos:start="153:45" pos:end="153:45">&lt;</operator> <literal type="number" pos:start="153:47" pos:end="153:47">0</literal></expr>)</condition> <block pos:start="153:50" pos:end="157:13">{<block_content pos:start="155:17" pos:end="155:26">

                <return pos:start="155:17" pos:end="155:26">return <expr pos:start="155:24" pos:end="155:25"><operator pos:start="155:24" pos:end="155:24">-</operator><literal type="number" pos:start="155:25" pos:end="155:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="161:13" pos:end="253:13"><if pos:start="161:13" pos:end="169:13">if <condition pos:start="161:16" pos:end="165:68">(<expr pos:start="161:17" pos:end="165:67"><name pos:start="161:17" pos:end="161:30"><name pos:start="161:17" pos:end="161:19">pic</name><operator pos:start="161:20" pos:end="161:21">-&gt;</operator><name pos:start="161:22" pos:end="161:22">f</name><operator pos:start="161:23" pos:end="161:23">.</operator><name pos:start="161:24" pos:end="161:27">data</name><index pos:start="161:28" pos:end="161:30">[<expr pos:start="161:29" pos:end="161:29"><literal type="number" pos:start="161:29" pos:end="161:29">0</literal></expr>]</index></name> <operator pos:start="161:32" pos:end="161:32">+</operator> <name pos:start="161:34" pos:end="161:47">INPLACE_OFFSET</name> <operator pos:start="161:49" pos:end="161:50">==</operator> <name pos:start="161:52" pos:end="161:67"><name pos:start="161:52" pos:end="161:58">pic_arg</name><operator pos:start="161:59" pos:end="161:60">-&gt;</operator><name pos:start="161:61" pos:end="161:64">data</name><index pos:start="161:65" pos:end="161:67">[<expr pos:start="161:66" pos:end="161:66"><literal type="number" pos:start="161:66" pos:end="161:66">0</literal></expr>]</index></name> <operator pos:start="161:69" pos:end="161:70">&amp;&amp;</operator>

                <name pos:start="163:17" pos:end="163:30"><name pos:start="163:17" pos:end="163:19">pic</name><operator pos:start="163:20" pos:end="163:21">-&gt;</operator><name pos:start="163:22" pos:end="163:22">f</name><operator pos:start="163:23" pos:end="163:23">.</operator><name pos:start="163:24" pos:end="163:27">data</name><index pos:start="163:28" pos:end="163:30">[<expr pos:start="163:29" pos:end="163:29"><literal type="number" pos:start="163:29" pos:end="163:29">1</literal></expr>]</index></name> <operator pos:start="163:32" pos:end="163:32">+</operator> <name pos:start="163:34" pos:end="163:47">INPLACE_OFFSET</name> <operator pos:start="163:49" pos:end="163:50">==</operator> <name pos:start="163:52" pos:end="163:67"><name pos:start="163:52" pos:end="163:58">pic_arg</name><operator pos:start="163:59" pos:end="163:60">-&gt;</operator><name pos:start="163:61" pos:end="163:64">data</name><index pos:start="163:65" pos:end="163:67">[<expr pos:start="163:66" pos:end="163:66"><literal type="number" pos:start="163:66" pos:end="163:66">1</literal></expr>]</index></name> <operator pos:start="163:69" pos:end="163:70">&amp;&amp;</operator>

                <name pos:start="165:17" pos:end="165:30"><name pos:start="165:17" pos:end="165:19">pic</name><operator pos:start="165:20" pos:end="165:21">-&gt;</operator><name pos:start="165:22" pos:end="165:22">f</name><operator pos:start="165:23" pos:end="165:23">.</operator><name pos:start="165:24" pos:end="165:27">data</name><index pos:start="165:28" pos:end="165:30">[<expr pos:start="165:29" pos:end="165:29"><literal type="number" pos:start="165:29" pos:end="165:29">2</literal></expr>]</index></name> <operator pos:start="165:32" pos:end="165:32">+</operator> <name pos:start="165:34" pos:end="165:47">INPLACE_OFFSET</name> <operator pos:start="165:49" pos:end="165:50">==</operator> <name pos:start="165:52" pos:end="165:67"><name pos:start="165:52" pos:end="165:58">pic_arg</name><operator pos:start="165:59" pos:end="165:60">-&gt;</operator><name pos:start="165:61" pos:end="165:64">data</name><index pos:start="165:65" pos:end="165:67">[<expr pos:start="165:66" pos:end="165:66"><literal type="number" pos:start="165:66" pos:end="165:66">2</literal></expr>]</index></name></expr>)</condition> <block pos:start="165:70" pos:end="169:13">{<block_content>

                <comment type="line" pos:start="167:17" pos:end="167:24">// empty</comment>

            </block_content>}</block></if> <else pos:start="169:15" pos:end="253:13">else <block pos:start="169:20" pos:end="253:13">{<block_content pos:start="171:17" pos:end="251:17">

                <decl_stmt pos:start="171:17" pos:end="171:51"><decl pos:start="171:17" pos:end="171:34"><type pos:start="171:17" pos:end="171:19"><name pos:start="171:17" pos:end="171:19">int</name></type> <name pos:start="171:21" pos:end="171:34">h_chroma_shift</name></decl>, <decl pos:start="171:37" pos:end="171:50"><type ref="prev" pos:start="171:17" pos:end="171:19"/><name pos:start="171:37" pos:end="171:50">v_chroma_shift</name></decl>;</decl_stmt>

                <expr_stmt pos:start="173:17" pos:end="177:66"><expr pos:start="173:17" pos:end="177:65"><call pos:start="173:17" pos:end="177:65"><name pos:start="173:17" pos:end="173:48">av_pix_fmt_get_chroma_sub_sample</name><argument_list pos:start="173:49" pos:end="177:65">(<argument pos:start="173:50" pos:end="173:66"><expr pos:start="173:50" pos:end="173:66"><name pos:start="173:50" pos:end="173:66"><name pos:start="173:50" pos:end="173:50">s</name><operator pos:start="173:51" pos:end="173:52">-&gt;</operator><name pos:start="173:53" pos:end="173:57">avctx</name><operator pos:start="173:58" pos:end="173:59">-&gt;</operator><name pos:start="173:60" pos:end="173:66">pix_fmt</name></name></expr></argument>,

                                                 <argument pos:start="175:50" pos:end="175:64"><expr pos:start="175:50" pos:end="175:64"><operator pos:start="175:50" pos:end="175:50">&amp;</operator><name pos:start="175:51" pos:end="175:64">h_chroma_shift</name></expr></argument>,

                                                 <argument pos:start="177:50" pos:end="177:64"><expr pos:start="177:50" pos:end="177:64"><operator pos:start="177:50" pos:end="177:50">&amp;</operator><name pos:start="177:51" pos:end="177:64">v_chroma_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <for pos:start="181:17" pos:end="251:17">for <control pos:start="181:21" pos:end="181:39">(<init pos:start="181:22" pos:end="181:27"><expr pos:start="181:22" pos:end="181:26"><name pos:start="181:22" pos:end="181:22">i</name> <operator pos:start="181:24" pos:end="181:24">=</operator> <literal type="number" pos:start="181:26" pos:end="181:26">0</literal></expr>;</init> <condition pos:start="181:29" pos:end="181:34"><expr pos:start="181:29" pos:end="181:33"><name pos:start="181:29" pos:end="181:29">i</name> <operator pos:start="181:31" pos:end="181:31">&lt;</operator> <literal type="number" pos:start="181:33" pos:end="181:33">3</literal></expr>;</condition> <incr pos:start="181:36" pos:end="181:38"><expr pos:start="181:36" pos:end="181:38"><name pos:start="181:36" pos:end="181:36">i</name><operator pos:start="181:37" pos:end="181:38">++</operator></expr></incr>)</control> <block pos:start="181:41" pos:end="251:17">{<block_content pos:start="183:21" pos:end="249:21">

                    <decl_stmt pos:start="183:21" pos:end="183:58"><decl pos:start="183:21" pos:end="183:57"><type pos:start="183:21" pos:end="183:23"><name pos:start="183:21" pos:end="183:23">int</name></type> <name pos:start="183:25" pos:end="183:34">src_stride</name> <init pos:start="183:36" pos:end="183:57">= <expr pos:start="183:38" pos:end="183:57"><name pos:start="183:38" pos:end="183:57"><name pos:start="183:38" pos:end="183:44">pic_arg</name><operator pos:start="183:45" pos:end="183:46">-&gt;</operator><name pos:start="183:47" pos:end="183:54">linesize</name><index pos:start="183:55" pos:end="183:57">[<expr pos:start="183:56" pos:end="183:56"><name pos:start="183:56" pos:end="183:56">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="185:21" pos:end="185:69"><decl pos:start="185:21" pos:end="185:68"><type pos:start="185:21" pos:end="185:23"><name pos:start="185:21" pos:end="185:23">int</name></type> <name pos:start="185:25" pos:end="185:34">dst_stride</name> <init pos:start="185:36" pos:end="185:68">= <expr pos:start="185:38" pos:end="185:68"><ternary pos:start="185:38" pos:end="185:68"><condition pos:start="185:38" pos:end="185:40"><expr pos:start="185:38" pos:end="185:38"><name pos:start="185:38" pos:end="185:38">i</name></expr> ?</condition><then pos:start="185:42" pos:end="185:54"> <expr pos:start="185:42" pos:end="185:54"><name pos:start="185:42" pos:end="185:54"><name pos:start="185:42" pos:end="185:42">s</name><operator pos:start="185:43" pos:end="185:44">-&gt;</operator><name pos:start="185:45" pos:end="185:54">uvlinesize</name></name></expr> </then><else pos:start="185:56" pos:end="185:68">: <expr pos:start="185:58" pos:end="185:68"><name pos:start="185:58" pos:end="185:68"><name pos:start="185:58" pos:end="185:58">s</name><operator pos:start="185:59" pos:end="185:60">-&gt;</operator><name pos:start="185:61" pos:end="185:68">linesize</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="187:21" pos:end="187:57"><decl pos:start="187:21" pos:end="187:56"><type pos:start="187:21" pos:end="187:23"><name pos:start="187:21" pos:end="187:23">int</name></type> <name pos:start="187:25" pos:end="187:31">h_shift</name> <init pos:start="187:33" pos:end="187:56">= <expr pos:start="187:35" pos:end="187:56"><ternary pos:start="187:35" pos:end="187:56"><condition pos:start="187:35" pos:end="187:37"><expr pos:start="187:35" pos:end="187:35"><name pos:start="187:35" pos:end="187:35">i</name></expr> ?</condition><then pos:start="187:39" pos:end="187:52"> <expr pos:start="187:39" pos:end="187:52"><name pos:start="187:39" pos:end="187:52">h_chroma_shift</name></expr> </then><else pos:start="187:54" pos:end="187:56">: <expr pos:start="187:56" pos:end="187:56"><literal type="number" pos:start="187:56" pos:end="187:56">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="189:21" pos:end="189:57"><decl pos:start="189:21" pos:end="189:56"><type pos:start="189:21" pos:end="189:23"><name pos:start="189:21" pos:end="189:23">int</name></type> <name pos:start="189:25" pos:end="189:31">v_shift</name> <init pos:start="189:33" pos:end="189:56">= <expr pos:start="189:35" pos:end="189:56"><ternary pos:start="189:35" pos:end="189:56"><condition pos:start="189:35" pos:end="189:37"><expr pos:start="189:35" pos:end="189:35"><name pos:start="189:35" pos:end="189:35">i</name></expr> ?</condition><then pos:start="189:39" pos:end="189:52"> <expr pos:start="189:39" pos:end="189:52"><name pos:start="189:39" pos:end="189:52">v_chroma_shift</name></expr> </then><else pos:start="189:54" pos:end="189:56">: <expr pos:start="189:56" pos:end="189:56"><literal type="number" pos:start="189:56" pos:end="189:56">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="191:21" pos:end="191:49"><decl pos:start="191:21" pos:end="191:48"><type pos:start="191:21" pos:end="191:23"><name pos:start="191:21" pos:end="191:23">int</name></type> <name pos:start="191:25" pos:end="191:25">w</name> <init pos:start="191:27" pos:end="191:48">= <expr pos:start="191:29" pos:end="191:48"><name pos:start="191:29" pos:end="191:36"><name pos:start="191:29" pos:end="191:29">s</name><operator pos:start="191:30" pos:end="191:31">-&gt;</operator><name pos:start="191:32" pos:end="191:36">width</name></name>  <operator pos:start="191:39" pos:end="191:40">&gt;&gt;</operator> <name pos:start="191:42" pos:end="191:48">h_shift</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="193:21" pos:end="193:49"><decl pos:start="193:21" pos:end="193:48"><type pos:start="193:21" pos:end="193:23"><name pos:start="193:21" pos:end="193:23">int</name></type> <name pos:start="193:25" pos:end="193:25">h</name> <init pos:start="193:27" pos:end="193:48">= <expr pos:start="193:29" pos:end="193:48"><name pos:start="193:29" pos:end="193:37"><name pos:start="193:29" pos:end="193:29">s</name><operator pos:start="193:30" pos:end="193:31">-&gt;</operator><name pos:start="193:32" pos:end="193:37">height</name></name> <operator pos:start="193:39" pos:end="193:40">&gt;&gt;</operator> <name pos:start="193:42" pos:end="193:48">v_shift</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="195:21" pos:end="195:52"><decl pos:start="195:21" pos:end="195:51"><type pos:start="195:21" pos:end="195:29"><name pos:start="195:21" pos:end="195:27">uint8_t</name> <modifier pos:start="195:29" pos:end="195:29">*</modifier></type><name pos:start="195:30" pos:end="195:32">src</name> <init pos:start="195:34" pos:end="195:51">= <expr pos:start="195:36" pos:end="195:51"><name pos:start="195:36" pos:end="195:51"><name pos:start="195:36" pos:end="195:42">pic_arg</name><operator pos:start="195:43" pos:end="195:44">-&gt;</operator><name pos:start="195:45" pos:end="195:48">data</name><index pos:start="195:49" pos:end="195:51">[<expr pos:start="195:50" pos:end="195:50"><name pos:start="195:50" pos:end="195:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="197:21" pos:end="197:50"><decl pos:start="197:21" pos:end="197:49"><type pos:start="197:21" pos:end="197:29"><name pos:start="197:21" pos:end="197:27">uint8_t</name> <modifier pos:start="197:29" pos:end="197:29">*</modifier></type><name pos:start="197:30" pos:end="197:32">dst</name> <init pos:start="197:34" pos:end="197:49">= <expr pos:start="197:36" pos:end="197:49"><name pos:start="197:36" pos:end="197:49"><name pos:start="197:36" pos:end="197:38">pic</name><operator pos:start="197:39" pos:end="197:40">-&gt;</operator><name pos:start="197:41" pos:end="197:41">f</name><operator pos:start="197:42" pos:end="197:42">.</operator><name pos:start="197:43" pos:end="197:46">data</name><index pos:start="197:47" pos:end="197:49">[<expr pos:start="197:48" pos:end="197:48"><name pos:start="197:48" pos:end="197:48">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="201:21" pos:end="205:21"><if pos:start="201:21" pos:end="205:21">if <condition pos:start="201:24" pos:end="201:99">(<expr pos:start="201:25" pos:end="201:98"><name pos:start="201:25" pos:end="201:35"><name pos:start="201:25" pos:end="201:25">s</name><operator pos:start="201:26" pos:end="201:27">-&gt;</operator><name pos:start="201:28" pos:end="201:35">codec_id</name></name> <operator pos:start="201:37" pos:end="201:38">==</operator> <name pos:start="201:40" pos:end="201:54">AV_CODEC_ID_AMV</name> <operator pos:start="201:56" pos:end="201:57">&amp;&amp;</operator> <operator pos:start="201:59" pos:end="201:59">!</operator><operator pos:start="201:60" pos:end="201:60">(</operator><name pos:start="201:61" pos:end="201:75"><name pos:start="201:61" pos:end="201:61">s</name><operator pos:start="201:62" pos:end="201:63">-&gt;</operator><name pos:start="201:64" pos:end="201:68">avctx</name><operator pos:start="201:69" pos:end="201:70">-&gt;</operator><name pos:start="201:71" pos:end="201:75">flags</name></name> <operator pos:start="201:77" pos:end="201:77">&amp;</operator> <name pos:start="201:79" pos:end="201:97">CODEC_FLAG_EMU_EDGE</name><operator pos:start="201:98" pos:end="201:98">)</operator></expr>)</condition> <block pos:start="201:101" pos:end="205:21">{<block_content pos:start="203:25" pos:end="203:64">

                        <expr_stmt pos:start="203:25" pos:end="203:64"><expr pos:start="203:25" pos:end="203:63"><name pos:start="203:25" pos:end="203:25">h</name> <operator pos:start="203:27" pos:end="203:27">=</operator> <operator pos:start="203:29" pos:end="203:29">(</operator><operator pos:start="203:30" pos:end="203:30">(</operator><name pos:start="203:31" pos:end="203:39"><name pos:start="203:31" pos:end="203:31">s</name><operator pos:start="203:32" pos:end="203:33">-&gt;</operator><name pos:start="203:34" pos:end="203:39">height</name></name> <operator pos:start="203:41" pos:end="203:41">+</operator> <literal type="number" pos:start="203:43" pos:end="203:44">15</literal><operator pos:start="203:45" pos:end="203:45">)</operator><operator pos:start="203:46" pos:end="203:46">/</operator><literal type="number" pos:start="203:47" pos:end="203:48">16</literal><operator pos:start="203:49" pos:end="203:49">*</operator><literal type="number" pos:start="203:50" pos:end="203:51">16</literal><operator pos:start="203:52" pos:end="203:52">)</operator> <operator pos:start="203:54" pos:end="203:55">&gt;&gt;</operator> <name pos:start="203:57" pos:end="203:63">v_shift</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>



                    <if_stmt pos:start="209:21" pos:end="211:46"><if pos:start="209:21" pos:end="211:46">if <condition pos:start="209:24" pos:end="209:50">(<expr pos:start="209:25" pos:end="209:49"><operator pos:start="209:25" pos:end="209:25">!</operator><name pos:start="209:26" pos:end="209:49"><name pos:start="209:26" pos:end="209:26">s</name><operator pos:start="209:27" pos:end="209:28">-&gt;</operator><name pos:start="209:29" pos:end="209:33">avctx</name><operator pos:start="209:34" pos:end="209:35">-&gt;</operator><name pos:start="209:36" pos:end="209:49">rc_buffer_size</name></name></expr>)</condition><block type="pseudo" pos:start="211:25" pos:end="211:46"><block_content pos:start="211:25" pos:end="211:46">

                        <expr_stmt pos:start="211:25" pos:end="211:46"><expr pos:start="211:25" pos:end="211:45"><name pos:start="211:25" pos:end="211:27">dst</name> <operator pos:start="211:29" pos:end="211:30">+=</operator> <name pos:start="211:32" pos:end="211:45">INPLACE_OFFSET</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <if_stmt pos:start="215:21" pos:end="235:21"><if pos:start="215:21" pos:end="217:57">if <condition pos:start="215:24" pos:end="215:49">(<expr pos:start="215:25" pos:end="215:48"><name pos:start="215:25" pos:end="215:34">src_stride</name> <operator pos:start="215:36" pos:end="215:37">==</operator> <name pos:start="215:39" pos:end="215:48">dst_stride</name></expr>)</condition><block type="pseudo" pos:start="217:25" pos:end="217:57"><block_content pos:start="217:25" pos:end="217:57">

                        <expr_stmt pos:start="217:25" pos:end="217:57"><expr pos:start="217:25" pos:end="217:56"><call pos:start="217:25" pos:end="217:56"><name pos:start="217:25" pos:end="217:30">memcpy</name><argument_list pos:start="217:31" pos:end="217:56">(<argument pos:start="217:32" pos:end="217:34"><expr pos:start="217:32" pos:end="217:34"><name pos:start="217:32" pos:end="217:34">dst</name></expr></argument>, <argument pos:start="217:37" pos:end="217:39"><expr pos:start="217:37" pos:end="217:39"><name pos:start="217:37" pos:end="217:39">src</name></expr></argument>, <argument pos:start="217:42" pos:end="217:55"><expr pos:start="217:42" pos:end="217:55"><name pos:start="217:42" pos:end="217:51">src_stride</name> <operator pos:start="217:53" pos:end="217:53">*</operator> <name pos:start="217:55" pos:end="217:55">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="219:21" pos:end="235:21">else <block pos:start="219:26" pos:end="235:21">{<block_content pos:start="221:25" pos:end="233:25">

                        <decl_stmt pos:start="221:25" pos:end="221:35"><decl pos:start="221:25" pos:end="221:34"><type pos:start="221:25" pos:end="221:27"><name pos:start="221:25" pos:end="221:27">int</name></type> <name pos:start="221:29" pos:end="221:30">h2</name> <init pos:start="221:32" pos:end="221:34">= <expr pos:start="221:34" pos:end="221:34"><name pos:start="221:34" pos:end="221:34">h</name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="223:25" pos:end="223:44"><decl pos:start="223:25" pos:end="223:43"><type pos:start="223:25" pos:end="223:33"><name pos:start="223:25" pos:end="223:31">uint8_t</name> <modifier pos:start="223:33" pos:end="223:33">*</modifier></type><name pos:start="223:34" pos:end="223:37">dst2</name> <init pos:start="223:39" pos:end="223:43">= <expr pos:start="223:41" pos:end="223:43"><name pos:start="223:41" pos:end="223:43">dst</name></expr></init></decl>;</decl_stmt>

                        <while pos:start="225:25" pos:end="233:25">while <condition pos:start="225:31" pos:end="225:36">(<expr pos:start="225:32" pos:end="225:35"><name pos:start="225:32" pos:end="225:33">h2</name><operator pos:start="225:34" pos:end="225:35">--</operator></expr>)</condition> <block pos:start="225:38" pos:end="233:25">{<block_content pos:start="227:29" pos:end="231:46">

                            <expr_stmt pos:start="227:29" pos:end="227:49"><expr pos:start="227:29" pos:end="227:48"><call pos:start="227:29" pos:end="227:48"><name pos:start="227:29" pos:end="227:34">memcpy</name><argument_list pos:start="227:35" pos:end="227:48">(<argument pos:start="227:36" pos:end="227:39"><expr pos:start="227:36" pos:end="227:39"><name pos:start="227:36" pos:end="227:39">dst2</name></expr></argument>, <argument pos:start="227:42" pos:end="227:44"><expr pos:start="227:42" pos:end="227:44"><name pos:start="227:42" pos:end="227:44">src</name></expr></argument>, <argument pos:start="227:47" pos:end="227:47"><expr pos:start="227:47" pos:end="227:47"><name pos:start="227:47" pos:end="227:47">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="229:29" pos:end="229:47"><expr pos:start="229:29" pos:end="229:46"><name pos:start="229:29" pos:end="229:32">dst2</name> <operator pos:start="229:34" pos:end="229:35">+=</operator> <name pos:start="229:37" pos:end="229:46">dst_stride</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="231:29" pos:end="231:46"><expr pos:start="231:29" pos:end="231:45"><name pos:start="231:29" pos:end="231:31">src</name> <operator pos:start="231:33" pos:end="231:34">+=</operator> <name pos:start="231:36" pos:end="231:45">src_stride</name></expr>;</expr_stmt>

                        </block_content>}</block></while>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="237:21" pos:end="249:21"><if pos:start="237:21" pos:end="249:21">if <condition pos:start="237:24" pos:end="237:60">(<expr pos:start="237:25" pos:end="237:59"><operator pos:start="237:25" pos:end="237:25">(</operator><name pos:start="237:26" pos:end="237:33"><name pos:start="237:26" pos:end="237:26">s</name><operator pos:start="237:27" pos:end="237:28">-&gt;</operator><name pos:start="237:29" pos:end="237:33">width</name></name> <operator pos:start="237:35" pos:end="237:35">&amp;</operator> <literal type="number" pos:start="237:37" pos:end="237:38">15</literal><operator pos:start="237:39" pos:end="237:39">)</operator> <operator pos:start="237:41" pos:end="237:42">||</operator> <operator pos:start="237:44" pos:end="237:44">(</operator><name pos:start="237:45" pos:end="237:53"><name pos:start="237:45" pos:end="237:45">s</name><operator pos:start="237:46" pos:end="237:47">-&gt;</operator><name pos:start="237:48" pos:end="237:53">height</name></name> <operator pos:start="237:55" pos:end="237:55">&amp;</operator> <literal type="number" pos:start="237:57" pos:end="237:58">15</literal><operator pos:start="237:59" pos:end="237:59">)</operator></expr>)</condition> <block pos:start="237:62" pos:end="249:21">{<block_content pos:start="239:25" pos:end="247:55">

                        <expr_stmt pos:start="239:25" pos:end="247:55"><expr pos:start="239:25" pos:end="247:54"><call pos:start="239:25" pos:end="247:54"><name pos:start="239:25" pos:end="239:41"><name pos:start="239:25" pos:end="239:25">s</name><operator pos:start="239:26" pos:end="239:27">-&gt;</operator><name pos:start="239:28" pos:end="239:30">dsp</name><operator pos:start="239:31" pos:end="239:31">.</operator><name pos:start="239:32" pos:end="239:41">draw_edges</name></name><argument_list pos:start="239:42" pos:end="247:54">(<argument pos:start="239:43" pos:end="239:45"><expr pos:start="239:43" pos:end="239:45"><name pos:start="239:43" pos:end="239:45">dst</name></expr></argument>, <argument pos:start="239:48" pos:end="239:57"><expr pos:start="239:48" pos:end="239:57"><name pos:start="239:48" pos:end="239:57">dst_stride</name></expr></argument>,

                                          <argument pos:start="241:43" pos:end="241:43"><expr pos:start="241:43" pos:end="241:43"><name pos:start="241:43" pos:end="241:43">w</name></expr></argument>, <argument pos:start="241:46" pos:end="241:46"><expr pos:start="241:46" pos:end="241:46"><name pos:start="241:46" pos:end="241:46">h</name></expr></argument>,

                                          <argument pos:start="243:43" pos:end="243:53"><expr pos:start="243:43" pos:end="243:53"><literal type="number" pos:start="243:43" pos:end="243:44">16</literal><operator pos:start="243:45" pos:end="243:46">&gt;&gt;</operator><name pos:start="243:47" pos:end="243:53">h_shift</name></expr></argument>,

                                          <argument pos:start="245:43" pos:end="245:53"><expr pos:start="245:43" pos:end="245:53"><literal type="number" pos:start="245:43" pos:end="245:44">16</literal><operator pos:start="245:45" pos:end="245:46">&gt;&gt;</operator><name pos:start="245:47" pos:end="245:53">v_shift</name></expr></argument>,

                                          <argument pos:start="247:43" pos:end="247:53"><expr pos:start="247:43" pos:end="247:53"><name pos:start="247:43" pos:end="247:53">EDGE_BOTTOM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:53"><expr pos:start="257:9" pos:end="257:52"><call pos:start="257:9" pos:end="257:52"><name pos:start="257:9" pos:end="257:31">copy_picture_attributes</name><argument_list pos:start="257:32" pos:end="257:52">(<argument pos:start="257:33" pos:end="257:33"><expr pos:start="257:33" pos:end="257:33"><name pos:start="257:33" pos:end="257:33">s</name></expr></argument>, <argument pos:start="257:36" pos:end="257:42"><expr pos:start="257:36" pos:end="257:42"><operator pos:start="257:36" pos:end="257:36">&amp;</operator><name pos:start="257:37" pos:end="257:42"><name pos:start="257:37" pos:end="257:39">pic</name><operator pos:start="257:40" pos:end="257:41">-&gt;</operator><name pos:start="257:42" pos:end="257:42">f</name></name></expr></argument>, <argument pos:start="257:45" pos:end="257:51"><expr pos:start="257:45" pos:end="257:51"><name pos:start="257:45" pos:end="257:51">pic_arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:63"><expr pos:start="259:9" pos:end="259:62"><name pos:start="259:9" pos:end="259:37"><name pos:start="259:9" pos:end="259:11">pic</name><operator pos:start="259:12" pos:end="259:13">-&gt;</operator><name pos:start="259:14" pos:end="259:14">f</name><operator pos:start="259:15" pos:end="259:15">.</operator><name pos:start="259:16" pos:end="259:37">display_picture_number</name></name> <operator pos:start="259:39" pos:end="259:39">=</operator> <name pos:start="259:41" pos:end="259:62">display_picture_number</name></expr>;</expr_stmt>

        <expr_stmt pos:start="261:9" pos:end="261:25"><expr pos:start="261:9" pos:end="261:24"><name pos:start="261:9" pos:end="261:18"><name pos:start="261:9" pos:end="261:11">pic</name><operator pos:start="261:12" pos:end="261:13">-&gt;</operator><name pos:start="261:14" pos:end="261:14">f</name><operator pos:start="261:15" pos:end="261:15">.</operator><name pos:start="261:16" pos:end="261:18">pts</name></name> <operator pos:start="261:20" pos:end="261:20">=</operator> <name pos:start="261:22" pos:end="261:24">pts</name></expr>;</expr_stmt> <comment type="line" pos:start="261:27" pos:end="261:73">// we set this here to avoid modifiying pic_arg</comment>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="267:5" pos:end="267:30">/* shift buffer entries */</comment>

    <for pos:start="269:5" pos:end="271:54">for <control pos:start="269:9" pos:end="269:69">(<init pos:start="269:10" pos:end="269:15"><expr pos:start="269:10" pos:end="269:14"><name pos:start="269:10" pos:end="269:10">i</name> <operator pos:start="269:12" pos:end="269:12">=</operator> <literal type="number" pos:start="269:14" pos:end="269:14">1</literal></expr>;</init> <condition pos:start="269:17" pos:end="269:64"><expr pos:start="269:17" pos:end="269:37"><name pos:start="269:17" pos:end="269:17">i</name> <operator pos:start="269:19" pos:end="269:19">&lt;</operator> <name pos:start="269:21" pos:end="269:37">MAX_PICTURE_COUNT</name></expr> <comment type="block" pos:start="269:39" pos:end="269:63">/*s-&gt;encoding_delay + 1*/</comment>;</condition> <incr pos:start="269:66" pos:end="269:68"><expr pos:start="269:66" pos:end="269:68"><name pos:start="269:66" pos:end="269:66">i</name><operator pos:start="269:67" pos:end="269:68">++</operator></expr></incr>)</control><block type="pseudo" pos:start="271:9" pos:end="271:54"><block_content pos:start="271:9" pos:end="271:54">

        <expr_stmt pos:start="271:9" pos:end="271:54"><expr pos:start="271:9" pos:end="271:53"><name pos:start="271:9" pos:end="271:31"><name pos:start="271:9" pos:end="271:9">s</name><operator pos:start="271:10" pos:end="271:11">-&gt;</operator><name pos:start="271:12" pos:end="271:24">input_picture</name><index pos:start="271:25" pos:end="271:31">[<expr pos:start="271:26" pos:end="271:30"><name pos:start="271:26" pos:end="271:26">i</name> <operator pos:start="271:28" pos:end="271:28">-</operator> <literal type="number" pos:start="271:30" pos:end="271:30">1</literal></expr>]</index></name> <operator pos:start="271:33" pos:end="271:33">=</operator> <name pos:start="271:35" pos:end="271:53"><name pos:start="271:35" pos:end="271:35">s</name><operator pos:start="271:36" pos:end="271:37">-&gt;</operator><name pos:start="271:38" pos:end="271:50">input_picture</name><index pos:start="271:51" pos:end="271:53">[<expr pos:start="271:52" pos:end="271:52"><name pos:start="271:52" pos:end="271:52">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="275:5" pos:end="275:54"><expr pos:start="275:5" pos:end="275:53"><name pos:start="275:5" pos:end="275:36"><name pos:start="275:5" pos:end="275:5">s</name><operator pos:start="275:6" pos:end="275:7">-&gt;</operator><name pos:start="275:8" pos:end="275:20">input_picture</name><index pos:start="275:21" pos:end="275:36">[<expr pos:start="275:22" pos:end="275:35"><name pos:start="275:22" pos:end="275:35">encoding_delay</name></expr>]</index></name> <operator pos:start="275:38" pos:end="275:38">=</operator> <operator pos:start="275:40" pos:end="275:40">(</operator><name pos:start="275:41" pos:end="275:47">Picture</name><operator pos:start="275:48" pos:end="275:48">*</operator><operator pos:start="275:49" pos:end="275:49">)</operator> <name pos:start="275:51" pos:end="275:53">pic</name></expr>;</expr_stmt>



    <return pos:start="279:5" pos:end="279:13">return <expr pos:start="279:12" pos:end="279:12"><literal type="number" pos:start="279:12" pos:end="279:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
