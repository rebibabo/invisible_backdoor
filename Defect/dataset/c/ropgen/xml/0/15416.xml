<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15416.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">gic_set_irq</name><parameter_list pos:start="1:24" pos:end="1:57">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:45"><decl pos:start="1:39" pos:end="1:45"><type pos:start="1:39" pos:end="1:45"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:45">irq</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:56"><decl pos:start="1:48" pos:end="1:56"><type pos:start="1:48" pos:end="1:56"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:56">level</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:18">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">gic_state</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:38">= <expr pos:start="5:20" pos:end="5:38"><operator pos:start="5:20" pos:end="5:20">(</operator><name pos:start="5:21" pos:end="5:29">gic_state</name> <operator pos:start="5:31" pos:end="5:31">*</operator><operator pos:start="5:32" pos:end="5:32">)</operator><name pos:start="5:33" pos:end="5:38">opaque</name></expr></init></decl>;</decl_stmt>

    <comment type="block" pos:start="7:5" pos:end="7:66">/* The first external input line is internal interrupt 32.  */</comment>

    <expr_stmt pos:start="9:5" pos:end="9:24"><expr pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:7">irq</name> <operator pos:start="9:9" pos:end="9:10">+=</operator> <name pos:start="9:12" pos:end="9:23">GIC_INTERNAL</name></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="13:15"><if pos:start="11:5" pos:end="13:15">if <condition pos:start="11:8" pos:end="11:51">(<expr pos:start="11:9" pos:end="11:50"><name pos:start="11:9" pos:end="11:13">level</name> <operator pos:start="11:15" pos:end="11:16">==</operator> <call pos:start="11:18" pos:end="11:50"><name pos:start="11:18" pos:end="11:31">GIC_TEST_LEVEL</name><argument_list pos:start="11:32" pos:end="11:50">(<argument pos:start="11:33" pos:end="11:35"><expr pos:start="11:33" pos:end="11:35"><name pos:start="11:33" pos:end="11:35">irq</name></expr></argument>, <argument pos:start="11:38" pos:end="11:49"><expr pos:start="11:38" pos:end="11:49"><name pos:start="11:38" pos:end="11:49">ALL_CPU_MASK</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="33:5"><if pos:start="17:5" pos:end="29:5">if <condition pos:start="17:8" pos:end="17:14">(<expr pos:start="17:9" pos:end="17:13"><name pos:start="17:9" pos:end="17:13">level</name></expr>)</condition> <block pos:start="17:16" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:9">

        <expr_stmt pos:start="19:9" pos:end="19:41"><expr pos:start="19:9" pos:end="19:40"><call pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:21">GIC_SET_LEVEL</name><argument_list pos:start="19:22" pos:end="19:40">(<argument pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:25">irq</name></expr></argument>, <argument pos:start="19:28" pos:end="19:39"><expr pos:start="19:28" pos:end="19:39"><name pos:start="19:28" pos:end="19:39">ALL_CPU_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:73">(<expr pos:start="21:13" pos:end="21:72"><call pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:28">GIC_TEST_TRIGGER</name><argument_list pos:start="21:29" pos:end="21:33">(<argument pos:start="21:30" pos:end="21:32"><expr pos:start="21:30" pos:end="21:32"><name pos:start="21:30" pos:end="21:32">irq</name></expr></argument>)</argument_list></call> <operator pos:start="21:35" pos:end="21:36">||</operator> <call pos:start="21:38" pos:end="21:72"><name pos:start="21:38" pos:end="21:53">GIC_TEST_ENABLED</name><argument_list pos:start="21:54" pos:end="21:72">(<argument pos:start="21:55" pos:end="21:57"><expr pos:start="21:55" pos:end="21:57"><name pos:start="21:55" pos:end="21:57">irq</name></expr></argument>, <argument pos:start="21:60" pos:end="21:71"><expr pos:start="21:60" pos:end="21:71"><name pos:start="21:60" pos:end="21:71">ALL_CPU_MASK</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:75" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:50">

            <expr_stmt pos:start="23:13" pos:end="23:70"><expr pos:start="23:13" pos:end="23:69"><call pos:start="23:13" pos:end="23:69"><name pos:start="23:13" pos:end="23:19">DPRINTF</name><argument_list pos:start="23:20" pos:end="23:69">(<argument pos:start="23:21" pos:end="23:46"><expr pos:start="23:21" pos:end="23:46"><literal type="string" pos:start="23:21" pos:end="23:46">"Set %d pending mask %x\n"</literal></expr></argument>, <argument pos:start="23:49" pos:end="23:51"><expr pos:start="23:49" pos:end="23:51"><name pos:start="23:49" pos:end="23:51">irq</name></expr></argument>, <argument pos:start="23:54" pos:end="23:68"><expr pos:start="23:54" pos:end="23:68"><call pos:start="23:54" pos:end="23:68"><name pos:start="23:54" pos:end="23:63">GIC_TARGET</name><argument_list pos:start="23:64" pos:end="23:68">(<argument pos:start="23:65" pos:end="23:67"><expr pos:start="23:65" pos:end="23:67"><name pos:start="23:65" pos:end="23:67">irq</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:50"><expr pos:start="25:13" pos:end="25:49"><call pos:start="25:13" pos:end="25:49"><name pos:start="25:13" pos:end="25:27">GIC_SET_PENDING</name><argument_list pos:start="25:28" pos:end="25:49">(<argument pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:31">irq</name></expr></argument>, <argument pos:start="25:34" pos:end="25:48"><expr pos:start="25:34" pos:end="25:48"><call pos:start="25:34" pos:end="25:48"><name pos:start="25:34" pos:end="25:43">GIC_TARGET</name><argument_list pos:start="25:44" pos:end="25:48">(<argument pos:start="25:45" pos:end="25:47"><expr pos:start="25:45" pos:end="25:47"><name pos:start="25:45" pos:end="25:47">irq</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="33:5">else <block pos:start="29:12" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:43">

        <expr_stmt pos:start="31:9" pos:end="31:43"><expr pos:start="31:9" pos:end="31:42"><call pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:23">GIC_CLEAR_LEVEL</name><argument_list pos:start="31:24" pos:end="31:42">(<argument pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:27">irq</name></expr></argument>, <argument pos:start="31:30" pos:end="31:41"><expr pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:41">ALL_CPU_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:18"><expr pos:start="35:5" pos:end="35:17"><call pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:14">gic_update</name><argument_list pos:start="35:15" pos:end="35:17">(<argument pos:start="35:16" pos:end="35:16"><expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
