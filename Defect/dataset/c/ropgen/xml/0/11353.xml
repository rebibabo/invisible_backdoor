<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11353.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">filter_packet</name><parameter_list pos:start="1:25" pos:end="3:85">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:38">log_ctx</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:48">AVPacket</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">pkt</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:49"><decl pos:start="3:26" pos:end="3:49"><type pos:start="3:26" pos:end="3:49"><name pos:start="3:26" pos:end="3:40">AVFormatContext</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:49">fmt_ctx</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:84"><decl pos:start="3:52" pos:end="3:84"><type pos:start="3:52" pos:end="3:84"><name pos:start="3:52" pos:end="3:75">AVBitStreamFilterContext</name> <modifier pos:start="3:77" pos:end="3:77">*</modifier></type><name pos:start="3:78" pos:end="3:84">bsf_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:15">

    <decl_stmt pos:start="7:5" pos:end="7:73"><decl pos:start="7:5" pos:end="7:72"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:27">enc_ctx</name> <init pos:start="7:29" pos:end="7:72">= <expr pos:start="7:31" pos:end="7:72"><name pos:start="7:31" pos:end="7:65"><name pos:start="7:31" pos:end="7:37">fmt_ctx</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:46">streams</name><index pos:start="7:47" pos:end="7:65">[<expr pos:start="7:48" pos:end="7:64"><name pos:start="7:48" pos:end="7:64"><name pos:start="7:48" pos:end="7:50">pkt</name><operator pos:start="7:51" pos:end="7:52">-&gt;</operator><name pos:start="7:53" pos:end="7:64">stream_index</name></name></expr>]</index></name><operator pos:start="7:66" pos:end="7:67">-&gt;</operator><name pos:start="7:68" pos:end="7:72">codec</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <while pos:start="13:5" pos:end="69:5">while <condition pos:start="13:11" pos:end="13:19">(<expr pos:start="13:12" pos:end="13:18"><name pos:start="13:12" pos:end="13:18">bsf_ctx</name></expr>)</condition> <block pos:start="13:21" pos:end="69:5">{<block_content pos:start="15:9" pos:end="67:32">

        <decl_stmt pos:start="15:9" pos:end="15:32"><decl pos:start="15:9" pos:end="15:31"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">AVPacket</name></type> <name pos:start="15:18" pos:end="15:24">new_pkt</name> <init pos:start="15:26" pos:end="15:31">= <expr pos:start="15:28" pos:end="15:31"><operator pos:start="15:28" pos:end="15:28">*</operator><name pos:start="15:29" pos:end="15:31">pkt</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="17:9" pos:end="23:75"><expr pos:start="17:9" pos:end="23:74"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="23:74"><name pos:start="17:15" pos:end="17:40">av_bitstream_filter_filter</name><argument_list pos:start="17:41" pos:end="23:74">(<argument pos:start="17:42" pos:end="17:48"><expr pos:start="17:42" pos:end="17:48"><name pos:start="17:42" pos:end="17:48">bsf_ctx</name></expr></argument>, <argument pos:start="17:51" pos:end="17:57"><expr pos:start="17:51" pos:end="17:57"><name pos:start="17:51" pos:end="17:57">enc_ctx</name></expr></argument>, <argument pos:start="17:60" pos:end="17:63"><expr pos:start="17:60" pos:end="17:63"><name pos:start="17:60" pos:end="17:63">NULL</name></expr></argument>,

                                             <argument pos:start="19:46" pos:end="19:58"><expr pos:start="19:46" pos:end="19:58"><operator pos:start="19:46" pos:end="19:46">&amp;</operator><name pos:start="19:47" pos:end="19:58"><name pos:start="19:47" pos:end="19:53">new_pkt</name><operator pos:start="19:54" pos:end="19:54">.</operator><name pos:start="19:55" pos:end="19:58">data</name></name></expr></argument>, <argument pos:start="19:61" pos:end="19:73"><expr pos:start="19:61" pos:end="19:73"><operator pos:start="19:61" pos:end="19:61">&amp;</operator><name pos:start="19:62" pos:end="19:73"><name pos:start="19:62" pos:end="19:68">new_pkt</name><operator pos:start="19:69" pos:end="19:69">.</operator><name pos:start="19:70" pos:end="19:73">size</name></name></expr></argument>,

                                             <argument pos:start="21:46" pos:end="21:54"><expr pos:start="21:46" pos:end="21:54"><name pos:start="21:46" pos:end="21:54"><name pos:start="21:46" pos:end="21:48">pkt</name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:54">data</name></name></expr></argument>, <argument pos:start="21:57" pos:end="21:65"><expr pos:start="21:57" pos:end="21:65"><name pos:start="21:57" pos:end="21:65"><name pos:start="21:57" pos:end="21:59">pkt</name><operator pos:start="21:60" pos:end="21:61">-&gt;</operator><name pos:start="21:62" pos:end="21:65">size</name></name></expr></argument>,

                                             <argument pos:start="23:46" pos:end="23:73"><expr pos:start="23:46" pos:end="23:73"><name pos:start="23:46" pos:end="23:55"><name pos:start="23:46" pos:end="23:48">pkt</name><operator pos:start="23:49" pos:end="23:50">-&gt;</operator><name pos:start="23:51" pos:end="23:55">flags</name></name> <operator pos:start="23:57" pos:end="23:57">&amp;</operator> <name pos:start="23:59" pos:end="23:73">AV_PKT_FLAG_KEY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="33:9"><if pos:start="25:9" pos:end="33:9">if <condition pos:start="25:12" pos:end="25:70">(<expr pos:start="25:13" pos:end="25:69"><name pos:start="25:13" pos:end="25:15">ret</name> <operator pos:start="25:17" pos:end="25:18">==</operator> <literal type="number" pos:start="25:20" pos:end="25:20">0</literal> <operator pos:start="25:22" pos:end="25:23">&amp;&amp;</operator> <name pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:31">new_pkt</name><operator pos:start="25:32" pos:end="25:32">.</operator><name pos:start="25:33" pos:end="25:36">data</name></name> <operator pos:start="25:38" pos:end="25:39">!=</operator> <name pos:start="25:41" pos:end="25:49"><name pos:start="25:41" pos:end="25:43">pkt</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:49">data</name></name> <operator pos:start="25:51" pos:end="25:52">&amp;&amp;</operator> <name pos:start="25:54" pos:end="25:69"><name pos:start="25:54" pos:end="25:60">new_pkt</name><operator pos:start="25:61" pos:end="25:61">.</operator><name pos:start="25:62" pos:end="25:69">destruct</name></name></expr>)</condition> <block pos:start="25:72" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:20">

            <if_stmt pos:start="27:13" pos:end="29:22"><if pos:start="27:13" pos:end="29:22">if <condition pos:start="27:16" pos:end="27:58">(<expr pos:start="27:17" pos:end="27:57"><operator pos:start="27:17" pos:end="27:17">(</operator><name pos:start="27:18" pos:end="27:20">ret</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <call pos:start="27:24" pos:end="27:52"><name pos:start="27:24" pos:end="27:37">av_copy_packet</name><argument_list pos:start="27:38" pos:end="27:52">(<argument pos:start="27:39" pos:end="27:46"><expr pos:start="27:39" pos:end="27:46"><operator pos:start="27:39" pos:end="27:39">&amp;</operator><name pos:start="27:40" pos:end="27:46">new_pkt</name></expr></argument>, <argument pos:start="27:49" pos:end="27:51"><expr pos:start="27:49" pos:end="27:51"><name pos:start="27:49" pos:end="27:51">pkt</name></expr></argument>)</argument_list></call><operator pos:start="27:53" pos:end="27:53">)</operator> <operator pos:start="27:55" pos:end="27:55">&lt;</operator> <literal type="number" pos:start="27:57" pos:end="27:57">0</literal></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:22"><block_content pos:start="29:17" pos:end="29:22">

                <break pos:start="29:17" pos:end="29:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:20"><expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <literal type="number" pos:start="31:19" pos:end="31:19">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="37:9" pos:end="49:9"><if pos:start="37:9" pos:end="49:9">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">&gt;</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition> <block pos:start="37:22" pos:end="49:9">{<block_content pos:start="39:13" pos:end="47:22">

            <expr_stmt pos:start="39:13" pos:end="39:32"><expr pos:start="39:13" pos:end="39:31"><call pos:start="39:13" pos:end="39:31"><name pos:start="39:13" pos:end="39:26">av_free_packet</name><argument_list pos:start="39:27" pos:end="39:31">(<argument pos:start="39:28" pos:end="39:30"><expr pos:start="39:28" pos:end="39:30"><name pos:start="39:28" pos:end="39:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="43:76"><expr pos:start="41:13" pos:end="43:75"><name pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:19">new_pkt</name><operator pos:start="41:20" pos:end="41:20">.</operator><name pos:start="41:21" pos:end="41:23">buf</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <call pos:start="41:27" pos:end="43:75"><name pos:start="41:27" pos:end="41:42">av_buffer_create</name><argument_list pos:start="41:43" pos:end="43:75">(<argument pos:start="41:44" pos:end="41:55"><expr pos:start="41:44" pos:end="41:55"><name pos:start="41:44" pos:end="41:55"><name pos:start="41:44" pos:end="41:50">new_pkt</name><operator pos:start="41:51" pos:end="41:51">.</operator><name pos:start="41:52" pos:end="41:55">data</name></name></expr></argument>, <argument pos:start="41:58" pos:end="41:69"><expr pos:start="41:58" pos:end="41:69"><name pos:start="41:58" pos:end="41:69"><name pos:start="41:58" pos:end="41:64">new_pkt</name><operator pos:start="41:65" pos:end="41:65">.</operator><name pos:start="41:66" pos:end="41:69">size</name></name></expr></argument>,

                                           <argument pos:start="43:44" pos:end="43:65"><expr pos:start="43:44" pos:end="43:65"><name pos:start="43:44" pos:end="43:65">av_buffer_default_free</name></expr></argument>, <argument pos:start="43:68" pos:end="43:71"><expr pos:start="43:68" pos:end="43:71"><name pos:start="43:68" pos:end="43:71">NULL</name></expr></argument>, <argument pos:start="43:74" pos:end="43:74"><expr pos:start="43:74" pos:end="43:74"><literal type="number" pos:start="43:74" pos:end="43:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="47:22"><if pos:start="45:13" pos:end="47:22">if <condition pos:start="45:16" pos:end="45:29">(<expr pos:start="45:17" pos:end="45:28"><operator pos:start="45:17" pos:end="45:17">!</operator><name pos:start="45:18" pos:end="45:28"><name pos:start="45:18" pos:end="45:24">new_pkt</name><operator pos:start="45:25" pos:end="45:25">.</operator><name pos:start="45:26" pos:end="45:28">buf</name></name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:22"><block_content pos:start="47:17" pos:end="47:22">

                <break pos:start="47:17" pos:end="47:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="51:9" pos:end="61:9"><if pos:start="51:9" pos:end="61:9">if <condition pos:start="51:12" pos:end="51:20">(<expr pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:15">ret</name> <operator pos:start="51:17" pos:end="51:17">&lt;</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>)</condition> <block pos:start="51:22" pos:end="61:9">{<block_content pos:start="53:13" pos:end="59:53">

            <expr_stmt pos:start="53:13" pos:end="59:53"><expr pos:start="53:13" pos:end="59:52"><call pos:start="53:13" pos:end="59:52"><name pos:start="53:13" pos:end="53:18">av_log</name><argument_list pos:start="53:19" pos:end="59:52">(<argument pos:start="53:20" pos:end="53:26"><expr pos:start="53:20" pos:end="53:26"><name pos:start="53:20" pos:end="53:26">log_ctx</name></expr></argument>, <argument pos:start="53:29" pos:end="53:40"><expr pos:start="53:29" pos:end="53:40"><name pos:start="53:29" pos:end="53:40">AV_LOG_ERROR</name></expr></argument>,

                <argument pos:start="55:17" pos:end="55:102"><expr pos:start="55:17" pos:end="55:102"><literal type="string" pos:start="55:17" pos:end="55:102">"Failed to filter bitstream with filter %s for stream %d in file '%s' with codec %s\n"</literal></expr></argument>,

                <argument pos:start="57:17" pos:end="57:37"><expr pos:start="57:17" pos:end="57:37"><name pos:start="57:17" pos:end="57:37"><name pos:start="57:17" pos:end="57:23">bsf_ctx</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:31">filter</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:37">name</name></name></expr></argument>, <argument pos:start="57:40" pos:end="57:56"><expr pos:start="57:40" pos:end="57:56"><name pos:start="57:40" pos:end="57:56"><name pos:start="57:40" pos:end="57:42">pkt</name><operator pos:start="57:43" pos:end="57:44">-&gt;</operator><name pos:start="57:45" pos:end="57:56">stream_index</name></name></expr></argument>, <argument pos:start="57:59" pos:end="57:75"><expr pos:start="57:59" pos:end="57:75"><name pos:start="57:59" pos:end="57:75"><name pos:start="57:59" pos:end="57:65">fmt_ctx</name><operator pos:start="57:66" pos:end="57:67">-&gt;</operator><name pos:start="57:68" pos:end="57:75">filename</name></name></expr></argument>,

                <argument pos:start="59:17" pos:end="59:51"><expr pos:start="59:17" pos:end="59:51"><call pos:start="59:17" pos:end="59:51"><name pos:start="59:17" pos:end="59:32">avcodec_get_name</name><argument_list pos:start="59:33" pos:end="59:51">(<argument pos:start="59:34" pos:end="59:50"><expr pos:start="59:34" pos:end="59:50"><name pos:start="59:34" pos:end="59:50"><name pos:start="59:34" pos:end="59:40">enc_ctx</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:50">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:23"><expr pos:start="63:9" pos:end="63:22"><operator pos:start="63:9" pos:end="63:9">*</operator><name pos:start="63:10" pos:end="63:12">pkt</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <name pos:start="63:16" pos:end="63:22">new_pkt</name></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:32"><expr pos:start="67:9" pos:end="67:31"><name pos:start="67:9" pos:end="67:15">bsf_ctx</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:31"><name pos:start="67:19" pos:end="67:25">bsf_ctx</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:31">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="73:5" pos:end="73:15">return <expr pos:start="73:12" pos:end="73:14"><name pos:start="73:12" pos:end="73:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
