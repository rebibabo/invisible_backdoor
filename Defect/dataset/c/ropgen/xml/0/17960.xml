<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17960.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mon_init_func</name><parameter_list pos:start="1:25" pos:end="1:68">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:53"><decl pos:start="1:40" pos:end="1:53"><type pos:start="1:40" pos:end="1:53"><name pos:start="1:40" pos:end="1:47">QemuOpts</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">opts</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:60">Error</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier><modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:67">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">CharDriverState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">chr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:23">chardev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:20">mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">flags</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:8">mode</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:37"><name pos:start="15:12" pos:end="15:23">qemu_opt_get</name><argument_list pos:start="15:24" pos:end="15:37">(<argument pos:start="15:25" pos:end="15:28"><expr pos:start="15:25" pos:end="15:28"><name pos:start="15:25" pos:end="15:28">opts</name></expr></argument>, <argument pos:start="15:31" pos:end="15:36"><expr pos:start="15:31" pos:end="15:36"><literal type="string" pos:start="15:31" pos:end="15:36">"mode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:21">(<expr pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:12">mode</name> <operator pos:start="17:14" pos:end="17:15">==</operator> <name pos:start="17:17" pos:end="17:20">NULL</name></expr>)</condition> <block pos:start="17:23" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:26">

        <expr_stmt pos:start="19:9" pos:end="19:26"><expr pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:12">mode</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <literal type="string" pos:start="19:16" pos:end="19:25">"readline"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="37:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:38">(<expr pos:start="23:9" pos:end="23:37"><call pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:14">strcmp</name><argument_list pos:start="23:15" pos:end="23:32">(<argument pos:start="23:16" pos:end="23:19"><expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">mode</name></expr></argument>, <argument pos:start="23:22" pos:end="23:31"><expr pos:start="23:22" pos:end="23:31"><literal type="string" pos:start="23:22" pos:end="23:31">"readline"</literal></expr></argument>)</argument_list></call> <operator pos:start="23:34" pos:end="23:35">==</operator> <literal type="number" pos:start="23:37" pos:end="23:37">0</literal></expr>)</condition> <block pos:start="23:40" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:37">

        <expr_stmt pos:start="25:9" pos:end="25:37"><expr pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:13">flags</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:36">MONITOR_USE_READLINE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="27:7" pos:end="31:5">else if <condition pos:start="27:15" pos:end="27:44">(<expr pos:start="27:16" pos:end="27:43"><call pos:start="27:16" pos:end="27:38"><name pos:start="27:16" pos:end="27:21">strcmp</name><argument_list pos:start="27:22" pos:end="27:38">(<argument pos:start="27:23" pos:end="27:26"><expr pos:start="27:23" pos:end="27:26"><name pos:start="27:23" pos:end="27:26">mode</name></expr></argument>, <argument pos:start="27:29" pos:end="27:37"><expr pos:start="27:29" pos:end="27:37"><literal type="string" pos:start="27:29" pos:end="27:37">"control"</literal></expr></argument>)</argument_list></call> <operator pos:start="27:40" pos:end="27:41">==</operator> <literal type="number" pos:start="27:43" pos:end="27:43">0</literal></expr>)</condition> <block pos:start="27:46" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:36">

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:13">flags</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <name pos:start="29:17" pos:end="29:35">MONITOR_USE_CONTROL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="37:5">else <block pos:start="31:12" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:16">

        <expr_stmt pos:start="33:9" pos:end="33:63"><expr pos:start="33:9" pos:end="33:62"><call pos:start="33:9" pos:end="33:62"><name pos:start="33:9" pos:end="33:15">fprintf</name><argument_list pos:start="33:16" pos:end="33:62">(<argument pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:22">stderr</name></expr></argument>, <argument pos:start="33:25" pos:end="33:55"><expr pos:start="33:25" pos:end="33:55"><literal type="string" pos:start="33:25" pos:end="33:55">"unknown monitor mode \"%s\"\n"</literal></expr></argument>, <argument pos:start="33:58" pos:end="33:61"><expr pos:start="33:58" pos:end="33:61"><name pos:start="33:58" pos:end="33:61">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:16"><expr pos:start="35:9" pos:end="35:15"><call pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:12">exit</name><argument_list pos:start="35:13" pos:end="35:15">(<argument pos:start="35:14" pos:end="35:14"><expr pos:start="35:14" pos:end="35:14"><literal type="number" pos:start="35:14" pos:end="35:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="41:5" pos:end="43:36"><if pos:start="41:5" pos:end="43:36">if <condition pos:start="41:8" pos:end="41:45">(<expr pos:start="41:9" pos:end="41:44"><call pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:25">qemu_opt_get_bool</name><argument_list pos:start="41:26" pos:end="41:44">(<argument pos:start="41:27" pos:end="41:30"><expr pos:start="41:27" pos:end="41:30"><name pos:start="41:27" pos:end="41:30">opts</name></expr></argument>, <argument pos:start="41:33" pos:end="41:40"><expr pos:start="41:33" pos:end="41:40"><literal type="string" pos:start="41:33" pos:end="41:40">"pretty"</literal></expr></argument>, <argument pos:start="41:43" pos:end="41:43"><expr pos:start="41:43" pos:end="41:43"><literal type="number" pos:start="41:43" pos:end="41:43">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:36"><block_content pos:start="43:9" pos:end="43:36">

        <expr_stmt pos:start="43:9" pos:end="43:36"><expr pos:start="43:9" pos:end="43:35"><name pos:start="43:9" pos:end="43:13">flags</name> <operator pos:start="43:15" pos:end="43:16">|=</operator> <name pos:start="43:18" pos:end="43:35">MONITOR_USE_PRETTY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="49:36"><if pos:start="47:5" pos:end="49:36">if <condition pos:start="47:8" pos:end="47:46">(<expr pos:start="47:9" pos:end="47:45"><call pos:start="47:9" pos:end="47:45"><name pos:start="47:9" pos:end="47:25">qemu_opt_get_bool</name><argument_list pos:start="47:26" pos:end="47:45">(<argument pos:start="47:27" pos:end="47:30"><expr pos:start="47:27" pos:end="47:30"><name pos:start="47:27" pos:end="47:30">opts</name></expr></argument>, <argument pos:start="47:33" pos:end="47:41"><expr pos:start="47:33" pos:end="47:41"><literal type="string" pos:start="47:33" pos:end="47:41">"default"</literal></expr></argument>, <argument pos:start="47:44" pos:end="47:44"><expr pos:start="47:44" pos:end="47:44"><literal type="number" pos:start="47:44" pos:end="47:44">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:36"><block_content pos:start="49:9" pos:end="49:36">

        <expr_stmt pos:start="49:9" pos:end="49:36"><expr pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:13">flags</name> <operator pos:start="49:15" pos:end="49:16">|=</operator> <name pos:start="49:18" pos:end="49:35">MONITOR_IS_DEFAULT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:44"><expr pos:start="53:5" pos:end="53:43"><name pos:start="53:5" pos:end="53:11">chardev</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:43"><name pos:start="53:15" pos:end="53:26">qemu_opt_get</name><argument_list pos:start="53:27" pos:end="53:43">(<argument pos:start="53:28" pos:end="53:31"><expr pos:start="53:28" pos:end="53:31"><name pos:start="53:28" pos:end="53:31">opts</name></expr></argument>, <argument pos:start="53:34" pos:end="53:42"><expr pos:start="53:34" pos:end="53:42"><literal type="string" pos:start="53:34" pos:end="53:42">"chardev"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:33"><expr pos:start="55:5" pos:end="55:32"><name pos:start="55:5" pos:end="55:7">chr</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <call pos:start="55:11" pos:end="55:32"><name pos:start="55:11" pos:end="55:23">qemu_chr_find</name><argument_list pos:start="55:24" pos:end="55:32">(<argument pos:start="55:25" pos:end="55:31"><expr pos:start="55:25" pos:end="55:31"><name pos:start="55:25" pos:end="55:31">chardev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:20">(<expr pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:11">chr</name> <operator pos:start="57:13" pos:end="57:14">==</operator> <name pos:start="57:16" pos:end="57:19">NULL</name></expr>)</condition> <block pos:start="57:22" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:16">

        <expr_stmt pos:start="59:9" pos:end="59:63"><expr pos:start="59:9" pos:end="59:62"><call pos:start="59:9" pos:end="59:62"><name pos:start="59:9" pos:end="59:15">fprintf</name><argument_list pos:start="59:16" pos:end="59:62">(<argument pos:start="59:17" pos:end="59:22"><expr pos:start="59:17" pos:end="59:22"><name pos:start="59:17" pos:end="59:22">stderr</name></expr></argument>, <argument pos:start="59:25" pos:end="59:52"><expr pos:start="59:25" pos:end="59:52"><literal type="string" pos:start="59:25" pos:end="59:52">"chardev \"%s\" not found\n"</literal></expr></argument>, <argument pos:start="59:55" pos:end="59:61"><expr pos:start="59:55" pos:end="59:61"><name pos:start="59:55" pos:end="59:61">chardev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:16"><expr pos:start="61:9" pos:end="61:15"><call pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:12">exit</name><argument_list pos:start="61:13" pos:end="61:15">(<argument pos:start="61:14" pos:end="61:14"><expr pos:start="61:14" pos:end="61:14"><literal type="number" pos:start="61:14" pos:end="61:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:35"><expr pos:start="67:5" pos:end="67:34"><call pos:start="67:5" pos:end="67:34"><name pos:start="67:5" pos:end="67:29">qemu_chr_fe_claim_no_fail</name><argument_list pos:start="67:30" pos:end="67:34">(<argument pos:start="67:31" pos:end="67:33"><expr pos:start="67:31" pos:end="67:33"><name pos:start="67:31" pos:end="67:33">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:29"><expr pos:start="69:5" pos:end="69:28"><call pos:start="69:5" pos:end="69:28"><name pos:start="69:5" pos:end="69:16">monitor_init</name><argument_list pos:start="69:17" pos:end="69:28">(<argument pos:start="69:18" pos:end="69:20"><expr pos:start="69:18" pos:end="69:20"><name pos:start="69:18" pos:end="69:20">chr</name></expr></argument>, <argument pos:start="69:23" pos:end="69:27"><expr pos:start="69:23" pos:end="69:27"><name pos:start="69:23" pos:end="69:27">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
