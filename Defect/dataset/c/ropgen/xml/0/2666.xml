<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2666.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:27">asf_read_pts</name><parameter_list pos:start="1:28" pos:end="1:99">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:64">stream_index</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:79"><decl pos:start="1:67" pos:end="1:79"><type pos:start="1:67" pos:end="1:79"><name pos:start="1:67" pos:end="1:73">int64_t</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:79">ppos</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:98"><decl pos:start="1:82" pos:end="1:98"><type pos:start="1:82" pos:end="1:98"><name pos:start="1:82" pos:end="1:88">int64_t</name></type> <name pos:start="1:90" pos:end="1:98">pos_limit</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:15">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">AVPacket</name></type> <name pos:start="5:14" pos:end="5:17">pkt1</name></decl>, <decl pos:start="5:20" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:12"><modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">pkt</name> <init pos:start="5:25" pos:end="5:31">= <expr pos:start="5:27" pos:end="5:31"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:31">pkt1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">ASFStream</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:21">asf_st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:15">pts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">pos</name><init pos:start="11:16" pos:end="11:22">= <expr pos:start="11:18" pos:end="11:22"><operator pos:start="11:18" pos:end="11:18">*</operator><name pos:start="11:19" pos:end="11:22">ppos</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:38"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:38"><name pos:start="15:13" pos:end="15:21">start_pos</name><index pos:start="15:22" pos:end="15:38">[<expr pos:start="15:23" pos:end="15:37"><name pos:start="15:23" pos:end="15:37">ASF_MAX_STREAMS</name></expr>]</index></name></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="23:5">for<control pos:start="19:8" pos:end="19:34">(<init pos:start="19:9" pos:end="19:12"><expr pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:9">i</name><operator pos:start="19:10" pos:end="19:10">=</operator><literal type="number" pos:start="19:11" pos:end="19:11">0</literal></expr>;</init> <condition pos:start="19:14" pos:end="19:29"><expr pos:start="19:14" pos:end="19:28"><name pos:start="19:14" pos:end="19:14">i</name><operator pos:start="19:15" pos:end="19:15">&lt;</operator><name pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:28">nb_streams</name></name></expr>;</condition> <incr pos:start="19:31" pos:end="19:33"><expr pos:start="19:31" pos:end="19:33"><name pos:start="19:31" pos:end="19:31">i</name><operator pos:start="19:32" pos:end="19:33">++</operator></expr></incr>)</control><block pos:start="19:35" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:26">

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:17">start_pos</name><index pos:start="21:18" pos:end="21:20">[<expr pos:start="21:19" pos:end="21:19"><name pos:start="21:19" pos:end="21:19">i</name></expr>]</index></name><operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:25">pos</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="27:5" pos:end="29:97"><if pos:start="27:5" pos:end="29:97">if <condition pos:start="27:8" pos:end="27:27">(<expr pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:22">packet_size</name></name> <operator pos:start="27:24" pos:end="27:24">&gt;</operator> <literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:97"><block_content pos:start="29:9" pos:end="29:97">

        <expr_stmt pos:start="29:9" pos:end="29:97"><expr pos:start="29:9" pos:end="29:96"><name pos:start="29:9" pos:end="29:11">pos</name><operator pos:start="29:12" pos:end="29:12">=</operator> <operator pos:start="29:14" pos:end="29:14">(</operator><name pos:start="29:15" pos:end="29:17">pos</name><operator pos:start="29:18" pos:end="29:18">+</operator><name pos:start="29:19" pos:end="29:32"><name pos:start="29:19" pos:end="29:19">s</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:32">packet_size</name></name><operator pos:start="29:33" pos:end="29:33">-</operator><literal type="number" pos:start="29:34" pos:end="29:35">1</literal><operator pos:start="29:35" pos:end="29:35">-</operator><name pos:start="29:36" pos:end="29:49"><name pos:start="29:36" pos:end="29:36">s</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:49">data_offset</name></name><operator pos:start="29:50" pos:end="29:50">)</operator><operator pos:start="29:51" pos:end="29:51">/</operator><name pos:start="29:52" pos:end="29:65"><name pos:start="29:52" pos:end="29:52">s</name><operator pos:start="29:53" pos:end="29:54">-&gt;</operator><name pos:start="29:55" pos:end="29:65">packet_size</name></name><operator pos:start="29:66" pos:end="29:66">*</operator><name pos:start="29:67" pos:end="29:80"><name pos:start="29:67" pos:end="29:67">s</name><operator pos:start="29:68" pos:end="29:69">-&gt;</operator><name pos:start="29:70" pos:end="29:80">packet_size</name></name><operator pos:start="29:81" pos:end="29:81">+</operator> <name pos:start="29:83" pos:end="29:96"><name pos:start="29:83" pos:end="29:83">s</name><operator pos:start="29:84" pos:end="29:85">-&gt;</operator><name pos:start="29:86" pos:end="29:96">data_offset</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:15"><expr pos:start="31:5" pos:end="31:14"><operator pos:start="31:5" pos:end="31:5">*</operator><name pos:start="31:6" pos:end="31:9">ppos</name><operator pos:start="31:10" pos:end="31:10">=</operator> <name pos:start="31:12" pos:end="31:14">pos</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><call pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:13">avio_seek</name><argument_list pos:start="33:14" pos:end="33:35">(<argument pos:start="33:15" pos:end="33:19"><expr pos:start="33:15" pos:end="33:19"><name pos:start="33:15" pos:end="33:19"><name pos:start="33:15" pos:end="33:15">s</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:19">pb</name></name></expr></argument>, <argument pos:start="33:22" pos:end="33:24"><expr pos:start="33:22" pos:end="33:24"><name pos:start="33:22" pos:end="33:24">pos</name></expr></argument>, <argument pos:start="33:27" pos:end="33:34"><expr pos:start="33:27" pos:end="33:34"><name pos:start="33:27" pos:end="33:34">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<comment type="line" pos:start="37:1" pos:end="37:27">//printf("asf_read_pts\n");</comment>

    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><call pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:20">asf_reset_header</name><argument_list pos:start="39:21" pos:end="39:23">(<argument pos:start="39:22" pos:end="39:22"><expr pos:start="39:22" pos:end="39:22"><name pos:start="39:22" pos:end="39:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="41:5" pos:end="87:5">for<control pos:start="41:8" pos:end="41:11">(<init pos:start="41:9" pos:end="41:9">;</init><condition pos:start="41:10" pos:end="41:10">;</condition><incr/>)</control><block pos:start="41:12" pos:end="87:5">{<block_content pos:start="43:9" pos:end="85:9">

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:38">(<expr pos:start="43:13" pos:end="43:37"><call pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:25">av_read_frame</name><argument_list pos:start="43:26" pos:end="43:33">(<argument pos:start="43:27" pos:end="43:27"><expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">s</name></expr></argument>, <argument pos:start="43:30" pos:end="43:32"><expr pos:start="43:30" pos:end="43:32"><name pos:start="43:30" pos:end="43:32">pkt</name></expr></argument>)</argument_list></call> <operator pos:start="43:35" pos:end="43:35">&lt;</operator> <literal type="number" pos:start="43:37" pos:end="43:37">0</literal></expr>)</condition><block pos:start="43:39" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:34">

            <expr_stmt pos:start="45:13" pos:end="45:60"><expr pos:start="45:13" pos:end="45:59"><call pos:start="45:13" pos:end="45:59"><name pos:start="45:13" pos:end="45:18">av_log</name><argument_list pos:start="45:19" pos:end="45:59">(<argument pos:start="45:20" pos:end="45:20"><expr pos:start="45:20" pos:end="45:20"><name pos:start="45:20" pos:end="45:20">s</name></expr></argument>, <argument pos:start="45:23" pos:end="45:33"><expr pos:start="45:23" pos:end="45:33"><name pos:start="45:23" pos:end="45:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="45:36" pos:end="45:58"><expr pos:start="45:36" pos:end="45:58"><literal type="string" pos:start="45:36" pos:end="45:58">"asf_read_pts failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="47:13" pos:end="47:34">return <expr pos:start="47:20" pos:end="47:33"><name pos:start="47:20" pos:end="47:33">AV_NOPTS_VALUE</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:11">pts</name><operator pos:start="53:12" pos:end="53:12">=</operator> <name pos:start="53:14" pos:end="53:21"><name pos:start="53:14" pos:end="53:16">pkt</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:21">pts</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><call pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:22">av_free_packet</name><argument_list pos:start="57:23" pos:end="57:27">(<argument pos:start="57:24" pos:end="57:26"><expr pos:start="57:24" pos:end="57:26"><name pos:start="57:24" pos:end="57:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="85:9"><if pos:start="59:9" pos:end="85:9">if<condition pos:start="59:11" pos:end="59:38">(<expr pos:start="59:12" pos:end="59:37"><name pos:start="59:12" pos:end="59:21"><name pos:start="59:12" pos:end="59:14">pkt</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:21">flags</name></name><operator pos:start="59:22" pos:end="59:22">&amp;</operator><name pos:start="59:23" pos:end="59:37">AV_PKT_FLAG_KEY</name></expr>)</condition><block pos:start="59:39" pos:end="85:9">{<block_content pos:start="61:13" pos:end="83:21">

            <expr_stmt pos:start="61:13" pos:end="61:33"><expr pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:13">i</name><operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:32"><name pos:start="61:16" pos:end="61:18">pkt</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:32">stream_index</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="65:13" pos:end="65:45"><expr pos:start="65:13" pos:end="65:44"><name pos:start="65:13" pos:end="65:18">asf_st</name><operator pos:start="65:19" pos:end="65:19">=</operator> <name pos:start="65:21" pos:end="65:33"><name pos:start="65:21" pos:end="65:21">s</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:30">streams</name><index pos:start="65:31" pos:end="65:33">[<expr pos:start="65:32" pos:end="65:32"><name pos:start="65:32" pos:end="65:32">i</name></expr>]</index></name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:44">priv_data</name></expr>;</expr_stmt>



<comment type="line" pos:start="69:1" pos:end="69:82">//            assert((asf_st-&gt;packet_pos - s-&gt;data_offset) % s-&gt;packet_size == 0);</comment>

            <expr_stmt pos:start="71:13" pos:end="71:36"><expr pos:start="71:13" pos:end="71:35"><name pos:start="71:13" pos:end="71:15">pos</name><operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:35"><name pos:start="71:18" pos:end="71:23">asf_st</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:35">packet_pos</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="75:13" pos:end="75:109"><expr pos:start="75:13" pos:end="75:108"><call pos:start="75:13" pos:end="75:108"><name pos:start="75:13" pos:end="75:30">av_add_index_entry</name><argument_list pos:start="75:31" pos:end="75:108">(<argument pos:start="75:32" pos:end="75:44"><expr pos:start="75:32" pos:end="75:44"><name pos:start="75:32" pos:end="75:44"><name pos:start="75:32" pos:end="75:32">s</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:41">streams</name><index pos:start="75:42" pos:end="75:44">[<expr pos:start="75:43" pos:end="75:43"><name pos:start="75:43" pos:end="75:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="75:47" pos:end="75:49"><expr pos:start="75:47" pos:end="75:49"><name pos:start="75:47" pos:end="75:49">pos</name></expr></argument>, <argument pos:start="75:52" pos:end="75:54"><expr pos:start="75:52" pos:end="75:54"><name pos:start="75:52" pos:end="75:54">pts</name></expr></argument>, <argument pos:start="75:57" pos:end="75:65"><expr pos:start="75:57" pos:end="75:65"><name pos:start="75:57" pos:end="75:65"><name pos:start="75:57" pos:end="75:59">pkt</name><operator pos:start="75:60" pos:end="75:61">-&gt;</operator><name pos:start="75:62" pos:end="75:65">size</name></name></expr></argument>, <argument pos:start="75:68" pos:end="75:89"><expr pos:start="75:68" pos:end="75:89"><name pos:start="75:68" pos:end="75:70">pos</name> <operator pos:start="75:72" pos:end="75:72">-</operator> <name pos:start="75:74" pos:end="75:85"><name pos:start="75:74" pos:end="75:82">start_pos</name><index pos:start="75:83" pos:end="75:85">[<expr pos:start="75:84" pos:end="75:84"><name pos:start="75:84" pos:end="75:84">i</name></expr>]</index></name> <operator pos:start="75:87" pos:end="75:87">+</operator> <literal type="number" pos:start="75:89" pos:end="75:89">1</literal></expr></argument>, <argument pos:start="75:92" pos:end="75:107"><expr pos:start="75:92" pos:end="75:107"><name pos:start="75:92" pos:end="75:107">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:49"><expr pos:start="77:13" pos:end="77:48"><name pos:start="77:13" pos:end="77:24"><name pos:start="77:13" pos:end="77:21">start_pos</name><index pos:start="77:22" pos:end="77:24">[<expr pos:start="77:23" pos:end="77:23"><name pos:start="77:23" pos:end="77:23">i</name></expr>]</index></name><operator pos:start="77:25" pos:end="77:25">=</operator> <name pos:start="77:27" pos:end="77:44"><name pos:start="77:27" pos:end="77:32">asf_st</name><operator pos:start="77:33" pos:end="77:34">-&gt;</operator><name pos:start="77:35" pos:end="77:44">packet_pos</name></name> <operator pos:start="77:46" pos:end="77:46">+</operator> <literal type="number" pos:start="77:48" pos:end="77:48">1</literal></expr>;</expr_stmt>



            <if_stmt pos:start="81:13" pos:end="83:21"><if pos:start="81:13" pos:end="83:21">if<condition pos:start="81:15" pos:end="81:49">(<expr pos:start="81:16" pos:end="81:48"><name pos:start="81:16" pos:end="81:32"><name pos:start="81:16" pos:end="81:18">pkt</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:32">stream_index</name></name> <operator pos:start="81:34" pos:end="81:35">==</operator> <name pos:start="81:37" pos:end="81:48">stream_index</name></expr>)</condition><block type="pseudo" pos:start="83:16" pos:end="83:21"><block_content pos:start="83:16" pos:end="83:21">

               <break pos:start="83:16" pos:end="83:21">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="91:5" pos:end="91:15"><expr pos:start="91:5" pos:end="91:14"><operator pos:start="91:5" pos:end="91:5">*</operator><name pos:start="91:6" pos:end="91:9">ppos</name><operator pos:start="91:10" pos:end="91:10">=</operator> <name pos:start="91:12" pos:end="91:14">pos</name></expr>;</expr_stmt>

<comment type="line" pos:start="93:1" pos:end="93:94">//printf("found keyframe at %"PRId64" stream %d stamp:%"PRId64"\n", *ppos, stream_index, pts);</comment>



    <return pos:start="97:5" pos:end="97:15">return <expr pos:start="97:12" pos:end="97:14"><name pos:start="97:12" pos:end="97:14">pts</name></expr>;</return>

</block_content>}</block></function>
</unit>
