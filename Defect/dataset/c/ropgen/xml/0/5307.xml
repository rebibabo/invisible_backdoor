<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5307.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">spapr_core_release</name><parameter_list pos:start="1:24" pos:end="1:41">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:35">DeviceState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:33">

    <decl_stmt pos:start="5:5" pos:end="5:62"><decl pos:start="5:5" pos:end="5:61"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MachineState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">ms</name> <init pos:start="5:22" pos:end="5:61">= <expr pos:start="5:24" pos:end="5:61"><call pos:start="5:24" pos:end="5:61"><name pos:start="5:24" pos:end="5:30">MACHINE</name><argument_list pos:start="5:31" pos:end="5:61">(<argument pos:start="5:32" pos:end="5:60"><expr pos:start="5:32" pos:end="5:60"><call pos:start="5:32" pos:end="5:60"><name pos:start="5:32" pos:end="5:55">qdev_get_hotplug_handler</name><argument_list pos:start="5:56" pos:end="5:60">(<argument pos:start="5:57" pos:end="5:59"><expr pos:start="5:57" pos:end="5:59"><name pos:start="5:57" pos:end="5:59">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:57"><decl pos:start="7:5" pos:end="7:56"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">sPAPRMachineClass</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:26">smc</name> <init pos:start="7:28" pos:end="7:56">= <expr pos:start="7:30" pos:end="7:56"><call pos:start="7:30" pos:end="7:56"><name pos:start="7:30" pos:end="7:52">SPAPR_MACHINE_GET_CLASS</name><argument_list pos:start="7:53" pos:end="7:56">(<argument pos:start="7:54" pos:end="7:55"><expr pos:start="7:54" pos:end="7:55"><name pos:start="7:54" pos:end="7:55">ms</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">CPUCore</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:15">cc</name> <init pos:start="9:17" pos:end="9:31">= <expr pos:start="9:19" pos:end="9:31"><call pos:start="9:19" pos:end="9:31"><name pos:start="9:19" pos:end="9:26">CPU_CORE</name><argument_list pos:start="9:27" pos:end="9:31">(<argument pos:start="9:28" pos:end="9:30"><expr pos:start="9:28" pos:end="9:30"><name pos:start="9:28" pos:end="9:30">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:70"><decl pos:start="11:5" pos:end="11:69"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">CPUArchId</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:24">core_slot</name> <init pos:start="11:26" pos:end="11:69">= <expr pos:start="11:28" pos:end="11:69"><call pos:start="11:28" pos:end="11:69"><name pos:start="11:28" pos:end="11:46">spapr_find_cpu_slot</name><argument_list pos:start="11:47" pos:end="11:69">(<argument pos:start="11:48" pos:end="11:49"><expr pos:start="11:48" pos:end="11:49"><name pos:start="11:48" pos:end="11:49">ms</name></expr></argument>, <argument pos:start="11:52" pos:end="11:62"><expr pos:start="11:52" pos:end="11:62"><name pos:start="11:52" pos:end="11:62"><name pos:start="11:52" pos:end="11:53">cc</name><operator pos:start="11:54" pos:end="11:55">-&gt;</operator><name pos:start="11:56" pos:end="11:62">core_id</name></name></expr></argument>, <argument pos:start="11:65" pos:end="11:68"><expr pos:start="11:65" pos:end="11:68"><name pos:start="11:65" pos:end="11:68">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="37:5"><if pos:start="15:5" pos:end="37:5">if <condition pos:start="15:8" pos:end="15:38">(<expr pos:start="15:9" pos:end="15:37"><name pos:start="15:9" pos:end="15:37"><name pos:start="15:9" pos:end="15:11">smc</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:37">pre_2_10_has_unused_icps</name></name></expr>)</condition> <block pos:start="15:40" pos:end="37:5">{<block_content pos:start="17:9" pos:end="35:9">

        <decl_stmt pos:start="17:9" pos:end="17:55"><decl pos:start="17:9" pos:end="17:54"><type pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:20">sPAPRCPUCore</name> <modifier pos:start="17:22" pos:end="17:22">*</modifier></type><name pos:start="17:23" pos:end="17:24">sc</name> <init pos:start="17:26" pos:end="17:54">= <expr pos:start="17:28" pos:end="17:54"><call pos:start="17:28" pos:end="17:54"><name pos:start="17:28" pos:end="17:41">SPAPR_CPU_CORE</name><argument_list pos:start="17:42" pos:end="17:54">(<argument pos:start="17:43" pos:end="17:53"><expr pos:start="17:43" pos:end="17:53"><call pos:start="17:43" pos:end="17:53"><name pos:start="17:43" pos:end="17:48">OBJECT</name><argument_list pos:start="17:49" pos:end="17:53">(<argument pos:start="17:50" pos:end="17:52"><expr pos:start="17:50" pos:end="17:52"><name pos:start="17:50" pos:end="17:52">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:70"><decl pos:start="19:9" pos:end="19:69"><type pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:25">sPAPRCPUCoreClass</name> <modifier pos:start="19:27" pos:end="19:27">*</modifier></type><name pos:start="19:28" pos:end="19:30">scc</name> <init pos:start="19:32" pos:end="19:69">= <expr pos:start="19:34" pos:end="19:69"><call pos:start="19:34" pos:end="19:69"><name pos:start="19:34" pos:end="19:57">SPAPR_CPU_CORE_GET_CLASS</name><argument_list pos:start="19:58" pos:end="19:69">(<argument pos:start="19:59" pos:end="19:68"><expr pos:start="19:59" pos:end="19:68"><call pos:start="19:59" pos:end="19:68"><name pos:start="19:59" pos:end="19:64">OBJECT</name><argument_list pos:start="19:65" pos:end="19:68">(<argument pos:start="19:66" pos:end="19:67"><expr pos:start="19:66" pos:end="19:67"><name pos:start="19:66" pos:end="19:67">cc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:67"><decl pos:start="21:9" pos:end="21:66"><type pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:14">size_t</name></type> <name pos:start="21:16" pos:end="21:19">size</name> <init pos:start="21:21" pos:end="21:66">= <expr pos:start="21:23" pos:end="21:66"><call pos:start="21:23" pos:end="21:66"><name pos:start="21:23" pos:end="21:51">object_type_get_instance_size</name><argument_list pos:start="21:52" pos:end="21:66">(<argument pos:start="21:53" pos:end="21:65"><expr pos:start="21:53" pos:end="21:65"><name pos:start="21:53" pos:end="21:65"><name pos:start="21:53" pos:end="21:55">scc</name><operator pos:start="21:56" pos:end="21:57">-&gt;</operator><name pos:start="21:58" pos:end="21:65">cpu_type</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:14"><decl pos:start="23:9" pos:end="23:13"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">i</name></decl>;</decl_stmt>



        <for pos:start="27:9" pos:end="35:9">for <control pos:start="27:13" pos:end="27:44">(<init pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:14">i</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</init> <condition pos:start="27:21" pos:end="27:39"><expr pos:start="27:21" pos:end="27:38"><name pos:start="27:21" pos:end="27:21">i</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <name pos:start="27:25" pos:end="27:38"><name pos:start="27:25" pos:end="27:26">cc</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:38">nr_threads</name></name></expr>;</condition> <incr pos:start="27:41" pos:end="27:43"><expr pos:start="27:41" pos:end="27:43"><name pos:start="27:41" pos:end="27:41">i</name><operator pos:start="27:42" pos:end="27:43">++</operator></expr></incr>)</control> <block pos:start="27:46" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:63">

            <decl_stmt pos:start="29:13" pos:end="29:55"><decl pos:start="29:13" pos:end="29:54"><type pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:20">CPUState</name> <modifier pos:start="29:22" pos:end="29:22">*</modifier></type><name pos:start="29:23" pos:end="29:24">cs</name> <init pos:start="29:26" pos:end="29:54">= <expr pos:start="29:28" pos:end="29:54"><call pos:start="29:28" pos:end="29:54"><name pos:start="29:28" pos:end="29:30">CPU</name><argument_list pos:start="29:31" pos:end="29:54">(<argument pos:start="29:32" pos:end="29:53"><expr pos:start="29:32" pos:end="29:53"><name pos:start="29:32" pos:end="29:42"><name pos:start="29:32" pos:end="29:33">sc</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:42">threads</name></name> <operator pos:start="29:44" pos:end="29:44">+</operator> <name pos:start="29:46" pos:end="29:46">i</name> <operator pos:start="29:48" pos:end="29:48">*</operator> <name pos:start="29:50" pos:end="29:53">size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="33:13" pos:end="33:63"><expr pos:start="33:13" pos:end="33:62"><call pos:start="33:13" pos:end="33:62"><name pos:start="33:13" pos:end="33:47">pre_2_10_vmstate_register_dummy_icp</name><argument_list pos:start="33:48" pos:end="33:62">(<argument pos:start="33:49" pos:end="33:61"><expr pos:start="33:49" pos:end="33:61"><name pos:start="33:49" pos:end="33:61"><name pos:start="33:49" pos:end="33:50">cs</name><operator pos:start="33:51" pos:end="33:52">-&gt;</operator><name pos:start="33:53" pos:end="33:61">cpu_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:22"><expr pos:start="41:5" pos:end="41:21"><call pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:10">assert</name><argument_list pos:start="41:11" pos:end="41:21">(<argument pos:start="41:12" pos:end="41:20"><expr pos:start="41:12" pos:end="41:20"><name pos:start="41:12" pos:end="41:20">core_slot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:26"><expr pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:13">core_slot</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:18">cpu</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:25">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><call pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:19">object_unparent</name><argument_list pos:start="45:20" pos:end="45:32">(<argument pos:start="45:21" pos:end="45:31"><expr pos:start="45:21" pos:end="45:31"><call pos:start="45:21" pos:end="45:31"><name pos:start="45:21" pos:end="45:26">OBJECT</name><argument_list pos:start="45:27" pos:end="45:31">(<argument pos:start="45:28" pos:end="45:30"><expr pos:start="45:28" pos:end="45:30"><name pos:start="45:28" pos:end="45:30">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
