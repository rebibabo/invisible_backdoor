<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8785.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decrypt_init</name><parameter_list pos:start="1:24" pos:end="1:80">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><name pos:start="1:45" pos:end="1:58">ID3v2ExtraMeta</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">em</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:79"><decl pos:start="1:65" pos:end="1:79"><type pos:start="1:65" pos:end="1:79"><name pos:start="1:65" pos:end="1:71">uint8_t</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:79">header</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="171:1">{<block_content pos:start="5:5" pos:end="169:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">OMAContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">oc</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">ID3v2ExtraMetaGEOB</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:28">geob</name> <init pos:start="7:30" pos:end="7:35">= <expr pos:start="7:32" pos:end="7:35"><name pos:start="7:32" pos:end="7:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:18">gdata</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:6">oc</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:17">encrypted</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <literal type="number" pos:start="13:21" pos:end="13:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:50"><expr pos:start="15:5" pos:end="15:49"><call pos:start="15:5" pos:end="15:49"><name pos:start="15:5" pos:end="15:10">av_log</name><argument_list pos:start="15:11" pos:end="15:49">(<argument pos:start="15:12" pos:end="15:12"><expr pos:start="15:12" pos:end="15:12"><name pos:start="15:12" pos:end="15:12">s</name></expr></argument>, <argument pos:start="15:15" pos:end="15:25"><expr pos:start="15:15" pos:end="15:25"><name pos:start="15:15" pos:end="15:25">AV_LOG_INFO</name></expr></argument>, <argument pos:start="15:28" pos:end="15:48"><expr pos:start="15:28" pos:end="15:48"><literal type="string" pos:start="15:28" pos:end="15:48">"File is encrypted\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:28">/* find GEOB metadata */</comment>

    <while pos:start="21:5" pos:end="37:5">while <condition pos:start="21:11" pos:end="21:14">(<expr pos:start="21:12" pos:end="21:13"><name pos:start="21:12" pos:end="21:13">em</name></expr>)</condition> <block pos:start="21:16" pos:end="37:5">{<block_content pos:start="23:9" pos:end="35:22">

        <if_stmt pos:start="23:9" pos:end="33:9"><if pos:start="23:9" pos:end="33:9">if <condition pos:start="23:12" pos:end="29:54">(<expr pos:start="23:13" pos:end="29:53"><operator pos:start="23:13" pos:end="23:13">!</operator><call pos:start="23:14" pos:end="23:36"><name pos:start="23:14" pos:end="23:19">strcmp</name><argument_list pos:start="23:20" pos:end="23:36">(<argument pos:start="23:21" pos:end="23:27"><expr pos:start="23:21" pos:end="23:27"><name pos:start="23:21" pos:end="23:27"><name pos:start="23:21" pos:end="23:22">em</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:27">tag</name></name></expr></argument>, <argument pos:start="23:30" pos:end="23:35"><expr pos:start="23:30" pos:end="23:35"><literal type="string" pos:start="23:30" pos:end="23:35">"GEOB"</literal></expr></argument>)</argument_list></call> <operator pos:start="23:38" pos:end="23:39">&amp;&amp;</operator>

            <operator pos:start="25:13" pos:end="25:13">(</operator><name pos:start="25:14" pos:end="25:17">geob</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:28"><name pos:start="25:21" pos:end="25:22">em</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:28">data</name></name><operator pos:start="25:29" pos:end="25:29">)</operator> <operator pos:start="25:31" pos:end="25:32">&amp;&amp;</operator>

            <operator pos:start="27:13" pos:end="27:13">(</operator><operator pos:start="27:14" pos:end="27:14">!</operator><call pos:start="27:15" pos:end="27:50"><name pos:start="27:15" pos:end="27:20">strcmp</name><argument_list pos:start="27:21" pos:end="27:50">(<argument pos:start="27:22" pos:end="27:38"><expr pos:start="27:22" pos:end="27:38"><name pos:start="27:22" pos:end="27:38"><name pos:start="27:22" pos:end="27:25">geob</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:38">description</name></name></expr></argument>, <argument pos:start="27:41" pos:end="27:49"><expr pos:start="27:41" pos:end="27:49"><literal type="string" pos:start="27:41" pos:end="27:49">"OMG_LSI"</literal></expr></argument>)</argument_list></call> <operator pos:start="27:52" pos:end="27:53">||</operator>

             <operator pos:start="29:14" pos:end="29:14">!</operator><call pos:start="29:15" pos:end="29:52"><name pos:start="29:15" pos:end="29:20">strcmp</name><argument_list pos:start="29:21" pos:end="29:52">(<argument pos:start="29:22" pos:end="29:38"><expr pos:start="29:22" pos:end="29:38"><name pos:start="29:22" pos:end="29:38"><name pos:start="29:22" pos:end="29:25">geob</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:38">description</name></name></expr></argument>, <argument pos:start="29:41" pos:end="29:51"><expr pos:start="29:41" pos:end="29:51"><literal type="string" pos:start="29:41" pos:end="29:51">"OMG_BKLSI"</literal></expr></argument>)</argument_list></call><operator pos:start="29:53" pos:end="29:53">)</operator></expr>)</condition> <block pos:start="29:56" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:18">

            <break pos:start="31:13" pos:end="31:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:22"><expr pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:10">em</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:21"><name pos:start="35:14" pos:end="35:15">em</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:21">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:12">(<expr pos:start="39:9" pos:end="39:11"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:11">em</name></expr>)</condition> <block pos:start="39:14" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:18">

        <expr_stmt pos:start="41:9" pos:end="41:64"><expr pos:start="41:9" pos:end="41:63"><call pos:start="41:9" pos:end="41:63"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:63">(<argument pos:start="41:16" pos:end="41:16"><expr pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">s</name></expr></argument>, <argument pos:start="41:19" pos:end="41:30"><expr pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:33" pos:end="41:62"><expr pos:start="41:33" pos:end="41:62"><literal type="string" pos:start="41:33" pos:end="41:62">"No encryption header found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:28">(<expr pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:12">geob</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:22">datasize</name></name> <operator pos:start="49:24" pos:end="49:24">&lt;</operator> <literal type="number" pos:start="49:26" pos:end="49:27">64</literal></expr>)</condition> <block pos:start="49:30" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:18">

        <expr_stmt pos:start="51:9" pos:end="51:80"><expr pos:start="51:9" pos:end="51:79"><call pos:start="51:9" pos:end="51:79"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:79">(<argument pos:start="51:16" pos:end="51:16"><expr pos:start="51:16" pos:end="51:16"><name pos:start="51:16" pos:end="51:16">s</name></expr></argument>, <argument pos:start="51:19" pos:end="51:30"><expr pos:start="51:19" pos:end="51:30"><name pos:start="51:19" pos:end="51:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:33" pos:end="51:62"><expr pos:start="51:33" pos:end="51:62"><literal type="string" pos:start="51:33" pos:end="51:62">"Invalid GEOB data size: %u\n"</literal></expr></argument>, <argument pos:start="51:65" pos:end="51:78"><expr pos:start="51:65" pos:end="51:78"><name pos:start="51:65" pos:end="51:78"><name pos:start="51:65" pos:end="51:68">geob</name><operator pos:start="51:69" pos:end="51:70">-&gt;</operator><name pos:start="51:71" pos:end="51:78">datasize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:9">gdata</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <name pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:16">geob</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:22">data</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="65:76"><if pos:start="63:5" pos:end="65:76">if <condition pos:start="63:8" pos:end="63:28">(<expr pos:start="63:9" pos:end="63:27"><call pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:15">AV_RB16</name><argument_list pos:start="63:16" pos:end="63:22">(<argument pos:start="63:17" pos:end="63:21"><expr pos:start="63:17" pos:end="63:21"><name pos:start="63:17" pos:end="63:21">gdata</name></expr></argument>)</argument_list></call> <operator pos:start="63:24" pos:end="63:25">!=</operator> <literal type="number" pos:start="63:27" pos:end="63:27">1</literal></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:76"><block_content pos:start="65:9" pos:end="65:76">

        <expr_stmt pos:start="65:9" pos:end="65:76"><expr pos:start="65:9" pos:end="65:75"><call pos:start="65:9" pos:end="65:75"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="65:75">(<argument pos:start="65:16" pos:end="65:16"><expr pos:start="65:16" pos:end="65:16"><name pos:start="65:16" pos:end="65:16">s</name></expr></argument>, <argument pos:start="65:19" pos:end="65:32"><expr pos:start="65:19" pos:end="65:32"><name pos:start="65:19" pos:end="65:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="65:35" pos:end="65:74"><expr pos:start="65:35" pos:end="65:74"><literal type="string" pos:start="65:35" pos:end="65:74">"Unknown version in encryption header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:36"><expr pos:start="69:5" pos:end="69:35"><name pos:start="69:5" pos:end="69:14"><name pos:start="69:5" pos:end="69:6">oc</name><operator pos:start="69:7" pos:end="69:8">-&gt;</operator><name pos:start="69:9" pos:end="69:14">k_size</name></name> <operator pos:start="69:16" pos:end="69:16">=</operator> <call pos:start="69:18" pos:end="69:35"><name pos:start="69:18" pos:end="69:24">AV_RB16</name><argument_list pos:start="69:25" pos:end="69:35">(<argument pos:start="69:26" pos:end="69:34"><expr pos:start="69:26" pos:end="69:34"><operator pos:start="69:26" pos:end="69:26">&amp;</operator><name pos:start="69:27" pos:end="69:34"><name pos:start="69:27" pos:end="69:31">gdata</name><index pos:start="69:32" pos:end="69:34">[<expr pos:start="69:33" pos:end="69:33"><literal type="number" pos:start="69:33" pos:end="69:33">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:36"><expr pos:start="71:5" pos:end="71:35"><name pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:6">oc</name><operator pos:start="71:7" pos:end="71:8">-&gt;</operator><name pos:start="71:9" pos:end="71:14">e_size</name></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <call pos:start="71:18" pos:end="71:35"><name pos:start="71:18" pos:end="71:24">AV_RB16</name><argument_list pos:start="71:25" pos:end="71:35">(<argument pos:start="71:26" pos:end="71:34"><expr pos:start="71:26" pos:end="71:34"><operator pos:start="71:26" pos:end="71:26">&amp;</operator><name pos:start="71:27" pos:end="71:34"><name pos:start="71:27" pos:end="71:31">gdata</name><index pos:start="71:32" pos:end="71:34">[<expr pos:start="71:33" pos:end="71:33"><literal type="number" pos:start="71:33" pos:end="71:33">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:36"><expr pos:start="73:5" pos:end="73:35"><name pos:start="73:5" pos:end="73:14"><name pos:start="73:5" pos:end="73:6">oc</name><operator pos:start="73:7" pos:end="73:8">-&gt;</operator><name pos:start="73:9" pos:end="73:14">i_size</name></name> <operator pos:start="73:16" pos:end="73:16">=</operator> <call pos:start="73:18" pos:end="73:35"><name pos:start="73:18" pos:end="73:24">AV_RB16</name><argument_list pos:start="73:25" pos:end="73:35">(<argument pos:start="73:26" pos:end="73:34"><expr pos:start="73:26" pos:end="73:34"><operator pos:start="73:26" pos:end="73:26">&amp;</operator><name pos:start="73:27" pos:end="73:34"><name pos:start="73:27" pos:end="73:31">gdata</name><index pos:start="73:32" pos:end="73:34">[<expr pos:start="73:33" pos:end="73:33"><literal type="number" pos:start="73:33" pos:end="73:33">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:36"><expr pos:start="75:5" pos:end="75:35"><name pos:start="75:5" pos:end="75:14"><name pos:start="75:5" pos:end="75:6">oc</name><operator pos:start="75:7" pos:end="75:8">-&gt;</operator><name pos:start="75:9" pos:end="75:14">s_size</name></name> <operator pos:start="75:16" pos:end="75:16">=</operator> <call pos:start="75:18" pos:end="75:35"><name pos:start="75:18" pos:end="75:24">AV_RB16</name><argument_list pos:start="75:25" pos:end="75:35">(<argument pos:start="75:26" pos:end="75:34"><expr pos:start="75:26" pos:end="75:34"><operator pos:start="75:26" pos:end="75:26">&amp;</operator><name pos:start="75:27" pos:end="75:34"><name pos:start="75:27" pos:end="75:31">gdata</name><index pos:start="75:32" pos:end="75:34">[<expr pos:start="75:33" pos:end="75:33"><literal type="number" pos:start="75:33" pos:end="75:33">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:64">(<expr pos:start="79:9" pos:end="79:63"><call pos:start="79:9" pos:end="79:63"><name pos:start="79:9" pos:end="79:14">memcmp</name><argument_list pos:start="79:15" pos:end="79:63">(<argument pos:start="79:16" pos:end="79:42"><expr pos:start="79:16" pos:end="79:42"><operator pos:start="79:16" pos:end="79:16">&amp;</operator><name pos:start="79:17" pos:end="79:42"><name pos:start="79:17" pos:end="79:21">gdata</name><index pos:start="79:22" pos:end="79:42">[<expr pos:start="79:23" pos:end="79:41"><name pos:start="79:23" pos:end="79:41">OMA_ENC_HEADER_SIZE</name></expr>]</index></name></expr></argument>, <argument pos:start="79:45" pos:end="79:58"><expr pos:start="79:45" pos:end="79:58"><literal type="string" pos:start="79:45" pos:end="79:58">"KEYRING     "</literal></expr></argument>, <argument pos:start="79:61" pos:end="79:62"><expr pos:start="79:61" pos:end="79:62"><literal type="number" pos:start="79:61" pos:end="79:62">12</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:66" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:18">

        <expr_stmt pos:start="81:9" pos:end="81:63"><expr pos:start="81:9" pos:end="81:62"><call pos:start="81:9" pos:end="81:62"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:62">(<argument pos:start="81:16" pos:end="81:16"><expr pos:start="81:16" pos:end="81:16"><name pos:start="81:16" pos:end="81:16">s</name></expr></argument>, <argument pos:start="81:19" pos:end="81:30"><expr pos:start="81:19" pos:end="81:30"><name pos:start="81:19" pos:end="81:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:33" pos:end="81:61"><expr pos:start="81:33" pos:end="81:61"><literal type="string" pos:start="81:33" pos:end="81:61">"Invalid encryption header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:18">return <expr pos:start="83:16" pos:end="83:17"><operator pos:start="83:16" pos:end="83:16">-</operator><literal type="number" pos:start="83:17" pos:end="83:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if <condition pos:start="87:8" pos:end="87:62">(<expr pos:start="87:9" pos:end="87:61"><name pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:10">oc</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:18">k_size</name></name> <operator pos:start="87:20" pos:end="87:20">+</operator> <name pos:start="87:22" pos:end="87:31"><name pos:start="87:22" pos:end="87:23">oc</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:31">e_size</name></name> <operator pos:start="87:33" pos:end="87:33">+</operator> <name pos:start="87:35" pos:end="87:44"><name pos:start="87:35" pos:end="87:36">oc</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:44">i_size</name></name> <operator pos:start="87:46" pos:end="87:46">&gt;</operator> <name pos:start="87:48" pos:end="87:61"><name pos:start="87:48" pos:end="87:51">geob</name><operator pos:start="87:52" pos:end="87:53">-&gt;</operator><name pos:start="87:54" pos:end="87:61">datasize</name></name></expr>)</condition> <block pos:start="87:64" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:35">

        <expr_stmt pos:start="89:9" pos:end="89:58"><expr pos:start="89:9" pos:end="89:57"><call pos:start="89:9" pos:end="89:57"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:57">(<argument pos:start="89:16" pos:end="89:16"><expr pos:start="89:16" pos:end="89:16"><name pos:start="89:16" pos:end="89:16">s</name></expr></argument>, <argument pos:start="89:19" pos:end="89:30"><expr pos:start="89:19" pos:end="89:30"><name pos:start="89:19" pos:end="89:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:33" pos:end="89:56"><expr pos:start="89:33" pos:end="89:56"><literal type="string" pos:start="89:33" pos:end="89:56">"Too little GEOB data\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="91:9" pos:end="91:35">return <expr pos:start="91:16" pos:end="91:34"><name pos:start="91:16" pos:end="91:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:56"><expr pos:start="95:5" pos:end="95:55"><name pos:start="95:5" pos:end="95:11"><name pos:start="95:5" pos:end="95:6">oc</name><operator pos:start="95:7" pos:end="95:8">-&gt;</operator><name pos:start="95:9" pos:end="95:11">rid</name></name> <operator pos:start="95:13" pos:end="95:13">=</operator> <call pos:start="95:15" pos:end="95:55"><name pos:start="95:15" pos:end="95:21">AV_RB32</name><argument_list pos:start="95:22" pos:end="95:55">(<argument pos:start="95:23" pos:end="95:54"><expr pos:start="95:23" pos:end="95:54"><operator pos:start="95:23" pos:end="95:23">&amp;</operator><name pos:start="95:24" pos:end="95:54"><name pos:start="95:24" pos:end="95:28">gdata</name><index pos:start="95:29" pos:end="95:54">[<expr pos:start="95:30" pos:end="95:53"><name pos:start="95:30" pos:end="95:48">OMA_ENC_HEADER_SIZE</name> <operator pos:start="95:50" pos:end="95:50">+</operator> <literal type="number" pos:start="95:52" pos:end="95:53">28</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:52"><expr pos:start="97:5" pos:end="97:51"><call pos:start="97:5" pos:end="97:51"><name pos:start="97:5" pos:end="97:10">av_log</name><argument_list pos:start="97:11" pos:end="97:51">(<argument pos:start="97:12" pos:end="97:12"><expr pos:start="97:12" pos:end="97:12"><name pos:start="97:12" pos:end="97:12">s</name></expr></argument>, <argument pos:start="97:15" pos:end="97:26"><expr pos:start="97:15" pos:end="97:26"><name pos:start="97:15" pos:end="97:26">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="97:29" pos:end="97:41"><expr pos:start="97:29" pos:end="97:41"><literal type="string" pos:start="97:29" pos:end="97:41">"RID: %.8x\n"</literal></expr></argument>, <argument pos:start="97:44" pos:end="97:50"><expr pos:start="97:44" pos:end="97:50"><name pos:start="97:44" pos:end="97:50"><name pos:start="97:44" pos:end="97:45">oc</name><operator pos:start="97:46" pos:end="97:47">-&gt;</operator><name pos:start="97:48" pos:end="97:50">rid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:37"><expr pos:start="101:5" pos:end="101:36"><call pos:start="101:5" pos:end="101:36"><name pos:start="101:5" pos:end="101:10">memcpy</name><argument_list pos:start="101:11" pos:end="101:36">(<argument pos:start="101:12" pos:end="101:17"><expr pos:start="101:12" pos:end="101:17"><name pos:start="101:12" pos:end="101:17"><name pos:start="101:12" pos:end="101:13">oc</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:17">iv</name></name></expr></argument>, <argument pos:start="101:20" pos:end="101:32"><expr pos:start="101:20" pos:end="101:32"><operator pos:start="101:20" pos:end="101:20">&amp;</operator><name pos:start="101:21" pos:end="101:32"><name pos:start="101:21" pos:end="101:26">header</name><index pos:start="101:27" pos:end="101:32">[<expr pos:start="101:28" pos:end="101:31"><literal type="number" pos:start="101:28" pos:end="101:31">0x58</literal></expr>]</index></name></expr></argument>, <argument pos:start="101:35" pos:end="101:35"><expr pos:start="101:35" pos:end="101:35"><literal type="number" pos:start="101:35" pos:end="101:35">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:46"><expr pos:start="103:5" pos:end="103:45"><call pos:start="103:5" pos:end="103:45"><name pos:start="103:5" pos:end="103:11">hex_log</name><argument_list pos:start="103:12" pos:end="103:45">(<argument pos:start="103:13" pos:end="103:13"><expr pos:start="103:13" pos:end="103:13"><name pos:start="103:13" pos:end="103:13">s</name></expr></argument>, <argument pos:start="103:16" pos:end="103:27"><expr pos:start="103:16" pos:end="103:27"><name pos:start="103:16" pos:end="103:27">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="103:30" pos:end="103:33"><expr pos:start="103:30" pos:end="103:33"><literal type="string" pos:start="103:30" pos:end="103:33">"IV"</literal></expr></argument>, <argument pos:start="103:36" pos:end="103:41"><expr pos:start="103:36" pos:end="103:41"><name pos:start="103:36" pos:end="103:41"><name pos:start="103:36" pos:end="103:37">oc</name><operator pos:start="103:38" pos:end="103:39">-&gt;</operator><name pos:start="103:40" pos:end="103:41">iv</name></name></expr></argument>, <argument pos:start="103:44" pos:end="103:44"><expr pos:start="103:44" pos:end="103:44"><literal type="number" pos:start="103:44" pos:end="103:44">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:105"><expr pos:start="107:5" pos:end="107:104"><call pos:start="107:5" pos:end="107:104"><name pos:start="107:5" pos:end="107:11">hex_log</name><argument_list pos:start="107:12" pos:end="107:104">(<argument pos:start="107:13" pos:end="107:13"><expr pos:start="107:13" pos:end="107:13"><name pos:start="107:13" pos:end="107:13">s</name></expr></argument>, <argument pos:start="107:16" pos:end="107:27"><expr pos:start="107:16" pos:end="107:27"><name pos:start="107:16" pos:end="107:27">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="107:30" pos:end="107:38"><expr pos:start="107:30" pos:end="107:38"><literal type="string" pos:start="107:30" pos:end="107:38">"CBC-MAC"</literal></expr></argument>, <argument pos:start="107:41" pos:end="107:100"><expr pos:start="107:41" pos:end="107:100"><operator pos:start="107:41" pos:end="107:41">&amp;</operator><name pos:start="107:42" pos:end="107:100"><name pos:start="107:42" pos:end="107:46">gdata</name><index pos:start="107:47" pos:end="107:100">[<expr pos:start="107:48" pos:end="107:99"><name pos:start="107:48" pos:end="107:66">OMA_ENC_HEADER_SIZE</name><operator pos:start="107:67" pos:end="107:67">+</operator><name pos:start="107:68" pos:end="107:77"><name pos:start="107:68" pos:end="107:69">oc</name><operator pos:start="107:70" pos:end="107:71">-&gt;</operator><name pos:start="107:72" pos:end="107:77">k_size</name></name><operator pos:start="107:78" pos:end="107:78">+</operator><name pos:start="107:79" pos:end="107:88"><name pos:start="107:79" pos:end="107:80">oc</name><operator pos:start="107:81" pos:end="107:82">-&gt;</operator><name pos:start="107:83" pos:end="107:88">e_size</name></name><operator pos:start="107:89" pos:end="107:89">+</operator><name pos:start="107:90" pos:end="107:99"><name pos:start="107:90" pos:end="107:91">oc</name><operator pos:start="107:92" pos:end="107:93">-&gt;</operator><name pos:start="107:94" pos:end="107:99">i_size</name></name></expr>]</index></name></expr></argument>, <argument pos:start="107:103" pos:end="107:103"><expr pos:start="107:103" pos:end="107:103"><literal type="number" pos:start="107:103" pos:end="107:103">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="111:5" pos:end="115:5"><if pos:start="111:5" pos:end="115:5">if <condition pos:start="111:8" pos:end="111:22">(<expr pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:17"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:17">keylen</name></name> <operator pos:start="111:19" pos:end="111:19">&gt;</operator> <literal type="number" pos:start="111:21" pos:end="111:21">0</literal></expr>)</condition> <block pos:start="111:24" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:43">

        <expr_stmt pos:start="113:9" pos:end="113:43"><expr pos:start="113:9" pos:end="113:42"><call pos:start="113:9" pos:end="113:42"><name pos:start="113:9" pos:end="113:12">kset</name><argument_list pos:start="113:13" pos:end="113:42">(<argument pos:start="113:14" pos:end="113:14"><expr pos:start="113:14" pos:end="113:14"><name pos:start="113:14" pos:end="113:14">s</name></expr></argument>, <argument pos:start="113:17" pos:end="113:22"><expr pos:start="113:17" pos:end="113:22"><name pos:start="113:17" pos:end="113:22"><name pos:start="113:17" pos:end="113:17">s</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:22">key</name></name></expr></argument>, <argument pos:start="113:25" pos:end="113:30"><expr pos:start="113:25" pos:end="113:30"><name pos:start="113:25" pos:end="113:30"><name pos:start="113:25" pos:end="113:25">s</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:30">key</name></name></expr></argument>, <argument pos:start="113:33" pos:end="113:41"><expr pos:start="113:33" pos:end="113:41"><name pos:start="113:33" pos:end="113:41"><name pos:start="113:33" pos:end="113:33">s</name><operator pos:start="113:34" pos:end="113:35">-&gt;</operator><name pos:start="113:36" pos:end="113:41">keylen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="117:5" pos:end="149:5"><if pos:start="117:5" pos:end="149:5">if <condition pos:start="117:8" pos:end="121:56">(<expr pos:start="117:9" pos:end="121:55"><operator pos:start="117:9" pos:end="117:9">!</operator><macro pos:start="117:10" pos:end="117:52"><name pos:start="117:10" pos:end="117:15">memcmp</name><argument_list pos:start="117:16" pos:end="117:52">(<argument pos:start="117:17" pos:end="117:25">oc-&gt;r_val</argument>, <argument pos:start="117:28" pos:end="117:48">(const uint8_t[<literal type="number" pos:start="117:43" pos:end="117:43">8</literal>]){<literal type="number" pos:start="117:47" pos:end="117:47">0</literal>}</argument>, <argument pos:start="117:51" pos:end="117:51"><literal type="number" pos:start="117:51" pos:end="117:51">8</literal></argument>)</argument_list></macro> <operator pos:start="117:54" pos:end="117:55">||</operator>

        <call pos:start="119:9" pos:end="119:35"><name pos:start="119:9" pos:end="119:14">rprobe</name><argument_list pos:start="119:15" pos:end="119:35">(<argument pos:start="119:16" pos:end="119:16"><expr pos:start="119:16" pos:end="119:16"><name pos:start="119:16" pos:end="119:16">s</name></expr></argument>, <argument pos:start="119:19" pos:end="119:23"><expr pos:start="119:19" pos:end="119:23"><name pos:start="119:19" pos:end="119:23">gdata</name></expr></argument>, <argument pos:start="119:26" pos:end="119:34"><expr pos:start="119:26" pos:end="119:34"><name pos:start="119:26" pos:end="119:34"><name pos:start="119:26" pos:end="119:27">oc</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:34">r_val</name></name></expr></argument>)</argument_list></call> <operator pos:start="119:37" pos:end="119:37">&lt;</operator> <literal type="number" pos:start="119:39" pos:end="119:39">0</literal> <operator pos:start="119:41" pos:end="119:42">&amp;&amp;</operator>

        <call pos:start="121:9" pos:end="121:51"><name pos:start="121:9" pos:end="121:14">nprobe</name><argument_list pos:start="121:15" pos:end="121:51">(<argument pos:start="121:16" pos:end="121:16"><expr pos:start="121:16" pos:end="121:16"><name pos:start="121:16" pos:end="121:16">s</name></expr></argument>, <argument pos:start="121:19" pos:end="121:23"><expr pos:start="121:19" pos:end="121:23"><name pos:start="121:19" pos:end="121:23">gdata</name></expr></argument>, <argument pos:start="121:26" pos:end="121:39"><expr pos:start="121:26" pos:end="121:39"><name pos:start="121:26" pos:end="121:39"><name pos:start="121:26" pos:end="121:29">geob</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:39">datasize</name></name></expr></argument>, <argument pos:start="121:42" pos:end="121:50"><expr pos:start="121:42" pos:end="121:50"><name pos:start="121:42" pos:end="121:50"><name pos:start="121:42" pos:end="121:43">oc</name><operator pos:start="121:44" pos:end="121:45">-&gt;</operator><name pos:start="121:46" pos:end="121:50">n_val</name></name></expr></argument>)</argument_list></call> <operator pos:start="121:53" pos:end="121:53">&lt;</operator> <literal type="number" pos:start="121:55" pos:end="121:55">0</literal></expr>)</condition> <block pos:start="121:58" pos:end="149:5">{<block_content pos:start="123:9" pos:end="147:9">

        <decl_stmt pos:start="123:9" pos:end="123:14"><decl pos:start="123:9" pos:end="123:13"><type pos:start="123:9" pos:end="123:11"><name pos:start="123:9" pos:end="123:11">int</name></type> <name pos:start="123:13" pos:end="123:13">i</name></decl>;</decl_stmt>

        <for pos:start="125:9" pos:end="139:9">for <control pos:start="125:13" pos:end="125:59">(<init pos:start="125:14" pos:end="125:19"><expr pos:start="125:14" pos:end="125:18"><name pos:start="125:14" pos:end="125:14">i</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <literal type="number" pos:start="125:18" pos:end="125:18">0</literal></expr>;</init> <condition pos:start="125:21" pos:end="125:51"><expr pos:start="125:21" pos:end="125:50"><name pos:start="125:21" pos:end="125:21">i</name> <operator pos:start="125:23" pos:end="125:23">&lt;</operator> <call pos:start="125:25" pos:end="125:50"><name pos:start="125:25" pos:end="125:38">FF_ARRAY_ELEMS</name><argument_list pos:start="125:39" pos:end="125:50">(<argument pos:start="125:40" pos:end="125:49"><expr pos:start="125:40" pos:end="125:49"><name pos:start="125:40" pos:end="125:49">leaf_table</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="125:53" pos:end="125:58"><expr pos:start="125:53" pos:end="125:58"><name pos:start="125:53" pos:end="125:53">i</name> <operator pos:start="125:55" pos:end="125:56">+=</operator> <literal type="number" pos:start="125:58" pos:end="125:58">2</literal></expr></incr>)</control> <block pos:start="125:61" pos:end="139:9">{<block_content pos:start="127:13" pos:end="137:22">

            <decl_stmt pos:start="127:13" pos:end="127:28"><decl pos:start="127:13" pos:end="127:27"><type pos:start="127:13" pos:end="127:19"><name pos:start="127:13" pos:end="127:19">uint8_t</name></type> <name pos:start="127:21" pos:end="127:27"><name pos:start="127:21" pos:end="127:23">buf</name><index pos:start="127:24" pos:end="127:27">[<expr pos:start="127:25" pos:end="127:26"><literal type="number" pos:start="127:25" pos:end="127:26">16</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:40"><expr pos:start="129:13" pos:end="129:39"><call pos:start="129:13" pos:end="129:39"><name pos:start="129:13" pos:end="129:19">AV_WL64</name><argument_list pos:start="129:20" pos:end="129:39">(<argument pos:start="129:21" pos:end="129:23"><expr pos:start="129:21" pos:end="129:23"><name pos:start="129:21" pos:end="129:23">buf</name></expr></argument>, <argument pos:start="129:26" pos:end="129:38"><expr pos:start="129:26" pos:end="129:38"><name pos:start="129:26" pos:end="129:38"><name pos:start="129:26" pos:end="129:35">leaf_table</name><index pos:start="129:36" pos:end="129:38">[<expr pos:start="129:37" pos:end="129:37"><name pos:start="129:37" pos:end="129:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:46"><expr pos:start="131:13" pos:end="131:45"><call pos:start="131:13" pos:end="131:45"><name pos:start="131:13" pos:end="131:19">AV_WL64</name><argument_list pos:start="131:20" pos:end="131:45">(<argument pos:start="131:21" pos:end="131:27"><expr pos:start="131:21" pos:end="131:27"><operator pos:start="131:21" pos:end="131:21">&amp;</operator><name pos:start="131:22" pos:end="131:27"><name pos:start="131:22" pos:end="131:24">buf</name><index pos:start="131:25" pos:end="131:27">[<expr pos:start="131:26" pos:end="131:26"><literal type="number" pos:start="131:26" pos:end="131:26">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="131:30" pos:end="131:44"><expr pos:start="131:30" pos:end="131:44"><name pos:start="131:30" pos:end="131:44"><name pos:start="131:30" pos:end="131:39">leaf_table</name><index pos:start="131:40" pos:end="131:44">[<expr pos:start="131:41" pos:end="131:43"><name pos:start="131:41" pos:end="131:41">i</name><operator pos:start="131:42" pos:end="131:42">+</operator><literal type="number" pos:start="131:43" pos:end="131:43">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:34"><expr pos:start="133:13" pos:end="133:33"><call pos:start="133:13" pos:end="133:33"><name pos:start="133:13" pos:end="133:16">kset</name><argument_list pos:start="133:17" pos:end="133:33">(<argument pos:start="133:18" pos:end="133:18"><expr pos:start="133:18" pos:end="133:18"><name pos:start="133:18" pos:end="133:18">s</name></expr></argument>, <argument pos:start="133:21" pos:end="133:23"><expr pos:start="133:21" pos:end="133:23"><name pos:start="133:21" pos:end="133:23">buf</name></expr></argument>, <argument pos:start="133:26" pos:end="133:28"><expr pos:start="133:26" pos:end="133:28"><name pos:start="133:26" pos:end="133:28">buf</name></expr></argument>, <argument pos:start="133:31" pos:end="133:32"><expr pos:start="133:31" pos:end="133:32"><literal type="number" pos:start="133:31" pos:end="133:32">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="135:13" pos:end="137:22"><if pos:start="135:13" pos:end="137:22">if <condition pos:start="135:16" pos:end="135:93">(<expr pos:start="135:17" pos:end="135:92"><operator pos:start="135:17" pos:end="135:17">!</operator><call pos:start="135:18" pos:end="135:44"><name pos:start="135:18" pos:end="135:23">rprobe</name><argument_list pos:start="135:24" pos:end="135:44">(<argument pos:start="135:25" pos:end="135:25"><expr pos:start="135:25" pos:end="135:25"><name pos:start="135:25" pos:end="135:25">s</name></expr></argument>, <argument pos:start="135:28" pos:end="135:32"><expr pos:start="135:28" pos:end="135:32"><name pos:start="135:28" pos:end="135:32">gdata</name></expr></argument>, <argument pos:start="135:35" pos:end="135:43"><expr pos:start="135:35" pos:end="135:43"><name pos:start="135:35" pos:end="135:43"><name pos:start="135:35" pos:end="135:36">oc</name><operator pos:start="135:37" pos:end="135:38">-&gt;</operator><name pos:start="135:39" pos:end="135:43">r_val</name></name></expr></argument>)</argument_list></call> <operator pos:start="135:46" pos:end="135:47">||</operator> <operator pos:start="135:49" pos:end="135:49">!</operator><call pos:start="135:50" pos:end="135:92"><name pos:start="135:50" pos:end="135:55">nprobe</name><argument_list pos:start="135:56" pos:end="135:92">(<argument pos:start="135:57" pos:end="135:57"><expr pos:start="135:57" pos:end="135:57"><name pos:start="135:57" pos:end="135:57">s</name></expr></argument>, <argument pos:start="135:60" pos:end="135:64"><expr pos:start="135:60" pos:end="135:64"><name pos:start="135:60" pos:end="135:64">gdata</name></expr></argument>, <argument pos:start="135:67" pos:end="135:80"><expr pos:start="135:67" pos:end="135:80"><name pos:start="135:67" pos:end="135:80"><name pos:start="135:67" pos:end="135:70">geob</name><operator pos:start="135:71" pos:end="135:72">-&gt;</operator><name pos:start="135:73" pos:end="135:80">datasize</name></name></expr></argument>, <argument pos:start="135:83" pos:end="135:91"><expr pos:start="135:83" pos:end="135:91"><name pos:start="135:83" pos:end="135:91"><name pos:start="135:83" pos:end="135:84">oc</name><operator pos:start="135:85" pos:end="135:86">-&gt;</operator><name pos:start="135:87" pos:end="135:91">n_val</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="137:17" pos:end="137:22"><block_content pos:start="137:17" pos:end="137:22">

                <break pos:start="137:17" pos:end="137:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="141:9" pos:end="147:9"><if pos:start="141:9" pos:end="147:9">if <condition pos:start="141:12" pos:end="141:44">(<expr pos:start="141:13" pos:end="141:43"><name pos:start="141:13" pos:end="141:13">i</name> <operator pos:start="141:15" pos:end="141:16">&gt;=</operator> <call pos:start="141:18" pos:end="141:43"><name pos:start="141:18" pos:end="141:31">FF_ARRAY_ELEMS</name><argument_list pos:start="141:32" pos:end="141:43">(<argument pos:start="141:33" pos:end="141:42"><expr pos:start="141:33" pos:end="141:42"><name pos:start="141:33" pos:end="141:42">leaf_table</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="141:46" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:22">

            <expr_stmt pos:start="143:13" pos:end="143:53"><expr pos:start="143:13" pos:end="143:52"><call pos:start="143:13" pos:end="143:52"><name pos:start="143:13" pos:end="143:18">av_log</name><argument_list pos:start="143:19" pos:end="143:52">(<argument pos:start="143:20" pos:end="143:20"><expr pos:start="143:20" pos:end="143:20"><name pos:start="143:20" pos:end="143:20">s</name></expr></argument>, <argument pos:start="143:23" pos:end="143:34"><expr pos:start="143:23" pos:end="143:34"><name pos:start="143:23" pos:end="143:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="143:37" pos:end="143:51"><expr pos:start="143:37" pos:end="143:51"><literal type="string" pos:start="143:37" pos:end="143:51">"Invalid key\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="145:13" pos:end="145:22">return <expr pos:start="145:20" pos:end="145:21"><operator pos:start="145:20" pos:end="145:20">-</operator><literal type="number" pos:start="145:21" pos:end="145:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="153:5" pos:end="153:15">/* e_val */</comment>

    <expr_stmt pos:start="155:5" pos:end="155:47"><expr pos:start="155:5" pos:end="155:46"><call pos:start="155:5" pos:end="155:46"><name pos:start="155:5" pos:end="155:15">av_des_init</name><argument_list pos:start="155:16" pos:end="155:46">(<argument pos:start="155:17" pos:end="155:27"><expr pos:start="155:17" pos:end="155:27"><operator pos:start="155:17" pos:end="155:17">&amp;</operator><name pos:start="155:18" pos:end="155:27"><name pos:start="155:18" pos:end="155:19">oc</name><operator pos:start="155:20" pos:end="155:21">-&gt;</operator><name pos:start="155:22" pos:end="155:27">av_des</name></name></expr></argument>, <argument pos:start="155:30" pos:end="155:38"><expr pos:start="155:30" pos:end="155:38"><name pos:start="155:30" pos:end="155:38"><name pos:start="155:30" pos:end="155:31">oc</name><operator pos:start="155:32" pos:end="155:33">-&gt;</operator><name pos:start="155:34" pos:end="155:38">m_val</name></name></expr></argument>, <argument pos:start="155:41" pos:end="155:42"><expr pos:start="155:41" pos:end="155:42"><literal type="number" pos:start="155:41" pos:end="155:42">64</literal></expr></argument>, <argument pos:start="155:45" pos:end="155:45"><expr pos:start="155:45" pos:end="155:45"><literal type="number" pos:start="155:45" pos:end="155:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:87"><expr pos:start="157:5" pos:end="157:86"><call pos:start="157:5" pos:end="157:86"><name pos:start="157:5" pos:end="157:16">av_des_crypt</name><argument_list pos:start="157:17" pos:end="157:86">(<argument pos:start="157:18" pos:end="157:28"><expr pos:start="157:18" pos:end="157:28"><operator pos:start="157:18" pos:end="157:18">&amp;</operator><name pos:start="157:19" pos:end="157:28"><name pos:start="157:19" pos:end="157:20">oc</name><operator pos:start="157:21" pos:end="157:22">-&gt;</operator><name pos:start="157:23" pos:end="157:28">av_des</name></name></expr></argument>, <argument pos:start="157:31" pos:end="157:39"><expr pos:start="157:31" pos:end="157:39"><name pos:start="157:31" pos:end="157:39"><name pos:start="157:31" pos:end="157:32">oc</name><operator pos:start="157:33" pos:end="157:34">-&gt;</operator><name pos:start="157:35" pos:end="157:39">e_val</name></name></expr></argument>, <argument pos:start="157:42" pos:end="157:73"><expr pos:start="157:42" pos:end="157:73"><operator pos:start="157:42" pos:end="157:42">&amp;</operator><name pos:start="157:43" pos:end="157:73"><name pos:start="157:43" pos:end="157:47">gdata</name><index pos:start="157:48" pos:end="157:73">[<expr pos:start="157:49" pos:end="157:72"><name pos:start="157:49" pos:end="157:67">OMA_ENC_HEADER_SIZE</name> <operator pos:start="157:69" pos:end="157:69">+</operator> <literal type="number" pos:start="157:71" pos:end="157:72">40</literal></expr>]</index></name></expr></argument>, <argument pos:start="157:76" pos:end="157:76"><expr pos:start="157:76" pos:end="157:76"><literal type="number" pos:start="157:76" pos:end="157:76">1</literal></expr></argument>, <argument pos:start="157:79" pos:end="157:82"><expr pos:start="157:79" pos:end="157:82"><name pos:start="157:79" pos:end="157:82">NULL</name></expr></argument>, <argument pos:start="157:85" pos:end="157:85"><expr pos:start="157:85" pos:end="157:85"><literal type="number" pos:start="157:85" pos:end="157:85">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:49"><expr pos:start="159:5" pos:end="159:48"><call pos:start="159:5" pos:end="159:48"><name pos:start="159:5" pos:end="159:11">hex_log</name><argument_list pos:start="159:12" pos:end="159:48">(<argument pos:start="159:13" pos:end="159:13"><expr pos:start="159:13" pos:end="159:13"><name pos:start="159:13" pos:end="159:13">s</name></expr></argument>, <argument pos:start="159:16" pos:end="159:27"><expr pos:start="159:16" pos:end="159:27"><name pos:start="159:16" pos:end="159:27">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="159:30" pos:end="159:33"><expr pos:start="159:30" pos:end="159:33"><literal type="string" pos:start="159:30" pos:end="159:33">"EK"</literal></expr></argument>, <argument pos:start="159:36" pos:end="159:44"><expr pos:start="159:36" pos:end="159:44"><name pos:start="159:36" pos:end="159:44"><name pos:start="159:36" pos:end="159:37">oc</name><operator pos:start="159:38" pos:end="159:39">-&gt;</operator><name pos:start="159:40" pos:end="159:44">e_val</name></name></expr></argument>, <argument pos:start="159:47" pos:end="159:47"><expr pos:start="159:47" pos:end="159:47"><literal type="number" pos:start="159:47" pos:end="159:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="163:5" pos:end="163:20">/* init e_val */</comment>

    <expr_stmt pos:start="165:5" pos:end="165:47"><expr pos:start="165:5" pos:end="165:46"><call pos:start="165:5" pos:end="165:46"><name pos:start="165:5" pos:end="165:15">av_des_init</name><argument_list pos:start="165:16" pos:end="165:46">(<argument pos:start="165:17" pos:end="165:27"><expr pos:start="165:17" pos:end="165:27"><operator pos:start="165:17" pos:end="165:17">&amp;</operator><name pos:start="165:18" pos:end="165:27"><name pos:start="165:18" pos:end="165:19">oc</name><operator pos:start="165:20" pos:end="165:21">-&gt;</operator><name pos:start="165:22" pos:end="165:27">av_des</name></name></expr></argument>, <argument pos:start="165:30" pos:end="165:38"><expr pos:start="165:30" pos:end="165:38"><name pos:start="165:30" pos:end="165:38"><name pos:start="165:30" pos:end="165:31">oc</name><operator pos:start="165:32" pos:end="165:33">-&gt;</operator><name pos:start="165:34" pos:end="165:38">e_val</name></name></expr></argument>, <argument pos:start="165:41" pos:end="165:42"><expr pos:start="165:41" pos:end="165:42"><literal type="number" pos:start="165:41" pos:end="165:42">64</literal></expr></argument>, <argument pos:start="165:45" pos:end="165:45"><expr pos:start="165:45" pos:end="165:45"><literal type="number" pos:start="165:45" pos:end="165:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="169:5" pos:end="169:13">return <expr pos:start="169:12" pos:end="169:12"><literal type="number" pos:start="169:12" pos:end="169:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
