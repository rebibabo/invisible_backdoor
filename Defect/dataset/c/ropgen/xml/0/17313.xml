<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17313.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">hid_keyboard_event</name><parameter_list pos:start="1:31" pos:end="3:47">(<parameter pos:start="1:32" pos:end="1:47"><decl pos:start="1:32" pos:end="1:47"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:42">DeviceState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dev</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:65"><decl pos:start="1:50" pos:end="1:65"><type pos:start="1:50" pos:end="1:65"><name pos:start="1:50" pos:end="1:60">QemuConsole</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">src</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:46"><decl pos:start="3:32" pos:end="3:46"><type pos:start="3:32" pos:end="3:46"><name pos:start="3:32" pos:end="3:41">InputEvent</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:46">evt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:18">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">HIDState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">hs</name> <init pos:start="7:18" pos:end="7:34">= <expr pos:start="7:20" pos:end="7:34"><operator pos:start="7:20" pos:end="7:20">(</operator><name pos:start="7:21" pos:end="7:28">HIDState</name> <operator pos:start="7:30" pos:end="7:30">*</operator><operator pos:start="7:31" pos:end="7:31">)</operator><name pos:start="7:32" pos:end="7:34">dev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:17">scancodes</name><index pos:start="9:18" pos:end="9:20">[<expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">3</literal></expr>]</index></name></decl>, <decl pos:start="9:23" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:23" pos:end="9:23">i</name></decl>, <decl pos:start="9:26" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:30">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">slot</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="19:56"><expr pos:start="15:5" pos:end="19:55"><name pos:start="15:5" pos:end="15:9">count</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="19:55"><name pos:start="15:13" pos:end="15:44">qemu_input_key_value_to_scancode</name><argument_list pos:start="15:45" pos:end="19:55">(<argument pos:start="15:46" pos:end="15:58"><expr pos:start="15:46" pos:end="15:58"><name pos:start="15:46" pos:end="15:58"><name pos:start="15:46" pos:end="15:48">evt</name><operator pos:start="15:49" pos:end="15:50">-&gt;</operator><name pos:start="15:51" pos:end="15:53">key</name><operator pos:start="15:54" pos:end="15:55">-&gt;</operator><name pos:start="15:56" pos:end="15:58">key</name></name></expr></argument>,

                                             <argument pos:start="17:46" pos:end="17:59"><expr pos:start="17:46" pos:end="17:59"><name pos:start="17:46" pos:end="17:59"><name pos:start="17:46" pos:end="17:48">evt</name><operator pos:start="17:49" pos:end="17:50">-&gt;</operator><name pos:start="17:51" pos:end="17:53">key</name><operator pos:start="17:54" pos:end="17:55">-&gt;</operator><name pos:start="17:56" pos:end="17:59">down</name></name></expr></argument>,

                                             <argument pos:start="19:46" pos:end="19:54"><expr pos:start="19:46" pos:end="19:54"><name pos:start="19:46" pos:end="19:54">scancodes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:37">(<expr pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:10">hs</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:13">n</name></name> <operator pos:start="21:15" pos:end="21:15">+</operator> <name pos:start="21:17" pos:end="21:21">count</name> <operator pos:start="21:23" pos:end="21:23">&gt;</operator> <name pos:start="21:25" pos:end="21:36">QUEUE_LENGTH</name></expr>)</condition> <block pos:start="21:39" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:68"><expr pos:start="23:9" pos:end="23:67"><call pos:start="23:9" pos:end="23:67"><name pos:start="23:9" pos:end="23:15">fprintf</name><argument_list pos:start="23:16" pos:end="23:67">(<argument pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">stderr</name></expr></argument>, <argument pos:start="23:25" pos:end="23:66"><expr pos:start="23:25" pos:end="23:66"><literal type="string" pos:start="23:25" pos:end="23:66">"usb-kbd: warning: key event queue full\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="29:5" pos:end="35:5">for <control pos:start="29:9" pos:end="29:31">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:26"><expr pos:start="29:17" pos:end="29:25"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:25">count</name></expr>;</condition> <incr pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:28">i</name><operator pos:start="29:29" pos:end="29:30">++</operator></expr></incr>)</control> <block pos:start="29:33" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:46">

        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:12">slot</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <operator pos:start="31:16" pos:end="31:16">(</operator><name pos:start="31:17" pos:end="31:24"><name pos:start="31:17" pos:end="31:18">hs</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:24">head</name></name> <operator pos:start="31:26" pos:end="31:26">+</operator> <name pos:start="31:28" pos:end="31:32"><name pos:start="31:28" pos:end="31:29">hs</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:32">n</name></name><operator pos:start="31:33" pos:end="31:33">)</operator> <operator pos:start="31:35" pos:end="31:35">&amp;</operator> <name pos:start="31:37" pos:end="31:46">QUEUE_MASK</name></expr>;</expr_stmt> <expr_stmt pos:start="31:49" pos:end="31:56"><expr pos:start="31:49" pos:end="31:55"><name pos:start="31:49" pos:end="31:53"><name pos:start="31:49" pos:end="31:50">hs</name><operator pos:start="31:51" pos:end="31:52">-&gt;</operator><name pos:start="31:53" pos:end="31:53">n</name></name><operator pos:start="31:54" pos:end="31:55">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:46"><expr pos:start="33:9" pos:end="33:45"><name pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:10">hs</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:15">kbd</name><operator pos:start="33:16" pos:end="33:16">.</operator><name pos:start="33:17" pos:end="33:24">keycodes</name><index pos:start="33:25" pos:end="33:30">[<expr pos:start="33:26" pos:end="33:29"><name pos:start="33:26" pos:end="33:29">slot</name></expr>]</index></name> <operator pos:start="33:32" pos:end="33:32">=</operator> <name pos:start="33:34" pos:end="33:45"><name pos:start="33:34" pos:end="33:42">scancodes</name><index pos:start="33:43" pos:end="33:45">[<expr pos:start="33:44" pos:end="33:44"><name pos:start="33:44" pos:end="33:44">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="37:5" pos:end="37:18"><expr pos:start="37:5" pos:end="37:17"><call pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:6">hs</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:13">event</name></name><argument_list pos:start="37:14" pos:end="37:17">(<argument pos:start="37:15" pos:end="37:16"><expr pos:start="37:15" pos:end="37:16"><name pos:start="37:15" pos:end="37:16">hs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
