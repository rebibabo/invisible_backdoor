<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11663.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">queue_picture</name><parameter_list pos:start="1:25" pos:end="1:72">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:35">VideoState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">is</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:59"><decl pos:start="1:42" pos:end="1:59"><type pos:start="1:42" pos:end="1:59"><name pos:start="1:42" pos:end="1:48">AVFrame</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:59">src_frame</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:71"><decl pos:start="1:62" pos:end="1:71"><type pos:start="1:62" pos:end="1:71"><name pos:start="1:62" pos:end="1:67">double</name></type> <name pos:start="1:69" pos:end="1:71">pts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="167:1">{<block_content pos:start="5:5" pos:end="165:13">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">VideoPicture</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">vp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">dst_pix_fmt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">AVPicture</name></type> <name pos:start="9:15" pos:end="9:18">pict</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:30"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <name pos:start="11:12" pos:end="11:28"><name pos:start="11:12" pos:end="11:17">struct</name> <name pos:start="11:19" pos:end="11:28">SwsContext</name></name> <modifier pos:start="11:30" pos:end="11:30">*</modifier></type><name pos:start="11:31" pos:end="11:45">img_convert_ctx</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:55">/* wait until we have space to put a new picture */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><call pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:17">SDL_LockMutex</name><argument_list pos:start="17:18" pos:end="17:34">(<argument pos:start="17:19" pos:end="17:33"><expr pos:start="17:19" pos:end="17:33"><name pos:start="17:19" pos:end="17:33"><name pos:start="17:19" pos:end="17:20">is</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:33">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="25:5">while <condition pos:start="19:11" pos:end="21:37">(<expr pos:start="19:12" pos:end="21:36"><name pos:start="19:12" pos:end="19:25"><name pos:start="19:12" pos:end="19:13">is</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:25">pictq_size</name></name> <operator pos:start="19:27" pos:end="19:28">&gt;=</operator> <name pos:start="19:30" pos:end="19:53">VIDEO_PICTURE_QUEUE_SIZE</name> <operator pos:start="19:55" pos:end="19:56">&amp;&amp;</operator>

           <operator pos:start="21:12" pos:end="21:12">!</operator><name pos:start="21:13" pos:end="21:36"><name pos:start="21:13" pos:end="21:14">is</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:22">videoq</name><operator pos:start="21:23" pos:end="21:23">.</operator><name pos:start="21:24" pos:end="21:36">abort_request</name></name></expr>)</condition> <block pos:start="21:39" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:54">

        <expr_stmt pos:start="23:9" pos:end="23:54"><expr pos:start="23:9" pos:end="23:53"><call pos:start="23:9" pos:end="23:53"><name pos:start="23:9" pos:end="23:20">SDL_CondWait</name><argument_list pos:start="23:21" pos:end="23:53">(<argument pos:start="23:22" pos:end="23:35"><expr pos:start="23:22" pos:end="23:35"><name pos:start="23:22" pos:end="23:35"><name pos:start="23:22" pos:end="23:23">is</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:35">pictq_cond</name></name></expr></argument>, <argument pos:start="23:38" pos:end="23:52"><expr pos:start="23:38" pos:end="23:52"><name pos:start="23:38" pos:end="23:52"><name pos:start="23:38" pos:end="23:39">is</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:52">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><call pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:19">SDL_UnlockMutex</name><argument_list pos:start="27:20" pos:end="27:36">(<argument pos:start="27:21" pos:end="27:35"><expr pos:start="27:21" pos:end="27:35"><name pos:start="27:21" pos:end="27:35"><name pos:start="27:21" pos:end="27:22">is</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:35">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="33:18"><if pos:start="31:5" pos:end="33:18">if <condition pos:start="31:8" pos:end="31:33">(<expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:10">is</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:18">videoq</name><operator pos:start="31:19" pos:end="31:19">.</operator><name pos:start="31:20" pos:end="31:32">abort_request</name></name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:18"><block_content pos:start="33:9" pos:end="33:18">

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:38"><expr pos:start="37:5" pos:end="37:37"><name pos:start="37:5" pos:end="37:6">vp</name> <operator pos:start="37:8" pos:end="37:8">=</operator> <operator pos:start="37:10" pos:end="37:10">&amp;</operator><name pos:start="37:11" pos:end="37:37"><name pos:start="37:11" pos:end="37:12">is</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:19">pictq</name><index pos:start="37:20" pos:end="37:37">[<expr pos:start="37:21" pos:end="37:36"><name pos:start="37:21" pos:end="37:36"><name pos:start="37:21" pos:end="37:22">is</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:36">pictq_windex</name></name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:49">/* alloc or resize hardware picture buffer */</comment>

    <if_stmt pos:start="43:5" pos:end="87:5"><if pos:start="43:5" pos:end="87:5">if <condition pos:start="43:8" pos:end="47:50">(<expr pos:start="43:9" pos:end="47:49"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:16"><name pos:start="43:10" pos:end="43:11">vp</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:16">bmp</name></name> <operator pos:start="43:18" pos:end="43:19">||</operator>

        <name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:10">vp</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:17">width</name></name> <operator pos:start="45:19" pos:end="45:20">!=</operator> <name pos:start="45:22" pos:end="45:47"><name pos:start="45:22" pos:end="45:23">is</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:33">video_st</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:40">codec</name><operator pos:start="45:41" pos:end="45:42">-&gt;</operator><name pos:start="45:43" pos:end="45:47">width</name></name> <operator pos:start="45:49" pos:end="45:50">||</operator>

        <name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:10">vp</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:18">height</name></name> <operator pos:start="47:20" pos:end="47:21">!=</operator> <name pos:start="47:23" pos:end="47:49"><name pos:start="47:23" pos:end="47:24">is</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:34">video_st</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:41">codec</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:49">height</name></name></expr>)</condition> <block pos:start="47:52" pos:end="87:5">{<block_content pos:start="49:9" pos:end="85:22">

        <decl_stmt pos:start="49:9" pos:end="49:24"><decl pos:start="49:9" pos:end="49:23"><type pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:17">SDL_Event</name></type> <name pos:start="49:19" pos:end="49:23">event</name></decl>;</decl_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:26"><expr pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:10">vp</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:21">allocated</name></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <literal type="number" pos:start="53:25" pos:end="53:25">0</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="57:9" pos:end="59:30">/* the allocation must be done in the main thread to avoid

           locking problems */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:36"><expr pos:start="61:9" pos:end="61:35"><name pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:13">event</name><operator pos:start="61:14" pos:end="61:14">.</operator><name pos:start="61:15" pos:end="61:18">type</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:35">FF_ALLOC_EVENT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:30"><expr pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:13">event</name><operator pos:start="63:14" pos:end="63:14">.</operator><name pos:start="63:15" pos:end="63:18">user</name><operator pos:start="63:19" pos:end="63:19">.</operator><name pos:start="63:20" pos:end="63:24">data1</name></name> <operator pos:start="63:26" pos:end="63:26">=</operator> <name pos:start="63:28" pos:end="63:29">is</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:29"><call pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:21">SDL_PushEvent</name><argument_list pos:start="65:22" pos:end="65:29">(<argument pos:start="65:23" pos:end="65:28"><expr pos:start="65:23" pos:end="65:28"><operator pos:start="65:23" pos:end="65:23">&amp;</operator><name pos:start="65:24" pos:end="65:28">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="69:9" pos:end="69:49">/* wait until the picture is allocated */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:39"><expr pos:start="71:9" pos:end="71:38"><call pos:start="71:9" pos:end="71:38"><name pos:start="71:9" pos:end="71:21">SDL_LockMutex</name><argument_list pos:start="71:22" pos:end="71:38">(<argument pos:start="71:23" pos:end="71:37"><expr pos:start="71:23" pos:end="71:37"><name pos:start="71:23" pos:end="71:37"><name pos:start="71:23" pos:end="71:24">is</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:37">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="73:9" pos:end="77:9">while <condition pos:start="73:15" pos:end="73:59">(<expr pos:start="73:16" pos:end="73:58"><operator pos:start="73:16" pos:end="73:16">!</operator><name pos:start="73:17" pos:end="73:29"><name pos:start="73:17" pos:end="73:18">vp</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:29">allocated</name></name> <operator pos:start="73:31" pos:end="73:32">&amp;&amp;</operator> <operator pos:start="73:34" pos:end="73:34">!</operator><name pos:start="73:35" pos:end="73:58"><name pos:start="73:35" pos:end="73:36">is</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:44">videoq</name><operator pos:start="73:45" pos:end="73:45">.</operator><name pos:start="73:46" pos:end="73:58">abort_request</name></name></expr>)</condition> <block pos:start="73:61" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:58">

            <expr_stmt pos:start="75:13" pos:end="75:58"><expr pos:start="75:13" pos:end="75:57"><call pos:start="75:13" pos:end="75:57"><name pos:start="75:13" pos:end="75:24">SDL_CondWait</name><argument_list pos:start="75:25" pos:end="75:57">(<argument pos:start="75:26" pos:end="75:39"><expr pos:start="75:26" pos:end="75:39"><name pos:start="75:26" pos:end="75:39"><name pos:start="75:26" pos:end="75:27">is</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:39">pictq_cond</name></name></expr></argument>, <argument pos:start="75:42" pos:end="75:56"><expr pos:start="75:42" pos:end="75:56"><name pos:start="75:42" pos:end="75:56"><name pos:start="75:42" pos:end="75:43">is</name><operator pos:start="75:44" pos:end="75:45">-&gt;</operator><name pos:start="75:46" pos:end="75:56">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="79:9" pos:end="79:41"><expr pos:start="79:9" pos:end="79:40"><call pos:start="79:9" pos:end="79:40"><name pos:start="79:9" pos:end="79:23">SDL_UnlockMutex</name><argument_list pos:start="79:24" pos:end="79:40">(<argument pos:start="79:25" pos:end="79:39"><expr pos:start="79:25" pos:end="79:39"><name pos:start="79:25" pos:end="79:39"><name pos:start="79:25" pos:end="79:26">is</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:39">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="83:9" pos:end="85:22"><if pos:start="83:9" pos:end="85:22">if <condition pos:start="83:12" pos:end="83:37">(<expr pos:start="83:13" pos:end="83:36"><name pos:start="83:13" pos:end="83:36"><name pos:start="83:13" pos:end="83:14">is</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:22">videoq</name><operator pos:start="83:23" pos:end="83:23">.</operator><name pos:start="83:24" pos:end="83:36">abort_request</name></name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:22"><block_content pos:start="85:13" pos:end="85:22">

            <return pos:start="85:13" pos:end="85:22">return <expr pos:start="85:20" pos:end="85:21"><operator pos:start="85:20" pos:end="85:20">-</operator><literal type="number" pos:start="85:21" pos:end="85:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="91:5" pos:end="91:54">/* if the frame is not skipped, then display it */</comment>

    <if_stmt pos:start="93:5" pos:end="163:5"><if pos:start="93:5" pos:end="163:5">if <condition pos:start="93:8" pos:end="93:16">(<expr pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:10">vp</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:15">bmp</name></name></expr>)</condition> <block pos:start="93:18" pos:end="163:5">{<block_content pos:start="97:9" pos:end="161:41">

        <comment type="block" pos:start="95:9" pos:end="95:41">/* get a pointer on the bitmap */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:37"><expr pos:start="97:9" pos:end="97:36"><call pos:start="97:9" pos:end="97:36"><name pos:start="97:9" pos:end="97:26">SDL_LockYUVOverlay</name> <argument_list pos:start="97:28" pos:end="97:36">(<argument pos:start="97:29" pos:end="97:35"><expr pos:start="97:29" pos:end="97:35"><name pos:start="97:29" pos:end="97:35"><name pos:start="97:29" pos:end="97:30">vp</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:35">bmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:38"><expr pos:start="101:9" pos:end="101:37"><name pos:start="101:9" pos:end="101:19">dst_pix_fmt</name> <operator pos:start="101:21" pos:end="101:21">=</operator> <name pos:start="101:23" pos:end="101:37">PIX_FMT_YUV420P</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:42"><expr pos:start="103:9" pos:end="103:41"><name pos:start="103:9" pos:end="103:20"><name pos:start="103:9" pos:end="103:12">pict</name><operator pos:start="103:13" pos:end="103:13">.</operator><name pos:start="103:14" pos:end="103:17">data</name><index pos:start="103:18" pos:end="103:20">[<expr pos:start="103:19" pos:end="103:19"><literal type="number" pos:start="103:19" pos:end="103:19">0</literal></expr>]</index></name> <operator pos:start="103:22" pos:end="103:22">=</operator> <name pos:start="103:24" pos:end="103:41"><name pos:start="103:24" pos:end="103:25">vp</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:30">bmp</name><operator pos:start="103:31" pos:end="103:32">-&gt;</operator><name pos:start="103:33" pos:end="103:38">pixels</name><index pos:start="103:39" pos:end="103:41">[<expr pos:start="103:40" pos:end="103:40"><literal type="number" pos:start="103:40" pos:end="103:40">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:42"><expr pos:start="105:9" pos:end="105:41"><name pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:12">pict</name><operator pos:start="105:13" pos:end="105:13">.</operator><name pos:start="105:14" pos:end="105:17">data</name><index pos:start="105:18" pos:end="105:20">[<expr pos:start="105:19" pos:end="105:19"><literal type="number" pos:start="105:19" pos:end="105:19">1</literal></expr>]</index></name> <operator pos:start="105:22" pos:end="105:22">=</operator> <name pos:start="105:24" pos:end="105:41"><name pos:start="105:24" pos:end="105:25">vp</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:30">bmp</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:38">pixels</name><index pos:start="105:39" pos:end="105:41">[<expr pos:start="105:40" pos:end="105:40"><literal type="number" pos:start="105:40" pos:end="105:40">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:42"><expr pos:start="107:9" pos:end="107:41"><name pos:start="107:9" pos:end="107:20"><name pos:start="107:9" pos:end="107:12">pict</name><operator pos:start="107:13" pos:end="107:13">.</operator><name pos:start="107:14" pos:end="107:17">data</name><index pos:start="107:18" pos:end="107:20">[<expr pos:start="107:19" pos:end="107:19"><literal type="number" pos:start="107:19" pos:end="107:19">2</literal></expr>]</index></name> <operator pos:start="107:22" pos:end="107:22">=</operator> <name pos:start="107:24" pos:end="107:41"><name pos:start="107:24" pos:end="107:25">vp</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:30">bmp</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:38">pixels</name><index pos:start="107:39" pos:end="107:41">[<expr pos:start="107:40" pos:end="107:40"><literal type="number" pos:start="107:40" pos:end="107:40">1</literal></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:47"><expr pos:start="111:9" pos:end="111:46"><name pos:start="111:9" pos:end="111:24"><name pos:start="111:9" pos:end="111:12">pict</name><operator pos:start="111:13" pos:end="111:13">.</operator><name pos:start="111:14" pos:end="111:21">linesize</name><index pos:start="111:22" pos:end="111:24">[<expr pos:start="111:23" pos:end="111:23"><literal type="number" pos:start="111:23" pos:end="111:23">0</literal></expr>]</index></name> <operator pos:start="111:26" pos:end="111:26">=</operator> <name pos:start="111:28" pos:end="111:46"><name pos:start="111:28" pos:end="111:29">vp</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:34">bmp</name><operator pos:start="111:35" pos:end="111:36">-&gt;</operator><name pos:start="111:37" pos:end="111:43">pitches</name><index pos:start="111:44" pos:end="111:46">[<expr pos:start="111:45" pos:end="111:45"><literal type="number" pos:start="111:45" pos:end="111:45">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:47"><expr pos:start="113:9" pos:end="113:46"><name pos:start="113:9" pos:end="113:24"><name pos:start="113:9" pos:end="113:12">pict</name><operator pos:start="113:13" pos:end="113:13">.</operator><name pos:start="113:14" pos:end="113:21">linesize</name><index pos:start="113:22" pos:end="113:24">[<expr pos:start="113:23" pos:end="113:23"><literal type="number" pos:start="113:23" pos:end="113:23">1</literal></expr>]</index></name> <operator pos:start="113:26" pos:end="113:26">=</operator> <name pos:start="113:28" pos:end="113:46"><name pos:start="113:28" pos:end="113:29">vp</name><operator pos:start="113:30" pos:end="113:31">-&gt;</operator><name pos:start="113:32" pos:end="113:34">bmp</name><operator pos:start="113:35" pos:end="113:36">-&gt;</operator><name pos:start="113:37" pos:end="113:43">pitches</name><index pos:start="113:44" pos:end="113:46">[<expr pos:start="113:45" pos:end="113:45"><literal type="number" pos:start="113:45" pos:end="113:45">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:47"><expr pos:start="115:9" pos:end="115:46"><name pos:start="115:9" pos:end="115:24"><name pos:start="115:9" pos:end="115:12">pict</name><operator pos:start="115:13" pos:end="115:13">.</operator><name pos:start="115:14" pos:end="115:21">linesize</name><index pos:start="115:22" pos:end="115:24">[<expr pos:start="115:23" pos:end="115:23"><literal type="number" pos:start="115:23" pos:end="115:23">2</literal></expr>]</index></name> <operator pos:start="115:26" pos:end="115:26">=</operator> <name pos:start="115:28" pos:end="115:46"><name pos:start="115:28" pos:end="115:29">vp</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:34">bmp</name><operator pos:start="115:35" pos:end="115:36">-&gt;</operator><name pos:start="115:37" pos:end="115:43">pitches</name><index pos:start="115:44" pos:end="115:46">[<expr pos:start="115:45" pos:end="115:45"><literal type="number" pos:start="115:45" pos:end="115:45">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:60"><expr pos:start="117:9" pos:end="117:59"><name pos:start="117:9" pos:end="117:17">sws_flags</name> <operator pos:start="117:19" pos:end="117:19">=</operator> <call pos:start="117:21" pos:end="117:59"><name pos:start="117:21" pos:end="117:30">av_get_int</name><argument_list pos:start="117:31" pos:end="117:59">(<argument pos:start="117:32" pos:end="117:39"><expr pos:start="117:32" pos:end="117:39"><name pos:start="117:32" pos:end="117:39">sws_opts</name></expr></argument>, <argument pos:start="117:42" pos:end="117:52"><expr pos:start="117:42" pos:end="117:52"><literal type="string" pos:start="117:42" pos:end="117:52">"sws_flags"</literal></expr></argument>, <argument pos:start="117:55" pos:end="117:58"><expr pos:start="117:55" pos:end="117:58"><name pos:start="117:55" pos:end="117:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="127:54"><expr pos:start="119:9" pos:end="127:53"><name pos:start="119:9" pos:end="119:23">img_convert_ctx</name> <operator pos:start="119:25" pos:end="119:25">=</operator> <call pos:start="119:27" pos:end="127:53"><name pos:start="119:27" pos:end="119:46">sws_getCachedContext</name><argument_list pos:start="119:47" pos:end="127:53">(<argument pos:start="119:48" pos:end="119:62"><expr pos:start="119:48" pos:end="119:62"><name pos:start="119:48" pos:end="119:62">img_convert_ctx</name></expr></argument>,

            <argument pos:start="121:13" pos:end="121:38"><expr pos:start="121:13" pos:end="121:38"><name pos:start="121:13" pos:end="121:38"><name pos:start="121:13" pos:end="121:14">is</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:24">video_st</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:31">codec</name><operator pos:start="121:32" pos:end="121:33">-&gt;</operator><name pos:start="121:34" pos:end="121:38">width</name></name></expr></argument>, <argument pos:start="121:41" pos:end="121:67"><expr pos:start="121:41" pos:end="121:67"><name pos:start="121:41" pos:end="121:67"><name pos:start="121:41" pos:end="121:42">is</name><operator pos:start="121:43" pos:end="121:44">-&gt;</operator><name pos:start="121:45" pos:end="121:52">video_st</name><operator pos:start="121:53" pos:end="121:54">-&gt;</operator><name pos:start="121:55" pos:end="121:59">codec</name><operator pos:start="121:60" pos:end="121:61">-&gt;</operator><name pos:start="121:62" pos:end="121:67">height</name></name></expr></argument>,

            <argument pos:start="123:13" pos:end="123:40"><expr pos:start="123:13" pos:end="123:40"><name pos:start="123:13" pos:end="123:40"><name pos:start="123:13" pos:end="123:14">is</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:24">video_st</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:31">codec</name><operator pos:start="123:32" pos:end="123:33">-&gt;</operator><name pos:start="123:34" pos:end="123:40">pix_fmt</name></name></expr></argument>,

            <argument pos:start="125:13" pos:end="125:38"><expr pos:start="125:13" pos:end="125:38"><name pos:start="125:13" pos:end="125:38"><name pos:start="125:13" pos:end="125:14">is</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:24">video_st</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:31">codec</name><operator pos:start="125:32" pos:end="125:33">-&gt;</operator><name pos:start="125:34" pos:end="125:38">width</name></name></expr></argument>, <argument pos:start="125:41" pos:end="125:67"><expr pos:start="125:41" pos:end="125:67"><name pos:start="125:41" pos:end="125:67"><name pos:start="125:41" pos:end="125:42">is</name><operator pos:start="125:43" pos:end="125:44">-&gt;</operator><name pos:start="125:45" pos:end="125:52">video_st</name><operator pos:start="125:53" pos:end="125:54">-&gt;</operator><name pos:start="125:55" pos:end="125:59">codec</name><operator pos:start="125:60" pos:end="125:61">-&gt;</operator><name pos:start="125:62" pos:end="125:67">height</name></name></expr></argument>,

            <argument pos:start="127:13" pos:end="127:23"><expr pos:start="127:13" pos:end="127:23"><name pos:start="127:13" pos:end="127:23">dst_pix_fmt</name></expr></argument>, <argument pos:start="127:26" pos:end="127:34"><expr pos:start="127:26" pos:end="127:34"><name pos:start="127:26" pos:end="127:34">sws_flags</name></expr></argument>, <argument pos:start="127:37" pos:end="127:40"><expr pos:start="127:37" pos:end="127:40"><name pos:start="127:37" pos:end="127:40">NULL</name></expr></argument>, <argument pos:start="127:43" pos:end="127:46"><expr pos:start="127:43" pos:end="127:46"><name pos:start="127:43" pos:end="127:46">NULL</name></expr></argument>, <argument pos:start="127:49" pos:end="127:52"><expr pos:start="127:49" pos:end="127:52"><name pos:start="127:49" pos:end="127:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="135:9"><if pos:start="129:9" pos:end="135:9">if <condition pos:start="129:12" pos:end="129:36">(<expr pos:start="129:13" pos:end="129:35"><name pos:start="129:13" pos:end="129:27">img_convert_ctx</name> <operator pos:start="129:29" pos:end="129:30">==</operator> <name pos:start="129:32" pos:end="129:35">NULL</name></expr>)</condition> <block pos:start="129:38" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:20">

            <expr_stmt pos:start="131:13" pos:end="131:74"><expr pos:start="131:13" pos:end="131:73"><call pos:start="131:13" pos:end="131:73"><name pos:start="131:13" pos:end="131:19">fprintf</name><argument_list pos:start="131:20" pos:end="131:73">(<argument pos:start="131:21" pos:end="131:26"><expr pos:start="131:21" pos:end="131:26"><name pos:start="131:21" pos:end="131:26">stderr</name></expr></argument>, <argument pos:start="131:29" pos:end="131:72"><expr pos:start="131:29" pos:end="131:72"><literal type="string" pos:start="131:29" pos:end="131:72">"Cannot initialize the conversion context\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:20"><expr pos:start="133:13" pos:end="133:19"><call pos:start="133:13" pos:end="133:19"><name pos:start="133:13" pos:end="133:16">exit</name><argument_list pos:start="133:17" pos:end="133:19">(<argument pos:start="133:18" pos:end="133:18"><expr pos:start="133:18" pos:end="133:18"><literal type="number" pos:start="133:18" pos:end="133:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="137:9" pos:end="139:76"><expr pos:start="137:9" pos:end="139:75"><call pos:start="137:9" pos:end="139:75"><name pos:start="137:9" pos:end="137:17">sws_scale</name><argument_list pos:start="137:18" pos:end="139:75">(<argument pos:start="137:19" pos:end="137:33"><expr pos:start="137:19" pos:end="137:33"><name pos:start="137:19" pos:end="137:33">img_convert_ctx</name></expr></argument>, <argument pos:start="137:36" pos:end="137:50"><expr pos:start="137:36" pos:end="137:50"><name pos:start="137:36" pos:end="137:50"><name pos:start="137:36" pos:end="137:44">src_frame</name><operator pos:start="137:45" pos:end="137:46">-&gt;</operator><name pos:start="137:47" pos:end="137:50">data</name></name></expr></argument>, <argument pos:start="137:53" pos:end="137:71"><expr pos:start="137:53" pos:end="137:71"><name pos:start="137:53" pos:end="137:71"><name pos:start="137:53" pos:end="137:61">src_frame</name><operator pos:start="137:62" pos:end="137:63">-&gt;</operator><name pos:start="137:64" pos:end="137:71">linesize</name></name></expr></argument>,

                  <argument pos:start="139:19" pos:end="139:19"><expr pos:start="139:19" pos:end="139:19"><literal type="number" pos:start="139:19" pos:end="139:19">0</literal></expr></argument>, <argument pos:start="139:22" pos:end="139:48"><expr pos:start="139:22" pos:end="139:48"><name pos:start="139:22" pos:end="139:48"><name pos:start="139:22" pos:end="139:23">is</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:33">video_st</name><operator pos:start="139:34" pos:end="139:35">-&gt;</operator><name pos:start="139:36" pos:end="139:40">codec</name><operator pos:start="139:41" pos:end="139:42">-&gt;</operator><name pos:start="139:43" pos:end="139:48">height</name></name></expr></argument>, <argument pos:start="139:51" pos:end="139:59"><expr pos:start="139:51" pos:end="139:59"><name pos:start="139:51" pos:end="139:59"><name pos:start="139:51" pos:end="139:54">pict</name><operator pos:start="139:55" pos:end="139:55">.</operator><name pos:start="139:56" pos:end="139:59">data</name></name></expr></argument>, <argument pos:start="139:62" pos:end="139:74"><expr pos:start="139:62" pos:end="139:74"><name pos:start="139:62" pos:end="139:74"><name pos:start="139:62" pos:end="139:65">pict</name><operator pos:start="139:66" pos:end="139:66">.</operator><name pos:start="139:67" pos:end="139:74">linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="141:9" pos:end="141:39">/* update the bitmap content */</comment>

        <expr_stmt pos:start="143:9" pos:end="143:38"><expr pos:start="143:9" pos:end="143:37"><call pos:start="143:9" pos:end="143:37"><name pos:start="143:9" pos:end="143:28">SDL_UnlockYUVOverlay</name><argument_list pos:start="143:29" pos:end="143:37">(<argument pos:start="143:30" pos:end="143:36"><expr pos:start="143:30" pos:end="143:36"><name pos:start="143:30" pos:end="143:36"><name pos:start="143:30" pos:end="143:31">vp</name><operator pos:start="143:32" pos:end="143:33">-&gt;</operator><name pos:start="143:34" pos:end="143:36">bmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="147:9" pos:end="147:22"><expr pos:start="147:9" pos:end="147:21"><name pos:start="147:9" pos:end="147:15"><name pos:start="147:9" pos:end="147:10">vp</name><operator pos:start="147:11" pos:end="147:12">-&gt;</operator><name pos:start="147:13" pos:end="147:15">pts</name></name> <operator pos:start="147:17" pos:end="147:17">=</operator> <name pos:start="147:19" pos:end="147:21">pts</name></expr>;</expr_stmt>



        <comment type="block" pos:start="151:9" pos:end="151:49">/* now we can update the picture count */</comment>

        <if_stmt pos:start="153:9" pos:end="155:33"><if pos:start="153:9" pos:end="155:33">if <condition pos:start="153:12" pos:end="153:59">(<expr pos:start="153:13" pos:end="153:58"><operator pos:start="153:13" pos:end="153:14">++</operator><name pos:start="153:15" pos:end="153:30"><name pos:start="153:15" pos:end="153:16">is</name><operator pos:start="153:17" pos:end="153:18">-&gt;</operator><name pos:start="153:19" pos:end="153:30">pictq_windex</name></name> <operator pos:start="153:32" pos:end="153:33">==</operator> <name pos:start="153:35" pos:end="153:58">VIDEO_PICTURE_QUEUE_SIZE</name></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="155:33"><block_content pos:start="155:13" pos:end="155:33">

            <expr_stmt pos:start="155:13" pos:end="155:33"><expr pos:start="155:13" pos:end="155:32"><name pos:start="155:13" pos:end="155:28"><name pos:start="155:13" pos:end="155:14">is</name><operator pos:start="155:15" pos:end="155:16">-&gt;</operator><name pos:start="155:17" pos:end="155:28">pictq_windex</name></name> <operator pos:start="155:30" pos:end="155:30">=</operator> <literal type="number" pos:start="155:32" pos:end="155:32">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:39"><expr pos:start="157:9" pos:end="157:38"><call pos:start="157:9" pos:end="157:38"><name pos:start="157:9" pos:end="157:21">SDL_LockMutex</name><argument_list pos:start="157:22" pos:end="157:38">(<argument pos:start="157:23" pos:end="157:37"><expr pos:start="157:23" pos:end="157:37"><name pos:start="157:23" pos:end="157:37"><name pos:start="157:23" pos:end="157:24">is</name><operator pos:start="157:25" pos:end="157:26">-&gt;</operator><name pos:start="157:27" pos:end="157:37">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:25"><expr pos:start="159:9" pos:end="159:24"><name pos:start="159:9" pos:end="159:22"><name pos:start="159:9" pos:end="159:10">is</name><operator pos:start="159:11" pos:end="159:12">-&gt;</operator><name pos:start="159:13" pos:end="159:22">pictq_size</name></name><operator pos:start="159:23" pos:end="159:24">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:41"><expr pos:start="161:9" pos:end="161:40"><call pos:start="161:9" pos:end="161:40"><name pos:start="161:9" pos:end="161:23">SDL_UnlockMutex</name><argument_list pos:start="161:24" pos:end="161:40">(<argument pos:start="161:25" pos:end="161:39"><expr pos:start="161:25" pos:end="161:39"><name pos:start="161:25" pos:end="161:39"><name pos:start="161:25" pos:end="161:26">is</name><operator pos:start="161:27" pos:end="161:28">-&gt;</operator><name pos:start="161:29" pos:end="161:39">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="165:5" pos:end="165:13">return <expr pos:start="165:12" pos:end="165:12"><literal type="number" pos:start="165:12" pos:end="165:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
