<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4282.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:35">xen_invalidate_map_cache_entry</name><parameter_list pos:start="1:36" pos:end="1:52">(<parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:45"><name pos:start="1:37" pos:end="1:43">uint8_t</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">buffer</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:18">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MapCacheEntry</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:24">entry</name> <init pos:start="5:26" pos:end="5:31">= <expr pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:31">NULL</name></expr></init></decl>, <decl pos:start="5:34" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:19"><modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:40">pentry</name> <init pos:start="5:42" pos:end="5:47">= <expr pos:start="5:44" pos:end="5:47"><name pos:start="5:44" pos:end="5:47">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">MapCacheRev</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:25">reventry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">hwaddr</name></type> <name pos:start="9:12" pos:end="9:22">paddr_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">hwaddr</name></type> <name pos:start="11:12" pos:end="11:15">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">found</name> <init pos:start="13:15" pos:end="13:17">= <expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr></init></decl>;</decl_stmt>



    <macro pos:start="17:5" pos:end="17:61"><name pos:start="17:5" pos:end="17:18">QTAILQ_FOREACH</name><argument_list pos:start="17:19" pos:end="17:61">(<argument pos:start="17:20" pos:end="17:27">reventry</argument>, <argument pos:start="17:30" pos:end="17:54">&amp;mapcache-&gt;locked_entries</argument>, <argument pos:start="17:57" pos:end="17:60">next</argument>)</argument_list></macro> <block pos:start="17:63" pos:end="31:5">{<block_content pos:start="19:9" pos:end="29:9">

        <if_stmt pos:start="19:9" pos:end="29:9"><if pos:start="19:9" pos:end="29:9">if <condition pos:start="19:12" pos:end="19:42">(<expr pos:start="19:13" pos:end="19:41"><name pos:start="19:13" pos:end="19:31"><name pos:start="19:13" pos:end="19:20">reventry</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:31">vaddr_req</name></name> <operator pos:start="19:33" pos:end="19:34">==</operator> <name pos:start="19:36" pos:end="19:41">buffer</name></expr>)</condition> <block pos:start="19:44" pos:end="29:9">{<block_content pos:start="21:13" pos:end="27:18">

            <expr_stmt pos:start="21:13" pos:end="21:48"><expr pos:start="21:13" pos:end="21:47"><name pos:start="21:13" pos:end="21:23">paddr_index</name> <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:47"><name pos:start="21:27" pos:end="21:34">reventry</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:47">paddr_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:34"><expr pos:start="23:13" pos:end="23:33"><name pos:start="23:13" pos:end="23:16">size</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:33"><name pos:start="23:20" pos:end="23:27">reventry</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:33">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:22"><expr pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:17">found</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <if_stmt pos:start="33:5" pos:end="45:5"><if pos:start="33:5" pos:end="45:5">if <condition pos:start="33:8" pos:end="33:15">(<expr pos:start="33:9" pos:end="33:14"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:14">found</name></expr>)</condition> <block pos:start="33:17" pos:end="45:5">{<block_content pos:start="35:9" pos:end="43:15">

        <expr_stmt pos:start="35:9" pos:end="35:61"><expr pos:start="35:9" pos:end="35:60"><call pos:start="35:9" pos:end="35:60"><name pos:start="35:9" pos:end="35:15">DPRINTF</name><argument_list pos:start="35:16" pos:end="35:60">(<argument pos:start="35:17" pos:end="35:41"><expr pos:start="35:17" pos:end="35:41"><literal type="string" pos:start="35:17" pos:end="35:41">"%s, could not find %p\n"</literal></expr></argument>, <argument pos:start="35:44" pos:end="35:51"><expr pos:start="35:44" pos:end="35:51"><name pos:start="35:44" pos:end="35:51">__func__</name></expr></argument>, <argument pos:start="35:54" pos:end="35:59"><expr pos:start="35:54" pos:end="35:59"><name pos:start="35:54" pos:end="35:59">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro pos:start="37:9" pos:end="37:65"><name pos:start="37:9" pos:end="37:22">QTAILQ_FOREACH</name><argument_list pos:start="37:23" pos:end="37:65">(<argument pos:start="37:24" pos:end="37:31">reventry</argument>, <argument pos:start="37:34" pos:end="37:58">&amp;mapcache-&gt;locked_entries</argument>, <argument pos:start="37:61" pos:end="37:64">next</argument>)</argument_list></macro> <block pos:start="37:67" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:106">

            <expr_stmt pos:start="39:13" pos:end="39:106"><expr pos:start="39:13" pos:end="39:105"><call pos:start="39:13" pos:end="39:105"><name pos:start="39:13" pos:end="39:19">DPRINTF</name><argument_list pos:start="39:20" pos:end="39:105">(<argument pos:start="39:21" pos:end="39:60"><expr pos:start="39:21" pos:end="39:60"><literal type="string" pos:start="39:21" pos:end="39:25">"   "</literal><name pos:start="39:26" pos:end="39:39">TARGET_FMT_plx</name><literal type="string" pos:start="39:40" pos:end="39:60">" -&gt; %p is present\n"</literal></expr></argument>, <argument pos:start="39:63" pos:end="39:83"><expr pos:start="39:63" pos:end="39:83"><name pos:start="39:63" pos:end="39:83"><name pos:start="39:63" pos:end="39:70">reventry</name><operator pos:start="39:71" pos:end="39:72">-&gt;</operator><name pos:start="39:73" pos:end="39:83">paddr_index</name></name></expr></argument>, <argument pos:start="39:86" pos:end="39:104"><expr pos:start="39:86" pos:end="39:104"><name pos:start="39:86" pos:end="39:104"><name pos:start="39:86" pos:end="39:93">reventry</name><operator pos:start="39:94" pos:end="39:95">-&gt;</operator><name pos:start="39:96" pos:end="39:104">vaddr_req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <return pos:start="43:9" pos:end="43:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:61"><expr pos:start="47:5" pos:end="47:60"><call pos:start="47:5" pos:end="47:60"><name pos:start="47:5" pos:end="47:17">QTAILQ_REMOVE</name><argument_list pos:start="47:18" pos:end="47:60">(<argument pos:start="47:19" pos:end="47:43"><expr pos:start="47:19" pos:end="47:43"><operator pos:start="47:19" pos:end="47:19">&amp;</operator><name pos:start="47:20" pos:end="47:43"><name pos:start="47:20" pos:end="47:27">mapcache</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:43">locked_entries</name></name></expr></argument>, <argument pos:start="47:46" pos:end="47:53"><expr pos:start="47:46" pos:end="47:53"><name pos:start="47:46" pos:end="47:53">reventry</name></expr></argument>, <argument pos:start="47:56" pos:end="47:59"><expr pos:start="47:56" pos:end="47:59"><name pos:start="47:56" pos:end="47:59">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:21"><expr pos:start="49:5" pos:end="49:20"><call pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:10">g_free</name><argument_list pos:start="49:11" pos:end="49:20">(<argument pos:start="49:12" pos:end="49:19"><expr pos:start="49:12" pos:end="49:19"><name pos:start="49:12" pos:end="49:19">reventry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="55:57">(<expr pos:start="53:9" pos:end="55:56"><name pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:16">mapcache</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:28">last_entry</name></name> <operator pos:start="53:30" pos:end="53:31">!=</operator> <name pos:start="53:33" pos:end="53:36">NULL</name> <operator pos:start="53:38" pos:end="53:39">&amp;&amp;</operator>

        <name pos:start="55:9" pos:end="55:41"><name pos:start="55:9" pos:end="55:16">mapcache</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:28">last_entry</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:41">paddr_index</name></name> <operator pos:start="55:43" pos:end="55:44">==</operator> <name pos:start="55:46" pos:end="55:56">paddr_index</name></expr>)</condition> <block pos:start="55:59" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:36">

        <expr_stmt pos:start="57:9" pos:end="57:36"><expr pos:start="57:9" pos:end="57:35"><name pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:16">mapcache</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:28">last_entry</name></name> <operator pos:start="57:30" pos:end="57:30">=</operator> <name pos:start="57:32" pos:end="57:35">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:65"><expr pos:start="63:5" pos:end="63:64"><name pos:start="63:5" pos:end="63:9">entry</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <operator pos:start="63:13" pos:end="63:13">&amp;</operator><name pos:start="63:14" pos:end="63:64"><name pos:start="63:14" pos:end="63:21">mapcache</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:28">entry</name><index pos:start="63:29" pos:end="63:64">[<expr pos:start="63:30" pos:end="63:63"><name pos:start="63:30" pos:end="63:40">paddr_index</name> <operator pos:start="63:42" pos:end="63:42">%</operator> <name pos:start="63:44" pos:end="63:63"><name pos:start="63:44" pos:end="63:51">mapcache</name><operator pos:start="63:52" pos:end="63:53">-&gt;</operator><name pos:start="63:54" pos:end="63:63">nr_buckets</name></name></expr>]</index></name></expr>;</expr_stmt>

    <while pos:start="65:5" pos:end="71:5">while <condition pos:start="65:11" pos:end="65:79">(<expr pos:start="65:12" pos:end="65:78"><name pos:start="65:12" pos:end="65:16">entry</name> <operator pos:start="65:18" pos:end="65:19">&amp;&amp;</operator> <operator pos:start="65:21" pos:end="65:21">(</operator><name pos:start="65:22" pos:end="65:39"><name pos:start="65:22" pos:end="65:26">entry</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:39">paddr_index</name></name> <operator pos:start="65:41" pos:end="65:42">!=</operator> <name pos:start="65:44" pos:end="65:54">paddr_index</name> <operator pos:start="65:56" pos:end="65:57">||</operator> <name pos:start="65:59" pos:end="65:69"><name pos:start="65:59" pos:end="65:63">entry</name><operator pos:start="65:64" pos:end="65:65">-&gt;</operator><name pos:start="65:66" pos:end="65:69">size</name></name> <operator pos:start="65:71" pos:end="65:72">!=</operator> <name pos:start="65:74" pos:end="65:77">size</name><operator pos:start="65:78" pos:end="65:78">)</operator></expr>)</condition> <block pos:start="65:81" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:28">

        <expr_stmt pos:start="67:9" pos:end="67:23"><expr pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:14">pentry</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:22">entry</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:28"><expr pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:13">entry</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:27"><name pos:start="69:17" pos:end="69:21">entry</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:27">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:15">(<expr pos:start="73:9" pos:end="73:14"><operator pos:start="73:9" pos:end="73:9">!</operator><name pos:start="73:10" pos:end="73:14">entry</name></expr>)</condition> <block pos:start="73:17" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:15">

        <expr_stmt pos:start="75:9" pos:end="75:85"><expr pos:start="75:9" pos:end="75:84"><call pos:start="75:9" pos:end="75:84"><name pos:start="75:9" pos:end="75:15">DPRINTF</name><argument_list pos:start="75:16" pos:end="75:84">(<argument pos:start="75:17" pos:end="75:75"><expr pos:start="75:17" pos:end="75:75"><literal type="string" pos:start="75:17" pos:end="75:75">"Trying to unmap address %p that is not in the mapcache!\n"</literal></expr></argument>, <argument pos:start="75:78" pos:end="75:83"><expr pos:start="75:78" pos:end="75:83"><name pos:start="75:78" pos:end="75:83">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:18"><expr pos:start="81:5" pos:end="81:17"><name pos:start="81:5" pos:end="81:15"><name pos:start="81:5" pos:end="81:9">entry</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:15">lock</name></name><operator pos:start="81:16" pos:end="81:17">--</operator></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="87:5"><if pos:start="83:5" pos:end="87:5">if <condition pos:start="83:8" pos:end="83:42">(<expr pos:start="83:9" pos:end="83:41"><name pos:start="83:9" pos:end="83:19"><name pos:start="83:9" pos:end="83:13">entry</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:19">lock</name></name> <operator pos:start="83:21" pos:end="83:21">&gt;</operator> <literal type="number" pos:start="83:23" pos:end="83:23">0</literal> <operator pos:start="83:25" pos:end="83:26">||</operator> <name pos:start="83:28" pos:end="83:33">pentry</name> <operator pos:start="83:35" pos:end="83:36">==</operator> <name pos:start="83:38" pos:end="83:41">NULL</name></expr>)</condition> <block pos:start="83:44" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:15">

        <return pos:start="85:9" pos:end="85:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:31"><expr pos:start="91:5" pos:end="91:30"><name pos:start="91:5" pos:end="91:16"><name pos:start="91:5" pos:end="91:10">pentry</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:16">next</name></name> <operator pos:start="91:18" pos:end="91:18">=</operator> <name pos:start="91:20" pos:end="91:30"><name pos:start="91:20" pos:end="91:24">entry</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:30">next</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:52">(<expr pos:start="93:9" pos:end="93:51"><call pos:start="93:9" pos:end="93:46"><name pos:start="93:9" pos:end="93:14">munmap</name><argument_list pos:start="93:15" pos:end="93:46">(<argument pos:start="93:16" pos:end="93:32"><expr pos:start="93:16" pos:end="93:32"><name pos:start="93:16" pos:end="93:32"><name pos:start="93:16" pos:end="93:20">entry</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:32">vaddr_base</name></name></expr></argument>, <argument pos:start="93:35" pos:end="93:45"><expr pos:start="93:35" pos:end="93:45"><name pos:start="93:35" pos:end="93:45"><name pos:start="93:35" pos:end="93:39">entry</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:45">size</name></name></expr></argument>)</argument_list></call> <operator pos:start="93:48" pos:end="93:49">!=</operator> <literal type="number" pos:start="93:51" pos:end="93:51">0</literal></expr>)</condition> <block pos:start="93:54" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:17">

        <expr_stmt pos:start="95:9" pos:end="95:30"><expr pos:start="95:9" pos:end="95:29"><call pos:start="95:9" pos:end="95:29"><name pos:start="95:9" pos:end="95:14">perror</name><argument_list pos:start="95:15" pos:end="95:29">(<argument pos:start="95:16" pos:end="95:28"><expr pos:start="95:16" pos:end="95:28"><literal type="string" pos:start="95:16" pos:end="95:28">"unmap fails"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:17"><expr pos:start="97:9" pos:end="97:16"><call pos:start="97:9" pos:end="97:16"><name pos:start="97:9" pos:end="97:12">exit</name><argument_list pos:start="97:13" pos:end="97:16">(<argument pos:start="97:14" pos:end="97:15"><expr pos:start="97:14" pos:end="97:15"><operator pos:start="97:14" pos:end="97:14">-</operator><literal type="number" pos:start="97:15" pos:end="97:15">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:33"><expr pos:start="101:5" pos:end="101:32"><call pos:start="101:5" pos:end="101:32"><name pos:start="101:5" pos:end="101:10">g_free</name><argument_list pos:start="101:11" pos:end="101:32">(<argument pos:start="101:12" pos:end="101:31"><expr pos:start="101:12" pos:end="101:31"><name pos:start="101:12" pos:end="101:31"><name pos:start="101:12" pos:end="101:16">entry</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:31">valid_mapping</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:18"><expr pos:start="103:5" pos:end="103:17"><call pos:start="103:5" pos:end="103:17"><name pos:start="103:5" pos:end="103:10">g_free</name><argument_list pos:start="103:11" pos:end="103:17">(<argument pos:start="103:12" pos:end="103:16"><expr pos:start="103:12" pos:end="103:16"><name pos:start="103:12" pos:end="103:16">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
