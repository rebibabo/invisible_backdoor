<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20915.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">do_subtitle_out</name><parameter_list pos:start="1:28" pos:end="9:40">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:45"><decl pos:start="3:29" pos:end="3:45"><type pos:start="3:29" pos:end="3:45"><name pos:start="3:29" pos:end="3:40">OutputStream</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">ost</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:44"><decl pos:start="5:29" pos:end="5:44"><type pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:39">InputStream</name> <modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:44">ist</name></decl></parameter>,

                            <parameter pos:start="7:29" pos:end="7:43"><decl pos:start="7:29" pos:end="7:43"><type pos:start="7:29" pos:end="7:43"><name pos:start="7:29" pos:end="7:38">AVSubtitle</name> <modifier pos:start="7:40" pos:end="7:40">*</modifier></type><name pos:start="7:41" pos:end="7:43">sub</name></decl></parameter>,

                            <parameter pos:start="9:29" pos:end="9:39"><decl pos:start="9:29" pos:end="9:39"><type pos:start="9:29" pos:end="9:39"><name pos:start="9:29" pos:end="9:35">int64_t</name></type> <name pos:start="9:37" pos:end="9:39">pts</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="135:1">{<block_content pos:start="13:5" pos:end="133:5">

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:39"><type pos:start="13:5" pos:end="13:20"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <name pos:start="13:12" pos:end="13:18">uint8_t</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:32">subtitle_out</name> <init pos:start="13:34" pos:end="13:39">= <expr pos:start="13:36" pos:end="13:39"><name pos:start="13:36" pos:end="13:39">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:43"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:29">subtitle_out_max_size</name> <init pos:start="15:31" pos:end="15:43">= <expr pos:start="15:33" pos:end="15:43"><literal type="number" pos:start="15:33" pos:end="15:36">1024</literal> <operator pos:start="15:38" pos:end="15:38">*</operator> <literal type="number" pos:start="15:40" pos:end="15:43">1024</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:25">subtitle_out_size</name></decl>, <decl pos:start="17:28" pos:end="17:29"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:28" pos:end="17:29">nb</name></decl>, <decl pos:start="17:32" pos:end="17:32"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:32" pos:end="17:32">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:18">AVCodecContext</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:23">enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">AVPacket</name></type> <name pos:start="21:14" pos:end="21:16">pkt</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:30">(<expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:11">pts</name> <operator pos:start="25:13" pos:end="25:14">==</operator> <name pos:start="25:16" pos:end="25:29">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="25:32" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:15">

        <expr_stmt pos:start="27:9" pos:end="27:73"><expr pos:start="27:9" pos:end="27:72"><call pos:start="27:9" pos:end="27:72"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:72">(<argument pos:start="27:16" pos:end="27:19"><expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">NULL</name></expr></argument>, <argument pos:start="27:22" pos:end="27:33"><expr pos:start="27:22" pos:end="27:33"><name pos:start="27:22" pos:end="27:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:36" pos:end="27:71"><expr pos:start="27:36" pos:end="27:71"><literal type="string" pos:start="27:36" pos:end="27:71">"Subtitle packets must have a pts\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:28"><if pos:start="29:9" pos:end="31:28">if <condition pos:start="29:12" pos:end="29:26">(<expr pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:25">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:28"><block_content pos:start="31:13" pos:end="31:28">

            <expr_stmt pos:start="31:13" pos:end="31:28"><expr pos:start="31:13" pos:end="31:27"><call pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:24">exit_program</name><argument_list pos:start="31:25" pos:end="31:27">(<argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:23"><expr pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:7">enc</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <name pos:start="39:11" pos:end="39:22"><name pos:start="39:11" pos:end="39:13">ost</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:22">enc_ctx</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:22">(<expr pos:start="43:9" pos:end="43:21"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:21">subtitle_out</name></expr>)</condition> <block pos:start="43:24" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:56">

        <expr_stmt pos:start="45:9" pos:end="45:56"><expr pos:start="45:9" pos:end="45:55"><name pos:start="45:9" pos:end="45:20">subtitle_out</name> <operator pos:start="45:22" pos:end="45:22">=</operator> <call pos:start="45:24" pos:end="45:55"><name pos:start="45:24" pos:end="45:32">av_malloc</name><argument_list pos:start="45:33" pos:end="45:55">(<argument pos:start="45:34" pos:end="45:54"><expr pos:start="45:34" pos:end="45:54"><name pos:start="45:34" pos:end="45:54">subtitle_out_max_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="53:30">/* Note: DVB subtitle need one packet to draw them and one other

       packet to clear them */</comment>

    <comment type="block" pos:start="55:5" pos:end="55:47">/* XXX: signal it in the codec context ? */</comment>

    <if_stmt pos:start="57:5" pos:end="63:15"><if pos:start="57:5" pos:end="59:15">if <condition pos:start="57:8" pos:end="57:50">(<expr pos:start="57:9" pos:end="57:49"><name pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:11">enc</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:21">codec_id</name></name> <operator pos:start="57:23" pos:end="57:24">==</operator> <name pos:start="57:26" pos:end="57:49">AV_CODEC_ID_DVB_SUBTITLE</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:15"><block_content pos:start="59:9" pos:end="59:15">

        <expr_stmt pos:start="59:9" pos:end="59:15"><expr pos:start="59:9" pos:end="59:14"><name pos:start="59:9" pos:end="59:10">nb</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">2</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="61:5" pos:end="63:15">else<block type="pseudo" pos:start="63:9" pos:end="63:15"><block_content pos:start="63:9" pos:end="63:15">

        <expr_stmt pos:start="63:9" pos:end="63:15"><expr pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:10">nb</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <literal type="number" pos:start="63:14" pos:end="63:14">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <for pos:start="67:5" pos:end="133:5">for <control pos:start="67:9" pos:end="67:28">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:23"><expr pos:start="67:17" pos:end="67:22"><name pos:start="67:17" pos:end="67:17">i</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <name pos:start="67:21" pos:end="67:22">nb</name></expr>;</condition> <incr pos:start="67:25" pos:end="67:27"><expr pos:start="67:25" pos:end="67:27"><name pos:start="67:25" pos:end="67:25">i</name><operator pos:start="67:26" pos:end="67:27">++</operator></expr></incr>)</control> <block pos:start="67:30" pos:end="133:5">{<block_content pos:start="69:9" pos:end="131:36">

        <expr_stmt pos:start="69:9" pos:end="69:79"><expr pos:start="69:9" pos:end="69:78"><name pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:11">ost</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:22">sync_opts</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <call pos:start="69:26" pos:end="69:78"><name pos:start="69:26" pos:end="69:37">av_rescale_q</name><argument_list pos:start="69:38" pos:end="69:78">(<argument pos:start="69:39" pos:end="69:41"><expr pos:start="69:39" pos:end="69:41"><name pos:start="69:39" pos:end="69:41">pts</name></expr></argument>, <argument pos:start="69:44" pos:end="69:61"><expr pos:start="69:44" pos:end="69:61"><name pos:start="69:44" pos:end="69:61"><name pos:start="69:44" pos:end="69:46">ist</name><operator pos:start="69:47" pos:end="69:48">-&gt;</operator><name pos:start="69:49" pos:end="69:50">st</name><operator pos:start="69:51" pos:end="69:52">-&gt;</operator><name pos:start="69:53" pos:end="69:61">time_base</name></name></expr></argument>, <argument pos:start="69:64" pos:end="69:77"><expr pos:start="69:64" pos:end="69:77"><name pos:start="69:64" pos:end="69:77"><name pos:start="69:64" pos:end="69:66">enc</name><operator pos:start="69:67" pos:end="69:68">-&gt;</operator><name pos:start="69:69" pos:end="69:77">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="73:19"><if pos:start="71:9" pos:end="73:19">if <condition pos:start="71:12" pos:end="71:39">(<expr pos:start="71:13" pos:end="71:38"><operator pos:start="71:13" pos:end="71:13">!</operator><call pos:start="71:14" pos:end="71:38"><name pos:start="71:14" pos:end="71:33">check_recording_time</name><argument_list pos:start="71:34" pos:end="71:38">(<argument pos:start="71:35" pos:end="71:37"><expr pos:start="71:35" pos:end="71:37"><name pos:start="71:35" pos:end="71:37">ost</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:19"><block_content pos:start="73:13" pos:end="73:19">

            <return pos:start="73:13" pos:end="73:19">return;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:73"><expr pos:start="77:9" pos:end="77:72"><name pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:11">sub</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:16">pts</name></name> <operator pos:start="77:18" pos:end="77:18">=</operator> <call pos:start="77:20" pos:end="77:72"><name pos:start="77:20" pos:end="77:31">av_rescale_q</name><argument_list pos:start="77:32" pos:end="77:72">(<argument pos:start="77:33" pos:end="77:35"><expr pos:start="77:33" pos:end="77:35"><name pos:start="77:33" pos:end="77:35">pts</name></expr></argument>, <argument pos:start="77:38" pos:end="77:55"><expr pos:start="77:38" pos:end="77:55"><name pos:start="77:38" pos:end="77:55"><name pos:start="77:38" pos:end="77:40">ist</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:44">st</name><operator pos:start="77:45" pos:end="77:46">-&gt;</operator><name pos:start="77:47" pos:end="77:55">time_base</name></name></expr></argument>, <argument pos:start="77:58" pos:end="77:71"><expr pos:start="77:58" pos:end="77:71"><name pos:start="77:58" pos:end="77:71">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="79:9" pos:end="79:49">// start_display_time is required to be 0</comment>

        <expr_stmt pos:start="81:9" pos:end="81:113"><expr pos:start="81:9" pos:end="81:112"><name pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:11">sub</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:16">pts</name></name>               <operator pos:start="81:32" pos:end="81:33">+=</operator> <macro pos:start="81:35" pos:end="81:112"><name pos:start="81:35" pos:end="81:46">av_rescale_q</name><argument_list pos:start="81:47" pos:end="81:112">(<argument pos:start="81:48" pos:end="81:70">sub-&gt;start_display_time</argument>, <argument pos:start="81:73" pos:end="81:87">(AVRational){ <literal type="number" pos:start="81:87" pos:end="81:87">1</literal></argument>, <argument pos:start="81:90" pos:end="81:95"><literal type="number" pos:start="81:90" pos:end="81:93">1000</literal> }</argument>, <argument pos:start="81:98" pos:end="81:111">AV_TIME_BASE_Q</argument>)</argument_list></macro></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:58"><expr pos:start="83:9" pos:end="83:57"><name pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:11">sub</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:29">end_display_time</name></name>  <operator pos:start="83:32" pos:end="83:33">-=</operator> <name pos:start="83:35" pos:end="83:57"><name pos:start="83:35" pos:end="83:37">sub</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:57">start_display_time</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:36"><expr pos:start="85:9" pos:end="85:35"><name pos:start="85:9" pos:end="85:31"><name pos:start="85:9" pos:end="85:11">sub</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:31">start_display_time</name></name> <operator pos:start="85:33" pos:end="85:33">=</operator> <literal type="number" pos:start="85:35" pos:end="85:35">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:30"><expr pos:start="89:9" pos:end="89:29"><name pos:start="89:9" pos:end="89:27"><name pos:start="89:9" pos:end="89:11">ost</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:27">frames_encoded</name></name><operator pos:start="89:28" pos:end="89:29">++</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="93:9" pos:end="95:80"><expr pos:start="93:9" pos:end="95:79"><name pos:start="93:9" pos:end="93:25">subtitle_out_size</name> <operator pos:start="93:27" pos:end="93:27">=</operator> <call pos:start="93:29" pos:end="95:79"><name pos:start="93:29" pos:end="93:51">avcodec_encode_subtitle</name><argument_list pos:start="93:52" pos:end="95:79">(<argument pos:start="93:53" pos:end="93:55"><expr pos:start="93:53" pos:end="93:55"><name pos:start="93:53" pos:end="93:55">enc</name></expr></argument>, <argument pos:start="93:58" pos:end="93:69"><expr pos:start="93:58" pos:end="93:69"><name pos:start="93:58" pos:end="93:69">subtitle_out</name></expr></argument>,

                                                    <argument pos:start="95:53" pos:end="95:73"><expr pos:start="95:53" pos:end="95:73"><name pos:start="95:53" pos:end="95:73">subtitle_out_max_size</name></expr></argument>, <argument pos:start="95:76" pos:end="95:78"><expr pos:start="95:76" pos:end="95:78"><name pos:start="95:76" pos:end="95:78">sub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="103:9"><if pos:start="97:9" pos:end="103:9">if <condition pos:start="97:12" pos:end="97:34">(<expr pos:start="97:13" pos:end="97:33"><name pos:start="97:13" pos:end="97:29">subtitle_out_size</name> <operator pos:start="97:31" pos:end="97:31">&lt;</operator> <literal type="number" pos:start="97:33" pos:end="97:33">0</literal></expr>)</condition> <block pos:start="97:36" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:28">

            <expr_stmt pos:start="99:13" pos:end="99:69"><expr pos:start="99:13" pos:end="99:68"><call pos:start="99:13" pos:end="99:68"><name pos:start="99:13" pos:end="99:18">av_log</name><argument_list pos:start="99:19" pos:end="99:68">(<argument pos:start="99:20" pos:end="99:23"><expr pos:start="99:20" pos:end="99:23"><name pos:start="99:20" pos:end="99:23">NULL</name></expr></argument>, <argument pos:start="99:26" pos:end="99:37"><expr pos:start="99:26" pos:end="99:37"><name pos:start="99:26" pos:end="99:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="99:40" pos:end="99:67"><expr pos:start="99:40" pos:end="99:67"><literal type="string" pos:start="99:40" pos:end="99:67">"Subtitle encoding failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:28"><expr pos:start="101:13" pos:end="101:27"><call pos:start="101:13" pos:end="101:27"><name pos:start="101:13" pos:end="101:24">exit_program</name><argument_list pos:start="101:25" pos:end="101:27">(<argument pos:start="101:26" pos:end="101:26"><expr pos:start="101:26" pos:end="101:26"><literal type="number" pos:start="101:26" pos:end="101:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:29"><expr pos:start="107:9" pos:end="107:28"><call pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:22">av_init_packet</name><argument_list pos:start="107:23" pos:end="107:28">(<argument pos:start="107:24" pos:end="107:27"><expr pos:start="107:24" pos:end="107:27"><operator pos:start="107:24" pos:end="107:24">&amp;</operator><name pos:start="107:25" pos:end="107:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:32"><expr pos:start="109:9" pos:end="109:31"><name pos:start="109:9" pos:end="109:16"><name pos:start="109:9" pos:end="109:11">pkt</name><operator pos:start="109:12" pos:end="109:12">.</operator><name pos:start="109:13" pos:end="109:16">data</name></name> <operator pos:start="109:18" pos:end="109:18">=</operator> <name pos:start="109:20" pos:end="109:31">subtitle_out</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:37"><expr pos:start="111:9" pos:end="111:36"><name pos:start="111:9" pos:end="111:16"><name pos:start="111:9" pos:end="111:11">pkt</name><operator pos:start="111:12" pos:end="111:12">.</operator><name pos:start="111:13" pos:end="111:16">size</name></name> <operator pos:start="111:18" pos:end="111:18">=</operator> <name pos:start="111:20" pos:end="111:36">subtitle_out_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:78"><expr pos:start="113:9" pos:end="113:77"><name pos:start="113:9" pos:end="113:15"><name pos:start="113:9" pos:end="113:11">pkt</name><operator pos:start="113:12" pos:end="113:12">.</operator><name pos:start="113:13" pos:end="113:15">pts</name></name>  <operator pos:start="113:18" pos:end="113:18">=</operator> <call pos:start="113:20" pos:end="113:77"><name pos:start="113:20" pos:end="113:31">av_rescale_q</name><argument_list pos:start="113:32" pos:end="113:77">(<argument pos:start="113:33" pos:end="113:40"><expr pos:start="113:33" pos:end="113:40"><name pos:start="113:33" pos:end="113:40"><name pos:start="113:33" pos:end="113:35">sub</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:40">pts</name></name></expr></argument>, <argument pos:start="113:43" pos:end="113:56"><expr pos:start="113:43" pos:end="113:56"><name pos:start="113:43" pos:end="113:56">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="113:59" pos:end="113:76"><expr pos:start="113:59" pos:end="113:76"><name pos:start="113:59" pos:end="113:76"><name pos:start="113:59" pos:end="113:61">ost</name><operator pos:start="113:62" pos:end="113:63">-&gt;</operator><name pos:start="113:64" pos:end="113:65">st</name><operator pos:start="113:66" pos:end="113:67">-&gt;</operator><name pos:start="113:68" pos:end="113:76">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="129:9"><if pos:start="115:9" pos:end="129:9">if <condition pos:start="115:12" pos:end="115:54">(<expr pos:start="115:13" pos:end="115:53"><name pos:start="115:13" pos:end="115:25"><name pos:start="115:13" pos:end="115:15">enc</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:25">codec_id</name></name> <operator pos:start="115:27" pos:end="115:28">==</operator> <name pos:start="115:30" pos:end="115:53">AV_CODEC_ID_DVB_SUBTITLE</name></expr>)</condition> <block pos:start="115:56" pos:end="129:9">{<block_content pos:start="121:13" pos:end="127:54">

            <comment type="block" pos:start="117:13" pos:end="119:49">/* XXX: the pts correction is handled here. Maybe handling

               it in the codec would be better */</comment>

            <if_stmt pos:start="121:13" pos:end="127:54"><if pos:start="121:13" pos:end="123:56">if <condition pos:start="121:16" pos:end="121:23">(<expr pos:start="121:17" pos:end="121:22"><name pos:start="121:17" pos:end="121:17">i</name> <operator pos:start="121:19" pos:end="121:20">==</operator> <literal type="number" pos:start="121:22" pos:end="121:22">0</literal></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:56"><block_content pos:start="123:17" pos:end="123:56">

                <expr_stmt pos:start="123:17" pos:end="123:56"><expr pos:start="123:17" pos:end="123:55"><name pos:start="123:17" pos:end="123:23"><name pos:start="123:17" pos:end="123:19">pkt</name><operator pos:start="123:20" pos:end="123:20">.</operator><name pos:start="123:21" pos:end="123:23">pts</name></name> <operator pos:start="123:25" pos:end="123:26">+=</operator> <literal type="number" pos:start="123:28" pos:end="123:29">90</literal> <operator pos:start="123:31" pos:end="123:31">*</operator> <name pos:start="123:33" pos:end="123:55"><name pos:start="123:33" pos:end="123:35">sub</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:55">start_display_time</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="125:13" pos:end="127:54">else<block type="pseudo" pos:start="127:17" pos:end="127:54"><block_content pos:start="127:17" pos:end="127:54">

                <expr_stmt pos:start="127:17" pos:end="127:54"><expr pos:start="127:17" pos:end="127:53"><name pos:start="127:17" pos:end="127:23"><name pos:start="127:17" pos:end="127:19">pkt</name><operator pos:start="127:20" pos:end="127:20">.</operator><name pos:start="127:21" pos:end="127:23">pts</name></name> <operator pos:start="127:25" pos:end="127:26">+=</operator> <literal type="number" pos:start="127:28" pos:end="127:29">90</literal> <operator pos:start="127:31" pos:end="127:31">*</operator> <name pos:start="127:33" pos:end="127:53"><name pos:start="127:33" pos:end="127:35">sub</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:53">end_display_time</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:36"><expr pos:start="131:9" pos:end="131:35"><call pos:start="131:9" pos:end="131:35"><name pos:start="131:9" pos:end="131:21">output_packet</name><argument_list pos:start="131:22" pos:end="131:35">(<argument pos:start="131:23" pos:end="131:23"><expr pos:start="131:23" pos:end="131:23"><name pos:start="131:23" pos:end="131:23">s</name></expr></argument>, <argument pos:start="131:26" pos:end="131:29"><expr pos:start="131:26" pos:end="131:29"><operator pos:start="131:26" pos:end="131:26">&amp;</operator><name pos:start="131:27" pos:end="131:29">pkt</name></expr></argument>, <argument pos:start="131:32" pos:end="131:34"><expr pos:start="131:32" pos:end="131:34"><name pos:start="131:32" pos:end="131:34">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
