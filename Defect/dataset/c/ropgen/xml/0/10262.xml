<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10262.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:9">PCIDevice</name> <modifier pos:start="1:11" pos:end="1:11">*</modifier></type><name pos:start="1:12" pos:end="1:23">pci_nic_init</name><parameter_list pos:start="1:24" pos:end="3:52">(<parameter pos:start="1:25" pos:end="1:35"><decl pos:start="1:25" pos:end="1:35"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:31">NICInfo</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:35">nd</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:62"><decl pos:start="1:38" pos:end="1:62"><type pos:start="1:38" pos:end="1:62"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:47">char</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:62">default_model</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:51"><decl pos:start="3:25" pos:end="3:51"><type pos:start="3:25" pos:end="3:51"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:34">char</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:51">default_devaddr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:19">

    <decl_stmt pos:start="7:5" pos:end="7:70"><decl pos:start="7:5" pos:end="7:69"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:23">devaddr</name> <init pos:start="7:25" pos:end="7:69">= <expr pos:start="7:27" pos:end="7:69"><ternary pos:start="7:27" pos:end="7:69"><condition pos:start="7:27" pos:end="7:39"><expr pos:start="7:27" pos:end="7:37"><name pos:start="7:27" pos:end="7:37"><name pos:start="7:27" pos:end="7:28">nd</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:37">devaddr</name></name></expr> ?</condition><then pos:start="7:41" pos:end="7:51"> <expr pos:start="7:41" pos:end="7:51"><name pos:start="7:41" pos:end="7:51"><name pos:start="7:41" pos:end="7:42">nd</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:51">devaddr</name></name></expr> </then><else pos:start="7:53" pos:end="7:69">: <expr pos:start="7:55" pos:end="7:69"><name pos:start="7:55" pos:end="7:69">default_devaddr</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">PCIBus</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:15">bus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">devfn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">PCIDevice</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:22">pci_dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:15">DeviceState</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:63"><expr pos:start="21:5" pos:end="21:62"><name pos:start="21:5" pos:end="21:5">i</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <call pos:start="21:9" pos:end="21:62"><name pos:start="21:9" pos:end="21:27">qemu_find_nic_model</name><argument_list pos:start="21:28" pos:end="21:62">(<argument pos:start="21:29" pos:end="21:30"><expr pos:start="21:29" pos:end="21:30"><name pos:start="21:29" pos:end="21:30">nd</name></expr></argument>, <argument pos:start="21:33" pos:end="21:46"><expr pos:start="21:33" pos:end="21:46"><name pos:start="21:33" pos:end="21:46">pci_nic_models</name></expr></argument>, <argument pos:start="21:49" pos:end="21:61"><expr pos:start="21:49" pos:end="21:61"><name pos:start="21:49" pos:end="21:61">default_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:20"><if pos:start="23:5" pos:end="25:20">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">i</name> <operator pos:start="23:11" pos:end="23:11">&lt;</operator> <literal type="number" pos:start="23:13" pos:end="23:13">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:20"><block_content pos:start="25:9" pos:end="25:20">

        <return pos:start="25:9" pos:end="25:20">return <expr pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:7">bus</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:44"><name pos:start="29:11" pos:end="29:27">pci_get_bus_devfn</name><argument_list pos:start="29:28" pos:end="29:44">(<argument pos:start="29:29" pos:end="29:34"><expr pos:start="29:29" pos:end="29:34"><operator pos:start="29:29" pos:end="29:29">&amp;</operator><name pos:start="29:30" pos:end="29:34">devfn</name></expr></argument>, <argument pos:start="29:37" pos:end="29:43"><expr pos:start="29:37" pos:end="29:43"><name pos:start="29:37" pos:end="29:43">devaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:13">(<expr pos:start="31:9" pos:end="31:12"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:12">bus</name></expr>)</condition> <block pos:start="31:15" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:20">

        <expr_stmt pos:start="33:9" pos:end="35:48"><expr pos:start="33:9" pos:end="35:47"><call pos:start="33:9" pos:end="35:47"><name pos:start="33:9" pos:end="33:20">error_report</name><argument_list pos:start="33:21" pos:end="35:47">(<argument pos:start="33:22" pos:end="33:66"><expr pos:start="33:22" pos:end="33:66"><literal type="string" pos:start="33:22" pos:end="33:66">"Invalid PCI device address %s for device %s"</literal></expr></argument>,

                     <argument pos:start="35:22" pos:end="35:28"><expr pos:start="35:22" pos:end="35:28"><name pos:start="35:22" pos:end="35:28">devaddr</name></expr></argument>, <argument pos:start="35:31" pos:end="35:46"><expr pos:start="35:31" pos:end="35:46"><name pos:start="35:31" pos:end="35:46"><name pos:start="35:31" pos:end="35:43">pci_nic_names</name><index pos:start="35:44" pos:end="35:46">[<expr pos:start="35:45" pos:end="35:45"><name pos:start="35:45" pos:end="35:45">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:20">return <expr pos:start="37:16" pos:end="37:19"><name pos:start="37:16" pos:end="37:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:55"><expr pos:start="43:5" pos:end="43:54"><name pos:start="43:5" pos:end="43:11">pci_dev</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:54"><name pos:start="43:15" pos:end="43:24">pci_create</name><argument_list pos:start="43:25" pos:end="43:54">(<argument pos:start="43:26" pos:end="43:28"><expr pos:start="43:26" pos:end="43:28"><name pos:start="43:26" pos:end="43:28">bus</name></expr></argument>, <argument pos:start="43:31" pos:end="43:35"><expr pos:start="43:31" pos:end="43:35"><name pos:start="43:31" pos:end="43:35">devfn</name></expr></argument>, <argument pos:start="43:38" pos:end="43:53"><expr pos:start="43:38" pos:end="43:53"><name pos:start="43:38" pos:end="43:53"><name pos:start="43:38" pos:end="43:50">pci_nic_names</name><index pos:start="43:51" pos:end="43:53">[<expr pos:start="43:52" pos:end="43:52"><name pos:start="43:52" pos:end="43:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:25"><expr pos:start="45:5" pos:end="45:24"><name pos:start="45:5" pos:end="45:7">dev</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <operator pos:start="45:11" pos:end="45:11">&amp;</operator><name pos:start="45:12" pos:end="45:24"><name pos:start="45:12" pos:end="45:18">pci_dev</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:24">qdev</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:40"><if pos:start="47:5" pos:end="49:40">if <condition pos:start="47:8" pos:end="47:17">(<expr pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:10">nd</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:16">name</name></name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:40"><block_content pos:start="49:9" pos:end="49:40">

        <expr_stmt pos:start="49:9" pos:end="49:40"><expr pos:start="49:9" pos:end="49:39"><name pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:11">dev</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:15">id</name></name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:39"><name pos:start="49:19" pos:end="49:29">qemu_strdup</name><argument_list pos:start="49:30" pos:end="49:39">(<argument pos:start="49:31" pos:end="49:38"><expr pos:start="49:31" pos:end="49:38"><name pos:start="49:31" pos:end="49:38"><name pos:start="49:31" pos:end="49:32">nd</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:38">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><call pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:27">qdev_set_nic_properties</name><argument_list pos:start="51:28" pos:end="51:36">(<argument pos:start="51:29" pos:end="51:31"><expr pos:start="51:29" pos:end="51:31"><name pos:start="51:29" pos:end="51:31">dev</name></expr></argument>, <argument pos:start="51:34" pos:end="51:35"><expr pos:start="51:34" pos:end="51:35"><name pos:start="51:34" pos:end="51:35">nd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:20"><if pos:start="53:5" pos:end="55:20">if <condition pos:start="53:8" pos:end="53:27">(<expr pos:start="53:9" pos:end="53:26"><call pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:17">qdev_init</name><argument_list pos:start="53:18" pos:end="53:22">(<argument pos:start="53:19" pos:end="53:21"><expr pos:start="53:19" pos:end="53:21"><name pos:start="53:19" pos:end="53:21">dev</name></expr></argument>)</argument_list></call> <operator pos:start="53:24" pos:end="53:24">&lt;</operator> <literal type="number" pos:start="53:26" pos:end="53:26">0</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:20"><block_content pos:start="55:9" pos:end="55:20">

        <return pos:start="55:9" pos:end="55:20">return <expr pos:start="55:16" pos:end="55:19"><name pos:start="55:16" pos:end="55:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="57:5" pos:end="57:19">return <expr pos:start="57:12" pos:end="57:18"><name pos:start="57:12" pos:end="57:18">pci_dev</name></expr>;</return>

</block_content>}</block></function>
</unit>
