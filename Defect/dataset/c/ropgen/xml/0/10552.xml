<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10552.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">mpeg1_find_frame_end</name><parameter_list pos:start="1:32" pos:end="1:78">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:46">MpegEncContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:58">uint8_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">buf</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:77">buf_size</name></decl></parameter>)</parameter_list><block pos:start="1:79" pos:end="67:1">{<block_content pos:start="3:5" pos:end="65:14">

    <decl_stmt pos:start="3:5" pos:end="3:40"><decl pos:start="3:5" pos:end="3:39"><type pos:start="3:5" pos:end="3:18"><name pos:start="3:5" pos:end="3:16">ParseContext</name> <modifier pos:start="3:18" pos:end="3:18">*</modifier></type><name pos:start="3:19" pos:end="3:20">pc</name><init pos:start="3:21" pos:end="3:39">= <expr pos:start="3:23" pos:end="3:39"><operator pos:start="3:23" pos:end="3:23">&amp;</operator><name pos:start="3:24" pos:end="3:39"><name pos:start="3:24" pos:end="3:24">s</name><operator pos:start="3:25" pos:end="3:26">-&gt;</operator><name pos:start="3:27" pos:end="3:39">parse_context</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:18">state</name></decl>;</decl_stmt>

    

    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:9">state</name><operator pos:start="11:10" pos:end="11:10">=</operator> <name pos:start="11:12" pos:end="11:20"><name pos:start="11:12" pos:end="11:13">pc</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:20">state</name></name></expr>;</expr_stmt>

    

    <expr_stmt pos:start="15:5" pos:end="15:8"><expr pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:5">i</name><operator pos:start="15:6" pos:end="15:6">=</operator><literal type="number" pos:start="15:7" pos:end="15:7">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="35:5"><if pos:start="17:5" pos:end="35:5">if<condition pos:start="17:7" pos:end="17:30">(<expr pos:start="17:8" pos:end="17:29"><operator pos:start="17:8" pos:end="17:8">!</operator><name pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:10">pc</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:29">frame_start_found</name></name></expr>)</condition><block pos:start="17:31" pos:end="35:5">{<block_content pos:start="19:9" pos:end="33:9">

        <for pos:start="19:9" pos:end="33:9">for<control pos:start="19:12" pos:end="19:33">(<init pos:start="19:13" pos:end="19:16"><expr pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:13">i</name><operator pos:start="19:14" pos:end="19:14">=</operator><literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>;</init> <condition pos:start="19:18" pos:end="19:28"><expr pos:start="19:18" pos:end="19:27"><name pos:start="19:18" pos:end="19:18">i</name><operator pos:start="19:19" pos:end="19:19">&lt;</operator><name pos:start="19:20" pos:end="19:27">buf_size</name></expr>;</condition> <incr pos:start="19:30" pos:end="19:32"><expr pos:start="19:30" pos:end="19:32"><name pos:start="19:30" pos:end="19:30">i</name><operator pos:start="19:31" pos:end="19:32">++</operator></expr></incr>)</control><block pos:start="19:34" pos:end="33:9">{<block_content pos:start="21:13" pos:end="31:13">

            <expr_stmt pos:start="21:13" pos:end="21:39"><expr pos:start="21:13" pos:end="21:38"><name pos:start="21:13" pos:end="21:17">state</name><operator pos:start="21:18" pos:end="21:18">=</operator> <operator pos:start="21:20" pos:end="21:20">(</operator><name pos:start="21:21" pos:end="21:25">state</name><operator pos:start="21:26" pos:end="21:27">&lt;&lt;</operator><literal type="number" pos:start="21:28" pos:end="21:28">8</literal><operator pos:start="21:29" pos:end="21:29">)</operator> <operator pos:start="21:31" pos:end="21:31">|</operator> <name pos:start="21:33" pos:end="21:38"><name pos:start="21:33" pos:end="21:35">buf</name><index pos:start="21:36" pos:end="21:38">[<expr pos:start="21:37" pos:end="21:37"><name pos:start="21:37" pos:end="21:37">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="31:13"><if pos:start="23:13" pos:end="31:13">if<condition pos:start="23:15" pos:end="23:78">(<expr pos:start="23:16" pos:end="23:77"><name pos:start="23:16" pos:end="23:20">state</name> <operator pos:start="23:22" pos:end="23:23">&gt;=</operator> <name pos:start="23:25" pos:end="23:44">SLICE_MIN_START_CODE</name> <operator pos:start="23:46" pos:end="23:47">&amp;&amp;</operator> <name pos:start="23:49" pos:end="23:53">state</name> <operator pos:start="23:55" pos:end="23:56">&lt;=</operator> <name pos:start="23:58" pos:end="23:77">SLICE_MAX_START_CODE</name></expr>)</condition><block pos:start="23:79" pos:end="31:13">{<block_content pos:start="25:17" pos:end="29:22">

                <expr_stmt pos:start="25:17" pos:end="25:20"><expr pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:17">i</name><operator pos:start="25:18" pos:end="25:19">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="27:17" pos:end="27:40"><expr pos:start="27:17" pos:end="27:39"><name pos:start="27:17" pos:end="27:37"><name pos:start="27:17" pos:end="27:18">pc</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:37">frame_start_found</name></name><operator pos:start="27:38" pos:end="27:38">=</operator><literal type="number" pos:start="27:39" pos:end="27:39">1</literal></expr>;</expr_stmt>

                <break pos:start="29:17" pos:end="29:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    

    <if_stmt pos:start="39:5" pos:end="61:5"><if pos:start="39:5" pos:end="61:5">if<condition pos:start="39:7" pos:end="39:29">(<expr pos:start="39:8" pos:end="39:28"><name pos:start="39:8" pos:end="39:28"><name pos:start="39:8" pos:end="39:9">pc</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:28">frame_start_found</name></name></expr>)</condition><block pos:start="39:30" pos:end="61:5">{<block_content pos:start="41:9" pos:end="59:9">

        <for pos:start="41:9" pos:end="59:9">for<control pos:start="41:12" pos:end="41:30">(<init pos:start="41:13" pos:end="41:13">;</init> <condition pos:start="41:15" pos:end="41:25"><expr pos:start="41:15" pos:end="41:24"><name pos:start="41:15" pos:end="41:15">i</name><operator pos:start="41:16" pos:end="41:16">&lt;</operator><name pos:start="41:17" pos:end="41:24">buf_size</name></expr>;</condition> <incr pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><name pos:start="41:27" pos:end="41:27">i</name><operator pos:start="41:28" pos:end="41:29">++</operator></expr></incr>)</control><block pos:start="41:31" pos:end="59:9">{<block_content pos:start="43:13" pos:end="57:13">

            <expr_stmt pos:start="43:13" pos:end="43:39"><expr pos:start="43:13" pos:end="43:38"><name pos:start="43:13" pos:end="43:17">state</name><operator pos:start="43:18" pos:end="43:18">=</operator> <operator pos:start="43:20" pos:end="43:20">(</operator><name pos:start="43:21" pos:end="43:25">state</name><operator pos:start="43:26" pos:end="43:27">&lt;&lt;</operator><literal type="number" pos:start="43:28" pos:end="43:28">8</literal><operator pos:start="43:29" pos:end="43:29">)</operator> <operator pos:start="43:31" pos:end="43:31">|</operator> <name pos:start="43:33" pos:end="43:38"><name pos:start="43:33" pos:end="43:35">buf</name><index pos:start="43:36" pos:end="43:38">[<expr pos:start="43:37" pos:end="43:37"><name pos:start="43:37" pos:end="43:37">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="57:13"><if pos:start="45:13" pos:end="57:13">if<condition pos:start="45:15" pos:end="45:43">(<expr pos:start="45:16" pos:end="45:42"><operator pos:start="45:16" pos:end="45:16">(</operator><name pos:start="45:17" pos:end="45:21">state</name><operator pos:start="45:22" pos:end="45:22">&amp;</operator><literal type="number" pos:start="45:23" pos:end="45:32">0xFFFFFF00</literal><operator pos:start="45:33" pos:end="45:33">)</operator> <operator pos:start="45:35" pos:end="45:36">==</operator> <literal type="number" pos:start="45:38" pos:end="45:42">0x100</literal></expr>)</condition><block pos:start="45:44" pos:end="57:13">{<block_content pos:start="47:17" pos:end="55:17">

                <if_stmt pos:start="47:17" pos:end="55:17"><if pos:start="47:17" pos:end="55:17">if<condition pos:start="47:19" pos:end="47:80">(<expr pos:start="47:20" pos:end="47:79"><name pos:start="47:20" pos:end="47:58"><name pos:start="47:20" pos:end="47:24">state</name> <argument_list type="generic" pos:start="47:26" pos:end="47:58">&lt; <argument pos:start="47:28" pos:end="47:56"><expr pos:start="47:28" pos:end="47:56"><name pos:start="47:28" pos:end="47:47">SLICE_MIN_START_CODE</name> <operator pos:start="47:49" pos:end="47:50">||</operator> <name pos:start="47:52" pos:end="47:56">state</name></expr></argument> &gt;</argument_list></name> <name pos:start="47:60" pos:end="47:79">SLICE_MAX_START_CODE</name></expr>)</condition><block pos:start="47:81" pos:end="55:17">{<block_content pos:start="49:21" pos:end="53:31">

                    <expr_stmt pos:start="49:21" pos:end="49:44"><expr pos:start="49:21" pos:end="49:43"><name pos:start="49:21" pos:end="49:41"><name pos:start="49:21" pos:end="49:22">pc</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:41">frame_start_found</name></name><operator pos:start="49:42" pos:end="49:42">=</operator><literal type="number" pos:start="49:43" pos:end="49:43">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="51:21" pos:end="51:33"><expr pos:start="51:21" pos:end="51:32"><name pos:start="51:21" pos:end="51:29"><name pos:start="51:21" pos:end="51:22">pc</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:29">state</name></name><operator pos:start="51:30" pos:end="51:30">=</operator><operator pos:start="51:31" pos:end="51:31">-</operator><literal type="number" pos:start="51:32" pos:end="51:32">1</literal></expr>;</expr_stmt> 

                    <return pos:start="53:21" pos:end="53:31">return <expr pos:start="53:28" pos:end="53:30"><name pos:start="53:28" pos:end="53:28">i</name><operator pos:start="53:29" pos:end="53:29">-</operator><literal type="number" pos:start="53:30" pos:end="53:30">3</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>        

    <expr_stmt pos:start="63:5" pos:end="63:21"><expr pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:13"><name pos:start="63:5" pos:end="63:6">pc</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:13">state</name></name><operator pos:start="63:14" pos:end="63:14">=</operator> <name pos:start="63:16" pos:end="63:20">state</name></expr>;</expr_stmt>

    <return pos:start="65:5" pos:end="65:14">return <expr pos:start="65:12" pos:end="65:13"><operator pos:start="65:12" pos:end="65:12">-</operator><literal type="number" pos:start="65:13" pos:end="65:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
