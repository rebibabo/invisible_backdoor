<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10669.c" pos:tabs="8"><function pos:start="1:1" pos:end="629:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">mov_init</name><parameter_list pos:start="1:20" pos:end="1:39">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:37"><name pos:start="1:21" pos:end="1:35">AVFormatContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="629:1">{<block_content pos:start="5:5" pos:end="627:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MOVMuxContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">mov</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:82"><decl pos:start="7:5" pos:end="7:81"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">AVDictionaryEntry</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:33">global_tcr</name> <init pos:start="7:35" pos:end="7:81">= <expr pos:start="7:37" pos:end="7:81"><call pos:start="7:37" pos:end="7:81"><name pos:start="7:37" pos:end="7:47">av_dict_get</name><argument_list pos:start="7:48" pos:end="7:81">(<argument pos:start="7:49" pos:end="7:59"><expr pos:start="7:49" pos:end="7:59"><name pos:start="7:49" pos:end="7:59"><name pos:start="7:49" pos:end="7:49">s</name><operator pos:start="7:50" pos:end="7:51">-&gt;</operator><name pos:start="7:52" pos:end="7:59">metadata</name></name></expr></argument>, <argument pos:start="7:62" pos:end="7:71"><expr pos:start="7:62" pos:end="7:71"><literal type="string" pos:start="7:62" pos:end="7:71">"timecode"</literal></expr></argument>, <argument pos:start="7:74" pos:end="7:77"><expr pos:start="7:74" pos:end="7:77"><name pos:start="7:74" pos:end="7:77">NULL</name></expr></argument>, <argument pos:start="7:80" pos:end="7:80"><expr pos:start="7:80" pos:end="7:80"><literal type="number" pos:start="7:80" pos:end="7:80">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:16"><expr pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:7">mov</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:11">fc</name></name> <operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:15">s</name></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:29">/* Default mode == MP4 */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:7">mov</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:13">mode</name></name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:24">MODE_MP4</name></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="39:5"><if pos:start="23:5" pos:end="39:5">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:18">oformat</name></name></expr>)</condition> <block pos:start="23:21" pos:end="39:5">{<block_content pos:start="25:9" pos:end="37:72">

        <if_stmt pos:start="25:9" pos:end="37:72"><if pos:start="25:9" pos:end="25:67">if <condition pos:start="25:12" pos:end="25:45">(<expr pos:start="25:13" pos:end="25:44"><operator pos:start="25:13" pos:end="25:13">!</operator><call pos:start="25:14" pos:end="25:44"><name pos:start="25:14" pos:end="25:19">strcmp</name><argument_list pos:start="25:20" pos:end="25:44">(<argument pos:start="25:21" pos:end="25:25"><expr pos:start="25:21" pos:end="25:25"><literal type="string" pos:start="25:21" pos:end="25:25">"3gp"</literal></expr></argument>, <argument pos:start="25:28" pos:end="25:43"><expr pos:start="25:28" pos:end="25:43"><name pos:start="25:28" pos:end="25:43"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:37">oformat</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:43">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:47" pos:end="25:67"><block_content pos:start="25:47" pos:end="25:67"> <expr_stmt pos:start="25:47" pos:end="25:67"><expr pos:start="25:47" pos:end="25:66"><name pos:start="25:47" pos:end="25:55"><name pos:start="25:47" pos:end="25:49">mov</name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:55">mode</name></name> <operator pos:start="25:57" pos:end="25:57">=</operator> <name pos:start="25:59" pos:end="25:66">MODE_3GP</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="27:9" pos:end="27:81">else if <condition pos:start="27:17" pos:end="27:50">(<expr pos:start="27:18" pos:end="27:49"><operator pos:start="27:18" pos:end="27:18">!</operator><call pos:start="27:19" pos:end="27:49"><name pos:start="27:19" pos:end="27:24">strcmp</name><argument_list pos:start="27:25" pos:end="27:49">(<argument pos:start="27:26" pos:end="27:30"><expr pos:start="27:26" pos:end="27:30"><literal type="string" pos:start="27:26" pos:end="27:30">"3g2"</literal></expr></argument>, <argument pos:start="27:33" pos:end="27:48"><expr pos:start="27:33" pos:end="27:48"><name pos:start="27:33" pos:end="27:48"><name pos:start="27:33" pos:end="27:33">s</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:42">oformat</name><operator pos:start="27:43" pos:end="27:44">-&gt;</operator><name pos:start="27:45" pos:end="27:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:52" pos:end="27:81"><block_content pos:start="27:52" pos:end="27:81"> <expr_stmt pos:start="27:52" pos:end="27:81"><expr pos:start="27:52" pos:end="27:80"><name pos:start="27:52" pos:end="27:60"><name pos:start="27:52" pos:end="27:54">mov</name><operator pos:start="27:55" pos:end="27:56">-&gt;</operator><name pos:start="27:57" pos:end="27:60">mode</name></name> <operator pos:start="27:62" pos:end="27:62">=</operator> <name pos:start="27:64" pos:end="27:71">MODE_3GP</name><operator pos:start="27:72" pos:end="27:72">|</operator><name pos:start="27:73" pos:end="27:80">MODE_3G2</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="29:9" pos:end="29:72">else if <condition pos:start="29:17" pos:end="29:50">(<expr pos:start="29:18" pos:end="29:49"><operator pos:start="29:18" pos:end="29:18">!</operator><call pos:start="29:19" pos:end="29:49"><name pos:start="29:19" pos:end="29:24">strcmp</name><argument_list pos:start="29:25" pos:end="29:49">(<argument pos:start="29:26" pos:end="29:30"><expr pos:start="29:26" pos:end="29:30"><literal type="string" pos:start="29:26" pos:end="29:30">"mov"</literal></expr></argument>, <argument pos:start="29:33" pos:end="29:48"><expr pos:start="29:33" pos:end="29:48"><name pos:start="29:33" pos:end="29:48"><name pos:start="29:33" pos:end="29:33">s</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:42">oformat</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:52" pos:end="29:72"><block_content pos:start="29:52" pos:end="29:72"> <expr_stmt pos:start="29:52" pos:end="29:72"><expr pos:start="29:52" pos:end="29:71"><name pos:start="29:52" pos:end="29:60"><name pos:start="29:52" pos:end="29:54">mov</name><operator pos:start="29:55" pos:end="29:56">-&gt;</operator><name pos:start="29:57" pos:end="29:60">mode</name></name> <operator pos:start="29:62" pos:end="29:62">=</operator> <name pos:start="29:64" pos:end="29:71">MODE_MOV</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="31:9" pos:end="31:72">else if <condition pos:start="31:17" pos:end="31:50">(<expr pos:start="31:18" pos:end="31:49"><operator pos:start="31:18" pos:end="31:18">!</operator><call pos:start="31:19" pos:end="31:49"><name pos:start="31:19" pos:end="31:24">strcmp</name><argument_list pos:start="31:25" pos:end="31:49">(<argument pos:start="31:26" pos:end="31:30"><expr pos:start="31:26" pos:end="31:30"><literal type="string" pos:start="31:26" pos:end="31:30">"psp"</literal></expr></argument>, <argument pos:start="31:33" pos:end="31:48"><expr pos:start="31:33" pos:end="31:48"><name pos:start="31:33" pos:end="31:48"><name pos:start="31:33" pos:end="31:33">s</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:42">oformat</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:52" pos:end="31:72"><block_content pos:start="31:52" pos:end="31:72"> <expr_stmt pos:start="31:52" pos:end="31:72"><expr pos:start="31:52" pos:end="31:71"><name pos:start="31:52" pos:end="31:60"><name pos:start="31:52" pos:end="31:54">mov</name><operator pos:start="31:55" pos:end="31:56">-&gt;</operator><name pos:start="31:57" pos:end="31:60">mode</name></name> <operator pos:start="31:62" pos:end="31:62">=</operator> <name pos:start="31:64" pos:end="31:71">MODE_PSP</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="33:9" pos:end="33:73">else if <condition pos:start="33:17" pos:end="33:50">(<expr pos:start="33:18" pos:end="33:49"><operator pos:start="33:18" pos:end="33:18">!</operator><call pos:start="33:19" pos:end="33:49"><name pos:start="33:19" pos:end="33:24">strcmp</name><argument_list pos:start="33:25" pos:end="33:49">(<argument pos:start="33:26" pos:end="33:31"><expr pos:start="33:26" pos:end="33:31"><literal type="string" pos:start="33:26" pos:end="33:31">"ipod"</literal></expr></argument>,<argument pos:start="33:33" pos:end="33:48"><expr pos:start="33:33" pos:end="33:48"><name pos:start="33:33" pos:end="33:48"><name pos:start="33:33" pos:end="33:33">s</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:42">oformat</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:52" pos:end="33:73"><block_content pos:start="33:52" pos:end="33:73"> <expr_stmt pos:start="33:52" pos:end="33:73"><expr pos:start="33:52" pos:end="33:72"><name pos:start="33:52" pos:end="33:60"><name pos:start="33:52" pos:end="33:54">mov</name><operator pos:start="33:55" pos:end="33:56">-&gt;</operator><name pos:start="33:57" pos:end="33:60">mode</name></name> <operator pos:start="33:62" pos:end="33:62">=</operator> <name pos:start="33:64" pos:end="33:72">MODE_IPOD</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="35:9" pos:end="35:72">else if <condition pos:start="35:17" pos:end="35:50">(<expr pos:start="35:18" pos:end="35:49"><operator pos:start="35:18" pos:end="35:18">!</operator><call pos:start="35:19" pos:end="35:49"><name pos:start="35:19" pos:end="35:24">strcmp</name><argument_list pos:start="35:25" pos:end="35:49">(<argument pos:start="35:26" pos:end="35:31"><expr pos:start="35:26" pos:end="35:31"><literal type="string" pos:start="35:26" pos:end="35:31">"ismv"</literal></expr></argument>,<argument pos:start="35:33" pos:end="35:48"><expr pos:start="35:33" pos:end="35:48"><name pos:start="35:33" pos:end="35:48"><name pos:start="35:33" pos:end="35:33">s</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:42">oformat</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:52" pos:end="35:72"><block_content pos:start="35:52" pos:end="35:72"> <expr_stmt pos:start="35:52" pos:end="35:72"><expr pos:start="35:52" pos:end="35:71"><name pos:start="35:52" pos:end="35:60"><name pos:start="35:52" pos:end="35:54">mov</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:60">mode</name></name> <operator pos:start="35:62" pos:end="35:62">=</operator> <name pos:start="35:64" pos:end="35:71">MODE_ISM</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="37:9" pos:end="37:72">else if <condition pos:start="37:17" pos:end="37:50">(<expr pos:start="37:18" pos:end="37:49"><operator pos:start="37:18" pos:end="37:18">!</operator><call pos:start="37:19" pos:end="37:49"><name pos:start="37:19" pos:end="37:24">strcmp</name><argument_list pos:start="37:25" pos:end="37:49">(<argument pos:start="37:26" pos:end="37:30"><expr pos:start="37:26" pos:end="37:30"><literal type="string" pos:start="37:26" pos:end="37:30">"f4v"</literal></expr></argument>, <argument pos:start="37:33" pos:end="37:48"><expr pos:start="37:33" pos:end="37:48"><name pos:start="37:33" pos:end="37:48"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:42">oformat</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:52" pos:end="37:72"><block_content pos:start="37:52" pos:end="37:72"> <expr_stmt pos:start="37:52" pos:end="37:72"><expr pos:start="37:52" pos:end="37:71"><name pos:start="37:52" pos:end="37:60"><name pos:start="37:52" pos:end="37:54">mov</name><operator pos:start="37:55" pos:end="37:56">-&gt;</operator><name pos:start="37:57" pos:end="37:60">mode</name></name> <operator pos:start="37:62" pos:end="37:62">=</operator> <name pos:start="37:64" pos:end="37:71">MODE_F4V</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="45:45"><if pos:start="43:5" pos:end="45:45">if <condition pos:start="43:8" pos:end="43:44">(<expr pos:start="43:9" pos:end="43:43"><name pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:11">mov</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:18">flags</name></name> <operator pos:start="43:20" pos:end="43:20">&amp;</operator> <name pos:start="43:22" pos:end="43:43">FF_MOV_FLAG_DELAY_MOOV</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:45"><block_content pos:start="45:9" pos:end="45:45">

        <expr_stmt pos:start="45:9" pos:end="45:45"><expr pos:start="45:9" pos:end="45:44"><name pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:11">mov</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:18">flags</name></name> <operator pos:start="45:20" pos:end="45:21">|=</operator> <name pos:start="45:23" pos:end="45:44">FF_MOV_FLAG_EMPTY_MOOV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="51:18">/* Set the FRAGMENT flag if any of the fragmentation methods are

     * enabled. */</comment>

    <if_stmt pos:start="53:5" pos:end="61:43"><if pos:start="53:5" pos:end="61:43">if <condition pos:start="53:8" pos:end="59:47">(<expr pos:start="53:9" pos:end="59:46"><name pos:start="53:9" pos:end="53:34"><name pos:start="53:9" pos:end="53:11">mov</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:34">max_fragment_duration</name></name> <operator pos:start="53:36" pos:end="53:37">||</operator> <name pos:start="53:39" pos:end="53:60"><name pos:start="53:39" pos:end="53:41">mov</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:60">max_fragment_size</name></name> <operator pos:start="53:62" pos:end="53:63">||</operator>

        <name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:11">mov</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:18">flags</name></name> <operator pos:start="55:20" pos:end="55:20">&amp;</operator> <operator pos:start="55:22" pos:end="55:22">(</operator><name pos:start="55:23" pos:end="55:44">FF_MOV_FLAG_EMPTY_MOOV</name> <operator pos:start="55:46" pos:end="55:46">|</operator>

                      <name pos:start="57:23" pos:end="57:47">FF_MOV_FLAG_FRAG_KEYFRAME</name> <operator pos:start="57:49" pos:end="57:49">|</operator>

                      <name pos:start="59:23" pos:end="59:45">FF_MOV_FLAG_FRAG_CUSTOM</name><operator pos:start="59:46" pos:end="59:46">)</operator></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:43"><block_content pos:start="61:9" pos:end="61:43">

        <expr_stmt pos:start="61:9" pos:end="61:43"><expr pos:start="61:9" pos:end="61:42"><name pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:11">mov</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:18">flags</name></name> <operator pos:start="61:20" pos:end="61:21">|=</operator> <name pos:start="61:23" pos:end="61:42">FF_MOV_FLAG_FRAGMENT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:46">/* Set other implicit flags immediately */</comment>

    <if_stmt pos:start="67:5" pos:end="71:43"><if pos:start="67:5" pos:end="71:43">if <condition pos:start="67:8" pos:end="67:30">(<expr pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:17"><name pos:start="67:9" pos:end="67:11">mov</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:17">mode</name></name> <operator pos:start="67:19" pos:end="67:20">==</operator> <name pos:start="67:22" pos:end="67:29">MODE_ISM</name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="71:43"><block_content pos:start="69:9" pos:end="71:43">

        <expr_stmt pos:start="69:9" pos:end="71:43"><expr pos:start="69:9" pos:end="71:42"><name pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:11">mov</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:18">flags</name></name> <operator pos:start="69:20" pos:end="69:21">|=</operator> <name pos:start="69:23" pos:end="69:44">FF_MOV_FLAG_EMPTY_MOOV</name> <operator pos:start="69:46" pos:end="69:46">|</operator> <name pos:start="69:48" pos:end="69:72">FF_MOV_FLAG_SEPARATE_MOOF</name> <operator pos:start="69:74" pos:end="69:74">|</operator>

                      <name pos:start="71:23" pos:end="71:42">FF_MOV_FLAG_FRAGMENT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="77:52"><if pos:start="73:5" pos:end="77:52">if <condition pos:start="73:8" pos:end="73:38">(<expr pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:18"><name pos:start="73:9" pos:end="73:11">mov</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:18">flags</name></name> <operator pos:start="73:20" pos:end="73:20">&amp;</operator> <name pos:start="73:22" pos:end="73:37">FF_MOV_FLAG_DASH</name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="77:52"><block_content pos:start="75:9" pos:end="77:52">

        <expr_stmt pos:start="75:9" pos:end="77:52"><expr pos:start="75:9" pos:end="77:51"><name pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:11">mov</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:18">flags</name></name> <operator pos:start="75:20" pos:end="75:21">|=</operator> <name pos:start="75:23" pos:end="75:42">FF_MOV_FLAG_FRAGMENT</name> <operator pos:start="75:44" pos:end="75:44">|</operator> <name pos:start="75:46" pos:end="75:67">FF_MOV_FLAG_EMPTY_MOOV</name> <operator pos:start="75:69" pos:end="75:69">|</operator>

                      <name pos:start="77:23" pos:end="77:51">FF_MOV_FLAG_DEFAULT_BASE_MOOF</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="87:5"><if pos:start="81:5" pos:end="87:5">if <condition pos:start="81:8" pos:end="81:78">(<expr pos:start="81:9" pos:end="81:77"><name pos:start="81:9" pos:end="81:18"><name pos:start="81:9" pos:end="81:11">mov</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:18">flags</name></name> <operator pos:start="81:20" pos:end="81:20">&amp;</operator> <name pos:start="81:22" pos:end="81:43">FF_MOV_FLAG_EMPTY_MOOV</name> <operator pos:start="81:45" pos:end="81:46">&amp;&amp;</operator> <name pos:start="81:48" pos:end="81:55"><name pos:start="81:48" pos:end="81:48">s</name><operator pos:start="81:49" pos:end="81:50">-&gt;</operator><name pos:start="81:51" pos:end="81:55">flags</name></name> <operator pos:start="81:57" pos:end="81:57">&amp;</operator> <name pos:start="81:59" pos:end="81:77">AVFMT_FLAG_AUTO_BSF</name></expr>)</condition> <block pos:start="81:80" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:41">

        <expr_stmt pos:start="83:9" pos:end="83:99"><expr pos:start="83:9" pos:end="83:98"><call pos:start="83:9" pos:end="83:98"><name pos:start="83:9" pos:end="83:14">av_log</name><argument_list pos:start="83:15" pos:end="83:98">(<argument pos:start="83:16" pos:end="83:16"><expr pos:start="83:16" pos:end="83:16"><name pos:start="83:16" pos:end="83:16">s</name></expr></argument>, <argument pos:start="83:19" pos:end="83:32"><expr pos:start="83:19" pos:end="83:32"><name pos:start="83:19" pos:end="83:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="83:35" pos:end="83:97"><expr pos:start="83:35" pos:end="83:97"><literal type="string" pos:start="83:35" pos:end="83:97">"Empty MOOV enabled; disabling automatic bitstream filtering\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:41"><expr pos:start="85:9" pos:end="85:40"><name pos:start="85:9" pos:end="85:16"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:16">flags</name></name> <operator pos:start="85:18" pos:end="85:19">&amp;=</operator> <operator pos:start="85:21" pos:end="85:21">~</operator><name pos:start="85:22" pos:end="85:40">AVFMT_FLAG_AUTO_BSF</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="95:5"><if pos:start="91:5" pos:end="95:5">if <condition pos:start="91:8" pos:end="91:43">(<expr pos:start="91:9" pos:end="91:42"><name pos:start="91:9" pos:end="91:18"><name pos:start="91:9" pos:end="91:11">mov</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:18">flags</name></name> <operator pos:start="91:20" pos:end="91:20">&amp;</operator> <name pos:start="91:22" pos:end="91:42">FF_MOV_FLAG_FASTSTART</name></expr>)</condition> <block pos:start="91:45" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:37">

        <expr_stmt pos:start="93:9" pos:end="93:37"><expr pos:start="93:9" pos:end="93:36"><name pos:start="93:9" pos:end="93:31"><name pos:start="93:9" pos:end="93:11">mov</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:31">reserved_moov_size</name></name> <operator pos:start="93:33" pos:end="93:33">=</operator> <operator pos:start="93:35" pos:end="93:35">-</operator><literal type="number" pos:start="93:36" pos:end="93:36">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="121:5"><if pos:start="99:5" pos:end="121:5">if <condition pos:start="99:8" pos:end="99:30">(<expr pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:11">mov</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:25">use_editlist</name></name> <operator pos:start="99:27" pos:end="99:27">&lt;</operator> <literal type="number" pos:start="99:29" pos:end="99:29">0</literal></expr>)</condition> <block pos:start="99:32" pos:end="121:5">{<block_content pos:start="101:9" pos:end="119:9">

        <expr_stmt pos:start="101:9" pos:end="101:30"><expr pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:25"><name pos:start="101:9" pos:end="101:11">mov</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:25">use_editlist</name></name> <operator pos:start="101:27" pos:end="101:27">=</operator> <literal type="number" pos:start="101:29" pos:end="101:29">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="119:9"><if pos:start="103:9" pos:end="119:9">if <condition pos:start="103:12" pos:end="105:51">(<expr pos:start="103:13" pos:end="105:50"><name pos:start="103:13" pos:end="103:22"><name pos:start="103:13" pos:end="103:15">mov</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:22">flags</name></name> <operator pos:start="103:24" pos:end="103:24">&amp;</operator> <name pos:start="103:26" pos:end="103:45">FF_MOV_FLAG_FRAGMENT</name> <operator pos:start="103:47" pos:end="103:48">&amp;&amp;</operator>

            <operator pos:start="105:13" pos:end="105:13">!</operator><operator pos:start="105:14" pos:end="105:14">(</operator><name pos:start="105:15" pos:end="105:24"><name pos:start="105:15" pos:end="105:17">mov</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:24">flags</name></name> <operator pos:start="105:26" pos:end="105:26">&amp;</operator> <name pos:start="105:28" pos:end="105:49">FF_MOV_FLAG_DELAY_MOOV</name><operator pos:start="105:50" pos:end="105:50">)</operator></expr>)</condition> <block pos:start="105:53" pos:end="119:9">{<block_content pos:start="113:13" pos:end="117:38">

            <comment type="line" pos:start="107:13" pos:end="107:67">// If we can avoid needing an edit list by shifting the</comment>

            <comment type="line" pos:start="109:13" pos:end="109:68">// tracks, prefer that over (trying to) write edit lists</comment>

            <comment type="line" pos:start="111:13" pos:end="111:36">// in fragmented output.</comment>

            <if_stmt pos:start="113:13" pos:end="117:38"><if pos:start="113:13" pos:end="117:38">if <condition pos:start="113:16" pos:end="115:69">(<expr pos:start="113:17" pos:end="115:68"><name pos:start="113:17" pos:end="113:36"><name pos:start="113:17" pos:end="113:17">s</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:36">avoid_negative_ts</name></name> <operator pos:start="113:38" pos:end="113:39">==</operator> <name pos:start="113:41" pos:end="113:63">AVFMT_AVOID_NEG_TS_AUTO</name> <operator pos:start="113:65" pos:end="113:66">||</operator>

                <name pos:start="115:17" pos:end="115:36"><name pos:start="115:17" pos:end="115:17">s</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:36">avoid_negative_ts</name></name> <operator pos:start="115:38" pos:end="115:39">==</operator> <name pos:start="115:41" pos:end="115:68">AVFMT_AVOID_NEG_TS_MAKE_ZERO</name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:38"><block_content pos:start="117:17" pos:end="117:38">

                <expr_stmt pos:start="117:17" pos:end="117:38"><expr pos:start="117:17" pos:end="117:37"><name pos:start="117:17" pos:end="117:33"><name pos:start="117:17" pos:end="117:19">mov</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:33">use_editlist</name></name> <operator pos:start="117:35" pos:end="117:35">=</operator> <literal type="number" pos:start="117:37" pos:end="117:37">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="123:5" pos:end="127:120"><if pos:start="123:5" pos:end="127:120">if <condition pos:start="123:8" pos:end="125:68">(<expr pos:start="123:9" pos:end="125:67"><name pos:start="123:9" pos:end="123:18"><name pos:start="123:9" pos:end="123:11">mov</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:18">flags</name></name> <operator pos:start="123:20" pos:end="123:20">&amp;</operator> <name pos:start="123:22" pos:end="123:43">FF_MOV_FLAG_EMPTY_MOOV</name> <operator pos:start="123:45" pos:end="123:46">&amp;&amp;</operator>

        <operator pos:start="125:9" pos:end="125:9">!</operator><operator pos:start="125:10" pos:end="125:10">(</operator><name pos:start="125:11" pos:end="125:20"><name pos:start="125:11" pos:end="125:13">mov</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:20">flags</name></name> <operator pos:start="125:22" pos:end="125:22">&amp;</operator> <name pos:start="125:24" pos:end="125:45">FF_MOV_FLAG_DELAY_MOOV</name><operator pos:start="125:46" pos:end="125:46">)</operator> <operator pos:start="125:48" pos:end="125:49">&amp;&amp;</operator> <name pos:start="125:51" pos:end="125:67"><name pos:start="125:51" pos:end="125:53">mov</name><operator pos:start="125:54" pos:end="125:55">-&gt;</operator><name pos:start="125:56" pos:end="125:67">use_editlist</name></name></expr>)</condition><block type="pseudo" pos:start="127:9" pos:end="127:120"><block_content pos:start="127:9" pos:end="127:120">

        <expr_stmt pos:start="127:9" pos:end="127:120"><expr pos:start="127:9" pos:end="127:119"><call pos:start="127:9" pos:end="127:119"><name pos:start="127:9" pos:end="127:14">av_log</name><argument_list pos:start="127:15" pos:end="127:119">(<argument pos:start="127:16" pos:end="127:16"><expr pos:start="127:16" pos:end="127:16"><name pos:start="127:16" pos:end="127:16">s</name></expr></argument>, <argument pos:start="127:19" pos:end="127:32"><expr pos:start="127:19" pos:end="127:32"><name pos:start="127:19" pos:end="127:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="127:35" pos:end="127:118"><expr pos:start="127:35" pos:end="127:118"><literal type="string" pos:start="127:35" pos:end="127:118">"No meaningful edit list will be written when using empty_moov without delay_moov\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="131:5" pos:end="133:60"><if pos:start="131:5" pos:end="133:60">if <condition pos:start="131:8" pos:end="131:78">(<expr pos:start="131:9" pos:end="131:77"><operator pos:start="131:9" pos:end="131:9">!</operator><name pos:start="131:10" pos:end="131:26"><name pos:start="131:10" pos:end="131:12">mov</name><operator pos:start="131:13" pos:end="131:14">-&gt;</operator><name pos:start="131:15" pos:end="131:26">use_editlist</name></name> <operator pos:start="131:28" pos:end="131:29">&amp;&amp;</operator> <name pos:start="131:31" pos:end="131:50"><name pos:start="131:31" pos:end="131:31">s</name><operator pos:start="131:32" pos:end="131:33">-&gt;</operator><name pos:start="131:34" pos:end="131:50">avoid_negative_ts</name></name> <operator pos:start="131:52" pos:end="131:53">==</operator> <name pos:start="131:55" pos:end="131:77">AVFMT_AVOID_NEG_TS_AUTO</name></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:60"><block_content pos:start="133:9" pos:end="133:60">

        <expr_stmt pos:start="133:9" pos:end="133:60"><expr pos:start="133:9" pos:end="133:59"><name pos:start="133:9" pos:end="133:28"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:28">avoid_negative_ts</name></name> <operator pos:start="133:30" pos:end="133:30">=</operator> <name pos:start="133:32" pos:end="133:59">AVFMT_AVOID_NEG_TS_MAKE_ZERO</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="137:5" pos:end="141:44">/* Clear the omit_tfhd_offset flag if default_base_moof is set;

     * if the latter is set that's enough and omit_tfhd_offset doesn't

     * add anything extra on top of that. */</comment>

    <if_stmt pos:start="143:5" pos:end="147:52"><if pos:start="143:5" pos:end="147:52">if <condition pos:start="143:8" pos:end="145:51">(<expr pos:start="143:9" pos:end="145:50"><name pos:start="143:9" pos:end="143:18"><name pos:start="143:9" pos:end="143:11">mov</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:18">flags</name></name> <operator pos:start="143:20" pos:end="143:20">&amp;</operator> <name pos:start="143:22" pos:end="143:49">FF_MOV_FLAG_OMIT_TFHD_OFFSET</name> <operator pos:start="143:51" pos:end="143:52">&amp;&amp;</operator>

        <name pos:start="145:9" pos:end="145:18"><name pos:start="145:9" pos:end="145:11">mov</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:18">flags</name></name> <operator pos:start="145:20" pos:end="145:20">&amp;</operator> <name pos:start="145:22" pos:end="145:50">FF_MOV_FLAG_DEFAULT_BASE_MOOF</name></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:52"><block_content pos:start="147:9" pos:end="147:52">

        <expr_stmt pos:start="147:9" pos:end="147:52"><expr pos:start="147:9" pos:end="147:51"><name pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:11">mov</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:18">flags</name></name> <operator pos:start="147:20" pos:end="147:21">&amp;=</operator> <operator pos:start="147:23" pos:end="147:23">~</operator><name pos:start="147:24" pos:end="147:51">FF_MOV_FLAG_OMIT_TFHD_OFFSET</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="151:5" pos:end="163:5"><if pos:start="151:5" pos:end="163:5">if <condition pos:start="151:8" pos:end="153:80">(<expr pos:start="151:9" pos:end="153:79"><name pos:start="151:9" pos:end="151:28"><name pos:start="151:9" pos:end="151:11">mov</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:28">frag_interleave</name></name> <operator pos:start="151:30" pos:end="151:31">&amp;&amp;</operator>

        <name pos:start="153:9" pos:end="153:18"><name pos:start="153:9" pos:end="153:11">mov</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:18">flags</name></name> <operator pos:start="153:20" pos:end="153:20">&amp;</operator> <operator pos:start="153:22" pos:end="153:22">(</operator><name pos:start="153:23" pos:end="153:50">FF_MOV_FLAG_OMIT_TFHD_OFFSET</name> <operator pos:start="153:52" pos:end="153:52">|</operator> <name pos:start="153:54" pos:end="153:78">FF_MOV_FLAG_SEPARATE_MOOF</name><operator pos:start="153:79" pos:end="153:79">)</operator></expr>)</condition> <block pos:start="153:82" pos:end="163:5">{<block_content pos:start="155:9" pos:end="161:31">

        <expr_stmt pos:start="155:9" pos:end="159:55"><expr pos:start="155:9" pos:end="159:54"><call pos:start="155:9" pos:end="159:54"><name pos:start="155:9" pos:end="155:14">av_log</name><argument_list pos:start="155:15" pos:end="159:54">(<argument pos:start="155:16" pos:end="155:16"><expr pos:start="155:16" pos:end="155:16"><name pos:start="155:16" pos:end="155:16">s</name></expr></argument>, <argument pos:start="155:19" pos:end="155:30"><expr pos:start="155:19" pos:end="155:30"><name pos:start="155:19" pos:end="155:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="157:16" pos:end="159:53"><expr pos:start="157:16" pos:end="159:53"><literal type="string" pos:start="157:16" pos:end="157:77">"Sample interleaving in fragments is mutually exclusive with "</literal>

               <literal type="string" pos:start="159:16" pos:end="159:53">"omit_tfhd_offset and separate_moof\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="161:9" pos:end="161:31">return <expr pos:start="161:16" pos:end="161:30"><call pos:start="161:16" pos:end="161:30"><name pos:start="161:16" pos:end="161:22">AVERROR</name><argument_list pos:start="161:23" pos:end="161:30">(<argument pos:start="161:24" pos:end="161:29"><expr pos:start="161:24" pos:end="161:29"><name pos:start="161:24" pos:end="161:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="167:5" pos:end="169:66">/* Non-seekable output is ok if using fragmentation. If ism_lookahead

     * is enabled, we don't support non-seekable output at all. */</comment>

    <if_stmt pos:start="171:5" pos:end="179:5"><if pos:start="171:5" pos:end="179:5">if <condition pos:start="171:8" pos:end="173:69">(<expr pos:start="171:9" pos:end="173:68"><operator pos:start="171:9" pos:end="171:9">!</operator><operator pos:start="171:10" pos:end="171:10">(</operator><name pos:start="171:11" pos:end="171:25"><name pos:start="171:11" pos:end="171:11">s</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:15">pb</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:25">seekable</name></name> <operator pos:start="171:27" pos:end="171:27">&amp;</operator> <name pos:start="171:29" pos:end="171:48">AVIO_SEEKABLE_NORMAL</name><operator pos:start="171:49" pos:end="171:49">)</operator> <operator pos:start="171:51" pos:end="171:52">&amp;&amp;</operator>

        <operator pos:start="173:9" pos:end="173:9">(</operator><operator pos:start="173:10" pos:end="173:10">!</operator><operator pos:start="173:11" pos:end="173:11">(</operator><name pos:start="173:12" pos:end="173:21"><name pos:start="173:12" pos:end="173:14">mov</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:21">flags</name></name> <operator pos:start="173:23" pos:end="173:23">&amp;</operator> <name pos:start="173:25" pos:end="173:44">FF_MOV_FLAG_FRAGMENT</name><operator pos:start="173:45" pos:end="173:45">)</operator> <operator pos:start="173:47" pos:end="173:48">||</operator> <name pos:start="173:50" pos:end="173:67"><name pos:start="173:50" pos:end="173:52">mov</name><operator pos:start="173:53" pos:end="173:54">-&gt;</operator><name pos:start="173:55" pos:end="173:67">ism_lookahead</name></name><operator pos:start="173:68" pos:end="173:68">)</operator></expr>)</condition> <block pos:start="173:71" pos:end="179:5">{<block_content pos:start="175:9" pos:end="177:31">

        <expr_stmt pos:start="175:9" pos:end="175:80"><expr pos:start="175:9" pos:end="175:79"><call pos:start="175:9" pos:end="175:79"><name pos:start="175:9" pos:end="175:14">av_log</name><argument_list pos:start="175:15" pos:end="175:79">(<argument pos:start="175:16" pos:end="175:16"><expr pos:start="175:16" pos:end="175:16"><name pos:start="175:16" pos:end="175:16">s</name></expr></argument>, <argument pos:start="175:19" pos:end="175:30"><expr pos:start="175:19" pos:end="175:30"><name pos:start="175:19" pos:end="175:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="175:33" pos:end="175:78"><expr pos:start="175:33" pos:end="175:78"><literal type="string" pos:start="175:33" pos:end="175:78">"muxer does not support non seekable output\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="177:9" pos:end="177:31">return <expr pos:start="177:16" pos:end="177:30"><call pos:start="177:16" pos:end="177:30"><name pos:start="177:16" pos:end="177:22">AVERROR</name><argument_list pos:start="177:23" pos:end="177:30">(<argument pos:start="177:24" pos:end="177:29"><expr pos:start="177:24" pos:end="177:29"><name pos:start="177:24" pos:end="177:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:36"><expr pos:start="183:5" pos:end="183:35"><name pos:start="183:5" pos:end="183:19"><name pos:start="183:5" pos:end="183:7">mov</name><operator pos:start="183:8" pos:end="183:9">-&gt;</operator><name pos:start="183:10" pos:end="183:19">nb_streams</name></name> <operator pos:start="183:21" pos:end="183:21">=</operator> <name pos:start="183:23" pos:end="183:35"><name pos:start="183:23" pos:end="183:23">s</name><operator pos:start="183:24" pos:end="183:25">-&gt;</operator><name pos:start="183:26" pos:end="183:35">nb_streams</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="187:47"><if pos:start="185:5" pos:end="187:47">if <condition pos:start="185:8" pos:end="185:68">(<expr pos:start="185:9" pos:end="185:67"><name pos:start="185:9" pos:end="185:17"><name pos:start="185:9" pos:end="185:11">mov</name><operator pos:start="185:12" pos:end="185:13">-&gt;</operator><name pos:start="185:14" pos:end="185:17">mode</name></name> <operator pos:start="185:19" pos:end="185:19">&amp;</operator> <operator pos:start="185:21" pos:end="185:21">(</operator><name pos:start="185:22" pos:end="185:29">MODE_MP4</name><operator pos:start="185:30" pos:end="185:30">|</operator><name pos:start="185:31" pos:end="185:38">MODE_MOV</name><operator pos:start="185:39" pos:end="185:39">|</operator><name pos:start="185:40" pos:end="185:48">MODE_IPOD</name><operator pos:start="185:49" pos:end="185:49">)</operator> <operator pos:start="185:51" pos:end="185:52">&amp;&amp;</operator> <name pos:start="185:54" pos:end="185:67"><name pos:start="185:54" pos:end="185:54">s</name><operator pos:start="185:55" pos:end="185:56">-&gt;</operator><name pos:start="185:57" pos:end="185:67">nb_chapters</name></name></expr>)</condition><block type="pseudo" pos:start="187:9" pos:end="187:47"><block_content pos:start="187:9" pos:end="187:47">

        <expr_stmt pos:start="187:9" pos:end="187:47"><expr pos:start="187:9" pos:end="187:46"><name pos:start="187:9" pos:end="187:26"><name pos:start="187:9" pos:end="187:11">mov</name><operator pos:start="187:12" pos:end="187:13">-&gt;</operator><name pos:start="187:14" pos:end="187:26">chapter_track</name></name> <operator pos:start="187:28" pos:end="187:28">=</operator> <name pos:start="187:30" pos:end="187:44"><name pos:start="187:30" pos:end="187:32">mov</name><operator pos:start="187:33" pos:end="187:34">-&gt;</operator><name pos:start="187:35" pos:end="187:44">nb_streams</name></name><operator pos:start="187:45" pos:end="187:46">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="191:5" pos:end="209:5"><if pos:start="191:5" pos:end="209:5">if <condition pos:start="191:8" pos:end="191:42">(<expr pos:start="191:9" pos:end="191:41"><name pos:start="191:9" pos:end="191:18"><name pos:start="191:9" pos:end="191:11">mov</name><operator pos:start="191:12" pos:end="191:13">-&gt;</operator><name pos:start="191:14" pos:end="191:18">flags</name></name> <operator pos:start="191:20" pos:end="191:20">&amp;</operator> <name pos:start="191:22" pos:end="191:41">FF_MOV_FLAG_RTP_HINT</name></expr>)</condition> <block pos:start="191:44" pos:end="209:5">{<block_content pos:start="195:9" pos:end="207:9">

        <comment type="block" pos:start="193:9" pos:end="193:61">/* Add hint tracks for each audio and video stream */</comment>

        <for pos:start="195:9" pos:end="207:9">for <control pos:start="195:13" pos:end="195:43">(<init pos:start="195:14" pos:end="195:19"><expr pos:start="195:14" pos:end="195:18"><name pos:start="195:14" pos:end="195:14">i</name> <operator pos:start="195:16" pos:end="195:16">=</operator> <literal type="number" pos:start="195:18" pos:end="195:18">0</literal></expr>;</init> <condition pos:start="195:21" pos:end="195:38"><expr pos:start="195:21" pos:end="195:37"><name pos:start="195:21" pos:end="195:21">i</name> <operator pos:start="195:23" pos:end="195:23">&lt;</operator> <name pos:start="195:25" pos:end="195:37"><name pos:start="195:25" pos:end="195:25">s</name><operator pos:start="195:26" pos:end="195:27">-&gt;</operator><name pos:start="195:28" pos:end="195:37">nb_streams</name></name></expr>;</condition> <incr pos:start="195:40" pos:end="195:42"><expr pos:start="195:40" pos:end="195:42"><name pos:start="195:40" pos:end="195:40">i</name><operator pos:start="195:41" pos:end="195:42">++</operator></expr></incr>)</control> <block pos:start="195:45" pos:end="207:9">{<block_content pos:start="197:13" pos:end="205:13">

            <decl_stmt pos:start="197:13" pos:end="197:41"><decl pos:start="197:13" pos:end="197:40"><type pos:start="197:13" pos:end="197:22"><name pos:start="197:13" pos:end="197:20">AVStream</name> <modifier pos:start="197:22" pos:end="197:22">*</modifier></type><name pos:start="197:23" pos:end="197:24">st</name> <init pos:start="197:26" pos:end="197:40">= <expr pos:start="197:28" pos:end="197:40"><name pos:start="197:28" pos:end="197:40"><name pos:start="197:28" pos:end="197:28">s</name><operator pos:start="197:29" pos:end="197:30">-&gt;</operator><name pos:start="197:31" pos:end="197:37">streams</name><index pos:start="197:38" pos:end="197:40">[<expr pos:start="197:39" pos:end="197:39"><name pos:start="197:39" pos:end="197:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="199:13" pos:end="205:13"><if pos:start="199:13" pos:end="205:13">if <condition pos:start="199:16" pos:end="201:63">(<expr pos:start="199:17" pos:end="201:62"><name pos:start="199:17" pos:end="199:40"><name pos:start="199:17" pos:end="199:18">st</name><operator pos:start="199:19" pos:end="199:20">-&gt;</operator><name pos:start="199:21" pos:end="199:28">codecpar</name><operator pos:start="199:29" pos:end="199:30">-&gt;</operator><name pos:start="199:31" pos:end="199:40">codec_type</name></name> <operator pos:start="199:42" pos:end="199:43">==</operator> <name pos:start="199:45" pos:end="199:62">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="199:64" pos:end="199:65">||</operator>

                <name pos:start="201:17" pos:end="201:40"><name pos:start="201:17" pos:end="201:18">st</name><operator pos:start="201:19" pos:end="201:20">-&gt;</operator><name pos:start="201:21" pos:end="201:28">codecpar</name><operator pos:start="201:29" pos:end="201:30">-&gt;</operator><name pos:start="201:31" pos:end="201:40">codec_type</name></name> <operator pos:start="201:42" pos:end="201:43">==</operator> <name pos:start="201:45" pos:end="201:62">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="201:65" pos:end="205:13">{<block_content pos:start="203:17" pos:end="203:34">

                <expr_stmt pos:start="203:17" pos:end="203:34"><expr pos:start="203:17" pos:end="203:33"><name pos:start="203:17" pos:end="203:31"><name pos:start="203:17" pos:end="203:19">mov</name><operator pos:start="203:20" pos:end="203:21">-&gt;</operator><name pos:start="203:22" pos:end="203:31">nb_streams</name></name><operator pos:start="203:32" pos:end="203:33">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="213:5" pos:end="269:5"><if pos:start="213:5" pos:end="269:5">if <condition pos:start="213:8" pos:end="215:32">(   <expr pos:start="213:12" pos:end="215:31"><name pos:start="213:12" pos:end="213:26"><name pos:start="213:12" pos:end="213:14">mov</name><operator pos:start="213:15" pos:end="213:16">-&gt;</operator><name pos:start="213:17" pos:end="213:26">write_tmcd</name></name> <operator pos:start="213:28" pos:end="213:29">==</operator> <operator pos:start="213:31" pos:end="213:31">-</operator><literal type="number" pos:start="213:32" pos:end="213:32">1</literal> <operator pos:start="213:34" pos:end="213:35">&amp;&amp;</operator> <operator pos:start="213:37" pos:end="213:37">(</operator><name pos:start="213:38" pos:end="213:46"><name pos:start="213:38" pos:end="213:40">mov</name><operator pos:start="213:41" pos:end="213:42">-&gt;</operator><name pos:start="213:43" pos:end="213:46">mode</name></name> <operator pos:start="213:48" pos:end="213:49">==</operator> <name pos:start="213:51" pos:end="213:58">MODE_MOV</name> <operator pos:start="213:60" pos:end="213:61">||</operator> <name pos:start="213:63" pos:end="213:71"><name pos:start="213:63" pos:end="213:65">mov</name><operator pos:start="213:66" pos:end="213:67">-&gt;</operator><name pos:start="213:68" pos:end="213:71">mode</name></name> <operator pos:start="213:73" pos:end="213:74">==</operator> <name pos:start="213:76" pos:end="213:83">MODE_MP4</name><operator pos:start="213:84" pos:end="213:84">)</operator>

        <operator pos:start="215:9" pos:end="215:10">||</operator> <name pos:start="215:12" pos:end="215:26"><name pos:start="215:12" pos:end="215:14">mov</name><operator pos:start="215:15" pos:end="215:16">-&gt;</operator><name pos:start="215:17" pos:end="215:26">write_tmcd</name></name> <operator pos:start="215:28" pos:end="215:29">==</operator> <literal type="number" pos:start="215:31" pos:end="215:31">1</literal></expr>)</condition> <block pos:start="215:34" pos:end="269:5">{<block_content pos:start="219:9" pos:end="267:45">

        <comment type="block" pos:start="217:9" pos:end="217:65">/* +1 tmcd track for each video stream with a timecode */</comment>

        <for pos:start="219:9" pos:end="239:9">for <control pos:start="219:13" pos:end="219:43">(<init pos:start="219:14" pos:end="219:19"><expr pos:start="219:14" pos:end="219:18"><name pos:start="219:14" pos:end="219:14">i</name> <operator pos:start="219:16" pos:end="219:16">=</operator> <literal type="number" pos:start="219:18" pos:end="219:18">0</literal></expr>;</init> <condition pos:start="219:21" pos:end="219:38"><expr pos:start="219:21" pos:end="219:37"><name pos:start="219:21" pos:end="219:21">i</name> <operator pos:start="219:23" pos:end="219:23">&lt;</operator> <name pos:start="219:25" pos:end="219:37"><name pos:start="219:25" pos:end="219:25">s</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:37">nb_streams</name></name></expr>;</condition> <incr pos:start="219:40" pos:end="219:42"><expr pos:start="219:40" pos:end="219:42"><name pos:start="219:40" pos:end="219:40">i</name><operator pos:start="219:41" pos:end="219:42">++</operator></expr></incr>)</control> <block pos:start="219:45" pos:end="239:9">{<block_content pos:start="221:13" pos:end="237:13">

            <decl_stmt pos:start="221:13" pos:end="221:41"><decl pos:start="221:13" pos:end="221:40"><type pos:start="221:13" pos:end="221:22"><name pos:start="221:13" pos:end="221:20">AVStream</name> <modifier pos:start="221:22" pos:end="221:22">*</modifier></type><name pos:start="221:23" pos:end="221:24">st</name> <init pos:start="221:26" pos:end="221:40">= <expr pos:start="221:28" pos:end="221:40"><name pos:start="221:28" pos:end="221:40"><name pos:start="221:28" pos:end="221:28">s</name><operator pos:start="221:29" pos:end="221:30">-&gt;</operator><name pos:start="221:31" pos:end="221:37">streams</name><index pos:start="221:38" pos:end="221:40">[<expr pos:start="221:39" pos:end="221:39"><name pos:start="221:39" pos:end="221:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="223:13" pos:end="223:46"><decl pos:start="223:13" pos:end="223:45"><type pos:start="223:13" pos:end="223:31"><name pos:start="223:13" pos:end="223:29">AVDictionaryEntry</name> <modifier pos:start="223:31" pos:end="223:31">*</modifier></type><name pos:start="223:32" pos:end="223:32">t</name> <init pos:start="223:34" pos:end="223:45">= <expr pos:start="223:36" pos:end="223:45"><name pos:start="223:36" pos:end="223:45">global_tcr</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="225:13" pos:end="237:13"><if pos:start="225:13" pos:end="237:13">if <condition pos:start="225:16" pos:end="227:74">(<expr pos:start="225:17" pos:end="227:73"><name pos:start="225:17" pos:end="225:40"><name pos:start="225:17" pos:end="225:18">st</name><operator pos:start="225:19" pos:end="225:20">-&gt;</operator><name pos:start="225:21" pos:end="225:28">codecpar</name><operator pos:start="225:29" pos:end="225:30">-&gt;</operator><name pos:start="225:31" pos:end="225:40">codec_type</name></name> <operator pos:start="225:42" pos:end="225:43">==</operator> <name pos:start="225:45" pos:end="225:62">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="225:64" pos:end="225:65">&amp;&amp;</operator>

                <operator pos:start="227:17" pos:end="227:17">(</operator><name pos:start="227:18" pos:end="227:18">t</name> <operator pos:start="227:20" pos:end="227:21">||</operator> <operator pos:start="227:23" pos:end="227:23">(</operator><name pos:start="227:24" pos:end="227:24">t</name><operator pos:start="227:25" pos:end="227:25">=</operator><call pos:start="227:26" pos:end="227:71"><name pos:start="227:26" pos:end="227:36">av_dict_get</name><argument_list pos:start="227:37" pos:end="227:71">(<argument pos:start="227:38" pos:end="227:49"><expr pos:start="227:38" pos:end="227:49"><name pos:start="227:38" pos:end="227:49"><name pos:start="227:38" pos:end="227:39">st</name><operator pos:start="227:40" pos:end="227:41">-&gt;</operator><name pos:start="227:42" pos:end="227:49">metadata</name></name></expr></argument>, <argument pos:start="227:52" pos:end="227:61"><expr pos:start="227:52" pos:end="227:61"><literal type="string" pos:start="227:52" pos:end="227:61">"timecode"</literal></expr></argument>, <argument pos:start="227:64" pos:end="227:67"><expr pos:start="227:64" pos:end="227:67"><name pos:start="227:64" pos:end="227:67">NULL</name></expr></argument>, <argument pos:start="227:70" pos:end="227:70"><expr pos:start="227:70" pos:end="227:70"><literal type="number" pos:start="227:70" pos:end="227:70">0</literal></expr></argument>)</argument_list></call><operator pos:start="227:72" pos:end="227:72">)</operator><operator pos:start="227:73" pos:end="227:73">)</operator></expr>)</condition> <block pos:start="227:76" pos:end="237:13">{<block_content pos:start="229:17" pos:end="235:40">

                <decl_stmt pos:start="229:17" pos:end="229:30"><decl pos:start="229:17" pos:end="229:29"><type pos:start="229:17" pos:end="229:26"><name pos:start="229:17" pos:end="229:26">AVTimecode</name></type> <name pos:start="229:28" pos:end="229:29">tc</name></decl>;</decl_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:68"><expr pos:start="231:17" pos:end="231:67"><name pos:start="231:17" pos:end="231:19">ret</name> <operator pos:start="231:21" pos:end="231:21">=</operator> <call pos:start="231:23" pos:end="231:67"><name pos:start="231:23" pos:end="231:46">mov_check_timecode_track</name><argument_list pos:start="231:47" pos:end="231:67">(<argument pos:start="231:48" pos:end="231:48"><expr pos:start="231:48" pos:end="231:48"><name pos:start="231:48" pos:end="231:48">s</name></expr></argument>, <argument pos:start="231:51" pos:end="231:53"><expr pos:start="231:51" pos:end="231:53"><operator pos:start="231:51" pos:end="231:51">&amp;</operator><name pos:start="231:52" pos:end="231:53">tc</name></expr></argument>, <argument pos:start="231:56" pos:end="231:56"><expr pos:start="231:56" pos:end="231:56"><name pos:start="231:56" pos:end="231:56">i</name></expr></argument>, <argument pos:start="231:59" pos:end="231:66"><expr pos:start="231:59" pos:end="231:66"><name pos:start="231:59" pos:end="231:66"><name pos:start="231:59" pos:end="231:59">t</name><operator pos:start="231:60" pos:end="231:61">-&gt;</operator><name pos:start="231:62" pos:end="231:66">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="233:17" pos:end="235:40"><if pos:start="233:17" pos:end="235:40">if <condition pos:start="233:20" pos:end="233:29">(<expr pos:start="233:21" pos:end="233:28"><name pos:start="233:21" pos:end="233:23">ret</name> <operator pos:start="233:25" pos:end="233:26">&gt;=</operator> <literal type="number" pos:start="233:28" pos:end="233:28">0</literal></expr>)</condition><block type="pseudo" pos:start="235:21" pos:end="235:40"><block_content pos:start="235:21" pos:end="235:40">

                    <expr_stmt pos:start="235:21" pos:end="235:40"><expr pos:start="235:21" pos:end="235:39"><name pos:start="235:21" pos:end="235:37"><name pos:start="235:21" pos:end="235:23">mov</name><operator pos:start="235:24" pos:end="235:25">-&gt;</operator><name pos:start="235:26" pos:end="235:37">nb_meta_tmcd</name></name><operator pos:start="235:38" pos:end="235:39">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="243:9" pos:end="243:61">/* check if there is already a tmcd track to remux */</comment>

        <if_stmt pos:start="245:9" pos:end="263:9"><if pos:start="245:9" pos:end="263:9">if <condition pos:start="245:12" pos:end="245:30">(<expr pos:start="245:13" pos:end="245:29"><name pos:start="245:13" pos:end="245:29"><name pos:start="245:13" pos:end="245:15">mov</name><operator pos:start="245:16" pos:end="245:17">-&gt;</operator><name pos:start="245:18" pos:end="245:29">nb_meta_tmcd</name></name></expr>)</condition> <block pos:start="245:32" pos:end="263:9">{<block_content pos:start="247:13" pos:end="261:13">

            <for pos:start="247:13" pos:end="261:13">for <control pos:start="247:17" pos:end="247:47">(<init pos:start="247:18" pos:end="247:23"><expr pos:start="247:18" pos:end="247:22"><name pos:start="247:18" pos:end="247:18">i</name> <operator pos:start="247:20" pos:end="247:20">=</operator> <literal type="number" pos:start="247:22" pos:end="247:22">0</literal></expr>;</init> <condition pos:start="247:25" pos:end="247:42"><expr pos:start="247:25" pos:end="247:41"><name pos:start="247:25" pos:end="247:25">i</name> <operator pos:start="247:27" pos:end="247:27">&lt;</operator> <name pos:start="247:29" pos:end="247:41"><name pos:start="247:29" pos:end="247:29">s</name><operator pos:start="247:30" pos:end="247:31">-&gt;</operator><name pos:start="247:32" pos:end="247:41">nb_streams</name></name></expr>;</condition> <incr pos:start="247:44" pos:end="247:46"><expr pos:start="247:44" pos:end="247:46"><name pos:start="247:44" pos:end="247:44">i</name><operator pos:start="247:45" pos:end="247:46">++</operator></expr></incr>)</control> <block pos:start="247:49" pos:end="261:13">{<block_content pos:start="249:17" pos:end="259:17">

                <decl_stmt pos:start="249:17" pos:end="249:45"><decl pos:start="249:17" pos:end="249:44"><type pos:start="249:17" pos:end="249:26"><name pos:start="249:17" pos:end="249:24">AVStream</name> <modifier pos:start="249:26" pos:end="249:26">*</modifier></type><name pos:start="249:27" pos:end="249:28">st</name> <init pos:start="249:30" pos:end="249:44">= <expr pos:start="249:32" pos:end="249:44"><name pos:start="249:32" pos:end="249:44"><name pos:start="249:32" pos:end="249:32">s</name><operator pos:start="249:33" pos:end="249:34">-&gt;</operator><name pos:start="249:35" pos:end="249:41">streams</name><index pos:start="249:42" pos:end="249:44">[<expr pos:start="249:43" pos:end="249:43"><name pos:start="249:43" pos:end="249:43">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="251:17" pos:end="259:17"><if pos:start="251:17" pos:end="259:17">if <condition pos:start="251:20" pos:end="251:70">(<expr pos:start="251:21" pos:end="251:69"><name pos:start="251:21" pos:end="251:43"><name pos:start="251:21" pos:end="251:22">st</name><operator pos:start="251:23" pos:end="251:24">-&gt;</operator><name pos:start="251:25" pos:end="251:32">codecpar</name><operator pos:start="251:33" pos:end="251:34">-&gt;</operator><name pos:start="251:35" pos:end="251:43">codec_tag</name></name> <operator pos:start="251:45" pos:end="251:46">==</operator> <call pos:start="251:48" pos:end="251:69"><name pos:start="251:48" pos:end="251:52">MKTAG</name><argument_list pos:start="251:53" pos:end="251:69">(<argument pos:start="251:54" pos:end="251:56"><expr pos:start="251:54" pos:end="251:56"><literal type="char" pos:start="251:54" pos:end="251:56">'t'</literal></expr></argument>,<argument pos:start="251:58" pos:end="251:60"><expr pos:start="251:58" pos:end="251:60"><literal type="char" pos:start="251:58" pos:end="251:60">'m'</literal></expr></argument>,<argument pos:start="251:62" pos:end="251:64"><expr pos:start="251:62" pos:end="251:64"><literal type="char" pos:start="251:62" pos:end="251:64">'c'</literal></expr></argument>,<argument pos:start="251:66" pos:end="251:68"><expr pos:start="251:66" pos:end="251:68"><literal type="char" pos:start="251:66" pos:end="251:68">'d'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="251:72" pos:end="259:17">{<block_content pos:start="253:21" pos:end="257:42">

                    <expr_stmt pos:start="253:21" pos:end="255:69"><expr pos:start="253:21" pos:end="255:68"><call pos:start="253:21" pos:end="255:68"><name pos:start="253:21" pos:end="253:26">av_log</name><argument_list pos:start="253:27" pos:end="255:68">(<argument pos:start="253:28" pos:end="253:28"><expr pos:start="253:28" pos:end="253:28"><name pos:start="253:28" pos:end="253:28">s</name></expr></argument>, <argument pos:start="253:31" pos:end="253:44"><expr pos:start="253:31" pos:end="253:44"><name pos:start="253:31" pos:end="253:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="253:47" pos:end="255:67"><expr pos:start="253:47" pos:end="255:67"><literal type="string" pos:start="253:47" pos:end="253:100">"You requested a copy of the original timecode track "</literal>

                           <literal type="string" pos:start="255:28" pos:end="255:67">"so timecode metadata are now ignored\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="257:21" pos:end="257:42"><expr pos:start="257:21" pos:end="257:41"><name pos:start="257:21" pos:end="257:37"><name pos:start="257:21" pos:end="257:23">mov</name><operator pos:start="257:24" pos:end="257:25">-&gt;</operator><name pos:start="257:26" pos:end="257:37">nb_meta_tmcd</name></name> <operator pos:start="257:39" pos:end="257:39">=</operator> <literal type="number" pos:start="257:41" pos:end="257:41">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="267:9" pos:end="267:45"><expr pos:start="267:9" pos:end="267:44"><name pos:start="267:9" pos:end="267:23"><name pos:start="267:9" pos:end="267:11">mov</name><operator pos:start="267:12" pos:end="267:13">-&gt;</operator><name pos:start="267:14" pos:end="267:23">nb_streams</name></name> <operator pos:start="267:25" pos:end="267:26">+=</operator> <name pos:start="267:28" pos:end="267:44"><name pos:start="267:28" pos:end="267:30">mov</name><operator pos:start="267:31" pos:end="267:32">-&gt;</operator><name pos:start="267:33" pos:end="267:44">nb_meta_tmcd</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="273:5" pos:end="273:71">// Reserve an extra stream for chapters for the case where chapters</comment>

    <comment type="line" pos:start="275:5" pos:end="275:33">// are written in the trailer</comment>

    <expr_stmt pos:start="277:5" pos:end="277:80"><expr pos:start="277:5" pos:end="277:79"><name pos:start="277:5" pos:end="277:15"><name pos:start="277:5" pos:end="277:7">mov</name><operator pos:start="277:8" pos:end="277:9">-&gt;</operator><name pos:start="277:10" pos:end="277:15">tracks</name></name> <operator pos:start="277:17" pos:end="277:17">=</operator> <call pos:start="277:19" pos:end="277:79"><name pos:start="277:19" pos:end="277:34">av_mallocz_array</name><argument_list pos:start="277:35" pos:end="277:79">(<argument pos:start="277:36" pos:end="277:56"><expr pos:start="277:36" pos:end="277:56"><operator pos:start="277:36" pos:end="277:36">(</operator><name pos:start="277:37" pos:end="277:51"><name pos:start="277:37" pos:end="277:39">mov</name><operator pos:start="277:40" pos:end="277:41">-&gt;</operator><name pos:start="277:42" pos:end="277:51">nb_streams</name></name> <operator pos:start="277:53" pos:end="277:53">+</operator> <literal type="number" pos:start="277:55" pos:end="277:55">1</literal><operator pos:start="277:56" pos:end="277:56">)</operator></expr></argument>, <argument pos:start="277:59" pos:end="277:78"><expr pos:start="277:59" pos:end="277:78"><sizeof pos:start="277:59" pos:end="277:78">sizeof<argument_list pos:start="277:65" pos:end="277:78">(<argument pos:start="277:66" pos:end="277:77"><expr pos:start="277:66" pos:end="277:77"><operator pos:start="277:66" pos:end="277:66">*</operator><name pos:start="277:67" pos:end="277:77"><name pos:start="277:67" pos:end="277:69">mov</name><operator pos:start="277:70" pos:end="277:71">-&gt;</operator><name pos:start="277:72" pos:end="277:77">tracks</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="279:5" pos:end="281:31"><if pos:start="279:5" pos:end="281:31">if <condition pos:start="279:8" pos:end="279:21">(<expr pos:start="279:9" pos:end="279:20"><operator pos:start="279:9" pos:end="279:9">!</operator><name pos:start="279:10" pos:end="279:20"><name pos:start="279:10" pos:end="279:12">mov</name><operator pos:start="279:13" pos:end="279:14">-&gt;</operator><name pos:start="279:15" pos:end="279:20">tracks</name></name></expr>)</condition><block type="pseudo" pos:start="281:9" pos:end="281:31"><block_content pos:start="281:9" pos:end="281:31">

        <return pos:start="281:9" pos:end="281:31">return <expr pos:start="281:16" pos:end="281:30"><call pos:start="281:16" pos:end="281:30"><name pos:start="281:16" pos:end="281:22">AVERROR</name><argument_list pos:start="281:23" pos:end="281:30">(<argument pos:start="281:24" pos:end="281:29"><expr pos:start="281:24" pos:end="281:29"><name pos:start="281:24" pos:end="281:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="285:5" pos:end="325:5"><if pos:start="285:5" pos:end="325:5">if <condition pos:start="285:8" pos:end="285:94">(<expr pos:start="285:9" pos:end="285:93"><name pos:start="285:9" pos:end="285:34"><name pos:start="285:9" pos:end="285:11">mov</name><operator pos:start="285:12" pos:end="285:13">-&gt;</operator><name pos:start="285:14" pos:end="285:34">encryption_scheme_str</name></name> <operator pos:start="285:36" pos:end="285:37">!=</operator> <name pos:start="285:39" pos:end="285:42">NULL</name> <operator pos:start="285:44" pos:end="285:45">&amp;&amp;</operator> <call pos:start="285:47" pos:end="285:88"><name pos:start="285:47" pos:end="285:52">strcmp</name><argument_list pos:start="285:53" pos:end="285:88">(<argument pos:start="285:54" pos:end="285:79"><expr pos:start="285:54" pos:end="285:79"><name pos:start="285:54" pos:end="285:79"><name pos:start="285:54" pos:end="285:56">mov</name><operator pos:start="285:57" pos:end="285:58">-&gt;</operator><name pos:start="285:59" pos:end="285:79">encryption_scheme_str</name></name></expr></argument>, <argument pos:start="285:82" pos:end="285:87"><expr pos:start="285:82" pos:end="285:87"><literal type="string" pos:start="285:82" pos:end="285:87">"none"</literal></expr></argument>)</argument_list></call> <operator pos:start="285:90" pos:end="285:91">!=</operator> <literal type="number" pos:start="285:93" pos:end="285:93">0</literal></expr>)</condition> <block pos:start="285:96" pos:end="325:5">{<block_content pos:start="287:9" pos:end="323:9">

        <if_stmt pos:start="287:9" pos:end="323:9"><if pos:start="287:9" pos:end="315:9">if <condition pos:start="287:12" pos:end="287:68">(<expr pos:start="287:13" pos:end="287:67"><call pos:start="287:13" pos:end="287:62"><name pos:start="287:13" pos:end="287:18">strcmp</name><argument_list pos:start="287:19" pos:end="287:62">(<argument pos:start="287:20" pos:end="287:45"><expr pos:start="287:20" pos:end="287:45"><name pos:start="287:20" pos:end="287:45"><name pos:start="287:20" pos:end="287:22">mov</name><operator pos:start="287:23" pos:end="287:24">-&gt;</operator><name pos:start="287:25" pos:end="287:45">encryption_scheme_str</name></name></expr></argument>, <argument pos:start="287:48" pos:end="287:61"><expr pos:start="287:48" pos:end="287:61"><literal type="string" pos:start="287:48" pos:end="287:61">"cenc-aes-ctr"</literal></expr></argument>)</argument_list></call> <operator pos:start="287:64" pos:end="287:65">==</operator> <literal type="number" pos:start="287:67" pos:end="287:67">0</literal></expr>)</condition> <block pos:start="287:70" pos:end="315:9">{<block_content pos:start="289:13" pos:end="313:13">

            <expr_stmt pos:start="289:13" pos:end="289:58"><expr pos:start="289:13" pos:end="289:57"><name pos:start="289:13" pos:end="289:34"><name pos:start="289:13" pos:end="289:15">mov</name><operator pos:start="289:16" pos:end="289:17">-&gt;</operator><name pos:start="289:18" pos:end="289:34">encryption_scheme</name></name> <operator pos:start="289:36" pos:end="289:36">=</operator> <name pos:start="289:38" pos:end="289:57">MOV_ENC_CENC_AES_CTR</name></expr>;</expr_stmt>



            <if_stmt pos:start="293:13" pos:end="301:13"><if pos:start="293:13" pos:end="301:13">if <condition pos:start="293:16" pos:end="293:60">(<expr pos:start="293:17" pos:end="293:59"><name pos:start="293:17" pos:end="293:39"><name pos:start="293:17" pos:end="293:19">mov</name><operator pos:start="293:20" pos:end="293:21">-&gt;</operator><name pos:start="293:22" pos:end="293:39">encryption_key_len</name></name> <operator pos:start="293:41" pos:end="293:42">!=</operator> <name pos:start="293:44" pos:end="293:59">AES_CTR_KEY_SIZE</name></expr>)</condition> <block pos:start="293:62" pos:end="301:13">{<block_content pos:start="295:17" pos:end="299:39">

                <expr_stmt pos:start="295:17" pos:end="297:63"><expr pos:start="295:17" pos:end="297:62"><call pos:start="295:17" pos:end="297:62"><name pos:start="295:17" pos:end="295:22">av_log</name><argument_list pos:start="295:23" pos:end="297:62">(<argument pos:start="295:24" pos:end="295:24"><expr pos:start="295:24" pos:end="295:24"><name pos:start="295:24" pos:end="295:24">s</name></expr></argument>, <argument pos:start="295:27" pos:end="295:38"><expr pos:start="295:27" pos:end="295:38"><name pos:start="295:27" pos:end="295:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="295:41" pos:end="295:85"><expr pos:start="295:41" pos:end="295:85"><literal type="string" pos:start="295:41" pos:end="295:85">"Invalid encryption key len %d expected %d\n"</literal></expr></argument>,

                    <argument pos:start="297:21" pos:end="297:43"><expr pos:start="297:21" pos:end="297:43"><name pos:start="297:21" pos:end="297:43"><name pos:start="297:21" pos:end="297:23">mov</name><operator pos:start="297:24" pos:end="297:25">-&gt;</operator><name pos:start="297:26" pos:end="297:43">encryption_key_len</name></name></expr></argument>, <argument pos:start="297:46" pos:end="297:61"><expr pos:start="297:46" pos:end="297:61"><name pos:start="297:46" pos:end="297:61">AES_CTR_KEY_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="299:17" pos:end="299:39">return <expr pos:start="299:24" pos:end="299:38"><call pos:start="299:24" pos:end="299:38"><name pos:start="299:24" pos:end="299:30">AVERROR</name><argument_list pos:start="299:31" pos:end="299:38">(<argument pos:start="299:32" pos:end="299:37"><expr pos:start="299:32" pos:end="299:37"><name pos:start="299:32" pos:end="299:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="305:13" pos:end="313:13"><if pos:start="305:13" pos:end="313:13">if <condition pos:start="305:16" pos:end="305:57">(<expr pos:start="305:17" pos:end="305:56"><name pos:start="305:17" pos:end="305:39"><name pos:start="305:17" pos:end="305:19">mov</name><operator pos:start="305:20" pos:end="305:21">-&gt;</operator><name pos:start="305:22" pos:end="305:39">encryption_kid_len</name></name> <operator pos:start="305:41" pos:end="305:42">!=</operator> <name pos:start="305:44" pos:end="305:56">CENC_KID_SIZE</name></expr>)</condition> <block pos:start="305:59" pos:end="313:13">{<block_content pos:start="307:17" pos:end="311:39">

                <expr_stmt pos:start="307:17" pos:end="309:60"><expr pos:start="307:17" pos:end="309:59"><call pos:start="307:17" pos:end="309:59"><name pos:start="307:17" pos:end="307:22">av_log</name><argument_list pos:start="307:23" pos:end="309:59">(<argument pos:start="307:24" pos:end="307:24"><expr pos:start="307:24" pos:end="307:24"><name pos:start="307:24" pos:end="307:24">s</name></expr></argument>, <argument pos:start="307:27" pos:end="307:38"><expr pos:start="307:27" pos:end="307:38"><name pos:start="307:27" pos:end="307:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="307:41" pos:end="307:85"><expr pos:start="307:41" pos:end="307:85"><literal type="string" pos:start="307:41" pos:end="307:85">"Invalid encryption kid len %d expected %d\n"</literal></expr></argument>,

                    <argument pos:start="309:21" pos:end="309:43"><expr pos:start="309:21" pos:end="309:43"><name pos:start="309:21" pos:end="309:43"><name pos:start="309:21" pos:end="309:23">mov</name><operator pos:start="309:24" pos:end="309:25">-&gt;</operator><name pos:start="309:26" pos:end="309:43">encryption_kid_len</name></name></expr></argument>, <argument pos:start="309:46" pos:end="309:58"><expr pos:start="309:46" pos:end="309:58"><name pos:start="309:46" pos:end="309:58">CENC_KID_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="311:17" pos:end="311:39">return <expr pos:start="311:24" pos:end="311:38"><call pos:start="311:24" pos:end="311:38"><name pos:start="311:24" pos:end="311:30">AVERROR</name><argument_list pos:start="311:31" pos:end="311:38">(<argument pos:start="311:32" pos:end="311:37"><expr pos:start="311:32" pos:end="311:37"><name pos:start="311:32" pos:end="311:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="315:11" pos:end="323:9">else <block pos:start="315:16" pos:end="323:9">{<block_content pos:start="317:13" pos:end="321:35">

            <expr_stmt pos:start="317:13" pos:end="319:44"><expr pos:start="317:13" pos:end="319:43"><call pos:start="317:13" pos:end="319:43"><name pos:start="317:13" pos:end="317:18">av_log</name><argument_list pos:start="317:19" pos:end="319:43">(<argument pos:start="317:20" pos:end="317:20"><expr pos:start="317:20" pos:end="317:20"><name pos:start="317:20" pos:end="317:20">s</name></expr></argument>, <argument pos:start="317:23" pos:end="317:34"><expr pos:start="317:23" pos:end="317:34"><name pos:start="317:23" pos:end="317:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="317:37" pos:end="317:72"><expr pos:start="317:37" pos:end="317:72"><literal type="string" pos:start="317:37" pos:end="317:72">"unsupported encryption scheme %s\n"</literal></expr></argument>,

                <argument pos:start="319:17" pos:end="319:42"><expr pos:start="319:17" pos:end="319:42"><name pos:start="319:17" pos:end="319:42"><name pos:start="319:17" pos:end="319:19">mov</name><operator pos:start="319:20" pos:end="319:21">-&gt;</operator><name pos:start="319:22" pos:end="319:42">encryption_scheme_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="321:13" pos:end="321:35">return <expr pos:start="321:20" pos:end="321:34"><call pos:start="321:20" pos:end="321:34"><name pos:start="321:20" pos:end="321:26">AVERROR</name><argument_list pos:start="321:27" pos:end="321:34">(<argument pos:start="321:28" pos:end="321:33"><expr pos:start="321:28" pos:end="321:33"><name pos:start="321:28" pos:end="321:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="329:5" pos:end="621:5">for <control pos:start="329:9" pos:end="329:39">(<init pos:start="329:10" pos:end="329:15"><expr pos:start="329:10" pos:end="329:14"><name pos:start="329:10" pos:end="329:10">i</name> <operator pos:start="329:12" pos:end="329:12">=</operator> <literal type="number" pos:start="329:14" pos:end="329:14">0</literal></expr>;</init> <condition pos:start="329:17" pos:end="329:34"><expr pos:start="329:17" pos:end="329:33"><name pos:start="329:17" pos:end="329:17">i</name> <operator pos:start="329:19" pos:end="329:19">&lt;</operator> <name pos:start="329:21" pos:end="329:33"><name pos:start="329:21" pos:end="329:21">s</name><operator pos:start="329:22" pos:end="329:23">-&gt;</operator><name pos:start="329:24" pos:end="329:33">nb_streams</name></name></expr>;</condition> <incr pos:start="329:36" pos:end="329:38"><expr pos:start="329:36" pos:end="329:38"><name pos:start="329:36" pos:end="329:36">i</name><operator pos:start="329:37" pos:end="329:38">++</operator></expr></incr>)</control> <block pos:start="329:41" pos:end="621:5">{<block_content pos:start="331:9" pos:end="619:9">

        <decl_stmt pos:start="331:9" pos:end="331:36"><decl pos:start="331:9" pos:end="331:35"><type pos:start="331:9" pos:end="331:18"><name pos:start="331:9" pos:end="331:16">AVStream</name> <modifier pos:start="331:18" pos:end="331:18">*</modifier></type><name pos:start="331:19" pos:end="331:20">st</name><init pos:start="331:21" pos:end="331:35">= <expr pos:start="331:23" pos:end="331:35"><name pos:start="331:23" pos:end="331:35"><name pos:start="331:23" pos:end="331:23">s</name><operator pos:start="331:24" pos:end="331:25">-&gt;</operator><name pos:start="331:26" pos:end="331:32">streams</name><index pos:start="331:33" pos:end="331:35">[<expr pos:start="331:34" pos:end="331:34"><name pos:start="331:34" pos:end="331:34">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="333:9" pos:end="333:41"><decl pos:start="333:9" pos:end="333:40"><type pos:start="333:9" pos:end="333:18"><name pos:start="333:9" pos:end="333:16">MOVTrack</name> <modifier pos:start="333:18" pos:end="333:18">*</modifier></type><name pos:start="333:19" pos:end="333:23">track</name><init pos:start="333:24" pos:end="333:40">= <expr pos:start="333:26" pos:end="333:40"><operator pos:start="333:26" pos:end="333:26">&amp;</operator><name pos:start="333:27" pos:end="333:40"><name pos:start="333:27" pos:end="333:29">mov</name><operator pos:start="333:30" pos:end="333:31">-&gt;</operator><name pos:start="333:32" pos:end="333:37">tracks</name><index pos:start="333:38" pos:end="333:40">[<expr pos:start="333:39" pos:end="333:39"><name pos:start="333:39" pos:end="333:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="335:9" pos:end="335:80"><decl pos:start="335:9" pos:end="335:79"><type pos:start="335:9" pos:end="335:27"><name pos:start="335:9" pos:end="335:25">AVDictionaryEntry</name> <modifier pos:start="335:27" pos:end="335:27">*</modifier></type><name pos:start="335:28" pos:end="335:31">lang</name> <init pos:start="335:33" pos:end="335:79">= <expr pos:start="335:35" pos:end="335:79"><call pos:start="335:35" pos:end="335:79"><name pos:start="335:35" pos:end="335:45">av_dict_get</name><argument_list pos:start="335:46" pos:end="335:79">(<argument pos:start="335:47" pos:end="335:58"><expr pos:start="335:47" pos:end="335:58"><name pos:start="335:47" pos:end="335:58"><name pos:start="335:47" pos:end="335:48">st</name><operator pos:start="335:49" pos:end="335:50">-&gt;</operator><name pos:start="335:51" pos:end="335:58">metadata</name></name></expr></argument>, <argument pos:start="335:61" pos:end="335:70"><expr pos:start="335:61" pos:end="335:70"><literal type="string" pos:start="335:61" pos:end="335:70">"language"</literal></expr></argument>, <argument pos:start="335:73" pos:end="335:76"><expr pos:start="335:73" pos:end="335:76"><name pos:start="335:73" pos:end="335:76">NULL</name></expr></argument>,<argument pos:start="335:78" pos:end="335:78"><expr pos:start="335:78" pos:end="335:78"><literal type="number" pos:start="335:78" pos:end="335:78">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="339:9" pos:end="339:24"><expr pos:start="339:9" pos:end="339:23"><name pos:start="339:9" pos:end="339:17"><name pos:start="339:9" pos:end="339:13">track</name><operator pos:start="339:14" pos:end="339:15">-&gt;</operator><name pos:start="339:16" pos:end="339:17">st</name></name>  <operator pos:start="339:20" pos:end="339:20">=</operator> <name pos:start="339:22" pos:end="339:23">st</name></expr>;</expr_stmt>

        <expr_stmt pos:start="341:9" pos:end="341:34"><expr pos:start="341:9" pos:end="341:33"><name pos:start="341:9" pos:end="341:18"><name pos:start="341:9" pos:end="341:13">track</name><operator pos:start="341:14" pos:end="341:15">-&gt;</operator><name pos:start="341:16" pos:end="341:18">par</name></name> <operator pos:start="341:20" pos:end="341:20">=</operator> <name pos:start="341:22" pos:end="341:33"><name pos:start="341:22" pos:end="341:23">st</name><operator pos:start="341:24" pos:end="341:25">-&gt;</operator><name pos:start="341:26" pos:end="341:33">codecpar</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="343:9" pos:end="343:93"><expr pos:start="343:9" pos:end="343:92"><name pos:start="343:9" pos:end="343:23"><name pos:start="343:9" pos:end="343:13">track</name><operator pos:start="343:14" pos:end="343:15">-&gt;</operator><name pos:start="343:16" pos:end="343:23">language</name></name> <operator pos:start="343:25" pos:end="343:25">=</operator> <call pos:start="343:27" pos:end="343:92"><name pos:start="343:27" pos:end="343:47">ff_mov_iso639_to_lang</name><argument_list pos:start="343:48" pos:end="343:92">(<argument pos:start="343:49" pos:end="343:70"><expr pos:start="343:49" pos:end="343:70"><ternary pos:start="343:49" pos:end="343:70"><condition pos:start="343:49" pos:end="343:53"><expr pos:start="343:49" pos:end="343:52"><name pos:start="343:49" pos:end="343:52">lang</name></expr>?</condition><then pos:start="343:54" pos:end="343:64"><expr pos:start="343:54" pos:end="343:64"><name pos:start="343:54" pos:end="343:64"><name pos:start="343:54" pos:end="343:57">lang</name><operator pos:start="343:58" pos:end="343:59">-&gt;</operator><name pos:start="343:60" pos:end="343:64">value</name></name></expr></then><else pos:start="343:65" pos:end="343:70">:<expr pos:start="343:66" pos:end="343:70"><literal type="string" pos:start="343:66" pos:end="343:70">"und"</literal></expr></else></ternary></expr></argument>, <argument pos:start="343:73" pos:end="343:91"><expr pos:start="343:73" pos:end="343:91"><name pos:start="343:73" pos:end="343:81"><name pos:start="343:73" pos:end="343:75">mov</name><operator pos:start="343:76" pos:end="343:77">-&gt;</operator><name pos:start="343:78" pos:end="343:81">mode</name></name><operator pos:start="343:82" pos:end="343:83">!=</operator><name pos:start="343:84" pos:end="343:91">MODE_MOV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="345:9" pos:end="347:32"><if pos:start="345:9" pos:end="347:32">if <condition pos:start="345:12" pos:end="345:32">(<expr pos:start="345:13" pos:end="345:31"><name pos:start="345:13" pos:end="345:27"><name pos:start="345:13" pos:end="345:17">track</name><operator pos:start="345:18" pos:end="345:19">-&gt;</operator><name pos:start="345:20" pos:end="345:27">language</name></name> <operator pos:start="345:29" pos:end="345:29">&lt;</operator> <literal type="number" pos:start="345:31" pos:end="345:31">0</literal></expr>)</condition><block type="pseudo" pos:start="347:13" pos:end="347:32"><block_content pos:start="347:13" pos:end="347:32">

            <expr_stmt pos:start="347:13" pos:end="347:32"><expr pos:start="347:13" pos:end="347:31"><name pos:start="347:13" pos:end="347:27"><name pos:start="347:13" pos:end="347:17">track</name><operator pos:start="347:18" pos:end="347:19">-&gt;</operator><name pos:start="347:20" pos:end="347:27">language</name></name> <operator pos:start="347:29" pos:end="347:29">=</operator> <literal type="number" pos:start="347:31" pos:end="347:31">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="349:9" pos:end="349:32"><expr pos:start="349:9" pos:end="349:31"><name pos:start="349:9" pos:end="349:19"><name pos:start="349:9" pos:end="349:13">track</name><operator pos:start="349:14" pos:end="349:15">-&gt;</operator><name pos:start="349:16" pos:end="349:19">mode</name></name> <operator pos:start="349:21" pos:end="349:21">=</operator> <name pos:start="349:23" pos:end="349:31"><name pos:start="349:23" pos:end="349:25">mov</name><operator pos:start="349:26" pos:end="349:27">-&gt;</operator><name pos:start="349:28" pos:end="349:31">mode</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:51"><expr pos:start="351:9" pos:end="351:50"><name pos:start="351:9" pos:end="351:18"><name pos:start="351:9" pos:end="351:13">track</name><operator pos:start="351:14" pos:end="351:15">-&gt;</operator><name pos:start="351:16" pos:end="351:18">tag</name></name>  <operator pos:start="351:21" pos:end="351:21">=</operator> <call pos:start="351:23" pos:end="351:50"><name pos:start="351:23" pos:end="351:40">mov_find_codec_tag</name><argument_list pos:start="351:41" pos:end="351:50">(<argument pos:start="351:42" pos:end="351:42"><expr pos:start="351:42" pos:end="351:42"><name pos:start="351:42" pos:end="351:42">s</name></expr></argument>, <argument pos:start="351:45" pos:end="351:49"><expr pos:start="351:45" pos:end="351:49"><name pos:start="351:45" pos:end="351:49">track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="353:9" pos:end="363:9"><if pos:start="353:9" pos:end="363:9">if <condition pos:start="353:12" pos:end="353:24">(<expr pos:start="353:13" pos:end="353:23"><operator pos:start="353:13" pos:end="353:13">!</operator><name pos:start="353:14" pos:end="353:23"><name pos:start="353:14" pos:end="353:18">track</name><operator pos:start="353:19" pos:end="353:20">-&gt;</operator><name pos:start="353:21" pos:end="353:23">tag</name></name></expr>)</condition> <block pos:start="353:26" pos:end="363:9">{<block_content pos:start="355:13" pos:end="361:35">

            <expr_stmt pos:start="355:13" pos:end="359:64"><expr pos:start="355:13" pos:end="359:63"><call pos:start="355:13" pos:end="359:63"><name pos:start="355:13" pos:end="355:18">av_log</name><argument_list pos:start="355:19" pos:end="359:63">(<argument pos:start="355:20" pos:end="355:20"><expr pos:start="355:20" pos:end="355:20"><name pos:start="355:20" pos:end="355:20">s</name></expr></argument>, <argument pos:start="355:23" pos:end="355:34"><expr pos:start="355:23" pos:end="355:34"><name pos:start="355:23" pos:end="355:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="355:37" pos:end="357:65"><expr pos:start="355:37" pos:end="357:65"><literal type="string" pos:start="355:37" pos:end="355:85">"Could not find tag for codec %s in stream #%d, "</literal>

                   <literal type="string" pos:start="357:20" pos:end="357:65">"codec not currently supported in container\n"</literal></expr></argument>,

                   <argument pos:start="359:20" pos:end="359:59"><expr pos:start="359:20" pos:end="359:59"><call pos:start="359:20" pos:end="359:59"><name pos:start="359:20" pos:end="359:35">avcodec_get_name</name><argument_list pos:start="359:36" pos:end="359:59">(<argument pos:start="359:37" pos:end="359:58"><expr pos:start="359:37" pos:end="359:58"><name pos:start="359:37" pos:end="359:58"><name pos:start="359:37" pos:end="359:38">st</name><operator pos:start="359:39" pos:end="359:40">-&gt;</operator><name pos:start="359:41" pos:end="359:48">codecpar</name><operator pos:start="359:49" pos:end="359:50">-&gt;</operator><name pos:start="359:51" pos:end="359:58">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="359:62" pos:end="359:62"><expr pos:start="359:62" pos:end="359:62"><name pos:start="359:62" pos:end="359:62">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="361:13" pos:end="361:35">return <expr pos:start="361:20" pos:end="361:34"><call pos:start="361:20" pos:end="361:34"><name pos:start="361:20" pos:end="361:26">AVERROR</name><argument_list pos:start="361:27" pos:end="361:34">(<argument pos:start="361:28" pos:end="361:33"><expr pos:start="361:28" pos:end="361:33"><name pos:start="361:28" pos:end="361:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="365:9" pos:end="367:30">/* If hinting of this track is enabled by a later hint track,

         * this is updated. */</comment>

        <expr_stmt pos:start="369:9" pos:end="369:31"><expr pos:start="369:9" pos:end="369:30"><name pos:start="369:9" pos:end="369:25"><name pos:start="369:9" pos:end="369:13">track</name><operator pos:start="369:14" pos:end="369:15">-&gt;</operator><name pos:start="369:16" pos:end="369:25">hint_track</name></name> <operator pos:start="369:27" pos:end="369:27">=</operator> <operator pos:start="369:29" pos:end="369:29">-</operator><literal type="number" pos:start="369:30" pos:end="369:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="371:9" pos:end="371:43"><expr pos:start="371:9" pos:end="371:42"><name pos:start="371:9" pos:end="371:24"><name pos:start="371:9" pos:end="371:13">track</name><operator pos:start="371:14" pos:end="371:15">-&gt;</operator><name pos:start="371:16" pos:end="371:24">start_dts</name></name>  <operator pos:start="371:27" pos:end="371:27">=</operator> <name pos:start="371:29" pos:end="371:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="373:9" pos:end="373:43"><expr pos:start="373:9" pos:end="373:42"><name pos:start="373:9" pos:end="373:24"><name pos:start="373:9" pos:end="373:13">track</name><operator pos:start="373:14" pos:end="373:15">-&gt;</operator><name pos:start="373:16" pos:end="373:24">start_cts</name></name>  <operator pos:start="373:27" pos:end="373:27">=</operator> <name pos:start="373:29" pos:end="373:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:43"><expr pos:start="375:9" pos:end="375:42"><name pos:start="375:9" pos:end="375:22"><name pos:start="375:9" pos:end="375:13">track</name><operator pos:start="375:14" pos:end="375:15">-&gt;</operator><name pos:start="375:16" pos:end="375:22">end_pts</name></name>    <operator pos:start="375:27" pos:end="375:27">=</operator> <name pos:start="375:29" pos:end="375:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <if_stmt pos:start="377:9" pos:end="589:9"><if pos:start="377:9" pos:end="483:9">if <condition pos:start="377:12" pos:end="377:59">(<expr pos:start="377:13" pos:end="377:58"><name pos:start="377:13" pos:end="377:36"><name pos:start="377:13" pos:end="377:14">st</name><operator pos:start="377:15" pos:end="377:16">-&gt;</operator><name pos:start="377:17" pos:end="377:24">codecpar</name><operator pos:start="377:25" pos:end="377:26">-&gt;</operator><name pos:start="377:27" pos:end="377:36">codec_type</name></name> <operator pos:start="377:38" pos:end="377:39">==</operator> <name pos:start="377:41" pos:end="377:58">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="377:61" pos:end="483:9">{<block_content pos:start="379:13" pos:end="481:13">

            <if_stmt pos:start="379:13" pos:end="395:13"><if pos:start="379:13" pos:end="395:13">if <condition pos:start="379:16" pos:end="383:93">(<expr pos:start="379:17" pos:end="383:92"><name pos:start="379:17" pos:end="379:26"><name pos:start="379:17" pos:end="379:21">track</name><operator pos:start="379:22" pos:end="379:23">-&gt;</operator><name pos:start="379:24" pos:end="379:26">tag</name></name> <operator pos:start="379:28" pos:end="379:29">==</operator> <call pos:start="379:31" pos:end="379:52"><name pos:start="379:31" pos:end="379:35">MKTAG</name><argument_list pos:start="379:36" pos:end="379:52">(<argument pos:start="379:37" pos:end="379:39"><expr pos:start="379:37" pos:end="379:39"><literal type="char" pos:start="379:37" pos:end="379:39">'m'</literal></expr></argument>,<argument pos:start="379:41" pos:end="379:43"><expr pos:start="379:41" pos:end="379:43"><literal type="char" pos:start="379:41" pos:end="379:43">'x'</literal></expr></argument>,<argument pos:start="379:45" pos:end="379:47"><expr pos:start="379:45" pos:end="379:47"><literal type="char" pos:start="379:45" pos:end="379:47">'3'</literal></expr></argument>,<argument pos:start="379:49" pos:end="379:51"><expr pos:start="379:49" pos:end="379:51"><literal type="char" pos:start="379:49" pos:end="379:51">'p'</literal></expr></argument>)</argument_list></call> <operator pos:start="379:54" pos:end="379:55">||</operator> <name pos:start="379:57" pos:end="379:66"><name pos:start="379:57" pos:end="379:61">track</name><operator pos:start="379:62" pos:end="379:63">-&gt;</operator><name pos:start="379:64" pos:end="379:66">tag</name></name> <operator pos:start="379:68" pos:end="379:69">==</operator> <call pos:start="379:71" pos:end="379:92"><name pos:start="379:71" pos:end="379:75">MKTAG</name><argument_list pos:start="379:76" pos:end="379:92">(<argument pos:start="379:77" pos:end="379:79"><expr pos:start="379:77" pos:end="379:79"><literal type="char" pos:start="379:77" pos:end="379:79">'m'</literal></expr></argument>,<argument pos:start="379:81" pos:end="379:83"><expr pos:start="379:81" pos:end="379:83"><literal type="char" pos:start="379:81" pos:end="379:83">'x'</literal></expr></argument>,<argument pos:start="379:85" pos:end="379:87"><expr pos:start="379:85" pos:end="379:87"><literal type="char" pos:start="379:85" pos:end="379:87">'3'</literal></expr></argument>,<argument pos:start="379:89" pos:end="379:91"><expr pos:start="379:89" pos:end="379:91"><literal type="char" pos:start="379:89" pos:end="379:91">'n'</literal></expr></argument>)</argument_list></call> <operator pos:start="379:94" pos:end="379:95">||</operator>

                <name pos:start="381:17" pos:end="381:26"><name pos:start="381:17" pos:end="381:21">track</name><operator pos:start="381:22" pos:end="381:23">-&gt;</operator><name pos:start="381:24" pos:end="381:26">tag</name></name> <operator pos:start="381:28" pos:end="381:29">==</operator> <call pos:start="381:31" pos:end="381:52"><name pos:start="381:31" pos:end="381:35">MKTAG</name><argument_list pos:start="381:36" pos:end="381:52">(<argument pos:start="381:37" pos:end="381:39"><expr pos:start="381:37" pos:end="381:39"><literal type="char" pos:start="381:37" pos:end="381:39">'m'</literal></expr></argument>,<argument pos:start="381:41" pos:end="381:43"><expr pos:start="381:41" pos:end="381:43"><literal type="char" pos:start="381:41" pos:end="381:43">'x'</literal></expr></argument>,<argument pos:start="381:45" pos:end="381:47"><expr pos:start="381:45" pos:end="381:47"><literal type="char" pos:start="381:45" pos:end="381:47">'4'</literal></expr></argument>,<argument pos:start="381:49" pos:end="381:51"><expr pos:start="381:49" pos:end="381:51"><literal type="char" pos:start="381:49" pos:end="381:51">'p'</literal></expr></argument>)</argument_list></call> <operator pos:start="381:54" pos:end="381:55">||</operator> <name pos:start="381:57" pos:end="381:66"><name pos:start="381:57" pos:end="381:61">track</name><operator pos:start="381:62" pos:end="381:63">-&gt;</operator><name pos:start="381:64" pos:end="381:66">tag</name></name> <operator pos:start="381:68" pos:end="381:69">==</operator> <call pos:start="381:71" pos:end="381:92"><name pos:start="381:71" pos:end="381:75">MKTAG</name><argument_list pos:start="381:76" pos:end="381:92">(<argument pos:start="381:77" pos:end="381:79"><expr pos:start="381:77" pos:end="381:79"><literal type="char" pos:start="381:77" pos:end="381:79">'m'</literal></expr></argument>,<argument pos:start="381:81" pos:end="381:83"><expr pos:start="381:81" pos:end="381:83"><literal type="char" pos:start="381:81" pos:end="381:83">'x'</literal></expr></argument>,<argument pos:start="381:85" pos:end="381:87"><expr pos:start="381:85" pos:end="381:87"><literal type="char" pos:start="381:85" pos:end="381:87">'4'</literal></expr></argument>,<argument pos:start="381:89" pos:end="381:91"><expr pos:start="381:89" pos:end="381:91"><literal type="char" pos:start="381:89" pos:end="381:91">'n'</literal></expr></argument>)</argument_list></call> <operator pos:start="381:94" pos:end="381:95">||</operator>

                <name pos:start="383:17" pos:end="383:26"><name pos:start="383:17" pos:end="383:21">track</name><operator pos:start="383:22" pos:end="383:23">-&gt;</operator><name pos:start="383:24" pos:end="383:26">tag</name></name> <operator pos:start="383:28" pos:end="383:29">==</operator> <call pos:start="383:31" pos:end="383:52"><name pos:start="383:31" pos:end="383:35">MKTAG</name><argument_list pos:start="383:36" pos:end="383:52">(<argument pos:start="383:37" pos:end="383:39"><expr pos:start="383:37" pos:end="383:39"><literal type="char" pos:start="383:37" pos:end="383:39">'m'</literal></expr></argument>,<argument pos:start="383:41" pos:end="383:43"><expr pos:start="383:41" pos:end="383:43"><literal type="char" pos:start="383:41" pos:end="383:43">'x'</literal></expr></argument>,<argument pos:start="383:45" pos:end="383:47"><expr pos:start="383:45" pos:end="383:47"><literal type="char" pos:start="383:45" pos:end="383:47">'5'</literal></expr></argument>,<argument pos:start="383:49" pos:end="383:51"><expr pos:start="383:49" pos:end="383:51"><literal type="char" pos:start="383:49" pos:end="383:51">'p'</literal></expr></argument>)</argument_list></call> <operator pos:start="383:54" pos:end="383:55">||</operator> <name pos:start="383:57" pos:end="383:66"><name pos:start="383:57" pos:end="383:61">track</name><operator pos:start="383:62" pos:end="383:63">-&gt;</operator><name pos:start="383:64" pos:end="383:66">tag</name></name> <operator pos:start="383:68" pos:end="383:69">==</operator> <call pos:start="383:71" pos:end="383:92"><name pos:start="383:71" pos:end="383:75">MKTAG</name><argument_list pos:start="383:76" pos:end="383:92">(<argument pos:start="383:77" pos:end="383:79"><expr pos:start="383:77" pos:end="383:79"><literal type="char" pos:start="383:77" pos:end="383:79">'m'</literal></expr></argument>,<argument pos:start="383:81" pos:end="383:83"><expr pos:start="383:81" pos:end="383:83"><literal type="char" pos:start="383:81" pos:end="383:83">'x'</literal></expr></argument>,<argument pos:start="383:85" pos:end="383:87"><expr pos:start="383:85" pos:end="383:87"><literal type="char" pos:start="383:85" pos:end="383:87">'5'</literal></expr></argument>,<argument pos:start="383:89" pos:end="383:91"><expr pos:start="383:89" pos:end="383:91"><literal type="char" pos:start="383:89" pos:end="383:91">'n'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="383:95" pos:end="395:13">{<block_content pos:start="385:17" pos:end="393:68">

                <if_stmt pos:start="385:17" pos:end="391:17"><if pos:start="385:17" pos:end="391:17">if <condition pos:start="385:20" pos:end="385:111">(<expr pos:start="385:21" pos:end="385:110"><name pos:start="385:21" pos:end="385:39"><name pos:start="385:21" pos:end="385:22">st</name><operator pos:start="385:23" pos:end="385:24">-&gt;</operator><name pos:start="385:25" pos:end="385:32">codecpar</name><operator pos:start="385:33" pos:end="385:34">-&gt;</operator><name pos:start="385:35" pos:end="385:39">width</name></name> <operator pos:start="385:41" pos:end="385:42">!=</operator> <literal type="number" pos:start="385:44" pos:end="385:46">720</literal> <operator pos:start="385:48" pos:end="385:49">||</operator> <operator pos:start="385:51" pos:end="385:51">(</operator><name pos:start="385:52" pos:end="385:71"><name pos:start="385:52" pos:end="385:53">st</name><operator pos:start="385:54" pos:end="385:55">-&gt;</operator><name pos:start="385:56" pos:end="385:63">codecpar</name><operator pos:start="385:64" pos:end="385:65">-&gt;</operator><name pos:start="385:66" pos:end="385:71">height</name></name> <operator pos:start="385:73" pos:end="385:74">!=</operator> <literal type="number" pos:start="385:76" pos:end="385:78">608</literal> <operator pos:start="385:80" pos:end="385:81">&amp;&amp;</operator> <name pos:start="385:83" pos:end="385:102"><name pos:start="385:83" pos:end="385:84">st</name><operator pos:start="385:85" pos:end="385:86">-&gt;</operator><name pos:start="385:87" pos:end="385:94">codecpar</name><operator pos:start="385:95" pos:end="385:96">-&gt;</operator><name pos:start="385:97" pos:end="385:102">height</name></name> <operator pos:start="385:104" pos:end="385:105">!=</operator> <literal type="number" pos:start="385:107" pos:end="385:109">512</literal><operator pos:start="385:110" pos:end="385:110">)</operator></expr>)</condition> <block pos:start="385:113" pos:end="391:17">{<block_content pos:start="387:21" pos:end="389:43">

                    <expr_stmt pos:start="387:21" pos:end="387:103"><expr pos:start="387:21" pos:end="387:102"><call pos:start="387:21" pos:end="387:102"><name pos:start="387:21" pos:end="387:26">av_log</name><argument_list pos:start="387:27" pos:end="387:102">(<argument pos:start="387:28" pos:end="387:28"><expr pos:start="387:28" pos:end="387:28"><name pos:start="387:28" pos:end="387:28">s</name></expr></argument>, <argument pos:start="387:31" pos:end="387:42"><expr pos:start="387:31" pos:end="387:42"><name pos:start="387:31" pos:end="387:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="387:45" pos:end="387:101"><expr pos:start="387:45" pos:end="387:101"><literal type="string" pos:start="387:45" pos:end="387:101">"D-10/IMX must use 720x608 or 720x512 video resolution\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="389:21" pos:end="389:43">return <expr pos:start="389:28" pos:end="389:42"><call pos:start="389:28" pos:end="389:42"><name pos:start="389:28" pos:end="389:34">AVERROR</name><argument_list pos:start="389:35" pos:end="389:42">(<argument pos:start="389:36" pos:end="389:41"><expr pos:start="389:36" pos:end="389:41"><name pos:start="389:36" pos:end="389:41">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="393:17" pos:end="393:68"><expr pos:start="393:17" pos:end="393:67"><name pos:start="393:17" pos:end="393:29"><name pos:start="393:17" pos:end="393:21">track</name><operator pos:start="393:22" pos:end="393:23">-&gt;</operator><name pos:start="393:24" pos:end="393:29">height</name></name> <operator pos:start="393:31" pos:end="393:31">=</operator> <ternary pos:start="393:33" pos:end="393:67"><condition pos:start="393:33" pos:end="393:57"><expr pos:start="393:33" pos:end="393:55"><name pos:start="393:33" pos:end="393:42"><name pos:start="393:33" pos:end="393:37">track</name><operator pos:start="393:38" pos:end="393:39">-&gt;</operator><name pos:start="393:40" pos:end="393:42">tag</name></name> <operator pos:start="393:44" pos:end="393:45">&gt;&gt;</operator> <literal type="number" pos:start="393:47" pos:end="393:48">24</literal> <operator pos:start="393:50" pos:end="393:51">==</operator> <literal type="char" pos:start="393:53" pos:end="393:55">'n'</literal></expr> ?</condition><then pos:start="393:59" pos:end="393:61"> <expr pos:start="393:59" pos:end="393:61"><literal type="number" pos:start="393:59" pos:end="393:61">486</literal></expr> </then><else pos:start="393:63" pos:end="393:67">: <expr pos:start="393:65" pos:end="393:67"><literal type="number" pos:start="393:65" pos:end="393:67">576</literal></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="397:13" pos:end="409:13"><if pos:start="397:13" pos:end="401:13">if <condition pos:start="397:16" pos:end="397:43">(<expr pos:start="397:17" pos:end="397:42"><name pos:start="397:17" pos:end="397:42"><name pos:start="397:17" pos:end="397:19">mov</name><operator pos:start="397:20" pos:end="397:21">-&gt;</operator><name pos:start="397:22" pos:end="397:42">video_track_timescale</name></name></expr>)</condition> <block pos:start="397:45" pos:end="401:13">{<block_content pos:start="399:17" pos:end="399:62">

                <expr_stmt pos:start="399:17" pos:end="399:62"><expr pos:start="399:17" pos:end="399:61"><name pos:start="399:17" pos:end="399:32"><name pos:start="399:17" pos:end="399:21">track</name><operator pos:start="399:22" pos:end="399:23">-&gt;</operator><name pos:start="399:24" pos:end="399:32">timescale</name></name> <operator pos:start="399:34" pos:end="399:34">=</operator> <name pos:start="399:36" pos:end="399:61"><name pos:start="399:36" pos:end="399:38">mov</name><operator pos:start="399:39" pos:end="399:40">-&gt;</operator><name pos:start="399:41" pos:end="399:61">video_track_timescale</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="401:15" pos:end="409:13">else <block pos:start="401:20" pos:end="409:13">{<block_content pos:start="403:17" pos:end="407:42">

                <expr_stmt pos:start="403:17" pos:end="403:53"><expr pos:start="403:17" pos:end="403:52"><name pos:start="403:17" pos:end="403:32"><name pos:start="403:17" pos:end="403:21">track</name><operator pos:start="403:22" pos:end="403:23">-&gt;</operator><name pos:start="403:24" pos:end="403:32">timescale</name></name> <operator pos:start="403:34" pos:end="403:34">=</operator> <name pos:start="403:36" pos:end="403:52"><name pos:start="403:36" pos:end="403:37">st</name><operator pos:start="403:38" pos:end="403:39">-&gt;</operator><name pos:start="403:40" pos:end="403:48">time_base</name><operator pos:start="403:49" pos:end="403:49">.</operator><name pos:start="403:50" pos:end="403:52">den</name></name></expr>;</expr_stmt>

                <while pos:start="405:17" pos:end="407:42">while<condition pos:start="405:22" pos:end="405:47">(<expr pos:start="405:23" pos:end="405:46"><name pos:start="405:23" pos:end="405:38"><name pos:start="405:23" pos:end="405:27">track</name><operator pos:start="405:28" pos:end="405:29">-&gt;</operator><name pos:start="405:30" pos:end="405:38">timescale</name></name> <operator pos:start="405:40" pos:end="405:40">&lt;</operator> <literal type="number" pos:start="405:42" pos:end="405:46">10000</literal></expr>)</condition><block type="pseudo" pos:start="407:21" pos:end="407:42"><block_content pos:start="407:21" pos:end="407:42">

                    <expr_stmt pos:start="407:21" pos:end="407:42"><expr pos:start="407:21" pos:end="407:41"><name pos:start="407:21" pos:end="407:36"><name pos:start="407:21" pos:end="407:25">track</name><operator pos:start="407:26" pos:end="407:27">-&gt;</operator><name pos:start="407:28" pos:end="407:36">timescale</name></name> <operator pos:start="407:38" pos:end="407:39">*=</operator> <literal type="number" pos:start="407:41" pos:end="407:41">2</literal></expr>;</expr_stmt></block_content></block></while>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="411:13" pos:end="417:13"><if pos:start="411:13" pos:end="417:13">if <condition pos:start="411:16" pos:end="411:76">(<expr pos:start="411:17" pos:end="411:75"><name pos:start="411:17" pos:end="411:35"><name pos:start="411:17" pos:end="411:18">st</name><operator pos:start="411:19" pos:end="411:20">-&gt;</operator><name pos:start="411:21" pos:end="411:28">codecpar</name><operator pos:start="411:29" pos:end="411:30">-&gt;</operator><name pos:start="411:31" pos:end="411:35">width</name></name> <operator pos:start="411:37" pos:end="411:37">&gt;</operator> <literal type="number" pos:start="411:39" pos:end="411:43">65535</literal> <operator pos:start="411:45" pos:end="411:46">||</operator> <name pos:start="411:48" pos:end="411:67"><name pos:start="411:48" pos:end="411:49">st</name><operator pos:start="411:50" pos:end="411:51">-&gt;</operator><name pos:start="411:52" pos:end="411:59">codecpar</name><operator pos:start="411:60" pos:end="411:61">-&gt;</operator><name pos:start="411:62" pos:end="411:67">height</name></name> <operator pos:start="411:69" pos:end="411:69">&gt;</operator> <literal type="number" pos:start="411:71" pos:end="411:75">65535</literal></expr>)</condition> <block pos:start="411:78" pos:end="417:13">{<block_content pos:start="413:17" pos:end="415:39">

                <expr_stmt pos:start="413:17" pos:end="413:127"><expr pos:start="413:17" pos:end="413:126"><call pos:start="413:17" pos:end="413:126"><name pos:start="413:17" pos:end="413:22">av_log</name><argument_list pos:start="413:23" pos:end="413:126">(<argument pos:start="413:24" pos:end="413:24"><expr pos:start="413:24" pos:end="413:24"><name pos:start="413:24" pos:end="413:24">s</name></expr></argument>, <argument pos:start="413:27" pos:end="413:38"><expr pos:start="413:27" pos:end="413:38"><name pos:start="413:27" pos:end="413:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="413:41" pos:end="413:82"><expr pos:start="413:41" pos:end="413:82"><literal type="string" pos:start="413:41" pos:end="413:82">"Resolution %dx%d too large for mov/mp4\n"</literal></expr></argument>, <argument pos:start="413:85" pos:end="413:103"><expr pos:start="413:85" pos:end="413:103"><name pos:start="413:85" pos:end="413:103"><name pos:start="413:85" pos:end="413:86">st</name><operator pos:start="413:87" pos:end="413:88">-&gt;</operator><name pos:start="413:89" pos:end="413:96">codecpar</name><operator pos:start="413:97" pos:end="413:98">-&gt;</operator><name pos:start="413:99" pos:end="413:103">width</name></name></expr></argument>, <argument pos:start="413:106" pos:end="413:125"><expr pos:start="413:106" pos:end="413:125"><name pos:start="413:106" pos:end="413:125"><name pos:start="413:106" pos:end="413:107">st</name><operator pos:start="413:108" pos:end="413:109">-&gt;</operator><name pos:start="413:110" pos:end="413:117">codecpar</name><operator pos:start="413:118" pos:end="413:119">-&gt;</operator><name pos:start="413:120" pos:end="413:125">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="415:17" pos:end="415:39">return <expr pos:start="415:24" pos:end="415:38"><call pos:start="415:24" pos:end="415:38"><name pos:start="415:24" pos:end="415:30">AVERROR</name><argument_list pos:start="415:31" pos:end="415:38">(<argument pos:start="415:32" pos:end="415:37"><expr pos:start="415:32" pos:end="415:37"><name pos:start="415:32" pos:end="415:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="419:13" pos:end="427:59"><if pos:start="419:13" pos:end="427:59">if <condition pos:start="419:16" pos:end="419:69">(<expr pos:start="419:17" pos:end="419:68"><name pos:start="419:17" pos:end="419:27"><name pos:start="419:17" pos:end="419:21">track</name><operator pos:start="419:22" pos:end="419:23">-&gt;</operator><name pos:start="419:24" pos:end="419:27">mode</name></name> <operator pos:start="419:29" pos:end="419:30">==</operator> <name pos:start="419:32" pos:end="419:39">MODE_MOV</name> <operator pos:start="419:41" pos:end="419:42">&amp;&amp;</operator> <name pos:start="419:44" pos:end="419:59"><name pos:start="419:44" pos:end="419:48">track</name><operator pos:start="419:49" pos:end="419:50">-&gt;</operator><name pos:start="419:51" pos:end="419:59">timescale</name></name> <operator pos:start="419:61" pos:end="419:61">&gt;</operator> <literal type="number" pos:start="419:63" pos:end="419:68">100000</literal></expr>)</condition><block type="pseudo" pos:start="421:17" pos:end="427:59"><block_content pos:start="421:17" pos:end="427:59">

                <expr_stmt pos:start="421:17" pos:end="427:59"><expr pos:start="421:17" pos:end="427:58"><call pos:start="421:17" pos:end="427:58"><name pos:start="421:17" pos:end="421:22">av_log</name><argument_list pos:start="421:23" pos:end="427:58">(<argument pos:start="421:24" pos:end="421:24"><expr pos:start="421:24" pos:end="421:24"><name pos:start="421:24" pos:end="421:24">s</name></expr></argument>, <argument pos:start="421:27" pos:end="421:40"><expr pos:start="421:27" pos:end="421:40"><name pos:start="421:27" pos:end="421:40">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="423:24" pos:end="427:57"><expr pos:start="423:24" pos:end="427:57"><literal type="string" pos:start="423:24" pos:end="423:88">"WARNING codec timebase is very high. If duration is too long,\n"</literal>

                       <literal type="string" pos:start="425:24" pos:end="425:92">"file may not be playable by quicktime. Specify a shorter timebase\n"</literal>

                       <literal type="string" pos:start="427:24" pos:end="427:57">"or choose different container.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="429:13" pos:end="455:13"><if pos:start="429:13" pos:end="455:13">if <condition pos:start="429:16" pos:end="433:53">(<expr pos:start="429:17" pos:end="433:52"><name pos:start="429:17" pos:end="429:27"><name pos:start="429:17" pos:end="429:21">track</name><operator pos:start="429:22" pos:end="429:23">-&gt;</operator><name pos:start="429:24" pos:end="429:27">mode</name></name> <operator pos:start="429:29" pos:end="429:30">==</operator> <name pos:start="429:32" pos:end="429:39">MODE_MOV</name> <operator pos:start="429:41" pos:end="429:42">&amp;&amp;</operator>

                <name pos:start="431:17" pos:end="431:36"><name pos:start="431:17" pos:end="431:21">track</name><operator pos:start="431:22" pos:end="431:23">-&gt;</operator><name pos:start="431:24" pos:end="431:26">par</name><operator pos:start="431:27" pos:end="431:28">-&gt;</operator><name pos:start="431:29" pos:end="431:36">codec_id</name></name> <operator pos:start="431:38" pos:end="431:39">==</operator> <name pos:start="431:41" pos:end="431:60">AV_CODEC_ID_RAWVIDEO</name> <operator pos:start="431:62" pos:end="431:63">&amp;&amp;</operator>

                <name pos:start="433:17" pos:end="433:26"><name pos:start="433:17" pos:end="433:21">track</name><operator pos:start="433:22" pos:end="433:23">-&gt;</operator><name pos:start="433:24" pos:end="433:26">tag</name></name> <operator pos:start="433:28" pos:end="433:29">==</operator> <call pos:start="433:31" pos:end="433:52"><name pos:start="433:31" pos:end="433:35">MKTAG</name><argument_list pos:start="433:36" pos:end="433:52">(<argument pos:start="433:37" pos:end="433:39"><expr pos:start="433:37" pos:end="433:39"><literal type="char" pos:start="433:37" pos:end="433:39">'r'</literal></expr></argument>,<argument pos:start="433:41" pos:end="433:43"><expr pos:start="433:41" pos:end="433:43"><literal type="char" pos:start="433:41" pos:end="433:43">'a'</literal></expr></argument>,<argument pos:start="433:45" pos:end="433:47"><expr pos:start="433:45" pos:end="433:47"><literal type="char" pos:start="433:45" pos:end="433:47">'w'</literal></expr></argument>,<argument pos:start="433:49" pos:end="433:51"><expr pos:start="433:49" pos:end="433:51"><literal type="char" pos:start="433:49" pos:end="433:51">' '</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="433:55" pos:end="455:13">{<block_content pos:start="435:17" pos:end="453:56">

                <decl_stmt pos:start="435:17" pos:end="435:64"><decl pos:start="435:17" pos:end="435:63"><type pos:start="435:17" pos:end="435:34"><name pos:start="435:17" pos:end="435:34"><name pos:start="435:17" pos:end="435:20">enum</name> <name pos:start="435:22" pos:end="435:34">AVPixelFormat</name></name></type> <name pos:start="435:36" pos:end="435:42">pix_fmt</name> <init pos:start="435:44" pos:end="435:63">= <expr pos:start="435:46" pos:end="435:63"><name pos:start="435:46" pos:end="435:63"><name pos:start="435:46" pos:end="435:50">track</name><operator pos:start="435:51" pos:end="435:52">-&gt;</operator><name pos:start="435:53" pos:end="435:55">par</name><operator pos:start="435:56" pos:end="435:57">-&gt;</operator><name pos:start="435:58" pos:end="435:63">format</name></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="437:17" pos:end="439:51"><if pos:start="437:17" pos:end="439:51">if <condition pos:start="437:20" pos:end="437:89">(<expr pos:start="437:21" pos:end="437:88"><name pos:start="437:21" pos:end="437:27">pix_fmt</name> <operator pos:start="437:29" pos:end="437:30">==</operator> <name pos:start="437:32" pos:end="437:46">AV_PIX_FMT_NONE</name> <operator pos:start="437:48" pos:end="437:49">&amp;&amp;</operator> <name pos:start="437:51" pos:end="437:83"><name pos:start="437:51" pos:end="437:55">track</name><operator pos:start="437:56" pos:end="437:57">-&gt;</operator><name pos:start="437:58" pos:end="437:60">par</name><operator pos:start="437:61" pos:end="437:62">-&gt;</operator><name pos:start="437:63" pos:end="437:83">bits_per_coded_sample</name></name> <operator pos:start="437:85" pos:end="437:86">==</operator> <literal type="number" pos:start="437:88" pos:end="437:88">1</literal></expr>)</condition><block type="pseudo" pos:start="439:21" pos:end="439:51"><block_content pos:start="439:21" pos:end="439:51">

                    <expr_stmt pos:start="439:21" pos:end="439:51"><expr pos:start="439:21" pos:end="439:50"><name pos:start="439:21" pos:end="439:27">pix_fmt</name> <operator pos:start="439:29" pos:end="439:29">=</operator> <name pos:start="439:31" pos:end="439:50">AV_PIX_FMT_MONOWHITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="441:17" pos:end="453:56"><expr pos:start="441:17" pos:end="453:55"><name pos:start="441:17" pos:end="441:42"><name pos:start="441:17" pos:end="441:21">track</name><operator pos:start="441:22" pos:end="441:23">-&gt;</operator><name pos:start="441:24" pos:end="441:42">is_unaligned_qt_rgb</name></name> <operator pos:start="441:44" pos:end="441:44">=</operator>

                        <name pos:start="443:25" pos:end="443:31">pix_fmt</name> <operator pos:start="443:33" pos:end="443:34">==</operator> <name pos:start="443:36" pos:end="443:51">AV_PIX_FMT_RGB24</name> <operator pos:start="443:53" pos:end="443:54">||</operator>

                        <name pos:start="445:25" pos:end="445:31">pix_fmt</name> <operator pos:start="445:33" pos:end="445:34">==</operator> <name pos:start="445:36" pos:end="445:51">AV_PIX_FMT_BGR24</name> <operator pos:start="445:53" pos:end="445:54">||</operator>

                        <name pos:start="447:25" pos:end="447:31">pix_fmt</name> <operator pos:start="447:33" pos:end="447:34">==</operator> <name pos:start="447:36" pos:end="447:50">AV_PIX_FMT_PAL8</name> <operator pos:start="447:52" pos:end="447:53">||</operator>

                        <name pos:start="449:25" pos:end="449:31">pix_fmt</name> <operator pos:start="449:33" pos:end="449:34">==</operator> <name pos:start="449:36" pos:end="449:51">AV_PIX_FMT_GRAY8</name> <operator pos:start="449:53" pos:end="449:54">||</operator>

                        <name pos:start="451:25" pos:end="451:31">pix_fmt</name> <operator pos:start="451:33" pos:end="451:34">==</operator> <name pos:start="451:36" pos:end="451:55">AV_PIX_FMT_MONOWHITE</name> <operator pos:start="451:57" pos:end="451:58">||</operator>

                        <name pos:start="453:25" pos:end="453:31">pix_fmt</name> <operator pos:start="453:33" pos:end="453:34">==</operator> <name pos:start="453:36" pos:end="453:55">AV_PIX_FMT_MONOBLACK</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="457:13" pos:end="481:13"><if pos:start="457:13" pos:end="481:13">if <condition pos:start="457:16" pos:end="457:56">(<expr pos:start="457:17" pos:end="457:55"><name pos:start="457:17" pos:end="457:36"><name pos:start="457:17" pos:end="457:21">track</name><operator pos:start="457:22" pos:end="457:23">-&gt;</operator><name pos:start="457:24" pos:end="457:26">par</name><operator pos:start="457:27" pos:end="457:28">-&gt;</operator><name pos:start="457:29" pos:end="457:36">codec_id</name></name> <operator pos:start="457:38" pos:end="457:39">==</operator> <name pos:start="457:41" pos:end="457:55">AV_CODEC_ID_VP9</name></expr>)</condition> <block pos:start="457:58" pos:end="481:13">{<block_content pos:start="459:17" pos:end="479:17">

                <if_stmt pos:start="459:17" pos:end="465:17"><if pos:start="459:17" pos:end="465:17">if <condition pos:start="459:20" pos:end="459:44">(<expr pos:start="459:21" pos:end="459:43"><name pos:start="459:21" pos:end="459:31"><name pos:start="459:21" pos:end="459:25">track</name><operator pos:start="459:26" pos:end="459:27">-&gt;</operator><name pos:start="459:28" pos:end="459:31">mode</name></name> <operator pos:start="459:33" pos:end="459:34">!=</operator> <name pos:start="459:36" pos:end="459:43">MODE_MP4</name></expr>)</condition> <block pos:start="459:46" pos:end="465:17">{<block_content pos:start="461:21" pos:end="463:43">

                    <expr_stmt pos:start="461:21" pos:end="461:76"><expr pos:start="461:21" pos:end="461:75"><call pos:start="461:21" pos:end="461:75"><name pos:start="461:21" pos:end="461:26">av_log</name><argument_list pos:start="461:27" pos:end="461:75">(<argument pos:start="461:28" pos:end="461:28"><expr pos:start="461:28" pos:end="461:28"><name pos:start="461:28" pos:end="461:28">s</name></expr></argument>, <argument pos:start="461:31" pos:end="461:42"><expr pos:start="461:31" pos:end="461:42"><name pos:start="461:31" pos:end="461:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="461:45" pos:end="461:74"><expr pos:start="461:45" pos:end="461:74"><literal type="string" pos:start="461:45" pos:end="461:74">"VP9 only supported in MP4.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="463:21" pos:end="463:43">return <expr pos:start="463:28" pos:end="463:42"><call pos:start="463:28" pos:end="463:42"><name pos:start="463:28" pos:end="463:34">AVERROR</name><argument_list pos:start="463:35" pos:end="463:42">(<argument pos:start="463:36" pos:end="463:41"><expr pos:start="463:36" pos:end="463:41"><name pos:start="463:36" pos:end="463:41">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="467:17" pos:end="479:17"><if pos:start="467:17" pos:end="479:17">if <condition pos:start="467:20" pos:end="467:74">(<expr pos:start="467:21" pos:end="467:73"><name pos:start="467:21" pos:end="467:44"><name pos:start="467:21" pos:end="467:21">s</name><operator pos:start="467:22" pos:end="467:23">-&gt;</operator><name pos:start="467:24" pos:end="467:44">strict_std_compliance</name></name> <operator pos:start="467:46" pos:end="467:46">&gt;</operator> <name pos:start="467:48" pos:end="467:73">FF_COMPLIANCE_EXPERIMENTAL</name></expr>)</condition> <block pos:start="467:76" pos:end="479:17">{<block_content pos:start="469:21" pos:end="477:48">

                    <expr_stmt pos:start="469:21" pos:end="475:55"><expr pos:start="469:21" pos:end="475:54"><call pos:start="469:21" pos:end="475:54"><name pos:start="469:21" pos:end="469:26">av_log</name><argument_list pos:start="469:27" pos:end="475:54">(<argument pos:start="469:28" pos:end="469:28"><expr pos:start="469:28" pos:end="469:28"><name pos:start="469:28" pos:end="469:28">s</name></expr></argument>, <argument pos:start="469:31" pos:end="469:42"><expr pos:start="469:31" pos:end="469:42"><name pos:start="469:31" pos:end="469:42">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="471:28" pos:end="473:66"><expr pos:start="471:28" pos:end="473:66"><literal type="string" pos:start="471:28" pos:end="471:69">"VP9 in MP4 support is experimental, add "</literal>

                           <literal type="string" pos:start="473:28" pos:end="473:66">"'-strict %d' if you want to use it.\n"</literal></expr></argument>,

                           <argument pos:start="475:28" pos:end="475:53"><expr pos:start="475:28" pos:end="475:53"><name pos:start="475:28" pos:end="475:53">FF_COMPLIANCE_EXPERIMENTAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="477:21" pos:end="477:48">return <expr pos:start="477:28" pos:end="477:47"><name pos:start="477:28" pos:end="477:47">AVERROR_EXPERIMENTAL</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="483:11" pos:end="577:9">else if <condition pos:start="483:19" pos:end="483:66">(<expr pos:start="483:20" pos:end="483:65"><name pos:start="483:20" pos:end="483:43"><name pos:start="483:20" pos:end="483:21">st</name><operator pos:start="483:22" pos:end="483:23">-&gt;</operator><name pos:start="483:24" pos:end="483:31">codecpar</name><operator pos:start="483:32" pos:end="483:33">-&gt;</operator><name pos:start="483:34" pos:end="483:43">codec_type</name></name> <operator pos:start="483:45" pos:end="483:46">==</operator> <name pos:start="483:48" pos:end="483:65">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="483:68" pos:end="577:9">{<block_content pos:start="485:13" pos:end="575:13">

            <expr_stmt pos:start="485:13" pos:end="485:57"><expr pos:start="485:13" pos:end="485:56"><name pos:start="485:13" pos:end="485:28"><name pos:start="485:13" pos:end="485:17">track</name><operator pos:start="485:18" pos:end="485:19">-&gt;</operator><name pos:start="485:20" pos:end="485:28">timescale</name></name> <operator pos:start="485:30" pos:end="485:30">=</operator> <name pos:start="485:32" pos:end="485:56"><name pos:start="485:32" pos:end="485:33">st</name><operator pos:start="485:34" pos:end="485:35">-&gt;</operator><name pos:start="485:36" pos:end="485:43">codecpar</name><operator pos:start="485:44" pos:end="485:45">-&gt;</operator><name pos:start="485:46" pos:end="485:56">sample_rate</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="487:13" pos:end="517:13"><if pos:start="487:13" pos:end="493:13">if <condition pos:start="487:16" pos:end="487:93">(<expr pos:start="487:17" pos:end="487:92"><operator pos:start="487:17" pos:end="487:17">!</operator><name pos:start="487:18" pos:end="487:41"><name pos:start="487:18" pos:end="487:19">st</name><operator pos:start="487:20" pos:end="487:21">-&gt;</operator><name pos:start="487:22" pos:end="487:29">codecpar</name><operator pos:start="487:30" pos:end="487:31">-&gt;</operator><name pos:start="487:32" pos:end="487:41">frame_size</name></name> <operator pos:start="487:43" pos:end="487:44">&amp;&amp;</operator> <operator pos:start="487:46" pos:end="487:46">!</operator><call pos:start="487:47" pos:end="487:92"><name pos:start="487:47" pos:end="487:68">av_get_bits_per_sample</name><argument_list pos:start="487:69" pos:end="487:92">(<argument pos:start="487:70" pos:end="487:91"><expr pos:start="487:70" pos:end="487:91"><name pos:start="487:70" pos:end="487:91"><name pos:start="487:70" pos:end="487:71">st</name><operator pos:start="487:72" pos:end="487:73">-&gt;</operator><name pos:start="487:74" pos:end="487:81">codecpar</name><operator pos:start="487:82" pos:end="487:83">-&gt;</operator><name pos:start="487:84" pos:end="487:91">codec_id</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="487:95" pos:end="493:13">{<block_content pos:start="489:17" pos:end="491:37">

                <expr_stmt pos:start="489:17" pos:end="489:88"><expr pos:start="489:17" pos:end="489:87"><call pos:start="489:17" pos:end="489:87"><name pos:start="489:17" pos:end="489:22">av_log</name><argument_list pos:start="489:23" pos:end="489:87">(<argument pos:start="489:24" pos:end="489:24"><expr pos:start="489:24" pos:end="489:24"><name pos:start="489:24" pos:end="489:24">s</name></expr></argument>, <argument pos:start="489:27" pos:end="489:40"><expr pos:start="489:27" pos:end="489:40"><name pos:start="489:27" pos:end="489:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="489:43" pos:end="489:83"><expr pos:start="489:43" pos:end="489:83"><literal type="string" pos:start="489:43" pos:end="489:83">"track %d: codec frame size is not set\n"</literal></expr></argument>, <argument pos:start="489:86" pos:end="489:86"><expr pos:start="489:86" pos:end="489:86"><name pos:start="489:86" pos:end="489:86">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="491:17" pos:end="491:37"><expr pos:start="491:17" pos:end="491:36"><name pos:start="491:17" pos:end="491:32"><name pos:start="491:17" pos:end="491:21">track</name><operator pos:start="491:22" pos:end="491:23">-&gt;</operator><name pos:start="491:24" pos:end="491:32">audio_vbr</name></name> <operator pos:start="491:34" pos:end="491:34">=</operator> <literal type="number" pos:start="491:36" pos:end="491:36">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if><if type="elseif" pos:start="493:14" pos:end="509:13">else if <condition pos:start="493:22" pos:end="497:64">(<expr pos:start="493:23" pos:end="497:63"><name pos:start="493:23" pos:end="493:44"><name pos:start="493:23" pos:end="493:24">st</name><operator pos:start="493:25" pos:end="493:26">-&gt;</operator><name pos:start="493:27" pos:end="493:34">codecpar</name><operator pos:start="493:35" pos:end="493:36">-&gt;</operator><name pos:start="493:37" pos:end="493:44">codec_id</name></name> <operator pos:start="493:46" pos:end="493:47">==</operator> <name pos:start="493:49" pos:end="493:68">AV_CODEC_ID_ADPCM_MS</name> <operator pos:start="493:70" pos:end="493:71">||</operator>

                     <name pos:start="495:22" pos:end="495:43"><name pos:start="495:22" pos:end="495:23">st</name><operator pos:start="495:24" pos:end="495:25">-&gt;</operator><name pos:start="495:26" pos:end="495:33">codecpar</name><operator pos:start="495:34" pos:end="495:35">-&gt;</operator><name pos:start="495:36" pos:end="495:43">codec_id</name></name> <operator pos:start="495:45" pos:end="495:46">==</operator> <name pos:start="495:48" pos:end="495:72">AV_CODEC_ID_ADPCM_IMA_WAV</name> <operator pos:start="495:74" pos:end="495:75">||</operator>

                     <name pos:start="497:22" pos:end="497:43"><name pos:start="497:22" pos:end="497:23">st</name><operator pos:start="497:24" pos:end="497:25">-&gt;</operator><name pos:start="497:26" pos:end="497:33">codecpar</name><operator pos:start="497:34" pos:end="497:35">-&gt;</operator><name pos:start="497:36" pos:end="497:43">codec_id</name></name> <operator pos:start="497:45" pos:end="497:46">==</operator> <name pos:start="497:48" pos:end="497:63">AV_CODEC_ID_ILBC</name></expr>)</condition><block pos:start="497:65" pos:end="509:13">{<block_content pos:start="499:17" pos:end="507:63">

                <if_stmt pos:start="499:17" pos:end="505:17"><if pos:start="499:17" pos:end="505:17">if <condition pos:start="499:20" pos:end="499:47">(<expr pos:start="499:21" pos:end="499:46"><operator pos:start="499:21" pos:end="499:21">!</operator><name pos:start="499:22" pos:end="499:46"><name pos:start="499:22" pos:end="499:23">st</name><operator pos:start="499:24" pos:end="499:25">-&gt;</operator><name pos:start="499:26" pos:end="499:33">codecpar</name><operator pos:start="499:34" pos:end="499:35">-&gt;</operator><name pos:start="499:36" pos:end="499:46">block_align</name></name></expr>)</condition> <block pos:start="499:49" pos:end="505:17">{<block_content pos:start="501:21" pos:end="503:43">

                    <expr_stmt pos:start="501:21" pos:end="501:101"><expr pos:start="501:21" pos:end="501:100"><call pos:start="501:21" pos:end="501:100"><name pos:start="501:21" pos:end="501:26">av_log</name><argument_list pos:start="501:27" pos:end="501:100">(<argument pos:start="501:28" pos:end="501:28"><expr pos:start="501:28" pos:end="501:28"><name pos:start="501:28" pos:end="501:28">s</name></expr></argument>, <argument pos:start="501:31" pos:end="501:42"><expr pos:start="501:31" pos:end="501:42"><name pos:start="501:31" pos:end="501:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="501:45" pos:end="501:96"><expr pos:start="501:45" pos:end="501:96"><literal type="string" pos:start="501:45" pos:end="501:96">"track %d: codec block align is not set for adpcm\n"</literal></expr></argument>, <argument pos:start="501:99" pos:end="501:99"><expr pos:start="501:99" pos:end="501:99"><name pos:start="501:99" pos:end="501:99">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="503:21" pos:end="503:43">return <expr pos:start="503:28" pos:end="503:42"><call pos:start="503:28" pos:end="503:42"><name pos:start="503:28" pos:end="503:34">AVERROR</name><argument_list pos:start="503:35" pos:end="503:42">(<argument pos:start="503:36" pos:end="503:41"><expr pos:start="503:36" pos:end="503:41"><name pos:start="503:36" pos:end="503:41">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="507:17" pos:end="507:63"><expr pos:start="507:17" pos:end="507:62"><name pos:start="507:17" pos:end="507:34"><name pos:start="507:17" pos:end="507:21">track</name><operator pos:start="507:22" pos:end="507:23">-&gt;</operator><name pos:start="507:24" pos:end="507:34">sample_size</name></name> <operator pos:start="507:36" pos:end="507:36">=</operator> <name pos:start="507:38" pos:end="507:62"><name pos:start="507:38" pos:end="507:39">st</name><operator pos:start="507:40" pos:end="507:41">-&gt;</operator><name pos:start="507:42" pos:end="507:49">codecpar</name><operator pos:start="507:50" pos:end="507:51">-&gt;</operator><name pos:start="507:52" pos:end="507:62">block_align</name></name></expr>;</expr_stmt>

            </block_content>}</block></if><if type="elseif" pos:start="509:14" pos:end="513:13">else if <condition pos:start="509:22" pos:end="509:51">(<expr pos:start="509:23" pos:end="509:50"><name pos:start="509:23" pos:end="509:46"><name pos:start="509:23" pos:end="509:24">st</name><operator pos:start="509:25" pos:end="509:26">-&gt;</operator><name pos:start="509:27" pos:end="509:34">codecpar</name><operator pos:start="509:35" pos:end="509:36">-&gt;</operator><name pos:start="509:37" pos:end="509:46">frame_size</name></name> <operator pos:start="509:48" pos:end="509:48">&gt;</operator> <literal type="number" pos:start="509:50" pos:end="509:50">1</literal></expr>)</condition><block pos:start="509:52" pos:end="513:13">{<block_content pos:start="511:17" pos:end="511:37"> <comment type="block" pos:start="509:54" pos:end="509:82">/* assume compressed audio */</comment>

                <expr_stmt pos:start="511:17" pos:end="511:37"><expr pos:start="511:17" pos:end="511:36"><name pos:start="511:17" pos:end="511:32"><name pos:start="511:17" pos:end="511:21">track</name><operator pos:start="511:22" pos:end="511:23">-&gt;</operator><name pos:start="511:24" pos:end="511:32">audio_vbr</name></name> <operator pos:start="511:34" pos:end="511:34">=</operator> <literal type="number" pos:start="511:36" pos:end="511:36">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="513:14" pos:end="517:13">else<block pos:start="513:18" pos:end="517:13">{<block_content pos:start="515:17" pos:end="515:116">

                <expr_stmt pos:start="515:17" pos:end="515:116"><expr pos:start="515:17" pos:end="515:115"><name pos:start="515:17" pos:end="515:34"><name pos:start="515:17" pos:end="515:21">track</name><operator pos:start="515:22" pos:end="515:23">-&gt;</operator><name pos:start="515:24" pos:end="515:34">sample_size</name></name> <operator pos:start="515:36" pos:end="515:36">=</operator> <operator pos:start="515:38" pos:end="515:38">(</operator><call pos:start="515:39" pos:end="515:84"><name pos:start="515:39" pos:end="515:60">av_get_bits_per_sample</name><argument_list pos:start="515:61" pos:end="515:84">(<argument pos:start="515:62" pos:end="515:83"><expr pos:start="515:62" pos:end="515:83"><name pos:start="515:62" pos:end="515:83"><name pos:start="515:62" pos:end="515:63">st</name><operator pos:start="515:64" pos:end="515:65">-&gt;</operator><name pos:start="515:66" pos:end="515:73">codecpar</name><operator pos:start="515:74" pos:end="515:75">-&gt;</operator><name pos:start="515:76" pos:end="515:83">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="515:86" pos:end="515:87">&gt;&gt;</operator> <literal type="number" pos:start="515:89" pos:end="515:89">3</literal><operator pos:start="515:90" pos:end="515:90">)</operator> <operator pos:start="515:92" pos:end="515:92">*</operator> <name pos:start="515:94" pos:end="515:115"><name pos:start="515:94" pos:end="515:95">st</name><operator pos:start="515:96" pos:end="515:97">-&gt;</operator><name pos:start="515:98" pos:end="515:105">codecpar</name><operator pos:start="515:106" pos:end="515:107">-&gt;</operator><name pos:start="515:108" pos:end="515:115">channels</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="519:13" pos:end="525:13"><if pos:start="519:13" pos:end="525:13">if <condition pos:start="519:16" pos:end="521:67">(<expr pos:start="519:17" pos:end="521:66"><name pos:start="519:17" pos:end="519:38"><name pos:start="519:17" pos:end="519:18">st</name><operator pos:start="519:19" pos:end="519:20">-&gt;</operator><name pos:start="519:21" pos:end="519:28">codecpar</name><operator pos:start="519:29" pos:end="519:30">-&gt;</operator><name pos:start="519:31" pos:end="519:38">codec_id</name></name> <operator pos:start="519:40" pos:end="519:41">==</operator> <name pos:start="519:43" pos:end="519:58">AV_CODEC_ID_ILBC</name> <operator pos:start="519:60" pos:end="519:61">||</operator>

                <name pos:start="521:17" pos:end="521:38"><name pos:start="521:17" pos:end="521:18">st</name><operator pos:start="521:19" pos:end="521:20">-&gt;</operator><name pos:start="521:21" pos:end="521:28">codecpar</name><operator pos:start="521:29" pos:end="521:30">-&gt;</operator><name pos:start="521:31" pos:end="521:38">codec_id</name></name> <operator pos:start="521:40" pos:end="521:41">==</operator> <name pos:start="521:43" pos:end="521:66">AV_CODEC_ID_ADPCM_IMA_QT</name></expr>)</condition> <block pos:start="521:69" pos:end="525:13">{<block_content pos:start="523:17" pos:end="523:37">

                <expr_stmt pos:start="523:17" pos:end="523:37"><expr pos:start="523:17" pos:end="523:36"><name pos:start="523:17" pos:end="523:32"><name pos:start="523:17" pos:end="523:21">track</name><operator pos:start="523:22" pos:end="523:23">-&gt;</operator><name pos:start="523:24" pos:end="523:32">audio_vbr</name></name> <operator pos:start="523:34" pos:end="523:34">=</operator> <literal type="number" pos:start="523:36" pos:end="523:36">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="527:13" pos:end="547:13"><if pos:start="527:13" pos:end="547:13">if <condition pos:start="527:16" pos:end="529:84">(<expr pos:start="527:17" pos:end="529:83"><name pos:start="527:17" pos:end="527:27"><name pos:start="527:17" pos:end="527:21">track</name><operator pos:start="527:22" pos:end="527:23">-&gt;</operator><name pos:start="527:24" pos:end="527:27">mode</name></name> <operator pos:start="527:29" pos:end="527:30">!=</operator> <name pos:start="527:32" pos:end="527:39">MODE_MOV</name> <operator pos:start="527:41" pos:end="527:42">&amp;&amp;</operator>

                <name pos:start="529:17" pos:end="529:36"><name pos:start="529:17" pos:end="529:21">track</name><operator pos:start="529:22" pos:end="529:23">-&gt;</operator><name pos:start="529:24" pos:end="529:26">par</name><operator pos:start="529:27" pos:end="529:28">-&gt;</operator><name pos:start="529:29" pos:end="529:36">codec_id</name></name> <operator pos:start="529:38" pos:end="529:39">==</operator> <name pos:start="529:41" pos:end="529:55">AV_CODEC_ID_MP3</name> <operator pos:start="529:57" pos:end="529:58">&amp;&amp;</operator> <name pos:start="529:60" pos:end="529:75"><name pos:start="529:60" pos:end="529:64">track</name><operator pos:start="529:65" pos:end="529:66">-&gt;</operator><name pos:start="529:67" pos:end="529:75">timescale</name></name> <operator pos:start="529:77" pos:end="529:77">&lt;</operator> <literal type="number" pos:start="529:79" pos:end="529:83">16000</literal></expr>)</condition> <block pos:start="529:86" pos:end="547:13">{<block_content pos:start="531:17" pos:end="545:17">

                <if_stmt pos:start="531:17" pos:end="545:17"><if pos:start="531:17" pos:end="539:17">if <condition pos:start="531:20" pos:end="531:69">(<expr pos:start="531:21" pos:end="531:68"><name pos:start="531:21" pos:end="531:44"><name pos:start="531:21" pos:end="531:21">s</name><operator pos:start="531:22" pos:end="531:23">-&gt;</operator><name pos:start="531:24" pos:end="531:44">strict_std_compliance</name></name> <operator pos:start="531:46" pos:end="531:47">&gt;=</operator> <name pos:start="531:49" pos:end="531:68">FF_COMPLIANCE_NORMAL</name></expr>)</condition> <block pos:start="531:71" pos:end="539:17">{<block_content pos:start="533:21" pos:end="537:43">

                    <expr_stmt pos:start="533:21" pos:end="535:52"><expr pos:start="533:21" pos:end="535:51"><call pos:start="533:21" pos:end="535:51"><name pos:start="533:21" pos:end="533:26">av_log</name><argument_list pos:start="533:27" pos:end="535:51">(<argument pos:start="533:28" pos:end="533:28"><expr pos:start="533:28" pos:end="533:28"><name pos:start="533:28" pos:end="533:28">s</name></expr></argument>, <argument pos:start="533:31" pos:end="533:42"><expr pos:start="533:31" pos:end="533:42"><name pos:start="533:31" pos:end="533:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="533:45" pos:end="533:124"><expr pos:start="533:45" pos:end="533:124"><literal type="string" pos:start="533:45" pos:end="533:124">"track %d: muxing mp3 at %dhz is not standard, to mux anyway set strict to -1\n"</literal></expr></argument>,

                        <argument pos:start="535:25" pos:end="535:25"><expr pos:start="535:25" pos:end="535:25"><name pos:start="535:25" pos:end="535:25">i</name></expr></argument>, <argument pos:start="535:28" pos:end="535:50"><expr pos:start="535:28" pos:end="535:50"><name pos:start="535:28" pos:end="535:50"><name pos:start="535:28" pos:end="535:32">track</name><operator pos:start="535:33" pos:end="535:34">-&gt;</operator><name pos:start="535:35" pos:end="535:37">par</name><operator pos:start="535:38" pos:end="535:39">-&gt;</operator><name pos:start="535:40" pos:end="535:50">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="537:21" pos:end="537:43">return <expr pos:start="537:28" pos:end="537:42"><call pos:start="537:28" pos:end="537:42"><name pos:start="537:28" pos:end="537:34">AVERROR</name><argument_list pos:start="537:35" pos:end="537:42">(<argument pos:start="537:36" pos:end="537:41"><expr pos:start="537:36" pos:end="537:41"><name pos:start="537:36" pos:end="537:41">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if> <else pos:start="539:19" pos:end="545:17">else <block pos:start="539:24" pos:end="545:17">{<block_content pos:start="541:21" pos:end="543:55">

                    <expr_stmt pos:start="541:21" pos:end="543:55"><expr pos:start="541:21" pos:end="543:54"><call pos:start="541:21" pos:end="543:54"><name pos:start="541:21" pos:end="541:26">av_log</name><argument_list pos:start="541:27" pos:end="543:54">(<argument pos:start="541:28" pos:end="541:28"><expr pos:start="541:28" pos:end="541:28"><name pos:start="541:28" pos:end="541:28">s</name></expr></argument>, <argument pos:start="541:31" pos:end="541:44"><expr pos:start="541:31" pos:end="541:44"><name pos:start="541:31" pos:end="541:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="541:47" pos:end="541:101"><expr pos:start="541:47" pos:end="541:101"><literal type="string" pos:start="541:47" pos:end="541:101">"track %d: muxing mp3 at %dhz is not standard in MP4\n"</literal></expr></argument>,

                           <argument pos:start="543:28" pos:end="543:28"><expr pos:start="543:28" pos:end="543:28"><name pos:start="543:28" pos:end="543:28">i</name></expr></argument>, <argument pos:start="543:31" pos:end="543:53"><expr pos:start="543:31" pos:end="543:53"><name pos:start="543:31" pos:end="543:53"><name pos:start="543:31" pos:end="543:35">track</name><operator pos:start="543:36" pos:end="543:37">-&gt;</operator><name pos:start="543:38" pos:end="543:40">par</name><operator pos:start="543:41" pos:end="543:42">-&gt;</operator><name pos:start="543:43" pos:end="543:53">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="549:13" pos:end="575:13"><if pos:start="549:13" pos:end="575:13">if <condition pos:start="549:16" pos:end="551:57">(<expr pos:start="549:17" pos:end="551:56"><name pos:start="549:17" pos:end="549:36"><name pos:start="549:17" pos:end="549:21">track</name><operator pos:start="549:22" pos:end="549:23">-&gt;</operator><name pos:start="549:24" pos:end="549:26">par</name><operator pos:start="549:27" pos:end="549:28">-&gt;</operator><name pos:start="549:29" pos:end="549:36">codec_id</name></name> <operator pos:start="549:38" pos:end="549:39">==</operator> <name pos:start="549:41" pos:end="549:56">AV_CODEC_ID_FLAC</name> <operator pos:start="549:58" pos:end="549:59">||</operator>

                <name pos:start="551:17" pos:end="551:36"><name pos:start="551:17" pos:end="551:21">track</name><operator pos:start="551:22" pos:end="551:23">-&gt;</operator><name pos:start="551:24" pos:end="551:26">par</name><operator pos:start="551:27" pos:end="551:28">-&gt;</operator><name pos:start="551:29" pos:end="551:36">codec_id</name></name> <operator pos:start="551:38" pos:end="551:39">==</operator> <name pos:start="551:41" pos:end="551:56">AV_CODEC_ID_OPUS</name></expr>)</condition> <block pos:start="551:59" pos:end="575:13">{<block_content pos:start="553:17" pos:end="573:17">

                <if_stmt pos:start="553:17" pos:end="559:17"><if pos:start="553:17" pos:end="559:17">if <condition pos:start="553:20" pos:end="553:44">(<expr pos:start="553:21" pos:end="553:43"><name pos:start="553:21" pos:end="553:31"><name pos:start="553:21" pos:end="553:25">track</name><operator pos:start="553:26" pos:end="553:27">-&gt;</operator><name pos:start="553:28" pos:end="553:31">mode</name></name> <operator pos:start="553:33" pos:end="553:34">!=</operator> <name pos:start="553:36" pos:end="553:43">MODE_MP4</name></expr>)</condition> <block pos:start="553:46" pos:end="559:17">{<block_content pos:start="555:21" pos:end="557:43">

                    <expr_stmt pos:start="555:21" pos:end="555:115"><expr pos:start="555:21" pos:end="555:114"><call pos:start="555:21" pos:end="555:114"><name pos:start="555:21" pos:end="555:26">av_log</name><argument_list pos:start="555:27" pos:end="555:114">(<argument pos:start="555:28" pos:end="555:28"><expr pos:start="555:28" pos:end="555:28"><name pos:start="555:28" pos:end="555:28">s</name></expr></argument>, <argument pos:start="555:31" pos:end="555:42"><expr pos:start="555:31" pos:end="555:42"><name pos:start="555:31" pos:end="555:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="555:45" pos:end="555:73"><expr pos:start="555:45" pos:end="555:73"><literal type="string" pos:start="555:45" pos:end="555:73">"%s only supported in MP4.\n"</literal></expr></argument>, <argument pos:start="555:76" pos:end="555:113"><expr pos:start="555:76" pos:end="555:113"><call pos:start="555:76" pos:end="555:113"><name pos:start="555:76" pos:end="555:91">avcodec_get_name</name><argument_list pos:start="555:92" pos:end="555:113">(<argument pos:start="555:93" pos:end="555:112"><expr pos:start="555:93" pos:end="555:112"><name pos:start="555:93" pos:end="555:112"><name pos:start="555:93" pos:end="555:97">track</name><operator pos:start="555:98" pos:end="555:99">-&gt;</operator><name pos:start="555:100" pos:end="555:102">par</name><operator pos:start="555:103" pos:end="555:104">-&gt;</operator><name pos:start="555:105" pos:end="555:112">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="557:21" pos:end="557:43">return <expr pos:start="557:28" pos:end="557:42"><call pos:start="557:28" pos:end="557:42"><name pos:start="557:28" pos:end="557:34">AVERROR</name><argument_list pos:start="557:35" pos:end="557:42">(<argument pos:start="557:36" pos:end="557:41"><expr pos:start="557:36" pos:end="557:41"><name pos:start="557:36" pos:end="557:41">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="561:17" pos:end="573:17"><if pos:start="561:17" pos:end="573:17">if <condition pos:start="561:20" pos:end="561:74">(<expr pos:start="561:21" pos:end="561:73"><name pos:start="561:21" pos:end="561:44"><name pos:start="561:21" pos:end="561:21">s</name><operator pos:start="561:22" pos:end="561:23">-&gt;</operator><name pos:start="561:24" pos:end="561:44">strict_std_compliance</name></name> <operator pos:start="561:46" pos:end="561:46">&gt;</operator> <name pos:start="561:48" pos:end="561:73">FF_COMPLIANCE_EXPERIMENTAL</name></expr>)</condition> <block pos:start="561:76" pos:end="573:17">{<block_content pos:start="563:21" pos:end="571:48">

                    <expr_stmt pos:start="563:21" pos:end="569:95"><expr pos:start="563:21" pos:end="569:94"><call pos:start="563:21" pos:end="569:94"><name pos:start="563:21" pos:end="563:26">av_log</name><argument_list pos:start="563:27" pos:end="569:94">(<argument pos:start="563:28" pos:end="563:28"><expr pos:start="563:28" pos:end="563:28"><name pos:start="563:28" pos:end="563:28">s</name></expr></argument>, <argument pos:start="563:31" pos:end="563:42"><expr pos:start="563:31" pos:end="563:42"><name pos:start="563:31" pos:end="563:42">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="565:28" pos:end="567:66"><expr pos:start="565:28" pos:end="567:66"><literal type="string" pos:start="565:28" pos:end="565:68">"%s in MP4 support is experimental, add "</literal>

                           <literal type="string" pos:start="567:28" pos:end="567:66">"'-strict %d' if you want to use it.\n"</literal></expr></argument>,

                           <argument pos:start="569:28" pos:end="569:65"><expr pos:start="569:28" pos:end="569:65"><call pos:start="569:28" pos:end="569:65"><name pos:start="569:28" pos:end="569:43">avcodec_get_name</name><argument_list pos:start="569:44" pos:end="569:65">(<argument pos:start="569:45" pos:end="569:64"><expr pos:start="569:45" pos:end="569:64"><name pos:start="569:45" pos:end="569:64"><name pos:start="569:45" pos:end="569:49">track</name><operator pos:start="569:50" pos:end="569:51">-&gt;</operator><name pos:start="569:52" pos:end="569:54">par</name><operator pos:start="569:55" pos:end="569:56">-&gt;</operator><name pos:start="569:57" pos:end="569:64">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="569:68" pos:end="569:93"><expr pos:start="569:68" pos:end="569:93"><name pos:start="569:68" pos:end="569:93">FF_COMPLIANCE_EXPERIMENTAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="571:21" pos:end="571:48">return <expr pos:start="571:28" pos:end="571:47"><name pos:start="571:28" pos:end="571:47">AVERROR_EXPERIMENTAL</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="577:11" pos:end="581:9">else if <condition pos:start="577:19" pos:end="577:69">(<expr pos:start="577:20" pos:end="577:68"><name pos:start="577:20" pos:end="577:43"><name pos:start="577:20" pos:end="577:21">st</name><operator pos:start="577:22" pos:end="577:23">-&gt;</operator><name pos:start="577:24" pos:end="577:31">codecpar</name><operator pos:start="577:32" pos:end="577:33">-&gt;</operator><name pos:start="577:34" pos:end="577:43">codec_type</name></name> <operator pos:start="577:45" pos:end="577:46">==</operator> <name pos:start="577:48" pos:end="577:68">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="577:71" pos:end="581:9">{<block_content pos:start="579:13" pos:end="579:49">

            <expr_stmt pos:start="579:13" pos:end="579:49"><expr pos:start="579:13" pos:end="579:48"><name pos:start="579:13" pos:end="579:28"><name pos:start="579:13" pos:end="579:17">track</name><operator pos:start="579:18" pos:end="579:19">-&gt;</operator><name pos:start="579:20" pos:end="579:28">timescale</name></name> <operator pos:start="579:30" pos:end="579:30">=</operator> <name pos:start="579:32" pos:end="579:48"><name pos:start="579:32" pos:end="579:33">st</name><operator pos:start="579:34" pos:end="579:35">-&gt;</operator><name pos:start="579:36" pos:end="579:44">time_base</name><operator pos:start="579:45" pos:end="579:45">.</operator><name pos:start="579:46" pos:end="579:48">den</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="581:11" pos:end="585:9">else if <condition pos:start="581:19" pos:end="581:65">(<expr pos:start="581:20" pos:end="581:64"><name pos:start="581:20" pos:end="581:43"><name pos:start="581:20" pos:end="581:21">st</name><operator pos:start="581:22" pos:end="581:23">-&gt;</operator><name pos:start="581:24" pos:end="581:31">codecpar</name><operator pos:start="581:32" pos:end="581:33">-&gt;</operator><name pos:start="581:34" pos:end="581:43">codec_type</name></name> <operator pos:start="581:45" pos:end="581:46">==</operator> <name pos:start="581:48" pos:end="581:64">AVMEDIA_TYPE_DATA</name></expr>)</condition> <block pos:start="581:67" pos:end="585:9">{<block_content pos:start="583:13" pos:end="583:49">

            <expr_stmt pos:start="583:13" pos:end="583:49"><expr pos:start="583:13" pos:end="583:48"><name pos:start="583:13" pos:end="583:28"><name pos:start="583:13" pos:end="583:17">track</name><operator pos:start="583:18" pos:end="583:19">-&gt;</operator><name pos:start="583:20" pos:end="583:28">timescale</name></name> <operator pos:start="583:30" pos:end="583:30">=</operator> <name pos:start="583:32" pos:end="583:48"><name pos:start="583:32" pos:end="583:33">st</name><operator pos:start="583:34" pos:end="583:35">-&gt;</operator><name pos:start="583:36" pos:end="583:44">time_base</name><operator pos:start="583:45" pos:end="583:45">.</operator><name pos:start="583:46" pos:end="583:48">den</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="585:11" pos:end="589:9">else <block pos:start="585:16" pos:end="589:9">{<block_content pos:start="587:13" pos:end="587:45">

            <expr_stmt pos:start="587:13" pos:end="587:45"><expr pos:start="587:13" pos:end="587:44"><name pos:start="587:13" pos:end="587:28"><name pos:start="587:13" pos:end="587:17">track</name><operator pos:start="587:18" pos:end="587:19">-&gt;</operator><name pos:start="587:20" pos:end="587:28">timescale</name></name> <operator pos:start="587:30" pos:end="587:30">=</operator> <name pos:start="587:32" pos:end="587:44">MOV_TIMESCALE</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="591:9" pos:end="593:49"><if pos:start="591:9" pos:end="593:49">if <condition pos:start="591:12" pos:end="591:27">(<expr pos:start="591:13" pos:end="591:26"><operator pos:start="591:13" pos:end="591:13">!</operator><name pos:start="591:14" pos:end="591:26"><name pos:start="591:14" pos:end="591:18">track</name><operator pos:start="591:19" pos:end="591:20">-&gt;</operator><name pos:start="591:21" pos:end="591:26">height</name></name></expr>)</condition><block type="pseudo" pos:start="593:13" pos:end="593:49"><block_content pos:start="593:13" pos:end="593:49">

            <expr_stmt pos:start="593:13" pos:end="593:49"><expr pos:start="593:13" pos:end="593:48"><name pos:start="593:13" pos:end="593:25"><name pos:start="593:13" pos:end="593:17">track</name><operator pos:start="593:18" pos:end="593:19">-&gt;</operator><name pos:start="593:20" pos:end="593:25">height</name></name> <operator pos:start="593:27" pos:end="593:27">=</operator> <name pos:start="593:29" pos:end="593:48"><name pos:start="593:29" pos:end="593:30">st</name><operator pos:start="593:31" pos:end="593:32">-&gt;</operator><name pos:start="593:33" pos:end="593:40">codecpar</name><operator pos:start="593:41" pos:end="593:42">-&gt;</operator><name pos:start="593:43" pos:end="593:48">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <comment type="block" pos:start="595:9" pos:end="597:43">/* The ism specific timescale isn't mandatory, but is assumed by

         * some tools, such as mp4split. */</comment>

        <if_stmt pos:start="599:9" pos:end="601:40"><if pos:start="599:9" pos:end="601:40">if <condition pos:start="599:12" pos:end="599:34">(<expr pos:start="599:13" pos:end="599:33"><name pos:start="599:13" pos:end="599:21"><name pos:start="599:13" pos:end="599:15">mov</name><operator pos:start="599:16" pos:end="599:17">-&gt;</operator><name pos:start="599:18" pos:end="599:21">mode</name></name> <operator pos:start="599:23" pos:end="599:24">==</operator> <name pos:start="599:26" pos:end="599:33">MODE_ISM</name></expr>)</condition><block type="pseudo" pos:start="601:13" pos:end="601:40"><block_content pos:start="601:13" pos:end="601:40">

            <expr_stmt pos:start="601:13" pos:end="601:40"><expr pos:start="601:13" pos:end="601:39"><name pos:start="601:13" pos:end="601:28"><name pos:start="601:13" pos:end="601:17">track</name><operator pos:start="601:18" pos:end="601:19">-&gt;</operator><name pos:start="601:20" pos:end="601:28">timescale</name></name> <operator pos:start="601:30" pos:end="601:30">=</operator> <literal type="number" pos:start="601:32" pos:end="601:39">10000000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="605:9" pos:end="605:57"><expr pos:start="605:9" pos:end="605:56"><call pos:start="605:9" pos:end="605:56"><name pos:start="605:9" pos:end="605:27">avpriv_set_pts_info</name><argument_list pos:start="605:28" pos:end="605:56">(<argument pos:start="605:29" pos:end="605:30"><expr pos:start="605:29" pos:end="605:30"><name pos:start="605:29" pos:end="605:30">st</name></expr></argument>, <argument pos:start="605:33" pos:end="605:34"><expr pos:start="605:33" pos:end="605:34"><literal type="number" pos:start="605:33" pos:end="605:34">64</literal></expr></argument>, <argument pos:start="605:37" pos:end="605:37"><expr pos:start="605:37" pos:end="605:37"><literal type="number" pos:start="605:37" pos:end="605:37">1</literal></expr></argument>, <argument pos:start="605:40" pos:end="605:55"><expr pos:start="605:40" pos:end="605:55"><name pos:start="605:40" pos:end="605:55"><name pos:start="605:40" pos:end="605:44">track</name><operator pos:start="605:45" pos:end="605:46">-&gt;</operator><name pos:start="605:47" pos:end="605:55">timescale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="609:9" pos:end="619:9"><if pos:start="609:9" pos:end="619:9">if <condition pos:start="609:12" pos:end="609:59">(<expr pos:start="609:13" pos:end="609:58"><name pos:start="609:13" pos:end="609:34"><name pos:start="609:13" pos:end="609:15">mov</name><operator pos:start="609:16" pos:end="609:17">-&gt;</operator><name pos:start="609:18" pos:end="609:34">encryption_scheme</name></name> <operator pos:start="609:36" pos:end="609:37">==</operator> <name pos:start="609:39" pos:end="609:58">MOV_ENC_CENC_AES_CTR</name></expr>)</condition> <block pos:start="609:61" pos:end="619:9">{<block_content pos:start="611:13" pos:end="617:27">

            <expr_stmt pos:start="611:13" pos:end="613:90"><expr pos:start="611:13" pos:end="613:89"><name pos:start="611:13" pos:end="611:15">ret</name> <operator pos:start="611:17" pos:end="611:17">=</operator> <call pos:start="611:19" pos:end="613:89"><name pos:start="611:19" pos:end="611:34">ff_mov_cenc_init</name><argument_list pos:start="611:35" pos:end="613:89">(<argument pos:start="611:36" pos:end="611:47"><expr pos:start="611:36" pos:end="611:47"><operator pos:start="611:36" pos:end="611:36">&amp;</operator><name pos:start="611:37" pos:end="611:47"><name pos:start="611:37" pos:end="611:41">track</name><operator pos:start="611:42" pos:end="611:43">-&gt;</operator><name pos:start="611:44" pos:end="611:47">cenc</name></name></expr></argument>, <argument pos:start="611:50" pos:end="611:68"><expr pos:start="611:50" pos:end="611:68"><name pos:start="611:50" pos:end="611:68"><name pos:start="611:50" pos:end="611:52">mov</name><operator pos:start="611:53" pos:end="611:54">-&gt;</operator><name pos:start="611:55" pos:end="611:68">encryption_key</name></name></expr></argument>,

                <argument pos:start="613:17" pos:end="613:56"><expr pos:start="613:17" pos:end="613:56"><name pos:start="613:17" pos:end="613:36"><name pos:start="613:17" pos:end="613:21">track</name><operator pos:start="613:22" pos:end="613:23">-&gt;</operator><name pos:start="613:24" pos:end="613:26">par</name><operator pos:start="613:27" pos:end="613:28">-&gt;</operator><name pos:start="613:29" pos:end="613:36">codec_id</name></name> <operator pos:start="613:38" pos:end="613:39">==</operator> <name pos:start="613:41" pos:end="613:56">AV_CODEC_ID_H264</name></expr></argument>, <argument pos:start="613:59" pos:end="613:88"><expr pos:start="613:59" pos:end="613:88"><name pos:start="613:59" pos:end="613:66"><name pos:start="613:59" pos:end="613:59">s</name><operator pos:start="613:60" pos:end="613:61">-&gt;</operator><name pos:start="613:62" pos:end="613:66">flags</name></name> <operator pos:start="613:68" pos:end="613:68">&amp;</operator> <name pos:start="613:70" pos:end="613:88">AVFMT_FLAG_BITEXACT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="615:13" pos:end="617:27"><if pos:start="615:13" pos:end="617:27">if <condition pos:start="615:16" pos:end="615:20">(<expr pos:start="615:17" pos:end="615:19"><name pos:start="615:17" pos:end="615:19">ret</name></expr>)</condition><block type="pseudo" pos:start="617:17" pos:end="617:27"><block_content pos:start="617:17" pos:end="617:27">

                <return pos:start="617:17" pos:end="617:27">return <expr pos:start="617:24" pos:end="617:26"><name pos:start="617:24" pos:end="617:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="625:5" pos:end="625:21"><expr pos:start="625:5" pos:end="625:20"><call pos:start="625:5" pos:end="625:20"><name pos:start="625:5" pos:end="625:17">enable_tracks</name><argument_list pos:start="625:18" pos:end="625:20">(<argument pos:start="625:19" pos:end="625:19"><expr pos:start="625:19" pos:end="625:19"><name pos:start="625:19" pos:end="625:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="627:5" pos:end="627:13">return <expr pos:start="627:12" pos:end="627:12"><literal type="number" pos:start="627:12" pos:end="627:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
