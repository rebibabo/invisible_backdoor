<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10118.c" pos:tabs="8"><function pos:start="1:1" pos:end="393:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="3:40">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">data</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:73"><decl pos:start="1:60" pos:end="1:73"><type pos:start="1:60" pos:end="1:73"><name pos:start="1:60" pos:end="1:62">int</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:73">got_frame</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:39"><decl pos:start="3:25" pos:end="3:39"><type pos:start="3:25" pos:end="3:39"><name pos:start="3:25" pos:end="3:32">AVPacket</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:39">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="393:1">{<block_content pos:start="7:5" pos:end="391:20">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name>       <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:15">VmncContext</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier> <specifier pos:start="11:19" pos:end="11:23">const</specifier></type> <name pos:start="11:25" pos:end="11:25">c</name> <init pos:start="11:27" pos:end="11:44">= <expr pos:start="11:29" pos:end="11:44"><name pos:start="11:29" pos:end="11:44"><name pos:start="11:29" pos:end="11:33">avctx</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">GetByteContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:22">gb</name> <init pos:start="13:24" pos:end="13:31">= <expr pos:start="13:26" pos:end="13:31"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:31"><name pos:start="13:27" pos:end="13:27">c</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:31">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:19">outptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:62"><decl pos:start="17:5" pos:end="17:10"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:10">dx</name></decl>, <decl pos:start="17:13" pos:end="17:14"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:13" pos:end="17:14">dy</name></decl>, <decl pos:start="17:17" pos:end="17:17"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:17" pos:end="17:17">w</name></decl>, <decl pos:start="17:20" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:20" pos:end="17:20">h</name></decl>, <decl pos:start="17:23" pos:end="17:27"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:23" pos:end="17:27">depth</name></decl>, <decl pos:start="17:30" pos:end="17:32"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:30" pos:end="17:32">enc</name></decl>, <decl pos:start="17:35" pos:end="17:40"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:35" pos:end="17:40">chunks</name></decl>, <decl pos:start="17:43" pos:end="17:45"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:43" pos:end="17:45">res</name></decl>, <decl pos:start="17:48" pos:end="17:56"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:48" pos:end="17:56">size_left</name></decl>, <decl pos:start="17:59" pos:end="17:61"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:59" pos:end="17:61">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:51">(<expr pos:start="21:9" pos:end="21:50"><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:12">ret</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:45"><name pos:start="21:16" pos:end="21:30">ff_reget_buffer</name><argument_list pos:start="21:31" pos:end="21:45">(<argument pos:start="21:32" pos:end="21:36"><expr pos:start="21:32" pos:end="21:36"><name pos:start="21:32" pos:end="21:36">avctx</name></expr></argument>, <argument pos:start="21:39" pos:end="21:44"><expr pos:start="21:39" pos:end="21:44"><name pos:start="21:39" pos:end="21:44"><name pos:start="21:39" pos:end="21:39">c</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:44">pic</name></name></expr></argument>)</argument_list></call><operator pos:start="21:46" pos:end="21:46">)</operator> <operator pos:start="21:48" pos:end="21:48">&lt;</operator> <literal type="number" pos:start="21:50" pos:end="21:50">0</literal></expr>)</condition> <block pos:start="21:53" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:19">

        <expr_stmt pos:start="23:9" pos:end="23:63"><expr pos:start="23:9" pos:end="23:62"><call pos:start="23:9" pos:end="23:62"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:62">(<argument pos:start="23:16" pos:end="23:20"><expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">avctx</name></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><name pos:start="23:23" pos:end="23:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:37" pos:end="23:61"><expr pos:start="23:37" pos:end="23:61"><literal type="string" pos:start="23:37" pos:end="23:61">"reget_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:19">return <expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:40"><expr pos:start="31:5" pos:end="31:39"><call pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:20">bytestream2_init</name><argument_list pos:start="31:21" pos:end="31:39">(<argument pos:start="31:22" pos:end="31:23"><expr pos:start="31:22" pos:end="31:23"><name pos:start="31:22" pos:end="31:23">gb</name></expr></argument>, <argument pos:start="31:26" pos:end="31:28"><expr pos:start="31:26" pos:end="31:28"><name pos:start="31:26" pos:end="31:28">buf</name></expr></argument>, <argument pos:start="31:31" pos:end="31:38"><expr pos:start="31:31" pos:end="31:38"><name pos:start="31:31" pos:end="31:38">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:5">c</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:10">pic</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:21">key_frame</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:42"><expr pos:start="37:5" pos:end="37:41"><name pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:5">c</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:10">pic</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:21">pict_type</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:41">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>



    <comment type="line" pos:start="41:5" pos:end="41:34">// restore screen after cursor</comment>

    <if_stmt pos:start="43:5" pos:end="95:5"><if pos:start="43:5" pos:end="95:5">if <condition pos:start="43:8" pos:end="43:21">(<expr pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:9">c</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:20">screendta</name></name></expr>)</condition> <block pos:start="43:23" pos:end="95:5">{<block_content pos:start="45:9" pos:end="93:9">

        <decl_stmt pos:start="45:9" pos:end="45:14"><decl pos:start="45:9" pos:end="45:13"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:21"><expr pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:9">w</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:13">c</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:20">cur_w</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="51:36"><if pos:start="49:9" pos:end="51:36">if <condition pos:start="49:12" pos:end="49:36">(<expr pos:start="49:13" pos:end="49:35"><name pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:13">c</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:20">width</name></name> <operator pos:start="49:22" pos:end="49:22">&lt;</operator> <name pos:start="49:24" pos:end="49:31"><name pos:start="49:24" pos:end="49:24">c</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:31">cur_x</name></name> <operator pos:start="49:33" pos:end="49:33">+</operator> <name pos:start="49:35" pos:end="49:35">w</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:36"><block_content pos:start="51:13" pos:end="51:36">

            <expr_stmt pos:start="51:13" pos:end="51:36"><expr pos:start="51:13" pos:end="51:35"><name pos:start="51:13" pos:end="51:13">w</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <name pos:start="51:17" pos:end="51:24"><name pos:start="51:17" pos:end="51:17">c</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:24">width</name></name> <operator pos:start="51:26" pos:end="51:26">-</operator> <name pos:start="51:28" pos:end="51:35"><name pos:start="51:28" pos:end="51:28">c</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:35">cur_x</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:9">h</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <name pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:13">c</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:20">cur_h</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:37"><if pos:start="55:9" pos:end="57:37">if <condition pos:start="55:12" pos:end="55:37">(<expr pos:start="55:13" pos:end="55:36"><name pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:13">c</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:21">height</name></name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <name pos:start="55:25" pos:end="55:32"><name pos:start="55:25" pos:end="55:25">c</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:32">cur_y</name></name> <operator pos:start="55:34" pos:end="55:34">+</operator> <name pos:start="55:36" pos:end="55:36">h</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:37"><block_content pos:start="57:13" pos:end="57:37">

            <expr_stmt pos:start="57:13" pos:end="57:37"><expr pos:start="57:13" pos:end="57:36"><name pos:start="57:13" pos:end="57:13">h</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:25"><name pos:start="57:17" pos:end="57:17">c</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:25">height</name></name> <operator pos:start="57:27" pos:end="57:27">-</operator> <name pos:start="57:29" pos:end="57:36"><name pos:start="57:29" pos:end="57:29">c</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:36">cur_y</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:10">dx</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <name pos:start="59:14" pos:end="59:21"><name pos:start="59:14" pos:end="59:14">c</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:21">cur_x</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:19">(<expr pos:start="61:13" pos:end="61:18"><name pos:start="61:13" pos:end="61:14">dx</name> <operator pos:start="61:16" pos:end="61:16">&lt;</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>)</condition> <block pos:start="61:21" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:19">

            <expr_stmt pos:start="63:13" pos:end="63:20"><expr pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:13">w</name> <operator pos:start="63:15" pos:end="63:16">+=</operator> <name pos:start="63:18" pos:end="63:19">dx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:19"><expr pos:start="65:13" pos:end="65:18"><name pos:start="65:13" pos:end="65:14">dx</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <literal type="number" pos:start="65:18" pos:end="65:18">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:22"><expr pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:10">dy</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <name pos:start="69:14" pos:end="69:21"><name pos:start="69:14" pos:end="69:14">c</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:21">cur_y</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="77:9"><if pos:start="71:9" pos:end="77:9">if <condition pos:start="71:12" pos:end="71:19">(<expr pos:start="71:13" pos:end="71:18"><name pos:start="71:13" pos:end="71:14">dy</name> <operator pos:start="71:16" pos:end="71:16">&lt;</operator> <literal type="number" pos:start="71:18" pos:end="71:18">0</literal></expr>)</condition> <block pos:start="71:21" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:19">

            <expr_stmt pos:start="73:13" pos:end="73:20"><expr pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:13">h</name> <operator pos:start="73:15" pos:end="73:16">+=</operator> <name pos:start="73:18" pos:end="73:19">dy</name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:19"><expr pos:start="75:13" pos:end="75:18"><name pos:start="75:13" pos:end="75:14">dy</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="number" pos:start="75:18" pos:end="75:18">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="79:9" pos:end="93:9"><if pos:start="79:9" pos:end="93:9">if <condition pos:start="79:12" pos:end="79:31">(<expr pos:start="79:13" pos:end="79:30"><operator pos:start="79:13" pos:end="79:13">(</operator><name pos:start="79:14" pos:end="79:14">w</name> <operator pos:start="79:16" pos:end="79:16">&gt;</operator> <literal type="number" pos:start="79:18" pos:end="79:18">0</literal><operator pos:start="79:19" pos:end="79:19">)</operator> <operator pos:start="79:21" pos:end="79:22">&amp;&amp;</operator> <operator pos:start="79:24" pos:end="79:24">(</operator><name pos:start="79:25" pos:end="79:25">h</name> <operator pos:start="79:27" pos:end="79:27">&gt;</operator> <literal type="number" pos:start="79:29" pos:end="79:29">0</literal><operator pos:start="79:30" pos:end="79:30">)</operator></expr>)</condition> <block pos:start="79:33" pos:end="93:9">{<block_content pos:start="81:13" pos:end="91:13">

            <expr_stmt pos:start="81:13" pos:end="81:79"><expr pos:start="81:13" pos:end="81:78"><name pos:start="81:13" pos:end="81:18">outptr</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:36"><name pos:start="81:22" pos:end="81:22">c</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:27">pic</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:33">data</name><index pos:start="81:34" pos:end="81:36">[<expr pos:start="81:35" pos:end="81:35"><literal type="number" pos:start="81:35" pos:end="81:35">0</literal></expr>]</index></name> <operator pos:start="81:38" pos:end="81:38">+</operator> <name pos:start="81:40" pos:end="81:41">dx</name> <operator pos:start="81:43" pos:end="81:43">*</operator> <name pos:start="81:45" pos:end="81:51"><name pos:start="81:45" pos:end="81:45">c</name><operator pos:start="81:46" pos:end="81:47">-&gt;</operator><name pos:start="81:48" pos:end="81:51">bpp2</name></name> <operator pos:start="81:53" pos:end="81:53">+</operator> <name pos:start="81:55" pos:end="81:56">dy</name> <operator pos:start="81:58" pos:end="81:58">*</operator> <name pos:start="81:60" pos:end="81:78"><name pos:start="81:60" pos:end="81:60">c</name><operator pos:start="81:61" pos:end="81:62">-&gt;</operator><name pos:start="81:63" pos:end="81:65">pic</name><operator pos:start="81:66" pos:end="81:67">-&gt;</operator><name pos:start="81:68" pos:end="81:75">linesize</name><index pos:start="81:76" pos:end="81:78">[<expr pos:start="81:77" pos:end="81:77"><literal type="number" pos:start="81:77" pos:end="81:77">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="83:13" pos:end="91:13">for <control pos:start="83:17" pos:end="83:35">(<init pos:start="83:18" pos:end="83:23"><expr pos:start="83:18" pos:end="83:22"><name pos:start="83:18" pos:end="83:18">i</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <literal type="number" pos:start="83:22" pos:end="83:22">0</literal></expr>;</init> <condition pos:start="83:25" pos:end="83:30"><expr pos:start="83:25" pos:end="83:29"><name pos:start="83:25" pos:end="83:25">i</name> <operator pos:start="83:27" pos:end="83:27">&lt;</operator> <name pos:start="83:29" pos:end="83:29">h</name></expr>;</condition> <incr pos:start="83:32" pos:end="83:34"><expr pos:start="83:32" pos:end="83:34"><name pos:start="83:32" pos:end="83:32">i</name><operator pos:start="83:33" pos:end="83:34">++</operator></expr></incr>)</control> <block pos:start="83:37" pos:end="91:13">{<block_content pos:start="85:17" pos:end="89:46">

                <expr_stmt pos:start="85:17" pos:end="87:36"><expr pos:start="85:17" pos:end="87:35"><call pos:start="85:17" pos:end="87:35"><name pos:start="85:17" pos:end="85:22">memcpy</name><argument_list pos:start="85:23" pos:end="87:35">(<argument pos:start="85:24" pos:end="85:29"><expr pos:start="85:24" pos:end="85:29"><name pos:start="85:24" pos:end="85:29">outptr</name></expr></argument>, <argument pos:start="85:32" pos:end="85:68"><expr pos:start="85:32" pos:end="85:68"><name pos:start="85:32" pos:end="85:43"><name pos:start="85:32" pos:end="85:32">c</name><operator pos:start="85:33" pos:end="85:34">-&gt;</operator><name pos:start="85:35" pos:end="85:43">screendta</name></name> <operator pos:start="85:45" pos:end="85:45">+</operator> <name pos:start="85:47" pos:end="85:47">i</name> <operator pos:start="85:49" pos:end="85:49">*</operator> <name pos:start="85:51" pos:end="85:58"><name pos:start="85:51" pos:end="85:51">c</name><operator pos:start="85:52" pos:end="85:53">-&gt;</operator><name pos:start="85:54" pos:end="85:58">cur_w</name></name> <operator pos:start="85:60" pos:end="85:60">*</operator> <name pos:start="85:62" pos:end="85:68"><name pos:start="85:62" pos:end="85:62">c</name><operator pos:start="85:63" pos:end="85:64">-&gt;</operator><name pos:start="85:65" pos:end="85:68">bpp2</name></name></expr></argument>,

                       <argument pos:start="87:24" pos:end="87:34"><expr pos:start="87:24" pos:end="87:34"><name pos:start="87:24" pos:end="87:24">w</name> <operator pos:start="87:26" pos:end="87:26">*</operator> <name pos:start="87:28" pos:end="87:34"><name pos:start="87:28" pos:end="87:28">c</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:34">bpp2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:46"><expr pos:start="89:17" pos:end="89:45"><name pos:start="89:17" pos:end="89:22">outptr</name> <operator pos:start="89:24" pos:end="89:25">+=</operator> <name pos:start="89:27" pos:end="89:45"><name pos:start="89:27" pos:end="89:27">c</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:32">pic</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:42">linesize</name><index pos:start="89:43" pos:end="89:45">[<expr pos:start="89:44" pos:end="89:44"><literal type="number" pos:start="89:44" pos:end="89:44">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:28"><expr pos:start="97:5" pos:end="97:27"><call pos:start="97:5" pos:end="97:27"><name pos:start="97:5" pos:end="97:20">bytestream2_skip</name><argument_list pos:start="97:21" pos:end="97:27">(<argument pos:start="97:22" pos:end="97:23"><expr pos:start="97:22" pos:end="97:23"><name pos:start="97:22" pos:end="97:23">gb</name></expr></argument>, <argument pos:start="97:26" pos:end="97:26"><expr pos:start="97:26" pos:end="97:26"><literal type="number" pos:start="97:26" pos:end="97:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:38"><expr pos:start="99:5" pos:end="99:37"><name pos:start="99:5" pos:end="99:10">chunks</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <call pos:start="99:14" pos:end="99:37"><name pos:start="99:14" pos:end="99:33">bytestream2_get_be16</name><argument_list pos:start="99:34" pos:end="99:37">(<argument pos:start="99:35" pos:end="99:36"><expr pos:start="99:35" pos:end="99:36"><name pos:start="99:35" pos:end="99:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="101:5" pos:end="319:5">while <condition pos:start="101:11" pos:end="101:20">(<expr pos:start="101:12" pos:end="101:19"><name pos:start="101:12" pos:end="101:17">chunks</name><operator pos:start="101:18" pos:end="101:19">--</operator></expr>)</condition> <block pos:start="101:22" pos:end="319:5">{<block_content pos:start="103:9" pos:end="317:9">

        <expr_stmt pos:start="103:9" pos:end="103:39"><expr pos:start="103:9" pos:end="103:38"><name pos:start="103:9" pos:end="103:10">dx</name>  <operator pos:start="103:13" pos:end="103:13">=</operator> <call pos:start="103:15" pos:end="103:38"><name pos:start="103:15" pos:end="103:34">bytestream2_get_be16</name><argument_list pos:start="103:35" pos:end="103:38">(<argument pos:start="103:36" pos:end="103:37"><expr pos:start="103:36" pos:end="103:37"><name pos:start="103:36" pos:end="103:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:39"><expr pos:start="105:9" pos:end="105:38"><name pos:start="105:9" pos:end="105:10">dy</name>  <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="105:38"><name pos:start="105:15" pos:end="105:34">bytestream2_get_be16</name><argument_list pos:start="105:35" pos:end="105:38">(<argument pos:start="105:36" pos:end="105:37"><expr pos:start="105:36" pos:end="105:37"><name pos:start="105:36" pos:end="105:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:39"><expr pos:start="107:9" pos:end="107:38"><name pos:start="107:9" pos:end="107:9">w</name>   <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:38"><name pos:start="107:15" pos:end="107:34">bytestream2_get_be16</name><argument_list pos:start="107:35" pos:end="107:38">(<argument pos:start="107:36" pos:end="107:37"><expr pos:start="107:36" pos:end="107:37"><name pos:start="107:36" pos:end="107:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:39"><expr pos:start="109:9" pos:end="109:38"><name pos:start="109:9" pos:end="109:9">h</name>   <operator pos:start="109:13" pos:end="109:13">=</operator> <call pos:start="109:15" pos:end="109:38"><name pos:start="109:15" pos:end="109:34">bytestream2_get_be16</name><argument_list pos:start="109:35" pos:end="109:38">(<argument pos:start="109:36" pos:end="109:37"><expr pos:start="109:36" pos:end="109:37"><name pos:start="109:36" pos:end="109:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:39"><expr pos:start="111:9" pos:end="111:38"><name pos:start="111:9" pos:end="111:11">enc</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <call pos:start="111:15" pos:end="111:38"><name pos:start="111:15" pos:end="111:34">bytestream2_get_be32</name><argument_list pos:start="111:35" pos:end="111:38">(<argument pos:start="111:36" pos:end="111:37"><expr pos:start="111:36" pos:end="111:37"><name pos:start="111:36" pos:end="111:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:75"><expr pos:start="113:9" pos:end="113:74"><name pos:start="113:9" pos:end="113:14">outptr</name> <operator pos:start="113:16" pos:end="113:16">=</operator> <name pos:start="113:18" pos:end="113:32"><name pos:start="113:18" pos:end="113:18">c</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:23">pic</name><operator pos:start="113:24" pos:end="113:25">-&gt;</operator><name pos:start="113:26" pos:end="113:29">data</name><index pos:start="113:30" pos:end="113:32">[<expr pos:start="113:31" pos:end="113:31"><literal type="number" pos:start="113:31" pos:end="113:31">0</literal></expr>]</index></name> <operator pos:start="113:34" pos:end="113:34">+</operator> <name pos:start="113:36" pos:end="113:37">dx</name> <operator pos:start="113:39" pos:end="113:39">*</operator> <name pos:start="113:41" pos:end="113:47"><name pos:start="113:41" pos:end="113:41">c</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:47">bpp2</name></name> <operator pos:start="113:49" pos:end="113:49">+</operator> <name pos:start="113:51" pos:end="113:52">dy</name> <operator pos:start="113:54" pos:end="113:54">*</operator> <name pos:start="113:56" pos:end="113:74"><name pos:start="113:56" pos:end="113:56">c</name><operator pos:start="113:57" pos:end="113:58">-&gt;</operator><name pos:start="113:59" pos:end="113:61">pic</name><operator pos:start="113:62" pos:end="113:63">-&gt;</operator><name pos:start="113:64" pos:end="113:71">linesize</name><index pos:start="113:72" pos:end="113:74">[<expr pos:start="113:73" pos:end="113:73"><literal type="number" pos:start="113:73" pos:end="113:73">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:51"><expr pos:start="115:9" pos:end="115:50"><name pos:start="115:9" pos:end="115:17">size_left</name> <operator pos:start="115:19" pos:end="115:19">=</operator> <call pos:start="115:21" pos:end="115:50"><name pos:start="115:21" pos:end="115:46">bytestream2_get_bytes_left</name><argument_list pos:start="115:47" pos:end="115:50">(<argument pos:start="115:48" pos:end="115:49"><expr pos:start="115:48" pos:end="115:49"><name pos:start="115:48" pos:end="115:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="117:9" pos:end="317:9">switch <condition pos:start="117:16" pos:end="117:20">(<expr pos:start="117:17" pos:end="117:19"><name pos:start="117:17" pos:end="117:19">enc</name></expr>)</condition> <block pos:start="117:22" pos:end="317:9">{<block_content pos:start="119:9" pos:end="315:23">

        <case pos:start="119:9" pos:end="119:24">case <expr pos:start="119:14" pos:end="119:23"><name pos:start="119:14" pos:end="119:23">MAGIC_WMVd</name></expr>:</case> <comment type="line" pos:start="119:26" pos:end="119:34">// cursor</comment>

            <if_stmt pos:start="121:13" pos:end="131:13"><if pos:start="121:13" pos:end="131:13">if <condition pos:start="121:16" pos:end="121:52">(<expr pos:start="121:17" pos:end="121:51"><name pos:start="121:17" pos:end="121:25">size_left</name> <operator pos:start="121:27" pos:end="121:27">&lt;</operator> <literal type="number" pos:start="121:29" pos:end="121:31">2</literal> <operator pos:start="121:31" pos:end="121:31">+</operator> <name pos:start="121:33" pos:end="121:33">w</name> <operator pos:start="121:35" pos:end="121:35">*</operator> <name pos:start="121:37" pos:end="121:37">h</name> <operator pos:start="121:39" pos:end="121:39">*</operator> <name pos:start="121:41" pos:end="121:47"><name pos:start="121:41" pos:end="121:41">c</name><operator pos:start="121:42" pos:end="121:43">-&gt;</operator><name pos:start="121:44" pos:end="121:47">bpp2</name></name> <operator pos:start="121:49" pos:end="121:49">*</operator> <literal type="number" pos:start="121:51" pos:end="121:51">2</literal></expr>)</condition> <block pos:start="121:54" pos:end="131:13">{<block_content pos:start="123:17" pos:end="129:43">

                <expr_stmt pos:start="123:17" pos:end="127:59"><expr pos:start="123:17" pos:end="127:58"><call pos:start="123:17" pos:end="127:58"><name pos:start="123:17" pos:end="123:22">av_log</name><argument_list pos:start="123:23" pos:end="127:58">(<argument pos:start="123:24" pos:end="123:28"><expr pos:start="123:24" pos:end="123:28"><name pos:start="123:24" pos:end="123:28">avctx</name></expr></argument>, <argument pos:start="123:31" pos:end="123:42"><expr pos:start="123:31" pos:end="123:42"><name pos:start="123:31" pos:end="123:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="125:24" pos:end="125:66"><expr pos:start="125:24" pos:end="125:66"><literal type="string" pos:start="125:24" pos:end="125:66">"Premature end of data! (need %i got %i)\n"</literal></expr></argument>,

                       <argument pos:start="127:24" pos:end="127:46"><expr pos:start="127:24" pos:end="127:46"><literal type="number" pos:start="127:24" pos:end="127:26">2</literal> <operator pos:start="127:26" pos:end="127:26">+</operator> <name pos:start="127:28" pos:end="127:28">w</name> <operator pos:start="127:30" pos:end="127:30">*</operator> <name pos:start="127:32" pos:end="127:32">h</name> <operator pos:start="127:34" pos:end="127:34">*</operator> <name pos:start="127:36" pos:end="127:42"><name pos:start="127:36" pos:end="127:36">c</name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:42">bpp2</name></name> <operator pos:start="127:44" pos:end="127:44">*</operator> <literal type="number" pos:start="127:46" pos:end="127:46">2</literal></expr></argument>, <argument pos:start="127:49" pos:end="127:57"><expr pos:start="127:49" pos:end="127:57"><name pos:start="127:49" pos:end="127:57">size_left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="129:17" pos:end="129:43">return <expr pos:start="129:24" pos:end="129:42"><name pos:start="129:24" pos:end="129:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:36"><expr pos:start="133:13" pos:end="133:35"><call pos:start="133:13" pos:end="133:35"><name pos:start="133:13" pos:end="133:28">bytestream2_skip</name><argument_list pos:start="133:29" pos:end="133:35">(<argument pos:start="133:30" pos:end="133:31"><expr pos:start="133:30" pos:end="133:31"><name pos:start="133:30" pos:end="133:31">gb</name></expr></argument>, <argument pos:start="133:34" pos:end="133:34"><expr pos:start="133:34" pos:end="133:34"><literal type="number" pos:start="133:34" pos:end="133:34">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:26"><expr pos:start="135:13" pos:end="135:25"><name pos:start="135:13" pos:end="135:20"><name pos:start="135:13" pos:end="135:13">c</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:20">cur_w</name></name>  <operator pos:start="135:23" pos:end="135:23">=</operator> <name pos:start="135:25" pos:end="135:25">w</name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:26"><expr pos:start="137:13" pos:end="137:25"><name pos:start="137:13" pos:end="137:20"><name pos:start="137:13" pos:end="137:13">c</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:20">cur_h</name></name>  <operator pos:start="137:23" pos:end="137:23">=</operator> <name pos:start="137:25" pos:end="137:25">h</name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:27"><expr pos:start="139:13" pos:end="139:26"><name pos:start="139:13" pos:end="139:21"><name pos:start="139:13" pos:end="139:13">c</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:21">cur_hx</name></name> <operator pos:start="139:23" pos:end="139:23">=</operator> <name pos:start="139:25" pos:end="139:26">dx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:27"><expr pos:start="141:13" pos:end="141:26"><name pos:start="141:13" pos:end="141:21"><name pos:start="141:13" pos:end="141:13">c</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:21">cur_hy</name></name> <operator pos:start="141:23" pos:end="141:23">=</operator> <name pos:start="141:25" pos:end="141:26">dy</name></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="155:13"><if pos:start="143:13" pos:end="155:13">if <condition pos:start="143:16" pos:end="143:65">(<expr pos:start="143:17" pos:end="143:64"><operator pos:start="143:17" pos:end="143:17">(</operator><name pos:start="143:18" pos:end="143:26"><name pos:start="143:18" pos:end="143:18">c</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:26">cur_hx</name></name> <operator pos:start="143:28" pos:end="143:28">&gt;</operator> <name pos:start="143:30" pos:end="143:37"><name pos:start="143:30" pos:end="143:30">c</name><operator pos:start="143:31" pos:end="143:32">-&gt;</operator><name pos:start="143:33" pos:end="143:37">cur_w</name></name><operator pos:start="143:38" pos:end="143:38">)</operator> <operator pos:start="143:40" pos:end="143:41">||</operator> <operator pos:start="143:43" pos:end="143:43">(</operator><name pos:start="143:44" pos:end="143:52"><name pos:start="143:44" pos:end="143:44">c</name><operator pos:start="143:45" pos:end="143:46">-&gt;</operator><name pos:start="143:47" pos:end="143:52">cur_hy</name></name> <operator pos:start="143:54" pos:end="143:54">&gt;</operator> <name pos:start="143:56" pos:end="143:63"><name pos:start="143:56" pos:end="143:56">c</name><operator pos:start="143:57" pos:end="143:58">-&gt;</operator><name pos:start="143:59" pos:end="143:63">cur_h</name></name><operator pos:start="143:64" pos:end="143:64">)</operator></expr>)</condition> <block pos:start="143:67" pos:end="155:13">{<block_content pos:start="145:17" pos:end="153:42">

                <expr_stmt pos:start="145:17" pos:end="151:65"><expr pos:start="145:17" pos:end="151:64"><call pos:start="145:17" pos:end="151:64"><name pos:start="145:17" pos:end="145:22">av_log</name><argument_list pos:start="145:23" pos:end="151:64">(<argument pos:start="145:24" pos:end="145:28"><expr pos:start="145:24" pos:end="145:28"><name pos:start="145:24" pos:end="145:28">avctx</name></expr></argument>, <argument pos:start="145:31" pos:end="145:42"><expr pos:start="145:31" pos:end="145:42"><name pos:start="145:31" pos:end="145:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="147:24" pos:end="149:53"><expr pos:start="147:24" pos:end="149:53"><literal type="string" pos:start="147:24" pos:end="147:58">"Cursor hot spot is not in image: "</literal>

                       <literal type="string" pos:start="149:24" pos:end="149:53">"%ix%i of %ix%i cursor size\n"</literal></expr></argument>,

                       <argument pos:start="151:24" pos:end="151:32"><expr pos:start="151:24" pos:end="151:32"><name pos:start="151:24" pos:end="151:32"><name pos:start="151:24" pos:end="151:24">c</name><operator pos:start="151:25" pos:end="151:26">-&gt;</operator><name pos:start="151:27" pos:end="151:32">cur_hx</name></name></expr></argument>, <argument pos:start="151:35" pos:end="151:43"><expr pos:start="151:35" pos:end="151:43"><name pos:start="151:35" pos:end="151:43"><name pos:start="151:35" pos:end="151:35">c</name><operator pos:start="151:36" pos:end="151:37">-&gt;</operator><name pos:start="151:38" pos:end="151:43">cur_hy</name></name></expr></argument>, <argument pos:start="151:46" pos:end="151:53"><expr pos:start="151:46" pos:end="151:53"><name pos:start="151:46" pos:end="151:53"><name pos:start="151:46" pos:end="151:46">c</name><operator pos:start="151:47" pos:end="151:48">-&gt;</operator><name pos:start="151:49" pos:end="151:53">cur_w</name></name></expr></argument>, <argument pos:start="151:56" pos:end="151:63"><expr pos:start="151:56" pos:end="151:63"><name pos:start="151:56" pos:end="151:63"><name pos:start="151:56" pos:end="151:56">c</name><operator pos:start="151:57" pos:end="151:58">-&gt;</operator><name pos:start="151:59" pos:end="151:63">cur_h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:42"><expr pos:start="153:17" pos:end="153:41"><name pos:start="153:17" pos:end="153:25"><name pos:start="153:17" pos:end="153:17">c</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:25">cur_hx</name></name> <operator pos:start="153:27" pos:end="153:27">=</operator> <name pos:start="153:29" pos:end="153:37"><name pos:start="153:29" pos:end="153:29">c</name><operator pos:start="153:30" pos:end="153:31">-&gt;</operator><name pos:start="153:32" pos:end="153:37">cur_hy</name></name> <operator pos:start="153:39" pos:end="153:39">=</operator> <literal type="number" pos:start="153:41" pos:end="153:41">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="157:13" pos:end="179:13"><if pos:start="157:13" pos:end="163:13">if <condition pos:start="157:16" pos:end="157:57">(<expr pos:start="157:17" pos:end="157:56"><name pos:start="157:17" pos:end="157:24"><name pos:start="157:17" pos:end="157:17">c</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:24">cur_w</name></name> <operator pos:start="157:26" pos:end="157:26">*</operator> <name pos:start="157:28" pos:end="157:35"><name pos:start="157:28" pos:end="157:28">c</name><operator pos:start="157:29" pos:end="157:30">-&gt;</operator><name pos:start="157:31" pos:end="157:35">cur_h</name></name> <operator pos:start="157:37" pos:end="157:38">&gt;=</operator> <name pos:start="157:40" pos:end="157:46">INT_MAX</name> <operator pos:start="157:48" pos:end="157:48">/</operator> <name pos:start="157:50" pos:end="157:56"><name pos:start="157:50" pos:end="157:50">c</name><operator pos:start="157:51" pos:end="157:52">-&gt;</operator><name pos:start="157:53" pos:end="157:56">bpp2</name></name></expr>)</condition> <block pos:start="157:59" pos:end="163:13">{<block_content pos:start="159:17" pos:end="161:39">

                <expr_stmt pos:start="159:17" pos:end="159:33"><expr pos:start="159:17" pos:end="159:32"><call pos:start="159:17" pos:end="159:32"><name pos:start="159:17" pos:end="159:29">reset_buffers</name><argument_list pos:start="159:30" pos:end="159:32">(<argument pos:start="159:31" pos:end="159:31"><expr pos:start="159:31" pos:end="159:31"><name pos:start="159:31" pos:end="159:31">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="161:17" pos:end="161:39">return <expr pos:start="161:24" pos:end="161:38"><call pos:start="161:24" pos:end="161:38"><name pos:start="161:24" pos:end="161:30">AVERROR</name><argument_list pos:start="161:31" pos:end="161:38">(<argument pos:start="161:32" pos:end="161:37"><expr pos:start="161:32" pos:end="161:37"><name pos:start="161:32" pos:end="161:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if> <else pos:start="163:15" pos:end="179:13">else <block pos:start="163:20" pos:end="179:13">{<block_content pos:start="165:17" pos:end="177:17">

                <decl_stmt pos:start="165:17" pos:end="165:64"><decl pos:start="165:17" pos:end="165:63"><type pos:start="165:17" pos:end="165:19"><name pos:start="165:17" pos:end="165:19">int</name></type> <name pos:start="165:21" pos:end="165:31">screen_size</name> <init pos:start="165:33" pos:end="165:63">= <expr pos:start="165:35" pos:end="165:63"><name pos:start="165:35" pos:end="165:42"><name pos:start="165:35" pos:end="165:35">c</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:42">cur_w</name></name> <operator pos:start="165:44" pos:end="165:44">*</operator> <name pos:start="165:46" pos:end="165:53"><name pos:start="165:46" pos:end="165:46">c</name><operator pos:start="165:47" pos:end="165:48">-&gt;</operator><name pos:start="165:49" pos:end="165:53">cur_h</name></name> <operator pos:start="165:55" pos:end="165:55">*</operator> <name pos:start="165:57" pos:end="165:63"><name pos:start="165:57" pos:end="165:57">c</name><operator pos:start="165:58" pos:end="165:59">-&gt;</operator><name pos:start="165:60" pos:end="165:63">bpp2</name></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="167:17" pos:end="177:17"><if pos:start="167:17" pos:end="177:17">if <condition pos:start="167:20" pos:end="171:72">(<expr pos:start="167:21" pos:end="171:71"><operator pos:start="167:21" pos:end="167:21">(</operator><name pos:start="167:22" pos:end="167:24">ret</name> <operator pos:start="167:26" pos:end="167:26">=</operator> <call pos:start="167:28" pos:end="167:64"><name pos:start="167:28" pos:end="167:38">av_reallocp</name><argument_list pos:start="167:39" pos:end="167:64">(<argument pos:start="167:40" pos:end="167:50"><expr pos:start="167:40" pos:end="167:50"><operator pos:start="167:40" pos:end="167:40">&amp;</operator><name pos:start="167:41" pos:end="167:50"><name pos:start="167:41" pos:end="167:41">c</name><operator pos:start="167:42" pos:end="167:43">-&gt;</operator><name pos:start="167:44" pos:end="167:50">curbits</name></name></expr></argument>, <argument pos:start="167:53" pos:end="167:63"><expr pos:start="167:53" pos:end="167:63"><name pos:start="167:53" pos:end="167:63">screen_size</name></expr></argument>)</argument_list></call><operator pos:start="167:65" pos:end="167:65">)</operator> <operator pos:start="167:67" pos:end="167:67">&lt;</operator> <literal type="number" pos:start="167:69" pos:end="167:69">0</literal> <operator pos:start="167:71" pos:end="167:72">||</operator>

                    <operator pos:start="169:21" pos:end="169:21">(</operator><name pos:start="169:22" pos:end="169:24">ret</name> <operator pos:start="169:26" pos:end="169:26">=</operator> <call pos:start="169:28" pos:end="169:64"><name pos:start="169:28" pos:end="169:38">av_reallocp</name><argument_list pos:start="169:39" pos:end="169:64">(<argument pos:start="169:40" pos:end="169:50"><expr pos:start="169:40" pos:end="169:50"><operator pos:start="169:40" pos:end="169:40">&amp;</operator><name pos:start="169:41" pos:end="169:50"><name pos:start="169:41" pos:end="169:41">c</name><operator pos:start="169:42" pos:end="169:43">-&gt;</operator><name pos:start="169:44" pos:end="169:50">curmask</name></name></expr></argument>, <argument pos:start="169:53" pos:end="169:63"><expr pos:start="169:53" pos:end="169:63"><name pos:start="169:53" pos:end="169:63">screen_size</name></expr></argument>)</argument_list></call><operator pos:start="169:65" pos:end="169:65">)</operator> <operator pos:start="169:67" pos:end="169:67">&lt;</operator> <literal type="number" pos:start="169:69" pos:end="169:69">0</literal> <operator pos:start="169:71" pos:end="169:72">||</operator>

                    <operator pos:start="171:21" pos:end="171:21">(</operator><name pos:start="171:22" pos:end="171:24">ret</name> <operator pos:start="171:26" pos:end="171:26">=</operator> <call pos:start="171:28" pos:end="171:66"><name pos:start="171:28" pos:end="171:38">av_reallocp</name><argument_list pos:start="171:39" pos:end="171:66">(<argument pos:start="171:40" pos:end="171:52"><expr pos:start="171:40" pos:end="171:52"><operator pos:start="171:40" pos:end="171:40">&amp;</operator><name pos:start="171:41" pos:end="171:52"><name pos:start="171:41" pos:end="171:41">c</name><operator pos:start="171:42" pos:end="171:43">-&gt;</operator><name pos:start="171:44" pos:end="171:52">screendta</name></name></expr></argument>, <argument pos:start="171:55" pos:end="171:65"><expr pos:start="171:55" pos:end="171:65"><name pos:start="171:55" pos:end="171:65">screen_size</name></expr></argument>)</argument_list></call><operator pos:start="171:67" pos:end="171:67">)</operator> <operator pos:start="171:69" pos:end="171:69">&lt;</operator> <literal type="number" pos:start="171:71" pos:end="171:71">0</literal></expr>)</condition> <block pos:start="171:74" pos:end="177:17">{<block_content pos:start="173:21" pos:end="175:31">

                    <expr_stmt pos:start="173:21" pos:end="173:37"><expr pos:start="173:21" pos:end="173:36"><call pos:start="173:21" pos:end="173:36"><name pos:start="173:21" pos:end="173:33">reset_buffers</name><argument_list pos:start="173:34" pos:end="173:36">(<argument pos:start="173:35" pos:end="173:35"><expr pos:start="173:35" pos:end="173:35"><name pos:start="173:35" pos:end="173:35">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="175:21" pos:end="175:31">return <expr pos:start="175:28" pos:end="175:30"><name pos:start="175:28" pos:end="175:30">ret</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:27"><expr pos:start="181:13" pos:end="181:26"><call pos:start="181:13" pos:end="181:26"><name pos:start="181:13" pos:end="181:23">load_cursor</name><argument_list pos:start="181:24" pos:end="181:26">(<argument pos:start="181:25" pos:end="181:25"><expr pos:start="181:25" pos:end="181:25"><name pos:start="181:25" pos:end="181:25">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>

        <case pos:start="185:9" pos:end="185:24">case <expr pos:start="185:14" pos:end="185:23"><name pos:start="185:14" pos:end="185:23">MAGIC_WMVe</name></expr>:</case> <comment type="line" pos:start="185:26" pos:end="185:35">// unknown</comment>

            <expr_stmt pos:start="187:13" pos:end="187:36"><expr pos:start="187:13" pos:end="187:35"><call pos:start="187:13" pos:end="187:35"><name pos:start="187:13" pos:end="187:28">bytestream2_skip</name><argument_list pos:start="187:29" pos:end="187:35">(<argument pos:start="187:30" pos:end="187:31"><expr pos:start="187:30" pos:end="187:31"><name pos:start="187:30" pos:end="187:31">gb</name></expr></argument>, <argument pos:start="187:34" pos:end="187:34"><expr pos:start="187:34" pos:end="187:34"><literal type="number" pos:start="187:34" pos:end="187:34">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="189:13" pos:end="189:18">break;</break>

        <case pos:start="191:9" pos:end="191:24">case <expr pos:start="191:14" pos:end="191:23"><name pos:start="191:14" pos:end="191:23">MAGIC_WMVf</name></expr>:</case> <comment type="line" pos:start="191:26" pos:end="191:50">// update cursor position</comment>

            <expr_stmt pos:start="193:13" pos:end="193:38"><expr pos:start="193:13" pos:end="193:37"><name pos:start="193:13" pos:end="193:20"><name pos:start="193:13" pos:end="193:13">c</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:20">cur_x</name></name> <operator pos:start="193:22" pos:end="193:22">=</operator> <name pos:start="193:24" pos:end="193:25">dx</name> <operator pos:start="193:27" pos:end="193:27">-</operator> <name pos:start="193:29" pos:end="193:37"><name pos:start="193:29" pos:end="193:29">c</name><operator pos:start="193:30" pos:end="193:31">-&gt;</operator><name pos:start="193:32" pos:end="193:37">cur_hx</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:38"><expr pos:start="195:13" pos:end="195:37"><name pos:start="195:13" pos:end="195:20"><name pos:start="195:13" pos:end="195:13">c</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:20">cur_y</name></name> <operator pos:start="195:22" pos:end="195:22">=</operator> <name pos:start="195:24" pos:end="195:25">dy</name> <operator pos:start="195:27" pos:end="195:27">-</operator> <name pos:start="195:29" pos:end="195:37"><name pos:start="195:29" pos:end="195:29">c</name><operator pos:start="195:30" pos:end="195:31">-&gt;</operator><name pos:start="195:32" pos:end="195:37">cur_hy</name></name></expr>;</expr_stmt>

            <break pos:start="197:13" pos:end="197:18">break;</break>

        <case pos:start="199:9" pos:end="199:24">case <expr pos:start="199:14" pos:end="199:23"><name pos:start="199:14" pos:end="199:23">MAGIC_WMVg</name></expr>:</case> <comment type="line" pos:start="199:26" pos:end="199:35">// unknown</comment>

            <expr_stmt pos:start="201:13" pos:end="201:37"><expr pos:start="201:13" pos:end="201:36"><call pos:start="201:13" pos:end="201:36"><name pos:start="201:13" pos:end="201:28">bytestream2_skip</name><argument_list pos:start="201:29" pos:end="201:36">(<argument pos:start="201:30" pos:end="201:31"><expr pos:start="201:30" pos:end="201:31"><name pos:start="201:30" pos:end="201:31">gb</name></expr></argument>, <argument pos:start="201:34" pos:end="201:35"><expr pos:start="201:34" pos:end="201:35"><literal type="number" pos:start="201:34" pos:end="201:35">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="203:13" pos:end="203:18">break;</break>

        <case pos:start="205:9" pos:end="205:24">case <expr pos:start="205:14" pos:end="205:23"><name pos:start="205:14" pos:end="205:23">MAGIC_WMVh</name></expr>:</case> <comment type="line" pos:start="205:26" pos:end="205:35">// unknown</comment>

            <expr_stmt pos:start="207:13" pos:end="207:36"><expr pos:start="207:13" pos:end="207:35"><call pos:start="207:13" pos:end="207:35"><name pos:start="207:13" pos:end="207:28">bytestream2_skip</name><argument_list pos:start="207:29" pos:end="207:35">(<argument pos:start="207:30" pos:end="207:31"><expr pos:start="207:30" pos:end="207:31"><name pos:start="207:30" pos:end="207:31">gb</name></expr></argument>, <argument pos:start="207:34" pos:end="207:34"><expr pos:start="207:34" pos:end="207:34"><literal type="number" pos:start="207:34" pos:end="207:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="209:13" pos:end="209:18">break;</break>

        <case pos:start="211:9" pos:end="211:24">case <expr pos:start="211:14" pos:end="211:23"><name pos:start="211:14" pos:end="211:23">MAGIC_WMVi</name></expr>:</case> <comment type="line" pos:start="211:26" pos:end="211:55">// ServerInitialization struct</comment>

            <expr_stmt pos:start="213:13" pos:end="213:34"><expr pos:start="213:13" pos:end="213:33"><name pos:start="213:13" pos:end="213:29"><name pos:start="213:13" pos:end="213:13">c</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:18">pic</name><operator pos:start="213:19" pos:end="213:20">-&gt;</operator><name pos:start="213:21" pos:end="213:29">key_frame</name></name> <operator pos:start="213:31" pos:end="213:31">=</operator> <literal type="number" pos:start="213:33" pos:end="213:33">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:50"><expr pos:start="215:13" pos:end="215:49"><name pos:start="215:13" pos:end="215:29"><name pos:start="215:13" pos:end="215:13">c</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:18">pic</name><operator pos:start="215:19" pos:end="215:20">-&gt;</operator><name pos:start="215:21" pos:end="215:29">pict_type</name></name> <operator pos:start="215:31" pos:end="215:31">=</operator> <name pos:start="215:33" pos:end="215:49">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:45"><expr pos:start="217:13" pos:end="217:44"><name pos:start="217:13" pos:end="217:17">depth</name> <operator pos:start="217:19" pos:end="217:19">=</operator> <call pos:start="217:21" pos:end="217:44"><name pos:start="217:21" pos:end="217:40">bytestream2_get_byte</name><argument_list pos:start="217:41" pos:end="217:44">(<argument pos:start="217:42" pos:end="217:43"><expr pos:start="217:42" pos:end="217:43"><name pos:start="217:42" pos:end="217:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="219:13" pos:end="229:13"><if pos:start="219:13" pos:end="229:13">if <condition pos:start="219:16" pos:end="219:32">(<expr pos:start="219:17" pos:end="219:31"><name pos:start="219:17" pos:end="219:21">depth</name> <operator pos:start="219:23" pos:end="219:24">!=</operator> <name pos:start="219:26" pos:end="219:31"><name pos:start="219:26" pos:end="219:26">c</name><operator pos:start="219:27" pos:end="219:28">-&gt;</operator><name pos:start="219:29" pos:end="219:31">bpp</name></name></expr>)</condition> <block pos:start="219:34" pos:end="229:13">{<block_content pos:start="221:17" pos:end="227:38">

                <expr_stmt pos:start="221:17" pos:end="227:38"><expr pos:start="221:17" pos:end="227:37"><call pos:start="221:17" pos:end="227:37"><name pos:start="221:17" pos:end="221:22">av_log</name><argument_list pos:start="221:23" pos:end="227:37">(<argument pos:start="221:24" pos:end="221:28"><expr pos:start="221:24" pos:end="221:28"><name pos:start="221:24" pos:end="221:28">avctx</name></expr></argument>, <argument pos:start="221:31" pos:end="221:41"><expr pos:start="221:31" pos:end="221:41"><name pos:start="221:31" pos:end="221:41">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="223:24" pos:end="225:45"><expr pos:start="223:24" pos:end="225:45"><literal type="string" pos:start="223:24" pos:end="223:59">"Depth mismatch. Container %i bpp, "</literal>

                       <literal type="string" pos:start="225:24" pos:end="225:45">"Frame data: %i bpp\n"</literal></expr></argument>,

                       <argument pos:start="227:24" pos:end="227:29"><expr pos:start="227:24" pos:end="227:29"><name pos:start="227:24" pos:end="227:29"><name pos:start="227:24" pos:end="227:24">c</name><operator pos:start="227:25" pos:end="227:26">-&gt;</operator><name pos:start="227:27" pos:end="227:29">bpp</name></name></expr></argument>, <argument pos:start="227:32" pos:end="227:36"><expr pos:start="227:32" pos:end="227:36"><name pos:start="227:32" pos:end="227:36">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:36"><expr pos:start="231:13" pos:end="231:35"><call pos:start="231:13" pos:end="231:35"><name pos:start="231:13" pos:end="231:28">bytestream2_skip</name><argument_list pos:start="231:29" pos:end="231:35">(<argument pos:start="231:30" pos:end="231:31"><expr pos:start="231:30" pos:end="231:31"><name pos:start="231:30" pos:end="231:31">gb</name></expr></argument>, <argument pos:start="231:34" pos:end="231:34"><expr pos:start="231:34" pos:end="231:34"><literal type="number" pos:start="231:34" pos:end="231:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:52"><expr pos:start="233:13" pos:end="233:51"><name pos:start="233:13" pos:end="233:24"><name pos:start="233:13" pos:end="233:13">c</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:24">bigendian</name></name> <operator pos:start="233:26" pos:end="233:26">=</operator> <call pos:start="233:28" pos:end="233:51"><name pos:start="233:28" pos:end="233:47">bytestream2_get_byte</name><argument_list pos:start="233:48" pos:end="233:51">(<argument pos:start="233:49" pos:end="233:50"><expr pos:start="233:49" pos:end="233:50"><name pos:start="233:49" pos:end="233:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="235:13" pos:end="243:13"><if pos:start="235:13" pos:end="243:13">if <condition pos:start="235:16" pos:end="235:36">(<expr pos:start="235:17" pos:end="235:35"><name pos:start="235:17" pos:end="235:28"><name pos:start="235:17" pos:end="235:17">c</name><operator pos:start="235:18" pos:end="235:19">-&gt;</operator><name pos:start="235:20" pos:end="235:28">bigendian</name></name> <operator pos:start="235:30" pos:end="235:30">&amp;</operator> <operator pos:start="235:32" pos:end="235:32">(</operator><operator pos:start="235:33" pos:end="235:33">~</operator><literal type="number" pos:start="235:34" pos:end="235:34">1</literal><operator pos:start="235:35" pos:end="235:35">)</operator></expr>)</condition> <block pos:start="235:38" pos:end="243:13">{<block_content pos:start="237:17" pos:end="241:43">

                <expr_stmt pos:start="237:17" pos:end="239:78"><expr pos:start="237:17" pos:end="239:77"><call pos:start="237:17" pos:end="239:77"><name pos:start="237:17" pos:end="237:22">av_log</name><argument_list pos:start="237:23" pos:end="239:77">(<argument pos:start="237:24" pos:end="237:28"><expr pos:start="237:24" pos:end="237:28"><name pos:start="237:24" pos:end="237:28">avctx</name></expr></argument>, <argument pos:start="237:31" pos:end="237:41"><expr pos:start="237:31" pos:end="237:41"><name pos:start="237:31" pos:end="237:41">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="239:24" pos:end="239:62"><expr pos:start="239:24" pos:end="239:62"><literal type="string" pos:start="239:24" pos:end="239:62">"Invalid header: bigendian flag = %i\n"</literal></expr></argument>, <argument pos:start="239:65" pos:end="239:76"><expr pos:start="239:65" pos:end="239:76"><name pos:start="239:65" pos:end="239:76"><name pos:start="239:65" pos:end="239:65">c</name><operator pos:start="239:66" pos:end="239:67">-&gt;</operator><name pos:start="239:68" pos:end="239:76">bigendian</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="241:17" pos:end="241:43">return <expr pos:start="241:24" pos:end="241:42"><name pos:start="241:24" pos:end="241:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="245:13" pos:end="245:48">//skip the rest of pixel format data</comment>

            <expr_stmt pos:start="247:13" pos:end="247:37"><expr pos:start="247:13" pos:end="247:36"><call pos:start="247:13" pos:end="247:36"><name pos:start="247:13" pos:end="247:28">bytestream2_skip</name><argument_list pos:start="247:29" pos:end="247:36">(<argument pos:start="247:30" pos:end="247:31"><expr pos:start="247:30" pos:end="247:31"><name pos:start="247:30" pos:end="247:31">gb</name></expr></argument>, <argument pos:start="247:34" pos:end="247:35"><expr pos:start="247:34" pos:end="247:35"><literal type="number" pos:start="247:34" pos:end="247:35">13</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="249:13" pos:end="249:18">break;</break>

        <case pos:start="251:9" pos:end="251:24">case <expr pos:start="251:14" pos:end="251:23"><name pos:start="251:14" pos:end="251:23">MAGIC_WMVj</name></expr>:</case> <comment type="line" pos:start="251:26" pos:end="251:35">// unknown</comment>

            <expr_stmt pos:start="253:13" pos:end="253:36"><expr pos:start="253:13" pos:end="253:35"><call pos:start="253:13" pos:end="253:35"><name pos:start="253:13" pos:end="253:28">bytestream2_skip</name><argument_list pos:start="253:29" pos:end="253:35">(<argument pos:start="253:30" pos:end="253:31"><expr pos:start="253:30" pos:end="253:31"><name pos:start="253:30" pos:end="253:31">gb</name></expr></argument>, <argument pos:start="253:34" pos:end="253:34"><expr pos:start="253:34" pos:end="253:34"><literal type="number" pos:start="253:34" pos:end="253:34">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="255:13" pos:end="255:18">break;</break>

        <case pos:start="257:9" pos:end="257:24">case <expr pos:start="257:14" pos:end="257:23"><literal type="number" pos:start="257:14" pos:end="257:23">0x00000000</literal></expr>:</case> <comment type="line" pos:start="257:26" pos:end="257:46">// raw rectangle data</comment>

            <if_stmt pos:start="259:13" pos:end="269:13"><if pos:start="259:13" pos:end="269:13">if <condition pos:start="259:16" pos:end="259:60">(<expr pos:start="259:17" pos:end="259:59"><operator pos:start="259:17" pos:end="259:17">(</operator><name pos:start="259:18" pos:end="259:19">dx</name> <operator pos:start="259:21" pos:end="259:21">+</operator> <name pos:start="259:23" pos:end="259:23">w</name> <operator pos:start="259:25" pos:end="259:25">&gt;</operator> <name pos:start="259:27" pos:end="259:34"><name pos:start="259:27" pos:end="259:27">c</name><operator pos:start="259:28" pos:end="259:29">-&gt;</operator><name pos:start="259:30" pos:end="259:34">width</name></name><operator pos:start="259:35" pos:end="259:35">)</operator> <operator pos:start="259:37" pos:end="259:38">||</operator> <operator pos:start="259:40" pos:end="259:40">(</operator><name pos:start="259:41" pos:end="259:42">dy</name> <operator pos:start="259:44" pos:end="259:44">+</operator> <name pos:start="259:46" pos:end="259:46">h</name> <operator pos:start="259:48" pos:end="259:48">&gt;</operator> <name pos:start="259:50" pos:end="259:58"><name pos:start="259:50" pos:end="259:50">c</name><operator pos:start="259:51" pos:end="259:52">-&gt;</operator><name pos:start="259:53" pos:end="259:58">height</name></name><operator pos:start="259:59" pos:end="259:59">)</operator></expr>)</condition> <block pos:start="259:62" pos:end="269:13">{<block_content pos:start="261:17" pos:end="267:43">

                <expr_stmt pos:start="261:17" pos:end="265:58"><expr pos:start="261:17" pos:end="265:57"><call pos:start="261:17" pos:end="265:57"><name pos:start="261:17" pos:end="261:22">av_log</name><argument_list pos:start="261:23" pos:end="265:57">(<argument pos:start="261:24" pos:end="261:28"><expr pos:start="261:24" pos:end="261:28"><name pos:start="261:24" pos:end="261:28">avctx</name></expr></argument>, <argument pos:start="261:31" pos:end="261:42"><expr pos:start="261:31" pos:end="261:42"><name pos:start="261:31" pos:end="261:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="263:24" pos:end="263:69"><expr pos:start="263:24" pos:end="263:69"><literal type="string" pos:start="263:24" pos:end="263:69">"Incorrect frame size: %ix%i+%ix%i of %ix%i\n"</literal></expr></argument>,

                       <argument pos:start="265:24" pos:end="265:24"><expr pos:start="265:24" pos:end="265:24"><name pos:start="265:24" pos:end="265:24">w</name></expr></argument>, <argument pos:start="265:27" pos:end="265:27"><expr pos:start="265:27" pos:end="265:27"><name pos:start="265:27" pos:end="265:27">h</name></expr></argument>, <argument pos:start="265:30" pos:end="265:31"><expr pos:start="265:30" pos:end="265:31"><name pos:start="265:30" pos:end="265:31">dx</name></expr></argument>, <argument pos:start="265:34" pos:end="265:35"><expr pos:start="265:34" pos:end="265:35"><name pos:start="265:34" pos:end="265:35">dy</name></expr></argument>, <argument pos:start="265:38" pos:end="265:45"><expr pos:start="265:38" pos:end="265:45"><name pos:start="265:38" pos:end="265:45"><name pos:start="265:38" pos:end="265:38">c</name><operator pos:start="265:39" pos:end="265:40">-&gt;</operator><name pos:start="265:41" pos:end="265:45">width</name></name></expr></argument>, <argument pos:start="265:48" pos:end="265:56"><expr pos:start="265:48" pos:end="265:56"><name pos:start="265:48" pos:end="265:56"><name pos:start="265:48" pos:end="265:48">c</name><operator pos:start="265:49" pos:end="265:50">-&gt;</operator><name pos:start="265:51" pos:end="265:56">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="267:17" pos:end="267:43">return <expr pos:start="267:24" pos:end="267:42"><name pos:start="267:24" pos:end="267:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="271:13" pos:end="281:13"><if pos:start="271:13" pos:end="281:13">if <condition pos:start="271:16" pos:end="271:44">(<expr pos:start="271:17" pos:end="271:43"><name pos:start="271:17" pos:end="271:25">size_left</name> <operator pos:start="271:27" pos:end="271:27">&lt;</operator> <name pos:start="271:29" pos:end="271:29">w</name> <operator pos:start="271:31" pos:end="271:31">*</operator> <name pos:start="271:33" pos:end="271:33">h</name> <operator pos:start="271:35" pos:end="271:35">*</operator> <name pos:start="271:37" pos:end="271:43"><name pos:start="271:37" pos:end="271:37">c</name><operator pos:start="271:38" pos:end="271:39">-&gt;</operator><name pos:start="271:40" pos:end="271:43">bpp2</name></name></expr>)</condition> <block pos:start="271:46" pos:end="281:13">{<block_content pos:start="273:17" pos:end="279:43">

                <expr_stmt pos:start="273:17" pos:end="277:51"><expr pos:start="273:17" pos:end="277:50"><call pos:start="273:17" pos:end="277:50"><name pos:start="273:17" pos:end="273:22">av_log</name><argument_list pos:start="273:23" pos:end="277:50">(<argument pos:start="273:24" pos:end="273:28"><expr pos:start="273:24" pos:end="273:28"><name pos:start="273:24" pos:end="273:28">avctx</name></expr></argument>, <argument pos:start="273:31" pos:end="273:42"><expr pos:start="273:31" pos:end="273:42"><name pos:start="273:31" pos:end="273:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="275:24" pos:end="275:66"><expr pos:start="275:24" pos:end="275:66"><literal type="string" pos:start="275:24" pos:end="275:66">"Premature end of data! (need %i got %i)\n"</literal></expr></argument>,

                       <argument pos:start="277:24" pos:end="277:38"><expr pos:start="277:24" pos:end="277:38"><name pos:start="277:24" pos:end="277:24">w</name> <operator pos:start="277:26" pos:end="277:26">*</operator> <name pos:start="277:28" pos:end="277:28">h</name> <operator pos:start="277:30" pos:end="277:30">*</operator> <name pos:start="277:32" pos:end="277:38"><name pos:start="277:32" pos:end="277:32">c</name><operator pos:start="277:33" pos:end="277:34">-&gt;</operator><name pos:start="277:35" pos:end="277:38">bpp2</name></name></expr></argument>, <argument pos:start="277:41" pos:end="277:49"><expr pos:start="277:41" pos:end="277:49"><name pos:start="277:41" pos:end="277:49">size_left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="279:17" pos:end="279:43">return <expr pos:start="279:24" pos:end="279:42"><name pos:start="279:24" pos:end="279:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="283:13" pos:end="285:43"><expr pos:start="283:13" pos:end="285:42"><call pos:start="283:13" pos:end="285:42"><name pos:start="283:13" pos:end="283:21">paint_raw</name><argument_list pos:start="283:22" pos:end="285:42">(<argument pos:start="283:23" pos:end="283:28"><expr pos:start="283:23" pos:end="283:28"><name pos:start="283:23" pos:end="283:28">outptr</name></expr></argument>, <argument pos:start="283:31" pos:end="283:31"><expr pos:start="283:31" pos:end="283:31"><name pos:start="283:31" pos:end="283:31">w</name></expr></argument>, <argument pos:start="283:34" pos:end="283:34"><expr pos:start="283:34" pos:end="283:34"><name pos:start="283:34" pos:end="283:34">h</name></expr></argument>, <argument pos:start="283:37" pos:end="283:38"><expr pos:start="283:37" pos:end="283:38"><name pos:start="283:37" pos:end="283:38">gb</name></expr></argument>, <argument pos:start="283:41" pos:end="283:47"><expr pos:start="283:41" pos:end="283:47"><name pos:start="283:41" pos:end="283:47"><name pos:start="283:41" pos:end="283:41">c</name><operator pos:start="283:42" pos:end="283:43">-&gt;</operator><name pos:start="283:44" pos:end="283:47">bpp2</name></name></expr></argument>, <argument pos:start="283:50" pos:end="283:61"><expr pos:start="283:50" pos:end="283:61"><name pos:start="283:50" pos:end="283:61"><name pos:start="283:50" pos:end="283:50">c</name><operator pos:start="283:51" pos:end="283:52">-&gt;</operator><name pos:start="283:53" pos:end="283:61">bigendian</name></name></expr></argument>,

                      <argument pos:start="285:23" pos:end="285:41"><expr pos:start="285:23" pos:end="285:41"><name pos:start="285:23" pos:end="285:41"><name pos:start="285:23" pos:end="285:23">c</name><operator pos:start="285:24" pos:end="285:25">-&gt;</operator><name pos:start="285:26" pos:end="285:28">pic</name><operator pos:start="285:29" pos:end="285:30">-&gt;</operator><name pos:start="285:31" pos:end="285:38">linesize</name><index pos:start="285:39" pos:end="285:41">[<expr pos:start="285:40" pos:end="285:40"><literal type="number" pos:start="285:40" pos:end="285:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="287:13" pos:end="287:18">break;</break>

        <case pos:start="289:9" pos:end="289:24">case <expr pos:start="289:14" pos:end="289:23"><literal type="number" pos:start="289:14" pos:end="289:23">0x00000005</literal></expr>:</case> <comment type="line" pos:start="289:26" pos:end="289:53">// HexTile encoded rectangle</comment>

            <if_stmt pos:start="291:13" pos:end="301:13"><if pos:start="291:13" pos:end="301:13">if <condition pos:start="291:16" pos:end="291:60">(<expr pos:start="291:17" pos:end="291:59"><operator pos:start="291:17" pos:end="291:17">(</operator><name pos:start="291:18" pos:end="291:19">dx</name> <operator pos:start="291:21" pos:end="291:21">+</operator> <name pos:start="291:23" pos:end="291:23">w</name> <operator pos:start="291:25" pos:end="291:25">&gt;</operator> <name pos:start="291:27" pos:end="291:34"><name pos:start="291:27" pos:end="291:27">c</name><operator pos:start="291:28" pos:end="291:29">-&gt;</operator><name pos:start="291:30" pos:end="291:34">width</name></name><operator pos:start="291:35" pos:end="291:35">)</operator> <operator pos:start="291:37" pos:end="291:38">||</operator> <operator pos:start="291:40" pos:end="291:40">(</operator><name pos:start="291:41" pos:end="291:42">dy</name> <operator pos:start="291:44" pos:end="291:44">+</operator> <name pos:start="291:46" pos:end="291:46">h</name> <operator pos:start="291:48" pos:end="291:48">&gt;</operator> <name pos:start="291:50" pos:end="291:58"><name pos:start="291:50" pos:end="291:50">c</name><operator pos:start="291:51" pos:end="291:52">-&gt;</operator><name pos:start="291:53" pos:end="291:58">height</name></name><operator pos:start="291:59" pos:end="291:59">)</operator></expr>)</condition> <block pos:start="291:62" pos:end="301:13">{<block_content pos:start="293:17" pos:end="299:43">

                <expr_stmt pos:start="293:17" pos:end="297:58"><expr pos:start="293:17" pos:end="297:57"><call pos:start="293:17" pos:end="297:57"><name pos:start="293:17" pos:end="293:22">av_log</name><argument_list pos:start="293:23" pos:end="297:57">(<argument pos:start="293:24" pos:end="293:28"><expr pos:start="293:24" pos:end="293:28"><name pos:start="293:24" pos:end="293:28">avctx</name></expr></argument>, <argument pos:start="293:31" pos:end="293:42"><expr pos:start="293:31" pos:end="293:42"><name pos:start="293:31" pos:end="293:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="295:24" pos:end="295:69"><expr pos:start="295:24" pos:end="295:69"><literal type="string" pos:start="295:24" pos:end="295:69">"Incorrect frame size: %ix%i+%ix%i of %ix%i\n"</literal></expr></argument>,

                       <argument pos:start="297:24" pos:end="297:24"><expr pos:start="297:24" pos:end="297:24"><name pos:start="297:24" pos:end="297:24">w</name></expr></argument>, <argument pos:start="297:27" pos:end="297:27"><expr pos:start="297:27" pos:end="297:27"><name pos:start="297:27" pos:end="297:27">h</name></expr></argument>, <argument pos:start="297:30" pos:end="297:31"><expr pos:start="297:30" pos:end="297:31"><name pos:start="297:30" pos:end="297:31">dx</name></expr></argument>, <argument pos:start="297:34" pos:end="297:35"><expr pos:start="297:34" pos:end="297:35"><name pos:start="297:34" pos:end="297:35">dy</name></expr></argument>, <argument pos:start="297:38" pos:end="297:45"><expr pos:start="297:38" pos:end="297:45"><name pos:start="297:38" pos:end="297:45"><name pos:start="297:38" pos:end="297:38">c</name><operator pos:start="297:39" pos:end="297:40">-&gt;</operator><name pos:start="297:41" pos:end="297:45">width</name></name></expr></argument>, <argument pos:start="297:48" pos:end="297:56"><expr pos:start="297:48" pos:end="297:56"><name pos:start="297:48" pos:end="297:56"><name pos:start="297:48" pos:end="297:48">c</name><operator pos:start="297:49" pos:end="297:50">-&gt;</operator><name pos:start="297:51" pos:end="297:56">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="299:17" pos:end="299:43">return <expr pos:start="299:24" pos:end="299:42"><name pos:start="299:24" pos:end="299:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:75"><expr pos:start="303:13" pos:end="303:74"><name pos:start="303:13" pos:end="303:15">res</name> <operator pos:start="303:17" pos:end="303:17">=</operator> <call pos:start="303:19" pos:end="303:74"><name pos:start="303:19" pos:end="303:32">decode_hextile</name><argument_list pos:start="303:33" pos:end="303:74">(<argument pos:start="303:34" pos:end="303:34"><expr pos:start="303:34" pos:end="303:34"><name pos:start="303:34" pos:end="303:34">c</name></expr></argument>, <argument pos:start="303:37" pos:end="303:42"><expr pos:start="303:37" pos:end="303:42"><name pos:start="303:37" pos:end="303:42">outptr</name></expr></argument>, <argument pos:start="303:45" pos:end="303:46"><expr pos:start="303:45" pos:end="303:46"><name pos:start="303:45" pos:end="303:46">gb</name></expr></argument>, <argument pos:start="303:49" pos:end="303:49"><expr pos:start="303:49" pos:end="303:49"><name pos:start="303:49" pos:end="303:49">w</name></expr></argument>, <argument pos:start="303:52" pos:end="303:52"><expr pos:start="303:52" pos:end="303:52"><name pos:start="303:52" pos:end="303:52">h</name></expr></argument>, <argument pos:start="303:55" pos:end="303:73"><expr pos:start="303:55" pos:end="303:73"><name pos:start="303:55" pos:end="303:73"><name pos:start="303:55" pos:end="303:55">c</name><operator pos:start="303:56" pos:end="303:57">-&gt;</operator><name pos:start="303:58" pos:end="303:60">pic</name><operator pos:start="303:61" pos:end="303:62">-&gt;</operator><name pos:start="303:63" pos:end="303:70">linesize</name><index pos:start="303:71" pos:end="303:73">[<expr pos:start="303:72" pos:end="303:72"><literal type="number" pos:start="303:72" pos:end="303:72">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="305:13" pos:end="307:27"><if pos:start="305:13" pos:end="307:27">if <condition pos:start="305:16" pos:end="305:24">(<expr pos:start="305:17" pos:end="305:23"><name pos:start="305:17" pos:end="305:19">res</name> <operator pos:start="305:21" pos:end="305:21">&lt;</operator> <literal type="number" pos:start="305:23" pos:end="305:23">0</literal></expr>)</condition><block type="pseudo" pos:start="307:17" pos:end="307:27"><block_content pos:start="307:17" pos:end="307:27">

                <return pos:start="307:17" pos:end="307:27">return <expr pos:start="307:24" pos:end="307:26"><name pos:start="307:24" pos:end="307:26">res</name></expr>;</return></block_content></block></if></if_stmt>

            <break pos:start="309:13" pos:end="309:18">break;</break>

        <default pos:start="311:9" pos:end="311:16">default:</default>

            <expr_stmt pos:start="313:13" pos:end="313:80"><expr pos:start="313:13" pos:end="313:79"><call pos:start="313:13" pos:end="313:79"><name pos:start="313:13" pos:end="313:18">av_log</name><argument_list pos:start="313:19" pos:end="313:79">(<argument pos:start="313:20" pos:end="313:24"><expr pos:start="313:20" pos:end="313:24"><name pos:start="313:20" pos:end="313:24">avctx</name></expr></argument>, <argument pos:start="313:27" pos:end="313:38"><expr pos:start="313:27" pos:end="313:38"><name pos:start="313:27" pos:end="313:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="313:41" pos:end="313:73"><expr pos:start="313:41" pos:end="313:73"><literal type="string" pos:start="313:41" pos:end="313:73">"Unsupported block type 0x%08X\n"</literal></expr></argument>, <argument pos:start="313:76" pos:end="313:78"><expr pos:start="313:76" pos:end="313:78"><name pos:start="313:76" pos:end="313:78">enc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:23"><expr pos:start="315:13" pos:end="315:22"><name pos:start="315:13" pos:end="315:18">chunks</name> <operator pos:start="315:20" pos:end="315:20">=</operator> <literal type="number" pos:start="315:22" pos:end="315:22">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="315:25" pos:end="315:53">// leave chunks decoding loop</comment>

        </block_content>}</block></switch>

    </block_content>}</block></while>

    <if_stmt pos:start="321:5" pos:end="379:5"><if pos:start="321:5" pos:end="379:5">if <condition pos:start="321:8" pos:end="321:21">(<expr pos:start="321:9" pos:end="321:20"><name pos:start="321:9" pos:end="321:20"><name pos:start="321:9" pos:end="321:9">c</name><operator pos:start="321:10" pos:end="321:11">-&gt;</operator><name pos:start="321:12" pos:end="321:20">screendta</name></name></expr>)</condition> <block pos:start="321:23" pos:end="379:5">{<block_content pos:start="323:9" pos:end="377:9">

        <decl_stmt pos:start="323:9" pos:end="323:14"><decl pos:start="323:9" pos:end="323:13"><type pos:start="323:9" pos:end="323:11"><name pos:start="323:9" pos:end="323:11">int</name></type> <name pos:start="323:13" pos:end="323:13">i</name></decl>;</decl_stmt>

        <comment type="line" pos:start="325:9" pos:end="325:50">// save screen data before painting cursor</comment>

        <expr_stmt pos:start="327:9" pos:end="327:21"><expr pos:start="327:9" pos:end="327:20"><name pos:start="327:9" pos:end="327:9">w</name> <operator pos:start="327:11" pos:end="327:11">=</operator> <name pos:start="327:13" pos:end="327:20"><name pos:start="327:13" pos:end="327:13">c</name><operator pos:start="327:14" pos:end="327:15">-&gt;</operator><name pos:start="327:16" pos:end="327:20">cur_w</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="329:9" pos:end="331:36"><if pos:start="329:9" pos:end="331:36">if <condition pos:start="329:12" pos:end="329:36">(<expr pos:start="329:13" pos:end="329:35"><name pos:start="329:13" pos:end="329:20"><name pos:start="329:13" pos:end="329:13">c</name><operator pos:start="329:14" pos:end="329:15">-&gt;</operator><name pos:start="329:16" pos:end="329:20">width</name></name> <operator pos:start="329:22" pos:end="329:22">&lt;</operator> <name pos:start="329:24" pos:end="329:31"><name pos:start="329:24" pos:end="329:24">c</name><operator pos:start="329:25" pos:end="329:26">-&gt;</operator><name pos:start="329:27" pos:end="329:31">cur_x</name></name> <operator pos:start="329:33" pos:end="329:33">+</operator> <name pos:start="329:35" pos:end="329:35">w</name></expr>)</condition><block type="pseudo" pos:start="331:13" pos:end="331:36"><block_content pos:start="331:13" pos:end="331:36">

            <expr_stmt pos:start="331:13" pos:end="331:36"><expr pos:start="331:13" pos:end="331:35"><name pos:start="331:13" pos:end="331:13">w</name> <operator pos:start="331:15" pos:end="331:15">=</operator> <name pos:start="331:17" pos:end="331:24"><name pos:start="331:17" pos:end="331:17">c</name><operator pos:start="331:18" pos:end="331:19">-&gt;</operator><name pos:start="331:20" pos:end="331:24">width</name></name> <operator pos:start="331:26" pos:end="331:26">-</operator> <name pos:start="331:28" pos:end="331:35"><name pos:start="331:28" pos:end="331:28">c</name><operator pos:start="331:29" pos:end="331:30">-&gt;</operator><name pos:start="331:31" pos:end="331:35">cur_x</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:21"><expr pos:start="333:9" pos:end="333:20"><name pos:start="333:9" pos:end="333:9">h</name> <operator pos:start="333:11" pos:end="333:11">=</operator> <name pos:start="333:13" pos:end="333:20"><name pos:start="333:13" pos:end="333:13">c</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:20">cur_h</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="335:9" pos:end="337:37"><if pos:start="335:9" pos:end="337:37">if <condition pos:start="335:12" pos:end="335:37">(<expr pos:start="335:13" pos:end="335:36"><name pos:start="335:13" pos:end="335:21"><name pos:start="335:13" pos:end="335:13">c</name><operator pos:start="335:14" pos:end="335:15">-&gt;</operator><name pos:start="335:16" pos:end="335:21">height</name></name> <operator pos:start="335:23" pos:end="335:23">&lt;</operator> <name pos:start="335:25" pos:end="335:32"><name pos:start="335:25" pos:end="335:25">c</name><operator pos:start="335:26" pos:end="335:27">-&gt;</operator><name pos:start="335:28" pos:end="335:32">cur_y</name></name> <operator pos:start="335:34" pos:end="335:34">+</operator> <name pos:start="335:36" pos:end="335:36">h</name></expr>)</condition><block type="pseudo" pos:start="337:13" pos:end="337:37"><block_content pos:start="337:13" pos:end="337:37">

            <expr_stmt pos:start="337:13" pos:end="337:37"><expr pos:start="337:13" pos:end="337:36"><name pos:start="337:13" pos:end="337:13">h</name> <operator pos:start="337:15" pos:end="337:15">=</operator> <name pos:start="337:17" pos:end="337:25"><name pos:start="337:17" pos:end="337:17">c</name><operator pos:start="337:18" pos:end="337:19">-&gt;</operator><name pos:start="337:20" pos:end="337:25">height</name></name> <operator pos:start="337:27" pos:end="337:27">-</operator> <name pos:start="337:29" pos:end="337:36"><name pos:start="337:29" pos:end="337:29">c</name><operator pos:start="337:30" pos:end="337:31">-&gt;</operator><name pos:start="337:32" pos:end="337:36">cur_y</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="339:9" pos:end="339:22"><expr pos:start="339:9" pos:end="339:21"><name pos:start="339:9" pos:end="339:10">dx</name> <operator pos:start="339:12" pos:end="339:12">=</operator> <name pos:start="339:14" pos:end="339:21"><name pos:start="339:14" pos:end="339:14">c</name><operator pos:start="339:15" pos:end="339:16">-&gt;</operator><name pos:start="339:17" pos:end="339:21">cur_x</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="341:9" pos:end="347:9"><if pos:start="341:9" pos:end="347:9">if <condition pos:start="341:12" pos:end="341:19">(<expr pos:start="341:13" pos:end="341:18"><name pos:start="341:13" pos:end="341:14">dx</name> <operator pos:start="341:16" pos:end="341:16">&lt;</operator> <literal type="number" pos:start="341:18" pos:end="341:18">0</literal></expr>)</condition> <block pos:start="341:21" pos:end="347:9">{<block_content pos:start="343:13" pos:end="345:19">

            <expr_stmt pos:start="343:13" pos:end="343:20"><expr pos:start="343:13" pos:end="343:19"><name pos:start="343:13" pos:end="343:13">w</name> <operator pos:start="343:15" pos:end="343:16">+=</operator> <name pos:start="343:18" pos:end="343:19">dx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:19"><expr pos:start="345:13" pos:end="345:18"><name pos:start="345:13" pos:end="345:14">dx</name> <operator pos:start="345:16" pos:end="345:16">=</operator> <literal type="number" pos:start="345:18" pos:end="345:18">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="349:9" pos:end="349:22"><expr pos:start="349:9" pos:end="349:21"><name pos:start="349:9" pos:end="349:10">dy</name> <operator pos:start="349:12" pos:end="349:12">=</operator> <name pos:start="349:14" pos:end="349:21"><name pos:start="349:14" pos:end="349:14">c</name><operator pos:start="349:15" pos:end="349:16">-&gt;</operator><name pos:start="349:17" pos:end="349:21">cur_y</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="351:9" pos:end="357:9"><if pos:start="351:9" pos:end="357:9">if <condition pos:start="351:12" pos:end="351:19">(<expr pos:start="351:13" pos:end="351:18"><name pos:start="351:13" pos:end="351:14">dy</name> <operator pos:start="351:16" pos:end="351:16">&lt;</operator> <literal type="number" pos:start="351:18" pos:end="351:18">0</literal></expr>)</condition> <block pos:start="351:21" pos:end="357:9">{<block_content pos:start="353:13" pos:end="355:19">

            <expr_stmt pos:start="353:13" pos:end="353:20"><expr pos:start="353:13" pos:end="353:19"><name pos:start="353:13" pos:end="353:13">h</name> <operator pos:start="353:15" pos:end="353:16">+=</operator> <name pos:start="353:18" pos:end="353:19">dy</name></expr>;</expr_stmt>

            <expr_stmt pos:start="355:13" pos:end="355:19"><expr pos:start="355:13" pos:end="355:18"><name pos:start="355:13" pos:end="355:14">dy</name> <operator pos:start="355:16" pos:end="355:16">=</operator> <literal type="number" pos:start="355:18" pos:end="355:18">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="359:9" pos:end="377:9"><if pos:start="359:9" pos:end="377:9">if <condition pos:start="359:12" pos:end="359:31">(<expr pos:start="359:13" pos:end="359:30"><operator pos:start="359:13" pos:end="359:13">(</operator><name pos:start="359:14" pos:end="359:14">w</name> <operator pos:start="359:16" pos:end="359:16">&gt;</operator> <literal type="number" pos:start="359:18" pos:end="359:18">0</literal><operator pos:start="359:19" pos:end="359:19">)</operator> <operator pos:start="359:21" pos:end="359:22">&amp;&amp;</operator> <operator pos:start="359:24" pos:end="359:24">(</operator><name pos:start="359:25" pos:end="359:25">h</name> <operator pos:start="359:27" pos:end="359:27">&gt;</operator> <literal type="number" pos:start="359:29" pos:end="359:29">0</literal><operator pos:start="359:30" pos:end="359:30">)</operator></expr>)</condition> <block pos:start="359:33" pos:end="377:9">{<block_content pos:start="361:13" pos:end="375:75">

            <expr_stmt pos:start="361:13" pos:end="361:79"><expr pos:start="361:13" pos:end="361:78"><name pos:start="361:13" pos:end="361:18">outptr</name> <operator pos:start="361:20" pos:end="361:20">=</operator> <name pos:start="361:22" pos:end="361:36"><name pos:start="361:22" pos:end="361:22">c</name><operator pos:start="361:23" pos:end="361:24">-&gt;</operator><name pos:start="361:25" pos:end="361:27">pic</name><operator pos:start="361:28" pos:end="361:29">-&gt;</operator><name pos:start="361:30" pos:end="361:33">data</name><index pos:start="361:34" pos:end="361:36">[<expr pos:start="361:35" pos:end="361:35"><literal type="number" pos:start="361:35" pos:end="361:35">0</literal></expr>]</index></name> <operator pos:start="361:38" pos:end="361:38">+</operator> <name pos:start="361:40" pos:end="361:41">dx</name> <operator pos:start="361:43" pos:end="361:43">*</operator> <name pos:start="361:45" pos:end="361:51"><name pos:start="361:45" pos:end="361:45">c</name><operator pos:start="361:46" pos:end="361:47">-&gt;</operator><name pos:start="361:48" pos:end="361:51">bpp2</name></name> <operator pos:start="361:53" pos:end="361:53">+</operator> <name pos:start="361:55" pos:end="361:56">dy</name> <operator pos:start="361:58" pos:end="361:58">*</operator> <name pos:start="361:60" pos:end="361:78"><name pos:start="361:60" pos:end="361:60">c</name><operator pos:start="361:61" pos:end="361:62">-&gt;</operator><name pos:start="361:63" pos:end="361:65">pic</name><operator pos:start="361:66" pos:end="361:67">-&gt;</operator><name pos:start="361:68" pos:end="361:75">linesize</name><index pos:start="361:76" pos:end="361:78">[<expr pos:start="361:77" pos:end="361:77"><literal type="number" pos:start="361:77" pos:end="361:77">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="363:13" pos:end="371:13">for <control pos:start="363:17" pos:end="363:35">(<init pos:start="363:18" pos:end="363:23"><expr pos:start="363:18" pos:end="363:22"><name pos:start="363:18" pos:end="363:18">i</name> <operator pos:start="363:20" pos:end="363:20">=</operator> <literal type="number" pos:start="363:22" pos:end="363:22">0</literal></expr>;</init> <condition pos:start="363:25" pos:end="363:30"><expr pos:start="363:25" pos:end="363:29"><name pos:start="363:25" pos:end="363:25">i</name> <operator pos:start="363:27" pos:end="363:27">&lt;</operator> <name pos:start="363:29" pos:end="363:29">h</name></expr>;</condition> <incr pos:start="363:32" pos:end="363:34"><expr pos:start="363:32" pos:end="363:34"><name pos:start="363:32" pos:end="363:32">i</name><operator pos:start="363:33" pos:end="363:34">++</operator></expr></incr>)</control> <block pos:start="363:37" pos:end="371:13">{<block_content pos:start="365:17" pos:end="369:46">

                <expr_stmt pos:start="365:17" pos:end="367:36"><expr pos:start="365:17" pos:end="367:35"><call pos:start="365:17" pos:end="367:35"><name pos:start="365:17" pos:end="365:22">memcpy</name><argument_list pos:start="365:23" pos:end="367:35">(<argument pos:start="365:24" pos:end="365:60"><expr pos:start="365:24" pos:end="365:60"><name pos:start="365:24" pos:end="365:35"><name pos:start="365:24" pos:end="365:24">c</name><operator pos:start="365:25" pos:end="365:26">-&gt;</operator><name pos:start="365:27" pos:end="365:35">screendta</name></name> <operator pos:start="365:37" pos:end="365:37">+</operator> <name pos:start="365:39" pos:end="365:39">i</name> <operator pos:start="365:41" pos:end="365:41">*</operator> <name pos:start="365:43" pos:end="365:50"><name pos:start="365:43" pos:end="365:43">c</name><operator pos:start="365:44" pos:end="365:45">-&gt;</operator><name pos:start="365:46" pos:end="365:50">cur_w</name></name> <operator pos:start="365:52" pos:end="365:52">*</operator> <name pos:start="365:54" pos:end="365:60"><name pos:start="365:54" pos:end="365:54">c</name><operator pos:start="365:55" pos:end="365:56">-&gt;</operator><name pos:start="365:57" pos:end="365:60">bpp2</name></name></expr></argument>, <argument pos:start="365:63" pos:end="365:68"><expr pos:start="365:63" pos:end="365:68"><name pos:start="365:63" pos:end="365:68">outptr</name></expr></argument>,

                       <argument pos:start="367:24" pos:end="367:34"><expr pos:start="367:24" pos:end="367:34"><name pos:start="367:24" pos:end="367:24">w</name> <operator pos:start="367:26" pos:end="367:26">*</operator> <name pos:start="367:28" pos:end="367:34"><name pos:start="367:28" pos:end="367:28">c</name><operator pos:start="367:29" pos:end="367:30">-&gt;</operator><name pos:start="367:31" pos:end="367:34">bpp2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="369:17" pos:end="369:46"><expr pos:start="369:17" pos:end="369:45"><name pos:start="369:17" pos:end="369:22">outptr</name> <operator pos:start="369:24" pos:end="369:25">+=</operator> <name pos:start="369:27" pos:end="369:45"><name pos:start="369:27" pos:end="369:27">c</name><operator pos:start="369:28" pos:end="369:29">-&gt;</operator><name pos:start="369:30" pos:end="369:32">pic</name><operator pos:start="369:33" pos:end="369:34">-&gt;</operator><name pos:start="369:35" pos:end="369:42">linesize</name><index pos:start="369:43" pos:end="369:45">[<expr pos:start="369:44" pos:end="369:44"><literal type="number" pos:start="369:44" pos:end="369:44">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="373:13" pos:end="373:37"><expr pos:start="373:13" pos:end="373:36"><name pos:start="373:13" pos:end="373:18">outptr</name> <operator pos:start="373:20" pos:end="373:20">=</operator> <name pos:start="373:22" pos:end="373:36"><name pos:start="373:22" pos:end="373:22">c</name><operator pos:start="373:23" pos:end="373:24">-&gt;</operator><name pos:start="373:25" pos:end="373:27">pic</name><operator pos:start="373:28" pos:end="373:29">-&gt;</operator><name pos:start="373:30" pos:end="373:33">data</name><index pos:start="373:34" pos:end="373:36">[<expr pos:start="373:35" pos:end="373:35"><literal type="number" pos:start="373:35" pos:end="373:35">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="375:13" pos:end="375:75"><expr pos:start="375:13" pos:end="375:74"><call pos:start="375:13" pos:end="375:74"><name pos:start="375:13" pos:end="375:22">put_cursor</name><argument_list pos:start="375:23" pos:end="375:74">(<argument pos:start="375:24" pos:end="375:29"><expr pos:start="375:24" pos:end="375:29"><name pos:start="375:24" pos:end="375:29">outptr</name></expr></argument>, <argument pos:start="375:32" pos:end="375:50"><expr pos:start="375:32" pos:end="375:50"><name pos:start="375:32" pos:end="375:50"><name pos:start="375:32" pos:end="375:32">c</name><operator pos:start="375:33" pos:end="375:34">-&gt;</operator><name pos:start="375:35" pos:end="375:37">pic</name><operator pos:start="375:38" pos:end="375:39">-&gt;</operator><name pos:start="375:40" pos:end="375:47">linesize</name><index pos:start="375:48" pos:end="375:50">[<expr pos:start="375:49" pos:end="375:49"><literal type="number" pos:start="375:49" pos:end="375:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="375:53" pos:end="375:53"><expr pos:start="375:53" pos:end="375:53"><name pos:start="375:53" pos:end="375:53">c</name></expr></argument>, <argument pos:start="375:56" pos:end="375:63"><expr pos:start="375:56" pos:end="375:63"><name pos:start="375:56" pos:end="375:63"><name pos:start="375:56" pos:end="375:56">c</name><operator pos:start="375:57" pos:end="375:58">-&gt;</operator><name pos:start="375:59" pos:end="375:63">cur_x</name></name></expr></argument>, <argument pos:start="375:66" pos:end="375:73"><expr pos:start="375:66" pos:end="375:73"><name pos:start="375:66" pos:end="375:73"><name pos:start="375:66" pos:end="375:66">c</name><operator pos:start="375:67" pos:end="375:68">-&gt;</operator><name pos:start="375:69" pos:end="375:73">cur_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="381:5" pos:end="381:19"><expr pos:start="381:5" pos:end="381:18"><operator pos:start="381:5" pos:end="381:5">*</operator><name pos:start="381:6" pos:end="381:14">got_frame</name> <operator pos:start="381:16" pos:end="381:16">=</operator> <literal type="number" pos:start="381:18" pos:end="381:18">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="383:5" pos:end="385:19"><if pos:start="383:5" pos:end="385:19">if <condition pos:start="383:8" pos:end="383:47">(<expr pos:start="383:9" pos:end="383:46"><operator pos:start="383:9" pos:end="383:9">(</operator><name pos:start="383:10" pos:end="383:12">ret</name> <operator pos:start="383:14" pos:end="383:14">=</operator> <call pos:start="383:16" pos:end="383:41"><name pos:start="383:16" pos:end="383:27">av_frame_ref</name><argument_list pos:start="383:28" pos:end="383:41">(<argument pos:start="383:29" pos:end="383:32"><expr pos:start="383:29" pos:end="383:32"><name pos:start="383:29" pos:end="383:32">data</name></expr></argument>, <argument pos:start="383:35" pos:end="383:40"><expr pos:start="383:35" pos:end="383:40"><name pos:start="383:35" pos:end="383:40"><name pos:start="383:35" pos:end="383:35">c</name><operator pos:start="383:36" pos:end="383:37">-&gt;</operator><name pos:start="383:38" pos:end="383:40">pic</name></name></expr></argument>)</argument_list></call><operator pos:start="383:42" pos:end="383:42">)</operator> <operator pos:start="383:44" pos:end="383:44">&lt;</operator> <literal type="number" pos:start="383:46" pos:end="383:46">0</literal></expr>)</condition><block type="pseudo" pos:start="385:9" pos:end="385:19"><block_content pos:start="385:9" pos:end="385:19">

        <return pos:start="385:9" pos:end="385:19">return <expr pos:start="385:16" pos:end="385:18"><name pos:start="385:16" pos:end="385:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="389:5" pos:end="389:63">/* always report that the buffer was completely consumed */</comment>

    <return pos:start="391:5" pos:end="391:20">return <expr pos:start="391:12" pos:end="391:19"><name pos:start="391:12" pos:end="391:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
