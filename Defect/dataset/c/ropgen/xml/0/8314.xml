<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8314.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:32">ff_mjpeg_decode_init</name><parameter_list pos:start="1:33" pos:end="1:55">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">MJpegDecodeContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:25">s</name> <init pos:start="5:27" pos:end="5:44">= <expr pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:33">avctx</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="21:5"><if pos:start="11:5" pos:end="21:5">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:23"><name pos:start="11:10" pos:end="11:10">s</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:23">picture_ptr</name></name></expr>)</condition> <block pos:start="11:26" pos:end="21:5">{<block_content pos:start="13:9" pos:end="19:36">

        <expr_stmt pos:start="13:9" pos:end="13:38"><expr pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:18">picture</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <call pos:start="13:22" pos:end="13:37"><name pos:start="13:22" pos:end="13:35">av_frame_alloc</name><argument_list pos:start="13:36" pos:end="13:37">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="17:35"><if pos:start="15:9" pos:end="17:35">if <condition pos:start="15:12" pos:end="15:24">(<expr pos:start="15:13" pos:end="15:23"><operator pos:start="15:13" pos:end="15:13">!</operator><name pos:start="15:14" pos:end="15:23"><name pos:start="15:14" pos:end="15:14">s</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:23">picture</name></name></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:35"><block_content pos:start="17:13" pos:end="17:35">

            <return pos:start="17:13" pos:end="17:35">return <expr pos:start="17:20" pos:end="17:34"><call pos:start="17:20" pos:end="17:34"><name pos:start="17:20" pos:end="17:26">AVERROR</name><argument_list pos:start="17:27" pos:end="17:34">(<argument pos:start="17:28" pos:end="17:33"><expr pos:start="17:28" pos:end="17:33"><name pos:start="17:28" pos:end="17:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:22">picture_ptr</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <name pos:start="19:26" pos:end="19:35"><name pos:start="19:26" pos:end="19:26">s</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:35">picture</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:12">avctx</name></name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:20">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><call pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:20">ff_blockdsp_init</name><argument_list pos:start="27:21" pos:end="27:37">(<argument pos:start="27:22" pos:end="27:29"><expr pos:start="27:22" pos:end="27:29"><operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:29"><name pos:start="27:23" pos:end="27:23">s</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:29">bdsp</name></name></expr></argument>, <argument pos:start="27:32" pos:end="27:36"><expr pos:start="27:32" pos:end="27:36"><name pos:start="27:32" pos:end="27:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:44"><expr pos:start="29:5" pos:end="29:43"><call pos:start="29:5" pos:end="29:43"><name pos:start="29:5" pos:end="29:19">ff_hpeldsp_init</name><argument_list pos:start="29:20" pos:end="29:43">(<argument pos:start="29:21" pos:end="29:28"><expr pos:start="29:21" pos:end="29:28"><operator pos:start="29:21" pos:end="29:21">&amp;</operator><name pos:start="29:22" pos:end="29:28"><name pos:start="29:22" pos:end="29:22">s</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:28">hdsp</name></name></expr></argument>, <argument pos:start="29:31" pos:end="29:42"><expr pos:start="29:31" pos:end="29:42"><name pos:start="29:31" pos:end="29:42"><name pos:start="29:31" pos:end="29:35">avctx</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:42">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><call pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:19">ff_idctdsp_init</name><argument_list pos:start="31:20" pos:end="31:36">(<argument pos:start="31:21" pos:end="31:28"><expr pos:start="31:21" pos:end="31:28"><operator pos:start="31:21" pos:end="31:21">&amp;</operator><name pos:start="31:22" pos:end="31:28"><name pos:start="31:22" pos:end="31:22">s</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:28">idsp</name></name></expr></argument>, <argument pos:start="31:31" pos:end="31:35"><expr pos:start="31:31" pos:end="31:35"><name pos:start="31:31" pos:end="31:35">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:40"><expr pos:start="33:5" pos:end="35:39"><call pos:start="33:5" pos:end="35:39"><name pos:start="33:5" pos:end="33:21">ff_init_scantable</name><argument_list pos:start="33:22" pos:end="35:39">(<argument pos:start="33:23" pos:end="33:46"><expr pos:start="33:23" pos:end="33:46"><name pos:start="33:23" pos:end="33:46"><name pos:start="33:23" pos:end="33:23">s</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:29">idsp</name><operator pos:start="33:30" pos:end="33:30">.</operator><name pos:start="33:31" pos:end="33:46">idct_permutation</name></name></expr></argument>, <argument pos:start="33:49" pos:end="33:61"><expr pos:start="33:49" pos:end="33:61"><operator pos:start="33:49" pos:end="33:49">&amp;</operator><name pos:start="33:50" pos:end="33:61"><name pos:start="33:50" pos:end="33:50">s</name><operator pos:start="33:51" pos:end="33:52">-&gt;</operator><name pos:start="33:53" pos:end="33:61">scantable</name></name></expr></argument>,

                      <argument pos:start="35:23" pos:end="35:38"><expr pos:start="35:23" pos:end="35:38"><name pos:start="35:23" pos:end="35:38">ff_zigzag_direct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:25"><expr pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:18">buffer_size</name></name>   <operator pos:start="37:22" pos:end="37:22">=</operator> <literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:13">buffer</name></name>        <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:27">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:26"><expr pos:start="41:5" pos:end="41:25"><name pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:17">start_code</name></name>    <operator pos:start="41:22" pos:end="41:22">=</operator> <operator pos:start="41:24" pos:end="41:24">-</operator><literal type="number" pos:start="41:25" pos:end="41:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:25"><expr pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:20">first_picture</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <literal type="number" pos:start="43:24" pos:end="43:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:43"><expr pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:17">org_height</name></name>    <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:42"><name pos:start="45:24" pos:end="45:28">avctx</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:42">coded_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:56"><expr pos:start="47:5" pos:end="47:55"><name pos:start="47:5" pos:end="47:33"><name pos:start="47:5" pos:end="47:9">avctx</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:33">chroma_sample_location</name></name> <operator pos:start="47:35" pos:end="47:35">=</operator> <name pos:start="47:37" pos:end="47:55">AVCHROMA_LOC_CENTER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:42"><expr pos:start="49:5" pos:end="49:41"><name pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:9">avctx</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:21">colorspace</name></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <name pos:start="49:25" pos:end="49:41">AVCOL_SPC_BT470BG</name></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="55:19"><if pos:start="53:5" pos:end="55:19">if <condition pos:start="53:8" pos:end="53:45">(<expr pos:start="53:9" pos:end="53:44"><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:12">ret</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <call pos:start="53:16" pos:end="53:39"><name pos:start="53:16" pos:end="53:36">build_basic_mjpeg_vlc</name><argument_list pos:start="53:37" pos:end="53:39">(<argument pos:start="53:38" pos:end="53:38"><expr pos:start="53:38" pos:end="53:38"><name pos:start="53:38" pos:end="53:38">s</name></expr></argument>)</argument_list></call><operator pos:start="53:40" pos:end="53:40">)</operator> <operator pos:start="53:42" pos:end="53:42">&lt;</operator> <literal type="number" pos:start="53:44" pos:end="53:44">0</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:19"><block_content pos:start="55:9" pos:end="55:19">

        <return pos:start="55:9" pos:end="55:19">return <expr pos:start="55:16" pos:end="55:18"><name pos:start="55:16" pos:end="55:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="77:5"><if pos:start="59:5" pos:end="77:5">if <condition pos:start="59:8" pos:end="59:23">(<expr pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:22">extern_huff</name></name></expr>)</condition> <block pos:start="59:25" pos:end="77:5">{<block_content pos:start="61:9" pos:end="75:9">

        <expr_stmt pos:start="61:9" pos:end="61:76"><expr pos:start="61:9" pos:end="61:75"><call pos:start="61:9" pos:end="61:75"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="61:75">(<argument pos:start="61:16" pos:end="61:20"><expr pos:start="61:16" pos:end="61:20"><name pos:start="61:16" pos:end="61:20">avctx</name></expr></argument>, <argument pos:start="61:23" pos:end="61:33"><expr pos:start="61:23" pos:end="61:33"><name pos:start="61:23" pos:end="61:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="61:36" pos:end="61:74"><expr pos:start="61:36" pos:end="61:74"><literal type="string" pos:start="61:36" pos:end="61:74">"mjpeg: using external huffman table\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="65:23"><if pos:start="63:9" pos:end="65:23">if <condition pos:start="63:12" pos:end="63:91">(<expr pos:start="63:13" pos:end="63:90"><operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:16">ret</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="63:85"><name pos:start="63:20" pos:end="63:32">init_get_bits</name><argument_list pos:start="63:33" pos:end="63:85">(<argument pos:start="63:34" pos:end="63:39"><expr pos:start="63:34" pos:end="63:39"><operator pos:start="63:34" pos:end="63:34">&amp;</operator><name pos:start="63:35" pos:end="63:39"><name pos:start="63:35" pos:end="63:35">s</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:39">gb</name></name></expr></argument>, <argument pos:start="63:42" pos:end="63:57"><expr pos:start="63:42" pos:end="63:57"><name pos:start="63:42" pos:end="63:57"><name pos:start="63:42" pos:end="63:46">avctx</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:57">extradata</name></name></expr></argument>, <argument pos:start="63:60" pos:end="63:84"><expr pos:start="63:60" pos:end="63:84"><name pos:start="63:60" pos:end="63:80"><name pos:start="63:60" pos:end="63:64">avctx</name><operator pos:start="63:65" pos:end="63:66">-&gt;</operator><name pos:start="63:67" pos:end="63:80">extradata_size</name></name> <operator pos:start="63:82" pos:end="63:82">*</operator> <literal type="number" pos:start="63:84" pos:end="63:84">8</literal></expr></argument>)</argument_list></call><operator pos:start="63:86" pos:end="63:86">)</operator> <operator pos:start="63:88" pos:end="63:88">&lt;</operator> <literal type="number" pos:start="63:90" pos:end="63:90">0</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:23"><block_content pos:start="65:13" pos:end="65:23">

            <return pos:start="65:13" pos:end="65:23">return <expr pos:start="65:20" pos:end="65:22"><name pos:start="65:20" pos:end="65:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="67:9" pos:end="75:9"><if pos:start="67:9" pos:end="75:9">if <condition pos:start="67:12" pos:end="67:43">(<expr pos:start="67:13" pos:end="67:42"><operator pos:start="67:13" pos:end="67:13">(</operator><name pos:start="67:14" pos:end="67:16">ret</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <call pos:start="67:20" pos:end="67:41"><name pos:start="67:20" pos:end="67:38">ff_mjpeg_decode_dht</name><argument_list pos:start="67:39" pos:end="67:41">(<argument pos:start="67:40" pos:end="67:40"><expr pos:start="67:40" pos:end="67:40"><name pos:start="67:40" pos:end="67:40">s</name></expr></argument>)</argument_list></call><operator pos:start="67:42" pos:end="67:42">)</operator></expr>)</condition> <block pos:start="67:45" pos:end="75:9">{<block_content pos:start="69:13" pos:end="73:23">

            <expr_stmt pos:start="69:13" pos:end="71:66"><expr pos:start="69:13" pos:end="71:65"><call pos:start="69:13" pos:end="71:65"><name pos:start="69:13" pos:end="69:18">av_log</name><argument_list pos:start="69:19" pos:end="71:65">(<argument pos:start="69:20" pos:end="69:24"><expr pos:start="69:20" pos:end="69:24"><name pos:start="69:20" pos:end="69:24">avctx</name></expr></argument>, <argument pos:start="69:27" pos:end="69:38"><expr pos:start="69:27" pos:end="69:38"><name pos:start="69:27" pos:end="69:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="71:20" pos:end="71:64"><expr pos:start="71:20" pos:end="71:64"><literal type="string" pos:start="71:20" pos:end="71:64">"mjpeg: error using external huffman table\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="73:13" pos:end="73:23">return <expr pos:start="73:20" pos:end="73:22"><name pos:start="73:20" pos:end="73:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:42">(<expr pos:start="79:9" pos:end="79:41"><name pos:start="79:9" pos:end="79:26"><name pos:start="79:9" pos:end="79:13">avctx</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:26">field_order</name></name> <operator pos:start="79:28" pos:end="79:29">==</operator> <name pos:start="79:31" pos:end="79:41">AV_FIELD_BB</name></expr>)</condition> <block pos:start="79:44" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:66"> <comment type="block" pos:start="79:46" pos:end="79:72">/* quicktime icefloe 019 */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:34"><expr pos:start="81:9" pos:end="81:33"><name pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:29">interlace_polarity</name></name> <operator pos:start="81:31" pos:end="81:31">=</operator> <literal type="number" pos:start="81:33" pos:end="81:33">1</literal></expr>;</expr_stmt>           <comment type="block" pos:start="81:46" pos:end="81:69">/* bottom field first */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:66"><expr pos:start="83:9" pos:end="83:65"><call pos:start="83:9" pos:end="83:65"><name pos:start="83:9" pos:end="83:14">av_log</name><argument_list pos:start="83:15" pos:end="83:65">(<argument pos:start="83:16" pos:end="83:20"><expr pos:start="83:16" pos:end="83:20"><name pos:start="83:16" pos:end="83:20">avctx</name></expr></argument>, <argument pos:start="83:23" pos:end="83:34"><expr pos:start="83:23" pos:end="83:34"><name pos:start="83:23" pos:end="83:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="83:37" pos:end="83:64"><expr pos:start="83:37" pos:end="83:64"><literal type="string" pos:start="83:37" pos:end="83:64">"mjpeg bottom field first\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="89:23"><if pos:start="87:5" pos:end="89:23">if <condition pos:start="87:8" pos:end="87:44">(<expr pos:start="87:9" pos:end="87:43"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:13">avctx</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:20">codec</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:24">id</name></name> <operator pos:start="87:26" pos:end="87:27">==</operator> <name pos:start="87:29" pos:end="87:43">AV_CODEC_ID_AMV</name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:23"><block_content pos:start="89:9" pos:end="89:23">

        <expr_stmt pos:start="89:9" pos:end="89:23"><expr pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:18">flipped</name></name> <operator pos:start="89:20" pos:end="89:20">=</operator> <literal type="number" pos:start="89:22" pos:end="89:22">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
