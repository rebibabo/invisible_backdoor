<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13287.c" pos:tabs="8"><function pos:start="1:1" pos:end="179:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">vb_decode_framedata</name><parameter_list pos:start="1:31" pos:end="1:79">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:43">VBDecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">c</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:66"><decl pos:start="1:49" pos:end="1:66"><type pos:start="1:49" pos:end="1:66"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:61">uint8_t</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">buf</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:78"><decl pos:start="1:69" pos:end="1:78"><type pos:start="1:69" pos:end="1:78"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:78">offset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="179:1">{<block_content pos:start="5:5" pos:end="177:13">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">prev</name></decl>, <decl pos:start="5:20" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">cur</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">blk</name></decl>, <decl pos:start="7:14" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:19">blocks</name></decl>, <decl pos:start="7:22" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:22">t</name></decl>, <decl pos:start="7:25" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:28">blk2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">blocktypes</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">x</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">y</name></decl>, <decl pos:start="11:15" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:15">a</name></decl>, <decl pos:start="11:18" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:18">b</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">pattype</name></decl>, <decl pos:start="13:18" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:24">pattern</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:37"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:19">width</name> <init pos:start="15:21" pos:end="15:37">= <expr pos:start="15:23" pos:end="15:37"><name pos:start="15:23" pos:end="15:37"><name pos:start="15:23" pos:end="15:23">c</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:30">avctx</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:37">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:19">pstart</name> <init pos:start="17:21" pos:end="17:35">= <expr pos:start="17:23" pos:end="17:35"><name pos:start="17:23" pos:end="17:35"><name pos:start="17:23" pos:end="17:23">c</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:35">prev_frame</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:59"><decl pos:start="19:5" pos:end="19:58"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:17">pend</name> <init pos:start="19:19" pos:end="19:58">= <expr pos:start="19:21" pos:end="19:58"><name pos:start="19:21" pos:end="19:33"><name pos:start="19:21" pos:end="19:21">c</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:33">prev_frame</name></name> <operator pos:start="19:35" pos:end="19:35">+</operator> <name pos:start="19:37" pos:end="19:41">width</name><operator pos:start="19:42" pos:end="19:42">*</operator><name pos:start="19:43" pos:end="19:58"><name pos:start="19:43" pos:end="19:43">c</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:50">avctx</name><operator pos:start="19:51" pos:end="19:52">-&gt;</operator><name pos:start="19:53" pos:end="19:58">height</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:8">prev</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <name pos:start="23:12" pos:end="23:24"><name pos:start="23:12" pos:end="23:12">c</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:24">prev_frame</name></name> <operator pos:start="23:26" pos:end="23:26">+</operator> <name pos:start="23:28" pos:end="23:33">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:7">cur</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <name pos:start="25:11" pos:end="25:18"><name pos:start="25:11" pos:end="25:11">c</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:18">frame</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:62"><expr pos:start="29:5" pos:end="29:61"><name pos:start="29:5" pos:end="29:10">blocks</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <operator pos:start="29:14" pos:end="29:14">(</operator><name pos:start="29:15" pos:end="29:29"><name pos:start="29:15" pos:end="29:15">c</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:22">avctx</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:29">width</name></name> <operator pos:start="29:31" pos:end="29:32">&gt;&gt;</operator> <literal type="number" pos:start="29:34" pos:end="29:34">2</literal><operator pos:start="29:35" pos:end="29:35">)</operator> <operator pos:start="29:37" pos:end="29:37">*</operator> <operator pos:start="29:39" pos:end="29:39">(</operator><name pos:start="29:40" pos:end="29:55"><name pos:start="29:40" pos:end="29:40">c</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:47">avctx</name><operator pos:start="29:48" pos:end="29:49">-&gt;</operator><name pos:start="29:50" pos:end="29:55">height</name></name> <operator pos:start="29:57" pos:end="29:58">&gt;&gt;</operator> <literal type="number" pos:start="29:60" pos:end="29:60">2</literal><operator pos:start="29:61" pos:end="29:61">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:13"><expr pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:8">blk2</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</expr_stmt>

    <for pos:start="33:5" pos:end="175:5">for<control pos:start="33:8" pos:end="33:37">(<init pos:start="33:9" pos:end="33:16"><expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">blk</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>;</init> <condition pos:start="33:18" pos:end="33:30"><expr pos:start="33:18" pos:end="33:29"><name pos:start="33:18" pos:end="33:20">blk</name> <operator pos:start="33:22" pos:end="33:22">&lt;</operator> <name pos:start="33:24" pos:end="33:29">blocks</name></expr>;</condition> <incr pos:start="33:32" pos:end="33:36"><expr pos:start="33:32" pos:end="33:36"><name pos:start="33:32" pos:end="33:34">blk</name><operator pos:start="33:35" pos:end="33:36">++</operator></expr></incr>)</control><block pos:start="33:38" pos:end="175:5">{<block_content pos:start="35:9" pos:end="173:9">

        <if_stmt pos:start="35:9" pos:end="37:51"><if pos:start="35:9" pos:end="37:51">if<condition pos:start="35:11" pos:end="35:22">(<expr pos:start="35:12" pos:end="35:21"><operator pos:start="35:12" pos:end="35:12">!</operator><operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:16">blk</name> <operator pos:start="35:18" pos:end="35:18">&amp;</operator> <literal type="number" pos:start="35:20" pos:end="35:20">3</literal><operator pos:start="35:21" pos:end="35:21">)</operator></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:51"><block_content pos:start="37:13" pos:end="37:51">

            <expr_stmt pos:start="37:13" pos:end="37:51"><expr pos:start="37:13" pos:end="37:50"><name pos:start="37:13" pos:end="37:22">blocktypes</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <call pos:start="37:26" pos:end="37:50"><name pos:start="37:26" pos:end="37:44">bytestream_get_byte</name><argument_list pos:start="37:45" pos:end="37:50">(<argument pos:start="37:46" pos:end="37:49"><expr pos:start="37:46" pos:end="37:49"><operator pos:start="37:46" pos:end="37:46">&amp;</operator><name pos:start="37:47" pos:end="37:49">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <switch pos:start="39:9" pos:end="155:9">switch<condition pos:start="39:15" pos:end="39:33">(<expr pos:start="39:16" pos:end="39:32"><name pos:start="39:16" pos:end="39:25">blocktypes</name> <operator pos:start="39:27" pos:end="39:27">&amp;</operator> <literal type="number" pos:start="39:29" pos:end="39:32">0xC0</literal></expr>)</condition><block pos:start="39:34" pos:end="155:9">{<block_content pos:start="41:9" pos:end="153:18">

        <case pos:start="41:9" pos:end="41:18">case <expr pos:start="41:14" pos:end="41:17"><literal type="number" pos:start="41:14" pos:end="41:17">0x00</literal></expr>:</case> <comment type="line" pos:start="41:20" pos:end="41:25">//skip</comment>

            <for pos:start="43:13" pos:end="51:48">for<control pos:start="43:16" pos:end="43:34">(<init pos:start="43:17" pos:end="43:22"><expr pos:start="43:17" pos:end="43:21"><name pos:start="43:17" pos:end="43:17">y</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <literal type="number" pos:start="43:21" pos:end="43:21">0</literal></expr>;</init> <condition pos:start="43:24" pos:end="43:29"><expr pos:start="43:24" pos:end="43:28"><name pos:start="43:24" pos:end="43:24">y</name> <operator pos:start="43:26" pos:end="43:26">&lt;</operator> <literal type="number" pos:start="43:28" pos:end="43:28">4</literal></expr>;</condition> <incr pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:31">y</name><operator pos:start="43:32" pos:end="43:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:17" pos:end="51:48"><block_content pos:start="45:17" pos:end="51:48">

                <if_stmt pos:start="45:17" pos:end="51:48"><if pos:start="45:17" pos:end="47:61">if<condition pos:start="45:19" pos:end="45:60">(<expr pos:start="45:20" pos:end="45:59"><call pos:start="45:20" pos:end="45:59"><name pos:start="45:20" pos:end="45:29">check_line</name><argument_list pos:start="45:30" pos:end="45:59">(<argument pos:start="45:31" pos:end="45:44"><expr pos:start="45:31" pos:end="45:44"><name pos:start="45:31" pos:end="45:34">prev</name> <operator pos:start="45:36" pos:end="45:36">+</operator> <name pos:start="45:38" pos:end="45:38">y</name><operator pos:start="45:39" pos:end="45:39">*</operator><name pos:start="45:40" pos:end="45:44">width</name></expr></argument>, <argument pos:start="45:47" pos:end="45:52"><expr pos:start="45:47" pos:end="45:52"><name pos:start="45:47" pos:end="45:52">pstart</name></expr></argument>, <argument pos:start="45:55" pos:end="45:58"><expr pos:start="45:55" pos:end="45:58"><name pos:start="45:55" pos:end="45:58">pend</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:21" pos:end="47:61"><block_content pos:start="47:21" pos:end="47:61">

                    <expr_stmt pos:start="47:21" pos:end="47:61"><expr pos:start="47:21" pos:end="47:60"><call pos:start="47:21" pos:end="47:60"><name pos:start="47:21" pos:end="47:26">memcpy</name><argument_list pos:start="47:27" pos:end="47:60">(<argument pos:start="47:28" pos:end="47:40"><expr pos:start="47:28" pos:end="47:40"><name pos:start="47:28" pos:end="47:30">cur</name> <operator pos:start="47:32" pos:end="47:32">+</operator> <name pos:start="47:34" pos:end="47:34">y</name><operator pos:start="47:35" pos:end="47:35">*</operator><name pos:start="47:36" pos:end="47:40">width</name></expr></argument>, <argument pos:start="47:43" pos:end="47:56"><expr pos:start="47:43" pos:end="47:56"><name pos:start="47:43" pos:end="47:46">prev</name> <operator pos:start="47:48" pos:end="47:48">+</operator> <name pos:start="47:50" pos:end="47:50">y</name><operator pos:start="47:51" pos:end="47:51">*</operator><name pos:start="47:52" pos:end="47:56">width</name></expr></argument>, <argument pos:start="47:59" pos:end="47:59"><expr pos:start="47:59" pos:end="47:59"><literal type="number" pos:start="47:59" pos:end="47:59">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="49:17" pos:end="51:48">else<block type="pseudo" pos:start="51:21" pos:end="51:48"><block_content pos:start="51:21" pos:end="51:48">

                    <expr_stmt pos:start="51:21" pos:end="51:48"><expr pos:start="51:21" pos:end="51:47"><call pos:start="51:21" pos:end="51:47"><name pos:start="51:21" pos:end="51:26">memset</name><argument_list pos:start="51:27" pos:end="51:47">(<argument pos:start="51:28" pos:end="51:40"><expr pos:start="51:28" pos:end="51:40"><name pos:start="51:28" pos:end="51:30">cur</name> <operator pos:start="51:32" pos:end="51:32">+</operator> <name pos:start="51:34" pos:end="51:34">y</name><operator pos:start="51:35" pos:end="51:35">*</operator><name pos:start="51:36" pos:end="51:40">width</name></expr></argument>, <argument pos:start="51:43" pos:end="51:43"><expr pos:start="51:43" pos:end="51:43"><literal type="number" pos:start="51:43" pos:end="51:43">0</literal></expr></argument>, <argument pos:start="51:46" pos:end="51:46"><expr pos:start="51:46" pos:end="51:46"><literal type="number" pos:start="51:46" pos:end="51:46">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></for>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        <case pos:start="55:9" pos:end="55:18">case <expr pos:start="55:14" pos:end="55:17"><literal type="number" pos:start="55:14" pos:end="55:17">0x40</literal></expr>:</case>

            <expr_stmt pos:start="57:13" pos:end="57:42"><expr pos:start="57:13" pos:end="57:41"><name pos:start="57:13" pos:end="57:13">t</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <call pos:start="57:17" pos:end="57:41"><name pos:start="57:17" pos:end="57:35">bytestream_get_byte</name><argument_list pos:start="57:36" pos:end="57:41">(<argument pos:start="57:37" pos:end="57:40"><expr pos:start="57:37" pos:end="57:40"><operator pos:start="57:37" pos:end="57:37">&amp;</operator><name pos:start="57:38" pos:end="57:40">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="85:13"><if pos:start="59:13" pos:end="67:13">if<condition pos:start="59:15" pos:end="59:18">(<expr pos:start="59:16" pos:end="59:17"><operator pos:start="59:16" pos:end="59:16">!</operator><name pos:start="59:17" pos:end="59:17">t</name></expr>)</condition><block pos:start="59:19" pos:end="67:13">{<block_content pos:start="61:17" pos:end="65:26"> <comment type="line" pos:start="59:21" pos:end="59:31">//raw block</comment>

                <for pos:start="61:17" pos:end="63:56">for<control pos:start="61:20" pos:end="61:38">(<init pos:start="61:21" pos:end="61:26"><expr pos:start="61:21" pos:end="61:25"><name pos:start="61:21" pos:end="61:21">y</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="number" pos:start="61:25" pos:end="61:25">0</literal></expr>;</init> <condition pos:start="61:28" pos:end="61:33"><expr pos:start="61:28" pos:end="61:32"><name pos:start="61:28" pos:end="61:28">y</name> <operator pos:start="61:30" pos:end="61:30">&lt;</operator> <literal type="number" pos:start="61:32" pos:end="61:32">4</literal></expr>;</condition> <incr pos:start="61:35" pos:end="61:37"><expr pos:start="61:35" pos:end="61:37"><name pos:start="61:35" pos:end="61:35">y</name><operator pos:start="61:36" pos:end="61:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="63:21" pos:end="63:56"><block_content pos:start="63:21" pos:end="63:56">

                    <expr_stmt pos:start="63:21" pos:end="63:56"><expr pos:start="63:21" pos:end="63:55"><call pos:start="63:21" pos:end="63:55"><name pos:start="63:21" pos:end="63:26">memcpy</name><argument_list pos:start="63:27" pos:end="63:55">(<argument pos:start="63:28" pos:end="63:40"><expr pos:start="63:28" pos:end="63:40"><name pos:start="63:28" pos:end="63:30">cur</name> <operator pos:start="63:32" pos:end="63:32">+</operator> <name pos:start="63:34" pos:end="63:34">y</name><operator pos:start="63:35" pos:end="63:35">*</operator><name pos:start="63:36" pos:end="63:40">width</name></expr></argument>, <argument pos:start="63:43" pos:end="63:51"><expr pos:start="63:43" pos:end="63:51"><name pos:start="63:43" pos:end="63:45">buf</name> <operator pos:start="63:47" pos:end="63:47">+</operator> <name pos:start="63:49" pos:end="63:49">y</name><operator pos:start="63:50" pos:end="63:50">*</operator><literal type="number" pos:start="63:51" pos:end="63:51">4</literal></expr></argument>, <argument pos:start="63:54" pos:end="63:54"><expr pos:start="63:54" pos:end="63:54"><literal type="number" pos:start="63:54" pos:end="63:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="65:17" pos:end="65:26"><expr pos:start="65:17" pos:end="65:25"><name pos:start="65:17" pos:end="65:19">buf</name> <operator pos:start="65:21" pos:end="65:22">+=</operator> <literal type="number" pos:start="65:24" pos:end="65:25">16</literal></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="67:14" pos:end="85:13">else<block pos:start="67:18" pos:end="85:13">{<block_content pos:start="69:17" pos:end="83:52"> <comment type="line" pos:start="67:20" pos:end="67:41">// motion compensation</comment>

                <expr_stmt pos:start="69:17" pos:end="69:38"><expr pos:start="69:17" pos:end="69:37"><name pos:start="69:17" pos:end="69:17">x</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <operator pos:start="69:21" pos:end="69:21">(</operator><operator pos:start="69:22" pos:end="69:22">(</operator><name pos:start="69:23" pos:end="69:23">t</name> <operator pos:start="69:25" pos:end="69:25">&amp;</operator> <literal type="number" pos:start="69:27" pos:end="69:29">0xF</literal><operator pos:start="69:30" pos:end="69:30">)</operator><operator pos:start="69:31" pos:end="69:31">^</operator><literal type="number" pos:start="69:32" pos:end="69:32">8</literal><operator pos:start="69:33" pos:end="69:33">)</operator> <operator pos:start="69:35" pos:end="69:35">-</operator> <literal type="number" pos:start="69:37" pos:end="69:37">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:38"><expr pos:start="71:17" pos:end="71:37"><name pos:start="71:17" pos:end="71:17">y</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <operator pos:start="71:21" pos:end="71:21">(</operator><operator pos:start="71:22" pos:end="71:22">(</operator><name pos:start="71:23" pos:end="71:23">t</name> <operator pos:start="71:25" pos:end="71:26">&gt;&gt;</operator> <literal type="number" pos:start="71:28" pos:end="71:28">4</literal><operator pos:start="71:29" pos:end="71:29">)</operator> <operator pos:start="71:31" pos:end="71:31">^</operator><literal type="number" pos:start="71:32" pos:end="71:32">8</literal><operator pos:start="71:33" pos:end="71:33">)</operator> <operator pos:start="71:35" pos:end="71:35">-</operator> <literal type="number" pos:start="71:37" pos:end="71:37">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:32"><expr pos:start="73:17" pos:end="73:31"><name pos:start="73:17" pos:end="73:17">t</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:21">x</name> <operator pos:start="73:23" pos:end="73:23">+</operator> <name pos:start="73:25" pos:end="73:25">y</name><operator pos:start="73:26" pos:end="73:26">*</operator><name pos:start="73:27" pos:end="73:31">width</name></expr>;</expr_stmt>

                <for pos:start="75:17" pos:end="83:52">for<control pos:start="75:20" pos:end="75:38">(<init pos:start="75:21" pos:end="75:26"><expr pos:start="75:21" pos:end="75:25"><name pos:start="75:21" pos:end="75:21">y</name> <operator pos:start="75:23" pos:end="75:23">=</operator> <literal type="number" pos:start="75:25" pos:end="75:25">0</literal></expr>;</init> <condition pos:start="75:28" pos:end="75:33"><expr pos:start="75:28" pos:end="75:32"><name pos:start="75:28" pos:end="75:28">y</name> <operator pos:start="75:30" pos:end="75:30">&lt;</operator> <literal type="number" pos:start="75:32" pos:end="75:32">4</literal></expr>;</condition> <incr pos:start="75:35" pos:end="75:37"><expr pos:start="75:35" pos:end="75:37"><name pos:start="75:35" pos:end="75:35">y</name><operator pos:start="75:36" pos:end="75:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="77:21" pos:end="83:52"><block_content pos:start="77:21" pos:end="83:52">

                    <if_stmt pos:start="77:21" pos:end="83:52"><if pos:start="77:21" pos:end="79:69">if<condition pos:start="77:23" pos:end="77:68">(<expr pos:start="77:24" pos:end="77:67"><call pos:start="77:24" pos:end="77:67"><name pos:start="77:24" pos:end="77:33">check_line</name><argument_list pos:start="77:34" pos:end="77:67">(<argument pos:start="77:35" pos:end="77:52"><expr pos:start="77:35" pos:end="77:52"><name pos:start="77:35" pos:end="77:38">prev</name> <operator pos:start="77:40" pos:end="77:40">+</operator> <name pos:start="77:42" pos:end="77:42">t</name> <operator pos:start="77:44" pos:end="77:44">+</operator> <name pos:start="77:46" pos:end="77:46">y</name><operator pos:start="77:47" pos:end="77:47">*</operator><name pos:start="77:48" pos:end="77:52">width</name></expr></argument>, <argument pos:start="77:55" pos:end="77:60"><expr pos:start="77:55" pos:end="77:60"><name pos:start="77:55" pos:end="77:60">pstart</name></expr></argument>, <argument pos:start="77:63" pos:end="77:66"><expr pos:start="77:63" pos:end="77:66"><name pos:start="77:63" pos:end="77:66">pend</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="79:25" pos:end="79:69"><block_content pos:start="79:25" pos:end="79:69">

                        <expr_stmt pos:start="79:25" pos:end="79:69"><expr pos:start="79:25" pos:end="79:68"><call pos:start="79:25" pos:end="79:68"><name pos:start="79:25" pos:end="79:30">memcpy</name><argument_list pos:start="79:31" pos:end="79:68">(<argument pos:start="79:32" pos:end="79:44"><expr pos:start="79:32" pos:end="79:44"><name pos:start="79:32" pos:end="79:34">cur</name> <operator pos:start="79:36" pos:end="79:36">+</operator> <name pos:start="79:38" pos:end="79:38">y</name><operator pos:start="79:39" pos:end="79:39">*</operator><name pos:start="79:40" pos:end="79:44">width</name></expr></argument>, <argument pos:start="79:47" pos:end="79:64"><expr pos:start="79:47" pos:end="79:64"><name pos:start="79:47" pos:end="79:50">prev</name> <operator pos:start="79:52" pos:end="79:52">+</operator> <name pos:start="79:54" pos:end="79:54">t</name> <operator pos:start="79:56" pos:end="79:56">+</operator> <name pos:start="79:58" pos:end="79:58">y</name><operator pos:start="79:59" pos:end="79:59">*</operator><name pos:start="79:60" pos:end="79:64">width</name></expr></argument>, <argument pos:start="79:67" pos:end="79:67"><expr pos:start="79:67" pos:end="79:67"><literal type="number" pos:start="79:67" pos:end="79:67">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="81:21" pos:end="83:52">else<block type="pseudo" pos:start="83:25" pos:end="83:52"><block_content pos:start="83:25" pos:end="83:52">

                        <expr_stmt pos:start="83:25" pos:end="83:52"><expr pos:start="83:25" pos:end="83:51"><call pos:start="83:25" pos:end="83:51"><name pos:start="83:25" pos:end="83:30">memset</name><argument_list pos:start="83:31" pos:end="83:51">(<argument pos:start="83:32" pos:end="83:44"><expr pos:start="83:32" pos:end="83:44"><name pos:start="83:32" pos:end="83:34">cur</name> <operator pos:start="83:36" pos:end="83:36">+</operator> <name pos:start="83:38" pos:end="83:38">y</name><operator pos:start="83:39" pos:end="83:39">*</operator><name pos:start="83:40" pos:end="83:44">width</name></expr></argument>, <argument pos:start="83:47" pos:end="83:47"><expr pos:start="83:47" pos:end="83:47"><literal type="number" pos:start="83:47" pos:end="83:47">0</literal></expr></argument>, <argument pos:start="83:50" pos:end="83:50"><expr pos:start="83:50" pos:end="83:50"><literal type="number" pos:start="83:50" pos:end="83:50">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        <case pos:start="89:9" pos:end="89:18">case <expr pos:start="89:14" pos:end="89:17"><literal type="number" pos:start="89:14" pos:end="89:17">0x80</literal></expr>:</case> <comment type="line" pos:start="89:20" pos:end="89:26">// fill</comment>

            <expr_stmt pos:start="91:13" pos:end="91:42"><expr pos:start="91:13" pos:end="91:41"><name pos:start="91:13" pos:end="91:13">t</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <call pos:start="91:17" pos:end="91:41"><name pos:start="91:17" pos:end="91:35">bytestream_get_byte</name><argument_list pos:start="91:36" pos:end="91:41">(<argument pos:start="91:37" pos:end="91:40"><expr pos:start="91:37" pos:end="91:40"><operator pos:start="91:37" pos:end="91:37">&amp;</operator><name pos:start="91:38" pos:end="91:40">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="93:13" pos:end="95:44">for<control pos:start="93:16" pos:end="93:34">(<init pos:start="93:17" pos:end="93:22"><expr pos:start="93:17" pos:end="93:21"><name pos:start="93:17" pos:end="93:17">y</name> <operator pos:start="93:19" pos:end="93:19">=</operator> <literal type="number" pos:start="93:21" pos:end="93:21">0</literal></expr>;</init> <condition pos:start="93:24" pos:end="93:29"><expr pos:start="93:24" pos:end="93:28"><name pos:start="93:24" pos:end="93:24">y</name> <operator pos:start="93:26" pos:end="93:26">&lt;</operator> <literal type="number" pos:start="93:28" pos:end="93:28">4</literal></expr>;</condition> <incr pos:start="93:31" pos:end="93:33"><expr pos:start="93:31" pos:end="93:33"><name pos:start="93:31" pos:end="93:31">y</name><operator pos:start="93:32" pos:end="93:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="95:17" pos:end="95:44"><block_content pos:start="95:17" pos:end="95:44">

                <expr_stmt pos:start="95:17" pos:end="95:44"><expr pos:start="95:17" pos:end="95:43"><call pos:start="95:17" pos:end="95:43"><name pos:start="95:17" pos:end="95:22">memset</name><argument_list pos:start="95:23" pos:end="95:43">(<argument pos:start="95:24" pos:end="95:36"><expr pos:start="95:24" pos:end="95:36"><name pos:start="95:24" pos:end="95:26">cur</name> <operator pos:start="95:28" pos:end="95:28">+</operator> <name pos:start="95:30" pos:end="95:30">y</name><operator pos:start="95:31" pos:end="95:31">*</operator><name pos:start="95:32" pos:end="95:36">width</name></expr></argument>, <argument pos:start="95:39" pos:end="95:39"><expr pos:start="95:39" pos:end="95:39"><name pos:start="95:39" pos:end="95:39">t</name></expr></argument>, <argument pos:start="95:42" pos:end="95:42"><expr pos:start="95:42" pos:end="95:42"><literal type="number" pos:start="95:42" pos:end="95:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        <case pos:start="99:9" pos:end="99:18">case <expr pos:start="99:14" pos:end="99:17"><literal type="number" pos:start="99:14" pos:end="99:17">0xC0</literal></expr>:</case> <comment type="line" pos:start="99:20" pos:end="99:34">// pattern fill</comment>

            <expr_stmt pos:start="101:13" pos:end="101:42"><expr pos:start="101:13" pos:end="101:41"><name pos:start="101:13" pos:end="101:13">t</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <call pos:start="101:17" pos:end="101:41"><name pos:start="101:17" pos:end="101:35">bytestream_get_byte</name><argument_list pos:start="101:36" pos:end="101:41">(<argument pos:start="101:37" pos:end="101:40"><expr pos:start="101:37" pos:end="101:40"><operator pos:start="101:37" pos:end="101:37">&amp;</operator><name pos:start="101:38" pos:end="101:40">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:29"><expr pos:start="103:13" pos:end="103:28"><name pos:start="103:13" pos:end="103:19">pattype</name> <operator pos:start="103:21" pos:end="103:21">=</operator> <name pos:start="103:23" pos:end="103:23">t</name> <operator pos:start="103:25" pos:end="103:26">&gt;&gt;</operator> <literal type="number" pos:start="103:28" pos:end="103:28">6</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:44"><expr pos:start="105:13" pos:end="105:43"><name pos:start="105:13" pos:end="105:19">pattern</name> <operator pos:start="105:21" pos:end="105:21">=</operator> <name pos:start="105:23" pos:end="105:43"><name pos:start="105:23" pos:end="105:33">vb_patterns</name><index pos:start="105:34" pos:end="105:43">[<expr pos:start="105:35" pos:end="105:42"><name pos:start="105:35" pos:end="105:35">t</name> <operator pos:start="105:37" pos:end="105:37">&amp;</operator> <literal type="number" pos:start="105:39" pos:end="105:42">0x3F</literal></expr>]</index></name></expr>;</expr_stmt>

            <switch pos:start="107:13" pos:end="151:13">switch<condition pos:start="107:19" pos:end="107:27">(<expr pos:start="107:20" pos:end="107:26"><name pos:start="107:20" pos:end="107:26">pattype</name></expr>)</condition><block pos:start="107:28" pos:end="151:13">{<block_content pos:start="109:13" pos:end="149:26">

            <case pos:start="109:13" pos:end="109:19">case <expr pos:start="109:18" pos:end="109:18"><literal type="number" pos:start="109:18" pos:end="109:18">0</literal></expr>:</case>

                <expr_stmt pos:start="111:17" pos:end="111:46"><expr pos:start="111:17" pos:end="111:45"><name pos:start="111:17" pos:end="111:17">a</name> <operator pos:start="111:19" pos:end="111:19">=</operator> <call pos:start="111:21" pos:end="111:45"><name pos:start="111:21" pos:end="111:39">bytestream_get_byte</name><argument_list pos:start="111:40" pos:end="111:45">(<argument pos:start="111:41" pos:end="111:44"><expr pos:start="111:41" pos:end="111:44"><operator pos:start="111:41" pos:end="111:41">&amp;</operator><name pos:start="111:42" pos:end="111:44">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:46"><expr pos:start="113:17" pos:end="113:45"><name pos:start="113:17" pos:end="113:17">b</name> <operator pos:start="113:19" pos:end="113:19">=</operator> <call pos:start="113:21" pos:end="113:45"><name pos:start="113:21" pos:end="113:39">bytestream_get_byte</name><argument_list pos:start="113:40" pos:end="113:45">(<argument pos:start="113:41" pos:end="113:44"><expr pos:start="113:41" pos:end="113:44"><operator pos:start="113:41" pos:end="113:41">&amp;</operator><name pos:start="113:42" pos:end="113:44">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="115:17" pos:end="119:65">for<control pos:start="115:20" pos:end="115:38">(<init pos:start="115:21" pos:end="115:26"><expr pos:start="115:21" pos:end="115:25"><name pos:start="115:21" pos:end="115:21">y</name> <operator pos:start="115:23" pos:end="115:23">=</operator> <literal type="number" pos:start="115:25" pos:end="115:25">0</literal></expr>;</init> <condition pos:start="115:28" pos:end="115:33"><expr pos:start="115:28" pos:end="115:32"><name pos:start="115:28" pos:end="115:28">y</name> <operator pos:start="115:30" pos:end="115:30">&lt;</operator> <literal type="number" pos:start="115:32" pos:end="115:32">4</literal></expr>;</condition> <incr pos:start="115:35" pos:end="115:37"><expr pos:start="115:35" pos:end="115:37"><name pos:start="115:35" pos:end="115:35">y</name><operator pos:start="115:36" pos:end="115:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="117:21" pos:end="119:65"><block_content pos:start="117:21" pos:end="119:65">

                    <for pos:start="117:21" pos:end="119:65">for<control pos:start="117:24" pos:end="117:57">(<init pos:start="117:25" pos:end="117:30"><expr pos:start="117:25" pos:end="117:29"><name pos:start="117:25" pos:end="117:25">x</name> <operator pos:start="117:27" pos:end="117:27">=</operator> <literal type="number" pos:start="117:29" pos:end="117:29">0</literal></expr>;</init> <condition pos:start="117:32" pos:end="117:37"><expr pos:start="117:32" pos:end="117:36"><name pos:start="117:32" pos:end="117:32">x</name> <operator pos:start="117:34" pos:end="117:34">&lt;</operator> <literal type="number" pos:start="117:36" pos:end="117:36">4</literal></expr>;</condition> <incr pos:start="117:39" pos:end="117:56"><expr pos:start="117:39" pos:end="117:41"><name pos:start="117:39" pos:end="117:39">x</name><operator pos:start="117:40" pos:end="117:41">++</operator></expr><operator pos:start="117:42" pos:end="117:42">,</operator> <expr pos:start="117:44" pos:end="117:56"><name pos:start="117:44" pos:end="117:50">pattern</name> <operator pos:start="117:52" pos:end="117:54">&gt;&gt;=</operator> <literal type="number" pos:start="117:56" pos:end="117:56">1</literal></expr></incr>)</control><block type="pseudo" pos:start="119:25" pos:end="119:65"><block_content pos:start="119:25" pos:end="119:65">

                        <expr_stmt pos:start="119:25" pos:end="119:65"><expr pos:start="119:25" pos:end="119:64"><name pos:start="119:25" pos:end="119:40"><name pos:start="119:25" pos:end="119:27">cur</name><index pos:start="119:28" pos:end="119:40">[<expr pos:start="119:29" pos:end="119:39"><name pos:start="119:29" pos:end="119:29">x</name> <operator pos:start="119:31" pos:end="119:31">+</operator> <name pos:start="119:33" pos:end="119:33">y</name><operator pos:start="119:34" pos:end="119:34">*</operator><name pos:start="119:35" pos:end="119:39">width</name></expr>]</index></name> <operator pos:start="119:42" pos:end="119:42">=</operator> <ternary pos:start="119:44" pos:end="119:64"><condition pos:start="119:44" pos:end="119:58"><expr pos:start="119:44" pos:end="119:56"><operator pos:start="119:44" pos:end="119:44">(</operator><name pos:start="119:45" pos:end="119:51">pattern</name> <operator pos:start="119:53" pos:end="119:53">&amp;</operator> <literal type="number" pos:start="119:55" pos:end="119:55">1</literal><operator pos:start="119:56" pos:end="119:56">)</operator></expr> ?</condition><then pos:start="119:60" pos:end="119:60"> <expr pos:start="119:60" pos:end="119:60"><name pos:start="119:60" pos:end="119:60">b</name></expr> </then><else pos:start="119:62" pos:end="119:64">: <expr pos:start="119:64" pos:end="119:64"><name pos:start="119:64" pos:end="119:64">a</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

                <break pos:start="121:17" pos:end="121:22">break;</break>

            <case pos:start="123:13" pos:end="123:19">case <expr pos:start="123:18" pos:end="123:18"><literal type="number" pos:start="123:18" pos:end="123:18">1</literal></expr>:</case>

                <expr_stmt pos:start="125:17" pos:end="125:35"><expr pos:start="125:17" pos:end="125:34"><name pos:start="125:17" pos:end="125:23">pattern</name> <operator pos:start="125:25" pos:end="125:25">=</operator> <operator pos:start="125:27" pos:end="125:27">~</operator><name pos:start="125:28" pos:end="125:34">pattern</name></expr>;</expr_stmt>

            <case pos:start="127:13" pos:end="127:19">case <expr pos:start="127:18" pos:end="127:18"><literal type="number" pos:start="127:18" pos:end="127:18">2</literal></expr>:</case>

                <expr_stmt pos:start="129:17" pos:end="129:46"><expr pos:start="129:17" pos:end="129:45"><name pos:start="129:17" pos:end="129:17">a</name> <operator pos:start="129:19" pos:end="129:19">=</operator> <call pos:start="129:21" pos:end="129:45"><name pos:start="129:21" pos:end="129:39">bytestream_get_byte</name><argument_list pos:start="129:40" pos:end="129:45">(<argument pos:start="129:41" pos:end="129:44"><expr pos:start="129:41" pos:end="129:44"><operator pos:start="129:41" pos:end="129:41">&amp;</operator><name pos:start="129:42" pos:end="129:44">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="131:17" pos:end="141:49">for<control pos:start="131:20" pos:end="131:38">(<init pos:start="131:21" pos:end="131:26"><expr pos:start="131:21" pos:end="131:25"><name pos:start="131:21" pos:end="131:21">y</name> <operator pos:start="131:23" pos:end="131:23">=</operator> <literal type="number" pos:start="131:25" pos:end="131:25">0</literal></expr>;</init> <condition pos:start="131:28" pos:end="131:33"><expr pos:start="131:28" pos:end="131:32"><name pos:start="131:28" pos:end="131:28">y</name> <operator pos:start="131:30" pos:end="131:30">&lt;</operator> <literal type="number" pos:start="131:32" pos:end="131:32">4</literal></expr>;</condition> <incr pos:start="131:35" pos:end="131:37"><expr pos:start="131:35" pos:end="131:37"><name pos:start="131:35" pos:end="131:35">y</name><operator pos:start="131:36" pos:end="131:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="133:21" pos:end="141:49"><block_content pos:start="133:21" pos:end="141:49">

                    <for pos:start="133:21" pos:end="141:49">for<control pos:start="133:24" pos:end="133:57">(<init pos:start="133:25" pos:end="133:30"><expr pos:start="133:25" pos:end="133:29"><name pos:start="133:25" pos:end="133:25">x</name> <operator pos:start="133:27" pos:end="133:27">=</operator> <literal type="number" pos:start="133:29" pos:end="133:29">0</literal></expr>;</init> <condition pos:start="133:32" pos:end="133:37"><expr pos:start="133:32" pos:end="133:36"><name pos:start="133:32" pos:end="133:32">x</name> <operator pos:start="133:34" pos:end="133:34">&lt;</operator> <literal type="number" pos:start="133:36" pos:end="133:36">4</literal></expr>;</condition> <incr pos:start="133:39" pos:end="133:56"><expr pos:start="133:39" pos:end="133:41"><name pos:start="133:39" pos:end="133:39">x</name><operator pos:start="133:40" pos:end="133:41">++</operator></expr><operator pos:start="133:42" pos:end="133:42">,</operator> <expr pos:start="133:44" pos:end="133:56"><name pos:start="133:44" pos:end="133:50">pattern</name> <operator pos:start="133:52" pos:end="133:54">&gt;&gt;=</operator> <literal type="number" pos:start="133:56" pos:end="133:56">1</literal></expr></incr>)</control><block type="pseudo" pos:start="135:25" pos:end="141:49"><block_content pos:start="135:25" pos:end="141:49">

                        <if_stmt pos:start="135:25" pos:end="141:49"><if pos:start="135:25" pos:end="137:65">if<condition pos:start="135:27" pos:end="135:88">(<expr pos:start="135:28" pos:end="135:87"><name pos:start="135:28" pos:end="135:34">pattern</name> <operator pos:start="135:36" pos:end="135:36">&amp;</operator> <literal type="number" pos:start="135:38" pos:end="135:38">1</literal> <operator pos:start="135:40" pos:end="135:41">&amp;&amp;</operator> <call pos:start="135:43" pos:end="135:87"><name pos:start="135:43" pos:end="135:53">check_pixel</name><argument_list pos:start="135:54" pos:end="135:87">(<argument pos:start="135:55" pos:end="135:72"><expr pos:start="135:55" pos:end="135:72"><name pos:start="135:55" pos:end="135:58">prev</name> <operator pos:start="135:60" pos:end="135:60">+</operator> <name pos:start="135:62" pos:end="135:62">x</name> <operator pos:start="135:64" pos:end="135:64">+</operator> <name pos:start="135:66" pos:end="135:66">y</name><operator pos:start="135:67" pos:end="135:67">*</operator><name pos:start="135:68" pos:end="135:72">width</name></expr></argument>, <argument pos:start="135:75" pos:end="135:80"><expr pos:start="135:75" pos:end="135:80"><name pos:start="135:75" pos:end="135:80">pstart</name></expr></argument>, <argument pos:start="135:83" pos:end="135:86"><expr pos:start="135:83" pos:end="135:86"><name pos:start="135:83" pos:end="135:86">pend</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="137:29" pos:end="137:65"><block_content pos:start="137:29" pos:end="137:65">

                            <expr_stmt pos:start="137:29" pos:end="137:65"><expr pos:start="137:29" pos:end="137:64"><name pos:start="137:29" pos:end="137:44"><name pos:start="137:29" pos:end="137:31">cur</name><index pos:start="137:32" pos:end="137:44">[<expr pos:start="137:33" pos:end="137:43"><name pos:start="137:33" pos:end="137:33">x</name> <operator pos:start="137:35" pos:end="137:35">+</operator> <name pos:start="137:37" pos:end="137:37">y</name><operator pos:start="137:38" pos:end="137:38">*</operator><name pos:start="137:39" pos:end="137:43">width</name></expr>]</index></name> <operator pos:start="137:46" pos:end="137:46">=</operator> <name pos:start="137:48" pos:end="137:64"><name pos:start="137:48" pos:end="137:51">prev</name><index pos:start="137:52" pos:end="137:64">[<expr pos:start="137:53" pos:end="137:63"><name pos:start="137:53" pos:end="137:53">x</name> <operator pos:start="137:55" pos:end="137:55">+</operator> <name pos:start="137:57" pos:end="137:57">y</name><operator pos:start="137:58" pos:end="137:58">*</operator><name pos:start="137:59" pos:end="137:63">width</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="139:25" pos:end="141:49">else<block type="pseudo" pos:start="141:29" pos:end="141:49"><block_content pos:start="141:29" pos:end="141:49">

                            <expr_stmt pos:start="141:29" pos:end="141:49"><expr pos:start="141:29" pos:end="141:48"><name pos:start="141:29" pos:end="141:44"><name pos:start="141:29" pos:end="141:31">cur</name><index pos:start="141:32" pos:end="141:44">[<expr pos:start="141:33" pos:end="141:43"><name pos:start="141:33" pos:end="141:33">x</name> <operator pos:start="141:35" pos:end="141:35">+</operator> <name pos:start="141:37" pos:end="141:37">y</name><operator pos:start="141:38" pos:end="141:38">*</operator><name pos:start="141:39" pos:end="141:43">width</name></expr>]</index></name> <operator pos:start="141:46" pos:end="141:46">=</operator> <name pos:start="141:48" pos:end="141:48">a</name></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></for></block_content></block></for>

                <break pos:start="143:17" pos:end="143:22">break;</break>

            <case pos:start="145:13" pos:end="145:19">case <expr pos:start="145:18" pos:end="145:18"><literal type="number" pos:start="145:18" pos:end="145:18">3</literal></expr>:</case>

                <expr_stmt pos:start="147:17" pos:end="147:80"><expr pos:start="147:17" pos:end="147:79"><call pos:start="147:17" pos:end="147:79"><name pos:start="147:17" pos:end="147:22">av_log</name><argument_list pos:start="147:23" pos:end="147:79">(<argument pos:start="147:24" pos:end="147:31"><expr pos:start="147:24" pos:end="147:31"><name pos:start="147:24" pos:end="147:31"><name pos:start="147:24" pos:end="147:24">c</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:31">avctx</name></name></expr></argument>, <argument pos:start="147:34" pos:end="147:45"><expr pos:start="147:34" pos:end="147:45"><name pos:start="147:34" pos:end="147:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="147:48" pos:end="147:74"><expr pos:start="147:48" pos:end="147:74"><literal type="string" pos:start="147:48" pos:end="147:74">"Invalid opcode seen @%d\n"</literal></expr></argument>,<argument pos:start="147:76" pos:end="147:78"><expr pos:start="147:76" pos:end="147:78"><name pos:start="147:76" pos:end="147:78">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="149:17" pos:end="149:26">return <expr pos:start="149:24" pos:end="149:25"><operator pos:start="149:24" pos:end="149:24">-</operator><literal type="number" pos:start="149:25" pos:end="149:25">1</literal></expr>;</return>

            </block_content>}</block></switch>

            <break pos:start="153:13" pos:end="153:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="157:9" pos:end="157:25"><expr pos:start="157:9" pos:end="157:24"><name pos:start="157:9" pos:end="157:18">blocktypes</name> <operator pos:start="157:20" pos:end="157:22">&lt;&lt;=</operator> <literal type="number" pos:start="157:24" pos:end="157:24">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:18"><expr pos:start="159:9" pos:end="159:17"><name pos:start="159:9" pos:end="159:11">cur</name>  <operator pos:start="159:14" pos:end="159:15">+=</operator> <literal type="number" pos:start="159:17" pos:end="159:17">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:18"><expr pos:start="161:9" pos:end="161:17"><name pos:start="161:9" pos:end="161:12">prev</name> <operator pos:start="161:14" pos:end="161:15">+=</operator> <literal type="number" pos:start="161:17" pos:end="161:17">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:15"><expr pos:start="163:9" pos:end="163:14"><name pos:start="163:9" pos:end="163:12">blk2</name><operator pos:start="163:13" pos:end="163:14">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="173:9"><if pos:start="165:9" pos:end="173:9">if<condition pos:start="165:11" pos:end="165:32">(<expr pos:start="165:12" pos:end="165:31"><name pos:start="165:12" pos:end="165:15">blk2</name> <operator pos:start="165:17" pos:end="165:18">==</operator> <operator pos:start="165:20" pos:end="165:20">(</operator><name pos:start="165:21" pos:end="165:25">width</name> <operator pos:start="165:27" pos:end="165:28">&gt;&gt;</operator> <literal type="number" pos:start="165:30" pos:end="165:30">2</literal><operator pos:start="165:31" pos:end="165:31">)</operator></expr>)</condition><block pos:start="165:33" pos:end="173:9">{<block_content pos:start="167:13" pos:end="171:30">

            <expr_stmt pos:start="167:13" pos:end="167:21"><expr pos:start="167:13" pos:end="167:20"><name pos:start="167:13" pos:end="167:16">blk2</name> <operator pos:start="167:18" pos:end="167:18">=</operator> <literal type="number" pos:start="167:20" pos:end="167:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:30"><expr pos:start="169:13" pos:end="169:29"><name pos:start="169:13" pos:end="169:15">cur</name>  <operator pos:start="169:18" pos:end="169:19">+=</operator> <name pos:start="169:21" pos:end="169:25">width</name> <operator pos:start="169:27" pos:end="169:27">*</operator> <literal type="number" pos:start="169:29" pos:end="169:29">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:30"><expr pos:start="171:13" pos:end="171:29"><name pos:start="171:13" pos:end="171:16">prev</name> <operator pos:start="171:18" pos:end="171:19">+=</operator> <name pos:start="171:21" pos:end="171:25">width</name> <operator pos:start="171:27" pos:end="171:27">*</operator> <literal type="number" pos:start="171:29" pos:end="171:29">3</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="177:5" pos:end="177:13">return <expr pos:start="177:12" pos:end="177:12"><literal type="number" pos:start="177:12" pos:end="177:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
