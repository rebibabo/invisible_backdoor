<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8041.c" pos:tabs="8"><function pos:start="1:1" pos:end="245:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">vorbis_floor1_decode</name><parameter_list pos:start="1:32" pos:end="3:67">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:46">vorbis_context</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">vc</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:54"><decl pos:start="3:33" pos:end="3:54"><type pos:start="3:33" pos:end="3:54"><name pos:start="3:33" pos:end="3:49">vorbis_floor_data</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:54">vfu</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:66"><decl pos:start="3:57" pos:end="3:66"><type pos:start="3:57" pos:end="3:66"><name pos:start="3:57" pos:end="3:61">float</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:66">vec</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="245:1">{<block_content pos:start="7:5" pos:end="243:13">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">vorbis_floor1</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">vf</name> <init pos:start="7:23" pos:end="7:32">= <expr pos:start="7:25" pos:end="7:32"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:32"><name pos:start="7:26" pos:end="7:28">vfu</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:32">t1</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">GetBitContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">gb</name> <init pos:start="9:23" pos:end="9:31">= <expr pos:start="9:25" pos:end="9:31"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:31"><name pos:start="9:26" pos:end="9:27">vc</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:31">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint16_t</name></type> <name pos:start="11:14" pos:end="11:23"><name pos:start="11:14" pos:end="11:20">range_v</name><index pos:start="11:21" pos:end="11:23">[<expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">4</literal></expr>]</index></name> <init pos:start="11:25" pos:end="11:46">= <expr pos:start="11:27" pos:end="11:46"><block pos:start="11:27" pos:end="11:46">{ <expr pos:start="11:29" pos:end="11:31"><literal type="number" pos:start="11:29" pos:end="11:31">256</literal></expr>, <expr pos:start="11:34" pos:end="11:36"><literal type="number" pos:start="11:34" pos:end="11:36">128</literal></expr>, <expr pos:start="11:39" pos:end="11:40"><literal type="number" pos:start="11:39" pos:end="11:40">86</literal></expr>, <expr pos:start="11:43" pos:end="11:44"><literal type="number" pos:start="11:43" pos:end="11:44">64</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:49"><decl pos:start="13:5" pos:end="13:48"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:18">range</name> <init pos:start="13:20" pos:end="13:48">= <expr pos:start="13:22" pos:end="13:48"><name pos:start="13:22" pos:end="13:48"><name pos:start="13:22" pos:end="13:28">range_v</name><index pos:start="13:29" pos:end="13:48">[<expr pos:start="13:30" pos:end="13:47"><name pos:start="13:30" pos:end="13:43"><name pos:start="13:30" pos:end="13:31">vf</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:43">multiplier</name></name> <operator pos:start="13:45" pos:end="13:45">-</operator> <literal type="number" pos:start="13:47" pos:end="13:47">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint16_t</name></type> <name pos:start="15:14" pos:end="15:26"><name pos:start="15:14" pos:end="15:21">floor1_Y</name><index pos:start="15:22" pos:end="15:26">[<expr pos:start="15:23" pos:end="15:25"><literal type="number" pos:start="15:23" pos:end="15:25">258</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint16_t</name></type> <name pos:start="17:14" pos:end="17:32"><name pos:start="17:14" pos:end="17:27">floor1_Y_final</name><index pos:start="17:28" pos:end="17:32">[<expr pos:start="17:29" pos:end="17:31"><literal type="number" pos:start="17:29" pos:end="17:31">258</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:19">floor1_flag</name><index pos:start="19:20" pos:end="19:24">[<expr pos:start="19:21" pos:end="19:23"><literal type="number" pos:start="19:21" pos:end="19:23">258</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:68"><decl pos:start="21:5" pos:end="21:28"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">unsigned</name></type> <name pos:start="21:14" pos:end="21:28">partition_class</name></decl>, <decl pos:start="21:31" pos:end="21:34"><type ref="prev" pos:start="21:5" pos:end="21:12"/><name pos:start="21:31" pos:end="21:34">cdim</name></decl>, <decl pos:start="21:37" pos:end="21:41"><type ref="prev" pos:start="21:5" pos:end="21:12"/><name pos:start="21:37" pos:end="21:41">cbits</name></decl>, <decl pos:start="21:44" pos:end="21:47"><type ref="prev" pos:start="21:5" pos:end="21:12"/><name pos:start="21:44" pos:end="21:47">csub</name></decl>, <decl pos:start="21:50" pos:end="21:53"><type ref="prev" pos:start="21:5" pos:end="21:12"/><name pos:start="21:50" pos:end="21:53">cval</name></decl>, <decl pos:start="21:56" pos:end="21:61"><type ref="prev" pos:start="21:5" pos:end="21:12"/><name pos:start="21:56" pos:end="21:61">offset</name></decl>, <decl pos:start="21:64" pos:end="21:64"><type ref="prev" pos:start="21:5" pos:end="21:12"/><name pos:start="21:64" pos:end="21:64">i</name></decl>, <decl pos:start="21:67" pos:end="21:67"><type ref="prev" pos:start="21:5" pos:end="21:12"/><name pos:start="21:67" pos:end="21:67">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:48"><decl pos:start="23:5" pos:end="23:12"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:12">book</name></decl>, <decl pos:start="23:15" pos:end="23:17"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:15" pos:end="23:17">adx</name></decl>, <decl pos:start="23:20" pos:end="23:22"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:20" pos:end="23:22">ady</name></decl>, <decl pos:start="23:25" pos:end="23:26"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:25" pos:end="23:26">dy</name></decl>, <decl pos:start="23:29" pos:end="23:31"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:29" pos:end="23:31">off</name></decl>, <decl pos:start="23:34" pos:end="23:42"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:34" pos:end="23:42">predicted</name></decl>, <decl pos:start="23:45" pos:end="23:47"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:45" pos:end="23:47">err</name></decl>;</decl_stmt>





    <if_stmt pos:start="29:5" pos:end="31:17"><if pos:start="29:5" pos:end="31:17">if <condition pos:start="29:8" pos:end="29:23">(<expr pos:start="29:9" pos:end="29:22"><operator pos:start="29:9" pos:end="29:9">!</operator><call pos:start="29:10" pos:end="29:22"><name pos:start="29:10" pos:end="29:18">get_bits1</name><argument_list pos:start="29:19" pos:end="29:22">(<argument pos:start="29:20" pos:end="29:21"><expr pos:start="29:20" pos:end="29:21"><name pos:start="29:20" pos:end="29:21">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:17"><block_content pos:start="31:9" pos:end="31:17"> <comment type="line" pos:start="29:25" pos:end="29:34">// silence</comment>

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



<comment type="line" pos:start="35:1" pos:end="35:54">// Read values (or differences) for the floor's points</comment>



    <expr_stmt pos:start="39:5" pos:end="39:48"><expr pos:start="39:5" pos:end="39:47"><name pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:12">floor1_Y</name><index pos:start="39:13" pos:end="39:15">[<expr pos:start="39:14" pos:end="39:14"><literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>]</index></name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:47"><name pos:start="39:19" pos:end="39:26">get_bits</name><argument_list pos:start="39:27" pos:end="39:47">(<argument pos:start="39:28" pos:end="39:29"><expr pos:start="39:28" pos:end="39:29"><name pos:start="39:28" pos:end="39:29">gb</name></expr></argument>, <argument pos:start="39:32" pos:end="39:46"><expr pos:start="39:32" pos:end="39:46"><call pos:start="39:32" pos:end="39:46"><name pos:start="39:32" pos:end="39:35">ilog</name><argument_list pos:start="39:36" pos:end="39:46">(<argument pos:start="39:37" pos:end="39:45"><expr pos:start="39:37" pos:end="39:45"><name pos:start="39:37" pos:end="39:41">range</name> <operator pos:start="39:43" pos:end="39:43">-</operator> <literal type="number" pos:start="39:45" pos:end="39:45">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:48"><expr pos:start="41:5" pos:end="41:47"><name pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:12">floor1_Y</name><index pos:start="41:13" pos:end="41:15">[<expr pos:start="41:14" pos:end="41:14"><literal type="number" pos:start="41:14" pos:end="41:14">1</literal></expr>]</index></name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:47"><name pos:start="41:19" pos:end="41:26">get_bits</name><argument_list pos:start="41:27" pos:end="41:47">(<argument pos:start="41:28" pos:end="41:29"><expr pos:start="41:28" pos:end="41:29"><name pos:start="41:28" pos:end="41:29">gb</name></expr></argument>, <argument pos:start="41:32" pos:end="41:46"><expr pos:start="41:32" pos:end="41:46"><call pos:start="41:32" pos:end="41:46"><name pos:start="41:32" pos:end="41:35">ilog</name><argument_list pos:start="41:36" pos:end="41:46">(<argument pos:start="41:37" pos:end="41:45"><expr pos:start="41:37" pos:end="41:45"><name pos:start="41:37" pos:end="41:41">range</name> <operator pos:start="41:43" pos:end="41:43">-</operator> <literal type="number" pos:start="41:45" pos:end="41:45">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:76"><expr pos:start="45:5" pos:end="45:75"><call pos:start="45:5" pos:end="45:75"><name pos:start="45:5" pos:end="45:11">av_dlog</name><argument_list pos:start="45:12" pos:end="45:75">(<argument pos:start="45:13" pos:end="45:16"><expr pos:start="45:13" pos:end="45:16"><name pos:start="45:13" pos:end="45:16">NULL</name></expr></argument>, <argument pos:start="45:19" pos:end="45:48"><expr pos:start="45:19" pos:end="45:48"><literal type="string" pos:start="45:19" pos:end="45:48">"floor 0 Y %d floor 1 Y %d \n"</literal></expr></argument>, <argument pos:start="45:51" pos:end="45:61"><expr pos:start="45:51" pos:end="45:61"><name pos:start="45:51" pos:end="45:61"><name pos:start="45:51" pos:end="45:58">floor1_Y</name><index pos:start="45:59" pos:end="45:61">[<expr pos:start="45:60" pos:end="45:60"><literal type="number" pos:start="45:60" pos:end="45:60">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:64" pos:end="45:74"><expr pos:start="45:64" pos:end="45:74"><name pos:start="45:64" pos:end="45:74"><name pos:start="45:64" pos:end="45:71">floor1_Y</name><index pos:start="45:72" pos:end="45:74">[<expr pos:start="45:73" pos:end="45:73"><literal type="number" pos:start="45:73" pos:end="45:73">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:15"><expr pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:10">offset</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">2</literal></expr>;</expr_stmt>

    <for pos:start="51:5" pos:end="113:5">for <control pos:start="51:9" pos:end="51:40">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:35"><expr pos:start="51:17" pos:end="51:34"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <name pos:start="51:21" pos:end="51:34"><name pos:start="51:21" pos:end="51:22">vf</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:34">partitions</name></name></expr>;</condition> <incr pos:start="51:37" pos:end="51:39"><expr pos:start="51:37" pos:end="51:39"><operator pos:start="51:37" pos:end="51:38">++</operator><name pos:start="51:39" pos:end="51:39">i</name></expr></incr>)</control> <block pos:start="51:42" pos:end="113:5">{<block_content pos:start="53:9" pos:end="111:21">

        <expr_stmt pos:start="53:9" pos:end="53:49"><expr pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:23">partition_class</name> <operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:48"><name pos:start="53:27" pos:end="53:28">vf</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:45">partition_class</name><index pos:start="53:46" pos:end="53:48">[<expr pos:start="53:47" pos:end="53:47"><name pos:start="53:47" pos:end="53:47">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:55"><expr pos:start="55:9" pos:end="55:54"><name pos:start="55:9" pos:end="55:12">cdim</name>   <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:54"><name pos:start="55:18" pos:end="55:19">vf</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:37">class_dimensions</name><index pos:start="55:38" pos:end="55:54">[<expr pos:start="55:39" pos:end="55:53"><name pos:start="55:39" pos:end="55:53">partition_class</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:55"><expr pos:start="57:9" pos:end="57:54"><name pos:start="57:9" pos:end="57:13">cbits</name>  <operator pos:start="57:16" pos:end="57:16">=</operator> <name pos:start="57:18" pos:end="57:54"><name pos:start="57:18" pos:end="57:19">vf</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:37">class_subclasses</name><index pos:start="57:38" pos:end="57:54">[<expr pos:start="57:39" pos:end="57:53"><name pos:start="57:39" pos:end="57:53">partition_class</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:32"><expr pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:12">csub</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <operator pos:start="59:16" pos:end="59:16">(</operator><literal type="number" pos:start="59:17" pos:end="59:17">1</literal> <operator pos:start="59:19" pos:end="59:20">&lt;&lt;</operator> <name pos:start="59:22" pos:end="59:26">cbits</name><operator pos:start="59:27" pos:end="59:27">)</operator> <operator pos:start="59:29" pos:end="59:29">-</operator> <literal type="number" pos:start="59:31" pos:end="59:31">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:17"><expr pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:12">cval</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:43"><expr pos:start="65:9" pos:end="65:42"><call pos:start="65:9" pos:end="65:42"><name pos:start="65:9" pos:end="65:15">av_dlog</name><argument_list pos:start="65:16" pos:end="65:42">(<argument pos:start="65:17" pos:end="65:20"><expr pos:start="65:17" pos:end="65:20"><name pos:start="65:17" pos:end="65:20">NULL</name></expr></argument>, <argument pos:start="65:23" pos:end="65:34"><expr pos:start="65:23" pos:end="65:34"><literal type="string" pos:start="65:23" pos:end="65:34">"Cbits %u\n"</literal></expr></argument>, <argument pos:start="65:37" pos:end="65:41"><expr pos:start="65:37" pos:end="65:41"><name pos:start="65:37" pos:end="65:41">cbits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="69:9" pos:end="73:93"><if pos:start="69:9" pos:end="73:93">if <condition pos:start="69:12" pos:end="69:18">(<expr pos:start="69:13" pos:end="69:17"><name pos:start="69:13" pos:end="69:17">cbits</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="73:93"><block_content pos:start="71:13" pos:end="73:93"> <comment type="line" pos:start="69:20" pos:end="69:74">// this reads all subclasses for this partition's class</comment>

            <expr_stmt pos:start="71:13" pos:end="73:93"><expr pos:start="71:13" pos:end="73:92"><name pos:start="71:13" pos:end="71:16">cval</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <call pos:start="71:20" pos:end="73:92"><name pos:start="71:20" pos:end="71:27">get_vlc2</name><argument_list pos:start="71:28" pos:end="73:92">(<argument pos:start="71:29" pos:end="71:30"><expr pos:start="71:29" pos:end="71:30"><name pos:start="71:29" pos:end="71:30">gb</name></expr></argument>, <argument pos:start="71:33" pos:end="71:94"><expr pos:start="71:33" pos:end="71:94"><name pos:start="71:33" pos:end="71:84"><name pos:start="71:33" pos:end="71:34">vc</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:45">codebooks</name><index pos:start="71:46" pos:end="71:84">[<expr pos:start="71:47" pos:end="71:83"><name pos:start="71:47" pos:end="71:83"><name pos:start="71:47" pos:end="71:48">vf</name><operator pos:start="71:49" pos:end="71:50">-&gt;</operator><name pos:start="71:51" pos:end="71:66">class_masterbook</name><index pos:start="71:67" pos:end="71:83">[<expr pos:start="71:68" pos:end="71:82"><name pos:start="71:68" pos:end="71:82">partition_class</name></expr>]</index></name></expr>]</index></name><operator pos:start="71:85" pos:end="71:85">.</operator><name pos:start="71:86" pos:end="71:94"><name pos:start="71:86" pos:end="71:88">vlc</name><operator pos:start="71:89" pos:end="71:89">.</operator><name pos:start="71:90" pos:end="71:94">table</name></name></expr></argument>,

                            <argument pos:start="73:29" pos:end="73:88"><expr pos:start="73:29" pos:end="73:88"><name pos:start="73:29" pos:end="73:80"><name pos:start="73:29" pos:end="73:30">vc</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:41">codebooks</name><index pos:start="73:42" pos:end="73:80">[<expr pos:start="73:43" pos:end="73:79"><name pos:start="73:43" pos:end="73:79"><name pos:start="73:43" pos:end="73:44">vf</name><operator pos:start="73:45" pos:end="73:46">-&gt;</operator><name pos:start="73:47" pos:end="73:62">class_masterbook</name><index pos:start="73:63" pos:end="73:79">[<expr pos:start="73:64" pos:end="73:78"><name pos:start="73:64" pos:end="73:78">partition_class</name></expr>]</index></name></expr>]</index></name><operator pos:start="73:81" pos:end="73:81">.</operator><name pos:start="73:82" pos:end="73:88">nb_bits</name></expr></argument>, <argument pos:start="73:91" pos:end="73:91"><expr pos:start="73:91" pos:end="73:91"><literal type="number" pos:start="73:91" pos:end="73:91">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="77:9" pos:end="109:9">for <control pos:start="77:13" pos:end="77:34">(<init pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:18"><name pos:start="77:14" pos:end="77:14">j</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>;</init> <condition pos:start="77:21" pos:end="77:29"><expr pos:start="77:21" pos:end="77:28"><name pos:start="77:21" pos:end="77:21">j</name> <operator pos:start="77:23" pos:end="77:23">&lt;</operator> <name pos:start="77:25" pos:end="77:28">cdim</name></expr>;</condition> <incr pos:start="77:31" pos:end="77:33"><expr pos:start="77:31" pos:end="77:33"><operator pos:start="77:31" pos:end="77:32">++</operator><name pos:start="77:33" pos:end="77:33">j</name></expr></incr>)</control> <block pos:start="77:36" pos:end="109:9">{<block_content pos:start="79:13" pos:end="107:62">

            <expr_stmt pos:start="79:13" pos:end="79:68"><expr pos:start="79:13" pos:end="79:67"><name pos:start="79:13" pos:end="79:16">book</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <name pos:start="79:20" pos:end="79:67"><name pos:start="79:20" pos:end="79:21">vf</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:37">subclass_books</name><index pos:start="79:38" pos:end="79:54">[<expr pos:start="79:39" pos:end="79:53"><name pos:start="79:39" pos:end="79:53">partition_class</name></expr>]</index><index pos:start="79:55" pos:end="79:67">[<expr pos:start="79:56" pos:end="79:66"><name pos:start="79:56" pos:end="79:59">cval</name> <operator pos:start="79:61" pos:end="79:61">&amp;</operator> <name pos:start="79:63" pos:end="79:66">csub</name></expr>]</index></name></expr>;</expr_stmt>



            <expr_stmt pos:start="83:13" pos:end="85:59"><expr pos:start="83:13" pos:end="85:58"><call pos:start="83:13" pos:end="85:58"><name pos:start="83:13" pos:end="83:19">av_dlog</name><argument_list pos:start="83:20" pos:end="85:58">(<argument pos:start="83:21" pos:end="83:24"><expr pos:start="83:21" pos:end="83:24"><name pos:start="83:21" pos:end="83:24">NULL</name></expr></argument>, <argument pos:start="83:27" pos:end="83:63"><expr pos:start="83:27" pos:end="83:63"><literal type="string" pos:start="83:27" pos:end="83:63">"book %d Cbits %u cval %u  bits:%d\n"</literal></expr></argument>,

                    <argument pos:start="85:21" pos:end="85:24"><expr pos:start="85:21" pos:end="85:24"><name pos:start="85:21" pos:end="85:24">book</name></expr></argument>, <argument pos:start="85:27" pos:end="85:31"><expr pos:start="85:27" pos:end="85:31"><name pos:start="85:27" pos:end="85:31">cbits</name></expr></argument>, <argument pos:start="85:34" pos:end="85:37"><expr pos:start="85:34" pos:end="85:37"><name pos:start="85:34" pos:end="85:37">cval</name></expr></argument>, <argument pos:start="85:40" pos:end="85:57"><expr pos:start="85:40" pos:end="85:57"><call pos:start="85:40" pos:end="85:57"><name pos:start="85:40" pos:end="85:53">get_bits_count</name><argument_list pos:start="85:54" pos:end="85:57">(<argument pos:start="85:55" pos:end="85:56"><expr pos:start="85:55" pos:end="85:56"><name pos:start="85:55" pos:end="85:56">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="89:13" pos:end="89:33"><expr pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:16">cval</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <name pos:start="89:20" pos:end="89:23">cval</name> <operator pos:start="89:25" pos:end="89:26">&gt;&gt;</operator> <name pos:start="89:28" pos:end="89:32">cbits</name></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="101:13"><if pos:start="91:13" pos:end="97:13">if <condition pos:start="91:16" pos:end="91:26">(<expr pos:start="91:17" pos:end="91:25"><name pos:start="91:17" pos:end="91:20">book</name> <operator pos:start="91:22" pos:end="91:22">&gt;</operator> <operator pos:start="91:24" pos:end="91:24">-</operator><literal type="number" pos:start="91:25" pos:end="91:25">1</literal></expr>)</condition> <block pos:start="91:28" pos:end="97:13">{<block_content pos:start="93:17" pos:end="95:48">

                <expr_stmt pos:start="93:17" pos:end="95:48"><expr pos:start="93:17" pos:end="95:47"><name pos:start="93:17" pos:end="93:34"><name pos:start="93:17" pos:end="93:24">floor1_Y</name><index pos:start="93:25" pos:end="93:34">[<expr pos:start="93:26" pos:end="93:33"><name pos:start="93:26" pos:end="93:31">offset</name><operator pos:start="93:32" pos:end="93:32">+</operator><name pos:start="93:33" pos:end="93:33">j</name></expr>]</index></name> <operator pos:start="93:36" pos:end="93:36">=</operator> <call pos:start="93:38" pos:end="95:47"><name pos:start="93:38" pos:end="93:45">get_vlc2</name><argument_list pos:start="93:46" pos:end="95:47">(<argument pos:start="93:47" pos:end="93:48"><expr pos:start="93:47" pos:end="93:48"><name pos:start="93:47" pos:end="93:48">gb</name></expr></argument>, <argument pos:start="93:51" pos:end="93:79"><expr pos:start="93:51" pos:end="93:79"><name pos:start="93:51" pos:end="93:69"><name pos:start="93:51" pos:end="93:52">vc</name><operator pos:start="93:53" pos:end="93:54">-&gt;</operator><name pos:start="93:55" pos:end="93:63">codebooks</name><index pos:start="93:64" pos:end="93:69">[<expr pos:start="93:65" pos:end="93:68"><name pos:start="93:65" pos:end="93:68">book</name></expr>]</index></name><operator pos:start="93:70" pos:end="93:70">.</operator><name pos:start="93:71" pos:end="93:79"><name pos:start="93:71" pos:end="93:73">vlc</name><operator pos:start="93:74" pos:end="93:74">.</operator><name pos:start="93:75" pos:end="93:79">table</name></name></expr></argument>,

                <argument pos:start="95:17" pos:end="95:43"><expr pos:start="95:17" pos:end="95:43"><name pos:start="95:17" pos:end="95:35"><name pos:start="95:17" pos:end="95:18">vc</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:29">codebooks</name><index pos:start="95:30" pos:end="95:35">[<expr pos:start="95:31" pos:end="95:34"><name pos:start="95:31" pos:end="95:34">book</name></expr>]</index></name><operator pos:start="95:36" pos:end="95:36">.</operator><name pos:start="95:37" pos:end="95:43">nb_bits</name></expr></argument>, <argument pos:start="95:46" pos:end="95:46"><expr pos:start="95:46" pos:end="95:46"><literal type="number" pos:start="95:46" pos:end="95:46">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="97:15" pos:end="101:13">else <block pos:start="97:20" pos:end="101:13">{<block_content pos:start="99:17" pos:end="99:39">

                <expr_stmt pos:start="99:17" pos:end="99:39"><expr pos:start="99:17" pos:end="99:38"><name pos:start="99:17" pos:end="99:34"><name pos:start="99:17" pos:end="99:24">floor1_Y</name><index pos:start="99:25" pos:end="99:34">[<expr pos:start="99:26" pos:end="99:33"><name pos:start="99:26" pos:end="99:31">offset</name><operator pos:start="99:32" pos:end="99:32">+</operator><name pos:start="99:33" pos:end="99:33">j</name></expr>]</index></name> <operator pos:start="99:36" pos:end="99:36">=</operator> <literal type="number" pos:start="99:38" pos:end="99:38">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="105:13" pos:end="107:62"><expr pos:start="105:13" pos:end="107:61"><call pos:start="105:13" pos:end="107:61"><name pos:start="105:13" pos:end="105:19">av_dlog</name><argument_list pos:start="105:20" pos:end="107:61">(<argument pos:start="105:21" pos:end="105:24"><expr pos:start="105:21" pos:end="105:24"><name pos:start="105:21" pos:end="105:24">NULL</name></expr></argument>, <argument pos:start="105:27" pos:end="105:46"><expr pos:start="105:27" pos:end="105:46"><literal type="string" pos:start="105:27" pos:end="105:46">" floor(%d) = %d \n"</literal></expr></argument>,

                    <argument pos:start="107:21" pos:end="107:40"><expr pos:start="107:21" pos:end="107:40"><name pos:start="107:21" pos:end="107:38"><name pos:start="107:21" pos:end="107:22">vf</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:28">list</name><index pos:start="107:29" pos:end="107:38">[<expr pos:start="107:30" pos:end="107:37"><name pos:start="107:30" pos:end="107:35">offset</name><operator pos:start="107:36" pos:end="107:36">+</operator><name pos:start="107:37" pos:end="107:37">j</name></expr>]</index></name><operator pos:start="107:39" pos:end="107:39">.</operator><name pos:start="107:40" pos:end="107:40">x</name></expr></argument>, <argument pos:start="107:43" pos:end="107:60"><expr pos:start="107:43" pos:end="107:60"><name pos:start="107:43" pos:end="107:60"><name pos:start="107:43" pos:end="107:50">floor1_Y</name><index pos:start="107:51" pos:end="107:60">[<expr pos:start="107:52" pos:end="107:59"><name pos:start="107:52" pos:end="107:57">offset</name><operator pos:start="107:58" pos:end="107:58">+</operator><name pos:start="107:59" pos:end="107:59">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="111:9" pos:end="111:21"><expr pos:start="111:9" pos:end="111:20"><name pos:start="111:9" pos:end="111:14">offset</name><operator pos:start="111:15" pos:end="111:16">+=</operator><name pos:start="111:17" pos:end="111:20">cdim</name></expr>;</expr_stmt>

    </block_content>}</block></for>



<comment type="line" pos:start="117:1" pos:end="117:45">// Amplitude calculation from the differences</comment>



    <expr_stmt pos:start="121:5" pos:end="121:23"><expr pos:start="121:5" pos:end="121:22"><name pos:start="121:5" pos:end="121:18"><name pos:start="121:5" pos:end="121:15">floor1_flag</name><index pos:start="121:16" pos:end="121:18">[<expr pos:start="121:17" pos:end="121:17"><literal type="number" pos:start="121:17" pos:end="121:17">0</literal></expr>]</index></name> <operator pos:start="121:20" pos:end="121:20">=</operator> <literal type="number" pos:start="121:22" pos:end="121:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:23"><expr pos:start="123:5" pos:end="123:22"><name pos:start="123:5" pos:end="123:18"><name pos:start="123:5" pos:end="123:15">floor1_flag</name><index pos:start="123:16" pos:end="123:18">[<expr pos:start="123:17" pos:end="123:17"><literal type="number" pos:start="123:17" pos:end="123:17">1</literal></expr>]</index></name> <operator pos:start="123:20" pos:end="123:20">=</operator> <literal type="number" pos:start="123:22" pos:end="123:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:36"><expr pos:start="125:5" pos:end="125:35"><name pos:start="125:5" pos:end="125:21"><name pos:start="125:5" pos:end="125:18">floor1_Y_final</name><index pos:start="125:19" pos:end="125:21">[<expr pos:start="125:20" pos:end="125:20"><literal type="number" pos:start="125:20" pos:end="125:20">0</literal></expr>]</index></name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:35"><name pos:start="125:25" pos:end="125:32">floor1_Y</name><index pos:start="125:33" pos:end="125:35">[<expr pos:start="125:34" pos:end="125:34"><literal type="number" pos:start="125:34" pos:end="125:34">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:36"><expr pos:start="127:5" pos:end="127:35"><name pos:start="127:5" pos:end="127:21"><name pos:start="127:5" pos:end="127:18">floor1_Y_final</name><index pos:start="127:19" pos:end="127:21">[<expr pos:start="127:20" pos:end="127:20"><literal type="number" pos:start="127:20" pos:end="127:20">1</literal></expr>]</index></name> <operator pos:start="127:23" pos:end="127:23">=</operator> <name pos:start="127:25" pos:end="127:35"><name pos:start="127:25" pos:end="127:32">floor1_Y</name><index pos:start="127:33" pos:end="127:35">[<expr pos:start="127:34" pos:end="127:34"><literal type="number" pos:start="127:34" pos:end="127:34">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <for pos:start="131:5" pos:end="227:5">for <control pos:start="131:9" pos:end="131:40">(<init pos:start="131:10" pos:end="131:15"><expr pos:start="131:10" pos:end="131:14"><name pos:start="131:10" pos:end="131:10">i</name> <operator pos:start="131:12" pos:end="131:12">=</operator> <literal type="number" pos:start="131:14" pos:end="131:14">2</literal></expr>;</init> <condition pos:start="131:17" pos:end="131:35"><expr pos:start="131:17" pos:end="131:34"><name pos:start="131:17" pos:end="131:17">i</name> <operator pos:start="131:19" pos:end="131:19">&lt;</operator> <name pos:start="131:21" pos:end="131:34"><name pos:start="131:21" pos:end="131:22">vf</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:34">x_list_dim</name></name></expr>;</condition> <incr pos:start="131:37" pos:end="131:39"><expr pos:start="131:37" pos:end="131:39"><operator pos:start="131:37" pos:end="131:38">++</operator><name pos:start="131:39" pos:end="131:39">i</name></expr></incr>)</control> <block pos:start="131:42" pos:end="227:5">{<block_content pos:start="133:9" pos:end="225:55">

        <decl_stmt pos:start="133:9" pos:end="133:79"><decl pos:start="133:9" pos:end="133:20"><type pos:start="133:9" pos:end="133:16"><name pos:start="133:9" pos:end="133:16">unsigned</name></type> <name pos:start="133:18" pos:end="133:20">val</name></decl>, <decl pos:start="133:23" pos:end="133:30"><type ref="prev" pos:start="133:9" pos:end="133:16"/><name pos:start="133:23" pos:end="133:30">highroom</name></decl>, <decl pos:start="133:33" pos:end="133:39"><type ref="prev" pos:start="133:9" pos:end="133:16"/><name pos:start="133:33" pos:end="133:39">lowroom</name></decl>, <decl pos:start="133:42" pos:end="133:45"><type ref="prev" pos:start="133:9" pos:end="133:16"/><name pos:start="133:42" pos:end="133:45">room</name></decl>, <decl pos:start="133:48" pos:end="133:62"><type ref="prev" pos:start="133:9" pos:end="133:16"/><name pos:start="133:48" pos:end="133:62">high_neigh_offs</name></decl>, <decl pos:start="133:65" pos:end="133:78"><type ref="prev" pos:start="133:9" pos:end="133:16"/><name pos:start="133:65" pos:end="133:78">low_neigh_offs</name></decl>;</decl_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:42"><expr pos:start="137:9" pos:end="137:41"><name pos:start="137:9" pos:end="137:22">low_neigh_offs</name>  <operator pos:start="137:25" pos:end="137:25">=</operator> <name pos:start="137:27" pos:end="137:37"><name pos:start="137:27" pos:end="137:28">vf</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:34">list</name><index pos:start="137:35" pos:end="137:37">[<expr pos:start="137:36" pos:end="137:36"><name pos:start="137:36" pos:end="137:36">i</name></expr>]</index></name><operator pos:start="137:38" pos:end="137:38">.</operator><name pos:start="137:39" pos:end="137:41">low</name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:43"><expr pos:start="139:9" pos:end="139:42"><name pos:start="139:9" pos:end="139:23">high_neigh_offs</name> <operator pos:start="139:25" pos:end="139:25">=</operator> <name pos:start="139:27" pos:end="139:37"><name pos:start="139:27" pos:end="139:28">vf</name><operator pos:start="139:29" pos:end="139:30">-&gt;</operator><name pos:start="139:31" pos:end="139:34">list</name><index pos:start="139:35" pos:end="139:37">[<expr pos:start="139:36" pos:end="139:36"><name pos:start="139:36" pos:end="139:36">i</name></expr>]</index></name><operator pos:start="139:38" pos:end="139:38">.</operator><name pos:start="139:39" pos:end="139:42">high</name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:79"><expr pos:start="141:9" pos:end="141:78"><name pos:start="141:9" pos:end="141:10">dy</name>  <operator pos:start="141:13" pos:end="141:13">=</operator> <name pos:start="141:15" pos:end="141:45"><name pos:start="141:15" pos:end="141:28">floor1_Y_final</name><index pos:start="141:29" pos:end="141:45">[<expr pos:start="141:30" pos:end="141:44"><name pos:start="141:30" pos:end="141:44">high_neigh_offs</name></expr>]</index></name> <operator pos:start="141:47" pos:end="141:47">-</operator> <name pos:start="141:49" pos:end="141:78"><name pos:start="141:49" pos:end="141:62">floor1_Y_final</name><index pos:start="141:63" pos:end="141:78">[<expr pos:start="141:64" pos:end="141:77"><name pos:start="141:64" pos:end="141:77">low_neigh_offs</name></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="141:82" pos:end="141:102">// render_point begin</comment>

        <expr_stmt pos:start="143:9" pos:end="143:71"><expr pos:start="143:9" pos:end="143:70"><name pos:start="143:9" pos:end="143:11">adx</name> <operator pos:start="143:13" pos:end="143:13">=</operator> <name pos:start="143:15" pos:end="143:39"><name pos:start="143:15" pos:end="143:16">vf</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:22">list</name><index pos:start="143:23" pos:end="143:39">[<expr pos:start="143:24" pos:end="143:38"><name pos:start="143:24" pos:end="143:38">high_neigh_offs</name></expr>]</index></name><operator pos:start="143:40" pos:end="143:40">.</operator><name pos:start="143:41" pos:end="143:41">x</name> <operator pos:start="143:43" pos:end="143:43">-</operator> <name pos:start="143:45" pos:end="143:68"><name pos:start="143:45" pos:end="143:46">vf</name><operator pos:start="143:47" pos:end="143:48">-&gt;</operator><name pos:start="143:49" pos:end="143:52">list</name><index pos:start="143:53" pos:end="143:68">[<expr pos:start="143:54" pos:end="143:67"><name pos:start="143:54" pos:end="143:67">low_neigh_offs</name></expr>]</index></name><operator pos:start="143:69" pos:end="143:69">.</operator><name pos:start="143:70" pos:end="143:70">x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:24"><expr pos:start="145:9" pos:end="145:23"><name pos:start="145:9" pos:end="145:11">ady</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <call pos:start="145:15" pos:end="145:23"><name pos:start="145:15" pos:end="145:19">FFABS</name><argument_list pos:start="145:20" pos:end="145:23">(<argument pos:start="145:21" pos:end="145:22"><expr pos:start="145:21" pos:end="145:22"><name pos:start="145:21" pos:end="145:22">dy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:65"><expr pos:start="147:9" pos:end="147:64"><name pos:start="147:9" pos:end="147:11">err</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <name pos:start="147:15" pos:end="147:17">ady</name> <operator pos:start="147:19" pos:end="147:19">*</operator> <operator pos:start="147:21" pos:end="147:21">(</operator><name pos:start="147:22" pos:end="147:32"><name pos:start="147:22" pos:end="147:23">vf</name><operator pos:start="147:24" pos:end="147:25">-&gt;</operator><name pos:start="147:26" pos:end="147:29">list</name><index pos:start="147:30" pos:end="147:32">[<expr pos:start="147:31" pos:end="147:31"><name pos:start="147:31" pos:end="147:31">i</name></expr>]</index></name><operator pos:start="147:33" pos:end="147:33">.</operator><name pos:start="147:34" pos:end="147:34">x</name> <operator pos:start="147:36" pos:end="147:36">-</operator> <name pos:start="147:38" pos:end="147:61"><name pos:start="147:38" pos:end="147:39">vf</name><operator pos:start="147:40" pos:end="147:41">-&gt;</operator><name pos:start="147:42" pos:end="147:45">list</name><index pos:start="147:46" pos:end="147:61">[<expr pos:start="147:47" pos:end="147:60"><name pos:start="147:47" pos:end="147:60">low_neigh_offs</name></expr>]</index></name><operator pos:start="147:62" pos:end="147:62">.</operator><name pos:start="147:63" pos:end="147:63">x</name><operator pos:start="147:64" pos:end="147:64">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:24"><expr pos:start="149:9" pos:end="149:23"><name pos:start="149:9" pos:end="149:11">off</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <name pos:start="149:15" pos:end="149:17">err</name> <operator pos:start="149:19" pos:end="149:19">/</operator> <name pos:start="149:21" pos:end="149:23">adx</name></expr>;</expr_stmt>

        <if_stmt pos:start="151:9" pos:end="159:9"><if pos:start="151:9" pos:end="155:9">if <condition pos:start="151:12" pos:end="151:19">(<expr pos:start="151:13" pos:end="151:18"><name pos:start="151:13" pos:end="151:14">dy</name> <operator pos:start="151:16" pos:end="151:16">&lt;</operator> <literal type="number" pos:start="151:18" pos:end="151:18">0</literal></expr>)</condition> <block pos:start="151:21" pos:end="155:9">{<block_content pos:start="153:13" pos:end="153:61">

            <expr_stmt pos:start="153:13" pos:end="153:61"><expr pos:start="153:13" pos:end="153:60"><name pos:start="153:13" pos:end="153:21">predicted</name> <operator pos:start="153:23" pos:end="153:23">=</operator> <name pos:start="153:25" pos:end="153:54"><name pos:start="153:25" pos:end="153:38">floor1_Y_final</name><index pos:start="153:39" pos:end="153:54">[<expr pos:start="153:40" pos:end="153:53"><name pos:start="153:40" pos:end="153:53">low_neigh_offs</name></expr>]</index></name> <operator pos:start="153:56" pos:end="153:56">-</operator> <name pos:start="153:58" pos:end="153:60">off</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="155:11" pos:end="159:9">else <block pos:start="155:16" pos:end="159:9">{<block_content pos:start="157:13" pos:end="157:61">

            <expr_stmt pos:start="157:13" pos:end="157:61"><expr pos:start="157:13" pos:end="157:60"><name pos:start="157:13" pos:end="157:21">predicted</name> <operator pos:start="157:23" pos:end="157:23">=</operator> <name pos:start="157:25" pos:end="157:54"><name pos:start="157:25" pos:end="157:38">floor1_Y_final</name><index pos:start="157:39" pos:end="157:54">[<expr pos:start="157:40" pos:end="157:53"><name pos:start="157:40" pos:end="157:53">low_neigh_offs</name></expr>]</index></name> <operator pos:start="157:56" pos:end="157:56">+</operator> <name pos:start="157:58" pos:end="157:60">off</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt> <comment type="line" pos:start="159:11" pos:end="159:29">// render_point end</comment>



        <expr_stmt pos:start="163:9" pos:end="163:26"><expr pos:start="163:9" pos:end="163:25"><name pos:start="163:9" pos:end="163:11">val</name> <operator pos:start="163:13" pos:end="163:13">=</operator> <name pos:start="163:15" pos:end="163:25"><name pos:start="163:15" pos:end="163:22">floor1_Y</name><index pos:start="163:23" pos:end="163:25">[<expr pos:start="163:24" pos:end="163:24"><name pos:start="163:24" pos:end="163:24">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:35"><expr pos:start="165:9" pos:end="165:34"><name pos:start="165:9" pos:end="165:16">highroom</name> <operator pos:start="165:18" pos:end="165:18">=</operator> <name pos:start="165:20" pos:end="165:24">range</name><operator pos:start="165:25" pos:end="165:25">-</operator><name pos:start="165:26" pos:end="165:34">predicted</name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:29"><expr pos:start="167:9" pos:end="167:28"><name pos:start="167:9" pos:end="167:15">lowroom</name>  <operator pos:start="167:18" pos:end="167:18">=</operator> <name pos:start="167:20" pos:end="167:28">predicted</name></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="177:9"><if pos:start="169:9" pos:end="173:9">if <condition pos:start="169:12" pos:end="169:31">(<expr pos:start="169:13" pos:end="169:30"><name pos:start="169:13" pos:end="169:20">highroom</name> <operator pos:start="169:22" pos:end="169:22">&lt;</operator> <name pos:start="169:24" pos:end="169:30">lowroom</name></expr>)</condition> <block pos:start="169:33" pos:end="173:9">{<block_content pos:start="171:13" pos:end="171:32">

            <expr_stmt pos:start="171:13" pos:end="171:32"><expr pos:start="171:13" pos:end="171:31"><name pos:start="171:13" pos:end="171:16">room</name> <operator pos:start="171:18" pos:end="171:18">=</operator> <name pos:start="171:20" pos:end="171:27">highroom</name> <operator pos:start="171:29" pos:end="171:29">*</operator> <literal type="number" pos:start="171:31" pos:end="171:31">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="173:11" pos:end="177:9">else <block pos:start="173:16" pos:end="177:9">{<block_content pos:start="175:13" pos:end="175:31">

            <expr_stmt pos:start="175:13" pos:end="175:31"><expr pos:start="175:13" pos:end="175:30"><name pos:start="175:13" pos:end="175:16">room</name> <operator pos:start="175:18" pos:end="175:18">=</operator> <name pos:start="175:20" pos:end="175:26">lowroom</name> <operator pos:start="175:28" pos:end="175:28">*</operator> <literal type="number" pos:start="175:30" pos:end="175:30">2</literal></expr>;</expr_stmt>   <comment type="line" pos:start="175:35" pos:end="175:53">// SPEC misspelling</comment>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="179:9" pos:end="219:9"><if pos:start="179:9" pos:end="213:9">if <condition pos:start="179:12" pos:end="179:16">(<expr pos:start="179:13" pos:end="179:15"><name pos:start="179:13" pos:end="179:15">val</name></expr>)</condition> <block pos:start="179:18" pos:end="213:9">{<block_content pos:start="181:13" pos:end="211:13">

            <expr_stmt pos:start="181:13" pos:end="181:45"><expr pos:start="181:13" pos:end="181:44"><name pos:start="181:13" pos:end="181:39"><name pos:start="181:13" pos:end="181:23">floor1_flag</name><index pos:start="181:24" pos:end="181:39">[<expr pos:start="181:25" pos:end="181:38"><name pos:start="181:25" pos:end="181:38">low_neigh_offs</name></expr>]</index></name>  <operator pos:start="181:42" pos:end="181:42">=</operator> <literal type="number" pos:start="181:44" pos:end="181:44">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:45"><expr pos:start="183:13" pos:end="183:44"><name pos:start="183:13" pos:end="183:40"><name pos:start="183:13" pos:end="183:23">floor1_flag</name><index pos:start="183:24" pos:end="183:40">[<expr pos:start="183:25" pos:end="183:39"><name pos:start="183:25" pos:end="183:39">high_neigh_offs</name></expr>]</index></name> <operator pos:start="183:42" pos:end="183:42">=</operator> <literal type="number" pos:start="183:44" pos:end="183:44">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:45"><expr pos:start="185:13" pos:end="185:44"><name pos:start="185:13" pos:end="185:26"><name pos:start="185:13" pos:end="185:23">floor1_flag</name><index pos:start="185:24" pos:end="185:26">[<expr pos:start="185:25" pos:end="185:25"><name pos:start="185:25" pos:end="185:25">i</name></expr>]</index></name>               <operator pos:start="185:42" pos:end="185:42">=</operator> <literal type="number" pos:start="185:44" pos:end="185:44">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="187:13" pos:end="211:13"><if pos:start="187:13" pos:end="199:13">if <condition pos:start="187:16" pos:end="187:28">(<expr pos:start="187:17" pos:end="187:27"><name pos:start="187:17" pos:end="187:19">val</name> <operator pos:start="187:21" pos:end="187:22">&gt;=</operator> <name pos:start="187:24" pos:end="187:27">room</name></expr>)</condition> <block pos:start="187:30" pos:end="199:13">{<block_content pos:start="189:17" pos:end="197:17">

                <if_stmt pos:start="189:17" pos:end="197:17"><if pos:start="189:17" pos:end="193:17">if <condition pos:start="189:20" pos:end="189:39">(<expr pos:start="189:21" pos:end="189:38"><name pos:start="189:21" pos:end="189:28">highroom</name> <operator pos:start="189:30" pos:end="189:30">&gt;</operator> <name pos:start="189:32" pos:end="189:38">lowroom</name></expr>)</condition> <block pos:start="189:41" pos:end="193:17">{<block_content pos:start="191:21" pos:end="191:82">

                    <expr_stmt pos:start="191:21" pos:end="191:82"><expr pos:start="191:21" pos:end="191:81"><name pos:start="191:21" pos:end="191:37"><name pos:start="191:21" pos:end="191:34">floor1_Y_final</name><index pos:start="191:35" pos:end="191:37">[<expr pos:start="191:36" pos:end="191:36"><name pos:start="191:36" pos:end="191:36">i</name></expr>]</index></name> <operator pos:start="191:39" pos:end="191:39">=</operator> <call pos:start="191:41" pos:end="191:81"><name pos:start="191:41" pos:end="191:54">av_clip_uint16</name><argument_list pos:start="191:55" pos:end="191:81">(<argument pos:start="191:56" pos:end="191:80"><expr pos:start="191:56" pos:end="191:80"><name pos:start="191:56" pos:end="191:58">val</name> <operator pos:start="191:60" pos:end="191:60">-</operator> <name pos:start="191:62" pos:end="191:68">lowroom</name> <operator pos:start="191:70" pos:end="191:70">+</operator> <name pos:start="191:72" pos:end="191:80">predicted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="193:19" pos:end="197:17">else <block pos:start="193:24" pos:end="197:17">{<block_content pos:start="195:21" pos:end="195:87">

                    <expr_stmt pos:start="195:21" pos:end="195:87"><expr pos:start="195:21" pos:end="195:86"><name pos:start="195:21" pos:end="195:37"><name pos:start="195:21" pos:end="195:34">floor1_Y_final</name><index pos:start="195:35" pos:end="195:37">[<expr pos:start="195:36" pos:end="195:36"><name pos:start="195:36" pos:end="195:36">i</name></expr>]</index></name> <operator pos:start="195:39" pos:end="195:39">=</operator> <call pos:start="195:41" pos:end="195:86"><name pos:start="195:41" pos:end="195:54">av_clip_uint16</name><argument_list pos:start="195:55" pos:end="195:86">(<argument pos:start="195:56" pos:end="195:85"><expr pos:start="195:56" pos:end="195:85"><name pos:start="195:56" pos:end="195:64">predicted</name> <operator pos:start="195:66" pos:end="195:66">-</operator> <name pos:start="195:68" pos:end="195:70">val</name> <operator pos:start="195:72" pos:end="195:72">+</operator> <name pos:start="195:74" pos:end="195:81">highroom</name> <operator pos:start="195:83" pos:end="195:83">-</operator> <literal type="number" pos:start="195:85" pos:end="195:85">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="199:15" pos:end="211:13">else <block pos:start="199:20" pos:end="211:13">{<block_content pos:start="201:17" pos:end="209:17">

                <if_stmt pos:start="201:17" pos:end="209:17"><if pos:start="201:17" pos:end="205:17">if <condition pos:start="201:20" pos:end="201:28">(<expr pos:start="201:21" pos:end="201:27"><name pos:start="201:21" pos:end="201:23">val</name> <operator pos:start="201:25" pos:end="201:25">&amp;</operator> <literal type="number" pos:start="201:27" pos:end="201:27">1</literal></expr>)</condition> <block pos:start="201:30" pos:end="205:17">{<block_content pos:start="203:21" pos:end="203:82">

                    <expr_stmt pos:start="203:21" pos:end="203:82"><expr pos:start="203:21" pos:end="203:81"><name pos:start="203:21" pos:end="203:37"><name pos:start="203:21" pos:end="203:34">floor1_Y_final</name><index pos:start="203:35" pos:end="203:37">[<expr pos:start="203:36" pos:end="203:36"><name pos:start="203:36" pos:end="203:36">i</name></expr>]</index></name> <operator pos:start="203:39" pos:end="203:39">=</operator> <call pos:start="203:41" pos:end="203:81"><name pos:start="203:41" pos:end="203:54">av_clip_uint16</name><argument_list pos:start="203:55" pos:end="203:81">(<argument pos:start="203:56" pos:end="203:80"><expr pos:start="203:56" pos:end="203:80"><name pos:start="203:56" pos:end="203:64">predicted</name> <operator pos:start="203:66" pos:end="203:66">-</operator> <operator pos:start="203:68" pos:end="203:68">(</operator><name pos:start="203:69" pos:end="203:71">val</name> <operator pos:start="203:73" pos:end="203:73">+</operator> <literal type="number" pos:start="203:75" pos:end="203:75">1</literal><operator pos:start="203:76" pos:end="203:76">)</operator> <operator pos:start="203:78" pos:end="203:78">/</operator> <literal type="number" pos:start="203:80" pos:end="203:80">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="205:19" pos:end="209:17">else <block pos:start="205:24" pos:end="209:17">{<block_content pos:start="207:21" pos:end="207:76">

                    <expr_stmt pos:start="207:21" pos:end="207:76"><expr pos:start="207:21" pos:end="207:75"><name pos:start="207:21" pos:end="207:37"><name pos:start="207:21" pos:end="207:34">floor1_Y_final</name><index pos:start="207:35" pos:end="207:37">[<expr pos:start="207:36" pos:end="207:36"><name pos:start="207:36" pos:end="207:36">i</name></expr>]</index></name> <operator pos:start="207:39" pos:end="207:39">=</operator> <call pos:start="207:41" pos:end="207:75"><name pos:start="207:41" pos:end="207:54">av_clip_uint16</name><argument_list pos:start="207:55" pos:end="207:75">(<argument pos:start="207:56" pos:end="207:74"><expr pos:start="207:56" pos:end="207:74"><name pos:start="207:56" pos:end="207:64">predicted</name> <operator pos:start="207:66" pos:end="207:66">+</operator> <name pos:start="207:68" pos:end="207:70">val</name> <operator pos:start="207:72" pos:end="207:72">/</operator> <literal type="number" pos:start="207:74" pos:end="207:74">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="213:11" pos:end="219:9">else <block pos:start="213:16" pos:end="219:9">{<block_content pos:start="215:13" pos:end="217:58">

            <expr_stmt pos:start="215:13" pos:end="215:34"><expr pos:start="215:13" pos:end="215:33"><name pos:start="215:13" pos:end="215:26"><name pos:start="215:13" pos:end="215:23">floor1_flag</name><index pos:start="215:24" pos:end="215:26">[<expr pos:start="215:25" pos:end="215:25"><name pos:start="215:25" pos:end="215:25">i</name></expr>]</index></name>    <operator pos:start="215:31" pos:end="215:31">=</operator> <literal type="number" pos:start="215:33" pos:end="215:33">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:58"><expr pos:start="217:13" pos:end="217:57"><name pos:start="217:13" pos:end="217:29"><name pos:start="217:13" pos:end="217:26">floor1_Y_final</name><index pos:start="217:27" pos:end="217:29">[<expr pos:start="217:28" pos:end="217:28"><name pos:start="217:28" pos:end="217:28">i</name></expr>]</index></name> <operator pos:start="217:31" pos:end="217:31">=</operator> <call pos:start="217:33" pos:end="217:57"><name pos:start="217:33" pos:end="217:46">av_clip_uint16</name><argument_list pos:start="217:47" pos:end="217:57">(<argument pos:start="217:48" pos:end="217:56"><expr pos:start="217:48" pos:end="217:56"><name pos:start="217:48" pos:end="217:56">predicted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="223:9" pos:end="225:55"><expr pos:start="223:9" pos:end="225:54"><call pos:start="223:9" pos:end="225:54"><name pos:start="223:9" pos:end="223:15">av_dlog</name><argument_list pos:start="223:16" pos:end="225:54">(<argument pos:start="223:17" pos:end="223:20"><expr pos:start="223:17" pos:end="223:20"><name pos:start="223:17" pos:end="223:20">NULL</name></expr></argument>, <argument pos:start="223:23" pos:end="223:58"><expr pos:start="223:23" pos:end="223:58"><literal type="string" pos:start="223:23" pos:end="223:58">" Decoded floor(%d) = %u / val %u\n"</literal></expr></argument>,

                <argument pos:start="225:17" pos:end="225:29"><expr pos:start="225:17" pos:end="225:29"><name pos:start="225:17" pos:end="225:27"><name pos:start="225:17" pos:end="225:18">vf</name><operator pos:start="225:19" pos:end="225:20">-&gt;</operator><name pos:start="225:21" pos:end="225:24">list</name><index pos:start="225:25" pos:end="225:27">[<expr pos:start="225:26" pos:end="225:26"><name pos:start="225:26" pos:end="225:26">i</name></expr>]</index></name><operator pos:start="225:28" pos:end="225:28">.</operator><name pos:start="225:29" pos:end="225:29">x</name></expr></argument>, <argument pos:start="225:32" pos:end="225:48"><expr pos:start="225:32" pos:end="225:48"><name pos:start="225:32" pos:end="225:48"><name pos:start="225:32" pos:end="225:45">floor1_Y_final</name><index pos:start="225:46" pos:end="225:48">[<expr pos:start="225:47" pos:end="225:47"><name pos:start="225:47" pos:end="225:47">i</name></expr>]</index></name></expr></argument>, <argument pos:start="225:51" pos:end="225:53"><expr pos:start="225:51" pos:end="225:53"><name pos:start="225:51" pos:end="225:53">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



<comment type="line" pos:start="231:1" pos:end="231:87">// Curve synth - connect the calculated dots and convert from dB scale FIXME optimize ?</comment>



    <expr_stmt pos:start="235:5" pos:end="235:124"><expr pos:start="235:5" pos:end="235:123"><call pos:start="235:5" pos:end="235:123"><name pos:start="235:5" pos:end="235:32">ff_vorbis_floor1_render_list</name><argument_list pos:start="235:33" pos:end="235:123">(<argument pos:start="235:34" pos:end="235:41"><expr pos:start="235:34" pos:end="235:41"><name pos:start="235:34" pos:end="235:41"><name pos:start="235:34" pos:end="235:35">vf</name><operator pos:start="235:36" pos:end="235:37">-&gt;</operator><name pos:start="235:38" pos:end="235:41">list</name></name></expr></argument>, <argument pos:start="235:44" pos:end="235:57"><expr pos:start="235:44" pos:end="235:57"><name pos:start="235:44" pos:end="235:57"><name pos:start="235:44" pos:end="235:45">vf</name><operator pos:start="235:46" pos:end="235:47">-&gt;</operator><name pos:start="235:48" pos:end="235:57">x_list_dim</name></name></expr></argument>, <argument pos:start="235:60" pos:end="235:73"><expr pos:start="235:60" pos:end="235:73"><name pos:start="235:60" pos:end="235:73">floor1_Y_final</name></expr></argument>, <argument pos:start="235:76" pos:end="235:86"><expr pos:start="235:76" pos:end="235:86"><name pos:start="235:76" pos:end="235:86">floor1_flag</name></expr></argument>, <argument pos:start="235:89" pos:end="235:102"><expr pos:start="235:89" pos:end="235:102"><name pos:start="235:89" pos:end="235:102"><name pos:start="235:89" pos:end="235:90">vf</name><operator pos:start="235:91" pos:end="235:92">-&gt;</operator><name pos:start="235:93" pos:end="235:102">multiplier</name></name></expr></argument>, <argument pos:start="235:105" pos:end="235:107"><expr pos:start="235:105" pos:end="235:107"><name pos:start="235:105" pos:end="235:107">vec</name></expr></argument>, <argument pos:start="235:110" pos:end="235:122"><expr pos:start="235:110" pos:end="235:122"><name pos:start="235:110" pos:end="235:120"><name pos:start="235:110" pos:end="235:111">vf</name><operator pos:start="235:112" pos:end="235:113">-&gt;</operator><name pos:start="235:114" pos:end="235:117">list</name><index pos:start="235:118" pos:end="235:120">[<expr pos:start="235:119" pos:end="235:119"><literal type="number" pos:start="235:119" pos:end="235:119">1</literal></expr>]</index></name><operator pos:start="235:121" pos:end="235:121">.</operator><name pos:start="235:122" pos:end="235:122">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="239:5" pos:end="239:38"><expr pos:start="239:5" pos:end="239:37"><call pos:start="239:5" pos:end="239:37"><name pos:start="239:5" pos:end="239:11">av_dlog</name><argument_list pos:start="239:12" pos:end="239:37">(<argument pos:start="239:13" pos:end="239:16"><expr pos:start="239:13" pos:end="239:16"><name pos:start="239:13" pos:end="239:16">NULL</name></expr></argument>, <argument pos:start="239:19" pos:end="239:36"><expr pos:start="239:19" pos:end="239:36"><literal type="string" pos:start="239:19" pos:end="239:36">" Floor decoded\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="243:5" pos:end="243:13">return <expr pos:start="243:12" pos:end="243:12"><literal type="number" pos:start="243:12" pos:end="243:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
