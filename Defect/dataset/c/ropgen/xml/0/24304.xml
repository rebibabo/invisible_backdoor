<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24304.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:39">cirrus_update_memory_access</name><parameter_list pos:start="1:40" pos:end="1:58">(<parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:54">CirrusVGAState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:17">mode</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="57:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:37">(<expr pos:start="9:9" pos:end="9:36"><operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:20"><name pos:start="9:10" pos:end="9:10">s</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:14">sr</name><index pos:start="9:15" pos:end="9:20">[<expr pos:start="9:16" pos:end="9:19"><literal type="number" pos:start="9:16" pos:end="9:19">0x17</literal></expr>]</index></name> <operator pos:start="9:22" pos:end="9:22">&amp;</operator> <literal type="number" pos:start="9:24" pos:end="9:27">0x44</literal><operator pos:start="9:28" pos:end="9:28">)</operator> <operator pos:start="9:30" pos:end="9:31">==</operator> <literal type="number" pos:start="9:33" pos:end="9:36">0x44</literal></expr>)</condition> <block pos:start="9:39" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:24">

        <goto pos:start="11:9" pos:end="11:24">goto <name pos:start="11:14" pos:end="11:23">generic_io</name>;</goto>

    </block_content>}</block></if> <if type="elseif" pos:start="13:7" pos:end="17:5">else if <condition pos:start="13:15" pos:end="13:56">(<expr pos:start="13:16" pos:end="13:55"><name pos:start="13:16" pos:end="13:31"><name pos:start="13:16" pos:end="13:16">s</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:31">cirrus_srcptr</name></name> <operator pos:start="13:33" pos:end="13:34">!=</operator> <name pos:start="13:36" pos:end="13:55"><name pos:start="13:36" pos:end="13:36">s</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:55">cirrus_srcptr_end</name></name></expr>)</condition> <block pos:start="13:58" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:24">

        <goto pos:start="15:9" pos:end="15:24">goto <name pos:start="15:14" pos:end="15:23">generic_io</name>;</goto>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="57:5">else <block pos:start="17:12" pos:end="57:5">{<block_content pos:start="19:9" pos:end="55:9">

	<if_stmt pos:start="19:9" pos:end="27:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:41">(<expr pos:start="19:13" pos:end="19:40"><operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:24"><name pos:start="19:14" pos:end="19:14">s</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:18">gr</name><index pos:start="19:19" pos:end="19:24">[<expr pos:start="19:20" pos:end="19:23"><literal type="number" pos:start="19:20" pos:end="19:23">0x0B</literal></expr>]</index></name> <operator pos:start="19:26" pos:end="19:26">&amp;</operator> <literal type="number" pos:start="19:28" pos:end="19:31">0x14</literal><operator pos:start="19:32" pos:end="19:32">)</operator> <operator pos:start="19:34" pos:end="19:35">==</operator> <literal type="number" pos:start="19:37" pos:end="19:40">0x14</literal></expr>)</condition> <block pos:start="19:43" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:28">

            <goto pos:start="21:13" pos:end="21:28">goto <name pos:start="21:18" pos:end="21:27">generic_io</name>;</goto>

	</block_content>}</block></if> <if type="elseif" pos:start="23:11" pos:end="27:9">else if <condition pos:start="23:19" pos:end="23:38">(<expr pos:start="23:20" pos:end="23:37"><name pos:start="23:20" pos:end="23:30"><name pos:start="23:20" pos:end="23:20">s</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:24">gr</name><index pos:start="23:25" pos:end="23:30">[<expr pos:start="23:26" pos:end="23:29"><literal type="number" pos:start="23:26" pos:end="23:29">0x0B</literal></expr>]</index></name> <operator pos:start="23:32" pos:end="23:32">&amp;</operator> <literal type="number" pos:start="23:34" pos:end="23:37">0x02</literal></expr>)</condition> <block pos:start="23:40" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:28">

            <goto pos:start="25:13" pos:end="25:28">goto <name pos:start="25:18" pos:end="25:27">generic_io</name>;</goto>

        </block_content>}</block></if></if_stmt>



	<expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:12">mode</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:26"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:20">gr</name><index pos:start="31:21" pos:end="31:26">[<expr pos:start="31:22" pos:end="31:25"><literal type="number" pos:start="31:22" pos:end="31:25">0x05</literal></expr>]</index></name> <operator pos:start="31:28" pos:end="31:28">&amp;</operator> <literal type="number" pos:start="31:30" pos:end="31:32">0x7</literal></expr>;</expr_stmt>

	<if_stmt pos:start="33:9" pos:end="55:9"><if pos:start="33:9" pos:end="43:9">if <condition pos:start="33:12" pos:end="33:63">(<expr pos:start="33:13" pos:end="33:62"><name pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:16">mode</name> <argument_list type="generic" pos:start="33:18" pos:end="33:30">&lt; <argument pos:start="33:20" pos:end="33:28"><expr pos:start="33:20" pos:end="33:28"><literal type="number" pos:start="33:20" pos:end="33:20">4</literal> <operator pos:start="33:22" pos:end="33:23">||</operator> <name pos:start="33:25" pos:end="33:28">mode</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="33:32" pos:end="33:32">5</literal> <operator pos:start="33:34" pos:end="33:35">||</operator> <operator pos:start="33:37" pos:end="33:37">(</operator><operator pos:start="33:38" pos:end="33:38">(</operator><name pos:start="33:39" pos:end="33:49"><name pos:start="33:39" pos:end="33:39">s</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:43">gr</name><index pos:start="33:44" pos:end="33:49">[<expr pos:start="33:45" pos:end="33:48"><literal type="number" pos:start="33:45" pos:end="33:48">0x0B</literal></expr>]</index></name> <operator pos:start="33:51" pos:end="33:51">&amp;</operator> <literal type="number" pos:start="33:53" pos:end="33:55">0x4</literal><operator pos:start="33:56" pos:end="33:56">)</operator> <operator pos:start="33:58" pos:end="33:59">==</operator> <literal type="number" pos:start="33:61" pos:end="33:61">0</literal><operator pos:start="33:62" pos:end="33:62">)</operator></expr>)</condition> <block pos:start="33:65" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:65">

            <expr_stmt pos:start="35:13" pos:end="35:31"><expr pos:start="35:13" pos:end="35:30"><call pos:start="35:13" pos:end="35:30"><name pos:start="35:13" pos:end="35:27">map_linear_vram</name><argument_list pos:start="35:28" pos:end="35:30">(<argument pos:start="35:29" pos:end="35:29"><expr pos:start="35:29" pos:end="35:29"><name pos:start="35:29" pos:end="35:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:65"><expr pos:start="37:13" pos:end="37:64"><name pos:start="37:13" pos:end="37:37"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:34">cirrus_linear_write</name><index pos:start="37:35" pos:end="37:37">[<expr pos:start="37:36" pos:end="37:36"><literal type="number" pos:start="37:36" pos:end="37:36">0</literal></expr>]</index></name> <operator pos:start="37:39" pos:end="37:39">=</operator> <name pos:start="37:41" pos:end="37:64">cirrus_linear_mem_writeb</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:65"><expr pos:start="39:13" pos:end="39:64"><name pos:start="39:13" pos:end="39:37"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:34">cirrus_linear_write</name><index pos:start="39:35" pos:end="39:37">[<expr pos:start="39:36" pos:end="39:36"><literal type="number" pos:start="39:36" pos:end="39:36">1</literal></expr>]</index></name> <operator pos:start="39:39" pos:end="39:39">=</operator> <name pos:start="39:41" pos:end="39:64">cirrus_linear_mem_writew</name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:65"><expr pos:start="41:13" pos:end="41:64"><name pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:34">cirrus_linear_write</name><index pos:start="41:35" pos:end="41:37">[<expr pos:start="41:36" pos:end="41:36"><literal type="number" pos:start="41:36" pos:end="41:36">2</literal></expr>]</index></name> <operator pos:start="41:39" pos:end="41:39">=</operator> <name pos:start="41:41" pos:end="41:64">cirrus_linear_mem_writel</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="55:9">else <block pos:start="43:16" pos:end="55:9">{<block_content pos:start="45:9" pos:end="53:61">

        <label pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:18">generic_io</name>:</label>

            <expr_stmt pos:start="47:13" pos:end="47:33"><expr pos:start="47:13" pos:end="47:32"><call pos:start="47:13" pos:end="47:32"><name pos:start="47:13" pos:end="47:29">unmap_linear_vram</name><argument_list pos:start="47:30" pos:end="47:32">(<argument pos:start="47:31" pos:end="47:31"><expr pos:start="47:31" pos:end="47:31"><name pos:start="47:31" pos:end="47:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:61"><expr pos:start="49:13" pos:end="49:60"><name pos:start="49:13" pos:end="49:37"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:34">cirrus_linear_write</name><index pos:start="49:35" pos:end="49:37">[<expr pos:start="49:36" pos:end="49:36"><literal type="number" pos:start="49:36" pos:end="49:36">0</literal></expr>]</index></name> <operator pos:start="49:39" pos:end="49:39">=</operator> <name pos:start="49:41" pos:end="49:60">cirrus_linear_writeb</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:61"><expr pos:start="51:13" pos:end="51:60"><name pos:start="51:13" pos:end="51:37"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:34">cirrus_linear_write</name><index pos:start="51:35" pos:end="51:37">[<expr pos:start="51:36" pos:end="51:36"><literal type="number" pos:start="51:36" pos:end="51:36">1</literal></expr>]</index></name> <operator pos:start="51:39" pos:end="51:39">=</operator> <name pos:start="51:41" pos:end="51:60">cirrus_linear_writew</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:61"><expr pos:start="53:13" pos:end="53:60"><name pos:start="53:13" pos:end="53:37"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:34">cirrus_linear_write</name><index pos:start="53:35" pos:end="53:37">[<expr pos:start="53:36" pos:end="53:36"><literal type="number" pos:start="53:36" pos:end="53:36">2</literal></expr>]</index></name> <operator pos:start="53:39" pos:end="53:39">=</operator> <name pos:start="53:41" pos:end="53:60">cirrus_linear_writel</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
