<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6528.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:34">ppcemb_tlb_check</name><parameter_list pos:start="1:35" pos:end="7:41">(<parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:43">CPUState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">env</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:67"><decl pos:start="1:51" pos:end="1:67"><type pos:start="1:51" pos:end="1:67"><name pos:start="1:51" pos:end="1:62">ppcemb_tlb_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">tlb</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:61"><decl pos:start="3:36" pos:end="3:61"><type pos:start="3:36" pos:end="3:61"><name pos:start="3:36" pos:end="3:53">target_phys_addr_t</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:61">raddrp</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:55"><decl pos:start="5:36" pos:end="5:55"><type pos:start="5:36" pos:end="5:55"><name pos:start="5:36" pos:end="5:47">target_ulong</name></type> <name pos:start="5:49" pos:end="5:55">address</name></decl></parameter>, <parameter pos:start="5:58" pos:end="5:69"><decl pos:start="5:58" pos:end="5:69"><type pos:start="5:58" pos:end="5:69"><name pos:start="5:58" pos:end="5:65">uint32_t</name></type> <name pos:start="5:67" pos:end="5:69">pid</name></decl></parameter>, <parameter pos:start="5:72" pos:end="5:78"><decl pos:start="5:72" pos:end="5:78"><type pos:start="5:72" pos:end="5:78"><name pos:start="5:72" pos:end="5:74">int</name></type> <name pos:start="5:76" pos:end="5:78">ext</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:40"><decl pos:start="7:36" pos:end="7:40"><type pos:start="7:36" pos:end="7:40"><name pos:start="7:36" pos:end="7:38">int</name></type> <name pos:start="7:40" pos:end="7:40">i</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="63:1">{<block_content pos:start="11:5" pos:end="61:13">

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:21">mask</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:26">/* Check valid flag */</comment>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:34">(<expr pos:start="17:9" pos:end="17:33"><operator pos:start="17:9" pos:end="17:9">!</operator><operator pos:start="17:10" pos:end="17:10">(</operator><name pos:start="17:11" pos:end="17:19"><name pos:start="17:11" pos:end="17:13">tlb</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:19">prot</name></name> <operator pos:start="17:21" pos:end="17:21">&amp;</operator> <name pos:start="17:23" pos:end="17:32">PAGE_VALID</name><operator pos:start="17:33" pos:end="17:33">)</operator></expr>)</condition> <block pos:start="17:36" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:18">

        <expr_stmt pos:start="19:9" pos:end="19:56"><expr pos:start="19:9" pos:end="19:55"><call pos:start="19:9" pos:end="19:55"><name pos:start="19:9" pos:end="19:16">qemu_log</name><argument_list pos:start="19:17" pos:end="19:55">(<argument pos:start="19:18" pos:end="19:41"><expr pos:start="19:18" pos:end="19:41"><literal type="string" pos:start="19:18" pos:end="19:41">"%s: TLB %d not valid\n"</literal></expr></argument>, <argument pos:start="19:44" pos:end="19:51"><expr pos:start="19:44" pos:end="19:51"><name pos:start="19:44" pos:end="19:51">__func__</name></expr></argument>, <argument pos:start="19:54" pos:end="19:54"><expr pos:start="19:54" pos:end="19:54"><name pos:start="19:54" pos:end="19:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:8">mask</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <operator pos:start="25:12" pos:end="25:12">~</operator><operator pos:start="25:13" pos:end="25:13">(</operator><name pos:start="25:14" pos:end="25:22"><name pos:start="25:14" pos:end="25:16">tlb</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:22">size</name></name> <operator pos:start="25:24" pos:end="25:24">-</operator> <literal type="number" pos:start="25:26" pos:end="25:26">1</literal><operator pos:start="25:27" pos:end="25:27">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="31:40"><expr pos:start="27:5" pos:end="31:39"><call pos:start="27:5" pos:end="31:39"><name pos:start="27:5" pos:end="27:13">LOG_SWTLB</name><argument_list pos:start="27:14" pos:end="31:39">(<argument pos:start="27:15" pos:end="29:39"><expr pos:start="27:15" pos:end="29:39"><literal type="string" pos:start="27:15" pos:end="27:35">"%s: TLB %d address "</literal> <name pos:start="27:37" pos:end="27:49">TARGET_FMT_lx</name> <literal type="string" pos:start="27:51" pos:end="27:64">" PID %u &lt;=&gt; "</literal> <name pos:start="27:66" pos:end="27:78">TARGET_FMT_lx</name>

              <literal type="string" pos:start="29:15" pos:end="29:17">" "</literal> <name pos:start="29:19" pos:end="29:31">TARGET_FMT_lx</name> <literal type="string" pos:start="29:33" pos:end="29:39">" %u\n"</literal></expr></argument>, <argument pos:start="29:42" pos:end="29:49"><expr pos:start="29:42" pos:end="29:49"><name pos:start="29:42" pos:end="29:49">__func__</name></expr></argument>, <argument pos:start="29:52" pos:end="29:52"><expr pos:start="29:52" pos:end="29:52"><name pos:start="29:52" pos:end="29:52">i</name></expr></argument>, <argument pos:start="29:55" pos:end="29:61"><expr pos:start="29:55" pos:end="29:61"><name pos:start="29:55" pos:end="29:61">address</name></expr></argument>, <argument pos:start="29:64" pos:end="29:66"><expr pos:start="29:64" pos:end="29:66"><name pos:start="29:64" pos:end="29:66">pid</name></expr></argument>, <argument pos:start="29:69" pos:end="29:76"><expr pos:start="29:69" pos:end="29:76"><name pos:start="29:69" pos:end="29:76"><name pos:start="29:69" pos:end="29:71">tlb</name><operator pos:start="29:72" pos:end="29:73">-&gt;</operator><name pos:start="29:74" pos:end="29:76">EPN</name></name></expr></argument>,

              <argument pos:start="31:15" pos:end="31:18"><expr pos:start="31:15" pos:end="31:18"><name pos:start="31:15" pos:end="31:18">mask</name></expr></argument>, <argument pos:start="31:21" pos:end="31:38"><expr pos:start="31:21" pos:end="31:38"><operator pos:start="31:21" pos:end="31:21">(</operator><name pos:start="31:22" pos:end="31:29">uint32_t</name><operator pos:start="31:30" pos:end="31:30">)</operator><name pos:start="31:31" pos:end="31:38"><name pos:start="31:31" pos:end="31:33">tlb</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:38">PID</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="33:5" pos:end="33:19">/* Check PID */</comment>

    <if_stmt pos:start="35:5" pos:end="37:18"><if pos:start="35:5" pos:end="37:18">if <condition pos:start="35:8" pos:end="35:41">(<expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:11">tlb</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:16">PID</name></name> <operator pos:start="35:18" pos:end="35:19">!=</operator> <literal type="number" pos:start="35:21" pos:end="35:21">0</literal> <operator pos:start="35:23" pos:end="35:24">&amp;&amp;</operator> <name pos:start="35:26" pos:end="35:33"><name pos:start="35:26" pos:end="35:28">tlb</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:33">PID</name></name> <operator pos:start="35:35" pos:end="35:36">!=</operator> <name pos:start="35:38" pos:end="35:40">pid</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:18"><block_content pos:start="37:9" pos:end="37:18">

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <comment type="block" pos:start="39:5" pos:end="39:33">/* Check effective address */</comment>

    <if_stmt pos:start="41:5" pos:end="43:18"><if pos:start="41:5" pos:end="43:18">if <condition pos:start="41:8" pos:end="41:37">(<expr pos:start="41:9" pos:end="41:36"><operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:16">address</name> <operator pos:start="41:18" pos:end="41:18">&amp;</operator> <name pos:start="41:20" pos:end="41:23">mask</name><operator pos:start="41:24" pos:end="41:24">)</operator> <operator pos:start="41:26" pos:end="41:27">!=</operator> <name pos:start="41:29" pos:end="41:36"><name pos:start="41:29" pos:end="41:31">tlb</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:36">EPN</name></name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:18"><block_content pos:start="43:9" pos:end="43:18">

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="48:0"><expr pos:start="45:5" pos:end="45:51"><operator pos:start="45:5" pos:end="45:5">*</operator><name pos:start="45:6" pos:end="45:11">raddrp</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <operator pos:start="45:15" pos:end="45:15">(</operator><name pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:18">tlb</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:23">RPN</name></name> <operator pos:start="45:25" pos:end="45:25">&amp;</operator> <name pos:start="45:27" pos:end="45:30">mask</name><operator pos:start="45:31" pos:end="45:31">)</operator> <operator pos:start="45:33" pos:end="45:33">|</operator> <operator pos:start="45:35" pos:end="45:35">(</operator><name pos:start="45:36" pos:end="45:42">address</name> <operator pos:start="45:44" pos:end="45:44">&amp;</operator> <operator pos:start="45:46" pos:end="45:46">~</operator><name pos:start="45:47" pos:end="45:50">mask</name><operator pos:start="45:51" pos:end="45:51">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="47:1" pos:end="47:33">#<cpp:directive pos:start="47:2" pos:end="47:3">if</cpp:directive> <expr pos:start="47:5" pos:end="47:33"><operator pos:start="47:5" pos:end="47:5">(</operator><name pos:start="47:6" pos:end="47:26">TARGET_PHYS_ADDR_BITS</name> <operator pos:start="47:28" pos:end="47:29">&gt;=</operator> <literal type="number" pos:start="47:31" pos:end="47:32">36</literal><operator pos:start="47:33" pos:end="47:33">)</operator></expr></cpp:if>

    <if_stmt pos:start="49:5" pos:end="58:0"><if pos:start="49:5" pos:end="58:0">if <condition pos:start="49:8" pos:end="49:12">(<expr pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">ext</name></expr>)</condition> <block pos:start="49:14" pos:end="58:0">{<block_content pos:start="53:9" pos:end="53:62">

        <comment type="block" pos:start="51:9" pos:end="51:52">/* Extend the physical address to 36 bits */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:62"><expr pos:start="53:9" pos:end="53:61"><operator pos:start="53:9" pos:end="53:9">*</operator><name pos:start="53:10" pos:end="53:15">raddrp</name> <operator pos:start="53:17" pos:end="53:18">|=</operator> <operator pos:start="53:20" pos:end="53:20">(</operator><name pos:start="53:21" pos:end="53:38">target_phys_addr_t</name><operator pos:start="53:39" pos:end="53:39">)</operator><operator pos:start="53:40" pos:end="53:40">(</operator><name pos:start="53:41" pos:end="53:48"><name pos:start="53:41" pos:end="53:43">tlb</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:48">RPN</name></name> <operator pos:start="53:50" pos:end="53:50">&amp;</operator> <literal type="number" pos:start="53:52" pos:end="53:54">0xF</literal><operator pos:start="53:55" pos:end="53:55">)</operator> <operator pos:start="53:57" pos:end="53:58">&lt;&lt;</operator> <literal type="number" pos:start="53:60" pos:end="53:61">32</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>



    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
