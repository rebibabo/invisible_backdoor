<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14438.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">read_dct_coeffs</name><parameter_list pos:start="1:27" pos:end="5:71">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:43">BitstreamContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">bc</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:56">int32_t</name></type> <name pos:start="1:58" pos:end="1:66"><name pos:start="1:58" pos:end="1:62">block</name><index pos:start="1:63" pos:end="1:66">[<expr pos:start="1:64" pos:end="1:65"><literal type="number" pos:start="1:64" pos:end="1:65">64</literal></expr>]</index></name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:46"><decl pos:start="3:28" pos:end="3:46"><type pos:start="3:28" pos:end="3:46"><specifier pos:start="3:28" pos:end="3:32">const</specifier> <name pos:start="3:34" pos:end="3:40">uint8_t</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:46">scan</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:63"><decl pos:start="5:28" pos:end="5:63"><type pos:start="5:28" pos:end="5:55"><specifier pos:start="5:28" pos:end="5:32">const</specifier> <name pos:start="5:34" pos:end="5:40">int32_t</name></type> <name pos:start="5:42" pos:end="5:63"><name pos:start="5:42" pos:end="5:55">quant_matrices</name><index pos:start="5:56" pos:end="5:59">[<expr pos:start="5:57" pos:end="5:58"><literal type="number" pos:start="5:57" pos:end="5:58">16</literal></expr>]</index><index pos:start="5:60" pos:end="5:63">[<expr pos:start="5:61" pos:end="5:62"><literal type="number" pos:start="5:61" pos:end="5:62">64</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="5:66" pos:end="5:70"><decl pos:start="5:66" pos:end="5:70"><type pos:start="5:66" pos:end="5:70"><name pos:start="5:66" pos:end="5:68">int</name></type> <name pos:start="5:70" pos:end="5:70">q</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="193:1">{<block_content pos:start="9:5" pos:end="191:13">

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22"><name pos:start="9:9" pos:end="9:17">coef_list</name><index pos:start="9:18" pos:end="9:22">[<expr pos:start="9:19" pos:end="9:21"><literal type="number" pos:start="9:19" pos:end="9:21">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:17">mode_list</name><index pos:start="11:18" pos:end="11:22">[<expr pos:start="11:19" pos:end="11:21"><literal type="number" pos:start="11:19" pos:end="11:21">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">t</name></decl>, <decl pos:start="13:15" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:18">bits</name></decl>, <decl pos:start="13:21" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:25">ccoef</name></decl>, <decl pos:start="13:28" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:28" pos:end="13:31">mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:49"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">list_start</name> <init pos:start="15:20" pos:end="15:23">= <expr pos:start="15:22" pos:end="15:23"><literal type="number" pos:start="15:22" pos:end="15:23">64</literal></expr></init></decl>, <decl pos:start="15:26" pos:end="15:38"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:26" pos:end="15:33">list_end</name> <init pos:start="15:35" pos:end="15:38">= <expr pos:start="15:37" pos:end="15:38"><literal type="number" pos:start="15:37" pos:end="15:38">64</literal></expr></init></decl>, <decl pos:start="15:41" pos:end="15:48"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:41" pos:end="15:48">list_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:18">coef_count</name> <init pos:start="17:20" pos:end="17:22">= <expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:16">coef_idx</name><index pos:start="19:17" pos:end="19:20">[<expr pos:start="19:18" pos:end="19:19"><literal type="number" pos:start="19:18" pos:end="19:19">64</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:17">quant_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:24"><type pos:start="23:5" pos:end="23:19"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:17">int32_t</name> <modifier pos:start="23:19" pos:end="23:19">*</modifier></type><name pos:start="23:20" pos:end="23:24">quant</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:13">coef_list</name><index pos:start="27:14" pos:end="27:23">[<expr pos:start="27:15" pos:end="27:22"><name pos:start="27:15" pos:end="27:22">list_end</name></expr>]</index></name> <operator pos:start="27:25" pos:end="27:25">=</operator> <literal type="number" pos:start="27:27" pos:end="27:27">4</literal></expr>;</expr_stmt>  <expr_stmt pos:start="27:31" pos:end="27:56"><expr pos:start="27:31" pos:end="27:55"><name pos:start="27:31" pos:end="27:51"><name pos:start="27:31" pos:end="27:39">mode_list</name><index pos:start="27:40" pos:end="27:51">[<expr pos:start="27:41" pos:end="27:50"><name pos:start="27:41" pos:end="27:48">list_end</name><operator pos:start="27:49" pos:end="27:50">++</operator></expr>]</index></name> <operator pos:start="27:53" pos:end="27:53">=</operator> <literal type="number" pos:start="27:55" pos:end="27:55">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:13">coef_list</name><index pos:start="29:14" pos:end="29:23">[<expr pos:start="29:15" pos:end="29:22"><name pos:start="29:15" pos:end="29:22">list_end</name></expr>]</index></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <literal type="number" pos:start="29:27" pos:end="29:28">24</literal></expr>;</expr_stmt> <expr_stmt pos:start="29:31" pos:end="29:56"><expr pos:start="29:31" pos:end="29:55"><name pos:start="29:31" pos:end="29:51"><name pos:start="29:31" pos:end="29:39">mode_list</name><index pos:start="29:40" pos:end="29:51">[<expr pos:start="29:41" pos:end="29:50"><name pos:start="29:41" pos:end="29:48">list_end</name><operator pos:start="29:49" pos:end="29:50">++</operator></expr>]</index></name> <operator pos:start="29:53" pos:end="29:53">=</operator> <literal type="number" pos:start="29:55" pos:end="29:55">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:13">coef_list</name><index pos:start="31:14" pos:end="31:23">[<expr pos:start="31:15" pos:end="31:22"><name pos:start="31:15" pos:end="31:22">list_end</name></expr>]</index></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <literal type="number" pos:start="31:27" pos:end="31:28">44</literal></expr>;</expr_stmt> <expr_stmt pos:start="31:31" pos:end="31:56"><expr pos:start="31:31" pos:end="31:55"><name pos:start="31:31" pos:end="31:51"><name pos:start="31:31" pos:end="31:39">mode_list</name><index pos:start="31:40" pos:end="31:51">[<expr pos:start="31:41" pos:end="31:50"><name pos:start="31:41" pos:end="31:48">list_end</name><operator pos:start="31:49" pos:end="31:50">++</operator></expr>]</index></name> <operator pos:start="31:53" pos:end="31:53">=</operator> <literal type="number" pos:start="31:55" pos:end="31:55">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:13">coef_list</name><index pos:start="33:14" pos:end="33:23">[<expr pos:start="33:15" pos:end="33:22"><name pos:start="33:15" pos:end="33:22">list_end</name></expr>]</index></name> <operator pos:start="33:25" pos:end="33:25">=</operator> <literal type="number" pos:start="33:27" pos:end="33:27">1</literal></expr>;</expr_stmt>  <expr_stmt pos:start="33:31" pos:end="33:56"><expr pos:start="33:31" pos:end="33:55"><name pos:start="33:31" pos:end="33:51"><name pos:start="33:31" pos:end="33:39">mode_list</name><index pos:start="33:40" pos:end="33:51">[<expr pos:start="33:41" pos:end="33:50"><name pos:start="33:41" pos:end="33:48">list_end</name><operator pos:start="33:49" pos:end="33:50">++</operator></expr>]</index></name> <operator pos:start="33:53" pos:end="33:53">=</operator> <literal type="number" pos:start="33:55" pos:end="33:55">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:28"><expr pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:13">coef_list</name><index pos:start="35:14" pos:end="35:23">[<expr pos:start="35:15" pos:end="35:22"><name pos:start="35:15" pos:end="35:22">list_end</name></expr>]</index></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <literal type="number" pos:start="35:27" pos:end="35:27">2</literal></expr>;</expr_stmt>  <expr_stmt pos:start="35:31" pos:end="35:56"><expr pos:start="35:31" pos:end="35:55"><name pos:start="35:31" pos:end="35:51"><name pos:start="35:31" pos:end="35:39">mode_list</name><index pos:start="35:40" pos:end="35:51">[<expr pos:start="35:41" pos:end="35:50"><name pos:start="35:41" pos:end="35:48">list_end</name><operator pos:start="35:49" pos:end="35:50">++</operator></expr>]</index></name> <operator pos:start="35:53" pos:end="35:53">=</operator> <literal type="number" pos:start="35:55" pos:end="35:55">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:13">coef_list</name><index pos:start="37:14" pos:end="37:23">[<expr pos:start="37:15" pos:end="37:22"><name pos:start="37:15" pos:end="37:22">list_end</name></expr>]</index></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <literal type="number" pos:start="37:27" pos:end="37:27">3</literal></expr>;</expr_stmt>  <expr_stmt pos:start="37:31" pos:end="37:56"><expr pos:start="37:31" pos:end="37:55"><name pos:start="37:31" pos:end="37:51"><name pos:start="37:31" pos:end="37:39">mode_list</name><index pos:start="37:40" pos:end="37:51">[<expr pos:start="37:41" pos:end="37:50"><name pos:start="37:41" pos:end="37:48">list_end</name><operator pos:start="37:49" pos:end="37:50">++</operator></expr>]</index></name> <operator pos:start="37:53" pos:end="37:53">=</operator> <literal type="number" pos:start="37:55" pos:end="37:55">3</literal></expr>;</expr_stmt>



    <for pos:start="41:5" pos:end="153:5">for <control pos:start="41:9" pos:end="41:61">(<init pos:start="41:10" pos:end="41:42"><expr pos:start="41:10" pos:end="41:41"><name pos:start="41:10" pos:end="41:13">bits</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="41:37"><name pos:start="41:17" pos:end="41:30">bitstream_read</name><argument_list pos:start="41:31" pos:end="41:37">(<argument pos:start="41:32" pos:end="41:33"><expr pos:start="41:32" pos:end="41:33"><name pos:start="41:32" pos:end="41:33">bc</name></expr></argument>, <argument pos:start="41:36" pos:end="41:36"><expr pos:start="41:36" pos:end="41:36"><literal type="number" pos:start="41:36" pos:end="41:36">4</literal></expr></argument>)</argument_list></call> <operator pos:start="41:39" pos:end="41:39">-</operator> <literal type="number" pos:start="41:41" pos:end="41:41">1</literal></expr>;</init> <condition pos:start="41:44" pos:end="41:53"><expr pos:start="41:44" pos:end="41:52"><name pos:start="41:44" pos:end="41:47">bits</name> <operator pos:start="41:49" pos:end="41:50">&gt;=</operator> <literal type="number" pos:start="41:52" pos:end="41:52">0</literal></expr>;</condition> <incr pos:start="41:55" pos:end="41:60"><expr pos:start="41:55" pos:end="41:60"><name pos:start="41:55" pos:end="41:58">bits</name><operator pos:start="41:59" pos:end="41:60">--</operator></expr></incr>)</control> <block pos:start="41:63" pos:end="153:5">{<block_content pos:start="43:9" pos:end="151:9">

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:16">list_pos</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:29">list_start</name></expr>;</expr_stmt>

        <while pos:start="45:9" pos:end="151:9">while <condition pos:start="45:15" pos:end="45:35">(<expr pos:start="45:16" pos:end="45:34"><name pos:start="45:16" pos:end="45:23">list_pos</name> <operator pos:start="45:25" pos:end="45:25">&lt;</operator> <name pos:start="45:27" pos:end="45:34">list_end</name></expr>)</condition> <block pos:start="45:37" pos:end="151:9">{<block_content pos:start="47:13" pos:end="149:13">

            <if_stmt pos:start="47:13" pos:end="53:13"><if pos:start="47:13" pos:end="53:13">if <condition pos:start="47:16" pos:end="47:88">(<expr pos:start="47:17" pos:end="47:87"><operator pos:start="47:17" pos:end="47:17">!</operator><operator pos:start="47:18" pos:end="47:18">(</operator><name pos:start="47:19" pos:end="47:37"><name pos:start="47:19" pos:end="47:27">mode_list</name><index pos:start="47:28" pos:end="47:37">[<expr pos:start="47:29" pos:end="47:36"><name pos:start="47:29" pos:end="47:36">list_pos</name></expr>]</index></name> <operator pos:start="47:39" pos:end="47:39">|</operator> <name pos:start="47:41" pos:end="47:59"><name pos:start="47:41" pos:end="47:49">coef_list</name><index pos:start="47:50" pos:end="47:59">[<expr pos:start="47:51" pos:end="47:58"><name pos:start="47:51" pos:end="47:58">list_pos</name></expr>]</index></name><operator pos:start="47:60" pos:end="47:60">)</operator> <operator pos:start="47:62" pos:end="47:63">||</operator> <operator pos:start="47:65" pos:end="47:65">!</operator><call pos:start="47:66" pos:end="47:87"><name pos:start="47:66" pos:end="47:83">bitstream_read_bit</name><argument_list pos:start="47:84" pos:end="47:87">(<argument pos:start="47:85" pos:end="47:86"><expr pos:start="47:85" pos:end="47:86"><name pos:start="47:85" pos:end="47:86">bc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:90" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:25">

                <expr_stmt pos:start="49:17" pos:end="49:27"><expr pos:start="49:17" pos:end="49:26"><name pos:start="49:17" pos:end="49:24">list_pos</name><operator pos:start="49:25" pos:end="49:26">++</operator></expr>;</expr_stmt>

                <continue pos:start="51:17" pos:end="51:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:40"><expr pos:start="55:13" pos:end="55:39"><name pos:start="55:13" pos:end="55:17">ccoef</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:39"><name pos:start="55:21" pos:end="55:29">coef_list</name><index pos:start="55:30" pos:end="55:39">[<expr pos:start="55:31" pos:end="55:38"><name pos:start="55:31" pos:end="55:38">list_pos</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:40"><expr pos:start="57:13" pos:end="57:39"><name pos:start="57:13" pos:end="57:16">mode</name>  <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:39"><name pos:start="57:21" pos:end="57:29">mode_list</name><index pos:start="57:30" pos:end="57:39">[<expr pos:start="57:31" pos:end="57:38"><name pos:start="57:31" pos:end="57:38">list_pos</name></expr>]</index></name></expr>;</expr_stmt>

            <switch pos:start="59:13" pos:end="149:13">switch <condition pos:start="59:20" pos:end="59:25">(<expr pos:start="59:21" pos:end="59:24"><name pos:start="59:21" pos:end="59:24">mode</name></expr>)</condition> <block pos:start="59:27" pos:end="149:13">{<block_content pos:start="61:13" pos:end="147:22">

            <case pos:start="61:13" pos:end="61:19">case <expr pos:start="61:18" pos:end="61:18"><literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>:</case>

                <expr_stmt pos:start="63:17" pos:end="63:48"><expr pos:start="63:17" pos:end="63:47"><name pos:start="63:17" pos:end="63:35"><name pos:start="63:17" pos:end="63:25">coef_list</name><index pos:start="63:26" pos:end="63:35">[<expr pos:start="63:27" pos:end="63:34"><name pos:start="63:27" pos:end="63:34">list_pos</name></expr>]</index></name> <operator pos:start="63:37" pos:end="63:37">=</operator> <name pos:start="63:39" pos:end="63:43">ccoef</name> <operator pos:start="63:45" pos:end="63:45">+</operator> <literal type="number" pos:start="63:47" pos:end="63:47">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:40"><expr pos:start="65:17" pos:end="65:39"><name pos:start="65:17" pos:end="65:35"><name pos:start="65:17" pos:end="65:25">mode_list</name><index pos:start="65:26" pos:end="65:35">[<expr pos:start="65:27" pos:end="65:34"><name pos:start="65:27" pos:end="65:34">list_pos</name></expr>]</index></name> <operator pos:start="65:37" pos:end="65:37">=</operator> <literal type="number" pos:start="65:39" pos:end="65:39">1</literal></expr>;</expr_stmt>

            <case pos:start="67:13" pos:end="67:19">case <expr pos:start="67:18" pos:end="67:18"><literal type="number" pos:start="67:18" pos:end="67:18">2</literal></expr>:</case>

                <if_stmt pos:start="69:17" pos:end="75:17"><if pos:start="69:17" pos:end="75:17">if <condition pos:start="69:20" pos:end="69:30">(<expr pos:start="69:21" pos:end="69:29"><name pos:start="69:21" pos:end="69:24">mode</name> <operator pos:start="69:26" pos:end="69:27">==</operator> <literal type="number" pos:start="69:29" pos:end="69:29">2</literal></expr>)</condition> <block pos:start="69:32" pos:end="75:17">{<block_content pos:start="71:21" pos:end="73:46">

                    <expr_stmt pos:start="71:21" pos:end="71:46"><expr pos:start="71:21" pos:end="71:45"><name pos:start="71:21" pos:end="71:39"><name pos:start="71:21" pos:end="71:29">coef_list</name><index pos:start="71:30" pos:end="71:39">[<expr pos:start="71:31" pos:end="71:38"><name pos:start="71:31" pos:end="71:38">list_pos</name></expr>]</index></name>   <operator pos:start="71:43" pos:end="71:43">=</operator> <literal type="number" pos:start="71:45" pos:end="71:45">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:46"><expr pos:start="73:21" pos:end="73:45"><name pos:start="73:21" pos:end="73:41"><name pos:start="73:21" pos:end="73:29">mode_list</name><index pos:start="73:30" pos:end="73:41">[<expr pos:start="73:31" pos:end="73:40"><name pos:start="73:31" pos:end="73:38">list_pos</name><operator pos:start="73:39" pos:end="73:40">++</operator></expr>]</index></name> <operator pos:start="73:43" pos:end="73:43">=</operator> <literal type="number" pos:start="73:45" pos:end="73:45">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <for pos:start="77:17" pos:end="105:17">for <control pos:start="77:21" pos:end="77:48">(<init pos:start="77:22" pos:end="77:27"><expr pos:start="77:22" pos:end="77:26"><name pos:start="77:22" pos:end="77:22">i</name> <operator pos:start="77:24" pos:end="77:24">=</operator> <literal type="number" pos:start="77:26" pos:end="77:26">0</literal></expr>;</init> <condition pos:start="77:29" pos:end="77:34"><expr pos:start="77:29" pos:end="77:33"><name pos:start="77:29" pos:end="77:29">i</name> <operator pos:start="77:31" pos:end="77:31">&lt;</operator> <literal type="number" pos:start="77:33" pos:end="77:33">4</literal></expr>;</condition> <incr pos:start="77:36" pos:end="77:47"><expr pos:start="77:36" pos:end="77:38"><name pos:start="77:36" pos:end="77:36">i</name><operator pos:start="77:37" pos:end="77:38">++</operator></expr><operator pos:start="77:39" pos:end="77:39">,</operator> <expr pos:start="77:41" pos:end="77:47"><name pos:start="77:41" pos:end="77:45">ccoef</name><operator pos:start="77:46" pos:end="77:47">++</operator></expr></incr>)</control> <block pos:start="77:50" pos:end="105:17">{<block_content pos:start="79:21" pos:end="103:21">

                    <if_stmt pos:start="79:21" pos:end="103:21"><if pos:start="79:21" pos:end="85:21">if <condition pos:start="79:24" pos:end="79:47">(<expr pos:start="79:25" pos:end="79:46"><call pos:start="79:25" pos:end="79:46"><name pos:start="79:25" pos:end="79:42">bitstream_read_bit</name><argument_list pos:start="79:43" pos:end="79:46">(<argument pos:start="79:44" pos:end="79:45"><expr pos:start="79:44" pos:end="79:45"><name pos:start="79:44" pos:end="79:45">bc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:49" pos:end="85:21">{<block_content pos:start="81:25" pos:end="83:52">

                        <expr_stmt pos:start="81:25" pos:end="81:56"><expr pos:start="81:25" pos:end="81:55"><name pos:start="81:25" pos:end="81:47"><name pos:start="81:25" pos:end="81:33">coef_list</name><index pos:start="81:34" pos:end="81:47">[<expr pos:start="81:35" pos:end="81:46"><operator pos:start="81:35" pos:end="81:36">--</operator><name pos:start="81:37" pos:end="81:46">list_start</name></expr>]</index></name> <operator pos:start="81:49" pos:end="81:49">=</operator> <name pos:start="81:51" pos:end="81:55">ccoef</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="83:25" pos:end="83:52"><expr pos:start="83:25" pos:end="83:51"><name pos:start="83:25" pos:end="83:47"><name pos:start="83:25" pos:end="83:33">mode_list</name><index pos:start="83:34" pos:end="83:47">[  <expr pos:start="83:37" pos:end="83:46"><name pos:start="83:37" pos:end="83:46">list_start</name></expr>]</index></name> <operator pos:start="83:49" pos:end="83:49">=</operator> <literal type="number" pos:start="83:51" pos:end="83:51">3</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="85:23" pos:end="103:21">else <block pos:start="85:28" pos:end="103:21">{<block_content pos:start="87:25" pos:end="101:55">

                        <if_stmt pos:start="87:25" pos:end="97:25"><if pos:start="87:25" pos:end="91:25">if <condition pos:start="87:28" pos:end="87:34">(<expr pos:start="87:29" pos:end="87:33"><operator pos:start="87:29" pos:end="87:29">!</operator><name pos:start="87:30" pos:end="87:33">bits</name></expr>)</condition> <block pos:start="87:36" pos:end="91:25">{<block_content pos:start="89:29" pos:end="89:66">

                            <expr_stmt pos:start="89:29" pos:end="89:66"><expr pos:start="89:29" pos:end="89:65"><name pos:start="89:29" pos:end="89:29">t</name> <operator pos:start="89:31" pos:end="89:31">=</operator> <literal type="number" pos:start="89:33" pos:end="89:35">1</literal> <operator pos:start="89:35" pos:end="89:35">-</operator> <operator pos:start="89:37" pos:end="89:37">(</operator><call pos:start="89:38" pos:end="89:59"><name pos:start="89:38" pos:end="89:55">bitstream_read_bit</name><argument_list pos:start="89:56" pos:end="89:59">(<argument pos:start="89:57" pos:end="89:58"><expr pos:start="89:57" pos:end="89:58"><name pos:start="89:57" pos:end="89:58">bc</name></expr></argument>)</argument_list></call> <operator pos:start="89:61" pos:end="89:62">&lt;&lt;</operator> <literal type="number" pos:start="89:64" pos:end="89:64">1</literal><operator pos:start="89:65" pos:end="89:65">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="91:27" pos:end="97:25">else <block pos:start="91:32" pos:end="97:25">{<block_content pos:start="93:29" pos:end="95:60">

                            <expr_stmt pos:start="93:29" pos:end="93:69"><expr pos:start="93:29" pos:end="93:68"><name pos:start="93:29" pos:end="93:29">t</name> <operator pos:start="93:31" pos:end="93:31">=</operator> <call pos:start="93:33" pos:end="93:56"><name pos:start="93:33" pos:end="93:46">bitstream_read</name><argument_list pos:start="93:47" pos:end="93:56">(<argument pos:start="93:48" pos:end="93:49"><expr pos:start="93:48" pos:end="93:49"><name pos:start="93:48" pos:end="93:49">bc</name></expr></argument>, <argument pos:start="93:52" pos:end="93:55"><expr pos:start="93:52" pos:end="93:55"><name pos:start="93:52" pos:end="93:55">bits</name></expr></argument>)</argument_list></call> <operator pos:start="93:58" pos:end="93:58">|</operator> <literal type="number" pos:start="93:60" pos:end="93:60">1</literal> <operator pos:start="93:62" pos:end="93:63">&lt;&lt;</operator> <name pos:start="93:65" pos:end="93:68">bits</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="95:29" pos:end="95:60"><expr pos:start="95:29" pos:end="95:59"><name pos:start="95:29" pos:end="95:29">t</name> <operator pos:start="95:31" pos:end="95:31">=</operator> <call pos:start="95:33" pos:end="95:59"><name pos:start="95:33" pos:end="95:52">bitstream_apply_sign</name><argument_list pos:start="95:53" pos:end="95:59">(<argument pos:start="95:54" pos:end="95:55"><expr pos:start="95:54" pos:end="95:55"><name pos:start="95:54" pos:end="95:55">bc</name></expr></argument>, <argument pos:start="95:58" pos:end="95:58"><expr pos:start="95:58" pos:end="95:58"><name pos:start="95:58" pos:end="95:58">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="99:25" pos:end="99:47"><expr pos:start="99:25" pos:end="99:46"><name pos:start="99:25" pos:end="99:42"><name pos:start="99:25" pos:end="99:29">block</name><index pos:start="99:30" pos:end="99:42">[<expr pos:start="99:31" pos:end="99:41"><name pos:start="99:31" pos:end="99:41"><name pos:start="99:31" pos:end="99:34">scan</name><index pos:start="99:35" pos:end="99:41">[<expr pos:start="99:36" pos:end="99:40"><name pos:start="99:36" pos:end="99:40">ccoef</name></expr>]</index></name></expr>]</index></name> <operator pos:start="99:44" pos:end="99:44">=</operator> <name pos:start="99:46" pos:end="99:46">t</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="101:25" pos:end="101:55"><expr pos:start="101:25" pos:end="101:54"><name pos:start="101:25" pos:end="101:46"><name pos:start="101:25" pos:end="101:32">coef_idx</name><index pos:start="101:33" pos:end="101:46">[<expr pos:start="101:34" pos:end="101:45"><name pos:start="101:34" pos:end="101:43">coef_count</name><operator pos:start="101:44" pos:end="101:45">++</operator></expr>]</index></name> <operator pos:start="101:48" pos:end="101:48">=</operator> <name pos:start="101:50" pos:end="101:54">ccoef</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>

                <break pos:start="107:17" pos:end="107:22">break;</break>

            <case pos:start="109:13" pos:end="109:19">case <expr pos:start="109:18" pos:end="109:18"><literal type="number" pos:start="109:18" pos:end="109:18">1</literal></expr>:</case>

                <expr_stmt pos:start="111:17" pos:end="111:40"><expr pos:start="111:17" pos:end="111:39"><name pos:start="111:17" pos:end="111:35"><name pos:start="111:17" pos:end="111:25">mode_list</name><index pos:start="111:26" pos:end="111:35">[<expr pos:start="111:27" pos:end="111:34"><name pos:start="111:27" pos:end="111:34">list_pos</name></expr>]</index></name> <operator pos:start="111:37" pos:end="111:37">=</operator> <literal type="number" pos:start="111:39" pos:end="111:39">2</literal></expr>;</expr_stmt>

                <for pos:start="113:17" pos:end="121:17">for <control pos:start="113:21" pos:end="113:39">(<init pos:start="113:22" pos:end="113:27"><expr pos:start="113:22" pos:end="113:26"><name pos:start="113:22" pos:end="113:22">i</name> <operator pos:start="113:24" pos:end="113:24">=</operator> <literal type="number" pos:start="113:26" pos:end="113:26">0</literal></expr>;</init> <condition pos:start="113:29" pos:end="113:34"><expr pos:start="113:29" pos:end="113:33"><name pos:start="113:29" pos:end="113:29">i</name> <operator pos:start="113:31" pos:end="113:31">&lt;</operator> <literal type="number" pos:start="113:33" pos:end="113:33">3</literal></expr>;</condition> <incr pos:start="113:36" pos:end="113:38"><expr pos:start="113:36" pos:end="113:38"><name pos:start="113:36" pos:end="113:36">i</name><operator pos:start="113:37" pos:end="113:38">++</operator></expr></incr>)</control> <block pos:start="113:41" pos:end="121:17">{<block_content pos:start="115:21" pos:end="119:46">

                    <expr_stmt pos:start="115:21" pos:end="115:31"><expr pos:start="115:21" pos:end="115:30"><name pos:start="115:21" pos:end="115:25">ccoef</name> <operator pos:start="115:27" pos:end="115:28">+=</operator> <literal type="number" pos:start="115:30" pos:end="115:30">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="117:21" pos:end="117:50"><expr pos:start="117:21" pos:end="117:49"><name pos:start="117:21" pos:end="117:39"><name pos:start="117:21" pos:end="117:29">coef_list</name><index pos:start="117:30" pos:end="117:39">[<expr pos:start="117:31" pos:end="117:38"><name pos:start="117:31" pos:end="117:38">list_end</name></expr>]</index></name>   <operator pos:start="117:43" pos:end="117:43">=</operator> <name pos:start="117:45" pos:end="117:49">ccoef</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="119:21" pos:end="119:46"><expr pos:start="119:21" pos:end="119:45"><name pos:start="119:21" pos:end="119:41"><name pos:start="119:21" pos:end="119:29">mode_list</name><index pos:start="119:30" pos:end="119:41">[<expr pos:start="119:31" pos:end="119:40"><name pos:start="119:31" pos:end="119:38">list_end</name><operator pos:start="119:39" pos:end="119:40">++</operator></expr>]</index></name> <operator pos:start="119:43" pos:end="119:43">=</operator> <literal type="number" pos:start="119:45" pos:end="119:45">2</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

                <break pos:start="123:17" pos:end="123:22">break;</break>

            <case pos:start="125:13" pos:end="125:19">case <expr pos:start="125:18" pos:end="125:18"><literal type="number" pos:start="125:18" pos:end="125:18">3</literal></expr>:</case>

                <if_stmt pos:start="127:17" pos:end="137:17"><if pos:start="127:17" pos:end="131:17">if <condition pos:start="127:20" pos:end="127:26">(<expr pos:start="127:21" pos:end="127:25"><operator pos:start="127:21" pos:end="127:21">!</operator><name pos:start="127:22" pos:end="127:25">bits</name></expr>)</condition> <block pos:start="127:28" pos:end="131:17">{<block_content pos:start="129:21" pos:end="129:58">

                    <expr_stmt pos:start="129:21" pos:end="129:58"><expr pos:start="129:21" pos:end="129:57"><name pos:start="129:21" pos:end="129:21">t</name> <operator pos:start="129:23" pos:end="129:23">=</operator> <literal type="number" pos:start="129:25" pos:end="129:27">1</literal> <operator pos:start="129:27" pos:end="129:27">-</operator> <operator pos:start="129:29" pos:end="129:29">(</operator><call pos:start="129:30" pos:end="129:51"><name pos:start="129:30" pos:end="129:47">bitstream_read_bit</name><argument_list pos:start="129:48" pos:end="129:51">(<argument pos:start="129:49" pos:end="129:50"><expr pos:start="129:49" pos:end="129:50"><name pos:start="129:49" pos:end="129:50">bc</name></expr></argument>)</argument_list></call> <operator pos:start="129:53" pos:end="129:54">&lt;&lt;</operator> <literal type="number" pos:start="129:56" pos:end="129:56">1</literal><operator pos:start="129:57" pos:end="129:57">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="131:19" pos:end="137:17">else <block pos:start="131:24" pos:end="137:17">{<block_content pos:start="133:21" pos:end="135:52">

                    <expr_stmt pos:start="133:21" pos:end="133:61"><expr pos:start="133:21" pos:end="133:60"><name pos:start="133:21" pos:end="133:21">t</name> <operator pos:start="133:23" pos:end="133:23">=</operator> <call pos:start="133:25" pos:end="133:48"><name pos:start="133:25" pos:end="133:38">bitstream_read</name><argument_list pos:start="133:39" pos:end="133:48">(<argument pos:start="133:40" pos:end="133:41"><expr pos:start="133:40" pos:end="133:41"><name pos:start="133:40" pos:end="133:41">bc</name></expr></argument>, <argument pos:start="133:44" pos:end="133:47"><expr pos:start="133:44" pos:end="133:47"><name pos:start="133:44" pos:end="133:47">bits</name></expr></argument>)</argument_list></call> <operator pos:start="133:50" pos:end="133:50">|</operator> <literal type="number" pos:start="133:52" pos:end="133:52">1</literal> <operator pos:start="133:54" pos:end="133:55">&lt;&lt;</operator> <name pos:start="133:57" pos:end="133:60">bits</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="135:21" pos:end="135:52"><expr pos:start="135:21" pos:end="135:51"><name pos:start="135:21" pos:end="135:21">t</name> <operator pos:start="135:23" pos:end="135:23">=</operator> <call pos:start="135:25" pos:end="135:51"><name pos:start="135:25" pos:end="135:44">bitstream_apply_sign</name><argument_list pos:start="135:45" pos:end="135:51">(<argument pos:start="135:46" pos:end="135:47"><expr pos:start="135:46" pos:end="135:47"><name pos:start="135:46" pos:end="135:47">bc</name></expr></argument>, <argument pos:start="135:50" pos:end="135:50"><expr pos:start="135:50" pos:end="135:50"><name pos:start="135:50" pos:end="135:50">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:39"><expr pos:start="139:17" pos:end="139:38"><name pos:start="139:17" pos:end="139:34"><name pos:start="139:17" pos:end="139:21">block</name><index pos:start="139:22" pos:end="139:34">[<expr pos:start="139:23" pos:end="139:33"><name pos:start="139:23" pos:end="139:33"><name pos:start="139:23" pos:end="139:26">scan</name><index pos:start="139:27" pos:end="139:33">[<expr pos:start="139:28" pos:end="139:32"><name pos:start="139:28" pos:end="139:32">ccoef</name></expr>]</index></name></expr>]</index></name> <operator pos:start="139:36" pos:end="139:36">=</operator> <name pos:start="139:38" pos:end="139:38">t</name></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:47"><expr pos:start="141:17" pos:end="141:46"><name pos:start="141:17" pos:end="141:38"><name pos:start="141:17" pos:end="141:24">coef_idx</name><index pos:start="141:25" pos:end="141:38">[<expr pos:start="141:26" pos:end="141:37"><name pos:start="141:26" pos:end="141:35">coef_count</name><operator pos:start="141:36" pos:end="141:37">++</operator></expr>]</index></name> <operator pos:start="141:40" pos:end="141:40">=</operator> <name pos:start="141:42" pos:end="141:46">ccoef</name></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:42"><expr pos:start="143:17" pos:end="143:41"><name pos:start="143:17" pos:end="143:35"><name pos:start="143:17" pos:end="143:25">coef_list</name><index pos:start="143:26" pos:end="143:35">[<expr pos:start="143:27" pos:end="143:34"><name pos:start="143:27" pos:end="143:34">list_pos</name></expr>]</index></name>   <operator pos:start="143:39" pos:end="143:39">=</operator> <literal type="number" pos:start="143:41" pos:end="143:41">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:42"><expr pos:start="145:17" pos:end="145:41"><name pos:start="145:17" pos:end="145:37"><name pos:start="145:17" pos:end="145:25">mode_list</name><index pos:start="145:26" pos:end="145:37">[<expr pos:start="145:27" pos:end="145:36"><name pos:start="145:27" pos:end="145:34">list_pos</name><operator pos:start="145:35" pos:end="145:36">++</operator></expr>]</index></name> <operator pos:start="145:39" pos:end="145:39">=</operator> <literal type="number" pos:start="145:41" pos:end="145:41">0</literal></expr>;</expr_stmt>

                <break pos:start="147:17" pos:end="147:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></while>

    </block_content>}</block></for>



    <if_stmt pos:start="157:5" pos:end="165:5"><if pos:start="157:5" pos:end="161:5">if <condition pos:start="157:8" pos:end="157:16">(<expr pos:start="157:9" pos:end="157:15"><name pos:start="157:9" pos:end="157:9">q</name> <operator pos:start="157:11" pos:end="157:12">==</operator> <operator pos:start="157:14" pos:end="157:14">-</operator><literal type="number" pos:start="157:15" pos:end="157:15">1</literal></expr>)</condition> <block pos:start="157:18" pos:end="161:5">{<block_content pos:start="159:9" pos:end="159:42">

        <expr_stmt pos:start="159:9" pos:end="159:42"><expr pos:start="159:9" pos:end="159:41"><name pos:start="159:9" pos:end="159:17">quant_idx</name> <operator pos:start="159:19" pos:end="159:19">=</operator> <call pos:start="159:21" pos:end="159:41"><name pos:start="159:21" pos:end="159:34">bitstream_read</name><argument_list pos:start="159:35" pos:end="159:41">(<argument pos:start="159:36" pos:end="159:37"><expr pos:start="159:36" pos:end="159:37"><name pos:start="159:36" pos:end="159:37">bc</name></expr></argument>, <argument pos:start="159:40" pos:end="159:40"><expr pos:start="159:40" pos:end="159:40"><literal type="number" pos:start="159:40" pos:end="159:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="161:7" pos:end="165:5">else <block pos:start="161:12" pos:end="165:5">{<block_content pos:start="163:9" pos:end="163:22">

        <expr_stmt pos:start="163:9" pos:end="163:22"><expr pos:start="163:9" pos:end="163:21"><name pos:start="163:9" pos:end="163:17">quant_idx</name> <operator pos:start="163:19" pos:end="163:19">=</operator> <name pos:start="163:21" pos:end="163:21">q</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="169:5" pos:end="171:35"><if pos:start="169:5" pos:end="171:35">if <condition pos:start="169:8" pos:end="169:24">(<expr pos:start="169:9" pos:end="169:23"><name pos:start="169:9" pos:end="169:17">quant_idx</name> <operator pos:start="169:19" pos:end="169:20">&gt;=</operator> <literal type="number" pos:start="169:22" pos:end="169:23">16</literal></expr>)</condition><block type="pseudo" pos:start="171:9" pos:end="171:35"><block_content pos:start="171:9" pos:end="171:35">

        <return pos:start="171:9" pos:end="171:35">return <expr pos:start="171:16" pos:end="171:34"><name pos:start="171:16" pos:end="171:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:38"><expr pos:start="175:5" pos:end="175:37"><name pos:start="175:5" pos:end="175:9">quant</name> <operator pos:start="175:11" pos:end="175:11">=</operator> <name pos:start="175:13" pos:end="175:37"><name pos:start="175:13" pos:end="175:26">quant_matrices</name><index pos:start="175:27" pos:end="175:37">[<expr pos:start="175:28" pos:end="175:36"><name pos:start="175:28" pos:end="175:36">quant_idx</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="179:43"><expr pos:start="179:5" pos:end="179:42"><name pos:start="179:5" pos:end="179:12"><name pos:start="179:5" pos:end="179:9">block</name><index pos:start="179:10" pos:end="179:12">[<expr pos:start="179:11" pos:end="179:11"><literal type="number" pos:start="179:11" pos:end="179:11">0</literal></expr>]</index></name> <operator pos:start="179:14" pos:end="179:14">=</operator> <operator pos:start="179:16" pos:end="179:16">(</operator><name pos:start="179:17" pos:end="179:24"><name pos:start="179:17" pos:end="179:21">block</name><index pos:start="179:22" pos:end="179:24">[<expr pos:start="179:23" pos:end="179:23"><literal type="number" pos:start="179:23" pos:end="179:23">0</literal></expr>]</index></name> <operator pos:start="179:26" pos:end="179:26">*</operator> <name pos:start="179:28" pos:end="179:35"><name pos:start="179:28" pos:end="179:32">quant</name><index pos:start="179:33" pos:end="179:35">[<expr pos:start="179:34" pos:end="179:34"><literal type="number" pos:start="179:34" pos:end="179:34">0</literal></expr>]</index></name><operator pos:start="179:36" pos:end="179:36">)</operator> <operator pos:start="179:38" pos:end="179:39">&gt;&gt;</operator> <literal type="number" pos:start="179:41" pos:end="179:42">11</literal></expr>;</expr_stmt>

    <for pos:start="181:5" pos:end="187:5">for <control pos:start="181:9" pos:end="181:36">(<init pos:start="181:10" pos:end="181:15"><expr pos:start="181:10" pos:end="181:14"><name pos:start="181:10" pos:end="181:10">i</name> <operator pos:start="181:12" pos:end="181:12">=</operator> <literal type="number" pos:start="181:14" pos:end="181:14">0</literal></expr>;</init> <condition pos:start="181:17" pos:end="181:31"><expr pos:start="181:17" pos:end="181:30"><name pos:start="181:17" pos:end="181:17">i</name> <operator pos:start="181:19" pos:end="181:19">&lt;</operator> <name pos:start="181:21" pos:end="181:30">coef_count</name></expr>;</condition> <incr pos:start="181:33" pos:end="181:35"><expr pos:start="181:33" pos:end="181:35"><name pos:start="181:33" pos:end="181:33">i</name><operator pos:start="181:34" pos:end="181:35">++</operator></expr></incr>)</control> <block pos:start="181:38" pos:end="187:5">{<block_content pos:start="183:9" pos:end="185:65">

        <decl_stmt pos:start="183:9" pos:end="183:30"><decl pos:start="183:9" pos:end="183:29"><type pos:start="183:9" pos:end="183:11"><name pos:start="183:9" pos:end="183:11">int</name></type> <name pos:start="183:13" pos:end="183:15">idx</name> <init pos:start="183:17" pos:end="183:29">= <expr pos:start="183:19" pos:end="183:29"><name pos:start="183:19" pos:end="183:29"><name pos:start="183:19" pos:end="183:26">coef_idx</name><index pos:start="183:27" pos:end="183:29">[<expr pos:start="183:28" pos:end="183:28"><name pos:start="183:28" pos:end="183:28">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:65"><expr pos:start="185:9" pos:end="185:64"><name pos:start="185:9" pos:end="185:24"><name pos:start="185:9" pos:end="185:13">block</name><index pos:start="185:14" pos:end="185:24">[<expr pos:start="185:15" pos:end="185:23"><name pos:start="185:15" pos:end="185:23"><name pos:start="185:15" pos:end="185:18">scan</name><index pos:start="185:19" pos:end="185:23">[<expr pos:start="185:20" pos:end="185:22"><name pos:start="185:20" pos:end="185:22">idx</name></expr>]</index></name></expr>]</index></name> <operator pos:start="185:26" pos:end="185:26">=</operator> <operator pos:start="185:28" pos:end="185:28">(</operator><name pos:start="185:29" pos:end="185:44"><name pos:start="185:29" pos:end="185:33">block</name><index pos:start="185:34" pos:end="185:44">[<expr pos:start="185:35" pos:end="185:43"><name pos:start="185:35" pos:end="185:43"><name pos:start="185:35" pos:end="185:38">scan</name><index pos:start="185:39" pos:end="185:43">[<expr pos:start="185:40" pos:end="185:42"><name pos:start="185:40" pos:end="185:42">idx</name></expr>]</index></name></expr>]</index></name> <operator pos:start="185:46" pos:end="185:46">*</operator> <name pos:start="185:48" pos:end="185:57"><name pos:start="185:48" pos:end="185:52">quant</name><index pos:start="185:53" pos:end="185:57">[<expr pos:start="185:54" pos:end="185:56"><name pos:start="185:54" pos:end="185:56">idx</name></expr>]</index></name><operator pos:start="185:58" pos:end="185:58">)</operator> <operator pos:start="185:60" pos:end="185:61">&gt;&gt;</operator> <literal type="number" pos:start="185:63" pos:end="185:64">11</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="191:5" pos:end="191:13">return <expr pos:start="191:12" pos:end="191:12"><literal type="number" pos:start="191:12" pos:end="191:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
