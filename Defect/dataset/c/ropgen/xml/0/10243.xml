<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10243.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">configure_alarms</name><parameter_list pos:start="1:29" pos:end="1:45">(<parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">char</name> <specifier pos:start="1:35" pos:end="1:39">const</specifier> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">opt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:28">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">cur</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:67"><decl pos:start="9:5" pos:end="9:66"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">count</name> <init pos:start="9:15" pos:end="9:66">= <expr pos:start="9:17" pos:end="9:66"><operator pos:start="9:17" pos:end="9:17">(</operator><sizeof pos:start="9:18" pos:end="9:37">sizeof<argument_list pos:start="9:24" pos:end="9:37">(<argument pos:start="9:25" pos:end="9:36"><expr pos:start="9:25" pos:end="9:36"><name pos:start="9:25" pos:end="9:36">alarm_timers</name></expr></argument>)</argument_list></sizeof> <operator pos:start="9:39" pos:end="9:39">/</operator> <sizeof pos:start="9:41" pos:end="9:61">sizeof<argument_list pos:start="9:47" pos:end="9:61">(<argument pos:start="9:48" pos:end="9:60"><expr pos:start="9:48" pos:end="9:60"><operator pos:start="9:48" pos:end="9:48">*</operator><name pos:start="9:49" pos:end="9:60">alarm_timers</name></expr></argument>)</argument_list></sizeof><operator pos:start="9:62" pos:end="9:62">)</operator> <operator pos:start="9:64" pos:end="9:64">-</operator> <literal type="number" pos:start="9:66" pos:end="9:66">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:13">arg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:14">name</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:29">(<expr pos:start="17:9" pos:end="17:28"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:28"><name pos:start="17:10" pos:end="17:15">strcmp</name><argument_list pos:start="17:16" pos:end="17:28">(<argument pos:start="17:17" pos:end="17:19"><expr pos:start="17:17" pos:end="17:19"><name pos:start="17:17" pos:end="17:19">opt</name></expr></argument>, <argument pos:start="17:22" pos:end="17:27"><expr pos:start="17:22" pos:end="17:27"><literal type="string" pos:start="17:22" pos:end="17:27">"help"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:31" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:16">

        <expr_stmt pos:start="19:9" pos:end="19:32"><expr pos:start="19:9" pos:end="19:31"><call pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:29">show_available_alarms</name><argument_list pos:start="19:30" pos:end="19:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><call pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:12">exit</name><argument_list pos:start="21:13" pos:end="21:15">(<argument pos:start="21:14" pos:end="21:14"><expr pos:start="21:14" pos:end="21:14"><literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:7">arg</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:21"><name pos:start="27:11" pos:end="27:16">strdup</name><argument_list pos:start="27:17" pos:end="27:21">(<argument pos:start="27:18" pos:end="27:20"><expr pos:start="27:18" pos:end="27:20"><name pos:start="27:18" pos:end="27:20">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:27">/* Reorder the array */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:8">name</name> <operator pos:start="33:10" pos:end="33:10">=</operator> <call pos:start="33:12" pos:end="33:27"><name pos:start="33:12" pos:end="33:17">strtok</name><argument_list pos:start="33:18" pos:end="33:27">(<argument pos:start="33:19" pos:end="33:21"><expr pos:start="33:19" pos:end="33:21"><name pos:start="33:19" pos:end="33:21">arg</name></expr></argument>, <argument pos:start="33:24" pos:end="33:26"><expr pos:start="33:24" pos:end="33:26"><literal type="string" pos:start="33:24" pos:end="33:26">","</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="35:5" pos:end="85:5">while <condition pos:start="35:11" pos:end="35:16">(<expr pos:start="35:12" pos:end="35:15"><name pos:start="35:12" pos:end="35:15">name</name></expr>)</condition> <block pos:start="35:18" pos:end="85:5">{<block_content pos:start="37:9" pos:end="83:33">

        <decl_stmt pos:start="37:9" pos:end="37:36"><decl pos:start="37:9" pos:end="37:35"><type pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:14">struct</name> <name pos:start="37:16" pos:end="37:31">qemu_alarm_timer</name></name></type> <name pos:start="37:33" pos:end="37:35">tmp</name></decl>;</decl_stmt>



        <for pos:start="41:9" pos:end="47:9">for <control pos:start="41:13" pos:end="41:35">(<init pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">i</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</init> <condition pos:start="41:21" pos:end="41:30"><expr pos:start="41:21" pos:end="41:29"><name pos:start="41:21" pos:end="41:21">i</name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <name pos:start="41:25" pos:end="41:29">count</name></expr>;</condition> <incr pos:start="41:32" pos:end="41:34"><expr pos:start="41:32" pos:end="41:34"><name pos:start="41:32" pos:end="41:32">i</name><operator pos:start="41:33" pos:end="41:34">++</operator></expr></incr>)</control> <block pos:start="41:37" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:22">

            <if_stmt pos:start="43:13" pos:end="45:22"><if pos:start="43:13" pos:end="45:22">if <condition pos:start="43:16" pos:end="43:52">(<expr pos:start="43:17" pos:end="43:51"><operator pos:start="43:17" pos:end="43:17">!</operator><call pos:start="43:18" pos:end="43:51"><name pos:start="43:18" pos:end="43:23">strcmp</name><argument_list pos:start="43:24" pos:end="43:51">(<argument pos:start="43:25" pos:end="43:44"><expr pos:start="43:25" pos:end="43:44"><name pos:start="43:25" pos:end="43:39"><name pos:start="43:25" pos:end="43:36">alarm_timers</name><index pos:start="43:37" pos:end="43:39">[<expr pos:start="43:38" pos:end="43:38"><name pos:start="43:38" pos:end="43:38">i</name></expr>]</index></name><operator pos:start="43:40" pos:end="43:40">.</operator><name pos:start="43:41" pos:end="43:44">name</name></expr></argument>, <argument pos:start="43:47" pos:end="43:50"><expr pos:start="43:47" pos:end="43:50"><name pos:start="43:47" pos:end="43:50">name</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:22"><block_content pos:start="45:17" pos:end="45:22">

                <break pos:start="45:17" pos:end="45:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:23">(<expr pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:13">i</name> <operator pos:start="51:15" pos:end="51:16">==</operator> <name pos:start="51:18" pos:end="51:22">count</name></expr>)</condition> <block pos:start="51:25" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:22">

            <expr_stmt pos:start="53:13" pos:end="53:56"><expr pos:start="53:13" pos:end="53:55"><call pos:start="53:13" pos:end="53:55"><name pos:start="53:13" pos:end="53:19">fprintf</name><argument_list pos:start="53:20" pos:end="53:55">(<argument pos:start="53:21" pos:end="53:26"><expr pos:start="53:21" pos:end="53:26"><name pos:start="53:21" pos:end="53:26">stderr</name></expr></argument>, <argument pos:start="53:29" pos:end="53:48"><expr pos:start="53:29" pos:end="53:48"><literal type="string" pos:start="53:29" pos:end="53:48">"Unknown clock %s\n"</literal></expr></argument>, <argument pos:start="53:51" pos:end="53:54"><expr pos:start="53:51" pos:end="53:54"><name pos:start="53:51" pos:end="53:54">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="55:13" pos:end="55:22">goto <name pos:start="55:18" pos:end="55:21">next</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="61:9" pos:end="65:22"><if pos:start="61:9" pos:end="65:22">if <condition pos:start="61:12" pos:end="61:20">(<expr pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:13">i</name> <operator pos:start="61:15" pos:end="61:15">&lt;</operator> <name pos:start="61:17" pos:end="61:19">cur</name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:22"><block_content pos:start="65:13" pos:end="65:22">

            <comment type="block" pos:start="63:13" pos:end="63:24">/* Ignore */</comment>

            <goto pos:start="65:13" pos:end="65:22">goto <name pos:start="65:18" pos:end="65:21">next</name>;</goto></block_content></block></if></if_stmt>



	<comment type="block" pos:start="69:9" pos:end="69:18">/* Swap */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:30"><expr pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:11">tmp</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <name pos:start="71:15" pos:end="71:29"><name pos:start="71:15" pos:end="71:26">alarm_timers</name><index pos:start="71:27" pos:end="71:29">[<expr pos:start="71:28" pos:end="71:28"><name pos:start="71:28" pos:end="71:28">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:44"><expr pos:start="73:9" pos:end="73:43"><name pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:20">alarm_timers</name><index pos:start="73:21" pos:end="73:23">[<expr pos:start="73:22" pos:end="73:22"><name pos:start="73:22" pos:end="73:22">i</name></expr>]</index></name> <operator pos:start="73:25" pos:end="73:25">=</operator> <name pos:start="73:27" pos:end="73:43"><name pos:start="73:27" pos:end="73:38">alarm_timers</name><index pos:start="73:39" pos:end="73:43">[<expr pos:start="73:40" pos:end="73:42"><name pos:start="73:40" pos:end="73:42">cur</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:32"><expr pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:20">alarm_timers</name><index pos:start="75:21" pos:end="75:25">[<expr pos:start="75:22" pos:end="75:24"><name pos:start="75:22" pos:end="75:24">cur</name></expr>]</index></name> <operator pos:start="75:27" pos:end="75:27">=</operator> <name pos:start="75:29" pos:end="75:31">tmp</name></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:14"><expr pos:start="79:9" pos:end="79:13"><name pos:start="79:9" pos:end="79:11">cur</name><operator pos:start="79:12" pos:end="79:13">++</operator></expr>;</expr_stmt>

<label pos:start="81:1" pos:end="81:5"><name pos:start="81:1" pos:end="81:4">next</name>:</label>

        <expr_stmt pos:start="83:9" pos:end="83:33"><expr pos:start="83:9" pos:end="83:32"><name pos:start="83:9" pos:end="83:12">name</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <call pos:start="83:16" pos:end="83:32"><name pos:start="83:16" pos:end="83:21">strtok</name><argument_list pos:start="83:22" pos:end="83:32">(<argument pos:start="83:23" pos:end="83:26"><expr pos:start="83:23" pos:end="83:26"><name pos:start="83:23" pos:end="83:26">NULL</name></expr></argument>, <argument pos:start="83:29" pos:end="83:31"><expr pos:start="83:29" pos:end="83:31"><literal type="string" pos:start="83:29" pos:end="83:31">","</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="89:5" pos:end="89:14"><expr pos:start="89:5" pos:end="89:13"><call pos:start="89:5" pos:end="89:13"><name pos:start="89:5" pos:end="89:8">free</name><argument_list pos:start="89:9" pos:end="89:13">(<argument pos:start="89:10" pos:end="89:12"><expr pos:start="89:10" pos:end="89:12"><name pos:start="89:10" pos:end="89:12">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="93:5" pos:end="101:5"><if pos:start="93:5" pos:end="101:5">if <condition pos:start="93:8" pos:end="93:12">(<expr pos:start="93:9" pos:end="93:11"><name pos:start="93:9" pos:end="93:11">cur</name></expr>)</condition> <block pos:start="93:14" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:40">

	<comment type="block" pos:start="95:9" pos:end="95:38">/* Disable remaining timers */</comment>

        <for pos:start="97:9" pos:end="99:40">for <control pos:start="97:13" pos:end="97:37">(<init pos:start="97:14" pos:end="97:21"><expr pos:start="97:14" pos:end="97:20"><name pos:start="97:14" pos:end="97:14">i</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <name pos:start="97:18" pos:end="97:20">cur</name></expr>;</init> <condition pos:start="97:23" pos:end="97:32"><expr pos:start="97:23" pos:end="97:31"><name pos:start="97:23" pos:end="97:23">i</name> <operator pos:start="97:25" pos:end="97:25">&lt;</operator> <name pos:start="97:27" pos:end="97:31">count</name></expr>;</condition> <incr pos:start="97:34" pos:end="97:36"><expr pos:start="97:34" pos:end="97:36"><name pos:start="97:34" pos:end="97:34">i</name><operator pos:start="97:35" pos:end="97:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="99:13" pos:end="99:40"><block_content pos:start="99:13" pos:end="99:40">

            <expr_stmt pos:start="99:13" pos:end="99:40"><expr pos:start="99:13" pos:end="99:39"><name pos:start="99:13" pos:end="99:27"><name pos:start="99:13" pos:end="99:24">alarm_timers</name><index pos:start="99:25" pos:end="99:27">[<expr pos:start="99:26" pos:end="99:26"><name pos:start="99:26" pos:end="99:26">i</name></expr>]</index></name><operator pos:start="99:28" pos:end="99:28">.</operator><name pos:start="99:29" pos:end="99:32">name</name> <operator pos:start="99:34" pos:end="99:34">=</operator> <name pos:start="99:36" pos:end="99:39">NULL</name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="105:5" pos:end="105:15">/* debug */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:28"><expr pos:start="107:5" pos:end="107:27"><call pos:start="107:5" pos:end="107:27"><name pos:start="107:5" pos:end="107:25">show_available_alarms</name><argument_list pos:start="107:26" pos:end="107:27">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
