<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9672.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">qmp_input_send_event</name><parameter_list pos:start="1:26" pos:end="3:39">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:33">int64_t</name></type> <name pos:start="1:35" pos:end="1:41">console</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:65"><decl pos:start="1:44" pos:end="1:65"><type pos:start="1:44" pos:end="1:65"><name pos:start="1:44" pos:end="1:57">InputEventList</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:65">events</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:38"><decl pos:start="3:27" pos:end="3:38"><type pos:start="3:27" pos:end="3:38"><name pos:start="3:27" pos:end="3:31">Error</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier><modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:28">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">InputEventList</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">e</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">QemuConsole</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">con</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:48"><expr pos:start="13:5" pos:end="13:47"><name pos:start="13:5" pos:end="13:7">con</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:47"><name pos:start="13:11" pos:end="13:38">qemu_console_lookup_by_index</name><argument_list pos:start="13:39" pos:end="13:47">(<argument pos:start="13:40" pos:end="13:46"><expr pos:start="13:40" pos:end="13:46"><name pos:start="13:40" pos:end="13:46">console</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:12">con</name></expr>)</condition> <block pos:start="15:15" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:67"><expr pos:start="17:9" pos:end="17:66"><call pos:start="17:9" pos:end="17:66"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="17:66">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">errp</name></expr></argument>, <argument pos:start="17:26" pos:end="17:56"><expr pos:start="17:26" pos:end="17:56"><literal type="string" pos:start="17:26" pos:end="17:36">"console %"</literal> <name pos:start="17:38" pos:end="17:43">PRId64</name> <literal type="string" pos:start="17:45" pos:end="17:56">" not found"</literal></expr></argument>, <argument pos:start="17:59" pos:end="17:65"><expr pos:start="17:59" pos:end="17:65"><name pos:start="17:59" pos:end="17:65">console</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:71">(<expr pos:start="25:9" pos:end="25:70"><operator pos:start="25:9" pos:end="25:9">!</operator><call pos:start="25:10" pos:end="25:30"><name pos:start="25:10" pos:end="25:28">runstate_is_running</name><argument_list pos:start="25:29" pos:end="25:30">()</argument_list></call> <operator pos:start="25:32" pos:end="25:33">&amp;&amp;</operator> <operator pos:start="25:35" pos:end="25:35">!</operator><call pos:start="25:36" pos:end="25:70"><name pos:start="25:36" pos:end="25:49">runstate_check</name><argument_list pos:start="25:50" pos:end="25:70">(<argument pos:start="25:51" pos:end="25:69"><expr pos:start="25:51" pos:end="25:69"><name pos:start="25:51" pos:end="25:69">RUN_STATE_SUSPENDED</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:73" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:15">

        <expr_stmt pos:start="27:9" pos:end="27:43"><expr pos:start="27:9" pos:end="27:42"><call pos:start="27:9" pos:end="27:42"><name pos:start="27:9" pos:end="27:18">error_setg</name><argument_list pos:start="27:19" pos:end="27:42">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">errp</name></expr></argument>, <argument pos:start="27:26" pos:end="27:41"><expr pos:start="27:26" pos:end="27:41"><literal type="string" pos:start="27:26" pos:end="27:41">"VM not running"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="35:5" pos:end="53:5">for <control pos:start="35:9" pos:end="35:44">(<init pos:start="35:10" pos:end="35:20"><expr pos:start="35:10" pos:end="35:19"><name pos:start="35:10" pos:end="35:10">e</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:19">events</name></expr>;</init> <condition pos:start="35:22" pos:end="35:31"><expr pos:start="35:22" pos:end="35:30"><name pos:start="35:22" pos:end="35:22">e</name> <operator pos:start="35:24" pos:end="35:25">!=</operator> <name pos:start="35:27" pos:end="35:30">NULL</name></expr>;</condition> <incr pos:start="35:33" pos:end="35:43"><expr pos:start="35:33" pos:end="35:43"><name pos:start="35:33" pos:end="35:33">e</name> <operator pos:start="35:35" pos:end="35:35">=</operator> <name pos:start="35:37" pos:end="35:43"><name pos:start="35:37" pos:end="35:37">e</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:43">next</name></name></expr></incr>)</control> <block pos:start="35:46" pos:end="53:5">{<block_content pos:start="37:9" pos:end="51:9">

        <decl_stmt pos:start="37:9" pos:end="37:37"><decl pos:start="37:9" pos:end="37:36"><type pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:18">InputEvent</name> <modifier pos:start="37:20" pos:end="37:20">*</modifier></type><name pos:start="37:21" pos:end="37:25">event</name> <init pos:start="37:27" pos:end="37:36">= <expr pos:start="37:29" pos:end="37:36"><name pos:start="37:29" pos:end="37:36"><name pos:start="37:29" pos:end="37:29">e</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:36">value</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="41:9" pos:end="51:9"><if pos:start="41:9" pos:end="51:9">if <condition pos:start="41:12" pos:end="41:60">(<expr pos:start="41:13" pos:end="41:59"><operator pos:start="41:13" pos:end="41:13">!</operator><call pos:start="41:14" pos:end="41:59"><name pos:start="41:14" pos:end="41:36">qemu_input_find_handler</name><argument_list pos:start="41:37" pos:end="41:59">(<argument pos:start="41:38" pos:end="41:53"><expr pos:start="41:38" pos:end="41:53"><literal type="number" pos:start="41:38" pos:end="41:38">1</literal> <operator pos:start="41:40" pos:end="41:41">&lt;&lt;</operator> <name pos:start="41:43" pos:end="41:53"><name pos:start="41:43" pos:end="41:47">event</name><operator pos:start="41:48" pos:end="41:49">-&gt;</operator><name pos:start="41:50" pos:end="41:53">kind</name></name></expr></argument>, <argument pos:start="41:56" pos:end="41:58"><expr pos:start="41:56" pos:end="41:58"><name pos:start="41:56" pos:end="41:58">con</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:62" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:19">

            <expr_stmt pos:start="43:13" pos:end="47:64"><expr pos:start="43:13" pos:end="47:63"><call pos:start="43:13" pos:end="47:63"><name pos:start="43:13" pos:end="43:22">error_setg</name><argument_list pos:start="43:23" pos:end="47:63">(<argument pos:start="43:24" pos:end="43:27"><expr pos:start="43:24" pos:end="43:27"><name pos:start="43:24" pos:end="43:27">errp</name></expr></argument>, <argument pos:start="43:30" pos:end="45:44"><expr pos:start="43:30" pos:end="45:44"><literal type="string" pos:start="43:30" pos:end="43:59">"Input handler not found for "</literal>

                             <literal type="string" pos:start="45:30" pos:end="45:44">"event type %s"</literal></expr></argument>,

                            <argument pos:start="47:29" pos:end="47:62"><expr pos:start="47:29" pos:end="47:62"><name pos:start="47:29" pos:end="47:62"><name pos:start="47:29" pos:end="47:49">InputEventKind_lookup</name><index pos:start="47:50" pos:end="47:62">[<expr pos:start="47:51" pos:end="47:61"><name pos:start="47:51" pos:end="47:61"><name pos:start="47:51" pos:end="47:55">event</name><operator pos:start="47:56" pos:end="47:57">-&gt;</operator><name pos:start="47:58" pos:end="47:61">kind</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="57:5" pos:end="65:5">for <control pos:start="57:9" pos:end="57:44">(<init pos:start="57:10" pos:end="57:20"><expr pos:start="57:10" pos:end="57:19"><name pos:start="57:10" pos:end="57:10">e</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <name pos:start="57:14" pos:end="57:19">events</name></expr>;</init> <condition pos:start="57:22" pos:end="57:31"><expr pos:start="57:22" pos:end="57:30"><name pos:start="57:22" pos:end="57:22">e</name> <operator pos:start="57:24" pos:end="57:25">!=</operator> <name pos:start="57:27" pos:end="57:30">NULL</name></expr>;</condition> <incr pos:start="57:33" pos:end="57:43"><expr pos:start="57:33" pos:end="57:43"><name pos:start="57:33" pos:end="57:33">e</name> <operator pos:start="57:35" pos:end="57:35">=</operator> <name pos:start="57:37" pos:end="57:43"><name pos:start="57:37" pos:end="57:37">e</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:43">next</name></name></expr></incr>)</control> <block pos:start="57:46" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:42">

        <decl_stmt pos:start="59:9" pos:end="59:37"><decl pos:start="59:9" pos:end="59:36"><type pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:18">InputEvent</name> <modifier pos:start="59:20" pos:end="59:20">*</modifier></type><name pos:start="59:21" pos:end="59:25">event</name> <init pos:start="59:27" pos:end="59:36">= <expr pos:start="59:29" pos:end="59:36"><name pos:start="59:29" pos:end="59:36"><name pos:start="59:29" pos:end="59:29">e</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:36">value</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:42"><expr pos:start="63:9" pos:end="63:41"><call pos:start="63:9" pos:end="63:41"><name pos:start="63:9" pos:end="63:29">qemu_input_event_send</name><argument_list pos:start="63:30" pos:end="63:41">(<argument pos:start="63:31" pos:end="63:33"><expr pos:start="63:31" pos:end="63:33"><name pos:start="63:31" pos:end="63:33">con</name></expr></argument>, <argument pos:start="63:36" pos:end="63:40"><expr pos:start="63:36" pos:end="63:40"><name pos:start="63:36" pos:end="63:40">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="69:5" pos:end="69:28"><expr pos:start="69:5" pos:end="69:27"><call pos:start="69:5" pos:end="69:27"><name pos:start="69:5" pos:end="69:25">qemu_input_event_sync</name><argument_list pos:start="69:26" pos:end="69:27">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
