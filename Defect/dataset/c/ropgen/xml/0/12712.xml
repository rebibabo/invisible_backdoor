<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12712.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">scsi_build_sense</name><parameter_list pos:start="1:21" pos:end="3:55">(<parameter pos:start="1:22" pos:end="1:36"><decl pos:start="1:22" pos:end="1:36"><type pos:start="1:22" pos:end="1:36"><name pos:start="1:22" pos:end="1:28">uint8_t</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">in_buf</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:48"><decl pos:start="1:39" pos:end="1:48"><type pos:start="1:39" pos:end="1:48"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:48">in_len</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:33"><decl pos:start="3:22" pos:end="3:33"><type pos:start="3:22" pos:end="3:33"><name pos:start="3:22" pos:end="3:28">uint8_t</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:33">buf</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:42"><decl pos:start="3:36" pos:end="3:42"><type pos:start="3:36" pos:end="3:42"><name pos:start="3:36" pos:end="3:38">int</name></type> <name pos:start="3:40" pos:end="3:42">len</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:54"><decl pos:start="3:45" pos:end="3:54"><type pos:start="3:45" pos:end="3:54"><name pos:start="3:45" pos:end="3:48">bool</name></type> <name pos:start="3:50" pos:end="3:54">fixed</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="99:1">{<block_content pos:start="7:5" pos:end="97:5">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:17">fixed_in</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">SCSISense</name></type> <name pos:start="9:15" pos:end="9:19">sense</name></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:26">(<expr pos:start="11:9" pos:end="11:25"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:14">fixed</name> <operator pos:start="11:16" pos:end="11:17">&amp;&amp;</operator> <name pos:start="11:19" pos:end="11:21">len</name> <operator pos:start="11:23" pos:end="11:23">&lt;</operator> <literal type="number" pos:start="11:25" pos:end="11:25">8</literal></expr>)</condition> <block pos:start="11:28" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="61:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:20">(<expr pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:14">in_len</name> <operator pos:start="19:16" pos:end="19:17">==</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>)</condition> <block pos:start="19:22" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:23">

        <expr_stmt pos:start="21:9" pos:end="21:29"><expr pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:13">sense</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:17">key</name></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:28">NO_SENSE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:22"><expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:13">sense</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:17">asc</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:23"><expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:13">sense</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:18">ascq</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="61:5">else <block pos:start="27:12" pos:end="61:5">{<block_content pos:start="29:9" pos:end="59:9">

        <expr_stmt pos:start="29:9" pos:end="29:40"><expr pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:16">fixed_in</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <operator pos:start="29:20" pos:end="29:20">(</operator><name pos:start="29:21" pos:end="29:29"><name pos:start="29:21" pos:end="29:26">in_buf</name><index pos:start="29:27" pos:end="29:29">[<expr pos:start="29:28" pos:end="29:28"><literal type="number" pos:start="29:28" pos:end="29:28">0</literal></expr>]</index></name> <operator pos:start="29:31" pos:end="29:31">&amp;</operator> <literal type="number" pos:start="29:33" pos:end="29:33">2</literal><operator pos:start="29:34" pos:end="29:34">)</operator> <operator pos:start="29:36" pos:end="29:37">==</operator> <literal type="number" pos:start="29:39" pos:end="29:39">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:30">(<expr pos:start="33:13" pos:end="33:29"><name pos:start="33:13" pos:end="33:17">fixed</name> <operator pos:start="33:19" pos:end="33:20">==</operator> <name pos:start="33:22" pos:end="33:29">fixed_in</name></expr>)</condition> <block pos:start="33:32" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:36">

            <expr_stmt pos:start="35:13" pos:end="35:50"><expr pos:start="35:13" pos:end="35:49"><call pos:start="35:13" pos:end="35:49"><name pos:start="35:13" pos:end="35:18">memcpy</name><argument_list pos:start="35:19" pos:end="35:49">(<argument pos:start="35:20" pos:end="35:22"><expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">buf</name></expr></argument>, <argument pos:start="35:25" pos:end="35:30"><expr pos:start="35:25" pos:end="35:30"><name pos:start="35:25" pos:end="35:30">in_buf</name></expr></argument>, <argument pos:start="35:33" pos:end="35:48"><expr pos:start="35:33" pos:end="35:48"><call pos:start="35:33" pos:end="35:48"><name pos:start="35:33" pos:end="35:35">MIN</name><argument_list pos:start="35:36" pos:end="35:48">(<argument pos:start="35:37" pos:end="35:39"><expr pos:start="35:37" pos:end="35:39"><name pos:start="35:37" pos:end="35:39">len</name></expr></argument>, <argument pos:start="35:42" pos:end="35:47"><expr pos:start="35:42" pos:end="35:47"><name pos:start="35:42" pos:end="35:47">in_len</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="37:13" pos:end="37:36">return <expr pos:start="37:20" pos:end="37:35"><call pos:start="37:20" pos:end="37:35"><name pos:start="37:20" pos:end="37:22">MIN</name><argument_list pos:start="37:23" pos:end="37:35">(<argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">len</name></expr></argument>, <argument pos:start="37:29" pos:end="37:34"><expr pos:start="37:29" pos:end="37:34"><name pos:start="37:29" pos:end="37:34">in_len</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="43:9" pos:end="59:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:21">(<expr pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:20">fixed_in</name></expr>)</condition> <block pos:start="43:23" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:36">

            <expr_stmt pos:start="45:13" pos:end="45:34"><expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:17">sense</name><operator pos:start="45:18" pos:end="45:18">.</operator><name pos:start="45:19" pos:end="45:21">key</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:33"><name pos:start="45:25" pos:end="45:30">in_buf</name><index pos:start="45:31" pos:end="45:33">[<expr pos:start="45:32" pos:end="45:32"><literal type="number" pos:start="45:32" pos:end="45:32">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:35"><expr pos:start="47:13" pos:end="47:34"><name pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:17">sense</name><operator pos:start="47:18" pos:end="47:18">.</operator><name pos:start="47:19" pos:end="47:21">asc</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:34"><name pos:start="47:25" pos:end="47:30">in_buf</name><index pos:start="47:31" pos:end="47:34">[<expr pos:start="47:32" pos:end="47:33"><literal type="number" pos:start="47:32" pos:end="47:33">12</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:36"><expr pos:start="49:13" pos:end="49:35"><name pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:17">sense</name><operator pos:start="49:18" pos:end="49:18">.</operator><name pos:start="49:19" pos:end="49:22">ascq</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <name pos:start="49:26" pos:end="49:35"><name pos:start="49:26" pos:end="49:31">in_buf</name><index pos:start="49:32" pos:end="49:35">[<expr pos:start="49:33" pos:end="49:34"><literal type="number" pos:start="49:33" pos:end="49:34">13</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="59:9">else <block pos:start="51:16" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:35">

            <expr_stmt pos:start="53:13" pos:end="53:34"><expr pos:start="53:13" pos:end="53:33"><name pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:17">sense</name><operator pos:start="53:18" pos:end="53:18">.</operator><name pos:start="53:19" pos:end="53:21">key</name></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <name pos:start="53:25" pos:end="53:33"><name pos:start="53:25" pos:end="53:30">in_buf</name><index pos:start="53:31" pos:end="53:33">[<expr pos:start="53:32" pos:end="53:32"><literal type="number" pos:start="53:32" pos:end="53:32">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:34"><expr pos:start="55:13" pos:end="55:33"><name pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:17">sense</name><operator pos:start="55:18" pos:end="55:18">.</operator><name pos:start="55:19" pos:end="55:21">asc</name></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <name pos:start="55:25" pos:end="55:33"><name pos:start="55:25" pos:end="55:30">in_buf</name><index pos:start="55:31" pos:end="55:33">[<expr pos:start="55:32" pos:end="55:32"><literal type="number" pos:start="55:32" pos:end="55:32">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:35"><expr pos:start="57:13" pos:end="57:34"><name pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:17">sense</name><operator pos:start="57:18" pos:end="57:18">.</operator><name pos:start="57:19" pos:end="57:22">ascq</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:34"><name pos:start="57:26" pos:end="57:31">in_buf</name><index pos:start="57:32" pos:end="57:34">[<expr pos:start="57:33" pos:end="57:33"><literal type="number" pos:start="57:33" pos:end="57:33">3</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:24"><expr pos:start="65:5" pos:end="65:23"><call pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:10">memset</name><argument_list pos:start="65:11" pos:end="65:23">(<argument pos:start="65:12" pos:end="65:14"><expr pos:start="65:12" pos:end="65:14"><name pos:start="65:12" pos:end="65:14">buf</name></expr></argument>, <argument pos:start="65:17" pos:end="65:17"><expr pos:start="65:17" pos:end="65:17"><literal type="number" pos:start="65:17" pos:end="65:17">0</literal></expr></argument>, <argument pos:start="65:20" pos:end="65:22"><expr pos:start="65:20" pos:end="65:22"><name pos:start="65:20" pos:end="65:22">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="97:5"><if pos:start="67:5" pos:end="83:5">if <condition pos:start="67:8" pos:end="67:14">(<expr pos:start="67:9" pos:end="67:13"><name pos:start="67:9" pos:end="67:13">fixed</name></expr>)</condition> <block pos:start="67:16" pos:end="83:5">{<block_content pos:start="71:9" pos:end="81:28">

        <comment type="block" pos:start="69:9" pos:end="69:46">/* Return fixed format sense buffer */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:22"><expr pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:11">buf</name><index pos:start="71:12" pos:end="71:14">[<expr pos:start="71:13" pos:end="71:13"><literal type="number" pos:start="71:13" pos:end="71:13">0</literal></expr>]</index></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:21">0xf0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:27"><expr pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:14"><name pos:start="73:9" pos:end="73:11">buf</name><index pos:start="73:12" pos:end="73:14">[<expr pos:start="73:13" pos:end="73:13"><literal type="number" pos:start="73:13" pos:end="73:13">2</literal></expr>]</index></name> <operator pos:start="73:16" pos:end="73:16">=</operator> <name pos:start="73:18" pos:end="73:26"><name pos:start="73:18" pos:end="73:22">sense</name><operator pos:start="73:23" pos:end="73:23">.</operator><name pos:start="73:24" pos:end="73:26">key</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:20"><expr pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:14"><name pos:start="75:9" pos:end="75:11">buf</name><index pos:start="75:12" pos:end="75:14">[<expr pos:start="75:13" pos:end="75:13"><literal type="number" pos:start="75:13" pos:end="75:13">7</literal></expr>]</index></name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="number" pos:start="75:18" pos:end="75:19">10</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:11">buf</name><index pos:start="77:12" pos:end="77:15">[<expr pos:start="77:13" pos:end="77:14"><literal type="number" pos:start="77:13" pos:end="77:14">12</literal></expr>]</index></name> <operator pos:start="77:17" pos:end="77:17">=</operator> <name pos:start="77:19" pos:end="77:27"><name pos:start="77:19" pos:end="77:23">sense</name><operator pos:start="77:24" pos:end="77:24">.</operator><name pos:start="77:25" pos:end="77:27">asc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:29"><expr pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:11">buf</name><index pos:start="79:12" pos:end="79:15">[<expr pos:start="79:13" pos:end="79:14"><literal type="number" pos:start="79:13" pos:end="79:14">13</literal></expr>]</index></name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:28"><name pos:start="79:19" pos:end="79:23">sense</name><operator pos:start="79:24" pos:end="79:24">.</operator><name pos:start="79:25" pos:end="79:28">ascq</name></name></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:28">return <expr pos:start="81:16" pos:end="81:27"><call pos:start="81:16" pos:end="81:27"><name pos:start="81:16" pos:end="81:18">MIN</name><argument_list pos:start="81:19" pos:end="81:27">(<argument pos:start="81:20" pos:end="81:22"><expr pos:start="81:20" pos:end="81:22"><name pos:start="81:20" pos:end="81:22">len</name></expr></argument>, <argument pos:start="81:25" pos:end="81:26"><expr pos:start="81:25" pos:end="81:26"><literal type="number" pos:start="81:25" pos:end="81:26">18</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="97:5">else <block pos:start="83:12" pos:end="97:5">{<block_content pos:start="87:9" pos:end="95:17">

        <comment type="block" pos:start="85:9" pos:end="85:51">/* Return descriptor format sense buffer */</comment>

        <expr_stmt pos:start="87:9" pos:end="87:22"><expr pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:14"><name pos:start="87:9" pos:end="87:11">buf</name><index pos:start="87:12" pos:end="87:14">[<expr pos:start="87:13" pos:end="87:13"><literal type="number" pos:start="87:13" pos:end="87:13">0</literal></expr>]</index></name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="number" pos:start="87:18" pos:end="87:21">0x72</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:27"><expr pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:14"><name pos:start="89:9" pos:end="89:11">buf</name><index pos:start="89:12" pos:end="89:14">[<expr pos:start="89:13" pos:end="89:13"><literal type="number" pos:start="89:13" pos:end="89:13">1</literal></expr>]</index></name> <operator pos:start="89:16" pos:end="89:16">=</operator> <name pos:start="89:18" pos:end="89:26"><name pos:start="89:18" pos:end="89:22">sense</name><operator pos:start="89:23" pos:end="89:23">.</operator><name pos:start="89:24" pos:end="89:26">key</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:27"><expr pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:14"><name pos:start="91:9" pos:end="91:11">buf</name><index pos:start="91:12" pos:end="91:14">[<expr pos:start="91:13" pos:end="91:13"><literal type="number" pos:start="91:13" pos:end="91:13">2</literal></expr>]</index></name> <operator pos:start="91:16" pos:end="91:16">=</operator> <name pos:start="91:18" pos:end="91:26"><name pos:start="91:18" pos:end="91:22">sense</name><operator pos:start="91:23" pos:end="91:23">.</operator><name pos:start="91:24" pos:end="91:26">asc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:28"><expr pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:14"><name pos:start="93:9" pos:end="93:11">buf</name><index pos:start="93:12" pos:end="93:14">[<expr pos:start="93:13" pos:end="93:13"><literal type="number" pos:start="93:13" pos:end="93:13">3</literal></expr>]</index></name> <operator pos:start="93:16" pos:end="93:16">=</operator> <name pos:start="93:18" pos:end="93:27"><name pos:start="93:18" pos:end="93:22">sense</name><operator pos:start="93:23" pos:end="93:23">.</operator><name pos:start="93:24" pos:end="93:27">ascq</name></name></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:17">return <expr pos:start="95:16" pos:end="95:16"><literal type="number" pos:start="95:16" pos:end="95:16">8</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
