<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9065.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">usb_host_scan</name><parameter_list pos:start="1:25" pos:end="1:57">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:50">USBScanFunc</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">func</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:15">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">Monitor</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">mon</name> <init pos:start="5:18" pos:end="5:26">= <expr pos:start="5:20" pos:end="5:26"><name pos:start="5:20" pos:end="5:26">cur_mon</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">FILE</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">f</name> <init pos:start="7:13" pos:end="7:18">= <expr pos:start="7:15" pos:end="7:18"><name pos:start="7:15" pos:end="7:18">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:7">DIR</name> <modifier pos:start="9:9" pos:end="9:9">*</modifier></type><name pos:start="9:10" pos:end="9:12">dir</name> <init pos:start="9:14" pos:end="9:19">= <expr pos:start="9:16" pos:end="9:19"><name pos:start="9:16" pos:end="9:19">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:62"><decl pos:start="13:5" pos:end="13:61"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:23">fs_type</name><index pos:start="13:24" pos:end="13:25">[]</index></name> <init pos:start="13:27" pos:end="13:61">= <expr pos:start="13:29" pos:end="13:61"><block pos:start="13:29" pos:end="13:61">{<expr pos:start="13:30" pos:end="13:38"><literal type="string" pos:start="13:30" pos:end="13:38">"unknown"</literal></expr>, <expr pos:start="13:41" pos:end="13:46"><literal type="string" pos:start="13:41" pos:end="13:46">"proc"</literal></expr>, <expr pos:start="13:49" pos:end="13:53"><literal type="string" pos:start="13:49" pos:end="13:53">"dev"</literal></expr>, <expr pos:start="13:56" pos:end="13:60"><literal type="string" pos:start="13:56" pos:end="13:60">"sys"</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:26"><name pos:start="15:10" pos:end="15:16">devpath</name><index pos:start="15:17" pos:end="15:26">[<expr pos:start="15:18" pos:end="15:25"><name pos:start="15:18" pos:end="15:25">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:34">/* only check the host once */</comment>

    <if_stmt pos:start="21:5" pos:end="101:5"><if pos:start="21:5" pos:end="101:5">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:20">usb_fs_type</name></expr>)</condition> <block pos:start="21:23" pos:end="101:5">{<block_content pos:start="23:9" pos:end="99:67">

        <expr_stmt pos:start="23:9" pos:end="23:49"><expr pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:11">dir</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:48"><name pos:start="23:15" pos:end="23:21">opendir</name><argument_list pos:start="23:22" pos:end="23:48">(<argument pos:start="23:23" pos:end="23:47"><expr pos:start="23:23" pos:end="23:47"><name pos:start="23:23" pos:end="23:36">USBSYSBUS_PATH</name> <literal type="string" pos:start="23:38" pos:end="23:47">"/devices"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="39:9"><if pos:start="25:9" pos:end="39:9">if <condition pos:start="25:12" pos:end="25:16">(<expr pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">dir</name></expr>)</condition> <block pos:start="25:18" pos:end="39:9">{<block_content pos:start="29:13" pos:end="37:31">

            <comment type="block" pos:start="27:13" pos:end="27:71">/* devices found in /dev/bus/usb/ (yes - not a mistake!) */</comment>

            <expr_stmt pos:start="29:13" pos:end="29:44"><expr pos:start="29:13" pos:end="29:43"><call pos:start="29:13" pos:end="29:43"><name pos:start="29:13" pos:end="29:18">strcpy</name><argument_list pos:start="29:19" pos:end="29:43">(<argument pos:start="29:20" pos:end="29:26"><expr pos:start="29:20" pos:end="29:26"><name pos:start="29:20" pos:end="29:26">devpath</name></expr></argument>, <argument pos:start="29:29" pos:end="29:42"><expr pos:start="29:29" pos:end="29:42"><name pos:start="29:29" pos:end="29:42">USBDEVBUS_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:37"><expr pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:23">usb_fs_type</name> <operator pos:start="31:25" pos:end="31:25">=</operator> <name pos:start="31:27" pos:end="31:36">USB_FS_SYS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:26"><expr pos:start="33:13" pos:end="33:25"><call pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:20">closedir</name><argument_list pos:start="33:21" pos:end="33:25">(<argument pos:start="33:22" pos:end="33:24"><expr pos:start="33:22" pos:end="33:24"><name pos:start="33:22" pos:end="33:24">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:54"><expr pos:start="35:13" pos:end="35:53"><call pos:start="35:13" pos:end="35:53"><name pos:start="35:13" pos:end="35:19">dprintf</name><argument_list pos:start="35:20" pos:end="35:53">(<argument pos:start="35:21" pos:end="35:36"><expr pos:start="35:21" pos:end="35:36"><name pos:start="35:21" pos:end="35:36">USBDBG_DEVOPENED</name></expr></argument>, <argument pos:start="35:39" pos:end="35:52"><expr pos:start="35:39" pos:end="35:52"><name pos:start="35:39" pos:end="35:52">USBSYSBUS_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="37:13" pos:end="37:31">goto <name pos:start="37:18" pos:end="37:30">found_devices</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:51"><expr pos:start="41:9" pos:end="41:50"><name pos:start="41:9" pos:end="41:9">f</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="41:50"><name pos:start="41:13" pos:end="41:17">fopen</name><argument_list pos:start="41:18" pos:end="41:50">(<argument pos:start="41:19" pos:end="41:44"><expr pos:start="41:19" pos:end="41:44"><name pos:start="41:19" pos:end="41:33">USBPROCBUS_PATH</name> <literal type="string" pos:start="41:35" pos:end="41:44">"/devices"</literal></expr></argument>, <argument pos:start="41:47" pos:end="41:49"><expr pos:start="41:47" pos:end="41:49"><literal type="string" pos:start="41:47" pos:end="41:49">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="57:9"><if pos:start="43:9" pos:end="57:9">if <condition pos:start="43:12" pos:end="43:14">(<expr pos:start="43:13" pos:end="43:13"><name pos:start="43:13" pos:end="43:13">f</name></expr>)</condition> <block pos:start="43:16" pos:end="57:9">{<block_content pos:start="47:13" pos:end="55:31">

            <comment type="block" pos:start="45:13" pos:end="45:49">/* devices found in /proc/bus/usb/ */</comment>

            <expr_stmt pos:start="47:13" pos:end="47:45"><expr pos:start="47:13" pos:end="47:44"><call pos:start="47:13" pos:end="47:44"><name pos:start="47:13" pos:end="47:18">strcpy</name><argument_list pos:start="47:19" pos:end="47:44">(<argument pos:start="47:20" pos:end="47:26"><expr pos:start="47:20" pos:end="47:26"><name pos:start="47:20" pos:end="47:26">devpath</name></expr></argument>, <argument pos:start="47:29" pos:end="47:43"><expr pos:start="47:29" pos:end="47:43"><name pos:start="47:29" pos:end="47:43">USBPROCBUS_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:38"><expr pos:start="49:13" pos:end="49:37"><name pos:start="49:13" pos:end="49:23">usb_fs_type</name> <operator pos:start="49:25" pos:end="49:25">=</operator> <name pos:start="49:27" pos:end="49:37">USB_FS_PROC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:22"><expr pos:start="51:13" pos:end="51:21"><call pos:start="51:13" pos:end="51:21"><name pos:start="51:13" pos:end="51:18">fclose</name><argument_list pos:start="51:19" pos:end="51:21">(<argument pos:start="51:20" pos:end="51:20"><expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:55"><expr pos:start="53:13" pos:end="53:54"><call pos:start="53:13" pos:end="53:54"><name pos:start="53:13" pos:end="53:19">dprintf</name><argument_list pos:start="53:20" pos:end="53:54">(<argument pos:start="53:21" pos:end="53:36"><expr pos:start="53:21" pos:end="53:36"><name pos:start="53:21" pos:end="53:36">USBDBG_DEVOPENED</name></expr></argument>, <argument pos:start="53:39" pos:end="53:53"><expr pos:start="53:39" pos:end="53:53"><name pos:start="53:39" pos:end="53:53">USBPROCBUS_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="55:13" pos:end="55:31">goto <name pos:start="55:18" pos:end="55:30">found_devices</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="59:9" pos:end="59:78">/* try additional methods if an access method hasn't been found yet */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:50"><expr pos:start="61:9" pos:end="61:49"><name pos:start="61:9" pos:end="61:9">f</name> <operator pos:start="61:11" pos:end="61:11">=</operator> <call pos:start="61:13" pos:end="61:49"><name pos:start="61:13" pos:end="61:17">fopen</name><argument_list pos:start="61:18" pos:end="61:49">(<argument pos:start="61:19" pos:end="61:43"><expr pos:start="61:19" pos:end="61:43"><name pos:start="61:19" pos:end="61:32">USBDEVBUS_PATH</name> <literal type="string" pos:start="61:34" pos:end="61:43">"/devices"</literal></expr></argument>, <argument pos:start="61:46" pos:end="61:48"><expr pos:start="61:46" pos:end="61:48"><literal type="string" pos:start="61:46" pos:end="61:48">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="77:9"><if pos:start="63:9" pos:end="77:9">if <condition pos:start="63:12" pos:end="63:14">(<expr pos:start="63:13" pos:end="63:13"><name pos:start="63:13" pos:end="63:13">f</name></expr>)</condition> <block pos:start="63:16" pos:end="77:9">{<block_content pos:start="67:13" pos:end="75:31">

            <comment type="block" pos:start="65:13" pos:end="65:48">/* devices found in /dev/bus/usb/ */</comment>

            <expr_stmt pos:start="67:13" pos:end="67:44"><expr pos:start="67:13" pos:end="67:43"><call pos:start="67:13" pos:end="67:43"><name pos:start="67:13" pos:end="67:18">strcpy</name><argument_list pos:start="67:19" pos:end="67:43">(<argument pos:start="67:20" pos:end="67:26"><expr pos:start="67:20" pos:end="67:26"><name pos:start="67:20" pos:end="67:26">devpath</name></expr></argument>, <argument pos:start="67:29" pos:end="67:42"><expr pos:start="67:29" pos:end="67:42"><name pos:start="67:29" pos:end="67:42">USBDEVBUS_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:37"><expr pos:start="69:13" pos:end="69:36"><name pos:start="69:13" pos:end="69:23">usb_fs_type</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <name pos:start="69:27" pos:end="69:36">USB_FS_DEV</name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:22"><expr pos:start="71:13" pos:end="71:21"><call pos:start="71:13" pos:end="71:21"><name pos:start="71:13" pos:end="71:18">fclose</name><argument_list pos:start="71:19" pos:end="71:21">(<argument pos:start="71:20" pos:end="71:20"><expr pos:start="71:20" pos:end="71:20"><name pos:start="71:20" pos:end="71:20">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:54"><expr pos:start="73:13" pos:end="73:53"><call pos:start="73:13" pos:end="73:53"><name pos:start="73:13" pos:end="73:19">dprintf</name><argument_list pos:start="73:20" pos:end="73:53">(<argument pos:start="73:21" pos:end="73:36"><expr pos:start="73:21" pos:end="73:36"><name pos:start="73:21" pos:end="73:36">USBDBG_DEVOPENED</name></expr></argument>, <argument pos:start="73:39" pos:end="73:52"><expr pos:start="73:39" pos:end="73:52"><name pos:start="73:39" pos:end="73:52">USBDEVBUS_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="75:13" pos:end="75:31">goto <name pos:start="75:18" pos:end="75:30">found_devices</name>;</goto>

        </block_content>}</block></if></if_stmt>

    <label pos:start="79:5" pos:end="79:18"><name pos:start="79:5" pos:end="79:17">found_devices</name>:</label>

        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:25">(<expr pos:start="81:13" pos:end="81:24"><operator pos:start="81:13" pos:end="81:13">!</operator><name pos:start="81:14" pos:end="81:24">usb_fs_type</name></expr>)</condition> <block pos:start="81:27" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:27">

            <expr_stmt pos:start="83:13" pos:end="83:72"><expr pos:start="83:13" pos:end="83:71"><call pos:start="83:13" pos:end="83:71"><name pos:start="83:13" pos:end="83:26">monitor_printf</name><argument_list pos:start="83:27" pos:end="83:71">(<argument pos:start="83:28" pos:end="83:30"><expr pos:start="83:28" pos:end="83:30"><name pos:start="83:28" pos:end="83:30">mon</name></expr></argument>, <argument pos:start="83:33" pos:end="83:70"><expr pos:start="83:33" pos:end="83:70"><literal type="string" pos:start="83:33" pos:end="83:70">"husb: unable to access USB devices\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="85:13" pos:end="85:27">return <expr pos:start="85:20" pos:end="85:26"><operator pos:start="85:20" pos:end="85:20">-</operator><name pos:start="85:21" pos:end="85:26">ENOENT</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="91:9" pos:end="91:65">/* the module setting (used later for opening devices) */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:63"><expr pos:start="93:9" pos:end="93:62"><name pos:start="93:9" pos:end="93:28">usb_host_device_path</name> <operator pos:start="93:30" pos:end="93:30">=</operator> <call pos:start="93:32" pos:end="93:62"><name pos:start="93:32" pos:end="93:43">qemu_mallocz</name><argument_list pos:start="93:44" pos:end="93:62">(<argument pos:start="93:45" pos:end="93:61"><expr pos:start="93:45" pos:end="93:61"><call pos:start="93:45" pos:end="93:59"><name pos:start="93:45" pos:end="93:50">strlen</name><argument_list pos:start="93:51" pos:end="93:59">(<argument pos:start="93:52" pos:end="93:58"><expr pos:start="93:52" pos:end="93:58"><name pos:start="93:52" pos:end="93:58">devpath</name></expr></argument>)</argument_list></call><operator pos:start="93:60" pos:end="93:60">+</operator><literal type="number" pos:start="93:61" pos:end="93:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:46"><expr pos:start="95:9" pos:end="95:45"><call pos:start="95:9" pos:end="95:45"><name pos:start="95:9" pos:end="95:14">strcpy</name><argument_list pos:start="95:15" pos:end="95:45">(<argument pos:start="95:16" pos:end="95:35"><expr pos:start="95:16" pos:end="95:35"><name pos:start="95:16" pos:end="95:35">usb_host_device_path</name></expr></argument>, <argument pos:start="95:38" pos:end="95:44"><expr pos:start="95:38" pos:end="95:44"><name pos:start="95:38" pos:end="95:44">devpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="99:67"><expr pos:start="97:9" pos:end="99:66"><call pos:start="97:9" pos:end="99:66"><name pos:start="97:9" pos:end="97:22">monitor_printf</name><argument_list pos:start="97:23" pos:end="99:66">(<argument pos:start="97:24" pos:end="97:26"><expr pos:start="97:24" pos:end="97:26"><name pos:start="97:24" pos:end="97:26">mon</name></expr></argument>, <argument pos:start="97:29" pos:end="97:66"><expr pos:start="97:29" pos:end="97:66"><literal type="string" pos:start="97:29" pos:end="97:66">"husb: using %s file-system with %s\n"</literal></expr></argument>,

                       <argument pos:start="99:24" pos:end="99:43"><expr pos:start="99:24" pos:end="99:43"><name pos:start="99:24" pos:end="99:43"><name pos:start="99:24" pos:end="99:30">fs_type</name><index pos:start="99:31" pos:end="99:43">[<expr pos:start="99:32" pos:end="99:42"><name pos:start="99:32" pos:end="99:42">usb_fs_type</name></expr>]</index></name></expr></argument>, <argument pos:start="99:46" pos:end="99:65"><expr pos:start="99:46" pos:end="99:65"><name pos:start="99:46" pos:end="99:65">usb_host_device_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="105:5" pos:end="127:5">switch <condition pos:start="105:12" pos:end="105:24">(<expr pos:start="105:13" pos:end="105:23"><name pos:start="105:13" pos:end="105:23">usb_fs_type</name></expr>)</condition> <block pos:start="105:26" pos:end="127:5">{<block_content pos:start="107:5" pos:end="125:14">

    <case pos:start="107:5" pos:end="107:21">case <expr pos:start="107:10" pos:end="107:20"><name pos:start="107:10" pos:end="107:20">USB_FS_PROC</name></expr>:</case>

    <case pos:start="109:5" pos:end="109:20">case <expr pos:start="109:10" pos:end="109:19"><name pos:start="109:10" pos:end="109:19">USB_FS_DEV</name></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:46"><expr pos:start="111:9" pos:end="111:45"><name pos:start="111:9" pos:end="111:11">ret</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <call pos:start="111:15" pos:end="111:45"><name pos:start="111:15" pos:end="111:31">usb_host_scan_dev</name><argument_list pos:start="111:32" pos:end="111:45">(<argument pos:start="111:33" pos:end="111:38"><expr pos:start="111:33" pos:end="111:38"><name pos:start="111:33" pos:end="111:38">opaque</name></expr></argument>, <argument pos:start="111:41" pos:end="111:44"><expr pos:start="111:41" pos:end="111:44"><name pos:start="111:41" pos:end="111:44">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:20">case <expr pos:start="115:10" pos:end="115:19"><name pos:start="115:10" pos:end="115:19">USB_FS_SYS</name></expr>:</case>

        <expr_stmt pos:start="117:9" pos:end="117:46"><expr pos:start="117:9" pos:end="117:45"><name pos:start="117:9" pos:end="117:11">ret</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <call pos:start="117:15" pos:end="117:45"><name pos:start="117:15" pos:end="117:31">usb_host_scan_sys</name><argument_list pos:start="117:32" pos:end="117:45">(<argument pos:start="117:33" pos:end="117:38"><expr pos:start="117:33" pos:end="117:38"><name pos:start="117:33" pos:end="117:38">opaque</name></expr></argument>, <argument pos:start="117:41" pos:end="117:44"><expr pos:start="117:41" pos:end="117:44"><name pos:start="117:41" pos:end="117:44">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="119:9" pos:end="119:14">break;</break>

    <default pos:start="121:5" pos:end="121:12">default:</default>

        <expr_stmt pos:start="123:9" pos:end="123:22"><expr pos:start="123:9" pos:end="123:21"><name pos:start="123:9" pos:end="123:11">ret</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <operator pos:start="123:15" pos:end="123:15">-</operator><name pos:start="123:16" pos:end="123:21">EINVAL</name></expr>;</expr_stmt>

        <break pos:start="125:9" pos:end="125:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="129:5" pos:end="129:15">return <expr pos:start="129:12" pos:end="129:14"><name pos:start="129:12" pos:end="129:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
