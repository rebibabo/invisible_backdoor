<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3516.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_info_cpus</name><parameter_list pos:start="1:25" pos:end="1:58">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:32">Monitor</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">mon</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:57"><name pos:start="1:40" pos:end="1:46">QObject</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier><modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:57">ret_data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:34">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">QList</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:19">cpu_list</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:12">cpu_list</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <call pos:start="11:16" pos:end="11:26"><name pos:start="11:16" pos:end="11:24">qlist_new</name><argument_list pos:start="11:25" pos:end="11:26">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:57">/* just to set the default cpu if not already done */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:18"><expr pos:start="17:5" pos:end="17:17"><call pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:15">mon_get_cpu</name><argument_list pos:start="17:16" pos:end="17:17">()</argument_list></call></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="71:5">for<control pos:start="21:8" pos:end="21:58">(<init pos:start="21:9" pos:end="21:24"><expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:11">env</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:23">first_cpu</name></expr>;</init> <condition pos:start="21:26" pos:end="21:37"><expr pos:start="21:26" pos:end="21:36"><name pos:start="21:26" pos:end="21:28">env</name> <operator pos:start="21:30" pos:end="21:31">!=</operator> <name pos:start="21:33" pos:end="21:36">NULL</name></expr>;</condition> <incr pos:start="21:39" pos:end="21:57"><expr pos:start="21:39" pos:end="21:57"><name pos:start="21:39" pos:end="21:41">env</name> <operator pos:start="21:43" pos:end="21:43">=</operator> <name pos:start="21:45" pos:end="21:57"><name pos:start="21:45" pos:end="21:47">env</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:57">next_cpu</name></name></expr></incr>)</control> <block pos:start="21:60" pos:end="71:5">{<block_content pos:start="23:9" pos:end="69:36">

        <decl_stmt pos:start="23:9" pos:end="23:19"><decl pos:start="23:9" pos:end="23:18"><type pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:13">QDict</name> <modifier pos:start="23:15" pos:end="23:15">*</modifier></type><name pos:start="23:16" pos:end="23:18">cpu</name></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:21"><decl pos:start="25:9" pos:end="25:20"><type pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:15">QObject</name> <modifier pos:start="25:17" pos:end="25:17">*</modifier></type><name pos:start="25:18" pos:end="25:20">obj</name></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:35"><expr pos:start="29:9" pos:end="29:34"><call pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:29">cpu_synchronize_state</name><argument_list pos:start="29:30" pos:end="29:34">(<argument pos:start="29:31" pos:end="29:33"><expr pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:33">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="33:9" pos:end="37:46"><expr pos:start="33:9" pos:end="37:45"><name pos:start="33:9" pos:end="33:11">obj</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="37:45"><name pos:start="33:15" pos:end="33:32">qobject_from_jsonf</name><argument_list pos:start="33:33" pos:end="37:45">(<argument pos:start="33:34" pos:end="33:77"><expr pos:start="33:34" pos:end="33:77"><literal type="string" pos:start="33:34" pos:end="33:77">"{ 'CPU': %d, 'current': %i, 'halted': %i }"</literal></expr></argument>,

                                 <argument pos:start="35:34" pos:end="35:47"><expr pos:start="35:34" pos:end="35:47"><name pos:start="35:34" pos:end="35:47"><name pos:start="35:34" pos:end="35:36">env</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:47">cpu_index</name></name></expr></argument>, <argument pos:start="35:50" pos:end="35:68"><expr pos:start="35:50" pos:end="35:68"><name pos:start="35:50" pos:end="35:52">env</name> <operator pos:start="35:54" pos:end="35:55">==</operator> <name pos:start="35:57" pos:end="35:68"><name pos:start="35:57" pos:end="35:59">mon</name><operator pos:start="35:60" pos:end="35:61">-&gt;</operator><name pos:start="35:62" pos:end="35:68">mon_cpu</name></name></expr></argument>,

                                 <argument pos:start="37:34" pos:end="37:44"><expr pos:start="37:34" pos:end="37:44"><name pos:start="37:34" pos:end="37:44"><name pos:start="37:34" pos:end="37:36">env</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:44">halted</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:28"><expr pos:start="39:9" pos:end="39:27"><call pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:14">assert</name><argument_list pos:start="39:15" pos:end="39:27">(<argument pos:start="39:16" pos:end="39:26"><expr pos:start="39:16" pos:end="39:26"><name pos:start="39:16" pos:end="39:18">obj</name> <operator pos:start="39:20" pos:end="39:21">!=</operator> <name pos:start="39:23" pos:end="39:26">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="48:0"><expr pos:start="43:9" pos:end="43:35"><name pos:start="43:9" pos:end="43:11">cpu</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:35"><name pos:start="43:15" pos:end="43:30">qobject_to_qdict</name><argument_list pos:start="43:31" pos:end="43:35">(<argument pos:start="43:32" pos:end="43:34"><expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:34">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="47:1" pos:end="47:24">#<cpp:directive pos:start="47:2" pos:end="47:3">if</cpp:directive> <expr pos:start="47:5" pos:end="47:24"><call pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:11">defined</name><argument_list pos:start="47:12" pos:end="47:24">(<argument pos:start="47:13" pos:end="47:23"><expr pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:23">TARGET_I386</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="49:9" pos:end="52:0"><expr pos:start="49:9" pos:end="49:76"><call pos:start="49:9" pos:end="49:76"><name pos:start="49:9" pos:end="49:17">qdict_put</name><argument_list pos:start="49:18" pos:end="49:76">(<argument pos:start="49:19" pos:end="49:21"><expr pos:start="49:19" pos:end="49:21"><name pos:start="49:19" pos:end="49:21">cpu</name></expr></argument>, <argument pos:start="49:24" pos:end="49:27"><expr pos:start="49:24" pos:end="49:27"><literal type="string" pos:start="49:24" pos:end="49:27">"pc"</literal></expr></argument>, <argument pos:start="49:30" pos:end="49:75"><expr pos:start="49:30" pos:end="49:75"><call pos:start="49:30" pos:end="49:75"><name pos:start="49:30" pos:end="49:42">qint_from_int</name><argument_list pos:start="49:43" pos:end="49:75">(<argument pos:start="49:44" pos:end="49:74"><expr pos:start="49:44" pos:end="49:74"><name pos:start="49:44" pos:end="49:51"><name pos:start="49:44" pos:end="49:46">env</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:51">eip</name></name> <operator pos:start="49:53" pos:end="49:53">+</operator> <name pos:start="49:55" pos:end="49:69"><name pos:start="49:55" pos:end="49:57">env</name><operator pos:start="49:58" pos:end="49:59">-&gt;</operator><name pos:start="49:60" pos:end="49:63">segs</name><index pos:start="49:64" pos:end="49:69">[<expr pos:start="49:65" pos:end="49:68"><name pos:start="49:65" pos:end="49:68">R_CS</name></expr>]</index></name><operator pos:start="49:70" pos:end="49:70">.</operator><name pos:start="49:71" pos:end="49:74">base</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="51:1" pos:end="51:25">#<cpp:directive pos:start="51:2" pos:end="51:5">elif</cpp:directive> <expr pos:start="51:7" pos:end="51:25"><call pos:start="51:7" pos:end="51:25"><name pos:start="51:7" pos:end="51:13">defined</name><argument_list pos:start="51:14" pos:end="51:25">(<argument pos:start="51:15" pos:end="51:24"><expr pos:start="51:15" pos:end="51:24"><name pos:start="51:15" pos:end="51:24">TARGET_PPC</name></expr></argument>)</argument_list></call></expr></cpp:elif>

        <expr_stmt pos:start="53:9" pos:end="56:0"><expr pos:start="53:9" pos:end="53:54"><call pos:start="53:9" pos:end="53:54"><name pos:start="53:9" pos:end="53:17">qdict_put</name><argument_list pos:start="53:18" pos:end="53:54">(<argument pos:start="53:19" pos:end="53:21"><expr pos:start="53:19" pos:end="53:21"><name pos:start="53:19" pos:end="53:21">cpu</name></expr></argument>, <argument pos:start="53:24" pos:end="53:28"><expr pos:start="53:24" pos:end="53:28"><literal type="string" pos:start="53:24" pos:end="53:28">"nip"</literal></expr></argument>, <argument pos:start="53:31" pos:end="53:53"><expr pos:start="53:31" pos:end="53:53"><call pos:start="53:31" pos:end="53:53"><name pos:start="53:31" pos:end="53:43">qint_from_int</name><argument_list pos:start="53:44" pos:end="53:53">(<argument pos:start="53:45" pos:end="53:52"><expr pos:start="53:45" pos:end="53:52"><name pos:start="53:45" pos:end="53:52"><name pos:start="53:45" pos:end="53:47">env</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:52">nip</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="55:1" pos:end="55:27">#<cpp:directive pos:start="55:2" pos:end="55:5">elif</cpp:directive> <expr pos:start="55:7" pos:end="55:27"><call pos:start="55:7" pos:end="55:27"><name pos:start="55:7" pos:end="55:13">defined</name><argument_list pos:start="55:14" pos:end="55:27">(<argument pos:start="55:15" pos:end="55:26"><expr pos:start="55:15" pos:end="55:26"><name pos:start="55:15" pos:end="55:26">TARGET_SPARC</name></expr></argument>)</argument_list></call></expr></cpp:elif>

        <expr_stmt pos:start="57:9" pos:end="57:53"><expr pos:start="57:9" pos:end="57:52"><call pos:start="57:9" pos:end="57:52"><name pos:start="57:9" pos:end="57:17">qdict_put</name><argument_list pos:start="57:18" pos:end="57:52">(<argument pos:start="57:19" pos:end="57:21"><expr pos:start="57:19" pos:end="57:21"><name pos:start="57:19" pos:end="57:21">cpu</name></expr></argument>, <argument pos:start="57:24" pos:end="57:27"><expr pos:start="57:24" pos:end="57:27"><literal type="string" pos:start="57:24" pos:end="57:27">"pc"</literal></expr></argument>, <argument pos:start="57:30" pos:end="57:51"><expr pos:start="57:30" pos:end="57:51"><call pos:start="57:30" pos:end="57:51"><name pos:start="57:30" pos:end="57:42">qint_from_int</name><argument_list pos:start="57:43" pos:end="57:51">(<argument pos:start="57:44" pos:end="57:50"><expr pos:start="57:44" pos:end="57:50"><name pos:start="57:44" pos:end="57:50"><name pos:start="57:44" pos:end="57:46">env</name><operator pos:start="57:47" pos:end="57:48">-&gt;</operator><name pos:start="57:49" pos:end="57:50">pc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="62:0"><expr pos:start="59:9" pos:end="59:54"><call pos:start="59:9" pos:end="59:54"><name pos:start="59:9" pos:end="59:17">qdict_put</name><argument_list pos:start="59:18" pos:end="59:54">(<argument pos:start="59:19" pos:end="59:21"><expr pos:start="59:19" pos:end="59:21"><name pos:start="59:19" pos:end="59:21">cpu</name></expr></argument>, <argument pos:start="59:24" pos:end="59:28"><expr pos:start="59:24" pos:end="59:28"><literal type="string" pos:start="59:24" pos:end="59:28">"npc"</literal></expr></argument>, <argument pos:start="59:31" pos:end="59:53"><expr pos:start="59:31" pos:end="59:53"><call pos:start="59:31" pos:end="59:53"><name pos:start="59:31" pos:end="59:43">qint_from_int</name><argument_list pos:start="59:44" pos:end="59:53">(<argument pos:start="59:45" pos:end="59:52"><expr pos:start="59:45" pos:end="59:52"><name pos:start="59:45" pos:end="59:52"><name pos:start="59:45" pos:end="59:47">env</name><operator pos:start="59:48" pos:end="59:49">-&gt;</operator><name pos:start="59:50" pos:end="59:52">npc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="61:1" pos:end="61:26">#<cpp:directive pos:start="61:2" pos:end="61:5">elif</cpp:directive> <expr pos:start="61:7" pos:end="61:26"><call pos:start="61:7" pos:end="61:26"><name pos:start="61:7" pos:end="61:13">defined</name><argument_list pos:start="61:14" pos:end="61:26">(<argument pos:start="61:15" pos:end="61:25"><expr pos:start="61:15" pos:end="61:25"><name pos:start="61:15" pos:end="61:25">TARGET_MIPS</name></expr></argument>)</argument_list></call></expr></cpp:elif>

        <expr_stmt pos:start="63:9" pos:end="66:0"><expr pos:start="63:9" pos:end="63:62"><call pos:start="63:9" pos:end="63:62"><name pos:start="63:9" pos:end="63:17">qdict_put</name><argument_list pos:start="63:18" pos:end="63:62">(<argument pos:start="63:19" pos:end="63:21"><expr pos:start="63:19" pos:end="63:21"><name pos:start="63:19" pos:end="63:21">cpu</name></expr></argument>, <argument pos:start="63:24" pos:end="63:27"><expr pos:start="63:24" pos:end="63:27"><literal type="string" pos:start="63:24" pos:end="63:27">"PC"</literal></expr></argument>, <argument pos:start="63:30" pos:end="63:61"><expr pos:start="63:30" pos:end="63:61"><call pos:start="63:30" pos:end="63:61"><name pos:start="63:30" pos:end="63:42">qint_from_int</name><argument_list pos:start="63:43" pos:end="63:61">(<argument pos:start="63:44" pos:end="63:60"><expr pos:start="63:44" pos:end="63:60"><name pos:start="63:44" pos:end="63:60"><name pos:start="63:44" pos:end="63:46">env</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:57">active_tc</name><operator pos:start="63:58" pos:end="63:58">.</operator><name pos:start="63:59" pos:end="63:60">PC</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>



        <expr_stmt pos:start="69:9" pos:end="69:36"><expr pos:start="69:9" pos:end="69:35"><call pos:start="69:9" pos:end="69:35"><name pos:start="69:9" pos:end="69:20">qlist_append</name><argument_list pos:start="69:21" pos:end="69:35">(<argument pos:start="69:22" pos:end="69:29"><expr pos:start="69:22" pos:end="69:29"><name pos:start="69:22" pos:end="69:29">cpu_list</name></expr></argument>, <argument pos:start="69:32" pos:end="69:34"><expr pos:start="69:32" pos:end="69:34"><name pos:start="69:32" pos:end="69:34">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="75:5" pos:end="75:34"><expr pos:start="75:5" pos:end="75:33"><operator pos:start="75:5" pos:end="75:5">*</operator><name pos:start="75:6" pos:end="75:13">ret_data</name> <operator pos:start="75:15" pos:end="75:15">=</operator> <call pos:start="75:17" pos:end="75:33"><name pos:start="75:17" pos:end="75:23">QOBJECT</name><argument_list pos:start="75:24" pos:end="75:33">(<argument pos:start="75:25" pos:end="75:32"><expr pos:start="75:25" pos:end="75:32"><name pos:start="75:25" pos:end="75:32">cpu_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
