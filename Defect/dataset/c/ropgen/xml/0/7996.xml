<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7996.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:20"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">IOMMUTLBEntry</name></type> <name pos:start="1:22" pos:end="1:40">pbm_translate_iommu</name><parameter_list pos:start="1:41" pos:end="3:55">(<parameter pos:start="1:42" pos:end="1:60"><decl pos:start="1:42" pos:end="1:60"><type pos:start="1:42" pos:end="1:60"><name pos:start="1:42" pos:end="1:53">MemoryRegion</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:60">iommu</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:73"><decl pos:start="1:63" pos:end="1:73"><type pos:start="1:63" pos:end="1:73"><name pos:start="1:63" pos:end="1:68">hwaddr</name></type> <name pos:start="1:70" pos:end="1:73">addr</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:54"><decl pos:start="3:42" pos:end="3:54"><type pos:start="3:42" pos:end="3:54"><name pos:start="3:42" pos:end="3:45">bool</name></type> <name pos:start="3:47" pos:end="3:54">is_write</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="225:1">{<block_content pos:start="7:5" pos:end="223:15">

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">IOMMUState</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">is</name> <init pos:start="7:20" pos:end="7:59">= <expr pos:start="7:22" pos:end="7:59"><call pos:start="7:22" pos:end="7:59"><name pos:start="7:22" pos:end="7:33">container_of</name><argument_list pos:start="7:34" pos:end="7:59">(<argument pos:start="7:35" pos:end="7:39"><expr pos:start="7:35" pos:end="7:39"><name pos:start="7:35" pos:end="7:39">iommu</name></expr></argument>, <argument pos:start="7:42" pos:end="7:51"><expr pos:start="7:42" pos:end="7:51"><name pos:start="7:42" pos:end="7:51">IOMMUState</name></expr></argument>, <argument pos:start="7:54" pos:end="7:58"><expr pos:start="7:54" pos:end="7:58"><name pos:start="7:54" pos:end="7:58">iommu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">hwaddr</name></type> <name pos:start="9:12" pos:end="9:19">baseaddr</name></decl>, <decl pos:start="9:22" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:10"/><name pos:start="9:22" pos:end="9:27">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:16">tte</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:20">tsbsize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="27:6"><decl pos:start="15:5" pos:end="27:5"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:17">IOMMUTLBEntry</name></type> <name pos:start="15:19" pos:end="15:21">ret</name> <init pos:start="15:23" pos:end="27:5">= <expr pos:start="15:25" pos:end="27:5"><block pos:start="15:25" pos:end="27:5">{

        <expr pos:start="17:9" pos:end="17:42"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:18">target_as</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <operator pos:start="17:22" pos:end="17:22">&amp;</operator><name pos:start="17:23" pos:end="17:42">address_space_memory</name></expr>,

        <expr pos:start="19:9" pos:end="19:17"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:13">iova</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr>,

        <expr pos:start="21:9" pos:end="21:28"><operator pos:start="21:9" pos:end="21:9">.</operator><name pos:start="21:10" pos:end="21:24">translated_addr</name> <operator pos:start="21:26" pos:end="21:26">=</operator> <literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr>,

        <expr pos:start="23:9" pos:end="23:31"><operator pos:start="23:9" pos:end="23:9">.</operator><name pos:start="23:10" pos:end="23:18">addr_mask</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <operator pos:start="23:22" pos:end="23:22">~</operator><operator pos:start="23:23" pos:end="23:23">(</operator><name pos:start="23:24" pos:end="23:29">hwaddr</name><operator pos:start="23:30" pos:end="23:30">)</operator><literal type="number" pos:start="23:31" pos:end="23:31">0</literal></expr>,

        <expr pos:start="25:9" pos:end="25:26"><operator pos:start="25:9" pos:end="25:9">.</operator><name pos:start="25:10" pos:end="25:13">perm</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:26">IOMMU_NONE</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="47:5"><if pos:start="31:5" pos:end="47:5">if <condition pos:start="31:8" pos:end="31:57">(<expr pos:start="31:9" pos:end="31:56"><operator pos:start="31:9" pos:end="31:9">!</operator><operator pos:start="31:10" pos:end="31:10">(</operator><name pos:start="31:11" pos:end="31:35"><name pos:start="31:11" pos:end="31:12">is</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:18">regs</name><index pos:start="31:19" pos:end="31:35">[<expr pos:start="31:20" pos:end="31:34"><name pos:start="31:20" pos:end="31:29">IOMMU_CTRL</name> <operator pos:start="31:31" pos:end="31:32">&gt;&gt;</operator> <literal type="number" pos:start="31:34" pos:end="31:34">3</literal></expr>]</index></name> <operator pos:start="31:37" pos:end="31:37">&amp;</operator> <name pos:start="31:39" pos:end="31:55">IOMMU_CTRL_MMU_EN</name><operator pos:start="31:56" pos:end="31:56">)</operator></expr>)</condition> <block pos:start="31:59" pos:end="47:5">{<block_content pos:start="35:9" pos:end="45:19">

        <comment type="block" pos:start="33:9" pos:end="33:64">/* IOMMU disabled, passthrough using standard 8K page */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:45"><expr pos:start="35:9" pos:end="35:44"><name pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:11">ret</name><operator pos:start="35:12" pos:end="35:12">.</operator><name pos:start="35:13" pos:end="35:16">iova</name></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <name pos:start="35:20" pos:end="35:23">addr</name> <operator pos:start="35:25" pos:end="35:25">&amp;</operator> <name pos:start="35:27" pos:end="35:44">IOMMU_PAGE_MASK_8K</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:11">ret</name><operator pos:start="37:12" pos:end="37:12">.</operator><name pos:start="37:13" pos:end="37:27">translated_addr</name></name> <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:34">addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:43"><expr pos:start="39:9" pos:end="39:42"><name pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:11">ret</name><operator pos:start="39:12" pos:end="39:12">.</operator><name pos:start="39:13" pos:end="39:21">addr_mask</name></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <name pos:start="39:25" pos:end="39:42">IOMMU_PAGE_MASK_8K</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:11">ret</name><operator pos:start="41:12" pos:end="41:12">.</operator><name pos:start="41:13" pos:end="41:16">perm</name></name> <operator pos:start="41:18" pos:end="41:18">=</operator> <name pos:start="41:20" pos:end="41:27">IOMMU_RW</name></expr>;</expr_stmt>



        <return pos:start="45:9" pos:end="45:19">return <expr pos:start="45:16" pos:end="45:18"><name pos:start="45:16" pos:end="45:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:41"><expr pos:start="51:5" pos:end="51:40"><name pos:start="51:5" pos:end="51:12">baseaddr</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <name pos:start="51:16" pos:end="51:40"><name pos:start="51:16" pos:end="51:17">is</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:23">regs</name><index pos:start="51:24" pos:end="51:40">[<expr pos:start="51:25" pos:end="51:39"><name pos:start="51:25" pos:end="51:34">IOMMU_BASE</name> <operator pos:start="51:36" pos:end="51:37">&gt;&gt;</operator> <literal type="number" pos:start="51:39" pos:end="51:39">3</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:72"><expr pos:start="53:5" pos:end="53:71"><name pos:start="53:5" pos:end="53:11">tsbsize</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <operator pos:start="53:15" pos:end="53:15">(</operator><name pos:start="53:16" pos:end="53:40"><name pos:start="53:16" pos:end="53:17">is</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:23">regs</name><index pos:start="53:24" pos:end="53:40">[<expr pos:start="53:25" pos:end="53:39"><name pos:start="53:25" pos:end="53:34">IOMMU_CTRL</name> <operator pos:start="53:36" pos:end="53:37">&gt;&gt;</operator> <literal type="number" pos:start="53:39" pos:end="53:39">3</literal></expr>]</index></name> <operator pos:start="53:42" pos:end="53:43">&gt;&gt;</operator> <name pos:start="53:45" pos:end="53:64">IOMMU_CTRL_TSB_SHIFT</name><operator pos:start="53:65" pos:end="53:65">)</operator> <operator pos:start="53:67" pos:end="53:67">&amp;</operator> <literal type="number" pos:start="53:69" pos:end="53:71">0x7</literal></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="163:5"><if pos:start="57:5" pos:end="107:5">if <condition pos:start="57:8" pos:end="57:56">(<expr pos:start="57:9" pos:end="57:55"><name pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:10">is</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:16">regs</name><index pos:start="57:17" pos:end="57:33">[<expr pos:start="57:18" pos:end="57:32"><name pos:start="57:18" pos:end="57:27">IOMMU_CTRL</name> <operator pos:start="57:29" pos:end="57:30">&gt;&gt;</operator> <literal type="number" pos:start="57:32" pos:end="57:32">3</literal></expr>]</index></name> <operator pos:start="57:35" pos:end="57:35">&amp;</operator> <name pos:start="57:37" pos:end="57:55">IOMMU_CTRL_TBW_SIZE</name></expr>)</condition> <block pos:start="57:58" pos:end="107:5">{<block_content pos:start="61:9" pos:end="105:9">

        <comment type="block" pos:start="59:9" pos:end="59:17">/* 64K */</comment>

        <switch pos:start="61:9" pos:end="105:9">switch <condition pos:start="61:16" pos:end="61:24">(<expr pos:start="61:17" pos:end="61:23"><name pos:start="61:17" pos:end="61:23">tsbsize</name></expr>)</condition> <block pos:start="61:26" pos:end="105:9">{<block_content pos:start="63:9" pos:end="103:23">

        <case pos:start="63:9" pos:end="63:15">case <expr pos:start="63:14" pos:end="63:14"><literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>:</case>

            <expr_stmt pos:start="65:13" pos:end="65:66"><expr pos:start="65:13" pos:end="65:65"><name pos:start="65:13" pos:end="65:18">offset</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <operator pos:start="65:22" pos:end="65:22">(</operator><name pos:start="65:23" pos:end="65:26">addr</name> <operator pos:start="65:28" pos:end="65:28">&amp;</operator> <name pos:start="65:30" pos:end="65:58">IOMMU_TSB_64K_OFFSET_MASK_64M</name><operator pos:start="65:59" pos:end="65:59">)</operator> <operator pos:start="65:61" pos:end="65:62">&gt;&gt;</operator> <literal type="number" pos:start="65:64" pos:end="65:65">13</literal></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        <case pos:start="69:9" pos:end="69:15">case <expr pos:start="69:14" pos:end="69:14"><literal type="number" pos:start="69:14" pos:end="69:14">1</literal></expr>:</case>

            <expr_stmt pos:start="71:13" pos:end="71:67"><expr pos:start="71:13" pos:end="71:66"><name pos:start="71:13" pos:end="71:18">offset</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <operator pos:start="71:22" pos:end="71:22">(</operator><name pos:start="71:23" pos:end="71:26">addr</name> <operator pos:start="71:28" pos:end="71:28">&amp;</operator> <name pos:start="71:30" pos:end="71:59">IOMMU_TSB_64K_OFFSET_MASK_128M</name><operator pos:start="71:60" pos:end="71:60">)</operator> <operator pos:start="71:62" pos:end="71:63">&gt;&gt;</operator> <literal type="number" pos:start="71:65" pos:end="71:66">13</literal></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        <case pos:start="75:9" pos:end="75:15">case <expr pos:start="75:14" pos:end="75:14"><literal type="number" pos:start="75:14" pos:end="75:14">2</literal></expr>:</case>

            <expr_stmt pos:start="77:13" pos:end="77:67"><expr pos:start="77:13" pos:end="77:66"><name pos:start="77:13" pos:end="77:18">offset</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <operator pos:start="77:22" pos:end="77:22">(</operator><name pos:start="77:23" pos:end="77:26">addr</name> <operator pos:start="77:28" pos:end="77:28">&amp;</operator> <name pos:start="77:30" pos:end="77:59">IOMMU_TSB_64K_OFFSET_MASK_256M</name><operator pos:start="77:60" pos:end="77:60">)</operator> <operator pos:start="77:62" pos:end="77:63">&gt;&gt;</operator> <literal type="number" pos:start="77:65" pos:end="77:66">13</literal></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        <case pos:start="81:9" pos:end="81:15">case <expr pos:start="81:14" pos:end="81:14"><literal type="number" pos:start="81:14" pos:end="81:14">3</literal></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:67"><expr pos:start="83:13" pos:end="83:66"><name pos:start="83:13" pos:end="83:18">offset</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <operator pos:start="83:22" pos:end="83:22">(</operator><name pos:start="83:23" pos:end="83:26">addr</name> <operator pos:start="83:28" pos:end="83:28">&amp;</operator> <name pos:start="83:30" pos:end="83:59">IOMMU_TSB_64K_OFFSET_MASK_512M</name><operator pos:start="83:60" pos:end="83:60">)</operator> <operator pos:start="83:62" pos:end="83:63">&gt;&gt;</operator> <literal type="number" pos:start="83:65" pos:end="83:66">13</literal></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        <case pos:start="87:9" pos:end="87:15">case <expr pos:start="87:14" pos:end="87:14"><literal type="number" pos:start="87:14" pos:end="87:14">4</literal></expr>:</case>

            <expr_stmt pos:start="89:13" pos:end="89:65"><expr pos:start="89:13" pos:end="89:64"><name pos:start="89:13" pos:end="89:18">offset</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <operator pos:start="89:22" pos:end="89:22">(</operator><name pos:start="89:23" pos:end="89:26">addr</name> <operator pos:start="89:28" pos:end="89:28">&amp;</operator> <name pos:start="89:30" pos:end="89:57">IOMMU_TSB_64K_OFFSET_MASK_1G</name><operator pos:start="89:58" pos:end="89:58">)</operator> <operator pos:start="89:60" pos:end="89:61">&gt;&gt;</operator> <literal type="number" pos:start="89:63" pos:end="89:64">13</literal></expr>;</expr_stmt>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        <case pos:start="93:9" pos:end="93:15">case <expr pos:start="93:14" pos:end="93:14"><literal type="number" pos:start="93:14" pos:end="93:14">5</literal></expr>:</case>

            <expr_stmt pos:start="95:13" pos:end="95:65"><expr pos:start="95:13" pos:end="95:64"><name pos:start="95:13" pos:end="95:18">offset</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <operator pos:start="95:22" pos:end="95:22">(</operator><name pos:start="95:23" pos:end="95:26">addr</name> <operator pos:start="95:28" pos:end="95:28">&amp;</operator> <name pos:start="95:30" pos:end="95:57">IOMMU_TSB_64K_OFFSET_MASK_2G</name><operator pos:start="95:58" pos:end="95:58">)</operator> <operator pos:start="95:60" pos:end="95:61">&gt;&gt;</operator> <literal type="number" pos:start="95:63" pos:end="95:64">13</literal></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        <default pos:start="99:9" pos:end="99:16">default:</default>

            <comment type="block" pos:start="101:13" pos:end="101:40">/* Not implemented, error */</comment>

            <return pos:start="103:13" pos:end="103:23">return <expr pos:start="103:20" pos:end="103:22"><name pos:start="103:20" pos:end="103:22">ret</name></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></if> <else pos:start="107:7" pos:end="163:5">else <block pos:start="107:12" pos:end="163:5">{<block_content pos:start="111:9" pos:end="161:9">

        <comment type="block" pos:start="109:9" pos:end="109:16">/* 8K */</comment>

        <switch pos:start="111:9" pos:end="161:9">switch <condition pos:start="111:16" pos:end="111:24">(<expr pos:start="111:17" pos:end="111:23"><name pos:start="111:17" pos:end="111:23">tsbsize</name></expr>)</condition> <block pos:start="111:26" pos:end="161:9">{<block_content pos:start="113:9" pos:end="159:18">

        <case pos:start="113:9" pos:end="113:15">case <expr pos:start="113:14" pos:end="113:14"><literal type="number" pos:start="113:14" pos:end="113:14">0</literal></expr>:</case>

            <expr_stmt pos:start="115:13" pos:end="115:64"><expr pos:start="115:13" pos:end="115:63"><name pos:start="115:13" pos:end="115:18">offset</name> <operator pos:start="115:20" pos:end="115:20">=</operator> <operator pos:start="115:22" pos:end="115:22">(</operator><name pos:start="115:23" pos:end="115:26">addr</name> <operator pos:start="115:28" pos:end="115:28">&amp;</operator> <name pos:start="115:30" pos:end="115:56">IOMMU_TSB_8K_OFFSET_MASK_8M</name><operator pos:start="115:57" pos:end="115:57">)</operator> <operator pos:start="115:59" pos:end="115:60">&gt;&gt;</operator> <literal type="number" pos:start="115:62" pos:end="115:63">10</literal></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:15">case <expr pos:start="119:14" pos:end="119:14"><literal type="number" pos:start="119:14" pos:end="119:14">1</literal></expr>:</case>

            <expr_stmt pos:start="121:13" pos:end="121:65"><expr pos:start="121:13" pos:end="121:64"><name pos:start="121:13" pos:end="121:18">offset</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <operator pos:start="121:22" pos:end="121:22">(</operator><name pos:start="121:23" pos:end="121:26">addr</name> <operator pos:start="121:28" pos:end="121:28">&amp;</operator> <name pos:start="121:30" pos:end="121:57">IOMMU_TSB_8K_OFFSET_MASK_16M</name><operator pos:start="121:58" pos:end="121:58">)</operator> <operator pos:start="121:60" pos:end="121:61">&gt;&gt;</operator> <literal type="number" pos:start="121:63" pos:end="121:64">10</literal></expr>;</expr_stmt>

            <break pos:start="123:13" pos:end="123:18">break;</break>

        <case pos:start="125:9" pos:end="125:15">case <expr pos:start="125:14" pos:end="125:14"><literal type="number" pos:start="125:14" pos:end="125:14">2</literal></expr>:</case>

            <expr_stmt pos:start="127:13" pos:end="127:65"><expr pos:start="127:13" pos:end="127:64"><name pos:start="127:13" pos:end="127:18">offset</name> <operator pos:start="127:20" pos:end="127:20">=</operator> <operator pos:start="127:22" pos:end="127:22">(</operator><name pos:start="127:23" pos:end="127:26">addr</name> <operator pos:start="127:28" pos:end="127:28">&amp;</operator> <name pos:start="127:30" pos:end="127:57">IOMMU_TSB_8K_OFFSET_MASK_32M</name><operator pos:start="127:58" pos:end="127:58">)</operator> <operator pos:start="127:60" pos:end="127:61">&gt;&gt;</operator> <literal type="number" pos:start="127:63" pos:end="127:64">10</literal></expr>;</expr_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:15">case <expr pos:start="131:14" pos:end="131:14"><literal type="number" pos:start="131:14" pos:end="131:14">3</literal></expr>:</case>

            <expr_stmt pos:start="133:13" pos:end="133:65"><expr pos:start="133:13" pos:end="133:64"><name pos:start="133:13" pos:end="133:18">offset</name> <operator pos:start="133:20" pos:end="133:20">=</operator> <operator pos:start="133:22" pos:end="133:22">(</operator><name pos:start="133:23" pos:end="133:26">addr</name> <operator pos:start="133:28" pos:end="133:28">&amp;</operator> <name pos:start="133:30" pos:end="133:57">IOMMU_TSB_8K_OFFSET_MASK_64M</name><operator pos:start="133:58" pos:end="133:58">)</operator> <operator pos:start="133:60" pos:end="133:61">&gt;&gt;</operator> <literal type="number" pos:start="133:63" pos:end="133:64">10</literal></expr>;</expr_stmt>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        <case pos:start="137:9" pos:end="137:15">case <expr pos:start="137:14" pos:end="137:14"><literal type="number" pos:start="137:14" pos:end="137:14">4</literal></expr>:</case>

            <expr_stmt pos:start="139:13" pos:end="139:66"><expr pos:start="139:13" pos:end="139:65"><name pos:start="139:13" pos:end="139:18">offset</name> <operator pos:start="139:20" pos:end="139:20">=</operator> <operator pos:start="139:22" pos:end="139:22">(</operator><name pos:start="139:23" pos:end="139:26">addr</name> <operator pos:start="139:28" pos:end="139:28">&amp;</operator> <name pos:start="139:30" pos:end="139:58">IOMMU_TSB_8K_OFFSET_MASK_128M</name><operator pos:start="139:59" pos:end="139:59">)</operator> <operator pos:start="139:61" pos:end="139:62">&gt;&gt;</operator> <literal type="number" pos:start="139:64" pos:end="139:65">10</literal></expr>;</expr_stmt>

            <break pos:start="141:13" pos:end="141:18">break;</break>

        <case pos:start="143:9" pos:end="143:15">case <expr pos:start="143:14" pos:end="143:14"><literal type="number" pos:start="143:14" pos:end="143:14">5</literal></expr>:</case>

            <expr_stmt pos:start="145:13" pos:end="145:66"><expr pos:start="145:13" pos:end="145:65"><name pos:start="145:13" pos:end="145:18">offset</name> <operator pos:start="145:20" pos:end="145:20">=</operator> <operator pos:start="145:22" pos:end="145:22">(</operator><name pos:start="145:23" pos:end="145:26">addr</name> <operator pos:start="145:28" pos:end="145:28">&amp;</operator> <name pos:start="145:30" pos:end="145:58">IOMMU_TSB_8K_OFFSET_MASK_256M</name><operator pos:start="145:59" pos:end="145:59">)</operator> <operator pos:start="145:61" pos:end="145:62">&gt;&gt;</operator> <literal type="number" pos:start="145:64" pos:end="145:65">10</literal></expr>;</expr_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        <case pos:start="149:9" pos:end="149:15">case <expr pos:start="149:14" pos:end="149:14"><literal type="number" pos:start="149:14" pos:end="149:14">6</literal></expr>:</case>

            <expr_stmt pos:start="151:13" pos:end="151:66"><expr pos:start="151:13" pos:end="151:65"><name pos:start="151:13" pos:end="151:18">offset</name> <operator pos:start="151:20" pos:end="151:20">=</operator> <operator pos:start="151:22" pos:end="151:22">(</operator><name pos:start="151:23" pos:end="151:26">addr</name> <operator pos:start="151:28" pos:end="151:28">&amp;</operator> <name pos:start="151:30" pos:end="151:58">IOMMU_TSB_8K_OFFSET_MASK_512M</name><operator pos:start="151:59" pos:end="151:59">)</operator> <operator pos:start="151:61" pos:end="151:62">&gt;&gt;</operator> <literal type="number" pos:start="151:64" pos:end="151:65">10</literal></expr>;</expr_stmt>

            <break pos:start="153:13" pos:end="153:18">break;</break>

        <case pos:start="155:9" pos:end="155:15">case <expr pos:start="155:14" pos:end="155:14"><literal type="number" pos:start="155:14" pos:end="155:14">7</literal></expr>:</case>

            <expr_stmt pos:start="157:13" pos:end="157:64"><expr pos:start="157:13" pos:end="157:63"><name pos:start="157:13" pos:end="157:18">offset</name> <operator pos:start="157:20" pos:end="157:20">=</operator> <operator pos:start="157:22" pos:end="157:22">(</operator><name pos:start="157:23" pos:end="157:26">addr</name> <operator pos:start="157:28" pos:end="157:28">&amp;</operator> <name pos:start="157:30" pos:end="157:56">IOMMU_TSB_8K_OFFSET_MASK_1G</name><operator pos:start="157:57" pos:end="157:57">)</operator> <operator pos:start="157:59" pos:end="157:60">&gt;&gt;</operator> <literal type="number" pos:start="157:62" pos:end="157:63">10</literal></expr>;</expr_stmt>

            <break pos:start="159:13" pos:end="159:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="167:5" pos:end="169:61"><expr pos:start="167:5" pos:end="169:60"><name pos:start="167:5" pos:end="167:7">tte</name> <operator pos:start="167:9" pos:end="167:9">=</operator> <call pos:start="167:11" pos:end="169:60"><name pos:start="167:11" pos:end="167:30">address_space_ldq_be</name><argument_list pos:start="167:31" pos:end="169:60">(<argument pos:start="167:32" pos:end="167:52"><expr pos:start="167:32" pos:end="167:52"><operator pos:start="167:32" pos:end="167:32">&amp;</operator><name pos:start="167:33" pos:end="167:52">address_space_memory</name></expr></argument>, <argument pos:start="167:55" pos:end="167:71"><expr pos:start="167:55" pos:end="167:71"><name pos:start="167:55" pos:end="167:62">baseaddr</name> <operator pos:start="167:64" pos:end="167:64">+</operator> <name pos:start="167:66" pos:end="167:71">offset</name></expr></argument>,

                               <argument pos:start="169:32" pos:end="169:53"><expr pos:start="169:32" pos:end="169:53"><name pos:start="169:32" pos:end="169:53">MEMTXATTRS_UNSPECIFIED</name></expr></argument>, <argument pos:start="169:56" pos:end="169:59"><expr pos:start="169:56" pos:end="169:59"><name pos:start="169:56" pos:end="169:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="173:5" pos:end="179:5"><if pos:start="173:5" pos:end="179:5">if <condition pos:start="173:8" pos:end="173:34">(<expr pos:start="173:9" pos:end="173:33"><operator pos:start="173:9" pos:end="173:9">!</operator><operator pos:start="173:10" pos:end="173:10">(</operator><name pos:start="173:11" pos:end="173:13">tte</name> <operator pos:start="173:15" pos:end="173:15">&amp;</operator> <name pos:start="173:17" pos:end="173:32">IOMMU_TTE_DATA_V</name><operator pos:start="173:33" pos:end="173:33">)</operator></expr>)</condition> <block pos:start="173:36" pos:end="179:5">{<block_content pos:start="177:9" pos:end="177:19">

        <comment type="block" pos:start="175:9" pos:end="175:29">/* Invalid mapping */</comment>

        <return pos:start="177:9" pos:end="177:19">return <expr pos:start="177:16" pos:end="177:18"><name pos:start="177:16" pos:end="177:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="183:5" pos:end="193:5"><if pos:start="183:5" pos:end="189:5">if <condition pos:start="183:8" pos:end="183:31">(<expr pos:start="183:9" pos:end="183:30"><name pos:start="183:9" pos:end="183:11">tte</name> <operator pos:start="183:13" pos:end="183:13">&amp;</operator> <name pos:start="183:15" pos:end="183:30">IOMMU_TTE_DATA_W</name></expr>)</condition> <block pos:start="183:33" pos:end="189:5">{<block_content pos:start="187:9" pos:end="187:28">

        <comment type="block" pos:start="185:9" pos:end="185:23">/* Writeable */</comment>

        <expr_stmt pos:start="187:9" pos:end="187:28"><expr pos:start="187:9" pos:end="187:27"><name pos:start="187:9" pos:end="187:16"><name pos:start="187:9" pos:end="187:11">ret</name><operator pos:start="187:12" pos:end="187:12">.</operator><name pos:start="187:13" pos:end="187:16">perm</name></name> <operator pos:start="187:18" pos:end="187:18">=</operator> <name pos:start="187:20" pos:end="187:27">IOMMU_RW</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="189:7" pos:end="193:5">else <block pos:start="189:12" pos:end="193:5">{<block_content pos:start="191:9" pos:end="191:28">

        <expr_stmt pos:start="191:9" pos:end="191:28"><expr pos:start="191:9" pos:end="191:27"><name pos:start="191:9" pos:end="191:16"><name pos:start="191:9" pos:end="191:11">ret</name><operator pos:start="191:12" pos:end="191:12">.</operator><name pos:start="191:13" pos:end="191:16">perm</name></name> <operator pos:start="191:18" pos:end="191:18">=</operator> <name pos:start="191:20" pos:end="191:27">IOMMU_RO</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="197:5" pos:end="197:22">/* Extract phys */</comment>

    <if_stmt pos:start="199:5" pos:end="219:5"><if pos:start="199:5" pos:end="209:5">if <condition pos:start="199:8" pos:end="199:34">(<expr pos:start="199:9" pos:end="199:33"><name pos:start="199:9" pos:end="199:11">tte</name> <operator pos:start="199:13" pos:end="199:13">&amp;</operator> <name pos:start="199:15" pos:end="199:33">IOMMU_TTE_DATA_SIZE</name></expr>)</condition> <block pos:start="199:36" pos:end="209:5">{<block_content pos:start="203:9" pos:end="207:50">

        <comment type="block" pos:start="201:9" pos:end="201:17">/* 64K */</comment>

        <expr_stmt pos:start="203:9" pos:end="203:46"><expr pos:start="203:9" pos:end="203:45"><name pos:start="203:9" pos:end="203:16"><name pos:start="203:9" pos:end="203:11">ret</name><operator pos:start="203:12" pos:end="203:12">.</operator><name pos:start="203:13" pos:end="203:16">iova</name></name> <operator pos:start="203:18" pos:end="203:18">=</operator> <name pos:start="203:20" pos:end="203:23">addr</name> <operator pos:start="203:25" pos:end="203:25">&amp;</operator> <name pos:start="203:27" pos:end="203:45">IOMMU_PAGE_MASK_64K</name></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:60"><expr pos:start="205:9" pos:end="205:59"><name pos:start="205:9" pos:end="205:27"><name pos:start="205:9" pos:end="205:11">ret</name><operator pos:start="205:12" pos:end="205:12">.</operator><name pos:start="205:13" pos:end="205:27">translated_addr</name></name> <operator pos:start="205:29" pos:end="205:29">=</operator> <name pos:start="205:31" pos:end="205:33">tte</name> <operator pos:start="205:35" pos:end="205:35">&amp;</operator> <name pos:start="205:37" pos:end="205:59">IOMMU_TTE_PHYS_MASK_64K</name></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:50"><expr pos:start="207:9" pos:end="207:49"><name pos:start="207:9" pos:end="207:21"><name pos:start="207:9" pos:end="207:11">ret</name><operator pos:start="207:12" pos:end="207:12">.</operator><name pos:start="207:13" pos:end="207:21">addr_mask</name></name> <operator pos:start="207:23" pos:end="207:23">=</operator> <operator pos:start="207:25" pos:end="207:25">(</operator><name pos:start="207:26" pos:end="207:44">IOMMU_PAGE_SIZE_64K</name> <operator pos:start="207:46" pos:end="207:46">-</operator> <literal type="number" pos:start="207:48" pos:end="207:48">1</literal><operator pos:start="207:49" pos:end="207:49">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="209:7" pos:end="219:5">else <block pos:start="209:12" pos:end="219:5">{<block_content pos:start="213:9" pos:end="217:49">

        <comment type="block" pos:start="211:9" pos:end="211:16">/* 8K */</comment>

        <expr_stmt pos:start="213:9" pos:end="213:45"><expr pos:start="213:9" pos:end="213:44"><name pos:start="213:9" pos:end="213:16"><name pos:start="213:9" pos:end="213:11">ret</name><operator pos:start="213:12" pos:end="213:12">.</operator><name pos:start="213:13" pos:end="213:16">iova</name></name> <operator pos:start="213:18" pos:end="213:18">=</operator> <name pos:start="213:20" pos:end="213:23">addr</name> <operator pos:start="213:25" pos:end="213:25">&amp;</operator> <name pos:start="213:27" pos:end="213:44">IOMMU_PAGE_MASK_8K</name></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:59"><expr pos:start="215:9" pos:end="215:58"><name pos:start="215:9" pos:end="215:27"><name pos:start="215:9" pos:end="215:11">ret</name><operator pos:start="215:12" pos:end="215:12">.</operator><name pos:start="215:13" pos:end="215:27">translated_addr</name></name> <operator pos:start="215:29" pos:end="215:29">=</operator> <name pos:start="215:31" pos:end="215:33">tte</name> <operator pos:start="215:35" pos:end="215:35">&amp;</operator> <name pos:start="215:37" pos:end="215:58">IOMMU_TTE_PHYS_MASK_8K</name></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:49"><expr pos:start="217:9" pos:end="217:48"><name pos:start="217:9" pos:end="217:21"><name pos:start="217:9" pos:end="217:11">ret</name><operator pos:start="217:12" pos:end="217:12">.</operator><name pos:start="217:13" pos:end="217:21">addr_mask</name></name> <operator pos:start="217:23" pos:end="217:23">=</operator> <operator pos:start="217:25" pos:end="217:25">(</operator><name pos:start="217:26" pos:end="217:43">IOMMU_PAGE_SIZE_8K</name> <operator pos:start="217:45" pos:end="217:45">-</operator> <literal type="number" pos:start="217:47" pos:end="217:47">1</literal><operator pos:start="217:48" pos:end="217:48">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="223:5" pos:end="223:15">return <expr pos:start="223:12" pos:end="223:14"><name pos:start="223:12" pos:end="223:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
