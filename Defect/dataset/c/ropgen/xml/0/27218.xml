<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27218.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">dnxhd_decode_frame</name><parameter_list pos:start="1:30" pos:end="3:62">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:63"><decl pos:start="1:54" pos:end="1:63"><type pos:start="1:54" pos:end="1:63"><name pos:start="1:54" pos:end="1:57">void</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">data</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:44"><decl pos:start="3:31" pos:end="3:44"><type pos:start="3:31" pos:end="3:44"><name pos:start="3:31" pos:end="3:33">int</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:44">got_frame</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:61"><decl pos:start="3:47" pos:end="3:61"><type pos:start="3:47" pos:end="3:61"><name pos:start="3:47" pos:end="3:54">AVPacket</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:61">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="131:1">{<block_content pos:start="7:5" pos:end="129:23">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name> <init pos:start="9:18" pos:end="9:30">= <expr pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:24">avpkt</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">DNXHDContext</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:21">ctx</name> <init pos:start="11:23" pos:end="11:40">= <expr pos:start="11:25" pos:end="11:40"><name pos:start="11:25" pos:end="11:40"><name pos:start="11:25" pos:end="11:29">avctx</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">ThreadFrame</name></type> <name pos:start="13:17" pos:end="13:21">frame</name> <init pos:start="13:23" pos:end="13:37">= <expr pos:start="13:25" pos:end="13:37"><block pos:start="13:25" pos:end="13:37">{ <expr pos:start="13:27" pos:end="13:35"><operator pos:start="13:27" pos:end="13:27">.</operator><name pos:start="13:28" pos:end="13:28">f</name> <operator pos:start="13:30" pos:end="13:30">=</operator> <name pos:start="13:32" pos:end="13:35">data</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:20">picture</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:19">first_field</name> <init pos:start="17:21" pos:end="17:23">= <expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:15"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>, <decl pos:start="19:14" pos:end="19:14"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:14" pos:end="19:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:48"><expr pos:start="23:5" pos:end="23:47"><call pos:start="23:5" pos:end="23:47"><name pos:start="23:5" pos:end="23:11">ff_dlog</name><argument_list pos:start="23:12" pos:end="23:47">(<argument pos:start="23:13" pos:end="23:17"><expr pos:start="23:13" pos:end="23:17"><name pos:start="23:13" pos:end="23:17">avctx</name></expr></argument>, <argument pos:start="23:20" pos:end="23:36"><expr pos:start="23:20" pos:end="23:36"><literal type="string" pos:start="23:20" pos:end="23:36">"frame size %d\n"</literal></expr></argument>, <argument pos:start="23:39" pos:end="23:46"><expr pos:start="23:39" pos:end="23:46"><name pos:start="23:39" pos:end="23:46">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="27:1" pos:end="27:19"><name pos:start="27:1" pos:end="27:18">decode_coding_unit</name>:</label>

    <if_stmt pos:start="29:5" pos:end="31:19"><if pos:start="29:5" pos:end="31:19">if <condition pos:start="29:8" pos:end="29:82">(<expr pos:start="29:9" pos:end="29:81"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:12">ret</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:76"><name pos:start="29:16" pos:end="29:34">dnxhd_decode_header</name><argument_list pos:start="29:35" pos:end="29:76">(<argument pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><name pos:start="29:36" pos:end="29:38">ctx</name></expr></argument>, <argument pos:start="29:41" pos:end="29:47"><expr pos:start="29:41" pos:end="29:47"><name pos:start="29:41" pos:end="29:47">picture</name></expr></argument>, <argument pos:start="29:50" pos:end="29:52"><expr pos:start="29:50" pos:end="29:52"><name pos:start="29:50" pos:end="29:52">buf</name></expr></argument>, <argument pos:start="29:55" pos:end="29:62"><expr pos:start="29:55" pos:end="29:62"><name pos:start="29:55" pos:end="29:62">buf_size</name></expr></argument>, <argument pos:start="29:65" pos:end="29:75"><expr pos:start="29:65" pos:end="29:75"><name pos:start="29:65" pos:end="29:75">first_field</name></expr></argument>)</argument_list></call><operator pos:start="29:77" pos:end="29:77">)</operator> <operator pos:start="29:79" pos:end="29:79">&lt;</operator> <literal type="number" pos:start="29:81" pos:end="29:81">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:19"><block_content pos:start="31:9" pos:end="31:19">

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="45:5"><if pos:start="35:5" pos:end="45:5">if <condition pos:start="35:8" pos:end="37:69">(<expr pos:start="35:9" pos:end="37:68"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:21"><name pos:start="35:10" pos:end="35:14">avctx</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:21">width</name></name> <operator pos:start="35:23" pos:end="35:24">||</operator> <name pos:start="35:26" pos:end="35:38"><name pos:start="35:26" pos:end="35:30">avctx</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:38">height</name></name><operator pos:start="35:39" pos:end="35:39">)</operator> <operator pos:start="35:41" pos:end="35:42">&amp;&amp;</operator>

        <operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:19"><name pos:start="37:10" pos:end="37:12">ctx</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:19">width</name></name> <operator pos:start="37:21" pos:end="37:22">!=</operator> <name pos:start="37:24" pos:end="37:35"><name pos:start="37:24" pos:end="37:28">avctx</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:35">width</name></name> <operator pos:start="37:37" pos:end="37:38">||</operator> <name pos:start="37:40" pos:end="37:50"><name pos:start="37:40" pos:end="37:42">ctx</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:50">height</name></name> <operator pos:start="37:52" pos:end="37:53">!=</operator> <name pos:start="37:55" pos:end="37:67"><name pos:start="37:55" pos:end="37:59">avctx</name><operator pos:start="37:60" pos:end="37:61">-&gt;</operator><name pos:start="37:62" pos:end="37:67">height</name></name><operator pos:start="37:68" pos:end="37:68">)</operator></expr>)</condition> <block pos:start="37:71" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:24">

        <expr_stmt pos:start="39:9" pos:end="41:69"><expr pos:start="39:9" pos:end="41:68"><call pos:start="39:9" pos:end="41:68"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="41:68">(<argument pos:start="39:16" pos:end="39:20"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20">avctx</name></expr></argument>, <argument pos:start="39:23" pos:end="39:36"><expr pos:start="39:23" pos:end="39:36"><name pos:start="39:23" pos:end="39:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="39:39" pos:end="39:76"><expr pos:start="39:39" pos:end="39:76"><literal type="string" pos:start="39:39" pos:end="39:76">"frame size changed: %dx%d -&gt; %dx%d\n"</literal></expr></argument>,

               <argument pos:start="41:16" pos:end="41:27"><expr pos:start="41:16" pos:end="41:27"><name pos:start="41:16" pos:end="41:27"><name pos:start="41:16" pos:end="41:20">avctx</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:27">width</name></name></expr></argument>, <argument pos:start="41:30" pos:end="41:42"><expr pos:start="41:30" pos:end="41:42"><name pos:start="41:30" pos:end="41:42"><name pos:start="41:30" pos:end="41:34">avctx</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:42">height</name></name></expr></argument>, <argument pos:start="41:45" pos:end="41:54"><expr pos:start="41:45" pos:end="41:54"><name pos:start="41:45" pos:end="41:54"><name pos:start="41:45" pos:end="41:47">ctx</name><operator pos:start="41:48" pos:end="41:49">-&gt;</operator><name pos:start="41:50" pos:end="41:54">width</name></name></expr></argument>, <argument pos:start="41:57" pos:end="41:67"><expr pos:start="41:57" pos:end="41:67"><name pos:start="41:57" pos:end="41:67"><name pos:start="41:57" pos:end="41:59">ctx</name><operator pos:start="41:60" pos:end="41:61">-&gt;</operator><name pos:start="41:62" pos:end="41:67">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:24"><expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:19">first_field</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <literal type="number" pos:start="43:23" pos:end="43:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:76">(<expr pos:start="47:9" pos:end="47:75"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:13">avctx</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:22">pix_fmt</name></name> <operator pos:start="47:24" pos:end="47:25">!=</operator> <name pos:start="47:27" pos:end="47:41">AV_PIX_FMT_NONE</name> <operator pos:start="47:43" pos:end="47:44">&amp;&amp;</operator> <name pos:start="47:46" pos:end="47:59"><name pos:start="47:46" pos:end="47:50">avctx</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:59">pix_fmt</name></name> <operator pos:start="47:61" pos:end="47:62">!=</operator> <name pos:start="47:64" pos:end="47:75"><name pos:start="47:64" pos:end="47:66">ctx</name><operator pos:start="47:67" pos:end="47:68">-&gt;</operator><name pos:start="47:69" pos:end="47:75">pix_fmt</name></name></expr>)</condition> <block pos:start="47:78" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:24">

        <expr_stmt pos:start="49:9" pos:end="51:87"><expr pos:start="49:9" pos:end="51:86"><call pos:start="49:9" pos:end="51:86"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="51:86">(<argument pos:start="49:16" pos:end="49:20"><expr pos:start="49:16" pos:end="49:20"><name pos:start="49:16" pos:end="49:20">avctx</name></expr></argument>, <argument pos:start="49:23" pos:end="49:36"><expr pos:start="49:23" pos:end="49:36"><name pos:start="49:23" pos:end="49:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="49:39" pos:end="49:67"><expr pos:start="49:39" pos:end="49:67"><literal type="string" pos:start="49:39" pos:end="49:67">"pix_fmt changed: %s -&gt; %s\n"</literal></expr></argument>,

               <argument pos:start="51:16" pos:end="51:50"><expr pos:start="51:16" pos:end="51:50"><call pos:start="51:16" pos:end="51:50"><name pos:start="51:16" pos:end="51:34">av_get_pix_fmt_name</name><argument_list pos:start="51:35" pos:end="51:50">(<argument pos:start="51:36" pos:end="51:49"><expr pos:start="51:36" pos:end="51:49"><name pos:start="51:36" pos:end="51:49"><name pos:start="51:36" pos:end="51:40">avctx</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:49">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:53" pos:end="51:85"><expr pos:start="51:53" pos:end="51:85"><call pos:start="51:53" pos:end="51:85"><name pos:start="51:53" pos:end="51:71">av_get_pix_fmt_name</name><argument_list pos:start="51:72" pos:end="51:85">(<argument pos:start="51:73" pos:end="51:84"><expr pos:start="51:73" pos:end="51:84"><name pos:start="51:73" pos:end="51:84"><name pos:start="51:73" pos:end="51:75">ctx</name><operator pos:start="51:76" pos:end="51:77">-&gt;</operator><name pos:start="51:78" pos:end="51:84">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:24"><expr pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:19">first_field</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <literal type="number" pos:start="53:23" pos:end="53:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:34"><expr pos:start="59:5" pos:end="59:33"><name pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:9">avctx</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:18">pix_fmt</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:33"><name pos:start="59:22" pos:end="59:24">ctx</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:33">pix_fmt</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:60"><expr pos:start="61:5" pos:end="61:59"><name pos:start="61:5" pos:end="61:7">ret</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <call pos:start="61:11" pos:end="61:59"><name pos:start="61:11" pos:end="61:27">ff_set_dimensions</name><argument_list pos:start="61:28" pos:end="61:59">(<argument pos:start="61:29" pos:end="61:33"><expr pos:start="61:29" pos:end="61:33"><name pos:start="61:29" pos:end="61:33">avctx</name></expr></argument>, <argument pos:start="61:36" pos:end="61:45"><expr pos:start="61:36" pos:end="61:45"><name pos:start="61:36" pos:end="61:45"><name pos:start="61:36" pos:end="61:38">ctx</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:45">width</name></name></expr></argument>, <argument pos:start="61:48" pos:end="61:58"><expr pos:start="61:48" pos:end="61:58"><name pos:start="61:48" pos:end="61:58"><name pos:start="61:48" pos:end="61:50">ctx</name><operator pos:start="61:51" pos:end="61:52">-&gt;</operator><name pos:start="61:53" pos:end="61:58">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="65:19"><if pos:start="63:5" pos:end="65:19">if <condition pos:start="63:8" pos:end="63:16">(<expr pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">&lt;</operator> <literal type="number" pos:start="63:15" pos:end="63:15">0</literal></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:19"><block_content pos:start="65:9" pos:end="65:19">

        <return pos:start="65:9" pos:end="65:19">return <expr pos:start="65:16" pos:end="65:18"><name pos:start="65:16" pos:end="65:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="79:5"><if pos:start="69:5" pos:end="79:5">if <condition pos:start="69:8" pos:end="69:20">(<expr pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:19">first_field</name></expr>)</condition> <block pos:start="69:22" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:31">

        <if_stmt pos:start="71:9" pos:end="73:23"><if pos:start="71:9" pos:end="73:23">if <condition pos:start="71:12" pos:end="71:63">(<expr pos:start="71:13" pos:end="71:62"><operator pos:start="71:13" pos:end="71:13">(</operator><name pos:start="71:14" pos:end="71:16">ret</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <call pos:start="71:20" pos:end="71:57"><name pos:start="71:20" pos:end="71:39">ff_thread_get_buffer</name><argument_list pos:start="71:40" pos:end="71:57">(<argument pos:start="71:41" pos:end="71:45"><expr pos:start="71:41" pos:end="71:45"><name pos:start="71:41" pos:end="71:45">avctx</name></expr></argument>, <argument pos:start="71:48" pos:end="71:53"><expr pos:start="71:48" pos:end="71:53"><operator pos:start="71:48" pos:end="71:48">&amp;</operator><name pos:start="71:49" pos:end="71:53">frame</name></expr></argument>, <argument pos:start="71:56" pos:end="71:56"><expr pos:start="71:56" pos:end="71:56"><literal type="number" pos:start="71:56" pos:end="71:56">0</literal></expr></argument>)</argument_list></call><operator pos:start="71:58" pos:end="71:58">)</operator> <operator pos:start="71:60" pos:end="71:60">&lt;</operator> <literal type="number" pos:start="71:62" pos:end="71:62">0</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:23"><block_content pos:start="73:13" pos:end="73:23">

            <return pos:start="73:13" pos:end="73:23">return <expr pos:start="73:20" pos:end="73:22"><name pos:start="73:20" pos:end="73:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:47"><expr pos:start="75:9" pos:end="75:46"><name pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:15">picture</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:26">pict_type</name></name> <operator pos:start="75:28" pos:end="75:28">=</operator> <name pos:start="75:30" pos:end="75:46">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:31"><expr pos:start="77:9" pos:end="77:30"><name pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:15">picture</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:26">key_frame</name></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <literal type="number" pos:start="77:30" pos:end="77:30">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:37"><expr pos:start="83:5" pos:end="83:36"><name pos:start="83:5" pos:end="83:17"><name pos:start="83:5" pos:end="83:7">ctx</name><operator pos:start="83:8" pos:end="83:9">-&gt;</operator><name pos:start="83:10" pos:end="83:17">buf_size</name></name> <operator pos:start="83:19" pos:end="83:19">=</operator> <name pos:start="83:21" pos:end="83:28">buf_size</name> <operator pos:start="83:30" pos:end="83:30">-</operator> <literal type="number" pos:start="83:32" pos:end="83:36">0x280</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:27"><expr pos:start="85:5" pos:end="85:26"><name pos:start="85:5" pos:end="85:12"><name pos:start="85:5" pos:end="85:7">ctx</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:12">buf</name></name> <operator pos:start="85:14" pos:end="85:14">=</operator> <name pos:start="85:16" pos:end="85:18">buf</name> <operator pos:start="85:20" pos:end="85:20">+</operator> <literal type="number" pos:start="85:22" pos:end="85:26">0x280</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:76"><expr pos:start="87:5" pos:end="87:75"><call pos:start="87:5" pos:end="87:75"><name pos:start="87:5" pos:end="87:19"><name pos:start="87:5" pos:end="87:9">avctx</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:19">execute2</name></name><argument_list pos:start="87:20" pos:end="87:75">(<argument pos:start="87:21" pos:end="87:25"><expr pos:start="87:21" pos:end="87:25"><name pos:start="87:21" pos:end="87:25">avctx</name></expr></argument>, <argument pos:start="87:28" pos:end="87:43"><expr pos:start="87:28" pos:end="87:43"><name pos:start="87:28" pos:end="87:43">dnxhd_decode_row</name></expr></argument>, <argument pos:start="87:46" pos:end="87:52"><expr pos:start="87:46" pos:end="87:52"><name pos:start="87:46" pos:end="87:52">picture</name></expr></argument>, <argument pos:start="87:55" pos:end="87:58"><expr pos:start="87:55" pos:end="87:58"><name pos:start="87:55" pos:end="87:58">NULL</name></expr></argument>, <argument pos:start="87:61" pos:end="87:74"><expr pos:start="87:61" pos:end="87:74"><name pos:start="87:61" pos:end="87:74"><name pos:start="87:61" pos:end="87:63">ctx</name><operator pos:start="87:64" pos:end="87:65">-&gt;</operator><name pos:start="87:66" pos:end="87:74">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="91:5" pos:end="101:5"><if pos:start="91:5" pos:end="101:5">if <condition pos:start="91:8" pos:end="91:49">(<expr pos:start="91:9" pos:end="91:48"><name pos:start="91:9" pos:end="91:19">first_field</name> <operator pos:start="91:21" pos:end="91:22">&amp;&amp;</operator> <name pos:start="91:24" pos:end="91:48"><name pos:start="91:24" pos:end="91:30">picture</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:48">interlaced_frame</name></name></expr>)</condition> <block pos:start="91:51" pos:end="101:5">{<block_content pos:start="93:9" pos:end="99:32">

        <expr_stmt pos:start="93:9" pos:end="93:53"><expr pos:start="93:9" pos:end="93:52"><name pos:start="93:9" pos:end="93:11">buf</name>      <operator pos:start="93:18" pos:end="93:19">+=</operator> <name pos:start="93:21" pos:end="93:52"><name pos:start="93:21" pos:end="93:23">ctx</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:34">cid_table</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:52">coding_unit_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:53"><expr pos:start="95:9" pos:end="95:52"><name pos:start="95:9" pos:end="95:16">buf_size</name> <operator pos:start="95:18" pos:end="95:19">-=</operator> <name pos:start="95:21" pos:end="95:52"><name pos:start="95:21" pos:end="95:23">ctx</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:34">cid_table</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:52">coding_unit_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:24"><expr pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:19">first_field</name> <operator pos:start="97:21" pos:end="97:21">=</operator> <literal type="number" pos:start="97:23" pos:end="97:23">0</literal></expr>;</expr_stmt>

        <goto pos:start="99:9" pos:end="99:32">goto <name pos:start="99:14" pos:end="99:31">decode_coding_unit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:12"><expr pos:start="105:5" pos:end="105:11"><name pos:start="105:5" pos:end="105:7">ret</name> <operator pos:start="105:9" pos:end="105:9">=</operator> <literal type="number" pos:start="105:11" pos:end="105:11">0</literal></expr>;</expr_stmt>

    <for pos:start="107:5" pos:end="113:5">for <control pos:start="107:9" pos:end="107:45">(<init pos:start="107:10" pos:end="107:15"><expr pos:start="107:10" pos:end="107:14"><name pos:start="107:10" pos:end="107:10">i</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <literal type="number" pos:start="107:14" pos:end="107:14">0</literal></expr>;</init> <condition pos:start="107:17" pos:end="107:40"><expr pos:start="107:17" pos:end="107:39"><name pos:start="107:17" pos:end="107:17">i</name> <operator pos:start="107:19" pos:end="107:19">&lt;</operator> <name pos:start="107:21" pos:end="107:39"><name pos:start="107:21" pos:end="107:25">avctx</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:39">thread_count</name></name></expr>;</condition> <incr pos:start="107:42" pos:end="107:44"><expr pos:start="107:42" pos:end="107:44"><name pos:start="107:42" pos:end="107:42">i</name><operator pos:start="107:43" pos:end="107:44">++</operator></expr></incr>)</control> <block pos:start="107:47" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:32">

        <expr_stmt pos:start="109:9" pos:end="109:35"><expr pos:start="109:9" pos:end="109:34"><name pos:start="109:9" pos:end="109:11">ret</name> <operator pos:start="109:13" pos:end="109:14">+=</operator> <name pos:start="109:16" pos:end="109:27"><name pos:start="109:16" pos:end="109:18">ctx</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:24">rows</name><index pos:start="109:25" pos:end="109:27">[<expr pos:start="109:26" pos:end="109:26"><name pos:start="109:26" pos:end="109:26">i</name></expr>]</index></name><operator pos:start="109:28" pos:end="109:28">.</operator><name pos:start="109:29" pos:end="109:34">errors</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:32"><expr pos:start="111:9" pos:end="111:31"><name pos:start="111:9" pos:end="111:20"><name pos:start="111:9" pos:end="111:11">ctx</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:17">rows</name><index pos:start="111:18" pos:end="111:20">[<expr pos:start="111:19" pos:end="111:19"><name pos:start="111:19" pos:end="111:19">i</name></expr>]</index></name><operator pos:start="111:21" pos:end="111:21">.</operator><name pos:start="111:22" pos:end="111:27">errors</name> <operator pos:start="111:29" pos:end="111:29">=</operator> <literal type="number" pos:start="111:31" pos:end="111:31">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="117:5" pos:end="123:5"><if pos:start="117:5" pos:end="123:5">if <condition pos:start="117:8" pos:end="117:12">(<expr pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:11">ret</name></expr>)</condition> <block pos:start="117:14" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:35">

        <expr_stmt pos:start="119:9" pos:end="119:72"><expr pos:start="119:9" pos:end="119:71"><call pos:start="119:9" pos:end="119:71"><name pos:start="119:9" pos:end="119:14">av_log</name><argument_list pos:start="119:15" pos:end="119:71">(<argument pos:start="119:16" pos:end="119:25"><expr pos:start="119:16" pos:end="119:25"><name pos:start="119:16" pos:end="119:25"><name pos:start="119:16" pos:end="119:18">ctx</name><operator pos:start="119:19" pos:end="119:20">-&gt;</operator><name pos:start="119:21" pos:end="119:25">avctx</name></name></expr></argument>, <argument pos:start="119:28" pos:end="119:39"><expr pos:start="119:28" pos:end="119:39"><name pos:start="119:28" pos:end="119:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:42" pos:end="119:65"><expr pos:start="119:42" pos:end="119:65"><literal type="string" pos:start="119:42" pos:end="119:65">"%d lines with errors\n"</literal></expr></argument>, <argument pos:start="119:68" pos:end="119:70"><expr pos:start="119:68" pos:end="119:70"><name pos:start="119:68" pos:end="119:70">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="121:9" pos:end="121:35">return <expr pos:start="121:16" pos:end="121:34"><name pos:start="121:16" pos:end="121:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:19"><expr pos:start="127:5" pos:end="127:18"><operator pos:start="127:5" pos:end="127:5">*</operator><name pos:start="127:6" pos:end="127:14">got_frame</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">1</literal></expr>;</expr_stmt>

    <return pos:start="129:5" pos:end="129:23">return <expr pos:start="129:12" pos:end="129:22"><name pos:start="129:12" pos:end="129:22"><name pos:start="129:12" pos:end="129:16">avpkt</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:22">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
