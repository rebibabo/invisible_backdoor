<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/181.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">bdrv_pwrite</name><parameter_list pos:start="1:16" pos:end="3:43">(<parameter pos:start="1:17" pos:end="1:36"><decl pos:start="1:17" pos:end="1:36"><type pos:start="1:17" pos:end="1:36"><name pos:start="1:17" pos:end="1:32">BlockDriverState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:36">bs</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:52"><name pos:start="1:39" pos:end="1:45">int64_t</name></type> <name pos:start="1:47" pos:end="1:52">offset</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:31"><decl pos:start="3:17" pos:end="3:31"><type pos:start="3:17" pos:end="3:31"><specifier pos:start="3:17" pos:end="3:21">const</specifier> <name pos:start="3:23" pos:end="3:26">void</name> <modifier pos:start="3:28" pos:end="3:28">*</modifier></type><name pos:start="3:29" pos:end="3:31">buf</name></decl></parameter>, <parameter pos:start="3:34" pos:end="3:42"><decl pos:start="3:34" pos:end="3:42"><type pos:start="3:34" pos:end="3:42"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:42">bytes</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="31:1">{<block_content pos:start="7:5" pos:end="29:43">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">QEMUIOVector</name></type> <name pos:start="7:18" pos:end="7:21">qiov</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="15:6"><decl pos:start="9:5" pos:end="15:5"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:16">iovec</name></name></type> <name pos:start="9:18" pos:end="9:20">iov</name> <init pos:start="9:22" pos:end="15:5">= <expr pos:start="9:24" pos:end="15:5"><block pos:start="9:24" pos:end="15:5">{

        <expr pos:start="11:9" pos:end="11:34"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:17">iov_base</name>   <operator pos:start="11:21" pos:end="11:21">=</operator> <operator pos:start="11:23" pos:end="11:23">(</operator><name pos:start="11:24" pos:end="11:27">void</name> <operator pos:start="11:29" pos:end="11:29">*</operator><operator pos:start="11:30" pos:end="11:30">)</operator> <name pos:start="11:32" pos:end="11:34">buf</name></expr>,

        <expr pos:start="13:9" pos:end="13:27"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:16">iov_len</name>    <operator pos:start="13:21" pos:end="13:21">=</operator> <name pos:start="13:23" pos:end="13:27">bytes</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:13">bytes</name> <operator pos:start="19:15" pos:end="19:15">&lt;</operator> <literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr>)</condition> <block pos:start="19:20" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:23">

        <return pos:start="21:9" pos:end="21:23">return <expr pos:start="21:16" pos:end="21:22"><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><call pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:28">qemu_iovec_init_external</name><argument_list pos:start="27:29" pos:end="27:44">(<argument pos:start="27:30" pos:end="27:34"><expr pos:start="27:30" pos:end="27:34"><operator pos:start="27:30" pos:end="27:30">&amp;</operator><name pos:start="27:31" pos:end="27:34">qiov</name></expr></argument>, <argument pos:start="27:37" pos:end="27:40"><expr pos:start="27:37" pos:end="27:40"><operator pos:start="27:37" pos:end="27:37">&amp;</operator><name pos:start="27:38" pos:end="27:40">iov</name></expr></argument>, <argument pos:start="27:43" pos:end="27:43"><expr pos:start="27:43" pos:end="27:43"><literal type="number" pos:start="27:43" pos:end="27:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="29:5" pos:end="29:43">return <expr pos:start="29:12" pos:end="29:42"><call pos:start="29:12" pos:end="29:42"><name pos:start="29:12" pos:end="29:23">bdrv_pwritev</name><argument_list pos:start="29:24" pos:end="29:42">(<argument pos:start="29:25" pos:end="29:26"><expr pos:start="29:25" pos:end="29:26"><name pos:start="29:25" pos:end="29:26">bs</name></expr></argument>, <argument pos:start="29:29" pos:end="29:34"><expr pos:start="29:29" pos:end="29:34"><name pos:start="29:29" pos:end="29:34">offset</name></expr></argument>, <argument pos:start="29:37" pos:end="29:41"><expr pos:start="29:37" pos:end="29:41"><operator pos:start="29:37" pos:end="29:37">&amp;</operator><name pos:start="29:38" pos:end="29:41">qiov</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
