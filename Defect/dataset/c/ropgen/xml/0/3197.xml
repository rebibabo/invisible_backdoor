<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3197.c" pos:tabs="8"><function pos:start="1:1" pos:end="599:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">asf_write_header1</name><parameter_list pos:start="1:29" pos:end="3:53">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:66"><name pos:start="1:50" pos:end="1:56">int64_t</name></type> <name pos:start="1:58" pos:end="1:66">file_size</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:52"><decl pos:start="3:30" pos:end="3:52"><type pos:start="3:30" pos:end="3:52"><name pos:start="3:30" pos:end="3:36">int64_t</name></type> <name pos:start="3:38" pos:end="3:52">data_chunk_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="599:1">{<block_content pos:start="7:5" pos:end="597:13">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">ASFContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">asf</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">AVDictionaryEntry</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:30"><name pos:start="11:24" pos:end="11:27">tags</name><index pos:start="11:28" pos:end="11:30">[<expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">5</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:75"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">header_size</name></decl>, <decl pos:start="13:22" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:22">n</name></decl>, <decl pos:start="13:25" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:25" pos:end="13:34">extra_size</name></decl>, <decl pos:start="13:37" pos:end="13:47"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:37" pos:end="13:47">extra_size2</name></decl>, <decl pos:start="13:50" pos:end="13:63"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:50" pos:end="13:63">wav_extra_size</name></decl>, <decl pos:start="13:66" pos:end="13:74"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:66" pos:end="13:74">file_time</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">has_title</name></decl>, <decl pos:start="15:20" pos:end="15:39"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:20" pos:end="15:35">has_aspect_ratio</name> <init pos:start="15:37" pos:end="15:39">= <expr pos:start="15:39" pos:end="15:39"><literal type="number" pos:start="15:39" pos:end="15:39">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:22">metadata_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:18">AVCodecContext</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:23">enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:41"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int64_t</name></type> <name pos:start="21:13" pos:end="21:25">header_offset</name></decl>, <decl pos:start="21:28" pos:end="21:34"><type ref="prev" pos:start="21:5" pos:end="21:11"/><name pos:start="21:28" pos:end="21:34">cur_pos</name></decl>, <decl pos:start="21:37" pos:end="21:40"><type ref="prev" pos:start="21:5" pos:end="21:11"/><name pos:start="21:37" pos:end="21:40">hpos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:17"><decl pos:start="23:5" pos:end="23:16"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:16">bit_rate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">int64_t</name></type> <name pos:start="25:13" pos:end="25:20">duration</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:63"><expr pos:start="29:5" pos:end="29:62"><call pos:start="29:5" pos:end="29:62"><name pos:start="29:5" pos:end="29:20">ff_metadata_conv</name><argument_list pos:start="29:21" pos:end="29:62">(<argument pos:start="29:22" pos:end="29:33"><expr pos:start="29:22" pos:end="29:33"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:33"><name pos:start="29:23" pos:end="29:23">s</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:33">metadata</name></name></expr></argument>, <argument pos:start="29:36" pos:end="29:55"><expr pos:start="29:36" pos:end="29:55"><name pos:start="29:36" pos:end="29:55">ff_asf_metadata_conv</name></expr></argument>, <argument pos:start="29:58" pos:end="29:61"><expr pos:start="29:58" pos:end="29:61"><name pos:start="29:58" pos:end="29:61">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:57"><expr pos:start="33:5" pos:end="33:56"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:8">tags</name><index pos:start="33:9" pos:end="33:11">[<expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">0</literal></expr>]</index></name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:56"><name pos:start="33:15" pos:end="33:25">av_dict_get</name><argument_list pos:start="33:26" pos:end="33:56">(<argument pos:start="33:27" pos:end="33:37"><expr pos:start="33:27" pos:end="33:37"><name pos:start="33:27" pos:end="33:37"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:37">metadata</name></name></expr></argument>, <argument pos:start="33:40" pos:end="33:46"><expr pos:start="33:40" pos:end="33:46"><literal type="string" pos:start="33:40" pos:end="33:46">"title"</literal></expr></argument>, <argument pos:start="33:49" pos:end="33:52"><expr pos:start="33:49" pos:end="33:52"><name pos:start="33:49" pos:end="33:52">NULL</name></expr></argument>, <argument pos:start="33:55" pos:end="33:55"><expr pos:start="33:55" pos:end="33:55"><literal type="number" pos:start="33:55" pos:end="33:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:58"><expr pos:start="35:5" pos:end="35:57"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:8">tags</name><index pos:start="35:9" pos:end="35:11">[<expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">1</literal></expr>]</index></name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:57"><name pos:start="35:15" pos:end="35:25">av_dict_get</name><argument_list pos:start="35:26" pos:end="35:57">(<argument pos:start="35:27" pos:end="35:37"><expr pos:start="35:27" pos:end="35:37"><name pos:start="35:27" pos:end="35:37"><name pos:start="35:27" pos:end="35:27">s</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:37">metadata</name></name></expr></argument>, <argument pos:start="35:40" pos:end="35:47"><expr pos:start="35:40" pos:end="35:47"><literal type="string" pos:start="35:40" pos:end="35:47">"author"</literal></expr></argument>, <argument pos:start="35:50" pos:end="35:53"><expr pos:start="35:50" pos:end="35:53"><name pos:start="35:50" pos:end="35:53">NULL</name></expr></argument>, <argument pos:start="35:56" pos:end="35:56"><expr pos:start="35:56" pos:end="35:56"><literal type="number" pos:start="35:56" pos:end="35:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:61"><expr pos:start="37:5" pos:end="37:60"><name pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:8">tags</name><index pos:start="37:9" pos:end="37:11">[<expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">2</literal></expr>]</index></name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:60"><name pos:start="37:15" pos:end="37:25">av_dict_get</name><argument_list pos:start="37:26" pos:end="37:60">(<argument pos:start="37:27" pos:end="37:37"><expr pos:start="37:27" pos:end="37:37"><name pos:start="37:27" pos:end="37:37"><name pos:start="37:27" pos:end="37:27">s</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:37">metadata</name></name></expr></argument>, <argument pos:start="37:40" pos:end="37:50"><expr pos:start="37:40" pos:end="37:50"><literal type="string" pos:start="37:40" pos:end="37:50">"copyright"</literal></expr></argument>, <argument pos:start="37:53" pos:end="37:56"><expr pos:start="37:53" pos:end="37:56"><name pos:start="37:53" pos:end="37:56">NULL</name></expr></argument>, <argument pos:start="37:59" pos:end="37:59"><expr pos:start="37:59" pos:end="37:59"><literal type="number" pos:start="37:59" pos:end="37:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:59"><expr pos:start="39:5" pos:end="39:58"><name pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:8">tags</name><index pos:start="39:9" pos:end="39:11">[<expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">3</literal></expr>]</index></name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:58"><name pos:start="39:15" pos:end="39:25">av_dict_get</name><argument_list pos:start="39:26" pos:end="39:58">(<argument pos:start="39:27" pos:end="39:37"><expr pos:start="39:27" pos:end="39:37"><name pos:start="39:27" pos:end="39:37"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:37">metadata</name></name></expr></argument>, <argument pos:start="39:40" pos:end="39:48"><expr pos:start="39:40" pos:end="39:48"><literal type="string" pos:start="39:40" pos:end="39:48">"comment"</literal></expr></argument>, <argument pos:start="39:51" pos:end="39:54"><expr pos:start="39:51" pos:end="39:54"><name pos:start="39:51" pos:end="39:54">NULL</name></expr></argument>, <argument pos:start="39:57" pos:end="39:57"><expr pos:start="39:57" pos:end="39:57"><literal type="number" pos:start="39:57" pos:end="39:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:58"><expr pos:start="41:5" pos:end="41:57"><name pos:start="41:5" pos:end="41:11"><name pos:start="41:5" pos:end="41:8">tags</name><index pos:start="41:9" pos:end="41:11">[<expr pos:start="41:10" pos:end="41:10"><literal type="number" pos:start="41:10" pos:end="41:10">4</literal></expr>]</index></name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:57"><name pos:start="41:15" pos:end="41:25">av_dict_get</name><argument_list pos:start="41:26" pos:end="41:57">(<argument pos:start="41:27" pos:end="41:37"><expr pos:start="41:27" pos:end="41:37"><name pos:start="41:27" pos:end="41:37"><name pos:start="41:27" pos:end="41:27">s</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:37">metadata</name></name></expr></argument>, <argument pos:start="41:40" pos:end="41:47"><expr pos:start="41:40" pos:end="41:47"><literal type="string" pos:start="41:40" pos:end="41:47">"rating"</literal></expr></argument>, <argument pos:start="41:50" pos:end="41:53"><expr pos:start="41:50" pos:end="41:53"><name pos:start="41:50" pos:end="41:53">NULL</name></expr></argument>, <argument pos:start="41:56" pos:end="41:56"><expr pos:start="41:56" pos:end="41:56"><literal type="number" pos:start="41:56" pos:end="41:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:58"><expr pos:start="45:5" pos:end="45:57"><name pos:start="45:5" pos:end="45:12">duration</name>       <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:34"><name pos:start="45:22" pos:end="45:24">asf</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:34">duration</name></name> <operator pos:start="45:36" pos:end="45:36">+</operator> <name pos:start="45:38" pos:end="45:49">PREROLL_TIME</name> <operator pos:start="45:51" pos:end="45:51">*</operator> <literal type="number" pos:start="45:53" pos:end="45:57">10000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:73"><expr pos:start="47:5" pos:end="47:72"><name pos:start="47:5" pos:end="47:13">has_title</name>      <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:28"><name pos:start="47:22" pos:end="47:25">tags</name><index pos:start="47:26" pos:end="47:28">[<expr pos:start="47:27" pos:end="47:27"><literal type="number" pos:start="47:27" pos:end="47:27">0</literal></expr>]</index></name> <operator pos:start="47:30" pos:end="47:31">||</operator> <name pos:start="47:33" pos:end="47:39"><name pos:start="47:33" pos:end="47:36">tags</name><index pos:start="47:37" pos:end="47:39">[<expr pos:start="47:38" pos:end="47:38"><literal type="number" pos:start="47:38" pos:end="47:38">1</literal></expr>]</index></name> <operator pos:start="47:41" pos:end="47:42">||</operator> <name pos:start="47:44" pos:end="47:50"><name pos:start="47:44" pos:end="47:47">tags</name><index pos:start="47:48" pos:end="47:50">[<expr pos:start="47:49" pos:end="47:49"><literal type="number" pos:start="47:49" pos:end="47:49">2</literal></expr>]</index></name> <operator pos:start="47:52" pos:end="47:53">||</operator> <name pos:start="47:55" pos:end="47:61"><name pos:start="47:55" pos:end="47:58">tags</name><index pos:start="47:59" pos:end="47:61">[<expr pos:start="47:60" pos:end="47:60"><literal type="number" pos:start="47:60" pos:end="47:60">3</literal></expr>]</index></name> <operator pos:start="47:63" pos:end="47:64">||</operator> <name pos:start="47:66" pos:end="47:72"><name pos:start="47:66" pos:end="47:69">tags</name><index pos:start="47:70" pos:end="47:72">[<expr pos:start="47:71" pos:end="47:71"><literal type="number" pos:start="47:71" pos:end="47:71">4</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:48"><expr pos:start="49:5" pos:end="49:47"><name pos:start="49:5" pos:end="49:18">metadata_count</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <call pos:start="49:22" pos:end="49:47"><name pos:start="49:22" pos:end="49:34">av_dict_count</name><argument_list pos:start="49:35" pos:end="49:47">(<argument pos:start="49:36" pos:end="49:46"><expr pos:start="49:36" pos:end="49:46"><name pos:start="49:36" pos:end="49:46"><name pos:start="49:36" pos:end="49:36">s</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:46">metadata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:17"><expr pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:12">bit_rate</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</expr_stmt>

    <for pos:start="55:5" pos:end="75:5">for <control pos:start="55:9" pos:end="55:39">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">n</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:34"><expr pos:start="55:17" pos:end="55:33"><name pos:start="55:17" pos:end="55:17">n</name> <operator pos:start="55:19" pos:end="55:19">&lt;</operator> <name pos:start="55:21" pos:end="55:33"><name pos:start="55:21" pos:end="55:21">s</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:33">nb_streams</name></name></expr>;</condition> <incr pos:start="55:36" pos:end="55:38"><expr pos:start="55:36" pos:end="55:38"><name pos:start="55:36" pos:end="55:36">n</name><operator pos:start="55:37" pos:end="55:38">++</operator></expr></incr>)</control> <block pos:start="55:41" pos:end="75:5">{<block_content pos:start="57:9" pos:end="73:31">

        <expr_stmt pos:start="57:9" pos:end="57:35"><expr pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:11">enc</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:27"><name pos:start="57:15" pos:end="57:15">s</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:24">streams</name><index pos:start="57:25" pos:end="57:27">[<expr pos:start="57:26" pos:end="57:26"><name pos:start="57:26" pos:end="57:26">n</name></expr>]</index></name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:34">codec</name></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:56"><expr pos:start="61:9" pos:end="61:55"><call pos:start="61:9" pos:end="61:55"><name pos:start="61:9" pos:end="61:27">avpriv_set_pts_info</name><argument_list pos:start="61:28" pos:end="61:55">(<argument pos:start="61:29" pos:end="61:41"><expr pos:start="61:29" pos:end="61:41"><name pos:start="61:29" pos:end="61:41"><name pos:start="61:29" pos:end="61:29">s</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:38">streams</name><index pos:start="61:39" pos:end="61:41">[<expr pos:start="61:40" pos:end="61:40"><name pos:start="61:40" pos:end="61:40">n</name></expr>]</index></name></expr></argument>, <argument pos:start="61:44" pos:end="61:45"><expr pos:start="61:44" pos:end="61:45"><literal type="number" pos:start="61:44" pos:end="61:45">32</literal></expr></argument>, <argument pos:start="61:48" pos:end="61:48"><expr pos:start="61:48" pos:end="61:48"><literal type="number" pos:start="61:48" pos:end="61:48">1</literal></expr></argument>, <argument pos:start="61:51" pos:end="61:54"><expr pos:start="61:51" pos:end="61:54"><literal type="number" pos:start="61:51" pos:end="61:54">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="61:58" pos:end="61:79">/* 32 bit pts in ms */</comment>



        <expr_stmt pos:start="65:9" pos:end="65:34"><expr pos:start="65:9" pos:end="65:33"><name pos:start="65:9" pos:end="65:16">bit_rate</name> <operator pos:start="65:18" pos:end="65:19">+=</operator> <name pos:start="65:21" pos:end="65:33"><name pos:start="65:21" pos:end="65:23">enc</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:33">bit_rate</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="73:31"><if pos:start="67:9" pos:end="73:31">if <condition pos:start="67:12" pos:end="71:48">(   <expr pos:start="67:16" pos:end="71:47"><name pos:start="67:16" pos:end="67:30"><name pos:start="67:16" pos:end="67:18">enc</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:30">codec_type</name></name> <operator pos:start="67:32" pos:end="67:33">==</operator> <name pos:start="67:35" pos:end="67:52">AVMEDIA_TYPE_VIDEO</name>

            <operator pos:start="69:13" pos:end="69:14">&amp;&amp;</operator> <name pos:start="69:16" pos:end="69:43"><name pos:start="69:16" pos:end="69:18">enc</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:39">sample_aspect_ratio</name><operator pos:start="69:40" pos:end="69:40">.</operator><name pos:start="69:41" pos:end="69:43">num</name></name> <operator pos:start="69:45" pos:end="69:45">&gt;</operator> <literal type="number" pos:start="69:47" pos:end="69:47">0</literal>

            <operator pos:start="71:13" pos:end="71:14">&amp;&amp;</operator> <name pos:start="71:16" pos:end="71:43"><name pos:start="71:16" pos:end="71:18">enc</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:39">sample_aspect_ratio</name><operator pos:start="71:40" pos:end="71:40">.</operator><name pos:start="71:41" pos:end="71:43">den</name></name> <operator pos:start="71:45" pos:end="71:45">&gt;</operator> <literal type="number" pos:start="71:47" pos:end="71:47">0</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:31"><block_content pos:start="73:13" pos:end="73:31">

            <expr_stmt pos:start="73:13" pos:end="73:31"><expr pos:start="73:13" pos:end="73:30"><name pos:start="73:13" pos:end="73:28">has_aspect_ratio</name><operator pos:start="73:29" pos:end="73:30">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="79:5" pos:end="83:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:25">(<expr pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:11">asf</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:24">is_streamed</name></name></expr>)</condition> <block pos:start="79:27" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:39">

        <expr_stmt pos:start="81:9" pos:end="81:39"><expr pos:start="81:9" pos:end="81:38"><call pos:start="81:9" pos:end="81:38"><name pos:start="81:9" pos:end="81:17">put_chunk</name><argument_list pos:start="81:18" pos:end="81:38">(<argument pos:start="81:19" pos:end="81:19"><expr pos:start="81:19" pos:end="81:19"><name pos:start="81:19" pos:end="81:19">s</name></expr></argument>, <argument pos:start="81:22" pos:end="81:27"><expr pos:start="81:22" pos:end="81:27"><literal type="number" pos:start="81:22" pos:end="81:27">0x4824</literal></expr></argument>, <argument pos:start="81:30" pos:end="81:30"><expr pos:start="81:30" pos:end="81:30"><literal type="number" pos:start="81:30" pos:end="81:30">0</literal></expr></argument>, <argument pos:start="81:33" pos:end="81:37"><expr pos:start="81:33" pos:end="81:37"><literal type="number" pos:start="81:33" pos:end="81:37">0xc00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="81:41" pos:end="81:92">/* start of stream (length will be patched later) */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:36"><expr pos:start="87:5" pos:end="87:35"><call pos:start="87:5" pos:end="87:35"><name pos:start="87:5" pos:end="87:15">ff_put_guid</name><argument_list pos:start="87:16" pos:end="87:35">(<argument pos:start="87:17" pos:end="87:18"><expr pos:start="87:17" pos:end="87:18"><name pos:start="87:17" pos:end="87:18">pb</name></expr></argument>, <argument pos:start="87:21" pos:end="87:34"><expr pos:start="87:21" pos:end="87:34"><operator pos:start="87:21" pos:end="87:21">&amp;</operator><name pos:start="87:22" pos:end="87:34">ff_asf_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:22"><expr pos:start="89:5" pos:end="89:21"><call pos:start="89:5" pos:end="89:21"><name pos:start="89:5" pos:end="89:13">avio_wl64</name><argument_list pos:start="89:14" pos:end="89:21">(<argument pos:start="89:15" pos:end="89:16"><expr pos:start="89:15" pos:end="89:16"><name pos:start="89:15" pos:end="89:16">pb</name></expr></argument>, <argument pos:start="89:19" pos:end="89:20"><expr pos:start="89:19" pos:end="89:20"><operator pos:start="89:19" pos:end="89:19">-</operator><literal type="number" pos:start="89:20" pos:end="89:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="89:24" pos:end="89:65">/* header length, will be patched after */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:68"><expr pos:start="91:5" pos:end="91:67"><call pos:start="91:5" pos:end="91:67"><name pos:start="91:5" pos:end="91:13">avio_wl32</name><argument_list pos:start="91:14" pos:end="91:67">(<argument pos:start="91:15" pos:end="91:16"><expr pos:start="91:15" pos:end="91:16"><name pos:start="91:15" pos:end="91:16">pb</name></expr></argument>, <argument pos:start="91:19" pos:end="91:66"><expr pos:start="91:19" pos:end="91:66"><literal type="number" pos:start="91:19" pos:end="91:21">3</literal> <operator pos:start="91:21" pos:end="91:21">+</operator> <name pos:start="91:23" pos:end="91:31">has_title</name> <operator pos:start="91:33" pos:end="91:33">+</operator> <operator pos:start="91:35" pos:end="91:35">!</operator><operator pos:start="91:36" pos:end="91:36">!</operator><name pos:start="91:37" pos:end="91:50">metadata_count</name> <operator pos:start="91:52" pos:end="91:52">+</operator> <name pos:start="91:54" pos:end="91:66"><name pos:start="91:54" pos:end="91:54">s</name><operator pos:start="91:55" pos:end="91:56">-&gt;</operator><name pos:start="91:57" pos:end="91:66">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="91:70" pos:end="91:101">/* number of chunks in header */</comment>

    <expr_stmt pos:start="93:5" pos:end="93:19"><expr pos:start="93:5" pos:end="93:18"><call pos:start="93:5" pos:end="93:18"><name pos:start="93:5" pos:end="93:11">avio_w8</name><argument_list pos:start="93:12" pos:end="93:18">(<argument pos:start="93:13" pos:end="93:14"><expr pos:start="93:13" pos:end="93:14"><name pos:start="93:13" pos:end="93:14">pb</name></expr></argument>, <argument pos:start="93:17" pos:end="93:17"><expr pos:start="93:17" pos:end="93:17"><literal type="number" pos:start="93:17" pos:end="93:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="93:21" pos:end="93:29">/* ??? */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:19"><expr pos:start="95:5" pos:end="95:18"><call pos:start="95:5" pos:end="95:18"><name pos:start="95:5" pos:end="95:11">avio_w8</name><argument_list pos:start="95:12" pos:end="95:18">(<argument pos:start="95:13" pos:end="95:14"><expr pos:start="95:13" pos:end="95:14"><name pos:start="95:13" pos:end="95:14">pb</name></expr></argument>, <argument pos:start="95:17" pos:end="95:17"><expr pos:start="95:17" pos:end="95:17"><literal type="number" pos:start="95:17" pos:end="95:17">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="95:21" pos:end="95:29">/* ??? */</comment>



    <comment type="block" pos:start="99:5" pos:end="99:21">/* file header */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:34"><expr pos:start="101:5" pos:end="101:33"><name pos:start="101:5" pos:end="101:17">header_offset</name> <operator pos:start="101:19" pos:end="101:19">=</operator> <call pos:start="101:21" pos:end="101:33"><name pos:start="101:21" pos:end="101:29">avio_tell</name><argument_list pos:start="101:30" pos:end="101:33">(<argument pos:start="101:31" pos:end="101:32"><expr pos:start="101:31" pos:end="101:32"><name pos:start="101:31" pos:end="101:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:56"><expr pos:start="103:5" pos:end="103:55"><name pos:start="103:5" pos:end="103:8">hpos</name>          <operator pos:start="103:19" pos:end="103:19">=</operator> <call pos:start="103:21" pos:end="103:55"><name pos:start="103:21" pos:end="103:30">put_header</name><argument_list pos:start="103:31" pos:end="103:55">(<argument pos:start="103:32" pos:end="103:33"><expr pos:start="103:32" pos:end="103:33"><name pos:start="103:32" pos:end="103:33">pb</name></expr></argument>, <argument pos:start="103:36" pos:end="103:54"><expr pos:start="103:36" pos:end="103:54"><operator pos:start="103:36" pos:end="103:36">&amp;</operator><name pos:start="103:37" pos:end="103:54">ff_asf_file_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:37"><expr pos:start="105:5" pos:end="105:36"><call pos:start="105:5" pos:end="105:36"><name pos:start="105:5" pos:end="105:15">ff_put_guid</name><argument_list pos:start="105:16" pos:end="105:36">(<argument pos:start="105:17" pos:end="105:18"><expr pos:start="105:17" pos:end="105:18"><name pos:start="105:17" pos:end="105:18">pb</name></expr></argument>, <argument pos:start="105:21" pos:end="105:35"><expr pos:start="105:21" pos:end="105:35"><operator pos:start="105:21" pos:end="105:21">&amp;</operator><name pos:start="105:22" pos:end="105:35">ff_asf_my_guid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:29"><expr pos:start="107:5" pos:end="107:28"><call pos:start="107:5" pos:end="107:28"><name pos:start="107:5" pos:end="107:13">avio_wl64</name><argument_list pos:start="107:14" pos:end="107:28">(<argument pos:start="107:15" pos:end="107:16"><expr pos:start="107:15" pos:end="107:16"><name pos:start="107:15" pos:end="107:16">pb</name></expr></argument>, <argument pos:start="107:19" pos:end="107:27"><expr pos:start="107:19" pos:end="107:27"><name pos:start="107:19" pos:end="107:27">file_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:18"><expr pos:start="109:5" pos:end="109:17"><name pos:start="109:5" pos:end="109:13">file_time</name> <operator pos:start="109:15" pos:end="109:15">=</operator> <literal type="number" pos:start="109:17" pos:end="109:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:48"><expr pos:start="111:5" pos:end="111:47"><call pos:start="111:5" pos:end="111:47"><name pos:start="111:5" pos:end="111:13">avio_wl64</name><argument_list pos:start="111:14" pos:end="111:47">(<argument pos:start="111:15" pos:end="111:16"><expr pos:start="111:15" pos:end="111:16"><name pos:start="111:15" pos:end="111:16">pb</name></expr></argument>, <argument pos:start="111:19" pos:end="111:46"><expr pos:start="111:19" pos:end="111:46"><call pos:start="111:19" pos:end="111:46"><name pos:start="111:19" pos:end="111:35">unix_to_file_time</name><argument_list pos:start="111:36" pos:end="111:46">(<argument pos:start="111:37" pos:end="111:45"><expr pos:start="111:37" pos:end="111:45"><name pos:start="111:37" pos:end="111:45">file_time</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:35"><expr pos:start="113:5" pos:end="113:34"><call pos:start="113:5" pos:end="113:34"><name pos:start="113:5" pos:end="113:13">avio_wl64</name><argument_list pos:start="113:14" pos:end="113:34">(<argument pos:start="113:15" pos:end="113:16"><expr pos:start="113:15" pos:end="113:16"><name pos:start="113:15" pos:end="113:16">pb</name></expr></argument>, <argument pos:start="113:19" pos:end="113:33"><expr pos:start="113:19" pos:end="113:33"><name pos:start="113:19" pos:end="113:33"><name pos:start="113:19" pos:end="113:21">asf</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:33">nb_packets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="113:37" pos:end="113:59">/* number of packets */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:28"><expr pos:start="115:5" pos:end="115:27"><call pos:start="115:5" pos:end="115:27"><name pos:start="115:5" pos:end="115:13">avio_wl64</name><argument_list pos:start="115:14" pos:end="115:27">(<argument pos:start="115:15" pos:end="115:16"><expr pos:start="115:15" pos:end="115:16"><name pos:start="115:15" pos:end="115:16">pb</name></expr></argument>, <argument pos:start="115:19" pos:end="115:26"><expr pos:start="115:19" pos:end="115:26"><name pos:start="115:19" pos:end="115:26">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="115:30" pos:end="115:66">/* end time stamp (in 100ns units) */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:33"><expr pos:start="117:5" pos:end="117:32"><call pos:start="117:5" pos:end="117:32"><name pos:start="117:5" pos:end="117:13">avio_wl64</name><argument_list pos:start="117:14" pos:end="117:32">(<argument pos:start="117:15" pos:end="117:16"><expr pos:start="117:15" pos:end="117:16"><name pos:start="117:15" pos:end="117:16">pb</name></expr></argument>, <argument pos:start="117:19" pos:end="117:31"><expr pos:start="117:19" pos:end="117:31"><name pos:start="117:19" pos:end="117:31"><name pos:start="117:19" pos:end="117:21">asf</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:31">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="117:35" pos:end="117:65">/* duration (in 100ns units) */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:32"><expr pos:start="119:5" pos:end="119:31"><call pos:start="119:5" pos:end="119:31"><name pos:start="119:5" pos:end="119:13">avio_wl64</name><argument_list pos:start="119:14" pos:end="119:31">(<argument pos:start="119:15" pos:end="119:16"><expr pos:start="119:15" pos:end="119:16"><name pos:start="119:15" pos:end="119:16">pb</name></expr></argument>, <argument pos:start="119:19" pos:end="119:30"><expr pos:start="119:19" pos:end="119:30"><name pos:start="119:19" pos:end="119:30">PREROLL_TIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="119:34" pos:end="119:55">/* start time stamp */</comment>

    <expr_stmt pos:start="121:5" pos:end="121:63"><expr pos:start="121:5" pos:end="121:62"><call pos:start="121:5" pos:end="121:62"><name pos:start="121:5" pos:end="121:13">avio_wl32</name><argument_list pos:start="121:14" pos:end="121:62">(<argument pos:start="121:15" pos:end="121:16"><expr pos:start="121:15" pos:end="121:16"><name pos:start="121:15" pos:end="121:16">pb</name></expr></argument>, <argument pos:start="121:19" pos:end="121:61"><expr pos:start="121:19" pos:end="121:61"><ternary pos:start="121:19" pos:end="121:61"><condition pos:start="121:19" pos:end="121:55"><expr pos:start="121:19" pos:end="121:53"><operator pos:start="121:19" pos:end="121:19">(</operator><name pos:start="121:20" pos:end="121:35"><name pos:start="121:20" pos:end="121:22">asf</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:35">is_streamed</name></name> <operator pos:start="121:37" pos:end="121:38">||</operator> <operator pos:start="121:40" pos:end="121:40">!</operator><name pos:start="121:41" pos:end="121:52"><name pos:start="121:41" pos:end="121:42">pb</name><operator pos:start="121:43" pos:end="121:44">-&gt;</operator><name pos:start="121:45" pos:end="121:52">seekable</name></name><operator pos:start="121:53" pos:end="121:53">)</operator></expr> ?</condition><then pos:start="121:57" pos:end="121:57"> <expr pos:start="121:57" pos:end="121:57"><literal type="number" pos:start="121:57" pos:end="121:57">3</literal></expr> </then><else pos:start="121:59" pos:end="121:61">: <expr pos:start="121:61" pos:end="121:61"><literal type="number" pos:start="121:61" pos:end="121:61">2</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="121:66" pos:end="121:74">/* ??? */</comment>

    <expr_stmt pos:start="123:5" pos:end="123:34"><expr pos:start="123:5" pos:end="123:33"><call pos:start="123:5" pos:end="123:33"><name pos:start="123:5" pos:end="123:13">avio_wl32</name><argument_list pos:start="123:14" pos:end="123:33">(<argument pos:start="123:15" pos:end="123:16"><expr pos:start="123:15" pos:end="123:16"><name pos:start="123:15" pos:end="123:16">pb</name></expr></argument>, <argument pos:start="123:19" pos:end="123:32"><expr pos:start="123:19" pos:end="123:32"><name pos:start="123:19" pos:end="123:32"><name pos:start="123:19" pos:end="123:19">s</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:32">packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="123:36" pos:end="123:52">/* packet size */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:34"><expr pos:start="125:5" pos:end="125:33"><call pos:start="125:5" pos:end="125:33"><name pos:start="125:5" pos:end="125:13">avio_wl32</name><argument_list pos:start="125:14" pos:end="125:33">(<argument pos:start="125:15" pos:end="125:16"><expr pos:start="125:15" pos:end="125:16"><name pos:start="125:15" pos:end="125:16">pb</name></expr></argument>, <argument pos:start="125:19" pos:end="125:32"><expr pos:start="125:19" pos:end="125:32"><name pos:start="125:19" pos:end="125:32"><name pos:start="125:19" pos:end="125:19">s</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:32">packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="125:36" pos:end="125:52">/* packet size */</comment>

    <expr_stmt pos:start="127:5" pos:end="127:44"><expr pos:start="127:5" pos:end="127:43"><call pos:start="127:5" pos:end="127:43"><name pos:start="127:5" pos:end="127:13">avio_wl32</name><argument_list pos:start="127:14" pos:end="127:43">(<argument pos:start="127:15" pos:end="127:16"><expr pos:start="127:15" pos:end="127:16"><name pos:start="127:15" pos:end="127:16">pb</name></expr></argument>, <argument pos:start="127:19" pos:end="127:42"><expr pos:start="127:19" pos:end="127:42"><ternary pos:start="127:19" pos:end="127:42"><condition pos:start="127:19" pos:end="127:28"><expr pos:start="127:19" pos:end="127:26"><name pos:start="127:19" pos:end="127:26">bit_rate</name></expr> ?</condition><then pos:start="127:30" pos:end="127:37"> <expr pos:start="127:30" pos:end="127:37"><name pos:start="127:30" pos:end="127:37">bit_rate</name></expr> </then><else pos:start="127:39" pos:end="127:42">: <expr pos:start="127:41" pos:end="127:42"><operator pos:start="127:41" pos:end="127:41">-</operator><literal type="number" pos:start="127:42" pos:end="127:42">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="127:46" pos:end="127:75">/* Maximum data rate in bps */</comment>

    <expr_stmt pos:start="129:5" pos:end="129:25"><expr pos:start="129:5" pos:end="129:24"><call pos:start="129:5" pos:end="129:24"><name pos:start="129:5" pos:end="129:14">end_header</name><argument_list pos:start="129:15" pos:end="129:24">(<argument pos:start="129:16" pos:end="129:17"><expr pos:start="129:16" pos:end="129:17"><name pos:start="129:16" pos:end="129:17">pb</name></expr></argument>, <argument pos:start="129:20" pos:end="129:23"><expr pos:start="129:20" pos:end="129:23"><name pos:start="129:20" pos:end="129:23">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="133:5" pos:end="133:25">/* unknown headers */</comment>

    <expr_stmt pos:start="135:5" pos:end="135:46"><expr pos:start="135:5" pos:end="135:45"><name pos:start="135:5" pos:end="135:8">hpos</name> <operator pos:start="135:10" pos:end="135:10">=</operator> <call pos:start="135:12" pos:end="135:45"><name pos:start="135:12" pos:end="135:21">put_header</name><argument_list pos:start="135:22" pos:end="135:45">(<argument pos:start="135:23" pos:end="135:24"><expr pos:start="135:23" pos:end="135:24"><name pos:start="135:23" pos:end="135:24">pb</name></expr></argument>, <argument pos:start="135:27" pos:end="135:44"><expr pos:start="135:27" pos:end="135:44"><operator pos:start="135:27" pos:end="135:27">&amp;</operator><name pos:start="135:28" pos:end="135:44">ff_asf_head1_guid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:40"><expr pos:start="137:5" pos:end="137:39"><call pos:start="137:5" pos:end="137:39"><name pos:start="137:5" pos:end="137:15">ff_put_guid</name><argument_list pos:start="137:16" pos:end="137:39">(<argument pos:start="137:17" pos:end="137:18"><expr pos:start="137:17" pos:end="137:18"><name pos:start="137:17" pos:end="137:18">pb</name></expr></argument>, <argument pos:start="137:21" pos:end="137:38"><expr pos:start="137:21" pos:end="137:38"><operator pos:start="137:21" pos:end="137:21">&amp;</operator><name pos:start="137:22" pos:end="137:38">ff_asf_head2_guid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:21"><expr pos:start="139:5" pos:end="139:20"><call pos:start="139:5" pos:end="139:20"><name pos:start="139:5" pos:end="139:13">avio_wl16</name><argument_list pos:start="139:14" pos:end="139:20">(<argument pos:start="139:15" pos:end="139:16"><expr pos:start="139:15" pos:end="139:16"><name pos:start="139:15" pos:end="139:16">pb</name></expr></argument>, <argument pos:start="139:19" pos:end="139:19"><expr pos:start="139:19" pos:end="139:19"><literal type="number" pos:start="139:19" pos:end="139:19">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="141:5" pos:end="205:5"><if pos:start="141:5" pos:end="201:5">if <condition pos:start="141:8" pos:end="141:25">(<expr pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:24">has_aspect_ratio</name></expr>)</condition> <block pos:start="141:27" pos:end="201:5">{<block_content pos:start="143:9" pos:end="199:30">

        <decl_stmt pos:start="143:9" pos:end="143:22"><decl pos:start="143:9" pos:end="143:21"><type pos:start="143:9" pos:end="143:15"><name pos:start="143:9" pos:end="143:15">int64_t</name></type> <name pos:start="143:17" pos:end="143:21">hpos2</name></decl>;</decl_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:50"><expr pos:start="145:9" pos:end="145:49"><call pos:start="145:9" pos:end="145:49"><name pos:start="145:9" pos:end="145:17">avio_wl32</name><argument_list pos:start="145:18" pos:end="145:49">(<argument pos:start="145:19" pos:end="145:20"><expr pos:start="145:19" pos:end="145:20"><name pos:start="145:19" pos:end="145:20">pb</name></expr></argument>, <argument pos:start="145:23" pos:end="145:48"><expr pos:start="145:23" pos:end="145:48"><literal type="number" pos:start="145:23" pos:end="145:26">26</literal> <operator pos:start="145:26" pos:end="145:26">+</operator> <name pos:start="145:28" pos:end="145:43">has_aspect_ratio</name> <operator pos:start="145:45" pos:end="145:45">*</operator> <literal type="number" pos:start="145:47" pos:end="145:48">84</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:56"><expr pos:start="147:9" pos:end="147:55"><name pos:start="147:9" pos:end="147:13">hpos2</name> <operator pos:start="147:15" pos:end="147:15">=</operator> <call pos:start="147:17" pos:end="147:55"><name pos:start="147:17" pos:end="147:26">put_header</name><argument_list pos:start="147:27" pos:end="147:55">(<argument pos:start="147:28" pos:end="147:29"><expr pos:start="147:28" pos:end="147:29"><name pos:start="147:28" pos:end="147:29">pb</name></expr></argument>, <argument pos:start="147:32" pos:end="147:54"><expr pos:start="147:32" pos:end="147:54"><operator pos:start="147:32" pos:end="147:32">&amp;</operator><name pos:start="147:33" pos:end="147:54">ff_asf_metadata_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:44"><expr pos:start="149:9" pos:end="149:43"><call pos:start="149:9" pos:end="149:43"><name pos:start="149:9" pos:end="149:17">avio_wl16</name><argument_list pos:start="149:18" pos:end="149:43">(<argument pos:start="149:19" pos:end="149:20"><expr pos:start="149:19" pos:end="149:20"><name pos:start="149:19" pos:end="149:20">pb</name></expr></argument>, <argument pos:start="149:23" pos:end="149:42"><expr pos:start="149:23" pos:end="149:42"><literal type="number" pos:start="149:23" pos:end="149:23">2</literal> <operator pos:start="149:25" pos:end="149:25">*</operator> <name pos:start="149:27" pos:end="149:42">has_aspect_ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="151:9" pos:end="197:9">for <control pos:start="151:13" pos:end="151:43">(<init pos:start="151:14" pos:end="151:19"><expr pos:start="151:14" pos:end="151:18"><name pos:start="151:14" pos:end="151:14">n</name> <operator pos:start="151:16" pos:end="151:16">=</operator> <literal type="number" pos:start="151:18" pos:end="151:18">0</literal></expr>;</init> <condition pos:start="151:21" pos:end="151:38"><expr pos:start="151:21" pos:end="151:37"><name pos:start="151:21" pos:end="151:21">n</name> <operator pos:start="151:23" pos:end="151:23">&lt;</operator> <name pos:start="151:25" pos:end="151:37"><name pos:start="151:25" pos:end="151:25">s</name><operator pos:start="151:26" pos:end="151:27">-&gt;</operator><name pos:start="151:28" pos:end="151:37">nb_streams</name></name></expr>;</condition> <incr pos:start="151:40" pos:end="151:42"><expr pos:start="151:40" pos:end="151:42"><name pos:start="151:40" pos:end="151:40">n</name><operator pos:start="151:41" pos:end="151:42">++</operator></expr></incr>)</control> <block pos:start="151:45" pos:end="197:9">{<block_content pos:start="153:13" pos:end="195:13">

            <expr_stmt pos:start="153:13" pos:end="153:39"><expr pos:start="153:13" pos:end="153:38"><name pos:start="153:13" pos:end="153:15">enc</name> <operator pos:start="153:17" pos:end="153:17">=</operator> <name pos:start="153:19" pos:end="153:31"><name pos:start="153:19" pos:end="153:19">s</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:28">streams</name><index pos:start="153:29" pos:end="153:31">[<expr pos:start="153:30" pos:end="153:30"><name pos:start="153:30" pos:end="153:30">n</name></expr>]</index></name><operator pos:start="153:32" pos:end="153:33">-&gt;</operator><name pos:start="153:34" pos:end="153:38">codec</name></expr>;</expr_stmt>

            <if_stmt pos:start="155:13" pos:end="195:13"><if pos:start="155:13" pos:end="195:13">if <condition pos:start="155:16" pos:end="159:52">(   <expr pos:start="155:20" pos:end="159:51"><name pos:start="155:20" pos:end="155:34"><name pos:start="155:20" pos:end="155:22">enc</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:34">codec_type</name></name> <operator pos:start="155:36" pos:end="155:37">==</operator> <name pos:start="155:39" pos:end="155:56">AVMEDIA_TYPE_VIDEO</name>

                <operator pos:start="157:17" pos:end="157:18">&amp;&amp;</operator> <name pos:start="157:20" pos:end="157:47"><name pos:start="157:20" pos:end="157:22">enc</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:43">sample_aspect_ratio</name><operator pos:start="157:44" pos:end="157:44">.</operator><name pos:start="157:45" pos:end="157:47">num</name></name> <operator pos:start="157:49" pos:end="157:49">&gt;</operator> <literal type="number" pos:start="157:51" pos:end="157:51">0</literal>

                <operator pos:start="159:17" pos:end="159:18">&amp;&amp;</operator> <name pos:start="159:20" pos:end="159:47"><name pos:start="159:20" pos:end="159:22">enc</name><operator pos:start="159:23" pos:end="159:24">-&gt;</operator><name pos:start="159:25" pos:end="159:43">sample_aspect_ratio</name><operator pos:start="159:44" pos:end="159:44">.</operator><name pos:start="159:45" pos:end="159:47">den</name></name> <operator pos:start="159:49" pos:end="159:49">&gt;</operator> <literal type="number" pos:start="159:51" pos:end="159:51">0</literal></expr>)</condition> <block pos:start="159:54" pos:end="195:13">{<block_content pos:start="161:17" pos:end="193:39">

                <decl_stmt pos:start="161:17" pos:end="161:58"><decl pos:start="161:17" pos:end="161:57"><type pos:start="161:17" pos:end="161:26"><name pos:start="161:17" pos:end="161:26">AVRational</name></type> <name pos:start="161:28" pos:end="161:30">sar</name> <init pos:start="161:32" pos:end="161:57">= <expr pos:start="161:34" pos:end="161:57"><name pos:start="161:34" pos:end="161:57"><name pos:start="161:34" pos:end="161:36">enc</name><operator pos:start="161:37" pos:end="161:38">-&gt;</operator><name pos:start="161:39" pos:end="161:57">sample_aspect_ratio</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:33"><expr pos:start="163:17" pos:end="163:32"><call pos:start="163:17" pos:end="163:32"><name pos:start="163:17" pos:end="163:25">avio_wl16</name><argument_list pos:start="163:26" pos:end="163:32">(<argument pos:start="163:27" pos:end="163:28"><expr pos:start="163:27" pos:end="163:28"><name pos:start="163:27" pos:end="163:28">pb</name></expr></argument>, <argument pos:start="163:31" pos:end="163:31"><expr pos:start="163:31" pos:end="163:31"><literal type="number" pos:start="163:31" pos:end="163:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:start="165:17" pos:end="165:59">// the stream number is set like this below</comment>

                <expr_stmt pos:start="167:17" pos:end="167:37"><expr pos:start="167:17" pos:end="167:36"><call pos:start="167:17" pos:end="167:36"><name pos:start="167:17" pos:end="167:25">avio_wl16</name><argument_list pos:start="167:26" pos:end="167:36">(<argument pos:start="167:27" pos:end="167:28"><expr pos:start="167:27" pos:end="167:28"><name pos:start="167:27" pos:end="167:28">pb</name></expr></argument>, <argument pos:start="167:31" pos:end="167:35"><expr pos:start="167:31" pos:end="167:35"><name pos:start="167:31" pos:end="167:31">n</name> <operator pos:start="167:33" pos:end="167:33">+</operator> <literal type="number" pos:start="167:35" pos:end="167:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:34"><expr pos:start="169:17" pos:end="169:33"><call pos:start="169:17" pos:end="169:33"><name pos:start="169:17" pos:end="169:25">avio_wl16</name><argument_list pos:start="169:26" pos:end="169:33">(<argument pos:start="169:27" pos:end="169:28"><expr pos:start="169:27" pos:end="169:28"><name pos:start="169:27" pos:end="169:28">pb</name></expr></argument>, <argument pos:start="169:31" pos:end="169:32"><expr pos:start="169:31" pos:end="169:32"><literal type="number" pos:start="169:31" pos:end="169:32">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="169:36" pos:end="169:46">// name_len</comment>

                <expr_stmt pos:start="171:17" pos:end="171:34"><expr pos:start="171:17" pos:end="171:33"><call pos:start="171:17" pos:end="171:33"><name pos:start="171:17" pos:end="171:25">avio_wl16</name><argument_list pos:start="171:26" pos:end="171:33">(<argument pos:start="171:27" pos:end="171:28"><expr pos:start="171:27" pos:end="171:28"><name pos:start="171:27" pos:end="171:28">pb</name></expr></argument>,  <argument pos:start="171:32" pos:end="171:32"><expr pos:start="171:32" pos:end="171:32"><literal type="number" pos:start="171:32" pos:end="171:32">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="171:36" pos:end="171:48">// value_type</comment>

                <expr_stmt pos:start="173:17" pos:end="173:34"><expr pos:start="173:17" pos:end="173:33"><call pos:start="173:17" pos:end="173:33"><name pos:start="173:17" pos:end="173:25">avio_wl32</name><argument_list pos:start="173:26" pos:end="173:33">(<argument pos:start="173:27" pos:end="173:28"><expr pos:start="173:27" pos:end="173:28"><name pos:start="173:27" pos:end="173:28">pb</name></expr></argument>,  <argument pos:start="173:32" pos:end="173:32"><expr pos:start="173:32" pos:end="173:32"><literal type="number" pos:start="173:32" pos:end="173:32">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="173:36" pos:end="173:47">// value_len</comment>

                <expr_stmt pos:start="175:17" pos:end="175:53"><expr pos:start="175:17" pos:end="175:52"><call pos:start="175:17" pos:end="175:52"><name pos:start="175:17" pos:end="175:32">avio_put_str16le</name><argument_list pos:start="175:33" pos:end="175:52">(<argument pos:start="175:34" pos:end="175:35"><expr pos:start="175:34" pos:end="175:35"><name pos:start="175:34" pos:end="175:35">pb</name></expr></argument>, <argument pos:start="175:38" pos:end="175:51"><expr pos:start="175:38" pos:end="175:51"><literal type="string" pos:start="175:38" pos:end="175:51">"AspectRatioX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:39"><expr pos:start="177:17" pos:end="177:38"><call pos:start="177:17" pos:end="177:38"><name pos:start="177:17" pos:end="177:25">avio_wl32</name><argument_list pos:start="177:26" pos:end="177:38">(<argument pos:start="177:27" pos:end="177:28"><expr pos:start="177:27" pos:end="177:28"><name pos:start="177:27" pos:end="177:28">pb</name></expr></argument>, <argument pos:start="177:31" pos:end="177:37"><expr pos:start="177:31" pos:end="177:37"><name pos:start="177:31" pos:end="177:37"><name pos:start="177:31" pos:end="177:33">sar</name><operator pos:start="177:34" pos:end="177:34">.</operator><name pos:start="177:35" pos:end="177:37">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:33"><expr pos:start="179:17" pos:end="179:32"><call pos:start="179:17" pos:end="179:32"><name pos:start="179:17" pos:end="179:25">avio_wl16</name><argument_list pos:start="179:26" pos:end="179:32">(<argument pos:start="179:27" pos:end="179:28"><expr pos:start="179:27" pos:end="179:28"><name pos:start="179:27" pos:end="179:28">pb</name></expr></argument>, <argument pos:start="179:31" pos:end="179:31"><expr pos:start="179:31" pos:end="179:31"><literal type="number" pos:start="179:31" pos:end="179:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:start="181:17" pos:end="181:59">// the stream number is set like this below</comment>

                <expr_stmt pos:start="183:17" pos:end="183:37"><expr pos:start="183:17" pos:end="183:36"><call pos:start="183:17" pos:end="183:36"><name pos:start="183:17" pos:end="183:25">avio_wl16</name><argument_list pos:start="183:26" pos:end="183:36">(<argument pos:start="183:27" pos:end="183:28"><expr pos:start="183:27" pos:end="183:28"><name pos:start="183:27" pos:end="183:28">pb</name></expr></argument>, <argument pos:start="183:31" pos:end="183:35"><expr pos:start="183:31" pos:end="183:35"><name pos:start="183:31" pos:end="183:31">n</name> <operator pos:start="183:33" pos:end="183:33">+</operator> <literal type="number" pos:start="183:35" pos:end="183:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:34"><expr pos:start="185:17" pos:end="185:33"><call pos:start="185:17" pos:end="185:33"><name pos:start="185:17" pos:end="185:25">avio_wl16</name><argument_list pos:start="185:26" pos:end="185:33">(<argument pos:start="185:27" pos:end="185:28"><expr pos:start="185:27" pos:end="185:28"><name pos:start="185:27" pos:end="185:28">pb</name></expr></argument>, <argument pos:start="185:31" pos:end="185:32"><expr pos:start="185:31" pos:end="185:32"><literal type="number" pos:start="185:31" pos:end="185:32">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="185:36" pos:end="185:46">// name_len</comment>

                <expr_stmt pos:start="187:17" pos:end="187:34"><expr pos:start="187:17" pos:end="187:33"><call pos:start="187:17" pos:end="187:33"><name pos:start="187:17" pos:end="187:25">avio_wl16</name><argument_list pos:start="187:26" pos:end="187:33">(<argument pos:start="187:27" pos:end="187:28"><expr pos:start="187:27" pos:end="187:28"><name pos:start="187:27" pos:end="187:28">pb</name></expr></argument>,  <argument pos:start="187:32" pos:end="187:32"><expr pos:start="187:32" pos:end="187:32"><literal type="number" pos:start="187:32" pos:end="187:32">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="187:36" pos:end="187:48">// value_type</comment>

                <expr_stmt pos:start="189:17" pos:end="189:34"><expr pos:start="189:17" pos:end="189:33"><call pos:start="189:17" pos:end="189:33"><name pos:start="189:17" pos:end="189:25">avio_wl32</name><argument_list pos:start="189:26" pos:end="189:33">(<argument pos:start="189:27" pos:end="189:28"><expr pos:start="189:27" pos:end="189:28"><name pos:start="189:27" pos:end="189:28">pb</name></expr></argument>,  <argument pos:start="189:32" pos:end="189:32"><expr pos:start="189:32" pos:end="189:32"><literal type="number" pos:start="189:32" pos:end="189:32">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="189:36" pos:end="189:47">// value_len</comment>

                <expr_stmt pos:start="191:17" pos:end="191:53"><expr pos:start="191:17" pos:end="191:52"><call pos:start="191:17" pos:end="191:52"><name pos:start="191:17" pos:end="191:32">avio_put_str16le</name><argument_list pos:start="191:33" pos:end="191:52">(<argument pos:start="191:34" pos:end="191:35"><expr pos:start="191:34" pos:end="191:35"><name pos:start="191:34" pos:end="191:35">pb</name></expr></argument>, <argument pos:start="191:38" pos:end="191:51"><expr pos:start="191:38" pos:end="191:51"><literal type="string" pos:start="191:38" pos:end="191:51">"AspectRatioY"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:39"><expr pos:start="193:17" pos:end="193:38"><call pos:start="193:17" pos:end="193:38"><name pos:start="193:17" pos:end="193:25">avio_wl32</name><argument_list pos:start="193:26" pos:end="193:38">(<argument pos:start="193:27" pos:end="193:28"><expr pos:start="193:27" pos:end="193:28"><name pos:start="193:27" pos:end="193:28">pb</name></expr></argument>, <argument pos:start="193:31" pos:end="193:37"><expr pos:start="193:31" pos:end="193:37"><name pos:start="193:31" pos:end="193:37"><name pos:start="193:31" pos:end="193:33">sar</name><operator pos:start="193:34" pos:end="193:34">.</operator><name pos:start="193:35" pos:end="193:37">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="199:9" pos:end="199:30"><expr pos:start="199:9" pos:end="199:29"><call pos:start="199:9" pos:end="199:29"><name pos:start="199:9" pos:end="199:18">end_header</name><argument_list pos:start="199:19" pos:end="199:29">(<argument pos:start="199:20" pos:end="199:21"><expr pos:start="199:20" pos:end="199:21"><name pos:start="199:20" pos:end="199:21">pb</name></expr></argument>, <argument pos:start="199:24" pos:end="199:28"><expr pos:start="199:24" pos:end="199:28"><name pos:start="199:24" pos:end="199:28">hpos2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="201:7" pos:end="205:5">else <block pos:start="201:12" pos:end="205:5">{<block_content pos:start="203:9" pos:end="203:25">

        <expr_stmt pos:start="203:9" pos:end="203:25"><expr pos:start="203:9" pos:end="203:24"><call pos:start="203:9" pos:end="203:24"><name pos:start="203:9" pos:end="203:17">avio_wl32</name><argument_list pos:start="203:18" pos:end="203:24">(<argument pos:start="203:19" pos:end="203:20"><expr pos:start="203:19" pos:end="203:20"><name pos:start="203:19" pos:end="203:20">pb</name></expr></argument>, <argument pos:start="203:23" pos:end="203:23"><expr pos:start="203:23" pos:end="203:23"><literal type="number" pos:start="203:23" pos:end="203:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:25"><expr pos:start="207:5" pos:end="207:24"><call pos:start="207:5" pos:end="207:24"><name pos:start="207:5" pos:end="207:14">end_header</name><argument_list pos:start="207:15" pos:end="207:24">(<argument pos:start="207:16" pos:end="207:17"><expr pos:start="207:16" pos:end="207:17"><name pos:start="207:16" pos:end="207:17">pb</name></expr></argument>, <argument pos:start="207:20" pos:end="207:23"><expr pos:start="207:20" pos:end="207:23"><name pos:start="207:20" pos:end="207:23">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="211:5" pos:end="211:31">/* title and other infos */</comment>

    <if_stmt pos:start="213:5" pos:end="249:5"><if pos:start="213:5" pos:end="249:5">if <condition pos:start="213:8" pos:end="213:18">(<expr pos:start="213:9" pos:end="213:17"><name pos:start="213:9" pos:end="213:17">has_title</name></expr>)</condition> <block pos:start="213:20" pos:end="249:5">{<block_content pos:start="215:9" pos:end="247:29">

        <decl_stmt pos:start="215:9" pos:end="215:16"><decl pos:start="215:9" pos:end="215:15"><type pos:start="215:9" pos:end="215:11"><name pos:start="215:9" pos:end="215:11">int</name></type> <name pos:start="215:13" pos:end="215:15">len</name></decl>;</decl_stmt>

        <decl_stmt pos:start="217:9" pos:end="217:21"><decl pos:start="217:9" pos:end="217:20"><type pos:start="217:9" pos:end="217:17"><name pos:start="217:9" pos:end="217:15">uint8_t</name> <modifier pos:start="217:17" pos:end="217:17">*</modifier></type><name pos:start="217:18" pos:end="217:20">buf</name></decl>;</decl_stmt>

        <decl_stmt pos:start="219:9" pos:end="219:29"><decl pos:start="219:9" pos:end="219:28"><type pos:start="219:9" pos:end="219:21"><name pos:start="219:9" pos:end="219:19">AVIOContext</name> <modifier pos:start="219:21" pos:end="219:21">*</modifier></type><name pos:start="219:22" pos:end="219:28">dyn_buf</name></decl>;</decl_stmt>



        <if_stmt pos:start="223:9" pos:end="225:35"><if pos:start="223:9" pos:end="225:35">if <condition pos:start="223:12" pos:end="223:44">(<expr pos:start="223:13" pos:end="223:43"><call pos:start="223:13" pos:end="223:39"><name pos:start="223:13" pos:end="223:29">avio_open_dyn_buf</name><argument_list pos:start="223:30" pos:end="223:39">(<argument pos:start="223:31" pos:end="223:38"><expr pos:start="223:31" pos:end="223:38"><operator pos:start="223:31" pos:end="223:31">&amp;</operator><name pos:start="223:32" pos:end="223:38">dyn_buf</name></expr></argument>)</argument_list></call> <operator pos:start="223:41" pos:end="223:41">&lt;</operator> <literal type="number" pos:start="223:43" pos:end="223:43">0</literal></expr>)</condition><block type="pseudo" pos:start="225:13" pos:end="225:35"><block_content pos:start="225:13" pos:end="225:35">

            <return pos:start="225:13" pos:end="225:35">return <expr pos:start="225:20" pos:end="225:34"><call pos:start="225:20" pos:end="225:34"><name pos:start="225:20" pos:end="225:26">AVERROR</name><argument_list pos:start="225:27" pos:end="225:34">(<argument pos:start="225:28" pos:end="225:33"><expr pos:start="225:28" pos:end="225:33"><name pos:start="225:28" pos:end="225:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="229:9" pos:end="229:54"><expr pos:start="229:9" pos:end="229:53"><name pos:start="229:9" pos:end="229:12">hpos</name> <operator pos:start="229:14" pos:end="229:14">=</operator> <call pos:start="229:16" pos:end="229:53"><name pos:start="229:16" pos:end="229:25">put_header</name><argument_list pos:start="229:26" pos:end="229:53">(<argument pos:start="229:27" pos:end="229:28"><expr pos:start="229:27" pos:end="229:28"><name pos:start="229:27" pos:end="229:28">pb</name></expr></argument>, <argument pos:start="229:31" pos:end="229:52"><expr pos:start="229:31" pos:end="229:52"><operator pos:start="229:31" pos:end="229:31">&amp;</operator><name pos:start="229:32" pos:end="229:52">ff_asf_comment_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="233:9" pos:end="239:9">for <control pos:start="233:13" pos:end="233:50">(<init pos:start="233:14" pos:end="233:19"><expr pos:start="233:14" pos:end="233:18"><name pos:start="233:14" pos:end="233:14">n</name> <operator pos:start="233:16" pos:end="233:16">=</operator> <literal type="number" pos:start="233:18" pos:end="233:18">0</literal></expr>;</init> <condition pos:start="233:21" pos:end="233:45"><expr pos:start="233:21" pos:end="233:44"><name pos:start="233:21" pos:end="233:21">n</name> <operator pos:start="233:23" pos:end="233:23">&lt;</operator> <call pos:start="233:25" pos:end="233:44"><name pos:start="233:25" pos:end="233:38">FF_ARRAY_ELEMS</name><argument_list pos:start="233:39" pos:end="233:44">(<argument pos:start="233:40" pos:end="233:43"><expr pos:start="233:40" pos:end="233:43"><name pos:start="233:40" pos:end="233:43">tags</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="233:47" pos:end="233:49"><expr pos:start="233:47" pos:end="233:49"><name pos:start="233:47" pos:end="233:47">n</name><operator pos:start="233:48" pos:end="233:49">++</operator></expr></incr>)</control> <block pos:start="233:52" pos:end="239:9">{<block_content pos:start="235:13" pos:end="237:31">

            <expr_stmt pos:start="235:13" pos:end="235:74"><expr pos:start="235:13" pos:end="235:73"><name pos:start="235:13" pos:end="235:15">len</name> <operator pos:start="235:17" pos:end="235:17">=</operator> <ternary pos:start="235:19" pos:end="235:73"><condition pos:start="235:19" pos:end="235:27"><expr pos:start="235:19" pos:end="235:25"><name pos:start="235:19" pos:end="235:25"><name pos:start="235:19" pos:end="235:22">tags</name><index pos:start="235:23" pos:end="235:25">[<expr pos:start="235:24" pos:end="235:24"><name pos:start="235:24" pos:end="235:24">n</name></expr>]</index></name></expr> ?</condition><then pos:start="235:29" pos:end="235:69"> <expr pos:start="235:29" pos:end="235:69"><call pos:start="235:29" pos:end="235:69"><name pos:start="235:29" pos:end="235:44">avio_put_str16le</name><argument_list pos:start="235:45" pos:end="235:69">(<argument pos:start="235:46" pos:end="235:52"><expr pos:start="235:46" pos:end="235:52"><name pos:start="235:46" pos:end="235:52">dyn_buf</name></expr></argument>, <argument pos:start="235:55" pos:end="235:68"><expr pos:start="235:55" pos:end="235:68"><name pos:start="235:55" pos:end="235:61"><name pos:start="235:55" pos:end="235:58">tags</name><index pos:start="235:59" pos:end="235:61">[<expr pos:start="235:60" pos:end="235:60"><name pos:start="235:60" pos:end="235:60">n</name></expr>]</index></name><operator pos:start="235:62" pos:end="235:63">-&gt;</operator><name pos:start="235:64" pos:end="235:68">value</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="235:71" pos:end="235:73">: <expr pos:start="235:73" pos:end="235:73"><literal type="number" pos:start="235:73" pos:end="235:73">0</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:31"><expr pos:start="237:13" pos:end="237:30"><call pos:start="237:13" pos:end="237:30"><name pos:start="237:13" pos:end="237:21">avio_wl16</name><argument_list pos:start="237:22" pos:end="237:30">(<argument pos:start="237:23" pos:end="237:24"><expr pos:start="237:23" pos:end="237:24"><name pos:start="237:23" pos:end="237:24">pb</name></expr></argument>, <argument pos:start="237:27" pos:end="237:29"><expr pos:start="237:27" pos:end="237:29"><name pos:start="237:27" pos:end="237:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="241:9" pos:end="241:48"><expr pos:start="241:9" pos:end="241:47"><name pos:start="241:9" pos:end="241:11">len</name> <operator pos:start="241:13" pos:end="241:13">=</operator> <call pos:start="241:15" pos:end="241:47"><name pos:start="241:15" pos:end="241:32">avio_close_dyn_buf</name><argument_list pos:start="241:33" pos:end="241:47">(<argument pos:start="241:34" pos:end="241:40"><expr pos:start="241:34" pos:end="241:40"><name pos:start="241:34" pos:end="241:40">dyn_buf</name></expr></argument>, <argument pos:start="241:43" pos:end="241:46"><expr pos:start="241:43" pos:end="241:46"><operator pos:start="241:43" pos:end="241:43">&amp;</operator><name pos:start="241:44" pos:end="241:46">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:33"><expr pos:start="243:9" pos:end="243:32"><call pos:start="243:9" pos:end="243:32"><name pos:start="243:9" pos:end="243:18">avio_write</name><argument_list pos:start="243:19" pos:end="243:32">(<argument pos:start="243:20" pos:end="243:21"><expr pos:start="243:20" pos:end="243:21"><name pos:start="243:20" pos:end="243:21">pb</name></expr></argument>, <argument pos:start="243:24" pos:end="243:26"><expr pos:start="243:24" pos:end="243:26"><name pos:start="243:24" pos:end="243:26">buf</name></expr></argument>, <argument pos:start="243:29" pos:end="243:31"><expr pos:start="243:29" pos:end="243:31"><name pos:start="243:29" pos:end="243:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:23"><expr pos:start="245:9" pos:end="245:22"><call pos:start="245:9" pos:end="245:22"><name pos:start="245:9" pos:end="245:16">av_freep</name><argument_list pos:start="245:17" pos:end="245:22">(<argument pos:start="245:18" pos:end="245:21"><expr pos:start="245:18" pos:end="245:21"><operator pos:start="245:18" pos:end="245:18">&amp;</operator><name pos:start="245:19" pos:end="245:21">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:29"><expr pos:start="247:9" pos:end="247:28"><call pos:start="247:9" pos:end="247:28"><name pos:start="247:9" pos:end="247:18">end_header</name><argument_list pos:start="247:19" pos:end="247:28">(<argument pos:start="247:20" pos:end="247:21"><expr pos:start="247:20" pos:end="247:21"><name pos:start="247:20" pos:end="247:21">pb</name></expr></argument>, <argument pos:start="247:24" pos:end="247:27"><expr pos:start="247:24" pos:end="247:27"><name pos:start="247:24" pos:end="247:27">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="251:5" pos:end="271:5"><if pos:start="251:5" pos:end="271:5">if <condition pos:start="251:8" pos:end="251:23">(<expr pos:start="251:9" pos:end="251:22"><name pos:start="251:9" pos:end="251:22">metadata_count</name></expr>)</condition> <block pos:start="251:25" pos:end="271:5">{<block_content pos:start="253:9" pos:end="269:29">

        <decl_stmt pos:start="253:9" pos:end="253:38"><decl pos:start="253:9" pos:end="253:37"><type pos:start="253:9" pos:end="253:27"><name pos:start="253:9" pos:end="253:25">AVDictionaryEntry</name> <modifier pos:start="253:27" pos:end="253:27">*</modifier></type><name pos:start="253:28" pos:end="253:30">tag</name> <init pos:start="253:32" pos:end="253:37">= <expr pos:start="253:34" pos:end="253:37"><name pos:start="253:34" pos:end="253:37">NULL</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:63"><expr pos:start="255:9" pos:end="255:62"><name pos:start="255:9" pos:end="255:12">hpos</name> <operator pos:start="255:14" pos:end="255:14">=</operator> <call pos:start="255:16" pos:end="255:62"><name pos:start="255:16" pos:end="255:25">put_header</name><argument_list pos:start="255:26" pos:end="255:62">(<argument pos:start="255:27" pos:end="255:28"><expr pos:start="255:27" pos:end="255:28"><name pos:start="255:27" pos:end="255:28">pb</name></expr></argument>, <argument pos:start="255:31" pos:end="255:61"><expr pos:start="255:31" pos:end="255:61"><operator pos:start="255:31" pos:end="255:31">&amp;</operator><name pos:start="255:32" pos:end="255:61">ff_asf_extended_content_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:38"><expr pos:start="257:9" pos:end="257:37"><call pos:start="257:9" pos:end="257:37"><name pos:start="257:9" pos:end="257:17">avio_wl16</name><argument_list pos:start="257:18" pos:end="257:37">(<argument pos:start="257:19" pos:end="257:20"><expr pos:start="257:19" pos:end="257:20"><name pos:start="257:19" pos:end="257:20">pb</name></expr></argument>, <argument pos:start="257:23" pos:end="257:36"><expr pos:start="257:23" pos:end="257:36"><name pos:start="257:23" pos:end="257:36">metadata_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="259:9" pos:end="267:9">while <condition pos:start="259:15" pos:end="259:80">(<expr pos:start="259:16" pos:end="259:79"><operator pos:start="259:16" pos:end="259:16">(</operator><name pos:start="259:17" pos:end="259:19">tag</name> <operator pos:start="259:21" pos:end="259:21">=</operator> <call pos:start="259:23" pos:end="259:78"><name pos:start="259:23" pos:end="259:33">av_dict_get</name><argument_list pos:start="259:34" pos:end="259:78">(<argument pos:start="259:35" pos:end="259:45"><expr pos:start="259:35" pos:end="259:45"><name pos:start="259:35" pos:end="259:45"><name pos:start="259:35" pos:end="259:35">s</name><operator pos:start="259:36" pos:end="259:37">-&gt;</operator><name pos:start="259:38" pos:end="259:45">metadata</name></name></expr></argument>, <argument pos:start="259:48" pos:end="259:49"><expr pos:start="259:48" pos:end="259:49"><literal type="string" pos:start="259:48" pos:end="259:49">""</literal></expr></argument>, <argument pos:start="259:52" pos:end="259:54"><expr pos:start="259:52" pos:end="259:54"><name pos:start="259:52" pos:end="259:54">tag</name></expr></argument>, <argument pos:start="259:57" pos:end="259:77"><expr pos:start="259:57" pos:end="259:77"><name pos:start="259:57" pos:end="259:77">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call><operator pos:start="259:79" pos:end="259:79">)</operator></expr>)</condition> <block pos:start="259:82" pos:end="267:9">{<block_content pos:start="261:13" pos:end="265:38">

            <expr_stmt pos:start="261:13" pos:end="261:36"><expr pos:start="261:13" pos:end="261:35"><call pos:start="261:13" pos:end="261:35"><name pos:start="261:13" pos:end="261:21">put_str16</name><argument_list pos:start="261:22" pos:end="261:35">(<argument pos:start="261:23" pos:end="261:24"><expr pos:start="261:23" pos:end="261:24"><name pos:start="261:23" pos:end="261:24">pb</name></expr></argument>, <argument pos:start="261:27" pos:end="261:34"><expr pos:start="261:27" pos:end="261:34"><name pos:start="261:27" pos:end="261:34"><name pos:start="261:27" pos:end="261:29">tag</name><operator pos:start="261:30" pos:end="261:31">-&gt;</operator><name pos:start="261:32" pos:end="261:34">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:29"><expr pos:start="263:13" pos:end="263:28"><call pos:start="263:13" pos:end="263:28"><name pos:start="263:13" pos:end="263:21">avio_wl16</name><argument_list pos:start="263:22" pos:end="263:28">(<argument pos:start="263:23" pos:end="263:24"><expr pos:start="263:23" pos:end="263:24"><name pos:start="263:23" pos:end="263:24">pb</name></expr></argument>, <argument pos:start="263:27" pos:end="263:27"><expr pos:start="263:27" pos:end="263:27"><literal type="number" pos:start="263:27" pos:end="263:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:38"><expr pos:start="265:13" pos:end="265:37"><call pos:start="265:13" pos:end="265:37"><name pos:start="265:13" pos:end="265:21">put_str16</name><argument_list pos:start="265:22" pos:end="265:37">(<argument pos:start="265:23" pos:end="265:24"><expr pos:start="265:23" pos:end="265:24"><name pos:start="265:23" pos:end="265:24">pb</name></expr></argument>, <argument pos:start="265:27" pos:end="265:36"><expr pos:start="265:27" pos:end="265:36"><name pos:start="265:27" pos:end="265:36"><name pos:start="265:27" pos:end="265:29">tag</name><operator pos:start="265:30" pos:end="265:31">-&gt;</operator><name pos:start="265:32" pos:end="265:36">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="269:9" pos:end="269:29"><expr pos:start="269:9" pos:end="269:28"><call pos:start="269:9" pos:end="269:28"><name pos:start="269:9" pos:end="269:18">end_header</name><argument_list pos:start="269:19" pos:end="269:28">(<argument pos:start="269:20" pos:end="269:21"><expr pos:start="269:20" pos:end="269:21"><name pos:start="269:20" pos:end="269:21">pb</name></expr></argument>, <argument pos:start="269:24" pos:end="269:27"><expr pos:start="269:24" pos:end="269:27"><name pos:start="269:24" pos:end="269:27">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="273:5" pos:end="273:36">/* chapters using ASF markers */</comment>

    <if_stmt pos:start="275:5" pos:end="283:5"><if pos:start="275:5" pos:end="283:5">if <condition pos:start="275:8" pos:end="275:44">(<expr pos:start="275:9" pos:end="275:43"><operator pos:start="275:9" pos:end="275:9">!</operator><name pos:start="275:10" pos:end="275:25"><name pos:start="275:10" pos:end="275:12">asf</name><operator pos:start="275:13" pos:end="275:14">-&gt;</operator><name pos:start="275:15" pos:end="275:25">is_streamed</name></name> <operator pos:start="275:27" pos:end="275:28">&amp;&amp;</operator> <name pos:start="275:30" pos:end="275:43"><name pos:start="275:30" pos:end="275:30">s</name><operator pos:start="275:31" pos:end="275:32">-&gt;</operator><name pos:start="275:33" pos:end="275:43">nb_chapters</name></name></expr>)</condition> <block pos:start="275:46" pos:end="283:5">{<block_content pos:start="277:9" pos:end="281:23">

        <decl_stmt pos:start="277:9" pos:end="277:16"><decl pos:start="277:9" pos:end="277:15"><type pos:start="277:9" pos:end="277:11"><name pos:start="277:9" pos:end="277:11">int</name></type> <name pos:start="277:13" pos:end="277:15">ret</name></decl>;</decl_stmt>

        <if_stmt pos:start="279:9" pos:end="281:23"><if pos:start="279:9" pos:end="281:23">if <condition pos:start="279:12" pos:end="279:39">(<expr pos:start="279:13" pos:end="279:38"><name pos:start="279:13" pos:end="279:15">ret</name> <operator pos:start="279:17" pos:end="279:17">=</operator> <call pos:start="279:19" pos:end="279:38"><name pos:start="279:19" pos:end="279:35">asf_write_markers</name><argument_list pos:start="279:36" pos:end="279:38">(<argument pos:start="279:37" pos:end="279:37"><expr pos:start="279:37" pos:end="279:37"><name pos:start="279:37" pos:end="279:37">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="281:13" pos:end="281:23"><block_content pos:start="281:13" pos:end="281:23">

            <return pos:start="281:13" pos:end="281:23">return <expr pos:start="281:20" pos:end="281:22"><name pos:start="281:20" pos:end="281:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="285:5" pos:end="285:24">/* stream headers */</comment>

    <for pos:start="287:5" pos:end="427:5">for <control pos:start="287:9" pos:end="287:39">(<init pos:start="287:10" pos:end="287:15"><expr pos:start="287:10" pos:end="287:14"><name pos:start="287:10" pos:end="287:10">n</name> <operator pos:start="287:12" pos:end="287:12">=</operator> <literal type="number" pos:start="287:14" pos:end="287:14">0</literal></expr>;</init> <condition pos:start="287:17" pos:end="287:34"><expr pos:start="287:17" pos:end="287:33"><name pos:start="287:17" pos:end="287:17">n</name> <operator pos:start="287:19" pos:end="287:19">&lt;</operator> <name pos:start="287:21" pos:end="287:33"><name pos:start="287:21" pos:end="287:21">s</name><operator pos:start="287:22" pos:end="287:23">-&gt;</operator><name pos:start="287:24" pos:end="287:33">nb_streams</name></name></expr>;</condition> <incr pos:start="287:36" pos:end="287:38"><expr pos:start="287:36" pos:end="287:38"><name pos:start="287:36" pos:end="287:36">n</name><operator pos:start="287:37" pos:end="287:38">++</operator></expr></incr>)</control> <block pos:start="287:41" pos:end="427:5">{<block_content pos:start="289:9" pos:end="425:29">

        <decl_stmt pos:start="289:9" pos:end="289:23"><decl pos:start="289:9" pos:end="289:22"><type pos:start="289:9" pos:end="289:15"><name pos:start="289:9" pos:end="289:15">int64_t</name></type> <name pos:start="289:17" pos:end="289:22">es_pos</name></decl>;</decl_stmt>

        <comment type="line" pos:start="291:9" pos:end="291:55">//        ASFStream *stream = &amp;asf-&gt;streams[n];</comment>



        <expr_stmt pos:start="295:9" pos:end="295:51"><expr pos:start="295:9" pos:end="295:50"><name pos:start="295:9" pos:end="295:11">enc</name>                 <operator pos:start="295:29" pos:end="295:29">=</operator> <name pos:start="295:31" pos:end="295:43"><name pos:start="295:31" pos:end="295:31">s</name><operator pos:start="295:32" pos:end="295:33">-&gt;</operator><name pos:start="295:34" pos:end="295:40">streams</name><index pos:start="295:41" pos:end="295:43">[<expr pos:start="295:42" pos:end="295:42"><name pos:start="295:42" pos:end="295:42">n</name></expr>]</index></name><operator pos:start="295:44" pos:end="295:45">-&gt;</operator><name pos:start="295:46" pos:end="295:50">codec</name></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:36"><expr pos:start="297:9" pos:end="297:35"><name pos:start="297:9" pos:end="297:23"><name pos:start="297:9" pos:end="297:11">asf</name><operator pos:start="297:12" pos:end="297:13">-&gt;</operator><name pos:start="297:14" pos:end="297:20">streams</name><index pos:start="297:21" pos:end="297:23">[<expr pos:start="297:22" pos:end="297:22"><name pos:start="297:22" pos:end="297:22">n</name></expr>]</index></name><operator pos:start="297:24" pos:end="297:24">.</operator><name pos:start="297:25" pos:end="297:27">num</name> <operator pos:start="297:29" pos:end="297:29">=</operator> <name pos:start="297:31" pos:end="297:31">n</name> <operator pos:start="297:33" pos:end="297:33">+</operator> <literal type="number" pos:start="297:35" pos:end="297:35">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:32"><expr pos:start="299:9" pos:end="299:31"><name pos:start="299:9" pos:end="299:23"><name pos:start="299:9" pos:end="299:11">asf</name><operator pos:start="299:12" pos:end="299:13">-&gt;</operator><name pos:start="299:14" pos:end="299:20">streams</name><index pos:start="299:21" pos:end="299:23">[<expr pos:start="299:22" pos:end="299:22"><name pos:start="299:22" pos:end="299:22">n</name></expr>]</index></name><operator pos:start="299:24" pos:end="299:24">.</operator><name pos:start="299:25" pos:end="299:27">seq</name> <operator pos:start="299:29" pos:end="299:29">=</operator> <literal type="number" pos:start="299:31" pos:end="299:31">1</literal></expr>;</expr_stmt>



        <switch pos:start="303:9" pos:end="327:9">switch <condition pos:start="303:16" pos:end="303:32">(<expr pos:start="303:17" pos:end="303:31"><name pos:start="303:17" pos:end="303:31"><name pos:start="303:17" pos:end="303:19">enc</name><operator pos:start="303:20" pos:end="303:21">-&gt;</operator><name pos:start="303:22" pos:end="303:31">codec_type</name></name></expr>)</condition> <block pos:start="303:34" pos:end="327:9">{<block_content pos:start="305:9" pos:end="325:18">

        <case pos:start="305:9" pos:end="305:32">case <expr pos:start="305:14" pos:end="305:31"><name pos:start="305:14" pos:end="305:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="307:13" pos:end="307:31"><expr pos:start="307:13" pos:end="307:30"><name pos:start="307:13" pos:end="307:26">wav_extra_size</name> <operator pos:start="307:28" pos:end="307:28">=</operator> <literal type="number" pos:start="307:30" pos:end="307:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:49"><expr pos:start="309:13" pos:end="309:48"><name pos:start="309:13" pos:end="309:22">extra_size</name>     <operator pos:start="309:28" pos:end="309:28">=</operator> <literal type="number" pos:start="309:30" pos:end="309:33">18</literal> <operator pos:start="309:33" pos:end="309:33">+</operator> <name pos:start="309:35" pos:end="309:48">wav_extra_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="311:13" pos:end="311:31"><expr pos:start="311:13" pos:end="311:30"><name pos:start="311:13" pos:end="311:23">extra_size2</name>    <operator pos:start="311:28" pos:end="311:28">=</operator> <literal type="number" pos:start="311:30" pos:end="311:30">8</literal></expr>;</expr_stmt>

            <break pos:start="313:13" pos:end="313:18">break;</break>

        <default pos:start="315:9" pos:end="315:16">default:</default>

        <case pos:start="317:9" pos:end="317:32">case <expr pos:start="317:14" pos:end="317:31"><name pos:start="317:14" pos:end="317:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="319:13" pos:end="319:49"><expr pos:start="319:13" pos:end="319:48"><name pos:start="319:13" pos:end="319:26">wav_extra_size</name> <operator pos:start="319:28" pos:end="319:28">=</operator> <name pos:start="319:30" pos:end="319:48"><name pos:start="319:30" pos:end="319:32">enc</name><operator pos:start="319:33" pos:end="319:34">-&gt;</operator><name pos:start="319:35" pos:end="319:48">extradata_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:51"><expr pos:start="321:13" pos:end="321:50"><name pos:start="321:13" pos:end="321:22">extra_size</name>     <operator pos:start="321:28" pos:end="321:28">=</operator> <literal type="number" pos:start="321:30" pos:end="321:35">0x33</literal> <operator pos:start="321:35" pos:end="321:35">+</operator> <name pos:start="321:37" pos:end="321:50">wav_extra_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:31"><expr pos:start="323:13" pos:end="323:30"><name pos:start="323:13" pos:end="323:23">extra_size2</name>    <operator pos:start="323:28" pos:end="323:28">=</operator> <literal type="number" pos:start="323:30" pos:end="323:30">0</literal></expr>;</expr_stmt>

            <break pos:start="325:13" pos:end="325:18">break;</break>

        </block_content>}</block></switch>



        <expr_stmt pos:start="331:9" pos:end="331:53"><expr pos:start="331:9" pos:end="331:52"><name pos:start="331:9" pos:end="331:12">hpos</name> <operator pos:start="331:14" pos:end="331:14">=</operator> <call pos:start="331:16" pos:end="331:52"><name pos:start="331:16" pos:end="331:25">put_header</name><argument_list pos:start="331:26" pos:end="331:52">(<argument pos:start="331:27" pos:end="331:28"><expr pos:start="331:27" pos:end="331:28"><name pos:start="331:27" pos:end="331:28">pb</name></expr></argument>, <argument pos:start="331:31" pos:end="331:51"><expr pos:start="331:31" pos:end="331:51"><operator pos:start="331:31" pos:end="331:31">&amp;</operator><name pos:start="331:32" pos:end="331:51">ff_asf_stream_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="333:9" pos:end="345:9"><if pos:start="333:9" pos:end="339:9">if <condition pos:start="333:12" pos:end="333:50">(<expr pos:start="333:13" pos:end="333:49"><name pos:start="333:13" pos:end="333:27"><name pos:start="333:13" pos:end="333:15">enc</name><operator pos:start="333:16" pos:end="333:17">-&gt;</operator><name pos:start="333:18" pos:end="333:27">codec_type</name></name> <operator pos:start="333:29" pos:end="333:30">==</operator> <name pos:start="333:32" pos:end="333:49">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="333:52" pos:end="339:9">{<block_content pos:start="335:13" pos:end="337:58">

            <expr_stmt pos:start="335:13" pos:end="335:50"><expr pos:start="335:13" pos:end="335:49"><call pos:start="335:13" pos:end="335:49"><name pos:start="335:13" pos:end="335:23">ff_put_guid</name><argument_list pos:start="335:24" pos:end="335:49">(<argument pos:start="335:25" pos:end="335:26"><expr pos:start="335:25" pos:end="335:26"><name pos:start="335:25" pos:end="335:26">pb</name></expr></argument>, <argument pos:start="335:29" pos:end="335:48"><expr pos:start="335:29" pos:end="335:48"><operator pos:start="335:29" pos:end="335:29">&amp;</operator><name pos:start="335:30" pos:end="335:48">ff_asf_audio_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:58"><expr pos:start="337:13" pos:end="337:57"><call pos:start="337:13" pos:end="337:57"><name pos:start="337:13" pos:end="337:23">ff_put_guid</name><argument_list pos:start="337:24" pos:end="337:57">(<argument pos:start="337:25" pos:end="337:26"><expr pos:start="337:25" pos:end="337:26"><name pos:start="337:25" pos:end="337:26">pb</name></expr></argument>, <argument pos:start="337:29" pos:end="337:56"><expr pos:start="337:29" pos:end="337:56"><operator pos:start="337:29" pos:end="337:29">&amp;</operator><name pos:start="337:30" pos:end="337:56">ff_asf_audio_conceal_spread</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="339:11" pos:end="345:9">else <block pos:start="339:16" pos:end="345:9">{<block_content pos:start="341:13" pos:end="343:56">

            <expr_stmt pos:start="341:13" pos:end="341:50"><expr pos:start="341:13" pos:end="341:49"><call pos:start="341:13" pos:end="341:49"><name pos:start="341:13" pos:end="341:23">ff_put_guid</name><argument_list pos:start="341:24" pos:end="341:49">(<argument pos:start="341:25" pos:end="341:26"><expr pos:start="341:25" pos:end="341:26"><name pos:start="341:25" pos:end="341:26">pb</name></expr></argument>, <argument pos:start="341:29" pos:end="341:48"><expr pos:start="341:29" pos:end="341:48"><operator pos:start="341:29" pos:end="341:29">&amp;</operator><name pos:start="341:30" pos:end="341:48">ff_asf_video_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:56"><expr pos:start="343:13" pos:end="343:55"><call pos:start="343:13" pos:end="343:55"><name pos:start="343:13" pos:end="343:23">ff_put_guid</name><argument_list pos:start="343:24" pos:end="343:55">(<argument pos:start="343:25" pos:end="343:26"><expr pos:start="343:25" pos:end="343:26"><name pos:start="343:25" pos:end="343:26">pb</name></expr></argument>, <argument pos:start="343:29" pos:end="343:54"><expr pos:start="343:29" pos:end="343:54"><operator pos:start="343:29" pos:end="343:29">&amp;</operator><name pos:start="343:30" pos:end="343:54">ff_asf_video_conceal_none</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="347:9" pos:end="347:25"><expr pos:start="347:9" pos:end="347:24"><call pos:start="347:9" pos:end="347:24"><name pos:start="347:9" pos:end="347:17">avio_wl64</name><argument_list pos:start="347:18" pos:end="347:24">(<argument pos:start="347:19" pos:end="347:20"><expr pos:start="347:19" pos:end="347:20"><name pos:start="347:19" pos:end="347:20">pb</name></expr></argument>, <argument pos:start="347:23" pos:end="347:23"><expr pos:start="347:23" pos:end="347:23"><literal type="number" pos:start="347:23" pos:end="347:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="347:27" pos:end="347:35">/* ??? */</comment>

        <expr_stmt pos:start="349:9" pos:end="349:31"><expr pos:start="349:9" pos:end="349:30"><name pos:start="349:9" pos:end="349:14">es_pos</name> <operator pos:start="349:16" pos:end="349:16">=</operator> <call pos:start="349:18" pos:end="349:30"><name pos:start="349:18" pos:end="349:26">avio_tell</name><argument_list pos:start="349:27" pos:end="349:30">(<argument pos:start="349:28" pos:end="349:29"><expr pos:start="349:28" pos:end="349:29"><name pos:start="349:28" pos:end="349:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:34"><expr pos:start="351:9" pos:end="351:33"><call pos:start="351:9" pos:end="351:33"><name pos:start="351:9" pos:end="351:17">avio_wl32</name><argument_list pos:start="351:18" pos:end="351:33">(<argument pos:start="351:19" pos:end="351:20"><expr pos:start="351:19" pos:end="351:20"><name pos:start="351:19" pos:end="351:20">pb</name></expr></argument>, <argument pos:start="351:23" pos:end="351:32"><expr pos:start="351:23" pos:end="351:32"><name pos:start="351:23" pos:end="351:32">extra_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="351:36" pos:end="351:55">/* wav header len */</comment>

        <expr_stmt pos:start="353:9" pos:end="353:35"><expr pos:start="353:9" pos:end="353:34"><call pos:start="353:9" pos:end="353:34"><name pos:start="353:9" pos:end="353:17">avio_wl32</name><argument_list pos:start="353:18" pos:end="353:34">(<argument pos:start="353:19" pos:end="353:20"><expr pos:start="353:19" pos:end="353:20"><name pos:start="353:19" pos:end="353:20">pb</name></expr></argument>, <argument pos:start="353:23" pos:end="353:33"><expr pos:start="353:23" pos:end="353:33"><name pos:start="353:23" pos:end="353:33">extra_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="353:37" pos:end="353:61">/* additional data len */</comment>

        <expr_stmt pos:start="355:9" pos:end="355:29"><expr pos:start="355:9" pos:end="355:28"><call pos:start="355:9" pos:end="355:28"><name pos:start="355:9" pos:end="355:17">avio_wl16</name><argument_list pos:start="355:18" pos:end="355:28">(<argument pos:start="355:19" pos:end="355:20"><expr pos:start="355:19" pos:end="355:20"><name pos:start="355:19" pos:end="355:20">pb</name></expr></argument>, <argument pos:start="355:23" pos:end="355:27"><expr pos:start="355:23" pos:end="355:27"><name pos:start="355:23" pos:end="355:23">n</name> <operator pos:start="355:25" pos:end="355:25">+</operator> <literal type="number" pos:start="355:27" pos:end="355:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="355:31" pos:end="355:49">/* stream number */</comment>

        <expr_stmt pos:start="357:9" pos:end="357:25"><expr pos:start="357:9" pos:end="357:24"><call pos:start="357:9" pos:end="357:24"><name pos:start="357:9" pos:end="357:17">avio_wl32</name><argument_list pos:start="357:18" pos:end="357:24">(<argument pos:start="357:19" pos:end="357:20"><expr pos:start="357:19" pos:end="357:20"><name pos:start="357:19" pos:end="357:20">pb</name></expr></argument>, <argument pos:start="357:23" pos:end="357:23"><expr pos:start="357:23" pos:end="357:23"><literal type="number" pos:start="357:23" pos:end="357:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="357:27" pos:end="357:35">/* ??? */</comment>



        <if_stmt pos:start="361:9" pos:end="423:9"><if pos:start="361:9" pos:end="407:9">if <condition pos:start="361:12" pos:end="361:50">(<expr pos:start="361:13" pos:end="361:49"><name pos:start="361:13" pos:end="361:27"><name pos:start="361:13" pos:end="361:15">enc</name><operator pos:start="361:16" pos:end="361:17">-&gt;</operator><name pos:start="361:18" pos:end="361:27">codec_type</name></name> <operator pos:start="361:29" pos:end="361:30">==</operator> <name pos:start="361:32" pos:end="361:49">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="361:52" pos:end="407:9">{<block_content pos:start="365:13" pos:end="405:30">

            <comment type="block" pos:start="363:13" pos:end="363:37">/* WAVEFORMATEX header */</comment>

            <decl_stmt pos:start="365:13" pos:end="365:91"><decl pos:start="365:13" pos:end="365:90"><type pos:start="365:13" pos:end="365:15"><name pos:start="365:13" pos:end="365:15">int</name></type> <name pos:start="365:17" pos:end="365:23">wavsize</name> <init pos:start="365:25" pos:end="365:90">= <expr pos:start="365:27" pos:end="365:90"><call pos:start="365:27" pos:end="365:90"><name pos:start="365:27" pos:end="365:43">ff_put_wav_header</name><argument_list pos:start="365:44" pos:end="365:90">(<argument pos:start="365:45" pos:end="365:46"><expr pos:start="365:45" pos:end="365:46"><name pos:start="365:45" pos:end="365:46">pb</name></expr></argument>, <argument pos:start="365:49" pos:end="365:51"><expr pos:start="365:49" pos:end="365:51"><name pos:start="365:49" pos:end="365:51">enc</name></expr></argument>, <argument pos:start="365:54" pos:end="365:89"><expr pos:start="365:54" pos:end="365:89"><name pos:start="365:54" pos:end="365:89">FF_PUT_WAV_HEADER_FORCE_WAVEFORMATEX</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="369:13" pos:end="371:26"><if pos:start="369:13" pos:end="371:26">if <condition pos:start="369:16" pos:end="369:28">(<expr pos:start="369:17" pos:end="369:27"><name pos:start="369:17" pos:end="369:23">wavsize</name> <operator pos:start="369:25" pos:end="369:25">&lt;</operator> <literal type="number" pos:start="369:27" pos:end="369:27">0</literal></expr>)</condition><block type="pseudo" pos:start="371:17" pos:end="371:26"><block_content pos:start="371:17" pos:end="371:26">

                <return pos:start="371:17" pos:end="371:26">return <expr pos:start="371:24" pos:end="371:25"><operator pos:start="371:24" pos:end="371:24">-</operator><literal type="number" pos:start="371:25" pos:end="371:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="373:13" pos:end="383:13"><if pos:start="373:13" pos:end="383:13">if <condition pos:start="373:16" pos:end="373:38">(<expr pos:start="373:17" pos:end="373:37"><name pos:start="373:17" pos:end="373:23">wavsize</name> <operator pos:start="373:25" pos:end="373:26">!=</operator> <name pos:start="373:28" pos:end="373:37">extra_size</name></expr>)</condition> <block pos:start="373:40" pos:end="383:13">{<block_content pos:start="375:17" pos:end="381:49">

                <expr_stmt pos:start="375:17" pos:end="375:40"><expr pos:start="375:17" pos:end="375:39"><name pos:start="375:17" pos:end="375:23">cur_pos</name> <operator pos:start="375:25" pos:end="375:25">=</operator> <call pos:start="375:27" pos:end="375:39"><name pos:start="375:27" pos:end="375:35">avio_tell</name><argument_list pos:start="375:36" pos:end="375:39">(<argument pos:start="375:37" pos:end="375:38"><expr pos:start="375:37" pos:end="375:38"><name pos:start="375:37" pos:end="375:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="377:17" pos:end="377:48"><expr pos:start="377:17" pos:end="377:47"><call pos:start="377:17" pos:end="377:47"><name pos:start="377:17" pos:end="377:25">avio_seek</name><argument_list pos:start="377:26" pos:end="377:47">(<argument pos:start="377:27" pos:end="377:28"><expr pos:start="377:27" pos:end="377:28"><name pos:start="377:27" pos:end="377:28">pb</name></expr></argument>, <argument pos:start="377:31" pos:end="377:36"><expr pos:start="377:31" pos:end="377:36"><name pos:start="377:31" pos:end="377:36">es_pos</name></expr></argument>, <argument pos:start="377:39" pos:end="377:46"><expr pos:start="377:39" pos:end="377:46"><name pos:start="377:39" pos:end="377:46">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="379:17" pos:end="379:39"><expr pos:start="379:17" pos:end="379:38"><call pos:start="379:17" pos:end="379:38"><name pos:start="379:17" pos:end="379:25">avio_wl32</name><argument_list pos:start="379:26" pos:end="379:38">(<argument pos:start="379:27" pos:end="379:28"><expr pos:start="379:27" pos:end="379:28"><name pos:start="379:27" pos:end="379:28">pb</name></expr></argument>, <argument pos:start="379:31" pos:end="379:37"><expr pos:start="379:31" pos:end="379:37"><name pos:start="379:31" pos:end="379:37">wavsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="379:41" pos:end="379:60">/* wav header len */</comment>

                <expr_stmt pos:start="381:17" pos:end="381:49"><expr pos:start="381:17" pos:end="381:48"><call pos:start="381:17" pos:end="381:48"><name pos:start="381:17" pos:end="381:25">avio_seek</name><argument_list pos:start="381:26" pos:end="381:48">(<argument pos:start="381:27" pos:end="381:28"><expr pos:start="381:27" pos:end="381:28"><name pos:start="381:27" pos:end="381:28">pb</name></expr></argument>, <argument pos:start="381:31" pos:end="381:37"><expr pos:start="381:31" pos:end="381:37"><name pos:start="381:31" pos:end="381:37">cur_pos</name></expr></argument>, <argument pos:start="381:40" pos:end="381:47"><expr pos:start="381:40" pos:end="381:47"><name pos:start="381:40" pos:end="381:47">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="385:13" pos:end="385:34">/* ERROR Correction */</comment>

            <expr_stmt pos:start="387:13" pos:end="387:30"><expr pos:start="387:13" pos:end="387:29"><call pos:start="387:13" pos:end="387:29"><name pos:start="387:13" pos:end="387:19">avio_w8</name><argument_list pos:start="387:20" pos:end="387:29">(<argument pos:start="387:21" pos:end="387:22"><expr pos:start="387:21" pos:end="387:22"><name pos:start="387:21" pos:end="387:22">pb</name></expr></argument>, <argument pos:start="387:25" pos:end="387:28"><expr pos:start="387:25" pos:end="387:28"><literal type="number" pos:start="387:25" pos:end="387:28">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="389:13" pos:end="401:13"><if pos:start="389:13" pos:end="395:13">if <condition pos:start="389:16" pos:end="389:77">(<expr pos:start="389:17" pos:end="389:76"><name pos:start="389:17" pos:end="389:29"><name pos:start="389:17" pos:end="389:19">enc</name><operator pos:start="389:20" pos:end="389:21">-&gt;</operator><name pos:start="389:22" pos:end="389:29">codec_id</name></name> <operator pos:start="389:31" pos:end="389:32">==</operator> <name pos:start="389:34" pos:end="389:55">AV_CODEC_ID_ADPCM_G726</name> <operator pos:start="389:57" pos:end="389:58">||</operator> <operator pos:start="389:60" pos:end="389:60">!</operator><name pos:start="389:61" pos:end="389:76"><name pos:start="389:61" pos:end="389:63">enc</name><operator pos:start="389:64" pos:end="389:65">-&gt;</operator><name pos:start="389:66" pos:end="389:76">block_align</name></name></expr>)</condition> <block pos:start="389:79" pos:end="395:13">{<block_content pos:start="391:17" pos:end="393:38">

                <expr_stmt pos:start="391:17" pos:end="391:38"><expr pos:start="391:17" pos:end="391:37"><call pos:start="391:17" pos:end="391:37"><name pos:start="391:17" pos:end="391:25">avio_wl16</name><argument_list pos:start="391:26" pos:end="391:37">(<argument pos:start="391:27" pos:end="391:28"><expr pos:start="391:27" pos:end="391:28"><name pos:start="391:27" pos:end="391:28">pb</name></expr></argument>, <argument pos:start="391:31" pos:end="391:36"><expr pos:start="391:31" pos:end="391:36"><literal type="number" pos:start="391:31" pos:end="391:36">0x0190</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="393:17" pos:end="393:38"><expr pos:start="393:17" pos:end="393:37"><call pos:start="393:17" pos:end="393:37"><name pos:start="393:17" pos:end="393:25">avio_wl16</name><argument_list pos:start="393:26" pos:end="393:37">(<argument pos:start="393:27" pos:end="393:28"><expr pos:start="393:27" pos:end="393:28"><name pos:start="393:27" pos:end="393:28">pb</name></expr></argument>, <argument pos:start="393:31" pos:end="393:36"><expr pos:start="393:31" pos:end="393:36"><literal type="number" pos:start="393:31" pos:end="393:36">0x0190</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="395:15" pos:end="401:13">else <block pos:start="395:20" pos:end="401:13">{<block_content pos:start="397:17" pos:end="399:48">

                <expr_stmt pos:start="397:17" pos:end="397:48"><expr pos:start="397:17" pos:end="397:47"><call pos:start="397:17" pos:end="397:47"><name pos:start="397:17" pos:end="397:25">avio_wl16</name><argument_list pos:start="397:26" pos:end="397:47">(<argument pos:start="397:27" pos:end="397:28"><expr pos:start="397:27" pos:end="397:28"><name pos:start="397:27" pos:end="397:28">pb</name></expr></argument>, <argument pos:start="397:31" pos:end="397:46"><expr pos:start="397:31" pos:end="397:46"><name pos:start="397:31" pos:end="397:46"><name pos:start="397:31" pos:end="397:33">enc</name><operator pos:start="397:34" pos:end="397:35">-&gt;</operator><name pos:start="397:36" pos:end="397:46">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="399:17" pos:end="399:48"><expr pos:start="399:17" pos:end="399:47"><call pos:start="399:17" pos:end="399:47"><name pos:start="399:17" pos:end="399:25">avio_wl16</name><argument_list pos:start="399:26" pos:end="399:47">(<argument pos:start="399:27" pos:end="399:28"><expr pos:start="399:27" pos:end="399:28"><name pos:start="399:27" pos:end="399:28">pb</name></expr></argument>, <argument pos:start="399:31" pos:end="399:46"><expr pos:start="399:31" pos:end="399:46"><name pos:start="399:31" pos:end="399:46"><name pos:start="399:31" pos:end="399:33">enc</name><operator pos:start="399:34" pos:end="399:35">-&gt;</operator><name pos:start="399:36" pos:end="399:46">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="403:13" pos:end="403:32"><expr pos:start="403:13" pos:end="403:31"><call pos:start="403:13" pos:end="403:31"><name pos:start="403:13" pos:end="403:21">avio_wl16</name><argument_list pos:start="403:22" pos:end="403:31">(<argument pos:start="403:23" pos:end="403:24"><expr pos:start="403:23" pos:end="403:24"><name pos:start="403:23" pos:end="403:24">pb</name></expr></argument>, <argument pos:start="403:27" pos:end="403:30"><expr pos:start="403:27" pos:end="403:30"><literal type="number" pos:start="403:27" pos:end="403:30">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="405:13" pos:end="405:30"><expr pos:start="405:13" pos:end="405:29"><call pos:start="405:13" pos:end="405:29"><name pos:start="405:13" pos:end="405:19">avio_w8</name><argument_list pos:start="405:20" pos:end="405:29">(<argument pos:start="405:21" pos:end="405:22"><expr pos:start="405:21" pos:end="405:22"><name pos:start="405:21" pos:end="405:22">pb</name></expr></argument>, <argument pos:start="405:25" pos:end="405:28"><expr pos:start="405:25" pos:end="405:28"><literal type="number" pos:start="405:25" pos:end="405:28">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="407:11" pos:end="423:9">else <block pos:start="407:16" pos:end="423:9">{<block_content pos:start="409:13" pos:end="421:64">

            <expr_stmt pos:start="409:13" pos:end="409:38"><expr pos:start="409:13" pos:end="409:37"><call pos:start="409:13" pos:end="409:37"><name pos:start="409:13" pos:end="409:21">avio_wl32</name><argument_list pos:start="409:22" pos:end="409:37">(<argument pos:start="409:23" pos:end="409:24"><expr pos:start="409:23" pos:end="409:24"><name pos:start="409:23" pos:end="409:24">pb</name></expr></argument>, <argument pos:start="409:27" pos:end="409:36"><expr pos:start="409:27" pos:end="409:36"><name pos:start="409:27" pos:end="409:36"><name pos:start="409:27" pos:end="409:29">enc</name><operator pos:start="409:30" pos:end="409:31">-&gt;</operator><name pos:start="409:32" pos:end="409:36">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="411:13" pos:end="411:39"><expr pos:start="411:13" pos:end="411:38"><call pos:start="411:13" pos:end="411:38"><name pos:start="411:13" pos:end="411:21">avio_wl32</name><argument_list pos:start="411:22" pos:end="411:38">(<argument pos:start="411:23" pos:end="411:24"><expr pos:start="411:23" pos:end="411:24"><name pos:start="411:23" pos:end="411:24">pb</name></expr></argument>, <argument pos:start="411:27" pos:end="411:37"><expr pos:start="411:27" pos:end="411:37"><name pos:start="411:27" pos:end="411:37"><name pos:start="411:27" pos:end="411:29">enc</name><operator pos:start="411:30" pos:end="411:31">-&gt;</operator><name pos:start="411:32" pos:end="411:37">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="413:13" pos:end="413:27"><expr pos:start="413:13" pos:end="413:26"><call pos:start="413:13" pos:end="413:26"><name pos:start="413:13" pos:end="413:19">avio_w8</name><argument_list pos:start="413:20" pos:end="413:26">(<argument pos:start="413:21" pos:end="413:22"><expr pos:start="413:21" pos:end="413:22"><name pos:start="413:21" pos:end="413:22">pb</name></expr></argument>, <argument pos:start="413:25" pos:end="413:25"><expr pos:start="413:25" pos:end="413:25"><literal type="number" pos:start="413:25" pos:end="413:25">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="413:29" pos:end="413:37">/* ??? */</comment>

            <expr_stmt pos:start="415:13" pos:end="415:52"><expr pos:start="415:13" pos:end="415:51"><call pos:start="415:13" pos:end="415:51"><name pos:start="415:13" pos:end="415:21">avio_wl16</name><argument_list pos:start="415:22" pos:end="415:51">(<argument pos:start="415:23" pos:end="415:24"><expr pos:start="415:23" pos:end="415:24"><name pos:start="415:23" pos:end="415:24">pb</name></expr></argument>, <argument pos:start="415:27" pos:end="415:50"><expr pos:start="415:27" pos:end="415:50"><literal type="number" pos:start="415:27" pos:end="415:30">40</literal> <operator pos:start="415:30" pos:end="415:30">+</operator> <name pos:start="415:32" pos:end="415:50"><name pos:start="415:32" pos:end="415:34">enc</name><operator pos:start="415:35" pos:end="415:36">-&gt;</operator><name pos:start="415:37" pos:end="415:50">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="415:54" pos:end="415:63">/* size */</comment>



            <comment type="block" pos:start="419:13" pos:end="419:41">/* BITMAPINFOHEADER header */</comment>

            <expr_stmt pos:start="421:13" pos:end="421:64"><expr pos:start="421:13" pos:end="421:63"><call pos:start="421:13" pos:end="421:63"><name pos:start="421:13" pos:end="421:29">ff_put_bmp_header</name><argument_list pos:start="421:30" pos:end="421:63">(<argument pos:start="421:31" pos:end="421:32"><expr pos:start="421:31" pos:end="421:32"><name pos:start="421:31" pos:end="421:32">pb</name></expr></argument>, <argument pos:start="421:35" pos:end="421:37"><expr pos:start="421:35" pos:end="421:37"><name pos:start="421:35" pos:end="421:37">enc</name></expr></argument>, <argument pos:start="421:40" pos:end="421:56"><expr pos:start="421:40" pos:end="421:56"><name pos:start="421:40" pos:end="421:56">ff_codec_bmp_tags</name></expr></argument>, <argument pos:start="421:59" pos:end="421:59"><expr pos:start="421:59" pos:end="421:59"><literal type="number" pos:start="421:59" pos:end="421:59">1</literal></expr></argument>, <argument pos:start="421:62" pos:end="421:62"><expr pos:start="421:62" pos:end="421:62"><literal type="number" pos:start="421:62" pos:end="421:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="425:9" pos:end="425:29"><expr pos:start="425:9" pos:end="425:28"><call pos:start="425:9" pos:end="425:28"><name pos:start="425:9" pos:end="425:18">end_header</name><argument_list pos:start="425:19" pos:end="425:28">(<argument pos:start="425:20" pos:end="425:21"><expr pos:start="425:20" pos:end="425:21"><name pos:start="425:20" pos:end="425:21">pb</name></expr></argument>, <argument pos:start="425:24" pos:end="425:27"><expr pos:start="425:24" pos:end="425:27"><name pos:start="425:24" pos:end="425:27">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="431:5" pos:end="431:24">/* media comments */</comment>



    <expr_stmt pos:start="435:5" pos:end="435:56"><expr pos:start="435:5" pos:end="435:55"><name pos:start="435:5" pos:end="435:8">hpos</name> <operator pos:start="435:10" pos:end="435:10">=</operator> <call pos:start="435:12" pos:end="435:55"><name pos:start="435:12" pos:end="435:21">put_header</name><argument_list pos:start="435:22" pos:end="435:55">(<argument pos:start="435:23" pos:end="435:24"><expr pos:start="435:23" pos:end="435:24"><name pos:start="435:23" pos:end="435:24">pb</name></expr></argument>, <argument pos:start="435:27" pos:end="435:54"><expr pos:start="435:27" pos:end="435:54"><operator pos:start="435:27" pos:end="435:27">&amp;</operator><name pos:start="435:28" pos:end="435:54">ff_asf_codec_comment_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="437:5" pos:end="437:51"><expr pos:start="437:5" pos:end="437:50"><call pos:start="437:5" pos:end="437:50"><name pos:start="437:5" pos:end="437:15">ff_put_guid</name><argument_list pos:start="437:16" pos:end="437:50">(<argument pos:start="437:17" pos:end="437:18"><expr pos:start="437:17" pos:end="437:18"><name pos:start="437:17" pos:end="437:18">pb</name></expr></argument>, <argument pos:start="437:21" pos:end="437:49"><expr pos:start="437:21" pos:end="437:49"><operator pos:start="437:21" pos:end="437:21">&amp;</operator><name pos:start="437:22" pos:end="437:49">ff_asf_codec_comment1_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="439:5" pos:end="439:33"><expr pos:start="439:5" pos:end="439:32"><call pos:start="439:5" pos:end="439:32"><name pos:start="439:5" pos:end="439:13">avio_wl32</name><argument_list pos:start="439:14" pos:end="439:32">(<argument pos:start="439:15" pos:end="439:16"><expr pos:start="439:15" pos:end="439:16"><name pos:start="439:15" pos:end="439:16">pb</name></expr></argument>, <argument pos:start="439:19" pos:end="439:31"><expr pos:start="439:19" pos:end="439:31"><name pos:start="439:19" pos:end="439:31"><name pos:start="439:19" pos:end="439:19">s</name><operator pos:start="439:20" pos:end="439:21">-&gt;</operator><name pos:start="439:22" pos:end="439:31">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="441:5" pos:end="537:5">for <control pos:start="441:9" pos:end="441:39">(<init pos:start="441:10" pos:end="441:15"><expr pos:start="441:10" pos:end="441:14"><name pos:start="441:10" pos:end="441:10">n</name> <operator pos:start="441:12" pos:end="441:12">=</operator> <literal type="number" pos:start="441:14" pos:end="441:14">0</literal></expr>;</init> <condition pos:start="441:17" pos:end="441:34"><expr pos:start="441:17" pos:end="441:33"><name pos:start="441:17" pos:end="441:17">n</name> <operator pos:start="441:19" pos:end="441:19">&lt;</operator> <name pos:start="441:21" pos:end="441:33"><name pos:start="441:21" pos:end="441:21">s</name><operator pos:start="441:22" pos:end="441:23">-&gt;</operator><name pos:start="441:24" pos:end="441:33">nb_streams</name></name></expr>;</condition> <incr pos:start="441:36" pos:end="441:38"><expr pos:start="441:36" pos:end="441:38"><name pos:start="441:36" pos:end="441:36">n</name><operator pos:start="441:37" pos:end="441:38">++</operator></expr></incr>)</control> <block pos:start="441:41" pos:end="537:5">{<block_content pos:start="443:9" pos:end="535:22">

        <decl_stmt pos:start="443:9" pos:end="443:44"><decl pos:start="443:9" pos:end="443:43"><type pos:start="443:9" pos:end="443:33"><specifier pos:start="443:9" pos:end="443:13">const</specifier> <name pos:start="443:15" pos:end="443:31">AVCodecDescriptor</name> <modifier pos:start="443:33" pos:end="443:33">*</modifier></type><name pos:start="443:34" pos:end="443:43">codec_desc</name></decl>;</decl_stmt>

        <decl_stmt pos:start="445:9" pos:end="445:25"><decl pos:start="445:9" pos:end="445:24"><type pos:start="445:9" pos:end="445:20"><specifier pos:start="445:9" pos:end="445:13">const</specifier> <name pos:start="445:15" pos:end="445:18">char</name> <modifier pos:start="445:20" pos:end="445:20">*</modifier></type><name pos:start="445:21" pos:end="445:24">desc</name></decl>;</decl_stmt>



        <expr_stmt pos:start="449:9" pos:end="449:36"><expr pos:start="449:9" pos:end="449:35"><name pos:start="449:9" pos:end="449:11">enc</name>  <operator pos:start="449:14" pos:end="449:14">=</operator> <name pos:start="449:16" pos:end="449:28"><name pos:start="449:16" pos:end="449:16">s</name><operator pos:start="449:17" pos:end="449:18">-&gt;</operator><name pos:start="449:19" pos:end="449:25">streams</name><index pos:start="449:26" pos:end="449:28">[<expr pos:start="449:27" pos:end="449:27"><name pos:start="449:27" pos:end="449:27">n</name></expr>]</index></name><operator pos:start="449:29" pos:end="449:30">-&gt;</operator><name pos:start="449:31" pos:end="449:35">codec</name></expr>;</expr_stmt>

        <expr_stmt pos:start="451:9" pos:end="451:59"><expr pos:start="451:9" pos:end="451:58"><name pos:start="451:9" pos:end="451:18">codec_desc</name> <operator pos:start="451:20" pos:end="451:20">=</operator> <call pos:start="451:22" pos:end="451:58"><name pos:start="451:22" pos:end="451:43">avcodec_descriptor_get</name><argument_list pos:start="451:44" pos:end="451:58">(<argument pos:start="451:45" pos:end="451:57"><expr pos:start="451:45" pos:end="451:57"><name pos:start="451:45" pos:end="451:57"><name pos:start="451:45" pos:end="451:47">enc</name><operator pos:start="451:48" pos:end="451:49">-&gt;</operator><name pos:start="451:50" pos:end="451:57">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="455:9" pos:end="465:30"><if pos:start="455:9" pos:end="457:29">if <condition pos:start="455:12" pos:end="455:50">(<expr pos:start="455:13" pos:end="455:49"><name pos:start="455:13" pos:end="455:27"><name pos:start="455:13" pos:end="455:15">enc</name><operator pos:start="455:16" pos:end="455:17">-&gt;</operator><name pos:start="455:18" pos:end="455:27">codec_type</name></name> <operator pos:start="455:29" pos:end="455:30">==</operator> <name pos:start="455:32" pos:end="455:49">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="457:13" pos:end="457:29"><block_content pos:start="457:13" pos:end="457:29">

            <expr_stmt pos:start="457:13" pos:end="457:29"><expr pos:start="457:13" pos:end="457:28"><call pos:start="457:13" pos:end="457:28"><name pos:start="457:13" pos:end="457:21">avio_wl16</name><argument_list pos:start="457:22" pos:end="457:28">(<argument pos:start="457:23" pos:end="457:24"><expr pos:start="457:23" pos:end="457:24"><name pos:start="457:23" pos:end="457:24">pb</name></expr></argument>, <argument pos:start="457:27" pos:end="457:27"><expr pos:start="457:27" pos:end="457:27"><literal type="number" pos:start="457:27" pos:end="457:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="459:9" pos:end="461:29">else if <condition pos:start="459:17" pos:end="459:55">(<expr pos:start="459:18" pos:end="459:54"><name pos:start="459:18" pos:end="459:32"><name pos:start="459:18" pos:end="459:20">enc</name><operator pos:start="459:21" pos:end="459:22">-&gt;</operator><name pos:start="459:23" pos:end="459:32">codec_type</name></name> <operator pos:start="459:34" pos:end="459:35">==</operator> <name pos:start="459:37" pos:end="459:54">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="461:13" pos:end="461:29"><block_content pos:start="461:13" pos:end="461:29">

            <expr_stmt pos:start="461:13" pos:end="461:29"><expr pos:start="461:13" pos:end="461:28"><call pos:start="461:13" pos:end="461:28"><name pos:start="461:13" pos:end="461:21">avio_wl16</name><argument_list pos:start="461:22" pos:end="461:28">(<argument pos:start="461:23" pos:end="461:24"><expr pos:start="461:23" pos:end="461:24"><name pos:start="461:23" pos:end="461:24">pb</name></expr></argument>, <argument pos:start="461:27" pos:end="461:27"><expr pos:start="461:27" pos:end="461:27"><literal type="number" pos:start="461:27" pos:end="461:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="463:9" pos:end="465:30">else<block type="pseudo" pos:start="465:13" pos:end="465:30"><block_content pos:start="465:13" pos:end="465:30">

            <expr_stmt pos:start="465:13" pos:end="465:30"><expr pos:start="465:13" pos:end="465:29"><call pos:start="465:13" pos:end="465:29"><name pos:start="465:13" pos:end="465:21">avio_wl16</name><argument_list pos:start="465:22" pos:end="465:29">(<argument pos:start="465:23" pos:end="465:24"><expr pos:start="465:23" pos:end="465:24"><name pos:start="465:23" pos:end="465:24">pb</name></expr></argument>, <argument pos:start="465:27" pos:end="465:28"><expr pos:start="465:27" pos:end="465:28"><operator pos:start="465:27" pos:end="465:27">-</operator><literal type="number" pos:start="465:28" pos:end="465:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="469:9" pos:end="475:56"><if pos:start="469:9" pos:end="471:44">if <condition pos:start="469:12" pos:end="469:47">(<expr pos:start="469:13" pos:end="469:46"><name pos:start="469:13" pos:end="469:25"><name pos:start="469:13" pos:end="469:15">enc</name><operator pos:start="469:16" pos:end="469:17">-&gt;</operator><name pos:start="469:18" pos:end="469:25">codec_id</name></name> <operator pos:start="469:27" pos:end="469:28">==</operator> <name pos:start="469:30" pos:end="469:46">AV_CODEC_ID_WMAV2</name></expr>)</condition><block type="pseudo" pos:start="471:13" pos:end="471:44"><block_content pos:start="471:13" pos:end="471:44">

            <expr_stmt pos:start="471:13" pos:end="471:44"><expr pos:start="471:13" pos:end="471:43"><name pos:start="471:13" pos:end="471:16">desc</name> <operator pos:start="471:18" pos:end="471:18">=</operator> <literal type="string" pos:start="471:20" pos:end="471:43">"Windows Media Audio V8"</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="473:9" pos:end="475:56">else<block type="pseudo" pos:start="475:13" pos:end="475:56"><block_content pos:start="475:13" pos:end="475:56">

            <expr_stmt pos:start="475:13" pos:end="475:56"><expr pos:start="475:13" pos:end="475:55"><name pos:start="475:13" pos:end="475:16">desc</name> <operator pos:start="475:18" pos:end="475:18">=</operator> <ternary pos:start="475:20" pos:end="475:55"><condition pos:start="475:20" pos:end="475:31"><expr pos:start="475:20" pos:end="475:29"><name pos:start="475:20" pos:end="475:29">codec_desc</name></expr> ?</condition><then pos:start="475:33" pos:end="475:48"> <expr pos:start="475:33" pos:end="475:48"><name pos:start="475:33" pos:end="475:48"><name pos:start="475:33" pos:end="475:42">codec_desc</name><operator pos:start="475:43" pos:end="475:44">-&gt;</operator><name pos:start="475:45" pos:end="475:48">name</name></name></expr> </then><else pos:start="475:50" pos:end="475:55">: <expr pos:start="475:52" pos:end="475:55"><name pos:start="475:52" pos:end="475:55">NULL</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="479:9" pos:end="509:29"><if pos:start="479:9" pos:end="507:9">if <condition pos:start="479:12" pos:end="479:17">(<expr pos:start="479:13" pos:end="479:16"><name pos:start="479:13" pos:end="479:16">desc</name></expr>)</condition> <block pos:start="479:19" pos:end="507:9">{<block_content pos:start="481:13" pos:end="505:27">

            <decl_stmt pos:start="481:13" pos:end="481:33"><decl pos:start="481:13" pos:end="481:32"><type pos:start="481:13" pos:end="481:25"><name pos:start="481:13" pos:end="481:23">AVIOContext</name> <modifier pos:start="481:25" pos:end="481:25">*</modifier></type><name pos:start="481:26" pos:end="481:32">dyn_buf</name></decl>;</decl_stmt>

            <decl_stmt pos:start="483:13" pos:end="483:25"><decl pos:start="483:13" pos:end="483:24"><type pos:start="483:13" pos:end="483:21"><name pos:start="483:13" pos:end="483:19">uint8_t</name> <modifier pos:start="483:21" pos:end="483:21">*</modifier></type><name pos:start="483:22" pos:end="483:24">buf</name></decl>;</decl_stmt>

            <decl_stmt pos:start="485:13" pos:end="485:20"><decl pos:start="485:13" pos:end="485:19"><type pos:start="485:13" pos:end="485:15"><name pos:start="485:13" pos:end="485:15">int</name></type> <name pos:start="485:17" pos:end="485:19">len</name></decl>;</decl_stmt>



            <if_stmt pos:start="489:13" pos:end="491:39"><if pos:start="489:13" pos:end="491:39">if <condition pos:start="489:16" pos:end="489:48">(<expr pos:start="489:17" pos:end="489:47"><call pos:start="489:17" pos:end="489:43"><name pos:start="489:17" pos:end="489:33">avio_open_dyn_buf</name><argument_list pos:start="489:34" pos:end="489:43">(<argument pos:start="489:35" pos:end="489:42"><expr pos:start="489:35" pos:end="489:42"><operator pos:start="489:35" pos:end="489:35">&amp;</operator><name pos:start="489:36" pos:end="489:42">dyn_buf</name></expr></argument>)</argument_list></call> <operator pos:start="489:45" pos:end="489:45">&lt;</operator> <literal type="number" pos:start="489:47" pos:end="489:47">0</literal></expr>)</condition><block type="pseudo" pos:start="491:17" pos:end="491:39"><block_content pos:start="491:17" pos:end="491:39">

                <return pos:start="491:17" pos:end="491:39">return <expr pos:start="491:24" pos:end="491:38"><call pos:start="491:24" pos:end="491:38"><name pos:start="491:24" pos:end="491:30">AVERROR</name><argument_list pos:start="491:31" pos:end="491:38">(<argument pos:start="491:32" pos:end="491:37"><expr pos:start="491:32" pos:end="491:37"><name pos:start="491:32" pos:end="491:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="495:13" pos:end="495:44"><expr pos:start="495:13" pos:end="495:43"><call pos:start="495:13" pos:end="495:43"><name pos:start="495:13" pos:end="495:28">avio_put_str16le</name><argument_list pos:start="495:29" pos:end="495:43">(<argument pos:start="495:30" pos:end="495:36"><expr pos:start="495:30" pos:end="495:36"><name pos:start="495:30" pos:end="495:36">dyn_buf</name></expr></argument>, <argument pos:start="495:39" pos:end="495:42"><expr pos:start="495:39" pos:end="495:42"><name pos:start="495:39" pos:end="495:42">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="497:13" pos:end="497:52"><expr pos:start="497:13" pos:end="497:51"><name pos:start="497:13" pos:end="497:15">len</name> <operator pos:start="497:17" pos:end="497:17">=</operator> <call pos:start="497:19" pos:end="497:51"><name pos:start="497:19" pos:end="497:36">avio_close_dyn_buf</name><argument_list pos:start="497:37" pos:end="497:51">(<argument pos:start="497:38" pos:end="497:44"><expr pos:start="497:38" pos:end="497:44"><name pos:start="497:38" pos:end="497:44">dyn_buf</name></expr></argument>, <argument pos:start="497:47" pos:end="497:50"><expr pos:start="497:47" pos:end="497:50"><operator pos:start="497:47" pos:end="497:47">&amp;</operator><name pos:start="497:48" pos:end="497:50">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="499:13" pos:end="499:35"><expr pos:start="499:13" pos:end="499:34"><call pos:start="499:13" pos:end="499:34"><name pos:start="499:13" pos:end="499:21">avio_wl16</name><argument_list pos:start="499:22" pos:end="499:34">(<argument pos:start="499:23" pos:end="499:24"><expr pos:start="499:23" pos:end="499:24"><name pos:start="499:23" pos:end="499:24">pb</name></expr></argument>, <argument pos:start="499:27" pos:end="499:33"><expr pos:start="499:27" pos:end="499:33"><name pos:start="499:27" pos:end="499:29">len</name> <operator pos:start="499:31" pos:end="499:31">/</operator> <literal type="number" pos:start="499:33" pos:end="499:33">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="499:37" pos:end="499:83">// "number of characters" = length in bytes / 2</comment>



            <expr_stmt pos:start="503:13" pos:end="503:37"><expr pos:start="503:13" pos:end="503:36"><call pos:start="503:13" pos:end="503:36"><name pos:start="503:13" pos:end="503:22">avio_write</name><argument_list pos:start="503:23" pos:end="503:36">(<argument pos:start="503:24" pos:end="503:25"><expr pos:start="503:24" pos:end="503:25"><name pos:start="503:24" pos:end="503:25">pb</name></expr></argument>, <argument pos:start="503:28" pos:end="503:30"><expr pos:start="503:28" pos:end="503:30"><name pos:start="503:28" pos:end="503:30">buf</name></expr></argument>, <argument pos:start="503:33" pos:end="503:35"><expr pos:start="503:33" pos:end="503:35"><name pos:start="503:33" pos:end="503:35">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="505:13" pos:end="505:27"><expr pos:start="505:13" pos:end="505:26"><call pos:start="505:13" pos:end="505:26"><name pos:start="505:13" pos:end="505:20">av_freep</name><argument_list pos:start="505:21" pos:end="505:26">(<argument pos:start="505:22" pos:end="505:25"><expr pos:start="505:22" pos:end="505:25"><operator pos:start="505:22" pos:end="505:22">&amp;</operator><name pos:start="505:23" pos:end="505:25">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="507:11" pos:end="509:29">else<block type="pseudo" pos:start="509:13" pos:end="509:29"><block_content pos:start="509:13" pos:end="509:29">

            <expr_stmt pos:start="509:13" pos:end="509:29"><expr pos:start="509:13" pos:end="509:28"><call pos:start="509:13" pos:end="509:28"><name pos:start="509:13" pos:end="509:21">avio_wl16</name><argument_list pos:start="509:22" pos:end="509:28">(<argument pos:start="509:23" pos:end="509:24"><expr pos:start="509:23" pos:end="509:24"><name pos:start="509:23" pos:end="509:24">pb</name></expr></argument>, <argument pos:start="509:27" pos:end="509:27"><expr pos:start="509:27" pos:end="509:27"><literal type="number" pos:start="509:27" pos:end="509:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="513:9" pos:end="513:25"><expr pos:start="513:9" pos:end="513:24"><call pos:start="513:9" pos:end="513:24"><name pos:start="513:9" pos:end="513:17">avio_wl16</name><argument_list pos:start="513:18" pos:end="513:24">(<argument pos:start="513:19" pos:end="513:20"><expr pos:start="513:19" pos:end="513:20"><name pos:start="513:19" pos:end="513:20">pb</name></expr></argument>, <argument pos:start="513:23" pos:end="513:23"><expr pos:start="513:23" pos:end="513:23"><literal type="number" pos:start="513:23" pos:end="513:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="513:27" pos:end="513:45">/* no parameters */</comment>



        <comment type="block" pos:start="517:9" pos:end="517:16">/* id */</comment>

        <if_stmt pos:start="519:9" pos:end="531:9"><if pos:start="519:9" pos:end="525:9">if <condition pos:start="519:12" pos:end="519:50">(<expr pos:start="519:13" pos:end="519:49"><name pos:start="519:13" pos:end="519:27"><name pos:start="519:13" pos:end="519:15">enc</name><operator pos:start="519:16" pos:end="519:17">-&gt;</operator><name pos:start="519:18" pos:end="519:27">codec_type</name></name> <operator pos:start="519:29" pos:end="519:30">==</operator> <name pos:start="519:32" pos:end="519:49">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="519:52" pos:end="525:9">{<block_content pos:start="521:13" pos:end="523:42">

            <expr_stmt pos:start="521:13" pos:end="521:29"><expr pos:start="521:13" pos:end="521:28"><call pos:start="521:13" pos:end="521:28"><name pos:start="521:13" pos:end="521:21">avio_wl16</name><argument_list pos:start="521:22" pos:end="521:28">(<argument pos:start="521:23" pos:end="521:24"><expr pos:start="521:23" pos:end="521:24"><name pos:start="521:23" pos:end="521:24">pb</name></expr></argument>, <argument pos:start="521:27" pos:end="521:27"><expr pos:start="521:27" pos:end="521:27"><literal type="number" pos:start="521:27" pos:end="521:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="523:13" pos:end="523:42"><expr pos:start="523:13" pos:end="523:41"><call pos:start="523:13" pos:end="523:41"><name pos:start="523:13" pos:end="523:21">avio_wl16</name><argument_list pos:start="523:22" pos:end="523:41">(<argument pos:start="523:23" pos:end="523:24"><expr pos:start="523:23" pos:end="523:24"><name pos:start="523:23" pos:end="523:24">pb</name></expr></argument>, <argument pos:start="523:27" pos:end="523:40"><expr pos:start="523:27" pos:end="523:40"><name pos:start="523:27" pos:end="523:40"><name pos:start="523:27" pos:end="523:29">enc</name><operator pos:start="523:30" pos:end="523:31">-&gt;</operator><name pos:start="523:32" pos:end="523:40">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="525:11" pos:end="531:9">else <block pos:start="525:16" pos:end="531:9">{<block_content pos:start="527:13" pos:end="529:42">

            <expr_stmt pos:start="527:13" pos:end="527:29"><expr pos:start="527:13" pos:end="527:28"><call pos:start="527:13" pos:end="527:28"><name pos:start="527:13" pos:end="527:21">avio_wl16</name><argument_list pos:start="527:22" pos:end="527:28">(<argument pos:start="527:23" pos:end="527:24"><expr pos:start="527:23" pos:end="527:24"><name pos:start="527:23" pos:end="527:24">pb</name></expr></argument>, <argument pos:start="527:27" pos:end="527:27"><expr pos:start="527:27" pos:end="527:27"><literal type="number" pos:start="527:27" pos:end="527:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="529:13" pos:end="529:42"><expr pos:start="529:13" pos:end="529:41"><call pos:start="529:13" pos:end="529:41"><name pos:start="529:13" pos:end="529:21">avio_wl32</name><argument_list pos:start="529:22" pos:end="529:41">(<argument pos:start="529:23" pos:end="529:24"><expr pos:start="529:23" pos:end="529:24"><name pos:start="529:23" pos:end="529:24">pb</name></expr></argument>, <argument pos:start="529:27" pos:end="529:40"><expr pos:start="529:27" pos:end="529:40"><name pos:start="529:27" pos:end="529:40"><name pos:start="529:27" pos:end="529:29">enc</name><operator pos:start="529:30" pos:end="529:31">-&gt;</operator><name pos:start="529:32" pos:end="529:40">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="533:9" pos:end="535:22"><if pos:start="533:9" pos:end="535:22">if <condition pos:start="533:12" pos:end="533:28">(<expr pos:start="533:13" pos:end="533:27"><operator pos:start="533:13" pos:end="533:13">!</operator><name pos:start="533:14" pos:end="533:27"><name pos:start="533:14" pos:end="533:16">enc</name><operator pos:start="533:17" pos:end="533:18">-&gt;</operator><name pos:start="533:19" pos:end="533:27">codec_tag</name></name></expr>)</condition><block type="pseudo" pos:start="535:13" pos:end="535:22"><block_content pos:start="535:13" pos:end="535:22">

            <return pos:start="535:13" pos:end="535:22">return <expr pos:start="535:20" pos:end="535:21"><operator pos:start="535:20" pos:end="535:20">-</operator><literal type="number" pos:start="535:21" pos:end="535:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="539:5" pos:end="539:25"><expr pos:start="539:5" pos:end="539:24"><call pos:start="539:5" pos:end="539:24"><name pos:start="539:5" pos:end="539:14">end_header</name><argument_list pos:start="539:15" pos:end="539:24">(<argument pos:start="539:16" pos:end="539:17"><expr pos:start="539:16" pos:end="539:17"><name pos:start="539:16" pos:end="539:17">pb</name></expr></argument>, <argument pos:start="539:20" pos:end="539:23"><expr pos:start="539:20" pos:end="539:23"><name pos:start="539:20" pos:end="539:23">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="543:5" pos:end="543:38">/* patch the header size fields */</comment>



    <expr_stmt pos:start="547:5" pos:end="547:32"><expr pos:start="547:5" pos:end="547:31"><name pos:start="547:5" pos:end="547:11">cur_pos</name>     <operator pos:start="547:17" pos:end="547:17">=</operator> <call pos:start="547:19" pos:end="547:31"><name pos:start="547:19" pos:end="547:27">avio_tell</name><argument_list pos:start="547:28" pos:end="547:31">(<argument pos:start="547:29" pos:end="547:30"><expr pos:start="547:29" pos:end="547:30"><name pos:start="547:29" pos:end="547:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="549:5" pos:end="549:42"><expr pos:start="549:5" pos:end="549:41"><name pos:start="549:5" pos:end="549:15">header_size</name> <operator pos:start="549:17" pos:end="549:17">=</operator> <name pos:start="549:19" pos:end="549:25">cur_pos</name> <operator pos:start="549:27" pos:end="549:27">-</operator> <name pos:start="549:29" pos:end="549:41">header_offset</name></expr>;</expr_stmt>

    <if_stmt pos:start="551:5" pos:end="569:5"><if pos:start="551:5" pos:end="569:5">if <condition pos:start="551:8" pos:end="551:25">(<expr pos:start="551:9" pos:end="551:24"><name pos:start="551:9" pos:end="551:24"><name pos:start="551:9" pos:end="551:11">asf</name><operator pos:start="551:12" pos:end="551:13">-&gt;</operator><name pos:start="551:14" pos:end="551:24">is_streamed</name></name></expr>)</condition> <block pos:start="551:27" pos:end="569:5">{<block_content pos:start="553:9" pos:end="567:49">

        <expr_stmt pos:start="553:9" pos:end="553:49"><expr pos:start="553:9" pos:end="553:48"><name pos:start="553:9" pos:end="553:19">header_size</name> <operator pos:start="553:21" pos:end="553:22">+=</operator> <literal type="number" pos:start="553:24" pos:end="553:26">8</literal> <operator pos:start="553:26" pos:end="553:26">+</operator> <literal type="number" pos:start="553:28" pos:end="553:31">30</literal> <operator pos:start="553:31" pos:end="553:31">+</operator> <name pos:start="553:33" pos:end="553:48">DATA_HEADER_SIZE</name></expr>;</expr_stmt>



        <expr_stmt pos:start="557:9" pos:end="557:57"><expr pos:start="557:9" pos:end="557:56"><call pos:start="557:9" pos:end="557:56"><name pos:start="557:9" pos:end="557:17">avio_seek</name><argument_list pos:start="557:18" pos:end="557:56">(<argument pos:start="557:19" pos:end="557:20"><expr pos:start="557:19" pos:end="557:20"><name pos:start="557:19" pos:end="557:20">pb</name></expr></argument>, <argument pos:start="557:23" pos:end="557:45"><expr pos:start="557:23" pos:end="557:45"><name pos:start="557:23" pos:end="557:35">header_offset</name> <operator pos:start="557:37" pos:end="557:37">-</operator> <literal type="number" pos:start="557:39" pos:end="557:42">10</literal> <operator pos:start="557:42" pos:end="557:42">-</operator> <literal type="number" pos:start="557:44" pos:end="557:45">30</literal></expr></argument>, <argument pos:start="557:48" pos:end="557:55"><expr pos:start="557:48" pos:end="557:55"><name pos:start="557:48" pos:end="557:55">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="559:9" pos:end="559:35"><expr pos:start="559:9" pos:end="559:34"><call pos:start="559:9" pos:end="559:34"><name pos:start="559:9" pos:end="559:17">avio_wl16</name><argument_list pos:start="559:18" pos:end="559:34">(<argument pos:start="559:19" pos:end="559:20"><expr pos:start="559:19" pos:end="559:20"><name pos:start="559:19" pos:end="559:20">pb</name></expr></argument>, <argument pos:start="559:23" pos:end="559:33"><expr pos:start="559:23" pos:end="559:33"><name pos:start="559:23" pos:end="559:33">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="561:9" pos:end="561:56"><expr pos:start="561:9" pos:end="561:55"><call pos:start="561:9" pos:end="561:55"><name pos:start="561:9" pos:end="561:17">avio_seek</name><argument_list pos:start="561:18" pos:end="561:55">(<argument pos:start="561:19" pos:end="561:20"><expr pos:start="561:19" pos:end="561:20"><name pos:start="561:19" pos:end="561:20">pb</name></expr></argument>, <argument pos:start="561:23" pos:end="561:44"><expr pos:start="561:23" pos:end="561:44"><name pos:start="561:23" pos:end="561:35">header_offset</name> <operator pos:start="561:37" pos:end="561:37">-</operator> <literal type="number" pos:start="561:39" pos:end="561:41">2</literal> <operator pos:start="561:41" pos:end="561:41">-</operator> <literal type="number" pos:start="561:43" pos:end="561:44">30</literal></expr></argument>, <argument pos:start="561:47" pos:end="561:54"><expr pos:start="561:47" pos:end="561:54"><name pos:start="561:47" pos:end="561:54">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="563:9" pos:end="563:35"><expr pos:start="563:9" pos:end="563:34"><call pos:start="563:9" pos:end="563:34"><name pos:start="563:9" pos:end="563:17">avio_wl16</name><argument_list pos:start="563:18" pos:end="563:34">(<argument pos:start="563:19" pos:end="563:20"><expr pos:start="563:19" pos:end="563:20"><name pos:start="563:19" pos:end="563:20">pb</name></expr></argument>, <argument pos:start="563:23" pos:end="563:33"><expr pos:start="563:23" pos:end="563:33"><name pos:start="563:23" pos:end="563:33">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="567:9" pos:end="567:49"><expr pos:start="567:9" pos:end="567:48"><name pos:start="567:9" pos:end="567:19">header_size</name> <operator pos:start="567:21" pos:end="567:22">-=</operator> <literal type="number" pos:start="567:24" pos:end="567:26">8</literal> <operator pos:start="567:26" pos:end="567:26">+</operator> <literal type="number" pos:start="567:28" pos:end="567:31">30</literal> <operator pos:start="567:31" pos:end="567:31">+</operator> <name pos:start="567:33" pos:end="567:48">DATA_HEADER_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="571:5" pos:end="571:26"><expr pos:start="571:5" pos:end="571:25"><name pos:start="571:5" pos:end="571:15">header_size</name> <operator pos:start="571:17" pos:end="571:18">+=</operator> <literal type="number" pos:start="571:20" pos:end="571:23">24</literal> <operator pos:start="571:23" pos:end="571:23">+</operator> <literal type="number" pos:start="571:25" pos:end="571:25">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="573:5" pos:end="573:48"><expr pos:start="573:5" pos:end="573:47"><call pos:start="573:5" pos:end="573:47"><name pos:start="573:5" pos:end="573:13">avio_seek</name><argument_list pos:start="573:14" pos:end="573:47">(<argument pos:start="573:15" pos:end="573:16"><expr pos:start="573:15" pos:end="573:16"><name pos:start="573:15" pos:end="573:16">pb</name></expr></argument>, <argument pos:start="573:19" pos:end="573:36"><expr pos:start="573:19" pos:end="573:36"><name pos:start="573:19" pos:end="573:31">header_offset</name> <operator pos:start="573:33" pos:end="573:33">-</operator> <literal type="number" pos:start="573:35" pos:end="573:36">14</literal></expr></argument>, <argument pos:start="573:39" pos:end="573:46"><expr pos:start="573:39" pos:end="573:46"><name pos:start="573:39" pos:end="573:46">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="575:5" pos:end="575:31"><expr pos:start="575:5" pos:end="575:30"><call pos:start="575:5" pos:end="575:30"><name pos:start="575:5" pos:end="575:13">avio_wl64</name><argument_list pos:start="575:14" pos:end="575:30">(<argument pos:start="575:15" pos:end="575:16"><expr pos:start="575:15" pos:end="575:16"><name pos:start="575:15" pos:end="575:16">pb</name></expr></argument>, <argument pos:start="575:19" pos:end="575:29"><expr pos:start="575:19" pos:end="575:29"><name pos:start="575:19" pos:end="575:29">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="577:5" pos:end="577:37"><expr pos:start="577:5" pos:end="577:36"><call pos:start="577:5" pos:end="577:36"><name pos:start="577:5" pos:end="577:13">avio_seek</name><argument_list pos:start="577:14" pos:end="577:36">(<argument pos:start="577:15" pos:end="577:16"><expr pos:start="577:15" pos:end="577:16"><name pos:start="577:15" pos:end="577:16">pb</name></expr></argument>, <argument pos:start="577:19" pos:end="577:25"><expr pos:start="577:19" pos:end="577:25"><name pos:start="577:19" pos:end="577:25">cur_pos</name></expr></argument>, <argument pos:start="577:28" pos:end="577:35"><expr pos:start="577:28" pos:end="577:35"><name pos:start="577:28" pos:end="577:35">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="581:5" pos:end="581:57">/* movie chunk, followed by packets of packet_size */</comment>

    <expr_stmt pos:start="583:5" pos:end="583:31"><expr pos:start="583:5" pos:end="583:30"><name pos:start="583:5" pos:end="583:20"><name pos:start="583:5" pos:end="583:7">asf</name><operator pos:start="583:8" pos:end="583:9">-&gt;</operator><name pos:start="583:10" pos:end="583:20">data_offset</name></name> <operator pos:start="583:22" pos:end="583:22">=</operator> <name pos:start="583:24" pos:end="583:30">cur_pos</name></expr>;</expr_stmt>

    <expr_stmt pos:start="585:5" pos:end="585:41"><expr pos:start="585:5" pos:end="585:40"><call pos:start="585:5" pos:end="585:40"><name pos:start="585:5" pos:end="585:15">ff_put_guid</name><argument_list pos:start="585:16" pos:end="585:40">(<argument pos:start="585:17" pos:end="585:18"><expr pos:start="585:17" pos:end="585:18"><name pos:start="585:17" pos:end="585:18">pb</name></expr></argument>, <argument pos:start="585:21" pos:end="585:39"><expr pos:start="585:21" pos:end="585:39"><operator pos:start="585:21" pos:end="585:21">&amp;</operator><name pos:start="585:22" pos:end="585:39">ff_asf_data_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="587:5" pos:end="587:35"><expr pos:start="587:5" pos:end="587:34"><call pos:start="587:5" pos:end="587:34"><name pos:start="587:5" pos:end="587:13">avio_wl64</name><argument_list pos:start="587:14" pos:end="587:34">(<argument pos:start="587:15" pos:end="587:16"><expr pos:start="587:15" pos:end="587:16"><name pos:start="587:15" pos:end="587:16">pb</name></expr></argument>, <argument pos:start="587:19" pos:end="587:33"><expr pos:start="587:19" pos:end="587:33"><name pos:start="587:19" pos:end="587:33">data_chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="589:5" pos:end="589:37"><expr pos:start="589:5" pos:end="589:36"><call pos:start="589:5" pos:end="589:36"><name pos:start="589:5" pos:end="589:15">ff_put_guid</name><argument_list pos:start="589:16" pos:end="589:36">(<argument pos:start="589:17" pos:end="589:18"><expr pos:start="589:17" pos:end="589:18"><name pos:start="589:17" pos:end="589:18">pb</name></expr></argument>, <argument pos:start="589:21" pos:end="589:35"><expr pos:start="589:21" pos:end="589:35"><operator pos:start="589:21" pos:end="589:21">&amp;</operator><name pos:start="589:22" pos:end="589:35">ff_asf_my_guid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="591:5" pos:end="591:35"><expr pos:start="591:5" pos:end="591:34"><call pos:start="591:5" pos:end="591:34"><name pos:start="591:5" pos:end="591:13">avio_wl64</name><argument_list pos:start="591:14" pos:end="591:34">(<argument pos:start="591:15" pos:end="591:16"><expr pos:start="591:15" pos:end="591:16"><name pos:start="591:15" pos:end="591:16">pb</name></expr></argument>, <argument pos:start="591:19" pos:end="591:33"><expr pos:start="591:19" pos:end="591:33"><name pos:start="591:19" pos:end="591:33"><name pos:start="591:19" pos:end="591:21">asf</name><operator pos:start="591:22" pos:end="591:23">-&gt;</operator><name pos:start="591:24" pos:end="591:33">nb_packets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="591:37" pos:end="591:52">/* nb packets */</comment>

    <expr_stmt pos:start="593:5" pos:end="593:19"><expr pos:start="593:5" pos:end="593:18"><call pos:start="593:5" pos:end="593:18"><name pos:start="593:5" pos:end="593:11">avio_w8</name><argument_list pos:start="593:12" pos:end="593:18">(<argument pos:start="593:13" pos:end="593:14"><expr pos:start="593:13" pos:end="593:14"><name pos:start="593:13" pos:end="593:14">pb</name></expr></argument>, <argument pos:start="593:17" pos:end="593:17"><expr pos:start="593:17" pos:end="593:17"><literal type="number" pos:start="593:17" pos:end="593:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="593:21" pos:end="593:29">/* ??? */</comment>

    <expr_stmt pos:start="595:5" pos:end="595:19"><expr pos:start="595:5" pos:end="595:18"><call pos:start="595:5" pos:end="595:18"><name pos:start="595:5" pos:end="595:11">avio_w8</name><argument_list pos:start="595:12" pos:end="595:18">(<argument pos:start="595:13" pos:end="595:14"><expr pos:start="595:13" pos:end="595:14"><name pos:start="595:13" pos:end="595:14">pb</name></expr></argument>, <argument pos:start="595:17" pos:end="595:17"><expr pos:start="595:17" pos:end="595:17"><literal type="number" pos:start="595:17" pos:end="595:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="595:21" pos:end="595:29">/* ??? */</comment>

    <return pos:start="597:5" pos:end="597:13">return <expr pos:start="597:12" pos:end="597:12"><literal type="number" pos:start="597:12" pos:end="597:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
