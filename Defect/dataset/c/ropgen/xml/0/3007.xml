<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3007.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">serial_parse</name><parameter_list pos:start="1:24" pos:end="1:44">(<parameter pos:start="1:25" pos:end="1:43"><decl pos:start="1:25" pos:end="1:43"><type pos:start="1:25" pos:end="1:36"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:43">devname</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:20">index</name> <init pos:start="5:22" pos:end="5:24">= <expr pos:start="5:24" pos:end="5:24"><literal type="number" pos:start="5:24" pos:end="5:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:18"><name pos:start="7:10" pos:end="7:14">label</name><index pos:start="7:15" pos:end="7:18">[<expr pos:start="7:16" pos:end="7:17"><literal type="number" pos:start="7:16" pos:end="7:17">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:37">(<expr pos:start="11:9" pos:end="11:36"><call pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:14">strcmp</name><argument_list pos:start="11:15" pos:end="11:31">(<argument pos:start="11:16" pos:end="11:22"><expr pos:start="11:16" pos:end="11:22"><name pos:start="11:16" pos:end="11:22">devname</name></expr></argument>, <argument pos:start="11:25" pos:end="11:30"><expr pos:start="11:25" pos:end="11:30"><literal type="string" pos:start="11:25" pos:end="11:30">"none"</literal></expr></argument>)</argument_list></call> <operator pos:start="11:33" pos:end="11:34">==</operator> <literal type="number" pos:start="11:36" pos:end="11:36">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:34">(<expr pos:start="15:9" pos:end="15:33"><name pos:start="15:9" pos:end="15:13">index</name> <operator pos:start="15:15" pos:end="15:16">==</operator> <name pos:start="15:18" pos:end="15:33">MAX_SERIAL_PORTS</name></expr>)</condition> <block pos:start="15:36" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:16">

        <expr_stmt pos:start="17:9" pos:end="17:57"><expr pos:start="17:9" pos:end="17:56"><call pos:start="17:9" pos:end="17:56"><name pos:start="17:9" pos:end="17:15">fprintf</name><argument_list pos:start="17:16" pos:end="17:56">(<argument pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">stderr</name></expr></argument>, <argument pos:start="17:25" pos:end="17:55"><expr pos:start="17:25" pos:end="17:55"><literal type="string" pos:start="17:25" pos:end="17:55">"qemu: too many serial ports\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:16"><expr pos:start="19:9" pos:end="19:15"><call pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:12">exit</name><argument_list pos:start="19:13" pos:end="19:15">(<argument pos:start="19:14" pos:end="19:14"><expr pos:start="19:14" pos:end="19:14"><literal type="number" pos:start="19:14" pos:end="19:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><call pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:12">snprintf</name><argument_list pos:start="23:13" pos:end="23:53">(<argument pos:start="23:14" pos:end="23:18"><expr pos:start="23:14" pos:end="23:18"><name pos:start="23:14" pos:end="23:18">label</name></expr></argument>, <argument pos:start="23:21" pos:end="23:33"><expr pos:start="23:21" pos:end="23:33"><sizeof pos:start="23:21" pos:end="23:33">sizeof<argument_list pos:start="23:27" pos:end="23:33">(<argument pos:start="23:28" pos:end="23:32"><expr pos:start="23:28" pos:end="23:32"><name pos:start="23:28" pos:end="23:32">label</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="23:36" pos:end="23:45"><expr pos:start="23:36" pos:end="23:45"><literal type="string" pos:start="23:36" pos:end="23:45">"serial%d"</literal></expr></argument>, <argument pos:start="23:48" pos:end="23:52"><expr pos:start="23:48" pos:end="23:52"><name pos:start="23:48" pos:end="23:52">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:59"><expr pos:start="25:5" pos:end="25:58"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:14">serial_hds</name><index pos:start="25:15" pos:end="25:21">[<expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">index</name></expr>]</index></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <call pos:start="25:25" pos:end="25:58"><name pos:start="25:25" pos:end="25:36">qemu_chr_new</name><argument_list pos:start="25:37" pos:end="25:58">(<argument pos:start="25:38" pos:end="25:42"><expr pos:start="25:38" pos:end="25:42"><name pos:start="25:38" pos:end="25:42">label</name></expr></argument>, <argument pos:start="25:45" pos:end="25:51"><expr pos:start="25:45" pos:end="25:51"><name pos:start="25:45" pos:end="25:51">devname</name></expr></argument>, <argument pos:start="25:54" pos:end="25:57"><expr pos:start="25:54" pos:end="25:57"><name pos:start="25:54" pos:end="25:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:27">(<expr pos:start="27:9" pos:end="27:26"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:26"><name pos:start="27:10" pos:end="27:19">serial_hds</name><index pos:start="27:20" pos:end="27:26">[<expr pos:start="27:21" pos:end="27:25"><name pos:start="27:21" pos:end="27:25">index</name></expr>]</index></name></expr>)</condition> <block pos:start="27:29" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:18">

        <expr_stmt pos:start="29:9" pos:end="31:57"><expr pos:start="29:9" pos:end="31:56"><call pos:start="29:9" pos:end="31:56"><name pos:start="29:9" pos:end="29:15">fprintf</name><argument_list pos:start="29:16" pos:end="31:56">(<argument pos:start="29:17" pos:end="29:22"><expr pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:22">stderr</name></expr></argument>, <argument pos:start="29:25" pos:end="31:46"><expr pos:start="29:25" pos:end="31:46"><literal type="string" pos:start="29:25" pos:end="29:63">"qemu: could not connect serial device"</literal>

                <literal type="string" pos:start="31:17" pos:end="31:46">" to character backend '%s'\n"</literal></expr></argument>, <argument pos:start="31:49" pos:end="31:55"><expr pos:start="31:49" pos:end="31:55"><name pos:start="31:49" pos:end="31:55">devname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:12"><expr pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:9">index</name><operator pos:start="37:10" pos:end="37:11">++</operator></expr>;</expr_stmt>

    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
