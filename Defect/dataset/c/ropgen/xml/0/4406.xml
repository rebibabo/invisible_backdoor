<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4406.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">decode_mb</name><parameter_list pos:start="1:22" pos:end="1:47">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">MadContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">t</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:46"><decl pos:start="1:38" pos:end="1:46"><type pos:start="1:38" pos:end="1:46"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:46">inter</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:5">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">t</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">mv_map</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">mv_x</name></decl>, <decl pos:start="9:15" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:18">mv_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">j</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="33:5"><if pos:start="15:5" pos:end="33:5">if <condition pos:start="15:8" pos:end="15:14">(<expr pos:start="15:9" pos:end="15:13"><name pos:start="15:9" pos:end="15:13">inter</name></expr>)</condition> <block pos:start="15:16" pos:end="33:5">{<block_content pos:start="17:9" pos:end="31:9">

        <decl_stmt pos:start="17:9" pos:end="17:34"><decl pos:start="17:9" pos:end="17:33"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">v</name> <init pos:start="17:15" pos:end="17:33">= <expr pos:start="17:17" pos:end="17:33"><call pos:start="17:17" pos:end="17:33"><name pos:start="17:17" pos:end="17:25">decode210</name><argument_list pos:start="17:26" pos:end="17:33">(<argument pos:start="17:27" pos:end="17:32"><expr pos:start="17:27" pos:end="17:32"><operator pos:start="17:27" pos:end="17:27">&amp;</operator><name pos:start="17:28" pos:end="17:32"><name pos:start="17:28" pos:end="17:28">s</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:32">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="19:9" pos:end="31:9"><if pos:start="19:9" pos:end="27:9">if <condition pos:start="19:12" pos:end="19:18">(<expr pos:start="19:13" pos:end="19:17"><name pos:start="19:13" pos:end="19:13">v</name> <operator pos:start="19:15" pos:end="19:15">&lt;</operator> <literal type="number" pos:start="19:17" pos:end="19:17">2</literal></expr>)</condition> <block pos:start="19:20" pos:end="27:9">{<block_content pos:start="21:13" pos:end="25:41">

            <expr_stmt pos:start="21:13" pos:end="21:50"><expr pos:start="21:13" pos:end="21:49"><name pos:start="21:13" pos:end="21:18">mv_map</name> <operator pos:start="21:20" pos:end="21:20">=</operator> <ternary pos:start="21:22" pos:end="21:49"><condition pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:22"><name pos:start="21:22" pos:end="21:22">v</name></expr> ?</condition><then pos:start="21:26" pos:end="21:44"> <expr pos:start="21:26" pos:end="21:44"><call pos:start="21:26" pos:end="21:44"><name pos:start="21:26" pos:end="21:33">get_bits</name><argument_list pos:start="21:34" pos:end="21:44">(<argument pos:start="21:35" pos:end="21:40"><expr pos:start="21:35" pos:end="21:40"><operator pos:start="21:35" pos:end="21:35">&amp;</operator><name pos:start="21:36" pos:end="21:40"><name pos:start="21:36" pos:end="21:36">s</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:40">gb</name></name></expr></argument>, <argument pos:start="21:43" pos:end="21:43"><expr pos:start="21:43" pos:end="21:43"><literal type="number" pos:start="21:43" pos:end="21:43">6</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="21:46" pos:end="21:49">: <expr pos:start="21:48" pos:end="21:49"><literal type="number" pos:start="21:48" pos:end="21:49">63</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:41"><expr pos:start="23:13" pos:end="23:40"><name pos:start="23:13" pos:end="23:16">mv_x</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <call pos:start="23:20" pos:end="23:40"><name pos:start="23:20" pos:end="23:32">decode_motion</name><argument_list pos:start="23:33" pos:end="23:40">(<argument pos:start="23:34" pos:end="23:39"><expr pos:start="23:34" pos:end="23:39"><operator pos:start="23:34" pos:end="23:34">&amp;</operator><name pos:start="23:35" pos:end="23:39"><name pos:start="23:35" pos:end="23:35">s</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:41"><expr pos:start="25:13" pos:end="25:40"><name pos:start="25:13" pos:end="25:16">mv_y</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <call pos:start="25:20" pos:end="25:40"><name pos:start="25:20" pos:end="25:32">decode_motion</name><argument_list pos:start="25:33" pos:end="25:40">(<argument pos:start="25:34" pos:end="25:39"><expr pos:start="25:34" pos:end="25:39"><operator pos:start="25:34" pos:end="25:34">&amp;</operator><name pos:start="25:35" pos:end="25:39"><name pos:start="25:35" pos:end="25:35">s</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="27:11" pos:end="31:9">else <block pos:start="27:16" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:23">

            <expr_stmt pos:start="29:13" pos:end="29:23"><expr pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:18">mv_map</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="37:5" pos:end="57:5">for <control pos:start="37:9" pos:end="37:23">(<init pos:start="37:10" pos:end="37:13"><expr pos:start="37:10" pos:end="37:12"><name pos:start="37:10" pos:end="37:10">j</name><operator pos:start="37:11" pos:end="37:11">=</operator><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</init> <condition pos:start="37:15" pos:end="37:18"><expr pos:start="37:15" pos:end="37:17"><name pos:start="37:15" pos:end="37:15">j</name><operator pos:start="37:16" pos:end="37:16">&lt;</operator><literal type="number" pos:start="37:17" pos:end="37:17">6</literal></expr>;</condition> <incr pos:start="37:20" pos:end="37:22"><expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:20">j</name><operator pos:start="37:21" pos:end="37:22">++</operator></expr></incr>)</control> <block pos:start="37:25" pos:end="57:5">{<block_content pos:start="39:9" pos:end="55:9">

        <if_stmt pos:start="39:9" pos:end="55:9"><if pos:start="39:9" pos:end="47:9">if <condition pos:start="39:12" pos:end="39:28">(<expr pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:18">mv_map</name> <operator pos:start="39:20" pos:end="39:20">&amp;</operator> <operator pos:start="39:22" pos:end="39:22">(</operator><literal type="number" pos:start="39:23" pos:end="39:23">1</literal><operator pos:start="39:24" pos:end="39:25">&lt;&lt;</operator><name pos:start="39:26" pos:end="39:26">j</name><operator pos:start="39:27" pos:end="39:27">)</operator></expr>)</condition> <block pos:start="39:30" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:68">  <comment type="line" pos:start="39:33" pos:end="39:70">// mv_x and mv_y are guarded by mv_map</comment>

            <decl_stmt pos:start="41:13" pos:end="41:46"><decl pos:start="41:13" pos:end="41:45"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:19">add</name> <init pos:start="41:21" pos:end="41:45">= <expr pos:start="41:23" pos:end="41:45"><literal type="number" pos:start="41:23" pos:end="41:23">2</literal><operator pos:start="41:24" pos:end="41:24">*</operator><call pos:start="41:25" pos:end="41:45"><name pos:start="41:25" pos:end="41:37">decode_motion</name><argument_list pos:start="41:38" pos:end="41:45">(<argument pos:start="41:39" pos:end="41:44"><expr pos:start="41:39" pos:end="41:44"><operator pos:start="41:39" pos:end="41:39">&amp;</operator><name pos:start="41:40" pos:end="41:44"><name pos:start="41:40" pos:end="41:40">s</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:44">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="43:13" pos:end="45:68"><if pos:start="43:13" pos:end="45:68">if <condition pos:start="43:16" pos:end="43:38">(<expr pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:17">t</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:29">last_frame</name><operator pos:start="43:30" pos:end="43:30">.</operator><name pos:start="43:31" pos:end="43:34">data</name><index pos:start="43:35" pos:end="43:37">[<expr pos:start="43:36" pos:end="43:36"><literal type="number" pos:start="43:36" pos:end="43:36">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:68"><block_content pos:start="45:17" pos:end="45:68">

                <expr_stmt pos:start="45:17" pos:end="45:68"><expr pos:start="45:17" pos:end="45:67"><call pos:start="45:17" pos:end="45:67"><name pos:start="45:17" pos:end="45:26">comp_block</name><argument_list pos:start="45:27" pos:end="45:67">(<argument pos:start="45:28" pos:end="45:28"><expr pos:start="45:28" pos:end="45:28"><name pos:start="45:28" pos:end="45:28">t</name></expr></argument>, <argument pos:start="45:31" pos:end="45:37"><expr pos:start="45:31" pos:end="45:37"><name pos:start="45:31" pos:end="45:37"><name pos:start="45:31" pos:end="45:31">s</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:37">mb_x</name></name></expr></argument>, <argument pos:start="45:40" pos:end="45:46"><expr pos:start="45:40" pos:end="45:46"><name pos:start="45:40" pos:end="45:46"><name pos:start="45:40" pos:end="45:40">s</name><operator pos:start="45:41" pos:end="45:42">-&gt;</operator><name pos:start="45:43" pos:end="45:46">mb_y</name></name></expr></argument>, <argument pos:start="45:49" pos:end="45:49"><expr pos:start="45:49" pos:end="45:49"><name pos:start="45:49" pos:end="45:49">j</name></expr></argument>, <argument pos:start="45:52" pos:end="45:55"><expr pos:start="45:52" pos:end="45:55"><name pos:start="45:52" pos:end="45:55">mv_x</name></expr></argument>, <argument pos:start="45:58" pos:end="45:61"><expr pos:start="45:58" pos:end="45:61"><name pos:start="45:58" pos:end="45:61">mv_y</name></expr></argument>, <argument pos:start="45:64" pos:end="45:66"><expr pos:start="45:64" pos:end="45:66"><name pos:start="45:64" pos:end="45:66">add</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="55:9">else <block pos:start="47:16" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:55">

            <expr_stmt pos:start="49:13" pos:end="49:41"><expr pos:start="49:13" pos:end="49:40"><call pos:start="49:13" pos:end="49:40"><name pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:18">dsp</name><operator pos:start="49:19" pos:end="49:19">.</operator><name pos:start="49:20" pos:end="49:30">clear_block</name></name><argument_list pos:start="49:31" pos:end="49:40">(<argument pos:start="49:32" pos:end="49:39"><expr pos:start="49:32" pos:end="49:39"><name pos:start="49:32" pos:end="49:39"><name pos:start="49:32" pos:end="49:32">t</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:39">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:44"><expr pos:start="51:13" pos:end="51:43"><call pos:start="51:13" pos:end="51:43"><name pos:start="51:13" pos:end="51:30">decode_block_intra</name><argument_list pos:start="51:31" pos:end="51:43">(<argument pos:start="51:32" pos:end="51:32"><expr pos:start="51:32" pos:end="51:32"><name pos:start="51:32" pos:end="51:32">t</name></expr></argument>, <argument pos:start="51:35" pos:end="51:42"><expr pos:start="51:35" pos:end="51:42"><name pos:start="51:35" pos:end="51:42"><name pos:start="51:35" pos:end="51:35">t</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:42">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:55"><expr pos:start="53:13" pos:end="53:54"><call pos:start="53:13" pos:end="53:54"><name pos:start="53:13" pos:end="53:20">idct_put</name><argument_list pos:start="53:21" pos:end="53:54">(<argument pos:start="53:22" pos:end="53:22"><expr pos:start="53:22" pos:end="53:22"><name pos:start="53:22" pos:end="53:22">t</name></expr></argument>, <argument pos:start="53:25" pos:end="53:32"><expr pos:start="53:25" pos:end="53:32"><name pos:start="53:25" pos:end="53:32"><name pos:start="53:25" pos:end="53:25">t</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:32">block</name></name></expr></argument>, <argument pos:start="53:35" pos:end="53:41"><expr pos:start="53:35" pos:end="53:41"><name pos:start="53:35" pos:end="53:41"><name pos:start="53:35" pos:end="53:35">s</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:41">mb_x</name></name></expr></argument>, <argument pos:start="53:44" pos:end="53:50"><expr pos:start="53:44" pos:end="53:50"><name pos:start="53:44" pos:end="53:50"><name pos:start="53:44" pos:end="53:44">s</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:50">mb_y</name></name></expr></argument>, <argument pos:start="53:53" pos:end="53:53"><expr pos:start="53:53" pos:end="53:53"><name pos:start="53:53" pos:end="53:53">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
