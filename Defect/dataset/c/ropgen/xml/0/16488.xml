<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16488.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">r4k_helper_tlbp</name><parameter_list pos:start="1:21" pos:end="1:39">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:33">CPUMIPSState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">r4k_tlb_t</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">tlb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:21">mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:20">tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:20">VPN</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:16">ASID</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:8">ASID</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <name pos:start="19:12" pos:end="19:27"><name pos:start="19:12" pos:end="19:14">env</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:27">CP0_EntryHi</name></name> <operator pos:start="19:29" pos:end="19:29">&amp;</operator> <literal type="number" pos:start="19:31" pos:end="19:34">0xFF</literal></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="51:5">for <control pos:start="21:9" pos:end="21:42">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:37"><expr pos:start="21:17" pos:end="21:36"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:36"><name pos:start="21:21" pos:end="21:23">env</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:28">tlb</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:36">nb_tlb</name></name></expr>;</condition> <incr pos:start="21:39" pos:end="21:41"><expr pos:start="21:39" pos:end="21:41"><name pos:start="21:39" pos:end="21:39">i</name><operator pos:start="21:40" pos:end="21:41">++</operator></expr></incr>)</control> <block pos:start="21:44" pos:end="51:5">{<block_content pos:start="23:9" pos:end="49:9">

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:11">tlb</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <operator pos:start="23:15" pos:end="23:15">&amp;</operator><name pos:start="23:16" pos:end="23:39"><name pos:start="23:16" pos:end="23:18">env</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:23">tlb</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:28">mmu</name><operator pos:start="23:29" pos:end="23:29">.</operator><name pos:start="23:30" pos:end="23:32">r4k</name><operator pos:start="23:33" pos:end="23:33">.</operator><name pos:start="23:34" pos:end="23:36">tlb</name><index pos:start="23:37" pos:end="23:39">[<expr pos:start="23:38" pos:end="23:38"><name pos:start="23:38" pos:end="23:38">i</name></expr>]</index></name></expr>;</expr_stmt>

        <comment type="block" pos:start="25:9" pos:end="25:41">/* 1k pages are not supported. */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:56"><expr pos:start="27:9" pos:end="27:55"><name pos:start="27:9" pos:end="27:12">mask</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:28"><name pos:start="27:16" pos:end="27:18">tlb</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:28">PageMask</name></name> <operator pos:start="27:30" pos:end="27:30">|</operator> <operator pos:start="27:32" pos:end="27:32">~</operator><operator pos:start="27:33" pos:end="27:33">(</operator><name pos:start="27:34" pos:end="27:49">TARGET_PAGE_MASK</name> <operator pos:start="27:51" pos:end="27:52">&lt;&lt;</operator> <literal type="number" pos:start="27:54" pos:end="27:54">1</literal><operator pos:start="27:55" pos:end="27:55">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:39"><expr pos:start="29:9" pos:end="29:38"><name pos:start="29:9" pos:end="29:11">tag</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:30"><name pos:start="29:15" pos:end="29:17">env</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:30">CP0_EntryHi</name></name> <operator pos:start="29:32" pos:end="29:32">&amp;</operator> <operator pos:start="29:34" pos:end="29:34">~</operator><name pos:start="29:35" pos:end="29:38">mask</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="34:0"><expr pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:11">VPN</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:22"><name pos:start="31:15" pos:end="31:17">tlb</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:22">VPN</name></name> <operator pos:start="31:24" pos:end="31:24">&amp;</operator> <operator pos:start="31:26" pos:end="31:26">~</operator><name pos:start="31:27" pos:end="31:30">mask</name></expr>;</expr_stmt>

<cpp:if pos:start="33:1" pos:end="33:26">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:26"><call pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:11">defined</name><argument_list pos:start="33:12" pos:end="33:26">(<argument pos:start="33:13" pos:end="33:25"><expr pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="35:9" pos:end="38:0"><expr pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:11">tag</name> <operator pos:start="35:13" pos:end="35:14">&amp;=</operator> <name pos:start="35:16" pos:end="35:27"><name pos:start="35:16" pos:end="35:18">env</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:27">SEGMask</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="39:9" pos:end="39:52">/* Check ASID, virtual page number &amp; size */</comment>

        <if_stmt pos:start="41:9" pos:end="49:9"><if pos:start="41:9" pos:end="49:9">if <condition pos:start="41:12" pos:end="41:61">(<expr pos:start="41:13" pos:end="41:60"><operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:19"><name pos:start="41:14" pos:end="41:16">tlb</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:19">G</name></name> <operator pos:start="41:21" pos:end="41:22">==</operator> <literal type="number" pos:start="41:24" pos:end="41:24">1</literal> <operator pos:start="41:26" pos:end="41:27">||</operator> <name pos:start="41:29" pos:end="41:37"><name pos:start="41:29" pos:end="41:31">tlb</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:37">ASID</name></name> <operator pos:start="41:39" pos:end="41:40">==</operator> <name pos:start="41:42" pos:end="41:45">ASID</name><operator pos:start="41:46" pos:end="41:46">)</operator> <operator pos:start="41:48" pos:end="41:49">&amp;&amp;</operator> <name pos:start="41:51" pos:end="41:53">VPN</name> <operator pos:start="41:55" pos:end="41:56">==</operator> <name pos:start="41:58" pos:end="41:60">tag</name></expr>)</condition> <block pos:start="41:63" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:18">

            <comment type="block" pos:start="43:13" pos:end="43:27">/* TLB match */</comment>

            <expr_stmt pos:start="45:13" pos:end="45:31"><expr pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:15">env</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:26">CP0_Index</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <name pos:start="45:30" pos:end="45:30">i</name></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="53:5" pos:end="91:5"><if pos:start="53:5" pos:end="91:5">if <condition pos:start="53:8" pos:end="53:30">(<expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:9">i</name> <operator pos:start="53:11" pos:end="53:12">==</operator> <name pos:start="53:14" pos:end="53:29"><name pos:start="53:14" pos:end="53:16">env</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:21">tlb</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:29">nb_tlb</name></name></expr>)</condition> <block pos:start="53:32" pos:end="91:5">{<block_content pos:start="57:9" pos:end="89:37">

        <comment type="block" pos:start="55:9" pos:end="55:75">/* No match.  Discard any shadow entries, if any of them match.  */</comment>

        <for pos:start="57:9" pos:end="85:9">for <control pos:start="57:13" pos:end="57:65">(<init pos:start="57:14" pos:end="57:34"><expr pos:start="57:14" pos:end="57:33"><name pos:start="57:14" pos:end="57:14">i</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <name pos:start="57:18" pos:end="57:33"><name pos:start="57:18" pos:end="57:20">env</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:25">tlb</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:33">nb_tlb</name></name></expr>;</init> <condition pos:start="57:36" pos:end="57:60"><expr pos:start="57:36" pos:end="57:59"><name pos:start="57:36" pos:end="57:36">i</name> <operator pos:start="57:38" pos:end="57:38">&lt;</operator> <name pos:start="57:40" pos:end="57:59"><name pos:start="57:40" pos:end="57:42">env</name><operator pos:start="57:43" pos:end="57:44">-&gt;</operator><name pos:start="57:45" pos:end="57:47">tlb</name><operator pos:start="57:48" pos:end="57:49">-&gt;</operator><name pos:start="57:50" pos:end="57:59">tlb_in_use</name></name></expr>;</condition> <incr pos:start="57:62" pos:end="57:64"><expr pos:start="57:62" pos:end="57:64"><name pos:start="57:62" pos:end="57:62">i</name><operator pos:start="57:63" pos:end="57:64">++</operator></expr></incr>)</control> <block pos:start="57:67" pos:end="85:9">{<block_content pos:start="59:13" pos:end="83:13">

            <expr_stmt pos:start="59:13" pos:end="59:44"><expr pos:start="59:13" pos:end="59:43"><name pos:start="59:13" pos:end="59:15">tlb</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <operator pos:start="59:19" pos:end="59:19">&amp;</operator><name pos:start="59:20" pos:end="59:43"><name pos:start="59:20" pos:end="59:22">env</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:27">tlb</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:32">mmu</name><operator pos:start="59:33" pos:end="59:33">.</operator><name pos:start="59:34" pos:end="59:36">r4k</name><operator pos:start="59:37" pos:end="59:37">.</operator><name pos:start="59:38" pos:end="59:40">tlb</name><index pos:start="59:41" pos:end="59:43">[<expr pos:start="59:42" pos:end="59:42"><name pos:start="59:42" pos:end="59:42">i</name></expr>]</index></name></expr>;</expr_stmt>

            <comment type="block" pos:start="61:13" pos:end="61:45">/* 1k pages are not supported. */</comment>

            <expr_stmt pos:start="63:13" pos:end="63:60"><expr pos:start="63:13" pos:end="63:59"><name pos:start="63:13" pos:end="63:16">mask</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <name pos:start="63:20" pos:end="63:32"><name pos:start="63:20" pos:end="63:22">tlb</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:32">PageMask</name></name> <operator pos:start="63:34" pos:end="63:34">|</operator> <operator pos:start="63:36" pos:end="63:36">~</operator><operator pos:start="63:37" pos:end="63:37">(</operator><name pos:start="63:38" pos:end="63:53">TARGET_PAGE_MASK</name> <operator pos:start="63:55" pos:end="63:56">&lt;&lt;</operator> <literal type="number" pos:start="63:58" pos:end="63:58">1</literal><operator pos:start="63:59" pos:end="63:59">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:43"><expr pos:start="65:13" pos:end="65:42"><name pos:start="65:13" pos:end="65:15">tag</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:34"><name pos:start="65:19" pos:end="65:21">env</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:34">CP0_EntryHi</name></name> <operator pos:start="65:36" pos:end="65:36">&amp;</operator> <operator pos:start="65:38" pos:end="65:38">~</operator><name pos:start="65:39" pos:end="65:42">mask</name></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="70:0"><expr pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:15">VPN</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:26"><name pos:start="67:19" pos:end="67:21">tlb</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:26">VPN</name></name> <operator pos:start="67:28" pos:end="67:28">&amp;</operator> <operator pos:start="67:30" pos:end="67:30">~</operator><name pos:start="67:31" pos:end="67:34">mask</name></expr>;</expr_stmt>

<cpp:if pos:start="69:1" pos:end="69:26">#<cpp:directive pos:start="69:2" pos:end="69:3">if</cpp:directive> <expr pos:start="69:5" pos:end="69:26"><call pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:11">defined</name><argument_list pos:start="69:12" pos:end="69:26">(<argument pos:start="69:13" pos:end="69:25"><expr pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <expr_stmt pos:start="71:13" pos:end="74:0"><expr pos:start="71:13" pos:end="71:31"><name pos:start="71:13" pos:end="71:15">tag</name> <operator pos:start="71:17" pos:end="71:18">&amp;=</operator> <name pos:start="71:20" pos:end="71:31"><name pos:start="71:20" pos:end="71:22">env</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:31">SEGMask</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="73:1" pos:end="73:6">#<cpp:directive pos:start="73:2" pos:end="73:6">endif</cpp:directive></cpp:endif>

            <comment type="block" pos:start="75:13" pos:end="75:56">/* Check ASID, virtual page number &amp; size */</comment>

            <if_stmt pos:start="77:13" pos:end="83:13"><if pos:start="77:13" pos:end="83:13">if <condition pos:start="77:16" pos:end="77:65">(<expr pos:start="77:17" pos:end="77:64"><operator pos:start="77:17" pos:end="77:17">(</operator><name pos:start="77:18" pos:end="77:23"><name pos:start="77:18" pos:end="77:20">tlb</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:23">G</name></name> <operator pos:start="77:25" pos:end="77:26">==</operator> <literal type="number" pos:start="77:28" pos:end="77:28">1</literal> <operator pos:start="77:30" pos:end="77:31">||</operator> <name pos:start="77:33" pos:end="77:41"><name pos:start="77:33" pos:end="77:35">tlb</name><operator pos:start="77:36" pos:end="77:37">-&gt;</operator><name pos:start="77:38" pos:end="77:41">ASID</name></name> <operator pos:start="77:43" pos:end="77:44">==</operator> <name pos:start="77:46" pos:end="77:49">ASID</name><operator pos:start="77:50" pos:end="77:50">)</operator> <operator pos:start="77:52" pos:end="77:53">&amp;&amp;</operator> <name pos:start="77:55" pos:end="77:57">VPN</name> <operator pos:start="77:59" pos:end="77:60">==</operator> <name pos:start="77:62" pos:end="77:64">tag</name></expr>)</condition> <block pos:start="77:67" pos:end="83:13">{<block_content pos:start="79:17" pos:end="81:22">

                <expr_stmt pos:start="79:17" pos:end="79:50"><expr pos:start="79:17" pos:end="79:49"><call pos:start="79:17" pos:end="79:49"><name pos:start="79:17" pos:end="79:40">r4k_mips_tlb_flush_extra</name> <argument_list pos:start="79:42" pos:end="79:49">(<argument pos:start="79:43" pos:end="79:45"><expr pos:start="79:43" pos:end="79:45"><name pos:start="79:43" pos:end="79:45">env</name></expr></argument>, <argument pos:start="79:48" pos:end="79:48"><expr pos:start="79:48" pos:end="79:48"><name pos:start="79:48" pos:end="79:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="81:17" pos:end="81:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="89:9" pos:end="89:37"><expr pos:start="89:9" pos:end="89:36"><name pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:11">env</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:22">CP0_Index</name></name> <operator pos:start="89:24" pos:end="89:25">|=</operator> <literal type="number" pos:start="89:27" pos:end="89:36">0x80000000</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
