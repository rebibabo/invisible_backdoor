<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14583.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:31">pxa2xx_fir_read</name><parameter_list pos:start="1:32" pos:end="3:46">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:57"><decl pos:start="1:47" pos:end="1:57"><type pos:start="1:47" pos:end="1:57"><name pos:start="1:47" pos:end="1:52">hwaddr</name></type> <name pos:start="1:54" pos:end="1:57">addr</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:45"><decl pos:start="3:33" pos:end="3:45"><type pos:start="3:33" pos:end="3:45"><name pos:start="3:33" pos:end="3:40">unsigned</name></type> <name pos:start="3:42" pos:end="3:45">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="73:1">{<block_content pos:start="7:5" pos:end="71:13">

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">PXA2xxFIrState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:49">= <expr pos:start="7:25" pos:end="7:49"><operator pos:start="7:25" pos:end="7:25">(</operator><name pos:start="7:26" pos:end="7:39">PXA2xxFIrState</name> <operator pos:start="7:41" pos:end="7:41">*</operator><operator pos:start="7:42" pos:end="7:42">)</operator> <name pos:start="7:44" pos:end="7:49">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:15">ret</name></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="69:5">switch <condition pos:start="13:12" pos:end="13:17">(<expr pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:16">addr</name></expr>)</condition> <block pos:start="13:19" pos:end="69:5">{<block_content pos:start="15:5" pos:end="67:14">

    <case pos:start="15:5" pos:end="15:15">case <expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:14">ICCR0</name></expr>:</case>

        <return pos:start="17:9" pos:end="17:29">return <expr pos:start="17:16" pos:end="17:28"><name pos:start="17:16" pos:end="17:28"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:25">control</name><index pos:start="17:26" pos:end="17:28">[<expr pos:start="17:27" pos:end="17:27"><literal type="number" pos:start="17:27" pos:end="17:27">0</literal></expr>]</index></name></expr>;</return>

    <case pos:start="19:5" pos:end="19:15">case <expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:14">ICCR1</name></expr>:</case>

        <return pos:start="21:9" pos:end="21:29">return <expr pos:start="21:16" pos:end="21:28"><name pos:start="21:16" pos:end="21:28"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:25">control</name><index pos:start="21:26" pos:end="21:28">[<expr pos:start="21:27" pos:end="21:27"><literal type="number" pos:start="21:27" pos:end="21:27">1</literal></expr>]</index></name></expr>;</return>

    <case pos:start="23:5" pos:end="23:15">case <expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:14">ICCR2</name></expr>:</case>

        <return pos:start="25:9" pos:end="25:29">return <expr pos:start="25:16" pos:end="25:28"><name pos:start="25:16" pos:end="25:28"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:25">control</name><index pos:start="25:26" pos:end="25:28">[<expr pos:start="25:27" pos:end="25:27"><literal type="number" pos:start="25:27" pos:end="25:27">2</literal></expr>]</index></name></expr>;</return>

    <case pos:start="27:5" pos:end="27:14">case <expr pos:start="27:10" pos:end="27:13"><name pos:start="27:10" pos:end="27:13">ICDR</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:17">status</name><index pos:start="29:18" pos:end="29:20">[<expr pos:start="29:19" pos:end="29:19"><literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>]</index></name> <operator pos:start="29:22" pos:end="29:23">&amp;=</operator> <operator pos:start="29:25" pos:end="29:25">~</operator><literal type="number" pos:start="29:26" pos:end="29:29">0x01</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:30"><expr pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:17">status</name><index pos:start="31:18" pos:end="31:20">[<expr pos:start="31:19" pos:end="31:19"><literal type="number" pos:start="31:19" pos:end="31:19">1</literal></expr>]</index></name> <operator pos:start="31:22" pos:end="31:23">&amp;=</operator> <operator pos:start="31:25" pos:end="31:25">~</operator><literal type="number" pos:start="31:26" pos:end="31:29">0x72</literal></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="45:9"><if pos:start="33:9" pos:end="45:9">if <condition pos:start="33:12" pos:end="33:22">(<expr pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:21">rx_len</name></name></expr>)</condition> <block pos:start="33:24" pos:end="45:9">{<block_content pos:start="35:13" pos:end="43:23">

            <expr_stmt pos:start="35:13" pos:end="35:25"><expr pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:21">rx_len</name></name> <operator pos:start="35:23" pos:end="35:24">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:45"><expr pos:start="37:13" pos:end="37:44"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:44"><name pos:start="37:19" pos:end="37:19">s</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:28">rx_fifo</name><index pos:start="37:29" pos:end="37:44">[<expr pos:start="37:30" pos:end="37:43"><name pos:start="37:30" pos:end="37:40"><name pos:start="37:30" pos:end="37:30">s</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:40">rx_start</name></name> <operator pos:start="37:42" pos:end="37:43">++</operator></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:30"><expr pos:start="39:13" pos:end="39:29"><name pos:start="39:13" pos:end="39:23"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:23">rx_start</name></name> <operator pos:start="39:25" pos:end="39:26">&amp;=</operator> <literal type="number" pos:start="39:28" pos:end="39:29">63</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:33"><expr pos:start="41:13" pos:end="41:32"><call pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:29">pxa2xx_fir_update</name><argument_list pos:start="41:30" pos:end="41:32">(<argument pos:start="41:31" pos:end="41:31"><expr pos:start="41:31" pos:end="41:31"><name pos:start="41:31" pos:end="41:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="43:13" pos:end="43:23">return <expr pos:start="43:20" pos:end="43:22"><name pos:start="43:20" pos:end="43:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:56"><expr pos:start="47:9" pos:end="47:55"><call pos:start="47:9" pos:end="47:55"><name pos:start="47:9" pos:end="47:14">printf</name><argument_list pos:start="47:15" pos:end="47:55">(<argument pos:start="47:16" pos:end="47:40"><expr pos:start="47:16" pos:end="47:40"><literal type="string" pos:start="47:16" pos:end="47:40">"%s: Rx FIFO underrun.\n"</literal></expr></argument>, <argument pos:start="47:43" pos:end="47:54"><expr pos:start="47:43" pos:end="47:54"><name pos:start="47:43" pos:end="47:54">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:15">case <expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:14">ICSR0</name></expr>:</case>

        <return pos:start="53:9" pos:end="53:28">return <expr pos:start="53:16" pos:end="53:27"><name pos:start="53:16" pos:end="53:27"><name pos:start="53:16" pos:end="53:16">s</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:24">status</name><index pos:start="53:25" pos:end="53:27">[<expr pos:start="53:26" pos:end="53:26"><literal type="number" pos:start="53:26" pos:end="53:26">0</literal></expr>]</index></name></expr>;</return>

    <case pos:start="55:5" pos:end="55:15">case <expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:14">ICSR1</name></expr>:</case>

        <return pos:start="57:9" pos:end="57:39">return <expr pos:start="57:16" pos:end="57:38"><name pos:start="57:16" pos:end="57:27"><name pos:start="57:16" pos:end="57:16">s</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:24">status</name><index pos:start="57:25" pos:end="57:27">[<expr pos:start="57:26" pos:end="57:26"><literal type="number" pos:start="57:26" pos:end="57:26">1</literal></expr>]</index></name> <operator pos:start="57:29" pos:end="57:29">|</operator> <operator pos:start="57:31" pos:end="57:31">(</operator><literal type="number" pos:start="57:32" pos:end="57:32">1</literal> <operator pos:start="57:34" pos:end="57:35">&lt;&lt;</operator> <literal type="number" pos:start="57:37" pos:end="57:37">3</literal><operator pos:start="57:38" pos:end="57:38">)</operator></expr>;</return>			<comment type="block" pos:start="57:57" pos:end="57:65">/* TNF */</comment>

    <case pos:start="59:5" pos:end="59:15">case <expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:14">ICFOR</name></expr>:</case>

        <return pos:start="61:9" pos:end="61:25">return <expr pos:start="61:16" pos:end="61:24"><name pos:start="61:16" pos:end="61:24"><name pos:start="61:16" pos:end="61:16">s</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:24">rx_len</name></name></expr>;</return>

    <default pos:start="63:5" pos:end="63:12">default:</default>

        <expr_stmt pos:start="65:9" pos:end="65:69"><expr pos:start="65:9" pos:end="65:68"><call pos:start="65:9" pos:end="65:68"><name pos:start="65:9" pos:end="65:14">printf</name><argument_list pos:start="65:15" pos:end="65:68">(<argument pos:start="65:16" pos:end="65:47"><expr pos:start="65:16" pos:end="65:47"><literal type="string" pos:start="65:16" pos:end="65:34">"%s: Bad register "</literal> <name pos:start="65:36" pos:end="65:42">REG_FMT</name> <literal type="string" pos:start="65:44" pos:end="65:47">"\n"</literal></expr></argument>, <argument pos:start="65:50" pos:end="65:61"><expr pos:start="65:50" pos:end="65:61"><name pos:start="65:50" pos:end="65:61">__FUNCTION__</name></expr></argument>, <argument pos:start="65:64" pos:end="65:67"><expr pos:start="65:64" pos:end="65:67"><name pos:start="65:64" pos:end="65:67">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
