<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25933.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">bochs_read</name><parameter_list pos:start="1:22" pos:end="3:49">(<parameter pos:start="1:23" pos:end="1:42"><decl pos:start="1:23" pos:end="1:42"><type pos:start="1:23" pos:end="1:42"><name pos:start="1:23" pos:end="1:38">BlockDriverState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">bs</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><name pos:start="1:45" pos:end="1:51">int64_t</name></type> <name pos:start="1:53" pos:end="1:62">sector_num</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:32"><decl pos:start="3:21" pos:end="3:32"><type pos:start="3:21" pos:end="3:32"><name pos:start="3:21" pos:end="3:27">uint8_t</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:32">buf</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:48"><decl pos:start="3:35" pos:end="3:48"><type pos:start="3:35" pos:end="3:48"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:48">nb_sectors</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:13">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="35:5">while <condition pos:start="11:11" pos:end="11:26">(<expr pos:start="11:12" pos:end="11:25"><name pos:start="11:12" pos:end="11:21">nb_sectors</name> <operator pos:start="11:23" pos:end="11:23">&gt;</operator> <literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr>)</condition> <block pos:start="11:28" pos:end="35:5">{<block_content pos:start="13:9" pos:end="33:19">

        <decl_stmt pos:start="13:9" pos:end="13:62"><decl pos:start="13:9" pos:end="13:61"><type pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:15">int64_t</name></type> <name pos:start="13:17" pos:end="13:28">block_offset</name> <init pos:start="13:30" pos:end="13:61">= <expr pos:start="13:32" pos:end="13:61"><call pos:start="13:32" pos:end="13:61"><name pos:start="13:32" pos:end="13:45">seek_to_sector</name><argument_list pos:start="13:46" pos:end="13:61">(<argument pos:start="13:47" pos:end="13:48"><expr pos:start="13:47" pos:end="13:48"><name pos:start="13:47" pos:end="13:48">bs</name></expr></argument>, <argument pos:start="13:51" pos:end="13:60"><expr pos:start="13:51" pos:end="13:60"><name pos:start="13:51" pos:end="13:60">sector_num</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="15:9" pos:end="27:32"><if pos:start="15:9" pos:end="25:9">if <condition pos:start="15:12" pos:end="15:30">(<expr pos:start="15:13" pos:end="15:29"><name pos:start="15:13" pos:end="15:24">block_offset</name> <operator pos:start="15:26" pos:end="15:27">&gt;=</operator> <literal type="number" pos:start="15:29" pos:end="15:29">0</literal></expr>)</condition> <block pos:start="15:32" pos:end="25:9">{<block_content pos:start="17:13" pos:end="23:13">

            <expr_stmt pos:start="17:13" pos:end="17:63"><expr pos:start="17:13" pos:end="17:62"><name pos:start="17:13" pos:end="17:15">ret</name> <operator pos:start="17:17" pos:end="17:17">=</operator> <call pos:start="17:19" pos:end="17:62"><name pos:start="17:19" pos:end="17:28">bdrv_pread</name><argument_list pos:start="17:29" pos:end="17:62">(<argument pos:start="17:30" pos:end="17:37"><expr pos:start="17:30" pos:end="17:37"><name pos:start="17:30" pos:end="17:37"><name pos:start="17:30" pos:end="17:31">bs</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:37">file</name></name></expr></argument>, <argument pos:start="17:40" pos:end="17:51"><expr pos:start="17:40" pos:end="17:51"><name pos:start="17:40" pos:end="17:51">block_offset</name></expr></argument>, <argument pos:start="17:54" pos:end="17:56"><expr pos:start="17:54" pos:end="17:56"><name pos:start="17:54" pos:end="17:56">buf</name></expr></argument>, <argument pos:start="17:59" pos:end="17:61"><expr pos:start="17:59" pos:end="17:61"><literal type="number" pos:start="17:59" pos:end="17:61">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="19:13" pos:end="23:13"><if pos:start="19:13" pos:end="23:13">if <condition pos:start="19:16" pos:end="19:27">(<expr pos:start="19:17" pos:end="19:26"><name pos:start="19:17" pos:end="19:19">ret</name> <operator pos:start="19:21" pos:end="19:22">!=</operator> <literal type="number" pos:start="19:24" pos:end="19:26">512</literal></expr>)</condition> <block pos:start="19:29" pos:end="23:13">{<block_content pos:start="21:17" pos:end="21:26">

                <return pos:start="21:17" pos:end="21:26">return <expr pos:start="21:24" pos:end="21:25"><operator pos:start="21:24" pos:end="21:24">-</operator><literal type="number" pos:start="21:25" pos:end="21:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="25:11" pos:end="27:32">else<block type="pseudo" pos:start="27:13" pos:end="27:32"><block_content pos:start="27:13" pos:end="27:32">

            <expr_stmt pos:start="27:13" pos:end="27:32"><expr pos:start="27:13" pos:end="27:31"><call pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:18">memset</name><argument_list pos:start="27:19" pos:end="27:31">(<argument pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">buf</name></expr></argument>, <argument pos:start="27:25" pos:end="27:25"><expr pos:start="27:25" pos:end="27:25"><literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr></argument>, <argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><literal type="number" pos:start="27:28" pos:end="27:30">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:21"><expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:18">nb_sectors</name><operator pos:start="29:19" pos:end="29:20">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:21"><expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:18">sector_num</name><operator pos:start="31:19" pos:end="31:20">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:19"><expr pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:11">buf</name> <operator pos:start="33:13" pos:end="33:14">+=</operator> <literal type="number" pos:start="33:16" pos:end="33:18">512</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
