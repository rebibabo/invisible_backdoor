<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14852.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">cpu_common_parse_features</name><parameter_list pos:start="1:38" pos:end="3:51">(<parameter pos:start="1:39" pos:end="1:58"><decl pos:start="1:39" pos:end="1:58"><type pos:start="1:39" pos:end="1:58"><specifier pos:start="1:39" pos:end="1:43">const</specifier> <name pos:start="1:45" pos:end="1:48">char</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:58">typename</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:74"><decl pos:start="1:61" pos:end="1:74"><type pos:start="1:61" pos:end="1:74"><name pos:start="1:61" pos:end="1:64">char</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:74">features</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:50"><decl pos:start="3:39" pos:end="3:50"><type pos:start="3:39" pos:end="3:50"><name pos:start="3:39" pos:end="3:43">Error</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier><modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:50">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="79:1">{<block_content pos:start="7:5" pos:end="77:5">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:20">featurestr</name></decl>;</decl_stmt> <comment type="block" pos:start="7:23" pos:end="7:66">/* Single "key=value" string being parsed */</comment>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:15"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <name pos:start="11:12" pos:end="11:15">bool</name></type> <name pos:start="11:17" pos:end="11:39">cpu_globals_initialized</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="27:7">/* TODO: all callers of -&gt;parse_features() need to be changed to

     * call it only once, so we can remove this check (or change it

     * to assert(!cpu_globals_initialized).

     * Current callers of -&gt;parse_features() are:

     * - cpu_generic_init()

     * - cpu_x86_create()

     */</comment>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:32">(<expr pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:31">cpu_globals_initialized</name></expr>)</condition> <block pos:start="29:34" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:15">

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:35"><expr pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:27">cpu_globals_initialized</name> <operator pos:start="35:29" pos:end="35:29">=</operator> <name pos:start="35:31" pos:end="35:34">true</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:57"><expr pos:start="39:5" pos:end="39:56"><name pos:start="39:5" pos:end="39:14">featurestr</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <ternary pos:start="39:18" pos:end="39:56"><condition pos:start="39:18" pos:end="39:27"><expr pos:start="39:18" pos:end="39:25"><name pos:start="39:18" pos:end="39:25">features</name></expr> ?</condition><then pos:start="39:29" pos:end="39:49"> <expr pos:start="39:29" pos:end="39:49"><call pos:start="39:29" pos:end="39:49"><name pos:start="39:29" pos:end="39:34">strtok</name><argument_list pos:start="39:35" pos:end="39:49">(<argument pos:start="39:36" pos:end="39:43"><expr pos:start="39:36" pos:end="39:43"><name pos:start="39:36" pos:end="39:43">features</name></expr></argument>, <argument pos:start="39:46" pos:end="39:48"><expr pos:start="39:46" pos:end="39:48"><literal type="string" pos:start="39:46" pos:end="39:48">","</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="39:51" pos:end="39:56">: <expr pos:start="39:53" pos:end="39:56"><name pos:start="39:53" pos:end="39:56">NULL</name></expr></else></ternary></expr>;</expr_stmt>



    <while pos:start="43:5" pos:end="77:5">while <condition pos:start="43:11" pos:end="43:22">(<expr pos:start="43:12" pos:end="43:21"><name pos:start="43:12" pos:end="43:21">featurestr</name></expr>)</condition> <block pos:start="43:24" pos:end="77:5">{<block_content pos:start="45:9" pos:end="75:39">

        <expr_stmt pos:start="45:9" pos:end="45:38"><expr pos:start="45:9" pos:end="45:37"><name pos:start="45:9" pos:end="45:11">val</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:37"><name pos:start="45:15" pos:end="45:20">strchr</name><argument_list pos:start="45:21" pos:end="45:37">(<argument pos:start="45:22" pos:end="45:31"><expr pos:start="45:22" pos:end="45:31"><name pos:start="45:22" pos:end="45:31">featurestr</name></expr></argument>, <argument pos:start="45:34" pos:end="45:36"><expr pos:start="45:34" pos:end="45:36"><literal type="char" pos:start="45:34" pos:end="45:36">'='</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="73:9"><if pos:start="47:9" pos:end="65:9">if <condition pos:start="47:12" pos:end="47:16">(<expr pos:start="47:13" pos:end="47:15"><name pos:start="47:13" pos:end="47:15">val</name></expr>)</condition> <block pos:start="47:18" pos:end="65:9">{<block_content pos:start="49:13" pos:end="63:44">

            <decl_stmt pos:start="49:13" pos:end="49:60"><decl pos:start="49:13" pos:end="49:59"><type pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:26">GlobalProperty</name> <modifier pos:start="49:28" pos:end="49:28">*</modifier></type><name pos:start="49:29" pos:end="49:32">prop</name> <init pos:start="49:34" pos:end="49:59">= <expr pos:start="49:36" pos:end="49:59"><call pos:start="49:36" pos:end="49:59"><name pos:start="49:36" pos:end="49:41">g_new0</name><argument_list pos:start="49:42" pos:end="49:59">(<argument pos:start="49:43" pos:end="49:55"><expr pos:start="49:43" pos:end="49:55"><call pos:start="49:43" pos:end="49:55"><name pos:start="49:43" pos:end="49:48">typeof</name><argument_list pos:start="49:49" pos:end="49:55">(<argument pos:start="49:50" pos:end="49:54"><expr pos:start="49:50" pos:end="49:54"><operator pos:start="49:50" pos:end="49:50">*</operator><name pos:start="49:51" pos:end="49:54">prop</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:58" pos:end="49:58"><expr pos:start="49:58" pos:end="49:58"><literal type="number" pos:start="49:58" pos:end="49:58">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:21"><expr pos:start="51:13" pos:end="51:20"><operator pos:start="51:13" pos:end="51:13">*</operator><name pos:start="51:14" pos:end="51:16">val</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:18"><expr pos:start="53:13" pos:end="53:17"><name pos:start="53:13" pos:end="53:15">val</name><operator pos:start="53:16" pos:end="53:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:36"><expr pos:start="55:13" pos:end="55:35"><name pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:16">prop</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:24">driver</name></name> <operator pos:start="55:26" pos:end="55:26">=</operator> <name pos:start="55:28" pos:end="55:35">typename</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:50"><expr pos:start="57:13" pos:end="57:49"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:16">prop</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:26">property</name></name> <operator pos:start="57:28" pos:end="57:28">=</operator> <call pos:start="57:30" pos:end="57:49"><name pos:start="57:30" pos:end="57:37">g_strdup</name><argument_list pos:start="57:38" pos:end="57:49">(<argument pos:start="57:39" pos:end="57:48"><expr pos:start="57:39" pos:end="57:48"><name pos:start="57:39" pos:end="57:48">featurestr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:40"><expr pos:start="59:13" pos:end="59:39"><name pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:16">prop</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:23">value</name></name> <operator pos:start="59:25" pos:end="59:25">=</operator> <call pos:start="59:27" pos:end="59:39"><name pos:start="59:27" pos:end="59:34">g_strdup</name><argument_list pos:start="59:35" pos:end="59:39">(<argument pos:start="59:36" pos:end="59:38"><expr pos:start="59:36" pos:end="59:38"><name pos:start="59:36" pos:end="59:38">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:38"><expr pos:start="61:13" pos:end="61:37"><name pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:16">prop</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:22">errp</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <operator pos:start="61:26" pos:end="61:26">&amp;</operator><name pos:start="61:27" pos:end="61:37">error_fatal</name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:44"><expr pos:start="63:13" pos:end="63:43"><call pos:start="63:13" pos:end="63:43"><name pos:start="63:13" pos:end="63:37">qdev_prop_register_global</name><argument_list pos:start="63:38" pos:end="63:43">(<argument pos:start="63:39" pos:end="63:42"><expr pos:start="63:39" pos:end="63:42"><name pos:start="63:39" pos:end="63:42">prop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="65:11" pos:end="73:9">else <block pos:start="65:16" pos:end="73:9">{<block_content pos:start="67:13" pos:end="71:19">

            <expr_stmt pos:start="67:13" pos:end="69:35"><expr pos:start="67:13" pos:end="69:34"><call pos:start="67:13" pos:end="69:34"><name pos:start="67:13" pos:end="67:22">error_setg</name><argument_list pos:start="67:23" pos:end="69:34">(<argument pos:start="67:24" pos:end="67:27"><expr pos:start="67:24" pos:end="67:27"><name pos:start="67:24" pos:end="67:27">errp</name></expr></argument>, <argument pos:start="67:30" pos:end="67:67"><expr pos:start="67:30" pos:end="67:67"><literal type="string" pos:start="67:30" pos:end="67:67">"Expected key=value format, found %s."</literal></expr></argument>,

                       <argument pos:start="69:24" pos:end="69:33"><expr pos:start="69:24" pos:end="69:33"><name pos:start="69:24" pos:end="69:33">featurestr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="71:13" pos:end="71:19">return;</return>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:39"><expr pos:start="75:9" pos:end="75:38"><name pos:start="75:9" pos:end="75:18">featurestr</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <call pos:start="75:22" pos:end="75:38"><name pos:start="75:22" pos:end="75:27">strtok</name><argument_list pos:start="75:28" pos:end="75:38">(<argument pos:start="75:29" pos:end="75:32"><expr pos:start="75:29" pos:end="75:32"><name pos:start="75:29" pos:end="75:32">NULL</name></expr></argument>, <argument pos:start="75:35" pos:end="75:37"><expr pos:start="75:35" pos:end="75:37"><literal type="string" pos:start="75:35" pos:end="75:37">","</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
