<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9361.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">qdm2_get_vlc</name> <parameter_list pos:start="1:25" pos:end="1:74">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:38">GetBitContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">gb</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:52"><decl pos:start="1:45" pos:end="1:52"><type pos:start="1:45" pos:end="1:52"><name pos:start="1:45" pos:end="1:47">VLC</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">vlc</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:62"><decl pos:start="1:55" pos:end="1:62"><type pos:start="1:55" pos:end="1:62"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:62">flag</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:73"><decl pos:start="1:65" pos:end="1:73"><type pos:start="1:65" pos:end="1:73"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:73">depth</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:17">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">value</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:55"><expr pos:start="9:5" pos:end="9:54"><name pos:start="9:5" pos:end="9:9">value</name> <operator pos:start="9:11" pos:end="9:11">=</operator> <call pos:start="9:13" pos:end="9:54"><name pos:start="9:13" pos:end="9:20">get_vlc2</name><argument_list pos:start="9:21" pos:end="9:54">(<argument pos:start="9:22" pos:end="9:23"><expr pos:start="9:22" pos:end="9:23"><name pos:start="9:22" pos:end="9:23">gb</name></expr></argument>, <argument pos:start="9:26" pos:end="9:35"><expr pos:start="9:26" pos:end="9:35"><name pos:start="9:26" pos:end="9:35"><name pos:start="9:26" pos:end="9:28">vlc</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:35">table</name></name></expr></argument>, <argument pos:start="9:38" pos:end="9:46"><expr pos:start="9:38" pos:end="9:46"><name pos:start="9:38" pos:end="9:46"><name pos:start="9:38" pos:end="9:40">vlc</name><operator pos:start="9:41" pos:end="9:42">-&gt;</operator><name pos:start="9:43" pos:end="9:46">bits</name></name></expr></argument>, <argument pos:start="9:49" pos:end="9:53"><expr pos:start="9:49" pos:end="9:53"><name pos:start="9:49" pos:end="9:53">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:50">/* stage-2, 3 bits exponent escape sequence */</comment>

    <if_stmt pos:start="15:5" pos:end="17:52"><if pos:start="15:5" pos:end="17:52">if <condition pos:start="15:8" pos:end="15:21">(<expr pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:13">value</name><operator pos:start="15:14" pos:end="15:15">--</operator> <operator pos:start="15:17" pos:end="15:18">==</operator> <literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:52"><block_content pos:start="17:9" pos:end="17:52">

        <expr_stmt pos:start="17:9" pos:end="17:52"><expr pos:start="17:9" pos:end="17:51"><name pos:start="17:9" pos:end="17:13">value</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:51"><name pos:start="17:17" pos:end="17:24">get_bits</name> <argument_list pos:start="17:26" pos:end="17:51">(<argument pos:start="17:27" pos:end="17:28"><expr pos:start="17:27" pos:end="17:28"><name pos:start="17:27" pos:end="17:28">gb</name></expr></argument>, <argument pos:start="17:31" pos:end="17:50"><expr pos:start="17:31" pos:end="17:50"><call pos:start="17:31" pos:end="17:46"><name pos:start="17:31" pos:end="17:38">get_bits</name> <argument_list pos:start="17:40" pos:end="17:46">(<argument pos:start="17:41" pos:end="17:42"><expr pos:start="17:41" pos:end="17:42"><name pos:start="17:41" pos:end="17:42">gb</name></expr></argument>, <argument pos:start="17:45" pos:end="17:45"><expr pos:start="17:45" pos:end="17:45"><literal type="number" pos:start="17:45" pos:end="17:45">3</literal></expr></argument>)</argument_list></call> <operator pos:start="17:48" pos:end="17:48">+</operator> <literal type="number" pos:start="17:50" pos:end="17:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:27">/* stage-3, optional */</comment>

    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="35:5">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><name pos:start="23:9" pos:end="23:12">flag</name></expr>)</condition> <block pos:start="23:15" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:20">

        <decl_stmt pos:start="25:9" pos:end="25:43"><decl pos:start="25:9" pos:end="25:42"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:15">tmp</name> <init pos:start="25:17" pos:end="25:42">= <expr pos:start="25:19" pos:end="25:42"><name pos:start="25:19" pos:end="25:42"><name pos:start="25:19" pos:end="25:35">vlc_stage3_values</name><index pos:start="25:36" pos:end="25:42">[<expr pos:start="25:37" pos:end="25:41"><name pos:start="25:37" pos:end="25:41">value</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="29:9" pos:end="31:47"><if pos:start="29:9" pos:end="31:47">if <condition pos:start="29:12" pos:end="29:29">(<expr pos:start="29:13" pos:end="29:28"><operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:18">value</name> <operator pos:start="29:20" pos:end="29:20">&amp;</operator> <operator pos:start="29:22" pos:end="29:22">~</operator><literal type="number" pos:start="29:23" pos:end="29:23">3</literal><operator pos:start="29:24" pos:end="29:24">)</operator> <operator pos:start="29:26" pos:end="29:26">&gt;</operator> <literal type="number" pos:start="29:28" pos:end="29:28">0</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:47"><block_content pos:start="31:13" pos:end="31:47">

            <expr_stmt pos:start="31:13" pos:end="31:47"><expr pos:start="31:13" pos:end="31:46"><name pos:start="31:13" pos:end="31:15">tmp</name> <operator pos:start="31:17" pos:end="31:18">+=</operator> <call pos:start="31:20" pos:end="31:46"><name pos:start="31:20" pos:end="31:27">get_bits</name> <argument_list pos:start="31:29" pos:end="31:46">(<argument pos:start="31:30" pos:end="31:31"><expr pos:start="31:30" pos:end="31:31"><name pos:start="31:30" pos:end="31:31">gb</name></expr></argument>, <argument pos:start="31:34" pos:end="31:45"><expr pos:start="31:34" pos:end="31:45"><operator pos:start="31:34" pos:end="31:34">(</operator><name pos:start="31:35" pos:end="31:39">value</name> <operator pos:start="31:41" pos:end="31:42">&gt;&gt;</operator> <literal type="number" pos:start="31:44" pos:end="31:44">2</literal><operator pos:start="31:45" pos:end="31:45">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:20"><expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:13">value</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:19">tmp</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="39:5" pos:end="39:17">return <expr pos:start="39:12" pos:end="39:16"><name pos:start="39:12" pos:end="39:16">value</name></expr>;</return>

</block_content>}</block></function>
</unit>
