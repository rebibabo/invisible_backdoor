<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11041.c" pos:tabs="8"><function pos:start="1:1" pos:end="813:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:11">av_grab</name><parameter_list pos:start="1:12" pos:end="1:31">(<parameter pos:start="1:13" pos:end="1:30"><decl pos:start="1:13" pos:end="1:30"><type pos:start="1:13" pos:end="1:29"><name pos:start="1:13" pos:end="1:27">AVFormatContext</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:30">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="813:1">{<block_content pos:start="5:5" pos:end="811:15">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:9">UINT8</name></type> <name pos:start="5:11" pos:end="5:36"><name pos:start="5:11" pos:end="5:19">audio_buf</name><index pos:start="5:20" pos:end="5:36">[<expr pos:start="5:21" pos:end="5:35"><name pos:start="5:21" pos:end="5:35">AUDIO_FIFO_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">UINT8</name></type> <name pos:start="7:11" pos:end="7:37"><name pos:start="7:11" pos:end="7:20">audio_buf1</name><index pos:start="7:21" pos:end="7:37">[<expr pos:start="7:22" pos:end="7:36"><name pos:start="7:22" pos:end="7:36">AUDIO_FIFO_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">UINT8</name></type> <name pos:start="9:11" pos:end="9:36"><name pos:start="9:11" pos:end="9:19">audio_out</name><index pos:start="9:20" pos:end="9:36">[<expr pos:start="9:21" pos:end="9:35"><name pos:start="9:21" pos:end="9:35">AUDIO_FIFO_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">UINT8</name></type> <name pos:start="11:11" pos:end="11:33"><name pos:start="11:11" pos:end="11:22">video_buffer</name><index pos:start="11:23" pos:end="11:33">[<expr pos:start="11:24" pos:end="11:32"><literal type="number" pos:start="11:24" pos:end="11:27">1024</literal><operator pos:start="11:28" pos:end="11:28">*</operator><literal type="number" pos:start="11:29" pos:end="11:32">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:17"><name pos:start="13:10" pos:end="13:12">buf</name><index pos:start="13:13" pos:end="13:17">[<expr pos:start="13:14" pos:end="13:16"><literal type="number" pos:start="13:14" pos:end="13:16">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">short</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:18">samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:58"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:14">URLContext</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:28">audio_handle</name> <init pos:start="17:30" pos:end="17:35">= <expr pos:start="17:32" pos:end="17:35"><name pos:start="17:32" pos:end="17:35">NULL</name></expr></init></decl>, <decl pos:start="17:38" pos:end="17:57"><type ref="prev" pos:start="17:5" pos:end="17:16"><modifier pos:start="17:38" pos:end="17:38">*</modifier></type><name pos:start="17:39" pos:end="17:50">video_handle</name> <init pos:start="17:52" pos:end="17:57">= <expr pos:start="17:54" pos:end="17:57"><name pos:start="17:54" pos:end="17:57">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:49"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:18">AVCodecContext</name> <modifier pos:start="21:20" pos:end="21:20">*</modifier></type><name pos:start="21:21" pos:end="21:23">enc</name></decl>, <decl pos:start="21:26" pos:end="21:48"><type ref="prev" pos:start="21:5" pos:end="21:20"><modifier pos:start="21:26" pos:end="21:26">*</modifier></type><name pos:start="21:27" pos:end="21:41">first_video_enc</name> <init pos:start="21:43" pos:end="21:48">= <expr pos:start="21:45" pos:end="21:48"><name pos:start="21:45" pos:end="21:48">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:32"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:18">frame_size</name></decl>, <decl pos:start="23:21" pos:end="23:31"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:21" pos:end="23:31">frame_bytes</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:29"><decl pos:start="25:5" pos:end="25:17"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:17">use_audio</name></decl>, <decl pos:start="25:20" pos:end="25:28"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:20" pos:end="25:28">use_video</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:42"><decl pos:start="27:5" pos:end="27:18"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:18">frame_rate</name></decl>, <decl pos:start="27:21" pos:end="27:31"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:21" pos:end="27:31">sample_rate</name></decl>, <decl pos:start="27:34" pos:end="27:41"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:34" pos:end="27:41">channels</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:52"><decl pos:start="29:5" pos:end="29:13"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:13">width</name></decl>, <decl pos:start="29:16" pos:end="29:21"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:16" pos:end="29:21">height</name></decl>, <decl pos:start="29:24" pos:end="29:35"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:24" pos:end="29:35">frame_number</name></decl>, <decl pos:start="29:38" pos:end="29:38"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:38" pos:end="29:38">i</name></decl>, <decl pos:start="29:41" pos:end="29:51"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:41" pos:end="29:47">pix_fmt</name> <init pos:start="29:49" pos:end="29:51">= <expr pos:start="29:51" pos:end="29:51"><literal type="number" pos:start="29:51" pos:end="29:51">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:51"><decl pos:start="31:5" pos:end="31:44"><type pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:18">AVOutputStream</name> <modifier pos:start="31:20" pos:end="31:20">*</modifier></type><name pos:start="31:21" pos:end="31:44"><name pos:start="31:21" pos:end="31:29">ost_table</name><index pos:start="31:30" pos:end="31:44">[<expr pos:start="31:31" pos:end="31:43"><name pos:start="31:31" pos:end="31:43"><name pos:start="31:31" pos:end="31:31">s</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:43">nb_streams</name></name></expr>]</index></name></decl>, <decl pos:start="31:47" pos:end="31:50"><type ref="prev" pos:start="31:5" pos:end="31:20"><modifier pos:start="31:47" pos:end="31:47">*</modifier></type><name pos:start="31:48" pos:end="31:50">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:55"><decl pos:start="33:5" pos:end="33:32"><type pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:9">UINT8</name> <modifier pos:start="33:11" pos:end="33:11">*</modifier></type><name pos:start="33:12" pos:end="33:25">picture_in_buf</name> <init pos:start="33:27" pos:end="33:32">= <expr pos:start="33:29" pos:end="33:32"><name pos:start="33:29" pos:end="33:32">NULL</name></expr></init></decl>, <decl pos:start="33:35" pos:end="33:54"><type ref="prev" pos:start="33:5" pos:end="33:11"><modifier pos:start="33:35" pos:end="33:35">*</modifier></type><name pos:start="33:36" pos:end="33:47">picture_420p</name> <init pos:start="33:49" pos:end="33:54">= <expr pos:start="33:51" pos:end="33:54"><name pos:start="33:51" pos:end="33:54">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:46"><decl pos:start="35:5" pos:end="35:27"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:23">audio_fifo_size</name> <init pos:start="35:25" pos:end="35:27">= <expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">0</literal></expr></init></decl>, <decl pos:start="35:30" pos:end="35:45"><type ref="prev" pos:start="35:5" pos:end="35:7"/><name pos:start="35:30" pos:end="35:41">picture_size</name> <init pos:start="35:43" pos:end="35:45">= <expr pos:start="35:45" pos:end="35:45"><literal type="number" pos:start="35:45" pos:end="35:45">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:21"><decl pos:start="37:5" pos:end="37:20"><type pos:start="37:5" pos:end="37:9"><name pos:start="37:5" pos:end="37:9">INT64</name></type> <name pos:start="37:11" pos:end="37:20">time_start</name></decl>;</decl_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:33">/* init output stream info */</comment>

    <for pos:start="43:5" pos:end="45:28">for<control pos:start="43:8" pos:end="43:32">(<init pos:start="43:9" pos:end="43:12"><expr pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:9">i</name><operator pos:start="43:10" pos:end="43:10">=</operator><literal type="number" pos:start="43:11" pos:end="43:11">0</literal></expr>;</init><condition pos:start="43:13" pos:end="43:28"><expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:13">i</name><operator pos:start="43:14" pos:end="43:14">&lt;</operator><name pos:start="43:15" pos:end="43:27"><name pos:start="43:15" pos:end="43:15">s</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:27">nb_streams</name></name></expr>;</condition><incr pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><name pos:start="43:29" pos:end="43:29">i</name><operator pos:start="43:30" pos:end="43:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:9" pos:end="45:28"><block_content pos:start="45:9" pos:end="45:28">

        <expr_stmt pos:start="45:9" pos:end="45:28"><expr pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:17">ost_table</name><index pos:start="45:18" pos:end="45:20">[<expr pos:start="45:19" pos:end="45:19"><name pos:start="45:19" pos:end="45:19">i</name></expr>]</index></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:27">NULL</name></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="49:5" pos:end="49:28">/* output stream init */</comment>

    <for pos:start="51:5" pos:end="65:5">for<control pos:start="51:8" pos:end="51:32">(<init pos:start="51:9" pos:end="51:12"><expr pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:9">i</name><operator pos:start="51:10" pos:end="51:10">=</operator><literal type="number" pos:start="51:11" pos:end="51:11">0</literal></expr>;</init><condition pos:start="51:13" pos:end="51:28"><expr pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:13">i</name><operator pos:start="51:14" pos:end="51:14">&lt;</operator><name pos:start="51:15" pos:end="51:27"><name pos:start="51:15" pos:end="51:15">s</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:27">nb_streams</name></name></expr>;</condition><incr pos:start="51:29" pos:end="51:31"><expr pos:start="51:29" pos:end="51:31"><name pos:start="51:29" pos:end="51:29">i</name><operator pos:start="51:30" pos:end="51:31">++</operator></expr></incr>)</control> <block pos:start="51:34" pos:end="65:5">{<block_content pos:start="53:9" pos:end="63:27">

        <expr_stmt pos:start="53:9" pos:end="53:49"><expr pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:11">ost</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:48"><name pos:start="53:15" pos:end="53:24">av_mallocz</name><argument_list pos:start="53:25" pos:end="53:48">(<argument pos:start="53:26" pos:end="53:47"><expr pos:start="53:26" pos:end="53:47"><sizeof pos:start="53:26" pos:end="53:47">sizeof<argument_list pos:start="53:32" pos:end="53:47">(<argument pos:start="53:33" pos:end="53:46"><expr pos:start="53:33" pos:end="53:46"><name pos:start="53:33" pos:end="53:46">AVOutputStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:22"><if pos:start="55:9" pos:end="57:22">if <condition pos:start="55:12" pos:end="55:17">(<expr pos:start="55:13" pos:end="55:16"><operator pos:start="55:13" pos:end="55:13">!</operator><name pos:start="55:14" pos:end="55:16">ost</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:22"><block_content pos:start="57:13" pos:end="57:22">

            <goto pos:start="57:13" pos:end="57:22">goto <name pos:start="57:18" pos:end="57:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:23"><expr pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:11">ost</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:18">index</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:22">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:11">ost</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:15">st</name></name> <operator pos:start="61:17" pos:end="61:17">=</operator> <name pos:start="61:19" pos:end="61:31"><name pos:start="61:19" pos:end="61:19">s</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:28">streams</name><index pos:start="61:29" pos:end="61:31">[<expr pos:start="61:30" pos:end="61:30"><name pos:start="61:30" pos:end="61:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:27"><expr pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:17">ost_table</name><index pos:start="63:18" pos:end="63:20">[<expr pos:start="63:19" pos:end="63:19"><name pos:start="63:19" pos:end="63:19">i</name></expr>]</index></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:26">ost</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="69:5" pos:end="69:18"><expr pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:13">use_audio</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <literal type="number" pos:start="69:17" pos:end="69:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:18"><expr pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:13">use_video</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <literal type="number" pos:start="71:17" pos:end="71:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:19"><expr pos:start="73:5" pos:end="73:18"><name pos:start="73:5" pos:end="73:14">frame_rate</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:20"><expr pos:start="75:5" pos:end="75:19"><name pos:start="75:5" pos:end="75:15">sample_rate</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:19"><expr pos:start="77:5" pos:end="77:18"><name pos:start="77:5" pos:end="77:14">frame_size</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:17"><expr pos:start="79:5" pos:end="79:16"><name pos:start="79:5" pos:end="79:12">channels</name> <operator pos:start="79:14" pos:end="79:14">=</operator> <literal type="number" pos:start="79:16" pos:end="79:16">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:14"><expr pos:start="81:5" pos:end="81:13"><name pos:start="81:5" pos:end="81:9">width</name> <operator pos:start="81:11" pos:end="81:11">=</operator> <literal type="number" pos:start="81:13" pos:end="81:13">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:15"><expr pos:start="83:5" pos:end="83:14"><name pos:start="83:5" pos:end="83:10">height</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <literal type="number" pos:start="83:14" pos:end="83:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:21"><expr pos:start="85:5" pos:end="85:20"><name pos:start="85:5" pos:end="85:16">frame_number</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <literal type="number" pos:start="85:20" pos:end="85:20">0</literal></expr>;</expr_stmt>

    

    <for pos:start="89:5" pos:end="161:5">for<control pos:start="89:8" pos:end="89:32">(<init pos:start="89:9" pos:end="89:12"><expr pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:9">i</name><operator pos:start="89:10" pos:end="89:10">=</operator><literal type="number" pos:start="89:11" pos:end="89:11">0</literal></expr>;</init><condition pos:start="89:13" pos:end="89:28"><expr pos:start="89:13" pos:end="89:27"><name pos:start="89:13" pos:end="89:13">i</name><operator pos:start="89:14" pos:end="89:14">&lt;</operator><name pos:start="89:15" pos:end="89:27"><name pos:start="89:15" pos:end="89:15">s</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:27">nb_streams</name></name></expr>;</condition><incr pos:start="89:29" pos:end="89:31"><expr pos:start="89:29" pos:end="89:31"><name pos:start="89:29" pos:end="89:29">i</name><operator pos:start="89:30" pos:end="89:31">++</operator></expr></incr>)</control> <block pos:start="89:34" pos:end="161:5">{<block_content pos:start="91:9" pos:end="159:9">

        <decl_stmt pos:start="91:9" pos:end="91:23"><decl pos:start="91:9" pos:end="91:22"><type pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:15">AVCodec</name> <modifier pos:start="91:17" pos:end="91:17">*</modifier></type><name pos:start="91:18" pos:end="91:22">codec</name></decl>;</decl_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:27"><expr pos:start="95:9" pos:end="95:26"><name pos:start="95:9" pos:end="95:11">ost</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <name pos:start="95:15" pos:end="95:26"><name pos:start="95:15" pos:end="95:23">ost_table</name><index pos:start="95:24" pos:end="95:26">[<expr pos:start="95:25" pos:end="95:25"><name pos:start="95:25" pos:end="95:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:30"><expr pos:start="97:9" pos:end="97:29"><name pos:start="97:9" pos:end="97:11">enc</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <operator pos:start="97:15" pos:end="97:15">&amp;</operator><name pos:start="97:16" pos:end="97:29"><name pos:start="97:16" pos:end="97:18">ost</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:22">st</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:29">codec</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:52"><expr pos:start="99:9" pos:end="99:51"><name pos:start="99:9" pos:end="99:13">codec</name> <operator pos:start="99:15" pos:end="99:15">=</operator> <call pos:start="99:17" pos:end="99:51"><name pos:start="99:17" pos:end="99:36">avcodec_find_encoder</name><argument_list pos:start="99:37" pos:end="99:51">(<argument pos:start="99:38" pos:end="99:50"><expr pos:start="99:38" pos:end="99:50"><name pos:start="99:38" pos:end="99:50"><name pos:start="99:38" pos:end="99:40">enc</name><operator pos:start="99:41" pos:end="99:42">-&gt;</operator><name pos:start="99:43" pos:end="99:50">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="107:9"><if pos:start="101:9" pos:end="107:9">if <condition pos:start="101:12" pos:end="101:19">(<expr pos:start="101:13" pos:end="101:18"><operator pos:start="101:13" pos:end="101:13">!</operator><name pos:start="101:14" pos:end="101:18">codec</name></expr>)</condition> <block pos:start="101:21" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:22">

            <expr_stmt pos:start="103:13" pos:end="103:47"><expr pos:start="103:13" pos:end="103:46"><call pos:start="103:13" pos:end="103:46"><name pos:start="103:13" pos:end="103:19">fprintf</name><argument_list pos:start="103:20" pos:end="103:46">(<argument pos:start="103:21" pos:end="103:26"><expr pos:start="103:21" pos:end="103:26"><name pos:start="103:21" pos:end="103:26">stderr</name></expr></argument>, <argument pos:start="103:29" pos:end="103:45"><expr pos:start="103:29" pos:end="103:45"><literal type="string" pos:start="103:29" pos:end="103:45">"Unknown codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="105:13" pos:end="105:22">return <expr pos:start="105:20" pos:end="105:21"><operator pos:start="105:20" pos:end="105:20">-</operator><literal type="number" pos:start="105:21" pos:end="105:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:41">(<expr pos:start="109:13" pos:end="109:40"><call pos:start="109:13" pos:end="109:36"><name pos:start="109:13" pos:end="109:24">avcodec_open</name><argument_list pos:start="109:25" pos:end="109:36">(<argument pos:start="109:26" pos:end="109:28"><expr pos:start="109:26" pos:end="109:28"><name pos:start="109:26" pos:end="109:28">enc</name></expr></argument>, <argument pos:start="109:31" pos:end="109:35"><expr pos:start="109:31" pos:end="109:35"><name pos:start="109:31" pos:end="109:35">codec</name></expr></argument>)</argument_list></call> <operator pos:start="109:38" pos:end="109:38">&lt;</operator> <literal type="number" pos:start="109:40" pos:end="109:40">0</literal></expr>)</condition> <block pos:start="109:43" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:22">

            <expr_stmt pos:start="111:13" pos:end="111:61"><expr pos:start="111:13" pos:end="111:60"><call pos:start="111:13" pos:end="111:60"><name pos:start="111:13" pos:end="111:19">fprintf</name><argument_list pos:start="111:20" pos:end="111:60">(<argument pos:start="111:21" pos:end="111:26"><expr pos:start="111:21" pos:end="111:26"><name pos:start="111:21" pos:end="111:26">stderr</name></expr></argument>, <argument pos:start="111:29" pos:end="111:59"><expr pos:start="111:29" pos:end="111:59"><literal type="string" pos:start="111:29" pos:end="111:59">"Incorrect encode parameters\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="113:13" pos:end="113:22">return <expr pos:start="113:20" pos:end="113:21"><operator pos:start="113:20" pos:end="113:20">-</operator><literal type="number" pos:start="113:21" pos:end="113:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="117:9" pos:end="159:9">switch<condition pos:start="117:15" pos:end="117:31">(<expr pos:start="117:16" pos:end="117:30"><name pos:start="117:16" pos:end="117:30"><name pos:start="117:16" pos:end="117:18">enc</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:30">codec_type</name></name></expr>)</condition> <block pos:start="117:33" pos:end="159:9">{<block_content pos:start="119:9" pos:end="157:18">

        <case pos:start="119:9" pos:end="119:30">case <expr pos:start="119:14" pos:end="119:29"><name pos:start="119:14" pos:end="119:29">CODEC_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="121:13" pos:end="121:26"><expr pos:start="121:13" pos:end="121:25"><name pos:start="121:13" pos:end="121:21">use_audio</name> <operator pos:start="121:23" pos:end="121:23">=</operator> <literal type="number" pos:start="121:25" pos:end="121:25">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="125:47"><if pos:start="123:13" pos:end="125:47">if <condition pos:start="123:16" pos:end="123:47">(<expr pos:start="123:17" pos:end="123:46"><name pos:start="123:17" pos:end="123:32"><name pos:start="123:17" pos:end="123:19">enc</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:32">sample_rate</name></name> <operator pos:start="123:34" pos:end="123:34">&gt;</operator> <name pos:start="123:36" pos:end="123:46">sample_rate</name></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:47"><block_content pos:start="125:17" pos:end="125:47">

                <expr_stmt pos:start="125:17" pos:end="125:47"><expr pos:start="125:17" pos:end="125:46"><name pos:start="125:17" pos:end="125:27">sample_rate</name> <operator pos:start="125:29" pos:end="125:29">=</operator> <name pos:start="125:31" pos:end="125:46"><name pos:start="125:31" pos:end="125:33">enc</name><operator pos:start="125:34" pos:end="125:35">-&gt;</operator><name pos:start="125:36" pos:end="125:46">sample_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="127:13" pos:end="129:45"><if pos:start="127:13" pos:end="129:45">if <condition pos:start="127:16" pos:end="127:45">(<expr pos:start="127:17" pos:end="127:44"><name pos:start="127:17" pos:end="127:31"><name pos:start="127:17" pos:end="127:19">enc</name><operator pos:start="127:20" pos:end="127:21">-&gt;</operator><name pos:start="127:22" pos:end="127:31">frame_size</name></name> <operator pos:start="127:33" pos:end="127:33">&gt;</operator> <name pos:start="127:35" pos:end="127:44">frame_size</name></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:45"><block_content pos:start="129:17" pos:end="129:45">

                <expr_stmt pos:start="129:17" pos:end="129:45"><expr pos:start="129:17" pos:end="129:44"><name pos:start="129:17" pos:end="129:26">frame_size</name> <operator pos:start="129:28" pos:end="129:28">=</operator> <name pos:start="129:30" pos:end="129:44"><name pos:start="129:30" pos:end="129:32">enc</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:44">frame_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="131:13" pos:end="133:41"><if pos:start="131:13" pos:end="133:41">if <condition pos:start="131:16" pos:end="131:41">(<expr pos:start="131:17" pos:end="131:40"><name pos:start="131:17" pos:end="131:29"><name pos:start="131:17" pos:end="131:19">enc</name><operator pos:start="131:20" pos:end="131:21">-&gt;</operator><name pos:start="131:22" pos:end="131:29">channels</name></name> <operator pos:start="131:31" pos:end="131:31">&gt;</operator> <name pos:start="131:33" pos:end="131:40">channels</name></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:41"><block_content pos:start="133:17" pos:end="133:41">

                <expr_stmt pos:start="133:17" pos:end="133:41"><expr pos:start="133:17" pos:end="133:40"><name pos:start="133:17" pos:end="133:24">channels</name> <operator pos:start="133:26" pos:end="133:26">=</operator> <name pos:start="133:28" pos:end="133:40"><name pos:start="133:28" pos:end="133:30">enc</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:40">channels</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        <case pos:start="137:9" pos:end="137:30">case <expr pos:start="137:14" pos:end="137:29"><name pos:start="137:14" pos:end="137:29">CODEC_TYPE_VIDEO</name></expr>:</case>

            <if_stmt pos:start="139:13" pos:end="141:38"><if pos:start="139:13" pos:end="141:38">if <condition pos:start="139:16" pos:end="139:33">(<expr pos:start="139:17" pos:end="139:32"><operator pos:start="139:17" pos:end="139:17">!</operator><name pos:start="139:18" pos:end="139:32">first_video_enc</name></expr>)</condition><block type="pseudo" pos:start="141:17" pos:end="141:38"><block_content pos:start="141:17" pos:end="141:38">

                <expr_stmt pos:start="141:17" pos:end="141:38"><expr pos:start="141:17" pos:end="141:37"><name pos:start="141:17" pos:end="141:31">first_video_enc</name> <operator pos:start="141:33" pos:end="141:33">=</operator> <name pos:start="141:35" pos:end="141:37">enc</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:26"><expr pos:start="143:13" pos:end="143:25"><name pos:start="143:13" pos:end="143:21">use_video</name> <operator pos:start="143:23" pos:end="143:23">=</operator> <literal type="number" pos:start="143:25" pos:end="143:25">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="145:13" pos:end="147:45"><if pos:start="145:13" pos:end="147:45">if <condition pos:start="145:16" pos:end="145:45">(<expr pos:start="145:17" pos:end="145:44"><name pos:start="145:17" pos:end="145:31"><name pos:start="145:17" pos:end="145:19">enc</name><operator pos:start="145:20" pos:end="145:21">-&gt;</operator><name pos:start="145:22" pos:end="145:31">frame_rate</name></name> <operator pos:start="145:33" pos:end="145:33">&gt;</operator> <name pos:start="145:35" pos:end="145:44">frame_rate</name></expr>)</condition><block type="pseudo" pos:start="147:17" pos:end="147:45"><block_content pos:start="147:17" pos:end="147:45">

                <expr_stmt pos:start="147:17" pos:end="147:45"><expr pos:start="147:17" pos:end="147:44"><name pos:start="147:17" pos:end="147:26">frame_rate</name> <operator pos:start="147:28" pos:end="147:28">=</operator> <name pos:start="147:30" pos:end="147:44"><name pos:start="147:30" pos:end="147:32">enc</name><operator pos:start="147:33" pos:end="147:34">-&gt;</operator><name pos:start="147:35" pos:end="147:44">frame_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="149:13" pos:end="151:35"><if pos:start="149:13" pos:end="151:35">if <condition pos:start="149:16" pos:end="149:35">(<expr pos:start="149:17" pos:end="149:34"><name pos:start="149:17" pos:end="149:26"><name pos:start="149:17" pos:end="149:19">enc</name><operator pos:start="149:20" pos:end="149:21">-&gt;</operator><name pos:start="149:22" pos:end="149:26">width</name></name> <operator pos:start="149:28" pos:end="149:28">&gt;</operator> <name pos:start="149:30" pos:end="149:34">width</name></expr>)</condition><block type="pseudo" pos:start="151:17" pos:end="151:35"><block_content pos:start="151:17" pos:end="151:35">

                <expr_stmt pos:start="151:17" pos:end="151:35"><expr pos:start="151:17" pos:end="151:34"><name pos:start="151:17" pos:end="151:21">width</name> <operator pos:start="151:23" pos:end="151:23">=</operator> <name pos:start="151:25" pos:end="151:34"><name pos:start="151:25" pos:end="151:27">enc</name><operator pos:start="151:28" pos:end="151:29">-&gt;</operator><name pos:start="151:30" pos:end="151:34">width</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="153:13" pos:end="155:37"><if pos:start="153:13" pos:end="155:37">if <condition pos:start="153:16" pos:end="153:37">(<expr pos:start="153:17" pos:end="153:36"><name pos:start="153:17" pos:end="153:27"><name pos:start="153:17" pos:end="153:19">enc</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:27">height</name></name> <operator pos:start="153:29" pos:end="153:29">&gt;</operator> <name pos:start="153:31" pos:end="153:36">height</name></expr>)</condition><block type="pseudo" pos:start="155:17" pos:end="155:37"><block_content pos:start="155:17" pos:end="155:37">

                <expr_stmt pos:start="155:17" pos:end="155:37"><expr pos:start="155:17" pos:end="155:36"><name pos:start="155:17" pos:end="155:22">height</name> <operator pos:start="155:24" pos:end="155:24">=</operator> <name pos:start="155:26" pos:end="155:36"><name pos:start="155:26" pos:end="155:28">enc</name><operator pos:start="155:29" pos:end="155:30">-&gt;</operator><name pos:start="155:31" pos:end="155:36">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="157:13" pos:end="157:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <comment type="block" pos:start="165:5" pos:end="165:15">/* audio */</comment>

    <expr_stmt pos:start="167:5" pos:end="167:19"><expr pos:start="167:5" pos:end="167:18"><name pos:start="167:5" pos:end="167:11">samples</name> <operator pos:start="167:13" pos:end="167:13">=</operator> <name pos:start="167:15" pos:end="167:18">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="169:5" pos:end="209:5"><if pos:start="169:5" pos:end="209:5">if <condition pos:start="169:8" pos:end="169:18">(<expr pos:start="169:9" pos:end="169:17"><name pos:start="169:9" pos:end="169:17">use_audio</name></expr>)</condition> <block pos:start="169:20" pos:end="209:5">{<block_content pos:start="171:9" pos:end="207:9">

        <expr_stmt pos:start="171:9" pos:end="171:73"><expr pos:start="171:9" pos:end="171:72"><call pos:start="171:9" pos:end="171:72"><name pos:start="171:9" pos:end="171:16">snprintf</name><argument_list pos:start="171:17" pos:end="171:72">(<argument pos:start="171:18" pos:end="171:20"><expr pos:start="171:18" pos:end="171:20"><name pos:start="171:18" pos:end="171:20">buf</name></expr></argument>, <argument pos:start="171:23" pos:end="171:33"><expr pos:start="171:23" pos:end="171:33"><sizeof pos:start="171:23" pos:end="171:33">sizeof<argument_list pos:start="171:29" pos:end="171:33">(<argument pos:start="171:30" pos:end="171:32"><expr pos:start="171:30" pos:end="171:32"><name pos:start="171:30" pos:end="171:32">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="171:36" pos:end="171:48"><expr pos:start="171:36" pos:end="171:48"><literal type="string" pos:start="171:36" pos:end="171:48">"audio:%d,%d"</literal></expr></argument>, <argument pos:start="171:51" pos:end="171:61"><expr pos:start="171:51" pos:end="171:61"><name pos:start="171:51" pos:end="171:61">sample_rate</name></expr></argument>, <argument pos:start="171:64" pos:end="171:71"><expr pos:start="171:64" pos:end="171:71"><name pos:start="171:64" pos:end="171:71">channels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:55"><expr pos:start="173:9" pos:end="173:54"><name pos:start="173:9" pos:end="173:11">ret</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <call pos:start="173:15" pos:end="173:54"><name pos:start="173:15" pos:end="173:22">url_open</name><argument_list pos:start="173:23" pos:end="173:54">(<argument pos:start="173:24" pos:end="173:36"><expr pos:start="173:24" pos:end="173:36"><operator pos:start="173:24" pos:end="173:24">&amp;</operator><name pos:start="173:25" pos:end="173:36">audio_handle</name></expr></argument>, <argument pos:start="173:39" pos:end="173:41"><expr pos:start="173:39" pos:end="173:41"><name pos:start="173:39" pos:end="173:41">buf</name></expr></argument>, <argument pos:start="173:44" pos:end="173:53"><expr pos:start="173:44" pos:end="173:53"><name pos:start="173:44" pos:end="173:53">URL_RDONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="175:9" pos:end="207:9"><if pos:start="175:9" pos:end="181:9">if <condition pos:start="175:12" pos:end="175:20">(<expr pos:start="175:13" pos:end="175:19"><name pos:start="175:13" pos:end="175:15">ret</name> <operator pos:start="175:17" pos:end="175:17">&lt;</operator> <literal type="number" pos:start="175:19" pos:end="175:19">0</literal></expr>)</condition> <block pos:start="175:22" pos:end="181:9">{<block_content pos:start="177:13" pos:end="179:26">

            <expr_stmt pos:start="177:13" pos:end="177:86"><expr pos:start="177:13" pos:end="177:85"><call pos:start="177:13" pos:end="177:85"><name pos:start="177:13" pos:end="177:19">fprintf</name><argument_list pos:start="177:20" pos:end="177:85">(<argument pos:start="177:21" pos:end="177:26"><expr pos:start="177:21" pos:end="177:26"><name pos:start="177:21" pos:end="177:26">stderr</name></expr></argument>, <argument pos:start="177:29" pos:end="177:84"><expr pos:start="177:29" pos:end="177:84"><literal type="string" pos:start="177:29" pos:end="177:84">"Could not open audio device: disabling audio capture\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:26"><expr pos:start="179:13" pos:end="179:25"><name pos:start="179:13" pos:end="179:21">use_audio</name> <operator pos:start="179:23" pos:end="179:23">=</operator> <literal type="number" pos:start="179:25" pos:end="179:25">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="181:11" pos:end="207:9">else <block pos:start="181:16" pos:end="207:9">{<block_content pos:start="183:13" pos:end="205:68">

            <decl_stmt pos:start="183:13" pos:end="183:24"><decl pos:start="183:13" pos:end="183:23"><type pos:start="183:13" pos:end="183:21"><name pos:start="183:13" pos:end="183:21">URLFormat</name></type> <name pos:start="183:23" pos:end="183:23">f</name></decl>;</decl_stmt>

            <comment type="block" pos:start="185:13" pos:end="185:49">/* read back exact grab parameters */</comment>

            <if_stmt pos:start="187:13" pos:end="193:13"><if pos:start="187:13" pos:end="193:13">if <condition pos:start="187:16" pos:end="187:52">(<expr pos:start="187:17" pos:end="187:51"><call pos:start="187:17" pos:end="187:47"><name pos:start="187:17" pos:end="187:29">url_getformat</name><argument_list pos:start="187:30" pos:end="187:47">(<argument pos:start="187:31" pos:end="187:42"><expr pos:start="187:31" pos:end="187:42"><name pos:start="187:31" pos:end="187:42">audio_handle</name></expr></argument>, <argument pos:start="187:45" pos:end="187:46"><expr pos:start="187:45" pos:end="187:46"><operator pos:start="187:45" pos:end="187:45">&amp;</operator><name pos:start="187:46" pos:end="187:46">f</name></expr></argument>)</argument_list></call> <operator pos:start="187:49" pos:end="187:49">&lt;</operator> <literal type="number" pos:start="187:51" pos:end="187:51">0</literal></expr>)</condition> <block pos:start="187:54" pos:end="193:13">{<block_content pos:start="189:17" pos:end="191:26">

                <expr_stmt pos:start="189:17" pos:end="189:79"><expr pos:start="189:17" pos:end="189:78"><call pos:start="189:17" pos:end="189:78"><name pos:start="189:17" pos:end="189:23">fprintf</name><argument_list pos:start="189:24" pos:end="189:78">(<argument pos:start="189:25" pos:end="189:30"><expr pos:start="189:25" pos:end="189:30"><name pos:start="189:25" pos:end="189:30">stderr</name></expr></argument>, <argument pos:start="189:33" pos:end="189:77"><expr pos:start="189:33" pos:end="189:77"><literal type="string" pos:start="189:33" pos:end="189:77">"could not read back video grab parameters\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="191:17" pos:end="191:26">goto <name pos:start="191:22" pos:end="191:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:40"><expr pos:start="195:13" pos:end="195:39"><name pos:start="195:13" pos:end="195:23">sample_rate</name> <operator pos:start="195:25" pos:end="195:25">=</operator> <name pos:start="195:27" pos:end="195:39"><name pos:start="195:27" pos:end="195:27">f</name><operator pos:start="195:28" pos:end="195:28">.</operator><name pos:start="195:29" pos:end="195:39">sample_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:34"><expr pos:start="197:13" pos:end="197:33"><name pos:start="197:13" pos:end="197:20">channels</name> <operator pos:start="197:22" pos:end="197:22">=</operator> <name pos:start="197:24" pos:end="197:33"><name pos:start="197:24" pos:end="197:24">f</name><operator pos:start="197:25" pos:end="197:25">.</operator><name pos:start="197:26" pos:end="197:33">channels</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="201:42"><expr pos:start="199:13" pos:end="201:41"><name pos:start="199:13" pos:end="199:27">audio_fifo_size</name> <operator pos:start="199:29" pos:end="199:29">=</operator> <operator pos:start="199:31" pos:end="199:31">(</operator><operator pos:start="199:32" pos:end="199:32">(</operator><name pos:start="199:33" pos:end="199:47">AUDIO_FIFO_SIZE</name> <operator pos:start="199:49" pos:end="199:49">/</operator> <literal type="number" pos:start="199:51" pos:end="199:51">2</literal><operator pos:start="199:52" pos:end="199:52">)</operator> <operator pos:start="199:54" pos:end="199:54">/</operator> <name pos:start="199:56" pos:end="199:80"><name pos:start="199:56" pos:end="199:67">audio_handle</name><operator pos:start="199:68" pos:end="199:69">-&gt;</operator><name pos:start="199:70" pos:end="199:80">packet_size</name></name><operator pos:start="199:81" pos:end="199:81">)</operator> <operator pos:start="199:83" pos:end="199:83">*</operator> 

                <name pos:start="201:17" pos:end="201:41"><name pos:start="201:17" pos:end="201:28">audio_handle</name><operator pos:start="201:29" pos:end="201:30">-&gt;</operator><name pos:start="201:31" pos:end="201:41">packet_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="205:68"><expr pos:start="203:13" pos:end="205:67"><call pos:start="203:13" pos:end="205:67"><name pos:start="203:13" pos:end="203:19">fprintf</name><argument_list pos:start="203:20" pos:end="205:67">(<argument pos:start="203:21" pos:end="203:26"><expr pos:start="203:21" pos:end="203:26"><name pos:start="203:21" pos:end="203:26">stderr</name></expr></argument>, <argument pos:start="203:29" pos:end="203:57"><expr pos:start="203:29" pos:end="203:57"><literal type="string" pos:start="203:29" pos:end="203:57">"Audio sampling: %d Hz, %s\n"</literal></expr></argument>, 

                    <argument pos:start="205:21" pos:end="205:31"><expr pos:start="205:21" pos:end="205:31"><name pos:start="205:21" pos:end="205:31">sample_rate</name></expr></argument>, <argument pos:start="205:34" pos:end="205:66"><expr pos:start="205:34" pos:end="205:66"><ternary pos:start="205:34" pos:end="205:66"><condition pos:start="205:34" pos:end="205:48"><expr pos:start="205:34" pos:end="205:46"><name pos:start="205:34" pos:end="205:41">channels</name> <operator pos:start="205:43" pos:end="205:44">==</operator> <literal type="number" pos:start="205:46" pos:end="205:46">2</literal></expr> ?</condition><then pos:start="205:50" pos:end="205:57"> <expr pos:start="205:50" pos:end="205:57"><literal type="string" pos:start="205:50" pos:end="205:57">"stereo"</literal></expr> </then><else pos:start="205:59" pos:end="205:66">: <expr pos:start="205:61" pos:end="205:66"><literal type="string" pos:start="205:61" pos:end="205:66">"mono"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    

    <comment type="block" pos:start="213:5" pos:end="213:15">/* video */</comment>

    <if_stmt pos:start="215:5" pos:end="309:5"><if pos:start="215:5" pos:end="309:5">if <condition pos:start="215:8" pos:end="215:18">(<expr pos:start="215:9" pos:end="215:17"><name pos:start="215:9" pos:end="215:17">use_video</name></expr>)</condition> <block pos:start="215:20" pos:end="309:5">{<block_content pos:start="217:9" pos:end="307:9">

        <expr_stmt pos:start="217:9" pos:end="219:69"><expr pos:start="217:9" pos:end="219:68"><call pos:start="217:9" pos:end="219:68"><name pos:start="217:9" pos:end="217:16">snprintf</name><argument_list pos:start="217:17" pos:end="219:68">(<argument pos:start="217:18" pos:end="217:20"><expr pos:start="217:18" pos:end="217:20"><name pos:start="217:18" pos:end="217:20">buf</name></expr></argument>, <argument pos:start="217:23" pos:end="217:33"><expr pos:start="217:23" pos:end="217:33"><sizeof pos:start="217:23" pos:end="217:33">sizeof<argument_list pos:start="217:29" pos:end="217:33">(<argument pos:start="217:30" pos:end="217:32"><expr pos:start="217:30" pos:end="217:32"><name pos:start="217:30" pos:end="217:32">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="217:36" pos:end="217:51"><expr pos:start="217:36" pos:end="217:51"><literal type="string" pos:start="217:36" pos:end="217:51">"video:%d,%d,%f"</literal></expr></argument>, 

                 <argument pos:start="219:18" pos:end="219:22"><expr pos:start="219:18" pos:end="219:22"><name pos:start="219:18" pos:end="219:22">width</name></expr></argument>, <argument pos:start="219:25" pos:end="219:30"><expr pos:start="219:25" pos:end="219:30"><name pos:start="219:25" pos:end="219:30">height</name></expr></argument>, <argument pos:start="219:33" pos:end="219:67"><expr pos:start="219:33" pos:end="219:67"><operator pos:start="219:33" pos:end="219:33">(</operator><name pos:start="219:34" pos:end="219:38">float</name><operator pos:start="219:39" pos:end="219:39">)</operator><name pos:start="219:40" pos:end="219:49">frame_rate</name> <operator pos:start="219:51" pos:end="219:51">/</operator> <name pos:start="219:53" pos:end="219:67">FRAME_RATE_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="223:9" pos:end="223:55"><expr pos:start="223:9" pos:end="223:54"><name pos:start="223:9" pos:end="223:11">ret</name> <operator pos:start="223:13" pos:end="223:13">=</operator> <call pos:start="223:15" pos:end="223:54"><name pos:start="223:15" pos:end="223:22">url_open</name><argument_list pos:start="223:23" pos:end="223:54">(<argument pos:start="223:24" pos:end="223:36"><expr pos:start="223:24" pos:end="223:36"><operator pos:start="223:24" pos:end="223:24">&amp;</operator><name pos:start="223:25" pos:end="223:36">video_handle</name></expr></argument>, <argument pos:start="223:39" pos:end="223:41"><expr pos:start="223:39" pos:end="223:41"><name pos:start="223:39" pos:end="223:41">buf</name></expr></argument>, <argument pos:start="223:44" pos:end="223:53"><expr pos:start="223:44" pos:end="223:53"><name pos:start="223:44" pos:end="223:53">URL_RDONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="225:9" pos:end="307:9"><if pos:start="225:9" pos:end="231:9">if <condition pos:start="225:12" pos:end="225:20">(<expr pos:start="225:13" pos:end="225:19"><name pos:start="225:13" pos:end="225:15">ret</name> <operator pos:start="225:17" pos:end="225:17">&lt;</operator> <literal type="number" pos:start="225:19" pos:end="225:19">0</literal></expr>)</condition> <block pos:start="225:22" pos:end="231:9">{<block_content pos:start="227:13" pos:end="229:26">

            <expr_stmt pos:start="227:13" pos:end="227:94"><expr pos:start="227:13" pos:end="227:93"><call pos:start="227:13" pos:end="227:93"><name pos:start="227:13" pos:end="227:19">fprintf</name><argument_list pos:start="227:20" pos:end="227:93">(<argument pos:start="227:21" pos:end="227:26"><expr pos:start="227:21" pos:end="227:26"><name pos:start="227:21" pos:end="227:26">stderr</name></expr></argument>,<argument pos:start="227:28" pos:end="227:92"><expr pos:start="227:28" pos:end="227:92"><literal type="string" pos:start="227:28" pos:end="227:92">"Could not init video 4 linux capture: disabling video capture\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:26"><expr pos:start="229:13" pos:end="229:25"><name pos:start="229:13" pos:end="229:21">use_video</name> <operator pos:start="229:23" pos:end="229:23">=</operator> <literal type="number" pos:start="229:25" pos:end="229:25">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="231:11" pos:end="307:9">else <block pos:start="231:16" pos:end="307:9">{<block_content pos:start="233:13" pos:end="305:85">

            <decl_stmt pos:start="233:13" pos:end="233:24"><decl pos:start="233:13" pos:end="233:23"><type pos:start="233:13" pos:end="233:21"><name pos:start="233:13" pos:end="233:21">URLFormat</name></type> <name pos:start="233:23" pos:end="233:23">f</name></decl>;</decl_stmt>

            <decl_stmt pos:start="235:13" pos:end="235:36"><decl pos:start="235:13" pos:end="235:35"><type pos:start="235:13" pos:end="235:24"><specifier pos:start="235:13" pos:end="235:17">const</specifier> <name pos:start="235:19" pos:end="235:22">char</name> <modifier pos:start="235:24" pos:end="235:24">*</modifier></type><name pos:start="235:25" pos:end="235:35">pix_fmt_str</name></decl>;</decl_stmt>

            <comment type="block" pos:start="237:13" pos:end="237:49">/* read back exact grab parameters */</comment>

            <if_stmt pos:start="239:13" pos:end="245:13"><if pos:start="239:13" pos:end="245:13">if <condition pos:start="239:16" pos:end="239:52">(<expr pos:start="239:17" pos:end="239:51"><call pos:start="239:17" pos:end="239:47"><name pos:start="239:17" pos:end="239:29">url_getformat</name><argument_list pos:start="239:30" pos:end="239:47">(<argument pos:start="239:31" pos:end="239:42"><expr pos:start="239:31" pos:end="239:42"><name pos:start="239:31" pos:end="239:42">video_handle</name></expr></argument>, <argument pos:start="239:45" pos:end="239:46"><expr pos:start="239:45" pos:end="239:46"><operator pos:start="239:45" pos:end="239:45">&amp;</operator><name pos:start="239:46" pos:end="239:46">f</name></expr></argument>)</argument_list></call> <operator pos:start="239:49" pos:end="239:49">&lt;</operator> <literal type="number" pos:start="239:51" pos:end="239:51">0</literal></expr>)</condition> <block pos:start="239:54" pos:end="245:13">{<block_content pos:start="241:17" pos:end="243:26">

                <expr_stmt pos:start="241:17" pos:end="241:79"><expr pos:start="241:17" pos:end="241:78"><call pos:start="241:17" pos:end="241:78"><name pos:start="241:17" pos:end="241:23">fprintf</name><argument_list pos:start="241:24" pos:end="241:78">(<argument pos:start="241:25" pos:end="241:30"><expr pos:start="241:25" pos:end="241:30"><name pos:start="241:25" pos:end="241:30">stderr</name></expr></argument>, <argument pos:start="241:33" pos:end="241:77"><expr pos:start="241:33" pos:end="241:77"><literal type="string" pos:start="241:33" pos:end="241:77">"could not read back video grab parameters\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="243:17" pos:end="243:26">goto <name pos:start="243:22" pos:end="243:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:28"><expr pos:start="247:13" pos:end="247:27"><name pos:start="247:13" pos:end="247:17">width</name> <operator pos:start="247:19" pos:end="247:19">=</operator> <name pos:start="247:21" pos:end="247:27"><name pos:start="247:21" pos:end="247:21">f</name><operator pos:start="247:22" pos:end="247:22">.</operator><name pos:start="247:23" pos:end="247:27">width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:30"><expr pos:start="249:13" pos:end="249:29"><name pos:start="249:13" pos:end="249:18">height</name> <operator pos:start="249:20" pos:end="249:20">=</operator> <name pos:start="249:22" pos:end="249:29"><name pos:start="249:22" pos:end="249:22">f</name><operator pos:start="249:23" pos:end="249:23">.</operator><name pos:start="249:24" pos:end="249:29">height</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:32"><expr pos:start="251:13" pos:end="251:31"><name pos:start="251:13" pos:end="251:19">pix_fmt</name> <operator pos:start="251:21" pos:end="251:21">=</operator> <name pos:start="251:23" pos:end="251:31"><name pos:start="251:23" pos:end="251:23">f</name><operator pos:start="251:24" pos:end="251:24">.</operator><name pos:start="251:25" pos:end="251:31">pix_fmt</name></name></expr>;</expr_stmt>

            <switch pos:start="253:13" pos:end="285:13">switch<condition pos:start="253:19" pos:end="253:27">(<expr pos:start="253:20" pos:end="253:26"><name pos:start="253:20" pos:end="253:26">pix_fmt</name></expr>)</condition> <block pos:start="253:29" pos:end="285:13">{<block_content pos:start="255:13" pos:end="283:22">

            <case pos:start="255:13" pos:end="255:33">case <expr pos:start="255:18" pos:end="255:32"><name pos:start="255:18" pos:end="255:32">PIX_FMT_YUV420P</name></expr>:</case>

                <expr_stmt pos:start="257:17" pos:end="257:37"><expr pos:start="257:17" pos:end="257:36"><name pos:start="257:17" pos:end="257:27">pix_fmt_str</name> <operator pos:start="257:29" pos:end="257:29">=</operator> <literal type="string" pos:start="257:31" pos:end="257:36">"420P"</literal></expr>;</expr_stmt>

                <break pos:start="259:17" pos:end="259:22">break;</break>

            <case pos:start="261:13" pos:end="261:32">case <expr pos:start="261:18" pos:end="261:31"><name pos:start="261:18" pos:end="261:31">PIX_FMT_YUV422</name></expr>:</case>

                <expr_stmt pos:start="263:17" pos:end="263:36"><expr pos:start="263:17" pos:end="263:35"><name pos:start="263:17" pos:end="263:27">pix_fmt_str</name> <operator pos:start="263:29" pos:end="263:29">=</operator> <literal type="string" pos:start="263:31" pos:end="263:35">"422"</literal></expr>;</expr_stmt>

                <break pos:start="265:17" pos:end="265:22">break;</break>

            <case pos:start="267:13" pos:end="267:31">case <expr pos:start="267:18" pos:end="267:30"><name pos:start="267:18" pos:end="267:30">PIX_FMT_RGB24</name></expr>:</case>

                <expr_stmt pos:start="269:17" pos:end="269:38"><expr pos:start="269:17" pos:end="269:37"><name pos:start="269:17" pos:end="269:27">pix_fmt_str</name> <operator pos:start="269:29" pos:end="269:29">=</operator> <literal type="string" pos:start="269:31" pos:end="269:37">"RGB24"</literal></expr>;</expr_stmt>

                <break pos:start="271:17" pos:end="271:22">break;</break>

            <case pos:start="273:13" pos:end="273:31">case <expr pos:start="273:18" pos:end="273:30"><name pos:start="273:18" pos:end="273:30">PIX_FMT_BGR24</name></expr>:</case>

                <expr_stmt pos:start="275:17" pos:end="275:38"><expr pos:start="275:17" pos:end="275:37"><name pos:start="275:17" pos:end="275:27">pix_fmt_str</name> <operator pos:start="275:29" pos:end="275:29">=</operator> <literal type="string" pos:start="275:31" pos:end="275:37">"BGR24"</literal></expr>;</expr_stmt>

                <break pos:start="277:17" pos:end="277:22">break;</break>

            <default pos:start="279:13" pos:end="279:20">default:</default>

                <expr_stmt pos:start="281:17" pos:end="281:36"><expr pos:start="281:17" pos:end="281:35"><name pos:start="281:17" pos:end="281:27">pix_fmt_str</name> <operator pos:start="281:29" pos:end="281:29">=</operator> <literal type="string" pos:start="281:31" pos:end="281:35">"???"</literal></expr>;</expr_stmt>

                <break pos:start="283:17" pos:end="283:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="287:13" pos:end="287:53"><expr pos:start="287:13" pos:end="287:52"><name pos:start="287:13" pos:end="287:24">picture_size</name> <operator pos:start="287:26" pos:end="287:26">=</operator> <name pos:start="287:28" pos:end="287:52"><name pos:start="287:28" pos:end="287:39">video_handle</name><operator pos:start="287:40" pos:end="287:41">-&gt;</operator><name pos:start="287:42" pos:end="287:52">packet_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="289:50"><expr pos:start="289:13" pos:end="289:49"><name pos:start="289:13" pos:end="289:26">picture_in_buf</name> <operator pos:start="289:28" pos:end="289:28">=</operator> <call pos:start="289:30" pos:end="289:49"><name pos:start="289:30" pos:end="289:35">malloc</name><argument_list pos:start="289:36" pos:end="289:49">(<argument pos:start="289:37" pos:end="289:48"><expr pos:start="289:37" pos:end="289:48"><name pos:start="289:37" pos:end="289:48">picture_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="291:13" pos:end="293:26"><if pos:start="291:13" pos:end="293:26">if <condition pos:start="291:16" pos:end="291:32">(<expr pos:start="291:17" pos:end="291:31"><operator pos:start="291:17" pos:end="291:17">!</operator><name pos:start="291:18" pos:end="291:31">picture_in_buf</name></expr>)</condition><block type="pseudo" pos:start="293:17" pos:end="293:26"><block_content pos:start="293:17" pos:end="293:26">

                <goto pos:start="293:17" pos:end="293:26">goto <name pos:start="293:22" pos:end="293:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="295:13" pos:end="295:77">/* allocate a temporary picture if not grabbing in 420P format */</comment>

            <if_stmt pos:start="297:13" pos:end="301:13"><if pos:start="297:13" pos:end="301:13">if <condition pos:start="297:16" pos:end="297:43">(<expr pos:start="297:17" pos:end="297:42"><name pos:start="297:17" pos:end="297:23">pix_fmt</name> <operator pos:start="297:25" pos:end="297:26">!=</operator> <name pos:start="297:28" pos:end="297:42">PIX_FMT_YUV420P</name></expr>)</condition> <block pos:start="297:45" pos:end="301:13">{<block_content pos:start="299:17" pos:end="299:64">

                <expr_stmt pos:start="299:17" pos:end="299:64"><expr pos:start="299:17" pos:end="299:63"><name pos:start="299:17" pos:end="299:28">picture_420p</name> <operator pos:start="299:30" pos:end="299:30">=</operator> <call pos:start="299:32" pos:end="299:63"><name pos:start="299:32" pos:end="299:37">malloc</name><argument_list pos:start="299:38" pos:end="299:63">(<argument pos:start="299:39" pos:end="299:62"><expr pos:start="299:39" pos:end="299:62"><operator pos:start="299:39" pos:end="299:39">(</operator><name pos:start="299:40" pos:end="299:44">width</name> <operator pos:start="299:46" pos:end="299:46">*</operator> <name pos:start="299:48" pos:end="299:53">height</name> <operator pos:start="299:55" pos:end="299:55">*</operator> <literal type="number" pos:start="299:57" pos:end="299:57">3</literal><operator pos:start="299:58" pos:end="299:58">)</operator> <operator pos:start="299:60" pos:end="299:60">/</operator> <literal type="number" pos:start="299:62" pos:end="299:62">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="303:13" pos:end="305:85"><expr pos:start="303:13" pos:end="305:84"><call pos:start="303:13" pos:end="305:84"><name pos:start="303:13" pos:end="303:19">fprintf</name><argument_list pos:start="303:20" pos:end="305:84">(<argument pos:start="303:21" pos:end="303:26"><expr pos:start="303:21" pos:end="303:26"><name pos:start="303:21" pos:end="303:26">stderr</name></expr></argument>, <argument pos:start="303:29" pos:end="303:75"><expr pos:start="303:29" pos:end="303:75"><literal type="string" pos:start="303:29" pos:end="303:75">"Video sampling: %dx%d, %s format, %0.2f fps\n"</literal></expr></argument>, 

                    <argument pos:start="305:21" pos:end="305:25"><expr pos:start="305:21" pos:end="305:25"><name pos:start="305:21" pos:end="305:25">width</name></expr></argument>, <argument pos:start="305:28" pos:end="305:33"><expr pos:start="305:28" pos:end="305:33"><name pos:start="305:28" pos:end="305:33">height</name></expr></argument>, <argument pos:start="305:36" pos:end="305:46"><expr pos:start="305:36" pos:end="305:46"><name pos:start="305:36" pos:end="305:46">pix_fmt_str</name></expr></argument>, <argument pos:start="305:49" pos:end="305:83"><expr pos:start="305:49" pos:end="305:83"><operator pos:start="305:49" pos:end="305:49">(</operator><name pos:start="305:50" pos:end="305:54">float</name><operator pos:start="305:55" pos:end="305:55">)</operator><name pos:start="305:56" pos:end="305:65">frame_rate</name> <operator pos:start="305:67" pos:end="305:67">/</operator> <name pos:start="305:69" pos:end="305:83">FRAME_RATE_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="313:5" pos:end="319:5"><if pos:start="313:5" pos:end="319:5">if <condition pos:start="313:8" pos:end="313:33">(<expr pos:start="313:9" pos:end="313:32"><operator pos:start="313:9" pos:end="313:9">!</operator><name pos:start="313:10" pos:end="313:18">use_video</name> <operator pos:start="313:20" pos:end="313:21">&amp;&amp;</operator> <operator pos:start="313:23" pos:end="313:23">!</operator><name pos:start="313:24" pos:end="313:32">use_audio</name></expr>)</condition> <block pos:start="313:35" pos:end="319:5">{<block_content pos:start="315:9" pos:end="317:16">

        <expr_stmt pos:start="315:9" pos:end="315:66"><expr pos:start="315:9" pos:end="315:65"><call pos:start="315:9" pos:end="315:65"><name pos:start="315:9" pos:end="315:15">fprintf</name><argument_list pos:start="315:16" pos:end="315:65">(<argument pos:start="315:17" pos:end="315:22"><expr pos:start="315:17" pos:end="315:22"><name pos:start="315:17" pos:end="315:22">stderr</name></expr></argument>,<argument pos:start="315:24" pos:end="315:64"><expr pos:start="315:24" pos:end="315:64"><literal type="string" pos:start="315:24" pos:end="315:64">"Could not open grab devices : exiting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:16"><expr pos:start="317:9" pos:end="317:15"><call pos:start="317:9" pos:end="317:15"><name pos:start="317:9" pos:end="317:12">exit</name><argument_list pos:start="317:13" pos:end="317:15">(<argument pos:start="317:14" pos:end="317:14"><expr pos:start="317:14" pos:end="317:14"><literal type="number" pos:start="317:14" pos:end="317:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="323:5" pos:end="323:44">/* init built in conversion functions */</comment>

    <for pos:start="325:5" pos:end="397:5">for<control pos:start="325:8" pos:end="325:32">(<init pos:start="325:9" pos:end="325:12"><expr pos:start="325:9" pos:end="325:11"><name pos:start="325:9" pos:end="325:9">i</name><operator pos:start="325:10" pos:end="325:10">=</operator><literal type="number" pos:start="325:11" pos:end="325:11">0</literal></expr>;</init><condition pos:start="325:13" pos:end="325:28"><expr pos:start="325:13" pos:end="325:27"><name pos:start="325:13" pos:end="325:13">i</name><operator pos:start="325:14" pos:end="325:14">&lt;</operator><name pos:start="325:15" pos:end="325:27"><name pos:start="325:15" pos:end="325:15">s</name><operator pos:start="325:16" pos:end="325:17">-&gt;</operator><name pos:start="325:18" pos:end="325:27">nb_streams</name></name></expr>;</condition><incr pos:start="325:29" pos:end="325:31"><expr pos:start="325:29" pos:end="325:31"><name pos:start="325:29" pos:end="325:29">i</name><operator pos:start="325:30" pos:end="325:31">++</operator></expr></incr>)</control> <block pos:start="325:34" pos:end="397:5">{<block_content pos:start="327:9" pos:end="395:9">

        <expr_stmt pos:start="327:9" pos:end="327:27"><expr pos:start="327:9" pos:end="327:26"><name pos:start="327:9" pos:end="327:11">ost</name> <operator pos:start="327:13" pos:end="327:13">=</operator> <name pos:start="327:15" pos:end="327:26"><name pos:start="327:15" pos:end="327:23">ost_table</name><index pos:start="327:24" pos:end="327:26">[<expr pos:start="327:25" pos:end="327:25"><name pos:start="327:25" pos:end="327:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="329:9" pos:end="329:30"><expr pos:start="329:9" pos:end="329:29"><name pos:start="329:9" pos:end="329:11">enc</name> <operator pos:start="329:13" pos:end="329:13">=</operator> <operator pos:start="329:15" pos:end="329:15">&amp;</operator><name pos:start="329:16" pos:end="329:29"><name pos:start="329:16" pos:end="329:18">ost</name><operator pos:start="329:19" pos:end="329:20">-&gt;</operator><name pos:start="329:21" pos:end="329:22">st</name><operator pos:start="329:23" pos:end="329:24">-&gt;</operator><name pos:start="329:25" pos:end="329:29">codec</name></name></expr>;</expr_stmt>

        <switch pos:start="331:9" pos:end="395:9">switch<condition pos:start="331:15" pos:end="331:31">(<expr pos:start="331:16" pos:end="331:30"><name pos:start="331:16" pos:end="331:30"><name pos:start="331:16" pos:end="331:18">enc</name><operator pos:start="331:19" pos:end="331:20">-&gt;</operator><name pos:start="331:21" pos:end="331:30">codec_type</name></name></expr>)</condition> <block pos:start="331:33" pos:end="395:9">{<block_content pos:start="333:9" pos:end="393:13">

        <case pos:start="333:9" pos:end="333:30">case <expr pos:start="333:14" pos:end="333:29"><name pos:start="333:14" pos:end="333:29">CODEC_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="335:13" pos:end="335:36"><expr pos:start="335:13" pos:end="335:35"><name pos:start="335:13" pos:end="335:31"><name pos:start="335:13" pos:end="335:15">ost</name><operator pos:start="335:16" pos:end="335:17">-&gt;</operator><name pos:start="335:18" pos:end="335:31">audio_resample</name></name> <operator pos:start="335:33" pos:end="335:33">=</operator> <literal type="number" pos:start="335:35" pos:end="335:35">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="337:13" pos:end="347:13"><if pos:start="337:13" pos:end="347:13">if <condition pos:start="337:16" pos:end="339:50">(<expr pos:start="337:17" pos:end="339:49"><operator pos:start="337:17" pos:end="337:17">(</operator><name pos:start="337:18" pos:end="337:30"><name pos:start="337:18" pos:end="337:20">enc</name><operator pos:start="337:21" pos:end="337:22">-&gt;</operator><name pos:start="337:23" pos:end="337:30">channels</name></name> <operator pos:start="337:32" pos:end="337:33">!=</operator> <name pos:start="337:35" pos:end="337:42">channels</name> <operator pos:start="337:44" pos:end="337:45">||</operator>

                 <name pos:start="339:18" pos:end="339:33"><name pos:start="339:18" pos:end="339:20">enc</name><operator pos:start="339:21" pos:end="339:22">-&gt;</operator><name pos:start="339:23" pos:end="339:33">sample_rate</name></name> <operator pos:start="339:35" pos:end="339:36">!=</operator> <name pos:start="339:38" pos:end="339:48">sample_rate</name><operator pos:start="339:49" pos:end="339:49">)</operator></expr>)</condition> <block pos:start="339:52" pos:end="347:13">{<block_content pos:start="341:17" pos:end="345:83">

                <expr_stmt pos:start="341:17" pos:end="341:40"><expr pos:start="341:17" pos:end="341:39"><name pos:start="341:17" pos:end="341:35"><name pos:start="341:17" pos:end="341:19">ost</name><operator pos:start="341:20" pos:end="341:21">-&gt;</operator><name pos:start="341:22" pos:end="341:35">audio_resample</name></name> <operator pos:start="341:37" pos:end="341:37">=</operator> <literal type="number" pos:start="341:39" pos:end="341:39">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="343:17" pos:end="345:83"><expr pos:start="343:17" pos:end="345:82"><name pos:start="343:17" pos:end="343:29"><name pos:start="343:17" pos:end="343:19">ost</name><operator pos:start="343:20" pos:end="343:21">-&gt;</operator><name pos:start="343:22" pos:end="343:29">resample</name></name> <operator pos:start="343:31" pos:end="343:31">=</operator> <call pos:start="343:33" pos:end="345:82"><name pos:start="343:33" pos:end="343:51">audio_resample_init</name><argument_list pos:start="343:52" pos:end="345:82">(<argument pos:start="343:53" pos:end="343:65"><expr pos:start="343:53" pos:end="343:65"><name pos:start="343:53" pos:end="343:65"><name pos:start="343:53" pos:end="343:55">enc</name><operator pos:start="343:56" pos:end="343:57">-&gt;</operator><name pos:start="343:58" pos:end="343:65">channels</name></name></expr></argument>, <argument pos:start="343:68" pos:end="343:75"><expr pos:start="343:68" pos:end="343:75"><name pos:start="343:68" pos:end="343:75">channels</name></expr></argument>,

                                                    <argument pos:start="345:53" pos:end="345:68"><expr pos:start="345:53" pos:end="345:68"><name pos:start="345:53" pos:end="345:68"><name pos:start="345:53" pos:end="345:55">enc</name><operator pos:start="345:56" pos:end="345:57">-&gt;</operator><name pos:start="345:58" pos:end="345:68">sample_rate</name></name></expr></argument>, <argument pos:start="345:71" pos:end="345:81"><expr pos:start="345:71" pos:end="345:81"><name pos:start="345:71" pos:end="345:81">sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="349:13" pos:end="353:26"><if pos:start="349:13" pos:end="353:26">if <condition pos:start="349:16" pos:end="351:69">(<expr pos:start="349:17" pos:end="351:68"><call pos:start="349:17" pos:end="351:68"><name pos:start="349:17" pos:end="349:25">fifo_init</name><argument_list pos:start="349:26" pos:end="351:68">(<argument pos:start="349:27" pos:end="349:36"><expr pos:start="349:27" pos:end="349:36"><operator pos:start="349:27" pos:end="349:27">&amp;</operator><name pos:start="349:28" pos:end="349:36"><name pos:start="349:28" pos:end="349:30">ost</name><operator pos:start="349:31" pos:end="349:32">-&gt;</operator><name pos:start="349:33" pos:end="349:36">fifo</name></name></expr></argument>, <argument pos:start="349:39" pos:end="351:67"><expr pos:start="349:39" pos:end="351:67"><operator pos:start="349:39" pos:end="349:39">(</operator><literal type="number" pos:start="349:40" pos:end="349:40">2</literal> <operator pos:start="349:42" pos:end="349:42">*</operator> <name pos:start="349:44" pos:end="349:58">audio_fifo_size</name> <operator pos:start="349:60" pos:end="349:60">*</operator> <name pos:start="349:62" pos:end="349:77"><name pos:start="349:62" pos:end="349:64">enc</name><operator pos:start="349:65" pos:end="349:66">-&gt;</operator><name pos:start="349:67" pos:end="349:77">sample_rate</name></name> <operator pos:start="349:79" pos:end="349:79">*</operator>

                                       <name pos:start="351:40" pos:end="351:52"><name pos:start="351:40" pos:end="351:42">enc</name><operator pos:start="351:43" pos:end="351:44">-&gt;</operator><name pos:start="351:45" pos:end="351:52">channels</name></name><operator pos:start="351:53" pos:end="351:53">)</operator> <operator pos:start="351:55" pos:end="351:55">/</operator> <name pos:start="351:57" pos:end="351:67">sample_rate</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="353:17" pos:end="353:26"><block_content pos:start="353:17" pos:end="353:26">

                <goto pos:start="353:17" pos:end="353:26">goto <name pos:start="353:22" pos:end="353:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="355:13" pos:end="355:18">break;</break>

        <case pos:start="357:9" pos:end="357:30">case <expr pos:start="357:14" pos:end="357:29"><name pos:start="357:14" pos:end="357:29">CODEC_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="359:13" pos:end="359:36"><expr pos:start="359:13" pos:end="359:35"><name pos:start="359:13" pos:end="359:31"><name pos:start="359:13" pos:end="359:15">ost</name><operator pos:start="359:16" pos:end="359:17">-&gt;</operator><name pos:start="359:18" pos:end="359:31">video_resample</name></name> <operator pos:start="359:33" pos:end="359:33">=</operator> <literal type="number" pos:start="359:35" pos:end="359:35">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="361:13" pos:end="393:13"><if pos:start="361:13" pos:end="393:13">if <condition pos:start="361:16" pos:end="363:38">(<expr pos:start="361:17" pos:end="363:37"><name pos:start="361:17" pos:end="361:26"><name pos:start="361:17" pos:end="361:19">enc</name><operator pos:start="361:20" pos:end="361:21">-&gt;</operator><name pos:start="361:22" pos:end="361:26">width</name></name> <operator pos:start="361:28" pos:end="361:29">!=</operator> <name pos:start="361:31" pos:end="361:35">width</name> <operator pos:start="361:37" pos:end="361:38">||</operator>

                <name pos:start="363:17" pos:end="363:27"><name pos:start="363:17" pos:end="363:19">enc</name><operator pos:start="363:20" pos:end="363:21">-&gt;</operator><name pos:start="363:22" pos:end="363:27">height</name></name> <operator pos:start="363:29" pos:end="363:30">!=</operator> <name pos:start="363:32" pos:end="363:37">height</name></expr>)</condition> <block pos:start="363:40" pos:end="393:13">{<block_content pos:start="365:17" pos:end="391:49">

                <decl_stmt pos:start="365:17" pos:end="365:27"><decl pos:start="365:17" pos:end="365:26"><type pos:start="365:17" pos:end="365:23"><name pos:start="365:17" pos:end="365:21">UINT8</name> <modifier pos:start="365:23" pos:end="365:23">*</modifier></type><name pos:start="365:24" pos:end="365:26">buf</name></decl>;</decl_stmt>

                <expr_stmt pos:start="367:17" pos:end="367:40"><expr pos:start="367:17" pos:end="367:39"><name pos:start="367:17" pos:end="367:35"><name pos:start="367:17" pos:end="367:19">ost</name><operator pos:start="367:20" pos:end="367:21">-&gt;</operator><name pos:start="367:22" pos:end="367:35">video_resample</name></name> <operator pos:start="367:37" pos:end="367:37">=</operator> <literal type="number" pos:start="367:39" pos:end="367:39">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="369:17" pos:end="369:65"><expr pos:start="369:17" pos:end="369:64"><name pos:start="369:17" pos:end="369:19">buf</name> <operator pos:start="369:21" pos:end="369:21">=</operator> <call pos:start="369:23" pos:end="369:64"><name pos:start="369:23" pos:end="369:28">malloc</name><argument_list pos:start="369:29" pos:end="369:64">(<argument pos:start="369:30" pos:end="369:63"><expr pos:start="369:30" pos:end="369:63"><operator pos:start="369:30" pos:end="369:30">(</operator><name pos:start="369:31" pos:end="369:40"><name pos:start="369:31" pos:end="369:33">enc</name><operator pos:start="369:34" pos:end="369:35">-&gt;</operator><name pos:start="369:36" pos:end="369:40">width</name></name> <operator pos:start="369:42" pos:end="369:42">*</operator> <name pos:start="369:44" pos:end="369:54"><name pos:start="369:44" pos:end="369:46">enc</name><operator pos:start="369:47" pos:end="369:48">-&gt;</operator><name pos:start="369:49" pos:end="369:54">height</name></name> <operator pos:start="369:56" pos:end="369:56">*</operator> <literal type="number" pos:start="369:58" pos:end="369:58">3</literal><operator pos:start="369:59" pos:end="369:59">)</operator> <operator pos:start="369:61" pos:end="369:61">/</operator> <literal type="number" pos:start="369:63" pos:end="369:63">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="371:17" pos:end="373:30"><if pos:start="371:17" pos:end="373:30">if <condition pos:start="371:20" pos:end="371:25">(<expr pos:start="371:21" pos:end="371:24"><operator pos:start="371:21" pos:end="371:21">!</operator><name pos:start="371:22" pos:end="371:24">buf</name></expr>)</condition><block type="pseudo" pos:start="373:21" pos:end="373:30"><block_content pos:start="373:21" pos:end="373:30">

                    <goto pos:start="373:21" pos:end="373:30">goto <name pos:start="373:26" pos:end="373:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="375:17" pos:end="375:44"><expr pos:start="375:17" pos:end="375:43"><name pos:start="375:17" pos:end="375:37"><name pos:start="375:17" pos:end="375:19">ost</name><operator pos:start="375:20" pos:end="375:21">-&gt;</operator><name pos:start="375:22" pos:end="375:29">pict_tmp</name><operator pos:start="375:30" pos:end="375:30">.</operator><name pos:start="375:31" pos:end="375:34">data</name><index pos:start="375:35" pos:end="375:37">[<expr pos:start="375:36" pos:end="375:36"><literal type="number" pos:start="375:36" pos:end="375:36">0</literal></expr>]</index></name> <operator pos:start="375:39" pos:end="375:39">=</operator> <name pos:start="375:41" pos:end="375:43">buf</name></expr>;</expr_stmt>

                <expr_stmt pos:start="377:17" pos:end="377:66"><expr pos:start="377:17" pos:end="377:65"><name pos:start="377:17" pos:end="377:37"><name pos:start="377:17" pos:end="377:19">ost</name><operator pos:start="377:20" pos:end="377:21">-&gt;</operator><name pos:start="377:22" pos:end="377:29">pict_tmp</name><operator pos:start="377:30" pos:end="377:30">.</operator><name pos:start="377:31" pos:end="377:34">data</name><index pos:start="377:35" pos:end="377:37">[<expr pos:start="377:36" pos:end="377:36"><literal type="number" pos:start="377:36" pos:end="377:36">1</literal></expr>]</index></name> <operator pos:start="377:39" pos:end="377:39">=</operator> <name pos:start="377:41" pos:end="377:43">buf</name> <operator pos:start="377:45" pos:end="377:45">+</operator> <name pos:start="377:47" pos:end="377:56"><name pos:start="377:47" pos:end="377:49">enc</name><operator pos:start="377:50" pos:end="377:51">-&gt;</operator><name pos:start="377:52" pos:end="377:56">width</name></name> <operator pos:start="377:58" pos:end="377:58">*</operator> <name pos:start="377:60" pos:end="377:65">height</name></expr>;</expr_stmt>

                <expr_stmt pos:start="379:17" pos:end="379:90"><expr pos:start="379:17" pos:end="379:89"><name pos:start="379:17" pos:end="379:37"><name pos:start="379:17" pos:end="379:19">ost</name><operator pos:start="379:20" pos:end="379:21">-&gt;</operator><name pos:start="379:22" pos:end="379:29">pict_tmp</name><operator pos:start="379:30" pos:end="379:30">.</operator><name pos:start="379:31" pos:end="379:34">data</name><index pos:start="379:35" pos:end="379:37">[<expr pos:start="379:36" pos:end="379:36"><literal type="number" pos:start="379:36" pos:end="379:36">2</literal></expr>]</index></name> <operator pos:start="379:39" pos:end="379:39">=</operator> <name pos:start="379:41" pos:end="379:61"><name pos:start="379:41" pos:end="379:43">ost</name><operator pos:start="379:44" pos:end="379:45">-&gt;</operator><name pos:start="379:46" pos:end="379:53">pict_tmp</name><operator pos:start="379:54" pos:end="379:54">.</operator><name pos:start="379:55" pos:end="379:58">data</name><index pos:start="379:59" pos:end="379:61">[<expr pos:start="379:60" pos:end="379:60"><literal type="number" pos:start="379:60" pos:end="379:60">1</literal></expr>]</index></name> <operator pos:start="379:63" pos:end="379:63">+</operator> <operator pos:start="379:65" pos:end="379:65">(</operator><name pos:start="379:66" pos:end="379:75"><name pos:start="379:66" pos:end="379:68">enc</name><operator pos:start="379:69" pos:end="379:70">-&gt;</operator><name pos:start="379:71" pos:end="379:75">width</name></name> <operator pos:start="379:77" pos:end="379:77">*</operator> <name pos:start="379:79" pos:end="379:84">height</name><operator pos:start="379:85" pos:end="379:85">)</operator> <operator pos:start="379:87" pos:end="379:87">/</operator> <literal type="number" pos:start="379:89" pos:end="379:89">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="381:17" pos:end="381:55"><expr pos:start="381:17" pos:end="381:54"><name pos:start="381:17" pos:end="381:41"><name pos:start="381:17" pos:end="381:19">ost</name><operator pos:start="381:20" pos:end="381:21">-&gt;</operator><name pos:start="381:22" pos:end="381:29">pict_tmp</name><operator pos:start="381:30" pos:end="381:30">.</operator><name pos:start="381:31" pos:end="381:38">linesize</name><index pos:start="381:39" pos:end="381:41">[<expr pos:start="381:40" pos:end="381:40"><literal type="number" pos:start="381:40" pos:end="381:40">0</literal></expr>]</index></name> <operator pos:start="381:43" pos:end="381:43">=</operator> <name pos:start="381:45" pos:end="381:54"><name pos:start="381:45" pos:end="381:47">enc</name><operator pos:start="381:48" pos:end="381:49">-&gt;</operator><name pos:start="381:50" pos:end="381:54">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="383:17" pos:end="383:59"><expr pos:start="383:17" pos:end="383:58"><name pos:start="383:17" pos:end="383:41"><name pos:start="383:17" pos:end="383:19">ost</name><operator pos:start="383:20" pos:end="383:21">-&gt;</operator><name pos:start="383:22" pos:end="383:29">pict_tmp</name><operator pos:start="383:30" pos:end="383:30">.</operator><name pos:start="383:31" pos:end="383:38">linesize</name><index pos:start="383:39" pos:end="383:41">[<expr pos:start="383:40" pos:end="383:40"><literal type="number" pos:start="383:40" pos:end="383:40">1</literal></expr>]</index></name> <operator pos:start="383:43" pos:end="383:43">=</operator> <name pos:start="383:45" pos:end="383:54"><name pos:start="383:45" pos:end="383:47">enc</name><operator pos:start="383:48" pos:end="383:49">-&gt;</operator><name pos:start="383:50" pos:end="383:54">width</name></name> <operator pos:start="383:56" pos:end="383:56">/</operator> <literal type="number" pos:start="383:58" pos:end="383:58">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="385:17" pos:end="385:59"><expr pos:start="385:17" pos:end="385:58"><name pos:start="385:17" pos:end="385:41"><name pos:start="385:17" pos:end="385:19">ost</name><operator pos:start="385:20" pos:end="385:21">-&gt;</operator><name pos:start="385:22" pos:end="385:29">pict_tmp</name><operator pos:start="385:30" pos:end="385:30">.</operator><name pos:start="385:31" pos:end="385:38">linesize</name><index pos:start="385:39" pos:end="385:41">[<expr pos:start="385:40" pos:end="385:40"><literal type="number" pos:start="385:40" pos:end="385:40">2</literal></expr>]</index></name> <operator pos:start="385:43" pos:end="385:43">=</operator> <name pos:start="385:45" pos:end="385:54"><name pos:start="385:45" pos:end="385:47">enc</name><operator pos:start="385:48" pos:end="385:49">-&gt;</operator><name pos:start="385:50" pos:end="385:54">width</name></name> <operator pos:start="385:56" pos:end="385:56">/</operator> <literal type="number" pos:start="385:58" pos:end="385:58">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="387:17" pos:end="391:49"><expr pos:start="387:17" pos:end="391:48"><name pos:start="387:17" pos:end="387:37"><name pos:start="387:17" pos:end="387:19">ost</name><operator pos:start="387:20" pos:end="387:21">-&gt;</operator><name pos:start="387:22" pos:end="387:37">img_resample_ctx</name></name> <operator pos:start="387:39" pos:end="387:39">=</operator> <call pos:start="387:41" pos:end="391:48"><name pos:start="387:41" pos:end="387:57">img_resample_init</name><argument_list pos:start="387:58" pos:end="391:48">(

                                  <argument pos:start="389:35" pos:end="389:54"><expr pos:start="389:35" pos:end="389:54"><name pos:start="389:35" pos:end="389:54"><name pos:start="389:35" pos:end="389:37">ost</name><operator pos:start="389:38" pos:end="389:39">-&gt;</operator><name pos:start="389:40" pos:end="389:41">st</name><operator pos:start="389:42" pos:end="389:43">-&gt;</operator><name pos:start="389:44" pos:end="389:48">codec</name><operator pos:start="389:49" pos:end="389:49">.</operator><name pos:start="389:50" pos:end="389:54">width</name></name></expr></argument>, <argument pos:start="389:57" pos:end="389:77"><expr pos:start="389:57" pos:end="389:77"><name pos:start="389:57" pos:end="389:77"><name pos:start="389:57" pos:end="389:59">ost</name><operator pos:start="389:60" pos:end="389:61">-&gt;</operator><name pos:start="389:62" pos:end="389:63">st</name><operator pos:start="389:64" pos:end="389:65">-&gt;</operator><name pos:start="389:66" pos:end="389:70">codec</name><operator pos:start="389:71" pos:end="389:71">.</operator><name pos:start="389:72" pos:end="389:77">height</name></name></expr></argument>,

                                  <argument pos:start="391:35" pos:end="391:39"><expr pos:start="391:35" pos:end="391:39"><name pos:start="391:35" pos:end="391:39">width</name></expr></argument>, <argument pos:start="391:42" pos:end="391:47"><expr pos:start="391:42" pos:end="391:47"><name pos:start="391:42" pos:end="391:47">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <expr_stmt pos:start="401:5" pos:end="401:52"><expr pos:start="401:5" pos:end="401:51"><call pos:start="401:5" pos:end="401:51"><name pos:start="401:5" pos:end="401:11">fprintf</name><argument_list pos:start="401:12" pos:end="401:51">(<argument pos:start="401:13" pos:end="401:18"><expr pos:start="401:13" pos:end="401:18"><name pos:start="401:13" pos:end="401:18">stderr</name></expr></argument>, <argument pos:start="401:21" pos:end="401:50"><expr pos:start="401:21" pos:end="401:50"><literal type="string" pos:start="401:21" pos:end="401:50">"Press [q] to stop encoding\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="405:5" pos:end="405:31"><expr pos:start="405:5" pos:end="405:30"><call pos:start="405:5" pos:end="405:30"><name pos:start="405:5" pos:end="405:27"><name pos:start="405:5" pos:end="405:5">s</name><operator pos:start="405:6" pos:end="405:7">-&gt;</operator><name pos:start="405:8" pos:end="405:13">format</name><operator pos:start="405:14" pos:end="405:15">-&gt;</operator><name pos:start="405:16" pos:end="405:27">write_header</name></name><argument_list pos:start="405:28" pos:end="405:30">(<argument pos:start="405:29" pos:end="405:29"><expr pos:start="405:29" pos:end="405:29"><name pos:start="405:29" pos:end="405:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="407:5" pos:end="407:27"><expr pos:start="407:5" pos:end="407:26"><name pos:start="407:5" pos:end="407:14">time_start</name> <operator pos:start="407:16" pos:end="407:16">=</operator> <call pos:start="407:18" pos:end="407:26"><name pos:start="407:18" pos:end="407:24">gettime</name><argument_list pos:start="407:25" pos:end="407:26">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="409:5" pos:end="409:16"><expr pos:start="409:5" pos:end="409:15"><call pos:start="409:5" pos:end="409:15"><name pos:start="409:5" pos:end="409:13">term_init</name><argument_list pos:start="409:14" pos:end="409:15">()</argument_list></call></expr>;</expr_stmt>

    

    <for pos:start="413:5" pos:end="695:5">for<control pos:start="413:8" pos:end="413:11">(<init pos:start="413:9" pos:end="413:9">;</init><condition pos:start="413:10" pos:end="413:10">;</condition><incr/>)</control> <block pos:start="413:13" pos:end="695:5">{<block_content pos:start="417:9" pos:end="693:9">

        <comment type="block" pos:start="415:9" pos:end="415:35">/* if 'q' pressed, exits */</comment>

        <if_stmt pos:start="417:9" pos:end="419:18"><if pos:start="417:9" pos:end="419:18">if <condition pos:start="417:12" pos:end="417:30">(<expr pos:start="417:13" pos:end="417:29"><call pos:start="417:13" pos:end="417:22"><name pos:start="417:13" pos:end="417:20">read_key</name><argument_list pos:start="417:21" pos:end="417:22">()</argument_list></call> <operator pos:start="417:24" pos:end="417:25">==</operator> <literal type="char" pos:start="417:27" pos:end="417:29">'q'</literal></expr>)</condition><block type="pseudo" pos:start="419:13" pos:end="419:18"><block_content pos:start="419:13" pos:end="419:18">

            <break pos:start="419:13" pos:end="419:18">break;</break></block_content></block></if></if_stmt>



        <comment type="block" pos:start="423:9" pos:end="423:42">/* read &amp; compress audio frames */</comment>

        <if_stmt pos:start="425:9" pos:end="521:9"><if pos:start="425:9" pos:end="521:9">if <condition pos:start="425:12" pos:end="425:22">(<expr pos:start="425:13" pos:end="425:21"><name pos:start="425:13" pos:end="425:21">use_audio</name></expr>)</condition> <block pos:start="425:24" pos:end="521:9">{<block_content pos:start="427:13" pos:end="519:13">

            <decl_stmt pos:start="427:13" pos:end="427:48"><decl pos:start="427:13" pos:end="427:19"><type pos:start="427:13" pos:end="427:15"><name pos:start="427:13" pos:end="427:15">int</name></type> <name pos:start="427:17" pos:end="427:19">ret</name></decl>, <decl pos:start="427:22" pos:end="427:31"><type ref="prev" pos:start="427:13" pos:end="427:15"/><name pos:start="427:22" pos:end="427:31">nb_samples</name></decl>, <decl pos:start="427:34" pos:end="427:47"><type ref="prev" pos:start="427:13" pos:end="427:15"/><name pos:start="427:34" pos:end="427:47">nb_samples_out</name></decl>;</decl_stmt>

            <decl_stmt pos:start="429:13" pos:end="429:26"><decl pos:start="429:13" pos:end="429:25"><type pos:start="429:13" pos:end="429:19"><name pos:start="429:13" pos:end="429:17">UINT8</name> <modifier pos:start="429:19" pos:end="429:19">*</modifier></type><name pos:start="429:20" pos:end="429:25">buftmp</name></decl>;</decl_stmt>



            <for pos:start="433:13" pos:end="519:13">for<control pos:start="433:16" pos:end="433:19">(<init pos:start="433:17" pos:end="433:17">;</init><condition pos:start="433:18" pos:end="433:18">;</condition><incr/>)</control> <block pos:start="433:21" pos:end="519:13">{<block_content pos:start="435:17" pos:end="517:17">

                <expr_stmt pos:start="435:17" pos:end="435:73"><expr pos:start="435:17" pos:end="435:72"><name pos:start="435:17" pos:end="435:19">ret</name> <operator pos:start="435:21" pos:end="435:21">=</operator> <call pos:start="435:23" pos:end="435:72"><name pos:start="435:23" pos:end="435:30">url_read</name><argument_list pos:start="435:31" pos:end="435:72">(<argument pos:start="435:32" pos:end="435:43"><expr pos:start="435:32" pos:end="435:43"><name pos:start="435:32" pos:end="435:43">audio_handle</name></expr></argument>, <argument pos:start="435:46" pos:end="435:54"><expr pos:start="435:46" pos:end="435:54"><name pos:start="435:46" pos:end="435:54">audio_buf</name></expr></argument>, <argument pos:start="435:57" pos:end="435:71"><expr pos:start="435:57" pos:end="435:71"><name pos:start="435:57" pos:end="435:71">audio_fifo_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="437:17" pos:end="439:26"><if pos:start="437:17" pos:end="439:26">if <condition pos:start="437:20" pos:end="437:29">(<expr pos:start="437:21" pos:end="437:28"><name pos:start="437:21" pos:end="437:23">ret</name> <operator pos:start="437:25" pos:end="437:26">&lt;=</operator> <literal type="number" pos:start="437:28" pos:end="437:28">0</literal></expr>)</condition><block type="pseudo" pos:start="439:21" pos:end="439:26"><block_content pos:start="439:21" pos:end="439:26">

                    <break pos:start="439:21" pos:end="439:26">break;</break></block_content></block></if></if_stmt>

                <comment type="block" pos:start="441:17" pos:end="445:60">/* fill each codec fifo by doing the right sample

                   rate conversion. This is not optimal because we

                   do too much work, but it is easy to do */</comment>

                <expr_stmt pos:start="447:17" pos:end="447:50"><expr pos:start="447:17" pos:end="447:49"><name pos:start="447:17" pos:end="447:26">nb_samples</name> <operator pos:start="447:28" pos:end="447:28">=</operator> <name pos:start="447:30" pos:end="447:32">ret</name> <operator pos:start="447:34" pos:end="447:34">/</operator> <operator pos:start="447:36" pos:end="447:36">(</operator><name pos:start="447:37" pos:end="447:44">channels</name> <operator pos:start="447:46" pos:end="447:46">*</operator> <literal type="number" pos:start="447:48" pos:end="447:48">2</literal><operator pos:start="447:49" pos:end="447:49">)</operator></expr>;</expr_stmt>

                <for pos:start="449:17" pos:end="483:17">for<control pos:start="449:20" pos:end="449:44">(<init pos:start="449:21" pos:end="449:24"><expr pos:start="449:21" pos:end="449:23"><name pos:start="449:21" pos:end="449:21">i</name><operator pos:start="449:22" pos:end="449:22">=</operator><literal type="number" pos:start="449:23" pos:end="449:23">0</literal></expr>;</init><condition pos:start="449:25" pos:end="449:40"><expr pos:start="449:25" pos:end="449:39"><name pos:start="449:25" pos:end="449:25">i</name><operator pos:start="449:26" pos:end="449:26">&lt;</operator><name pos:start="449:27" pos:end="449:39"><name pos:start="449:27" pos:end="449:27">s</name><operator pos:start="449:28" pos:end="449:29">-&gt;</operator><name pos:start="449:30" pos:end="449:39">nb_streams</name></name></expr>;</condition><incr pos:start="449:41" pos:end="449:43"><expr pos:start="449:41" pos:end="449:43"><name pos:start="449:41" pos:end="449:41">i</name><operator pos:start="449:42" pos:end="449:43">++</operator></expr></incr>)</control> <block pos:start="449:46" pos:end="483:17">{<block_content pos:start="451:21" pos:end="481:21">

                    <expr_stmt pos:start="451:21" pos:end="451:39"><expr pos:start="451:21" pos:end="451:38"><name pos:start="451:21" pos:end="451:23">ost</name> <operator pos:start="451:25" pos:end="451:25">=</operator> <name pos:start="451:27" pos:end="451:38"><name pos:start="451:27" pos:end="451:35">ost_table</name><index pos:start="451:36" pos:end="451:38">[<expr pos:start="451:37" pos:end="451:37"><name pos:start="451:37" pos:end="451:37">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="453:21" pos:end="453:42"><expr pos:start="453:21" pos:end="453:41"><name pos:start="453:21" pos:end="453:23">enc</name> <operator pos:start="453:25" pos:end="453:25">=</operator> <operator pos:start="453:27" pos:end="453:27">&amp;</operator><name pos:start="453:28" pos:end="453:41"><name pos:start="453:28" pos:end="453:30">ost</name><operator pos:start="453:31" pos:end="453:32">-&gt;</operator><name pos:start="453:33" pos:end="453:34">st</name><operator pos:start="453:35" pos:end="453:36">-&gt;</operator><name pos:start="453:37" pos:end="453:41">codec</name></name></expr>;</expr_stmt>

                    <if_stmt pos:start="455:21" pos:end="481:21"><if pos:start="455:21" pos:end="481:21">if <condition pos:start="455:24" pos:end="455:60">(<expr pos:start="455:25" pos:end="455:59"><name pos:start="455:25" pos:end="455:39"><name pos:start="455:25" pos:end="455:27">enc</name><operator pos:start="455:28" pos:end="455:29">-&gt;</operator><name pos:start="455:30" pos:end="455:39">codec_type</name></name> <operator pos:start="455:41" pos:end="455:42">==</operator> <name pos:start="455:44" pos:end="455:59">CODEC_TYPE_AUDIO</name></expr>)</condition> <block pos:start="455:62" pos:end="481:21">{<block_content pos:start="459:25" pos:end="479:52">

                        <comment type="block" pos:start="457:25" pos:end="457:54">/* rate &amp; stereo convertion */</comment>

                        <if_stmt pos:start="459:25" pos:end="475:25"><if pos:start="459:25" pos:end="465:25">if <condition pos:start="459:28" pos:end="459:49">(<expr pos:start="459:29" pos:end="459:48"><operator pos:start="459:29" pos:end="459:29">!</operator><name pos:start="459:30" pos:end="459:48"><name pos:start="459:30" pos:end="459:32">ost</name><operator pos:start="459:33" pos:end="459:34">-&gt;</operator><name pos:start="459:35" pos:end="459:48">audio_resample</name></name></expr>)</condition> <block pos:start="459:51" pos:end="465:25">{<block_content pos:start="461:29" pos:end="463:56">

                            <expr_stmt pos:start="461:29" pos:end="461:47"><expr pos:start="461:29" pos:end="461:46"><name pos:start="461:29" pos:end="461:34">buftmp</name> <operator pos:start="461:36" pos:end="461:36">=</operator> <name pos:start="461:38" pos:end="461:46">audio_buf</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="463:29" pos:end="463:56"><expr pos:start="463:29" pos:end="463:55"><name pos:start="463:29" pos:end="463:42">nb_samples_out</name> <operator pos:start="463:44" pos:end="463:44">=</operator> <name pos:start="463:46" pos:end="463:55">nb_samples</name></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="465:27" pos:end="475:25">else <block pos:start="465:32" pos:end="475:25">{<block_content pos:start="467:29" pos:end="473:72">

                            <expr_stmt pos:start="467:29" pos:end="467:48"><expr pos:start="467:29" pos:end="467:47"><name pos:start="467:29" pos:end="467:34">buftmp</name> <operator pos:start="467:36" pos:end="467:36">=</operator> <name pos:start="467:38" pos:end="467:47">audio_buf1</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="469:29" pos:end="473:72"><expr pos:start="469:29" pos:end="473:71"><name pos:start="469:29" pos:end="469:42">nb_samples_out</name> <operator pos:start="469:44" pos:end="469:44">=</operator> <call pos:start="469:46" pos:end="473:71"><name pos:start="469:46" pos:end="469:59">audio_resample</name><argument_list pos:start="469:60" pos:end="473:71">(<argument pos:start="469:61" pos:end="469:73"><expr pos:start="469:61" pos:end="469:73"><name pos:start="469:61" pos:end="469:73"><name pos:start="469:61" pos:end="469:63">ost</name><operator pos:start="469:64" pos:end="469:65">-&gt;</operator><name pos:start="469:66" pos:end="469:73">resample</name></name></expr></argument>, 

                                                            <argument pos:start="471:61" pos:end="471:75"><expr pos:start="471:61" pos:end="471:75"><operator pos:start="471:61" pos:end="471:61">(</operator><name pos:start="471:62" pos:end="471:66">short</name> <operator pos:start="471:68" pos:end="471:68">*</operator><operator pos:start="471:69" pos:end="471:69">)</operator><name pos:start="471:70" pos:end="471:75">buftmp</name></expr></argument>, <argument pos:start="471:78" pos:end="471:95"><expr pos:start="471:78" pos:end="471:95"><operator pos:start="471:78" pos:end="471:78">(</operator><name pos:start="471:79" pos:end="471:83">short</name> <operator pos:start="471:85" pos:end="471:85">*</operator><operator pos:start="471:86" pos:end="471:86">)</operator><name pos:start="471:87" pos:end="471:95">audio_buf</name></expr></argument>,

                                                            <argument pos:start="473:61" pos:end="473:70"><expr pos:start="473:61" pos:end="473:70"><name pos:start="473:61" pos:end="473:70">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="477:25" pos:end="479:52"><expr pos:start="477:25" pos:end="479:51"><call pos:start="477:25" pos:end="479:51"><name pos:start="477:25" pos:end="477:34">fifo_write</name><argument_list pos:start="477:35" pos:end="479:51">(<argument pos:start="477:36" pos:end="477:45"><expr pos:start="477:36" pos:end="477:45"><operator pos:start="477:36" pos:end="477:36">&amp;</operator><name pos:start="477:37" pos:end="477:45"><name pos:start="477:37" pos:end="477:39">ost</name><operator pos:start="477:40" pos:end="477:41">-&gt;</operator><name pos:start="477:42" pos:end="477:45">fifo</name></name></expr></argument>, <argument pos:start="477:48" pos:end="477:53"><expr pos:start="477:48" pos:end="477:53"><name pos:start="477:48" pos:end="477:53">buftmp</name></expr></argument>, <argument pos:start="477:56" pos:end="477:89"><expr pos:start="477:56" pos:end="477:89"><name pos:start="477:56" pos:end="477:69">nb_samples_out</name> <operator pos:start="477:71" pos:end="477:71">*</operator> <name pos:start="477:73" pos:end="477:85"><name pos:start="477:73" pos:end="477:75">enc</name><operator pos:start="477:76" pos:end="477:77">-&gt;</operator><name pos:start="477:78" pos:end="477:85">channels</name></name> <operator pos:start="477:87" pos:end="477:87">*</operator> <literal type="number" pos:start="477:89" pos:end="477:89">2</literal></expr></argument>, 

                                   <argument pos:start="479:36" pos:end="479:50"><expr pos:start="479:36" pos:end="479:50"><operator pos:start="479:36" pos:end="479:36">&amp;</operator><name pos:start="479:37" pos:end="479:50"><name pos:start="479:37" pos:end="479:39">ost</name><operator pos:start="479:40" pos:end="479:41">-&gt;</operator><name pos:start="479:42" pos:end="479:45">fifo</name><operator pos:start="479:46" pos:end="479:46">.</operator><name pos:start="479:47" pos:end="479:50">wptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                

                <comment type="block" pos:start="487:17" pos:end="487:78">/* compress as many frame as possible with each audio codec */</comment>

                <for pos:start="489:17" pos:end="517:17">for<control pos:start="489:20" pos:end="489:44">(<init pos:start="489:21" pos:end="489:24"><expr pos:start="489:21" pos:end="489:23"><name pos:start="489:21" pos:end="489:21">i</name><operator pos:start="489:22" pos:end="489:22">=</operator><literal type="number" pos:start="489:23" pos:end="489:23">0</literal></expr>;</init><condition pos:start="489:25" pos:end="489:40"><expr pos:start="489:25" pos:end="489:39"><name pos:start="489:25" pos:end="489:25">i</name><operator pos:start="489:26" pos:end="489:26">&lt;</operator><name pos:start="489:27" pos:end="489:39"><name pos:start="489:27" pos:end="489:27">s</name><operator pos:start="489:28" pos:end="489:29">-&gt;</operator><name pos:start="489:30" pos:end="489:39">nb_streams</name></name></expr>;</condition><incr pos:start="489:41" pos:end="489:43"><expr pos:start="489:41" pos:end="489:43"><name pos:start="489:41" pos:end="489:41">i</name><operator pos:start="489:42" pos:end="489:43">++</operator></expr></incr>)</control> <block pos:start="489:46" pos:end="517:17">{<block_content pos:start="491:21" pos:end="515:21">

                    <expr_stmt pos:start="491:21" pos:end="491:39"><expr pos:start="491:21" pos:end="491:38"><name pos:start="491:21" pos:end="491:23">ost</name> <operator pos:start="491:25" pos:end="491:25">=</operator> <name pos:start="491:27" pos:end="491:38"><name pos:start="491:27" pos:end="491:35">ost_table</name><index pos:start="491:36" pos:end="491:38">[<expr pos:start="491:37" pos:end="491:37"><name pos:start="491:37" pos:end="491:37">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="493:21" pos:end="493:42"><expr pos:start="493:21" pos:end="493:41"><name pos:start="493:21" pos:end="493:23">enc</name> <operator pos:start="493:25" pos:end="493:25">=</operator> <operator pos:start="493:27" pos:end="493:27">&amp;</operator><name pos:start="493:28" pos:end="493:41"><name pos:start="493:28" pos:end="493:30">ost</name><operator pos:start="493:31" pos:end="493:32">-&gt;</operator><name pos:start="493:33" pos:end="493:34">st</name><operator pos:start="493:35" pos:end="493:36">-&gt;</operator><name pos:start="493:37" pos:end="493:41">codec</name></name></expr>;</expr_stmt>

                    <if_stmt pos:start="495:21" pos:end="515:21"><if pos:start="495:21" pos:end="515:21">if <condition pos:start="495:24" pos:end="495:60">(<expr pos:start="495:25" pos:end="495:59"><name pos:start="495:25" pos:end="495:39"><name pos:start="495:25" pos:end="495:27">enc</name><operator pos:start="495:28" pos:end="495:29">-&gt;</operator><name pos:start="495:30" pos:end="495:39">codec_type</name></name> <operator pos:start="495:41" pos:end="495:42">==</operator> <name pos:start="495:44" pos:end="495:59">CODEC_TYPE_AUDIO</name></expr>)</condition> <block pos:start="495:62" pos:end="515:21">{<block_content pos:start="497:25" pos:end="513:25">

                        <expr_stmt pos:start="497:25" pos:end="497:74"><expr pos:start="497:25" pos:end="497:73"><name pos:start="497:25" pos:end="497:35">frame_bytes</name> <operator pos:start="497:37" pos:end="497:37">=</operator> <name pos:start="497:39" pos:end="497:53"><name pos:start="497:39" pos:end="497:41">enc</name><operator pos:start="497:42" pos:end="497:43">-&gt;</operator><name pos:start="497:44" pos:end="497:53">frame_size</name></name> <operator pos:start="497:55" pos:end="497:55">*</operator> <literal type="number" pos:start="497:57" pos:end="497:57">2</literal> <operator pos:start="497:59" pos:end="497:59">*</operator> <name pos:start="497:61" pos:end="497:73"><name pos:start="497:61" pos:end="497:63">enc</name><operator pos:start="497:64" pos:end="497:65">-&gt;</operator><name pos:start="497:66" pos:end="497:73">channels</name></name></expr>;</expr_stmt>

                        

                        <while pos:start="501:25" pos:end="513:25">while <condition pos:start="501:31" pos:end="503:76">(<expr pos:start="501:32" pos:end="503:75"><call pos:start="501:32" pos:end="503:70"><name pos:start="501:32" pos:end="501:40">fifo_read</name><argument_list pos:start="501:41" pos:end="503:70">(<argument pos:start="501:42" pos:end="501:51"><expr pos:start="501:42" pos:end="501:51"><operator pos:start="501:42" pos:end="501:42">&amp;</operator><name pos:start="501:43" pos:end="501:51"><name pos:start="501:43" pos:end="501:45">ost</name><operator pos:start="501:46" pos:end="501:47">-&gt;</operator><name pos:start="501:48" pos:end="501:51">fifo</name></name></expr></argument>, <argument pos:start="501:54" pos:end="501:62"><expr pos:start="501:54" pos:end="501:62"><name pos:start="501:54" pos:end="501:62">audio_buf</name></expr></argument>, 

                                         <argument pos:start="503:42" pos:end="503:52"><expr pos:start="503:42" pos:end="503:52"><name pos:start="503:42" pos:end="503:52">frame_bytes</name></expr></argument>, <argument pos:start="503:55" pos:end="503:69"><expr pos:start="503:55" pos:end="503:69"><operator pos:start="503:55" pos:end="503:55">&amp;</operator><name pos:start="503:56" pos:end="503:69"><name pos:start="503:56" pos:end="503:58">ost</name><operator pos:start="503:59" pos:end="503:60">-&gt;</operator><name pos:start="503:61" pos:end="503:64">fifo</name><operator pos:start="503:65" pos:end="503:65">.</operator><name pos:start="503:66" pos:end="503:69">rptr</name></name></expr></argument>)</argument_list></call> <operator pos:start="503:72" pos:end="503:73">==</operator> <literal type="number" pos:start="503:75" pos:end="503:75">0</literal></expr>)</condition> <block pos:start="503:78" pos:end="513:25">{<block_content pos:start="505:29" pos:end="511:83">

                            <expr_stmt pos:start="505:29" pos:end="509:75"><expr pos:start="505:29" pos:end="509:74"><name pos:start="505:29" pos:end="505:31">ret</name> <operator pos:start="505:33" pos:end="505:33">=</operator> <call pos:start="505:35" pos:end="509:74"><name pos:start="505:35" pos:end="505:54">avcodec_encode_audio</name><argument_list pos:start="505:55" pos:end="509:74">(<argument pos:start="505:56" pos:end="505:58"><expr pos:start="505:56" pos:end="505:58"><name pos:start="505:56" pos:end="505:58">enc</name></expr></argument>,

                                                       <argument pos:start="507:56" pos:end="507:64"><expr pos:start="507:56" pos:end="507:64"><name pos:start="507:56" pos:end="507:64">audio_out</name></expr></argument>, <argument pos:start="507:67" pos:end="507:83"><expr pos:start="507:67" pos:end="507:83"><sizeof pos:start="507:67" pos:end="507:83">sizeof<argument_list pos:start="507:73" pos:end="507:83">(<argument pos:start="507:74" pos:end="507:82"><expr pos:start="507:74" pos:end="507:82"><name pos:start="507:74" pos:end="507:82">audio_out</name></expr></argument>)</argument_list></sizeof></expr></argument>, 

                                                       <argument pos:start="509:56" pos:end="509:73"><expr pos:start="509:56" pos:end="509:73"><operator pos:start="509:56" pos:end="509:56">(</operator><name pos:start="509:57" pos:end="509:61">short</name> <operator pos:start="509:63" pos:end="509:63">*</operator><operator pos:start="509:64" pos:end="509:64">)</operator><name pos:start="509:65" pos:end="509:73">audio_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="511:29" pos:end="511:83"><expr pos:start="511:29" pos:end="511:82"><call pos:start="511:29" pos:end="511:82"><name pos:start="511:29" pos:end="511:51"><name pos:start="511:29" pos:end="511:29">s</name><operator pos:start="511:30" pos:end="511:31">-&gt;</operator><name pos:start="511:32" pos:end="511:37">format</name><operator pos:start="511:38" pos:end="511:39">-&gt;</operator><name pos:start="511:40" pos:end="511:51">write_packet</name></name><argument_list pos:start="511:52" pos:end="511:82">(<argument pos:start="511:53" pos:end="511:53"><expr pos:start="511:53" pos:end="511:53"><name pos:start="511:53" pos:end="511:53">s</name></expr></argument>, <argument pos:start="511:56" pos:end="511:65"><expr pos:start="511:56" pos:end="511:65"><name pos:start="511:56" pos:end="511:65"><name pos:start="511:56" pos:end="511:58">ost</name><operator pos:start="511:59" pos:end="511:60">-&gt;</operator><name pos:start="511:61" pos:end="511:65">index</name></name></expr></argument>, <argument pos:start="511:68" pos:end="511:76"><expr pos:start="511:68" pos:end="511:76"><name pos:start="511:68" pos:end="511:76">audio_out</name></expr></argument>, <argument pos:start="511:79" pos:end="511:81"><expr pos:start="511:79" pos:end="511:81"><name pos:start="511:79" pos:end="511:81">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></while>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="525:9" pos:end="623:9"><if pos:start="525:9" pos:end="623:9">if <condition pos:start="525:12" pos:end="525:22">(<expr pos:start="525:13" pos:end="525:21"><name pos:start="525:13" pos:end="525:21">use_video</name></expr>)</condition> <block pos:start="525:24" pos:end="623:9">{<block_content pos:start="527:13" pos:end="621:27">

            <decl_stmt pos:start="527:13" pos:end="527:53"><decl pos:start="527:13" pos:end="527:31"><type pos:start="527:13" pos:end="527:23"><name pos:start="527:13" pos:end="527:21">AVPicture</name> <modifier pos:start="527:23" pos:end="527:23">*</modifier></type><name pos:start="527:24" pos:end="527:31">picture1</name></decl>, <decl pos:start="527:34" pos:end="527:42"><type ref="prev" pos:start="527:13" pos:end="527:23"><modifier pos:start="527:34" pos:end="527:34">*</modifier></type><name pos:start="527:35" pos:end="527:42">picture2</name></decl>, <decl pos:start="527:45" pos:end="527:52"><type ref="prev" pos:start="527:13" pos:end="527:23"><modifier pos:start="527:45" pos:end="527:45">*</modifier></type><name pos:start="527:46" pos:end="527:52">picture</name></decl>;</decl_stmt>

            <decl_stmt pos:start="529:13" pos:end="529:49"><decl pos:start="529:13" pos:end="529:34"><type pos:start="529:13" pos:end="529:21"><name pos:start="529:13" pos:end="529:21">AVPicture</name></type> <name pos:start="529:23" pos:end="529:34">picture_tmp0</name></decl>, <decl pos:start="529:37" pos:end="529:48"><type ref="prev" pos:start="529:13" pos:end="529:21"/><name pos:start="529:37" pos:end="529:48">picture_tmp1</name></decl>;</decl_stmt>



            <expr_stmt pos:start="533:13" pos:end="533:71"><expr pos:start="533:13" pos:end="533:70"><name pos:start="533:13" pos:end="533:15">ret</name> <operator pos:start="533:17" pos:end="533:17">=</operator> <call pos:start="533:19" pos:end="533:70"><name pos:start="533:19" pos:end="533:26">url_read</name><argument_list pos:start="533:27" pos:end="533:70">(<argument pos:start="533:28" pos:end="533:39"><expr pos:start="533:28" pos:end="533:39"><name pos:start="533:28" pos:end="533:39">video_handle</name></expr></argument>, <argument pos:start="533:42" pos:end="533:55"><expr pos:start="533:42" pos:end="533:55"><name pos:start="533:42" pos:end="533:55">picture_in_buf</name></expr></argument>, <argument pos:start="533:58" pos:end="533:69"><expr pos:start="533:58" pos:end="533:69"><name pos:start="533:58" pos:end="533:69">picture_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="535:13" pos:end="537:22"><if pos:start="535:13" pos:end="537:22">if <condition pos:start="535:16" pos:end="535:24">(<expr pos:start="535:17" pos:end="535:23"><name pos:start="535:17" pos:end="535:19">ret</name> <operator pos:start="535:21" pos:end="535:21">&lt;</operator> <literal type="number" pos:start="535:23" pos:end="535:23">0</literal></expr>)</condition><block type="pseudo" pos:start="537:17" pos:end="537:22"><block_content pos:start="537:17" pos:end="537:22">

                <break pos:start="537:17" pos:end="537:22">break;</break></block_content></block></if></if_stmt>

            

            <expr_stmt pos:start="541:13" pos:end="541:37"><expr pos:start="541:13" pos:end="541:36"><name pos:start="541:13" pos:end="541:20">picture2</name> <operator pos:start="541:22" pos:end="541:22">=</operator> <operator pos:start="541:24" pos:end="541:24">&amp;</operator><name pos:start="541:25" pos:end="541:36">picture_tmp0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="543:13" pos:end="543:77"><expr pos:start="543:13" pos:end="543:76"><call pos:start="543:13" pos:end="543:76"><name pos:start="543:13" pos:end="543:26">avpicture_fill</name><argument_list pos:start="543:27" pos:end="543:76">(<argument pos:start="543:28" pos:end="543:35"><expr pos:start="543:28" pos:end="543:35"><name pos:start="543:28" pos:end="543:35">picture2</name></expr></argument>, <argument pos:start="543:38" pos:end="543:51"><expr pos:start="543:38" pos:end="543:51"><name pos:start="543:38" pos:end="543:51">picture_in_buf</name></expr></argument>, <argument pos:start="543:54" pos:end="543:60"><expr pos:start="543:54" pos:end="543:60"><name pos:start="543:54" pos:end="543:60">pix_fmt</name></expr></argument>, <argument pos:start="543:63" pos:end="543:67"><expr pos:start="543:63" pos:end="543:67"><name pos:start="543:63" pos:end="543:67">width</name></expr></argument>, <argument pos:start="543:70" pos:end="543:75"><expr pos:start="543:70" pos:end="543:75"><name pos:start="543:70" pos:end="543:75">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="547:13" pos:end="565:13"><if pos:start="547:13" pos:end="561:13">if <condition pos:start="547:16" pos:end="547:43">(<expr pos:start="547:17" pos:end="547:42"><name pos:start="547:17" pos:end="547:23">pix_fmt</name> <operator pos:start="547:25" pos:end="547:26">!=</operator> <name pos:start="547:28" pos:end="547:42">PIX_FMT_YUV420P</name></expr>)</condition> <block pos:start="547:45" pos:end="561:13">{<block_content pos:start="549:17" pos:end="559:43">

                <expr_stmt pos:start="549:17" pos:end="549:40"><expr pos:start="549:17" pos:end="549:39"><name pos:start="549:17" pos:end="549:23">picture</name> <operator pos:start="549:25" pos:end="549:25">=</operator> <operator pos:start="549:27" pos:end="549:27">&amp;</operator><name pos:start="549:28" pos:end="549:39">picture_tmp1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="551:17" pos:end="553:63"><expr pos:start="551:17" pos:end="553:62"><call pos:start="551:17" pos:end="553:62"><name pos:start="551:17" pos:end="551:30">avpicture_fill</name><argument_list pos:start="551:31" pos:end="553:62">(<argument pos:start="551:32" pos:end="551:38"><expr pos:start="551:32" pos:end="551:38"><name pos:start="551:32" pos:end="551:38">picture</name></expr></argument>, <argument pos:start="551:41" pos:end="551:52"><expr pos:start="551:41" pos:end="551:52"><name pos:start="551:41" pos:end="551:52">picture_420p</name></expr></argument>, 

                               <argument pos:start="553:32" pos:end="553:46"><expr pos:start="553:32" pos:end="553:46"><name pos:start="553:32" pos:end="553:46">PIX_FMT_YUV420P</name></expr></argument>, <argument pos:start="553:49" pos:end="553:53"><expr pos:start="553:49" pos:end="553:53"><name pos:start="553:49" pos:end="553:53">width</name></expr></argument>, <argument pos:start="553:56" pos:end="553:61"><expr pos:start="553:56" pos:end="553:61"><name pos:start="553:56" pos:end="553:61">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="555:17" pos:end="559:43"><expr pos:start="555:17" pos:end="559:42"><call pos:start="555:17" pos:end="559:42"><name pos:start="555:17" pos:end="555:27">img_convert</name><argument_list pos:start="555:28" pos:end="559:42">(<argument pos:start="555:29" pos:end="555:35"><expr pos:start="555:29" pos:end="555:35"><name pos:start="555:29" pos:end="555:35">picture</name></expr></argument>, <argument pos:start="555:38" pos:end="555:52"><expr pos:start="555:38" pos:end="555:52"><name pos:start="555:38" pos:end="555:52">PIX_FMT_YUV420P</name></expr></argument>,

                            <argument pos:start="557:29" pos:end="557:36"><expr pos:start="557:29" pos:end="557:36"><name pos:start="557:29" pos:end="557:36">picture2</name></expr></argument>, <argument pos:start="557:39" pos:end="557:45"><expr pos:start="557:39" pos:end="557:45"><name pos:start="557:39" pos:end="557:45">pix_fmt</name></expr></argument>, 

                            <argument pos:start="559:29" pos:end="559:33"><expr pos:start="559:29" pos:end="559:33"><name pos:start="559:29" pos:end="559:33">width</name></expr></argument>, <argument pos:start="559:36" pos:end="559:41"><expr pos:start="559:36" pos:end="559:41"><name pos:start="559:36" pos:end="559:41">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="561:15" pos:end="565:13">else <block pos:start="561:20" pos:end="565:13">{<block_content pos:start="563:17" pos:end="563:35">

                <expr_stmt pos:start="563:17" pos:end="563:35"><expr pos:start="563:17" pos:end="563:34"><name pos:start="563:17" pos:end="563:23">picture</name> <operator pos:start="563:25" pos:end="563:25">=</operator> <name pos:start="563:27" pos:end="563:34">picture2</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            

            <for pos:start="569:13" pos:end="619:13">for<control pos:start="569:16" pos:end="569:40">(<init pos:start="569:17" pos:end="569:20"><expr pos:start="569:17" pos:end="569:19"><name pos:start="569:17" pos:end="569:17">i</name><operator pos:start="569:18" pos:end="569:18">=</operator><literal type="number" pos:start="569:19" pos:end="569:19">0</literal></expr>;</init><condition pos:start="569:21" pos:end="569:36"><expr pos:start="569:21" pos:end="569:35"><name pos:start="569:21" pos:end="569:21">i</name><operator pos:start="569:22" pos:end="569:22">&lt;</operator><name pos:start="569:23" pos:end="569:35"><name pos:start="569:23" pos:end="569:23">s</name><operator pos:start="569:24" pos:end="569:25">-&gt;</operator><name pos:start="569:26" pos:end="569:35">nb_streams</name></name></expr>;</condition><incr pos:start="569:37" pos:end="569:39"><expr pos:start="569:37" pos:end="569:39"><name pos:start="569:37" pos:end="569:37">i</name><operator pos:start="569:38" pos:end="569:39">++</operator></expr></incr>)</control> <block pos:start="569:42" pos:end="619:13">{<block_content pos:start="571:17" pos:end="617:17">

                <expr_stmt pos:start="571:17" pos:end="571:35"><expr pos:start="571:17" pos:end="571:34"><name pos:start="571:17" pos:end="571:19">ost</name> <operator pos:start="571:21" pos:end="571:21">=</operator> <name pos:start="571:23" pos:end="571:34"><name pos:start="571:23" pos:end="571:31">ost_table</name><index pos:start="571:32" pos:end="571:34">[<expr pos:start="571:33" pos:end="571:33"><name pos:start="571:33" pos:end="571:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="573:17" pos:end="573:38"><expr pos:start="573:17" pos:end="573:37"><name pos:start="573:17" pos:end="573:19">enc</name> <operator pos:start="573:21" pos:end="573:21">=</operator> <operator pos:start="573:23" pos:end="573:23">&amp;</operator><name pos:start="573:24" pos:end="573:37"><name pos:start="573:24" pos:end="573:26">ost</name><operator pos:start="573:27" pos:end="573:28">-&gt;</operator><name pos:start="573:29" pos:end="573:30">st</name><operator pos:start="573:31" pos:end="573:32">-&gt;</operator><name pos:start="573:33" pos:end="573:37">codec</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="575:17" pos:end="617:17"><if pos:start="575:17" pos:end="617:17">if <condition pos:start="575:20" pos:end="575:56">(<expr pos:start="575:21" pos:end="575:55"><name pos:start="575:21" pos:end="575:35"><name pos:start="575:21" pos:end="575:23">enc</name><operator pos:start="575:24" pos:end="575:25">-&gt;</operator><name pos:start="575:26" pos:end="575:35">codec_type</name></name> <operator pos:start="575:37" pos:end="575:38">==</operator> <name pos:start="575:40" pos:end="575:55">CODEC_TYPE_VIDEO</name></expr>)</condition> <block pos:start="575:58" pos:end="617:17">{<block_content pos:start="577:21" pos:end="615:21">

                    <decl_stmt pos:start="577:21" pos:end="577:35"><decl pos:start="577:21" pos:end="577:26"><type pos:start="577:21" pos:end="577:23"><name pos:start="577:21" pos:end="577:23">int</name></type> <name pos:start="577:25" pos:end="577:26">n1</name></decl>, <decl pos:start="577:29" pos:end="577:30"><type ref="prev" pos:start="577:21" pos:end="577:23"/><name pos:start="577:29" pos:end="577:30">n2</name></decl>, <decl pos:start="577:33" pos:end="577:34"><type ref="prev" pos:start="577:21" pos:end="577:23"/><name pos:start="577:33" pos:end="577:34">nb</name></decl>;</decl_stmt>



                    <comment type="block" pos:start="581:21" pos:end="581:71">/* feed each codec with its requested frame rate */</comment>

                    <expr_stmt pos:start="583:21" pos:end="583:78"><expr pos:start="583:21" pos:end="583:77"><name pos:start="583:21" pos:end="583:22">n1</name> <operator pos:start="583:24" pos:end="583:24">=</operator> <operator pos:start="583:26" pos:end="583:26">(</operator><operator pos:start="583:27" pos:end="583:27">(</operator><name pos:start="583:28" pos:end="583:32">INT64</name><operator pos:start="583:33" pos:end="583:33">)</operator><name pos:start="583:34" pos:end="583:45">frame_number</name> <operator pos:start="583:47" pos:end="583:47">*</operator> <name pos:start="583:49" pos:end="583:63"><name pos:start="583:49" pos:end="583:51">enc</name><operator pos:start="583:52" pos:end="583:53">-&gt;</operator><name pos:start="583:54" pos:end="583:63">frame_rate</name></name><operator pos:start="583:64" pos:end="583:64">)</operator> <operator pos:start="583:66" pos:end="583:66">/</operator> <name pos:start="583:68" pos:end="583:77">frame_rate</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="585:21" pos:end="585:84"><expr pos:start="585:21" pos:end="585:83"><name pos:start="585:21" pos:end="585:22">n2</name> <operator pos:start="585:24" pos:end="585:24">=</operator> <operator pos:start="585:26" pos:end="585:26">(</operator><operator pos:start="585:27" pos:end="585:27">(</operator><operator pos:start="585:28" pos:end="585:28">(</operator><name pos:start="585:29" pos:end="585:33">INT64</name><operator pos:start="585:34" pos:end="585:34">)</operator><name pos:start="585:35" pos:end="585:46">frame_number</name> <operator pos:start="585:48" pos:end="585:48">+</operator> <literal type="number" pos:start="585:50" pos:end="585:50">1</literal><operator pos:start="585:51" pos:end="585:51">)</operator> <operator pos:start="585:53" pos:end="585:53">*</operator> <name pos:start="585:55" pos:end="585:69"><name pos:start="585:55" pos:end="585:57">enc</name><operator pos:start="585:58" pos:end="585:59">-&gt;</operator><name pos:start="585:60" pos:end="585:69">frame_rate</name></name><operator pos:start="585:70" pos:end="585:70">)</operator> <operator pos:start="585:72" pos:end="585:72">/</operator> <name pos:start="585:74" pos:end="585:83">frame_rate</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="587:21" pos:end="587:33"><expr pos:start="587:21" pos:end="587:32"><name pos:start="587:21" pos:end="587:22">nb</name> <operator pos:start="587:24" pos:end="587:24">=</operator> <name pos:start="587:26" pos:end="587:27">n2</name> <operator pos:start="587:29" pos:end="587:29">-</operator> <name pos:start="587:31" pos:end="587:32">n1</name></expr>;</expr_stmt>

                    <if_stmt pos:start="589:21" pos:end="615:21"><if pos:start="589:21" pos:end="615:21">if <condition pos:start="589:24" pos:end="589:31">(<expr pos:start="589:25" pos:end="589:30"><name pos:start="589:25" pos:end="589:26">nb</name> <operator pos:start="589:28" pos:end="589:28">&gt;</operator> <literal type="number" pos:start="589:30" pos:end="589:30">0</literal></expr>)</condition> <block pos:start="589:33" pos:end="615:21">{<block_content pos:start="593:25" pos:end="613:82">

                        <comment type="block" pos:start="591:25" pos:end="591:58">/* resize the picture if needed */</comment>

                        <if_stmt pos:start="593:25" pos:end="605:25"><if pos:start="593:25" pos:end="601:25">if <condition pos:start="593:28" pos:end="593:48">(<expr pos:start="593:29" pos:end="593:47"><name pos:start="593:29" pos:end="593:47"><name pos:start="593:29" pos:end="593:31">ost</name><operator pos:start="593:32" pos:end="593:33">-&gt;</operator><name pos:start="593:34" pos:end="593:47">video_resample</name></name></expr>)</condition> <block pos:start="593:50" pos:end="601:25">{<block_content pos:start="595:29" pos:end="599:60">

                            <expr_stmt pos:start="595:29" pos:end="595:54"><expr pos:start="595:29" pos:end="595:53"><name pos:start="595:29" pos:end="595:36">picture1</name> <operator pos:start="595:38" pos:end="595:38">=</operator> <operator pos:start="595:40" pos:end="595:40">&amp;</operator><name pos:start="595:41" pos:end="595:53"><name pos:start="595:41" pos:end="595:43">ost</name><operator pos:start="595:44" pos:end="595:45">-&gt;</operator><name pos:start="595:46" pos:end="595:53">pict_tmp</name></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="597:29" pos:end="599:60"><expr pos:start="597:29" pos:end="599:59"><call pos:start="597:29" pos:end="599:59"><name pos:start="597:29" pos:end="597:40">img_resample</name><argument_list pos:start="597:41" pos:end="599:59">(<argument pos:start="597:42" pos:end="597:62"><expr pos:start="597:42" pos:end="597:62"><name pos:start="597:42" pos:end="597:62"><name pos:start="597:42" pos:end="597:44">ost</name><operator pos:start="597:45" pos:end="597:46">-&gt;</operator><name pos:start="597:47" pos:end="597:62">img_resample_ctx</name></name></expr></argument>, 

                                         <argument pos:start="599:42" pos:end="599:49"><expr pos:start="599:42" pos:end="599:49"><name pos:start="599:42" pos:end="599:49">picture1</name></expr></argument>, <argument pos:start="599:52" pos:end="599:58"><expr pos:start="599:52" pos:end="599:58"><name pos:start="599:52" pos:end="599:58">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="601:27" pos:end="605:25">else <block pos:start="601:32" pos:end="605:25">{<block_content pos:start="603:29" pos:end="603:47">

                            <expr_stmt pos:start="603:29" pos:end="603:47"><expr pos:start="603:29" pos:end="603:46"><name pos:start="603:29" pos:end="603:36">picture1</name> <operator pos:start="603:38" pos:end="603:38">=</operator> <name pos:start="603:40" pos:end="603:46">picture</name></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="607:25" pos:end="611:61"><expr pos:start="607:25" pos:end="611:60"><name pos:start="607:25" pos:end="607:27">ret</name> <operator pos:start="607:29" pos:end="607:29">=</operator> <call pos:start="607:31" pos:end="611:60"><name pos:start="607:31" pos:end="607:50">avcodec_encode_video</name><argument_list pos:start="607:51" pos:end="611:60">(<argument pos:start="607:52" pos:end="607:54"><expr pos:start="607:52" pos:end="607:54"><name pos:start="607:52" pos:end="607:54">enc</name></expr></argument>, <argument pos:start="607:57" pos:end="607:68"><expr pos:start="607:57" pos:end="607:68"><name pos:start="607:57" pos:end="607:68">video_buffer</name></expr></argument>, 

                                                   <argument pos:start="609:52" pos:end="609:71"><expr pos:start="609:52" pos:end="609:71"><sizeof pos:start="609:52" pos:end="609:71">sizeof<argument_list pos:start="609:58" pos:end="609:71">(<argument pos:start="609:59" pos:end="609:70"><expr pos:start="609:59" pos:end="609:70"><name pos:start="609:59" pos:end="609:70">video_buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>, 

                                                   <argument pos:start="611:52" pos:end="611:59"><expr pos:start="611:52" pos:end="611:59"><name pos:start="611:52" pos:end="611:59">picture1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="613:25" pos:end="613:82"><expr pos:start="613:25" pos:end="613:81"><call pos:start="613:25" pos:end="613:81"><name pos:start="613:25" pos:end="613:47"><name pos:start="613:25" pos:end="613:25">s</name><operator pos:start="613:26" pos:end="613:27">-&gt;</operator><name pos:start="613:28" pos:end="613:33">format</name><operator pos:start="613:34" pos:end="613:35">-&gt;</operator><name pos:start="613:36" pos:end="613:47">write_packet</name></name><argument_list pos:start="613:48" pos:end="613:81">(<argument pos:start="613:49" pos:end="613:49"><expr pos:start="613:49" pos:end="613:49"><name pos:start="613:49" pos:end="613:49">s</name></expr></argument>, <argument pos:start="613:52" pos:end="613:61"><expr pos:start="613:52" pos:end="613:61"><name pos:start="613:52" pos:end="613:61"><name pos:start="613:52" pos:end="613:54">ost</name><operator pos:start="613:55" pos:end="613:56">-&gt;</operator><name pos:start="613:57" pos:end="613:61">index</name></name></expr></argument>, <argument pos:start="613:64" pos:end="613:75"><expr pos:start="613:64" pos:end="613:75"><name pos:start="613:64" pos:end="613:75">video_buffer</name></expr></argument>, <argument pos:start="613:78" pos:end="613:80"><expr pos:start="613:78" pos:end="613:80"><name pos:start="613:78" pos:end="613:80">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="621:13" pos:end="621:27"><expr pos:start="621:13" pos:end="621:26"><name pos:start="621:13" pos:end="621:24">frame_number</name><operator pos:start="621:25" pos:end="621:26">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        

        <comment type="block" pos:start="627:9" pos:end="627:26">/* write report */</comment>

        <block pos:start="629:9" pos:end="693:9">{<block_content pos:start="631:13" pos:end="691:13">

            <decl_stmt pos:start="631:13" pos:end="631:27"><decl pos:start="631:13" pos:end="631:26"><type pos:start="631:13" pos:end="631:16"><name pos:start="631:13" pos:end="631:16">char</name></type> <name pos:start="631:18" pos:end="631:26"><name pos:start="631:18" pos:end="631:20">buf</name><index pos:start="631:21" pos:end="631:26">[<expr pos:start="631:22" pos:end="631:25"><literal type="number" pos:start="631:22" pos:end="631:25">1024</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="633:13" pos:end="633:29"><decl pos:start="633:13" pos:end="633:28"><type pos:start="633:13" pos:end="633:17"><name pos:start="633:13" pos:end="633:17">INT64</name></type> <name pos:start="633:19" pos:end="633:28">total_size</name></decl>;</decl_stmt>

            <decl_stmt pos:start="635:13" pos:end="635:30"><decl pos:start="635:13" pos:end="635:20"><type pos:start="635:13" pos:end="635:17"><name pos:start="635:13" pos:end="635:17">float</name></type> <name pos:start="635:19" pos:end="635:20">ti</name></decl>, <decl pos:start="635:23" pos:end="635:29"><type ref="prev" pos:start="635:13" pos:end="635:17"/><name pos:start="635:23" pos:end="635:29">bitrate</name></decl>;</decl_stmt>

            <decl_stmt pos:start="637:13" pos:end="637:33"><decl pos:start="637:13" pos:end="637:32"><type pos:start="637:13" pos:end="637:24"><specifier pos:start="637:13" pos:end="637:18">static</specifier> <name pos:start="637:20" pos:end="637:24">float</name></type> <name pos:start="637:26" pos:end="637:32">last_ti</name></decl>;</decl_stmt>

            <decl_stmt pos:start="639:13" pos:end="639:22"><decl pos:start="639:13" pos:end="639:21"><type pos:start="639:13" pos:end="639:17"><name pos:start="639:13" pos:end="639:17">INT64</name></type> <name pos:start="639:19" pos:end="639:21">ti1</name></decl>;</decl_stmt>



            <expr_stmt pos:start="643:13" pos:end="643:43"><expr pos:start="643:13" pos:end="643:42"><name pos:start="643:13" pos:end="643:22">total_size</name> <operator pos:start="643:24" pos:end="643:24">=</operator> <call pos:start="643:26" pos:end="643:42"><name pos:start="643:26" pos:end="643:34">url_ftell</name><argument_list pos:start="643:35" pos:end="643:42">(<argument pos:start="643:36" pos:end="643:41"><expr pos:start="643:36" pos:end="643:41"><operator pos:start="643:36" pos:end="643:36">&amp;</operator><name pos:start="643:37" pos:end="643:41"><name pos:start="643:37" pos:end="643:37">s</name><operator pos:start="643:38" pos:end="643:39">-&gt;</operator><name pos:start="643:40" pos:end="643:41">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="645:13" pos:end="645:41"><expr pos:start="645:13" pos:end="645:40"><name pos:start="645:13" pos:end="645:15">ti1</name> <operator pos:start="645:17" pos:end="645:17">=</operator> <call pos:start="645:19" pos:end="645:27"><name pos:start="645:19" pos:end="645:25">gettime</name><argument_list pos:start="645:26" pos:end="645:27">()</argument_list></call> <operator pos:start="645:29" pos:end="645:29">-</operator> <name pos:start="645:31" pos:end="645:40">time_start</name></expr>;</expr_stmt>

            <comment type="block" pos:start="647:13" pos:end="647:36">/* check elapsed time */</comment>

            <if_stmt pos:start="649:13" pos:end="651:22"><if pos:start="649:13" pos:end="651:22">if <condition pos:start="649:16" pos:end="649:56">(<expr pos:start="649:17" pos:end="649:55"><name pos:start="649:17" pos:end="649:30">recording_time</name> <operator pos:start="649:32" pos:end="649:33">&amp;&amp;</operator> <name pos:start="649:35" pos:end="649:37">ti1</name> <operator pos:start="649:39" pos:end="649:40">&gt;=</operator> <name pos:start="649:42" pos:end="649:55">recording_time</name></expr>)</condition><block type="pseudo" pos:start="651:17" pos:end="651:22"><block_content pos:start="651:17" pos:end="651:22">

                <break pos:start="651:17" pos:end="651:22">break;</break></block_content></block></if></if_stmt>



            <expr_stmt pos:start="655:13" pos:end="655:33"><expr pos:start="655:13" pos:end="655:32"><name pos:start="655:13" pos:end="655:14">ti</name> <operator pos:start="655:16" pos:end="655:16">=</operator> <name pos:start="655:18" pos:end="655:20">ti1</name> <operator pos:start="655:22" pos:end="655:22">/</operator> <literal type="number" pos:start="655:24" pos:end="655:32">1000000.0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="657:13" pos:end="659:25"><if pos:start="657:13" pos:end="659:25">if <condition pos:start="657:16" pos:end="657:25">(<expr pos:start="657:17" pos:end="657:24"><name pos:start="657:17" pos:end="657:18">ti</name> <operator pos:start="657:20" pos:end="657:20">&lt;</operator> <literal type="number" pos:start="657:22" pos:end="657:24">0.1</literal></expr>)</condition><block type="pseudo" pos:start="659:17" pos:end="659:25"><block_content pos:start="659:17" pos:end="659:25">

                <expr_stmt pos:start="659:17" pos:end="659:25"><expr pos:start="659:17" pos:end="659:24"><name pos:start="659:17" pos:end="659:18">ti</name> <operator pos:start="659:20" pos:end="659:20">=</operator> <literal type="number" pos:start="659:22" pos:end="659:24">0.1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="661:13" pos:end="661:42">/* dispaly twice per second */</comment>

            <if_stmt pos:start="663:13" pos:end="691:13"><if pos:start="663:13" pos:end="691:13">if <condition pos:start="663:16" pos:end="663:38">(<expr pos:start="663:17" pos:end="663:37"><operator pos:start="663:17" pos:end="663:17">(</operator><name pos:start="663:18" pos:end="663:19">ti</name> <operator pos:start="663:21" pos:end="663:21">-</operator> <name pos:start="663:23" pos:end="663:29">last_ti</name><operator pos:start="663:30" pos:end="663:30">)</operator> <operator pos:start="663:32" pos:end="663:33">&gt;=</operator> <literal type="number" pos:start="663:35" pos:end="663:37">0.5</literal></expr>)</condition> <block pos:start="663:40" pos:end="691:13">{<block_content pos:start="665:17" pos:end="689:31">

                <expr_stmt pos:start="665:17" pos:end="665:29"><expr pos:start="665:17" pos:end="665:28"><name pos:start="665:17" pos:end="665:23">last_ti</name> <operator pos:start="665:25" pos:end="665:25">=</operator> <name pos:start="665:27" pos:end="665:28">ti</name></expr>;</expr_stmt>

                <expr_stmt pos:start="667:17" pos:end="667:64"><expr pos:start="667:17" pos:end="667:63"><name pos:start="667:17" pos:end="667:23">bitrate</name> <operator pos:start="667:25" pos:end="667:25">=</operator> <operator pos:start="667:27" pos:end="667:27">(</operator><name pos:start="667:28" pos:end="667:30">int</name><operator pos:start="667:31" pos:end="667:31">)</operator><operator pos:start="667:32" pos:end="667:32">(</operator><operator pos:start="667:33" pos:end="667:33">(</operator><name pos:start="667:34" pos:end="667:43">total_size</name> <operator pos:start="667:45" pos:end="667:45">*</operator> <literal type="number" pos:start="667:47" pos:end="667:47">8</literal><operator pos:start="667:48" pos:end="667:48">)</operator> <operator pos:start="667:50" pos:end="667:50">/</operator> <name pos:start="667:52" pos:end="667:53">ti</name> <operator pos:start="667:55" pos:end="667:55">/</operator> <literal type="number" pos:start="667:57" pos:end="667:62">1000.0</literal><operator pos:start="667:63" pos:end="667:63">)</operator></expr>;</expr_stmt>

                

                <expr_stmt pos:start="671:17" pos:end="671:30"><expr pos:start="671:17" pos:end="671:29"><name pos:start="671:17" pos:end="671:22"><name pos:start="671:17" pos:end="671:19">buf</name><index pos:start="671:20" pos:end="671:22">[<expr pos:start="671:21" pos:end="671:21"><literal type="number" pos:start="671:21" pos:end="671:21">0</literal></expr>]</index></name> <operator pos:start="671:24" pos:end="671:24">=</operator> <literal type="char" pos:start="671:26" pos:end="671:29">'\0'</literal></expr>;</expr_stmt>

                <if_stmt pos:start="673:17" pos:end="679:17"><if pos:start="673:17" pos:end="679:17">if <condition pos:start="673:20" pos:end="673:30">(<expr pos:start="673:21" pos:end="673:29"><name pos:start="673:21" pos:end="673:29">use_video</name></expr>)</condition> <block pos:start="673:32" pos:end="679:17">{<block_content pos:start="675:21" pos:end="677:94">

                    <expr_stmt pos:start="675:21" pos:end="677:94"><expr pos:start="675:21" pos:end="677:93"><call pos:start="675:21" pos:end="677:93"><name pos:start="675:21" pos:end="675:27">sprintf</name><argument_list pos:start="675:28" pos:end="677:93">(<argument pos:start="675:29" pos:end="675:45"><expr pos:start="675:29" pos:end="675:45"><name pos:start="675:29" pos:end="675:31">buf</name> <operator pos:start="675:33" pos:end="675:33">+</operator> <call pos:start="675:35" pos:end="675:45"><name pos:start="675:35" pos:end="675:40">strlen</name><argument_list pos:start="675:41" pos:end="675:45">(<argument pos:start="675:42" pos:end="675:44"><expr pos:start="675:42" pos:end="675:44"><name pos:start="675:42" pos:end="675:44">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="675:48" pos:end="675:75"><expr pos:start="675:48" pos:end="675:75"><literal type="string" pos:start="675:48" pos:end="675:75">"frame=%5d fps=%4.1f q=%2d "</literal></expr></argument>,

                            <argument pos:start="677:29" pos:end="677:40"><expr pos:start="677:29" pos:end="677:40"><name pos:start="677:29" pos:end="677:40">frame_number</name></expr></argument>, <argument pos:start="677:43" pos:end="677:66"><expr pos:start="677:43" pos:end="677:66"><operator pos:start="677:43" pos:end="677:43">(</operator><name pos:start="677:44" pos:end="677:48">float</name><operator pos:start="677:49" pos:end="677:49">)</operator><name pos:start="677:50" pos:end="677:61">frame_number</name> <operator pos:start="677:63" pos:end="677:63">/</operator> <name pos:start="677:65" pos:end="677:66">ti</name></expr></argument>, <argument pos:start="677:69" pos:end="677:92"><expr pos:start="677:69" pos:end="677:92"><name pos:start="677:69" pos:end="677:92"><name pos:start="677:69" pos:end="677:83">first_video_enc</name><operator pos:start="677:84" pos:end="677:85">-&gt;</operator><name pos:start="677:86" pos:end="677:92">quality</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                

                <expr_stmt pos:start="683:17" pos:end="685:56"><expr pos:start="683:17" pos:end="685:55"><call pos:start="683:17" pos:end="685:55"><name pos:start="683:17" pos:end="683:23">sprintf</name><argument_list pos:start="683:24" pos:end="685:55">(<argument pos:start="683:25" pos:end="683:41"><expr pos:start="683:25" pos:end="683:41"><name pos:start="683:25" pos:end="683:27">buf</name> <operator pos:start="683:29" pos:end="683:29">+</operator> <call pos:start="683:31" pos:end="683:41"><name pos:start="683:31" pos:end="683:36">strlen</name><argument_list pos:start="683:37" pos:end="683:41">(<argument pos:start="683:38" pos:end="683:40"><expr pos:start="683:38" pos:end="683:40"><name pos:start="683:38" pos:end="683:40">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="683:44" pos:end="683:88"><expr pos:start="683:44" pos:end="683:88"><literal type="string" pos:start="683:44" pos:end="683:88">"size=%8LdkB time=%0.1f bitrate=%6.1fkbits/s"</literal></expr></argument>, 

                        <argument pos:start="685:25" pos:end="685:41"><expr pos:start="685:25" pos:end="685:41"><name pos:start="685:25" pos:end="685:34">total_size</name> <operator pos:start="685:36" pos:end="685:36">/</operator> <literal type="number" pos:start="685:38" pos:end="685:41">1024</literal></expr></argument>, <argument pos:start="685:44" pos:end="685:45"><expr pos:start="685:44" pos:end="685:45"><name pos:start="685:44" pos:end="685:45">ti</name></expr></argument>, <argument pos:start="685:48" pos:end="685:54"><expr pos:start="685:48" pos:end="685:54"><name pos:start="685:48" pos:end="685:54">bitrate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="687:17" pos:end="687:49"><expr pos:start="687:17" pos:end="687:48"><call pos:start="687:17" pos:end="687:48"><name pos:start="687:17" pos:end="687:23">fprintf</name><argument_list pos:start="687:24" pos:end="687:48">(<argument pos:start="687:25" pos:end="687:30"><expr pos:start="687:25" pos:end="687:30"><name pos:start="687:25" pos:end="687:30">stderr</name></expr></argument>, <argument pos:start="687:33" pos:end="687:42"><expr pos:start="687:33" pos:end="687:42"><literal type="string" pos:start="687:33" pos:end="687:42">"%s    \r"</literal></expr></argument>, <argument pos:start="687:45" pos:end="687:47"><expr pos:start="687:45" pos:end="687:47"><name pos:start="687:45" pos:end="687:47">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="689:17" pos:end="689:31"><expr pos:start="689:17" pos:end="689:30"><call pos:start="689:17" pos:end="689:30"><name pos:start="689:17" pos:end="689:22">fflush</name><argument_list pos:start="689:23" pos:end="689:30">(<argument pos:start="689:24" pos:end="689:29"><expr pos:start="689:24" pos:end="689:29"><name pos:start="689:24" pos:end="689:29">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

    </block_content>}</block></for>

    <expr_stmt pos:start="697:5" pos:end="697:16"><expr pos:start="697:5" pos:end="697:15"><call pos:start="697:5" pos:end="697:15"><name pos:start="697:5" pos:end="697:13">term_exit</name><argument_list pos:start="697:14" pos:end="697:15">()</argument_list></call></expr>;</expr_stmt>



    <for pos:start="701:5" pos:end="709:5">for<control pos:start="701:8" pos:end="701:32">(<init pos:start="701:9" pos:end="701:12"><expr pos:start="701:9" pos:end="701:11"><name pos:start="701:9" pos:end="701:9">i</name><operator pos:start="701:10" pos:end="701:10">=</operator><literal type="number" pos:start="701:11" pos:end="701:11">0</literal></expr>;</init><condition pos:start="701:13" pos:end="701:28"><expr pos:start="701:13" pos:end="701:27"><name pos:start="701:13" pos:end="701:13">i</name><operator pos:start="701:14" pos:end="701:14">&lt;</operator><name pos:start="701:15" pos:end="701:27"><name pos:start="701:15" pos:end="701:15">s</name><operator pos:start="701:16" pos:end="701:17">-&gt;</operator><name pos:start="701:18" pos:end="701:27">nb_streams</name></name></expr>;</condition><incr pos:start="701:29" pos:end="701:31"><expr pos:start="701:29" pos:end="701:31"><name pos:start="701:29" pos:end="701:29">i</name><operator pos:start="701:30" pos:end="701:31">++</operator></expr></incr>)</control> <block pos:start="701:34" pos:end="709:5">{<block_content pos:start="703:9" pos:end="707:27">

        <expr_stmt pos:start="703:9" pos:end="703:27"><expr pos:start="703:9" pos:end="703:26"><name pos:start="703:9" pos:end="703:11">ost</name> <operator pos:start="703:13" pos:end="703:13">=</operator> <name pos:start="703:15" pos:end="703:26"><name pos:start="703:15" pos:end="703:23">ost_table</name><index pos:start="703:24" pos:end="703:26">[<expr pos:start="703:25" pos:end="703:25"><name pos:start="703:25" pos:end="703:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="705:9" pos:end="705:30"><expr pos:start="705:9" pos:end="705:29"><name pos:start="705:9" pos:end="705:11">enc</name> <operator pos:start="705:13" pos:end="705:13">=</operator> <operator pos:start="705:15" pos:end="705:15">&amp;</operator><name pos:start="705:16" pos:end="705:29"><name pos:start="705:16" pos:end="705:18">ost</name><operator pos:start="705:19" pos:end="705:20">-&gt;</operator><name pos:start="705:21" pos:end="705:22">st</name><operator pos:start="705:23" pos:end="705:24">-&gt;</operator><name pos:start="705:25" pos:end="705:29">codec</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="707:9" pos:end="707:27"><expr pos:start="707:9" pos:end="707:26"><call pos:start="707:9" pos:end="707:26"><name pos:start="707:9" pos:end="707:21">avcodec_close</name><argument_list pos:start="707:22" pos:end="707:26">(<argument pos:start="707:23" pos:end="707:25"><expr pos:start="707:23" pos:end="707:25"><name pos:start="707:23" pos:end="707:25">enc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="711:5" pos:end="711:32"><expr pos:start="711:5" pos:end="711:31"><call pos:start="711:5" pos:end="711:31"><name pos:start="711:5" pos:end="711:28"><name pos:start="711:5" pos:end="711:5">s</name><operator pos:start="711:6" pos:end="711:7">-&gt;</operator><name pos:start="711:8" pos:end="711:13">format</name><operator pos:start="711:14" pos:end="711:15">-&gt;</operator><name pos:start="711:16" pos:end="711:28">write_trailer</name></name><argument_list pos:start="711:29" pos:end="711:31">(<argument pos:start="711:30" pos:end="711:30"><expr pos:start="711:30" pos:end="711:30"><name pos:start="711:30" pos:end="711:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <if_stmt pos:start="715:5" pos:end="717:32"><if pos:start="715:5" pos:end="717:32">if <condition pos:start="715:8" pos:end="715:21">(<expr pos:start="715:9" pos:end="715:20"><name pos:start="715:9" pos:end="715:20">audio_handle</name></expr>)</condition><block type="pseudo" pos:start="717:9" pos:end="717:32"><block_content pos:start="717:9" pos:end="717:32">

        <expr_stmt pos:start="717:9" pos:end="717:32"><expr pos:start="717:9" pos:end="717:31"><call pos:start="717:9" pos:end="717:31"><name pos:start="717:9" pos:end="717:17">url_close</name><argument_list pos:start="717:18" pos:end="717:31">(<argument pos:start="717:19" pos:end="717:30"><expr pos:start="717:19" pos:end="717:30"><name pos:start="717:19" pos:end="717:30">audio_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="721:5" pos:end="723:32"><if pos:start="721:5" pos:end="723:32">if <condition pos:start="721:8" pos:end="721:21">(<expr pos:start="721:9" pos:end="721:20"><name pos:start="721:9" pos:end="721:20">video_handle</name></expr>)</condition><block type="pseudo" pos:start="723:9" pos:end="723:32"><block_content pos:start="723:9" pos:end="723:32">

        <expr_stmt pos:start="723:9" pos:end="723:32"><expr pos:start="723:9" pos:end="723:31"><call pos:start="723:9" pos:end="723:31"><name pos:start="723:9" pos:end="723:17">url_close</name><argument_list pos:start="723:18" pos:end="723:31">(<argument pos:start="723:19" pos:end="723:30"><expr pos:start="723:19" pos:end="723:30"><name pos:start="723:19" pos:end="723:30">video_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="727:5" pos:end="727:22">/* write report */</comment>

    <block pos:start="729:5" pos:end="761:5">{<block_content pos:start="731:9" pos:end="759:9">

        <decl_stmt pos:start="731:9" pos:end="731:26"><decl pos:start="731:9" pos:end="731:16"><type pos:start="731:9" pos:end="731:13"><name pos:start="731:9" pos:end="731:13">float</name></type> <name pos:start="731:15" pos:end="731:16">ti</name></decl>, <decl pos:start="731:19" pos:end="731:25"><type ref="prev" pos:start="731:9" pos:end="731:13"/><name pos:start="731:19" pos:end="731:25">bitrate</name></decl>;</decl_stmt>

        <decl_stmt pos:start="733:9" pos:end="733:25"><decl pos:start="733:9" pos:end="733:24"><type pos:start="733:9" pos:end="733:13"><name pos:start="733:9" pos:end="733:13">INT64</name></type> <name pos:start="733:15" pos:end="733:24">total_size</name></decl>;</decl_stmt>



        <expr_stmt pos:start="737:9" pos:end="737:39"><expr pos:start="737:9" pos:end="737:38"><name pos:start="737:9" pos:end="737:18">total_size</name> <operator pos:start="737:20" pos:end="737:20">=</operator> <call pos:start="737:22" pos:end="737:38"><name pos:start="737:22" pos:end="737:30">url_ftell</name><argument_list pos:start="737:31" pos:end="737:38">(<argument pos:start="737:32" pos:end="737:37"><expr pos:start="737:32" pos:end="737:37"><operator pos:start="737:32" pos:end="737:32">&amp;</operator><name pos:start="737:33" pos:end="737:37"><name pos:start="737:33" pos:end="737:33">s</name><operator pos:start="737:34" pos:end="737:35">-&gt;</operator><name pos:start="737:36" pos:end="737:37">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="741:9" pos:end="741:50"><expr pos:start="741:9" pos:end="741:49"><name pos:start="741:9" pos:end="741:10">ti</name> <operator pos:start="741:12" pos:end="741:12">=</operator> <operator pos:start="741:14" pos:end="741:14">(</operator><call pos:start="741:15" pos:end="741:23"><name pos:start="741:15" pos:end="741:21">gettime</name><argument_list pos:start="741:22" pos:end="741:23">()</argument_list></call> <operator pos:start="741:25" pos:end="741:25">-</operator> <name pos:start="741:27" pos:end="741:36">time_start</name><operator pos:start="741:37" pos:end="741:37">)</operator> <operator pos:start="741:39" pos:end="741:39">/</operator> <literal type="number" pos:start="741:41" pos:end="741:49">1000000.0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="743:9" pos:end="745:21"><if pos:start="743:9" pos:end="745:21">if <condition pos:start="743:12" pos:end="743:21">(<expr pos:start="743:13" pos:end="743:20"><name pos:start="743:13" pos:end="743:14">ti</name> <operator pos:start="743:16" pos:end="743:16">&lt;</operator> <literal type="number" pos:start="743:18" pos:end="743:20">0.1</literal></expr>)</condition><block type="pseudo" pos:start="745:13" pos:end="745:21"><block_content pos:start="745:13" pos:end="745:21">

            <expr_stmt pos:start="745:13" pos:end="745:21"><expr pos:start="745:13" pos:end="745:20"><name pos:start="745:13" pos:end="745:14">ti</name> <operator pos:start="745:16" pos:end="745:16">=</operator> <literal type="number" pos:start="745:18" pos:end="745:20">0.1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="747:9" pos:end="747:56"><expr pos:start="747:9" pos:end="747:55"><name pos:start="747:9" pos:end="747:15">bitrate</name> <operator pos:start="747:17" pos:end="747:17">=</operator> <operator pos:start="747:19" pos:end="747:19">(</operator><name pos:start="747:20" pos:end="747:22">int</name><operator pos:start="747:23" pos:end="747:23">)</operator><operator pos:start="747:24" pos:end="747:24">(</operator><operator pos:start="747:25" pos:end="747:25">(</operator><name pos:start="747:26" pos:end="747:35">total_size</name> <operator pos:start="747:37" pos:end="747:37">*</operator> <literal type="number" pos:start="747:39" pos:end="747:39">8</literal><operator pos:start="747:40" pos:end="747:40">)</operator> <operator pos:start="747:42" pos:end="747:42">/</operator> <name pos:start="747:44" pos:end="747:45">ti</name> <operator pos:start="747:47" pos:end="747:47">/</operator> <literal type="number" pos:start="747:49" pos:end="747:54">1000.0</literal><operator pos:start="747:55" pos:end="747:55">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="751:9" pos:end="753:48"><expr pos:start="751:9" pos:end="753:47"><call pos:start="751:9" pos:end="753:47"><name pos:start="751:9" pos:end="751:15">fprintf</name><argument_list pos:start="751:16" pos:end="753:47">(<argument pos:start="751:17" pos:end="751:22"><expr pos:start="751:17" pos:end="751:22"><name pos:start="751:17" pos:end="751:22">stderr</name></expr></argument>, <argument pos:start="751:25" pos:end="751:83"><expr pos:start="751:25" pos:end="751:83"><literal type="string" pos:start="751:25" pos:end="751:83">"\033[K\nTotal time = %0.1f s, %Ld KBytes, %0.1f kbits/s\n"</literal></expr></argument>, 

                <argument pos:start="753:17" pos:end="753:18"><expr pos:start="753:17" pos:end="753:18"><name pos:start="753:17" pos:end="753:18">ti</name></expr></argument>, <argument pos:start="753:21" pos:end="753:37"><expr pos:start="753:21" pos:end="753:37"><name pos:start="753:21" pos:end="753:30">total_size</name> <operator pos:start="753:32" pos:end="753:32">/</operator> <literal type="number" pos:start="753:34" pos:end="753:37">1024</literal></expr></argument>, <argument pos:start="753:40" pos:end="753:46"><expr pos:start="753:40" pos:end="753:46"><name pos:start="753:40" pos:end="753:46">bitrate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="755:9" pos:end="759:9"><if pos:start="755:9" pos:end="759:9">if <condition pos:start="755:12" pos:end="755:22">(<expr pos:start="755:13" pos:end="755:21"><name pos:start="755:13" pos:end="755:21">use_video</name></expr>)</condition> <block pos:start="755:24" pos:end="759:9">{<block_content pos:start="757:13" pos:end="757:65">

            <expr_stmt pos:start="757:13" pos:end="757:65"><expr pos:start="757:13" pos:end="757:64"><call pos:start="757:13" pos:end="757:64"><name pos:start="757:13" pos:end="757:19">fprintf</name><argument_list pos:start="757:20" pos:end="757:64">(<argument pos:start="757:21" pos:end="757:26"><expr pos:start="757:21" pos:end="757:26"><name pos:start="757:21" pos:end="757:26">stderr</name></expr></argument>, <argument pos:start="757:29" pos:end="757:49"><expr pos:start="757:29" pos:end="757:49"><literal type="string" pos:start="757:29" pos:end="757:49">"Total frames = %d\n"</literal></expr></argument>, <argument pos:start="757:52" pos:end="757:63"><expr pos:start="757:52" pos:end="757:63"><name pos:start="757:52" pos:end="757:63">frame_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="765:5" pos:end="765:12"><expr pos:start="765:5" pos:end="765:11"><name pos:start="765:5" pos:end="765:7">ret</name> <operator pos:start="765:9" pos:end="765:9">=</operator> <literal type="number" pos:start="765:11" pos:end="765:11">0</literal></expr>;</expr_stmt>

 <label pos:start="767:2" pos:end="767:7"><name pos:start="767:2" pos:end="767:6">fail1</name>:</label>

    <if_stmt pos:start="769:5" pos:end="771:29"><if pos:start="769:5" pos:end="771:29">if <condition pos:start="769:8" pos:end="769:23">(<expr pos:start="769:9" pos:end="769:22"><name pos:start="769:9" pos:end="769:22">picture_in_buf</name></expr>)</condition><block type="pseudo" pos:start="771:9" pos:end="771:29"><block_content pos:start="771:9" pos:end="771:29">

        <expr_stmt pos:start="771:9" pos:end="771:29"><expr pos:start="771:9" pos:end="771:28"><call pos:start="771:9" pos:end="771:28"><name pos:start="771:9" pos:end="771:12">free</name><argument_list pos:start="771:13" pos:end="771:28">(<argument pos:start="771:14" pos:end="771:27"><expr pos:start="771:14" pos:end="771:27"><name pos:start="771:14" pos:end="771:27">picture_in_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="773:5" pos:end="775:27"><if pos:start="773:5" pos:end="775:27">if <condition pos:start="773:8" pos:end="773:21">(<expr pos:start="773:9" pos:end="773:20"><name pos:start="773:9" pos:end="773:20">picture_420p</name></expr>)</condition><block type="pseudo" pos:start="775:9" pos:end="775:27"><block_content pos:start="775:9" pos:end="775:27">

        <expr_stmt pos:start="775:9" pos:end="775:27"><expr pos:start="775:9" pos:end="775:26"><call pos:start="775:9" pos:end="775:26"><name pos:start="775:9" pos:end="775:12">free</name><argument_list pos:start="775:13" pos:end="775:26">(<argument pos:start="775:14" pos:end="775:25"><expr pos:start="775:14" pos:end="775:25"><name pos:start="775:14" pos:end="775:25">picture_420p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="777:5" pos:end="803:5">for<control pos:start="777:8" pos:end="777:32">(<init pos:start="777:9" pos:end="777:12"><expr pos:start="777:9" pos:end="777:11"><name pos:start="777:9" pos:end="777:9">i</name><operator pos:start="777:10" pos:end="777:10">=</operator><literal type="number" pos:start="777:11" pos:end="777:11">0</literal></expr>;</init><condition pos:start="777:13" pos:end="777:28"><expr pos:start="777:13" pos:end="777:27"><name pos:start="777:13" pos:end="777:13">i</name><operator pos:start="777:14" pos:end="777:14">&lt;</operator><name pos:start="777:15" pos:end="777:27"><name pos:start="777:15" pos:end="777:15">s</name><operator pos:start="777:16" pos:end="777:17">-&gt;</operator><name pos:start="777:18" pos:end="777:27">nb_streams</name></name></expr>;</condition><incr pos:start="777:29" pos:end="777:31"><expr pos:start="777:29" pos:end="777:31"><name pos:start="777:29" pos:end="777:29">i</name><operator pos:start="777:30" pos:end="777:31">++</operator></expr></incr>)</control> <block pos:start="777:34" pos:end="803:5">{<block_content pos:start="779:9" pos:end="801:9">

        <expr_stmt pos:start="779:9" pos:end="779:27"><expr pos:start="779:9" pos:end="779:26"><name pos:start="779:9" pos:end="779:11">ost</name> <operator pos:start="779:13" pos:end="779:13">=</operator> <name pos:start="779:15" pos:end="779:26"><name pos:start="779:15" pos:end="779:23">ost_table</name><index pos:start="779:24" pos:end="779:26">[<expr pos:start="779:25" pos:end="779:25"><name pos:start="779:25" pos:end="779:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="781:9" pos:end="801:9"><if pos:start="781:9" pos:end="801:9">if <condition pos:start="781:12" pos:end="781:16">(<expr pos:start="781:13" pos:end="781:15"><name pos:start="781:13" pos:end="781:15">ost</name></expr>)</condition> <block pos:start="781:18" pos:end="801:9">{<block_content pos:start="783:13" pos:end="799:22">

            <if_stmt pos:start="783:13" pos:end="785:38"><if pos:start="783:13" pos:end="785:38">if <condition pos:start="783:16" pos:end="783:33">(<expr pos:start="783:17" pos:end="783:32"><name pos:start="783:17" pos:end="783:32"><name pos:start="783:17" pos:end="783:19">ost</name><operator pos:start="783:20" pos:end="783:21">-&gt;</operator><name pos:start="783:22" pos:end="783:25">fifo</name><operator pos:start="783:26" pos:end="783:26">.</operator><name pos:start="783:27" pos:end="783:32">buffer</name></name></expr>)</condition><block type="pseudo" pos:start="785:17" pos:end="785:38"><block_content pos:start="785:17" pos:end="785:38">

                <expr_stmt pos:start="785:17" pos:end="785:38"><expr pos:start="785:17" pos:end="785:37"><call pos:start="785:17" pos:end="785:37"><name pos:start="785:17" pos:end="785:25">fifo_free</name><argument_list pos:start="785:26" pos:end="785:37">(<argument pos:start="785:27" pos:end="785:36"><expr pos:start="785:27" pos:end="785:36"><operator pos:start="785:27" pos:end="785:27">&amp;</operator><name pos:start="785:28" pos:end="785:36"><name pos:start="785:28" pos:end="785:30">ost</name><operator pos:start="785:31" pos:end="785:32">-&gt;</operator><name pos:start="785:33" pos:end="785:36">fifo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="787:13" pos:end="789:44"><if pos:start="787:13" pos:end="789:44">if <condition pos:start="787:16" pos:end="787:38">(<expr pos:start="787:17" pos:end="787:37"><name pos:start="787:17" pos:end="787:37"><name pos:start="787:17" pos:end="787:19">ost</name><operator pos:start="787:20" pos:end="787:21">-&gt;</operator><name pos:start="787:22" pos:end="787:29">pict_tmp</name><operator pos:start="787:30" pos:end="787:30">.</operator><name pos:start="787:31" pos:end="787:34">data</name><index pos:start="787:35" pos:end="787:37">[<expr pos:start="787:36" pos:end="787:36"><literal type="number" pos:start="787:36" pos:end="787:36">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="789:17" pos:end="789:44"><block_content pos:start="789:17" pos:end="789:44">

                <expr_stmt pos:start="789:17" pos:end="789:44"><expr pos:start="789:17" pos:end="789:43"><call pos:start="789:17" pos:end="789:43"><name pos:start="789:17" pos:end="789:20">free</name><argument_list pos:start="789:21" pos:end="789:43">(<argument pos:start="789:22" pos:end="789:42"><expr pos:start="789:22" pos:end="789:42"><name pos:start="789:22" pos:end="789:42"><name pos:start="789:22" pos:end="789:24">ost</name><operator pos:start="789:25" pos:end="789:26">-&gt;</operator><name pos:start="789:27" pos:end="789:34">pict_tmp</name><operator pos:start="789:35" pos:end="789:35">.</operator><name pos:start="789:36" pos:end="789:39">data</name><index pos:start="789:40" pos:end="789:42">[<expr pos:start="789:41" pos:end="789:41"><literal type="number" pos:start="789:41" pos:end="789:41">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="791:13" pos:end="793:58"><if pos:start="791:13" pos:end="793:58">if <condition pos:start="791:16" pos:end="791:36">(<expr pos:start="791:17" pos:end="791:35"><name pos:start="791:17" pos:end="791:35"><name pos:start="791:17" pos:end="791:19">ost</name><operator pos:start="791:20" pos:end="791:21">-&gt;</operator><name pos:start="791:22" pos:end="791:35">video_resample</name></name></expr>)</condition><block type="pseudo" pos:start="793:17" pos:end="793:58"><block_content pos:start="793:17" pos:end="793:58">

                <expr_stmt pos:start="793:17" pos:end="793:58"><expr pos:start="793:17" pos:end="793:57"><call pos:start="793:17" pos:end="793:57"><name pos:start="793:17" pos:end="793:34">img_resample_close</name><argument_list pos:start="793:35" pos:end="793:57">(<argument pos:start="793:36" pos:end="793:56"><expr pos:start="793:36" pos:end="793:56"><name pos:start="793:36" pos:end="793:56"><name pos:start="793:36" pos:end="793:38">ost</name><operator pos:start="793:39" pos:end="793:40">-&gt;</operator><name pos:start="793:41" pos:end="793:56">img_resample_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="795:13" pos:end="797:52"><if pos:start="795:13" pos:end="797:52">if <condition pos:start="795:16" pos:end="795:36">(<expr pos:start="795:17" pos:end="795:35"><name pos:start="795:17" pos:end="795:35"><name pos:start="795:17" pos:end="795:19">ost</name><operator pos:start="795:20" pos:end="795:21">-&gt;</operator><name pos:start="795:22" pos:end="795:35">audio_resample</name></name></expr>)</condition><block type="pseudo" pos:start="797:17" pos:end="797:52"><block_content pos:start="797:17" pos:end="797:52">

                <expr_stmt pos:start="797:17" pos:end="797:52"><expr pos:start="797:17" pos:end="797:51"><call pos:start="797:17" pos:end="797:51"><name pos:start="797:17" pos:end="797:36">audio_resample_close</name><argument_list pos:start="797:37" pos:end="797:51">(<argument pos:start="797:38" pos:end="797:50"><expr pos:start="797:38" pos:end="797:50"><name pos:start="797:38" pos:end="797:50"><name pos:start="797:38" pos:end="797:40">ost</name><operator pos:start="797:41" pos:end="797:42">-&gt;</operator><name pos:start="797:43" pos:end="797:50">resample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="799:13" pos:end="799:22"><expr pos:start="799:13" pos:end="799:21"><call pos:start="799:13" pos:end="799:21"><name pos:start="799:13" pos:end="799:16">free</name><argument_list pos:start="799:17" pos:end="799:21">(<argument pos:start="799:18" pos:end="799:20"><expr pos:start="799:18" pos:end="799:20"><name pos:start="799:18" pos:end="799:20">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="805:5" pos:end="805:15">return <expr pos:start="805:12" pos:end="805:14"><name pos:start="805:12" pos:end="805:14">ret</name></expr>;</return>

 <label pos:start="807:2" pos:end="807:6"><name pos:start="807:2" pos:end="807:5">fail</name>:</label>

    <expr_stmt pos:start="809:5" pos:end="809:18"><expr pos:start="809:5" pos:end="809:17"><name pos:start="809:5" pos:end="809:7">ret</name> <operator pos:start="809:9" pos:end="809:9">=</operator> <operator pos:start="809:11" pos:end="809:11">-</operator><name pos:start="809:12" pos:end="809:17">ENOMEM</name></expr>;</expr_stmt>

    <goto pos:start="811:5" pos:end="811:15">goto <name pos:start="811:10" pos:end="811:14">fail1</name>;</goto>

</block_content>}</block></function>
</unit>
