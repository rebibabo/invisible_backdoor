<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1125.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:35">exynos4210_rtc_read</name><parameter_list pos:start="1:36" pos:end="3:22">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">opaque</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:75"><decl pos:start="1:51" pos:end="1:75"><type pos:start="1:51" pos:end="1:75"><name pos:start="1:51" pos:end="1:68">target_phys_addr_t</name></type> <name pos:start="1:70" pos:end="1:75">offset</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:21"><decl pos:start="3:9" pos:end="3:21"><type pos:start="3:9" pos:end="3:21"><name pos:start="3:9" pos:end="3:16">unsigned</name></type> <name pos:start="3:18" pos:end="3:21">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="145:1">{<block_content pos:start="7:5" pos:end="143:17">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:18">value</name> <init pos:start="7:20" pos:end="7:22">= <expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:57"><decl pos:start="9:5" pos:end="9:56"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:22">Exynos4210RTCState</name> <modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:25">s</name> <init pos:start="9:27" pos:end="9:56">= <expr pos:start="9:29" pos:end="9:56"><operator pos:start="9:29" pos:end="9:29">(</operator><name pos:start="9:30" pos:end="9:47">Exynos4210RTCState</name> <operator pos:start="9:49" pos:end="9:49">*</operator><operator pos:start="9:50" pos:end="9:50">)</operator><name pos:start="9:51" pos:end="9:56">opaque</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="141:5">switch <condition pos:start="13:12" pos:end="13:19">(<expr pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:18">offset</name></expr>)</condition> <block pos:start="13:21" pos:end="141:5">{<block_content pos:start="15:5" pos:end="139:14">

    <case pos:start="15:5" pos:end="15:14">case <expr pos:start="15:10" pos:end="15:13"><name pos:start="15:10" pos:end="15:13">INTP</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:28"><expr pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:13">value</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:27"><name pos:start="17:17" pos:end="17:17">s</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:27">reg_intp</name></name></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:16">case <expr pos:start="21:10" pos:end="21:15"><name pos:start="21:10" pos:end="21:15">RTCCON</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:13">value</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:29"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:29">reg_rtccon</name></name></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:16">case <expr pos:start="27:10" pos:end="27:15"><name pos:start="27:10" pos:end="27:15">TICCNT</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:13">value</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <name pos:start="29:17" pos:end="29:29"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:29">reg_ticcnt</name></name></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:16">case <expr pos:start="33:10" pos:end="33:15"><name pos:start="33:10" pos:end="33:15">RTCALM</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:30"><expr pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:13">value</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:29"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:29">reg_rtcalm</name></name></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:16">case <expr pos:start="39:10" pos:end="39:15"><name pos:start="39:10" pos:end="39:15">ALMSEC</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:13">value</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:29"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:29">reg_almsec</name></name></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:16">case <expr pos:start="45:10" pos:end="45:15"><name pos:start="45:10" pos:end="45:15">ALMMIN</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:30"><expr pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:13">value</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <name pos:start="47:17" pos:end="47:29"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:29">reg_almmin</name></name></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:17">case <expr pos:start="51:10" pos:end="51:16"><name pos:start="51:10" pos:end="51:16">ALMHOUR</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:31"><expr pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:13">value</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <name pos:start="53:17" pos:end="53:30"><name pos:start="53:17" pos:end="53:17">s</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:30">reg_almhour</name></name></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:16">case <expr pos:start="57:10" pos:end="57:15"><name pos:start="57:10" pos:end="57:15">ALMDAY</name></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:30"><expr pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:13">value</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <name pos:start="59:17" pos:end="59:29"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:29">reg_almday</name></name></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:16">case <expr pos:start="63:10" pos:end="63:15"><name pos:start="63:10" pos:end="63:15">ALMMON</name></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:13">value</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:29"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:29">reg_almmon</name></name></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:17">case <expr pos:start="69:10" pos:end="69:16"><name pos:start="69:10" pos:end="69:16">ALMYEAR</name></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:31"><expr pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:13">value</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <name pos:start="71:17" pos:end="71:30"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:30">reg_almyear</name></name></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>



    <case pos:start="77:5" pos:end="77:16">case <expr pos:start="77:10" pos:end="77:15"><name pos:start="77:10" pos:end="77:15">BCDSEC</name></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:64"><expr pos:start="79:9" pos:end="79:63"><name pos:start="79:9" pos:end="79:13">value</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <operator pos:start="79:17" pos:end="79:17">(</operator><name pos:start="79:18" pos:end="79:25">uint32_t</name><operator pos:start="79:26" pos:end="79:26">)</operator><call pos:start="79:27" pos:end="79:63"><name pos:start="79:27" pos:end="79:32">to_bcd</name><argument_list pos:start="79:33" pos:end="79:63">(<argument pos:start="79:34" pos:end="79:62"><expr pos:start="79:34" pos:end="79:62"><operator pos:start="79:34" pos:end="79:34">(</operator><name pos:start="79:35" pos:end="79:41">uint8_t</name><operator pos:start="79:42" pos:end="79:42">)</operator><name pos:start="79:43" pos:end="79:62"><name pos:start="79:43" pos:end="79:43">s</name><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:55">current_tm</name><operator pos:start="79:56" pos:end="79:56">.</operator><name pos:start="79:57" pos:end="79:62">tm_sec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    <case pos:start="83:5" pos:end="83:16">case <expr pos:start="83:10" pos:end="83:15"><name pos:start="83:10" pos:end="83:15">BCDMIN</name></expr>:</case>

        <expr_stmt pos:start="85:9" pos:end="85:64"><expr pos:start="85:9" pos:end="85:63"><name pos:start="85:9" pos:end="85:13">value</name> <operator pos:start="85:15" pos:end="85:15">=</operator> <operator pos:start="85:17" pos:end="85:17">(</operator><name pos:start="85:18" pos:end="85:25">uint32_t</name><operator pos:start="85:26" pos:end="85:26">)</operator><call pos:start="85:27" pos:end="85:63"><name pos:start="85:27" pos:end="85:32">to_bcd</name><argument_list pos:start="85:33" pos:end="85:63">(<argument pos:start="85:34" pos:end="85:62"><expr pos:start="85:34" pos:end="85:62"><operator pos:start="85:34" pos:end="85:34">(</operator><name pos:start="85:35" pos:end="85:41">uint8_t</name><operator pos:start="85:42" pos:end="85:42">)</operator><name pos:start="85:43" pos:end="85:62"><name pos:start="85:43" pos:end="85:43">s</name><operator pos:start="85:44" pos:end="85:45">-&gt;</operator><name pos:start="85:46" pos:end="85:55">current_tm</name><operator pos:start="85:56" pos:end="85:56">.</operator><name pos:start="85:57" pos:end="85:62">tm_min</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:17">case <expr pos:start="89:10" pos:end="89:16"><name pos:start="89:10" pos:end="89:16">BCDHOUR</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:65"><expr pos:start="91:9" pos:end="91:64"><name pos:start="91:9" pos:end="91:13">value</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <operator pos:start="91:17" pos:end="91:17">(</operator><name pos:start="91:18" pos:end="91:25">uint32_t</name><operator pos:start="91:26" pos:end="91:26">)</operator><call pos:start="91:27" pos:end="91:64"><name pos:start="91:27" pos:end="91:32">to_bcd</name><argument_list pos:start="91:33" pos:end="91:64">(<argument pos:start="91:34" pos:end="91:63"><expr pos:start="91:34" pos:end="91:63"><operator pos:start="91:34" pos:end="91:34">(</operator><name pos:start="91:35" pos:end="91:41">uint8_t</name><operator pos:start="91:42" pos:end="91:42">)</operator><name pos:start="91:43" pos:end="91:63"><name pos:start="91:43" pos:end="91:43">s</name><operator pos:start="91:44" pos:end="91:45">-&gt;</operator><name pos:start="91:46" pos:end="91:55">current_tm</name><operator pos:start="91:56" pos:end="91:56">.</operator><name pos:start="91:57" pos:end="91:63">tm_hour</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:20">case <expr pos:start="95:10" pos:end="95:19"><name pos:start="95:10" pos:end="95:19">BCDDAYWEEK</name></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:65"><expr pos:start="97:9" pos:end="97:64"><name pos:start="97:9" pos:end="97:13">value</name> <operator pos:start="97:15" pos:end="97:15">=</operator> <operator pos:start="97:17" pos:end="97:17">(</operator><name pos:start="97:18" pos:end="97:25">uint32_t</name><operator pos:start="97:26" pos:end="97:26">)</operator><call pos:start="97:27" pos:end="97:64"><name pos:start="97:27" pos:end="97:32">to_bcd</name><argument_list pos:start="97:33" pos:end="97:64">(<argument pos:start="97:34" pos:end="97:63"><expr pos:start="97:34" pos:end="97:63"><operator pos:start="97:34" pos:end="97:34">(</operator><name pos:start="97:35" pos:end="97:41">uint8_t</name><operator pos:start="97:42" pos:end="97:42">)</operator><name pos:start="97:43" pos:end="97:63"><name pos:start="97:43" pos:end="97:43">s</name><operator pos:start="97:44" pos:end="97:45">-&gt;</operator><name pos:start="97:46" pos:end="97:55">current_tm</name><operator pos:start="97:56" pos:end="97:56">.</operator><name pos:start="97:57" pos:end="97:63">tm_wday</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:16">case <expr pos:start="101:10" pos:end="101:15"><name pos:start="101:10" pos:end="101:15">BCDDAY</name></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:65"><expr pos:start="103:9" pos:end="103:64"><name pos:start="103:9" pos:end="103:13">value</name> <operator pos:start="103:15" pos:end="103:15">=</operator> <operator pos:start="103:17" pos:end="103:17">(</operator><name pos:start="103:18" pos:end="103:25">uint32_t</name><operator pos:start="103:26" pos:end="103:26">)</operator><call pos:start="103:27" pos:end="103:64"><name pos:start="103:27" pos:end="103:32">to_bcd</name><argument_list pos:start="103:33" pos:end="103:64">(<argument pos:start="103:34" pos:end="103:63"><expr pos:start="103:34" pos:end="103:63"><operator pos:start="103:34" pos:end="103:34">(</operator><name pos:start="103:35" pos:end="103:41">uint8_t</name><operator pos:start="103:42" pos:end="103:42">)</operator><name pos:start="103:43" pos:end="103:63"><name pos:start="103:43" pos:end="103:43">s</name><operator pos:start="103:44" pos:end="103:45">-&gt;</operator><name pos:start="103:46" pos:end="103:55">current_tm</name><operator pos:start="103:56" pos:end="103:56">.</operator><name pos:start="103:57" pos:end="103:63">tm_mday</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <case pos:start="107:5" pos:end="107:16">case <expr pos:start="107:10" pos:end="107:15"><name pos:start="107:10" pos:end="107:15">BCDMON</name></expr>:</case>

        <expr_stmt pos:start="109:9" pos:end="109:68"><expr pos:start="109:9" pos:end="109:67"><name pos:start="109:9" pos:end="109:13">value</name> <operator pos:start="109:15" pos:end="109:15">=</operator> <operator pos:start="109:17" pos:end="109:17">(</operator><name pos:start="109:18" pos:end="109:25">uint32_t</name><operator pos:start="109:26" pos:end="109:26">)</operator><call pos:start="109:27" pos:end="109:67"><name pos:start="109:27" pos:end="109:32">to_bcd</name><argument_list pos:start="109:33" pos:end="109:67">(<argument pos:start="109:34" pos:end="109:66"><expr pos:start="109:34" pos:end="109:66"><operator pos:start="109:34" pos:end="109:34">(</operator><name pos:start="109:35" pos:end="109:41">uint8_t</name><operator pos:start="109:42" pos:end="109:42">)</operator><name pos:start="109:43" pos:end="109:62"><name pos:start="109:43" pos:end="109:43">s</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:55">current_tm</name><operator pos:start="109:56" pos:end="109:56">.</operator><name pos:start="109:57" pos:end="109:62">tm_mon</name></name> <operator pos:start="109:64" pos:end="109:64">+</operator> <literal type="number" pos:start="109:66" pos:end="109:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="111:9" pos:end="111:14">break;</break>

    <case pos:start="113:5" pos:end="113:17">case <expr pos:start="113:10" pos:end="113:16"><name pos:start="113:10" pos:end="113:16">BCDYEAR</name></expr>:</case>

        <expr_stmt pos:start="115:9" pos:end="115:50"><expr pos:start="115:9" pos:end="115:49"><name pos:start="115:9" pos:end="115:13">value</name> <operator pos:start="115:15" pos:end="115:15">=</operator> <call pos:start="115:17" pos:end="115:49"><name pos:start="115:17" pos:end="115:26">BCD3DIGITS</name><argument_list pos:start="115:27" pos:end="115:49">(<argument pos:start="115:28" pos:end="115:48"><expr pos:start="115:28" pos:end="115:48"><name pos:start="115:28" pos:end="115:48"><name pos:start="115:28" pos:end="115:28">s</name><operator pos:start="115:29" pos:end="115:30">-&gt;</operator><name pos:start="115:31" pos:end="115:40">current_tm</name><operator pos:start="115:41" pos:end="115:41">.</operator><name pos:start="115:42" pos:end="115:48">tm_year</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="117:9" pos:end="117:14">break;</break>



    <case pos:start="121:5" pos:end="121:18">case <expr pos:start="121:10" pos:end="121:17"><name pos:start="121:10" pos:end="121:17">CURTICNT</name></expr>:</case>

        <expr_stmt pos:start="123:9" pos:end="123:55"><expr pos:start="123:9" pos:end="123:54"><name pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:24">reg_curticcnt</name></name> <operator pos:start="123:26" pos:end="123:26">=</operator> <call pos:start="123:28" pos:end="123:54"><name pos:start="123:28" pos:end="123:43">ptimer_get_count</name><argument_list pos:start="123:44" pos:end="123:54">(<argument pos:start="123:45" pos:end="123:53"><expr pos:start="123:45" pos:end="123:53"><name pos:start="123:45" pos:end="123:53"><name pos:start="123:45" pos:end="123:45">s</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:53">ptimer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:33"><expr pos:start="125:9" pos:end="125:32"><name pos:start="125:9" pos:end="125:13">value</name> <operator pos:start="125:15" pos:end="125:15">=</operator> <name pos:start="125:17" pos:end="125:32"><name pos:start="125:17" pos:end="125:17">s</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:32">reg_curticcnt</name></name></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>



    <default pos:start="131:5" pos:end="131:12">default:</default>

        <expr_stmt pos:start="133:9" pos:end="137:24"><expr pos:start="133:9" pos:end="137:23"><call pos:start="133:9" pos:end="137:23"><name pos:start="133:9" pos:end="133:15">fprintf</name><argument_list pos:start="133:16" pos:end="137:23">(<argument pos:start="133:17" pos:end="133:22"><expr pos:start="133:17" pos:end="133:22"><name pos:start="133:17" pos:end="133:22">stderr</name></expr></argument>,

                <argument pos:start="135:17" pos:end="135:72"><expr pos:start="135:17" pos:end="135:72"><literal type="string" pos:start="135:17" pos:end="135:51">"[exynos4210.rtc: bad read offset "</literal> <name pos:start="135:53" pos:end="135:66">TARGET_FMT_plx</name> <literal type="string" pos:start="135:68" pos:end="135:72">"]\n"</literal></expr></argument>,

                <argument pos:start="137:17" pos:end="137:22"><expr pos:start="137:17" pos:end="137:22"><name pos:start="137:17" pos:end="137:22">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="143:5" pos:end="143:17">return <expr pos:start="143:12" pos:end="143:16"><name pos:start="143:12" pos:end="143:16">value</name></expr>;</return>

</block_content>}</block></function>
</unit>
