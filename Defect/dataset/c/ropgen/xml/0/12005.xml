<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12005.c" pos:tabs="8"><function pos:start="1:1" pos:end="383:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_seek</name><parameter_list pos:start="1:25" pos:end="1:94">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:61">stream_index</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:82"><decl pos:start="1:64" pos:end="1:82"><type pos:start="1:64" pos:end="1:82"><name pos:start="1:64" pos:end="1:70">int64_t</name></type> <name pos:start="1:72" pos:end="1:82">sample_time</name></decl></parameter>, <parameter pos:start="1:85" pos:end="1:93"><decl pos:start="1:85" pos:end="1:93"><type pos:start="1:85" pos:end="1:93"><name pos:start="1:85" pos:end="1:87">int</name></type> <name pos:start="1:89" pos:end="1:93">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="383:1">{<block_content pos:start="5:5" pos:end="381:13">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:14">MOVContext</name><modifier pos:start="5:15" pos:end="5:15">*</modifier></type> <name pos:start="5:17" pos:end="5:19">mov</name> <init pos:start="5:21" pos:end="5:49">= <expr pos:start="5:23" pos:end="5:49"><operator pos:start="5:23" pos:end="5:23">(</operator><name pos:start="5:24" pos:end="5:33">MOVContext</name> <operator pos:start="5:35" pos:end="5:35">*</operator><operator pos:start="5:36" pos:end="5:36">)</operator> <name pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:38">s</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name><modifier pos:start="7:21" pos:end="7:21">*</modifier></type> <name pos:start="7:23" pos:end="7:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int32_t</name></type> <name pos:start="9:13" pos:end="9:13">i</name></decl>, <decl pos:start="9:16" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:16" pos:end="9:16">a</name></decl>, <decl pos:start="9:19" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:19" pos:end="9:19">b</name></decl>, <decl pos:start="9:22" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:22" pos:end="9:22">m</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:22">start_time</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int32_t</name></type> <name pos:start="13:13" pos:end="13:23">seek_sample</name></decl>, <decl pos:start="13:26" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:26" pos:end="13:31">sample</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int32_t</name></type> <name pos:start="15:13" pos:end="15:20">duration</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int32_t</name></type> <name pos:start="17:13" pos:end="17:17">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int32_t</name></type> <name pos:start="19:13" pos:end="19:17">chunk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int32_t</name></type> <name pos:start="21:13" pos:end="21:25">left_in_chunk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:30"><decl pos:start="23:5" pos:end="23:29"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">int64_t</name></type> <name pos:start="23:13" pos:end="23:29">chunk_file_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:31"><decl pos:start="25:5" pos:end="25:30"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">int64_t</name></type> <name pos:start="25:13" pos:end="25:30">sample_file_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:31"><decl pos:start="27:5" pos:end="27:30"><type pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:11">int32_t</name></type> <name pos:start="27:13" pos:end="27:30">first_chunk_sample</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:32"><decl pos:start="29:5" pos:end="29:31"><type pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:11">int32_t</name></type> <name pos:start="29:13" pos:end="29:31">sample_to_chunk_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:29"><decl pos:start="31:5" pos:end="31:28"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:28">sample_to_time_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:35"><decl pos:start="33:5" pos:end="33:34"><type pos:start="33:5" pos:end="33:8"><name pos:start="33:5" pos:end="33:8">long</name></type> <name pos:start="33:10" pos:end="33:30">sample_to_time_sample</name> <init pos:start="33:32" pos:end="33:34">= <expr pos:start="33:34" pos:end="33:34"><literal type="number" pos:start="33:34" pos:end="33:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:37"><decl pos:start="35:5" pos:end="35:36"><type pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:12">uint64_t</name></type> <name pos:start="35:14" pos:end="35:32">sample_to_time_time</name> <init pos:start="35:34" pos:end="35:36">= <expr pos:start="35:36" pos:end="35:36"><literal type="number" pos:start="35:36" pos:end="35:36">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:16"><decl pos:start="37:5" pos:end="37:15"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:15">mov_idx</name></decl>;</decl_stmt>



    <comment type="line" pos:start="41:5" pos:end="41:40">// Find the corresponding mov stream</comment>

    <for pos:start="43:5" pos:end="47:18">for <control pos:start="43:9" pos:end="43:62">(<init pos:start="43:10" pos:end="43:21"><expr pos:start="43:10" pos:end="43:20"><name pos:start="43:10" pos:end="43:16">mov_idx</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <literal type="number" pos:start="43:20" pos:end="43:20">0</literal></expr>;</init> <condition pos:start="43:23" pos:end="43:51"><expr pos:start="43:23" pos:end="43:50"><name pos:start="43:23" pos:end="43:29">mov_idx</name> <operator pos:start="43:31" pos:end="43:31">&lt;</operator> <name pos:start="43:33" pos:end="43:50"><name pos:start="43:33" pos:end="43:35">mov</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:50">total_streams</name></name></expr>;</condition> <incr pos:start="43:53" pos:end="43:61"><expr pos:start="43:53" pos:end="43:61"><name pos:start="43:53" pos:end="43:59">mov_idx</name><operator pos:start="43:60" pos:end="43:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:9" pos:end="47:18"><block_content pos:start="45:9" pos:end="47:18">

        <if_stmt pos:start="45:9" pos:end="47:18"><if pos:start="45:9" pos:end="47:18">if <condition pos:start="45:12" pos:end="45:59">(<expr pos:start="45:13" pos:end="45:58"><name pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:15">mov</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:24">streams</name><index pos:start="45:25" pos:end="45:33">[<expr pos:start="45:26" pos:end="45:32"><name pos:start="45:26" pos:end="45:32">mov_idx</name></expr>]</index></name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:42">ffindex</name> <operator pos:start="45:44" pos:end="45:45">==</operator> <name pos:start="45:47" pos:end="45:58">stream_index</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:18"><block_content pos:start="47:13" pos:end="47:18">

            <break pos:start="47:13" pos:end="47:18">break;</break></block_content></block></if></if_stmt></block_content></block></for>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:38">(<expr pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:15">mov_idx</name> <operator pos:start="49:17" pos:end="49:18">==</operator> <name pos:start="49:20" pos:end="49:37"><name pos:start="49:20" pos:end="49:22">mov</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:37">total_streams</name></name></expr>)</condition> <block pos:start="49:40" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:18">

        <expr_stmt pos:start="51:9" pos:end="51:111"><expr pos:start="51:9" pos:end="51:110"><call pos:start="51:9" pos:end="51:110"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:110">(<argument pos:start="51:16" pos:end="51:16"><expr pos:start="51:16" pos:end="51:16"><name pos:start="51:16" pos:end="51:16">s</name></expr></argument>, <argument pos:start="51:19" pos:end="51:30"><expr pos:start="51:19" pos:end="51:30"><name pos:start="51:19" pos:end="51:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:33" pos:end="51:95"><expr pos:start="51:33" pos:end="51:95"><literal type="string" pos:start="51:33" pos:end="51:95">"mov: requested stream was not found in mov streams (idx=%i)\n"</literal></expr></argument>, <argument pos:start="51:98" pos:end="51:109"><expr pos:start="51:98" pos:end="51:109"><name pos:start="51:98" pos:end="51:109">stream_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:31"><expr pos:start="57:5" pos:end="57:30"><name pos:start="57:5" pos:end="57:6">sc</name> <operator pos:start="57:8" pos:end="57:8">=</operator> <name pos:start="57:10" pos:end="57:30"><name pos:start="57:10" pos:end="57:12">mov</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:21">streams</name><index pos:start="57:22" pos:end="57:30">[<expr pos:start="57:23" pos:end="57:29"><name pos:start="57:23" pos:end="57:29">mov_idx</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:59"><expr pos:start="61:5" pos:end="61:58"><name pos:start="61:5" pos:end="61:15">sample_time</name> <operator pos:start="61:17" pos:end="61:18">*=</operator> <name pos:start="61:20" pos:end="61:43"><name pos:start="61:20" pos:end="61:20">s</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:29">streams</name><index pos:start="61:30" pos:end="61:43">[<expr pos:start="61:31" pos:end="61:42"><name pos:start="61:31" pos:end="61:42">stream_index</name></expr>]</index></name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:58"><name pos:start="61:46" pos:end="61:54">time_base</name><operator pos:start="61:55" pos:end="61:55">.</operator><name pos:start="61:56" pos:end="61:58">num</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="65:5" pos:end="65:68">// Step 1. Find the edit that contains the requested time (elst)</comment>

    <if_stmt pos:start="67:5" pos:end="75:5"><if pos:start="67:5" pos:end="75:5">if <condition pos:start="67:8" pos:end="67:28">(<expr pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:10">sc</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:22">edit_count</name></name> <operator pos:start="67:24" pos:end="67:25">&amp;&amp;</operator> <literal type="number" pos:start="67:27" pos:end="67:27">0</literal></expr>)</condition> <block pos:start="67:30" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:18">

        <comment type="line" pos:start="69:9" pos:end="69:40">// FIXME should handle edit list</comment>

        <expr_stmt pos:start="71:9" pos:end="71:121"><expr pos:start="71:9" pos:end="71:120"><call pos:start="71:9" pos:end="71:120"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:120">(<argument pos:start="71:16" pos:end="71:16"><expr pos:start="71:16" pos:end="71:16"><name pos:start="71:16" pos:end="71:16">s</name></expr></argument>, <argument pos:start="71:19" pos:end="71:30"><expr pos:start="71:19" pos:end="71:30"><name pos:start="71:19" pos:end="71:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:33" pos:end="71:103"><expr pos:start="71:33" pos:end="71:103"><literal type="string" pos:start="71:33" pos:end="71:103">"mov: does not handle seeking in files that contain edit list (c:%d)\n"</literal></expr></argument>, <argument pos:start="71:106" pos:end="71:119"><expr pos:start="71:106" pos:end="71:119"><name pos:start="71:106" pos:end="71:119"><name pos:start="71:106" pos:end="71:107">sc</name><operator pos:start="71:108" pos:end="71:109">-&gt;</operator><name pos:start="71:110" pos:end="71:119">edit_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:18">return <expr pos:start="73:16" pos:end="73:17"><operator pos:start="73:16" pos:end="73:16">-</operator><literal type="number" pos:start="73:17" pos:end="73:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="79:5" pos:end="79:84">// Step 2. Find the corresponding sample using the Time-to-sample atom (stts) */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:114"><expr pos:start="81:5" pos:end="81:113"><call pos:start="81:5" pos:end="81:113"><name pos:start="81:5" pos:end="81:11">dprintf</name><argument_list pos:start="81:12" pos:end="81:113">(<argument pos:start="81:13" pos:end="81:68"><expr pos:start="81:13" pos:end="81:68"><literal type="string" pos:start="81:13" pos:end="81:68">"Searching for time %li in stream #%i (time_scale=%i)\n"</literal></expr></argument>, <argument pos:start="81:71" pos:end="81:87"><expr pos:start="81:71" pos:end="81:87"><operator pos:start="81:71" pos:end="81:71">(</operator><name pos:start="81:72" pos:end="81:75">long</name><operator pos:start="81:76" pos:end="81:76">)</operator><name pos:start="81:77" pos:end="81:87">sample_time</name></expr></argument>, <argument pos:start="81:90" pos:end="81:96"><expr pos:start="81:90" pos:end="81:96"><name pos:start="81:90" pos:end="81:96">mov_idx</name></expr></argument>, <argument pos:start="81:99" pos:end="81:112"><expr pos:start="81:99" pos:end="81:112"><name pos:start="81:99" pos:end="81:112"><name pos:start="81:99" pos:end="81:100">sc</name><operator pos:start="81:101" pos:end="81:102">-&gt;</operator><name pos:start="81:103" pos:end="81:112">time_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:19"><expr pos:start="83:5" pos:end="83:18"><name pos:start="83:5" pos:end="83:14">start_time</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="83:21" pos:end="83:42">// FIXME use elst atom</comment>

    <expr_stmt pos:start="85:5" pos:end="85:15"><expr pos:start="85:5" pos:end="85:14"><name pos:start="85:5" pos:end="85:10">sample</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <literal type="number" pos:start="85:14" pos:end="85:14">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="85:17" pos:end="85:46">// sample are 0 based in table</comment>



    <for pos:start="89:5" pos:end="113:5">for <control pos:start="89:9" pos:end="89:40">(<init pos:start="89:10" pos:end="89:15"><expr pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:10">i</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <literal type="number" pos:start="89:14" pos:end="89:14">0</literal></expr>;</init> <condition pos:start="89:17" pos:end="89:35"><expr pos:start="89:17" pos:end="89:34"><name pos:start="89:17" pos:end="89:17">i</name> <operator pos:start="89:19" pos:end="89:19">&lt;</operator> <name pos:start="89:21" pos:end="89:34"><name pos:start="89:21" pos:end="89:22">sc</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:34">stts_count</name></name></expr>;</condition> <incr pos:start="89:37" pos:end="89:39"><expr pos:start="89:37" pos:end="89:39"><name pos:start="89:37" pos:end="89:37">i</name><operator pos:start="89:38" pos:end="89:39">++</operator></expr></incr>)</control> <block pos:start="89:42" pos:end="113:5">{<block_content pos:start="91:9" pos:end="111:39">

        <expr_stmt pos:start="91:9" pos:end="91:39"><expr pos:start="91:9" pos:end="91:38"><name pos:start="91:9" pos:end="91:13">count</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <name pos:start="91:17" pos:end="91:32"><name pos:start="91:17" pos:end="91:18">sc</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:29">stts_data</name><index pos:start="91:30" pos:end="91:32">[<expr pos:start="91:31" pos:end="91:31"><name pos:start="91:31" pos:end="91:31">i</name></expr>]</index></name><operator pos:start="91:33" pos:end="91:33">.</operator><name pos:start="91:34" pos:end="91:38">count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:45"><expr pos:start="93:9" pos:end="93:44"><name pos:start="93:9" pos:end="93:16">duration</name> <operator pos:start="93:18" pos:end="93:18">=</operator> <name pos:start="93:20" pos:end="93:35"><name pos:start="93:20" pos:end="93:21">sc</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:32">stts_data</name><index pos:start="93:33" pos:end="93:35">[<expr pos:start="93:34" pos:end="93:34"><name pos:start="93:34" pos:end="93:34">i</name></expr>]</index></name><operator pos:start="93:36" pos:end="93:36">.</operator><name pos:start="93:37" pos:end="93:44">duration</name></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="107:9"><if pos:start="95:9" pos:end="107:9">if <condition pos:start="95:12" pos:end="95:56">(<expr pos:start="95:13" pos:end="95:55"><operator pos:start="95:13" pos:end="95:13">(</operator><name pos:start="95:14" pos:end="95:23">start_time</name> <operator pos:start="95:25" pos:end="95:25">+</operator> <name pos:start="95:27" pos:end="95:31">count</name><operator pos:start="95:32" pos:end="95:32">*</operator><name pos:start="95:33" pos:end="95:40">duration</name><operator pos:start="95:41" pos:end="95:41">)</operator> <operator pos:start="95:43" pos:end="95:43">&gt;</operator> <name pos:start="95:45" pos:end="95:55">sample_time</name></expr>)</condition> <block pos:start="95:58" pos:end="107:9">{<block_content pos:start="97:13" pos:end="105:18">

            <expr_stmt pos:start="97:13" pos:end="97:45"><expr pos:start="97:13" pos:end="97:44"><name pos:start="97:13" pos:end="97:31">sample_to_time_time</name> <operator pos:start="97:33" pos:end="97:33">=</operator> <name pos:start="97:35" pos:end="97:44">start_time</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:37"><expr pos:start="99:13" pos:end="99:36"><name pos:start="99:13" pos:end="99:32">sample_to_time_index</name> <operator pos:start="99:34" pos:end="99:34">=</operator> <name pos:start="99:36" pos:end="99:36">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:43"><expr pos:start="101:13" pos:end="101:42"><name pos:start="101:13" pos:end="101:33">sample_to_time_sample</name> <operator pos:start="101:35" pos:end="101:35">=</operator> <name pos:start="101:37" pos:end="101:42">sample</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:60"><expr pos:start="103:13" pos:end="103:59"><name pos:start="103:13" pos:end="103:18">sample</name> <operator pos:start="103:20" pos:end="103:21">+=</operator> <operator pos:start="103:23" pos:end="103:23">(</operator><name pos:start="103:24" pos:end="103:34">sample_time</name> <operator pos:start="103:36" pos:end="103:36">-</operator> <name pos:start="103:38" pos:end="103:47">start_time</name><operator pos:start="103:48" pos:end="103:48">)</operator> <operator pos:start="103:50" pos:end="103:50">/</operator> <name pos:start="103:52" pos:end="103:59">duration</name></expr>;</expr_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:24"><expr pos:start="109:9" pos:end="109:23"><name pos:start="109:9" pos:end="109:14">sample</name> <operator pos:start="109:16" pos:end="109:17">+=</operator> <name pos:start="109:19" pos:end="109:23">count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:39"><expr pos:start="111:9" pos:end="111:38"><name pos:start="111:9" pos:end="111:18">start_time</name> <operator pos:start="111:20" pos:end="111:21">+=</operator> <name pos:start="111:23" pos:end="111:27">count</name> <operator pos:start="111:29" pos:end="111:29">*</operator> <name pos:start="111:31" pos:end="111:38">duration</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="115:5" pos:end="115:37"><expr pos:start="115:5" pos:end="115:36"><name pos:start="115:5" pos:end="115:23">sample_to_time_time</name> <operator pos:start="115:25" pos:end="115:25">=</operator> <name pos:start="115:27" pos:end="115:36">start_time</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:29"><expr pos:start="117:5" pos:end="117:28"><name pos:start="117:5" pos:end="117:24">sample_to_time_index</name> <operator pos:start="117:26" pos:end="117:26">=</operator> <name pos:start="117:28" pos:end="117:28">i</name></expr>;</expr_stmt>

    <comment type="block" pos:start="119:5" pos:end="121:120">/* NOTE: despite what qt doc say, the dt value (Display Time in qt vocabulary) computed with the stts atom

       is a decoding time stamp (dts) not a presentation time stamp. And as usual dts != pts for stream with b frames */</comment>



    <expr_stmt pos:start="125:5" pos:end="125:73"><expr pos:start="125:5" pos:end="125:72"><call pos:start="125:5" pos:end="125:72"><name pos:start="125:5" pos:end="125:11">dprintf</name><argument_list pos:start="125:12" pos:end="125:72">(<argument pos:start="125:13" pos:end="125:44"><expr pos:start="125:13" pos:end="125:44"><literal type="string" pos:start="125:13" pos:end="125:44">"Found time %li at sample #%u\n"</literal></expr></argument>, <argument pos:start="125:47" pos:end="125:63"><expr pos:start="125:47" pos:end="125:63"><operator pos:start="125:47" pos:end="125:47">(</operator><name pos:start="125:48" pos:end="125:51">long</name><operator pos:start="125:52" pos:end="125:52">)</operator><name pos:start="125:53" pos:end="125:63">sample_time</name></expr></argument>, <argument pos:start="125:66" pos:end="125:71"><expr pos:start="125:66" pos:end="125:71"><name pos:start="125:66" pos:end="125:71">sample</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="127:5" pos:end="133:5"><if pos:start="127:5" pos:end="133:5">if <condition pos:start="127:8" pos:end="127:34">(<expr pos:start="127:9" pos:end="127:33"><name pos:start="127:9" pos:end="127:14">sample</name> <operator pos:start="127:16" pos:end="127:16">&gt;</operator> <name pos:start="127:18" pos:end="127:33"><name pos:start="127:18" pos:end="127:19">sc</name><operator pos:start="127:20" pos:end="127:21">-&gt;</operator><name pos:start="127:22" pos:end="127:33">sample_count</name></name></expr>)</condition> <block pos:start="127:36" pos:end="133:5">{<block_content pos:start="129:9" pos:end="131:18">

        <expr_stmt pos:start="129:9" pos:end="129:142"><expr pos:start="129:9" pos:end="129:141"><call pos:start="129:9" pos:end="129:141"><name pos:start="129:9" pos:end="129:14">av_log</name><argument_list pos:start="129:15" pos:end="129:141">(<argument pos:start="129:16" pos:end="129:16"><expr pos:start="129:16" pos:end="129:16"><name pos:start="129:16" pos:end="129:16">s</name></expr></argument>, <argument pos:start="129:19" pos:end="129:30"><expr pos:start="129:19" pos:end="129:30"><name pos:start="129:19" pos:end="129:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:33" pos:end="129:114"><expr pos:start="129:33" pos:end="129:114"><literal type="string" pos:start="129:33" pos:end="129:114">"mov: sample pos is too high, unable to seek (req. sample=%i, sample count=%ld)\n"</literal></expr></argument>, <argument pos:start="129:117" pos:end="129:122"><expr pos:start="129:117" pos:end="129:122"><name pos:start="129:117" pos:end="129:122">sample</name></expr></argument>, <argument pos:start="129:125" pos:end="129:140"><expr pos:start="129:125" pos:end="129:140"><name pos:start="129:125" pos:end="129:140"><name pos:start="129:125" pos:end="129:126">sc</name><operator pos:start="129:127" pos:end="129:128">-&gt;</operator><name pos:start="129:129" pos:end="129:140">sample_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:18">return <expr pos:start="131:16" pos:end="131:17"><operator pos:start="131:16" pos:end="131:16">-</operator><literal type="number" pos:start="131:17" pos:end="131:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="137:5" pos:end="137:76">// Step 3. Find the prior sync. sample using the Sync sample atom (stss)</comment>

    <if_stmt pos:start="139:5" pos:end="171:29"><if pos:start="139:5" pos:end="167:5">if <condition pos:start="139:8" pos:end="139:22">(<expr pos:start="139:9" pos:end="139:21"><name pos:start="139:9" pos:end="139:21"><name pos:start="139:9" pos:end="139:10">sc</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:21">keyframes</name></name></expr>)</condition> <block pos:start="139:24" pos:end="167:5">{<block_content pos:start="141:9" pos:end="165:39">

        <expr_stmt pos:start="141:9" pos:end="141:14"><expr pos:start="141:9" pos:end="141:13"><name pos:start="141:9" pos:end="141:9">a</name> <operator pos:start="141:11" pos:end="141:11">=</operator> <literal type="number" pos:start="141:13" pos:end="141:13">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:35"><expr pos:start="143:9" pos:end="143:34"><name pos:start="143:9" pos:end="143:9">b</name> <operator pos:start="143:11" pos:end="143:11">=</operator> <name pos:start="143:13" pos:end="143:30"><name pos:start="143:13" pos:end="143:14">sc</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:30">keyframe_count</name></name> <operator pos:start="143:32" pos:end="143:32">-</operator> <literal type="number" pos:start="143:34" pos:end="143:34">1</literal></expr>;</expr_stmt>

        <while pos:start="145:9" pos:end="159:9">while <condition pos:start="145:15" pos:end="145:21">(<expr pos:start="145:16" pos:end="145:20"><name pos:start="145:16" pos:end="145:16">a</name> <operator pos:start="145:18" pos:end="145:18">&lt;</operator> <name pos:start="145:20" pos:end="145:20">b</name></expr>)</condition> <block pos:start="145:23" pos:end="159:9">{<block_content pos:start="147:13" pos:end="157:13">

            <expr_stmt pos:start="147:13" pos:end="147:33"><expr pos:start="147:13" pos:end="147:32"><name pos:start="147:13" pos:end="147:13">m</name> <operator pos:start="147:15" pos:end="147:15">=</operator> <operator pos:start="147:17" pos:end="147:17">(</operator><name pos:start="147:18" pos:end="147:18">a</name> <operator pos:start="147:20" pos:end="147:20">+</operator> <name pos:start="147:22" pos:end="147:22">b</name> <operator pos:start="147:24" pos:end="147:24">+</operator> <literal type="number" pos:start="147:26" pos:end="147:26">1</literal><operator pos:start="147:27" pos:end="147:27">)</operator> <operator pos:start="147:29" pos:end="147:30">&gt;&gt;</operator> <literal type="number" pos:start="147:32" pos:end="147:32">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="149:13" pos:end="157:13"><if pos:start="149:13" pos:end="153:13">if <condition pos:start="149:16" pos:end="149:42">(<expr pos:start="149:17" pos:end="149:41"><name pos:start="149:17" pos:end="149:32"><name pos:start="149:17" pos:end="149:18">sc</name><operator pos:start="149:19" pos:end="149:20">-&gt;</operator><name pos:start="149:21" pos:end="149:29">keyframes</name><index pos:start="149:30" pos:end="149:32">[<expr pos:start="149:31" pos:end="149:31"><name pos:start="149:31" pos:end="149:31">m</name></expr>]</index></name> <operator pos:start="149:34" pos:end="149:34">&gt;</operator> <name pos:start="149:36" pos:end="149:41">sample</name></expr>)</condition> <block pos:start="149:44" pos:end="153:13">{<block_content pos:start="151:17" pos:end="151:26">

                <expr_stmt pos:start="151:17" pos:end="151:26"><expr pos:start="151:17" pos:end="151:25"><name pos:start="151:17" pos:end="151:17">b</name> <operator pos:start="151:19" pos:end="151:19">=</operator> <name pos:start="151:21" pos:end="151:21">m</name> <operator pos:start="151:23" pos:end="151:23">-</operator> <literal type="number" pos:start="151:25" pos:end="151:25">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="153:15" pos:end="157:13">else <block pos:start="153:20" pos:end="157:13">{<block_content pos:start="155:17" pos:end="155:22">

                <expr_stmt pos:start="155:17" pos:end="155:22"><expr pos:start="155:17" pos:end="155:21"><name pos:start="155:17" pos:end="155:17">a</name> <operator pos:start="155:19" pos:end="155:19">=</operator> <name pos:start="155:21" pos:end="155:21">m</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

        <comment type="line" pos:start="161:9" pos:end="161:95">// for low latency prob: always use the previous keyframe, just uncomment the next line</comment>

        <comment type="line" pos:start="163:9" pos:end="163:22">// if (a) a--;</comment>

        <expr_stmt pos:start="165:9" pos:end="165:39"><expr pos:start="165:9" pos:end="165:38"><name pos:start="165:9" pos:end="165:19">seek_sample</name> <operator pos:start="165:21" pos:end="165:21">=</operator> <name pos:start="165:23" pos:end="165:38"><name pos:start="165:23" pos:end="165:24">sc</name><operator pos:start="165:25" pos:end="165:26">-&gt;</operator><name pos:start="165:27" pos:end="165:35">keyframes</name><index pos:start="165:36" pos:end="165:38">[<expr pos:start="165:37" pos:end="165:37"><name pos:start="165:37" pos:end="165:37">a</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="169:5" pos:end="171:29">else<block type="pseudo" pos:start="171:9" pos:end="171:29"><block_content pos:start="171:9" pos:end="171:29">

        <expr_stmt pos:start="171:9" pos:end="171:29"><expr pos:start="171:9" pos:end="171:28"><name pos:start="171:9" pos:end="171:19">seek_sample</name> <operator pos:start="171:21" pos:end="171:21">=</operator> <name pos:start="171:23" pos:end="171:28">sample</name></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="171:31" pos:end="171:64">// else all samples are key frames</comment>

    <expr_stmt pos:start="173:5" pos:end="173:68"><expr pos:start="173:5" pos:end="173:67"><call pos:start="173:5" pos:end="173:67"><name pos:start="173:5" pos:end="173:11">dprintf</name><argument_list pos:start="173:12" pos:end="173:67">(<argument pos:start="173:13" pos:end="173:53"><expr pos:start="173:13" pos:end="173:53"><literal type="string" pos:start="173:13" pos:end="173:53">"Found nearest keyframe at sample #%i \n"</literal></expr></argument>, <argument pos:start="173:56" pos:end="173:66"><expr pos:start="173:56" pos:end="173:66"><name pos:start="173:56" pos:end="173:66">seek_sample</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="177:5" pos:end="177:81">// Step 4. Find the chunk of the sample using the Sample-to-chunk-atom (stsc)</comment>

    <for pos:start="179:5" pos:end="189:5">for <control pos:start="179:9" pos:end="179:78">(<init pos:start="179:10" pos:end="179:39"><expr pos:start="179:10" pos:end="179:31"><name pos:start="179:10" pos:end="179:27">first_chunk_sample</name> <operator pos:start="179:29" pos:end="179:29">=</operator> <literal type="number" pos:start="179:31" pos:end="179:31">1</literal></expr><operator pos:start="179:32" pos:end="179:32">,</operator> <expr pos:start="179:34" pos:end="179:38"><name pos:start="179:34" pos:end="179:34">i</name> <operator pos:start="179:36" pos:end="179:36">=</operator> <literal type="number" pos:start="179:38" pos:end="179:38">0</literal></expr>;</init> <condition pos:start="179:41" pos:end="179:73"><expr pos:start="179:41" pos:end="179:72"><name pos:start="179:41" pos:end="179:41">i</name> <operator pos:start="179:43" pos:end="179:43">&lt;</operator> <operator pos:start="179:45" pos:end="179:45">(</operator><name pos:start="179:46" pos:end="179:67"><name pos:start="179:46" pos:end="179:47">sc</name><operator pos:start="179:48" pos:end="179:49">-&gt;</operator><name pos:start="179:50" pos:end="179:67">sample_to_chunk_sz</name></name> <operator pos:start="179:69" pos:end="179:69">-</operator> <literal type="number" pos:start="179:71" pos:end="179:71">1</literal><operator pos:start="179:72" pos:end="179:72">)</operator></expr>;</condition> <incr pos:start="179:75" pos:end="179:77"><expr pos:start="179:75" pos:end="179:77"><name pos:start="179:75" pos:end="179:75">i</name><operator pos:start="179:76" pos:end="179:77">++</operator></expr></incr>)</control> <block pos:start="179:80" pos:end="189:5">{<block_content pos:start="181:9" pos:end="187:32">

        <expr_stmt pos:start="181:9" pos:end="181:109"><expr pos:start="181:9" pos:end="181:108"><name pos:start="181:9" pos:end="181:9">b</name> <operator pos:start="181:11" pos:end="181:11">=</operator> <operator pos:start="181:13" pos:end="181:13">(</operator><name pos:start="181:14" pos:end="181:39"><name pos:start="181:14" pos:end="181:15">sc</name><operator pos:start="181:16" pos:end="181:17">-&gt;</operator><name pos:start="181:18" pos:end="181:32">sample_to_chunk</name><index pos:start="181:33" pos:end="181:39">[<expr pos:start="181:34" pos:end="181:38"><name pos:start="181:34" pos:end="181:34">i</name> <operator pos:start="181:36" pos:end="181:36">+</operator> <literal type="number" pos:start="181:38" pos:end="181:38">1</literal></expr>]</index></name><operator pos:start="181:40" pos:end="181:40">.</operator><name pos:start="181:41" pos:end="181:45">first</name> <operator pos:start="181:47" pos:end="181:47">-</operator> <name pos:start="181:49" pos:end="181:70"><name pos:start="181:49" pos:end="181:50">sc</name><operator pos:start="181:51" pos:end="181:52">-&gt;</operator><name pos:start="181:53" pos:end="181:67">sample_to_chunk</name><index pos:start="181:68" pos:end="181:70">[<expr pos:start="181:69" pos:end="181:69"><name pos:start="181:69" pos:end="181:69">i</name></expr>]</index></name><operator pos:start="181:71" pos:end="181:71">.</operator><name pos:start="181:72" pos:end="181:76">first</name><operator pos:start="181:77" pos:end="181:77">)</operator> <operator pos:start="181:79" pos:end="181:79">*</operator> <name pos:start="181:81" pos:end="181:102"><name pos:start="181:81" pos:end="181:82">sc</name><operator pos:start="181:83" pos:end="181:84">-&gt;</operator><name pos:start="181:85" pos:end="181:99">sample_to_chunk</name><index pos:start="181:100" pos:end="181:102">[<expr pos:start="181:101" pos:end="181:101"><name pos:start="181:101" pos:end="181:101">i</name></expr>]</index></name><operator pos:start="181:103" pos:end="181:103">.</operator><name pos:start="181:104" pos:end="181:108">count</name></expr>;</expr_stmt>

        <if_stmt pos:start="183:9" pos:end="185:18"><if pos:start="183:9" pos:end="185:18">if <condition pos:start="183:12" pos:end="183:88">(<expr pos:start="183:13" pos:end="183:87"><name pos:start="183:13" pos:end="183:23">seek_sample</name> <operator pos:start="183:25" pos:end="183:26">&gt;=</operator> <name pos:start="183:28" pos:end="183:45">first_chunk_sample</name> <operator pos:start="183:47" pos:end="183:48">&amp;&amp;</operator> <name pos:start="183:50" pos:end="183:60">seek_sample</name> <operator pos:start="183:62" pos:end="183:62">&lt;</operator> <operator pos:start="183:64" pos:end="183:64">(</operator><name pos:start="183:65" pos:end="183:82">first_chunk_sample</name> <operator pos:start="183:84" pos:end="183:84">+</operator> <name pos:start="183:86" pos:end="183:86">b</name><operator pos:start="183:87" pos:end="183:87">)</operator></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:18"><block_content pos:start="185:13" pos:end="185:18">

            <break pos:start="185:13" pos:end="185:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:32"><expr pos:start="187:9" pos:end="187:31"><name pos:start="187:9" pos:end="187:26">first_chunk_sample</name> <operator pos:start="187:28" pos:end="187:29">+=</operator> <name pos:start="187:31" pos:end="187:31">b</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="191:5" pos:end="191:109"><expr pos:start="191:5" pos:end="191:108"><name pos:start="191:5" pos:end="191:9">chunk</name> <operator pos:start="191:11" pos:end="191:11">=</operator> <name pos:start="191:13" pos:end="191:34"><name pos:start="191:13" pos:end="191:14">sc</name><operator pos:start="191:15" pos:end="191:16">-&gt;</operator><name pos:start="191:17" pos:end="191:31">sample_to_chunk</name><index pos:start="191:32" pos:end="191:34">[<expr pos:start="191:33" pos:end="191:33"><name pos:start="191:33" pos:end="191:33">i</name></expr>]</index></name><operator pos:start="191:35" pos:end="191:35">.</operator><name pos:start="191:36" pos:end="191:40">first</name> <operator pos:start="191:42" pos:end="191:42">+</operator> <operator pos:start="191:44" pos:end="191:44">(</operator><name pos:start="191:45" pos:end="191:55">seek_sample</name> <operator pos:start="191:57" pos:end="191:57">-</operator> <name pos:start="191:59" pos:end="191:76">first_chunk_sample</name><operator pos:start="191:77" pos:end="191:77">)</operator> <operator pos:start="191:79" pos:end="191:79">/</operator> <name pos:start="191:81" pos:end="191:102"><name pos:start="191:81" pos:end="191:82">sc</name><operator pos:start="191:83" pos:end="191:84">-&gt;</operator><name pos:start="191:85" pos:end="191:99">sample_to_chunk</name><index pos:start="191:100" pos:end="191:102">[<expr pos:start="191:101" pos:end="191:101"><name pos:start="191:101" pos:end="191:101">i</name></expr>]</index></name><operator pos:start="191:103" pos:end="191:103">.</operator><name pos:start="191:104" pos:end="191:108">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:117"><expr pos:start="193:5" pos:end="193:116"><name pos:start="193:5" pos:end="193:17">left_in_chunk</name> <operator pos:start="193:19" pos:end="193:19">=</operator> <name pos:start="193:21" pos:end="193:42"><name pos:start="193:21" pos:end="193:22">sc</name><operator pos:start="193:23" pos:end="193:24">-&gt;</operator><name pos:start="193:25" pos:end="193:39">sample_to_chunk</name><index pos:start="193:40" pos:end="193:42">[<expr pos:start="193:41" pos:end="193:41"><name pos:start="193:41" pos:end="193:41">i</name></expr>]</index></name><operator pos:start="193:43" pos:end="193:43">.</operator><name pos:start="193:44" pos:end="193:48">count</name> <operator pos:start="193:50" pos:end="193:50">-</operator> <operator pos:start="193:52" pos:end="193:52">(</operator><name pos:start="193:53" pos:end="193:63">seek_sample</name> <operator pos:start="193:65" pos:end="193:65">-</operator> <name pos:start="193:67" pos:end="193:84">first_chunk_sample</name><operator pos:start="193:85" pos:end="193:85">)</operator> <operator pos:start="193:87" pos:end="193:87">%</operator> <name pos:start="193:89" pos:end="193:110"><name pos:start="193:89" pos:end="193:90">sc</name><operator pos:start="193:91" pos:end="193:92">-&gt;</operator><name pos:start="193:93" pos:end="193:107">sample_to_chunk</name><index pos:start="193:108" pos:end="193:110">[<expr pos:start="193:109" pos:end="193:109"><name pos:start="193:109" pos:end="193:109">i</name></expr>]</index></name><operator pos:start="193:111" pos:end="193:111">.</operator><name pos:start="193:112" pos:end="193:116">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:125"><expr pos:start="195:5" pos:end="195:124"><name pos:start="195:5" pos:end="195:22">first_chunk_sample</name> <operator pos:start="195:24" pos:end="195:25">+=</operator> <operator pos:start="195:27" pos:end="195:27">(</operator><operator pos:start="195:28" pos:end="195:28">(</operator><name pos:start="195:29" pos:end="195:39">seek_sample</name> <operator pos:start="195:41" pos:end="195:41">-</operator> <name pos:start="195:43" pos:end="195:60">first_chunk_sample</name><operator pos:start="195:61" pos:end="195:61">)</operator> <operator pos:start="195:63" pos:end="195:63">/</operator> <name pos:start="195:65" pos:end="195:86"><name pos:start="195:65" pos:end="195:66">sc</name><operator pos:start="195:67" pos:end="195:68">-&gt;</operator><name pos:start="195:69" pos:end="195:83">sample_to_chunk</name><index pos:start="195:84" pos:end="195:86">[<expr pos:start="195:85" pos:end="195:85"><name pos:start="195:85" pos:end="195:85">i</name></expr>]</index></name><operator pos:start="195:87" pos:end="195:87">.</operator><name pos:start="195:88" pos:end="195:92">count</name><operator pos:start="195:93" pos:end="195:93">)</operator> <operator pos:start="195:95" pos:end="195:95">*</operator> <name pos:start="195:97" pos:end="195:118"><name pos:start="195:97" pos:end="195:98">sc</name><operator pos:start="195:99" pos:end="195:100">-&gt;</operator><name pos:start="195:101" pos:end="195:115">sample_to_chunk</name><index pos:start="195:116" pos:end="195:118">[<expr pos:start="195:117" pos:end="195:117"><name pos:start="195:117" pos:end="195:117">i</name></expr>]</index></name><operator pos:start="195:119" pos:end="195:119">.</operator><name pos:start="195:120" pos:end="195:124">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:28"><expr pos:start="197:5" pos:end="197:27"><name pos:start="197:5" pos:end="197:23">sample_to_chunk_idx</name> <operator pos:start="197:25" pos:end="197:25">=</operator> <name pos:start="197:27" pos:end="197:27">i</name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:138"><expr pos:start="199:5" pos:end="199:137"><call pos:start="199:5" pos:end="199:137"><name pos:start="199:5" pos:end="199:11">dprintf</name><argument_list pos:start="199:12" pos:end="199:137">(<argument pos:start="199:13" pos:end="199:74"><expr pos:start="199:13" pos:end="199:74"><literal type="string" pos:start="199:13" pos:end="199:74">"Sample was found in chunk #%i at sample offset %i (idx %i)\n"</literal></expr></argument>, <argument pos:start="199:77" pos:end="199:81"><expr pos:start="199:77" pos:end="199:81"><name pos:start="199:77" pos:end="199:81">chunk</name></expr></argument>, <argument pos:start="199:84" pos:end="199:115"><expr pos:start="199:84" pos:end="199:115"><name pos:start="199:84" pos:end="199:94">seek_sample</name> <operator pos:start="199:96" pos:end="199:96">-</operator> <name pos:start="199:98" pos:end="199:115">first_chunk_sample</name></expr></argument>, <argument pos:start="199:118" pos:end="199:136"><expr pos:start="199:118" pos:end="199:136"><name pos:start="199:118" pos:end="199:136">sample_to_chunk_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="203:5" pos:end="203:71">// Step 5. Find the offset of the chunk using the chunk offset atom</comment>

    <if_stmt pos:start="205:5" pos:end="211:5"><if pos:start="205:5" pos:end="211:5">if <condition pos:start="205:8" pos:end="205:27">(<expr pos:start="205:9" pos:end="205:26"><operator pos:start="205:9" pos:end="205:9">!</operator><name pos:start="205:10" pos:end="205:26"><name pos:start="205:10" pos:end="205:11">sc</name><operator pos:start="205:12" pos:end="205:13">-&gt;</operator><name pos:start="205:14" pos:end="205:26">chunk_offsets</name></name></expr>)</condition> <block pos:start="205:29" pos:end="211:5">{<block_content pos:start="207:9" pos:end="209:18">

        <expr_stmt pos:start="207:9" pos:end="207:79"><expr pos:start="207:9" pos:end="207:78"><call pos:start="207:9" pos:end="207:78"><name pos:start="207:9" pos:end="207:14">av_log</name><argument_list pos:start="207:15" pos:end="207:78">(<argument pos:start="207:16" pos:end="207:16"><expr pos:start="207:16" pos:end="207:16"><name pos:start="207:16" pos:end="207:16">s</name></expr></argument>, <argument pos:start="207:19" pos:end="207:30"><expr pos:start="207:19" pos:end="207:30"><name pos:start="207:19" pos:end="207:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="207:33" pos:end="207:77"><expr pos:start="207:33" pos:end="207:77"><literal type="string" pos:start="207:33" pos:end="207:77">"mov: no chunk offset atom, unable to seek\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="209:9" pos:end="209:18">return <expr pos:start="209:16" pos:end="209:17"><operator pos:start="209:16" pos:end="209:16">-</operator><literal type="number" pos:start="209:17" pos:end="209:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="213:5" pos:end="219:5"><if pos:start="213:5" pos:end="219:5">if <condition pos:start="213:8" pos:end="213:32">(<expr pos:start="213:9" pos:end="213:31"><name pos:start="213:9" pos:end="213:13">chunk</name> <operator pos:start="213:15" pos:end="213:15">&gt;</operator> <name pos:start="213:17" pos:end="213:31"><name pos:start="213:17" pos:end="213:18">sc</name><operator pos:start="213:19" pos:end="213:20">-&gt;</operator><name pos:start="213:21" pos:end="213:31">chunk_count</name></name></expr>)</condition> <block pos:start="213:34" pos:end="219:5">{<block_content pos:start="215:9" pos:end="217:18">

        <expr_stmt pos:start="215:9" pos:end="215:143"><expr pos:start="215:9" pos:end="215:142"><call pos:start="215:9" pos:end="215:142"><name pos:start="215:9" pos:end="215:14">av_log</name><argument_list pos:start="215:15" pos:end="215:142">(<argument pos:start="215:16" pos:end="215:16"><expr pos:start="215:16" pos:end="215:16"><name pos:start="215:16" pos:end="215:16">s</name></expr></argument>, <argument pos:start="215:19" pos:end="215:30"><expr pos:start="215:19" pos:end="215:30"><name pos:start="215:19" pos:end="215:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="215:33" pos:end="215:117"><expr pos:start="215:33" pos:end="215:117"><literal type="string" pos:start="215:33" pos:end="215:117">"mov: chunk offset atom too short, unable to seek (req. chunk=%i, chunk count=%li)\n"</literal></expr></argument>, <argument pos:start="215:120" pos:end="215:124"><expr pos:start="215:120" pos:end="215:124"><name pos:start="215:120" pos:end="215:124">chunk</name></expr></argument>, <argument pos:start="215:127" pos:end="215:141"><expr pos:start="215:127" pos:end="215:141"><name pos:start="215:127" pos:end="215:141"><name pos:start="215:127" pos:end="215:128">sc</name><operator pos:start="215:129" pos:end="215:130">-&gt;</operator><name pos:start="215:131" pos:end="215:141">chunk_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="217:9" pos:end="217:18">return <expr pos:start="217:16" pos:end="217:17"><operator pos:start="217:16" pos:end="217:16">-</operator><literal type="number" pos:start="217:17" pos:end="217:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:53"><expr pos:start="221:5" pos:end="221:52"><name pos:start="221:5" pos:end="221:21">chunk_file_offset</name> <operator pos:start="221:23" pos:end="221:23">=</operator> <name pos:start="221:25" pos:end="221:52"><name pos:start="221:25" pos:end="221:26">sc</name><operator pos:start="221:27" pos:end="221:28">-&gt;</operator><name pos:start="221:29" pos:end="221:41">chunk_offsets</name><index pos:start="221:42" pos:end="221:52">[<expr pos:start="221:43" pos:end="221:51"><name pos:start="221:43" pos:end="221:47">chunk</name> <operator pos:start="221:49" pos:end="221:49">-</operator> <literal type="number" pos:start="221:51" pos:end="221:51">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:68"><expr pos:start="223:5" pos:end="223:67"><call pos:start="223:5" pos:end="223:67"><name pos:start="223:5" pos:end="223:11">dprintf</name><argument_list pos:start="223:12" pos:end="223:67">(<argument pos:start="223:13" pos:end="223:47"><expr pos:start="223:13" pos:end="223:47"><literal type="string" pos:start="223:13" pos:end="223:37">"Chunk file offset is #%"</literal><name pos:start="223:38" pos:end="223:43">PRIu64</name><literal type="string" pos:start="223:44" pos:end="223:47">"\n"</literal></expr></argument>, <argument pos:start="223:50" pos:end="223:66"><expr pos:start="223:50" pos:end="223:66"><name pos:start="223:50" pos:end="223:66">chunk_file_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="227:5" pos:end="227:79">// Step 6. Find the byte offset within the chunk using the sample size atom</comment>

    <expr_stmt pos:start="229:5" pos:end="229:43"><expr pos:start="229:5" pos:end="229:42"><name pos:start="229:5" pos:end="229:22">sample_file_offset</name> <operator pos:start="229:24" pos:end="229:24">=</operator> <name pos:start="229:26" pos:end="229:42">chunk_file_offset</name></expr>;</expr_stmt>

    <if_stmt pos:start="231:5" pos:end="243:5"><if pos:start="231:5" pos:end="233:83">if <condition pos:start="231:8" pos:end="231:24">(<expr pos:start="231:9" pos:end="231:23"><name pos:start="231:9" pos:end="231:23"><name pos:start="231:9" pos:end="231:10">sc</name><operator pos:start="231:11" pos:end="231:12">-&gt;</operator><name pos:start="231:13" pos:end="231:23">sample_size</name></name></expr>)</condition><block type="pseudo" pos:start="233:9" pos:end="233:83"><block_content pos:start="233:9" pos:end="233:83">

        <expr_stmt pos:start="233:9" pos:end="233:83"><expr pos:start="233:9" pos:end="233:82"><name pos:start="233:9" pos:end="233:26">sample_file_offset</name> <operator pos:start="233:28" pos:end="233:29">+=</operator> <operator pos:start="233:31" pos:end="233:31">(</operator><name pos:start="233:32" pos:end="233:42">seek_sample</name> <operator pos:start="233:44" pos:end="233:44">-</operator> <name pos:start="233:46" pos:end="233:63">first_chunk_sample</name><operator pos:start="233:64" pos:end="233:64">)</operator> <operator pos:start="233:66" pos:end="233:66">*</operator> <name pos:start="233:68" pos:end="233:82"><name pos:start="233:68" pos:end="233:69">sc</name><operator pos:start="233:70" pos:end="233:71">-&gt;</operator><name pos:start="233:72" pos:end="233:82">sample_size</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="235:5" pos:end="243:5">else <block pos:start="235:10" pos:end="243:5">{<block_content pos:start="237:9" pos:end="241:9">

        <for pos:start="237:9" pos:end="241:9">for <control pos:start="237:13" pos:end="237:64">(<init pos:start="237:14" pos:end="237:19"><expr pos:start="237:14" pos:end="237:18"><name pos:start="237:14" pos:end="237:14">i</name> <operator pos:start="237:16" pos:end="237:16">=</operator> <literal type="number" pos:start="237:18" pos:end="237:18">0</literal></expr>;</init> <condition pos:start="237:21" pos:end="237:59"><expr pos:start="237:21" pos:end="237:58"><name pos:start="237:21" pos:end="237:21">i</name> <operator pos:start="237:23" pos:end="237:23">&lt;</operator> <operator pos:start="237:25" pos:end="237:25">(</operator><name pos:start="237:26" pos:end="237:36">seek_sample</name> <operator pos:start="237:38" pos:end="237:38">-</operator> <name pos:start="237:40" pos:end="237:57">first_chunk_sample</name><operator pos:start="237:58" pos:end="237:58">)</operator></expr>;</condition> <incr pos:start="237:61" pos:end="237:63"><expr pos:start="237:61" pos:end="237:63"><name pos:start="237:61" pos:end="237:61">i</name><operator pos:start="237:62" pos:end="237:63">++</operator></expr></incr>)</control> <block pos:start="237:66" pos:end="241:9">{<block_content pos:start="239:9" pos:end="239:75">

        <expr_stmt pos:start="239:9" pos:end="239:75"><expr pos:start="239:9" pos:end="239:74"><name pos:start="239:9" pos:end="239:26">sample_file_offset</name> <operator pos:start="239:28" pos:end="239:29">+=</operator> <name pos:start="239:31" pos:end="239:74"><name pos:start="239:31" pos:end="239:32">sc</name><operator pos:start="239:33" pos:end="239:34">-&gt;</operator><name pos:start="239:35" pos:end="239:46">sample_sizes</name><index pos:start="239:47" pos:end="239:74">[<expr pos:start="239:48" pos:end="239:73"><name pos:start="239:48" pos:end="239:65">first_chunk_sample</name> <operator pos:start="239:67" pos:end="239:67">+</operator> <name pos:start="239:69" pos:end="239:69">i</name> <operator pos:start="239:71" pos:end="239:71">-</operator> <literal type="number" pos:start="239:73" pos:end="239:73">1</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:70"><expr pos:start="245:5" pos:end="245:69"><call pos:start="245:5" pos:end="245:69"><name pos:start="245:5" pos:end="245:11">dprintf</name><argument_list pos:start="245:12" pos:end="245:69">(<argument pos:start="245:13" pos:end="245:48"><expr pos:start="245:13" pos:end="245:48"><literal type="string" pos:start="245:13" pos:end="245:38">"Sample file offset is #%"</literal><name pos:start="245:39" pos:end="245:44">PRIu64</name><literal type="string" pos:start="245:45" pos:end="245:48">"\n"</literal></expr></argument>, <argument pos:start="245:51" pos:end="245:68"><expr pos:start="245:51" pos:end="245:68"><name pos:start="245:51" pos:end="245:68">sample_file_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="249:5" pos:end="249:32">// Step 6. Update the parser</comment>

    <expr_stmt pos:start="251:5" pos:end="251:22"><expr pos:start="251:5" pos:end="251:21"><name pos:start="251:5" pos:end="251:16"><name pos:start="251:5" pos:end="251:7">mov</name><operator pos:start="251:8" pos:end="251:9">-&gt;</operator><name pos:start="251:10" pos:end="251:16">partial</name></name> <operator pos:start="251:18" pos:end="251:18">=</operator> <name pos:start="251:20" pos:end="251:21">sc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:48"><expr pos:start="253:5" pos:end="253:47"><name pos:start="253:5" pos:end="253:26"><name pos:start="253:5" pos:end="253:7">mov</name><operator pos:start="253:8" pos:end="253:9">-&gt;</operator><name pos:start="253:10" pos:end="253:26">next_chunk_offset</name></name> <operator pos:start="253:28" pos:end="253:28">=</operator> <name pos:start="253:30" pos:end="253:47">sample_file_offset</name></expr>;</expr_stmt>

    <comment type="line" pos:start="255:5" pos:end="255:34">// Update current stream state</comment>

    <expr_stmt pos:start="257:5" pos:end="257:41"><expr pos:start="257:5" pos:end="257:40"><name pos:start="257:5" pos:end="257:22"><name pos:start="257:5" pos:end="257:6">sc</name><operator pos:start="257:7" pos:end="257:8">-&gt;</operator><name pos:start="257:9" pos:end="257:22">current_sample</name></name> <operator pos:start="257:24" pos:end="257:24">=</operator> <name pos:start="257:26" pos:end="257:36">seek_sample</name> <operator pos:start="257:38" pos:end="257:38">-</operator> <literal type="number" pos:start="257:40" pos:end="257:40">1</literal></expr>;</expr_stmt>  <comment type="line" pos:start="257:44" pos:end="257:56">// zero based</comment>

    <expr_stmt pos:start="259:5" pos:end="259:38"><expr pos:start="259:5" pos:end="259:37"><name pos:start="259:5" pos:end="259:21"><name pos:start="259:5" pos:end="259:6">sc</name><operator pos:start="259:7" pos:end="259:8">-&gt;</operator><name pos:start="259:9" pos:end="259:21">left_in_chunk</name></name> <operator pos:start="259:23" pos:end="259:23">=</operator> <name pos:start="259:25" pos:end="259:37">left_in_chunk</name></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:27"><expr pos:start="261:5" pos:end="261:26"><name pos:start="261:5" pos:end="261:18"><name pos:start="261:5" pos:end="261:6">sc</name><operator pos:start="261:7" pos:end="261:8">-&gt;</operator><name pos:start="261:9" pos:end="261:18">next_chunk</name></name> <operator pos:start="261:20" pos:end="261:20">=</operator> <name pos:start="261:22" pos:end="261:26">chunk</name></expr>;</expr_stmt> <comment type="line" pos:start="261:29" pos:end="261:49">// +1 -1 (zero based)</comment>

    <expr_stmt pos:start="263:5" pos:end="263:52"><expr pos:start="263:5" pos:end="263:51"><name pos:start="263:5" pos:end="263:29"><name pos:start="263:5" pos:end="263:6">sc</name><operator pos:start="263:7" pos:end="263:8">-&gt;</operator><name pos:start="263:9" pos:end="263:29">sample_to_chunk_index</name></name> <operator pos:start="263:31" pos:end="263:31">=</operator> <name pos:start="263:33" pos:end="263:51">sample_to_chunk_idx</name></expr>;</expr_stmt>



    <comment type="line" pos:start="267:5" pos:end="267:27">// Update other streams</comment>

    <for pos:start="269:5" pos:end="379:5">for <control pos:start="269:9" pos:end="269:42">(<init pos:start="269:10" pos:end="269:15"><expr pos:start="269:10" pos:end="269:14"><name pos:start="269:10" pos:end="269:10">i</name> <operator pos:start="269:12" pos:end="269:12">=</operator> <literal type="number" pos:start="269:14" pos:end="269:14">0</literal></expr>;</init> <condition pos:start="269:17" pos:end="269:37"><expr pos:start="269:17" pos:end="269:36"><name pos:start="269:17" pos:end="269:17">i</name><operator pos:start="269:18" pos:end="269:18">&lt;</operator><name pos:start="269:19" pos:end="269:36"><name pos:start="269:19" pos:end="269:21">mov</name><operator pos:start="269:22" pos:end="269:23">-&gt;</operator><name pos:start="269:24" pos:end="269:36">total_streams</name></name></expr>;</condition> <incr pos:start="269:39" pos:end="269:41"><expr pos:start="269:39" pos:end="269:41"><name pos:start="269:39" pos:end="269:39">i</name><operator pos:start="269:40" pos:end="269:41">++</operator></expr></incr>)</control> <block pos:start="269:44" pos:end="379:5">{<block_content pos:start="271:9" pos:end="377:121">

        <decl_stmt pos:start="271:9" pos:end="271:30"><decl pos:start="271:9" pos:end="271:29"><type pos:start="271:9" pos:end="271:26"><name pos:start="271:9" pos:end="271:24">MOVStreamContext</name> <modifier pos:start="271:26" pos:end="271:26">*</modifier></type><name pos:start="271:27" pos:end="271:29">msc</name></decl>;</decl_stmt>

        <if_stmt pos:start="273:9" pos:end="273:35"><if pos:start="273:9" pos:end="273:35">if <condition pos:start="273:12" pos:end="273:25">(<expr pos:start="273:13" pos:end="273:24"><name pos:start="273:13" pos:end="273:13">i</name> <operator pos:start="273:15" pos:end="273:16">==</operator> <name pos:start="273:18" pos:end="273:24">mov_idx</name></expr>)</condition><block type="pseudo" pos:start="273:27" pos:end="273:35"><block_content pos:start="273:27" pos:end="273:35"> <continue pos:start="273:27" pos:end="273:35">continue;</continue></block_content></block></if></if_stmt>

        <comment type="line" pos:start="275:9" pos:end="275:40">// Find the nearest 'next' chunk</comment>

        <expr_stmt pos:start="277:9" pos:end="277:30"><expr pos:start="277:9" pos:end="277:29"><name pos:start="277:9" pos:end="277:11">msc</name> <operator pos:start="277:13" pos:end="277:13">=</operator> <name pos:start="277:15" pos:end="277:29"><name pos:start="277:15" pos:end="277:17">mov</name><operator pos:start="277:18" pos:end="277:19">-&gt;</operator><name pos:start="277:20" pos:end="277:26">streams</name><index pos:start="277:27" pos:end="277:29">[<expr pos:start="277:28" pos:end="277:28"><name pos:start="277:28" pos:end="277:28">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:14"><expr pos:start="279:9" pos:end="279:13"><name pos:start="279:9" pos:end="279:9">a</name> <operator pos:start="279:11" pos:end="279:11">=</operator> <literal type="number" pos:start="279:13" pos:end="279:13">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:33"><expr pos:start="281:9" pos:end="281:32"><name pos:start="281:9" pos:end="281:9">b</name> <operator pos:start="281:11" pos:end="281:11">=</operator> <name pos:start="281:13" pos:end="281:28"><name pos:start="281:13" pos:end="281:15">msc</name><operator pos:start="281:16" pos:end="281:17">-&gt;</operator><name pos:start="281:18" pos:end="281:28">chunk_count</name></name> <operator pos:start="281:30" pos:end="281:30">-</operator> <literal type="number" pos:start="281:32" pos:end="281:32">1</literal></expr>;</expr_stmt>

        <while pos:start="283:9" pos:end="297:9">while <condition pos:start="283:15" pos:end="283:21">(<expr pos:start="283:16" pos:end="283:20"><name pos:start="283:16" pos:end="283:16">a</name> <operator pos:start="283:18" pos:end="283:18">&lt;</operator> <name pos:start="283:20" pos:end="283:20">b</name></expr>)</condition> <block pos:start="283:23" pos:end="297:9">{<block_content pos:start="285:13" pos:end="295:13">

            <expr_stmt pos:start="285:13" pos:end="285:33"><expr pos:start="285:13" pos:end="285:32"><name pos:start="285:13" pos:end="285:13">m</name> <operator pos:start="285:15" pos:end="285:15">=</operator> <operator pos:start="285:17" pos:end="285:17">(</operator><name pos:start="285:18" pos:end="285:18">a</name> <operator pos:start="285:20" pos:end="285:20">+</operator> <name pos:start="285:22" pos:end="285:22">b</name> <operator pos:start="285:24" pos:end="285:24">+</operator> <literal type="number" pos:start="285:26" pos:end="285:26">1</literal><operator pos:start="285:27" pos:end="285:27">)</operator> <operator pos:start="285:29" pos:end="285:30">&gt;&gt;</operator> <literal type="number" pos:start="285:32" pos:end="285:32">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="287:13" pos:end="295:13"><if pos:start="287:13" pos:end="291:13">if <condition pos:start="287:16" pos:end="287:58">(<expr pos:start="287:17" pos:end="287:57"><name pos:start="287:17" pos:end="287:37"><name pos:start="287:17" pos:end="287:19">msc</name><operator pos:start="287:20" pos:end="287:21">-&gt;</operator><name pos:start="287:22" pos:end="287:34">chunk_offsets</name><index pos:start="287:35" pos:end="287:37">[<expr pos:start="287:36" pos:end="287:36"><name pos:start="287:36" pos:end="287:36">m</name></expr>]</index></name> <operator pos:start="287:39" pos:end="287:39">&gt;</operator> <name pos:start="287:41" pos:end="287:57">chunk_file_offset</name></expr>)</condition> <block pos:start="287:60" pos:end="291:13">{<block_content pos:start="289:17" pos:end="289:26">

                <expr_stmt pos:start="289:17" pos:end="289:26"><expr pos:start="289:17" pos:end="289:25"><name pos:start="289:17" pos:end="289:17">b</name> <operator pos:start="289:19" pos:end="289:19">=</operator> <name pos:start="289:21" pos:end="289:21">m</name> <operator pos:start="289:23" pos:end="289:23">-</operator> <literal type="number" pos:start="289:25" pos:end="289:25">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="291:15" pos:end="295:13">else <block pos:start="291:20" pos:end="295:13">{<block_content pos:start="293:17" pos:end="293:22">

                <expr_stmt pos:start="293:17" pos:end="293:22"><expr pos:start="293:17" pos:end="293:21"><name pos:start="293:17" pos:end="293:17">a</name> <operator pos:start="293:19" pos:end="293:19">=</operator> <name pos:start="293:21" pos:end="293:21">m</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="299:9" pos:end="299:28"><expr pos:start="299:9" pos:end="299:27"><name pos:start="299:9" pos:end="299:23"><name pos:start="299:9" pos:end="299:11">msc</name><operator pos:start="299:12" pos:end="299:13">-&gt;</operator><name pos:start="299:14" pos:end="299:23">next_chunk</name></name> <operator pos:start="299:25" pos:end="299:25">=</operator> <name pos:start="299:27" pos:end="299:27">a</name></expr>;</expr_stmt>

        <if_stmt pos:start="301:9" pos:end="303:31"><if pos:start="301:9" pos:end="303:31">if <condition pos:start="301:12" pos:end="301:82">(<expr pos:start="301:13" pos:end="301:81"><name pos:start="301:13" pos:end="301:33"><name pos:start="301:13" pos:end="301:15">msc</name><operator pos:start="301:16" pos:end="301:17">-&gt;</operator><name pos:start="301:18" pos:end="301:30">chunk_offsets</name><index pos:start="301:31" pos:end="301:33">[<expr pos:start="301:32" pos:end="301:32"><name pos:start="301:32" pos:end="301:32">a</name></expr>]</index></name> <operator pos:start="301:35" pos:end="301:35">&lt;</operator> <name pos:start="301:37" pos:end="301:53">chunk_file_offset</name> <operator pos:start="301:55" pos:end="301:56">&amp;&amp;</operator> <name pos:start="301:58" pos:end="301:58">a</name> <operator pos:start="301:60" pos:end="301:60">&lt;</operator> <operator pos:start="301:62" pos:end="301:62">(</operator><name pos:start="301:63" pos:end="301:78"><name pos:start="301:63" pos:end="301:65">msc</name><operator pos:start="301:66" pos:end="301:67">-&gt;</operator><name pos:start="301:68" pos:end="301:78">chunk_count</name></name><operator pos:start="301:79" pos:end="301:79">-</operator><literal type="number" pos:start="301:80" pos:end="301:80">1</literal><operator pos:start="301:81" pos:end="301:81">)</operator></expr>)</condition><block type="pseudo" pos:start="303:13" pos:end="303:31"><block_content pos:start="303:13" pos:end="303:31">

            <expr_stmt pos:start="303:13" pos:end="303:31"><expr pos:start="303:13" pos:end="303:30"><name pos:start="303:13" pos:end="303:27"><name pos:start="303:13" pos:end="303:15">msc</name><operator pos:start="303:16" pos:end="303:17">-&gt;</operator><name pos:start="303:18" pos:end="303:27">next_chunk</name></name> <operator pos:start="303:29" pos:end="303:30">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:133"><expr pos:start="305:9" pos:end="305:132"><call pos:start="305:9" pos:end="305:132"><name pos:start="305:9" pos:end="305:15">dprintf</name><argument_list pos:start="305:16" pos:end="305:132">(<argument pos:start="305:17" pos:end="305:72"><expr pos:start="305:17" pos:end="305:72"><literal type="string" pos:start="305:17" pos:end="305:62">"Nearest next chunk for stream #%i is #%li @%"</literal><name pos:start="305:63" pos:end="305:68">PRId64</name><literal type="string" pos:start="305:69" pos:end="305:72">"\n"</literal></expr></argument>, <argument pos:start="305:75" pos:end="305:75"><expr pos:start="305:75" pos:end="305:75"><name pos:start="305:75" pos:end="305:75">i</name></expr></argument>, <argument pos:start="305:78" pos:end="305:94"><expr pos:start="305:78" pos:end="305:94"><name pos:start="305:78" pos:end="305:92"><name pos:start="305:78" pos:end="305:80">msc</name><operator pos:start="305:81" pos:end="305:82">-&gt;</operator><name pos:start="305:83" pos:end="305:92">next_chunk</name></name><operator pos:start="305:93" pos:end="305:93">+</operator><literal type="number" pos:start="305:94" pos:end="305:94">1</literal></expr></argument>, <argument pos:start="305:97" pos:end="305:131"><expr pos:start="305:97" pos:end="305:131"><name pos:start="305:97" pos:end="305:131"><name pos:start="305:97" pos:end="305:99">msc</name><operator pos:start="305:100" pos:end="305:101">-&gt;</operator><name pos:start="305:102" pos:end="305:114">chunk_offsets</name><index pos:start="305:115" pos:end="305:131">[<expr pos:start="305:116" pos:end="305:130"><name pos:start="305:116" pos:end="305:130"><name pos:start="305:116" pos:end="305:118">msc</name><operator pos:start="305:119" pos:end="305:120">-&gt;</operator><name pos:start="305:121" pos:end="305:130">next_chunk</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="309:9" pos:end="309:84">// Compute sample count and index in the sample_to_chunk table (what a pity)</comment>

        <expr_stmt pos:start="311:9" pos:end="311:39"><expr pos:start="311:9" pos:end="311:38"><name pos:start="311:9" pos:end="311:34"><name pos:start="311:9" pos:end="311:11">msc</name><operator pos:start="311:12" pos:end="311:13">-&gt;</operator><name pos:start="311:14" pos:end="311:34">sample_to_chunk_index</name></name> <operator pos:start="311:36" pos:end="311:36">=</operator> <literal type="number" pos:start="311:38" pos:end="311:38">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:32"><expr pos:start="313:9" pos:end="313:31"><name pos:start="313:9" pos:end="313:27"><name pos:start="313:9" pos:end="313:11">msc</name><operator pos:start="313:12" pos:end="313:13">-&gt;</operator><name pos:start="313:14" pos:end="313:27">current_sample</name></name> <operator pos:start="313:29" pos:end="313:29">=</operator> <literal type="number" pos:start="313:31" pos:end="313:31">0</literal></expr>;</expr_stmt>

        <for pos:start="315:9" pos:end="323:9">for<control pos:start="315:12" pos:end="317:129">(<init pos:start="315:13" pos:end="315:13">;</init>  <condition pos:start="315:16" pos:end="317:99"><expr pos:start="315:16" pos:end="317:98"><name pos:start="315:16" pos:end="315:41"><name pos:start="315:16" pos:end="315:18">msc</name><operator pos:start="315:19" pos:end="315:20">-&gt;</operator><name pos:start="315:21" pos:end="315:41">sample_to_chunk_index</name></name> <operator pos:start="315:43" pos:end="315:43">&lt;</operator> <operator pos:start="315:45" pos:end="315:45">(</operator><name pos:start="315:46" pos:end="315:68"><name pos:start="315:46" pos:end="315:48">msc</name><operator pos:start="315:49" pos:end="315:50">-&gt;</operator><name pos:start="315:51" pos:end="315:68">sample_to_chunk_sz</name></name> <operator pos:start="315:70" pos:end="315:70">-</operator> <literal type="number" pos:start="315:72" pos:end="315:72">1</literal><operator pos:start="315:73" pos:end="315:73">)</operator>

            <operator pos:start="317:13" pos:end="317:14">&amp;&amp;</operator> <name pos:start="317:16" pos:end="317:67"><name pos:start="317:16" pos:end="317:18">msc</name><operator pos:start="317:19" pos:end="317:20">-&gt;</operator><name pos:start="317:21" pos:end="317:35">sample_to_chunk</name><index pos:start="317:36" pos:end="317:67">[<expr pos:start="317:37" pos:end="317:66"><name pos:start="317:37" pos:end="317:62"><name pos:start="317:37" pos:end="317:39">msc</name><operator pos:start="317:40" pos:end="317:41">-&gt;</operator><name pos:start="317:42" pos:end="317:62">sample_to_chunk_index</name></name> <operator pos:start="317:64" pos:end="317:64">+</operator> <literal type="number" pos:start="317:66" pos:end="317:66">1</literal></expr>]</index></name><operator pos:start="317:68" pos:end="317:68">.</operator><name pos:start="317:69" pos:end="317:73">first</name> <operator pos:start="317:75" pos:end="317:76">&lt;=</operator> <operator pos:start="317:78" pos:end="317:78">(</operator><literal type="number" pos:start="317:79" pos:end="317:81">1</literal> <operator pos:start="317:81" pos:end="317:81">+</operator> <name pos:start="317:83" pos:end="317:97"><name pos:start="317:83" pos:end="317:85">msc</name><operator pos:start="317:86" pos:end="317:87">-&gt;</operator><name pos:start="317:88" pos:end="317:97">next_chunk</name></name><operator pos:start="317:98" pos:end="317:98">)</operator></expr>;</condition> <incr pos:start="317:101" pos:end="317:128"><expr pos:start="317:101" pos:end="317:128"><name pos:start="317:101" pos:end="317:126"><name pos:start="317:101" pos:end="317:103">msc</name><operator pos:start="317:104" pos:end="317:105">-&gt;</operator><name pos:start="317:106" pos:end="317:126">sample_to_chunk_index</name></name><operator pos:start="317:127" pos:end="317:128">++</operator></expr></incr>)</control> <block pos:start="317:131" pos:end="323:9">{<block_content pos:start="319:13" pos:end="321:69">

            <expr_stmt pos:start="319:13" pos:end="321:69"><expr pos:start="319:13" pos:end="321:68"><name pos:start="319:13" pos:end="319:31"><name pos:start="319:13" pos:end="319:15">msc</name><operator pos:start="319:16" pos:end="319:17">-&gt;</operator><name pos:start="319:18" pos:end="319:31">current_sample</name></name> <operator pos:start="319:33" pos:end="319:34">+=</operator> <operator pos:start="319:36" pos:end="319:36">(</operator><name pos:start="319:37" pos:end="319:88"><name pos:start="319:37" pos:end="319:39">msc</name><operator pos:start="319:40" pos:end="319:41">-&gt;</operator><name pos:start="319:42" pos:end="319:56">sample_to_chunk</name><index pos:start="319:57" pos:end="319:88">[<expr pos:start="319:58" pos:end="319:87"><name pos:start="319:58" pos:end="319:83"><name pos:start="319:58" pos:end="319:60">msc</name><operator pos:start="319:61" pos:end="319:62">-&gt;</operator><name pos:start="319:63" pos:end="319:83">sample_to_chunk_index</name></name> <operator pos:start="319:85" pos:end="319:85">+</operator> <literal type="number" pos:start="319:87" pos:end="319:87">1</literal></expr>]</index></name><operator pos:start="319:89" pos:end="319:89">.</operator><name pos:start="319:90" pos:end="319:94">first</name> <operator pos:start="319:96" pos:end="319:96">-</operator> <name pos:start="319:98" pos:end="319:145"><name pos:start="319:98" pos:end="319:100">msc</name><operator pos:start="319:101" pos:end="319:102">-&gt;</operator><name pos:start="319:103" pos:end="319:117">sample_to_chunk</name><index pos:start="319:118" pos:end="319:145">[<expr pos:start="319:119" pos:end="319:144"><name pos:start="319:119" pos:end="319:144"><name pos:start="319:119" pos:end="319:121">msc</name><operator pos:start="319:122" pos:end="319:123">-&gt;</operator><name pos:start="319:124" pos:end="319:144">sample_to_chunk_index</name></name></expr>]</index></name><operator pos:start="319:146" pos:end="319:146">.</operator><name pos:start="319:147" pos:end="319:151">first</name><operator pos:start="319:152" pos:end="319:152">)</operator> \

            <operator pos:start="321:13" pos:end="321:13">*</operator> <name pos:start="321:15" pos:end="321:62"><name pos:start="321:15" pos:end="321:17">msc</name><operator pos:start="321:18" pos:end="321:19">-&gt;</operator><name pos:start="321:20" pos:end="321:34">sample_to_chunk</name><index pos:start="321:35" pos:end="321:62">[<expr pos:start="321:36" pos:end="321:61"><name pos:start="321:36" pos:end="321:61"><name pos:start="321:36" pos:end="321:38">msc</name><operator pos:start="321:39" pos:end="321:40">-&gt;</operator><name pos:start="321:41" pos:end="321:61">sample_to_chunk_index</name></name></expr>]</index></name><operator pos:start="321:63" pos:end="321:63">.</operator><name pos:start="321:64" pos:end="321:68">count</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="325:9" pos:end="325:168"><expr pos:start="325:9" pos:end="325:167"><name pos:start="325:9" pos:end="325:27"><name pos:start="325:9" pos:end="325:11">msc</name><operator pos:start="325:12" pos:end="325:13">-&gt;</operator><name pos:start="325:14" pos:end="325:27">current_sample</name></name> <operator pos:start="325:29" pos:end="325:30">+=</operator> <operator pos:start="325:32" pos:end="325:32">(</operator><name pos:start="325:33" pos:end="325:47"><name pos:start="325:33" pos:end="325:35">msc</name><operator pos:start="325:36" pos:end="325:37">-&gt;</operator><name pos:start="325:38" pos:end="325:47">next_chunk</name></name> <operator pos:start="325:49" pos:end="325:49">-</operator> <operator pos:start="325:51" pos:end="325:51">(</operator><name pos:start="325:52" pos:end="325:99"><name pos:start="325:52" pos:end="325:54">msc</name><operator pos:start="325:55" pos:end="325:56">-&gt;</operator><name pos:start="325:57" pos:end="325:71">sample_to_chunk</name><index pos:start="325:72" pos:end="325:99">[<expr pos:start="325:73" pos:end="325:98"><name pos:start="325:73" pos:end="325:98"><name pos:start="325:73" pos:end="325:75">msc</name><operator pos:start="325:76" pos:end="325:77">-&gt;</operator><name pos:start="325:78" pos:end="325:98">sample_to_chunk_index</name></name></expr>]</index></name><operator pos:start="325:100" pos:end="325:100">.</operator><name pos:start="325:101" pos:end="325:105">first</name> <operator pos:start="325:107" pos:end="325:107">-</operator> <literal type="number" pos:start="325:109" pos:end="325:109">1</literal><operator pos:start="325:110" pos:end="325:110">)</operator><operator pos:start="325:111" pos:end="325:111">)</operator> <operator pos:start="325:113" pos:end="325:113">*</operator> <name pos:start="325:115" pos:end="325:161"><name pos:start="325:115" pos:end="325:116">sc</name><operator pos:start="325:117" pos:end="325:118">-&gt;</operator><name pos:start="325:119" pos:end="325:133">sample_to_chunk</name><index pos:start="325:134" pos:end="325:161">[<expr pos:start="325:135" pos:end="325:160"><name pos:start="325:135" pos:end="325:160"><name pos:start="325:135" pos:end="325:137">msc</name><operator pos:start="325:138" pos:end="325:139">-&gt;</operator><name pos:start="325:140" pos:end="325:160">sample_to_chunk_index</name></name></expr>]</index></name><operator pos:start="325:162" pos:end="325:162">.</operator><name pos:start="325:163" pos:end="325:167">count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="327:9" pos:end="327:88"><expr pos:start="327:9" pos:end="327:87"><name pos:start="327:9" pos:end="327:26"><name pos:start="327:9" pos:end="327:11">msc</name><operator pos:start="327:12" pos:end="327:13">-&gt;</operator><name pos:start="327:14" pos:end="327:26">left_in_chunk</name></name> <operator pos:start="327:28" pos:end="327:28">=</operator> <name pos:start="327:30" pos:end="327:77"><name pos:start="327:30" pos:end="327:32">msc</name><operator pos:start="327:33" pos:end="327:34">-&gt;</operator><name pos:start="327:35" pos:end="327:49">sample_to_chunk</name><index pos:start="327:50" pos:end="327:77">[<expr pos:start="327:51" pos:end="327:76"><name pos:start="327:51" pos:end="327:76"><name pos:start="327:51" pos:end="327:53">msc</name><operator pos:start="327:54" pos:end="327:55">-&gt;</operator><name pos:start="327:56" pos:end="327:76">sample_to_chunk_index</name></name></expr>]</index></name><operator pos:start="327:78" pos:end="327:78">.</operator><name pos:start="327:79" pos:end="327:83">count</name> <operator pos:start="327:85" pos:end="327:85">-</operator> <literal type="number" pos:start="327:87" pos:end="327:87">1</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="329:9" pos:end="329:74">// Find corresponding position in stts (used later to compute dts)</comment>

        <expr_stmt pos:start="331:9" pos:end="331:19"><expr pos:start="331:9" pos:end="331:18"><name pos:start="331:9" pos:end="331:14">sample</name> <operator pos:start="331:16" pos:end="331:16">=</operator> <literal type="number" pos:start="331:18" pos:end="331:18">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:23"><expr pos:start="333:9" pos:end="333:22"><name pos:start="333:9" pos:end="333:18">start_time</name> <operator pos:start="333:20" pos:end="333:20">=</operator> <literal type="number" pos:start="333:22" pos:end="333:22">0</literal></expr>;</expr_stmt>

        <for pos:start="335:9" pos:end="355:9">for <control pos:start="335:13" pos:end="335:117">(<init pos:start="335:14" pos:end="335:43"><expr pos:start="335:14" pos:end="335:42"><name pos:start="335:14" pos:end="335:38"><name pos:start="335:14" pos:end="335:16">msc</name><operator pos:start="335:17" pos:end="335:18">-&gt;</operator><name pos:start="335:19" pos:end="335:38">sample_to_time_index</name></name> <operator pos:start="335:40" pos:end="335:40">=</operator> <literal type="number" pos:start="335:42" pos:end="335:42">0</literal></expr>;</init> <condition pos:start="335:45" pos:end="335:88"><expr pos:start="335:45" pos:end="335:87"><name pos:start="335:45" pos:end="335:69"><name pos:start="335:45" pos:end="335:47">msc</name><operator pos:start="335:48" pos:end="335:49">-&gt;</operator><name pos:start="335:50" pos:end="335:69">sample_to_time_index</name></name> <operator pos:start="335:71" pos:end="335:71">&lt;</operator> <name pos:start="335:73" pos:end="335:87"><name pos:start="335:73" pos:end="335:75">msc</name><operator pos:start="335:76" pos:end="335:77">-&gt;</operator><name pos:start="335:78" pos:end="335:87">stts_count</name></name></expr>;</condition> <incr pos:start="335:90" pos:end="335:116"><expr pos:start="335:90" pos:end="335:116"><name pos:start="335:90" pos:end="335:114"><name pos:start="335:90" pos:end="335:92">msc</name><operator pos:start="335:93" pos:end="335:94">-&gt;</operator><name pos:start="335:95" pos:end="335:114">sample_to_time_index</name></name><operator pos:start="335:115" pos:end="335:116">++</operator></expr></incr>)</control> <block pos:start="335:119" pos:end="355:9">{<block_content pos:start="337:13" pos:end="353:43">

            <expr_stmt pos:start="337:13" pos:end="337:68"><expr pos:start="337:13" pos:end="337:67"><name pos:start="337:13" pos:end="337:17">count</name> <operator pos:start="337:19" pos:end="337:19">=</operator> <name pos:start="337:21" pos:end="337:61"><name pos:start="337:21" pos:end="337:23">msc</name><operator pos:start="337:24" pos:end="337:25">-&gt;</operator><name pos:start="337:26" pos:end="337:34">stts_data</name><index pos:start="337:35" pos:end="337:61">[<expr pos:start="337:36" pos:end="337:60"><name pos:start="337:36" pos:end="337:60"><name pos:start="337:36" pos:end="337:38">msc</name><operator pos:start="337:39" pos:end="337:40">-&gt;</operator><name pos:start="337:41" pos:end="337:60">sample_to_time_index</name></name></expr>]</index></name><operator pos:start="337:62" pos:end="337:62">.</operator><name pos:start="337:63" pos:end="337:67">count</name></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:74"><expr pos:start="339:13" pos:end="339:73"><name pos:start="339:13" pos:end="339:20">duration</name> <operator pos:start="339:22" pos:end="339:22">=</operator> <name pos:start="339:24" pos:end="339:64"><name pos:start="339:24" pos:end="339:26">msc</name><operator pos:start="339:27" pos:end="339:28">-&gt;</operator><name pos:start="339:29" pos:end="339:37">stts_data</name><index pos:start="339:38" pos:end="339:64">[<expr pos:start="339:39" pos:end="339:63"><name pos:start="339:39" pos:end="339:63"><name pos:start="339:39" pos:end="339:41">msc</name><operator pos:start="339:42" pos:end="339:43">-&gt;</operator><name pos:start="339:44" pos:end="339:63">sample_to_time_index</name></name></expr>]</index></name><operator pos:start="339:65" pos:end="339:65">.</operator><name pos:start="339:66" pos:end="339:73">duration</name></expr>;</expr_stmt>

            <if_stmt pos:start="341:13" pos:end="349:13"><if pos:start="341:13" pos:end="349:13">if <condition pos:start="341:16" pos:end="341:59">(<expr pos:start="341:17" pos:end="341:58"><operator pos:start="341:17" pos:end="341:17">(</operator><name pos:start="341:18" pos:end="341:23">sample</name> <operator pos:start="341:25" pos:end="341:25">+</operator> <name pos:start="341:27" pos:end="341:31">count</name> <operator pos:start="341:33" pos:end="341:33">-</operator> <literal type="number" pos:start="341:35" pos:end="341:35">1</literal><operator pos:start="341:36" pos:end="341:36">)</operator> <operator pos:start="341:38" pos:end="341:38">&gt;</operator> <name pos:start="341:40" pos:end="341:58"><name pos:start="341:40" pos:end="341:42">msc</name><operator pos:start="341:43" pos:end="341:44">-&gt;</operator><name pos:start="341:45" pos:end="341:58">current_sample</name></name></expr>)</condition> <block pos:start="341:61" pos:end="349:13">{<block_content pos:start="343:17" pos:end="347:22">

                <expr_stmt pos:start="343:17" pos:end="343:54"><expr pos:start="343:17" pos:end="343:53"><name pos:start="343:17" pos:end="343:40"><name pos:start="343:17" pos:end="343:19">msc</name><operator pos:start="343:20" pos:end="343:21">-&gt;</operator><name pos:start="343:22" pos:end="343:40">sample_to_time_time</name></name> <operator pos:start="343:42" pos:end="343:42">=</operator> <name pos:start="343:44" pos:end="343:53">start_time</name></expr>;</expr_stmt>

                <expr_stmt pos:start="345:17" pos:end="345:52"><expr pos:start="345:17" pos:end="345:51"><name pos:start="345:17" pos:end="345:42"><name pos:start="345:17" pos:end="345:19">msc</name><operator pos:start="345:20" pos:end="345:21">-&gt;</operator><name pos:start="345:22" pos:end="345:42">sample_to_time_sample</name></name> <operator pos:start="345:44" pos:end="345:44">=</operator> <name pos:start="345:46" pos:end="345:51">sample</name></expr>;</expr_stmt>

                <break pos:start="347:17" pos:end="347:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:28"><expr pos:start="351:13" pos:end="351:27"><name pos:start="351:13" pos:end="351:18">sample</name> <operator pos:start="351:20" pos:end="351:21">+=</operator> <name pos:start="351:23" pos:end="351:27">count</name></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:43"><expr pos:start="353:13" pos:end="353:42"><name pos:start="353:13" pos:end="353:22">start_time</name> <operator pos:start="353:24" pos:end="353:25">+=</operator> <name pos:start="353:27" pos:end="353:31">count</name> <operator pos:start="353:33" pos:end="353:33">*</operator> <name pos:start="353:35" pos:end="353:42">duration</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="357:9" pos:end="357:19"><expr pos:start="357:9" pos:end="357:18"><name pos:start="357:9" pos:end="357:14">sample</name> <operator pos:start="357:16" pos:end="357:16">=</operator> <literal type="number" pos:start="357:18" pos:end="357:18">0</literal></expr>;</expr_stmt>

        <for pos:start="359:9" pos:end="375:9">for <control pos:start="359:13" pos:end="359:120">(<init pos:start="359:14" pos:end="359:44"><expr pos:start="359:14" pos:end="359:43"><name pos:start="359:14" pos:end="359:39"><name pos:start="359:14" pos:end="359:16">msc</name><operator pos:start="359:17" pos:end="359:18">-&gt;</operator><name pos:start="359:19" pos:end="359:39">sample_to_ctime_index</name></name> <operator pos:start="359:41" pos:end="359:41">=</operator> <literal type="number" pos:start="359:43" pos:end="359:43">0</literal></expr>;</init> <condition pos:start="359:46" pos:end="359:90"><expr pos:start="359:46" pos:end="359:89"><name pos:start="359:46" pos:end="359:71"><name pos:start="359:46" pos:end="359:48">msc</name><operator pos:start="359:49" pos:end="359:50">-&gt;</operator><name pos:start="359:51" pos:end="359:71">sample_to_ctime_index</name></name> <operator pos:start="359:73" pos:end="359:73">&lt;</operator> <name pos:start="359:75" pos:end="359:89"><name pos:start="359:75" pos:end="359:77">msc</name><operator pos:start="359:78" pos:end="359:79">-&gt;</operator><name pos:start="359:80" pos:end="359:89">ctts_count</name></name></expr>;</condition> <incr pos:start="359:92" pos:end="359:119"><expr pos:start="359:92" pos:end="359:119"><name pos:start="359:92" pos:end="359:117"><name pos:start="359:92" pos:end="359:94">msc</name><operator pos:start="359:95" pos:end="359:96">-&gt;</operator><name pos:start="359:97" pos:end="359:117">sample_to_ctime_index</name></name><operator pos:start="359:118" pos:end="359:119">++</operator></expr></incr>)</control> <block pos:start="359:122" pos:end="375:9">{<block_content pos:start="361:13" pos:end="373:28">

            <expr_stmt pos:start="361:13" pos:end="361:69"><expr pos:start="361:13" pos:end="361:68"><name pos:start="361:13" pos:end="361:17">count</name> <operator pos:start="361:19" pos:end="361:19">=</operator> <name pos:start="361:21" pos:end="361:62"><name pos:start="361:21" pos:end="361:23">msc</name><operator pos:start="361:24" pos:end="361:25">-&gt;</operator><name pos:start="361:26" pos:end="361:34">ctts_data</name><index pos:start="361:35" pos:end="361:62">[<expr pos:start="361:36" pos:end="361:61"><name pos:start="361:36" pos:end="361:61"><name pos:start="361:36" pos:end="361:38">msc</name><operator pos:start="361:39" pos:end="361:40">-&gt;</operator><name pos:start="361:41" pos:end="361:61">sample_to_ctime_index</name></name></expr>]</index></name><operator pos:start="361:63" pos:end="361:63">.</operator><name pos:start="361:64" pos:end="361:68">count</name></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:75"><expr pos:start="363:13" pos:end="363:74"><name pos:start="363:13" pos:end="363:20">duration</name> <operator pos:start="363:22" pos:end="363:22">=</operator> <name pos:start="363:24" pos:end="363:65"><name pos:start="363:24" pos:end="363:26">msc</name><operator pos:start="363:27" pos:end="363:28">-&gt;</operator><name pos:start="363:29" pos:end="363:37">ctts_data</name><index pos:start="363:38" pos:end="363:65">[<expr pos:start="363:39" pos:end="363:64"><name pos:start="363:39" pos:end="363:64"><name pos:start="363:39" pos:end="363:41">msc</name><operator pos:start="363:42" pos:end="363:43">-&gt;</operator><name pos:start="363:44" pos:end="363:64">sample_to_ctime_index</name></name></expr>]</index></name><operator pos:start="363:66" pos:end="363:66">.</operator><name pos:start="363:67" pos:end="363:74">duration</name></expr>;</expr_stmt>

            <if_stmt pos:start="365:13" pos:end="371:13"><if pos:start="365:13" pos:end="371:13">if <condition pos:start="365:16" pos:end="365:59">(<expr pos:start="365:17" pos:end="365:58"><operator pos:start="365:17" pos:end="365:17">(</operator><name pos:start="365:18" pos:end="365:23">sample</name> <operator pos:start="365:25" pos:end="365:25">+</operator> <name pos:start="365:27" pos:end="365:31">count</name> <operator pos:start="365:33" pos:end="365:33">-</operator> <literal type="number" pos:start="365:35" pos:end="365:35">1</literal><operator pos:start="365:36" pos:end="365:36">)</operator> <operator pos:start="365:38" pos:end="365:38">&gt;</operator> <name pos:start="365:40" pos:end="365:58"><name pos:start="365:40" pos:end="365:42">msc</name><operator pos:start="365:43" pos:end="365:44">-&gt;</operator><name pos:start="365:45" pos:end="365:58">current_sample</name></name></expr>)</condition> <block pos:start="365:61" pos:end="371:13">{<block_content pos:start="367:17" pos:end="369:22">

                <expr_stmt pos:start="367:17" pos:end="367:53"><expr pos:start="367:17" pos:end="367:52"><name pos:start="367:17" pos:end="367:43"><name pos:start="367:17" pos:end="367:19">msc</name><operator pos:start="367:20" pos:end="367:21">-&gt;</operator><name pos:start="367:22" pos:end="367:43">sample_to_ctime_sample</name></name> <operator pos:start="367:45" pos:end="367:45">=</operator> <name pos:start="367:47" pos:end="367:52">sample</name></expr>;</expr_stmt>

                <break pos:start="369:17" pos:end="369:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:28"><expr pos:start="373:13" pos:end="373:27"><name pos:start="373:13" pos:end="373:18">sample</name> <operator pos:start="373:20" pos:end="373:21">+=</operator> <name pos:start="373:23" pos:end="373:27">count</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="377:9" pos:end="377:121"><expr pos:start="377:9" pos:end="377:120"><call pos:start="377:9" pos:end="377:120"><name pos:start="377:9" pos:end="377:15">dprintf</name><argument_list pos:start="377:16" pos:end="377:120">(<argument pos:start="377:17" pos:end="377:59"><expr pos:start="377:17" pos:end="377:59"><literal type="string" pos:start="377:17" pos:end="377:59">"Next Sample for stream #%i is #%li @%li\n"</literal></expr></argument>, <argument pos:start="377:62" pos:end="377:62"><expr pos:start="377:62" pos:end="377:62"><name pos:start="377:62" pos:end="377:62">i</name></expr></argument>, <argument pos:start="377:65" pos:end="377:87"><expr pos:start="377:65" pos:end="377:87"><name pos:start="377:65" pos:end="377:83"><name pos:start="377:65" pos:end="377:67">msc</name><operator pos:start="377:68" pos:end="377:69">-&gt;</operator><name pos:start="377:70" pos:end="377:83">current_sample</name></name> <operator pos:start="377:85" pos:end="377:85">+</operator> <literal type="number" pos:start="377:87" pos:end="377:87">1</literal></expr></argument>, <argument pos:start="377:90" pos:end="377:119"><expr pos:start="377:90" pos:end="377:119"><name pos:start="377:90" pos:end="377:115"><name pos:start="377:90" pos:end="377:92">msc</name><operator pos:start="377:93" pos:end="377:94">-&gt;</operator><name pos:start="377:95" pos:end="377:115">sample_to_chunk_index</name></name> <operator pos:start="377:117" pos:end="377:117">+</operator> <literal type="number" pos:start="377:119" pos:end="377:119">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="381:5" pos:end="381:13">return <expr pos:start="381:12" pos:end="381:12"><literal type="number" pos:start="381:12" pos:end="381:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
