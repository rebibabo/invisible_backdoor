<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19144.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">block_crypto_open_generic</name><parameter_list pos:start="1:37" pos:end="11:50">(<parameter pos:start="1:38" pos:end="1:62"><decl pos:start="1:38" pos:end="1:62"><type pos:start="1:38" pos:end="1:62"><name pos:start="1:38" pos:end="1:55">QCryptoBlockFormat</name></type> <name pos:start="1:57" pos:end="1:62">format</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:60"><decl pos:start="3:38" pos:end="3:60"><type pos:start="3:38" pos:end="3:60"><name pos:start="3:38" pos:end="3:49">QemuOptsList</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:60">opts_spec</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:57"><decl pos:start="5:38" pos:end="5:57"><type pos:start="5:38" pos:end="5:57"><name pos:start="5:38" pos:end="5:53">BlockDriverState</name> <modifier pos:start="5:55" pos:end="5:55">*</modifier></type><name pos:start="5:56" pos:end="5:57">bs</name></decl></parameter>,

                                     <parameter pos:start="7:38" pos:end="7:51"><decl pos:start="7:38" pos:end="7:51"><type pos:start="7:38" pos:end="7:51"><name pos:start="7:38" pos:end="7:42">QDict</name> <modifier pos:start="7:44" pos:end="7:44">*</modifier></type><name pos:start="7:45" pos:end="7:51">options</name></decl></parameter>,

                                     <parameter pos:start="9:38" pos:end="9:46"><decl pos:start="9:38" pos:end="9:46"><type pos:start="9:38" pos:end="9:46"><name pos:start="9:38" pos:end="9:40">int</name></type> <name pos:start="9:42" pos:end="9:46">flags</name></decl></parameter>,

                                     <parameter pos:start="11:38" pos:end="11:49"><decl pos:start="11:38" pos:end="11:49"><type pos:start="11:38" pos:end="11:49"><name pos:start="11:38" pos:end="11:42">Error</name> <modifier pos:start="11:44" pos:end="11:44">*</modifier><modifier pos:start="11:45" pos:end="11:45">*</modifier></type><name pos:start="11:46" pos:end="11:49">errp</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="107:1">{<block_content pos:start="15:5" pos:end="105:15">

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:15">BlockCrypto</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:23">crypto</name> <init pos:start="15:25" pos:end="15:36">= <expr pos:start="15:27" pos:end="15:36"><name pos:start="15:27" pos:end="15:36"><name pos:start="15:27" pos:end="15:28">bs</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:36">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">QemuOpts</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:18">opts</name> <init pos:start="17:20" pos:end="17:25">= <expr pos:start="17:22" pos:end="17:25"><name pos:start="17:22" pos:end="17:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:9">Error</name> <modifier pos:start="19:11" pos:end="19:11">*</modifier></type><name pos:start="19:12" pos:end="19:20">local_err</name> <init pos:start="19:22" pos:end="19:27">= <expr pos:start="19:24" pos:end="19:27"><name pos:start="19:24" pos:end="19:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name> <init pos:start="21:13" pos:end="21:21">= <expr pos:start="21:15" pos:end="21:21"><operator pos:start="21:15" pos:end="21:15">-</operator><name pos:start="21:16" pos:end="21:21">EINVAL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:46"><decl pos:start="23:5" pos:end="23:45"><type pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:27">QCryptoBlockOpenOptions</name> <modifier pos:start="23:29" pos:end="23:29">*</modifier></type><name pos:start="23:30" pos:end="23:38">open_opts</name> <init pos:start="23:40" pos:end="23:45">= <expr pos:start="23:42" pos:end="23:45"><name pos:start="23:42" pos:end="23:45">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:27"><type pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:12">unsigned</name> <name pos:start="25:14" pos:end="25:16">int</name></type> <name pos:start="25:18" pos:end="25:23">cflags</name> <init pos:start="25:25" pos:end="25:27">= <expr pos:start="25:27" pos:end="25:27"><literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="31:44"><expr pos:start="29:5" pos:end="31:43"><name pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:6">bs</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:12">file</name></name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="31:43"><name pos:start="29:16" pos:end="29:30">bdrv_open_child</name><argument_list pos:start="29:31" pos:end="31:43">(<argument pos:start="29:32" pos:end="29:35"><expr pos:start="29:32" pos:end="29:35"><name pos:start="29:32" pos:end="29:35">NULL</name></expr></argument>, <argument pos:start="29:38" pos:end="29:44"><expr pos:start="29:38" pos:end="29:44"><name pos:start="29:38" pos:end="29:44">options</name></expr></argument>, <argument pos:start="29:47" pos:end="29:52"><expr pos:start="29:47" pos:end="29:52"><literal type="string" pos:start="29:47" pos:end="29:52">"file"</literal></expr></argument>, <argument pos:start="29:55" pos:end="29:56"><expr pos:start="29:55" pos:end="29:56"><name pos:start="29:55" pos:end="29:56">bs</name></expr></argument>, <argument pos:start="29:59" pos:end="29:69"><expr pos:start="29:59" pos:end="29:69"><operator pos:start="29:59" pos:end="29:59">&amp;</operator><name pos:start="29:60" pos:end="29:69">child_file</name></expr></argument>,

                               <argument pos:start="31:32" pos:end="31:36"><expr pos:start="31:32" pos:end="31:36"><name pos:start="31:32" pos:end="31:36">false</name></expr></argument>, <argument pos:start="31:39" pos:end="31:42"><expr pos:start="31:39" pos:end="31:42"><name pos:start="31:39" pos:end="31:42">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:17"><name pos:start="33:10" pos:end="33:11">bs</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:17">file</name></name></expr>)</condition> <block pos:start="33:20" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:23">

        <return pos:start="35:9" pos:end="35:23">return <expr pos:start="35:16" pos:end="35:22"><operator pos:start="35:16" pos:end="35:16">-</operator><name pos:start="35:17" pos:end="35:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:62"><expr pos:start="41:5" pos:end="41:61"><name pos:start="41:5" pos:end="41:8">opts</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <call pos:start="41:12" pos:end="41:61"><name pos:start="41:12" pos:end="41:27">qemu_opts_create</name><argument_list pos:start="41:28" pos:end="41:61">(<argument pos:start="41:29" pos:end="41:37"><expr pos:start="41:29" pos:end="41:37"><name pos:start="41:29" pos:end="41:37">opts_spec</name></expr></argument>, <argument pos:start="41:40" pos:end="41:43"><expr pos:start="41:40" pos:end="41:43"><name pos:start="41:40" pos:end="41:43">NULL</name></expr></argument>, <argument pos:start="41:46" pos:end="41:46"><expr pos:start="41:46" pos:end="41:46"><literal type="number" pos:start="41:46" pos:end="41:46">0</literal></expr></argument>, <argument pos:start="41:49" pos:end="41:60"><expr pos:start="41:49" pos:end="41:60"><operator pos:start="41:49" pos:end="41:49">&amp;</operator><name pos:start="41:50" pos:end="41:60">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:54"><expr pos:start="43:5" pos:end="43:53"><call pos:start="43:5" pos:end="43:53"><name pos:start="43:5" pos:end="43:26">qemu_opts_absorb_qdict</name><argument_list pos:start="43:27" pos:end="43:53">(<argument pos:start="43:28" pos:end="43:31"><expr pos:start="43:28" pos:end="43:31"><name pos:start="43:28" pos:end="43:31">opts</name></expr></argument>, <argument pos:start="43:34" pos:end="43:40"><expr pos:start="43:34" pos:end="43:40"><name pos:start="43:34" pos:end="43:40">options</name></expr></argument>, <argument pos:start="43:43" pos:end="43:52"><expr pos:start="43:43" pos:end="43:52"><operator pos:start="43:43" pos:end="43:43">&amp;</operator><name pos:start="43:44" pos:end="43:52">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:18">(<expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:17">local_err</name></expr>)</condition> <block pos:start="45:20" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:21">

        <expr_stmt pos:start="47:9" pos:end="47:41"><expr pos:start="47:9" pos:end="47:40"><call pos:start="47:9" pos:end="47:40"><name pos:start="47:9" pos:end="47:23">error_propagate</name><argument_list pos:start="47:24" pos:end="47:40">(<argument pos:start="47:25" pos:end="47:28"><expr pos:start="47:25" pos:end="47:28"><name pos:start="47:25" pos:end="47:28">errp</name></expr></argument>, <argument pos:start="47:31" pos:end="47:39"><expr pos:start="47:31" pos:end="47:39"><name pos:start="47:31" pos:end="47:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:21">goto <name pos:start="49:14" pos:end="49:20">cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:64"><expr pos:start="55:5" pos:end="55:63"><name pos:start="55:5" pos:end="55:13">open_opts</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <call pos:start="55:17" pos:end="55:63"><name pos:start="55:17" pos:end="55:43">block_crypto_open_opts_init</name><argument_list pos:start="55:44" pos:end="55:63">(<argument pos:start="55:45" pos:end="55:50"><expr pos:start="55:45" pos:end="55:50"><name pos:start="55:45" pos:end="55:50">format</name></expr></argument>, <argument pos:start="55:53" pos:end="55:56"><expr pos:start="55:53" pos:end="55:56"><name pos:start="55:53" pos:end="55:56">opts</name></expr></argument>, <argument pos:start="55:59" pos:end="55:62"><expr pos:start="55:59" pos:end="55:62"><name pos:start="55:59" pos:end="55:62">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:19">(<expr pos:start="57:9" pos:end="57:18"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:18">open_opts</name></expr>)</condition> <block pos:start="57:21" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:21">

        <goto pos:start="59:9" pos:end="59:21">goto <name pos:start="59:14" pos:end="59:20">cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:29">(<expr pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:13">flags</name> <operator pos:start="65:15" pos:end="65:15">&amp;</operator> <name pos:start="65:17" pos:end="65:28">BDRV_O_NO_IO</name></expr>)</condition> <block pos:start="65:31" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:43">

        <expr_stmt pos:start="67:9" pos:end="67:43"><expr pos:start="67:9" pos:end="67:42"><name pos:start="67:9" pos:end="67:14">cflags</name> <operator pos:start="67:16" pos:end="67:17">|=</operator> <name pos:start="67:19" pos:end="67:42">QCRYPTO_BLOCK_OPEN_NO_IO</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="79:45"><expr pos:start="71:5" pos:end="79:44"><name pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:10">crypto</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:17">block</name></name> <operator pos:start="71:19" pos:end="71:19">=</operator> <call pos:start="71:21" pos:end="79:44"><name pos:start="71:21" pos:end="71:38">qcrypto_block_open</name><argument_list pos:start="71:39" pos:end="79:44">(<argument pos:start="71:40" pos:end="71:48"><expr pos:start="71:40" pos:end="71:48"><name pos:start="71:40" pos:end="71:48">open_opts</name></expr></argument>,

                                       <argument pos:start="73:40" pos:end="73:61"><expr pos:start="73:40" pos:end="73:61"><name pos:start="73:40" pos:end="73:61">block_crypto_read_func</name></expr></argument>,

                                       <argument pos:start="75:40" pos:end="75:41"><expr pos:start="75:40" pos:end="75:41"><name pos:start="75:40" pos:end="75:41">bs</name></expr></argument>,

                                       <argument pos:start="77:40" pos:end="77:45"><expr pos:start="77:40" pos:end="77:45"><name pos:start="77:40" pos:end="77:45">cflags</name></expr></argument>,

                                       <argument pos:start="79:40" pos:end="79:43"><expr pos:start="79:40" pos:end="79:43"><name pos:start="79:40" pos:end="79:43">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:23">(<expr pos:start="83:9" pos:end="83:22"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:22"><name pos:start="83:10" pos:end="83:15">crypto</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:22">block</name></name></expr>)</condition> <block pos:start="83:25" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:21">

        <expr_stmt pos:start="85:9" pos:end="85:19"><expr pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <operator pos:start="85:15" pos:end="85:15">-</operator><name pos:start="85:16" pos:end="85:18">EIO</name></expr>;</expr_stmt>

        <goto pos:start="87:9" pos:end="87:21">goto <name pos:start="87:14" pos:end="87:20">cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:25"><expr pos:start="93:5" pos:end="93:24"><name pos:start="93:5" pos:end="93:17"><name pos:start="93:5" pos:end="93:6">bs</name><operator pos:start="93:7" pos:end="93:8">-&gt;</operator><name pos:start="93:9" pos:end="93:17">encrypted</name></name> <operator pos:start="93:19" pos:end="93:19">=</operator> <name pos:start="93:21" pos:end="93:24">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:25"><expr pos:start="95:5" pos:end="95:24"><name pos:start="95:5" pos:end="95:17"><name pos:start="95:5" pos:end="95:6">bs</name><operator pos:start="95:7" pos:end="95:8">-&gt;</operator><name pos:start="95:9" pos:end="95:17">valid_key</name></name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:24">true</name></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:12"><expr pos:start="99:5" pos:end="99:11"><name pos:start="99:5" pos:end="99:7">ret</name> <operator pos:start="99:9" pos:end="99:9">=</operator> <literal type="number" pos:start="99:11" pos:end="99:11">0</literal></expr>;</expr_stmt>

 <label pos:start="101:2" pos:end="101:9"><name pos:start="101:2" pos:end="101:8">cleanup</name>:</label>

    <expr_stmt pos:start="103:5" pos:end="103:49"><expr pos:start="103:5" pos:end="103:48"><call pos:start="103:5" pos:end="103:48"><name pos:start="103:5" pos:end="103:37">qapi_free_QCryptoBlockOpenOptions</name><argument_list pos:start="103:38" pos:end="103:48">(<argument pos:start="103:39" pos:end="103:47"><expr pos:start="103:39" pos:end="103:47"><name pos:start="103:39" pos:end="103:47">open_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="105:5" pos:end="105:15">return <expr pos:start="105:12" pos:end="105:14"><name pos:start="105:12" pos:end="105:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
