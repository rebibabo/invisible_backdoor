<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25632.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">os_setup_post</name><parameter_list pos:start="1:19" pos:end="1:24">(<parameter pos:start="1:20" pos:end="1:23"><decl pos:start="1:20" pos:end="1:23"><type pos:start="1:20" pos:end="1:23"><name pos:start="1:20" pos:end="1:23">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:5">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">fd</name> <init pos:start="5:12" pos:end="5:14">= <expr pos:start="5:14" pos:end="5:14"><literal type="number" pos:start="5:14" pos:end="5:14">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="49:5"><if pos:start="9:5" pos:end="49:5">if <condition pos:start="9:8" pos:end="9:18">(<expr pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:17">daemonize</name></expr>)</condition> <block pos:start="9:20" pos:end="49:5">{<block_content pos:start="11:9" pos:end="47:9">

        <decl_stmt pos:start="11:9" pos:end="11:27"><decl pos:start="11:9" pos:end="11:26"><type pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:15">uint8_t</name></type> <name pos:start="11:17" pos:end="11:22">status</name> <init pos:start="11:24" pos:end="11:26">= <expr pos:start="11:26" pos:end="11:26"><literal type="number" pos:start="11:26" pos:end="11:26">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:20"><decl pos:start="13:9" pos:end="13:19"><type pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:15">ssize_t</name></type> <name pos:start="13:17" pos:end="13:19">len</name></decl>;</decl_stmt>



    <label pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:10">again1</name>:</label>

        <expr_stmt pos:start="19:9" pos:end="19:45"><expr pos:start="19:9" pos:end="19:44"><name pos:start="19:9" pos:end="19:11">len</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:44"><name pos:start="19:15" pos:end="19:19">write</name><argument_list pos:start="19:20" pos:end="19:44">(<argument pos:start="19:21" pos:end="19:31"><expr pos:start="19:21" pos:end="19:31"><name pos:start="19:21" pos:end="19:31">daemon_pipe</name></expr></argument>, <argument pos:start="19:34" pos:end="19:40"><expr pos:start="19:34" pos:end="19:40"><operator pos:start="19:34" pos:end="19:34">&amp;</operator><name pos:start="19:35" pos:end="19:40">status</name></expr></argument>, <argument pos:start="19:43" pos:end="19:43"><expr pos:start="19:43" pos:end="19:43"><literal type="number" pos:start="19:43" pos:end="19:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:42">(<expr pos:start="21:13" pos:end="21:41"><name pos:start="21:13" pos:end="21:15">len</name> <operator pos:start="21:17" pos:end="21:18">==</operator> <operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal> <operator pos:start="21:23" pos:end="21:24">&amp;&amp;</operator> <operator pos:start="21:26" pos:end="21:26">(</operator><name pos:start="21:27" pos:end="21:31">errno</name> <operator pos:start="21:33" pos:end="21:34">==</operator> <name pos:start="21:36" pos:end="21:40">EINTR</name><operator pos:start="21:41" pos:end="21:41">)</operator></expr>)</condition> <block pos:start="21:44" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:24">

            <goto pos:start="23:13" pos:end="23:24">goto <name pos:start="23:18" pos:end="23:23">again1</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:21">(<expr pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:15">len</name> <operator pos:start="27:17" pos:end="27:18">!=</operator> <literal type="number" pos:start="27:20" pos:end="27:20">1</literal></expr>)</condition> <block pos:start="27:23" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:20">

            <expr_stmt pos:start="29:13" pos:end="29:20"><expr pos:start="29:13" pos:end="29:19"><call pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:16">exit</name><argument_list pos:start="29:17" pos:end="29:19">(<argument pos:start="29:18" pos:end="29:18"><expr pos:start="29:18" pos:end="29:18"><literal type="number" pos:start="29:18" pos:end="29:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:23">(<expr pos:start="33:13" pos:end="33:22"><call pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:17">chdir</name><argument_list pos:start="33:18" pos:end="33:22">(<argument pos:start="33:19" pos:end="33:21"><expr pos:start="33:19" pos:end="33:21"><literal type="string" pos:start="33:19" pos:end="33:21">"/"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:25" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:20">

            <expr_stmt pos:start="35:13" pos:end="35:45"><expr pos:start="35:13" pos:end="35:44"><call pos:start="35:13" pos:end="35:44"><name pos:start="35:13" pos:end="35:18">perror</name><argument_list pos:start="35:19" pos:end="35:44">(<argument pos:start="35:20" pos:end="35:43"><expr pos:start="35:20" pos:end="35:43"><literal type="string" pos:start="35:20" pos:end="35:43">"not able to chdir to /"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:20"><expr pos:start="37:13" pos:end="37:19"><call pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:16">exit</name><argument_list pos:start="37:17" pos:end="37:19">(<argument pos:start="37:18" pos:end="37:18"><expr pos:start="37:18" pos:end="37:18"><literal type="number" pos:start="37:18" pos:end="37:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><call pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:11">TFR</name><argument_list pos:start="41:12" pos:end="41:48">(<argument pos:start="41:13" pos:end="41:47"><expr pos:start="41:13" pos:end="41:47"><name pos:start="41:13" pos:end="41:14">fd</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <call pos:start="41:18" pos:end="41:47"><name pos:start="41:18" pos:end="41:26">qemu_open</name><argument_list pos:start="41:27" pos:end="41:47">(<argument pos:start="41:28" pos:end="41:38"><expr pos:start="41:28" pos:end="41:38"><literal type="string" pos:start="41:28" pos:end="41:38">"/dev/null"</literal></expr></argument>, <argument pos:start="41:41" pos:end="41:46"><expr pos:start="41:41" pos:end="41:46"><name pos:start="41:41" pos:end="41:46">O_RDWR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:21">(<expr pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:14">fd</name> <operator pos:start="43:16" pos:end="43:17">==</operator> <operator pos:start="43:19" pos:end="43:19">-</operator><literal type="number" pos:start="43:20" pos:end="43:20">1</literal></expr>)</condition> <block pos:start="43:23" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:20">

            <expr_stmt pos:start="45:13" pos:end="45:20"><expr pos:start="45:13" pos:end="45:19"><call pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:16">exit</name><argument_list pos:start="45:17" pos:end="45:19">(<argument pos:start="45:18" pos:end="45:18"><expr pos:start="45:18" pos:end="45:18"><literal type="number" pos:start="45:18" pos:end="45:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:18"><expr pos:start="53:5" pos:end="53:17"><call pos:start="53:5" pos:end="53:17"><name pos:start="53:5" pos:end="53:15">change_root</name><argument_list pos:start="53:16" pos:end="53:17">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:25"><expr pos:start="55:5" pos:end="55:24"><call pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:22">change_process_uid</name><argument_list pos:start="55:23" pos:end="55:24">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="59:5" pos:end="71:5"><if pos:start="59:5" pos:end="71:5">if <condition pos:start="59:8" pos:end="59:18">(<expr pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:17">daemonize</name></expr>)</condition> <block pos:start="59:20" pos:end="71:5">{<block_content pos:start="61:9" pos:end="69:18">

        <expr_stmt pos:start="61:9" pos:end="61:20"><expr pos:start="61:9" pos:end="61:19"><call pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:12">dup2</name><argument_list pos:start="61:13" pos:end="61:19">(<argument pos:start="61:14" pos:end="61:15"><expr pos:start="61:14" pos:end="61:15"><name pos:start="61:14" pos:end="61:15">fd</name></expr></argument>, <argument pos:start="61:18" pos:end="61:18"><expr pos:start="61:18" pos:end="61:18"><literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:20"><expr pos:start="63:9" pos:end="63:19"><call pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:12">dup2</name><argument_list pos:start="63:13" pos:end="63:19">(<argument pos:start="63:14" pos:end="63:15"><expr pos:start="63:14" pos:end="63:15"><name pos:start="63:14" pos:end="63:15">fd</name></expr></argument>, <argument pos:start="63:18" pos:end="63:18"><expr pos:start="63:18" pos:end="63:18"><literal type="number" pos:start="63:18" pos:end="63:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:20"><expr pos:start="65:9" pos:end="65:19"><call pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:12">dup2</name><argument_list pos:start="65:13" pos:end="65:19">(<argument pos:start="65:14" pos:end="65:15"><expr pos:start="65:14" pos:end="65:15"><name pos:start="65:14" pos:end="65:15">fd</name></expr></argument>, <argument pos:start="65:18" pos:end="65:18"><expr pos:start="65:18" pos:end="65:18"><literal type="number" pos:start="65:18" pos:end="65:18">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:18"><expr pos:start="69:9" pos:end="69:17"><call pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:13">close</name><argument_list pos:start="69:14" pos:end="69:17">(<argument pos:start="69:15" pos:end="69:16"><expr pos:start="69:15" pos:end="69:16"><name pos:start="69:15" pos:end="69:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
