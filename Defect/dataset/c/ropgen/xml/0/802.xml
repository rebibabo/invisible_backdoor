<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/802.c" pos:tabs="8"><function pos:start="1:1" pos:end="1099:1"><type pos:start="1:1" pos:end="1:20"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">sd_rsp_type_t</name></type> <name pos:start="1:22" pos:end="1:38">sd_normal_command</name><parameter_list pos:start="1:39" pos:end="3:53">(<parameter pos:start="1:40" pos:end="1:50"><decl pos:start="1:40" pos:end="1:50"><type pos:start="1:40" pos:end="1:50"><name pos:start="1:40" pos:end="1:46">SDState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">sd</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:52"><decl pos:start="3:40" pos:end="3:52"><type pos:start="3:40" pos:end="3:52"><name pos:start="3:40" pos:end="3:48">SDRequest</name></type> <name pos:start="3:50" pos:end="3:52">req</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="1099:1">{<block_content pos:start="7:5" pos:end="1097:22">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">rca</name> <init pos:start="7:18" pos:end="7:25">= <expr pos:start="7:20" pos:end="7:25"><literal type="number" pos:start="7:20" pos:end="7:25">0x0000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:78"><decl pos:start="9:5" pos:end="9:77"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:17">addr</name> <init pos:start="9:19" pos:end="9:77">= <expr pos:start="9:21" pos:end="9:77"><ternary pos:start="9:21" pos:end="9:77"><condition pos:start="9:21" pos:end="9:43"><expr pos:start="9:21" pos:end="9:41"><operator pos:start="9:21" pos:end="9:21">(</operator><name pos:start="9:22" pos:end="9:28"><name pos:start="9:22" pos:end="9:23">sd</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:28">ocr</name></name> <operator pos:start="9:30" pos:end="9:30">&amp;</operator> <operator pos:start="9:32" pos:end="9:32">(</operator><literal type="number" pos:start="9:33" pos:end="9:33">1</literal> <operator pos:start="9:35" pos:end="9:36">&lt;&lt;</operator> <literal type="number" pos:start="9:38" pos:end="9:39">30</literal><operator pos:start="9:40" pos:end="9:40">)</operator><operator pos:start="9:41" pos:end="9:41">)</operator></expr> ?</condition><then pos:start="9:45" pos:end="9:67"> <expr pos:start="9:45" pos:end="9:67"><operator pos:start="9:45" pos:end="9:45">(</operator><name pos:start="9:46" pos:end="9:53">uint64_t</name><operator pos:start="9:54" pos:end="9:54">)</operator> <name pos:start="9:56" pos:end="9:62"><name pos:start="9:56" pos:end="9:58">req</name><operator pos:start="9:59" pos:end="9:59">.</operator><name pos:start="9:60" pos:end="9:62">arg</name></name> <operator pos:start="9:64" pos:end="9:65">&lt;&lt;</operator> <literal type="number" pos:start="9:67" pos:end="9:67">9</literal></expr> </then><else pos:start="9:69" pos:end="9:77">: <expr pos:start="9:71" pos:end="9:77"><name pos:start="9:71" pos:end="9:77"><name pos:start="9:71" pos:end="9:73">req</name><operator pos:start="9:74" pos:end="9:74">.</operator><name pos:start="9:75" pos:end="9:77">arg</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:49">/* Not interpreting this as an app command */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:6">sd</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:19">card_status</name></name> <operator pos:start="15:21" pos:end="15:22">&amp;=</operator> <operator pos:start="15:24" pos:end="15:24">~</operator><name pos:start="15:25" pos:end="15:31">APP_CMD</name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="21:28"><if pos:start="19:5" pos:end="21:28">if <condition pos:start="19:8" pos:end="19:73">(<expr pos:start="19:9" pos:end="19:72"><name pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:19">sd_cmd_type</name><index pos:start="19:20" pos:end="19:28">[<expr pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:23">req</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:27">cmd</name></name></expr>]</index></name> <operator pos:start="19:30" pos:end="19:31">==</operator> <name pos:start="19:33" pos:end="19:37">sd_ac</name> <operator pos:start="19:39" pos:end="19:40">||</operator> <name pos:start="19:42" pos:end="19:61"><name pos:start="19:42" pos:end="19:52">sd_cmd_type</name><index pos:start="19:53" pos:end="19:61">[<expr pos:start="19:54" pos:end="19:60"><name pos:start="19:54" pos:end="19:60"><name pos:start="19:54" pos:end="19:56">req</name><operator pos:start="19:57" pos:end="19:57">.</operator><name pos:start="19:58" pos:end="19:60">cmd</name></name></expr>]</index></name> <operator pos:start="19:63" pos:end="19:64">==</operator> <name pos:start="19:66" pos:end="19:72">sd_adtc</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:28"><block_content pos:start="21:9" pos:end="21:28">

        <expr_stmt pos:start="21:9" pos:end="21:28"><expr pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:11">rca</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:21"><name pos:start="21:15" pos:end="21:17">req</name><operator pos:start="21:18" pos:end="21:18">.</operator><name pos:start="21:19" pos:end="21:21">arg</name></name> <operator pos:start="21:23" pos:end="21:24">&gt;&gt;</operator> <literal type="number" pos:start="21:26" pos:end="21:27">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:68"><expr pos:start="25:5" pos:end="25:67"><call pos:start="25:5" pos:end="25:67"><name pos:start="25:5" pos:end="25:11">DPRINTF</name><argument_list pos:start="25:12" pos:end="25:67">(<argument pos:start="25:13" pos:end="25:37"><expr pos:start="25:13" pos:end="25:37"><literal type="string" pos:start="25:13" pos:end="25:37">"CMD%d 0x%08x state %d\n"</literal></expr></argument>, <argument pos:start="25:40" pos:end="25:46"><expr pos:start="25:40" pos:end="25:46"><name pos:start="25:40" pos:end="25:46"><name pos:start="25:40" pos:end="25:42">req</name><operator pos:start="25:43" pos:end="25:43">.</operator><name pos:start="25:44" pos:end="25:46">cmd</name></name></expr></argument>, <argument pos:start="25:49" pos:end="25:55"><expr pos:start="25:49" pos:end="25:55"><name pos:start="25:49" pos:end="25:55"><name pos:start="25:49" pos:end="25:51">req</name><operator pos:start="25:52" pos:end="25:52">.</operator><name pos:start="25:53" pos:end="25:55">arg</name></name></expr></argument>, <argument pos:start="25:58" pos:end="25:66"><expr pos:start="25:58" pos:end="25:66"><name pos:start="25:58" pos:end="25:66"><name pos:start="25:58" pos:end="25:59">sd</name><operator pos:start="25:60" pos:end="25:61">-&gt;</operator><name pos:start="25:62" pos:end="25:66">state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="27:5" pos:end="1091:5">switch <condition pos:start="27:12" pos:end="27:20">(<expr pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:15">req</name><operator pos:start="27:16" pos:end="27:16">.</operator><name pos:start="27:17" pos:end="27:19">cmd</name></name></expr>)</condition> <block pos:start="27:22" pos:end="1091:5">{<block_content pos:start="31:5" pos:end="1089:26">

    <comment type="block" pos:start="29:5" pos:end="29:46">/* Basic commands (Class 0 and Class 1) */</comment>

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">0</literal></expr>:</case>	<comment type="block" pos:start="31:17" pos:end="31:43">/* CMD0:   GO_IDLE_STATE */</comment>

        <switch pos:start="33:9" pos:end="49:9">switch <condition pos:start="33:16" pos:end="33:26">(<expr pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:18">sd</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:25">state</name></name></expr>)</condition> <block pos:start="33:28" pos:end="49:9">{<block_content pos:start="35:9" pos:end="47:43">

        <case pos:start="35:9" pos:end="35:31">case <expr pos:start="35:14" pos:end="35:30"><name pos:start="35:14" pos:end="35:30">sd_inactive_state</name></expr>:</case>

            <return pos:start="37:13" pos:end="37:43">return <expr pos:start="37:20" pos:end="37:42"><ternary pos:start="37:20" pos:end="37:42"><condition pos:start="37:20" pos:end="37:28"><expr pos:start="37:20" pos:end="37:26"><name pos:start="37:20" pos:end="37:26"><name pos:start="37:20" pos:end="37:21">sd</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:26">spi</name></name></expr> ?</condition><then pos:start="37:30" pos:end="37:34"> <expr pos:start="37:30" pos:end="37:34"><name pos:start="37:30" pos:end="37:34">sd_r1</name></expr> </then><else pos:start="37:36" pos:end="37:42">: <expr pos:start="37:38" pos:end="37:42"><name pos:start="37:38" pos:end="37:42">sd_r0</name></expr></else></ternary></expr>;</return>



        <default pos:start="41:9" pos:end="41:16">default:</default>

            <expr_stmt pos:start="43:13" pos:end="43:38"><expr pos:start="43:13" pos:end="43:37"><name pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:14">sd</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:21">state</name></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:37">sd_idle_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:35"><expr pos:start="45:13" pos:end="45:34"><call pos:start="45:13" pos:end="45:34"><name pos:start="45:13" pos:end="45:20">sd_reset</name><argument_list pos:start="45:21" pos:end="45:34">(<argument pos:start="45:22" pos:end="45:23"><expr pos:start="45:22" pos:end="45:23"><name pos:start="45:22" pos:end="45:23">sd</name></expr></argument>, <argument pos:start="45:26" pos:end="45:33"><expr pos:start="45:26" pos:end="45:33"><name pos:start="45:26" pos:end="45:33"><name pos:start="45:26" pos:end="45:27">sd</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:33">bdrv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="47:13" pos:end="47:43">return <expr pos:start="47:20" pos:end="47:42"><ternary pos:start="47:20" pos:end="47:42"><condition pos:start="47:20" pos:end="47:28"><expr pos:start="47:20" pos:end="47:26"><name pos:start="47:20" pos:end="47:26"><name pos:start="47:20" pos:end="47:21">sd</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:26">spi</name></name></expr> ?</condition><then pos:start="47:30" pos:end="47:34"> <expr pos:start="47:30" pos:end="47:34"><name pos:start="47:30" pos:end="47:34">sd_r1</name></expr> </then><else pos:start="47:36" pos:end="47:42">: <expr pos:start="47:38" pos:end="47:42"><name pos:start="47:38" pos:end="47:42">sd_r0</name></expr></else></ternary></expr>;</return>

        </block_content>}</block></switch>

        <break pos:start="51:9" pos:end="51:14">break;</break>



    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">1</literal></expr>:</case>	<comment type="block" pos:start="55:17" pos:end="55:41">/* CMD1:   SEND_OP_CMD */</comment>

        <if_stmt pos:start="57:9" pos:end="59:25"><if pos:start="57:9" pos:end="59:25">if <condition pos:start="57:12" pos:end="57:21">(<expr pos:start="57:13" pos:end="57:20"><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:20"><name pos:start="57:14" pos:end="57:15">sd</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:20">spi</name></name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:25"><block_content pos:start="59:13" pos:end="59:25">

            <goto pos:start="59:13" pos:end="59:25">goto <name pos:start="59:18" pos:end="59:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:38"><expr pos:start="63:9" pos:end="63:37"><name pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:10">sd</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:17">state</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:37">sd_transfer_state</name></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:21">return <expr pos:start="65:16" pos:end="65:20"><name pos:start="65:16" pos:end="65:20">sd_r1</name></expr>;</return>



    <case pos:start="69:5" pos:end="69:11">case <expr pos:start="69:10" pos:end="69:10"><literal type="number" pos:start="69:10" pos:end="69:10">2</literal></expr>:</case>	<comment type="block" pos:start="69:17" pos:end="69:42">/* CMD2:   ALL_SEND_CID */</comment>

        <if_stmt pos:start="71:9" pos:end="73:25"><if pos:start="71:9" pos:end="73:25">if <condition pos:start="71:12" pos:end="71:20">(<expr pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:14">sd</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:25"><block_content pos:start="73:13" pos:end="73:25">

            <goto pos:start="73:13" pos:end="73:25">goto <name pos:start="73:18" pos:end="73:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>

        <switch pos:start="75:9" pos:end="89:9">switch <condition pos:start="75:16" pos:end="75:26">(<expr pos:start="75:17" pos:end="75:25"><name pos:start="75:17" pos:end="75:25"><name pos:start="75:17" pos:end="75:18">sd</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:25">state</name></name></expr>)</condition> <block pos:start="75:28" pos:end="89:9">{<block_content pos:start="77:9" pos:end="87:18">

        <case pos:start="77:9" pos:end="77:28">case <expr pos:start="77:14" pos:end="77:27"><name pos:start="77:14" pos:end="77:27">sd_ready_state</name></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="79:48"><expr pos:start="79:13" pos:end="79:47"><name pos:start="79:13" pos:end="79:21"><name pos:start="79:13" pos:end="79:14">sd</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:21">state</name></name> <operator pos:start="79:23" pos:end="79:23">=</operator> <name pos:start="79:25" pos:end="79:47">sd_identification_state</name></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:27">return <expr pos:start="81:20" pos:end="81:26"><name pos:start="81:20" pos:end="81:26">sd_r2_i</name></expr>;</return>



        <default pos:start="85:9" pos:end="85:16">default:</default>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="91:9" pos:end="91:14">break;</break>



    <case pos:start="95:5" pos:end="95:11">case <expr pos:start="95:10" pos:end="95:10"><literal type="number" pos:start="95:10" pos:end="95:10">3</literal></expr>:</case>	<comment type="block" pos:start="95:17" pos:end="95:48">/* CMD3:   SEND_RELATIVE_ADDR */</comment>

        <if_stmt pos:start="97:9" pos:end="99:25"><if pos:start="97:9" pos:end="99:25">if <condition pos:start="97:12" pos:end="97:20">(<expr pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:14">sd</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:25"><block_content pos:start="99:13" pos:end="99:25">

            <goto pos:start="99:13" pos:end="99:25">goto <name pos:start="99:18" pos:end="99:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>

        <switch pos:start="101:9" pos:end="119:9">switch <condition pos:start="101:16" pos:end="101:26">(<expr pos:start="101:17" pos:end="101:25"><name pos:start="101:17" pos:end="101:25"><name pos:start="101:17" pos:end="101:18">sd</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:25">state</name></name></expr>)</condition> <block pos:start="101:28" pos:end="119:9">{<block_content pos:start="103:9" pos:end="117:18">

        <case pos:start="103:9" pos:end="103:37">case <expr pos:start="103:14" pos:end="103:36"><name pos:start="103:14" pos:end="103:36">sd_identification_state</name></expr>:</case>

        <case pos:start="105:9" pos:end="105:30">case <expr pos:start="105:14" pos:end="105:29"><name pos:start="105:14" pos:end="105:29">sd_standby_state</name></expr>:</case>

            <expr_stmt pos:start="107:13" pos:end="107:41"><expr pos:start="107:13" pos:end="107:40"><name pos:start="107:13" pos:end="107:21"><name pos:start="107:13" pos:end="107:14">sd</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:21">state</name></name> <operator pos:start="107:23" pos:end="107:23">=</operator> <name pos:start="107:25" pos:end="107:40">sd_standby_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:27"><expr pos:start="109:13" pos:end="109:26"><call pos:start="109:13" pos:end="109:26"><name pos:start="109:13" pos:end="109:22">sd_set_rca</name><argument_list pos:start="109:23" pos:end="109:26">(<argument pos:start="109:24" pos:end="109:25"><expr pos:start="109:24" pos:end="109:25"><name pos:start="109:24" pos:end="109:25">sd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="111:13" pos:end="111:25">return <expr pos:start="111:20" pos:end="111:24"><name pos:start="111:20" pos:end="111:24">sd_r6</name></expr>;</return>



        <default pos:start="115:9" pos:end="115:16">default:</default>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="121:9" pos:end="121:14">break;</break>



    <case pos:start="125:5" pos:end="125:11">case <expr pos:start="125:10" pos:end="125:10"><literal type="number" pos:start="125:10" pos:end="125:10">4</literal></expr>:</case>	<comment type="block" pos:start="125:17" pos:end="125:38">/* CMD4:   SEND_DSR */</comment>

        <if_stmt pos:start="127:9" pos:end="129:25"><if pos:start="127:9" pos:end="129:25">if <condition pos:start="127:12" pos:end="127:20">(<expr pos:start="127:13" pos:end="127:19"><name pos:start="127:13" pos:end="127:19"><name pos:start="127:13" pos:end="127:14">sd</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:25"><block_content pos:start="129:13" pos:end="129:25">

            <goto pos:start="129:13" pos:end="129:25">goto <name pos:start="129:18" pos:end="129:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>

        <switch pos:start="131:9" pos:end="143:9">switch <condition pos:start="131:16" pos:end="131:26">(<expr pos:start="131:17" pos:end="131:25"><name pos:start="131:17" pos:end="131:25"><name pos:start="131:17" pos:end="131:18">sd</name><operator pos:start="131:19" pos:end="131:20">-&gt;</operator><name pos:start="131:21" pos:end="131:25">state</name></name></expr>)</condition> <block pos:start="131:28" pos:end="143:9">{<block_content pos:start="133:9" pos:end="141:18">

        <case pos:start="133:9" pos:end="133:30">case <expr pos:start="133:14" pos:end="133:29"><name pos:start="133:14" pos:end="133:29">sd_standby_state</name></expr>:</case>

            <break pos:start="135:13" pos:end="135:18">break;</break>



        <default pos:start="139:9" pos:end="139:16">default:</default>

            <break pos:start="141:13" pos:end="141:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="145:9" pos:end="145:14">break;</break>



    <case pos:start="149:5" pos:end="149:11">case <expr pos:start="149:10" pos:end="149:10"><literal type="number" pos:start="149:10" pos:end="149:10">5</literal></expr>:</case> <comment type="block" pos:start="149:13" pos:end="149:47">/* CMD5: reserved for SDIO cards */</comment>

        <return pos:start="151:9" pos:end="151:26">return <expr pos:start="151:16" pos:end="151:25"><name pos:start="151:16" pos:end="151:25">sd_illegal</name></expr>;</return>



    <case pos:start="155:5" pos:end="155:11">case <expr pos:start="155:10" pos:end="155:10"><literal type="number" pos:start="155:10" pos:end="155:10">6</literal></expr>:</case>	<comment type="block" pos:start="155:17" pos:end="155:45">/* CMD6:   SWITCH_FUNCTION */</comment>

        <if_stmt pos:start="157:9" pos:end="159:25"><if pos:start="157:9" pos:end="159:25">if <condition pos:start="157:12" pos:end="157:20">(<expr pos:start="157:13" pos:end="157:19"><name pos:start="157:13" pos:end="157:19"><name pos:start="157:13" pos:end="157:14">sd</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:25"><block_content pos:start="159:13" pos:end="159:25">

            <goto pos:start="159:13" pos:end="159:25">goto <name pos:start="159:18" pos:end="159:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>

        <switch pos:start="161:9" pos:end="181:9">switch <condition pos:start="161:16" pos:end="161:25">(<expr pos:start="161:17" pos:end="161:24"><name pos:start="161:17" pos:end="161:24"><name pos:start="161:17" pos:end="161:18">sd</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:24">mode</name></name></expr>)</condition> <block pos:start="161:27" pos:end="181:9">{<block_content pos:start="163:9" pos:end="179:18">

        <case pos:start="163:9" pos:end="163:35">case <expr pos:start="163:14" pos:end="163:34"><name pos:start="163:14" pos:end="163:34">sd_data_transfer_mode</name></expr>:</case>

            <expr_stmt pos:start="165:13" pos:end="165:44"><expr pos:start="165:13" pos:end="165:43"><call pos:start="165:13" pos:end="165:43"><name pos:start="165:13" pos:end="165:30">sd_function_switch</name><argument_list pos:start="165:31" pos:end="165:43">(<argument pos:start="165:32" pos:end="165:33"><expr pos:start="165:32" pos:end="165:33"><name pos:start="165:32" pos:end="165:33">sd</name></expr></argument>, <argument pos:start="165:36" pos:end="165:42"><expr pos:start="165:36" pos:end="165:42"><name pos:start="165:36" pos:end="165:42"><name pos:start="165:36" pos:end="165:38">req</name><operator pos:start="165:39" pos:end="165:39">.</operator><name pos:start="165:40" pos:end="165:42">arg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:45"><expr pos:start="167:13" pos:end="167:44"><name pos:start="167:13" pos:end="167:21"><name pos:start="167:13" pos:end="167:14">sd</name><operator pos:start="167:15" pos:end="167:16">-&gt;</operator><name pos:start="167:17" pos:end="167:21">state</name></name> <operator pos:start="167:23" pos:end="167:23">=</operator> <name pos:start="167:25" pos:end="167:44">sd_sendingdata_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:31"><expr pos:start="169:13" pos:end="169:30"><name pos:start="169:13" pos:end="169:26"><name pos:start="169:13" pos:end="169:14">sd</name><operator pos:start="169:15" pos:end="169:16">-&gt;</operator><name pos:start="169:17" pos:end="169:26">data_start</name></name> <operator pos:start="169:28" pos:end="169:28">=</operator> <literal type="number" pos:start="169:30" pos:end="169:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:32"><expr pos:start="171:13" pos:end="171:31"><name pos:start="171:13" pos:end="171:27"><name pos:start="171:13" pos:end="171:14">sd</name><operator pos:start="171:15" pos:end="171:16">-&gt;</operator><name pos:start="171:17" pos:end="171:27">data_offset</name></name> <operator pos:start="171:29" pos:end="171:29">=</operator> <literal type="number" pos:start="171:31" pos:end="171:31">0</literal></expr>;</expr_stmt>

            <return pos:start="173:13" pos:end="173:25">return <expr pos:start="173:20" pos:end="173:24"><name pos:start="173:20" pos:end="173:24">sd_r1</name></expr>;</return>



        <default pos:start="177:9" pos:end="177:16">default:</default>

            <break pos:start="179:13" pos:end="179:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="183:9" pos:end="183:14">break;</break>



    <case pos:start="187:5" pos:end="187:11">case <expr pos:start="187:10" pos:end="187:10"><literal type="number" pos:start="187:10" pos:end="187:10">7</literal></expr>:</case>	<comment type="block" pos:start="187:17" pos:end="187:50">/* CMD7:   SELECT/DESELECT_CARD */</comment>

        <if_stmt pos:start="189:9" pos:end="191:25"><if pos:start="189:9" pos:end="191:25">if <condition pos:start="189:12" pos:end="189:20">(<expr pos:start="189:13" pos:end="189:19"><name pos:start="189:13" pos:end="189:19"><name pos:start="189:13" pos:end="189:14">sd</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:25"><block_content pos:start="191:13" pos:end="191:25">

            <goto pos:start="191:13" pos:end="191:25">goto <name pos:start="191:18" pos:end="191:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>

        <switch pos:start="193:9" pos:end="257:9">switch <condition pos:start="193:16" pos:end="193:26">(<expr pos:start="193:17" pos:end="193:25"><name pos:start="193:17" pos:end="193:25"><name pos:start="193:17" pos:end="193:18">sd</name><operator pos:start="193:19" pos:end="193:20">-&gt;</operator><name pos:start="193:21" pos:end="193:25">state</name></name></expr>)</condition> <block pos:start="193:28" pos:end="257:9">{<block_content pos:start="195:9" pos:end="255:18">

        <case pos:start="195:9" pos:end="195:30">case <expr pos:start="195:14" pos:end="195:29"><name pos:start="195:14" pos:end="195:29">sd_standby_state</name></expr>:</case>

            <if_stmt pos:start="197:13" pos:end="199:29"><if pos:start="197:13" pos:end="199:29">if <condition pos:start="197:16" pos:end="197:31">(<expr pos:start="197:17" pos:end="197:30"><name pos:start="197:17" pos:end="197:23"><name pos:start="197:17" pos:end="197:18">sd</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:23">rca</name></name> <operator pos:start="197:25" pos:end="197:26">!=</operator> <name pos:start="197:28" pos:end="197:30">rca</name></expr>)</condition><block type="pseudo" pos:start="199:17" pos:end="199:29"><block_content pos:start="199:17" pos:end="199:29">

                <return pos:start="199:17" pos:end="199:29">return <expr pos:start="199:24" pos:end="199:28"><name pos:start="199:24" pos:end="199:28">sd_r0</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="203:13" pos:end="203:42"><expr pos:start="203:13" pos:end="203:41"><name pos:start="203:13" pos:end="203:21"><name pos:start="203:13" pos:end="203:14">sd</name><operator pos:start="203:15" pos:end="203:16">-&gt;</operator><name pos:start="203:17" pos:end="203:21">state</name></name> <operator pos:start="203:23" pos:end="203:23">=</operator> <name pos:start="203:25" pos:end="203:41">sd_transfer_state</name></expr>;</expr_stmt>

            <return pos:start="205:13" pos:end="205:26">return <expr pos:start="205:20" pos:end="205:25"><name pos:start="205:20" pos:end="205:25">sd_r1b</name></expr>;</return>



        <case pos:start="209:9" pos:end="209:31">case <expr pos:start="209:14" pos:end="209:30"><name pos:start="209:14" pos:end="209:30">sd_transfer_state</name></expr>:</case>

        <case pos:start="211:9" pos:end="211:34">case <expr pos:start="211:14" pos:end="211:33"><name pos:start="211:14" pos:end="211:33">sd_sendingdata_state</name></expr>:</case>

            <if_stmt pos:start="213:13" pos:end="215:22"><if pos:start="213:13" pos:end="215:22">if <condition pos:start="213:16" pos:end="213:31">(<expr pos:start="213:17" pos:end="213:30"><name pos:start="213:17" pos:end="213:23"><name pos:start="213:17" pos:end="213:18">sd</name><operator pos:start="213:19" pos:end="213:20">-&gt;</operator><name pos:start="213:21" pos:end="213:23">rca</name></name> <operator pos:start="213:25" pos:end="213:26">==</operator> <name pos:start="213:28" pos:end="213:30">rca</name></expr>)</condition><block type="pseudo" pos:start="215:17" pos:end="215:22"><block_content pos:start="215:17" pos:end="215:22">

                <break pos:start="215:17" pos:end="215:22">break;</break></block_content></block></if></if_stmt>



            <expr_stmt pos:start="219:13" pos:end="219:41"><expr pos:start="219:13" pos:end="219:40"><name pos:start="219:13" pos:end="219:21"><name pos:start="219:13" pos:end="219:14">sd</name><operator pos:start="219:15" pos:end="219:16">-&gt;</operator><name pos:start="219:17" pos:end="219:21">state</name></name> <operator pos:start="219:23" pos:end="219:23">=</operator> <name pos:start="219:25" pos:end="219:40">sd_standby_state</name></expr>;</expr_stmt>

            <return pos:start="221:13" pos:end="221:26">return <expr pos:start="221:20" pos:end="221:25"><name pos:start="221:20" pos:end="221:25">sd_r1b</name></expr>;</return>



        <case pos:start="225:9" pos:end="225:33">case <expr pos:start="225:14" pos:end="225:32"><name pos:start="225:14" pos:end="225:32">sd_disconnect_state</name></expr>:</case>

            <if_stmt pos:start="227:13" pos:end="229:29"><if pos:start="227:13" pos:end="229:29">if <condition pos:start="227:16" pos:end="227:31">(<expr pos:start="227:17" pos:end="227:30"><name pos:start="227:17" pos:end="227:23"><name pos:start="227:17" pos:end="227:18">sd</name><operator pos:start="227:19" pos:end="227:20">-&gt;</operator><name pos:start="227:21" pos:end="227:23">rca</name></name> <operator pos:start="227:25" pos:end="227:26">!=</operator> <name pos:start="227:28" pos:end="227:30">rca</name></expr>)</condition><block type="pseudo" pos:start="229:17" pos:end="229:29"><block_content pos:start="229:17" pos:end="229:29">

                <return pos:start="229:17" pos:end="229:29">return <expr pos:start="229:24" pos:end="229:28"><name pos:start="229:24" pos:end="229:28">sd_r0</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="233:13" pos:end="233:45"><expr pos:start="233:13" pos:end="233:44"><name pos:start="233:13" pos:end="233:21"><name pos:start="233:13" pos:end="233:14">sd</name><operator pos:start="233:15" pos:end="233:16">-&gt;</operator><name pos:start="233:17" pos:end="233:21">state</name></name> <operator pos:start="233:23" pos:end="233:23">=</operator> <name pos:start="233:25" pos:end="233:44">sd_programming_state</name></expr>;</expr_stmt>

            <return pos:start="235:13" pos:end="235:26">return <expr pos:start="235:20" pos:end="235:25"><name pos:start="235:20" pos:end="235:25">sd_r1b</name></expr>;</return>



        <case pos:start="239:9" pos:end="239:34">case <expr pos:start="239:14" pos:end="239:33"><name pos:start="239:14" pos:end="239:33">sd_programming_state</name></expr>:</case>

            <if_stmt pos:start="241:13" pos:end="243:22"><if pos:start="241:13" pos:end="243:22">if <condition pos:start="241:16" pos:end="241:31">(<expr pos:start="241:17" pos:end="241:30"><name pos:start="241:17" pos:end="241:23"><name pos:start="241:17" pos:end="241:18">sd</name><operator pos:start="241:19" pos:end="241:20">-&gt;</operator><name pos:start="241:21" pos:end="241:23">rca</name></name> <operator pos:start="241:25" pos:end="241:26">==</operator> <name pos:start="241:28" pos:end="241:30">rca</name></expr>)</condition><block type="pseudo" pos:start="243:17" pos:end="243:22"><block_content pos:start="243:17" pos:end="243:22">

                <break pos:start="243:17" pos:end="243:22">break;</break></block_content></block></if></if_stmt>



            <expr_stmt pos:start="247:13" pos:end="247:44"><expr pos:start="247:13" pos:end="247:43"><name pos:start="247:13" pos:end="247:21"><name pos:start="247:13" pos:end="247:14">sd</name><operator pos:start="247:15" pos:end="247:16">-&gt;</operator><name pos:start="247:17" pos:end="247:21">state</name></name> <operator pos:start="247:23" pos:end="247:23">=</operator> <name pos:start="247:25" pos:end="247:43">sd_disconnect_state</name></expr>;</expr_stmt>

            <return pos:start="249:13" pos:end="249:26">return <expr pos:start="249:20" pos:end="249:25"><name pos:start="249:20" pos:end="249:25">sd_r1b</name></expr>;</return>



        <default pos:start="253:9" pos:end="253:16">default:</default>

            <break pos:start="255:13" pos:end="255:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="259:9" pos:end="259:14">break;</break>



    <case pos:start="263:5" pos:end="263:11">case <expr pos:start="263:10" pos:end="263:10"><literal type="number" pos:start="263:10" pos:end="263:10">8</literal></expr>:</case>	<comment type="block" pos:start="263:17" pos:end="263:42">/* CMD8:   SEND_IF_COND */</comment>

        <comment type="block" pos:start="265:9" pos:end="265:63">/* Physical Layer Specification Version 2.00 command */</comment>

        <switch pos:start="267:9" pos:end="295:9">switch <condition pos:start="267:16" pos:end="267:26">(<expr pos:start="267:17" pos:end="267:25"><name pos:start="267:17" pos:end="267:25"><name pos:start="267:17" pos:end="267:18">sd</name><operator pos:start="267:19" pos:end="267:20">-&gt;</operator><name pos:start="267:21" pos:end="267:25">state</name></name></expr>)</condition> <block pos:start="267:28" pos:end="295:9">{<block_content pos:start="269:9" pos:end="293:18">

        <case pos:start="269:9" pos:end="269:27">case <expr pos:start="269:14" pos:end="269:26"><name pos:start="269:14" pos:end="269:26">sd_idle_state</name></expr>:</case>

            <expr_stmt pos:start="271:13" pos:end="271:24"><expr pos:start="271:13" pos:end="271:23"><name pos:start="271:13" pos:end="271:19"><name pos:start="271:13" pos:end="271:14">sd</name><operator pos:start="271:15" pos:end="271:16">-&gt;</operator><name pos:start="271:17" pos:end="271:19">vhs</name></name> <operator pos:start="271:21" pos:end="271:21">=</operator> <literal type="number" pos:start="271:23" pos:end="271:23">0</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="275:13" pos:end="275:65">/* No response if not exactly one VHS bit is set.  */</comment>

            <if_stmt pos:start="277:13" pos:end="279:47"><if pos:start="277:13" pos:end="279:47">if <condition pos:start="277:16" pos:end="277:69">(<expr pos:start="277:17" pos:end="277:68"><operator pos:start="277:17" pos:end="277:17">!</operator><operator pos:start="277:18" pos:end="277:18">(</operator><name pos:start="277:19" pos:end="277:25"><name pos:start="277:19" pos:end="277:21">req</name><operator pos:start="277:22" pos:end="277:22">.</operator><name pos:start="277:23" pos:end="277:25">arg</name></name> <operator pos:start="277:27" pos:end="277:28">&gt;&gt;</operator> <literal type="number" pos:start="277:30" pos:end="277:30">8</literal><operator pos:start="277:31" pos:end="277:31">)</operator> <operator pos:start="277:33" pos:end="277:34">||</operator> <operator pos:start="277:36" pos:end="277:36">(</operator><name pos:start="277:37" pos:end="277:43"><name pos:start="277:37" pos:end="277:39">req</name><operator pos:start="277:40" pos:end="277:40">.</operator><name pos:start="277:41" pos:end="277:43">arg</name></name> <operator pos:start="277:45" pos:end="277:46">&gt;&gt;</operator> <call pos:start="277:48" pos:end="277:67"><name pos:start="277:48" pos:end="277:50">ffs</name><argument_list pos:start="277:51" pos:end="277:67">(<argument pos:start="277:52" pos:end="277:66"><expr pos:start="277:52" pos:end="277:66"><name pos:start="277:52" pos:end="277:58"><name pos:start="277:52" pos:end="277:54">req</name><operator pos:start="277:55" pos:end="277:55">.</operator><name pos:start="277:56" pos:end="277:58">arg</name></name> <operator pos:start="277:60" pos:end="277:60">&amp;</operator> <operator pos:start="277:62" pos:end="277:62">~</operator><literal type="number" pos:start="277:63" pos:end="277:66">0xff</literal></expr></argument>)</argument_list></call><operator pos:start="277:68" pos:end="277:68">)</operator></expr>)</condition><block type="pseudo" pos:start="279:17" pos:end="279:47"><block_content pos:start="279:17" pos:end="279:47">

                <return pos:start="279:17" pos:end="279:47">return <expr pos:start="279:24" pos:end="279:46"><ternary pos:start="279:24" pos:end="279:46"><condition pos:start="279:24" pos:end="279:32"><expr pos:start="279:24" pos:end="279:30"><name pos:start="279:24" pos:end="279:30"><name pos:start="279:24" pos:end="279:25">sd</name><operator pos:start="279:26" pos:end="279:27">-&gt;</operator><name pos:start="279:28" pos:end="279:30">spi</name></name></expr> ?</condition><then pos:start="279:34" pos:end="279:38"> <expr pos:start="279:34" pos:end="279:38"><name pos:start="279:34" pos:end="279:38">sd_r7</name></expr> </then><else pos:start="279:40" pos:end="279:46">: <expr pos:start="279:42" pos:end="279:46"><name pos:start="279:42" pos:end="279:46">sd_r0</name></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>



            <comment type="block" pos:start="283:13" pos:end="283:26">/* Accept.  */</comment>

            <expr_stmt pos:start="285:13" pos:end="285:30"><expr pos:start="285:13" pos:end="285:29"><name pos:start="285:13" pos:end="285:19"><name pos:start="285:13" pos:end="285:14">sd</name><operator pos:start="285:15" pos:end="285:16">-&gt;</operator><name pos:start="285:17" pos:end="285:19">vhs</name></name> <operator pos:start="285:21" pos:end="285:21">=</operator> <name pos:start="285:23" pos:end="285:29"><name pos:start="285:23" pos:end="285:25">req</name><operator pos:start="285:26" pos:end="285:26">.</operator><name pos:start="285:27" pos:end="285:29">arg</name></name></expr>;</expr_stmt>

            <return pos:start="287:13" pos:end="287:25">return <expr pos:start="287:20" pos:end="287:24"><name pos:start="287:20" pos:end="287:24">sd_r7</name></expr>;</return>



        <default pos:start="291:9" pos:end="291:16">default:</default>

            <break pos:start="293:13" pos:end="293:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="297:9" pos:end="297:14">break;</break>



    <case pos:start="301:5" pos:end="301:11">case <expr pos:start="301:10" pos:end="301:10"><literal type="number" pos:start="301:10" pos:end="301:10">9</literal></expr>:</case>	<comment type="block" pos:start="301:17" pos:end="301:38">/* CMD9:   SEND_CSD */</comment>

        <switch pos:start="303:9" pos:end="339:9">switch <condition pos:start="303:16" pos:end="303:26">(<expr pos:start="303:17" pos:end="303:25"><name pos:start="303:17" pos:end="303:25"><name pos:start="303:17" pos:end="303:18">sd</name><operator pos:start="303:19" pos:end="303:20">-&gt;</operator><name pos:start="303:21" pos:end="303:25">state</name></name></expr>)</condition> <block pos:start="303:28" pos:end="339:9">{<block_content pos:start="305:9" pos:end="337:18">

        <case pos:start="305:9" pos:end="305:30">case <expr pos:start="305:14" pos:end="305:29"><name pos:start="305:14" pos:end="305:29">sd_standby_state</name></expr>:</case>

            <if_stmt pos:start="307:13" pos:end="309:29"><if pos:start="307:13" pos:end="309:29">if <condition pos:start="307:16" pos:end="307:31">(<expr pos:start="307:17" pos:end="307:30"><name pos:start="307:17" pos:end="307:23"><name pos:start="307:17" pos:end="307:18">sd</name><operator pos:start="307:19" pos:end="307:20">-&gt;</operator><name pos:start="307:21" pos:end="307:23">rca</name></name> <operator pos:start="307:25" pos:end="307:26">!=</operator> <name pos:start="307:28" pos:end="307:30">rca</name></expr>)</condition><block type="pseudo" pos:start="309:17" pos:end="309:29"><block_content pos:start="309:17" pos:end="309:29">

                <return pos:start="309:17" pos:end="309:29">return <expr pos:start="309:24" pos:end="309:28"><name pos:start="309:24" pos:end="309:28">sd_r0</name></expr>;</return></block_content></block></if></if_stmt>



            <return pos:start="313:13" pos:end="313:27">return <expr pos:start="313:20" pos:end="313:26"><name pos:start="313:20" pos:end="313:26">sd_r2_s</name></expr>;</return>



        <case pos:start="317:9" pos:end="317:31">case <expr pos:start="317:14" pos:end="317:30"><name pos:start="317:14" pos:end="317:30">sd_transfer_state</name></expr>:</case>

            <if_stmt pos:start="319:13" pos:end="321:22"><if pos:start="319:13" pos:end="321:22">if <condition pos:start="319:16" pos:end="319:25">(<expr pos:start="319:17" pos:end="319:24"><operator pos:start="319:17" pos:end="319:17">!</operator><name pos:start="319:18" pos:end="319:24"><name pos:start="319:18" pos:end="319:19">sd</name><operator pos:start="319:20" pos:end="319:21">-&gt;</operator><name pos:start="319:22" pos:end="319:24">spi</name></name></expr>)</condition><block type="pseudo" pos:start="321:17" pos:end="321:22"><block_content pos:start="321:17" pos:end="321:22">

                <break pos:start="321:17" pos:end="321:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:45"><expr pos:start="323:13" pos:end="323:44"><name pos:start="323:13" pos:end="323:21"><name pos:start="323:13" pos:end="323:14">sd</name><operator pos:start="323:15" pos:end="323:16">-&gt;</operator><name pos:start="323:17" pos:end="323:21">state</name></name> <operator pos:start="323:23" pos:end="323:23">=</operator> <name pos:start="323:25" pos:end="323:44">sd_sendingdata_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="325:13" pos:end="325:42"><expr pos:start="325:13" pos:end="325:41"><call pos:start="325:13" pos:end="325:41"><name pos:start="325:13" pos:end="325:18">memcpy</name><argument_list pos:start="325:19" pos:end="325:41">(<argument pos:start="325:20" pos:end="325:27"><expr pos:start="325:20" pos:end="325:27"><name pos:start="325:20" pos:end="325:27"><name pos:start="325:20" pos:end="325:21">sd</name><operator pos:start="325:22" pos:end="325:23">-&gt;</operator><name pos:start="325:24" pos:end="325:27">data</name></name></expr></argument>, <argument pos:start="325:30" pos:end="325:36"><expr pos:start="325:30" pos:end="325:36"><name pos:start="325:30" pos:end="325:36"><name pos:start="325:30" pos:end="325:31">sd</name><operator pos:start="325:32" pos:end="325:33">-&gt;</operator><name pos:start="325:34" pos:end="325:36">csd</name></name></expr></argument>, <argument pos:start="325:39" pos:end="325:40"><expr pos:start="325:39" pos:end="325:40"><literal type="number" pos:start="325:39" pos:end="325:40">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="327:13" pos:end="327:34"><expr pos:start="327:13" pos:end="327:33"><name pos:start="327:13" pos:end="327:26"><name pos:start="327:13" pos:end="327:14">sd</name><operator pos:start="327:15" pos:end="327:16">-&gt;</operator><name pos:start="327:17" pos:end="327:26">data_start</name></name> <operator pos:start="327:28" pos:end="327:28">=</operator> <name pos:start="327:30" pos:end="327:33">addr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="329:13" pos:end="329:32"><expr pos:start="329:13" pos:end="329:31"><name pos:start="329:13" pos:end="329:27"><name pos:start="329:13" pos:end="329:14">sd</name><operator pos:start="329:15" pos:end="329:16">-&gt;</operator><name pos:start="329:17" pos:end="329:27">data_offset</name></name> <operator pos:start="329:29" pos:end="329:29">=</operator> <literal type="number" pos:start="329:31" pos:end="329:31">0</literal></expr>;</expr_stmt>

            <return pos:start="331:13" pos:end="331:25">return <expr pos:start="331:20" pos:end="331:24"><name pos:start="331:20" pos:end="331:24">sd_r1</name></expr>;</return>



        <default pos:start="335:9" pos:end="335:16">default:</default>

            <break pos:start="337:13" pos:end="337:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="341:9" pos:end="341:14">break;</break>



    <case pos:start="345:5" pos:end="345:12">case <expr pos:start="345:10" pos:end="345:11"><literal type="number" pos:start="345:10" pos:end="345:11">10</literal></expr>:</case>	<comment type="block" pos:start="345:17" pos:end="345:38">/* CMD10:  SEND_CID */</comment>

        <switch pos:start="347:9" pos:end="383:9">switch <condition pos:start="347:16" pos:end="347:26">(<expr pos:start="347:17" pos:end="347:25"><name pos:start="347:17" pos:end="347:25"><name pos:start="347:17" pos:end="347:18">sd</name><operator pos:start="347:19" pos:end="347:20">-&gt;</operator><name pos:start="347:21" pos:end="347:25">state</name></name></expr>)</condition> <block pos:start="347:28" pos:end="383:9">{<block_content pos:start="349:9" pos:end="381:18">

        <case pos:start="349:9" pos:end="349:30">case <expr pos:start="349:14" pos:end="349:29"><name pos:start="349:14" pos:end="349:29">sd_standby_state</name></expr>:</case>

            <if_stmt pos:start="351:13" pos:end="353:29"><if pos:start="351:13" pos:end="353:29">if <condition pos:start="351:16" pos:end="351:31">(<expr pos:start="351:17" pos:end="351:30"><name pos:start="351:17" pos:end="351:23"><name pos:start="351:17" pos:end="351:18">sd</name><operator pos:start="351:19" pos:end="351:20">-&gt;</operator><name pos:start="351:21" pos:end="351:23">rca</name></name> <operator pos:start="351:25" pos:end="351:26">!=</operator> <name pos:start="351:28" pos:end="351:30">rca</name></expr>)</condition><block type="pseudo" pos:start="353:17" pos:end="353:29"><block_content pos:start="353:17" pos:end="353:29">

                <return pos:start="353:17" pos:end="353:29">return <expr pos:start="353:24" pos:end="353:28"><name pos:start="353:24" pos:end="353:28">sd_r0</name></expr>;</return></block_content></block></if></if_stmt>



            <return pos:start="357:13" pos:end="357:27">return <expr pos:start="357:20" pos:end="357:26"><name pos:start="357:20" pos:end="357:26">sd_r2_i</name></expr>;</return>



        <case pos:start="361:9" pos:end="361:31">case <expr pos:start="361:14" pos:end="361:30"><name pos:start="361:14" pos:end="361:30">sd_transfer_state</name></expr>:</case>

            <if_stmt pos:start="363:13" pos:end="365:22"><if pos:start="363:13" pos:end="365:22">if <condition pos:start="363:16" pos:end="363:25">(<expr pos:start="363:17" pos:end="363:24"><operator pos:start="363:17" pos:end="363:17">!</operator><name pos:start="363:18" pos:end="363:24"><name pos:start="363:18" pos:end="363:19">sd</name><operator pos:start="363:20" pos:end="363:21">-&gt;</operator><name pos:start="363:22" pos:end="363:24">spi</name></name></expr>)</condition><block type="pseudo" pos:start="365:17" pos:end="365:22"><block_content pos:start="365:17" pos:end="365:22">

                <break pos:start="365:17" pos:end="365:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:45"><expr pos:start="367:13" pos:end="367:44"><name pos:start="367:13" pos:end="367:21"><name pos:start="367:13" pos:end="367:14">sd</name><operator pos:start="367:15" pos:end="367:16">-&gt;</operator><name pos:start="367:17" pos:end="367:21">state</name></name> <operator pos:start="367:23" pos:end="367:23">=</operator> <name pos:start="367:25" pos:end="367:44">sd_sendingdata_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:42"><expr pos:start="369:13" pos:end="369:41"><call pos:start="369:13" pos:end="369:41"><name pos:start="369:13" pos:end="369:18">memcpy</name><argument_list pos:start="369:19" pos:end="369:41">(<argument pos:start="369:20" pos:end="369:27"><expr pos:start="369:20" pos:end="369:27"><name pos:start="369:20" pos:end="369:27"><name pos:start="369:20" pos:end="369:21">sd</name><operator pos:start="369:22" pos:end="369:23">-&gt;</operator><name pos:start="369:24" pos:end="369:27">data</name></name></expr></argument>, <argument pos:start="369:30" pos:end="369:36"><expr pos:start="369:30" pos:end="369:36"><name pos:start="369:30" pos:end="369:36"><name pos:start="369:30" pos:end="369:31">sd</name><operator pos:start="369:32" pos:end="369:33">-&gt;</operator><name pos:start="369:34" pos:end="369:36">cid</name></name></expr></argument>, <argument pos:start="369:39" pos:end="369:40"><expr pos:start="369:39" pos:end="369:40"><literal type="number" pos:start="369:39" pos:end="369:40">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:34"><expr pos:start="371:13" pos:end="371:33"><name pos:start="371:13" pos:end="371:26"><name pos:start="371:13" pos:end="371:14">sd</name><operator pos:start="371:15" pos:end="371:16">-&gt;</operator><name pos:start="371:17" pos:end="371:26">data_start</name></name> <operator pos:start="371:28" pos:end="371:28">=</operator> <name pos:start="371:30" pos:end="371:33">addr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:32"><expr pos:start="373:13" pos:end="373:31"><name pos:start="373:13" pos:end="373:27"><name pos:start="373:13" pos:end="373:14">sd</name><operator pos:start="373:15" pos:end="373:16">-&gt;</operator><name pos:start="373:17" pos:end="373:27">data_offset</name></name> <operator pos:start="373:29" pos:end="373:29">=</operator> <literal type="number" pos:start="373:31" pos:end="373:31">0</literal></expr>;</expr_stmt>

            <return pos:start="375:13" pos:end="375:25">return <expr pos:start="375:20" pos:end="375:24"><name pos:start="375:20" pos:end="375:24">sd_r1</name></expr>;</return>



        <default pos:start="379:9" pos:end="379:16">default:</default>

            <break pos:start="381:13" pos:end="381:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="385:9" pos:end="385:14">break;</break>



    <case pos:start="389:5" pos:end="389:12">case <expr pos:start="389:10" pos:end="389:11"><literal type="number" pos:start="389:10" pos:end="389:11">11</literal></expr>:</case>	<comment type="block" pos:start="389:17" pos:end="389:49">/* CMD11:  READ_DAT_UNTIL_STOP */</comment>

        <if_stmt pos:start="391:9" pos:end="393:25"><if pos:start="391:9" pos:end="393:25">if <condition pos:start="391:12" pos:end="391:20">(<expr pos:start="391:13" pos:end="391:19"><name pos:start="391:13" pos:end="391:19"><name pos:start="391:13" pos:end="391:14">sd</name><operator pos:start="391:15" pos:end="391:16">-&gt;</operator><name pos:start="391:17" pos:end="391:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="393:13" pos:end="393:25"><block_content pos:start="393:13" pos:end="393:25">

            <goto pos:start="393:13" pos:end="393:25">goto <name pos:start="393:18" pos:end="393:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>

        <switch pos:start="395:9" pos:end="419:9">switch <condition pos:start="395:16" pos:end="395:26">(<expr pos:start="395:17" pos:end="395:25"><name pos:start="395:17" pos:end="395:25"><name pos:start="395:17" pos:end="395:18">sd</name><operator pos:start="395:19" pos:end="395:20">-&gt;</operator><name pos:start="395:21" pos:end="395:25">state</name></name></expr>)</condition> <block pos:start="395:28" pos:end="419:9">{<block_content pos:start="397:9" pos:end="417:18">

        <case pos:start="397:9" pos:end="397:31">case <expr pos:start="397:14" pos:end="397:30"><name pos:start="397:14" pos:end="397:30">sd_transfer_state</name></expr>:</case>

            <expr_stmt pos:start="399:13" pos:end="399:45"><expr pos:start="399:13" pos:end="399:44"><name pos:start="399:13" pos:end="399:21"><name pos:start="399:13" pos:end="399:14">sd</name><operator pos:start="399:15" pos:end="399:16">-&gt;</operator><name pos:start="399:17" pos:end="399:21">state</name></name> <operator pos:start="399:23" pos:end="399:23">=</operator> <name pos:start="399:25" pos:end="399:44">sd_sendingdata_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="401:13" pos:end="401:37"><expr pos:start="401:13" pos:end="401:36"><name pos:start="401:13" pos:end="401:26"><name pos:start="401:13" pos:end="401:14">sd</name><operator pos:start="401:15" pos:end="401:16">-&gt;</operator><name pos:start="401:17" pos:end="401:26">data_start</name></name> <operator pos:start="401:28" pos:end="401:28">=</operator> <name pos:start="401:30" pos:end="401:36"><name pos:start="401:30" pos:end="401:32">req</name><operator pos:start="401:33" pos:end="401:33">.</operator><name pos:start="401:34" pos:end="401:36">arg</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="403:13" pos:end="403:32"><expr pos:start="403:13" pos:end="403:31"><name pos:start="403:13" pos:end="403:27"><name pos:start="403:13" pos:end="403:14">sd</name><operator pos:start="403:15" pos:end="403:16">-&gt;</operator><name pos:start="403:17" pos:end="403:27">data_offset</name></name> <operator pos:start="403:29" pos:end="403:29">=</operator> <literal type="number" pos:start="403:31" pos:end="403:31">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="407:13" pos:end="409:49"><if pos:start="407:13" pos:end="409:49">if <condition pos:start="407:16" pos:end="407:56">(<expr pos:start="407:17" pos:end="407:55"><name pos:start="407:17" pos:end="407:30"><name pos:start="407:17" pos:end="407:18">sd</name><operator pos:start="407:19" pos:end="407:20">-&gt;</operator><name pos:start="407:21" pos:end="407:30">data_start</name></name> <operator pos:start="407:32" pos:end="407:32">+</operator> <name pos:start="407:34" pos:end="407:44"><name pos:start="407:34" pos:end="407:35">sd</name><operator pos:start="407:36" pos:end="407:37">-&gt;</operator><name pos:start="407:38" pos:end="407:44">blk_len</name></name> <operator pos:start="407:46" pos:end="407:46">&gt;</operator> <name pos:start="407:48" pos:end="407:55"><name pos:start="407:48" pos:end="407:49">sd</name><operator pos:start="407:50" pos:end="407:51">-&gt;</operator><name pos:start="407:52" pos:end="407:55">size</name></name></expr>)</condition><block type="pseudo" pos:start="409:17" pos:end="409:49"><block_content pos:start="409:17" pos:end="409:49">

                <expr_stmt pos:start="409:17" pos:end="409:49"><expr pos:start="409:17" pos:end="409:48"><name pos:start="409:17" pos:end="409:31"><name pos:start="409:17" pos:end="409:18">sd</name><operator pos:start="409:19" pos:end="409:20">-&gt;</operator><name pos:start="409:21" pos:end="409:31">card_status</name></name> <operator pos:start="409:33" pos:end="409:34">|=</operator> <name pos:start="409:36" pos:end="409:48">ADDRESS_ERROR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="411:13" pos:end="411:25">return <expr pos:start="411:20" pos:end="411:24"><name pos:start="411:20" pos:end="411:24">sd_r0</name></expr>;</return>



        <default pos:start="415:9" pos:end="415:16">default:</default>

            <break pos:start="417:13" pos:end="417:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="421:9" pos:end="421:14">break;</break>



    <case pos:start="425:5" pos:end="425:12">case <expr pos:start="425:10" pos:end="425:11"><literal type="number" pos:start="425:10" pos:end="425:11">12</literal></expr>:</case>	<comment type="block" pos:start="425:17" pos:end="425:47">/* CMD12:  STOP_TRANSMISSION */</comment>

        <switch pos:start="427:9" pos:end="453:9">switch <condition pos:start="427:16" pos:end="427:26">(<expr pos:start="427:17" pos:end="427:25"><name pos:start="427:17" pos:end="427:25"><name pos:start="427:17" pos:end="427:18">sd</name><operator pos:start="427:19" pos:end="427:20">-&gt;</operator><name pos:start="427:21" pos:end="427:25">state</name></name></expr>)</condition> <block pos:start="427:28" pos:end="453:9">{<block_content pos:start="429:9" pos:end="451:18">

        <case pos:start="429:9" pos:end="429:34">case <expr pos:start="429:14" pos:end="429:33"><name pos:start="429:14" pos:end="429:33">sd_sendingdata_state</name></expr>:</case>

            <expr_stmt pos:start="431:13" pos:end="431:42"><expr pos:start="431:13" pos:end="431:41"><name pos:start="431:13" pos:end="431:21"><name pos:start="431:13" pos:end="431:14">sd</name><operator pos:start="431:15" pos:end="431:16">-&gt;</operator><name pos:start="431:17" pos:end="431:21">state</name></name> <operator pos:start="431:23" pos:end="431:23">=</operator> <name pos:start="431:25" pos:end="431:41">sd_transfer_state</name></expr>;</expr_stmt>

            <return pos:start="433:13" pos:end="433:26">return <expr pos:start="433:20" pos:end="433:25"><name pos:start="433:20" pos:end="433:25">sd_r1b</name></expr>;</return>



        <case pos:start="437:9" pos:end="437:36">case <expr pos:start="437:14" pos:end="437:35"><name pos:start="437:14" pos:end="437:35">sd_receivingdata_state</name></expr>:</case>

            <expr_stmt pos:start="439:13" pos:end="439:45"><expr pos:start="439:13" pos:end="439:44"><name pos:start="439:13" pos:end="439:21"><name pos:start="439:13" pos:end="439:14">sd</name><operator pos:start="439:15" pos:end="439:16">-&gt;</operator><name pos:start="439:17" pos:end="439:21">state</name></name> <operator pos:start="439:23" pos:end="439:23">=</operator> <name pos:start="439:25" pos:end="439:44">sd_programming_state</name></expr>;</expr_stmt>

            <comment type="block" pos:start="441:13" pos:end="441:54">/* Bzzzzzzztt .... Operation complete.  */</comment>

            <expr_stmt pos:start="443:13" pos:end="443:42"><expr pos:start="443:13" pos:end="443:41"><name pos:start="443:13" pos:end="443:21"><name pos:start="443:13" pos:end="443:14">sd</name><operator pos:start="443:15" pos:end="443:16">-&gt;</operator><name pos:start="443:17" pos:end="443:21">state</name></name> <operator pos:start="443:23" pos:end="443:23">=</operator> <name pos:start="443:25" pos:end="443:41">sd_transfer_state</name></expr>;</expr_stmt>

            <return pos:start="445:13" pos:end="445:26">return <expr pos:start="445:20" pos:end="445:25"><name pos:start="445:20" pos:end="445:25">sd_r1b</name></expr>;</return>



        <default pos:start="449:9" pos:end="449:16">default:</default>

            <break pos:start="451:13" pos:end="451:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="455:9" pos:end="455:14">break;</break>



    <case pos:start="459:5" pos:end="459:12">case <expr pos:start="459:10" pos:end="459:11"><literal type="number" pos:start="459:10" pos:end="459:11">13</literal></expr>:</case>	<comment type="block" pos:start="459:17" pos:end="459:41">/* CMD13:  SEND_STATUS */</comment>

        <switch pos:start="461:9" pos:end="479:9">switch <condition pos:start="461:16" pos:end="461:25">(<expr pos:start="461:17" pos:end="461:24"><name pos:start="461:17" pos:end="461:24"><name pos:start="461:17" pos:end="461:18">sd</name><operator pos:start="461:19" pos:end="461:20">-&gt;</operator><name pos:start="461:21" pos:end="461:24">mode</name></name></expr>)</condition> <block pos:start="461:27" pos:end="479:9">{<block_content pos:start="463:9" pos:end="477:18">

        <case pos:start="463:9" pos:end="463:35">case <expr pos:start="463:14" pos:end="463:34"><name pos:start="463:14" pos:end="463:34">sd_data_transfer_mode</name></expr>:</case>

            <if_stmt pos:start="465:13" pos:end="467:29"><if pos:start="465:13" pos:end="467:29">if <condition pos:start="465:16" pos:end="465:31">(<expr pos:start="465:17" pos:end="465:30"><name pos:start="465:17" pos:end="465:23"><name pos:start="465:17" pos:end="465:18">sd</name><operator pos:start="465:19" pos:end="465:20">-&gt;</operator><name pos:start="465:21" pos:end="465:23">rca</name></name> <operator pos:start="465:25" pos:end="465:26">!=</operator> <name pos:start="465:28" pos:end="465:30">rca</name></expr>)</condition><block type="pseudo" pos:start="467:17" pos:end="467:29"><block_content pos:start="467:17" pos:end="467:29">

                <return pos:start="467:17" pos:end="467:29">return <expr pos:start="467:24" pos:end="467:28"><name pos:start="467:24" pos:end="467:28">sd_r0</name></expr>;</return></block_content></block></if></if_stmt>



            <return pos:start="471:13" pos:end="471:25">return <expr pos:start="471:20" pos:end="471:24"><name pos:start="471:20" pos:end="471:24">sd_r1</name></expr>;</return>



        <default pos:start="475:9" pos:end="475:16">default:</default>

            <break pos:start="477:13" pos:end="477:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="481:9" pos:end="481:14">break;</break>



    <case pos:start="485:5" pos:end="485:12">case <expr pos:start="485:10" pos:end="485:11"><literal type="number" pos:start="485:10" pos:end="485:11">15</literal></expr>:</case>	<comment type="block" pos:start="485:17" pos:end="485:47">/* CMD15:  GO_INACTIVE_STATE */</comment>

        <if_stmt pos:start="487:9" pos:end="489:25"><if pos:start="487:9" pos:end="489:25">if <condition pos:start="487:12" pos:end="487:20">(<expr pos:start="487:13" pos:end="487:19"><name pos:start="487:13" pos:end="487:19"><name pos:start="487:13" pos:end="487:14">sd</name><operator pos:start="487:15" pos:end="487:16">-&gt;</operator><name pos:start="487:17" pos:end="487:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="489:13" pos:end="489:25"><block_content pos:start="489:13" pos:end="489:25">

            <goto pos:start="489:13" pos:end="489:25">goto <name pos:start="489:18" pos:end="489:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>

        <switch pos:start="491:9" pos:end="511:9">switch <condition pos:start="491:16" pos:end="491:25">(<expr pos:start="491:17" pos:end="491:24"><name pos:start="491:17" pos:end="491:24"><name pos:start="491:17" pos:end="491:18">sd</name><operator pos:start="491:19" pos:end="491:20">-&gt;</operator><name pos:start="491:21" pos:end="491:24">mode</name></name></expr>)</condition> <block pos:start="491:27" pos:end="511:9">{<block_content pos:start="493:9" pos:end="509:18">

        <case pos:start="493:9" pos:end="493:35">case <expr pos:start="493:14" pos:end="493:34"><name pos:start="493:14" pos:end="493:34">sd_data_transfer_mode</name></expr>:</case>

            <if_stmt pos:start="495:13" pos:end="497:29"><if pos:start="495:13" pos:end="497:29">if <condition pos:start="495:16" pos:end="495:31">(<expr pos:start="495:17" pos:end="495:30"><name pos:start="495:17" pos:end="495:23"><name pos:start="495:17" pos:end="495:18">sd</name><operator pos:start="495:19" pos:end="495:20">-&gt;</operator><name pos:start="495:21" pos:end="495:23">rca</name></name> <operator pos:start="495:25" pos:end="495:26">!=</operator> <name pos:start="495:28" pos:end="495:30">rca</name></expr>)</condition><block type="pseudo" pos:start="497:17" pos:end="497:29"><block_content pos:start="497:17" pos:end="497:29">

                <return pos:start="497:17" pos:end="497:29">return <expr pos:start="497:24" pos:end="497:28"><name pos:start="497:24" pos:end="497:28">sd_r0</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="501:13" pos:end="501:42"><expr pos:start="501:13" pos:end="501:41"><name pos:start="501:13" pos:end="501:21"><name pos:start="501:13" pos:end="501:14">sd</name><operator pos:start="501:15" pos:end="501:16">-&gt;</operator><name pos:start="501:17" pos:end="501:21">state</name></name> <operator pos:start="501:23" pos:end="501:23">=</operator> <name pos:start="501:25" pos:end="501:41">sd_inactive_state</name></expr>;</expr_stmt>

            <return pos:start="503:13" pos:end="503:25">return <expr pos:start="503:20" pos:end="503:24"><name pos:start="503:20" pos:end="503:24">sd_r0</name></expr>;</return>



        <default pos:start="507:9" pos:end="507:16">default:</default>

            <break pos:start="509:13" pos:end="509:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="513:9" pos:end="513:14">break;</break>



    <comment type="block" pos:start="517:5" pos:end="517:40">/* Block read commands (Classs 2) */</comment>

    <case pos:start="519:5" pos:end="519:12">case <expr pos:start="519:10" pos:end="519:11"><literal type="number" pos:start="519:10" pos:end="519:11">16</literal></expr>:</case>	<comment type="block" pos:start="519:17" pos:end="519:42">/* CMD16:  SET_BLOCKLEN */</comment>

        <switch pos:start="521:9" pos:end="543:9">switch <condition pos:start="521:16" pos:end="521:26">(<expr pos:start="521:17" pos:end="521:25"><name pos:start="521:17" pos:end="521:25"><name pos:start="521:17" pos:end="521:18">sd</name><operator pos:start="521:19" pos:end="521:20">-&gt;</operator><name pos:start="521:21" pos:end="521:25">state</name></name></expr>)</condition> <block pos:start="521:28" pos:end="543:9">{<block_content pos:start="523:9" pos:end="541:18">

        <case pos:start="523:9" pos:end="523:31">case <expr pos:start="523:14" pos:end="523:30"><name pos:start="523:14" pos:end="523:30">sd_transfer_state</name></expr>:</case>

            <if_stmt pos:start="525:13" pos:end="531:38"><if pos:start="525:13" pos:end="527:51">if <condition pos:start="525:16" pos:end="525:47">(<expr pos:start="525:17" pos:end="525:46"><name pos:start="525:17" pos:end="525:23"><name pos:start="525:17" pos:end="525:19">req</name><operator pos:start="525:20" pos:end="525:20">.</operator><name pos:start="525:21" pos:end="525:23">arg</name></name> <operator pos:start="525:25" pos:end="525:25">&gt;</operator> <operator pos:start="525:27" pos:end="525:27">(</operator><literal type="number" pos:start="525:28" pos:end="525:28">1</literal> <operator pos:start="525:30" pos:end="525:31">&lt;&lt;</operator> <name pos:start="525:33" pos:end="525:45">HWBLOCK_SHIFT</name><operator pos:start="525:46" pos:end="525:46">)</operator></expr>)</condition><block type="pseudo" pos:start="527:17" pos:end="527:51"><block_content pos:start="527:17" pos:end="527:51">

                <expr_stmt pos:start="527:17" pos:end="527:51"><expr pos:start="527:17" pos:end="527:50"><name pos:start="527:17" pos:end="527:31"><name pos:start="527:17" pos:end="527:18">sd</name><operator pos:start="527:19" pos:end="527:20">-&gt;</operator><name pos:start="527:21" pos:end="527:31">card_status</name></name> <operator pos:start="527:33" pos:end="527:34">|=</operator> <name pos:start="527:36" pos:end="527:50">BLOCK_LEN_ERROR</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="529:13" pos:end="531:38">else<block type="pseudo" pos:start="531:17" pos:end="531:38"><block_content pos:start="531:17" pos:end="531:38">

                <expr_stmt pos:start="531:17" pos:end="531:38"><expr pos:start="531:17" pos:end="531:37"><name pos:start="531:17" pos:end="531:27"><name pos:start="531:17" pos:end="531:18">sd</name><operator pos:start="531:19" pos:end="531:20">-&gt;</operator><name pos:start="531:21" pos:end="531:27">blk_len</name></name> <operator pos:start="531:29" pos:end="531:29">=</operator> <name pos:start="531:31" pos:end="531:37"><name pos:start="531:31" pos:end="531:33">req</name><operator pos:start="531:34" pos:end="531:34">.</operator><name pos:start="531:35" pos:end="531:37">arg</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <return pos:start="535:13" pos:end="535:25">return <expr pos:start="535:20" pos:end="535:24"><name pos:start="535:20" pos:end="535:24">sd_r1</name></expr>;</return>



        <default pos:start="539:9" pos:end="539:16">default:</default>

            <break pos:start="541:13" pos:end="541:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="545:9" pos:end="545:14">break;</break>



    <case pos:start="549:5" pos:end="549:12">case <expr pos:start="549:10" pos:end="549:11"><literal type="number" pos:start="549:10" pos:end="549:11">17</literal></expr>:</case>	<comment type="block" pos:start="549:17" pos:end="549:47">/* CMD17:  READ_SINGLE_BLOCK */</comment>

        <switch pos:start="551:9" pos:end="575:9">switch <condition pos:start="551:16" pos:end="551:26">(<expr pos:start="551:17" pos:end="551:25"><name pos:start="551:17" pos:end="551:25"><name pos:start="551:17" pos:end="551:18">sd</name><operator pos:start="551:19" pos:end="551:20">-&gt;</operator><name pos:start="551:21" pos:end="551:25">state</name></name></expr>)</condition> <block pos:start="551:28" pos:end="575:9">{<block_content pos:start="553:9" pos:end="573:18">

        <case pos:start="553:9" pos:end="553:31">case <expr pos:start="553:14" pos:end="553:30"><name pos:start="553:14" pos:end="553:30">sd_transfer_state</name></expr>:</case>

            <expr_stmt pos:start="555:13" pos:end="555:45"><expr pos:start="555:13" pos:end="555:44"><name pos:start="555:13" pos:end="555:21"><name pos:start="555:13" pos:end="555:14">sd</name><operator pos:start="555:15" pos:end="555:16">-&gt;</operator><name pos:start="555:17" pos:end="555:21">state</name></name> <operator pos:start="555:23" pos:end="555:23">=</operator> <name pos:start="555:25" pos:end="555:44">sd_sendingdata_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="557:13" pos:end="557:34"><expr pos:start="557:13" pos:end="557:33"><name pos:start="557:13" pos:end="557:26"><name pos:start="557:13" pos:end="557:14">sd</name><operator pos:start="557:15" pos:end="557:16">-&gt;</operator><name pos:start="557:17" pos:end="557:26">data_start</name></name> <operator pos:start="557:28" pos:end="557:28">=</operator> <name pos:start="557:30" pos:end="557:33">addr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="559:13" pos:end="559:32"><expr pos:start="559:13" pos:end="559:31"><name pos:start="559:13" pos:end="559:27"><name pos:start="559:13" pos:end="559:14">sd</name><operator pos:start="559:15" pos:end="559:16">-&gt;</operator><name pos:start="559:17" pos:end="559:27">data_offset</name></name> <operator pos:start="559:29" pos:end="559:29">=</operator> <literal type="number" pos:start="559:31" pos:end="559:31">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="563:13" pos:end="565:49"><if pos:start="563:13" pos:end="565:49">if <condition pos:start="563:16" pos:end="563:56">(<expr pos:start="563:17" pos:end="563:55"><name pos:start="563:17" pos:end="563:30"><name pos:start="563:17" pos:end="563:18">sd</name><operator pos:start="563:19" pos:end="563:20">-&gt;</operator><name pos:start="563:21" pos:end="563:30">data_start</name></name> <operator pos:start="563:32" pos:end="563:32">+</operator> <name pos:start="563:34" pos:end="563:44"><name pos:start="563:34" pos:end="563:35">sd</name><operator pos:start="563:36" pos:end="563:37">-&gt;</operator><name pos:start="563:38" pos:end="563:44">blk_len</name></name> <operator pos:start="563:46" pos:end="563:46">&gt;</operator> <name pos:start="563:48" pos:end="563:55"><name pos:start="563:48" pos:end="563:49">sd</name><operator pos:start="563:50" pos:end="563:51">-&gt;</operator><name pos:start="563:52" pos:end="563:55">size</name></name></expr>)</condition><block type="pseudo" pos:start="565:17" pos:end="565:49"><block_content pos:start="565:17" pos:end="565:49">

                <expr_stmt pos:start="565:17" pos:end="565:49"><expr pos:start="565:17" pos:end="565:48"><name pos:start="565:17" pos:end="565:31"><name pos:start="565:17" pos:end="565:18">sd</name><operator pos:start="565:19" pos:end="565:20">-&gt;</operator><name pos:start="565:21" pos:end="565:31">card_status</name></name> <operator pos:start="565:33" pos:end="565:34">|=</operator> <name pos:start="565:36" pos:end="565:48">ADDRESS_ERROR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="567:13" pos:end="567:25">return <expr pos:start="567:20" pos:end="567:24"><name pos:start="567:20" pos:end="567:24">sd_r1</name></expr>;</return>



        <default pos:start="571:9" pos:end="571:16">default:</default>

            <break pos:start="573:13" pos:end="573:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="577:9" pos:end="577:14">break;</break>



    <case pos:start="581:5" pos:end="581:12">case <expr pos:start="581:10" pos:end="581:11"><literal type="number" pos:start="581:10" pos:end="581:11">18</literal></expr>:</case>	<comment type="block" pos:start="581:17" pos:end="581:49">/* CMD18:  READ_MULTIPLE_BLOCK */</comment>

        <switch pos:start="583:9" pos:end="607:9">switch <condition pos:start="583:16" pos:end="583:26">(<expr pos:start="583:17" pos:end="583:25"><name pos:start="583:17" pos:end="583:25"><name pos:start="583:17" pos:end="583:18">sd</name><operator pos:start="583:19" pos:end="583:20">-&gt;</operator><name pos:start="583:21" pos:end="583:25">state</name></name></expr>)</condition> <block pos:start="583:28" pos:end="607:9">{<block_content pos:start="585:9" pos:end="605:18">

        <case pos:start="585:9" pos:end="585:31">case <expr pos:start="585:14" pos:end="585:30"><name pos:start="585:14" pos:end="585:30">sd_transfer_state</name></expr>:</case>

            <expr_stmt pos:start="587:13" pos:end="587:45"><expr pos:start="587:13" pos:end="587:44"><name pos:start="587:13" pos:end="587:21"><name pos:start="587:13" pos:end="587:14">sd</name><operator pos:start="587:15" pos:end="587:16">-&gt;</operator><name pos:start="587:17" pos:end="587:21">state</name></name> <operator pos:start="587:23" pos:end="587:23">=</operator> <name pos:start="587:25" pos:end="587:44">sd_sendingdata_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="589:13" pos:end="589:34"><expr pos:start="589:13" pos:end="589:33"><name pos:start="589:13" pos:end="589:26"><name pos:start="589:13" pos:end="589:14">sd</name><operator pos:start="589:15" pos:end="589:16">-&gt;</operator><name pos:start="589:17" pos:end="589:26">data_start</name></name> <operator pos:start="589:28" pos:end="589:28">=</operator> <name pos:start="589:30" pos:end="589:33">addr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="591:13" pos:end="591:32"><expr pos:start="591:13" pos:end="591:31"><name pos:start="591:13" pos:end="591:27"><name pos:start="591:13" pos:end="591:14">sd</name><operator pos:start="591:15" pos:end="591:16">-&gt;</operator><name pos:start="591:17" pos:end="591:27">data_offset</name></name> <operator pos:start="591:29" pos:end="591:29">=</operator> <literal type="number" pos:start="591:31" pos:end="591:31">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="595:13" pos:end="597:49"><if pos:start="595:13" pos:end="597:49">if <condition pos:start="595:16" pos:end="595:56">(<expr pos:start="595:17" pos:end="595:55"><name pos:start="595:17" pos:end="595:30"><name pos:start="595:17" pos:end="595:18">sd</name><operator pos:start="595:19" pos:end="595:20">-&gt;</operator><name pos:start="595:21" pos:end="595:30">data_start</name></name> <operator pos:start="595:32" pos:end="595:32">+</operator> <name pos:start="595:34" pos:end="595:44"><name pos:start="595:34" pos:end="595:35">sd</name><operator pos:start="595:36" pos:end="595:37">-&gt;</operator><name pos:start="595:38" pos:end="595:44">blk_len</name></name> <operator pos:start="595:46" pos:end="595:46">&gt;</operator> <name pos:start="595:48" pos:end="595:55"><name pos:start="595:48" pos:end="595:49">sd</name><operator pos:start="595:50" pos:end="595:51">-&gt;</operator><name pos:start="595:52" pos:end="595:55">size</name></name></expr>)</condition><block type="pseudo" pos:start="597:17" pos:end="597:49"><block_content pos:start="597:17" pos:end="597:49">

                <expr_stmt pos:start="597:17" pos:end="597:49"><expr pos:start="597:17" pos:end="597:48"><name pos:start="597:17" pos:end="597:31"><name pos:start="597:17" pos:end="597:18">sd</name><operator pos:start="597:19" pos:end="597:20">-&gt;</operator><name pos:start="597:21" pos:end="597:31">card_status</name></name> <operator pos:start="597:33" pos:end="597:34">|=</operator> <name pos:start="597:36" pos:end="597:48">ADDRESS_ERROR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="599:13" pos:end="599:25">return <expr pos:start="599:20" pos:end="599:24"><name pos:start="599:20" pos:end="599:24">sd_r1</name></expr>;</return>



        <default pos:start="603:9" pos:end="603:16">default:</default>

            <break pos:start="605:13" pos:end="605:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="609:9" pos:end="609:14">break;</break>



    <comment type="block" pos:start="613:5" pos:end="613:40">/* Block write commands (Class 4) */</comment>

    <case pos:start="615:5" pos:end="615:12">case <expr pos:start="615:10" pos:end="615:11"><literal type="number" pos:start="615:10" pos:end="615:11">24</literal></expr>:</case>	<comment type="block" pos:start="615:17" pos:end="615:48">/* CMD24:  WRITE_SINGLE_BLOCK */</comment>

        <if_stmt pos:start="617:9" pos:end="619:35"><if pos:start="617:9" pos:end="619:35">if <condition pos:start="617:12" pos:end="617:20">(<expr pos:start="617:13" pos:end="617:19"><name pos:start="617:13" pos:end="617:19"><name pos:start="617:13" pos:end="617:14">sd</name><operator pos:start="617:15" pos:end="617:16">-&gt;</operator><name pos:start="617:17" pos:end="617:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="619:13" pos:end="619:35"><block_content pos:start="619:13" pos:end="619:35">

            <goto pos:start="619:13" pos:end="619:35">goto <name pos:start="619:18" pos:end="619:34">unimplemented_cmd</name>;</goto></block_content></block></if></if_stmt>

        <switch pos:start="621:9" pos:end="661:9">switch <condition pos:start="621:16" pos:end="621:26">(<expr pos:start="621:17" pos:end="621:25"><name pos:start="621:17" pos:end="621:25"><name pos:start="621:17" pos:end="621:18">sd</name><operator pos:start="621:19" pos:end="621:20">-&gt;</operator><name pos:start="621:21" pos:end="621:25">state</name></name></expr>)</condition> <block pos:start="621:28" pos:end="661:9">{<block_content pos:start="623:9" pos:end="659:18">

        <case pos:start="623:9" pos:end="623:31">case <expr pos:start="623:14" pos:end="623:30"><name pos:start="623:14" pos:end="623:30">sd_transfer_state</name></expr>:</case>

            <comment type="block" pos:start="625:13" pos:end="625:55">/* Writing in SPI mode not implemented.  */</comment>

            <if_stmt pos:start="627:13" pos:end="629:22"><if pos:start="627:13" pos:end="629:22">if <condition pos:start="627:16" pos:end="627:24">(<expr pos:start="627:17" pos:end="627:23"><name pos:start="627:17" pos:end="627:23"><name pos:start="627:17" pos:end="627:18">sd</name><operator pos:start="627:19" pos:end="627:20">-&gt;</operator><name pos:start="627:21" pos:end="627:23">spi</name></name></expr>)</condition><block type="pseudo" pos:start="629:17" pos:end="629:22"><block_content pos:start="629:17" pos:end="629:22">

                <break pos:start="629:17" pos:end="629:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="631:13" pos:end="631:47"><expr pos:start="631:13" pos:end="631:46"><name pos:start="631:13" pos:end="631:21"><name pos:start="631:13" pos:end="631:14">sd</name><operator pos:start="631:15" pos:end="631:16">-&gt;</operator><name pos:start="631:17" pos:end="631:21">state</name></name> <operator pos:start="631:23" pos:end="631:23">=</operator> <name pos:start="631:25" pos:end="631:46">sd_receivingdata_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="633:13" pos:end="633:34"><expr pos:start="633:13" pos:end="633:33"><name pos:start="633:13" pos:end="633:26"><name pos:start="633:13" pos:end="633:14">sd</name><operator pos:start="633:15" pos:end="633:16">-&gt;</operator><name pos:start="633:17" pos:end="633:26">data_start</name></name> <operator pos:start="633:28" pos:end="633:28">=</operator> <name pos:start="633:30" pos:end="633:33">addr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="635:13" pos:end="635:32"><expr pos:start="635:13" pos:end="635:31"><name pos:start="635:13" pos:end="635:27"><name pos:start="635:13" pos:end="635:14">sd</name><operator pos:start="635:15" pos:end="635:16">-&gt;</operator><name pos:start="635:17" pos:end="635:27">data_offset</name></name> <operator pos:start="635:29" pos:end="635:29">=</operator> <literal type="number" pos:start="635:31" pos:end="635:31">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="637:13" pos:end="637:32"><expr pos:start="637:13" pos:end="637:31"><name pos:start="637:13" pos:end="637:27"><name pos:start="637:13" pos:end="637:14">sd</name><operator pos:start="637:15" pos:end="637:16">-&gt;</operator><name pos:start="637:17" pos:end="637:27">blk_written</name></name> <operator pos:start="637:29" pos:end="637:29">=</operator> <literal type="number" pos:start="637:31" pos:end="637:31">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="641:13" pos:end="643:49"><if pos:start="641:13" pos:end="643:49">if <condition pos:start="641:16" pos:end="641:56">(<expr pos:start="641:17" pos:end="641:55"><name pos:start="641:17" pos:end="641:30"><name pos:start="641:17" pos:end="641:18">sd</name><operator pos:start="641:19" pos:end="641:20">-&gt;</operator><name pos:start="641:21" pos:end="641:30">data_start</name></name> <operator pos:start="641:32" pos:end="641:32">+</operator> <name pos:start="641:34" pos:end="641:44"><name pos:start="641:34" pos:end="641:35">sd</name><operator pos:start="641:36" pos:end="641:37">-&gt;</operator><name pos:start="641:38" pos:end="641:44">blk_len</name></name> <operator pos:start="641:46" pos:end="641:46">&gt;</operator> <name pos:start="641:48" pos:end="641:55"><name pos:start="641:48" pos:end="641:49">sd</name><operator pos:start="641:50" pos:end="641:51">-&gt;</operator><name pos:start="641:52" pos:end="641:55">size</name></name></expr>)</condition><block type="pseudo" pos:start="643:17" pos:end="643:49"><block_content pos:start="643:17" pos:end="643:49">

                <expr_stmt pos:start="643:17" pos:end="643:49"><expr pos:start="643:17" pos:end="643:48"><name pos:start="643:17" pos:end="643:31"><name pos:start="643:17" pos:end="643:18">sd</name><operator pos:start="643:19" pos:end="643:20">-&gt;</operator><name pos:start="643:21" pos:end="643:31">card_status</name></name> <operator pos:start="643:33" pos:end="643:34">|=</operator> <name pos:start="643:36" pos:end="643:48">ADDRESS_ERROR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="645:13" pos:end="647:48"><if pos:start="645:13" pos:end="647:48">if <condition pos:start="645:16" pos:end="645:47">(<expr pos:start="645:17" pos:end="645:46"><call pos:start="645:17" pos:end="645:46"><name pos:start="645:17" pos:end="645:26">sd_wp_addr</name><argument_list pos:start="645:27" pos:end="645:46">(<argument pos:start="645:28" pos:end="645:29"><expr pos:start="645:28" pos:end="645:29"><name pos:start="645:28" pos:end="645:29">sd</name></expr></argument>, <argument pos:start="645:32" pos:end="645:45"><expr pos:start="645:32" pos:end="645:45"><name pos:start="645:32" pos:end="645:45"><name pos:start="645:32" pos:end="645:33">sd</name><operator pos:start="645:34" pos:end="645:35">-&gt;</operator><name pos:start="645:36" pos:end="645:45">data_start</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="647:17" pos:end="647:48"><block_content pos:start="647:17" pos:end="647:48">

                <expr_stmt pos:start="647:17" pos:end="647:48"><expr pos:start="647:17" pos:end="647:47"><name pos:start="647:17" pos:end="647:31"><name pos:start="647:17" pos:end="647:18">sd</name><operator pos:start="647:19" pos:end="647:20">-&gt;</operator><name pos:start="647:21" pos:end="647:31">card_status</name></name> <operator pos:start="647:33" pos:end="647:34">|=</operator> <name pos:start="647:36" pos:end="647:47">WP_VIOLATION</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="649:13" pos:end="651:48"><if pos:start="649:13" pos:end="651:48">if <condition pos:start="649:16" pos:end="649:35">(<expr pos:start="649:17" pos:end="649:34"><name pos:start="649:17" pos:end="649:27"><name pos:start="649:17" pos:end="649:18">sd</name><operator pos:start="649:19" pos:end="649:20">-&gt;</operator><name pos:start="649:21" pos:end="649:23">csd</name><index pos:start="649:24" pos:end="649:27">[<expr pos:start="649:25" pos:end="649:26"><literal type="number" pos:start="649:25" pos:end="649:26">14</literal></expr>]</index></name> <operator pos:start="649:29" pos:end="649:29">&amp;</operator> <literal type="number" pos:start="649:31" pos:end="649:34">0x30</literal></expr>)</condition><block type="pseudo" pos:start="651:17" pos:end="651:48"><block_content pos:start="651:17" pos:end="651:48">

                <expr_stmt pos:start="651:17" pos:end="651:48"><expr pos:start="651:17" pos:end="651:47"><name pos:start="651:17" pos:end="651:31"><name pos:start="651:17" pos:end="651:18">sd</name><operator pos:start="651:19" pos:end="651:20">-&gt;</operator><name pos:start="651:21" pos:end="651:31">card_status</name></name> <operator pos:start="651:33" pos:end="651:34">|=</operator> <name pos:start="651:36" pos:end="651:47">WP_VIOLATION</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="653:13" pos:end="653:25">return <expr pos:start="653:20" pos:end="653:24"><name pos:start="653:20" pos:end="653:24">sd_r1</name></expr>;</return>



        <default pos:start="657:9" pos:end="657:16">default:</default>

            <break pos:start="659:13" pos:end="659:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="663:9" pos:end="663:14">break;</break>



    <case pos:start="667:5" pos:end="667:12">case <expr pos:start="667:10" pos:end="667:11"><literal type="number" pos:start="667:10" pos:end="667:11">25</literal></expr>:</case>	<comment type="block" pos:start="667:17" pos:end="667:50">/* CMD25:  WRITE_MULTIPLE_BLOCK */</comment>

        <if_stmt pos:start="669:9" pos:end="671:35"><if pos:start="669:9" pos:end="671:35">if <condition pos:start="669:12" pos:end="669:20">(<expr pos:start="669:13" pos:end="669:19"><name pos:start="669:13" pos:end="669:19"><name pos:start="669:13" pos:end="669:14">sd</name><operator pos:start="669:15" pos:end="669:16">-&gt;</operator><name pos:start="669:17" pos:end="669:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="671:13" pos:end="671:35"><block_content pos:start="671:13" pos:end="671:35">

            <goto pos:start="671:13" pos:end="671:35">goto <name pos:start="671:18" pos:end="671:34">unimplemented_cmd</name>;</goto></block_content></block></if></if_stmt>

        <switch pos:start="673:9" pos:end="713:9">switch <condition pos:start="673:16" pos:end="673:26">(<expr pos:start="673:17" pos:end="673:25"><name pos:start="673:17" pos:end="673:25"><name pos:start="673:17" pos:end="673:18">sd</name><operator pos:start="673:19" pos:end="673:20">-&gt;</operator><name pos:start="673:21" pos:end="673:25">state</name></name></expr>)</condition> <block pos:start="673:28" pos:end="713:9">{<block_content pos:start="675:9" pos:end="711:18">

        <case pos:start="675:9" pos:end="675:31">case <expr pos:start="675:14" pos:end="675:30"><name pos:start="675:14" pos:end="675:30">sd_transfer_state</name></expr>:</case>

            <comment type="block" pos:start="677:13" pos:end="677:55">/* Writing in SPI mode not implemented.  */</comment>

            <if_stmt pos:start="679:13" pos:end="681:22"><if pos:start="679:13" pos:end="681:22">if <condition pos:start="679:16" pos:end="679:24">(<expr pos:start="679:17" pos:end="679:23"><name pos:start="679:17" pos:end="679:23"><name pos:start="679:17" pos:end="679:18">sd</name><operator pos:start="679:19" pos:end="679:20">-&gt;</operator><name pos:start="679:21" pos:end="679:23">spi</name></name></expr>)</condition><block type="pseudo" pos:start="681:17" pos:end="681:22"><block_content pos:start="681:17" pos:end="681:22">

                <break pos:start="681:17" pos:end="681:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="683:13" pos:end="683:47"><expr pos:start="683:13" pos:end="683:46"><name pos:start="683:13" pos:end="683:21"><name pos:start="683:13" pos:end="683:14">sd</name><operator pos:start="683:15" pos:end="683:16">-&gt;</operator><name pos:start="683:17" pos:end="683:21">state</name></name> <operator pos:start="683:23" pos:end="683:23">=</operator> <name pos:start="683:25" pos:end="683:46">sd_receivingdata_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="685:13" pos:end="685:34"><expr pos:start="685:13" pos:end="685:33"><name pos:start="685:13" pos:end="685:26"><name pos:start="685:13" pos:end="685:14">sd</name><operator pos:start="685:15" pos:end="685:16">-&gt;</operator><name pos:start="685:17" pos:end="685:26">data_start</name></name> <operator pos:start="685:28" pos:end="685:28">=</operator> <name pos:start="685:30" pos:end="685:33">addr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="687:13" pos:end="687:32"><expr pos:start="687:13" pos:end="687:31"><name pos:start="687:13" pos:end="687:27"><name pos:start="687:13" pos:end="687:14">sd</name><operator pos:start="687:15" pos:end="687:16">-&gt;</operator><name pos:start="687:17" pos:end="687:27">data_offset</name></name> <operator pos:start="687:29" pos:end="687:29">=</operator> <literal type="number" pos:start="687:31" pos:end="687:31">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="689:13" pos:end="689:32"><expr pos:start="689:13" pos:end="689:31"><name pos:start="689:13" pos:end="689:27"><name pos:start="689:13" pos:end="689:14">sd</name><operator pos:start="689:15" pos:end="689:16">-&gt;</operator><name pos:start="689:17" pos:end="689:27">blk_written</name></name> <operator pos:start="689:29" pos:end="689:29">=</operator> <literal type="number" pos:start="689:31" pos:end="689:31">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="693:13" pos:end="695:49"><if pos:start="693:13" pos:end="695:49">if <condition pos:start="693:16" pos:end="693:56">(<expr pos:start="693:17" pos:end="693:55"><name pos:start="693:17" pos:end="693:30"><name pos:start="693:17" pos:end="693:18">sd</name><operator pos:start="693:19" pos:end="693:20">-&gt;</operator><name pos:start="693:21" pos:end="693:30">data_start</name></name> <operator pos:start="693:32" pos:end="693:32">+</operator> <name pos:start="693:34" pos:end="693:44"><name pos:start="693:34" pos:end="693:35">sd</name><operator pos:start="693:36" pos:end="693:37">-&gt;</operator><name pos:start="693:38" pos:end="693:44">blk_len</name></name> <operator pos:start="693:46" pos:end="693:46">&gt;</operator> <name pos:start="693:48" pos:end="693:55"><name pos:start="693:48" pos:end="693:49">sd</name><operator pos:start="693:50" pos:end="693:51">-&gt;</operator><name pos:start="693:52" pos:end="693:55">size</name></name></expr>)</condition><block type="pseudo" pos:start="695:17" pos:end="695:49"><block_content pos:start="695:17" pos:end="695:49">

                <expr_stmt pos:start="695:17" pos:end="695:49"><expr pos:start="695:17" pos:end="695:48"><name pos:start="695:17" pos:end="695:31"><name pos:start="695:17" pos:end="695:18">sd</name><operator pos:start="695:19" pos:end="695:20">-&gt;</operator><name pos:start="695:21" pos:end="695:31">card_status</name></name> <operator pos:start="695:33" pos:end="695:34">|=</operator> <name pos:start="695:36" pos:end="695:48">ADDRESS_ERROR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="697:13" pos:end="699:48"><if pos:start="697:13" pos:end="699:48">if <condition pos:start="697:16" pos:end="697:47">(<expr pos:start="697:17" pos:end="697:46"><call pos:start="697:17" pos:end="697:46"><name pos:start="697:17" pos:end="697:26">sd_wp_addr</name><argument_list pos:start="697:27" pos:end="697:46">(<argument pos:start="697:28" pos:end="697:29"><expr pos:start="697:28" pos:end="697:29"><name pos:start="697:28" pos:end="697:29">sd</name></expr></argument>, <argument pos:start="697:32" pos:end="697:45"><expr pos:start="697:32" pos:end="697:45"><name pos:start="697:32" pos:end="697:45"><name pos:start="697:32" pos:end="697:33">sd</name><operator pos:start="697:34" pos:end="697:35">-&gt;</operator><name pos:start="697:36" pos:end="697:45">data_start</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="699:17" pos:end="699:48"><block_content pos:start="699:17" pos:end="699:48">

                <expr_stmt pos:start="699:17" pos:end="699:48"><expr pos:start="699:17" pos:end="699:47"><name pos:start="699:17" pos:end="699:31"><name pos:start="699:17" pos:end="699:18">sd</name><operator pos:start="699:19" pos:end="699:20">-&gt;</operator><name pos:start="699:21" pos:end="699:31">card_status</name></name> <operator pos:start="699:33" pos:end="699:34">|=</operator> <name pos:start="699:36" pos:end="699:47">WP_VIOLATION</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="701:13" pos:end="703:48"><if pos:start="701:13" pos:end="703:48">if <condition pos:start="701:16" pos:end="701:35">(<expr pos:start="701:17" pos:end="701:34"><name pos:start="701:17" pos:end="701:27"><name pos:start="701:17" pos:end="701:18">sd</name><operator pos:start="701:19" pos:end="701:20">-&gt;</operator><name pos:start="701:21" pos:end="701:23">csd</name><index pos:start="701:24" pos:end="701:27">[<expr pos:start="701:25" pos:end="701:26"><literal type="number" pos:start="701:25" pos:end="701:26">14</literal></expr>]</index></name> <operator pos:start="701:29" pos:end="701:29">&amp;</operator> <literal type="number" pos:start="701:31" pos:end="701:34">0x30</literal></expr>)</condition><block type="pseudo" pos:start="703:17" pos:end="703:48"><block_content pos:start="703:17" pos:end="703:48">

                <expr_stmt pos:start="703:17" pos:end="703:48"><expr pos:start="703:17" pos:end="703:47"><name pos:start="703:17" pos:end="703:31"><name pos:start="703:17" pos:end="703:18">sd</name><operator pos:start="703:19" pos:end="703:20">-&gt;</operator><name pos:start="703:21" pos:end="703:31">card_status</name></name> <operator pos:start="703:33" pos:end="703:34">|=</operator> <name pos:start="703:36" pos:end="703:47">WP_VIOLATION</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="705:13" pos:end="705:25">return <expr pos:start="705:20" pos:end="705:24"><name pos:start="705:20" pos:end="705:24">sd_r1</name></expr>;</return>



        <default pos:start="709:9" pos:end="709:16">default:</default>

            <break pos:start="711:13" pos:end="711:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="715:9" pos:end="715:14">break;</break>



    <case pos:start="719:5" pos:end="719:12">case <expr pos:start="719:10" pos:end="719:11"><literal type="number" pos:start="719:10" pos:end="719:11">26</literal></expr>:</case>	<comment type="block" pos:start="719:17" pos:end="719:41">/* CMD26:  PROGRAM_CID */</comment>

        <if_stmt pos:start="721:9" pos:end="723:25"><if pos:start="721:9" pos:end="723:25">if <condition pos:start="721:12" pos:end="721:20">(<expr pos:start="721:13" pos:end="721:19"><name pos:start="721:13" pos:end="721:19"><name pos:start="721:13" pos:end="721:14">sd</name><operator pos:start="721:15" pos:end="721:16">-&gt;</operator><name pos:start="721:17" pos:end="721:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="723:13" pos:end="723:25"><block_content pos:start="723:13" pos:end="723:25">

            <goto pos:start="723:13" pos:end="723:25">goto <name pos:start="723:18" pos:end="723:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>

        <switch pos:start="725:9" pos:end="743:9">switch <condition pos:start="725:16" pos:end="725:26">(<expr pos:start="725:17" pos:end="725:25"><name pos:start="725:17" pos:end="725:25"><name pos:start="725:17" pos:end="725:18">sd</name><operator pos:start="725:19" pos:end="725:20">-&gt;</operator><name pos:start="725:21" pos:end="725:25">state</name></name></expr>)</condition> <block pos:start="725:28" pos:end="743:9">{<block_content pos:start="727:9" pos:end="741:18">

        <case pos:start="727:9" pos:end="727:31">case <expr pos:start="727:14" pos:end="727:30"><name pos:start="727:14" pos:end="727:30">sd_transfer_state</name></expr>:</case>

            <expr_stmt pos:start="729:13" pos:end="729:47"><expr pos:start="729:13" pos:end="729:46"><name pos:start="729:13" pos:end="729:21"><name pos:start="729:13" pos:end="729:14">sd</name><operator pos:start="729:15" pos:end="729:16">-&gt;</operator><name pos:start="729:17" pos:end="729:21">state</name></name> <operator pos:start="729:23" pos:end="729:23">=</operator> <name pos:start="729:25" pos:end="729:46">sd_receivingdata_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="731:13" pos:end="731:31"><expr pos:start="731:13" pos:end="731:30"><name pos:start="731:13" pos:end="731:26"><name pos:start="731:13" pos:end="731:14">sd</name><operator pos:start="731:15" pos:end="731:16">-&gt;</operator><name pos:start="731:17" pos:end="731:26">data_start</name></name> <operator pos:start="731:28" pos:end="731:28">=</operator> <literal type="number" pos:start="731:30" pos:end="731:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="733:13" pos:end="733:32"><expr pos:start="733:13" pos:end="733:31"><name pos:start="733:13" pos:end="733:27"><name pos:start="733:13" pos:end="733:14">sd</name><operator pos:start="733:15" pos:end="733:16">-&gt;</operator><name pos:start="733:17" pos:end="733:27">data_offset</name></name> <operator pos:start="733:29" pos:end="733:29">=</operator> <literal type="number" pos:start="733:31" pos:end="733:31">0</literal></expr>;</expr_stmt>

            <return pos:start="735:13" pos:end="735:25">return <expr pos:start="735:20" pos:end="735:24"><name pos:start="735:20" pos:end="735:24">sd_r1</name></expr>;</return>



        <default pos:start="739:9" pos:end="739:16">default:</default>

            <break pos:start="741:13" pos:end="741:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="745:9" pos:end="745:14">break;</break>



    <case pos:start="749:5" pos:end="749:12">case <expr pos:start="749:10" pos:end="749:11"><literal type="number" pos:start="749:10" pos:end="749:11">27</literal></expr>:</case>	<comment type="block" pos:start="749:17" pos:end="749:41">/* CMD27:  PROGRAM_CSD */</comment>

        <if_stmt pos:start="751:9" pos:end="753:35"><if pos:start="751:9" pos:end="753:35">if <condition pos:start="751:12" pos:end="751:20">(<expr pos:start="751:13" pos:end="751:19"><name pos:start="751:13" pos:end="751:19"><name pos:start="751:13" pos:end="751:14">sd</name><operator pos:start="751:15" pos:end="751:16">-&gt;</operator><name pos:start="751:17" pos:end="751:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="753:13" pos:end="753:35"><block_content pos:start="753:13" pos:end="753:35">

            <goto pos:start="753:13" pos:end="753:35">goto <name pos:start="753:18" pos:end="753:34">unimplemented_cmd</name>;</goto></block_content></block></if></if_stmt>

        <switch pos:start="755:9" pos:end="773:9">switch <condition pos:start="755:16" pos:end="755:26">(<expr pos:start="755:17" pos:end="755:25"><name pos:start="755:17" pos:end="755:25"><name pos:start="755:17" pos:end="755:18">sd</name><operator pos:start="755:19" pos:end="755:20">-&gt;</operator><name pos:start="755:21" pos:end="755:25">state</name></name></expr>)</condition> <block pos:start="755:28" pos:end="773:9">{<block_content pos:start="757:9" pos:end="771:18">

        <case pos:start="757:9" pos:end="757:31">case <expr pos:start="757:14" pos:end="757:30"><name pos:start="757:14" pos:end="757:30">sd_transfer_state</name></expr>:</case>

            <expr_stmt pos:start="759:13" pos:end="759:47"><expr pos:start="759:13" pos:end="759:46"><name pos:start="759:13" pos:end="759:21"><name pos:start="759:13" pos:end="759:14">sd</name><operator pos:start="759:15" pos:end="759:16">-&gt;</operator><name pos:start="759:17" pos:end="759:21">state</name></name> <operator pos:start="759:23" pos:end="759:23">=</operator> <name pos:start="759:25" pos:end="759:46">sd_receivingdata_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="761:13" pos:end="761:31"><expr pos:start="761:13" pos:end="761:30"><name pos:start="761:13" pos:end="761:26"><name pos:start="761:13" pos:end="761:14">sd</name><operator pos:start="761:15" pos:end="761:16">-&gt;</operator><name pos:start="761:17" pos:end="761:26">data_start</name></name> <operator pos:start="761:28" pos:end="761:28">=</operator> <literal type="number" pos:start="761:30" pos:end="761:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="763:13" pos:end="763:32"><expr pos:start="763:13" pos:end="763:31"><name pos:start="763:13" pos:end="763:27"><name pos:start="763:13" pos:end="763:14">sd</name><operator pos:start="763:15" pos:end="763:16">-&gt;</operator><name pos:start="763:17" pos:end="763:27">data_offset</name></name> <operator pos:start="763:29" pos:end="763:29">=</operator> <literal type="number" pos:start="763:31" pos:end="763:31">0</literal></expr>;</expr_stmt>

            <return pos:start="765:13" pos:end="765:25">return <expr pos:start="765:20" pos:end="765:24"><name pos:start="765:20" pos:end="765:24">sd_r1</name></expr>;</return>



        <default pos:start="769:9" pos:end="769:16">default:</default>

            <break pos:start="771:13" pos:end="771:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="775:9" pos:end="775:14">break;</break>



    <comment type="block" pos:start="779:5" pos:end="779:36">/* Write protection (Class 6) */</comment>

    <case pos:start="781:5" pos:end="781:12">case <expr pos:start="781:10" pos:end="781:11"><literal type="number" pos:start="781:10" pos:end="781:11">28</literal></expr>:</case>	<comment type="block" pos:start="781:17" pos:end="781:44">/* CMD28:  SET_WRITE_PROT */</comment>

        <switch pos:start="783:9" pos:end="813:9">switch <condition pos:start="783:16" pos:end="783:26">(<expr pos:start="783:17" pos:end="783:25"><name pos:start="783:17" pos:end="783:25"><name pos:start="783:17" pos:end="783:18">sd</name><operator pos:start="783:19" pos:end="783:20">-&gt;</operator><name pos:start="783:21" pos:end="783:25">state</name></name></expr>)</condition> <block pos:start="783:28" pos:end="813:9">{<block_content pos:start="785:9" pos:end="811:18">

        <case pos:start="785:9" pos:end="785:31">case <expr pos:start="785:14" pos:end="785:30"><name pos:start="785:14" pos:end="785:30">sd_transfer_state</name></expr>:</case>

            <if_stmt pos:start="787:13" pos:end="793:13"><if pos:start="787:13" pos:end="793:13">if <condition pos:start="787:16" pos:end="787:33">(<expr pos:start="787:17" pos:end="787:32"><name pos:start="787:17" pos:end="787:20">addr</name> <operator pos:start="787:22" pos:end="787:23">&gt;=</operator> <name pos:start="787:25" pos:end="787:32"><name pos:start="787:25" pos:end="787:26">sd</name><operator pos:start="787:27" pos:end="787:28">-&gt;</operator><name pos:start="787:29" pos:end="787:32">size</name></name></expr>)</condition> <block pos:start="787:35" pos:end="793:13">{<block_content pos:start="789:17" pos:end="791:30">

                <expr_stmt pos:start="789:17" pos:end="789:49"><expr pos:start="789:17" pos:end="789:48"><name pos:start="789:17" pos:end="789:31"><name pos:start="789:17" pos:end="789:18">sd</name><operator pos:start="789:19" pos:end="789:20">-&gt;</operator><name pos:start="789:21" pos:end="789:31">card_status</name></name> <operator pos:start="789:33" pos:end="789:34">|=</operator> <name pos:start="789:36" pos:end="789:48">ADDRESS_ERROR</name></expr>;</expr_stmt>

                <return pos:start="791:17" pos:end="791:30">return <expr pos:start="791:24" pos:end="791:29"><name pos:start="791:24" pos:end="791:29">sd_r1b</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="797:13" pos:end="797:45"><expr pos:start="797:13" pos:end="797:44"><name pos:start="797:13" pos:end="797:21"><name pos:start="797:13" pos:end="797:14">sd</name><operator pos:start="797:15" pos:end="797:16">-&gt;</operator><name pos:start="797:17" pos:end="797:21">state</name></name> <operator pos:start="797:23" pos:end="797:23">=</operator> <name pos:start="797:25" pos:end="797:44">sd_programming_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="799:13" pos:end="799:59"><expr pos:start="799:13" pos:end="799:58"><call pos:start="799:13" pos:end="799:58"><name pos:start="799:13" pos:end="799:19">set_bit</name><argument_list pos:start="799:20" pos:end="799:58">(<argument pos:start="799:21" pos:end="799:42"><expr pos:start="799:21" pos:end="799:42"><call pos:start="799:21" pos:end="799:42"><name pos:start="799:21" pos:end="799:36">sd_addr_to_wpnum</name><argument_list pos:start="799:37" pos:end="799:42">(<argument pos:start="799:38" pos:end="799:41"><expr pos:start="799:38" pos:end="799:41"><name pos:start="799:38" pos:end="799:41">addr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="799:45" pos:end="799:57"><expr pos:start="799:45" pos:end="799:57"><name pos:start="799:45" pos:end="799:57"><name pos:start="799:45" pos:end="799:46">sd</name><operator pos:start="799:47" pos:end="799:48">-&gt;</operator><name pos:start="799:49" pos:end="799:57">wp_groups</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="801:13" pos:end="801:54">/* Bzzzzzzztt .... Operation complete.  */</comment>

            <expr_stmt pos:start="803:13" pos:end="803:42"><expr pos:start="803:13" pos:end="803:41"><name pos:start="803:13" pos:end="803:21"><name pos:start="803:13" pos:end="803:14">sd</name><operator pos:start="803:15" pos:end="803:16">-&gt;</operator><name pos:start="803:17" pos:end="803:21">state</name></name> <operator pos:start="803:23" pos:end="803:23">=</operator> <name pos:start="803:25" pos:end="803:41">sd_transfer_state</name></expr>;</expr_stmt>

            <return pos:start="805:13" pos:end="805:26">return <expr pos:start="805:20" pos:end="805:25"><name pos:start="805:20" pos:end="805:25">sd_r1b</name></expr>;</return>



        <default pos:start="809:9" pos:end="809:16">default:</default>

            <break pos:start="811:13" pos:end="811:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="815:9" pos:end="815:14">break;</break>



    <case pos:start="819:5" pos:end="819:12">case <expr pos:start="819:10" pos:end="819:11"><literal type="number" pos:start="819:10" pos:end="819:11">29</literal></expr>:</case>	<comment type="block" pos:start="819:17" pos:end="819:44">/* CMD29:  CLR_WRITE_PROT */</comment>

        <switch pos:start="821:9" pos:end="851:9">switch <condition pos:start="821:16" pos:end="821:26">(<expr pos:start="821:17" pos:end="821:25"><name pos:start="821:17" pos:end="821:25"><name pos:start="821:17" pos:end="821:18">sd</name><operator pos:start="821:19" pos:end="821:20">-&gt;</operator><name pos:start="821:21" pos:end="821:25">state</name></name></expr>)</condition> <block pos:start="821:28" pos:end="851:9">{<block_content pos:start="823:9" pos:end="849:18">

        <case pos:start="823:9" pos:end="823:31">case <expr pos:start="823:14" pos:end="823:30"><name pos:start="823:14" pos:end="823:30">sd_transfer_state</name></expr>:</case>

            <if_stmt pos:start="825:13" pos:end="831:13"><if pos:start="825:13" pos:end="831:13">if <condition pos:start="825:16" pos:end="825:33">(<expr pos:start="825:17" pos:end="825:32"><name pos:start="825:17" pos:end="825:20">addr</name> <operator pos:start="825:22" pos:end="825:23">&gt;=</operator> <name pos:start="825:25" pos:end="825:32"><name pos:start="825:25" pos:end="825:26">sd</name><operator pos:start="825:27" pos:end="825:28">-&gt;</operator><name pos:start="825:29" pos:end="825:32">size</name></name></expr>)</condition> <block pos:start="825:35" pos:end="831:13">{<block_content pos:start="827:17" pos:end="829:30">

                <expr_stmt pos:start="827:17" pos:end="827:49"><expr pos:start="827:17" pos:end="827:48"><name pos:start="827:17" pos:end="827:31"><name pos:start="827:17" pos:end="827:18">sd</name><operator pos:start="827:19" pos:end="827:20">-&gt;</operator><name pos:start="827:21" pos:end="827:31">card_status</name></name> <operator pos:start="827:33" pos:end="827:34">|=</operator> <name pos:start="827:36" pos:end="827:48">ADDRESS_ERROR</name></expr>;</expr_stmt>

                <return pos:start="829:17" pos:end="829:30">return <expr pos:start="829:24" pos:end="829:29"><name pos:start="829:24" pos:end="829:29">sd_r1b</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="835:13" pos:end="835:45"><expr pos:start="835:13" pos:end="835:44"><name pos:start="835:13" pos:end="835:21"><name pos:start="835:13" pos:end="835:14">sd</name><operator pos:start="835:15" pos:end="835:16">-&gt;</operator><name pos:start="835:17" pos:end="835:21">state</name></name> <operator pos:start="835:23" pos:end="835:23">=</operator> <name pos:start="835:25" pos:end="835:44">sd_programming_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="837:13" pos:end="837:61"><expr pos:start="837:13" pos:end="837:60"><call pos:start="837:13" pos:end="837:60"><name pos:start="837:13" pos:end="837:21">clear_bit</name><argument_list pos:start="837:22" pos:end="837:60">(<argument pos:start="837:23" pos:end="837:44"><expr pos:start="837:23" pos:end="837:44"><call pos:start="837:23" pos:end="837:44"><name pos:start="837:23" pos:end="837:38">sd_addr_to_wpnum</name><argument_list pos:start="837:39" pos:end="837:44">(<argument pos:start="837:40" pos:end="837:43"><expr pos:start="837:40" pos:end="837:43"><name pos:start="837:40" pos:end="837:43">addr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="837:47" pos:end="837:59"><expr pos:start="837:47" pos:end="837:59"><name pos:start="837:47" pos:end="837:59"><name pos:start="837:47" pos:end="837:48">sd</name><operator pos:start="837:49" pos:end="837:50">-&gt;</operator><name pos:start="837:51" pos:end="837:59">wp_groups</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="839:13" pos:end="839:54">/* Bzzzzzzztt .... Operation complete.  */</comment>

            <expr_stmt pos:start="841:13" pos:end="841:42"><expr pos:start="841:13" pos:end="841:41"><name pos:start="841:13" pos:end="841:21"><name pos:start="841:13" pos:end="841:14">sd</name><operator pos:start="841:15" pos:end="841:16">-&gt;</operator><name pos:start="841:17" pos:end="841:21">state</name></name> <operator pos:start="841:23" pos:end="841:23">=</operator> <name pos:start="841:25" pos:end="841:41">sd_transfer_state</name></expr>;</expr_stmt>

            <return pos:start="843:13" pos:end="843:26">return <expr pos:start="843:20" pos:end="843:25"><name pos:start="843:20" pos:end="843:25">sd_r1b</name></expr>;</return>



        <default pos:start="847:9" pos:end="847:16">default:</default>

            <break pos:start="849:13" pos:end="849:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="853:9" pos:end="853:14">break;</break>



    <case pos:start="857:5" pos:end="857:12">case <expr pos:start="857:10" pos:end="857:11"><literal type="number" pos:start="857:10" pos:end="857:11">30</literal></expr>:</case>	<comment type="block" pos:start="857:17" pos:end="857:45">/* CMD30:  SEND_WRITE_PROT */</comment>

        <switch pos:start="859:9" pos:end="879:9">switch <condition pos:start="859:16" pos:end="859:26">(<expr pos:start="859:17" pos:end="859:25"><name pos:start="859:17" pos:end="859:25"><name pos:start="859:17" pos:end="859:18">sd</name><operator pos:start="859:19" pos:end="859:20">-&gt;</operator><name pos:start="859:21" pos:end="859:25">state</name></name></expr>)</condition> <block pos:start="859:28" pos:end="879:9">{<block_content pos:start="861:9" pos:end="877:18">

        <case pos:start="861:9" pos:end="861:31">case <expr pos:start="861:14" pos:end="861:30"><name pos:start="861:14" pos:end="861:30">sd_transfer_state</name></expr>:</case>

            <expr_stmt pos:start="863:13" pos:end="863:45"><expr pos:start="863:13" pos:end="863:44"><name pos:start="863:13" pos:end="863:21"><name pos:start="863:13" pos:end="863:14">sd</name><operator pos:start="863:15" pos:end="863:16">-&gt;</operator><name pos:start="863:17" pos:end="863:21">state</name></name> <operator pos:start="863:23" pos:end="863:23">=</operator> <name pos:start="863:25" pos:end="863:44">sd_sendingdata_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="865:13" pos:end="865:60"><expr pos:start="865:13" pos:end="865:59"><operator pos:start="865:13" pos:end="865:13">*</operator><operator pos:start="865:14" pos:end="865:14">(</operator><name pos:start="865:15" pos:end="865:22">uint32_t</name> <operator pos:start="865:24" pos:end="865:24">*</operator><operator pos:start="865:25" pos:end="865:25">)</operator> <name pos:start="865:27" pos:end="865:34"><name pos:start="865:27" pos:end="865:28">sd</name><operator pos:start="865:29" pos:end="865:30">-&gt;</operator><name pos:start="865:31" pos:end="865:34">data</name></name> <operator pos:start="865:36" pos:end="865:36">=</operator> <call pos:start="865:38" pos:end="865:59"><name pos:start="865:38" pos:end="865:46">sd_wpbits</name><argument_list pos:start="865:47" pos:end="865:59">(<argument pos:start="865:48" pos:end="865:49"><expr pos:start="865:48" pos:end="865:49"><name pos:start="865:48" pos:end="865:49">sd</name></expr></argument>, <argument pos:start="865:52" pos:end="865:58"><expr pos:start="865:52" pos:end="865:58"><name pos:start="865:52" pos:end="865:58"><name pos:start="865:52" pos:end="865:54">req</name><operator pos:start="865:55" pos:end="865:55">.</operator><name pos:start="865:56" pos:end="865:58">arg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="867:13" pos:end="867:34"><expr pos:start="867:13" pos:end="867:33"><name pos:start="867:13" pos:end="867:26"><name pos:start="867:13" pos:end="867:14">sd</name><operator pos:start="867:15" pos:end="867:16">-&gt;</operator><name pos:start="867:17" pos:end="867:26">data_start</name></name> <operator pos:start="867:28" pos:end="867:28">=</operator> <name pos:start="867:30" pos:end="867:33">addr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="869:13" pos:end="869:32"><expr pos:start="869:13" pos:end="869:31"><name pos:start="869:13" pos:end="869:27"><name pos:start="869:13" pos:end="869:14">sd</name><operator pos:start="869:15" pos:end="869:16">-&gt;</operator><name pos:start="869:17" pos:end="869:27">data_offset</name></name> <operator pos:start="869:29" pos:end="869:29">=</operator> <literal type="number" pos:start="869:31" pos:end="869:31">0</literal></expr>;</expr_stmt>

            <return pos:start="871:13" pos:end="871:26">return <expr pos:start="871:20" pos:end="871:25"><name pos:start="871:20" pos:end="871:25">sd_r1b</name></expr>;</return>



        <default pos:start="875:9" pos:end="875:16">default:</default>

            <break pos:start="877:13" pos:end="877:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="881:9" pos:end="881:14">break;</break>



    <comment type="block" pos:start="885:5" pos:end="885:34">/* Erase commands (Class 5) */</comment>

    <case pos:start="887:5" pos:end="887:12">case <expr pos:start="887:10" pos:end="887:11"><literal type="number" pos:start="887:10" pos:end="887:11">32</literal></expr>:</case>	<comment type="block" pos:start="887:17" pos:end="887:48">/* CMD32:  ERASE_WR_BLK_START */</comment>

        <switch pos:start="889:9" pos:end="903:9">switch <condition pos:start="889:16" pos:end="889:26">(<expr pos:start="889:17" pos:end="889:25"><name pos:start="889:17" pos:end="889:25"><name pos:start="889:17" pos:end="889:18">sd</name><operator pos:start="889:19" pos:end="889:20">-&gt;</operator><name pos:start="889:21" pos:end="889:25">state</name></name></expr>)</condition> <block pos:start="889:28" pos:end="903:9">{<block_content pos:start="891:9" pos:end="901:18">

        <case pos:start="891:9" pos:end="891:31">case <expr pos:start="891:14" pos:end="891:30"><name pos:start="891:14" pos:end="891:30">sd_transfer_state</name></expr>:</case>

            <expr_stmt pos:start="893:13" pos:end="893:38"><expr pos:start="893:13" pos:end="893:37"><name pos:start="893:13" pos:end="893:27"><name pos:start="893:13" pos:end="893:14">sd</name><operator pos:start="893:15" pos:end="893:16">-&gt;</operator><name pos:start="893:17" pos:end="893:27">erase_start</name></name> <operator pos:start="893:29" pos:end="893:29">=</operator> <name pos:start="893:31" pos:end="893:37"><name pos:start="893:31" pos:end="893:33">req</name><operator pos:start="893:34" pos:end="893:34">.</operator><name pos:start="893:35" pos:end="893:37">arg</name></name></expr>;</expr_stmt>

            <return pos:start="895:13" pos:end="895:25">return <expr pos:start="895:20" pos:end="895:24"><name pos:start="895:20" pos:end="895:24">sd_r1</name></expr>;</return>



        <default pos:start="899:9" pos:end="899:16">default:</default>

            <break pos:start="901:13" pos:end="901:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="905:9" pos:end="905:14">break;</break>



    <case pos:start="909:5" pos:end="909:12">case <expr pos:start="909:10" pos:end="909:11"><literal type="number" pos:start="909:10" pos:end="909:11">33</literal></expr>:</case>	<comment type="block" pos:start="909:17" pos:end="909:46">/* CMD33:  ERASE_WR_BLK_END */</comment>

        <switch pos:start="911:9" pos:end="925:9">switch <condition pos:start="911:16" pos:end="911:26">(<expr pos:start="911:17" pos:end="911:25"><name pos:start="911:17" pos:end="911:25"><name pos:start="911:17" pos:end="911:18">sd</name><operator pos:start="911:19" pos:end="911:20">-&gt;</operator><name pos:start="911:21" pos:end="911:25">state</name></name></expr>)</condition> <block pos:start="911:28" pos:end="925:9">{<block_content pos:start="913:9" pos:end="923:18">

        <case pos:start="913:9" pos:end="913:31">case <expr pos:start="913:14" pos:end="913:30"><name pos:start="913:14" pos:end="913:30">sd_transfer_state</name></expr>:</case>

            <expr_stmt pos:start="915:13" pos:end="915:36"><expr pos:start="915:13" pos:end="915:35"><name pos:start="915:13" pos:end="915:25"><name pos:start="915:13" pos:end="915:14">sd</name><operator pos:start="915:15" pos:end="915:16">-&gt;</operator><name pos:start="915:17" pos:end="915:25">erase_end</name></name> <operator pos:start="915:27" pos:end="915:27">=</operator> <name pos:start="915:29" pos:end="915:35"><name pos:start="915:29" pos:end="915:31">req</name><operator pos:start="915:32" pos:end="915:32">.</operator><name pos:start="915:33" pos:end="915:35">arg</name></name></expr>;</expr_stmt>

            <return pos:start="917:13" pos:end="917:25">return <expr pos:start="917:20" pos:end="917:24"><name pos:start="917:20" pos:end="917:24">sd_r1</name></expr>;</return>



        <default pos:start="921:9" pos:end="921:16">default:</default>

            <break pos:start="923:13" pos:end="923:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="927:9" pos:end="927:14">break;</break>



    <case pos:start="931:5" pos:end="931:12">case <expr pos:start="931:10" pos:end="931:11"><literal type="number" pos:start="931:10" pos:end="931:11">38</literal></expr>:</case>	<comment type="block" pos:start="931:17" pos:end="931:35">/* CMD38:  ERASE */</comment>

        <switch pos:start="933:9" pos:end="963:9">switch <condition pos:start="933:16" pos:end="933:26">(<expr pos:start="933:17" pos:end="933:25"><name pos:start="933:17" pos:end="933:25"><name pos:start="933:17" pos:end="933:18">sd</name><operator pos:start="933:19" pos:end="933:20">-&gt;</operator><name pos:start="933:21" pos:end="933:25">state</name></name></expr>)</condition> <block pos:start="933:28" pos:end="963:9">{<block_content pos:start="935:9" pos:end="961:18">

        <case pos:start="935:9" pos:end="935:31">case <expr pos:start="935:14" pos:end="935:30"><name pos:start="935:14" pos:end="935:30">sd_transfer_state</name></expr>:</case>

            <if_stmt pos:start="937:13" pos:end="943:13"><if pos:start="937:13" pos:end="943:13">if <condition pos:start="937:16" pos:end="937:35">(<expr pos:start="937:17" pos:end="937:34"><name pos:start="937:17" pos:end="937:27"><name pos:start="937:17" pos:end="937:18">sd</name><operator pos:start="937:19" pos:end="937:20">-&gt;</operator><name pos:start="937:21" pos:end="937:23">csd</name><index pos:start="937:24" pos:end="937:27">[<expr pos:start="937:25" pos:end="937:26"><literal type="number" pos:start="937:25" pos:end="937:26">14</literal></expr>]</index></name> <operator pos:start="937:29" pos:end="937:29">&amp;</operator> <literal type="number" pos:start="937:31" pos:end="937:34">0x30</literal></expr>)</condition> <block pos:start="937:37" pos:end="943:13">{<block_content pos:start="939:17" pos:end="941:30">

                <expr_stmt pos:start="939:17" pos:end="939:48"><expr pos:start="939:17" pos:end="939:47"><name pos:start="939:17" pos:end="939:31"><name pos:start="939:17" pos:end="939:18">sd</name><operator pos:start="939:19" pos:end="939:20">-&gt;</operator><name pos:start="939:21" pos:end="939:31">card_status</name></name> <operator pos:start="939:33" pos:end="939:34">|=</operator> <name pos:start="939:36" pos:end="939:47">WP_VIOLATION</name></expr>;</expr_stmt>

                <return pos:start="941:17" pos:end="941:30">return <expr pos:start="941:24" pos:end="941:29"><name pos:start="941:24" pos:end="941:29">sd_r1b</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="947:13" pos:end="947:45"><expr pos:start="947:13" pos:end="947:44"><name pos:start="947:13" pos:end="947:21"><name pos:start="947:13" pos:end="947:14">sd</name><operator pos:start="947:15" pos:end="947:16">-&gt;</operator><name pos:start="947:17" pos:end="947:21">state</name></name> <operator pos:start="947:23" pos:end="947:23">=</operator> <name pos:start="947:25" pos:end="947:44">sd_programming_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="949:13" pos:end="949:25"><expr pos:start="949:13" pos:end="949:24"><call pos:start="949:13" pos:end="949:24"><name pos:start="949:13" pos:end="949:20">sd_erase</name><argument_list pos:start="949:21" pos:end="949:24">(<argument pos:start="949:22" pos:end="949:23"><expr pos:start="949:22" pos:end="949:23"><name pos:start="949:22" pos:end="949:23">sd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="951:13" pos:end="951:54">/* Bzzzzzzztt .... Operation complete.  */</comment>

            <expr_stmt pos:start="953:13" pos:end="953:42"><expr pos:start="953:13" pos:end="953:41"><name pos:start="953:13" pos:end="953:21"><name pos:start="953:13" pos:end="953:14">sd</name><operator pos:start="953:15" pos:end="953:16">-&gt;</operator><name pos:start="953:17" pos:end="953:21">state</name></name> <operator pos:start="953:23" pos:end="953:23">=</operator> <name pos:start="953:25" pos:end="953:41">sd_transfer_state</name></expr>;</expr_stmt>

            <return pos:start="955:13" pos:end="955:26">return <expr pos:start="955:20" pos:end="955:25"><name pos:start="955:20" pos:end="955:25">sd_r1b</name></expr>;</return>



        <default pos:start="959:9" pos:end="959:16">default:</default>

            <break pos:start="961:13" pos:end="961:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="965:9" pos:end="965:14">break;</break>



    <comment type="block" pos:start="969:5" pos:end="969:38">/* Lock card commands (Class 7) */</comment>

    <case pos:start="971:5" pos:end="971:12">case <expr pos:start="971:10" pos:end="971:11"><literal type="number" pos:start="971:10" pos:end="971:11">42</literal></expr>:</case>	<comment type="block" pos:start="971:17" pos:end="971:41">/* CMD42:  LOCK_UNLOCK */</comment>

        <if_stmt pos:start="973:9" pos:end="975:35"><if pos:start="973:9" pos:end="975:35">if <condition pos:start="973:12" pos:end="973:20">(<expr pos:start="973:13" pos:end="973:19"><name pos:start="973:13" pos:end="973:19"><name pos:start="973:13" pos:end="973:14">sd</name><operator pos:start="973:15" pos:end="973:16">-&gt;</operator><name pos:start="973:17" pos:end="973:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="975:13" pos:end="975:35"><block_content pos:start="975:13" pos:end="975:35">

            <goto pos:start="975:13" pos:end="975:35">goto <name pos:start="975:18" pos:end="975:34">unimplemented_cmd</name>;</goto></block_content></block></if></if_stmt>

        <switch pos:start="977:9" pos:end="995:9">switch <condition pos:start="977:16" pos:end="977:26">(<expr pos:start="977:17" pos:end="977:25"><name pos:start="977:17" pos:end="977:25"><name pos:start="977:17" pos:end="977:18">sd</name><operator pos:start="977:19" pos:end="977:20">-&gt;</operator><name pos:start="977:21" pos:end="977:25">state</name></name></expr>)</condition> <block pos:start="977:28" pos:end="995:9">{<block_content pos:start="979:9" pos:end="993:18">

        <case pos:start="979:9" pos:end="979:31">case <expr pos:start="979:14" pos:end="979:30"><name pos:start="979:14" pos:end="979:30">sd_transfer_state</name></expr>:</case>

            <expr_stmt pos:start="981:13" pos:end="981:47"><expr pos:start="981:13" pos:end="981:46"><name pos:start="981:13" pos:end="981:21"><name pos:start="981:13" pos:end="981:14">sd</name><operator pos:start="981:15" pos:end="981:16">-&gt;</operator><name pos:start="981:17" pos:end="981:21">state</name></name> <operator pos:start="981:23" pos:end="981:23">=</operator> <name pos:start="981:25" pos:end="981:46">sd_receivingdata_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="983:13" pos:end="983:31"><expr pos:start="983:13" pos:end="983:30"><name pos:start="983:13" pos:end="983:26"><name pos:start="983:13" pos:end="983:14">sd</name><operator pos:start="983:15" pos:end="983:16">-&gt;</operator><name pos:start="983:17" pos:end="983:26">data_start</name></name> <operator pos:start="983:28" pos:end="983:28">=</operator> <literal type="number" pos:start="983:30" pos:end="983:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="985:13" pos:end="985:32"><expr pos:start="985:13" pos:end="985:31"><name pos:start="985:13" pos:end="985:27"><name pos:start="985:13" pos:end="985:14">sd</name><operator pos:start="985:15" pos:end="985:16">-&gt;</operator><name pos:start="985:17" pos:end="985:27">data_offset</name></name> <operator pos:start="985:29" pos:end="985:29">=</operator> <literal type="number" pos:start="985:31" pos:end="985:31">0</literal></expr>;</expr_stmt>

            <return pos:start="987:13" pos:end="987:25">return <expr pos:start="987:20" pos:end="987:24"><name pos:start="987:20" pos:end="987:24">sd_r1</name></expr>;</return>



        <default pos:start="991:9" pos:end="991:16">default:</default>

            <break pos:start="993:13" pos:end="993:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="997:9" pos:end="997:14">break;</break>



    <case pos:start="1001:5" pos:end="1001:12">case <expr pos:start="1001:10" pos:end="1001:11"><literal type="number" pos:start="1001:10" pos:end="1001:11">52</literal></expr>:</case>

    <case pos:start="1003:5" pos:end="1003:12">case <expr pos:start="1003:10" pos:end="1003:11"><literal type="number" pos:start="1003:10" pos:end="1003:11">53</literal></expr>:</case>

        <comment type="block" pos:start="1005:9" pos:end="1015:11">/* CMD52, CMD53: reserved for SDIO cards

         * (see the SDIO Simplified Specification V2.0)

         * Handle as illegal command but do not complain

         * on stderr, as some OSes may use these in their

         * probing for presence of an SDIO card.

         */</comment>

        <return pos:start="1017:9" pos:end="1017:26">return <expr pos:start="1017:16" pos:end="1017:25"><name pos:start="1017:16" pos:end="1017:25">sd_illegal</name></expr>;</return>



    <comment type="block" pos:start="1021:5" pos:end="1021:49">/* Application specific commands (Class 8) */</comment>

    <case pos:start="1023:5" pos:end="1023:12">case <expr pos:start="1023:10" pos:end="1023:11"><literal type="number" pos:start="1023:10" pos:end="1023:11">55</literal></expr>:</case>	<comment type="block" pos:start="1023:17" pos:end="1023:37">/* CMD55:  APP_CMD */</comment>

        <if_stmt pos:start="1025:9" pos:end="1027:25"><if pos:start="1025:9" pos:end="1027:25">if <condition pos:start="1025:12" pos:end="1025:27">(<expr pos:start="1025:13" pos:end="1025:26"><name pos:start="1025:13" pos:end="1025:19"><name pos:start="1025:13" pos:end="1025:14">sd</name><operator pos:start="1025:15" pos:end="1025:16">-&gt;</operator><name pos:start="1025:17" pos:end="1025:19">rca</name></name> <operator pos:start="1025:21" pos:end="1025:22">!=</operator> <name pos:start="1025:24" pos:end="1025:26">rca</name></expr>)</condition><block type="pseudo" pos:start="1027:13" pos:end="1027:25"><block_content pos:start="1027:13" pos:end="1027:25">

            <return pos:start="1027:13" pos:end="1027:25">return <expr pos:start="1027:20" pos:end="1027:24"><name pos:start="1027:20" pos:end="1027:24">sd_r0</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="1031:9" pos:end="1031:34"><expr pos:start="1031:9" pos:end="1031:33"><name pos:start="1031:9" pos:end="1031:26"><name pos:start="1031:9" pos:end="1031:10">sd</name><operator pos:start="1031:11" pos:end="1031:12">-&gt;</operator><name pos:start="1031:13" pos:end="1031:26">expecting_acmd</name></name> <operator pos:start="1031:28" pos:end="1031:28">=</operator> <name pos:start="1031:30" pos:end="1031:33">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="1033:9" pos:end="1033:35"><expr pos:start="1033:9" pos:end="1033:34"><name pos:start="1033:9" pos:end="1033:23"><name pos:start="1033:9" pos:end="1033:10">sd</name><operator pos:start="1033:11" pos:end="1033:12">-&gt;</operator><name pos:start="1033:13" pos:end="1033:23">card_status</name></name> <operator pos:start="1033:25" pos:end="1033:26">|=</operator> <name pos:start="1033:28" pos:end="1033:34">APP_CMD</name></expr>;</expr_stmt>

        <return pos:start="1035:9" pos:end="1035:21">return <expr pos:start="1035:16" pos:end="1035:20"><name pos:start="1035:16" pos:end="1035:20">sd_r1</name></expr>;</return>



    <case pos:start="1039:5" pos:end="1039:12">case <expr pos:start="1039:10" pos:end="1039:11"><literal type="number" pos:start="1039:10" pos:end="1039:11">56</literal></expr>:</case>	<comment type="block" pos:start="1039:17" pos:end="1039:37">/* CMD56:  GEN_CMD */</comment>

        <expr_stmt pos:start="1041:9" pos:end="1041:57"><expr pos:start="1041:9" pos:end="1041:56"><call pos:start="1041:9" pos:end="1041:56"><name pos:start="1041:9" pos:end="1041:15">fprintf</name><argument_list pos:start="1041:16" pos:end="1041:56">(<argument pos:start="1041:17" pos:end="1041:22"><expr pos:start="1041:17" pos:end="1041:22"><name pos:start="1041:17" pos:end="1041:22">stderr</name></expr></argument>, <argument pos:start="1041:25" pos:end="1041:46"><expr pos:start="1041:25" pos:end="1041:46"><literal type="string" pos:start="1041:25" pos:end="1041:46">"SD: GEN_CMD 0x%08x\n"</literal></expr></argument>, <argument pos:start="1041:49" pos:end="1041:55"><expr pos:start="1041:49" pos:end="1041:55"><name pos:start="1041:49" pos:end="1041:55"><name pos:start="1041:49" pos:end="1041:51">req</name><operator pos:start="1041:52" pos:end="1041:52">.</operator><name pos:start="1041:53" pos:end="1041:55">arg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="1045:9" pos:end="1067:9">switch <condition pos:start="1045:16" pos:end="1045:26">(<expr pos:start="1045:17" pos:end="1045:25"><name pos:start="1045:17" pos:end="1045:25"><name pos:start="1045:17" pos:end="1045:18">sd</name><operator pos:start="1045:19" pos:end="1045:20">-&gt;</operator><name pos:start="1045:21" pos:end="1045:25">state</name></name></expr>)</condition> <block pos:start="1045:28" pos:end="1067:9">{<block_content pos:start="1047:9" pos:end="1065:18">

        <case pos:start="1047:9" pos:end="1047:31">case <expr pos:start="1047:14" pos:end="1047:30"><name pos:start="1047:14" pos:end="1047:30">sd_transfer_state</name></expr>:</case>

            <expr_stmt pos:start="1049:13" pos:end="1049:32"><expr pos:start="1049:13" pos:end="1049:31"><name pos:start="1049:13" pos:end="1049:27"><name pos:start="1049:13" pos:end="1049:14">sd</name><operator pos:start="1049:15" pos:end="1049:16">-&gt;</operator><name pos:start="1049:17" pos:end="1049:27">data_offset</name></name> <operator pos:start="1049:29" pos:end="1049:29">=</operator> <literal type="number" pos:start="1049:31" pos:end="1049:31">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1051:13" pos:end="1057:51"><if pos:start="1051:13" pos:end="1053:49">if <condition pos:start="1051:16" pos:end="1051:28">(<expr pos:start="1051:17" pos:end="1051:27"><name pos:start="1051:17" pos:end="1051:23"><name pos:start="1051:17" pos:end="1051:19">req</name><operator pos:start="1051:20" pos:end="1051:20">.</operator><name pos:start="1051:21" pos:end="1051:23">arg</name></name> <operator pos:start="1051:25" pos:end="1051:25">&amp;</operator> <literal type="number" pos:start="1051:27" pos:end="1051:27">1</literal></expr>)</condition><block type="pseudo" pos:start="1053:17" pos:end="1053:49"><block_content pos:start="1053:17" pos:end="1053:49">

                <expr_stmt pos:start="1053:17" pos:end="1053:49"><expr pos:start="1053:17" pos:end="1053:48"><name pos:start="1053:17" pos:end="1053:25"><name pos:start="1053:17" pos:end="1053:18">sd</name><operator pos:start="1053:19" pos:end="1053:20">-&gt;</operator><name pos:start="1053:21" pos:end="1053:25">state</name></name> <operator pos:start="1053:27" pos:end="1053:27">=</operator> <name pos:start="1053:29" pos:end="1053:48">sd_sendingdata_state</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1055:13" pos:end="1057:51">else<block type="pseudo" pos:start="1057:17" pos:end="1057:51"><block_content pos:start="1057:17" pos:end="1057:51">

                <expr_stmt pos:start="1057:17" pos:end="1057:51"><expr pos:start="1057:17" pos:end="1057:50"><name pos:start="1057:17" pos:end="1057:25"><name pos:start="1057:17" pos:end="1057:18">sd</name><operator pos:start="1057:19" pos:end="1057:20">-&gt;</operator><name pos:start="1057:21" pos:end="1057:25">state</name></name> <operator pos:start="1057:27" pos:end="1057:27">=</operator> <name pos:start="1057:29" pos:end="1057:50">sd_receivingdata_state</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <return pos:start="1059:13" pos:end="1059:25">return <expr pos:start="1059:20" pos:end="1059:24"><name pos:start="1059:20" pos:end="1059:24">sd_r1</name></expr>;</return>



        <default pos:start="1063:9" pos:end="1063:16">default:</default>

            <break pos:start="1065:13" pos:end="1065:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="1069:9" pos:end="1069:14">break;</break>



    <default pos:start="1073:5" pos:end="1073:12">default:</default>

    <label pos:start="1075:5" pos:end="1075:12"><name pos:start="1075:5" pos:end="1075:11">bad_cmd</name>:</label>

        <expr_stmt pos:start="1077:9" pos:end="1077:56"><expr pos:start="1077:9" pos:end="1077:55"><call pos:start="1077:9" pos:end="1077:55"><name pos:start="1077:9" pos:end="1077:15">fprintf</name><argument_list pos:start="1077:16" pos:end="1077:55">(<argument pos:start="1077:17" pos:end="1077:22"><expr pos:start="1077:17" pos:end="1077:22"><name pos:start="1077:17" pos:end="1077:22">stderr</name></expr></argument>, <argument pos:start="1077:25" pos:end="1077:45"><expr pos:start="1077:25" pos:end="1077:45"><literal type="string" pos:start="1077:25" pos:end="1077:45">"SD: Unknown CMD%i\n"</literal></expr></argument>, <argument pos:start="1077:48" pos:end="1077:54"><expr pos:start="1077:48" pos:end="1077:54"><name pos:start="1077:48" pos:end="1077:54"><name pos:start="1077:48" pos:end="1077:50">req</name><operator pos:start="1077:51" pos:end="1077:51">.</operator><name pos:start="1077:52" pos:end="1077:54">cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="1079:9" pos:end="1079:26">return <expr pos:start="1079:16" pos:end="1079:25"><name pos:start="1079:16" pos:end="1079:25">sd_illegal</name></expr>;</return>



    <label pos:start="1083:5" pos:end="1083:22"><name pos:start="1083:5" pos:end="1083:21">unimplemented_cmd</name>:</label>

        <comment type="block" pos:start="1085:9" pos:end="1085:80">/* Commands that are recognised but not yet implemented in SPI mode.  */</comment>

        <expr_stmt pos:start="1087:9" pos:end="1087:76"><expr pos:start="1087:9" pos:end="1087:75"><call pos:start="1087:9" pos:end="1087:75"><name pos:start="1087:9" pos:end="1087:15">fprintf</name><argument_list pos:start="1087:16" pos:end="1087:75">(<argument pos:start="1087:17" pos:end="1087:22"><expr pos:start="1087:17" pos:end="1087:22"><name pos:start="1087:17" pos:end="1087:22">stderr</name></expr></argument>, <argument pos:start="1087:25" pos:end="1087:65"><expr pos:start="1087:25" pos:end="1087:65"><literal type="string" pos:start="1087:25" pos:end="1087:65">"SD: CMD%i not implemented in SPI mode\n"</literal></expr></argument>, <argument pos:start="1087:68" pos:end="1087:74"><expr pos:start="1087:68" pos:end="1087:74"><name pos:start="1087:68" pos:end="1087:74"><name pos:start="1087:68" pos:end="1087:70">req</name><operator pos:start="1087:71" pos:end="1087:71">.</operator><name pos:start="1087:72" pos:end="1087:74">cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="1089:9" pos:end="1089:26">return <expr pos:start="1089:16" pos:end="1089:25"><name pos:start="1089:16" pos:end="1089:25">sd_illegal</name></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="1095:5" pos:end="1095:61"><expr pos:start="1095:5" pos:end="1095:60"><call pos:start="1095:5" pos:end="1095:60"><name pos:start="1095:5" pos:end="1095:11">fprintf</name><argument_list pos:start="1095:12" pos:end="1095:60">(<argument pos:start="1095:13" pos:end="1095:18"><expr pos:start="1095:13" pos:end="1095:18"><name pos:start="1095:13" pos:end="1095:18">stderr</name></expr></argument>, <argument pos:start="1095:21" pos:end="1095:50"><expr pos:start="1095:21" pos:end="1095:50"><literal type="string" pos:start="1095:21" pos:end="1095:50">"SD: CMD%i in a wrong state\n"</literal></expr></argument>, <argument pos:start="1095:53" pos:end="1095:59"><expr pos:start="1095:53" pos:end="1095:59"><name pos:start="1095:53" pos:end="1095:59"><name pos:start="1095:53" pos:end="1095:55">req</name><operator pos:start="1095:56" pos:end="1095:56">.</operator><name pos:start="1095:57" pos:end="1095:59">cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="1097:5" pos:end="1097:22">return <expr pos:start="1097:12" pos:end="1097:21"><name pos:start="1097:12" pos:end="1097:21">sd_illegal</name></expr>;</return>

</block_content>}</block></function>
</unit>
