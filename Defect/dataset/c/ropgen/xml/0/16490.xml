<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16490.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">vmsvga_init</name><parameter_list pos:start="1:24" pos:end="5:33">(<parameter pos:start="1:25" pos:end="1:48"><decl pos:start="1:25" pos:end="1:48"><type pos:start="1:25" pos:end="1:48"><name pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:30">struct</name> <name pos:start="1:32" pos:end="1:45">vmsvga_state_s</name></name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:66"><decl pos:start="1:51" pos:end="1:66"><type pos:start="1:51" pos:end="1:66"><name pos:start="1:51" pos:end="1:62">DisplayState</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:66">ds</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:37"><decl pos:start="3:17" pos:end="3:37"><type pos:start="3:17" pos:end="3:37"><name pos:start="3:17" pos:end="3:23">uint8_t</name> <modifier pos:start="3:25" pos:end="3:25">*</modifier></type><name pos:start="3:26" pos:end="3:37">vga_ram_base</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:67"><decl pos:start="3:40" pos:end="3:67"><type pos:start="3:40" pos:end="3:67"><name pos:start="3:40" pos:end="3:47">unsigned</name> <name pos:start="3:49" pos:end="3:52">long</name></type> <name pos:start="3:54" pos:end="3:67">vga_ram_offset</name></decl></parameter>,

                <parameter pos:start="5:17" pos:end="5:32"><decl pos:start="5:17" pos:end="5:32"><type pos:start="5:17" pos:end="5:32"><name pos:start="5:17" pos:end="5:19">int</name></type> <name pos:start="5:21" pos:end="5:32">vga_ram_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="49:1">{<block_content pos:start="9:5" pos:end="48:0">

    <expr_stmt pos:start="9:5" pos:end="9:15"><expr pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:9">ds</name></name> <operator pos:start="9:11" pos:end="9:11">=</operator> <name pos:start="9:13" pos:end="9:14">ds</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:11">vram</name></name> <operator pos:start="11:13" pos:end="11:13">=</operator> <name pos:start="11:15" pos:end="11:26">vga_ram_base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:32"><expr pos:start="13:5" pos:end="13:31"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:16">vram_size</name></name> <operator pos:start="13:18" pos:end="13:18">=</operator> <name pos:start="13:20" pos:end="13:31">vga_ram_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:18">vram_offset</name></name> <operator pos:start="15:20" pos:end="15:20">=</operator> <name pos:start="15:22" pos:end="15:35">vga_ram_offset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:40"><expr pos:start="19:5" pos:end="19:39"><name pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:19">scratch_size</name></name> <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:39">SVGA_SCRATCH_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:63"><expr pos:start="21:5" pos:end="21:62"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:14">scratch</name></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <operator pos:start="21:18" pos:end="21:18">(</operator><name pos:start="21:19" pos:end="21:26">uint32_t</name> <operator pos:start="21:28" pos:end="21:28">*</operator><operator pos:start="21:29" pos:end="21:29">)</operator> <call pos:start="21:31" pos:end="21:62"><name pos:start="21:31" pos:end="21:41">qemu_malloc</name><argument_list pos:start="21:42" pos:end="21:62">(<argument pos:start="21:43" pos:end="21:61"><expr pos:start="21:43" pos:end="21:61"><name pos:start="21:43" pos:end="21:57"><name pos:start="21:43" pos:end="21:43">s</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:57">scratch_size</name></name> <operator pos:start="21:59" pos:end="21:59">*</operator> <literal type="number" pos:start="21:61" pos:end="21:61">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:20"><expr pos:start="25:5" pos:end="25:19"><call pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:16">vmsvga_reset</name><argument_list pos:start="25:17" pos:end="25:19">(<argument pos:start="25:18" pos:end="25:18"><expr pos:start="25:18" pos:end="25:18"><name pos:start="25:18" pos:end="25:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="40:0"><expr pos:start="29:5" pos:end="35:60"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:14">console</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="35:60"><name pos:start="29:18" pos:end="29:37">graphic_console_init</name><argument_list pos:start="29:38" pos:end="35:60">(<argument pos:start="29:39" pos:end="29:40"><expr pos:start="29:39" pos:end="29:40"><name pos:start="29:39" pos:end="29:40">ds</name></expr></argument>, <argument pos:start="29:43" pos:end="29:63"><expr pos:start="29:43" pos:end="29:63"><name pos:start="29:43" pos:end="29:63">vmsvga_update_display</name></expr></argument>,

                                      <argument pos:start="31:39" pos:end="31:63"><expr pos:start="31:39" pos:end="31:63"><name pos:start="31:39" pos:end="31:63">vmsvga_invalidate_display</name></expr></argument>,

                                      <argument pos:start="33:39" pos:end="33:56"><expr pos:start="33:39" pos:end="33:56"><name pos:start="33:39" pos:end="33:56">vmsvga_screen_dump</name></expr></argument>,

                                      <argument pos:start="35:39" pos:end="35:56"><expr pos:start="35:39" pos:end="35:56"><name pos:start="35:39" pos:end="35:56">vmsvga_text_update</name></expr></argument>, <argument pos:start="35:59" pos:end="35:59"><expr pos:start="35:59" pos:end="35:59"><name pos:start="35:59" pos:end="35:59">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="39:1" pos:end="39:19">#<cpp:directive pos:start="39:2" pos:end="39:6">ifdef</cpp:directive> <name pos:start="39:8" pos:end="39:19">EMBED_STDVGA</name></cpp:ifdef>

    <expr_stmt pos:start="41:5" pos:end="43:64"><expr pos:start="41:5" pos:end="43:63"><call pos:start="41:5" pos:end="43:63"><name pos:start="41:5" pos:end="41:19">vga_common_init</name><argument_list pos:start="41:20" pos:end="43:63">(<argument pos:start="41:21" pos:end="41:34"><expr pos:start="41:21" pos:end="41:34"><operator pos:start="41:21" pos:end="41:21">(</operator><name pos:start="41:22" pos:end="41:29">VGAState</name> <operator pos:start="41:31" pos:end="41:31">*</operator><operator pos:start="41:32" pos:end="41:32">)</operator> <name pos:start="41:34" pos:end="41:34">s</name></expr></argument>, <argument pos:start="41:37" pos:end="41:38"><expr pos:start="41:37" pos:end="41:38"><name pos:start="41:37" pos:end="41:38">ds</name></expr></argument>,

                    <argument pos:start="43:21" pos:end="43:32"><expr pos:start="43:21" pos:end="43:32"><name pos:start="43:21" pos:end="43:32">vga_ram_base</name></expr></argument>, <argument pos:start="43:35" pos:end="43:48"><expr pos:start="43:35" pos:end="43:48"><name pos:start="43:35" pos:end="43:48">vga_ram_offset</name></expr></argument>, <argument pos:start="43:51" pos:end="43:62"><expr pos:start="43:51" pos:end="43:62"><name pos:start="43:51" pos:end="43:62">vga_ram_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="48:0"><expr pos:start="45:5" pos:end="45:28"><call pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:12">vga_init</name><argument_list pos:start="45:13" pos:end="45:28">(<argument pos:start="45:14" pos:end="45:27"><expr pos:start="45:14" pos:end="45:27"><operator pos:start="45:14" pos:end="45:14">(</operator><name pos:start="45:15" pos:end="45:22">VGAState</name> <operator pos:start="45:24" pos:end="45:24">*</operator><operator pos:start="45:25" pos:end="45:25">)</operator> <name pos:start="45:27" pos:end="45:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
