<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23272.c" pos:tabs="8"><function pos:start="1:1" pos:end="291:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">ff_mjpeg_decode_sos</name><parameter_list pos:start="1:24" pos:end="3:76">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:42">MJpegDecodeContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:49"><decl pos:start="3:25" pos:end="3:49"><type pos:start="3:25" pos:end="3:49"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:37">uint8_t</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:49">mb_bitmask</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:75"><decl pos:start="3:52" pos:end="3:75"><type pos:start="3:52" pos:end="3:75"><specifier pos:start="3:52" pos:end="3:56">const</specifier> <name pos:start="3:58" pos:end="3:64">AVFrame</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:75">reference</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="291:1">{<block_content pos:start="7:5" pos:end="289:14">

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>, <decl pos:start="7:14" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:26">nb_components</name></decl>, <decl pos:start="7:29" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:29">i</name></decl>, <decl pos:start="7:32" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:32" pos:end="7:32">h</name></decl>, <decl pos:start="7:35" pos:end="7:35"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:35" pos:end="7:35">v</name></decl>, <decl pos:start="7:38" pos:end="7:46"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:38" pos:end="7:46">predictor</name></decl>, <decl pos:start="7:49" pos:end="7:63"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:49" pos:end="7:63">point_transform</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">index</name></decl>, <decl pos:start="9:16" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:17">id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:24">block_size</name><init pos:start="11:25" pos:end="11:45">= <expr pos:start="11:27" pos:end="11:45"><ternary pos:start="11:27" pos:end="11:45"><condition pos:start="11:27" pos:end="11:39"><expr pos:start="11:27" pos:end="11:37"><name pos:start="11:27" pos:end="11:37"><name pos:start="11:27" pos:end="11:27">s</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:37">lossless</name></name></expr> ?</condition><then pos:start="11:41" pos:end="11:41"> <expr pos:start="11:41" pos:end="11:41"><literal type="number" pos:start="11:41" pos:end="11:41">1</literal></expr> </then><else pos:start="11:43" pos:end="11:45">: <expr pos:start="11:45" pos:end="11:45"><literal type="number" pos:start="11:45" pos:end="11:45">8</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ilv</name></decl>, <decl pos:start="13:14" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:23">prev_shift</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:40">/* XXX: verify len field validity */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:7">len</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:30"><name pos:start="19:11" pos:end="19:18">get_bits</name><argument_list pos:start="19:19" pos:end="19:30">(<argument pos:start="19:20" pos:end="19:25"><expr pos:start="19:20" pos:end="19:25"><operator pos:start="19:20" pos:end="19:20">&amp;</operator><name pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:21">s</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:25">gb</name></name></expr></argument>, <argument pos:start="19:28" pos:end="19:29"><expr pos:start="19:28" pos:end="19:29"><literal type="number" pos:start="19:28" pos:end="19:29">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:17">nb_components</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <call pos:start="21:21" pos:end="21:39"><name pos:start="21:21" pos:end="21:28">get_bits</name><argument_list pos:start="21:29" pos:end="21:39">(<argument pos:start="21:30" pos:end="21:35"><expr pos:start="21:30" pos:end="21:35"><operator pos:start="21:30" pos:end="21:30">&amp;</operator><name pos:start="21:31" pos:end="21:35"><name pos:start="21:31" pos:end="21:31">s</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:35">gb</name></name></expr></argument>, <argument pos:start="21:38" pos:end="21:38"><expr pos:start="21:38" pos:end="21:38"><literal type="number" pos:start="21:38" pos:end="21:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:61">(<expr pos:start="23:9" pos:end="23:60"><name pos:start="23:9" pos:end="23:21">nb_components</name> <operator pos:start="23:23" pos:end="23:24">==</operator> <literal type="number" pos:start="23:26" pos:end="23:26">0</literal> <operator pos:start="23:28" pos:end="23:29">||</operator> <name pos:start="23:31" pos:end="23:43">nb_components</name> <operator pos:start="23:45" pos:end="23:45">&gt;</operator> <name pos:start="23:47" pos:end="23:60">MAX_COMPONENTS</name></expr>)</condition><block pos:start="23:62" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:18">

        <expr_stmt pos:start="25:9" pos:end="25:102"><expr pos:start="25:9" pos:end="25:101"><call pos:start="25:9" pos:end="25:101"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:101">(<argument pos:start="25:16" pos:end="25:23"><expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:23">avctx</name></name></expr></argument>, <argument pos:start="25:26" pos:end="25:37"><expr pos:start="25:26" pos:end="25:37"><name pos:start="25:26" pos:end="25:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:40" pos:end="25:85"><expr pos:start="25:40" pos:end="25:85"><literal type="string" pos:start="25:40" pos:end="25:85">"decode_sos: nb_components (%d) unsupported\n"</literal></expr></argument>, <argument pos:start="25:88" pos:end="25:100"><expr pos:start="25:88" pos:end="25:100"><name pos:start="25:88" pos:end="25:100">nb_components</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:33">(<expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:11">len</name> <operator pos:start="31:13" pos:end="31:14">!=</operator> <literal type="number" pos:start="31:16" pos:end="31:17">6</literal><operator pos:start="31:17" pos:end="31:17">+</operator><literal type="number" pos:start="31:18" pos:end="31:18">2</literal><operator pos:start="31:19" pos:end="31:19">*</operator><name pos:start="31:20" pos:end="31:32">nb_components</name></expr>)</condition>

    <block pos:start="33:5" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:18">

        <expr_stmt pos:start="35:9" pos:end="35:78"><expr pos:start="35:9" pos:end="35:77"><call pos:start="35:9" pos:end="35:77"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:77">(<argument pos:start="35:16" pos:end="35:23"><expr pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:23">avctx</name></name></expr></argument>, <argument pos:start="35:26" pos:end="35:37"><expr pos:start="35:26" pos:end="35:37"><name pos:start="35:26" pos:end="35:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:40" pos:end="35:71"><expr pos:start="35:40" pos:end="35:71"><literal type="string" pos:start="35:40" pos:end="35:71">"decode_sos: invalid len (%d)\n"</literal></expr></argument>, <argument pos:start="35:74" pos:end="35:76"><expr pos:start="35:74" pos:end="35:76"><name pos:start="35:74" pos:end="35:76">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="41:5" pos:end="109:5">for<control pos:start="41:8" pos:end="41:32">(<init pos:start="41:9" pos:end="41:12"><expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:9">i</name><operator pos:start="41:10" pos:end="41:10">=</operator><literal type="number" pos:start="41:11" pos:end="41:11">0</literal></expr>;</init><condition pos:start="41:13" pos:end="41:28"><expr pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:13">i</name><operator pos:start="41:14" pos:end="41:14">&lt;</operator><name pos:start="41:15" pos:end="41:27">nb_components</name></expr>;</condition><incr pos:start="41:29" pos:end="41:31"><expr pos:start="41:29" pos:end="41:31"><name pos:start="41:29" pos:end="41:29">i</name><operator pos:start="41:30" pos:end="41:31">++</operator></expr></incr>)</control> <block pos:start="41:34" pos:end="109:5">{<block_content pos:start="43:9" pos:end="107:30">

        <expr_stmt pos:start="43:9" pos:end="43:37"><expr pos:start="43:9" pos:end="43:36"><name pos:start="43:9" pos:end="43:10">id</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:32"><name pos:start="43:14" pos:end="43:21">get_bits</name><argument_list pos:start="43:22" pos:end="43:32">(<argument pos:start="43:23" pos:end="43:28"><expr pos:start="43:23" pos:end="43:28"><operator pos:start="43:23" pos:end="43:23">&amp;</operator><name pos:start="43:24" pos:end="43:28"><name pos:start="43:24" pos:end="43:24">s</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:28">gb</name></name></expr></argument>, <argument pos:start="43:31" pos:end="43:31"><expr pos:start="43:31" pos:end="43:31"><literal type="number" pos:start="43:31" pos:end="43:31">8</literal></expr></argument>)</argument_list></call> <operator pos:start="43:34" pos:end="43:34">-</operator> <literal type="number" pos:start="43:36" pos:end="43:36">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:62"><expr pos:start="45:9" pos:end="45:61"><call pos:start="45:9" pos:end="45:61"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:61">(<argument pos:start="45:16" pos:end="45:23"><expr pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:16">s</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:23">avctx</name></name></expr></argument>, <argument pos:start="45:26" pos:end="45:37"><expr pos:start="45:26" pos:end="45:37"><name pos:start="45:26" pos:end="45:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="45:40" pos:end="45:56"><expr pos:start="45:40" pos:end="45:56"><literal type="string" pos:start="45:40" pos:end="45:56">"component: %d\n"</literal></expr></argument>, <argument pos:start="45:59" pos:end="45:60"><expr pos:start="45:59" pos:end="45:60"><name pos:start="45:59" pos:end="45:60">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="47:9" pos:end="47:34">/* find component index */</comment>

        <for pos:start="49:9" pos:end="53:22">for<control pos:start="49:12" pos:end="49:51">(<init pos:start="49:13" pos:end="49:20"><expr pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:17">index</name><operator pos:start="49:18" pos:end="49:18">=</operator><literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>;</init><condition pos:start="49:21" pos:end="49:43"><expr pos:start="49:21" pos:end="49:42"><name pos:start="49:21" pos:end="49:25">index</name><operator pos:start="49:26" pos:end="49:26">&lt;</operator><name pos:start="49:27" pos:end="49:42"><name pos:start="49:27" pos:end="49:27">s</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:42">nb_components</name></name></expr>;</condition><incr pos:start="49:44" pos:end="49:50"><expr pos:start="49:44" pos:end="49:50"><name pos:start="49:44" pos:end="49:48">index</name><operator pos:start="49:49" pos:end="49:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="51:13" pos:end="53:22"><block_content pos:start="51:13" pos:end="53:22">

            <if_stmt pos:start="51:13" pos:end="53:22"><if pos:start="51:13" pos:end="53:22">if <condition pos:start="51:16" pos:end="51:45">(<expr pos:start="51:17" pos:end="51:44"><name pos:start="51:17" pos:end="51:18">id</name> <operator pos:start="51:20" pos:end="51:21">==</operator> <name pos:start="51:23" pos:end="51:44"><name pos:start="51:23" pos:end="51:23">s</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:37">component_id</name><index pos:start="51:38" pos:end="51:44">[<expr pos:start="51:39" pos:end="51:43"><name pos:start="51:39" pos:end="51:43">index</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:22"><block_content pos:start="53:17" pos:end="53:22">

                <break pos:start="53:17" pos:end="53:22">break;</break></block_content></block></if></if_stmt></block_content></block></for>

        <if_stmt pos:start="55:9" pos:end="63:9"><if pos:start="55:9" pos:end="63:9">if <condition pos:start="55:12" pos:end="55:38">(<expr pos:start="55:13" pos:end="55:37"><name pos:start="55:13" pos:end="55:17">index</name> <operator pos:start="55:19" pos:end="55:20">==</operator> <name pos:start="55:22" pos:end="55:37"><name pos:start="55:22" pos:end="55:22">s</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:37">nb_components</name></name></expr>)</condition>

        <block pos:start="57:9" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:22">

            <expr_stmt pos:start="59:13" pos:end="59:95"><expr pos:start="59:13" pos:end="59:94"><call pos:start="59:13" pos:end="59:94"><name pos:start="59:13" pos:end="59:18">av_log</name><argument_list pos:start="59:19" pos:end="59:94">(<argument pos:start="59:20" pos:end="59:27"><expr pos:start="59:20" pos:end="59:27"><name pos:start="59:20" pos:end="59:27"><name pos:start="59:20" pos:end="59:20">s</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:27">avctx</name></name></expr></argument>, <argument pos:start="59:30" pos:end="59:41"><expr pos:start="59:30" pos:end="59:41"><name pos:start="59:30" pos:end="59:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:44" pos:end="59:86"><expr pos:start="59:44" pos:end="59:86"><literal type="string" pos:start="59:44" pos:end="59:86">"decode_sos: index(%d) out of components\n"</literal></expr></argument>, <argument pos:start="59:89" pos:end="59:93"><expr pos:start="59:89" pos:end="59:93"><name pos:start="59:89" pos:end="59:93">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:22">return <expr pos:start="61:20" pos:end="61:21"><operator pos:start="61:20" pos:end="61:20">-</operator><literal type="number" pos:start="61:21" pos:end="61:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="65:9" pos:end="65:56">/* Metasoft MJPEG codec has Cb and Cr swapped */</comment>

        <if_stmt pos:start="67:9" pos:end="71:26"><if pos:start="67:9" pos:end="71:26">if <condition pos:start="67:12" pos:end="69:64">(<expr pos:start="67:13" pos:end="69:63"><name pos:start="67:13" pos:end="67:31"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:20">avctx</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:31">codec_tag</name></name> <operator pos:start="67:33" pos:end="67:34">==</operator> <call pos:start="67:36" pos:end="67:60"><name pos:start="67:36" pos:end="67:40">MKTAG</name><argument_list pos:start="67:41" pos:end="67:60">(<argument pos:start="67:42" pos:end="67:44"><expr pos:start="67:42" pos:end="67:44"><literal type="char" pos:start="67:42" pos:end="67:44">'M'</literal></expr></argument>, <argument pos:start="67:47" pos:end="67:49"><expr pos:start="67:47" pos:end="67:49"><literal type="char" pos:start="67:47" pos:end="67:49">'T'</literal></expr></argument>, <argument pos:start="67:52" pos:end="67:54"><expr pos:start="67:52" pos:end="67:54"><literal type="char" pos:start="67:52" pos:end="67:54">'S'</literal></expr></argument>, <argument pos:start="67:57" pos:end="67:59"><expr pos:start="67:57" pos:end="67:59"><literal type="char" pos:start="67:57" pos:end="67:59">'J'</literal></expr></argument>)</argument_list></call>

            <operator pos:start="69:13" pos:end="69:14">&amp;&amp;</operator> <name pos:start="69:16" pos:end="69:28">nb_components</name> <operator pos:start="69:30" pos:end="69:31">==</operator> <literal type="number" pos:start="69:33" pos:end="69:33">3</literal> <operator pos:start="69:35" pos:end="69:36">&amp;&amp;</operator> <name pos:start="69:38" pos:end="69:53"><name pos:start="69:38" pos:end="69:38">s</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:53">nb_components</name></name> <operator pos:start="69:55" pos:end="69:56">==</operator> <literal type="number" pos:start="69:58" pos:end="69:58">3</literal> <operator pos:start="69:60" pos:end="69:61">&amp;&amp;</operator> <name pos:start="69:63" pos:end="69:63">i</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:26"><block_content pos:start="71:13" pos:end="71:26">

            <expr_stmt pos:start="71:13" pos:end="71:26"><expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:17">index</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <literal type="number" pos:start="71:21" pos:end="71:23">3</literal> <operator pos:start="71:23" pos:end="71:23">-</operator> <name pos:start="71:25" pos:end="71:25">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="75:9" pos:end="77:28"><if pos:start="75:9" pos:end="77:28">if<condition pos:start="75:11" pos:end="75:94">(<expr pos:start="75:12" pos:end="75:93"><name pos:start="75:12" pos:end="75:24">nb_components</name> <operator pos:start="75:26" pos:end="75:27">==</operator> <literal type="number" pos:start="75:29" pos:end="75:29">3</literal> <operator pos:start="75:31" pos:end="75:32">&amp;&amp;</operator> <name pos:start="75:34" pos:end="75:49"><name pos:start="75:34" pos:end="75:34">s</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:49">nb_components</name></name> <operator pos:start="75:51" pos:end="75:52">==</operator> <literal type="number" pos:start="75:54" pos:end="75:54">3</literal> <operator pos:start="75:56" pos:end="75:57">&amp;&amp;</operator> <name pos:start="75:59" pos:end="75:75"><name pos:start="75:59" pos:end="75:59">s</name><operator pos:start="75:60" pos:end="75:61">-&gt;</operator><name pos:start="75:62" pos:end="75:66">avctx</name><operator pos:start="75:67" pos:end="75:68">-&gt;</operator><name pos:start="75:69" pos:end="75:75">pix_fmt</name></name> <operator pos:start="75:77" pos:end="75:78">==</operator> <name pos:start="75:80" pos:end="75:93">PIX_FMT_GBR24P</name></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:28"><block_content pos:start="77:13" pos:end="77:28">

            <expr_stmt pos:start="77:13" pos:end="77:28"><expr pos:start="77:13" pos:end="77:27"><name pos:start="77:13" pos:end="77:17">index</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <operator pos:start="77:21" pos:end="77:21">(</operator><name pos:start="77:22" pos:end="77:22">i</name><operator pos:start="77:23" pos:end="77:23">+</operator><literal type="number" pos:start="77:24" pos:end="77:24">2</literal><operator pos:start="77:25" pos:end="77:25">)</operator><operator pos:start="77:26" pos:end="77:26">%</operator><literal type="number" pos:start="77:27" pos:end="77:27">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:33"><expr pos:start="81:9" pos:end="81:32"><name pos:start="81:9" pos:end="81:24"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:21">comp_index</name><index pos:start="81:22" pos:end="81:24">[<expr pos:start="81:23" pos:end="81:23"><name pos:start="81:23" pos:end="81:23">i</name></expr>]</index></name> <operator pos:start="81:26" pos:end="81:26">=</operator> <name pos:start="81:28" pos:end="81:32">index</name></expr>;</expr_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:64"><expr pos:start="85:9" pos:end="85:63"><name pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:20">nb_blocks</name><index pos:start="85:21" pos:end="85:23">[<expr pos:start="85:22" pos:end="85:22"><name pos:start="85:22" pos:end="85:22">i</name></expr>]</index></name> <operator pos:start="85:25" pos:end="85:25">=</operator> <name pos:start="85:27" pos:end="85:43"><name pos:start="85:27" pos:end="85:27">s</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:36">h_count</name><index pos:start="85:37" pos:end="85:43">[<expr pos:start="85:38" pos:end="85:42"><name pos:start="85:38" pos:end="85:42">index</name></expr>]</index></name> <operator pos:start="85:45" pos:end="85:45">*</operator> <name pos:start="85:47" pos:end="85:63"><name pos:start="85:47" pos:end="85:47">s</name><operator pos:start="85:48" pos:end="85:49">-&gt;</operator><name pos:start="85:50" pos:end="85:56">v_count</name><index pos:start="85:57" pos:end="85:63">[<expr pos:start="85:58" pos:end="85:62"><name pos:start="85:58" pos:end="85:62">index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:43"><expr pos:start="87:9" pos:end="87:42"><name pos:start="87:9" pos:end="87:22"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:19">h_scount</name><index pos:start="87:20" pos:end="87:22">[<expr pos:start="87:21" pos:end="87:21"><name pos:start="87:21" pos:end="87:21">i</name></expr>]</index></name> <operator pos:start="87:24" pos:end="87:24">=</operator> <name pos:start="87:26" pos:end="87:42"><name pos:start="87:26" pos:end="87:26">s</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:35">h_count</name><index pos:start="87:36" pos:end="87:42">[<expr pos:start="87:37" pos:end="87:41"><name pos:start="87:37" pos:end="87:41">index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:43"><expr pos:start="89:9" pos:end="89:42"><name pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:19">v_scount</name><index pos:start="89:20" pos:end="89:22">[<expr pos:start="89:21" pos:end="89:21"><name pos:start="89:21" pos:end="89:21">i</name></expr>]</index></name> <operator pos:start="89:24" pos:end="89:24">=</operator> <name pos:start="89:26" pos:end="89:42"><name pos:start="89:26" pos:end="89:26">s</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:35">v_count</name><index pos:start="89:36" pos:end="89:42">[<expr pos:start="89:37" pos:end="89:41"><name pos:start="89:37" pos:end="89:41">index</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:45"><expr pos:start="93:9" pos:end="93:44"><name pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:19">dc_index</name><index pos:start="93:20" pos:end="93:22">[<expr pos:start="93:21" pos:end="93:21"><name pos:start="93:21" pos:end="93:21">i</name></expr>]</index></name> <operator pos:start="93:24" pos:end="93:24">=</operator> <call pos:start="93:26" pos:end="93:44"><name pos:start="93:26" pos:end="93:33">get_bits</name><argument_list pos:start="93:34" pos:end="93:44">(<argument pos:start="93:35" pos:end="93:40"><expr pos:start="93:35" pos:end="93:40"><operator pos:start="93:35" pos:end="93:35">&amp;</operator><name pos:start="93:36" pos:end="93:40"><name pos:start="93:36" pos:end="93:36">s</name><operator pos:start="93:37" pos:end="93:38">-&gt;</operator><name pos:start="93:39" pos:end="93:40">gb</name></name></expr></argument>, <argument pos:start="93:43" pos:end="93:43"><expr pos:start="93:43" pos:end="93:43"><literal type="number" pos:start="93:43" pos:end="93:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:45"><expr pos:start="95:9" pos:end="95:44"><name pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:19">ac_index</name><index pos:start="95:20" pos:end="95:22">[<expr pos:start="95:21" pos:end="95:21"><name pos:start="95:21" pos:end="95:21">i</name></expr>]</index></name> <operator pos:start="95:24" pos:end="95:24">=</operator> <call pos:start="95:26" pos:end="95:44"><name pos:start="95:26" pos:end="95:33">get_bits</name><argument_list pos:start="95:34" pos:end="95:44">(<argument pos:start="95:35" pos:end="95:40"><expr pos:start="95:35" pos:end="95:40"><operator pos:start="95:35" pos:end="95:35">&amp;</operator><name pos:start="95:36" pos:end="95:40"><name pos:start="95:36" pos:end="95:36">s</name><operator pos:start="95:37" pos:end="95:38">-&gt;</operator><name pos:start="95:39" pos:end="95:40">gb</name></name></expr></argument>, <argument pos:start="95:43" pos:end="95:43"><expr pos:start="95:43" pos:end="95:43"><literal type="number" pos:start="95:43" pos:end="95:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="99:9" pos:end="103:30"><if pos:start="99:9" pos:end="103:30">if <condition pos:start="99:12" pos:end="101:55">(<expr pos:start="99:13" pos:end="101:54"><name pos:start="99:13" pos:end="99:26"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:23">dc_index</name><index pos:start="99:24" pos:end="99:26">[<expr pos:start="99:25" pos:end="99:25"><name pos:start="99:25" pos:end="99:25">i</name></expr>]</index></name> <operator pos:start="99:28" pos:end="99:28">&lt;</operator>  <literal type="number" pos:start="99:31" pos:end="99:31">0</literal> <operator pos:start="99:33" pos:end="99:34">||</operator> <name pos:start="99:36" pos:end="99:49"><name pos:start="99:36" pos:end="99:36">s</name><operator pos:start="99:37" pos:end="99:38">-&gt;</operator><name pos:start="99:39" pos:end="99:46">ac_index</name><index pos:start="99:47" pos:end="99:49">[<expr pos:start="99:48" pos:end="99:48"><name pos:start="99:48" pos:end="99:48">i</name></expr>]</index></name> <operator pos:start="99:51" pos:end="99:51">&lt;</operator> <literal type="number" pos:start="99:53" pos:end="99:53">0</literal> <operator pos:start="99:55" pos:end="99:56">||</operator>

            <name pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:23">dc_index</name><index pos:start="101:24" pos:end="101:26">[<expr pos:start="101:25" pos:end="101:25"><name pos:start="101:25" pos:end="101:25">i</name></expr>]</index></name> <operator pos:start="101:28" pos:end="101:29">&gt;=</operator> <literal type="number" pos:start="101:31" pos:end="101:31">4</literal> <operator pos:start="101:33" pos:end="101:34">||</operator> <name pos:start="101:36" pos:end="101:49"><name pos:start="101:36" pos:end="101:36">s</name><operator pos:start="101:37" pos:end="101:38">-&gt;</operator><name pos:start="101:39" pos:end="101:46">ac_index</name><index pos:start="101:47" pos:end="101:49">[<expr pos:start="101:48" pos:end="101:48"><name pos:start="101:48" pos:end="101:48">i</name></expr>]</index></name> <operator pos:start="101:51" pos:end="101:52">&gt;=</operator> <literal type="number" pos:start="101:54" pos:end="101:54">4</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:30"><block_content pos:start="103:13" pos:end="103:30">

            <goto pos:start="103:13" pos:end="103:30">goto <name pos:start="103:18" pos:end="103:29">out_of_range</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="105:9" pos:end="107:30"><if pos:start="105:9" pos:end="107:30">if <condition pos:start="105:12" pos:end="105:83">(<expr pos:start="105:13" pos:end="105:82"><operator pos:start="105:13" pos:end="105:13">!</operator><name pos:start="105:14" pos:end="105:39"><name pos:start="105:14" pos:end="105:14">s</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:20">vlcs</name><index pos:start="105:21" pos:end="105:23">[<expr pos:start="105:22" pos:end="105:22"><literal type="number" pos:start="105:22" pos:end="105:22">0</literal></expr>]</index><index pos:start="105:24" pos:end="105:39">[<expr pos:start="105:25" pos:end="105:38"><name pos:start="105:25" pos:end="105:38"><name pos:start="105:25" pos:end="105:25">s</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:35">dc_index</name><index pos:start="105:36" pos:end="105:38">[<expr pos:start="105:37" pos:end="105:37"><name pos:start="105:37" pos:end="105:37">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="105:40" pos:end="105:40">.</operator><name pos:start="105:41" pos:end="105:45">table</name> <operator pos:start="105:47" pos:end="105:48">||</operator> <operator pos:start="105:50" pos:end="105:50">!</operator><name pos:start="105:51" pos:end="105:76"><name pos:start="105:51" pos:end="105:51">s</name><operator pos:start="105:52" pos:end="105:53">-&gt;</operator><name pos:start="105:54" pos:end="105:57">vlcs</name><index pos:start="105:58" pos:end="105:60">[<expr pos:start="105:59" pos:end="105:59"><literal type="number" pos:start="105:59" pos:end="105:59">1</literal></expr>]</index><index pos:start="105:61" pos:end="105:76">[<expr pos:start="105:62" pos:end="105:75"><name pos:start="105:62" pos:end="105:75"><name pos:start="105:62" pos:end="105:62">s</name><operator pos:start="105:63" pos:end="105:64">-&gt;</operator><name pos:start="105:65" pos:end="105:72">ac_index</name><index pos:start="105:73" pos:end="105:75">[<expr pos:start="105:74" pos:end="105:74"><name pos:start="105:74" pos:end="105:74">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="105:77" pos:end="105:77">.</operator><name pos:start="105:78" pos:end="105:82">table</name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:30"><block_content pos:start="107:13" pos:end="107:30">

            <goto pos:start="107:13" pos:end="107:30">goto <name pos:start="107:18" pos:end="107:29">out_of_range</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="113:5" pos:end="113:35"><expr pos:start="113:5" pos:end="113:34"><name pos:start="113:5" pos:end="113:13">predictor</name><operator pos:start="113:14" pos:end="113:14">=</operator> <call pos:start="113:16" pos:end="113:34"><name pos:start="113:16" pos:end="113:23">get_bits</name><argument_list pos:start="113:24" pos:end="113:34">(<argument pos:start="113:25" pos:end="113:30"><expr pos:start="113:25" pos:end="113:30"><operator pos:start="113:25" pos:end="113:25">&amp;</operator><name pos:start="113:26" pos:end="113:30"><name pos:start="113:26" pos:end="113:26">s</name><operator pos:start="113:27" pos:end="113:28">-&gt;</operator><name pos:start="113:29" pos:end="113:30">gb</name></name></expr></argument>, <argument pos:start="113:33" pos:end="113:33"><expr pos:start="113:33" pos:end="113:33"><literal type="number" pos:start="113:33" pos:end="113:33">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="113:37" pos:end="113:89">/* JPEG Ss / lossless JPEG predictor /JPEG-LS NEAR */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:29"><expr pos:start="115:5" pos:end="115:28"><name pos:start="115:5" pos:end="115:7">ilv</name><operator pos:start="115:8" pos:end="115:8">=</operator> <call pos:start="115:10" pos:end="115:28"><name pos:start="115:10" pos:end="115:17">get_bits</name><argument_list pos:start="115:18" pos:end="115:28">(<argument pos:start="115:19" pos:end="115:24"><expr pos:start="115:19" pos:end="115:24"><operator pos:start="115:19" pos:end="115:19">&amp;</operator><name pos:start="115:20" pos:end="115:24"><name pos:start="115:20" pos:end="115:20">s</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:24">gb</name></name></expr></argument>, <argument pos:start="115:27" pos:end="115:27"><expr pos:start="115:27" pos:end="115:27"><literal type="number" pos:start="115:27" pos:end="115:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="115:34" pos:end="115:60">/* JPEG Se / JPEG-LS ILV */</comment>

    <if_stmt pos:start="117:5" pos:end="125:39"><if pos:start="117:5" pos:end="123:5">if<condition pos:start="117:7" pos:end="117:46">(<expr pos:start="117:8" pos:end="117:45"><name pos:start="117:8" pos:end="117:26"><name pos:start="117:8" pos:end="117:8">s</name><operator pos:start="117:9" pos:end="117:10">-&gt;</operator><name pos:start="117:11" pos:end="117:15">avctx</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:26">codec_tag</name></name> <operator pos:start="117:28" pos:end="117:29">!=</operator> <call pos:start="117:31" pos:end="117:45"><name pos:start="117:31" pos:end="117:37">AV_RL32</name><argument_list pos:start="117:38" pos:end="117:45">(<argument pos:start="117:39" pos:end="117:44"><expr pos:start="117:39" pos:end="117:44"><literal type="string" pos:start="117:39" pos:end="117:44">"CJPG"</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="117:47" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:45">

        <expr_stmt pos:start="119:9" pos:end="119:41"><expr pos:start="119:9" pos:end="119:40"><name pos:start="119:9" pos:end="119:18">prev_shift</name> <operator pos:start="119:20" pos:end="119:20">=</operator> <call pos:start="119:22" pos:end="119:40"><name pos:start="119:22" pos:end="119:29">get_bits</name><argument_list pos:start="119:30" pos:end="119:40">(<argument pos:start="119:31" pos:end="119:36"><expr pos:start="119:31" pos:end="119:36"><operator pos:start="119:31" pos:end="119:31">&amp;</operator><name pos:start="119:32" pos:end="119:36"><name pos:start="119:32" pos:end="119:32">s</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:36">gb</name></name></expr></argument>, <argument pos:start="119:39" pos:end="119:39"><expr pos:start="119:39" pos:end="119:39"><literal type="number" pos:start="119:39" pos:end="119:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="119:43" pos:end="119:50">/* Ah */</comment>

        <expr_stmt pos:start="121:9" pos:end="121:45"><expr pos:start="121:9" pos:end="121:44"><name pos:start="121:9" pos:end="121:23">point_transform</name><operator pos:start="121:24" pos:end="121:24">=</operator> <call pos:start="121:26" pos:end="121:44"><name pos:start="121:26" pos:end="121:33">get_bits</name><argument_list pos:start="121:34" pos:end="121:44">(<argument pos:start="121:35" pos:end="121:40"><expr pos:start="121:35" pos:end="121:40"><operator pos:start="121:35" pos:end="121:35">&amp;</operator><name pos:start="121:36" pos:end="121:40"><name pos:start="121:36" pos:end="121:36">s</name><operator pos:start="121:37" pos:end="121:38">-&gt;</operator><name pos:start="121:39" pos:end="121:40">gb</name></name></expr></argument>, <argument pos:start="121:43" pos:end="121:43"><expr pos:start="121:43" pos:end="121:43"><literal type="number" pos:start="121:43" pos:end="121:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="121:47" pos:end="121:54">/* Al */</comment>

    </block_content>}</block></if><else pos:start="123:6" pos:end="125:39">else<block type="pseudo" pos:start="125:9" pos:end="125:39"><block_content pos:start="125:9" pos:end="125:39">

        <expr_stmt pos:start="125:9" pos:end="125:39"><expr pos:start="125:9" pos:end="125:38"><name pos:start="125:9" pos:end="125:18">prev_shift</name><operator pos:start="125:19" pos:end="125:19">=</operator> <name pos:start="125:21" pos:end="125:35">point_transform</name><operator pos:start="125:36" pos:end="125:36">=</operator> <literal type="number" pos:start="125:38" pos:end="125:38">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <for pos:start="129:5" pos:end="131:29">for<control pos:start="129:8" pos:end="129:32">(<init pos:start="129:9" pos:end="129:12"><expr pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:9">i</name><operator pos:start="129:10" pos:end="129:10">=</operator><literal type="number" pos:start="129:11" pos:end="129:11">0</literal></expr>;</init><condition pos:start="129:13" pos:end="129:28"><expr pos:start="129:13" pos:end="129:27"><name pos:start="129:13" pos:end="129:13">i</name><operator pos:start="129:14" pos:end="129:14">&lt;</operator><name pos:start="129:15" pos:end="129:27">nb_components</name></expr>;</condition><incr pos:start="129:29" pos:end="129:31"><expr pos:start="129:29" pos:end="129:31"><name pos:start="129:29" pos:end="129:29">i</name><operator pos:start="129:30" pos:end="129:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="131:9" pos:end="131:29"><block_content pos:start="131:9" pos:end="131:29">

        <expr_stmt pos:start="131:9" pos:end="131:29"><expr pos:start="131:9" pos:end="131:28"><name pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:18">last_dc</name><index pos:start="131:19" pos:end="131:21">[<expr pos:start="131:20" pos:end="131:20"><name pos:start="131:20" pos:end="131:20">i</name></expr>]</index></name> <operator pos:start="131:23" pos:end="131:23">=</operator> <literal type="number" pos:start="131:25" pos:end="131:28">1024</literal></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="135:5" pos:end="159:5"><if pos:start="135:5" pos:end="143:5">if <condition pos:start="135:8" pos:end="135:26">(<expr pos:start="135:9" pos:end="135:25"><name pos:start="135:9" pos:end="135:21">nb_components</name> <operator pos:start="135:23" pos:end="135:23">&gt;</operator> <literal type="number" pos:start="135:25" pos:end="135:25">1</literal></expr>)</condition> <block pos:start="135:28" pos:end="143:5">{<block_content pos:start="139:9" pos:end="141:89">

        <comment type="block" pos:start="137:9" pos:end="137:32">/* interleaved stream */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:89"><expr pos:start="139:9" pos:end="139:88"><name pos:start="139:9" pos:end="139:19"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:19">mb_width</name></name>  <operator pos:start="139:22" pos:end="139:22">=</operator> <operator pos:start="139:24" pos:end="139:24">(</operator><name pos:start="139:25" pos:end="139:32"><name pos:start="139:25" pos:end="139:25">s</name><operator pos:start="139:26" pos:end="139:27">-&gt;</operator><name pos:start="139:28" pos:end="139:32">width</name></name>  <operator pos:start="139:35" pos:end="139:35">+</operator> <name pos:start="139:37" pos:end="139:44"><name pos:start="139:37" pos:end="139:37">s</name><operator pos:start="139:38" pos:end="139:39">-&gt;</operator><name pos:start="139:40" pos:end="139:44">h_max</name></name> <operator pos:start="139:46" pos:end="139:46">*</operator> <name pos:start="139:48" pos:end="139:57">block_size</name> <operator pos:start="139:59" pos:end="139:59">-</operator> <literal type="number" pos:start="139:61" pos:end="139:61">1</literal><operator pos:start="139:62" pos:end="139:62">)</operator> <operator pos:start="139:64" pos:end="139:64">/</operator> <operator pos:start="139:66" pos:end="139:66">(</operator><name pos:start="139:67" pos:end="139:74"><name pos:start="139:67" pos:end="139:67">s</name><operator pos:start="139:68" pos:end="139:69">-&gt;</operator><name pos:start="139:70" pos:end="139:74">h_max</name></name> <operator pos:start="139:76" pos:end="139:76">*</operator> <name pos:start="139:78" pos:end="139:87">block_size</name><operator pos:start="139:88" pos:end="139:88">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:89"><expr pos:start="141:9" pos:end="141:88"><name pos:start="141:9" pos:end="141:20"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:20">mb_height</name></name> <operator pos:start="141:22" pos:end="141:22">=</operator> <operator pos:start="141:24" pos:end="141:24">(</operator><name pos:start="141:25" pos:end="141:33"><name pos:start="141:25" pos:end="141:25">s</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:33">height</name></name> <operator pos:start="141:35" pos:end="141:35">+</operator> <name pos:start="141:37" pos:end="141:44"><name pos:start="141:37" pos:end="141:37">s</name><operator pos:start="141:38" pos:end="141:39">-&gt;</operator><name pos:start="141:40" pos:end="141:44">v_max</name></name> <operator pos:start="141:46" pos:end="141:46">*</operator> <name pos:start="141:48" pos:end="141:57">block_size</name> <operator pos:start="141:59" pos:end="141:59">-</operator> <literal type="number" pos:start="141:61" pos:end="141:61">1</literal><operator pos:start="141:62" pos:end="141:62">)</operator> <operator pos:start="141:64" pos:end="141:64">/</operator> <operator pos:start="141:66" pos:end="141:66">(</operator><name pos:start="141:67" pos:end="141:74"><name pos:start="141:67" pos:end="141:67">s</name><operator pos:start="141:68" pos:end="141:69">-&gt;</operator><name pos:start="141:70" pos:end="141:74">v_max</name></name> <operator pos:start="141:76" pos:end="141:76">*</operator> <name pos:start="141:78" pos:end="141:87">block_size</name><operator pos:start="141:88" pos:end="141:88">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="143:7" pos:end="159:5">else if<condition pos:start="143:14" pos:end="143:21">(<expr pos:start="143:15" pos:end="143:20"><operator pos:start="143:15" pos:end="143:15">!</operator><name pos:start="143:16" pos:end="143:20"><name pos:start="143:16" pos:end="143:16">s</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:20">ls</name></name></expr>)</condition> <block pos:start="143:23" pos:end="159:5">{<block_content pos:start="145:9" pos:end="157:27"> <comment type="block" pos:start="143:25" pos:end="143:51">/* skip this for JPEG-LS */</comment>

        <expr_stmt pos:start="145:9" pos:end="145:38"><expr pos:start="145:9" pos:end="145:37"><name pos:start="145:9" pos:end="145:9">h</name> <operator pos:start="145:11" pos:end="145:11">=</operator> <name pos:start="145:13" pos:end="145:20"><name pos:start="145:13" pos:end="145:13">s</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:20">h_max</name></name> <operator pos:start="145:22" pos:end="145:22">/</operator> <name pos:start="145:24" pos:end="145:37"><name pos:start="145:24" pos:end="145:24">s</name><operator pos:start="145:25" pos:end="145:26">-&gt;</operator><name pos:start="145:27" pos:end="145:34">h_scount</name><index pos:start="145:35" pos:end="145:37">[<expr pos:start="145:36" pos:end="145:36"><literal type="number" pos:start="145:36" pos:end="145:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:38"><expr pos:start="147:9" pos:end="147:37"><name pos:start="147:9" pos:end="147:9">v</name> <operator pos:start="147:11" pos:end="147:11">=</operator> <name pos:start="147:13" pos:end="147:20"><name pos:start="147:13" pos:end="147:13">s</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:20">v_max</name></name> <operator pos:start="147:22" pos:end="147:22">/</operator> <name pos:start="147:24" pos:end="147:37"><name pos:start="147:24" pos:end="147:24">s</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:34">v_scount</name><index pos:start="147:35" pos:end="147:37">[<expr pos:start="147:36" pos:end="147:36"><literal type="number" pos:start="147:36" pos:end="147:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:75"><expr pos:start="149:9" pos:end="149:74"><name pos:start="149:9" pos:end="149:19"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:19">mb_width</name></name>  <operator pos:start="149:22" pos:end="149:22">=</operator> <operator pos:start="149:24" pos:end="149:24">(</operator><name pos:start="149:25" pos:end="149:32"><name pos:start="149:25" pos:end="149:25">s</name><operator pos:start="149:26" pos:end="149:27">-&gt;</operator><name pos:start="149:28" pos:end="149:32">width</name></name>  <operator pos:start="149:35" pos:end="149:35">+</operator> <name pos:start="149:37" pos:end="149:37">h</name> <operator pos:start="149:39" pos:end="149:39">*</operator> <name pos:start="149:41" pos:end="149:50">block_size</name> <operator pos:start="149:52" pos:end="149:52">-</operator> <literal type="number" pos:start="149:54" pos:end="149:54">1</literal><operator pos:start="149:55" pos:end="149:55">)</operator> <operator pos:start="149:57" pos:end="149:57">/</operator> <operator pos:start="149:59" pos:end="149:59">(</operator><name pos:start="149:60" pos:end="149:60">h</name> <operator pos:start="149:62" pos:end="149:62">*</operator> <name pos:start="149:64" pos:end="149:73">block_size</name><operator pos:start="149:74" pos:end="149:74">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:75"><expr pos:start="151:9" pos:end="151:74"><name pos:start="151:9" pos:end="151:20"><name pos:start="151:9" pos:end="151:9">s</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:20">mb_height</name></name> <operator pos:start="151:22" pos:end="151:22">=</operator> <operator pos:start="151:24" pos:end="151:24">(</operator><name pos:start="151:25" pos:end="151:33"><name pos:start="151:25" pos:end="151:25">s</name><operator pos:start="151:26" pos:end="151:27">-&gt;</operator><name pos:start="151:28" pos:end="151:33">height</name></name> <operator pos:start="151:35" pos:end="151:35">+</operator> <name pos:start="151:37" pos:end="151:37">v</name> <operator pos:start="151:39" pos:end="151:39">*</operator> <name pos:start="151:41" pos:end="151:50">block_size</name> <operator pos:start="151:52" pos:end="151:52">-</operator> <literal type="number" pos:start="151:54" pos:end="151:54">1</literal><operator pos:start="151:55" pos:end="151:55">)</operator> <operator pos:start="151:57" pos:end="151:57">/</operator> <operator pos:start="151:59" pos:end="151:59">(</operator><name pos:start="151:60" pos:end="151:60">v</name> <operator pos:start="151:62" pos:end="151:62">*</operator> <name pos:start="151:64" pos:end="151:73">block_size</name><operator pos:start="151:74" pos:end="151:74">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:28"><expr pos:start="153:9" pos:end="153:27"><name pos:start="153:9" pos:end="153:23"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:20">nb_blocks</name><index pos:start="153:21" pos:end="153:23">[<expr pos:start="153:22" pos:end="153:22"><literal type="number" pos:start="153:22" pos:end="153:22">0</literal></expr>]</index></name> <operator pos:start="153:25" pos:end="153:25">=</operator> <literal type="number" pos:start="153:27" pos:end="153:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:27"><expr pos:start="155:9" pos:end="155:26"><name pos:start="155:9" pos:end="155:22"><name pos:start="155:9" pos:end="155:9">s</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:19">h_scount</name><index pos:start="155:20" pos:end="155:22">[<expr pos:start="155:21" pos:end="155:21"><literal type="number" pos:start="155:21" pos:end="155:21">0</literal></expr>]</index></name> <operator pos:start="155:24" pos:end="155:24">=</operator> <literal type="number" pos:start="155:26" pos:end="155:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:27"><expr pos:start="157:9" pos:end="157:26"><name pos:start="157:9" pos:end="157:22"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:19">v_scount</name><index pos:start="157:20" pos:end="157:22">[<expr pos:start="157:21" pos:end="157:21"><literal type="number" pos:start="157:21" pos:end="157:21">0</literal></expr>]</index></name> <operator pos:start="157:24" pos:end="157:24">=</operator> <literal type="number" pos:start="157:26" pos:end="157:26">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="163:5" pos:end="169:79"><if pos:start="163:5" pos:end="169:79">if<condition pos:start="163:7" pos:end="163:44">(<expr pos:start="163:8" pos:end="163:43"><name pos:start="163:8" pos:end="163:22"><name pos:start="163:8" pos:end="163:8">s</name><operator pos:start="163:9" pos:end="163:10">-&gt;</operator><name pos:start="163:11" pos:end="163:15">avctx</name><operator pos:start="163:16" pos:end="163:17">-&gt;</operator><name pos:start="163:18" pos:end="163:22">debug</name></name> <operator pos:start="163:24" pos:end="163:24">&amp;</operator> <name pos:start="163:26" pos:end="163:43">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="165:9" pos:end="169:79"><block_content pos:start="165:9" pos:end="169:79">

        <expr_stmt pos:start="165:9" pos:end="169:79"><expr pos:start="165:9" pos:end="169:78"><call pos:start="165:9" pos:end="169:78"><name pos:start="165:9" pos:end="165:14">av_log</name><argument_list pos:start="165:15" pos:end="169:78">(<argument pos:start="165:16" pos:end="165:23"><expr pos:start="165:16" pos:end="165:23"><name pos:start="165:16" pos:end="165:23"><name pos:start="165:16" pos:end="165:16">s</name><operator pos:start="165:17" pos:end="165:18">-&gt;</operator><name pos:start="165:19" pos:end="165:23">avctx</name></name></expr></argument>, <argument pos:start="165:26" pos:end="165:37"><expr pos:start="165:26" pos:end="165:37"><name pos:start="165:26" pos:end="165:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="165:40" pos:end="165:93"><expr pos:start="165:40" pos:end="165:93"><literal type="string" pos:start="165:40" pos:end="165:93">"%s %s p:%d &gt;&gt;:%d ilv:%d bits:%d skip:%d %s comp:%d\n"</literal></expr></argument>, <argument pos:start="165:96" pos:end="165:138"><expr pos:start="165:96" pos:end="165:138"><ternary pos:start="165:96" pos:end="165:138"><condition pos:start="165:96" pos:end="165:108"><expr pos:start="165:96" pos:end="165:106"><name pos:start="165:96" pos:end="165:106"><name pos:start="165:96" pos:end="165:96">s</name><operator pos:start="165:97" pos:end="165:98">-&gt;</operator><name pos:start="165:99" pos:end="165:106">lossless</name></name></expr> ?</condition><then pos:start="165:110" pos:end="165:119"> <expr pos:start="165:110" pos:end="165:119"><literal type="string" pos:start="165:110" pos:end="165:119">"lossless"</literal></expr> </then><else pos:start="165:121" pos:end="165:138">: <expr pos:start="165:123" pos:end="165:138"><literal type="string" pos:start="165:123" pos:end="165:138">"sequential DCT"</literal></expr></else></ternary></expr></argument>, <argument pos:start="165:141" pos:end="165:159"><expr pos:start="165:141" pos:end="165:159"><ternary pos:start="165:141" pos:end="165:159"><condition pos:start="165:141" pos:end="165:148"><expr pos:start="165:141" pos:end="165:146"><name pos:start="165:141" pos:end="165:146"><name pos:start="165:141" pos:end="165:141">s</name><operator pos:start="165:142" pos:end="165:143">-&gt;</operator><name pos:start="165:144" pos:end="165:146">rgb</name></name></expr> ?</condition><then pos:start="165:150" pos:end="165:154"> <expr pos:start="165:150" pos:end="165:154"><literal type="string" pos:start="165:150" pos:end="165:154">"RGB"</literal></expr> </then><else pos:start="165:156" pos:end="165:159">: <expr pos:start="165:158" pos:end="165:159"><literal type="string" pos:start="165:158" pos:end="165:159">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="167:16" pos:end="167:24"><expr pos:start="167:16" pos:end="167:24"><name pos:start="167:16" pos:end="167:24">predictor</name></expr></argument>, <argument pos:start="167:27" pos:end="167:41"><expr pos:start="167:27" pos:end="167:41"><name pos:start="167:27" pos:end="167:41">point_transform</name></expr></argument>, <argument pos:start="167:44" pos:end="167:46"><expr pos:start="167:44" pos:end="167:46"><name pos:start="167:44" pos:end="167:46">ilv</name></expr></argument>, <argument pos:start="167:49" pos:end="167:55"><expr pos:start="167:49" pos:end="167:55"><name pos:start="167:49" pos:end="167:55"><name pos:start="167:49" pos:end="167:49">s</name><operator pos:start="167:50" pos:end="167:51">-&gt;</operator><name pos:start="167:52" pos:end="167:55">bits</name></name></expr></argument>, <argument pos:start="167:58" pos:end="167:74"><expr pos:start="167:58" pos:end="167:74"><name pos:start="167:58" pos:end="167:74"><name pos:start="167:58" pos:end="167:58">s</name><operator pos:start="167:59" pos:end="167:60">-&gt;</operator><name pos:start="167:61" pos:end="167:74">mjpb_skiptosod</name></name></expr></argument>,

               <argument pos:start="169:16" pos:end="169:62"><expr pos:start="169:16" pos:end="169:62"><ternary pos:start="169:16" pos:end="169:62"><condition pos:start="169:16" pos:end="169:31"><expr pos:start="169:16" pos:end="169:29"><name pos:start="169:16" pos:end="169:29"><name pos:start="169:16" pos:end="169:16">s</name><operator pos:start="169:17" pos:end="169:18">-&gt;</operator><name pos:start="169:19" pos:end="169:29">pegasus_rct</name></name></expr> ?</condition><then pos:start="169:33" pos:end="169:38"> <expr pos:start="169:33" pos:end="169:38"><literal type="string" pos:start="169:33" pos:end="169:38">"PRCT"</literal></expr> </then><else pos:start="169:40" pos:end="169:62">: <expr pos:start="169:42" pos:end="169:62"><operator pos:start="169:42" pos:end="169:42">(</operator><ternary pos:start="169:43" pos:end="169:61"><condition pos:start="169:43" pos:end="169:50"><expr pos:start="169:43" pos:end="169:48"><name pos:start="169:43" pos:end="169:48"><name pos:start="169:43" pos:end="169:43">s</name><operator pos:start="169:44" pos:end="169:45">-&gt;</operator><name pos:start="169:46" pos:end="169:48">rct</name></name></expr> ?</condition><then pos:start="169:52" pos:end="169:56"> <expr pos:start="169:52" pos:end="169:56"><literal type="string" pos:start="169:52" pos:end="169:56">"RCT"</literal></expr> </then><else pos:start="169:58" pos:end="169:61">: <expr pos:start="169:60" pos:end="169:61"><literal type="string" pos:start="169:60" pos:end="169:61">""</literal></expr></else></ternary><operator pos:start="169:62" pos:end="169:62">)</operator></expr></else></ternary></expr></argument>, <argument pos:start="169:65" pos:end="169:77"><expr pos:start="169:65" pos:end="169:77"><name pos:start="169:65" pos:end="169:77">nb_components</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>





    <comment type="block" pos:start="175:5" pos:end="175:78">/* mjpeg-b can have padding bytes between sos and image data, skip them */</comment>

    <for pos:start="177:5" pos:end="179:29">for <control pos:start="177:9" pos:end="177:43">(<init pos:start="177:10" pos:end="177:31"><expr pos:start="177:10" pos:end="177:30"><name pos:start="177:10" pos:end="177:10">i</name> <operator pos:start="177:12" pos:end="177:12">=</operator> <name pos:start="177:14" pos:end="177:30"><name pos:start="177:14" pos:end="177:14">s</name><operator pos:start="177:15" pos:end="177:16">-&gt;</operator><name pos:start="177:17" pos:end="177:30">mjpb_skiptosod</name></name></expr>;</init> <condition pos:start="177:33" pos:end="177:38"><expr pos:start="177:33" pos:end="177:37"><name pos:start="177:33" pos:end="177:33">i</name> <operator pos:start="177:35" pos:end="177:35">&gt;</operator> <literal type="number" pos:start="177:37" pos:end="177:37">0</literal></expr>;</condition> <incr pos:start="177:40" pos:end="177:42"><expr pos:start="177:40" pos:end="177:42"><name pos:start="177:40" pos:end="177:40">i</name><operator pos:start="177:41" pos:end="177:42">--</operator></expr></incr>)</control><block type="pseudo" pos:start="179:9" pos:end="179:29"><block_content pos:start="179:9" pos:end="179:29">

        <expr_stmt pos:start="179:9" pos:end="179:29"><expr pos:start="179:9" pos:end="179:28"><call pos:start="179:9" pos:end="179:28"><name pos:start="179:9" pos:end="179:17">skip_bits</name><argument_list pos:start="179:18" pos:end="179:28">(<argument pos:start="179:19" pos:end="179:24"><expr pos:start="179:19" pos:end="179:24"><operator pos:start="179:19" pos:end="179:19">&amp;</operator><name pos:start="179:20" pos:end="179:24"><name pos:start="179:20" pos:end="179:20">s</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:24">gb</name></name></expr></argument>, <argument pos:start="179:27" pos:end="179:27"><expr pos:start="179:27" pos:end="179:27"><literal type="number" pos:start="179:27" pos:end="179:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="183:5" pos:end="237:5"><if pos:start="183:5" pos:end="217:5">if<condition pos:start="183:7" pos:end="183:19">(<expr pos:start="183:8" pos:end="183:18"><name pos:start="183:8" pos:end="183:18"><name pos:start="183:8" pos:end="183:8">s</name><operator pos:start="183:9" pos:end="183:10">-&gt;</operator><name pos:start="183:11" pos:end="183:18">lossless</name></name></expr>)</condition><block pos:start="183:20" pos:end="217:5">{<block_content pos:start="185:9" pos:end="215:9">

        <expr_stmt pos:start="185:9" pos:end="185:50"><expr pos:start="185:9" pos:end="185:49"><call pos:start="185:9" pos:end="185:49"><name pos:start="185:9" pos:end="185:18">av_assert0</name><argument_list pos:start="185:19" pos:end="185:49">(<argument pos:start="185:20" pos:end="185:48"><expr pos:start="185:20" pos:end="185:48"><name pos:start="185:20" pos:end="185:33"><name pos:start="185:20" pos:end="185:20">s</name><operator pos:start="185:21" pos:end="185:22">-&gt;</operator><name pos:start="185:23" pos:end="185:33">picture_ptr</name></name> <operator pos:start="185:35" pos:end="185:36">==</operator> <operator pos:start="185:38" pos:end="185:38">&amp;</operator><name pos:start="185:39" pos:end="185:48"><name pos:start="185:39" pos:end="185:39">s</name><operator pos:start="185:40" pos:end="185:41">-&gt;</operator><name pos:start="185:42" pos:end="185:48">picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="187:9" pos:end="215:9"><if pos:start="187:9" pos:end="199:9">if<condition pos:start="187:11" pos:end="187:42">(<expr pos:start="187:12" pos:end="187:41"><name pos:start="187:12" pos:end="187:32">CONFIG_JPEGLS_DECODER</name> <operator pos:start="187:34" pos:end="187:35">&amp;&amp;</operator> <name pos:start="187:37" pos:end="187:41"><name pos:start="187:37" pos:end="187:37">s</name><operator pos:start="187:38" pos:end="187:39">-&gt;</operator><name pos:start="187:40" pos:end="187:41">ls</name></name></expr>)</condition><block pos:start="187:43" pos:end="199:9">{<block_content pos:start="195:13" pos:end="197:26">

<comment type="line" pos:start="189:1" pos:end="189:20">//            for(){</comment>

<comment type="line" pos:start="191:1" pos:end="191:47">//            reset_ls_coding_parameters(s, 0);</comment>



            <if_stmt pos:start="195:13" pos:end="197:26"><if pos:start="195:13" pos:end="197:26">if<condition pos:start="195:15" pos:end="195:80">(<expr pos:start="195:16" pos:end="195:79"><call pos:start="195:16" pos:end="195:75"><name pos:start="195:16" pos:end="195:39">ff_jpegls_decode_picture</name><argument_list pos:start="195:40" pos:end="195:75">(<argument pos:start="195:41" pos:end="195:41"><expr pos:start="195:41" pos:end="195:41"><name pos:start="195:41" pos:end="195:41">s</name></expr></argument>, <argument pos:start="195:44" pos:end="195:52"><expr pos:start="195:44" pos:end="195:52"><name pos:start="195:44" pos:end="195:52">predictor</name></expr></argument>, <argument pos:start="195:55" pos:end="195:69"><expr pos:start="195:55" pos:end="195:69"><name pos:start="195:55" pos:end="195:69">point_transform</name></expr></argument>, <argument pos:start="195:72" pos:end="195:74"><expr pos:start="195:72" pos:end="195:74"><name pos:start="195:72" pos:end="195:74">ilv</name></expr></argument>)</argument_list></call> <operator pos:start="195:77" pos:end="195:77">&lt;</operator> <literal type="number" pos:start="195:79" pos:end="195:79">0</literal></expr>)</condition><block type="pseudo" pos:start="197:17" pos:end="197:26"><block_content pos:start="197:17" pos:end="197:26">

                <return pos:start="197:17" pos:end="197:26">return <expr pos:start="197:24" pos:end="197:25"><operator pos:start="197:24" pos:end="197:24">-</operator><literal type="number" pos:start="197:25" pos:end="197:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if><else pos:start="199:10" pos:end="215:9">else<block pos:start="199:14" pos:end="215:9">{<block_content pos:start="201:13" pos:end="213:13">

            <if_stmt pos:start="201:13" pos:end="213:13"><if pos:start="201:13" pos:end="207:13">if<condition pos:start="201:15" pos:end="201:22">(<expr pos:start="201:16" pos:end="201:21"><name pos:start="201:16" pos:end="201:21"><name pos:start="201:16" pos:end="201:16">s</name><operator pos:start="201:17" pos:end="201:18">-&gt;</operator><name pos:start="201:19" pos:end="201:21">rgb</name></name></expr>)</condition><block pos:start="201:23" pos:end="207:13">{<block_content pos:start="203:17" pos:end="205:30">

                <if_stmt pos:start="203:17" pos:end="205:30"><if pos:start="203:17" pos:end="205:30">if<condition pos:start="203:19" pos:end="203:91">(<expr pos:start="203:20" pos:end="203:90"><call pos:start="203:20" pos:end="203:86"><name pos:start="203:20" pos:end="203:40">ljpeg_decode_rgb_scan</name><argument_list pos:start="203:41" pos:end="203:86">(<argument pos:start="203:42" pos:end="203:42"><expr pos:start="203:42" pos:end="203:42"><name pos:start="203:42" pos:end="203:42">s</name></expr></argument>, <argument pos:start="203:45" pos:end="203:57"><expr pos:start="203:45" pos:end="203:57"><name pos:start="203:45" pos:end="203:57">nb_components</name></expr></argument>, <argument pos:start="203:60" pos:end="203:68"><expr pos:start="203:60" pos:end="203:68"><name pos:start="203:60" pos:end="203:68">predictor</name></expr></argument>, <argument pos:start="203:71" pos:end="203:85"><expr pos:start="203:71" pos:end="203:85"><name pos:start="203:71" pos:end="203:85">point_transform</name></expr></argument>)</argument_list></call> <operator pos:start="203:88" pos:end="203:88">&lt;</operator> <literal type="number" pos:start="203:90" pos:end="203:90">0</literal></expr>)</condition><block type="pseudo" pos:start="205:21" pos:end="205:30"><block_content pos:start="205:21" pos:end="205:30">

                    <return pos:start="205:21" pos:end="205:30">return <expr pos:start="205:28" pos:end="205:29"><operator pos:start="205:28" pos:end="205:28">-</operator><literal type="number" pos:start="205:29" pos:end="205:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if><else pos:start="207:14" pos:end="213:13">else<block pos:start="207:18" pos:end="213:13">{<block_content pos:start="209:17" pos:end="211:30">

                <if_stmt pos:start="209:17" pos:end="211:30"><if pos:start="209:17" pos:end="211:30">if<condition pos:start="209:19" pos:end="209:76">(<expr pos:start="209:20" pos:end="209:75"><call pos:start="209:20" pos:end="209:71"><name pos:start="209:20" pos:end="209:40">ljpeg_decode_yuv_scan</name><argument_list pos:start="209:41" pos:end="209:71">(<argument pos:start="209:42" pos:end="209:42"><expr pos:start="209:42" pos:end="209:42"><name pos:start="209:42" pos:end="209:42">s</name></expr></argument>, <argument pos:start="209:45" pos:end="209:53"><expr pos:start="209:45" pos:end="209:53"><name pos:start="209:45" pos:end="209:53">predictor</name></expr></argument>, <argument pos:start="209:56" pos:end="209:70"><expr pos:start="209:56" pos:end="209:70"><name pos:start="209:56" pos:end="209:70">point_transform</name></expr></argument>)</argument_list></call> <operator pos:start="209:73" pos:end="209:73">&lt;</operator> <literal type="number" pos:start="209:75" pos:end="209:75">0</literal></expr>)</condition><block type="pseudo" pos:start="211:21" pos:end="211:30"><block_content pos:start="211:21" pos:end="211:30">

                    <return pos:start="211:21" pos:end="211:30">return <expr pos:start="211:28" pos:end="211:29"><operator pos:start="211:28" pos:end="211:28">-</operator><literal type="number" pos:start="211:29" pos:end="211:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if><else pos:start="217:6" pos:end="237:5">else<block pos:start="217:10" pos:end="237:5">{<block_content pos:start="219:9" pos:end="235:9">

        <if_stmt pos:start="219:9" pos:end="235:9"><if pos:start="219:9" pos:end="227:9">if<condition pos:start="219:11" pos:end="219:39">(<expr pos:start="219:12" pos:end="219:38"><name pos:start="219:12" pos:end="219:25"><name pos:start="219:12" pos:end="219:12">s</name><operator pos:start="219:13" pos:end="219:14">-&gt;</operator><name pos:start="219:15" pos:end="219:25">progressive</name></name> <operator pos:start="219:27" pos:end="219:28">&amp;&amp;</operator> <name pos:start="219:30" pos:end="219:38">predictor</name></expr>)</condition> <block pos:start="219:41" pos:end="227:9">{<block_content pos:start="221:13" pos:end="225:26">

            <expr_stmt pos:start="221:13" pos:end="221:54"><expr pos:start="221:13" pos:end="221:53"><call pos:start="221:13" pos:end="221:53"><name pos:start="221:13" pos:end="221:22">av_assert0</name><argument_list pos:start="221:23" pos:end="221:53">(<argument pos:start="221:24" pos:end="221:52"><expr pos:start="221:24" pos:end="221:52"><name pos:start="221:24" pos:end="221:37"><name pos:start="221:24" pos:end="221:24">s</name><operator pos:start="221:25" pos:end="221:26">-&gt;</operator><name pos:start="221:27" pos:end="221:37">picture_ptr</name></name> <operator pos:start="221:39" pos:end="221:40">==</operator> <operator pos:start="221:42" pos:end="221:42">&amp;</operator><name pos:start="221:43" pos:end="221:52"><name pos:start="221:43" pos:end="221:43">s</name><operator pos:start="221:44" pos:end="221:45">-&gt;</operator><name pos:start="221:46" pos:end="221:52">picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="223:13" pos:end="225:26"><if pos:start="223:13" pos:end="225:26">if<condition pos:start="223:15" pos:end="223:100">(<expr pos:start="223:16" pos:end="223:99"><call pos:start="223:16" pos:end="223:95"><name pos:start="223:16" pos:end="223:47">mjpeg_decode_scan_progressive_ac</name><argument_list pos:start="223:48" pos:end="223:95">(<argument pos:start="223:49" pos:end="223:49"><expr pos:start="223:49" pos:end="223:49"><name pos:start="223:49" pos:end="223:49">s</name></expr></argument>, <argument pos:start="223:52" pos:end="223:60"><expr pos:start="223:52" pos:end="223:60"><name pos:start="223:52" pos:end="223:60">predictor</name></expr></argument>, <argument pos:start="223:63" pos:end="223:65"><expr pos:start="223:63" pos:end="223:65"><name pos:start="223:63" pos:end="223:65">ilv</name></expr></argument>, <argument pos:start="223:68" pos:end="223:77"><expr pos:start="223:68" pos:end="223:77"><name pos:start="223:68" pos:end="223:77">prev_shift</name></expr></argument>, <argument pos:start="223:80" pos:end="223:94"><expr pos:start="223:80" pos:end="223:94"><name pos:start="223:80" pos:end="223:94">point_transform</name></expr></argument>)</argument_list></call> <operator pos:start="223:97" pos:end="223:97">&lt;</operator> <literal type="number" pos:start="223:99" pos:end="223:99">0</literal></expr>)</condition><block type="pseudo" pos:start="225:17" pos:end="225:26"><block_content pos:start="225:17" pos:end="225:26">

                <return pos:start="225:17" pos:end="225:26">return <expr pos:start="225:24" pos:end="225:25"><operator pos:start="225:24" pos:end="225:24">-</operator><literal type="number" pos:start="225:25" pos:end="225:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="227:11" pos:end="235:9">else <block pos:start="227:16" pos:end="235:9">{<block_content pos:start="229:13" pos:end="233:26">

            <if_stmt pos:start="229:13" pos:end="233:26"><if pos:start="229:13" pos:end="233:26">if<condition pos:start="229:15" pos:end="231:60">(<expr pos:start="229:16" pos:end="231:59"><call pos:start="229:16" pos:end="231:55"><name pos:start="229:16" pos:end="229:32">mjpeg_decode_scan</name><argument_list pos:start="229:33" pos:end="231:55">(<argument pos:start="229:34" pos:end="229:34"><expr pos:start="229:34" pos:end="229:34"><name pos:start="229:34" pos:end="229:34">s</name></expr></argument>, <argument pos:start="229:37" pos:end="229:49"><expr pos:start="229:37" pos:end="229:49"><name pos:start="229:37" pos:end="229:49">nb_components</name></expr></argument>, <argument pos:start="229:52" pos:end="229:61"><expr pos:start="229:52" pos:end="229:61"><name pos:start="229:52" pos:end="229:61">prev_shift</name></expr></argument>, <argument pos:start="229:64" pos:end="229:78"><expr pos:start="229:64" pos:end="229:78"><name pos:start="229:64" pos:end="229:78">point_transform</name></expr></argument>,

                                 <argument pos:start="231:34" pos:end="231:43"><expr pos:start="231:34" pos:end="231:43"><name pos:start="231:34" pos:end="231:43">mb_bitmask</name></expr></argument>, <argument pos:start="231:46" pos:end="231:54"><expr pos:start="231:46" pos:end="231:54"><name pos:start="231:46" pos:end="231:54">reference</name></expr></argument>)</argument_list></call> <operator pos:start="231:57" pos:end="231:57">&lt;</operator> <literal type="number" pos:start="231:59" pos:end="231:59">0</literal></expr>)</condition><block type="pseudo" pos:start="233:17" pos:end="233:26"><block_content pos:start="233:17" pos:end="233:26">

                <return pos:start="233:17" pos:end="233:26">return <expr pos:start="233:24" pos:end="233:25"><operator pos:start="233:24" pos:end="233:24">-</operator><literal type="number" pos:start="233:25" pos:end="233:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="239:5" pos:end="279:5"><if pos:start="239:5" pos:end="253:5">if <condition pos:start="239:8" pos:end="239:18">(<expr pos:start="239:9" pos:end="239:17"><name pos:start="239:9" pos:end="239:17"><name pos:start="239:9" pos:end="239:9">s</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator><name pos:start="239:12" pos:end="239:17">yuv421</name></name></expr>)</condition> <block pos:start="239:20" pos:end="253:5">{<block_content pos:start="241:9" pos:end="251:9">

        <decl_stmt pos:start="241:9" pos:end="241:48"><decl pos:start="241:9" pos:end="241:47"><type pos:start="241:9" pos:end="241:17"><name pos:start="241:9" pos:end="241:15">uint8_t</name> <modifier pos:start="241:17" pos:end="241:17">*</modifier></type><name pos:start="241:18" pos:end="241:21">line</name> <init pos:start="241:23" pos:end="241:47">= <expr pos:start="241:25" pos:end="241:47"><name pos:start="241:25" pos:end="241:47"><name pos:start="241:25" pos:end="241:25">s</name><operator pos:start="241:26" pos:end="241:27">-&gt;</operator><name pos:start="241:28" pos:end="241:38">picture_ptr</name><operator pos:start="241:39" pos:end="241:40">-&gt;</operator><name pos:start="241:41" pos:end="241:44">data</name><index pos:start="241:45" pos:end="241:47">[<expr pos:start="241:46" pos:end="241:46"><literal type="number" pos:start="241:46" pos:end="241:46">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="243:9" pos:end="251:9">for <control pos:start="243:13" pos:end="243:43">(<init pos:start="243:14" pos:end="243:19"><expr pos:start="243:14" pos:end="243:18"><name pos:start="243:14" pos:end="243:14">i</name> <operator pos:start="243:16" pos:end="243:16">=</operator> <literal type="number" pos:start="243:18" pos:end="243:18">0</literal></expr>;</init> <condition pos:start="243:21" pos:end="243:38"><expr pos:start="243:21" pos:end="243:37"><name pos:start="243:21" pos:end="243:21">i</name> <operator pos:start="243:23" pos:end="243:23">&lt;</operator> <name pos:start="243:25" pos:end="243:33"><name pos:start="243:25" pos:end="243:25">s</name><operator pos:start="243:26" pos:end="243:27">-&gt;</operator><name pos:start="243:28" pos:end="243:33">height</name></name> <operator pos:start="243:35" pos:end="243:35">/</operator> <literal type="number" pos:start="243:37" pos:end="243:37">2</literal></expr>;</condition> <incr pos:start="243:40" pos:end="243:42"><expr pos:start="243:40" pos:end="243:42"><name pos:start="243:40" pos:end="243:40">i</name><operator pos:start="243:41" pos:end="243:42">++</operator></expr></incr>)</control> <block pos:start="243:45" pos:end="251:9">{<block_content pos:start="245:13" pos:end="249:35">

            <for pos:start="245:13" pos:end="247:77">for <control pos:start="245:17" pos:end="245:54">(<init pos:start="245:18" pos:end="245:38"><expr pos:start="245:18" pos:end="245:37"><name pos:start="245:18" pos:end="245:22">index</name> <operator pos:start="245:24" pos:end="245:24">=</operator> <name pos:start="245:26" pos:end="245:33"><name pos:start="245:26" pos:end="245:26">s</name><operator pos:start="245:27" pos:end="245:28">-&gt;</operator><name pos:start="245:29" pos:end="245:33">width</name></name> <operator pos:start="245:35" pos:end="245:35">-</operator> <literal type="number" pos:start="245:37" pos:end="245:37">1</literal></expr>;</init> <condition pos:start="245:40" pos:end="245:45"><expr pos:start="245:40" pos:end="245:44"><name pos:start="245:40" pos:end="245:44">index</name></expr>;</condition> <incr pos:start="245:47" pos:end="245:53"><expr pos:start="245:47" pos:end="245:53"><name pos:start="245:47" pos:end="245:51">index</name><operator pos:start="245:52" pos:end="245:53">--</operator></expr></incr>)</control><block type="pseudo" pos:start="247:17" pos:end="247:77"><block_content pos:start="247:17" pos:end="247:77">

                <expr_stmt pos:start="247:17" pos:end="247:77"><expr pos:start="247:17" pos:end="247:76"><name pos:start="247:17" pos:end="247:27"><name pos:start="247:17" pos:end="247:20">line</name><index pos:start="247:21" pos:end="247:27">[<expr pos:start="247:22" pos:end="247:26"><name pos:start="247:22" pos:end="247:26">index</name></expr>]</index></name> <operator pos:start="247:29" pos:end="247:29">=</operator> <operator pos:start="247:31" pos:end="247:31">(</operator><name pos:start="247:32" pos:end="247:46"><name pos:start="247:32" pos:end="247:35">line</name><index pos:start="247:36" pos:end="247:46">[<expr pos:start="247:37" pos:end="247:45"><name pos:start="247:37" pos:end="247:41">index</name> <operator pos:start="247:43" pos:end="247:43">/</operator> <literal type="number" pos:start="247:45" pos:end="247:45">2</literal></expr>]</index></name> <operator pos:start="247:48" pos:end="247:48">+</operator> <name pos:start="247:50" pos:end="247:70"><name pos:start="247:50" pos:end="247:53">line</name><index pos:start="247:54" pos:end="247:70">[<expr pos:start="247:55" pos:end="247:69"><operator pos:start="247:55" pos:end="247:55">(</operator><name pos:start="247:56" pos:end="247:60">index</name> <operator pos:start="247:62" pos:end="247:62">+</operator> <literal type="number" pos:start="247:64" pos:end="247:64">1</literal><operator pos:start="247:65" pos:end="247:65">)</operator> <operator pos:start="247:67" pos:end="247:67">/</operator> <literal type="number" pos:start="247:69" pos:end="247:69">2</literal></expr>]</index></name><operator pos:start="247:71" pos:end="247:71">)</operator> <operator pos:start="247:73" pos:end="247:74">&gt;&gt;</operator> <literal type="number" pos:start="247:76" pos:end="247:76">1</literal></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="249:13" pos:end="249:35"><expr pos:start="249:13" pos:end="249:34"><name pos:start="249:13" pos:end="249:16">line</name> <operator pos:start="249:18" pos:end="249:19">+=</operator> <name pos:start="249:21" pos:end="249:34"><name pos:start="249:21" pos:end="249:21">s</name><operator pos:start="249:22" pos:end="249:23">-&gt;</operator><name pos:start="249:24" pos:end="249:31">linesize</name><index pos:start="249:32" pos:end="249:34">[<expr pos:start="249:33" pos:end="249:33"><literal type="number" pos:start="249:33" pos:end="249:33">2</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="253:7" pos:end="279:5">else if <condition pos:start="253:15" pos:end="253:25">(<expr pos:start="253:16" pos:end="253:24"><name pos:start="253:16" pos:end="253:24"><name pos:start="253:16" pos:end="253:16">s</name><operator pos:start="253:17" pos:end="253:18">-&gt;</operator><name pos:start="253:19" pos:end="253:24">yuv442</name></name></expr>)</condition> <block pos:start="253:27" pos:end="279:5">{<block_content pos:start="255:9" pos:end="277:9">

        <decl_stmt pos:start="255:9" pos:end="255:95"><decl pos:start="255:9" pos:end="255:94"><type pos:start="255:9" pos:end="255:17"><name pos:start="255:9" pos:end="255:15">uint8_t</name> <modifier pos:start="255:17" pos:end="255:17">*</modifier></type><name pos:start="255:18" pos:end="255:20">dst</name> <init pos:start="255:22" pos:end="255:94">= <expr pos:start="255:24" pos:end="255:94"><operator pos:start="255:24" pos:end="255:24">&amp;</operator><operator pos:start="255:25" pos:end="255:25">(</operator><operator pos:start="255:26" pos:end="255:26">(</operator><name pos:start="255:27" pos:end="255:33">uint8_t</name> <operator pos:start="255:35" pos:end="255:35">*</operator><operator pos:start="255:36" pos:end="255:36">)</operator><name pos:start="255:37" pos:end="255:59"><name pos:start="255:37" pos:end="255:37">s</name><operator pos:start="255:38" pos:end="255:39">-&gt;</operator><name pos:start="255:40" pos:end="255:50">picture_ptr</name><operator pos:start="255:51" pos:end="255:52">-&gt;</operator><name pos:start="255:53" pos:end="255:56">data</name><index pos:start="255:57" pos:end="255:59">[<expr pos:start="255:58" pos:end="255:58"><literal type="number" pos:start="255:58" pos:end="255:58">2</literal></expr>]</index></name><operator pos:start="255:60" pos:end="255:60">)</operator><index pos:start="255:61" pos:end="255:94">[<expr pos:start="255:62" pos:end="255:93"><operator pos:start="255:62" pos:end="255:62">(</operator><name pos:start="255:63" pos:end="255:71"><name pos:start="255:63" pos:end="255:63">s</name><operator pos:start="255:64" pos:end="255:65">-&gt;</operator><name pos:start="255:66" pos:end="255:71">height</name></name> <operator pos:start="255:73" pos:end="255:73">-</operator> <literal type="number" pos:start="255:75" pos:end="255:75">1</literal><operator pos:start="255:76" pos:end="255:76">)</operator> <operator pos:start="255:78" pos:end="255:78">*</operator> <name pos:start="255:80" pos:end="255:93"><name pos:start="255:80" pos:end="255:80">s</name><operator pos:start="255:81" pos:end="255:82">-&gt;</operator><name pos:start="255:83" pos:end="255:90">linesize</name><index pos:start="255:91" pos:end="255:93">[<expr pos:start="255:92" pos:end="255:92"><literal type="number" pos:start="255:92" pos:end="255:92">2</literal></expr>]</index></name></expr>]</index></expr></init></decl>;</decl_stmt>

        <for pos:start="257:9" pos:end="277:9">for <control pos:start="257:13" pos:end="257:39">(<init pos:start="257:14" pos:end="257:31"><expr pos:start="257:14" pos:end="257:30"><name pos:start="257:14" pos:end="257:14">i</name> <operator pos:start="257:16" pos:end="257:16">=</operator> <name pos:start="257:18" pos:end="257:26"><name pos:start="257:18" pos:end="257:18">s</name><operator pos:start="257:19" pos:end="257:20">-&gt;</operator><name pos:start="257:21" pos:end="257:26">height</name></name> <operator pos:start="257:28" pos:end="257:28">-</operator> <literal type="number" pos:start="257:30" pos:end="257:30">1</literal></expr>;</init> <condition pos:start="257:33" pos:end="257:34"><expr pos:start="257:33" pos:end="257:33"><name pos:start="257:33" pos:end="257:33">i</name></expr>;</condition> <incr pos:start="257:36" pos:end="257:38"><expr pos:start="257:36" pos:end="257:38"><name pos:start="257:36" pos:end="257:36">i</name><operator pos:start="257:37" pos:end="257:38">--</operator></expr></incr>)</control> <block pos:start="257:41" pos:end="277:9">{<block_content pos:start="259:13" pos:end="275:34">

            <decl_stmt pos:start="259:13" pos:end="259:90"><decl pos:start="259:13" pos:end="259:89"><type pos:start="259:13" pos:end="259:21"><name pos:start="259:13" pos:end="259:19">uint8_t</name> <modifier pos:start="259:21" pos:end="259:21">*</modifier></type><name pos:start="259:22" pos:end="259:25">src1</name> <init pos:start="259:27" pos:end="259:89">= <expr pos:start="259:29" pos:end="259:89"><operator pos:start="259:29" pos:end="259:29">&amp;</operator><operator pos:start="259:30" pos:end="259:30">(</operator><operator pos:start="259:31" pos:end="259:31">(</operator><name pos:start="259:32" pos:end="259:38">uint8_t</name> <operator pos:start="259:40" pos:end="259:40">*</operator><operator pos:start="259:41" pos:end="259:41">)</operator><name pos:start="259:42" pos:end="259:64"><name pos:start="259:42" pos:end="259:42">s</name><operator pos:start="259:43" pos:end="259:44">-&gt;</operator><name pos:start="259:45" pos:end="259:55">picture_ptr</name><operator pos:start="259:56" pos:end="259:57">-&gt;</operator><name pos:start="259:58" pos:end="259:61">data</name><index pos:start="259:62" pos:end="259:64">[<expr pos:start="259:63" pos:end="259:63"><literal type="number" pos:start="259:63" pos:end="259:63">2</literal></expr>]</index></name><operator pos:start="259:65" pos:end="259:65">)</operator><index pos:start="259:66" pos:end="259:89">[<expr pos:start="259:67" pos:end="259:88"><name pos:start="259:67" pos:end="259:67">i</name> <operator pos:start="259:69" pos:end="259:69">/</operator> <literal type="number" pos:start="259:71" pos:end="259:71">2</literal> <operator pos:start="259:73" pos:end="259:73">*</operator> <name pos:start="259:75" pos:end="259:88"><name pos:start="259:75" pos:end="259:75">s</name><operator pos:start="259:76" pos:end="259:77">-&gt;</operator><name pos:start="259:78" pos:end="259:85">linesize</name><index pos:start="259:86" pos:end="259:88">[<expr pos:start="259:87" pos:end="259:87"><literal type="number" pos:start="259:87" pos:end="259:87">2</literal></expr>]</index></name></expr>]</index></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="261:13" pos:end="261:96"><decl pos:start="261:13" pos:end="261:95"><type pos:start="261:13" pos:end="261:21"><name pos:start="261:13" pos:end="261:19">uint8_t</name> <modifier pos:start="261:21" pos:end="261:21">*</modifier></type><name pos:start="261:22" pos:end="261:25">src2</name> <init pos:start="261:27" pos:end="261:95">= <expr pos:start="261:29" pos:end="261:95"><operator pos:start="261:29" pos:end="261:29">&amp;</operator><operator pos:start="261:30" pos:end="261:30">(</operator><operator pos:start="261:31" pos:end="261:31">(</operator><name pos:start="261:32" pos:end="261:38">uint8_t</name> <operator pos:start="261:40" pos:end="261:40">*</operator><operator pos:start="261:41" pos:end="261:41">)</operator><name pos:start="261:42" pos:end="261:64"><name pos:start="261:42" pos:end="261:42">s</name><operator pos:start="261:43" pos:end="261:44">-&gt;</operator><name pos:start="261:45" pos:end="261:55">picture_ptr</name><operator pos:start="261:56" pos:end="261:57">-&gt;</operator><name pos:start="261:58" pos:end="261:61">data</name><index pos:start="261:62" pos:end="261:64">[<expr pos:start="261:63" pos:end="261:63"><literal type="number" pos:start="261:63" pos:end="261:63">2</literal></expr>]</index></name><operator pos:start="261:65" pos:end="261:65">)</operator><index pos:start="261:66" pos:end="261:95">[<expr pos:start="261:67" pos:end="261:94"><operator pos:start="261:67" pos:end="261:67">(</operator><name pos:start="261:68" pos:end="261:68">i</name> <operator pos:start="261:70" pos:end="261:70">+</operator> <literal type="number" pos:start="261:72" pos:end="261:72">1</literal><operator pos:start="261:73" pos:end="261:73">)</operator> <operator pos:start="261:75" pos:end="261:75">/</operator> <literal type="number" pos:start="261:77" pos:end="261:77">2</literal> <operator pos:start="261:79" pos:end="261:79">*</operator> <name pos:start="261:81" pos:end="261:94"><name pos:start="261:81" pos:end="261:81">s</name><operator pos:start="261:82" pos:end="261:83">-&gt;</operator><name pos:start="261:84" pos:end="261:91">linesize</name><index pos:start="261:92" pos:end="261:94">[<expr pos:start="261:93" pos:end="261:93"><literal type="number" pos:start="261:93" pos:end="261:93">2</literal></expr>]</index></name></expr>]</index></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="263:13" pos:end="273:13"><if pos:start="263:13" pos:end="267:13">if <condition pos:start="263:16" pos:end="263:29">(<expr pos:start="263:17" pos:end="263:28"><name pos:start="263:17" pos:end="263:20">src1</name> <operator pos:start="263:22" pos:end="263:23">==</operator> <name pos:start="263:25" pos:end="263:28">src2</name></expr>)</condition> <block pos:start="263:31" pos:end="267:13">{<block_content pos:start="265:17" pos:end="265:44">

                <expr_stmt pos:start="265:17" pos:end="265:44"><expr pos:start="265:17" pos:end="265:43"><call pos:start="265:17" pos:end="265:43"><name pos:start="265:17" pos:end="265:22">memcpy</name><argument_list pos:start="265:23" pos:end="265:43">(<argument pos:start="265:24" pos:end="265:26"><expr pos:start="265:24" pos:end="265:26"><name pos:start="265:24" pos:end="265:26">dst</name></expr></argument>, <argument pos:start="265:29" pos:end="265:32"><expr pos:start="265:29" pos:end="265:32"><name pos:start="265:29" pos:end="265:32">src1</name></expr></argument>, <argument pos:start="265:35" pos:end="265:42"><expr pos:start="265:35" pos:end="265:42"><name pos:start="265:35" pos:end="265:42"><name pos:start="265:35" pos:end="265:35">s</name><operator pos:start="265:36" pos:end="265:37">-&gt;</operator><name pos:start="265:38" pos:end="265:42">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="267:15" pos:end="273:13">else <block pos:start="267:20" pos:end="273:13">{<block_content pos:start="269:17" pos:end="271:66">

                <for pos:start="269:17" pos:end="271:66">for <control pos:start="269:21" pos:end="269:58">(<init pos:start="269:22" pos:end="269:31"><expr pos:start="269:22" pos:end="269:30"><name pos:start="269:22" pos:end="269:26">index</name> <operator pos:start="269:28" pos:end="269:28">=</operator> <literal type="number" pos:start="269:30" pos:end="269:30">0</literal></expr>;</init> <condition pos:start="269:33" pos:end="269:49"><expr pos:start="269:33" pos:end="269:48"><name pos:start="269:33" pos:end="269:37">index</name> <operator pos:start="269:39" pos:end="269:39">&lt;</operator> <name pos:start="269:41" pos:end="269:48"><name pos:start="269:41" pos:end="269:41">s</name><operator pos:start="269:42" pos:end="269:43">-&gt;</operator><name pos:start="269:44" pos:end="269:48">width</name></name></expr>;</condition> <incr pos:start="269:51" pos:end="269:57"><expr pos:start="269:51" pos:end="269:57"><name pos:start="269:51" pos:end="269:55">index</name><operator pos:start="269:56" pos:end="269:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="271:21" pos:end="271:66"><block_content pos:start="271:21" pos:end="271:66">

                    <expr_stmt pos:start="271:21" pos:end="271:66"><expr pos:start="271:21" pos:end="271:65"><name pos:start="271:21" pos:end="271:30"><name pos:start="271:21" pos:end="271:23">dst</name><index pos:start="271:24" pos:end="271:30">[<expr pos:start="271:25" pos:end="271:29"><name pos:start="271:25" pos:end="271:29">index</name></expr>]</index></name> <operator pos:start="271:32" pos:end="271:32">=</operator> <operator pos:start="271:34" pos:end="271:34">(</operator><name pos:start="271:35" pos:end="271:45"><name pos:start="271:35" pos:end="271:38">src1</name><index pos:start="271:39" pos:end="271:45">[<expr pos:start="271:40" pos:end="271:44"><name pos:start="271:40" pos:end="271:44">index</name></expr>]</index></name> <operator pos:start="271:47" pos:end="271:47">+</operator> <name pos:start="271:49" pos:end="271:59"><name pos:start="271:49" pos:end="271:52">src2</name><index pos:start="271:53" pos:end="271:59">[<expr pos:start="271:54" pos:end="271:58"><name pos:start="271:54" pos:end="271:58">index</name></expr>]</index></name><operator pos:start="271:60" pos:end="271:60">)</operator> <operator pos:start="271:62" pos:end="271:63">&gt;&gt;</operator> <literal type="number" pos:start="271:65" pos:end="271:65">1</literal></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:34"><expr pos:start="275:13" pos:end="275:33"><name pos:start="275:13" pos:end="275:15">dst</name> <operator pos:start="275:17" pos:end="275:18">-=</operator> <name pos:start="275:20" pos:end="275:33"><name pos:start="275:20" pos:end="275:20">s</name><operator pos:start="275:21" pos:end="275:22">-&gt;</operator><name pos:start="275:23" pos:end="275:30">linesize</name><index pos:start="275:31" pos:end="275:33">[<expr pos:start="275:32" pos:end="275:32"><literal type="number" pos:start="275:32" pos:end="275:32">2</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="281:5" pos:end="281:13"><expr pos:start="281:5" pos:end="281:12"><call pos:start="281:5" pos:end="281:12"><name pos:start="281:5" pos:end="281:10">emms_c</name><argument_list pos:start="281:11" pos:end="281:12">()</argument_list></call></expr>;</expr_stmt>

    <return pos:start="283:5" pos:end="283:13">return <expr pos:start="283:12" pos:end="283:12"><literal type="number" pos:start="283:12" pos:end="283:12">0</literal></expr>;</return>

 <label pos:start="285:2" pos:end="285:14"><name pos:start="285:2" pos:end="285:13">out_of_range</name>:</label>

    <expr_stmt pos:start="287:5" pos:end="287:77"><expr pos:start="287:5" pos:end="287:76"><call pos:start="287:5" pos:end="287:76"><name pos:start="287:5" pos:end="287:10">av_log</name><argument_list pos:start="287:11" pos:end="287:76">(<argument pos:start="287:12" pos:end="287:19"><expr pos:start="287:12" pos:end="287:19"><name pos:start="287:12" pos:end="287:19"><name pos:start="287:12" pos:end="287:12">s</name><operator pos:start="287:13" pos:end="287:14">-&gt;</operator><name pos:start="287:15" pos:end="287:19">avctx</name></name></expr></argument>, <argument pos:start="287:22" pos:end="287:33"><expr pos:start="287:22" pos:end="287:33"><name pos:start="287:22" pos:end="287:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="287:36" pos:end="287:75"><expr pos:start="287:36" pos:end="287:75"><literal type="string" pos:start="287:36" pos:end="287:75">"decode_sos: ac/dc index out of range\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="289:5" pos:end="289:14">return <expr pos:start="289:12" pos:end="289:13"><operator pos:start="289:12" pos:end="289:12">-</operator><literal type="number" pos:start="289:13" pos:end="289:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
