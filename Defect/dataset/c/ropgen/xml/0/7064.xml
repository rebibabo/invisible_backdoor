<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7064.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">swf_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="253:1">{<block_content pos:start="5:5" pos:end="251:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">SWFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">swf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">vst</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">NULL</name></expr></init></decl>, <decl pos:start="9:27" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:14"><modifier pos:start="9:27" pos:end="9:27">*</modifier></type><name pos:start="9:28" pos:end="9:30">ast</name> <init pos:start="9:32" pos:end="9:37">= <expr pos:start="9:34" pos:end="9:37"><name pos:start="9:34" pos:end="9:37">NULL</name></expr></init></decl>, <decl pos:start="9:40" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:14"><modifier pos:start="9:40" pos:end="9:40">*</modifier></type><name pos:start="9:41" pos:end="9:42">st</name> <init pos:start="9:44" pos:end="9:46">= <expr pos:start="9:46" pos:end="9:46"><literal type="number" pos:start="9:46" pos:end="9:46">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">tag</name></decl>, <decl pos:start="11:14" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:16">len</name></decl>, <decl pos:start="11:19" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:19">i</name></decl>, <decl pos:start="11:22" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:26">frame</name></decl>, <decl pos:start="11:29" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:29" pos:end="11:29">v</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="249:5">for<control pos:start="15:8" pos:end="15:11">(<init pos:start="15:9" pos:end="15:9">;</init><condition pos:start="15:10" pos:end="15:10">;</condition><incr/>)</control> <block pos:start="15:13" pos:end="249:5">{<block_content pos:start="17:9" pos:end="247:27">

        <decl_stmt pos:start="17:9" pos:end="17:37"><decl pos:start="17:9" pos:end="17:36"><type pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:16">uint64_t</name></type> <name pos:start="17:18" pos:end="17:20">pos</name> <init pos:start="17:22" pos:end="17:36">= <expr pos:start="17:24" pos:end="17:36"><call pos:start="17:24" pos:end="17:36"><name pos:start="17:24" pos:end="17:32">avio_tell</name><argument_list pos:start="17:33" pos:end="17:36">(<argument pos:start="17:34" pos:end="17:35"><expr pos:start="17:34" pos:end="17:35"><name pos:start="17:34" pos:end="17:35">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:11">tag</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:35"><name pos:start="19:15" pos:end="19:25">get_swf_tag</name><argument_list pos:start="19:26" pos:end="19:35">(<argument pos:start="19:27" pos:end="19:28"><expr pos:start="19:27" pos:end="19:28"><name pos:start="19:27" pos:end="19:28">pb</name></expr></argument>, <argument pos:start="19:31" pos:end="19:34"><expr pos:start="19:31" pos:end="19:34"><operator pos:start="19:31" pos:end="19:31">&amp;</operator><name pos:start="19:32" pos:end="19:34">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:32"><if pos:start="21:9" pos:end="23:32">if <condition pos:start="21:12" pos:end="21:20">(<expr pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:15">tag</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:32"><block_content pos:start="23:13" pos:end="23:32">

            <return pos:start="23:13" pos:end="23:32">return <expr pos:start="23:20" pos:end="23:31"><call pos:start="23:20" pos:end="23:31"><name pos:start="23:20" pos:end="23:26">AVERROR</name><argument_list pos:start="23:27" pos:end="23:31">(<argument pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="243:9"><if pos:start="25:9" pos:end="71:9">if <condition pos:start="25:12" pos:end="25:35">(<expr pos:start="25:13" pos:end="25:34"><name pos:start="25:13" pos:end="25:15">tag</name> <operator pos:start="25:17" pos:end="25:18">==</operator> <name pos:start="25:20" pos:end="25:34">TAG_VIDEOSTREAM</name></expr>)</condition> <block pos:start="25:37" pos:end="71:9">{<block_content pos:start="27:13" pos:end="69:21">

            <decl_stmt pos:start="27:13" pos:end="27:38"><decl pos:start="27:13" pos:end="27:37"><type pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">int</name></type> <name pos:start="27:17" pos:end="27:21">ch_id</name> <init pos:start="27:23" pos:end="27:37">= <expr pos:start="27:25" pos:end="27:37"><call pos:start="27:25" pos:end="27:37"><name pos:start="27:25" pos:end="27:33">avio_rl16</name><argument_list pos:start="27:34" pos:end="27:37">(<argument pos:start="27:35" pos:end="27:36"><expr pos:start="27:35" pos:end="27:36"><name pos:start="27:35" pos:end="27:36">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:21"><expr pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:15">len</name> <operator pos:start="29:17" pos:end="29:18">-=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">2</literal></expr>;</expr_stmt>



            <for pos:start="33:13" pos:end="41:13">for <control pos:start="33:17" pos:end="33:43">(<init pos:start="33:18" pos:end="33:21"><expr pos:start="33:18" pos:end="33:20"><name pos:start="33:18" pos:end="33:18">i</name><operator pos:start="33:19" pos:end="33:19">=</operator><literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr>;</init> <condition pos:start="33:23" pos:end="33:38"><expr pos:start="33:23" pos:end="33:37"><name pos:start="33:23" pos:end="33:23">i</name><operator pos:start="33:24" pos:end="33:24">&lt;</operator><name pos:start="33:25" pos:end="33:37"><name pos:start="33:25" pos:end="33:25">s</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:37">nb_streams</name></name></expr>;</condition> <incr pos:start="33:40" pos:end="33:42"><expr pos:start="33:40" pos:end="33:42"><name pos:start="33:40" pos:end="33:40">i</name><operator pos:start="33:41" pos:end="33:42">++</operator></expr></incr>)</control> <block pos:start="33:45" pos:end="41:13">{<block_content pos:start="35:17" pos:end="39:30">

                <expr_stmt pos:start="35:17" pos:end="35:35"><expr pos:start="35:17" pos:end="35:34"><name pos:start="35:17" pos:end="35:18">st</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:34"><name pos:start="35:22" pos:end="35:22">s</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:31">streams</name><index pos:start="35:32" pos:end="35:34">[<expr pos:start="35:33" pos:end="35:33"><name pos:start="35:33" pos:end="35:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="37:17" pos:end="39:30"><if pos:start="37:17" pos:end="39:30">if <condition pos:start="37:20" pos:end="37:83">(<expr pos:start="37:21" pos:end="37:82"><name pos:start="37:21" pos:end="37:41"><name pos:start="37:21" pos:end="37:22">st</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:29">codec</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:41">codec_type</name></name> <operator pos:start="37:43" pos:end="37:44">==</operator> <name pos:start="37:46" pos:end="37:63">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="37:65" pos:end="37:66">&amp;&amp;</operator> <name pos:start="37:68" pos:end="37:73"><name pos:start="37:68" pos:end="37:69">st</name><operator pos:start="37:70" pos:end="37:71">-&gt;</operator><name pos:start="37:72" pos:end="37:73">id</name></name> <operator pos:start="37:75" pos:end="37:76">==</operator> <name pos:start="37:78" pos:end="37:82">ch_id</name></expr>)</condition><block type="pseudo" pos:start="39:21" pos:end="39:30"><block_content pos:start="39:21" pos:end="39:30">

                    <goto pos:start="39:21" pos:end="39:30">goto <name pos:start="39:26" pos:end="39:29">skip</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="45:13" pos:end="45:26"><expr pos:start="45:13" pos:end="45:25"><call pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:21">avio_rl16</name><argument_list pos:start="45:22" pos:end="45:25">(<argument pos:start="45:23" pos:end="45:24"><expr pos:start="45:23" pos:end="45:24"><name pos:start="45:23" pos:end="45:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:26"><expr pos:start="47:13" pos:end="47:25"><call pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:21">avio_rl16</name><argument_list pos:start="47:22" pos:end="47:25">(<argument pos:start="47:23" pos:end="47:24"><expr pos:start="47:23" pos:end="47:24"><name pos:start="47:23" pos:end="47:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:26"><expr pos:start="49:13" pos:end="49:25"><call pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:21">avio_rl16</name><argument_list pos:start="49:22" pos:end="49:25">(<argument pos:start="49:23" pos:end="49:24"><expr pos:start="49:23" pos:end="49:24"><name pos:start="49:23" pos:end="49:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:24"><expr pos:start="51:13" pos:end="51:23"><call pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:19">avio_r8</name><argument_list pos:start="51:20" pos:end="51:23">(<argument pos:start="51:21" pos:end="51:22"><expr pos:start="51:21" pos:end="51:22"><name pos:start="51:21" pos:end="51:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="53:13" pos:end="53:32">/* Check for FLV1 */</comment>

            <expr_stmt pos:start="55:13" pos:end="55:42"><expr pos:start="55:13" pos:end="55:41"><name pos:start="55:13" pos:end="55:15">vst</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:41"><name pos:start="55:19" pos:end="55:31">av_new_stream</name><argument_list pos:start="55:32" pos:end="55:41">(<argument pos:start="55:33" pos:end="55:33"><expr pos:start="55:33" pos:end="55:33"><name pos:start="55:33" pos:end="55:33">s</name></expr></argument>, <argument pos:start="55:36" pos:end="55:40"><expr pos:start="55:36" pos:end="55:40"><name pos:start="55:36" pos:end="55:40">ch_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="59:26"><if pos:start="57:13" pos:end="59:26">if <condition pos:start="57:16" pos:end="57:21">(<expr pos:start="57:17" pos:end="57:20"><operator pos:start="57:17" pos:end="57:17">!</operator><name pos:start="57:18" pos:end="57:20">vst</name></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:26"><block_content pos:start="59:17" pos:end="59:26">

                <return pos:start="59:17" pos:end="59:26">return <expr pos:start="59:24" pos:end="59:25"><operator pos:start="59:24" pos:end="59:24">-</operator><literal type="number" pos:start="59:25" pos:end="59:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:56"><expr pos:start="61:13" pos:end="61:55"><name pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:15">vst</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:22">codec</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:34">codec_type</name></name> <operator pos:start="61:36" pos:end="61:36">=</operator> <name pos:start="61:38" pos:end="61:55">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:80"><expr pos:start="63:13" pos:end="63:79"><name pos:start="63:13" pos:end="63:32"><name pos:start="63:13" pos:end="63:15">vst</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:22">codec</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:32">codec_id</name></name> <operator pos:start="63:34" pos:end="63:34">=</operator> <call pos:start="63:36" pos:end="63:79"><name pos:start="63:36" pos:end="63:50">ff_codec_get_id</name><argument_list pos:start="63:51" pos:end="63:79">(<argument pos:start="63:52" pos:end="63:65"><expr pos:start="63:52" pos:end="63:65"><name pos:start="63:52" pos:end="63:65">swf_codec_tags</name></expr></argument>, <argument pos:start="63:68" pos:end="63:78"><expr pos:start="63:68" pos:end="63:78"><call pos:start="63:68" pos:end="63:78"><name pos:start="63:68" pos:end="63:74">avio_r8</name><argument_list pos:start="63:75" pos:end="63:78">(<argument pos:start="63:76" pos:end="63:77"><expr pos:start="63:76" pos:end="63:77"><name pos:start="63:76" pos:end="63:77">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:59"><expr pos:start="65:13" pos:end="65:58"><call pos:start="65:13" pos:end="65:58"><name pos:start="65:13" pos:end="65:27">av_set_pts_info</name><argument_list pos:start="65:28" pos:end="65:58">(<argument pos:start="65:29" pos:end="65:31"><expr pos:start="65:29" pos:end="65:31"><name pos:start="65:29" pos:end="65:31">vst</name></expr></argument>, <argument pos:start="65:34" pos:end="65:35"><expr pos:start="65:34" pos:end="65:35"><literal type="number" pos:start="65:34" pos:end="65:35">16</literal></expr></argument>, <argument pos:start="65:38" pos:end="65:40"><expr pos:start="65:38" pos:end="65:40"><literal type="number" pos:start="65:38" pos:end="65:40">256</literal></expr></argument>, <argument pos:start="65:43" pos:end="65:57"><expr pos:start="65:43" pos:end="65:57"><name pos:start="65:43" pos:end="65:57"><name pos:start="65:43" pos:end="65:45">swf</name><operator pos:start="65:46" pos:end="65:47">-&gt;</operator><name pos:start="65:48" pos:end="65:57">frame_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:73"><expr pos:start="67:13" pos:end="67:72"><name pos:start="67:13" pos:end="67:33"><name pos:start="67:13" pos:end="67:15">vst</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:22">codec</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:33">time_base</name></name> <operator pos:start="67:35" pos:end="67:35">=</operator> <operator pos:start="67:37" pos:end="67:37">(</operator><name pos:start="67:38" pos:end="67:47">AVRational</name><operator pos:start="67:48" pos:end="67:48">)</operator><block pos:start="67:49" pos:end="67:72">{ <expr pos:start="67:51" pos:end="67:53"><literal type="number" pos:start="67:51" pos:end="67:53">256</literal></expr>, <expr pos:start="67:56" pos:end="67:70"><name pos:start="67:56" pos:end="67:70"><name pos:start="67:56" pos:end="67:58">swf</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:70">frame_rate</name></name></expr> }</block></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:21"><expr pos:start="69:13" pos:end="69:20"><name pos:start="69:13" pos:end="69:15">len</name> <operator pos:start="69:17" pos:end="69:18">-=</operator> <literal type="number" pos:start="69:20" pos:end="69:20">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="71:11" pos:end="123:9">else if <condition pos:start="71:19" pos:end="71:67">(<expr pos:start="71:20" pos:end="71:66"><name pos:start="71:20" pos:end="71:22">tag</name> <operator pos:start="71:24" pos:end="71:25">==</operator> <name pos:start="71:27" pos:end="71:40">TAG_STREAMHEAD</name> <operator pos:start="71:42" pos:end="71:43">||</operator> <name pos:start="71:45" pos:end="71:47">tag</name> <operator pos:start="71:49" pos:end="71:50">==</operator> <name pos:start="71:52" pos:end="71:66">TAG_STREAMHEAD2</name></expr>)</condition> <block pos:start="71:69" pos:end="123:9">{<block_content pos:start="75:13" pos:end="121:21">

            <comment type="block" pos:start="73:13" pos:end="73:33">/* streaming found */</comment>

            <decl_stmt pos:start="75:13" pos:end="75:33"><decl pos:start="75:13" pos:end="75:32"><type pos:start="75:13" pos:end="75:15"><name pos:start="75:13" pos:end="75:15">int</name></type> <name pos:start="75:17" pos:end="75:32">sample_rate_code</name></decl>;</decl_stmt>



            <for pos:start="79:13" pos:end="87:13">for <control pos:start="79:17" pos:end="79:43">(<init pos:start="79:18" pos:end="79:21"><expr pos:start="79:18" pos:end="79:20"><name pos:start="79:18" pos:end="79:18">i</name><operator pos:start="79:19" pos:end="79:19">=</operator><literal type="number" pos:start="79:20" pos:end="79:20">0</literal></expr>;</init> <condition pos:start="79:23" pos:end="79:38"><expr pos:start="79:23" pos:end="79:37"><name pos:start="79:23" pos:end="79:23">i</name><operator pos:start="79:24" pos:end="79:24">&lt;</operator><name pos:start="79:25" pos:end="79:37"><name pos:start="79:25" pos:end="79:25">s</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:37">nb_streams</name></name></expr>;</condition> <incr pos:start="79:40" pos:end="79:42"><expr pos:start="79:40" pos:end="79:42"><name pos:start="79:40" pos:end="79:40">i</name><operator pos:start="79:41" pos:end="79:42">++</operator></expr></incr>)</control> <block pos:start="79:45" pos:end="87:13">{<block_content pos:start="81:17" pos:end="85:30">

                <expr_stmt pos:start="81:17" pos:end="81:35"><expr pos:start="81:17" pos:end="81:34"><name pos:start="81:17" pos:end="81:18">st</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:34"><name pos:start="81:22" pos:end="81:22">s</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:31">streams</name><index pos:start="81:32" pos:end="81:34">[<expr pos:start="81:33" pos:end="81:33"><name pos:start="81:33" pos:end="81:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="83:17" pos:end="85:30"><if pos:start="83:17" pos:end="85:30">if <condition pos:start="83:20" pos:end="83:80">(<expr pos:start="83:21" pos:end="83:79"><name pos:start="83:21" pos:end="83:41"><name pos:start="83:21" pos:end="83:22">st</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:29">codec</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:41">codec_type</name></name> <operator pos:start="83:43" pos:end="83:44">==</operator> <name pos:start="83:46" pos:end="83:63">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="83:65" pos:end="83:66">&amp;&amp;</operator> <name pos:start="83:68" pos:end="83:73"><name pos:start="83:68" pos:end="83:69">st</name><operator pos:start="83:70" pos:end="83:71">-&gt;</operator><name pos:start="83:72" pos:end="83:73">id</name></name> <operator pos:start="83:75" pos:end="83:76">==</operator> <operator pos:start="83:78" pos:end="83:78">-</operator><literal type="number" pos:start="83:79" pos:end="83:79">1</literal></expr>)</condition><block type="pseudo" pos:start="85:21" pos:end="85:30"><block_content pos:start="85:21" pos:end="85:30">

                    <goto pos:start="85:21" pos:end="85:30">goto <name pos:start="85:26" pos:end="85:29">skip</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="91:13" pos:end="91:24"><expr pos:start="91:13" pos:end="91:23"><call pos:start="91:13" pos:end="91:23"><name pos:start="91:13" pos:end="91:19">avio_r8</name><argument_list pos:start="91:20" pos:end="91:23">(<argument pos:start="91:21" pos:end="91:22"><expr pos:start="91:21" pos:end="91:22"><name pos:start="91:21" pos:end="91:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:28"><expr pos:start="93:13" pos:end="93:27"><name pos:start="93:13" pos:end="93:13">v</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <call pos:start="93:17" pos:end="93:27"><name pos:start="93:17" pos:end="93:23">avio_r8</name><argument_list pos:start="93:24" pos:end="93:27">(<argument pos:start="93:25" pos:end="93:26"><expr pos:start="93:25" pos:end="93:26"><name pos:start="93:25" pos:end="93:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:51"><expr pos:start="95:13" pos:end="95:50"><name pos:start="95:13" pos:end="95:34"><name pos:start="95:13" pos:end="95:15">swf</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:34">samples_per_frame</name></name> <operator pos:start="95:36" pos:end="95:36">=</operator> <call pos:start="95:38" pos:end="95:50"><name pos:start="95:38" pos:end="95:46">avio_rl16</name><argument_list pos:start="95:47" pos:end="95:50">(<argument pos:start="95:48" pos:end="95:49"><expr pos:start="95:48" pos:end="95:49"><name pos:start="95:48" pos:end="95:49">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:39"><expr pos:start="97:13" pos:end="97:38"><name pos:start="97:13" pos:end="97:15">ast</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <call pos:start="97:19" pos:end="97:38"><name pos:start="97:19" pos:end="97:31">av_new_stream</name><argument_list pos:start="97:32" pos:end="97:38">(<argument pos:start="97:33" pos:end="97:33"><expr pos:start="97:33" pos:end="97:33"><name pos:start="97:33" pos:end="97:33">s</name></expr></argument>, <argument pos:start="97:36" pos:end="97:37"><expr pos:start="97:36" pos:end="97:37"><operator pos:start="97:36" pos:end="97:36">-</operator><literal type="number" pos:start="97:37" pos:end="97:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="97:41" pos:end="97:87">/* -1 to avoid clash with video stream ch_id */</comment>

            <if_stmt pos:start="99:13" pos:end="101:26"><if pos:start="99:13" pos:end="101:26">if <condition pos:start="99:16" pos:end="99:21">(<expr pos:start="99:17" pos:end="99:20"><operator pos:start="99:17" pos:end="99:17">!</operator><name pos:start="99:18" pos:end="99:20">ast</name></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:26"><block_content pos:start="101:17" pos:end="101:26">

                <return pos:start="101:17" pos:end="101:26">return <expr pos:start="101:24" pos:end="101:25"><operator pos:start="101:24" pos:end="101:24">-</operator><literal type="number" pos:start="101:25" pos:end="101:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:45"><expr pos:start="103:13" pos:end="103:44"><name pos:start="103:13" pos:end="103:32"><name pos:start="103:13" pos:end="103:15">ast</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:22">codec</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:32">channels</name></name> <operator pos:start="103:34" pos:end="103:34">=</operator> <literal type="number" pos:start="103:36" pos:end="103:38">1</literal> <operator pos:start="103:38" pos:end="103:38">+</operator> <operator pos:start="103:40" pos:end="103:40">(</operator><name pos:start="103:41" pos:end="103:41">v</name><operator pos:start="103:42" pos:end="103:42">&amp;</operator><literal type="number" pos:start="103:43" pos:end="103:43">1</literal><operator pos:start="103:44" pos:end="103:44">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:56"><expr pos:start="105:13" pos:end="105:55"><name pos:start="105:13" pos:end="105:34"><name pos:start="105:13" pos:end="105:15">ast</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:22">codec</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:34">codec_type</name></name> <operator pos:start="105:36" pos:end="105:36">=</operator> <name pos:start="105:38" pos:end="105:55">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:86"><expr pos:start="107:13" pos:end="107:85"><name pos:start="107:13" pos:end="107:32"><name pos:start="107:13" pos:end="107:15">ast</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:22">codec</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:32">codec_id</name></name> <operator pos:start="107:34" pos:end="107:34">=</operator> <call pos:start="107:36" pos:end="107:85"><name pos:start="107:36" pos:end="107:50">ff_codec_get_id</name><argument_list pos:start="107:51" pos:end="107:85">(<argument pos:start="107:52" pos:end="107:71"><expr pos:start="107:52" pos:end="107:71"><name pos:start="107:52" pos:end="107:71">swf_audio_codec_tags</name></expr></argument>, <argument pos:start="107:74" pos:end="107:84"><expr pos:start="107:74" pos:end="107:84"><operator pos:start="107:74" pos:end="107:74">(</operator><name pos:start="107:75" pos:end="107:75">v</name><operator pos:start="107:76" pos:end="107:77">&gt;&gt;</operator><literal type="number" pos:start="107:78" pos:end="107:78">4</literal><operator pos:start="107:79" pos:end="107:79">)</operator> <operator pos:start="107:81" pos:end="107:81">&amp;</operator> <literal type="number" pos:start="107:83" pos:end="107:84">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:52"><expr pos:start="109:13" pos:end="109:51"><name pos:start="109:13" pos:end="109:29"><name pos:start="109:13" pos:end="109:15">ast</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:29">need_parsing</name></name> <operator pos:start="109:31" pos:end="109:31">=</operator> <name pos:start="109:33" pos:end="109:51">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:41"><expr pos:start="111:13" pos:end="111:40"><name pos:start="111:13" pos:end="111:28">sample_rate_code</name><operator pos:start="111:29" pos:end="111:29">=</operator> <operator pos:start="111:31" pos:end="111:31">(</operator><name pos:start="111:32" pos:end="111:32">v</name><operator pos:start="111:33" pos:end="111:34">&gt;&gt;</operator><literal type="number" pos:start="111:35" pos:end="111:35">2</literal><operator pos:start="111:36" pos:end="111:36">)</operator> <operator pos:start="111:38" pos:end="111:38">&amp;</operator> <literal type="number" pos:start="111:40" pos:end="111:40">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="113:13" pos:end="115:36"><if pos:start="113:13" pos:end="115:36">if <condition pos:start="113:16" pos:end="113:34">(<expr pos:start="113:17" pos:end="113:33"><operator pos:start="113:17" pos:end="113:17">!</operator><name pos:start="113:18" pos:end="113:33">sample_rate_code</name></expr>)</condition><block type="pseudo" pos:start="115:17" pos:end="115:36"><block_content pos:start="115:17" pos:end="115:36">

                <return pos:start="115:17" pos:end="115:36">return <expr pos:start="115:24" pos:end="115:35"><call pos:start="115:24" pos:end="115:35"><name pos:start="115:24" pos:end="115:30">AVERROR</name><argument_list pos:start="115:31" pos:end="115:35">(<argument pos:start="115:32" pos:end="115:34"><expr pos:start="115:32" pos:end="115:34"><name pos:start="115:32" pos:end="115:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:68"><expr pos:start="117:13" pos:end="117:67"><name pos:start="117:13" pos:end="117:35"><name pos:start="117:13" pos:end="117:15">ast</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:22">codec</name><operator pos:start="117:23" pos:end="117:24">-&gt;</operator><name pos:start="117:25" pos:end="117:35">sample_rate</name></name> <operator pos:start="117:37" pos:end="117:37">=</operator> <literal type="number" pos:start="117:39" pos:end="117:43">11025</literal> <operator pos:start="117:45" pos:end="117:46">&lt;&lt;</operator> <operator pos:start="117:48" pos:end="117:48">(</operator><name pos:start="117:49" pos:end="117:64">sample_rate_code</name><operator pos:start="117:65" pos:end="117:65">-</operator><literal type="number" pos:start="117:66" pos:end="117:66">1</literal><operator pos:start="117:67" pos:end="117:67">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:65"><expr pos:start="119:13" pos:end="119:64"><call pos:start="119:13" pos:end="119:64"><name pos:start="119:13" pos:end="119:27">av_set_pts_info</name><argument_list pos:start="119:28" pos:end="119:64">(<argument pos:start="119:29" pos:end="119:31"><expr pos:start="119:29" pos:end="119:31"><name pos:start="119:29" pos:end="119:31">ast</name></expr></argument>, <argument pos:start="119:34" pos:end="119:35"><expr pos:start="119:34" pos:end="119:35"><literal type="number" pos:start="119:34" pos:end="119:35">64</literal></expr></argument>, <argument pos:start="119:38" pos:end="119:38"><expr pos:start="119:38" pos:end="119:38"><literal type="number" pos:start="119:38" pos:end="119:38">1</literal></expr></argument>, <argument pos:start="119:41" pos:end="119:63"><expr pos:start="119:41" pos:end="119:63"><name pos:start="119:41" pos:end="119:63"><name pos:start="119:41" pos:end="119:43">ast</name><operator pos:start="119:44" pos:end="119:45">-&gt;</operator><name pos:start="119:46" pos:end="119:50">codec</name><operator pos:start="119:51" pos:end="119:52">-&gt;</operator><name pos:start="119:53" pos:end="119:63">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:21"><expr pos:start="121:13" pos:end="121:20"><name pos:start="121:13" pos:end="121:15">len</name> <operator pos:start="121:17" pos:end="121:18">-=</operator> <literal type="number" pos:start="121:20" pos:end="121:20">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="123:11" pos:end="151:9">else if <condition pos:start="123:19" pos:end="123:41">(<expr pos:start="123:20" pos:end="123:40"><name pos:start="123:20" pos:end="123:22">tag</name> <operator pos:start="123:24" pos:end="123:25">==</operator> <name pos:start="123:27" pos:end="123:40">TAG_VIDEOFRAME</name></expr>)</condition> <block pos:start="123:43" pos:end="151:9">{<block_content pos:start="125:13" pos:end="149:13">

            <decl_stmt pos:start="125:13" pos:end="125:38"><decl pos:start="125:13" pos:end="125:37"><type pos:start="125:13" pos:end="125:15"><name pos:start="125:13" pos:end="125:15">int</name></type> <name pos:start="125:17" pos:end="125:21">ch_id</name> <init pos:start="125:23" pos:end="125:37">= <expr pos:start="125:25" pos:end="125:37"><call pos:start="125:25" pos:end="125:37"><name pos:start="125:25" pos:end="125:33">avio_rl16</name><argument_list pos:start="125:34" pos:end="125:37">(<argument pos:start="125:35" pos:end="125:36"><expr pos:start="125:35" pos:end="125:36"><name pos:start="125:35" pos:end="125:36">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:21"><expr pos:start="127:13" pos:end="127:20"><name pos:start="127:13" pos:end="127:15">len</name> <operator pos:start="127:17" pos:end="127:18">-=</operator> <literal type="number" pos:start="127:20" pos:end="127:20">2</literal></expr>;</expr_stmt>

            <for pos:start="129:13" pos:end="149:13">for<control pos:start="129:16" pos:end="129:42">(<init pos:start="129:17" pos:end="129:20"><expr pos:start="129:17" pos:end="129:19"><name pos:start="129:17" pos:end="129:17">i</name><operator pos:start="129:18" pos:end="129:18">=</operator><literal type="number" pos:start="129:19" pos:end="129:19">0</literal></expr>;</init> <condition pos:start="129:22" pos:end="129:37"><expr pos:start="129:22" pos:end="129:36"><name pos:start="129:22" pos:end="129:22">i</name><operator pos:start="129:23" pos:end="129:23">&lt;</operator><name pos:start="129:24" pos:end="129:36"><name pos:start="129:24" pos:end="129:24">s</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:36">nb_streams</name></name></expr>;</condition> <incr pos:start="129:39" pos:end="129:41"><expr pos:start="129:39" pos:end="129:41"><name pos:start="129:39" pos:end="129:39">i</name><operator pos:start="129:40" pos:end="129:41">++</operator></expr></incr>)</control> <block pos:start="129:44" pos:end="149:13">{<block_content pos:start="131:17" pos:end="147:17">

                <expr_stmt pos:start="131:17" pos:end="131:35"><expr pos:start="131:17" pos:end="131:34"><name pos:start="131:17" pos:end="131:18">st</name> <operator pos:start="131:20" pos:end="131:20">=</operator> <name pos:start="131:22" pos:end="131:34"><name pos:start="131:22" pos:end="131:22">s</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:31">streams</name><index pos:start="131:32" pos:end="131:34">[<expr pos:start="131:33" pos:end="131:33"><name pos:start="131:33" pos:end="131:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="133:17" pos:end="147:17"><if pos:start="133:17" pos:end="147:17">if <condition pos:start="133:20" pos:end="133:83">(<expr pos:start="133:21" pos:end="133:82"><name pos:start="133:21" pos:end="133:41"><name pos:start="133:21" pos:end="133:22">st</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:29">codec</name><operator pos:start="133:30" pos:end="133:31">-&gt;</operator><name pos:start="133:32" pos:end="133:41">codec_type</name></name> <operator pos:start="133:43" pos:end="133:44">==</operator> <name pos:start="133:46" pos:end="133:63">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="133:65" pos:end="133:66">&amp;&amp;</operator> <name pos:start="133:68" pos:end="133:73"><name pos:start="133:68" pos:end="133:69">st</name><operator pos:start="133:70" pos:end="133:71">-&gt;</operator><name pos:start="133:72" pos:end="133:73">id</name></name> <operator pos:start="133:75" pos:end="133:76">==</operator> <name pos:start="133:78" pos:end="133:82">ch_id</name></expr>)</condition> <block pos:start="133:85" pos:end="147:17">{<block_content pos:start="135:21" pos:end="145:37">

                    <expr_stmt pos:start="135:21" pos:end="135:42"><expr pos:start="135:21" pos:end="135:41"><name pos:start="135:21" pos:end="135:25">frame</name> <operator pos:start="135:27" pos:end="135:27">=</operator> <call pos:start="135:29" pos:end="135:41"><name pos:start="135:29" pos:end="135:37">avio_rl16</name><argument_list pos:start="135:38" pos:end="135:41">(<argument pos:start="135:39" pos:end="135:40"><expr pos:start="135:39" pos:end="135:40"><name pos:start="135:39" pos:end="135:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="137:21" pos:end="137:50"><expr pos:start="137:21" pos:end="137:49"><call pos:start="137:21" pos:end="137:49"><name pos:start="137:21" pos:end="137:33">av_get_packet</name><argument_list pos:start="137:34" pos:end="137:49">(<argument pos:start="137:35" pos:end="137:36"><expr pos:start="137:35" pos:end="137:36"><name pos:start="137:35" pos:end="137:36">pb</name></expr></argument>, <argument pos:start="137:39" pos:end="137:41"><expr pos:start="137:39" pos:end="137:41"><name pos:start="137:39" pos:end="137:41">pkt</name></expr></argument>, <argument pos:start="137:44" pos:end="137:48"><expr pos:start="137:44" pos:end="137:48"><name pos:start="137:44" pos:end="137:46">len</name><operator pos:start="137:47" pos:end="137:47">-</operator><literal type="number" pos:start="137:48" pos:end="137:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="139:21" pos:end="139:35"><expr pos:start="139:21" pos:end="139:34"><name pos:start="139:21" pos:end="139:28"><name pos:start="139:21" pos:end="139:23">pkt</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:28">pos</name></name> <operator pos:start="139:30" pos:end="139:30">=</operator> <name pos:start="139:32" pos:end="139:34">pos</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="141:21" pos:end="141:37"><expr pos:start="141:21" pos:end="141:36"><name pos:start="141:21" pos:end="141:28"><name pos:start="141:21" pos:end="141:23">pkt</name><operator pos:start="141:24" pos:end="141:25">-&gt;</operator><name pos:start="141:26" pos:end="141:28">pts</name></name> <operator pos:start="141:30" pos:end="141:30">=</operator> <name pos:start="141:32" pos:end="141:36">frame</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:50"><expr pos:start="143:21" pos:end="143:49"><name pos:start="143:21" pos:end="143:37"><name pos:start="143:21" pos:end="143:23">pkt</name><operator pos:start="143:24" pos:end="143:25">-&gt;</operator><name pos:start="143:26" pos:end="143:37">stream_index</name></name> <operator pos:start="143:39" pos:end="143:39">=</operator> <name pos:start="143:41" pos:end="143:49"><name pos:start="143:41" pos:end="143:42">st</name><operator pos:start="143:43" pos:end="143:44">-&gt;</operator><name pos:start="143:45" pos:end="143:49">index</name></name></expr>;</expr_stmt>

                    <return pos:start="145:21" pos:end="145:37">return <expr pos:start="145:28" pos:end="145:36"><name pos:start="145:28" pos:end="145:36"><name pos:start="145:28" pos:end="145:30">pkt</name><operator pos:start="145:31" pos:end="145:32">-&gt;</operator><name pos:start="145:33" pos:end="145:36">size</name></name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="151:11" pos:end="181:9">else if <condition pos:start="151:19" pos:end="151:42">(<expr pos:start="151:20" pos:end="151:41"><name pos:start="151:20" pos:end="151:22">tag</name> <operator pos:start="151:24" pos:end="151:25">==</operator> <name pos:start="151:27" pos:end="151:41">TAG_STREAMBLOCK</name></expr>)</condition> <block pos:start="151:44" pos:end="181:9">{<block_content pos:start="153:13" pos:end="179:13">

            <for pos:start="153:13" pos:end="179:13">for <control pos:start="153:17" pos:end="153:47">(<init pos:start="153:18" pos:end="153:23"><expr pos:start="153:18" pos:end="153:22"><name pos:start="153:18" pos:end="153:18">i</name> <operator pos:start="153:20" pos:end="153:20">=</operator> <literal type="number" pos:start="153:22" pos:end="153:22">0</literal></expr>;</init> <condition pos:start="153:25" pos:end="153:42"><expr pos:start="153:25" pos:end="153:41"><name pos:start="153:25" pos:end="153:25">i</name> <operator pos:start="153:27" pos:end="153:27">&lt;</operator> <name pos:start="153:29" pos:end="153:41"><name pos:start="153:29" pos:end="153:29">s</name><operator pos:start="153:30" pos:end="153:31">-&gt;</operator><name pos:start="153:32" pos:end="153:41">nb_streams</name></name></expr>;</condition> <incr pos:start="153:44" pos:end="153:46"><expr pos:start="153:44" pos:end="153:46"><name pos:start="153:44" pos:end="153:44">i</name><operator pos:start="153:45" pos:end="153:46">++</operator></expr></incr>)</control> <block pos:start="153:49" pos:end="179:13">{<block_content pos:start="155:17" pos:end="177:17">

                <expr_stmt pos:start="155:17" pos:end="155:35"><expr pos:start="155:17" pos:end="155:34"><name pos:start="155:17" pos:end="155:18">st</name> <operator pos:start="155:20" pos:end="155:20">=</operator> <name pos:start="155:22" pos:end="155:34"><name pos:start="155:22" pos:end="155:22">s</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:31">streams</name><index pos:start="155:32" pos:end="155:34">[<expr pos:start="155:33" pos:end="155:33"><name pos:start="155:33" pos:end="155:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="157:17" pos:end="177:17"><if pos:start="157:17" pos:end="177:17">if <condition pos:start="157:20" pos:end="157:80">(<expr pos:start="157:21" pos:end="157:79"><name pos:start="157:21" pos:end="157:41"><name pos:start="157:21" pos:end="157:22">st</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:29">codec</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:41">codec_type</name></name> <operator pos:start="157:43" pos:end="157:44">==</operator> <name pos:start="157:46" pos:end="157:63">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="157:65" pos:end="157:66">&amp;&amp;</operator> <name pos:start="157:68" pos:end="157:73"><name pos:start="157:68" pos:end="157:69">st</name><operator pos:start="157:70" pos:end="157:71">-&gt;</operator><name pos:start="157:72" pos:end="157:73">id</name></name> <operator pos:start="157:75" pos:end="157:76">==</operator> <operator pos:start="157:78" pos:end="157:78">-</operator><literal type="number" pos:start="157:79" pos:end="157:79">1</literal></expr>)</condition> <block pos:start="157:82" pos:end="177:17">{<block_content pos:start="159:13" pos:end="175:29">

            <if_stmt pos:start="159:13" pos:end="169:13"><if pos:start="159:13" pos:end="165:13">if <condition pos:start="159:16" pos:end="159:52">(<expr pos:start="159:17" pos:end="159:51"><name pos:start="159:17" pos:end="159:35"><name pos:start="159:17" pos:end="159:18">st</name><operator pos:start="159:19" pos:end="159:20">-&gt;</operator><name pos:start="159:21" pos:end="159:25">codec</name><operator pos:start="159:26" pos:end="159:27">-&gt;</operator><name pos:start="159:28" pos:end="159:35">codec_id</name></name> <operator pos:start="159:37" pos:end="159:38">==</operator> <name pos:start="159:40" pos:end="159:51">CODEC_ID_MP3</name></expr>)</condition> <block pos:start="159:54" pos:end="165:13">{<block_content pos:start="161:17" pos:end="163:46">

                <expr_stmt pos:start="161:17" pos:end="161:33"><expr pos:start="161:17" pos:end="161:32"><call pos:start="161:17" pos:end="161:32"><name pos:start="161:17" pos:end="161:25">avio_skip</name><argument_list pos:start="161:26" pos:end="161:32">(<argument pos:start="161:27" pos:end="161:28"><expr pos:start="161:27" pos:end="161:28"><name pos:start="161:27" pos:end="161:28">pb</name></expr></argument>, <argument pos:start="161:31" pos:end="161:31"><expr pos:start="161:31" pos:end="161:31"><literal type="number" pos:start="161:31" pos:end="161:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:46"><expr pos:start="163:17" pos:end="163:45"><call pos:start="163:17" pos:end="163:45"><name pos:start="163:17" pos:end="163:29">av_get_packet</name><argument_list pos:start="163:30" pos:end="163:45">(<argument pos:start="163:31" pos:end="163:32"><expr pos:start="163:31" pos:end="163:32"><name pos:start="163:31" pos:end="163:32">pb</name></expr></argument>, <argument pos:start="163:35" pos:end="163:37"><expr pos:start="163:35" pos:end="163:37"><name pos:start="163:35" pos:end="163:37">pkt</name></expr></argument>, <argument pos:start="163:40" pos:end="163:44"><expr pos:start="163:40" pos:end="163:44"><name pos:start="163:40" pos:end="163:42">len</name><operator pos:start="163:43" pos:end="163:43">-</operator><literal type="number" pos:start="163:44" pos:end="163:44">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="165:15" pos:end="169:13">else <block pos:start="165:20" pos:end="169:13">{<block_content pos:start="167:17" pos:end="167:44"> <comment type="line" pos:start="165:22" pos:end="165:34">// ADPCM, PCM</comment>

                <expr_stmt pos:start="167:17" pos:end="167:44"><expr pos:start="167:17" pos:end="167:43"><call pos:start="167:17" pos:end="167:43"><name pos:start="167:17" pos:end="167:29">av_get_packet</name><argument_list pos:start="167:30" pos:end="167:43">(<argument pos:start="167:31" pos:end="167:32"><expr pos:start="167:31" pos:end="167:32"><name pos:start="167:31" pos:end="167:32">pb</name></expr></argument>, <argument pos:start="167:35" pos:end="167:37"><expr pos:start="167:35" pos:end="167:37"><name pos:start="167:35" pos:end="167:37">pkt</name></expr></argument>, <argument pos:start="167:40" pos:end="167:42"><expr pos:start="167:40" pos:end="167:42"><name pos:start="167:40" pos:end="167:42">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:27"><expr pos:start="171:13" pos:end="171:26"><name pos:start="171:13" pos:end="171:20"><name pos:start="171:13" pos:end="171:15">pkt</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:20">pos</name></name> <operator pos:start="171:22" pos:end="171:22">=</operator> <name pos:start="171:24" pos:end="171:26">pos</name></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:42"><expr pos:start="173:13" pos:end="173:41"><name pos:start="173:13" pos:end="173:29"><name pos:start="173:13" pos:end="173:15">pkt</name><operator pos:start="173:16" pos:end="173:17">-&gt;</operator><name pos:start="173:18" pos:end="173:29">stream_index</name></name> <operator pos:start="173:31" pos:end="173:31">=</operator> <name pos:start="173:33" pos:end="173:41"><name pos:start="173:33" pos:end="173:34">st</name><operator pos:start="173:35" pos:end="173:36">-&gt;</operator><name pos:start="173:37" pos:end="173:41">index</name></name></expr>;</expr_stmt>

            <return pos:start="175:13" pos:end="175:29">return <expr pos:start="175:20" pos:end="175:28"><name pos:start="175:20" pos:end="175:28"><name pos:start="175:20" pos:end="175:22">pkt</name><operator pos:start="175:23" pos:end="175:24">-&gt;</operator><name pos:start="175:25" pos:end="175:28">size</name></name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="181:11" pos:end="243:9">else if <condition pos:start="181:19" pos:end="181:36">(<expr pos:start="181:20" pos:end="181:35"><name pos:start="181:20" pos:end="181:22">tag</name> <operator pos:start="181:24" pos:end="181:25">==</operator> <name pos:start="181:27" pos:end="181:35">TAG_JPEG2</name></expr>)</condition> <block pos:start="181:38" pos:end="243:9">{<block_content pos:start="183:13" pos:end="241:29">

            <for pos:start="183:13" pos:end="191:13">for <control pos:start="183:17" pos:end="183:43">(<init pos:start="183:18" pos:end="183:21"><expr pos:start="183:18" pos:end="183:20"><name pos:start="183:18" pos:end="183:18">i</name><operator pos:start="183:19" pos:end="183:19">=</operator><literal type="number" pos:start="183:20" pos:end="183:20">0</literal></expr>;</init> <condition pos:start="183:23" pos:end="183:38"><expr pos:start="183:23" pos:end="183:37"><name pos:start="183:23" pos:end="183:23">i</name><operator pos:start="183:24" pos:end="183:24">&lt;</operator><name pos:start="183:25" pos:end="183:37"><name pos:start="183:25" pos:end="183:25">s</name><operator pos:start="183:26" pos:end="183:27">-&gt;</operator><name pos:start="183:28" pos:end="183:37">nb_streams</name></name></expr>;</condition> <incr pos:start="183:40" pos:end="183:42"><expr pos:start="183:40" pos:end="183:42"><name pos:start="183:40" pos:end="183:40">i</name><operator pos:start="183:41" pos:end="183:42">++</operator></expr></incr>)</control> <block pos:start="183:45" pos:end="191:13">{<block_content pos:start="185:17" pos:end="189:26">

                <expr_stmt pos:start="185:17" pos:end="185:35"><expr pos:start="185:17" pos:end="185:34"><name pos:start="185:17" pos:end="185:18">st</name> <operator pos:start="185:20" pos:end="185:20">=</operator> <name pos:start="185:22" pos:end="185:34"><name pos:start="185:22" pos:end="185:22">s</name><operator pos:start="185:23" pos:end="185:24">-&gt;</operator><name pos:start="185:25" pos:end="185:31">streams</name><index pos:start="185:32" pos:end="185:34">[<expr pos:start="185:33" pos:end="185:33"><name pos:start="185:33" pos:end="185:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="187:17" pos:end="189:26"><if pos:start="187:17" pos:end="189:26">if <condition pos:start="187:20" pos:end="187:74">(<expr pos:start="187:21" pos:end="187:73"><name pos:start="187:21" pos:end="187:39"><name pos:start="187:21" pos:end="187:22">st</name><operator pos:start="187:23" pos:end="187:24">-&gt;</operator><name pos:start="187:25" pos:end="187:29">codec</name><operator pos:start="187:30" pos:end="187:31">-&gt;</operator><name pos:start="187:32" pos:end="187:39">codec_id</name></name> <operator pos:start="187:41" pos:end="187:42">==</operator> <name pos:start="187:44" pos:end="187:57">CODEC_ID_MJPEG</name> <operator pos:start="187:59" pos:end="187:60">&amp;&amp;</operator> <name pos:start="187:62" pos:end="187:67"><name pos:start="187:62" pos:end="187:63">st</name><operator pos:start="187:64" pos:end="187:65">-&gt;</operator><name pos:start="187:66" pos:end="187:67">id</name></name> <operator pos:start="187:69" pos:end="187:70">==</operator> <operator pos:start="187:72" pos:end="187:72">-</operator><literal type="number" pos:start="187:73" pos:end="187:73">2</literal></expr>)</condition><block type="pseudo" pos:start="189:21" pos:end="189:26"><block_content pos:start="189:21" pos:end="189:26">

                    <break pos:start="189:21" pos:end="189:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="193:13" pos:end="211:13"><if pos:start="193:13" pos:end="211:13">if <condition pos:start="193:16" pos:end="193:35">(<expr pos:start="193:17" pos:end="193:34"><name pos:start="193:17" pos:end="193:17">i</name> <operator pos:start="193:19" pos:end="193:20">==</operator> <name pos:start="193:22" pos:end="193:34"><name pos:start="193:22" pos:end="193:22">s</name><operator pos:start="193:23" pos:end="193:24">-&gt;</operator><name pos:start="193:25" pos:end="193:34">nb_streams</name></name></expr>)</condition> <block pos:start="193:37" pos:end="211:13">{<block_content pos:start="195:17" pos:end="209:25">

                <expr_stmt pos:start="195:17" pos:end="195:43"><expr pos:start="195:17" pos:end="195:42"><name pos:start="195:17" pos:end="195:19">vst</name> <operator pos:start="195:21" pos:end="195:21">=</operator> <call pos:start="195:23" pos:end="195:42"><name pos:start="195:23" pos:end="195:35">av_new_stream</name><argument_list pos:start="195:36" pos:end="195:42">(<argument pos:start="195:37" pos:end="195:37"><expr pos:start="195:37" pos:end="195:37"><name pos:start="195:37" pos:end="195:37">s</name></expr></argument>, <argument pos:start="195:40" pos:end="195:41"><expr pos:start="195:40" pos:end="195:41"><operator pos:start="195:40" pos:end="195:40">-</operator><literal type="number" pos:start="195:41" pos:end="195:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="195:45" pos:end="195:102">/* -2 to avoid clash with video stream and audio stream */</comment>

                <if_stmt pos:start="197:17" pos:end="199:30"><if pos:start="197:17" pos:end="199:30">if <condition pos:start="197:20" pos:end="197:25">(<expr pos:start="197:21" pos:end="197:24"><operator pos:start="197:21" pos:end="197:21">!</operator><name pos:start="197:22" pos:end="197:24">vst</name></expr>)</condition><block type="pseudo" pos:start="199:21" pos:end="199:30"><block_content pos:start="199:21" pos:end="199:30">

                    <return pos:start="199:21" pos:end="199:30">return <expr pos:start="199:28" pos:end="199:29"><operator pos:start="199:28" pos:end="199:28">-</operator><literal type="number" pos:start="199:29" pos:end="199:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:60"><expr pos:start="201:17" pos:end="201:59"><name pos:start="201:17" pos:end="201:38"><name pos:start="201:17" pos:end="201:19">vst</name><operator pos:start="201:20" pos:end="201:21">-&gt;</operator><name pos:start="201:22" pos:end="201:26">codec</name><operator pos:start="201:27" pos:end="201:28">-&gt;</operator><name pos:start="201:29" pos:end="201:38">codec_type</name></name> <operator pos:start="201:40" pos:end="201:40">=</operator> <name pos:start="201:42" pos:end="201:59">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:54"><expr pos:start="203:17" pos:end="203:53"><name pos:start="203:17" pos:end="203:36"><name pos:start="203:17" pos:end="203:19">vst</name><operator pos:start="203:20" pos:end="203:21">-&gt;</operator><name pos:start="203:22" pos:end="203:26">codec</name><operator pos:start="203:27" pos:end="203:28">-&gt;</operator><name pos:start="203:29" pos:end="203:36">codec_id</name></name> <operator pos:start="203:38" pos:end="203:38">=</operator> <name pos:start="203:40" pos:end="203:53">CODEC_ID_MJPEG</name></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:63"><expr pos:start="205:17" pos:end="205:62"><call pos:start="205:17" pos:end="205:62"><name pos:start="205:17" pos:end="205:31">av_set_pts_info</name><argument_list pos:start="205:32" pos:end="205:62">(<argument pos:start="205:33" pos:end="205:35"><expr pos:start="205:33" pos:end="205:35"><name pos:start="205:33" pos:end="205:35">vst</name></expr></argument>, <argument pos:start="205:38" pos:end="205:39"><expr pos:start="205:38" pos:end="205:39"><literal type="number" pos:start="205:38" pos:end="205:39">64</literal></expr></argument>, <argument pos:start="205:42" pos:end="205:44"><expr pos:start="205:42" pos:end="205:44"><literal type="number" pos:start="205:42" pos:end="205:44">256</literal></expr></argument>, <argument pos:start="205:47" pos:end="205:61"><expr pos:start="205:47" pos:end="205:61"><name pos:start="205:47" pos:end="205:61"><name pos:start="205:47" pos:end="205:49">swf</name><operator pos:start="205:50" pos:end="205:51">-&gt;</operator><name pos:start="205:52" pos:end="205:61">frame_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:77"><expr pos:start="207:17" pos:end="207:76"><name pos:start="207:17" pos:end="207:37"><name pos:start="207:17" pos:end="207:19">vst</name><operator pos:start="207:20" pos:end="207:21">-&gt;</operator><name pos:start="207:22" pos:end="207:26">codec</name><operator pos:start="207:27" pos:end="207:28">-&gt;</operator><name pos:start="207:29" pos:end="207:37">time_base</name></name> <operator pos:start="207:39" pos:end="207:39">=</operator> <operator pos:start="207:41" pos:end="207:41">(</operator><name pos:start="207:42" pos:end="207:51">AVRational</name><operator pos:start="207:52" pos:end="207:52">)</operator><block pos:start="207:53" pos:end="207:76">{ <expr pos:start="207:55" pos:end="207:57"><literal type="number" pos:start="207:55" pos:end="207:57">256</literal></expr>, <expr pos:start="207:60" pos:end="207:74"><name pos:start="207:60" pos:end="207:74"><name pos:start="207:60" pos:end="207:62">swf</name><operator pos:start="207:63" pos:end="207:64">-&gt;</operator><name pos:start="207:65" pos:end="207:74">frame_rate</name></name></expr> }</block></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:25"><expr pos:start="209:17" pos:end="209:24"><name pos:start="209:17" pos:end="209:18">st</name> <operator pos:start="209:20" pos:end="209:20">=</operator> <name pos:start="209:22" pos:end="209:24">vst</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:26"><expr pos:start="213:13" pos:end="213:25"><call pos:start="213:13" pos:end="213:25"><name pos:start="213:13" pos:end="213:21">avio_rl16</name><argument_list pos:start="213:22" pos:end="213:25">(<argument pos:start="213:23" pos:end="213:24"><expr pos:start="213:23" pos:end="213:24"><name pos:start="213:23" pos:end="213:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="213:28" pos:end="213:42">/* BITMAP_ID */</comment>

            <expr_stmt pos:start="215:13" pos:end="215:38"><expr pos:start="215:13" pos:end="215:37"><call pos:start="215:13" pos:end="215:37"><name pos:start="215:13" pos:end="215:25">av_new_packet</name><argument_list pos:start="215:26" pos:end="215:37">(<argument pos:start="215:27" pos:end="215:29"><expr pos:start="215:27" pos:end="215:29"><name pos:start="215:27" pos:end="215:29">pkt</name></expr></argument>, <argument pos:start="215:32" pos:end="215:36"><expr pos:start="215:32" pos:end="215:36"><name pos:start="215:32" pos:end="215:34">len</name><operator pos:start="215:35" pos:end="215:35">-</operator><literal type="number" pos:start="215:36" pos:end="215:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:40"><expr pos:start="217:13" pos:end="217:39"><call pos:start="217:13" pos:end="217:39"><name pos:start="217:13" pos:end="217:21">avio_read</name><argument_list pos:start="217:22" pos:end="217:39">(<argument pos:start="217:23" pos:end="217:24"><expr pos:start="217:23" pos:end="217:24"><name pos:start="217:23" pos:end="217:24">pb</name></expr></argument>, <argument pos:start="217:27" pos:end="217:35"><expr pos:start="217:27" pos:end="217:35"><name pos:start="217:27" pos:end="217:35"><name pos:start="217:27" pos:end="217:29">pkt</name><operator pos:start="217:30" pos:end="217:31">-&gt;</operator><name pos:start="217:32" pos:end="217:35">data</name></name></expr></argument>, <argument pos:start="217:38" pos:end="217:38"><expr pos:start="217:38" pos:end="217:38"><literal type="number" pos:start="217:38" pos:end="217:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="219:13" pos:end="235:13"><if pos:start="219:13" pos:end="231:13">if <condition pos:start="219:16" pos:end="221:49">(<expr pos:start="219:17" pos:end="221:48"><call pos:start="219:17" pos:end="219:34"><name pos:start="219:17" pos:end="219:23">AV_RB32</name><argument_list pos:start="219:24" pos:end="219:34">(<argument pos:start="219:25" pos:end="219:33"><expr pos:start="219:25" pos:end="219:33"><name pos:start="219:25" pos:end="219:33"><name pos:start="219:25" pos:end="219:27">pkt</name><operator pos:start="219:28" pos:end="219:29">-&gt;</operator><name pos:start="219:30" pos:end="219:33">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="219:36" pos:end="219:37">==</operator> <literal type="number" pos:start="219:39" pos:end="219:48">0xffd8ffd9</literal> <operator pos:start="219:50" pos:end="219:51">||</operator>

                <call pos:start="221:17" pos:end="221:34"><name pos:start="221:17" pos:end="221:23">AV_RB32</name><argument_list pos:start="221:24" pos:end="221:34">(<argument pos:start="221:25" pos:end="221:33"><expr pos:start="221:25" pos:end="221:33"><name pos:start="221:25" pos:end="221:33"><name pos:start="221:25" pos:end="221:27">pkt</name><operator pos:start="221:28" pos:end="221:29">-&gt;</operator><name pos:start="221:30" pos:end="221:33">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="221:36" pos:end="221:37">==</operator> <literal type="number" pos:start="221:39" pos:end="221:48">0xffd9ffd8</literal></expr>)</condition> <block pos:start="221:51" pos:end="231:13">{<block_content pos:start="227:17" pos:end="229:52">

                <comment type="block" pos:start="223:17" pos:end="223:68">/* old SWF files containing SOI/EOI as data start */</comment>

                <comment type="block" pos:start="225:17" pos:end="225:62">/* files created by swink have reversed tag */</comment>

                <expr_stmt pos:start="227:17" pos:end="227:31"><expr pos:start="227:17" pos:end="227:30"><name pos:start="227:17" pos:end="227:25"><name pos:start="227:17" pos:end="227:19">pkt</name><operator pos:start="227:20" pos:end="227:21">-&gt;</operator><name pos:start="227:22" pos:end="227:25">size</name></name> <operator pos:start="227:27" pos:end="227:28">-=</operator> <literal type="number" pos:start="227:30" pos:end="227:30">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="229:17" pos:end="229:52"><expr pos:start="229:17" pos:end="229:51"><call pos:start="229:17" pos:end="229:51"><name pos:start="229:17" pos:end="229:25">avio_read</name><argument_list pos:start="229:26" pos:end="229:51">(<argument pos:start="229:27" pos:end="229:28"><expr pos:start="229:27" pos:end="229:28"><name pos:start="229:27" pos:end="229:28">pb</name></expr></argument>, <argument pos:start="229:31" pos:end="229:39"><expr pos:start="229:31" pos:end="229:39"><name pos:start="229:31" pos:end="229:39"><name pos:start="229:31" pos:end="229:33">pkt</name><operator pos:start="229:34" pos:end="229:35">-&gt;</operator><name pos:start="229:36" pos:end="229:39">data</name></name></expr></argument>, <argument pos:start="229:42" pos:end="229:50"><expr pos:start="229:42" pos:end="229:50"><name pos:start="229:42" pos:end="229:50"><name pos:start="229:42" pos:end="229:44">pkt</name><operator pos:start="229:45" pos:end="229:46">-&gt;</operator><name pos:start="229:47" pos:end="229:50">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="231:15" pos:end="235:13">else <block pos:start="231:20" pos:end="235:13">{<block_content pos:start="233:17" pos:end="233:60">

                <expr_stmt pos:start="233:17" pos:end="233:60"><expr pos:start="233:17" pos:end="233:59"><call pos:start="233:17" pos:end="233:59"><name pos:start="233:17" pos:end="233:25">avio_read</name><argument_list pos:start="233:26" pos:end="233:59">(<argument pos:start="233:27" pos:end="233:28"><expr pos:start="233:27" pos:end="233:28"><name pos:start="233:27" pos:end="233:28">pb</name></expr></argument>, <argument pos:start="233:31" pos:end="233:43"><expr pos:start="233:31" pos:end="233:43"><name pos:start="233:31" pos:end="233:39"><name pos:start="233:31" pos:end="233:33">pkt</name><operator pos:start="233:34" pos:end="233:35">-&gt;</operator><name pos:start="233:36" pos:end="233:39">data</name></name> <operator pos:start="233:41" pos:end="233:41">+</operator> <literal type="number" pos:start="233:43" pos:end="233:43">4</literal></expr></argument>, <argument pos:start="233:46" pos:end="233:58"><expr pos:start="233:46" pos:end="233:58"><name pos:start="233:46" pos:end="233:54"><name pos:start="233:46" pos:end="233:48">pkt</name><operator pos:start="233:49" pos:end="233:50">-&gt;</operator><name pos:start="233:51" pos:end="233:54">size</name></name> <operator pos:start="233:56" pos:end="233:56">-</operator> <literal type="number" pos:start="233:58" pos:end="233:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:27"><expr pos:start="237:13" pos:end="237:26"><name pos:start="237:13" pos:end="237:20"><name pos:start="237:13" pos:end="237:15">pkt</name><operator pos:start="237:16" pos:end="237:17">-&gt;</operator><name pos:start="237:18" pos:end="237:20">pos</name></name> <operator pos:start="237:22" pos:end="237:22">=</operator> <name pos:start="237:24" pos:end="237:26">pos</name></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:42"><expr pos:start="239:13" pos:end="239:41"><name pos:start="239:13" pos:end="239:29"><name pos:start="239:13" pos:end="239:15">pkt</name><operator pos:start="239:16" pos:end="239:17">-&gt;</operator><name pos:start="239:18" pos:end="239:29">stream_index</name></name> <operator pos:start="239:31" pos:end="239:31">=</operator> <name pos:start="239:33" pos:end="239:41"><name pos:start="239:33" pos:end="239:34">st</name><operator pos:start="239:35" pos:end="239:36">-&gt;</operator><name pos:start="239:37" pos:end="239:41">index</name></name></expr>;</expr_stmt>

            <return pos:start="241:13" pos:end="241:29">return <expr pos:start="241:20" pos:end="241:28"><name pos:start="241:20" pos:end="241:28"><name pos:start="241:20" pos:end="241:22">pkt</name><operator pos:start="241:23" pos:end="241:24">-&gt;</operator><name pos:start="241:25" pos:end="241:28">size</name></name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    <label pos:start="245:5" pos:end="245:9"><name pos:start="245:5" pos:end="245:8">skip</name>:</label>

        <expr_stmt pos:start="247:9" pos:end="247:27"><expr pos:start="247:9" pos:end="247:26"><call pos:start="247:9" pos:end="247:26"><name pos:start="247:9" pos:end="247:17">avio_skip</name><argument_list pos:start="247:18" pos:end="247:26">(<argument pos:start="247:19" pos:end="247:20"><expr pos:start="247:19" pos:end="247:20"><name pos:start="247:19" pos:end="247:20">pb</name></expr></argument>, <argument pos:start="247:23" pos:end="247:25"><expr pos:start="247:23" pos:end="247:25"><name pos:start="247:23" pos:end="247:25">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="251:5" pos:end="251:13">return <expr pos:start="251:12" pos:end="251:12"><literal type="number" pos:start="251:12" pos:end="251:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
