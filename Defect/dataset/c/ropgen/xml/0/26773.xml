<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26773.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">read_packet</name><parameter_list pos:start="1:23" pos:end="3:41">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:40"><decl pos:start="3:28" pos:end="3:40"><type pos:start="3:28" pos:end="3:40"><name pos:start="3:28" pos:end="3:35">AVPacket</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:5">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MmDemuxContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:22">mm</name> <init pos:start="7:24" pos:end="7:37">= <expr pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">char</name></type> <name pos:start="11:19" pos:end="11:44"><name pos:start="11:19" pos:end="11:26">preamble</name><index pos:start="11:27" pos:end="11:44">[<expr pos:start="11:28" pos:end="11:43"><name pos:start="11:28" pos:end="11:43">MM_PREAMBLE_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:21">type</name></decl>, <decl pos:start="13:24" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:24" pos:end="13:29">length</name></decl>;</decl_stmt>



    <while pos:start="17:5" pos:end="101:5">while<condition pos:start="17:10" pos:end="17:12">(<expr pos:start="17:11" pos:end="17:11"><literal type="number" pos:start="17:11" pos:end="17:11">1</literal></expr>)</condition> <block pos:start="17:14" pos:end="101:5">{<block_content pos:start="21:9" pos:end="99:9">



        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:74">(<expr pos:start="21:13" pos:end="21:73"><call pos:start="21:13" pos:end="21:53"><name pos:start="21:13" pos:end="21:21">avio_read</name><argument_list pos:start="21:22" pos:end="21:53">(<argument pos:start="21:23" pos:end="21:24"><expr pos:start="21:23" pos:end="21:24"><name pos:start="21:23" pos:end="21:24">pb</name></expr></argument>, <argument pos:start="21:27" pos:end="21:34"><expr pos:start="21:27" pos:end="21:34"><name pos:start="21:27" pos:end="21:34">preamble</name></expr></argument>, <argument pos:start="21:37" pos:end="21:52"><expr pos:start="21:37" pos:end="21:52"><name pos:start="21:37" pos:end="21:52">MM_PREAMBLE_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="21:55" pos:end="21:56">!=</operator> <name pos:start="21:58" pos:end="21:73">MM_PREAMBLE_SIZE</name></expr>)</condition> <block pos:start="21:76" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:32">

            <return pos:start="23:13" pos:end="23:32">return <expr pos:start="23:20" pos:end="23:31"><call pos:start="23:20" pos:end="23:31"><name pos:start="23:20" pos:end="23:26">AVERROR</name><argument_list pos:start="23:27" pos:end="23:31">(<argument pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:37"><expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:12">type</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:36"><name pos:start="29:16" pos:end="29:22">AV_RL16</name><argument_list pos:start="29:23" pos:end="29:36">(<argument pos:start="29:24" pos:end="29:35"><expr pos:start="29:24" pos:end="29:35"><operator pos:start="29:24" pos:end="29:24">&amp;</operator><name pos:start="29:25" pos:end="29:35"><name pos:start="29:25" pos:end="29:32">preamble</name><index pos:start="29:33" pos:end="29:35">[<expr pos:start="29:34" pos:end="29:34"><literal type="number" pos:start="29:34" pos:end="29:34">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:39"><expr pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:14">length</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <call pos:start="31:18" pos:end="31:38"><name pos:start="31:18" pos:end="31:24">AV_RL16</name><argument_list pos:start="31:25" pos:end="31:38">(<argument pos:start="31:26" pos:end="31:37"><expr pos:start="31:26" pos:end="31:37"><operator pos:start="31:26" pos:end="31:26">&amp;</operator><name pos:start="31:27" pos:end="31:37"><name pos:start="31:27" pos:end="31:34">preamble</name><index pos:start="31:35" pos:end="31:37">[<expr pos:start="31:36" pos:end="31:36"><literal type="number" pos:start="31:36" pos:end="31:36">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="35:9" pos:end="99:9">switch<condition pos:start="35:15" pos:end="35:20">(<expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">type</name></expr>)</condition> <block pos:start="35:22" pos:end="99:9">{<block_content pos:start="37:9" pos:end="97:34">

        <case pos:start="37:9" pos:end="37:30">case <expr pos:start="37:14" pos:end="37:28"><name pos:start="37:14" pos:end="37:28">MM_TYPE_PALETTE</name></expr> :</case>

        <case pos:start="39:9" pos:end="39:28">case <expr pos:start="39:14" pos:end="39:26"><name pos:start="39:14" pos:end="39:26">MM_TYPE_INTER</name></expr> :</case>

        <case pos:start="41:9" pos:end="41:28">case <expr pos:start="41:14" pos:end="41:26"><name pos:start="41:14" pos:end="41:26">MM_TYPE_INTRA</name></expr> :</case>

        <case pos:start="43:9" pos:end="43:31">case <expr pos:start="43:14" pos:end="43:29"><name pos:start="43:14" pos:end="43:29">MM_TYPE_INTRA_HH</name></expr> :</case>

        <case pos:start="45:9" pos:end="45:31">case <expr pos:start="45:14" pos:end="45:29"><name pos:start="45:14" pos:end="45:29">MM_TYPE_INTER_HH</name></expr> :</case>

        <case pos:start="47:9" pos:end="47:32">case <expr pos:start="47:14" pos:end="47:30"><name pos:start="47:14" pos:end="47:30">MM_TYPE_INTRA_HHV</name></expr> :</case>

        <case pos:start="49:9" pos:end="49:32">case <expr pos:start="49:14" pos:end="49:30"><name pos:start="49:14" pos:end="49:30">MM_TYPE_INTER_HHV</name></expr> :</case>

            <comment type="block" pos:start="51:13" pos:end="51:40">/* output preamble + data */</comment>

            <if_stmt pos:start="53:13" pos:end="55:39"><if pos:start="53:13" pos:end="55:39">if <condition pos:start="53:16" pos:end="53:62">(<expr pos:start="53:17" pos:end="53:61"><call pos:start="53:17" pos:end="53:61"><name pos:start="53:17" pos:end="53:29">av_new_packet</name><argument_list pos:start="53:30" pos:end="53:61">(<argument pos:start="53:31" pos:end="53:33"><expr pos:start="53:31" pos:end="53:33"><name pos:start="53:31" pos:end="53:33">pkt</name></expr></argument>, <argument pos:start="53:36" pos:end="53:60"><expr pos:start="53:36" pos:end="53:60"><name pos:start="53:36" pos:end="53:41">length</name> <operator pos:start="53:43" pos:end="53:43">+</operator> <name pos:start="53:45" pos:end="53:60">MM_PREAMBLE_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:39"><block_content pos:start="55:17" pos:end="55:39">

                <return pos:start="55:17" pos:end="55:39">return <expr pos:start="55:24" pos:end="55:38"><call pos:start="55:24" pos:end="55:38"><name pos:start="55:24" pos:end="55:30">AVERROR</name><argument_list pos:start="55:31" pos:end="55:38">(<argument pos:start="55:32" pos:end="55:37"><expr pos:start="55:32" pos:end="55:37"><name pos:start="55:32" pos:end="55:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:58"><expr pos:start="57:13" pos:end="57:57"><call pos:start="57:13" pos:end="57:57"><name pos:start="57:13" pos:end="57:18">memcpy</name><argument_list pos:start="57:19" pos:end="57:57">(<argument pos:start="57:20" pos:end="57:28"><expr pos:start="57:20" pos:end="57:28"><name pos:start="57:20" pos:end="57:28"><name pos:start="57:20" pos:end="57:22">pkt</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:28">data</name></name></expr></argument>, <argument pos:start="57:31" pos:end="57:38"><expr pos:start="57:31" pos:end="57:38"><name pos:start="57:31" pos:end="57:38">preamble</name></expr></argument>, <argument pos:start="57:41" pos:end="57:56"><expr pos:start="57:41" pos:end="57:56"><name pos:start="57:41" pos:end="57:56">MM_PREAMBLE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="61:36"><if pos:start="59:13" pos:end="61:36">if <condition pos:start="59:16" pos:end="59:78">(<expr pos:start="59:17" pos:end="59:77"><call pos:start="59:17" pos:end="59:67"><name pos:start="59:17" pos:end="59:25">avio_read</name><argument_list pos:start="59:26" pos:end="59:67">(<argument pos:start="59:27" pos:end="59:28"><expr pos:start="59:27" pos:end="59:28"><name pos:start="59:27" pos:end="59:28">pb</name></expr></argument>, <argument pos:start="59:31" pos:end="59:58"><expr pos:start="59:31" pos:end="59:58"><name pos:start="59:31" pos:end="59:39"><name pos:start="59:31" pos:end="59:33">pkt</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:39">data</name></name> <operator pos:start="59:41" pos:end="59:41">+</operator> <name pos:start="59:43" pos:end="59:58">MM_PREAMBLE_SIZE</name></expr></argument>, <argument pos:start="59:61" pos:end="59:66"><expr pos:start="59:61" pos:end="59:66"><name pos:start="59:61" pos:end="59:66">length</name></expr></argument>)</argument_list></call> <operator pos:start="59:69" pos:end="59:70">!=</operator> <name pos:start="59:72" pos:end="59:77">length</name></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:36"><block_content pos:start="61:17" pos:end="61:36">

                <return pos:start="61:17" pos:end="61:36">return <expr pos:start="61:24" pos:end="61:35"><call pos:start="61:24" pos:end="61:35"><name pos:start="61:24" pos:end="61:30">AVERROR</name><argument_list pos:start="61:31" pos:end="61:35">(<argument pos:start="61:32" pos:end="61:34"><expr pos:start="61:32" pos:end="61:34"><name pos:start="61:32" pos:end="61:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:50"><expr pos:start="63:13" pos:end="63:49"><name pos:start="63:13" pos:end="63:21"><name pos:start="63:13" pos:end="63:15">pkt</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:21">size</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <name pos:start="63:25" pos:end="63:30">length</name> <operator pos:start="63:32" pos:end="63:32">+</operator> <name pos:start="63:34" pos:end="63:49">MM_PREAMBLE_SIZE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:34"><expr pos:start="65:13" pos:end="65:33"><name pos:start="65:13" pos:end="65:29"><name pos:start="65:13" pos:end="65:15">pkt</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:29">stream_index</name></name> <operator pos:start="65:31" pos:end="65:31">=</operator> <literal type="number" pos:start="65:33" pos:end="65:33">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:37"><expr pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:15">pkt</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:20">pts</name></name> <operator pos:start="67:22" pos:end="67:22">=</operator> <name pos:start="67:24" pos:end="67:36"><name pos:start="67:24" pos:end="67:25">mm</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:36">video_pts</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="69:13" pos:end="71:32"><if pos:start="69:13" pos:end="71:32">if <condition pos:start="69:16" pos:end="69:38">(<expr pos:start="69:17" pos:end="69:37"><name pos:start="69:17" pos:end="69:20">type</name><operator pos:start="69:21" pos:end="69:22">!=</operator><name pos:start="69:23" pos:end="69:37">MM_TYPE_PALETTE</name></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:32"><block_content pos:start="71:17" pos:end="71:32">

                <expr_stmt pos:start="71:17" pos:end="71:32"><expr pos:start="71:17" pos:end="71:31"><name pos:start="71:17" pos:end="71:29"><name pos:start="71:17" pos:end="71:18">mm</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:29">video_pts</name></name><operator pos:start="71:30" pos:end="71:31">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="73:13" pos:end="73:21">return <expr pos:start="73:20" pos:end="73:20"><literal type="number" pos:start="73:20" pos:end="73:20">0</literal></expr>;</return>



        <case pos:start="77:9" pos:end="77:28">case <expr pos:start="77:14" pos:end="77:26"><name pos:start="77:14" pos:end="77:26">MM_TYPE_AUDIO</name></expr> :</case>

            <if_stmt pos:start="79:13" pos:end="81:39"><if pos:start="79:13" pos:end="81:39">if <condition pos:start="79:16" pos:end="79:52">(<expr pos:start="79:17" pos:end="79:51"><call pos:start="79:17" pos:end="79:49"><name pos:start="79:17" pos:end="79:29">av_get_packet</name><argument_list pos:start="79:30" pos:end="79:49">(<argument pos:start="79:31" pos:end="79:35"><expr pos:start="79:31" pos:end="79:35"><name pos:start="79:31" pos:end="79:35"><name pos:start="79:31" pos:end="79:31">s</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:35">pb</name></name></expr></argument>, <argument pos:start="79:38" pos:end="79:40"><expr pos:start="79:38" pos:end="79:40"><name pos:start="79:38" pos:end="79:40">pkt</name></expr></argument>, <argument pos:start="79:43" pos:end="79:48"><expr pos:start="79:43" pos:end="79:48"><name pos:start="79:43" pos:end="79:48">length</name></expr></argument>)</argument_list></call><operator pos:start="79:50" pos:end="79:50">&lt;</operator><literal type="number" pos:start="79:51" pos:end="79:51">0</literal></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:39"><block_content pos:start="81:17" pos:end="81:39">

                <return pos:start="81:17" pos:end="81:39">return <expr pos:start="81:24" pos:end="81:38"><call pos:start="81:24" pos:end="81:38"><name pos:start="81:24" pos:end="81:30">AVERROR</name><argument_list pos:start="81:31" pos:end="81:38">(<argument pos:start="81:32" pos:end="81:37"><expr pos:start="81:32" pos:end="81:37"><name pos:start="81:32" pos:end="81:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:31"><expr pos:start="83:13" pos:end="83:30"><name pos:start="83:13" pos:end="83:21"><name pos:start="83:13" pos:end="83:15">pkt</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:21">size</name></name> <operator pos:start="83:23" pos:end="83:23">=</operator> <name pos:start="83:25" pos:end="83:30">length</name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:34"><expr pos:start="85:13" pos:end="85:33"><name pos:start="85:13" pos:end="85:29"><name pos:start="85:13" pos:end="85:15">pkt</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:29">stream_index</name></name> <operator pos:start="85:31" pos:end="85:31">=</operator> <literal type="number" pos:start="85:33" pos:end="85:33">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:39"><expr pos:start="87:13" pos:end="87:38"><name pos:start="87:13" pos:end="87:20"><name pos:start="87:13" pos:end="87:15">pkt</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:20">pts</name></name> <operator pos:start="87:22" pos:end="87:22">=</operator> <name pos:start="87:24" pos:end="87:36"><name pos:start="87:24" pos:end="87:25">mm</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:36">audio_pts</name></name><operator pos:start="87:37" pos:end="87:38">++</operator></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:21">return <expr pos:start="89:20" pos:end="89:20"><literal type="number" pos:start="89:20" pos:end="89:20">0</literal></expr>;</return>



        <default pos:start="93:9" pos:end="93:17">default :</default>

            <expr_stmt pos:start="95:13" pos:end="95:70"><expr pos:start="95:13" pos:end="95:69"><call pos:start="95:13" pos:end="95:69"><name pos:start="95:13" pos:end="95:18">av_log</name><argument_list pos:start="95:19" pos:end="95:69">(<argument pos:start="95:20" pos:end="95:20"><expr pos:start="95:20" pos:end="95:20"><name pos:start="95:20" pos:end="95:20">s</name></expr></argument>, <argument pos:start="95:23" pos:end="95:33"><expr pos:start="95:23" pos:end="95:33"><name pos:start="95:23" pos:end="95:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="95:36" pos:end="95:62"><expr pos:start="95:36" pos:end="95:62"><literal type="string" pos:start="95:36" pos:end="95:62">"unknown chunk type 0x%x\n"</literal></expr></argument>, <argument pos:start="95:65" pos:end="95:68"><expr pos:start="95:65" pos:end="95:68"><name pos:start="95:65" pos:end="95:68">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:34"><expr pos:start="97:13" pos:end="97:33"><call pos:start="97:13" pos:end="97:33"><name pos:start="97:13" pos:end="97:21">avio_skip</name><argument_list pos:start="97:22" pos:end="97:33">(<argument pos:start="97:23" pos:end="97:24"><expr pos:start="97:23" pos:end="97:24"><name pos:start="97:23" pos:end="97:24">pb</name></expr></argument>, <argument pos:start="97:27" pos:end="97:32"><expr pos:start="97:27" pos:end="97:32"><name pos:start="97:27" pos:end="97:32">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
