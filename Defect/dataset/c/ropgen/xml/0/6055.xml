<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6055.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">nvenc_setup_rate_control</name><parameter_list pos:start="1:37" pos:end="1:59">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:51">AVCodecContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="148:0">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">NVENCContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ctx</name>    <init pos:start="5:26" pos:end="5:43">= <expr pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:32">avctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">NV_ENC_RC_PARAMS</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">rc</name> <init pos:start="7:26" pos:end="7:48">= <expr pos:start="7:28" pos:end="7:48"><operator pos:start="7:28" pos:end="7:28">&amp;</operator><name pos:start="7:29" pos:end="7:48"><name pos:start="7:29" pos:end="7:31">ctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:39">config</name><operator pos:start="7:40" pos:end="7:40">.</operator><name pos:start="7:41" pos:end="7:48">rcParams</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:45"><if pos:start="11:5" pos:end="13:45">if <condition pos:start="11:8" pos:end="11:28">(<expr pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:13">avctx</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:23">bit_rate</name></name> <operator pos:start="11:25" pos:end="11:25">&gt;</operator> <literal type="number" pos:start="11:27" pos:end="11:27">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:45"><block_content pos:start="13:9" pos:end="13:45">

        <expr_stmt pos:start="13:9" pos:end="13:45"><expr pos:start="13:9" pos:end="13:44"><name pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:10">rc</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:26">averageBitRate</name></name> <operator pos:start="13:28" pos:end="13:28">=</operator> <name pos:start="13:30" pos:end="13:44"><name pos:start="13:30" pos:end="13:34">avctx</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:44">bit_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="19:44"><if pos:start="17:5" pos:end="19:44">if <condition pos:start="17:8" pos:end="17:31">(<expr pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:13">avctx</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:26">rc_max_rate</name></name> <operator pos:start="17:28" pos:end="17:28">&gt;</operator> <literal type="number" pos:start="17:30" pos:end="17:30">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:44"><block_content pos:start="19:9" pos:end="19:44">

        <expr_stmt pos:start="19:9" pos:end="19:44"><expr pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:10">rc</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:22">maxBitRate</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <name pos:start="19:26" pos:end="19:43"><name pos:start="19:26" pos:end="19:30">avctx</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:43">rc_max_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="41:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">ctx</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:15">rc</name></name> <operator pos:start="23:17" pos:end="23:17">&gt;</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>)</condition> <block pos:start="23:22" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:47">

        <expr_stmt pos:start="25:9" pos:end="25:47"><expr pos:start="25:9" pos:end="25:46"><call pos:start="25:9" pos:end="25:46"><name pos:start="25:9" pos:end="25:35">nvenc_override_rate_control</name><argument_list pos:start="25:36" pos:end="25:46">(<argument pos:start="25:37" pos:end="25:41"><expr pos:start="25:37" pos:end="25:41"><name pos:start="25:37" pos:end="25:41">avctx</name></expr></argument>, <argument pos:start="25:44" pos:end="25:45"><expr pos:start="25:44" pos:end="25:45"><name pos:start="25:44" pos:end="25:45">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="27:7" pos:end="31:5">else if <condition pos:start="27:15" pos:end="27:43">(<expr pos:start="27:16" pos:end="27:42"><name pos:start="27:16" pos:end="27:25"><name pos:start="27:16" pos:end="27:18">ctx</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:25">flags</name></name> <operator pos:start="27:27" pos:end="27:27">&amp;</operator> <name pos:start="27:29" pos:end="27:42">NVENC_LOSSLESS</name></expr>)</condition> <block pos:start="27:45" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:32">

        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><call pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:20">set_lossless</name><argument_list pos:start="29:21" pos:end="29:31">(<argument pos:start="29:22" pos:end="29:26"><expr pos:start="29:22" pos:end="29:26"><name pos:start="29:22" pos:end="29:26">avctx</name></expr></argument>, <argument pos:start="29:29" pos:end="29:30"><expr pos:start="29:29" pos:end="29:30"><name pos:start="29:29" pos:end="29:30">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="31:7" pos:end="35:5">else if <condition pos:start="31:15" pos:end="31:41">(<expr pos:start="31:16" pos:end="31:40"><name pos:start="31:16" pos:end="31:36"><name pos:start="31:16" pos:end="31:20">avctx</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:36">global_quality</name></name> <operator pos:start="31:38" pos:end="31:38">&gt;</operator> <literal type="number" pos:start="31:40" pos:end="31:40">0</literal></expr>)</condition> <block pos:start="31:43" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:31">

        <expr_stmt pos:start="33:9" pos:end="33:31"><expr pos:start="33:9" pos:end="33:30"><call pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:19">set_constqp</name><argument_list pos:start="33:20" pos:end="33:30">(<argument pos:start="33:21" pos:end="33:25"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:25">avctx</name></expr></argument>, <argument pos:start="33:28" pos:end="33:29"><expr pos:start="33:28" pos:end="33:29"><name pos:start="33:28" pos:end="33:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="41:5">else if <condition pos:start="35:15" pos:end="35:52">(<expr pos:start="35:16" pos:end="35:51"><name pos:start="35:16" pos:end="35:26"><name pos:start="35:16" pos:end="35:20">avctx</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:26">qmin</name></name> <operator pos:start="35:28" pos:end="35:29">&gt;=</operator> <literal type="number" pos:start="35:31" pos:end="35:31">0</literal> <operator pos:start="35:33" pos:end="35:34">&amp;&amp;</operator> <name pos:start="35:36" pos:end="35:46"><name pos:start="35:36" pos:end="35:40">avctx</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:46">qmax</name></name> <operator pos:start="35:48" pos:end="35:49">&gt;=</operator> <literal type="number" pos:start="35:51" pos:end="35:51">0</literal></expr>)</condition> <block pos:start="35:54" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:27">

        <expr_stmt pos:start="37:9" pos:end="37:51"><expr pos:start="37:9" pos:end="37:50"><name pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:10">rc</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:27">rateControlMode</name></name> <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:50">NV_ENC_PARAMS_RC_VBR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:27"><expr pos:start="39:9" pos:end="39:26"><call pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:15">set_vbr</name><argument_list pos:start="39:16" pos:end="39:26">(<argument pos:start="39:17" pos:end="39:21"><expr pos:start="39:17" pos:end="39:21"><name pos:start="39:17" pos:end="39:21">avctx</name></expr></argument>, <argument pos:start="39:24" pos:end="39:25"><expr pos:start="39:24" pos:end="39:25"><name pos:start="39:24" pos:end="39:25">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="47:50"><if pos:start="45:5" pos:end="47:50">if <condition pos:start="45:8" pos:end="45:34">(<expr pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:13">avctx</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:29">rc_buffer_size</name></name> <operator pos:start="45:31" pos:end="45:31">&gt;</operator> <literal type="number" pos:start="45:33" pos:end="45:33">0</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:50"><block_content pos:start="47:9" pos:end="47:50">

        <expr_stmt pos:start="47:9" pos:end="47:50"><expr pos:start="47:9" pos:end="47:49"><name pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:10">rc</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:25">vbvBufferSize</name></name> <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:49"><name pos:start="47:29" pos:end="47:33">avctx</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:49">rc_buffer_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="58:0"><if pos:start="51:5" pos:end="58:0">if <condition pos:start="51:8" pos:end="51:31">(<expr pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:10">rc</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:26">averageBitRate</name></name> <operator pos:start="51:28" pos:end="51:28">&gt;</operator> <literal type="number" pos:start="51:30" pos:end="51:30">0</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="58:0"><block_content pos:start="53:9" pos:end="58:0">

        <expr_stmt pos:start="53:9" pos:end="58:0"><expr pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:13">avctx</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:23">bit_rate</name></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:44"><name pos:start="53:27" pos:end="53:28">rc</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:44">averageBitRate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:if pos:start="57:1" pos:end="57:31">#<cpp:directive pos:start="57:2" pos:end="57:3">if</cpp:directive> <expr pos:start="57:5" pos:end="57:31"><name pos:start="57:5" pos:end="57:26">NVENCAPI_MAJOR_VERSION</name> <operator pos:start="57:28" pos:end="57:29">&gt;=</operator> <literal type="number" pos:start="57:31" pos:end="57:31">7</literal></expr></cpp:if>

    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:16">(<expr pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:11">ctx</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:15">aq</name></name></expr>)</condition> <block pos:start="59:18" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:55">

        <expr_stmt pos:start="61:9" pos:end="61:44"><expr pos:start="61:9" pos:end="61:43"><name pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:11">ctx</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:19">config</name><operator pos:start="61:20" pos:end="61:20">.</operator><name pos:start="61:21" pos:end="61:28">rcParams</name><operator pos:start="61:29" pos:end="61:29">.</operator><name pos:start="61:30" pos:end="61:37">enableAQ</name></name>   <operator pos:start="61:41" pos:end="61:41">=</operator> <literal type="number" pos:start="61:43" pos:end="61:43">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:59"><expr pos:start="63:9" pos:end="63:58"><name pos:start="63:9" pos:end="63:39"><name pos:start="63:9" pos:end="63:11">ctx</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:19">config</name><operator pos:start="63:20" pos:end="63:20">.</operator><name pos:start="63:21" pos:end="63:28">rcParams</name><operator pos:start="63:29" pos:end="63:29">.</operator><name pos:start="63:30" pos:end="63:39">aqStrength</name></name> <operator pos:start="63:41" pos:end="63:41">=</operator> <name pos:start="63:43" pos:end="63:58"><name pos:start="63:43" pos:end="63:45">ctx</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:58">aq_strength</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:55"><expr pos:start="65:9" pos:end="65:54"><call pos:start="65:9" pos:end="65:54"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="65:54">(<argument pos:start="65:16" pos:end="65:20"><expr pos:start="65:16" pos:end="65:20"><name pos:start="65:16" pos:end="65:20">avctx</name></expr></argument>, <argument pos:start="65:23" pos:end="65:36"><expr pos:start="65:23" pos:end="65:36"><name pos:start="65:23" pos:end="65:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="65:39" pos:end="65:53"><expr pos:start="65:39" pos:end="65:53"><literal type="string" pos:start="65:39" pos:end="65:53">"AQ enabled.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:25">(<expr pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:11">ctx</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:24">temporal_aq</name></name></expr>)</condition> <block pos:start="71:27" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:64">

        <expr_stmt pos:start="73:9" pos:end="73:50"><expr pos:start="73:9" pos:end="73:49"><name pos:start="73:9" pos:end="73:45"><name pos:start="73:9" pos:end="73:11">ctx</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:19">config</name><operator pos:start="73:20" pos:end="73:20">.</operator><name pos:start="73:21" pos:end="73:28">rcParams</name><operator pos:start="73:29" pos:end="73:29">.</operator><name pos:start="73:30" pos:end="73:45">enableTemporalAQ</name></name> <operator pos:start="73:47" pos:end="73:47">=</operator> <literal type="number" pos:start="73:49" pos:end="73:49">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:64"><expr pos:start="75:9" pos:end="75:63"><call pos:start="75:9" pos:end="75:63"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="75:63">(<argument pos:start="75:16" pos:end="75:20"><expr pos:start="75:16" pos:end="75:20"><name pos:start="75:16" pos:end="75:20">avctx</name></expr></argument>, <argument pos:start="75:23" pos:end="75:36"><expr pos:start="75:23" pos:end="75:36"><name pos:start="75:23" pos:end="75:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="75:39" pos:end="75:62"><expr pos:start="75:39" pos:end="75:62"><literal type="string" pos:start="75:39" pos:end="75:62">"Temporal AQ enabled.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="117:5"><if pos:start="81:5" pos:end="117:5">if <condition pos:start="81:8" pos:end="81:26">(<expr pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:11">ctx</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:25">rc_lookahead</name></name></expr>)</condition> <block pos:start="81:28" pos:end="117:5">{<block_content pos:start="83:9" pos:end="115:9">

        <decl_stmt pos:start="83:9" pos:end="85:55"><decl pos:start="83:9" pos:end="85:54"><type pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">int</name></type> <name pos:start="83:13" pos:end="83:21">lkd_bound</name> <init pos:start="83:23" pos:end="85:54">= <expr pos:start="83:25" pos:end="85:54"><call pos:start="83:25" pos:end="83:65"><name pos:start="83:25" pos:end="83:29">FFMIN</name><argument_list pos:start="83:30" pos:end="83:65">(<argument pos:start="83:31" pos:end="83:46"><expr pos:start="83:31" pos:end="83:46"><name pos:start="83:31" pos:end="83:46"><name pos:start="83:31" pos:end="83:33">ctx</name><operator pos:start="83:34" pos:end="83:35">-&gt;</operator><name pos:start="83:36" pos:end="83:46">nb_surfaces</name></name></expr></argument>, <argument pos:start="83:49" pos:end="83:64"><expr pos:start="83:49" pos:end="83:64"><name pos:start="83:49" pos:end="83:64"><name pos:start="83:49" pos:end="83:51">ctx</name><operator pos:start="83:52" pos:end="83:53">-&gt;</operator><name pos:start="83:54" pos:end="83:64">async_depth</name></name></expr></argument>)</argument_list></call> <operator pos:start="83:67" pos:end="83:67">-</operator>

                        <name pos:start="85:25" pos:end="85:50"><name pos:start="85:25" pos:end="85:27">ctx</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:35">config</name><operator pos:start="85:36" pos:end="85:36">.</operator><name pos:start="85:37" pos:end="85:50">frameIntervalP</name></name> <operator pos:start="85:52" pos:end="85:52">-</operator> <literal type="number" pos:start="85:54" pos:end="85:54">4</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="89:9" pos:end="115:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:26">(<expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:21">lkd_bound</name> <operator pos:start="89:23" pos:end="89:23">&lt;</operator> <literal type="number" pos:start="89:25" pos:end="89:25">0</literal></expr>)</condition> <block pos:start="89:28" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:79">

            <expr_stmt pos:start="91:13" pos:end="93:79"><expr pos:start="91:13" pos:end="93:78"><call pos:start="91:13" pos:end="93:78"><name pos:start="91:13" pos:end="91:18">av_log</name><argument_list pos:start="91:19" pos:end="93:78">(<argument pos:start="91:20" pos:end="91:24"><expr pos:start="91:20" pos:end="91:24"><name pos:start="91:20" pos:end="91:24">avctx</name></expr></argument>, <argument pos:start="91:27" pos:end="91:40"><expr pos:start="91:27" pos:end="91:40"><name pos:start="91:27" pos:end="91:40">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="93:20" pos:end="93:77"><expr pos:start="93:20" pos:end="93:77"><literal type="string" pos:start="93:20" pos:end="93:77">"Lookahead not enabled. Increase buffer delay (-delay).\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="115:9">else <block pos:start="95:16" pos:end="115:9">{<block_content pos:start="97:13" pos:end="113:80">

            <expr_stmt pos:start="97:13" pos:end="97:53"><expr pos:start="97:13" pos:end="97:52"><name pos:start="97:13" pos:end="97:48"><name pos:start="97:13" pos:end="97:15">ctx</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:23">config</name><operator pos:start="97:24" pos:end="97:24">.</operator><name pos:start="97:25" pos:end="97:32">rcParams</name><operator pos:start="97:33" pos:end="97:33">.</operator><name pos:start="97:34" pos:end="97:48">enableLookahead</name></name> <operator pos:start="97:50" pos:end="97:50">=</operator> <literal type="number" pos:start="97:52" pos:end="97:52">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:92"><expr pos:start="99:13" pos:end="99:91"><name pos:start="99:13" pos:end="99:47"><name pos:start="99:13" pos:end="99:15">ctx</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:23">config</name><operator pos:start="99:24" pos:end="99:24">.</operator><name pos:start="99:25" pos:end="99:32">rcParams</name><operator pos:start="99:33" pos:end="99:33">.</operator><name pos:start="99:34" pos:end="99:47">lookaheadDepth</name></name>  <operator pos:start="99:50" pos:end="99:50">=</operator> <call pos:start="99:52" pos:end="99:91"><name pos:start="99:52" pos:end="99:58">av_clip</name><argument_list pos:start="99:59" pos:end="99:91">(<argument pos:start="99:60" pos:end="99:76"><expr pos:start="99:60" pos:end="99:76"><name pos:start="99:60" pos:end="99:76"><name pos:start="99:60" pos:end="99:62">ctx</name><operator pos:start="99:63" pos:end="99:64">-&gt;</operator><name pos:start="99:65" pos:end="99:76">rc_lookahead</name></name></expr></argument>, <argument pos:start="99:79" pos:end="99:79"><expr pos:start="99:79" pos:end="99:79"><literal type="number" pos:start="99:79" pos:end="99:79">0</literal></expr></argument>, <argument pos:start="99:82" pos:end="99:90"><expr pos:start="99:82" pos:end="99:90"><name pos:start="99:82" pos:end="99:90">lkd_bound</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:68"><expr pos:start="101:13" pos:end="101:67"><name pos:start="101:13" pos:end="101:46"><name pos:start="101:13" pos:end="101:15">ctx</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:23">config</name><operator pos:start="101:24" pos:end="101:24">.</operator><name pos:start="101:25" pos:end="101:32">rcParams</name><operator pos:start="101:33" pos:end="101:33">.</operator><name pos:start="101:34" pos:end="101:46">disableIadapt</name></name>   <operator pos:start="101:50" pos:end="101:50">=</operator> <name pos:start="101:52" pos:end="101:67"><name pos:start="101:52" pos:end="101:54">ctx</name><operator pos:start="101:55" pos:end="101:56">-&gt;</operator><name pos:start="101:57" pos:end="101:67">no_scenecut</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:65"><expr pos:start="103:13" pos:end="103:64"><name pos:start="103:13" pos:end="103:46"><name pos:start="103:13" pos:end="103:15">ctx</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:23">config</name><operator pos:start="103:24" pos:end="103:24">.</operator><name pos:start="103:25" pos:end="103:32">rcParams</name><operator pos:start="103:33" pos:end="103:33">.</operator><name pos:start="103:34" pos:end="103:46">disableBadapt</name></name>   <operator pos:start="103:50" pos:end="103:50">=</operator> <operator pos:start="103:52" pos:end="103:52">!</operator><name pos:start="103:53" pos:end="103:64"><name pos:start="103:53" pos:end="103:55">ctx</name><operator pos:start="103:56" pos:end="103:57">-&gt;</operator><name pos:start="103:58" pos:end="103:64">b_adapt</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="113:80"><expr pos:start="105:13" pos:end="113:79"><call pos:start="105:13" pos:end="113:79"><name pos:start="105:13" pos:end="105:18">av_log</name><argument_list pos:start="105:19" pos:end="113:79">(<argument pos:start="105:20" pos:end="105:24"><expr pos:start="105:20" pos:end="105:24"><name pos:start="105:20" pos:end="105:24">avctx</name></expr></argument>, <argument pos:start="105:27" pos:end="105:40"><expr pos:start="105:27" pos:end="105:40"><name pos:start="105:27" pos:end="105:40">AV_LOG_VERBOSE</name></expr></argument>,

                   <argument pos:start="107:20" pos:end="107:76"><expr pos:start="107:20" pos:end="107:76"><literal type="string" pos:start="107:20" pos:end="107:76">"Lookahead enabled: depth %d, scenecut %s, B-adapt %s.\n"</literal></expr></argument>,

                   <argument pos:start="109:20" pos:end="109:54"><expr pos:start="109:20" pos:end="109:54"><name pos:start="109:20" pos:end="109:54"><name pos:start="109:20" pos:end="109:22">ctx</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:30">config</name><operator pos:start="109:31" pos:end="109:31">.</operator><name pos:start="109:32" pos:end="109:39">rcParams</name><operator pos:start="109:40" pos:end="109:40">.</operator><name pos:start="109:41" pos:end="109:54">lookaheadDepth</name></name></expr></argument>,

                   <argument pos:start="111:20" pos:end="111:78"><expr pos:start="111:20" pos:end="111:78"><ternary pos:start="111:20" pos:end="111:78"><condition pos:start="111:20" pos:end="111:55"><expr pos:start="111:20" pos:end="111:53"><name pos:start="111:20" pos:end="111:53"><name pos:start="111:20" pos:end="111:22">ctx</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:30">config</name><operator pos:start="111:31" pos:end="111:31">.</operator><name pos:start="111:32" pos:end="111:39">rcParams</name><operator pos:start="111:40" pos:end="111:40">.</operator><name pos:start="111:41" pos:end="111:53">disableIadapt</name></name></expr> ?</condition><then pos:start="111:57" pos:end="111:66"> <expr pos:start="111:57" pos:end="111:66"><literal type="string" pos:start="111:57" pos:end="111:66">"disabled"</literal></expr> </then><else pos:start="111:68" pos:end="111:78">: <expr pos:start="111:70" pos:end="111:78"><literal type="string" pos:start="111:70" pos:end="111:78">"enabled"</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="113:20" pos:end="113:78"><expr pos:start="113:20" pos:end="113:78"><ternary pos:start="113:20" pos:end="113:78"><condition pos:start="113:20" pos:end="113:55"><expr pos:start="113:20" pos:end="113:53"><name pos:start="113:20" pos:end="113:53"><name pos:start="113:20" pos:end="113:22">ctx</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:30">config</name><operator pos:start="113:31" pos:end="113:31">.</operator><name pos:start="113:32" pos:end="113:39">rcParams</name><operator pos:start="113:40" pos:end="113:40">.</operator><name pos:start="113:41" pos:end="113:53">disableBadapt</name></name></expr> ?</condition><then pos:start="113:57" pos:end="113:66"> <expr pos:start="113:57" pos:end="113:66"><literal type="string" pos:start="113:57" pos:end="113:66">"disabled"</literal></expr> </then><else pos:start="113:68" pos:end="113:78">: <expr pos:start="113:70" pos:end="113:78"><literal type="string" pos:start="113:70" pos:end="113:78">"enabled"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="121:5" pos:end="127:5"><if pos:start="121:5" pos:end="127:5">if <condition pos:start="121:8" pos:end="121:24">(<expr pos:start="121:9" pos:end="121:23"><name pos:start="121:9" pos:end="121:23"><name pos:start="121:9" pos:end="121:11">ctx</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:23">strict_gop</name></name></expr>)</condition> <block pos:start="121:26" pos:end="127:5">{<block_content pos:start="123:9" pos:end="125:70">

        <expr_stmt pos:start="123:9" pos:end="123:49"><expr pos:start="123:9" pos:end="123:48"><name pos:start="123:9" pos:end="123:44"><name pos:start="123:9" pos:end="123:11">ctx</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:19">config</name><operator pos:start="123:20" pos:end="123:20">.</operator><name pos:start="123:21" pos:end="123:28">rcParams</name><operator pos:start="123:29" pos:end="123:29">.</operator><name pos:start="123:30" pos:end="123:44">strictGOPTarget</name></name> <operator pos:start="123:46" pos:end="123:46">=</operator> <literal type="number" pos:start="123:48" pos:end="123:48">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:70"><expr pos:start="125:9" pos:end="125:69"><call pos:start="125:9" pos:end="125:69"><name pos:start="125:9" pos:end="125:14">av_log</name><argument_list pos:start="125:15" pos:end="125:69">(<argument pos:start="125:16" pos:end="125:20"><expr pos:start="125:16" pos:end="125:20"><name pos:start="125:16" pos:end="125:20">avctx</name></expr></argument>, <argument pos:start="125:23" pos:end="125:36"><expr pos:start="125:23" pos:end="125:36"><name pos:start="125:23" pos:end="125:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="125:39" pos:end="125:68"><expr pos:start="125:39" pos:end="125:68"><literal type="string" pos:start="125:39" pos:end="125:68">"Strict GOP target enabled.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="131:5" pos:end="133:47"><if pos:start="131:5" pos:end="133:47">if <condition pos:start="131:8" pos:end="131:22">(<expr pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:11">ctx</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:21">nonref_p</name></name></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:47"><block_content pos:start="133:9" pos:end="133:47">

        <expr_stmt pos:start="133:9" pos:end="133:47"><expr pos:start="133:9" pos:end="133:46"><name pos:start="133:9" pos:end="133:42"><name pos:start="133:9" pos:end="133:11">ctx</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:19">config</name><operator pos:start="133:20" pos:end="133:20">.</operator><name pos:start="133:21" pos:end="133:28">rcParams</name><operator pos:start="133:29" pos:end="133:29">.</operator><name pos:start="133:30" pos:end="133:42">enableNonRefP</name></name> <operator pos:start="133:44" pos:end="133:44">=</operator> <literal type="number" pos:start="133:46" pos:end="133:46">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="137:5" pos:end="139:50"><if pos:start="137:5" pos:end="139:50">if <condition pos:start="137:8" pos:end="137:25">(<expr pos:start="137:9" pos:end="137:24"><name pos:start="137:9" pos:end="137:24"><name pos:start="137:9" pos:end="137:11">ctx</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:24">zerolatency</name></name></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="139:50"><block_content pos:start="139:9" pos:end="139:50">

        <expr_stmt pos:start="139:9" pos:end="139:50"><expr pos:start="139:9" pos:end="139:49"><name pos:start="139:9" pos:end="139:45"><name pos:start="139:9" pos:end="139:11">ctx</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:19">config</name><operator pos:start="139:20" pos:end="139:20">.</operator><name pos:start="139:21" pos:end="139:28">rcParams</name><operator pos:start="139:29" pos:end="139:29">.</operator><name pos:start="139:30" pos:end="139:45">zeroReorderDelay</name></name> <operator pos:start="139:47" pos:end="139:47">=</operator> <literal type="number" pos:start="139:49" pos:end="139:49">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="143:5" pos:end="148:0"><if pos:start="143:5" pos:end="148:0">if <condition pos:start="143:8" pos:end="143:21">(<expr pos:start="143:9" pos:end="143:20"><name pos:start="143:9" pos:end="143:20"><name pos:start="143:9" pos:end="143:11">ctx</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:20">quality</name></name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="148:0"><block_content pos:start="145:9" pos:end="148:0">

        <expr_stmt pos:start="145:9" pos:end="148:0"><expr pos:start="145:9" pos:end="145:57"><name pos:start="145:9" pos:end="145:42"><name pos:start="145:9" pos:end="145:11">ctx</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:19">config</name><operator pos:start="145:20" pos:end="145:20">.</operator><name pos:start="145:21" pos:end="145:28">rcParams</name><operator pos:start="145:29" pos:end="145:29">.</operator><name pos:start="145:30" pos:end="145:42">targetQuality</name></name> <operator pos:start="145:44" pos:end="145:44">=</operator> <name pos:start="145:46" pos:end="145:57"><name pos:start="145:46" pos:end="145:48">ctx</name><operator pos:start="145:49" pos:end="145:50">-&gt;</operator><name pos:start="145:51" pos:end="145:57">quality</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="147:1" pos:end="147:6">#<cpp:directive pos:start="147:2" pos:end="147:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="147:8" pos:end="147:40">/* NVENCAPI_MAJOR_VERSION &gt;= 7 */</comment>

</block_content>}</block></function>
</unit>
