<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15789.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">qemu_chr_parse_parallel</name><parameter_list pos:start="1:36" pos:end="3:49">(<parameter pos:start="1:37" pos:end="1:50"><decl pos:start="1:37" pos:end="1:50"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:44">QemuOpts</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">opts</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:75"><decl pos:start="1:53" pos:end="1:75"><type pos:start="1:53" pos:end="1:75"><name pos:start="1:53" pos:end="1:66">ChardevBackend</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:75">backend</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:48"><decl pos:start="3:37" pos:end="3:48"><type pos:start="3:37" pos:end="3:48"><name pos:start="3:37" pos:end="3:41">Error</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier><modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:48">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="23:1">{<block_content pos:start="7:5" pos:end="21:49">

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:22">device</name> <init pos:start="7:24" pos:end="7:51">= <expr pos:start="7:26" pos:end="7:51"><call pos:start="7:26" pos:end="7:51"><name pos:start="7:26" pos:end="7:37">qemu_opt_get</name><argument_list pos:start="7:38" pos:end="7:51">(<argument pos:start="7:39" pos:end="7:42"><expr pos:start="7:39" pos:end="7:42"><name pos:start="7:39" pos:end="7:42">opts</name></expr></argument>, <argument pos:start="7:45" pos:end="7:50"><expr pos:start="7:45" pos:end="7:50"><literal type="string" pos:start="7:45" pos:end="7:50">"path"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:23">(<expr pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:14">device</name> <operator pos:start="11:16" pos:end="11:17">==</operator> <name pos:start="11:19" pos:end="11:22">NULL</name></expr>)</condition> <block pos:start="11:25" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:68"><expr pos:start="13:9" pos:end="13:67"><call pos:start="13:9" pos:end="13:67"><name pos:start="13:9" pos:end="13:18">error_setg</name><argument_list pos:start="13:19" pos:end="13:67">(<argument pos:start="13:20" pos:end="13:23"><expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">errp</name></expr></argument>, <argument pos:start="13:26" pos:end="13:66"><expr pos:start="13:26" pos:end="13:66"><literal type="string" pos:start="13:26" pos:end="13:66">"chardev: parallel: no device path given"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:50"><expr pos:start="19:5" pos:end="19:49"><name pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:11">backend</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:21">parallel</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <call pos:start="19:25" pos:end="19:49"><name pos:start="19:25" pos:end="19:30">g_new0</name><argument_list pos:start="19:31" pos:end="19:49">(<argument pos:start="19:32" pos:end="19:45"><expr pos:start="19:32" pos:end="19:45"><name pos:start="19:32" pos:end="19:45">ChardevHostdev</name></expr></argument>, <argument pos:start="19:48" pos:end="19:48"><expr pos:start="19:48" pos:end="19:48"><literal type="number" pos:start="19:48" pos:end="19:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:11">backend</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:21">parallel</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:29">device</name></name> <operator pos:start="21:31" pos:end="21:31">=</operator> <call pos:start="21:33" pos:end="21:48"><name pos:start="21:33" pos:end="21:40">g_strdup</name><argument_list pos:start="21:41" pos:end="21:48">(<argument pos:start="21:42" pos:end="21:47"><expr pos:start="21:42" pos:end="21:47"><name pos:start="21:42" pos:end="21:47">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
