<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24038.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">set_pointer</name><parameter_list pos:start="1:24" pos:end="5:55">(<parameter pos:start="1:25" pos:end="1:35"><decl pos:start="1:25" pos:end="1:35"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:30">Object</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">obj</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:47"><decl pos:start="1:38" pos:end="1:47"><type pos:start="1:38" pos:end="1:47"><name pos:start="1:38" pos:end="1:44">Visitor</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">v</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:57">Property</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">prop</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:83"><function_decl pos:start="3:25" pos:end="3:83"><type pos:start="3:25" pos:end="3:27"><name pos:start="3:25" pos:end="3:27">int</name></type> (<modifier pos:start="3:30" pos:end="3:30">*</modifier><name pos:start="3:31" pos:end="3:35">parse</name>)<parameter_list pos:start="3:37" pos:end="3:83">(<parameter pos:start="3:38" pos:end="3:53"><decl pos:start="3:38" pos:end="3:53"><type pos:start="3:38" pos:end="3:53"><name pos:start="3:38" pos:end="3:48">DeviceState</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:53">dev</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:70"><decl pos:start="3:56" pos:end="3:70"><type pos:start="3:56" pos:end="3:70"><specifier pos:start="3:56" pos:end="3:60">const</specifier> <name pos:start="3:62" pos:end="3:65">char</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:70">str</name></decl></parameter>, <parameter pos:start="3:73" pos:end="3:82"><decl pos:start="3:73" pos:end="3:82"><type pos:start="3:73" pos:end="3:82"><name pos:start="3:73" pos:end="3:76">void</name> <modifier pos:start="3:78" pos:end="3:78">*</modifier><modifier pos:start="3:79" pos:end="3:79">*</modifier></type><name pos:start="3:80" pos:end="3:82">ptr</name></decl></parameter>)</parameter_list></function_decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:40"><decl pos:start="5:25" pos:end="5:40"><type pos:start="5:25" pos:end="5:40"><specifier pos:start="5:25" pos:end="5:29">const</specifier> <name pos:start="5:31" pos:end="5:34">char</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:40">name</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:47">Error</name> <modifier pos:start="5:49" pos:end="5:49">*</modifier><modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:54">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="57:1">{<block_content pos:start="9:5" pos:end="55:16">

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">dev</name> <init pos:start="9:22" pos:end="9:34">= <expr pos:start="9:24" pos:end="9:34"><call pos:start="9:24" pos:end="9:34"><name pos:start="9:24" pos:end="9:29">DEVICE</name><argument_list pos:start="9:30" pos:end="9:34">(<argument pos:start="9:31" pos:end="9:33"><expr pos:start="9:31" pos:end="9:33"><name pos:start="9:31" pos:end="9:33">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:20">local_err</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:8">void</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier><modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:14">ptr</name> <init pos:start="13:16" pos:end="13:45">= <expr pos:start="13:18" pos:end="13:45"><call pos:start="13:18" pos:end="13:45"><name pos:start="13:18" pos:end="13:34">qdev_get_prop_ptr</name><argument_list pos:start="13:35" pos:end="13:45">(<argument pos:start="13:36" pos:end="13:38"><expr pos:start="13:36" pos:end="13:38"><name pos:start="13:36" pos:end="13:38">dev</name></expr></argument>, <argument pos:start="13:41" pos:end="13:44"><expr pos:start="13:41" pos:end="13:44"><name pos:start="13:41" pos:end="13:44">prop</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:13">str</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:40">(<expr pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:11">dev</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:18">state</name></name> <operator pos:start="21:20" pos:end="21:21">!=</operator> <name pos:start="21:23" pos:end="21:39">DEV_STATE_CREATED</name></expr>)</condition> <block pos:start="21:42" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:48"><expr pos:start="23:9" pos:end="23:47"><call pos:start="23:9" pos:end="23:47"><name pos:start="23:9" pos:end="23:17">error_set</name><argument_list pos:start="23:18" pos:end="23:47">(<argument pos:start="23:19" pos:end="23:22"><expr pos:start="23:19" pos:end="23:22"><name pos:start="23:19" pos:end="23:22">errp</name></expr></argument>, <argument pos:start="23:25" pos:end="23:46"><expr pos:start="23:25" pos:end="23:46"><name pos:start="23:25" pos:end="23:46">QERR_PERMISSION_DENIED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><call pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:18">visit_type_str</name><argument_list pos:start="31:19" pos:end="31:45">(<argument pos:start="31:20" pos:end="31:20"><expr pos:start="31:20" pos:end="31:20"><name pos:start="31:20" pos:end="31:20">v</name></expr></argument>, <argument pos:start="31:23" pos:end="31:26"><expr pos:start="31:23" pos:end="31:26"><operator pos:start="31:23" pos:end="31:23">&amp;</operator><name pos:start="31:24" pos:end="31:26">str</name></expr></argument>, <argument pos:start="31:29" pos:end="31:32"><expr pos:start="31:29" pos:end="31:32"><name pos:start="31:29" pos:end="31:32">name</name></expr></argument>, <argument pos:start="31:35" pos:end="31:44"><expr pos:start="31:35" pos:end="31:44"><operator pos:start="31:35" pos:end="31:35">&amp;</operator><name pos:start="31:36" pos:end="31:44">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:17">local_err</name></expr>)</condition> <block pos:start="33:20" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:15">

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><call pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:23">error_propagate</name><argument_list pos:start="35:24" pos:end="35:40">(<argument pos:start="35:25" pos:end="35:28"><expr pos:start="35:25" pos:end="35:28"><name pos:start="35:25" pos:end="35:28">errp</name></expr></argument>, <argument pos:start="35:31" pos:end="35:39"><expr pos:start="35:31" pos:end="35:39"><name pos:start="35:31" pos:end="35:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:14">(<expr pos:start="41:9" pos:end="41:13"><operator pos:start="41:9" pos:end="41:9">!</operator><operator pos:start="41:10" pos:end="41:10">*</operator><name pos:start="41:11" pos:end="41:13">str</name></expr>)</condition> <block pos:start="41:16" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:15">

        <expr_stmt pos:start="43:9" pos:end="43:20"><expr pos:start="43:9" pos:end="43:19"><call pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:14">g_free</name><argument_list pos:start="43:15" pos:end="43:19">(<argument pos:start="43:16" pos:end="43:18"><expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:20"><expr pos:start="45:9" pos:end="45:19"><operator pos:start="45:9" pos:end="45:9">*</operator><name pos:start="45:10" pos:end="45:12">ptr</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <name pos:start="45:16" pos:end="45:19">NULL</name></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:31"><expr pos:start="51:5" pos:end="51:30"><name pos:start="51:5" pos:end="51:7">ret</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:30"><name pos:start="51:11" pos:end="51:15">parse</name><argument_list pos:start="51:16" pos:end="51:30">(<argument pos:start="51:17" pos:end="51:19"><expr pos:start="51:17" pos:end="51:19"><name pos:start="51:17" pos:end="51:19">dev</name></expr></argument>, <argument pos:start="51:22" pos:end="51:24"><expr pos:start="51:22" pos:end="51:24"><name pos:start="51:22" pos:end="51:24">str</name></expr></argument>, <argument pos:start="51:27" pos:end="51:29"><expr pos:start="51:27" pos:end="51:29"><name pos:start="51:27" pos:end="51:29">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:62"><expr pos:start="53:5" pos:end="53:61"><call pos:start="53:5" pos:end="53:61"><name pos:start="53:5" pos:end="53:34">error_set_from_qdev_prop_error</name><argument_list pos:start="53:35" pos:end="53:61">(<argument pos:start="53:36" pos:end="53:39"><expr pos:start="53:36" pos:end="53:39"><name pos:start="53:36" pos:end="53:39">errp</name></expr></argument>, <argument pos:start="53:42" pos:end="53:44"><expr pos:start="53:42" pos:end="53:44"><name pos:start="53:42" pos:end="53:44">ret</name></expr></argument>, <argument pos:start="53:47" pos:end="53:49"><expr pos:start="53:47" pos:end="53:49"><name pos:start="53:47" pos:end="53:49">dev</name></expr></argument>, <argument pos:start="53:52" pos:end="53:55"><expr pos:start="53:52" pos:end="53:55"><name pos:start="53:52" pos:end="53:55">prop</name></expr></argument>, <argument pos:start="53:58" pos:end="53:60"><expr pos:start="53:58" pos:end="53:60"><name pos:start="53:58" pos:end="53:60">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:16"><expr pos:start="55:5" pos:end="55:15"><call pos:start="55:5" pos:end="55:15"><name pos:start="55:5" pos:end="55:10">g_free</name><argument_list pos:start="55:11" pos:end="55:15">(<argument pos:start="55:12" pos:end="55:14"><expr pos:start="55:12" pos:end="55:14"><name pos:start="55:12" pos:end="55:14">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
