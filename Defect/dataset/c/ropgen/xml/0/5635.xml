<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5635.c" pos:tabs="8"><function pos:start="1:1" pos:end="1835:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">disas_vfp_insn</name><parameter_list pos:start="1:26" pos:end="1:57">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:38">DisasContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:51">uint32_t</name></type> <name pos:start="1:53" pos:end="1:56">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1835:1">{<block_content pos:start="5:5" pos:end="1833:13">

    <decl_stmt pos:start="5:5" pos:end="5:71"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:15">rd</name></decl>, <decl pos:start="5:18" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:18" pos:end="5:19">rn</name></decl>, <decl pos:start="5:22" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:22" pos:end="5:23">rm</name></decl>, <decl pos:start="5:26" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:26" pos:end="5:27">op</name></decl>, <decl pos:start="5:30" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:30" pos:end="5:30">i</name></decl>, <decl pos:start="5:33" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:33" pos:end="5:33">n</name></decl>, <decl pos:start="5:36" pos:end="5:41"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:36" pos:end="5:41">offset</name></decl>, <decl pos:start="5:44" pos:end="5:50"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:44" pos:end="5:50">delta_d</name></decl>, <decl pos:start="5:53" pos:end="5:59"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:53" pos:end="5:59">delta_m</name></decl>, <decl pos:start="5:62" pos:end="5:70"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:62" pos:end="5:70">bank_mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">dp</name></decl>, <decl pos:start="7:13" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:18">veclen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">TCGv_i32</name></type> <name pos:start="9:14" pos:end="9:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">TCGv_i32</name></type> <name pos:start="11:14" pos:end="11:16">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">TCGv_i32</name></type> <name pos:start="13:14" pos:end="13:17">tmp2</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:44">(<expr pos:start="17:9" pos:end="17:43"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:43"><name pos:start="17:10" pos:end="17:23">arm_dc_feature</name><argument_list pos:start="17:24" pos:end="17:43">(<argument pos:start="17:25" pos:end="17:25"><expr pos:start="17:25" pos:end="17:25"><name pos:start="17:25" pos:end="17:25">s</name></expr></argument>, <argument pos:start="17:28" pos:end="17:42"><expr pos:start="17:28" pos:end="17:42"><name pos:start="17:28" pos:end="17:42">ARM_FEATURE_VFP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:46" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="31:7">/* FIXME: this access check should not take precedence over UNDEF

     * for invalid encodings; we will generate incorrect syndrome information

     * for attempts to execute invalid vfp/neon encodings with FP disabled.

     */</comment>

    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="33:23">(<expr pos:start="33:9" pos:end="33:22"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:22"><name pos:start="33:10" pos:end="33:10">s</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:22">cpacr_fpen</name></name></expr>)</condition> <block pos:start="33:25" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:17">

        <expr_stmt pos:start="35:9" pos:end="39:52"><expr pos:start="35:9" pos:end="39:51"><call pos:start="35:9" pos:end="39:51"><name pos:start="35:9" pos:end="35:26">gen_exception_insn</name><argument_list pos:start="35:27" pos:end="39:51">(<argument pos:start="35:28" pos:end="35:28"><expr pos:start="35:28" pos:end="35:28"><name pos:start="35:28" pos:end="35:28">s</name></expr></argument>, <argument pos:start="35:31" pos:end="35:31"><expr pos:start="35:31" pos:end="35:31"><literal type="number" pos:start="35:31" pos:end="35:31">4</literal></expr></argument>, <argument pos:start="35:34" pos:end="35:42"><expr pos:start="35:34" pos:end="35:42"><name pos:start="35:34" pos:end="35:42">EXCP_UDEF</name></expr></argument>,

                           <argument pos:start="37:28" pos:end="37:63"><expr pos:start="37:28" pos:end="37:63"><call pos:start="37:28" pos:end="37:63"><name pos:start="37:28" pos:end="37:45">syn_fp_access_trap</name><argument_list pos:start="37:46" pos:end="37:63">(<argument pos:start="37:47" pos:end="37:47"><expr pos:start="37:47" pos:end="37:47"><literal type="number" pos:start="37:47" pos:end="37:47">1</literal></expr></argument>, <argument pos:start="37:50" pos:end="37:52"><expr pos:start="37:50" pos:end="37:52"><literal type="number" pos:start="37:50" pos:end="37:52">0xe</literal></expr></argument>, <argument pos:start="37:55" pos:end="37:62"><expr pos:start="37:55" pos:end="37:62"><name pos:start="37:55" pos:end="37:62"><name pos:start="37:55" pos:end="37:55">s</name><operator pos:start="37:56" pos:end="37:57">-&gt;</operator><name pos:start="37:58" pos:end="37:62">thumb</name></name></expr></argument>)</argument_list></call></expr></argument>,

                           <argument pos:start="39:28" pos:end="39:50"><expr pos:start="39:28" pos:end="39:50"><call pos:start="39:28" pos:end="39:50"><name pos:start="39:28" pos:end="39:47">default_exception_el</name><argument_list pos:start="39:48" pos:end="39:50">(<argument pos:start="39:49" pos:end="39:49"><expr pos:start="39:49" pos:end="39:49"><name pos:start="39:49" pos:end="39:49">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:17">return <expr pos:start="41:16" pos:end="41:16"><literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="65:5"><if pos:start="47:5" pos:end="65:5">if <condition pos:start="47:8" pos:end="47:24">(<expr pos:start="47:9" pos:end="47:23"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:23"><name pos:start="47:10" pos:end="47:10">s</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:23">vfp_enabled</name></name></expr>)</condition> <block pos:start="47:26" pos:end="65:5">{<block_content pos:start="51:9" pos:end="63:9">

        <comment type="block" pos:start="49:9" pos:end="49:77">/* VFP disabled.  Only allow fmxr/fmrx to/from some control regs.  */</comment>

        <if_stmt pos:start="51:9" pos:end="53:21"><if pos:start="51:9" pos:end="53:21">if <condition pos:start="51:12" pos:end="51:46">(<expr pos:start="51:13" pos:end="51:45"><operator pos:start="51:13" pos:end="51:13">(</operator><name pos:start="51:14" pos:end="51:17">insn</name> <operator pos:start="51:19" pos:end="51:19">&amp;</operator> <literal type="number" pos:start="51:21" pos:end="51:30">0x0fe00fff</literal><operator pos:start="51:31" pos:end="51:31">)</operator> <operator pos:start="51:33" pos:end="51:34">!=</operator> <literal type="number" pos:start="51:36" pos:end="51:45">0x0ee00a10</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:21"><block_content pos:start="53:13" pos:end="53:21">

            <return pos:start="53:13" pos:end="53:21">return <expr pos:start="53:20" pos:end="53:20"><literal type="number" pos:start="53:20" pos:end="53:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:32"><expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:10">rn</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <operator pos:start="55:14" pos:end="55:14">(</operator><name pos:start="55:15" pos:end="55:18">insn</name> <operator pos:start="55:20" pos:end="55:21">&gt;&gt;</operator> <literal type="number" pos:start="55:23" pos:end="55:24">16</literal><operator pos:start="55:25" pos:end="55:25">)</operator> <operator pos:start="55:27" pos:end="55:27">&amp;</operator> <literal type="number" pos:start="55:29" pos:end="55:31">0xf</literal></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="59:58">(<expr pos:start="57:13" pos:end="59:57"><name pos:start="57:13" pos:end="57:14">rn</name> <operator pos:start="57:16" pos:end="57:17">!=</operator> <name pos:start="57:19" pos:end="57:31">ARM_VFP_FPSID</name> <operator pos:start="57:33" pos:end="57:34">&amp;&amp;</operator> <name pos:start="57:36" pos:end="57:37">rn</name> <operator pos:start="57:39" pos:end="57:40">!=</operator> <name pos:start="57:42" pos:end="57:54">ARM_VFP_FPEXC</name> <operator pos:start="57:56" pos:end="57:57">&amp;&amp;</operator> <name pos:start="57:59" pos:end="57:60">rn</name> <operator pos:start="57:62" pos:end="57:63">!=</operator> <name pos:start="57:65" pos:end="57:77">ARM_VFP_MVFR2</name>

            <operator pos:start="59:13" pos:end="59:14">&amp;&amp;</operator> <name pos:start="59:16" pos:end="59:17">rn</name> <operator pos:start="59:19" pos:end="59:20">!=</operator> <name pos:start="59:22" pos:end="59:34">ARM_VFP_MVFR1</name> <operator pos:start="59:36" pos:end="59:37">&amp;&amp;</operator> <name pos:start="59:39" pos:end="59:40">rn</name> <operator pos:start="59:42" pos:end="59:43">!=</operator> <name pos:start="59:45" pos:end="59:57">ARM_VFP_MVFR0</name></expr>)</condition> <block pos:start="59:60" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:21">

            <return pos:start="61:13" pos:end="61:21">return <expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="79:5"><if pos:start="69:5" pos:end="79:5">if <condition pos:start="69:8" pos:end="69:38">(<expr pos:start="69:9" pos:end="69:37"><call pos:start="69:9" pos:end="69:30"><name pos:start="69:9" pos:end="69:17">extract32</name><argument_list pos:start="69:18" pos:end="69:30">(<argument pos:start="69:19" pos:end="69:22"><expr pos:start="69:19" pos:end="69:22"><name pos:start="69:19" pos:end="69:22">insn</name></expr></argument>, <argument pos:start="69:25" pos:end="69:26"><expr pos:start="69:25" pos:end="69:26"><literal type="number" pos:start="69:25" pos:end="69:26">28</literal></expr></argument>, <argument pos:start="69:29" pos:end="69:29"><expr pos:start="69:29" pos:end="69:29"><literal type="number" pos:start="69:29" pos:end="69:29">4</literal></expr></argument>)</argument_list></call> <operator pos:start="69:32" pos:end="69:33">==</operator> <literal type="number" pos:start="69:35" pos:end="69:37">0xf</literal></expr>)</condition> <block pos:start="69:40" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:42">

        <comment type="block" pos:start="71:9" pos:end="75:11">/* Encodings with T=1 (Thumb) or unconditional (ARM):

         * only used in v8 and above.

         */</comment>

        <return pos:start="77:9" pos:end="77:42">return <expr pos:start="77:16" pos:end="77:41"><call pos:start="77:16" pos:end="77:41"><name pos:start="77:16" pos:end="77:32">disas_vfp_v8_insn</name><argument_list pos:start="77:33" pos:end="77:41">(<argument pos:start="77:34" pos:end="77:34"><expr pos:start="77:34" pos:end="77:34"><name pos:start="77:34" pos:end="77:34">s</name></expr></argument>, <argument pos:start="77:37" pos:end="77:40"><expr pos:start="77:37" pos:end="77:40"><name pos:start="77:37" pos:end="77:40">insn</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:35"><expr pos:start="83:5" pos:end="83:34"><name pos:start="83:5" pos:end="83:6">dp</name> <operator pos:start="83:8" pos:end="83:8">=</operator> <operator pos:start="83:10" pos:end="83:10">(</operator><operator pos:start="83:11" pos:end="83:11">(</operator><name pos:start="83:12" pos:end="83:15">insn</name> <operator pos:start="83:17" pos:end="83:17">&amp;</operator> <literal type="number" pos:start="83:19" pos:end="83:23">0xf00</literal><operator pos:start="83:24" pos:end="83:24">)</operator> <operator pos:start="83:26" pos:end="83:27">==</operator> <literal type="number" pos:start="83:29" pos:end="83:33">0xb00</literal><operator pos:start="83:34" pos:end="83:34">)</operator></expr>;</expr_stmt>

    <switch pos:start="85:5" pos:end="1831:5">switch <condition pos:start="85:12" pos:end="85:31">(<expr pos:start="85:13" pos:end="85:30"><operator pos:start="85:13" pos:end="85:13">(</operator><name pos:start="85:14" pos:end="85:17">insn</name> <operator pos:start="85:19" pos:end="85:20">&gt;&gt;</operator> <literal type="number" pos:start="85:22" pos:end="85:23">24</literal><operator pos:start="85:24" pos:end="85:24">)</operator> <operator pos:start="85:26" pos:end="85:26">&amp;</operator> <literal type="number" pos:start="85:28" pos:end="85:30">0xf</literal></expr>)</condition> <block pos:start="85:33" pos:end="1831:5">{<block_content pos:start="87:5" pos:end="1829:17">

    <case pos:start="87:5" pos:end="87:13">case <expr pos:start="87:10" pos:end="87:12"><literal type="number" pos:start="87:10" pos:end="87:12">0xe</literal></expr>:</case>

        <if_stmt pos:start="89:9" pos:end="1537:9"><if pos:start="89:9" pos:end="505:9">if <condition pos:start="89:12" pos:end="89:28">(<expr pos:start="89:13" pos:end="89:27"><name pos:start="89:13" pos:end="89:16">insn</name> <operator pos:start="89:18" pos:end="89:18">&amp;</operator> <operator pos:start="89:20" pos:end="89:20">(</operator><literal type="number" pos:start="89:21" pos:end="89:21">1</literal> <operator pos:start="89:23" pos:end="89:24">&lt;&lt;</operator> <literal type="number" pos:start="89:26" pos:end="89:26">4</literal><operator pos:start="89:27" pos:end="89:27">)</operator></expr>)</condition> <block pos:start="89:30" pos:end="505:9">{<block_content pos:start="93:13" pos:end="503:13">

            <comment type="block" pos:start="91:13" pos:end="91:42">/* single register transfer */</comment>

            <expr_stmt pos:start="93:13" pos:end="93:36"><expr pos:start="93:13" pos:end="93:35"><name pos:start="93:13" pos:end="93:14">rd</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <operator pos:start="93:18" pos:end="93:18">(</operator><name pos:start="93:19" pos:end="93:22">insn</name> <operator pos:start="93:24" pos:end="93:25">&gt;&gt;</operator> <literal type="number" pos:start="93:27" pos:end="93:28">12</literal><operator pos:start="93:29" pos:end="93:29">)</operator> <operator pos:start="93:31" pos:end="93:31">&amp;</operator> <literal type="number" pos:start="93:33" pos:end="93:35">0xf</literal></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="503:13"><if pos:start="95:13" pos:end="273:13">if <condition pos:start="95:16" pos:end="95:19">(<expr pos:start="95:17" pos:end="95:18"><name pos:start="95:17" pos:end="95:18">dp</name></expr>)</condition> <block pos:start="95:21" pos:end="273:13">{<block_content pos:start="97:17" pos:end="271:17">

                <decl_stmt pos:start="97:17" pos:end="97:25"><decl pos:start="97:17" pos:end="97:24"><type pos:start="97:17" pos:end="97:19"><name pos:start="97:17" pos:end="97:19">int</name></type> <name pos:start="97:21" pos:end="97:24">size</name></decl>;</decl_stmt>

                <decl_stmt pos:start="99:17" pos:end="99:25"><decl pos:start="99:17" pos:end="99:24"><type pos:start="99:17" pos:end="99:19"><name pos:start="99:17" pos:end="99:19">int</name></type> <name pos:start="99:21" pos:end="99:24">pass</name></decl>;</decl_stmt>



                <expr_stmt pos:start="103:17" pos:end="103:37"><expr pos:start="103:17" pos:end="103:36"><call pos:start="103:17" pos:end="103:36"><name pos:start="103:17" pos:end="103:26">VFP_DREG_N</name><argument_list pos:start="103:27" pos:end="103:36">(<argument pos:start="103:28" pos:end="103:29"><expr pos:start="103:28" pos:end="103:29"><name pos:start="103:28" pos:end="103:29">rn</name></expr></argument>, <argument pos:start="103:32" pos:end="103:35"><expr pos:start="103:32" pos:end="103:35"><name pos:start="103:32" pos:end="103:35">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="105:17" pos:end="107:29"><if pos:start="105:17" pos:end="107:29">if <condition pos:start="105:20" pos:end="105:31">(<expr pos:start="105:21" pos:end="105:30"><name pos:start="105:21" pos:end="105:24">insn</name> <operator pos:start="105:26" pos:end="105:26">&amp;</operator> <literal type="number" pos:start="105:28" pos:end="105:30">0xf</literal></expr>)</condition><block type="pseudo" pos:start="107:21" pos:end="107:29"><block_content pos:start="107:21" pos:end="107:29">

                    <return pos:start="107:21" pos:end="107:29">return <expr pos:start="107:28" pos:end="107:28"><literal type="number" pos:start="107:28" pos:end="107:28">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <if_stmt pos:start="109:17" pos:end="115:17"><if pos:start="109:17" pos:end="115:17">if <condition pos:start="109:20" pos:end="111:60">(<expr pos:start="109:21" pos:end="111:59"><name pos:start="109:21" pos:end="109:24">insn</name> <operator pos:start="109:26" pos:end="109:26">&amp;</operator> <literal type="number" pos:start="109:28" pos:end="109:37">0x00c00060</literal>

                    <operator pos:start="111:21" pos:end="111:22">&amp;&amp;</operator> <operator pos:start="111:24" pos:end="111:24">!</operator><call pos:start="111:25" pos:end="111:59"><name pos:start="111:25" pos:end="111:38">arm_dc_feature</name><argument_list pos:start="111:39" pos:end="111:59">(<argument pos:start="111:40" pos:end="111:40"><expr pos:start="111:40" pos:end="111:40"><name pos:start="111:40" pos:end="111:40">s</name></expr></argument>, <argument pos:start="111:43" pos:end="111:58"><expr pos:start="111:43" pos:end="111:58"><name pos:start="111:43" pos:end="111:58">ARM_FEATURE_NEON</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:62" pos:end="115:17">{<block_content pos:start="113:21" pos:end="113:29">

                    <return pos:start="113:21" pos:end="113:29">return <expr pos:start="113:28" pos:end="113:28"><literal type="number" pos:start="113:28" pos:end="113:28">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="119:17" pos:end="119:40"><expr pos:start="119:17" pos:end="119:39"><name pos:start="119:17" pos:end="119:20">pass</name> <operator pos:start="119:22" pos:end="119:22">=</operator> <operator pos:start="119:24" pos:end="119:24">(</operator><name pos:start="119:25" pos:end="119:28">insn</name> <operator pos:start="119:30" pos:end="119:31">&gt;&gt;</operator> <literal type="number" pos:start="119:33" pos:end="119:34">21</literal><operator pos:start="119:35" pos:end="119:35">)</operator> <operator pos:start="119:37" pos:end="119:37">&amp;</operator> <literal type="number" pos:start="119:39" pos:end="119:39">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="121:17" pos:end="139:17"><if pos:start="121:17" pos:end="127:17">if <condition pos:start="121:20" pos:end="121:37">(<expr pos:start="121:21" pos:end="121:36"><name pos:start="121:21" pos:end="121:24">insn</name> <operator pos:start="121:26" pos:end="121:26">&amp;</operator> <operator pos:start="121:28" pos:end="121:28">(</operator><literal type="number" pos:start="121:29" pos:end="121:29">1</literal> <operator pos:start="121:31" pos:end="121:32">&lt;&lt;</operator> <literal type="number" pos:start="121:34" pos:end="121:35">22</literal><operator pos:start="121:36" pos:end="121:36">)</operator></expr>)</condition> <block pos:start="121:39" pos:end="127:17">{<block_content pos:start="123:21" pos:end="125:51">

                    <expr_stmt pos:start="123:21" pos:end="123:29"><expr pos:start="123:21" pos:end="123:28"><name pos:start="123:21" pos:end="123:24">size</name> <operator pos:start="123:26" pos:end="123:26">=</operator> <literal type="number" pos:start="123:28" pos:end="123:28">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="125:21" pos:end="125:51"><expr pos:start="125:21" pos:end="125:50"><name pos:start="125:21" pos:end="125:26">offset</name> <operator pos:start="125:28" pos:end="125:28">=</operator> <operator pos:start="125:30" pos:end="125:30">(</operator><operator pos:start="125:31" pos:end="125:31">(</operator><name pos:start="125:32" pos:end="125:35">insn</name> <operator pos:start="125:37" pos:end="125:38">&gt;&gt;</operator> <literal type="number" pos:start="125:40" pos:end="125:40">5</literal><operator pos:start="125:41" pos:end="125:41">)</operator> <operator pos:start="125:43" pos:end="125:43">&amp;</operator> <literal type="number" pos:start="125:45" pos:end="125:45">3</literal><operator pos:start="125:46" pos:end="125:46">)</operator> <operator pos:start="125:48" pos:end="125:48">*</operator> <literal type="number" pos:start="125:50" pos:end="125:50">8</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="127:19" pos:end="133:17">else if <condition pos:start="127:27" pos:end="127:43">(<expr pos:start="127:28" pos:end="127:42"><name pos:start="127:28" pos:end="127:31">insn</name> <operator pos:start="127:33" pos:end="127:33">&amp;</operator> <operator pos:start="127:35" pos:end="127:35">(</operator><literal type="number" pos:start="127:36" pos:end="127:36">1</literal> <operator pos:start="127:38" pos:end="127:39">&lt;&lt;</operator> <literal type="number" pos:start="127:41" pos:end="127:41">5</literal><operator pos:start="127:42" pos:end="127:42">)</operator></expr>)</condition> <block pos:start="127:45" pos:end="133:17">{<block_content pos:start="129:21" pos:end="131:56">

                    <expr_stmt pos:start="129:21" pos:end="129:29"><expr pos:start="129:21" pos:end="129:28"><name pos:start="129:21" pos:end="129:24">size</name> <operator pos:start="129:26" pos:end="129:26">=</operator> <literal type="number" pos:start="129:28" pos:end="129:28">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="131:21" pos:end="131:56"><expr pos:start="131:21" pos:end="131:55"><name pos:start="131:21" pos:end="131:26">offset</name> <operator pos:start="131:28" pos:end="131:28">=</operator> <ternary pos:start="131:30" pos:end="131:55"><condition pos:start="131:30" pos:end="131:48"><expr pos:start="131:30" pos:end="131:46"><operator pos:start="131:30" pos:end="131:30">(</operator><name pos:start="131:31" pos:end="131:34">insn</name> <operator pos:start="131:36" pos:end="131:36">&amp;</operator> <operator pos:start="131:38" pos:end="131:38">(</operator><literal type="number" pos:start="131:39" pos:end="131:39">1</literal> <operator pos:start="131:41" pos:end="131:42">&lt;&lt;</operator> <literal type="number" pos:start="131:44" pos:end="131:44">6</literal><operator pos:start="131:45" pos:end="131:45">)</operator><operator pos:start="131:46" pos:end="131:46">)</operator></expr> ?</condition><then pos:start="131:50" pos:end="131:51"> <expr pos:start="131:50" pos:end="131:51"><literal type="number" pos:start="131:50" pos:end="131:51">16</literal></expr> </then><else pos:start="131:53" pos:end="131:55">: <expr pos:start="131:55" pos:end="131:55"><literal type="number" pos:start="131:55" pos:end="131:55">0</literal></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="133:19" pos:end="139:17">else <block pos:start="133:24" pos:end="139:17">{<block_content pos:start="135:21" pos:end="137:31">

                    <expr_stmt pos:start="135:21" pos:end="135:29"><expr pos:start="135:21" pos:end="135:28"><name pos:start="135:21" pos:end="135:24">size</name> <operator pos:start="135:26" pos:end="135:26">=</operator> <literal type="number" pos:start="135:28" pos:end="135:28">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="137:21" pos:end="137:31"><expr pos:start="137:21" pos:end="137:30"><name pos:start="137:21" pos:end="137:26">offset</name> <operator pos:start="137:28" pos:end="137:28">=</operator> <literal type="number" pos:start="137:30" pos:end="137:30">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="141:17" pos:end="271:17"><if pos:start="141:17" pos:end="203:17">if <condition pos:start="141:20" pos:end="141:41">(<expr pos:start="141:21" pos:end="141:40"><name pos:start="141:21" pos:end="141:24">insn</name> <operator pos:start="141:26" pos:end="141:26">&amp;</operator> <name pos:start="141:28" pos:end="141:40">ARM_CP_RW_BIT</name></expr>)</condition> <block pos:start="141:43" pos:end="203:17">{<block_content pos:start="145:21" pos:end="201:42">

                    <comment type="block" pos:start="143:21" pos:end="143:34">/* vfp-&gt;arm */</comment>

                    <expr_stmt pos:start="145:21" pos:end="145:50"><expr pos:start="145:21" pos:end="145:49"><name pos:start="145:21" pos:end="145:23">tmp</name> <operator pos:start="145:25" pos:end="145:25">=</operator> <call pos:start="145:27" pos:end="145:49"><name pos:start="145:27" pos:end="145:39">neon_load_reg</name><argument_list pos:start="145:40" pos:end="145:49">(<argument pos:start="145:41" pos:end="145:42"><expr pos:start="145:41" pos:end="145:42"><name pos:start="145:41" pos:end="145:42">rn</name></expr></argument>, <argument pos:start="145:45" pos:end="145:48"><expr pos:start="145:45" pos:end="145:48"><name pos:start="145:45" pos:end="145:48">pass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <switch pos:start="147:21" pos:end="199:21">switch <condition pos:start="147:28" pos:end="147:33">(<expr pos:start="147:29" pos:end="147:32"><name pos:start="147:29" pos:end="147:32">size</name></expr>)</condition> <block pos:start="147:35" pos:end="199:21">{<block_content pos:start="149:21" pos:end="197:30">

                    <case pos:start="149:21" pos:end="149:27">case <expr pos:start="149:26" pos:end="149:26"><literal type="number" pos:start="149:26" pos:end="149:26">0</literal></expr>:</case>

                        <if_stmt pos:start="151:25" pos:end="153:63"><if pos:start="151:25" pos:end="153:63">if <condition pos:start="151:28" pos:end="151:35">(<expr pos:start="151:29" pos:end="151:34"><name pos:start="151:29" pos:end="151:34">offset</name></expr>)</condition><block type="pseudo" pos:start="153:29" pos:end="153:63"><block_content pos:start="153:29" pos:end="153:63">

                            <expr_stmt pos:start="153:29" pos:end="153:63"><expr pos:start="153:29" pos:end="153:62"><call pos:start="153:29" pos:end="153:62"><name pos:start="153:29" pos:end="153:44">tcg_gen_shri_i32</name><argument_list pos:start="153:45" pos:end="153:62">(<argument pos:start="153:46" pos:end="153:48"><expr pos:start="153:46" pos:end="153:48"><name pos:start="153:46" pos:end="153:48">tmp</name></expr></argument>, <argument pos:start="153:51" pos:end="153:53"><expr pos:start="153:51" pos:end="153:53"><name pos:start="153:51" pos:end="153:53">tmp</name></expr></argument>, <argument pos:start="153:56" pos:end="153:61"><expr pos:start="153:56" pos:end="153:61"><name pos:start="153:56" pos:end="153:61">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="155:25" pos:end="161:42"><if pos:start="155:25" pos:end="157:42">if <condition pos:start="155:28" pos:end="155:45">(<expr pos:start="155:29" pos:end="155:44"><name pos:start="155:29" pos:end="155:32">insn</name> <operator pos:start="155:34" pos:end="155:34">&amp;</operator> <operator pos:start="155:36" pos:end="155:36">(</operator><literal type="number" pos:start="155:37" pos:end="155:37">1</literal> <operator pos:start="155:39" pos:end="155:40">&lt;&lt;</operator> <literal type="number" pos:start="155:42" pos:end="155:43">23</literal><operator pos:start="155:44" pos:end="155:44">)</operator></expr>)</condition><block type="pseudo" pos:start="157:29" pos:end="157:42"><block_content pos:start="157:29" pos:end="157:42">

                            <expr_stmt pos:start="157:29" pos:end="157:42"><expr pos:start="157:29" pos:end="157:41"><call pos:start="157:29" pos:end="157:41"><name pos:start="157:29" pos:end="157:36">gen_uxtb</name><argument_list pos:start="157:37" pos:end="157:41">(<argument pos:start="157:38" pos:end="157:40"><expr pos:start="157:38" pos:end="157:40"><name pos:start="157:38" pos:end="157:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="159:25" pos:end="161:42">else<block type="pseudo" pos:start="161:29" pos:end="161:42"><block_content pos:start="161:29" pos:end="161:42">

                            <expr_stmt pos:start="161:29" pos:end="161:42"><expr pos:start="161:29" pos:end="161:41"><call pos:start="161:29" pos:end="161:41"><name pos:start="161:29" pos:end="161:36">gen_sxtb</name><argument_list pos:start="161:37" pos:end="161:41">(<argument pos:start="161:38" pos:end="161:40"><expr pos:start="161:38" pos:end="161:40"><name pos:start="161:38" pos:end="161:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <break pos:start="163:25" pos:end="163:30">break;</break>

                    <case pos:start="165:21" pos:end="165:27">case <expr pos:start="165:26" pos:end="165:26"><literal type="number" pos:start="165:26" pos:end="165:26">1</literal></expr>:</case>

                        <if_stmt pos:start="167:25" pos:end="191:25"><if pos:start="167:25" pos:end="179:25">if <condition pos:start="167:28" pos:end="167:45">(<expr pos:start="167:29" pos:end="167:44"><name pos:start="167:29" pos:end="167:32">insn</name> <operator pos:start="167:34" pos:end="167:34">&amp;</operator> <operator pos:start="167:36" pos:end="167:36">(</operator><literal type="number" pos:start="167:37" pos:end="167:37">1</literal> <operator pos:start="167:39" pos:end="167:40">&lt;&lt;</operator> <literal type="number" pos:start="167:42" pos:end="167:43">23</literal><operator pos:start="167:44" pos:end="167:44">)</operator></expr>)</condition> <block pos:start="167:47" pos:end="179:25">{<block_content pos:start="169:29" pos:end="177:29">

                            <if_stmt pos:start="169:29" pos:end="177:29"><if pos:start="169:29" pos:end="173:29">if <condition pos:start="169:32" pos:end="169:39">(<expr pos:start="169:33" pos:end="169:38"><name pos:start="169:33" pos:end="169:38">offset</name></expr>)</condition> <block pos:start="169:41" pos:end="173:29">{<block_content pos:start="171:33" pos:end="171:63">

                                <expr_stmt pos:start="171:33" pos:end="171:63"><expr pos:start="171:33" pos:end="171:62"><call pos:start="171:33" pos:end="171:62"><name pos:start="171:33" pos:end="171:48">tcg_gen_shri_i32</name><argument_list pos:start="171:49" pos:end="171:62">(<argument pos:start="171:50" pos:end="171:52"><expr pos:start="171:50" pos:end="171:52"><name pos:start="171:50" pos:end="171:52">tmp</name></expr></argument>, <argument pos:start="171:55" pos:end="171:57"><expr pos:start="171:55" pos:end="171:57"><name pos:start="171:55" pos:end="171:57">tmp</name></expr></argument>, <argument pos:start="171:60" pos:end="171:61"><expr pos:start="171:60" pos:end="171:61"><literal type="number" pos:start="171:60" pos:end="171:61">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="173:31" pos:end="177:29">else <block pos:start="173:36" pos:end="177:29">{<block_content pos:start="175:33" pos:end="175:46">

                                <expr_stmt pos:start="175:33" pos:end="175:46"><expr pos:start="175:33" pos:end="175:45"><call pos:start="175:33" pos:end="175:45"><name pos:start="175:33" pos:end="175:40">gen_uxth</name><argument_list pos:start="175:41" pos:end="175:45">(<argument pos:start="175:42" pos:end="175:44"><expr pos:start="175:42" pos:end="175:44"><name pos:start="175:42" pos:end="175:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if> <else pos:start="179:27" pos:end="191:25">else <block pos:start="179:32" pos:end="191:25">{<block_content pos:start="181:29" pos:end="189:29">

                            <if_stmt pos:start="181:29" pos:end="189:29"><if pos:start="181:29" pos:end="185:29">if <condition pos:start="181:32" pos:end="181:39">(<expr pos:start="181:33" pos:end="181:38"><name pos:start="181:33" pos:end="181:38">offset</name></expr>)</condition> <block pos:start="181:41" pos:end="185:29">{<block_content pos:start="183:33" pos:end="183:63">

                                <expr_stmt pos:start="183:33" pos:end="183:63"><expr pos:start="183:33" pos:end="183:62"><call pos:start="183:33" pos:end="183:62"><name pos:start="183:33" pos:end="183:48">tcg_gen_sari_i32</name><argument_list pos:start="183:49" pos:end="183:62">(<argument pos:start="183:50" pos:end="183:52"><expr pos:start="183:50" pos:end="183:52"><name pos:start="183:50" pos:end="183:52">tmp</name></expr></argument>, <argument pos:start="183:55" pos:end="183:57"><expr pos:start="183:55" pos:end="183:57"><name pos:start="183:55" pos:end="183:57">tmp</name></expr></argument>, <argument pos:start="183:60" pos:end="183:61"><expr pos:start="183:60" pos:end="183:61"><literal type="number" pos:start="183:60" pos:end="183:61">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="185:31" pos:end="189:29">else <block pos:start="185:36" pos:end="189:29">{<block_content pos:start="187:33" pos:end="187:46">

                                <expr_stmt pos:start="187:33" pos:end="187:46"><expr pos:start="187:33" pos:end="187:45"><call pos:start="187:33" pos:end="187:45"><name pos:start="187:33" pos:end="187:40">gen_sxth</name><argument_list pos:start="187:41" pos:end="187:45">(<argument pos:start="187:42" pos:end="187:44"><expr pos:start="187:42" pos:end="187:44"><name pos:start="187:42" pos:end="187:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></else></if_stmt>

                        <break pos:start="193:25" pos:end="193:30">break;</break>

                    <case pos:start="195:21" pos:end="195:27">case <expr pos:start="195:26" pos:end="195:26"><literal type="number" pos:start="195:26" pos:end="195:26">2</literal></expr>:</case>

                        <break pos:start="197:25" pos:end="197:30">break;</break>

                    </block_content>}</block></switch>

                    <expr_stmt pos:start="201:21" pos:end="201:42"><expr pos:start="201:21" pos:end="201:41"><call pos:start="201:21" pos:end="201:41"><name pos:start="201:21" pos:end="201:29">store_reg</name><argument_list pos:start="201:30" pos:end="201:41">(<argument pos:start="201:31" pos:end="201:31"><expr pos:start="201:31" pos:end="201:31"><name pos:start="201:31" pos:end="201:31">s</name></expr></argument>, <argument pos:start="201:34" pos:end="201:35"><expr pos:start="201:34" pos:end="201:35"><name pos:start="201:34" pos:end="201:35">rd</name></expr></argument>, <argument pos:start="201:38" pos:end="201:40"><expr pos:start="201:38" pos:end="201:40"><name pos:start="201:38" pos:end="201:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="203:19" pos:end="271:17">else <block pos:start="203:24" pos:end="271:17">{<block_content pos:start="207:21" pos:end="269:21">

                    <comment type="block" pos:start="205:21" pos:end="205:34">/* arm-&gt;vfp */</comment>

                    <expr_stmt pos:start="207:21" pos:end="207:42"><expr pos:start="207:21" pos:end="207:41"><name pos:start="207:21" pos:end="207:23">tmp</name> <operator pos:start="207:25" pos:end="207:25">=</operator> <call pos:start="207:27" pos:end="207:41"><name pos:start="207:27" pos:end="207:34">load_reg</name><argument_list pos:start="207:35" pos:end="207:41">(<argument pos:start="207:36" pos:end="207:36"><expr pos:start="207:36" pos:end="207:36"><name pos:start="207:36" pos:end="207:36">s</name></expr></argument>, <argument pos:start="207:39" pos:end="207:40"><expr pos:start="207:39" pos:end="207:40"><name pos:start="207:39" pos:end="207:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="209:21" pos:end="269:21"><if pos:start="209:21" pos:end="235:21">if <condition pos:start="209:24" pos:end="209:41">(<expr pos:start="209:25" pos:end="209:40"><name pos:start="209:25" pos:end="209:28">insn</name> <operator pos:start="209:30" pos:end="209:30">&amp;</operator> <operator pos:start="209:32" pos:end="209:32">(</operator><literal type="number" pos:start="209:33" pos:end="209:33">1</literal> <operator pos:start="209:35" pos:end="209:36">&lt;&lt;</operator> <literal type="number" pos:start="209:38" pos:end="209:39">23</literal><operator pos:start="209:40" pos:end="209:40">)</operator></expr>)</condition> <block pos:start="209:43" pos:end="235:21">{<block_content pos:start="213:25" pos:end="233:51">

                        <comment type="block" pos:start="211:25" pos:end="211:34">/* VDUP */</comment>

                        <if_stmt pos:start="213:25" pos:end="221:25"><if pos:start="213:25" pos:end="217:25">if <condition pos:start="213:28" pos:end="213:38">(<expr pos:start="213:29" pos:end="213:37"><name pos:start="213:29" pos:end="213:32">size</name> <operator pos:start="213:34" pos:end="213:35">==</operator> <literal type="number" pos:start="213:37" pos:end="213:37">0</literal></expr>)</condition> <block pos:start="213:40" pos:end="217:25">{<block_content pos:start="215:29" pos:end="215:52">

                            <expr_stmt pos:start="215:29" pos:end="215:52"><expr pos:start="215:29" pos:end="215:51"><call pos:start="215:29" pos:end="215:51"><name pos:start="215:29" pos:end="215:43">gen_neon_dup_u8</name><argument_list pos:start="215:44" pos:end="215:51">(<argument pos:start="215:45" pos:end="215:47"><expr pos:start="215:45" pos:end="215:47"><name pos:start="215:45" pos:end="215:47">tmp</name></expr></argument>, <argument pos:start="215:50" pos:end="215:50"><expr pos:start="215:50" pos:end="215:50"><literal type="number" pos:start="215:50" pos:end="215:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <if type="elseif" pos:start="217:27" pos:end="221:25">else if <condition pos:start="217:35" pos:end="217:45">(<expr pos:start="217:36" pos:end="217:44"><name pos:start="217:36" pos:end="217:39">size</name> <operator pos:start="217:41" pos:end="217:42">==</operator> <literal type="number" pos:start="217:44" pos:end="217:44">1</literal></expr>)</condition> <block pos:start="217:47" pos:end="221:25">{<block_content pos:start="219:29" pos:end="219:52">

                            <expr_stmt pos:start="219:29" pos:end="219:52"><expr pos:start="219:29" pos:end="219:51"><call pos:start="219:29" pos:end="219:51"><name pos:start="219:29" pos:end="219:46">gen_neon_dup_low16</name><argument_list pos:start="219:47" pos:end="219:51">(<argument pos:start="219:48" pos:end="219:50"><expr pos:start="219:48" pos:end="219:50"><name pos:start="219:48" pos:end="219:50">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <for pos:start="223:25" pos:end="231:25">for <control pos:start="223:29" pos:end="223:55">(<init pos:start="223:30" pos:end="223:35"><expr pos:start="223:30" pos:end="223:34"><name pos:start="223:30" pos:end="223:30">n</name> <operator pos:start="223:32" pos:end="223:32">=</operator> <literal type="number" pos:start="223:34" pos:end="223:34">0</literal></expr>;</init> <condition pos:start="223:37" pos:end="223:50"><expr pos:start="223:37" pos:end="223:49"><name pos:start="223:37" pos:end="223:37">n</name> <operator pos:start="223:39" pos:end="223:40">&lt;=</operator> <name pos:start="223:42" pos:end="223:45">pass</name> <operator pos:start="223:47" pos:end="223:47">*</operator> <literal type="number" pos:start="223:49" pos:end="223:49">2</literal></expr>;</condition> <incr pos:start="223:52" pos:end="223:54"><expr pos:start="223:52" pos:end="223:54"><name pos:start="223:52" pos:end="223:52">n</name><operator pos:start="223:53" pos:end="223:54">++</operator></expr></incr>)</control> <block pos:start="223:57" pos:end="231:25">{<block_content pos:start="225:29" pos:end="229:56">

                            <expr_stmt pos:start="225:29" pos:end="225:54"><expr pos:start="225:29" pos:end="225:53"><name pos:start="225:29" pos:end="225:32">tmp2</name> <operator pos:start="225:34" pos:end="225:34">=</operator> <call pos:start="225:36" pos:end="225:53"><name pos:start="225:36" pos:end="225:51">tcg_temp_new_i32</name><argument_list pos:start="225:52" pos:end="225:53">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="227:29" pos:end="227:55"><expr pos:start="227:29" pos:end="227:54"><call pos:start="227:29" pos:end="227:54"><name pos:start="227:29" pos:end="227:43">tcg_gen_mov_i32</name><argument_list pos:start="227:44" pos:end="227:54">(<argument pos:start="227:45" pos:end="227:48"><expr pos:start="227:45" pos:end="227:48"><name pos:start="227:45" pos:end="227:48">tmp2</name></expr></argument>, <argument pos:start="227:51" pos:end="227:53"><expr pos:start="227:51" pos:end="227:53"><name pos:start="227:51" pos:end="227:53">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="229:29" pos:end="229:56"><expr pos:start="229:29" pos:end="229:55"><call pos:start="229:29" pos:end="229:55"><name pos:start="229:29" pos:end="229:42">neon_store_reg</name><argument_list pos:start="229:43" pos:end="229:55">(<argument pos:start="229:44" pos:end="229:45"><expr pos:start="229:44" pos:end="229:45"><name pos:start="229:44" pos:end="229:45">rn</name></expr></argument>, <argument pos:start="229:48" pos:end="229:48"><expr pos:start="229:48" pos:end="229:48"><name pos:start="229:48" pos:end="229:48">n</name></expr></argument>, <argument pos:start="229:51" pos:end="229:54"><expr pos:start="229:51" pos:end="229:54"><name pos:start="229:51" pos:end="229:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></for>

                        <expr_stmt pos:start="233:25" pos:end="233:51"><expr pos:start="233:25" pos:end="233:50"><call pos:start="233:25" pos:end="233:50"><name pos:start="233:25" pos:end="233:38">neon_store_reg</name><argument_list pos:start="233:39" pos:end="233:50">(<argument pos:start="233:40" pos:end="233:41"><expr pos:start="233:40" pos:end="233:41"><name pos:start="233:40" pos:end="233:41">rn</name></expr></argument>, <argument pos:start="233:44" pos:end="233:44"><expr pos:start="233:44" pos:end="233:44"><name pos:start="233:44" pos:end="233:44">n</name></expr></argument>, <argument pos:start="233:47" pos:end="233:49"><expr pos:start="233:47" pos:end="233:49"><name pos:start="233:47" pos:end="233:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="235:23" pos:end="269:21">else <block pos:start="235:28" pos:end="269:21">{<block_content pos:start="239:25" pos:end="267:54">

                        <comment type="block" pos:start="237:25" pos:end="237:34">/* VMOV */</comment>

                        <switch pos:start="239:25" pos:end="265:25">switch <condition pos:start="239:32" pos:end="239:37">(<expr pos:start="239:33" pos:end="239:36"><name pos:start="239:33" pos:end="239:36">size</name></expr>)</condition> <block pos:start="239:39" pos:end="265:25">{<block_content pos:start="241:25" pos:end="263:34">

                        <case pos:start="241:25" pos:end="241:31">case <expr pos:start="241:30" pos:end="241:30"><literal type="number" pos:start="241:30" pos:end="241:30">0</literal></expr>:</case>

                            <expr_stmt pos:start="243:29" pos:end="243:59"><expr pos:start="243:29" pos:end="243:58"><name pos:start="243:29" pos:end="243:32">tmp2</name> <operator pos:start="243:34" pos:end="243:34">=</operator> <call pos:start="243:36" pos:end="243:58"><name pos:start="243:36" pos:end="243:48">neon_load_reg</name><argument_list pos:start="243:49" pos:end="243:58">(<argument pos:start="243:50" pos:end="243:51"><expr pos:start="243:50" pos:end="243:51"><name pos:start="243:50" pos:end="243:51">rn</name></expr></argument>, <argument pos:start="243:54" pos:end="243:57"><expr pos:start="243:54" pos:end="243:57"><name pos:start="243:54" pos:end="243:57">pass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="245:29" pos:end="245:75"><expr pos:start="245:29" pos:end="245:74"><call pos:start="245:29" pos:end="245:74"><name pos:start="245:29" pos:end="245:47">tcg_gen_deposit_i32</name><argument_list pos:start="245:48" pos:end="245:74">(<argument pos:start="245:49" pos:end="245:51"><expr pos:start="245:49" pos:end="245:51"><name pos:start="245:49" pos:end="245:51">tmp</name></expr></argument>, <argument pos:start="245:54" pos:end="245:57"><expr pos:start="245:54" pos:end="245:57"><name pos:start="245:54" pos:end="245:57">tmp2</name></expr></argument>, <argument pos:start="245:60" pos:end="245:62"><expr pos:start="245:60" pos:end="245:62"><name pos:start="245:60" pos:end="245:62">tmp</name></expr></argument>, <argument pos:start="245:65" pos:end="245:70"><expr pos:start="245:65" pos:end="245:70"><name pos:start="245:65" pos:end="245:70">offset</name></expr></argument>, <argument pos:start="245:73" pos:end="245:73"><expr pos:start="245:73" pos:end="245:73"><literal type="number" pos:start="245:73" pos:end="245:73">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="247:29" pos:end="247:52"><expr pos:start="247:29" pos:end="247:51"><call pos:start="247:29" pos:end="247:51"><name pos:start="247:29" pos:end="247:45">tcg_temp_free_i32</name><argument_list pos:start="247:46" pos:end="247:51">(<argument pos:start="247:47" pos:end="247:50"><expr pos:start="247:47" pos:end="247:50"><name pos:start="247:47" pos:end="247:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="249:29" pos:end="249:34">break;</break>

                        <case pos:start="251:25" pos:end="251:31">case <expr pos:start="251:30" pos:end="251:30"><literal type="number" pos:start="251:30" pos:end="251:30">1</literal></expr>:</case>

                            <expr_stmt pos:start="253:29" pos:end="253:59"><expr pos:start="253:29" pos:end="253:58"><name pos:start="253:29" pos:end="253:32">tmp2</name> <operator pos:start="253:34" pos:end="253:34">=</operator> <call pos:start="253:36" pos:end="253:58"><name pos:start="253:36" pos:end="253:48">neon_load_reg</name><argument_list pos:start="253:49" pos:end="253:58">(<argument pos:start="253:50" pos:end="253:51"><expr pos:start="253:50" pos:end="253:51"><name pos:start="253:50" pos:end="253:51">rn</name></expr></argument>, <argument pos:start="253:54" pos:end="253:57"><expr pos:start="253:54" pos:end="253:57"><name pos:start="253:54" pos:end="253:57">pass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="255:29" pos:end="255:76"><expr pos:start="255:29" pos:end="255:75"><call pos:start="255:29" pos:end="255:75"><name pos:start="255:29" pos:end="255:47">tcg_gen_deposit_i32</name><argument_list pos:start="255:48" pos:end="255:75">(<argument pos:start="255:49" pos:end="255:51"><expr pos:start="255:49" pos:end="255:51"><name pos:start="255:49" pos:end="255:51">tmp</name></expr></argument>, <argument pos:start="255:54" pos:end="255:57"><expr pos:start="255:54" pos:end="255:57"><name pos:start="255:54" pos:end="255:57">tmp2</name></expr></argument>, <argument pos:start="255:60" pos:end="255:62"><expr pos:start="255:60" pos:end="255:62"><name pos:start="255:60" pos:end="255:62">tmp</name></expr></argument>, <argument pos:start="255:65" pos:end="255:70"><expr pos:start="255:65" pos:end="255:70"><name pos:start="255:65" pos:end="255:70">offset</name></expr></argument>, <argument pos:start="255:73" pos:end="255:74"><expr pos:start="255:73" pos:end="255:74"><literal type="number" pos:start="255:73" pos:end="255:74">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="257:29" pos:end="257:52"><expr pos:start="257:29" pos:end="257:51"><call pos:start="257:29" pos:end="257:51"><name pos:start="257:29" pos:end="257:45">tcg_temp_free_i32</name><argument_list pos:start="257:46" pos:end="257:51">(<argument pos:start="257:47" pos:end="257:50"><expr pos:start="257:47" pos:end="257:50"><name pos:start="257:47" pos:end="257:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="259:29" pos:end="259:34">break;</break>

                        <case pos:start="261:25" pos:end="261:31">case <expr pos:start="261:30" pos:end="261:30"><literal type="number" pos:start="261:30" pos:end="261:30">2</literal></expr>:</case>

                            <break pos:start="263:29" pos:end="263:34">break;</break>

                        </block_content>}</block></switch>

                        <expr_stmt pos:start="267:25" pos:end="267:54"><expr pos:start="267:25" pos:end="267:53"><call pos:start="267:25" pos:end="267:53"><name pos:start="267:25" pos:end="267:38">neon_store_reg</name><argument_list pos:start="267:39" pos:end="267:53">(<argument pos:start="267:40" pos:end="267:41"><expr pos:start="267:40" pos:end="267:41"><name pos:start="267:40" pos:end="267:41">rn</name></expr></argument>, <argument pos:start="267:44" pos:end="267:47"><expr pos:start="267:44" pos:end="267:47"><name pos:start="267:44" pos:end="267:47">pass</name></expr></argument>, <argument pos:start="267:50" pos:end="267:52"><expr pos:start="267:50" pos:end="267:52"><name pos:start="267:50" pos:end="267:52">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="273:15" pos:end="503:13">else <block pos:start="273:20" pos:end="503:13">{<block_content pos:start="275:17" pos:end="501:17"> <comment type="block" pos:start="273:22" pos:end="273:30">/* !dp */</comment>

                <if_stmt pos:start="275:17" pos:end="277:29"><if pos:start="275:17" pos:end="277:29">if <condition pos:start="275:20" pos:end="275:42">(<expr pos:start="275:21" pos:end="275:41"><operator pos:start="275:21" pos:end="275:21">(</operator><name pos:start="275:22" pos:end="275:25">insn</name> <operator pos:start="275:27" pos:end="275:27">&amp;</operator> <literal type="number" pos:start="275:29" pos:end="275:32">0x6f</literal><operator pos:start="275:33" pos:end="275:33">)</operator> <operator pos:start="275:35" pos:end="275:36">!=</operator> <literal type="number" pos:start="275:38" pos:end="275:41">0x00</literal></expr>)</condition><block type="pseudo" pos:start="277:21" pos:end="277:29"><block_content pos:start="277:21" pos:end="277:29">

                    <return pos:start="277:21" pos:end="277:29">return <expr pos:start="277:28" pos:end="277:28"><literal type="number" pos:start="277:28" pos:end="277:28">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="279:17" pos:end="279:38"><expr pos:start="279:17" pos:end="279:37"><name pos:start="279:17" pos:end="279:18">rn</name> <operator pos:start="279:20" pos:end="279:20">=</operator> <call pos:start="279:22" pos:end="279:37"><name pos:start="279:22" pos:end="279:31">VFP_SREG_N</name><argument_list pos:start="279:32" pos:end="279:37">(<argument pos:start="279:33" pos:end="279:36"><expr pos:start="279:33" pos:end="279:36"><name pos:start="279:33" pos:end="279:36">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="281:17" pos:end="501:17"><if pos:start="281:17" pos:end="415:17">if <condition pos:start="281:20" pos:end="281:41">(<expr pos:start="281:21" pos:end="281:40"><name pos:start="281:21" pos:end="281:24">insn</name> <operator pos:start="281:26" pos:end="281:26">&amp;</operator> <name pos:start="281:28" pos:end="281:40">ARM_CP_RW_BIT</name></expr>)</condition> <block pos:start="281:43" pos:end="415:17">{<block_content pos:start="285:21" pos:end="413:21">

                    <comment type="block" pos:start="283:21" pos:end="283:34">/* vfp-&gt;arm */</comment>

                    <if_stmt pos:start="285:21" pos:end="399:21"><if pos:start="285:21" pos:end="393:21">if <condition pos:start="285:24" pos:end="285:41">(<expr pos:start="285:25" pos:end="285:40"><name pos:start="285:25" pos:end="285:28">insn</name> <operator pos:start="285:30" pos:end="285:30">&amp;</operator> <operator pos:start="285:32" pos:end="285:32">(</operator><literal type="number" pos:start="285:33" pos:end="285:33">1</literal> <operator pos:start="285:35" pos:end="285:36">&lt;&lt;</operator> <literal type="number" pos:start="285:38" pos:end="285:39">21</literal><operator pos:start="285:40" pos:end="285:40">)</operator></expr>)</condition> <block pos:start="285:43" pos:end="393:21">{<block_content pos:start="289:25" pos:end="391:25">

                        <comment type="block" pos:start="287:25" pos:end="287:45">/* system register */</comment>

                        <expr_stmt pos:start="289:25" pos:end="289:33"><expr pos:start="289:25" pos:end="289:32"><name pos:start="289:25" pos:end="289:26">rn</name> <operator pos:start="289:28" pos:end="289:30">&gt;&gt;=</operator> <literal type="number" pos:start="289:32" pos:end="289:32">1</literal></expr>;</expr_stmt>



                        <switch pos:start="293:25" pos:end="391:25">switch <condition pos:start="293:32" pos:end="293:35">(<expr pos:start="293:33" pos:end="293:34"><name pos:start="293:33" pos:end="293:34">rn</name></expr>)</condition> <block pos:start="293:37" pos:end="391:25">{<block_content pos:start="295:25" pos:end="389:37">

                        <case pos:start="295:25" pos:end="295:43">case <expr pos:start="295:30" pos:end="295:42"><name pos:start="295:30" pos:end="295:42">ARM_VFP_FPSID</name></expr>:</case>

                            <comment type="block" pos:start="297:29" pos:end="301:44">/* VFP2 allows access to FSID from userspace.

                               VFP3 restricts all id registers to privileged

                               accesses.  */</comment>

                            <if_stmt pos:start="303:29" pos:end="309:29"><if pos:start="303:29" pos:end="309:29">if <condition pos:start="303:32" pos:end="305:71">(<expr pos:start="303:33" pos:end="305:70"><call pos:start="303:33" pos:end="303:42"><name pos:start="303:33" pos:end="303:39">IS_USER</name><argument_list pos:start="303:40" pos:end="303:42">(<argument pos:start="303:41" pos:end="303:41"><expr pos:start="303:41" pos:end="303:41"><name pos:start="303:41" pos:end="303:41">s</name></expr></argument>)</argument_list></call>

                                <operator pos:start="305:33" pos:end="305:34">&amp;&amp;</operator> <call pos:start="305:36" pos:end="305:70"><name pos:start="305:36" pos:end="305:49">arm_dc_feature</name><argument_list pos:start="305:50" pos:end="305:70">(<argument pos:start="305:51" pos:end="305:51"><expr pos:start="305:51" pos:end="305:51"><name pos:start="305:51" pos:end="305:51">s</name></expr></argument>, <argument pos:start="305:54" pos:end="305:69"><expr pos:start="305:54" pos:end="305:69"><name pos:start="305:54" pos:end="305:69">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="305:73" pos:end="309:29">{<block_content pos:start="307:33" pos:end="307:41">

                                <return pos:start="307:33" pos:end="307:41">return <expr pos:start="307:40" pos:end="307:40"><literal type="number" pos:start="307:40" pos:end="307:40">1</literal></expr>;</return>

                            </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="311:29" pos:end="311:64"><expr pos:start="311:29" pos:end="311:63"><name pos:start="311:29" pos:end="311:31">tmp</name> <operator pos:start="311:33" pos:end="311:33">=</operator> <call pos:start="311:35" pos:end="311:63"><name pos:start="311:35" pos:end="311:48">load_cpu_field</name><argument_list pos:start="311:49" pos:end="311:63">(<argument pos:start="311:50" pos:end="311:62"><expr pos:start="311:50" pos:end="311:62"><name pos:start="311:50" pos:end="311:62"><name pos:start="311:50" pos:end="311:52">vfp</name><operator pos:start="311:53" pos:end="311:53">.</operator><name pos:start="311:54" pos:end="311:58">xregs</name><index pos:start="311:59" pos:end="311:62">[<expr pos:start="311:60" pos:end="311:61"><name pos:start="311:60" pos:end="311:61">rn</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="313:29" pos:end="313:34">break;</break>

                        <case pos:start="315:25" pos:end="315:43">case <expr pos:start="315:30" pos:end="315:42"><name pos:start="315:30" pos:end="315:42">ARM_VFP_FPEXC</name></expr>:</case>

                            <if_stmt pos:start="317:29" pos:end="319:41"><if pos:start="317:29" pos:end="319:41">if <condition pos:start="317:32" pos:end="317:43">(<expr pos:start="317:33" pos:end="317:42"><call pos:start="317:33" pos:end="317:42"><name pos:start="317:33" pos:end="317:39">IS_USER</name><argument_list pos:start="317:40" pos:end="317:42">(<argument pos:start="317:41" pos:end="317:41"><expr pos:start="317:41" pos:end="317:41"><name pos:start="317:41" pos:end="317:41">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="319:33" pos:end="319:41"><block_content pos:start="319:33" pos:end="319:41">

                                <return pos:start="319:33" pos:end="319:41">return <expr pos:start="319:40" pos:end="319:40"><literal type="number" pos:start="319:40" pos:end="319:40">1</literal></expr>;</return></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="321:29" pos:end="321:64"><expr pos:start="321:29" pos:end="321:63"><name pos:start="321:29" pos:end="321:31">tmp</name> <operator pos:start="321:33" pos:end="321:33">=</operator> <call pos:start="321:35" pos:end="321:63"><name pos:start="321:35" pos:end="321:48">load_cpu_field</name><argument_list pos:start="321:49" pos:end="321:63">(<argument pos:start="321:50" pos:end="321:62"><expr pos:start="321:50" pos:end="321:62"><name pos:start="321:50" pos:end="321:62"><name pos:start="321:50" pos:end="321:52">vfp</name><operator pos:start="321:53" pos:end="321:53">.</operator><name pos:start="321:54" pos:end="321:58">xregs</name><index pos:start="321:59" pos:end="321:62">[<expr pos:start="321:60" pos:end="321:61"><name pos:start="321:60" pos:end="321:61">rn</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="323:29" pos:end="323:34">break;</break>

                        <case pos:start="325:25" pos:end="325:44">case <expr pos:start="325:30" pos:end="325:43"><name pos:start="325:30" pos:end="325:43">ARM_VFP_FPINST</name></expr>:</case>

                        <case pos:start="327:25" pos:end="327:45">case <expr pos:start="327:30" pos:end="327:44"><name pos:start="327:30" pos:end="327:44">ARM_VFP_FPINST2</name></expr>:</case>

                            <comment type="block" pos:start="329:29" pos:end="329:55">/* Not present in VFP3.  */</comment>

                            <if_stmt pos:start="331:29" pos:end="337:29"><if pos:start="331:29" pos:end="337:29">if <condition pos:start="331:32" pos:end="333:71">(<expr pos:start="331:33" pos:end="333:70"><call pos:start="331:33" pos:end="331:42"><name pos:start="331:33" pos:end="331:39">IS_USER</name><argument_list pos:start="331:40" pos:end="331:42">(<argument pos:start="331:41" pos:end="331:41"><expr pos:start="331:41" pos:end="331:41"><name pos:start="331:41" pos:end="331:41">s</name></expr></argument>)</argument_list></call>

                                <operator pos:start="333:33" pos:end="333:34">||</operator> <call pos:start="333:36" pos:end="333:70"><name pos:start="333:36" pos:end="333:49">arm_dc_feature</name><argument_list pos:start="333:50" pos:end="333:70">(<argument pos:start="333:51" pos:end="333:51"><expr pos:start="333:51" pos:end="333:51"><name pos:start="333:51" pos:end="333:51">s</name></expr></argument>, <argument pos:start="333:54" pos:end="333:69"><expr pos:start="333:54" pos:end="333:69"><name pos:start="333:54" pos:end="333:69">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="333:73" pos:end="337:29">{<block_content pos:start="335:33" pos:end="335:41">

                                <return pos:start="335:33" pos:end="335:41">return <expr pos:start="335:40" pos:end="335:40"><literal type="number" pos:start="335:40" pos:end="335:40">1</literal></expr>;</return>

                            </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="339:29" pos:end="339:64"><expr pos:start="339:29" pos:end="339:63"><name pos:start="339:29" pos:end="339:31">tmp</name> <operator pos:start="339:33" pos:end="339:33">=</operator> <call pos:start="339:35" pos:end="339:63"><name pos:start="339:35" pos:end="339:48">load_cpu_field</name><argument_list pos:start="339:49" pos:end="339:63">(<argument pos:start="339:50" pos:end="339:62"><expr pos:start="339:50" pos:end="339:62"><name pos:start="339:50" pos:end="339:62"><name pos:start="339:50" pos:end="339:52">vfp</name><operator pos:start="339:53" pos:end="339:53">.</operator><name pos:start="339:54" pos:end="339:58">xregs</name><index pos:start="339:59" pos:end="339:62">[<expr pos:start="339:60" pos:end="339:61"><name pos:start="339:60" pos:end="339:61">rn</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="341:29" pos:end="341:34">break;</break>

                        <case pos:start="343:25" pos:end="343:43">case <expr pos:start="343:30" pos:end="343:42"><name pos:start="343:30" pos:end="343:42">ARM_VFP_FPSCR</name></expr>:</case>

                            <if_stmt pos:start="345:29" pos:end="357:29"><if pos:start="345:29" pos:end="351:29">if <condition pos:start="345:32" pos:end="345:41">(<expr pos:start="345:33" pos:end="345:40"><name pos:start="345:33" pos:end="345:34">rd</name> <operator pos:start="345:36" pos:end="345:37">==</operator> <literal type="number" pos:start="345:39" pos:end="345:40">15</literal></expr>)</condition> <block pos:start="345:43" pos:end="351:29">{<block_content pos:start="347:33" pos:end="349:71">

                                <expr_stmt pos:start="347:33" pos:end="347:79"><expr pos:start="347:33" pos:end="347:78"><name pos:start="347:33" pos:end="347:35">tmp</name> <operator pos:start="347:37" pos:end="347:37">=</operator> <call pos:start="347:39" pos:end="347:78"><name pos:start="347:39" pos:end="347:52">load_cpu_field</name><argument_list pos:start="347:53" pos:end="347:78">(<argument pos:start="347:54" pos:end="347:77"><expr pos:start="347:54" pos:end="347:77"><name pos:start="347:54" pos:end="347:77"><name pos:start="347:54" pos:end="347:56">vfp</name><operator pos:start="347:57" pos:end="347:57">.</operator><name pos:start="347:58" pos:end="347:62">xregs</name><index pos:start="347:63" pos:end="347:77">[<expr pos:start="347:64" pos:end="347:76"><name pos:start="347:64" pos:end="347:76">ARM_VFP_FPSCR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="349:33" pos:end="349:71"><expr pos:start="349:33" pos:end="349:70"><call pos:start="349:33" pos:end="349:70"><name pos:start="349:33" pos:end="349:48">tcg_gen_andi_i32</name><argument_list pos:start="349:49" pos:end="349:70">(<argument pos:start="349:50" pos:end="349:52"><expr pos:start="349:50" pos:end="349:52"><name pos:start="349:50" pos:end="349:52">tmp</name></expr></argument>, <argument pos:start="349:55" pos:end="349:57"><expr pos:start="349:55" pos:end="349:57"><name pos:start="349:55" pos:end="349:57">tmp</name></expr></argument>, <argument pos:start="349:60" pos:end="349:69"><expr pos:start="349:60" pos:end="349:69"><literal type="number" pos:start="349:60" pos:end="349:69">0xf0000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="351:31" pos:end="357:29">else <block pos:start="351:36" pos:end="357:29">{<block_content pos:start="353:33" pos:end="355:71">

                                <expr_stmt pos:start="353:33" pos:end="353:57"><expr pos:start="353:33" pos:end="353:56"><name pos:start="353:33" pos:end="353:35">tmp</name> <operator pos:start="353:37" pos:end="353:37">=</operator> <call pos:start="353:39" pos:end="353:56"><name pos:start="353:39" pos:end="353:54">tcg_temp_new_i32</name><argument_list pos:start="353:55" pos:end="353:56">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="355:33" pos:end="355:71"><expr pos:start="355:33" pos:end="355:70"><call pos:start="355:33" pos:end="355:70"><name pos:start="355:33" pos:end="355:56">gen_helper_vfp_get_fpscr</name><argument_list pos:start="355:57" pos:end="355:70">(<argument pos:start="355:58" pos:end="355:60"><expr pos:start="355:58" pos:end="355:60"><name pos:start="355:58" pos:end="355:60">tmp</name></expr></argument>, <argument pos:start="355:63" pos:end="355:69"><expr pos:start="355:63" pos:end="355:69"><name pos:start="355:63" pos:end="355:69">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <break pos:start="359:29" pos:end="359:34">break;</break>

                        <case pos:start="361:25" pos:end="361:43">case <expr pos:start="361:30" pos:end="361:42"><name pos:start="361:30" pos:end="361:42">ARM_VFP_MVFR2</name></expr>:</case>

                            <if_stmt pos:start="363:29" pos:end="367:29"><if pos:start="363:29" pos:end="367:29">if <condition pos:start="363:32" pos:end="363:67">(<expr pos:start="363:33" pos:end="363:66"><operator pos:start="363:33" pos:end="363:33">!</operator><call pos:start="363:34" pos:end="363:66"><name pos:start="363:34" pos:end="363:47">arm_dc_feature</name><argument_list pos:start="363:48" pos:end="363:66">(<argument pos:start="363:49" pos:end="363:49"><expr pos:start="363:49" pos:end="363:49"><name pos:start="363:49" pos:end="363:49">s</name></expr></argument>, <argument pos:start="363:52" pos:end="363:65"><expr pos:start="363:52" pos:end="363:65"><name pos:start="363:52" pos:end="363:65">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="363:69" pos:end="367:29">{<block_content pos:start="365:33" pos:end="365:41">

                                <return pos:start="365:33" pos:end="365:41">return <expr pos:start="365:40" pos:end="365:40"><literal type="number" pos:start="365:40" pos:end="365:40">1</literal></expr>;</return>

                            </block_content>}</block></if></if_stmt>

                            <comment type="block" pos:start="369:29" pos:end="369:46">/* fall through */</comment>

                        <case pos:start="371:25" pos:end="371:43">case <expr pos:start="371:30" pos:end="371:42"><name pos:start="371:30" pos:end="371:42">ARM_VFP_MVFR0</name></expr>:</case>

                        <case pos:start="373:25" pos:end="373:43">case <expr pos:start="373:30" pos:end="373:42"><name pos:start="373:30" pos:end="373:42">ARM_VFP_MVFR1</name></expr>:</case>

                            <if_stmt pos:start="375:29" pos:end="381:29"><if pos:start="375:29" pos:end="381:29">if <condition pos:start="375:32" pos:end="377:72">(<expr pos:start="375:33" pos:end="377:71"><call pos:start="375:33" pos:end="375:42"><name pos:start="375:33" pos:end="375:39">IS_USER</name><argument_list pos:start="375:40" pos:end="375:42">(<argument pos:start="375:41" pos:end="375:41"><expr pos:start="375:41" pos:end="375:41"><name pos:start="375:41" pos:end="375:41">s</name></expr></argument>)</argument_list></call>

                                <operator pos:start="377:33" pos:end="377:34">||</operator> <operator pos:start="377:36" pos:end="377:36">!</operator><call pos:start="377:37" pos:end="377:71"><name pos:start="377:37" pos:end="377:50">arm_dc_feature</name><argument_list pos:start="377:51" pos:end="377:71">(<argument pos:start="377:52" pos:end="377:52"><expr pos:start="377:52" pos:end="377:52"><name pos:start="377:52" pos:end="377:52">s</name></expr></argument>, <argument pos:start="377:55" pos:end="377:70"><expr pos:start="377:55" pos:end="377:70"><name pos:start="377:55" pos:end="377:70">ARM_FEATURE_MVFR</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="377:74" pos:end="381:29">{<block_content pos:start="379:33" pos:end="379:41">

                                <return pos:start="379:33" pos:end="379:41">return <expr pos:start="379:40" pos:end="379:40"><literal type="number" pos:start="379:40" pos:end="379:40">1</literal></expr>;</return>

                            </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="383:29" pos:end="383:64"><expr pos:start="383:29" pos:end="383:63"><name pos:start="383:29" pos:end="383:31">tmp</name> <operator pos:start="383:33" pos:end="383:33">=</operator> <call pos:start="383:35" pos:end="383:63"><name pos:start="383:35" pos:end="383:48">load_cpu_field</name><argument_list pos:start="383:49" pos:end="383:63">(<argument pos:start="383:50" pos:end="383:62"><expr pos:start="383:50" pos:end="383:62"><name pos:start="383:50" pos:end="383:62"><name pos:start="383:50" pos:end="383:52">vfp</name><operator pos:start="383:53" pos:end="383:53">.</operator><name pos:start="383:54" pos:end="383:58">xregs</name><index pos:start="383:59" pos:end="383:62">[<expr pos:start="383:60" pos:end="383:61"><name pos:start="383:60" pos:end="383:61">rn</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="385:29" pos:end="385:34">break;</break>

                        <default pos:start="387:25" pos:end="387:32">default:</default>

                            <return pos:start="389:29" pos:end="389:37">return <expr pos:start="389:36" pos:end="389:36"><literal type="number" pos:start="389:36" pos:end="389:36">1</literal></expr>;</return>

                        </block_content>}</block></switch>

                    </block_content>}</block></if> <else pos:start="393:23" pos:end="399:21">else <block pos:start="393:28" pos:end="399:21">{<block_content pos:start="395:25" pos:end="397:44">

                        <expr_stmt pos:start="395:25" pos:end="395:47"><expr pos:start="395:25" pos:end="395:46"><call pos:start="395:25" pos:end="395:46"><name pos:start="395:25" pos:end="395:39">gen_mov_F0_vreg</name><argument_list pos:start="395:40" pos:end="395:46">(<argument pos:start="395:41" pos:end="395:41"><expr pos:start="395:41" pos:end="395:41"><literal type="number" pos:start="395:41" pos:end="395:41">0</literal></expr></argument>, <argument pos:start="395:44" pos:end="395:45"><expr pos:start="395:44" pos:end="395:45"><name pos:start="395:44" pos:end="395:45">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="397:25" pos:end="397:44"><expr pos:start="397:25" pos:end="397:43"><name pos:start="397:25" pos:end="397:27">tmp</name> <operator pos:start="397:29" pos:end="397:29">=</operator> <call pos:start="397:31" pos:end="397:43"><name pos:start="397:31" pos:end="397:41">gen_vfp_mrs</name><argument_list pos:start="397:42" pos:end="397:43">()</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="401:21" pos:end="413:21"><if pos:start="401:21" pos:end="409:21">if <condition pos:start="401:24" pos:end="401:33">(<expr pos:start="401:25" pos:end="401:32"><name pos:start="401:25" pos:end="401:26">rd</name> <operator pos:start="401:28" pos:end="401:29">==</operator> <literal type="number" pos:start="401:31" pos:end="401:32">15</literal></expr>)</condition> <block pos:start="401:35" pos:end="409:21">{<block_content pos:start="405:25" pos:end="407:47">

                        <comment type="block" pos:start="403:25" pos:end="403:63">/* Set the 4 flag bits in the CPSR.  */</comment>

                        <expr_stmt pos:start="405:25" pos:end="405:42"><expr pos:start="405:25" pos:end="405:41"><call pos:start="405:25" pos:end="405:41"><name pos:start="405:25" pos:end="405:36">gen_set_nzcv</name><argument_list pos:start="405:37" pos:end="405:41">(<argument pos:start="405:38" pos:end="405:40"><expr pos:start="405:38" pos:end="405:40"><name pos:start="405:38" pos:end="405:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="407:25" pos:end="407:47"><expr pos:start="407:25" pos:end="407:46"><call pos:start="407:25" pos:end="407:46"><name pos:start="407:25" pos:end="407:41">tcg_temp_free_i32</name><argument_list pos:start="407:42" pos:end="407:46">(<argument pos:start="407:43" pos:end="407:45"><expr pos:start="407:43" pos:end="407:45"><name pos:start="407:43" pos:end="407:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="409:23" pos:end="413:21">else <block pos:start="409:28" pos:end="413:21">{<block_content pos:start="411:25" pos:end="411:46">

                        <expr_stmt pos:start="411:25" pos:end="411:46"><expr pos:start="411:25" pos:end="411:45"><call pos:start="411:25" pos:end="411:45"><name pos:start="411:25" pos:end="411:33">store_reg</name><argument_list pos:start="411:34" pos:end="411:45">(<argument pos:start="411:35" pos:end="411:35"><expr pos:start="411:35" pos:end="411:35"><name pos:start="411:35" pos:end="411:35">s</name></expr></argument>, <argument pos:start="411:38" pos:end="411:39"><expr pos:start="411:38" pos:end="411:39"><name pos:start="411:38" pos:end="411:39">rd</name></expr></argument>, <argument pos:start="411:42" pos:end="411:44"><expr pos:start="411:42" pos:end="411:44"><name pos:start="411:42" pos:end="411:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="415:19" pos:end="501:17">else <block pos:start="415:24" pos:end="501:17">{<block_content pos:start="419:21" pos:end="499:21">

                    <comment type="block" pos:start="417:21" pos:end="417:34">/* arm-&gt;vfp */</comment>

                    <if_stmt pos:start="419:21" pos:end="499:21"><if pos:start="419:21" pos:end="491:21">if <condition pos:start="419:24" pos:end="419:41">(<expr pos:start="419:25" pos:end="419:40"><name pos:start="419:25" pos:end="419:28">insn</name> <operator pos:start="419:30" pos:end="419:30">&amp;</operator> <operator pos:start="419:32" pos:end="419:32">(</operator><literal type="number" pos:start="419:33" pos:end="419:33">1</literal> <operator pos:start="419:35" pos:end="419:36">&lt;&lt;</operator> <literal type="number" pos:start="419:38" pos:end="419:39">21</literal><operator pos:start="419:40" pos:end="419:40">)</operator></expr>)</condition> <block pos:start="419:43" pos:end="491:21">{<block_content pos:start="421:25" pos:end="489:25">

                        <expr_stmt pos:start="421:25" pos:end="421:33"><expr pos:start="421:25" pos:end="421:32"><name pos:start="421:25" pos:end="421:26">rn</name> <operator pos:start="421:28" pos:end="421:30">&gt;&gt;=</operator> <literal type="number" pos:start="421:32" pos:end="421:32">1</literal></expr>;</expr_stmt>

                        <comment type="block" pos:start="423:25" pos:end="423:45">/* system register */</comment>

                        <switch pos:start="425:25" pos:end="489:25">switch <condition pos:start="425:32" pos:end="425:35">(<expr pos:start="425:33" pos:end="425:34"><name pos:start="425:33" pos:end="425:34">rn</name></expr>)</condition> <block pos:start="425:37" pos:end="489:25">{<block_content pos:start="427:25" pos:end="487:37">

                        <case pos:start="427:25" pos:end="427:43">case <expr pos:start="427:30" pos:end="427:42"><name pos:start="427:30" pos:end="427:42">ARM_VFP_FPSID</name></expr>:</case>

                        <case pos:start="429:25" pos:end="429:43">case <expr pos:start="429:30" pos:end="429:42"><name pos:start="429:30" pos:end="429:42">ARM_VFP_MVFR0</name></expr>:</case>

                        <case pos:start="431:25" pos:end="431:43">case <expr pos:start="431:30" pos:end="431:42"><name pos:start="431:30" pos:end="431:42">ARM_VFP_MVFR1</name></expr>:</case>

                            <comment type="block" pos:start="433:29" pos:end="433:54">/* Writes are ignored.  */</comment>

                            <break pos:start="435:29" pos:end="435:34">break;</break>

                        <case pos:start="437:25" pos:end="437:43">case <expr pos:start="437:30" pos:end="437:42"><name pos:start="437:30" pos:end="437:42">ARM_VFP_FPSCR</name></expr>:</case>

                            <expr_stmt pos:start="439:29" pos:end="439:50"><expr pos:start="439:29" pos:end="439:49"><name pos:start="439:29" pos:end="439:31">tmp</name> <operator pos:start="439:33" pos:end="439:33">=</operator> <call pos:start="439:35" pos:end="439:49"><name pos:start="439:35" pos:end="439:42">load_reg</name><argument_list pos:start="439:43" pos:end="439:49">(<argument pos:start="439:44" pos:end="439:44"><expr pos:start="439:44" pos:end="439:44"><name pos:start="439:44" pos:end="439:44">s</name></expr></argument>, <argument pos:start="439:47" pos:end="439:48"><expr pos:start="439:47" pos:end="439:48"><name pos:start="439:47" pos:end="439:48">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="441:29" pos:end="441:67"><expr pos:start="441:29" pos:end="441:66"><call pos:start="441:29" pos:end="441:66"><name pos:start="441:29" pos:end="441:52">gen_helper_vfp_set_fpscr</name><argument_list pos:start="441:53" pos:end="441:66">(<argument pos:start="441:54" pos:end="441:60"><expr pos:start="441:54" pos:end="441:60"><name pos:start="441:54" pos:end="441:60">cpu_env</name></expr></argument>, <argument pos:start="441:63" pos:end="441:65"><expr pos:start="441:63" pos:end="441:65"><name pos:start="441:63" pos:end="441:65">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="443:29" pos:end="443:51"><expr pos:start="443:29" pos:end="443:50"><call pos:start="443:29" pos:end="443:50"><name pos:start="443:29" pos:end="443:45">tcg_temp_free_i32</name><argument_list pos:start="443:46" pos:end="443:50">(<argument pos:start="443:47" pos:end="443:49"><expr pos:start="443:47" pos:end="443:49"><name pos:start="443:47" pos:end="443:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="445:29" pos:end="445:45"><expr pos:start="445:29" pos:end="445:44"><call pos:start="445:29" pos:end="445:44"><name pos:start="445:29" pos:end="445:41">gen_lookup_tb</name><argument_list pos:start="445:42" pos:end="445:44">(<argument pos:start="445:43" pos:end="445:43"><expr pos:start="445:43" pos:end="445:43"><name pos:start="445:43" pos:end="445:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="447:29" pos:end="447:34">break;</break>

                        <case pos:start="449:25" pos:end="449:43">case <expr pos:start="449:30" pos:end="449:42"><name pos:start="449:30" pos:end="449:42">ARM_VFP_FPEXC</name></expr>:</case>

                            <if_stmt pos:start="451:29" pos:end="453:41"><if pos:start="451:29" pos:end="453:41">if <condition pos:start="451:32" pos:end="451:43">(<expr pos:start="451:33" pos:end="451:42"><call pos:start="451:33" pos:end="451:42"><name pos:start="451:33" pos:end="451:39">IS_USER</name><argument_list pos:start="451:40" pos:end="451:42">(<argument pos:start="451:41" pos:end="451:41"><expr pos:start="451:41" pos:end="451:41"><name pos:start="451:41" pos:end="451:41">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="453:33" pos:end="453:41"><block_content pos:start="453:33" pos:end="453:41">

                                <return pos:start="453:33" pos:end="453:41">return <expr pos:start="453:40" pos:end="453:40"><literal type="number" pos:start="453:40" pos:end="453:40">1</literal></expr>;</return></block_content></block></if></if_stmt>

                            <comment type="block" pos:start="455:29" pos:end="457:63">/* TODO: VFP subarchitecture support.

                             * For now, keep the EN bit only */</comment>

                            <expr_stmt pos:start="459:29" pos:end="459:50"><expr pos:start="459:29" pos:end="459:49"><name pos:start="459:29" pos:end="459:31">tmp</name> <operator pos:start="459:33" pos:end="459:33">=</operator> <call pos:start="459:35" pos:end="459:49"><name pos:start="459:35" pos:end="459:42">load_reg</name><argument_list pos:start="459:43" pos:end="459:49">(<argument pos:start="459:44" pos:end="459:44"><expr pos:start="459:44" pos:end="459:44"><name pos:start="459:44" pos:end="459:44">s</name></expr></argument>, <argument pos:start="459:47" pos:end="459:48"><expr pos:start="459:47" pos:end="459:48"><name pos:start="459:47" pos:end="459:48">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="461:29" pos:end="461:64"><expr pos:start="461:29" pos:end="461:63"><call pos:start="461:29" pos:end="461:63"><name pos:start="461:29" pos:end="461:44">tcg_gen_andi_i32</name><argument_list pos:start="461:45" pos:end="461:63">(<argument pos:start="461:46" pos:end="461:48"><expr pos:start="461:46" pos:end="461:48"><name pos:start="461:46" pos:end="461:48">tmp</name></expr></argument>, <argument pos:start="461:51" pos:end="461:53"><expr pos:start="461:51" pos:end="461:53"><name pos:start="461:51" pos:end="461:53">tmp</name></expr></argument>, <argument pos:start="461:56" pos:end="461:62"><expr pos:start="461:56" pos:end="461:62"><literal type="number" pos:start="461:56" pos:end="461:56">1</literal> <operator pos:start="461:58" pos:end="461:59">&lt;&lt;</operator> <literal type="number" pos:start="461:61" pos:end="461:62">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="463:29" pos:end="463:64"><expr pos:start="463:29" pos:end="463:63"><call pos:start="463:29" pos:end="463:63"><name pos:start="463:29" pos:end="463:43">store_cpu_field</name><argument_list pos:start="463:44" pos:end="463:63">(<argument pos:start="463:45" pos:end="463:47"><expr pos:start="463:45" pos:end="463:47"><name pos:start="463:45" pos:end="463:47">tmp</name></expr></argument>, <argument pos:start="463:50" pos:end="463:62"><expr pos:start="463:50" pos:end="463:62"><name pos:start="463:50" pos:end="463:62"><name pos:start="463:50" pos:end="463:52">vfp</name><operator pos:start="463:53" pos:end="463:53">.</operator><name pos:start="463:54" pos:end="463:58">xregs</name><index pos:start="463:59" pos:end="463:62">[<expr pos:start="463:60" pos:end="463:61"><name pos:start="463:60" pos:end="463:61">rn</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="465:29" pos:end="465:45"><expr pos:start="465:29" pos:end="465:44"><call pos:start="465:29" pos:end="465:44"><name pos:start="465:29" pos:end="465:41">gen_lookup_tb</name><argument_list pos:start="465:42" pos:end="465:44">(<argument pos:start="465:43" pos:end="465:43"><expr pos:start="465:43" pos:end="465:43"><name pos:start="465:43" pos:end="465:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="467:29" pos:end="467:34">break;</break>

                        <case pos:start="469:25" pos:end="469:44">case <expr pos:start="469:30" pos:end="469:43"><name pos:start="469:30" pos:end="469:43">ARM_VFP_FPINST</name></expr>:</case>

                        <case pos:start="471:25" pos:end="471:45">case <expr pos:start="471:30" pos:end="471:44"><name pos:start="471:30" pos:end="471:44">ARM_VFP_FPINST2</name></expr>:</case>

                            <if_stmt pos:start="473:29" pos:end="477:29"><if pos:start="473:29" pos:end="477:29">if <condition pos:start="473:32" pos:end="473:43">(<expr pos:start="473:33" pos:end="473:42"><call pos:start="473:33" pos:end="473:42"><name pos:start="473:33" pos:end="473:39">IS_USER</name><argument_list pos:start="473:40" pos:end="473:42">(<argument pos:start="473:41" pos:end="473:41"><expr pos:start="473:41" pos:end="473:41"><name pos:start="473:41" pos:end="473:41">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="473:45" pos:end="477:29">{<block_content pos:start="475:33" pos:end="475:41">

                                <return pos:start="475:33" pos:end="475:41">return <expr pos:start="475:40" pos:end="475:40"><literal type="number" pos:start="475:40" pos:end="475:40">1</literal></expr>;</return>

                            </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="479:29" pos:end="479:50"><expr pos:start="479:29" pos:end="479:49"><name pos:start="479:29" pos:end="479:31">tmp</name> <operator pos:start="479:33" pos:end="479:33">=</operator> <call pos:start="479:35" pos:end="479:49"><name pos:start="479:35" pos:end="479:42">load_reg</name><argument_list pos:start="479:43" pos:end="479:49">(<argument pos:start="479:44" pos:end="479:44"><expr pos:start="479:44" pos:end="479:44"><name pos:start="479:44" pos:end="479:44">s</name></expr></argument>, <argument pos:start="479:47" pos:end="479:48"><expr pos:start="479:47" pos:end="479:48"><name pos:start="479:47" pos:end="479:48">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="481:29" pos:end="481:64"><expr pos:start="481:29" pos:end="481:63"><call pos:start="481:29" pos:end="481:63"><name pos:start="481:29" pos:end="481:43">store_cpu_field</name><argument_list pos:start="481:44" pos:end="481:63">(<argument pos:start="481:45" pos:end="481:47"><expr pos:start="481:45" pos:end="481:47"><name pos:start="481:45" pos:end="481:47">tmp</name></expr></argument>, <argument pos:start="481:50" pos:end="481:62"><expr pos:start="481:50" pos:end="481:62"><name pos:start="481:50" pos:end="481:62"><name pos:start="481:50" pos:end="481:52">vfp</name><operator pos:start="481:53" pos:end="481:53">.</operator><name pos:start="481:54" pos:end="481:58">xregs</name><index pos:start="481:59" pos:end="481:62">[<expr pos:start="481:60" pos:end="481:61"><name pos:start="481:60" pos:end="481:61">rn</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="483:29" pos:end="483:34">break;</break>

                        <default pos:start="485:25" pos:end="485:32">default:</default>

                            <return pos:start="487:29" pos:end="487:37">return <expr pos:start="487:36" pos:end="487:36"><literal type="number" pos:start="487:36" pos:end="487:36">1</literal></expr>;</return>

                        </block_content>}</block></switch>

                    </block_content>}</block></if> <else pos:start="491:23" pos:end="499:21">else <block pos:start="491:28" pos:end="499:21">{<block_content pos:start="493:25" pos:end="497:47">

                        <expr_stmt pos:start="493:25" pos:end="493:46"><expr pos:start="493:25" pos:end="493:45"><name pos:start="493:25" pos:end="493:27">tmp</name> <operator pos:start="493:29" pos:end="493:29">=</operator> <call pos:start="493:31" pos:end="493:45"><name pos:start="493:31" pos:end="493:38">load_reg</name><argument_list pos:start="493:39" pos:end="493:45">(<argument pos:start="493:40" pos:end="493:40"><expr pos:start="493:40" pos:end="493:40"><name pos:start="493:40" pos:end="493:40">s</name></expr></argument>, <argument pos:start="493:43" pos:end="493:44"><expr pos:start="493:43" pos:end="493:44"><name pos:start="493:43" pos:end="493:44">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="495:25" pos:end="495:41"><expr pos:start="495:25" pos:end="495:40"><call pos:start="495:25" pos:end="495:40"><name pos:start="495:25" pos:end="495:35">gen_vfp_msr</name><argument_list pos:start="495:36" pos:end="495:40">(<argument pos:start="495:37" pos:end="495:39"><expr pos:start="495:37" pos:end="495:39"><name pos:start="495:37" pos:end="495:39">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="497:25" pos:end="497:47"><expr pos:start="497:25" pos:end="497:46"><call pos:start="497:25" pos:end="497:46"><name pos:start="497:25" pos:end="497:39">gen_mov_vreg_F0</name><argument_list pos:start="497:40" pos:end="497:46">(<argument pos:start="497:41" pos:end="497:41"><expr pos:start="497:41" pos:end="497:41"><literal type="number" pos:start="497:41" pos:end="497:41">0</literal></expr></argument>, <argument pos:start="497:44" pos:end="497:45"><expr pos:start="497:44" pos:end="497:45"><name pos:start="497:44" pos:end="497:45">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="505:11" pos:end="1537:9">else <block pos:start="505:16" pos:end="1537:9">{<block_content pos:start="511:13" pos:end="1535:13">

            <comment type="block" pos:start="507:13" pos:end="507:33">/* data processing */</comment>

            <comment type="block" pos:start="509:13" pos:end="509:58">/* The opcode is in bits 23, 21, 20 and 6.  */</comment>

            <expr_stmt pos:start="511:13" pos:end="511:77"><expr pos:start="511:13" pos:end="511:76"><name pos:start="511:13" pos:end="511:14">op</name> <operator pos:start="511:16" pos:end="511:16">=</operator> <operator pos:start="511:18" pos:end="511:18">(</operator><operator pos:start="511:19" pos:end="511:19">(</operator><name pos:start="511:20" pos:end="511:23">insn</name> <operator pos:start="511:25" pos:end="511:26">&gt;&gt;</operator> <literal type="number" pos:start="511:28" pos:end="511:29">20</literal><operator pos:start="511:30" pos:end="511:30">)</operator> <operator pos:start="511:32" pos:end="511:32">&amp;</operator> <literal type="number" pos:start="511:34" pos:end="511:34">8</literal><operator pos:start="511:35" pos:end="511:35">)</operator> <operator pos:start="511:37" pos:end="511:37">|</operator> <operator pos:start="511:39" pos:end="511:39">(</operator><operator pos:start="511:40" pos:end="511:40">(</operator><name pos:start="511:41" pos:end="511:44">insn</name> <operator pos:start="511:46" pos:end="511:47">&gt;&gt;</operator> <literal type="number" pos:start="511:49" pos:end="511:50">19</literal><operator pos:start="511:51" pos:end="511:51">)</operator> <operator pos:start="511:53" pos:end="511:53">&amp;</operator> <literal type="number" pos:start="511:55" pos:end="511:55">6</literal><operator pos:start="511:56" pos:end="511:56">)</operator> <operator pos:start="511:58" pos:end="511:58">|</operator> <operator pos:start="511:60" pos:end="511:60">(</operator><operator pos:start="511:61" pos:end="511:61">(</operator><name pos:start="511:62" pos:end="511:65">insn</name> <operator pos:start="511:67" pos:end="511:68">&gt;&gt;</operator> <literal type="number" pos:start="511:70" pos:end="511:70">6</literal><operator pos:start="511:71" pos:end="511:71">)</operator> <operator pos:start="511:73" pos:end="511:73">&amp;</operator> <literal type="number" pos:start="511:75" pos:end="511:75">1</literal><operator pos:start="511:76" pos:end="511:76">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="513:13" pos:end="591:13"><if pos:start="513:13" pos:end="567:13">if <condition pos:start="513:16" pos:end="513:19">(<expr pos:start="513:17" pos:end="513:18"><name pos:start="513:17" pos:end="513:18">dp</name></expr>)</condition> <block pos:start="513:21" pos:end="567:13">{<block_content pos:start="515:17" pos:end="565:17">

                <if_stmt pos:start="515:17" pos:end="527:17"><if pos:start="515:17" pos:end="521:17">if <condition pos:start="515:20" pos:end="515:29">(<expr pos:start="515:21" pos:end="515:28"><name pos:start="515:21" pos:end="515:22">op</name> <operator pos:start="515:24" pos:end="515:25">==</operator> <literal type="number" pos:start="515:27" pos:end="515:28">15</literal></expr>)</condition> <block pos:start="515:31" pos:end="521:17">{<block_content pos:start="519:21" pos:end="519:67">

                    <comment type="block" pos:start="517:21" pos:end="517:38">/* rn is opcode */</comment>

                    <expr_stmt pos:start="519:21" pos:end="519:67"><expr pos:start="519:21" pos:end="519:66"><name pos:start="519:21" pos:end="519:22">rn</name> <operator pos:start="519:24" pos:end="519:24">=</operator> <operator pos:start="519:26" pos:end="519:26">(</operator><operator pos:start="519:27" pos:end="519:27">(</operator><name pos:start="519:28" pos:end="519:31">insn</name> <operator pos:start="519:33" pos:end="519:34">&gt;&gt;</operator> <literal type="number" pos:start="519:36" pos:end="519:37">15</literal><operator pos:start="519:38" pos:end="519:38">)</operator> <operator pos:start="519:40" pos:end="519:40">&amp;</operator> <literal type="number" pos:start="519:42" pos:end="519:45">0x1e</literal><operator pos:start="519:46" pos:end="519:46">)</operator> <operator pos:start="519:48" pos:end="519:48">|</operator> <operator pos:start="519:50" pos:end="519:50">(</operator><operator pos:start="519:51" pos:end="519:51">(</operator><name pos:start="519:52" pos:end="519:55">insn</name> <operator pos:start="519:57" pos:end="519:58">&gt;&gt;</operator> <literal type="number" pos:start="519:60" pos:end="519:60">7</literal><operator pos:start="519:61" pos:end="519:61">)</operator> <operator pos:start="519:63" pos:end="519:63">&amp;</operator> <literal type="number" pos:start="519:65" pos:end="519:65">1</literal><operator pos:start="519:66" pos:end="519:66">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="521:19" pos:end="527:17">else <block pos:start="521:24" pos:end="527:17">{<block_content pos:start="525:21" pos:end="525:41">

                    <comment type="block" pos:start="523:21" pos:end="523:47">/* rn is register number */</comment>

                    <expr_stmt pos:start="525:21" pos:end="525:41"><expr pos:start="525:21" pos:end="525:40"><call pos:start="525:21" pos:end="525:40"><name pos:start="525:21" pos:end="525:30">VFP_DREG_N</name><argument_list pos:start="525:31" pos:end="525:40">(<argument pos:start="525:32" pos:end="525:33"><expr pos:start="525:32" pos:end="525:33"><name pos:start="525:32" pos:end="525:33">rn</name></expr></argument>, <argument pos:start="525:36" pos:end="525:39"><expr pos:start="525:36" pos:end="525:39"><name pos:start="525:36" pos:end="525:39">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="531:17" pos:end="543:17"><if pos:start="531:17" pos:end="539:17">if <condition pos:start="531:20" pos:end="533:55">(<expr pos:start="531:21" pos:end="533:54"><name pos:start="531:21" pos:end="531:22">op</name> <operator pos:start="531:24" pos:end="531:25">==</operator> <literal type="number" pos:start="531:27" pos:end="531:28">15</literal> <operator pos:start="531:30" pos:end="531:31">&amp;&amp;</operator> <operator pos:start="531:33" pos:end="531:33">(</operator><name pos:start="531:34" pos:end="531:35">rn</name> <operator pos:start="531:37" pos:end="531:38">==</operator> <literal type="number" pos:start="531:40" pos:end="531:41">15</literal> <operator pos:start="531:43" pos:end="531:44">||</operator> <operator pos:start="531:46" pos:end="531:46">(</operator><operator pos:start="531:47" pos:end="531:47">(</operator><name pos:start="531:48" pos:end="531:49">rn</name> <operator pos:start="531:51" pos:end="531:51">&amp;</operator> <literal type="number" pos:start="531:53" pos:end="531:56">0x1c</literal><operator pos:start="531:57" pos:end="531:57">)</operator> <operator pos:start="531:59" pos:end="531:60">==</operator> <literal type="number" pos:start="531:62" pos:end="531:65">0x18</literal><operator pos:start="531:66" pos:end="531:66">)</operator> <operator pos:start="531:68" pos:end="531:69">||</operator>

                                 <operator pos:start="533:34" pos:end="533:34">(</operator><operator pos:start="533:35" pos:end="533:35">(</operator><name pos:start="533:36" pos:end="533:37">rn</name> <operator pos:start="533:39" pos:end="533:39">&amp;</operator> <literal type="number" pos:start="533:41" pos:end="533:44">0x1e</literal><operator pos:start="533:45" pos:end="533:45">)</operator> <operator pos:start="533:47" pos:end="533:48">==</operator> <literal type="number" pos:start="533:50" pos:end="533:52">0x6</literal><operator pos:start="533:53" pos:end="533:53">)</operator><operator pos:start="533:54" pos:end="533:54">)</operator></expr>)</condition> <block pos:start="533:57" pos:end="539:17">{<block_content pos:start="537:21" pos:end="537:42">

                    <comment type="block" pos:start="535:21" pos:end="535:72">/* Integer or single/half precision destination.  */</comment>

                    <expr_stmt pos:start="537:21" pos:end="537:42"><expr pos:start="537:21" pos:end="537:41"><name pos:start="537:21" pos:end="537:22">rd</name> <operator pos:start="537:24" pos:end="537:24">=</operator> <call pos:start="537:26" pos:end="537:41"><name pos:start="537:26" pos:end="537:35">VFP_SREG_D</name><argument_list pos:start="537:36" pos:end="537:41">(<argument pos:start="537:37" pos:end="537:40"><expr pos:start="537:37" pos:end="537:40"><name pos:start="537:37" pos:end="537:40">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="539:19" pos:end="543:17">else <block pos:start="539:24" pos:end="543:17">{<block_content pos:start="541:21" pos:end="541:41">

                    <expr_stmt pos:start="541:21" pos:end="541:41"><expr pos:start="541:21" pos:end="541:40"><call pos:start="541:21" pos:end="541:40"><name pos:start="541:21" pos:end="541:30">VFP_DREG_D</name><argument_list pos:start="541:31" pos:end="541:40">(<argument pos:start="541:32" pos:end="541:33"><expr pos:start="541:32" pos:end="541:33"><name pos:start="541:32" pos:end="541:33">rd</name></expr></argument>, <argument pos:start="541:36" pos:end="541:39"><expr pos:start="541:36" pos:end="541:39"><name pos:start="541:36" pos:end="541:39">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="545:17" pos:end="565:17"><if pos:start="545:17" pos:end="561:17">if <condition pos:start="545:20" pos:end="549:43">(<expr pos:start="545:21" pos:end="549:42"><name pos:start="545:21" pos:end="545:22">op</name> <operator pos:start="545:24" pos:end="545:25">==</operator> <literal type="number" pos:start="545:27" pos:end="545:28">15</literal> <operator pos:start="545:30" pos:end="545:31">&amp;&amp;</operator>

                    <operator pos:start="547:21" pos:end="547:21">(</operator><operator pos:start="547:22" pos:end="547:22">(</operator><operator pos:start="547:23" pos:end="547:23">(</operator><name pos:start="547:24" pos:end="547:25">rn</name> <operator pos:start="547:27" pos:end="547:27">&amp;</operator> <literal type="number" pos:start="547:29" pos:end="547:32">0x1c</literal><operator pos:start="547:33" pos:end="547:33">)</operator> <operator pos:start="547:35" pos:end="547:36">==</operator> <literal type="number" pos:start="547:38" pos:end="547:41">0x10</literal><operator pos:start="547:42" pos:end="547:42">)</operator> <operator pos:start="547:44" pos:end="547:45">||</operator> <operator pos:start="547:47" pos:end="547:47">(</operator><operator pos:start="547:48" pos:end="547:48">(</operator><name pos:start="547:49" pos:end="547:50">rn</name> <operator pos:start="547:52" pos:end="547:52">&amp;</operator> <literal type="number" pos:start="547:54" pos:end="547:57">0x14</literal><operator pos:start="547:58" pos:end="547:58">)</operator> <operator pos:start="547:60" pos:end="547:61">==</operator> <literal type="number" pos:start="547:63" pos:end="547:66">0x14</literal><operator pos:start="547:67" pos:end="547:67">)</operator> <operator pos:start="547:69" pos:end="547:70">||</operator>

                     <operator pos:start="549:22" pos:end="549:22">(</operator><operator pos:start="549:23" pos:end="549:23">(</operator><name pos:start="549:24" pos:end="549:25">rn</name> <operator pos:start="549:27" pos:end="549:27">&amp;</operator> <literal type="number" pos:start="549:29" pos:end="549:32">0x1e</literal><operator pos:start="549:33" pos:end="549:33">)</operator> <operator pos:start="549:35" pos:end="549:36">==</operator> <literal type="number" pos:start="549:38" pos:end="549:40">0x4</literal><operator pos:start="549:41" pos:end="549:41">)</operator><operator pos:start="549:42" pos:end="549:42">)</operator></expr>)</condition> <block pos:start="549:45" pos:end="561:17">{<block_content pos:start="559:21" pos:end="559:42">

                    <comment type="block" pos:start="551:21" pos:end="557:23">/* VCVT from int or half precision is always from S reg

                     * regardless of dp bit. VCVT with immediate frac_bits

                     * has same format as SREG_M.

                     */</comment>

                    <expr_stmt pos:start="559:21" pos:end="559:42"><expr pos:start="559:21" pos:end="559:41"><name pos:start="559:21" pos:end="559:22">rm</name> <operator pos:start="559:24" pos:end="559:24">=</operator> <call pos:start="559:26" pos:end="559:41"><name pos:start="559:26" pos:end="559:35">VFP_SREG_M</name><argument_list pos:start="559:36" pos:end="559:41">(<argument pos:start="559:37" pos:end="559:40"><expr pos:start="559:37" pos:end="559:40"><name pos:start="559:37" pos:end="559:40">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="561:19" pos:end="565:17">else <block pos:start="561:24" pos:end="565:17">{<block_content pos:start="563:21" pos:end="563:41">

                    <expr_stmt pos:start="563:21" pos:end="563:41"><expr pos:start="563:21" pos:end="563:40"><call pos:start="563:21" pos:end="563:40"><name pos:start="563:21" pos:end="563:30">VFP_DREG_M</name><argument_list pos:start="563:31" pos:end="563:40">(<argument pos:start="563:32" pos:end="563:33"><expr pos:start="563:32" pos:end="563:33"><name pos:start="563:32" pos:end="563:33">rm</name></expr></argument>, <argument pos:start="563:36" pos:end="563:39"><expr pos:start="563:36" pos:end="563:39"><name pos:start="563:36" pos:end="563:39">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="567:15" pos:end="591:13">else <block pos:start="567:20" pos:end="591:13">{<block_content pos:start="569:17" pos:end="589:38">

                <expr_stmt pos:start="569:17" pos:end="569:38"><expr pos:start="569:17" pos:end="569:37"><name pos:start="569:17" pos:end="569:18">rn</name> <operator pos:start="569:20" pos:end="569:20">=</operator> <call pos:start="569:22" pos:end="569:37"><name pos:start="569:22" pos:end="569:31">VFP_SREG_N</name><argument_list pos:start="569:32" pos:end="569:37">(<argument pos:start="569:33" pos:end="569:36"><expr pos:start="569:33" pos:end="569:36"><name pos:start="569:33" pos:end="569:36">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="571:17" pos:end="581:17"><if pos:start="571:17" pos:end="577:17">if <condition pos:start="571:20" pos:end="571:41">(<expr pos:start="571:21" pos:end="571:40"><name pos:start="571:21" pos:end="571:22">op</name> <operator pos:start="571:24" pos:end="571:25">==</operator> <literal type="number" pos:start="571:27" pos:end="571:28">15</literal> <operator pos:start="571:30" pos:end="571:31">&amp;&amp;</operator> <name pos:start="571:33" pos:end="571:34">rn</name> <operator pos:start="571:36" pos:end="571:37">==</operator> <literal type="number" pos:start="571:39" pos:end="571:40">15</literal></expr>)</condition> <block pos:start="571:43" pos:end="577:17">{<block_content pos:start="575:21" pos:end="575:41">

                    <comment type="block" pos:start="573:21" pos:end="573:56">/* Double precision destination.  */</comment>

                    <expr_stmt pos:start="575:21" pos:end="575:41"><expr pos:start="575:21" pos:end="575:40"><call pos:start="575:21" pos:end="575:40"><name pos:start="575:21" pos:end="575:30">VFP_DREG_D</name><argument_list pos:start="575:31" pos:end="575:40">(<argument pos:start="575:32" pos:end="575:33"><expr pos:start="575:32" pos:end="575:33"><name pos:start="575:32" pos:end="575:33">rd</name></expr></argument>, <argument pos:start="575:36" pos:end="575:39"><expr pos:start="575:36" pos:end="575:39"><name pos:start="575:36" pos:end="575:39">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="577:19" pos:end="581:17">else <block pos:start="577:24" pos:end="581:17">{<block_content pos:start="579:21" pos:end="579:42">

                    <expr_stmt pos:start="579:21" pos:end="579:42"><expr pos:start="579:21" pos:end="579:41"><name pos:start="579:21" pos:end="579:22">rd</name> <operator pos:start="579:24" pos:end="579:24">=</operator> <call pos:start="579:26" pos:end="579:41"><name pos:start="579:26" pos:end="579:35">VFP_SREG_D</name><argument_list pos:start="579:36" pos:end="579:41">(<argument pos:start="579:37" pos:end="579:40"><expr pos:start="579:37" pos:end="579:40"><name pos:start="579:37" pos:end="579:40">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <comment type="block" pos:start="583:17" pos:end="587:19">/* NB that we implicitly rely on the encoding for the frac_bits

                 * in VCVT of fixed to float being the same as that of an SREG_M

                 */</comment>

                <expr_stmt pos:start="589:17" pos:end="589:38"><expr pos:start="589:17" pos:end="589:37"><name pos:start="589:17" pos:end="589:18">rm</name> <operator pos:start="589:20" pos:end="589:20">=</operator> <call pos:start="589:22" pos:end="589:37"><name pos:start="589:22" pos:end="589:31">VFP_SREG_M</name><argument_list pos:start="589:32" pos:end="589:37">(<argument pos:start="589:33" pos:end="589:36"><expr pos:start="589:33" pos:end="589:36"><name pos:start="589:33" pos:end="589:36">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="595:13" pos:end="595:32"><expr pos:start="595:13" pos:end="595:31"><name pos:start="595:13" pos:end="595:18">veclen</name> <operator pos:start="595:20" pos:end="595:20">=</operator> <name pos:start="595:22" pos:end="595:31"><name pos:start="595:22" pos:end="595:22">s</name><operator pos:start="595:23" pos:end="595:24">-&gt;</operator><name pos:start="595:25" pos:end="595:31">vec_len</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="597:13" pos:end="599:27"><if pos:start="597:13" pos:end="599:27">if <condition pos:start="597:16" pos:end="597:35">(<expr pos:start="597:17" pos:end="597:34"><name pos:start="597:17" pos:end="597:18">op</name> <operator pos:start="597:20" pos:end="597:21">==</operator> <literal type="number" pos:start="597:23" pos:end="597:24">15</literal> <operator pos:start="597:26" pos:end="597:27">&amp;&amp;</operator> <name pos:start="597:29" pos:end="597:30">rn</name> <operator pos:start="597:32" pos:end="597:32">&gt;</operator> <literal type="number" pos:start="597:34" pos:end="597:34">3</literal></expr>)</condition><block type="pseudo" pos:start="599:17" pos:end="599:27"><block_content pos:start="599:17" pos:end="599:27">

                <expr_stmt pos:start="599:17" pos:end="599:27"><expr pos:start="599:17" pos:end="599:26"><name pos:start="599:17" pos:end="599:22">veclen</name> <operator pos:start="599:24" pos:end="599:24">=</operator> <literal type="number" pos:start="599:26" pos:end="599:26">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="603:13" pos:end="603:45">/* Shut up compiler warnings.  */</comment>

            <expr_stmt pos:start="605:13" pos:end="605:24"><expr pos:start="605:13" pos:end="605:23"><name pos:start="605:13" pos:end="605:19">delta_m</name> <operator pos:start="605:21" pos:end="605:21">=</operator> <literal type="number" pos:start="605:23" pos:end="605:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="607:13" pos:end="607:24"><expr pos:start="607:13" pos:end="607:23"><name pos:start="607:13" pos:end="607:19">delta_d</name> <operator pos:start="607:21" pos:end="607:21">=</operator> <literal type="number" pos:start="607:23" pos:end="607:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="609:13" pos:end="609:26"><expr pos:start="609:13" pos:end="609:25"><name pos:start="609:13" pos:end="609:21">bank_mask</name> <operator pos:start="609:23" pos:end="609:23">=</operator> <literal type="number" pos:start="609:25" pos:end="609:25">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="613:13" pos:end="661:13"><if pos:start="613:13" pos:end="661:13">if <condition pos:start="613:16" pos:end="613:27">(<expr pos:start="613:17" pos:end="613:26"><name pos:start="613:17" pos:end="613:22">veclen</name> <operator pos:start="613:24" pos:end="613:24">&gt;</operator> <literal type="number" pos:start="613:26" pos:end="613:26">0</literal></expr>)</condition> <block pos:start="613:29" pos:end="661:13">{<block_content pos:start="615:17" pos:end="659:17">

                <if_stmt pos:start="615:17" pos:end="621:37"><if pos:start="615:17" pos:end="617:36">if <condition pos:start="615:20" pos:end="615:23">(<expr pos:start="615:21" pos:end="615:22"><name pos:start="615:21" pos:end="615:22">dp</name></expr>)</condition><block type="pseudo" pos:start="617:21" pos:end="617:36"><block_content pos:start="617:21" pos:end="617:36">

                    <expr_stmt pos:start="617:21" pos:end="617:36"><expr pos:start="617:21" pos:end="617:35"><name pos:start="617:21" pos:end="617:29">bank_mask</name> <operator pos:start="617:31" pos:end="617:31">=</operator> <literal type="number" pos:start="617:33" pos:end="617:35">0xc</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="619:17" pos:end="621:37">else<block type="pseudo" pos:start="621:21" pos:end="621:37"><block_content pos:start="621:21" pos:end="621:37">

                    <expr_stmt pos:start="621:21" pos:end="621:37"><expr pos:start="621:21" pos:end="621:36"><name pos:start="621:21" pos:end="621:29">bank_mask</name> <operator pos:start="621:31" pos:end="621:31">=</operator> <literal type="number" pos:start="621:33" pos:end="621:36">0x18</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <comment type="block" pos:start="625:17" pos:end="625:72">/* Figure out what type of vector operation this is.  */</comment>

                <if_stmt pos:start="627:17" pos:end="659:17"><if pos:start="627:17" pos:end="633:17">if <condition pos:start="627:20" pos:end="627:42">(<expr pos:start="627:21" pos:end="627:41"><operator pos:start="627:21" pos:end="627:21">(</operator><name pos:start="627:22" pos:end="627:23">rd</name> <operator pos:start="627:25" pos:end="627:25">&amp;</operator> <name pos:start="627:27" pos:end="627:35">bank_mask</name><operator pos:start="627:36" pos:end="627:36">)</operator> <operator pos:start="627:38" pos:end="627:39">==</operator> <literal type="number" pos:start="627:41" pos:end="627:41">0</literal></expr>)</condition> <block pos:start="627:44" pos:end="633:17">{<block_content pos:start="631:21" pos:end="631:31">

                    <comment type="block" pos:start="629:21" pos:end="629:32">/* scalar */</comment>

                    <expr_stmt pos:start="631:21" pos:end="631:31"><expr pos:start="631:21" pos:end="631:30"><name pos:start="631:21" pos:end="631:26">veclen</name> <operator pos:start="631:28" pos:end="631:28">=</operator> <literal type="number" pos:start="631:30" pos:end="631:30">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="633:19" pos:end="659:17">else <block pos:start="633:24" pos:end="659:17">{<block_content pos:start="635:21" pos:end="657:21">

                    <if_stmt pos:start="635:21" pos:end="641:52"><if pos:start="635:21" pos:end="637:59">if <condition pos:start="635:24" pos:end="635:27">(<expr pos:start="635:25" pos:end="635:26"><name pos:start="635:25" pos:end="635:26">dp</name></expr>)</condition><block type="pseudo" pos:start="637:25" pos:end="637:59"><block_content pos:start="637:25" pos:end="637:59">

                        <expr_stmt pos:start="637:25" pos:end="637:59"><expr pos:start="637:25" pos:end="637:58"><name pos:start="637:25" pos:end="637:31">delta_d</name> <operator pos:start="637:33" pos:end="637:33">=</operator> <operator pos:start="637:35" pos:end="637:35">(</operator><name pos:start="637:36" pos:end="637:48"><name pos:start="637:36" pos:end="637:36">s</name><operator pos:start="637:37" pos:end="637:38">-&gt;</operator><name pos:start="637:39" pos:end="637:48">vec_stride</name></name> <operator pos:start="637:50" pos:end="637:51">&gt;&gt;</operator> <literal type="number" pos:start="637:53" pos:end="637:53">1</literal><operator pos:start="637:54" pos:end="637:54">)</operator> <operator pos:start="637:56" pos:end="637:56">+</operator> <literal type="number" pos:start="637:58" pos:end="637:58">1</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="639:21" pos:end="641:52">else<block type="pseudo" pos:start="641:25" pos:end="641:52"><block_content pos:start="641:25" pos:end="641:52">

                        <expr_stmt pos:start="641:25" pos:end="641:52"><expr pos:start="641:25" pos:end="641:51"><name pos:start="641:25" pos:end="641:31">delta_d</name> <operator pos:start="641:33" pos:end="641:33">=</operator> <name pos:start="641:35" pos:end="641:47"><name pos:start="641:35" pos:end="641:35">s</name><operator pos:start="641:36" pos:end="641:37">-&gt;</operator><name pos:start="641:38" pos:end="641:47">vec_stride</name></name> <operator pos:start="641:49" pos:end="641:49">+</operator> <literal type="number" pos:start="641:51" pos:end="641:51">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <if_stmt pos:start="645:21" pos:end="657:21"><if pos:start="645:21" pos:end="651:21">if <condition pos:start="645:24" pos:end="645:46">(<expr pos:start="645:25" pos:end="645:45"><operator pos:start="645:25" pos:end="645:25">(</operator><name pos:start="645:26" pos:end="645:27">rm</name> <operator pos:start="645:29" pos:end="645:29">&amp;</operator> <name pos:start="645:31" pos:end="645:39">bank_mask</name><operator pos:start="645:40" pos:end="645:40">)</operator> <operator pos:start="645:42" pos:end="645:43">==</operator> <literal type="number" pos:start="645:45" pos:end="645:45">0</literal></expr>)</condition> <block pos:start="645:48" pos:end="651:21">{<block_content pos:start="649:25" pos:end="649:36">

                        <comment type="block" pos:start="647:25" pos:end="647:49">/* mixed scalar/vector */</comment>

                        <expr_stmt pos:start="649:25" pos:end="649:36"><expr pos:start="649:25" pos:end="649:35"><name pos:start="649:25" pos:end="649:31">delta_m</name> <operator pos:start="649:33" pos:end="649:33">=</operator> <literal type="number" pos:start="649:35" pos:end="649:35">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="651:23" pos:end="657:21">else <block pos:start="651:28" pos:end="657:21">{<block_content pos:start="655:25" pos:end="655:42">

                        <comment type="block" pos:start="653:25" pos:end="653:36">/* vector */</comment>

                        <expr_stmt pos:start="655:25" pos:end="655:42"><expr pos:start="655:25" pos:end="655:41"><name pos:start="655:25" pos:end="655:31">delta_m</name> <operator pos:start="655:33" pos:end="655:33">=</operator> <name pos:start="655:35" pos:end="655:41">delta_d</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="665:13" pos:end="665:45">/* Load the initial operands.  */</comment>

            <if_stmt pos:start="667:13" pos:end="781:13"><if pos:start="667:13" pos:end="773:13">if <condition pos:start="667:16" pos:end="667:25">(<expr pos:start="667:17" pos:end="667:24"><name pos:start="667:17" pos:end="667:18">op</name> <operator pos:start="667:20" pos:end="667:21">==</operator> <literal type="number" pos:start="667:23" pos:end="667:24">15</literal></expr>)</condition> <block pos:start="667:27" pos:end="773:13">{<block_content pos:start="669:17" pos:end="771:17">

                <switch pos:start="669:17" pos:end="771:17">switch <condition pos:start="669:24" pos:end="669:27">(<expr pos:start="669:25" pos:end="669:26"><name pos:start="669:25" pos:end="669:26">rn</name></expr>)</condition> <block pos:start="669:29" pos:end="771:17">{<block_content pos:start="671:17" pos:end="769:26">

                <case pos:start="671:17" pos:end="671:24">case <expr pos:start="671:22" pos:end="671:23"><literal type="number" pos:start="671:22" pos:end="671:23">16</literal></expr>:</case>

                <case pos:start="673:17" pos:end="673:24">case <expr pos:start="673:22" pos:end="673:23"><literal type="number" pos:start="673:22" pos:end="673:23">17</literal></expr>:</case>

                    <comment type="block" pos:start="675:21" pos:end="675:40">/* Integer source */</comment>

                    <expr_stmt pos:start="677:21" pos:end="677:43"><expr pos:start="677:21" pos:end="677:42"><call pos:start="677:21" pos:end="677:42"><name pos:start="677:21" pos:end="677:35">gen_mov_F0_vreg</name><argument_list pos:start="677:36" pos:end="677:42">(<argument pos:start="677:37" pos:end="677:37"><expr pos:start="677:37" pos:end="677:37"><literal type="number" pos:start="677:37" pos:end="677:37">0</literal></expr></argument>, <argument pos:start="677:40" pos:end="677:41"><expr pos:start="677:40" pos:end="677:41"><name pos:start="677:40" pos:end="677:41">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="679:21" pos:end="679:26">break;</break>

                <case pos:start="681:17" pos:end="681:23">case <expr pos:start="681:22" pos:end="681:22"><literal type="number" pos:start="681:22" pos:end="681:22">8</literal></expr>:</case>

                <case pos:start="683:17" pos:end="683:23">case <expr pos:start="683:22" pos:end="683:22"><literal type="number" pos:start="683:22" pos:end="683:22">9</literal></expr>:</case>

                    <comment type="block" pos:start="685:21" pos:end="685:33">/* Compare */</comment>

                    <expr_stmt pos:start="687:21" pos:end="687:44"><expr pos:start="687:21" pos:end="687:43"><call pos:start="687:21" pos:end="687:43"><name pos:start="687:21" pos:end="687:35">gen_mov_F0_vreg</name><argument_list pos:start="687:36" pos:end="687:43">(<argument pos:start="687:37" pos:end="687:38"><expr pos:start="687:37" pos:end="687:38"><name pos:start="687:37" pos:end="687:38">dp</name></expr></argument>, <argument pos:start="687:41" pos:end="687:42"><expr pos:start="687:41" pos:end="687:42"><name pos:start="687:41" pos:end="687:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="689:21" pos:end="689:44"><expr pos:start="689:21" pos:end="689:43"><call pos:start="689:21" pos:end="689:43"><name pos:start="689:21" pos:end="689:35">gen_mov_F1_vreg</name><argument_list pos:start="689:36" pos:end="689:43">(<argument pos:start="689:37" pos:end="689:38"><expr pos:start="689:37" pos:end="689:38"><name pos:start="689:37" pos:end="689:38">dp</name></expr></argument>, <argument pos:start="689:41" pos:end="689:42"><expr pos:start="689:41" pos:end="689:42"><name pos:start="689:41" pos:end="689:42">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="691:21" pos:end="691:26">break;</break>

                <case pos:start="693:17" pos:end="693:24">case <expr pos:start="693:22" pos:end="693:23"><literal type="number" pos:start="693:22" pos:end="693:23">10</literal></expr>:</case>

                <case pos:start="695:17" pos:end="695:24">case <expr pos:start="695:22" pos:end="695:23"><literal type="number" pos:start="695:22" pos:end="695:23">11</literal></expr>:</case>

                    <comment type="block" pos:start="697:21" pos:end="697:43">/* Compare with zero */</comment>

                    <expr_stmt pos:start="699:21" pos:end="699:44"><expr pos:start="699:21" pos:end="699:43"><call pos:start="699:21" pos:end="699:43"><name pos:start="699:21" pos:end="699:35">gen_mov_F0_vreg</name><argument_list pos:start="699:36" pos:end="699:43">(<argument pos:start="699:37" pos:end="699:38"><expr pos:start="699:37" pos:end="699:38"><name pos:start="699:37" pos:end="699:38">dp</name></expr></argument>, <argument pos:start="699:41" pos:end="699:42"><expr pos:start="699:41" pos:end="699:42"><name pos:start="699:41" pos:end="699:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="701:21" pos:end="701:39"><expr pos:start="701:21" pos:end="701:38"><call pos:start="701:21" pos:end="701:38"><name pos:start="701:21" pos:end="701:34">gen_vfp_F1_ld0</name><argument_list pos:start="701:35" pos:end="701:38">(<argument pos:start="701:36" pos:end="701:37"><expr pos:start="701:36" pos:end="701:37"><name pos:start="701:36" pos:end="701:37">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="703:21" pos:end="703:26">break;</break>

                <case pos:start="705:17" pos:end="705:24">case <expr pos:start="705:22" pos:end="705:23"><literal type="number" pos:start="705:22" pos:end="705:23">20</literal></expr>:</case>

                <case pos:start="707:17" pos:end="707:24">case <expr pos:start="707:22" pos:end="707:23"><literal type="number" pos:start="707:22" pos:end="707:23">21</literal></expr>:</case>

                <case pos:start="709:17" pos:end="709:24">case <expr pos:start="709:22" pos:end="709:23"><literal type="number" pos:start="709:22" pos:end="709:23">22</literal></expr>:</case>

                <case pos:start="711:17" pos:end="711:24">case <expr pos:start="711:22" pos:end="711:23"><literal type="number" pos:start="711:22" pos:end="711:23">23</literal></expr>:</case>

                <case pos:start="713:17" pos:end="713:24">case <expr pos:start="713:22" pos:end="713:23"><literal type="number" pos:start="713:22" pos:end="713:23">28</literal></expr>:</case>

                <case pos:start="715:17" pos:end="715:24">case <expr pos:start="715:22" pos:end="715:23"><literal type="number" pos:start="715:22" pos:end="715:23">29</literal></expr>:</case>

                <case pos:start="717:17" pos:end="717:24">case <expr pos:start="717:22" pos:end="717:23"><literal type="number" pos:start="717:22" pos:end="717:23">30</literal></expr>:</case>

                <case pos:start="719:17" pos:end="719:24">case <expr pos:start="719:22" pos:end="719:23"><literal type="number" pos:start="719:22" pos:end="719:23">31</literal></expr>:</case>

                    <comment type="block" pos:start="721:21" pos:end="721:59">/* Source and destination the same.  */</comment>

                    <expr_stmt pos:start="723:21" pos:end="723:44"><expr pos:start="723:21" pos:end="723:43"><call pos:start="723:21" pos:end="723:43"><name pos:start="723:21" pos:end="723:35">gen_mov_F0_vreg</name><argument_list pos:start="723:36" pos:end="723:43">(<argument pos:start="723:37" pos:end="723:38"><expr pos:start="723:37" pos:end="723:38"><name pos:start="723:37" pos:end="723:38">dp</name></expr></argument>, <argument pos:start="723:41" pos:end="723:42"><expr pos:start="723:41" pos:end="723:42"><name pos:start="723:41" pos:end="723:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="725:21" pos:end="725:26">break;</break>

                <case pos:start="727:17" pos:end="727:23">case <expr pos:start="727:22" pos:end="727:22"><literal type="number" pos:start="727:22" pos:end="727:22">4</literal></expr>:</case>

                <case pos:start="729:17" pos:end="729:23">case <expr pos:start="729:22" pos:end="729:22"><literal type="number" pos:start="729:22" pos:end="729:22">5</literal></expr>:</case>

                <case pos:start="731:17" pos:end="731:23">case <expr pos:start="731:22" pos:end="731:22"><literal type="number" pos:start="731:22" pos:end="731:22">6</literal></expr>:</case>

                <case pos:start="733:17" pos:end="733:23">case <expr pos:start="733:22" pos:end="733:22"><literal type="number" pos:start="733:22" pos:end="733:22">7</literal></expr>:</case>

                    <comment type="block" pos:start="735:21" pos:end="741:23">/* VCVTB, VCVTT: only present with the halfprec extension

                     * UNPREDICTABLE if bit 8 is set prior to ARMv8

                     * (we choose to UNDEF)

                     */</comment>

                    <if_stmt pos:start="743:21" pos:end="749:21"><if pos:start="743:21" pos:end="749:21">if <condition pos:start="743:24" pos:end="745:65">(<expr pos:start="743:25" pos:end="745:64"><operator pos:start="743:25" pos:end="743:25">(</operator><name pos:start="743:26" pos:end="743:27">dp</name> <operator pos:start="743:29" pos:end="743:30">&amp;&amp;</operator> <operator pos:start="743:32" pos:end="743:32">!</operator><call pos:start="743:33" pos:end="743:65"><name pos:start="743:33" pos:end="743:46">arm_dc_feature</name><argument_list pos:start="743:47" pos:end="743:65">(<argument pos:start="743:48" pos:end="743:48"><expr pos:start="743:48" pos:end="743:48"><name pos:start="743:48" pos:end="743:48">s</name></expr></argument>, <argument pos:start="743:51" pos:end="743:64"><expr pos:start="743:51" pos:end="743:64"><name pos:start="743:51" pos:end="743:64">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call><operator pos:start="743:66" pos:end="743:66">)</operator> <operator pos:start="743:68" pos:end="743:69">||</operator>

                        <operator pos:start="745:25" pos:end="745:25">!</operator><call pos:start="745:26" pos:end="745:64"><name pos:start="745:26" pos:end="745:39">arm_dc_feature</name><argument_list pos:start="745:40" pos:end="745:64">(<argument pos:start="745:41" pos:end="745:41"><expr pos:start="745:41" pos:end="745:41"><name pos:start="745:41" pos:end="745:41">s</name></expr></argument>, <argument pos:start="745:44" pos:end="745:63"><expr pos:start="745:44" pos:end="745:63"><name pos:start="745:44" pos:end="745:63">ARM_FEATURE_VFP_FP16</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="745:67" pos:end="749:21">{<block_content pos:start="747:25" pos:end="747:33">

                        <return pos:start="747:25" pos:end="747:33">return <expr pos:start="747:32" pos:end="747:32"><literal type="number" pos:start="747:32" pos:end="747:32">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="751:21" pos:end="759:21"><if pos:start="751:21" pos:end="759:21">if <condition pos:start="751:24" pos:end="751:45">(<expr pos:start="751:25" pos:end="751:44"><operator pos:start="751:25" pos:end="751:25">!</operator><call pos:start="751:26" pos:end="751:44"><name pos:start="751:26" pos:end="751:34">extract32</name><argument_list pos:start="751:35" pos:end="751:44">(<argument pos:start="751:36" pos:end="751:37"><expr pos:start="751:36" pos:end="751:37"><name pos:start="751:36" pos:end="751:37">rn</name></expr></argument>, <argument pos:start="751:40" pos:end="751:40"><expr pos:start="751:40" pos:end="751:40"><literal type="number" pos:start="751:40" pos:end="751:40">1</literal></expr></argument>, <argument pos:start="751:43" pos:end="751:43"><expr pos:start="751:43" pos:end="751:43"><literal type="number" pos:start="751:43" pos:end="751:43">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="751:47" pos:end="759:21">{<block_content pos:start="755:25" pos:end="757:30">

                        <comment type="block" pos:start="753:25" pos:end="753:53">/* Half precision source.  */</comment>

                        <expr_stmt pos:start="755:25" pos:end="755:47"><expr pos:start="755:25" pos:end="755:46"><call pos:start="755:25" pos:end="755:46"><name pos:start="755:25" pos:end="755:39">gen_mov_F0_vreg</name><argument_list pos:start="755:40" pos:end="755:46">(<argument pos:start="755:41" pos:end="755:41"><expr pos:start="755:41" pos:end="755:41"><literal type="number" pos:start="755:41" pos:end="755:41">0</literal></expr></argument>, <argument pos:start="755:44" pos:end="755:45"><expr pos:start="755:44" pos:end="755:45"><name pos:start="755:44" pos:end="755:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="757:25" pos:end="757:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                    <comment type="block" pos:start="761:21" pos:end="761:48">/* Otherwise fall through */</comment>

                <default pos:start="763:17" pos:end="763:24">default:</default>

                    <comment type="block" pos:start="765:21" pos:end="765:46">/* One source operand.  */</comment>

                    <expr_stmt pos:start="767:21" pos:end="767:44"><expr pos:start="767:21" pos:end="767:43"><call pos:start="767:21" pos:end="767:43"><name pos:start="767:21" pos:end="767:35">gen_mov_F0_vreg</name><argument_list pos:start="767:36" pos:end="767:43">(<argument pos:start="767:37" pos:end="767:38"><expr pos:start="767:37" pos:end="767:38"><name pos:start="767:37" pos:end="767:38">dp</name></expr></argument>, <argument pos:start="767:41" pos:end="767:42"><expr pos:start="767:41" pos:end="767:42"><name pos:start="767:41" pos:end="767:42">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="769:21" pos:end="769:26">break;</break>

                </block_content>}</block></switch>

            </block_content>}</block></if> <else pos:start="773:15" pos:end="781:13">else <block pos:start="773:20" pos:end="781:13">{<block_content pos:start="777:17" pos:end="779:40">

                <comment type="block" pos:start="775:17" pos:end="775:43">/* Two source operands.  */</comment>

                <expr_stmt pos:start="777:17" pos:end="777:40"><expr pos:start="777:17" pos:end="777:39"><call pos:start="777:17" pos:end="777:39"><name pos:start="777:17" pos:end="777:31">gen_mov_F0_vreg</name><argument_list pos:start="777:32" pos:end="777:39">(<argument pos:start="777:33" pos:end="777:34"><expr pos:start="777:33" pos:end="777:34"><name pos:start="777:33" pos:end="777:34">dp</name></expr></argument>, <argument pos:start="777:37" pos:end="777:38"><expr pos:start="777:37" pos:end="777:38"><name pos:start="777:37" pos:end="777:38">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="779:17" pos:end="779:40"><expr pos:start="779:17" pos:end="779:39"><call pos:start="779:17" pos:end="779:39"><name pos:start="779:17" pos:end="779:31">gen_mov_F1_vreg</name><argument_list pos:start="779:32" pos:end="779:39">(<argument pos:start="779:33" pos:end="779:34"><expr pos:start="779:33" pos:end="779:34"><name pos:start="779:33" pos:end="779:34">dp</name></expr></argument>, <argument pos:start="779:37" pos:end="779:38"><expr pos:start="779:37" pos:end="779:38"><name pos:start="779:37" pos:end="779:38">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <for pos:start="785:13" pos:end="1535:13">for <control pos:start="785:17" pos:end="785:20">(<init pos:start="785:18" pos:end="785:18">;</init><condition pos:start="785:19" pos:end="785:19">;</condition><incr/>)</control> <block pos:start="785:22" pos:end="1535:13">{<block_content pos:start="789:17" pos:end="1533:17">

                <comment type="block" pos:start="787:17" pos:end="787:47">/* Perform the calculation.  */</comment>

                <switch pos:start="789:17" pos:end="1429:17">switch <condition pos:start="789:24" pos:end="789:27">(<expr pos:start="789:25" pos:end="789:26"><name pos:start="789:25" pos:end="789:26">op</name></expr>)</condition> <block pos:start="789:29" pos:end="1429:17">{<block_content pos:start="791:17" pos:end="1427:29">

                <case pos:start="791:17" pos:end="791:23">case <expr pos:start="791:22" pos:end="791:22"><literal type="number" pos:start="791:22" pos:end="791:22">0</literal></expr>:</case> <comment type="block" pos:start="791:25" pos:end="791:50">/* VMLA: fd + (fn * fm) */</comment>

                    <comment type="block" pos:start="793:21" pos:end="793:79">/* Note that order of inputs to the add matters for NaNs */</comment>

                    <expr_stmt pos:start="795:21" pos:end="795:39"><expr pos:start="795:21" pos:end="795:38"><call pos:start="795:21" pos:end="795:38"><name pos:start="795:21" pos:end="795:34">gen_vfp_F1_mul</name><argument_list pos:start="795:35" pos:end="795:38">(<argument pos:start="795:36" pos:end="795:37"><expr pos:start="795:36" pos:end="795:37"><name pos:start="795:36" pos:end="795:37">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="797:21" pos:end="797:44"><expr pos:start="797:21" pos:end="797:43"><call pos:start="797:21" pos:end="797:43"><name pos:start="797:21" pos:end="797:35">gen_mov_F0_vreg</name><argument_list pos:start="797:36" pos:end="797:43">(<argument pos:start="797:37" pos:end="797:38"><expr pos:start="797:37" pos:end="797:38"><name pos:start="797:37" pos:end="797:38">dp</name></expr></argument>, <argument pos:start="797:41" pos:end="797:42"><expr pos:start="797:41" pos:end="797:42"><name pos:start="797:41" pos:end="797:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="799:21" pos:end="799:36"><expr pos:start="799:21" pos:end="799:35"><call pos:start="799:21" pos:end="799:35"><name pos:start="799:21" pos:end="799:31">gen_vfp_add</name><argument_list pos:start="799:32" pos:end="799:35">(<argument pos:start="799:33" pos:end="799:34"><expr pos:start="799:33" pos:end="799:34"><name pos:start="799:33" pos:end="799:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="801:21" pos:end="801:26">break;</break>

                <case pos:start="803:17" pos:end="803:23">case <expr pos:start="803:22" pos:end="803:22"><literal type="number" pos:start="803:22" pos:end="803:22">1</literal></expr>:</case> <comment type="block" pos:start="803:25" pos:end="803:51">/* VMLS: fd + -(fn * fm) */</comment>

                    <expr_stmt pos:start="805:21" pos:end="805:36"><expr pos:start="805:21" pos:end="805:35"><call pos:start="805:21" pos:end="805:35"><name pos:start="805:21" pos:end="805:31">gen_vfp_mul</name><argument_list pos:start="805:32" pos:end="805:35">(<argument pos:start="805:33" pos:end="805:34"><expr pos:start="805:33" pos:end="805:34"><name pos:start="805:33" pos:end="805:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="807:21" pos:end="807:39"><expr pos:start="807:21" pos:end="807:38"><call pos:start="807:21" pos:end="807:38"><name pos:start="807:21" pos:end="807:34">gen_vfp_F1_neg</name><argument_list pos:start="807:35" pos:end="807:38">(<argument pos:start="807:36" pos:end="807:37"><expr pos:start="807:36" pos:end="807:37"><name pos:start="807:36" pos:end="807:37">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="809:21" pos:end="809:44"><expr pos:start="809:21" pos:end="809:43"><call pos:start="809:21" pos:end="809:43"><name pos:start="809:21" pos:end="809:35">gen_mov_F0_vreg</name><argument_list pos:start="809:36" pos:end="809:43">(<argument pos:start="809:37" pos:end="809:38"><expr pos:start="809:37" pos:end="809:38"><name pos:start="809:37" pos:end="809:38">dp</name></expr></argument>, <argument pos:start="809:41" pos:end="809:42"><expr pos:start="809:41" pos:end="809:42"><name pos:start="809:41" pos:end="809:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="811:21" pos:end="811:36"><expr pos:start="811:21" pos:end="811:35"><call pos:start="811:21" pos:end="811:35"><name pos:start="811:21" pos:end="811:31">gen_vfp_add</name><argument_list pos:start="811:32" pos:end="811:35">(<argument pos:start="811:33" pos:end="811:34"><expr pos:start="811:33" pos:end="811:34"><name pos:start="811:33" pos:end="811:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="813:21" pos:end="813:26">break;</break>

                <case pos:start="815:17" pos:end="815:23">case <expr pos:start="815:22" pos:end="815:22"><literal type="number" pos:start="815:22" pos:end="815:22">2</literal></expr>:</case> <comment type="block" pos:start="815:25" pos:end="815:52">/* VNMLS: -fd + (fn * fm) */</comment>

                    <comment type="block" pos:start="817:21" pos:end="823:23">/* Note that it isn't valid to replace (-A + B) with (B - A)

                     * or similar plausible looking simplifications

                     * because this will give wrong results for NaNs.

                     */</comment>

                    <expr_stmt pos:start="825:21" pos:end="825:39"><expr pos:start="825:21" pos:end="825:38"><call pos:start="825:21" pos:end="825:38"><name pos:start="825:21" pos:end="825:34">gen_vfp_F1_mul</name><argument_list pos:start="825:35" pos:end="825:38">(<argument pos:start="825:36" pos:end="825:37"><expr pos:start="825:36" pos:end="825:37"><name pos:start="825:36" pos:end="825:37">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="827:21" pos:end="827:44"><expr pos:start="827:21" pos:end="827:43"><call pos:start="827:21" pos:end="827:43"><name pos:start="827:21" pos:end="827:35">gen_mov_F0_vreg</name><argument_list pos:start="827:36" pos:end="827:43">(<argument pos:start="827:37" pos:end="827:38"><expr pos:start="827:37" pos:end="827:38"><name pos:start="827:37" pos:end="827:38">dp</name></expr></argument>, <argument pos:start="827:41" pos:end="827:42"><expr pos:start="827:41" pos:end="827:42"><name pos:start="827:41" pos:end="827:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="829:21" pos:end="829:36"><expr pos:start="829:21" pos:end="829:35"><call pos:start="829:21" pos:end="829:35"><name pos:start="829:21" pos:end="829:31">gen_vfp_neg</name><argument_list pos:start="829:32" pos:end="829:35">(<argument pos:start="829:33" pos:end="829:34"><expr pos:start="829:33" pos:end="829:34"><name pos:start="829:33" pos:end="829:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="831:21" pos:end="831:36"><expr pos:start="831:21" pos:end="831:35"><call pos:start="831:21" pos:end="831:35"><name pos:start="831:21" pos:end="831:31">gen_vfp_add</name><argument_list pos:start="831:32" pos:end="831:35">(<argument pos:start="831:33" pos:end="831:34"><expr pos:start="831:33" pos:end="831:34"><name pos:start="831:33" pos:end="831:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="833:21" pos:end="833:26">break;</break>

                <case pos:start="835:17" pos:end="835:23">case <expr pos:start="835:22" pos:end="835:22"><literal type="number" pos:start="835:22" pos:end="835:22">3</literal></expr>:</case> <comment type="block" pos:start="835:25" pos:end="835:53">/* VNMLA: -fd + -(fn * fm) */</comment>

                    <expr_stmt pos:start="837:21" pos:end="837:36"><expr pos:start="837:21" pos:end="837:35"><call pos:start="837:21" pos:end="837:35"><name pos:start="837:21" pos:end="837:31">gen_vfp_mul</name><argument_list pos:start="837:32" pos:end="837:35">(<argument pos:start="837:33" pos:end="837:34"><expr pos:start="837:33" pos:end="837:34"><name pos:start="837:33" pos:end="837:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="839:21" pos:end="839:39"><expr pos:start="839:21" pos:end="839:38"><call pos:start="839:21" pos:end="839:38"><name pos:start="839:21" pos:end="839:34">gen_vfp_F1_neg</name><argument_list pos:start="839:35" pos:end="839:38">(<argument pos:start="839:36" pos:end="839:37"><expr pos:start="839:36" pos:end="839:37"><name pos:start="839:36" pos:end="839:37">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="841:21" pos:end="841:44"><expr pos:start="841:21" pos:end="841:43"><call pos:start="841:21" pos:end="841:43"><name pos:start="841:21" pos:end="841:35">gen_mov_F0_vreg</name><argument_list pos:start="841:36" pos:end="841:43">(<argument pos:start="841:37" pos:end="841:38"><expr pos:start="841:37" pos:end="841:38"><name pos:start="841:37" pos:end="841:38">dp</name></expr></argument>, <argument pos:start="841:41" pos:end="841:42"><expr pos:start="841:41" pos:end="841:42"><name pos:start="841:41" pos:end="841:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="843:21" pos:end="843:36"><expr pos:start="843:21" pos:end="843:35"><call pos:start="843:21" pos:end="843:35"><name pos:start="843:21" pos:end="843:31">gen_vfp_neg</name><argument_list pos:start="843:32" pos:end="843:35">(<argument pos:start="843:33" pos:end="843:34"><expr pos:start="843:33" pos:end="843:34"><name pos:start="843:33" pos:end="843:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="845:21" pos:end="845:36"><expr pos:start="845:21" pos:end="845:35"><call pos:start="845:21" pos:end="845:35"><name pos:start="845:21" pos:end="845:31">gen_vfp_add</name><argument_list pos:start="845:32" pos:end="845:35">(<argument pos:start="845:33" pos:end="845:34"><expr pos:start="845:33" pos:end="845:34"><name pos:start="845:33" pos:end="845:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="847:21" pos:end="847:26">break;</break>

                <case pos:start="849:17" pos:end="849:23">case <expr pos:start="849:22" pos:end="849:22"><literal type="number" pos:start="849:22" pos:end="849:22">4</literal></expr>:</case> <comment type="block" pos:start="849:25" pos:end="849:42">/* mul: fn * fm */</comment>

                    <expr_stmt pos:start="851:21" pos:end="851:36"><expr pos:start="851:21" pos:end="851:35"><call pos:start="851:21" pos:end="851:35"><name pos:start="851:21" pos:end="851:31">gen_vfp_mul</name><argument_list pos:start="851:32" pos:end="851:35">(<argument pos:start="851:33" pos:end="851:34"><expr pos:start="851:33" pos:end="851:34"><name pos:start="851:33" pos:end="851:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="853:21" pos:end="853:26">break;</break>

                <case pos:start="855:17" pos:end="855:23">case <expr pos:start="855:22" pos:end="855:22"><literal type="number" pos:start="855:22" pos:end="855:22">5</literal></expr>:</case> <comment type="block" pos:start="855:25" pos:end="855:46">/* nmul: -(fn * fm) */</comment>

                    <expr_stmt pos:start="857:21" pos:end="857:36"><expr pos:start="857:21" pos:end="857:35"><call pos:start="857:21" pos:end="857:35"><name pos:start="857:21" pos:end="857:31">gen_vfp_mul</name><argument_list pos:start="857:32" pos:end="857:35">(<argument pos:start="857:33" pos:end="857:34"><expr pos:start="857:33" pos:end="857:34"><name pos:start="857:33" pos:end="857:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="859:21" pos:end="859:36"><expr pos:start="859:21" pos:end="859:35"><call pos:start="859:21" pos:end="859:35"><name pos:start="859:21" pos:end="859:31">gen_vfp_neg</name><argument_list pos:start="859:32" pos:end="859:35">(<argument pos:start="859:33" pos:end="859:34"><expr pos:start="859:33" pos:end="859:34"><name pos:start="859:33" pos:end="859:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="861:21" pos:end="861:26">break;</break>

                <case pos:start="863:17" pos:end="863:23">case <expr pos:start="863:22" pos:end="863:22"><literal type="number" pos:start="863:22" pos:end="863:22">6</literal></expr>:</case> <comment type="block" pos:start="863:25" pos:end="863:42">/* add: fn + fm */</comment>

                    <expr_stmt pos:start="865:21" pos:end="865:36"><expr pos:start="865:21" pos:end="865:35"><call pos:start="865:21" pos:end="865:35"><name pos:start="865:21" pos:end="865:31">gen_vfp_add</name><argument_list pos:start="865:32" pos:end="865:35">(<argument pos:start="865:33" pos:end="865:34"><expr pos:start="865:33" pos:end="865:34"><name pos:start="865:33" pos:end="865:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="867:21" pos:end="867:26">break;</break>

                <case pos:start="869:17" pos:end="869:23">case <expr pos:start="869:22" pos:end="869:22"><literal type="number" pos:start="869:22" pos:end="869:22">7</literal></expr>:</case> <comment type="block" pos:start="869:25" pos:end="869:42">/* sub: fn - fm */</comment>

                    <expr_stmt pos:start="871:21" pos:end="871:36"><expr pos:start="871:21" pos:end="871:35"><call pos:start="871:21" pos:end="871:35"><name pos:start="871:21" pos:end="871:31">gen_vfp_sub</name><argument_list pos:start="871:32" pos:end="871:35">(<argument pos:start="871:33" pos:end="871:34"><expr pos:start="871:33" pos:end="871:34"><name pos:start="871:33" pos:end="871:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="873:21" pos:end="873:26">break;</break>

                <case pos:start="875:17" pos:end="875:23">case <expr pos:start="875:22" pos:end="875:22"><literal type="number" pos:start="875:22" pos:end="875:22">8</literal></expr>:</case> <comment type="block" pos:start="875:25" pos:end="875:42">/* div: fn / fm */</comment>

                    <expr_stmt pos:start="877:21" pos:end="877:36"><expr pos:start="877:21" pos:end="877:35"><call pos:start="877:21" pos:end="877:35"><name pos:start="877:21" pos:end="877:31">gen_vfp_div</name><argument_list pos:start="877:32" pos:end="877:35">(<argument pos:start="877:33" pos:end="877:34"><expr pos:start="877:33" pos:end="877:34"><name pos:start="877:33" pos:end="877:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="879:21" pos:end="879:26">break;</break>

                <case pos:start="881:17" pos:end="881:24">case <expr pos:start="881:22" pos:end="881:23"><literal type="number" pos:start="881:22" pos:end="881:23">10</literal></expr>:</case> <comment type="block" pos:start="881:26" pos:end="881:64">/* VFNMA : fd = muladd(-fd,  fn, fm) */</comment>

                <case pos:start="883:17" pos:end="883:24">case <expr pos:start="883:22" pos:end="883:23"><literal type="number" pos:start="883:22" pos:end="883:23">11</literal></expr>:</case> <comment type="block" pos:start="883:26" pos:end="883:64">/* VFNMS : fd = muladd(-fd, -fn, fm) */</comment>

                <case pos:start="885:17" pos:end="885:24">case <expr pos:start="885:22" pos:end="885:23"><literal type="number" pos:start="885:22" pos:end="885:23">12</literal></expr>:</case> <comment type="block" pos:start="885:26" pos:end="885:64">/* VFMA  : fd = muladd( fd,  fn, fm) */</comment>

                <case pos:start="887:17" pos:end="887:24">case <expr pos:start="887:22" pos:end="887:23"><literal type="number" pos:start="887:22" pos:end="887:23">13</literal></expr>:</case> <comment type="block" pos:start="887:26" pos:end="887:64">/* VFMS  : fd = muladd( fd, -fn, fm) */</comment>

                    <comment type="block" pos:start="889:21" pos:end="901:23">/* These are fused multiply-add, and must be done as one

                     * floating point operation with no rounding between the

                     * multiplication and addition steps.

                     * NB that doing the negations here as separate steps is

                     * correct : an input NaN should come out with its sign bit

                     * flipped if it is a negated-input.

                     */</comment>

                    <if_stmt pos:start="903:21" pos:end="907:21"><if pos:start="903:21" pos:end="907:21">if <condition pos:start="903:24" pos:end="903:61">(<expr pos:start="903:25" pos:end="903:60"><operator pos:start="903:25" pos:end="903:25">!</operator><call pos:start="903:26" pos:end="903:60"><name pos:start="903:26" pos:end="903:39">arm_dc_feature</name><argument_list pos:start="903:40" pos:end="903:60">(<argument pos:start="903:41" pos:end="903:41"><expr pos:start="903:41" pos:end="903:41"><name pos:start="903:41" pos:end="903:41">s</name></expr></argument>, <argument pos:start="903:44" pos:end="903:59"><expr pos:start="903:44" pos:end="903:59"><name pos:start="903:44" pos:end="903:59">ARM_FEATURE_VFP4</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="903:63" pos:end="907:21">{<block_content pos:start="905:25" pos:end="905:33">

                        <return pos:start="905:25" pos:end="905:33">return <expr pos:start="905:32" pos:end="905:32"><literal type="number" pos:start="905:32" pos:end="905:32">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="909:21" pos:end="979:21"><if pos:start="909:21" pos:end="945:21">if <condition pos:start="909:24" pos:end="909:27">(<expr pos:start="909:25" pos:end="909:26"><name pos:start="909:25" pos:end="909:26">dp</name></expr>)</condition> <block pos:start="909:29" pos:end="945:21">{<block_content pos:start="911:25" pos:end="943:47">

                        <decl_stmt pos:start="911:25" pos:end="911:38"><decl pos:start="911:25" pos:end="911:37"><type pos:start="911:25" pos:end="911:32"><name pos:start="911:25" pos:end="911:32">TCGv_ptr</name></type> <name pos:start="911:34" pos:end="911:37">fpst</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="913:25" pos:end="913:37"><decl pos:start="913:25" pos:end="913:36"><type pos:start="913:25" pos:end="913:32"><name pos:start="913:25" pos:end="913:32">TCGv_i64</name></type> <name pos:start="913:34" pos:end="913:36">frd</name></decl>;</decl_stmt>

                        <if_stmt pos:start="915:25" pos:end="921:25"><if pos:start="915:25" pos:end="921:25">if <condition pos:start="915:28" pos:end="915:35">(<expr pos:start="915:29" pos:end="915:34"><name pos:start="915:29" pos:end="915:30">op</name> <operator pos:start="915:32" pos:end="915:32">&amp;</operator> <literal type="number" pos:start="915:34" pos:end="915:34">1</literal></expr>)</condition> <block pos:start="915:37" pos:end="921:25">{<block_content pos:start="919:29" pos:end="919:66">

                            <comment type="block" pos:start="917:29" pos:end="917:45">/* VFNMS, VFMS */</comment>

                            <expr_stmt pos:start="919:29" pos:end="919:66"><expr pos:start="919:29" pos:end="919:65"><call pos:start="919:29" pos:end="919:65"><name pos:start="919:29" pos:end="919:47">gen_helper_vfp_negd</name><argument_list pos:start="919:48" pos:end="919:65">(<argument pos:start="919:49" pos:end="919:55"><expr pos:start="919:49" pos:end="919:55"><name pos:start="919:49" pos:end="919:55">cpu_F0d</name></expr></argument>, <argument pos:start="919:58" pos:end="919:64"><expr pos:start="919:58" pos:end="919:64"><name pos:start="919:58" pos:end="919:64">cpu_F0d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="923:25" pos:end="923:49"><expr pos:start="923:25" pos:end="923:48"><name pos:start="923:25" pos:end="923:27">frd</name> <operator pos:start="923:29" pos:end="923:29">=</operator> <call pos:start="923:31" pos:end="923:48"><name pos:start="923:31" pos:end="923:46">tcg_temp_new_i64</name><argument_list pos:start="923:47" pos:end="923:48">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="925:25" pos:end="925:77"><expr pos:start="925:25" pos:end="925:76"><call pos:start="925:25" pos:end="925:76"><name pos:start="925:25" pos:end="925:38">tcg_gen_ld_f64</name><argument_list pos:start="925:39" pos:end="925:76">(<argument pos:start="925:40" pos:end="925:42"><expr pos:start="925:40" pos:end="925:42"><name pos:start="925:40" pos:end="925:42">frd</name></expr></argument>, <argument pos:start="925:45" pos:end="925:51"><expr pos:start="925:45" pos:end="925:51"><name pos:start="925:45" pos:end="925:51">cpu_env</name></expr></argument>, <argument pos:start="925:54" pos:end="925:75"><expr pos:start="925:54" pos:end="925:75"><call pos:start="925:54" pos:end="925:75"><name pos:start="925:54" pos:end="925:67">vfp_reg_offset</name><argument_list pos:start="925:68" pos:end="925:75">(<argument pos:start="925:69" pos:end="925:70"><expr pos:start="925:69" pos:end="925:70"><name pos:start="925:69" pos:end="925:70">dp</name></expr></argument>, <argument pos:start="925:73" pos:end="925:74"><expr pos:start="925:73" pos:end="925:74"><name pos:start="925:73" pos:end="925:74">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="927:25" pos:end="933:25"><if pos:start="927:25" pos:end="933:25">if <condition pos:start="927:28" pos:end="927:35">(<expr pos:start="927:29" pos:end="927:34"><name pos:start="927:29" pos:end="927:30">op</name> <operator pos:start="927:32" pos:end="927:32">&amp;</operator> <literal type="number" pos:start="927:34" pos:end="927:34">2</literal></expr>)</condition> <block pos:start="927:37" pos:end="933:25">{<block_content pos:start="931:29" pos:end="931:58">

                            <comment type="block" pos:start="929:29" pos:end="929:46">/* VFNMA, VFNMS */</comment>

                            <expr_stmt pos:start="931:29" pos:end="931:58"><expr pos:start="931:29" pos:end="931:57"><call pos:start="931:29" pos:end="931:57"><name pos:start="931:29" pos:end="931:47">gen_helper_vfp_negd</name><argument_list pos:start="931:48" pos:end="931:57">(<argument pos:start="931:49" pos:end="931:51"><expr pos:start="931:49" pos:end="931:51"><name pos:start="931:49" pos:end="931:51">frd</name></expr></argument>, <argument pos:start="931:54" pos:end="931:56"><expr pos:start="931:54" pos:end="931:56"><name pos:start="931:54" pos:end="931:56">frd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="935:25" pos:end="935:51"><expr pos:start="935:25" pos:end="935:50"><name pos:start="935:25" pos:end="935:28">fpst</name> <operator pos:start="935:30" pos:end="935:30">=</operator> <call pos:start="935:32" pos:end="935:50"><name pos:start="935:32" pos:end="935:47">get_fpstatus_ptr</name><argument_list pos:start="935:48" pos:end="935:50">(<argument pos:start="935:49" pos:end="935:49"><expr pos:start="935:49" pos:end="935:49"><literal type="number" pos:start="935:49" pos:end="935:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="937:25" pos:end="939:67"><expr pos:start="937:25" pos:end="939:66"><call pos:start="937:25" pos:end="939:66"><name pos:start="937:25" pos:end="937:46">gen_helper_vfp_muladdd</name><argument_list pos:start="937:47" pos:end="939:66">(<argument pos:start="937:48" pos:end="937:54"><expr pos:start="937:48" pos:end="937:54"><name pos:start="937:48" pos:end="937:54">cpu_F0d</name></expr></argument>, <argument pos:start="937:57" pos:end="937:63"><expr pos:start="937:57" pos:end="937:63"><name pos:start="937:57" pos:end="937:63">cpu_F0d</name></expr></argument>,

                                               <argument pos:start="939:48" pos:end="939:54"><expr pos:start="939:48" pos:end="939:54"><name pos:start="939:48" pos:end="939:54">cpu_F1d</name></expr></argument>, <argument pos:start="939:57" pos:end="939:59"><expr pos:start="939:57" pos:end="939:59"><name pos:start="939:57" pos:end="939:59">frd</name></expr></argument>, <argument pos:start="939:62" pos:end="939:65"><expr pos:start="939:62" pos:end="939:65"><name pos:start="939:62" pos:end="939:65">fpst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="941:25" pos:end="941:48"><expr pos:start="941:25" pos:end="941:47"><call pos:start="941:25" pos:end="941:47"><name pos:start="941:25" pos:end="941:41">tcg_temp_free_ptr</name><argument_list pos:start="941:42" pos:end="941:47">(<argument pos:start="941:43" pos:end="941:46"><expr pos:start="941:43" pos:end="941:46"><name pos:start="941:43" pos:end="941:46">fpst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="943:25" pos:end="943:47"><expr pos:start="943:25" pos:end="943:46"><call pos:start="943:25" pos:end="943:46"><name pos:start="943:25" pos:end="943:41">tcg_temp_free_i64</name><argument_list pos:start="943:42" pos:end="943:46">(<argument pos:start="943:43" pos:end="943:45"><expr pos:start="943:43" pos:end="943:45"><name pos:start="943:43" pos:end="943:45">frd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="945:23" pos:end="979:21">else <block pos:start="945:28" pos:end="979:21">{<block_content pos:start="947:25" pos:end="977:47">

                        <decl_stmt pos:start="947:25" pos:end="947:38"><decl pos:start="947:25" pos:end="947:37"><type pos:start="947:25" pos:end="947:32"><name pos:start="947:25" pos:end="947:32">TCGv_ptr</name></type> <name pos:start="947:34" pos:end="947:37">fpst</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="949:25" pos:end="949:37"><decl pos:start="949:25" pos:end="949:36"><type pos:start="949:25" pos:end="949:32"><name pos:start="949:25" pos:end="949:32">TCGv_i32</name></type> <name pos:start="949:34" pos:end="949:36">frd</name></decl>;</decl_stmt>

                        <if_stmt pos:start="951:25" pos:end="957:25"><if pos:start="951:25" pos:end="957:25">if <condition pos:start="951:28" pos:end="951:35">(<expr pos:start="951:29" pos:end="951:34"><name pos:start="951:29" pos:end="951:30">op</name> <operator pos:start="951:32" pos:end="951:32">&amp;</operator> <literal type="number" pos:start="951:34" pos:end="951:34">1</literal></expr>)</condition> <block pos:start="951:37" pos:end="957:25">{<block_content pos:start="955:29" pos:end="955:66">

                            <comment type="block" pos:start="953:29" pos:end="953:45">/* VFNMS, VFMS */</comment>

                            <expr_stmt pos:start="955:29" pos:end="955:66"><expr pos:start="955:29" pos:end="955:65"><call pos:start="955:29" pos:end="955:65"><name pos:start="955:29" pos:end="955:47">gen_helper_vfp_negs</name><argument_list pos:start="955:48" pos:end="955:65">(<argument pos:start="955:49" pos:end="955:55"><expr pos:start="955:49" pos:end="955:55"><name pos:start="955:49" pos:end="955:55">cpu_F0s</name></expr></argument>, <argument pos:start="955:58" pos:end="955:64"><expr pos:start="955:58" pos:end="955:64"><name pos:start="955:58" pos:end="955:64">cpu_F0s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="959:25" pos:end="959:49"><expr pos:start="959:25" pos:end="959:48"><name pos:start="959:25" pos:end="959:27">frd</name> <operator pos:start="959:29" pos:end="959:29">=</operator> <call pos:start="959:31" pos:end="959:48"><name pos:start="959:31" pos:end="959:46">tcg_temp_new_i32</name><argument_list pos:start="959:47" pos:end="959:48">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="961:25" pos:end="961:77"><expr pos:start="961:25" pos:end="961:76"><call pos:start="961:25" pos:end="961:76"><name pos:start="961:25" pos:end="961:38">tcg_gen_ld_f32</name><argument_list pos:start="961:39" pos:end="961:76">(<argument pos:start="961:40" pos:end="961:42"><expr pos:start="961:40" pos:end="961:42"><name pos:start="961:40" pos:end="961:42">frd</name></expr></argument>, <argument pos:start="961:45" pos:end="961:51"><expr pos:start="961:45" pos:end="961:51"><name pos:start="961:45" pos:end="961:51">cpu_env</name></expr></argument>, <argument pos:start="961:54" pos:end="961:75"><expr pos:start="961:54" pos:end="961:75"><call pos:start="961:54" pos:end="961:75"><name pos:start="961:54" pos:end="961:67">vfp_reg_offset</name><argument_list pos:start="961:68" pos:end="961:75">(<argument pos:start="961:69" pos:end="961:70"><expr pos:start="961:69" pos:end="961:70"><name pos:start="961:69" pos:end="961:70">dp</name></expr></argument>, <argument pos:start="961:73" pos:end="961:74"><expr pos:start="961:73" pos:end="961:74"><name pos:start="961:73" pos:end="961:74">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="963:25" pos:end="967:25"><if pos:start="963:25" pos:end="967:25">if <condition pos:start="963:28" pos:end="963:35">(<expr pos:start="963:29" pos:end="963:34"><name pos:start="963:29" pos:end="963:30">op</name> <operator pos:start="963:32" pos:end="963:32">&amp;</operator> <literal type="number" pos:start="963:34" pos:end="963:34">2</literal></expr>)</condition> <block pos:start="963:37" pos:end="967:25">{<block_content pos:start="965:29" pos:end="965:58">

                            <expr_stmt pos:start="965:29" pos:end="965:58"><expr pos:start="965:29" pos:end="965:57"><call pos:start="965:29" pos:end="965:57"><name pos:start="965:29" pos:end="965:47">gen_helper_vfp_negs</name><argument_list pos:start="965:48" pos:end="965:57">(<argument pos:start="965:49" pos:end="965:51"><expr pos:start="965:49" pos:end="965:51"><name pos:start="965:49" pos:end="965:51">frd</name></expr></argument>, <argument pos:start="965:54" pos:end="965:56"><expr pos:start="965:54" pos:end="965:56"><name pos:start="965:54" pos:end="965:56">frd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="969:25" pos:end="969:51"><expr pos:start="969:25" pos:end="969:50"><name pos:start="969:25" pos:end="969:28">fpst</name> <operator pos:start="969:30" pos:end="969:30">=</operator> <call pos:start="969:32" pos:end="969:50"><name pos:start="969:32" pos:end="969:47">get_fpstatus_ptr</name><argument_list pos:start="969:48" pos:end="969:50">(<argument pos:start="969:49" pos:end="969:49"><expr pos:start="969:49" pos:end="969:49"><literal type="number" pos:start="969:49" pos:end="969:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="971:25" pos:end="973:67"><expr pos:start="971:25" pos:end="973:66"><call pos:start="971:25" pos:end="973:66"><name pos:start="971:25" pos:end="971:46">gen_helper_vfp_muladds</name><argument_list pos:start="971:47" pos:end="973:66">(<argument pos:start="971:48" pos:end="971:54"><expr pos:start="971:48" pos:end="971:54"><name pos:start="971:48" pos:end="971:54">cpu_F0s</name></expr></argument>, <argument pos:start="971:57" pos:end="971:63"><expr pos:start="971:57" pos:end="971:63"><name pos:start="971:57" pos:end="971:63">cpu_F0s</name></expr></argument>,

                                               <argument pos:start="973:48" pos:end="973:54"><expr pos:start="973:48" pos:end="973:54"><name pos:start="973:48" pos:end="973:54">cpu_F1s</name></expr></argument>, <argument pos:start="973:57" pos:end="973:59"><expr pos:start="973:57" pos:end="973:59"><name pos:start="973:57" pos:end="973:59">frd</name></expr></argument>, <argument pos:start="973:62" pos:end="973:65"><expr pos:start="973:62" pos:end="973:65"><name pos:start="973:62" pos:end="973:65">fpst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="975:25" pos:end="975:48"><expr pos:start="975:25" pos:end="975:47"><call pos:start="975:25" pos:end="975:47"><name pos:start="975:25" pos:end="975:41">tcg_temp_free_ptr</name><argument_list pos:start="975:42" pos:end="975:47">(<argument pos:start="975:43" pos:end="975:46"><expr pos:start="975:43" pos:end="975:46"><name pos:start="975:43" pos:end="975:46">fpst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="977:25" pos:end="977:47"><expr pos:start="977:25" pos:end="977:46"><call pos:start="977:25" pos:end="977:46"><name pos:start="977:25" pos:end="977:41">tcg_temp_free_i32</name><argument_list pos:start="977:42" pos:end="977:46">(<argument pos:start="977:43" pos:end="977:45"><expr pos:start="977:43" pos:end="977:45"><name pos:start="977:43" pos:end="977:45">frd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="981:21" pos:end="981:26">break;</break>

                <case pos:start="983:17" pos:end="983:24">case <expr pos:start="983:22" pos:end="983:23"><literal type="number" pos:start="983:22" pos:end="983:23">14</literal></expr>:</case> <comment type="block" pos:start="983:26" pos:end="983:37">/* fconst */</comment>

                    <if_stmt pos:start="985:21" pos:end="989:21"><if pos:start="985:21" pos:end="989:21">if <condition pos:start="985:24" pos:end="985:61">(<expr pos:start="985:25" pos:end="985:60"><operator pos:start="985:25" pos:end="985:25">!</operator><call pos:start="985:26" pos:end="985:60"><name pos:start="985:26" pos:end="985:39">arm_dc_feature</name><argument_list pos:start="985:40" pos:end="985:60">(<argument pos:start="985:41" pos:end="985:41"><expr pos:start="985:41" pos:end="985:41"><name pos:start="985:41" pos:end="985:41">s</name></expr></argument>, <argument pos:start="985:44" pos:end="985:59"><expr pos:start="985:44" pos:end="985:59"><name pos:start="985:44" pos:end="985:59">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="985:63" pos:end="989:21">{<block_content pos:start="987:25" pos:end="987:33">

                        <return pos:start="987:25" pos:end="987:33">return <expr pos:start="987:32" pos:end="987:32"><literal type="number" pos:start="987:32" pos:end="987:32">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>



                    <expr_stmt pos:start="993:21" pos:end="993:50"><expr pos:start="993:21" pos:end="993:49"><name pos:start="993:21" pos:end="993:21">n</name> <operator pos:start="993:23" pos:end="993:23">=</operator> <operator pos:start="993:25" pos:end="993:25">(</operator><name pos:start="993:26" pos:end="993:29">insn</name> <operator pos:start="993:31" pos:end="993:32">&lt;&lt;</operator> <literal type="number" pos:start="993:34" pos:end="993:35">12</literal><operator pos:start="993:36" pos:end="993:36">)</operator> <operator pos:start="993:38" pos:end="993:38">&amp;</operator> <literal type="number" pos:start="993:40" pos:end="993:49">0x80000000</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="995:21" pos:end="995:61"><expr pos:start="995:21" pos:end="995:60"><name pos:start="995:21" pos:end="995:21">i</name> <operator pos:start="995:23" pos:end="995:23">=</operator> <operator pos:start="995:25" pos:end="995:25">(</operator><operator pos:start="995:26" pos:end="995:26">(</operator><name pos:start="995:27" pos:end="995:30">insn</name> <operator pos:start="995:32" pos:end="995:33">&gt;&gt;</operator> <literal type="number" pos:start="995:35" pos:end="995:36">12</literal><operator pos:start="995:37" pos:end="995:37">)</operator> <operator pos:start="995:39" pos:end="995:39">&amp;</operator> <literal type="number" pos:start="995:41" pos:end="995:44">0x70</literal><operator pos:start="995:45" pos:end="995:45">)</operator> <operator pos:start="995:47" pos:end="995:47">|</operator> <operator pos:start="995:49" pos:end="995:49">(</operator><name pos:start="995:50" pos:end="995:53">insn</name> <operator pos:start="995:55" pos:end="995:55">&amp;</operator> <literal type="number" pos:start="995:57" pos:end="995:59">0xf</literal><operator pos:start="995:60" pos:end="995:60">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="997:21" pos:end="1025:21"><if pos:start="997:21" pos:end="1011:21">if <condition pos:start="997:24" pos:end="997:27">(<expr pos:start="997:25" pos:end="997:26"><name pos:start="997:25" pos:end="997:26">dp</name></expr>)</condition> <block pos:start="997:29" pos:end="1011:21">{<block_content pos:start="999:25" pos:end="1009:71">

                        <if_stmt pos:start="999:25" pos:end="1005:40"><if pos:start="999:25" pos:end="1001:40">if <condition pos:start="999:28" pos:end="999:37">(<expr pos:start="999:29" pos:end="999:36"><name pos:start="999:29" pos:end="999:29">i</name> <operator pos:start="999:31" pos:end="999:31">&amp;</operator> <literal type="number" pos:start="999:33" pos:end="999:36">0x40</literal></expr>)</condition><block type="pseudo" pos:start="1001:29" pos:end="1001:40"><block_content pos:start="1001:29" pos:end="1001:40">

                            <expr_stmt pos:start="1001:29" pos:end="1001:40"><expr pos:start="1001:29" pos:end="1001:39"><name pos:start="1001:29" pos:end="1001:29">i</name> <operator pos:start="1001:31" pos:end="1001:32">|=</operator> <literal type="number" pos:start="1001:34" pos:end="1001:39">0x3f80</literal></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1003:25" pos:end="1005:40">else<block type="pseudo" pos:start="1005:29" pos:end="1005:40"><block_content pos:start="1005:29" pos:end="1005:40">

                            <expr_stmt pos:start="1005:29" pos:end="1005:40"><expr pos:start="1005:29" pos:end="1005:39"><name pos:start="1005:29" pos:end="1005:29">i</name> <operator pos:start="1005:31" pos:end="1005:32">|=</operator> <literal type="number" pos:start="1005:34" pos:end="1005:39">0x4000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="1007:25" pos:end="1007:37"><expr pos:start="1007:25" pos:end="1007:36"><name pos:start="1007:25" pos:end="1007:25">n</name> <operator pos:start="1007:27" pos:end="1007:28">|=</operator> <name pos:start="1007:30" pos:end="1007:30">i</name> <operator pos:start="1007:32" pos:end="1007:33">&lt;&lt;</operator> <literal type="number" pos:start="1007:35" pos:end="1007:36">16</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="1009:25" pos:end="1009:71"><expr pos:start="1009:25" pos:end="1009:70"><call pos:start="1009:25" pos:end="1009:70"><name pos:start="1009:25" pos:end="1009:40">tcg_gen_movi_i64</name><argument_list pos:start="1009:41" pos:end="1009:70">(<argument pos:start="1009:42" pos:end="1009:48"><expr pos:start="1009:42" pos:end="1009:48"><name pos:start="1009:42" pos:end="1009:48">cpu_F0d</name></expr></argument>, <argument pos:start="1009:51" pos:end="1009:69"><expr pos:start="1009:51" pos:end="1009:69"><operator pos:start="1009:51" pos:end="1009:51">(</operator><operator pos:start="1009:52" pos:end="1009:52">(</operator><name pos:start="1009:53" pos:end="1009:60">uint64_t</name><operator pos:start="1009:61" pos:end="1009:61">)</operator><name pos:start="1009:62" pos:end="1009:62">n</name><operator pos:start="1009:63" pos:end="1009:63">)</operator> <operator pos:start="1009:65" pos:end="1009:66">&lt;&lt;</operator> <literal type="number" pos:start="1009:68" pos:end="1009:69">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1011:23" pos:end="1025:21">else <block pos:start="1011:28" pos:end="1025:21">{<block_content pos:start="1013:25" pos:end="1023:53">

                        <if_stmt pos:start="1013:25" pos:end="1019:39"><if pos:start="1013:25" pos:end="1015:39">if <condition pos:start="1013:28" pos:end="1013:37">(<expr pos:start="1013:29" pos:end="1013:36"><name pos:start="1013:29" pos:end="1013:29">i</name> <operator pos:start="1013:31" pos:end="1013:31">&amp;</operator> <literal type="number" pos:start="1013:33" pos:end="1013:36">0x40</literal></expr>)</condition><block type="pseudo" pos:start="1015:29" pos:end="1015:39"><block_content pos:start="1015:29" pos:end="1015:39">

                            <expr_stmt pos:start="1015:29" pos:end="1015:39"><expr pos:start="1015:29" pos:end="1015:38"><name pos:start="1015:29" pos:end="1015:29">i</name> <operator pos:start="1015:31" pos:end="1015:32">|=</operator> <literal type="number" pos:start="1015:34" pos:end="1015:38">0x780</literal></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1017:25" pos:end="1019:39">else<block type="pseudo" pos:start="1019:29" pos:end="1019:39"><block_content pos:start="1019:29" pos:end="1019:39">

                            <expr_stmt pos:start="1019:29" pos:end="1019:39"><expr pos:start="1019:29" pos:end="1019:38"><name pos:start="1019:29" pos:end="1019:29">i</name> <operator pos:start="1019:31" pos:end="1019:32">|=</operator> <literal type="number" pos:start="1019:34" pos:end="1019:38">0x800</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="1021:25" pos:end="1021:37"><expr pos:start="1021:25" pos:end="1021:36"><name pos:start="1021:25" pos:end="1021:25">n</name> <operator pos:start="1021:27" pos:end="1021:28">|=</operator> <name pos:start="1021:30" pos:end="1021:30">i</name> <operator pos:start="1021:32" pos:end="1021:33">&lt;&lt;</operator> <literal type="number" pos:start="1021:35" pos:end="1021:36">19</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="1023:25" pos:end="1023:53"><expr pos:start="1023:25" pos:end="1023:52"><call pos:start="1023:25" pos:end="1023:52"><name pos:start="1023:25" pos:end="1023:40">tcg_gen_movi_i32</name><argument_list pos:start="1023:41" pos:end="1023:52">(<argument pos:start="1023:42" pos:end="1023:48"><expr pos:start="1023:42" pos:end="1023:48"><name pos:start="1023:42" pos:end="1023:48">cpu_F0s</name></expr></argument>, <argument pos:start="1023:51" pos:end="1023:51"><expr pos:start="1023:51" pos:end="1023:51"><name pos:start="1023:51" pos:end="1023:51">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="1027:21" pos:end="1027:26">break;</break>

                <case pos:start="1029:17" pos:end="1029:24">case <expr pos:start="1029:22" pos:end="1029:23"><literal type="number" pos:start="1029:22" pos:end="1029:23">15</literal></expr>:</case> <comment type="block" pos:start="1029:26" pos:end="1029:46">/* extension space */</comment>

                    <switch pos:start="1031:21" pos:end="1421:21">switch <condition pos:start="1031:28" pos:end="1031:31">(<expr pos:start="1031:29" pos:end="1031:30"><name pos:start="1031:29" pos:end="1031:30">rn</name></expr>)</condition> <block pos:start="1031:33" pos:end="1421:21">{<block_content pos:start="1033:21" pos:end="1419:33">

                    <case pos:start="1033:21" pos:end="1033:27">case <expr pos:start="1033:26" pos:end="1033:26"><literal type="number" pos:start="1033:26" pos:end="1033:26">0</literal></expr>:</case> <comment type="block" pos:start="1033:29" pos:end="1033:37">/* cpy */</comment>

                        <comment type="block" pos:start="1035:25" pos:end="1035:35">/* no-op */</comment>

                        <break pos:start="1037:25" pos:end="1037:30">break;</break>

                    <case pos:start="1039:21" pos:end="1039:27">case <expr pos:start="1039:26" pos:end="1039:26"><literal type="number" pos:start="1039:26" pos:end="1039:26">1</literal></expr>:</case> <comment type="block" pos:start="1039:29" pos:end="1039:37">/* abs */</comment>

                        <expr_stmt pos:start="1041:25" pos:end="1041:40"><expr pos:start="1041:25" pos:end="1041:39"><call pos:start="1041:25" pos:end="1041:39"><name pos:start="1041:25" pos:end="1041:35">gen_vfp_abs</name><argument_list pos:start="1041:36" pos:end="1041:39">(<argument pos:start="1041:37" pos:end="1041:38"><expr pos:start="1041:37" pos:end="1041:38"><name pos:start="1041:37" pos:end="1041:38">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1043:25" pos:end="1043:30">break;</break>

                    <case pos:start="1045:21" pos:end="1045:27">case <expr pos:start="1045:26" pos:end="1045:26"><literal type="number" pos:start="1045:26" pos:end="1045:26">2</literal></expr>:</case> <comment type="block" pos:start="1045:29" pos:end="1045:37">/* neg */</comment>

                        <expr_stmt pos:start="1047:25" pos:end="1047:40"><expr pos:start="1047:25" pos:end="1047:39"><call pos:start="1047:25" pos:end="1047:39"><name pos:start="1047:25" pos:end="1047:35">gen_vfp_neg</name><argument_list pos:start="1047:36" pos:end="1047:39">(<argument pos:start="1047:37" pos:end="1047:38"><expr pos:start="1047:37" pos:end="1047:38"><name pos:start="1047:37" pos:end="1047:38">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1049:25" pos:end="1049:30">break;</break>

                    <case pos:start="1051:21" pos:end="1051:27">case <expr pos:start="1051:26" pos:end="1051:26"><literal type="number" pos:start="1051:26" pos:end="1051:26">3</literal></expr>:</case> <comment type="block" pos:start="1051:29" pos:end="1051:38">/* sqrt */</comment>

                        <expr_stmt pos:start="1053:25" pos:end="1053:41"><expr pos:start="1053:25" pos:end="1053:40"><call pos:start="1053:25" pos:end="1053:40"><name pos:start="1053:25" pos:end="1053:36">gen_vfp_sqrt</name><argument_list pos:start="1053:37" pos:end="1053:40">(<argument pos:start="1053:38" pos:end="1053:39"><expr pos:start="1053:38" pos:end="1053:39"><name pos:start="1053:38" pos:end="1053:39">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1055:25" pos:end="1055:30">break;</break>

                    <case pos:start="1057:21" pos:end="1057:27">case <expr pos:start="1057:26" pos:end="1057:26"><literal type="number" pos:start="1057:26" pos:end="1057:26">4</literal></expr>:</case> <comment type="block" pos:start="1057:29" pos:end="1057:62">/* vcvtb.f32.f16, vcvtb.f64.f16 */</comment>

                        <expr_stmt pos:start="1059:25" pos:end="1059:44"><expr pos:start="1059:25" pos:end="1059:43"><name pos:start="1059:25" pos:end="1059:27">tmp</name> <operator pos:start="1059:29" pos:end="1059:29">=</operator> <call pos:start="1059:31" pos:end="1059:43"><name pos:start="1059:31" pos:end="1059:41">gen_vfp_mrs</name><argument_list pos:start="1059:42" pos:end="1059:43">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1061:25" pos:end="1061:53"><expr pos:start="1061:25" pos:end="1061:52"><call pos:start="1061:25" pos:end="1061:52"><name pos:start="1061:25" pos:end="1061:42">tcg_gen_ext16u_i32</name><argument_list pos:start="1061:43" pos:end="1061:52">(<argument pos:start="1061:44" pos:end="1061:46"><expr pos:start="1061:44" pos:end="1061:46"><name pos:start="1061:44" pos:end="1061:46">tmp</name></expr></argument>, <argument pos:start="1061:49" pos:end="1061:51"><expr pos:start="1061:49" pos:end="1061:51"><name pos:start="1061:49" pos:end="1061:51">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1063:25" pos:end="1075:25"><if pos:start="1063:25" pos:end="1069:25">if <condition pos:start="1063:28" pos:end="1063:31">(<expr pos:start="1063:29" pos:end="1063:30"><name pos:start="1063:29" pos:end="1063:30">dp</name></expr>)</condition> <block pos:start="1063:33" pos:end="1069:25">{<block_content pos:start="1065:29" pos:end="1067:68">

                            <expr_stmt pos:start="1065:29" pos:end="1067:68"><expr pos:start="1065:29" pos:end="1067:67"><call pos:start="1065:29" pos:end="1067:67"><name pos:start="1065:29" pos:end="1065:58">gen_helper_vfp_fcvt_f16_to_f64</name><argument_list pos:start="1065:59" pos:end="1067:67">(<argument pos:start="1065:60" pos:end="1065:66"><expr pos:start="1065:60" pos:end="1065:66"><name pos:start="1065:60" pos:end="1065:66">cpu_F0d</name></expr></argument>, <argument pos:start="1065:69" pos:end="1065:71"><expr pos:start="1065:69" pos:end="1065:71"><name pos:start="1065:69" pos:end="1065:71">tmp</name></expr></argument>,

                                                           <argument pos:start="1067:60" pos:end="1067:66"><expr pos:start="1067:60" pos:end="1067:66"><name pos:start="1067:60" pos:end="1067:66">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1069:27" pos:end="1075:25">else <block pos:start="1069:32" pos:end="1075:25">{<block_content pos:start="1071:29" pos:end="1073:68">

                            <expr_stmt pos:start="1071:29" pos:end="1073:68"><expr pos:start="1071:29" pos:end="1073:67"><call pos:start="1071:29" pos:end="1073:67"><name pos:start="1071:29" pos:end="1071:58">gen_helper_vfp_fcvt_f16_to_f32</name><argument_list pos:start="1071:59" pos:end="1073:67">(<argument pos:start="1071:60" pos:end="1071:66"><expr pos:start="1071:60" pos:end="1071:66"><name pos:start="1071:60" pos:end="1071:66">cpu_F0s</name></expr></argument>, <argument pos:start="1071:69" pos:end="1071:71"><expr pos:start="1071:69" pos:end="1071:71"><name pos:start="1071:69" pos:end="1071:71">tmp</name></expr></argument>,

                                                           <argument pos:start="1073:60" pos:end="1073:66"><expr pos:start="1073:60" pos:end="1073:66"><name pos:start="1073:60" pos:end="1073:66">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1077:25" pos:end="1077:47"><expr pos:start="1077:25" pos:end="1077:46"><call pos:start="1077:25" pos:end="1077:46"><name pos:start="1077:25" pos:end="1077:41">tcg_temp_free_i32</name><argument_list pos:start="1077:42" pos:end="1077:46">(<argument pos:start="1077:43" pos:end="1077:45"><expr pos:start="1077:43" pos:end="1077:45"><name pos:start="1077:43" pos:end="1077:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1079:25" pos:end="1079:30">break;</break>

                    <case pos:start="1081:21" pos:end="1081:27">case <expr pos:start="1081:26" pos:end="1081:26"><literal type="number" pos:start="1081:26" pos:end="1081:26">5</literal></expr>:</case> <comment type="block" pos:start="1081:29" pos:end="1081:62">/* vcvtt.f32.f16, vcvtt.f64.f16 */</comment>

                        <expr_stmt pos:start="1083:25" pos:end="1083:44"><expr pos:start="1083:25" pos:end="1083:43"><name pos:start="1083:25" pos:end="1083:27">tmp</name> <operator pos:start="1083:29" pos:end="1083:29">=</operator> <call pos:start="1083:31" pos:end="1083:43"><name pos:start="1083:31" pos:end="1083:41">gen_vfp_mrs</name><argument_list pos:start="1083:42" pos:end="1083:43">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1085:25" pos:end="1085:55"><expr pos:start="1085:25" pos:end="1085:54"><call pos:start="1085:25" pos:end="1085:54"><name pos:start="1085:25" pos:end="1085:40">tcg_gen_shri_i32</name><argument_list pos:start="1085:41" pos:end="1085:54">(<argument pos:start="1085:42" pos:end="1085:44"><expr pos:start="1085:42" pos:end="1085:44"><name pos:start="1085:42" pos:end="1085:44">tmp</name></expr></argument>, <argument pos:start="1085:47" pos:end="1085:49"><expr pos:start="1085:47" pos:end="1085:49"><name pos:start="1085:47" pos:end="1085:49">tmp</name></expr></argument>, <argument pos:start="1085:52" pos:end="1085:53"><expr pos:start="1085:52" pos:end="1085:53"><literal type="number" pos:start="1085:52" pos:end="1085:53">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1087:25" pos:end="1099:25"><if pos:start="1087:25" pos:end="1093:25">if <condition pos:start="1087:28" pos:end="1087:31">(<expr pos:start="1087:29" pos:end="1087:30"><name pos:start="1087:29" pos:end="1087:30">dp</name></expr>)</condition> <block pos:start="1087:33" pos:end="1093:25">{<block_content pos:start="1089:29" pos:end="1091:68">

                            <expr_stmt pos:start="1089:29" pos:end="1091:68"><expr pos:start="1089:29" pos:end="1091:67"><call pos:start="1089:29" pos:end="1091:67"><name pos:start="1089:29" pos:end="1089:58">gen_helper_vfp_fcvt_f16_to_f64</name><argument_list pos:start="1089:59" pos:end="1091:67">(<argument pos:start="1089:60" pos:end="1089:66"><expr pos:start="1089:60" pos:end="1089:66"><name pos:start="1089:60" pos:end="1089:66">cpu_F0d</name></expr></argument>, <argument pos:start="1089:69" pos:end="1089:71"><expr pos:start="1089:69" pos:end="1089:71"><name pos:start="1089:69" pos:end="1089:71">tmp</name></expr></argument>,

                                                           <argument pos:start="1091:60" pos:end="1091:66"><expr pos:start="1091:60" pos:end="1091:66"><name pos:start="1091:60" pos:end="1091:66">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1093:27" pos:end="1099:25">else <block pos:start="1093:32" pos:end="1099:25">{<block_content pos:start="1095:29" pos:end="1097:68">

                            <expr_stmt pos:start="1095:29" pos:end="1097:68"><expr pos:start="1095:29" pos:end="1097:67"><call pos:start="1095:29" pos:end="1097:67"><name pos:start="1095:29" pos:end="1095:58">gen_helper_vfp_fcvt_f16_to_f32</name><argument_list pos:start="1095:59" pos:end="1097:67">(<argument pos:start="1095:60" pos:end="1095:66"><expr pos:start="1095:60" pos:end="1095:66"><name pos:start="1095:60" pos:end="1095:66">cpu_F0s</name></expr></argument>, <argument pos:start="1095:69" pos:end="1095:71"><expr pos:start="1095:69" pos:end="1095:71"><name pos:start="1095:69" pos:end="1095:71">tmp</name></expr></argument>,

                                                           <argument pos:start="1097:60" pos:end="1097:66"><expr pos:start="1097:60" pos:end="1097:66"><name pos:start="1097:60" pos:end="1097:66">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1101:25" pos:end="1101:47"><expr pos:start="1101:25" pos:end="1101:46"><call pos:start="1101:25" pos:end="1101:46"><name pos:start="1101:25" pos:end="1101:41">tcg_temp_free_i32</name><argument_list pos:start="1101:42" pos:end="1101:46">(<argument pos:start="1101:43" pos:end="1101:45"><expr pos:start="1101:43" pos:end="1101:45"><name pos:start="1101:43" pos:end="1101:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1103:25" pos:end="1103:30">break;</break>

                    <case pos:start="1105:21" pos:end="1105:27">case <expr pos:start="1105:26" pos:end="1105:26"><literal type="number" pos:start="1105:26" pos:end="1105:26">6</literal></expr>:</case> <comment type="block" pos:start="1105:29" pos:end="1105:62">/* vcvtb.f16.f32, vcvtb.f16.f64 */</comment>

                        <expr_stmt pos:start="1107:25" pos:end="1107:49"><expr pos:start="1107:25" pos:end="1107:48"><name pos:start="1107:25" pos:end="1107:27">tmp</name> <operator pos:start="1107:29" pos:end="1107:29">=</operator> <call pos:start="1107:31" pos:end="1107:48"><name pos:start="1107:31" pos:end="1107:46">tcg_temp_new_i32</name><argument_list pos:start="1107:47" pos:end="1107:48">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1109:25" pos:end="1121:25"><if pos:start="1109:25" pos:end="1115:25">if <condition pos:start="1109:28" pos:end="1109:31">(<expr pos:start="1109:29" pos:end="1109:30"><name pos:start="1109:29" pos:end="1109:30">dp</name></expr>)</condition> <block pos:start="1109:33" pos:end="1115:25">{<block_content pos:start="1111:29" pos:end="1113:68">

                            <expr_stmt pos:start="1111:29" pos:end="1113:68"><expr pos:start="1111:29" pos:end="1113:67"><call pos:start="1111:29" pos:end="1113:67"><name pos:start="1111:29" pos:end="1111:58">gen_helper_vfp_fcvt_f64_to_f16</name><argument_list pos:start="1111:59" pos:end="1113:67">(<argument pos:start="1111:60" pos:end="1111:62"><expr pos:start="1111:60" pos:end="1111:62"><name pos:start="1111:60" pos:end="1111:62">tmp</name></expr></argument>, <argument pos:start="1111:65" pos:end="1111:71"><expr pos:start="1111:65" pos:end="1111:71"><name pos:start="1111:65" pos:end="1111:71">cpu_F0d</name></expr></argument>,

                                                           <argument pos:start="1113:60" pos:end="1113:66"><expr pos:start="1113:60" pos:end="1113:66"><name pos:start="1113:60" pos:end="1113:66">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1115:27" pos:end="1121:25">else <block pos:start="1115:32" pos:end="1121:25">{<block_content pos:start="1117:29" pos:end="1119:68">

                            <expr_stmt pos:start="1117:29" pos:end="1119:68"><expr pos:start="1117:29" pos:end="1119:67"><call pos:start="1117:29" pos:end="1119:67"><name pos:start="1117:29" pos:end="1117:58">gen_helper_vfp_fcvt_f32_to_f16</name><argument_list pos:start="1117:59" pos:end="1119:67">(<argument pos:start="1117:60" pos:end="1117:62"><expr pos:start="1117:60" pos:end="1117:62"><name pos:start="1117:60" pos:end="1117:62">tmp</name></expr></argument>, <argument pos:start="1117:65" pos:end="1117:71"><expr pos:start="1117:65" pos:end="1117:71"><name pos:start="1117:65" pos:end="1117:71">cpu_F0s</name></expr></argument>,

                                                           <argument pos:start="1119:60" pos:end="1119:66"><expr pos:start="1119:60" pos:end="1119:66"><name pos:start="1119:60" pos:end="1119:66">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1123:25" pos:end="1123:47"><expr pos:start="1123:25" pos:end="1123:46"><call pos:start="1123:25" pos:end="1123:46"><name pos:start="1123:25" pos:end="1123:39">gen_mov_F0_vreg</name><argument_list pos:start="1123:40" pos:end="1123:46">(<argument pos:start="1123:41" pos:end="1123:41"><expr pos:start="1123:41" pos:end="1123:41"><literal type="number" pos:start="1123:41" pos:end="1123:41">0</literal></expr></argument>, <argument pos:start="1123:44" pos:end="1123:45"><expr pos:start="1123:44" pos:end="1123:45"><name pos:start="1123:44" pos:end="1123:45">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1125:25" pos:end="1125:45"><expr pos:start="1125:25" pos:end="1125:44"><name pos:start="1125:25" pos:end="1125:28">tmp2</name> <operator pos:start="1125:30" pos:end="1125:30">=</operator> <call pos:start="1125:32" pos:end="1125:44"><name pos:start="1125:32" pos:end="1125:42">gen_vfp_mrs</name><argument_list pos:start="1125:43" pos:end="1125:44">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1127:25" pos:end="1127:65"><expr pos:start="1127:25" pos:end="1127:64"><call pos:start="1127:25" pos:end="1127:64"><name pos:start="1127:25" pos:end="1127:40">tcg_gen_andi_i32</name><argument_list pos:start="1127:41" pos:end="1127:64">(<argument pos:start="1127:42" pos:end="1127:45"><expr pos:start="1127:42" pos:end="1127:45"><name pos:start="1127:42" pos:end="1127:45">tmp2</name></expr></argument>, <argument pos:start="1127:48" pos:end="1127:51"><expr pos:start="1127:48" pos:end="1127:51"><name pos:start="1127:48" pos:end="1127:51">tmp2</name></expr></argument>, <argument pos:start="1127:54" pos:end="1127:63"><expr pos:start="1127:54" pos:end="1127:63"><literal type="number" pos:start="1127:54" pos:end="1127:63">0xffff0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1129:25" pos:end="1129:55"><expr pos:start="1129:25" pos:end="1129:54"><call pos:start="1129:25" pos:end="1129:54"><name pos:start="1129:25" pos:end="1129:38">tcg_gen_or_i32</name><argument_list pos:start="1129:39" pos:end="1129:54">(<argument pos:start="1129:40" pos:end="1129:42"><expr pos:start="1129:40" pos:end="1129:42"><name pos:start="1129:40" pos:end="1129:42">tmp</name></expr></argument>, <argument pos:start="1129:45" pos:end="1129:47"><expr pos:start="1129:45" pos:end="1129:47"><name pos:start="1129:45" pos:end="1129:47">tmp</name></expr></argument>, <argument pos:start="1129:50" pos:end="1129:53"><expr pos:start="1129:50" pos:end="1129:53"><name pos:start="1129:50" pos:end="1129:53">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1131:25" pos:end="1131:48"><expr pos:start="1131:25" pos:end="1131:47"><call pos:start="1131:25" pos:end="1131:47"><name pos:start="1131:25" pos:end="1131:41">tcg_temp_free_i32</name><argument_list pos:start="1131:42" pos:end="1131:47">(<argument pos:start="1131:43" pos:end="1131:46"><expr pos:start="1131:43" pos:end="1131:46"><name pos:start="1131:43" pos:end="1131:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1133:25" pos:end="1133:41"><expr pos:start="1133:25" pos:end="1133:40"><call pos:start="1133:25" pos:end="1133:40"><name pos:start="1133:25" pos:end="1133:35">gen_vfp_msr</name><argument_list pos:start="1133:36" pos:end="1133:40">(<argument pos:start="1133:37" pos:end="1133:39"><expr pos:start="1133:37" pos:end="1133:39"><name pos:start="1133:37" pos:end="1133:39">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1135:25" pos:end="1135:30">break;</break>

                    <case pos:start="1137:21" pos:end="1137:27">case <expr pos:start="1137:26" pos:end="1137:26"><literal type="number" pos:start="1137:26" pos:end="1137:26">7</literal></expr>:</case> <comment type="block" pos:start="1137:29" pos:end="1137:62">/* vcvtt.f16.f32, vcvtt.f16.f64 */</comment>

                        <expr_stmt pos:start="1139:25" pos:end="1139:49"><expr pos:start="1139:25" pos:end="1139:48"><name pos:start="1139:25" pos:end="1139:27">tmp</name> <operator pos:start="1139:29" pos:end="1139:29">=</operator> <call pos:start="1139:31" pos:end="1139:48"><name pos:start="1139:31" pos:end="1139:46">tcg_temp_new_i32</name><argument_list pos:start="1139:47" pos:end="1139:48">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1141:25" pos:end="1153:25"><if pos:start="1141:25" pos:end="1147:25">if <condition pos:start="1141:28" pos:end="1141:31">(<expr pos:start="1141:29" pos:end="1141:30"><name pos:start="1141:29" pos:end="1141:30">dp</name></expr>)</condition> <block pos:start="1141:33" pos:end="1147:25">{<block_content pos:start="1143:29" pos:end="1145:68">

                            <expr_stmt pos:start="1143:29" pos:end="1145:68"><expr pos:start="1143:29" pos:end="1145:67"><call pos:start="1143:29" pos:end="1145:67"><name pos:start="1143:29" pos:end="1143:58">gen_helper_vfp_fcvt_f64_to_f16</name><argument_list pos:start="1143:59" pos:end="1145:67">(<argument pos:start="1143:60" pos:end="1143:62"><expr pos:start="1143:60" pos:end="1143:62"><name pos:start="1143:60" pos:end="1143:62">tmp</name></expr></argument>, <argument pos:start="1143:65" pos:end="1143:71"><expr pos:start="1143:65" pos:end="1143:71"><name pos:start="1143:65" pos:end="1143:71">cpu_F0d</name></expr></argument>,

                                                           <argument pos:start="1145:60" pos:end="1145:66"><expr pos:start="1145:60" pos:end="1145:66"><name pos:start="1145:60" pos:end="1145:66">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1147:27" pos:end="1153:25">else <block pos:start="1147:32" pos:end="1153:25">{<block_content pos:start="1149:29" pos:end="1151:68">

                            <expr_stmt pos:start="1149:29" pos:end="1151:68"><expr pos:start="1149:29" pos:end="1151:67"><call pos:start="1149:29" pos:end="1151:67"><name pos:start="1149:29" pos:end="1149:58">gen_helper_vfp_fcvt_f32_to_f16</name><argument_list pos:start="1149:59" pos:end="1151:67">(<argument pos:start="1149:60" pos:end="1149:62"><expr pos:start="1149:60" pos:end="1149:62"><name pos:start="1149:60" pos:end="1149:62">tmp</name></expr></argument>, <argument pos:start="1149:65" pos:end="1149:71"><expr pos:start="1149:65" pos:end="1149:71"><name pos:start="1149:65" pos:end="1149:71">cpu_F0s</name></expr></argument>,

                                                           <argument pos:start="1151:60" pos:end="1151:66"><expr pos:start="1151:60" pos:end="1151:66"><name pos:start="1151:60" pos:end="1151:66">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1155:25" pos:end="1155:55"><expr pos:start="1155:25" pos:end="1155:54"><call pos:start="1155:25" pos:end="1155:54"><name pos:start="1155:25" pos:end="1155:40">tcg_gen_shli_i32</name><argument_list pos:start="1155:41" pos:end="1155:54">(<argument pos:start="1155:42" pos:end="1155:44"><expr pos:start="1155:42" pos:end="1155:44"><name pos:start="1155:42" pos:end="1155:44">tmp</name></expr></argument>, <argument pos:start="1155:47" pos:end="1155:49"><expr pos:start="1155:47" pos:end="1155:49"><name pos:start="1155:47" pos:end="1155:49">tmp</name></expr></argument>, <argument pos:start="1155:52" pos:end="1155:53"><expr pos:start="1155:52" pos:end="1155:53"><literal type="number" pos:start="1155:52" pos:end="1155:53">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1157:25" pos:end="1157:47"><expr pos:start="1157:25" pos:end="1157:46"><call pos:start="1157:25" pos:end="1157:46"><name pos:start="1157:25" pos:end="1157:39">gen_mov_F0_vreg</name><argument_list pos:start="1157:40" pos:end="1157:46">(<argument pos:start="1157:41" pos:end="1157:41"><expr pos:start="1157:41" pos:end="1157:41"><literal type="number" pos:start="1157:41" pos:end="1157:41">0</literal></expr></argument>, <argument pos:start="1157:44" pos:end="1157:45"><expr pos:start="1157:44" pos:end="1157:45"><name pos:start="1157:44" pos:end="1157:45">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1159:25" pos:end="1159:45"><expr pos:start="1159:25" pos:end="1159:44"><name pos:start="1159:25" pos:end="1159:28">tmp2</name> <operator pos:start="1159:30" pos:end="1159:30">=</operator> <call pos:start="1159:32" pos:end="1159:44"><name pos:start="1159:32" pos:end="1159:42">gen_vfp_mrs</name><argument_list pos:start="1159:43" pos:end="1159:44">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1161:25" pos:end="1161:55"><expr pos:start="1161:25" pos:end="1161:54"><call pos:start="1161:25" pos:end="1161:54"><name pos:start="1161:25" pos:end="1161:42">tcg_gen_ext16u_i32</name><argument_list pos:start="1161:43" pos:end="1161:54">(<argument pos:start="1161:44" pos:end="1161:47"><expr pos:start="1161:44" pos:end="1161:47"><name pos:start="1161:44" pos:end="1161:47">tmp2</name></expr></argument>, <argument pos:start="1161:50" pos:end="1161:53"><expr pos:start="1161:50" pos:end="1161:53"><name pos:start="1161:50" pos:end="1161:53">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1163:25" pos:end="1163:55"><expr pos:start="1163:25" pos:end="1163:54"><call pos:start="1163:25" pos:end="1163:54"><name pos:start="1163:25" pos:end="1163:38">tcg_gen_or_i32</name><argument_list pos:start="1163:39" pos:end="1163:54">(<argument pos:start="1163:40" pos:end="1163:42"><expr pos:start="1163:40" pos:end="1163:42"><name pos:start="1163:40" pos:end="1163:42">tmp</name></expr></argument>, <argument pos:start="1163:45" pos:end="1163:47"><expr pos:start="1163:45" pos:end="1163:47"><name pos:start="1163:45" pos:end="1163:47">tmp</name></expr></argument>, <argument pos:start="1163:50" pos:end="1163:53"><expr pos:start="1163:50" pos:end="1163:53"><name pos:start="1163:50" pos:end="1163:53">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1165:25" pos:end="1165:48"><expr pos:start="1165:25" pos:end="1165:47"><call pos:start="1165:25" pos:end="1165:47"><name pos:start="1165:25" pos:end="1165:41">tcg_temp_free_i32</name><argument_list pos:start="1165:42" pos:end="1165:47">(<argument pos:start="1165:43" pos:end="1165:46"><expr pos:start="1165:43" pos:end="1165:46"><name pos:start="1165:43" pos:end="1165:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1167:25" pos:end="1167:41"><expr pos:start="1167:25" pos:end="1167:40"><call pos:start="1167:25" pos:end="1167:40"><name pos:start="1167:25" pos:end="1167:35">gen_vfp_msr</name><argument_list pos:start="1167:36" pos:end="1167:40">(<argument pos:start="1167:37" pos:end="1167:39"><expr pos:start="1167:37" pos:end="1167:39"><name pos:start="1167:37" pos:end="1167:39">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1169:25" pos:end="1169:30">break;</break>

                    <case pos:start="1171:21" pos:end="1171:27">case <expr pos:start="1171:26" pos:end="1171:26"><literal type="number" pos:start="1171:26" pos:end="1171:26">8</literal></expr>:</case> <comment type="block" pos:start="1171:29" pos:end="1171:37">/* cmp */</comment>

                        <expr_stmt pos:start="1173:25" pos:end="1173:40"><expr pos:start="1173:25" pos:end="1173:39"><call pos:start="1173:25" pos:end="1173:39"><name pos:start="1173:25" pos:end="1173:35">gen_vfp_cmp</name><argument_list pos:start="1173:36" pos:end="1173:39">(<argument pos:start="1173:37" pos:end="1173:38"><expr pos:start="1173:37" pos:end="1173:38"><name pos:start="1173:37" pos:end="1173:38">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1175:25" pos:end="1175:30">break;</break>

                    <case pos:start="1177:21" pos:end="1177:27">case <expr pos:start="1177:26" pos:end="1177:26"><literal type="number" pos:start="1177:26" pos:end="1177:26">9</literal></expr>:</case> <comment type="block" pos:start="1177:29" pos:end="1177:38">/* cmpe */</comment>

                        <expr_stmt pos:start="1179:25" pos:end="1179:41"><expr pos:start="1179:25" pos:end="1179:40"><call pos:start="1179:25" pos:end="1179:40"><name pos:start="1179:25" pos:end="1179:36">gen_vfp_cmpe</name><argument_list pos:start="1179:37" pos:end="1179:40">(<argument pos:start="1179:38" pos:end="1179:39"><expr pos:start="1179:38" pos:end="1179:39"><name pos:start="1179:38" pos:end="1179:39">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1181:25" pos:end="1181:30">break;</break>

                    <case pos:start="1183:21" pos:end="1183:28">case <expr pos:start="1183:26" pos:end="1183:27"><literal type="number" pos:start="1183:26" pos:end="1183:27">10</literal></expr>:</case> <comment type="block" pos:start="1183:30" pos:end="1183:39">/* cmpz */</comment>

                        <expr_stmt pos:start="1185:25" pos:end="1185:40"><expr pos:start="1185:25" pos:end="1185:39"><call pos:start="1185:25" pos:end="1185:39"><name pos:start="1185:25" pos:end="1185:35">gen_vfp_cmp</name><argument_list pos:start="1185:36" pos:end="1185:39">(<argument pos:start="1185:37" pos:end="1185:38"><expr pos:start="1185:37" pos:end="1185:38"><name pos:start="1185:37" pos:end="1185:38">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1187:25" pos:end="1187:30">break;</break>

                    <case pos:start="1189:21" pos:end="1189:28">case <expr pos:start="1189:26" pos:end="1189:27"><literal type="number" pos:start="1189:26" pos:end="1189:27">11</literal></expr>:</case> <comment type="block" pos:start="1189:30" pos:end="1189:40">/* cmpez */</comment>

                        <expr_stmt pos:start="1191:25" pos:end="1191:43"><expr pos:start="1191:25" pos:end="1191:42"><call pos:start="1191:25" pos:end="1191:42"><name pos:start="1191:25" pos:end="1191:38">gen_vfp_F1_ld0</name><argument_list pos:start="1191:39" pos:end="1191:42">(<argument pos:start="1191:40" pos:end="1191:41"><expr pos:start="1191:40" pos:end="1191:41"><name pos:start="1191:40" pos:end="1191:41">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1193:25" pos:end="1193:41"><expr pos:start="1193:25" pos:end="1193:40"><call pos:start="1193:25" pos:end="1193:40"><name pos:start="1193:25" pos:end="1193:36">gen_vfp_cmpe</name><argument_list pos:start="1193:37" pos:end="1193:40">(<argument pos:start="1193:38" pos:end="1193:39"><expr pos:start="1193:38" pos:end="1193:39"><name pos:start="1193:38" pos:end="1193:39">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1195:25" pos:end="1195:30">break;</break>

                    <case pos:start="1197:21" pos:end="1197:28">case <expr pos:start="1197:26" pos:end="1197:27"><literal type="number" pos:start="1197:26" pos:end="1197:27">12</literal></expr>:</case> <comment type="block" pos:start="1197:30" pos:end="1197:41">/* vrintr */</comment>

                    <block pos:start="1199:21" pos:end="1217:21">{<block_content pos:start="1201:25" pos:end="1215:30">

                        <decl_stmt pos:start="1201:25" pos:end="1201:60"><decl pos:start="1201:25" pos:end="1201:59"><type pos:start="1201:25" pos:end="1201:32"><name pos:start="1201:25" pos:end="1201:32">TCGv_ptr</name></type> <name pos:start="1201:34" pos:end="1201:37">fpst</name> <init pos:start="1201:39" pos:end="1201:59">= <expr pos:start="1201:41" pos:end="1201:59"><call pos:start="1201:41" pos:end="1201:59"><name pos:start="1201:41" pos:end="1201:56">get_fpstatus_ptr</name><argument_list pos:start="1201:57" pos:end="1201:59">(<argument pos:start="1201:58" pos:end="1201:58"><expr pos:start="1201:58" pos:end="1201:58"><literal type="number" pos:start="1201:58" pos:end="1201:58">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="1203:25" pos:end="1211:25"><if pos:start="1203:25" pos:end="1207:25">if <condition pos:start="1203:28" pos:end="1203:31">(<expr pos:start="1203:29" pos:end="1203:30"><name pos:start="1203:29" pos:end="1203:30">dp</name></expr>)</condition> <block pos:start="1203:33" pos:end="1207:25">{<block_content pos:start="1205:29" pos:end="1205:69">

                            <expr_stmt pos:start="1205:29" pos:end="1205:69"><expr pos:start="1205:29" pos:end="1205:68"><call pos:start="1205:29" pos:end="1205:68"><name pos:start="1205:29" pos:end="1205:44">gen_helper_rintd</name><argument_list pos:start="1205:45" pos:end="1205:68">(<argument pos:start="1205:46" pos:end="1205:52"><expr pos:start="1205:46" pos:end="1205:52"><name pos:start="1205:46" pos:end="1205:52">cpu_F0d</name></expr></argument>, <argument pos:start="1205:55" pos:end="1205:61"><expr pos:start="1205:55" pos:end="1205:61"><name pos:start="1205:55" pos:end="1205:61">cpu_F0d</name></expr></argument>, <argument pos:start="1205:64" pos:end="1205:67"><expr pos:start="1205:64" pos:end="1205:67"><name pos:start="1205:64" pos:end="1205:67">fpst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1207:27" pos:end="1211:25">else <block pos:start="1207:32" pos:end="1211:25">{<block_content pos:start="1209:29" pos:end="1209:69">

                            <expr_stmt pos:start="1209:29" pos:end="1209:69"><expr pos:start="1209:29" pos:end="1209:68"><call pos:start="1209:29" pos:end="1209:68"><name pos:start="1209:29" pos:end="1209:44">gen_helper_rints</name><argument_list pos:start="1209:45" pos:end="1209:68">(<argument pos:start="1209:46" pos:end="1209:52"><expr pos:start="1209:46" pos:end="1209:52"><name pos:start="1209:46" pos:end="1209:52">cpu_F0s</name></expr></argument>, <argument pos:start="1209:55" pos:end="1209:61"><expr pos:start="1209:55" pos:end="1209:61"><name pos:start="1209:55" pos:end="1209:61">cpu_F0s</name></expr></argument>, <argument pos:start="1209:64" pos:end="1209:67"><expr pos:start="1209:64" pos:end="1209:67"><name pos:start="1209:64" pos:end="1209:67">fpst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1213:25" pos:end="1213:48"><expr pos:start="1213:25" pos:end="1213:47"><call pos:start="1213:25" pos:end="1213:47"><name pos:start="1213:25" pos:end="1213:41">tcg_temp_free_ptr</name><argument_list pos:start="1213:42" pos:end="1213:47">(<argument pos:start="1213:43" pos:end="1213:46"><expr pos:start="1213:43" pos:end="1213:46"><name pos:start="1213:43" pos:end="1213:46">fpst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1215:25" pos:end="1215:30">break;</break>

                    </block_content>}</block>

                    <case pos:start="1219:21" pos:end="1219:28">case <expr pos:start="1219:26" pos:end="1219:27"><literal type="number" pos:start="1219:26" pos:end="1219:27">13</literal></expr>:</case> <comment type="block" pos:start="1219:30" pos:end="1219:41">/* vrintz */</comment>

                    <block pos:start="1221:21" pos:end="1249:21">{<block_content pos:start="1223:25" pos:end="1247:30">

                        <decl_stmt pos:start="1223:25" pos:end="1223:60"><decl pos:start="1223:25" pos:end="1223:59"><type pos:start="1223:25" pos:end="1223:32"><name pos:start="1223:25" pos:end="1223:32">TCGv_ptr</name></type> <name pos:start="1223:34" pos:end="1223:37">fpst</name> <init pos:start="1223:39" pos:end="1223:59">= <expr pos:start="1223:41" pos:end="1223:59"><call pos:start="1223:41" pos:end="1223:59"><name pos:start="1223:41" pos:end="1223:56">get_fpstatus_ptr</name><argument_list pos:start="1223:57" pos:end="1223:59">(<argument pos:start="1223:58" pos:end="1223:58"><expr pos:start="1223:58" pos:end="1223:58"><literal type="number" pos:start="1223:58" pos:end="1223:58">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="1225:25" pos:end="1225:43"><decl pos:start="1225:25" pos:end="1225:42"><type pos:start="1225:25" pos:end="1225:32"><name pos:start="1225:25" pos:end="1225:32">TCGv_i32</name></type> <name pos:start="1225:34" pos:end="1225:42">tcg_rmode</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="1227:25" pos:end="1227:71"><expr pos:start="1227:25" pos:end="1227:70"><name pos:start="1227:25" pos:end="1227:33">tcg_rmode</name> <operator pos:start="1227:35" pos:end="1227:35">=</operator> <call pos:start="1227:37" pos:end="1227:70"><name pos:start="1227:37" pos:end="1227:49">tcg_const_i32</name><argument_list pos:start="1227:50" pos:end="1227:70">(<argument pos:start="1227:51" pos:end="1227:69"><expr pos:start="1227:51" pos:end="1227:69"><name pos:start="1227:51" pos:end="1227:69">float_round_to_zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1229:25" pos:end="1229:76"><expr pos:start="1229:25" pos:end="1229:75"><call pos:start="1229:25" pos:end="1229:75"><name pos:start="1229:25" pos:end="1229:44">gen_helper_set_rmode</name><argument_list pos:start="1229:45" pos:end="1229:75">(<argument pos:start="1229:46" pos:end="1229:54"><expr pos:start="1229:46" pos:end="1229:54"><name pos:start="1229:46" pos:end="1229:54">tcg_rmode</name></expr></argument>, <argument pos:start="1229:57" pos:end="1229:65"><expr pos:start="1229:57" pos:end="1229:65"><name pos:start="1229:57" pos:end="1229:65">tcg_rmode</name></expr></argument>, <argument pos:start="1229:68" pos:end="1229:74"><expr pos:start="1229:68" pos:end="1229:74"><name pos:start="1229:68" pos:end="1229:74">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1231:25" pos:end="1239:25"><if pos:start="1231:25" pos:end="1235:25">if <condition pos:start="1231:28" pos:end="1231:31">(<expr pos:start="1231:29" pos:end="1231:30"><name pos:start="1231:29" pos:end="1231:30">dp</name></expr>)</condition> <block pos:start="1231:33" pos:end="1235:25">{<block_content pos:start="1233:29" pos:end="1233:69">

                            <expr_stmt pos:start="1233:29" pos:end="1233:69"><expr pos:start="1233:29" pos:end="1233:68"><call pos:start="1233:29" pos:end="1233:68"><name pos:start="1233:29" pos:end="1233:44">gen_helper_rintd</name><argument_list pos:start="1233:45" pos:end="1233:68">(<argument pos:start="1233:46" pos:end="1233:52"><expr pos:start="1233:46" pos:end="1233:52"><name pos:start="1233:46" pos:end="1233:52">cpu_F0d</name></expr></argument>, <argument pos:start="1233:55" pos:end="1233:61"><expr pos:start="1233:55" pos:end="1233:61"><name pos:start="1233:55" pos:end="1233:61">cpu_F0d</name></expr></argument>, <argument pos:start="1233:64" pos:end="1233:67"><expr pos:start="1233:64" pos:end="1233:67"><name pos:start="1233:64" pos:end="1233:67">fpst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1235:27" pos:end="1239:25">else <block pos:start="1235:32" pos:end="1239:25">{<block_content pos:start="1237:29" pos:end="1237:69">

                            <expr_stmt pos:start="1237:29" pos:end="1237:69"><expr pos:start="1237:29" pos:end="1237:68"><call pos:start="1237:29" pos:end="1237:68"><name pos:start="1237:29" pos:end="1237:44">gen_helper_rints</name><argument_list pos:start="1237:45" pos:end="1237:68">(<argument pos:start="1237:46" pos:end="1237:52"><expr pos:start="1237:46" pos:end="1237:52"><name pos:start="1237:46" pos:end="1237:52">cpu_F0s</name></expr></argument>, <argument pos:start="1237:55" pos:end="1237:61"><expr pos:start="1237:55" pos:end="1237:61"><name pos:start="1237:55" pos:end="1237:61">cpu_F0s</name></expr></argument>, <argument pos:start="1237:64" pos:end="1237:67"><expr pos:start="1237:64" pos:end="1237:67"><name pos:start="1237:64" pos:end="1237:67">fpst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1241:25" pos:end="1241:76"><expr pos:start="1241:25" pos:end="1241:75"><call pos:start="1241:25" pos:end="1241:75"><name pos:start="1241:25" pos:end="1241:44">gen_helper_set_rmode</name><argument_list pos:start="1241:45" pos:end="1241:75">(<argument pos:start="1241:46" pos:end="1241:54"><expr pos:start="1241:46" pos:end="1241:54"><name pos:start="1241:46" pos:end="1241:54">tcg_rmode</name></expr></argument>, <argument pos:start="1241:57" pos:end="1241:65"><expr pos:start="1241:57" pos:end="1241:65"><name pos:start="1241:57" pos:end="1241:65">tcg_rmode</name></expr></argument>, <argument pos:start="1241:68" pos:end="1241:74"><expr pos:start="1241:68" pos:end="1241:74"><name pos:start="1241:68" pos:end="1241:74">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1243:25" pos:end="1243:53"><expr pos:start="1243:25" pos:end="1243:52"><call pos:start="1243:25" pos:end="1243:52"><name pos:start="1243:25" pos:end="1243:41">tcg_temp_free_i32</name><argument_list pos:start="1243:42" pos:end="1243:52">(<argument pos:start="1243:43" pos:end="1243:51"><expr pos:start="1243:43" pos:end="1243:51"><name pos:start="1243:43" pos:end="1243:51">tcg_rmode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1245:25" pos:end="1245:48"><expr pos:start="1245:25" pos:end="1245:47"><call pos:start="1245:25" pos:end="1245:47"><name pos:start="1245:25" pos:end="1245:41">tcg_temp_free_ptr</name><argument_list pos:start="1245:42" pos:end="1245:47">(<argument pos:start="1245:43" pos:end="1245:46"><expr pos:start="1245:43" pos:end="1245:46"><name pos:start="1245:43" pos:end="1245:46">fpst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1247:25" pos:end="1247:30">break;</break>

                    </block_content>}</block>

                    <case pos:start="1251:21" pos:end="1251:28">case <expr pos:start="1251:26" pos:end="1251:27"><literal type="number" pos:start="1251:26" pos:end="1251:27">14</literal></expr>:</case> <comment type="block" pos:start="1251:30" pos:end="1251:41">/* vrintx */</comment>

                    <block pos:start="1253:21" pos:end="1271:21">{<block_content pos:start="1255:25" pos:end="1269:30">

                        <decl_stmt pos:start="1255:25" pos:end="1255:60"><decl pos:start="1255:25" pos:end="1255:59"><type pos:start="1255:25" pos:end="1255:32"><name pos:start="1255:25" pos:end="1255:32">TCGv_ptr</name></type> <name pos:start="1255:34" pos:end="1255:37">fpst</name> <init pos:start="1255:39" pos:end="1255:59">= <expr pos:start="1255:41" pos:end="1255:59"><call pos:start="1255:41" pos:end="1255:59"><name pos:start="1255:41" pos:end="1255:56">get_fpstatus_ptr</name><argument_list pos:start="1255:57" pos:end="1255:59">(<argument pos:start="1255:58" pos:end="1255:58"><expr pos:start="1255:58" pos:end="1255:58"><literal type="number" pos:start="1255:58" pos:end="1255:58">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="1257:25" pos:end="1265:25"><if pos:start="1257:25" pos:end="1261:25">if <condition pos:start="1257:28" pos:end="1257:31">(<expr pos:start="1257:29" pos:end="1257:30"><name pos:start="1257:29" pos:end="1257:30">dp</name></expr>)</condition> <block pos:start="1257:33" pos:end="1261:25">{<block_content pos:start="1259:29" pos:end="1259:75">

                            <expr_stmt pos:start="1259:29" pos:end="1259:75"><expr pos:start="1259:29" pos:end="1259:74"><call pos:start="1259:29" pos:end="1259:74"><name pos:start="1259:29" pos:end="1259:50">gen_helper_rintd_exact</name><argument_list pos:start="1259:51" pos:end="1259:74">(<argument pos:start="1259:52" pos:end="1259:58"><expr pos:start="1259:52" pos:end="1259:58"><name pos:start="1259:52" pos:end="1259:58">cpu_F0d</name></expr></argument>, <argument pos:start="1259:61" pos:end="1259:67"><expr pos:start="1259:61" pos:end="1259:67"><name pos:start="1259:61" pos:end="1259:67">cpu_F0d</name></expr></argument>, <argument pos:start="1259:70" pos:end="1259:73"><expr pos:start="1259:70" pos:end="1259:73"><name pos:start="1259:70" pos:end="1259:73">fpst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1261:27" pos:end="1265:25">else <block pos:start="1261:32" pos:end="1265:25">{<block_content pos:start="1263:29" pos:end="1263:75">

                            <expr_stmt pos:start="1263:29" pos:end="1263:75"><expr pos:start="1263:29" pos:end="1263:74"><call pos:start="1263:29" pos:end="1263:74"><name pos:start="1263:29" pos:end="1263:50">gen_helper_rints_exact</name><argument_list pos:start="1263:51" pos:end="1263:74">(<argument pos:start="1263:52" pos:end="1263:58"><expr pos:start="1263:52" pos:end="1263:58"><name pos:start="1263:52" pos:end="1263:58">cpu_F0s</name></expr></argument>, <argument pos:start="1263:61" pos:end="1263:67"><expr pos:start="1263:61" pos:end="1263:67"><name pos:start="1263:61" pos:end="1263:67">cpu_F0s</name></expr></argument>, <argument pos:start="1263:70" pos:end="1263:73"><expr pos:start="1263:70" pos:end="1263:73"><name pos:start="1263:70" pos:end="1263:73">fpst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1267:25" pos:end="1267:48"><expr pos:start="1267:25" pos:end="1267:47"><call pos:start="1267:25" pos:end="1267:47"><name pos:start="1267:25" pos:end="1267:41">tcg_temp_free_ptr</name><argument_list pos:start="1267:42" pos:end="1267:47">(<argument pos:start="1267:43" pos:end="1267:46"><expr pos:start="1267:43" pos:end="1267:46"><name pos:start="1267:43" pos:end="1267:46">fpst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1269:25" pos:end="1269:30">break;</break>

                    </block_content>}</block>

                    <case pos:start="1273:21" pos:end="1273:28">case <expr pos:start="1273:26" pos:end="1273:27"><literal type="number" pos:start="1273:26" pos:end="1273:27">15</literal></expr>:</case> <comment type="block" pos:start="1273:30" pos:end="1273:61">/* single&lt;-&gt;double conversion */</comment>

                        <if_stmt pos:start="1275:25" pos:end="1281:77"><if pos:start="1275:25" pos:end="1277:77">if <condition pos:start="1275:28" pos:end="1275:31">(<expr pos:start="1275:29" pos:end="1275:30"><name pos:start="1275:29" pos:end="1275:30">dp</name></expr>)</condition><block type="pseudo" pos:start="1277:29" pos:end="1277:77"><block_content pos:start="1277:29" pos:end="1277:77">

                            <expr_stmt pos:start="1277:29" pos:end="1277:77"><expr pos:start="1277:29" pos:end="1277:76"><call pos:start="1277:29" pos:end="1277:76"><name pos:start="1277:29" pos:end="1277:49">gen_helper_vfp_fcvtsd</name><argument_list pos:start="1277:50" pos:end="1277:76">(<argument pos:start="1277:51" pos:end="1277:57"><expr pos:start="1277:51" pos:end="1277:57"><name pos:start="1277:51" pos:end="1277:57">cpu_F0s</name></expr></argument>, <argument pos:start="1277:60" pos:end="1277:66"><expr pos:start="1277:60" pos:end="1277:66"><name pos:start="1277:60" pos:end="1277:66">cpu_F0d</name></expr></argument>, <argument pos:start="1277:69" pos:end="1277:75"><expr pos:start="1277:69" pos:end="1277:75"><name pos:start="1277:69" pos:end="1277:75">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1279:25" pos:end="1281:77">else<block type="pseudo" pos:start="1281:29" pos:end="1281:77"><block_content pos:start="1281:29" pos:end="1281:77">

                            <expr_stmt pos:start="1281:29" pos:end="1281:77"><expr pos:start="1281:29" pos:end="1281:76"><call pos:start="1281:29" pos:end="1281:76"><name pos:start="1281:29" pos:end="1281:49">gen_helper_vfp_fcvtds</name><argument_list pos:start="1281:50" pos:end="1281:76">(<argument pos:start="1281:51" pos:end="1281:57"><expr pos:start="1281:51" pos:end="1281:57"><name pos:start="1281:51" pos:end="1281:57">cpu_F0d</name></expr></argument>, <argument pos:start="1281:60" pos:end="1281:66"><expr pos:start="1281:60" pos:end="1281:66"><name pos:start="1281:60" pos:end="1281:66">cpu_F0s</name></expr></argument>, <argument pos:start="1281:69" pos:end="1281:75"><expr pos:start="1281:69" pos:end="1281:75"><name pos:start="1281:69" pos:end="1281:75">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <break pos:start="1283:25" pos:end="1283:30">break;</break>

                    <case pos:start="1285:21" pos:end="1285:28">case <expr pos:start="1285:26" pos:end="1285:27"><literal type="number" pos:start="1285:26" pos:end="1285:27">16</literal></expr>:</case> <comment type="block" pos:start="1285:30" pos:end="1285:40">/* fuito */</comment>

                        <expr_stmt pos:start="1287:25" pos:end="1287:44"><expr pos:start="1287:25" pos:end="1287:43"><call pos:start="1287:25" pos:end="1287:43"><name pos:start="1287:25" pos:end="1287:36">gen_vfp_uito</name><argument_list pos:start="1287:37" pos:end="1287:43">(<argument pos:start="1287:38" pos:end="1287:39"><expr pos:start="1287:38" pos:end="1287:39"><name pos:start="1287:38" pos:end="1287:39">dp</name></expr></argument>, <argument pos:start="1287:42" pos:end="1287:42"><expr pos:start="1287:42" pos:end="1287:42"><literal type="number" pos:start="1287:42" pos:end="1287:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1289:25" pos:end="1289:30">break;</break>

                    <case pos:start="1291:21" pos:end="1291:28">case <expr pos:start="1291:26" pos:end="1291:27"><literal type="number" pos:start="1291:26" pos:end="1291:27">17</literal></expr>:</case> <comment type="block" pos:start="1291:30" pos:end="1291:40">/* fsito */</comment>

                        <expr_stmt pos:start="1293:25" pos:end="1293:44"><expr pos:start="1293:25" pos:end="1293:43"><call pos:start="1293:25" pos:end="1293:43"><name pos:start="1293:25" pos:end="1293:36">gen_vfp_sito</name><argument_list pos:start="1293:37" pos:end="1293:43">(<argument pos:start="1293:38" pos:end="1293:39"><expr pos:start="1293:38" pos:end="1293:39"><name pos:start="1293:38" pos:end="1293:39">dp</name></expr></argument>, <argument pos:start="1293:42" pos:end="1293:42"><expr pos:start="1293:42" pos:end="1293:42"><literal type="number" pos:start="1293:42" pos:end="1293:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1295:25" pos:end="1295:30">break;</break>

                    <case pos:start="1297:21" pos:end="1297:28">case <expr pos:start="1297:26" pos:end="1297:27"><literal type="number" pos:start="1297:26" pos:end="1297:27">20</literal></expr>:</case> <comment type="block" pos:start="1297:30" pos:end="1297:40">/* fshto */</comment>

                        <if_stmt pos:start="1299:25" pos:end="1303:25"><if pos:start="1299:25" pos:end="1303:25">if <condition pos:start="1299:28" pos:end="1299:65">(<expr pos:start="1299:29" pos:end="1299:64"><operator pos:start="1299:29" pos:end="1299:29">!</operator><call pos:start="1299:30" pos:end="1299:64"><name pos:start="1299:30" pos:end="1299:43">arm_dc_feature</name><argument_list pos:start="1299:44" pos:end="1299:64">(<argument pos:start="1299:45" pos:end="1299:45"><expr pos:start="1299:45" pos:end="1299:45"><name pos:start="1299:45" pos:end="1299:45">s</name></expr></argument>, <argument pos:start="1299:48" pos:end="1299:63"><expr pos:start="1299:48" pos:end="1299:63"><name pos:start="1299:48" pos:end="1299:63">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1299:67" pos:end="1303:25">{<block_content pos:start="1301:29" pos:end="1301:37">

                            <return pos:start="1301:29" pos:end="1301:37">return <expr pos:start="1301:36" pos:end="1301:36"><literal type="number" pos:start="1301:36" pos:end="1301:36">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1305:25" pos:end="1305:53"><expr pos:start="1305:25" pos:end="1305:52"><call pos:start="1305:25" pos:end="1305:52"><name pos:start="1305:25" pos:end="1305:36">gen_vfp_shto</name><argument_list pos:start="1305:37" pos:end="1305:52">(<argument pos:start="1305:38" pos:end="1305:39"><expr pos:start="1305:38" pos:end="1305:39"><name pos:start="1305:38" pos:end="1305:39">dp</name></expr></argument>, <argument pos:start="1305:42" pos:end="1305:48"><expr pos:start="1305:42" pos:end="1305:48"><literal type="number" pos:start="1305:42" pos:end="1305:45">16</literal> <operator pos:start="1305:45" pos:end="1305:45">-</operator> <name pos:start="1305:47" pos:end="1305:48">rm</name></expr></argument>, <argument pos:start="1305:51" pos:end="1305:51"><expr pos:start="1305:51" pos:end="1305:51"><literal type="number" pos:start="1305:51" pos:end="1305:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1307:25" pos:end="1307:30">break;</break>

                    <case pos:start="1309:21" pos:end="1309:28">case <expr pos:start="1309:26" pos:end="1309:27"><literal type="number" pos:start="1309:26" pos:end="1309:27">21</literal></expr>:</case> <comment type="block" pos:start="1309:30" pos:end="1309:40">/* fslto */</comment>

                        <if_stmt pos:start="1311:25" pos:end="1315:25"><if pos:start="1311:25" pos:end="1315:25">if <condition pos:start="1311:28" pos:end="1311:65">(<expr pos:start="1311:29" pos:end="1311:64"><operator pos:start="1311:29" pos:end="1311:29">!</operator><call pos:start="1311:30" pos:end="1311:64"><name pos:start="1311:30" pos:end="1311:43">arm_dc_feature</name><argument_list pos:start="1311:44" pos:end="1311:64">(<argument pos:start="1311:45" pos:end="1311:45"><expr pos:start="1311:45" pos:end="1311:45"><name pos:start="1311:45" pos:end="1311:45">s</name></expr></argument>, <argument pos:start="1311:48" pos:end="1311:63"><expr pos:start="1311:48" pos:end="1311:63"><name pos:start="1311:48" pos:end="1311:63">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1311:67" pos:end="1315:25">{<block_content pos:start="1313:29" pos:end="1313:37">

                            <return pos:start="1313:29" pos:end="1313:37">return <expr pos:start="1313:36" pos:end="1313:36"><literal type="number" pos:start="1313:36" pos:end="1313:36">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1317:25" pos:end="1317:53"><expr pos:start="1317:25" pos:end="1317:52"><call pos:start="1317:25" pos:end="1317:52"><name pos:start="1317:25" pos:end="1317:36">gen_vfp_slto</name><argument_list pos:start="1317:37" pos:end="1317:52">(<argument pos:start="1317:38" pos:end="1317:39"><expr pos:start="1317:38" pos:end="1317:39"><name pos:start="1317:38" pos:end="1317:39">dp</name></expr></argument>, <argument pos:start="1317:42" pos:end="1317:48"><expr pos:start="1317:42" pos:end="1317:48"><literal type="number" pos:start="1317:42" pos:end="1317:45">32</literal> <operator pos:start="1317:45" pos:end="1317:45">-</operator> <name pos:start="1317:47" pos:end="1317:48">rm</name></expr></argument>, <argument pos:start="1317:51" pos:end="1317:51"><expr pos:start="1317:51" pos:end="1317:51"><literal type="number" pos:start="1317:51" pos:end="1317:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1319:25" pos:end="1319:30">break;</break>

                    <case pos:start="1321:21" pos:end="1321:28">case <expr pos:start="1321:26" pos:end="1321:27"><literal type="number" pos:start="1321:26" pos:end="1321:27">22</literal></expr>:</case> <comment type="block" pos:start="1321:30" pos:end="1321:40">/* fuhto */</comment>

                        <if_stmt pos:start="1323:25" pos:end="1327:25"><if pos:start="1323:25" pos:end="1327:25">if <condition pos:start="1323:28" pos:end="1323:65">(<expr pos:start="1323:29" pos:end="1323:64"><operator pos:start="1323:29" pos:end="1323:29">!</operator><call pos:start="1323:30" pos:end="1323:64"><name pos:start="1323:30" pos:end="1323:43">arm_dc_feature</name><argument_list pos:start="1323:44" pos:end="1323:64">(<argument pos:start="1323:45" pos:end="1323:45"><expr pos:start="1323:45" pos:end="1323:45"><name pos:start="1323:45" pos:end="1323:45">s</name></expr></argument>, <argument pos:start="1323:48" pos:end="1323:63"><expr pos:start="1323:48" pos:end="1323:63"><name pos:start="1323:48" pos:end="1323:63">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1323:67" pos:end="1327:25">{<block_content pos:start="1325:29" pos:end="1325:37">

                            <return pos:start="1325:29" pos:end="1325:37">return <expr pos:start="1325:36" pos:end="1325:36"><literal type="number" pos:start="1325:36" pos:end="1325:36">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1329:25" pos:end="1329:53"><expr pos:start="1329:25" pos:end="1329:52"><call pos:start="1329:25" pos:end="1329:52"><name pos:start="1329:25" pos:end="1329:36">gen_vfp_uhto</name><argument_list pos:start="1329:37" pos:end="1329:52">(<argument pos:start="1329:38" pos:end="1329:39"><expr pos:start="1329:38" pos:end="1329:39"><name pos:start="1329:38" pos:end="1329:39">dp</name></expr></argument>, <argument pos:start="1329:42" pos:end="1329:48"><expr pos:start="1329:42" pos:end="1329:48"><literal type="number" pos:start="1329:42" pos:end="1329:45">16</literal> <operator pos:start="1329:45" pos:end="1329:45">-</operator> <name pos:start="1329:47" pos:end="1329:48">rm</name></expr></argument>, <argument pos:start="1329:51" pos:end="1329:51"><expr pos:start="1329:51" pos:end="1329:51"><literal type="number" pos:start="1329:51" pos:end="1329:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1331:25" pos:end="1331:30">break;</break>

                    <case pos:start="1333:21" pos:end="1333:28">case <expr pos:start="1333:26" pos:end="1333:27"><literal type="number" pos:start="1333:26" pos:end="1333:27">23</literal></expr>:</case> <comment type="block" pos:start="1333:30" pos:end="1333:40">/* fulto */</comment>

                        <if_stmt pos:start="1335:25" pos:end="1339:25"><if pos:start="1335:25" pos:end="1339:25">if <condition pos:start="1335:28" pos:end="1335:65">(<expr pos:start="1335:29" pos:end="1335:64"><operator pos:start="1335:29" pos:end="1335:29">!</operator><call pos:start="1335:30" pos:end="1335:64"><name pos:start="1335:30" pos:end="1335:43">arm_dc_feature</name><argument_list pos:start="1335:44" pos:end="1335:64">(<argument pos:start="1335:45" pos:end="1335:45"><expr pos:start="1335:45" pos:end="1335:45"><name pos:start="1335:45" pos:end="1335:45">s</name></expr></argument>, <argument pos:start="1335:48" pos:end="1335:63"><expr pos:start="1335:48" pos:end="1335:63"><name pos:start="1335:48" pos:end="1335:63">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1335:67" pos:end="1339:25">{<block_content pos:start="1337:29" pos:end="1337:37">

                            <return pos:start="1337:29" pos:end="1337:37">return <expr pos:start="1337:36" pos:end="1337:36"><literal type="number" pos:start="1337:36" pos:end="1337:36">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1341:25" pos:end="1341:53"><expr pos:start="1341:25" pos:end="1341:52"><call pos:start="1341:25" pos:end="1341:52"><name pos:start="1341:25" pos:end="1341:36">gen_vfp_ulto</name><argument_list pos:start="1341:37" pos:end="1341:52">(<argument pos:start="1341:38" pos:end="1341:39"><expr pos:start="1341:38" pos:end="1341:39"><name pos:start="1341:38" pos:end="1341:39">dp</name></expr></argument>, <argument pos:start="1341:42" pos:end="1341:48"><expr pos:start="1341:42" pos:end="1341:48"><literal type="number" pos:start="1341:42" pos:end="1341:45">32</literal> <operator pos:start="1341:45" pos:end="1341:45">-</operator> <name pos:start="1341:47" pos:end="1341:48">rm</name></expr></argument>, <argument pos:start="1341:51" pos:end="1341:51"><expr pos:start="1341:51" pos:end="1341:51"><literal type="number" pos:start="1341:51" pos:end="1341:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1343:25" pos:end="1343:30">break;</break>

                    <case pos:start="1345:21" pos:end="1345:28">case <expr pos:start="1345:26" pos:end="1345:27"><literal type="number" pos:start="1345:26" pos:end="1345:27">24</literal></expr>:</case> <comment type="block" pos:start="1345:30" pos:end="1345:40">/* ftoui */</comment>

                        <expr_stmt pos:start="1347:25" pos:end="1347:44"><expr pos:start="1347:25" pos:end="1347:43"><call pos:start="1347:25" pos:end="1347:43"><name pos:start="1347:25" pos:end="1347:36">gen_vfp_toui</name><argument_list pos:start="1347:37" pos:end="1347:43">(<argument pos:start="1347:38" pos:end="1347:39"><expr pos:start="1347:38" pos:end="1347:39"><name pos:start="1347:38" pos:end="1347:39">dp</name></expr></argument>, <argument pos:start="1347:42" pos:end="1347:42"><expr pos:start="1347:42" pos:end="1347:42"><literal type="number" pos:start="1347:42" pos:end="1347:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1349:25" pos:end="1349:30">break;</break>

                    <case pos:start="1351:21" pos:end="1351:28">case <expr pos:start="1351:26" pos:end="1351:27"><literal type="number" pos:start="1351:26" pos:end="1351:27">25</literal></expr>:</case> <comment type="block" pos:start="1351:30" pos:end="1351:41">/* ftouiz */</comment>

                        <expr_stmt pos:start="1353:25" pos:end="1353:45"><expr pos:start="1353:25" pos:end="1353:44"><call pos:start="1353:25" pos:end="1353:44"><name pos:start="1353:25" pos:end="1353:37">gen_vfp_touiz</name><argument_list pos:start="1353:38" pos:end="1353:44">(<argument pos:start="1353:39" pos:end="1353:40"><expr pos:start="1353:39" pos:end="1353:40"><name pos:start="1353:39" pos:end="1353:40">dp</name></expr></argument>, <argument pos:start="1353:43" pos:end="1353:43"><expr pos:start="1353:43" pos:end="1353:43"><literal type="number" pos:start="1353:43" pos:end="1353:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1355:25" pos:end="1355:30">break;</break>

                    <case pos:start="1357:21" pos:end="1357:28">case <expr pos:start="1357:26" pos:end="1357:27"><literal type="number" pos:start="1357:26" pos:end="1357:27">26</literal></expr>:</case> <comment type="block" pos:start="1357:30" pos:end="1357:40">/* ftosi */</comment>

                        <expr_stmt pos:start="1359:25" pos:end="1359:44"><expr pos:start="1359:25" pos:end="1359:43"><call pos:start="1359:25" pos:end="1359:43"><name pos:start="1359:25" pos:end="1359:36">gen_vfp_tosi</name><argument_list pos:start="1359:37" pos:end="1359:43">(<argument pos:start="1359:38" pos:end="1359:39"><expr pos:start="1359:38" pos:end="1359:39"><name pos:start="1359:38" pos:end="1359:39">dp</name></expr></argument>, <argument pos:start="1359:42" pos:end="1359:42"><expr pos:start="1359:42" pos:end="1359:42"><literal type="number" pos:start="1359:42" pos:end="1359:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1361:25" pos:end="1361:30">break;</break>

                    <case pos:start="1363:21" pos:end="1363:28">case <expr pos:start="1363:26" pos:end="1363:27"><literal type="number" pos:start="1363:26" pos:end="1363:27">27</literal></expr>:</case> <comment type="block" pos:start="1363:30" pos:end="1363:41">/* ftosiz */</comment>

                        <expr_stmt pos:start="1365:25" pos:end="1365:45"><expr pos:start="1365:25" pos:end="1365:44"><call pos:start="1365:25" pos:end="1365:44"><name pos:start="1365:25" pos:end="1365:37">gen_vfp_tosiz</name><argument_list pos:start="1365:38" pos:end="1365:44">(<argument pos:start="1365:39" pos:end="1365:40"><expr pos:start="1365:39" pos:end="1365:40"><name pos:start="1365:39" pos:end="1365:40">dp</name></expr></argument>, <argument pos:start="1365:43" pos:end="1365:43"><expr pos:start="1365:43" pos:end="1365:43"><literal type="number" pos:start="1365:43" pos:end="1365:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1367:25" pos:end="1367:30">break;</break>

                    <case pos:start="1369:21" pos:end="1369:28">case <expr pos:start="1369:26" pos:end="1369:27"><literal type="number" pos:start="1369:26" pos:end="1369:27">28</literal></expr>:</case> <comment type="block" pos:start="1369:30" pos:end="1369:40">/* ftosh */</comment>

                        <if_stmt pos:start="1371:25" pos:end="1375:25"><if pos:start="1371:25" pos:end="1375:25">if <condition pos:start="1371:28" pos:end="1371:65">(<expr pos:start="1371:29" pos:end="1371:64"><operator pos:start="1371:29" pos:end="1371:29">!</operator><call pos:start="1371:30" pos:end="1371:64"><name pos:start="1371:30" pos:end="1371:43">arm_dc_feature</name><argument_list pos:start="1371:44" pos:end="1371:64">(<argument pos:start="1371:45" pos:end="1371:45"><expr pos:start="1371:45" pos:end="1371:45"><name pos:start="1371:45" pos:end="1371:45">s</name></expr></argument>, <argument pos:start="1371:48" pos:end="1371:63"><expr pos:start="1371:48" pos:end="1371:63"><name pos:start="1371:48" pos:end="1371:63">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1371:67" pos:end="1375:25">{<block_content pos:start="1373:29" pos:end="1373:37">

                            <return pos:start="1373:29" pos:end="1373:37">return <expr pos:start="1373:36" pos:end="1373:36"><literal type="number" pos:start="1373:36" pos:end="1373:36">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1377:25" pos:end="1377:53"><expr pos:start="1377:25" pos:end="1377:52"><call pos:start="1377:25" pos:end="1377:52"><name pos:start="1377:25" pos:end="1377:36">gen_vfp_tosh</name><argument_list pos:start="1377:37" pos:end="1377:52">(<argument pos:start="1377:38" pos:end="1377:39"><expr pos:start="1377:38" pos:end="1377:39"><name pos:start="1377:38" pos:end="1377:39">dp</name></expr></argument>, <argument pos:start="1377:42" pos:end="1377:48"><expr pos:start="1377:42" pos:end="1377:48"><literal type="number" pos:start="1377:42" pos:end="1377:45">16</literal> <operator pos:start="1377:45" pos:end="1377:45">-</operator> <name pos:start="1377:47" pos:end="1377:48">rm</name></expr></argument>, <argument pos:start="1377:51" pos:end="1377:51"><expr pos:start="1377:51" pos:end="1377:51"><literal type="number" pos:start="1377:51" pos:end="1377:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1379:25" pos:end="1379:30">break;</break>

                    <case pos:start="1381:21" pos:end="1381:28">case <expr pos:start="1381:26" pos:end="1381:27"><literal type="number" pos:start="1381:26" pos:end="1381:27">29</literal></expr>:</case> <comment type="block" pos:start="1381:30" pos:end="1381:40">/* ftosl */</comment>

                        <if_stmt pos:start="1383:25" pos:end="1387:25"><if pos:start="1383:25" pos:end="1387:25">if <condition pos:start="1383:28" pos:end="1383:65">(<expr pos:start="1383:29" pos:end="1383:64"><operator pos:start="1383:29" pos:end="1383:29">!</operator><call pos:start="1383:30" pos:end="1383:64"><name pos:start="1383:30" pos:end="1383:43">arm_dc_feature</name><argument_list pos:start="1383:44" pos:end="1383:64">(<argument pos:start="1383:45" pos:end="1383:45"><expr pos:start="1383:45" pos:end="1383:45"><name pos:start="1383:45" pos:end="1383:45">s</name></expr></argument>, <argument pos:start="1383:48" pos:end="1383:63"><expr pos:start="1383:48" pos:end="1383:63"><name pos:start="1383:48" pos:end="1383:63">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1383:67" pos:end="1387:25">{<block_content pos:start="1385:29" pos:end="1385:37">

                            <return pos:start="1385:29" pos:end="1385:37">return <expr pos:start="1385:36" pos:end="1385:36"><literal type="number" pos:start="1385:36" pos:end="1385:36">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1389:25" pos:end="1389:53"><expr pos:start="1389:25" pos:end="1389:52"><call pos:start="1389:25" pos:end="1389:52"><name pos:start="1389:25" pos:end="1389:36">gen_vfp_tosl</name><argument_list pos:start="1389:37" pos:end="1389:52">(<argument pos:start="1389:38" pos:end="1389:39"><expr pos:start="1389:38" pos:end="1389:39"><name pos:start="1389:38" pos:end="1389:39">dp</name></expr></argument>, <argument pos:start="1389:42" pos:end="1389:48"><expr pos:start="1389:42" pos:end="1389:48"><literal type="number" pos:start="1389:42" pos:end="1389:45">32</literal> <operator pos:start="1389:45" pos:end="1389:45">-</operator> <name pos:start="1389:47" pos:end="1389:48">rm</name></expr></argument>, <argument pos:start="1389:51" pos:end="1389:51"><expr pos:start="1389:51" pos:end="1389:51"><literal type="number" pos:start="1389:51" pos:end="1389:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1391:25" pos:end="1391:30">break;</break>

                    <case pos:start="1393:21" pos:end="1393:28">case <expr pos:start="1393:26" pos:end="1393:27"><literal type="number" pos:start="1393:26" pos:end="1393:27">30</literal></expr>:</case> <comment type="block" pos:start="1393:30" pos:end="1393:40">/* ftouh */</comment>

                        <if_stmt pos:start="1395:25" pos:end="1399:25"><if pos:start="1395:25" pos:end="1399:25">if <condition pos:start="1395:28" pos:end="1395:65">(<expr pos:start="1395:29" pos:end="1395:64"><operator pos:start="1395:29" pos:end="1395:29">!</operator><call pos:start="1395:30" pos:end="1395:64"><name pos:start="1395:30" pos:end="1395:43">arm_dc_feature</name><argument_list pos:start="1395:44" pos:end="1395:64">(<argument pos:start="1395:45" pos:end="1395:45"><expr pos:start="1395:45" pos:end="1395:45"><name pos:start="1395:45" pos:end="1395:45">s</name></expr></argument>, <argument pos:start="1395:48" pos:end="1395:63"><expr pos:start="1395:48" pos:end="1395:63"><name pos:start="1395:48" pos:end="1395:63">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1395:67" pos:end="1399:25">{<block_content pos:start="1397:29" pos:end="1397:37">

                            <return pos:start="1397:29" pos:end="1397:37">return <expr pos:start="1397:36" pos:end="1397:36"><literal type="number" pos:start="1397:36" pos:end="1397:36">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1401:25" pos:end="1401:53"><expr pos:start="1401:25" pos:end="1401:52"><call pos:start="1401:25" pos:end="1401:52"><name pos:start="1401:25" pos:end="1401:36">gen_vfp_touh</name><argument_list pos:start="1401:37" pos:end="1401:52">(<argument pos:start="1401:38" pos:end="1401:39"><expr pos:start="1401:38" pos:end="1401:39"><name pos:start="1401:38" pos:end="1401:39">dp</name></expr></argument>, <argument pos:start="1401:42" pos:end="1401:48"><expr pos:start="1401:42" pos:end="1401:48"><literal type="number" pos:start="1401:42" pos:end="1401:45">16</literal> <operator pos:start="1401:45" pos:end="1401:45">-</operator> <name pos:start="1401:47" pos:end="1401:48">rm</name></expr></argument>, <argument pos:start="1401:51" pos:end="1401:51"><expr pos:start="1401:51" pos:end="1401:51"><literal type="number" pos:start="1401:51" pos:end="1401:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1403:25" pos:end="1403:30">break;</break>

                    <case pos:start="1405:21" pos:end="1405:28">case <expr pos:start="1405:26" pos:end="1405:27"><literal type="number" pos:start="1405:26" pos:end="1405:27">31</literal></expr>:</case> <comment type="block" pos:start="1405:30" pos:end="1405:40">/* ftoul */</comment>

                        <if_stmt pos:start="1407:25" pos:end="1411:25"><if pos:start="1407:25" pos:end="1411:25">if <condition pos:start="1407:28" pos:end="1407:65">(<expr pos:start="1407:29" pos:end="1407:64"><operator pos:start="1407:29" pos:end="1407:29">!</operator><call pos:start="1407:30" pos:end="1407:64"><name pos:start="1407:30" pos:end="1407:43">arm_dc_feature</name><argument_list pos:start="1407:44" pos:end="1407:64">(<argument pos:start="1407:45" pos:end="1407:45"><expr pos:start="1407:45" pos:end="1407:45"><name pos:start="1407:45" pos:end="1407:45">s</name></expr></argument>, <argument pos:start="1407:48" pos:end="1407:63"><expr pos:start="1407:48" pos:end="1407:63"><name pos:start="1407:48" pos:end="1407:63">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1407:67" pos:end="1411:25">{<block_content pos:start="1409:29" pos:end="1409:37">

                            <return pos:start="1409:29" pos:end="1409:37">return <expr pos:start="1409:36" pos:end="1409:36"><literal type="number" pos:start="1409:36" pos:end="1409:36">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1413:25" pos:end="1413:53"><expr pos:start="1413:25" pos:end="1413:52"><call pos:start="1413:25" pos:end="1413:52"><name pos:start="1413:25" pos:end="1413:36">gen_vfp_toul</name><argument_list pos:start="1413:37" pos:end="1413:52">(<argument pos:start="1413:38" pos:end="1413:39"><expr pos:start="1413:38" pos:end="1413:39"><name pos:start="1413:38" pos:end="1413:39">dp</name></expr></argument>, <argument pos:start="1413:42" pos:end="1413:48"><expr pos:start="1413:42" pos:end="1413:48"><literal type="number" pos:start="1413:42" pos:end="1413:45">32</literal> <operator pos:start="1413:45" pos:end="1413:45">-</operator> <name pos:start="1413:47" pos:end="1413:48">rm</name></expr></argument>, <argument pos:start="1413:51" pos:end="1413:51"><expr pos:start="1413:51" pos:end="1413:51"><literal type="number" pos:start="1413:51" pos:end="1413:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1415:25" pos:end="1415:30">break;</break>

                    <default pos:start="1417:21" pos:end="1417:28">default:</default> <comment type="block" pos:start="1417:30" pos:end="1417:44">/* undefined */</comment>

                        <return pos:start="1419:25" pos:end="1419:33">return <expr pos:start="1419:32" pos:end="1419:32"><literal type="number" pos:start="1419:32" pos:end="1419:32">1</literal></expr>;</return>

                    </block_content>}</block></switch>

                    <break pos:start="1423:21" pos:end="1423:26">break;</break>

                <default pos:start="1425:17" pos:end="1425:24">default:</default> <comment type="block" pos:start="1425:26" pos:end="1425:40">/* undefined */</comment>

                    <return pos:start="1427:21" pos:end="1427:29">return <expr pos:start="1427:28" pos:end="1427:28"><literal type="number" pos:start="1427:28" pos:end="1427:28">1</literal></expr>;</return>

                </block_content>}</block></switch>



                <comment type="block" pos:start="1433:17" pos:end="1433:45">/* Write back the result.  */</comment>

                <if_stmt pos:start="1435:17" pos:end="1463:17"><if pos:start="1435:17" pos:end="1439:17">if <condition pos:start="1435:20" pos:end="1435:54">(<expr pos:start="1435:21" pos:end="1435:53"><name pos:start="1435:21" pos:end="1435:22">op</name> <operator pos:start="1435:24" pos:end="1435:25">==</operator> <literal type="number" pos:start="1435:27" pos:end="1435:28">15</literal> <operator pos:start="1435:30" pos:end="1435:31">&amp;&amp;</operator> <operator pos:start="1435:33" pos:end="1435:33">(</operator><name pos:start="1435:34" pos:end="1435:35">rn</name> <operator pos:start="1435:37" pos:end="1435:38">&gt;=</operator> <literal type="number" pos:start="1435:40" pos:end="1435:40">8</literal> <operator pos:start="1435:42" pos:end="1435:43">&amp;&amp;</operator> <name pos:start="1435:45" pos:end="1435:46">rn</name> <operator pos:start="1435:48" pos:end="1435:49">&lt;=</operator> <literal type="number" pos:start="1435:51" pos:end="1435:52">11</literal><operator pos:start="1435:53" pos:end="1435:53">)</operator></expr>)</condition> <block pos:start="1435:56" pos:end="1439:17">{<block_content>

                    <comment type="block" pos:start="1437:21" pos:end="1437:50">/* Comparison, do nothing.  */</comment>

                </block_content>}</block></if> <if type="elseif" pos:start="1439:19" pos:end="1453:17">else if <condition pos:start="1439:27" pos:end="1441:66">(<expr pos:start="1439:28" pos:end="1441:65"><name pos:start="1439:28" pos:end="1439:29">op</name> <operator pos:start="1439:31" pos:end="1439:32">==</operator> <literal type="number" pos:start="1439:34" pos:end="1439:35">15</literal> <operator pos:start="1439:37" pos:end="1439:38">&amp;&amp;</operator> <name pos:start="1439:40" pos:end="1439:41">dp</name> <operator pos:start="1439:43" pos:end="1439:44">&amp;&amp;</operator> <operator pos:start="1439:46" pos:end="1439:46">(</operator><operator pos:start="1439:47" pos:end="1439:47">(</operator><name pos:start="1439:48" pos:end="1439:49">rn</name> <operator pos:start="1439:51" pos:end="1439:51">&amp;</operator> <literal type="number" pos:start="1439:53" pos:end="1439:56">0x1c</literal><operator pos:start="1439:57" pos:end="1439:57">)</operator> <operator pos:start="1439:59" pos:end="1439:60">==</operator> <literal type="number" pos:start="1439:62" pos:end="1439:65">0x18</literal> <operator pos:start="1439:67" pos:end="1439:68">||</operator>

                                              <operator pos:start="1441:47" pos:end="1441:47">(</operator><name pos:start="1441:48" pos:end="1441:49">rn</name> <operator pos:start="1441:51" pos:end="1441:51">&amp;</operator> <literal type="number" pos:start="1441:53" pos:end="1441:56">0x1e</literal><operator pos:start="1441:57" pos:end="1441:57">)</operator> <operator pos:start="1441:59" pos:end="1441:60">==</operator> <literal type="number" pos:start="1441:62" pos:end="1441:64">0x6</literal><operator pos:start="1441:65" pos:end="1441:65">)</operator></expr>)</condition> <block pos:start="1441:68" pos:end="1453:17">{<block_content pos:start="1451:21" pos:end="1451:43">

                    <comment type="block" pos:start="1443:21" pos:end="1449:23">/* VCVT double to int: always integer result.

                     * VCVT double to half precision is always a single

                     * precision result.

                     */</comment>

                    <expr_stmt pos:start="1451:21" pos:end="1451:43"><expr pos:start="1451:21" pos:end="1451:42"><call pos:start="1451:21" pos:end="1451:42"><name pos:start="1451:21" pos:end="1451:35">gen_mov_vreg_F0</name><argument_list pos:start="1451:36" pos:end="1451:42">(<argument pos:start="1451:37" pos:end="1451:37"><expr pos:start="1451:37" pos:end="1451:37"><literal type="number" pos:start="1451:37" pos:end="1451:37">0</literal></expr></argument>, <argument pos:start="1451:40" pos:end="1451:41"><expr pos:start="1451:40" pos:end="1451:41"><name pos:start="1451:40" pos:end="1451:41">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="1453:19" pos:end="1459:17">else if <condition pos:start="1453:27" pos:end="1453:48">(<expr pos:start="1453:28" pos:end="1453:47"><name pos:start="1453:28" pos:end="1453:29">op</name> <operator pos:start="1453:31" pos:end="1453:32">==</operator> <literal type="number" pos:start="1453:34" pos:end="1453:35">15</literal> <operator pos:start="1453:37" pos:end="1453:38">&amp;&amp;</operator> <name pos:start="1453:40" pos:end="1453:41">rn</name> <operator pos:start="1453:43" pos:end="1453:44">==</operator> <literal type="number" pos:start="1453:46" pos:end="1453:47">15</literal></expr>)</condition> <block pos:start="1453:50" pos:end="1459:17">{<block_content pos:start="1457:21" pos:end="1457:45">

                    <comment type="block" pos:start="1455:21" pos:end="1455:36">/* conversion */</comment>

                    <expr_stmt pos:start="1457:21" pos:end="1457:45"><expr pos:start="1457:21" pos:end="1457:44"><call pos:start="1457:21" pos:end="1457:44"><name pos:start="1457:21" pos:end="1457:35">gen_mov_vreg_F0</name><argument_list pos:start="1457:36" pos:end="1457:44">(<argument pos:start="1457:37" pos:end="1457:39"><expr pos:start="1457:37" pos:end="1457:39"><operator pos:start="1457:37" pos:end="1457:37">!</operator><name pos:start="1457:38" pos:end="1457:39">dp</name></expr></argument>, <argument pos:start="1457:42" pos:end="1457:43"><expr pos:start="1457:42" pos:end="1457:43"><name pos:start="1457:42" pos:end="1457:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1459:19" pos:end="1463:17">else <block pos:start="1459:24" pos:end="1463:17">{<block_content pos:start="1461:21" pos:end="1461:44">

                    <expr_stmt pos:start="1461:21" pos:end="1461:44"><expr pos:start="1461:21" pos:end="1461:43"><call pos:start="1461:21" pos:end="1461:43"><name pos:start="1461:21" pos:end="1461:35">gen_mov_vreg_F0</name><argument_list pos:start="1461:36" pos:end="1461:43">(<argument pos:start="1461:37" pos:end="1461:38"><expr pos:start="1461:37" pos:end="1461:38"><name pos:start="1461:37" pos:end="1461:38">dp</name></expr></argument>, <argument pos:start="1461:41" pos:end="1461:42"><expr pos:start="1461:41" pos:end="1461:42"><name pos:start="1461:41" pos:end="1461:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <comment type="block" pos:start="1467:17" pos:end="1467:64">/* break out of the loop if we have finished  */</comment>

                <if_stmt pos:start="1469:17" pos:end="1471:26"><if pos:start="1469:17" pos:end="1471:26">if <condition pos:start="1469:20" pos:end="1469:32">(<expr pos:start="1469:21" pos:end="1469:31"><name pos:start="1469:21" pos:end="1469:26">veclen</name> <operator pos:start="1469:28" pos:end="1469:29">==</operator> <literal type="number" pos:start="1469:31" pos:end="1469:31">0</literal></expr>)</condition><block type="pseudo" pos:start="1471:21" pos:end="1471:26"><block_content pos:start="1471:21" pos:end="1471:26">

                    <break pos:start="1471:21" pos:end="1471:26">break;</break></block_content></block></if></if_stmt>



                <if_stmt pos:start="1475:17" pos:end="1491:17"><if pos:start="1475:17" pos:end="1491:17">if <condition pos:start="1475:20" pos:end="1475:45">(<expr pos:start="1475:21" pos:end="1475:44"><name pos:start="1475:21" pos:end="1475:22">op</name> <operator pos:start="1475:24" pos:end="1475:25">==</operator> <literal type="number" pos:start="1475:27" pos:end="1475:28">15</literal> <operator pos:start="1475:30" pos:end="1475:31">&amp;&amp;</operator> <name pos:start="1475:33" pos:end="1475:39">delta_m</name> <operator pos:start="1475:41" pos:end="1475:42">==</operator> <literal type="number" pos:start="1475:44" pos:end="1475:44">0</literal></expr>)</condition> <block pos:start="1475:47" pos:end="1491:17">{<block_content pos:start="1479:21" pos:end="1489:26">

                    <comment type="block" pos:start="1477:21" pos:end="1477:48">/* single source one-many */</comment>

                    <while pos:start="1479:21" pos:end="1487:21">while <condition pos:start="1479:27" pos:end="1479:36">(<expr pos:start="1479:28" pos:end="1479:35"><name pos:start="1479:28" pos:end="1479:33">veclen</name><operator pos:start="1479:34" pos:end="1479:35">--</operator></expr>)</condition> <block pos:start="1479:38" pos:end="1487:21">{<block_content pos:start="1481:25" pos:end="1485:48">

                        <expr_stmt pos:start="1481:25" pos:end="1483:48"><expr pos:start="1481:25" pos:end="1483:47"><name pos:start="1481:25" pos:end="1481:26">rd</name> <operator pos:start="1481:28" pos:end="1481:28">=</operator> <operator pos:start="1481:30" pos:end="1481:30">(</operator><operator pos:start="1481:31" pos:end="1481:31">(</operator><name pos:start="1481:32" pos:end="1481:33">rd</name> <operator pos:start="1481:35" pos:end="1481:35">+</operator> <name pos:start="1481:37" pos:end="1481:43">delta_d</name><operator pos:start="1481:44" pos:end="1481:44">)</operator> <operator pos:start="1481:46" pos:end="1481:46">&amp;</operator> <operator pos:start="1481:48" pos:end="1481:48">(</operator><name pos:start="1481:49" pos:end="1481:57">bank_mask</name> <operator pos:start="1481:59" pos:end="1481:59">-</operator> <literal type="number" pos:start="1481:61" pos:end="1481:61">1</literal><operator pos:start="1481:62" pos:end="1481:62">)</operator><operator pos:start="1481:63" pos:end="1481:63">)</operator>

                             <operator pos:start="1483:30" pos:end="1483:30">|</operator> <operator pos:start="1483:32" pos:end="1483:32">(</operator><name pos:start="1483:33" pos:end="1483:34">rd</name> <operator pos:start="1483:36" pos:end="1483:36">&amp;</operator> <name pos:start="1483:38" pos:end="1483:46">bank_mask</name><operator pos:start="1483:47" pos:end="1483:47">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1485:25" pos:end="1485:48"><expr pos:start="1485:25" pos:end="1485:47"><call pos:start="1485:25" pos:end="1485:47"><name pos:start="1485:25" pos:end="1485:39">gen_mov_vreg_F0</name><argument_list pos:start="1485:40" pos:end="1485:47">(<argument pos:start="1485:41" pos:end="1485:42"><expr pos:start="1485:41" pos:end="1485:42"><name pos:start="1485:41" pos:end="1485:42">dp</name></expr></argument>, <argument pos:start="1485:45" pos:end="1485:46"><expr pos:start="1485:45" pos:end="1485:46"><name pos:start="1485:45" pos:end="1485:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></while>

                    <break pos:start="1489:21" pos:end="1489:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="1493:17" pos:end="1493:47">/* Setup the next operands.  */</comment>

                <expr_stmt pos:start="1495:17" pos:end="1495:25"><expr pos:start="1495:17" pos:end="1495:24"><name pos:start="1495:17" pos:end="1495:22">veclen</name><operator pos:start="1495:23" pos:end="1495:24">--</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="1497:17" pos:end="1499:40"><expr pos:start="1497:17" pos:end="1499:39"><name pos:start="1497:17" pos:end="1497:18">rd</name> <operator pos:start="1497:20" pos:end="1497:20">=</operator> <operator pos:start="1497:22" pos:end="1497:22">(</operator><operator pos:start="1497:23" pos:end="1497:23">(</operator><name pos:start="1497:24" pos:end="1497:25">rd</name> <operator pos:start="1497:27" pos:end="1497:27">+</operator> <name pos:start="1497:29" pos:end="1497:35">delta_d</name><operator pos:start="1497:36" pos:end="1497:36">)</operator> <operator pos:start="1497:38" pos:end="1497:38">&amp;</operator> <operator pos:start="1497:40" pos:end="1497:40">(</operator><name pos:start="1497:41" pos:end="1497:49">bank_mask</name> <operator pos:start="1497:51" pos:end="1497:51">-</operator> <literal type="number" pos:start="1497:53" pos:end="1497:53">1</literal><operator pos:start="1497:54" pos:end="1497:54">)</operator><operator pos:start="1497:55" pos:end="1497:55">)</operator>

                     <operator pos:start="1499:22" pos:end="1499:22">|</operator> <operator pos:start="1499:24" pos:end="1499:24">(</operator><name pos:start="1499:25" pos:end="1499:26">rd</name> <operator pos:start="1499:28" pos:end="1499:28">&amp;</operator> <name pos:start="1499:30" pos:end="1499:38">bank_mask</name><operator pos:start="1499:39" pos:end="1499:39">)</operator></expr>;</expr_stmt>



                <if_stmt pos:start="1503:17" pos:end="1533:17"><if pos:start="1503:17" pos:end="1513:17">if <condition pos:start="1503:20" pos:end="1503:29">(<expr pos:start="1503:21" pos:end="1503:28"><name pos:start="1503:21" pos:end="1503:22">op</name> <operator pos:start="1503:24" pos:end="1503:25">==</operator> <literal type="number" pos:start="1503:27" pos:end="1503:28">15</literal></expr>)</condition> <block pos:start="1503:31" pos:end="1513:17">{<block_content pos:start="1507:21" pos:end="1511:44">

                    <comment type="block" pos:start="1505:21" pos:end="1505:46">/* One source operand.  */</comment>

                    <expr_stmt pos:start="1507:21" pos:end="1509:44"><expr pos:start="1507:21" pos:end="1509:43"><name pos:start="1507:21" pos:end="1507:22">rm</name> <operator pos:start="1507:24" pos:end="1507:24">=</operator> <operator pos:start="1507:26" pos:end="1507:26">(</operator><operator pos:start="1507:27" pos:end="1507:27">(</operator><name pos:start="1507:28" pos:end="1507:29">rm</name> <operator pos:start="1507:31" pos:end="1507:31">+</operator> <name pos:start="1507:33" pos:end="1507:39">delta_m</name><operator pos:start="1507:40" pos:end="1507:40">)</operator> <operator pos:start="1507:42" pos:end="1507:42">&amp;</operator> <operator pos:start="1507:44" pos:end="1507:44">(</operator><name pos:start="1507:45" pos:end="1507:53">bank_mask</name> <operator pos:start="1507:55" pos:end="1507:55">-</operator> <literal type="number" pos:start="1507:57" pos:end="1507:57">1</literal><operator pos:start="1507:58" pos:end="1507:58">)</operator><operator pos:start="1507:59" pos:end="1507:59">)</operator>

                         <operator pos:start="1509:26" pos:end="1509:26">|</operator> <operator pos:start="1509:28" pos:end="1509:28">(</operator><name pos:start="1509:29" pos:end="1509:30">rm</name> <operator pos:start="1509:32" pos:end="1509:32">&amp;</operator> <name pos:start="1509:34" pos:end="1509:42">bank_mask</name><operator pos:start="1509:43" pos:end="1509:43">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="1511:21" pos:end="1511:44"><expr pos:start="1511:21" pos:end="1511:43"><call pos:start="1511:21" pos:end="1511:43"><name pos:start="1511:21" pos:end="1511:35">gen_mov_F0_vreg</name><argument_list pos:start="1511:36" pos:end="1511:43">(<argument pos:start="1511:37" pos:end="1511:38"><expr pos:start="1511:37" pos:end="1511:38"><name pos:start="1511:37" pos:end="1511:38">dp</name></expr></argument>, <argument pos:start="1511:41" pos:end="1511:42"><expr pos:start="1511:41" pos:end="1511:42"><name pos:start="1511:41" pos:end="1511:42">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1513:19" pos:end="1533:17">else <block pos:start="1513:24" pos:end="1533:17">{<block_content pos:start="1517:21" pos:end="1531:21">

                    <comment type="block" pos:start="1515:21" pos:end="1515:47">/* Two source operands.  */</comment>

                    <expr_stmt pos:start="1517:21" pos:end="1519:44"><expr pos:start="1517:21" pos:end="1519:43"><name pos:start="1517:21" pos:end="1517:22">rn</name> <operator pos:start="1517:24" pos:end="1517:24">=</operator> <operator pos:start="1517:26" pos:end="1517:26">(</operator><operator pos:start="1517:27" pos:end="1517:27">(</operator><name pos:start="1517:28" pos:end="1517:29">rn</name> <operator pos:start="1517:31" pos:end="1517:31">+</operator> <name pos:start="1517:33" pos:end="1517:39">delta_d</name><operator pos:start="1517:40" pos:end="1517:40">)</operator> <operator pos:start="1517:42" pos:end="1517:42">&amp;</operator> <operator pos:start="1517:44" pos:end="1517:44">(</operator><name pos:start="1517:45" pos:end="1517:53">bank_mask</name> <operator pos:start="1517:55" pos:end="1517:55">-</operator> <literal type="number" pos:start="1517:57" pos:end="1517:57">1</literal><operator pos:start="1517:58" pos:end="1517:58">)</operator><operator pos:start="1517:59" pos:end="1517:59">)</operator>

                         <operator pos:start="1519:26" pos:end="1519:26">|</operator> <operator pos:start="1519:28" pos:end="1519:28">(</operator><name pos:start="1519:29" pos:end="1519:30">rn</name> <operator pos:start="1519:32" pos:end="1519:32">&amp;</operator> <name pos:start="1519:34" pos:end="1519:42">bank_mask</name><operator pos:start="1519:43" pos:end="1519:43">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="1521:21" pos:end="1521:44"><expr pos:start="1521:21" pos:end="1521:43"><call pos:start="1521:21" pos:end="1521:43"><name pos:start="1521:21" pos:end="1521:35">gen_mov_F0_vreg</name><argument_list pos:start="1521:36" pos:end="1521:43">(<argument pos:start="1521:37" pos:end="1521:38"><expr pos:start="1521:37" pos:end="1521:38"><name pos:start="1521:37" pos:end="1521:38">dp</name></expr></argument>, <argument pos:start="1521:41" pos:end="1521:42"><expr pos:start="1521:41" pos:end="1521:42"><name pos:start="1521:41" pos:end="1521:42">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="1523:21" pos:end="1531:21"><if pos:start="1523:21" pos:end="1531:21">if <condition pos:start="1523:24" pos:end="1523:32">(<expr pos:start="1523:25" pos:end="1523:31"><name pos:start="1523:25" pos:end="1523:31">delta_m</name></expr>)</condition> <block pos:start="1523:34" pos:end="1531:21">{<block_content pos:start="1525:25" pos:end="1529:48">

                        <expr_stmt pos:start="1525:25" pos:end="1527:48"><expr pos:start="1525:25" pos:end="1527:47"><name pos:start="1525:25" pos:end="1525:26">rm</name> <operator pos:start="1525:28" pos:end="1525:28">=</operator> <operator pos:start="1525:30" pos:end="1525:30">(</operator><operator pos:start="1525:31" pos:end="1525:31">(</operator><name pos:start="1525:32" pos:end="1525:33">rm</name> <operator pos:start="1525:35" pos:end="1525:35">+</operator> <name pos:start="1525:37" pos:end="1525:43">delta_m</name><operator pos:start="1525:44" pos:end="1525:44">)</operator> <operator pos:start="1525:46" pos:end="1525:46">&amp;</operator> <operator pos:start="1525:48" pos:end="1525:48">(</operator><name pos:start="1525:49" pos:end="1525:57">bank_mask</name> <operator pos:start="1525:59" pos:end="1525:59">-</operator> <literal type="number" pos:start="1525:61" pos:end="1525:61">1</literal><operator pos:start="1525:62" pos:end="1525:62">)</operator><operator pos:start="1525:63" pos:end="1525:63">)</operator>

                             <operator pos:start="1527:30" pos:end="1527:30">|</operator> <operator pos:start="1527:32" pos:end="1527:32">(</operator><name pos:start="1527:33" pos:end="1527:34">rm</name> <operator pos:start="1527:36" pos:end="1527:36">&amp;</operator> <name pos:start="1527:38" pos:end="1527:46">bank_mask</name><operator pos:start="1527:47" pos:end="1527:47">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1529:25" pos:end="1529:48"><expr pos:start="1529:25" pos:end="1529:47"><call pos:start="1529:25" pos:end="1529:47"><name pos:start="1529:25" pos:end="1529:39">gen_mov_F1_vreg</name><argument_list pos:start="1529:40" pos:end="1529:47">(<argument pos:start="1529:41" pos:end="1529:42"><expr pos:start="1529:41" pos:end="1529:42"><name pos:start="1529:41" pos:end="1529:42">dp</name></expr></argument>, <argument pos:start="1529:45" pos:end="1529:46"><expr pos:start="1529:45" pos:end="1529:46"><name pos:start="1529:45" pos:end="1529:46">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <break pos:start="1539:9" pos:end="1539:14">break;</break>

    <case pos:start="1541:5" pos:end="1541:13">case <expr pos:start="1541:10" pos:end="1541:12"><literal type="number" pos:start="1541:10" pos:end="1541:12">0xc</literal></expr>:</case>

    <case pos:start="1543:5" pos:end="1543:13">case <expr pos:start="1543:10" pos:end="1543:12"><literal type="number" pos:start="1543:10" pos:end="1543:12">0xd</literal></expr>:</case>

        <if_stmt pos:start="1545:9" pos:end="1821:9"><if pos:start="1545:9" pos:end="1635:9">if <condition pos:start="1545:12" pos:end="1545:46">(<expr pos:start="1545:13" pos:end="1545:45"><operator pos:start="1545:13" pos:end="1545:13">(</operator><name pos:start="1545:14" pos:end="1545:17">insn</name> <operator pos:start="1545:19" pos:end="1545:19">&amp;</operator> <literal type="number" pos:start="1545:21" pos:end="1545:30">0x03e00000</literal><operator pos:start="1545:31" pos:end="1545:31">)</operator> <operator pos:start="1545:33" pos:end="1545:34">==</operator> <literal type="number" pos:start="1545:36" pos:end="1545:45">0x00400000</literal></expr>)</condition> <block pos:start="1545:48" pos:end="1635:9">{<block_content pos:start="1549:13" pos:end="1633:13">

            <comment type="block" pos:start="1547:13" pos:end="1547:39">/* two-register transfer */</comment>

            <expr_stmt pos:start="1549:13" pos:end="1549:36"><expr pos:start="1549:13" pos:end="1549:35"><name pos:start="1549:13" pos:end="1549:14">rn</name> <operator pos:start="1549:16" pos:end="1549:16">=</operator> <operator pos:start="1549:18" pos:end="1549:18">(</operator><name pos:start="1549:19" pos:end="1549:22">insn</name> <operator pos:start="1549:24" pos:end="1549:25">&gt;&gt;</operator> <literal type="number" pos:start="1549:27" pos:end="1549:28">16</literal><operator pos:start="1549:29" pos:end="1549:29">)</operator> <operator pos:start="1549:31" pos:end="1549:31">&amp;</operator> <literal type="number" pos:start="1549:33" pos:end="1549:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1551:13" pos:end="1551:36"><expr pos:start="1551:13" pos:end="1551:35"><name pos:start="1551:13" pos:end="1551:14">rd</name> <operator pos:start="1551:16" pos:end="1551:16">=</operator> <operator pos:start="1551:18" pos:end="1551:18">(</operator><name pos:start="1551:19" pos:end="1551:22">insn</name> <operator pos:start="1551:24" pos:end="1551:25">&gt;&gt;</operator> <literal type="number" pos:start="1551:27" pos:end="1551:28">12</literal><operator pos:start="1551:29" pos:end="1551:29">)</operator> <operator pos:start="1551:31" pos:end="1551:31">&amp;</operator> <literal type="number" pos:start="1551:33" pos:end="1551:35">0xf</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1553:13" pos:end="1561:13"><if pos:start="1553:13" pos:end="1557:13">if <condition pos:start="1553:16" pos:end="1553:19">(<expr pos:start="1553:17" pos:end="1553:18"><name pos:start="1553:17" pos:end="1553:18">dp</name></expr>)</condition> <block pos:start="1553:21" pos:end="1557:13">{<block_content pos:start="1555:17" pos:end="1555:37">

                <expr_stmt pos:start="1555:17" pos:end="1555:37"><expr pos:start="1555:17" pos:end="1555:36"><call pos:start="1555:17" pos:end="1555:36"><name pos:start="1555:17" pos:end="1555:26">VFP_DREG_M</name><argument_list pos:start="1555:27" pos:end="1555:36">(<argument pos:start="1555:28" pos:end="1555:29"><expr pos:start="1555:28" pos:end="1555:29"><name pos:start="1555:28" pos:end="1555:29">rm</name></expr></argument>, <argument pos:start="1555:32" pos:end="1555:35"><expr pos:start="1555:32" pos:end="1555:35"><name pos:start="1555:32" pos:end="1555:35">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1557:15" pos:end="1561:13">else <block pos:start="1557:20" pos:end="1561:13">{<block_content pos:start="1559:17" pos:end="1559:38">

                <expr_stmt pos:start="1559:17" pos:end="1559:38"><expr pos:start="1559:17" pos:end="1559:37"><name pos:start="1559:17" pos:end="1559:18">rm</name> <operator pos:start="1559:20" pos:end="1559:20">=</operator> <call pos:start="1559:22" pos:end="1559:37"><name pos:start="1559:22" pos:end="1559:31">VFP_SREG_M</name><argument_list pos:start="1559:32" pos:end="1559:37">(<argument pos:start="1559:33" pos:end="1559:36"><expr pos:start="1559:33" pos:end="1559:36"><name pos:start="1559:33" pos:end="1559:36">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="1565:13" pos:end="1633:13"><if pos:start="1565:13" pos:end="1599:13">if <condition pos:start="1565:16" pos:end="1565:37">(<expr pos:start="1565:17" pos:end="1565:36"><name pos:start="1565:17" pos:end="1565:20">insn</name> <operator pos:start="1565:22" pos:end="1565:22">&amp;</operator> <name pos:start="1565:24" pos:end="1565:36">ARM_CP_RW_BIT</name></expr>)</condition> <block pos:start="1565:39" pos:end="1599:13">{<block_content pos:start="1569:17" pos:end="1597:17">

                <comment type="block" pos:start="1567:17" pos:end="1567:30">/* vfp-&gt;arm */</comment>

                <if_stmt pos:start="1569:17" pos:end="1597:17"><if pos:start="1569:17" pos:end="1583:17">if <condition pos:start="1569:20" pos:end="1569:23">(<expr pos:start="1569:21" pos:end="1569:22"><name pos:start="1569:21" pos:end="1569:22">dp</name></expr>)</condition> <block pos:start="1569:25" pos:end="1583:17">{<block_content pos:start="1571:21" pos:end="1581:42">

                    <expr_stmt pos:start="1571:21" pos:end="1571:47"><expr pos:start="1571:21" pos:end="1571:46"><call pos:start="1571:21" pos:end="1571:46"><name pos:start="1571:21" pos:end="1571:35">gen_mov_F0_vreg</name><argument_list pos:start="1571:36" pos:end="1571:46">(<argument pos:start="1571:37" pos:end="1571:37"><expr pos:start="1571:37" pos:end="1571:37"><literal type="number" pos:start="1571:37" pos:end="1571:37">0</literal></expr></argument>, <argument pos:start="1571:40" pos:end="1571:45"><expr pos:start="1571:40" pos:end="1571:45"><name pos:start="1571:40" pos:end="1571:41">rm</name> <operator pos:start="1571:43" pos:end="1571:43">*</operator> <literal type="number" pos:start="1571:45" pos:end="1571:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1573:21" pos:end="1573:40"><expr pos:start="1573:21" pos:end="1573:39"><name pos:start="1573:21" pos:end="1573:23">tmp</name> <operator pos:start="1573:25" pos:end="1573:25">=</operator> <call pos:start="1573:27" pos:end="1573:39"><name pos:start="1573:27" pos:end="1573:37">gen_vfp_mrs</name><argument_list pos:start="1573:38" pos:end="1573:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1575:21" pos:end="1575:42"><expr pos:start="1575:21" pos:end="1575:41"><call pos:start="1575:21" pos:end="1575:41"><name pos:start="1575:21" pos:end="1575:29">store_reg</name><argument_list pos:start="1575:30" pos:end="1575:41">(<argument pos:start="1575:31" pos:end="1575:31"><expr pos:start="1575:31" pos:end="1575:31"><name pos:start="1575:31" pos:end="1575:31">s</name></expr></argument>, <argument pos:start="1575:34" pos:end="1575:35"><expr pos:start="1575:34" pos:end="1575:35"><name pos:start="1575:34" pos:end="1575:35">rd</name></expr></argument>, <argument pos:start="1575:38" pos:end="1575:40"><expr pos:start="1575:38" pos:end="1575:40"><name pos:start="1575:38" pos:end="1575:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1577:21" pos:end="1577:51"><expr pos:start="1577:21" pos:end="1577:50"><call pos:start="1577:21" pos:end="1577:50"><name pos:start="1577:21" pos:end="1577:35">gen_mov_F0_vreg</name><argument_list pos:start="1577:36" pos:end="1577:50">(<argument pos:start="1577:37" pos:end="1577:37"><expr pos:start="1577:37" pos:end="1577:37"><literal type="number" pos:start="1577:37" pos:end="1577:37">0</literal></expr></argument>, <argument pos:start="1577:40" pos:end="1577:49"><expr pos:start="1577:40" pos:end="1577:49"><name pos:start="1577:40" pos:end="1577:41">rm</name> <operator pos:start="1577:43" pos:end="1577:43">*</operator> <literal type="number" pos:start="1577:45" pos:end="1577:47">2</literal> <operator pos:start="1577:47" pos:end="1577:47">+</operator> <literal type="number" pos:start="1577:49" pos:end="1577:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1579:21" pos:end="1579:40"><expr pos:start="1579:21" pos:end="1579:39"><name pos:start="1579:21" pos:end="1579:23">tmp</name> <operator pos:start="1579:25" pos:end="1579:25">=</operator> <call pos:start="1579:27" pos:end="1579:39"><name pos:start="1579:27" pos:end="1579:37">gen_vfp_mrs</name><argument_list pos:start="1579:38" pos:end="1579:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1581:21" pos:end="1581:42"><expr pos:start="1581:21" pos:end="1581:41"><call pos:start="1581:21" pos:end="1581:41"><name pos:start="1581:21" pos:end="1581:29">store_reg</name><argument_list pos:start="1581:30" pos:end="1581:41">(<argument pos:start="1581:31" pos:end="1581:31"><expr pos:start="1581:31" pos:end="1581:31"><name pos:start="1581:31" pos:end="1581:31">s</name></expr></argument>, <argument pos:start="1581:34" pos:end="1581:35"><expr pos:start="1581:34" pos:end="1581:35"><name pos:start="1581:34" pos:end="1581:35">rn</name></expr></argument>, <argument pos:start="1581:38" pos:end="1581:40"><expr pos:start="1581:38" pos:end="1581:40"><name pos:start="1581:38" pos:end="1581:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1583:19" pos:end="1597:17">else <block pos:start="1583:24" pos:end="1597:17">{<block_content pos:start="1585:21" pos:end="1595:42">

                    <expr_stmt pos:start="1585:21" pos:end="1585:43"><expr pos:start="1585:21" pos:end="1585:42"><call pos:start="1585:21" pos:end="1585:42"><name pos:start="1585:21" pos:end="1585:35">gen_mov_F0_vreg</name><argument_list pos:start="1585:36" pos:end="1585:42">(<argument pos:start="1585:37" pos:end="1585:37"><expr pos:start="1585:37" pos:end="1585:37"><literal type="number" pos:start="1585:37" pos:end="1585:37">0</literal></expr></argument>, <argument pos:start="1585:40" pos:end="1585:41"><expr pos:start="1585:40" pos:end="1585:41"><name pos:start="1585:40" pos:end="1585:41">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1587:21" pos:end="1587:40"><expr pos:start="1587:21" pos:end="1587:39"><name pos:start="1587:21" pos:end="1587:23">tmp</name> <operator pos:start="1587:25" pos:end="1587:25">=</operator> <call pos:start="1587:27" pos:end="1587:39"><name pos:start="1587:27" pos:end="1587:37">gen_vfp_mrs</name><argument_list pos:start="1587:38" pos:end="1587:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1589:21" pos:end="1589:42"><expr pos:start="1589:21" pos:end="1589:41"><call pos:start="1589:21" pos:end="1589:41"><name pos:start="1589:21" pos:end="1589:29">store_reg</name><argument_list pos:start="1589:30" pos:end="1589:41">(<argument pos:start="1589:31" pos:end="1589:31"><expr pos:start="1589:31" pos:end="1589:31"><name pos:start="1589:31" pos:end="1589:31">s</name></expr></argument>, <argument pos:start="1589:34" pos:end="1589:35"><expr pos:start="1589:34" pos:end="1589:35"><name pos:start="1589:34" pos:end="1589:35">rd</name></expr></argument>, <argument pos:start="1589:38" pos:end="1589:40"><expr pos:start="1589:38" pos:end="1589:40"><name pos:start="1589:38" pos:end="1589:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1591:21" pos:end="1591:47"><expr pos:start="1591:21" pos:end="1591:46"><call pos:start="1591:21" pos:end="1591:46"><name pos:start="1591:21" pos:end="1591:35">gen_mov_F0_vreg</name><argument_list pos:start="1591:36" pos:end="1591:46">(<argument pos:start="1591:37" pos:end="1591:37"><expr pos:start="1591:37" pos:end="1591:37"><literal type="number" pos:start="1591:37" pos:end="1591:37">0</literal></expr></argument>, <argument pos:start="1591:40" pos:end="1591:45"><expr pos:start="1591:40" pos:end="1591:45"><name pos:start="1591:40" pos:end="1591:41">rm</name> <operator pos:start="1591:43" pos:end="1591:43">+</operator> <literal type="number" pos:start="1591:45" pos:end="1591:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1593:21" pos:end="1593:40"><expr pos:start="1593:21" pos:end="1593:39"><name pos:start="1593:21" pos:end="1593:23">tmp</name> <operator pos:start="1593:25" pos:end="1593:25">=</operator> <call pos:start="1593:27" pos:end="1593:39"><name pos:start="1593:27" pos:end="1593:37">gen_vfp_mrs</name><argument_list pos:start="1593:38" pos:end="1593:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1595:21" pos:end="1595:42"><expr pos:start="1595:21" pos:end="1595:41"><call pos:start="1595:21" pos:end="1595:41"><name pos:start="1595:21" pos:end="1595:29">store_reg</name><argument_list pos:start="1595:30" pos:end="1595:41">(<argument pos:start="1595:31" pos:end="1595:31"><expr pos:start="1595:31" pos:end="1595:31"><name pos:start="1595:31" pos:end="1595:31">s</name></expr></argument>, <argument pos:start="1595:34" pos:end="1595:35"><expr pos:start="1595:34" pos:end="1595:35"><name pos:start="1595:34" pos:end="1595:35">rn</name></expr></argument>, <argument pos:start="1595:38" pos:end="1595:40"><expr pos:start="1595:38" pos:end="1595:40"><name pos:start="1595:38" pos:end="1595:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="1599:15" pos:end="1633:13">else <block pos:start="1599:20" pos:end="1633:13">{<block_content pos:start="1603:17" pos:end="1631:17">

                <comment type="block" pos:start="1601:17" pos:end="1601:30">/* arm-&gt;vfp */</comment>

                <if_stmt pos:start="1603:17" pos:end="1631:17"><if pos:start="1603:17" pos:end="1617:17">if <condition pos:start="1603:20" pos:end="1603:23">(<expr pos:start="1603:21" pos:end="1603:22"><name pos:start="1603:21" pos:end="1603:22">dp</name></expr>)</condition> <block pos:start="1603:25" pos:end="1617:17">{<block_content pos:start="1605:21" pos:end="1615:51">

                    <expr_stmt pos:start="1605:21" pos:end="1605:42"><expr pos:start="1605:21" pos:end="1605:41"><name pos:start="1605:21" pos:end="1605:23">tmp</name> <operator pos:start="1605:25" pos:end="1605:25">=</operator> <call pos:start="1605:27" pos:end="1605:41"><name pos:start="1605:27" pos:end="1605:34">load_reg</name><argument_list pos:start="1605:35" pos:end="1605:41">(<argument pos:start="1605:36" pos:end="1605:36"><expr pos:start="1605:36" pos:end="1605:36"><name pos:start="1605:36" pos:end="1605:36">s</name></expr></argument>, <argument pos:start="1605:39" pos:end="1605:40"><expr pos:start="1605:39" pos:end="1605:40"><name pos:start="1605:39" pos:end="1605:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1607:21" pos:end="1607:37"><expr pos:start="1607:21" pos:end="1607:36"><call pos:start="1607:21" pos:end="1607:36"><name pos:start="1607:21" pos:end="1607:31">gen_vfp_msr</name><argument_list pos:start="1607:32" pos:end="1607:36">(<argument pos:start="1607:33" pos:end="1607:35"><expr pos:start="1607:33" pos:end="1607:35"><name pos:start="1607:33" pos:end="1607:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1609:21" pos:end="1609:47"><expr pos:start="1609:21" pos:end="1609:46"><call pos:start="1609:21" pos:end="1609:46"><name pos:start="1609:21" pos:end="1609:35">gen_mov_vreg_F0</name><argument_list pos:start="1609:36" pos:end="1609:46">(<argument pos:start="1609:37" pos:end="1609:37"><expr pos:start="1609:37" pos:end="1609:37"><literal type="number" pos:start="1609:37" pos:end="1609:37">0</literal></expr></argument>, <argument pos:start="1609:40" pos:end="1609:45"><expr pos:start="1609:40" pos:end="1609:45"><name pos:start="1609:40" pos:end="1609:41">rm</name> <operator pos:start="1609:43" pos:end="1609:43">*</operator> <literal type="number" pos:start="1609:45" pos:end="1609:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1611:21" pos:end="1611:42"><expr pos:start="1611:21" pos:end="1611:41"><name pos:start="1611:21" pos:end="1611:23">tmp</name> <operator pos:start="1611:25" pos:end="1611:25">=</operator> <call pos:start="1611:27" pos:end="1611:41"><name pos:start="1611:27" pos:end="1611:34">load_reg</name><argument_list pos:start="1611:35" pos:end="1611:41">(<argument pos:start="1611:36" pos:end="1611:36"><expr pos:start="1611:36" pos:end="1611:36"><name pos:start="1611:36" pos:end="1611:36">s</name></expr></argument>, <argument pos:start="1611:39" pos:end="1611:40"><expr pos:start="1611:39" pos:end="1611:40"><name pos:start="1611:39" pos:end="1611:40">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1613:21" pos:end="1613:37"><expr pos:start="1613:21" pos:end="1613:36"><call pos:start="1613:21" pos:end="1613:36"><name pos:start="1613:21" pos:end="1613:31">gen_vfp_msr</name><argument_list pos:start="1613:32" pos:end="1613:36">(<argument pos:start="1613:33" pos:end="1613:35"><expr pos:start="1613:33" pos:end="1613:35"><name pos:start="1613:33" pos:end="1613:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1615:21" pos:end="1615:51"><expr pos:start="1615:21" pos:end="1615:50"><call pos:start="1615:21" pos:end="1615:50"><name pos:start="1615:21" pos:end="1615:35">gen_mov_vreg_F0</name><argument_list pos:start="1615:36" pos:end="1615:50">(<argument pos:start="1615:37" pos:end="1615:37"><expr pos:start="1615:37" pos:end="1615:37"><literal type="number" pos:start="1615:37" pos:end="1615:37">0</literal></expr></argument>, <argument pos:start="1615:40" pos:end="1615:49"><expr pos:start="1615:40" pos:end="1615:49"><name pos:start="1615:40" pos:end="1615:41">rm</name> <operator pos:start="1615:43" pos:end="1615:43">*</operator> <literal type="number" pos:start="1615:45" pos:end="1615:47">2</literal> <operator pos:start="1615:47" pos:end="1615:47">+</operator> <literal type="number" pos:start="1615:49" pos:end="1615:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1617:19" pos:end="1631:17">else <block pos:start="1617:24" pos:end="1631:17">{<block_content pos:start="1619:21" pos:end="1629:47">

                    <expr_stmt pos:start="1619:21" pos:end="1619:42"><expr pos:start="1619:21" pos:end="1619:41"><name pos:start="1619:21" pos:end="1619:23">tmp</name> <operator pos:start="1619:25" pos:end="1619:25">=</operator> <call pos:start="1619:27" pos:end="1619:41"><name pos:start="1619:27" pos:end="1619:34">load_reg</name><argument_list pos:start="1619:35" pos:end="1619:41">(<argument pos:start="1619:36" pos:end="1619:36"><expr pos:start="1619:36" pos:end="1619:36"><name pos:start="1619:36" pos:end="1619:36">s</name></expr></argument>, <argument pos:start="1619:39" pos:end="1619:40"><expr pos:start="1619:39" pos:end="1619:40"><name pos:start="1619:39" pos:end="1619:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1621:21" pos:end="1621:37"><expr pos:start="1621:21" pos:end="1621:36"><call pos:start="1621:21" pos:end="1621:36"><name pos:start="1621:21" pos:end="1621:31">gen_vfp_msr</name><argument_list pos:start="1621:32" pos:end="1621:36">(<argument pos:start="1621:33" pos:end="1621:35"><expr pos:start="1621:33" pos:end="1621:35"><name pos:start="1621:33" pos:end="1621:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1623:21" pos:end="1623:43"><expr pos:start="1623:21" pos:end="1623:42"><call pos:start="1623:21" pos:end="1623:42"><name pos:start="1623:21" pos:end="1623:35">gen_mov_vreg_F0</name><argument_list pos:start="1623:36" pos:end="1623:42">(<argument pos:start="1623:37" pos:end="1623:37"><expr pos:start="1623:37" pos:end="1623:37"><literal type="number" pos:start="1623:37" pos:end="1623:37">0</literal></expr></argument>, <argument pos:start="1623:40" pos:end="1623:41"><expr pos:start="1623:40" pos:end="1623:41"><name pos:start="1623:40" pos:end="1623:41">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1625:21" pos:end="1625:42"><expr pos:start="1625:21" pos:end="1625:41"><name pos:start="1625:21" pos:end="1625:23">tmp</name> <operator pos:start="1625:25" pos:end="1625:25">=</operator> <call pos:start="1625:27" pos:end="1625:41"><name pos:start="1625:27" pos:end="1625:34">load_reg</name><argument_list pos:start="1625:35" pos:end="1625:41">(<argument pos:start="1625:36" pos:end="1625:36"><expr pos:start="1625:36" pos:end="1625:36"><name pos:start="1625:36" pos:end="1625:36">s</name></expr></argument>, <argument pos:start="1625:39" pos:end="1625:40"><expr pos:start="1625:39" pos:end="1625:40"><name pos:start="1625:39" pos:end="1625:40">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1627:21" pos:end="1627:37"><expr pos:start="1627:21" pos:end="1627:36"><call pos:start="1627:21" pos:end="1627:36"><name pos:start="1627:21" pos:end="1627:31">gen_vfp_msr</name><argument_list pos:start="1627:32" pos:end="1627:36">(<argument pos:start="1627:33" pos:end="1627:35"><expr pos:start="1627:33" pos:end="1627:35"><name pos:start="1627:33" pos:end="1627:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1629:21" pos:end="1629:47"><expr pos:start="1629:21" pos:end="1629:46"><call pos:start="1629:21" pos:end="1629:46"><name pos:start="1629:21" pos:end="1629:35">gen_mov_vreg_F0</name><argument_list pos:start="1629:36" pos:end="1629:46">(<argument pos:start="1629:37" pos:end="1629:37"><expr pos:start="1629:37" pos:end="1629:37"><literal type="number" pos:start="1629:37" pos:end="1629:37">0</literal></expr></argument>, <argument pos:start="1629:40" pos:end="1629:45"><expr pos:start="1629:40" pos:end="1629:45"><name pos:start="1629:40" pos:end="1629:41">rm</name> <operator pos:start="1629:43" pos:end="1629:43">+</operator> <literal type="number" pos:start="1629:45" pos:end="1629:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="1635:11" pos:end="1821:9">else <block pos:start="1635:16" pos:end="1821:9">{<block_content pos:start="1639:13" pos:end="1819:13">

            <comment type="block" pos:start="1637:13" pos:end="1637:28">/* Load/store */</comment>

            <expr_stmt pos:start="1639:13" pos:end="1639:36"><expr pos:start="1639:13" pos:end="1639:35"><name pos:start="1639:13" pos:end="1639:14">rn</name> <operator pos:start="1639:16" pos:end="1639:16">=</operator> <operator pos:start="1639:18" pos:end="1639:18">(</operator><name pos:start="1639:19" pos:end="1639:22">insn</name> <operator pos:start="1639:24" pos:end="1639:25">&gt;&gt;</operator> <literal type="number" pos:start="1639:27" pos:end="1639:28">16</literal><operator pos:start="1639:29" pos:end="1639:29">)</operator> <operator pos:start="1639:31" pos:end="1639:31">&amp;</operator> <literal type="number" pos:start="1639:33" pos:end="1639:35">0xf</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1641:13" pos:end="1647:38"><if pos:start="1641:13" pos:end="1643:37">if <condition pos:start="1641:16" pos:end="1641:19">(<expr pos:start="1641:17" pos:end="1641:18"><name pos:start="1641:17" pos:end="1641:18">dp</name></expr>)</condition><block type="pseudo" pos:start="1643:17" pos:end="1643:37"><block_content pos:start="1643:17" pos:end="1643:37">

                <expr_stmt pos:start="1643:17" pos:end="1643:37"><expr pos:start="1643:17" pos:end="1643:36"><call pos:start="1643:17" pos:end="1643:36"><name pos:start="1643:17" pos:end="1643:26">VFP_DREG_D</name><argument_list pos:start="1643:27" pos:end="1643:36">(<argument pos:start="1643:28" pos:end="1643:29"><expr pos:start="1643:28" pos:end="1643:29"><name pos:start="1643:28" pos:end="1643:29">rd</name></expr></argument>, <argument pos:start="1643:32" pos:end="1643:35"><expr pos:start="1643:32" pos:end="1643:35"><name pos:start="1643:32" pos:end="1643:35">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1645:13" pos:end="1647:38">else<block type="pseudo" pos:start="1647:17" pos:end="1647:38"><block_content pos:start="1647:17" pos:end="1647:38">

                <expr_stmt pos:start="1647:17" pos:end="1647:38"><expr pos:start="1647:17" pos:end="1647:37"><name pos:start="1647:17" pos:end="1647:18">rd</name> <operator pos:start="1647:20" pos:end="1647:20">=</operator> <call pos:start="1647:22" pos:end="1647:37"><name pos:start="1647:22" pos:end="1647:31">VFP_SREG_D</name><argument_list pos:start="1647:32" pos:end="1647:37">(<argument pos:start="1647:33" pos:end="1647:36"><expr pos:start="1647:33" pos:end="1647:36"><name pos:start="1647:33" pos:end="1647:36">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="1649:13" pos:end="1819:13"><if pos:start="1649:13" pos:end="1691:13">if <condition pos:start="1649:16" pos:end="1649:50">(<expr pos:start="1649:17" pos:end="1649:49"><operator pos:start="1649:17" pos:end="1649:17">(</operator><name pos:start="1649:18" pos:end="1649:21">insn</name> <operator pos:start="1649:23" pos:end="1649:23">&amp;</operator> <literal type="number" pos:start="1649:25" pos:end="1649:34">0x01200000</literal><operator pos:start="1649:35" pos:end="1649:35">)</operator> <operator pos:start="1649:37" pos:end="1649:38">==</operator> <literal type="number" pos:start="1649:40" pos:end="1649:49">0x01000000</literal></expr>)</condition> <block pos:start="1649:52" pos:end="1691:13">{<block_content pos:start="1653:17" pos:end="1689:40">

                <comment type="block" pos:start="1651:17" pos:end="1651:39">/* Single load/store */</comment>

                <expr_stmt pos:start="1653:17" pos:end="1653:44"><expr pos:start="1653:17" pos:end="1653:43"><name pos:start="1653:17" pos:end="1653:22">offset</name> <operator pos:start="1653:24" pos:end="1653:24">=</operator> <operator pos:start="1653:26" pos:end="1653:26">(</operator><name pos:start="1653:27" pos:end="1653:30">insn</name> <operator pos:start="1653:32" pos:end="1653:32">&amp;</operator> <literal type="number" pos:start="1653:34" pos:end="1653:37">0xff</literal><operator pos:start="1653:38" pos:end="1653:38">)</operator> <operator pos:start="1653:40" pos:end="1653:41">&lt;&lt;</operator> <literal type="number" pos:start="1653:43" pos:end="1653:43">2</literal></expr>;</expr_stmt>

                <if_stmt pos:start="1655:17" pos:end="1657:37"><if pos:start="1655:17" pos:end="1657:37">if <condition pos:start="1655:20" pos:end="1655:44">(<expr pos:start="1655:21" pos:end="1655:43"><operator pos:start="1655:21" pos:end="1655:21">(</operator><name pos:start="1655:22" pos:end="1655:25">insn</name> <operator pos:start="1655:27" pos:end="1655:27">&amp;</operator> <operator pos:start="1655:29" pos:end="1655:29">(</operator><literal type="number" pos:start="1655:30" pos:end="1655:30">1</literal> <operator pos:start="1655:32" pos:end="1655:33">&lt;&lt;</operator> <literal type="number" pos:start="1655:35" pos:end="1655:36">23</literal><operator pos:start="1655:37" pos:end="1655:37">)</operator><operator pos:start="1655:38" pos:end="1655:38">)</operator> <operator pos:start="1655:40" pos:end="1655:41">==</operator> <literal type="number" pos:start="1655:43" pos:end="1655:43">0</literal></expr>)</condition><block type="pseudo" pos:start="1657:21" pos:end="1657:37"><block_content pos:start="1657:21" pos:end="1657:37">

                    <expr_stmt pos:start="1657:21" pos:end="1657:37"><expr pos:start="1657:21" pos:end="1657:36"><name pos:start="1657:21" pos:end="1657:26">offset</name> <operator pos:start="1657:28" pos:end="1657:28">=</operator> <operator pos:start="1657:30" pos:end="1657:30">-</operator><name pos:start="1657:31" pos:end="1657:36">offset</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1659:17" pos:end="1671:17"><if pos:start="1659:17" pos:end="1667:17">if <condition pos:start="1659:20" pos:end="1659:41">(<expr pos:start="1659:21" pos:end="1659:40"><name pos:start="1659:21" pos:end="1659:28"><name pos:start="1659:21" pos:end="1659:21">s</name><operator pos:start="1659:22" pos:end="1659:23">-&gt;</operator><name pos:start="1659:24" pos:end="1659:28">thumb</name></name> <operator pos:start="1659:30" pos:end="1659:31">&amp;&amp;</operator> <name pos:start="1659:33" pos:end="1659:34">rn</name> <operator pos:start="1659:36" pos:end="1659:37">==</operator> <literal type="number" pos:start="1659:39" pos:end="1659:40">15</literal></expr>)</condition> <block pos:start="1659:43" pos:end="1667:17">{<block_content pos:start="1663:21" pos:end="1665:55">

                    <comment type="block" pos:start="1661:21" pos:end="1661:56">/* This is actually UNPREDICTABLE */</comment>

                    <expr_stmt pos:start="1663:21" pos:end="1663:46"><expr pos:start="1663:21" pos:end="1663:45"><name pos:start="1663:21" pos:end="1663:24">addr</name> <operator pos:start="1663:26" pos:end="1663:26">=</operator> <call pos:start="1663:28" pos:end="1663:45"><name pos:start="1663:28" pos:end="1663:43">tcg_temp_new_i32</name><argument_list pos:start="1663:44" pos:end="1663:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1665:21" pos:end="1665:55"><expr pos:start="1665:21" pos:end="1665:54"><call pos:start="1665:21" pos:end="1665:54"><name pos:start="1665:21" pos:end="1665:36">tcg_gen_movi_i32</name><argument_list pos:start="1665:37" pos:end="1665:54">(<argument pos:start="1665:38" pos:end="1665:41"><expr pos:start="1665:38" pos:end="1665:41"><name pos:start="1665:38" pos:end="1665:41">addr</name></expr></argument>, <argument pos:start="1665:44" pos:end="1665:53"><expr pos:start="1665:44" pos:end="1665:53"><name pos:start="1665:44" pos:end="1665:48"><name pos:start="1665:44" pos:end="1665:44">s</name><operator pos:start="1665:45" pos:end="1665:46">-&gt;</operator><name pos:start="1665:47" pos:end="1665:48">pc</name></name> <operator pos:start="1665:50" pos:end="1665:50">&amp;</operator> <operator pos:start="1665:52" pos:end="1665:52">~</operator><literal type="number" pos:start="1665:53" pos:end="1665:53">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1667:19" pos:end="1671:17">else <block pos:start="1667:24" pos:end="1671:17">{<block_content pos:start="1669:21" pos:end="1669:43">

                    <expr_stmt pos:start="1669:21" pos:end="1669:43"><expr pos:start="1669:21" pos:end="1669:42"><name pos:start="1669:21" pos:end="1669:24">addr</name> <operator pos:start="1669:26" pos:end="1669:26">=</operator> <call pos:start="1669:28" pos:end="1669:42"><name pos:start="1669:28" pos:end="1669:35">load_reg</name><argument_list pos:start="1669:36" pos:end="1669:42">(<argument pos:start="1669:37" pos:end="1669:37"><expr pos:start="1669:37" pos:end="1669:37"><name pos:start="1669:37" pos:end="1669:37">s</name></expr></argument>, <argument pos:start="1669:40" pos:end="1669:41"><expr pos:start="1669:40" pos:end="1669:41"><name pos:start="1669:40" pos:end="1669:41">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="1673:17" pos:end="1673:53"><expr pos:start="1673:17" pos:end="1673:52"><call pos:start="1673:17" pos:end="1673:52"><name pos:start="1673:17" pos:end="1673:32">tcg_gen_addi_i32</name><argument_list pos:start="1673:33" pos:end="1673:52">(<argument pos:start="1673:34" pos:end="1673:37"><expr pos:start="1673:34" pos:end="1673:37"><name pos:start="1673:34" pos:end="1673:37">addr</name></expr></argument>, <argument pos:start="1673:40" pos:end="1673:43"><expr pos:start="1673:40" pos:end="1673:43"><name pos:start="1673:40" pos:end="1673:43">addr</name></expr></argument>, <argument pos:start="1673:46" pos:end="1673:51"><expr pos:start="1673:46" pos:end="1673:51"><name pos:start="1673:46" pos:end="1673:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1675:17" pos:end="1687:17"><if pos:start="1675:17" pos:end="1681:17">if <condition pos:start="1675:20" pos:end="1675:37">(<expr pos:start="1675:21" pos:end="1675:36"><name pos:start="1675:21" pos:end="1675:24">insn</name> <operator pos:start="1675:26" pos:end="1675:26">&amp;</operator> <operator pos:start="1675:28" pos:end="1675:28">(</operator><literal type="number" pos:start="1675:29" pos:end="1675:29">1</literal> <operator pos:start="1675:31" pos:end="1675:32">&lt;&lt;</operator> <literal type="number" pos:start="1675:34" pos:end="1675:35">20</literal><operator pos:start="1675:36" pos:end="1675:36">)</operator></expr>)</condition> <block pos:start="1675:39" pos:end="1681:17">{<block_content pos:start="1677:21" pos:end="1679:44">

                    <expr_stmt pos:start="1677:21" pos:end="1677:44"><expr pos:start="1677:21" pos:end="1677:43"><call pos:start="1677:21" pos:end="1677:43"><name pos:start="1677:21" pos:end="1677:30">gen_vfp_ld</name><argument_list pos:start="1677:31" pos:end="1677:43">(<argument pos:start="1677:32" pos:end="1677:32"><expr pos:start="1677:32" pos:end="1677:32"><name pos:start="1677:32" pos:end="1677:32">s</name></expr></argument>, <argument pos:start="1677:35" pos:end="1677:36"><expr pos:start="1677:35" pos:end="1677:36"><name pos:start="1677:35" pos:end="1677:36">dp</name></expr></argument>, <argument pos:start="1677:39" pos:end="1677:42"><expr pos:start="1677:39" pos:end="1677:42"><name pos:start="1677:39" pos:end="1677:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1679:21" pos:end="1679:44"><expr pos:start="1679:21" pos:end="1679:43"><call pos:start="1679:21" pos:end="1679:43"><name pos:start="1679:21" pos:end="1679:35">gen_mov_vreg_F0</name><argument_list pos:start="1679:36" pos:end="1679:43">(<argument pos:start="1679:37" pos:end="1679:38"><expr pos:start="1679:37" pos:end="1679:38"><name pos:start="1679:37" pos:end="1679:38">dp</name></expr></argument>, <argument pos:start="1679:41" pos:end="1679:42"><expr pos:start="1679:41" pos:end="1679:42"><name pos:start="1679:41" pos:end="1679:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1681:19" pos:end="1687:17">else <block pos:start="1681:24" pos:end="1687:17">{<block_content pos:start="1683:21" pos:end="1685:44">

                    <expr_stmt pos:start="1683:21" pos:end="1683:44"><expr pos:start="1683:21" pos:end="1683:43"><call pos:start="1683:21" pos:end="1683:43"><name pos:start="1683:21" pos:end="1683:35">gen_mov_F0_vreg</name><argument_list pos:start="1683:36" pos:end="1683:43">(<argument pos:start="1683:37" pos:end="1683:38"><expr pos:start="1683:37" pos:end="1683:38"><name pos:start="1683:37" pos:end="1683:38">dp</name></expr></argument>, <argument pos:start="1683:41" pos:end="1683:42"><expr pos:start="1683:41" pos:end="1683:42"><name pos:start="1683:41" pos:end="1683:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1685:21" pos:end="1685:44"><expr pos:start="1685:21" pos:end="1685:43"><call pos:start="1685:21" pos:end="1685:43"><name pos:start="1685:21" pos:end="1685:30">gen_vfp_st</name><argument_list pos:start="1685:31" pos:end="1685:43">(<argument pos:start="1685:32" pos:end="1685:32"><expr pos:start="1685:32" pos:end="1685:32"><name pos:start="1685:32" pos:end="1685:32">s</name></expr></argument>, <argument pos:start="1685:35" pos:end="1685:36"><expr pos:start="1685:35" pos:end="1685:36"><name pos:start="1685:35" pos:end="1685:36">dp</name></expr></argument>, <argument pos:start="1685:39" pos:end="1685:42"><expr pos:start="1685:39" pos:end="1685:42"><name pos:start="1685:39" pos:end="1685:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="1689:17" pos:end="1689:40"><expr pos:start="1689:17" pos:end="1689:39"><call pos:start="1689:17" pos:end="1689:39"><name pos:start="1689:17" pos:end="1689:33">tcg_temp_free_i32</name><argument_list pos:start="1689:34" pos:end="1689:39">(<argument pos:start="1689:35" pos:end="1689:38"><expr pos:start="1689:35" pos:end="1689:38"><name pos:start="1689:35" pos:end="1689:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1691:15" pos:end="1819:13">else <block pos:start="1691:20" pos:end="1819:13">{<block_content pos:start="1695:17" pos:end="1817:17">

                <comment type="block" pos:start="1693:17" pos:end="1693:41">/* load/store multiple */</comment>

                <decl_stmt pos:start="1695:17" pos:end="1695:41"><decl pos:start="1695:17" pos:end="1695:40"><type pos:start="1695:17" pos:end="1695:19"><name pos:start="1695:17" pos:end="1695:19">int</name></type> <name pos:start="1695:21" pos:end="1695:21">w</name> <init pos:start="1695:23" pos:end="1695:40">= <expr pos:start="1695:25" pos:end="1695:40"><name pos:start="1695:25" pos:end="1695:28">insn</name> <operator pos:start="1695:30" pos:end="1695:30">&amp;</operator> <operator pos:start="1695:32" pos:end="1695:32">(</operator><literal type="number" pos:start="1695:33" pos:end="1695:33">1</literal> <operator pos:start="1695:35" pos:end="1695:36">&lt;&lt;</operator> <literal type="number" pos:start="1695:38" pos:end="1695:39">21</literal><operator pos:start="1695:40" pos:end="1695:40">)</operator></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="1697:17" pos:end="1703:36"><if pos:start="1697:17" pos:end="1699:43">if <condition pos:start="1697:20" pos:end="1697:23">(<expr pos:start="1697:21" pos:end="1697:22"><name pos:start="1697:21" pos:end="1697:22">dp</name></expr>)</condition><block type="pseudo" pos:start="1699:21" pos:end="1699:43"><block_content pos:start="1699:21" pos:end="1699:43">

                    <expr_stmt pos:start="1699:21" pos:end="1699:43"><expr pos:start="1699:21" pos:end="1699:42"><name pos:start="1699:21" pos:end="1699:21">n</name> <operator pos:start="1699:23" pos:end="1699:23">=</operator> <operator pos:start="1699:25" pos:end="1699:25">(</operator><name pos:start="1699:26" pos:end="1699:29">insn</name> <operator pos:start="1699:31" pos:end="1699:32">&gt;&gt;</operator> <literal type="number" pos:start="1699:34" pos:end="1699:34">1</literal><operator pos:start="1699:35" pos:end="1699:35">)</operator> <operator pos:start="1699:37" pos:end="1699:37">&amp;</operator> <literal type="number" pos:start="1699:39" pos:end="1699:42">0x7f</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1701:17" pos:end="1703:36">else<block type="pseudo" pos:start="1703:21" pos:end="1703:36"><block_content pos:start="1703:21" pos:end="1703:36">

                    <expr_stmt pos:start="1703:21" pos:end="1703:36"><expr pos:start="1703:21" pos:end="1703:35"><name pos:start="1703:21" pos:end="1703:21">n</name> <operator pos:start="1703:23" pos:end="1703:23">=</operator> <name pos:start="1703:25" pos:end="1703:28">insn</name> <operator pos:start="1703:30" pos:end="1703:30">&amp;</operator> <literal type="number" pos:start="1703:32" pos:end="1703:35">0xff</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <if_stmt pos:start="1707:17" pos:end="1713:17"><if pos:start="1707:17" pos:end="1713:17">if <condition pos:start="1707:20" pos:end="1707:62">(<expr pos:start="1707:21" pos:end="1707:61"><name pos:start="1707:21" pos:end="1707:21">w</name> <operator pos:start="1707:23" pos:end="1707:24">&amp;&amp;</operator> <operator pos:start="1707:26" pos:end="1707:26">!</operator><operator pos:start="1707:27" pos:end="1707:27">(</operator><operator pos:start="1707:28" pos:end="1707:28">(</operator><operator pos:start="1707:29" pos:end="1707:29">(</operator><name pos:start="1707:30" pos:end="1707:33">insn</name> <operator pos:start="1707:35" pos:end="1707:36">&gt;&gt;</operator> <literal type="number" pos:start="1707:38" pos:end="1707:39">23</literal><operator pos:start="1707:40" pos:end="1707:40">)</operator> <operator pos:start="1707:42" pos:end="1707:42">^</operator> <operator pos:start="1707:44" pos:end="1707:44">(</operator><name pos:start="1707:45" pos:end="1707:48">insn</name> <operator pos:start="1707:50" pos:end="1707:51">&gt;&gt;</operator> <literal type="number" pos:start="1707:53" pos:end="1707:54">24</literal><operator pos:start="1707:55" pos:end="1707:55">)</operator><operator pos:start="1707:56" pos:end="1707:56">)</operator> <operator pos:start="1707:58" pos:end="1707:58">&amp;</operator> <literal type="number" pos:start="1707:60" pos:end="1707:60">1</literal><operator pos:start="1707:61" pos:end="1707:61">)</operator></expr>)</condition> <block pos:start="1707:64" pos:end="1713:17">{<block_content pos:start="1711:21" pos:end="1711:29">

                    <comment type="block" pos:start="1709:21" pos:end="1709:51">/* P == U , W == 1  =&gt; UNDEF */</comment>

                    <return pos:start="1711:21" pos:end="1711:29">return <expr pos:start="1711:28" pos:end="1711:28"><literal type="number" pos:start="1711:28" pos:end="1711:28">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="1715:17" pos:end="1725:17"><if pos:start="1715:17" pos:end="1725:17">if <condition pos:start="1715:20" pos:end="1715:62">(<expr pos:start="1715:21" pos:end="1715:61"><name pos:start="1715:21" pos:end="1715:21">n</name> <operator pos:start="1715:23" pos:end="1715:24">==</operator> <literal type="number" pos:start="1715:26" pos:end="1715:26">0</literal> <operator pos:start="1715:28" pos:end="1715:29">||</operator> <operator pos:start="1715:31" pos:end="1715:31">(</operator><name pos:start="1715:32" pos:end="1715:33">rd</name> <operator pos:start="1715:35" pos:end="1715:35">+</operator> <name pos:start="1715:37" pos:end="1715:37">n</name><operator pos:start="1715:38" pos:end="1715:38">)</operator> <operator pos:start="1715:40" pos:end="1715:40">&gt;</operator> <literal type="number" pos:start="1715:42" pos:end="1715:43">32</literal> <operator pos:start="1715:45" pos:end="1715:46">||</operator> <operator pos:start="1715:48" pos:end="1715:48">(</operator><name pos:start="1715:49" pos:end="1715:50">dp</name> <operator pos:start="1715:52" pos:end="1715:53">&amp;&amp;</operator> <name pos:start="1715:55" pos:end="1715:55">n</name> <operator pos:start="1715:57" pos:end="1715:57">&gt;</operator> <literal type="number" pos:start="1715:59" pos:end="1715:60">16</literal><operator pos:start="1715:61" pos:end="1715:61">)</operator></expr>)</condition> <block pos:start="1715:64" pos:end="1725:17">{<block_content pos:start="1723:21" pos:end="1723:29">

                    <comment type="block" pos:start="1717:21" pos:end="1721:23">/* UNPREDICTABLE cases for bad immediates: we choose to

                     * UNDEF to avoid generating huge numbers of TCG ops

                     */</comment>

                    <return pos:start="1723:21" pos:end="1723:29">return <expr pos:start="1723:28" pos:end="1723:28"><literal type="number" pos:start="1723:28" pos:end="1723:28">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="1727:17" pos:end="1733:17"><if pos:start="1727:17" pos:end="1733:17">if <condition pos:start="1727:20" pos:end="1727:34">(<expr pos:start="1727:21" pos:end="1727:33"><name pos:start="1727:21" pos:end="1727:22">rn</name> <operator pos:start="1727:24" pos:end="1727:25">==</operator> <literal type="number" pos:start="1727:27" pos:end="1727:28">15</literal> <operator pos:start="1727:30" pos:end="1727:31">&amp;&amp;</operator> <name pos:start="1727:33" pos:end="1727:33">w</name></expr>)</condition> <block pos:start="1727:36" pos:end="1733:17">{<block_content pos:start="1731:21" pos:end="1731:29">

                    <comment type="block" pos:start="1729:21" pos:end="1729:78">/* writeback to PC is UNPREDICTABLE, we choose to UNDEF */</comment>

                    <return pos:start="1731:21" pos:end="1731:29">return <expr pos:start="1731:28" pos:end="1731:28"><literal type="number" pos:start="1731:28" pos:end="1731:28">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="1737:17" pos:end="1749:17"><if pos:start="1737:17" pos:end="1745:17">if <condition pos:start="1737:20" pos:end="1737:41">(<expr pos:start="1737:21" pos:end="1737:40"><name pos:start="1737:21" pos:end="1737:28"><name pos:start="1737:21" pos:end="1737:21">s</name><operator pos:start="1737:22" pos:end="1737:23">-&gt;</operator><name pos:start="1737:24" pos:end="1737:28">thumb</name></name> <operator pos:start="1737:30" pos:end="1737:31">&amp;&amp;</operator> <name pos:start="1737:33" pos:end="1737:34">rn</name> <operator pos:start="1737:36" pos:end="1737:37">==</operator> <literal type="number" pos:start="1737:39" pos:end="1737:40">15</literal></expr>)</condition> <block pos:start="1737:43" pos:end="1745:17">{<block_content pos:start="1741:21" pos:end="1743:55">

                    <comment type="block" pos:start="1739:21" pos:end="1739:56">/* This is actually UNPREDICTABLE */</comment>

                    <expr_stmt pos:start="1741:21" pos:end="1741:46"><expr pos:start="1741:21" pos:end="1741:45"><name pos:start="1741:21" pos:end="1741:24">addr</name> <operator pos:start="1741:26" pos:end="1741:26">=</operator> <call pos:start="1741:28" pos:end="1741:45"><name pos:start="1741:28" pos:end="1741:43">tcg_temp_new_i32</name><argument_list pos:start="1741:44" pos:end="1741:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1743:21" pos:end="1743:55"><expr pos:start="1743:21" pos:end="1743:54"><call pos:start="1743:21" pos:end="1743:54"><name pos:start="1743:21" pos:end="1743:36">tcg_gen_movi_i32</name><argument_list pos:start="1743:37" pos:end="1743:54">(<argument pos:start="1743:38" pos:end="1743:41"><expr pos:start="1743:38" pos:end="1743:41"><name pos:start="1743:38" pos:end="1743:41">addr</name></expr></argument>, <argument pos:start="1743:44" pos:end="1743:53"><expr pos:start="1743:44" pos:end="1743:53"><name pos:start="1743:44" pos:end="1743:48"><name pos:start="1743:44" pos:end="1743:44">s</name><operator pos:start="1743:45" pos:end="1743:46">-&gt;</operator><name pos:start="1743:47" pos:end="1743:48">pc</name></name> <operator pos:start="1743:50" pos:end="1743:50">&amp;</operator> <operator pos:start="1743:52" pos:end="1743:52">~</operator><literal type="number" pos:start="1743:53" pos:end="1743:53">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1745:19" pos:end="1749:17">else <block pos:start="1745:24" pos:end="1749:17">{<block_content pos:start="1747:21" pos:end="1747:43">

                    <expr_stmt pos:start="1747:21" pos:end="1747:43"><expr pos:start="1747:21" pos:end="1747:42"><name pos:start="1747:21" pos:end="1747:24">addr</name> <operator pos:start="1747:26" pos:end="1747:26">=</operator> <call pos:start="1747:28" pos:end="1747:42"><name pos:start="1747:28" pos:end="1747:35">load_reg</name><argument_list pos:start="1747:36" pos:end="1747:42">(<argument pos:start="1747:37" pos:end="1747:37"><expr pos:start="1747:37" pos:end="1747:37"><name pos:start="1747:37" pos:end="1747:37">s</name></expr></argument>, <argument pos:start="1747:40" pos:end="1747:41"><expr pos:start="1747:40" pos:end="1747:41"><name pos:start="1747:40" pos:end="1747:41">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="1751:17" pos:end="1753:72"><if pos:start="1751:17" pos:end="1753:72">if <condition pos:start="1751:20" pos:end="1751:37">(<expr pos:start="1751:21" pos:end="1751:36"><name pos:start="1751:21" pos:end="1751:24">insn</name> <operator pos:start="1751:26" pos:end="1751:26">&amp;</operator> <operator pos:start="1751:28" pos:end="1751:28">(</operator><literal type="number" pos:start="1751:29" pos:end="1751:29">1</literal> <operator pos:start="1751:31" pos:end="1751:32">&lt;&lt;</operator> <literal type="number" pos:start="1751:34" pos:end="1751:35">24</literal><operator pos:start="1751:36" pos:end="1751:36">)</operator></expr>)</condition><block type="pseudo" pos:start="1753:21" pos:end="1753:72"><block_content pos:start="1753:21" pos:end="1753:72"> <comment type="block" pos:start="1751:39" pos:end="1751:57">/* pre-decrement */</comment>

                    <expr_stmt pos:start="1753:21" pos:end="1753:72"><expr pos:start="1753:21" pos:end="1753:71"><call pos:start="1753:21" pos:end="1753:71"><name pos:start="1753:21" pos:end="1753:36">tcg_gen_addi_i32</name><argument_list pos:start="1753:37" pos:end="1753:71">(<argument pos:start="1753:38" pos:end="1753:41"><expr pos:start="1753:38" pos:end="1753:41"><name pos:start="1753:38" pos:end="1753:41">addr</name></expr></argument>, <argument pos:start="1753:44" pos:end="1753:47"><expr pos:start="1753:44" pos:end="1753:47"><name pos:start="1753:44" pos:end="1753:47">addr</name></expr></argument>, <argument pos:start="1753:50" pos:end="1753:70"><expr pos:start="1753:50" pos:end="1753:70"><operator pos:start="1753:50" pos:end="1753:50">-</operator><operator pos:start="1753:51" pos:end="1753:51">(</operator><operator pos:start="1753:52" pos:end="1753:52">(</operator><name pos:start="1753:53" pos:end="1753:56">insn</name> <operator pos:start="1753:58" pos:end="1753:58">&amp;</operator> <literal type="number" pos:start="1753:60" pos:end="1753:63">0xff</literal><operator pos:start="1753:64" pos:end="1753:64">)</operator> <operator pos:start="1753:66" pos:end="1753:67">&lt;&lt;</operator> <literal type="number" pos:start="1753:69" pos:end="1753:69">2</literal><operator pos:start="1753:70" pos:end="1753:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="1757:17" pos:end="1763:31"><if pos:start="1757:17" pos:end="1759:31">if <condition pos:start="1757:20" pos:end="1757:23">(<expr pos:start="1757:21" pos:end="1757:22"><name pos:start="1757:21" pos:end="1757:22">dp</name></expr>)</condition><block type="pseudo" pos:start="1759:21" pos:end="1759:31"><block_content pos:start="1759:21" pos:end="1759:31">

                    <expr_stmt pos:start="1759:21" pos:end="1759:31"><expr pos:start="1759:21" pos:end="1759:30"><name pos:start="1759:21" pos:end="1759:26">offset</name> <operator pos:start="1759:28" pos:end="1759:28">=</operator> <literal type="number" pos:start="1759:30" pos:end="1759:30">8</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1761:17" pos:end="1763:31">else<block type="pseudo" pos:start="1763:21" pos:end="1763:31"><block_content pos:start="1763:21" pos:end="1763:31">

                    <expr_stmt pos:start="1763:21" pos:end="1763:31"><expr pos:start="1763:21" pos:end="1763:30"><name pos:start="1763:21" pos:end="1763:26">offset</name> <operator pos:start="1763:28" pos:end="1763:28">=</operator> <literal type="number" pos:start="1763:30" pos:end="1763:30">4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <for pos:start="1765:17" pos:end="1787:17">for <control pos:start="1765:21" pos:end="1765:39">(<init pos:start="1765:22" pos:end="1765:27"><expr pos:start="1765:22" pos:end="1765:26"><name pos:start="1765:22" pos:end="1765:22">i</name> <operator pos:start="1765:24" pos:end="1765:24">=</operator> <literal type="number" pos:start="1765:26" pos:end="1765:26">0</literal></expr>;</init> <condition pos:start="1765:29" pos:end="1765:34"><expr pos:start="1765:29" pos:end="1765:33"><name pos:start="1765:29" pos:end="1765:29">i</name> <operator pos:start="1765:31" pos:end="1765:31">&lt;</operator> <name pos:start="1765:33" pos:end="1765:33">n</name></expr>;</condition> <incr pos:start="1765:36" pos:end="1765:38"><expr pos:start="1765:36" pos:end="1765:38"><name pos:start="1765:36" pos:end="1765:36">i</name><operator pos:start="1765:37" pos:end="1765:38">++</operator></expr></incr>)</control> <block pos:start="1765:41" pos:end="1787:17">{<block_content pos:start="1767:21" pos:end="1785:57">

                    <if_stmt pos:start="1767:21" pos:end="1783:21"><if pos:start="1767:21" pos:end="1775:21">if <condition pos:start="1767:24" pos:end="1767:45">(<expr pos:start="1767:25" pos:end="1767:44"><name pos:start="1767:25" pos:end="1767:28">insn</name> <operator pos:start="1767:30" pos:end="1767:30">&amp;</operator> <name pos:start="1767:32" pos:end="1767:44">ARM_CP_RW_BIT</name></expr>)</condition> <block pos:start="1767:47" pos:end="1775:21">{<block_content pos:start="1771:25" pos:end="1773:52">

                        <comment type="block" pos:start="1769:25" pos:end="1769:34">/* load */</comment>

                        <expr_stmt pos:start="1771:25" pos:end="1771:48"><expr pos:start="1771:25" pos:end="1771:47"><call pos:start="1771:25" pos:end="1771:47"><name pos:start="1771:25" pos:end="1771:34">gen_vfp_ld</name><argument_list pos:start="1771:35" pos:end="1771:47">(<argument pos:start="1771:36" pos:end="1771:36"><expr pos:start="1771:36" pos:end="1771:36"><name pos:start="1771:36" pos:end="1771:36">s</name></expr></argument>, <argument pos:start="1771:39" pos:end="1771:40"><expr pos:start="1771:39" pos:end="1771:40"><name pos:start="1771:39" pos:end="1771:40">dp</name></expr></argument>, <argument pos:start="1771:43" pos:end="1771:46"><expr pos:start="1771:43" pos:end="1771:46"><name pos:start="1771:43" pos:end="1771:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1773:25" pos:end="1773:52"><expr pos:start="1773:25" pos:end="1773:51"><call pos:start="1773:25" pos:end="1773:51"><name pos:start="1773:25" pos:end="1773:39">gen_mov_vreg_F0</name><argument_list pos:start="1773:40" pos:end="1773:51">(<argument pos:start="1773:41" pos:end="1773:42"><expr pos:start="1773:41" pos:end="1773:42"><name pos:start="1773:41" pos:end="1773:42">dp</name></expr></argument>, <argument pos:start="1773:45" pos:end="1773:50"><expr pos:start="1773:45" pos:end="1773:50"><name pos:start="1773:45" pos:end="1773:46">rd</name> <operator pos:start="1773:48" pos:end="1773:48">+</operator> <name pos:start="1773:50" pos:end="1773:50">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1775:23" pos:end="1783:21">else <block pos:start="1775:28" pos:end="1783:21">{<block_content pos:start="1779:25" pos:end="1781:48">

                        <comment type="block" pos:start="1777:25" pos:end="1777:35">/* store */</comment>

                        <expr_stmt pos:start="1779:25" pos:end="1779:52"><expr pos:start="1779:25" pos:end="1779:51"><call pos:start="1779:25" pos:end="1779:51"><name pos:start="1779:25" pos:end="1779:39">gen_mov_F0_vreg</name><argument_list pos:start="1779:40" pos:end="1779:51">(<argument pos:start="1779:41" pos:end="1779:42"><expr pos:start="1779:41" pos:end="1779:42"><name pos:start="1779:41" pos:end="1779:42">dp</name></expr></argument>, <argument pos:start="1779:45" pos:end="1779:50"><expr pos:start="1779:45" pos:end="1779:50"><name pos:start="1779:45" pos:end="1779:46">rd</name> <operator pos:start="1779:48" pos:end="1779:48">+</operator> <name pos:start="1779:50" pos:end="1779:50">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1781:25" pos:end="1781:48"><expr pos:start="1781:25" pos:end="1781:47"><call pos:start="1781:25" pos:end="1781:47"><name pos:start="1781:25" pos:end="1781:34">gen_vfp_st</name><argument_list pos:start="1781:35" pos:end="1781:47">(<argument pos:start="1781:36" pos:end="1781:36"><expr pos:start="1781:36" pos:end="1781:36"><name pos:start="1781:36" pos:end="1781:36">s</name></expr></argument>, <argument pos:start="1781:39" pos:end="1781:40"><expr pos:start="1781:39" pos:end="1781:40"><name pos:start="1781:39" pos:end="1781:40">dp</name></expr></argument>, <argument pos:start="1781:43" pos:end="1781:46"><expr pos:start="1781:43" pos:end="1781:46"><name pos:start="1781:43" pos:end="1781:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="1785:21" pos:end="1785:57"><expr pos:start="1785:21" pos:end="1785:56"><call pos:start="1785:21" pos:end="1785:56"><name pos:start="1785:21" pos:end="1785:36">tcg_gen_addi_i32</name><argument_list pos:start="1785:37" pos:end="1785:56">(<argument pos:start="1785:38" pos:end="1785:41"><expr pos:start="1785:38" pos:end="1785:41"><name pos:start="1785:38" pos:end="1785:41">addr</name></expr></argument>, <argument pos:start="1785:44" pos:end="1785:47"><expr pos:start="1785:44" pos:end="1785:47"><name pos:start="1785:44" pos:end="1785:47">addr</name></expr></argument>, <argument pos:start="1785:50" pos:end="1785:55"><expr pos:start="1785:50" pos:end="1785:55"><name pos:start="1785:50" pos:end="1785:55">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="1789:17" pos:end="1817:17"><if pos:start="1789:17" pos:end="1813:17">if <condition pos:start="1789:20" pos:end="1789:22">(<expr pos:start="1789:21" pos:end="1789:21"><name pos:start="1789:21" pos:end="1789:21">w</name></expr>)</condition> <block pos:start="1789:24" pos:end="1813:17">{<block_content pos:start="1793:21" pos:end="1811:43">

                    <comment type="block" pos:start="1791:21" pos:end="1791:35">/* writeback */</comment>

                    <if_stmt pos:start="1793:21" pos:end="1803:35"><if pos:start="1793:21" pos:end="1795:45">if <condition pos:start="1793:24" pos:end="1793:41">(<expr pos:start="1793:25" pos:end="1793:40"><name pos:start="1793:25" pos:end="1793:28">insn</name> <operator pos:start="1793:30" pos:end="1793:30">&amp;</operator> <operator pos:start="1793:32" pos:end="1793:32">(</operator><literal type="number" pos:start="1793:33" pos:end="1793:33">1</literal> <operator pos:start="1793:35" pos:end="1793:36">&lt;&lt;</operator> <literal type="number" pos:start="1793:38" pos:end="1793:39">24</literal><operator pos:start="1793:40" pos:end="1793:40">)</operator></expr>)</condition><block type="pseudo" pos:start="1795:25" pos:end="1795:45"><block_content pos:start="1795:25" pos:end="1795:45">

                        <expr_stmt pos:start="1795:25" pos:end="1795:45"><expr pos:start="1795:25" pos:end="1795:44"><name pos:start="1795:25" pos:end="1795:30">offset</name> <operator pos:start="1795:32" pos:end="1795:32">=</operator> <operator pos:start="1795:34" pos:end="1795:34">-</operator><name pos:start="1795:35" pos:end="1795:40">offset</name> <operator pos:start="1795:42" pos:end="1795:42">*</operator> <name pos:start="1795:44" pos:end="1795:44">n</name></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="1797:21" pos:end="1799:35">else if <condition pos:start="1797:29" pos:end="1797:46">(<expr pos:start="1797:30" pos:end="1797:45"><name pos:start="1797:30" pos:end="1797:31">dp</name> <operator pos:start="1797:33" pos:end="1797:34">&amp;&amp;</operator> <operator pos:start="1797:36" pos:end="1797:36">(</operator><name pos:start="1797:37" pos:end="1797:40">insn</name> <operator pos:start="1797:42" pos:end="1797:42">&amp;</operator> <literal type="number" pos:start="1797:44" pos:end="1797:44">1</literal><operator pos:start="1797:45" pos:end="1797:45">)</operator></expr>)</condition><block type="pseudo" pos:start="1799:25" pos:end="1799:35"><block_content pos:start="1799:25" pos:end="1799:35">

                        <expr_stmt pos:start="1799:25" pos:end="1799:35"><expr pos:start="1799:25" pos:end="1799:34"><name pos:start="1799:25" pos:end="1799:30">offset</name> <operator pos:start="1799:32" pos:end="1799:32">=</operator> <literal type="number" pos:start="1799:34" pos:end="1799:34">4</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="1801:21" pos:end="1803:35">else<block type="pseudo" pos:start="1803:25" pos:end="1803:35"><block_content pos:start="1803:25" pos:end="1803:35">

                        <expr_stmt pos:start="1803:25" pos:end="1803:35"><expr pos:start="1803:25" pos:end="1803:34"><name pos:start="1803:25" pos:end="1803:30">offset</name> <operator pos:start="1803:32" pos:end="1803:32">=</operator> <literal type="number" pos:start="1803:34" pos:end="1803:34">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <if_stmt pos:start="1807:21" pos:end="1809:61"><if pos:start="1807:21" pos:end="1809:61">if <condition pos:start="1807:24" pos:end="1807:36">(<expr pos:start="1807:25" pos:end="1807:35"><name pos:start="1807:25" pos:end="1807:30">offset</name> <operator pos:start="1807:32" pos:end="1807:33">!=</operator> <literal type="number" pos:start="1807:35" pos:end="1807:35">0</literal></expr>)</condition><block type="pseudo" pos:start="1809:25" pos:end="1809:61"><block_content pos:start="1809:25" pos:end="1809:61">

                        <expr_stmt pos:start="1809:25" pos:end="1809:61"><expr pos:start="1809:25" pos:end="1809:60"><call pos:start="1809:25" pos:end="1809:60"><name pos:start="1809:25" pos:end="1809:40">tcg_gen_addi_i32</name><argument_list pos:start="1809:41" pos:end="1809:60">(<argument pos:start="1809:42" pos:end="1809:45"><expr pos:start="1809:42" pos:end="1809:45"><name pos:start="1809:42" pos:end="1809:45">addr</name></expr></argument>, <argument pos:start="1809:48" pos:end="1809:51"><expr pos:start="1809:48" pos:end="1809:51"><name pos:start="1809:48" pos:end="1809:51">addr</name></expr></argument>, <argument pos:start="1809:54" pos:end="1809:59"><expr pos:start="1809:54" pos:end="1809:59"><name pos:start="1809:54" pos:end="1809:59">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="1811:21" pos:end="1811:43"><expr pos:start="1811:21" pos:end="1811:42"><call pos:start="1811:21" pos:end="1811:42"><name pos:start="1811:21" pos:end="1811:29">store_reg</name><argument_list pos:start="1811:30" pos:end="1811:42">(<argument pos:start="1811:31" pos:end="1811:31"><expr pos:start="1811:31" pos:end="1811:31"><name pos:start="1811:31" pos:end="1811:31">s</name></expr></argument>, <argument pos:start="1811:34" pos:end="1811:35"><expr pos:start="1811:34" pos:end="1811:35"><name pos:start="1811:34" pos:end="1811:35">rn</name></expr></argument>, <argument pos:start="1811:38" pos:end="1811:41"><expr pos:start="1811:38" pos:end="1811:41"><name pos:start="1811:38" pos:end="1811:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1813:19" pos:end="1817:17">else <block pos:start="1813:24" pos:end="1817:17">{<block_content pos:start="1815:21" pos:end="1815:44">

                    <expr_stmt pos:start="1815:21" pos:end="1815:44"><expr pos:start="1815:21" pos:end="1815:43"><call pos:start="1815:21" pos:end="1815:43"><name pos:start="1815:21" pos:end="1815:37">tcg_temp_free_i32</name><argument_list pos:start="1815:38" pos:end="1815:43">(<argument pos:start="1815:39" pos:end="1815:42"><expr pos:start="1815:39" pos:end="1815:42"><name pos:start="1815:39" pos:end="1815:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="1823:9" pos:end="1823:14">break;</break>

    <default pos:start="1825:5" pos:end="1825:12">default:</default>

        <comment type="block" pos:start="1827:9" pos:end="1827:35">/* Should never happen.  */</comment>

        <return pos:start="1829:9" pos:end="1829:17">return <expr pos:start="1829:16" pos:end="1829:16"><literal type="number" pos:start="1829:16" pos:end="1829:16">1</literal></expr>;</return>

    </block_content>}</block></switch>

    <return pos:start="1833:5" pos:end="1833:13">return <expr pos:start="1833:12" pos:end="1833:12"><literal type="number" pos:start="1833:12" pos:end="1833:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
